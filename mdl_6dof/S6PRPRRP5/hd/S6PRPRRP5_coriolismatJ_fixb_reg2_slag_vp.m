% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:16:50
% EndTime: 2019-03-08 20:17:02
% DurationCPUTime: 9.75s
% Computational Cost: add. (5382->520), mult. (12777->736), div. (0->0), fcn. (12494->8), ass. (0->430)
t465 = cos(qJ(4));
t675 = t465 * pkin(4);
t462 = sin(qJ(4));
t677 = t462 * pkin(9);
t401 = t675 + t677;
t464 = cos(qJ(5));
t385 = t464 * t401;
t461 = sin(qJ(5));
t467 = -pkin(2) - pkin(8);
t614 = t465 * t467;
t554 = t461 * t614;
t297 = t385 - t554;
t384 = t461 * t401;
t409 = t464 * t614;
t298 = t409 + t384;
t678 = t462 * pkin(4);
t506 = -pkin(9) * t465 + t678;
t493 = qJ(3) + t506;
t615 = t464 * t467;
t556 = t462 * t615;
t292 = t461 * t493 + t556;
t648 = t292 * t465;
t365 = t464 * t493;
t620 = t462 * t467;
t291 = t461 * t620 - t365;
t649 = t291 * t465;
t682 = t462 / 0.2e1;
t683 = -t462 / 0.2e1;
t61 = -t462 * t614 + (t298 * t682 + t648 / 0.2e1) * t464 + (t297 * t683 + t649 / 0.2e1) * t461;
t455 = t461 ^ 2;
t457 = t464 ^ 2;
t424 = t457 + t455;
t621 = t462 * t465;
t277 = (-0.1e1 + t424) * t621;
t686 = -t457 / 0.2e1;
t332 = (0.1e1 / 0.2e1 + t686 - t455 / 0.2e1) * t462;
t460 = cos(pkin(6));
t459 = sin(pkin(6));
t466 = cos(qJ(2));
t632 = t459 * t466;
t347 = t460 * t462 + t465 * t632;
t558 = t462 * t632;
t631 = t460 * t465;
t348 = -t558 + t631;
t463 = sin(qJ(2));
t633 = t459 * t463;
t403 = t461 * t633;
t599 = t348 * t464 + t403;
t517 = t599 * t464;
t619 = t463 * t464;
t561 = t459 * t619;
t647 = t348 * t461;
t236 = -t561 + t647;
t650 = t236 * t461;
t477 = t517 / 0.2e1 + t650 / 0.2e1;
t679 = -t465 / 0.2e1;
t537 = t348 * t679;
t39 = t332 * t347 + t465 * t477 + t537;
t665 = t39 * qJD(1) + t277 * qJD(3);
t709 = -t61 * qJD(2) - t665;
t626 = t461 * t467;
t519 = pkin(5) - t626;
t616 = t464 * t465;
t555 = qJ(6) * t616;
t212 = t462 * t519 + t365 - t555;
t627 = t461 * t465;
t177 = t212 * t627;
t618 = t464 * qJ(6);
t222 = t462 * t618 + t465 * t519 + t385;
t625 = t462 * qJ(6);
t239 = t461 * t625 + t298;
t680 = t464 / 0.2e1;
t685 = -t461 / 0.2e1;
t518 = t461 * pkin(5) - t467;
t368 = t518 * t465;
t692 = t368 / 0.2e1;
t470 = (t222 * t685 + t239 * t680 + t692) * t462 - t177 / 0.2e1;
t673 = pkin(9) + qJ(6);
t398 = t673 * t464;
t630 = t461 * t398;
t367 = t518 * t462;
t646 = t367 * t465;
t233 = -qJ(6) * t627 + t292;
t651 = t233 * t465;
t397 = t673 * t461;
t691 = t397 / 0.2e1;
t18 = t646 / 0.2e1 - t630 / 0.2e1 + (t651 / 0.2e1 + t691) * t464 + t470;
t708 = t18 * qJD(2) + t665;
t521 = t455 / 0.2e1 + t686;
t360 = t521 * t465;
t707 = t599 * t682;
t232 = t291 + t555;
t706 = t232 + t212;
t125 = t648 + (t298 - 0.2e1 * t409) * t462;
t535 = -t633 / 0.2e1;
t77 = (t461 * t535 + t403 / 0.2e1) * t465;
t606 = t77 * qJD(1);
t705 = -t125 * qJD(2) - t606;
t124 = -t649 + (t297 + 0.2e1 * t554) * t462;
t534 = t633 / 0.2e1;
t694 = t236 / 0.2e1;
t78 = (t464 * t534 + t694 - t647 / 0.2e1) * t465;
t605 = t78 * qJD(1);
t704 = t124 * qJD(2) - t605;
t144 = -t291 * t464 + t292 * t461;
t458 = t465 ^ 2;
t612 = t466 * t464;
t623 = t462 * t463;
t301 = (-t461 * t623 + t612) * t459;
t613 = t466 * t461;
t302 = (t462 * t619 + t613) * t459;
t488 = t301 * t685 + t302 * t680;
t469 = t458 * t534 + t462 * t488;
t681 = -t464 / 0.2e1;
t684 = t461 / 0.2e1;
t478 = t236 * t681 + t599 * t684;
t52 = t469 - t478;
t611 = t52 * qJD(1);
t703 = qJD(2) * t144 - t611;
t652 = t233 * t461;
t654 = t212 * t464;
t113 = t652 + t654;
t702 = qJD(2) * t113 - t611;
t644 = t368 * t464;
t83 = t651 + t367 * t616 + (t239 + t644) * t462;
t701 = -t83 * qJD(2) - t606;
t82 = t212 * t465 + t222 * t462 + (-t368 * t462 - t646) * t461;
t700 = t82 * qJD(2) - t605;
t538 = t236 * t683;
t693 = t301 / 0.2e1;
t67 = (t538 - t302 / 0.2e1) * t464 + (t693 + t707) * t461;
t607 = t67 * qJD(1);
t629 = t461 * t462;
t241 = t292 * t629;
t622 = t462 * t464;
t81 = t291 * t622 - t241 + (t297 * t464 + t298 * t461) * t465;
t699 = t81 * qJD(2) - t607;
t178 = t212 * t622;
t201 = t233 * t629;
t43 = -t178 - t201 + (t222 * t464 + t239 * t461) * t465;
t698 = -t43 * qJD(2) + t607;
t56 = (t348 - t517 - t650) * t347;
t672 = t56 * qJD(1) + t39 * qJD(3);
t522 = t232 / 0.2e1 + t212 / 0.2e1;
t425 = t457 - t455;
t557 = t461 * t616;
t515 = 0.2e1 * t557;
t312 = qJD(2) * t515 - qJD(4) * t425;
t696 = t222 / 0.2e1;
t690 = -t398 / 0.2e1;
t446 = t458 * t464;
t689 = -t446 / 0.2e1;
t456 = t462 ^ 2;
t687 = t456 / 0.2e1;
t676 = t464 * pkin(5);
t53 = t469 + t478;
t560 = t465 * t633;
t59 = -t236 * t301 + t302 * t599 - t347 * t560;
t609 = t59 * qJD(1);
t670 = t53 * qJD(3) + t609;
t669 = -t52 * qJD(3) - t609;
t667 = t39 * qJD(4);
t520 = t687 + t458 / 0.2e1;
t331 = (-0.1e1 / 0.2e1 - t520) * t461;
t529 = -t623 / 0.2e1;
t475 = (t464 * t529 - t613 / 0.2e1) * t459;
t532 = t627 / 0.2e1;
t485 = t347 * t532 + t538;
t99 = t475 + t485;
t600 = t99 * qJD(1);
t663 = t331 * qJD(3) + t600;
t333 = t446 / 0.2e1 + (0.1e1 / 0.2e1 + t687) * t464;
t525 = -t616 / 0.2e1;
t509 = t347 * t525;
t474 = t509 + t707;
t476 = (t461 * t529 + t612 / 0.2e1) * t459;
t98 = t476 + t474;
t601 = t98 * qJD(1);
t662 = t333 * qJD(3) + t601;
t634 = t458 * t461;
t334 = t456 * t684 + t634 / 0.2e1 + t685;
t661 = t334 * qJD(3) - t600;
t617 = t464 * t456;
t336 = -t617 / 0.2e1 + t689 + t680;
t660 = t336 * qJD(3) - t601;
t533 = -t629 / 0.2e1;
t132 = t241 / 0.2e1 + t292 * t533;
t659 = t61 * qJD(4) - t132 * qJD(5);
t563 = pkin(5) * t682;
t26 = (t563 + t522) * t464;
t658 = qJD(2) * t26;
t523 = -t178 / 0.2e1 - t201 / 0.2e1;
t539 = t652 / 0.2e1;
t653 = t232 * t462;
t31 = t462 * t539 + (-t653 / 0.2e1 + (-t458 / 0.2e1 - 0.1e1 / 0.2e1) * pkin(5)) * t464 + t523;
t657 = qJD(2) * t31;
t44 = -t232 * t627 - t177;
t656 = qJD(2) * t44;
t168 = t347 * t461;
t170 = t347 * t464;
t645 = t368 * t461;
t641 = t397 * t462;
t640 = t397 * t465;
t639 = t398 * t462;
t638 = t398 * t465;
t447 = -pkin(4) - t676;
t636 = t447 * t461;
t635 = t447 * t464;
t628 = t461 * t464;
t624 = t462 * t447;
t423 = t456 - t458;
t123 = -t233 * t462 + (pkin(5) * t634 + t368 * t465) * t464;
t597 = qJD(2) * t123;
t130 = -t457 * t458 * pkin(5) + t368 * t627 - t653;
t596 = qJD(2) * t130;
t595 = qJD(2) * t132;
t202 = -t291 * t462 - t458 * t626;
t593 = qJD(2) * t202;
t203 = -t292 * t462 - t458 * t615;
t592 = qJD(2) * t203;
t382 = t423 * t461;
t591 = qJD(2) * t382;
t383 = -t446 + t617;
t590 = qJD(2) * t383;
t589 = qJD(2) * t459;
t588 = qJD(3) * t132;
t587 = qJD(3) * t462;
t586 = qJD(4) * t461;
t585 = qJD(4) * t464;
t584 = qJD(5) * t233;
t583 = qJD(5) * t398;
t582 = qJD(5) * t461;
t449 = qJD(5) * t464;
t581 = qJD(6) * t461;
t580 = qJD(6) * t464;
t579 = qJD(6) * t465;
t133 = (-t347 * t465 + t348 * t462 + t632) * t633;
t576 = t133 * qJD(1);
t315 = t331 * qJD(2);
t317 = t333 * qJD(2);
t574 = t360 * qJD(5);
t379 = t424 * t458;
t573 = t379 * qJD(2);
t381 = t424 * t465;
t572 = t381 * qJD(2);
t571 = t423 * qJD(2);
t570 = t424 * qJD(4);
t569 = t462 * qJD(2);
t568 = t462 * qJD(4);
t567 = t465 * qJD(2);
t566 = t465 * qJD(4);
t565 = t465 * qJD(5);
t363 = -t384 / 0.2e1;
t564 = t363 - t409 / 0.2e1;
t562 = t676 / 0.2e1;
t559 = t467 * t633;
t553 = qJ(3) * t569;
t552 = qJ(3) * t567;
t551 = t461 * t585;
t550 = t461 * t566;
t549 = t464 * t566;
t548 = t462 * t582;
t547 = t461 * t565;
t546 = t462 * t449;
t545 = t464 * t565;
t544 = t464 * t579;
t421 = t463 * t589;
t543 = t466 * t589;
t435 = t461 * t449;
t542 = t462 * t580;
t438 = t462 * t566;
t541 = t462 * t567;
t540 = t232 * t681;
t536 = -t645 / 0.2e1;
t531 = -t626 / 0.2e1;
t530 = -t625 / 0.2e1;
t528 = -t620 / 0.2e1;
t527 = t620 / 0.2e1;
t526 = t618 / 0.2e1;
t524 = t616 / 0.2e1;
t516 = t424 * t347;
t514 = t599 * qJD(5);
t253 = (-0.1e1 / 0.2e1 + t520) * t633;
t453 = qJD(2) * qJ(3);
t513 = qJD(1) * t253 - t453;
t512 = pkin(5) * t524;
t511 = qJD(5) + t569;
t510 = t458 * t435;
t508 = t465 * t535;
t507 = t465 * t534;
t505 = t599 * t679;
t504 = qJD(4) * t515;
t502 = t233 * t680 + t367 / 0.2e1;
t501 = -t638 / 0.2e1 - t212 / 0.2e1;
t468 = (t212 * t684 - t502) * t347 - t236 * t222 / 0.2e1 + t348 * t692 + t599 * t239 / 0.2e1;
t471 = t301 * t691 + t302 * t690 + t447 * t507;
t3 = t468 + t471;
t40 = t212 * t222 + t233 * t239 - t367 * t368;
t500 = t3 * qJD(1) + t40 * qJD(2);
t45 = t368 * pkin(5) * t616 - t233 * t706;
t473 = t522 * t599;
t8 = (t693 + t509) * pkin(5) + t473;
t499 = -qJD(1) * t8 + qJD(2) * t45;
t498 = -t297 * t461 + t298 * t464;
t262 = t397 * t461 + t398 * t464;
t102 = t113 * t465;
t92 = (t535 + t478) * t465;
t497 = -qJD(1) * t92 - qJD(2) * t102;
t484 = t447 * t525 + t536;
t14 = t522 * t398 + (t696 + t484) * pkin(5);
t148 = pkin(5) * t636;
t496 = -qJD(2) * t14 + qJD(4) * t148;
t343 = pkin(5) * t628 - t636;
t364 = t385 / 0.2e1;
t85 = t364 + t536 + (t526 + t398 / 0.2e1) * t462 + (t531 - t635 / 0.2e1 + (0.1e1 - t521) * pkin(5)) * t465;
t495 = -qJD(2) * t85 - qJD(4) * t343;
t361 = t455 * pkin(5) + t635;
t482 = -pkin(5) * t557 - t644 / 0.2e1 - t641 / 0.2e1;
t88 = (t530 + t447 * t465 / 0.2e1) * t461 + t482 + t564;
t494 = -qJD(2) * t88 + qJD(4) * t361;
t492 = t677 / 0.2e1 + t675 / 0.2e1;
t486 = t492 * t461;
t234 = t384 / 0.2e1 + t486;
t491 = pkin(4) * t585 - qJD(2) * t234;
t487 = t492 * t464;
t235 = -t385 / 0.2e1 - t487;
t490 = pkin(4) * t586 - qJD(2) * t235;
t489 = (t233 / 0.2e1 + t640 / 0.2e1) * t464;
t324 = t511 * t627;
t274 = -qJD(2) * t360 + t551;
t378 = t464 * t567 + t586;
t376 = t461 * t567 - t585;
t483 = t631 / 0.2e1 - t558 / 0.2e1;
t257 = qJD(2) * t458 * t628 + qJD(4) * t360;
t380 = t425 * t458;
t270 = qJD(2) * t380 + t504;
t481 = t488 * pkin(9);
t479 = t297 * t694 - t599 * t298 / 0.2e1;
t6 = (pkin(4) * t534 + t348 * t467 / 0.2e1) * t465 + t481 + (t291 * t684 + t292 * t680 + t528) * t347 + t479;
t84 = -t467 ^ 2 * t621 - t291 * t297 + t292 * t298;
t480 = -t6 * qJD(1) + t84 * qJD(2) + t61 * qJD(3);
t71 = t528 + t489 + (t563 + t501) * t461;
t90 = -t477 + t483;
t472 = -qJD(1) * t90 + qJD(2) * t71 - qJD(3) * t332 + qJD(4) * t262;
t454 = qJ(3) * qJD(3);
t445 = -t567 / 0.2e1;
t444 = t567 / 0.2e1;
t443 = t566 / 0.2e1;
t437 = t464 * t569;
t436 = t464 * t587;
t434 = t461 * t569;
t422 = qJ(3) * t632;
t400 = t425 * qJD(5);
t387 = t458 * t559;
t377 = t437 + t449;
t375 = -t434 - t582;
t366 = (t569 + qJD(5) / 0.2e1) * t465;
t355 = t378 * pkin(5);
t353 = t381 * qJD(3);
t351 = t381 * qJD(4);
t350 = t461 * t568 - t545;
t349 = -t464 * t568 - t547;
t335 = (0.1e1 + t424) * t682;
t326 = t511 * t616;
t325 = t378 * t462;
t323 = t376 * t462;
t304 = -t438 * t457 - t510;
t303 = -t438 * t455 + t510;
t296 = t550 - t590;
t295 = t546 + t590;
t294 = -t548 - t591;
t293 = t549 + t591;
t272 = -qJD(4) * t383 - t462 * t547;
t271 = qJD(4) * t382 - t462 * t545;
t268 = -0.2e1 * t464 * t324;
t265 = t277 * qJD(4);
t256 = t457 * t541 - t574;
t255 = t455 * t541 + t574;
t254 = t520 * t633 + t534;
t250 = -qJD(5) * t333 - t437;
t249 = qJD(5) * t336 + t437;
t248 = qJD(5) * t334 - t434;
t247 = -qJD(5) * t331 + t434;
t246 = -qJD(5) * t380 + t462 * t504;
t205 = -t546 - t550 - t317;
t204 = t548 - t549 - t315;
t190 = -t574 + (-t457 * t567 - t551) * t462;
t189 = t574 + (-t455 * t567 + t551) * t462;
t184 = t364 - t487 - t554;
t183 = -t409 + t363 + t486;
t182 = t312 * t462 - 0.2e1 * t465 * t435;
t179 = pkin(5) * t627;
t101 = t476 - t474;
t100 = t475 - t485;
t93 = t236 * t524 + t461 * t505 + t508;
t91 = t477 + t483;
t89 = -t447 * t627 / 0.2e1 + t461 * t530 - t482 + t564;
t86 = -t639 / 0.2e1 + t364 + t462 * t526 + (pkin(5) + t531) * t465 - t484 + pkin(5) * t360;
t80 = t348 * t524 + t461 * t508 + t505;
t79 = t236 * t679 + t348 * t532 + t464 * t507;
t70 = pkin(5) * t533 + t461 * t501 + t489 + t527;
t66 = t462 * t478 + t488;
t65 = qJD(2) * t99;
t64 = qJD(2) * t98;
t42 = t101 * qJD(2) + t168 * qJD(4) - t514;
t41 = qJD(2) * t100 + qJD(4) * t170 + qJD(5) * t236;
t33 = qJD(2) * t78;
t32 = qJD(2) * t77;
t30 = pkin(5) * t689 + t562 + (t540 + t539) * t462 + t523;
t29 = qJD(2) * t80 + qJD(5) * t170 + t348 * t586;
t28 = qJD(2) * t79 + qJD(5) * t168 - t348 * t585;
t27 = t540 - t654 / 0.2e1 + t462 * t562;
t25 = qJD(2) * t67;
t24 = -qJD(4) * t77 - qJD(5) * t99;
t23 = -qJD(4) * t78 - qJD(5) * t98;
t22 = qJD(4) * t67;
t21 = pkin(5) * t168;
t17 = t630 / 0.2e1 + t397 * t681 + t502 * t465 + t470;
t15 = t447 * t512 + t706 * t690 + (t645 / 0.2e1 + t696) * pkin(5);
t13 = t66 * qJD(2) - qJD(4) * t516;
t12 = (-t302 * t462 - t458 * t561) * qJD(2) + t80 * qJD(4) + t100 * qJD(5);
t11 = (t301 * t462 - t403 * t458) * qJD(2) + t79 * qJD(4) + t101 * qJD(5);
t10 = t66 * qJD(4) + (-t301 * t464 - t302 * t461) * t567;
t9 = pkin(5) * t693 + t347 * t512 - t473;
t7 = -t292 * t170 / 0.2e1 - t291 * t168 / 0.2e1 + t467 * t537 + t347 * t527 + pkin(4) * t507 + t481 - t479;
t5 = qJD(2) * t53 + t667;
t4 = qJD(2) * t52 + t667;
t2 = t468 - t471;
t1 = qJD(2) * t59 + qJD(4) * t56;
t16 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t133, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t421, -t543, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t543 (-pkin(2) * t633 + t422) * qJD(2) + qJD(3) * t633, 0, 0, 0, 0, 0, 0 (t463 * t566 + t466 * t569) * t459 (-t463 * t568 + t466 * t567) * t459 (-t456 - t458) * t421, t576 + (t456 * t559 + t387 + t422) * qJD(2) + t254 * qJD(3), 0, 0, 0, 0, 0, 0, t11, t12, t10 (-t291 * t301 + t292 * t302 + t387) * qJD(2) + t7 * qJD(4) + t670, 0, 0, 0, 0, 0, 0, t11, t12, t10 (t212 * t301 + t233 * t302 - t368 * t560) * qJD(2) + t2 * qJD(4) + t9 * qJD(5) + t93 * qJD(6) + t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t254, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t348 + t421 * t465, qJD(4) * t347 - t421 * t462, 0, 0, 0, 0, 0, 0, 0, 0, t28, t29, t13, t7 * qJD(2) + (-t348 * pkin(4) - pkin(9) * t516) * qJD(4) + t672, 0, 0, 0, 0, 0, 0, t28, t29, t13, t2 * qJD(2) + (-t262 * t347 + t348 * t447) * qJD(4) + t21 * qJD(5) + t91 * qJD(6) + t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t41, 0, 0, 0, 0, 0, 0, 0, 0, t42, t41, 0, -pkin(5) * t514 + t9 * qJD(2) + t21 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t93 + qJD(4) * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t253 - t576, 0, 0, 0, 0, 0, 0, t23, t24, t22, -qJD(4) * t6 + t669, 0, 0, 0, 0, 0, 0, t23, t24, t22, qJD(4) * t3 - qJD(5) * t8 - qJD(6) * t92 + t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t454, -t438, t423 * qJD(4), 0, t438, 0, 0, qJ(3) * t566 + t587, -qJ(3) * t568 + qJD(3) * t465, 0, t454, t304, t246, t272, t303, t271, t438, qJD(4) * t124 + qJD(5) * t203 + t436, -qJD(4) * t125 - qJD(5) * t202 - t461 * t587, -qJD(4) * t81 - t353, qJD(3) * t144 + qJD(4) * t84, t304, t246, t272, t303, t271, t438, qJD(4) * t82 + qJD(5) * t123 - t465 * t542 + t436, -t83 * qJD(4) - t130 * qJD(5) + (-qJD(3) + t579) * t629, -qJD(4) * t43 - qJD(5) * t44 + qJD(6) * t379 - t353, qJD(3) * t113 + qJD(4) * t40 + qJD(5) * t45 - qJD(6) * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t453, 0, 0, 0, 0, 0, 0, t569, t567, 0, -t513, 0, 0, 0, 0, 0, 0, t249, t248, -t572, t659 + t703, 0, 0, 0, 0, 0, 0, t249, t248, -t572, qJD(4) * t17 + qJD(5) * t30 + t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t541, t571, -t568, t541, -t566, 0, -t467 * t568 + t552, -t467 * t566 - t553, 0, 0, t190, t182, t296, t189, t293, t366 (t461 * t506 - t556) * qJD(4) + t184 * qJD(5) + t704 (-pkin(9) * t616 + (pkin(4) * t464 + t626) * t462) * qJD(4) + t183 * qJD(5) + t705, qJD(4) * t498 - t699 (-pkin(4) * t620 + pkin(9) * t498) * qJD(4) + t480, t190, t182, t296, t189, t293, t366 (t367 * t464 - t461 * t624 - t640) * qJD(4) + t86 * qJD(5) - t462 * t581 + t700 (-t367 * t461 - t447 * t622 - t638) * qJD(4) + t89 * qJD(5) - t542 + t701 ((t239 - t641) * t464 + (-t222 + t639) * t461) * qJD(4) + t27 * qJD(5) + t698, t17 * qJD(3) + (-t222 * t397 + t239 * t398 - t367 * t447) * qJD(4) + t15 * qJD(5) + t70 * qJD(6) + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, -t270, -t324, t257, -t326, t443, qJD(4) * t184 - qJD(5) * t292 + t592 + t660, qJD(4) * t183 + qJD(5) * t291 - t593 + t661, 0, -t588, -t257, -t270, -t324, t257, -t326, t443, qJD(4) * t86 - t584 + t597 + t660, qJD(4) * t89 + qJD(5) * t232 - t596 + t661, pkin(5) * t547 + qJD(4) * t27 - t656, -pkin(5) * t584 + qJD(3) * t30 + qJD(4) * t15 + t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t323, t573, qJD(4) * t70 + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t253, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t453, 0, 0, 0, 0, 0, 0, -t569, -t567, 0, t513, 0, 0, 0, 0, 0, 0, t250, t247, t572, t659 - t703, 0, 0, 0, 0, 0, 0, t250, t247, t572, qJD(4) * t18 + qJD(5) * t31 - t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t568, -t566, 0, 0, 0, 0, 0, 0, 0, 0, t349, t350, t351 (pkin(9) * t381 - t678) * qJD(4) - t709, 0, 0, 0, 0, 0, 0, t349, t350, t351 (t262 * t465 + t624) * qJD(4) - t179 * qJD(5) + t335 * qJD(6) + t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, t204, 0, -t595, 0, 0, 0, 0, 0, 0, t205, t204, 0, -pkin(5) * t546 - qJD(4) * t179 + t657; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, t32, -t25, qJD(2) * t6 - t672, 0, 0, 0, 0, 0, 0, t33, t32, -t25, -qJD(2) * t3 - qJD(6) * t90 - t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t541, -t571, 0, -t541, 0, 0, -t552, t553, 0, 0, t256, t268, t295, t255, t294, -t366, qJD(5) * t235 - t704, qJD(5) * t234 - t705, t699, -t480, t256, t268, t295, t255, t294, -t366, -qJD(5) * t85 - t700, -qJD(5) * t88 - t701, -qJD(5) * t26 - t698, -qJD(3) * t18 - qJD(5) * t14 + qJD(6) * t71 - t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t709, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t332 - t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, t400, 0, -t435, 0, 0, -pkin(4) * t582, -pkin(4) * t449, 0, 0, t435, t400, 0, -t435, 0, 0, -t343 * qJD(5), t361 * qJD(5), qJD(6) * t424, qJD(5) * t148 + qJD(6) * t262; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, -t312, t377, -t274, t375, t445, -pkin(9) * t449 - t490, pkin(9) * t582 - t491, 0, 0, t274, -t312, t377, -t274, t375, t445, t495 - t583, qJD(5) * t397 + t494, -pkin(5) * t449 - t658, -pkin(5) * t583 + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, t65, 0, 0, 0, 0, 0, 0, 0, 0, t64, t65, 0, qJD(2) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t270, t323, -t257, t325, t443, -qJD(4) * t235 - t592 + t662, -qJD(4) * t234 + t593 + t663, 0, t588, t257, t270, t323, -t257, t325, t443, qJD(4) * t85 - t544 - t597 + t662, qJD(4) * t88 + t461 * t579 + t596 + t663, qJD(4) * t26 + t656, -pkin(5) * t544 - qJD(3) * t31 + qJD(4) * t14 - t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, t315, 0, t595, 0, 0, 0, 0, 0, 0, t317, t315, 0, -t657; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, t312, -t437, t274, t434, t444, t490, t491, 0, 0, -t274, t312, -t437, t274, t434, t444, -t495 - t581, -t494 - t580, t658, -pkin(5) * t581 - t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, t376, 0, -t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t92 + qJD(4) * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, -t324, -t573, pkin(5) * t545 - qJD(4) * t71 - t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, t449, -t570, pkin(5) * t582 - t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, -t376, 0, t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t16;
