% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP14_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP14_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP14_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP14_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:09:51
% EndTime: 2019-03-09 13:10:15
% DurationCPUTime: 9.48s
% Computational Cost: add. (11939->647), mult. (30428->839), div. (0->0), fcn. (22190->8), ass. (0->299)
t235 = cos(pkin(6));
t241 = cos(qJ(2));
t394 = pkin(1) * t241;
t330 = t235 * t394;
t219 = qJD(1) * t330;
t406 = qJD(3) - t219;
t237 = sin(qJ(4));
t240 = cos(qJ(4));
t301 = pkin(4) * t240 + pkin(10) * t237;
t234 = sin(pkin(6));
t238 = sin(qJ(2));
t343 = qJD(1) * t238;
t324 = t234 * t343;
t396 = pkin(3) + pkin(8);
t426 = -qJD(4) * t301 + (-t301 - t396) * t324 - t406;
t344 = qJD(1) * t235;
t223 = qJD(2) + t344;
t345 = qJD(1) * t234;
t323 = t241 * t345;
t163 = t223 * t237 + t240 * t323;
t160 = qJD(5) + t163;
t165 = t223 * t240 - t237 * t323;
t236 = sin(qJ(5));
t239 = cos(qJ(5));
t293 = qJD(4) + t324;
t107 = t165 * t239 + t236 * t293;
t268 = t293 * t107;
t337 = qJD(5) * t236;
t358 = t234 * t241;
t320 = qJD(4) * t358;
t303 = qJD(1) * t320;
t342 = qJD(2) * t238;
t322 = t234 * t342;
t304 = qJD(1) * t322;
t338 = qJD(4) * t240;
t112 = t223 * t338 - t237 * t303 - t240 * t304;
t353 = t239 * t112;
t272 = -t160 * t337 + t353;
t331 = qJD(1) * qJD(2);
t314 = t241 * t331;
t214 = t234 * t314;
t339 = qJD(4) * t237;
t349 = t223 * t339 + t240 * t303;
t257 = t237 * t304 - t349;
t271 = t239 * t293;
t61 = -qJD(5) * t271 + t165 * t337 - t214 * t236 - t239 * t257;
t376 = t240 * t61;
t305 = t240 * t324;
t156 = t223 * t236 - t239 * t305;
t424 = t239 * t338 - t156;
t425 = -t160 * t424 + t237 * (t268 - t272) + t376;
t209 = pkin(2) * t304;
t294 = pkin(9) * t238 - qJ(3) * t241;
t340 = qJD(3) * t238;
t251 = (qJD(2) * t294 - t340) * t234;
t102 = qJD(1) * t251 + t209;
t371 = qJ(3) * t238;
t313 = -pkin(1) - t371;
t242 = -pkin(2) - pkin(9);
t409 = t241 * t242;
t144 = (t313 + t409) * t234;
t121 = qJD(1) * t144;
t395 = pkin(1) * t238;
t228 = t235 * t395;
t150 = (t358 * t396 + t228) * qJD(2);
t126 = qJD(1) * t150;
t98 = t223 * t242 + t324 * t396 + t406;
t260 = -t102 * t240 + t121 * t339 - t126 * t237 - t338 * t98;
t66 = -t121 * t237 + t240 * t98;
t423 = -t293 * t66 - t260;
t67 = t121 * t240 + t237 * t98;
t57 = pkin(10) * t293 + t67;
t347 = pkin(8) * t358 + t228;
t176 = t347 * qJD(1);
t149 = pkin(3) * t323 + t176;
t215 = t223 * qJ(3);
t116 = t215 + t149;
t68 = t163 * pkin(4) - t165 * pkin(10) + t116;
t19 = t236 * t68 + t239 * t57;
t24 = pkin(10) * t214 - t260;
t336 = qJD(5) * t239;
t348 = pkin(8) * t304 - qJD(2) * t219;
t132 = -t223 * qJD(3) + t348;
t103 = -pkin(3) * t304 - t132;
t51 = t112 * pkin(4) - pkin(10) * t257 + t103;
t311 = t236 * t24 - t239 * t51 + t336 * t57 + t337 * t68;
t277 = t160 * t19 - t311;
t407 = qJD(4) * t293;
t421 = -t242 * t407 + t103;
t105 = t165 * t236 - t271;
t306 = t237 * t324;
t157 = t236 * t306 - t239 * t323;
t354 = t238 * t239;
t158 = (t236 * t241 + t237 * t354) * t345;
t62 = qJD(5) * t107 - t214 * t239 + t236 * t257;
t373 = t62 * t239;
t374 = t61 * t236;
t420 = t240 * ((t105 * t236 - t107 * t239) * qJD(5) - t373 + t374) + (t105 * t239 + t107 * t236) * t339 + t105 * t158 + t107 * t157;
t299 = t236 * t339 + t157;
t357 = t236 * t112;
t419 = -t299 * t160 + t237 * t62 + t240 * (t105 * t293 + t160 * t336 + t357);
t308 = t107 * t160;
t309 = t105 * t160;
t418 = t236 * (t62 + t308) + t239 * (t61 + t309);
t231 = t234 ^ 2;
t417 = -0.2e1 * t231 * t331;
t16 = qJ(6) * t160 + t19;
t393 = pkin(5) * t112;
t2 = t311 - t393;
t416 = -t16 * t160 + t2;
t27 = -t102 * t237 - t121 * t338 + t126 * t240 - t339 * t98;
t415 = t293 * t67 + t27;
t200 = pkin(4) * t237 - pkin(10) * t240 + qJ(3);
t318 = t242 * t338;
t221 = pkin(2) * t324;
t147 = t294 * t345 + t221;
t85 = t147 * t240 + t149 * t237;
t77 = pkin(10) * t323 + t85;
t414 = -t200 * t336 + (-t318 + t77) * t239 + t426 * t236;
t412 = t62 - t308;
t410 = t163 * t293;
t269 = t165 * t293;
t355 = t237 * t242;
t408 = t200 * t236 + t239 * t355;
t56 = -pkin(4) * t293 - t66;
t22 = pkin(5) * t105 - qJ(6) * t107 + t56;
t391 = pkin(10) * t112;
t405 = t160 * t22 - t391;
t310 = t160 ^ 2;
t401 = -t105 * t165 + t236 * t310 - t353;
t341 = qJD(2) * t241;
t321 = t234 * t341;
t218 = pkin(2) * t322;
t118 = t218 + t251;
t359 = t234 * t238;
t225 = pkin(8) * t359;
t325 = -pkin(2) - t394;
t125 = pkin(3) * t359 + t225 + (-pkin(9) + t325) * t235;
t43 = t118 * t240 + t125 * t338 - t144 * t339 + t150 * t237;
t34 = pkin(10) * t321 + t43;
t80 = t125 * t237 + t144 * t240;
t74 = pkin(10) * t359 + t80;
t171 = -qJ(3) * t235 - t347;
t143 = pkin(3) * t358 - t171;
t182 = t235 * t237 + t240 * t358;
t183 = t235 * t240 - t237 * t358;
t83 = pkin(4) * t182 - pkin(10) * t183 + t143;
t383 = t236 * t83 + t239 * t74;
t220 = qJD(2) * t330;
t229 = t235 * qJD(3);
t307 = t396 * t359;
t124 = -qJD(2) * t307 + t220 + t229;
t135 = qJD(4) * t182 - t237 * t322;
t136 = t235 * t338 - t237 * t320 - t240 * t322;
t60 = pkin(4) * t136 + pkin(10) * t135 + t124;
t9 = -qJD(5) * t383 - t236 * t34 + t239 * t60;
t398 = qJD(5) * t408 - t236 * t77 + t239 * t426;
t397 = t107 ^ 2;
t232 = t238 ^ 2;
t392 = pkin(10) * t107;
t25 = -pkin(4) * t214 - t27;
t7 = pkin(5) * t62 + qJ(6) * t61 - qJD(6) * t107 + t25;
t390 = t236 * t7;
t389 = t239 * t7;
t317 = t242 * t337;
t388 = -(qJD(6) - t317) * t237 + t414 + (-t305 - t338) * qJ(6);
t312 = t236 * t242 - pkin(5);
t387 = pkin(5) * t305 - t312 * t338 - t398;
t386 = t236 * t318 + t398;
t385 = t237 * t317 + t414;
t295 = pkin(5) * t236 - qJ(6) * t239;
t278 = -t242 + t295;
t296 = pkin(5) * t239 + qJ(6) * t236;
t84 = -t147 * t237 + t149 * t240;
t76 = -pkin(4) * t323 - t84;
t384 = pkin(5) * t157 - qJ(6) * t158 + t76 - (qJD(5) * t296 - qJD(6) * t239) * t240 + t278 * t339;
t96 = pkin(4) * t165 + pkin(10) * t163;
t39 = t236 * t96 + t239 * t66;
t382 = t107 * t22;
t379 = t236 * t25;
t377 = t239 * t25;
t375 = t240 * t62;
t372 = -t236 * qJD(6) + t160 * t295 - t67;
t370 = qJ(6) * t112;
t369 = t107 * t105;
t368 = t112 * t182;
t367 = t112 * t237;
t366 = t116 * t238;
t365 = t160 * t165;
t364 = t165 * t163;
t178 = t347 * qJD(2);
t168 = qJD(1) * t178;
t363 = t168 * t238;
t362 = t176 * t223;
t361 = t178 * t238;
t360 = t231 * qJD(1) ^ 2;
t356 = t236 * t237;
t351 = t239 * t200;
t18 = -t236 * t57 + t239 * t68;
t350 = qJD(6) - t18;
t346 = -t241 ^ 2 + t232;
t335 = qJD(5) * t240;
t334 = t116 * qJD(4);
t333 = qJD(1) * t307 + t406;
t175 = pkin(8) * t324 - t219;
t332 = qJD(3) + t175;
t329 = pkin(10) * t337;
t328 = pkin(10) * t336;
t327 = t241 * t360;
t316 = t105 ^ 2 - t397;
t79 = t125 * t240 - t144 * t237;
t302 = pkin(1) * t417;
t298 = t239 * t339 + t158;
t297 = (qJD(5) * t105 - t61) * pkin(10);
t137 = t183 * t236 - t234 * t354;
t138 = t183 * t239 + t236 * t359;
t71 = qJD(5) * t138 - t135 * t236 - t239 * t321;
t292 = t105 * t71 + t137 * t62;
t15 = -pkin(5) * t160 + t350;
t291 = t15 * t239 - t16 * t236;
t290 = t15 * t236 + t16 * t239;
t289 = t18 * t239 + t19 * t236;
t288 = t18 * t236 - t19 * t239;
t38 = -t236 * t66 + t239 * t96;
t36 = -t236 * t74 + t239 * t83;
t280 = t168 * t235 + t178 * t223;
t279 = t231 * t238 * t314;
t177 = -pkin(8) * t322 + t220;
t44 = -t118 * t237 - t125 * t339 - t144 * t338 + t150 * t240;
t153 = -t223 * t323 + t214;
t3 = t236 * t51 + t239 * t24 + t336 * t68 - t337 * t57;
t8 = t236 * t60 + t239 * t34 + t336 * t83 - t337 * t74;
t270 = t240 * t293;
t267 = t293 * t234;
t266 = (-qJD(2) * t237 + t163) * t345;
t265 = qJD(2) * t234 * (t223 + t344);
t264 = t160 * t56 - t391;
t73 = -pkin(4) * t359 - t79;
t172 = (-pkin(2) * t241 + t313) * t234;
t259 = qJD(1) * t267;
t258 = t236 * t309 - t373;
t256 = (-qJ(3) * t341 - t340) * t234;
t155 = t223 * t239 + t236 * t305;
t255 = t236 * t338 + t237 * t336 + t155;
t72 = -t135 * t239 - t183 * t337 + (t236 * t341 + t238 * t336) * t234;
t254 = t105 * t72 + t107 * t71 - t137 * t61 + t138 * t62;
t253 = t105 * t136 + t112 * t137 + t160 * t71 + t182 * t62;
t35 = -pkin(4) * t321 - t44;
t1 = qJD(6) * t160 + t3 + t370;
t250 = qJD(5) * t291 + t1 * t239 + t2 * t236;
t249 = -qJD(5) * t289 + t236 * t311 + t239 * t3;
t248 = t236 * t375 + (t239 * t335 - t299) * t105;
t247 = -t238 * t259 - t407;
t246 = -t112 * t356 - t160 * t255 - t375 + (t306 + t339) * t105;
t245 = t214 * t240 + t237 * t247;
t244 = t255 * t107 - t237 * t373 - t61 * t356 + (t237 * t337 - t424) * t105;
t203 = t238 * t327;
t201 = -pkin(4) - t296;
t192 = -0.2e1 * t279;
t191 = 0.2e1 * t279;
t184 = -t225 + t330;
t181 = t346 * t360;
t174 = -qJ(3) * t323 + t221;
t173 = t235 * t325 + t225;
t170 = t278 * t240;
t166 = t346 * t417;
t161 = -t236 * t355 + t351;
t159 = -t177 - t229;
t154 = qJD(1) * t172;
t152 = (qJD(2) - t223) * t324;
t151 = t218 + t256;
t146 = t237 * t312 - t351;
t145 = -t215 - t176;
t142 = qJ(6) * t237 + t408;
t141 = t241 * t265;
t140 = t238 * t265;
t139 = -t223 * pkin(2) + t332;
t129 = qJD(1) * t256 + t209;
t122 = t154 * t324;
t69 = pkin(5) * t107 + qJ(6) * t105;
t58 = pkin(10) * t373;
t54 = t160 * t270 + t367;
t52 = t136 * t160 + t368;
t45 = pkin(5) * t137 - qJ(6) * t138 + t73;
t32 = -t61 + t309;
t31 = -pkin(5) * t182 - t36;
t30 = qJ(6) * t182 + t383;
t29 = -pkin(5) * t165 - t38;
t28 = qJ(6) * t165 + t39;
t23 = -t107 * t165 + t239 * t310 + t357;
t17 = t239 * t308 - t374;
t14 = t107 * t72 - t138 * t61;
t13 = -t239 * t376 + (-t236 * t335 - t298) * t107;
t12 = pkin(5) * t71 - qJ(6) * t72 - qJD(6) * t138 + t35;
t11 = -t237 * t61 - t298 * t160 + (t268 + t272) * t240;
t10 = t107 * t136 + t112 * t138 + t160 * t72 - t182 * t61;
t6 = -t136 * pkin(5) - t9;
t5 = qJ(6) * t136 + qJD(6) * t182 + t8;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t166, t141, t192, -t140, 0, t238 * t302 - t280, -t177 * t223 + t235 * t348 + t241 * t302 (-t348 * t241 + t363 + (t175 * t241 - t176 * t238) * qJD(2) + (t177 * t241 + t361 + (-t184 * t241 - t238 * t347) * qJD(2)) * qJD(1)) * t234, -t168 * t184 + t175 * t178 + t176 * t177 - t347 * t348, 0, -t141, t140, t191, t166, t192 (-t132 * t241 + t363 + (t139 * t241 + t145 * t238) * qJD(2) + (-t159 * t241 + t361 + (t171 * t238 + t173 * t241) * qJD(2)) * qJD(1)) * t234 (-t154 * t342 + t129 * t241 + (t151 * t241 - t172 * t342) * qJD(1)) * t234 + t280, -t132 * t235 - t159 * t223 + (-t154 * t341 - t129 * t238 + (-t151 * t238 - t172 * t341) * qJD(1)) * t234, t129 * t172 + t132 * t171 + t139 * t178 + t145 * t159 + t151 * t154 + t168 * t173, -t135 * t165 + t183 * t257, -t112 * t183 + t135 * t163 - t136 * t165 - t182 * t257, -t135 * qJD(4) + (-t349 * t238 + t165 * t341 + (-t135 * t238 + (t232 * t234 * t237 + t183 * t241) * qJD(2)) * qJD(1)) * t234, t136 * t163 + t368, -t136 * qJD(4) + (-t163 * t341 - t112 * t238 + (-t136 * t238 - t182 * t341) * qJD(1)) * t234 (t231 * t343 + t267) * t341, t44 * qJD(4) + t103 * t182 + t143 * t112 + t116 * t136 + t124 * t163 + (t66 * t341 + t27 * t238 + (t238 * t44 + t341 * t79) * qJD(1)) * t234, t124 * t165 - t143 * t349 + t103 * t183 - t116 * t135 - t43 * qJD(4) + (-t67 * t341 + t260 * t238 + (-t238 * t43 + (t143 * t237 * t238 - t241 * t80) * qJD(2)) * qJD(1)) * t234, -t112 * t80 + t135 * t66 - t136 * t67 - t163 * t43 - t165 * t44 + t182 * t260 - t183 * t27 - t257 * t79, t103 * t143 + t116 * t124 - t260 * t80 + t27 * t79 + t43 * t67 + t44 * t66, t14, -t254, t10, t292, -t253, t52, t105 * t35 + t112 * t36 + t136 * t18 + t137 * t25 + t160 * t9 - t182 * t311 + t56 * t71 + t62 * t73, t107 * t35 - t112 * t383 - t136 * t19 + t138 * t25 - t160 * t8 - t182 * t3 + t56 * t72 - t61 * t73, -t105 * t8 - t107 * t9 - t137 * t3 + t138 * t311 - t18 * t72 - t19 * t71 + t36 * t61 - t383 * t62, t18 * t9 + t19 * t8 + t25 * t73 + t3 * t383 - t311 * t36 + t35 * t56, t14, t10, t254, t52, t253, t292, t105 * t12 - t112 * t31 - t136 * t15 + t137 * t7 - t160 * t6 - t182 * t2 + t22 * t71 + t45 * t62, -t1 * t137 - t105 * t5 + t107 * t6 + t138 * t2 + t15 * t72 - t16 * t71 - t30 * t62 - t31 * t61, t1 * t182 - t107 * t12 + t112 * t30 + t136 * t16 - t138 * t7 + t160 * t5 - t22 * t72 + t45 * t61, t1 * t30 + t12 * t22 + t15 * t6 + t16 * t5 + t2 * t31 + t45 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, t181, t153, t203, -t152, 0, -pkin(8) * t214 + t362 + (-t235 * t331 + t360) * t395, pkin(1) * t327 - t175 * t223 + t348, 0, 0, 0, -t153, t152, -t203, t181, t203 ((-qJ(3) * qJD(2) - t145 - t176) * t238 + (-pkin(2) * qJD(2) - t139 + t332) * t241) * t345, -t362 + t122 + (-t174 * t358 + t178) * qJD(1), t332 * t223 + (t154 * t241 + t174 * t238) * t345 - t132, -pkin(2) * t168 - qJ(3) * t132 - t139 * t176 - t145 * t332 - t154 * t174, -t237 * t269 + t240 * t257 (-t112 - t269) * t240 + (qJD(4) * t163 + t238 * t266 + t349) * t237, -t165 * t323 + t245, t163 * t270 + t367, t240 * t247 + t241 * t266, -t241 * t259, qJ(3) * t112 - t84 * t293 - t66 * t323 + t421 * t237 + t333 * t163 + (t334 + (t242 * t341 + t366) * t345) * t240, -qJ(3) * t349 + t85 * t293 + t67 * t323 + t421 * t240 + t333 * t165 + (-t334 + (-t366 + (t371 - t409) * qJD(2)) * t345) * t237, t85 * t163 + t84 * t165 + (t66 * t324 - t242 * t112 + t260 + (t165 * t242 + t66) * qJD(4)) * t237 + (-t242 * t257 - t27 - t67 * t324 + (-t163 * t242 - t67) * qJD(4)) * t240, qJ(3) * t103 - t66 * t84 - t67 * t85 + t333 * t116 + (-t260 * t237 + t27 * t240 + (-t237 * t66 + t240 * t67) * qJD(4)) * t242, t13, t420, t11, t248, -t419, t54, -t105 * t76 + t112 * t161 - t157 * t56 - t386 * t160 + (-t311 + (t105 * t242 - t236 * t56) * qJD(4)) * t237 + (t18 * t293 - t242 * t62 + t336 * t56 + t379) * t240, -t107 * t76 - t112 * t408 - t158 * t56 + t385 * t160 + (-t3 + (t107 * t242 - t239 * t56) * qJD(4)) * t237 + (-t19 * t293 + t242 * t61 - t337 * t56 + t377) * t240, t157 * t19 + t158 * t18 + t161 * t61 - t408 * t62 + t386 * t107 + t385 * t105 + t289 * t339 + (qJD(5) * t288 - t236 * t3 + t239 * t311) * t240, -t161 * t311 + t408 * t3 - t56 * t76 + (-t240 * t25 + t339 * t56) * t242 - t385 * t19 - t386 * t18, t13, t11, -t420, t54, t419, t248, -t112 * t146 + t170 * t62 - t2 * t237 - t299 * t22 + t387 * t160 - t384 * t105 + (-t15 * t293 + t22 * t336 + t390) * t240, -t142 * t62 - t146 * t61 - t15 * t158 + t157 * t16 - t387 * t107 + t388 * t105 - t291 * t339 + (-qJD(5) * t290 - t1 * t236 + t2 * t239) * t240, t1 * t237 + t112 * t142 + t170 * t61 + t298 * t22 - t388 * t160 + t384 * t107 + (t16 * t293 + t22 * t337 - t389) * t240, t1 * t142 + t146 * t2 - t15 * t387 - t16 * t388 + t170 * t7 - t22 * t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, t203, -t223 ^ 2 - t232 * t360, t145 * t223 + t122 + t168, 0, 0, 0, 0, 0, 0, -t163 * t223 + t245, -t237 * t214 - t223 * t165 + (-t293 * t324 - t407) * t240 (t349 - t410) * t240 + (t165 * qJD(4) - t112 + (-qJD(2) * t240 + t165) * t324) * t237, -t116 * t223 + t237 * t423 + t240 * t415, 0, 0, 0, 0, 0, 0, t246, t425, t244, -t155 * t18 - t156 * t19 + (-qJD(4) * t288 - t25) * t240 + (t293 * t56 + t249) * t237, 0, 0, 0, 0, 0, 0, t246, t244, -t425, t15 * t155 - t156 * t16 + (qJD(4) * t290 - t7) * t240 + (t22 * t293 + t250) * t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, -t163 ^ 2 + t165 ^ 2, t257 + t410, -t364, -t112 + t269, t214, -t116 * t165 + t415, t116 * t163 - t423, 0, 0, t17, -t418, t23, t258, -t401, -t365, -pkin(4) * t62 - t105 * t67 - t165 * t18 - t377 + (-t38 - t328) * t160 + t264 * t236, pkin(4) * t61 - t107 * t67 + t165 * t19 + t379 + (t39 + t329) * t160 + t264 * t239, t105 * t39 + t107 * t38 - t58 + (-t163 * t18 + t3 + (-t18 + t392) * qJD(5)) * t239 + (t297 - t277) * t236, -pkin(4) * t25 + pkin(10) * t249 - t18 * t38 - t19 * t39 - t56 * t67, t17, t23, t418, -t365, t401, t258, t15 * t165 + t201 * t62 - t389 + (t29 - t328) * t160 + t372 * t105 + t405 * t236, t105 * t28 - t107 * t29 - t58 + (t15 * t163 + t1 + (t15 + t392) * qJD(5)) * t239 + (t297 + t416) * t236, -t16 * t165 + t201 * t61 - t390 + (-t28 - t329) * t160 - t372 * t107 - t405 * t239, pkin(10) * t250 - t15 * t29 - t16 * t28 + t201 * t7 + t22 * t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, -t316, t32, -t369, -t412, t112, -t107 * t56 + t277, t105 * t56 + t160 * t18 - t3, 0, 0, t369, t32, t316, t112, t412, -t369, -t105 * t69 + t277 - t382 + 0.2e1 * t393, pkin(5) * t61 - t62 * qJ(6) + (t16 - t19) * t107 + (t15 - t350) * t105, 0.2e1 * t370 - t105 * t22 + t107 * t69 + (0.2e1 * qJD(6) - t18) * t160 + t3, -pkin(5) * t2 + qJ(6) * t1 - t15 * t19 + t16 * t350 - t22 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112 + t369, t32, -t310 - t397, t382 + t416;];
tauc_reg  = t4;
