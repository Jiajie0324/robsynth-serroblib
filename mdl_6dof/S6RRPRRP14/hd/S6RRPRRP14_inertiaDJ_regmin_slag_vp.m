% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRRP14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP14_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP14_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP14_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP14_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:09:51
% EndTime: 2019-03-09 13:10:02
% DurationCPUTime: 3.57s
% Computational Cost: add. (4053->359), mult. (10287->618), div. (0->0), fcn. (9330->8), ass. (0->187)
t112 = cos(qJ(5));
t109 = sin(qJ(5));
t181 = qJD(5) * t109;
t108 = cos(pkin(6));
t113 = cos(qJ(4));
t107 = sin(pkin(6));
t111 = sin(qJ(2));
t189 = qJD(2) * t111;
t162 = t107 * t189;
t110 = sin(qJ(4));
t114 = cos(qJ(2));
t198 = t107 * t114;
t171 = t110 * t198;
t183 = qJD(4) * t113;
t46 = -qJD(4) * t171 + t108 * t183 - t113 * t162;
t70 = t108 * t110 + t113 * t198;
t126 = -t112 * t46 + t70 * t181;
t228 = pkin(10) * t126;
t218 = pkin(1) * t108;
t98 = t111 * t218;
t227 = pkin(8) * t198 + t98;
t103 = t109 ^ 2;
t105 = t112 ^ 2;
t193 = t103 - t105;
t152 = t193 * qJD(5);
t216 = t113 * pkin(10);
t145 = t110 * pkin(4) - t216;
t82 = qJ(3) + t145;
t115 = -pkin(2) - pkin(9);
t196 = t110 * t115;
t91 = t112 * t196;
t213 = t109 * t82 + t91;
t217 = pkin(10) * t110;
t146 = pkin(4) * t113 + t217;
t80 = t146 * qJD(4) + qJD(3);
t121 = -qJD(5) * t213 + t112 * t80;
t139 = pkin(5) * t109 - qJ(6) * t112;
t67 = t139 * qJD(5) - t109 * qJD(6);
t205 = t113 * t67;
t140 = t112 * pkin(5) + t109 * qJ(6);
t83 = -pkin(4) - t140;
t210 = t110 * t83;
t131 = -t115 + t139;
t61 = t131 * t113;
t226 = qJD(4) * (t210 + t216) - qJD(5) * t61 - t205;
t225 = t140 * qJD(5) - t112 * qJD(6);
t220 = pkin(3) + pkin(8);
t188 = qJD(2) * t114;
t90 = t188 * t218;
t99 = t108 * qJD(3);
t40 = -t220 * t162 + t90 + t99;
t45 = -qJD(4) * t70 + t110 * t162;
t18 = t46 * pkin(4) - t45 * pkin(10) + t40;
t199 = t107 * t111;
t169 = -pkin(1) * t114 - pkin(2);
t95 = pkin(8) * t199;
t41 = pkin(3) * t199 + t95 + (-pkin(9) + t169) * t108;
t201 = qJ(3) * t111;
t51 = (t115 * t114 - pkin(1) - t201) * t107;
t214 = t110 * t41 + t113 * t51;
t23 = pkin(10) * t199 + t214;
t62 = -t108 * qJ(3) - t227;
t50 = pkin(3) * t198 - t62;
t71 = t108 * t113 - t171;
t27 = t70 * pkin(4) - t71 * pkin(10) + t50;
t215 = t109 * t27 + t112 * t23;
t185 = qJD(4) * t110;
t187 = qJD(3) * t111;
t89 = pkin(2) * t162;
t37 = t89 + (-t187 + (pkin(9) * t111 - qJ(3) * t114) * qJD(2)) * t107;
t53 = (t220 * t198 + t98) * qJD(2);
t13 = -t110 * t53 - t113 * t37 - t41 * t183 + t51 * t185;
t92 = t107 * t188;
t9 = pkin(10) * t92 - t13;
t4 = -qJD(5) * t215 - t109 * t9 + t112 * t18;
t184 = qJD(4) * t112;
t173 = t70 * t184;
t48 = t109 * t199 + t71 * t112;
t200 = qJD(4) * t48;
t101 = qJD(5) * t112;
t21 = t45 * t112 - t71 * t181 + (t111 * t101 + t109 * t188) * t107;
t224 = t110 * (t126 + t200) - t113 * (t21 + t173);
t223 = 0.2e1 * t107;
t222 = 0.2e1 * qJD(3);
t221 = 0.2e1 * qJD(6);
t219 = t46 * pkin(5);
t47 = t71 * t109 - t112 * t199;
t212 = t109 * t47;
t211 = t109 * t48;
t20 = qJD(5) * t48 + t45 * t109 - t112 * t92;
t209 = t112 * t20;
t208 = t112 * t47;
t207 = t112 * t48;
t206 = t112 * t82;
t204 = t21 * t109;
t203 = t46 * qJ(6);
t66 = t227 * qJD(2);
t202 = t66 * t108;
t197 = t109 * t115;
t195 = t113 * t115;
t194 = t70 * qJD(6);
t192 = t103 + t105;
t104 = t110 ^ 2;
t106 = t113 ^ 2;
t191 = t104 - t106;
t190 = t104 + t106;
t186 = qJD(4) * t109;
t182 = qJD(4) * t115;
t180 = qJD(5) * t113;
t179 = qJD(5) * t115;
t177 = -0.2e1 * pkin(4) * qJD(5);
t158 = t112 * t183;
t176 = t82 * t101 + t109 * t80 + t115 * t158;
t175 = pkin(10) * t181;
t174 = pkin(10) * t101;
t172 = t115 * t199;
t170 = t109 * t196;
t102 = t107 ^ 2;
t168 = t102 * t188;
t167 = qJ(6) * t183;
t166 = t109 * t180;
t165 = t109 * t179;
t164 = t110 * t101;
t163 = t112 * t180;
t161 = t109 * t183;
t160 = t109 * t101;
t159 = t110 * t184;
t157 = t110 * t183;
t155 = -pkin(5) + t197;
t154 = -t110 * t51 + t113 * t41;
t153 = t113 * t192;
t151 = t191 * qJD(4);
t150 = 0.2e1 * t157;
t149 = t115 * t92;
t148 = t109 * t159;
t6 = t70 * qJ(6) + t215;
t11 = -t109 * t23 + t112 * t27;
t7 = -t70 * pkin(5) - t11;
t144 = t109 * t7 + t112 * t6;
t143 = t109 * t6 - t112 * t7;
t141 = -pkin(2) * t114 - t201;
t137 = t208 + t211;
t49 = t110 * qJ(6) + t213;
t52 = t155 * t110 - t206;
t136 = t109 * t52 + t112 * t49;
t135 = t109 * t49 - t112 * t52;
t14 = -t110 * t37 + t113 * t53 - t51 * t183 - t41 * t185;
t65 = pkin(8) * t162 - t90;
t22 = -pkin(4) * t199 - t154;
t15 = t47 * pkin(5) - t48 * qJ(6) + t22;
t10 = -pkin(4) * t92 - t14;
t5 = t20 * pkin(5) - t21 * qJ(6) - t48 * qJD(6) + t10;
t133 = -t15 * t101 - t5 * t109;
t132 = -t5 * t112 + t15 * t181;
t130 = t46 * t110 + t70 * t183;
t129 = t10 * t109 + t22 * t101;
t128 = -t10 * t112 + t22 * t181;
t127 = t70 * t101 + t109 * t46;
t3 = -t27 * t101 - t109 * t18 - t112 * t9 + t23 * t181;
t124 = t127 * pkin(10);
t31 = t225 * t113 - t131 * t185;
t123 = -t31 + (t113 * t83 - t217) * qJD(5);
t1 = t194 - t3 + t203;
t2 = -t219 - t4;
t119 = -t143 * qJD(5) + t1 * t112 + t2 * t109;
t118 = t204 - t209 + (t207 + t212) * qJD(5);
t26 = t167 + (qJD(6) - t165) * t110 + t176;
t28 = t155 * t183 - t121;
t117 = -t135 * qJD(5) + t28 * t109 + t26 * t112;
t116 = -t130 * t109 - t113 * t20 - t70 * t164 + t47 * t185;
t81 = 0.2e1 * t111 * t168;
t77 = -t109 * t185 + t163;
t76 = t161 + t164;
t75 = t190 * t101;
t74 = -t159 - t166;
t73 = t110 * t181 - t158;
t72 = t190 * t181;
t64 = t169 * t108 + t95;
t63 = (-pkin(1) + t141) * t107;
t59 = (-t111 * t185 + t113 * t188) * t107;
t58 = (-t110 * t188 - t111 * t183) * t107;
t56 = -t170 + t206;
t55 = t65 - t99;
t54 = t89 + (-qJ(3) * t188 - t187) * t107;
t30 = -t115 * t161 + t121;
t29 = t110 * t165 - t176;
t8 = [0, 0, 0, t81, 0.2e1 * (-t111 ^ 2 + t114 ^ 2) * t102 * qJD(2), 0.2e1 * t108 * t92, -0.2e1 * t108 * t162, 0, -0.2e1 * t102 * pkin(1) * t189 - 0.2e1 * t202, -0.2e1 * pkin(1) * t168 + 0.2e1 * t65 * t108 (t111 * t66 - t114 * t55 + (t111 * t62 + t114 * t64) * qJD(2)) * t223, 0.2e1 * t202 + 0.2e1 * (t114 * t54 - t63 * t189) * t107, -0.2e1 * t55 * t108 + 0.2e1 * (-t111 * t54 - t63 * t188) * t107, 0.2e1 * t63 * t54 + 0.2e1 * t62 * t55 + 0.2e1 * t64 * t66, 0.2e1 * t71 * t45, -0.2e1 * t45 * t70 - 0.2e1 * t71 * t46 (t111 * t45 + t71 * t188) * t223 (-t111 * t46 - t70 * t188) * t223, t81, 0.2e1 * t40 * t70 + 0.2e1 * t50 * t46 + 0.2e1 * (t14 * t111 + t154 * t188) * t107, 0.2e1 * t40 * t71 + 0.2e1 * t50 * t45 + 0.2e1 * (t13 * t111 - t188 * t214) * t107, 0.2e1 * t48 * t21, -0.2e1 * t48 * t20 - 0.2e1 * t21 * t47, 0.2e1 * t21 * t70 + 0.2e1 * t48 * t46, -0.2e1 * t20 * t70 - 0.2e1 * t47 * t46, 0.2e1 * t70 * t46, 0.2e1 * t10 * t47 + 0.2e1 * t11 * t46 + 0.2e1 * t22 * t20 + 0.2e1 * t4 * t70, 0.2e1 * t10 * t48 + 0.2e1 * t22 * t21 - 0.2e1 * t215 * t46 + 0.2e1 * t3 * t70, 0.2e1 * t15 * t20 - 0.2e1 * t2 * t70 - 0.2e1 * t7 * t46 + 0.2e1 * t5 * t47, -0.2e1 * t1 * t47 + 0.2e1 * t2 * t48 - 0.2e1 * t6 * t20 + 0.2e1 * t7 * t21, 0.2e1 * t1 * t70 - 0.2e1 * t15 * t21 + 0.2e1 * t6 * t46 - 0.2e1 * t5 * t48, 0.2e1 * t6 * t1 + 0.2e1 * t15 * t5 + 0.2e1 * t7 * t2; 0, 0, 0, 0, 0, t92, -t162, 0, -t66, t65 (qJD(2) * t141 + qJD(3) * t114) * t107, t66, -t65 + 0.2e1 * t99, -t66 * pkin(2) - t55 * qJ(3) - t62 * qJD(3), t45 * t113 - t71 * t185, -t45 * t110 - t113 * t46 + (t110 * t70 - t113 * t71) * qJD(4), t59, t58, 0, t113 * t149 + qJ(3) * t46 + qJD(3) * t70 + t40 * t110 + (-t110 * t172 + t113 * t50) * qJD(4), -t110 * t149 + qJ(3) * t45 + qJD(3) * t71 + t40 * t113 + (-t110 * t50 - t113 * t172) * qJD(4), -t48 * t166 + (t113 * t21 - t185 * t48) * t112, t137 * t185 + (-t204 - t209 + (-t207 + t212) * qJD(5)) * t113 (t21 - t173) * t110 + (-t126 + t200) * t113 (t186 * t70 - t20) * t110 + (-qJD(4) * t47 - t127) * t113, t130, t30 * t70 + t56 * t46 + (t4 + (-t109 * t22 + t115 * t47) * qJD(4)) * t110 + (qJD(4) * t11 - t115 * t20 + t129) * t113, t29 * t70 - t213 * t46 + (t3 + (-t112 * t22 + t115 * t48) * qJD(4)) * t110 + (-qJD(4) * t215 - t115 * t21 - t128) * t113, t61 * t20 - t28 * t70 + t31 * t47 - t52 * t46 + (-t15 * t186 - t2) * t110 + (-qJD(4) * t7 - t133) * t113, -t49 * t20 + t52 * t21 - t26 * t47 + t28 * t48 + t143 * t185 + (-qJD(5) * t144 - t1 * t109 + t112 * t2) * t113, -t61 * t21 + t26 * t70 - t31 * t48 + t49 * t46 + (t15 * t184 + t1) * t110 + (qJD(4) * t6 + t132) * t113, t1 * t49 + t15 * t31 + t2 * t52 + t6 * t26 + t7 * t28 + t5 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, qJ(3) * t222, -0.2e1 * t157, 0.2e1 * t151, 0, 0, 0, 0.2e1 * qJ(3) * t183 + 0.2e1 * qJD(3) * t110, -0.2e1 * qJ(3) * t185 + 0.2e1 * qJD(3) * t113, -0.2e1 * t105 * t157 - 0.2e1 * t106 * t160, 0.2e1 * t106 * t152 + 0.4e1 * t113 * t148, -0.2e1 * t110 * t166 - 0.2e1 * t184 * t191, 0.2e1 * t109 * t151 - 0.2e1 * t110 * t163, t150, -0.2e1 * t106 * t112 * t179 + 0.2e1 * t30 * t110 + 0.2e1 * (t56 + 0.2e1 * t170) * t183, 0.2e1 * t106 * t165 + 0.2e1 * t29 * t110 + 0.2e1 * (-t213 + 0.2e1 * t91) * t183, 0.2e1 * (-t186 * t61 - t28) * t110 + 0.2e1 * (-qJD(4) * t52 + t101 * t61 + t31 * t109) * t113, 0.2e1 * t135 * t185 + 0.2e1 * (-qJD(5) * t136 - t109 * t26 + t112 * t28) * t113, 0.2e1 * (t184 * t61 + t26) * t110 + 0.2e1 * (qJD(4) * t49 - t31 * t112 + t181 * t61) * t113, 0.2e1 * t49 * t26 + 0.2e1 * t52 * t28 + 0.2e1 * t61 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, 0, t66, 0, 0, 0, 0, 0, t59, t58, 0, 0, 0, 0, 0, t116, t224, t116 (-t208 + t211) * t183 + t118 * t110, -t224 (qJD(4) * t144 - t5) * t113 + (qJD(4) * t15 + t119) * t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, t72, -t75, 0, -t72 (qJD(4) * t136 - t31) * t113 + (qJD(4) * t61 + t117) * t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t192) * t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t46, t92, t14, t13, t101 * t48 + t204, -qJD(5) * t137 - t109 * t20 + t21 * t112, t127, -t126, 0, -pkin(4) * t20 - t124 + t128, -pkin(4) * t21 + t129 + t228, t83 * t20 + t67 * t47 - t124 + t132, pkin(10) * t118 + t119, -t83 * t21 - t67 * t48 + t133 - t228, pkin(10) * t119 + t15 * t67 + t5 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, -t183, 0, -t110 * t182, -t113 * t182, -t113 * t152 - t148, -0.4e1 * t113 * t160 + t185 * t193, t76, -t73, 0 (-t109 * t195 - t112 * t146) * qJD(5) + (t109 * t145 - t91) * qJD(4) (t109 * t146 - t112 * t195) * qJD(5) + (-t112 * t216 + (pkin(4) * t112 + t197) * t110) * qJD(4), -t226 * t109 + t123 * t112, t117, t123 * t109 + t226 * t112, pkin(10) * t117 + t31 * t83 + t61 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, -t183, 0, 0, 0, 0, 0, t74, -t77, t74, qJD(4) * t153, t77, -t205 + (pkin(10) * t153 + t210) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t160, -0.2e1 * t152, 0, 0, 0, t109 * t177, t112 * t177, -0.2e1 * t67 * t112 + 0.2e1 * t181 * t83, 0, -0.2e1 * t101 * t83 - 0.2e1 * t67 * t109, 0.2e1 * t83 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, -t20, t46, t4, t3, t4 + 0.2e1 * t219, -t21 * pkin(5) - t20 * qJ(6) - t47 * qJD(6), 0.2e1 * t194 - t3 + 0.2e1 * t203, -t2 * pkin(5) + t1 * qJ(6) + t6 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t77, t183, t30, t29 (0.2e1 * pkin(5) - t197) * t183 + t121 (pkin(5) * t185 - qJ(6) * t180) * t112 + (qJ(6) * t185 + (pkin(5) * qJD(5) - qJD(6)) * t113) * t109, 0.2e1 * t167 + (t221 - t165) * t110 + t176, -t28 * pkin(5) + t26 * qJ(6) + t49 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t73, -t76, 0, -t73, -t110 * t225 - t139 * t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, -t181, 0, -t174, t175, -t174, -t225, -t175, -t225 * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, qJ(6) * t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, t21, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183, t74, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t8;
