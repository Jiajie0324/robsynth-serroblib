% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRP14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 19:27
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRP14_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP14_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP14_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP14_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP14_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP14_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 19:24:40
% EndTime: 2019-05-06 19:25:11
% DurationCPUTime: 12.37s
% Computational Cost: add. (35582->517), mult. (79842->669), div. (0->0), fcn. (58983->10), ass. (0->323)
t301 = cos(pkin(6));
t295 = qJD(1) * t301 + qJD(2);
t303 = sin(qJ(4));
t307 = cos(qJ(4));
t300 = sin(pkin(6));
t308 = cos(qJ(2));
t382 = qJD(1) * t308;
t368 = t300 * t382;
t253 = t295 * t303 + t307 * t368;
t249 = qJD(5) + t253;
t435 = t249 ^ 2;
t255 = t295 * t307 - t303 * t368;
t304 = sin(qJ(2));
t383 = qJD(1) * t304;
t369 = t300 * t383;
t283 = qJD(4) + t369;
t302 = sin(qJ(5));
t306 = cos(qJ(5));
t232 = t255 * t302 - t306 * t283;
t436 = t232 ^ 2;
t203 = t436 - t435;
t286 = qJD(2) * t369;
t379 = qJDD(1) * t308;
t266 = t300 * t379 - t286;
t294 = qJDD(1) * t301 + qJDD(2);
t360 = t307 * t266 + t294 * t303;
t216 = -qJD(4) * t255 - t360;
t215 = qJDD(5) - t216;
t234 = t255 * t306 + t283 * t302;
t402 = t234 * t232;
t153 = -t402 - t215;
t411 = t153 * t306;
t112 = -t203 * t302 + t411;
t412 = t153 * t302;
t116 = -t203 * t306 - t412;
t210 = t249 * t234;
t217 = -t253 * qJD(4) - t303 * t266 + t307 * t294;
t380 = qJDD(1) * t304;
t327 = qJD(2) * t382 + t380;
t322 = t327 * t300;
t321 = qJDD(4) + t322;
t361 = -t217 * t302 + t306 * t321;
t333 = qJD(5) * t234 - t361;
t133 = -t210 + t333;
t76 = t116 * t307 + t133 * t303;
t517 = t300 * (t308 * (t116 * t303 - t133 * t307) - t304 * t112) - t301 * t76;
t231 = t234 ^ 2;
t453 = t231 - t436;
t314 = -t306 * t217 - t302 * t321;
t313 = -t232 * qJD(5) - t314;
t403 = t232 * t249;
t449 = -t403 + t313;
t417 = t449 * t302;
t456 = t210 + t333;
t86 = -t456 * t306 - t417;
t59 = t303 * t453 + t307 * t86;
t416 = t449 * t306;
t82 = -t456 * t302 + t416;
t515 = t300 * (t308 * (t303 * t86 - t307 * t453) - t304 * t82) - t301 * t59;
t454 = -t231 - t435;
t105 = t306 * t454 + t412;
t514 = pkin(3) * t105;
t513 = pkin(4) * t105;
t512 = pkin(10) * t105;
t107 = -t302 * t454 + t411;
t511 = pkin(10) * t107;
t510 = qJ(3) * t105;
t509 = t105 * t304;
t508 = t105 * t308;
t507 = t107 * t303;
t506 = t107 * t307;
t448 = t403 + t313;
t204 = -t231 + t435;
t450 = -t402 + t215;
t409 = t450 * t306;
t482 = -t204 * t302 + t409;
t410 = t450 * t302;
t483 = t306 * t204 + t410;
t498 = t303 * t448 + t307 * t482;
t500 = t301 * t498 + (t304 * t483 + t308 * (-t303 * t482 + t307 * t448)) * t300;
t447 = -t435 - t436;
t462 = t306 * t447 - t410;
t481 = t303 * t462 - t307 * t456;
t499 = pkin(3) * t481;
t433 = -pkin(2) - pkin(9);
t463 = t302 * t447 + t409;
t497 = qJ(3) * t463 + t433 * t481;
t496 = pkin(1) * (t304 * t463 - t308 * t481);
t388 = t304 * qJ(3);
t326 = t308 * t433 - pkin(1) - t388;
t495 = t326 * (t303 * t456 + t307 * t462) + pkin(8) * (t304 * t481 + t308 * t463);
t493 = pkin(3) * t463;
t492 = pkin(4) * t463;
t491 = pkin(10) * t462;
t490 = pkin(10) * t463;
t489 = -qJ(6) * t302 - pkin(4);
t452 = t231 + t436;
t479 = pkin(4) * t452;
t478 = qJ(6) * t449;
t475 = t303 * t452;
t226 = t255 * t253;
t455 = -t226 + t321;
t473 = t303 * t455;
t469 = t307 * t452;
t467 = t307 * t455;
t398 = t249 * t306;
t374 = t232 * t398;
t334 = t302 * t333 + t374;
t399 = t249 * t302;
t353 = t232 * t399 - t306 * t333;
t375 = t307 * t402;
t376 = t303 * t402;
t442 = t307 * t334 - t376;
t465 = t301 * t442 + (t304 * t353 + t308 * (-t303 * t334 - t375)) * t300;
t328 = (-t232 * t302 - t234 * t306) * t249;
t201 = t234 * t399;
t352 = t201 - t374;
t441 = t215 * t303 + t307 * t352;
t464 = t301 * t441 + (t304 * t328 + t308 * (t215 * t307 - t303 * t352)) * t300;
t432 = pkin(3) + pkin(8);
t291 = t295 ^ 2;
t298 = t300 ^ 2;
t310 = qJD(1) ^ 2;
t391 = t298 * t310;
t293 = t308 ^ 2 * t391;
t269 = -t293 - t291;
t280 = t308 * t304 * t391;
t451 = -t294 - t280;
t461 = pkin(1) * (t269 * t304 - t308 * t451);
t292 = t304 ^ 2 * t391;
t248 = -t292 - t291;
t265 = -t280 + t294;
t460 = pkin(1) * (t248 * t308 - t265 * t304);
t395 = t451 * t304;
t459 = pkin(8) * (-t269 * t308 - t395);
t394 = t265 * t308;
t458 = pkin(8) * (t248 * t304 + t394);
t223 = pkin(4) * t253 - pkin(10) * t255;
t263 = pkin(3) * t369 - pkin(9) * t295;
t367 = qJD(3) * t383;
t284 = -0.2e1 * t300 * t367;
t305 = sin(qJ(1));
t309 = cos(qJ(1));
t365 = t305 * g(1) - g(2) * t309;
t429 = pkin(8) * t300;
t260 = qJDD(1) * pkin(1) + t310 * t429 + t365;
t318 = -t260 + (-t380 + (-qJD(2) - t295) * t382) * qJ(3);
t428 = t301 * g(3);
t364 = t295 * pkin(2) * t369 - t428;
t145 = -pkin(3) * t293 + t284 + t433 * t266 + (-t263 * t383 + t318) * t300 + t364;
t396 = t260 * t301;
t245 = t308 * t396;
t357 = -t294 * pkin(2) - t291 * qJ(3) + qJDD(3) - t245;
t355 = g(1) * t309 + g(2) * t305;
t261 = -pkin(1) * t310 + qJDD(1) * t429 - t355;
t387 = t304 * t261;
t325 = t357 + t387;
t440 = pkin(9) * t451 + t325;
t311 = t307 * t145 + t303 * t440;
t350 = -pkin(2) * t308 - t388;
t384 = qJD(1) * t300;
t262 = t350 * t384;
t336 = t308 * g(3) + t262 * t383;
t370 = t295 * t382;
t434 = t283 ^ 2;
t69 = qJDD(4) * pkin(10) - t253 * t223 - t434 * pkin(4) + (t303 * (t336 + (t327 - t370) * pkin(3)) + t327 * pkin(10)) * t300 + t311;
t390 = t300 * t304;
t359 = -g(3) * t390 + t261 * t308;
t324 = -t291 * pkin(2) + t294 * qJ(3) + 0.2e1 * qJD(3) * t295 + t262 * t368 + t359;
t373 = t304 * t396;
t171 = t324 + t373;
t144 = t266 * pkin(3) - pkin(9) * t293 + t263 * t295 + t171;
t397 = t253 * t283;
t337 = t217 - t397;
t90 = -t337 * pkin(10) + (t255 * t283 - t216) * pkin(4) + t144;
t45 = t302 * t69 - t306 * t90;
t46 = t302 * t90 + t306 * t69;
t22 = t302 * t45 + t306 * t46;
t457 = t298 * t304;
t274 = t295 * t368;
t238 = t322 + t274;
t190 = pkin(5) * t232 - qJ(6) * t234;
t358 = t215 * qJ(6) - t232 * t190 + t46;
t446 = -pkin(5) * (t454 + t435) - qJ(6) * t153 + t358;
t371 = t295 * t383;
t240 = -t286 + (t371 + t379) * t300;
t445 = t300 * ((t293 - t291) * t304 + t394) + t240 * t301;
t239 = -t274 + t322;
t444 = t300 * ((-t292 + t291) * t308 - t395) + t239 * t301;
t126 = t234 * t398 + t302 * t313;
t127 = t306 * t313 - t201;
t354 = t307 * t127 + t376;
t389 = t300 * t308;
t443 = t301 * t354 + t126 * t390 + (-t127 * t303 + t375) * t389;
t381 = qJD(6) * t249;
t243 = 0.2e1 * t381;
t351 = t243 + t358;
t39 = -pkin(5) * t435 + t351;
t40 = -t215 * pkin(5) - qJ(6) * t435 + t190 * t234 + qJDD(6) + t45;
t16 = t302 * t40 + t306 * t39;
t312 = ((t380 + (qJD(2) - t295) * t382) * pkin(3) + t336) * t300;
t91 = t145 * t303 - t307 * (t312 + t440);
t68 = -t321 * pkin(4) - t434 * pkin(10) + t223 * t255 + t91;
t319 = t333 * pkin(5) - t478 + t68;
t42 = (pkin(5) * t249 - 0.2e1 * qJD(6)) * t234 + t319;
t439 = pkin(10) * t16 + (-pkin(5) * t306 + t489) * t42;
t251 = t253 ^ 2;
t252 = t255 ^ 2;
t431 = pkin(4) * t307;
t426 = -pkin(4) * t68 + pkin(10) * t22;
t64 = t302 * t68;
t65 = t306 * t68;
t424 = qJ(6) * t306;
t419 = t448 * t302;
t418 = t448 * t306;
t186 = -t217 - t397;
t323 = (-qJD(4) + t283) * t255 - t360;
t141 = t186 * t307 + t303 * t323;
t415 = t141 * t304;
t414 = t144 * t303;
t413 = t144 * t307;
t207 = t226 + t321;
t407 = t207 * t303;
t406 = t207 * t307;
t393 = t283 * t303;
t392 = t283 * t307;
t271 = -t292 - t293;
t385 = pkin(1) * (-t271 * t300 + (-t239 * t308 + t240 * t304) * t301) + (t239 * t304 + t240 * t308) * t429;
t378 = -pkin(4) * t456 + t491 - t65;
t140 = (qJD(5) + t249) * t232 + t314;
t377 = pkin(4) * t140 + t511 + t64;
t372 = t304 * t226;
t366 = pkin(4) * t303 + qJ(3);
t29 = (t452 - t435) * pkin(5) + t351;
t31 = qJ(6) * t452 + t40;
t85 = -t133 * t306 + t419;
t363 = pkin(10) * t85 + t306 * t29 + t302 * t31 + t479;
t135 = (-qJD(5) + t249) * t234 + t361;
t87 = t135 * t306 + t419;
t362 = pkin(10) * t87 + t22 + t479;
t356 = -pkin(5) * t40 + qJ(6) * t39;
t349 = -pkin(5) * t448 - qJ(6) * t133;
t21 = t302 * t46 - t306 * t45;
t92 = t303 * t312 + t311;
t50 = t303 * t92 - t307 * t91;
t348 = t303 * t91 + t307 * t92;
t340 = qJD(1) * t295 - t301 * t310;
t339 = pkin(1) - t350;
t338 = t266 * pkin(2) - t364;
t317 = 0.2e1 * qJD(6) * t234 - t319;
t35 = -pkin(5) * t210 + t317 + t478;
t335 = pkin(4) * t449 + pkin(5) * t416 + t302 * t35 - t511;
t36 = (-t456 - t210) * pkin(5) + t317;
t331 = t306 * t36 + t456 * t489 + t491;
t330 = t284 - t338;
t221 = g(3) * t389 - t245 + t387;
t222 = t359 + t373;
t329 = (t221 * t304 + t222 * t308) * t300;
t316 = pkin(5) * t450 + qJ(6) * t447 - t40;
t315 = -t260 + (-t327 - t370) * qJ(3);
t178 = t300 * t336 + t325;
t277 = t301 * t294;
t270 = t292 - t293;
t241 = t300 * t260 + t428;
t237 = -t286 + (-t371 + t379) * t300;
t236 = -t252 + t434;
t235 = t251 - t434;
t227 = -t252 - t434;
t225 = -t251 + t252;
t220 = -t434 - t251;
t219 = (t308 * t340 + t327) * t457;
t218 = (t266 * t300 - t340 * t457) * t308;
t200 = -t251 - t252;
t198 = -pkin(2) * t239 + qJ(3) * t240;
t197 = (-t253 * t307 + t255 * t303) * t283;
t182 = (qJD(4) + t283) * t255 + t360;
t181 = t217 * t307 - t255 * t393;
t180 = -t216 * t303 + t253 * t392;
t179 = t301 * t270 + (t304 * t237 + t238 * t308) * t300;
t174 = t235 * t307 - t407;
t173 = -t236 * t303 + t467;
t170 = -t227 * t303 - t406;
t169 = t227 * t307 - t407;
t160 = t220 * t303 + t467;
t148 = pkin(2) * t451 - qJ(3) * t269 + t178;
t147 = -pkin(2) * t248 + qJ(3) * t265 + t171;
t142 = -t182 * t307 - t303 * t337;
t109 = -pkin(2) * t178 + qJ(3) * t171;
t83 = t135 * t302 - t418;
t81 = -t133 * t302 - t418;
t70 = t140 * t307 + t507;
t60 = t307 * t449 - t507;
t57 = qJ(3) * t337 + t169 * t433 + t413;
t54 = t303 * t87 + t469;
t53 = t303 * t85 + t469;
t52 = qJ(3) * t182 + t160 * t433 + t414;
t49 = t65 - t512;
t48 = t64 - t490;
t47 = -pkin(4) * t81 - t349;
t38 = t46 - t513;
t37 = t45 - t492;
t32 = qJ(3) * t200 + t141 * t433 - t50;
t27 = -t316 - t492;
t26 = -t302 * t36 - t424 * t456 - t490;
t25 = -pkin(5) * t417 + t306 * t35 + t512;
t24 = qJ(3) * t144 + t433 * t50;
t23 = -0.2e1 * t381 - t446 + t513;
t19 = -pkin(10) * t83 - t21;
t17 = t22 * t303 - t307 * t68;
t15 = t302 * t39 - t306 * t40;
t13 = -pkin(10) * t81 - t29 * t302 + t306 * t31;
t12 = -t303 * t38 + t307 * t49 + t433 * t70 + t510;
t11 = -t303 * t37 + t307 * t48 + t497;
t9 = t16 * t303 - t307 * t42;
t8 = -pkin(10) * t15 + (pkin(5) * t302 - t424) * t42;
t7 = t19 * t307 + t366 * t83 + t433 * t54;
t6 = t26 * t307 - t27 * t303 + t497;
t5 = -pkin(4) * t15 - t356;
t4 = -t23 * t303 + t25 * t307 + t433 * t60 - t510;
t3 = qJ(3) * t81 + t13 * t307 - t303 * t47 + t433 * t53;
t2 = t433 * t17 + (-pkin(10) * t307 + t366) * t21;
t1 = qJ(3) * t15 - t303 * t5 + t307 * t8 + t433 * t9;
t10 = [0, 0, 0, 0, 0, qJDD(1), t365, t355, 0, 0, t219, t179, t444, t218, t445, t277, (-t221 + t461) * t301 + (pkin(1) * t237 + t308 * t241 - t459) * t300, (-t222 + t460) * t301 + (-pkin(1) * t238 - t304 * t241 - t458) * t300, t329 + t385, pkin(1) * (t300 * t241 + (-t221 * t308 + t222 * t304) * t301) + pkin(8) * t329, t277, -t444, -t445, t219, t179, t218, t301 * t198 + (t308 * (-pkin(2) * t271 + t324) + (-qJ(3) * t271 + (t262 * t384 + t261) * t304 + (g(3) * t300 + t396) * t308 + t357) * t304) * t300 + t385, (t148 - t461) * t301 + (-t237 * t339 + t308 * t330 + t315 * t389 + t459) * t300, (t147 - t460) * t301 + (t304 * t338 + t458 + (-t315 + 0.2e1 * t367) * t390 + t339 * t238) * t300, (t109 + pkin(1) * (t171 * t304 - t178 * t308)) * t301 + (pkin(8) * (t171 * t308 + t178 * t304) - t339 * (t300 * t318 + t330)) * t300, t301 * t181 + (t372 + t308 * (-t217 * t303 - t255 * t392)) * t300, t301 * t142 + (t304 * t225 + t308 * (t182 * t303 - t307 * t337)) * t300, t301 * t173 + (-t304 * t186 + t308 * (-t236 * t307 - t473)) * t300, t301 * t180 + (-t372 + t308 * (-t216 * t307 - t253 * t393)) * t300, t301 * t174 + (t304 * t323 + t308 * (-t235 * t303 - t406)) * t300, t321 * t390 + t301 * t197 + (t253 * t303 + t255 * t307) * t283 * t389, (t52 + pkin(1) * (-t160 * t308 + t182 * t304)) * t301 + (t304 * (pkin(3) * t160 - t91) + t308 * (pkin(3) * t182 + t413) + pkin(8) * (t160 * t304 + t182 * t308) + t326 * (t220 * t307 - t473)) * t300, (pkin(3) * t169 - qJ(3) * t170 - t92) * t390 + (pkin(3) * t337 + t170 * t433 - t414) * t389 + t301 * t57 + pkin(1) * (-t170 * t300 + (-t169 * t308 + t304 * t337) * t301) + (t169 * t304 + t308 * t337) * t429, (t32 + pkin(1) * (-t141 * t308 + t200 * t304)) * t301 + (pkin(3) * t415 + t308 * (pkin(3) * t200 - t348) + pkin(8) * (t200 * t308 + t415) + t326 * (-t186 * t303 + t307 * t323)) * t300, (t24 + pkin(1) * (t144 * t304 - t308 * t50)) * t301 + (t326 * t348 + t432 * (t308 * t144 + t304 * t50)) * t300, t443, -t515, t500, t465, t517, t464, (t11 + t496) * t301 + (t304 * (t378 + t499) + t308 * (-t303 * t48 - t307 * t37 + t493) + t495) * t300, (t12 + pkin(1) * (-t308 * t70 + t509)) * t301 + (t304 * (pkin(3) * t70 + t377) + t308 * (-t303 * t49 - t307 * t38 + t514) + pkin(8) * (t304 * t70 + t508) + t326 * (-t140 * t303 + t506)) * t300, (t7 + pkin(1) * (t304 * t83 - t308 * t54)) * t301 + (t304 * (pkin(3) * t54 + t362) + t308 * (-t19 * t303 + (pkin(3) + t431) * t83) + pkin(8) * (t304 * t54 + t308 * t83) + t326 * (t307 * t87 - t475)) * t300, (t2 + pkin(1) * (-t17 * t308 + t21 * t304)) * t301 + ((t17 * t432 + t426) * t304 + (pkin(10) * t303 + t431 + t432) * t308 * t21 + t326 * (t22 * t307 + t303 * t68)) * t300, t443, t500, t515, t464, -t517, t465, (t6 + t496) * t301 + (t304 * (t331 + t499) + t308 * (-t26 * t303 - t27 * t307 + t493) + t495) * t300, (t3 + pkin(1) * (t304 * t81 - t308 * t53)) * t301 + (t304 * (pkin(3) * t53 + t363) + t308 * (pkin(3) * t81 - t13 * t303 - t307 * t47) + pkin(8) * (t304 * t53 + t308 * t81) + t326 * (t307 * t85 - t475)) * t300, (t4 + pkin(1) * (-t308 * t60 - t509)) * t301 + (t304 * (pkin(3) * t60 + t335) + t308 * (-t23 * t307 - t25 * t303 - t514) + pkin(8) * (t304 * t60 - t508) + t326 * (-t303 * t449 - t506)) * t300, (t1 + pkin(1) * (t15 * t304 - t308 * t9)) * t301 + (t304 * (pkin(3) * t9 + t439) + t308 * (pkin(3) * t15 - t303 * t8 - t307 * t5) + pkin(8) * (t15 * t308 + t304 * t9) + t326 * (t16 * t307 + t303 * t42)) * t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t270, t239, t280, t240, t294, -t221, -t222, 0, 0, t294, -t239, -t240, -t280, t270, t280, t198, t148, t147, t109, t181, t142, t173, t180, t174, t197, t52, t57, t32, t24, t354, t59, t498, t442, -t76, t441, t11, t12, t7, t2, t354, t498, -t59, t441, t76, t442, t6, t3, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, -t451, t248, t178, 0, 0, 0, 0, 0, 0, t160, t169, t141, t50, 0, 0, 0, 0, 0, 0, t481, t70, t54, t17, 0, 0, 0, 0, 0, 0, t481, t53, t60, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, t225, -t186, -t226, t323, t321, -t91, -t92, 0, 0, t126, t82, t483, t353, -t112, t328, t378, t377, t362, t426, t126, t483, -t82, t328, t112, t353, t331, t363, t335, t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t453, t448, -t402, -t133, t215, -t45, -t46, 0, 0, t402, t448, -t453, t215, t133, -t402, t316, t349, t243 + t446, t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t450, t448, t454, t40;];
tauJ_reg  = t10;
