% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP14_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP14_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP14_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP14_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:09:50
% EndTime: 2019-03-09 13:10:08
% DurationCPUTime: 6.31s
% Computational Cost: add. (5971->445), mult. (15236->756), div. (0->0), fcn. (13834->8), ass. (0->241)
t137 = cos(qJ(4));
t124 = qJD(4) * t137;
t133 = sin(qJ(5));
t127 = t133 ^ 2;
t136 = cos(qJ(5));
t129 = t136 ^ 2;
t250 = t127 + t129;
t90 = t250 * t124;
t131 = sin(pkin(6));
t135 = sin(qJ(2));
t259 = t131 * t135;
t132 = cos(pkin(6));
t134 = sin(qJ(4));
t138 = cos(qJ(2));
t258 = t131 * t138;
t223 = t134 * t258;
t89 = t132 * t137 - t223;
t58 = t89 * t133 - t136 * t259;
t59 = t133 * t259 + t89 * t136;
t180 = t133 * t59 + t136 * t58;
t243 = qJD(4) * t134;
t123 = qJD(5) * t136;
t240 = qJD(5) * t133;
t246 = qJD(2) * t138;
t247 = qJD(2) * t135;
t212 = t131 * t247;
t88 = t132 * t134 + t137 * t258;
t56 = qJD(4) * t88 - t134 * t212;
t26 = -t56 * t136 - t89 * t240 + (t135 * t123 + t133 * t246) * t131;
t266 = t26 * t133;
t118 = t131 * t246;
t25 = qJD(5) * t59 - t136 * t118 - t56 * t133;
t267 = t25 * t136;
t271 = t136 * t59;
t273 = t133 * t58;
t300 = t137 * (qJD(5) * (-t271 + t273) - t266 - t267) + t180 * t243;
t57 = -qJD(4) * t223 + t132 * t124 - t137 * t212;
t35 = -t136 * t57 + t88 * t240;
t299 = pkin(10) * t35;
t298 = t137 * t25 - t58 * t243;
t281 = pkin(1) * t135;
t296 = (qJ(3) + t281) * t132;
t122 = pkin(8) * t259;
t280 = pkin(1) * t138;
t231 = t132 * t280;
t295 = -t122 + t231;
t251 = t127 - t129;
t83 = t295 * qJD(2);
t128 = t134 ^ 2;
t130 = t137 ^ 2;
t204 = (t128 - t130) * qJD(4);
t108 = t251 * qJD(5);
t279 = pkin(10) * t134;
t194 = pkin(4) * t137 + t279;
t162 = t194 * qJD(4) + qJD(3);
t285 = pkin(2) + pkin(9);
t256 = t134 * t285;
t112 = t136 * t256;
t276 = t137 * pkin(10);
t193 = t134 * pkin(4) - t276;
t173 = qJ(3) + t193;
t253 = t133 * t173 - t112;
t145 = -qJD(5) * t253 + t136 * t162;
t187 = t136 * pkin(5) + t133 * qJ(6);
t103 = -pkin(4) - t187;
t186 = pkin(5) * t133 - qJ(6) * t136;
t85 = t186 * qJD(5) - t133 * qJD(6);
t268 = t137 * t85;
t170 = t285 + t186;
t78 = t170 * t137;
t294 = qJD(4) * (t103 * t134 + t276) - qJD(5) * t78 - t268;
t237 = t132 * qJD(3);
t284 = pkin(3) + pkin(8);
t50 = t237 + (-t284 * t259 + t231) * qJD(2);
t142 = t57 * pkin(4) + t56 * pkin(10) + t50;
t245 = qJD(3) * t135;
t261 = qJ(3) * t138;
t149 = t131 * (-t245 + (t285 * t135 - t261) * qJD(2));
t203 = t284 * t258;
t232 = t132 * t281;
t158 = qJD(2) * (t203 + t232);
t221 = -pkin(2) - t280;
t51 = pkin(3) * t259 + t122 + (-pkin(9) + t221) * t132;
t262 = qJ(3) * t135;
t64 = (-t285 * t138 - pkin(1) - t262) * t131;
t15 = -t51 * t124 - t134 * t158 - t137 * t149 + t64 * t243;
t156 = pkin(10) * t118 - t15;
t63 = t203 + t296;
t146 = t88 * pkin(4) - t89 * pkin(10) + t63;
t31 = t134 * t51 + t137 * t64;
t28 = pkin(10) * t259 + t31;
t274 = t133 * t146 + t136 * t28;
t4 = -qJD(5) * t274 - t133 * t156 + t136 * t142;
t292 = qJD(5) * t180 + t133 * t25 - t26 * t136;
t291 = t187 * qJD(5) - t136 * qJD(6);
t242 = qJD(4) * t136;
t225 = t88 * t242;
t260 = qJD(4) * t59;
t290 = t134 * (t35 + t260) - t137 * (t26 + t225);
t244 = qJD(4) * t133;
t36 = t88 * t123 + t133 * t57;
t289 = t134 * (t88 * t244 - t25) - t137 * (qJD(4) * t58 + t36);
t288 = 0.2e1 * t131;
t287 = 0.2e1 * qJD(3);
t286 = 0.2e1 * qJD(6);
t283 = pkin(10) * t26;
t282 = t57 * pkin(5);
t254 = t88 * qJD(6);
t265 = t57 * qJ(6);
t144 = t136 * t146;
t3 = -qJD(5) * t144 - t133 * t142 - t136 * t156 + t28 * t240;
t1 = t254 - t3 + t265;
t278 = t1 * t136;
t277 = t136 * pkin(4);
t275 = t3 * t136;
t230 = pkin(8) * t258;
t98 = t230 + t232;
t84 = t98 * qJD(2);
t272 = t135 * t84;
t269 = t137 * t56;
t264 = t57 * t134;
t263 = t84 * t132;
t257 = t133 * t285;
t255 = t137 * t285;
t252 = pkin(10) * t90;
t248 = t128 + t130;
t241 = qJD(4) * t285;
t239 = qJD(5) * t137;
t238 = qJD(5) * t285;
t235 = 0.2e1 * t58 * t25;
t41 = 0.2e1 * t88 * t57;
t234 = -0.2e1 * pkin(4) * qJD(5);
t233 = -t64 * t124 - t134 * t149 - t51 * t243;
t164 = t136 * t173;
t208 = t136 * t124;
t229 = qJD(5) * t164 + t133 * t162 - t208 * t285;
t227 = pkin(10) * t240;
t226 = pkin(10) * t123;
t224 = t285 * t259;
t222 = t133 * t256;
t126 = t131 ^ 2;
t220 = t126 * t246;
t219 = t134 * t241;
t218 = qJ(6) * t124;
t217 = t137 * t241;
t216 = t133 * t239;
t215 = t133 * t238;
t214 = t134 * t123;
t213 = t136 * t239;
t211 = t133 * t124;
t210 = t133 * t123;
t209 = t134 * t242;
t207 = t134 * t124;
t205 = -pkin(5) - t257;
t30 = -t134 * t64 + t137 * t51;
t117 = 0.2e1 * t207;
t202 = t285 * t118;
t201 = t135 * t220;
t200 = t132 * t212;
t199 = t132 * t118;
t198 = t133 * t209;
t197 = t130 * t210;
t7 = t88 * qJ(6) + t274;
t13 = -t133 * t28 + t144;
t8 = -t88 * pkin(5) - t13;
t192 = t133 * t8 + t136 * t7;
t191 = t133 * t7 - t136 * t8;
t190 = t59 * t25 + t26 * t58;
t189 = t88 * t25 + t57 * t58;
t188 = -pkin(2) * t138 - t262;
t184 = t13 * t136 + t133 * t274;
t183 = t13 * t133 - t136 * t274;
t62 = t134 * qJ(6) + t253;
t65 = -t136 * (qJ(3) - t276) + (t205 - t277) * t134;
t178 = t133 * t65 + t136 * t62;
t177 = t133 * t62 - t136 * t65;
t73 = t164 + t222;
t176 = t133 * t253 + t136 * t73;
t175 = t133 * t73 - t136 * t253;
t27 = -pkin(4) * t259 - t30;
t17 = t58 * pkin(5) - t59 * qJ(6) + t27;
t12 = (-t137 * t232 + (-t137 * t284 - pkin(4)) * t258) * qJD(2) - t233;
t5 = t25 * pkin(5) - t26 * qJ(6) - t59 * qJD(6) + t12;
t172 = -t17 * t123 - t5 * t133;
t171 = -t5 * t136 + t17 * t240;
t37 = t88 * t124 + t264;
t169 = t12 * t133 + t27 * t123;
t168 = -t12 * t136 + t27 * t240;
t167 = t58 * t240 - t267;
t166 = (t271 + t273) * pkin(10);
t163 = t36 * pkin(10);
t40 = t137 * t291 - t170 * t243;
t161 = -t40 + (t103 * t137 - t279) * qJD(5);
t2 = -t282 - t4;
t154 = -t191 * qJD(5) + t2 * t133 + t278;
t153 = -t184 * qJD(5) - t4 * t133 - t275;
t16 = t137 * t158 + t233;
t152 = -t15 * t134 + t16 * t137 + (-t134 * t30 + t137 * t31) * qJD(4);
t33 = t218 + (qJD(6) + t215) * t134 + t229;
t34 = t205 * t124 - t145;
t151 = -t177 * qJD(5) + t34 * t133 + t33 * t136;
t38 = -t134 * t215 - t229;
t39 = t211 * t285 + t145;
t150 = -t176 * qJD(5) - t39 * t133 - t38 * t136;
t148 = t133 * t298 + t58 * t213;
t143 = -t133 * t37 - t88 * t214 - t298;
t141 = t59 * t214 - t134 * t267 - t58 * t208 + (t59 * t124 + (qJD(5) * t58 + t26) * t134) * t133;
t125 = qJ(3) * t287;
t116 = -0.2e1 * t210;
t115 = 0.2e1 * t210;
t102 = -0.2e1 * t201;
t101 = 0.2e1 * t201;
t96 = -t133 * t243 + t213;
t95 = t211 + t214;
t94 = t248 * t123;
t93 = -t209 - t216;
t92 = t134 * t240 - t208;
t91 = t248 * t240;
t82 = 0.2e1 * (-t135 ^ 2 + t138 ^ 2) * t126 * qJD(2);
t81 = t221 * t132 + t122;
t80 = (-pkin(1) + t188) * t131;
t79 = -t230 - t296;
t76 = (-t135 * t243 + t137 * t246) * t131;
t75 = (-t135 * t124 - t134 * t246) * t131;
t72 = -t83 - t237;
t71 = -0.2e1 * t129 * t207 - 0.2e1 * t197;
t70 = -0.2e1 * t127 * t207 + 0.2e1 * t197;
t69 = t239 * t251 + t198;
t68 = -t133 * t204 + t134 * t213;
t67 = 0.4e1 * t137 * t210 - t251 * t243;
t66 = (-t245 + (pkin(2) * t135 - t261) * qJD(2)) * t131;
t61 = -0.2e1 * t134 * t216 - 0.2e1 * t136 * t204;
t60 = t108 * t130 + 0.2e1 * t137 * t198;
t52 = (-0.1e1 + t250) * t117;
t23 = pkin(10) * t267;
t19 = 0.2e1 * t59 * t26;
t18 = t59 * t123 + t266;
t10 = 0.2e1 * t26 * t88 + 0.2e1 * t59 * t57;
t9 = -t59 * t216 + (t137 * t26 - t59 * t243) * t136;
t6 = (t26 - t225) * t134 + (-t35 + t260) * t137;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t82, 0.2e1 * t199, t102, -0.2e1 * t200, 0, -0.2e1 * t126 * pkin(1) * t247 - 0.2e1 * t263, -0.2e1 * pkin(1) * t220 - 0.2e1 * t83 * t132 (t272 + t138 * t83 + (-t135 * t98 - t138 * t295) * qJD(2)) * t288, -0.2e1 * t295 * t84 + 0.2e1 * t98 * t83, 0, -0.2e1 * t199, 0.2e1 * t200, t101, t82, t102 (t272 - t138 * t72 + (t135 * t79 + t138 * t81) * qJD(2)) * t288, 0.2e1 * t263 + 0.2e1 * (t138 * t66 - t80 * t247) * t131, -0.2e1 * t72 * t132 + 0.2e1 * (-t135 * t66 - t80 * t246) * t131, 0.2e1 * t80 * t66 + 0.2e1 * t79 * t72 + 0.2e1 * t81 * t84, -0.2e1 * t89 * t56, 0.2e1 * t56 * t88 - 0.2e1 * t89 * t57 (-t135 * t56 + t89 * t246) * t288, t41 (-t135 * t57 - t88 * t246) * t288, t101, 0.2e1 * t50 * t88 + 0.2e1 * t63 * t57 + 0.2e1 * (t135 * t16 + t30 * t246) * t131, 0.2e1 * t50 * t89 - 0.2e1 * t63 * t56 + 0.2e1 * (t135 * t15 - t31 * t246) * t131, 0.2e1 * t15 * t88 - 0.2e1 * t16 * t89 + 0.2e1 * t30 * t56 - 0.2e1 * t31 * t57, -0.2e1 * t31 * t15 + 0.2e1 * t30 * t16 + 0.2e1 * t63 * t50, t19, -0.2e1 * t190, t10, t235, -0.2e1 * t189, t41, 0.2e1 * t12 * t58 + 0.2e1 * t13 * t57 + 0.2e1 * t27 * t25 + 0.2e1 * t4 * t88, 0.2e1 * t12 * t59 + 0.2e1 * t27 * t26 - 0.2e1 * t274 * t57 + 0.2e1 * t3 * t88, -0.2e1 * t13 * t26 - 0.2e1 * t25 * t274 + 0.2e1 * t3 * t58 - 0.2e1 * t4 * t59, 0.2e1 * t27 * t12 + 0.2e1 * t13 * t4 - 0.2e1 * t274 * t3, t19, t10, 0.2e1 * t190, t41, 0.2e1 * t189, t235, 0.2e1 * t17 * t25 - 0.2e1 * t2 * t88 + 0.2e1 * t5 * t58 - 0.2e1 * t8 * t57, -0.2e1 * t1 * t58 + 0.2e1 * t2 * t59 - 0.2e1 * t7 * t25 + 0.2e1 * t8 * t26, 0.2e1 * t1 * t88 - 0.2e1 * t17 * t26 - 0.2e1 * t5 * t59 + 0.2e1 * t7 * t57, 0.2e1 * t7 * t1 + 0.2e1 * t17 * t5 + 0.2e1 * t8 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, 0, -t212, 0, -t84, -t83, 0, 0, 0, -t118, t212, 0, 0, 0 (t188 * qJD(2) + qJD(3) * t138) * t131, t84, 0.2e1 * t237 + t83, -t84 * pkin(2) - t72 * qJ(3) - t79 * qJD(3), -t89 * t243 - t269, t56 * t134 - t137 * t57 + (t134 * t88 - t137 * t89) * qJD(4), t76, t37, t75, 0, -t137 * t202 + qJ(3) * t57 + qJD(3) * t88 + t50 * t134 + (t134 * t224 + t137 * t63) * qJD(4), t134 * t202 - qJ(3) * t56 + qJD(3) * t89 + t50 * t137 + (-t134 * t63 + t137 * t224) * qJD(4) (-t285 * t56 - t16) * t137 + (t285 * t57 + t15) * t134 + ((t285 * t88 - t31) * t137 + (-t285 * t89 + t30) * t134) * qJD(4), t50 * qJ(3) + t63 * qJD(3) - t152 * t285, t9, t300, t6, t148, t289, t37, t39 * t88 + t73 * t57 + (t4 + (-t133 * t27 - t285 * t58) * qJD(4)) * t134 + (qJD(4) * t13 + t25 * t285 + t169) * t137, t38 * t88 - t253 * t57 + (t3 + (-t136 * t27 - t285 * t59) * qJD(4)) * t134 + (-qJD(4) * t274 + t26 * t285 - t168) * t137, -t253 * t25 - t73 * t26 + t38 * t58 - t39 * t59 + t184 * t243 + (qJD(5) * t183 + t133 * t3 - t136 * t4) * t137, t13 * t39 - t274 * t38 - t3 * t253 + t4 * t73 - (-t12 * t137 + t243 * t27) * t285, t9, t6, -t300, t37, -t289, t148, t78 * t25 - t34 * t88 + t40 * t58 - t65 * t57 + (-t17 * t244 - t2) * t134 + (-qJD(4) * t8 - t172) * t137, -t62 * t25 + t65 * t26 - t33 * t58 + t34 * t59 + t191 * t243 + (-qJD(5) * t192 - t1 * t133 + t136 * t2) * t137, -t78 * t26 + t33 * t88 - t40 * t59 + t62 * t57 + (t17 * t242 + t1) * t134 + (qJD(4) * t7 + t171) * t137, t1 * t62 + t17 * t40 + t2 * t65 + t7 * t33 + t8 * t34 + t5 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287, t125, -0.2e1 * t207, 0.2e1 * t204, 0, t117, 0, 0, 0.2e1 * qJ(3) * t124 + 0.2e1 * qJD(3) * t134, -0.2e1 * qJ(3) * t243 + 0.2e1 * qJD(3) * t137, 0, t125, t71, 0.2e1 * t60, t61, t70, -0.2e1 * t68, t117, 0.2e1 * t130 * t136 * t238 + 0.2e1 * t39 * t134 + 0.2e1 * (t73 - 0.2e1 * t222) * t124, -0.2e1 * t130 * t215 + 0.2e1 * t38 * t134 + 0.2e1 * (-t253 - 0.2e1 * t112) * t124, 0.2e1 * t176 * t243 + 0.2e1 * (qJD(5) * t175 + t133 * t38 - t136 * t39) * t137, -0.2e1 * t207 * t285 ^ 2 - 0.2e1 * t253 * t38 + 0.2e1 * t73 * t39, t71, t61, -0.2e1 * t60, t117, 0.2e1 * t68, t70, 0.2e1 * (-t244 * t78 - t34) * t134 + 0.2e1 * (-qJD(4) * t65 + t123 * t78 + t40 * t133) * t137, 0.2e1 * t177 * t243 + 0.2e1 * (-qJD(5) * t178 - t133 * t33 + t136 * t34) * t137, 0.2e1 * (t242 * t78 + t33) * t134 + 0.2e1 * (qJD(4) * t62 - t40 * t136 + t240 * t78) * t137, 0.2e1 * t62 * t33 + 0.2e1 * t65 * t34 + 0.2e1 * t78 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, 0, 0, t84, 0, 0, 0, 0, 0, 0, t76, t75, -t264 + t269 + (t134 * t89 - t137 * t88) * qJD(4), t152, 0, 0, 0, 0, 0, 0, t143, t290, t141 (-qJD(4) * t183 - t12) * t137 + (qJD(4) * t27 + t153) * t134, 0, 0, 0, 0, 0, 0, t143, t141, -t290 (qJD(4) * t192 - t5) * t137 + (qJD(4) * t17 + t154) * t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, t91, 0, -t175 * t124 + (t150 + 0.2e1 * t217) * t134, 0, 0, 0, 0, 0, 0, -t94, 0, -t91 (qJD(4) * t178 - t40) * t137 + (qJD(4) * t78 + t151) * t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t57, t118, t16, t15, 0, 0, t18, -t292, t36, t167, -t35, 0, -pkin(4) * t25 - t163 + t168, -pkin(4) * t26 + t169 + t299, -t275 - t23 + (-t4 + t283) * t133 + (t166 - t184) * qJD(5), -t12 * pkin(4) + pkin(10) * t153, t18, t36, t292, 0, t35, t167, t103 * t25 + t85 * t58 - t163 + t171, t278 - t23 + (t2 + t283) * t133 + (t166 - t191) * qJD(5), -t103 * t26 - t85 * t59 + t172 - t299, pkin(10) * t154 + t5 * t103 + t17 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, 0, -t124, 0, t219, t217, 0, 0, -t69, -t67, t95, t69, -t92, 0 (t133 * t255 - t136 * t194) * qJD(5) + (t133 * t193 + t112) * qJD(4) (t133 * t194 + t136 * t255) * qJD(5) + (-t136 * t276 + (-t257 + t277) * t134) * qJD(4), t150, pkin(4) * t219 + pkin(10) * t150, -t69, t95, t67, 0, t92, t69, -t133 * t294 + t161 * t136, t151, t161 * t133 + t136 * t294, pkin(10) * t151 + t40 * t103 + t78 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, -t124, 0, 0, 0, 0, 0, 0, 0, 0, t93, -t96, t90, -pkin(4) * t243 + t252, 0, 0, 0, 0, 0, 0, t93, t90, t96, t103 * t243 + t252 - t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, -0.2e1 * t108, 0, t116, 0, 0, t133 * t234, t136 * t234, 0, 0, t115, 0, 0.2e1 * t108, 0, 0, t116, 0.2e1 * t103 * t240 - 0.2e1 * t85 * t136, 0, -0.2e1 * t103 * t123 - 0.2e1 * t85 * t133, 0.2e1 * t103 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t25, t57, t4, t3, 0, 0, 0, t26, 0, t57, t25, 0, t4 + 0.2e1 * t282, -t26 * pkin(5) - t25 * qJ(6) - t58 * qJD(6), 0.2e1 * t254 - t3 + 0.2e1 * t265, -t2 * pkin(5) + t1 * qJ(6) + t7 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t96, t124, t39, t38, 0, 0, 0, t93, 0, t124, t96, 0 (0.2e1 * pkin(5) + t257) * t124 + t145 (pkin(5) * t243 - qJ(6) * t239) * t136 + (qJ(6) * t243 + (pkin(5) * qJD(5) - qJD(6)) * t137) * t133, 0.2e1 * t218 + (t286 + t215) * t134 + t229, -t34 * pkin(5) + t33 * qJ(6) + t62 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t95, t92, 0, 0, 0, 0, 0, 0, 0, 0, -t95, 0, -t92, -t124 * t186 - t134 * t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, -t240, 0, -t226, t227, 0, 0, 0, t123, 0, 0, t240, 0, -t226, -t291, -t227, -t291 * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, qJ(6) * t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, t26, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t93, 0, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t11;
