% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPRR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPPRR3_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:58:38
% EndTime: 2019-03-09 08:58:55
% DurationCPUTime: 5.92s
% Computational Cost: add. (11585->373), mult. (31434->697), div. (0->0), fcn. (32480->12), ass. (0->208)
t105 = sin(pkin(12));
t107 = cos(pkin(12));
t249 = cos(qJ(5));
t227 = sin(pkin(11));
t97 = pkin(2) * t227 + qJ(4);
t250 = pkin(9) + t97;
t191 = t250 * t249;
t248 = sin(qJ(5));
t200 = t248 * qJD(4);
t201 = t249 * qJD(4);
t203 = qJD(5) * t248;
t86 = t250 * t107;
t257 = (-qJD(5) * t191 - t200) * t105 + t107 * t201 - t86 * t203;
t106 = sin(pkin(6));
t109 = sin(qJ(2));
t225 = t106 * t109;
t185 = t227 * t225;
t94 = qJD(2) * t185;
t111 = cos(qJ(2));
t224 = t106 * t111;
t228 = cos(pkin(11));
t95 = t228 * t224;
t165 = qJD(2) * t95 - t94;
t265 = 0.2e1 * t165;
t229 = cos(pkin(6));
t163 = t109 * t228 + t111 * t227;
t262 = t106 * t163;
t133 = -t105 * t262 + t107 * t229;
t208 = pkin(1) * t229;
t193 = t111 * t208;
t241 = pkin(8) + qJ(3);
t202 = t106 * t241;
t151 = -t109 * t202 + t193;
t135 = pkin(2) * t229 + t151;
t194 = t109 * t208;
t152 = t224 * t241 + t194;
t51 = t135 * t227 + t152 * t228;
t124 = qJ(4) * t229 + t51;
t170 = t185 - t95;
t126 = -t106 * pkin(1) - pkin(2) * t224 + pkin(3) * t170 - qJ(4) * t262;
t31 = t105 * t126 + t107 * t124;
t116 = pkin(9) * t133 + t31;
t30 = -t105 * t124 + t107 * t126;
t70 = t105 * t229 + t107 * t262;
t118 = -pkin(4) * t170 + t70 * pkin(9) - t30;
t13 = t116 * t249 - t118 * t248;
t129 = t248 * t133;
t148 = t165 * t248;
t149 = t165 * t249;
t204 = qJD(5) * t249;
t29 = qJD(5) * t129 + t105 * t149 + t107 * t148 + t204 * t70;
t130 = t249 * t133;
t45 = t248 * t70 - t130;
t84 = t105 * t203 - t107 * t204;
t91 = t105 * t249 + t107 * t248;
t237 = -t29 * t91 + t45 * t84;
t85 = t91 * qJD(5);
t90 = t105 * t248 - t107 * t249;
t264 = t84 * t90 - t85 * t91;
t263 = t170 * t84;
t134 = t170 * t165;
t50 = t135 * t228 - t152 * t227;
t47 = -pkin(3) * t229 - t50;
t38 = -pkin(4) * t133 + t47;
t46 = t249 * t70 + t129;
t121 = t45 * pkin(5) - t46 * pkin(10) + t38;
t150 = qJD(2) * t163;
t144 = t106 * t150;
t157 = t165 * t107;
t219 = qJD(3) * t106;
t131 = qJD(2) * t151 + t111 * t219;
t132 = -t109 * t219 + (-t111 * t202 - t194) * qJD(2);
t43 = t131 * t228 + t132 * t227;
t122 = qJD(4) * t229 + t43;
t145 = qJD(2) * t262;
t221 = qJD(2) * t109;
t206 = t106 * t221;
t196 = pkin(2) * t206;
t123 = pkin(3) * t145 - qJ(4) * t165 - qJD(4) * t262 + t196;
t24 = -t105 * t122 + t107 * t123;
t113 = -pkin(4) * t144 + pkin(9) * t157 - t24;
t158 = t165 * t105;
t25 = t105 * t123 + t107 * t122;
t114 = -pkin(9) * t158 + t25;
t260 = t116 * t248 + t118 * t249;
t5 = qJD(5) * t260 + t248 * t113 - t114 * t249;
t261 = -pkin(10) * t144 - qJD(6) * t121 + t5;
t125 = -qJD(5) * t130 + t105 * t148 - t107 * t149 + t203 * t70;
t259 = -qJD(6) * t170 + t125;
t99 = -pkin(2) * t228 - pkin(3);
t93 = -pkin(4) * t107 + t99;
t143 = pkin(5) * t90 - pkin(10) * t91 + t93;
t258 = -qJD(6) * t143 - t257;
t108 = sin(qJ(6));
t103 = t108 ^ 2;
t110 = cos(qJ(6));
t104 = t110 ^ 2;
t199 = qJD(6) * (t103 - t104);
t256 = -t125 * t90 + t46 * t85;
t216 = qJD(6) * t108;
t210 = t91 * t216;
t255 = t110 * t237 + t210 * t45;
t190 = t250 * t248;
t62 = -t105 * t190 + t249 * t86;
t39 = -t108 * t62 + t110 * t143;
t40 = t108 * t143 + t110 * t62;
t171 = t108 * t39 - t110 * t40;
t251 = pkin(10) * t84;
t252 = pkin(5) * t85;
t188 = t251 + t252;
t21 = -t108 * t188 + t110 * t258 + t62 * t216;
t215 = qJD(6) * t110;
t22 = t108 * t258 + t110 * t188 - t62 * t215;
t254 = qJD(6) * t171 + t108 * t21 - t110 * t22;
t11 = pkin(10) * t170 + t13;
t42 = t131 * t227 - t132 * t228;
t34 = pkin(4) * t158 + t42;
t119 = t29 * pkin(5) + pkin(10) * t125 + t34;
t1 = -t108 * t119 + t11 * t216 + t110 * t261;
t7 = -t108 * t11 + t110 * t121;
t8 = t108 * t121 + t110 * t11;
t181 = t108 * t7 - t110 * t8;
t2 = t108 * t261 - t11 * t215 + t110 * t119;
t253 = qJD(6) * t181 + t1 * t108 - t110 * t2;
t101 = t106 ^ 2;
t6 = -qJD(5) * t13 - t113 * t249 - t248 * t114;
t4 = -pkin(5) * t144 - t6;
t247 = t108 * t4;
t37 = t108 * t170 + t110 * t46;
t246 = t37 * t84;
t52 = t107 * t200 + t86 * t204 + (-qJD(5) * t190 + t201) * t105;
t61 = t105 * t191 + t248 * t86;
t244 = t61 * t52;
t243 = t90 * t85;
t242 = t91 * t84;
t18 = -t108 * t259 - t110 * t144 + t46 * t215;
t36 = t108 * t46 - t110 * t170;
t240 = -t108 * t18 - t215 * t36;
t230 = t110 * t91;
t231 = t110 * t84;
t239 = -t18 * t230 + t231 * t36;
t17 = -t108 * t144 + t110 * t259 + t46 * t216;
t238 = -t17 * t90 + t37 * t85;
t236 = t230 * t85 - t231 * t90;
t234 = t103 * t84;
t79 = t104 * t84;
t233 = t108 * t17;
t232 = t110 * t18;
t226 = qJD(6) * t36;
t222 = qJD(2) * t106;
t220 = qJD(2) * t111;
t218 = qJD(4) * t105;
t217 = qJD(4) * t107;
t214 = 0.2e1 * t45 * t29;
t213 = 0.2e1 * t243;
t212 = -0.2e1 * pkin(5) * qJD(6);
t211 = t108 * t231;
t209 = t91 * t215;
t207 = t101 * t220;
t205 = t108 * t215;
t197 = t37 * t209;
t89 = t91 ^ 2;
t195 = t89 * t205;
t192 = t109 * t207;
t100 = t105 ^ 2;
t102 = t107 ^ 2;
t189 = 0.2e1 * (t100 + t102) * qJD(4);
t187 = pkin(5) * t84 - pkin(10) * t85;
t186 = pkin(5) * t91 + pkin(10) * t90;
t184 = t229 * t222;
t182 = t108 * t8 + t110 * t7;
t180 = -t18 * t90 - t36 * t85;
t178 = t29 * t90 + t45 * t85;
t177 = t52 * t91 - t61 * t84;
t176 = t52 * t90 + t61 * t85;
t174 = -t24 * t105 + t25 * t107;
t172 = t108 * t40 + t110 * t39;
t169 = -t110 * t17 - t216 * t37;
t168 = t108 * t29 + t215 * t45;
t167 = -t110 * t29 + t216 * t45;
t166 = -t108 * t84 + t209;
t58 = t210 + t231;
t59 = t108 * t85 + t215 * t90;
t162 = -pkin(8) * t224 - t194;
t161 = pkin(8) * t225 - t193;
t160 = t100 * t165;
t159 = t165 * t102;
t154 = t105 * t157;
t146 = t101 * t150;
t142 = t108 * t237 - t209 * t45;
t141 = -0.2e1 * t145;
t139 = -qJD(6) * t182 - t1 * t110 - t108 * t2;
t138 = t105 * t144;
t137 = -qJD(6) * t172 - t108 * t22 - t110 * t21;
t127 = t133 * t165;
t92 = (-t111 * pkin(2) - pkin(1)) * t106;
t83 = t162 * qJD(2);
t82 = t161 * qJD(2);
t74 = t107 * t144;
t67 = t91 * t79;
t66 = t91 * t234;
t57 = -t110 * t85 + t216 * t90;
t55 = t79 + t234;
t54 = 0.2e1 * t170 * t144;
t49 = t199 * t91 + t211;
t44 = -t144 * t90 - t170 * t85;
t10 = -pkin(5) * t170 + t260;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t192, 0.2e1 * (-t109 ^ 2 + t111 ^ 2) * t101 * qJD(2), 0.2e1 * t111 * t184, -0.2e1 * t192, -0.2e1 * t109 * t184, 0, -0.2e1 * pkin(1) * t101 * t221 + 0.2e1 * t229 * t83, -0.2e1 * pkin(1) * t207 + 0.2e1 * t229 * t82, 0.2e1 * (-t109 * t83 - t111 * t82 + (t109 * t162 + t111 * t161) * qJD(2)) * t106, -0.2e1 * t161 * t83 + 0.2e1 * t162 * t82, t262 * t265, -0.2e1 * t146 * t163 - 0.2e1 * t134, t229 * t265, -t170 * t141, t229 * t141, 0, 0.2e1 * t144 * t92 + 0.2e1 * t170 * t196 - 0.2e1 * t229 * t42, 0.2e1 * pkin(2) * t109 * t146 + 0.2e1 * t165 * t92 - 0.2e1 * t229 * t43, -0.2e1 * t145 * t51 - 0.2e1 * t165 * t50 - 0.2e1 * t170 * t43 + 0.2e1 * t262 * t42, 0.2e1 * t196 * t92 - 0.2e1 * t42 * t50 + 0.2e1 * t43 * t51, 0.2e1 * t70 * t157, 0.2e1 * t107 * t127 - 0.2e1 * t158 * t70, 0.2e1 * t107 * t134 + 0.2e1 * t144 * t70, -0.2e1 * t105 * t127, -0.2e1 * t105 * t134 + 0.2e1 * t133 * t144, t54, -0.2e1 * t133 * t42 + 0.2e1 * t144 * t30 + 0.2e1 * t158 * t47 + 0.2e1 * t170 * t24, -0.2e1 * t145 * t31 + 0.2e1 * t157 * t47 - 0.2e1 * t170 * t25 + 0.2e1 * t42 * t70, 0.2e1 * t133 * t25 - 0.2e1 * t157 * t30 - 0.2e1 * t158 * t31 - 0.2e1 * t24 * t70, 0.2e1 * t24 * t30 + 0.2e1 * t25 * t31 + 0.2e1 * t42 * t47, -0.2e1 * t46 * t125, 0.2e1 * t125 * t45 - 0.2e1 * t46 * t29, -0.2e1 * t125 * t170 + 0.2e1 * t144 * t46, t214, -0.2e1 * t144 * t45 - 0.2e1 * t170 * t29, t54, -0.2e1 * t144 * t260 + 0.2e1 * t170 * t6 + 0.2e1 * t38 * t29 + 0.2e1 * t34 * t45, -0.2e1 * t125 * t38 - 0.2e1 * t13 * t145 + 0.2e1 * t170 * t5 + 0.2e1 * t34 * t46, -0.2e1 * t125 * t260 - 0.2e1 * t13 * t29 + 0.2e1 * t5 * t45 - 0.2e1 * t6 * t46, -0.2e1 * t13 * t5 - 0.2e1 * t260 * t6 + 0.2e1 * t34 * t38, -0.2e1 * t37 * t17, 0.2e1 * t17 * t36 - 0.2e1 * t18 * t37, -0.2e1 * t17 * t45 + 0.2e1 * t29 * t37, 0.2e1 * t36 * t18, -0.2e1 * t18 * t45 - 0.2e1 * t29 * t36, t214, 0.2e1 * t10 * t18 + 0.2e1 * t2 * t45 + 0.2e1 * t29 * t7 + 0.2e1 * t36 * t4, 0.2e1 * t1 * t45 - 0.2e1 * t10 * t17 - 0.2e1 * t29 * t8 + 0.2e1 * t37 * t4, 0.2e1 * t1 * t36 + 0.2e1 * t17 * t7 - 0.2e1 * t18 * t8 - 0.2e1 * t2 * t37, -0.2e1 * t1 * t8 + 0.2e1 * t10 * t4 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106 * t220, 0, -t206, 0, t83, t82, 0, 0, 0, 0, t165, 0, -t145, 0, -t42, -t43 (t228 * t94 + (-t111 * t228 ^ 2 - t163 * t227) * t222) * pkin(2) (t227 * t43 - t228 * t42) * pkin(2), t154, -t160 + t159, t138, -t154, t74, 0, -t42 * t107 - t138 * t97 + t158 * t99 - t170 * t218, -t107 * t145 * t97 + t42 * t105 + t157 * t99 - t170 * t217, t133 * t217 + t218 * t70 + t174, t42 * t99 + t174 * t97 + (-t105 * t30 + t107 * t31) * qJD(4), -t125 * t91 - t46 * t84, t237 - t256, t144 * t91 - t263, t178, t44, 0, -t144 * t61 - t170 * t52 + t93 * t29 + t34 * t90 + t38 * t85, -t125 * t93 - t145 * t62 - t170 * t257 + t34 * t91 - t38 * t84, -t125 * t61 - t13 * t85 - t257 * t45 - t260 * t84 - t62 * t29 + t52 * t46 + t5 * t90 - t6 * t91, t13 * t257 + t260 * t52 + t34 * t93 - t5 * t62 - t6 * t61, -t37 * t210 + (-t17 * t91 - t246) * t110, -t197 + (t246 + (t17 + t226) * t91) * t108 + t239, t238 - t255, t36 * t209 + (t18 * t91 - t36 * t84) * t108, t142 + t180, t178, t10 * t166 + t18 * t61 + t2 * t90 + t22 * t45 + t247 * t91 + t29 * t39 + t36 * t52 + t7 * t85, t1 * t90 - t10 * t58 - t17 * t61 + t21 * t45 + t230 * t4 - t29 * t40 + t37 * t52 - t8 * t85, t17 * t39 - t18 * t40 + t182 * t84 + t21 * t36 - t22 * t37 + t253 * t91, -t1 * t40 + t10 * t52 + t2 * t39 - t21 * t8 + t22 * t7 + t4 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t97 * t189, -0.2e1 * t242, 0.2e1 * t264, 0, t213, 0, 0, 0.2e1 * t93 * t85, -0.2e1 * t93 * t84, -0.2e1 * t257 * t90 - 0.2e1 * t62 * t85 + 0.2e1 * t177, 0.2e1 * t257 * t62 + 0.2e1 * t244, -0.2e1 * t67 - 0.2e1 * t195, 0.2e1 * t199 * t89 + 0.4e1 * t211 * t91, -0.2e1 * t210 * t90 + 0.2e1 * t236, -0.2e1 * t66 + 0.2e1 * t195, 0.2e1 * t108 * t264 - 0.2e1 * t209 * t90, t213, 0.2e1 * t108 * t177 + 0.2e1 * t209 * t61 + 0.2e1 * t22 * t90 + 0.2e1 * t39 * t85, 0.2e1 * t110 * t177 + 0.2e1 * t21 * t90 - 0.2e1 * t210 * t61 - 0.2e1 * t40 * t85, 0.2e1 * t172 * t84 + 0.2e1 * t254 * t91, -0.2e1 * t21 * t40 + 0.2e1 * t22 * t39 + 0.2e1 * t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, t165, 0, t196, 0, 0, 0, 0, 0, 0, t74, -t105 * t145, -t160 - t159, t105 * t25 + t107 * t24, 0, 0, 0, 0, 0, 0, t44, -t145 * t91 + t263, t237 + t256, -t13 * t84 + t260 * t85 - t5 * t91 - t6 * t90, 0, 0, 0, 0, 0, 0, t142 - t180, t238 + t255, t197 + (-t246 + (-t17 + t226) * t91) * t108 + t239, t10 * t85 + t139 * t91 + t181 * t84 + t4 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257 * t91 - t62 * t84 + t176, 0, 0, 0, 0, 0, 0, 0, t110 * t264 + t236, 0, t137 * t91 + t171 * t84 + t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t242 + 0.2e1 * t243, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t66 - 0.2e1 * t67 + 0.2e1 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t157, 0, t42, 0, 0, 0, 0, 0, 0, t29, -t125, 0, t34, 0, 0, 0, 0, 0, 0, -t167, -t168, -t169 + t240, -t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, -t84, 0, 0, 0, 0, 0, 0, 0, 0, -t57, -t59, t55, -t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, 0, -t29, t144, t6, t5, 0, 0, t215 * t37 - t233, t169 + t240, t168, t216 * t36 - t232, -t167, 0, -pkin(5) * t18 - pkin(10) * t168 + t10 * t216 - t110 * t4, pkin(5) * t17 + pkin(10) * t167 + t10 * t215 + t247 (-t233 - t232 + (t108 * t36 + t110 * t37) * qJD(6)) * pkin(10) + t139, -pkin(5) * t4 + pkin(10) * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, 0, -t85, 0, -t52, -t257, 0, 0, -t49, -0.4e1 * t205 * t91 + t234 - t79, t59, t49, -t57, 0, -t110 * t52 + t187 * t108 + (t108 * t61 - t110 * t186) * qJD(6), t108 * t52 + t187 * t110 + (t108 * t186 + t110 * t61) * qJD(6), t137, -pkin(5) * t52 + pkin(10) * t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t84, 0, 0, 0, 0, 0, 0, 0, 0, t57, t59, -t55, -t252 + (-t103 - t104) * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t205, -0.2e1 * t199, 0, -0.2e1 * t205, 0, 0, t108 * t212, t110 * t212, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17, 0, -t18, t29, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, -t166, t85, t22, t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, t58, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, -t215, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, 0, -t216, 0, -pkin(10) * t215, pkin(10) * t216, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
