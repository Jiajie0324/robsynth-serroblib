% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPPRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 10:07
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPPRR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPPRR3_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 10:07:39
% EndTime: 2019-05-06 10:07:51
% DurationCPUTime: 12.17s
% Computational Cost: add. (131697->371), mult. (357579->579), div. (0->0), fcn. (289010->14), ass. (0->318)
t2684 = sin(pkin(11));
t2687 = cos(pkin(11));
t2691 = sin(qJ(2));
t2695 = cos(qJ(2));
t2685 = sin(pkin(6));
t2751 = qJD(1) * t2685;
t2649 = (t2684 * t2695 + t2687 * t2691) * t2751;
t2688 = cos(pkin(6));
t2677 = qJD(1) * t2688 + qJD(2);
t2683 = sin(pkin(12));
t2686 = cos(pkin(12));
t2631 = -t2683 * t2649 + t2677 * t2686;
t2632 = t2649 * t2686 + t2677 * t2683;
t2690 = sin(qJ(5));
t2694 = cos(qJ(5));
t2599 = -t2694 * t2631 + t2632 * t2690;
t2597 = qJD(6) + t2599;
t2761 = qJD(6) + t2597;
t2733 = t2695 * t2751;
t2736 = qJDD(1) * t2685;
t2659 = qJD(2) * t2733 + t2691 * t2736;
t2741 = t2685 * t2691;
t2734 = qJD(1) * t2741;
t2660 = -qJD(2) * t2734 + t2695 * t2736;
t2624 = t2687 * t2659 + t2684 * t2660;
t2647 = t2684 * t2734 - t2687 * t2733;
t2744 = t2647 * t2677;
t2604 = t2624 - t2744;
t2601 = t2631 * t2690 + t2632 * t2694;
t2645 = qJD(5) + t2647;
t2689 = sin(qJ(6));
t2693 = cos(qJ(6));
t2581 = t2601 * t2689 - t2693 * t2645;
t2760 = t2581 ^ 2;
t2583 = t2601 * t2693 + t2645 * t2689;
t2759 = t2583 ^ 2;
t2758 = t2597 ^ 2;
t2757 = t2599 ^ 2;
t2756 = t2601 ^ 2;
t2630 = t2631 ^ 2;
t2755 = t2632 ^ 2;
t2754 = t2645 ^ 2;
t2623 = t2647 ^ 2;
t2753 = t2649 ^ 2;
t2663 = t2677 ^ 2;
t2752 = -2 * qJD(3);
t2750 = t2581 * t2583;
t2749 = t2599 * t2601;
t2748 = t2631 * t2632;
t2747 = t2632 * t2647;
t2746 = t2647 * t2631;
t2745 = t2647 * t2649;
t2743 = t2649 * t2677;
t2697 = qJD(1) ^ 2;
t2742 = t2685 ^ 2 * t2697;
t2692 = sin(qJ(1));
t2696 = cos(qJ(1));
t2670 = t2692 * g(1) - g(2) * t2696;
t2656 = pkin(8) * t2685 * t2697 + qJDD(1) * pkin(1) + t2670;
t2740 = t2688 * t2656;
t2739 = qJD(5) - t2645;
t2738 = qJD(6) - t2597;
t2671 = -g(1) * t2696 - g(2) * t2692;
t2701 = -pkin(1) * t2697 + pkin(8) * t2736 + t2671;
t2615 = -g(3) * t2741 + t2691 * t2740 + t2695 * t2701;
t2655 = pkin(2) * t2677 - qJ(3) * t2734;
t2682 = t2695 ^ 2;
t2732 = t2682 * t2742;
t2585 = -pkin(2) * t2732 + qJ(3) * t2660 - t2655 * t2677 + t2615;
t2700 = t2691 * t2701;
t2731 = t2691 * t2742;
t2735 = t2688 * qJDD(1) + qJDD(2);
t2698 = -t2700 - t2659 * qJ(3) + t2735 * pkin(2) + (pkin(2) * t2731 + t2740 + (qJ(3) * qJD(1) * t2677 - g(3)) * t2685) * t2695;
t2546 = t2687 * t2585 + t2647 * t2752 + t2684 * t2698;
t2620 = pkin(3) * t2647 - qJ(4) * t2649;
t2531 = -pkin(3) * t2663 + qJ(4) * t2735 - t2647 * t2620 + t2546;
t2637 = -t2688 * g(3) - t2685 * t2656;
t2598 = -t2660 * pkin(2) - qJ(3) * t2732 + t2655 * t2734 + qJDD(3) + t2637;
t2737 = t2684 * t2659 - t2687 * t2660;
t2602 = t2737 + t2743;
t2551 = t2602 * pkin(3) - qJ(4) * t2604 + t2598;
t2508 = 0.2e1 * qJD(4) * t2631 + t2686 * t2531 + t2683 * t2551;
t2608 = pkin(4) * t2647 - pkin(9) * t2632;
t2612 = -t2624 * t2683 + t2686 * t2735;
t2495 = -pkin(4) * t2630 + pkin(9) * t2612 - t2608 * t2647 + t2508;
t2507 = -0.2e1 * qJD(4) * t2632 - t2683 * t2531 + t2686 * t2551;
t2613 = t2686 * t2624 + t2683 * t2735;
t2572 = -t2613 + t2746;
t2573 = t2737 + t2748;
t2699 = pkin(4) * t2573 + pkin(9) * t2572 + t2507;
t2459 = t2694 * t2495 + t2690 * t2699;
t2730 = qJDD(5) + t2737;
t2458 = -t2495 * t2690 + t2694 * t2699;
t2708 = -t2690 * t2612 - t2694 * t2613;
t2559 = -qJD(5) * t2599 - t2708;
t2729 = t2645 * t2599 - t2559;
t2728 = -t2689 * t2559 + t2693 * t2730;
t2727 = t2684 * t2585 - t2687 * t2698;
t2726 = -t2694 * t2612 + t2690 * t2613;
t2725 = t2677 * t2733;
t2563 = pkin(5) * t2599 - pkin(10) * t2601;
t2457 = -pkin(5) * t2754 + pkin(10) * t2730 - t2599 * t2563 + t2459;
t2529 = qJDD(4) - t2735 * pkin(3) - t2663 * qJ(4) + ((2 * qJD(3)) + t2620) * t2649 + t2727;
t2513 = -t2612 * pkin(4) - t2630 * pkin(9) + t2632 * t2608 + t2529;
t2537 = (qJD(5) + t2645) * t2601 + t2726;
t2474 = pkin(5) * t2537 + pkin(10) * t2729 + t2513;
t2441 = -t2457 * t2689 + t2474 * t2693;
t2442 = t2457 * t2693 + t2474 * t2689;
t2427 = -t2441 * t2689 + t2442 * t2693;
t2456 = -pkin(5) * t2730 - pkin(10) * t2754 + t2563 * t2601 - t2458;
t2417 = t2427 * t2690 - t2456 * t2694;
t2418 = t2427 * t2694 + t2456 * t2690;
t2409 = -t2417 * t2683 + t2418 * t2686;
t2426 = t2441 * t2693 + t2442 * t2689;
t2404 = t2409 * t2684 - t2426 * t2687;
t2405 = t2409 * t2687 + t2426 * t2684;
t2724 = t2404 * t2695 + t2405 * t2691;
t2436 = t2458 * t2694 + t2459 * t2690;
t2437 = -t2458 * t2690 + t2459 * t2694;
t2424 = -t2436 * t2683 + t2437 * t2686;
t2420 = t2424 * t2684 - t2513 * t2687;
t2421 = t2424 * t2687 + t2513 * t2684;
t2723 = t2420 * t2695 + t2421 * t2691;
t2510 = -t2583 * t2738 + t2728;
t2702 = -t2693 * t2559 - t2689 * t2730;
t2512 = t2581 * t2738 + t2702;
t2476 = t2510 * t2693 - t2512 * t2689;
t2530 = -t2759 - t2760;
t2464 = t2476 * t2690 - t2530 * t2694;
t2465 = t2476 * t2694 + t2530 * t2690;
t2447 = -t2464 * t2683 + t2465 * t2686;
t2475 = t2510 * t2689 + t2512 * t2693;
t2432 = t2447 * t2684 - t2475 * t2687;
t2433 = t2447 * t2687 + t2475 * t2684;
t2722 = t2432 * t2695 + t2433 * t2691;
t2703 = -qJD(5) * t2601 - qJDD(6) - t2726;
t2516 = -t2703 - t2750;
t2541 = -t2758 - t2760;
t2497 = -t2516 * t2689 + t2541 * t2693;
t2509 = t2583 * t2761 - t2728;
t2466 = t2497 * t2690 - t2509 * t2694;
t2467 = t2497 * t2694 + t2509 * t2690;
t2451 = -t2466 * t2683 + t2467 * t2686;
t2496 = t2516 * t2693 + t2541 * t2689;
t2434 = t2451 * t2684 - t2496 * t2687;
t2435 = t2451 * t2687 + t2496 * t2684;
t2721 = t2434 * t2695 + t2435 * t2691;
t2517 = t2703 - t2750;
t2544 = -t2758 - t2759;
t2500 = t2517 * t2693 - t2544 * t2689;
t2511 = -t2581 * t2761 - t2702;
t2468 = t2500 * t2690 - t2511 * t2694;
t2469 = t2500 * t2694 + t2511 * t2690;
t2453 = -t2468 * t2683 + t2469 * t2686;
t2499 = t2517 * t2689 + t2544 * t2693;
t2438 = t2453 * t2684 - t2499 * t2687;
t2439 = t2453 * t2687 + t2499 * t2684;
t2720 = t2438 * t2695 + t2439 * t2691;
t2473 = -t2507 * t2683 + t2508 * t2686;
t2460 = t2473 * t2684 - t2529 * t2687;
t2461 = t2473 * t2687 + t2529 * t2684;
t2719 = t2460 * t2695 + t2461 * t2691;
t2538 = -t2601 * t2739 - t2726;
t2540 = t2599 * t2739 + t2708;
t2505 = t2538 * t2690 + t2540 * t2694;
t2506 = t2538 * t2694 - t2540 * t2690;
t2471 = -t2505 * t2683 + t2506 * t2686;
t2547 = -t2756 - t2757;
t2462 = t2471 * t2684 - t2547 * t2687;
t2463 = t2471 * t2687 + t2547 * t2684;
t2718 = t2462 * t2695 + t2463 * t2691;
t2557 = t2730 - t2749;
t2562 = -t2754 - t2757;
t2518 = t2557 * t2694 + t2562 * t2690;
t2519 = -t2557 * t2690 + t2562 * t2694;
t2493 = -t2518 * t2683 + t2519 * t2686;
t2477 = t2493 * t2684 - t2537 * t2687;
t2478 = t2493 * t2687 + t2537 * t2684;
t2717 = t2477 * t2695 + t2478 * t2691;
t2558 = -t2730 - t2749;
t2568 = -t2754 - t2756;
t2526 = t2558 * t2690 + t2568 * t2694;
t2527 = t2558 * t2694 - t2568 * t2690;
t2503 = -t2526 * t2683 + t2527 * t2686;
t2481 = t2503 * t2684 + t2687 * t2729;
t2482 = t2503 * t2687 - t2684 * t2729;
t2716 = t2481 * t2695 + t2482 * t2691;
t2545 = t2649 * t2752 - t2727;
t2514 = t2545 * t2687 + t2546 * t2684;
t2515 = -t2545 * t2684 + t2546 * t2687;
t2715 = t2514 * t2695 + t2515 * t2691;
t2570 = t2612 + t2747;
t2549 = t2570 * t2686 - t2572 * t2683;
t2576 = -t2630 - t2755;
t2522 = t2549 * t2684 - t2576 * t2687;
t2523 = t2549 * t2687 + t2576 * t2684;
t2714 = t2522 * t2695 + t2523 * t2691;
t2589 = -t2623 - t2630;
t2554 = -t2573 * t2683 + t2589 * t2686;
t2569 = -t2612 + t2747;
t2524 = t2554 * t2684 - t2569 * t2687;
t2525 = t2554 * t2687 + t2569 * t2684;
t2713 = t2524 * t2695 + t2525 * t2691;
t2574 = -t2737 + t2748;
t2596 = -t2623 - t2755;
t2556 = t2574 * t2686 - t2596 * t2683;
t2571 = t2613 + t2746;
t2532 = t2556 * t2684 - t2571 * t2687;
t2533 = t2556 * t2687 + t2571 * t2684;
t2712 = t2532 * t2695 + t2533 * t2691;
t2603 = -t2737 + t2743;
t2605 = -t2624 - t2744;
t2564 = t2603 * t2684 + t2605 * t2687;
t2565 = t2603 * t2687 - t2605 * t2684;
t2711 = t2564 * t2695 + t2565 * t2691;
t2616 = -t2623 - t2663;
t2617 = t2735 - t2745;
t2577 = t2616 * t2684 + t2617 * t2687;
t2578 = t2616 * t2687 - t2617 * t2684;
t2710 = t2577 * t2695 + t2578 * t2691;
t2618 = -t2735 - t2745;
t2629 = -t2663 - t2753;
t2587 = t2618 * t2684 + t2629 * t2687;
t2588 = t2618 * t2687 - t2629 * t2684;
t2709 = t2587 * t2695 + t2588 * t2691;
t2614 = -t2700 + (-g(3) * t2685 + t2740) * t2695;
t2707 = t2614 * t2695 + t2615 * t2691;
t2634 = t2725 - t2659;
t2664 = t2677 * t2734;
t2635 = t2660 + t2664;
t2706 = t2634 * t2695 + t2635 * t2691;
t2681 = t2691 ^ 2;
t2646 = -t2681 * t2742 - t2663;
t2669 = t2695 * t2731;
t2658 = t2669 - t2735;
t2705 = t2646 * t2695 + t2658 * t2691;
t2657 = t2669 + t2735;
t2661 = -t2732 - t2663;
t2704 = t2657 * t2695 + t2661 * t2691;
t2668 = -qJDD(1) * t2692 - t2696 * t2697;
t2667 = qJDD(1) * t2696 - t2692 * t2697;
t2662 = (-t2681 - t2682) * t2742;
t2636 = -t2660 + t2664;
t2633 = t2725 + t2659;
t2625 = -t2657 * t2691 + t2661 * t2695;
t2619 = -t2646 * t2691 + t2658 * t2695;
t2607 = -t2753 - t2623;
t2606 = -t2634 * t2691 + t2635 * t2695;
t2595 = -t2685 * t2636 + t2688 * t2704;
t2594 = t2688 * t2636 + t2685 * t2704;
t2593 = -t2685 * t2633 + t2688 * t2705;
t2592 = t2688 * t2633 + t2685 * t2705;
t2591 = -t2685 * t2662 + t2688 * t2706;
t2590 = t2688 * t2662 + t2685 * t2706;
t2575 = -t2614 * t2691 + t2615 * t2695;
t2567 = -t2685 * t2637 + t2688 * t2707;
t2566 = t2688 * t2637 + t2685 * t2707;
t2560 = -t2587 * t2691 + t2588 * t2695;
t2555 = t2574 * t2683 + t2596 * t2686;
t2553 = t2573 * t2686 + t2589 * t2683;
t2552 = -t2577 * t2691 + t2578 * t2695;
t2548 = t2570 * t2683 + t2572 * t2686;
t2543 = -t2685 * t2604 + t2688 * t2709;
t2542 = t2688 * t2604 + t2685 * t2709;
t2536 = -t2564 * t2691 + t2565 * t2695;
t2535 = -t2685 * t2602 + t2688 * t2710;
t2534 = t2688 * t2602 + t2685 * t2710;
t2521 = -t2685 * t2607 + t2688 * t2711;
t2520 = t2688 * t2607 + t2685 * t2711;
t2504 = -t2532 * t2691 + t2533 * t2695;
t2502 = t2526 * t2686 + t2527 * t2683;
t2501 = -t2524 * t2691 + t2525 * t2695;
t2498 = -t2522 * t2691 + t2523 * t2695;
t2492 = t2518 * t2686 + t2519 * t2683;
t2489 = -t2685 * t2555 + t2688 * t2712;
t2488 = t2688 * t2555 + t2685 * t2712;
t2487 = -t2685 * t2553 + t2688 * t2713;
t2486 = t2688 * t2553 + t2685 * t2713;
t2485 = -t2685 * t2548 + t2688 * t2714;
t2484 = t2688 * t2548 + t2685 * t2714;
t2483 = -t2514 * t2691 + t2515 * t2695;
t2480 = -t2685 * t2598 + t2688 * t2715;
t2479 = t2688 * t2598 + t2685 * t2715;
t2472 = t2507 * t2686 + t2508 * t2683;
t2470 = t2505 * t2686 + t2506 * t2683;
t2455 = -t2481 * t2691 + t2482 * t2695;
t2454 = -t2477 * t2691 + t2478 * t2695;
t2452 = t2468 * t2686 + t2469 * t2683;
t2450 = t2466 * t2686 + t2467 * t2683;
t2449 = -t2685 * t2502 + t2688 * t2716;
t2448 = t2688 * t2502 + t2685 * t2716;
t2446 = t2464 * t2686 + t2465 * t2683;
t2445 = -t2462 * t2691 + t2463 * t2695;
t2444 = -t2685 * t2492 + t2688 * t2717;
t2443 = t2688 * t2492 + t2685 * t2717;
t2440 = -t2460 * t2691 + t2461 * t2695;
t2431 = -t2685 * t2470 + t2688 * t2718;
t2430 = t2688 * t2470 + t2685 * t2718;
t2429 = -t2685 * t2472 + t2688 * t2719;
t2428 = t2688 * t2472 + t2685 * t2719;
t2425 = -t2438 * t2691 + t2439 * t2695;
t2423 = t2436 * t2686 + t2437 * t2683;
t2422 = -t2434 * t2691 + t2435 * t2695;
t2419 = -t2432 * t2691 + t2433 * t2695;
t2416 = -t2685 * t2452 + t2688 * t2720;
t2415 = t2688 * t2452 + t2685 * t2720;
t2414 = -t2685 * t2450 + t2688 * t2721;
t2413 = t2688 * t2450 + t2685 * t2721;
t2412 = -t2685 * t2446 + t2688 * t2722;
t2411 = t2688 * t2446 + t2685 * t2722;
t2410 = -t2420 * t2691 + t2421 * t2695;
t2408 = t2417 * t2686 + t2418 * t2683;
t2407 = -t2685 * t2423 + t2688 * t2723;
t2406 = t2688 * t2423 + t2685 * t2723;
t2403 = -t2404 * t2691 + t2405 * t2695;
t2402 = -t2685 * t2408 + t2688 * t2724;
t2401 = t2688 * t2408 + t2685 * t2724;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2668, -t2667, 0, -t2670 * t2692 + t2671 * t2696, 0, 0, 0, 0, 0, 0, -t2595 * t2692 + t2625 * t2696, -t2593 * t2692 + t2619 * t2696, -t2591 * t2692 + t2606 * t2696, -t2567 * t2692 + t2575 * t2696, 0, 0, 0, 0, 0, 0, -t2535 * t2692 + t2552 * t2696, -t2543 * t2692 + t2560 * t2696, -t2521 * t2692 + t2536 * t2696, -t2480 * t2692 + t2483 * t2696, 0, 0, 0, 0, 0, 0, -t2487 * t2692 + t2501 * t2696, -t2489 * t2692 + t2504 * t2696, -t2485 * t2692 + t2498 * t2696, -t2429 * t2692 + t2440 * t2696, 0, 0, 0, 0, 0, 0, -t2444 * t2692 + t2454 * t2696, -t2449 * t2692 + t2455 * t2696, -t2431 * t2692 + t2445 * t2696, -t2407 * t2692 + t2410 * t2696, 0, 0, 0, 0, 0, 0, -t2414 * t2692 + t2422 * t2696, -t2416 * t2692 + t2425 * t2696, -t2412 * t2692 + t2419 * t2696, -t2402 * t2692 + t2403 * t2696; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2667, t2668, 0, t2670 * t2696 + t2671 * t2692, 0, 0, 0, 0, 0, 0, t2595 * t2696 + t2625 * t2692, t2593 * t2696 + t2619 * t2692, t2591 * t2696 + t2606 * t2692, t2567 * t2696 + t2575 * t2692, 0, 0, 0, 0, 0, 0, t2535 * t2696 + t2552 * t2692, t2543 * t2696 + t2560 * t2692, t2521 * t2696 + t2536 * t2692, t2480 * t2696 + t2483 * t2692, 0, 0, 0, 0, 0, 0, t2487 * t2696 + t2501 * t2692, t2489 * t2696 + t2504 * t2692, t2485 * t2696 + t2498 * t2692, t2429 * t2696 + t2440 * t2692, 0, 0, 0, 0, 0, 0, t2444 * t2696 + t2454 * t2692, t2449 * t2696 + t2455 * t2692, t2431 * t2696 + t2445 * t2692, t2407 * t2696 + t2410 * t2692, 0, 0, 0, 0, 0, 0, t2414 * t2696 + t2422 * t2692, t2416 * t2696 + t2425 * t2692, t2412 * t2696 + t2419 * t2692, t2402 * t2696 + t2403 * t2692; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2594, t2592, t2590, t2566, 0, 0, 0, 0, 0, 0, t2534, t2542, t2520, t2479, 0, 0, 0, 0, 0, 0, t2486, t2488, t2484, t2428, 0, 0, 0, 0, 0, 0, t2443, t2448, t2430, t2406, 0, 0, 0, 0, 0, 0, t2413, t2415, t2411, t2401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2697, -qJDD(1), 0, t2671, 0, 0, 0, 0, 0, 0, t2625, t2619, t2606, t2575, 0, 0, 0, 0, 0, 0, t2552, t2560, t2536, t2483, 0, 0, 0, 0, 0, 0, t2501, t2504, t2498, t2440, 0, 0, 0, 0, 0, 0, t2454, t2455, t2445, t2410, 0, 0, 0, 0, 0, 0, t2422, t2425, t2419, t2403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2697, 0, t2670, 0, 0, 0, 0, 0, 0, t2595, t2593, t2591, t2567, 0, 0, 0, 0, 0, 0, t2535, t2543, t2521, t2480, 0, 0, 0, 0, 0, 0, t2487, t2489, t2485, t2429, 0, 0, 0, 0, 0, 0, t2444, t2449, t2431, t2407, 0, 0, 0, 0, 0, 0, t2414, t2416, t2412, t2402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2594, t2592, t2590, t2566, 0, 0, 0, 0, 0, 0, t2534, t2542, t2520, t2479, 0, 0, 0, 0, 0, 0, t2486, t2488, t2484, t2428, 0, 0, 0, 0, 0, 0, t2443, t2448, t2430, t2406, 0, 0, 0, 0, 0, 0, t2413, t2415, t2411, t2401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2661, t2658, t2635, t2615, 0, 0, 0, 0, 0, 0, t2578, t2588, t2565, t2515, 0, 0, 0, 0, 0, 0, t2525, t2533, t2523, t2461, 0, 0, 0, 0, 0, 0, t2478, t2482, t2463, t2421, 0, 0, 0, 0, 0, 0, t2435, t2439, t2433, t2405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2657, t2646, t2634, t2614, 0, 0, 0, 0, 0, 0, t2577, t2587, t2564, t2514, 0, 0, 0, 0, 0, 0, t2524, t2532, t2522, t2460, 0, 0, 0, 0, 0, 0, t2477, t2481, t2462, t2420, 0, 0, 0, 0, 0, 0, t2434, t2438, t2432, t2404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2636, t2633, t2662, t2637, 0, 0, 0, 0, 0, 0, t2602, t2604, t2607, t2598, 0, 0, 0, 0, 0, 0, t2553, t2555, t2548, t2472, 0, 0, 0, 0, 0, 0, t2492, t2502, t2470, t2423, 0, 0, 0, 0, 0, 0, t2450, t2452, t2446, t2408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2616, t2618, t2603, t2546, 0, 0, 0, 0, 0, 0, t2554, t2556, t2549, t2473, 0, 0, 0, 0, 0, 0, t2493, t2503, t2471, t2424, 0, 0, 0, 0, 0, 0, t2451, t2453, t2447, t2409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2617, t2629, t2605, t2545, 0, 0, 0, 0, 0, 0, -t2569, -t2571, -t2576, -t2529, 0, 0, 0, 0, 0, 0, -t2537, t2729, -t2547, -t2513, 0, 0, 0, 0, 0, 0, -t2496, -t2499, -t2475, -t2426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2602, t2604, t2607, t2598, 0, 0, 0, 0, 0, 0, t2553, t2555, t2548, t2472, 0, 0, 0, 0, 0, 0, t2492, t2502, t2470, t2423, 0, 0, 0, 0, 0, 0, t2450, t2452, t2446, t2408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2589, t2574, t2570, t2508, 0, 0, 0, 0, 0, 0, t2519, t2527, t2506, t2437, 0, 0, 0, 0, 0, 0, t2467, t2469, t2465, t2418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2573, t2596, t2572, t2507, 0, 0, 0, 0, 0, 0, t2518, t2526, t2505, t2436, 0, 0, 0, 0, 0, 0, t2466, t2468, t2464, t2417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2569, t2571, t2576, t2529, 0, 0, 0, 0, 0, 0, t2537, -t2729, t2547, t2513, 0, 0, 0, 0, 0, 0, t2496, t2499, t2475, t2426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2562, t2558, t2538, t2459, 0, 0, 0, 0, 0, 0, t2497, t2500, t2476, t2427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2557, t2568, t2540, t2458, 0, 0, 0, 0, 0, 0, -t2509, -t2511, -t2530, -t2456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2537, -t2729, t2547, t2513, 0, 0, 0, 0, 0, 0, t2496, t2499, t2475, t2426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2541, t2517, t2510, t2442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2516, t2544, t2512, t2441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2509, t2511, t2530, t2456;];
f_new_reg  = t1;
