% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPRR3_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR3_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR3_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPPRR3_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:58:38
% EndTime: 2019-03-09 08:58:44
% DurationCPUTime: 2.00s
% Computational Cost: add. (4631->255), mult. (13142->485), div. (0->0), fcn. (13599->12), ass. (0->148)
t121 = sin(pkin(6));
t115 = t121 ^ 2;
t127 = sin(qJ(2));
t169 = qJD(2) * t127;
t193 = t115 * t169;
t128 = cos(qJ(6));
t118 = t128 ^ 2;
t125 = sin(qJ(6));
t170 = t125 ^ 2 - t118;
t151 = t170 * qJD(6);
t119 = sin(pkin(12));
t122 = cos(pkin(12));
t126 = sin(qJ(5));
t190 = cos(qJ(5));
t103 = t190 * t119 + t126 * t122;
t166 = qJD(6) * t125;
t124 = cos(pkin(6));
t120 = sin(pkin(11));
t123 = cos(pkin(11));
t129 = cos(qJ(2));
t94 = (t120 * t129 + t123 * t127) * t121;
t141 = t119 * t94 - t122 * t124;
t81 = t119 * t124 + t122 * t94;
t51 = -t126 * t141 + t190 * t81;
t168 = qJD(2) * t129;
t155 = t121 * t168;
t156 = t121 * t169;
t90 = -t120 * t156 + t123 * t155;
t32 = t51 * qJD(5) + t103 * t90;
t50 = t126 * t81 + t190 * t141;
t136 = -t128 * t32 + t50 * t166;
t153 = qJD(5) * t190;
t167 = qJD(5) * t126;
t97 = t119 * t167 - t122 * t153;
t182 = t128 * t97;
t192 = -t103 * t136 - t50 * t182;
t189 = pkin(1) * t124;
t163 = t127 * t189;
t172 = t121 * t129;
t188 = pkin(8) + qJ(3);
t87 = t188 * t172 + t163;
t152 = t188 * t127;
t82 = (pkin(1) * t129 + pkin(2)) * t124 - t121 * t152;
t59 = t120 * t82 + t123 * t87;
t53 = qJ(4) * t124 + t59;
t160 = -pkin(2) * t129 - pkin(1);
t173 = t121 * t127;
t93 = t120 * t173 - t123 * t172;
t62 = t93 * pkin(3) - t94 * qJ(4) + t160 * t121;
t33 = -t119 * t53 + t122 * t62;
t26 = pkin(4) * t93 - pkin(9) * t81 + t33;
t34 = t119 * t62 + t122 * t53;
t30 = -t141 * pkin(9) + t34;
t138 = t126 * t26 + t190 * t30;
t176 = t90 * t122;
t108 = t168 * t189;
t75 = t108 + (-qJD(2) * t152 + qJD(3) * t129) * t121;
t76 = -qJD(2) * t87 - qJD(3) * t173;
t48 = t120 * t76 + t123 * t75;
t43 = qJD(4) * t124 + t48;
t107 = pkin(2) * t156;
t89 = qJD(2) * t94;
t46 = pkin(3) * t89 - qJ(4) * t90 - qJD(4) * t94 + t107;
t27 = -t119 * t43 + t122 * t46;
t18 = pkin(4) * t89 - pkin(9) * t176 + t27;
t177 = t90 * t119;
t28 = t119 * t46 + t122 * t43;
t21 = -pkin(9) * t177 + t28;
t6 = -t138 * qJD(5) - t126 * t21 + t190 * t18;
t98 = t103 * qJD(5);
t191 = 0.2e1 * t98;
t111 = pkin(2) * t120 + qJ(4);
t187 = pkin(9) + t111;
t159 = t190 * t122;
t134 = -t126 * t119 + t159;
t31 = -t50 * qJD(5) + t134 * t90;
t37 = t125 * t51 - t93 * t128;
t13 = -t37 * qJD(6) + t89 * t125 + t128 * t31;
t38 = t125 * t93 + t128 * t51;
t186 = -t13 * t134 + t38 * t98;
t174 = t103 * t128;
t185 = t134 * t182 + t98 * t174;
t184 = t103 * t97;
t183 = t125 * t97;
t181 = t13 * t125;
t180 = t13 * t128;
t100 = t187 * t122;
t99 = t187 * t119;
t71 = t190 * t100 - t126 * t99;
t61 = t103 * qJD(4) + t71 * qJD(5);
t179 = t61 * t125;
t178 = t61 * t128;
t175 = t103 * t125;
t171 = t119 ^ 2 + t122 ^ 2;
t165 = qJD(6) * t128;
t164 = -0.2e1 * pkin(5) * qJD(6);
t161 = t125 * t182;
t113 = -pkin(2) * t123 - pkin(3);
t158 = t115 * t168;
t157 = t103 * t166;
t154 = t125 * t165;
t47 = t120 * t75 - t123 * t76;
t58 = -t120 * t87 + t123 * t82;
t36 = pkin(4) * t177 + t47;
t150 = 0.2e1 * t171 * qJD(4);
t149 = pkin(5) * t98 + pkin(10) * t97;
t148 = pkin(5) * t97 - pkin(10) * t98;
t147 = pkin(5) * t103 - pkin(10) * t134;
t14 = qJD(6) * t38 + t125 * t31 - t89 * t128;
t146 = t134 * t14 - t98 * t37;
t145 = t103 * t89 - t93 * t97;
t144 = -t103 * t98 - t134 * t97;
t11 = pkin(10) * t93 + t138;
t54 = -t124 * pkin(3) - t58;
t39 = t141 * pkin(4) + t54;
t16 = t50 * pkin(5) - t51 * pkin(10) + t39;
t8 = t11 * t128 + t125 * t16;
t143 = -t27 * t119 + t28 * t122;
t142 = t125 * t38 + t128 * t37;
t104 = -pkin(4) * t122 + t113;
t64 = -pkin(5) * t134 - pkin(10) * t103 + t104;
t41 = t125 * t64 + t128 * t71;
t140 = -t126 * t30 + t190 * t26;
t137 = t125 * t32 + t50 * t165;
t68 = t125 * t98 - t134 * t165;
t135 = t103 * t165 - t183;
t67 = t157 + t182;
t5 = -t126 * t18 - t26 * t153 + t30 * t167 - t190 * t21;
t133 = -qJD(4) * t93 - t111 * t89 + t113 * t90;
t132 = -pkin(10) * t89 + t5;
t131 = pkin(5) * t32 - pkin(10) * t31 + t36;
t130 = -t137 * t103 + t50 * t183;
t101 = t103 ^ 2;
t96 = (-pkin(8) * t172 - t163) * qJD(2);
t95 = pkin(8) * t156 - t108;
t70 = t126 * t100 + t190 * t99;
t66 = -t128 * t98 - t134 * t166;
t60 = -qJD(4) * t159 + t99 * t153 + (qJD(4) * t119 + qJD(5) * t100) * t126;
t49 = t134 * t89 - t93 * t98;
t40 = -t125 * t71 + t128 * t64;
t23 = -t41 * qJD(6) + t125 * t60 + t128 * t149;
t22 = -t125 * t149 + t128 * t60 - t64 * t165 + t71 * t166;
t10 = -t93 * pkin(5) - t140;
t7 = -t11 * t125 + t128 * t16;
t4 = -t89 * pkin(5) - t6;
t2 = -t8 * qJD(6) + t125 * t132 + t128 * t131;
t1 = t11 * t166 - t125 * t131 + t128 * t132 - t16 * t165;
t3 = [0, 0, 0, 0.2e1 * t127 * t158, 0.2e1 * (-t127 ^ 2 + t129 ^ 2) * t115 * qJD(2), 0.2e1 * t124 * t155, -0.2e1 * t124 * t156, 0, -0.2e1 * pkin(1) * t193 + 0.2e1 * t124 * t96, -0.2e1 * pkin(1) * t158 + 0.2e1 * t95 * t124, 0.2e1 * t47 * t94 - 0.2e1 * t48 * t93 - 0.2e1 * t58 * t90 - 0.2e1 * t59 * t89, 0.2e1 * pkin(2) * t160 * t193 - 0.2e1 * t58 * t47 + 0.2e1 * t59 * t48, 0.2e1 * t47 * t141 + 0.2e1 * t54 * t177 + 0.2e1 * t27 * t93 + 0.2e1 * t33 * t89, 0.2e1 * t54 * t176 - 0.2e1 * t28 * t93 - 0.2e1 * t34 * t89 + 0.2e1 * t47 * t81, -0.2e1 * t28 * t141 - 0.2e1 * t27 * t81 + 0.2e1 * (-t119 * t34 - t122 * t33) * t90, 0.2e1 * t27 * t33 + 0.2e1 * t28 * t34 + 0.2e1 * t47 * t54, 0.2e1 * t51 * t31, -0.2e1 * t31 * t50 - 0.2e1 * t32 * t51, 0.2e1 * t31 * t93 + 0.2e1 * t51 * t89, -0.2e1 * t32 * t93 - 0.2e1 * t50 * t89, 0.2e1 * t93 * t89, 0.2e1 * t140 * t89 + 0.2e1 * t39 * t32 + 0.2e1 * t36 * t50 + 0.2e1 * t6 * t93, -0.2e1 * t138 * t89 + 0.2e1 * t39 * t31 + 0.2e1 * t36 * t51 + 0.2e1 * t5 * t93, 0.2e1 * t38 * t13, -0.2e1 * t13 * t37 - 0.2e1 * t14 * t38, 0.2e1 * t13 * t50 + 0.2e1 * t32 * t38, -0.2e1 * t14 * t50 - 0.2e1 * t32 * t37, 0.2e1 * t50 * t32, 0.2e1 * t10 * t14 + 0.2e1 * t2 * t50 + 0.2e1 * t32 * t7 + 0.2e1 * t37 * t4, 0.2e1 * t1 * t50 + 0.2e1 * t10 * t13 - 0.2e1 * t32 * t8 + 0.2e1 * t38 * t4; 0, 0, 0, 0, 0, t155, -t156, 0, t96, t95 (-t120 * t89 - t123 * t90) * pkin(2) (t120 * t48 - t123 * t47) * pkin(2), t133 * t119 - t47 * t122, t47 * t119 + t133 * t122 (t119 * t81 - t122 * t141) * qJD(4) + t143, t47 * t113 + t143 * t111 + (-t119 * t33 + t122 * t34) * qJD(4), t103 * t31 - t51 * t97, -t103 * t32 + t134 * t31 + t50 * t97 - t51 * t98, t145, t49, 0, t104 * t32 - t134 * t36 + t39 * t98 - t61 * t93 - t70 * t89, t103 * t36 + t104 * t31 - t39 * t97 + t60 * t93 - t71 * t89, -t38 * t182 + (-t38 * t166 + t180) * t103, t142 * t97 + (-t181 - t128 * t14 + (t125 * t37 - t128 * t38) * qJD(6)) * t103, t186 + t192, t130 + t146, -t134 * t32 + t50 * t98, t10 * t135 - t134 * t2 + t70 * t14 + t4 * t175 + t23 * t50 + t40 * t32 + t61 * t37 + t7 * t98, -t1 * t134 - t10 * t67 + t70 * t13 + t4 * t174 + t22 * t50 - t41 * t32 + t61 * t38 - t8 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, t111 * t150, -0.2e1 * t184, 0.2e1 * t144, 0, 0, 0, t104 * t191, -0.2e1 * t104 * t97, -0.2e1 * t101 * t154 - 0.2e1 * t118 * t184, 0.2e1 * t101 * t151 + 0.4e1 * t103 * t161, 0.2e1 * t134 * t157 + 0.2e1 * t185, 0.2e1 * t134 * t135 - 0.2e1 * t98 * t175, -t134 * t191, -0.2e1 * t70 * t183 - 0.2e1 * t23 * t134 + 0.2e1 * t40 * t98 + 0.2e1 * (t70 * t165 + t179) * t103, -0.2e1 * t70 * t182 - 0.2e1 * t22 * t134 - 0.2e1 * t41 * t98 + 0.2e1 * (-t70 * t166 + t178) * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, t122 * t89, -t89 * t119, -t171 * t90, t119 * t28 + t122 * t27, 0, 0, 0, 0, 0, t49, -t145, 0, 0, 0, 0, 0, t130 - t146, t186 - t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144 * t128 + t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t176, 0, t47, 0, 0, 0, 0, 0, t32, t31, 0, 0, 0, 0, 0, -t136, -t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t97, 0, 0, 0, 0, 0, -t66, -t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, -t32, t89, t6, t5, t38 * t165 + t181, -qJD(6) * t142 - t125 * t14 + t180, t137, -t136, 0, -pkin(5) * t14 - pkin(10) * t137 + t10 * t166 - t4 * t128, -pkin(5) * t13 + pkin(10) * t136 + t10 * t165 + t4 * t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, -t98, 0, -t61, t60, -t103 * t151 - t161, -0.4e1 * t103 * t154 + t170 * t97, t68, -t66, 0, -t178 + t148 * t125 + (t125 * t70 - t147 * t128) * qJD(6), t179 + t148 * t128 + (t125 * t147 + t128 * t70) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, t97, 0, 0, 0, 0, 0, t66, t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t154, -0.2e1 * t151, 0, 0, 0, t125 * t164, t128 * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, -t14, t32, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t135, t98, t23, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, -t166, 0, -pkin(10) * t165, pkin(10) * t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
