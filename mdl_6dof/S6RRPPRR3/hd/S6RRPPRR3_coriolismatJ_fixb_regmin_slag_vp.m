% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPPRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:58:42
% EndTime: 2019-03-09 08:59:23
% DurationCPUTime: 23.39s
% Computational Cost: add. (20493->765), mult. (53304->1052), div. (0->0), fcn. (62332->12), ass. (0->588)
t499 = cos(qJ(6));
t492 = sin(pkin(12));
t494 = sin(pkin(6));
t498 = sin(qJ(2));
t797 = cos(pkin(11));
t601 = t797 * t498;
t493 = sin(pkin(11));
t500 = cos(qJ(2));
t746 = t493 * t500;
t444 = (-t601 - t746) * t494;
t495 = cos(pkin(12));
t753 = t444 * t495;
t798 = cos(pkin(6));
t405 = -t492 * t798 + t753;
t754 = t444 * t492;
t406 = t495 * t798 + t754;
t497 = sin(qJ(5));
t814 = cos(qJ(5));
t849 = t497 * t405 + t814 * t406;
t855 = t499 * t849;
t285 = t855 / 0.2e1;
t857 = -t855 / 0.2e1 + t285;
t858 = qJD(6) * t857;
t496 = sin(qJ(6));
t856 = t496 * t849;
t616 = -t856 / 0.2e1;
t830 = -t849 / 0.2e1;
t744 = t494 * t500;
t745 = t494 * t498;
t442 = t493 * t745 - t744 * t797;
t695 = qJD(1) * t442;
t634 = t849 * t695;
t638 = t814 * t495;
t732 = t497 * t492;
t470 = -t638 + t732;
t691 = qJD(2) * t470;
t698 = qJD(1) * t849;
t854 = t691 - t698;
t639 = t814 * t492;
t731 = t497 * t495;
t467 = t639 / 0.2e1 + t731 / 0.2e1;
t473 = t639 + t731;
t822 = t473 / 0.2e1;
t236 = (t822 + t467) * t442;
t531 = t497 * t406;
t846 = t814 * t405;
t848 = -t846 + t531;
t636 = t848 * t695;
t853 = qJD(2) * t236 + t636;
t852 = qJD(5) * t849;
t829 = t848 / 0.2e1;
t739 = t496 * t848;
t221 = -t442 * t499 + t739;
t851 = t221 * t848;
t726 = t499 * t848;
t223 = t442 * t496 + t726;
t850 = t223 * t848;
t580 = t846 / 0.2e1 - t531 / 0.2e1;
t764 = t849 * t473;
t824 = t470 / 0.2e1;
t130 = t848 * t824 - t764 / 0.2e1;
t845 = t130 * qJD(5);
t332 = t470 * t442;
t724 = t499 * t332;
t752 = t444 * t496;
t842 = t724 / 0.2e1 - t752 / 0.2e1;
t690 = qJD(2) * t473;
t632 = t470 * t690;
t545 = qJD(1) * t130 + t632;
t697 = qJD(1) * t848;
t546 = qJD(2) * t130 - t697 * t849;
t532 = t406 * t495;
t844 = t532 / 0.2e1;
t488 = t494 ^ 2;
t843 = t488 * t498;
t365 = t496 * t470;
t357 = t365 * qJD(6);
t680 = qJD(5) * t499;
t462 = t473 * t680;
t840 = t462 - t357;
t468 = t470 ^ 2;
t469 = t473 ^ 2;
t839 = -t469 - t468;
t654 = t469 - t468;
t487 = t492 ^ 2;
t489 = t495 ^ 2;
t479 = t487 + t489;
t687 = qJD(2) * t499;
t629 = t496 * t687;
t591 = t473 * t629;
t490 = t496 ^ 2;
t491 = t499 ^ 2;
t482 = t491 - t490;
t599 = qJD(5) * t482;
t838 = 0.2e1 * t591 - t599;
t437 = t444 * t499;
t737 = t496 * t332;
t837 = t437 / 0.2e1 + t737 / 0.2e1;
t836 = t849 ^ 2;
t441 = t442 ^ 2;
t835 = t221 / 0.2e1;
t834 = -t223 / 0.2e1;
t833 = t223 / 0.2e1;
t274 = t437 + t737;
t832 = -t274 / 0.2e1;
t831 = t849 / 0.2e1;
t484 = pkin(2) * t493 + qJ(4);
t809 = pkin(9) + t484;
t464 = t809 * t495;
t603 = t809 * t492;
t353 = t464 * t814 - t497 * t603;
t828 = -t353 / 0.2e1;
t811 = t473 * pkin(5);
t812 = t470 * pkin(10);
t404 = t811 + t812;
t827 = t404 / 0.2e1;
t826 = -t442 / 0.2e1;
t825 = -t470 / 0.2e1;
t823 = -t473 / 0.2e1;
t486 = -pkin(2) * t797 - pkin(3);
t474 = -t495 * pkin(4) + t486;
t821 = t474 / 0.2e1;
t820 = -t491 / 0.2e1;
t819 = -t492 / 0.2e1;
t818 = -t495 / 0.2e1;
t817 = t496 / 0.2e1;
t816 = -t499 / 0.2e1;
t815 = t499 / 0.2e1;
t813 = t849 * pkin(10);
t810 = pkin(8) + qJ(3);
t642 = pkin(1) * t798;
t483 = t500 * t642;
t434 = -t745 * t810 + t483;
t411 = pkin(2) * t798 + t434;
t593 = t498 * t642;
t435 = t744 * t810 + t593;
t602 = t797 * t435;
t313 = t493 * t411 + t602;
t305 = qJ(4) * t798 + t313;
t643 = -pkin(2) * t500 - pkin(1);
t325 = t442 * pkin(3) + t444 * qJ(4) + t494 * t643;
t188 = t495 * t305 + t492 * t325;
t140 = pkin(9) * t406 + t188;
t187 = -t305 * t492 + t495 * t325;
t530 = pkin(4) * t442 + pkin(9) * t405 + t187;
t71 = t140 * t497 - t814 * t530;
t64 = -pkin(5) * t442 + t71;
t808 = -t64 + t71;
t807 = pkin(2) * qJD(2);
t806 = t496 * t71;
t418 = t493 * t435;
t330 = t434 * t797 - t418;
t653 = pkin(2) * t745;
t334 = -pkin(3) * t444 + qJ(4) * t442 + t653;
t199 = -t330 * t492 + t495 * t334;
t150 = pkin(9) * t442 * t495 - pkin(4) * t444 + t199;
t139 = t497 * t150;
t200 = t495 * t330 + t492 * t334;
t335 = t492 * t442;
t179 = pkin(9) * t335 + t200;
t174 = t814 * t179;
t715 = t174 + t139;
t83 = -pkin(10) * t444 + t715;
t805 = t496 * t83;
t804 = t499 * t71;
t803 = t499 * t83;
t312 = t411 * t797 - t418;
t306 = -pkin(3) * t798 - t312;
t224 = -pkin(4) * t406 + t306;
t584 = -pkin(5) * t849 - pkin(10) * t848;
t501 = t224 + t584;
t72 = t140 * t814 + t497 * t530;
t65 = t442 * pkin(10) + t72;
t25 = t496 * t65 - t499 * t501;
t170 = pkin(5) * t848 - t813;
t729 = t499 * t170;
t5 = t72 * t221 - t25 * t848 - (t496 * t808 + t729) * t849;
t802 = t5 * qJD(1);
t26 = t496 * t501 + t499 * t65;
t742 = t496 * t170;
t6 = t72 * t223 - t26 * t848 - (t499 * t808 - t742) * t849;
t801 = t6 * qJD(1);
t331 = t473 * t442;
t747 = t493 * t434;
t329 = t602 + t747;
t276 = -pkin(4) * t335 + t329;
t125 = -pkin(5) * t331 - pkin(10) * t332 + t276;
t730 = t499 * t125;
t35 = t730 - t805;
t641 = t814 * t150;
t735 = t497 * t179;
t548 = t641 - t735;
t82 = t444 * pkin(5) - t548;
t7 = t221 * t82 + t25 * t331 + t274 * t64 - t35 * t849;
t800 = t7 * qJD(1);
t275 = t724 - t752;
t743 = t496 * t125;
t36 = t743 + t803;
t8 = t223 * t82 + t26 * t331 + t275 * t64 + t36 * t849;
t799 = t8 * qJD(1);
t13 = -t221 * t64 - t25 * t849;
t796 = qJD(1) * t13;
t14 = t223 * t64 + t26 * t849;
t795 = qJD(1) * t14;
t513 = t224 * t822 + t353 * t826 + t821 * t848;
t539 = -t735 / 0.2e1 + t641 / 0.2e1;
t29 = -t513 + t539;
t794 = qJD(1) * t29;
t352 = t464 * t497 + t603 * t814;
t514 = t224 * t824 + t352 * t826 - t821 * t849;
t606 = -t139 / 0.2e1 - t174 / 0.2e1;
t30 = t514 + t606;
t793 = qJD(1) * t30;
t33 = t224 * t849 + t442 * t71;
t792 = qJD(1) * t33;
t34 = t224 * t848 - t442 * t72;
t791 = qJD(1) * t34;
t725 = t499 * t331;
t322 = -t725 / 0.2e1;
t246 = t470 * t616;
t613 = -t365 / 0.2e1;
t615 = -t739 / 0.2e1;
t506 = -t849 * t613 + (t615 + t835) * t473 + t246;
t45 = t322 + t506;
t790 = qJD(1) * t45;
t779 = t188 * t495;
t780 = t187 * t492;
t61 = -t306 * t444 + (-t779 + t780) * t442;
t789 = qJD(1) * t61;
t646 = t473 * t725;
t768 = t275 * t470;
t76 = t646 + t768;
t788 = qJD(1) * t76;
t86 = t187 * t405 + t188 * t406;
t787 = qJD(1) * t86;
t87 = -t496 * t836 + t851;
t786 = qJD(1) * t87;
t88 = -t849 * t856 - t851;
t785 = qJD(1) * t88;
t89 = -t499 * t836 + t850;
t784 = qJD(1) * t89;
t90 = t849 * t855 + t850;
t783 = qJD(1) * t90;
t770 = t274 * t849;
t776 = t221 * t331;
t96 = t770 - t776;
t782 = qJD(1) * t96;
t769 = t275 * t849;
t775 = t223 * t331;
t99 = t769 - t775;
t781 = qJD(1) * t99;
t19 = -t224 * t331 - t276 * t849 + t442 * t548 + t71 * t444;
t778 = t19 * qJD(1);
t20 = t224 * t332 + t276 * t848 - t442 * t715 + t72 * t444;
t777 = t20 * qJD(1);
t774 = t223 * t470;
t773 = t223 * t496;
t772 = t223 * t499;
t27 = t187 * t199 + t188 * t200 + t306 * t329;
t771 = t27 * qJD(1);
t767 = t275 * t496;
t28 = t200 * t406 + t199 * t405 + (t187 * t495 + t188 * t492) * t442;
t766 = t28 * qJD(1);
t765 = t849 * t444;
t763 = t848 * t444;
t762 = t331 * t442;
t761 = t332 * t442;
t760 = t352 * t496;
t759 = t352 * t499;
t758 = t353 * t496;
t366 = t496 * t473;
t728 = t499 * t221;
t547 = t728 / 0.2e1 + t773 / 0.2e1;
t516 = -t366 * t855 + t470 * t547;
t551 = t275 * t815 + t496 * t832;
t40 = t516 - t551;
t757 = t40 * qJD(1);
t41 = -t187 * t444 - t329 * t406 + (-t306 * t492 + t199) * t442;
t756 = t41 * qJD(1);
t42 = t188 * t444 - t329 * t405 + (-t306 * t495 - t200) * t442;
t755 = t42 * qJD(1);
t751 = t470 * t274;
t750 = t473 * t499;
t749 = t488 * t500;
t748 = t405 * t492;
t741 = t496 * t221;
t738 = t496 * t331;
t736 = t496 * t404;
t723 = t499 * t353;
t722 = t499 * t404;
t369 = t499 * t470;
t68 = -t221 * t275 - t223 * t274;
t721 = t68 * qJD(1);
t575 = t728 + t773;
t75 = t575 * t849;
t720 = t75 * qJD(1);
t515 = (-t489 / 0.2e1 - t487 / 0.2e1) * t484 * t442 - t444 * t486 / 0.2e1;
t552 = t199 * t818 + t200 * t819;
t85 = t515 + t552;
t719 = t85 * qJD(1);
t91 = -(-t313 + t329) * t444 + (t312 - t330) * t442;
t718 = t91 * qJD(1);
t97 = t770 + t776;
t717 = t97 * qJD(1);
t98 = -t769 - t775;
t716 = t98 * qJD(1);
t607 = -t369 / 0.2e1;
t529 = t223 * t607 - t764 * t820;
t102 = -t767 / 0.2e1 + t529;
t713 = qJD(1) * t102;
t612 = -t366 / 0.2e1;
t622 = t221 * t825;
t542 = -t612 * t849 + t622;
t104 = t542 - t842;
t712 = qJD(1) * t104;
t611 = t366 / 0.2e1;
t541 = -t611 * t849 + t622;
t105 = t541 + t842;
t711 = qJD(1) * t105;
t590 = t473 * t285;
t525 = t590 + t837;
t620 = t774 / 0.2e1;
t107 = t620 + t525;
t710 = qJD(1) * t107;
t621 = -t774 / 0.2e1;
t109 = t621 + t525;
t709 = qJD(1) * t109;
t135 = t762 + t765;
t708 = qJD(1) * t135;
t136 = t762 - t765;
t707 = qJD(1) * t136;
t137 = t761 - t763;
t706 = qJD(1) * t137;
t138 = -t761 - t763;
t705 = qJD(1) * t138;
t141 = t312 * t444 - t313 * t442;
t704 = qJD(1) * t141;
t703 = qJD(1) * t856;
t605 = 0.2e1 * t830;
t157 = t605 * t496;
t702 = qJD(1) * t157;
t163 = 0.2e1 * t285;
t701 = qJD(1) * t163;
t700 = qJD(1) * t223;
t277 = t405 * t444 + t441 * t495;
t699 = qJD(1) * t277;
t328 = t467 * t442;
t696 = qJD(1) * t328;
t694 = qJD(1) * t444;
t235 = (t822 - t467) * t442;
t693 = qJD(2) * t235;
t689 = qJD(2) * t474;
t688 = qJD(2) * t495;
t686 = qJD(4) * t442;
t685 = qJD(4) * t499;
t684 = qJD(5) * t369;
t683 = qJD(5) * t442;
t682 = qJD(5) * t473;
t681 = qJD(5) * t496;
t679 = qJD(6) * t849;
t678 = qJD(6) * t328;
t677 = qJD(6) * t496;
t676 = qJD(6) * t499;
t297 = t331 * t366;
t111 = t297 + t751;
t675 = t111 * qJD(1);
t114 = pkin(2) * t643 * t843 - t312 * t329 + t313 * t330;
t674 = t114 * qJD(1);
t115 = t331 * t848 + t332 * t849;
t673 = t115 * qJD(1);
t211 = (-t532 + t748) * t442;
t672 = t211 * qJD(1);
t229 = -t406 * t444 - t441 * t492;
t671 = t229 * qJD(1);
t440 = (t601 / 0.2e1 + t746 / 0.2e1) * t494;
t550 = t405 * t818 + t406 * t819;
t230 = t440 + t550;
t670 = t230 * qJD(1);
t669 = t235 * qJD(1);
t232 = t236 * qJD(1);
t538 = -t638 / 0.2e1 + t732 / 0.2e1;
t237 = (t824 + t538) * t442;
t668 = t237 * qJD(1);
t238 = (t825 + t538) * t442;
t667 = t238 * qJD(1);
t619 = t442 * t825;
t239 = t442 * t638 / 0.2e1 + t732 * t826 + t619;
t666 = t239 * qJD(1);
t294 = t444 * t470;
t665 = t294 * qJD(1);
t296 = t473 * t444;
t664 = t296 * qJD(1);
t537 = t493 * t826 + t797 * t444 / 0.2e1;
t315 = (-t745 / 0.2e1 + t537) * pkin(2);
t663 = t315 * qJD(1);
t662 = t754 * qJD(1);
t342 = t479 * t442;
t661 = t342 * qJD(1);
t351 = t444 ^ 2 + t441;
t660 = t351 * qJD(1);
t659 = t365 * qJD(2);
t533 = -pkin(8) * t744 - t593;
t416 = pkin(1) * t843 - t533 * t798;
t658 = t416 * qJD(1);
t466 = pkin(8) * t745 - t483;
t417 = pkin(1) * t749 - t466 * t798;
t657 = t417 * qJD(1);
t656 = t440 * qJD(1);
t465 = t470 * qJD(5);
t472 = (-t498 ^ 2 + t500 ^ 2) * t488;
t655 = t472 * qJD(1);
t652 = pkin(5) * t835;
t651 = pkin(5) * t834;
t650 = pkin(5) * t832;
t649 = -pkin(5) * t275 / 0.2e1;
t648 = t64 / 0.2e1 - t71 / 0.2e1;
t647 = t498 * t749;
t645 = -t805 / 0.2e1;
t644 = -t803 / 0.2e1;
t637 = t223 * t698;
t633 = t405 * t695;
t631 = t491 * t690;
t630 = t473 * t687;
t628 = t496 * t680;
t627 = t473 * t677;
t626 = t473 * t676;
t625 = t495 * t694;
t624 = t473 * t465;
t623 = t496 * t676;
t618 = t750 / 0.2e1;
t617 = t856 / 0.2e1;
t614 = t738 / 0.2e1;
t319 = -t738 / 0.2e1;
t609 = t726 / 0.2e1;
t608 = t725 / 0.2e1;
t604 = 0.2e1 * t829;
t600 = t798 * qJD(1);
t598 = -t659 - t677;
t597 = -qJD(5) - t695;
t596 = -qJD(6) + t698;
t595 = qJD(4) + t689;
t594 = -qJD(6) - t691;
t592 = qJD(1) * t647;
t588 = -t813 / 0.2e1 + t170 / 0.2e1;
t587 = t494 * t600;
t586 = qJD(2) * t494 * t798;
t585 = t125 / 0.2e1 + t64 * t823;
t583 = t470 * pkin(5) - t473 * pkin(10);
t582 = 0.2e1 * t496 * t462;
t579 = -t602 / 0.2e1 - t747 / 0.2e1;
t508 = pkin(10) * t331 / 0.2e1 + t72 * t823 + t648 * t470;
t507 = t474 + t583;
t242 = -t499 * t507 + t758;
t519 = t221 * t828 + t242 * t829 + t25 * t822;
t536 = t82 / 0.2e1 - t849 * t827 + t170 * t824;
t1 = t496 * t508 - t499 * t536 + t519 + t650;
t92 = t404 * t369 + (-t242 + t758) * t473;
t578 = -t1 * qJD(1) + t92 * qJD(2);
t243 = t496 * t507 + t723;
t152 = -t243 * t470 + t352 * t750;
t518 = t243 * t830 + t26 * t824 + t352 * t834;
t9 = t499 * t585 + t518 + t645;
t577 = qJD(1) * t9 - qJD(2) * t152;
t576 = -t199 * t492 + t200 * t495;
t574 = -t442 * t486 + t444 * t484;
t573 = t600 + qJD(2);
t520 = t242 * t831 + t25 * t825 + t352 * t835;
t10 = -t496 * t585 + t520 + t644;
t151 = t242 * t470 - t352 * t366;
t572 = -qJD(1) * t10 + qJD(2) * t151;
t553 = (-t726 / 0.2e1 + t833) * t473;
t52 = t614 + t553;
t571 = qJD(1) * t52;
t339 = t654 * t496;
t505 = 0.2e1 * t246 + (t615 - t221 / 0.2e1) * t473;
t44 = t608 + t505;
t570 = -qJD(1) * t44 + qJD(2) * t339;
t340 = t839 * t496;
t528 = t470 * t605 + t822 * t848;
t504 = t221 * t822 + t496 * t528;
t48 = t608 + t504;
t569 = qJD(1) * t48 - qJD(2) * t340;
t341 = t654 * t499;
t509 = (t609 + t833) * t473 + t849 * t369;
t50 = t614 + t509;
t568 = -qJD(1) * t50 - qJD(2) * t341;
t394 = t839 * t499;
t503 = t223 * t822 + t499 * t528;
t54 = t319 + t503;
t567 = qJD(1) * t54 - qJD(2) * t394;
t439 = t479 * t484;
t549 = t405 * t819 + t844;
t502 = t549 * t484 - t780 / 0.2e1 + t779 / 0.2e1;
t56 = t502 + t579;
t566 = qJD(1) * t56 + qJD(2) * t439;
t565 = t594 * t499;
t113 = -t470 * t849 - t473 * t848;
t119 = -t848 ^ 2 + t836;
t564 = qJD(1) * t119 + qJD(2) * t113;
t563 = qJD(1) * t113 - qJD(2) * t654;
t160 = t604 * t496;
t562 = -qJD(1) * t160 - qJD(2) * t366;
t561 = qJD(1) * t855 - qJD(2) * t369;
t173 = t844 - t748 / 0.2e1 + t549;
t189 = t405 ^ 2 + t406 ^ 2;
t560 = qJD(1) * t189 + qJD(2) * t173;
t559 = qJD(1) * t173 + qJD(2) * t479;
t175 = 0.2e1 * t580;
t558 = qJD(1) * t175 - t690;
t556 = -qJD(1) * t580 + qJD(2) * t467;
t555 = t812 / 0.2e1 + t811 / 0.2e1;
t554 = t590 - t837;
t165 = t604 * t499;
t544 = qJD(1) * t165 + t630;
t543 = -qJD(5) * t440 + t442 * t694;
t540 = t827 + t555;
t517 = t223 * t828 + t243 * t829 + t26 * t822;
t2 = t496 * t536 + t499 * t508 + t517 + t649;
t93 = -t404 * t365 + (-t243 + t723) * t473;
t535 = -t2 * qJD(1) + t93 * qJD(2);
t100 = t221 ^ 2 - t223 ^ 2;
t74 = (-t741 + t772) * t473;
t534 = qJD(1) * t100 - qJD(2) * t74 - qJD(5) * t575;
t142 = t540 * t496;
t15 = t496 * t588 + t499 * t648 + t652;
t527 = pkin(5) * t680 - qJD(1) * t15 - qJD(2) * t142;
t144 = t540 * t499;
t17 = t496 * t648 - t499 * t588 + t651;
t526 = pkin(5) * t681 - qJD(1) * t17 + qJD(2) * t144;
t118 = t547 * t473;
t121 = -t741 / 0.2e1 + t772 / 0.2e1;
t524 = qJD(2) * t118 - qJD(5) * t121 + t221 * t700;
t363 = (t490 / 0.2e1 + t820) * t473;
t523 = qJD(1) * t121 - qJD(2) * t363 + t628;
t522 = -qJD(6) * t580 + t546;
t521 = qJD(6) * t467 + t545;
t393 = t482 * t469;
t512 = qJD(1) * t74 + qJD(2) * t393 + t582;
t511 = qJD(1) * t575 + t838;
t510 = qJD(1) * t118 + qJD(5) * t363 + t469 * t629;
t463 = t467 * qJD(5);
t461 = t473 * t681;
t438 = -0.2e1 * t473 * t623;
t433 = t440 * qJD(2);
t362 = t369 * qJD(6);
t355 = t365 * qJD(5);
t354 = t363 * qJD(6);
t314 = t653 / 0.2e1 + t537 * pkin(2);
t240 = t442 * t538 + t619;
t234 = t235 * qJD(5);
t233 = t236 * qJD(5);
t231 = t440 - t550;
t212 = -t232 - t682;
t186 = -qJD(2) * t328 - qJD(5) * t580;
t169 = t173 * qJD(4);
t166 = t816 * t848 + t609;
t159 = t817 * t848 + t615;
t158 = t617 + t616;
t145 = t760 + t722 / 0.2e1 - t555 * t499;
t143 = t759 - t736 / 0.2e1 + t555 * t496;
t120 = t121 * qJD(6);
t117 = t118 * qJD(6);
t112 = t113 * qJD(5);
t110 = t621 + t554;
t108 = t620 + t554;
t106 = t541 - t842;
t103 = t542 + t842;
t101 = t767 / 0.2e1 + t529;
t94 = t575 * qJD(6);
t84 = t515 - t552;
t73 = t74 * qJD(6);
t55 = t502 - t579;
t53 = t614 + t503;
t51 = t319 + t553;
t49 = t319 + t509;
t47 = t322 + t504;
t46 = t608 + t506;
t43 = t322 + t505;
t39 = t516 + t551;
t32 = t513 + t539;
t31 = -t514 + t606;
t18 = pkin(10) * t285 + t651 + t64 * t817 + t806 / 0.2e1 + t729 / 0.2e1;
t16 = pkin(10) * t616 + t652 + t64 * t815 + t804 / 0.2e1 - t742 / 0.2e1;
t12 = t64 * t618 + t645 + t730 / 0.2e1 - t518;
t11 = t64 * t612 + t644 - t743 / 0.2e1 - t520;
t4 = (t736 - t759) * t831 + (t742 - t804) * t825 + t352 * t285 + t72 * t618 + t64 * t607 + pkin(10) * t608 + t649 + t82 * t817 - t517;
t3 = (t722 + t760) * t830 + (t729 + t806) * t824 + t352 * t617 + t72 * t611 + t64 * t613 + pkin(10) * t614 + t650 + t82 * t816 - t519;
t21 = [0, 0, 0, qJD(2) * t647, t472 * qJD(2), t500 * t586, -t498 * t586, 0, -t416 * qJD(2), -t417 * qJD(2), qJD(2) * t91 + qJD(3) * t351, qJD(2) * t114 + qJD(3) * t141, qJD(2) * t41 - qJD(3) * t229 + t405 * t686, qJD(2) * t42 + qJD(3) * t277 - t406 * t686, qJD(2) * t28 + qJD(3) * t211 + qJD(4) * t189, qJD(2) * t27 + qJD(3) * t61 + qJD(4) * t86 (qJD(2) * t332 + t852) * t848, qJD(2) * t115 + qJD(5) * t119, qJD(2) * t137 + t683 * t849, qJD(2) * t136 - t683 * t848, -t442 * t444 * qJD(2), qJD(2) * t19 + qJD(3) * t135 + qJD(5) * t34 - t686 * t848, qJD(2) * t20 + qJD(3) * t138 + qJD(5) * t33 - t686 * t849 (qJD(2) * t275 - qJD(6) * t221 + t680 * t849) * t223, qJD(2) * t68 - qJD(5) * t75 + qJD(6) * t100, qJD(2) * t98 + qJD(5) * t89 + t221 * t679, qJD(2) * t97 - qJD(5) * t87 + t223 * t679 -(-qJD(2) * t331 + qJD(5) * t848) * t849, qJD(2) * t7 + qJD(3) * t96 - qJD(4) * t88 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t8 + qJD(3) * t99 + qJD(4) * t90 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, t592, t655, t573 * t744, -t573 * t745, 0, qJD(2) * t533 - t658, qJD(2) * t466 - t657, t718 + (t442 * t797 + t444 * t493) * t807, t674 + (-t329 * t797 + t330 * t493) * t807 + t314 * qJD(3), t756 + (-t329 * t495 + t492 * t574) * qJD(2) - t335 * qJD(4), t329 * t492 * qJD(2) + t755 + (qJD(2) * t574 - t686) * t495, qJD(2) * t576 + t169 + t766, t771 + (t329 * t486 + t484 * t576) * qJD(2) + t84 * qJD(3) + t55 * qJD(4), -t845 + (t690 + t697) * t332, t673 + (t331 * t473 - t332 * t470) * qJD(2) + t112, qJD(5) * t240 - t444 * t690 + t706, t444 * t691 - t234 + t707, -t543, t778 + (t276 * t470 - t331 * t474 + t352 * t444) * qJD(2) - t236 * qJD(4) + t32 * qJD(5), t777 + (t276 * t473 + t332 * t474 + t353 * t444) * qJD(2) - t239 * qJD(4) + t31 * qJD(5), qJD(5) * t101 - t117 + (t630 + t700) * t275, t721 + t39 * qJD(5) - t73 + (-t274 * t499 - t767) * t690, t716 + (-t646 + t768) * qJD(2) + t49 * qJD(5) + t103 * qJD(6), t717 + (t297 - t751) * qJD(2) + t43 * qJD(5) + t110 * qJD(6), -t331 * t854 - t678 + t845, t800 + (t242 * t331 + t274 * t352 + t35 * t470 + t366 * t82) * qJD(2) + t47 * qJD(4) + t3 * qJD(5) + t12 * qJD(6), t799 + (t243 * t331 + t275 * t352 - t36 * t470 + t750 * t82) * qJD(2) + t53 * qJD(4) + t4 * qJD(5) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t660, qJD(2) * t314 + t704, -t671, t699, t672, qJD(2) * t84 + qJD(4) * t231 + t789, 0, 0, 0, 0, 0, -t234 + t708, -qJD(5) * t238 + t705, 0, 0, 0, 0, 0, qJD(5) * t46 + qJD(6) * t108 + t782, qJD(5) * t51 + qJD(6) * t106 + t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t335 + t633 (-qJD(1) * t406 - t688) * t442, t560, qJD(2) * t55 + qJD(3) * t231 + t787, 0, 0, 0, 0, 0, -t853, -qJD(2) * t239 - t634, 0, 0, 0, 0, 0, qJD(2) * t47 + qJD(5) * t166 + qJD(6) * t158 - t785, qJD(2) * t53 + qJD(5) * t159 + t783 + t858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t546, t564, qJD(2) * t240 - t597 * t849, t597 * t848 - t693, t433, qJD(2) * t32 - qJD(3) * t235 - qJD(5) * t72 + t791, qJD(2) * t31 - qJD(3) * t238 + qJD(5) * t71 + t792, qJD(2) * t101 + t120 - (-t681 - t700) * t855, t39 * qJD(2) + t599 * t849 - t720 - t94, qJD(2) * t49 + t681 * t848 + t784 + t858, qJD(2) * t43 + t680 * t848 - t786, t522, t802 + t3 * qJD(2) + t46 * qJD(3) + t166 * qJD(4) + (t496 * t584 - t72 * t499) * qJD(5) + t18 * qJD(6), t801 + t4 * qJD(2) + t51 * qJD(3) + t159 * qJD(4) + (t72 * t496 + t499 * t584) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, t534, qJD(2) * t103 + qJD(5) * t857 + t221 * t596, qJD(2) * t110 + t223 * t596, t186, qJD(2) * t12 + qJD(3) * t108 + qJD(4) * t158 + qJD(5) * t18 - qJD(6) * t26 + t795, qJD(2) * t11 + qJD(3) * t106 + qJD(4) * t857 + qJD(5) * t16 + qJD(6) * t25 + t796; 0, 0, 0, -t592, -t655, -t500 * t587, t498 * t587, 0, t658, t657, -t718, qJD(3) * t315 - t674, qJD(3) * t753 - t756, -qJD(3) * t754 - t755, -qJD(3) * t342 + t169 - t766, qJD(3) * t85 + qJD(4) * t56 - t771, -t332 * t697 - t845, t112 - t673, -qJD(5) * t237 - t706, -t233 - t707, t543, -qJD(3) * t294 - qJD(4) * t235 - qJD(5) * t29 - t778, -qJD(3) * t296 - qJD(4) * t238 - qJD(5) * t30 - t777, qJD(5) * t102 - t275 * t700 - t117, qJD(5) * t40 - t721 - t73, qJD(5) * t50 + qJD(6) * t104 - t716, qJD(5) * t44 + qJD(6) * t109 - t717, -t331 * t698 + t678 + t845, -qJD(3) * t111 + qJD(4) * t48 - qJD(5) * t1 - qJD(6) * t9 - t800, -qJD(3) * t76 + qJD(4) * t54 - qJD(5) * t2 - qJD(6) * t10 - t799; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479 * qJD(4), t439 * qJD(4), -t624, -t654 * qJD(5), 0, 0, 0, t474 * t682, -t474 * t465, -t469 * t623 - t491 * t624, -qJD(6) * t393 + t470 * t582, qJD(5) * t341 - t470 * t627, -qJD(5) * t339 - t470 * t626, t624, -qJD(4) * t340 + qJD(5) * t92 + qJD(6) * t152, -qJD(4) * t394 + qJD(5) * t93 + qJD(6) * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t663, t625, -t662, -t661, t719, 0, 0, 0, 0, 0, -t665, -t664, 0, 0, 0, 0, 0, -t675, -t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, t566, 0, 0, 0, 0, 0, -t669, -t667, 0, 0, 0, 0, 0, t569, t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t545, t563, -t465 - t668, t212, -t656, -qJD(5) * t353 + t473 * t689 - t794, qJD(5) * t352 - t470 * t689 - t793, t713 - t354 + (-t628 - t631) * t470, t470 * t838 + t438 + t757, t461 - t568, t462 - t570, t521 (t496 * t583 - t723) * qJD(5) + t145 * qJD(6) + t578 (t499 * t583 + t758) * qJD(5) + t143 * qJD(6) + t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510, -t512, t366 * t594 + t712, t473 * t565 + t709, t463 + t696, qJD(5) * t145 - qJD(6) * t243 - t577, qJD(5) * t143 + qJD(6) * t242 + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t660, -qJD(2) * t315 - t704, -t444 * t688 + t671, qJD(2) * t754 - t699, qJD(2) * t342 - t672, -qJD(2) * t85 - qJD(4) * t230 - t789, 0, 0, 0, 0, 0, qJD(2) * t294 - t233 - t708, qJD(2) * t296 - qJD(5) * t239 - t705, 0, 0, 0, 0, 0, qJD(2) * t111 + qJD(5) * t45 + qJD(6) * t107 - t782, qJD(2) * t76 + qJD(5) * t52 + qJD(6) * t105 - t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t663, -t625, t662, t661, -t719, 0, 0, 0, 0, 0, t665, t664, 0, 0, 0, 0, 0, t675, t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t670, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, t465 - t666, 0, 0, 0, 0, 0, t790 - t840, t362 + t461 + t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355 - t626 + t710, t627 + t684 + t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t633, t406 * t695, -t560, -qJD(2) * t56 + qJD(3) * t230 - t787, 0, 0, 0, 0, 0, -qJD(5) * t175 + t636 + t693, qJD(2) * t238 + t634 + t852, 0, 0, 0, 0, 0, -qJD(2) * t48 + qJD(5) * t165 - qJD(6) * t157 + t785, -qJD(2) * t54 - qJD(5) * t160 + qJD(6) * t163 - t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, -t566, 0, 0, 0, 0, 0, t669 + t682, -t465 + t667, 0, 0, 0, 0, 0, -t569 + t840, -qJD(5) * t366 - t470 * t676 - t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t670, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t558, -t854, 0, 0, 0, 0, 0, t544, t562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t598 - t702, t565 + t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t546, -t564, qJD(2) * t237 - t634, t853, t433, qJD(2) * t29 + qJD(3) * t236 + qJD(4) * t175 - t791, qJD(2) * t30 + qJD(3) * t239 - qJD(4) * t849 - t792, -qJD(2) * t102 - t499 * t637 + t120, -qJD(2) * t40 + t720 - t94, -qJD(2) * t50 - qJD(6) * t855 - t784, -qJD(2) * t44 + qJD(6) * t856 + t786, -t522, qJD(2) * t1 - qJD(3) * t45 - qJD(4) * t165 + qJD(6) * t17 - t802, qJD(2) * t2 - qJD(3) * t52 + qJD(4) * t160 + qJD(6) * t15 - t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, -t563, t668, t232, t656, -t473 * t595 + t794, t470 * t595 + t793, t470 * t631 - t354 - t713, -0.2e1 * t470 * t591 + t438 - t757, t362 + t568, -t357 + t570, -t521, -qJD(6) * t144 - t473 * t685 - t578, qJD(4) * t366 + qJD(6) * t142 - t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, t666, 0, 0, 0, 0, 0, -t790, -t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t558, t854, 0, 0, 0, 0, 0, -t544, -t562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t623, t482 * qJD(6), 0, 0, 0, -pkin(5) * t677, -pkin(5) * t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t523, -t511, -t561 + t676, t598 + t703, -t556, -pkin(10) * t676 - t526, pkin(10) * t677 - t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, -t534, -qJD(2) * t104 + qJD(5) * t855 - t221 * t698, -qJD(2) * t109 - qJD(5) * t856 - t637, t186, qJD(2) * t9 - qJD(3) * t107 + qJD(4) * t157 - qJD(5) * t17 - t795, qJD(2) * t10 - qJD(3) * t105 - qJD(4) * t163 - qJD(5) * t15 - t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, t512, t496 * t632 - t684 - t712, t470 * t630 + t355 - t709, t463 - t696, qJD(4) * t365 + qJD(5) * t144 + t577, -qJD(5) * t142 + t470 * t685 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t710, -t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t659 + t702, t470 * t687 - t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t523, t511, t561, t659 - t703, t556, t526, t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
