% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2,theta3]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 15:22
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPPRRR2_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR2_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR2_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRR2_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRR2_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPPRRR2_invdynB_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 15:21:45
% EndTime: 2019-05-05 15:22:14
% DurationCPUTime: 28.43s
% Computational Cost: add. (178738->838), mult. (403576->1295), div. (0->0), fcn. (297955->12), ass. (0->565)
t889 = cos(qJ(1));
t885 = sin(qJ(1));
t854 = g(1) * t889 + t885 * g(2);
t959 = qJD(1) ^ 2;
t843 = -pkin(1) * t959 - t854;
t878 = sin(pkin(10));
t880 = cos(pkin(10));
t853 = g(1) * t885 - t889 * g(2);
t897 = qJDD(1) * pkin(1) + t853;
t789 = t878 * t843 - t880 * t897;
t929 = t880 * t843;
t790 = t878 * t897 + t929;
t905 = t789 * t878 + t880 * t790;
t728 = t789 * t880 - t790 * t878;
t928 = t885 * t728;
t661 = t889 * t905 + t928;
t943 = t728 * t889;
t982 = -t885 * t905 + t943;
t918 = qJDD(1) * t878;
t846 = t880 * t959 + t918;
t916 = qJDD(1) * t880;
t921 = t878 * t959;
t847 = t916 - t921;
t795 = -t885 * t846 + t889 * t847;
t874 = g(3) - qJDD(2);
t819 = qJ(2) * t846 - t874 * t880;
t901 = -qJ(2) * t847 - t874 * t878;
t981 = -pkin(6) * t795 + t885 * t819 + t889 * t901;
t882 = sin(qJ(6));
t877 = sin(pkin(11));
t879 = cos(pkin(11));
t884 = sin(qJ(4));
t888 = cos(qJ(4));
t898 = t877 * t888 + t879 * t884;
t836 = t898 * qJD(1);
t883 = sin(qJ(5));
t887 = cos(qJ(5));
t811 = -t887 * qJD(4) + t836 * t883;
t813 = qJD(4) * t883 + t836 * t887;
t886 = cos(qJ(6));
t757 = t886 * t811 + t813 * t882;
t759 = -t811 * t882 + t813 * t886;
t695 = t759 * t757;
t917 = qJDD(1) * t879;
t931 = t877 * t884;
t832 = qJDD(1) * t931 - t888 * t917;
t922 = t836 * qJD(4);
t784 = -t832 - t922;
t776 = qJDD(5) - t784;
t894 = qJDD(6) + t776;
t968 = -t695 + t894;
t980 = t882 * t968;
t765 = t813 * t811;
t966 = -t765 + t776;
t979 = t883 * t966;
t925 = qJD(1) * t879;
t834 = qJD(1) * t931 - t888 * t925;
t788 = t836 * t834;
t963 = qJDD(4) - t788;
t978 = t884 * t963;
t977 = t886 * t968;
t976 = t887 * t966;
t975 = t888 * t963;
t872 = t879 ^ 2;
t865 = t872 * t959;
t871 = t877 ^ 2;
t924 = t959 * t871;
t849 = t865 + t924;
t965 = t889 * t846 + t885 * t847;
t973 = pkin(6) * t965 + t819 * t889 - t885 * t901;
t962 = t959 * (t871 + t872);
t841 = t879 * t962;
t803 = -t841 * t878 + t879 * t916;
t805 = t841 * t880 + t878 * t917;
t746 = t803 * t889 - t885 * t805;
t972 = t885 * t803 + t805 * t889;
t828 = qJD(5) + t834;
t824 = qJD(6) + t828;
t721 = t824 * t757;
t923 = t834 * qJD(4);
t964 = t898 * qJDD(1);
t786 = t964 - t923;
t904 = -t887 * qJDD(4) + t883 * t786;
t732 = -qJD(5) * t813 - t904;
t733 = -t811 * qJD(5) + t883 * qJDD(4) + t887 * t786;
t895 = qJD(6) * t757 - t732 * t882 - t733 * t886;
t967 = -t721 - t895;
t769 = t828 * t811;
t700 = -t769 - t733;
t699 = -t769 + t733;
t906 = -t886 * t732 + t882 * t733;
t589 = (qJD(6) - t824) * t759 + t906;
t696 = (qJD(5) - t828) * t813 + t904;
t755 = t757 ^ 2;
t756 = t759 ^ 2;
t960 = t811 ^ 2;
t810 = t813 ^ 2;
t823 = t824 ^ 2;
t827 = t828 ^ 2;
t830 = t834 ^ 2;
t831 = t836 ^ 2;
t958 = qJD(4) ^ 2;
t957 = 2 * qJD(3);
t956 = pkin(4) * t884;
t876 = qJDD(1) * pkin(2);
t893 = qJDD(1) * qJ(3) + t790;
t761 = t879 * (-pkin(2) * t959 + t893) - t877 * t874 + t925 * t957;
t735 = -pkin(3) * t865 + pkin(7) * t917 + t761;
t930 = t879 * t874;
t892 = -t930 + (-t929 - t878 * t853 + (-pkin(1) * t878 - pkin(7) - qJ(3)) * qJDD(1) + (-(2 * qJD(3)) + (pkin(3) * t879 + pkin(2)) * qJD(1)) * qJD(1)) * t877;
t667 = t888 * t735 + t884 * t892;
t777 = pkin(4) * t834 - pkin(8) * t836;
t622 = -pkin(4) * t958 + qJDD(4) * pkin(8) - t777 * t834 + t667;
t773 = -t959 * qJ(3) + qJDD(3) + t789 - t876;
t754 = -pkin(3) * t917 - pkin(7) * t849 + t773;
t637 = (-t786 + t923) * pkin(8) + (-t784 + t922) * pkin(4) + t754;
t556 = t883 * t622 - t887 * t637;
t521 = pkin(5) * t966 + pkin(9) * t700 - t556;
t557 = t887 * t622 + t883 * t637;
t766 = pkin(5) * t828 - pkin(9) * t813;
t533 = -pkin(5) * t960 + pkin(9) * t732 - t766 * t828 + t557;
t463 = -t886 * t521 + t533 * t882;
t464 = t882 * t521 + t886 * t533;
t406 = -t463 * t886 + t464 * t882;
t955 = t406 * t883;
t954 = t406 * t887;
t666 = t735 * t884 - t888 * t892;
t621 = -qJDD(4) * pkin(4) - t958 * pkin(8) + t777 * t836 + t666;
t561 = -t732 * pkin(5) - pkin(9) * t960 + t766 * t813 + t621;
t953 = t561 * t882;
t952 = t561 * t886;
t578 = -t666 * t888 + t667 * t884;
t951 = t578 * t877;
t950 = t578 * t879;
t949 = t621 * t883;
t948 = t621 * t887;
t663 = t695 + t894;
t947 = t663 * t882;
t946 = t663 * t886;
t709 = t765 + t776;
t945 = t709 * t883;
t944 = t709 * t887;
t942 = t754 * t884;
t941 = t754 * t888;
t940 = t773 * t878;
t939 = t773 * t880;
t781 = qJDD(4) + t788;
t938 = t781 * t884;
t937 = t781 * t888;
t936 = t824 * t882;
t935 = t824 * t886;
t934 = t828 * t883;
t933 = t828 * t887;
t932 = t877 * t879;
t915 = t884 * t695;
t914 = t888 * t695;
t913 = t884 * t765;
t912 = t888 * t765;
t911 = t878 * t788;
t910 = t880 * t788;
t909 = -pkin(4) * t888 - pkin(3);
t908 = t877 * t917;
t907 = -t773 + t876;
t407 = t463 * t882 + t886 * t464;
t579 = t666 * t884 + t888 * t667;
t760 = t930 + ((-pkin(2) * qJD(1) + t957) * qJD(1) + t893) * t877;
t689 = t760 * t877 + t879 * t761;
t809 = -t853 * t885 - t889 * t854;
t852 = qJDD(1) * t889 - t885 * t959;
t902 = -pkin(6) * t852 - g(3) * t885;
t489 = -t556 * t887 + t557 * t883;
t490 = t556 * t883 + t557 * t887;
t688 = t760 * t879 - t761 * t877;
t814 = t846 * t932;
t815 = t880 * t908 - t921 * t932;
t900 = t814 * t889 + t885 * t815;
t899 = t885 * t814 - t815 * t889;
t808 = t853 * t889 - t885 * t854;
t863 = t872 * qJDD(1);
t862 = t871 * qJDD(1);
t851 = t885 * qJDD(1) + t889 * t959;
t850 = t865 - t924;
t845 = t863 - t862;
t844 = t863 + t862;
t840 = t877 * t962;
t829 = -pkin(6) * t851 + g(3) * t889;
t822 = -t831 - t958;
t821 = -t831 + t958;
t820 = t830 - t958;
t804 = t840 * t880 + t877 * t918;
t801 = t840 * t878 - t877 * t916;
t794 = t845 * t880 - t850 * t878;
t793 = t844 * t880 - t849 * t878;
t792 = t845 * t878 + t850 * t880;
t791 = t844 * t878 + t849 * t880;
t787 = -t831 + t830;
t785 = t964 - 0.2e1 * t923;
t783 = t832 + 0.2e1 * t922;
t779 = -t958 - t830;
t772 = (-t834 * t888 + t836 * t884) * qJD(4);
t771 = (-t834 * t884 - t836 * t888) * qJD(4);
t768 = -t810 + t827;
t767 = -t827 + t960;
t764 = -t830 - t831;
t763 = -t810 + t960;
t753 = t786 * t888 - t884 * t922;
t752 = t786 * t884 + t888 * t922;
t751 = -t784 * t884 + t888 * t923;
t750 = t784 * t888 + t884 * t923;
t747 = -t885 * t801 + t804 * t889;
t745 = t801 * t889 + t885 * t804;
t744 = -t810 - t827;
t743 = -t822 * t884 - t937;
t742 = -t821 * t884 + t975;
t741 = t820 * t888 - t938;
t740 = t822 * t888 - t938;
t739 = t821 * t888 + t978;
t738 = t820 * t884 + t937;
t737 = -t885 * t791 + t793 * t889;
t736 = t791 * t889 + t885 * t793;
t734 = -t827 - t960;
t720 = t810 + t960;
t719 = -t783 * t888 - t785 * t884;
t718 = -t832 * t888 + t884 * t964;
t717 = -t783 * t884 + t785 * t888;
t716 = -t832 * t884 - t888 * t964;
t715 = -t756 + t823;
t714 = t755 - t823;
t713 = t779 * t888 - t978;
t712 = t779 * t884 + t975;
t711 = pkin(1) * t874 + qJ(2) * t905;
t707 = (-t811 * t887 + t813 * t883) * t828;
t706 = (t811 * t883 + t813 * t887) * t828;
t705 = -t771 * t877 + t772 * t879;
t704 = -t756 - t823;
t703 = qJDD(4) * t878 + t705 * t880;
t702 = -qJDD(4) * t880 + t705 * t878;
t697 = (-qJD(5) - t828) * t813 - t904;
t694 = -t756 + t755;
t693 = t733 * t887 - t813 * t934;
t692 = -t733 * t883 - t813 * t933;
t691 = -t732 * t883 + t811 * t933;
t690 = -t732 * t887 - t811 * t934;
t686 = -pkin(7) * t740 + t941;
t685 = -t752 * t877 + t753 * t879;
t684 = -t750 * t877 + t751 * t879;
t683 = -t740 * t877 + t743 * t879;
t682 = -t739 * t877 + t742 * t879;
t681 = -t738 * t877 + t741 * t879;
t680 = t740 * t879 + t743 * t877;
t679 = -t823 - t755;
t678 = t707 * t888 + t776 * t884;
t677 = t707 * t884 - t776 * t888;
t676 = -qJ(2) * t801 - t761 * t878 + t879 * t939;
t675 = -qJ(2) * t803 - t760 * t878 + t877 * t939;
t674 = qJ(2) * t804 + t761 * t880 + t879 * t940;
t673 = -qJ(2) * t805 + t760 * t880 + t877 * t940;
t672 = t767 * t887 - t945;
t671 = -t768 * t883 + t976;
t670 = -t767 * t883 - t944;
t669 = -t768 * t887 - t979;
t668 = -pkin(7) * t712 + t942;
t659 = -t744 * t883 - t944;
t658 = t744 * t887 - t945;
t657 = t682 * t880 + t878 * t964;
t656 = t681 * t880 - t832 * t878;
t655 = t682 * t878 - t880 * t964;
t654 = t681 * t878 + t832 * t880;
t653 = -qJ(2) * t791 + t688 * t880;
t652 = qJ(2) * t793 + t688 * t878;
t651 = (-t757 * t886 + t759 * t882) * t824;
t650 = (-t757 * t882 - t759 * t886) * t824;
t649 = -t717 * t877 + t719 * t879;
t648 = -t716 * t877 + t718 * t879;
t647 = t716 * t879 + t718 * t877;
t646 = -pkin(3) * t785 + pkin(7) * t743 + t942;
t645 = t734 * t887 - t979;
t644 = t734 * t883 + t976;
t643 = -t712 * t877 + t713 * t879;
t642 = t712 * t879 + t713 * t877;
t641 = t685 * t880 + t911;
t640 = t684 * t880 - t911;
t639 = t685 * t878 - t910;
t638 = t684 * t878 + t910;
t636 = t689 * t880 + t940;
t635 = t689 * t878 - t939;
t632 = -t755 - t756;
t631 = t683 * t880 + t785 * t878;
t630 = t683 * t878 - t785 * t880;
t629 = t693 * t888 + t913;
t628 = t691 * t888 - t913;
t627 = t693 * t884 - t912;
t626 = t691 * t884 + t912;
t625 = -pkin(3) * t783 + pkin(7) * t713 - t941;
t624 = t649 * t880 - t787 * t878;
t623 = t649 * t878 + t787 * t880;
t620 = t643 * t880 + t783 * t878;
t619 = t643 * t878 - t783 * t880;
t617 = -qJD(6) * t759 - t906;
t615 = t648 * t880 + t764 * t878;
t614 = t648 * t878 - t764 * t880;
t613 = -t696 * t887 - t700 * t883;
t612 = t697 * t887 - t699 * t883;
t611 = -t696 * t883 + t700 * t887;
t610 = -t697 * t883 - t699 * t887;
t609 = t714 * t886 - t947;
t608 = -t715 * t882 + t977;
t607 = t714 * t882 + t946;
t606 = t715 * t886 + t980;
t605 = -pkin(2) * t647 - pkin(3) * t716;
t604 = -t704 * t882 - t946;
t603 = t704 * t886 - t947;
t602 = t672 * t888 - t696 * t884;
t601 = t671 * t888 - t700 * t884;
t600 = t672 * t884 + t696 * t888;
t599 = t671 * t884 + t700 * t888;
t598 = t659 * t888 + t699 * t884;
t597 = t659 * t884 - t699 * t888;
t596 = -t677 * t877 + t678 * t879;
t595 = t645 * t888 - t697 * t884;
t594 = t645 * t884 + t697 * t888;
t593 = -t721 + t895;
t588 = (qJD(6) + t824) * t759 + t906;
t587 = -t759 * t936 - t886 * t895;
t586 = t759 * t935 - t882 * t895;
t585 = -t617 * t882 + t757 * t935;
t584 = t617 * t886 + t757 * t936;
t583 = t612 * t888 - t763 * t884;
t582 = t612 * t884 + t763 * t888;
t581 = t679 * t886 - t980;
t580 = t679 * t882 + t977;
t577 = t613 * t888 - t720 * t884;
t576 = t613 * t884 + t720 * t888;
t575 = -t650 * t883 + t651 * t887;
t574 = -t650 * t887 - t651 * t883;
t573 = -pkin(2) * t680 - pkin(3) * t740 + t667;
t572 = -t885 * t635 + t636 * t889;
t571 = t635 * t889 + t885 * t636;
t570 = -t885 * t630 + t631 * t889;
t569 = t630 * t889 + t885 * t631;
t568 = -t627 * t877 + t629 * t879;
t567 = -t626 * t877 + t628 * t879;
t566 = -pkin(3) * t754 + pkin(7) * t579;
t565 = -pkin(8) * t658 + t948;
t564 = t575 * t888 + t884 * t894;
t563 = t575 * t884 - t888 * t894;
t562 = -pkin(8) * t644 + t949;
t560 = t596 * t880 - t706 * t878;
t559 = t596 * t878 + t706 * t880;
t558 = -pkin(7) * t716 - t578;
t555 = -pkin(2) * t642 - pkin(3) * t712 + t666;
t554 = -t885 * t619 + t620 * t889;
t553 = t619 * t889 + t885 * t620;
t552 = -qJ(2) * t635 - (pkin(2) * t878 - qJ(3) * t880) * t688;
t551 = -qJ(3) * t680 - t646 * t877 + t686 * t879;
t550 = -pkin(3) * t764 + pkin(7) * t718 + t579;
t549 = -t885 * t614 + t615 * t889;
t548 = t614 * t889 + t885 * t615;
t547 = -t607 * t883 + t609 * t887;
t546 = -t606 * t883 + t608 * t887;
t545 = -t607 * t887 - t609 * t883;
t544 = -t606 * t887 - t608 * t883;
t543 = t568 * t880 - t692 * t878;
t542 = t567 * t880 - t690 * t878;
t541 = t568 * t878 + t692 * t880;
t540 = t567 * t878 + t690 * t880;
t539 = -qJ(3) * t642 - t625 * t877 + t668 * t879;
t538 = -t603 * t883 + t604 * t887;
t537 = t603 * t887 + t604 * t883;
t536 = -t600 * t877 + t602 * t879;
t535 = -t599 * t877 + t601 * t879;
t534 = -pkin(4) * t658 + t557;
t532 = qJ(2) * t636 - (-pkin(2) * t880 - qJ(3) * t878 - pkin(1)) * t688;
t531 = -pkin(4) * t644 + t556;
t529 = -t597 * t877 + t598 * t879;
t528 = t597 * t879 + t598 * t877;
t527 = -t589 * t886 - t593 * t882;
t526 = -t588 * t886 - t882 * t967;
t525 = -t589 * t882 + t593 * t886;
t524 = -t588 * t882 + t886 * t967;
t523 = -t594 * t877 + t595 * t879;
t522 = t594 * t879 + t595 * t877;
t520 = -t586 * t883 + t587 * t887;
t519 = -t584 * t883 + t585 * t887;
t518 = -t586 * t887 - t587 * t883;
t517 = -t584 * t887 - t585 * t883;
t514 = -t582 * t877 + t583 * t879;
t513 = -t580 * t883 + t581 * t887;
t512 = t580 * t887 + t581 * t883;
t511 = t579 * t879 - t951;
t510 = t579 * t877 + t950;
t509 = -pkin(9) * t603 + t952;
t508 = -t576 * t877 + t577 * t879;
t507 = t576 * t879 + t577 * t877;
t506 = t536 * t880 - t670 * t878;
t505 = t535 * t880 - t669 * t878;
t504 = t536 * t878 + t670 * t880;
t503 = t535 * t878 + t669 * t880;
t502 = -pkin(9) * t580 + t953;
t501 = t511 * t880 + t754 * t878;
t500 = t511 * t878 - t754 * t880;
t499 = t520 * t888 + t915;
t498 = t519 * t888 - t915;
t497 = t520 * t884 - t914;
t496 = t519 * t884 + t914;
t495 = t529 * t880 + t658 * t878;
t494 = t529 * t878 - t658 * t880;
t493 = t523 * t880 + t644 * t878;
t492 = t523 * t878 - t644 * t880;
t491 = -t563 * t877 + t564 * t879;
t488 = t547 * t888 - t589 * t884;
t487 = t546 * t888 - t593 * t884;
t486 = t547 * t884 + t589 * t888;
t485 = t546 * t884 + t593 * t888;
t484 = t538 * t888 + t884 * t967;
t483 = t538 * t884 - t888 * t967;
t482 = t514 * t880 - t610 * t878;
t481 = t514 * t878 + t610 * t880;
t480 = t508 * t880 + t611 * t878;
t479 = t508 * t878 - t611 * t880;
t478 = t513 * t888 + t588 * t884;
t477 = t513 * t884 - t588 * t888;
t476 = -pkin(2) * t510 - pkin(3) * t578;
t475 = -pkin(5) * t967 + pkin(9) * t604 + t953;
t474 = -qJ(2) * t630 + t551 * t880 - t573 * t878;
t473 = -pkin(5) * t588 + pkin(9) * t581 - t952;
t472 = -qJ(3) * t647 - t550 * t877 + t558 * t879;
t471 = t490 * t888 + t621 * t884;
t470 = t490 * t884 - t621 * t888;
t469 = -pkin(8) * t611 - t489;
t468 = t491 * t880 - t574 * t878;
t467 = t491 * t878 + t574 * t880;
t466 = -pkin(1) * t680 + qJ(2) * t631 + t551 * t878 + t573 * t880;
t465 = -qJ(2) * t619 + t539 * t880 - t555 * t878;
t461 = -t525 * t883 + t527 * t887;
t460 = -t524 * t883 + t526 * t887;
t459 = t525 * t887 + t527 * t883;
t458 = -t524 * t887 - t526 * t883;
t457 = -pkin(7) * t597 - t534 * t884 + t565 * t888;
t456 = -pkin(7) * t594 - t531 * t884 + t562 * t888;
t455 = -pkin(1) * t642 + qJ(2) * t620 + t539 * t878 + t555 * t880;
t454 = t460 * t888 - t694 * t884;
t453 = t460 * t884 + t694 * t888;
t452 = -pkin(7) * t950 - qJ(3) * t510 - t566 * t877;
t451 = -pkin(2) * t528 - pkin(3) * t597 + pkin(4) * t699 - pkin(8) * t659 - t949;
t450 = t461 * t888 + t632 * t884;
t449 = t461 * t884 - t632 * t888;
t448 = -pkin(3) * t658 + pkin(7) * t598 + t534 * t888 + t565 * t884;
t447 = -pkin(2) * t522 - pkin(3) * t594 - pkin(4) * t697 - pkin(8) * t645 + t948;
t446 = -t885 * t500 + t501 * t889;
t445 = t500 * t889 + t885 * t501;
t444 = -pkin(3) * t644 + pkin(7) * t595 + t531 * t888 + t562 * t884;
t443 = -t497 * t877 + t499 * t879;
t442 = -t496 * t877 + t498 * t879;
t441 = -qJ(2) * t614 + t472 * t880 - t605 * t878;
t440 = -t885 * t494 + t495 * t889;
t439 = t494 * t889 + t885 * t495;
t438 = -t885 * t492 + t493 * t889;
t437 = t492 * t889 + t885 * t493;
t436 = -t486 * t877 + t488 * t879;
t435 = -t485 * t877 + t487 * t879;
t434 = -pkin(7) * t576 + t469 * t888 + t611 * t956;
t433 = -pkin(1) * t647 + qJ(2) * t615 + t472 * t878 + t605 * t880;
t432 = -t483 * t877 + t484 * t879;
t431 = t483 * t879 + t484 * t877;
t430 = -pkin(4) * t459 - pkin(5) * t525;
t429 = -t885 * t479 + t480 * t889;
t428 = t479 * t889 + t885 * t480;
t427 = -t477 * t877 + t478 * t879;
t426 = t477 * t879 + t478 * t877;
t425 = pkin(7) * t577 + t884 * t469 + t611 * t909;
t424 = -pkin(4) * t537 - pkin(5) * t603 + t464;
t423 = -t470 * t877 + t471 * t879;
t422 = t470 * t879 + t471 * t877;
t421 = t443 * t880 - t518 * t878;
t420 = t442 * t880 - t517 * t878;
t419 = t443 * t878 + t518 * t880;
t418 = t442 * t878 + t517 * t880;
t417 = -pkin(4) * t512 - pkin(5) * t580 + t463;
t416 = t436 * t880 - t545 * t878;
t415 = t435 * t880 - t544 * t878;
t414 = t436 * t878 + t545 * t880;
t413 = t435 * t878 + t544 * t880;
t412 = -pkin(2) * t507 - pkin(3) * t576 - pkin(4) * t720 - pkin(8) * t613 - t490;
t411 = -pkin(8) * t537 - t475 * t883 + t509 * t887;
t410 = t432 * t880 + t537 * t878;
t409 = t432 * t878 - t537 * t880;
t408 = -pkin(8) * t512 - t473 * t883 + t502 * t887;
t405 = t427 * t880 + t512 * t878;
t404 = t427 * t878 - t512 * t880;
t403 = -pkin(7) * t470 + (-pkin(8) * t888 + t956) * t489;
t402 = -t453 * t877 + t454 * t879;
t401 = -pkin(5) * t561 + pkin(9) * t407;
t400 = -t449 * t877 + t450 * t879;
t399 = t449 * t879 + t450 * t877;
t398 = t423 * t880 + t489 * t878;
t397 = t423 * t878 - t489 * t880;
t396 = -pkin(9) * t525 - t406;
t395 = -qJ(2) * t500 + t452 * t880 - t476 * t878;
t394 = -pkin(5) * t632 + pkin(9) * t527 + t407;
t393 = -qJ(3) * t528 - t448 * t877 + t457 * t879;
t392 = -qJ(3) * t522 - t444 * t877 + t456 * t879;
t391 = pkin(7) * t471 + (-pkin(8) * t884 + t909) * t489;
t390 = -pkin(1) * t510 + qJ(2) * t501 + t452 * t878 + t476 * t880;
t389 = t402 * t880 - t458 * t878;
t388 = t402 * t878 + t458 * t880;
t387 = t400 * t880 + t459 * t878;
t386 = t400 * t878 - t459 * t880;
t385 = -pkin(2) * t422 - pkin(3) * t470 + pkin(4) * t621 - pkin(8) * t490;
t384 = -qJ(3) * t507 - t425 * t877 + t434 * t879;
t383 = -t885 * t409 + t410 * t889;
t382 = t409 * t889 + t885 * t410;
t381 = t407 * t887 - t955;
t380 = t407 * t883 + t954;
t379 = -t885 * t404 + t405 * t889;
t378 = t404 * t889 + t885 * t405;
t377 = -pkin(2) * t431 - pkin(3) * t483 + pkin(4) * t967 - pkin(8) * t538 - t475 * t887 - t509 * t883;
t376 = -pkin(7) * t483 + t411 * t888 - t424 * t884;
t375 = t381 * t888 + t561 * t884;
t374 = t381 * t884 - t561 * t888;
t373 = -qJ(2) * t494 + t393 * t880 - t451 * t878;
t372 = -pkin(7) * t477 + t408 * t888 - t417 * t884;
t371 = -pkin(2) * t426 - pkin(3) * t477 + pkin(4) * t588 - pkin(8) * t513 - t473 * t887 - t502 * t883;
t370 = -qJ(2) * t492 + t392 * t880 - t447 * t878;
t369 = -pkin(3) * t537 + pkin(7) * t484 + t411 * t884 + t424 * t888;
t368 = -t885 * t397 + t398 * t889;
t367 = t397 * t889 + t885 * t398;
t366 = -pkin(1) * t528 + qJ(2) * t495 + t393 * t878 + t451 * t880;
t365 = -pkin(3) * t512 + pkin(7) * t478 + t408 * t884 + t417 * t888;
t364 = -pkin(1) * t522 + qJ(2) * t493 + t392 * t878 + t447 * t880;
t363 = -pkin(4) * t380 - pkin(5) * t406;
t362 = -qJ(2) * t479 + t384 * t880 - t412 * t878;
t361 = -pkin(8) * t459 - t394 * t883 + t396 * t887;
t360 = -pkin(1) * t507 + qJ(2) * t480 + t384 * t878 + t412 * t880;
t359 = -t885 * t386 + t387 * t889;
t358 = t386 * t889 + t885 * t387;
t357 = -qJ(3) * t422 - t391 * t877 + t403 * t879;
t356 = -pkin(8) * t380 - pkin(9) * t954 - t401 * t883;
t355 = -t374 * t877 + t375 * t879;
t354 = t374 * t879 + t375 * t877;
t353 = -pkin(7) * t449 + t361 * t888 - t430 * t884;
t352 = -pkin(2) * t399 - pkin(3) * t449 + pkin(4) * t632 - pkin(8) * t461 - t394 * t887 - t396 * t883;
t351 = -pkin(3) * t459 + pkin(7) * t450 + t361 * t884 + t430 * t888;
t350 = -qJ(3) * t431 - t369 * t877 + t376 * t879;
t349 = -qJ(3) * t426 - t365 * t877 + t372 * t879;
t348 = t355 * t880 + t380 * t878;
t347 = t355 * t878 - t380 * t880;
t346 = -qJ(2) * t397 + t357 * t880 - t385 * t878;
t345 = -pkin(1) * t422 + qJ(2) * t398 + t357 * t878 + t385 * t880;
t344 = -qJ(2) * t409 + t350 * t880 - t377 * t878;
t343 = -qJ(2) * t404 + t349 * t880 - t371 * t878;
t342 = -pkin(1) * t431 + qJ(2) * t410 + t350 * t878 + t377 * t880;
t341 = -pkin(7) * t374 + t356 * t888 - t363 * t884;
t340 = -pkin(1) * t426 + qJ(2) * t405 + t349 * t878 + t371 * t880;
t339 = -qJ(3) * t399 - t351 * t877 + t353 * t879;
t338 = -pkin(2) * t354 - pkin(3) * t374 + pkin(4) * t561 - pkin(8) * t381 + pkin(9) * t955 - t401 * t887;
t337 = -pkin(3) * t380 + pkin(7) * t375 + t356 * t884 + t363 * t888;
t336 = -t885 * t347 + t348 * t889;
t335 = t347 * t889 + t885 * t348;
t334 = -qJ(2) * t386 + t339 * t880 - t352 * t878;
t333 = -pkin(1) * t399 + qJ(2) * t387 + t339 * t878 + t352 * t880;
t332 = -qJ(3) * t354 - t337 * t877 + t341 * t879;
t331 = -qJ(2) * t347 + t332 * t880 - t338 * t878;
t330 = -pkin(1) * t354 + qJ(2) * t348 + t332 * t878 + t338 * t880;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t851, -t852, 0, t809, 0, 0, 0, 0, 0, 0, -t965, -t795, 0, t661, 0, 0, 0, 0, 0, 0, -t972, t747, t737, t572, 0, 0, 0, 0, 0, 0, t554, t570, t549, t446, 0, 0, 0, 0, 0, 0, t438, t440, t429, t368, 0, 0, 0, 0, 0, 0, t379, t383, t359, t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t852, -t851, 0, t808, 0, 0, 0, 0, 0, 0, t795, -t965, 0, -t982, 0, 0, 0, 0, 0, 0, t746, t745, t736, t571, 0, 0, 0, 0, 0, 0, t553, t569, t548, t445, 0, 0, 0, 0, 0, 0, t437, t439, t428, t367, 0, 0, 0, 0, 0, 0, t378, t382, t358, t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t874, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688, 0, 0, 0, 0, 0, 0, t642, t680, t647, t510, 0, 0, 0, 0, 0, 0, t522, t528, t507, t422, 0, 0, 0, 0, 0, 0, t426, t431, t399, t354; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t852, 0, -t851, 0, t902, -t829, -t808, -pkin(6) * t808, 0, 0, t795, 0, -t965, 0, t981, t973, t982, pkin(6) * t982 + qJ(2) * t943 - t885 * t711, -t899, -t885 * t792 + t794 * t889, t747, t899, t972, 0, -pkin(6) * t746 - t885 * t673 + t675 * t889, -pkin(6) * t745 - t885 * t674 + t676 * t889, -pkin(6) * t736 - t885 * t652 + t653 * t889, -pkin(6) * t571 - t885 * t532 + t552 * t889, -t885 * t639 + t641 * t889, -t885 * t623 + t624 * t889, -t885 * t655 + t657 * t889, -t885 * t638 + t640 * t889, -t885 * t654 + t656 * t889, -t885 * t702 + t703 * t889, -pkin(6) * t553 - t885 * t455 + t465 * t889, -pkin(6) * t569 - t885 * t466 + t474 * t889, -pkin(6) * t548 - t885 * t433 + t441 * t889, -pkin(6) * t445 - t885 * t390 + t395 * t889, -t885 * t541 + t543 * t889, -t885 * t481 + t482 * t889, -t885 * t503 + t505 * t889, -t885 * t540 + t542 * t889, -t885 * t504 + t506 * t889, -t885 * t559 + t560 * t889, -pkin(6) * t437 - t885 * t364 + t370 * t889, -pkin(6) * t439 - t885 * t366 + t373 * t889, -pkin(6) * t428 - t885 * t360 + t362 * t889, -pkin(6) * t367 - t885 * t345 + t346 * t889, -t885 * t419 + t421 * t889, -t885 * t388 + t389 * t889, -t885 * t413 + t415 * t889, -t885 * t418 + t420 * t889, -t885 * t414 + t416 * t889, -t885 * t467 + t468 * t889, -pkin(6) * t378 - t885 * t340 + t343 * t889, -pkin(6) * t382 - t885 * t342 + t344 * t889, -pkin(6) * t358 - t885 * t333 + t334 * t889, -pkin(6) * t335 - t885 * t330 + t331 * t889; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t851, 0, t852, 0, t829, t902, t809, pkin(6) * t809, 0, 0, t965, 0, t795, 0, -t973, t981, t661, pkin(6) * t661 + qJ(2) * t928 + t711 * t889, t900, t792 * t889 + t885 * t794, t745, -t900, -t746, 0, -pkin(6) * t972 + t673 * t889 + t885 * t675, pkin(6) * t747 + t674 * t889 + t885 * t676, pkin(6) * t737 + t652 * t889 + t885 * t653, pkin(6) * t572 + t532 * t889 + t885 * t552, t639 * t889 + t885 * t641, t623 * t889 + t885 * t624, t655 * t889 + t885 * t657, t638 * t889 + t885 * t640, t654 * t889 + t885 * t656, t702 * t889 + t885 * t703, pkin(6) * t554 + t455 * t889 + t885 * t465, pkin(6) * t570 + t466 * t889 + t885 * t474, pkin(6) * t549 + t433 * t889 + t885 * t441, pkin(6) * t446 + t390 * t889 + t885 * t395, t541 * t889 + t885 * t543, t481 * t889 + t885 * t482, t503 * t889 + t885 * t505, t540 * t889 + t885 * t542, t504 * t889 + t885 * t506, t559 * t889 + t885 * t560, pkin(6) * t438 + t364 * t889 + t885 * t370, pkin(6) * t440 + t366 * t889 + t885 * t373, pkin(6) * t429 + t360 * t889 + t885 * t362, pkin(6) * t368 + t345 * t889 + t885 * t346, t419 * t889 + t885 * t421, t388 * t889 + t885 * t389, t413 * t889 + t885 * t415, t418 * t889 + t885 * t420, t414 * t889 + t885 * t416, t467 * t889 + t885 * t468, pkin(6) * t379 + t340 * t889 + t885 * t343, pkin(6) * t383 + t342 * t889 + t885 * t344, pkin(6) * t359 + t333 * t889 + t885 * t334, pkin(6) * t336 + t330 * t889 + t885 * t331; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t853, t854, 0, 0, 0, 0, 0, 0, 0, qJDD(1), pkin(1) * t847 - t789, -pkin(1) * t846 - t790, 0, -pkin(1) * t728, t862, 0.2e1 * t908, 0, t863, 0, 0, pkin(1) * t803 - qJ(3) * t841 + t879 * t907, pkin(1) * t801 + qJ(3) * t840 - t877 * t907, pkin(1) * t791 + pkin(2) * t849 + qJ(3) * t844 + t689, pkin(1) * t635 - pkin(2) * t773 + qJ(3) * t689, t752 * t879 + t753 * t877, t717 * t879 + t719 * t877, t739 * t879 + t742 * t877, t750 * t879 + t751 * t877, t738 * t879 + t741 * t877, t771 * t879 + t772 * t877, pkin(1) * t619 - pkin(2) * t783 + qJ(3) * t643 + t625 * t879 + t668 * t877, pkin(1) * t630 - pkin(2) * t785 + qJ(3) * t683 + t646 * t879 + t686 * t877, pkin(1) * t614 - pkin(2) * t764 + qJ(3) * t648 + t550 * t879 + t558 * t877, pkin(1) * t500 - pkin(2) * t754 - pkin(7) * t951 + qJ(3) * t511 + t566 * t879, t627 * t879 + t629 * t877, t582 * t879 + t583 * t877, t599 * t879 + t601 * t877, t626 * t879 + t628 * t877, t600 * t879 + t602 * t877, t677 * t879 + t678 * t877, pkin(1) * t492 - pkin(2) * t644 + qJ(3) * t523 + t444 * t879 + t456 * t877, pkin(1) * t494 - pkin(2) * t658 + qJ(3) * t529 + t448 * t879 + t457 * t877, pkin(1) * t479 - pkin(2) * t611 + qJ(3) * t508 + t425 * t879 + t434 * t877, pkin(1) * t397 - pkin(2) * t489 + qJ(3) * t423 + t391 * t879 + t403 * t877, t497 * t879 + t499 * t877, t453 * t879 + t454 * t877, t485 * t879 + t487 * t877, t496 * t879 + t498 * t877, t486 * t879 + t488 * t877, t563 * t879 + t564 * t877, pkin(1) * t404 - pkin(2) * t512 + qJ(3) * t427 + t365 * t879 + t372 * t877, pkin(1) * t409 - pkin(2) * t537 + qJ(3) * t432 + t369 * t879 + t376 * t877, pkin(1) * t386 - pkin(2) * t459 + qJ(3) * t400 + t351 * t879 + t353 * t877, pkin(1) * t347 - pkin(2) * t380 + qJ(3) * t355 + t337 * t879 + t341 * t877;];
tauB_reg  = t1;
