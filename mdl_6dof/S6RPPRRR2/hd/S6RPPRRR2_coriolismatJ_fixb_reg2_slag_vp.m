% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPPRRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:21:29
% EndTime: 2019-03-09 02:21:48
% DurationCPUTime: 14.19s
% Computational Cost: add. (23406->541), mult. (44670->724), div. (0->0), fcn. (50982->10), ass. (0->422)
t567 = cos(qJ(5));
t845 = -pkin(9) - pkin(8);
t550 = t845 * t567;
t564 = sin(qJ(6));
t565 = sin(qJ(5));
t749 = t564 * t565;
t830 = cos(qJ(6));
t481 = -t550 * t830 + t749 * t845;
t844 = -t481 / 0.2e1;
t655 = t830 * t565;
t633 = -t564 * t550 - t845 * t655;
t843 = t633 / 0.2e1;
t669 = qJD(5) + qJD(6);
t563 = cos(pkin(11));
t619 = sin(pkin(10)) * pkin(1) + qJ(3);
t604 = pkin(7) + t619;
t527 = t604 * t563;
t566 = sin(qJ(4));
t562 = sin(pkin(11));
t593 = t562 * t604;
t831 = cos(qJ(4));
t414 = t527 * t566 + t831 * t593;
t660 = t831 * t562;
t744 = t566 * t563;
t543 = t660 + t744;
t434 = t565 * t543;
t323 = pkin(5) * t434 + t414;
t654 = t830 * t567;
t413 = -t434 * t564 + t543 * t654;
t541 = t562 * t566 - t563 * t831;
t748 = t564 * t567;
t547 = t655 + t748;
t838 = -t547 / 0.2e1;
t557 = -pkin(5) * t567 - pkin(4);
t867 = -t557 / 0.2e1;
t873 = -t323 * t838 - t413 * t867 + t541 * t844;
t329 = t543 * t547;
t545 = -t654 + t749;
t840 = -t545 / 0.2e1;
t868 = t323 * t840 + t329 * t867 + t541 * t843;
t639 = -t633 / 0.2e1 + t843;
t872 = t639 * t413;
t837 = t547 / 0.2e1;
t220 = -t329 * t837 + t413 * t840;
t871 = t669 * t220;
t549 = -cos(pkin(10)) * pkin(1) - pkin(2) - t563 * pkin(3);
t828 = t541 * pkin(4);
t579 = t549 + t828;
t415 = t527 * t831 - t566 * t593;
t746 = t565 * t415;
t227 = -t746 + (t543 * t845 + t579) * t567;
t827 = t541 * pkin(5);
t569 = t227 + t827;
t191 = t830 * t569;
t823 = t543 * pkin(8);
t574 = t579 - t823;
t743 = t567 * t415;
t253 = t565 * t574 + t743;
t228 = -pkin(9) * t434 + t253;
t751 = t564 * t228;
t102 = -t191 + t751;
t658 = t830 * t227;
t129 = t658 - t751;
t870 = t102 + t129;
t568 = t564 * t569;
t657 = t830 * t228;
t103 = t657 + t568;
t752 = t564 * t227;
t128 = -t657 - t752;
t869 = t103 + t128;
t391 = t414 * t567;
t825 = t543 * pkin(4);
t826 = t541 * pkin(8);
t456 = t825 + t826;
t443 = t565 * t456;
t270 = -t391 + t443;
t433 = t565 * t541;
t237 = pkin(9) * t433 + t270;
t656 = t830 * t237;
t623 = -t656 / 0.2e1;
t444 = t567 * t456;
t771 = t414 * t565;
t269 = t444 + t771;
t437 = t567 * t541;
t824 = t543 * pkin(5);
t207 = pkin(9) * t437 + t269 + t824;
t753 = t564 * t207;
t589 = -t753 / 0.2e1 + t623;
t52 = t589 - t868;
t659 = t830 * t207;
t750 = t564 * t237;
t588 = -t750 / 0.2e1 + t659 / 0.2e1;
t54 = t588 + t873;
t51 = t588 - t873;
t866 = t413 * t669;
t671 = t543 * qJD(1);
t464 = t541 * t671;
t532 = t660 / 0.2e1 + t744 / 0.2e1;
t853 = t532 * qJD(5) + t464;
t489 = t564 * t433;
t412 = -t541 * t654 + t489;
t367 = t412 * t545;
t756 = t547 * t541;
t757 = t547 * t756;
t132 = -t367 - t757;
t863 = qJD(4) * t132;
t862 = t329 * qJD(1);
t700 = qJD(4) * t547;
t861 = -qJD(1) * t220 + t545 * t700;
t704 = qJD(1) * t413;
t860 = qJD(4) * t220 - t329 * t704;
t622 = t654 / 0.2e1;
t839 = t545 / 0.2e1;
t841 = -t489 / 0.2e1;
t297 = t841 + (t622 + t839) * t541;
t686 = t297 * qJD(2);
t859 = t633 * t669 - t686;
t858 = t669 * t481;
t745 = t565 * t567;
t634 = 0.2e1 * t543 * t745;
t857 = t103 / 0.2e1;
t856 = t413 / 0.2e1;
t855 = t329 * t669;
t628 = t669 * t545;
t422 = t433 * qJD(5);
t531 = t543 * qJD(4);
t517 = t567 * t531;
t852 = -t517 + t422;
t535 = t541 ^ 2;
t536 = t543 ^ 2;
t851 = -t536 - t535;
t668 = t536 - t535;
t551 = t562 ^ 2 + t563 ^ 2;
t850 = qJD(6) * t532 + t853;
t587 = t748 / 0.2e1 + t655 / 0.2e1;
t294 = (t838 + t587) * t541;
t688 = t294 * qJD(2);
t699 = qJD(4) * t557;
t849 = qJD(1) * t51 - t547 * t699 + t688;
t665 = t830 / 0.2e1;
t747 = t565 * t329;
t832 = -t567 / 0.2e1;
t38 = (-t747 / 0.2e1 + (t545 * t832 + t665) * t543) * pkin(5) + t51;
t829 = pkin(5) * t565;
t427 = t545 * t829 + t547 * t557;
t848 = qJD(1) * t38 - qJD(4) * t427 + t688;
t561 = t567 ^ 2;
t836 = -t561 / 0.2e1;
t835 = -t564 / 0.2e1;
t834 = t564 / 0.2e1;
t833 = -t565 / 0.2e1;
t822 = t564 * pkin(5);
t820 = pkin(5) * qJD(5);
t758 = t543 * t567;
t644 = t758 / 0.2e1;
t627 = pkin(5) * t644;
t641 = t129 / 0.2e1 + t102 / 0.2e1;
t642 = t857 + t128 / 0.2e1;
t9 = -t329 * t642 + t413 * t641 + t541 * t627;
t817 = t9 * qJD(1);
t667 = pkin(5) * t758;
t789 = t323 * t413;
t47 = t128 * t541 + t329 * t667 + t789;
t813 = qJD(1) * t47;
t790 = t323 * t329;
t48 = -t129 * t541 + t413 * t667 - t790;
t812 = qJD(1) * t48;
t56 = t102 * t541 - t790;
t811 = qJD(1) * t56;
t57 = -t103 * t541 + t789;
t810 = qJD(1) * t57;
t806 = t102 * t756;
t803 = t103 * t412;
t12 = -t329 * t870 - t413 * t869;
t800 = t12 * qJD(1);
t139 = t659 - t750;
t140 = t656 + t753;
t13 = t102 * t412 + t103 * t756 - t139 * t413 - t140 * t329;
t799 = t13 * qJD(1);
t324 = -pkin(5) * t433 + t415;
t25 = -t102 * t543 + t139 * t541 - t323 * t756 + t324 * t329;
t798 = t25 * qJD(1);
t572 = t567 * t574;
t252 = -t572 + t746;
t797 = t252 * t565;
t796 = t253 * t567;
t26 = -t103 * t543 - t140 * t541 + t323 * t412 + t324 * t413;
t795 = t26 * qJD(1);
t794 = t269 * t565;
t793 = t269 * t567;
t792 = t270 * t565;
t791 = t270 * t567;
t788 = t323 * t543;
t33 = (-t827 + t746 / 0.2e1 - t572 / 0.2e1 + pkin(9) * t644 + t227 / 0.2e1) * t564;
t785 = t33 * qJD(1);
t663 = -t827 / 0.2e1;
t595 = -t191 / 0.2e1 + t830 * t663;
t35 = t658 / 0.2e1 + t595;
t784 = t35 * qJD(1);
t783 = t756 * t633;
t782 = t756 * t545;
t781 = t329 * t756;
t780 = t412 * t329;
t779 = t412 * t481;
t778 = t412 * t541;
t777 = t412 * t547;
t776 = t413 * t756;
t775 = t413 * t412;
t773 = t413 * t543;
t772 = t414 * t543;
t46 = (t792 + t793) * t543 + (t252 * t567 - t253 * t565) * t541;
t770 = t46 * qJD(1);
t762 = t541 * t756;
t761 = t541 * t543;
t760 = t543 * t329;
t759 = t543 * t557;
t61 = (-t252 + t746) * t543 + (t269 - t771) * t541;
t742 = t61 * qJD(1);
t168 = t329 * t545 - t547 * t413;
t733 = t669 * t168;
t638 = t481 / 0.2e1 + t844;
t170 = -t545 * t638 + t547 * t639;
t732 = t170 * qJD(5);
t594 = t541 * t622 + t841;
t643 = t541 * t839;
t299 = t643 + t594;
t731 = t299 * qJD(3);
t298 = t841 + (t622 + t840) * t541;
t730 = t298 * qJD(3);
t580 = t587 * t541;
t301 = -t756 / 0.2e1 + t580;
t729 = t301 * qJD(3);
t295 = (t837 + t587) * t541;
t728 = t295 * qJD(3);
t724 = t669 * t297;
t296 = t643 - t594;
t723 = t669 * t296;
t722 = t669 * t295;
t721 = t669 * t301;
t560 = t565 ^ 2;
t718 = -t560 - t561;
t554 = t561 - t560;
t717 = qJD(1) * t132;
t151 = t775 / 0.2e1 - t781 / 0.2e1 + t761 / 0.2e1;
t716 = qJD(1) * t151;
t171 = -t776 - t780;
t715 = qJD(1) * t171;
t181 = -t253 * t541 + t414 * t758;
t714 = qJD(1) * t181;
t214 = -t760 + t762;
t713 = qJD(1) * t214;
t215 = t760 + t762;
t712 = qJD(1) * t215;
t216 = t773 + t778;
t711 = qJD(1) * t216;
t221 = -t415 * t541 + t772;
t710 = qJD(1) * t221;
t368 = t668 * t565;
t708 = qJD(1) * t368;
t369 = t851 * t565;
t707 = qJD(1) * t369;
t370 = t668 * t567;
t706 = qJD(1) * t370;
t702 = qJD(3) * t567;
t701 = qJD(4) * t437;
t698 = qJD(4) * t567;
t697 = qJD(5) * t565;
t696 = qJD(5) * t567;
t695 = qJD(6) * t557;
t637 = t836 - t560 / 0.2e1;
t581 = t637 * t826 - t825 / 0.2e1;
t599 = t793 / 0.2e1 + t792 / 0.2e1;
t135 = t581 - t599;
t694 = t135 * qJD(1);
t172 = t776 - t780;
t693 = t172 * qJD(1);
t180 = t252 * t541 - t414 * t434;
t692 = t180 * qJD(1);
t217 = t773 - t778;
t691 = t217 * qJD(1);
t246 = (0.1e1 / 0.2e1 + t637) * t761;
t690 = t246 * qJD(1);
t277 = t295 * qJD(1);
t278 = t296 * qJD(1);
t687 = t296 * qJD(4);
t157 = t297 * qJD(4);
t281 = t298 * qJD(1);
t326 = t543 * t545;
t685 = t326 * qJD(1);
t683 = t668 * qJD(1);
t431 = (t560 / 0.2e1 + t836) * t543;
t682 = t431 * qJD(5);
t421 = t433 * qJD(1);
t681 = t434 * qJD(1);
t680 = t437 * qJD(1);
t524 = t560 * t541;
t525 = t561 * t541;
t440 = t524 + t525;
t679 = t440 * qJD(1);
t678 = t440 * qJD(4);
t442 = t851 * t567;
t677 = t442 * qJD(1);
t676 = t851 * qJD(1);
t484 = t551 * t619;
t675 = t484 * qJD(1);
t674 = t532 * qJD(1);
t672 = t541 * qJD(1);
t530 = t541 * qJD(4);
t670 = t551 * qJD(1);
t666 = -t830 / 0.2e1;
t664 = t829 / 0.2e1;
t218 = t777 / 0.2e1 - t782 / 0.2e1;
t661 = t218 * qJD(4);
t652 = t413 * t672;
t650 = t565 * t698;
t649 = t543 * t697;
t648 = t543 * t696;
t463 = t541 * t531;
t647 = t545 * t531;
t646 = t565 * t696;
t645 = t567 * t671;
t640 = -t391 / 0.2e1 + t443 / 0.2e1;
t636 = t830 * qJD(5);
t635 = t830 * qJD(6);
t630 = t669 * t541;
t629 = t669 * t547;
t626 = qJD(1) * t549 + qJD(3);
t625 = -qJD(5) - t672;
t624 = t536 * t646;
t621 = -t823 + t828;
t620 = qJD(4) * t634;
t18 = -t102 * t139 + t103 * t140 + t323 * t324;
t8 = t140 * t856 + t803 / 0.2e1 - t139 * t329 / 0.2e1 - t806 / 0.2e1 + t324 * t541 / 0.2e1 + t788 / 0.2e1;
t618 = t18 * qJD(1) + t8 * qJD(2);
t21 = -t102 * t128 + t103 * t129 + t323 * t667;
t617 = t21 * qJD(1) + t9 * qJD(2);
t30 = (t791 / 0.2e1 - t794 / 0.2e1 + t414 / 0.2e1) * t543 + (-t796 / 0.2e1 - t797 / 0.2e1 + t415 / 0.2e1) * t541;
t45 = -t252 * t269 + t253 * t270 + t414 * t415;
t616 = t45 * qJD(1) + t30 * qJD(2);
t582 = (t412 * t666 - t756 * t835) * pkin(5);
t4 = t329 * t639 + t413 * t638 + t545 * t641 + t547 * t642 + t582;
t615 = t4 * qJD(1);
t614 = t791 - t794;
t27 = t788 + t803 - t806;
t613 = t27 * qJD(1) + t151 * qJD(2);
t578 = -t783 / 0.2e1 + t779 / 0.2e1 + t759 / 0.2e1;
t600 = t139 * t840 + t140 * t837;
t28 = t578 - t600;
t612 = -qJD(1) * t28 + qJD(2) * t218;
t62 = (-t253 + t743) * t543 + (-t270 - t391) * t541;
t611 = t62 * qJD(1);
t76 = t772 + (-t796 - t797) * t541;
t610 = -qJD(1) * t76 - qJD(2) * t246;
t250 = (0.1e1 + t718) * t761;
t609 = -t30 * qJD(1) - t250 * qJD(2);
t590 = t412 * t834 - t666 * t756;
t583 = t590 * pkin(5);
t14 = t545 * t642 - t547 * t641 + t583;
t608 = -t14 * qJD(1) + t170 * qJD(4);
t37 = (t413 * t833 + (t547 * t832 + t835) * t543) * pkin(5) + t52;
t428 = -t545 * t557 + t547 * t829;
t607 = qJD(1) * t37 - qJD(4) * t428;
t605 = t625 * t567;
t192 = t329 ^ 2 - t413 ^ 2;
t63 = qJD(1) * t192 + qJD(4) * t168;
t406 = t545 ^ 2 - t547 ^ 2;
t145 = qJD(1) * t168 + qJD(4) * t406;
t603 = t826 / 0.2e1 + t825 / 0.2e1;
t575 = t603 * t565 + t391 / 0.2e1;
t176 = t575 + t640;
t602 = pkin(4) * t698 - t176 * qJD(1);
t592 = t603 * t567;
t178 = -t444 / 0.2e1 - t592;
t601 = pkin(4) * t565 * qJD(4) - t178 * qJD(1);
t597 = qJD(1) * t52 + t545 * t699;
t596 = t543 * t605;
t374 = -t431 * qJD(1) + t650;
t591 = t139 * t665 + t140 * t834;
t320 = qJD(1) * t536 * t745 + t431 * qJD(4);
t441 = t554 * t536;
t586 = t441 * qJD(1) + t620;
t585 = qJD(1) * t634 - t554 * qJD(4);
t152 = t761 + t775 - t781;
t584 = t8 * qJD(1) + t152 * qJD(2) + t218 * qJD(3);
t193 = t557 * t829;
t573 = t128 * t843 + t633 * t857 + t844 * t870;
t2 = (t323 * t833 + t758 * t867 + t591) * pkin(5) + t573;
t49 = -t872 + t638 * t329 + (-t433 / 0.2e1 + t590) * pkin(5);
t576 = -t2 * qJD(1) - t49 * qJD(2) + t170 * qJD(3) + t193 * qJD(4);
t520 = t532 * qJD(4);
t516 = t565 * t531;
t473 = t547 * t531;
t426 = t437 * qJD(5);
t420 = t433 * qJD(4);
t385 = -t421 - t697;
t300 = t756 / 0.2e1 + t580;
t231 = -t629 - t277;
t230 = t628 - t281;
t229 = -t278 - t628;
t188 = qJD(4) * t295 + t652;
t187 = t329 * t672 + t687;
t179 = t771 + t444 / 0.2e1 - t592;
t177 = t575 - t640;
t158 = qJD(4) * t294;
t142 = qJD(4) * t301 - t652 - t866;
t141 = -t157 + (-qJD(6) + t625) * t329;
t136 = t581 + t599;
t75 = qJD(4) * t300 - t866;
t74 = -t687 + t855;
t53 = t589 + t868;
t50 = t541 * t664 + t583 + t872;
t40 = t413 * t664 + t547 * t627 + t623 + (-t824 / 0.2e1 - t207 / 0.2e1) * t564 + t868;
t39 = pkin(5) * t747 / 0.2e1 + t545 * t627 + t665 * t824 + t54;
t36 = t751 - t658 / 0.2e1 + t595;
t34 = t564 * t663 - t657 - t568 / 0.2e1 - t752 / 0.2e1;
t29 = t578 + t600;
t24 = qJD(3) * t246 + qJD(4) * t30;
t15 = t837 * t870 + t840 * t869 + t583;
t5 = t413 * t844 + t481 * t856 + t838 * t869 + t840 * t870 + t582;
t3 = pkin(5) * t591 + t323 * t664 + t557 * t627 - t573;
t1 = qJD(3) * t151 + qJD(4) * t8 + qJD(5) * t9;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t551 * qJD(3), t484 * qJD(3), -t463, -t668 * qJD(4), 0, t463, 0, 0, t549 * t531, -t549 * t530, -qJD(3) * t851, qJD(3) * t221, -t463 * t561 - t624, -t441 * qJD(5) + t541 * t620, qJD(4) * t370 - t541 * t649, -t463 * t560 + t624, -t368 * qJD(4) - t541 * t648, t463, -qJD(3) * t369 + qJD(4) * t61 + qJD(5) * t181, -qJD(3) * t442 + qJD(4) * t62 + qJD(5) * t180, -qJD(4) * t46, qJD(3) * t76 + qJD(4) * t45 (qJD(4) * t412 - t855) * t413, qJD(4) * t172 + t192 * t669, t216 * qJD(4) - t329 * t630 (-qJD(4) * t756 + t866) * t329, t214 * qJD(4) - t413 * t630, t463, qJD(3) * t215 + qJD(4) * t25 + qJD(5) * t47 + qJD(6) * t57, qJD(3) * t217 + qJD(4) * t26 + qJD(5) * t48 + qJD(6) * t56, qJD(3) * t171 + qJD(4) * t13 + qJD(5) * t12, qJD(3) * t27 + qJD(4) * t18 + qJD(5) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t670, t675, 0, 0, 0, 0, 0, 0, 0, 0, -t676, t710, 0, 0, 0, 0, 0, 0, -t707, -t677, 0, qJD(4) * t136 - t610, 0, 0, 0, 0, 0, 0, t712 + t721, t299 * t669 + t691, t715 (t777 - t782) * qJD(3) + t29 * qJD(4) + t15 * qJD(5) + t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t464, -t683, -t530, t464, -t531, 0, -qJD(4) * t415 + t549 * t671, qJD(4) * t414 - t549 * t672, 0, 0, -t682 + (-t561 * t671 - t650) * t541 (t524 - t525) * qJD(4) + (-qJD(5) + t672) * t634, t516 + t706, t682 + (-t560 * t671 + t650) * t541, t517 - t708, t853, t742 + (t565 * t621 - t743) * qJD(4) + t179 * qJD(5) (t567 * t621 + t746) * qJD(4) + t177 * qJD(5) + t611, qJD(4) * t614 - t770, t136 * qJD(3) + (-t415 * pkin(4) + pkin(8) * t614) * qJD(4) + t616 (t700 + t704) * t412 + t871, t693 + (-t367 + t757) * qJD(4) + t733, t473 + t711 - t724 -(qJD(4) * t545 + t862) * t756 - t871, -t647 + t713 + t721, t850, t798 + (t324 * t545 - t543 * t633 - t557 * t756) * qJD(4) + t39 * qJD(5) + t54 * qJD(6), t795 + (t324 * t547 + t412 * t557 - t481 * t543) * qJD(4) + t40 * qJD(5) + t53 * qJD(6), t799 + (-t139 * t547 - t140 * t545 + t412 * t633 + t481 * t756) * qJD(4) + t5 * qJD(5), t29 * qJD(3) + (-t139 * t633 + t140 * t481 + t324 * t557) * qJD(4) + t3 * qJD(5) + t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, -t586, t625 * t434, t320, t596, t520, qJD(4) * t179 - qJD(5) * t253 + t714, qJD(4) * t177 + qJD(5) * t252 + t692, 0, 0, t860, t63, t141, -t860, t142, t520, qJD(4) * t39 + qJD(5) * t128 + qJD(6) * t34 + t729 + t813, qJD(4) * t40 - qJD(5) * t129 + qJD(6) * t36 + t731 + t812, t800 + t5 * qJD(4) + (t329 * t830 - t413 * t564) * t820, t15 * qJD(3) + t3 * qJD(4) + (t128 * t830 + t129 * t564) * t820 + t617; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t860, t63, t141, -t860, t142, t520, qJD(4) * t54 + qJD(5) * t34 - qJD(6) * t103 + t729 + t810, qJD(4) * t53 + qJD(5) * t36 + qJD(6) * t102 + t731 + t811, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t690, 0, 0, 0, 0, 0, 0, 0, 0, 0, t661 + t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t531, t530, 0, 0, 0, 0, 0, 0, 0, 0, t852, t426 + t516, -t678 (t718 * t826 - t825) * qJD(4) - t609, 0, 0, 0, 0, 0, 0, t300 * t669 + t647, t473 - t723, t863 (t759 + t779 - t783) * qJD(4) + t50 * qJD(5) + t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420 - t648, t649 + t701, 0, 0, 0, 0, 0, 0, 0, 0, t75, t74, 0, t817 + t50 * qJD(4) + (-t329 * t564 - t413 * t830) * t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t74, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t670, -t675, 0, 0, 0, 0, 0, 0, t531, -t530, t676, -t710, 0, 0, 0, 0, 0, 0, t707 - t852, -t434 * qJD(4) - t541 * t696 + t677, t678, -qJD(4) * t135 + t610, 0, 0, 0, 0, 0, 0, -qJD(4) * t326 - t712 - t722, -t329 * qJD(4) - t298 * t669 - t691, -t715 - t863, -qJD(4) * t28 - qJD(5) * t14 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t690, 0, 0, 0, 0, 0, 0, 0, 0, 0, t661 - t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, -t672, 0, 0, 0, 0, 0, 0, 0, 0, t645, -t681, t679, -t694, 0, 0, 0, 0, 0, 0, -t685, -t862, -t717, t612 + t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t605, 0, 0, 0, 0, 0, 0, 0, 0, t231, t230, 0 (-t545 * t564 - t547 * t830) * t820 + t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t230, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t464, t683, 0, -t464, 0, 0, -t626 * t543, t626 * t541, 0, 0, t464 * t561 - t682, 0.2e1 * t565 * t596, t426 - t706, t464 * t560 + t682, -t422 + t708, -t853, t178 * qJD(5) - t543 * t702 - t742, qJD(3) * t434 + qJD(5) * t176 - t611, -qJD(3) * t440 + t770, qJD(3) * t135 - t616, -t412 * t704 + t871, -t693 + t733, -t711 - t723, t756 * t862 - t871, -t713 - t722, -t850, qJD(3) * t326 - qJD(5) * t38 - qJD(6) * t51 - t798, qJD(3) * t329 - qJD(5) * t37 - qJD(6) * t52 - t795, qJD(3) * t132 - qJD(5) * t4 - t799, qJD(3) * t28 - qJD(5) * t2 - t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t609, 0, 0, 0, 0, 0, 0, -t669 * t294, -t724, 0, -qJD(5) * t49 - t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t671, t672, 0, 0, 0, 0, 0, 0, 0, 0, -t645, t681, -t679, t694, 0, 0, 0, 0, 0, 0, t685, t862, t717, -t612 + t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t646, t554 * qJD(5), 0, -t646, 0, 0, -pkin(4) * t697, -pkin(4) * t696, 0, 0, -t545 * t629, t669 * t406, 0, t547 * t628, 0, 0, qJD(5) * t427 + t547 * t695, qJD(5) * t428 - t545 * t695, 0, qJD(5) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, -t585, t680 + t696, -t374, t385, -t674, -pkin(8) * t696 - t601, pkin(8) * t697 - t602, 0, 0, -t861, t145, t229, t861, t231, -t674, -t848 - t858, -t607 + t859 (t545 * t830 - t547 * t564) * t820 - t615 (-t481 * t830 - t564 * t633) * t820 + t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t861, t145, t229, t861, t231, -t674, -t849 - t858, -t597 + t859, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t586, t464 * t565 - t701, -t320, t541 * t645 + t420, t520, qJD(3) * t433 - qJD(4) * t178 - t714, -t176 * qJD(4) + t541 * t702 - t692, 0, 0, -t860, -t63, t187, t860, t188, t520, qJD(4) * t38 + qJD(6) * t33 + t728 - t813, qJD(4) * t37 + qJD(6) * t35 + t730 - t812, qJD(4) * t4 - t800, qJD(3) * t14 + qJD(4) * t2 - t617; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t157, 0, qJD(4) * t49 - t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t567 * t672, 0, 0, 0, 0, 0, 0, 0, 0, t277, t281, 0, -t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t374, t585, -t680, t374, t421, t674, t601, t602, 0, 0, t861, -t145, t278, -t861, t277, t674, t848, t686 + t607, t615, -t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t822, -pkin(5) * t635, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669 * t822 + t785, t784 + (-t636 - t635) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t860, -t63, t187, t860, t188, t520, qJD(4) * t51 - qJD(5) * t33 + t728 - t810, qJD(4) * t52 - qJD(5) * t35 + t730 - t811, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t157, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, t281, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t861, -t145, t278, -t861, t277, t674, t849, t686 + t597, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t564 * t820 - t785, pkin(5) * t636 - t784, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t6;
