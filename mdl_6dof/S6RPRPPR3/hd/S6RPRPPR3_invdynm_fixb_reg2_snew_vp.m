% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPPR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 16:43
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPPR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR3_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR3_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPPR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPPR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPPR3_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 16:43:08
% EndTime: 2019-05-05 16:43:27
% DurationCPUTime: 19.53s
% Computational Cost: add. (41987->758), mult. (86257->815), div. (0->0), fcn. (44765->8), ass. (0->468)
t1199 = sin(qJ(3));
t1187 = t1199 ^ 2;
t1204 = qJD(1) ^ 2;
t1298 = t1187 * t1204;
t1365 = qJD(3) ^ 2;
t1162 = t1298 + t1365;
t1202 = cos(qJ(3));
t1385 = t1202 * t1204;
t1168 = t1199 * t1385;
t1157 = -t1168 + qJDD(3);
t1292 = t1202 * t1157;
t1091 = -t1162 * t1199 + t1292;
t1321 = qJD(3) * t1202;
t1177 = qJD(1) * t1321;
t1285 = t1199 * qJDD(1);
t1141 = 0.2e1 * t1177 + t1285;
t1193 = sin(pkin(9));
t1194 = cos(pkin(9));
t1021 = t1091 * t1193 + t1141 * t1194;
t1025 = t1091 * t1194 - t1141 * t1193;
t1200 = sin(qJ(1));
t1203 = cos(qJ(1));
t937 = pkin(6) * (t1021 * t1200 - t1025 * t1203);
t1361 = pkin(6) * (t1021 * t1203 + t1025 * t1200);
t1017 = pkin(1) * t1021;
t1188 = t1202 ^ 2;
t1297 = t1188 * t1204;
t1164 = t1297 + t1365;
t1156 = t1168 + qJDD(3);
t1305 = t1156 * t1199;
t1092 = t1164 * t1202 + t1305;
t1294 = t1199 * qJD(1);
t1176 = qJD(3) * t1294;
t1284 = t1202 * qJDD(1);
t1144 = -0.2e1 * t1176 + t1284;
t1022 = t1092 * t1193 - t1144 * t1194;
t1026 = t1092 * t1194 + t1144 * t1193;
t938 = pkin(6) * (t1022 * t1200 - t1026 * t1203);
t1360 = pkin(6) * (t1022 * t1203 + t1026 * t1200);
t1342 = qJ(2) * t1021;
t1304 = t1157 * t1199;
t1083 = t1162 * t1202 + t1304;
t1267 = -pkin(1) * t1083 + qJ(2) * t1025;
t1018 = pkin(1) * t1022;
t1341 = qJ(2) * t1022;
t1129 = t1202 * t1156;
t1088 = -t1164 * t1199 + t1129;
t1266 = -pkin(1) * t1088 - qJ(2) * t1026;
t1310 = t1144 * t1202;
t1315 = t1141 * t1199;
t1063 = -t1310 + t1315;
t1154 = (t1187 - t1188) * t1204;
t1008 = t1063 * t1193 + t1154 * t1194;
t1011 = t1063 * t1194 - t1154 * t1193;
t1409 = t1008 * t1203 + t1011 * t1200;
t932 = t1008 * t1200 - t1011 * t1203;
t1165 = t1297 - t1365;
t1094 = -t1165 * t1202 + t1304;
t1046 = t1094 * t1193 + t1194 * t1284;
t1049 = t1094 * t1194 - t1193 * t1284;
t1406 = t1046 * t1203 + t1049 * t1200;
t959 = t1046 * t1200 - t1049 * t1203;
t1358 = pkin(2) * t1088;
t1286 = t1187 + t1188;
t1150 = t1286 * qJDD(1);
t1153 = t1286 * t1204;
t1069 = t1150 * t1193 + t1153 * t1194;
t1071 = t1150 * t1194 - t1153 * t1193;
t987 = pkin(6) * (t1069 * t1200 - t1071 * t1203);
t1359 = pkin(6) * (t1069 * t1203 + t1071 * t1200);
t1349 = pkin(7) * t1088;
t1159 = g(1) * t1203 + g(2) * t1200;
t1138 = -pkin(1) * t1204 - t1159;
t1158 = g(1) * t1200 - t1203 * g(2);
t1228 = qJDD(1) * pkin(1) + t1158;
t1057 = t1138 * t1193 - t1194 * t1228;
t1058 = t1194 * t1138 + t1193 * t1228;
t1255 = t1057 * t1193 + t1194 * t1058;
t977 = t1057 * t1194 - t1058 * t1193;
t1331 = t1200 * t977;
t1404 = t1203 * t1255 + t1331;
t1328 = t1203 * t977;
t1403 = -t1200 * t1255 + t1328;
t1290 = pkin(2) * t1141 + pkin(7) * t1091;
t1402 = -2 * qJD(4);
t1065 = pkin(1) * t1069;
t1400 = pkin(2) * t1083;
t1399 = pkin(4) * t1156;
t1350 = pkin(7) * t1083;
t1340 = qJ(2) * t1069;
t1064 = qJ(2) * t1071;
t1378 = pkin(3) * t1162 + qJ(4) * t1157;
t1189 = g(3) - qJDD(2);
t1296 = t1189 * t1199;
t1252 = t1365 * pkin(3) + t1296;
t1319 = qJDD(3) * qJ(4);
t1222 = qJD(3) * t1402 + t1252 - t1319;
t1043 = -t1204 * pkin(2) + qJDD(1) * pkin(7) + t1058;
t1239 = -pkin(3) * t1202 - qJ(4) * t1199;
t1137 = t1239 * qJD(1);
t1256 = qJD(1) * t1137 + t1043;
t968 = t1202 * t1256 - t1222;
t1398 = t968 + t1378;
t1336 = qJ(4) * t1164;
t1175 = t1202 * t1189;
t1243 = qJDD(3) * pkin(3) + t1365 * qJ(4) - qJDD(4) - t1175;
t974 = t1199 * t1256 - t1243;
t1397 = pkin(3) * t1156 - t1336 - t974;
t1198 = sin(qJ(6));
t1201 = cos(qJ(6));
t1323 = qJD(1) * t1202;
t1132 = -qJD(3) * t1201 + t1198 * t1323;
t1133 = qJD(3) * t1198 + t1201 * t1323;
t1074 = t1132 * t1133;
t1142 = t1177 + t1285;
t1122 = qJDD(6) + t1142;
t1380 = -t1074 + t1122;
t1396 = t1198 * t1380;
t1395 = t1201 * t1380;
t1394 = t1142 + t1177;
t1289 = pkin(2) * t1144 - pkin(7) * t1092;
t1148 = qJDD(1) * t1193 + t1194 * t1204;
t1108 = qJ(2) * t1148 - t1189 * t1194;
t1149 = qJDD(1) * t1194 - t1193 * t1204;
t1236 = -qJ(2) * t1149 - t1189 * t1193;
t1379 = t1203 * t1148 + t1149 * t1200;
t1393 = pkin(6) * t1379 + t1203 * t1108 - t1200 * t1236;
t1066 = -t1148 * t1200 + t1203 * t1149;
t1392 = -pkin(6) * t1066 + t1200 * t1108 + t1203 * t1236;
t1389 = pkin(3) * (-t1144 + t1176);
t1143 = -t1176 + t1284;
t1277 = qJD(4) * t1294;
t1174 = 0.2e1 * t1277;
t1042 = -qJDD(1) * pkin(2) - t1204 * pkin(7) + t1057;
t1216 = -t1143 * pkin(3) - qJ(4) * t1394 + t1042;
t1155 = -qJD(3) * pkin(4) - qJ(5) * t1294;
t1375 = t1155 * t1294 + qJDD(5);
t1213 = t1216 - t1375;
t1279 = qJ(5) * t1297;
t1324 = qJD(1) * qJD(3);
t1362 = pkin(4) + pkin(8);
t872 = -t1279 + pkin(5) * t1142 + t1174 + t1362 * t1143 + (pkin(5) * t1202 + (-pkin(3) - pkin(8)) * t1199) * t1324 - t1213;
t1293 = t1199 * t1043;
t1214 = -t1142 * qJ(5) - t1243 + t1293 - t1399;
t1241 = pkin(5) * t1199 + pkin(8) * t1202;
t1278 = qJ(5) * t1321;
t1291 = -(2 * qJD(5)) + t1137;
t903 = -t1365 * pkin(5) - qJDD(3) * pkin(8) + (t1278 + (-qJD(1) * t1241 + t1291) * t1199) * qJD(1) + t1214;
t825 = t1198 * t903 - t1201 * t872;
t826 = t1198 * t872 + t1201 * t903;
t791 = t1198 * t825 + t1201 * t826;
t1387 = t1198 * t826 - t1201 * t825;
t1009 = t1175 + t1293;
t1012 = t1043 * t1202 - t1296;
t931 = t1199 * t1009 + t1202 * t1012;
t1055 = qJD(6) * t1132 - t1198 * qJDD(3) - t1143 * t1201;
t1169 = qJD(6) + t1294;
t1110 = t1169 * t1132;
t1381 = t1055 + t1110;
t1377 = -pkin(4) * t1297 - qJ(5) * t1143;
t1086 = t1165 * t1199 + t1292;
t1288 = pkin(2) * t1153 + pkin(7) * t1150;
t1121 = t1132 ^ 2;
t1364 = t1133 ^ 2;
t1035 = -t1121 - t1364;
t1002 = t1055 - t1110;
t1230 = -qJDD(3) * t1201 + t1143 * t1198;
t999 = (qJD(6) - t1169) * t1133 + t1230;
t923 = t1198 * t1002 + t1201 * t999;
t1229 = -pkin(5) * t1035 + pkin(8) * t923 + t791;
t1363 = pkin(3) + pkin(4);
t1374 = qJ(4) * t1035 - t1363 * t923 - t1229;
t1212 = ((2 * qJD(4)) + t1155) * qJD(3) - t1252 + t1377;
t1233 = qJD(1) * t1291 + t1043;
t1209 = t1202 * t1233 + t1212;
t902 = -t1241 * t1385 - t1365 * pkin(8) + (pkin(5) + qJ(4)) * qJDD(3) + t1209;
t895 = t1198 * t902;
t1166 = t1169 ^ 2;
t1270 = -t1166 - t1364;
t1038 = t1074 + t1122;
t1318 = t1038 * t1201;
t970 = -t1198 * t1270 - t1318;
t1282 = -pkin(5) * t1381 + pkin(8) * t970 + t895;
t1373 = qJ(4) * t1381 - t1363 * t970 - t1282;
t1329 = t1201 * t902;
t1056 = -t1166 - t1121;
t955 = t1056 * t1201 - t1396;
t1111 = t1169 * t1133;
t1219 = qJD(6) * t1133 + t1230;
t997 = -t1111 - t1219;
t1281 = pkin(5) * t997 - pkin(8) * t955 + t1329;
t1372 = qJ(4) * t997 - t1363 * t955 + t1281;
t1343 = pkin(5) * t902 - pkin(8) * t791;
t1371 = qJ(4) * t902 - t1363 * t791 + t1343;
t925 = t1209 + t1319;
t926 = (t1199 * t1291 + t1278) * qJD(1) + t1214;
t1370 = qJ(4) * t925 - t1363 * t926;
t1369 = -t1156 * t1363 + t1336;
t1283 = 0.2e1 * qJD(5) * qJD(1);
t1367 = -qJD(3) * t1155 + t1202 * t1283 - t1377;
t1366 = (t1143 + t1144) * pkin(4) - qJ(5) * (-t1164 + t1297);
t1353 = pkin(4) * t1143;
t1352 = pkin(4) * t1162;
t1346 = qJ(5) * t902;
t1345 = qJ(5) * t925;
t1344 = qJ(5) * t926;
t1339 = qJ(4) * t1141;
t1338 = qJ(4) * t1144;
t1337 = qJ(4) * t1153;
t1334 = qJ(5) * t1156;
t1333 = qJ(5) * t1157;
t1327 = -pkin(2) * t1042 + pkin(7) * t931;
t1326 = pkin(3) + t1362;
t1325 = qJ(5) * qJDD(1);
t1314 = t1141 * t1202;
t1311 = t1144 * t1199;
t1300 = t1169 * t1198;
t1299 = t1169 * t1201;
t1295 = t1198 * t1038;
t1033 = t1199 * t1042;
t1034 = t1202 * t1042;
t954 = t1198 * t1056 + t1395;
t1280 = -pkin(5) * t954 + t825;
t1276 = t1199 * t1074;
t1275 = t1202 * t1074;
t1274 = t1133 * t1300;
t1273 = t1133 * t1299;
t1272 = t1033 - t1290;
t1271 = -t1034 + t1289;
t788 = pkin(5) * t1387;
t1265 = -qJ(5) * t791 + t788;
t921 = -t1002 * t1201 + t1198 * t999;
t919 = pkin(5) * t921;
t1264 = -qJ(5) * t923 + t919;
t1263 = -qJ(5) * t1381 - t1329;
t761 = t1326 * t1387 - t1346;
t765 = qJ(4) * t1387 + t1265;
t783 = t1199 * t791 + t1202 * t902;
t1261 = pkin(2) * t1387 + pkin(7) * t783 + t1199 * t765 + t1202 * t761;
t1234 = -qJ(5) * t955 - t1280;
t794 = qJ(4) * t954 + t1234;
t1237 = -qJ(5) * t997 - t895;
t801 = t1326 * t954 + t1237;
t889 = t1199 * t955 + t1202 * t997;
t1260 = pkin(2) * t954 + pkin(7) * t889 + t1199 * t794 + t1202 * t801;
t969 = t1201 * t1270 - t1295;
t1226 = -pkin(5) * t969 + t826;
t1218 = -qJ(5) * t970 - t1226;
t796 = qJ(4) * t969 + t1218;
t805 = t1326 * t969 + t1263;
t899 = t1199 * t970 + t1202 * t1381;
t1259 = pkin(2) * t969 + pkin(7) * t899 + t1199 * t796 + t1202 * t805;
t1227 = -qJ(5) * t1035 + t1387;
t778 = t1326 * t921 + t1227;
t809 = qJ(4) * t921 + t1264;
t866 = t1035 * t1202 + t1199 * t923;
t1258 = pkin(2) * t921 + pkin(7) * t866 + t1199 * t809 + t1202 * t778;
t950 = (pkin(3) * qJD(3) + t1402) * t1294 + t1216;
t916 = t1279 + t950 - t1353 - t1375;
t812 = -t1363 * t916 - t1345;
t838 = -qJ(4) * t916 - t1344;
t844 = t1199 * t926 + t1202 * t925;
t1257 = -pkin(2) * t916 + pkin(7) * t844 + t1199 * t838 + t1202 * t812;
t1254 = -t1158 * t1200 - t1203 * t1159;
t891 = -t1363 * t1153 + (-t1256 + t1325) * t1202 + t1222 + t1367;
t1208 = t1199 * t1283 + (-t1199 * t1137 - t1278) * qJD(1) - t1214;
t1207 = qJ(5) * t1285 + t1208;
t909 = t1207 - t1337;
t1251 = t1199 * t909 + t1202 * t891 - t1288;
t947 = pkin(3) * t1153 + t968;
t949 = t974 + t1337;
t1250 = t1199 * t949 + t1202 * t947 + t1288;
t1079 = -t1334 - t1338;
t878 = t1213 - 0.2e1 * t1277 - t1366 + t1389;
t1249 = t1199 * t1079 + t1202 * t878 - t1289;
t1039 = t1141 * t1363 - t1333;
t1215 = t1174 - t1216;
t1211 = -pkin(3) * t1176 + t1215;
t1210 = t1211 + t1375;
t1205 = t1210 + t1353 + (t1162 - t1297) * qJ(5);
t890 = t1205 + t1339;
t1248 = t1202 * t1039 + t1199 * t890 + t1290;
t1247 = t1193 * t1168;
t1246 = t1194 * t1168;
t1245 = t1288 + t931;
t1242 = -pkin(3) * t974 + qJ(4) * t968;
t1152 = qJDD(1) * t1203 - t1200 * t1204;
t1240 = -pkin(6) * t1152 - g(3) * t1200;
t930 = t1009 * t1202 - t1012 * t1199;
t1060 = t1311 + t1314;
t1232 = t1158 * t1203 - t1159 * t1200;
t935 = t1211 + t1339;
t1224 = pkin(3) * t1314 + t1199 * t935 + t1290;
t936 = t1215 - t1389;
t1223 = qJ(4) * t1311 + t1202 * t936 + t1289;
t877 = t1199 * t974 + t1202 * t968;
t1217 = pkin(7) * t877 + (-pkin(2) + t1239) * t950;
t912 = -t1398 - t1400;
t1206 = t925 + t1352;
t1179 = qJ(4) * t1284;
t1163 = t1298 - t1365;
t1151 = qJDD(1) * t1200 + t1203 * t1204;
t1135 = pkin(3) * t1285 - t1179;
t1128 = t1286 * t1324;
t1113 = -pkin(6) * t1151 + g(3) * t1203;
t1112 = t1285 * t1363 - t1179;
t1104 = t1166 - t1364;
t1103 = t1121 - t1166;
t1102 = t1142 * t1202 - t1187 * t1324;
t1101 = -t1143 * t1199 - t1188 * t1324;
t1100 = qJDD(3) * t1193 + t1128 * t1194;
t1099 = -qJDD(3) * t1194 + t1128 * t1193;
t1098 = t1132 * t1299;
t1097 = t1132 * t1300;
t1090 = t1163 * t1199 + t1129;
t1084 = t1394 * t1199;
t1082 = -t1163 * t1202 + t1305;
t1081 = (t1143 - t1176) * t1202;
t1073 = -t1121 + t1364;
t1053 = t1102 * t1194 - t1247;
t1052 = t1101 * t1194 + t1247;
t1051 = t1102 * t1193 + t1246;
t1050 = t1101 * t1193 - t1246;
t1047 = t1090 * t1194 + t1193 * t1285;
t1044 = t1090 * t1193 - t1194 * t1285;
t1020 = -pkin(1) * t1148 - t1058;
t1019 = pkin(1) * t1149 - t1057;
t1014 = -t1097 - t1273;
t1013 = -t1098 + t1274;
t1004 = -t1099 * t1200 + t1100 * t1203;
t1003 = t1099 * t1203 + t1100 * t1200;
t998 = t1111 - t1219;
t992 = t1201 * t1219 - t1097;
t991 = t1055 * t1198 - t1273;
t990 = -t1198 * t1219 - t1098;
t989 = -t1201 * t1055 - t1274;
t986 = -t1013 * t1199 + t1122 * t1202;
t985 = t1013 * t1202 + t1122 * t1199;
t984 = t1034 + t1350;
t983 = t1104 * t1201 + t1396;
t982 = t1103 * t1198 + t1318;
t981 = t1033 - t1349;
t980 = t1104 * t1198 - t1395;
t979 = -t1201 * t1103 + t1295;
t973 = pkin(1) * t977;
t972 = t1012 + t1400;
t971 = t1009 - t1358;
t964 = pkin(1) * t1189 + qJ(2) * t1255;
t963 = -t1051 * t1200 + t1053 * t1203;
t962 = -t1050 * t1200 + t1052 * t1203;
t961 = t1051 * t1203 + t1053 * t1200;
t960 = t1050 * t1203 + t1052 * t1200;
t958 = -t1044 * t1200 + t1047 * t1203;
t956 = t1044 * t1203 + t1047 * t1200;
t944 = -t1199 * t989 + t1275;
t943 = t1199 * t990 - t1275;
t942 = t1202 * t989 + t1276;
t941 = -t1202 * t990 - t1276;
t924 = -t1198 * t997 + t1201 * t1381;
t922 = t1198 * t1381 + t1201 * t997;
t917 = -t1358 - t1397;
t915 = t1014 * t1193 + t1194 * t986;
t914 = -t1014 * t1194 + t1193 * t986;
t911 = -t1018 + t1271;
t910 = t1272 - t1017;
t908 = t1002 * t1202 - t1199 * t980;
t907 = -t1199 * t979 - t1202 * t998;
t906 = t1002 * t1199 + t1202 * t980;
t905 = -t1199 * t998 + t1202 * t979;
t898 = t1199 * t1381 - t1202 * t970;
t893 = t1194 * t930 - t1340;
t892 = t1193 * t930 + t1064;
t888 = t1199 * t997 - t1202 * t955;
t887 = -pkin(3) * t1315 + t1202 * t935 - t1350;
t886 = qJ(4) * t1310 - t1199 * t936 - t1349;
t882 = t1042 * t1193 + t1194 * t931;
t881 = -t1042 * t1194 + t1193 * t931;
t880 = t1073 * t1202 - t1199 * t922;
t879 = t1073 * t1199 + t1202 * t922;
t876 = t1199 * t968 - t1202 * t974;
t874 = t1065 + t1245;
t870 = -t1193 * t991 + t1194 * t944;
t869 = -t1193 * t992 + t1194 * t943;
t868 = t1193 * t944 + t1194 * t991;
t867 = t1193 * t943 + t1194 * t992;
t865 = t1035 * t1199 - t1202 * t923;
t863 = t912 - t1352 + t1367;
t862 = t1208 - t1369 + t1358;
t861 = -t1199 * t947 + t1202 * t949;
t860 = -t1193 * t972 + t1194 * t984 + t1342;
t859 = -t1193 * t971 + t1194 * t981 + t1341;
t858 = t1017 + t1224;
t857 = -t1018 + t1223;
t856 = -t1193 * t983 + t1194 * t908;
t855 = -t1193 * t982 + t1194 * t907;
t854 = t1193 * t908 + t1194 * t983;
t853 = t1193 * t907 + t1194 * t982;
t852 = t1079 * t1202 - t1199 * t878 + t1349;
t851 = -t1039 * t1199 + t1202 * t890 - t1350;
t850 = -t1193 * t969 + t1194 * t899;
t849 = t1193 * t899 + t1194 * t969;
t848 = t1193 * t984 + t1194 * t972 - t1267;
t847 = t1193 * t981 + t1194 * t971 + t1266;
t846 = -t1135 * t1193 + t1194 * t861 - t1340;
t845 = t1135 * t1194 + t1193 * t861 + t1064;
t843 = t1199 * t925 - t1202 * t926;
t842 = -t1193 * t954 + t1194 * t889;
t841 = t1193 * t889 + t1194 * t954;
t839 = t1065 + t1250;
t836 = t1193 * t950 + t1194 * t877;
t835 = t1193 * t877 - t1194 * t950;
t834 = t1249 + t1018;
t833 = t1017 + t1248;
t832 = -t1199 * t891 + t1202 * t909;
t831 = -t1193 * t924 + t1194 * t880;
t830 = t1193 * t880 + t1194 * t924;
t829 = -t1193 * t921 + t1194 * t866;
t828 = t1193 * t866 + t1194 * t921;
t827 = pkin(1) * t881 + t1327;
t821 = -pkin(2) * t876 - t1242;
t820 = -t1193 * t917 + t1194 * t886 + t1341;
t819 = -t1193 * t912 + t1194 * t887 - t1342;
t818 = t1251 - t1065;
t817 = t1112 * t1193 + t1194 * t832 + t1340;
t816 = -t1112 * t1194 + t1193 * t832 - t1064;
t815 = -pkin(7) * t876 + (pkin(3) * t1199 - qJ(4) * t1202) * t950;
t814 = t1193 * t886 + t1194 * t917 + t1266;
t813 = t1193 * t887 + t1194 * t912 + t1267;
t811 = t1193 * t916 + t1194 * t844;
t810 = t1193 * t844 - t1194 * t916;
t806 = -qJ(2) * t881 - (pkin(2) * t1193 - pkin(7) * t1194) * t930;
t803 = -t1193 * t863 + t1194 * t851 - t1342;
t802 = -t1193 * t862 + t1194 * t852 - t1341;
t799 = t1193 * t851 + t1194 * t863 + t1267;
t798 = t1193 * t852 + t1194 * t862 - t1266;
t797 = qJ(2) * t882 - (-pkin(2) * t1194 - pkin(7) * t1193 - pkin(1)) * t930;
t792 = -pkin(2) * t843 - t1370;
t786 = -pkin(2) * t898 - t1373;
t785 = -pkin(2) * t888 - t1372;
t784 = pkin(1) * t835 + t1217;
t782 = t1199 * t902 - t1202 * t791;
t780 = -pkin(7) * t843 - t1199 * t812 + t1202 * t838;
t779 = -qJ(2) * t835 - t1193 * t821 + t1194 * t815;
t776 = -pkin(1) * t876 + qJ(2) * t836 + t1193 * t815 + t1194 * t821;
t775 = -pkin(7) * t898 - t1199 * t805 + t1202 * t796;
t774 = -pkin(7) * t888 - t1199 * t801 + t1202 * t794;
t773 = -pkin(2) * t865 - t1374;
t772 = pkin(1) * t810 + t1257;
t771 = -t1193 * t1387 + t1194 * t783;
t770 = t1193 * t783 + t1194 * t1387;
t769 = pkin(1) * t849 + t1259;
t768 = pkin(1) * t841 + t1260;
t767 = -pkin(7) * t865 - t1199 * t778 + t1202 * t809;
t766 = -qJ(2) * t810 - t1193 * t792 + t1194 * t780;
t763 = -qJ(2) * t849 - t1193 * t786 + t1194 * t775;
t762 = pkin(1) * t828 + t1258;
t759 = -pkin(1) * t843 + qJ(2) * t811 + t1193 * t780 + t1194 * t792;
t758 = -qJ(2) * t841 - t1193 * t785 + t1194 * t774;
t757 = -pkin(1) * t898 + qJ(2) * t850 + t1193 * t775 + t1194 * t786;
t756 = -pkin(1) * t888 + qJ(2) * t842 + t1193 * t774 + t1194 * t785;
t755 = -pkin(2) * t782 - t1371;
t754 = -qJ(2) * t828 - t1193 * t773 + t1194 * t767;
t753 = -pkin(1) * t865 + qJ(2) * t829 + t1193 * t767 + t1194 * t773;
t752 = -pkin(7) * t782 - t1199 * t761 + t1202 * t765;
t751 = pkin(1) * t770 + t1261;
t750 = -qJ(2) * t770 - t1193 * t755 + t1194 * t752;
t749 = -pkin(1) * t782 + qJ(2) * t771 + t1193 * t752 + t1194 * t755;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1152, 0, -t1151, 0, t1240, -t1113, -t1232, -pkin(6) * t1232, 0, 0, t1066, 0, -t1379, 0, t1392, t1393, t1403, pkin(6) * t1403 + qJ(2) * t1328 - t1200 * t964, t963, t932, t958, t962, t959, t1004, -t1200 * t847 + t1203 * t859 + t1360, -t1200 * t848 + t1203 * t860 + t1361, -t1200 * t892 + t1203 * t893 - t1359, t1203 * t806 - t1200 * t797 - pkin(6) * (t1200 * t882 + t1203 * t881), t963, t958, -t932, t1004, -t959, t962, -t1200 * t814 + t1203 * t820 + t1360, -t1200 * t845 + t1203 * t846 - t1359, -t1200 * t813 + t1203 * t819 - t1361, t1203 * t779 - t1200 * t776 - pkin(6) * (t1200 * t836 + t1203 * t835), t962, t932, t959, t963, t958, t1004, -t1200 * t799 + t1203 * t803 - t1361, -t1200 * t798 + t1203 * t802 - t1360, -t1200 * t816 + t1203 * t817 + t1359, t1203 * t766 - t1200 * t759 - pkin(6) * (t1200 * t811 + t1203 * t810), -t1200 * t868 + t1203 * t870, -t1200 * t830 + t1203 * t831, -t1200 * t854 + t1203 * t856, -t1200 * t867 + t1203 * t869, -t1200 * t853 + t1203 * t855, -t1200 * t914 + t1203 * t915, t1203 * t758 - t1200 * t756 - pkin(6) * (t1200 * t842 + t1203 * t841), t1203 * t763 - t1200 * t757 - pkin(6) * (t1200 * t850 + t1203 * t849), t1203 * t754 - t1200 * t753 - pkin(6) * (t1200 * t829 + t1203 * t828), t1203 * t750 - t1200 * t749 - pkin(6) * (t1200 * t771 + t1203 * t770); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1151, 0, t1152, 0, t1113, t1240, t1254, pkin(6) * t1254, 0, 0, t1379, 0, t1066, 0, -t1393, t1392, t1404, pkin(6) * t1404 + qJ(2) * t1331 + t1203 * t964, t961, -t1409, t956, t960, -t1406, t1003, t1200 * t859 + t1203 * t847 + t938, t1200 * t860 + t1203 * t848 + t937, t1200 * t893 + t1203 * t892 - t987, t1200 * t806 + t1203 * t797 + pkin(6) * (-t1200 * t881 + t1203 * t882), t961, t956, t1409, t1003, t1406, t960, t1200 * t820 + t1203 * t814 + t938, t1200 * t846 + t1203 * t845 - t987, t1200 * t819 + t1203 * t813 - t937, t1200 * t779 + t1203 * t776 + pkin(6) * (-t1200 * t835 + t1203 * t836), t960, -t1409, -t1406, t961, t956, t1003, t1200 * t803 + t1203 * t799 - t937, t1200 * t802 + t1203 * t798 - t938, t1200 * t817 + t1203 * t816 + t987, t1200 * t766 + t1203 * t759 + pkin(6) * (-t1200 * t810 + t1203 * t811), t1200 * t870 + t1203 * t868, t1200 * t831 + t1203 * t830, t1200 * t856 + t1203 * t854, t1200 * t869 + t1203 * t867, t1200 * t855 + t1203 * t853, t1200 * t915 + t1203 * t914, t1200 * t758 + t1203 * t756 + pkin(6) * (-t1200 * t841 + t1203 * t842), t1200 * t763 + t1203 * t757 + pkin(6) * (-t1200 * t849 + t1203 * t850), t1200 * t754 + t1203 * t753 + pkin(6) * (-t1200 * t828 + t1203 * t829), t1200 * t750 + t1203 * t749 + pkin(6) * (-t1200 * t770 + t1203 * t771); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1158, t1159, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1019, t1020, 0, -t973, t1084, t1060, t1082, t1081, t1086, 0, t911, t910, t874, t827, t1084, t1082, -t1060, 0, -t1086, t1081, t857, t839, t858, t784, t1081, t1060, t1086, t1084, t1082, 0, t833, t834, t818, t772, t942, t879, t906, t941, t905, t985, t768, t769, t762, t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1204, 0, 0, -g(3), -t1158, 0, 0, 0, t1149, 0, -t1148, 0, t1236, t1108, t977, qJ(2) * t977, t1053, -t1011, t1047, t1052, -t1049, t1100, t859, t860, t893, t806, t1053, t1047, t1011, t1100, t1049, t1052, t820, t846, t819, t779, t1052, -t1011, -t1049, t1053, t1047, t1100, t803, t802, t817, t766, t870, t831, t856, t869, t855, t915, t758, t763, t754, t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1204, 0, qJDD(1), 0, g(3), 0, -t1159, 0, 0, 0, t1148, 0, t1149, 0, -t1108, t1236, t1255, t964, t1051, -t1008, t1044, t1050, -t1046, t1099, t847, t848, t892, t797, t1051, t1044, t1008, t1099, t1046, t1050, t814, t845, t813, t776, t1050, -t1008, -t1046, t1051, t1044, t1099, t799, t798, t816, t759, t868, t830, t854, t867, t853, t914, t756, t757, t753, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1158, t1159, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1019, t1020, 0, -t973, t1084, t1060, t1082, t1081, t1086, 0, t911, t910, t874, t827, t1084, t1082, -t1060, 0, -t1086, t1081, t857, t839, t858, t784, t1081, t1060, t1086, t1084, t1082, 0, t833, t834, t818, t772, t942, t879, t906, t941, t905, t985, t768, t769, t762, t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1204, 0, 0, -t1189, t1057, 0, t1102, -t1063, t1090, t1101, -t1094, t1128, t981, t984, t930, pkin(7) * t930, t1102, t1090, t1063, t1128, t1094, t1101, t886, t861, t887, t815, t1101, -t1063, -t1094, t1102, t1090, t1128, t851, t852, t832, t780, t944, t880, t908, t943, t907, t986, t774, t775, t767, t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1204, 0, qJDD(1), 0, t1189, 0, t1058, 0, t1168, -t1154, -t1285, -t1168, -t1284, -qJDD(3), t971, t972, 0, pkin(2) * t930, t1168, -t1285, t1154, -qJDD(3), t1284, -t1168, t917, t1135, t912, t821, -t1168, -t1154, -t1284, t1168, -t1285, -qJDD(3), t863, t862, -t1112, t792, t991, t924, t983, t992, t982, -t1014, t785, t786, t773, t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1057, -t1058, 0, 0, t1084, t1060, t1082, t1081, t1086, 0, t1271, t1272, t1245, t1327, t1084, t1082, -t1060, 0, -t1086, t1081, t1223, t1250, t1224, t1217, t1081, t1060, t1086, t1084, t1082, 0, t1248, t1249, t1251, t1257, t942, t879, t906, t941, t905, t985, t1260, t1259, t1258, t1261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1142, t1144, t1156, -t1177, t1165, t1177, 0, t1042, t1009, 0, t1142, t1156, -t1144, t1177, -t1165, -t1177, t1338, t949, t935, -qJ(4) * t950, -t1177, t1144, t1165, t1142, t1156, t1177, t890, t1079, t909, t838, t1074, t1073, t1002, -t1074, -t998, t1122, t794, t796, t809, t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1176, t1141, -t1163, t1143, t1157, -t1176, -t1042, 0, t1012, 0, t1176, -t1163, -t1141, -t1176, -t1157, t1143, t936, t947, pkin(3) * t1141, -pkin(3) * t950, t1143, t1141, t1157, t1176, -t1163, -t1176, t1039, t878, t891, t812, t989, t922, t980, -t990, t979, t1013, t801, t805, t778, t761; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1168, t1154, t1285, t1168, t1284, qJDD(3), -t1009, -t1012, 0, 0, -t1168, t1285, -t1154, qJDD(3), -t1284, t1168, t1397, -t1135, t1398, t1242, t1168, t1154, t1284, -t1168, t1285, qJDD(3), t1206 + t1378, t1369 + t926, t1112, t1370, -t991, -t924, -t983, -t992, -t982, t1014, t1372, t1373, t1374, t1371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1142, t1156, -t1144, t1177, -t1165, -t1177, 0, t974, -t950, 0, -t1177, t1144, t1165, t1142, t1156, t1177, t1205, -t1334, t1207, -t1344, t1074, t1073, t1002, -t1074, -t998, t1122, t1234, t1218, t1264, t1265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1168, t1285, -t1154, qJDD(3), -t1284, t1168, -t974, 0, t968, 0, t1168, t1154, t1284, -t1168, t1285, qJDD(3), t1206, t926 - t1399, pkin(4) * t1285, -pkin(4) * t926, -t991, -t924, -t983, -t992, -t982, t1014, -pkin(4) * t955 + t1281, -pkin(4) * t970 - t1282, -pkin(4) * t923 - t1229, -pkin(4) * t791 + t1343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1176, t1163, t1141, t1176, t1157, -t1143, t950, -t968, 0, 0, -t1143, -t1141, -t1157, -t1176, t1163, t1176, -pkin(4) * t1141 + t1333, t1210 + t1366, pkin(4) * t1153 + t1319 + (t1233 - t1325) * t1202 + t1212, pkin(4) * t916 + t1345, -t989, -t922, -t980, t990, -t979, -t1013, -t1362 * t954 - t1237, -t1362 * t969 - t1263, -t1362 * t921 - t1227, -t1362 * t1387 + t1346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1143, -t1141, -t1157, -t1176, t1163, t1176, 0, -t916, t925, 0, -t989, -t922, -t980, t990, -t979, -t1013, -pkin(8) * t954 + t895, -pkin(8) * t969 + t1329, -pkin(8) * t921 - t1387, -pkin(8) * t1387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1177, -t1144, -t1165, -t1142, -t1156, -t1177, t916, 0, t926, 0, -t1074, -t1073, -t1002, t1074, t998, -t1122, t1280, t1226, -t919, -t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1168, -t1154, -t1284, t1168, -t1285, -qJDD(3), -t925, -t926, 0, 0, t991, t924, t983, t992, t982, -t1014, -t1281, t1282, t1229, -t1343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1055, -t997, t1380, -t1110, t1103, t1110, 0, t902, t825, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1111, t1381, t1104, t1219, t1038, t1111, -t902, 0, t826, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1074, t1073, t1002, -t1074, -t998, t1122, -t825, -t826, 0, 0;];
m_new_reg  = t1;
