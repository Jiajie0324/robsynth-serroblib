% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:45
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPPR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPPR3_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:45:25
% EndTime: 2019-03-09 02:45:28
% DurationCPUTime: 1.20s
% Computational Cost: add. (819->120), mult. (1535->206), div. (0->0), fcn. (1116->6), ass. (0->84)
t43 = qJ(4) + pkin(5);
t45 = sin(qJ(3));
t47 = cos(qJ(3));
t92 = -pkin(4) - pkin(8);
t74 = pkin(3) - t92;
t63 = t74 * t47;
t99 = t43 * t45 + t63;
t93 = pkin(3) + pkin(4);
t98 = t93 * t47;
t57 = cos(pkin(9)) * pkin(1) + pkin(2);
t83 = t45 * qJ(4);
t55 = t57 + t83;
t97 = t45 * pkin(5) + t55 + t63;
t33 = t45 * qJD(3);
t77 = t45 * qJD(4);
t64 = -pkin(3) * t33 + t77;
t88 = t43 * t47;
t96 = (t92 * t45 + t88) * qJD(3) + t64;
t29 = sin(pkin(9)) * pkin(1) + pkin(7);
t95 = -qJ(5) + t29;
t44 = sin(qJ(6));
t39 = t44 ^ 2;
t46 = cos(qJ(6));
t41 = t46 ^ 2;
t87 = t39 - t41;
t65 = qJD(6) * t87;
t68 = t29 * t33;
t75 = qJ(5) * qJD(3);
t11 = t47 * qJD(5) - t45 * t75 + t68;
t94 = (-t45 * t74 + t88) * qJD(6) + t11;
t34 = t47 * qJD(3);
t24 = t29 * t34;
t12 = -t45 * qJD(5) - t47 * t75 + t24;
t21 = t95 * t45;
t35 = qJD(6) * t44;
t80 = qJD(6) * t46;
t2 = t21 * t35 - t44 * t96 - (t57 + t99) * t80 - t46 * t12;
t5 = t46 * t21 + t44 * t97;
t3 = -qJD(6) * t5 - t44 * t12 + t46 * t96;
t4 = -t44 * t21 + t46 * t97;
t59 = t4 * t46 + t44 * t5;
t1 = -t59 * qJD(6) - t2 * t46 - t3 * t44;
t49 = 0.2e1 * qJD(4);
t91 = t47 * pkin(3);
t22 = t95 * t47;
t90 = t22 * t11;
t86 = t39 + t41;
t42 = t47 ^ 2;
t85 = t45 ^ 2 - t42;
t84 = qJ(4) * t47;
t82 = qJD(3) * t22;
t81 = qJD(3) * t46;
t79 = qJD(6) * t47;
t78 = t22 * qJD(4);
t76 = t47 * qJD(4);
t73 = -0.2e1 * qJD(3) * t57;
t72 = t44 * t79;
t71 = t46 * t79;
t70 = t44 * t80;
t69 = t45 * t34;
t67 = t46 * t33;
t66 = t86 * t45;
t25 = t85 * qJD(3);
t26 = 0.2e1 * t69;
t62 = t44 * t67;
t61 = t42 * t70;
t58 = -t4 * t44 + t46 * t5;
t52 = t76 + (-t83 - t91) * qJD(3);
t51 = t58 * qJD(6) - t2 * t44 + t3 * t46;
t50 = t99 * qJD(3) - qJD(6) * t22 - t76;
t37 = qJ(4) * t49;
t27 = -0.2e1 * t69;
t23 = -0.2e1 * t25;
t20 = -t55 - t91;
t19 = -t44 * t33 + t71;
t18 = -t44 * t34 - t45 * t80;
t17 = t67 + t72;
t16 = -t46 * t34 + t45 * t35;
t15 = qJD(3) * t66;
t14 = qJ(4) * t34 + t64;
t13 = t55 + t98;
t10 = (-pkin(4) * t45 + t84) * qJD(3) + t64;
t9 = t47 * t65 + t62;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, t23, 0, t27, 0, 0, t45 * t73, t47 * t73, 0, 0, t26, 0, 0.2e1 * t25, 0, 0, t27, 0.2e1 * t14 * t47 + 0.2e1 * t20 * t33, 0, 0.2e1 * t14 * t45 - 0.2e1 * t20 * t34, -0.2e1 * t20 * t14, t27, t23, 0, t26, 0, 0, 0.2e1 * t10 * t45 + 0.2e1 * t13 * t34, -0.2e1 * t10 * t47 + 0.2e1 * t13 * t33, 0.2e1 * t11 * t47 - 0.2e1 * t12 * t45 + 0.2e1 * (-t21 * t47 + t22 * t45) * qJD(3), 0.2e1 * t13 * t10 + 0.2e1 * t21 * t12 - 0.2e1 * t90, -0.2e1 * t41 * t69 - 0.2e1 * t61, 0.2e1 * t42 * t65 + 0.4e1 * t47 * t62, 0.2e1 * t45 * t72 + 0.2e1 * t85 * t81, -0.2e1 * t39 * t69 + 0.2e1 * t61, -0.2e1 * t44 * t25 + 0.2e1 * t45 * t71, t26, 0.2e1 * (t44 * t82 + t3) * t45 + 0.2e1 * (qJD(3) * t4 + t11 * t44 - t22 * t80) * t47, 0.2e1 * (t22 * t81 + t2) * t45 + 0.2e1 * (-qJD(3) * t5 + t11 * t46 + t22 * t35) * t47, -0.2e1 * t59 * t33 + 0.2e1 * t51 * t47, -0.2e1 * t5 * t2 + 0.2e1 * t4 * t3 - 0.2e1 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11 * t45 - t12 * t47 + (t21 * t45 + t22 * t47) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0 (t58 * qJD(3) - t11) * t45 + (-t1 + t82) * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (0.1e1 - t86) * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, -t33, 0, -t24, t68, 0, 0, 0, t34, 0, 0, t33, 0, -t24, t52, -t68, t52 * t29, 0, 0, -t33, 0, t34, 0, -t11, t12, -t76 + (t83 + t98) * qJD(3), -t11 * qJ(4) - t12 * t93 + t78, -t9, t87 * t33 - 0.4e1 * t47 * t70, t18, t9, t16, 0, t50 * t44 - t46 * t94, t44 * t94 + t50 * t46, -t1, -t1 * t74 - t11 * t43 + t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, -t34, 0, 0, 0, 0, 0, 0, 0, 0, -t33, 0, t34, t14, 0, 0, 0, 0, 0, 0, t34, t33, 0, t77 + (-t45 * t93 + t84) * qJD(3), 0, 0, 0, 0, 0, 0, -t16, t18, -t15, t77 + (-t66 * t74 + t88) * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t37, 0, 0, 0, 0, 0, 0, t49, 0, 0, t37, 0.2e1 * t70, -0.2e1 * t65, 0, -0.2e1 * t70, 0, 0, 0.2e1 * qJD(4) * t46 - 0.2e1 * t43 * t35, -0.2e1 * qJD(4) * t44 - 0.2e1 * t43 * t80, 0, t43 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, t24, 0, 0, 0, 0, 0, 0, 0, 0, -t34, t12, 0, 0, 0, 0, 0, 0, t18, t16, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, t33, 0, t10, 0, 0, 0, 0, 0, 0, -t16, t18, -t15, t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, t19, t34, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, -t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, 0, t35, 0, t74 * t80, -t74 * t35, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, t35, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, -t80, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
