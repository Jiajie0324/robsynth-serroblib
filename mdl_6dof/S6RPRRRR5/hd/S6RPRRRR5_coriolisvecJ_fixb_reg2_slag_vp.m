% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:09:50
% EndTime: 2019-03-09 07:10:12
% DurationCPUTime: 10.01s
% Computational Cost: add. (23635->553), mult. (61336->720), div. (0->0), fcn. (49199->10), ass. (0->279)
t261 = cos(qJ(5));
t257 = sin(qJ(6));
t258 = sin(qJ(5));
t340 = t257 * t258;
t388 = cos(qJ(6));
t279 = t388 * t261 - t340;
t254 = qJD(3) + qJD(4);
t256 = cos(pkin(11));
t255 = sin(pkin(11));
t260 = sin(qJ(3));
t339 = t260 * t255;
t390 = cos(qJ(3));
t282 = -t256 * t390 + t339;
t215 = t282 * qJD(1);
t259 = sin(qJ(4));
t389 = cos(qJ(4));
t338 = t260 * t256;
t224 = t255 * t390 + t338;
t397 = t224 * qJD(1);
t281 = t259 * t215 - t389 * t397;
t163 = -t261 * t254 - t258 * t281;
t165 = t254 * t258 - t261 * t281;
t280 = -t257 * t163 + t165 * t388;
t180 = -t389 * t215 - t259 * t397;
t315 = t388 * t258;
t228 = t257 * t261 + t315;
t396 = qJD(5) + qJD(6);
t189 = t396 * t228;
t335 = t228 * t180 - t189;
t305 = t388 * qJD(6);
t308 = qJD(3) * t390;
t239 = t256 * qJD(1) * t308;
t311 = qJD(1) * t339;
t208 = qJD(3) * t311 - t239;
t209 = qJD(3) * t397;
t307 = qJD(4) * t389;
t328 = qJD(4) * t259;
t293 = t389 * t208 + t259 * t209 + t215 * t307 + t328 * t397;
t326 = qJD(5) * t261;
t327 = qJD(5) * t258;
t317 = t254 * t327 - t258 * t293 - t281 * t326;
t325 = qJD(6) * t257;
t84 = -t254 * t326 + t261 * t293 - t281 * t327;
t36 = t163 * t305 + t165 * t325 + t257 * t317 + t388 * t84;
t454 = -t279 * t36 + t280 * t335;
t416 = qJD(5) - t180;
t173 = qJD(6) + t416;
t265 = qJD(4) * t281 + t259 * t208 - t389 * t209;
t400 = t388 * qJD(5) + t305;
t334 = t279 * t180 - t261 * t400 + t340 * t396;
t453 = -t173 * t334 - t228 * t265;
t78 = t258 * t317;
t363 = -t163 * t326 - t78;
t444 = t416 * t258;
t402 = t165 * t444;
t419 = t180 * t261;
t450 = t163 * t419 - t261 * t84 + t363 - t402;
t105 = t388 * t163 + t165 * t257;
t37 = qJD(6) * t280 - t257 * t84 + t388 * t317;
t291 = t105 * t334 - t228 * t37;
t449 = t291 + t454;
t420 = t180 * t258;
t448 = pkin(10) * t420;
t246 = -t256 * pkin(2) - pkin(1);
t232 = qJD(1) * t246 + qJD(2);
t190 = pkin(3) * t215 + t232;
t101 = -pkin(4) * t180 + pkin(9) * t281 + t190;
t384 = pkin(7) + qJ(2);
t233 = t384 * t255;
t225 = qJD(1) * t233;
t234 = t384 * t256;
t226 = qJD(1) * t234;
t187 = -t260 * t225 + t226 * t390;
t162 = -t215 * pkin(8) + t187;
t157 = t389 * t162;
t341 = t226 * t260;
t186 = -t390 * t225 - t341;
t161 = -pkin(8) * t397 + t186;
t158 = qJD(3) * pkin(3) + t161;
t100 = t259 * t158 + t157;
t94 = t254 * pkin(9) + t100;
t54 = t261 * t101 - t258 * t94;
t447 = t416 * t54;
t294 = pkin(3) * t307;
t156 = t259 * t162;
t103 = t161 * t389 - t156;
t135 = -pkin(4) * t281 - pkin(9) * t180;
t387 = pkin(3) * t397;
t111 = t135 + t387;
t60 = -t103 * t258 + t261 * t111;
t446 = -t258 * t294 - t60;
t61 = t261 * t103 + t258 * t111;
t445 = -t261 * t294 + t61;
t352 = t281 * t254;
t443 = t265 - t352;
t289 = t173 * t335 - t265 * t279;
t362 = t105 * t281;
t442 = t289 - t362;
t348 = t180 * t254;
t441 = -t293 - t348;
t351 = t180 ^ 2;
t353 = t281 ^ 2;
t440 = -t351 + t353;
t439 = (t327 - t420) * pkin(5);
t438 = pkin(5) * t281 + pkin(10) * t419;
t322 = qJD(1) * qJD(2);
t304 = t255 * t322;
t309 = qJD(2) * t390;
t242 = t256 * t309;
t332 = qJD(1) * t242 - t225 * t308;
t154 = (-qJD(3) * t226 - t304) * t260 + t332;
t142 = -pkin(8) * t209 + t154;
t273 = t224 * qJD(2);
t269 = qJD(1) * t273;
t155 = -t187 * qJD(3) - t269;
t143 = t208 * pkin(8) + t155;
t264 = -t142 * t389 - t259 * t143 - t158 * t307 + t162 * t328;
t55 = t101 * t258 + t261 * t94;
t386 = t209 * pkin(3);
t68 = -pkin(4) * t265 + pkin(9) * t293 + t386;
t14 = -qJD(5) * t55 + t258 * t264 + t261 * t68;
t403 = t416 * t55 + t14;
t45 = -pkin(10) * t163 + t55;
t318 = t388 * t45;
t44 = -pkin(10) * t165 + t54;
t39 = pkin(5) * t416 + t44;
t18 = t257 * t39 + t318;
t298 = t259 * t142 - t389 * t143;
t50 = qJD(4) * t100 + t298;
t35 = pkin(5) * t317 + t50;
t99 = t158 * t389 - t156;
t93 = -t254 * pkin(4) - t99;
t74 = t163 * pkin(5) + t93;
t437 = -t18 * t281 + t35 * t228 - t334 * t74;
t374 = t257 * t45;
t17 = t388 * t39 - t374;
t436 = t17 * t281 - t279 * t35 - t335 * t74;
t435 = -t105 * t335 - t279 * t37;
t81 = t84 * t258;
t433 = -t81 + (t326 - t419) * t165;
t432 = -t36 * t228 - t280 * t334;
t360 = t280 * t281;
t430 = t360 + t453;
t354 = t165 * t281;
t128 = t258 * t265;
t401 = -t326 * t416 + t128;
t429 = -t416 * t419 + t354 - t401;
t8 = -pkin(5) * t265 + pkin(10) * t84 + t14;
t13 = t101 * t326 + t258 * t68 - t261 * t264 - t327 * t94;
t9 = -pkin(10) * t317 + t13;
t268 = -t257 * t8 - t305 * t39 + t45 * t325 - t388 * t9;
t4 = -qJD(6) * t18 - t257 * t9 + t388 * t8;
t428 = t17 * t334 + t18 * t335 - t4 * t228 - t268 * t279;
t248 = pkin(3) * t259 + pkin(9);
t383 = -pkin(10) - t248;
t300 = qJD(5) * t383;
t426 = t258 * t300 - t445 + t448;
t425 = t261 * t300 + t438 + t446;
t391 = -pkin(10) - pkin(9);
t316 = qJD(5) * t391;
t63 = t258 * t135 + t261 * t99;
t424 = t258 * t316 + t448 - t63;
t62 = t261 * t135 - t258 * t99;
t423 = t261 * t316 + t438 - t62;
t361 = t105 * t280;
t357 = t163 * t281;
t422 = t173 * t281;
t421 = t416 * t281;
t345 = t180 * t281;
t415 = -t105 ^ 2 + t280 ^ 2;
t414 = t105 * t173 - t36;
t413 = t74 * t105 + t268;
t301 = -t50 * t261 + t93 * t327;
t410 = t54 * t281 + t301;
t378 = t50 * t258 + t93 * t326;
t409 = -t55 * t281 + t378;
t408 = -t190 * t180 + t264;
t407 = t190 * t281 - t298;
t404 = t13 - t447;
t102 = t161 * t259 + t157;
t290 = pkin(3) * t328 - t102;
t191 = -t390 * t233 - t260 * t234;
t171 = -pkin(8) * t224 + t191;
t192 = -t260 * t233 + t390 * t234;
t172 = -pkin(8) * t282 + t192;
t121 = t259 * t171 + t172 * t389;
t115 = t261 * t121;
t270 = t389 * t282;
t184 = t224 * t259 + t270;
t276 = t259 * t282;
t185 = t224 * t389 - t276;
t200 = pkin(3) * t282 + t246;
t122 = t184 * pkin(4) - t185 * pkin(9) + t200;
t70 = t258 * t122 + t115;
t130 = t261 * t265;
t399 = t327 * t416 + t130;
t398 = -t258 * t54 + t261 * t55;
t395 = -t74 * t280 + t4;
t394 = t173 * t280 - t37;
t393 = t397 ^ 2;
t392 = qJD(3) ^ 2;
t385 = t261 * pkin(5);
t12 = t13 * t261;
t120 = -t389 * t171 + t259 * t172;
t371 = t50 * t120;
t219 = t383 * t258;
t251 = t261 * pkin(10);
t220 = t261 * t248 + t251;
t182 = t219 * t388 - t257 * t220;
t369 = qJD(6) * t182 + t257 * t425 + t388 * t426;
t183 = t257 * t219 + t220 * t388;
t368 = -qJD(6) * t183 - t257 * t426 + t388 * t425;
t236 = t391 * t258;
t237 = pkin(9) * t261 + t251;
t193 = t236 * t388 - t257 * t237;
t367 = qJD(6) * t193 + t257 * t423 + t388 * t424;
t194 = t257 * t236 + t237 * t388;
t366 = -qJD(6) * t194 - t257 * t424 + t388 * t423;
t364 = t290 + t439;
t92 = t265 * t184;
t274 = qJD(3) * t224;
t140 = t224 * t328 + t254 * t270 + t259 * t274;
t359 = t140 * t258;
t358 = t140 * t261;
t356 = t163 * t258;
t355 = t165 * t163;
t344 = t185 * t258;
t343 = t185 * t261;
t342 = t397 * t215;
t331 = -t233 * t308 + t242;
t330 = t255 ^ 2 + t256 ^ 2;
t329 = qJD(3) * t260;
t324 = t255 * qJD(2);
t312 = t185 * t327;
t147 = -pkin(8) * t274 - t234 * t329 - t260 * t324 + t331;
t275 = qJD(3) * t282;
t263 = pkin(8) * t275 - qJD(2) * t338 + t233 * t329 - t234 * t308 - t255 * t309;
t58 = t147 * t389 + t171 * t307 - t172 * t328 + t259 * t263;
t141 = -qJD(4) * t276 + t224 * t307 - t259 * t275 + t274 * t389;
t271 = pkin(3) * t274;
t73 = t141 * pkin(4) + t140 * pkin(9) + t271;
t302 = -t258 * t58 + t261 * t73;
t299 = t330 * qJD(1) ^ 2;
t69 = -t121 * t258 + t261 * t122;
t249 = -pkin(3) * t389 - pkin(4);
t292 = -t100 + t439;
t83 = t317 * t261;
t288 = t258 * t55 + t261 * t54;
t285 = -t180 * t93 + t248 * t265;
t284 = 0.2e1 * t330 * t322;
t283 = t416 * t420 - t399;
t51 = pkin(5) * t184 - pkin(10) * t343 + t69;
t57 = -pkin(10) * t344 + t70;
t27 = -t257 * t57 + t388 * t51;
t28 = t257 * t51 + t388 * t57;
t278 = t185 * t326 - t359;
t277 = -t312 - t358;
t19 = -t121 * t327 + t122 * t326 + t258 * t73 + t261 * t58;
t266 = -qJD(5) * t288 - t14 * t258 + t12;
t59 = qJD(4) * t121 + t259 * t147 - t389 * t263;
t250 = -pkin(4) - t385;
t235 = t249 - t385;
t212 = t215 ^ 2;
t167 = -qJD(3) * t192 - t273;
t166 = (-qJD(3) * t234 - t324) * t260 + t331;
t138 = t279 * t185;
t137 = t228 * t185;
t89 = pkin(5) * t344 + t120;
t41 = -t140 * t315 - t257 * t312 - t325 * t344 + (-t140 * t257 + t185 * t400) * t261;
t40 = t140 * t279 + t185 * t189;
t38 = pkin(5) * t278 + t59;
t22 = t388 * t44 - t374;
t21 = -t257 * t44 - t318;
t20 = -qJD(5) * t70 + t302;
t11 = -pkin(10) * t278 + t19;
t10 = pkin(10) * t358 + pkin(5) * t141 + (-t115 + (pkin(10) * t185 - t122) * t258) * qJD(5) + t302;
t6 = -qJD(6) * t28 + t10 * t388 - t257 * t11;
t5 = qJD(6) * t27 + t257 * t10 + t11 * t388;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, qJ(2) * t284, -t208 * t224 - t275 * t397, t208 * t282 - t224 * t209 + t215 * t275 - t274 * t397, -t282 * t392, t209 * t282 + t215 * t274, -t224 * t392, 0, t246 * t209 + (t224 * t232 + t167) * qJD(3), -t166 * qJD(3) - t246 * t208 - t232 * t275, -t155 * t224 - t166 * t215 - t167 * t397 - t187 * t274 + t191 * t208 - t192 * t209 + (qJD(3) * t186 - t154) * t282, t154 * t192 + t155 * t191 + t166 * t187 + t167 * t186, t140 * t281 - t185 * t293, -t140 * t180 + t141 * t281 + t184 * t293 + t185 * t265, -t140 * t254, -t141 * t180 - t92, -t141 * t254, 0, t190 * t141 - t180 * t271 + t184 * t386 - t200 * t265 - t59 * t254, -t190 * t140 + t185 * t386 - t200 * t293 - t58 * t254 - t271 * t281, -t100 * t141 - t120 * t293 + t121 * t265 + t99 * t140 + t180 * t58 + t184 * t264 + t50 * t185 - t281 * t59, t100 * t58 - t121 * t264 + t190 * t271 + t200 * t386 - t99 * t59 + t371, t165 * t277 - t343 * t84 (t163 * t261 + t165 * t258) * t140 + (-t83 + t81 + (-t165 * t261 + t356) * qJD(5)) * t185, -t130 * t185 + t141 * t165 - t184 * t84 + t277 * t416, t163 * t278 + t185 * t78, t128 * t185 - t163 * t141 - t184 * t317 - t278 * t416, t141 * t416 - t92, t120 * t317 + t14 * t184 + t54 * t141 + t59 * t163 + t185 * t378 + t20 * t416 - t265 * t69 - t359 * t93, -t120 * t84 - t13 * t184 - t141 * t55 + t165 * t59 - t185 * t301 - t19 * t416 + t265 * t70 - t93 * t358, -t19 * t163 - t70 * t317 - t20 * t165 + t69 * t84 + t288 * t140 + (-qJD(5) * t398 - t13 * t258 - t14 * t261) * t185, t13 * t70 + t14 * t69 + t19 * t55 + t20 * t54 + t59 * t93 + t371, -t138 * t36 - t280 * t40, t105 * t40 + t137 * t36 - t138 * t37 - t280 * t41, -t138 * t265 + t141 * t280 - t173 * t40 - t184 * t36, t105 * t41 + t137 * t37, -t105 * t141 + t137 * t265 - t173 * t41 - t184 * t37, t141 * t173 - t92, t105 * t38 + t137 * t35 + t141 * t17 + t173 * t6 + t184 * t4 - t265 * t27 + t37 * t89 + t41 * t74, t138 * t35 - t141 * t18 - t173 * t5 + t184 * t268 + t265 * t28 + t280 * t38 - t36 * t89 - t40 * t74, -t105 * t5 + t137 * t268 - t138 * t4 + t17 * t40 - t18 * t41 + t27 * t36 - t28 * t37 - t280 * t6, t17 * t6 + t18 * t5 - t268 * t28 + t27 * t4 + t35 * t89 + t38 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, -qJ(2) * t299, 0, 0, 0, 0, 0, 0, 0.2e1 * t209, t239 + (-t215 - t311) * qJD(3), -t212 - t393, t186 * t397 + t187 * t215, 0, 0, 0, 0, 0, 0, -t265 - t352, -t293 + t348, -t351 - t353, -t100 * t180 - t281 * t99 + t386, 0, 0, 0, 0, 0, 0, t283 + t357, -t261 * t416 ^ 2 + t128 + t354 (t163 * t180 + t84) * t261 + t402 + t363, t258 * t404 + t261 * t403 + t281 * t93, 0, 0, 0, 0, 0, 0, t289 + t362, t360 - t453, t291 - t454, t17 * t335 - t18 * t334 - t228 * t268 + t279 * t4 + t281 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, -t212 + t393, t239 + (t215 - t311) * qJD(3), -t342, 0, 0, -t232 * t397 - t269, t260 * t304 + t215 * t232 + (t186 + t341) * qJD(3) - t332, 0, 0, t345, t440, t441, -t345, t443, 0, t180 * t387 + t102 * t254 + (-t157 + (-pkin(3) * t254 - t158) * t259) * qJD(4) + t407, t103 * t254 + (-t254 * t307 + t281 * t397) * pkin(3) + t408, -t100 * t281 + t102 * t281 - t103 * t180 + t99 * t180 + (t259 * t265 + t389 * t293 + (t180 * t389 - t259 * t281) * qJD(4)) * pkin(3), -t100 * t103 + t99 * t102 + (-t389 * t50 - t190 * t397 - t259 * t264 + (t100 * t389 - t259 * t99) * qJD(4)) * pkin(3), t433, t450, t429, t163 * t444 - t83, t283 - t357, t421, t249 * t317 + t285 * t258 + t290 * t163 + (-t248 * t326 + t446) * t416 + t410, -t249 * t84 + t285 * t261 + t290 * t165 + (t248 * t327 + t445) * t416 + t409, t61 * t163 + t60 * t165 + t12 + (-t163 * t294 - t248 * t317 + t54 * t180 + (t165 * t248 - t54) * qJD(5)) * t261 + (t165 * t294 + t55 * t180 - t248 * t84 - t14 + (t163 * t248 - t55) * qJD(5)) * t258, -t93 * t102 + t50 * t249 - t54 * t60 - t55 * t61 + (t259 * t93 + t389 * t398) * qJD(4) * pkin(3) + t266 * t248, t432, t449, t430, t435, t442, t422, t105 * t364 + t173 * t368 - t182 * t265 + t235 * t37 + t436, -t173 * t369 + t183 * t265 - t235 * t36 + t280 * t364 + t437, -t105 * t369 + t182 * t36 - t183 * t37 - t280 * t368 + t428, t17 * t368 + t18 * t369 + t182 * t4 - t183 * t268 + t235 * t35 + t364 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t440, t441, -t345, t443, 0 (-qJD(4) + t254) * t100 + t407, t99 * t254 + t408, 0, 0, t433, t450, t429, t356 * t416 - t83, -t416 * t444 - t130 - t357, t421, -pkin(4) * t317 + pkin(9) * t401 - t100 * t163 - t416 * t62 - t420 * t93 + t410, pkin(4) * t84 + pkin(9) * t399 - t100 * t165 + t416 * t63 - t419 * t93 + t409, t63 * t163 + t62 * t165 + t12 + (-t447 + (qJD(5) * t165 - t317) * pkin(9)) * t261 + ((qJD(5) * t163 - t84) * pkin(9) - t403) * t258, -pkin(4) * t50 + pkin(9) * t266 - t100 * t93 - t54 * t62 - t55 * t63, t432, t449, t430, t435, t442, t422, t105 * t292 + t173 * t366 - t193 * t265 + t250 * t37 + t436, -t173 * t367 + t194 * t265 - t250 * t36 + t280 * t292 + t437, -t105 * t367 + t193 * t36 - t194 * t37 - t280 * t366 + t428, t17 * t366 + t18 * t367 + t193 * t4 - t194 * t268 + t250 * t35 + t292 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, -t163 ^ 2 + t165 ^ 2, t163 * t416 - t84, -t355, t165 * t416 - t317, -t265, -t165 * t93 + t403, t163 * t93 - t404, 0, 0, t361, t415, t414, -t361, t394, -t265, -t21 * t173 + (-t105 * t165 - t173 * t325 - t265 * t388) * pkin(5) + t395, t22 * t173 + (-t165 * t280 - t173 * t305 + t257 * t265) * pkin(5) + t413, t18 * t280 + t22 * t105 - t17 * t105 + t21 * t280 + (t388 * t36 - t257 * t37 + (-t105 * t388 + t257 * t280) * qJD(6)) * pkin(5), -t17 * t21 - t18 * t22 + (t388 * t4 - t165 * t74 - t257 * t268 + (-t17 * t257 + t18 * t388) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t361, t415, t414, -t361, t394, -t265, t18 * t173 + t395, t17 * t173 + t413, 0, 0;];
tauc_reg  = t1;
