% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR5_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:09:58
% EndTime: 2019-03-09 07:10:25
% DurationCPUTime: 14.86s
% Computational Cost: add. (27740->698), mult. (67710->880), div. (0->0), fcn. (54496->18), ass. (0->355)
t324 = cos(qJ(5));
t320 = sin(qJ(6));
t321 = sin(qJ(5));
t441 = t320 * t321;
t506 = cos(qJ(6));
t357 = t506 * t324 - t441;
t315 = qJD(3) + qJD(4);
t318 = cos(pkin(11));
t317 = sin(pkin(11));
t505 = sin(qJ(3));
t410 = t505 * t317;
t508 = cos(qJ(3));
t351 = -t318 * t508 + t410;
t238 = t351 * qJD(1);
t322 = sin(qJ(4));
t507 = cos(qJ(4));
t350 = -t317 * t508 - t318 * t505;
t516 = t350 * qJD(1);
t359 = t322 * t238 + t507 * t516;
t172 = -t324 * t315 - t321 * t359;
t174 = t315 * t321 - t324 * t359;
t358 = -t320 * t172 + t174 * t506;
t310 = qJDD(3) + qJDD(4);
t382 = qJD(1) * t410;
t394 = qJDD(1) * t505;
t395 = qJDD(1) * t508;
t405 = qJD(3) * t508;
t415 = t317 * t395 + (qJD(1) * t405 + t394) * t318;
t197 = qJD(3) * t382 - t415;
t363 = t317 * t394 - t318 * t395;
t536 = qJD(3) * t516;
t198 = t363 - t536;
t403 = qJD(4) * t507;
t432 = qJD(4) * t322;
t384 = t507 * t197 + t322 * t198 + t238 * t403 - t432 * t516;
t430 = qJD(5) * t324;
t431 = qJD(5) * t321;
t418 = t315 * t431 - t321 * t384 - t359 * t430;
t364 = t310 * t324 - t418;
t401 = t506 * qJD(6);
t429 = qJD(6) * t320;
t80 = -t321 * t310 - t315 * t430 + t324 * t384 - t359 * t431;
t36 = t172 * t401 + t174 * t429 - t320 * t364 + t506 * t80;
t190 = -t507 * t238 + t322 * t516;
t413 = t506 * t321;
t257 = t320 * t324 + t413;
t514 = qJD(5) + qJD(6);
t204 = t514 * t257;
t436 = t257 * t190 - t204;
t579 = -t357 * t36 + t358 * t436;
t333 = qJD(4) * t359 + t322 * t197 - t507 * t198;
t106 = qJDD(5) - t333;
t105 = qJDD(6) + t106;
t535 = qJD(5) - t190;
t183 = qJD(6) + t535;
t519 = t506 * qJD(5) + t401;
t435 = t357 * t190 - t324 * t519 + t441 * t514;
t578 = -t257 * t105 + t183 * t435;
t540 = t190 * t324;
t575 = t430 - t540;
t541 = t190 * t321;
t574 = t431 - t541;
t74 = t321 * t364;
t473 = -t172 * t430 + t74;
t567 = t535 * t321;
t523 = t174 * t567;
t573 = t172 * t540 - t324 * t80 + t473 - t523;
t491 = pkin(7) + qJ(2);
t275 = t491 * t317;
t251 = qJD(1) * t275;
t276 = t491 * t318;
t252 = qJD(1) * t276;
t352 = t251 * t505 - t252 * t508;
t427 = qJD(1) * qJD(2);
t511 = qJDD(1) * t491 + t427;
t222 = t511 * t317;
t223 = t511 * t318;
t374 = -t508 * t222 - t223 * t505;
t146 = qJD(3) * t352 + t374;
t102 = qJDD(3) * pkin(3) + t197 * pkin(8) + t146;
t404 = qJD(3) * t505;
t417 = -t505 * t222 + t508 * t223 - t251 * t405;
t145 = -t252 * t404 + t417;
t107 = -t198 * pkin(8) + t145;
t411 = t505 * t252;
t201 = -t508 * t251 - t411;
t170 = pkin(8) * t516 + t201;
t167 = qJD(3) * pkin(3) + t170;
t171 = -t238 * pkin(8) - t352;
t386 = -t322 * t102 - t507 * t107 - t167 * t403 + t171 * t432;
t40 = pkin(9) * t310 - t386;
t297 = t318 * pkin(2) + pkin(1);
t265 = -qJDD(1) * t297 + qJDD(2);
t494 = t198 * pkin(3);
t175 = t265 + t494;
t52 = -pkin(4) * t333 + pkin(9) * t384 + t175;
t51 = t324 * t52;
t166 = t507 * t171;
t116 = t322 * t167 + t166;
t110 = t315 * pkin(9) + t116;
t266 = -qJD(1) * t297 + qJD(2);
t205 = pkin(3) * t238 + t266;
t117 = -pkin(4) * t190 + pkin(9) * t359 + t205;
t60 = t110 * t324 + t117 * t321;
t12 = -qJD(5) * t60 - t321 * t40 + t51;
t485 = t535 * t60;
t572 = t12 + t485;
t121 = t506 * t172 + t174 * t320;
t37 = qJD(6) * t358 - t320 * t80 - t506 * t364;
t379 = t121 * t435 - t257 * t37;
t571 = t379 + t579;
t570 = pkin(10) * t541;
t59 = -t110 * t321 + t324 * t117;
t486 = t535 * t59;
t385 = pkin(3) * t403;
t165 = t322 * t171;
t119 = t170 * t507 - t165;
t144 = -pkin(4) * t359 - pkin(9) * t190;
t127 = -pkin(3) * t516 + t144;
t65 = -t119 * t321 + t324 * t127;
t569 = -t321 * t385 - t65;
t66 = t324 * t119 + t321 * t127;
t568 = -t324 * t385 + t66;
t471 = qJDD(1) * pkin(1);
t323 = sin(qJ(1));
t325 = cos(qJ(1));
t520 = -g(1) * t323 + g(2) * t325;
t366 = -qJDD(2) + t471 - t520;
t461 = t359 * t315;
t566 = t333 - t461;
t377 = t105 * t357 + t183 * t436;
t470 = t121 * t359;
t565 = t377 - t470;
t457 = t190 * t315;
t564 = -t384 - t457;
t460 = t190 ^ 2;
t462 = t359 ^ 2;
t563 = -t460 + t462;
t562 = t574 * pkin(5);
t561 = pkin(5) * t359 + pkin(10) * t540;
t54 = -pkin(10) * t172 + t60;
t419 = t506 * t54;
t53 = -pkin(10) * t174 + t59;
t45 = pkin(5) * t535 + t53;
t18 = t320 * t45 + t419;
t43 = t507 * t102 - t322 * t107 - t167 * t432 - t171 * t403;
t493 = t310 * pkin(4);
t41 = -t43 - t493;
t27 = -pkin(5) * t364 + t41;
t314 = pkin(11) + qJ(3);
t305 = qJ(4) + t314;
t296 = cos(t305);
t316 = qJ(5) + qJ(6);
t306 = sin(t316);
t295 = sin(t305);
t375 = g(1) * t325 + g(2) * t323;
t362 = t375 * t295;
t497 = g(3) * t306;
t115 = t167 * t507 - t165;
t109 = -t315 * pkin(4) - t115;
t84 = t172 * pkin(5) + t109;
t560 = -t18 * t359 + t27 * t257 + t296 * t497 - t306 * t362 - t435 * t84;
t484 = t320 * t54;
t17 = t45 * t506 - t484;
t307 = cos(t316);
t496 = g(3) * t307;
t449 = t295 * t325;
t450 = t295 * t323;
t537 = g(1) * t449 + g(2) * t450;
t559 = t17 * t359 - t27 * t357 - t296 * t496 + t307 * t537 - t436 * t84;
t558 = -t121 * t436 - t357 * t37;
t77 = t80 * t321;
t556 = t174 * t575 - t77;
t555 = -t36 * t257 - t358 * t435;
t468 = t358 * t359;
t553 = t468 - t578;
t463 = t174 * t359;
t96 = t321 * t106;
t552 = t535 * t575 + t463 + t96;
t8 = pkin(5) * t106 + pkin(10) * t80 + t12;
t11 = -t110 * t431 + t117 * t430 + t321 * t52 + t324 * t40;
t9 = pkin(10) * t364 + t11;
t3 = t320 * t8 + t401 * t45 - t54 * t429 + t506 * t9;
t4 = -qJD(6) * t18 - t320 * t9 + t506 * t8;
t289 = g(3) * t295;
t446 = t296 * t325;
t447 = t296 * t323;
t416 = g(1) * t446 + g(2) * t447 + t289;
t551 = t17 * t435 + t18 * t436 - t4 * t257 + t3 * t357 - t416;
t549 = t11 - t486;
t299 = pkin(3) * t322 + pkin(9);
t490 = -pkin(10) - t299;
t396 = qJD(5) * t490;
t548 = t321 * t396 - t568 + t570;
t547 = t324 * t396 + t561 + t569;
t326 = -pkin(10) - pkin(9);
t414 = qJD(5) * t326;
t68 = t324 * t115 + t321 * t144;
t546 = t321 * t414 + t570 - t68;
t67 = -t115 * t321 + t324 * t144;
t545 = t324 * t414 + t561 - t67;
t544 = t109 * t190;
t469 = t121 * t358;
t466 = t172 * t359;
t543 = t183 * t359;
t542 = t535 * t359;
t454 = t190 * t359;
t534 = -t121 ^ 2 + t358 ^ 2;
t533 = t121 * t183 - t36;
t443 = t307 * t323;
t444 = t306 * t325;
t216 = -t296 * t443 + t444;
t442 = t307 * t325;
t445 = t306 * t323;
t218 = t296 * t442 + t445;
t532 = g(1) * t218 - g(2) * t216 + t84 * t121 + t295 * t496 - t3;
t529 = t109 * t431 + t324 * t537 + t59 * t359;
t495 = g(3) * t321;
t528 = t109 * t430 + t296 * t495 + t41 * t321 - t60 * t359;
t527 = -t205 * t190 + t386 + t416;
t498 = g(3) * t296;
t526 = t205 * t359 + t43 - t498 + t537;
t118 = t170 * t322 + t166;
t378 = pkin(3) * t432 - t118;
t206 = -t508 * t275 - t276 * t505;
t181 = pkin(8) * t350 + t206;
t207 = -t505 * t275 + t508 * t276;
t182 = -pkin(8) * t351 + t207;
t135 = t322 * t181 + t182 * t507;
t129 = t324 * t135;
t338 = t507 * t351;
t199 = -t322 * t350 + t338;
t345 = t322 * t351;
t200 = -t350 * t507 - t345;
t219 = pkin(3) * t351 - t297;
t136 = t199 * pkin(4) - t200 * pkin(9) + t219;
t72 = t321 * t136 + t129;
t492 = t324 * pkin(5);
t300 = pkin(4) + t492;
t522 = -t295 * t326 + t296 * t300;
t521 = t296 * pkin(4) + t295 * pkin(9);
t518 = -t321 * t59 + t324 * t60;
t437 = t324 * t325;
t440 = t321 * t323;
t229 = t296 * t440 + t437;
t438 = t323 * t324;
t439 = t321 * t325;
t231 = -t296 * t439 + t438;
t517 = -g(1) * t231 + g(2) * t229;
t515 = qJ(2) * qJDD(1);
t215 = t296 * t445 + t442;
t217 = -t296 * t444 + t443;
t513 = -g(1) * t217 + g(2) * t215 + t295 * t497 - t84 * t358 + t4;
t512 = t183 * t358 - t37;
t510 = t516 ^ 2;
t509 = qJD(3) ^ 2;
t304 = cos(t314);
t294 = pkin(3) * t304;
t255 = t294 + t297;
t241 = t325 * t255;
t500 = g(2) * t241;
t10 = t11 * t324;
t245 = t490 * t321;
t308 = t324 * pkin(10);
t246 = t299 * t324 + t308;
t195 = t245 * t506 - t320 * t246;
t481 = qJD(6) * t195 + t320 * t547 + t506 * t548;
t196 = t320 * t245 + t246 * t506;
t480 = -qJD(6) * t196 - t320 * t548 + t506 * t547;
t278 = t326 * t321;
t279 = pkin(9) * t324 + t308;
t208 = t278 * t506 - t320 * t279;
t478 = qJD(6) * t208 + t320 * t545 + t506 * t546;
t209 = t320 * t278 + t279 * t506;
t477 = -qJD(6) * t209 - t320 * t546 + t506 * t545;
t474 = t378 + t562;
t342 = qJD(3) * t350;
t150 = t315 * t338 - t322 * t342 - t350 * t432;
t467 = t150 * t324;
t465 = t172 * t321;
t464 = t174 * t172;
t453 = t200 * t321;
t452 = t200 * t324;
t451 = t516 * t238;
t97 = t324 * t106;
t312 = t317 ^ 2;
t313 = t318 ^ 2;
t433 = t312 + t313;
t426 = t318 * qJDD(1);
t421 = qJD(5) * pkin(9) * t535;
t409 = t200 * t431;
t408 = -t41 - t498;
t407 = qJD(2) * t508;
t406 = qJD(2) * t505;
t311 = -pkin(8) - t491;
t400 = pkin(5) * t321 - t311;
t176 = -t275 * t405 - t276 * t404 - t317 * t406 + t318 * t407;
t155 = pkin(8) * t342 + t176;
t343 = qJD(3) * t351;
t329 = pkin(8) * t343 + t275 * t404 - t276 * t405 - t317 * t407 - t318 * t406;
t63 = t155 * t507 + t181 * t403 - t182 * t432 + t322 * t329;
t151 = -qJD(4) * t345 - t322 * t343 - t342 * t507 - t350 * t403;
t340 = pkin(3) * t342;
t83 = t151 * pkin(4) + t150 * pkin(9) - t340;
t397 = -t321 * t63 + t324 * t83;
t392 = t433 * qJD(1) ^ 2;
t71 = -t135 * t321 + t324 * t136;
t134 = -t507 * t181 + t182 * t322;
t387 = t10 - t416;
t383 = 0.2e1 * t433;
t301 = -pkin(3) * t507 - pkin(4);
t381 = -t116 + t562;
t380 = -g(1) * t450 + g(2) * t449;
t373 = -pkin(9) * t106 - t544;
t372 = t321 * t60 + t324 * t59;
t369 = -t106 * t299 - t544;
t367 = t295 * t300 + t296 * t326;
t365 = -t535 * t574 + t97;
t56 = pkin(5) * t199 - pkin(10) * t452 + t71;
t62 = -pkin(10) * t453 + t72;
t30 = -t320 * t62 + t506 * t56;
t31 = t320 * t56 + t506 * t62;
t303 = sin(t314);
t361 = t375 * t303;
t356 = -t150 * t321 + t200 * t430;
t355 = -t409 - t467;
t19 = -t135 * t431 + t136 * t430 + t321 * t83 + t324 * t63;
t79 = t364 * t324;
t348 = t366 + t471;
t346 = qJD(5) * t174 + t364;
t344 = -g(3) * t304 + t361;
t339 = t265 + t520;
t336 = t383 * t427 - t375;
t334 = -qJD(5) * t372 - t12 * t321 + t10;
t64 = qJD(4) * t135 + t322 * t155 - t507 * t329;
t332 = -g(1) * (-pkin(4) * t449 + pkin(9) * t446) - g(2) * (-pkin(4) * t450 + pkin(9) * t447);
t277 = t301 - t492;
t235 = t238 ^ 2;
t232 = t296 * t437 + t440;
t230 = -t296 * t438 + t439;
t177 = qJD(2) * t350 - qJD(3) * t207;
t149 = t357 * t200;
t148 = t257 * t200;
t93 = pkin(5) * t453 + t134;
t47 = -t150 * t413 - t320 * t409 - t429 * t453 + (-t150 * t320 + t200 * t519) * t324;
t46 = t150 * t357 + t200 * t204;
t44 = pkin(5) * t356 + t64;
t22 = t506 * t53 - t484;
t21 = -t320 * t53 - t419;
t20 = -qJD(5) * t72 + t397;
t14 = -pkin(10) * t356 + t19;
t13 = pkin(10) * t467 + pkin(5) * t151 + (-t129 + (pkin(10) * t200 - t136) * t321) * qJD(5) + t397;
t6 = -qJD(6) * t31 + t13 * t506 - t320 * t14;
t5 = qJD(6) * t30 + t320 * t13 + t14 * t506;
t1 = [0, 0, 0, 0, 0, qJDD(1), -t520, t375, 0, 0, t312 * qJDD(1), 0.2e1 * t317 * t426, 0, t313 * qJDD(1), 0, 0, t348 * t318, -t348 * t317, t383 * t515 + t336, pkin(1) * t366 + (t433 * t515 + t336) * qJ(2), t197 * t350 + t343 * t516, t197 * t351 + t198 * t350 + t238 * t343 - t342 * t516, -qJDD(3) * t350 - t351 * t509, t198 * t351 - t238 * t342, -qJDD(3) * t351 + t350 * t509, 0, t206 * qJDD(3) - t297 * t198 + t265 * t351 - t520 * t304 + (-t266 * t350 + t177) * qJD(3), -t176 * qJD(3) - t207 * qJDD(3) + t297 * t197 - t265 * t350 - t266 * t343 + t303 * t520, t146 * t350 - t176 * t238 + t177 * t516 + t206 * t197 - t207 * t198 - t352 * t342 - t375 + (qJD(3) * t201 - t145) * t351, t145 * t207 - t352 * t176 + t146 * t206 + t201 * t177 - t265 * t297 - g(1) * (-t297 * t323 + t325 * t491) - g(2) * (t297 * t325 + t323 * t491) t150 * t359 - t200 * t384, -t150 * t190 + t151 * t359 + t199 * t384 + t200 * t333, -t150 * t315 + t200 * t310, -t151 * t190 - t199 * t333, -t151 * t315 - t199 * t310, 0, g(1) * t447 - g(2) * t446 - t134 * t310 + t205 * t151 + t175 * t199 + t190 * t340 - t219 * t333 - t64 * t315, -t135 * t310 - t205 * t150 + t175 * t200 - t219 * t384 - t63 * t315 + t340 * t359 + t380, t115 * t150 - t116 * t151 - t134 * t384 + t135 * t333 + t190 * t63 + t199 * t386 - t43 * t200 - t359 * t64 - t375, -t386 * t135 + t116 * t63 - t43 * t134 - t115 * t64 + t175 * t219 - t205 * t340 - g(1) * (-t255 * t323 - t311 * t325) - g(2) * (-t311 * t323 + t241) t174 * t355 - t452 * t80 (t172 * t324 + t174 * t321) * t150 + (t79 + t77 + (-t174 * t324 + t465) * qJD(5)) * t200, t151 * t174 - t199 * t80 + t200 * t97 + t355 * t535, t172 * t356 - t200 * t74, -t172 * t151 + t199 * t364 - t200 * t96 - t356 * t535, t106 * t199 + t151 * t535, -g(1) * t230 - g(2) * t232 + t71 * t106 + t109 * t356 + t12 * t199 - t134 * t364 + t59 * t151 + t64 * t172 + t20 * t535 + t41 * t453, -g(1) * t229 - g(2) * t231 - t106 * t72 + t109 * t355 - t11 * t199 - t134 * t80 - t151 * t60 + t174 * t64 - t19 * t535 + t41 * t452, -t19 * t172 + t72 * t364 - t20 * t174 + t71 * t80 + t372 * t150 + (-qJD(5) * t518 - t11 * t321 - t12 * t324) * t200 - t380, -t500 + t109 * t64 + t11 * t72 + t12 * t71 + t41 * t134 + t60 * t19 + t59 * t20 + (g(1) * t311 - g(2) * t521) * t325 + (-g(1) * (-t255 - t521) + g(2) * t311) * t323, -t149 * t36 - t358 * t46, t121 * t46 + t148 * t36 - t149 * t37 - t358 * t47, t105 * t149 + t151 * t358 - t183 * t46 - t199 * t36, t121 * t47 + t148 * t37, -t105 * t148 - t121 * t151 - t183 * t47 - t199 * t37, t105 * t199 + t151 * t183, -g(1) * t216 - g(2) * t218 + t105 * t30 + t121 * t44 + t148 * t27 + t151 * t17 + t183 * t6 + t199 * t4 + t37 * t93 + t47 * t84, -g(1) * t215 - g(2) * t217 - t105 * t31 + t149 * t27 - t151 * t18 - t183 * t5 - t199 * t3 + t358 * t44 - t36 * t93 - t46 * t84, -t121 * t5 - t148 * t3 - t149 * t4 + t17 * t46 - t18 * t47 + t30 * t36 - t31 * t37 - t358 * t6 - t380, -t500 + t17 * t6 + t18 * t5 + t27 * t93 + t3 * t31 + t4 * t30 + t84 * t44 + (-g(1) * t400 - g(2) * t522) * t325 + (-g(1) * (-t255 - t522) - g(2) * t400) * t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t317 * qJDD(1), -t392, -qJ(2) * t392 - t366, 0, 0, 0, 0, 0, 0, t363 - 0.2e1 * t536 (-t382 - t238) * qJD(3) + t415, -t235 - t510, -t201 * t516 - t238 * t352 + t339, 0, 0, 0, 0, 0, 0, -t333 - t461, -t384 + t457, -t460 - t462, -t115 * t359 - t116 * t190 + t339 + t494, 0, 0, 0, 0, 0, 0, t365 + t466, -t324 * t535 ^ 2 + t463 - t96 (t172 * t190 + t80) * t324 + t523 + t473, t109 * t359 + t549 * t321 + t324 * t572 + t520, 0, 0, 0, 0, 0, 0, t377 + t470, t468 + t578, t379 - t579, t17 * t436 - t18 * t435 + t257 * t3 + t357 * t4 + t359 * t84 + t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, -t235 + t510 (-t382 + t238) * qJD(3) + t415, t451, -t363, qJDD(3), t266 * t516 + t344 + t374, g(3) * t303 + t266 * t238 + t375 * t304 + (t411 + t201) * qJD(3) - t417, 0, 0, t454, t563, t564, -t454, t566, t310, t118 * t315 + (-t190 * t516 + t310 * t507 - t315 * t432) * pkin(3) + t526, t119 * t315 + (-t310 * t322 - t315 * t403 - t359 * t516) * pkin(3) + t527, t115 * t190 - t116 * t359 + t118 * t359 - t119 * t190 + (t322 * t333 + t507 * t384 + (t190 * t507 - t322 * t359) * qJD(4)) * pkin(3), t115 * t118 - t116 * t119 + (t507 * t43 + t205 * t516 - t322 * t386 + (-t115 * t322 + t116 * t507) * qJD(4) + t344) * pkin(3), t556, t573, t552, t172 * t567 + t79, t365 - t466, t542, t301 * t418 + (-t301 * t310 + t408) * t324 + t369 * t321 + t378 * t172 + (-t299 * t430 + t569) * t535 + t529, -t301 * t80 + t369 * t324 - t321 * t362 + t378 * t174 + (t299 * t431 + t568) * t535 + t528, t66 * t172 + t65 * t174 + (-t172 * t385 + t299 * t346 - t486) * t324 + (t174 * t385 + t60 * t190 - t299 * t80 - t12 + (t172 * t299 - t60) * qJD(5)) * t321 + t387, t41 * t301 - t60 * t66 - t59 * t65 - t109 * t118 - g(3) * (t294 + t521) + (t361 + (t109 * t322 + t507 * t518) * qJD(4)) * pkin(3) + t334 * t299 + t332, t555, t571, t553, t558, t565, t543, t105 * t195 + t121 * t474 + t183 * t480 + t277 * t37 + t559, -t105 * t196 - t183 * t481 - t277 * t36 + t358 * t474 + t560, -t121 * t481 + t195 * t36 - t196 * t37 - t358 * t480 + t551, t3 * t196 + t4 * t195 + t27 * t277 - g(3) * (t294 + t522) + t474 * t84 + t481 * t18 + t480 * t17 + t375 * (pkin(3) * t303 + t367); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, t563, t564, -t454, t566, t310, t116 * t315 + t526, t115 * t315 + t527, 0, 0, t556, t573, t552, t465 * t535 + t79, -t535 * t567 - t466 + t97, t542, -pkin(4) * t418 - t67 * t535 - t116 * t172 + t373 * t321 + (t408 - t421 + t493) * t324 + t529, pkin(4) * t80 - t116 * t174 + t535 * t68 + t373 * t324 + (-t362 + t421) * t321 + t528, t68 * t172 + t67 * t174 + (pkin(9) * t346 - t486) * t324 + ((qJD(5) * t172 - t80) * pkin(9) - t572) * t321 + t387, -t41 * pkin(4) + pkin(9) * t334 - g(3) * t521 - t109 * t116 - t59 * t67 - t60 * t68 + t332, t555, t571, t553, t558, t565, t543, t105 * t208 + t121 * t381 + t183 * t477 - t300 * t37 + t559, -t105 * t209 - t183 * t478 + t300 * t36 + t358 * t381 + t560, -t121 * t478 + t208 * t36 - t209 * t37 - t358 * t477 + t551, -g(3) * t522 + t17 * t477 + t18 * t478 + t4 * t208 + t3 * t209 - t27 * t300 + t367 * t375 + t381 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t464, -t172 ^ 2 + t174 ^ 2, t172 * t535 - t80, -t464, t174 * t535 + t364, t106, -t110 * t430 - t109 * t174 + t485 + t51 + (-qJD(5) * t117 + t289 - t40) * t321 + t517, g(1) * t232 - g(2) * t230 + t109 * t172 + t289 * t324 - t549, 0, 0, t469, t534, t533, -t469, t512, t105, -t21 * t183 + (t105 * t506 - t121 * t174 - t183 * t429) * pkin(5) + t513, t22 * t183 + (-t105 * t320 - t174 * t358 - t183 * t401) * pkin(5) + t532, t18 * t358 + t22 * t121 - t17 * t121 + t21 * t358 + (t506 * t36 - t320 * t37 + (-t121 * t506 + t320 * t358) * qJD(6)) * pkin(5), -t17 * t21 - t18 * t22 + (t3 * t320 + t4 * t506 - t84 * t174 + t295 * t495 + (-t17 * t320 + t18 * t506) * qJD(6) + t517) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, t534, t533, -t469, t512, t105, t18 * t183 + t513, t17 * t183 + t532, 0, 0;];
tau_reg  = t1;
