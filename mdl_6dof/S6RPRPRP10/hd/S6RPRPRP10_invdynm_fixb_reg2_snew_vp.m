% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPRP10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 18:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPRP10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP10_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP10_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRP10_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRP10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRPRP10_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 18:11:45
% EndTime: 2019-05-05 18:12:05
% DurationCPUTime: 21.63s
% Computational Cost: add. (35503->717), mult. (71440->666), div. (0->0), fcn. (38835->6), ass. (0->464)
t1177 = sin(qJ(1));
t1180 = cos(qJ(1));
t1176 = sin(qJ(3));
t1179 = cos(qJ(3));
t1175 = sin(qJ(5));
t1178 = cos(qJ(5));
t1334 = qJD(1) * t1176;
t1124 = qJD(3) * t1175 - t1178 * t1334;
t1333 = qJD(1) * t1179;
t1282 = qJD(3) * t1333;
t1293 = t1176 * qJDD(1);
t1228 = t1282 + t1293;
t1046 = -t1124 * qJD(5) + t1178 * qJDD(3) + t1175 * t1228;
t1161 = qJD(5) + t1333;
t1319 = t1124 * t1161;
t1383 = t1046 - t1319;
t1126 = t1178 * qJD(3) + t1175 * t1334;
t1121 = t1126 ^ 2;
t1370 = t1161 ^ 2;
t1048 = t1370 + t1121;
t1165 = qJD(3) * t1334;
t1292 = t1179 * qJDD(1);
t1132 = -t1165 + t1292;
t1122 = qJDD(5) + t1132;
t1318 = t1126 * t1124;
t1381 = t1122 + t1318;
t1302 = t1175 * t1381;
t958 = t1048 * t1178 + t1302;
t906 = t1176 * t1383 + t1179 * t958;
t1300 = t1178 * t1381;
t969 = t1175 * t1048 - t1300;
t1498 = pkin(6) * (-t1177 * t969 + t1180 * t906);
t1497 = pkin(6) * (t1177 * t906 + t1180 * t969);
t1496 = pkin(2) * t906;
t904 = t1176 * t958 - t1179 * t1383;
t1495 = pkin(7) * t904;
t1494 = pkin(7) * t906;
t1493 = qJ(2) * t904;
t1369 = pkin(1) + pkin(7);
t1492 = t1369 * t904;
t1264 = -t1175 * qJDD(3) + t1178 * t1228;
t1045 = qJD(5) * t1126 - t1264;
t1102 = t1161 * t1126;
t1009 = t1045 - t1102;
t1371 = t1124 ^ 2;
t1094 = t1371 - t1370;
t976 = t1094 * t1175 + t1300;
t910 = t1009 * t1176 + t1179 * t976;
t980 = t1094 * t1178 - t1302;
t1491 = t1177 * t910 - t1180 * t980;
t1489 = t1177 * t980 + t1180 * t910;
t1487 = qJ(2) * t969 - t1369 * t906;
t1382 = t1121 - t1371;
t1384 = t1045 + t1102;
t924 = -t1384 * t1175 + t1178 * t1383;
t897 = -t1176 * t1382 + t1179 * t924;
t1325 = t1383 * t1175;
t926 = t1384 * t1178 + t1325;
t1486 = t1177 * t897 + t1180 * t926;
t1485 = -t1177 * t926 + t1180 * t897;
t1484 = pkin(2) * t969;
t1483 = pkin(4) * t958;
t1482 = pkin(8) * t958;
t1481 = pkin(8) * t969;
t1479 = qJ(4) * t969;
t1368 = -pkin(3) - pkin(8);
t1472 = t1368 * t969;
t1471 = -pkin(3) * t958 - qJ(4) * t1383;
t915 = -t1009 * t1179 + t1176 * t976;
t1095 = t1121 - t1370;
t1378 = -t1318 + t1122;
t1323 = t1378 * t1178;
t1436 = t1175 * t1095 + t1323;
t1377 = t1319 + t1046;
t1026 = t1175 * t1378;
t1437 = -t1095 * t1178 + t1026;
t1458 = t1176 * t1377 - t1179 * t1437;
t1470 = t1177 * t1458 + t1180 * t1436;
t1469 = t1177 * t1436 - t1180 * t1458;
t1376 = -t1370 - t1371;
t1390 = t1175 * t1376 + t1323;
t1432 = t1176 * t1384 - t1179 * t1390;
t1468 = pkin(2) * t1432;
t1467 = pkin(7) * t1432;
t1434 = t1176 * t1390 + t1179 * t1384;
t1466 = pkin(7) * t1434;
t1465 = qJ(2) * t1434;
t1462 = t1369 * t1434;
t898 = t1176 * t924 + t1179 * t1382;
t1286 = t1176 * t1318;
t1305 = t1161 * t1175;
t992 = -t1045 * t1178 + t1124 * t1305;
t937 = t1179 * t992 + t1286;
t1304 = t1161 * t1178;
t1284 = t1124 * t1304;
t994 = t1045 * t1175 + t1284;
t1461 = -t1177 * t937 + t1180 * t994;
t1460 = t1177 * t994 + t1180 * t937;
t1459 = t1176 * t1437 + t1179 * t1377;
t1401 = t1178 * t1376 - t1026;
t1457 = qJ(2) * t1401 - t1369 * t1432;
t1456 = pkin(6) * (t1177 * t1432 + t1180 * t1401);
t1455 = pkin(6) * (t1177 * t1401 - t1180 * t1432);
t1454 = pkin(2) * t1401;
t1031 = -t1371 - t1121;
t1453 = pkin(4) * t1031;
t1452 = pkin(4) * t1390;
t1174 = t1179 ^ 2;
t1182 = qJD(1) ^ 2;
t1168 = t1174 * t1182;
t1181 = qJD(3) ^ 2;
t1155 = -t1168 - t1181;
t1299 = t1179 * t1182;
t1283 = t1176 * t1299;
t1143 = qJDD(3) + t1283;
t1307 = t1143 * t1176;
t1075 = -t1155 * t1179 + t1307;
t1133 = -0.2e1 * t1165 + t1292;
t1451 = pkin(6) * (t1075 * t1180 + t1133 * t1177);
t1450 = pkin(6) * (t1075 * t1177 - t1133 * t1180);
t1173 = t1176 ^ 2;
t1303 = t1173 * t1182;
t1153 = -t1181 - t1303;
t1142 = -qJDD(3) + t1283;
t1308 = t1142 * t1179;
t1074 = -t1153 * t1176 + t1308;
t1131 = 0.2e1 * t1282 + t1293;
t1449 = pkin(6) * (t1074 * t1180 + t1131 * t1177);
t1448 = pkin(6) * (t1074 * t1177 - t1131 * t1180);
t1447 = pkin(8) * t1390;
t1446 = pkin(8) * t1401;
t1444 = qJ(4) * t1031;
t1443 = qJ(4) * t1401;
t1442 = t1031 * t1176;
t1441 = t1031 * t1179;
t1438 = t1368 * t1401;
t1435 = -pkin(3) * t1390 + qJ(4) * t1384;
t1087 = t1126 * t1305;
t1023 = -t1087 + t1284;
t1386 = (t1124 * t1175 + t1126 * t1178) * t1161;
t1389 = t1122 * t1176 + t1179 * t1386;
t1433 = -t1023 * t1180 + t1177 * t1389;
t1431 = -t1023 * t1177 - t1180 * t1389;
t1430 = pkin(2) * t1074;
t1429 = pkin(2) * t1075;
t1428 = pkin(7) * t1074;
t1427 = pkin(7) * t1075;
t1309 = t1142 * t1176;
t1081 = t1153 * t1179 + t1309;
t1426 = pkin(7) * t1081;
t1306 = t1143 * t1179;
t1084 = t1155 * t1176 + t1306;
t1425 = pkin(7) * t1084;
t1424 = qJ(2) * t1081;
t1423 = qJ(2) * t1084;
t1418 = t1383 * qJ(6);
t1415 = t1074 * t1369;
t1414 = t1081 * t1369;
t1413 = t1084 * t1369;
t996 = t1046 * t1175 + t1126 * t1304;
t938 = -t1179 * t996 + t1286;
t997 = t1046 * t1178 - t1087;
t1404 = t1177 * t938 + t1180 * t997;
t1403 = t1177 * t997 - t1180 * t938;
t1285 = t1179 * t1318;
t1402 = t1176 * t992 - t1285;
t1154 = -t1168 + t1181;
t1069 = -t1154 * t1179 + t1309;
t1400 = t1069 * t1177 - t1180 * t1292;
t1399 = t1069 * t1180 + t1177 * t1292;
t1152 = -t1181 + t1303;
t1071 = t1152 * t1176 + t1306;
t1398 = t1071 * t1177 - t1180 * t1293;
t1397 = t1071 * t1180 + t1177 * t1293;
t1392 = qJ(2) * t1133 + t1075 * t1369;
t1391 = t1179 * t1122 - t1176 * t1386;
t1280 = qJ(6) * t1175 + pkin(4);
t1356 = pkin(5) * t1178;
t1147 = t1177 * g(1) - t1180 * g(2);
t1234 = qJDD(2) - t1147;
t1208 = -t1182 * qJ(2) + t1234;
t1197 = -qJDD(1) * t1369 + t1208;
t1057 = t1179 * g(3) - t1176 * t1197;
t1347 = qJ(4) * t1179;
t1358 = pkin(3) * t1176;
t1128 = (-t1347 + t1358) * qJD(1);
t1211 = qJDD(3) * qJ(4) - t1128 * t1334 - t1057;
t1200 = t1181 * pkin(3) - t1211;
t1331 = qJD(4) * qJD(3);
t1290 = -0.2e1 * t1331;
t1016 = t1200 + t1290;
t952 = pkin(4) * t1228 + pkin(8) * t1303 + t1016 - qJD(3) * (pkin(4) * t1333 - qJD(3) * pkin(8));
t1184 = -pkin(5) * t1102 + 0.2e1 * qJD(6) * t1126 + t952;
t1183 = t1184 + t1418;
t1353 = t1045 * pkin(5);
t880 = t1183 - t1353;
t1388 = (t1280 + t1356) * t880;
t1348 = qJ(4) * t1176;
t1357 = pkin(3) * t1179;
t1252 = -t1348 - t1357;
t1148 = t1180 * g(1) + t1177 * g(2);
t1172 = qJDD(1) * qJ(2);
t1236 = t1148 - t1172;
t1385 = t1369 * t1182;
t1205 = t1236 + t1385;
t1379 = -pkin(3) * t1282 - qJ(4) * t1165;
t1187 = (-(2 * qJD(2)) + (-pkin(3) * qJD(3) + 0.2e1 * qJD(4)) * t1179) * qJD(1) - pkin(3) * t1293 + t1205 + t1379;
t1345 = t1132 * qJ(4);
t972 = t1187 + t1345;
t1387 = (pkin(2) - t1252) * t972;
t1332 = qJD(2) * qJD(1);
t1170 = 0.2e1 * t1332;
t1195 = -0.2e1 * qJD(4) * t1333 + t1170 - t1236 - t1345 - t1379;
t1294 = t1173 + t1174;
t933 = t1228 * pkin(3) + t1131 * pkin(8) + t1195 + (-pkin(4) * t1294 - t1369) * t1182;
t1193 = t1179 * t1197;
t1190 = t1128 * t1333 + qJDD(4) - t1193;
t1335 = qJD(1) * qJD(3);
t1337 = t1181 * qJ(4);
t953 = -t1337 + t1132 * pkin(4) + t1368 * qJDD(3) + (pkin(4) * t1335 + pkin(8) * t1299 - g(3)) * t1176 + t1190;
t883 = t1175 * t933 - t1178 * t953;
t884 = t1175 * t953 + t1178 * t933;
t854 = t1175 * t884 - t1178 * t883;
t1352 = t1176 * g(3);
t1056 = t1193 + t1352;
t990 = t1179 * t1056 - t1057 * t1176;
t1137 = t1294 * qJDD(1);
t1140 = t1168 + t1303;
t1380 = pkin(1) * t1137 - qJ(2) * t1140;
t870 = (-t1045 - t1384) * pkin(5) + t1183;
t1375 = t1178 * t870 - t1280 * t1384;
t869 = t1184 - t1353 + 0.2e1 * t1418;
t1374 = t1383 * (pkin(4) + t1356) + t1175 * t869;
t957 = -t1385 + (t1131 + t1228) * pkin(3) + t1195;
t1373 = t1131 * (pkin(2) + t1348) + t1179 * t957;
t954 = (t1133 + t1132) * qJ(4) + t1187;
t1372 = t1133 * (pkin(2) + t1357) + t1176 * t954;
t1367 = pkin(2) * t990;
t1366 = pkin(4) * t854;
t1010 = (-qJD(5) + t1161) * t1126 + t1264;
t1324 = t1377 * t1178;
t925 = t1010 * t1175 - t1324;
t1365 = pkin(4) * t925;
t1364 = pkin(4) * t952;
t1363 = pkin(5) * t880;
t1362 = pkin(8) * t854;
t1291 = -0.2e1 * t1332;
t1089 = t1205 + t1291;
t1361 = pkin(2) * t1089;
t1360 = pkin(2) * t1137;
t1359 = pkin(2) * t1140;
t1310 = t1137 * t1180;
t1355 = pkin(6) * (-t1140 * t1177 + t1310);
t1354 = pkin(7) * t1137;
t1351 = qJDD(1) * pkin(1);
t1330 = qJD(6) * t1161;
t1144 = 0.2e1 * t1330;
t1054 = pkin(5) * t1124 - qJ(6) * t1126;
t1247 = -pkin(5) * t1370 + t1122 * qJ(6) - t1124 * t1054 + t884;
t872 = t1144 + t1247;
t875 = -t1122 * pkin(5) - qJ(6) * t1370 + t1054 * t1126 + qJDD(6) + t883;
t1350 = -pkin(5) * t875 + qJ(6) * t872;
t1346 = qJ(6) * t1178;
t1342 = t1175 * t952;
t1340 = t1176 * t957;
t947 = t1178 * t952;
t1314 = t1133 * t1176;
t1336 = -pkin(3) * t1314 + t1179 * t954;
t1068 = t1131 * t1176;
t1316 = t1131 * t1179;
t1311 = t1137 * t1177;
t1301 = t1176 * t1089;
t1065 = t1179 * t1089;
t1298 = -pkin(5) * t1377 - qJ(6) * t1009;
t1188 = -qJDD(3) * pkin(3) + t1190 - t1352;
t1018 = -t1188 + t1337;
t1297 = pkin(3) * t1018 - qJ(4) * t1016;
t1295 = t1140 - t1181;
t1287 = -t947 + t1482;
t1275 = -qJ(2) + t1347;
t844 = t1175 * t875 + t1178 * t872;
t812 = t1368 * t844 - t1388;
t843 = t1175 * t872 - t1178 * t875;
t1263 = -pkin(4) * t843 - t1350;
t816 = -qJ(4) * t844 - t1263;
t1274 = -t1176 * t812 + t1179 * t816;
t864 = -pkin(5) * t1031 + t872;
t866 = -qJ(6) * t1031 + t875;
t1214 = -t1175 * t866 - t1178 * t864 + t1453;
t999 = t1175 * t1377;
t927 = -t1009 * t1178 + t999;
t829 = t1368 * t927 + t1214;
t923 = -t1009 * t1175 - t1324;
t1256 = -pkin(4) * t923 - t1298;
t859 = -qJ(4) * t927 - t1256;
t1273 = -t1176 * t829 + t1179 * t859;
t855 = t1175 * t883 + t1178 * t884;
t830 = t1368 * t855 - t1364;
t834 = -qJ(4) * t855 + t1366;
t1272 = -t1176 * t830 + t1179 * t834;
t1215 = -t855 + t1453;
t929 = t1010 * t1178 + t999;
t837 = t1368 * t929 + t1215;
t877 = -qJ(4) * t929 + t1365;
t1271 = -t1176 * t837 + t1179 * t877;
t840 = -t1374 - t1472;
t1225 = pkin(5) * t1048 + qJ(6) * t1381 + t1247;
t1204 = -t1225 - t1483;
t846 = t1144 - t1204 + t1479;
t1270 = -t1176 * t840 + t1179 * t846;
t841 = -t1375 + t1438;
t1198 = pkin(5) * t1378 + qJ(6) * t1376 - t875;
t1192 = -t1198 - t1452;
t850 = -t1192 - t1443;
t1269 = -t1176 * t841 + t1179 * t850;
t1239 = t883 - t1452;
t857 = -t1239 - t1443;
t1251 = pkin(4) * t1384 - t947;
t863 = t1251 + t1438;
t1268 = -t1176 * t863 + t1179 * t857;
t1262 = t884 + t1483;
t862 = -t1262 - t1479;
t1250 = pkin(4) * t1383 + t1342;
t867 = t1250 + t1472;
t1267 = -t1176 * t867 + t1179 * t862;
t1103 = t1182 * pkin(1) + t1236 + t1291;
t1104 = -t1208 + t1351;
t1266 = -t1180 * t1103 - t1104 * t1177;
t1265 = -t1147 * t1177 - t1180 * t1148;
t1261 = -pkin(3) * t854 - qJ(4) * t952 - t1362;
t1260 = -pkin(5) * t1325 + t1178 * t869 - t1482;
t1259 = t1177 * t1283;
t1258 = t1180 * t1283;
t930 = -t1016 * t1176 + t1018 * t1179;
t1257 = -pkin(2) * t930 - t1297;
t1138 = qJDD(1) * t1180 - t1177 * t1182;
t1255 = pkin(6) * t1138 + g(3) * t1177;
t1139 = qJDD(1) * t1177 + t1180 * t1182;
t1254 = -pkin(6) * t1139 + g(3) * t1180;
t1253 = -t1342 - t1447;
t1249 = pkin(2) * t1131 - t1065;
t1248 = pkin(2) * t1133 + t1301;
t1246 = t1287 - t1471;
t991 = -t1056 * t1176 - t1057 * t1179;
t1245 = t1103 * t1177 - t1104 * t1180;
t1077 = t1154 * t1176 + t1308;
t1080 = -t1152 * t1179 + t1307;
t1243 = t1147 * t1180 - t1148 * t1177;
t1240 = -t1057 + t1429;
t1238 = -pkin(8) * t923 - t1175 * t864 + t1178 * t866;
t1237 = -pkin(8) * t925 - t854;
t1169 = 0.2e1 * t1331;
t982 = pkin(3) * t1295 + t1169 + t1211;
t989 = qJ(4) * t1295 + t1188;
t1235 = -t1176 * t982 + t1179 * t989 + t1354;
t1233 = t1354 - t990;
t1232 = t1260 + t1471;
t848 = -t1176 * t952 - t1179 * t854;
t1231 = -pkin(2) * t848 - t1261;
t1230 = t1176 * t996 + t1285;
t1229 = t1252 * qJDD(1);
t1227 = -pkin(8) * t843 - t1175 * t1363 + t1346 * t880;
t1226 = t1253 + t1435;
t1224 = pkin(2) * t844 - t1176 * t816 - t1179 * t812;
t1223 = pkin(2) * t927 - t1176 * t859 - t1179 * t829;
t1222 = pkin(2) * t855 - t1176 * t834 - t1179 * t830;
t1221 = pkin(2) * t929 - t1176 * t877 - t1179 * t837;
t1220 = -t1176 * t846 - t1179 * t840 - t1484;
t1219 = -t1176 * t850 - t1179 * t841 + t1454;
t1218 = -t1176 * t857 - t1179 * t863 + t1454;
t1217 = -t1176 * t862 - t1179 * t867 + t1484;
t1216 = -t1246 - t1496;
t1213 = -pkin(3) * t925 + t1237 + t1444;
t1212 = -pkin(3) * t923 + t1238 + t1444;
t1210 = -t1232 + t1496;
t1209 = -t1175 * t870 - t1346 * t1384 - t1447;
t1207 = -pkin(3) * t843 - qJ(4) * t880 + t1227;
t1206 = -t1226 - t1468;
t890 = -t1179 * t925 + t1442;
t1203 = -pkin(2) * t890 - t1213;
t891 = -t1179 * t923 + t1442;
t1202 = -pkin(2) * t891 - t1212;
t1201 = t1209 + t1435;
t835 = -t1176 * t880 - t1179 * t843;
t1199 = -pkin(2) * t835 - t1207;
t1196 = -t1201 - t1468;
t1194 = -pkin(3) * t1155 + qJ(4) * t1143 - t1200;
t1191 = -t1194 - t1429;
t1189 = -t1056 + t1430;
t1186 = pkin(3) * t1142 - qJ(4) * t1153 - t1018;
t1185 = -t1186 - t1430;
t1141 = t1168 - t1303;
t1123 = t1294 * t1335;
t1118 = t1234 - 0.2e1 * t1351;
t1111 = -t1148 + t1170 + 0.2e1 * t1172;
t1093 = qJDD(3) * t1180 - t1123 * t1177;
t1092 = qJDD(3) * t1177 + t1123 * t1180;
t1091 = t1132 * t1176 + t1174 * t1335;
t1090 = t1173 * t1335 - t1179 * t1228;
t1082 = (t1132 - t1165) * t1179;
t1067 = t1229 - t1360;
t1055 = pkin(6) * (-t1140 * t1180 - t1311);
t1052 = -t1314 - t1316;
t1051 = t1133 * t1179 - t1068;
t1044 = t1090 * t1177 - t1258;
t1043 = t1091 * t1177 + t1258;
t1042 = -t1090 * t1180 - t1259;
t1041 = -t1091 * t1180 + t1259;
t1032 = pkin(1) * t1104 - qJ(2) * t1103;
t1020 = t1051 * t1177 + t1141 * t1180;
t1019 = -t1051 * t1180 + t1141 * t1177;
t971 = t972 * t1358;
t966 = t991 + t1359;
t963 = -t1240 + t1423;
t962 = -t1189 - t1424;
t946 = t1249 - t1414;
t945 = t1248 + t1413;
t944 = -t1065 + t1392;
t943 = qJ(2) * t1131 - t1301 + t1415;
t934 = t1233 + t1380;
t931 = -t1016 * t1179 - t1018 * t1176;
t919 = -t1185 + t1424;
t918 = t1169 - t1191 - t1423;
t909 = -qJ(2) * t991 + t1367;
t900 = t1176 * t989 + t1179 * t982 + t1359;
t895 = -t1369 * t991 - t1361;
t894 = -qJ(2) * t1089 - t1369 * t990;
t893 = t1176 * t923 + t1441;
t892 = t1176 * t925 + t1441;
t889 = -t1372 - t1413;
t888 = -t1373 + t1414;
t887 = t1336 - t1392;
t886 = t1131 * t1275 - t1340 - t1415;
t885 = t1235 + t1380;
t861 = -qJ(2) * t931 - t1257;
t852 = -t1369 * t931 - t1387;
t851 = t1275 * t972 - t1369 * t930 - t971;
t849 = t1176 * t854 - t1179 * t952;
t839 = -t1216 + t1493;
t838 = -t1206 - t1465;
t836 = t1176 * t843 - t1179 * t880;
t832 = -t1196 - t1465;
t831 = -t1210 - t1493;
t828 = t1217 + t1492;
t827 = t1267 + t1487;
t826 = -qJ(2) * t892 - t1203;
t825 = t1218 - t1462;
t824 = t1268 + t1457;
t823 = -qJ(2) * t893 - t1202;
t822 = -t1369 * t892 + t1221;
t821 = qJ(2) * t929 - t1369 * t890 + t1271;
t820 = t1219 - t1462;
t819 = t1269 + t1457;
t818 = t1220 - t1492;
t817 = t1270 - t1487;
t814 = -t1369 * t893 + t1223;
t813 = qJ(2) * t927 - t1369 * t891 + t1273;
t811 = -qJ(2) * t849 - t1231;
t810 = -t1369 * t849 + t1222;
t809 = qJ(2) * t855 - t1369 * t848 + t1272;
t808 = -qJ(2) * t836 - t1199;
t807 = -t1369 * t836 + t1224;
t806 = qJ(2) * t844 - t1369 * t835 + t1274;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1138, 0, -t1139, 0, -t1255, -t1254, -t1243, -pkin(6) * t1243, 0, -t1138, t1139, 0, 0, 0, t1245, t1255, t1254, pkin(6) * t1245 + (-pkin(1) * t1177 + qJ(2) * t1180) * g(3), t1043, t1020, -t1400, t1044, t1398, t1093, -t1177 * t946 + t1180 * t962 - t1449, -t1177 * t945 + t1180 * t963 - t1451, -pkin(2) * t1310 + t1177 * t966 - t1355, t1180 * t909 - t1177 * t895 - pkin(6) * (-t1089 * t1177 - t1180 * t990), t1093, t1400, -t1398, t1043, t1020, t1044, t1067 * t1180 + t1177 * t900 - t1355, -t1177 * t888 + t1180 * t919 + t1449, -t1177 * t889 + t1180 * t918 + t1451, t1180 * t861 - t1177 * t852 - pkin(6) * (-t1177 * t972 - t1180 * t930), t1404, -t1486, t1470, t1461, -t1491, t1433, -t1177 * t825 + t1180 * t838 - t1455, -t1177 * t828 + t1180 * t839 + t1498, t1180 * t826 - t1177 * t822 - pkin(6) * (t1177 * t929 - t1180 * t890), t1180 * t811 - t1177 * t810 - pkin(6) * (t1177 * t855 - t1180 * t848), t1404, t1470, t1486, t1433, t1491, t1461, -t1177 * t820 + t1180 * t832 - t1455, t1180 * t823 - t1177 * t814 - pkin(6) * (t1177 * t927 - t1180 * t891), -t1177 * t818 + t1180 * t831 - t1498, t1180 * t808 - t1177 * t807 - pkin(6) * (t1177 * t844 - t1180 * t835); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1139, 0, t1138, 0, t1254, -t1255, t1265, pkin(6) * t1265, 0, -t1139, -t1138, 0, 0, 0, t1266, -t1254, t1255, pkin(6) * t1266 + (pkin(1) * t1180 + qJ(2) * t1177) * g(3), t1041, t1019, t1399, t1042, -t1397, t1092, t1177 * t962 + t1180 * t946 - t1448, t1177 * t963 + t1180 * t945 - t1450, -pkin(2) * t1311 - t1180 * t966 + t1055, t1177 * t909 + t1180 * t895 + pkin(6) * (-t1089 * t1180 + t1177 * t990), t1092, -t1399, t1397, t1041, t1019, t1042, t1067 * t1177 - t1180 * t900 + t1055, t1177 * t919 + t1180 * t888 + t1448, t1177 * t918 + t1180 * t889 + t1450, t1177 * t861 + t1180 * t852 + pkin(6) * (t1177 * t930 - t1180 * t972), t1403, t1485, t1469, t1460, t1489, t1431, t1177 * t838 + t1180 * t825 + t1456, t1177 * t839 + t1180 * t828 + t1497, t1177 * t826 + t1180 * t822 + pkin(6) * (t1177 * t890 + t1180 * t929), t1177 * t811 + t1180 * t810 + pkin(6) * (t1177 * t848 + t1180 * t855), t1403, t1469, -t1485, t1431, -t1489, t1460, t1177 * t832 + t1180 * t820 + t1456, t1177 * t823 + t1180 * t814 + pkin(6) * (t1177 * t891 + t1180 * t927), t1177 * t831 + t1180 * t818 - t1497, t1177 * t808 + t1180 * t807 + pkin(6) * (t1177 * t835 + t1180 * t844); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1147, t1148, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1118, t1111, t1032, t1082, t1052, -t1077, t1068, -t1080, 0, t943, t944, t934, t894, 0, t1077, t1080, t1082, t1052, t1068, t885, t886, t887, t851, t1230, t898, t1459, t1402, t915, t1391, t824, t827, t821, t809, t1230, t1459, -t898, t1391, -t915, t1402, t819, t813, t817, t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1182, 0, 0, -g(3), -t1147, 0, 0, -qJDD(1), t1182, 0, 0, 0, -t1104, 0, g(3), qJ(2) * g(3), t1283, t1141, t1292, -t1283, -t1293, qJDD(3), t962, t963, -t1360, t909, qJDD(3), -t1292, t1293, t1283, t1141, -t1283, t1067, t919, t918, t861, t997, -t926, t1436, t994, t980, -t1023, t838, t839, t826, t811, t997, t1436, t926, -t1023, -t980, t994, t832, t823, t831, t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1182, 0, qJDD(1), 0, g(3), 0, -t1148, 0, 0, -t1182, -qJDD(1), 0, 0, 0, -t1103, -g(3), 0, pkin(1) * g(3), -t1091, -t1051, t1069, -t1090, -t1071, t1123, t946, t945, -t966, t895, t1123, -t1069, t1071, -t1091, -t1051, -t1090, -t900, t888, t889, t852, -t938, t897, -t1458, t937, t910, -t1389, t825, t828, t822, t810, -t938, -t1458, -t897, -t1389, -t910, t937, t820, t814, t818, t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1147, t1148, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1118, t1111, t1032, t1082, t1052, -t1077, t1068, -t1080, 0, t943, t944, t934, t894, 0, t1077, t1080, t1082, t1052, t1068, t885, t886, t887, t851, t1230, t898, t1459, t1402, t915, t1391, t824, t827, t821, t809, t1230, t1459, -t898, t1391, -t915, t1402, t819, t813, t817, t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1104, -t1103, 0, t1082, t1052, -t1077, t1068, -t1080, 0, -t1301 + t1428, -t1065 + t1427, t1233, -pkin(7) * t990, 0, t1077, t1080, t1082, t1052, t1068, t1235, qJ(4) * t1316 - t1340 - t1428, t1336 - t1427, -pkin(7) * t930 + t1347 * t972 - t971, t1230, t898, t1459, t1402, t915, t1391, t1268 - t1467, t1267 - t1494, -pkin(7) * t890 + t1271, -pkin(7) * t848 + t1272, t1230, t1459, -t898, t1391, -t915, t1402, t1269 - t1467, -pkin(7) * t891 + t1273, t1270 + t1494, -pkin(7) * t835 + t1274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1182, 0, 0, 0, t1104, 0, -g(3), 0, -t1283, -t1141, -t1292, t1283, t1293, -qJDD(3), t1189, t1240, t1360, -t1367, -qJDD(3), t1292, -t1293, -t1283, -t1141, t1283, -t1067, t1185, t1191 + t1290, t1257, -t997, t926, -t1436, -t994, -t980, t1023, t1206, t1216, t1203, t1231, -t997, -t1436, -t926, t1023, t980, -t994, t1196, t1202, t1210, t1199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1182, qJDD(1), 0, 0, 0, t1103, g(3), 0, 0, t1091, t1051, -t1069, t1090, t1071, -t1123, -t1249 + t1426, -t1248 - t1425, t966, pkin(7) * t991 + t1361, -t1123, t1069, -t1071, t1091, t1051, t1090, t900, t1373 - t1426, t1372 + t1425, pkin(7) * t931 + t1387, t938, -t897, t1458, -t937, -t910, t1389, -t1218 + t1466, -t1217 - t1495, pkin(7) * t892 - t1221, pkin(7) * t849 - t1222, t938, t1458, t897, t1389, t910, -t937, -t1219 + t1466, pkin(7) * t893 - t1223, -t1220 + t1495, pkin(7) * t836 - t1224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, -t1131, -t1142, t1165, t1152, -t1165, 0, -t1089, -t1056, 0, -t1165, t1142, -t1152, t1132, -t1131, t1165, t989, qJ(4) * t1131, t954, qJ(4) * t972, t1318, t1382, t1377, -t1318, -t1009, t1122, t857, t862, t877, t834, t1318, t1377, -t1382, t1122, t1009, -t1318, t850, t859, t846, t816; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, t1133, t1154, -t1228, t1143, -t1282, t1089, 0, -t1057, 0, -t1282, -t1154, -t1143, t1282, t1133, -t1228, t982, t957, pkin(3) * t1133, pkin(3) * t972, -t996, -t924, -t1437, -t992, -t976, t1386, t863, t867, t837, t830, -t996, -t1437, t924, t1386, t976, -t992, t841, t829, t840, t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1283, t1141, t1292, -t1283, -t1293, qJDD(3), t1056, t1057, 0, 0, qJDD(3), -t1292, t1293, t1283, t1141, -t1283, t1229, t1186, t1169 + t1194, t1297, t997, -t926, t1436, t994, t980, -t1023, t1226, t1246, t1213, t1261, t997, t1436, t926, -t1023, -t980, t994, t1201, t1212, t1232, t1207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1292, t1293, t1283, t1141, -t1283, 0, -t1018, -t1016, 0, t997, -t926, t1436, t994, t980, -t1023, t1253, t1287, t1237, -t1362, t997, t1436, t926, -t1023, -t980, t994, t1209, t1238, t1260, t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1165, -t1142, t1152, -t1132, t1131, -t1165, t1018, 0, -t972, 0, -t1318, -t1382, -t1377, t1318, t1009, -t1122, t1239, t1262, -t1365, -t1366, -t1318, -t1377, t1382, -t1122, -t1009, t1318, t1192, t1256, t1204 - 0.2e1 * t1330, t1263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, t1154, t1143, -t1282, -t1133, t1228, t1016, t972, 0, 0, t996, t924, t1437, t992, t976, -t1386, -t1251 + t1446, -t1250 + t1481, pkin(8) * t929 - t1215, pkin(8) * t855 + t1364, t996, t1437, -t924, -t1386, -t976, t992, t1375 + t1446, pkin(8) * t927 - t1214, t1374 - t1481, pkin(8) * t844 + t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1046, -t1384, t1378, t1319, t1094, -t1319, 0, -t952, t883, 0, t1046, t1378, t1384, -t1319, -t1094, t1319, -qJ(6) * t1384, t866, t869, qJ(6) * t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1102, t1383, -t1095, -t1045, t1381, -t1102, t952, 0, t884, 0, t1102, -t1095, -t1383, -t1102, -t1381, -t1045, t870, t864, pkin(5) * t1383, t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, t1382, t1377, -t1318, -t1009, t1122, -t883, -t884, 0, 0, t1318, t1377, -t1382, t1122, t1009, -t1318, t1198, t1298, t1144 + t1225, t1350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1046, t1378, t1384, -t1319, -t1094, t1319, 0, t875, t880, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, t1377, -t1382, t1122, t1009, -t1318, -t875, 0, t872, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1102, t1095, t1383, t1102, t1381, t1045, -t880, -t872, 0, 0;];
m_new_reg  = t1;
