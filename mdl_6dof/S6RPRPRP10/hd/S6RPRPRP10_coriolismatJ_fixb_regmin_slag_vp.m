% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRP10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRPRP10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:32:35
% EndTime: 2019-03-09 03:32:46
% DurationCPUTime: 4.91s
% Computational Cost: add. (3214->406), mult. (5388->471), div. (0->0), fcn. (4470->4), ass. (0->303)
t219 = cos(qJ(3));
t207 = t219 * qJ(4);
t217 = sin(qJ(3));
t388 = pkin(3) + pkin(8);
t347 = t388 * t217;
t252 = -t347 + t207;
t311 = t217 * qJD(4);
t395 = -pkin(3) * t217 + t207;
t397 = qJD(3) * t395 + t311;
t216 = sin(qJ(5));
t221 = -pkin(1) - pkin(7);
t195 = t219 * t221;
t276 = pkin(4) * t219 - t195;
t260 = t216 * t276;
t218 = cos(qJ(5));
t215 = t219 ^ 2;
t313 = t215 * qJD(4);
t331 = qJD(2) * t219;
t247 = -t313 + t331;
t396 = t218 * t247;
t259 = t218 * t276;
t202 = t218 * qJD(3);
t290 = t217 * t202;
t307 = t219 * qJD(5);
t296 = t216 * t307;
t213 = t217 ^ 2;
t277 = t215 / 0.2e1 + t213 / 0.2e1;
t264 = 0.1e1 / 0.2e1 + t277;
t108 = t264 * t216;
t322 = t108 * qJD(1);
t66 = t290 + t296 + t322;
t200 = t217 * qJD(3);
t181 = t216 * t200;
t294 = t218 * t307;
t111 = t264 * t218;
t321 = t111 * qJD(1);
t394 = -t181 + t294 + t321;
t350 = t218 * qJ(6);
t381 = t216 * pkin(5);
t242 = t381 / 0.2e1 - t350 / 0.2e1;
t158 = pkin(5) * t218 + qJ(6) * t216;
t309 = t218 * qJD(6);
t393 = -qJD(5) * t158 + t309;
t258 = -t350 + t381;
t245 = qJD(5) * t258 - t216 * qJD(6);
t377 = t219 * pkin(5);
t130 = qJ(2) - t252;
t67 = t130 * t216 - t259;
t58 = t67 - t377;
t302 = t67 / 0.2e1 - t58 / 0.2e1;
t349 = t219 * qJ(6);
t68 = t218 * t130 + t260;
t57 = t68 + t349;
t303 = t57 / 0.2e1 - t68 / 0.2e1;
t11 = (t349 / 0.2e1 + t303) * t218 + (-t377 / 0.2e1 - t302) * t216;
t365 = t11 * qJD(1);
t392 = -t365 + t245;
t204 = t219 * qJD(1);
t391 = t204 + qJD(5);
t212 = t216 ^ 2;
t214 = t218 ^ 2;
t170 = t212 - t214;
t297 = qJD(1) * t216 * t218;
t267 = t217 * t297;
t230 = -qJD(3) * t170 + 0.2e1 * t267;
t390 = t216 * t302 - t218 * t303;
t194 = t217 * t221;
t244 = -pkin(4) - t158;
t84 = t217 * t244 + t194;
t389 = t84 / 0.2e1;
t131 = t258 * t217;
t387 = t131 / 0.2e1;
t206 = t217 * qJ(4);
t159 = pkin(3) * t219 + t206;
t139 = pkin(8) * t219 + t159;
t386 = t139 / 0.2e1;
t385 = -t214 / 0.2e1;
t384 = -t216 / 0.2e1;
t383 = t217 / 0.2e1;
t382 = -t218 / 0.2e1;
t379 = t217 * pkin(4);
t378 = t217 * pkin(5);
t109 = t216 * t277 + t384;
t91 = t109 * qJD(2);
t376 = -qJD(5) * t68 + t91;
t375 = t57 * t219;
t113 = t218 * t139;
t149 = t194 - t379;
t137 = t149 * t216;
t335 = t113 + t137;
t59 = -t217 * qJ(6) + t335;
t374 = t59 * t216;
t138 = t149 * t218;
t354 = t216 * t139;
t275 = -t138 + t354;
t62 = t275 + t378;
t373 = t62 * t218;
t372 = t67 * t219;
t371 = t68 * t219;
t223 = t131 * t383 + t219 * t390;
t7 = t223 + t242;
t370 = t7 * qJD(1);
t8 = t131 * t84 - t57 * t67 + t58 * t68;
t369 = t8 * qJD(1);
t368 = t84 * t218;
t96 = -t354 / 0.2e1;
t367 = t138 / 0.2e1 + t96;
t328 = qJD(4) * t219;
t366 = -qJD(2) * t108 + t216 * t328;
t12 = t219 * t242 - t390;
t364 = t12 * qJD(5);
t13 = (t217 * t59 + t375) * t218 + (t217 * t62 + t58 * t219) * t216;
t363 = t13 * qJD(1);
t362 = t131 * t216;
t14 = ((t58 - t67) * t218 + (-t57 + t68) * t216) * t217;
t361 = t14 * qJD(1);
t147 = qJ(4) + t258;
t360 = t147 * t218;
t85 = t219 * t244 + t195;
t255 = t85 * t217 + t84 * t219;
t15 = -t216 * t255 - t57 * t217 + t59 * t219;
t359 = t15 * qJD(1);
t358 = t158 * t216;
t357 = t158 * t218;
t16 = -t58 * t217 + t218 * t255 + t62 * t219;
t356 = t16 * qJD(1);
t355 = t212 * t217;
t353 = t216 * t217;
t352 = t217 * t158;
t351 = t217 * t218;
t348 = t219 * t388;
t23 = (-t275 - t138) * t219 + (t67 + t259) * t217;
t346 = t23 * qJD(1);
t24 = (-t137 + t335) * t219 + (t260 - t68) * t217;
t345 = t24 * qJD(1);
t69 = t84 * t353;
t27 = t131 * t351 + t371 - t69;
t344 = t27 * qJD(1);
t28 = -t372 + (-t362 - t368) * t217;
t343 = t28 * qJD(1);
t30 = t58 * t216 + t57 * t218;
t29 = t30 * t219;
t342 = t29 * qJD(1);
t341 = t30 * qJD(1);
t31 = -t69 + t375;
t340 = t31 * qJD(1);
t32 = -t149 * t351 - t372;
t339 = t32 * qJD(1);
t33 = t149 * t353 - t371;
t338 = t33 * qJD(1);
t148 = qJ(2) - t395;
t81 = t148 * t219 + t159 * t217;
t337 = t81 * qJD(1);
t82 = -t148 * t217 + t159 * t219;
t336 = t82 * qJD(1);
t281 = t351 / 0.2e1;
t283 = t353 / 0.2e1;
t334 = pkin(5) * t281 + qJ(6) * t283;
t333 = t212 + t214;
t171 = t213 - t215;
t332 = qJD(1) * qJ(2);
t330 = qJD(3) * qJ(4);
t329 = qJD(4) * t218;
t326 = qJD(5) * t216;
t325 = qJD(5) * t218;
t324 = qJD(5) * t388;
t145 = t333 * t217;
t104 = t219 * t145;
t323 = t104 * qJD(1);
t143 = t171 * t216;
t320 = t143 * qJD(1);
t319 = t145 * qJD(1);
t146 = t171 * t218;
t318 = t146 * qJD(1);
t317 = t147 * qJD(3);
t316 = t148 * qJD(1);
t315 = t171 * qJD(1);
t314 = t215 * qJD(1);
t199 = t216 * qJD(3);
t201 = t217 * qJD(1);
t310 = t217 * qJD(5);
t308 = t219 * qJD(3);
t203 = t219 * qJD(6);
t306 = -t212 / 0.2e1 + 0.1e1 / 0.2e1;
t304 = -t378 / 0.2e1;
t279 = t348 / 0.2e1;
t155 = t216 * t279;
t301 = t147 * t283 + t155 + t368 / 0.2e1;
t278 = -t348 / 0.2e1;
t284 = -t353 / 0.2e1;
t300 = t147 * t284 + t216 * t278 - t368 / 0.2e1;
t299 = qJ(2) * t201;
t298 = qJ(2) * t204;
t295 = t216 * t324;
t293 = t218 * t324;
t292 = t159 * t316;
t291 = t148 * t204;
t289 = t216 * t325;
t183 = t216 * t202;
t288 = t216 * t309;
t287 = t217 * t308;
t186 = t217 * t204;
t286 = t221 * t308;
t285 = -t357 / 0.2e1;
t282 = t206 / 0.2e1;
t172 = t355 / 0.2e1;
t106 = t172 + (0.1e1 / 0.2e1 + t385) * t217;
t274 = qJD(1) * t106 + t183;
t176 = t214 * t383;
t133 = t176 - t355 / 0.2e1;
t273 = qJD(1) * t133 - t183;
t152 = t213 * t297;
t272 = qJD(3) * t133 + t152;
t184 = t218 * t204;
t271 = qJD(5) * t111 + t184;
t112 = t218 * t277 + t382;
t270 = qJD(5) * t112 - t184;
t268 = -qJD(2) + t328;
t266 = t217 * t183;
t265 = t218 * t186;
t262 = 0.2e1 * t266;
t241 = t374 / 0.2e1 - t373 / 0.2e1;
t4 = (-t84 / 0.2e1 + t241) * t219 + (t57 * t384 - t85 / 0.2e1 + t58 * t218 / 0.2e1) * t217;
t5 = t57 * t59 + t58 * t62 + t84 * t85;
t257 = t5 * qJD(1) - t4 * qJD(2);
t256 = -t373 + t374;
t86 = -t217 * t219 + t104;
t254 = -t4 * qJD(1) - t86 * qJD(2);
t253 = qJ(4) * t281 + t218 * t279;
t232 = t131 * t382 + t216 * t389 + t218 * t278;
t240 = -t360 / 0.2e1 - t358 / 0.2e1;
t98 = -t113 / 0.2e1;
t17 = t98 - t137 / 0.2e1 + (qJ(6) + t240) * t217 + t232;
t80 = -t147 * t216 + t357;
t251 = -qJD(1) * t17 + qJD(3) * t80;
t129 = -t138 / 0.2e1;
t19 = t129 + (t285 + pkin(5)) * t217 + (t387 + t386) * t216 + t301;
t79 = t358 + t360;
t250 = -qJD(1) * t19 - qJD(3) * t79;
t249 = qJD(2) * t112 + qJD(5) * t67;
t248 = t307 + t314;
t243 = -t59 * qJ(6) / 0.2e1 + t62 * pkin(5) / 0.2e1;
t97 = t113 / 0.2e1;
t64 = t97 + t253;
t239 = qJ(4) * t199 - qJD(1) * t64;
t63 = t155 + (t282 + t386) * t216;
t238 = -qJ(4) * t202 - qJD(1) * t63;
t26 = t304 + t300 + t367;
t237 = -qJD(1) * t26 + t147 * t202;
t236 = -qJD(5) * t11 - t203 * t216;
t235 = t391 * t353;
t234 = qJ(6) * t284 + t218 * t304 + t194 / 0.2e1 - t379 / 0.2e1;
t233 = -qJD(2) * t111 + t218 * t328;
t144 = t170 * t213;
t231 = qJD(1) * t144 + t262;
t107 = (t385 + t306) * t217;
t22 = t234 - t241;
t228 = qJD(1) * t22 + qJD(2) * t107 + t317;
t222 = t147 * t387 + t158 * t389 + t388 * t390;
t2 = t222 + t243;
t70 = -t352 / 0.2e1 + t334;
t227 = t2 * qJD(1) - t70 * qJD(2) + t158 * t317;
t225 = (-t219 * t147 + t347) * qJD(3) - t311;
t151 = t212 * t213 + t215;
t224 = qJD(1) * t151 + t266 + t307;
t205 = qJD(4) * t216;
t191 = -t200 / 0.2e1;
t189 = t221 * t200;
t187 = t218 * t310;
t185 = t218 * t308;
t182 = t216 * t308;
t180 = t216 * t204;
t178 = t216 * t313;
t153 = t217 * t288;
t150 = t391 * qJ(6);
t142 = t184 + t325;
t141 = t180 + t326;
t140 = t186 + t310 / 0.2e1;
t126 = t187 + t182;
t125 = t216 * t310 - t185;
t124 = t248 * t218;
t123 = t218 * t314 + t181;
t122 = t248 * t216;
t121 = t216 * t314 - t290;
t120 = qJD(3) * t214 + t267;
t119 = t133 * qJD(5);
t110 = t217 * t306 + t176;
t105 = t383 + t176 + t172;
t100 = t182 - t265;
t99 = t187 + t265;
t78 = qJD(5) * t109 - t180;
t77 = qJD(5) * t108 + t180;
t71 = t352 / 0.2e1 + t334;
t35 = -t137 + t98 + t253;
t34 = t216 * t282 + t138 + t155 + t96;
t25 = t354 / 0.2e1 + t129 + t378 / 0.2e1 + t300;
t21 = t234 + t241;
t20 = t362 / 0.2e1 + (t285 - pkin(5)) * t217 + t301 + t367;
t18 = t97 + t137 / 0.2e1 + (-qJ(6) + t240) * t217 + t232;
t6 = t223 - t242;
t3 = t4 * qJD(3);
t1 = t222 - t243;
t9 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t287, t171 * qJD(3), 0, 0, 0, qJ(2) * t308 + qJD(2) * t217, -qJ(2) * t200 + t331, 0, -t81 * qJD(3) + t217 * t268, -qJD(3) * t82 - t247 (qJD(3) * t159 - t268) * t148, t212 * t287 + t213 * t289, -qJD(5) * t144 + t219 * t262, -qJD(3) * t143 + t217 * t294, -qJD(3) * t146 - t217 * t296, -t287, qJD(3) * t23 + qJD(5) * t33 - t216 * t331 + t178, -t24 * qJD(3) - t32 * qJD(5) - t396, -t16 * qJD(3) - t27 * qJD(5) + t178 + (t213 * t309 - t331) * t216, qJD(2) * t145 + qJD(3) * t13 - qJD(4) * t104 + qJD(5) * t14 + t203 * t351, t15 * qJD(3) + t28 * qJD(5) + t151 * qJD(6) + t396, qJD(2) * t30 + qJD(3) * t5 - qJD(4) * t29 + qJD(5) * t8 + qJD(6) * t31; 0, 0, 0, 0, qJD(1), t332, 0, 0, 0, 0, 0, t201, t204, 0, -t201, -t204, t316, 0, 0, 0, 0, 0, t78, t270, t78, t319, -t270, qJD(5) * t6 - qJD(6) * t109 - t3 + t341; 0, 0, 0, 0, 0, 0, -t186, t315, -t200, -t308, 0, -t189 + t298, -t286 - t299, -t397, t189 - t337, t286 - t336, t221 * t397 + t292, t119 + (t201 * t212 + t183) * t219, -0.2e1 * t217 * t289 + t219 * t230, -t290 - t320, t181 - t318, -t140, t346 + (-t218 * t252 - t260) * qJD(3) - t218 * t311 + t34 * qJD(5), -t345 + (t216 * t252 - t259) * qJD(3) + t216 * t311 + t35 * qJD(5), t20 * qJD(5) + t110 * qJD(6) + t199 * t85 + t218 * t225 - t356, -qJD(3) * t256 + t363 - t364, t18 * qJD(5) - t202 * t85 + t216 * t225 + t153 + t359 (t85 * t147 - t256 * t388) * qJD(3) + t21 * qJD(4) + t1 * qJD(5) + t25 * qJD(6) + t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, t186, t314, t189 - t291, 0, 0, 0, 0, 0, t121, t123, t121, -t323, -t123, qJD(3) * t21 - t342 + t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -t231, t99, -t235, t191, qJD(3) * t34 + t338 + t376, qJD(3) * t35 + t249 - t339, qJD(3) * t20 - t344 + t376, -t12 * qJD(3) + t217 * t393 + t361, qJD(3) * t18 + t203 - t249 + t343, t369 + t6 * qJD(2) + t1 * qJD(3) + t12 * qJD(4) + (-pkin(5) * t68 - qJ(6) * t67) * qJD(5) + t57 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t110 + t152, t99, t224, qJD(3) * t25 + qJD(5) * t57 + t340 - t91; 0, 0, 0, 0, -qJD(1), -t332, 0, 0, 0, 0, 0, -t201, -t204, 0, t201, t204, -t316, 0, 0, 0, 0, 0, t77, t271, t77, -t319, -t271, qJD(5) * t7 - qJD(6) * t108 - t3 - t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, -t308, 0, t200, t308, t397, 0, 0, 0, 0, 0, t126, -t125, t126, -t145 * qJD(3), t125, t147 * t308 + t105 * qJD(4) + t71 * qJD(5) + (-qJD(3) * t333 * t388 - t309) * t217 + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t394, t66, 0, -t394, t71 * qJD(3) + t219 * t245 + t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66; 0, 0, 0, 0, 0, 0, t186, -t315, 0, 0, 0, -t298, t299, 0, t337, t336, -t292, -t186 * t212 + t119, -0.2e1 * t218 * t235, -t296 + t320, -t294 + t318, t140, qJD(5) * t63 - t346, qJD(5) * t64 + t345, qJD(5) * t19 - qJD(6) * t106 + t356, t236 - t363, qJD(5) * t17 + t153 - t359, qJD(4) * t22 + qJD(5) * t2 + qJD(6) * t26 - t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t107 - qJD(5) * t70 - t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t289, t170 * qJD(5), 0, 0, 0, qJ(4) * t325 + t205, -qJ(4) * t326 + t329, qJD(5) * t79 + t205 - t288, 0, -qJD(5) * t80 + qJD(6) * t214 - t329 (qJD(4) - t393) * t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t330, 0, 0, 0, 0, 0, t199, t202, t199, 0, -t202, t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, -t230, -t141, -t142, t201 / 0.2e1, -t238 + t295, -t239 + t293, -t250 + t295, t392, -t251 - t293, t245 * t388 + t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, -t141, t120, -t237 - t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, -t314, t291, 0, 0, 0, 0, 0, -t122, -t124, -t122, t323, t124, -qJD(3) * t22 - t236 + t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t330, 0, 0, 0, 0, 0, -t199, -t202, -t199, 0, t202, -t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141, -t142, -t141, 0, t142, -t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, t231, t100, t186 * t216 + t185, t191, -qJD(3) * t63 - t338 + t366, -qJD(3) * t64 + t233 + t339, -qJD(3) * t19 + t344 + t366, qJD(3) * t11 - t361, -qJD(3) * t17 + t203 - t233 - t343, qJ(6) * t203 - qJD(2) * t7 - qJD(3) * t2 - qJD(4) * t11 - t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, -t321, -t322, 0, t321, qJD(3) * t70 - t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273, t230, t180, t184, -t201 / 0.2e1, t238, t239, t250, t365, t251, -t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t184, t180, 0, -t184, -t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t391, t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t106 - t152, t100, -t224, -qJ(6) * t307 - qJD(3) * t26 - t340 - t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, t180, -t120, t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t391, -t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
