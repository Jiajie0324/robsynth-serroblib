% Calculate inertial parameters regressor of coriolis matrix for
% S6RRRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:13:31
% EndTime: 2019-03-09 18:14:23
% DurationCPUTime: 43.50s
% Computational Cost: add. (32096->1096), mult. (58532->1278), div. (0->0), fcn. (65872->8), ass. (0->778)
t986 = qJD(3) - qJD(5);
t756 = sin(qJ(5));
t758 = sin(qJ(2));
t1200 = cos(qJ(3));
t1238 = -pkin(8) - pkin(7);
t897 = t1238 * t1200;
t699 = t758 * t897;
t757 = sin(qJ(3));
t760 = cos(qJ(2));
t1098 = t757 * t760;
t900 = t1238 * t1098;
t608 = -t699 - t900;
t697 = t1200 * t758 + t1098;
t688 = t697 * pkin(9);
t802 = t688 - t608;
t1255 = t756 * t802;
t1199 = cos(qJ(5));
t965 = t1200 * t760;
t695 = -t757 * t758 + t965;
t1192 = t695 * pkin(9);
t864 = t1238 * t965;
t975 = t757 * t1238;
t899 = t758 * t975;
t610 = -t864 + t899;
t495 = t610 - t1192;
t466 = t1199 * t495;
t1262 = t1255 / 0.2e1 - t466 / 0.2e1;
t898 = t760 * t975;
t609 = t699 + t898;
t494 = t688 + t609;
t1105 = t756 * t494;
t700 = t760 * t897;
t607 = -t700 + t899;
t796 = t607 - t1192;
t464 = t1199 * t796;
t870 = t464 / 0.2e1 - t1105 / 0.2e1;
t176 = t870 - t1262;
t1315 = qJD(2) * t176;
t751 = qJD(2) + qJD(3);
t1314 = qJD(5) - t751;
t779 = t756 * t796;
t963 = t1199 * t494;
t1085 = t779 / 0.2e1 + t963 / 0.2e1;
t1250 = t1199 * t802;
t766 = t756 * t495;
t761 = t766 / 0.2e1 + t1250 / 0.2e1;
t174 = t761 - t1085;
t1031 = qJD(1) * t174;
t173 = t761 + t1085;
t1313 = qJD(2) * t173;
t1312 = qJD(2) * t174;
t320 = t466 - t1255;
t759 = cos(qJ(6));
t1297 = t759 * t320;
t1307 = t1297 / 0.2e1;
t316 = -t464 + t1105;
t1151 = t316 * t759;
t939 = t1151 / 0.2e1;
t1310 = t1307 + t939;
t1247 = t1199 * t695 + t756 * t697;
t1104 = t756 * t695;
t665 = t1199 * t697;
t566 = -t665 + t1104;
t564 = t566 ^ 2;
t985 = -t1247 ^ 2 + t564;
t1304 = t985 * t759;
t1309 = qJD(1) * t1304;
t755 = sin(qJ(6));
t1305 = t985 * t755;
t1308 = qJD(1) * t1305;
t1265 = t1250 + t766;
t1150 = t1265 * t1247;
t852 = -t316 * t566 + t1150;
t1298 = t755 * t320;
t1306 = -t1298 / 0.2e1;
t1282 = t1265 * t755;
t296 = t1282 / 0.2e1;
t297 = -t1282 / 0.2e1;
t1303 = t296 + t297;
t1281 = t1265 * t759;
t299 = t1281 / 0.2e1;
t300 = -t1281 / 0.2e1;
t1302 = t299 + t300;
t1301 = t985 * qJD(1);
t1266 = t759 * t1247;
t1289 = t1266 / 0.2e1;
t1290 = -t1266 / 0.2e1;
t1293 = t1289 + t1290;
t1300 = qJD(6) * t1293;
t1299 = 0.2e1 * t755;
t1197 = t320 * pkin(5);
t1158 = t320 * t566;
t1190 = t757 * pkin(2);
t735 = qJ(4) + t1190;
t1100 = t756 * t735;
t983 = t1200 * pkin(2);
t739 = -t983 - pkin(3);
t865 = -pkin(4) + t739;
t711 = t1199 * t865;
t628 = -t711 + t1100;
t623 = pkin(5) + t628;
t1296 = t320 * t623 / 0.2e1;
t1295 = t1265 * t320;
t1280 = t1262 + t870;
t1294 = qJD(2) * t1280;
t1032 = t1280 * qJD(1);
t753 = t755 ^ 2;
t1292 = -t753 / 0.2e1;
t754 = t759 ^ 2;
t1291 = -t754 / 0.2e1;
t1273 = t759 * t566;
t1288 = -t1273 / 0.2e1;
t920 = t1273 / 0.2e1;
t1137 = t623 * t755;
t602 = t1137 / 0.2e1;
t1205 = -t755 / 0.2e1;
t1099 = t756 * t757;
t888 = t1200 * t1199;
t687 = (t888 + t1099) * pkin(2);
t927 = t687 * t1205;
t1287 = t602 + t927;
t998 = t566 * qJD(5);
t1286 = -t751 * t566 + t998;
t1053 = qJD(1) * t566;
t1263 = t1247 * t1053;
t1285 = t1263 * t753;
t1284 = t1263 * t754;
t1257 = t751 * t1247;
t999 = t1247 * qJD(5);
t1264 = t1257 - t999;
t806 = t756 * t865;
t960 = t1199 * t735;
t629 = t960 + t806;
t1222 = t629 / 0.2e1;
t1279 = t1222 * t1265;
t1203 = t756 / 0.2e1;
t937 = t1265 * t1203;
t967 = t754 * t1199;
t968 = t753 * t1199;
t696 = t967 + t968;
t1072 = t751 * t696;
t1278 = qJD(5) * t696 - t1072;
t1194 = pkin(5) * t566;
t1195 = t1247 * pkin(10);
t364 = -t1194 + t1195;
t1229 = -t566 / 0.2e1;
t1069 = t753 + t754;
t1276 = -t1069 / 0.2e1;
t984 = -t1199 / 0.2e1;
t1230 = t1247 / 0.2e1;
t694 = t697 ^ 2;
t477 = t695 ^ 2 - t694;
t1275 = t751 * t477;
t1274 = t755 * t566;
t624 = -pkin(10) + t629;
t786 = t967 / 0.2e1 + t968 / 0.2e1;
t1272 = t786 * t624;
t964 = t1199 * qJ(4);
t1239 = pkin(3) + pkin(4);
t976 = t756 * t1239;
t706 = t964 - t976;
t702 = -pkin(10) + t706;
t1271 = t786 * t702;
t554 = t1104 / 0.2e1 - t665 / 0.2e1;
t1270 = qJD(6) * t554;
t1269 = t477 * qJD(1);
t1268 = t554 * qJD(1);
t1256 = t751 * t697;
t1267 = t695 * t1256;
t1128 = t697 * qJ(4);
t740 = -pkin(2) * t760 - pkin(1);
t828 = -t740 + t1128;
t427 = t1239 * t695 + t828;
t875 = pkin(5) * t1247 + pkin(10) * t566;
t767 = t427 + t875;
t141 = -t759 * t767 + t1298;
t142 = t755 * t767 + t1297;
t857 = t141 * t759 - t142 * t755;
t801 = t857 * t1247;
t1107 = t755 * t759;
t910 = qJD(2) + t986;
t1248 = t910 * t1107;
t1207 = t753 / 0.2e1;
t913 = t1207 + t1291;
t343 = t913 * t566;
t269 = -t343 * qJD(1) + t1248;
t1252 = (t1291 + t1292) * t628;
t319 = t963 + t779;
t1094 = t759 * t319;
t1198 = pkin(2) * t758;
t581 = t697 * pkin(3) - t695 * qJ(4);
t463 = -pkin(4) * t697 - t581;
t238 = t463 - t364;
t231 = t238 - t1198;
t1116 = t755 * t231;
t146 = t1094 + t1116;
t1171 = t146 * t759;
t1097 = t759 * t231;
t1113 = t755 * t319;
t145 = t1097 - t1113;
t1172 = t145 * t755;
t1087 = t1172 / 0.2e1 - t1171 / 0.2e1;
t722 = t754 - t753;
t360 = t722 * t564;
t1260 = t360 * qJD(1) + 0.2e1 * t1248 * t566;
t1106 = t756 * qJ(4);
t741 = t1199 * t1239;
t705 = t741 + t1106;
t1206 = t754 / 0.2e1;
t912 = t1206 + t1207;
t1259 = t705 * t912;
t1258 = t722 * t910;
t962 = t1199 * t1247;
t527 = -t962 / 0.2e1;
t878 = t1247 * t984;
t1254 = t1229 * t756 + t527 + t878;
t1111 = t755 * t364;
t188 = t1111 - t1281;
t1166 = t188 * t759;
t1093 = t759 * t364;
t187 = t1093 + t1282;
t1167 = t187 * t755;
t817 = t1166 / 0.2e1 - t1167 / 0.2e1;
t971 = t320 * t1199;
t885 = -t971 / 0.2e1;
t1173 = t142 * t759;
t1175 = t141 * t755;
t775 = (t1173 + t1175) * t984;
t974 = t937 - t775;
t16 = t756 * t817 + t885 + t974;
t1228 = -t623 / 0.2e1;
t1240 = -pkin(5) / 0.2e1;
t778 = t786 * pkin(10);
t970 = t629 * t1199;
t884 = t970 / 0.2e1;
t163 = t884 - t1272 + t778 + (t628 * t912 + t1228 + t1240) * t756;
t701 = pkin(5) + t705;
t1218 = -t701 / 0.2e1;
t961 = t1199 * t706;
t877 = t961 / 0.2e1;
t221 = t877 - t1271 + t778 + (t1218 + t1240 + t1259) * t756;
t620 = (-t1199 + t696) * t756;
t601 = t620 * qJD(4);
t1253 = -t16 * qJD(1) + t163 * qJD(2) + t221 * qJD(3) - t601;
t1115 = t755 * t238;
t148 = t1281 + t1115;
t1169 = t148 * t759;
t1096 = t759 * t238;
t147 = t1096 - t1282;
t1170 = t147 * t755;
t818 = t1169 / 0.2e1 - t1170 / 0.2e1;
t788 = (t607 - t610) * t697 + (t608 + t609) * t695;
t1251 = qJD(2) * t788;
t1249 = t788 * qJD(1);
t330 = (-t1247 / 0.2e1 + t1230) * t1107;
t1013 = t330 * qJD(1);
t1033 = qJD(6) * t759;
t727 = t755 * t1033;
t312 = t1013 - t727;
t311 = t1013 + t727;
t1011 = t343 * qJD(6);
t331 = t1290 * t1299;
t1246 = -qJD(5) * t331 - t1011;
t1245 = qJD(5) * t330 + t1011;
t212 = -t1203 * t566 + t1254;
t951 = qJD(1) * t1107;
t99 = -t343 * t910 - t564 * t951;
t1244 = -t330 * t751 - t1011;
t1243 = -t751 * t331 + t1011;
t1241 = pkin(3) / 0.2e1;
t1237 = qJ(4) / 0.2e1;
t1236 = t147 / 0.2e1;
t1235 = -t148 / 0.2e1;
t1233 = -t1265 / 0.2e1;
t1231 = t566 / 0.2e1;
t1226 = -t624 / 0.2e1;
t1225 = t624 / 0.2e1;
t1224 = -t628 / 0.2e1;
t1223 = t628 / 0.2e1;
t734 = t1199 * t1190;
t901 = t756 * t983;
t686 = t901 - t734;
t1221 = t686 / 0.2e1;
t1220 = -t687 / 0.2e1;
t1219 = t687 / 0.2e1;
t1217 = t701 / 0.2e1;
t1216 = -t702 / 0.2e1;
t1215 = t702 / 0.2e1;
t1214 = -t705 / 0.2e1;
t1213 = t705 / 0.2e1;
t1212 = -t706 / 0.2e1;
t1211 = t706 / 0.2e1;
t1210 = t734 / 0.2e1;
t1209 = -t735 / 0.2e1;
t1208 = t739 / 0.2e1;
t1204 = t755 / 0.2e1;
t1202 = -t759 / 0.2e1;
t1201 = t759 / 0.2e1;
t1196 = t316 * pkin(5);
t1193 = t695 * pkin(3);
t1191 = t756 * pkin(5);
t1189 = t16 * qJD(5);
t1188 = pkin(2) * qJD(3);
t1187 = qJD(2) * pkin(2);
t809 = t1220 * t1247 - t1221 * t566;
t762 = (t1217 + t1228) * t1247 + (t1216 + t1225) * t566 - t809;
t1152 = t316 * t755;
t940 = -t1152 / 0.2e1;
t36 = t759 * t762 + t1306 + t940;
t1186 = qJD(1) * t36;
t777 = -(t1226 + t1222) * t566 + (t1223 + t1228) * t1247;
t827 = pkin(5) * t1230 + pkin(10) * t1231;
t764 = t777 + t827;
t39 = t755 * t764 + t1310;
t1185 = qJD(1) * t39;
t42 = (-t320 / 0.2e1 - t316 / 0.2e1) * t755 + t764 * t759;
t1184 = qJD(1) * t42;
t50 = t857 * t697;
t1183 = qJD(1) * t50;
t79 = t1247 * t141 + t1265 * t1274;
t1182 = qJD(1) * t79;
t80 = -t1247 * t142 - t1265 * t1273;
t1181 = qJD(1) * t80;
t1155 = t316 * t1265;
t11 = -t141 * t145 + t142 * t146 + t1155;
t1180 = t11 * qJD(1);
t12 = -t141 * t147 + t142 * t148 - t1295;
t1179 = t12 * qJD(1);
t13 = -(t145 * t759 + t146 * t755) * t566 - t801;
t1178 = t13 * qJD(1);
t14 = -(t147 * t759 + t148 * t755) * t566 - t801;
t1177 = t14 * qJD(1);
t1176 = t141 * t566;
t1174 = t142 * t566;
t18 = -(t187 * t759 + t188 * t755) * t566 + t801;
t1168 = t18 * qJD(1);
t23 = -t817 + t1087;
t1165 = t23 * qJD(1);
t26 = t1247 * t145 + t755 * t852 - t1176;
t1164 = t26 * qJD(1);
t27 = -t1247 * t146 + t759 * t852 - t1174;
t1163 = t27 * qJD(1);
t853 = t1150 + t1158;
t28 = t1247 * t147 + t755 * t853 - t1176;
t1162 = t28 * qJD(1);
t29 = -t1247 * t148 + t759 * t853 - t1174;
t1161 = t29 * qJD(1);
t30 = -(-t141 + t1298) * t566 + (t187 - t1282) * t1247;
t1160 = t30 * qJD(1);
t1153 = t316 * t701;
t1147 = t427 * t566;
t1146 = t427 * t1247;
t45 = -t1247 * t319 - t1158 + t852;
t1144 = t45 * qJD(1);
t436 = t463 - t1198;
t55 = t319 * t320 + t427 * t436 + t1155;
t1143 = t55 * qJD(1);
t550 = -t828 - t1193;
t1142 = t550 * t695;
t1141 = t550 * t697;
t56 = t427 * t463;
t1140 = t56 * qJD(1);
t1139 = t566 * t702;
t1138 = t1247 * t701;
t1136 = t623 * t756;
t1135 = t623 * t759;
t1134 = t624 * t705;
t1133 = t628 * t1247;
t1132 = t629 * t566;
t1131 = t629 * t755;
t810 = t1225 * t1247 - t1228 * t566;
t797 = t231 / 0.2e1 + t810;
t68 = t300 + t1094 / 0.2e1 + t797 * t755;
t1130 = t68 * qJD(1);
t1129 = t687 * t756;
t1127 = t697 * t757;
t70 = t297 + t1113 / 0.2e1 - t797 * t759;
t1126 = t70 * qJD(1);
t1125 = t701 * t755;
t1124 = t701 * t759;
t1123 = t705 * t1247;
t1122 = t706 * t566;
t1121 = t706 * t755;
t1120 = t735 * t697;
t1119 = t739 * t695;
t1109 = t755 * t1247;
t1102 = t756 * t701;
t1101 = t756 * t705;
t95 = (t1223 + t1214) * t1247 + (-t629 / 0.2e1 + t1211) * t566 + t809;
t1088 = t95 * qJD(1);
t304 = t971 / 0.2e1;
t1086 = t937 + t304;
t821 = -t864 / 0.2e1;
t497 = -t700 / 0.2e1 + t821 + t899;
t1080 = -t607 * qJD(2) - t497 * qJD(3);
t1079 = -t497 * qJD(2) - t610 * qJD(3);
t539 = t1069 * t687;
t993 = t696 * qJD(4);
t1078 = -t539 * qJD(3) - t993;
t661 = t686 * qJD(3);
t747 = t756 * qJD(4);
t729 = t759 * t747;
t1075 = t759 * t661 + t729;
t1074 = t661 + t747;
t748 = t1199 * qJD(4);
t1073 = t687 * qJD(3) + t748;
t1046 = qJD(3) * t755;
t1049 = qJD(2) * t755;
t1071 = (t1046 + t1049) * t756;
t1045 = qJD(3) * t759;
t1048 = qJD(2) * t759;
t1070 = (t1045 + t1048) * t756;
t159 = t304 + t885;
t1068 = qJD(1) * t159;
t185 = t1247 * t436 + t1147;
t1067 = qJD(1) * t185;
t186 = -t436 * t566 + t1146;
t1066 = qJD(1) * t186;
t193 = t1247 * t463 + t1147;
t1065 = qJD(1) * t193;
t194 = -t463 * t566 + t1146;
t1064 = qJD(1) * t194;
t558 = t581 + t1198;
t276 = -t558 * t695 + t1141;
t1060 = qJD(1) * t276;
t277 = -t558 * t697 - t1142;
t1059 = qJD(1) * t277;
t306 = -t581 * t695 + t1141;
t1058 = qJD(1) * t306;
t307 = -t581 * t697 - t1142;
t1057 = qJD(1) * t307;
t537 = -t1198 * t695 + t697 * t740;
t1056 = qJD(1) * t537;
t538 = t1198 * t697 + t695 * t740;
t1055 = qJD(1) * t538;
t1054 = qJD(1) * t1247;
t1052 = qJD(1) * t697;
t1051 = qJD(1) * t740;
t1050 = qJD(1) * t760;
t1047 = qJD(3) * t740;
t1044 = qJD(4) * t159;
t879 = t962 / 0.2e1;
t356 = t527 + t879;
t1043 = qJD(4) * t356;
t1042 = qJD(4) * t697;
t1039 = qJD(5) * t629;
t1037 = qJD(5) * t755;
t1036 = qJD(5) * t756;
t1035 = qJD(5) * t759;
t1034 = qJD(6) * t755;
t847 = t607 * t608 + t609 * t610;
t179 = t550 * t558 + t847;
t1030 = t179 * qJD(1);
t182 = t550 * t581;
t1029 = t182 * qJD(1);
t917 = t1231 + t1229;
t211 = -t756 * t917 + t878 + t879;
t197 = t211 * t755;
t1028 = t197 * qJD(1);
t199 = t211 * t759;
t1027 = t199 * qJD(1);
t1024 = t211 * qJD(1);
t236 = t1198 * t740 + t847;
t1022 = t236 * qJD(1);
t876 = t1209 + t1190 / 0.2e1;
t250 = (t1237 + t876) * t697 + (t983 / 0.2e1 + t1208 + t1241) * t695;
t1021 = t250 * qJD(1);
t271 = t1069 * t697 * t566;
t1017 = t271 * qJD(1);
t798 = t1199 * t1229 + t1203 * t1247;
t782 = t697 / 0.2e1 + t798;
t272 = t782 * t755;
t1016 = t272 * qJD(1);
t275 = t782 * t759;
t1015 = t275 * qJD(1);
t482 = t756 * t1288;
t329 = t756 * t920 + t482;
t1014 = t329 * qJD(1);
t344 = t917 * t755;
t1010 = t344 * qJD(1);
t916 = 0.2e1 * t1230;
t345 = t916 * t755;
t337 = t345 * qJD(1);
t512 = -t1109 / 0.2e1;
t347 = 0.2e1 * t512;
t1009 = t347 * qJD(1);
t350 = t917 * t759;
t1008 = t350 * qJD(1);
t352 = 0.2e1 * t1289;
t1007 = t352 * qJD(1);
t354 = t916 * t759;
t340 = t354 * qJD(1);
t1006 = t356 * qJD(1);
t600 = t700 / 0.2e1 + t821;
t997 = t600 * qJD(1);
t584 = t600 * qJD(2);
t996 = t694 * qJD(1);
t678 = t695 * qJD(4);
t992 = t722 * qJD(6);
t723 = -t758 ^ 2 + t760 ^ 2;
t991 = t723 * qJD(1);
t990 = t758 * qJD(2);
t989 = t760 * qJD(2);
t746 = qJD(3) * t983;
t988 = t746 + qJD(4);
t987 = qJD(2) - qJD(5);
t982 = pkin(1) * t758 * qJD(1);
t981 = pkin(1) * t1050;
t980 = t757 * t1188;
t979 = t686 * t1240;
t978 = t1223 + t1240;
t977 = t1213 + t1240;
t973 = t1136 / 0.2e1 + t1272;
t972 = t1102 / 0.2e1 + t1271;
t969 = t686 * t1199;
t966 = t1200 * t695;
t959 = t427 * t1054;
t958 = t427 * t1053;
t957 = t427 * t1052;
t956 = t550 * t1052;
t955 = t753 * t1053;
t954 = t754 * t1053;
t953 = t695 * t1051;
t952 = t697 * t1051;
t950 = t1247 * t1042;
t949 = t755 * t1035;
t948 = qJD(6) * t1247 * t566;
t365 = t566 * t1054;
t946 = t1247 * t1052;
t945 = t566 * t1052;
t944 = t695 * t1052;
t943 = t758 * t989;
t938 = t1265 * t1221;
t935 = t686 * t1204;
t934 = t1129 / 0.2e1;
t930 = -t1274 / 0.2e1;
t929 = t1109 / 0.2e1;
t928 = t1247 * t1205;
t918 = t687 * t1202;
t915 = t1213 + t1223;
t914 = -t711 / 0.2e1 + t741 / 0.2e1;
t911 = qJD(6) * t1199;
t437 = t1069 * t628;
t579 = t1069 * t705;
t909 = pkin(5) * t928 + pkin(10) * t930 + t1307;
t907 = t751 * t755;
t906 = t751 * t759;
t709 = t751 * t756;
t903 = t987 * t629;
t902 = t986 * t706;
t894 = t755 * t946;
t893 = t759 * t946;
t892 = t564 * t727;
t891 = t566 * t727;
t889 = t566 * t951;
t887 = t320 * t984;
t886 = t316 * t984;
t883 = -t969 / 0.2e1;
t882 = t969 / 0.2e1;
t873 = t912 * t687;
t872 = 0.2e1 * t889;
t871 = -0.2e1 * t889;
t868 = t1221 + t1211 + t1222;
t867 = t1220 + t915;
t863 = t1247 * t889;
t862 = pkin(5) * t1290 + pkin(10) * t1288 + t1306;
t816 = t938 - t1296;
t2 = -t1153 / 0.2e1 + (t1216 * t146 + t1219 * t142 + t1225 * t148) * t759 + (t1215 * t145 + t1219 * t141 + t1226 * t147) * t755 + t816;
t237 = t539 * t624 + t623 * t686;
t861 = t2 * qJD(1) + t237 * qJD(2);
t219 = -t437 * t624 + t623 * t629;
t814 = t1279 + t1296;
t4 = t1196 / 0.2e1 + (t188 * t1225 + t142 * t1224 - t146 * pkin(10) / 0.2e1) * t759 + (t187 * t1226 + t141 * t1224 + t145 * pkin(10) / 0.2e1) * t755 + t814;
t860 = t4 * qJD(1) + t219 * qJD(2);
t332 = t624 * t696 + t1136;
t7 = t886 + (t1233 - t1087) * t756 + t775;
t859 = qJD(1) * t7 - qJD(2) * t332;
t17 = -t141 * t187 + t142 * t188 + t1295;
t858 = t17 * qJD(1) + t16 * qJD(4);
t856 = -t1171 + t1172;
t855 = -t1169 + t1170;
t854 = t1166 - t1167;
t849 = t1247 * t623 - t566 * t624;
t848 = t1138 - t1139;
t19 = -t818 - t1087;
t846 = -qJD(1) * t19 + qJD(2) * t539;
t232 = t1069 * t867;
t25 = (-t188 / 0.2e1 + t1235) * t759 + (t187 / 0.2e1 + t1236) * t755;
t845 = t25 * qJD(1) + t232 * qJD(2);
t770 = t1279 + t938 + (t1219 - t1223) * t320;
t815 = t1212 * t319 + t1214 * t316;
t33 = t770 + t815;
t361 = t628 * t686 + t629 * t687;
t844 = t33 * qJD(1) + t361 * qJD(2);
t657 = t1125 / 0.2e1;
t369 = t657 + t1287;
t808 = t1215 * t1247 - t1218 * t566;
t795 = t238 / 0.2e1 + t808;
t77 = -t795 * t759 + t1303;
t843 = -t77 * qJD(1) + t369 * qJD(2);
t605 = t1135 / 0.2e1;
t659 = t1124 / 0.2e1;
t370 = t918 + t659 + t605;
t75 = t795 * t755 + t1302;
t842 = -t75 * qJD(1) + t370 * qJD(2);
t373 = t868 * t755;
t287 = t1298 / 0.2e1;
t776 = -(t1216 + t1211) * t566 + (t1213 + t1218) * t1247;
t763 = t776 + t827;
t54 = t759 * t763 + t1306 + t287;
t841 = qJD(1) * t54 - qJD(2) * t373;
t374 = t868 * t759;
t288 = -t1297 / 0.2e1;
t51 = t755 * t763 + t1307 + t288;
t840 = qJD(1) * t51 + qJD(2) * t374;
t438 = t628 * t756 + t970;
t84 = t886 + t885 + (t319 / 0.2e1 + t1233) * t756;
t839 = -qJD(1) * t84 + qJD(2) * t438;
t31 = -(-t142 + t1297) * t566 + (-t188 - t1281) * t1247;
t838 = t31 * qJD(1) + t329 * qJD(4);
t837 = t566 * (-qJD(6) - t1054);
t836 = -t888 / 0.2e1;
t765 = (t610 * t1200 / 0.2e1 + t608 * t757 / 0.2e1) * pkin(2) + t608 * t1209 + t610 * t1208;
t823 = t607 * t1241 - t609 * qJ(4) / 0.2e1;
t157 = t765 + t823;
t625 = (t1200 * t735 + t739 * t757) * pkin(2);
t835 = t157 * qJD(1) + t625 * qJD(2);
t834 = -qJD(2) * t686 - t1032;
t785 = -t964 / 0.2e1 - t960 / 0.2e1;
t428 = t1210 + t976 + t785;
t833 = t428 * qJD(2);
t429 = pkin(2) * t836 + (t1237 - t876) * t756 + t914;
t832 = t429 * qJD(2);
t831 = -qJD(2) * t687 - t1031;
t496 = -t699 - t898 / 0.2e1 - t900 / 0.2e1;
t830 = -qJD(2) * t496 - qJD(3) * t608;
t829 = qJD(2) * t609 - qJD(3) * t496;
t826 = t1195 / 0.2e1 - t1194 / 0.2e1;
t822 = t972 + t973;
t820 = t1173 / 0.2e1 + t1175 / 0.2e1;
t813 = t1211 * t1265 + t1217 * t320;
t812 = -t1139 / 0.2e1 + t1138 / 0.2e1;
t811 = t1212 * t623 + t1218 * t629;
t34 = t755 * t762 + t1310;
t807 = qJD(1) * t34 - t1048 * t686;
t254 = t365 + t1270;
t805 = -t1263 - t1270;
t804 = qJD(2) * t623 - t748;
t803 = qJD(3) * t701 - t748;
t800 = t364 / 0.2e1 + t826;
t710 = t751 * t1199;
t100 = t811 + t979 + t1069 * (pkin(10) * t1219 + t628 * t1215 + t1134 / 0.2e1);
t333 = -t579 * t702 + t701 * t706;
t6 = -t1197 / 0.2e1 + (pkin(10) * t1235 + t1214 * t142 + t1215 * t188) * t759 + (pkin(10) * t1236 + t1214 * t141 + t1216 * t187) * t755 + t813;
t794 = t6 * qJD(1) - t100 * qJD(2) + t333 * qJD(3);
t150 = -t1129 * t912 + t822 + t882;
t404 = t696 * t702 + t1102;
t9 = -t887 + (t1233 + t818) * t756 + t775;
t793 = qJD(1) * t9 - qJD(2) * t150 - qJD(3) * t404;
t787 = t884 + t877;
t235 = t756 * t867 + t787 + t882;
t580 = t961 + t1101;
t83 = -t887 + t885 + (t1265 / 0.2e1 + t1233) * t756;
t791 = -qJD(1) * t83 + qJD(2) * t235 + qJD(3) * t580;
t784 = t1264 * t566;
t783 = t1286 * t1247;
t774 = -t1036 * t755 + t759 * t911 + t1071;
t773 = -t1035 * t756 - t755 * t911 + t1070;
t603 = -t1137 / 0.2e1;
t394 = t755 * t978 + t603;
t658 = -t1125 / 0.2e1;
t533 = t755 * t977 + t658;
t90 = -t759 * t800 + t1303;
t772 = pkin(5) * t1037 - qJD(1) * t90 + qJD(2) * t394 + qJD(3) * t533;
t606 = -t1135 / 0.2e1;
t395 = t759 * t978 + t606;
t660 = -t1124 / 0.2e1;
t534 = t759 * t977 + t660;
t88 = t755 * t800 + t1302;
t771 = pkin(5) * t1035 - qJD(1) * t88 + qJD(2) * t395 + qJD(3) * t534;
t677 = -qJD(5) * t1199 + t710;
t769 = t778 - t1191 / 0.2e1;
t752 = qJ(4) * qJD(4);
t745 = qJD(2) * t983;
t744 = pkin(5) * t1201;
t743 = pkin(5) * t1204;
t728 = t758 * t1050;
t724 = t755 * t747;
t721 = t751 * qJ(4);
t720 = t735 * qJD(4);
t676 = t709 - t1036;
t586 = t600 * qJD(3);
t575 = t751 * t695;
t549 = t1187 * t757 + t997;
t536 = t1201 * t705 + t659 + t744;
t535 = t1204 * t705 + t657 + t743;
t475 = 0.2e1 * t891;
t474 = -0.2e1 * t891;
t473 = -t1190 * t751 - t997;
t431 = -t976 / 0.2e1 + t806 / 0.2e1 - t901 / 0.2e1 + t1210 - t785;
t430 = -t1106 / 0.2e1 - t1100 / 0.2e1 + (t836 - t1099 / 0.2e1) * pkin(2) - t914;
t397 = t1201 * t628 + t605 + t744;
t396 = t1204 * t628 + t602 + t743;
t376 = t686 * t1202 + (t629 + t706) * t1201;
t375 = -t1121 / 0.2e1 - t1131 / 0.2e1 + t935;
t372 = t660 + t606 + t918;
t371 = t658 + t603 + t927;
t363 = t872 - t1258;
t362 = t871 + t1258;
t355 = 0.2e1 * t920;
t348 = t512 + t929;
t346 = t929 + t928;
t342 = t356 * qJD(5);
t325 = t329 * qJD(5);
t323 = -t340 - t1033;
t322 = t337 + t1034;
t274 = t1201 * t697 - t759 * t798;
t273 = t1205 * t697 + t755 * t798;
t249 = -t1120 / 0.2e1 + t1119 / 0.2e1 - t1128 / 0.2e1 - t1193 / 0.2e1 + (t966 / 0.2e1 + t1127 / 0.2e1) * pkin(2);
t248 = t1314 * t554;
t234 = t756 * t915 + t787 + t883 + t934;
t233 = t873 + t1259 - t1252;
t222 = -t961 / 0.2e1 + t769 + t972 + t1101 * t1276;
t210 = (-t913 + t1292 + t1206) * t1247;
t207 = t211 * qJD(4);
t206 = t212 * qJD(4);
t200 = t1254 * t759 + t482;
t198 = t212 * t755;
t192 = t199 * qJD(4);
t191 = t200 * qJD(4);
t190 = t198 * qJD(4);
t189 = t197 * qJD(4);
t178 = -t1027 - t1071;
t177 = -t1028 + t1070;
t175 = -0.2e1 * t1262;
t170 = -0.2e1 * t761;
t164 = -t970 / 0.2e1 + t769 + t973 + t1252 * t756;
t156 = t765 - t823;
t155 = t159 * qJD(5);
t152 = t774 + t1027;
t151 = -t773 + t1028;
t149 = t1069 * t934 + t822 + t883;
t112 = -t1245 + t1284;
t111 = t1245 + t1285;
t102 = t474 - 0.2e1 * t863;
t101 = pkin(10) * t873 + t1134 * t1276 + t1252 * t702 - t811 + t979;
t97 = -qJD(5) * t344 - qJD(6) * t354 + t1309;
t96 = -qJD(5) * t350 + qJD(6) * t345 - t1308;
t94 = -t1132 / 0.2e1 + t1133 / 0.2e1 - t1122 / 0.2e1 + t1123 / 0.2e1 + t809;
t93 = (-t755 * t906 - t954) * t1247 + t1246;
t92 = (t1107 * t751 - t955) * t1247 - t1246;
t91 = 0.2e1 * t296 + t1093 / 0.2e1 - t826 * t759;
t89 = 0.2e1 * t299 - t1111 / 0.2e1 + t826 * t755;
t86 = t1203 * t319 + t1086 + t886;
t85 = t1086 - t887 + t937;
t82 = qJD(5) * t1274 - t566 * t907 + t1300 - t1309;
t81 = qJD(5) * t355 + qJD(6) * t346 - t566 * t906 + t1308;
t78 = 0.2e1 * t297 + t1096 / 0.2e1 - t808 * t759;
t76 = 0.2e1 * t300 - t1115 / 0.2e1 + t808 * t755;
t72 = qJD(5) * t210 - t1257 * t722 + t474 + 0.2e1 * t863;
t71 = t297 - t1113 / 0.2e1 + t1097 / 0.2e1 - t810 * t759;
t69 = t300 - t1094 / 0.2e1 - t1116 / 0.2e1 + t810 * t755;
t53 = t759 * t776 + t1306 + t862;
t52 = t755 * t776 + t1307 + t909;
t41 = t1152 / 0.2e1 + t777 * t759 + t862;
t40 = -t1151 / 0.2e1 + t777 * t755 + t909;
t37 = t1247 * t918 + t1289 * t623 + t759 * t812 + t287 + t940 + (t624 + t686) * t1288;
t35 = t1247 * t1287 - t566 * t935 + t624 * t930 + t755 * t812 + t288 + t939;
t32 = t770 - t815;
t24 = -t817 + t818;
t22 = -t817 - t1087;
t20 = -t818 + t1087;
t10 = t756 * t818 - t887 + t974;
t8 = -t1087 * t756 + t886 + t974;
t5 = t1197 / 0.2e1 - t820 * t705 + t817 * t702 + t813 + t818 * pkin(10);
t3 = -t1196 / 0.2e1 - t820 * t628 + t817 * t624 + t814 - t1087 * pkin(10);
t1 = t1153 / 0.2e1 + t820 * t687 + t818 * t624 + t816 - t1087 * t702;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t943, t723 * qJD(2), 0, -t943, 0, 0, -pkin(1) * t990, -pkin(1) * t989, 0, 0, t1267, t1275, 0, -t1267, 0, 0, qJD(2) * t537 + t1047 * t697, qJD(2) * t538 + t1047 * t695, t1251, qJD(2) * t236, t1267, 0, -t1275, 0, 0, -t1267, qJD(2) * t276 + qJD(3) * t306 + t678 * t697, t1251, qJD(2) * t277 + qJD(3) * t307 + qJD(4) * t694, qJD(2) * t179 + qJD(3) * t182 - t1042 * t550, -t784, -t1314 * t985, 0, -t783, 0, 0, qJD(2) * t185 + qJD(3) * t193 - t427 * t998 + t950, qJD(2) * t186 + qJD(3) * t194 - t1042 * t566 - t427 * t999, qJD(2) * t45, qJD(2) * t55 + qJD(3) * t56 + t1042 * t427, -t754 * t784 - t892, t1264 * t1273 * t1299 - qJD(6) * t360, t1304 * t1314 + t755 * t948, -t753 * t784 + t892, -t1305 * t1314 + t759 * t948, -t783, qJD(2) * t26 + qJD(3) * t28 + qJD(5) * t30 + qJD(6) * t80 + t759 * t950, qJD(2) * t27 + qJD(3) * t29 + qJD(5) * t31 + qJD(6) * t79 - t755 * t950, -qJD(2) * t13 - qJD(3) * t14 + qJD(4) * t271 - qJD(5) * t18, qJD(2) * t11 + qJD(3) * t12 - qJD(4) * t50 + qJD(5) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t728, t991, t989, -t728, -t990, 0, -pkin(7) * t989 - t982, pkin(7) * t990 - t981, 0, 0, t944, t1269, t575, -t944, -t1256, 0, t1056 + t1080, -t829 + t1055, t1249 + (-t966 - t1127) * t1187, t1022 + (-t1200 * t607 + t609 * t757) * t1187, t944, t575, -t1269, 0, t1256, -t944, t1060 + t1080, t1249 + (t1119 - t1120) * qJD(2) + t249 * qJD(3) + t678, t829 + t1059, t1030 + (t607 * t739 + t609 * t735) * qJD(2) + t156 * qJD(3) + t497 * qJD(4), -t1263, t1301, -t1264, t365, -t1286, 0, qJD(2) * t316 - t176 * t986 + t1067, qJD(2) * t319 + t173 * t986 + t1066, t1144 + (-t1132 + t1133) * qJD(2) + t94 * qJD(3) + t206, t1143 + (t316 * t628 + t319 * t629) * qJD(2) + t32 * qJD(3) + t86 * qJD(4), t93, t72, t82, t92, t81, t254, t1164 + (t755 * t849 + t1151) * qJD(2) + t35 * qJD(3) + t190 + t40 * qJD(5) + t71 * qJD(6), t1163 + (t759 * t849 - t1152) * qJD(2) + t37 * qJD(3) + t191 + t41 * qJD(5) + t69 * qJD(6), qJD(2) * t856 + t20 * qJD(3) + t22 * qJD(5) - t1178, t1180 + (t316 * t623 - t624 * t856) * qJD(2) + t1 * qJD(3) + t8 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t944, t1269, t575, -t944, -t1256, 0, t952 + t1079, -t830 + t953, 0, 0, t944, t575, -t1269, 0, t1256, -t944, t1058 + t1079, t249 * qJD(2) + (-t1128 - t1193) * qJD(3) + t678, t830 + t1057, t1029 + t156 * qJD(2) + (-pkin(3) * t610 - qJ(4) * t608) * qJD(3) + t610 * qJD(4), -t1263, t1301, -t1264, t365, -t1286, 0, -qJD(3) * t320 + qJD(5) * t175 + t1065 - t1315, qJD(3) * t1265 + qJD(5) * t170 + t1064 + t1313, t94 * qJD(2) + (-t1122 + t1123) * qJD(3) + t206, t1140 + t32 * qJD(2) + (t1265 * t706 - t320 * t705) * qJD(3) + t85 * qJD(4), t93, t72, t82, t92, t81, t254, t1162 + t35 * qJD(2) + (t755 * t848 - t1297) * qJD(3) + t190 + t52 * qJD(5) + t78 * qJD(6), t1161 + t37 * qJD(2) + (t759 * t848 + t1298) * qJD(3) + t191 + t53 * qJD(5) + t76 * qJD(6), t20 * qJD(2) + qJD(3) * t855 + t24 * qJD(5) - t1177, t1179 + t1 * qJD(2) + (-t320 * t701 - t702 * t855) * qJD(3) + t10 * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t944, t575, t996, -t956 - t1079, 0, 0, 0, 0, 0, 0, t946, -t945, t212 * t751 + t342, qJD(2) * t86 + qJD(3) * t85 + t155 + t957, 0, 0, 0, 0, 0, 0, qJD(6) * t274 + t198 * t751 + t893, qJD(6) * t273 + t200 * t751 + t325 - t894, t1017, qJD(2) * t8 + qJD(3) * t10 - t1183 + t1189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, -t1301, t1264, -t1263, t1286, 0, qJD(3) * t175 - qJD(5) * t320 + t1315 - t958, qJD(3) * t170 + qJD(5) * t1265 - t1313 - t959, t1043, t1044 (-t949 + t954) * t1247 + t1243, t475 + t751 * t210 + (-qJD(5) * t722 + t871) * t1247, t1274 * t751 - t755 * t998 + t1300 + t1309 (t949 + t955) * t1247 - t1243, qJD(6) * t348 + t355 * t751 - t759 * t998 - t1308, t805, t1160 + t40 * qJD(2) + t52 * qJD(3) + (t755 * t875 - t1297) * qJD(5) + t91 * qJD(6), t41 * qJD(2) + t53 * qJD(3) + (t759 * t875 + t1298) * qJD(5) + t89 * qJD(6) + t838, t22 * qJD(2) + t24 * qJD(3) + qJD(5) * t854 - t1168, t3 * qJD(2) + t5 * qJD(3) + (pkin(10) * t854 - t1197) * qJD(5) + t858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, -t1260, -t755 * t837 + (qJD(5) + t751) * t1293, -t99, qJD(5) * t348 + t346 * t751 - t759 * t837, -t248, qJD(2) * t71 + qJD(3) * t78 + qJD(4) * t274 + qJD(5) * t91 - qJD(6) * t142 + t1181, qJD(2) * t69 + qJD(3) * t76 + qJD(4) * t273 + qJD(5) * t89 + qJD(6) * t141 + t1182, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t728, -t991, 0, t728, 0, 0, t982, t981, 0, 0, -t944, -t1269, 0, t944, 0, 0, -t586 - t1056, -t1055, -t1249, -t1022, -t944, 0, t1269, 0, 0, t944, -t586 - t1060, qJD(3) * t250 - t1249, -t1059, qJD(3) * t157 + qJD(4) * t600 - t1030, t1263, -t1301, 0, -t365, 0, 0, t1280 * t986 - t1067, t174 * t986 - t1066, qJD(3) * t95 - t1144 - t207, qJD(3) * t33 - qJD(4) * t84 - t1143, t112, t102, t97, t111, t96, -t254, -qJD(3) * t34 + qJD(5) * t39 + qJD(6) * t70 - t1164 - t189, -qJD(3) * t36 + qJD(5) * t42 + qJD(6) * t68 - t1163 - t192, qJD(3) * t19 + qJD(5) * t23 + t1178, qJD(3) * t2 - qJD(4) * t7 + qJD(5) * t4 - t1180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t980, -t746, 0, 0, 0, 0, 0, 0, 0, 0, -t980, 0, t988, qJD(3) * t625 + t720, 0, 0, 0, 0, 0, 0, t1039 + t1074, -qJD(5) * t628 + t1073, 0, qJD(3) * t361 + qJD(4) * t438, t727, t992, 0, -t727, 0, 0, -t1034 * t623 + t1035 * t629 + t1075, -t623 * t1033 - t724 + (-t661 - t1039) * t755, qJD(5) * t437 + t1078, qJD(3) * t237 + qJD(4) * t332 + qJD(5) * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t473, -t746 - t745, 0, 0, 0, 0, 0, 0, 0, 0, t473, t1021, t988 + t745 (-pkin(3) * t757 + qJ(4) * t1200) * t1188 + t720 + t835, 0, 0, 0, 0, 0, 0, qJD(5) * t431 + t1074 - t834, qJD(5) * t430 + t1073 - t831, t1088 (t686 * t705 + t687 * t706) * qJD(3) + t234 * qJD(4) + t844, t727, t992, 0, -t727, 0, 0, qJD(5) * t376 + qJD(6) * t371 + t1075 - t807, qJD(5) * t375 + qJD(6) * t372 - t686 * t907 - t1186 - t724, qJD(5) * t233 + t1078 - t846 (t539 * t702 + t686 * t701) * qJD(3) + t149 * qJD(4) + t101 * qJD(5) + t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t751, t735 * t751 + t997, 0, 0, 0, 0, 0, 0, t709, t710, -t1024, qJD(3) * t234 + t839, 0, 0, 0, 0, 0, 0, t177, t178, -t1072, qJD(3) * t149 + qJD(5) * t164 + t601 - t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t431 * qJD(3) - t1032 + t903, t430 * qJD(3) - t628 * t987 - t1031, 0, 0, -t311, -t992, -t1010, t311, -t1008, 0, qJD(3) * t376 + qJD(6) * t396 + t759 * t903 + t1185, qJD(3) * t375 + qJD(6) * t397 - t1131 * t987 + t1184, qJD(3) * t233 + t437 * t987 + t1165, t101 * qJD(3) + t164 * qJD(4) + (-t629 * pkin(5) - pkin(10) * t437) * qJD(5) + t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t362, t323, -t269, t322, -t1268, qJD(3) * t371 + qJD(5) * t396 - t1033 * t624 - t1049 * t623 + t1126, qJD(3) * t372 + qJD(5) * t397 + t1034 * t624 - t1048 * t623 + t1130, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t944, -t1269, 0, t944, 0, 0, t584 - t952, -t953, 0, 0, -t944, 0, t1269, 0, 0, t944, t584 - t1058, -qJD(2) * t250, -t1057, -qJD(2) * t157 - t1029, t1263, -t1301, 0, -t365, 0, 0, -t1065 - t1294, -t1064 - t1312, -qJD(2) * t95 - t207, -qJD(2) * t33 - qJD(4) * t83 - t1140, t112, t102, t97, t111, t96, -t254, qJD(2) * t34 + qJD(5) * t51 + qJD(6) * t77 - t1162 - t189, qJD(2) * t36 + qJD(5) * t54 + qJD(6) * t75 - t1161 - t192, -qJD(2) * t19 + qJD(5) * t25 + t1177, -qJD(2) * t2 - qJD(4) * t9 + qJD(5) * t6 - t1179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t549, t745, 0, 0, 0, 0, 0, 0, 0, 0, t549, -t1021, qJD(4) - t745, t752 - t835, 0, 0, 0, 0, 0, 0, -qJD(5) * t428 + t747 + t834, -qJD(5) * t429 + t748 + t831, -t1088, qJD(4) * t235 - t844, t727, t992, 0, -t727, 0, 0, qJD(5) * t374 - qJD(6) * t369 + t729 + t807, -qJD(5) * t373 - qJD(6) * t370 + t1049 * t686 + t1186 - t724, qJD(5) * t232 + t846 - t993, qJD(4) * t150 - qJD(5) * t100 - t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t752, 0, 0, 0, 0, 0, 0, qJD(5) * t706 + t747, -qJD(5) * t705 + t748, 0, qJD(4) * t580, t727, t992, 0, -t727, 0, 0, -t1034 * t701 + t1035 * t706 + t729, -t1033 * t701 - t1037 * t706 - t724, qJD(5) * t579 - t993, qJD(4) * t404 + qJD(5) * t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t751, t721, 0, 0, 0, 0, 0, 0, t709, t710, -t1024, t791, 0, 0, 0, 0, 0, 0, t177, t178, -t1072, qJD(5) * t222 + t601 - t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t902 - t833, -t705 * t986 - t832, 0, 0, -t311, -t992, -t1010, t311, -t1008, 0, qJD(6) * t535 + t759 * t902 + t840, qJD(6) * t536 - t1121 * t986 + t841, t579 * t986 + t845, t222 * qJD(4) + (-t706 * pkin(5) - pkin(10) * t579) * qJD(5) + t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t362, t323, -t269, t322, -t1268, qJD(5) * t535 - t1033 * t702 - t1046 * t701 - t843, qJD(5) * t536 + t1034 * t702 - t1045 * t701 - t842, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t944, 0, -t996, t956 - t584, 0, 0, 0, 0, 0, 0, -t946, t945, t211 * t751 + t342, qJD(2) * t84 + qJD(3) * t83 + t155 - t957, 0, 0, 0, 0, 0, 0, -qJD(6) * t275 + t197 * t751 - t893, qJD(6) * t272 + t199 * t751 + t325 + t894, -t1017, qJD(2) * t7 + qJD(3) * t9 + t1183 + t1189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t751, -qJ(4) * qJD(3) - qJD(2) * t735 - t997, 0, 0, 0, 0, 0, 0, -t676, -t677, t1024, -qJD(3) * t235 - t839, 0, 0, 0, 0, 0, 0, t151, t152, -t1278, -qJD(3) * t150 - qJD(5) * t163 + t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t751, -t721, 0, 0, 0, 0, 0, 0, -t676, -t677, t1024, -t791, 0, 0, 0, 0, 0, 0, t151, t152, -t1278, -qJD(5) * t221 + t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t676, t677, t1006, t1068, 0, 0, 0, 0, 0, 0, t773, -t774 + t1014, t1278 (pkin(10) * t696 - t1191) * qJD(5) - t1253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1033 * t756 + t677 * t755 - t1015, t1034 * t756 + t677 * t759 + t1016, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1263, t1301, 0, t1263, 0, 0, t1294 + t958, t959 + t1312, -t1043, -t1044, -t1244 - t1284, t1247 * t872 + t475, qJD(6) * t352 + t344 * t751 - t1309, t1244 - t1285, qJD(6) * t347 + t350 * t751 + t1308, -t805, -qJD(2) * t39 - qJD(3) * t51 + qJD(6) * t90 - t1160, -qJD(2) * t42 - qJD(3) * t54 + qJD(6) * t88 - t838, -qJD(2) * t23 - qJD(3) * t25 + t1168, -qJD(2) * t4 - qJD(3) * t6 - t858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t629 + qJD(3) * t428 + t1032 - t747, qJD(2) * t628 + qJD(3) * t429 + t1031 - t748, 0, 0, t312, -t992, t1010, -t312, t1008, 0, -qJD(3) * t374 - qJD(6) * t394 - t1048 * t629 - t1185 - t729, qJD(3) * t373 - qJD(6) * t395 + t1049 * t629 - t1184 + t724, -qJD(2) * t437 - qJD(3) * t232 - t1165 + t993, qJD(3) * t100 + qJD(4) * t163 - t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t706 - t747 + t833, qJD(3) * t705 - t748 + t832, 0, 0, t312, -t992, t1010, -t312, t1008, 0, -qJD(6) * t533 - t1045 * t706 - t729 - t840, -qJD(6) * t534 + t1046 * t706 + t724 - t841, -qJD(3) * t579 - t845 + t993, qJD(4) * t221 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t709, -t710, -t1006, -t1068, 0, 0, 0, 0, 0, 0, -t1070, -t1014 + t1071, t1072, t1253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t992, 0, -t727, 0, 0, -pkin(5) * t1034, -pkin(5) * t1033, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, t363, t1007 + t1033, t269, t1009 - t1034, t1268, -pkin(10) * t1033 - t772, pkin(10) * t1034 - t771, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t1260, -t352 * qJD(5) - t1263 * t755 + t354 * t751, t99, -t347 * qJD(5) - t1263 * t759 - t345 * t751, -t248, -qJD(2) * t70 - qJD(3) * t77 + qJD(4) * t275 - qJD(5) * t90 - t1181, -qJD(2) * t68 - qJD(3) * t75 - qJD(4) * t272 - qJD(5) * t88 - t1182, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, t363, t340, t269, -t337, t1268, t369 * qJD(3) + t394 * qJD(5) + t755 * t804 - t1126, t370 * qJD(3) + t395 * qJD(5) + t759 * t804 - t1130, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, t363, t340, t269, -t337, t1268, t533 * qJD(5) + t755 * t803 + t843, t534 * qJD(5) + t759 * t803 + t842, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t710 * t755 + t1015, -t710 * t759 - t1016, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t362, -t1007, -t269, -t1009, -t1268, t772, t771, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t15;
