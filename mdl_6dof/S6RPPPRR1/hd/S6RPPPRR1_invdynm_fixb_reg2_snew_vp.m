% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPPRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 13:32
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPPRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPPRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPPRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPPRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 13:32:37
% EndTime: 2019-05-05 13:32:48
% DurationCPUTime: 12.08s
% Computational Cost: add. (31548->624), mult. (57539->703), div. (0->0), fcn. (31598->8), ass. (0->389)
t940 = sin(pkin(9));
t1037 = qJDD(1) * t940;
t941 = cos(pkin(9));
t950 = qJD(1) ^ 2;
t893 = t941 * t950 + t1037;
t876 = qJ(2) * t893;
t936 = g(3) - qJDD(2);
t918 = pkin(3) * t950 - t936;
t1101 = -pkin(3) * t1037 - t941 * t918 - t876;
t1036 = t941 * qJDD(1);
t894 = t940 * t950 - t1036;
t946 = sin(qJ(1));
t949 = cos(qJ(1));
t1016 = t949 * t893 - t894 * t946;
t1129 = pkin(6) * t1016;
t1077 = qJ(2) * t894;
t814 = -pkin(3) * t1036 + t940 * t918 + t1077;
t1132 = t1101 * t949 + t814 * t946 - t1129;
t1100 = t941 * t936 - t876;
t850 = -t936 * t940 + t1077;
t1131 = t1100 * t949 + t850 * t946 - t1129;
t1014 = t893 * t946 + t949 * t894;
t1111 = pkin(6) * t1014;
t1130 = t1100 * t946 - t850 * t949 - t1111;
t907 = g(1) * t949 + g(2) * t946;
t884 = -pkin(1) * t950 - t907;
t906 = g(1) * t946 - t949 * g(2);
t983 = qJDD(1) * pkin(1) + t906;
t806 = t940 * t884 - t941 * t983;
t1057 = t941 * t884;
t807 = t940 * t983 + t1057;
t1017 = t806 * t940 + t941 * t807;
t729 = t806 * t941 - t807 * t940;
t1074 = t729 * t946;
t1126 = t1017 * t949 + t1074;
t1073 = t729 * t949;
t1124 = -t1017 * t946 + t1073;
t948 = cos(qJ(5));
t1041 = qJD(1) * t948;
t944 = sin(qJ(6));
t947 = cos(qJ(6));
t877 = -t947 * qJD(5) + t1041 * t944;
t879 = qJD(5) * t944 + t1041 * t947;
t829 = t879 * t877;
t945 = sin(qJ(5));
t1035 = t945 * qJDD(1);
t1040 = qJD(1) * qJD(5);
t920 = t948 * t1040;
t1010 = t920 + t1035;
t988 = qJDD(6) + t1010;
t1110 = -t829 + t988;
t1121 = t1110 * t944;
t1120 = t1110 * t947;
t1039 = qJD(4) * qJD(1);
t938 = qJDD(1) * pkin(2);
t993 = qJDD(3) + t806;
t789 = -t950 * qJ(3) - t938 + t993;
t931 = qJDD(1) * qJ(4);
t966 = -t789 + t931;
t775 = -t966 - 0.2e1 * t1039;
t932 = t950 * qJ(4);
t1038 = qJDD(1) * qJ(3);
t943 = t950 * pkin(2);
t1033 = 0.2e1 * qJD(3) * qJD(1);
t955 = t807 + t1033;
t786 = -t943 + t955 + t1038;
t952 = qJDD(4) + t786;
t776 = -t932 + t952;
t1019 = t775 * t940 + t941 * t776;
t698 = t775 * t941 - t776 * t940;
t1119 = t1019 * t949 + t698 * t946;
t1118 = -t1019 * t946 + t698 * t949;
t1018 = t941 * t786 + t789 * t940;
t707 = t786 * t940 - t789 * t941;
t1117 = t1018 * t949 - t707 * t946;
t1116 = t1018 * t946 + t707 * t949;
t1112 = t1101 * t946 - t814 * t949 - t1111;
t1079 = t950 * pkin(7);
t926 = 0.2e1 * t1039;
t969 = t1010 + t920;
t1023 = t945 * t1040;
t1034 = t948 * qJDD(1);
t888 = -t1023 + t1034;
t994 = -t888 + t1023;
t705 = pkin(5) * t969 + pkin(8) * t994 - t1079 + t926 + t966;
t1042 = qJD(1) * t945;
t951 = t1057 + t940 * t906 - t943 + t1033 - t932 + qJDD(4) + (pkin(1) * t940 - pkin(7) + qJ(3)) * qJDD(1);
t1044 = t948 * t936 - t945 * t951;
t1090 = qJD(5) ^ 2;
t1080 = pkin(8) * t948;
t1085 = pkin(5) * t945;
t886 = (-t1080 + t1085) * qJD(1);
t714 = -pkin(5) * t1090 + qJDD(5) * pkin(8) - t1042 * t886 - t1044;
t642 = -t947 * t705 + t714 * t944;
t643 = t705 * t944 + t714 * t947;
t612 = t944 * t642 + t947 * t643;
t1020 = t945 * t936 + t948 * t951;
t683 = -t1020 * t945 - t1044 * t948;
t1109 = 0.2e1 * t931 + t926;
t978 = -0.2e1 * t938 + t993;
t1089 = pkin(3) + pkin(4);
t682 = t1020 * t948 - t1044 * t945;
t1102 = t1089 * t682;
t713 = -qJDD(5) * pkin(5) - pkin(8) * t1090 + t1041 * t886 - t1020;
t604 = t612 * t948 + t713 * t945;
t611 = -t642 * t947 + t643 * t944;
t1049 = pkin(4) * t611 - pkin(7) * t604;
t1084 = pkin(5) * t948;
t999 = -pkin(8) * t945 - t1084;
t1098 = t611 * (pkin(3) - t999) + t1049;
t1011 = t947 * qJDD(5) - t944 * t888;
t912 = qJD(6) + t1042;
t753 = (-qJD(6) + t912) * t879 + t1011;
t984 = -t944 * qJDD(5) - t947 * t888;
t804 = -qJD(6) * t877 - t984;
t855 = t912 * t877;
t755 = t804 + t855;
t693 = t753 * t947 + t755 * t944;
t867 = t877 ^ 2;
t868 = t879 ^ 2;
t790 = t867 + t868;
t1007 = pkin(5) * t790 + pkin(8) * t693 + t612;
t654 = t693 * t945 + t790 * t948;
t1097 = -t1089 * t654 - t1007;
t911 = t945 * t950 * t948;
t905 = qJDD(5) - t911;
t1052 = t948 * t905;
t934 = t945 ^ 2;
t1059 = t934 * t950;
t908 = -t1059 - t1090;
t835 = t908 * t945 + t1052;
t1096 = -t1089 * t835 - t1020;
t692 = t753 * t944 - t755 * t947;
t600 = -pkin(8) * t692 - t611;
t655 = t693 * t948 - t790 * t945;
t1030 = pkin(4) * t692 - pkin(7) * t655 - t945 * t600;
t1095 = (pkin(3) + t1084) * t692 + t1030;
t711 = t947 * t713;
t910 = t912 ^ 2;
t805 = -t910 - t867;
t719 = t805 * t947 - t1121;
t856 = t912 * t879;
t977 = qJD(6) * t879 - t1011;
t752 = -t856 - t977;
t1028 = -pkin(5) * t752 - pkin(8) * t719 + t711;
t668 = t719 * t945 + t752 * t948;
t1094 = -t1089 * t668 + t1028;
t710 = t944 * t713;
t792 = t829 + t988;
t1070 = t792 * t947;
t826 = -t868 - t910;
t725 = -t826 * t944 - t1070;
t756 = (qJD(6) + t912) * t877 + t984;
t1029 = pkin(5) * t756 + pkin(8) * t725 + t710;
t672 = t725 * t945 + t756 * t948;
t1093 = -t1089 * t672 - t1029;
t904 = qJDD(5) + t911;
t1055 = t945 * t904;
t935 = t948 ^ 2;
t1058 = t935 * t950;
t909 = -t1058 - t1090;
t837 = t909 * t948 - t1055;
t1092 = -t1089 * t837 - t1044;
t1048 = pkin(5) * t713 - pkin(8) * t612;
t603 = t612 * t945 - t713 * t948;
t1091 = -t1089 * t603 + t1048;
t880 = pkin(1) * t893;
t881 = pkin(1) * t894;
t1088 = pkin(1) * t936;
t1087 = pkin(3) * t775;
t1086 = pkin(3) * t776;
t1081 = pkin(7) * t682;
t1078 = pkin(2) + qJ(4);
t1076 = qJ(3) * t936;
t1075 = qJ(4) * t775;
t1071 = t792 * t944;
t1061 = t912 * t944;
t1060 = t912 * t947;
t768 = t775 + t1079;
t758 = t945 * t768;
t1054 = t948 * t768;
t1053 = t948 * t904;
t1047 = pkin(4) * t768 + pkin(7) * t683;
t1046 = -pkin(2) * t789 + qJ(3) * t786;
t1045 = t868 - t867;
t1043 = t934 + t935;
t1032 = t945 * t829;
t1031 = t948 * t829;
t900 = t1043 * t950;
t1027 = pkin(4) * t900 + t683;
t842 = -t909 * t945 - t1053;
t889 = -0.2e1 * t1023 + t1034;
t1026 = -pkin(4) * t889 + pkin(7) * t842 - t758;
t874 = t945 * t905;
t839 = t908 * t948 - t874;
t887 = 0.2e1 * t920 + t1035;
t1025 = -pkin(4) * t887 + pkin(7) * t839 + t1054;
t1022 = -pkin(7) * t603 + t611 * t1085;
t1021 = -pkin(7) * t837 - t1054;
t1012 = -t906 * t946 - t949 * t907;
t1009 = t940 * t911;
t1008 = t941 * t911;
t718 = t805 * t944 + t1120;
t621 = -pkin(5) * t718 + t642;
t649 = -pkin(8) * t718 + t710;
t669 = t719 * t948 - t752 * t945;
t1006 = -pkin(4) * t718 + pkin(7) * t669 + t948 * t621 + t945 * t649;
t724 = t826 * t947 - t1071;
t623 = -pkin(5) * t724 + t643;
t662 = -pkin(8) * t724 + t711;
t673 = t725 * t948 - t756 * t945;
t1005 = -pkin(4) * t724 + pkin(7) * t673 + t948 * t623 + t945 * t662;
t1004 = t1059 - t1090;
t1003 = -t1058 + t1090;
t1002 = -pkin(3) * t768 - t1047;
t1001 = -pkin(7) * t654 + t692 * t1085 + t948 * t600;
t899 = qJDD(1) * t949 - t946 * t950;
t998 = -pkin(6) * t899 - g(3) * t946;
t997 = -pkin(2) * t775 + qJ(3) * t776 - t1075;
t996 = -qJ(4) * t768 - t1081;
t995 = -pkin(7) * t835 - t758;
t754 = t804 - t855;
t992 = t752 * t947 - t754 * t944;
t848 = -t868 + t910;
t991 = -t848 * t944 + t1120;
t847 = t867 - t910;
t990 = t847 * t947 - t1071;
t989 = t906 * t949 - t907 * t946;
t986 = pkin(3) * t889 - t1026;
t985 = pkin(3) * t887 - t1025;
t982 = qJ(4) * t889 + t1021;
t981 = -pkin(7) * t668 - t621 * t945 + t948 * t649;
t980 = -pkin(7) * t672 - t623 * t945 + t948 * t662;
t897 = t1043 * qJDD(1);
t979 = pkin(7) * t897 - t682;
t976 = pkin(3) * t718 - t1006;
t975 = pkin(3) * t724 - t1005;
t974 = (-t877 * t947 + t879 * t944) * t912;
t973 = qJ(4) * t692 + t1001;
t972 = -pkin(2) * t768 + qJ(3) * t682 + t996;
t971 = -t856 + t977;
t970 = qJ(4) * t887 + t995;
t968 = pkin(2) * t889 + qJ(3) * t837 + t982;
t967 = -t978 + t1109;
t965 = qJ(4) * t718 + t981;
t964 = qJ(4) * t724 + t980;
t963 = -qJ(4) * t900 + t979;
t962 = (qJ(4) - t1080) * t611 + t1022;
t961 = pkin(2) * t692 + qJ(3) * t654 + t973;
t960 = pkin(2) * t887 + qJ(3) * t835 + t970;
t959 = pkin(2) * t718 + qJ(3) * t668 + t965;
t958 = pkin(2) * t724 + qJ(3) * t672 + t964;
t957 = -pkin(2) * t900 - qJ(3) * t897 + t963;
t956 = pkin(2) * t611 + qJ(3) * t603 + t962;
t954 = 0.2e1 * t1038 + t955;
t953 = qJDD(4) + t954;
t939 = pkin(3) * qJDD(1);
t901 = (-t934 + t935) * t950;
t898 = qJDD(1) * t946 + t949 * t950;
t885 = pkin(4) * t897;
t873 = t1043 * t1040;
t857 = -pkin(6) * t898 + g(3) * t949;
t846 = t1040 * t935 + t888 * t945;
t845 = t1010 * t948 - t1040 * t934;
t844 = -qJDD(5) * t940 - t873 * t941;
t843 = qJDD(5) * t941 - t873 * t940;
t841 = -t1003 * t945 + t1052;
t840 = t994 * t948;
t838 = t1004 * t948 - t1055;
t836 = -t1003 * t948 - t874;
t834 = -t1004 * t945 - t1053;
t833 = t969 * t945;
t832 = pkin(3) * t897 + t885;
t825 = -t897 * t941 + t900 * t940;
t824 = -t897 * t940 - t900 * t941;
t812 = -t887 * t948 - t889 * t945;
t811 = t945 * t887 - t948 * t889;
t802 = -t845 * t941 + t1009;
t801 = t846 * t941 - t1009;
t800 = -t845 * t940 - t1008;
t799 = t846 * t940 + t1008;
t798 = t1035 * t940 - t834 * t941;
t797 = -t1034 * t940 - t836 * t941;
t796 = -t1035 * t941 - t834 * t940;
t795 = t1034 * t941 - t836 * t940;
t784 = t837 * t941 - t889 * t940;
t783 = t835 * t941 - t887 * t940;
t782 = t837 * t940 + t889 * t941;
t781 = t835 * t940 + t887 * t941;
t780 = -t806 - t881;
t779 = -t807 - t880;
t777 = (-t877 * t944 - t879 * t947) * t912;
t773 = -t811 * t941 - t901 * t940;
t772 = -t811 * t940 + t901 * t941;
t770 = t978 + t881;
t764 = t880 + t954;
t763 = t880 + t953;
t757 = t1076 + t1087;
t751 = -t881 + t967;
t746 = t1078 * t936 + t1086;
t743 = -t1061 * t879 + t804 * t947;
t742 = t1060 * t879 + t804 * t944;
t741 = t1060 * t877 + t944 * t977;
t740 = -t1061 * t877 + t947 * t977;
t736 = t945 * t988 + t948 * t974;
t735 = -t945 * t974 + t948 * t988;
t734 = t847 * t944 + t1070;
t733 = t848 * t947 + t1121;
t726 = pkin(1) * t729;
t720 = qJ(2) * t1017 + t1088;
t703 = t743 * t948 + t1032;
t702 = t741 * t948 - t1032;
t701 = t741 * t945 + t1031;
t700 = t743 * t945 - t1031;
t695 = -qJ(2) * t707 + (-pkin(2) * t940 + qJ(3) * t941) * t936;
t694 = qJ(2) * t1018 + (pkin(2) * t941 + qJ(3) * t940 + pkin(1)) * t936;
t691 = t752 * t944 + t754 * t947;
t687 = -t735 * t941 - t777 * t940;
t686 = -t735 * t940 + t777 * t941;
t679 = -t945 * t971 + t948 * t990;
t678 = t945 * t755 + t948 * t991;
t677 = -t945 * t990 - t948 * t971;
t676 = t948 * t755 - t945 * t991;
t675 = -qJ(3) * t842 - t986;
t674 = -qJ(3) * t839 - t985;
t665 = -pkin(3) * t900 - t1027;
t664 = t1045 * t945 + t948 * t992;
t663 = t1045 * t948 - t945 * t992;
t661 = -t1078 * t842 - t1092;
t660 = -t1078 * t839 - t1096;
t659 = t701 * t941 + t740 * t940;
t658 = t700 * t941 - t742 * t940;
t657 = t701 * t940 - t740 * t941;
t656 = t700 * t940 + t742 * t941;
t646 = pkin(1) * t707 + t1046;
t645 = pkin(1) * t782 + t968;
t644 = pkin(1) * t781 + t960;
t639 = t682 * t941 + t768 * t940;
t638 = t682 * t940 - t768 * t941;
t637 = pkin(1) * t824 + t957;
t636 = -t676 * t941 - t733 * t940;
t635 = -t677 * t941 - t734 * t940;
t634 = -t676 * t940 + t733 * t941;
t633 = -t677 * t940 + t734 * t941;
t632 = -qJ(2) * t824 - t665 * t941 + t832 * t940;
t631 = qJ(2) * t825 - t665 * t940 - t832 * t941;
t630 = t672 * t941 - t724 * t940;
t629 = t672 * t940 + t724 * t941;
t628 = qJ(2) * t698 - t746 * t940 + t757 * t941;
t627 = qJ(2) * t1019 + t746 * t941 + t757 * t940 + t1088;
t626 = t668 * t941 - t718 * t940;
t625 = t668 * t940 + t718 * t941;
t624 = -pkin(1) * t698 + t997;
t619 = -t663 * t941 - t691 * t940;
t618 = -t663 * t940 + t691 * t941;
t617 = t654 * t941 - t692 * t940;
t616 = t654 * t940 + t692 * t941;
t615 = -qJ(2) * t782 - t661 * t940 + t675 * t941;
t614 = -qJ(2) * t781 - t660 * t940 + t674 * t941;
t613 = -qJ(3) * t683 - t1002;
t606 = -pkin(1) * t842 + qJ(2) * t784 + t661 * t941 + t675 * t940;
t605 = -pkin(1) * t839 + qJ(2) * t783 + t660 * t941 + t674 * t940;
t597 = -t1078 * t683 + t1102;
t596 = pkin(1) * t638 + t972;
t595 = -t1078 * t673 - t1093;
t594 = -t1078 * t669 - t1094;
t593 = t603 * t941 - t611 * t940;
t592 = t603 * t940 + t611 * t941;
t591 = -qJ(3) * t673 - t975;
t590 = -qJ(3) * t669 - t976;
t589 = -qJ(2) * t638 - t597 * t940 + t613 * t941;
t588 = pkin(1) * t629 + t958;
t587 = pkin(1) * t625 + t959;
t586 = -qJ(3) * t655 - t1095;
t585 = -t1078 * t655 - t1097;
t584 = -pkin(1) * t683 + qJ(2) * t639 + t597 * t941 + t613 * t940;
t583 = pkin(1) * t616 + t961;
t582 = -qJ(2) * t629 + t591 * t941 - t595 * t940;
t581 = -qJ(2) * t625 + t590 * t941 - t594 * t940;
t580 = -pkin(1) * t673 + qJ(2) * t630 + t591 * t940 + t595 * t941;
t579 = -pkin(1) * t669 + qJ(2) * t626 + t590 * t940 + t594 * t941;
t578 = -t1078 * t604 - t1091;
t577 = -qJ(3) * t604 - t1098;
t576 = -qJ(2) * t616 - t585 * t940 + t586 * t941;
t575 = -pkin(1) * t655 + qJ(2) * t617 + t585 * t941 + t586 * t940;
t574 = pkin(1) * t592 + t956;
t573 = -qJ(2) * t592 + t577 * t941 - t578 * t940;
t572 = -pkin(1) * t604 + qJ(2) * t593 + t577 * t940 + t578 * t941;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t899, 0, -t898, 0, t998, -t857, -t989, -pkin(6) * t989, 0, 0, -t1014, 0, -t1016, 0, -t1130, -t1131, t1124, pkin(6) * t1124 + qJ(2) * t1073 - t946 * t720, 0, t1014, t1016, 0, 0, 0, -t1116, t1130, t1131, -pkin(6) * t1116 - t946 * t694 + t949 * t695, 0, t1016, -t1014, 0, 0, 0, t1118, t1132, -t1112, pkin(6) * t1118 - t946 * t627 + t949 * t628, -t799 * t946 + t801 * t949, -t772 * t946 + t773 * t949, -t795 * t946 + t797 * t949, -t800 * t946 + t802 * t949, -t796 * t946 + t798 * t949, -t843 * t946 + t844 * t949, t949 * t614 - t946 * t605 - pkin(6) * (t781 * t949 + t783 * t946), t949 * t615 - t946 * t606 - pkin(6) * (t782 * t949 + t784 * t946), t949 * t632 - t946 * t631 - pkin(6) * (t824 * t949 + t825 * t946), t949 * t589 - t946 * t584 - pkin(6) * (t638 * t949 + t639 * t946), -t656 * t946 + t658 * t949, -t618 * t946 + t619 * t949, -t634 * t946 + t636 * t949, -t657 * t946 + t659 * t949, -t633 * t946 + t635 * t949, -t686 * t946 + t687 * t949, t949 * t581 - t946 * t579 - pkin(6) * (t625 * t949 + t626 * t946), t949 * t582 - t946 * t580 - pkin(6) * (t629 * t949 + t630 * t946), t949 * t576 - t946 * t575 - pkin(6) * (t616 * t949 + t617 * t946), t949 * t573 - t946 * t572 - pkin(6) * (t592 * t949 + t593 * t946); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t898, 0, t899, 0, t857, t998, t1012, pkin(6) * t1012, 0, 0, t1016, 0, -t1014, 0, t1131, -t1130, t1126, pkin(6) * t1126 + qJ(2) * t1074 + t949 * t720, 0, -t1016, t1014, 0, 0, 0, t1117, -t1131, t1130, pkin(6) * t1117 + t949 * t694 + t946 * t695, 0, t1014, t1016, 0, 0, 0, t1119, t1112, t1132, pkin(6) * t1119 + t949 * t627 + t946 * t628, t799 * t949 + t801 * t946, t772 * t949 + t773 * t946, t795 * t949 + t797 * t946, t800 * t949 + t802 * t946, t796 * t949 + t798 * t946, t843 * t949 + t844 * t946, t946 * t614 + t949 * t605 + pkin(6) * (-t781 * t946 + t783 * t949), t946 * t615 + t949 * t606 + pkin(6) * (-t782 * t946 + t784 * t949), t946 * t632 + t949 * t631 + pkin(6) * (-t824 * t946 + t825 * t949), t946 * t589 + t949 * t584 + pkin(6) * (-t638 * t946 + t639 * t949), t656 * t949 + t658 * t946, t618 * t949 + t619 * t946, t634 * t949 + t636 * t946, t657 * t949 + t659 * t946, t633 * t949 + t635 * t946, t686 * t949 + t687 * t946, t946 * t581 + t949 * t579 + pkin(6) * (-t625 * t946 + t626 * t949), t946 * t582 + t949 * t580 + pkin(6) * (-t629 * t946 + t630 * t949), t946 * t576 + t949 * t575 + pkin(6) * (-t616 * t946 + t617 * t949), t946 * t573 + t949 * t572 + pkin(6) * (-t592 * t946 + t593 * t949); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t906, t907, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t780, t779, 0, -t726, qJDD(1), 0, 0, 0, 0, 0, 0, t770, t764, t646, qJDD(1), 0, 0, 0, 0, 0, 0, t763, t751, t624, -t840, t812, t841, t833, t838, 0, t644, t645, t637, t596, t703, t664, t678, t702, t679, t736, t587, t588, t583, t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t950, 0, 0, -g(3), -t906, 0, 0, 0, -t894, 0, -t893, 0, t850, -t1100, t729, qJ(2) * t729, 0, t894, t893, 0, 0, 0, -t707, -t850, t1100, t695, 0, t893, -t894, 0, 0, 0, t698, t1101, t814, t628, t801, t773, t797, t802, t798, t844, t614, t615, t632, t589, t658, t619, t636, t659, t635, t687, t581, t582, t576, t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t950, 0, qJDD(1), 0, g(3), 0, -t907, 0, 0, 0, t893, 0, -t894, 0, t1100, t850, t1017, t720, 0, -t893, t894, 0, 0, 0, t1018, -t1100, -t850, t694, 0, t894, t893, 0, 0, 0, t1019, -t814, t1101, t627, t799, t772, t795, t800, t796, t843, t605, t606, t631, t584, t656, t618, t634, t657, t633, t686, t579, t580, t575, t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t906, t907, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t780, t779, 0, -t726, qJDD(1), 0, 0, 0, 0, 0, 0, t770, t764, t646, qJDD(1), 0, 0, 0, 0, 0, 0, t763, t751, t624, -t840, t812, t841, t833, t838, 0, t644, t645, t637, t596, t703, t664, t678, t702, t679, t736, t587, t588, t583, t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t950, 0, 0, -t936, t806, 0, 0, -qJDD(1), t950, 0, 0, 0, t789, 0, t936, t1076, 0, t950, qJDD(1), 0, 0, 0, t775, -t918, -t939, t757, t846, -t811, -t836, -t845, -t834, -t873, t674, t675, -t665, t613, t700, -t663, -t676, t701, -t677, -t735, t590, t591, t586, t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t950, 0, qJDD(1), 0, t936, 0, t807, 0, 0, -t950, -qJDD(1), 0, 0, 0, t786, -t936, 0, pkin(2) * t936, 0, -qJDD(1), t950, 0, 0, 0, t776, t939, -t918, t746, t911, t901, t1034, -t911, -t1035, qJDD(5), t660, t661, -t832, t597, t742, t691, t733, -t740, t734, t777, t594, t595, t585, t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t806, -t807, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t978, t954, t1046, qJDD(1), 0, 0, 0, 0, 0, 0, t953, t967, t997, -t840, t812, t841, t833, t838, 0, t960, t968, t957, t972, t703, t664, t678, t702, t679, t736, t959, t958, t961, t956; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t789, t786, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t952, -t789 + t1109, -t1075, -t840, t812, t841, t833, t838, 0, t970, t982, t963, t996, t703, t664, t678, t702, t679, t736, t965, t964, t973, t962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t950, 0, 0, 0, -t789, 0, -t936, 0, 0, -t950, -qJDD(1), 0, 0, 0, -t775, t918, t939, -t1087, -t846, t811, t836, t845, t834, t873, t985, t986, t665, t1002, -t700, t663, t676, -t701, t677, t735, t976, t975, t1095, t1098; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t950, qJDD(1), 0, 0, 0, -t786, t936, 0, 0, 0, qJDD(1), -t950, 0, 0, 0, -t776, -t939, t918, -qJ(4) * t936 - t1086, -t911, -t901, -t1034, t911, t1035, -qJDD(5), qJ(4) * t839 + t1096, qJ(4) * t842 + t1092, t832, qJ(4) * t683 - t1102, -t742, -t691, -t733, t740, -t734, -t777, qJ(4) * t669 + t1094, qJ(4) * t673 + t1093, qJ(4) * t655 + t1097, qJ(4) * t604 + t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t776, -t775, 0, -t840, t812, t841, t833, t838, 0, t995, t1021, t979, -t1081, t703, t664, t678, t702, t679, t736, t981, t980, t1001, -t1080 * t611 + t1022; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t950, 0, 0, 0, -t776, 0, -t936, 0, -t911, -t901, -t1034, t911, t1035, -qJDD(5), -pkin(4) * t835 - t1020, -pkin(4) * t837 - t1044, t885, -pkin(4) * t682, -t742, -t691, -t733, t740, -t734, -t777, -pkin(4) * t668 + t1028, -pkin(4) * t672 - t1029, -pkin(4) * t654 - t1007, -pkin(4) * t603 + t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t950, qJDD(1), 0, 0, 0, t775, t936, 0, 0, t846, -t811, -t836, -t845, -t834, -t873, t1025, t1026, t1027, t1047, t700, -t663, -t676, t701, -t677, -t735, t1006, t1005, -t1084 * t692 - t1030, t611 * t999 - t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t888, -t887, t905, t1023, t1004, -t1023, 0, -t768, -t1020, 0, t743, t992, t991, t741, t990, t974, t649, t662, t600, -pkin(8) * t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t920, t889, t1003, -t1010, t904, -t920, t768, 0, -t1044, 0, -t829, -t1045, -t755, t829, t971, -t988, t621, t623, -pkin(5) * t692, -pkin(5) * t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t911, t901, t1034, -t911, -t1035, qJDD(5), t1020, t1044, 0, 0, t742, t691, t733, -t740, t734, t777, -t1028, t1029, t1007, -t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t804, t752, t1110, t855, t847, -t855, 0, t713, t642, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t856, t754, t848, -t977, t792, -t856, -t713, 0, t643, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t829, t1045, t755, -t829, -t971, t988, -t642, -t643, 0, 0;];
m_new_reg  = t1;
