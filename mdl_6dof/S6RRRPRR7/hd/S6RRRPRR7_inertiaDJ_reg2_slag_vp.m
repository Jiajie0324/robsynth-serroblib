% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR7_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:39:27
% EndTime: 2019-03-09 18:39:50
% DurationCPUTime: 8.66s
% Computational Cost: add. (20708->492), mult. (52440->884), div. (0->0), fcn. (54000->12), ass. (0->219)
t159 = sin(qJ(3));
t162 = cos(qJ(3));
t274 = sin(pkin(12));
t275 = cos(pkin(12));
t209 = t274 * t159 - t275 * t162;
t163 = cos(qJ(2));
t276 = cos(pkin(6));
t246 = pkin(1) * t276;
t157 = sin(pkin(6));
t160 = sin(qJ(2));
t270 = t157 * t160;
t191 = pkin(8) * t270 - t163 * t246;
t188 = t191 * qJD(2);
t202 = (-pkin(2) * t163 - pkin(9) * t160 - pkin(1)) * t157;
t301 = -qJD(3) * t202 + t188;
t263 = qJD(2) * t163;
t242 = t157 * t263;
t300 = t276 * qJD(3) + t242;
t158 = sin(qJ(6));
t155 = t158 ^ 2;
t161 = cos(qJ(6));
t156 = t161 ^ 2;
t267 = t155 - t156;
t297 = t267 * qJD(6);
t122 = t159 * t270 - t276 * t162;
t123 = t276 * t159 + t162 * t270;
t210 = t275 * t122 + t274 * t123;
t292 = cos(qJ(5));
t196 = t292 * t210;
t243 = qJD(3) * t270;
t247 = t159 * t300 + t162 * t243;
t93 = -t159 * t243 + t162 * t300;
t199 = t275 * t247 + t274 * t93;
t291 = sin(qJ(5));
t238 = qJD(5) * t291;
t71 = -t274 * t247 + t275 * t93;
t86 = -t274 * t122 + t275 * t123;
t174 = qJD(5) * t196 + t291 * t199 + t86 * t238 - t292 * t71;
t61 = -t291 * t210 + t292 * t86;
t34 = t61 * qJD(5) + t292 * t199 + t291 * t71;
t269 = t157 * t163;
t125 = pkin(8) * t269 + t160 * t246;
t118 = qJD(2) * t125;
t75 = t247 * pkin(3) + t118;
t49 = pkin(4) * t199 + t75;
t169 = t34 * pkin(5) + pkin(11) * t174 + t49;
t110 = t276 * pkin(9) + t125;
t77 = -t159 * t110 + t162 * t202;
t68 = -pkin(3) * t269 - t123 * qJ(4) + t77;
t78 = t162 * t110 + t159 * t202;
t72 = -qJ(4) * t122 + t78;
t45 = -t274 * t72 + t275 * t68;
t186 = pkin(4) * t269 + t86 * pkin(10) - t45;
t46 = t274 * t68 + t275 * t72;
t190 = -pkin(10) * t210 + t46;
t23 = -t291 * t186 + t292 * t190;
t21 = -pkin(11) * t269 + t23;
t259 = qJD(6) * t158;
t264 = qJD(2) * t160;
t144 = t157 * t264;
t60 = t291 * t86 + t196;
t109 = -t276 * pkin(2) + t191;
t88 = t122 * pkin(3) + t109;
t63 = pkin(4) * t210 + t88;
t173 = t60 * pkin(5) - t61 * pkin(11) + t63;
t229 = pkin(3) * t144;
t265 = qJD(2) * t157;
t200 = (pkin(2) * t160 - pkin(9) * t163) * t265;
t261 = qJD(3) * t162;
t57 = -t110 * t261 + t301 * t159 + t162 * t200;
t170 = -t93 * qJ(4) - t123 * qJD(4) + t229 + t57;
t262 = qJD(3) * t159;
t56 = t110 * t262 - t159 * t200 + t301 * t162;
t179 = t247 * qJ(4) + t122 * qJD(4) + t56;
t31 = t274 * t170 - t275 * t179;
t166 = -pkin(10) * t199 + t31;
t30 = t275 * t170 + t274 * t179;
t167 = pkin(4) * t144 - t71 * pkin(10) + t30;
t22 = -t292 * t186 - t291 * t190;
t8 = -t22 * qJD(5) - t292 * t166 - t291 * t167;
t299 = -pkin(11) * t144 - qJD(6) * t173 + t8;
t2 = -t158 * t169 + t299 * t161 + t21 * t259;
t1 = t2 * t161;
t11 = -t158 * t21 + t161 * t173;
t12 = t158 * t173 + t161 * t21;
t216 = t11 * t161 + t12 * t158;
t153 = qJD(6) * t161;
t3 = -t21 * t153 + t299 * t158 + t161 * t169;
t183 = -t216 * qJD(6) - t158 * t3 - t1;
t231 = qJD(3) * t274;
t232 = qJD(3) * t275;
t203 = -t159 * t231 + t162 * t232;
t287 = -qJ(4) - pkin(9);
t237 = qJD(3) * t287;
t193 = qJD(4) * t162 + t159 * t237;
t194 = -qJD(4) * t159 + t162 * t237;
t83 = -t274 * t193 + t275 * t194;
t171 = pkin(10) * t203 - t83;
t126 = t275 * t159 + t274 * t162;
t94 = t126 * t287;
t178 = -t126 * pkin(10) + t94;
t176 = t292 * t178;
t268 = t159 * t232 + t162 * t231;
t84 = t275 * t193 + t274 * t194;
t74 = -t268 * pkin(10) + t84;
t95 = t209 * t287;
t85 = -pkin(10) * t209 + t95;
t168 = -qJD(5) * t176 + t291 * t171 + t85 * t238 - t292 * t74;
t152 = -t162 * pkin(3) - pkin(2);
t106 = pkin(4) * t209 + t152;
t195 = t292 * t209;
t90 = t291 * t126 + t195;
t91 = t292 * t126 - t291 * t209;
t180 = t90 * pkin(5) - t91 * pkin(11) + t106;
t298 = -qJD(6) * t180 + t168;
t226 = t275 * pkin(3) + pkin(4);
t245 = t274 * pkin(3);
t119 = t292 * t226 - t291 * t245;
t59 = t291 * t178 + t292 * t85;
t64 = qJD(5) * t195 + t126 * t238 - t292 * t203 + t291 * t268;
t65 = t91 * qJD(5) + t291 * t203 + t292 * t268;
t253 = pkin(3) * t262;
t97 = t268 * pkin(4) + t253;
t184 = t65 * pkin(5) + t64 * pkin(11) + t97;
t13 = -t158 * t184 + t298 * t161 + t59 * t259;
t14 = -t59 * t153 + t298 * t158 + t161 * t184;
t40 = -t158 * t59 + t161 * t180;
t41 = t158 * t180 + t161 * t59;
t211 = t158 * t40 - t161 * t41;
t296 = qJD(6) * t211 + t13 * t158 - t14 * t161;
t215 = t11 * t158 - t12 * t161;
t295 = qJD(6) * t215 + t158 * t2 - t161 * t3;
t294 = 0.2e1 * t157;
t20 = pkin(5) * t269 - t22;
t19 = t20 * t153;
t165 = t23 * qJD(5) + t291 * t166 - t292 * t167;
t7 = -pkin(5) * t144 + t165;
t293 = t7 * t158 + t19;
t290 = pkin(9) * t157;
t37 = qJD(5) * t59 + t292 * t171 + t291 * t74;
t58 = t291 * t85 - t176;
t289 = t58 * t37;
t288 = t91 * t64;
t248 = t158 * t269;
t27 = -qJD(6) * t248 - t144 * t161 + t61 * t153 - t158 * t174;
t51 = t158 * t61 + t161 * t269;
t286 = -t51 * t153 - t158 * t27;
t55 = t58 * t153;
t285 = t37 * t158 + t55;
t26 = qJD(6) * t51 - t144 * t158 + t161 * t174;
t284 = t158 * t26;
t283 = t158 * t51;
t282 = t159 * t93;
t281 = t161 * t27;
t52 = t161 * t61 - t248;
t280 = t161 * t52;
t279 = t161 * t64;
t120 = t291 * t226 + t292 * t245;
t108 = t120 * qJD(5);
t278 = t58 * t108;
t115 = -pkin(5) - t119;
t277 = t108 * t158 + t115 * t153;
t107 = t119 * qJD(5);
t272 = t107 * t158;
t271 = t107 * t161;
t266 = t155 + t156;
t260 = qJD(3) * t163;
t258 = 0.2e1 * t60 * t34;
t257 = 0.2e1 * t90 * t65;
t256 = -0.2e1 * pkin(2) * qJD(3);
t255 = pkin(5) * t259;
t254 = pkin(5) * t153;
t252 = t158 * t279;
t250 = t91 * t259;
t249 = t91 * t153;
t18 = t20 * t259;
t54 = t58 * t259;
t154 = t157 ^ 2;
t244 = t154 * t263;
t241 = t158 * t153;
t240 = t159 * t261;
t239 = -t161 * t7 + t18;
t233 = -t108 * t161 + t115 * t259;
t76 = t266 * t107;
t89 = t91 ^ 2;
t228 = t89 * t241;
t227 = t160 * t244;
t225 = -t20 * t64 + t7 * t91;
t224 = t247 * t162;
t223 = t276 * t265;
t221 = t91 * t34 - t64 * t60;
t220 = t34 * t90 + t60 * t65;
t219 = t37 * t91 - t58 * t64;
t218 = t64 * t90 - t65 * t91;
t217 = -t107 * t90 + t108 * t91;
t116 = pkin(11) + t120;
t214 = t115 * t91 - t116 * t90;
t212 = t158 * t41 + t161 * t40;
t207 = -t161 * t26 - t52 * t259;
t29 = t60 * t153 + t158 * t34;
t206 = -t161 * t34 + t60 * t259;
t205 = t250 + t279;
t48 = t90 * t153 + t158 * t65;
t204 = -t161 * t65 + t90 * t259;
t198 = t159 * t260 + t162 * t264;
t197 = t159 * t264 - t162 * t260;
t187 = -t115 * t64 - t116 * t65 + t217;
t4 = -qJD(6) * t212 - t13 * t161 - t14 * t158;
t182 = -t57 * t159 - t56 * t162 + (-t159 * t78 - t162 * t77) * qJD(3);
t141 = -0.2e1 * t241;
t140 = 0.2e1 * t241;
t130 = -0.2e1 * t227;
t129 = -0.2e1 * t297;
t44 = t297 * t91 + t252;
t38 = -0.4e1 * t91 * t241 + t267 * t64;
t17 = t51 * t259 - t281;
t16 = t52 * t153 - t284;
t10 = t207 + t286;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t227, 0.2e1 * (-t160 ^ 2 + t163 ^ 2) * t154 * qJD(2), 0.2e1 * t163 * t223, t130, -0.2e1 * t160 * t223, 0, -0.2e1 * t154 * pkin(1) * t264 - 0.2e1 * t118 * t276, -0.2e1 * pkin(1) * t244 + 0.2e1 * t276 * t188, 0.2e1 * t118 * t270 - 0.2e1 * t125 * t144 - 0.2e1 * t188 * t269 + 0.2e1 * t191 * t242, 0.2e1 * t118 * t191 - 0.2e1 * t125 * t188, 0.2e1 * t123 * t93, -0.2e1 * t93 * t122 - 0.2e1 * t123 * t247 (t123 * t264 - t163 * t93) * t294, 0.2e1 * t122 * t247 (-t122 * t264 + t247 * t163) * t294, t130, 0.2e1 * t118 * t122 + 0.2e1 * t109 * t247 + 0.2e1 * (-t163 * t57 + t77 * t264) * t157, 0.2e1 * t109 * t93 + 0.2e1 * t118 * t123 + 0.2e1 * (-t163 * t56 - t78 * t264) * t157, 0.2e1 * t56 * t122 - 0.2e1 * t57 * t123 - 0.2e1 * t78 * t247 - 0.2e1 * t77 * t93, 0.2e1 * t109 * t118 - 0.2e1 * t56 * t78 + 0.2e1 * t57 * t77, 0.2e1 * t86 * t71, -0.2e1 * t199 * t86 - 0.2e1 * t210 * t71 (-t163 * t71 + t86 * t264) * t294, 0.2e1 * t210 * t199 (t163 * t199 - t210 * t264) * t294, t130, 0.2e1 * t75 * t210 + 0.2e1 * t88 * t199 + 0.2e1 * (-t163 * t30 + t45 * t264) * t157, 0.2e1 * t88 * t71 + 0.2e1 * t75 * t86 + 0.2e1 * (t163 * t31 - t46 * t264) * t157, -0.2e1 * t199 * t46 - 0.2e1 * t210 * t31 - 0.2e1 * t30 * t86 - 0.2e1 * t45 * t71, 0.2e1 * t30 * t45 + 0.2e1 * t31 * t46 + 0.2e1 * t75 * t88, -0.2e1 * t61 * t174, 0.2e1 * t174 * t60 - 0.2e1 * t61 * t34 (t163 * t174 + t61 * t264) * t294, t258 (t163 * t34 - t60 * t264) * t294, t130, 0.2e1 * t63 * t34 + 0.2e1 * t49 * t60 + 0.2e1 * (t163 * t165 + t22 * t264) * t157, 0.2e1 * t49 * t61 - 0.2e1 * t63 * t174 + 0.2e1 * (-t163 * t8 - t23 * t264) * t157, 0.2e1 * t165 * t61 + 0.2e1 * t174 * t22 - 0.2e1 * t23 * t34 + 0.2e1 * t8 * t60, -0.2e1 * t165 * t22 - 0.2e1 * t23 * t8 + 0.2e1 * t49 * t63, -0.2e1 * t52 * t26, 0.2e1 * t26 * t51 - 0.2e1 * t27 * t52, -0.2e1 * t26 * t60 + 0.2e1 * t34 * t52, 0.2e1 * t51 * t27, -0.2e1 * t27 * t60 - 0.2e1 * t34 * t51, t258, 0.2e1 * t11 * t34 + 0.2e1 * t20 * t27 + 0.2e1 * t3 * t60 + 0.2e1 * t51 * t7, -0.2e1 * t12 * t34 + 0.2e1 * t2 * t60 - 0.2e1 * t20 * t26 + 0.2e1 * t52 * t7, 0.2e1 * t11 * t26 - 0.2e1 * t12 * t27 + 0.2e1 * t2 * t51 - 0.2e1 * t3 * t52, 0.2e1 * t11 * t3 - 0.2e1 * t12 * t2 + 0.2e1 * t20 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, 0, -t144, 0, -t118, t188, 0, 0, t123 * t261 + t282, -t159 * t247 + t93 * t162 + (-t122 * t162 - t123 * t159) * qJD(3), t197 * t157, t122 * t262 - t224, t198 * t157, 0, -pkin(2) * t247 + t109 * t262 - t118 * t162 - t197 * t290, -pkin(2) * t93 + t109 * t261 + t118 * t159 - t198 * t290 (-t224 + t282 + (t122 * t159 + t123 * t162) * qJD(3)) * pkin(9) + t182, -pkin(2) * t118 + pkin(9) * t182, t71 * t126 + t203 * t86, -t126 * t199 - t203 * t210 - t71 * t209 - t86 * t268 (t126 * t264 - t163 * t203) * t157, t199 * t209 + t210 * t268 (t268 * t163 - t209 * t264) * t157, 0, t210 * t253 + t152 * t199 + t75 * t209 + t88 * t268 + (-t163 * t83 + t94 * t264) * t157, t86 * t253 + t152 * t71 + t75 * t126 + t88 * t203 + (t163 * t84 - t95 * t264) * t157, -t30 * t126 - t95 * t199 - t45 * t203 - t31 * t209 - t84 * t210 - t46 * t268 - t94 * t71 - t83 * t86, t152 * t75 + t88 * t253 + t30 * t94 + t31 * t95 + t45 * t83 + t46 * t84, -t174 * t91 - t61 * t64, t174 * t90 - t61 * t65 - t221 (t163 * t64 + t91 * t264) * t157, t220 (t163 * t65 - t90 * t264) * t157, 0, t106 * t34 + t49 * t90 + t97 * t60 + t63 * t65 + (t163 * t37 - t264 * t58) * t157, -t106 * t174 - t144 * t59 - t168 * t269 + t49 * t91 + t97 * t61 - t63 * t64, t165 * t91 + t168 * t60 - t174 * t58 + t22 * t64 - t23 * t65 - t59 * t34 + t37 * t61 + t8 * t90, t49 * t106 + t165 * t58 - t168 * t23 - t22 * t37 - t8 * t59 + t63 * t97, -t52 * t250 + (-t26 * t91 - t52 * t64) * t161 (t158 * t52 + t161 * t51) * t64 + (t284 - t281 + (-t280 + t283) * qJD(6)) * t91, t161 * t221 - t250 * t60 - t26 * t90 + t52 * t65, t51 * t249 + (t27 * t91 - t51 * t64) * t158, -t158 * t221 - t249 * t60 - t27 * t90 - t51 * t65, t220, t11 * t65 + t14 * t60 + t158 * t225 + t19 * t91 + t27 * t58 + t3 * t90 + t34 * t40 + t37 * t51, -t12 * t65 + t13 * t60 + t161 * t225 - t18 * t91 + t2 * t90 - t26 * t58 - t34 * t41 + t37 * t52, t13 * t51 - t14 * t52 + t216 * t64 + t26 * t40 - t27 * t41 + t295 * t91, t11 * t14 - t12 * t13 - t2 * t41 + t20 * t37 + t3 * t40 + t58 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t240, 0.2e1 * (-t159 ^ 2 + t162 ^ 2) * qJD(3), 0, -0.2e1 * t240, 0, 0, t159 * t256, t162 * t256, 0, 0, 0.2e1 * t126 * t203, -0.2e1 * t126 * t268 - 0.2e1 * t203 * t209, 0, 0.2e1 * t209 * t268, 0, 0, 0.2e1 * t152 * t268 + 0.2e1 * t209 * t253, 0.2e1 * t126 * t253 + 0.2e1 * t152 * t203, -0.2e1 * t83 * t126 - 0.2e1 * t94 * t203 - 0.2e1 * t84 * t209 - 0.2e1 * t95 * t268, 0.2e1 * t152 * t253 + 0.2e1 * t83 * t94 + 0.2e1 * t84 * t95, -0.2e1 * t288, 0.2e1 * t218, 0, t257, 0, 0, 0.2e1 * t106 * t65 + 0.2e1 * t90 * t97, -0.2e1 * t106 * t64 + 0.2e1 * t91 * t97, 0.2e1 * t168 * t90 - 0.2e1 * t59 * t65 + 0.2e1 * t219, 0.2e1 * t106 * t97 - 0.2e1 * t168 * t59 + 0.2e1 * t289, -0.2e1 * t156 * t288 - 0.2e1 * t228, 0.4e1 * t252 * t91 + 0.2e1 * t297 * t89, -0.2e1 * t161 * t218 - 0.2e1 * t250 * t90, -0.2e1 * t155 * t288 + 0.2e1 * t228, 0.2e1 * t158 * t218 - 0.2e1 * t249 * t90, t257, 0.2e1 * t14 * t90 + 0.2e1 * t158 * t219 + 0.2e1 * t40 * t65 + 0.2e1 * t55 * t91, 0.2e1 * t13 * t90 + 0.2e1 * t161 * t219 - 0.2e1 * t41 * t65 - 0.2e1 * t54 * t91, 0.2e1 * t212 * t64 + 0.2e1 * t296 * t91, -0.2e1 * t13 * t41 + 0.2e1 * t14 * t40 + 0.2e1 * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t247, t144, t57, t56, 0, 0, 0, 0, t71, 0, -t199, t144, t275 * t229 + t30, -t274 * t229 - t31 (-t274 * t199 - t275 * t71) * pkin(3) (t274 * t31 + t275 * t30) * pkin(3), 0, 0, -t174, 0, -t34, t144, t108 * t269 + t119 * t144 - t165, t107 * t269 - t120 * t144 + t8, -t107 * t60 + t108 * t61 + t119 * t174 - t120 * t34, t107 * t23 - t108 * t22 - t119 * t165 - t120 * t8, t16, t10, t29, t17, -t206, 0, t108 * t51 + t115 * t27 - t116 * t29 - t272 * t60 + t239, t108 * t52 - t115 * t26 + t116 * t206 - t271 * t60 + t293, -t1 + (-t107 * t51 - t116 * t27 + (t116 * t52 - t11) * qJD(6)) * t161 + (t107 * t52 - t116 * t26 - t3 + (t116 * t51 - t12) * qJD(6)) * t158, -t107 * t215 + t108 * t20 + t115 * t7 + t116 * t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, 0, -t262, 0, -pkin(9) * t261, pkin(9) * t262, 0, 0, 0, 0, t203, 0, -t268, 0, t83, -t84 (-t275 * t203 - t274 * t268) * pkin(3) (t274 * t84 + t275 * t83) * pkin(3), 0, 0, -t64, 0, -t65, 0, -t37, t168, t119 * t64 - t120 * t65 + t217, t59 * t107 - t37 * t119 - t120 * t168 + t278, -t44, t38, t48, t44, -t204, 0, t54 + (qJD(6) * t214 - t37) * t161 + t187 * t158, t161 * t187 - t214 * t259 + t285, t4, -t107 * t211 + t115 * t37 + t116 * t4 + t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t108, -0.2e1 * t107, 0, 0.2e1 * t107 * t120 - 0.2e1 * t108 * t119, t140, t129, 0, t141, 0, 0, 0.2e1 * t233, 0.2e1 * t277, 0.2e1 * t76, 0.2e1 * t108 * t115 + 0.2e1 * t116 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t71, 0, t75, 0, 0, 0, 0, 0, 0, t34, -t174, 0, t49, 0, 0, 0, 0, 0, 0, -t206, -t29, -t207 + t286, -t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, t203, 0, t253, 0, 0, 0, 0, 0, 0, t65, -t64, 0, t97, 0, 0, 0, 0, 0, 0, -t204, -t48, t266 * t64, -t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, 0, -t34, t144, -t165, t8, 0, 0, t16, t10, t29, t17, -t206, 0, -pkin(5) * t27 - pkin(11) * t29 + t239, pkin(5) * t26 + pkin(11) * t206 + t293 (-t284 - t281 + (t280 + t283) * qJD(6)) * pkin(11) + t183, -pkin(5) * t7 + pkin(11) * t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, 0, -t65, 0, -t37, t168, 0, 0, -t44, t38, t48, t44, -t204, 0, t54 + (pkin(5) * t64 - pkin(11) * t65) * t158 + (-t37 + (-pkin(5) * t91 - pkin(11) * t90) * qJD(6)) * t161, pkin(5) * t205 + pkin(11) * t204 + t285, t4, -pkin(5) * t37 + pkin(11) * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, -t107, 0, 0, t140, t129, 0, t141, 0, 0, t233 - t255, -t254 + t277, t76, -pkin(5) * t108 + pkin(11) * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, t129, 0, t141, 0, 0, -0.2e1 * t255, -0.2e1 * t254, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, 0, -t27, t34, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, 0, t158 * t64 - t249, t65, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, 0, -t259, 0, -t116 * t153 - t272, t116 * t259 - t271, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t153, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, 0, -t259, 0, -pkin(11) * t153, pkin(11) * t259, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
