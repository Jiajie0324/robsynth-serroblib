% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 11:45
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 11:43:01
% EndTime: 2019-05-07 11:45:11
% DurationCPUTime: 131.96s
% Computational Cost: add. (1728386->1203), mult. (3838758->1821), div. (0->0), fcn. (3173858->14), ass. (0->854)
t2160 = sin(pkin(12));
t2166 = sin(qJ(3));
t2171 = cos(qJ(3));
t2163 = cos(pkin(6));
t2354 = qJD(1) * t2163;
t2291 = qJD(2) + t2354;
t2161 = sin(pkin(6));
t2167 = sin(qJ(2));
t2320 = t2161 * t2167;
t2308 = qJD(1) * t2320;
t2119 = t2166 * t2308 - t2171 * t2291;
t2120 = t2166 * t2291 + t2171 * t2308;
t2162 = cos(pkin(12));
t2089 = -t2119 * t2160 + t2120 * t2162;
t2287 = t2119 * t2162 + t2120 * t2160;
t2030 = t2089 * t2287;
t2172 = cos(qJ(2));
t2311 = qJDD(1) * t2161;
t2129 = -qJD(2) * t2308 + t2172 * t2311;
t2123 = -qJDD(3) + t2129;
t2372 = -t2030 - t2123;
t2379 = t2160 * t2372;
t2378 = t2162 * t2372;
t2355 = qJD(1) * t2161;
t2164 = sin(qJ(6));
t2165 = sin(qJ(5));
t2170 = cos(qJ(5));
t2024 = t2089 * t2170 - t2165 * t2287;
t2352 = qJD(1) * t2172;
t2298 = qJD(2) * t2352;
t2310 = t2167 * qJDD(1);
t2128 = (t2298 + t2310) * t2161;
t2283 = qJDD(1) * t2163 + qJDD(2);
t2186 = -t2171 * t2128 - t2166 * t2283;
t2076 = -t2119 * qJD(3) - t2186;
t2185 = -t2166 * t2128 + t2171 * t2283;
t2177 = -t2120 * qJD(3) + t2185;
t2013 = t2162 * t2076 + t2160 * t2177;
t2288 = t2076 * t2160 - t2162 * t2177;
t2289 = t2165 * t2013 + t2170 * t2288;
t1900 = -t2024 * qJD(5) - t2289;
t1899 = qJDD(6) - t1900;
t2169 = cos(qJ(6));
t2319 = t2161 * t2172;
t2147 = qJD(1) * t2319 - qJD(3);
t2223 = -qJD(5) + t2147;
t1999 = t2024 * t2164 + t2169 * t2223;
t2001 = t2024 * t2169 - t2164 * t2223;
t1930 = t2001 * t1999;
t2369 = t1899 - t1930;
t2377 = t2164 * t2369;
t2022 = t2089 * t2165 + t2170 * t2287;
t1958 = t2024 * t2022;
t2121 = -qJDD(5) + t2123;
t2368 = -t1958 - t2121;
t2376 = t2165 * t2368;
t2375 = t2169 * t2369;
t2374 = t2170 * t2368;
t1901 = -qJD(5) * t2022 + t2013 * t2170 - t2165 * t2288;
t2011 = t2022 * t2223;
t2373 = t2011 + t1901;
t2222 = t2223 ^ 2;
t2281 = t2287 ^ 2;
t2282 = t2291 ^ 2;
t2331 = t2120 * t2119;
t2184 = -t2123 - t2331;
t2371 = t2166 * t2184;
t2370 = t2171 * t2184;
t2270 = qJD(4) * t2287;
t2085 = -0.2e1 * t2270;
t2168 = sin(qJ(1));
t2173 = cos(qJ(1));
t2150 = g(1) * t2173 + g(2) * t2168;
t2365 = qJD(1) ^ 2;
t2124 = -pkin(1) * t2365 + pkin(8) * t2311 - t2150;
t2361 = pkin(2) * t2172;
t2276 = -pkin(9) * t2167 - t2361;
t2127 = t2276 * t2355;
t2149 = t2168 * g(1) - g(2) * t2173;
t2357 = pkin(8) * t2161;
t2182 = qJDD(1) * pkin(1) + t2357 * t2365 + t2149;
t2178 = t2163 * t2182;
t2176 = -g(3) * t2320 + t2167 * t2178;
t2039 = t2283 * pkin(9) - t2282 * pkin(2) + (t2127 * t2355 + t2124) * t2172 + t2176;
t2271 = qJD(1) * t2291;
t2219 = t2172 * t2271;
t2220 = t2167 * t2271;
t2356 = t2163 * g(3);
t2040 = -t2129 * pkin(2) - t2128 * pkin(9) - t2356 + (pkin(2) * t2220 - pkin(9) * t2219 - t2182) * t2161;
t1965 = t2166 * t2039 - t2040 * t2171;
t2106 = t2119 * t2147;
t2052 = -t2106 + t2076;
t1902 = pkin(3) * t2184 - qJ(4) * t2052 - t1965;
t1966 = t2039 * t2171 + t2040 * t2166;
t2098 = -pkin(3) * t2147 - qJ(4) * t2120;
t2364 = t2119 ^ 2;
t1910 = -pkin(3) * t2364 + qJ(4) * t2177 + t2098 * t2147 + t1966;
t2313 = t1902 * t2160 + t1910 * t2162;
t1826 = t2085 + t2313;
t2066 = -pkin(4) * t2147 - pkin(10) * t2089;
t1765 = -pkin(4) * t2281 - pkin(10) * t2288 + t2066 * t2147 + t1826;
t1825 = 0.2e1 * qJD(4) * t2089 - t2162 * t1902 + t2160 * t1910;
t2072 = t2287 * t2147;
t1985 = -t2072 + t2013;
t2175 = pkin(4) * t2372 - pkin(10) * t1985 - t1825;
t1681 = t1765 * t2170 + t2165 * t2175;
t1954 = pkin(5) * t2022 - pkin(11) * t2024;
t1668 = -pkin(5) * t2222 - pkin(11) * t2121 - t1954 * t2022 + t1681;
t2286 = t2167 * t2124 - t2172 * t2178;
t2353 = qJD(1) * t2167;
t2038 = -t2283 * pkin(2) - t2282 * pkin(9) + (g(3) * t2172 + t2127 * t2353) * t2161 + t2286;
t1946 = -pkin(3) * t2177 - qJ(4) * t2364 + t2120 * t2098 + qJDD(4) + t2038;
t1840 = pkin(4) * t2288 - pkin(10) * t2281 + t2089 * t2066 + t1946;
t2208 = t2223 * t2024;
t1739 = -t2373 * pkin(11) + (-t1900 - t2208) * pkin(5) + t1840;
t1625 = t1668 * t2164 - t1739 * t2169;
t1626 = t1668 * t2169 + t1739 * t2164;
t1567 = t1625 * t2164 + t1626 * t2169;
t2367 = t2072 + t2013;
t2157 = t2161 ^ 2;
t2366 = (t2163 ^ 2 + t2157) * t2355 + qJD(2) * t2163 * t2161;
t1997 = t1999 ^ 2;
t1998 = t2001 ^ 2;
t2019 = qJD(6) + t2022;
t2018 = t2019 ^ 2;
t2020 = t2022 ^ 2;
t2021 = t2024 ^ 2;
t2088 = t2089 ^ 2;
t2118 = t2120 ^ 2;
t2363 = t2147 ^ 2;
t2362 = pkin(2) * t2167;
t1734 = -t1825 * t2162 + t1826 * t2160;
t2360 = pkin(3) * t1734;
t2325 = t2147 * t2089;
t1982 = t2288 + t2325;
t1890 = -t1982 * t2160 - t1985 * t2162;
t2359 = pkin(3) * t1890;
t2358 = pkin(5) * t2165;
t1680 = t1765 * t2165 - t2170 * t2175;
t1619 = -t1680 * t2170 + t1681 * t2165;
t2351 = t1619 * t2160;
t2350 = t1619 * t2162;
t2349 = t1734 * t2166;
t2348 = t1734 * t2171;
t1832 = t1899 + t1930;
t2347 = t1832 * t2164;
t2346 = t1832 * t2169;
t2345 = t1840 * t2165;
t2344 = t1840 * t2170;
t1941 = -t1958 + t2121;
t2343 = t1941 * t2165;
t2342 = t1941 * t2170;
t2341 = t1946 * t2160;
t2340 = t1946 * t2162;
t2007 = -t2030 + t2123;
t2339 = t2007 * t2160;
t2338 = t2007 * t2162;
t2337 = t2019 * t2164;
t2336 = t2019 * t2169;
t2335 = t2038 * t2166;
t2334 = t2038 * t2171;
t2067 = t2123 - t2331;
t2333 = t2067 * t2166;
t2332 = t2067 * t2171;
t2330 = t2123 * t2167;
t2322 = t2157 * t2365;
t2146 = t2172 * t2167 * t2322;
t2125 = -t2146 + t2283;
t2329 = t2125 * t2167;
t2328 = t2125 * t2172;
t2126 = t2146 + t2283;
t2327 = t2126 * t2167;
t2326 = t2126 * t2172;
t2324 = t2147 * t2166;
t2323 = t2147 * t2171;
t2321 = t2160 * t2089;
t2318 = t2162 * t2089;
t2317 = t2163 * t2167;
t1667 = pkin(5) * t2121 - pkin(11) * t2222 + t1954 * t2024 + t1680;
t1663 = t2164 * t1667;
t2109 = t2161 * t2182 + t2356;
t2316 = t2167 * t2109;
t1664 = t2169 * t1667;
t2315 = t2172 * t2109;
t2314 = -pkin(5) * t1667 + pkin(11) * t1567;
t2158 = t2167 ^ 2;
t2159 = t2172 ^ 2;
t2312 = t2158 + t2159;
t2309 = -pkin(5) * t2170 - pkin(4);
t2306 = t2165 * t1930;
t2305 = t2170 * t1930;
t2304 = t2167 * t1958;
t2303 = t2172 * t1958;
t2302 = t2167 * t2331;
t2301 = t2172 * t2331;
t2300 = t2158 * t2322;
t2299 = t2159 * t2322;
t1905 = -t1998 - t2018;
t1779 = -t1905 * t2164 - t2346;
t2241 = -t2169 * t1901 + t2164 * t2121;
t1815 = (qJD(6) + t2019) * t1999 + t2241;
t2297 = pkin(5) * t1815 + pkin(11) * t1779 + t1663;
t1897 = -t2018 - t1997;
t1768 = t1897 * t2169 - t2377;
t1945 = t2019 * t2001;
t2290 = -t2164 * t1901 - t2121 * t2169;
t2212 = qJD(6) * t2001 - t2290;
t1811 = -t1945 - t2212;
t2296 = pkin(5) * t1811 + pkin(11) * t1768 - t1664;
t1541 = t1567 * t2165 - t1667 * t2170;
t2295 = pkin(4) * t1541 + t2314;
t1994 = -t2021 - t2222;
t1887 = t1994 * t2170 + t2343;
t2294 = pkin(4) * t1887 - t1681;
t1620 = t1680 * t2165 + t1681 * t2170;
t1556 = t1620 * t2160 + t2350;
t1614 = pkin(4) * t1619;
t2293 = pkin(3) * t1556 + t1614;
t1860 = t2024 * t2147 + t2289;
t1863 = -t2011 + t1901;
t1782 = -t1860 * t2165 - t1863 * t2170;
t1784 = -t1860 * t2170 + t1863 * t2165;
t1691 = t1782 * t2162 + t1784 * t2160;
t1780 = pkin(4) * t1782;
t2292 = pkin(3) * t1691 + t1780;
t1735 = t1825 * t2160 + t1826 * t2162;
t1875 = t1965 * t2166 + t1966 * t2171;
t2285 = -t2149 * t2168 - t2150 * t2173;
t1812 = (-qJD(6) + t2019) * t2001 + t2290;
t1842 = -qJD(6) * t1999 - t2241;
t1944 = t2019 * t1999;
t1814 = t1842 + t1944;
t1729 = t1812 * t2169 + t1814 * t2164;
t1881 = t1997 + t1998;
t2280 = pkin(5) * t1881 + pkin(11) * t1729 + t1567;
t1708 = t1779 * t2165 + t1815 * t2170;
t2279 = pkin(4) * t1708 + t2297;
t1704 = t1768 * t2165 + t1811 * t2170;
t2278 = pkin(4) * t1704 + t2296;
t2060 = -t2088 - t2363;
t1963 = t2060 * t2162 + t2339;
t2277 = pkin(3) * t1963 - t2313;
t2145 = qJDD(1) * t2173 - t2168 * t2365;
t2275 = -pkin(7) * t2145 - g(3) * t2168;
t1950 = -t2222 - t2020;
t1865 = t1950 * t2165 + t2374;
t2274 = pkin(4) * t1865 - t1680;
t2115 = -t2300 - t2282;
t2090 = -t2115 * t2167 - t2328;
t2273 = pkin(8) * t2090 - t2316;
t2133 = -t2282 - t2299;
t2095 = t2133 * t2172 - t2327;
t2272 = pkin(8) * t2095 + t2315;
t2269 = t2157 * t2167 * t2298;
t1697 = t1729 * t2165 + t1881 * t2170;
t2268 = pkin(4) * t1697 + t2280;
t1542 = t1567 * t2170 + t1667 * t2165;
t1510 = t1541 * t2162 + t1542 * t2160;
t1511 = -t1541 * t2160 + t1542 * t2162;
t1487 = -t1510 * t2166 + t1511 * t2171;
t1566 = -t1625 * t2169 + t1626 * t2164;
t2267 = t1487 * t2167 - t1566 * t2172;
t1557 = t1620 * t2162 - t2351;
t1519 = -t1556 * t2166 + t1557 * t2171;
t2266 = t1519 * t2167 - t1840 * t2172;
t1698 = t1729 * t2170 - t1881 * t2165;
t1632 = t1697 * t2162 + t1698 * t2160;
t1633 = -t1697 * t2160 + t1698 * t2162;
t1569 = -t1632 * t2166 + t1633 * t2171;
t1727 = t1812 * t2164 - t1814 * t2169;
t2265 = t1569 * t2167 - t1727 * t2172;
t1813 = t1842 - t1944;
t1728 = t1811 * t2169 - t1813 * t2164;
t1928 = t1998 - t1997;
t1701 = t1728 * t2165 - t1928 * t2170;
t1702 = t1728 * t2170 + t1928 * t2165;
t1636 = t1701 * t2162 + t1702 * t2160;
t1637 = -t1701 * t2160 + t1702 * t2162;
t1575 = -t1636 * t2166 + t1637 * t2171;
t1726 = t1811 * t2164 + t1813 * t2169;
t2264 = t1575 * t2167 - t1726 * t2172;
t1705 = t1768 * t2170 - t1811 * t2165;
t1639 = t1704 * t2162 + t1705 * t2160;
t1640 = -t1704 * t2160 + t1705 * t2162;
t1577 = -t1639 * t2166 + t1640 * t2171;
t1767 = t1897 * t2164 + t2375;
t2263 = t1577 * t2167 - t1767 * t2172;
t1709 = t1779 * t2170 - t1815 * t2165;
t1645 = t1708 * t2162 + t1709 * t2160;
t1646 = -t1708 * t2160 + t1709 * t2162;
t1579 = -t1645 * t2166 + t1646 * t2171;
t1778 = t1905 * t2169 - t2347;
t2262 = t1579 * t2167 - t1778 * t2172;
t1940 = -t1998 + t2018;
t1797 = -t1940 * t2164 + t2375;
t1717 = t1797 * t2165 - t1814 * t2170;
t1719 = t1797 * t2170 + t1814 * t2165;
t1652 = t1717 * t2162 + t1719 * t2160;
t1654 = -t1717 * t2160 + t1719 * t2162;
t1585 = -t1652 * t2166 + t1654 * t2171;
t1795 = t1940 * t2169 + t2377;
t2261 = t1585 * t2167 - t1795 * t2172;
t1939 = t1997 - t2018;
t1798 = t1939 * t2169 - t2347;
t1810 = -t1945 + t2212;
t1718 = t1798 * t2165 + t1810 * t2170;
t1720 = t1798 * t2170 - t1810 * t2165;
t1653 = t1718 * t2162 + t1720 * t2160;
t1655 = -t1718 * t2160 + t1720 * t2162;
t1586 = -t1653 * t2166 + t1655 * t2171;
t1796 = t1939 * t2164 + t2346;
t2260 = t1586 * t2167 - t1796 * t2172;
t1805 = t1999 * t2336 + t2164 * t2212;
t1755 = t1805 * t2165 + t2305;
t1757 = t1805 * t2170 - t2306;
t1676 = t1755 * t2162 + t1757 * t2160;
t1678 = -t1755 * t2160 + t1757 * t2162;
t1617 = -t1676 * t2166 + t1678 * t2171;
t1804 = -t1999 * t2337 + t2169 * t2212;
t2259 = t1617 * t2167 + t1804 * t2172;
t1807 = t1842 * t2169 - t2001 * t2337;
t1756 = t1807 * t2165 - t2305;
t1758 = t1807 * t2170 + t2306;
t1677 = t1756 * t2162 + t1758 * t2160;
t1679 = -t1756 * t2160 + t1758 * t2162;
t1618 = -t1677 * t2166 + t1679 * t2171;
t1806 = t1842 * t2164 + t2001 * t2336;
t2258 = t1618 * t2167 - t1806 * t2172;
t1859 = (0.2e1 * qJD(5) - t2147) * t2024 + t2289;
t1781 = -t1859 * t2165 + t2170 * t2373;
t1783 = -t1859 * t2170 - t2165 * t2373;
t1690 = t1781 * t2162 + t1783 * t2160;
t1692 = -t1781 * t2160 + t1783 * t2162;
t1630 = -t1690 * t2166 + t1692 * t2171;
t1956 = t2021 - t2020;
t2257 = t1630 * t2167 - t1956 * t2172;
t1693 = -t1782 * t2160 + t1784 * t2162;
t1631 = -t1691 * t2166 + t1693 * t2171;
t1909 = -t2020 - t2021;
t2256 = t1631 * t2167 - t1909 * t2172;
t1857 = (-t1999 * t2169 + t2001 * t2164) * t2019;
t1800 = t1857 * t2165 - t1899 * t2170;
t1801 = t1857 * t2170 + t1899 * t2165;
t1710 = t1800 * t2162 + t1801 * t2160;
t1711 = -t1800 * t2160 + t1801 * t2162;
t1649 = -t1710 * t2166 + t1711 * t2171;
t1856 = (-t1999 * t2164 - t2001 * t2169) * t2019;
t2255 = t1649 * t2167 - t1856 * t2172;
t1659 = t1735 * t2171 - t2349;
t2254 = t1659 * t2167 - t1946 * t2172;
t1866 = t1950 * t2170 - t2376;
t1785 = t1865 * t2162 + t1866 * t2160;
t1786 = -t1865 * t2160 + t1866 * t2162;
t1695 = -t1785 * t2166 + t1786 * t2171;
t2253 = t1695 * t2167 - t1859 * t2172;
t1888 = -t1994 * t2165 + t2342;
t1802 = t1887 * t2162 + t1888 * t2160;
t1803 = -t1887 * t2160 + t1888 * t2162;
t1724 = -t1802 * t2166 + t1803 * t2171;
t2252 = t1724 * t2167 - t2172 * t2373;
t2006 = -t2021 + t2222;
t1893 = t2006 * t2170 + t2376;
t1895 = -t2006 * t2165 + t2374;
t1821 = t1893 * t2162 + t1895 * t2160;
t1823 = -t1893 * t2160 + t1895 * t2162;
t1732 = -t1821 * t2166 + t1823 * t2171;
t2251 = t1732 * t2167 - t1863 * t2172;
t2005 = t2020 - t2222;
t1894 = t2005 * t2165 - t2342;
t1896 = t2005 * t2170 + t2343;
t1822 = t1894 * t2162 + t1896 * t2160;
t1824 = -t1894 * t2160 + t1896 * t2162;
t1733 = -t1822 * t2166 + t1824 * t2171;
t2250 = t1733 * t2167 + t1860 * t2172;
t2187 = t2170 * t2208;
t2190 = t2165 * t2011;
t1935 = t2190 + t2187;
t2188 = t2170 * t2011;
t2189 = t2165 * t2208;
t1936 = t2188 - t2189;
t1845 = t1935 * t2162 + t1936 * t2160;
t1846 = -t1935 * t2160 + t1936 * t2162;
t1762 = -t1845 * t2166 + t1846 * t2171;
t2249 = t1762 * t2167 + t2121 * t2172;
t1981 = t2288 - t2325;
t1889 = -t1981 * t2160 + t2162 * t2367;
t1891 = -t1981 * t2162 - t2160 * t2367;
t1819 = -t1889 * t2166 + t1891 * t2171;
t2025 = t2088 - t2281;
t2248 = t1819 * t2167 - t2025 * t2172;
t1892 = -t1982 * t2162 + t1985 * t2160;
t1820 = -t1890 * t2166 + t1892 * t2171;
t1989 = -t2281 - t2088;
t2247 = t1820 * t2167 - t1989 * t2172;
t2015 = -t2363 - t2281;
t1937 = t2015 * t2160 + t2378;
t1938 = t2015 * t2162 - t2379;
t1848 = -t1937 * t2166 + t1938 * t2171;
t2246 = t1848 * t2167 - t1981 * t2172;
t1964 = -t2060 * t2160 + t2338;
t1873 = -t1963 * t2166 + t1964 * t2171;
t2245 = t1873 * t2167 - t2172 * t2367;
t2244 = t1875 * t2167 - t2038 * t2172;
t2071 = -t2088 + t2363;
t1969 = t2071 * t2162 + t2379;
t1971 = -t2071 * t2160 + t2378;
t1878 = -t1969 * t2166 + t1971 * t2171;
t2243 = t1878 * t2167 - t1985 * t2172;
t2070 = t2281 - t2363;
t1970 = t2070 * t2160 - t2338;
t1972 = t2070 * t2162 + t2339;
t1879 = -t1970 * t2166 + t1972 * t2171;
t2242 = t1879 * t2167 + t1982 * t2172;
t1874 = -t1965 * t2171 + t1966 * t2166;
t2107 = t2147 * t2120;
t2049 = t2107 + t2177;
t2051 = t2106 + t2076;
t1979 = t2049 * t2171 - t2051 * t2166;
t2091 = -t2118 + t2364;
t2240 = t1979 * t2167 + t2091 * t2172;
t2050 = (-qJD(3) - t2147) * t2120 + t2185;
t1980 = t2050 * t2171 + t2052 * t2166;
t2065 = t2118 + t2364;
t2239 = t1980 * t2167 + t2065 * t2172;
t2081 = -t2363 - t2364;
t2003 = t2081 * t2171 - t2371;
t2238 = t2003 * t2167 + t2049 * t2172;
t2092 = -t2118 - t2363;
t2017 = -t2092 * t2166 + t2332;
t2053 = (qJD(3) - t2147) * t2119 + t2186;
t2237 = t2017 * t2167 + t2053 * t2172;
t2100 = -t2118 + t2363;
t2028 = -t2100 * t2166 + t2370;
t2236 = t2028 * t2167 - t2052 * t2172;
t2099 = -t2363 + t2364;
t2029 = t2099 * t2171 + t2333;
t2048 = t2107 - t2177;
t2235 = t2029 * t2167 + t2048 * t2172;
t2083 = g(3) * t2319 + t2286;
t2084 = t2172 * t2124 + t2176;
t2234 = -t2172 * t2083 + t2167 * t2084;
t2014 = t2083 * t2167 + t2084 * t2172;
t2137 = t2161 * t2219;
t2102 = t2137 + t2128;
t2136 = t2161 * t2220;
t2105 = t2129 - t2136;
t2233 = t2102 * t2172 + t2105 * t2167;
t2103 = -t2137 + t2128;
t2104 = t2129 + t2136;
t2232 = -t2103 * t2172 + t2104 * t2167;
t2231 = t2115 * t2172 - t2329;
t2132 = -t2282 + t2299;
t2230 = t2132 * t2167 + t2328;
t2131 = t2282 - t2300;
t2229 = t2131 * t2172 + t2327;
t2228 = t2133 * t2167 + t2326;
t2227 = t2149 * t2173 - t2150 * t2168;
t2226 = pkin(3) * t1510 + t2295;
t2225 = pkin(3) * t1802 + t2294;
t2224 = t2161 * t2283;
t2221 = t2161 * t2271;
t2218 = t2167 * t2030;
t2217 = t2172 * t2030;
t1852 = t1900 * t2170 - t2190;
t1853 = -t1900 * t2165 - t2188;
t1773 = t1852 * t2162 + t1853 * t2160;
t1775 = -t1852 * t2160 + t1853 * t2162;
t1688 = -t1773 * t2166 + t1775 * t2171;
t2216 = t1688 * t2167 + t2303;
t1854 = t1901 * t2165 - t2187;
t1855 = t1901 * t2170 + t2189;
t1774 = t1854 * t2162 + t1855 * t2160;
t1776 = -t1854 * t2160 + t1855 * t2162;
t1689 = -t1774 * t2166 + t1776 * t2171;
t2215 = t1689 * t2167 - t2303;
t2043 = -t2119 * t2323 - t2166 * t2177;
t2214 = t2043 * t2167 + t2301;
t2045 = t2076 * t2171 + t2120 * t2324;
t2213 = t2045 * t2167 - t2301;
t2211 = pkin(3) * t1639 + t2278;
t2210 = pkin(3) * t1645 + t2279;
t2209 = pkin(3) * t1785 + t2274;
t1488 = pkin(10) * t1542 + (-pkin(11) * t2165 + t2309) * t1566;
t1502 = -pkin(10) * t1541 + (-pkin(11) * t2170 + t2358) * t1566;
t1471 = -pkin(3) * t1566 + qJ(4) * t1511 + t1488 * t2162 + t1502 * t2160;
t1473 = -qJ(4) * t1510 - t1488 * t2160 + t1502 * t2162;
t1486 = t1510 * t2171 + t1511 * t2166;
t1456 = -pkin(9) * t1486 - t1471 * t2166 + t1473 * t2171;
t1472 = -pkin(2) * t1486 - t2226;
t1485 = t1487 * t2172 + t1566 * t2167;
t2207 = pkin(8) * t1485 + t1456 * t2167 + t1472 * t2172;
t1547 = -pkin(11) * t1727 - t1566;
t1528 = pkin(10) * t1698 + t2165 * t1547 + t1727 * t2309;
t1535 = -pkin(10) * t1697 + t1547 * t2170 + t1727 * t2358;
t1491 = -pkin(3) * t1727 + qJ(4) * t1633 + t1528 * t2162 + t1535 * t2160;
t1494 = -qJ(4) * t1632 - t1528 * t2160 + t1535 * t2162;
t1568 = t1632 * t2171 + t1633 * t2166;
t1477 = -pkin(9) * t1568 - t1491 * t2166 + t1494 * t2171;
t2192 = pkin(3) * t1632 + t2268;
t1509 = -pkin(2) * t1568 - t2192;
t1548 = t1569 * t2172 + t1727 * t2167;
t2206 = pkin(8) * t1548 + t1477 * t2167 + t1509 * t2172;
t1598 = -pkin(5) * t1767 + t1625;
t1650 = -pkin(11) * t1767 + t1663;
t1538 = -pkin(4) * t1767 + pkin(10) * t1705 + t1598 * t2170 + t1650 * t2165;
t1543 = -pkin(10) * t1704 - t1598 * t2165 + t1650 * t2170;
t1503 = -pkin(3) * t1767 + qJ(4) * t1640 + t1538 * t2162 + t1543 * t2160;
t1505 = -qJ(4) * t1639 - t1538 * t2160 + t1543 * t2162;
t1576 = t1639 * t2171 + t1640 * t2166;
t1480 = -pkin(9) * t1576 - t1503 * t2166 + t1505 * t2171;
t1520 = -pkin(2) * t1576 - t2211;
t1561 = t1577 * t2172 + t1767 * t2167;
t2205 = pkin(8) * t1561 + t1480 * t2167 + t1520 * t2172;
t1599 = -pkin(5) * t1778 + t1626;
t1651 = -pkin(11) * t1778 + t1664;
t1539 = -pkin(4) * t1778 + pkin(10) * t1709 + t1599 * t2170 + t1651 * t2165;
t1544 = -pkin(10) * t1708 - t1599 * t2165 + t1651 * t2170;
t1504 = -pkin(3) * t1778 + qJ(4) * t1646 + t1539 * t2162 + t1544 * t2160;
t1506 = -qJ(4) * t1645 - t1539 * t2160 + t1544 * t2162;
t1578 = t1645 * t2171 + t1646 * t2166;
t1481 = -pkin(9) * t1578 - t1504 * t2166 + t1506 * t2171;
t1521 = -pkin(2) * t1578 - t2210;
t1564 = t1579 * t2172 + t1778 * t2167;
t2204 = pkin(8) * t1564 + t1481 * t2167 + t1521 * t2172;
t1605 = -pkin(4) * t1840 + pkin(10) * t1620;
t1513 = -pkin(3) * t1840 - pkin(10) * t2351 + qJ(4) * t1557 + t1605 * t2162;
t1515 = -pkin(10) * t2350 - qJ(4) * t1556 - t1605 * t2160;
t1518 = t1556 * t2171 + t1557 * t2166;
t1484 = -pkin(9) * t1518 - t1513 * t2166 + t1515 * t2171;
t1497 = -pkin(2) * t1518 - t2293;
t1514 = t1519 * t2172 + t1840 * t2167;
t2203 = pkin(8) * t1514 + t1484 * t2167 + t1497 * t2172;
t1595 = -pkin(4) * t1909 + pkin(10) * t1784 + t1620;
t1596 = -pkin(10) * t1782 - t1619;
t1536 = -pkin(3) * t1909 + qJ(4) * t1693 + t1595 * t2162 + t1596 * t2160;
t1537 = -qJ(4) * t1691 - t1595 * t2160 + t1596 * t2162;
t1629 = t1691 * t2171 + t1693 * t2166;
t1496 = -pkin(9) * t1629 - t1536 * t2166 + t1537 * t2171;
t1582 = -pkin(2) * t1629 - t2292;
t1609 = t1631 * t2172 + t1909 * t2167;
t2202 = pkin(8) * t1609 + t1496 * t2167 + t1582 * t2172;
t1738 = -pkin(4) * t1859 + pkin(10) * t1866 - t2344;
t1763 = -pkin(10) * t1865 + t2345;
t1622 = -pkin(3) * t1859 + qJ(4) * t1786 + t1738 * t2162 + t1763 * t2160;
t1647 = -qJ(4) * t1785 - t1738 * t2160 + t1763 * t2162;
t1694 = t1785 * t2171 + t1786 * t2166;
t1546 = -pkin(9) * t1694 - t1622 * t2166 + t1647 * t2171;
t1594 = -pkin(2) * t1694 - t2209;
t1666 = t1695 * t2172 + t1859 * t2167;
t2201 = pkin(8) * t1666 + t1546 * t2167 + t1594 * t2172;
t1745 = -pkin(4) * t2373 + pkin(10) * t1888 + t2345;
t1789 = -pkin(10) * t1887 + t2344;
t1638 = -pkin(3) * t2373 + qJ(4) * t1803 + t1745 * t2162 + t1789 * t2160;
t1657 = -qJ(4) * t1802 - t1745 * t2160 + t1789 * t2162;
t1723 = t1802 * t2171 + t1803 * t2166;
t1558 = -pkin(9) * t1723 - t1638 * t2166 + t1657 * t2171;
t1603 = -pkin(2) * t1723 - t2225;
t1682 = t1724 * t2172 + t2167 * t2373;
t2200 = pkin(8) * t1682 + t1558 * t2167 + t1603 * t2172;
t1658 = t1735 * t2166 + t2348;
t1706 = -pkin(3) * t1946 + qJ(4) * t1735;
t1590 = -pkin(9) * t1658 - qJ(4) * t2348 - t1706 * t2166;
t1606 = -pkin(2) * t1658 - t2360;
t1656 = t1659 * t2172 + t1946 * t2167;
t2199 = pkin(8) * t1656 + t1590 * t2167 + t1606 * t2172;
t1683 = -pkin(3) * t1989 + qJ(4) * t1892 + t1735;
t1699 = -qJ(4) * t1890 - t1734;
t1818 = t1890 * t2171 + t1892 * t2166;
t1604 = -pkin(9) * t1818 - t1683 * t2166 + t1699 * t2171;
t1751 = -pkin(2) * t1818 - t2359;
t1790 = t1820 * t2172 + t1989 * t2167;
t2198 = pkin(8) * t1790 + t1604 * t2167 + t1751 * t2172;
t1828 = -pkin(3) * t1981 + qJ(4) * t1938 - t2340;
t1847 = t1937 * t2171 + t1938 * t2166;
t1851 = -qJ(4) * t1937 + t2341;
t1716 = -pkin(9) * t1847 - t1828 * t2166 + t1851 * t2171;
t2179 = pkin(3) * t1937 - t1825;
t1740 = -pkin(2) * t1847 - t2179;
t1827 = t1848 * t2172 + t1981 * t2167;
t2197 = pkin(8) * t1827 + t1716 * t2167 + t1740 * t2172;
t1830 = -pkin(3) * t2367 + qJ(4) * t1964 + t2341;
t1869 = -qJ(4) * t1963 + t2340;
t1872 = t1963 * t2171 + t1964 * t2166;
t1736 = -pkin(9) * t1872 - t1830 * t2166 + t1869 * t2171;
t1746 = -pkin(2) * t1872 + t2085 - t2277;
t1834 = t1873 * t2172 + t2167 * t2367;
t2196 = pkin(8) * t1834 + t1736 * t2167 + t1746 * t2172;
t2002 = t2081 * t2166 + t2370;
t1911 = -pkin(2) * t2002 + t1965;
t1951 = -pkin(9) * t2002 + t2335;
t1957 = t2003 * t2172 - t2049 * t2167;
t2195 = pkin(8) * t1957 + t1911 * t2172 + t1951 * t2167;
t2016 = t2092 * t2171 + t2333;
t1914 = -pkin(2) * t2016 + t1966;
t1959 = -pkin(9) * t2016 + t2334;
t1960 = t2017 * t2172 - t2053 * t2167;
t2194 = pkin(8) * t1960 + t1914 * t2172 + t1959 * t2167;
t2061 = t2103 * t2167 + t2104 * t2172;
t2193 = pkin(8) * t2061 + t2014;
t1978 = t2050 * t2166 - t2052 * t2171;
t1835 = -pkin(9) * t1978 - t1874;
t1929 = t1980 * t2172 - t2065 * t2167;
t2191 = pkin(8) * t1929 + t1835 * t2167 - t1978 * t2361;
t1843 = t1875 * t2172 + t2038 * t2167;
t2183 = pkin(8) * t1843 + t1874 * t2276;
t1973 = -t2072 * t2160 - t2162 * t2288;
t1974 = -t2072 * t2162 + t2160 * t2288;
t1884 = -t1973 * t2166 + t1974 * t2171;
t2181 = t2167 * t1884 + t2217;
t1975 = t2013 * t2160 - t2147 * t2318;
t1976 = t2013 * t2162 + t2147 * t2321;
t1885 = -t1975 * t2166 + t1976 * t2171;
t2180 = t2167 * t1885 - t2217;
t2144 = qJDD(1) * t2168 + t2173 * t2365;
t2141 = t2163 * t2283;
t2135 = t2312 * t2322;
t2134 = (t2158 - t2159) * t2322;
t2130 = -pkin(7) * t2144 + g(3) * t2173;
t2111 = t2163 * t2172 * t2123;
t2110 = t2123 * t2319;
t2108 = t2291 * t2312 * t2355;
t2101 = (t2310 + (0.2e1 * qJD(2) + t2354) * t2352) * t2161;
t2097 = t2172 * t2128 - t2158 * t2221;
t2096 = -t2167 * t2129 - t2159 * t2221;
t2094 = t2132 * t2172 - t2329;
t2093 = -t2131 * t2167 + t2326;
t2080 = (t2163 * t2128 + t2352 * t2366) * t2167;
t2079 = t2128 * t2320 + t2269;
t2078 = t2129 * t2319 - t2269;
t2077 = (t2163 * t2129 - t2353 * t2366) * t2172;
t2064 = (t2119 * t2171 - t2120 * t2166) * t2147;
t2063 = (t2119 * t2166 + t2120 * t2171) * t2147;
t2062 = -t2102 * t2167 + t2105 * t2172;
t2059 = t2161 * t2105 + t2163 * t2228;
t2058 = -t2161 * t2104 + t2163 * t2230;
t2057 = -t2161 * t2103 + t2163 * t2229;
t2056 = -t2163 * t2105 + t2161 * t2228;
t2055 = t2163 * t2104 + t2161 * t2230;
t2054 = t2163 * t2103 + t2161 * t2229;
t2047 = -t2161 * t2101 + t2163 * t2231;
t2046 = t2163 * t2101 + t2161 * t2231;
t2044 = t2076 * t2166 - t2120 * t2323;
t2042 = -t2119 * t2324 + t2171 * t2177;
t2041 = t2064 * t2172 - t2330;
t2037 = -t2161 * t2134 + t2163 * t2233;
t2036 = t2161 * t2135 + t2163 * t2232;
t2035 = t2163 * t2134 + t2161 * t2233;
t2034 = -t2163 * t2135 + t2161 * t2232;
t2027 = t2099 * t2166 - t2332;
t2026 = t2100 * t2171 + t2371;
t1996 = (t2162 * t2287 - t2321) * t2147;
t1995 = (t2160 * t2287 + t2318) * t2147;
t1993 = t2045 * t2172 + t2302;
t1992 = t2043 * t2172 - t2302;
t1991 = t2161 * t2109 + t2163 * t2234;
t1990 = -t2163 * t2109 + t2161 * t2234;
t1988 = -t2063 * t2161 + t2064 * t2317 + t2111;
t1987 = t2063 * t2163 + t2064 * t2320 + t2110;
t1977 = t2049 * t2166 + t2051 * t2171;
t1968 = t2029 * t2172 - t2048 * t2167;
t1967 = t2028 * t2172 + t2052 * t2167;
t1961 = -t2316 + (-t2056 * t2161 - t2059 * t2163) * pkin(8);
t1955 = -t2315 + (-t2046 * t2161 - t2047 * t2163) * pkin(8);
t1953 = -pkin(1) * t2056 + t2161 * t2083 + t2163 * t2272;
t1952 = pkin(1) * t2059 - t2163 * t2083 + t2161 * t2272;
t1949 = t1979 * t2172 - t2091 * t2167;
t1948 = -pkin(1) * t2046 + t2161 * t2084 + t2163 * t2273;
t1947 = pkin(1) * t2047 - t2163 * t2084 + t2161 * t2273;
t1934 = -t2161 * t2044 + t2163 * t2213;
t1933 = -t2161 * t2042 + t2163 * t2214;
t1932 = t2163 * t2044 + t2161 * t2213;
t1931 = t2163 * t2042 + t2161 * t2214;
t1927 = -t1995 * t2166 + t1996 * t2171;
t1926 = t1995 * t2171 + t1996 * t2166;
t1925 = pkin(1) * t1991 + t2014 * t2357;
t1924 = pkin(8) * t2014 * t2163 - pkin(1) * t1990;
t1923 = t1927 * t2172 - t2330;
t1922 = -pkin(1) * t2034 + t2163 * t2193;
t1921 = pkin(1) * t2036 + t2161 * t2193;
t1920 = pkin(2) * t2053 + pkin(9) * t2017 + t2335;
t1919 = -t2161 * t2027 + t2163 * t2235;
t1918 = -t2161 * t2026 + t2163 * t2236;
t1917 = t2163 * t2027 + t2161 * t2235;
t1916 = t2163 * t2026 + t2161 * t2236;
t1915 = (-t1990 * t2161 - t1991 * t2163) * pkin(8);
t1913 = pkin(2) * t2049 + pkin(9) * t2003 - t2334;
t1912 = (-t2034 * t2161 - t2036 * t2163) * pkin(8) - t2234;
t1908 = -t2161 * t2016 + t2163 * t2237;
t1907 = t2163 * t2016 + t2161 * t2237;
t1904 = -t2161 * t2002 + t2163 * t2238;
t1903 = t2163 * t2002 + t2161 * t2238;
t1883 = t1975 * t2171 + t1976 * t2166;
t1882 = t1973 * t2171 + t1974 * t2166;
t1877 = t1970 * t2171 + t1972 * t2166;
t1876 = t1969 * t2171 + t1971 * t2166;
t1871 = -t2161 * t1977 + t2163 * t2240;
t1870 = t2163 * t1977 + t2161 * t2240;
t1868 = -t2161 * t1978 + t2163 * t2239;
t1867 = t2163 * t1978 + t2161 * t2239;
t1850 = t1885 * t2172 + t2218;
t1849 = t1884 * t2172 - t2218;
t1844 = -pkin(2) * t2038 + pkin(9) * t1875;
t1839 = -t1926 * t2161 + t1927 * t2317 + t2111;
t1838 = t1926 * t2163 + t1927 * t2320 + t2110;
t1837 = t1879 * t2172 - t1982 * t2167;
t1836 = t1878 * t2172 + t1985 * t2167;
t1829 = pkin(2) * t2065 + pkin(9) * t1980 + t1875;
t1817 = t1889 * t2171 + t1891 * t2166;
t1799 = t1819 * t2172 + t2025 * t2167;
t1794 = -t2161 * t1883 + t2163 * t2180;
t1793 = -t2161 * t1882 + t2163 * t2181;
t1792 = t2163 * t1883 + t2161 * t2180;
t1791 = t2163 * t1882 + t2161 * t2181;
t1788 = -t2161 * t1874 + t2163 * t2244;
t1787 = t2163 * t1874 + t2161 * t2244;
t1772 = -t2161 * t1877 + t2163 * t2242;
t1771 = -t2161 * t1876 + t2163 * t2243;
t1770 = t2163 * t1877 + t2161 * t2242;
t1769 = t2163 * t1876 + t2161 * t2243;
t1761 = t1845 * t2171 + t1846 * t2166;
t1760 = -t2161 * t1872 + t2163 * t2245;
t1759 = t2163 * t1872 + t2161 * t2245;
t1754 = t1762 * t2172 - t2121 * t2167;
t1750 = -t2161 * t1847 + t2163 * t2246;
t1749 = t2163 * t1847 + t2161 * t2246;
t1748 = -t2167 * t1914 + t2172 * t1959 + (-t1907 * t2161 - t1908 * t2163) * pkin(8);
t1747 = -t2167 * t1911 + t2172 * t1951 + (-t1903 * t2161 - t1904 * t2163) * pkin(8);
t1744 = -pkin(1) * t1907 - t2161 * t1920 + t2163 * t2194;
t1743 = pkin(1) * t1908 + t2163 * t1920 + t2161 * t2194;
t1742 = -pkin(1) * t1903 - t2161 * t1913 + t2163 * t2195;
t1741 = pkin(1) * t1904 + t2163 * t1913 + t2161 * t2195;
t1731 = t1822 * t2171 + t1824 * t2166;
t1730 = t1821 * t2171 + t1823 * t2166;
t1722 = -t2161 * t1817 + t2163 * t2248;
t1721 = t2163 * t1817 + t2161 * t2248;
t1715 = -t2161 * t1818 + t2163 * t2247;
t1714 = t2163 * t1818 + t2161 * t2247;
t1713 = -pkin(2) * t2367 + pkin(9) * t1873 + t1830 * t2171 + t1869 * t2166;
t1712 = t1978 * t2362 + t2172 * t1835 + (-t1867 * t2161 - t1868 * t2163) * pkin(8);
t1700 = -pkin(2) * t1981 + pkin(9) * t1848 + t1828 * t2171 + t1851 * t2166;
t1687 = t1774 * t2171 + t1776 * t2166;
t1686 = t1773 * t2171 + t1775 * t2166;
t1685 = t1733 * t2172 - t1860 * t2167;
t1684 = t1732 * t2172 + t1863 * t2167;
t1674 = -t2161 * t1761 + t2163 * t2249;
t1673 = t2163 * t1761 + t2161 * t2249;
t1672 = -pkin(1) * t1867 - t2161 * t1829 + t2163 * t2191;
t1671 = pkin(1) * t1868 + t2163 * t1829 + t2161 * t2191;
t1670 = t1689 * t2172 + t2304;
t1669 = t1688 * t2172 - t2304;
t1662 = (-pkin(9) * t2172 + t2362) * t1874 + (-t1787 * t2161 - t1788 * t2163) * pkin(8);
t1661 = -pkin(1) * t1787 - t2161 * t1844 + t2163 * t2183;
t1660 = pkin(1) * t1788 + t2163 * t1844 + t2161 * t2183;
t1648 = t1710 * t2171 + t1711 * t2166;
t1644 = -t2161 * t1731 + t2163 * t2250;
t1643 = -t2161 * t1730 + t2163 * t2251;
t1642 = t2163 * t1731 + t2161 * t2250;
t1641 = t2163 * t1730 + t2161 * t2251;
t1635 = -t2161 * t1723 + t2163 * t2252;
t1634 = t2163 * t1723 + t2161 * t2252;
t1628 = t1690 * t2171 + t1692 * t2166;
t1627 = t1649 * t2172 + t1856 * t2167;
t1621 = t1630 * t2172 + t1956 * t2167;
t1616 = t1677 * t2171 + t1679 * t2166;
t1615 = t1676 * t2171 + t1678 * t2166;
t1613 = -t2161 * t1687 + t2163 * t2215;
t1612 = -t2161 * t1686 + t2163 * t2216;
t1611 = t2163 * t1687 + t2161 * t2215;
t1610 = t2163 * t1686 + t2161 * t2216;
t1608 = -t2161 * t1694 + t2163 * t2253;
t1607 = t2163 * t1694 + t2161 * t2253;
t1602 = -pkin(2) * t1989 + pkin(9) * t1820 + t1683 * t2171 + t1699 * t2166;
t1601 = t1618 * t2172 + t1806 * t2167;
t1600 = t1617 * t2172 - t1804 * t2167;
t1597 = t2172 * t1736 - t2167 * t1746 + (-t1759 * t2161 - t1760 * t2163) * pkin(8);
t1593 = t2172 * t1716 - t2167 * t1740 + (-t1749 * t2161 - t1750 * t2163) * pkin(8);
t1592 = -pkin(1) * t1759 - t2161 * t1713 + t2163 * t2196;
t1591 = pkin(1) * t1760 + t2163 * t1713 + t2161 * t2196;
t1589 = -t2161 * t1658 + t2163 * t2254;
t1588 = t2163 * t1658 + t2161 * t2254;
t1587 = -pkin(2) * t1946 + pkin(9) * t1659 - qJ(4) * t2349 + t1706 * t2171;
t1584 = t1653 * t2171 + t1655 * t2166;
t1583 = t1652 * t2171 + t1654 * t2166;
t1581 = -pkin(1) * t1749 - t2161 * t1700 + t2163 * t2197;
t1580 = pkin(1) * t1750 + t2163 * t1700 + t2161 * t2197;
t1574 = t1636 * t2171 + t1637 * t2166;
t1573 = -t2161 * t1648 + t2163 * t2255;
t1572 = t2163 * t1648 + t2161 * t2255;
t1571 = t1586 * t2172 + t1796 * t2167;
t1570 = t1585 * t2172 + t1795 * t2167;
t1563 = -t2161 * t1628 + t2163 * t2257;
t1562 = t2163 * t1628 + t2161 * t2257;
t1560 = -t2161 * t1629 + t2163 * t2256;
t1559 = t2163 * t1629 + t2161 * t2256;
t1555 = t1575 * t2172 + t1726 * t2167;
t1554 = -pkin(2) * t2373 + pkin(9) * t1724 + t1638 * t2171 + t1657 * t2166;
t1553 = -t2161 * t1616 + t2163 * t2258;
t1552 = -t2161 * t1615 + t2163 * t2259;
t1551 = t2163 * t1616 + t2161 * t2258;
t1550 = t2163 * t1615 + t2161 * t2259;
t1549 = t2172 * t1604 - t2167 * t1751 + (-t1714 * t2161 - t1715 * t2163) * pkin(8);
t1545 = -pkin(2) * t1859 + pkin(9) * t1695 + t1622 * t2171 + t1647 * t2166;
t1534 = -pkin(1) * t1714 - t2161 * t1602 + t2163 * t2198;
t1533 = pkin(1) * t1715 + t2163 * t1602 + t2161 * t2198;
t1532 = -t2161 * t1584 + t2163 * t2260;
t1531 = -t2161 * t1583 + t2163 * t2261;
t1530 = t2163 * t1584 + t2161 * t2260;
t1529 = t2163 * t1583 + t2161 * t2261;
t1527 = -t2161 * t1578 + t2163 * t2262;
t1526 = t2163 * t1578 + t2161 * t2262;
t1525 = -t1576 * t2161 + t2163 * t2263;
t1524 = t2163 * t1576 + t2161 * t2263;
t1523 = -t2161 * t1574 + t2163 * t2264;
t1522 = t2163 * t1574 + t2161 * t2264;
t1517 = -t2161 * t1568 + t2163 * t2265;
t1516 = t2163 * t1568 + t2161 * t2265;
t1512 = t2172 * t1558 - t2167 * t1603 + (-t1634 * t2161 - t1635 * t2163) * pkin(8);
t1508 = t2172 * t1590 - t2167 * t1606 + (-t1588 * t2161 - t1589 * t2163) * pkin(8);
t1507 = t2172 * t1546 - t2167 * t1594 + (-t1607 * t2161 - t1608 * t2163) * pkin(8);
t1501 = -pkin(1) * t1588 - t2161 * t1587 + t2163 * t2199;
t1500 = pkin(1) * t1589 + t2163 * t1587 + t2161 * t2199;
t1499 = -pkin(1) * t1634 - t2161 * t1554 + t2163 * t2200;
t1498 = pkin(1) * t1635 + t2163 * t1554 + t2161 * t2200;
t1495 = -pkin(2) * t1909 + pkin(9) * t1631 + t1536 * t2171 + t1537 * t2166;
t1493 = -pkin(1) * t1607 - t2161 * t1545 + t2163 * t2201;
t1492 = pkin(1) * t1608 + t2163 * t1545 + t2161 * t2201;
t1490 = -t2161 * t1518 + t2163 * t2266;
t1489 = t2163 * t1518 + t2161 * t2266;
t1483 = -pkin(2) * t1840 + pkin(9) * t1519 + t1513 * t2171 + t1515 * t2166;
t1482 = t2172 * t1496 - t2167 * t1582 + (-t1559 * t2161 - t1560 * t2163) * pkin(8);
t1479 = -pkin(2) * t1778 + pkin(9) * t1579 + t1504 * t2171 + t1506 * t2166;
t1478 = -pkin(2) * t1767 + pkin(9) * t1577 + t1503 * t2171 + t1505 * t2166;
t1476 = -pkin(2) * t1727 + pkin(9) * t1569 + t1491 * t2171 + t1494 * t2166;
t1475 = -pkin(1) * t1559 - t2161 * t1495 + t2163 * t2202;
t1474 = pkin(1) * t1560 + t2163 * t1495 + t2161 * t2202;
t1470 = -t2161 * t1486 + t2163 * t2267;
t1469 = t2163 * t1486 + t2161 * t2267;
t1468 = t2172 * t1481 - t2167 * t1521 + (-t1526 * t2161 - t1527 * t2163) * pkin(8);
t1467 = t2172 * t1480 - t2167 * t1520 + (-t1524 * t2161 - t1525 * t2163) * pkin(8);
t1466 = t2172 * t1477 - t2167 * t1509 + (-t1516 * t2161 - t1517 * t2163) * pkin(8);
t1465 = t2172 * t1484 - t2167 * t1497 + (-t1489 * t2161 - t1490 * t2163) * pkin(8);
t1464 = -pkin(1) * t1526 - t2161 * t1479 + t2163 * t2204;
t1463 = pkin(1) * t1527 + t2163 * t1479 + t2161 * t2204;
t1462 = -pkin(1) * t1524 - t2161 * t1478 + t2163 * t2205;
t1461 = pkin(1) * t1525 + t2163 * t1478 + t2161 * t2205;
t1460 = -pkin(1) * t1489 - t2161 * t1483 + t2163 * t2203;
t1459 = pkin(1) * t1490 + t2163 * t1483 + t2161 * t2203;
t1458 = -pkin(1) * t1516 - t2161 * t1476 + t2163 * t2206;
t1457 = pkin(1) * t1517 + t2163 * t1476 + t2161 * t2206;
t1455 = -pkin(2) * t1566 + pkin(9) * t1487 + t1471 * t2171 + t1473 * t2166;
t1454 = t2172 * t1456 - t2167 * t1472 + (-t1469 * t2161 - t1470 * t2163) * pkin(8);
t1453 = -pkin(1) * t1469 - t2161 * t1455 + t2163 * t2207;
t1452 = pkin(1) * t1470 + t2163 * t1455 + t2161 * t2207;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2145, 0, -t2144, 0, t2275, -t2130, -t2227, -pkin(7) * t2227, -t2080 * t2168 + t2097 * t2173, -t2037 * t2168 + t2062 * t2173, -t2057 * t2168 + t2093 * t2173, -t2077 * t2168 + t2096 * t2173, -t2058 * t2168 + t2094 * t2173, t2108 * t2173 + t2168 * t2224, t2173 * t1961 - t2168 * t1953 - pkin(7) * (t2059 * t2173 + t2095 * t2168), t2173 * t1955 - t2168 * t1948 - pkin(7) * (t2047 * t2173 + t2090 * t2168), t2173 * t1912 - t2168 * t1922 - pkin(7) * (t2036 * t2173 + t2061 * t2168), t2173 * t1915 - t2168 * t1924 - pkin(7) * (t1991 * t2173 + t2014 * t2168), -t1934 * t2168 + t1993 * t2173, -t1871 * t2168 + t1949 * t2173, -t1918 * t2168 + t1967 * t2173, -t1933 * t2168 + t1992 * t2173, -t1919 * t2168 + t1968 * t2173, -t1988 * t2168 + t2041 * t2173, t2173 * t1747 - t2168 * t1742 - pkin(7) * (t1904 * t2173 + t1957 * t2168), t2173 * t1748 - t2168 * t1744 - pkin(7) * (t1908 * t2173 + t1960 * t2168), t2173 * t1712 - t2168 * t1672 - pkin(7) * (t1868 * t2173 + t1929 * t2168), t2173 * t1662 - t2168 * t1661 - pkin(7) * (t1788 * t2173 + t1843 * t2168), -t1794 * t2168 + t1850 * t2173, -t1722 * t2168 + t1799 * t2173, -t1771 * t2168 + t1836 * t2173, -t1793 * t2168 + t1849 * t2173, -t1772 * t2168 + t1837 * t2173, -t1839 * t2168 + t1923 * t2173, t2173 * t1593 - t2168 * t1581 - pkin(7) * (t1750 * t2173 + t1827 * t2168), t2173 * t1597 - t2168 * t1592 - pkin(7) * (t1760 * t2173 + t1834 * t2168), t2173 * t1549 - t2168 * t1534 - pkin(7) * (t1715 * t2173 + t1790 * t2168), t2173 * t1508 - t2168 * t1501 - pkin(7) * (t1589 * t2173 + t1656 * t2168), -t1613 * t2168 + t1670 * t2173, -t1563 * t2168 + t1621 * t2173, -t1643 * t2168 + t1684 * t2173, -t1612 * t2168 + t1669 * t2173, -t1644 * t2168 + t1685 * t2173, -t1674 * t2168 + t1754 * t2173, t2173 * t1507 - t2168 * t1493 - pkin(7) * (t1608 * t2173 + t1666 * t2168), t2173 * t1512 - t2168 * t1499 - pkin(7) * (t1635 * t2173 + t1682 * t2168), t2173 * t1482 - t2168 * t1475 - pkin(7) * (t1560 * t2173 + t1609 * t2168), t2173 * t1465 - t2168 * t1460 - pkin(7) * (t1490 * t2173 + t1514 * t2168), -t1553 * t2168 + t1601 * t2173, -t1523 * t2168 + t1555 * t2173, -t1531 * t2168 + t1570 * t2173, -t1552 * t2168 + t1600 * t2173, -t1532 * t2168 + t1571 * t2173, -t1573 * t2168 + t1627 * t2173, t2173 * t1467 - t2168 * t1462 - pkin(7) * (t1525 * t2173 + t1561 * t2168), t2173 * t1468 - t2168 * t1464 - pkin(7) * (t1527 * t2173 + t1564 * t2168), t2173 * t1466 - t2168 * t1458 - pkin(7) * (t1517 * t2173 + t1548 * t2168), t2173 * t1454 - t2168 * t1453 - pkin(7) * (t1470 * t2173 + t1485 * t2168); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2144, 0, t2145, 0, t2130, t2275, t2285, pkin(7) * t2285, t2080 * t2173 + t2097 * t2168, t2037 * t2173 + t2062 * t2168, t2057 * t2173 + t2093 * t2168, t2077 * t2173 + t2096 * t2168, t2058 * t2173 + t2094 * t2168, t2108 * t2168 - t2173 * t2224, t2168 * t1961 + t2173 * t1953 + pkin(7) * (-t2059 * t2168 + t2095 * t2173), t2168 * t1955 + t2173 * t1948 + pkin(7) * (-t2047 * t2168 + t2090 * t2173), t2168 * t1912 + t2173 * t1922 + pkin(7) * (-t2036 * t2168 + t2061 * t2173), t2168 * t1915 + t2173 * t1924 + pkin(7) * (-t1991 * t2168 + t2014 * t2173), t1934 * t2173 + t1993 * t2168, t1871 * t2173 + t1949 * t2168, t1918 * t2173 + t1967 * t2168, t1933 * t2173 + t1992 * t2168, t1919 * t2173 + t1968 * t2168, t1988 * t2173 + t2041 * t2168, t2168 * t1747 + t2173 * t1742 + pkin(7) * (-t1904 * t2168 + t1957 * t2173), t2168 * t1748 + t2173 * t1744 + pkin(7) * (-t1908 * t2168 + t1960 * t2173), t2168 * t1712 + t2173 * t1672 + pkin(7) * (-t1868 * t2168 + t1929 * t2173), t2168 * t1662 + t2173 * t1661 + pkin(7) * (-t1788 * t2168 + t1843 * t2173), t1794 * t2173 + t1850 * t2168, t1722 * t2173 + t1799 * t2168, t1771 * t2173 + t1836 * t2168, t1793 * t2173 + t1849 * t2168, t1772 * t2173 + t1837 * t2168, t1839 * t2173 + t1923 * t2168, t2168 * t1593 + t2173 * t1581 + pkin(7) * (-t1750 * t2168 + t1827 * t2173), t2168 * t1597 + t2173 * t1592 + pkin(7) * (-t1760 * t2168 + t1834 * t2173), t2168 * t1549 + t2173 * t1534 + pkin(7) * (-t1715 * t2168 + t1790 * t2173), t2168 * t1508 + t2173 * t1501 + pkin(7) * (-t1589 * t2168 + t1656 * t2173), t1613 * t2173 + t1670 * t2168, t1563 * t2173 + t1621 * t2168, t1643 * t2173 + t1684 * t2168, t1612 * t2173 + t1669 * t2168, t1644 * t2173 + t1685 * t2168, t1674 * t2173 + t1754 * t2168, t2168 * t1507 + t2173 * t1493 + pkin(7) * (-t1608 * t2168 + t1666 * t2173), t2168 * t1512 + t2173 * t1499 + pkin(7) * (-t1635 * t2168 + t1682 * t2173), t2168 * t1482 + t2173 * t1475 + pkin(7) * (-t1560 * t2168 + t1609 * t2173), t2168 * t1465 + t2173 * t1460 + pkin(7) * (-t1490 * t2168 + t1514 * t2173), t1553 * t2173 + t1601 * t2168, t1523 * t2173 + t1555 * t2168, t1531 * t2173 + t1570 * t2168, t1552 * t2173 + t1600 * t2168, t1532 * t2173 + t1571 * t2168, t1573 * t2173 + t1627 * t2168, t2168 * t1467 + t2173 * t1462 + pkin(7) * (-t1525 * t2168 + t1561 * t2173), t2168 * t1468 + t2173 * t1464 + pkin(7) * (-t1527 * t2168 + t1564 * t2173), t2168 * t1466 + t2173 * t1458 + pkin(7) * (-t1517 * t2168 + t1548 * t2173), t2168 * t1454 + t2173 * t1453 + pkin(7) * (-t1470 * t2168 + t1485 * t2173); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2149, t2150, 0, 0, t2079, t2035, t2054, t2078, t2055, t2141, t1952, t1947, t1921, t1925, t1932, t1870, t1916, t1931, t1917, t1987, t1741, t1743, t1671, t1660, t1792, t1721, t1769, t1791, t1770, t1838, t1580, t1591, t1533, t1500, t1611, t1562, t1641, t1610, t1642, t1673, t1492, t1498, t1474, t1459, t1551, t1522, t1529, t1550, t1530, t1572, t1461, t1463, t1457, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2365, 0, 0, -g(3), -t2149, 0, t2097, t2062, t2093, t2096, t2094, t2108, t1961, t1955, t1912, t1915, t1993, t1949, t1967, t1992, t1968, t2041, t1747, t1748, t1712, t1662, t1850, t1799, t1836, t1849, t1837, t1923, t1593, t1597, t1549, t1508, t1670, t1621, t1684, t1669, t1685, t1754, t1507, t1512, t1482, t1465, t1601, t1555, t1570, t1600, t1571, t1627, t1467, t1468, t1466, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2365, 0, qJDD(1), 0, g(3), 0, -t2150, 0, t2080, t2037, t2057, t2077, t2058, -t2224, t1953, t1948, t1922, t1924, t1934, t1871, t1918, t1933, t1919, t1988, t1742, t1744, t1672, t1661, t1794, t1722, t1771, t1793, t1772, t1839, t1581, t1592, t1534, t1501, t1613, t1563, t1643, t1612, t1644, t1674, t1493, t1499, t1475, t1460, t1553, t1523, t1531, t1552, t1532, t1573, t1462, t1464, t1458, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2149, t2150, 0, 0, t2079, t2035, t2054, t2078, t2055, t2141, t1952, t1947, t1921, t1925, t1932, t1870, t1916, t1931, t1917, t1987, t1741, t1743, t1671, t1660, t1792, t1721, t1769, t1791, t1770, t1838, t1580, t1591, t1533, t1500, t1611, t1562, t1641, t1610, t1642, t1673, t1492, t1498, t1474, t1459, t1551, t1522, t1529, t1550, t1530, t1572, t1461, t1463, t1457, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2128, t2105, t2126, -t2137, t2132, t2137, 0, -t2109, t2083, 0, t2045, t1979, t2028, t2043, t2029, t2064, t1951, t1959, t1835, -pkin(9) * t1874, t1885, t1819, t1878, t1884, t1879, t1927, t1716, t1736, t1604, t1590, t1689, t1630, t1732, t1688, t1733, t1762, t1546, t1558, t1496, t1484, t1618, t1575, t1585, t1617, t1586, t1649, t1480, t1481, t1477, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2136, t2102, t2131, t2129, t2125, -t2136, t2109, 0, t2084, 0, -t2331, t2091, -t2052, t2331, t2048, t2123, t1911, t1914, -pkin(2) * t1978, -pkin(2) * t1874, -t2030, -t2025, -t1985, t2030, t1982, t2123, t1740, t1746, t1751, t1606, -t1958, -t1956, -t1863, t1958, t1860, t2121, t1594, t1603, t1582, t1497, -t1806, -t1726, -t1795, t1804, -t1796, -t1856, t1520, t1521, t1509, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2146, t2134, t2103, t2146, t2104, t2283, -t2083, -t2084, 0, 0, t2044, t1977, t2026, t2042, t2027, t2063, t1913, t1920, t1829, t1844, t1883, t1817, t1876, t1882, t1877, t1926, t1700, t1713, t1602, t1587, t1687, t1628, t1730, t1686, t1731, t1761, t1545, t1554, t1495, t1483, t1616, t1574, t1583, t1615, t1584, t1648, t1478, t1479, t1476, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2076, t2049, t2184, -t2106, t2099, t2106, 0, t2038, t1965, 0, t1976, t1891, t1971, t1974, t1972, t1996, t1851, t1869, t1699, -qJ(4) * t1734, t1776, t1692, t1823, t1775, t1824, t1846, t1647, t1657, t1537, t1515, t1679, t1637, t1654, t1678, t1655, t1711, t1505, t1506, t1494, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2107, t2051, t2100, t2177, -t2067, t2107, -t2038, 0, t1966, 0, t1975, t1889, t1969, t1973, t1970, t1995, t1828, t1830, t1683, t1706, t1774, t1690, t1821, t1773, t1822, t1845, t1622, t1638, t1536, t1513, t1677, t1636, t1652, t1676, t1653, t1710, t1503, t1504, t1491, t1471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2331, -t2091, t2052, -t2331, -t2048, -t2123, -t1965, -t1966, 0, 0, t2030, t2025, t1985, -t2030, -t1982, -t2123, t2179, 0.2e1 * t2270 + t2277, t2359, t2360, t1958, t1956, t1863, -t1958, -t1860, -t2121, t2209, t2225, t2292, t2293, t1806, t1726, t1795, -t1804, t1796, t1856, t2211, t2210, t2192, t2226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2013, -t1981, t2372, -t2072, t2070, t2072, 0, t1946, t1825, 0, t1855, t1783, t1895, t1853, t1896, t1936, t1763, t1789, t1596, -pkin(10) * t1619, t1758, t1702, t1719, t1757, t1720, t1801, t1543, t1544, t1535, t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2325, t2367, t2071, -t2288, -t2007, t2325, -t1946, 0, t1826, 0, t1854, t1781, t1893, t1852, t1894, t1935, t1738, t1745, t1595, t1605, t1756, t1701, t1717, t1755, t1718, t1800, t1538, t1539, t1528, t1488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2030, t2025, t1985, -t2030, -t1982, -t2123, -t1825, -t1826, 0, 0, t1958, t1956, t1863, -t1958, -t1860, -t2121, t2274, t2294, t1780, t1614, t1806, t1726, t1795, -t1804, t1796, t1856, t2278, t2279, t2268, t2295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1901, -t1859, t2368, -t2011, t2005, t2011, 0, t1840, t1680, 0, t1807, t1728, t1797, t1805, t1798, t1857, t1650, t1651, t1547, -pkin(11) * t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2208, t2373, t2006, t1900, -t1941, t2208, -t1840, 0, t1681, 0, -t1930, -t1928, -t1814, t1930, t1810, -t1899, t1598, t1599, -pkin(5) * t1727, -pkin(5) * t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1958, t1956, t1863, -t1958, -t1860, -t2121, -t1680, -t1681, 0, 0, t1806, t1726, t1795, -t1804, t1796, t1856, t2296, t2297, t2280, t2314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1842, t1811, t2369, t1944, t1939, -t1944, 0, t1667, t1625, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1945, t1813, t1940, -t2212, t1832, -t1945, -t1667, 0, t1626, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1930, t1928, t1814, -t1930, -t1810, t1899, -t1625, -t1626, 0, 0;];
m_new_reg  = t1;
