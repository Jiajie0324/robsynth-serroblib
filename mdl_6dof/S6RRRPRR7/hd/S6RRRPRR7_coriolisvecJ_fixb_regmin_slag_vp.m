% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR7_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR7_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR7_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR7_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:39:27
% EndTime: 2019-03-09 18:39:51
% DurationCPUTime: 9.94s
% Computational Cost: add. (16391->516), mult. (42839->741), div. (0->0), fcn. (35447->12), ass. (0->271)
t275 = sin(qJ(3));
t276 = sin(qJ(2));
t279 = cos(qJ(3));
t280 = cos(qJ(2));
t270 = sin(pkin(6));
t358 = qJD(1) * t270;
t338 = t276 * t358;
t272 = cos(pkin(6));
t357 = qJD(1) * t272;
t344 = pkin(1) * t357;
t218 = -pkin(8) * t338 + t280 * t344;
t294 = (pkin(2) * t276 - pkin(9) * t280) * t270;
t219 = qJD(1) * t294;
t321 = -t218 * t275 + t279 * t219;
t392 = -qJ(4) - pkin(9);
t327 = qJD(3) * t392;
t366 = t279 * t280;
t428 = -(pkin(3) * t276 - qJ(4) * t366) * t358 - t321 - qJD(4) * t275 + t279 * t327;
t356 = qJD(1) * t280;
t337 = t270 * t356;
t317 = t275 * t337;
t361 = t279 * t218 + t275 * t219;
t427 = -qJ(4) * t317 - qJD(4) * t279 - t275 * t327 + t361;
t273 = sin(qJ(6));
t250 = -qJD(3) + t337;
t242 = -qJD(5) + t250;
t345 = qJD(1) * qJD(2);
t329 = t270 * t345;
t254 = t276 * t329;
t277 = cos(qJ(6));
t347 = qJD(6) * t277;
t348 = qJD(6) * t273;
t260 = qJD(2) + t357;
t318 = t275 * t338;
t194 = -t279 * t260 + t318;
t196 = t260 * t275 + t279 * t338;
t269 = sin(pkin(12));
t271 = cos(pkin(12));
t160 = t194 * t269 - t196 * t271;
t274 = sin(qJ(5));
t278 = cos(qJ(5));
t298 = t194 * t271 + t196 * t269;
t401 = -t278 * t160 - t274 * t298;
t316 = t280 * t329;
t351 = qJD(3) * t279;
t170 = -qJD(3) * t318 + t260 * t351 + t279 * t316;
t353 = qJD(2) * t280;
t334 = t275 * t353;
t352 = qJD(3) * t275;
t171 = (t276 * t351 + t334) * t358 + t260 * t352;
t128 = t170 * t271 - t171 * t269;
t158 = t278 * t298;
t299 = -t170 * t269 - t171 * t271;
t350 = qJD(5) * t274;
t50 = -qJD(5) * t158 + t278 * t128 + t160 * t350 + t274 * t299;
t29 = -t242 * t347 + t273 * t254 + t277 * t50 - t348 * t401;
t27 = t29 * t273;
t104 = -t160 * t274 + t158;
t422 = t104 * t277;
t97 = -t242 * t273 + t277 * t401;
t426 = t27 + (t347 + t422) * t97;
t346 = -qJD(6) - t104;
t51 = qJD(5) * t401 + t274 * t128 - t278 * t299;
t47 = t273 * t51;
t386 = -t346 * t347 + t47;
t387 = t401 * t97;
t425 = -t346 * t422 + t386 - t387;
t405 = pkin(10) * t160;
t257 = t276 * t344;
t221 = pkin(8) * t337 + t257;
t184 = pkin(9) * t260 + t221;
t214 = (-pkin(2) * t280 - pkin(9) * t276 - pkin(1)) * t270;
t190 = qJD(1) * t214;
t153 = -t184 * t275 + t279 * t190;
t126 = -qJ(4) * t196 + t153;
t113 = -pkin(3) * t250 + t126;
t154 = t184 * t279 + t190 * t275;
t127 = -qJ(4) * t194 + t154;
t119 = t269 * t127;
t73 = t271 * t113 - t119;
t54 = -pkin(4) * t250 + t405 + t73;
t404 = pkin(10) * t298;
t367 = t271 * t127;
t74 = t269 * t113 + t367;
t56 = t74 - t404;
t17 = -t274 * t56 + t278 * t54;
t15 = pkin(5) * t242 - t17;
t424 = t104 * t15;
t378 = t104 * t242;
t423 = t50 - t378;
t421 = t401 * t104;
t234 = t269 * t279 + t271 * t275;
t178 = t234 * t337;
t227 = t234 * qJD(3);
t409 = t227 - t178;
t233 = -t269 * t275 + t271 * t279;
t179 = t233 * t337;
t228 = t233 * qJD(3);
t417 = -t228 + t179;
t420 = -t104 ^ 2 + t401 ^ 2;
t62 = pkin(5) * t401 + pkin(11) * t104;
t183 = -t260 * pkin(2) - t218;
t159 = t194 * pkin(3) + qJD(4) + t183;
t108 = pkin(4) * t298 + t159;
t220 = qJD(2) * t294;
t204 = qJD(1) * t220;
t369 = t270 * t276;
t261 = pkin(8) * t369;
t394 = pkin(1) * t280;
t222 = (t272 * t394 - t261) * qJD(2);
t205 = qJD(1) * t222;
t283 = -qJD(3) * t154 + t279 * t204 - t275 * t205;
t75 = pkin(3) * t254 - qJ(4) * t170 - qJD(4) * t196 + t283;
t291 = -t184 * t352 + t190 * t351 + t275 * t204 + t279 * t205;
t80 = -qJ(4) * t171 - qJD(4) * t194 + t291;
t37 = -t269 * t80 + t271 * t75;
t23 = pkin(4) * t254 - pkin(10) * t128 + t37;
t38 = t269 * t75 + t271 * t80;
t25 = pkin(10) * t299 + t38;
t349 = qJD(5) * t278;
t326 = -t274 * t23 - t278 * t25 - t54 * t349 + t56 * t350;
t419 = t104 * t108 + t326;
t30 = qJD(6) * t97 - t277 * t254 + t273 * t50;
t95 = t277 * t242 + t273 * t401;
t306 = t273 * t97 + t277 * t95;
t418 = -t104 * t306 - t273 * t30 + t29 * t277 - t95 * t347 - t348 * t97;
t385 = t427 * t269 + t271 * t428;
t400 = t269 * t428 - t427 * t271;
t388 = t401 * t95;
t413 = -pkin(4) * t338 + pkin(10) * t417 + t385;
t412 = -pkin(10) * t409 + t400;
t380 = t401 * t242;
t411 = -t51 - t380;
t410 = t346 * t401;
t18 = t274 * t54 + t278 * t56;
t285 = -qJD(5) * t18 + t278 * t23 - t274 * t25;
t5 = -pkin(5) * t254 - t285;
t16 = -pkin(11) * t242 + t18;
t43 = t104 * pkin(5) - pkin(11) * t401 + t108;
t9 = t16 * t277 + t273 * t43;
t408 = t15 * t347 + t5 * t273 + t9 * t401;
t407 = -t108 * t401 + t285;
t309 = t16 * t273 - t277 * t43;
t406 = t15 * t348 - t5 * t277 + t309 * t401;
t297 = t278 * t233 - t234 * t274;
t133 = qJD(5) * t297 - t227 * t274 + t228 * t278;
t147 = -t178 * t274 + t179 * t278;
t365 = t133 - t147;
t173 = t233 * t274 + t234 * t278;
t364 = qJD(5) * t173 - t417 * t274 + t409 * t278;
t402 = -t221 + (-t317 + t352) * pkin(3);
t251 = t392 * t275;
t252 = t392 * t279;
t181 = t271 * t251 + t252 * t269;
t166 = -pkin(10) * t234 + t181;
t182 = t269 * t251 - t271 * t252;
t167 = pkin(10) * t233 + t182;
t116 = t166 * t274 + t167 * t278;
t399 = qJD(5) * t116 + t274 * t412 - t278 * t413;
t49 = t277 * t51;
t398 = -t346 * t348 - t49;
t301 = t166 * t278 - t167 * t274;
t397 = qJD(5) * t301 + t274 * t413 + t278 * t412;
t363 = pkin(4) * t409 + t402;
t368 = t270 * t280;
t213 = pkin(8) * t368 + (pkin(1) * t276 + pkin(9)) * t272;
t362 = t279 * t213 + t275 * t214;
t264 = pkin(3) * t271 + pkin(4);
t393 = pkin(3) * t269;
t360 = t274 * t264 + t278 * t393;
t229 = -t272 * t279 + t275 * t369;
t230 = t272 * t275 + t279 * t369;
t169 = -t229 * t269 + t230 * t271;
t322 = -t213 * t275 + t279 * t214;
t137 = -pkin(3) * t368 - qJ(4) * t230 + t322;
t144 = -qJ(4) * t229 + t362;
t89 = t271 * t137 - t144 * t269;
t67 = -pkin(4) * t368 - pkin(10) * t169 + t89;
t168 = -t229 * t271 - t230 * t269;
t90 = t269 * t137 + t271 * t144;
t69 = pkin(10) * t168 + t90;
t303 = t274 * t67 + t278 * t69;
t175 = qJD(3) * t230 + t270 * t334;
t335 = t270 * t353;
t176 = -qJD(3) * t229 + t279 * t335;
t143 = -t175 * t269 + t176 * t271;
t355 = qJD(2) * t276;
t336 = t270 * t355;
t284 = -qJD(3) * t362 + t279 * t220 - t222 * t275;
t87 = pkin(3) * t336 - qJ(4) * t176 - qJD(4) * t230 + t284;
t290 = -t213 * t352 + t214 * t351 + t275 * t220 + t279 * t222;
t91 = -qJ(4) * t175 - qJD(4) * t229 + t290;
t45 = -t269 * t91 + t271 * t87;
t34 = pkin(4) * t336 - pkin(10) * t143 + t45;
t142 = -t175 * t271 - t176 * t269;
t46 = t269 * t87 + t271 * t91;
t36 = pkin(10) * t142 + t46;
t396 = -qJD(5) * t303 - t274 * t36 + t278 * t34;
t206 = pkin(8) * t316 + qJD(2) * t257;
t150 = t171 * pkin(3) + t206;
t92 = -pkin(4) * t299 + t150;
t11 = t51 * pkin(5) - t50 * pkin(11) + t92;
t4 = pkin(11) * t254 - t326;
t1 = -qJD(6) * t309 + t11 * t273 + t277 * t4;
t390 = pkin(5) * t338 + t399;
t295 = t264 * t278 - t274 * t393;
t78 = -t126 * t269 - t367;
t60 = t78 + t404;
t79 = t271 * t126 - t119;
t61 = t79 + t405;
t384 = t295 * qJD(5) - t274 * t60 - t278 * t61;
t383 = qJD(5) * t360 - t274 * t61 + t278 * t60;
t381 = t346 * t273;
t376 = t173 * t273;
t375 = t173 * t277;
t374 = t194 * t250;
t373 = t196 * t250;
t372 = t250 * t275;
t371 = t250 * t279;
t266 = t270 ^ 2;
t370 = t266 * qJD(1) ^ 2;
t223 = t272 * pkin(1) * t355 + pkin(8) * t335;
t359 = t276 ^ 2 - t280 ^ 2;
t354 = qJD(2) * t279;
t343 = t276 * t370;
t342 = t273 * t368;
t340 = -pkin(3) * t279 - pkin(2);
t339 = t266 * t356;
t330 = t266 * t345;
t130 = pkin(3) * t196 - pkin(4) * t160;
t217 = pkin(11) + t360;
t324 = qJD(6) * t217 + t130 + t62;
t320 = t260 + t357;
t319 = 0.2e1 * t330;
t315 = pkin(3) * t175 + t223;
t203 = -pkin(4) * t233 + t340;
t114 = -pkin(5) * t297 - pkin(11) * t173 + t203;
t314 = pkin(11) * t338 - qJD(6) * t114 - t397;
t313 = -t364 * pkin(5) + t365 * pkin(11) + qJD(6) * t116 - t363;
t312 = -0.2e1 * pkin(1) * t330;
t310 = -t217 * t51 + t424;
t32 = -pkin(11) * t368 + t303;
t118 = t168 * t274 + t169 * t278;
t212 = t261 + (-pkin(2) - t394) * t272;
t286 = pkin(3) * t229 + t212;
t129 = -pkin(4) * t168 + t286;
t300 = t278 * t168 - t169 * t274;
t52 = -pkin(5) * t300 - pkin(11) * t118 + t129;
t308 = t273 * t52 + t277 * t32;
t307 = -t273 * t32 + t277 * t52;
t304 = -t274 * t69 + t278 * t67;
t296 = t104 * t381 - t398;
t109 = t118 * t273 + t277 * t368;
t293 = t274 * t34 + t278 * t36 + t67 * t349 - t350 * t69;
t100 = -pkin(4) * t142 + t315;
t131 = t147 * t273 - t277 * t338;
t289 = t133 * t273 + t173 * t347 - t131;
t132 = t147 * t277 + t273 * t338;
t288 = t133 * t277 - t173 * t348 - t132;
t2 = -qJD(6) * t9 + t277 * t11 - t273 * t4;
t216 = -pkin(5) - t295;
t110 = t118 * t277 - t342;
t58 = qJD(5) * t118 - t278 * t142 + t143 * t274;
t57 = qJD(5) * t300 + t142 * t274 + t143 * t278;
t40 = -qJD(6) * t342 + t118 * t347 + t273 * t57 - t277 * t336;
t39 = -qJD(6) * t109 + t273 * t336 + t277 * t57;
t31 = pkin(5) * t368 - t304;
t12 = pkin(5) * t58 - pkin(11) * t57 + t100;
t7 = -pkin(5) * t336 - t396;
t6 = pkin(11) * t336 + t293;
t3 = [0, 0, 0, t276 * t280 * t319, -t359 * t319, t320 * t335, -t320 * t336, 0, -t206 * t272 - t223 * t260 + t276 * t312, -t205 * t272 - t222 * t260 + t280 * t312, t170 * t230 + t176 * t196, -t170 * t229 - t171 * t230 - t175 * t196 - t176 * t194, -t176 * t250 + (-t170 * t280 + (qJD(1) * t230 + t196) * t355) * t270, t175 * t250 + (t171 * t280 + (-qJD(1) * t229 - t194) * t355) * t270 (-t250 * t270 - t339) * t355, -t284 * t250 + t223 * t194 + t212 * t171 + t206 * t229 + t183 * t175 + (-t283 * t280 + (qJD(1) * t322 + t153) * t355) * t270, t290 * t250 + t223 * t196 + t212 * t170 + t206 * t230 + t183 * t176 + (t291 * t280 + (-qJD(1) * t362 - t154) * t355) * t270, -t89 * t128 + t74 * t142 - t73 * t143 + t160 * t45 + t38 * t168 - t37 * t169 - t298 * t46 + t299 * t90, t150 * t286 + t159 * t315 + t37 * t89 + t38 * t90 + t73 * t45 + t74 * t46, t118 * t50 + t401 * t57, -t104 * t57 - t118 * t51 + t300 * t50 - t401 * t58, -t242 * t57 + (-t280 * t50 + (qJD(1) * t118 + t401) * t355) * t270, t242 * t58 + (t280 * t51 + (qJD(1) * t300 - t104) * t355) * t270 (-t242 * t270 - t339) * t355, -t396 * t242 + t100 * t104 + t129 * t51 - t92 * t300 + t108 * t58 + (-t285 * t280 + (qJD(1) * t304 + t17) * t355) * t270, t293 * t242 + t100 * t401 + t129 * t50 + t92 * t118 + t108 * t57 + (-t326 * t280 + (-qJD(1) * t303 - t18) * t355) * t270, t110 * t29 + t39 * t97, -t109 * t29 - t110 * t30 - t39 * t95 - t40 * t97, t110 * t51 - t29 * t300 - t346 * t39 + t58 * t97, -t109 * t51 + t30 * t300 + t346 * t40 - t58 * t95, -t300 * t51 - t346 * t58 -(-qJD(6) * t308 + t12 * t277 - t273 * t6) * t346 + t307 * t51 - t2 * t300 - t309 * t58 + t7 * t95 + t31 * t30 + t5 * t109 + t15 * t40 (qJD(6) * t307 + t12 * t273 + t277 * t6) * t346 - t308 * t51 + t1 * t300 - t9 * t58 + t7 * t97 + t31 * t29 + t5 * t110 + t15 * t39; 0, 0, 0, -t280 * t343, t359 * t370 (qJD(2) - t260) * t337, t260 * t338 - t254, 0, pkin(1) * t343 + t221 * t260 - t206, pkin(8) * t254 + t218 * t260 + (-t272 * t345 + t370) * t394, t170 * t275 - t196 * t371 (t170 + t374) * t279 + (-t171 + t373) * t275, -t250 * t351 + (t250 * t366 + (qJD(2) * t275 - t196) * t276) * t358, t250 * t352 + (-t280 * t372 + (t194 + t354) * t276) * t358, t250 * t338, -pkin(2) * t171 - t206 * t279 + t321 * t250 - t221 * t194 + (pkin(9) * t371 + t183 * t275) * qJD(3) + (-t153 * t276 + (-pkin(9) * t355 - t183 * t280) * t275) * t358, -pkin(2) * t170 + t206 * t275 - t361 * t250 - t221 * t196 + (-pkin(9) * t372 + t183 * t279) * qJD(3) + (-t183 * t366 + (-pkin(9) * t354 + t154) * t276) * t358, -t181 * t128 + t385 * t160 + t182 * t299 + t38 * t233 - t37 * t234 - t400 * t298 - t409 * t74 + t417 * t73, t150 * t340 + t402 * t159 + t37 * t181 + t38 * t182 + t385 * t73 + t400 * t74, t173 * t50 + t365 * t401, -t104 * t365 - t173 * t51 + t297 * t50 - t364 * t401, -t365 * t242 + (qJD(2) * t173 - t401) * t338, t364 * t242 + (qJD(2) * t297 + t104) * t338, t242 * t338, -t92 * t297 + t203 * t51 + t399 * t242 + t364 * t108 + t363 * t104 + (qJD(2) * t301 - t17) * t338, t92 * t173 + t203 * t50 + t397 * t242 + t365 * t108 + t363 * t401 + (-qJD(2) * t116 + t18) * t338, t288 * t97 + t29 * t375, t131 * t97 + t132 * t95 - t306 * t133 + (-t27 - t277 * t30 + (t273 * t95 - t277 * t97) * qJD(6)) * t173, -t288 * t346 - t29 * t297 + t364 * t97 + t375 * t51, t289 * t346 + t297 * t30 - t364 * t95 - t376 * t51, -t297 * t51 - t346 * t364 (t114 * t277 - t116 * t273) * t51 - t2 * t297 - t301 * t30 + t5 * t376 + t390 * t95 - t364 * t309 - (t273 * t314 - t277 * t313) * t346 + t289 * t15 -(t114 * t273 + t116 * t277) * t51 + t1 * t297 - t301 * t29 + t5 * t375 + t390 * t97 - t364 * t9 - (t273 * t313 + t277 * t314) * t346 + t288 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196 * t194, -t194 ^ 2 + t196 ^ 2, t170 - t374, -t171 - t373, t254, -t154 * t250 - t183 * t196 + t283, -t153 * t250 + t183 * t194 - t291 (-t271 * t128 + t269 * t299) * pkin(3) + (t79 - t73) * t298 + (-t74 - t78) * t160, -t73 * t78 - t74 * t79 + (-t159 * t196 + t269 * t38 + t271 * t37) * pkin(3), t421, t420, t423, t411, t254, -t130 * t104 + t242 * t383 + t254 * t295 + t407, -t130 * t401 + t242 * t384 - t254 * t360 + t419, t426, t418, t425, t296 + t388, t410, t216 * t30 + t383 * t95 + t310 * t273 - (-t273 * t384 - t277 * t324) * t346 + t406, t216 * t29 + t383 * t97 + t310 * t277 - (t273 * t324 - t277 * t384) * t346 + t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160 ^ 2 - t298 ^ 2, -t160 * t73 + t298 * t74 + t150, 0, 0, 0, 0, 0, t51 - t380, t50 + t378, 0, 0, 0, 0, 0, t296 - t388, -t277 * t346 ^ 2 - t387 - t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t420, t423, t411, t254, -t18 * t242 + t407, -t17 * t242 + t419, t426, t418, t425, -t346 * t381 + t388 + t49, t410, -pkin(5) * t30 + (-t17 * t273 + t277 * t62) * t346 - t18 * t95 + t273 * t424 - t386 * pkin(11) + t406, -pkin(5) * t29 - (t17 * t277 + t273 * t62) * t346 - t18 * t97 + t15 * t422 + t398 * pkin(11) + t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97 * t95, -t95 ^ 2 + t97 ^ 2, -t346 * t95 + t29, -t346 * t97 - t30, t51, -t15 * t97 - t346 * t9 + t2, t15 * t95 + t309 * t346 - t1;];
tauc_reg  = t3;
