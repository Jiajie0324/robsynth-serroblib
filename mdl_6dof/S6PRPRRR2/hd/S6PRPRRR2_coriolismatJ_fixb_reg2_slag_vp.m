% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:30:03
% EndTime: 2019-03-08 20:30:28
% DurationCPUTime: 19.74s
% Computational Cost: add. (17534->677), mult. (42245->995), div. (0->0), fcn. (47668->12), ass. (0->492)
t661 = sin(qJ(5));
t664 = cos(qJ(6));
t865 = t664 * t661;
t660 = sin(qJ(6));
t665 = cos(qJ(5));
t877 = t660 * t665;
t610 = t865 + t877;
t662 = sin(qJ(4));
t583 = t610 * t662;
t965 = -t583 / 0.2e1;
t864 = t664 * t665;
t875 = t661 * t662;
t586 = -t660 * t875 + t662 * t864;
t961 = t586 / 0.2e1;
t666 = cos(qJ(4));
t1022 = t666 / 0.2e1;
t659 = sin(pkin(12));
t931 = sin(pkin(6));
t932 = cos(pkin(12));
t746 = t932 * t931;
t663 = sin(qJ(2));
t766 = t663 * t931;
t945 = cos(qJ(2));
t578 = t659 * t766 - t746 * t945;
t897 = t578 * t665;
t751 = t931 * t945;
t579 = t659 * t751 + t663 * t746;
t933 = cos(pkin(6));
t518 = t579 * t666 + t662 * t933;
t911 = t518 * t661;
t351 = -t897 + t911;
t898 = t578 * t661;
t910 = t518 * t665;
t352 = t898 + t910;
t736 = t660 * t351 - t664 * t352;
t978 = -t736 / 0.2e1;
t981 = -pkin(10) - pkin(9);
t623 = t981 * t665;
t803 = t981 * t661;
t761 = -t660 * t623 - t664 * t803;
t1003 = -t761 / 0.2e1;
t762 = t664 * t351 + t660 * t352;
t1001 = -t762 / 0.2e1;
t809 = qJD(5) + qJD(6);
t645 = -pkin(2) * t932 - pkin(3);
t940 = t666 * pkin(4);
t702 = t645 - t940;
t676 = (t662 * t981 + t702) * t665;
t644 = pkin(2) * t659 + pkin(8);
t876 = t661 * t644;
t669 = (-pkin(5) - t876) * t666 + t676;
t400 = t664 * t669;
t941 = t662 * pkin(9);
t684 = t702 - t941;
t861 = t666 * t644;
t799 = t665 * t861;
t511 = t661 * t684 + t799;
t446 = -pkin(10) * t875 + t511;
t881 = t660 * t446;
t273 = -t400 + t881;
t801 = t661 * t861;
t445 = t676 - t801;
t869 = t664 * t445;
t279 = t869 - t881;
t1012 = t273 + t279;
t667 = t660 * t669;
t868 = t664 * t446;
t274 = t667 + t868;
t882 = t660 * t445;
t278 = -t868 - t882;
t1011 = t274 + t278;
t517 = t579 * t662 - t666 * t933;
t1019 = t517 * t961 + t666 * t978;
t874 = t661 * t666;
t895 = t579 * t665;
t372 = t578 * t874 + t895;
t871 = t664 * t372;
t862 = t665 * t666;
t896 = t579 * t661;
t373 = -t578 * t862 + t896;
t883 = t660 * t373;
t710 = -t883 / 0.2e1 + t871 / 0.2e1;
t1006 = t710 - t1019;
t1021 = qJD(1) * t1006;
t1018 = t666 * t1001 + t517 * t965;
t870 = t664 * t373;
t884 = t660 * t372;
t711 = -t884 / 0.2e1 - t870 / 0.2e1;
t1008 = t711 - t1018;
t1020 = qJD(1) * t1008;
t944 = pkin(5) * t661;
t767 = t644 + t944;
t592 = t767 * t662;
t654 = -pkin(5) * t665 - pkin(4);
t878 = t660 * t661;
t606 = -t864 + t878;
t959 = -t606 / 0.2e1;
t1010 = t1003 * t666 + t592 * t959 + t654 * t965;
t536 = -t664 * t623 + t660 * t803;
t957 = t610 / 0.2e1;
t1005 = t1022 * t536 + t592 * t957 + t654 * t961;
t707 = t877 / 0.2e1 + t865 / 0.2e1;
t958 = -t610 / 0.2e1;
t690 = t958 + t707;
t211 = t690 * t517;
t1017 = qJD(2) * t1006 + t211 * qJD(4);
t1007 = t710 + t1019;
t214 = (t707 + t957) * t517;
t1016 = qJD(2) * t1007 + t214 * qJD(4) + t736 * t809;
t775 = t864 / 0.2e1;
t706 = t775 - t878 / 0.2e1;
t212 = (t606 / 0.2e1 + t706) * t517;
t1015 = qJD(2) * t1008 + t212 * qJD(4);
t1009 = t711 + t1018;
t213 = (t706 + t959) * t517;
t1014 = qJD(2) * t1009 + t213 * qJD(4) + t762 * t809;
t325 = -t583 * t957 + t586 * t959;
t1013 = t809 * t325;
t976 = t274 / 0.2e1;
t771 = t976 + t278 / 0.2e1;
t938 = t666 * pkin(9);
t943 = t662 * pkin(4);
t624 = -t938 + t943;
t612 = t661 * t624;
t872 = t662 * t665;
t800 = t644 * t872;
t538 = t612 - t800;
t504 = -pkin(10) * t874 + t538;
t866 = t664 * t504;
t776 = -t866 / 0.2e1;
t614 = t665 * t624;
t616 = t644 * t875;
t537 = t616 + t614;
t942 = t662 * pkin(5);
t467 = -pkin(10) * t862 + t537 + t942;
t880 = t660 * t467;
t709 = -t880 / 0.2e1 + t776;
t112 = t709 - t1010;
t879 = t660 * t504;
t781 = -t879 / 0.2e1;
t867 = t664 * t467;
t708 = t781 + t867 / 0.2e1;
t111 = t708 - t1005;
t1004 = -t536 / 0.2e1;
t962 = -t586 / 0.2e1;
t1002 = t761 / 0.2e1;
t999 = t586 * t809;
t838 = qJD(4) * t610;
t995 = -qJD(2) * t325 + t606 * t838;
t843 = qJD(2) * t586;
t994 = qJD(4) * t325 - t583 * t843;
t626 = t660 * t874;
t473 = t626 / 0.2e1 + (-t864 / 0.2e1 + t959) * t666;
t857 = t212 * qJD(1) + t473 * qJD(3);
t993 = t761 * t809 - t857;
t470 = t690 * t666;
t858 = t211 * qJD(1) - t470 * qJD(3);
t990 = -t536 * t809 - t858;
t989 = 0.2e1 * t661;
t988 = t583 * t809;
t760 = t809 * t610;
t987 = t606 * t760;
t980 = t762 / 0.2e1;
t979 = t736 / 0.2e1;
t977 = t273 / 0.2e1;
t974 = t351 / 0.2e1;
t973 = -t352 / 0.2e1;
t972 = -t400 / 0.2e1;
t971 = t445 / 0.2e1;
t970 = t518 / 0.2e1;
t585 = t610 * t666;
t964 = -t585 / 0.2e1;
t963 = t585 / 0.2e1;
t587 = t664 * t862 - t626;
t960 = t587 / 0.2e1;
t657 = t665 ^ 2;
t956 = -t657 / 0.2e1;
t955 = -t660 / 0.2e1;
t954 = t660 / 0.2e1;
t953 = -t661 / 0.2e1;
t952 = t661 / 0.2e1;
t951 = -t662 / 0.2e1;
t950 = -t664 / 0.2e1;
t949 = t664 / 0.2e1;
t948 = -t665 / 0.2e1;
t947 = t665 / 0.2e1;
t946 = -t666 / 0.2e1;
t939 = t666 * pkin(5);
t772 = t979 + t978;
t773 = t1001 + t980;
t24 = -t583 * t773 + t586 * t772;
t937 = t24 * qJD(5);
t30 = -t606 * t773 + t610 * t772;
t936 = t30 * qJD(5);
t935 = pkin(5) * qJD(5);
t934 = pkin(5) * qJD(6);
t239 = t871 - t883;
t240 = t870 + t884;
t379 = t578 * t666;
t782 = t379 / 0.2e1;
t67 = t239 * t965 + t240 * t961 + t662 * t782;
t930 = qJD(1) * t67;
t921 = t351 * t661;
t920 = t351 * t666;
t919 = t352 * t665;
t918 = t352 * t666;
t677 = t665 * t684;
t510 = -t677 + t801;
t917 = t510 * t666;
t916 = t511 * t666;
t313 = t517 * t661;
t913 = t517 * t662;
t315 = t517 * t665;
t912 = t518 * t644;
t909 = t518 * t666;
t901 = t537 * t662;
t900 = t538 * t662;
t899 = t578 * t644;
t377 = t578 * t662;
t894 = t585 * t610;
t892 = t586 * t662;
t891 = t592 * t583;
t888 = t592 * t662;
t655 = t661 ^ 2;
t885 = t655 * t666;
t873 = t662 * t583;
t650 = t662 * t666;
t656 = t662 ^ 2;
t863 = t665 * t656;
t658 = t666 ^ 2;
t118 = (t900 / 0.2e1 + t916 / 0.2e1) * t665 + (-t901 / 0.2e1 + t917 / 0.2e1) * t661 + (t656 / 0.2e1 - t658 / 0.2e1) * t644;
t860 = t118 * qJD(4);
t254 = t583 * t606 - t610 * t586;
t854 = t809 * t254;
t850 = t809 * t473;
t472 = -t626 / 0.2e1 + (t775 + t959) * t666;
t849 = t809 * t472;
t847 = t655 + t657;
t636 = t657 - t655;
t637 = t658 - t656;
t713 = t372 * t953 + t373 * t947;
t157 = (t782 + t713) * t662;
t846 = qJD(1) * t157;
t405 = t587 * t666 - t892;
t845 = qJD(2) * t405;
t844 = qJD(2) * t583;
t842 = qJD(2) * t666;
t839 = qJD(4) * t606;
t837 = qJD(4) * t654;
t836 = qJD(4) * t661;
t835 = qJD(4) * t665;
t834 = qJD(5) * t661;
t833 = qJD(5) * t665;
t832 = qJD(5) * t666;
t831 = qJD(6) * t654;
t774 = t861 / 0.2e1;
t777 = t872 / 0.2e1;
t107 = (t939 + t661 * t774 - t677 / 0.2e1 + pkin(10) * t777 + t971) * t660;
t830 = t107 * qJD(2);
t804 = t939 / 0.2e1;
t109 = t972 + (t804 + t971) * t664;
t829 = t109 * qJD(2);
t138 = (t579 - t909 - t913) * t578;
t828 = t138 * qJD(1);
t302 = -t587 * t583 - t586 * t585;
t824 = t302 * qJD(2);
t404 = -t585 * t666 + t873;
t823 = t404 * qJD(2);
t471 = (t958 - t707) * t666;
t427 = t471 * qJD(2);
t428 = t472 * qJD(2);
t821 = t472 * qJD(4);
t429 = t473 * qJD(4);
t819 = t578 * qJD(2);
t818 = t579 * qJD(2);
t597 = (t655 / 0.2e1 + t956) * t662;
t817 = t597 * qJD(5);
t609 = t637 * t661;
t816 = t609 * qJD(2);
t611 = t658 * t665 - t863;
t815 = t611 * qJD(2);
t814 = t637 * qJD(2);
t813 = t662 * qJD(2);
t812 = t662 * qJD(4);
t811 = t662 * qJD(5);
t810 = t666 * qJD(4);
t294 = t867 - t879;
t295 = t866 + t880;
t593 = t767 * t666;
t41 = t295 * t961 + t274 * t960 + t294 * t965 + t273 * t963 + t593 * t946 + t888 / 0.2e1;
t770 = t279 / 0.2e1 + t977;
t778 = -t872 / 0.2e1;
t44 = -t583 * t771 + t586 * t770 + t778 * t939;
t808 = t41 * qJD(4) + t44 * qJD(5);
t807 = pkin(5) * t872;
t806 = -t944 / 0.2e1;
t805 = t944 / 0.2e1;
t802 = t517 * t377;
t797 = t586 * t842;
t796 = t645 * t842;
t795 = t665 * t813;
t793 = t661 * t835;
t792 = t606 * t812;
t791 = t661 * t832;
t790 = t665 * t832;
t789 = t645 * t813;
t788 = t661 * t833;
t787 = t662 * t810;
t641 = t666 * t813;
t786 = t665 * t812;
t785 = -t313 / 0.2e1;
t784 = -t377 / 0.2e1;
t783 = t377 / 0.2e1;
t780 = -t875 / 0.2e1;
t779 = t874 / 0.2e1;
t769 = t1003 + t1002;
t768 = t536 / 0.2e1 + t1004;
t765 = pkin(5) * t809;
t764 = t847 * t517;
t763 = t847 * t666;
t759 = t809 * t666;
t758 = pkin(5) * t777;
t757 = -qJD(5) + t842;
t755 = t661 * t786;
t754 = t656 * t788;
t753 = t517 * t777;
t752 = t942 / 0.2e1 + t467 / 0.2e1;
t750 = -t940 - t941;
t749 = t579 / 0.2e1 - t913 / 0.2e1;
t748 = t898 / 0.2e1 + t973;
t747 = t897 / 0.2e1 + t974;
t304 = t517 * t610;
t305 = t517 * t606;
t673 = t304 * t962 + t305 * t965 - t736 * t964 + t762 * t960;
t718 = t239 * t958 + t240 * t959;
t11 = t673 - t718;
t48 = t273 * t587 - t274 * t585 - t294 * t586 - t295 * t583;
t745 = t11 * qJD(1) + t48 * qJD(2);
t47 = -t1011 * t586 - t1012 * t583;
t744 = t24 * qJD(1) + t47 * qJD(2);
t25 = t583 * t772 + t586 * t773;
t743 = t25 * qJD(1) + t44 * qJD(2);
t682 = t305 * t946 - t517 * t587 / 0.2e1 + t518 * t962;
t56 = (t578 * t958 + t978) * t662 + t682;
t75 = -t274 * t662 + t295 * t666 + t593 * t586 + t592 * t587;
t742 = -t56 * qJD(1) + t75 * qJD(2);
t741 = t25 * qJD(3);
t31 = t305 * t961 - t736 * t960 + t304 * t965 + t762 * t963 - t909 / 0.2e1 + t913 / 0.2e1;
t40 = -t304 * t762 - t305 * t736 + t517 * t518;
t740 = t40 * qJD(1) + t31 * qJD(3);
t34 = -t239 * t762 - t240 * t736 - t802;
t739 = t34 * qJD(1) + t67 * qJD(3);
t68 = (t919 / 0.2e1 + t921 / 0.2e1 - t518 / 0.2e1) * t666 + (t956 - t655 / 0.2e1 + 0.1e1 / 0.2e1) * t913;
t76 = (t518 - t919 - t921) * t517;
t738 = t76 * qJD(1) + t68 * qJD(3);
t737 = qJD(2) * t24 + qJD(4) * t30;
t735 = -t537 * t661 + t538 * t665;
t478 = t592 * t586;
t132 = t278 * t666 - t583 * t807 - t478;
t734 = qJD(2) * t132 + t1021;
t133 = t279 * t666 + t586 * t807 - t891;
t733 = -qJD(2) * t133 + t1020;
t158 = (t901 - t917) * t665 + (t900 + t916) * t661;
t80 = (t920 / 0.2e1 - t373 / 0.2e1) * t665 + (-t918 / 0.2e1 + t372 / 0.2e1) * t661;
t732 = t80 * qJD(1) - t158 * qJD(2);
t175 = -t273 * t666 - t891;
t731 = -qJD(2) * t175 + t1020;
t176 = -t274 * t666 - t478;
t730 = qJD(2) * t176 + t1021;
t287 = t510 * t662 + (t537 - 0.2e1 * t616) * t666;
t97 = (-t911 / 0.2e1 + t747) * t662;
t729 = -t97 * qJD(1) - t287 * qJD(2);
t288 = t538 * t666 + (-t511 + 0.2e1 * t799) * t662;
t96 = (-t910 / 0.2e1 - t748) * t662;
t728 = -t96 * qJD(1) + t288 * qJD(2);
t69 = -t351 * t372 + t352 * t373 - t802;
t727 = t69 * qJD(1) + t157 * qJD(3);
t463 = t606 * t944 + t610 * t654;
t83 = (-t583 * t952 + (t606 * t948 + t949) * t662) * pkin(5) + t111;
t726 = qJD(2) * t83 - qJD(4) * t463;
t464 = -t606 * t654 + t610 * t944;
t82 = (t586 * t953 + (t610 * t948 + t955) * t662) * pkin(5) + t112;
t725 = qJD(2) * t82 - qJD(4) * t464;
t724 = t757 * t662;
t134 = t665 * t749 + t666 * t748;
t381 = -t644 * t863 - t916;
t723 = qJD(1) * t134 + qJD(2) * t381;
t135 = -t661 * t749 + t666 * t747;
t380 = -t656 * t876 - t917;
t722 = qJD(1) * t135 - qJD(2) * t380;
t355 = t583 ^ 2 - t586 ^ 2;
t121 = qJD(2) * t355 + qJD(4) * t254;
t419 = t606 ^ 2 - t610 ^ 2;
t139 = qJD(2) * t254 + qJD(4) * t419;
t721 = t938 / 0.2e1 - t943 / 0.2e1;
t701 = t721 * t661;
t519 = t612 / 0.2e1 - t701;
t720 = pkin(4) * t835 - qJD(2) * t519;
t700 = t721 * t665;
t520 = -t614 / 0.2e1 + t700;
t719 = pkin(4) * t836 - qJD(2) * t520;
t717 = t239 * t949 + t240 * t954;
t716 = t294 * t949 + t295 * t954;
t715 = t304 * t949 + t305 * t954;
t714 = t537 * t974 + t538 * t973;
t712 = t585 * t950 + t587 * t954;
t705 = t665 * t724;
t704 = qJD(2) * t111 - t610 * t837;
t703 = qJD(2) * t112 + t606 * t837;
t542 = -qJD(2) * t597 + t793;
t524 = qJD(2) * t661 * t863 + qJD(4) * t597;
t608 = t636 * t656;
t697 = qJD(2) * t608 + 0.2e1 * t755;
t696 = -qJD(4) * t636 + t795 * t989;
t695 = t713 * pkin(9);
t694 = (t585 * t955 + t587 * t950) * pkin(5);
t668 = t294 * t1001 + t295 * t978 - t304 * t273 / 0.2e1 + t305 * t976 + t517 * t593 / 0.2e1 + t592 * t970;
t678 = t1002 * t239 + t1004 * t240 + t654 * t783;
t3 = t668 + t678;
t51 = -t273 * t294 + t274 * t295 + t592 * t593;
t693 = t3 * qJD(1) + t51 * qJD(2) + t41 * qJD(3);
t675 = t279 * t979 + t736 * t977 + t762 * t771;
t4 = (t517 * t778 + t717) * pkin(5) + t675;
t50 = -t273 * t278 + t274 * t279 + t592 * t807;
t692 = -t4 * qJD(1) + t50 * qJD(2) + t44 * qJD(3);
t691 = t707 * t666;
t683 = t1022 * t304 + t517 * t964 + t518 * t965;
t55 = (t578 * t959 + t980) * t662 + t683;
t74 = t273 * t662 + t294 * t666 - t593 * t583 - t592 * t585;
t689 = -t55 * qJD(1) - t74 * qJD(2);
t284 = t583 * t585 + t586 * t587 - t650;
t688 = t31 * qJD(1) + t41 * qJD(2) + t284 * qJD(3);
t14 = t583 * t769 + t586 * t768 + t606 * t770 + t610 * t771 + t694;
t687 = t30 * qJD(1) - t14 * qJD(2);
t177 = t644 ^ 2 * t650 - t510 * t537 + t511 * t538;
t32 = pkin(4) * t783 + t912 * t951 + t695 + (t511 * t947 + t510 * t952 - t861 / 0.2e1) * t517 + t714;
t686 = -t32 * qJD(1) + t177 * qJD(2) + t118 * qJD(3);
t549 = t662 * t763 - t650;
t685 = t68 * qJD(1) + t118 * qJD(2) + t549 * qJD(3);
t672 = t1011 * t1002 + t1004 * t1012;
t12 = (t592 * t953 + t654 * t778 + t716) * pkin(5) + t672;
t217 = t654 * t944;
t77 = -t769 * t586 + t768 * t583 + (t779 + t712) * pkin(5);
t8 = (t785 + t715) * pkin(5);
t679 = -t8 * qJD(1) - t12 * qJD(2) - t77 * qJD(3) + t217 * qJD(4);
t652 = t657 * t666;
t649 = -t813 / 0.2e1;
t648 = t813 / 0.2e1;
t647 = t812 / 0.2e1;
t640 = t661 * t812;
t605 = t641 - t811 / 0.2e1;
t591 = t610 * t812;
t580 = t641 + (-qJD(5) / 0.2e1 - qJD(6) / 0.2e1) * t662;
t521 = t656 * t899;
t509 = t587 * t606;
t475 = t963 - t691;
t474 = t964 - t691;
t413 = t616 + t614 / 0.2e1 + t700;
t412 = t800 - t612 / 0.2e1 - t701;
t339 = t471 * qJD(4) - t797;
t338 = -t583 * t842 + t821;
t311 = -t760 - t427;
t310 = -t606 * t809 - t428;
t286 = -t821 + t988;
t275 = qJD(4) * t470;
t245 = t475 * qJD(4) + t797 - t999;
t244 = -t429 + (-qJD(6) + t757) * t583;
t180 = qJD(4) * t474 - t999;
t137 = t918 / 0.2e1 + t753 + t578 * t779 + t895 / 0.2e1;
t136 = -t920 / 0.2e1 + t517 * t780 + t665 * t782 - t896 / 0.2e1;
t114 = t708 + t1005;
t113 = t709 + t1010;
t110 = t664 * t804 + t881 + t972 - t869 / 0.2e1;
t108 = t660 * t804 - t868 - t667 / 0.2e1 - t882 / 0.2e1;
t99 = t352 * t951 + t518 * t777 + t578 * t780;
t98 = t351 * t951 + t578 * t777 + t875 * t970;
t85 = t586 * t805 + t610 * t758 - t752 * t660 + t1010 + t776;
t84 = -t583 * t806 + t606 * t758 + t752 * t664 + t1005 + t781;
t79 = (t351 * t947 + t352 * t953) * t666 + t713;
t78 = pkin(5) * t712 + t1002 * t586 + t666 * t806 - t761 * t961;
t58 = t610 * t784 - t736 * t951 - t682;
t57 = t606 * t784 + t762 * t951 - t683;
t33 = -t511 * t315 / 0.2e1 + t510 * t785 + t517 * t774 + (t912 / 0.2e1 + t578 * pkin(4) / 0.2e1) * t662 + t695 - t714;
t28 = qJD(2) * t157 + qJD(4) * t68;
t15 = t1003 * t583 + t1011 * t958 + t1012 * t959 - t761 * t965 + t694;
t13 = pkin(5) * t716 + t592 * t805 + t654 * t758 - t672;
t10 = t673 + t718;
t9 = pkin(5) * t715 + t517 * t805;
t5 = -t675 + (t717 + t753) * pkin(5);
t2 = t668 - t678;
t1 = qJD(2) * t67 + qJD(4) * t31 + qJD(5) * t25;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t138, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t69 + qJD(4) * t76, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t34 + qJD(4) * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t766, -qJD(2) * t751, 0, 0, 0, 0, 0, 0, 0, 0, -t818, t819, 0 (-t578 * t659 - t579 * t932) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, t377 * qJD(4) - t666 * t818, qJD(4) * t379 + t579 * t813 (-t656 - t658) * t819, t828 + (t579 * t645 - t658 * t899 - t521) * qJD(2), 0, 0, 0, 0, 0, 0 (-t372 * t666 - t656 * t898) * qJD(2) + t98 * qJD(4) + t137 * qJD(5) (t373 * t666 - t578 * t863) * qJD(2) + t99 * qJD(4) + t136 * qJD(5), t79 * qJD(4) + (-t372 * t665 - t373 * t661) * t813 (-t372 * t510 + t373 * t511 - t521) * qJD(2) + t33 * qJD(4) + t727, 0, 0, 0, 0, 0, 0 (-t239 * t666 - t578 * t873) * qJD(2) + t57 * qJD(4) + t809 * t1007 (t240 * t666 - t578 * t892) * qJD(2) + t58 * qJD(4) + t809 * t1009 (-t239 * t586 - t240 * t583) * qJD(2) + t10 * qJD(4) + t937 (-t239 * t273 + t240 * t274 - t578 * t888) * qJD(2) + t2 * qJD(4) + t5 * qJD(5) + t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t377 - qJD(4) * t518, qJD(2) * t379 + qJD(4) * t517, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t98 + qJD(5) * t313 - t518 * t835, qJD(2) * t99 + qJD(5) * t315 + t518 * t836, t79 * qJD(2) - qJD(4) * t764, t33 * qJD(2) + (-t518 * pkin(4) - pkin(9) * t764) * qJD(4) + t738, 0, 0, 0, 0, 0, 0, t57 * qJD(2) + t214 * t809 + t518 * t839, t58 * qJD(2) + t213 * t809 + t518 * t838, t10 * qJD(2) + (-t304 * t610 - t305 * t606) * qJD(4) + t936, t2 * qJD(2) + (-t304 * t761 + t305 * t536 + t518 * t654) * qJD(4) + t9 * qJD(5) + t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t137 + qJD(4) * t313 - qJD(5) * t352, qJD(2) * t136 + qJD(4) * t315 + qJD(5) * t351, 0, 0, 0, 0, 0, 0, 0, 0, t1016, t1014, t737, t5 * qJD(2) + t9 * qJD(4) + (-t660 * t762 + t664 * t736) * t935 + t741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1016, t1014, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t828, 0, 0, 0, 0, 0, 0, -qJD(4) * t97 - qJD(5) * t134, -qJD(4) * t96 - qJD(5) * t135, qJD(4) * t80, -qJD(4) * t32 - t727, 0, 0, 0, 0, 0, 0, -qJD(4) * t55 - t1006 * t809, -qJD(4) * t56 - t1008 * t809, qJD(4) * t11 + t937, qJD(4) * t3 - qJD(5) * t4 - t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t787, t637 * qJD(4), 0, -t787, 0, 0, t645 * t812, t645 * t810, 0, 0, t657 * t787 - t754, -t608 * qJD(5) - 0.2e1 * t666 * t755, -t611 * qJD(4) + t662 * t791, t655 * t787 + t754, t609 * qJD(4) + t662 * t790, -t787, -qJD(4) * t287 - qJD(5) * t381, qJD(4) * t288 + qJD(5) * t380, -qJD(4) * t158, qJD(4) * t177 (qJD(4) * t587 - t988) * t586, t302 * qJD(4) + t355 * t809, -t405 * qJD(4) + t583 * t759 (qJD(4) * t585 + t999) * t583, -t404 * qJD(4) + t586 * t759, -t787, -qJD(4) * t74 - qJD(5) * t132 - qJD(6) * t176, qJD(4) * t75 + qJD(5) * t133 + qJD(6) * t175, qJD(4) * t48 + qJD(5) * t47, qJD(4) * t51 + qJD(5) * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t846 + t860, 0, 0, 0, 0, 0, 0, 0, 0, 0, t808 - t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t641, t814, t810, -t641, -t812, 0, -t644 * t810 + t789, t644 * t812 + t796, 0, 0, -t817 + (t657 * t813 + t793) * t666 (t652 - t885) * qJD(4) + (-qJD(5) - t842) * t872 * t989, t640 - t815, t817 + (t655 * t813 - t793) * t666, t786 + t816, -t605 (t661 * t750 - t799) * qJD(4) + t413 * qJD(5) + t729 (t665 * t750 + t801) * qJD(4) + t412 * qJD(5) + t728, qJD(4) * t735 + t732 (-pkin(4) * t861 + pkin(9) * t735) * qJD(4) + t686 (t838 + t843) * t587 + t1013, t824 + (-t509 - t894) * qJD(4) + t854, t591 - t845 - t850 (t839 + t844) * t585 - t1013, t475 * t809 - t792 - t823, -t580 (t585 * t654 + t593 * t606 - t662 * t761) * qJD(4) + t84 * qJD(5) + t114 * qJD(6) + t689 (-t536 * t662 + t587 * t654 + t593 * t610) * qJD(4) + t85 * qJD(5) + t113 * qJD(6) + t742 (-t294 * t610 - t295 * t606 - t536 * t585 + t587 * t761) * qJD(4) + t15 * qJD(5) + t745 (-t294 * t761 + t295 * t536 + t593 * t654) * qJD(4) + t13 * qJD(5) + t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, -t697, t661 * t724, t524, t705, t647, qJD(4) * t413 - qJD(5) * t511 - t723, qJD(4) * t412 + qJD(5) * t510 - t722, 0, 0, t994, t121, t244, -t994, t245, t647, qJD(4) * t84 + qJD(5) * t278 + qJD(6) * t108 - t734, qJD(4) * t85 - qJD(5) * t279 + qJD(6) * t110 - t733, t15 * qJD(4) + (t583 * t664 - t586 * t660) * t935 + t744, t13 * qJD(4) + (t278 * t664 + t279 * t660) * t935 + t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t994, t121, t244, -t994, t245, t647, qJD(4) * t114 + qJD(5) * t108 - qJD(6) * t274 - t730, qJD(4) * t113 + qJD(5) * t110 + qJD(6) * t273 - t731, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t846 + t860, 0, 0, 0, 0, 0, 0, 0, 0, 0, t808 + t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t549 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, t284 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t812, -t810, 0, 0, 0, 0, 0, 0, 0, 0, -t786 - t791, t640 - t790 (t652 + t885) * qJD(4) (pkin(9) * t763 - t943) * qJD(4) + t685, 0, 0, 0, 0, 0, 0, t474 * t809 + t792, t591 - t849 (-t509 + t894) * qJD(4) (t536 * t587 + t585 * t761 + t654 * t662) * qJD(4) + t78 * qJD(5) + t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t661 * t810 - t665 * t811, t661 * t811 - t665 * t810, 0, 0, 0, 0, 0, 0, 0, 0, t180, t286, 0, t78 * qJD(4) + (-t583 * t660 - t586 * t664) * t935 + t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t286, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t97, qJD(2) * t96, -qJD(2) * t80, qJD(2) * t32 - t738, 0, 0, 0, 0, 0, 0, t55 * qJD(2) - t211 * t809, t56 * qJD(2) - t212 * t809, -qJD(2) * t11 + t936, -qJD(2) * t3 - qJD(5) * t8 - t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t641, -t814, 0, t641, 0, 0, -t789, -t796, 0, 0, -t641 * t657 - t817, t705 * t989, -t790 + t815, -t641 * t655 + t817, t791 - t816, t605, qJD(5) * t520 - t729, qJD(5) * t519 - t728, -t732, -t686, -t587 * t843 + t1013, -t824 + t854, t845 - t849, -t585 * t844 - t1013, -t471 * t809 + t823, t580, -qJD(5) * t83 - qJD(6) * t111 - t689, -qJD(5) * t82 - qJD(6) * t112 - t742, -qJD(5) * t14 - t745, -qJD(5) * t12 - t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t685, 0, 0, 0, 0, 0, 0, t470 * t809, -t850, 0, -qJD(5) * t77 - t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t788, t636 * qJD(5), 0, -t788, 0, 0, -pkin(4) * t834, -pkin(4) * t833, 0, 0, -t987, t809 * t419, 0, t987, 0, 0, qJD(5) * t463 + t610 * t831, qJD(5) * t464 - t606 * t831, 0, qJD(5) * t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, -t696, -t757 * t665, -t542, t757 * t661, t649, -pkin(9) * t833 - t719, pkin(9) * t834 - t720, 0, 0, -t995, t139, t310, t995, t311, t649, -t726 + t990, -t725 + t993 (t606 * t664 - t610 * t660) * t935 + t687 (-t536 * t664 - t660 * t761) * t935 + t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t995, t139, t310, t995, t311, t649, -t704 + t990, -t703 + t993, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t134, qJD(2) * t135, 0, 0, 0, 0, 0, 0, 0, 0, t1017, t1015, -t737, qJD(2) * t4 + qJD(4) * t8 - t741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, t697 (-t661 * t813 + t835) * t666, -t524 (-t795 - t836) * t666, t647, -qJD(4) * t520 + t723, -qJD(4) * t519 + t722, 0, 0, -t994, -t121, t338, t994, t339, t647, qJD(4) * t83 + qJD(6) * t107 + t734, qJD(4) * t82 + qJD(6) * t109 + t733, qJD(4) * t14 - t744, qJD(4) * t12 - t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, t429, 0, qJD(4) * t77 - t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t542, t696, t665 * t842, t542, -t661 * t842, t648, t719, t720, 0, 0, t995, -t139, t428, -t995, t427, t648, t726 + t858, t725 + t857, -t687, -t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t660 * t934, -t664 * t934, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t660 * t765 + t830, -t664 * t765 + t829, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1017, t1015, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t994, -t121, t338, t994, t339, t647, qJD(4) * t111 - qJD(5) * t107 + t730, qJD(4) * t112 - qJD(5) * t109 + t731, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, t429, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t995, -t139, t428, -t995, t427, t648, t704 + t858, t703 + t857, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t660 * t935 - t830, t664 * t935 - t829, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t6;
