% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRRR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR2_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:29:56
% EndTime: 2019-03-08 20:30:04
% DurationCPUTime: 3.18s
% Computational Cost: add. (3389->302), mult. (8940->533), div. (0->0), fcn. (8836->12), ass. (0->158)
t165 = cos(pkin(6));
t164 = cos(pkin(12));
t89 = sin(pkin(12));
t90 = sin(pkin(6));
t93 = sin(qJ(2));
t96 = cos(qJ(2));
t50 = (t164 * t93 + t89 * t96) * t90;
t92 = sin(qJ(4));
t95 = cos(qJ(4));
t110 = t165 * t95 - t50 * t92;
t191 = qJD(4) * t110;
t190 = -0.4e1 * t92;
t180 = cos(qJ(6));
t136 = t180 * qJD(6);
t189 = t180 * qJD(5) + t136;
t91 = sin(qJ(5));
t85 = t91 ^ 2;
t94 = cos(qJ(5));
t87 = t94 ^ 2;
t134 = qJD(5) * (t85 - t87);
t188 = qJD(5) + qJD(6);
t181 = t95 * pkin(4);
t81 = -pkin(2) * t164 - pkin(3);
t109 = t81 - t181;
t183 = t92 * pkin(9);
t107 = t109 - t183;
t106 = t94 * t107;
t184 = pkin(9) * t95;
t185 = pkin(4) * t92;
t122 = -t184 + t185;
t114 = t122 * t91;
t159 = qJD(5) * t95;
t152 = t91 * t159;
t84 = t92 * qJD(4);
t57 = t84 * t94 + t152;
t80 = t89 * pkin(2) + pkin(8);
t20 = -qJD(4) * t114 - qJD(5) * t106 + t57 * t80;
t186 = -pkin(10) - pkin(9);
t187 = t186 * t92 + t109;
t182 = t94 * pkin(4);
t179 = sin(qJ(6));
t41 = t165 * t92 + t50 * t95;
t135 = t164 * t96;
t163 = qJD(2) * t90;
t148 = t93 * t163;
t47 = -t135 * t163 + t148 * t89;
t27 = qJD(4) * t41 - t47 * t92;
t178 = t27 * t92;
t177 = t27 * t95;
t11 = t110 * t27;
t48 = qJD(2) * t50;
t49 = (t89 * t93 - t135) * t90;
t176 = t49 * t48;
t139 = qJD(4) * t179;
t124 = t95 * t139;
t140 = qJD(4) * t180;
t125 = t95 * t140;
t142 = t179 * t91;
t130 = t92 * t142;
t24 = t91 * t125 + (t189 * t92 + t124) * t94 - t188 * t130;
t65 = t179 * t94 + t180 * t91;
t52 = t65 * t92;
t175 = t52 * t24;
t39 = t188 * t65;
t23 = t124 * t91 - t125 * t94 + t39 * t92;
t143 = t180 * t94;
t53 = t143 * t92 - t130;
t174 = t53 * t23;
t173 = t91 * t80;
t172 = t91 * t92;
t171 = t94 * t95;
t64 = -t143 + t142;
t169 = t23 * t64 - t53 * t39;
t66 = t80 * t171;
t37 = t91 * t107 + t66;
t86 = t92 ^ 2;
t166 = -t95 ^ 2 + t86;
t162 = qJD(4) * t94;
t161 = qJD(5) * t91;
t160 = qJD(5) * t94;
t158 = t95 * qJD(4);
t157 = -0.2e1 * pkin(4) * qJD(5);
t156 = t95 * t173;
t155 = 0.2e1 * qJD(4) * t81;
t154 = pkin(5) * t161;
t153 = qJD(5) * t80 * t86;
t151 = t94 * t159;
t150 = t110 * t161;
t149 = t85 * t158;
t147 = t91 * t160;
t146 = t92 * t158;
t145 = t94 * t158;
t144 = t80 * t158;
t141 = -pkin(5) - t173;
t138 = qJD(6) * t179;
t133 = t166 * qJD(4);
t132 = t91 * t145;
t131 = t86 * t147;
t129 = pkin(5) * t136;
t128 = pkin(5) * t138;
t127 = t186 * t180;
t126 = t186 * t179;
t123 = -t181 - t183;
t38 = (t179 * qJD(5) + t138) * t91 - t189 * t94;
t121 = -t65 * t24 + t52 * t38;
t29 = -t41 * t91 + t49 * t94;
t30 = t41 * t94 + t49 * t91;
t120 = -t29 * t94 - t30 * t91;
t119 = t29 * t91 - t30 * t94;
t36 = t106 - t156;
t118 = -t36 * t94 - t37 * t91;
t117 = t36 * t91 - t37 * t94;
t116 = t91 * t127;
t115 = t91 * t126;
t113 = -t95 * t39 + t64 * t84;
t112 = -t110 * t160 + t27 * t91;
t111 = -t27 * t94 - t150;
t108 = t158 * t91 + t160 * t92;
t10 = t179 * t29 + t180 * t30;
t102 = t141 * t95 + t187 * t94;
t100 = t180 * t102;
t101 = -pkin(10) * t108 - t20;
t34 = -pkin(10) * t172 + t37;
t97 = (-t187 * t91 - t66) * qJD(5) + (t186 * t171 + (-t141 + t182) * t92) * qJD(4);
t3 = -qJD(6) * t100 - t180 * t101 + t138 * t34 - t179 * t97;
t73 = t186 * t94;
t44 = -t180 * t73 + t115;
t28 = -t47 * t95 + t191;
t7 = -qJD(5) * t30 - t28 * t91 + t48 * t94;
t8 = qJD(5) * t29 + t28 * t94 + t48 * t91;
t105 = qJD(5) * t120 - t7 * t91 + t8 * t94;
t21 = -t37 * qJD(5) + (t122 * t94 + t80 * t172) * qJD(4);
t104 = qJD(5) * t118 - t20 * t94 - t21 * t91;
t103 = t178 + t28 * t95 + (-t110 * t95 - t41 * t92) * qJD(4);
t99 = t179 * t102;
t98 = -t179 * t101 + t180 * t97;
t15 = t180 * t34 + t99;
t83 = -t94 * pkin(5) - pkin(4);
t77 = t87 * t158;
t75 = -0.2e1 * t146;
t71 = t87 * t146;
t69 = t85 * t146;
t59 = t84 * t91 - t151;
t56 = t161 * t92 - t145;
t55 = (pkin(5) * t91 + t80) * t92;
t45 = t134 * t92 - t132;
t43 = t179 * t73 + t116;
t42 = pkin(5) * t108 + t144;
t35 = t110 * t84;
t31 = t38 * t95 + t65 * t84;
t26 = -t44 * qJD(6) + (t127 * t94 - t115) * qJD(5);
t25 = -t188 * t116 - t126 * t160 - t138 * t73;
t14 = -t179 * t34 + t100;
t9 = -t179 * t30 + t180 * t29;
t4 = -qJD(6) * t15 + t98;
t2 = -t10 * qJD(6) - t179 * t8 + t180 * t7;
t1 = -t29 * t136 + t30 * t138 - t179 * t7 - t180 * t8;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t50 * t47 + 0.2e1 * t176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t41 * t28 - 0.2e1 * t11 + 0.2e1 * t176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t29 * t7 + 0.2e1 * t30 * t8 - 0.2e1 * t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t10 * t1 + 0.2e1 * t9 * t2 - 0.2e1 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, -t96 * t163, 0, 0, 0, 0, 0, 0, 0, 0, -t48, t47, 0 (-t164 * t48 - t47 * t89) * pkin(2), 0, 0, 0, 0, 0, 0, -t48 * t95 + t49 * t84, t158 * t49 + t48 * t92, t103, t103 * t80 + t48 * t81, 0, 0, 0, 0, 0, 0 (-t191 * t91 - t7) * t95 + (qJD(4) * t29 + t112) * t92 (-t110 * t162 + t8) * t95 + (-qJD(4) * t30 - t111) * t92, t120 * t158 + (qJD(5) * t119 - t7 * t94 - t8 * t91) * t92, -t30 * t20 + t29 * t21 + t7 * t36 + t8 * t37 + (-t110 * t158 + t178) * t80, 0, 0, 0, 0, 0, 0, -t110 * t24 - t2 * t95 + t27 * t52 + t84 * t9, -t1 * t95 - t10 * t84 + t110 * t23 + t27 * t53, t1 * t52 - t10 * t24 - t2 * t53 + t9 * t23, -t1 * t15 - t10 * t3 - t110 * t42 + t2 * t14 + t27 * t55 + t9 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t146, -0.2e1 * t133, 0, t75, 0, 0, t92 * t155, t95 * t155, 0, 0, 0.2e1 * t71 - 0.2e1 * t131, t132 * t190 + 0.2e1 * t86 * t134, 0.2e1 * t92 * t152 + 0.2e1 * t162 * t166, 0.2e1 * t69 + 0.2e1 * t131, -0.2e1 * t133 * t91 + 0.2e1 * t151 * t92, t75, 0.2e1 * t94 * t153 - 0.2e1 * t21 * t95 + 0.2e1 * (t36 + 0.2e1 * t156) * t84, -0.2e1 * t91 * t153 - 0.2e1 * t20 * t95 + 0.2e1 * (-t37 + 0.2e1 * t66) * t84, 0.2e1 * t118 * t158 + 0.2e1 * (qJD(5) * t117 + t20 * t91 - t21 * t94) * t92, 0.2e1 * t146 * t80 ^ 2 - 0.2e1 * t37 * t20 + 0.2e1 * t36 * t21, -0.2e1 * t174, 0.2e1 * t52 * t23 - 0.2e1 * t53 * t24, 0.2e1 * t23 * t95 + 0.2e1 * t53 * t84, 0.2e1 * t175, 0.2e1 * t95 * t24 - 0.2e1 * t52 * t84, t75, 0.2e1 * t14 * t84 + 0.2e1 * t55 * t24 - 0.2e1 * t4 * t95 + 0.2e1 * t42 * t52, -0.2e1 * t15 * t84 - 0.2e1 * t55 * t23 - 0.2e1 * t3 * t95 + 0.2e1 * t42 * t53, 0.2e1 * t14 * t23 - 0.2e1 * t15 * t24 + 0.2e1 * t3 * t52 - 0.2e1 * t4 * t53, 0.2e1 * t14 * t4 - 0.2e1 * t15 * t3 + 0.2e1 * t55 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177 + t28 * t92 + (-t110 * t92 + t41 * t95) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35 + (-qJD(4) * t119 - t27) * t95 + t105 * t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t53 - t10 * t23 - t2 * t52 - t9 * t24 - t177 - t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104 * t92 + (-t117 * t95 + t166 * t80) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14 * t24 - t15 * t23 - t3 * t53 - t4 * t52 - t42 * t95 + t55 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t69 + 0.2e1 * t71 - 0.2e1 * t146, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t146 - 0.2e1 * t174 + 0.2e1 * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t28, 0, 0, 0, 0, 0, 0, 0, 0, t111, t112, t105, -t27 * pkin(4) + pkin(9) * t105, 0, 0, 0, 0, 0, 0, -t110 * t39 + t27 * t64, t110 * t38 + t27 * t65, t1 * t64 - t10 * t39 - t2 * t65 + t9 * t38, -pkin(5) * t150 - t1 * t44 - t10 * t25 + t2 * t43 + t9 * t26 + t27 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, 0, -t84, 0, -t144, t80 * t84, 0, 0, -t45, t147 * t190 - t149 + t77, t59, t45, t57, 0 (pkin(9) * t171 + (t173 - t182) * t92) * qJD(5) + (t123 * t91 - t66) * qJD(4) (t80 * t92 * t94 + t114) * qJD(5) + (t123 * t94 + t156) * qJD(4), t104, -pkin(4) * t144 + pkin(9) * t104, -t23 * t65 - t53 * t38, t121 + t169, t31, t24 * t64 + t52 * t39, -t113, 0, t154 * t52 + t83 * t24 - t26 * t95 + t55 * t39 + t42 * t64 + t43 * t84, t154 * t53 - t83 * t23 - t25 * t95 - t55 * t38 + t42 * t65 - t44 * t84, t14 * t38 - t15 * t39 + t43 * t23 - t44 * t24 + t25 * t52 - t26 * t53 + t3 * t64 - t4 * t65, t14 * t26 - t15 * t25 + t154 * t55 - t3 * t44 + t4 * t43 + t42 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, -t158, 0, 0, 0, 0, 0, 0, 0, 0, -t57, t59, t77 + t149 (-t185 + (t85 + t87) * t184) * qJD(4), 0, 0, 0, 0, 0, 0, t113, t31, -t121 + t169, -pkin(5) * t152 - t23 * t44 - t24 * t43 - t53 * t25 - t52 * t26 + t83 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t147, -0.2e1 * t134, 0, -0.2e1 * t147, 0, 0, t91 * t157, t94 * t157, 0, 0, -0.2e1 * t65 * t38, 0.2e1 * t38 * t64 - 0.2e1 * t65 * t39, 0, 0.2e1 * t64 * t39, 0, 0, 0.2e1 * t154 * t64 + 0.2e1 * t83 * t39, 0.2e1 * t154 * t65 - 0.2e1 * t83 * t38, 0.2e1 * t25 * t64 - 0.2e1 * t26 * t65 + 0.2e1 * t43 * t38 - 0.2e1 * t44 * t39, 0.2e1 * t154 * t83 - 0.2e1 * t44 * t25 + 0.2e1 * t43 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t7, -t8, 0, 0, 0, 0, 0, 0, 0, 0, t2, t1, 0 (t180 * t2 - t179 * t1 + (t10 * t180 - t179 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t108, t84, t21, t20, 0, 0, 0, 0, -t23, 0, -t24, t84, pkin(5) * t140 * t92 - qJD(6) * t99 + t128 * t95 - t136 * t34 + t98 (t136 * t95 - t139 * t92) * pkin(5) + t3 (t180 * t23 - t179 * t24 + (t179 * t53 - t180 * t52) * qJD(6)) * pkin(5) (t180 * t4 - t179 * t3 + (-t14 * t179 + t15 * t180) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t56, 0, 0, 0, 0, 0, 0, 0, 0, -t24, t23, 0 (-t180 * t24 - t179 * t23 + (t179 * t52 + t180 * t53) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, 0, -t161, 0, -pkin(9) * t160, pkin(9) * t161, 0, 0, 0, 0, -t38, 0, -t39, 0, t26, t25 (t180 * t38 - t179 * t39 + (t179 * t65 - t180 * t64) * qJD(6)) * pkin(5) (t180 * t26 - t179 * t25 + (-t179 * t43 + t180 * t44) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t128, -0.2e1 * t129, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, 0, -t24, t84, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, t23, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, 0, -t39, 0, t26, t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, -t129, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
