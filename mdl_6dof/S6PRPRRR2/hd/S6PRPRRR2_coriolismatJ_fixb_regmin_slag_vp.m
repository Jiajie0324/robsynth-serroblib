% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:29:58
% EndTime: 2019-03-08 20:30:14
% DurationCPUTime: 6.91s
% Computational Cost: add. (4258->401), mult. (11120->624), div. (0->0), fcn. (12291->12), ass. (0->344)
t433 = qJD(5) + qJD(6);
t325 = cos(qJ(4));
t524 = -t325 / 0.2e1;
t318 = sin(pkin(12));
t322 = sin(qJ(2));
t506 = sin(pkin(6));
t507 = cos(pkin(12));
t391 = t507 * t506;
t522 = cos(qJ(2));
t396 = t506 * t522;
t248 = t318 * t396 + t322 * t391;
t321 = sin(qJ(4));
t508 = cos(pkin(6));
t360 = t248 * t321 - t325 * t508;
t551 = -t360 / 0.2e1;
t550 = t360 / 0.2e1;
t320 = sin(qJ(5));
t323 = cos(qJ(6));
t467 = t323 * t320;
t319 = sin(qJ(6));
t324 = cos(qJ(5));
t479 = t319 * t324;
t382 = t467 + t479;
t549 = t382 * t321;
t548 = t382 * t325;
t530 = pkin(9) + pkin(10);
t285 = t530 * t320;
t286 = t530 * t324;
t224 = -t319 * t285 + t323 * t286;
t365 = -t479 / 0.2e1 - t467 / 0.2e1;
t527 = t382 / 0.2e1;
t186 = (t527 + t365) * t325;
t350 = t360 * t320;
t544 = t350 / 0.2e1;
t349 = t360 * t324;
t545 = t349 / 0.2e1;
t330 = t319 * t545 + t323 * t544;
t345 = t360 * t382;
t63 = -t345 / 0.2e1 + t330;
t512 = t63 * qJD(1) + t186 * qJD(3);
t547 = -t224 * t433 - t512;
t383 = -t323 * t285 - t319 * t286;
t466 = t323 * t324;
t480 = t319 * t320;
t366 = t480 / 0.2e1 - t466 / 0.2e1;
t272 = -t466 + t480;
t528 = -t272 / 0.2e1;
t188 = (t528 + t366) * t325;
t343 = -t350 / 0.2e1;
t331 = t319 * t343 + t323 * t545;
t346 = t360 * t272;
t64 = t346 / 0.2e1 + t331;
t511 = t64 * qJD(1) + t188 * qJD(3);
t546 = -t383 * t433 - t511;
t212 = t248 * t325 + t321 * t508;
t529 = t212 / 0.2e1;
t521 = pkin(5) * t320;
t543 = -t521 / 0.2e1;
t542 = t549 * t433;
t303 = pkin(2) * t318 + pkin(8);
t409 = t303 + t521;
t392 = t409 * t321;
t375 = -t392 / 0.2e1;
t520 = pkin(5) * t324;
t313 = -pkin(4) - t520;
t489 = t313 * t549;
t541 = t272 * t375 - t489 / 0.2e1;
t478 = t320 * t321;
t253 = -t319 * t478 + t321 * t466;
t488 = t313 * t253;
t540 = -t382 * t375 + t488 / 0.2e1;
t408 = t322 * t506;
t247 = t318 * t408 - t391 * t522;
t464 = t324 * t325;
t497 = t248 * t320;
t123 = -t247 * t464 + t497;
t472 = t323 * t123;
t477 = t320 * t325;
t496 = t248 * t324;
t122 = t247 * t477 + t496;
t486 = t319 * t122;
t370 = -t486 / 0.2e1 - t472 / 0.2e1;
t498 = t247 * t324;
t505 = t212 * t320;
t109 = -t498 + t505;
t499 = t247 * t320;
t504 = t212 * t324;
t110 = t499 + t504;
t24 = t323 * t109 + t319 * t110;
t536 = t24 * t524 + t549 * t551;
t328 = t370 - t536;
t539 = qJD(1) * t328;
t473 = t323 * t122;
t485 = t319 * t123;
t369 = -t485 / 0.2e1 + t473 / 0.2e1;
t25 = t319 * t109 - t323 * t110;
t537 = t25 * t524 + t253 * t550;
t329 = t369 - t537;
t538 = qJD(1) * t329;
t535 = qJD(2) * t328 + t64 * qJD(4);
t534 = qJD(2) * t329 + t63 * qJD(4);
t314 = t320 ^ 2;
t316 = t324 ^ 2;
t297 = t316 - t314;
t438 = t321 * qJD(2);
t425 = t324 * t438;
t533 = qJD(4) * t297 - 0.2e1 * t320 * t425;
t332 = t369 + t537;
t66 = t345 / 0.2e1 + t330;
t532 = qJD(2) * t332 + t66 * qJD(4) + t25 * t433;
t333 = t370 + t536;
t65 = -t346 / 0.2e1 + t331;
t531 = qJD(2) * t333 + t65 * qJD(4) + t24 * t433;
t526 = -t382 / 0.2e1;
t525 = -t321 / 0.2e1;
t523 = t325 / 0.2e1;
t519 = t321 * pkin(4);
t518 = t321 * pkin(5);
t517 = t325 * pkin(9);
t73 = -t253 * t382 + t272 * t549;
t516 = t433 * t73;
t98 = t253 * t528 - t527 * t549;
t515 = t433 * t98;
t514 = pkin(5) * qJD(5);
t513 = pkin(5) * qJD(6);
t503 = t383 * t325;
t502 = t224 * t325;
t125 = t247 * t321;
t127 = t247 * t325;
t493 = t253 * t321;
t304 = -pkin(2) * t507 - pkin(3);
t395 = -t325 * pkin(4) - t321 * pkin(9);
t263 = t395 + t304;
t255 = t324 * t263;
t430 = t303 * t477;
t206 = -t255 + t430;
t474 = t321 * t324;
t432 = pkin(10) * t474;
t164 = -t206 - t432;
t145 = -t432 + t255 + (-t303 * t320 - pkin(5)) * t325;
t398 = pkin(5) * t523 - t145 / 0.2e1;
t373 = t164 / 0.2e1 + t398;
t26 = t373 * t319;
t492 = t26 * qJD(2);
t28 = t373 * t323;
t490 = t28 * qJD(2);
t315 = t321 ^ 2;
t487 = t315 * t320;
t484 = t319 * t164;
t428 = t303 * t464;
t207 = t320 * t263 + t428;
t165 = -pkin(10) * t478 + t207;
t483 = t319 * t165;
t287 = -t517 + t519;
t279 = t324 * t287;
t281 = t303 * t478;
t184 = -pkin(10) * t464 + t279 + t281 + t518;
t482 = t319 * t184;
t278 = t320 * t287;
t429 = t303 * t474;
t203 = -pkin(10) * t477 + t278 - t429;
t481 = t319 * t203;
t476 = t321 * t549;
t471 = t323 * t164;
t470 = t323 * t165;
t469 = t323 * t184;
t468 = t323 * t203;
t465 = t324 * t315;
t254 = t272 * t325;
t89 = -t253 * t548 + t254 * t549;
t460 = t89 * qJD(2);
t459 = t433 * t188;
t187 = (t528 - t366) * t325;
t458 = t433 * t187;
t457 = t433 * t253;
t317 = t325 ^ 2;
t298 = t317 - t315;
t138 = -t254 * t325 - t493;
t456 = qJD(2) * t138;
t455 = qJD(2) * t253;
t454 = qJD(4) * t212;
t453 = qJD(4) * t382;
t452 = qJD(4) * t313;
t451 = qJD(4) * t320;
t450 = qJD(4) * t324;
t449 = qJD(5) * t320;
t448 = qJD(5) * t324;
t447 = qJD(5) * t325;
t446 = qJD(6) * t313;
t137 = -t325 * t548 + t476;
t445 = t137 * qJD(2);
t185 = (t526 + t365) * t325;
t153 = t185 * qJD(2);
t155 = t187 * qJD(2);
t443 = t187 * qJD(4);
t156 = t188 * qJD(4);
t276 = t298 * t320;
t441 = t276 * qJD(2);
t277 = t317 * t324 - t465;
t440 = t277 * qJD(2);
t439 = t298 * qJD(2);
t437 = t321 * qJD(4);
t436 = t321 * qJD(5);
t435 = t325 * qJD(2);
t434 = t325 * qJD(4);
t431 = -t520 / 0.2e1;
t427 = t253 * t435;
t426 = t304 * t435;
t424 = t320 * t450;
t423 = t272 * t437;
t422 = t320 * t447;
t421 = t324 * t447;
t420 = t304 * t438;
t419 = t320 * t448;
t418 = t321 * t434;
t417 = t321 * t435;
t416 = t324 * t437;
t415 = -t502 / 0.2e1;
t414 = -t125 / 0.2e1;
t413 = t127 / 0.2e1;
t412 = -t481 / 0.2e1;
t411 = t474 / 0.2e1;
t410 = -t468 / 0.2e1;
t407 = pkin(5) * t433;
t406 = t433 * t382;
t405 = t433 * t325;
t404 = -qJD(5) + t435;
t403 = t320 * t416;
t401 = t272 * t414;
t400 = -t247 * t549 / 0.2e1;
t399 = t518 / 0.2e1 + t184 / 0.2e1;
t397 = t435 - qJD(5) / 0.2e1;
t394 = t499 / 0.2e1 - t110 / 0.2e1;
t393 = t498 / 0.2e1 + t109 / 0.2e1;
t260 = t409 * t325;
t79 = t319 * t145 + t470;
t14 = (t468 + t482) * t325 + t260 * t253 + (-t254 * t409 - t79) * t321;
t326 = t253 * t529 + t254 * t551 + (t319 * t350 - t323 * t349) * t523 + t25 * t321 / 0.2e1;
t2 = t400 - t326;
t390 = -t2 * qJD(1) + t14 * qJD(2);
t192 = t253 * t392;
t81 = -t470 - t484;
t36 = -pkin(5) * t474 * t549 + t325 * t81 - t192;
t389 = qJD(2) * t36 + t538;
t82 = t471 - t483;
t37 = t82 * t325 + (t253 * t520 - t409 * t549) * t321;
t388 = -qJD(2) * t37 + t539;
t78 = -t323 * t145 + t483;
t44 = -t78 * t325 - t392 * t549;
t387 = -qJD(2) * t44 + t539;
t45 = -t325 * t79 - t192;
t386 = qJD(2) * t45 + t538;
t19 = (-t504 / 0.2e1 - t394) * t321;
t86 = t278 * t325 + (-t207 + t428) * t321;
t385 = -t19 * qJD(1) + t86 * qJD(2);
t20 = (-t505 / 0.2e1 + t393) * t321;
t85 = t206 * t321 + (-t281 + t279) * t325;
t384 = -t20 * qJD(1) - t85 * qJD(2);
t128 = -t206 * t325 - t303 * t487;
t340 = t360 * t525;
t336 = t248 / 0.2e1 + t340;
t39 = -t320 * t336 + t325 * t393;
t381 = qJD(1) * t39 - qJD(2) * t128;
t129 = -t207 * t325 - t303 * t465;
t38 = t324 * t336 + t325 * t394;
t380 = qJD(1) * t38 + qJD(2) * t129;
t111 = -t253 ^ 2 + t549 ^ 2;
t34 = qJD(2) * t111 + qJD(4) * t73;
t335 = t253 * t543 + t383 * t524;
t368 = -t482 / 0.2e1 + t410;
t338 = t489 / 0.2e1 + t368;
t15 = (-t319 * pkin(5) / 0.2e1 + t520 * t526 + t409 * t272 / 0.2e1) * t321 + t335 + t338;
t181 = -t272 * t313 + t382 * t521;
t379 = -t15 * qJD(2) + t181 * qJD(4);
t150 = t272 ^ 2 - t382 ^ 2;
t42 = qJD(2) * t73 + qJD(4) * t150;
t334 = t543 * t549 + t415;
t367 = t412 + t469 / 0.2e1;
t337 = -t488 / 0.2e1 + t367;
t16 = (t323 * pkin(5) / 0.2e1 + t272 * t431 + t409 * t526) * t321 + t334 + t337;
t180 = t272 * t521 + t313 * t382;
t378 = -t16 * qJD(2) + t180 * qJD(4);
t377 = t404 * t321;
t376 = t517 / 0.2e1 - t519 / 0.2e1;
t374 = t392 / 0.2e1;
t357 = t376 * t320;
t213 = t278 / 0.2e1 - t357;
t372 = pkin(4) * t450 - qJD(2) * t213;
t356 = t376 * t324;
t214 = -t279 / 0.2e1 + t356;
t371 = pkin(4) * t451 - qJD(2) * t214;
t67 = qJD(4) * t98 - t455 * t549;
t74 = qJD(2) * t98 - t272 * t453;
t31 = -t503 / 0.2e1 + t272 * t374 + t338;
t364 = qJD(2) * t31 + t272 * t452;
t30 = -t374 * t382 + t337 + t415;
t363 = qJD(2) * t30 - t382 * t452;
t362 = t324 * t377;
t264 = (t314 / 0.2e1 - t316 / 0.2e1) * t321;
t361 = -qJD(2) * t264 + t424;
t355 = qJD(2) * t320 * t465 + qJD(4) * t264;
t275 = t297 * t315;
t354 = qJD(2) * t275 + 0.2e1 * t403;
t327 = t549 * t529 + t548 * t550 + (t319 * t349 + t323 * t350) * t524 + t24 * t525;
t1 = t401 - t327;
t13 = (t469 - t481) * t325 + t78 * t321 - t260 * t549 - t548 * t392;
t352 = -t1 * qJD(1) - t13 * qJD(2);
t351 = t365 * t325;
t308 = -t438 / 0.2e1;
t307 = t438 / 0.2e1;
t306 = t437 / 0.2e1;
t301 = t320 * t437;
t271 = t397 * t321;
t261 = t264 * qJD(5);
t259 = t382 * t437;
t249 = (-qJD(6) / 0.2e1 + t397) * t321;
t190 = -t548 / 0.2e1 + t351;
t189 = t548 / 0.2e1 + t351;
t147 = t281 + t279 / 0.2e1 + t356;
t146 = t429 - t278 / 0.2e1 - t357;
t100 = t185 * qJD(4) - t427;
t99 = -t435 * t549 + t443;
t95 = 0.2e1 * t545;
t93 = 0.2e1 * t544;
t91 = -t406 - t153;
t90 = -t272 * t433 - t155;
t84 = -t443 + t542;
t80 = qJD(4) * t186;
t70 = t189 * qJD(4) + t427 - t457;
t69 = -t156 + (-qJD(6) + t404) * t549;
t46 = qJD(4) * t190 - t457;
t41 = t110 * t523 + t321 * t545 + t320 * t413 + t496 / 0.2e1;
t40 = t109 * t524 + t320 * t340 + t324 * t413 - t497 / 0.2e1;
t33 = t502 / 0.2e1 + t367 + t540;
t32 = t503 / 0.2e1 + t368 + t541;
t29 = t483 - t471 / 0.2e1 + t398 * t323;
t27 = -t470 - t484 / 0.2e1 + t398 * t319;
t22 = t110 * t525 + t212 * t411 + t320 * t414 + t325 * t545 - t349 * t523;
t21 = t109 * t525 + t247 * t411 + t478 * t529 + (t544 + t343) * t325;
t18 = -t319 * t399 - t431 * t549 - t335 + t410 + t541;
t17 = pkin(5) * t272 * t411 + t323 * t399 - t334 + t412 + t540;
t4 = t400 + t326;
t3 = t401 + t327;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -qJD(2) * t408, -qJD(2) * t396 (-t247 * t318 - t248 * t507) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, t125 * qJD(4) - t248 * t435, qJD(4) * t127 + t248 * t438, 0, 0, 0, 0, 0 (-t122 * t325 - t247 * t487) * qJD(2) + t21 * qJD(4) + t41 * qJD(5) (t123 * t325 - t247 * t465) * qJD(2) + t22 * qJD(4) + t40 * qJD(5), 0, 0, 0, 0, 0 (-(t473 - t485) * t325 - t247 * t476) * qJD(2) + t3 * qJD(4) + t433 * t332 ((t472 + t486) * t325 - t247 * t493) * qJD(2) + t4 * qJD(4) + t433 * t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t125 - t454, t127 * qJD(2) + qJD(4) * t360, 0, 0, 0, 0, 0, qJD(2) * t21 + qJD(5) * t93 - t212 * t450, qJD(2) * t22 + qJD(5) * t95 + t212 * t451, 0, 0, 0, 0, 0, t3 * qJD(2) + t272 * t454 + t433 * t66, t4 * qJD(2) + t212 * t453 + t433 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(4) * t93 - qJD(5) * t110, qJD(2) * t40 + qJD(4) * t95 + qJD(5) * t109, 0, 0, 0, 0, 0, t532, t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t532, t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t20 - qJD(5) * t38, -qJD(4) * t19 - qJD(5) * t39, 0, 0, 0, 0, 0, -qJD(4) * t1 - t329 * t433, -qJD(4) * t2 - t328 * t433; 0, 0, 0, 0, 0, t418, t298 * qJD(4), 0, 0, 0, t304 * t437, t304 * t434, -t315 * t419 + t316 * t418, -t275 * qJD(5) - 0.2e1 * t325 * t403, -t277 * qJD(4) + t321 * t422, t276 * qJD(4) + t321 * t421, -t418, -qJD(4) * t85 - qJD(5) * t129, qJD(4) * t86 + qJD(5) * t128 (-qJD(4) * t254 - t542) * t253, t89 * qJD(4) + t111 * t433, -t138 * qJD(4) + t405 * t549, -t137 * qJD(4) + t253 * t405, -t418, -qJD(4) * t13 - qJD(5) * t36 - qJD(6) * t45, qJD(4) * t14 + qJD(5) * t37 + qJD(6) * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, t417, t439, t434, -t437, 0, -t303 * t434 + t420, t303 * t437 + t426, -t261 + (t316 * t438 + t424) * t325, -0.2e1 * t321 * t419 + t325 * t533, t301 - t440, t416 + t441, -t271 (t320 * t395 - t428) * qJD(4) + t147 * qJD(5) + t384 (t324 * t395 + t430) * qJD(4) + t146 * qJD(5) + t385 -(t453 + t455) * t254 + t515, t460 + (t254 * t272 - t382 * t548) * qJD(4) + t516, t259 - t456 - t459, t189 * t433 - t423 - t445, -t249 (t260 * t272 + t313 * t548 + t321 * t383) * qJD(4) + t17 * qJD(5) + t33 * qJD(6) + t352 (-t224 * t321 - t254 * t313 + t260 * t382) * qJD(4) + t18 * qJD(5) + t32 * qJD(6) + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355, -t354, t320 * t377, t362, t306, qJD(4) * t147 - qJD(5) * t207 - t380, qJD(4) * t146 + qJD(5) * t206 - t381, t67, t34, t69, t70, t306, qJD(4) * t17 + qJD(5) * t81 + qJD(6) * t27 - t389, qJD(4) * t18 - qJD(5) * t82 + qJD(6) * t29 - t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t34, t69, t70, t306, qJD(4) * t33 + qJD(5) * t27 - qJD(6) * t79 - t386, qJD(4) * t32 + qJD(5) * t29 + qJD(6) * t78 - t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t437, -t434, 0, 0, 0, 0, 0, -t416 - t422, t301 - t421, 0, 0, 0, 0, 0, t190 * t433 + t423, t259 - t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320 * t434 - t324 * t436, t320 * t436 - t324 * t434, 0, 0, 0, 0, 0, t46, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t20, qJD(2) * t19, 0, 0, 0, 0, 0, t1 * qJD(2) - t433 * t63, t2 * qJD(2) - t433 * t64; 0, 0, 0, 0, 0, -t417, -t439, 0, 0, 0, -t420, -t426, -t316 * t417 - t261, 0.2e1 * t320 * t362, -t421 + t440, t422 - t441, t271, qJD(5) * t214 - t384, qJD(5) * t213 - t385, t254 * t455 + t515, -t460 + t516, t456 - t458, -t185 * t433 + t445, t249, -qJD(5) * t16 - qJD(6) * t30 - t352, -qJD(5) * t15 - qJD(6) * t31 - t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186 * t433, -t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419, t297 * qJD(5), 0, 0, 0, -pkin(4) * t449, -pkin(4) * t448, -t272 * t406, t433 * t150, 0, 0, 0, qJD(5) * t180 + t382 * t446, qJD(5) * t181 - t272 * t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t361, t533, -t404 * t324, t404 * t320, t308, -pkin(9) * t448 - t371, pkin(9) * t449 - t372, t74, t42, t90, t91, t308, t378 + t547, t379 + t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t42, t90, t91, t308, -t363 + t547, -t364 + t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t38, qJD(2) * t39, 0, 0, 0, 0, 0, t534, t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, t354 (-t320 * t438 + t450) * t325 (-t425 - t451) * t325, t306, -qJD(4) * t214 + t380, -qJD(4) * t213 + t381, -t67, -t34, t99, t100, t306, qJD(4) * t16 + qJD(6) * t26 + t389, qJD(4) * t15 + qJD(6) * t28 + t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t361, -t533, t324 * t435, -t320 * t435, t307, t371, t372, -t74, -t42, t155, t153, t307, -t378 + t512, -t379 + t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319 * t513, -t323 * t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319 * t407 + t492, -t323 * t407 + t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534, t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t34, t99, t100, t306, qJD(4) * t30 - qJD(5) * t26 + t386, qJD(4) * t31 - qJD(5) * t28 + t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, -t42, t155, t153, t307, t363 + t512, t364 + t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319 * t514 - t492, t323 * t514 - t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
