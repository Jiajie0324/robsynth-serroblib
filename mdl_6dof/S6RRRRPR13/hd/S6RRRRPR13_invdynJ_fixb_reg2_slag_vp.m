% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR13_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR13_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR13_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR13_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR13_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR13_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:04:13
% EndTime: 2019-03-10 00:05:03
% DurationCPUTime: 27.64s
% Computational Cost: add. (26385->1020), mult. (63729->1305), div. (0->0), fcn. (50822->12), ass. (0->436)
t405 = sin(qJ(2));
t635 = cos(pkin(6));
t565 = pkin(1) * t635;
t391 = t405 * t565;
t404 = sin(qJ(3));
t663 = cos(qJ(3));
t472 = pkin(3) * t404 - pkin(10) * t663;
t401 = sin(pkin(6));
t408 = cos(qJ(2));
t614 = t401 * t408;
t717 = -(t391 + (pkin(8) + t472) * t614) * qJD(1) + t472 * qJD(3);
t403 = sin(qJ(4));
t407 = cos(qJ(4));
t560 = t401 * t663;
t515 = qJD(1) * t560;
t480 = t408 * t515;
t596 = qJD(1) * t405;
t552 = t401 * t596;
t253 = t403 * t480 - t407 * t552;
t542 = qJD(3) * t663;
t471 = t403 * t542 - t253;
t597 = qJD(1) * t401;
t379 = t408 * t597;
t517 = t404 * t379;
t593 = qJD(3) * t404;
t684 = t517 - t593;
t535 = t635 * qJD(1);
t516 = pkin(1) * t535;
t302 = -pkin(8) * t552 + t408 * t516;
t504 = pkin(2) * t405 - pkin(9) * t408;
t303 = t504 * t597;
t193 = t663 * t302 + t404 * t303;
t169 = pkin(10) * t552 + t193;
t348 = -pkin(3) * t663 - t404 * pkin(10) - pkin(2);
t558 = t403 * t663;
t591 = qJD(4) * t407;
t605 = -t407 * t169 + t348 * t591 + (-qJD(4) * t558 - t407 * t593) * pkin(9) + t717 * t403;
t705 = -t404 * t591 - t471;
t478 = t535 + qJD(2);
t266 = t404 * t552 - t663 * t478;
t257 = qJD(4) + t266;
t458 = t404 * t478;
t527 = t635 * qJDD(1);
t473 = t527 + qJDD(2);
t594 = qJD(2) * t408;
t550 = t404 * t594;
t584 = qJDD(1) * t405;
t151 = qJD(3) * t458 + t401 * (qJD(1) * (t405 * t542 + t550) + t404 * t584) - t663 * t473;
t143 = qJDD(4) + t151;
t664 = cos(qJ(1));
t507 = t635 * t664;
t662 = sin(qJ(1));
t320 = t405 * t507 + t408 * t662;
t561 = t401 * t664;
t230 = t320 * t663 - t404 * t561;
t319 = t405 * t662 - t408 * t507;
t170 = t230 * t403 - t319 * t407;
t171 = t230 * t407 + t319 * t403;
t402 = sin(qJ(6));
t406 = cos(qJ(6));
t716 = t170 * t406 - t171 * t402;
t715 = t170 * t402 + t171 * t406;
t268 = t405 * t515 + t458;
t492 = t379 - qJD(3);
t204 = t407 * t268 - t403 * t492;
t585 = qJD(1) * qJD(2);
t540 = t405 * t585;
t510 = t401 * t540;
t583 = qJDD(1) * t408;
t378 = t401 * t583;
t581 = qJDD(3) - t378;
t450 = t510 + t581;
t474 = qJD(2) * t516;
t509 = pkin(1) * t527;
t569 = pkin(8) * t378 + t405 * t509 + t408 * t474;
t206 = -pkin(8) * t510 + t569;
t182 = pkin(9) * t473 + t206;
t466 = t504 * qJD(2);
t476 = -pkin(2) * t408 - pkin(9) * t405 - pkin(1);
t189 = (qJD(1) * t466 + qJDD(1) * t476) * t401;
t600 = pkin(8) * t614 + t391;
t291 = t635 * pkin(9) + t600;
t241 = qJD(2) * pkin(9) + qJD(1) * t291;
t255 = t476 * t597;
t523 = t404 * t182 - t663 * t189 + t241 * t542 + t255 * t593;
t58 = -pkin(3) * t450 + t523;
t525 = qJD(4) * t492;
t592 = qJD(4) * t403;
t555 = t408 * t663;
t514 = qJD(2) * t555;
t557 = t405 * t663;
t704 = t266 * qJD(3) - t404 * t473 - (qJD(1) * t514 + qJDD(1) * t557) * t401;
t85 = t268 * t592 - t403 * t450 + (t704 + t525) * t407;
t417 = -t85 * qJ(5) + t204 * qJD(5) - t58;
t668 = pkin(4) + pkin(5);
t412 = -t403 * t704 - t407 * t450;
t86 = qJD(4) * t204 + t412;
t10 = -t668 * t86 + t417;
t506 = t635 * t662;
t322 = -t405 * t506 + t408 * t664;
t559 = t401 * t662;
t233 = t322 * t404 - t559 * t663;
t615 = t401 * t405;
t317 = t404 * t615 - t635 * t663;
t531 = -t320 * t404 - t664 * t560;
t452 = g(1) * t233 - g(2) * t531 + g(3) * t317;
t714 = t10 + t452;
t641 = -qJ(5) * t684 - qJD(5) * t663 + t605;
t713 = t404 * t704;
t240 = -pkin(2) * t478 - t302;
t127 = t266 * pkin(3) - t268 * pkin(10) + t240;
t150 = t241 * t663 + t404 * t255;
t130 = -pkin(10) * t492 + t150;
t69 = t407 * t127 - t403 * t130;
t609 = qJD(5) - t69;
t556 = t407 * t663;
t393 = pkin(9) * t556;
t692 = -qJD(4) * t393 + t403 * t169 - t348 * t592 + t407 * t717;
t706 = -pkin(11) * t204 + t609;
t41 = -t257 * t668 + t706;
t248 = t257 * qJ(5);
t202 = t268 * t403 + t407 * t492;
t70 = t127 * t403 + t130 * t407;
t51 = pkin(11) * t202 + t70;
t47 = t248 + t51;
t16 = -t402 * t47 + t406 * t41;
t586 = qJD(6) - t257;
t712 = t16 * t586;
t17 = t402 * t41 + t406 * t47;
t711 = t17 * t586;
t270 = (t403 * t405 + t407 * t555) * t401;
t254 = qJD(1) * t270;
t548 = t404 * t592;
t567 = -pkin(9) * t403 - pkin(4);
t710 = t517 * t668 + (-pkin(5) + t567) * t593 - t692 + (-qJD(3) * t556 + t254 + t548) * pkin(11);
t709 = -pkin(11) * t705 + t641;
t656 = pkin(11) * t266;
t667 = pkin(10) - pkin(11);
t149 = -t404 * t241 + t663 * t255;
t186 = pkin(3) * t268 + pkin(10) * t266;
t93 = t407 * t149 + t403 * t186;
t74 = t268 * qJ(5) + t93;
t708 = -t403 * t656 + t667 * t592 + t74;
t134 = t403 * t149;
t363 = t667 * t407;
t707 = qJD(4) * t363 - t134 - (-t186 + t656) * t407 + t668 * t268;
t112 = t202 * t402 + t204 * t406;
t484 = -t406 * t202 + t204 * t402;
t631 = t112 * t484;
t470 = t407 * t542 - t254;
t324 = -pkin(8) * t615 + t408 * t565;
t306 = qJD(2) * t324;
t703 = t112 ^ 2 - t484 ^ 2;
t536 = -t402 * t85 - t406 * t86;
t31 = qJD(6) * t112 + t536;
t702 = t112 * t586 - t31;
t587 = qJD(6) * t406;
t588 = qJD(6) * t402;
t30 = -t202 * t587 + t204 * t588 - t402 * t86 + t406 * t85;
t680 = t484 * t586 - t30;
t645 = t407 * t86;
t646 = t403 * t85;
t701 = t404 * (qJD(4) * (t202 * t403 - t204 * t407) - t645 + t646) - (t202 * t556 + t204 * t558) * qJD(3) + t254 * t202 + t204 * t253;
t630 = t143 * t403;
t700 = -t471 * t257 + t404 * (t202 * t492 - t257 * t591 - t630) + t663 * t86;
t626 = t204 * t257;
t628 = t202 * t257;
t699 = t403 * (t86 + t626) + t407 * (t85 + t628);
t459 = -t663 * t182 - t404 * t189 + t241 * t593 - t255 * t542;
t57 = pkin(10) * t450 - t459;
t538 = t401 * t584;
t539 = t408 * t585;
t522 = t405 * t474 - t408 * t509 + (t401 * t539 + t538) * pkin(8);
t183 = -pkin(2) * t473 + t522;
t63 = t151 * pkin(3) + pkin(10) * t704 + t183;
t526 = t127 * t592 + t130 * t591 + t403 * t57 - t407 * t63;
t490 = qJDD(5) + t526;
t7 = pkin(11) * t85 - t143 * t668 + t490;
t13 = t127 * t591 - t130 * t592 + t403 * t63 + t407 * t57;
t136 = t143 * qJ(5);
t247 = t257 * qJD(5);
t11 = t13 + t136 + t247;
t9 = pkin(11) * t86 + t11;
t2 = -qJD(6) * t17 - t402 * t9 + t406 * t7;
t318 = t401 * t557 + t404 * t635;
t227 = t318 * t403 + t407 * t614;
t228 = t318 * t407 - t403 * t614;
t482 = t227 * t406 - t228 * t402;
t129 = pkin(3) * t492 - t149;
t439 = t204 * qJ(5) - t129;
t49 = -t202 * t668 + t439;
t234 = t322 * t663 + t404 * t559;
t321 = t405 * t664 + t408 * t506;
t174 = t234 * t403 - t321 * t407;
t175 = t234 * t407 + t321 * t403;
t96 = t174 * t406 - t175 * t402;
t698 = -g(1) * t96 - g(2) * t716 - g(3) * t482 - t49 * t112 + t2;
t398 = t401 ^ 2;
t696 = 0.2e1 * t398;
t693 = t404 * t492;
t691 = qJD(5) * t403 + t150;
t578 = pkin(9) * t593;
t690 = t193 + t578;
t226 = -qJD(3) * t317 + t401 * t514;
t689 = -qJD(4) * t614 + t226;
t396 = t663 * pkin(4);
t688 = -t663 * pkin(5) - t396;
t687 = -t403 * t587 + t406 * t592 + t407 * t588;
t686 = (qJDD(2) + 0.2e1 * t527) * t401;
t685 = t480 - t542;
t611 = t403 * t406;
t683 = -t402 * t407 + t611;
t307 = t600 * qJD(2);
t332 = t402 * t403 + t406 * t407;
t682 = t332 * qJD(6) - t402 * t592 - t406 * t591;
t659 = pkin(10) * t143;
t68 = t202 * pkin(4) - t439;
t679 = t257 * t68 - t659;
t632 = qJ(5) * t407;
t676 = t403 * t668 - t632;
t633 = qJ(5) * t403;
t675 = -t407 * t668 - t633;
t132 = t227 * t402 + t228 * t406;
t469 = -t402 * t7 - t406 * t9 - t41 * t587 + t47 * t588;
t97 = t174 * t402 + t175 * t406;
t671 = g(1) * t97 + g(2) * t715 + g(3) * t132 + t484 * t49 + t469;
t670 = t204 ^ 2;
t669 = t257 ^ 2;
t410 = qJD(1) ^ 2;
t661 = pkin(4) * t143;
t660 = pkin(5) * t227;
t658 = pkin(10) * t204;
t657 = pkin(10) * t233;
t651 = t531 * pkin(10);
t392 = pkin(9) * t558;
t208 = t392 + (-pkin(11) * t404 - t348) * t407 - t688;
t280 = t403 * t348 + t393;
t553 = t663 * qJ(5);
t245 = -t553 + t280;
t612 = t403 * t404;
t213 = pkin(11) * t612 + t245;
t120 = t208 * t406 - t213 * t402;
t650 = qJD(6) * t120 + t402 * t710 + t406 * t709;
t121 = t208 * t402 + t213 * t406;
t649 = -qJD(6) * t121 - t402 * t709 + t406 * t710;
t60 = t248 + t70;
t648 = t257 * t60;
t647 = t257 * t70;
t192 = -t404 * t302 + t663 * t303;
t461 = pkin(3) * t552 + t192;
t435 = qJ(5) * t254 + t461;
t579 = t663 * pkin(9);
t443 = -t407 * t553 + t579;
t589 = qJD(5) * t407;
t644 = t253 * t668 + (qJD(4) * t675 + t589) * t404 + (t403 * t688 - t443) * qJD(3) - t435;
t362 = t667 * t403;
t243 = t362 * t406 - t363 * t402;
t643 = qJD(6) * t243 + t402 * t707 - t406 * t708;
t244 = t362 * t402 + t363 * t406;
t642 = -qJD(6) * t244 + t402 * t708 + t406 * t707;
t640 = pkin(4) * t517 + t567 * t593 - t692;
t639 = -t257 * t676 + t691;
t339 = -qJ(5) * t402 - t406 * t668;
t638 = qJD(6) * t339 - t402 * t51 + t406 * t706;
t340 = qJ(5) * t406 - t402 * t668;
t637 = -qJD(6) * t340 - t402 * t706 - t406 * t51;
t493 = pkin(4) * t403 - t632;
t636 = t257 * t493 - t691;
t634 = qJ(5) * t202;
t629 = t143 * t407;
t627 = t204 * t202;
t625 = t531 * t407;
t624 = t233 * t407;
t623 = t257 * t268;
t622 = t268 * t266;
t310 = t317 * qJ(5);
t621 = t317 * t407;
t619 = t319 * t404;
t617 = t321 * t404;
t616 = t398 * t410;
t610 = t404 * t407;
t608 = t402 * t705 + t404 * t687 - t406 * t470;
t607 = t402 * t470 + t404 * t682 - t406 * t471;
t290 = -pkin(2) * t635 - t324;
t311 = t317 * pkin(3);
t160 = -t318 * pkin(10) + t290 + t311;
t601 = pkin(2) * t614 + pkin(9) * t615;
t292 = -pkin(1) * t401 - t601;
t188 = t663 * t291 + t404 * t292;
t162 = -pkin(10) * t614 + t188;
t90 = t403 * t160 + t407 * t162;
t494 = pkin(4) * t407 + t633;
t606 = -pkin(4) * t253 + (qJD(4) * t494 - t589) * t404 + (pkin(4) * t558 + t443) * qJD(3) + t435;
t604 = t403 * t578 + t692;
t603 = t332 * t266 - t682;
t602 = -t266 * t683 + t402 * t591 - t687;
t187 = -t404 * t291 + t663 * t292;
t599 = t664 * pkin(1) + pkin(8) * t559;
t399 = t405 ^ 2;
t400 = t408 ^ 2;
t598 = t399 - t400;
t595 = qJD(2) * t405;
t576 = t408 * t616;
t575 = t404 * t614;
t77 = t310 + t90;
t220 = t531 * pkin(3);
t574 = pkin(4) * t625 + t531 * t633 + t220;
t222 = t233 * pkin(3);
t573 = -pkin(4) * t624 - t233 * t633 - t222;
t161 = pkin(3) * t614 - t187;
t572 = -pkin(4) * t621 - t403 * t310 - t311;
t312 = t319 * pkin(2);
t563 = t319 * t663;
t571 = -pkin(3) * t563 - pkin(10) * t619 - t312;
t314 = t321 * pkin(2);
t562 = t321 * t663;
t570 = -pkin(3) * t562 - pkin(10) * t617 - t314;
t568 = -g(1) * t617 - g(2) * t619 + g(3) * t575;
t564 = t151 * t663;
t551 = t401 * t595;
t543 = t202 ^ 2 - t670;
t541 = pkin(1) * t696;
t534 = -t170 * pkin(4) + qJ(5) * t171;
t533 = -t174 * pkin(4) + qJ(5) * t175;
t532 = -t227 * pkin(4) + qJ(5) * t228;
t92 = t186 * t407 - t134;
t89 = t160 * t407 - t403 * t162;
t279 = t407 * t348 - t392;
t530 = t586 ^ 2;
t529 = t257 * t403;
t528 = t257 * t407;
t524 = t405 * t576;
t304 = t401 * t466;
t107 = -t291 * t542 - t292 * t593 + t663 * t304 - t404 * t306;
t520 = t401 * t555;
t521 = pkin(3) * t520 + pkin(10) * t575 + t601;
t511 = t405 * t539;
t508 = -pkin(1) * t662 + pkin(8) * t561;
t505 = t401 * t410 * t635;
t503 = -g(1) * t170 + g(2) * t174;
t502 = g(1) * t171 - g(2) * t175;
t501 = g(1) * t531 + g(2) * t233;
t500 = -g(1) * t319 + g(2) * t321;
t499 = g(1) * t322 + g(2) * t320;
t497 = t492 * t663;
t496 = (qJD(4) * t202 - t85) * pkin(10);
t495 = t492 * t597;
t56 = -pkin(11) * t228 - t317 * t668 - t89;
t64 = pkin(11) * t227 + t77;
t26 = -t402 * t64 + t406 * t56;
t28 = t402 * t56 + t406 * t64;
t123 = t318 * t591 + t403 * t689 - t407 * t551;
t489 = t123 * t202 + t227 * t86;
t488 = -t202 * t268 - t629;
t477 = 0.2e1 * t535 + qJD(2);
t475 = t322 * pkin(2) + pkin(9) * t321 + t599;
t106 = -t291 * t593 + t292 * t542 + t404 * t304 + t663 * t306;
t102 = pkin(10) * t551 + t106;
t225 = qJD(3) * t318 + t401 * t550;
t115 = t225 * pkin(3) - t226 * pkin(10) + t307;
t34 = -t403 * t102 + t115 * t407 - t160 * t592 - t162 * t591;
t468 = qJD(3) * t497;
t464 = t234 * pkin(3) + t475;
t460 = t129 * t257 - t659;
t91 = -t532 + t161;
t33 = t407 * t102 + t403 * t115 + t160 * t591 - t162 * t592;
t456 = g(1) * t664 + g(2) * t662;
t455 = -g(1) * t174 - g(2) * t170 - g(3) * t227;
t197 = -t319 * t558 - t320 * t407;
t199 = -t321 * t558 - t322 * t407;
t269 = t403 * t520 - t407 * t615;
t454 = -g(1) * t199 - g(2) * t197 - g(3) * t269;
t198 = -t319 * t556 + t320 * t403;
t200 = -t321 * t556 + t322 * t403;
t453 = -g(1) * t200 - g(2) * t198 - g(3) * t270;
t451 = g(1) * t234 + g(2) * t230 + g(3) * t318;
t448 = t270 * pkin(4) + qJ(5) * t269 + t521;
t447 = t202 * t529 - t645;
t446 = -t320 * pkin(2) - t319 * pkin(9) + t508;
t445 = -pkin(10) * t645 - t451;
t442 = pkin(3) * t551 + t107;
t438 = -pkin(3) * t230 + t446;
t25 = t225 * qJ(5) + t317 * qJD(5) + t33;
t437 = t198 * pkin(4) + pkin(9) * t320 + qJ(5) * t197 + t571;
t436 = t200 * pkin(4) + pkin(9) * t322 + qJ(5) * t199 + t570;
t432 = t175 * pkin(4) + qJ(5) * t174 + t464;
t124 = -t318 * t592 + t403 * t551 + t407 * t689;
t431 = t123 * t204 + t124 * t202 - t227 * t85 + t228 * t86;
t430 = t123 * t257 + t143 * t227 + t202 * t225 + t317 * t86;
t429 = -pkin(10) * qJD(4) * t257 + t452;
t428 = t404 * t523 - t459 * t663 - t499;
t427 = -t455 - t526;
t15 = t86 * pkin(4) - t417;
t425 = -t15 + t429;
t424 = -t429 + t58;
t423 = -pkin(4) * t171 - qJ(5) * t170 + t438;
t421 = qJ(5) * t124 + qJD(5) * t228 + t442;
t420 = t204 * t68 + qJDD(5) - t427;
t419 = -t202 * t705 + t86 * t612;
t418 = g(1) * t175 + g(2) * t171 + g(3) * t228 + t257 * t69 - t13;
t411 = t268 * t591 - t403 * t525 + t412 - t626;
t343 = -pkin(3) - t494;
t328 = pkin(3) - t675;
t309 = t332 * t404;
t308 = t402 * t610 - t404 * t611;
t305 = t600 * qJD(1);
t293 = (pkin(9) + t493) * t404;
t246 = -t279 + t396;
t242 = (-pkin(9) - t676) * t404;
t138 = -qJDD(6) + t143;
t114 = pkin(4) * t204 + t634;
t88 = -t204 * t668 - t634;
t87 = -t143 * t663 - t257 * t693;
t79 = t143 * t317 + t225 * t257;
t78 = -pkin(4) * t317 - t89;
t76 = -pkin(4) * t268 - t92;
t72 = -t91 - t660;
t59 = -pkin(4) * t257 + t609;
t52 = -t85 + t628;
t48 = -t204 * t268 + t257 * t528 + t630;
t46 = qJD(6) * t482 + t123 * t402 + t124 * t406;
t45 = qJD(6) * t132 - t123 * t406 + t124 * t402;
t42 = t204 * t528 - t646;
t39 = t124 * t204 - t228 * t85;
t38 = pkin(4) * t123 - t421;
t37 = -t85 * t610 + (t470 - t548) * t204;
t32 = -pkin(4) * t225 - t34;
t24 = -t123 * t668 + t421;
t21 = t85 * t663 + t470 * t257 + (-t204 * t492 - t257 * t592 + t629) * t404;
t20 = t124 * t257 + t143 * t228 + t204 * t225 - t317 * t85;
t19 = pkin(11) * t123 + t25;
t18 = -pkin(11) * t124 - t225 * t668 - t34;
t12 = t490 - t661;
t4 = -qJD(6) * t28 + t18 * t406 - t19 * t402;
t3 = qJD(6) * t26 + t18 * t402 + t19 * t406;
t1 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t662 - g(2) * t664, t456, 0, 0 (qJDD(1) * t399 + 0.2e1 * t511) * t398 (t405 * t583 - t585 * t598) * t696, t401 * t477 * t594 + t405 * t686 (qJDD(1) * t400 - 0.2e1 * t511) * t398, t408 * t686 - t477 * t551, t473 * t635, -t307 * t478 + t324 * t473 - t522 * t635 + g(1) * t320 - g(2) * t322 + (-t540 + t583) * t541, -t306 * t478 - t600 * t473 - t206 * t635 + (-t539 - t584) * t541 + t500 ((-t302 * qJD(2) + qJDD(1) * t600 + t206) * t408 + (-qJD(2) * t305 - qJDD(1) * t324 + t522) * t405 - t456) * t401, t398 * qJDD(1) * pkin(1) ^ 2 - g(1) * t508 - g(2) * t599 + t206 * t600 - t302 * t307 + t305 * t306 - t324 * t522, t268 * t226 - t318 * t704, -t318 * t151 - t268 * t225 - t226 * t266 + t317 * t704, -t226 * t492 + t318 * t581 + (t268 * t595 + t318 * t540 + t408 * t704) * t401, t151 * t317 + t225 * t266, t225 * t492 - t317 * t581 + (t151 * t408 + (-qJD(1) * t317 - t266) * t595) * t401 (-t581 * t408 + (-t379 - t492) * t595) * t401, -t107 * t492 + t187 * t581 + t307 * t266 + t290 * t151 + t183 * t317 + t240 * t225 + g(1) * t230 - g(2) * t234 + (t523 * t408 + (qJD(1) * t187 + t149) * t595) * t401, t106 * t492 - t150 * t551 + t183 * t318 - t188 * t450 + t240 * t226 + t307 * t268 - t290 * t704 - t459 * t614 + t501, -t106 * t266 - t107 * t268 - t149 * t226 - t150 * t225 - t188 * t151 + t187 * t704 + t317 * t459 + t318 * t523 - t500, -g(1) * t446 - g(2) * t475 + t150 * t106 + t149 * t107 + t183 * t290 - t187 * t523 - t188 * t459 + t240 * t307, t39, -t431, t20, t489, -t430, t79, t123 * t129 + t143 * t89 + t161 * t86 - t202 * t442 + t225 * t69 + t227 * t58 + t257 * t34 - t317 * t526 + t502, t124 * t129 - t13 * t317 - t143 * t90 - t161 * t85 - t204 * t442 - t225 * t70 + t228 * t58 - t257 * t33 + t503, -t123 * t70 - t124 * t69 - t13 * t227 - t202 * t33 - t204 * t34 + t228 * t526 + t85 * t89 - t86 * t90 - t501, t13 * t90 + t70 * t33 - t526 * t89 + t69 * t34 + t58 * t161 - t129 * t442 - g(1) * (t438 + t651) - g(2) * (t464 + t657) t39, t20, t431, t79, t430, t489, -t12 * t317 + t123 * t68 - t143 * t78 + t15 * t227 + t202 * t38 - t225 * t59 - t257 * t32 + t86 * t91 + t502, -t11 * t227 + t12 * t228 - t123 * t60 + t124 * t59 - t202 * t25 + t204 * t32 - t77 * t86 - t78 * t85 - t501, t11 * t317 - t124 * t68 + t143 * t77 - t15 * t228 - t204 * t38 + t225 * t60 + t25 * t257 + t85 * t91 - t503, t11 * t77 + t60 * t25 + t15 * t91 + t68 * t38 + t12 * t78 + t59 * t32 - g(1) * (t423 + t651) - g(2) * (t432 + t657) t112 * t46 - t132 * t30, -t112 * t45 - t132 * t31 - t30 * t482 - t46 * t484, -t112 * t225 - t132 * t138 + t30 * t317 + t46 * t586, -t31 * t482 + t45 * t484, -t138 * t482 + t225 * t484 + t31 * t317 - t45 * t586, t138 * t317 - t225 * t586, g(1) * t715 - g(2) * t97 - t10 * t482 - t26 * t138 - t16 * t225 - t2 * t317 + t24 * t484 + t72 * t31 + t4 * t586 + t49 * t45, g(1) * t716 - g(2) * t96 + t10 * t132 + t24 * t112 + t28 * t138 + t17 * t225 - t3 * t586 - t72 * t30 - t469 * t317 + t49 * t46, -t112 * t4 - t132 * t2 - t16 * t46 - t17 * t45 + t26 * t30 - t28 * t31 - t3 * t484 - t469 * t482 + t501, -t469 * t28 + t17 * t3 + t2 * t26 + t16 * t4 + t10 * t72 + t49 * t24 - g(1) * (-pkin(5) * t171 + t531 * t667 + t423) - g(2) * (pkin(5) * t175 + t233 * t667 + t432); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, t598 * t616, -t408 * t505 + t538, t524, t405 * t505 + t378, t473, pkin(1) * t405 * t616 + g(1) * t321 + g(2) * t319 - g(3) * t614 + t305 * t478 - t522, pkin(1) * t576 + t302 * t478 + (pkin(8) * t585 + g(3)) * t615 + t499 - t569, 0, 0, -t268 * t685 - t713, -t404 * t151 + t266 * t685 + t268 * t684 - t663 * t704, -t468 + t404 * t581 + (t408 * t497 + (qJD(2) * t404 - t268) * t405) * t597, -t266 * t693 - t564, t663 * t450 + t266 * t552 + (qJD(3) * t492 - t408 * t495) * t404, t405 * t495, pkin(9) * t468 - pkin(2) * t151 - t183 * t663 + t192 * t492 - t305 * t266 + g(1) * t562 + g(2) * t563 + (-g(3) * t555 - t149 * t596) * t401 + (-pkin(9) * t450 - t240 * t492) * t404, pkin(2) * t704 + t150 * t552 + t183 * t404 - t240 * t685 - t305 * t268 - t450 * t579 - t492 * t690 + t568, -g(3) * t615 + t192 * t268 + t428 + t690 * t266 + t684 * t150 + t685 * t149 + (t268 * t542 - t564 - t713) * pkin(9), -t183 * pkin(2) - t150 * t193 - t149 * t192 - t240 * t305 + g(1) * t314 + g(2) * t312 - g(3) * t601 + ((-t149 * t663 - t150 * t404) * qJD(3) + t428) * pkin(9), t37, t701, t21, t419, t700, t87, t526 * t663 - t129 * t253 + t279 * t143 + t461 * t202 + t604 * t257 + (t129 * t558 + t202 * t579) * qJD(3) + (pkin(9) * t86 + t129 * t591 + t403 * t58 - t492 * t69) * t404 + t453, t13 * t663 - t129 * t254 - t280 * t143 + t461 * t204 - t605 * t257 + (t129 * t556 + t204 * t579) * qJD(3) + (-pkin(9) * t85 - t129 * t592 + t407 * t58 + t492 * t70) * t404 - t454, t70 * t253 + t69 * t254 + t279 * t85 - t280 * t86 - t604 * t204 - t605 * t202 + (-t556 * t69 - t558 * t70) * qJD(3) + (-t13 * t403 + t526 * t407 + (t403 * t69 - t407 * t70) * qJD(4)) * t404 - t568, t13 * t280 - t526 * t279 + t129 * t461 - g(1) * t570 - g(2) * t571 - g(3) * t521 + t605 * t70 + t604 * t69 + (t129 * t542 + t58 * t404 - t499) * pkin(9), t37, t21, -t701, t87, -t700, t419, t12 * t663 - t246 * t143 + t293 * t86 + t471 * t68 - t640 * t257 + t606 * t202 + (t15 * t403 + t492 * t59 + t591 * t68) * t404 + t453, -t245 * t86 - t246 * t85 + t60 * t253 - t59 * t254 + t640 * t204 - t641 * t202 + (t556 * t59 - t558 * t60) * qJD(3) + (-t11 * t403 + t12 * t407 + (-t403 * t59 - t407 * t60) * qJD(4)) * t404 - t568, -t11 * t663 + t245 * t143 + t293 * t85 - t470 * t68 + t641 * t257 - t606 * t204 + (-t15 * t407 - t492 * t60 + t592 * t68) * t404 + t454, -g(1) * t436 - g(2) * t437 - g(3) * t448 + t11 * t245 + t12 * t246 + t15 * t293 + t59 * t640 + t60 * t641 + t606 * t68, -t112 * t608 - t30 * t309, -t112 * t607 + t30 * t308 - t309 * t31 + t484 * t608, t112 * t693 - t309 * t138 - t30 * t663 - t586 * t608, t308 * t31 + t484 * t607, t308 * t138 - t31 * t663 - t484 * t693 - t586 * t607, -t138 * t663 + t586 * t693, -t120 * t138 + t2 * t663 + t242 * t31 + t10 * t308 - g(1) * (t199 * t402 + t200 * t406) - g(2) * (t197 * t402 + t198 * t406) - g(3) * (t269 * t402 + t270 * t406) + t607 * t49 + t649 * t586 + t16 * t693 + t644 * t484, t121 * t138 + t469 * t663 - t242 * t30 + t10 * t309 - g(1) * (t199 * t406 - t200 * t402) - g(2) * (t197 * t406 - t198 * t402) - g(3) * (t269 * t406 - t270 * t402) - t608 * t49 - t650 * t586 - t17 * t693 + t644 * t112, -t112 * t649 + t120 * t30 - t121 * t31 + t16 * t608 - t17 * t607 - t2 * t309 + t308 * t469 - t484 * t650 + t568, -t469 * t121 + t2 * t120 + t10 * t242 - g(1) * (pkin(5) * t200 + pkin(11) * t617 + t436) - g(2) * (pkin(5) * t198 + pkin(11) * t619 + t437) - g(3) * (pkin(5) * t270 - pkin(11) * t575 + t448) + t644 * t49 + t650 * t17 + t649 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t622, -t266 ^ 2 + t268 ^ 2, -t266 * t492 - t704, -t622, -t268 * t492 - t151, t450, -t150 * t492 - t240 * t268 + t452 - t523, -t149 * t492 + t240 * t266 + t451 + t459, 0, 0, t42, -t699, t48, t447, -t403 * t669 - t488, -t623, -pkin(3) * t86 - t150 * t202 - t257 * t92 - t268 * t69 + t403 * t460 - t407 * t424, pkin(3) * t85 - t150 * t204 + t257 * t93 + t268 * t70 + t403 * t424 + t407 * t460, t202 * t93 + t204 * t92 + (-t266 * t69 + t13 + (-t69 + t658) * qJD(4)) * t407 + (t526 + t496 - t647) * t403 + t445, -t58 * pkin(3) + g(1) * t222 - g(2) * t220 + g(3) * t311 - t129 * t150 - t69 * t92 - t70 * t93 + (t13 * t407 + t526 * t403 + (-t403 * t70 - t407 * t69) * qJD(4) - t451) * pkin(10), t42, t48, t699, -t623, t257 * t529 + t488, t447, t636 * t202 + t257 * t76 + t268 * t59 + t343 * t86 + t403 * t679 + t425 * t407, t202 * t74 - t204 * t76 + (t266 * t59 + t11 + (t59 + t658) * qJD(4)) * t407 + (t12 + t496 - t648) * t403 + t445, -t636 * t204 - t257 * t74 - t268 * t60 + t343 * t85 + t425 * t403 - t407 * t679, t15 * t343 - t60 * t74 - t59 * t76 - g(1) * t573 - g(2) * t574 - g(3) * t572 + t636 * t68 + (t11 * t407 + t12 * t403 + (-t403 * t60 + t407 * t59) * qJD(4) - t451) * pkin(10), t112 * t603 - t30 * t683, -t112 * t602 + t30 * t332 - t31 * t683 - t484 * t603, t112 * t268 - t138 * t683 + t586 * t603, t31 * t332 + t484 * t602, t138 * t332 - t268 * t484 - t586 * t602, t586 * t268, -t243 * t138 + t16 * t268 + t328 * t31 + t332 * t714 + t484 * t639 + t49 * t602 + t586 * t642, t112 * t639 + t244 * t138 - t17 * t268 - t328 * t30 + t49 * t603 - t586 * t643 + t683 * t714, -t112 * t642 - t16 * t603 - t17 * t602 - t2 * t683 + t243 * t30 - t244 * t31 + t332 * t469 - t484 * t643 + t451, -t469 * t244 + t2 * t243 + t10 * t328 - g(1) * (-pkin(5) * t624 + t234 * t667 + t573) - g(2) * (pkin(5) * t625 + t230 * t667 + t574) - g(3) * (-pkin(5) * t621 + t318 * t667 + t572) + t639 * t49 + t643 * t17 + t642 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t627, -t543, t52, -t627, -t411, t143, -t129 * t204 + t427 + t647, t129 * t202 + t418, 0, 0, t627, t52, t543, t143, t411, -t627, -t114 * t202 - t420 + t647 + 0.2e1 * t661, pkin(4) * t85 - qJ(5) * t86 + (t60 - t70) * t204 + (t59 - t609) * t202, t114 * t204 - t202 * t68 + 0.2e1 * t136 + 0.2e1 * t247 - t418, -t12 * pkin(4) - g(1) * t533 - g(2) * t534 - g(3) * t532 + t11 * qJ(5) - t68 * t114 - t59 * t70 + t60 * t609, -t631, -t703, -t680, t631, -t702, t138, -t339 * t138 - t484 * t88 + t586 * t637 - t698, -t88 * t112 + t340 * t138 - t586 * t638 - t671, t30 * t339 - t31 * t340 + (t16 - t638) * t484 + (-t17 - t637) * t112, -t469 * t340 + t2 * t339 - t49 * t88 - g(1) * (-pkin(5) * t174 + t533) - g(2) * (-pkin(5) * t170 + t534) - g(3) * (t532 - t660) + t638 * t17 + t637 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t627 - t143, t52, -t669 - t670, t420 - t648 - t661, 0, 0, 0, 0, 0, 0, -t138 * t406 - t204 * t484 - t402 * t530, -t112 * t204 + t138 * t402 - t406 * t530, t402 * t702 - t406 * t680, -t204 * t49 + (t2 + t711) * t406 + (-t469 - t712) * t402 + t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t631, t703, t680, -t631, -t536 + (-qJD(6) + t586) * t112, -t138, t698 + t711, t671 + t712, 0, 0;];
tau_reg  = t1;
