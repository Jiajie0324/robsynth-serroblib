% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:39:03
% EndTime: 2019-03-08 20:39:33
% DurationCPUTime: 23.70s
% Computational Cost: add. (25677->744), mult. (56982->1043), div. (0->0), fcn. (68030->12), ass. (0->553)
t1020 = cos(qJ(4));
t698 = sin(pkin(12));
t857 = t1020 * t698;
t700 = cos(pkin(12));
t703 = sin(qJ(4));
t928 = t703 * t700;
t669 = t857 + t928;
t702 = sin(qJ(5));
t559 = t702 * t669;
t701 = sin(qJ(6));
t1019 = cos(qJ(6));
t704 = cos(qJ(5));
t848 = t1019 * t704;
t540 = -t559 * t701 + t669 * t848;
t1040 = -t540 / 0.2e1;
t856 = t1020 * t700;
t929 = t703 * t698;
t756 = t856 - t929;
t1032 = -t756 / 0.2e1;
t1050 = -pkin(10) - pkin(9);
t683 = t1050 * t704;
t849 = t1019 * t702;
t817 = -t1050 * t849 - t701 * t683;
t1099 = -t817 / 0.2e1;
t1004 = cos(pkin(6));
t1018 = sin(qJ(2));
t699 = sin(pkin(6));
t858 = t699 * t1018;
t652 = t1004 * t698 + t700 * t858;
t729 = -t1004 * t700 + t698 * t858;
t526 = t1020 * t652 - t703 * t729;
t934 = t702 * t526;
t705 = cos(qJ(2));
t945 = t699 * t705;
t473 = t704 * t945 + t934;
t927 = t704 * t526;
t474 = -t702 * t945 + t927;
t818 = t1019 * t473 + t701 * t474;
t1076 = -t818 / 0.2e1;
t866 = qJD(5) + qJD(6);
t1014 = t756 * pkin(5);
t1015 = t756 * pkin(4);
t691 = -t700 * pkin(3) - pkin(2);
t777 = t691 - t1015;
t1008 = pkin(8) + qJ(3);
t682 = t1008 * t700;
t824 = t1008 * t698;
t596 = t1020 * t682 - t703 * t824;
t932 = t702 * t596;
t342 = -t932 + (t1050 * t669 + t777) * t704;
t709 = t342 - t1014;
t314 = t1019 * t709;
t1010 = t669 * pkin(9);
t737 = t777 - t1010;
t926 = t704 * t596;
t378 = t702 * t737 + t926;
t343 = -pkin(10) * t559 + t378;
t941 = t701 * t343;
t160 = -t314 + t941;
t854 = t1019 * t342;
t177 = t854 - t941;
t1088 = t160 + t177;
t708 = t701 * t709;
t853 = t1019 * t343;
t161 = t853 + t708;
t942 = t701 * t342;
t176 = -t853 - t942;
t1087 = t161 + t176;
t293 = t1019 * t474 - t701 * t473;
t525 = t1020 * t729 + t652 * t703;
t1094 = t293 * t1032 + t1040 * t525;
t608 = t756 * t945;
t931 = t702 * t608;
t545 = t704 * t858 - t931;
t851 = t1019 * t545;
t808 = t702 * t858;
t925 = t704 * t608;
t546 = t808 + t925;
t938 = t701 * t546;
t743 = -t938 / 0.2e1 + t851 / 0.2e1;
t1084 = t743 + t1094;
t1098 = qJD(1) * t1084;
t936 = t701 * t704;
t677 = t849 + t936;
t455 = t669 * t677;
t1095 = t756 * t1076 - t525 * t455 / 0.2e1;
t850 = t1019 * t546;
t939 = t701 * t545;
t744 = -t939 / 0.2e1 - t850 / 0.2e1;
t1085 = t744 - t1095;
t1097 = qJD(1) * t1085;
t1027 = -t677 / 0.2e1;
t693 = -pkin(5) * t704 - pkin(4);
t1078 = -t693 / 0.2e1;
t595 = t1020 * t824 + t682 * t703;
t499 = pkin(5) * t559 + t595;
t937 = t701 * t702;
t605 = -t1019 * t683 + t1050 * t937;
t1096 = t1027 * t499 + t1032 * t605 + t1078 * t540;
t675 = -t848 + t937;
t1029 = -t675 / 0.2e1;
t1082 = t1029 * t499 + t455 * t1078 + t1099 * t756;
t742 = t936 / 0.2e1 + t849 / 0.2e1;
t1055 = t1027 + t742;
t222 = t1055 * t525;
t1093 = qJD(2) * t1084 + t222 * qJD(4);
t1028 = t675 / 0.2e1;
t801 = t848 / 0.2e1;
t740 = t801 - t937 / 0.2e1;
t223 = (t1028 + t740) * t525;
t1092 = qJD(2) * t1085 + t223 * qJD(4);
t1083 = t743 - t1094;
t1026 = t677 / 0.2e1;
t1056 = t1026 + t742;
t225 = t1056 * t525;
t1091 = qJD(2) * t1083 + t225 * qJD(4) - t293 * t866;
t1086 = t744 + t1095;
t224 = (t1029 + t740) * t525;
t1090 = qJD(2) * t1086 + t224 * qJD(4) + t818 * t866;
t313 = -t1026 * t455 + t1029 * t540;
t1089 = t866 * t313;
t1012 = t669 * pkin(4);
t1013 = t756 * pkin(9);
t580 = t1012 - t1013;
t568 = t702 * t580;
t579 = t595 * t704;
t417 = -t579 + t568;
t557 = t702 * t756;
t355 = -pkin(10) * t557 + t417;
t852 = t1019 * t355;
t802 = -t852 / 0.2e1;
t1011 = t669 * pkin(5);
t569 = t704 * t580;
t962 = t595 * t702;
t416 = t569 + t962;
t562 = t704 * t756;
t323 = -pkin(10) * t562 + t1011 + t416;
t943 = t701 * t323;
t746 = -t943 / 0.2e1 + t802;
t76 = t746 - t1082;
t855 = t1019 * t323;
t940 = t701 * t355;
t745 = -t940 / 0.2e1 + t855 / 0.2e1;
t75 = t745 + t1096;
t78 = t745 - t1096;
t1022 = -t702 / 0.2e1;
t1053 = t546 * t704 / 0.2e1 + t545 * t1022;
t607 = t669 * t945;
t1081 = t1053 * pkin(9) - t607 * pkin(4) / 0.2e1;
t1080 = t293 / 0.2e1;
t1079 = -t605 / 0.2e1;
t1077 = t817 / 0.2e1;
t869 = t669 * qJD(2);
t587 = t756 * t869;
t657 = t857 / 0.2e1 + t928 / 0.2e1;
t1061 = t657 * qJD(5) - t587;
t1071 = t455 * qJD(2);
t899 = qJD(4) * t677;
t1070 = -qJD(2) * t313 + t675 * t899;
t904 = qJD(2) * t540;
t1069 = qJD(4) * t313 - t455 * t904;
t887 = t223 * qJD(1);
t1068 = t817 * t866 - t887;
t1066 = t866 * t605;
t930 = t702 * t704;
t819 = 0.2e1 * t669 * t930;
t1064 = t161 / 0.2e1;
t1043 = t526 / 0.2e1;
t1063 = t729 * t698;
t813 = t866 * t675;
t660 = t756 ^ 2;
t661 = t669 ^ 2;
t1060 = -t661 - t660;
t865 = t661 - t660;
t1059 = qJD(6) * t657 + t1061;
t888 = t222 * qJD(1);
t898 = qJD(4) * t693;
t1058 = qJD(2) * t75 - t677 * t898 + t888;
t1017 = pkin(5) * t702;
t552 = t1017 * t675 + t677 * t693;
t1021 = -t704 / 0.2e1;
t862 = t1019 / 0.2e1;
t933 = t702 * t455;
t63 = (-t933 / 0.2e1 + (t1021 * t675 + t862) * t669) * pkin(5) + t75;
t1057 = qJD(2) * t63 - qJD(4) * t552 + t888;
t1049 = t160 / 0.2e1;
t1048 = t818 / 0.2e1;
t1047 = -t293 / 0.2e1;
t329 = t525 * t675;
t1046 = t329 / 0.2e1;
t1045 = -t473 / 0.2e1;
t1044 = t474 / 0.2e1;
t536 = t677 * t756;
t1042 = t536 / 0.2e1;
t621 = t701 * t557;
t539 = t756 * t848 - t621;
t1041 = t539 / 0.2e1;
t1034 = t605 / 0.2e1;
t1033 = t756 / 0.2e1;
t1031 = -t669 / 0.2e1;
t1030 = t669 / 0.2e1;
t697 = t704 ^ 2;
t1025 = -t697 / 0.2e1;
t1024 = -t701 / 0.2e1;
t1023 = t701 / 0.2e1;
t1009 = t701 * pkin(5);
t828 = t1047 + t1080;
t829 = t1076 + t1048;
t34 = -t455 * t829 + t540 * t828;
t1007 = t34 * qJD(5);
t50 = -t675 * t829 + t677 * t828;
t1006 = t50 * qJD(5);
t1005 = pkin(5) * qJD(5);
t991 = t378 * t704;
t990 = t416 * t704;
t989 = t417 * t702;
t988 = t473 * t756;
t987 = t473 * t702;
t986 = t474 * t756;
t985 = t474 * t704;
t984 = t499 * t455;
t983 = t499 * t540;
t978 = t525 * t607;
t977 = t525 * t669;
t339 = t525 * t702;
t976 = t526 * t756;
t975 = t536 * t540;
t974 = t536 * t756;
t973 = t455 * t539;
t972 = t455 * t669;
t971 = t539 * t756;
t970 = t539 * t675;
t969 = t540 * t669;
t967 = t545 * t704;
t966 = t546 * t702;
t356 = t851 - t938;
t357 = t850 + t939;
t55 = t293 * t357 - t356 * t818 + t978;
t964 = t55 * qJD(1);
t963 = t595 * t669;
t955 = t607 * t595;
t954 = t607 * t702;
t953 = t607 * t704;
t952 = t652 * t700;
t951 = t669 * t704;
t950 = t675 * t756;
t949 = t677 * t536;
t727 = t704 * t737;
t836 = t951 / 0.2e1;
t68 = (t1014 + t932 / 0.2e1 - t727 / 0.2e1 + pkin(10) * t836 + t342 / 0.2e1) * t701;
t948 = t68 * qJD(2);
t863 = -t1019 / 0.2e1;
t804 = t756 * t863;
t752 = -t314 / 0.2e1 - pkin(5) * t804;
t70 = t854 / 0.2e1 + t752;
t944 = t70 * qJD(2);
t377 = -t727 + t932;
t935 = t702 * t377;
t191 = t455 * t675 - t677 * t540;
t922 = t866 * t191;
t825 = t1034 + t1079;
t826 = t1099 + t1077;
t193 = -t675 * t825 + t677 * t826;
t921 = t193 * qJD(5);
t402 = t1056 * t756;
t917 = t866 * t402;
t407 = t1055 * t756;
t916 = t866 * t407;
t915 = t621 / 0.2e1 - t756 * t801;
t914 = -t621 / 0.2e1 - t704 * t804;
t685 = t698 ^ 2 + t700 ^ 2;
t696 = t702 ^ 2;
t689 = t697 - t696;
t148 = t949 - t970;
t913 = qJD(2) * t148;
t194 = -t973 + t975;
t912 = qJD(2) * t194;
t308 = -t972 + t974;
t911 = qJD(2) * t308;
t309 = t972 + t974;
t910 = qJD(2) * t309;
t311 = t969 + t971;
t909 = qJD(2) * t311;
t483 = t865 * t702;
t908 = qJD(2) * t483;
t484 = t1060 * t702;
t907 = qJD(2) * t484;
t485 = t865 * t704;
t906 = qJD(2) * t485;
t567 = t1060 * t704;
t903 = qJD(2) * t567;
t902 = qJD(2) * t699;
t901 = qJD(3) * t704;
t900 = qJD(4) * t675;
t897 = qJD(4) * t702;
t896 = qJD(4) * t704;
t895 = qJD(5) * t702;
t894 = qJD(5) * t704;
t893 = qJD(6) * t693;
t111 = (t526 - t985 - t987) * t525;
t892 = t111 * qJD(1);
t118 = -t473 * t545 + t474 * t546 + t978;
t891 = t118 * qJD(1);
t728 = -(t1025 - t696 / 0.2e1) * t1013 - t1012 / 0.2e1;
t759 = t990 / 0.2e1 + t989 / 0.2e1;
t168 = t728 - t759;
t890 = t168 * qJD(2);
t195 = -t973 - t975;
t889 = t195 * qJD(2);
t684 = t699 ^ 2 * t1018 * t705;
t236 = t526 * t608 - t684 + t978;
t886 = t236 * qJD(1);
t310 = t969 - t971;
t885 = t310 * qJD(2);
t388 = t402 * qJD(2);
t834 = -t950 / 0.2e1;
t403 = t834 + t914;
t389 = t403 * qJD(2);
t835 = t950 / 0.2e1;
t404 = t835 + t915;
t391 = t404 * qJD(2);
t420 = -t684 + (t952 + t1063) * t945;
t884 = t420 * qJD(1);
t453 = t669 * t675;
t883 = t453 * qJD(2);
t488 = (t1030 - t657) * t945;
t881 = t488 * qJD(1);
t741 = -t856 / 0.2e1 + t929 / 0.2e1;
t489 = (t1033 + t741) * t945;
t880 = t489 * qJD(1);
t879 = t865 * qJD(2);
t556 = (t696 / 0.2e1 + t1025) * t669;
t878 = t556 * qJD(5);
t877 = t557 * qJD(2);
t876 = t559 * qJD(2);
t875 = t562 * qJD(2);
t653 = t696 * t756;
t654 = t697 * t756;
t565 = -t653 - t654;
t874 = t565 * qJD(2);
t873 = t1060 * qJD(2);
t872 = t657 * qJD(2);
t870 = t756 * qJD(2);
t656 = t756 * qJD(4);
t868 = t669 * qJD(4);
t867 = t685 * qJD(2);
t864 = pkin(5) * t951;
t328 = t525 * t677;
t133 = t1026 * t329 + t1029 * t328;
t51 = t675 * t828 + t677 * t829;
t861 = t133 * qJD(4) + t51 * qJD(5);
t860 = t1017 / 0.2e1;
t845 = t702 * t896;
t844 = t756 * t894;
t586 = t756 * t868;
t843 = t702 * t894;
t842 = t704 * t869;
t841 = -t977 / 0.2e1;
t445 = t977 / 0.2e1;
t840 = -t339 / 0.2e1;
t839 = t607 * t1028;
t838 = t607 * t1026;
t837 = -t951 / 0.2e1;
t833 = -t931 / 0.2e1;
t832 = -t925 / 0.2e1;
t831 = t1064 + t176 / 0.2e1;
t830 = t177 / 0.2e1 + t1049;
t827 = t568 / 0.2e1 - t579 / 0.2e1;
t823 = t1019 * qJD(5);
t822 = t1019 * qJD(6);
t821 = t685 * t705;
t820 = (-t696 - t697) * t525;
t815 = t866 * t756;
t814 = t866 * t677;
t812 = pkin(5) * t836;
t811 = qJD(2) * t691 + qJD(3);
t810 = -qJD(5) + t870;
t807 = t661 * t843;
t806 = t525 * t836;
t805 = qJD(2) * t858;
t803 = t858 / 0.2e1;
t800 = -t1010 - t1015;
t799 = qJD(4) * t819;
t174 = t855 - t940;
t175 = t852 + t943;
t500 = pkin(5) * t557 + t596;
t707 = t174 * t1076 + t175 * t1080 - t328 * t160 / 0.2e1 + t161 * t1046 + t525 * t500 / 0.2e1 + t499 * t1043;
t725 = t1077 * t356 + t1078 * t607 + t1079 * t357;
t2 = t707 + t725;
t20 = -t160 * t174 + t161 * t175 + t499 * t500;
t798 = t2 * qJD(1) + t20 * qJD(2);
t23 = -t160 * t176 + t161 * t177 + t499 * t864;
t717 = t177 * t1047 + t176 * t1048 - t1049 * t293 + t1064 * t818;
t748 = t1023 * t357 + t356 * t862;
t3 = (t525 * t837 + t748) * pkin(5) + t717;
t797 = -t3 * qJD(1) + t23 * qJD(2);
t796 = -qJD(6) + t810;
t14 = t160 * t539 - t161 * t536 - t174 * t540 - t175 * t455;
t715 = t1040 * t328 + t1041 * t818 - t1046 * t455 + t1047 * t536;
t760 = t1027 * t356 + t1029 * t357;
t28 = t715 - t760;
t795 = t28 * qJD(1) + t14 * qJD(2);
t15 = -t1087 * t540 - t1088 * t455;
t794 = t34 * qJD(1) + t15 * qJD(2);
t706 = (-t991 / 0.2e1 - t935 / 0.2e1 + t596 / 0.2e1) * t525 + t416 * t1045 + t417 * t1044 + t595 * t1043;
t30 = t706 - t1081;
t79 = -t377 * t416 + t378 * t417 + t595 * t596;
t793 = t30 * qJD(1) + t79 * qJD(2);
t35 = -t160 * t669 - t174 * t756 + t455 * t500 + t499 * t536;
t714 = t818 * t1031 + t328 * t1032 + t525 * t1042 + t1043 * t455;
t58 = t839 - t714;
t792 = -t58 * qJD(1) + t35 * qJD(2);
t36 = -t161 * t669 + t175 * t756 + t499 * t539 + t500 * t540;
t713 = t1031 * t293 + t1033 * t329 + t1041 * t525 + t1043 * t540;
t59 = t838 - t713;
t791 = -t59 * qJD(1) + t36 * qJD(2);
t761 = t1026 * t357 + t1029 * t356;
t762 = t1041 * t293 + t1042 * t818;
t39 = t841 + t761 - t762;
t43 = t160 * t536 + t161 * t539 + t499 * t669;
t790 = -t39 * qJD(1) + t43 * qJD(2);
t72 = -t176 * t756 + t455 * t864 + t983;
t789 = -qJD(2) * t72 + t1098;
t73 = t177 * t756 + t540 * t864 - t984;
t788 = -qJD(2) * t73 + t1097;
t92 = -t160 * t756 - t984;
t787 = -qJD(2) * t92 + t1097;
t93 = t161 * t756 + t983;
t786 = -qJD(2) * t93 + t1098;
t785 = t51 * qJD(3);
t784 = qJD(2) * t34 + qJD(4) * t50;
t783 = -t416 * t702 + t417 * t704;
t735 = (t1021 * t473 + t1044 * t702) * t756;
t128 = -t735 - t1053;
t74 = (t989 + t990) * t669 - (t377 * t704 - t378 * t702) * t756;
t782 = t128 * qJD(1) - t74 * qJD(2);
t724 = t1030 * t693 + t1034 * t539 + t1077 * t536;
t763 = t1026 * t175 + t1029 * t174;
t41 = t724 - t763;
t781 = -qJD(1) * t133 + qJD(2) * t41;
t54 = t293 * t329 - t328 * t818 + t525 * t526;
t780 = t54 * qJD(1) + t133 * qJD(3);
t553 = t1017 * t677 - t675 * t693;
t62 = (t540 * t1022 + (t1021 * t677 + t1024) * t669) * pkin(5) + t76;
t778 = qJD(2) * t62 - qJD(4) * t553;
t776 = t810 * t704;
t726 = t445 - (-t985 / 0.2e1 - t987 / 0.2e1) * t756;
t758 = -t967 / 0.2e1 - t966 / 0.2e1;
t109 = t726 + t758;
t132 = t963 - (-t935 - t991) * t756;
t775 = -qJD(1) * t109 - qJD(2) * t132;
t765 = (t1045 + t934 / 0.2e1) * t669;
t112 = t953 / 0.2e1 + t765;
t116 = (-t377 + t932) * t669 - (t416 - t962) * t756;
t774 = t112 * qJD(1) + t116 * qJD(2);
t764 = (-t474 / 0.2e1 + t927 / 0.2e1) * t669;
t115 = -t954 / 0.2e1 + t764;
t117 = (-t378 + t926) * t669 - (-t417 - t579) * t756;
t773 = t115 * qJD(1) + t117 * qJD(2);
t747 = t803 + t841;
t182 = t833 - t986 / 0.2e1 + t747 * t704;
t248 = t378 * t756 + t595 * t951;
t772 = qJD(1) * t182 - qJD(2) * t248;
t183 = t832 + t988 / 0.2e1 - t747 * t702;
t247 = -t377 * t756 - t559 * t595;
t771 = -qJD(1) * t183 + qJD(2) * t247;
t279 = -t976 / 0.2e1 + t747;
t350 = t596 * t756 + t963;
t770 = qJD(1) * t279 - qJD(2) * t350;
t710 = t952 / 0.2e1 + t1063 / 0.2e1;
t477 = t803 - t710;
t679 = t685 * qJ(3);
t769 = qJD(1) * t477 - qJD(2) * t679;
t277 = t455 ^ 2 - t540 ^ 2;
t105 = qJD(2) * t277 + qJD(4) * t191;
t533 = t675 ^ 2 - t677 ^ 2;
t156 = qJD(2) * t191 + qJD(4) * t533;
t768 = -t1013 / 0.2e1 + t1012 / 0.2e1;
t719 = t768 * t702 + t579 / 0.2e1;
t243 = t719 + t827;
t767 = pkin(4) * t896 - qJD(2) * t243;
t751 = t768 * t704;
t245 = -t569 / 0.2e1 - t751;
t766 = pkin(4) * t897 - qJD(2) * t245;
t755 = qJD(2) * t76 + t675 * t898;
t753 = t669 * t776;
t494 = -qJD(2) * t556 + t845;
t750 = t1023 * t175 + t174 * t862;
t749 = t1023 * t329 + t328 * t862;
t426 = qJD(2) * t661 * t930 + qJD(4) * t556;
t566 = t689 * t661;
t739 = qJD(2) * t566 + t799;
t738 = qJD(2) * t819 - qJD(4) * t689;
t730 = (t1024 * t536 + t539 * t863) * pkin(5);
t9 = t455 * t826 + t540 * t825 + t675 * t830 + t677 * t831 + t730;
t736 = t50 * qJD(1) - t9 * qJD(2);
t731 = (t1023 * t539 + t536 * t863) * pkin(5);
t16 = t675 * t831 - t677 * t830 + t731;
t734 = t51 * qJD(1) - t16 * qJD(2) + t193 * qJD(4);
t24 = (t840 + t749) * pkin(5);
t294 = t1017 * t693;
t718 = t1087 * t1077 + t1079 * t1088;
t5 = (t1022 * t499 + t693 * t837 + t750) * pkin(5) + t718;
t722 = -t24 * qJD(1) - t5 * qJD(2) + t193 * qJD(3) + t294 * qJD(4);
t648 = t657 * qJD(4);
t645 = t704 * t868;
t549 = t557 * qJD(5);
t511 = t877 - t895;
t491 = (t1031 - t657) * t945;
t490 = (t1032 + t741) * t945;
t478 = t803 + t710;
t406 = t834 + t915;
t405 = t835 + t914;
t397 = t407 * qJD(3);
t392 = t406 * qJD(3);
t390 = t404 * qJD(3);
t387 = t402 * qJD(3);
t340 = t525 * t704;
t320 = -t814 + t388;
t319 = t813 - t391;
t318 = -t389 - t813;
t280 = t976 / 0.2e1 + t445 + t803;
t272 = -qJD(4) * t402 - t540 * t870;
t271 = qJD(4) * t403 - t455 * t870;
t246 = t962 + t569 / 0.2e1 - t751;
t244 = t719 - t827;
t185 = t986 / 0.2e1 + t806 + t833 + t704 * t803;
t184 = -t988 / 0.2e1 + t669 * t840 + t832 - t808 / 0.2e1;
t169 = t728 + t759;
t153 = -t407 * qJD(4) + t540 * t796;
t152 = t405 * qJD(4) + t455 * t796;
t127 = -t735 + t1053;
t114 = t954 / 0.2e1 + t764;
t113 = -t953 / 0.2e1 + t765;
t108 = t726 - t758;
t77 = t746 + t1082;
t71 = t941 - t854 / 0.2e1 + t752;
t69 = t1009 * t1033 - t853 - t708 / 0.2e1 - t942 / 0.2e1;
t65 = t540 * t860 + t677 * t812 + t802 + (-t1011 / 0.2e1 - t323 / 0.2e1) * t701 + t1082;
t64 = pkin(5) * t933 / 0.2e1 + t675 * t812 + t862 * t1011 + t78;
t61 = t838 + t713;
t60 = t839 + t714;
t42 = t724 + t763;
t40 = t445 + t761 + t762;
t29 = t706 + t1081;
t27 = t715 + t760;
t25 = pkin(5) * t749 + t525 * t860;
t17 = t1026 * t1088 + t1029 * t1087 + t731;
t10 = t1027 * t1087 + t1029 * t1088 - t1040 * t605 + t540 * t1079 + t730;
t6 = pkin(5) * t750 + t499 * t860 + t693 * t812 - t718;
t4 = -t717 + (t748 + t806) * pkin(5);
t1 = t707 - t725;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t236, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t118 + qJD(4) * t111, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t55 + qJD(4) * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t805, -t705 * t902, 0, 0, 0, 0, 0, 0, 0, 0, -t700 * t805, t698 * t805, t821 * t902, t884 + t478 * qJD(3) + (-pkin(2) * t1018 + qJ(3) * t821) * t902, 0, 0, 0, 0, 0, 0, t491 * qJD(4) - t756 * t805, t490 * qJD(4) + t669 * t805 (t607 * t669 + t608 * t756) * qJD(2), t886 + (t608 * t596 + t691 * t858 + t955) * qJD(2) + t280 * qJD(3), 0, 0, 0, 0, 0, 0 (-t545 * t756 + t559 * t607) * qJD(2) + t113 * qJD(4) + t185 * qJD(5) (t546 * t756 + t607 * t951) * qJD(2) + t114 * qJD(4) + t184 * qJD(5), t127 * qJD(4) + (-t966 - t967) * t869, t891 + (-t377 * t545 + t378 * t546 + t955) * qJD(2) + t108 * qJD(3) + t29 * qJD(4), 0, 0, 0, 0, 0, 0 (-t356 * t756 + t455 * t607) * qJD(2) + t60 * qJD(4) + t866 * t1083 (t357 * t756 + t540 * t607) * qJD(2) + t61 * qJD(4) + t866 * t1086 (-t356 * t540 - t357 * t455) * qJD(2) + t27 * qJD(4) + t1007, t964 + (-t160 * t356 + t161 * t357 + t499 * t607) * qJD(2) + t40 * qJD(3) + t1 * qJD(4) + t4 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t280 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t108, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t40 + t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t491 - qJD(4) * t526, qJD(2) * t490 + qJD(4) * t525, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t113 + qJD(5) * t339 - t526 * t896, qJD(2) * t114 + qJD(5) * t340 + t526 * t897, t127 * qJD(2) + qJD(4) * t820, t892 + t29 * qJD(2) + (-t526 * pkin(4) + pkin(9) * t820) * qJD(4), 0, 0, 0, 0, 0, 0, t60 * qJD(2) + t225 * t866 + t526 * t900, t61 * qJD(2) + t224 * t866 + t526 * t899, t27 * qJD(2) + (-t328 * t677 - t329 * t675) * qJD(4) + t1006, t1 * qJD(2) + (-t328 * t817 + t329 * t605 + t526 * t693) * qJD(4) + t25 * qJD(5) + t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t185 + qJD(4) * t339 - qJD(5) * t474, qJD(2) * t184 + qJD(4) * t340 + qJD(5) * t473, 0, 0, 0, 0, 0, 0, 0, 0, t1091, t1090, t784, t4 * qJD(2) + t25 * qJD(4) + (-t1019 * t293 - t701 * t818) * t1005 + t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1091, t1090, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t477 - t884, 0, 0, 0, 0, 0, 0, -t488 * qJD(4), -t489 * qJD(4), 0, -qJD(3) * t279 - t886, 0, 0, 0, 0, 0, 0, qJD(4) * t112 - qJD(5) * t182, qJD(4) * t115 - qJD(5) * t183, qJD(4) * t128, qJD(3) * t109 + qJD(4) * t30 - t891, 0, 0, 0, 0, 0, 0, -qJD(4) * t58 - t1084 * t866, -qJD(4) * t59 - t1085 * t866, qJD(4) * t28 + t1007, -qJD(3) * t39 + qJD(4) * t2 - qJD(5) * t3 - t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t685 * qJD(3), t679 * qJD(3), t586, -t865 * qJD(4), 0, -t586, 0, 0, t691 * t868, t691 * t656, -qJD(3) * t1060, qJD(3) * t350, t586 * t697 - t807, -qJD(5) * t566 - t756 * t799, t669 * t756 * t895 + qJD(4) * t485, t586 * t696 + t807, -qJD(4) * t483 + t669 * t844, -t586, -qJD(3) * t484 + qJD(4) * t116 + qJD(5) * t248, -qJD(3) * t567 + qJD(4) * t117 + qJD(5) * t247, -qJD(4) * t74, qJD(3) * t132 + qJD(4) * t79 (qJD(4) * t539 - t455 * t866) * t540, qJD(4) * t195 + t277 * t866, t310 * qJD(4) + t455 * t815 (qJD(4) * t536 + t540 * t866) * t455, t308 * qJD(4) + t540 * t815, -t586, qJD(3) * t309 + qJD(4) * t35 + qJD(5) * t72 + qJD(6) * t93, qJD(3) * t311 + qJD(4) * t36 + qJD(5) * t73 + qJD(6) * t92, qJD(3) * t194 + qJD(4) * t14 + qJD(5) * t15, qJD(3) * t43 + qJD(4) * t20 + qJD(5) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t867, -t769, 0, 0, 0, 0, 0, 0, 0, 0, -t873, -t770, 0, 0, 0, 0, 0, 0, -t907, -t903, 0, qJD(4) * t169 - t775, 0, 0, 0, 0, 0, 0, t910 - t916, t406 * t866 + t909, t912 (t536 * t675 + t539 * t677) * qJD(3) + t42 * qJD(4) + t17 * qJD(5) + t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, -t879, t656, -t587, -t868, 0, -qJD(4) * t596 + t691 * t869 - t881, qJD(4) * t595 + t691 * t870 - t880, 0, 0, -t878 - (-t697 * t869 - t845) * t756 (-t653 + t654) * qJD(4) + (-qJD(5) - t870) * t819, t702 * t868 + t906, t878 - (-t696 * t869 + t845) * t756, t645 - t908, t1061 (t702 * t800 - t926) * qJD(4) + t246 * qJD(5) + t774 (t704 * t800 + t932) * qJD(4) + t244 * qJD(5) + t773, qJD(4) * t783 + t782, t169 * qJD(3) + (-t596 * pkin(4) + pkin(9) * t783) * qJD(4) + t793 (t899 + t904) * t539 + t1089, t889 + (-t949 - t970) * qJD(4) + t922, t405 * t866 + t677 * t868 + t885 (t900 + t1071) * t536 - t1089, -t675 * t868 + t911 - t916, t1059 (t500 * t675 + t536 * t693 - t669 * t817) * qJD(4) + t64 * qJD(5) + t78 * qJD(6) + t792 (t500 * t677 + t539 * t693 - t605 * t669) * qJD(4) + t65 * qJD(5) + t77 * qJD(6) + t791 (-t174 * t677 - t175 * t675 - t536 * t605 + t539 * t817) * qJD(4) + t10 * qJD(5) + t795, t42 * qJD(3) + (-t174 * t817 + t175 * t605 + t500 * t693) * qJD(4) + t6 * qJD(5) + t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, -t739, t810 * t559, t426, t753, t648, qJD(4) * t246 - qJD(5) * t378 - t772, qJD(4) * t244 + qJD(5) * t377 + t771, 0, 0, t1069, t105, t152, -t1069, t153, t648, qJD(4) * t64 + qJD(5) * t176 + qJD(6) * t69 - t397 - t789, qJD(4) * t65 - qJD(5) * t177 + qJD(6) * t71 + t392 - t788, t10 * qJD(4) + (t1019 * t455 - t540 * t701) * t1005 + t794, t17 * qJD(3) + t6 * qJD(4) + (t1019 * t176 + t177 * t701) * t1005 + t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1069, t105, t152, -t1069, t153, t648, qJD(4) * t78 + qJD(5) * t69 - qJD(6) * t161 - t397 - t786, qJD(4) * t77 + qJD(5) * t71 + qJD(6) * t160 + t392 - t787, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t279 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t109, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t39 + t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t867, t769, 0, 0, 0, 0, 0, 0, t868, t656, t873, t770, 0, 0, 0, 0, 0, 0, t549 + t645 + t907, -qJD(4) * t559 + t844 + t903, t565 * qJD(4), -qJD(4) * t168 + t775, 0, 0, 0, 0, 0, 0, -qJD(4) * t453 - t910 + t917, -qJD(4) * t455 - t404 * t866 - t909, -qJD(4) * t148 - t912, -qJD(4) * t41 - qJD(5) * t16 - t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t869, t870, 0, 0, 0, 0, 0, 0, 0, 0, t842, -t876, t874, -t890, 0, 0, 0, 0, 0, 0, -t883, -t1071, -t913, -t781 + t921; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t511, t776, 0, 0, 0, 0, 0, 0, 0, 0, t320, t319, 0 (-t1019 * t677 - t675 * t701) * t1005 + t734; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t319, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488 * qJD(2), t489 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t112, -qJD(2) * t115, -qJD(2) * t128, -qJD(2) * t30 - t892, 0, 0, 0, 0, 0, 0, qJD(2) * t58 - t222 * t866, qJD(2) * t59 - t223 * t866, -qJD(2) * t28 + t1006, -qJD(2) * t2 - qJD(5) * t24 - t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, t879, 0, t587, 0, 0, -t669 * t811 + t881, -t756 * t811 + t880, 0, 0, -t587 * t697 - t878, 0.2e1 * t702 * t753, -qJD(5) * t562 - t906, -t587 * t696 + t878, t549 + t908, -t1061, qJD(5) * t245 - t669 * t901 - t774, qJD(3) * t559 + qJD(5) * t243 - t773, -qJD(3) * t565 - t782, qJD(3) * t168 - t793, -t539 * t904 + t1089, -t889 + t922, -t403 * t866 - t885, -t1071 * t536 - t1089, -t911 + t917, -t1059, qJD(3) * t453 - qJD(5) * t63 - qJD(6) * t75 - t792, qJD(3) * t455 - qJD(5) * t62 - qJD(6) * t76 - t791, qJD(3) * t148 - qJD(5) * t9 - t795, qJD(3) * t41 - qJD(5) * t5 - t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t869, -t870, 0, 0, 0, 0, 0, 0, 0, 0, -t842, t876, -t874, t890, 0, 0, 0, 0, 0, 0, t883, t1071, t913, t781 + t921; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t843, t689 * qJD(5), 0, -t843, 0, 0, -pkin(4) * t895, -pkin(4) * t894, 0, 0, -t675 * t814, t866 * t533, 0, t677 * t813, 0, 0, qJD(5) * t552 + t677 * t893, qJD(5) * t553 - t675 * t893, 0, qJD(5) * t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, -t738, -t875 + t894, -t494, t511, -t872, -pkin(9) * t894 - t766, pkin(9) * t895 - t767, 0, 0, -t1070, t156, t318, t1070, t320, -t872, -t1057 - t1066, t1068 - t778 (t1019 * t675 - t677 * t701) * t1005 + t736 (-t1019 * t605 - t701 * t817) * t1005 + t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1070, t156, t318, t1070, t320, -t872, -t1058 - t1066, t1068 - t755, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t182, qJD(2) * t183, 0, 0, 0, 0, 0, 0, 0, 0, t1093, t1092, -t784, qJD(2) * t3 + qJD(4) * t24 - t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, t739, qJD(4) * t562 - t587 * t702, -t426, -qJD(4) * t557 - t756 * t842, t648, -qJD(3) * t557 - qJD(4) * t245 + t772, -qJD(4) * t243 - t756 * t901 - t771, 0, 0, -t1069, -t105, t271, t1069, t272, t648, qJD(4) * t63 + qJD(6) * t68 - t387 + t789, qJD(4) * t62 + qJD(6) * t70 + t390 + t788, qJD(4) * t9 - t794, qJD(3) * t16 + qJD(4) * t5 - t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t877, -t704 * t870, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t391, 0, -t734; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, t738, t875, t494, -t877, t872, t766, t767, 0, 0, t1070, -t156, t389, -t1070, -t388, t872, t1057, t887 + t778, -t736, -t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t1009, -pkin(5) * t822, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1009 * t866 + t948, t944 + (-t823 - t822) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1093, t1092, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1069, -t105, t271, t1069, t272, t648, qJD(4) * t75 - qJD(5) * t68 - t387 + t786, qJD(4) * t76 - qJD(5) * t70 + t390 + t787, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t391, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1070, -t156, t389, -t1070, -t388, t872, t1058, t887 + t755, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1005 * t701 - t948, pkin(5) * t823 - t944, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
