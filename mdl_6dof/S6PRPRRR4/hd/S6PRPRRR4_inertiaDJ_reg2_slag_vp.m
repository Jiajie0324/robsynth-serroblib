% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRRR4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR4_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:38:56
% EndTime: 2019-03-08 20:39:05
% DurationCPUTime: 3.46s
% Computational Cost: add. (4968->296), mult. (12105->541), div. (0->0), fcn. (12692->12), ass. (0->149)
t180 = pkin(8) + qJ(3);
t193 = cos(qJ(4));
t203 = t180 * t193;
t98 = sin(qJ(4));
t205 = t98 * qJD(3) + qJD(4) * t203;
t204 = t98 * t180;
t206 = -t193 * qJD(3) + qJD(4) * t204;
t92 = sin(pkin(12));
t94 = cos(pkin(12));
t107 = -t205 * t92 - t206 * t94;
t158 = t193 * t94;
t72 = t98 * t92 - t158;
t73 = t193 * t92 + t98 * t94;
t84 = -t94 * pkin(3) - pkin(2);
t116 = t72 * pkin(4) - pkin(9) * t73 + t84;
t208 = -qJD(5) * t116 - t107;
t111 = t203 * t94 - t204 * t92;
t65 = t72 * qJD(4);
t66 = t73 * qJD(4);
t207 = -pkin(4) * t66 - pkin(9) * t65 + qJD(5) * t111;
t93 = sin(pkin(6));
t99 = sin(qJ(2));
t184 = t93 * t99;
t95 = cos(pkin(6));
t122 = t92 * t184 - t94 * t95;
t64 = t94 * t184 + t95 * t92;
t202 = t122 * t92 + t64 * t94;
t192 = cos(qJ(6));
t147 = t192 * qJD(6);
t201 = t192 * qJD(5) + t147;
t100 = cos(qJ(5));
t167 = qJD(5) * t100;
t97 = sin(qJ(5));
t182 = t97 * t65;
t119 = t73 * t167 - t182;
t171 = qJD(5) * t97;
t159 = t73 * t171;
t175 = t100 * t65;
t200 = t159 + t175;
t90 = t97 ^ 2;
t91 = t100 ^ 2;
t176 = t90 - t91;
t146 = qJD(5) * t176;
t199 = qJD(5) + qJD(6);
t101 = cos(qJ(2));
t174 = t101 * t93;
t44 = -t98 * t122 + t193 * t64;
t120 = t100 * t174 + t97 * t44;
t121 = -t100 * t44 + t97 * t174;
t115 = t193 * t122;
t168 = qJD(2) * t101;
t155 = t93 * t168;
t29 = qJD(4) * t115 - t155 * t158 + (qJD(4) * t64 + t92 * t155) * t98;
t172 = qJD(2) * t99;
t79 = t93 * t172;
t15 = t120 * qJD(5) + t100 * t29 - t97 * t79;
t16 = t121 * qJD(5) + t100 * t79 + t97 * t29;
t198 = (-t100 * t121 + t120 * t97) * qJD(5) + t100 * t16 - t15 * t97;
t10 = t208 * t100 + t207 * t97;
t11 = -t207 * t100 + t208 * t97;
t27 = t100 * t116 - t97 * t111;
t28 = t100 * t111 + t97 * t116;
t197 = -t10 * t97 + t100 * t11 + (t100 * t28 - t27 * t97) * qJD(5);
t196 = 0.2e1 * t66;
t195 = -pkin(10) - pkin(9);
t194 = t66 * pkin(5);
t30 = t44 * qJD(4) + t73 * t155;
t43 = t64 * t98 + t115;
t21 = t43 * t30;
t39 = t205 * t94 - t206 * t92;
t55 = t203 * t92 + t204 * t94;
t191 = t55 * t39;
t189 = t73 * t65;
t188 = t73 * t97;
t157 = t192 * t97;
t96 = sin(qJ(6));
t76 = t96 * t100 + t157;
t54 = t199 * t76;
t151 = t192 * t100;
t183 = t96 * t97;
t75 = -t151 + t183;
t187 = t75 * t54;
t53 = -t201 * t100 + t199 * t183;
t186 = t76 * t53;
t185 = t93 ^ 2 * t99;
t165 = t73 * t183;
t18 = -t65 * t157 - t96 * t159 - qJD(6) * t165 + (t201 * t73 - t65 * t96) * t100;
t47 = t76 * t73;
t179 = -t76 * t18 + t53 * t47;
t177 = t92 ^ 2 + t94 ^ 2;
t173 = qJD(2) * t93;
t170 = qJD(6) * t96;
t52 = t72 * t196;
t166 = -0.2e1 * pkin(4) * qJD(5);
t164 = pkin(5) * t171;
t163 = pkin(5) * t170;
t162 = t97 * t175;
t161 = t96 * t195;
t160 = t43 * t171;
t154 = t97 * t167;
t150 = t177 * t101;
t145 = t97 * t161;
t69 = t73 ^ 2;
t144 = t69 * t154;
t143 = pkin(5) * t147;
t142 = 0.2e1 * t177 * qJD(3);
t141 = t195 * t192;
t139 = pkin(4) * t65 - pkin(9) * t66;
t138 = pkin(4) * t73 + pkin(9) * t72;
t17 = t65 * t151 - t96 * t182 + t54 * t73;
t48 = t73 * t151 - t165;
t135 = -t17 * t75 + t48 * t54;
t134 = t30 * t55 + t43 * t39;
t133 = t30 * t73 - t43 * t65;
t132 = t39 * t73 - t55 * t65;
t131 = t53 * t72 - t66 * t76;
t130 = t65 * t72 - t66 * t73;
t126 = t100 * t27 + t28 * t97;
t124 = -t100 * t120 - t121 * t97;
t123 = t97 * t141;
t102 = t200 * pkin(10) + t11 + t194;
t105 = -t100 * t73 * pkin(10) + t72 * pkin(5) + t27;
t103 = t192 * t105;
t106 = -t119 * pkin(10) - t10;
t23 = -pkin(10) * t188 + t28;
t1 = -qJD(6) * t103 - t96 * t102 - t192 * t106 + t23 * t170;
t20 = -t120 * t96 - t121 * t192;
t118 = t72 * t167 + t66 * t97;
t78 = t195 * t100;
t57 = -t192 * t78 + t145;
t110 = -t126 * qJD(5) - t10 * t100 - t11 * t97;
t109 = -t124 * qJD(5) - t100 * t15 - t16 * t97;
t104 = t96 * t105;
t2 = -qJD(6) * t104 + t192 * t102 - t96 * t106 - t23 * t147;
t86 = -pkin(5) * t100 - pkin(4);
t56 = t96 * t78 + t123;
t50 = t100 * t66 - t72 * t171;
t40 = pkin(5) * t188 + t55;
t34 = t73 * t146 + t162;
t33 = -t57 * qJD(6) + (t100 * t141 - t145) * qJD(5);
t32 = -t199 * t123 - t161 * t167 - t78 * t170;
t25 = -t54 * t72 - t66 * t75;
t24 = t119 * pkin(5) + t39;
t19 = -t120 * t192 + t121 * t96;
t9 = t192 * t23 + t104;
t8 = -t96 * t23 + t103;
t4 = -t20 * qJD(6) + t96 * t15 + t192 * t16;
t3 = t120 * t147 - t121 * t170 + t192 * t15 - t96 * t16;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (t202 * t93 - t185) * t168, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t168 * t185 - 0.2e1 * t44 * t29 + 0.2e1 * t21, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t120 * t16 + 0.2e1 * t121 * t15 + 0.2e1 * t21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t19 * t4 - 0.2e1 * t20 * t3 + 0.2e1 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t79, -t155, 0, 0, 0, 0, 0, 0, 0, 0, -t94 * t79, t92 * t79, t150 * t173, t202 * qJD(3) + (-pkin(2) * t99 + qJ(3) * t150) * t173, 0, 0, 0, 0, 0, 0 (-t101 * t66 + t72 * t172) * t93 (t101 * t65 + t73 * t172) * t93, t29 * t72 - t44 * t66 + t133, t107 * t44 - t111 * t29 + t79 * t84 + t134, 0, 0, 0, 0, 0, 0, t119 * t43 - t120 * t66 + t16 * t72 + t30 * t188, t100 * t133 + t121 * t66 + t15 * t72 - t159 * t43, t124 * t65 - t198 * t73, t10 * t121 - t11 * t120 - t15 * t28 + t16 * t27 + t134, 0, 0, 0, 0, 0, 0, t18 * t43 + t19 * t66 + t30 * t47 + t4 * t72, -t17 * t43 - t20 * t66 + t3 * t72 + t30 * t48, t17 * t19 - t18 * t20 + t3 * t47 - t4 * t48, -t1 * t20 + t19 * t2 + t24 * t43 - t3 * t9 + t30 * t40 + t4 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, qJ(3) * t142, -0.2e1 * t189, 0.2e1 * t130, 0, t52, 0, 0, t84 * t196, -0.2e1 * t84 * t65, -0.2e1 * t107 * t72 - 0.2e1 * t111 * t66 + 0.2e1 * t132, 0.2e1 * t107 * t111 + 0.2e1 * t191, -0.2e1 * t91 * t189 - 0.2e1 * t144, 0.2e1 * t146 * t69 + 0.4e1 * t162 * t73, -0.2e1 * t100 * t130 - 0.2e1 * t159 * t72, -0.2e1 * t90 * t189 + 0.2e1 * t144, -0.2e1 * t119 * t72 - 0.2e1 * t66 * t188, t52, 0.2e1 * t11 * t72 + 0.2e1 * t119 * t55 + 0.2e1 * t39 * t188 + 0.2e1 * t27 * t66, 0.2e1 * t10 * t72 + 0.2e1 * t100 * t132 - 0.2e1 * t159 * t55 - 0.2e1 * t28 * t66, 0.2e1 * t126 * t65 - 0.2e1 * t197 * t73, -0.2e1 * t10 * t28 + 0.2e1 * t11 * t27 + 0.2e1 * t191, -0.2e1 * t48 * t17, 0.2e1 * t17 * t47 - 0.2e1 * t18 * t48, -0.2e1 * t17 * t72 + 0.2e1 * t48 * t66, 0.2e1 * t47 * t18, -0.2e1 * t18 * t72 - 0.2e1 * t47 * t66, t52, 0.2e1 * t18 * t40 + 0.2e1 * t2 * t72 + 0.2e1 * t24 * t47 + 0.2e1 * t66 * t8, 0.2e1 * t1 * t72 - 0.2e1 * t17 * t40 + 0.2e1 * t24 * t48 - 0.2e1 * t66 * t9, 0.2e1 * t1 * t47 + 0.2e1 * t17 * t8 - 0.2e1 * t18 * t9 - 0.2e1 * t2 * t48, -0.2e1 * t1 * t9 + 0.2e1 * t2 * t8 + 0.2e1 * t24 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19 * t54 - t20 * t53 - t3 * t76 - t4 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, -t65, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t118 (t90 + t91) * t65, t197, 0, 0, 0, 0, 0, 0, t25, t131, t135 + t179, -t1 * t76 - t2 * t75 - t53 * t9 - t54 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t186 + 0.2e1 * t187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30, t29, 0, 0, 0, 0, 0, 0, 0, 0, -t100 * t30 + t160, t167 * t43 + t30 * t97, t109, -pkin(4) * t30 + pkin(9) * t109, 0, 0, 0, 0, 0, 0, t30 * t75 + t43 * t54, t30 * t76 - t43 * t53, t19 * t53 - t20 * t54 + t3 * t75 - t4 * t76, pkin(5) * t160 + t19 * t33 - t20 * t32 - t3 * t57 + t30 * t86 + t4 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, -t66, 0, -t39, -t107, 0, 0, -t34, -0.4e1 * t73 * t154 + t176 * t65, t118, t34, t50, 0, -t100 * t39 + t139 * t97 + (-t100 * t138 + t55 * t97) * qJD(5), t39 * t97 + t139 * t100 + (t100 * t55 + t138 * t97) * qJD(5), t110, -pkin(4) * t39 + pkin(9) * t110, -t17 * t76 - t48 * t53, -t135 + t179, -t131, t18 * t75 + t47 * t54, t25, 0, t164 * t47 + t18 * t86 + t24 * t75 + t33 * t72 + t40 * t54 + t56 * t66, t164 * t48 - t17 * t86 + t24 * t76 + t32 * t72 - t40 * t53 - t57 * t66, t1 * t75 + t17 * t56 - t18 * t57 - t2 * t76 + t32 * t47 - t33 * t48 + t53 * t8 - t54 * t9, -t1 * t57 + t164 * t40 + t2 * t56 + t24 * t86 - t32 * t9 + t33 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32 * t76 - t33 * t75 - t53 * t57 - t54 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t154, -0.2e1 * t146, 0, -0.2e1 * t154, 0, 0, t97 * t166, t100 * t166, 0, 0, -0.2e1 * t186, 0.2e1 * t75 * t53 - 0.2e1 * t76 * t54, 0, 0.2e1 * t187, 0, 0, 0.2e1 * t164 * t75 + 0.2e1 * t54 * t86, 0.2e1 * t164 * t76 - 0.2e1 * t53 * t86, 0.2e1 * t32 * t75 - 0.2e1 * t33 * t76 + 0.2e1 * t53 * t56 - 0.2e1 * t54 * t57, 0.2e1 * t164 * t86 - 0.2e1 * t32 * t57 + 0.2e1 * t33 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, t15, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0 (t192 * t4 - t3 * t96 + (-t19 * t96 + t192 * t20) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, 0, -t119, t66, t11, t10, 0, 0, 0, 0, -t17, 0, -t18, t66, -t72 * t163 + t192 * t194 + t2 (-t147 * t72 - t66 * t96) * pkin(5) + t1 (t192 * t17 - t18 * t96 + (-t192 * t47 + t48 * t96) * qJD(6)) * pkin(5) (t192 * t2 - t1 * t96 + (t192 * t9 - t8 * t96) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, -t167, 0, 0, 0, 0, 0, 0, 0, 0, -t54, t53, 0 (-t192 * t54 - t53 * t96 + (t192 * t76 + t75 * t96) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, 0, -t171, 0, -pkin(9) * t167, pkin(9) * t171, 0, 0, 0, 0, -t53, 0, -t54, 0, t33, t32 (t192 * t53 - t54 * t96 + (-t192 * t75 + t76 * t96) * qJD(6)) * pkin(5) (t192 * t33 - t32 * t96 + (t192 * t57 - t56 * t96) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t163, -0.2e1 * t143, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17, 0, -t18, t66, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, t53, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, 0, -t54, 0, t33, t32, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t143, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
