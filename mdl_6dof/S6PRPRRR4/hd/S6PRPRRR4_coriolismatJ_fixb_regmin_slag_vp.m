% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:38:59
% EndTime: 2019-03-08 20:39:16
% DurationCPUTime: 8.79s
% Computational Cost: add. (6916->448), mult. (16354->653), div. (0->0), fcn. (19472->12), ass. (0->384)
t355 = cos(pkin(12));
t565 = cos(qJ(4));
t451 = t565 * t355;
t353 = sin(pkin(12));
t358 = sin(qJ(4));
t513 = t358 * t353;
t388 = t451 - t513;
t573 = t388 / 0.2e1;
t452 = t565 * t353;
t512 = t358 * t355;
t324 = t452 + t512;
t357 = sin(qJ(5));
t238 = t357 * t324;
t559 = pkin(8) + qJ(3);
t335 = t559 * t353;
t336 = t559 * t355;
t269 = t565 * t335 + t358 * t336;
t199 = pkin(5) * t238 + t269;
t356 = sin(qJ(6));
t360 = cos(qJ(6));
t361 = cos(qJ(5));
t504 = t360 * t361;
t218 = t238 * t356 - t324 * t504;
t578 = pkin(9) + pkin(10);
t337 = t578 * t357;
t338 = t578 * t361;
t274 = -t356 * t337 + t360 * t338;
t505 = t360 * t357;
t518 = t356 * t361;
t331 = t505 + t518;
t568 = t331 / 0.2e1;
t348 = -t361 * pkin(5) - pkin(4);
t608 = -t348 / 0.2e1;
t607 = t199 * t568 + t218 * t608 + t274 * t573;
t171 = t324 * t331;
t403 = -t360 * t337 - t356 * t338;
t519 = t356 * t357;
t329 = -t504 + t519;
t609 = -t329 / 0.2e1;
t606 = t171 * t608 + t199 * t609 + t403 * t573;
t458 = qJD(5) + qJD(6);
t236 = t357 * t388;
t562 = pkin(9) * t388;
t564 = pkin(4) * t324;
t255 = -t562 + t564;
t246 = t357 * t255;
t254 = t269 * t361;
t491 = t254 - t246;
t123 = -pkin(10) * t236 - t491;
t522 = t356 * t123;
t437 = -t522 / 0.2e1;
t241 = t361 * t388;
t247 = t361 * t255;
t535 = t269 * t357;
t560 = t324 * pkin(5);
t108 = -pkin(10) * t241 + t247 + t535 + t560;
t511 = t360 * t108;
t393 = t437 + t511 / 0.2e1;
t17 = t393 - t607;
t508 = t360 * t123;
t434 = -t508 / 0.2e1;
t525 = t356 * t108;
t394 = -t525 / 0.2e1 + t434;
t18 = t394 - t606;
t554 = cos(pkin(6));
t430 = t554 * t353;
t354 = sin(pkin(6));
t359 = sin(qJ(2));
t527 = t354 * t359;
t312 = t355 * t527 + t430;
t373 = -t353 * t527 + t355 * t554;
t213 = t358 * t312 - t373 * t565;
t605 = -t213 / 0.2e1;
t604 = -t356 / 0.2e1;
t603 = -t388 / 0.2e1;
t461 = t324 * qJD(2);
t261 = t388 * t461;
t314 = t452 / 0.2e1 + t512 / 0.2e1;
t595 = t314 * qJD(5) - t261;
t389 = t504 / 0.2e1 - t519 / 0.2e1;
t601 = t458 * t274;
t600 = t458 * t403;
t599 = t388 * t458;
t598 = t329 * t458;
t379 = t331 * t388;
t315 = t388 ^ 2;
t316 = t324 ^ 2;
t594 = -t316 - t315;
t457 = t316 - t315;
t479 = qJD(4) * t348;
t570 = t329 / 0.2e1;
t68 = (t570 + t389) * t213;
t494 = t68 * qJD(1);
t593 = qJD(2) * t18 + t329 * t479 + t494;
t390 = t518 / 0.2e1 + t505 / 0.2e1;
t587 = -t331 / 0.2e1 + t390;
t67 = t587 * t213;
t495 = t67 * qJD(1);
t592 = qJD(2) * t17 - t331 * t479 + t495;
t563 = pkin(5) * t357;
t233 = -t348 * t329 + t331 * t563;
t566 = -t361 / 0.2e1;
t567 = t357 / 0.2e1;
t7 = (t218 * t567 + (t331 * t566 + t604) * t324) * pkin(5) + t18;
t591 = t7 * qJD(2) - t233 * qJD(4) + t494;
t232 = t329 * t563 + t348 * t331;
t8 = (-t171 * t567 + (t360 / 0.2e1 + t329 * t566) * t324) * pkin(5) + t17;
t590 = t8 * qJD(2) - t232 * qJD(4) + t495;
t589 = qJD(6) * t314 + t595;
t588 = t568 + t390;
t453 = t357 * t527;
t362 = cos(qJ(2));
t526 = t354 * t362;
t276 = t388 * t526;
t501 = t361 * t276;
t227 = t453 + t501;
t506 = t360 * t227;
t515 = t357 * t276;
t226 = t361 * t527 - t515;
t521 = t356 * t226;
t392 = -t521 / 0.2e1 - t506 / 0.2e1;
t214 = t312 * t565 + t358 * t373;
t517 = t357 * t214;
t178 = t361 * t526 + t517;
t503 = t361 * t214;
t179 = -t357 * t526 + t503;
t49 = t360 * t178 + t356 * t179;
t583 = t171 * t605 + t49 * t603;
t363 = t392 - t583;
t586 = qJD(1) * t363;
t507 = t360 * t226;
t520 = t356 * t227;
t391 = -t520 / 0.2e1 + t507 / 0.2e1;
t50 = t356 * t178 - t360 * t179;
t584 = t218 * t605 + t50 * t603;
t364 = t391 - t584;
t585 = qJD(1) * t364;
t582 = qJD(2) * t363 + t68 * qJD(4);
t581 = qJD(2) * t364 + t67 * qJD(4);
t351 = t357 ^ 2;
t352 = t361 ^ 2;
t344 = t352 - t351;
t514 = t357 * t361;
t427 = 0.2e1 * t324 * t514;
t374 = qJD(2) * t427 - t344 * qJD(4);
t365 = t391 + t584;
t70 = t588 * t213;
t580 = qJD(2) * t365 + t70 * qJD(4) + t458 * t50;
t366 = t392 + t583;
t69 = (t609 + t389) * t213;
t579 = qJD(2) * t366 + t69 * qJD(4) + t458 * t49;
t349 = t353 ^ 2;
t346 = -t355 * pkin(3) - pkin(2);
t419 = -pkin(4) * t388 - t324 * pkin(9);
t234 = t346 + t419;
t270 = -t358 * t335 + t336 * t565;
t516 = t357 * t270;
t130 = -t361 * t234 + t516;
t530 = t324 * t361;
t119 = -pkin(10) * t530 - t130;
t561 = t388 * pkin(5);
t102 = t119 - t561;
t101 = t360 * t102;
t577 = -t101 / 0.2e1;
t576 = -t102 / 0.2e1;
t574 = t214 / 0.2e1;
t572 = -t324 / 0.2e1;
t571 = t324 / 0.2e1;
t57 = t171 * t329 + t331 * t218;
t558 = t458 * t57;
t100 = -t171 * t568 + t218 * t570;
t557 = t458 * t100;
t556 = pkin(5) * qJD(5);
t555 = pkin(5) * qJD(6);
t537 = t171 * t324;
t538 = t379 * t388;
t96 = -t537 + t538;
t553 = qJD(2) * t96;
t97 = t537 + t538;
t552 = qJD(2) * t97;
t222 = t329 * t388;
t536 = t222 * t388;
t539 = t218 * t324;
t98 = t536 - t539;
t551 = qJD(2) * t98;
t99 = -t536 - t539;
t550 = qJD(2) * t99;
t454 = t561 / 0.2e1;
t421 = t454 + t119 / 0.2e1;
t11 = (t576 + t421) * t356;
t549 = t11 * qJD(2);
t13 = t360 * t421 + t577;
t548 = t13 * qJD(2);
t547 = t178 * t388;
t546 = t179 * t388;
t545 = t199 * t218;
t544 = t199 * t171;
t275 = t324 * t526;
t532 = t275 * t357;
t531 = t275 * t361;
t524 = t356 * t119;
t502 = t361 * t270;
t131 = t357 * t234 + t502;
t120 = -pkin(10) * t238 + t131;
t523 = t356 * t120;
t510 = t360 * t119;
t509 = t360 * t120;
t58 = t171 * t222 + t218 * t379;
t496 = t58 * qJD(2);
t147 = t588 * t388;
t493 = t458 * t147;
t152 = t587 * t388;
t492 = t458 * t152;
t490 = t389 * t388;
t442 = t360 * t573;
t489 = t236 * t604 + t361 * t442;
t340 = t355 ^ 2 + t349;
t191 = (t571 - t314) * t526;
t488 = qJD(1) * t191;
t377 = -t451 / 0.2e1 + t513 / 0.2e1;
t192 = (t573 + t377) * t526;
t487 = qJD(1) * t192;
t186 = t457 * t357;
t486 = qJD(2) * t186;
t187 = t594 * t357;
t485 = qJD(2) * t187;
t484 = qJD(2) * t218;
t483 = qJD(2) * t354;
t482 = qJD(3) * t361;
t481 = qJD(4) * t214;
t480 = qJD(4) * t331;
t478 = qJD(4) * t357;
t477 = qJD(4) * t361;
t476 = qJD(5) * t357;
t475 = qJD(5) * t361;
t474 = qJD(6) * t348;
t133 = t147 * qJD(2);
t439 = -t222 / 0.2e1;
t148 = t439 + t489;
t134 = t148 * qJD(2);
t440 = t222 / 0.2e1;
t149 = t440 - t490;
t136 = t149 * qJD(2);
t153 = ((-0.1e1 + t349) * t527 + (-t430 + t312) * t355) * t526;
t473 = t153 * qJD(1);
t169 = t324 * t329;
t472 = t169 * qJD(2);
t471 = t171 * qJD(2);
t188 = t457 * t361;
t470 = t188 * qJD(2);
t469 = t457 * qJD(2);
t468 = t236 * qJD(2);
t467 = t238 * qJD(2);
t466 = t241 * qJD(2);
t245 = t594 * t361;
t465 = t245 * qJD(2);
t464 = t314 * qJD(2);
t462 = t388 * qJD(2);
t313 = t388 * qJD(4);
t460 = t324 * qJD(4);
t459 = t340 * qJD(2);
t456 = pkin(5) * t530;
t455 = -t563 / 0.2e1;
t450 = t388 * t475;
t260 = t388 * t460;
t449 = t359 * t483;
t448 = t357 * t475;
t447 = t357 * t477;
t446 = t361 * t461;
t445 = t213 * t572;
t444 = t275 * t570;
t443 = t275 * t568;
t441 = t530 / 0.2e1;
t438 = t527 / 0.2e1;
t435 = -t515 / 0.2e1;
t432 = -t501 / 0.2e1;
t431 = t246 / 0.2e1 - t254 / 0.2e1;
t429 = pkin(5) * t458;
t428 = t340 * t362;
t425 = t458 * t331;
t424 = pkin(5) * t441;
t423 = qJD(2) * t346 + qJD(3);
t422 = -qJD(5) + t462;
t420 = t560 / 0.2e1 + t108 / 0.2e1;
t417 = qJD(4) * t427;
t200 = pkin(5) * t236 + t270;
t43 = -t101 + t523;
t1 = -(t511 - t522) * t388 - t43 * t324 + t200 * t171 + t199 * t379;
t371 = -t171 * t574 + t49 * t571;
t3 = t444 + t371;
t416 = -t3 * qJD(1) + t1 * qJD(2);
t44 = t356 * t102 + t509;
t2 = (t508 + t525) * t388 - t44 * t324 - t200 * t218 - t199 * t222;
t372 = t218 * t574 + t50 * t572;
t4 = t443 + t372;
t415 = -t4 * qJD(1) + t2 * qJD(2);
t414 = qJD(6) - t422;
t47 = -t509 - t524;
t15 = t171 * t456 - t388 * t47 - t545;
t413 = -qJD(2) * t15 + t585;
t48 = t510 - t523;
t16 = -t218 * t456 + t388 * t48 - t544;
t412 = -qJD(2) * t16 + t586;
t21 = -t388 * t43 - t544;
t411 = -qJD(2) * t21 + t586;
t22 = t388 * t44 - t545;
t410 = -qJD(2) * t22 + t585;
t397 = (-t178 / 0.2e1 + t517 / 0.2e1) * t324;
t33 = t531 / 0.2e1 + t397;
t37 = -t247 * t388 + (-t130 + t516) * t324;
t409 = t33 * qJD(1) + t37 * qJD(2);
t396 = (-t179 / 0.2e1 + t503 / 0.2e1) * t324;
t36 = -t532 / 0.2e1 + t396;
t38 = (-t131 + t502) * t324 - (t491 - t254) * t388;
t408 = t36 * qJD(1) + t38 * qJD(2);
t395 = t438 + t445;
t51 = t435 - t546 / 0.2e1 + t395 * t361;
t78 = t131 * t388 + t269 * t530;
t407 = qJD(1) * t51 - qJD(2) * t78;
t52 = t432 + t547 / 0.2e1 - t395 * t357;
t77 = -t130 * t388 - t238 * t269;
t406 = -t52 * qJD(1) + t77 * qJD(2);
t87 = t171 ^ 2 - t218 ^ 2;
t31 = qJD(2) * t87 + qJD(4) * t57;
t215 = t329 ^ 2 - t331 ^ 2;
t41 = qJD(2) * t57 + qJD(4) * t215;
t402 = t422 * t361;
t367 = t312 * t355 / 0.2e1 - t373 * t353 / 0.2e1;
t180 = t438 - t367;
t332 = t340 * qJ(3);
t401 = qJD(1) * t180 - qJD(2) * t332;
t400 = -t562 / 0.2e1 + t564 / 0.2e1;
t378 = t400 * t361;
t75 = -t247 / 0.2e1 - t378;
t399 = pkin(4) * t478 - t75 * qJD(2);
t370 = t400 * t357 + t254 / 0.2e1;
t73 = t370 + t431;
t398 = pkin(4) * t477 - t73 * qJD(2);
t385 = t324 * t402;
t46 = -qJD(4) * t100 - t171 * t484;
t72 = -qJD(2) * t100 + t329 * t480;
t235 = (t351 / 0.2e1 - t352 / 0.2e1) * t324;
t384 = -t235 * qJD(2) + t447;
t376 = qJD(2) * t316 * t514 + t235 * qJD(4);
t244 = t344 * t316;
t375 = t244 * qJD(2) + t417;
t308 = t314 * qJD(4);
t305 = t361 * t460;
t229 = t236 * qJD(5);
t228 = t235 * qJD(5);
t203 = t468 - t476;
t194 = (-t314 + t572) * t526;
t193 = (t603 + t377) * t526;
t181 = t438 + t367;
t151 = t439 - t490;
t150 = t440 + t489;
t142 = t152 * qJD(3);
t137 = t151 * qJD(3);
t135 = t149 * qJD(3);
t132 = t147 * qJD(3);
t118 = t213 * t361;
t117 = t213 * t357;
t107 = -t425 + t133;
t106 = -t136 + t598;
t105 = -t134 - t598;
t86 = qJD(4) * t148 - t171 * t462;
t85 = -qJD(4) * t147 + t218 * t462;
t76 = t535 + t247 / 0.2e1 - t378;
t74 = t370 - t431;
t54 = t546 / 0.2e1 + t213 * t441 + t435 + t361 * t438;
t53 = -t547 / 0.2e1 + t357 * t445 + t432 - t453 / 0.2e1;
t40 = qJD(4) * t150 - t171 * t414;
t39 = -qJD(4) * t152 + t218 * t414;
t35 = t532 / 0.2e1 + t396;
t34 = -t531 / 0.2e1 + t397;
t20 = t393 + t607;
t19 = t394 + t606;
t14 = pkin(5) * t442 + t523 + t577 - t510 / 0.2e1;
t12 = -t509 - t524 / 0.2e1 + (t454 + t576) * t356;
t10 = t218 * t455 + t331 * t424 - t420 * t356 + t434 + t606;
t9 = -t171 * t455 + t329 * t424 + t420 * t360 + t437 + t607;
t6 = t443 - t372;
t5 = -t371 + t444;
t23 = [0, 0, 0, 0, 0, 0, 0, t153 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t449, -t362 * t483, -t355 * t449, t353 * t449, t428 * t483, t473 + t181 * qJD(3) + (-pkin(2) * t359 + qJ(3) * t428) * t483, 0, 0, 0, 0, 0, t194 * qJD(4) - t388 * t449, t193 * qJD(4) + t324 * t449, 0, 0, 0, 0, 0 (-t226 * t388 + t238 * t275) * qJD(2) + t34 * qJD(4) + t54 * qJD(5) (t227 * t388 + t275 * t530) * qJD(2) + t35 * qJD(4) + t53 * qJD(5), 0, 0, 0, 0, 0 (-(t507 - t520) * t388 + t275 * t171) * qJD(2) + t5 * qJD(4) + t458 * t365 ((t506 + t521) * t388 - t275 * t218) * qJD(2) + t6 * qJD(4) + t458 * t366; 0, 0, 0, 0, 0, 0, 0, t181 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t194 - t481, qJD(2) * t193 + qJD(4) * t213, 0, 0, 0, 0, 0, t34 * qJD(2) + t117 * qJD(5) - t214 * t477, t35 * qJD(2) + t118 * qJD(5) + t214 * t478, 0, 0, 0, 0, 0, qJD(2) * t5 + t329 * t481 + t458 * t70, qJD(2) * t6 + t214 * t480 + t458 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t54 + qJD(4) * t117 - qJD(5) * t179, qJD(2) * t53 + qJD(4) * t118 + qJD(5) * t178, 0, 0, 0, 0, 0, t580, t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t580, t579; 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t180 - t473, 0, 0, 0, 0, 0, -t191 * qJD(4), -t192 * qJD(4), 0, 0, 0, 0, 0, qJD(4) * t33 - qJD(5) * t51, qJD(4) * t36 - qJD(5) * t52, 0, 0, 0, 0, 0, -qJD(4) * t3 - t364 * t458, -qJD(4) * t4 - t363 * t458; 0, 0, 0, 0, 0, 0, t340 * qJD(3), t332 * qJD(3), t260, -t457 * qJD(4), 0, 0, 0, t346 * t460, t346 * t313, t260 * t352 - t316 * t448, -t244 * qJD(5) - t388 * t417, t324 * t388 * t476 + t188 * qJD(4), -t186 * qJD(4) + t324 * t450, -t260, -qJD(3) * t187 + qJD(4) * t37 + qJD(5) * t78, -qJD(3) * t245 + qJD(4) * t38 + qJD(5) * t77 (qJD(4) * t222 + t171 * t458) * t218, qJD(4) * t58 + t458 * t87, qJD(4) * t98 + t171 * t599, qJD(4) * t96 - t218 * t599, -t260, qJD(3) * t97 + qJD(4) * t1 + qJD(5) * t15 + qJD(6) * t22, qJD(3) * t99 + qJD(4) * t2 + qJD(5) * t16 + qJD(6) * t21; 0, 0, 0, 0, 0, 0, t459, -t401, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t485, -t465, 0, 0, 0, 0, 0, -t492 + t552, t151 * t458 + t550; 0, 0, 0, 0, 0, 0, 0, 0, t261, -t469, t313, -t460, 0, -qJD(4) * t270 + t346 * t461 - t488, qJD(4) * t269 + t346 * t462 - t487, -t228 - (-t352 * t461 - t447) * t388, -0.2e1 * t324 * t448 - t374 * t388, t357 * t460 + t470, t305 - t486, t595 (t357 * t419 - t502) * qJD(4) + t76 * qJD(5) + t409 (t361 * t419 + t516) * qJD(4) + t74 * qJD(5) + t408 -(t480 - t484) * t222 + t557, t496 + (t222 * t329 - t331 * t379) * qJD(4) + t558, t150 * t458 + t331 * t460 + t551, -t329 * t460 - t492 + t553, t589 (t200 * t329 + t324 * t403 + t348 * t379) * qJD(4) + t9 * qJD(5) + t20 * qJD(6) + t416 (t200 * t331 - t222 * t348 - t274 * t324) * qJD(4) + t10 * qJD(5) + t19 * qJD(6) + t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, -t375, t422 * t238, t385, t308, qJD(4) * t76 - qJD(5) * t131 - t407, qJD(4) * t74 + qJD(5) * t130 + t406, -t46, t31, t40, t39, t308, qJD(4) * t9 + qJD(5) * t47 + qJD(6) * t12 - t142 - t413, qJD(4) * t10 - qJD(5) * t48 + qJD(6) * t14 + t137 - t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, t31, t40, t39, t308, qJD(4) * t20 + qJD(5) * t12 - qJD(6) * t44 - t142 - t410, qJD(4) * t19 + qJD(5) * t14 + qJD(6) * t43 + t137 - t411; 0, 0, 0, 0, 0, 0, 0, t180 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -t459, t401, 0, 0, 0, 0, 0, t460, t313, 0, 0, 0, 0, 0, t229 + t305 + t485, -t238 * qJD(4) + t450 + t465, 0, 0, 0, 0, 0, -qJD(4) * t169 + t493 - t552, -qJD(4) * t171 - t149 * t458 - t550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t461, t462, 0, 0, 0, 0, 0, t446, -t467, 0, 0, 0, 0, 0, -t472, -t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t402, 0, 0, 0, 0, 0, t107, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191 * qJD(2), t192 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t33, -qJD(2) * t36, 0, 0, 0, 0, 0, qJD(2) * t3 - t458 * t67, qJD(2) * t4 - t458 * t68; 0, 0, 0, 0, 0, 0, 0, 0, -t261, t469, 0, 0, 0, -t324 * t423 + t488, -t388 * t423 + t487, -t261 * t352 - t228, 0.2e1 * t357 * t385, -qJD(5) * t241 - t470, t229 + t486, -t595, t75 * qJD(5) - t324 * t482 - t409, qJD(3) * t238 + qJD(5) * t73 - t408, -t222 * t484 + t557, -t496 + t558, -t148 * t458 - t551, t493 - t553, -t589, qJD(3) * t169 - qJD(5) * t8 - qJD(6) * t17 - t416, qJD(3) * t171 - qJD(5) * t7 - qJD(6) * t18 - t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461, -t462, 0, 0, 0, 0, 0, -t446, t467, 0, 0, 0, 0, 0, t472, t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t344 * qJD(5), 0, 0, 0, -pkin(4) * t476, -pkin(4) * t475, -t329 * t425, t458 * t215, 0, 0, 0, qJD(5) * t232 + t331 * t474, qJD(5) * t233 - t329 * t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384, -t374, -t466 + t475, t203, -t464, -pkin(9) * t475 - t399, pkin(9) * t476 - t398, -t72, t41, t105, t107, -t464, -t590 - t601, -t591 - t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, t41, t105, t107, -t464, -t592 - t601, -t593 - t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t51, qJD(2) * t52, 0, 0, 0, 0, 0, t581, t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, t375, t241 * qJD(4) - t261 * t357, -t236 * qJD(4) - t388 * t446, t308, -qJD(3) * t236 - qJD(4) * t75 + t407, -t73 * qJD(4) - t388 * t482 - t406, t46, -t31, t86, t85, t308, qJD(4) * t8 + qJD(6) * t11 - t132 + t413, qJD(4) * t7 + qJD(6) * t13 + t135 + t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, -t361 * t462, 0, 0, 0, 0, 0, -t133, t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, t374, t466, -t468, t464, t399, t398, t72, -t41, t134, -t133, t464, t590, t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356 * t555, -t360 * t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356 * t429 + t549, -t360 * t429 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t581, t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t31, t86, t85, t308, qJD(4) * t17 - qJD(5) * t11 - t132 + t410, qJD(4) * t18 - qJD(5) * t13 + t135 + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133, t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t41, t134, -t133, t464, t592, t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356 * t556 - t549, t360 * t556 - t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
