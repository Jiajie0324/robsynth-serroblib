% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 01:02
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRPRRR4_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR4_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR4_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRR4_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRR4_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR4_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 01:00:36
% EndTime: 2019-05-05 01:01:19
% DurationCPUTime: 41.14s
% Computational Cost: add. (301006->971), mult. (677050->1589), div. (0->0), fcn. (531732->14), ass. (0->687)
t929 = cos(pkin(12));
t1037 = qJD(2) * t929;
t926 = sin(pkin(12));
t935 = sin(qJ(4));
t1043 = t926 * t935;
t939 = cos(qJ(4));
t892 = qJD(2) * t1043 - t939 * t1037;
t970 = t926 * t939 + t929 * t935;
t894 = t970 * qJD(2);
t852 = t894 * t892;
t1077 = qJDD(4) - t852;
t1092 = t1077 * t935;
t1091 = t1077 * t939;
t934 = sin(qJ(5));
t938 = cos(qJ(5));
t869 = -t938 * qJD(4) + t894 * t934;
t871 = qJD(4) * t934 + t894 * t938;
t819 = t871 * t869;
t1034 = t894 * qJD(4);
t1029 = qJDD(2) * t929;
t886 = qJDD(2) * t1043 - t939 * t1029;
t844 = -t886 - t1034;
t835 = qJDD(5) - t844;
t1081 = -t819 + t835;
t1090 = t1081 * t934;
t1089 = t1081 * t938;
t933 = sin(qJ(6));
t937 = cos(qJ(6));
t813 = t937 * t869 + t871 * t933;
t815 = -t869 * t933 + t871 * t937;
t745 = t815 * t813;
t945 = qJDD(6) + t835;
t1083 = -t745 + t945;
t1088 = t1083 * t933;
t1087 = t1083 * t937;
t1074 = qJD(2) ^ 2;
t921 = t926 ^ 2;
t1036 = t1074 * t921;
t922 = t929 ^ 2;
t915 = t922 * t1074;
t901 = t915 + t1036;
t927 = sin(pkin(11));
t930 = cos(pkin(11));
t1015 = g(1) * t927 - t930 * g(2);
t1038 = g(3) - qJDD(1);
t928 = sin(pkin(6));
t931 = cos(pkin(6));
t1086 = t931 * t1015 - t928 * t1038;
t940 = cos(qJ(2));
t1028 = qJDD(2) * t940;
t1016 = t929 * t1028;
t1076 = t1074 * (t921 + t922);
t897 = t929 * t1076;
t936 = sin(qJ(2));
t964 = -t897 * t936 + t1016;
t1084 = t964 * t931;
t1027 = t936 * qJDD(2);
t866 = t1027 * t929 + t897 * t940;
t797 = t1084 * t930 - t866 * t927;
t1085 = t1084 * t927 + t866 * t930;
t854 = t964 * t928;
t883 = qJD(5) + t892;
t879 = qJD(6) + t883;
t782 = t879 * t813;
t1035 = t892 * qJD(4);
t1078 = t970 * qJDD(2);
t846 = t1078 - t1035;
t1011 = -t938 * qJDD(4) + t846 * t934;
t790 = -qJD(5) * t871 - t1011;
t791 = -t869 * qJD(5) + t934 * qJDD(4) + t938 * t846;
t950 = qJD(6) * t813 - t790 * t933 - t791 * t937;
t1082 = -t782 - t950;
t826 = t883 * t869;
t750 = -t826 - t791;
t749 = -t826 + t791;
t1080 = t927 * t1038;
t1079 = t930 * t1038;
t906 = g(1) * t930 + g(2) * t927;
t862 = -t1015 * t927 - t930 * t906;
t830 = t1086 * t936 - t940 * t906;
t746 = (qJD(5) - t883) * t871 + t1011;
t1012 = -t937 * t790 + t791 * t933;
t638 = (qJD(6) - t879) * t815 + t1012;
t861 = t1015 * t930 - t927 * t906;
t811 = t813 ^ 2;
t812 = t815 ^ 2;
t1075 = t869 ^ 2;
t868 = t871 ^ 2;
t878 = t879 ^ 2;
t882 = t883 ^ 2;
t884 = t892 ^ 2;
t885 = t894 ^ 2;
t1073 = qJD(4) ^ 2;
t1072 = 2 * qJD(3);
t1071 = pkin(4) * t935;
t829 = -t1086 * t940 - t906 * t936;
t769 = t936 * t829 + t830 * t940;
t1070 = pkin(7) * t769;
t925 = qJDD(2) * pkin(2);
t874 = t1015 * t928 + t1038 * t931;
t944 = qJDD(2) * qJ(3) + t830;
t772 = t929 * (-pkin(2) * t1074 + t944) - t926 * t874 + t1037 * t1072;
t759 = -pkin(3) * t915 + pkin(8) * t1029 + t772;
t1041 = t929 * t874;
t943 = -t1041 + ((-qJ(3) - pkin(8)) * qJDD(2) + (-(2 * qJD(3)) + (pkin(3) * t929 + pkin(2)) * qJD(2)) * qJD(2) - t830) * t926;
t684 = t939 * t759 + t935 * t943;
t836 = pkin(4) * t892 - pkin(9) * t894;
t657 = -pkin(4) * t1073 + qJDD(4) * pkin(9) - t836 * t892 + t684;
t821 = -t1074 * qJ(3) + qJDD(3) + t829 - t925;
t795 = -pkin(3) * t1029 - pkin(8) * t901 + t821;
t693 = (-t846 + t1035) * pkin(9) + (-t844 + t1034) * pkin(4) + t795;
t595 = t657 * t934 - t938 * t693;
t545 = pkin(5) * t1081 + pkin(10) * t750 - t595;
t596 = t938 * t657 + t934 * t693;
t823 = pkin(5) * t883 - pkin(10) * t871;
t552 = -pkin(5) * t1075 + pkin(10) * t790 - t823 * t883 + t596;
t492 = -t937 * t545 + t552 * t933;
t493 = t933 * t545 + t937 * t552;
t428 = -t492 * t937 + t493 * t933;
t1069 = t428 * t934;
t1068 = t428 * t938;
t683 = t759 * t935 - t939 * t943;
t656 = -qJDD(4) * pkin(4) - t1073 * pkin(9) + t836 * t894 + t683;
t597 = -t790 * pkin(5) - pkin(10) * t1075 + t823 * t871 + t656;
t1067 = t597 * t933;
t1066 = t597 * t937;
t602 = -t683 * t939 + t684 * t935;
t1065 = t602 * t926;
t1064 = t602 * t929;
t1063 = t656 * t934;
t1062 = t656 * t938;
t717 = t745 + t945;
t1061 = t717 * t933;
t1060 = t717 * t937;
t766 = t819 + t835;
t1059 = t766 * t934;
t1058 = t766 * t938;
t1057 = t795 * t935;
t1056 = t795 * t939;
t1055 = t821 * t940;
t841 = qJDD(4) + t852;
t1054 = t841 * t935;
t1053 = t841 * t939;
t1044 = t926 * t929;
t1018 = t1074 * t1044;
t873 = t1016 * t926 - t1018 * t936;
t1052 = t873 * t927;
t1051 = t873 * t930;
t1050 = t874 * t936;
t1049 = t874 * t940;
t1048 = t879 * t933;
t1047 = t879 * t937;
t1046 = t883 * t934;
t1045 = t883 * t938;
t1040 = t936 * t821;
t1031 = qJDD(2) * t921;
t1030 = qJDD(2) * t928;
t1026 = t935 * t745;
t1025 = t939 * t745;
t1024 = t935 * t819;
t1023 = t939 * t819;
t1022 = t940 * t852;
t1021 = t936 * t1044;
t1020 = t936 * t852;
t1019 = -pkin(4) * t939 - pkin(3);
t1017 = t926 * t1029;
t1013 = -t821 + t925;
t429 = t492 * t933 + t937 * t493;
t603 = t683 * t935 + t939 * t684;
t771 = t1041 + ((-pkin(2) * qJD(2) + t1072) * qJD(2) + t944) * t926;
t698 = t771 * t926 + t929 * t772;
t1010 = t928 * t1021;
t1009 = t931 * t1021;
t1008 = t940 * t1018;
t697 = t771 * t929 - t772 * t926;
t914 = t922 * qJDD(2);
t899 = t914 + t1031;
t858 = t899 * t940 - t936 * t901;
t1006 = pkin(7) * t858 + t697 * t936;
t904 = -t1074 * t936 + t1028;
t1005 = -pkin(7) * t904 - t1050;
t968 = t1074 * t940 + t1027;
t1004 = -pkin(7) * t968 + t1049;
t1003 = t928 * t1008;
t1002 = t931 * t1008;
t396 = t429 * t938 - t1069;
t390 = t396 * t935 - t597 * t939;
t391 = t396 * t939 + t597 * t935;
t361 = -t390 * t926 + t391 * t929;
t395 = t429 * t934 + t1068;
t1001 = t361 * t936 - t395 * t940;
t642 = -t782 + t950;
t566 = -t638 * t933 + t642 * t937;
t568 = -t638 * t937 - t642 * t933;
t503 = -t566 * t934 + t568 * t938;
t695 = -t811 - t812;
t481 = t503 * t935 - t695 * t939;
t482 = t503 * t939 + t695 * t935;
t423 = -t481 * t926 + t482 * t929;
t501 = t566 * t938 + t568 * t934;
t1000 = t423 * t936 - t501 * t940;
t637 = (qJD(6) + t879) * t815 + t1012;
t567 = t1082 * t937 - t637 * t933;
t569 = -t1082 * t933 - t637 * t937;
t504 = -t567 * t934 + t569 * t938;
t744 = -t812 + t811;
t489 = t504 * t935 + t744 * t939;
t490 = t504 * t939 - t744 * t935;
t427 = -t489 * t926 + t490 * t929;
t502 = -t567 * t938 - t569 * t934;
t999 = t427 * t936 + t502 * t940;
t515 = t595 * t934 + t596 * t938;
t505 = t515 * t935 - t656 * t939;
t506 = t515 * t939 + t656 * t935;
t435 = -t505 * t926 + t506 * t929;
t514 = -t595 * t938 + t596 * t934;
t998 = t435 * t936 - t514 * t940;
t726 = -t878 - t811;
t627 = t726 * t933 + t1087;
t628 = t726 * t937 - t1088;
t554 = -t627 * t934 + t628 * t938;
t511 = t554 * t935 - t637 * t939;
t512 = t554 * t939 + t637 * t935;
t455 = -t511 * t926 + t512 * t929;
t553 = t627 * t938 + t628 * t934;
t997 = t455 * t936 - t553 * t940;
t757 = -t812 - t878;
t654 = t757 * t937 - t1061;
t655 = -t757 * t933 - t1060;
t579 = -t654 * t934 + t655 * t938;
t520 = -t1082 * t939 + t579 * t935;
t521 = t1082 * t935 + t579 * t939;
t464 = -t520 * t926 + t521 * t929;
t578 = t654 * t938 + t655 * t934;
t996 = t464 * t936 - t578 * t940;
t776 = -t812 + t878;
t661 = t776 * t937 + t1088;
t663 = -t776 * t933 + t1087;
t587 = -t661 * t934 + t663 * t938;
t524 = t587 * t935 + t642 * t939;
t526 = t587 * t939 - t642 * t935;
t467 = -t524 * t926 + t526 * t929;
t585 = -t661 * t938 - t663 * t934;
t995 = t467 * t936 + t585 * t940;
t775 = t811 - t878;
t662 = t775 * t933 + t1060;
t664 = t775 * t937 - t1061;
t588 = -t662 * t934 + t664 * t938;
t525 = t588 * t935 + t638 * t939;
t527 = t588 * t939 - t638 * t935;
t468 = -t525 * t926 + t527 * t929;
t586 = -t662 * t938 - t664 * t934;
t994 = t468 * t936 + t586 * t940;
t677 = -qJD(6) * t815 - t1012;
t631 = t1048 * t813 + t677 * t937;
t632 = t1047 * t813 - t677 * t933;
t561 = -t631 * t934 + t632 * t938;
t533 = t561 * t935 + t1025;
t535 = t561 * t939 - t1026;
t477 = -t533 * t926 + t535 * t929;
t560 = -t631 * t938 - t632 * t934;
t993 = t477 * t936 + t560 * t940;
t633 = t1047 * t815 - t933 * t950;
t634 = -t1048 * t815 - t937 * t950;
t563 = -t633 * t934 + t634 * t938;
t534 = t563 * t935 - t1025;
t536 = t563 * t939 + t1026;
t478 = -t534 * t926 + t536 * t929;
t562 = -t633 * t938 - t634 * t934;
t992 = t478 * t936 + t562 * t940;
t523 = t603 * t929 - t1065;
t991 = t523 * t936 - t795 * t940;
t710 = (-t813 * t933 - t815 * t937) * t879;
t711 = (-t813 * t937 + t815 * t933) * t879;
t618 = -t710 * t934 + t711 * t938;
t611 = t618 * t935 - t939 * t945;
t612 = t618 * t939 + t935 * t945;
t529 = -t611 * t926 + t612 * t929;
t617 = -t710 * t938 - t711 * t934;
t990 = t529 * t936 + t617 * t940;
t666 = -t746 * t938 - t750 * t934;
t781 = t868 + t1075;
t619 = t666 * t935 + t781 * t939;
t620 = t666 * t939 - t781 * t935;
t544 = -t619 * t926 + t620 * t929;
t665 = -t746 * t934 + t750 * t938;
t989 = t544 * t936 - t665 * t940;
t748 = (-qJD(5) - t883) * t871 - t1011;
t667 = t748 * t938 - t749 * t934;
t817 = -t868 + t1075;
t629 = t667 * t935 + t817 * t939;
t630 = t667 * t939 - t817 * t935;
t557 = -t629 * t926 + t630 * t929;
t668 = -t748 * t934 - t749 * t938;
t988 = t557 * t936 + t668 * t940;
t792 = -t882 - t1075;
t705 = t792 * t938 - t1090;
t643 = t705 * t935 + t748 * t939;
t644 = t705 * t939 - t748 * t935;
t565 = -t643 * t926 + t644 * t929;
t704 = t792 * t934 + t1089;
t987 = t565 * t936 - t704 * t940;
t806 = -t868 - t882;
t715 = -t806 * t934 - t1058;
t647 = t715 * t935 - t749 * t939;
t648 = t715 * t939 + t749 * t935;
t571 = -t647 * t926 + t648 * t929;
t714 = t806 * t938 - t1059;
t986 = t571 * t936 - t714 * t940;
t825 = -t868 + t882;
t720 = -t825 * t934 + t1089;
t650 = t720 * t935 + t750 * t939;
t652 = t720 * t939 - t750 * t935;
t576 = -t650 * t926 + t652 * t929;
t723 = -t825 * t938 - t1090;
t985 = t576 * t936 + t723 * t940;
t824 = -t882 + t1075;
t722 = t824 * t938 - t1059;
t651 = t722 * t935 + t746 * t939;
t653 = t722 * t939 - t746 * t935;
t577 = -t651 * t926 + t653 * t929;
t721 = -t824 * t934 - t1058;
t984 = t577 * t936 + t721 * t940;
t738 = t1045 * t869 - t790 * t934;
t689 = t738 * t935 + t1023;
t691 = t738 * t939 - t1024;
t615 = -t689 * t926 + t691 * t929;
t740 = -t1046 * t869 - t790 * t938;
t983 = t615 * t936 + t740 * t940;
t741 = -t1046 * t871 + t791 * t938;
t690 = t741 * t935 - t1023;
t692 = t741 * t939 + t1024;
t616 = -t690 * t926 + t692 * t929;
t739 = -t1045 * t871 - t791 * t934;
t982 = t616 * t936 + t739 * t940;
t762 = (-t869 * t938 + t871 * t934) * t883;
t724 = t762 * t935 - t835 * t939;
t725 = t762 * t939 + t835 * t935;
t646 = -t724 * t926 + t725 * t929;
t763 = (t869 * t934 + t871 * t938) * t883;
t981 = t646 * t936 + t763 * t940;
t980 = t698 * t936 - t1055;
t837 = -t1073 - t884;
t773 = t837 * t935 + t1091;
t774 = t837 * t939 - t1092;
t703 = -t773 * t926 + t774 * t929;
t843 = t886 + 0.2e1 * t1034;
t979 = t703 * t936 - t843 * t940;
t777 = -t1078 * t939 - t886 * t935;
t779 = t1078 * t935 - t886 * t939;
t708 = -t777 * t926 + t779 * t929;
t818 = -t884 - t885;
t978 = t708 * t936 - t818 * t940;
t845 = t1078 - 0.2e1 * t1035;
t778 = -t843 * t935 + t845 * t939;
t780 = -t843 * t939 - t845 * t935;
t709 = -t778 * t926 + t780 * t929;
t851 = -t885 + t884;
t977 = t709 * t936 + t851 * t940;
t875 = t884 - t1073;
t800 = t875 * t935 + t1053;
t803 = t875 * t939 - t1054;
t731 = -t800 * t926 + t803 * t929;
t976 = t731 * t936 + t886 * t940;
t876 = -t885 + t1073;
t801 = t876 * t939 + t1092;
t804 = -t876 * t935 + t1091;
t732 = -t801 * t926 + t804 * t929;
t975 = -t1078 * t940 + t732 * t936;
t877 = -t885 - t1073;
t802 = t877 * t939 - t1054;
t805 = -t877 * t935 - t1053;
t733 = -t802 * t926 + t805 * t929;
t974 = t733 * t936 - t845 * t940;
t768 = t829 * t940 - t936 * t830;
t890 = t968 * t931;
t973 = t890 * t930 + t904 * t927;
t849 = t890 * t927 - t904 * t930;
t972 = t899 * t936 + t901 * t940;
t900 = t914 - t1031;
t902 = t915 - t1036;
t971 = t900 * t936 + t902 * t940;
t827 = (-t892 * t935 - t894 * t939) * qJD(4);
t828 = (-t892 * t939 + t894 * t935) * qJD(4);
t761 = -t827 * t926 + t828 * t929;
t969 = -qJDD(4) * t940 + t761 * t936;
t807 = t1035 * t935 + t844 * t939;
t808 = t1035 * t939 - t844 * t935;
t736 = -t807 * t926 + t808 * t929;
t967 = t736 * t936 + t1022;
t809 = t1034 * t939 + t846 * t935;
t810 = -t1034 * t935 + t846 * t939;
t737 = -t809 * t926 + t810 * t929;
t966 = t737 * t936 - t1022;
t896 = t926 * t1076;
t965 = -t1028 * t926 + t896 * t936;
t420 = -pkin(5) * t597 + pkin(10) * t429;
t363 = -pkin(9) * t395 - pkin(10) * t1068 - t420 * t934;
t373 = -pkin(4) * t395 - pkin(5) * t428;
t342 = -pkin(3) * t395 + pkin(8) * t391 + t363 * t935 + t373 * t939;
t351 = -pkin(8) * t390 + t363 * t939 - t373 * t935;
t360 = t390 * t929 + t391 * t926;
t335 = -qJ(3) * t360 - t342 * t926 + t351 * t929;
t343 = -pkin(2) * t360 - pkin(3) * t390 + pkin(4) * t597 - pkin(9) * t396 + pkin(10) * t1069 - t420 * t938;
t352 = t361 * t940 + t936 * t395;
t962 = pkin(7) * t352 + t335 * t936 + t343 * t940;
t417 = -pkin(5) * t695 + pkin(10) * t568 + t429;
t419 = -pkin(10) * t566 - t428;
t374 = -pkin(9) * t501 - t417 * t934 + t419 * t938;
t457 = -pkin(4) * t501 - pkin(5) * t566;
t358 = -pkin(3) * t501 + pkin(8) * t482 + t374 * t935 + t457 * t939;
t362 = -pkin(8) * t481 + t374 * t939 - t457 * t935;
t422 = t481 * t929 + t482 * t926;
t348 = -qJ(3) * t422 - t358 * t926 + t362 * t929;
t359 = -pkin(2) * t422 - pkin(3) * t481 + pkin(4) * t695 - pkin(9) * t503 - t417 * t938 - t419 * t934;
t403 = t423 * t940 + t936 * t501;
t961 = pkin(7) * t403 + t348 * t936 + t359 * t940;
t509 = -pkin(5) * t637 + pkin(10) * t628 - t1066;
t531 = -pkin(10) * t627 + t1067;
t433 = -pkin(9) * t553 - t509 * t934 + t531 * t938;
t440 = -pkin(4) * t553 - pkin(5) * t627 + t492;
t384 = -pkin(3) * t553 + pkin(8) * t512 + t433 * t935 + t440 * t939;
t392 = -pkin(8) * t511 + t433 * t939 - t440 * t935;
t454 = t511 * t929 + t512 * t926;
t355 = -qJ(3) * t454 - t384 * t926 + t392 * t929;
t393 = -pkin(2) * t454 - pkin(3) * t511 + pkin(4) * t637 - pkin(9) * t554 - t509 * t938 - t531 * t934;
t432 = t455 * t940 + t936 * t553;
t960 = pkin(7) * t432 + t355 * t936 + t393 * t940;
t510 = -pkin(5) * t1082 + pkin(10) * t655 + t1067;
t537 = -pkin(10) * t654 + t1066;
t437 = -pkin(9) * t578 - t510 * t934 + t537 * t938;
t446 = -pkin(4) * t578 - pkin(5) * t654 + t493;
t387 = -pkin(3) * t578 + pkin(8) * t521 + t437 * t935 + t446 * t939;
t394 = -pkin(8) * t520 + t437 * t939 - t446 * t935;
t463 = t520 * t929 + t521 * t926;
t357 = -qJ(3) * t463 - t387 * t926 + t394 * t929;
t397 = -pkin(2) * t463 - pkin(3) * t520 + pkin(4) * t1082 - pkin(9) * t579 - t510 * t938 - t537 * t934;
t439 = t464 * t940 + t936 * t578;
t959 = pkin(7) * t439 + t357 * t936 + t397 * t940;
t404 = pkin(8) * t506 + (-pkin(9) * t935 + t1019) * t514;
t421 = -pkin(8) * t505 + (-pkin(9) * t939 + t1071) * t514;
t434 = t505 * t929 + t506 * t926;
t370 = -qJ(3) * t434 - t404 * t926 + t421 * t929;
t398 = -pkin(2) * t434 - pkin(3) * t505 + pkin(4) * t656 - pkin(9) * t515;
t418 = t435 * t940 + t936 * t514;
t958 = pkin(7) * t418 + t370 * t936 + t398 * t940;
t507 = -pkin(9) * t665 - t514;
t451 = pkin(8) * t620 + t1019 * t665 + t507 * t935;
t462 = -pkin(8) * t619 + t1071 * t665 + t507 * t939;
t543 = t619 * t929 + t620 * t926;
t400 = -qJ(3) * t543 - t451 * t926 + t462 * t929;
t438 = -pkin(2) * t543 - pkin(3) * t619 - pkin(4) * t781 - pkin(9) * t666 - t515;
t513 = t544 * t940 + t936 * t665;
t957 = pkin(7) * t513 + t400 * t936 + t438 * t940;
t551 = -pkin(4) * t704 + t595;
t598 = -pkin(9) * t704 + t1063;
t472 = -pkin(3) * t704 + pkin(8) * t644 + t551 * t939 + t598 * t935;
t485 = -pkin(8) * t643 - t551 * t935 + t598 * t939;
t564 = t643 * t929 + t644 * t926;
t414 = -qJ(3) * t564 - t472 * t926 + t485 * t929;
t479 = -pkin(2) * t564 - pkin(3) * t643 - pkin(4) * t748 - pkin(9) * t705 + t1062;
t530 = t565 * t940 + t936 * t704;
t956 = pkin(7) * t530 + t414 * t936 + t479 * t940;
t555 = -pkin(4) * t714 + t596;
t599 = -pkin(9) * t714 + t1062;
t473 = -pkin(3) * t714 + pkin(8) * t648 + t555 * t939 + t599 * t935;
t486 = -pkin(8) * t647 - t555 * t935 + t599 * t939;
t570 = t647 * t929 + t648 * t926;
t415 = -qJ(3) * t570 - t473 * t926 + t486 * t929;
t480 = -pkin(2) * t570 - pkin(3) * t647 + pkin(4) * t749 - pkin(9) * t715 - t1063;
t532 = t571 * t940 + t936 * t714;
t955 = pkin(7) * t532 + t415 * t936 + t480 * t940;
t522 = t603 * t926 + t1064;
t591 = -pkin(3) * t795 + pkin(8) * t603;
t461 = -pkin(8) * t1064 - qJ(3) * t522 - t591 * t926;
t496 = -pkin(2) * t522 - pkin(3) * t602;
t516 = t523 * t940 + t936 * t795;
t954 = pkin(7) * t516 + t461 * t936 + t496 * t940;
t573 = -pkin(3) * t818 + pkin(8) * t779 + t603;
t590 = -pkin(8) * t777 - t602;
t706 = t777 * t929 + t779 * t926;
t499 = -qJ(3) * t706 - t573 * t926 + t590 * t929;
t660 = -pkin(2) * t706 - pkin(3) * t777;
t671 = t708 * t940 + t936 * t818;
t953 = pkin(7) * t671 + t499 * t936 + t660 * t940;
t686 = -pkin(3) * t843 + pkin(8) * t774 - t1056;
t702 = t773 * t929 + t774 * t926;
t719 = -pkin(8) * t773 + t1057;
t580 = -qJ(3) * t702 - t686 * t926 + t719 * t929;
t594 = -pkin(2) * t702 - pkin(3) * t773 + t683;
t679 = t703 * t940 + t936 * t843;
t952 = pkin(7) * t679 + t580 * t936 + t594 * t940;
t699 = -pkin(3) * t845 + pkin(8) * t805 + t1057;
t727 = -pkin(8) * t802 + t1056;
t730 = t802 * t929 + t805 * t926;
t593 = -qJ(3) * t730 - t699 * t926 + t727 * t929;
t604 = -pkin(2) * t730 - pkin(3) * t802 + t684;
t694 = t733 * t940 + t936 * t845;
t951 = pkin(7) * t694 + t593 * t936 + t604 * t940;
t949 = -pkin(7) * t866 + t1040 * t926 + t771 * t940;
t865 = t1027 * t926 + t896 * t940;
t948 = pkin(7) * t865 + t1040 * t929 + t772 * t940;
t669 = t698 * t940 + t1040;
t947 = pkin(7) * t669 - (-pkin(2) * t940 - qJ(3) * t936) * t697;
t891 = t904 * t931;
t889 = t904 * t928;
t888 = t968 * t928;
t859 = t900 * t940 - t936 * t902;
t855 = t965 * t931;
t853 = t965 * t928;
t850 = -t891 * t927 - t930 * t968;
t848 = t891 * t930 - t927 * t968;
t839 = t972 * t931;
t838 = t972 * t928;
t834 = -t1002 + (-t922 * t928 - t1009) * qJDD(2);
t833 = t1002 + (-t921 * t928 + t1009) * qJDD(2);
t822 = -0.2e1 * t1017 * t928 + t931 * t971;
t798 = -t855 * t927 + t865 * t930;
t796 = t855 * t930 + t865 * t927;
t794 = -t1049 + (t888 * t928 + t890 * t931) * pkin(7);
t793 = -t1050 + (-t889 * t928 - t891 * t931) * pkin(7);
t788 = -t839 * t927 + t858 * t930;
t787 = t839 * t930 + t858 * t927;
t786 = -qJ(3) * t897 + t1013 * t929;
t785 = qJ(3) * t896 - t1013 * t926;
t764 = t769 * t931;
t760 = t827 * t929 + t828 * t926;
t754 = t936 * qJDD(4) + t761 * t940;
t753 = -pkin(1) * t889 + t1004 * t931 + t928 * t829;
t752 = pkin(1) * t888 + t1005 * t931 + t830 * t928;
t743 = -t768 * t931 + t928 * t874;
t742 = -t768 * t928 - t931 * t874;
t735 = t809 * t929 + t810 * t926;
t734 = t807 * t929 + t808 * t926;
t729 = t801 * t929 + t804 * t926;
t728 = t800 * t929 + t803 * t926;
t713 = t1078 * t936 + t732 * t940;
t712 = t731 * t940 - t936 * t886;
t707 = t778 * t929 + t780 * t926;
t701 = t737 * t940 + t1020;
t700 = t736 * t940 - t1020;
t685 = pkin(2) * t901 + qJ(3) * t899 + t698;
t681 = t709 * t940 - t936 * t851;
t680 = -t928 * t760 + t931 * t969;
t676 = -pkin(1) * t742 + t1070 * t931;
t675 = -t743 * t927 + t769 * t930;
t674 = t743 * t930 + t769 * t927;
t673 = t929 * t1055 - t936 * t772 + (-t853 * t928 - t855 * t931) * pkin(7);
t672 = t926 * t1055 - t936 * t771 + (-t1084 * t931 - t854 * t928) * pkin(7);
t670 = -pkin(2) * t821 + qJ(3) * t698;
t659 = (-t742 * t928 - t743 * t931) * pkin(7);
t658 = t697 * t940 + (-t838 * t928 - t839 * t931) * pkin(7);
t645 = t724 * t929 + t725 * t926;
t636 = -pkin(1) * t853 - t928 * t785 + t931 * t948;
t635 = -pkin(1) * t854 - t928 * t786 + t931 * t949;
t626 = -t928 * t729 + t931 * t975;
t625 = -t928 * t728 + t931 * t976;
t624 = -t928 * t735 + t931 * t966;
t623 = -t928 * t734 + t931 * t967;
t622 = -t928 * t730 + t931 * t974;
t621 = t931 * t730 + t928 * t974;
t614 = t690 * t929 + t692 * t926;
t613 = t689 * t929 + t691 * t926;
t610 = -t928 * t707 + t931 * t977;
t609 = t646 * t940 - t936 * t763;
t608 = -t928 * t702 + t931 * t979;
t607 = t931 * t702 + t928 * t979;
t606 = -t928 * t706 + t931 * t978;
t605 = t931 * t706 + t928 * t978;
t601 = t697 * t928 + t931 * t980;
t600 = -t697 * t931 + t928 * t980;
t592 = -pkin(1) * t838 + t1006 * t931 - t685 * t928;
t589 = -pkin(2) * t845 + qJ(3) * t733 + t699 * t929 + t727 * t926;
t584 = t616 * t940 - t936 * t739;
t583 = t615 * t940 - t936 * t740;
t582 = -t622 * t927 + t694 * t930;
t581 = t622 * t930 + t694 * t927;
t575 = t651 * t929 + t653 * t926;
t574 = t650 * t929 + t652 * t926;
t572 = -pkin(2) * t843 + qJ(3) * t703 + t686 * t929 + t719 * t926;
t559 = -t608 * t927 + t679 * t930;
t558 = t608 * t930 + t679 * t927;
t556 = t629 * t929 + t630 * t926;
t549 = -t606 * t927 + t671 * t930;
t548 = t606 * t930 + t671 * t927;
t547 = -t601 * t927 + t669 * t930;
t546 = t601 * t930 + t669 * t927;
t540 = -t928 * t645 + t931 * t981;
t539 = t577 * t940 - t936 * t721;
t538 = t576 * t940 - t936 * t723;
t528 = t611 * t929 + t612 * t926;
t519 = t557 * t940 - t936 * t668;
t518 = -t928 * t614 + t931 * t982;
t517 = -t928 * t613 + t931 * t983;
t508 = t529 * t940 - t936 * t617;
t500 = -(pkin(2) * t936 - qJ(3) * t940) * t697 + (-t600 * t928 - t601 * t931) * pkin(7);
t498 = -t928 * t575 + t931 * t984;
t497 = -t928 * t574 + t931 * t985;
t495 = -pkin(1) * t600 - t928 * t670 + t931 * t947;
t494 = -pkin(2) * t818 + qJ(3) * t708 + t573 * t929 + t590 * t926;
t488 = -t928 * t570 + t931 * t986;
t487 = t931 * t570 + t928 * t986;
t484 = -t928 * t564 + t931 * t987;
t483 = t931 * t564 + t928 * t987;
t476 = t534 * t929 + t536 * t926;
t475 = t533 * t929 + t535 * t926;
t474 = -t928 * t556 + t931 * t988;
t471 = t593 * t940 - t936 * t604 + (-t621 * t928 - t622 * t931) * pkin(7);
t470 = -t928 * t543 + t931 * t989;
t469 = t931 * t543 + t928 * t989;
t466 = t525 * t929 + t527 * t926;
t465 = t524 * t929 + t526 * t926;
t460 = -t928 * t522 + t931 * t991;
t459 = t931 * t522 + t928 * t991;
t458 = t580 * t940 - t936 * t594 + (-t607 * t928 - t608 * t931) * pkin(7);
t456 = -pkin(2) * t795 - pkin(8) * t1065 + qJ(3) * t523 + t591 * t929;
t453 = -pkin(1) * t621 - t928 * t589 + t931 * t951;
t452 = -t928 * t528 + t931 * t990;
t450 = t478 * t940 - t936 * t562;
t449 = t477 * t940 - t936 * t560;
t448 = -t488 * t927 + t532 * t930;
t447 = t488 * t930 + t532 * t927;
t445 = t468 * t940 - t936 * t586;
t444 = t467 * t940 - t936 * t585;
t443 = -t484 * t927 + t530 * t930;
t442 = t484 * t930 + t530 * t927;
t441 = -pkin(1) * t607 - t928 * t572 + t931 * t952;
t436 = t499 * t940 - t936 * t660 + (-t605 * t928 - t606 * t931) * pkin(7);
t431 = -t470 * t927 + t513 * t930;
t430 = t470 * t930 + t513 * t927;
t426 = t489 * t929 + t490 * t926;
t425 = -t460 * t927 + t516 * t930;
t424 = t460 * t930 + t516 * t927;
t416 = -pkin(1) * t605 - t928 * t494 + t931 * t953;
t413 = -t928 * t476 + t931 * t992;
t412 = -t928 * t475 + t931 * t993;
t411 = -pkin(2) * t714 + qJ(3) * t571 + t473 * t929 + t486 * t926;
t410 = -pkin(2) * t704 + qJ(3) * t565 + t472 * t929 + t485 * t926;
t409 = -t928 * t466 + t931 * t994;
t408 = -t928 * t465 + t931 * t995;
t407 = t427 * t940 - t936 * t502;
t406 = -t928 * t463 + t931 * t996;
t405 = t931 * t463 + t928 * t996;
t402 = -t928 * t454 + t931 * t997;
t401 = t931 * t454 + t928 * t997;
t399 = -pkin(2) * t665 + qJ(3) * t544 + t451 * t929 + t462 * t926;
t389 = -t928 * t434 + t931 * t998;
t388 = t931 * t434 + t928 * t998;
t386 = -t406 * t927 + t439 * t930;
t385 = t406 * t930 + t439 * t927;
t383 = -t928 * t426 + t931 * t999;
t382 = t461 * t940 - t936 * t496 + (-t459 * t928 - t460 * t931) * pkin(7);
t381 = t1000 * t931 - t928 * t422;
t380 = t1000 * t928 + t931 * t422;
t379 = -t402 * t927 + t432 * t930;
t378 = t402 * t930 + t432 * t927;
t377 = -pkin(1) * t459 - t928 * t456 + t931 * t954;
t376 = t415 * t940 - t936 * t480 + (-t487 * t928 - t488 * t931) * pkin(7);
t375 = t414 * t940 - t936 * t479 + (-t483 * t928 - t484 * t931) * pkin(7);
t372 = -t389 * t927 + t418 * t930;
t371 = t389 * t930 + t418 * t927;
t369 = t400 * t940 - t936 * t438 + (-t469 * t928 - t470 * t931) * pkin(7);
t368 = -pkin(2) * t514 + qJ(3) * t435 + t404 * t929 + t421 * t926;
t367 = -pkin(1) * t487 - t928 * t411 + t931 * t955;
t366 = -t381 * t927 + t403 * t930;
t365 = t381 * t930 + t403 * t927;
t364 = -pkin(1) * t483 - t928 * t410 + t931 * t956;
t356 = -pkin(2) * t578 + qJ(3) * t464 + t387 * t929 + t394 * t926;
t354 = -pkin(1) * t469 - t928 * t399 + t931 * t957;
t353 = -pkin(2) * t553 + qJ(3) * t455 + t384 * t929 + t392 * t926;
t350 = t370 * t940 - t936 * t398 + (-t388 * t928 - t389 * t931) * pkin(7);
t349 = t357 * t940 - t936 * t397 + (-t405 * t928 - t406 * t931) * pkin(7);
t347 = -pkin(2) * t501 + qJ(3) * t423 + t358 * t929 + t362 * t926;
t346 = t355 * t940 - t936 * t393 + (-t401 * t928 - t402 * t931) * pkin(7);
t345 = t1001 * t931 - t928 * t360;
t344 = t1001 * t928 + t931 * t360;
t341 = -pkin(1) * t388 - t928 * t368 + t931 * t958;
t340 = -pkin(1) * t405 - t928 * t356 + t931 * t959;
t339 = -pkin(1) * t401 - t928 * t353 + t931 * t960;
t338 = -t345 * t927 + t352 * t930;
t337 = t345 * t930 + t352 * t927;
t336 = t348 * t940 - t936 * t359 + (-t380 * t928 - t381 * t931) * pkin(7);
t334 = -pkin(2) * t395 + qJ(3) * t361 + t342 * t929 + t351 * t926;
t333 = -pkin(1) * t380 - t928 * t347 + t931 * t961;
t332 = t335 * t940 - t936 * t343 + (-t344 * t928 - t345 * t931) * pkin(7);
t331 = -pkin(1) * t344 - t928 * t334 + t931 * t962;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t862, 0, 0, 0, 0, 0, 0, t850, t849, 0, t675, 0, 0, 0, 0, 0, 0, -t1085, t798, t788, t547, 0, 0, 0, 0, 0, 0, t559, t582, t549, t425, 0, 0, 0, 0, 0, 0, t443, t448, t431, t372, 0, 0, 0, 0, 0, 0, t379, t386, t366, t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t861, 0, 0, 0, 0, 0, 0, t848, -t973, 0, t674, 0, 0, 0, 0, 0, 0, t797, t796, t787, t546, 0, 0, 0, 0, 0, 0, t558, t581, t548, t424, 0, 0, 0, 0, 0, 0, t442, t447, t430, t371, 0, 0, 0, 0, 0, 0, t378, t385, t365, t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1038, 0, 0, 0, 0, 0, 0, t889, -t888, 0, t742, 0, 0, 0, 0, 0, 0, t854, t853, t838, t600, 0, 0, 0, 0, 0, 0, t607, t621, t605, t459, 0, 0, 0, 0, 0, 0, t483, t487, t469, t388, 0, 0, 0, 0, 0, 0, t401, t405, t380, t344; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1080, -t1079, -t861, -qJ(1) * t861, 0, 0, -t849, 0, t850, t927 * t1030, -qJ(1) * t848 - t753 * t927 + t793 * t930, qJ(1) * t973 - t752 * t927 + t794 * t930, -t764 * t927 + t768 * t930, -qJ(1) * t674 + t659 * t930 - t676 * t927, -t833 * t927 + t1051, -t822 * t927 + t859 * t930, t798, -t834 * t927 - t1051, t1085, 0, -qJ(1) * t797 - t635 * t927 + t672 * t930, -qJ(1) * t796 - t636 * t927 + t673 * t930, -qJ(1) * t787 - t592 * t927 + t658 * t930, -qJ(1) * t546 - t495 * t927 + t500 * t930, -t624 * t927 + t701 * t930, -t610 * t927 + t681 * t930, -t626 * t927 + t713 * t930, -t623 * t927 + t700 * t930, -t625 * t927 + t712 * t930, -t680 * t927 + t754 * t930, -qJ(1) * t558 - t441 * t927 + t458 * t930, -qJ(1) * t581 - t453 * t927 + t471 * t930, -qJ(1) * t548 - t416 * t927 + t436 * t930, -qJ(1) * t424 - t377 * t927 + t382 * t930, -t518 * t927 + t584 * t930, -t474 * t927 + t519 * t930, -t497 * t927 + t538 * t930, -t517 * t927 + t583 * t930, -t498 * t927 + t539 * t930, -t540 * t927 + t609 * t930, -qJ(1) * t442 - t364 * t927 + t375 * t930, -qJ(1) * t447 - t367 * t927 + t376 * t930, -qJ(1) * t430 - t354 * t927 + t369 * t930, -qJ(1) * t371 - t341 * t927 + t350 * t930, -t413 * t927 + t450 * t930, -t383 * t927 + t407 * t930, -t408 * t927 + t444 * t930, -t412 * t927 + t449 * t930, -t409 * t927 + t445 * t930, -t452 * t927 + t508 * t930, -qJ(1) * t378 - t339 * t927 + t346 * t930, -qJ(1) * t385 - t340 * t927 + t349 * t930, -qJ(1) * t365 - t333 * t927 + t336 * t930, -qJ(1) * t337 - t331 * t927 + t332 * t930; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1079, -t1080, t862, qJ(1) * t862, 0, 0, t973, 0, t848, -t930 * t1030, qJ(1) * t850 + t753 * t930 + t793 * t927, qJ(1) * t849 + t752 * t930 + t794 * t927, t764 * t930 + t768 * t927, qJ(1) * t675 + t659 * t927 + t676 * t930, t833 * t930 + t1052, t822 * t930 + t859 * t927, t796, t834 * t930 - t1052, -t797, 0, -qJ(1) * t1085 + t635 * t930 + t672 * t927, qJ(1) * t798 + t636 * t930 + t673 * t927, qJ(1) * t788 + t592 * t930 + t658 * t927, qJ(1) * t547 + t495 * t930 + t500 * t927, t624 * t930 + t701 * t927, t610 * t930 + t681 * t927, t626 * t930 + t713 * t927, t623 * t930 + t700 * t927, t625 * t930 + t712 * t927, t680 * t930 + t754 * t927, qJ(1) * t559 + t441 * t930 + t458 * t927, qJ(1) * t582 + t453 * t930 + t471 * t927, qJ(1) * t549 + t416 * t930 + t436 * t927, qJ(1) * t425 + t377 * t930 + t382 * t927, t518 * t930 + t584 * t927, t474 * t930 + t519 * t927, t497 * t930 + t538 * t927, t517 * t930 + t583 * t927, t498 * t930 + t539 * t927, t540 * t930 + t609 * t927, qJ(1) * t443 + t364 * t930 + t375 * t927, qJ(1) * t448 + t367 * t930 + t376 * t927, qJ(1) * t431 + t354 * t930 + t369 * t927, qJ(1) * t372 + t341 * t930 + t350 * t927, t413 * t930 + t450 * t927, t383 * t930 + t407 * t927, t408 * t930 + t444 * t927, t412 * t930 + t449 * t927, t409 * t930 + t445 * t927, t452 * t930 + t508 * t927, qJ(1) * t379 + t339 * t930 + t346 * t927, qJ(1) * t386 + t340 * t930 + t349 * t927, qJ(1) * t366 + t333 * t930 + t336 * t927, qJ(1) * t338 + t331 * t930 + t332 * t927; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1015, t906, 0, 0, 0, 0, t888, 0, t889, t931 * qJDD(2), pkin(1) * t891 + t1004 * t928 - t931 * t829, -pkin(1) * t890 + t1005 * t928 - t830 * t931, t769 * t928, pkin(1) * t743 + t1070 * t928, t1003 + (t921 * t931 + t1010) * qJDD(2), 0.2e1 * t1017 * t931 + t928 * t971, t853, -t1003 + (t922 * t931 - t1010) * qJDD(2), -t854, 0, pkin(1) * t1084 + t931 * t786 + t928 * t949, pkin(1) * t855 + t931 * t785 + t928 * t948, pkin(1) * t839 + t1006 * t928 + t685 * t931, pkin(1) * t601 + t931 * t670 + t928 * t947, t931 * t735 + t928 * t966, t931 * t707 + t928 * t977, t931 * t729 + t928 * t975, t931 * t734 + t928 * t967, t931 * t728 + t928 * t976, t931 * t760 + t928 * t969, pkin(1) * t608 + t931 * t572 + t928 * t952, pkin(1) * t622 + t931 * t589 + t928 * t951, pkin(1) * t606 + t931 * t494 + t928 * t953, pkin(1) * t460 + t931 * t456 + t928 * t954, t931 * t614 + t928 * t982, t931 * t556 + t928 * t988, t931 * t574 + t928 * t985, t931 * t613 + t928 * t983, t931 * t575 + t928 * t984, t931 * t645 + t928 * t981, pkin(1) * t484 + t931 * t410 + t928 * t956, pkin(1) * t488 + t931 * t411 + t928 * t955, pkin(1) * t470 + t931 * t399 + t928 * t957, pkin(1) * t389 + t931 * t368 + t928 * t958, t931 * t476 + t928 * t992, t931 * t426 + t928 * t999, t931 * t465 + t928 * t995, t931 * t475 + t928 * t993, t931 * t466 + t928 * t994, t931 * t528 + t928 * t990, pkin(1) * t402 + t931 * t353 + t928 * t960, pkin(1) * t406 + t931 * t356 + t928 * t959, pkin(1) * t381 + t931 * t347 + t928 * t961, pkin(1) * t345 + t931 * t334 + t928 * t962;];
tauB_reg  = t1;
