% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPPR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:08:18
% EndTime: 2019-03-09 08:08:30
% DurationCPUTime: 4.43s
% Computational Cost: add. (7252->439), mult. (18834->580), div. (0->0), fcn. (13920->8), ass. (0->229)
t197 = sin(pkin(10));
t199 = cos(pkin(10));
t198 = sin(pkin(9));
t201 = sin(qJ(2));
t202 = cos(qJ(2));
t290 = cos(pkin(9));
t176 = t198 * t202 + t201 * t290;
t265 = qJD(1) * t176;
t121 = t199 * qJD(2) - t197 * t265;
t200 = sin(qJ(6));
t224 = t197 * qJD(2) + t199 * t265;
t304 = cos(qJ(6));
t323 = t304 * t121 + t200 * t224;
t330 = t323 ^ 2;
t324 = -t200 * t121 + t224 * t304;
t329 = t324 ^ 2;
t247 = t290 * t202;
t185 = qJD(1) * t247;
t263 = qJD(1) * t201;
t157 = t198 * t263 - t185;
t259 = qJD(6) - t157;
t326 = t259 * t324;
t258 = qJD(1) * qJD(2);
t250 = t201 * t258;
t184 = t198 * t250;
t147 = qJD(2) * t185 - t184;
t177 = t304 * t197 - t200 * t199;
t35 = qJD(6) * t324 - t177 * t147;
t328 = -t35 + t326;
t327 = t259 * t323;
t133 = t199 * t147;
t288 = t121 * t157;
t243 = t133 + t288;
t218 = -t200 * t197 - t304 * t199;
t163 = t218 * qJD(6);
t292 = t218 * t157 - t163;
t251 = qJD(6) * t304;
t260 = qJD(6) * t200;
t164 = t197 * t251 - t199 * t260;
t291 = -t177 * t157 + t164;
t159 = t176 * qJD(2);
t146 = qJD(1) * t159;
t307 = pkin(4) + pkin(5);
t187 = pkin(2) * t250;
t62 = t146 * pkin(3) - t147 * qJ(4) - qJD(4) * t265 + t187;
t299 = -qJ(3) - pkin(7);
t249 = qJD(2) * t299;
t155 = t202 * qJD(3) + t201 * t249;
t138 = t155 * qJD(1);
t210 = -t201 * qJD(3) + t202 * t249;
t139 = t210 * qJD(1);
t78 = t290 * t138 + t198 * t139;
t76 = qJD(2) * qJD(4) + t78;
t71 = t197 * t76;
t12 = t71 + (-pkin(8) * t147 - t62) * t199 - t307 * t146;
t131 = t197 * t147;
t25 = t197 * t62 + t199 * t76;
t14 = t146 * qJ(5) + t157 * qJD(5) + t25;
t13 = pkin(8) * t131 + t14;
t191 = -t202 * pkin(2) - pkin(1);
t264 = qJD(1) * t191;
t181 = qJD(3) + t264;
t80 = t157 * pkin(3) - qJ(4) * t265 + t181;
t182 = t299 * t201;
t179 = qJD(1) * t182;
t298 = qJD(2) * pkin(2);
t172 = t179 + t298;
t183 = t299 * t202;
t180 = qJD(1) * t183;
t248 = t290 * t180;
t104 = t198 * t172 - t248;
t95 = qJD(2) * qJ(4) + t104;
t46 = -t197 * t95 + t199 * t80;
t236 = qJD(5) - t46;
t17 = -pkin(8) * t224 - t307 * t157 + t236;
t47 = t197 * t80 + t199 * t95;
t36 = t157 * qJ(5) + t47;
t23 = -pkin(8) * t121 + t36;
t220 = -t304 * t17 + t200 * t23;
t1 = -qJD(6) * t220 + t200 * t12 + t304 * t13;
t325 = t220 * t259 + t1;
t322 = t224 ^ 2;
t321 = -0.2e1 * t258;
t24 = t199 * t62 - t71;
t19 = -t146 * pkin(4) - t24;
t320 = -t36 * t157 + t19;
t217 = -t198 * t201 + t247;
t106 = t146 * t217;
t63 = t157 * t159 - t106;
t156 = t157 ^ 2;
t242 = t197 * t146 + t199 * t156;
t286 = t224 * t265;
t317 = t242 + t286;
t268 = t199 * t146 - t197 * t156;
t279 = t265 * t121;
t316 = t268 + t279;
t34 = t121 * t251 + t218 * t147 + t224 * t260;
t315 = -t218 * t34 - t291 * t324;
t244 = t157 * t224 + t131;
t269 = -t198 * t138 + t290 * t139;
t222 = -pkin(4) * t131 + qJD(5) * t224 + t269;
t289 = qJ(5) * t199;
t20 = -t147 * (pkin(5) * t197 - t289) + t222;
t314 = -t177 * t146 - t259 * t292;
t190 = -t290 * pkin(2) - pkin(3);
t215 = -t197 * qJ(5) + t190;
t168 = -t199 * pkin(4) + t215;
t188 = t198 * pkin(2) + qJ(4);
t284 = t146 * t188;
t165 = t198 * t180;
t103 = t290 * t172 + t165;
t223 = qJD(2) * pkin(3) - qJD(4) + t103;
t208 = qJ(5) * t224 + t223;
t45 = -pkin(4) * t121 - t208;
t313 = -t147 * t168 + (qJD(4) - t45) * t157 + t284;
t162 = t217 * qJD(2);
t285 = t224 * t197;
t287 = t121 * t199;
t226 = t285 - t287;
t277 = t176 * t197;
t312 = 0.2e1 * t133 * t277 + t162 * t226;
t209 = t176 * t146 - t147 * t217 + t162 * t157;
t311 = -t121 * t159 + t197 * t209;
t310 = t307 * t197 - t289;
t193 = t197 ^ 2;
t194 = t199 ^ 2;
t309 = (t193 - t194) * t147 + t157 * t226;
t308 = t265 ^ 2;
t302 = pkin(8) * t157;
t256 = pkin(2) * t263;
t88 = pkin(3) * t265 + t157 * qJ(4) + t256;
t109 = t179 * t290 + t165;
t98 = t197 * t109;
t22 = t98 + (-t88 + t302) * t199 - t307 * t265;
t53 = t199 * t109 + t197 * t88;
t42 = qJ(5) * t265 + t53;
t31 = -t197 * t302 + t42;
t300 = -pkin(8) + t188;
t169 = t300 * t197;
t170 = t300 * t199;
t97 = t200 * t169 + t304 * t170;
t306 = -qJD(4) * t177 + qJD(6) * t97 - t200 * t31 + t304 * t22;
t96 = t304 * t169 - t200 * t170;
t305 = -qJD(4) * t218 + qJD(6) * t96 - t200 * t22 - t304 * t31;
t303 = pkin(2) * t201;
t301 = t324 * t323;
t257 = t201 * t298;
t73 = t159 * pkin(3) - t162 * qJ(4) - t176 * qJD(4) + t257;
t90 = t155 * t290 + t198 * t210;
t38 = t197 * t73 + t199 * t90;
t297 = t265 * t323;
t294 = t324 * t265;
t115 = -t290 * t182 - t198 * t183;
t293 = t269 * t115;
t100 = -pkin(3) * t217 - t176 * qJ(4) + t191;
t116 = t198 * t182 - t183 * t290;
t60 = t197 * t100 + t199 * t116;
t283 = t147 * t176;
t281 = t157 * t265;
t278 = t162 * t197;
t204 = qJD(1) ^ 2;
t273 = t202 * t204;
t203 = qJD(2) ^ 2;
t272 = t203 * t201;
t271 = t203 * t202;
t266 = t201 ^ 2 - t202 ^ 2;
t262 = qJD(4) * t224;
t261 = qJD(5) * t197;
t50 = -qJ(5) * t217 + t60;
t255 = t201 * t273;
t82 = t197 * t90;
t37 = t199 * t73 - t82;
t52 = t199 * t88 - t98;
t246 = pkin(1) * t321;
t108 = t198 * t179 - t248;
t245 = -t157 * t310 + t108 + t261;
t111 = t197 * t116;
t59 = t199 * t100 - t111;
t89 = t198 * t155 - t290 * t210;
t21 = t159 * qJ(5) - qJD(5) * t217 + t38;
t241 = 0.2e1 * t265;
t239 = -t177 * t35 + t292 * t323;
t237 = t202 * t250;
t235 = -t218 * t146 - t291 * t259;
t234 = -t121 * t278 + t193 * t283;
t232 = -t268 + t279;
t231 = pkin(4) * t197 - t289;
t229 = -t197 * t46 + t199 * t47;
t228 = t115 * t147 - t176 * t269;
t227 = -t121 ^ 2 - t322;
t32 = t111 + (-pkin(8) * t176 - t100) * t199 + t307 * t217;
t39 = pkin(8) * t277 + t50;
t9 = -t200 * t39 + t304 * t32;
t6 = t200 * t17 + t304 * t23;
t10 = t200 * t32 + t304 * t39;
t216 = t243 * t197;
t214 = -t199 * t176 * qJD(5) + t89;
t27 = -qJ(5) * t133 - t222;
t64 = t176 * t231 + t115;
t213 = t147 * t64 + t162 * t45 + t176 * t27;
t212 = -t162 * t223 + t228;
t211 = -t304 * t157 + t251;
t207 = -t284 + t147 * t190 + (-qJD(4) - t223) * t157;
t206 = (t285 + t287) * t157 + (-t193 - t194) * t147;
t2 = -qJD(6) * t6 + t304 * t12 - t200 * t13;
t143 = t307 * t199 - t215;
t110 = qJD(4) * t287;
t93 = t218 * t176;
t92 = t177 * t176;
t58 = t244 * t199;
t57 = -t157 * t231 + t108;
t55 = -t176 * t310 - t115;
t54 = t162 * t199 * t224 + t194 * t283;
t51 = pkin(4) * t217 - t59;
t49 = -t162 * t177 - t163 * t176;
t48 = t218 * t162 - t164 * t176;
t43 = -pkin(4) * t265 - t52;
t41 = t242 - t286;
t40 = t162 * t231 + t214;
t33 = -t157 * pkin(4) + t236;
t30 = t121 * t307 + t208;
t29 = -t162 * t310 - t214;
t28 = -t159 * pkin(4) - t37;
t18 = t159 * t224 + t199 * t209;
t16 = pkin(8) * t278 + t21;
t15 = t82 + (-pkin(8) * t162 - t73) * t199 - t307 * t159;
t4 = -t10 * qJD(6) + t304 * t15 - t200 * t16;
t3 = t9 * qJD(6) + t200 * t15 + t304 * t16;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t237, t266 * t321, t271, -0.2e1 * t237, -t272, 0, -pkin(7) * t271 + t201 * t246, pkin(7) * t272 + t202 * t246, 0, 0, t162 * t265 + t283, -t159 * t265 - t209, t162 * qJD(2), t63, -t159 * qJD(2), 0, t191 * t146 + t181 * t159 + (-t89 + (-qJD(1) * t217 + t157) * t303) * qJD(2), t191 * t147 + t181 * t162 + (t241 * t303 - t90) * qJD(2), -t103 * t162 - t104 * t159 - t116 * t146 - t90 * t157 + t217 * t78 + t265 * t89 + t228, -t103 * t89 + t104 * t90 - t293 + t78 * t116 + (t181 + t264) * t257, t54, -t312, t18, t234, -t311, t63, -t121 * t89 + t59 * t146 + t37 * t157 + t46 * t159 + t197 * t212 - t217 * t24, -t60 * t146 - t38 * t157 - t47 * t159 + t199 * t212 + t217 * t25 + t224 * t89, t38 * t121 - t37 * t224 + (-t147 * t59 - t162 * t46 - t176 * t24) * t199 + (-t147 * t60 - t162 * t47 - t176 * t25) * t197, -t223 * t89 + t24 * t59 + t25 * t60 + t46 * t37 + t47 * t38 - t293, t54, t18, t312, t63, t311, t234, -t121 * t40 - t51 * t146 - t28 * t157 - t33 * t159 + t19 * t217 + t197 * t213, t21 * t121 + t28 * t224 + (t147 * t51 + t162 * t33 + t176 * t19) * t199 + (-t14 * t176 - t147 * t50 - t162 * t36) * t197, -t14 * t217 + t50 * t146 + t21 * t157 + t36 * t159 - t199 * t213 - t224 * t40, t14 * t50 + t19 * t51 + t36 * t21 + t27 * t64 + t33 * t28 + t45 * t40, -t324 * t48 + t34 * t93, t323 * t48 - t324 * t49 - t34 * t92 + t93 * t35, t93 * t146 - t159 * t324 - t217 * t34 - t259 * t48, t323 * t49 - t35 * t92, -t92 * t146 + t159 * t323 - t217 * t35 - t259 * t49, -t159 * t259 - t106, -t9 * t146 + t159 * t220 + t2 * t217 - t20 * t92 + t259 * t4 + t29 * t323 + t30 * t49 + t55 * t35, -t1 * t217 + t10 * t146 + t6 * t159 - t20 * t93 - t259 * t3 + t29 * t324 - t30 * t48 - t55 * t34, t1 * t92 - t10 * t35 + t2 * t93 - t220 * t48 - t3 * t323 - t324 * t4 + t9 * t34 - t6 * t49, t1 * t10 + t2 * t9 + t20 * t55 - t220 * t4 + t30 * t29 + t6 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, t266 * t204, 0, t255, 0, 0, t204 * pkin(1) * t201, pkin(1) * t273, 0, 0, t281, -t156 + t308, -t184 + (t185 + t157) * qJD(2), -t281, 0, 0, t108 * qJD(2) - t157 * t256 - t181 * t265 + t269, t109 * qJD(2) + t181 * t157 - t256 * t265 - t78 (t104 - t108) * t265 + (-t103 + t109) * t157 + (-t146 * t198 - t147 * t290) * pkin(2), t103 * t108 - t104 * t109 + (-t181 * t263 + t198 * t78 + t269 * t290) * pkin(2), t58, -t309, t41, -t216, -t232, -t281, t108 * t121 - t52 * t157 + t197 * t207 + t199 * t269 - t265 * t46, -t108 * t224 + t53 * t157 - t197 * t269 + t199 * t207 + t265 * t47, -t53 * t121 + t52 * t224 + t110 + (-t157 * t46 + t25) * t199 + (-t157 * t47 - t24 + t262) * t197, t223 * t108 - t269 * t190 - t46 * t52 - t47 * t53 + (-t24 * t197 + t25 * t199) * t188 + t229 * qJD(4), t58, t41, t309, -t281, t232, -t216, t57 * t121 + t43 * t157 + t33 * t265 - t27 * t199 + (qJD(5) * t121 - t313) * t197, -t42 * t121 - t43 * t224 + t110 + (t157 * t33 + t14) * t199 + (t262 + t320) * t197, -t42 * t157 - t36 * t265 - t27 * t197 + (t57 + t261) * t224 + t313 * t199, t27 * t168 - t33 * t43 - t36 * t42 - t45 * t57 + (qJD(4) * t36 + t14 * t188) * t199 + (qJD(4) * t33 - qJD(5) * t45 + t188 * t19) * t197, -t34 * t177 - t292 * t324, t239 + t315, t294 + t314, -t218 * t35 + t291 * t323, t235 - t297, t259 * t265, t143 * t35 - t96 * t146 - t20 * t218 - t220 * t265 + t245 * t323 - t259 * t306 + t291 * t30, -t143 * t34 + t97 * t146 + t20 * t177 + t245 * t324 - t259 * t305 - t265 * t6 - t292 * t30, t1 * t218 - t2 * t177 - t220 * t292 - t291 * t6 - t305 * t323 + t306 * t324 + t96 * t34 - t97 * t35, t1 * t97 + t20 * t143 + t2 * t96 + t220 * t306 + t245 * t30 + t305 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241 * qJD(2), -t184 + (t185 - t157) * qJD(2), -t156 - t308, t103 * t265 + t104 * t157 + t187, 0, 0, 0, 0, 0, 0, t316, -t317, t206, t157 * t229 + t25 * t197 + t24 * t199 + t223 * t265, 0, 0, 0, 0, 0, 0, t316, t206, t317, t14 * t197 - t45 * t265 - t19 * t199 + (t197 * t33 + t199 * t36) * t157, 0, 0, 0, 0, 0, 0, t235 + t297, t294 - t314, t239 - t315, t1 * t177 + t2 * t218 + t220 * t291 + t265 * t30 - t292 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t243, t227, -t47 * t121 + t224 * t46 - t269, 0, 0, 0, 0, 0, 0, t244, t227, -t243, -t36 * t121 - t224 * t33 + t27, 0, 0, 0, 0, 0, 0, -t35 - t326, t34 + t327, t329 + t330, t220 * t324 - t323 * t6 - t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t265 - t121 * t224, t133 - t288, -t156 - t322, t224 * t45 + t320, 0, 0, 0, 0, 0, 0, -t200 * t259 ^ 2 - t304 * t146 - t224 * t323, t200 * t146 - t211 * t259 - t224 * t324, t200 * t328 - t211 * t323 + t304 * t34, t2 * t304 + t325 * t200 + t211 * t6 - t30 * t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, t329 - t330, -t34 + t327, -t301, t328, -t146, t259 * t6 - t30 * t324 + t2, t30 * t323 - t325, 0, 0;];
tauc_reg  = t5;
