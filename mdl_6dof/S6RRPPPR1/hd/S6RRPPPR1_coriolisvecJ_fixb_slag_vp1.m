% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRPPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPPPR1_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPPPR1_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:06:05
% EndTime: 2019-03-09 08:07:59
% DurationCPUTime: 102.08s
% Computational Cost: add. (35710->1346), mult. (55871->1690), div. (0->0), fcn. (55812->10), ass. (0->625)
t1170 = Icges(5,1) + Icges(6,1);
t1169 = Icges(5,4) - Icges(6,5);
t1185 = Icges(5,2) + Icges(6,3);
t1168 = Icges(6,4) + Icges(5,5);
t1177 = Icges(6,2) + Icges(5,3);
t1165 = Icges(5,6) - Icges(6,6);
t1186 = Icges(3,3) + Icges(4,3);
t612 = qJ(2) + pkin(9);
t594 = sin(t612);
t595 = cos(t612);
t619 = sin(qJ(2));
t622 = cos(qJ(2));
t1162 = Icges(3,5) * t622 + Icges(4,5) * t595 - Icges(3,6) * t619 - Icges(4,6) * t594;
t615 = sin(pkin(10));
t616 = cos(pkin(10));
t1184 = -t1169 * t616 + t1185 * t615;
t1183 = -t1169 * t615 + t1170 * t616;
t623 = cos(qJ(1));
t942 = t616 * t623;
t620 = sin(qJ(1));
t943 = t615 * t620;
t488 = t595 * t943 + t942;
t936 = t623 * t615;
t939 = t620 * t616;
t489 = t595 * t939 - t936;
t947 = t594 * t620;
t1087 = -t1165 * t488 + t1168 * t489 + t1177 * t947;
t945 = t595 * t620;
t974 = Icges(4,6) * t623;
t422 = Icges(4,4) * t945 - Icges(4,2) * t947 - t974;
t938 = t620 * t622;
t941 = t619 * t620;
t975 = Icges(3,6) * t623;
t467 = Icges(3,4) * t938 - Icges(3,2) * t941 - t975;
t1175 = t422 * t594 + t467 * t619;
t559 = Icges(4,4) * t947;
t980 = Icges(4,5) * t623;
t424 = Icges(4,1) * t945 - t559 - t980;
t580 = Icges(3,4) * t941;
t981 = Icges(3,5) * t623;
t469 = Icges(3,1) * t938 - t580 - t981;
t1130 = -t424 * t595 - t469 * t622 + t1175;
t1180 = t1186 * t623;
t1147 = -Icges(3,5) * t938 - Icges(4,5) * t945 + Icges(3,6) * t941 + Icges(4,6) * t947 + t1180;
t1109 = -t1165 * t947 - t1169 * t489 + t1185 * t488;
t1176 = t1168 * t947 - t1169 * t488 + t1170 * t489;
t1159 = t1109 * t488 + t1176 * t489;
t1098 = t1087 * t947 - t1130 * t620 + t1147 * t623 + t1159;
t1128 = t1109 * t615 + t1176 * t616;
t490 = t595 * t936 - t939;
t491 = t595 * t942 + t943;
t1182 = -t1109 * t490 - t1176 * t491;
t1181 = -t1165 * t615 + t1168 * t616;
t946 = t594 * t623;
t1108 = -t1165 * t946 - t1169 * t491 + t1185 * t490;
t1106 = t1168 * t946 - t1169 * t490 + t1170 * t491;
t1133 = t1165 * t595 + t1184 * t594;
t1132 = -t1168 * t595 + t1183 * t594;
t1163 = t1162 * t623 + t1186 * t620;
t1171 = Icges(3,5) * t619 + Icges(4,5) * t594 + Icges(3,6) * t622 + Icges(4,6) * t595;
t1173 = -t1087 * t946 + t1182;
t1107 = -t1165 * t490 + t1168 * t491 + t1177 * t946;
t986 = Icges(4,4) * t594;
t513 = Icges(4,1) * t595 - t986;
t425 = Icges(4,5) * t620 + t513 * t623;
t987 = Icges(3,4) * t619;
t546 = Icges(3,1) * t622 - t987;
t470 = Icges(3,5) * t620 + t546 * t623;
t1172 = -t425 * t945 - t470 * t938;
t1081 = -t1177 * t595 + t1181 * t594;
t510 = Icges(4,2) * t595 + t986;
t584 = Icges(4,4) * t595;
t512 = Icges(4,1) * t594 + t584;
t543 = Icges(3,2) * t622 + t987;
t604 = Icges(3,4) * t622;
t545 = Icges(3,1) * t619 + t604;
t1161 = t510 * t594 - t512 * t595 + t543 * t619 - t545 * t622;
t1082 = -t1165 * t594 + t1184 * t595;
t1164 = t1177 * t594 + t1181 * t595;
t1080 = t1168 * t594 + t1183 * t595;
t1160 = t1132 * t616 + t1133 * t615;
t1129 = t1106 * t616 + t1108 * t615;
t1158 = -t1163 * t623 - t1172;
t937 = t622 * t623;
t944 = t595 * t623;
t1044 = -t1163 * t620 - t425 * t944 - t470 * t937;
t1157 = t1147 * t620 - t424 * t944 - t469 * t937;
t1076 = t1171 * t623;
t1075 = t1171 * t620;
t759 = -Icges(4,2) * t594 + t584;
t423 = Icges(4,6) * t620 + t623 * t759;
t760 = -Icges(3,2) * t619 + t604;
t468 = Icges(3,6) * t620 + t623 * t760;
t1156 = t423 * t594 + t468 * t619;
t618 = sin(qJ(6));
t621 = cos(qJ(6));
t304 = t488 * t621 - t489 * t618;
t305 = t488 * t618 + t489 * t621;
t135 = Icges(7,5) * t305 + Icges(7,6) * t304 - Icges(7,3) * t947;
t308 = t490 * t621 - t491 * t618;
t309 = t490 * t618 + t491 * t621;
t137 = Icges(7,5) * t309 + Icges(7,6) * t308 - Icges(7,3) * t946;
t984 = Icges(7,4) * t305;
t138 = Icges(7,2) * t304 - Icges(7,6) * t947 + t984;
t290 = Icges(7,4) * t304;
t141 = Icges(7,1) * t305 - Icges(7,5) * t947 + t290;
t934 = -t308 * t138 - t309 * t141;
t983 = Icges(7,4) * t309;
t140 = Icges(7,2) * t308 - Icges(7,6) * t946 + t983;
t291 = Icges(7,4) * t308;
t143 = Icges(7,1) * t309 - Icges(7,5) * t946 + t291;
t935 = -t304 * t140 - t305 * t143;
t1154 = t935 + (t135 * t623 + t137 * t620) * t594 + t934;
t1059 = t138 * t304 + t141 * t305;
t933 = t308 * t140 + t309 * t143;
t1153 = -t1059 + (t135 * t620 - t137 * t623) * t594 + t933;
t940 = t619 * t623;
t1111 = -t423 * t946 - t468 * t940 - t1044;
t1119 = t1106 * t491 + t1107 * t946 + t1108 * t490;
t1152 = t1111 + t1119;
t1112 = -t423 * t947 - t468 * t941 + t1158;
t1120 = t1106 * t489 + t1107 * t947 + t1108 * t488;
t1151 = t1112 + t1120;
t1150 = t422 * t946 + t467 * t940 + t1157;
t1149 = t422 * t595 + t424 * t594 + t467 * t622 + t469 * t619;
t1148 = -t423 * t595 - t425 * t594 - t468 * t622 - t470 * t619;
t1145 = t1171 * qJD(2);
t1144 = -t425 * t595 - t470 * t622 + t1156;
t1143 = t1173 * t623;
t1141 = t1081 - t510 + t513;
t1139 = -t1081 * t947 - t1132 * t489 - t1133 * t488 + t1161 * t620 + t1076;
t1138 = t1081 * t946 + t1132 * t491 + t1133 * t490 - t1161 * t623 + t1075;
t737 = t615 * t621 - t616 * t618;
t1056 = t737 * t594;
t736 = t615 * t618 + t616 * t621;
t1057 = t736 * t594;
t968 = t135 * t595;
t50 = t1056 * t138 + t1057 * t141 + t968;
t1137 = t620 ^ 2;
t880 = qJD(2) * t623;
t836 = t594 * t880;
t350 = qJD(1) * t488 + t615 * t836;
t351 = -qJD(1) * t489 - t616 * t836;
t835 = t595 * t880;
t885 = qJD(1) * t620;
t842 = t594 * t885;
t676 = -t835 + t842;
t1118 = t1165 * t676 - t1169 * t351 - t1185 * t350;
t881 = qJD(2) * t620;
t837 = t594 * t881;
t522 = t615 * t837;
t884 = qJD(1) * t623;
t841 = t595 * t884;
t352 = t615 * t841 - t616 * t885 - t522;
t353 = qJD(1) * t491 - t616 * t837;
t457 = t594 * t884 + t595 * t881;
t1117 = t1165 * t457 + t1169 * t353 - t1185 * t352;
t1116 = t1165 * t350 + t1168 * t351 - t1177 * t676;
t1115 = t1165 * t352 - t1168 * t353 - t1177 * t457;
t1114 = -t1168 * t676 + t1169 * t350 + t1170 * t351;
t1113 = -t1168 * t457 + t1169 * t352 - t1170 * t353;
t1136 = t1082 * qJD(2);
t1135 = t1164 * qJD(2);
t1134 = t1080 * qJD(2);
t493 = t759 * qJD(2);
t494 = t513 * qJD(2);
t520 = t760 * qJD(2);
t521 = t546 * qJD(2);
t1131 = -t493 * t594 + t494 * t595 - t520 * t619 + t521 * t622 + (-t510 * t595 - t512 * t594 - t543 * t622 - t545 * t619) * qJD(2) + t1171 * qJD(1);
t1127 = t1163 * qJD(1);
t1126 = t1128 * t623 - t1129 * t620;
t1125 = qJD(1) * t1161 + qJD(2) * t1162;
t1124 = (t1160 - t1164) * qJD(1);
t144 = rSges(7,1) * t305 + rSges(7,2) * t304 - rSges(7,3) * t947;
t231 = rSges(7,1) * t1057 + rSges(7,2) * t1056 + rSges(7,3) * t595;
t874 = qJD(6) * t594;
t505 = t620 * t874 + t880;
t873 = qJD(6) * t595;
t567 = qJD(1) + t873;
t1010 = pkin(5) * t616;
t496 = pkin(8) * t595 + t1010 * t594;
t773 = pkin(4) * t616 + qJ(5) * t615;
t1055 = t773 * t594;
t1016 = pkin(2) * t619;
t1014 = pkin(3) * t594;
t514 = -qJ(4) * t595 + t1014;
t814 = -t514 - t1016;
t790 = -t1055 + t814;
t733 = -t496 + t790;
t684 = t733 * t623;
t1122 = qJD(2) * t684 - t144 * t567 - t231 * t505;
t451 = qJD(5) * t490;
t182 = t351 * pkin(4) - qJ(5) * t350 + t451;
t320 = pkin(4) * t489 + t488 * qJ(5);
t610 = t623 * pkin(7);
t565 = pkin(1) * t620 - t610;
t617 = -qJ(3) - pkin(7);
t589 = t623 * t617;
t1015 = pkin(2) * t622;
t590 = pkin(1) + t1015;
t899 = -t620 * t590 - t589;
t418 = t565 + t899;
t527 = qJD(1) * t565;
t1048 = qJD(1) * t418 - t527;
t1013 = pkin(3) * t595;
t516 = qJ(4) * t594 + t1013;
t480 = t516 * t620;
t877 = qJD(4) * t623;
t550 = t594 * t877;
t596 = qJD(3) * t620;
t901 = t550 + t596;
t766 = -qJD(1) * t480 + t1048 + t901;
t1110 = qJD(1) * t320 + t182 - t451 - t766;
t692 = qJD(2) * t510;
t266 = -t623 * t692 + (-t620 * t759 + t974) * qJD(1);
t694 = qJD(2) * t512;
t268 = -t623 * t694 + (-t513 * t620 + t980) * qJD(1);
t693 = qJD(2) * t543;
t316 = -t623 * t693 + (-t620 * t760 + t975) * qJD(1);
t695 = qJD(2) * t545;
t318 = -t623 * t695 + (-t546 * t620 + t981) * qJD(1);
t1105 = qJD(2) * t1148 - t266 * t594 + t268 * t595 - t316 * t619 + t318 * t622 + t1127;
t267 = qJD(1) * t423 - t620 * t692;
t269 = qJD(1) * t425 - t620 * t694;
t317 = qJD(1) * t468 - t620 * t693;
t319 = qJD(1) * t470 - t620 * t695;
t1104 = qJD(1) * t1147 + qJD(2) * t1149 + t267 * t594 - t269 * t595 + t317 * t619 - t319 * t622;
t677 = -t595 * t885 - t836;
t532 = qJ(4) * t835;
t907 = t532 + t550;
t238 = pkin(3) * t677 - qJ(4) * t842 + t907;
t878 = qJD(4) * t620;
t548 = t594 * t878;
t902 = -pkin(3) * t837 + t548;
t239 = pkin(3) * t841 + qJ(4) * t457 + t902;
t478 = t514 * t620;
t481 = t514 * t623;
t583 = qJD(4) * t594;
t1005 = pkin(1) - t590;
t593 = pkin(7) * t884;
t834 = t619 * t880;
t730 = -pkin(2) * t834 + t596;
t310 = -t593 + (t1005 * t620 - t589) * qJD(1) + t730;
t609 = t620 * pkin(7);
t574 = t881 * t1016;
t897 = qJD(3) * t623 + t574;
t843 = t617 * t885 + t897;
t311 = (-t1005 * t623 - t609) * qJD(1) - t843;
t855 = t623 * t310 + t620 * t311 - t418 * t884;
t1103 = t623 * t238 + t620 * t239 + t478 * t881 + t480 * t884 + t481 * t880 - t583 + t855;
t895 = t623 * pkin(1) + t609;
t1074 = qJD(1) * t895;
t552 = rSges(3,1) * t619 + rSges(3,2) * t622;
t1102 = t552 * t881 - t1074;
t1101 = qJD(1) * t1130 - t1145 * t620 + t1127;
t1100 = -t1145 * t623 + (-t1162 * t620 + t1144 + t1180) * qJD(1);
t1099 = -t1087 * t595 + t1128 * t594 + t1149;
t1097 = -t1150 - t1173;
t1095 = t1138 * qJD(1);
t1094 = (t1150 * t623 + t1152 * t620 + t1143) * qJD(2);
t1093 = (-t1098 * t623 + t1151 * t620) * qJD(2);
t1092 = t1139 * qJD(1);
t1091 = 0.2e1 * qJD(2);
t225 = Icges(7,5) * t1057 + Icges(7,6) * t1056 + Icges(7,3) * t595;
t982 = Icges(7,4) * t1057;
t227 = Icges(7,2) * t1056 + Icges(7,6) * t595 + t982;
t415 = Icges(7,4) * t1056;
t229 = Icges(7,1) * t1057 + Icges(7,5) * t595 + t415;
t70 = -t225 * t947 + t227 * t304 + t229 * t305;
t1090 = t567 * t70;
t322 = t491 * pkin(4) + qJ(5) * t490;
t483 = pkin(3) * t944 + qJ(4) * t946;
t571 = t623 * t590;
t804 = -t617 * t620 + t571;
t419 = t804 - t895;
t797 = qJD(1) * t419 + t1074 - t897;
t681 = qJD(1) * t483 - t514 * t881 + t548 + t797;
t876 = qJD(5) * t488;
t1078 = qJD(1) * t322 - t1055 * t881 + t681 + t876;
t931 = t309 * rSges(7,1) + t308 * rSges(7,2);
t146 = -rSges(7,3) * t946 + t931;
t463 = t491 * pkin(5);
t373 = -pkin(8) * t946 + t463;
t504 = -t623 * t874 + t881;
t1046 = -qJD(1) * t373 - t146 * t567 + t231 * t504 - t1078;
t43 = -t496 * t881 - t1046;
t1089 = qJD(1) * t43;
t1086 = t1133 * t620;
t1085 = t1133 * t623;
t1084 = t1132 * t620;
t1083 = t1132 * t623;
t183 = pkin(4) * t353 + t352 * qJ(5) + t876;
t413 = t620 * t1055;
t414 = t623 * t1055;
t875 = qJD(5) * t615;
t540 = t595 * t875;
t1079 = t623 * t182 + t620 * t183 + t320 * t884 + t413 * t881 + t414 * t880 + t1103 - t540;
t1077 = t1162 * qJD(1);
t434 = rSges(4,1) * t945 - rSges(4,2) * t947 - t623 * rSges(4,3);
t605 = t620 * rSges(4,3);
t435 = rSges(4,1) * t944 - rSges(4,2) * t946 + t605;
t742 = t434 * t620 + t435 * t623;
t923 = -t418 * t881 + t419 * t880;
t130 = qJD(2) * t742 + t923;
t922 = -t620 * t418 + t623 * t419;
t680 = t742 + t922;
t1073 = qJD(2) * t680 + t130;
t1072 = -t1092 + t1093;
t1071 = t1094 + t1095;
t1070 = -t1081 * t676 + t1125 * t620 + t1131 * t623 + t1132 * t351 - t1133 * t350 + t1134 * t491 + t1135 * t946 + t1136 * t490;
t1069 = t1081 * t457 - t1125 * t623 + t1131 * t620 + t1132 * t353 + t1133 * t352 + t1134 * t489 + t1135 * t947 + t1136 * t488;
t1066 = -t317 * t622 - t319 * t619 + (-t267 - t1115) * t595 + (t1113 * t616 + t1117 * t615 - t269) * t594 + (-t1087 * t594 - t1128 * t595 + t1130) * qJD(2);
t1065 = t316 * t622 + t318 * t619 + (t266 - t1116) * t595 + (t1114 * t616 + t1118 * t615 + t268) * t594 + (t1107 * t594 + t1129 * t595 - t1144) * qJD(2);
t1002 = rSges(6,2) * t594;
t775 = rSges(6,1) * t616 + rSges(6,3) * t615;
t404 = t595 * t775 + t1002;
t366 = t404 * qJD(2);
t455 = t773 * t595;
t539 = t594 * t875;
t356 = qJD(2) * t455 + t539;
t879 = qJD(4) * t595;
t433 = qJD(2) * t516 - t879;
t864 = qJD(2) * t1015;
t784 = -t433 - t864;
t729 = -t356 + t784;
t812 = -t516 - t1015;
t789 = -t455 + t812;
t1064 = -qJD(2) * (-t404 + t789) - t366 + t729;
t1063 = -t1107 * t595 + t1129 * t594 - t1148;
t904 = t545 + t760;
t905 = -t543 + t546;
t908 = t512 + t759;
t1062 = (qJD(2) * t1126 - t1124) * t594 + (t1141 * t595 - t594 * t908 - t619 * t904 + t622 * t905) * qJD(1);
t1031 = t620 * (-t510 * t623 + t425) - t623 * (-Icges(4,2) * t945 + t424 - t559);
t1032 = t620 * (-t543 * t623 + t470) - t623 * (-Icges(3,2) * t938 + t469 - t580);
t670 = t467 * t623 - t468 * t620;
t671 = t422 * t623 - t423 * t620;
t1061 = -t1031 * t594 - t1032 * t619 + t670 * t622 + (-t1087 * t623 + t1107 * t620 + t671) * t595;
t371 = pkin(5) * t489 - pkin(8) * t947;
t918 = t418 - t565;
t847 = -t480 + t918;
t796 = -t320 + t847;
t845 = t451 + t901;
t42 = (-t371 + t796) * qJD(1) + t845 + t1122;
t1060 = t42 * t623 + t43 * t620;
t882 = qJD(2) * t595;
t1058 = t620 * t882;
t1049 = -qJD(1) * t490 + t352 + t522;
t1047 = t1147 + t1156;
t274 = t491 * rSges(6,1) + rSges(6,2) * t946 + t490 * rSges(6,3);
t1045 = qJD(1) * t274 + t1078;
t778 = rSges(5,1) * t616 - rSges(5,2) * t615;
t403 = -rSges(5,3) * t595 + t594 * t778;
t402 = -rSges(6,2) * t595 + t594 * t775;
t1030 = m(5) / 0.2e1;
t1029 = m(6) / 0.2e1;
t1028 = m(7) / 0.2e1;
t867 = qJD(2) * qJD(6);
t823 = t595 * t867;
t379 = qJD(1) * t504 - t620 * t823;
t1027 = t379 / 0.2e1;
t380 = qJD(1) * t505 - t623 * t823;
t1026 = t380 / 0.2e1;
t1025 = -t504 / 0.2e1;
t1024 = t504 / 0.2e1;
t1023 = -t505 / 0.2e1;
t1022 = t505 / 0.2e1;
t1021 = -t567 / 0.2e1;
t1020 = t567 / 0.2e1;
t1019 = t620 / 0.2e1;
t1018 = -t623 / 0.2e1;
t1017 = -rSges(7,3) - pkin(8);
t1011 = pkin(5) * t353;
t438 = t737 * t595;
t240 = qJD(2) * t438 - qJD(6) * t1057;
t439 = t736 * t595;
t241 = qJD(2) * t439 + qJD(6) * t1056;
t128 = -qJD(6) * t305 + t352 * t621 - t353 * t618;
t129 = qJD(6) * t304 + t352 * t618 + t353 * t621;
t73 = Icges(7,5) * t129 + Icges(7,6) * t128 - Icges(7,3) * t457;
t75 = Icges(7,4) * t129 + Icges(7,2) * t128 - Icges(7,6) * t457;
t77 = Icges(7,1) * t129 + Icges(7,4) * t128 - Icges(7,5) * t457;
t883 = qJD(2) * t594;
t8 = t1056 * t75 + t1057 * t77 - t135 * t883 + t138 * t240 + t141 * t241 + t595 * t73;
t1009 = t8 * t505;
t126 = -qJD(6) * t309 - t350 * t621 - t351 * t618;
t127 = qJD(6) * t308 - t350 * t618 + t351 * t621;
t72 = Icges(7,5) * t127 + Icges(7,6) * t126 + Icges(7,3) * t676;
t74 = Icges(7,4) * t127 + Icges(7,2) * t126 + Icges(7,6) * t676;
t76 = Icges(7,1) * t127 + Icges(7,4) * t126 + Icges(7,5) * t676;
t9 = t1056 * t74 + t1057 * t76 - t137 * t883 + t140 * t240 + t143 * t241 + t595 * t72;
t1008 = t9 * t504;
t1004 = rSges(3,1) * t622;
t1003 = rSges(4,1) * t595;
t1000 = rSges(5,3) * t594;
t134 = rSges(7,1) * t241 + rSges(7,2) * t240 - rSges(7,3) * t883;
t929 = t351 * pkin(5) + pkin(8) * t842;
t233 = -pkin(8) * t835 + t929;
t868 = qJD(2) * qJD(4);
t825 = t595 * t868;
t518 = qJD(1) * (-pkin(1) * t885 + t593);
t869 = qJD(1) * qJD(3);
t854 = qJD(1) * t310 + t620 * t869 + t518;
t865 = qJD(2) ^ 2 * t1015;
t654 = t854 + (t825 - t865) * t620 + (t238 + t550) * qJD(1);
t650 = qJD(1) * t182 + qJD(5) * t352 + t654;
t859 = t127 * rSges(7,1) + t126 * rSges(7,2) + rSges(7,3) * t842;
t78 = -rSges(7,3) * t835 + t859;
t497 = -pkin(8) * t594 + t1010 * t595;
t477 = t497 * qJD(2);
t928 = -t356 - t433;
t849 = -t477 + t928;
t12 = qJD(1) * t233 - t504 * t134 - t380 * t231 + t567 * t78 + (qJD(1) * t684 - t146 * t874 + t620 * t849) * qJD(2) + t650;
t998 = t12 * t623;
t234 = -pkin(8) * t457 + t1011;
t870 = qJD(1) * qJD(2);
t827 = t620 * t870;
t903 = qJD(1) * t574 + t623 * t869;
t795 = t514 * t827 + t623 * t825 + t903;
t719 = -qJD(5) * t350 + t1055 * t827 + t795;
t774 = rSges(7,1) * t129 + rSges(7,2) * t128;
t79 = -rSges(7,3) * t457 + t774;
t930 = -t311 - t1074;
t858 = -t239 + t930;
t802 = -t183 + t858;
t13 = -t623 * t865 - t505 * t134 + t379 * t231 - t567 * t79 + (t144 * t874 + t623 * t849) * qJD(2) + (-t234 + (qJD(2) * t496 - t583) * t620 + t802) * qJD(1) + t719;
t997 = t13 * t620;
t996 = t50 * t379;
t967 = t137 * t595;
t51 = t1056 * t140 + t1057 * t143 + t967;
t995 = t51 * t380;
t606 = t620 * rSges(3,3);
t776 = rSges(6,1) * t489 + rSges(6,3) * t488;
t270 = rSges(6,2) * t947 + t776;
t735 = -t402 + t790;
t689 = t623 * t735;
t64 = qJD(2) * t689 + (-t270 + t796) * qJD(1) + t845;
t992 = t64 * t402;
t991 = -rSges(6,2) - qJ(4);
t990 = -rSges(5,3) - qJ(4);
t515 = rSges(4,1) * t594 + rSges(4,2) * t595;
t813 = -t515 - t1016;
t783 = t623 * t813;
t724 = qJD(2) * t783;
t674 = t596 + t724;
t151 = (-t434 + t918) * qJD(1) + t674;
t964 = t151 * t515;
t963 = t225 * t595;
t896 = rSges(3,2) * t941 + t623 * rSges(3,3);
t484 = rSges(3,1) * t938 - t896;
t830 = t552 * t880;
t282 = -t830 + (-t484 - t565) * qJD(1);
t961 = t282 * t620;
t960 = t282 * t623;
t485 = rSges(3,1) * t937 - rSges(3,2) * t940 + t606;
t283 = qJD(1) * t485 - t1102;
t507 = t552 * t623;
t959 = t283 * t507;
t952 = t496 * t620;
t932 = t144 + t371;
t405 = t595 * t778 + t1000;
t367 = t405 * qJD(2);
t925 = -t367 - t433;
t919 = t413 + t478;
t916 = -t419 - t483;
t913 = -qJD(1) * t481 + t595 * t878;
t840 = t619 * t885;
t575 = pkin(2) * t840;
t910 = t514 * t885 + t575;
t906 = rSges(4,2) * t842 + rSges(4,3) * t884;
t900 = t595 * t877 + t575;
t898 = rSges(3,2) * t840 + rSges(3,3) * t884;
t894 = t623 ^ 2 + t1137;
t866 = pkin(2) * t940;
t275 = t491 * rSges(5,1) - t490 * rSges(5,2) + rSges(5,3) * t946;
t857 = -t275 + t916;
t826 = t623 * t870;
t856 = t310 * t880 + t311 * t881 - t418 * t826;
t853 = -t322 + t916;
t852 = t351 * rSges(5,1) + t350 * rSges(5,2) + rSges(5,3) * t835;
t851 = t351 * rSges(6,1) + rSges(6,2) * t835 - t350 * rSges(6,3);
t850 = -t366 + t928;
t848 = t1055 * t885 + t910;
t844 = t571 + t483;
t839 = t515 * t881;
t833 = t622 * t880;
t829 = -t946 / 0.2e1;
t828 = -pkin(1) - t1004;
t824 = t594 * t867;
t822 = t885 / 0.2e1;
t820 = -t883 / 0.2e1;
t819 = -t881 / 0.2e1;
t817 = -t880 / 0.2e1;
t816 = t880 / 0.2e1;
t517 = -rSges(4,2) * t594 + t1003;
t811 = -t517 - t1015;
t810 = -t590 - t1013;
t803 = t42 * (-qJ(4) - t1017);
t801 = -t274 + t853;
t800 = -t373 + t853;
t798 = t620 * t480 + t623 * t483 + t922;
t793 = t894 * t1016;
t792 = -t403 + t814;
t785 = qJD(6) * t820;
t781 = -rSges(3,2) * t619 + t1004;
t780 = rSges(5,1) * t353 - rSges(5,2) * t352;
t779 = rSges(5,1) * t489 - rSges(5,2) * t488;
t777 = rSges(6,1) * t353 + rSges(6,3) * t352;
t44 = -t135 * t947 + t1059;
t45 = -t137 * t947 - t935;
t772 = -t44 * t623 + t45 * t620;
t771 = t44 * t620 + t45 * t623;
t46 = -t135 * t946 - t934;
t47 = -t137 * t946 + t933;
t770 = -t46 * t623 + t47 * t620;
t769 = t46 * t620 + t47 * t623;
t768 = -t50 * t623 + t51 * t620;
t767 = t50 * t620 + t51 * t623;
t765 = t843 - t902;
t754 = -t144 * t623 + t146 * t620;
t747 = -t283 * t620 - t960;
t731 = -t320 + t899;
t728 = -t367 + t784;
t131 = Icges(7,5) * t241 + Icges(7,6) * t240 - Icges(7,3) * t883;
t132 = Icges(7,4) * t241 + Icges(7,2) * t240 - Icges(7,6) * t883;
t133 = Icges(7,1) * t241 + Icges(7,4) * t240 - Icges(7,5) * t883;
t19 = t1056 * t132 + t1057 * t133 + t131 * t595 - t225 * t883 + t227 * t240 + t229 * t241;
t82 = t1056 * t227 + t1057 * t229 + t963;
t727 = t19 * t567 - t82 * t824;
t99 = qJD(1) * t275 - t403 * t881 + t681;
t726 = t99 * t792;
t725 = t623 * t792;
t721 = t620 * t320 + t623 * t322 + t798;
t495 = t517 * qJD(2);
t718 = -qJD(2) * t495 - t865;
t711 = -t231 + t733;
t506 = t552 * t620;
t479 = t515 * t620;
t703 = t322 + t844;
t65 = -t402 * t881 + t1045;
t700 = t65 * t735;
t697 = -t539 * t623 + t900;
t696 = t480 * t881 + t483 * t880 - t879 + t923;
t278 = (t484 * t620 + t485 * t623) * qJD(2);
t683 = t238 * t880 + t239 * t881 + t480 * t826 + t594 * t868 + t856;
t679 = -t516 - t1002;
t678 = -t516 - t1000;
t675 = -t134 - t477 + t729;
t673 = (Icges(7,5) * t304 - Icges(7,6) * t305) * t505 - (Icges(7,5) * t308 - Icges(7,6) * t309) * t504 - (Icges(7,5) * t1056 - Icges(7,6) * t1057) * t567;
t672 = -qJD(1) * t414 - t539 * t620 + t913;
t271 = rSges(5,3) * t947 + t779;
t667 = t594 * t673;
t666 = -t183 + t765;
t663 = t320 * t881 + t322 * t880 + t539 + t696;
t653 = qJD(2) * t540 + t182 * t880 + t183 * t881 + t320 * t826 + t683;
t651 = -pkin(3) * t836 + t730 + t907;
t649 = (Icges(7,1) * t308 - t140 - t983) * t504 - (Icges(7,1) * t304 - t138 - t984) * t505 + (Icges(7,1) * t1056 - t227 - t982) * t567;
t648 = (-Icges(7,2) * t309 + t143 + t291) * t504 - (-Icges(7,2) * t305 + t141 + t290) * t505 + (-Icges(7,2) * t1057 + t229 + t415) * t567;
t35 = t144 * t504 + t146 * t505 + (t371 * t620 + t373 * t623) * qJD(2) + t663;
t638 = t35 * t754 + (-t42 * t620 + t43 * t623) * t231;
t381 = t620 * t1056;
t382 = t620 * t1057;
t192 = -Icges(7,5) * t382 - Icges(7,6) * t381 - Icges(7,3) * t945;
t383 = t623 * t1056;
t384 = t623 * t1057;
t193 = -Icges(7,5) * t384 - Icges(7,6) * t383 - Icges(7,3) * t944;
t226 = Icges(7,5) * t439 + Icges(7,6) * t438 - Icges(7,3) * t594;
t628 = (-t193 * t594 - t967) * t504 + (-t226 * t594 - t963) * t567 - (-t192 * t594 - t968) * t505;
t523 = t781 * qJD(2);
t482 = t515 * t623;
t456 = t894 * t883;
t445 = t496 * t623;
t349 = t403 * t623;
t348 = t402 * t623;
t346 = t402 * t620;
t324 = -qJD(2) * t506 + (t623 * t781 + t606) * qJD(1);
t323 = -rSges(3,2) * t833 + (-t622 * t885 - t834) * rSges(3,1) + t898;
t285 = (t488 * t620 + t490 * t623) * qJD(2);
t277 = -qJD(2) * t479 + (t517 * t623 + t605) * qJD(1);
t276 = rSges(4,1) * t677 - rSges(4,2) * t835 + t906;
t263 = rSges(7,1) * t1056 - rSges(7,2) * t1057;
t232 = rSges(7,1) * t439 + rSges(7,2) * t438 - rSges(7,3) * t594;
t230 = Icges(7,1) * t439 + Icges(7,4) * t438 - Icges(7,5) * t594;
t228 = Icges(7,4) * t439 + Icges(7,2) * t438 - Icges(7,6) * t594;
t199 = -rSges(7,1) * t384 - rSges(7,2) * t383 - rSges(7,3) * t944;
t198 = -rSges(7,1) * t382 - rSges(7,2) * t381 - rSges(7,3) * t945;
t197 = -Icges(7,1) * t384 - Icges(7,4) * t383 - Icges(7,5) * t944;
t196 = -Icges(7,1) * t382 - Icges(7,4) * t381 - Icges(7,5) * t945;
t195 = -Icges(7,4) * t384 - Icges(7,2) * t383 - Icges(7,6) * t944;
t194 = -Icges(7,4) * t382 - Icges(7,2) * t381 - Icges(7,6) * t945;
t187 = -t523 * t880 + (-t324 + t1102) * qJD(1);
t186 = -t523 * t881 + t518 + (t323 - t830) * qJD(1);
t185 = rSges(7,1) * t308 - rSges(7,2) * t309;
t184 = rSges(7,1) * t304 - rSges(7,2) * t305;
t175 = rSges(5,3) * t457 + t780;
t174 = rSges(6,2) * t457 + t777;
t173 = -rSges(5,3) * t842 + t852;
t172 = -rSges(6,2) * t842 + t851;
t152 = qJD(1) * t435 + t797 - t839;
t101 = t718 * t623 + (-t277 + t839 + t930) * qJD(1) + t903;
t100 = t718 * t620 + (t276 + t724) * qJD(1) + t854;
t98 = qJD(2) * t725 + (-t271 + t847) * qJD(1) + t901;
t83 = (t271 * t620 + t275 * t623) * qJD(2) + t696;
t71 = -t225 * t946 + t227 * t308 + t229 * t309;
t61 = t71 * t567;
t60 = (t270 * t620 + t274 * t623) * qJD(2) + t663;
t49 = (qJD(2) * t925 - t865) * t623 + (-t175 + (qJD(2) * t403 - t583) * t620 + t858) * qJD(1) + t795;
t48 = qJD(1) * t173 + (qJD(1) * t725 + t620 * t925) * qJD(2) + t654;
t30 = (qJD(2) * t850 - t865) * t623 + (-t174 + (qJD(2) * t402 - t583) * t620 + t802) * qJD(1) + t719;
t29 = qJD(1) * t172 + (qJD(1) * t689 + t620 * t850) * qJD(2) + t650;
t20 = (t173 * t623 + t175 * t620 + (t271 * t623 + t620 * t857) * qJD(1)) * qJD(2) + t683;
t17 = t128 * t227 + t129 * t229 - t131 * t947 + t132 * t304 + t133 * t305 - t225 * t457;
t16 = t126 * t227 + t127 * t229 - t131 * t946 + t132 * t308 + t133 * t309 + t225 * t676;
t15 = (t172 * t623 + t174 * t620 + (t270 * t623 + t620 * t801) * qJD(1)) * qJD(2) + t653;
t14 = -t50 * t505 + t504 * t51 + t567 * t82;
t11 = -t46 * t505 + t47 * t504 + t61;
t10 = -t44 * t505 + t45 * t504 + t1090;
t7 = t128 * t140 + t129 * t143 - t137 * t457 + t304 * t74 + t305 * t76 - t72 * t947;
t6 = t128 * t138 + t129 * t141 - t135 * t457 + t304 * t75 + t305 * t77 - t73 * t947;
t5 = t126 * t140 + t127 * t143 + t137 * t676 + t308 * t74 + t309 * t76 - t72 * t946;
t4 = t126 * t138 + t127 * t141 + t135 * t676 + t308 * t75 + t309 * t77 - t73 * t946;
t3 = t653 + t144 * t380 - t146 * t379 + t504 * t79 + t505 * t78 + (t233 * t623 + t234 * t620 + (t371 * t623 + t620 * t800) * qJD(1)) * qJD(2);
t2 = t17 * t567 + t379 * t44 + t380 * t45 + t504 * t7 - t505 * t6 - t70 * t824;
t1 = t16 * t567 + t379 * t46 + t380 * t47 - t4 * t505 + t5 * t504 - t71 * t824;
t18 = [(-t1066 + t1069 + t1071) * t817 + (t17 + t11) * t1023 + (t520 * t622 + t521 * t619 + (t493 - t1135) * t595 + (t1134 * t616 + t1136 * t615 + t494) * t594 + (t1081 * t594 + t1160 * t595 - t1161) * qJD(2)) * qJD(1) + (-t1090 + (t47 - t1153) * t505 + (t46 + t1154) * t504 + t10) * t1025 + (-(-qJD(1) * t484 - t282 - t527 - t830) * t283 + t187 * (t620 * t828 + t610 + t896) + t186 * (t485 + t895) + t283 * (t593 + t898) + (t552 * t961 - t959) * qJD(2) + ((-pkin(1) - t781) * t960 + (t282 * (-rSges(3,3) - pkin(7)) + t283 * t828) * t620) * qJD(1)) * m(3) + (t61 + (t45 + t1154) * t505 + (t44 + t1153) * t504) * t1022 + (t1065 + t1070) * t881 / 0.2e1 + t727 + t996 / 0.2e1 + (t13 * (t731 - t932) + t12 * (t463 + t703 + t931) + (-t13 * t516 - t12 * t617 + t803 * t882 + (-t516 - t590) * t1089) * t620 + (qJD(1) * t803 + t1017 * t12) * t946 + (-t952 * qJD(2) + t810 * t884 - t1011 - t1046 + t666 - t774) * t42 + (t532 + t859 + t901 + t929 + ((t1017 * t595 - t1014 - t1016) * qJD(2) - t617 * qJD(1)) * t623 + qJD(1) * t371 + t1110 - t1122) * t43) * m(7) + t995 / 0.2e1 - t1009 / 0.2e1 + (t101 * (-t434 + t899) + t151 * t843 + t100 * (t435 + t804) + t152 * (t596 + t906) + (t152 * t783 + t620 * t964) * qJD(2) + ((-t151 * rSges(4,3) + t152 * (-t590 - t1003)) * t620 + (t151 * (-t517 - t590) - t152 * t617) * t623) * qJD(1) - (-qJD(1) * t434 + t1048 - t151 + t674) * t152) * m(4) + (t30 * (t731 - t776) + t29 * (t703 + t274) + (-t29 * t617 + t30 * t679) * t620 - (t620 * t992 + t700 * t623) * qJD(2) + (t666 - t777 + t991 * t1058 + (-t590 + t679) * t884 + t1045) * t64 + (t651 + t851 + ((t594 * t991 + t810) * t620 - t589 + t270) * qJD(1) + t1110) * t65) * m(6) + (t49 * (-t779 + t899) + t48 * (t844 + t275) + (-t48 * t617 + t49 * t678) * t620 - t726 * t880 + (t765 - t780 + t990 * t1058 + (-t590 + t678) * t884) * t98 + (t651 + t852 - t766 + t98 + ((t594 * t990 + t810) * t620 - t589 + t271) * qJD(1)) * t99) * m(5) + t1008 / 0.2e1 + t16 * t1024 + t71 * t1026 + t70 * t1027 + ((((t1163 + t1175) * t623 + t1112 + t1157 + t1172) * t623 + (-t1044 + t1119) * t620 + t1143) * qJD(2) + t1095) * t816 + (((t1047 * t623 + t1044 + t1111 + t1159) * t623 + (t1047 * t620 + t1097 - t1120 - t1158 + t1182) * t620) * qJD(2) + t1072 + t1092) * t819 + ((t1063 + t1138) * t623 + (t1099 - t1139) * t620) * t870 / 0.2e1; t768 * t785 + t14 * t874 / 0.2e1 + (qJD(1) * t767 + t620 * t9 - t623 * t8) * t1020 + ((t1056 * t195 + t1057 * t197 - t137 * t594 + t140 * t438 + t143 * t439 + t193 * t595) * t504 - (t1056 * t194 + t1057 * t196 - t135 * t594 + t138 * t438 + t141 * t439 + t192 * t595) * t505 + (t1056 * t228 + t1057 * t230 - t225 * t594 + t226 * t595 + t227 * t438 + t229 * t439) * t567 + (-t82 * t594 - t595 * t767) * qJD(6)) * t1021 + ((-t140 * t381 - t143 * t382 + t195 * t304 + t197 * t305) * t504 - (-t138 * t381 - t141 * t382 + t194 * t304 + t196 * t305) * t505 + (-t227 * t381 + t228 * t304 - t229 * t382 + t230 * t305) * t567 + (-t45 * t944 - t594 * t70) * qJD(6) + (-t44 * t873 + t628) * t620) * t1022 + (qJD(1) * t771 - t6 * t623 + t620 * t7) * t1023 + (qJD(1) * t769 - t4 * t623 + t5 * t620) * t1024 + ((-t140 * t383 - t143 * t384 + t195 * t308 + t197 * t309) * t504 - (-t138 * t383 - t141 * t384 + t194 * t308 + t196 * t309) * t505 + (-t227 * t383 + t228 * t308 - t229 * t384 + t230 * t309) * t567 + (-t46 * t945 - t594 * t71) * qJD(6) + (-t47 * t873 + t628) * t623) * t1025 + t770 * t1026 + t772 * t1027 + (t10 * t620 + t11 * t623) * t873 / 0.2e1 + (t42 * t848 + t3 * t721 + (t42 * t675 + t3 * (t146 + t373) + (t13 + t1089) * t711) * t623 + (t12 * t711 + t43 * t675 + t3 * t932 + t42 * (t231 + t496) * qJD(1)) * t620 - t42 * (-t198 * t567 - t232 * t505 + t697) - t43 * (t199 * t567 - t232 * t504 + t672) - ((t144 * t42 - t146 * t43) * t594 + t638 * t595) * qJD(6) - (t42 * (t952 + t919) + t43 * (-t445 - t866)) * qJD(1) - t1060 * qJD(2) * (-t497 + t789) + ((qJD(1) * t932 + t233 + t78) * t623 + (t234 + t79 + (-t146 + t800) * qJD(1)) * t620 - t198 * t504 - t199 * t505 - (-t445 * t623 - t620 * t952 - t793) * qJD(2) + t1079) * t35) * m(7) + (t15 * t721 + (qJD(1) * t700 + t15 * t274 + t30 * t735) * t623 + (qJD(1) * t992 + t15 * t270 + t29 * t735) * t620 + (-t672 - (-t348 - t866) * qJD(1) + t1064 * t620) * t65 + (t848 - t697 - (t346 + t919) * qJD(1) + t1064 * t623) * t64 + ((qJD(1) * t270 + t172) * t623 + (qJD(1) * t801 + t174) * t620 - (-t346 * t620 - t348 * t623 - t793) * qJD(2) + t1079) * t60) * m(6) + (t20 * t798 + (qJD(1) * t726 + t20 * t275 + t49 * t792) * t623 + (t20 * t271 + t48 * t792) * t620 + (t728 * t620 - t913 - (-t349 - t866) * qJD(1)) * t99 + (-t478 * qJD(1) + t728 * t623 - t900 + t910) * t98 - (t620 * t99 + t623 * t98) * qJD(2) * (-t405 + t812) + ((qJD(1) * t271 + t173) * t623 + (qJD(1) * t857 + t175) * t620 - (-t1137 * t403 - t349 * t623 - t793) * qJD(2) + t1103) * t83) * m(5) + (-(t151 * t479 + t152 * (-t482 - t866)) * qJD(1) - (-t130 * t793 + (-t130 * t482 + t151 * t811) * t623 + (-t130 * t479 + t152 * t811) * t620) * qJD(2) + t101 * t783 - t151 * pkin(2) * t833 + (t276 * t880 + t277 * t881 + t856) * t680 + t130 * t855 + (-t151 * t495 + t130 * t276 + (t1073 * t434 + t152 * t813) * qJD(1)) * t623 + (t100 * t813 + t152 * (-t495 - t864) + t130 * t277 + (t964 + t1073 * (-t419 - t435)) * qJD(1)) * t620) * m(4) + (-(t282 * t506 - t959) * qJD(1) - (t278 * (-t506 * t620 - t507 * t623) + t747 * t781) * qJD(2) + 0.2e1 * t278 * (t323 * t623 + t324 * t620 + (t484 * t623 - t485 * t620) * qJD(1)) + t747 * t523 + (-t186 * t620 - t187 * t623 + (-t283 * t623 + t961) * qJD(1)) * t552) * m(3) + ((-t1083 * t491 - t1085 * t490) * t881 + (-t1076 * t881 + t1077) * t620 + (t1080 * t491 + t1082 * t490) * qJD(1) + ((t1075 * t620 + t1084 * t491 + t1086 * t490 + t1061) * qJD(2) + t1062) * t623) * t819 + ((t1084 * t489 + t1086 * t488) * t880 + (-t1075 * t880 - t1077) * t623 + (t1080 * t489 + t1082 * t488) * qJD(1) + ((t1076 * t623 - t1083 * t489 - t1085 * t488 + t1061) * qJD(2) + t1062) * t620) * t816 - (t1124 * t595 + (t1032 * t622 + t670 * t619 + (t1031 - t1126) * t595 + (t671 + (t1084 * t616 + t1086 * t615 - t1087) * t623 + (-t1083 * t616 - t1085 * t615 + t1107) * t620) * t594) * qJD(2) + (t595 * t908 + t619 * t905 + t622 * t904 + (t1080 * t616 + t1082 * t615 + t1141) * t594) * qJD(1)) * qJD(1) / 0.2e1 + (t1066 * t623 + t1065 * t620 + (t1063 * t623 + t1099 * t620) * qJD(1)) * qJD(1) / 0.2e1 + (t1070 * qJD(1) + t1 + ((t1152 * qJD(1) + t1087 * t676 + t1104 * t623 + t1109 * t350 + t1113 * t491 + t1115 * t946 + t1117 * t490 - t1176 * t351) * t623 + (t1100 * t620 + t1116 * t946 - t1107 * t676 + t1114 * t491 + t1118 * t490 + t1106 * t351 - t1108 * t350 + (-t1101 + t1105) * t623 + t1097 * qJD(1)) * t620) * t1091) * t1019 + (t1069 * qJD(1) + t2 + ((t1151 * qJD(1) - t1087 * t457 + t1101 * t623 - t1109 * t352 + t1113 * t489 + t1115 * t947 + t1117 * t488 - t1176 * t353) * t623 + (t1105 * t620 + t1116 * t947 + t1114 * t489 + t1118 * t488 + t1107 * t457 + t1106 * t353 + t1108 * t352 + (-t1100 + t1104) * t623 + t1098 * qJD(1)) * t620) * t1091) * t1018 + (t10 + t1072 + t1093) * t822 + (t11 + t1071 + t1094) * t884 / 0.2e1; 0.2e1 * (-t998 / 0.2e1 + t997 / 0.2e1) * m(7) + 0.2e1 * (t1018 * t29 + t1019 * t30) * m(6) + 0.2e1 * (t1018 * t48 + t1019 * t49) * m(5) + 0.2e1 * (t100 * t1018 + t101 * t1019) * m(4); -m(5) * (t456 * t83 + t457 * t99 - t676 * t98) - m(6) * (t456 * t60 + t457 * t65 - t64 * t676) - m(7) * (t35 * t456 - t42 * t676 + t43 * t457) + 0.2e1 * ((t880 * t98 + t881 * t99 - t20) * t1030 + (t64 * t880 + t65 * t881 - t15) * t1029 + (t42 * t880 + t43 * t881 - t3) * t1028) * t595 + 0.2e1 * ((qJD(2) * t83 + t48 * t620 + t49 * t623 + t884 * t99 - t885 * t98) * t1030 + (qJD(2) * t60 + t29 * t620 + t30 * t623 - t64 * t885 + t65 * t884) * t1029 + (qJD(2) * t35 + t12 * t620 + t13 * t623 - t42 * t885 + t43 * t884) * t1028) * t594; (t12 * t488 + t13 * t490 + (t3 * t594 + t35 * t882) * t615 - t285 * t35 + t1049 * t43) * m(7) + (t29 * t488 + t30 * t490 + (t15 * t594 + t60 * t882) * t615 - t285 * t60 + t1049 * t65) * m(6); t1 * t829 + (-t594 * t769 + t595 * t71) * t1026 + ((-qJD(2) * t769 + t16) * t595 + (qJD(1) * t770 - qJD(2) * t71 - t4 * t620 - t5 * t623) * t594) * t1024 - t2 * t947 / 0.2e1 + (-t594 * t771 + t595 * t70) * t1027 + ((-qJD(2) * t771 + t17) * t595 + (qJD(1) * t772 - qJD(2) * t70 - t6 * t620 - t623 * t7) * t594) * t1023 + t14 * t820 + t595 * (t1008 + t727 + t995 + t996 - t1009) / 0.2e1 + (-t594 * t767 + t595 * t82) * t785 + ((-qJD(2) * t767 + t19) * t595 + (qJD(1) * t768 - qJD(2) * t82 - t620 * t8 - t623 * t9) * t594) * t1020 + (t308 * t648 + t309 * t649 + t623 * t667) * t1025 + (t304 * t648 + t305 * t649 + t620 * t667) * t1022 + (t1056 * t648 + t1057 * t649 - t595 * t673) * t1021 + (t594 * t822 + t595 * t817) * t11 + (qJD(1) * t829 + t595 * t819) * t10 + ((qJD(2) * t638 + t12 * t146 - t13 * t144 - t42 * t79 + t43 * t78) * t595 + (t42 * (qJD(2) * t144 - t134 * t620) + t43 * (-qJD(2) * t146 + t134 * t623) + t3 * t754 + t35 * (t144 * t885 + t146 * t884 + t620 * t78 - t623 * t79) + (-qJD(1) * t1060 - t997 + t998) * t231) * t594 - t42 * (-t184 * t567 - t263 * t505) - t43 * (t185 * t567 - t263 * t504) - t35 * (t184 * t504 + t185 * t505)) * m(7);];
tauc  = t18(:);
