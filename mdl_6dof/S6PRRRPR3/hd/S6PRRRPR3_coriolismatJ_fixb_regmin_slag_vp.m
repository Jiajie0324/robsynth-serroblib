% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:14:04
% EndTime: 2019-03-08 23:14:21
% DurationCPUTime: 7.90s
% Computational Cost: add. (5272->463), mult. (12324->637), div. (0->0), fcn. (13655->10), ass. (0->369)
t367 = cos(qJ(3));
t566 = cos(qJ(4));
t347 = t566 * t367;
t363 = sin(qJ(4));
t364 = sin(qJ(3));
t530 = t363 * t364;
t318 = -t347 + t530;
t309 = t318 ^ 2;
t362 = sin(qJ(6));
t359 = t362 ^ 2;
t366 = cos(qJ(6));
t360 = t366 ^ 2;
t338 = t359 - t360;
t215 = t338 * t309;
t357 = qJD(3) + qJD(4);
t601 = t357 * t366;
t614 = t362 * t601;
t390 = 0.2e1 * t614 * t318;
t621 = -t215 * qJD(2) - t390;
t361 = sin(pkin(6));
t365 = sin(qJ(2));
t536 = t361 * t365;
t561 = cos(pkin(6));
t298 = t364 * t536 - t367 * t561;
t299 = t364 * t561 + t367 * t536;
t443 = t566 * t298 + t363 * t299;
t579 = t443 / 0.2e1;
t368 = cos(qJ(2));
t535 = t361 * t368;
t453 = -t535 / 0.2e1;
t433 = t318 * t453;
t322 = t530 * t535;
t439 = t566 * t535;
t419 = t367 * t439;
t516 = -t322 / 0.2e1 + t419 / 0.2e1;
t147 = t433 + t516;
t608 = t357 * t443;
t620 = t147 * qJD(2) - t608;
t452 = t535 / 0.2e1;
t432 = t318 * t452;
t413 = -t439 / 0.2e1;
t517 = t322 / 0.2e1 + t367 * t413;
t148 = t432 + t517;
t619 = t148 * qJD(2) + t608;
t208 = (t360 / 0.2e1 - t359 / 0.2e1) * t318;
t116 = -t208 * qJD(2) + t614;
t349 = -t367 * pkin(3) - pkin(2);
t469 = t566 * t364;
t529 = t363 * t367;
t320 = t469 + t529;
t540 = t320 * qJ(5);
t405 = t349 - t540;
t584 = pkin(4) + pkin(10);
t616 = t318 * t584;
t117 = t405 + t616;
t583 = -pkin(9) - pkin(8);
t330 = t583 * t364;
t331 = t583 * t367;
t243 = t330 * t566 + t363 * t331;
t383 = t320 * pkin(5) - t243;
t615 = t362 * t383;
t54 = t366 * t117 + t615;
t618 = (t54 - t615) * t318;
t613 = t366 * t383;
t53 = t362 * t117 - t613;
t393 = t363 * t330 - t331 * t566;
t382 = -t318 * pkin(5) + t393;
t600 = t366 * t382;
t617 = (t53 + t613) * t318 - t320 * t600;
t578 = -t443 / 0.2e1;
t581 = t600 / 0.2e1;
t515 = t364 * t413 + t453 * t529;
t149 = t320 * t453 + t515;
t394 = -t363 * t298 + t299 * t566;
t586 = t357 * t394;
t612 = t149 * qJD(2) - t586;
t389 = t529 / 0.2e1 + t469 / 0.2e1;
t431 = t320 * t452;
t150 = t389 * t535 + t431;
t43 = t150 * qJD(2) + t586;
t564 = t363 * pkin(3);
t350 = qJD(3) * t564;
t562 = pkin(3) * qJD(4);
t352 = t363 * t562;
t611 = t352 + t350;
t478 = t566 * pkin(3);
t348 = -t478 - pkin(4);
t342 = -pkin(10) + t348;
t475 = -t564 / 0.2e1;
t344 = qJ(5) + t564;
t573 = t344 / 0.2e1;
t430 = t475 + t573;
t582 = -qJ(5) / 0.2e1;
t387 = (t582 + t430) * t320;
t567 = t584 / 0.2e1;
t610 = t387 + t318 * (t342 / 0.2e1 + t478 / 0.2e1 + t567);
t580 = t394 / 0.2e1;
t445 = t580 - t394 / 0.2e1;
t429 = t445 * t320;
t609 = t318 * t579 + t429;
t607 = t357 * t243;
t605 = 0.2e1 * t394;
t603 = t320 * t357;
t602 = t357 * t362;
t599 = t357 * t393;
t539 = t344 * t320;
t569 = t363 / 0.2e1;
t576 = -t318 / 0.2e1;
t374 = (t320 * t569 + t566 * t576) * pkin(3) - t539 / 0.2e1;
t598 = t374 - t540 / 0.2e1;
t146 = t433 + t517;
t491 = t146 * qJD(1);
t509 = qJD(2) * t349;
t597 = t318 * t509 + t491;
t356 = t364 * pkin(3);
t201 = -t318 * t349 + t320 * t356;
t596 = -qJD(2) * t201 + t491;
t145 = t432 + t516;
t492 = t145 * qJD(1);
t543 = t318 * qJ(5);
t223 = pkin(4) * t320 + t543;
t565 = t318 * pkin(4);
t205 = t405 + t565;
t547 = t205 * t318;
t58 = -t223 * t320 + t547;
t595 = -qJD(2) * t58 + t492;
t212 = t223 + t356;
t56 = -t212 * t320 + t547;
t594 = -qJD(2) * t56 + t492;
t144 = t431 + t515;
t493 = t144 * qJD(1);
t593 = -t320 * t509 + t493;
t200 = t318 * t356 + t320 * t349;
t592 = -qJD(2) * t200 + t493;
t575 = -t320 / 0.2e1;
t143 = (t575 + t389) * t535;
t494 = t143 * qJD(1);
t546 = t205 * t320;
t55 = -t212 * t318 - t546;
t591 = -qJD(2) * t55 + t494;
t585 = t320 ^ 2;
t480 = t585 - t309;
t589 = t393 * qJD(5);
t588 = t394 * qJD(5);
t506 = qJD(2) * t366;
t465 = t362 * t506;
t587 = t208 * t357 + t309 * t465;
t192 = -0.2e1 * t318 * t465 + t338 * t357;
t577 = t393 / 0.2e1;
t574 = -t344 / 0.2e1;
t572 = -t348 / 0.2e1;
t571 = t348 / 0.2e1;
t570 = -t362 / 0.2e1;
t568 = t366 / 0.2e1;
t444 = t578 + t579;
t20 = t318 * t444 + t429;
t563 = t20 * qJD(3);
t57 = -t223 * t318 - t546;
t558 = qJD(2) * t57;
t525 = t366 * t443;
t113 = t362 * t535 + t525;
t556 = t113 * t320;
t532 = t362 * t443;
t114 = t366 * t535 - t532;
t555 = t114 * t320;
t550 = t382 * t362;
t548 = t20 * qJD(2);
t250 = t419 - t322;
t545 = t250 * t362;
t544 = t250 * t366;
t542 = t318 * t342;
t541 = t318 * t362;
t538 = t348 * t318;
t537 = t359 * t318;
t303 = t320 * pkin(10);
t120 = t212 + t303;
t534 = t362 * t120;
t171 = t223 + t303;
t533 = t362 * t171;
t249 = t320 * t535;
t531 = t362 * t249;
t206 = t362 * t320;
t528 = t366 * t120;
t527 = t366 * t171;
t524 = t366 * t249;
t209 = t366 * t318;
t46 = t361 ^ 2 * t365 * t368 - t249 * t443 - t250 * t394;
t522 = t46 * qJD(1);
t51 = -t387 + (-t478 / 0.2e1 + t572 - pkin(4) / 0.2e1) * t318;
t521 = t51 * qJD(2);
t353 = qJD(4) * t478;
t354 = qJD(5) * t362;
t514 = t362 * t353 + t354;
t355 = qJD(5) * t366;
t513 = t366 * t353 + t355;
t510 = qJD(2) * t320;
t508 = qJD(2) * t362;
t507 = qJD(2) * t365;
t505 = qJD(2) * t367;
t504 = qJD(3) * t362;
t503 = qJD(3) * t366;
t502 = qJD(4) * t349;
t501 = qJD(4) * t362;
t500 = qJD(4) * t366;
t499 = qJD(6) * t362;
t498 = qJD(6) * t366;
t497 = qJD(6) * t584;
t141 = t480 * t362;
t496 = t141 * qJD(2);
t142 = t480 * t366;
t495 = t142 * qJD(2);
t490 = t480 * qJD(2);
t489 = t206 * qJD(2);
t304 = t530 / 0.2e1 - t347 / 0.2e1;
t486 = t304 * qJD(2);
t485 = t585 * qJD(2);
t302 = t318 * qJD(5);
t339 = -t364 ^ 2 + t367 ^ 2;
t484 = t339 * qJD(2);
t483 = t364 * qJD(3);
t482 = t367 * qJD(3);
t481 = t353 + qJD(5);
t479 = t566 / 0.2e1;
t477 = pkin(2) * t364 * qJD(2);
t476 = pkin(2) * t505;
t470 = -t494 + t599;
t468 = t205 * t510;
t464 = t320 * t499;
t463 = t320 * t498;
t236 = t318 * t510;
t462 = t361 * t507;
t461 = qJD(2) * t535;
t460 = t585 * t508;
t459 = t364 * t505;
t458 = t362 * t498;
t294 = t320 * t506;
t457 = -t544 / 0.2e1;
t456 = t541 / 0.2e1;
t454 = -t536 / 0.2e1;
t451 = -t532 / 0.2e1;
t450 = -t531 / 0.2e1;
t449 = -t525 / 0.2e1;
t448 = t524 / 0.2e1;
t447 = t209 / 0.2e1;
t162 = qJD(6) * t304 + t236;
t440 = qJD(6) + t510;
t351 = qJD(3) * t478;
t438 = t318 * t462;
t437 = t320 * t462;
t434 = t223 * t453;
t427 = t318 * t602;
t373 = t114 * t576 - t362 * t609;
t12 = t457 + t373;
t6 = -t528 * t320 + t618;
t425 = t12 * qJD(1) + t6 * qJD(2);
t72 = t113 * t576;
t375 = t366 * t609 + t72;
t14 = -t545 / 0.2e1 + t375;
t5 = (t600 - t534) * t320 + t617;
t424 = t14 * qJD(1) + t5 * qJD(2);
t399 = (-t114 / 0.2e1 + t451) * t318;
t16 = t457 + t399;
t8 = -t320 * t527 + t618;
t423 = t16 * qJD(1) + t8 * qJD(2);
t370 = t212 * t453 + t393 * t578 + t443 * t577;
t398 = t249 * t572 + t250 * t574;
t2 = t370 + t398;
t31 = t205 * t212;
t422 = t2 * qJD(1) + t31 * qJD(2);
t402 = t249 * pkin(4) / 0.2e1 + t250 * t582;
t3 = t434 + t402;
t32 = t205 * t223;
t421 = t3 * qJD(1) + t32 * qJD(2);
t232 = t545 / 0.2e1;
t44 = t232 + (t113 / 0.2e1 + t449) * t318;
t7 = (t600 - t533) * t320 + t617;
t420 = -t44 * qJD(1) + t7 * qJD(2);
t418 = t540 - t616;
t417 = t20 * qJD(1);
t33 = t209 * t382 + t320 * t53;
t396 = t394 * t576 + t454;
t36 = t450 + t556 / 0.2e1 + t396 * t366;
t416 = -qJD(1) * t36 + qJD(2) * t33;
t34 = -t320 * t54 + t382 * t541;
t35 = t448 - t555 / 0.2e1 + t396 * t362;
t415 = qJD(1) * t35 - qJD(2) * t34;
t414 = t539 + t542;
t404 = pkin(4) * t580 + qJ(5) * t579;
t403 = pkin(4) * t577 + t243 * t582;
t400 = t582 - t430;
t397 = t318 * t573 + t342 * t575;
t395 = t320 * t567 + t543 / 0.2e1;
t392 = t440 * t541;
t261 = -t344 * t478 - t348 * t564;
t371 = (-t243 * t569 + t393 * t479) * pkin(3) - t243 * t574 + t393 * t571;
t29 = t371 + t403;
t372 = (t394 * t479 + t443 * t569) * pkin(3) + t443 * t574 + t394 * t571;
t9 = t372 + t404;
t386 = t9 * qJD(1) + t29 * qJD(2) - t261 * qJD(3);
t385 = t120 / 0.2e1 + t397;
t384 = t171 / 0.2e1 + t395;
t25 = t581 - t600 / 0.2e1 + t385 * t362;
t61 = t445 * t366;
t381 = qJD(1) * t61 - qJD(2) * t25 - t344 * t503;
t27 = t385 * t366;
t60 = t445 * t362;
t380 = -qJD(1) * t60 - qJD(2) * t27 + t344 * t504;
t251 = t400 * t362;
t69 = t384 * t366;
t379 = qJ(5) * t501 - t69 * qJD(2) - t251 * qJD(3);
t252 = t400 * t366;
t68 = t384 * t362;
t378 = -qJ(5) * t500 - t68 * qJD(2) + t252 * qJD(3);
t22 = t610 * t362;
t65 = t444 * t366;
t377 = -t65 * qJD(1) - t22 * qJD(2) - t351 * t366;
t24 = t610 * t366;
t63 = t444 * t362;
t376 = -t63 * qJD(1) + t24 * qJD(2) - t351 * t362;
t358 = qJ(5) * qJD(5);
t337 = t357 * qJ(5);
t336 = t344 * qJD(5);
t329 = t338 * qJD(6);
t295 = t362 * t302;
t293 = t320 * t508;
t260 = -t294 - t498;
t259 = -t293 - t499;
t254 = 0.2e1 * t344 * t568;
t253 = t362 * t475 + (qJ(5) + t344) * t570;
t233 = t544 / 0.2e1;
t221 = t357 * t318;
t214 = t357 * t304;
t203 = t209 * qJD(5);
t202 = t208 * qJD(6);
t129 = t146 * qJD(2);
t127 = t145 * qJD(2);
t125 = t144 * qJD(2);
t123 = t143 * qJD(2);
t104 = t318 * t603;
t102 = -0.2e1 * t366 * t392;
t86 = -t463 - t495;
t85 = -t464 - t496;
t84 = -t236 * t359 + t202;
t71 = t427 + t495;
t70 = -t318 * t601 + t496;
t67 = t568 * t605;
t66 = t570 * t605;
t64 = -t443 * t568 + t449;
t62 = t362 * t578 + t451;
t52 = -t538 / 0.2e1 + t565 / 0.2e1 + t598;
t50 = t202 + (qJD(2) * t537 + t614) * t320;
t49 = 0.2e1 * (-qJD(6) + t510) * t362 * t209 - t338 * t603;
t48 = -t550 - t527 / 0.2e1 + t395 * t366;
t47 = t600 - t533 / 0.2e1 + t395 * t362;
t45 = t443 * t447 + t232 + t72;
t38 = t555 / 0.2e1 + t394 * t456 + t362 * t454 + t448;
t37 = -t556 / 0.2e1 + t394 * t447 + t366 * t454 + t450;
t30 = t371 - t403;
t28 = -t550 / 0.2e1 - t528 / 0.2e1 + t382 * t570 + t397 * t366;
t26 = 0.2e1 * t581 - t534 / 0.2e1 + t397 * t362;
t23 = -t615 + t209 * t567 + (-t542 / 0.2e1 + t598) * t366;
t21 = -t613 - t584 * t456 + qJ(5) * t206 / 0.2e1 + (t542 / 0.2e1 - t374) * t362;
t15 = t233 + t399;
t13 = t232 + t375;
t11 = t233 + t373;
t10 = t372 - t404;
t4 = t434 - t402;
t1 = t370 - t398;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t46, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t462, -t461, 0, 0, 0, 0, 0 (-t365 * t505 - t368 * t483) * t361 (t364 * t507 - t368 * t482) * t361, 0, 0, 0, 0, 0, t149 * t357 + t438, t148 * t357 + t437 (t249 * t320 - t250 * t318) * qJD(2) + t563, t150 * t357 - t438, t147 * t357 - t437, -t522 + (t205 * t536 - t243 * t249 + t250 * t393) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t150 * qJD(5), 0, 0, 0, 0, 0 ((-t362 * t536 + t524) * t320 - t250 * t209) * qJD(2) + t13 * qJD(3) + t45 * qJD(4) + t38 * qJD(6) (-(t366 * t536 + t531) * t320 + t250 * t541) * qJD(2) + t11 * qJD(3) + t15 * qJD(4) + t37 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t299 - t364 * t461, qJD(3) * t298 - t367 * t461, 0, 0, 0, 0, 0, t612, t619, t548, t43, t620, t1 * qJD(2) + (-t344 * t443 + t348 * t394) * qJD(3) + t10 * qJD(4) + t588, 0, 0, 0, 0, 0, qJD(2) * t13 + qJD(4) * t62 + qJD(6) * t67 - t443 * t504, qJD(2) * t11 + qJD(4) * t64 + qJD(6) * t66 - t443 * t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t612, t619, 0, t43, t620, t4 * qJD(2) + t10 * qJD(3) + (-pkin(4) * t394 - qJ(5) * t443) * qJD(4) + t588, 0, 0, 0, 0, 0, qJD(2) * t45 + qJD(3) * t62 + t394 * t498 - t443 * t501, qJD(2) * t15 + qJD(3) * t64 - t394 * t499 - t443 * t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t38 + qJD(3) * t67 + qJD(6) * t114 + t394 * t500, qJD(2) * t37 + qJD(3) * t66 - qJD(6) * t113 - t394 * t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357 * t144, -t357 * t146, t563, -t357 * t143, -t357 * t145, qJD(3) * t2 + qJD(4) * t3 - qJD(5) * t143 + t522, 0, 0, 0, 0, 0, qJD(3) * t14 - qJD(4) * t44 - qJD(6) * t35, qJD(3) * t12 + qJD(4) * t16 - qJD(6) * t36; 0, 0, 0, 0, t364 * t482, t339 * qJD(3), 0, 0, 0, -pkin(2) * t483, -pkin(2) * t482, -t104, -t357 * t480, 0, 0, 0, qJD(3) * t200 + t320 * t502, qJD(3) * t201 - t318 * t502, 0, qJD(3) * t55 + qJD(4) * t57 + t302 * t320, qJD(3) * t56 + qJD(4) * t58 + qJD(5) * t585, qJD(3) * t31 + qJD(4) * t32 - qJD(5) * t546, t309 * t458 + t537 * t603, -t215 * qJD(6) + t320 * t390, t141 * t357 + t318 * t463, t142 * t357 - t318 * t464, -t104, qJD(3) * t5 + qJD(4) * t7 + qJD(6) * t34 + t354 * t585, qJD(3) * t6 + qJD(4) * t8 + qJD(6) * t33 + t355 * t585; 0, 0, 0, 0, t459, t484, t482, -t483, 0, -pkin(8) * t482 - t477, pkin(8) * t483 - t476, -t236, -t490, -t221, -t603, 0, -t599 - t592, -t607 - t596 (-t538 - t539) * qJD(3) + t52 * qJD(4) - t302 + t417, t599 - t591, t607 - t594 (t243 * t344 + t348 * t393) * qJD(3) + t30 * qJD(4) + t589 + t422, t50, t49, t70, t71, -t162 (-t366 * t414 - t615) * qJD(3) + t23 * qJD(4) - t203 + t26 * qJD(6) + t424 (t362 * t414 - t613) * qJD(3) + t21 * qJD(4) + t295 + t28 * qJD(6) + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, -t490, -t221, -t603, 0, -t593 - t599, -t607 - t597, t52 * qJD(3) + (-t540 + t565) * qJD(4) - t302, t470 + t558, t607 - t595, t30 * qJD(3) + (-pkin(4) * t393 + t243 * qJ(5)) * qJD(4) + t589 + t421, t50, t49, t70, t71, -t162, t23 * qJD(3) + (-t366 * t418 - t615) * qJD(4) - t203 + t47 * qJD(6) + t420, t21 * qJD(3) + (t362 * t418 - t613) * qJD(4) + t295 + t48 * qJD(6) + t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221, t236, t485, -t468 + t470, 0, 0, 0, 0, 0, -t209 * t357 + t460, t366 * t485 + t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, t621, t440 * t209, -t392, -t214, qJD(3) * t26 + qJD(4) * t47 - qJD(6) * t54 - t415, qJD(3) * t28 + qJD(4) * t48 + qJD(6) * t53 + t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t129, -t548, t123, t127, -qJD(2) * t2 + qJD(4) * t9, 0, 0, 0, 0, 0, -qJD(2) * t14 + qJD(4) * t63 - qJD(6) * t61, -qJD(2) * t12 + qJD(4) * t65 + qJD(6) * t60; 0, 0, 0, 0, -t459, -t484, 0, 0, 0, t477, t476, t236, t490, 0, 0, 0, t592, t596, qJD(4) * t51 - t417, t591, t594, qJD(4) * t29 - t422, t84, t102, t85, t86, t162, -qJD(4) * t24 + qJD(6) * t25 - t424, qJD(4) * t22 + qJD(6) * t27 - t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, -t353, 0, t352, t481, -qJD(4) * t261 + t336, -t458, t329, 0, 0, 0, t344 * t498 + t514, -t344 * t499 + t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t611, -t353 - t351, t521, t611, t351 + t481 (-pkin(4) * t363 + qJ(5) * t566) * t562 + t336 + t386, -t458, t329, 0, 0, 0, t254 * qJD(6) - t376 + t514, t253 * qJD(6) - t377 + t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, t344 * t357, 0, 0, 0, 0, 0, t602, t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, t192, t259, t260, t486, qJD(4) * t254 - t342 * t499 - t381, qJD(4) * t253 - t342 * t498 - t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t129, 0, t123, t127, -qJD(2) * t3 - qJD(3) * t9, 0, 0, 0, 0, 0, qJD(2) * t44 - qJD(3) * t63, -qJD(2) * t16 - qJD(3) * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t490, 0, 0, 0, t593, t597, -qJD(3) * t51, t494 - t558, t595, -qJD(3) * t29 - t421, t84, t102, t85, t86, t162, qJD(3) * t24 + qJD(6) * t68 - t420, -qJD(3) * t22 + qJD(6) * t69 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t350, t351, -t521, -t350, qJD(5) - t351, t358 - t386, -t458, t329, 0, 0, 0, -t252 * qJD(6) + t354 + t376, t251 * qJD(6) + t355 + t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t358, -t458, t329, 0, 0, 0, qJ(5) * t498 + t354, -qJ(5) * t499 + t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, t337, 0, 0, 0, 0, 0, t602, t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, t192, t259, t260, t486, t362 * t497 - t378, t366 * t497 - t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, -t485, t468 + t494, 0, 0, 0, 0, 0, -t206 * qJD(6) - t460 (-qJD(6) * t320 - t485) * t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, -qJ(5) * qJD(4) - qJD(3) * t344, 0, 0, 0, 0, 0, -t602, -t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, -t337, 0, 0, 0, 0, 0, -t602, -t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t489 - t499, -t440 * t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t35 + qJD(3) * t61, qJD(2) * t36 - qJD(3) * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, -t621 (-t318 * t506 + t602) * t320 (t318 * t508 + t601) * t320, -t214, -qJD(3) * t25 - qJD(4) * t68 + qJD(5) * t206 + t415, -qJD(3) * t27 - qJD(4) * t69 + t320 * t355 - t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, -t192, t293, t294, -t486, qJD(4) * t252 + t381, -qJD(4) * t251 + t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, -t192, t293, t294, -t486, t378, t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
