% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:14:07
% EndTime: 2019-03-08 23:14:34
% DurationCPUTime: 20.41s
% Computational Cost: add. (13116->730), mult. (29145->926), div. (0->0), fcn. (32932->10), ass. (0->542)
t591 = sin(qJ(3));
t594 = cos(qJ(3));
t588 = sin(pkin(6));
t592 = sin(qJ(2));
t854 = t588 * t592;
t903 = cos(pkin(6));
t511 = t591 * t903 + t594 * t854;
t915 = cos(qJ(4));
t490 = t915 * t511;
t694 = t490 / 0.2e1;
t510 = t591 * t854 - t594 * t903;
t590 = sin(qJ(4));
t847 = t590 * t510;
t662 = -t847 / 0.2e1 + t694;
t589 = sin(qJ(6));
t584 = t589 ^ 2;
t593 = cos(qJ(6));
t586 = t593 ^ 2;
t820 = t584 + t586;
t955 = t490 - t847;
t982 = t955 / 0.2e1;
t986 = t820 * t982;
t994 = t662 + t986;
t715 = t915 * t510 + t590 * t511;
t849 = t589 * t715;
t595 = cos(qJ(2));
t853 = t588 * t595;
t266 = t593 * t853 - t849;
t893 = t266 * t589;
t841 = t593 * t715;
t265 = t589 * t853 + t841;
t895 = t265 * t593;
t992 = (-t715 - t893 + t895) * t955;
t997 = t992 * qJD(1);
t999 = t994 * qJD(5) + t997;
t582 = qJD(3) + qJD(4);
t749 = t915 * t591;
t845 = t590 * t594;
t535 = t749 + t845;
t451 = t535 * t853;
t840 = t593 * t451;
t388 = -t589 * t854 + t840;
t848 = t589 * t451;
t389 = t593 * t854 + t848;
t917 = t593 / 0.2e1;
t918 = t589 / 0.2e1;
t639 = t388 * t917 + t389 * t918;
t959 = (t265 * t918 + t266 * t917) * t535;
t56 = t959 - t639;
t866 = qJD(1) * t56;
t55 = t959 + t639;
t905 = qJD(2) * t55;
t904 = qJD(2) * t56;
t911 = t590 * pkin(3);
t575 = qJD(4) * t911;
t926 = -t490 / 0.2e1;
t369 = t694 + t926;
t936 = -pkin(9) - pkin(8);
t706 = t936 * t915;
t538 = t594 * t706;
t569 = t915 * t594;
t682 = t936 * t569;
t643 = -t682 / 0.2e1;
t441 = t538 / 0.2e1 + t643;
t828 = t369 * qJD(1) + t441 * qJD(2);
t906 = qJD(3) * pkin(3);
t754 = t590 * t906 + t828;
t998 = t575 + t754;
t537 = t591 * t706;
t710 = t936 * t845;
t444 = -t537 - t710;
t757 = t590 * t936;
t708 = t594 * t757;
t445 = t537 + t708;
t995 = t444 + t445;
t846 = t590 * t591;
t533 = -t569 + t846;
t524 = t533 ^ 2;
t558 = t584 - t586;
t407 = t558 * t524;
t960 = t582 * t593;
t978 = t589 * t960;
t630 = 0.2e1 * t978 * t533;
t993 = -t407 * qJD(2) - t630;
t991 = t715 / 0.2e1;
t938 = t535 ^ 2;
t764 = t938 - t524;
t990 = t582 * t764;
t730 = -t853 / 0.2e1;
t698 = t533 * t730;
t539 = t846 * t853;
t705 = t915 * t853;
t681 = t594 * t705;
t824 = -t539 / 0.2e1 + t681 / 0.2e1;
t308 = t698 + t824;
t800 = qJD(3) * t715;
t971 = -qJD(4) * t715 - t800;
t989 = t308 * qJD(2) + t971;
t729 = t853 / 0.2e1;
t697 = t533 * t729;
t663 = -t705 / 0.2e1;
t825 = t539 / 0.2e1 + t594 * t663;
t309 = t697 + t825;
t988 = t309 * qJD(2) - t971;
t566 = qJ(5) + t911;
t768 = t566 * qJD(3);
t987 = -t768 - t828;
t920 = t586 / 0.2e1;
t400 = (t920 - t584 / 0.2e1) * t533;
t268 = -t400 * qJD(2) + t978;
t985 = t764 * qJD(2);
t937 = pkin(4) + pkin(10);
t981 = t533 * t937;
t962 = t582 * t535;
t980 = t533 * t962;
t762 = t915 * pkin(3);
t570 = -t762 - pkin(4);
t564 = -pkin(10) + t570;
t979 = t564 * t955;
t912 = t535 * pkin(5);
t622 = t444 + t912;
t889 = t589 * t622;
t888 = t593 * t622;
t571 = -t594 * pkin(3) - pkin(2);
t862 = t535 * qJ(5);
t650 = t571 - t862;
t271 = t650 + t981;
t155 = t589 * t271 - t888;
t156 = t593 * t271 + t889;
t642 = t156 * t918 - t155 * t593 / 0.2e1;
t977 = t642 * t955;
t976 = t715 * qJ(5);
t975 = t715 * t566;
t974 = t937 * t955;
t759 = -t911 / 0.2e1;
t923 = t566 / 0.2e1;
t692 = t759 + t923;
t935 = -qJ(5) / 0.2e1;
t626 = (t935 + t692) * t535;
t707 = t762 / 0.2e1;
t916 = t937 / 0.2e1;
t973 = t626 + t533 * (t564 / 0.2e1 + t707 + t916);
t452 = t681 - t539;
t720 = t982 - t955 / 0.2e1;
t690 = t720 * t535;
t942 = t690 * qJD(3);
t972 = (t451 * t535 - t452 * t533) * qJD(2) + t942;
t709 = t591 * t757;
t446 = -t682 + t709;
t913 = t533 * pkin(5);
t376 = t446 - t913;
t347 = t376 * t593;
t865 = t533 * qJ(5);
t419 = pkin(4) * t535 + t865;
t517 = t535 * pkin(10);
t344 = t419 + t517;
t851 = t589 * t344;
t170 = t347 - t851;
t843 = t593 * t344;
t885 = t376 * t589;
t171 = t843 + t885;
t398 = t589 * t535;
t860 = t535 * t593;
t691 = t155 * t398 + t156 * t860;
t14 = (-t170 * t589 + t171 * t593) * t533 + t691;
t970 = -t14 * qJD(2) + t866;
t443 = -t538 + t709;
t373 = t443 - t913;
t842 = t593 * t373;
t580 = t591 * pkin(3);
t404 = t419 + t580;
t277 = t404 + t517;
t852 = t589 * t277;
t163 = t842 - t852;
t844 = t593 * t277;
t850 = t589 * t373;
t164 = t844 + t850;
t11 = (-t163 * t589 + t164 * t593) * t533 + t691;
t969 = -t11 * qJD(2) + t866;
t857 = t588 ^ 2 * t592;
t878 = t955 * t452;
t118 = -t451 * t715 + t595 * t857 - t878;
t968 = t118 * qJD(1);
t967 = t533 * t991 + t690;
t966 = qJD(2) * t118;
t963 = t582 * t533;
t961 = t582 * t589;
t958 = qJ(5) + t566;
t380 = -t538 / 0.2e1 + t643 + t709;
t957 = t380 * qJD(3) + t446 * qJD(4);
t956 = 0.2e1 * t955;
t123 = t926 + t847 / 0.2e1 + t986;
t599 = -t913 / 0.2e1 + t709 / 0.2e1 + t643;
t899 = t164 * t589;
t900 = t163 * t593;
t641 = t899 / 0.2e1 + t900 / 0.2e1;
t44 = t599 - t641;
t954 = qJD(1) * t123 - qJD(2) * t44 - t768;
t307 = t698 + t825;
t780 = t307 * qJD(1);
t809 = qJD(2) * t571;
t953 = t533 * t809 + t780;
t391 = -t533 * t571 + t535 * t580;
t952 = -qJD(2) * t391 + t780;
t914 = t533 * pkin(4);
t397 = t650 + t914;
t873 = t397 * t533;
t168 = -t419 * t535 + t873;
t306 = t697 + t824;
t781 = t306 * qJD(1);
t951 = -qJD(2) * t168 + t781;
t158 = -t404 * t535 + t873;
t950 = -qJD(2) * t158 + t781;
t696 = t535 * t729;
t823 = t591 * t663 + t730 * t845;
t305 = t696 + t823;
t782 = t305 * qJD(1);
t949 = -t535 * t809 + t782;
t390 = t533 * t580 + t535 * t571;
t948 = qJD(2) * t390 - t782;
t872 = t397 * t535;
t157 = -t404 * t533 - t872;
t627 = t845 / 0.2e1 + t749 / 0.2e1;
t924 = -t535 / 0.2e1;
t304 = (t924 + t627) * t853;
t783 = t304 * qJD(1);
t947 = qJD(2) * t157 - t783;
t617 = (t443 - t446) * t535 - t995 * t533;
t946 = qJD(3) * t617;
t943 = t690 * qJD(2);
t897 = t171 * t589;
t898 = t170 * t593;
t835 = t898 / 0.2e1 + t897 / 0.2e1;
t751 = t915 * t533;
t693 = -t751 / 0.2e1;
t859 = t566 * t535;
t861 = t535 * t590;
t864 = t533 * t564;
t940 = -pkin(3) * (t861 / 0.2e1 + t693) + t864 / 0.2e1 + t859 / 0.2e1;
t805 = qJD(2) * t593;
t745 = t589 * t805;
t165 = t400 * t582 + t524 * t745;
t378 = -0.2e1 * t533 * t745 + t558 * t582;
t939 = qJD(1) * t690 + qJD(2) * t617;
t934 = qJ(5) / 0.2e1;
t933 = t265 / 0.2e1;
t932 = -t266 / 0.2e1;
t931 = t347 / 0.2e1;
t929 = -t715 / 0.2e1;
t927 = t443 / 0.2e1;
t925 = -t533 / 0.2e1;
t922 = -t570 / 0.2e1;
t921 = t570 / 0.2e1;
t919 = -t589 / 0.2e1;
t896 = t265 * t535;
t894 = t266 * t535;
t890 = t622 * t566;
t375 = t445 - t912;
t887 = t375 * t589;
t886 = t375 * t593;
t42 = t265 * t388 - t266 * t389 + t878;
t871 = t42 * qJD(1);
t870 = t452 * qJ(5);
t869 = t452 * t566;
t868 = t452 * t589;
t867 = t452 * t593;
t863 = t533 * t589;
t858 = t570 * t533;
t401 = t593 * t533;
t425 = t441 * qJD(3);
t833 = t783 - t425;
t576 = qJD(4) * t762;
t578 = qJD(5) * t589;
t822 = t589 * t576 + t578;
t579 = qJD(5) * t593;
t821 = t593 * t576 + t579;
t819 = qJ(5) * qJD(4);
t684 = t955 * t707;
t763 = -t915 / 0.2e1;
t695 = t955 * t763;
t173 = pkin(3) * t695 + t684;
t818 = qJD(1) * t173;
t167 = -t419 * t533 - t872;
t815 = qJD(2) * t167;
t811 = qJD(2) * t533;
t810 = qJD(2) * t535;
t808 = qJD(2) * t588;
t807 = qJD(2) * t589;
t806 = qJD(2) * t592;
t804 = qJD(2) * t594;
t803 = qJD(3) * t173;
t802 = qJD(3) * t369;
t801 = qJD(3) * t955;
t799 = qJD(4) * t369;
t798 = qJD(4) * t955;
t797 = qJD(4) * t441;
t796 = qJD(4) * t571;
t795 = qJD(4) * t589;
t794 = qJD(4) * t593;
t793 = qJD(6) * t589;
t792 = qJD(6) * t593;
t791 = qJD(6) * t937;
t496 = pkin(3) * t693;
t140 = t496 + (t922 - pkin(4) / 0.2e1) * t533 - t626;
t788 = t140 * qJD(2);
t231 = (-t857 + (t510 * t591 + t511 * t594) * t588) * t595;
t787 = t231 * qJD(1);
t234 = t820 * t535 * t533;
t786 = t234 * qJD(2);
t302 = t764 * t589;
t785 = t302 * qJD(2);
t303 = t764 * t593;
t784 = t303 * qJD(2);
t776 = t398 * qJD(2);
t774 = t400 * qJD(6);
t518 = t846 / 0.2e1 - t569 / 0.2e1;
t771 = t518 * qJD(2);
t770 = t938 * qJD(2);
t515 = t533 * qJD(5);
t585 = t591 ^ 2;
t587 = t594 ^ 2;
t559 = t587 - t585;
t769 = t559 * qJD(2);
t767 = t591 * qJD(3);
t766 = t594 * qJD(3);
t765 = t576 + qJD(5);
t761 = pkin(2) * t591 * qJD(2);
t760 = pkin(2) * t804;
t758 = t911 / 0.2e1;
t752 = -t783 + t957;
t750 = t915 * t566;
t748 = t397 * t810;
t744 = t535 * t793;
t743 = t535 * t792;
t742 = t533 * t810;
t741 = t588 * t806;
t740 = t595 * t808;
t739 = t938 * t807;
t738 = t591 * t766;
t563 = t589 * t792;
t505 = t535 * t805;
t735 = -t869 / 0.2e1;
t734 = -t867 / 0.2e1;
t733 = t863 / 0.2e1;
t732 = -t862 / 0.2e1;
t731 = -t854 / 0.2e1;
t728 = -t849 / 0.2e1;
t727 = -t848 / 0.2e1;
t726 = t564 * t918;
t725 = -t841 / 0.2e1;
t724 = t840 / 0.2e1;
t723 = t401 / 0.2e1;
t722 = t564 * t917;
t721 = -t622 / 0.2e1 - t375 / 0.2e1;
t718 = t584 / 0.2e1 + t920;
t717 = t820 * t590;
t716 = (t585 + t587) * t595;
t325 = qJD(6) * t518 + t742;
t713 = t589 * t759;
t712 = t593 * t758;
t711 = qJD(6) + t810;
t574 = qJD(3) * t762;
t704 = t533 * t741;
t703 = t535 * t741;
t702 = t524 * t563;
t699 = t419 * t730;
t516 = pkin(3) * t717;
t687 = t533 * t961;
t597 = t163 * t933 + t164 * t932 + t375 * t982 + t376 * t929 + t977;
t2 = -t564 * t639 + t597 + t735;
t9 = -t155 * t163 + t156 * t164 + t375 * t376;
t685 = t2 * qJD(1) + t9 * qJD(2);
t10 = -t155 * t170 + t156 * t171 - t376 * t622;
t602 = -t639 * t937 + t870 / 0.2e1;
t611 = -t265 * t170 / 0.2e1 + t266 * t171 / 0.2e1 + t376 * t991;
t3 = (t622 / 0.2e1 - t642) * t955 + t602 + t611;
t683 = -t3 * qJD(1) + t10 * qJD(2);
t680 = t862 - t981;
t601 = t446 * t929 + t715 * t927 + t982 * t995;
t598 = t404 * t730 + t601;
t638 = t451 * t922 + t735;
t19 = t598 + t638;
t666 = t443 * t444 + t445 * t446;
t85 = t397 * t404 + t666;
t679 = t19 * qJD(1) + t85 * qJD(2);
t647 = t451 * pkin(4) / 0.2e1 - t870 / 0.2e1;
t20 = t699 + t647;
t86 = t397 * t419;
t678 = t20 * qJD(1) + t86 * qJD(2);
t249 = t376 * t860;
t24 = t163 * t535 - t249 + (t155 - t886) * t533;
t196 = t265 * t925;
t604 = t593 * t967 + t196;
t39 = -t868 / 0.2e1 + t604;
t677 = t39 * qJD(1) + t24 * qJD(2);
t25 = (-t164 + t885) * t535 + (t156 + t887) * t533;
t600 = t266 * t925 - t589 * t967;
t37 = t734 + t600;
t676 = t37 * qJD(1) + t25 * qJD(2);
t27 = (-t171 + t885) * t535 + (t156 - t889) * t533;
t644 = (t932 + t728) * t533;
t41 = t734 + t644;
t675 = t41 * qJD(1) + t27 * qJD(2);
t48 = (-t155 * t589 - t156 * t593) * t535;
t674 = qJD(2) * t48 + t866;
t87 = t155 * t535 + t376 * t401;
t635 = t925 * t955 + t731;
t90 = t727 + t896 / 0.2e1 + t635 * t593;
t672 = -qJD(1) * t90 + qJD(2) * t87;
t88 = -t156 * t535 + t376 * t863;
t89 = t724 - t894 / 0.2e1 + t635 * t589;
t671 = qJD(1) * t89 - qJD(2) * t88;
t670 = t899 + t900;
t669 = t897 + t898;
t665 = t444 * t451 + t446 * t452;
t664 = t859 + t864;
t430 = t868 / 0.2e1;
t102 = t430 + (t933 + t725) * t533;
t26 = t170 * t535 - t249 + (t155 + t888) * t533;
t660 = -t102 * qJD(1) + t26 * qJD(2);
t133 = t571 * t580 + t666;
t629 = t452 * t590 / 0.2e1 + t451 * t763;
t22 = (t591 * t729 + t629) * pkin(3) - t601;
t658 = -t22 * qJD(1) + t133 * qJD(2);
t230 = 0.2e1 * t694 - t847;
t655 = -qJD(4) * t230 - t801;
t654 = -qJD(3) * t230 - t798;
t379 = -t537 - t708 / 0.2e1 - t710 / 0.2e1;
t653 = -qJD(3) * t379 - qJD(4) * t444;
t652 = qJD(3) * t445 - qJD(4) * t379;
t651 = qJD(3) * t443 + qJD(4) * t380;
t649 = pkin(4) * t982 + t976 / 0.2e1;
t648 = pkin(4) * t927 + t445 * t935;
t645 = t935 - t692;
t636 = t533 * t923 + t564 * t924;
t634 = t535 * t916 + t865 / 0.2e1;
t633 = t711 * t863;
t612 = -t718 * t974 - t976 / 0.2e1;
t12 = t975 / 0.2e1 - t718 * t979 + (t695 + (t893 / 0.2e1 - t895 / 0.2e1) * t590) * pkin(3) + t612;
t385 = (t564 * t717 + t750) * pkin(3);
t603 = t375 * t934 - t641 * t937;
t5 = t890 / 0.2e1 - t835 * t564 + (t376 * t763 - t590 * t642) * pkin(3) + t603;
t625 = -t12 * qJD(1) - t5 * qJD(2) + t385 * qJD(3);
t621 = t277 / 0.2e1 + t636;
t620 = t344 / 0.2e1 + t634;
t15 = -t641 + t835;
t619 = qJD(2) * t15 + qJD(3) * t516;
t609 = -t692 * t715 + t921 * t955 + t684;
t33 = t609 + t649;
t467 = -pkin(3) * t750 - t570 * t911;
t608 = -t444 * t692 + (t707 + t921) * t446;
t81 = t608 + t648;
t618 = t33 * qJD(1) + t81 * qJD(2) - t467 * qJD(3);
t174 = t720 * t589;
t79 = (-t376 / 0.2e1 + t373 / 0.2e1) * t589 + t621 * t593;
t616 = -qJD(1) * t174 - qJD(2) * t79 + t589 * t768;
t175 = t720 * t593;
t77 = t931 - t842 / 0.2e1 + t621 * t589;
t615 = qJD(1) * t175 - qJD(2) * t77 - t593 * t768;
t182 = t620 * t589;
t454 = t645 * t593;
t614 = -qJ(5) * t794 - t182 * qJD(2) + t454 * qJD(3);
t183 = t620 * t593;
t453 = t645 * t589;
t613 = qJ(5) * t795 - t183 * qJD(2) - t453 * qJD(3);
t126 = t662 - t986;
t46 = t599 - t835;
t463 = -qJ(5) + (-0.1e1 / 0.2e1 + t718) * t911;
t607 = qJD(1) * t126 + qJD(2) * t46 - qJD(3) * t463 + t819;
t70 = t721 * t589 - t593 * t973;
t606 = -t70 * qJD(2) - t574 * t589;
t68 = t589 * t973 + t721 * t593;
t605 = -t68 * qJD(2) - t574 * t593;
t583 = qJ(5) * qJD(5);
t577 = qJ(5) * t762;
t562 = t591 * t804;
t557 = t582 * qJ(5);
t554 = t566 * qJD(5);
t547 = t558 * qJD(6);
t507 = t516 * qJD(4);
t506 = t589 * t515;
t504 = t535 * t807;
t464 = t718 * t911 + qJ(5) + t758;
t462 = -t505 - t792;
t461 = -t504 - t793;
t456 = t917 * t958 + t712;
t455 = t919 * t958 + t713;
t431 = t867 / 0.2e1;
t406 = t582 * t518;
t394 = t401 * qJD(5);
t311 = t627 * t853 + t696;
t310 = t535 * t730 + t823;
t295 = t311 * qJD(2);
t294 = t310 * qJD(2);
t287 = t307 * qJD(2);
t285 = t306 * qJD(2);
t283 = t305 * qJD(2);
t281 = t304 * qJD(2);
t248 = -0.2e1 * t593 * t633;
t220 = -t743 - t784;
t219 = -t744 - t785;
t217 = -t586 * t742 - t774;
t216 = -t584 * t742 + t774;
t185 = t687 + t784;
t184 = -t533 * t960 + t785;
t181 = t956 * t917;
t180 = t956 * t919;
t178 = -t715 * t917 + t725;
t176 = -t715 * t918 + t728;
t172 = t281 - t802;
t169 = t173 * qJD(4);
t141 = t496 - t858 / 0.2e1 + t732 + t914 / 0.2e1 - t692 * t535;
t139 = -t774 + (t586 * t811 - t978) * t535;
t138 = t774 + (t584 * t811 + t978) * t535;
t128 = 0.2e1 * (-qJD(6) + t810) * t589 * t401 - t558 * t962;
t122 = -t885 - t843 / 0.2e1 + t634 * t593;
t121 = t347 - t851 / 0.2e1 + t634 * t589;
t103 = t715 * t723 + t196 + t430;
t101 = t295 - t654;
t92 = t894 / 0.2e1 + t955 * t733 + t589 * t731 + t724;
t91 = -t896 / 0.2e1 + t955 * t723 + t593 * t731 + t727;
t84 = -0.2e1 * t986;
t82 = t608 - t648;
t80 = -t885 / 0.2e1 - t844 / 0.2e1 - t850 / 0.2e1 + t636 * t593;
t78 = t931 - t852 / 0.2e1 + t842 / 0.2e1 + t636 * t589;
t69 = -t889 / 0.2e1 + t401 * t916 + t887 / 0.2e1 + (t732 - t940) * t593;
t67 = -t888 / 0.2e1 - t937 * t733 + t398 * t934 + t886 / 0.2e1 + t940 * t589;
t45 = t599 + t835;
t43 = t599 + t641;
t40 = t431 + t644;
t38 = t430 + t604;
t36 = t431 + t600;
t34 = t609 - t649;
t23 = pkin(3) * t629 + t580 * t730 + t601;
t21 = t699 - t647;
t18 = t598 - t638;
t16 = -t641 - t835;
t13 = t266 * t713 + t265 * t712 - t975 / 0.2e1 + t684 + t612 + t986 * t564;
t6 = t171 * t726 + t170 * t722 - t890 / 0.2e1 + t376 * t707 + t603 + t642 * t911;
t4 = -t622 * t982 + t602 - t611 + t977;
t1 = t389 * t726 + t388 * t722 + t869 / 0.2e1 + t597;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t231, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t966, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t966, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t42 + t582 * t992; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t741, -t740, 0, 0, 0, 0, 0, 0, 0, 0 (-t592 * t804 - t595 * t767) * t588 (t591 * t806 - t595 * t766) * t588, t716 * t808, t787 + (-pkin(2) * t592 + pkin(8) * t716) * t808, 0, 0, 0, 0, 0, 0, t310 * t582 + t704, t309 * t582 + t703, t972, -t968 + (t571 * t854 + t665) * qJD(2) + t23 * qJD(3), 0, 0, 0, 0, 0, 0, t972, t311 * t582 - t704, t308 * t582 - t703, -t968 + (t397 * t854 + t665) * qJD(2) + t18 * qJD(3) + t21 * qJD(4) + t311 * qJD(5), 0, 0, 0, 0, 0, 0 (t388 * t535 - t401 * t452) * qJD(2) + t38 * qJD(3) + t103 * qJD(4) + t92 * qJD(6) (-t389 * t535 + t452 * t863) * qJD(2) + t36 * qJD(3) + t40 * qJD(4) + t91 * qJD(6), -t582 * t55 + (-t388 * t589 + t389 * t593) * t811, t871 + (-t155 * t388 + t156 * t389 + t376 * t452) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t55 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t511 - t591 * t740, qJD(3) * t510 - t594 * t740, 0, 0, 0, 0, 0, 0, 0, 0, t294 + t655, t988, t943, t23 * qJD(2) + (-t590 * t715 - t915 * t955) * t906 + t169, 0, 0, 0, 0, 0, 0, t943, t295 - t655, t989, t18 * qJD(2) + (t570 * t955 - t975) * qJD(3) + t34 * qJD(4) + t230 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(2) * t38 + qJD(4) * t176 + qJD(6) * t181 - t589 * t800, qJD(2) * t36 + qJD(4) * t178 + qJD(6) * t180 - t593 * t800, t84 * qJD(4) - t801 * t820 - t905, t1 * qJD(2) + (t820 * t979 - t975) * qJD(3) + t13 * qJD(4) + t999; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294 + t654, t988, 0, t803, 0, 0, 0, 0, 0, 0, 0, t101, t989, t21 * qJD(2) + t34 * qJD(3) + (-pkin(4) * t955 - t976) * qJD(4) + t955 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(2) * t103 + qJD(3) * t176 - t715 * t795 + t792 * t955, qJD(2) * t40 + qJD(3) * t178 - t715 * t794 - t793 * t955, t84 * qJD(3) - t798 * t820 - t905, t4 * qJD(2) + t13 * qJD(3) + (-t820 * t974 - t976) * qJD(4) + t999; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582 * t994 + t905; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t92 + qJD(3) * t181 + qJD(6) * t266 + t794 * t955, qJD(2) * t91 + qJD(3) * t180 - qJD(6) * t265 - t795 * t955, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t787, 0, 0, 0, 0, 0, 0, -t582 * t305, -t582 * t307, t942, -qJD(3) * t22 + t968, 0, 0, 0, 0, 0, 0, t942, -t582 * t304, -t582 * t306, qJD(3) * t19 + qJD(4) * t20 - qJD(5) * t304 + t968, 0, 0, 0, 0, 0, 0, qJD(3) * t39 - qJD(4) * t102 - qJD(6) * t89, qJD(3) * t37 + qJD(4) * t41 - qJD(6) * t90, -t56 * t582, qJD(3) * t2 - qJD(4) * t3 + qJD(5) * t56 - t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t738, t559 * qJD(3), 0, -t738, 0, 0, -pkin(2) * t767, -pkin(2) * t766, 0, 0, -t980, -t990, 0, t980, 0, 0, qJD(3) * t390 + t535 * t796, qJD(3) * t391 - t533 * t796, t946, qJD(3) * t133, 0, 0, 0, -t980, -t990, t980, t946, qJD(3) * t157 + qJD(4) * t167 + t515 * t535, qJD(3) * t158 + qJD(4) * t168 + qJD(5) * t938, qJD(3) * t85 + qJD(4) * t86 - qJD(5) * t872, t584 * t980 + t702, -t407 * qJD(6) + t535 * t630, t302 * t582 + t533 * t743, t586 * t980 - t702, t303 * t582 - t533 * t744, -t980, qJD(3) * t24 + qJD(4) * t26 + qJD(6) * t88 + t578 * t938, qJD(3) * t25 + qJD(4) * t27 + qJD(6) * t87 + t579 * t938, qJD(3) * t11 + qJD(4) * t14 - qJD(5) * t234, qJD(3) * t9 + qJD(4) * t10 + qJD(5) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, t769, t766, -t562, -t767, 0, -pkin(8) * t766 - t761, pkin(8) * t767 - t760, 0, 0, -t742, -t985, -t963, t742, -t962, 0, -t651 + t948, -t652 - t952 (t751 - t861) * t906 + t939 (-t443 * t915 + t445 * t590) * t906 + t658, 0, t963, t962, -t742, -t985, t742 (-t858 - t859) * qJD(3) + t141 * qJD(4) - t515 + t939, t651 + t947, t652 - t950 (t443 * t570 + t445 * t566) * qJD(3) + t82 * qJD(4) + t380 * qJD(5) + t679, t138, t128, t184, t139, t185, -t325 (-t593 * t664 + t887) * qJD(3) + t69 * qJD(4) - t394 + t78 * qJD(6) + t677 (t589 * t664 + t886) * qJD(3) + t67 * qJD(4) + t506 + t80 * qJD(6) + t676, -qJD(3) * t670 + qJD(4) * t16 - t969 (t375 * t566 + t564 * t670) * qJD(3) + t6 * qJD(4) + t43 * qJD(5) + t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t742, -t985, -t963, t742, -t962, 0, -t949 - t957, -t653 - t953, 0, 0, 0, t963, t962, -t742, -t985, t742, t141 * qJD(3) + (-t862 + t914) * qJD(4) - t515, t752 + t815, t653 - t951, t82 * qJD(3) + (-pkin(4) * t446 - qJ(5) * t444) * qJD(4) + t446 * qJD(5) + t678, t138, t128, t184, t139, t185, -t325, t69 * qJD(3) + (-t593 * t680 - t889) * qJD(4) - t394 + t121 * qJD(6) + t660, t67 * qJD(3) + (t589 * t680 - t888) * qJD(4) + t506 + t122 * qJD(6) + t675, qJD(3) * t16 - qJD(4) * t669 - t970, t6 * qJD(3) + (-qJ(5) * t622 - t669 * t937) * qJD(4) + t45 * qJD(5) + t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t963, t742, t770, -t748 + t752, 0, 0, 0, 0, 0, 0, -t401 * t582 + t739, t593 * t770 + t687, -t786, qJD(3) * t43 + qJD(4) * t45 + t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, t993, t711 * t401, -t165, -t633, -t406, qJD(3) * t78 + qJD(4) * t121 - qJD(6) * t156 - t671, qJD(3) * t80 + qJD(4) * t122 + qJD(6) * t155 + t672, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283 - t799, t287, -t943, qJD(2) * t22 + t169, 0, 0, 0, 0, 0, 0, -t943, t281 + t799, t285, -qJD(2) * t19 + qJD(4) * t33 + qJD(5) * t369, 0, 0, 0, 0, 0, 0, -qJD(2) * t39 - qJD(6) * t175, -qJD(2) * t37 + qJD(6) * t174, t904, -qJD(2) * t2 - qJD(4) * t12 - qJD(5) * t123 - t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t562, -t769, 0, t562, 0, 0, t761, t760, 0, 0, t742, t985, 0, -t742, 0, 0, -t797 - t948, t952, -t939, -t658, 0, 0, 0, t742, t985, -t742, qJD(4) * t140 - t939, t797 - t947, t950, qJD(4) * t81 + qJD(5) * t441 - t679, t216, t248, t219, t217, t220, t325, qJD(4) * t70 + qJD(6) * t77 - t677, qJD(4) * t68 + qJD(6) * t79 - t676, -qJD(4) * t15 + t969, -qJD(4) * t5 + qJD(5) * t44 - t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t575, -t576, 0, 0, 0, 0, 0, 0, 0, 0, 0, t575, t765, -qJD(4) * t467 + t554, -t563, t547, 0, t563, 0, 0, t566 * t792 + t822, -t566 * t793 + t821, -t507, qJD(4) * t385 + t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t998, -t576 - t574, 0, t818, 0, 0, 0, 0, 0, 0, t788, t998, t574 + t765 (-pkin(4) * t911 + t577) * qJD(4) + t554 + t618, -t563, t547, 0, t563, 0, 0, qJD(6) * t456 - t606 + t822, qJD(6) * t455 - t605 + t821, -t507 - t619 (-t516 * t937 + t577) * qJD(4) + t464 * qJD(5) + t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, qJD(4) * t566 - t987, 0, 0, 0, 0, 0, 0, t961, t960, 0, qJD(4) * t464 - t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t378, t461, t268, t462, t771, qJD(4) * t456 - t564 * t793 - t615, qJD(4) * t455 - t564 * t792 - t616, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283 + t802, t287, 0, -t803, 0, 0, 0, 0, 0, 0, 0, t172, t285, -qJD(2) * t20 - qJD(3) * t33, 0, 0, 0, 0, 0, 0, qJD(2) * t102, -qJD(2) * t41, t904, qJD(2) * t3 + qJD(3) * t12 + qJD(5) * t126 - t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t742, t985, 0, -t742, 0, 0, t425 + t949, t953, 0, 0, 0, 0, 0, t742, t985, -t742, -qJD(3) * t140, -t815 + t833, t951, -qJD(3) * t81 - t678, t216, t248, t219, t217, t220, t325, -qJD(3) * t70 + qJD(6) * t182 - t660, -qJD(3) * t68 + qJD(6) * t183 - t675, qJD(3) * t15 + t970, qJD(3) * t5 + qJD(5) * t46 - t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t754, t574, 0, -t818, 0, 0, 0, 0, 0, 0, -t788, -t754, qJD(5) - t574, t583 - t618, -t563, t547, 0, t563, 0, 0, -qJD(6) * t454 + t578 + t606, qJD(6) * t453 + t579 + t605, t619, -qJD(5) * t463 - t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t583, -t563, t547, 0, t563, 0, 0, qJ(5) * t792 + t578, -qJ(5) * t793 + t579, 0, t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, t557, 0, 0, 0, 0, 0, 0, t961, t960, 0, t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t378, t461, t268, t462, t771, t589 * t791 - t614, t593 * t791 - t613, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t123 - qJD(4) * t126 - t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t742, -t770, t748 + t833, 0, 0, 0, 0, 0, 0, -t398 * qJD(6) - t739 (-qJD(6) * t535 - t770) * t593, t786, -qJD(3) * t44 - qJD(4) * t46 - t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, -t819 + t987, 0, 0, 0, 0, 0, 0, -t961, -t960, 0, qJD(4) * t463 + t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, -t557, 0, 0, 0, 0, 0, 0, -t961, -t960, 0, -t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t776 - t793, -t711 * t593, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t89 + qJD(3) * t175, qJD(2) * t90 - qJD(3) * t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165, -t993 (-t533 * t805 + t961) * t535, t165 (t533 * t807 + t960) * t535, -t406, -qJD(3) * t77 - qJD(4) * t182 + qJD(5) * t398 + t671, -qJD(3) * t79 - qJD(4) * t183 + t535 * t579 - t672, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, -t378, t504, -t268, t505, -t771, qJD(4) * t454 + t615, -qJD(4) * t453 + t616, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, -t378, t504, -t268, t505, -t771, t614, t613, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t776, t505, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
