% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:32:23
% EndTime: 2019-03-08 21:32:46
% DurationCPUTime: 17.86s
% Computational Cost: add. (11164->630), mult. (25355->815), div. (0->0), fcn. (28993->10), ass. (0->500)
t494 = sin(qJ(3));
t770 = cos(pkin(11));
t611 = t770 * t494;
t491 = sin(pkin(11));
t497 = cos(qJ(3));
t719 = t491 * t497;
t454 = t611 + t719;
t492 = sin(pkin(6));
t498 = cos(qJ(2));
t717 = t492 * t498;
t389 = t454 * t717;
t849 = -t389 / 0.2e1;
t483 = -pkin(3) * t770 - pkin(4);
t482 = pkin(3) * t491 + pkin(9);
t496 = cos(qJ(5));
t495 = sin(qJ(2));
t718 = t492 * t495;
t471 = t496 * t718;
t610 = t770 * t497;
t720 = t491 * t494;
t536 = t610 - t720;
t390 = t536 * t717;
t493 = sin(qJ(5));
t714 = t493 * t390;
t323 = -t471 + t714;
t643 = t493 * t718;
t711 = t496 * t390;
t324 = t643 + t711;
t779 = t496 / 0.2e1;
t781 = t493 / 0.2e1;
t832 = t323 * t781 + t324 * t779;
t846 = t832 * t482;
t848 = t483 * t849 - t846;
t716 = t493 * qJ(6);
t774 = t496 * pkin(5);
t588 = t716 + t774;
t448 = -t588 + t483;
t847 = t448 * t849 - t846;
t450 = t536 ^ 2;
t451 = t454 ^ 2;
t647 = -t451 - t450;
t839 = t647 * t496;
t845 = qJD(2) * t839;
t840 = t647 * t493;
t844 = qJD(2) * t840;
t843 = qJD(4) * t839;
t842 = qJD(4) * t840;
t773 = -qJ(4) - pkin(8);
t467 = t773 * t494;
t469 = t773 * t497;
t385 = -t770 * t467 - t469 * t491;
t834 = t385 * t493;
t841 = t834 / 0.2e1;
t828 = t491 * t467 - t770 * t469;
t771 = cos(pkin(6));
t441 = t494 * t718 - t497 * t771;
t442 = t494 * t771 + t497 * t718;
t313 = t770 * t441 + t442 * t491;
t836 = t313 / 0.2e1;
t838 = t828 * t836;
t447 = t454 * qJ(6);
t775 = t494 * pkin(3);
t348 = pkin(4) * t454 - pkin(9) * t536 + t775;
t322 = t493 * t348;
t833 = t385 * t496;
t700 = t322 / 0.2e1 - t833 / 0.2e1;
t837 = -t447 - t700;
t345 = t496 * t536;
t618 = t345 / 0.2e1;
t835 = t313 * t618;
t736 = t828 * t493;
t735 = t828 * t496;
t487 = t493 ^ 2;
t489 = t496 ^ 2;
t831 = t487 + t489;
t785 = t454 / 0.2e1;
t627 = t313 * t785;
t537 = -t491 * t441 + t442 * t770;
t258 = -t493 * t717 + t496 * t537;
t748 = t258 * t496;
t257 = t493 * t537 + t496 * t717;
t750 = t257 * t493;
t513 = -(-t748 / 0.2e1 - t750 / 0.2e1) * t536 + t627;
t741 = t324 * t493;
t742 = t323 * t496;
t810 = -t741 / 0.2e1 + t742 / 0.2e1;
t505 = t513 - t810;
t746 = t313 * t389;
t527 = t257 * t323 + t258 * t324 + t746;
t811 = t527 * qJD(1);
t830 = t505 * qJD(4) + t811;
t502 = t513 + t810;
t829 = qJD(4) * t502 - t811;
t646 = t451 - t450;
t341 = t493 * t536;
t660 = t341 * qJD(2);
t670 = qJD(5) * t493;
t291 = -t660 + t670;
t328 = t341 * qJD(5);
t271 = t646 * t493;
t664 = t271 * qJD(2);
t827 = t664 + t328;
t651 = t454 * qJD(3);
t430 = t496 * t651;
t826 = t664 - t430;
t713 = t496 * qJ(6);
t778 = pkin(5) * t493;
t468 = t713 - t778;
t334 = t588 * t454;
t722 = t482 * t536;
t593 = -t334 / 0.2e1 + t722 / 0.2e1;
t624 = t448 * t785;
t343 = t493 * t454;
t346 = t496 * t454;
t596 = pkin(5) * t343 - qJ(6) * t346;
t220 = t385 + t596;
t796 = -t220 / 0.2e1;
t504 = (t468 * t785 + t796) * t496 + (t624 + t593) * t493;
t34 = t504 + t837;
t723 = t468 * t493;
t358 = t448 * t496 - t723;
t612 = t836 - t313 / 0.2e1;
t152 = t612 * t496;
t666 = t152 * qJD(1);
t825 = -qJD(2) * t34 + qJD(3) * t358 - t666;
t679 = qJD(3) * t496;
t724 = t454 * t483;
t512 = (-t722 / 0.2e1 - t724 / 0.2e1) * t493 + t833 / 0.2e1;
t88 = t512 + t700;
t824 = -qJD(2) * t88 - t483 * t679 + t666;
t150 = t612 * t493;
t667 = t150 * qJD(1);
t669 = qJD(5) * t496;
t590 = -t482 * t669 - t667;
t823 = qJD(1) * t502;
t595 = t612 * t536;
t786 = -t454 / 0.2e1;
t509 = (t537 * t785 - t595) * t493 + t257 * t786;
t727 = t389 * t496;
t503 = t727 / 0.2e1 + t509;
t822 = qJD(1) * t503;
t780 = -t496 / 0.2e1;
t526 = (t257 * t780 + t258 * t781) * t536;
t506 = -t526 - t832;
t821 = qJD(1) * t506;
t616 = -t346 / 0.2e1;
t749 = t258 * t536;
t535 = -t749 / 0.2e1 + t313 * t616;
t697 = t714 / 0.2e1 - t471 / 0.2e1;
t519 = t535 - t697;
t820 = qJD(1) * t519;
t819 = qJD(2) * t502;
t818 = qJD(2) * t505;
t817 = qJD(2) * t506;
t816 = qJD(2) * (t324 * t536 + t346 * t389);
t815 = qJD(3) * t506;
t516 = (t537 - t748 - t750) * t313;
t812 = t516 * qJD(1);
t653 = t536 * qJD(2);
t605 = qJD(5) - t653;
t435 = t487 * t536;
t436 = t489 * t536;
t809 = 0.2e1 * t493 * t346 * (-t653 - qJD(5)) - (t435 - t436) * qJD(3);
t808 = -qJD(2) * t503 - t150 * qJD(5);
t138 = t150 * qJD(3);
t807 = qJD(2) * t519 + t138;
t511 = -t526 + t832;
t682 = qJD(3) * t313;
t806 = qJD(2) * t511 - t682 * t831;
t626 = t313 * t781;
t782 = -t493 / 0.2e1;
t151 = -t313 * t782 + t626;
t507 = -t727 / 0.2e1 + t509;
t805 = qJD(2) * t507 + t151 * qJD(5) - t537 * t679;
t615 = t346 / 0.2e1;
t599 = t313 * t615 + t749 / 0.2e1;
t550 = t599 - t697;
t703 = t151 * qJD(3) - t258 * qJD(5);
t804 = qJD(2) * t550 + t703;
t652 = t454 * qJD(2);
t803 = qJD(3) * t511 + (-t741 + t742) * t652;
t802 = qJD(2) * t527 + qJD(3) * t516;
t801 = qJD(3) * t503 - qJD(5) * t519;
t800 = qJD(3) * t507 + qJD(5) * t550 + (t323 * t536 + t389 * t343) * qJD(2);
t799 = -qJ(6) / 0.2e1;
t712 = t496 * t348;
t194 = t712 + t834;
t776 = t454 * pkin(5);
t162 = -t194 - t776;
t798 = t162 / 0.2e1;
t484 = -pkin(3) * t497 - pkin(2);
t531 = -pkin(4) * t536 - pkin(9) * t454 + t484;
t190 = t493 * t531 + t735;
t797 = t190 / 0.2e1;
t795 = t258 / 0.2e1;
t794 = t537 / 0.2e1;
t791 = -t537 / 0.2e1;
t790 = t334 / 0.2e1;
t789 = -t348 / 0.2e1;
t788 = t385 / 0.2e1;
t787 = t536 / 0.2e1;
t784 = -t487 / 0.2e1;
t783 = -t489 / 0.2e1;
t777 = t536 * pkin(5);
t772 = qJD(3) * pkin(3);
t189 = -t496 * t531 + t736;
t160 = t189 + t777;
t613 = -t189 / 0.2e1 + t160 / 0.2e1;
t551 = -t777 / 0.2e1 - t613;
t726 = t536 * qJ(6);
t159 = t190 - t726;
t592 = -t726 / 0.2e1 + t159 / 0.2e1;
t16 = (t797 - t592) * t496 + t551 * t493;
t769 = qJD(2) * t16;
t14 = ((t159 - t190) * t496 + (t160 - t189) * t493) * t454;
t768 = t14 * qJD(2);
t759 = t190 * t493;
t15 = -t759 / 0.2e1 + t592 * t493 + t551 * t496;
t767 = t15 * qJD(2);
t766 = t159 * t536;
t765 = t159 * t496;
t764 = t160 * t493;
t763 = t189 * t536;
t762 = t189 * t493;
t761 = t189 * t496;
t760 = t190 * t536;
t758 = t190 * t496;
t757 = t194 * t496;
t195 = -t833 + t322;
t756 = t195 * t493;
t219 = -t468 * t536 + t828;
t755 = t219 * t493;
t754 = t219 * t496;
t753 = t220 * t493;
t752 = t220 * t496;
t751 = t257 * t536;
t745 = t313 * t468;
t734 = t385 * t389;
t733 = t385 * t454;
t728 = t389 * t493;
t725 = t454 * t482;
t555 = (t783 + t784) * t722;
t518 = -t555 + t624;
t161 = t447 + t195;
t547 = t161 * t782 + t162 * t779;
t50 = t518 + t547;
t710 = t50 * qJD(2);
t58 = (t791 + t794) * t454 - t595;
t707 = t58 * qJD(2);
t623 = t724 / 0.2e1;
t517 = -t555 + t623;
t545 = -t757 / 0.2e1 - t756 / 0.2e1;
t63 = t517 + t545;
t706 = t63 * qJD(2);
t470 = t492 ^ 2 * t495 * t498;
t97 = t390 * t537 - t470 + t746;
t704 = t97 * qJD(1);
t702 = t753 / 0.2e1 + t448 * t615;
t701 = t831 * t313 * t482;
t698 = t712 / 0.2e1 + t841;
t622 = t718 / 0.2e1;
t695 = t711 / 0.2e1 + t493 * t622;
t694 = -t711 / 0.2e1 - t643 / 0.2e1;
t693 = t454 * t784 + t489 * t785;
t273 = t646 * t496;
t690 = qJD(2) * t273;
t686 = qJD(2) * t492;
t685 = qJD(2) * t495;
t684 = qJD(2) * t497;
t683 = qJD(3) * t152;
t681 = qJD(3) * t493;
t680 = qJD(3) * t494;
t678 = qJD(3) * t497;
t677 = qJD(3) * t498;
t676 = qJD(4) * t341;
t675 = qJD(4) * t493;
t674 = qJD(4) * t496;
t673 = qJD(5) * t152;
t672 = qJD(5) * t189;
t671 = qJD(5) * t536;
t668 = qJD(6) * t493;
t221 = -t470 + (t441 * t494 + t442 * t497) * t717;
t665 = t221 * qJD(1);
t642 = -t770 / 0.2e1;
t529 = t454 * t642 + t491 * t787;
t295 = (-t494 / 0.2e1 + t529) * pkin(3);
t663 = t295 * qJD(2);
t662 = t646 * qJD(2);
t339 = (t487 / 0.2e1 + t783) * t454;
t661 = t339 * qJD(5);
t659 = t343 * qJD(2);
t333 = t345 * qJD(2);
t658 = t346 * qJD(2);
t350 = -t435 - t436;
t656 = t350 * qJD(2);
t655 = t647 * qJD(2);
t449 = t611 / 0.2e1 + t719 / 0.2e1;
t654 = t449 * qJD(2);
t443 = t536 * qJD(6);
t475 = t489 - t487;
t650 = t475 * qJD(5);
t488 = t494 ^ 2;
t490 = t497 ^ 2;
t476 = t490 - t488;
t649 = t476 * qJD(2);
t648 = t496 * qJD(6);
t645 = pkin(2) * t494 * qJD(2);
t644 = pkin(2) * t684;
t438 = t776 / 0.2e1;
t617 = -t345 / 0.2e1;
t641 = -t753 / 0.2e1 + t448 * t616 + t482 * t617;
t640 = t438 + t698;
t639 = t536 * t670;
t638 = t454 * t669;
t637 = t482 * t670;
t635 = t493 * t648;
t634 = t536 * t652;
t381 = t536 * t651;
t633 = t492 * t685;
t632 = t498 * t686;
t478 = t493 * t669;
t631 = t493 * t652;
t630 = t454 * t668;
t477 = t493 * t679;
t629 = t494 * t678;
t628 = t496 * t652;
t621 = -t717 / 0.2e1;
t620 = t717 / 0.2e1;
t619 = -t343 / 0.2e1;
t614 = -t159 / 0.2e1 + t797;
t609 = (t488 + t490) * t498;
t262 = t449 + t693;
t608 = qJD(2) * t262 + t477;
t282 = qJD(2) * t339 - t477;
t408 = t496 * t451 * t493 * qJD(2);
t222 = qJD(3) * t339 + t408;
t366 = t536 * t628;
t607 = -qJD(3) * t341 - t366;
t604 = t493 * t628;
t603 = t493 * t430;
t602 = t451 * t478;
t601 = t454 * t626 + t751 / 0.2e1;
t600 = t313 * t619 - t751 / 0.2e1;
t598 = -t776 / 0.2e1 - t834 / 0.2e1;
t594 = 0.2e1 * t603;
t589 = -t366 + t638;
t11 = t159 * t161 + t160 * t162 + t219 * t220;
t548 = t765 / 0.2e1 + t764 / 0.2e1;
t500 = t161 * t795 + t219 * t836 + t220 * t794 + t257 * t798 - t313 * t548;
t2 = t500 + t847;
t587 = t2 * qJD(1) + t11 * qJD(2);
t12 = -t159 * t189 + t160 * t190 + t220 * t334;
t508 = t257 * t614 + t258 * t613 + t313 * t790;
t553 = t323 * pkin(5) / 0.2e1 + t324 * t799;
t6 = t508 + t553;
t586 = t6 * qJD(1) + t12 * qJD(2);
t24 = -t189 * t194 + t190 * t195 + t828 * t385;
t544 = t537 * t788 + t838;
t546 = t758 / 0.2e1 + t762 / 0.2e1;
t499 = -t546 * t313 - t257 * t194 / 0.2e1 + t195 * t795 + t544;
t4 = t499 + t848;
t585 = t4 * qJD(1) + t24 * qJD(2);
t13 = -t160 * t345 - t162 * t346 + (t161 * t454 + t766) * t493;
t583 = -t13 * qJD(2) + t821;
t19 = (t159 - t754) * t454 - (t161 + t752) * t536;
t377 = t728 / 0.2e1;
t534 = t258 * t786 - t835;
t520 = t313 * t617 + t537 * t616 - t534;
t39 = t377 + t520;
t582 = t39 * qJD(1) + t19 * qJD(2);
t20 = (-t160 + t755) * t454 - (-t162 - t753) * t536;
t581 = t20 * qJD(2) + t822;
t21 = (t756 + t757) * t454 - (-t759 + t761) * t536;
t580 = -t21 * qJD(2) + t821;
t28 = t220 * t454 - (-t764 - t765) * t536;
t579 = qJD(2) * t28 + t823;
t61 = t733 - (-t758 - t762) * t536;
t578 = qJD(2) * t61 + t823;
t47 = (-t189 + t736) * t454 - (t194 - t834) * t536;
t577 = t47 * qJD(2) + t822;
t378 = -t728 / 0.2e1;
t521 = t537 * t615 + t534 + t835;
t42 = t378 + t521;
t48 = (-t190 + t735) * t454 - (-t195 - t833) * t536;
t576 = t42 * qJD(1) + t48 * qJD(2);
t575 = t58 * qJD(1);
t59 = t760 + (t334 * t493 + t752) * t454;
t574 = qJD(2) * t59 - t820;
t60 = t763 + (-t334 * t496 + t753) * t454;
t74 = t600 + t695;
t573 = qJD(1) * t74 - qJD(2) * t60;
t68 = -t220 * t346 - t766;
t71 = t599 + t697;
t572 = -qJD(1) * t71 + qJD(2) * t68;
t571 = t161 * t496 + t162 * t493;
t570 = -t194 * t493 + t195 * t496;
t569 = -t448 * t536 + t725;
t568 = t483 * t536 - t725;
t104 = -t343 * t385 - t763;
t75 = t601 + t694;
t566 = -qJD(1) * t75 + qJD(2) * t104;
t105 = t346 * t385 + t760;
t565 = qJD(2) * t105 - t820;
t114 = t484 * t775;
t510 = -t385 * t791 - t544 + t838;
t530 = t390 * t491 / 0.2e1 + t389 * t642;
t22 = (t494 * t620 + t530) * pkin(3) + t510;
t564 = -t22 * qJD(1) + t114 * qJD(2);
t25 = (-t723 / 0.2e1 - pkin(5) / 0.2e1) * t454 + (t789 + t593) * t496 + t598 + t702;
t359 = -t448 * t493 - t468 * t496;
t563 = -qJD(2) * t25 + qJD(3) * t359;
t561 = t605 * t493;
t543 = t537 * t787 + t627;
t115 = t622 - t543;
t163 = t536 * t828 + t733;
t560 = -qJD(1) * t115 + qJD(2) * t163;
t275 = (t785 - t449) * t717;
t320 = t454 * t484 - t536 * t775;
t559 = -qJD(1) * t275 + qJD(2) * t320;
t528 = -t610 / 0.2e1 + t720 / 0.2e1;
t276 = (t787 + t528) * t717;
t321 = t454 * t775 + t484 * t536;
t558 = -qJD(1) * t276 + qJD(2) * t321;
t153 = (t779 - t780) * t313;
t557 = -qJD(3) * t153 - qJD(5) * t257;
t556 = -qJD(5) * t468 - t668;
t554 = pkin(5) * t798 + t161 * t799;
t552 = t713 / 0.2e1 - t778 / 0.2e1;
t67 = t640 + t641;
t541 = -qJD(2) * t67 + t448 * t681;
t396 = t482 * t618;
t90 = t396 + (t623 + t789) * t496 + (t788 - t385 / 0.2e1) * t493;
t540 = -qJD(2) * t90 - t483 * t681;
t155 = t454 * t561;
t279 = qJD(5) * t449 - t634;
t538 = -qJD(5) * t153 - t537 * t681;
t437 = t489 * t451;
t351 = t451 * t487 - t437;
t246 = -qJD(2) * t351 + t594;
t367 = -qJD(3) * t475 + 0.2e1 * t604;
t533 = qJD(3) * t271 - t536 * t638;
t532 = t552 * t313;
t523 = qJD(5) * t351 - t536 * t594;
t45 = t745 / 0.2e1 - t532;
t501 = (t493 * t614 + t496 * t613) * t482 + t468 * t796 + t448 * t790;
t8 = t501 + t554;
t522 = t448 * t468 * qJD(3) + t45 * qJD(1) - t8 * qJD(2);
t515 = -qJD(5) * t588 + t648;
t365 = t437 + t450;
t514 = qJD(2) * t365 + t603 - t671;
t479 = t494 * t684;
t445 = t536 * qJD(3);
t432 = t449 * qJD(3);
t429 = t493 * t651;
t409 = t496 * t630;
t405 = t605 * qJ(6);
t388 = qJD(3) * t487 + t604;
t337 = t350 * qJD(4);
t335 = t350 * qJD(3);
t332 = t345 * qJD(5);
t294 = t775 / 0.2e1 + t529 * pkin(3);
t293 = -t333 + t669;
t278 = -t449 * t717 + t454 * t621;
t277 = t528 * t717 - t536 * t620;
t263 = -t449 + t693;
t260 = t381 * t489 - t602;
t259 = t381 * t487 + t602;
t247 = t496 * t155;
t193 = -t489 * t634 - t661;
t192 = qJD(3) * t345 - t536 * t631;
t191 = -t487 * t634 + t661;
t178 = t190 * qJD(5);
t164 = qJD(3) * t273 + t454 * t639;
t156 = -t332 - t690;
t143 = -t661 - (-t489 * t652 - t477) * t536;
t142 = t661 - (-t487 * t652 + t477) * t536;
t127 = t429 + t690;
t116 = t622 + t543;
t91 = t483 * t615 + t396 + t698 + t841;
t89 = t512 - t700;
t78 = t535 + t697;
t77 = t600 + t694;
t76 = t601 + t695;
t66 = -t712 / 0.2e1 + t598 + t641;
t62 = t517 - t545;
t57 = t58 * qJD(3);
t49 = t518 - t547;
t46 = -t745 / 0.2e1 - t532;
t41 = t377 + t521;
t40 = t378 + t520;
t33 = t504 - t837;
t26 = t468 * t619 + t496 * t593 + t438 + t640 + t702;
t23 = pkin(3) * t530 + t621 * t775 - t510;
t18 = -t761 / 0.2e1 + t159 * t782 + t759 / 0.2e1 + t160 * t779 - (t716 / 0.2e1 + t774 / 0.2e1) * t536;
t17 = t536 * t552 - t546 + t548;
t7 = t501 - t554;
t5 = t508 - t553;
t3 = t499 - t848;
t1 = t500 - t847;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t221, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t97, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t633, -t632, 0, 0, 0, 0, 0, 0, 0, 0 (-t494 * t677 - t495 * t684) * t492 (t494 * t685 - t497 * t677) * t492, t609 * t686, t665 + (-pkin(2) * t495 + pkin(8) * t609) * t686, 0, 0, 0, 0, 0, 0, qJD(3) * t278 - t536 * t633, qJD(3) * t277 + t454 * t633 (t389 * t454 + t390 * t536) * qJD(2) + t57, t704 + (t390 * t828 + t484 * t718 + t734) * qJD(2) + t23 * qJD(3) + t116 * qJD(4), 0, 0, 0, 0, 0, 0, t800, t41 * qJD(3) + t77 * qJD(5) + t816, t803 (t189 * t323 + t190 * t324 + t734) * qJD(2) + t3 * qJD(3) + t830, 0, 0, 0, 0, 0, 0, t800, t803, t40 * qJD(3) + t76 * qJD(5) - t816 (t159 * t324 + t160 * t323 + t220 * t389) * qJD(2) + t1 * qJD(3) + t5 * qJD(5) + t78 * qJD(6) + t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t442 * qJD(3) - t494 * t632, t441 * qJD(3) - t497 * t632, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t278 - qJD(3) * t537, qJD(2) * t277 + t682, t707, t23 * qJD(2) + (-t313 * t491 - t537 * t770) * t772, 0, 0, 0, 0, 0, 0, t805, qJD(2) * t41 - t538, t806, t812 + t3 * qJD(2) + (t483 * t537 - t701) * qJD(3), 0, 0, 0, 0, 0, 0, t805, t806, qJD(2) * t40 + t538, t812 + t1 * qJD(2) + (t448 * t537 - t701) * qJD(3) + t46 * qJD(5) - t151 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t818, 0, 0, 0, 0, 0, 0, 0, 0, 0, t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t804, qJD(2) * t77 - t557, 0, 0, 0, 0, 0, 0, 0, 0, t804, 0, qJD(2) * t76 + t557, t5 * qJD(2) + t46 * qJD(3) + (-pkin(5) * t258 - qJ(6) * t257) * qJD(5) + t258 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t78 - t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t665, 0, 0, 0, 0, 0, 0, -t275 * qJD(3), -t276 * qJD(3), t57, -qJD(3) * t22 - qJD(4) * t115 - t704, 0, 0, 0, 0, 0, 0, t801, qJD(3) * t42 - qJD(5) * t75, t815, qJD(3) * t4 + t829, 0, 0, 0, 0, 0, 0, t801, t815, qJD(3) * t39 - qJD(5) * t74, qJD(3) * t2 + qJD(5) * t6 - qJD(6) * t71 + t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t629, t476 * qJD(3), 0, -t629, 0, 0, -pkin(2) * t680, -pkin(2) * t678, 0, 0, t381, -t646 * qJD(3), 0, -t381, 0, 0, t320 * qJD(3), t321 * qJD(3), -qJD(4) * t647, qJD(3) * t114 + qJD(4) * t163, t260, t523, t164, t259, -t533, -t381, qJD(3) * t47 + qJD(5) * t105 - t842, qJD(3) * t48 + qJD(5) * t104 - t843, -qJD(3) * t21, qJD(3) * t24 + qJD(4) * t61, t260, t164, -t523, -t381, t533, t259, qJD(3) * t20 + qJD(5) * t59 - t451 * t635 - t842, -qJD(3) * t13 - qJD(5) * t14 + t536 * t630, qJD(3) * t19 + qJD(5) * t60 + qJD(6) * t365 + t843, qJD(3) * t11 + qJD(4) * t28 + qJD(5) * t12 + qJD(6) * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, t649, t678, -t479, -t680, 0, -pkin(8) * t678 - t645, pkin(8) * t680 - t644, 0, 0, t634, -t662, t445, -t634, -t651, 0, -qJD(3) * t828 + t559, qJD(3) * t385 + t558 (-t454 * t491 - t536 * t770) * t772 + t575 (-t385 * t491 - t770 * t828) * t772 + t294 * qJD(4) + t564, t143, t809, t127, t142, -t826, t279 (t493 * t568 - t735) * qJD(3) + t91 * qJD(5) + t577 (t496 * t568 + t736) * qJD(3) + t89 * qJD(5) + t576, qJD(3) * t570 + t580 (t482 * t570 + t483 * t828) * qJD(3) + t62 * qJD(4) + t585, t143, t127, -t809, t279, t826, t142 (-t493 * t569 - t754) * qJD(3) + t26 * qJD(5) + t263 * qJD(6) + t581, qJD(3) * t571 + t18 * qJD(5) + t583 (t496 * t569 - t755) * qJD(3) + t33 * qJD(5) + t409 + t582 (t219 * t448 + t482 * t571) * qJD(3) + t49 * qJD(4) + t7 * qJD(5) + t66 * qJD(6) + t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t655, qJD(3) * t294 + t560, 0, 0, 0, 0, 0, 0, -t844, -t845, 0, qJD(3) * t62 + t578, 0, 0, 0, 0, 0, 0, -t844, 0, t845, qJD(3) * t49 + qJD(5) * t17 + t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, -t246, -t155, t222, -t589, t432, qJD(3) * t91 - t178 + t565, qJD(3) * t89 + t566 + t672, 0, 0, -t222, -t155, t246, t432, t589, t222, qJD(3) * t26 - t178 + t574, t18 * qJD(3) + qJD(5) * t596 - t630 - t768, qJD(3) * t33 - t443 - t573 - t672, t7 * qJD(3) + t17 * qJD(4) + (-pkin(5) * t190 - qJ(6) * t189) * qJD(5) + t159 * qJD(6) + t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t263 - t408, -t155, t514, qJD(3) * t66 + qJD(5) * t159 + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275 * qJD(2), t276 * qJD(2), -t707, qJD(2) * t22, 0, 0, 0, 0, 0, 0, t808, -qJD(2) * t42 - t673, -t817, -qJD(2) * t4 - t812, 0, 0, 0, 0, 0, 0, t808, -t817, -qJD(2) * t39 + t673, -qJD(2) * t2 - qJD(5) * t45 + qJD(6) * t150 - t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t479, -t649, 0, t479, 0, 0, t645, t644, 0, 0, -t634, t662, 0, t634, 0, 0, -qJD(4) * t454 - t559, -qJD(4) * t536 - t558, -t575, qJD(4) * t295 - t564, t193, -0.2e1 * t247, t156, t191, t827, -t279, qJD(5) * t90 - t454 * t674 - t577, qJD(4) * t343 + qJD(5) * t88 - t576, -t337 - t580, qJD(4) * t63 - t585, t193, t156, 0.2e1 * t247, -t279, -t827, t191, -qJD(4) * t346 + qJD(5) * t25 + qJD(6) * t262 - t581, -qJD(5) * t15 - qJD(6) * t345 - t337 - t583, qJD(5) * t34 - t454 * t675 + t409 - t582, qJD(4) * t50 + qJD(5) * t8 + qJD(6) * t67 - t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, t650, 0, -t478, 0, 0, t483 * t670, t483 * t669, 0, 0, t478, 0, -t650, 0, 0, -t478, -qJD(5) * t359 + t635, 0, -qJD(5) * t358 + qJD(6) * t487, t556 * t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t652, -t653, 0, t663, 0, 0, 0, 0, 0, 0, -t628, t659, -t656, t706, 0, 0, 0, 0, 0, 0, -t658, -t656, -t631, t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t282, -t367, t293, t282, -t291, -t654, -t540 + t590, t637 - t824, 0, 0, -t282, t293, t367, -t654, t291, t282, -t563 + t590, t515 - t767, -t637 - t825, t482 * t515 - t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t608, t293, t388, -t541 - t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t819, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t651, t445, t655, -qJD(3) * t295 - t560, 0, 0, 0, 0, 0, 0, t328 + t430 + t844, -qJD(3) * t343 + t536 * t669 + t845, t335, -qJD(3) * t63 - t578, 0, 0, 0, 0, 0, 0, qJD(3) * t346 + t639 + t844, t335, -t332 + t429 - t845, -qJD(3) * t50 - qJD(5) * t16 - qJD(6) * t341 - t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t652, t653, 0, -t663, 0, 0, 0, 0, 0, 0, t628, -t659, t656, -t706, 0, 0, 0, 0, 0, 0, t658, t656, t631, -t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t605 * t496, 0, 0, 0, 0, 0, 0, 0, 0, -t561, 0, t293, -t556 - t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t807, qJD(2) * t75 + t683, 0, 0, 0, 0, 0, 0, 0, 0, t807, 0, qJD(2) * t74 - t683, -qJD(2) * t6 + qJD(3) * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, t246, t192, -t222, t607, t432, -qJD(3) * t90 - t565 - t676, -qJD(3) * t88 - t536 * t674 - t566, 0, 0, t222, t192, -t246, t432, -t607, -t222, -qJD(3) * t25 - t536 * t675 - t574, qJD(3) * t15 + t768, -qJD(3) * t34 + qJD(4) * t345 - t443 + t573, -qJ(6) * t443 - qJD(3) * t8 + qJD(4) * t16 - t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, t367, t333, -t282, -t660, t654, t667 + t540, t824, 0, 0, t282, t333, -t367, t654, t660, -t282, t667 + t563, t767, t825, t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t660, -t496 * t653, 0, 0, 0, 0, 0, 0, 0, 0, -t493 * t653, 0, t333, t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t605, t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t71 - t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t262 + t408, t192, -t514, qJ(6) * t671 - qJD(3) * t67 - t572 + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t608, t333, -t388, -t667 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t605, -t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
