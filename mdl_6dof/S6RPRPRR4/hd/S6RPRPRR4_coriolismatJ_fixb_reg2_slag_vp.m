% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:46:34
% EndTime: 2019-03-09 03:46:52
% DurationCPUTime: 13.57s
% Computational Cost: add. (13910->579), mult. (25055->757), div. (0->0), fcn. (25010->8), ass. (0->434)
t503 = sin(qJ(3));
t761 = -t503 / 0.2e1;
t502 = sin(qJ(5));
t506 = -pkin(3) - pkin(8);
t790 = pkin(9) - t506;
t437 = t790 * t502;
t501 = sin(qJ(6));
t504 = cos(qJ(5));
t582 = t790 * t504;
t757 = cos(qJ(6));
t577 = -t501 * t437 + t757 * t582;
t772 = t577 / 0.2e1;
t625 = qJD(5) + qJD(6);
t345 = -t437 * t757 - t501 * t582;
t479 = sin(pkin(10)) * pkin(1) + pkin(7);
t505 = cos(qJ(3));
t451 = t505 * t479;
t493 = t505 * pkin(4);
t420 = t451 + t493;
t682 = t504 * t505;
t380 = pkin(5) * t682 + t420;
t614 = t757 * t502;
t690 = t501 * t504;
t428 = t614 + t690;
t398 = t505 * t428;
t481 = pkin(5) * t502 + qJ(4);
t802 = t481 / 0.2e1;
t613 = t757 * t504;
t691 = t501 * t502;
t431 = t613 - t691;
t803 = -t431 / 0.2e1;
t808 = t345 * t761 - t380 * t803 - t398 * t802;
t458 = t505 * t613;
t686 = t502 * t505;
t396 = t501 * t686 - t458;
t806 = -t380 * t428 / 0.2e1 + t396 * t802 + t503 * t772;
t767 = t431 / 0.2e1;
t768 = t428 / 0.2e1;
t193 = t396 * t767 + t398 * t768;
t807 = t625 * t193;
t400 = t420 * t502;
t681 = t505 * qJ(4);
t450 = -t503 * pkin(3) + t681;
t424 = pkin(8) * t503 - t450;
t410 = t504 * t424;
t313 = t410 + t400;
t683 = t504 * t503;
t259 = pkin(9) * t683 + t313;
t615 = t757 * t259;
t567 = -t615 / 0.2e1;
t401 = t420 * t504;
t753 = t505 * pkin(5);
t241 = t753 + t401 + (-pkin(9) * t503 - t424) * t502;
t693 = t501 * t241;
t531 = -t693 / 0.2e1 + t567;
t50 = t531 - t806;
t616 = t757 * t241;
t692 = t501 * t259;
t530 = -t692 / 0.2e1 + t616 / 0.2e1;
t52 = t530 + t808;
t49 = t530 - t808;
t805 = 0.2e1 * t502;
t804 = t345 / 0.2e1;
t770 = t396 / 0.2e1;
t801 = -t577 / 0.2e1;
t669 = t398 * t625;
t480 = -cos(pkin(10)) * pkin(1) - pkin(2);
t754 = t505 * pkin(3);
t535 = t480 - t754;
t517 = -t505 * pkin(8) + t535;
t684 = t504 * qJ(4);
t752 = pkin(4) + t479;
t788 = t502 * t752;
t525 = (-t684 + t788) * t503;
t236 = -pkin(9) * t682 + t504 * t517 + t525;
t617 = t757 * t236;
t519 = t505 * t790 - t480;
t585 = t504 * t752;
t685 = t503 * qJ(4);
t235 = t503 * t585 + (t519 + t685) * t502;
t695 = t501 * t235;
t142 = -t617 - t695;
t689 = t502 * qJ(4);
t540 = -t585 - t689;
t507 = t519 * t502 + (pkin(5) - t540) * t503;
t199 = t757 * t507;
t694 = t501 * t236;
t136 = -t199 + t694;
t618 = t757 * t235;
t143 = t618 - t694;
t784 = t136 + t143;
t548 = t784 * t768;
t457 = t503 * t613;
t687 = t502 * t503;
t395 = t501 * t687 - t457;
t397 = t428 * t503;
t622 = t757 / 0.2e1;
t763 = t501 / 0.2e1;
t791 = (t395 * t763 + t397 * t622) * pkin(5);
t798 = t142 * t767 + t548 + t791;
t418 = t431 * qJD(6);
t699 = t431 * t503;
t594 = t699 / 0.2e1;
t593 = t501 * t761;
t667 = t502 * t593 + t457 / 0.2e1;
t565 = t594 + t667;
t779 = t565 * qJD(1);
t797 = -t431 * qJD(5) - t418 - t779;
t137 = t501 * t507 + t617;
t774 = t137 / 0.2e1;
t589 = t774 + t142 / 0.2e1;
t11 = -t431 * t589 - t548 + t791;
t558 = t395 * t428 + t397 * t431;
t796 = qJD(4) * t558;
t652 = qJD(3) * t431;
t795 = -qJD(1) * t193 + t428 * t652;
t658 = qJD(1) * t398;
t794 = -qJD(3) * t193 + t396 * t658;
t529 = -t614 / 0.2e1 - t690 / 0.2e1;
t518 = t768 + t529;
t301 = t518 * t503;
t638 = t301 * qJD(2);
t793 = t577 * t625 - t638;
t792 = t625 * t345;
t575 = t625 * t428;
t789 = t431 * t575;
t680 = t505 * t506;
t747 = pkin(5) * qJD(5);
t787 = (t428 * t757 - t431 * t501) * t747;
t524 = t480 + t680;
t261 = t502 * t524 + t503 * t540;
t262 = t504 * t524 + t525;
t163 = (t261 * t502 + t262 * t504) * t503;
t786 = t565 * t625;
t592 = t687 / 0.2e1;
t304 = t594 + t501 * t592 - t457 / 0.2e1;
t785 = t625 * t304;
t497 = t502 ^ 2;
t499 = t504 ^ 2;
t666 = t497 + t499;
t637 = t304 * qJD(2);
t651 = qJD(3) * t481;
t782 = qJD(1) * t49 - t431 * t651 - t637;
t756 = pkin(5) * t504;
t295 = t428 * t756 + t431 * t481;
t759 = t504 / 0.2e1;
t762 = t502 / 0.2e1;
t35 = (t396 * t759 + (t428 * t762 + t622) * t505) * pkin(5) + t49;
t781 = qJD(1) * t35 - qJD(3) * t295 - t637;
t780 = qJD(3) * t565;
t777 = t396 * t772 + t398 * t804;
t465 = t497 - t499;
t628 = t505 * qJD(1);
t609 = t504 * t628;
t527 = qJD(3) * t465 + t609 * t805;
t773 = -t143 / 0.2e1;
t771 = -t345 / 0.2e1;
t769 = -t398 / 0.2e1;
t766 = t458 / 0.2e1;
t765 = -t497 / 0.2e1;
t764 = -t501 / 0.2e1;
t760 = t503 / 0.2e1;
t758 = t505 / 0.2e1;
t755 = t501 * pkin(5);
t587 = t801 + t772;
t588 = t804 + t771;
t59 = t428 * t587 + t431 * t588;
t751 = t59 * qJD(5);
t727 = t137 * t431;
t113 = t727 / 0.2e1;
t114 = -t727 / 0.2e1;
t619 = t114 + t777;
t7 = t113 + t619 - t777;
t746 = qJD(1) * t7;
t745 = qJD(3) * t7;
t18 = t113 + t114;
t736 = qJD(1) * t18;
t624 = pkin(5) * t686;
t711 = t380 * t398;
t60 = t142 * t503 + t396 * t624 - t711;
t735 = qJD(1) * t60;
t267 = t380 * t396;
t61 = t143 * t503 - t398 * t624 - t267;
t734 = qJD(1) * t61;
t67 = -t136 * t503 - t267;
t733 = qJD(1) * t67;
t68 = -t137 * t503 - t711;
t732 = qJD(1) * t68;
t729 = qJD(4) * t18;
t591 = -t686 / 0.2e1;
t573 = pkin(5) * t591;
t13 = t503 * t573 + (t773 - t136 / 0.2e1) * t398 + t589 * t396;
t728 = t13 * qJD(1);
t151 = t616 - t692;
t726 = t151 * t431;
t152 = t615 + t693;
t725 = t152 * t428;
t16 = (t137 + t142) * t398 + t784 * t396;
t724 = t16 * qJD(1);
t29 = -t136 * t397 + t137 * t395;
t19 = t151 * t398 + t152 * t396 - t29;
t723 = t19 * qJD(1);
t379 = (-t752 - t756) * t503;
t27 = -t136 * t505 + t151 * t503 - t379 * t396 + t380 * t395;
t722 = t27 * qJD(1);
t28 = t137 * t505 + t152 * t503 + t379 * t398 - t380 * t397;
t721 = t28 * qJD(1);
t688 = t502 * t424;
t312 = t401 - t688;
t720 = t312 * t504;
t719 = t313 * t502;
t708 = t380 * t504;
t707 = t395 * t345;
t706 = t395 * t398;
t704 = t397 * t577;
t703 = t397 * t396;
t340 = t397 * t428;
t42 = (t517 * t762 + pkin(9) * t591 + t235 / 0.2e1 + (-pkin(5) - t689 / 0.2e1 - t585 / 0.2e1) * t503) * t501;
t702 = t42 * qJD(1);
t701 = t428 * t481;
t700 = t431 * t395;
t623 = -t757 / 0.2e1;
t536 = -t199 / 0.2e1 + pkin(5) * t503 * t623;
t44 = t618 / 0.2e1 + t536;
t698 = t44 * qJD(1);
t55 = -t312 * t686 + t313 * t682 - t163;
t679 = t55 * qJD(1);
t153 = -t428 * t396 + t431 * t398;
t677 = t625 * t153;
t673 = t301 * qJD(4);
t590 = t683 / 0.2e1;
t300 = t428 * t760 + t501 * t590 + t592 * t757;
t672 = t300 * qJD(4);
t671 = t625 * t301;
t670 = t625 * t300;
t498 = t503 ^ 2;
t500 = t505 ^ 2;
t466 = t498 - t500;
t665 = qJD(1) * t163;
t175 = -t706 / 0.2e1 + t703 / 0.2e1;
t664 = qJD(1) * t175;
t176 = t395 * t396 + t397 * t398;
t663 = qJD(1) * t176;
t190 = -t261 * t503 + t420 * t682;
t662 = qJD(1) * t190;
t191 = -t262 * t503 - t420 * t686;
t661 = qJD(1) * t191;
t256 = t397 * t503 - t398 * t505;
t660 = qJD(1) * t256;
t659 = qJD(1) * t396;
t430 = t466 * t502;
t657 = qJD(1) * t430;
t433 = t466 * t504;
t656 = qJD(1) * t433;
t655 = qJD(1) * t503;
t654 = qJD(1) * t504;
t653 = qJD(3) * t428;
t650 = qJD(4) * t502;
t649 = qJD(4) * t503;
t648 = qJD(4) * t504;
t647 = qJD(5) * t502;
t646 = qJD(5) * t503;
t645 = qJD(5) * t504;
t644 = qJD(5) * t506;
t583 = t752 * t505;
t107 = -t261 * t505 + (t312 + (-t583 - t420) * t504) * t503;
t643 = t107 * qJD(1);
t108 = t262 * t505 - t420 * t687 + (-t502 * t583 + t313) * t503;
t642 = t108 * qJD(1);
t177 = t703 + t706;
t641 = t177 * qJD(1);
t255 = -t395 * t503 + t396 * t505;
t640 = t255 * qJD(1);
t271 = t300 * qJD(1);
t639 = t300 * qJD(3);
t272 = t301 * qJD(3);
t417 = t535 - t685;
t338 = t417 * t505 - t450 * t503;
t636 = t338 * qJD(1);
t339 = -t417 * t503 - t450 * t505;
t635 = t339 * qJD(1);
t579 = t503 * t666;
t399 = t505 * t579;
t634 = t399 * qJD(1);
t422 = (t499 / 0.2e1 + t765) * t505;
t633 = t422 * qJD(5);
t632 = t466 * qJD(1);
t631 = t498 * qJD(1);
t630 = t502 * qJD(3);
t489 = t503 * qJD(3);
t629 = t504 * qJD(3);
t490 = t505 * qJD(3);
t627 = t505 * qJD(4);
t626 = t505 * qJD(5);
t621 = -t756 / 0.2e1;
t620 = t753 / 0.2e1;
t611 = t397 * t655;
t610 = t398 * t655;
t607 = t479 * t489;
t606 = t502 * t629;
t605 = t502 * t490;
t604 = t428 * t490;
t603 = t502 * t646;
t477 = t502 * t626;
t602 = t503 * t645;
t601 = t504 * t626;
t600 = t395 * t655;
t599 = t417 * t450 * qJD(1);
t598 = t417 * t655;
t597 = t480 * t655;
t596 = t480 * t628;
t472 = t503 * t490;
t475 = t504 * t490;
t595 = t502 * t645;
t476 = t503 * t628;
t586 = t451 / 0.2e1 + t493 / 0.2e1;
t584 = t752 * t503;
t581 = t757 * qJD(5);
t580 = t757 * qJD(6);
t578 = t682 * t805;
t576 = t625 * t396;
t574 = t625 * t503;
t572 = qJD(5) + t655;
t571 = t502 * t476;
t570 = t502 * t475;
t569 = t500 * t595;
t4 = -t396 * t587 - t398 * t588 - t11;
t566 = t4 * qJD(1);
t10 = t152 * t769 + t397 * t774 + t151 * t770 + t136 * t395 / 0.2e1 + t379 * t760 + t380 * t758;
t20 = -t136 * t151 + t137 * t152 + t379 * t380;
t564 = t20 * qJD(1) + t10 * qJD(2);
t21 = -t136 * t142 + t137 * t143 - t380 * t624;
t563 = t21 * qJD(1) + t13 * qJD(2);
t546 = t720 / 0.2e1 + t719 / 0.2e1;
t46 = (-t420 / 0.2e1 + t546) * t505 + (-t262 * t502 / 0.2e1 + t261 * t759 + (pkin(4) / 0.2e1 + t479 / 0.2e1) * t503) * t503;
t54 = -t261 * t312 + t262 * t313 - t420 * t584;
t562 = t54 * qJD(1) - t46 * qJD(2);
t561 = -t11 * qJD(1) + t59 * qJD(3);
t559 = t719 + t720;
t487 = t505 * t503;
t171 = -t176 + t487;
t557 = t10 * qJD(1) + t171 * qJD(2);
t556 = t29 * qJD(1) + t175 * qJD(2);
t360 = -t487 + t399;
t555 = -t46 * qJD(1) - t360 * qJD(2);
t296 = t431 * t756 - t701;
t34 = (t398 * t759 + (t431 * t762 + t764) * t505) * pkin(5) + t50;
t553 = qJD(1) * t34 - qJD(3) * t296;
t198 = t396 ^ 2 - t398 ^ 2;
t65 = qJD(1) * t198 + qJD(3) * t153;
t265 = t428 ^ 2 - t431 ^ 2;
t70 = qJD(1) * t153 + qJD(3) * t265;
t299 = t766 + (-t691 / 0.2e1 + t803) * t505;
t552 = qJD(1) * t299 + t653;
t302 = t518 * t505;
t551 = qJD(1) * t302 + t652;
t550 = -t631 - t646;
t549 = qJD(3) * t450 + t649;
t547 = -t726 / 0.2e1 - t725 / 0.2e1;
t545 = -t340 / 0.2e1 + t700 / 0.2e1;
t544 = t506 * t761 - t681 / 0.2e1;
t542 = qJD(1) * t50 + t428 * t651;
t310 = (t424 / 0.2e1 + t544) * t502;
t539 = -qJ(4) * t629 - t310 * qJD(1);
t526 = t544 * t504;
t311 = t410 / 0.2e1 + t526;
t538 = qJ(4) * t630 - t311 * qJD(1);
t358 = qJD(1) * t422 + t606;
t157 = -t546 + t586;
t403 = (0.1e1 / 0.2e1 + t765 - t499 / 0.2e1) * t503;
t495 = qJD(3) * qJ(4);
t537 = qJD(1) * t157 + qJD(2) * t403 + t495;
t534 = t151 * t622 + t152 * t763;
t532 = t395 * t623 + t397 * t763;
t351 = t500 * t502 * t654 - qJD(3) * t422;
t432 = t465 * t500;
t528 = -qJD(1) * t432 + 0.2e1 * t570;
t185 = t760 + t545;
t510 = t707 / 0.2e1 - t704 / 0.2e1 + t504 * t620 + t586;
t25 = t510 + t547;
t523 = -qJD(1) * t25 - qJD(2) * t185 - t651;
t514 = (-t685 - t754) * qJD(3) + t627;
t511 = t136 * t771 + t142 * t772 + t345 * t773 + t577 * t774;
t2 = (t686 * t802 - t708 / 0.2e1 + t534) * pkin(5) + t511;
t32 = t587 * t398 - t588 * t396 + (-t683 / 0.2e1 + t532) * pkin(5);
t99 = t481 * t756;
t513 = -t2 * qJD(1) - t32 * qJD(2) + t99 * qJD(3) + t59 * qJD(4);
t496 = qJ(4) * qJD(4);
t485 = -t628 / 0.2e1;
t484 = t628 / 0.2e1;
t483 = t490 / 0.2e1;
t474 = t503 * t629;
t473 = t503 * t654;
t471 = t502 * t655;
t453 = t466 * qJD(3);
t436 = t479 * t490;
t427 = -t473 - t645;
t426 = -t471 - t647;
t425 = t476 + t626 / 0.2e1;
t409 = t431 * t490;
t402 = (0.1e1 + t666) * t760;
t390 = t476 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t505;
t306 = -t699 / 0.2e1 + t667;
t303 = t505 * t529 + t769;
t298 = t431 * t758 + t501 * t591 + t766;
t283 = t304 * qJD(4);
t281 = t565 * qJD(4);
t203 = -t400 - t410 / 0.2e1 + t526;
t202 = t401 - t688 / 0.2e1 + t544 * t502;
t195 = -t610 + t780;
t194 = -t396 * t655 + t639;
t184 = t760 - t545;
t180 = -t575 - t271;
t172 = -t576 - t639;
t170 = qJD(3) * t304;
t156 = t546 + t586;
t147 = qJD(3) * t306 + t610 + t669;
t146 = -t272 + (qJD(6) + t572) * t396;
t106 = t669 + t780;
t51 = t531 + t806;
t45 = t694 - t618 / 0.2e1 + t536;
t43 = pkin(5) * t593 - t617 + t507 * t764 - t695 / 0.2e1;
t37 = t398 * t621 + t431 * t573 + t567 + (-t753 / 0.2e1 - t241 / 0.2e1) * t501 + t806;
t36 = t396 * t621 + t428 * t573 + t757 * t620 + t52;
t33 = -t577 * t769 + t398 * t801 + (t532 + t590) * pkin(5);
t26 = qJD(3) * t46;
t24 = t510 - t547;
t17 = t18 * qJD(6);
t12 = t113 + t798;
t6 = t7 * qJD(6);
t5 = t398 * t771 - t577 * t770 + t619 - t798;
t3 = t481 * t573 - t511 + (t708 / 0.2e1 + t534) * pkin(5);
t1 = qJD(3) * t10 + qJD(4) * t175 + qJD(5) * t13;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t472, -t453, 0, -t472, 0, 0, t480 * t489, t480 * t490, 0, 0, 0, 0, 0, t472, -t453, -t472, 0, qJD(3) * t339 - t503 * t627, -qJD(3) * t338 + qJD(4) * t498, -t549 * t417, -t472 * t497 + t569, -qJD(5) * t432 - 0.2e1 * t503 * t570, qJD(3) * t430 - t503 * t601, -t472 * t499 - t569, qJD(3) * t433 + t477 * t503, t472, qJD(3) * t107 + qJD(5) * t191 + t498 * t650, -qJD(3) * t108 - qJD(5) * t190 + t498 * t648, -qJD(3) * t55 + qJD(4) * t399, qJD(3) * t54 - qJD(4) * t163 (-qJD(3) * t397 - t576) * t398, qJD(3) * t177 + t198 * t625, t256 * qJD(3) + t396 * t574 (-qJD(3) * t395 + t669) * t396, t255 * qJD(3) + t398 * t574, t472, qJD(3) * t27 + qJD(5) * t60 + qJD(6) * t68 + t397 * t649, -qJD(3) * t28 - qJD(5) * t61 - qJD(6) * t67 - t395 * t649, qJD(3) * t19 + qJD(4) * t176 + qJD(5) * t16, qJD(3) * t20 + qJD(4) * t29 + qJD(5) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, -t632, t490, -t476, -t489, 0, -t436 + t597, t596 + t607, 0, 0, 0, -t490, t489, t476, -t632, -t476, t514, t436 + t635, -t607 - t636, t479 * t514 - t599, -t633 + (-t497 * t628 + t606) * t503, qJD(5) * t578 - t503 * t527, t475 + t657, t633 + (-t499 * t628 - t606) * t503, -t605 + t656, t425, t643 + (t504 * t680 + (-t684 - t788) * t503) * qJD(3) + t504 * t627 + t202 * qJD(5), -t642 + (-t502 * t680 + (t689 - t585) * t503) * qJD(3) - t502 * t627 + t203 * qJD(5), -qJD(3) * t559 - t679 (-qJ(4) * t584 + t506 * t559) * qJD(3) + t156 * qJD(4) + t562 (t652 - t658) * t397 + t807, t641 + (-t340 - t700) * qJD(3) + t677, t409 + t660 - t671 (t653 - t659) * t395 - t807, t306 * t625 - t604 + t640, t390, t722 + (t379 * t428 + t395 * t481 - t505 * t577) * qJD(3) + t298 * qJD(4) + t36 * qJD(5) + t52 * qJD(6), -t721 + (-t345 * t505 + t379 * t431 + t397 * t481) * qJD(3) + t303 * qJD(4) + t37 * qJD(5) + t51 * qJD(6), t723 + (t704 - t707 - t725 - t726) * qJD(3) - t796 + t5 * qJD(5) + t6 (-t151 * t577 + t152 * t345 + t379 * t481) * qJD(3) + t24 * qJD(4) + t3 * qJD(5) + t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, -t476, t631, t436 - t598, 0, 0, 0, 0, 0, 0, t502 * t631 + t475, t504 * t631 - t605, t634, qJD(3) * t156 - t665, 0, 0, 0, 0, 0, 0, qJD(3) * t298 + t611 - t671, t303 * qJD(3) - t600 - t785, -qJD(3) * t558 + t663, t24 * qJD(3) + t12 * qJD(5) + t17 + t556 + t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, t528, -t572 * t682, -t351, t477 + t571, t483, qJD(3) * t202 - qJD(5) * t262 + t661, qJD(3) * t203 + qJD(5) * t261 - t662, 0, 0, -t794, t65, t146, t794, t147, t483, qJD(3) * t36 + qJD(5) * t142 + qJD(6) * t43 - t673 + t735, qJD(3) * t37 - qJD(5) * t143 + qJD(6) * t45 - t283 - t734, t724 + t5 * qJD(3) + (-t396 * t757 + t398 * t501) * t747, t3 * qJD(3) + t12 * qJD(4) + (t142 * t757 + t143 * t501) * t747 + t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t794, t65, t146, t794, t147, t483, qJD(3) * t52 + qJD(5) * t43 - qJD(6) * t137 - t673 + t732, qJD(3) * t51 + qJD(5) * t45 + qJD(6) * t136 - t283 - t733, t745, t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t489, -t490, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, t490, t549, 0, 0, 0, 0, 0, 0, t602 + t605, t475 - t603, -t666 * t489 (t506 * t579 + t681) * qJD(3) + t402 * qJD(4) + t555, 0, 0, 0, 0, 0, 0, t604 + t786, t409 - t670 (-t340 + t700) * qJD(3) (t345 * t397 + t395 * t577 + t481 * t505) * qJD(3) + t184 * qJD(4) + t33 * qJD(5) + t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t184 + t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477 + t474, -t489 * t502 + t601, 0, 0, 0, 0, 0, 0, 0, 0, t106, t172, 0, t728 + t33 * qJD(3) + (t396 * t501 + t398 * t757) * t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, t632, 0, t476, 0, 0, -t597, -t596, 0, 0, 0, 0, 0, -t476, t632, t476, 0, -t635, t636, t599, t476 * t497 - t633, t572 * t578, -t603 - t657, t476 * t499 + t633, -t602 - t656, -t425, qJD(5) * t310 - t643, qJD(5) * t311 + t642, t679, qJD(4) * t157 - t562, t397 * t658 + t807, -t641 + t677, -t660 - t670, t395 * t659 - t807, -t640 - t786, -t390, qJD(4) * t299 - qJD(5) * t35 - qJD(6) * t49 - t722, qJD(4) * t302 - qJD(5) * t34 - qJD(6) * t50 + t721, -qJD(5) * t4 + t6 - t723, qJD(4) * t25 - qJD(5) * t2 - t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t403 - t555, 0, 0, 0, 0, 0, 0, t785, -t671, 0, qJD(4) * t185 - qJD(5) * t32 - t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t496, -t595, t465 * qJD(5), 0, t595, 0, 0, qJ(4) * t645 + t650, -qJ(4) * t647 + t648, 0, t496, -t789, t625 * t265, 0, t789, 0, 0, qJD(4) * t428 + qJD(5) * t295 + t418 * t481, qJD(4) * t431 + qJD(5) * t296 - qJD(6) * t701, 0, qJD(4) * t481 + qJD(5) * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t495, 0, 0, 0, 0, 0, 0, t630, t629, 0, t537, 0, 0, 0, 0, 0, 0, t552, t551, 0, -t523 + t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358, t527, t426, t358, t427, t485, -t502 * t644 - t539, -t504 * t644 - t538, 0, 0, -t795, t70, t180, t795, t797, t485, -t781 - t792, -t553 + t793, -t566 + t787 (-t345 * t757 - t501 * t577) * t747 + t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t795, t70, t180, t795, t797, t485, -t782 - t792, -t542 + t793, t746, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, -t631, t598, 0, 0, 0, 0, 0, 0, t550 * t502, t550 * t504, -t634, -qJD(3) * t157 + t665, 0, 0, 0, 0, 0, 0, -qJD(3) * t299 - t611 - t670, -t302 * qJD(3) + t600 - t786, -t663, -qJD(3) * t25 - qJD(5) * t11 + t17 - t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t403 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t185 - t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t495, 0, 0, 0, 0, 0, 0, -t630, -t629, 0, -t537, 0, 0, 0, 0, 0, 0, -t552, -t551, 0, t523 + t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, t427, 0, 0, 0, 0, 0, 0, 0, 0, t180, t797, 0, t561 - t787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t797, 0, t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351, -t528 (t609 + t630) * t503, t351, t474 - t571, t483, -qJD(3) * t310 + t502 * t649 - t661, -qJD(3) * t311 + t503 * t648 + t662, 0, 0, t794, -t65, t194, -t794, t195, t483, qJD(3) * t35 + qJD(6) * t42 + t672 - t735, qJD(3) * t34 + qJD(6) * t44 + t281 + t734, qJD(3) * t4 - t724, qJD(3) * t2 + qJD(4) * t11 - t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, t272, 0, qJD(3) * t32 - t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, -t527, t471, -t358, t473, t484, t539, t538, 0, 0, t795, -t70, t271, -t795, t779, t484, t781, t638 + t553, t566, -t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t473, 0, 0, 0, 0, 0, 0, 0, 0, t271, t779, 0, -t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t755, -pkin(5) * t580, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t625 * t755 + t702, t698 + (-t581 - t580) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t794, -t65, t194, -t794, t195, t483, qJD(3) * t49 - qJD(5) * t42 + t672 - t732, qJD(3) * t50 - qJD(5) * t44 + t281 + t733, -t745, -t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, t272, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t795, -t70, t271, -t795, t779, t484, t782, t638 + t542, -t746, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, t779, 0, -t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501 * t747 - t702, pkin(5) * t581 - t698, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
