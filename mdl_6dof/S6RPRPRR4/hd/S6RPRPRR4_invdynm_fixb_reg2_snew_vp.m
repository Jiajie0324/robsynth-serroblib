% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 18:46
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPRR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR4_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR4_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR4_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 18:45:31
% EndTime: 2019-05-05 18:46:00
% DurationCPUTime: 30.70s
% Computational Cost: add. (135195->842), mult. (271842->1062), div. (0->0), fcn. (165344->10), ass. (0->558)
t1457 = sin(qJ(3));
t1447 = t1457 ^ 2;
t1463 = qJD(1) ^ 2;
t1442 = t1447 * t1463;
t1612 = qJD(3) ^ 2;
t1426 = -t1442 - t1612;
t1461 = cos(qJ(3));
t1555 = t1461 * t1463;
t1432 = t1457 * t1555;
t1419 = qJDD(3) - t1432;
t1556 = t1461 * t1419;
t1363 = t1426 * t1457 + t1556;
t1591 = qJD(1) * t1461;
t1438 = qJD(3) * t1591;
t1549 = t1457 * qJDD(1);
t1408 = 0.2e1 * t1438 + t1549;
t1451 = sin(pkin(10));
t1452 = cos(pkin(10));
t1286 = t1363 * t1451 + t1408 * t1452;
t1290 = t1363 * t1452 - t1408 * t1451;
t1458 = sin(qJ(1));
t1462 = cos(qJ(1));
t1670 = pkin(6) * (t1286 * t1458 - t1290 * t1462);
t1669 = pkin(6) * (t1286 * t1462 + t1290 * t1458);
t1668 = pkin(1) * t1286;
t1610 = t1461 ^ 2;
t1443 = t1610 * t1463;
t1428 = -t1443 - t1612;
t1418 = t1432 + qJDD(3);
t1570 = t1418 * t1457;
t1362 = -t1428 * t1461 + t1570;
t1441 = t1461 * qJDD(1);
t1592 = qJD(1) * t1457;
t1540 = qJD(3) * t1592;
t1407 = t1441 - 0.2e1 * t1540;
t1285 = t1362 * t1451 - t1407 * t1452;
t1289 = t1362 * t1452 + t1407 * t1451;
t1667 = pkin(6) * (t1285 * t1458 - t1289 * t1462);
t1666 = pkin(6) * (t1285 * t1462 + t1289 * t1458);
t1665 = qJ(2) * t1286;
t1569 = t1419 * t1457;
t1355 = -t1426 * t1461 + t1569;
t1664 = -pkin(1) * t1355 + qJ(2) * t1290;
t1425 = -t1442 + t1612;
t1557 = t1461 * t1418;
t1357 = -t1425 * t1457 + t1557;
t1309 = t1357 * t1451 - t1452 * t1549;
t1313 = t1357 * t1452 + t1451 * t1549;
t1661 = t1309 * t1462 + t1313 * t1458;
t1660 = t1309 * t1458 - t1313 * t1462;
t1659 = pkin(1) * t1285;
t1658 = qJ(2) * t1285;
t1353 = t1428 * t1457 + t1557;
t1657 = pkin(1) * t1353 + qJ(2) * t1289;
t1427 = t1443 - t1612;
t1360 = -t1427 * t1461 + t1569;
t1312 = t1360 * t1451 + t1452 * t1441;
t1316 = t1360 * t1452 - t1451 * t1441;
t1654 = t1312 * t1462 + t1316 * t1458;
t1653 = t1312 * t1458 - t1316 * t1462;
t1651 = pkin(2) * t1353;
t1650 = pkin(7) * t1353;
t1422 = g(1) * t1462 + g(2) * t1458;
t1405 = -pkin(1) * t1463 - t1422;
t1421 = g(1) * t1458 - t1462 * g(2);
t1492 = qJDD(1) * pkin(1) + t1421;
t1329 = t1451 * t1405 - t1452 * t1492;
t1330 = t1452 * t1405 + t1451 * t1492;
t1524 = t1329 * t1451 + t1452 * t1330;
t1246 = t1329 * t1452 - t1330 * t1451;
t1582 = t1246 * t1458;
t1649 = t1462 * t1524 + t1582;
t1581 = t1246 * t1462;
t1648 = -t1458 * t1524 + t1581;
t1647 = -pkin(2) * t1408 - pkin(7) * t1363;
t1646 = 2 * qJD(4);
t1644 = pkin(2) * t1355;
t1643 = pkin(7) * t1355;
t1455 = sin(qJ(6));
t1456 = sin(qJ(5));
t1460 = cos(qJ(5));
t1399 = qJD(3) * t1456 + t1460 * t1591;
t1401 = qJD(3) * t1460 - t1456 * t1591;
t1459 = cos(qJ(6));
t1326 = t1459 * t1399 + t1401 * t1455;
t1328 = -t1399 * t1455 + t1401 * t1459;
t1257 = t1328 * t1326;
t1409 = t1438 + t1549;
t1387 = qJDD(5) + t1409;
t1381 = qJDD(6) + t1387;
t1628 = -t1257 + t1381;
t1642 = t1455 * t1628;
t1341 = t1401 * t1399;
t1626 = -t1341 + t1387;
t1641 = t1456 * t1626;
t1640 = t1459 * t1628;
t1639 = t1460 * t1626;
t1638 = t1409 + t1438;
t1307 = -t1463 * pkin(2) + qJDD(1) * pkin(7) + t1330;
t1505 = -pkin(3) * t1461 - qJ(4) * t1457;
t1529 = t1463 * t1505 + t1307;
t1448 = g(3) - qJDD(2);
t1559 = t1448 * t1457;
t1467 = -pkin(3) * t1612 + t1461 * t1529 - t1559;
t1466 = qJD(3) * t1646 + t1467;
t1637 = t1466 + (qJDD(3) + t1419) * qJ(4) - pkin(3) * t1426;
t1636 = pkin(2) * t1407 - pkin(7) * t1362;
t1411 = qJDD(1) * t1451 + t1452 * t1463;
t1374 = qJ(2) * t1411 - t1448 * t1452;
t1412 = qJDD(1) * t1452 - t1451 * t1463;
t1499 = -qJ(2) * t1412 - t1448 * t1451;
t1624 = t1462 * t1411 + t1412 * t1458;
t1635 = pkin(6) * t1624 + t1462 * t1374 - t1458 * t1499;
t1336 = -t1411 * t1458 + t1462 * t1412;
t1634 = -pkin(6) * t1336 + t1458 * t1374 + t1462 * t1499;
t1306 = -qJDD(1) * pkin(2) - t1463 * pkin(7) + t1329;
t1503 = -t1441 + t1540;
t1468 = t1503 * pkin(3) - qJ(4) * t1638 + t1306;
t1554 = pkin(4) * t1592 - qJD(3) * pkin(8) + t1646;
t1608 = pkin(3) + pkin(8);
t1193 = -pkin(4) * t1443 - t1441 * pkin(8) + (qJD(3) * t1608 - t1554) * t1592 + t1468;
t1437 = t1461 * t1448;
t1509 = -qJDD(3) * pkin(3) - qJ(4) * t1612 + qJDD(4) + t1437;
t1201 = -qJDD(3) * pkin(8) + (t1409 - t1438) * pkin(4) + (-pkin(8) * t1555 + t1529) * t1457 + t1509;
t1110 = t1193 * t1456 - t1460 * t1201;
t1111 = t1460 * t1193 + t1456 * t1201;
t1629 = -t1460 * t1110 + t1111 * t1456;
t1277 = t1307 * t1457 + t1437;
t1279 = t1307 * t1461 - t1559;
t1205 = t1457 * t1277 + t1461 * t1279;
t1322 = -t1399 * qJD(5) + t1460 * qJDD(3) + t1456 * t1503;
t1521 = qJDD(3) * t1456 - t1460 * t1503;
t1482 = qJD(5) * t1401 + t1521;
t1195 = -t1326 * qJD(6) + t1459 * t1322 - t1455 * t1482;
t1433 = qJD(5) + t1592;
t1424 = qJD(6) + t1433;
t1298 = t1424 * t1326;
t1627 = -t1298 + t1195;
t1376 = t1433 * t1399;
t1625 = -t1376 + t1322;
t1270 = t1376 + t1322;
t1351 = t1427 * t1457 + t1556;
t1243 = t1457 * t1529 + t1509;
t1623 = -pkin(3) * t1418 - qJ(4) * t1428 + t1243;
t1589 = qJDD(3) * qJ(4);
t1200 = -t1503 * pkin(4) - pkin(8) * t1443 + qJD(3) * t1554 + t1467 + t1589;
t1365 = pkin(5) * t1433 - pkin(9) * t1401;
t1611 = t1399 ^ 2;
t1126 = pkin(5) * t1482 - pkin(9) * t1611 + t1365 * t1401 + t1200;
t1070 = pkin(5) * t1626 - pkin(9) * t1270 - t1110;
t1085 = -pkin(5) * t1611 - pkin(9) * t1482 - t1433 * t1365 + t1111;
t1018 = -t1459 * t1070 + t1085 * t1455;
t1019 = t1070 * t1455 + t1085 * t1459;
t981 = -t1018 * t1459 + t1019 * t1455;
t1594 = t1460 * t981;
t982 = t1018 * t1455 + t1459 * t1019;
t970 = -pkin(5) * t1126 + pkin(9) * t982;
t1493 = pkin(9) * t1594 + t1456 * t970;
t948 = t1456 * t982 + t1594;
t1621 = qJ(4) * t1126 - t1608 * t948 - t1493;
t1525 = -t1322 * t1455 - t1459 * t1482;
t1151 = (-qJD(6) + t1424) * t1328 + t1525;
t1153 = t1298 + t1195;
t1082 = t1151 * t1455 - t1153 * t1459;
t1084 = t1151 * t1459 + t1153 * t1455;
t1022 = t1082 * t1460 + t1084 * t1456;
t1324 = t1326 ^ 2;
t1325 = t1328 ^ 2;
t1209 = -t1324 - t1325;
t956 = -pkin(5) * t1209 + pkin(9) * t1084 + t982;
t962 = -pkin(9) * t1082 - t981;
t1532 = t1456 * t956 - t1460 * t962;
t1620 = qJ(4) * t1209 - t1022 * t1608 - t1532;
t1619 = qJ(4) * t1200 - t1608 * t1629;
t1423 = t1424 ^ 2;
t1236 = -t1423 - t1324;
t1141 = t1236 * t1455 + t1640;
t1142 = t1236 * t1459 - t1642;
t1065 = t1141 * t1460 + t1142 * t1456;
t1299 = t1424 * t1328;
t1484 = qJD(6) * t1328 - t1525;
t1149 = t1299 + t1484;
t1586 = t1126 * t1459;
t1028 = -pkin(5) * t1149 + pkin(9) * t1142 - t1586;
t1587 = t1126 * t1455;
t1058 = -pkin(9) * t1141 + t1587;
t1528 = t1028 * t1456 - t1460 * t1058;
t1618 = qJ(4) * t1149 - t1065 * t1608 - t1528;
t1275 = -t1325 - t1423;
t1226 = t1257 + t1381;
t1584 = t1226 * t1455;
t1168 = t1275 * t1459 - t1584;
t1583 = t1226 * t1459;
t1169 = -t1275 * t1455 - t1583;
t1091 = t1168 * t1460 + t1169 * t1456;
t1032 = -pkin(5) * t1627 + pkin(9) * t1169 + t1587;
t1062 = -pkin(9) * t1168 + t1586;
t1527 = t1032 * t1456 - t1460 * t1062;
t1617 = qJ(4) * t1627 - t1091 * t1608 - t1527;
t1267 = (qJD(5) - t1433) * t1401 + t1521;
t1190 = -t1267 * t1456 - t1270 * t1460;
t1386 = t1401 ^ 2;
t1301 = -t1386 - t1611;
t1616 = qJ(4) * t1301 - t1190 * t1608 - t1629;
t1429 = t1433 ^ 2;
t1323 = -t1429 - t1611;
t1228 = t1456 * t1323 + t1639;
t1266 = (qJD(5) + t1433) * t1401 + t1521;
t1585 = t1200 * t1456;
t1615 = qJ(4) * t1266 - t1228 * t1608 + t1585;
t1196 = t1460 * t1200;
t1547 = -t1386 - t1429;
t1304 = t1341 + t1387;
t1558 = t1456 * t1304;
t1238 = t1460 * t1547 - t1558;
t1614 = qJ(4) * t1625 - t1238 * t1608 + t1196;
t1609 = -2 * qJD(4);
t1603 = pkin(4) * t1629;
t1602 = pkin(4) * t1190;
t1601 = pkin(4) * t1200;
t1546 = t1447 + t1610;
t1413 = t1546 * qJDD(1);
t1416 = t1442 + t1443;
t1338 = t1413 * t1451 + t1416 * t1452;
t1339 = t1413 * t1452 - t1416 * t1451;
t1600 = pkin(6) * (t1338 * t1462 + t1339 * t1458);
t1598 = qJ(2) * t1338;
t1595 = t1456 * t981;
t1593 = qJD(1) * qJD(3);
t1580 = t1304 * t1460;
t1577 = t1407 * t1457;
t1347 = t1407 * t1461;
t1574 = t1408 * t1457;
t1573 = t1408 * t1461;
t1568 = t1424 * t1455;
t1567 = t1424 * t1459;
t1562 = t1433 * t1401;
t1561 = t1433 * t1456;
t1560 = t1433 * t1460;
t1296 = t1457 * t1306;
t1297 = t1461 * t1306;
t1552 = -pkin(2) * t1306 + pkin(7) * t1205;
t1551 = -t1386 + t1429;
t1550 = pkin(2) * t1416 + pkin(7) * t1413;
t980 = pkin(5) * t981;
t1545 = -pkin(4) * t948 - t980;
t1544 = t1457 * t1257;
t1543 = t1461 * t1257;
t1542 = t1457 * t1341;
t1541 = t1461 * t1341;
t1539 = t1296 + t1647;
t1538 = -t1297 + t1636;
t1081 = pkin(5) * t1082;
t1533 = -pkin(4) * t1022 - t1081;
t1472 = pkin(4) * t1126 + pkin(9) * t1595 - t1460 * t970;
t949 = t1460 * t982 - t1595;
t924 = -t1608 * t949 + t1472;
t930 = -qJ(4) * t949 - t1545;
t946 = t1126 * t1461 + t1457 * t948;
t1530 = -pkin(2) * t949 + pkin(7) * t946 + t1457 * t930 + t1461 * t924;
t1523 = -t1421 * t1458 - t1462 * t1422;
t1003 = t1022 * t1457 + t1209 * t1461;
t1024 = -t1456 * t1082 + t1084 * t1460;
t1477 = pkin(4) * t1209 - t1456 * t962 - t1460 * t956;
t939 = -t1024 * t1608 + t1477;
t964 = -qJ(4) * t1024 - t1533;
t1520 = -pkin(2) * t1024 + pkin(7) * t1003 + t1457 * t964 + t1461 * t939;
t1031 = t1065 * t1457 + t1149 * t1461;
t1066 = -t1456 * t1141 + t1142 * t1460;
t1476 = pkin(4) * t1149 - t1028 * t1460 - t1058 * t1456;
t958 = -t1066 * t1608 + t1476;
t1502 = pkin(5) * t1141 - t1018;
t1478 = -pkin(4) * t1065 - t1502;
t972 = -qJ(4) * t1066 - t1478;
t1519 = -pkin(2) * t1066 + pkin(7) * t1031 + t1457 * t972 + t1461 * t958;
t1041 = t1091 * t1457 + t1461 * t1627;
t1092 = -t1456 * t1168 + t1169 * t1460;
t1475 = pkin(4) * t1627 - t1032 * t1460 - t1062 * t1456;
t968 = -t1092 * t1608 + t1475;
t1483 = pkin(5) * t1168 - t1019;
t1470 = -pkin(4) * t1091 - t1483;
t976 = -qJ(4) * t1092 - t1470;
t1518 = -pkin(2) * t1092 + pkin(7) * t1041 + t1457 * t976 + t1461 * t968;
t1027 = t1200 * t1461 + t1457 * t1629;
t1037 = t1456 * t1110 + t1111 * t1460;
t990 = -t1037 * t1608 + t1601;
t992 = -qJ(4) * t1037 + t1603;
t1517 = -pkin(2) * t1037 + pkin(7) * t1027 + t1457 * t992 + t1461 * t990;
t1192 = -t1267 * t1460 + t1456 * t1270;
t1474 = pkin(4) * t1301 - t1037;
t1000 = -t1192 * t1608 + t1474;
t1102 = -qJ(4) * t1192 + t1602;
t1133 = t1190 * t1457 + t1301 * t1461;
t1516 = -pkin(2) * t1192 + pkin(7) * t1133 + t1461 * t1000 + t1457 * t1102;
t1515 = t1451 * t1432;
t1514 = t1452 * t1432;
t1229 = t1323 * t1460 - t1641;
t1491 = -pkin(4) * t1228 + t1110;
t1053 = -qJ(4) * t1229 - t1491;
t1501 = pkin(4) * t1266 + t1196;
t1069 = -t1229 * t1608 + t1501;
t1163 = t1228 * t1457 + t1266 * t1461;
t1513 = -pkin(2) * t1229 + pkin(7) * t1163 + t1457 * t1053 + t1461 * t1069;
t1239 = -t1456 * t1547 - t1580;
t1508 = -pkin(4) * t1238 + t1111;
t1055 = -qJ(4) * t1239 - t1508;
t1500 = pkin(4) * t1625 - t1585;
t1077 = -t1239 * t1608 + t1500;
t1172 = t1238 * t1457 + t1461 * t1625;
t1512 = -pkin(2) * t1239 + pkin(7) * t1172 + t1457 * t1055 + t1461 * t1077;
t1237 = t1466 + t1589;
t1220 = pkin(3) * t1416 + t1237;
t1222 = qJ(4) * t1416 + t1243;
t1511 = t1461 * t1220 + t1457 * t1222 + t1550;
t1510 = t1550 + t1205;
t1415 = qJDD(1) * t1462 - t1458 * t1463;
t1507 = -pkin(6) * t1415 - g(3) * t1458;
t1506 = -pkin(3) * t1243 + qJ(4) * t1237;
t1504 = pkin(3) * t1457 - qJ(4) * t1461;
t1497 = -t1149 * t1455 + t1459 * t1627;
t1293 = -t1325 + t1423;
t1496 = t1293 * t1459 + t1642;
t1292 = t1324 - t1423;
t1495 = t1292 * t1455 + t1583;
t1204 = t1277 * t1461 - t1279 * t1457;
t1348 = t1425 * t1461 + t1570;
t1494 = t1421 * t1462 - t1422 * t1458;
t1486 = t1326 * t1568 - t1459 * t1484;
t1485 = t1195 * t1455 + t1328 * t1567;
t1465 = t1592 * t1609 + t1468;
t1210 = -pkin(3) * t1540 + qJ(4) * t1408 - t1465;
t1481 = pkin(3) * t1573 + t1457 * t1210 - t1647;
t1211 = (-t1407 + t1540) * pkin(3) + t1465;
t1480 = -qJ(4) * t1577 + t1461 * t1211 - t1636;
t1479 = (-t1326 * t1455 - t1328 * t1459) * t1424;
t1148 = t1237 * t1461 + t1243 * t1457;
t1223 = (pkin(3) * qJD(3) + t1609) * t1592 + t1468;
t1469 = pkin(7) * t1148 + (-pkin(2) + t1505) * t1223;
t1417 = t1442 - t1443;
t1414 = qJDD(1) * t1458 + t1462 * t1463;
t1402 = t1504 * qJDD(1);
t1394 = t1546 * t1593;
t1377 = -pkin(6) * t1414 + g(3) * t1462;
t1370 = -t1429 + t1611;
t1369 = t1409 * t1461 - t1447 * t1593;
t1368 = t1457 * t1503 - t1593 * t1610;
t1367 = qJDD(3) * t1451 + t1394 * t1452;
t1366 = -qJDD(3) * t1452 + t1394 * t1451;
t1350 = t1638 * t1457;
t1340 = t1386 - t1611;
t1335 = pkin(1) * t1338;
t1334 = qJ(2) * t1339;
t1333 = -t1574 + t1347;
t1332 = t1573 + t1577;
t1320 = t1369 * t1452 - t1515;
t1319 = t1368 * t1452 + t1515;
t1318 = t1369 * t1451 + t1514;
t1317 = t1368 * t1451 - t1514;
t1283 = -pkin(1) * t1411 - t1330;
t1282 = pkin(1) * t1412 - t1329;
t1281 = (-t1399 * t1460 + t1401 * t1456) * t1433;
t1280 = (-t1399 * t1456 - t1401 * t1460) * t1433;
t1278 = t1333 * t1452 + t1417 * t1451;
t1276 = t1333 * t1451 - t1417 * t1452;
t1272 = -t1366 * t1458 + t1367 * t1462;
t1271 = t1366 * t1462 + t1367 * t1458;
t1263 = t1322 * t1460 - t1401 * t1561;
t1262 = t1322 * t1456 + t1401 * t1560;
t1261 = -t1399 * t1560 - t1456 * t1482;
t1260 = -t1399 * t1561 + t1460 * t1482;
t1258 = pkin(6) * (-t1338 * t1458 + t1339 * t1462);
t1256 = t1280 * t1457 + t1387 * t1461;
t1255 = -t1280 * t1461 + t1387 * t1457;
t1254 = t1325 - t1324;
t1253 = t1297 + t1643;
t1252 = t1370 * t1460 - t1558;
t1251 = -t1456 * t1551 + t1639;
t1250 = t1296 - t1650;
t1249 = t1370 * t1456 + t1580;
t1248 = t1460 * t1551 + t1641;
t1242 = pkin(1) * t1246;
t1241 = t1279 + t1644;
t1240 = t1277 - t1651;
t1234 = pkin(1) * t1448 + qJ(2) * t1524;
t1233 = -t1318 * t1458 + t1320 * t1462;
t1232 = -t1317 * t1458 + t1319 * t1462;
t1231 = t1318 * t1462 + t1320 * t1458;
t1230 = t1317 * t1462 + t1319 * t1458;
t1218 = (-t1326 * t1459 + t1328 * t1455) * t1424;
t1215 = t1262 * t1457 + t1541;
t1214 = -t1260 * t1457 - t1541;
t1213 = -t1262 * t1461 + t1542;
t1212 = t1260 * t1461 - t1542;
t1206 = -t1276 * t1458 + t1278 * t1462;
t1203 = t1276 * t1462 + t1278 * t1458;
t1191 = -t1266 * t1460 - t1456 * t1625;
t1189 = -t1456 * t1266 + t1460 * t1625;
t1187 = -t1623 + t1651;
t1186 = t1256 * t1452 + t1281 * t1451;
t1185 = t1256 * t1451 - t1281 * t1452;
t1183 = -t1637 - t1644;
t1182 = t1538 - t1659;
t1181 = t1539 - t1668;
t1180 = t1248 * t1457 + t1270 * t1461;
t1179 = t1249 * t1457 - t1267 * t1461;
t1178 = -t1248 * t1461 + t1270 * t1457;
t1177 = -t1249 * t1461 - t1267 * t1457;
t1176 = t1292 * t1459 - t1584;
t1175 = -t1293 * t1455 + t1640;
t1171 = -t1238 * t1461 + t1457 * t1625;
t1167 = t1204 * t1452 - t1598;
t1166 = t1204 * t1451 + t1334;
t1162 = -t1228 * t1461 + t1266 * t1457;
t1161 = -pkin(3) * t1574 + t1210 * t1461 - t1643;
t1160 = -qJ(4) * t1347 - t1211 * t1457 + t1650;
t1158 = t1205 * t1452 + t1306 * t1451;
t1157 = t1205 * t1451 - t1306 * t1452;
t1156 = t1189 * t1457 + t1340 * t1461;
t1155 = -t1189 * t1461 + t1340 * t1457;
t1150 = -t1299 + t1484;
t1147 = t1237 * t1457 - t1243 * t1461;
t1145 = t1335 + t1510;
t1144 = t1195 * t1459 - t1328 * t1568;
t1143 = t1326 * t1567 + t1455 * t1484;
t1138 = t1215 * t1452 + t1263 * t1451;
t1137 = t1214 * t1452 - t1261 * t1451;
t1136 = t1215 * t1451 - t1263 * t1452;
t1135 = t1214 * t1451 + t1261 * t1452;
t1132 = -t1190 * t1461 + t1301 * t1457;
t1129 = -t1220 * t1457 + t1222 * t1461;
t1128 = t1218 * t1460 - t1456 * t1479;
t1127 = t1456 * t1218 + t1460 * t1479;
t1125 = -t1241 * t1451 + t1253 * t1452 + t1665;
t1124 = -t1240 * t1451 + t1250 * t1452 + t1658;
t1123 = t1481 + t1668;
t1122 = t1480 + t1659;
t1121 = t1180 * t1452 + t1251 * t1451;
t1120 = t1179 * t1452 + t1252 * t1451;
t1119 = t1180 * t1451 - t1251 * t1452;
t1118 = t1179 * t1451 - t1252 * t1452;
t1117 = t1127 * t1457 + t1381 * t1461;
t1116 = -t1127 * t1461 + t1381 * t1457;
t1115 = t1172 * t1452 + t1239 * t1451;
t1114 = t1172 * t1451 - t1239 * t1452;
t1113 = t1241 * t1452 + t1253 * t1451 - t1664;
t1112 = t1240 * t1452 + t1250 * t1451 - t1657;
t1109 = t1129 * t1452 - t1402 * t1451 - t1598;
t1108 = t1129 * t1451 + t1402 * t1452 + t1334;
t1107 = t1163 * t1452 + t1229 * t1451;
t1106 = t1163 * t1451 - t1229 * t1452;
t1103 = t1335 + t1511;
t1100 = t1148 * t1452 + t1223 * t1451;
t1099 = t1148 * t1451 - t1223 * t1452;
t1098 = t1176 * t1460 - t1456 * t1495;
t1097 = t1175 * t1460 - t1456 * t1496;
t1096 = t1456 * t1176 + t1460 * t1495;
t1095 = t1456 * t1175 + t1460 * t1496;
t1094 = t1156 * t1452 + t1191 * t1451;
t1093 = t1156 * t1451 - t1191 * t1452;
t1089 = t1133 * t1452 + t1192 * t1451;
t1088 = t1133 * t1451 - t1192 * t1452;
t1087 = pkin(1) * t1157 + t1552;
t1086 = -pkin(2) * t1147 - t1506;
t1083 = -t1149 * t1459 - t1455 * t1627;
t1080 = t1160 * t1452 - t1187 * t1451 - t1658;
t1076 = t1161 * t1452 - t1183 * t1451 - t1665;
t1074 = t1144 * t1460 - t1456 * t1485;
t1073 = t1143 * t1460 - t1456 * t1486;
t1072 = t1456 * t1144 + t1460 * t1485;
t1071 = t1456 * t1143 + t1460 * t1486;
t1063 = -pkin(7) * t1147 + t1223 * t1504;
t1060 = t1160 * t1451 + t1187 * t1452 + t1657;
t1059 = t1161 * t1451 + t1183 * t1452 + t1664;
t1056 = -qJ(2) * t1157 - (pkin(2) * t1451 - pkin(7) * t1452) * t1204;
t1051 = t1117 * t1452 + t1128 * t1451;
t1050 = t1117 * t1451 - t1128 * t1452;
t1049 = t1072 * t1457 + t1543;
t1048 = t1071 * t1457 - t1543;
t1047 = -t1072 * t1461 + t1544;
t1046 = -t1071 * t1461 - t1544;
t1045 = t1095 * t1457 + t1153 * t1461;
t1044 = t1096 * t1457 - t1150 * t1461;
t1043 = -t1095 * t1461 + t1153 * t1457;
t1042 = -t1096 * t1461 - t1150 * t1457;
t1040 = -t1091 * t1461 + t1457 * t1627;
t1038 = -pkin(2) * t1171 - t1614;
t1034 = -pkin(2) * t1162 - t1615;
t1033 = qJ(2) * t1158 - (-pkin(2) * t1452 - pkin(7) * t1451 - pkin(1)) * t1204;
t1030 = -t1065 * t1461 + t1149 * t1457;
t1026 = t1200 * t1457 - t1461 * t1629;
t1023 = t1083 * t1460 - t1456 * t1497;
t1021 = t1456 * t1083 + t1460 * t1497;
t1016 = pkin(1) * t1099 + t1469;
t1015 = t1045 * t1452 + t1097 * t1451;
t1014 = t1044 * t1452 + t1098 * t1451;
t1013 = t1045 * t1451 - t1097 * t1452;
t1012 = t1044 * t1451 - t1098 * t1452;
t1011 = t1021 * t1457 + t1254 * t1461;
t1010 = -t1021 * t1461 + t1254 * t1457;
t1009 = t1049 * t1452 + t1074 * t1451;
t1008 = t1048 * t1452 + t1073 * t1451;
t1007 = t1049 * t1451 - t1074 * t1452;
t1006 = t1048 * t1451 - t1073 * t1452;
t1005 = t1041 * t1452 + t1092 * t1451;
t1004 = t1041 * t1451 - t1092 * t1452;
t1002 = -t1022 * t1461 + t1209 * t1457;
t998 = t1031 * t1452 + t1066 * t1451;
t997 = t1031 * t1451 - t1066 * t1452;
t996 = -pkin(7) * t1171 + t1055 * t1461 - t1077 * t1457;
t995 = -pkin(7) * t1162 + t1053 * t1461 - t1069 * t1457;
t994 = -qJ(2) * t1099 + t1063 * t1452 - t1086 * t1451;
t993 = -pkin(2) * t1132 - t1616;
t988 = t1027 * t1452 + t1037 * t1451;
t987 = t1027 * t1451 - t1037 * t1452;
t986 = -pkin(1) * t1147 + qJ(2) * t1100 + t1063 * t1451 + t1086 * t1452;
t985 = pkin(1) * t1114 + t1512;
t984 = -pkin(7) * t1132 - t1000 * t1457 + t1102 * t1461;
t983 = pkin(1) * t1106 + t1513;
t978 = t1011 * t1452 + t1023 * t1451;
t977 = t1011 * t1451 - t1023 * t1452;
t974 = t1003 * t1452 + t1024 * t1451;
t973 = t1003 * t1451 - t1024 * t1452;
t969 = -qJ(2) * t1114 - t1038 * t1451 + t1452 * t996;
t966 = pkin(1) * t1088 + t1516;
t965 = -qJ(2) * t1106 - t1034 * t1451 + t1452 * t995;
t960 = -pkin(2) * t1026 - t1619;
t959 = -pkin(1) * t1171 + qJ(2) * t1115 + t1038 * t1452 + t1451 * t996;
t955 = -pkin(1) * t1162 + qJ(2) * t1107 + t1034 * t1452 + t1451 * t995;
t954 = -pkin(2) * t1040 - t1617;
t953 = -pkin(2) * t1030 - t1618;
t952 = -qJ(2) * t1088 - t1451 * t993 + t1452 * t984;
t951 = -pkin(1) * t1132 + qJ(2) * t1089 + t1451 * t984 + t1452 * t993;
t950 = -pkin(7) * t1026 - t1457 * t990 + t1461 * t992;
t945 = t1126 * t1457 - t1461 * t948;
t943 = -pkin(7) * t1040 - t1457 * t968 + t1461 * t976;
t942 = -pkin(7) * t1030 - t1457 * t958 + t1461 * t972;
t941 = pkin(1) * t987 + t1517;
t940 = pkin(1) * t1004 + t1518;
t937 = pkin(1) * t997 + t1519;
t936 = -qJ(2) * t987 - t1451 * t960 + t1452 * t950;
t935 = t1451 * t949 + t1452 * t946;
t934 = t1451 * t946 - t1452 * t949;
t933 = -pkin(2) * t1002 - t1620;
t932 = -pkin(1) * t1026 + qJ(2) * t988 + t1451 * t950 + t1452 * t960;
t931 = -qJ(2) * t1004 - t1451 * t954 + t1452 * t943;
t928 = -pkin(1) * t1040 + qJ(2) * t1005 + t1451 * t943 + t1452 * t954;
t927 = -qJ(2) * t997 - t1451 * t953 + t1452 * t942;
t926 = -pkin(7) * t1002 - t1457 * t939 + t1461 * t964;
t925 = -pkin(1) * t1030 + qJ(2) * t998 + t1451 * t942 + t1452 * t953;
t922 = pkin(1) * t973 + t1520;
t921 = -pkin(2) * t945 - t1621;
t920 = -qJ(2) * t973 - t1451 * t933 + t1452 * t926;
t919 = -pkin(1) * t1002 + qJ(2) * t974 + t1451 * t926 + t1452 * t933;
t918 = -pkin(7) * t945 - t1457 * t924 + t1461 * t930;
t917 = pkin(1) * t934 + t1530;
t916 = -qJ(2) * t934 - t1451 * t921 + t1452 * t918;
t915 = -pkin(1) * t945 + qJ(2) * t935 + t1451 * t918 + t1452 * t921;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1415, 0, -t1414, 0, t1507, -t1377, -t1494, -pkin(6) * t1494, 0, 0, t1336, 0, -t1624, 0, t1634, t1635, t1648, pkin(6) * t1648 + qJ(2) * t1581 - t1458 * t1234, t1233, t1206, -t1660, t1232, t1653, t1272, -t1458 * t1112 + t1462 * t1124 + t1666, -t1458 * t1113 + t1462 * t1125 + t1669, -t1166 * t1458 + t1167 * t1462 - t1600, t1462 * t1056 - t1458 * t1033 - pkin(6) * (t1157 * t1462 + t1158 * t1458), t1272, t1660, -t1653, t1233, t1206, t1232, -t1108 * t1458 + t1109 * t1462 - t1600, -t1458 * t1060 + t1462 * t1080 - t1666, -t1458 * t1059 + t1462 * t1076 - t1669, t1462 * t994 - t1458 * t986 - pkin(6) * (t1099 * t1462 + t1100 * t1458), -t1136 * t1458 + t1138 * t1462, -t1093 * t1458 + t1094 * t1462, -t1119 * t1458 + t1121 * t1462, -t1135 * t1458 + t1137 * t1462, -t1118 * t1458 + t1120 * t1462, -t1185 * t1458 + t1186 * t1462, t1462 * t965 - t1458 * t955 - pkin(6) * (t1106 * t1462 + t1107 * t1458), t1462 * t969 - t1458 * t959 - pkin(6) * (t1114 * t1462 + t1115 * t1458), t1462 * t952 - t1458 * t951 - pkin(6) * (t1088 * t1462 + t1089 * t1458), t1462 * t936 - t1458 * t932 - pkin(6) * (t1458 * t988 + t1462 * t987), -t1007 * t1458 + t1009 * t1462, -t1458 * t977 + t1462 * t978, -t1013 * t1458 + t1015 * t1462, -t1006 * t1458 + t1008 * t1462, -t1012 * t1458 + t1014 * t1462, -t1050 * t1458 + t1051 * t1462, t1462 * t927 - t1458 * t925 - pkin(6) * (t1458 * t998 + t1462 * t997), t1462 * t931 - t1458 * t928 - pkin(6) * (t1004 * t1462 + t1005 * t1458), t1462 * t920 - t1458 * t919 - pkin(6) * (t1458 * t974 + t1462 * t973), t1462 * t916 - t1458 * t915 - pkin(6) * (t1458 * t935 + t1462 * t934); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1414, 0, t1415, 0, t1377, t1507, t1523, pkin(6) * t1523, 0, 0, t1624, 0, t1336, 0, -t1635, t1634, t1649, pkin(6) * t1649 + qJ(2) * t1582 + t1462 * t1234, t1231, t1203, t1661, t1230, -t1654, t1271, t1462 * t1112 + t1458 * t1124 + t1667, t1462 * t1113 + t1458 * t1125 + t1670, t1166 * t1462 + t1167 * t1458 + t1258, t1458 * t1056 + t1462 * t1033 + pkin(6) * (-t1157 * t1458 + t1158 * t1462), t1271, -t1661, t1654, t1231, t1203, t1230, t1108 * t1462 + t1109 * t1458 + t1258, t1462 * t1060 + t1458 * t1080 - t1667, t1462 * t1059 + t1458 * t1076 - t1670, t1458 * t994 + t1462 * t986 + pkin(6) * (-t1099 * t1458 + t1100 * t1462), t1136 * t1462 + t1138 * t1458, t1093 * t1462 + t1094 * t1458, t1119 * t1462 + t1121 * t1458, t1135 * t1462 + t1137 * t1458, t1118 * t1462 + t1120 * t1458, t1185 * t1462 + t1186 * t1458, t1458 * t965 + t1462 * t955 + pkin(6) * (-t1106 * t1458 + t1107 * t1462), t1458 * t969 + t1462 * t959 + pkin(6) * (-t1114 * t1458 + t1115 * t1462), t1458 * t952 + t1462 * t951 + pkin(6) * (-t1088 * t1458 + t1089 * t1462), t1458 * t936 + t1462 * t932 + pkin(6) * (-t1458 * t987 + t1462 * t988), t1007 * t1462 + t1009 * t1458, t1458 * t978 + t1462 * t977, t1013 * t1462 + t1015 * t1458, t1006 * t1462 + t1008 * t1458, t1012 * t1462 + t1014 * t1458, t1050 * t1462 + t1051 * t1458, t1458 * t927 + t1462 * t925 + pkin(6) * (-t1458 * t997 + t1462 * t998), t1458 * t931 + t1462 * t928 + pkin(6) * (-t1004 * t1458 + t1005 * t1462), t1458 * t920 + t1462 * t919 + pkin(6) * (-t1458 * t973 + t1462 * t974), t1458 * t916 + t1462 * t915 + pkin(6) * (-t1458 * t934 + t1462 * t935); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1421, t1422, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1282, t1283, 0, -t1242, t1350, t1332, t1348, t1347, t1351, 0, t1182, t1181, t1145, t1087, 0, -t1348, -t1351, t1350, t1332, t1347, t1103, t1122, t1123, t1016, t1213, t1155, t1178, t1212, t1177, t1255, t983, t985, t966, t941, t1047, t1010, t1043, t1046, t1042, t1116, t937, t940, t922, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1463, 0, 0, -g(3), -t1421, 0, 0, 0, t1412, 0, -t1411, 0, t1499, t1374, t1246, qJ(2) * t1246, t1320, t1278, t1313, t1319, -t1316, t1367, t1124, t1125, t1167, t1056, t1367, -t1313, t1316, t1320, t1278, t1319, t1109, t1080, t1076, t994, t1138, t1094, t1121, t1137, t1120, t1186, t965, t969, t952, t936, t1009, t978, t1015, t1008, t1014, t1051, t927, t931, t920, t916; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1463, 0, qJDD(1), 0, g(3), 0, -t1422, 0, 0, 0, t1411, 0, t1412, 0, -t1374, t1499, t1524, t1234, t1318, t1276, t1309, t1317, -t1312, t1366, t1112, t1113, t1166, t1033, t1366, -t1309, t1312, t1318, t1276, t1317, t1108, t1060, t1059, t986, t1136, t1093, t1119, t1135, t1118, t1185, t955, t959, t951, t932, t1007, t977, t1013, t1006, t1012, t1050, t925, t928, t919, t915; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1421, t1422, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1282, t1283, 0, -t1242, t1350, t1332, t1348, t1347, t1351, 0, t1182, t1181, t1145, t1087, 0, -t1348, -t1351, t1350, t1332, t1347, t1103, t1122, t1123, t1016, t1213, t1155, t1178, t1212, t1177, t1255, t983, t985, t966, t941, t1047, t1010, t1043, t1046, t1042, t1116, t937, t940, t922, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1463, 0, 0, -t1448, t1329, 0, t1369, t1333, t1357, t1368, -t1360, t1394, t1250, t1253, t1204, pkin(7) * t1204, t1394, -t1357, t1360, t1369, t1333, t1368, t1129, t1160, t1161, t1063, t1215, t1156, t1180, t1214, t1179, t1256, t995, t996, t984, t950, t1049, t1011, t1045, t1048, t1044, t1117, t942, t943, t926, t918; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1463, 0, qJDD(1), 0, t1448, 0, t1330, 0, t1432, -t1417, -t1549, -t1432, -t1441, -qJDD(3), t1240, t1241, 0, pkin(2) * t1204, -qJDD(3), t1549, t1441, t1432, -t1417, -t1432, t1402, t1187, t1183, t1086, -t1263, -t1191, -t1251, t1261, -t1252, -t1281, t1034, t1038, t993, t960, -t1074, -t1023, -t1097, -t1073, -t1098, -t1128, t953, t954, t933, t921; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1329, -t1330, 0, 0, t1350, t1332, t1348, t1347, t1351, 0, t1538, t1539, t1510, t1552, 0, -t1348, -t1351, t1350, t1332, t1347, t1511, t1480, t1481, t1469, t1213, t1155, t1178, t1212, t1177, t1255, t1513, t1512, t1516, t1517, t1047, t1010, t1043, t1046, t1042, t1116, t1519, t1518, t1520, t1530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1409, t1407, t1418, -t1438, t1427, t1438, 0, t1306, t1277, 0, t1438, -t1418, -t1427, t1409, t1407, -t1438, t1222, -qJ(4) * t1407, t1210, -qJ(4) * t1223, t1341, t1340, t1270, -t1341, -t1267, t1387, t1053, t1055, t1102, t992, t1257, t1254, t1153, -t1257, -t1150, t1381, t972, t976, t964, t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1540, t1408, t1425, -t1503, t1419, -t1540, -t1306, 0, t1279, 0, -t1540, -t1425, -t1419, t1540, t1408, -t1503, t1220, t1211, pkin(3) * t1408, -pkin(3) * t1223, -t1262, -t1189, -t1248, t1260, -t1249, -t1280, t1069, t1077, t1000, t990, -t1072, -t1021, -t1095, -t1071, -t1096, -t1127, t958, t968, t939, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1432, t1417, t1549, t1432, t1441, qJDD(3), -t1277, -t1279, 0, 0, qJDD(3), -t1549, -t1441, -t1432, t1417, t1432, -t1402, t1623, t1637, t1506, t1263, t1191, t1251, -t1261, t1252, t1281, t1615, t1614, t1616, t1619, t1074, t1023, t1097, t1073, t1098, t1128, t1618, t1617, t1620, t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1549, -t1441, -t1432, t1417, t1432, 0, t1243, t1237, 0, t1263, t1191, t1251, -t1261, t1252, t1281, -pkin(8) * t1228 + t1585, -pkin(8) * t1238 + t1196, -pkin(8) * t1190 - t1629, -pkin(8) * t1629, t1074, t1023, t1097, t1073, t1098, t1128, -pkin(8) * t1065 - t1528, -pkin(8) * t1091 - t1527, -pkin(8) * t1022 - t1532, -pkin(8) * t948 - t1493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1438, t1418, t1427, -t1409, -t1407, t1438, -t1243, 0, t1223, 0, -t1341, -t1340, -t1270, t1341, t1267, -t1387, t1491, t1508, -t1602, -t1603, -t1257, -t1254, -t1153, t1257, t1150, -t1381, t1478, t1470, t1533, t1545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1540, t1425, t1419, -t1540, -t1408, t1503, -t1237, -t1223, 0, 0, t1262, t1189, t1248, -t1260, t1249, t1280, pkin(8) * t1229 - t1501, pkin(8) * t1239 - t1500, pkin(8) * t1192 - t1474, pkin(8) * t1037 - t1601, t1072, t1021, t1095, t1071, t1096, t1127, pkin(8) * t1066 - t1476, pkin(8) * t1092 - t1475, pkin(8) * t1024 - t1477, pkin(8) * t949 - t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1322, -t1266, t1626, t1376, t1370, -t1376, 0, t1200, t1110, 0, t1144, t1083, t1175, t1143, t1176, t1218, t1058, t1062, t962, -pkin(9) * t981; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1562, t1625, t1551, -t1482, t1304, -t1562, -t1200, 0, t1111, 0, t1485, t1497, t1496, t1486, t1495, t1479, t1028, t1032, t956, t970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1341, t1340, t1270, -t1341, -t1267, t1387, -t1110, -t1111, 0, 0, t1257, t1254, t1153, -t1257, -t1150, t1381, t1502, t1483, t1081, t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1195, -t1149, t1628, t1298, t1292, -t1298, 0, t1126, t1018, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1299, t1627, t1293, -t1484, t1226, -t1299, -t1126, 0, t1019, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, t1254, t1153, -t1257, -t1150, t1381, -t1018, -t1019, 0, 0;];
m_new_reg  = t1;
