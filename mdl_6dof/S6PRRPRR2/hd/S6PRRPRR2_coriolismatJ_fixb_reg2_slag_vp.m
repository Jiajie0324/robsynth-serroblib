% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:00:23
% EndTime: 2019-03-08 22:00:58
% DurationCPUTime: 27.55s
% Computational Cost: add. (26851->789), mult. (58459->1121), div. (0->0), fcn. (69507->12), ass. (0->590)
t1062 = cos(pkin(12));
t1063 = cos(pkin(6));
t725 = sin(qJ(3));
t728 = cos(qJ(3));
t722 = sin(pkin(6));
t726 = sin(qJ(2));
t990 = t722 * t726;
t677 = -t1063 * t728 + t725 * t990;
t678 = t1063 * t725 + t728 * t990;
t721 = sin(pkin(12));
t543 = t1062 * t677 + t678 * t721;
t1156 = -t543 / 0.2e1;
t855 = t1062 * t725;
t991 = t721 * t728;
t688 = t855 + t991;
t724 = sin(qJ(5));
t582 = t724 * t688;
t723 = sin(qJ(6));
t1075 = cos(qJ(6));
t727 = cos(qJ(5));
t891 = t1075 * t727;
t553 = -t582 * t723 + t688 * t891;
t1097 = -t553 / 0.2e1;
t854 = t1062 * t728;
t992 = t721 * t725;
t782 = t854 - t992;
t1087 = -t782 / 0.2e1;
t712 = pkin(3) * t721 + pkin(9);
t1069 = pkin(10) + t712;
t683 = t1069 * t727;
t858 = t1069 * t724;
t849 = t1075 * t858 + t723 * t683;
t1155 = -t849 / 0.2e1;
t783 = t1062 * t678 - t721 * t677;
t729 = cos(qJ(2));
t989 = t722 * t729;
t476 = t724 * t783 + t727 * t989;
t477 = -t724 * t989 + t727 * t783;
t850 = t1075 * t476 + t723 * t477;
t1132 = -t850 / 0.2e1;
t911 = qJD(5) + qJD(6);
t1073 = t782 * pkin(5);
t1068 = -qJ(4) - pkin(8);
t859 = t721 * t1068;
t838 = t725 * t859;
t747 = -t1068 * t854 + t838;
t715 = -t728 * pkin(3) - pkin(2);
t771 = -pkin(4) * t782 - t688 * pkin(9) + t715;
t400 = t724 * t747 - t727 * t771;
t999 = t688 * t727;
t346 = -pkin(10) * t999 - t400;
t732 = t346 - t1073;
t317 = t1075 * t732;
t401 = t724 * t771 + t727 * t747;
t347 = -pkin(10) * t582 + t401;
t986 = t723 * t347;
t170 = -t317 + t986;
t897 = t1075 * t346;
t183 = t897 - t986;
t1144 = t170 + t183;
t731 = t723 * t732;
t896 = t1075 * t347;
t171 = t896 + t731;
t987 = t723 * t346;
t182 = -t896 - t987;
t1143 = t171 + t182;
t298 = t1075 * t477 - t723 * t476;
t1151 = t1087 * t298 + t1097 * t543;
t621 = t782 * t989;
t977 = t724 * t621;
t563 = t727 * t990 - t977;
t894 = t1075 * t563;
t900 = t724 * t990;
t975 = t727 * t621;
t565 = t900 + t975;
t983 = t723 * t565;
t775 = -t983 / 0.2e1 + t894 / 0.2e1;
t1140 = t775 + t1151;
t1154 = qJD(1) * t1140;
t892 = t1075 * t724;
t981 = t723 * t727;
t698 = t892 + t981;
t449 = t698 * t688;
t1150 = t782 * t1132 + t1156 * t449;
t893 = t1075 * t565;
t984 = t723 * t563;
t776 = -t984 / 0.2e1 - t893 / 0.2e1;
t1141 = t776 - t1150;
t1153 = qJD(1) * t1141;
t1082 = -t698 / 0.2e1;
t713 = -pkin(3) * t1062 - pkin(4);
t700 = -t727 * pkin(5) + t713;
t1134 = -t700 / 0.2e1;
t834 = t1068 * t1062;
t694 = t725 * t834;
t617 = -t1068 * t991 - t694;
t521 = pkin(5) * t582 + t617;
t575 = t1075 * t683 - t723 * t858;
t1152 = t1082 * t521 + t1087 * t575 + t1134 * t553;
t982 = t723 * t724;
t788 = t891 - t982;
t1084 = t788 / 0.2e1;
t1138 = t521 * t1084 + t1134 * t449 + t1155 * t782;
t1130 = t543 * t698;
t774 = t981 / 0.2e1 + t892 / 0.2e1;
t759 = t774 * t543;
t235 = -t1130 / 0.2e1 + t759;
t1149 = qJD(2) * t1140 + t235 * qJD(3);
t1128 = t788 * t543;
t1103 = -t1128 / 0.2e1;
t836 = -t891 / 0.2e1;
t758 = (t836 + t982 / 0.2e1) * t543;
t236 = t1103 - t758;
t1148 = qJD(2) * t1141 + t236 * qJD(3);
t1139 = t775 - t1151;
t238 = t1130 / 0.2e1 + t759;
t1147 = qJD(2) * t1139 + t238 * qJD(3) - t298 * t911;
t1142 = t776 + t1150;
t237 = t1128 / 0.2e1 - t758;
t1146 = qJD(2) * t1142 + t237 * qJD(3) + t850 * t911;
t1081 = t698 / 0.2e1;
t310 = -t1081 * t449 + t1084 * t553;
t1145 = t911 * t310;
t1070 = t725 * pkin(3);
t585 = pkin(4) * t688 - pkin(9) * t782 + t1070;
t558 = t724 * t585;
t618 = t728 * t859 + t694;
t598 = t727 * t618;
t403 = t598 + t558;
t579 = t724 * t782;
t348 = -pkin(10) * t579 + t403;
t895 = t1075 * t348;
t837 = -t895 / 0.2e1;
t1072 = t688 * pkin(5);
t559 = t727 * t585;
t978 = t724 * t618;
t402 = t559 - t978;
t584 = t727 * t782;
t318 = -pkin(10) * t584 + t1072 + t402;
t988 = t723 * t318;
t778 = -t988 / 0.2e1 + t837;
t73 = t778 - t1138;
t898 = t1075 * t318;
t985 = t723 * t348;
t777 = -t985 / 0.2e1 + t898 / 0.2e1;
t72 = t777 + t1152;
t75 = t777 - t1152;
t1077 = -t724 / 0.2e1;
t1109 = t565 * t727 / 0.2e1 + t563 * t1077;
t620 = t688 * t989;
t1137 = -t620 * t713 / 0.2e1 - t1109 * t712;
t1136 = t298 / 0.2e1;
t1135 = -t575 / 0.2e1;
t1133 = t849 / 0.2e1;
t1038 = t543 * t783;
t916 = t688 * qJD(2);
t606 = t782 * t916;
t680 = t855 / 0.2e1 + t991 / 0.2e1;
t1116 = t680 * qJD(5) - t606;
t1125 = t449 * qJD(2);
t949 = qJD(3) * t698;
t1124 = -qJD(2) * t310 - t788 * t949;
t955 = qJD(2) * t553;
t1123 = qJD(3) * t310 - t449 * t955;
t934 = t236 * qJD(1);
t1122 = t849 * t911 - t934;
t1120 = t911 * t575;
t976 = t724 * t727;
t851 = 0.2e1 * t688 * t976;
t1106 = t170 / 0.2e1;
t1118 = t171 / 0.2e1;
t1101 = t783 / 0.2e1;
t845 = t911 * t788;
t684 = t782 ^ 2;
t685 = t688 ^ 2;
t1115 = -t685 - t684;
t910 = t685 - t684;
t1114 = qJD(6) * t680 + t1116;
t935 = t235 * qJD(1);
t948 = qJD(3) * t700;
t1113 = qJD(2) * t72 - t698 * t948 + t935;
t1074 = pkin(5) * t724;
t539 = -t1074 * t788 + t698 * t700;
t1076 = -t727 / 0.2e1;
t907 = t1075 / 0.2e1;
t979 = t724 * t449;
t59 = (-t979 / 0.2e1 + (-t1076 * t788 + t907) * t688) * pkin(5) + t72;
t1112 = qJD(2) * t59 - qJD(3) * t539 + t935;
t899 = -t1062 / 0.2e1;
t1111 = (t620 * t899 + t621 * t721 / 0.2e1) * pkin(3);
t1105 = t850 / 0.2e1;
t1104 = -t298 / 0.2e1;
t1102 = t477 / 0.2e1;
t1100 = t543 / 0.2e1;
t549 = t698 * t782;
t1099 = t549 / 0.2e1;
t645 = t723 * t579;
t841 = t782 * t891;
t552 = t841 - t645;
t1098 = t552 / 0.2e1;
t1091 = t575 / 0.2e1;
t1090 = t617 / 0.2e1;
t1089 = t618 / 0.2e1;
t1088 = t782 / 0.2e1;
t1086 = -t688 / 0.2e1;
t1085 = t688 / 0.2e1;
t1083 = -t788 / 0.2e1;
t719 = t727 ^ 2;
t1080 = -t719 / 0.2e1;
t1079 = -t723 / 0.2e1;
t1078 = t723 / 0.2e1;
t1071 = t723 * pkin(5);
t864 = t1104 + t1136;
t865 = t1132 + t1105;
t34 = -t449 * t865 + t553 * t864;
t1067 = t34 * qJD(5);
t50 = t698 * t864 + t788 * t865;
t1066 = t50 * qJD(5);
t1065 = pkin(5) * qJD(5);
t1064 = qJD(3) * pkin(3);
t1049 = t401 * t727;
t1048 = t402 * t727;
t1047 = t403 * t724;
t1046 = t476 * t782;
t1045 = t476 * t724;
t1044 = t477 * t782;
t1043 = t477 * t727;
t1042 = t521 * t449;
t1041 = t521 * t553;
t1035 = t543 * t620;
t1034 = t543 * t688;
t1031 = t543 * t724;
t1030 = t783 * t782;
t1029 = t549 * t553;
t1028 = t549 * t782;
t358 = t894 - t983;
t359 = t893 + t984;
t55 = t298 * t359 - t358 * t850 + t1035;
t1027 = t55 * qJD(1);
t1026 = t449 * t552;
t1025 = t449 * t688;
t1024 = t552 * t782;
t1023 = t552 * t788;
t1022 = t553 * t688;
t1020 = t563 * t727;
t1019 = t565 * t724;
t616 = -t728 * t834 + t838;
t1011 = t616 * t724;
t1010 = t616 * t727;
t1009 = t617 * t616;
t1008 = t617 * t688;
t1007 = t617 * t724;
t1006 = t617 * t727;
t1005 = t620 * t617;
t1003 = t620 * t724;
t1002 = t620 * t727;
t902 = t1073 / 0.2e1;
t730 = -t731 / 0.2e1 + t723 * t902;
t68 = t987 / 0.2e1 + t730;
t1001 = t68 * qJD(2);
t1000 = t688 * t713;
t998 = t788 * t782;
t997 = t698 * t549;
t784 = -t317 / 0.2e1 + t1075 * t902;
t70 = t897 / 0.2e1 + t784;
t996 = t70 * qJD(2);
t993 = t712 * t782;
t980 = t724 * t400;
t860 = t1091 + t1135;
t861 = t1155 + t1133;
t165 = t698 * t861 + t788 * t860;
t972 = t165 * qJD(5);
t198 = -t449 * t788 - t698 * t553;
t971 = t911 * t198;
t414 = (t1081 + t774) * t782;
t967 = t911 * t414;
t419 = (t1082 + t774) * t782;
t966 = t911 * t419;
t965 = t645 / 0.2e1 - t841 / 0.2e1;
t964 = -t645 / 0.2e1 - t782 * t836;
t717 = t724 ^ 2;
t707 = t719 - t717;
t143 = t997 + t1023;
t963 = qJD(2) * t143;
t199 = -t1026 + t1029;
t962 = qJD(2) * t199;
t305 = -t1025 + t1028;
t961 = qJD(2) * t305;
t306 = t1025 + t1028;
t960 = qJD(2) * t306;
t494 = t910 * t724;
t959 = qJD(2) * t494;
t495 = t1115 * t724;
t958 = qJD(2) * t495;
t496 = t910 * t727;
t957 = qJD(2) * t496;
t588 = t1115 * t727;
t954 = qJD(2) * t588;
t953 = qJD(2) * t722;
t952 = qJD(2) * t726;
t951 = qJD(2) * t728;
t950 = qJD(3) * t788;
t947 = qJD(3) * t724;
t946 = qJD(3) * t727;
t945 = qJD(4) * t727;
t944 = qJD(5) * t724;
t943 = qJD(5) * t727;
t942 = qJD(6) * t700;
t111 = t1038 - (t1043 + t1045) * t543;
t941 = t111 * qJD(1);
t118 = -t476 * t563 + t477 * t565 + t1035;
t940 = t118 * qJD(1);
t132 = (-t783 / 0.2e1 + t1101) * t688;
t939 = t132 * qJD(2);
t754 = -(t1080 - t717 / 0.2e1) * t993 + t1000 / 0.2e1;
t794 = -t1048 / 0.2e1 - t1047 / 0.2e1;
t140 = t754 + t794;
t938 = t140 * qJD(2);
t200 = -t1026 - t1029;
t936 = t200 * qJD(2);
t703 = t722 ^ 2 * t726 * t729;
t242 = t621 * t783 + t1035 - t703;
t933 = t242 * qJD(1);
t307 = t1022 - t1024;
t932 = t307 * qJD(2);
t308 = t1022 + t1024;
t931 = t308 * qJD(2);
t390 = t414 * qJD(2);
t872 = t998 / 0.2e1;
t415 = t872 + t964;
t391 = t415 * qJD(2);
t873 = -t998 / 0.2e1;
t416 = t873 + t965;
t393 = t416 * qJD(2);
t423 = -t703 + (t677 * t725 + t678 * t728) * t989;
t930 = t423 * qJD(1);
t446 = t688 * t788;
t929 = t446 * qJD(2);
t770 = t1088 * t721 + t688 * t899;
t525 = (-t725 / 0.2e1 + t770) * pkin(3);
t927 = t525 * qJD(2);
t926 = t910 * qJD(2);
t578 = (t717 / 0.2e1 + t1080) * t688;
t925 = t578 * qJD(5);
t924 = t579 * qJD(2);
t923 = t582 * qJD(2);
t922 = t584 * qJD(2);
t675 = t717 * t782;
t676 = t719 * t782;
t586 = -t675 - t676;
t921 = t586 * qJD(2);
t920 = t1115 * qJD(2);
t919 = t680 * qJD(2);
t917 = t782 * qJD(2);
t915 = t688 * qJD(3);
t718 = t725 ^ 2;
t720 = t728 ^ 2;
t708 = t720 - t718;
t914 = t708 * qJD(2);
t913 = t725 * qJD(3);
t912 = t728 * qJD(3);
t909 = pkin(5) * t999;
t908 = -t1075 / 0.2e1;
t144 = -t1081 * t1128 + t1084 * t1130;
t51 = t698 * t865 - t788 * t864;
t906 = t144 * qJD(3) + t51 * qJD(5);
t905 = pkin(2) * t725 * qJD(2);
t904 = pkin(2) * t951;
t903 = t1074 / 0.2e1;
t888 = t724 * t946;
t887 = t782 * t943;
t605 = t782 * t915;
t886 = t722 * t952;
t885 = t729 * t953;
t884 = t724 * t943;
t883 = t725 * t912;
t882 = t727 * t916;
t881 = -t1034 / 0.2e1;
t451 = t1034 / 0.2e1;
t880 = -t1031 / 0.2e1;
t879 = t1031 / 0.2e1;
t878 = t620 * t1083;
t877 = t620 * t1081;
t875 = -t999 / 0.2e1;
t874 = t999 / 0.2e1;
t871 = t990 / 0.2e1;
t870 = -t989 / 0.2e1;
t869 = -t977 / 0.2e1;
t868 = -t975 / 0.2e1;
t867 = t1118 + t182 / 0.2e1;
t866 = t183 / 0.2e1 + t1106;
t862 = -t558 / 0.2e1 - t598 / 0.2e1;
t857 = t1075 * qJD(5);
t856 = t1075 * qJD(6);
t853 = (t717 + t719) * t543;
t852 = (t718 + t720) * t729;
t847 = t911 * t782;
t846 = t911 * t698;
t844 = pkin(5) * t874;
t843 = -qJD(5) + t917;
t840 = t685 * t884;
t839 = t543 * t874;
t832 = qJD(3) * t851;
t176 = t898 - t985;
t177 = t895 + t988;
t520 = pkin(5) * t579 + t616;
t735 = t520 * t1100 + t521 * t1101 + t171 * t1103 - t1106 * t1130 + t176 * t1132 + t1136 * t177;
t753 = t1133 * t358 + t1134 * t620 + t1135 * t359;
t2 = t735 + t753;
t20 = -t170 * t176 + t171 * t177 + t520 * t521;
t831 = t2 * qJD(1) + t20 * qJD(2);
t25 = -t170 * t182 + t171 * t183 + t521 * t909;
t744 = t183 * t1104 + t182 * t1105 - t1106 * t298 + t1118 * t850;
t779 = t1078 * t359 + t358 * t907;
t3 = (t543 * t875 + t779) * pkin(5) + t744;
t830 = -t3 * qJD(1) + t25 * qJD(2);
t829 = -qJD(6) + t843;
t14 = t170 * t552 - t171 * t549 - t176 * t553 - t177 * t449;
t742 = t1097 * t1130 + t1098 * t850 - t1103 * t449 + t1104 * t549;
t795 = t1082 * t358 + t1084 * t359;
t28 = t742 - t795;
t828 = t28 * qJD(1) + t14 * qJD(2);
t17 = -t1143 * t553 - t1144 * t449;
t827 = t34 * qJD(1) + t17 * qJD(2);
t793 = t1090 * t783 + t1100 * t616;
t734 = -(t1049 / 0.2e1 + t980 / 0.2e1) * t543 - t476 * t402 / 0.2e1 + t403 * t1102 + t793;
t30 = t734 + t1137;
t81 = -t400 * t402 + t401 * t403 + t1009;
t826 = t30 * qJD(1) + t81 * qJD(2);
t39 = -t170 * t688 - t176 * t782 + t449 * t520 + t521 * t549;
t741 = t850 * t1086 + t1087 * t1130 + t543 * t1099 + t1101 * t449;
t62 = t878 - t741;
t825 = -t62 * qJD(1) + t39 * qJD(2);
t40 = -t171 * t688 + t177 * t782 + t520 * t553 + t521 * t552;
t740 = t1086 * t298 - t1088 * t1128 + t1098 * t543 + t1101 * t553;
t63 = t877 - t740;
t824 = -t63 * qJD(1) + t40 * qJD(2);
t796 = t1081 * t359 + t1084 * t358;
t797 = t1098 * t298 + t1099 * t850;
t41 = t881 + t796 - t797;
t43 = t170 * t549 + t171 * t552 + t521 * t688;
t823 = -t41 * qJD(1) + t43 * qJD(2);
t79 = -t182 * t782 + t449 * t909 + t1041;
t822 = -qJD(2) * t79 + t1154;
t80 = t183 * t782 + t553 * t909 - t1042;
t821 = -qJD(2) * t80 + t1153;
t94 = -t170 * t782 - t1042;
t820 = -qJD(2) * t94 + t1153;
t95 = t171 * t782 + t1041;
t819 = -qJD(2) * t95 + t1154;
t818 = t51 * qJD(4);
t817 = qJD(2) * t34 + qJD(3) * t50;
t816 = -t402 * t724 + t403 * t727;
t815 = -t688 * t712 + t713 * t782;
t767 = (t1076 * t476 + t1102 * t724) * t782;
t128 = -t767 - t1109;
t76 = (t1047 + t1048) * t688 - (t400 * t727 - t401 * t724) * t782;
t814 = t128 * qJD(1) - t76 * qJD(2);
t752 = t1085 * t700 + t1091 * t552 + t1133 * t549;
t798 = t1082 * t177 + t1083 * t176;
t38 = t752 + t798;
t813 = -qJD(1) * t144 + qJD(2) * t38;
t281 = t1070 * t715 + t618 * t747 + t1009;
t733 = t870 * t1070 + t783 * t1089 + t1156 * t747 + t793;
t77 = -t733 + t1111;
t812 = -t77 * qJD(1) + t281 * qJD(2);
t54 = -t1128 * t298 - t1130 * t850 + t1038;
t811 = t54 * qJD(1) + t144 * qJD(4);
t540 = t1074 * t698 + t700 * t788;
t58 = (t553 * t1077 + (t1076 * t698 + t1079) * t688) * pkin(5) + t73;
t809 = qJD(2) * t58 - qJD(3) * t540;
t808 = t843 * t727;
t755 = t451 - (-t1043 / 0.2e1 - t1045 / 0.2e1) * t782;
t792 = -t1020 / 0.2e1 - t1019 / 0.2e1;
t110 = t755 + t792;
t138 = t1008 - (-t980 - t1049) * t782;
t807 = qJD(1) * t110 + qJD(2) * t138;
t764 = t1085 * t783;
t739 = t1086 * t476 + t724 * t764;
t112 = t1002 / 0.2e1 + t739;
t116 = (-t400 + t1011) * t688 - (t402 - t1007) * t782;
t806 = t112 * qJD(1) + t116 * qJD(2);
t738 = t1086 * t477 + t727 * t764;
t115 = -t1003 / 0.2e1 + t738;
t117 = (-t401 + t1010) * t688 - (-t403 - t1006) * t782;
t805 = t115 * qJD(1) + t117 * qJD(2);
t187 = (t616 - t747) * t688 - (-t618 - t617) * t782;
t804 = -t132 * qJD(1) - t187 * qJD(2);
t789 = t871 + t881;
t188 = t869 - t1044 / 0.2e1 + t789 * t727;
t257 = t401 * t782 + t617 * t999;
t803 = qJD(1) * t188 - qJD(2) * t257;
t189 = t868 + t1046 / 0.2e1 - t789 * t724;
t256 = -t400 * t782 - t582 * t617;
t802 = -qJD(1) * t189 + qJD(2) * t256;
t285 = -t1030 / 0.2e1 + t789;
t357 = t747 * t782 + t1008;
t801 = -qJD(1) * t285 + qJD(2) * t357;
t501 = (t1085 - t680) * t989;
t556 = -t1070 * t782 + t688 * t715;
t800 = -qJD(1) * t501 + qJD(2) * t556;
t769 = -t854 / 0.2e1 + t992 / 0.2e1;
t502 = (t1088 + t769) * t989;
t557 = t1070 * t688 + t715 * t782;
t799 = -qJD(1) * t502 + qJD(2) * t557;
t282 = t449 ^ 2 - t553 ^ 2;
t106 = qJD(2) * t282 + qJD(3) * t198;
t546 = -t698 ^ 2 + t788 ^ 2;
t158 = qJD(2) * t198 + qJD(3) * t546;
t790 = -t993 / 0.2e1 - t1000 / 0.2e1;
t787 = qJD(2) * t73 - t788 * t948;
t785 = t688 * t808;
t506 = -qJD(2) * t578 + t888;
t781 = t1078 * t177 + t176 * t907;
t780 = -t1078 * t1128 + t1130 * t907;
t426 = qJD(2) * t685 * t976 + qJD(3) * t578;
t587 = t707 * t685;
t773 = qJD(2) * t587 + t832;
t772 = qJD(2) * t851 - qJD(3) * t707;
t760 = (t1079 * t549 + t552 * t908) * pkin(5);
t9 = t449 * t861 + t553 * t860 + t698 * t867 - t788 * t866 + t760;
t768 = t50 * qJD(1) - t9 * qJD(2);
t766 = t790 * t727;
t761 = (t1078 * t552 + t549 * t908) * pkin(5);
t18 = -t698 * t866 - t788 * t867 + t761;
t765 = t51 * qJD(1) - t18 * qJD(2) + t165 * qJD(3);
t746 = t790 * t724 + t1006 / 0.2e1;
t231 = t746 - t862;
t757 = -qJD(2) * t231 - t713 * t946;
t233 = -t559 / 0.2e1 - t766 + (t1090 + t1089) * t724;
t756 = -qJD(2) * t233 - t713 * t947;
t196 = t1074 * t700;
t23 = (t880 + t780) * pkin(5);
t745 = t1143 * t1133 + t1135 * t1144;
t5 = (t1077 * t521 + t700 * t875 + t781) * pkin(5) + t745;
t750 = -t23 * qJD(1) - t5 * qJD(2) + t196 * qJD(3) + t165 * qJD(4);
t709 = t725 * t951;
t679 = t782 * qJD(3);
t671 = t680 * qJD(3);
t667 = t727 * t915;
t568 = t579 * qJD(5);
t524 = t1070 / 0.2e1 + t770 * pkin(3);
t523 = t924 - t944;
t504 = -t680 * t989 + t688 * t870;
t503 = (t1087 + t769) * t989;
t418 = t872 + t965;
t417 = t873 + t964;
t399 = t419 * qJD(4);
t394 = t418 * qJD(4);
t392 = t416 * qJD(4);
t389 = t414 * qJD(4);
t343 = -t1076 * t543 + t1100 * t727;
t342 = -t1077 * t543 + t879;
t321 = -t846 + t390;
t320 = -t845 - t393;
t319 = -t391 + t845;
t286 = t1030 / 0.2e1 + t451 + t871;
t272 = -qJD(3) * t414 - t553 * t917;
t271 = qJD(3) * t415 - t449 * t917;
t234 = t1007 / 0.2e1 - t978 / 0.2e1 + t559 / 0.2e1 - t766;
t232 = t746 + t862;
t191 = t1044 / 0.2e1 + t839 + t869 + t727 * t871;
t190 = -t1046 / 0.2e1 + t688 * t880 + t868 - t900 / 0.2e1;
t157 = -t419 * qJD(3) + t553 * t829;
t156 = t417 * qJD(3) + t449 * t829;
t139 = t754 - t794;
t129 = t132 * qJD(3);
t127 = -t767 + t1109;
t114 = t1003 / 0.2e1 + t738;
t113 = -t1002 / 0.2e1 + t739;
t109 = t755 - t792;
t78 = t1111 + t733;
t74 = t778 + t1138;
t71 = t986 - t897 / 0.2e1 + t784;
t69 = -t896 - t987 / 0.2e1 + t730;
t65 = t877 + t740;
t64 = t878 + t741;
t61 = t553 * t903 + t698 * t844 + t837 + (-t1072 / 0.2e1 - t318 / 0.2e1) * t723 + t1138;
t60 = pkin(5) * t979 / 0.2e1 - t788 * t844 + t907 * t1072 + t75;
t42 = t451 + t796 + t797;
t37 = t752 - t798;
t29 = t734 - t1137;
t27 = t742 + t795;
t24 = (t780 + t879) * pkin(5);
t19 = t1081 * t1144 + t1084 * t1143 + t761;
t10 = t1082 * t1143 + t1084 * t1144 - t1097 * t575 + t553 * t1135 + t760;
t6 = pkin(5) * t781 + t521 * t903 + t700 * t844 - t745;
t4 = -t744 + (t779 + t839) * pkin(5);
t1 = t735 - t753;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t423, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t242, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t118 + qJD(3) * t111, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t55 + qJD(3) * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t886, -t885, 0, 0, 0, 0, 0, 0, 0, 0 (-t726 * t951 - t729 * t913) * t722 (t725 * t952 - t729 * t912) * t722, t852 * t953, t930 + (-pkin(2) * t726 + pkin(8) * t852) * t953, 0, 0, 0, 0, 0, 0, qJD(3) * t504 - t782 * t886, qJD(3) * t503 + t688 * t886 (t620 * t688 + t621 * t782) * qJD(2) + t129, t933 + (t621 * t747 + t715 * t990 + t1005) * qJD(2) + t78 * qJD(3) + t286 * qJD(4), 0, 0, 0, 0, 0, 0 (-t563 * t782 + t582 * t620) * qJD(2) + t113 * qJD(3) + t191 * qJD(5) (t565 * t782 + t620 * t999) * qJD(2) + t114 * qJD(3) + t190 * qJD(5), t127 * qJD(3) + (-t1019 - t1020) * t916, t940 + (-t400 * t563 + t401 * t565 + t1005) * qJD(2) + t29 * qJD(3) + t109 * qJD(4), 0, 0, 0, 0, 0, 0 (-t358 * t782 + t449 * t620) * qJD(2) + t64 * qJD(3) + t911 * t1139 (t359 * t782 + t553 * t620) * qJD(2) + t65 * qJD(3) + t911 * t1142 (-t358 * t553 - t359 * t449) * qJD(2) + t27 * qJD(3) + t1067, t1027 + (-t170 * t358 + t171 * t359 + t521 * t620) * qJD(2) + t1 * qJD(3) + t42 * qJD(4) + t4 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t678 * qJD(3) - t725 * t885, t677 * qJD(3) - t728 * t885, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t504 - qJD(3) * t783, qJD(2) * t503 + qJD(3) * t543, t939, t78 * qJD(2) + (-t1062 * t783 - t543 * t721) * t1064, 0, 0, 0, 0, 0, 0, qJD(2) * t113 + qJD(5) * t342 - t783 * t946, qJD(2) * t114 + qJD(5) * t343 + t783 * t947, t127 * qJD(2) - qJD(3) * t853, t941 + t29 * qJD(2) + (-t712 * t853 + t713 * t783) * qJD(3), 0, 0, 0, 0, 0, 0, t64 * qJD(2) + t238 * t911 - t783 * t950, t65 * qJD(2) + t237 * t911 + t783 * t949, t27 * qJD(2) + (-t1128 * t788 - t1130 * t698) * qJD(3) + t1066, t1 * qJD(2) + (-t1128 * t575 - t1130 * t849 + t700 * t783) * qJD(3) + t24 * qJD(5) + t811; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t109, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t42 + t906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t191 + qJD(3) * t342 - qJD(5) * t477, qJD(2) * t190 + qJD(3) * t343 + qJD(5) * t476, 0, 0, 0, 0, 0, 0, 0, 0, t1147, t1146, t817, t4 * qJD(2) + t24 * qJD(3) + (-t1075 * t298 - t723 * t850) * t1065 + t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1147, t1146, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t930, 0, 0, 0, 0, 0, 0, -t501 * qJD(3), -t502 * qJD(3), t129, -qJD(3) * t77 - qJD(4) * t285 - t933, 0, 0, 0, 0, 0, 0, qJD(3) * t112 - qJD(5) * t188, qJD(3) * t115 - qJD(5) * t189, qJD(3) * t128, qJD(3) * t30 + qJD(4) * t110 - t940, 0, 0, 0, 0, 0, 0, -qJD(3) * t62 - t1140 * t911, -qJD(3) * t63 - t1141 * t911, qJD(3) * t28 + t1067, qJD(3) * t2 - qJD(4) * t41 - qJD(5) * t3 - t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t883, t708 * qJD(3), 0, -t883, 0, 0, -pkin(2) * t913, -pkin(2) * t912, 0, 0, t605, -t910 * qJD(3), 0, -t605, 0, 0, t556 * qJD(3), t557 * qJD(3), qJD(3) * t187 - qJD(4) * t1115, qJD(3) * t281 + qJD(4) * t357, t605 * t719 - t840, -qJD(5) * t587 - t782 * t832, t688 * t782 * t944 + qJD(3) * t496, t605 * t717 + t840, -qJD(3) * t494 + t688 * t887, -t605, qJD(3) * t116 - qJD(4) * t495 + qJD(5) * t257, qJD(3) * t117 - qJD(4) * t588 + qJD(5) * t256, -qJD(3) * t76, qJD(3) * t81 + qJD(4) * t138 (qJD(3) * t552 - t449 * t911) * t553, qJD(3) * t200 + t282 * t911, t307 * qJD(3) + t449 * t847 (qJD(3) * t549 + t553 * t911) * t449, t305 * qJD(3) + t553 * t847, -t605, qJD(3) * t39 + qJD(4) * t306 + qJD(5) * t79 + qJD(6) * t95, qJD(3) * t40 + qJD(4) * t308 + qJD(5) * t80 + qJD(6) * t94, qJD(3) * t14 + qJD(4) * t199 + qJD(5) * t17, qJD(3) * t20 + qJD(4) * t43 + qJD(5) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t709, t914, t912, -t709, -t913, 0, -pkin(8) * t912 - t905, pkin(8) * t913 - t904, 0, 0, t606, -t926, t679, -t606, -t915, 0, -qJD(3) * t616 + t800, -qJD(3) * t618 + t799 (-t1062 * t782 - t688 * t721) * t1064 - t804 (-t1062 * t616 + t618 * t721) * t1064 + t524 * qJD(4) + t812, -t925 - (-t719 * t916 - t888) * t782 (-t675 + t676) * qJD(3) + (-qJD(5) - t917) * t851, t724 * t915 + t957, t925 - (-t717 * t916 + t888) * t782, t667 - t959, t1116 (t724 * t815 - t1010) * qJD(3) + t234 * qJD(5) + t806 (t727 * t815 + t1011) * qJD(3) + t232 * qJD(5) + t805, qJD(3) * t816 + t814 (t616 * t713 + t712 * t816) * qJD(3) + t139 * qJD(4) + t826 (t949 + t955) * t552 + t1145, t936 + (-t997 + t1023) * qJD(3) + t971, t417 * t911 + t698 * t915 + t932 (-t950 + t1125) * t549 - t1145, t788 * t915 + t961 - t966, t1114 (-t520 * t788 + t549 * t700 - t688 * t849) * qJD(3) + t60 * qJD(5) + t75 * qJD(6) + t825 (t520 * t698 + t552 * t700 - t575 * t688) * qJD(3) + t61 * qJD(5) + t74 * qJD(6) + t824 (-t176 * t698 + t177 * t788 - t549 * t575 + t552 * t849) * qJD(3) + t10 * qJD(5) + t828 (-t176 * t849 + t177 * t575 + t520 * t700) * qJD(3) + t37 * qJD(4) + t6 * qJD(5) + t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t920, qJD(3) * t524 + t801, 0, 0, 0, 0, 0, 0, -t958, -t954, 0, qJD(3) * t139 + t807, 0, 0, 0, 0, 0, 0, t960 - t966, t418 * t911 + t931, t962, t37 * qJD(3) + (-t549 * t788 + t552 * t698) * qJD(4) + t19 * qJD(5) + t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, -t773, t843 * t582, t426, t785, t671, qJD(3) * t234 - qJD(5) * t401 - t803, qJD(3) * t232 + qJD(5) * t400 + t802, 0, 0, t1123, t106, t156, -t1123, t157, t671, qJD(3) * t60 + qJD(5) * t182 + qJD(6) * t69 - t399 - t822, qJD(3) * t61 - qJD(5) * t183 + qJD(6) * t71 + t394 - t821, t10 * qJD(3) + (t1075 * t449 - t553 * t723) * t1065 + t827, t6 * qJD(3) + t19 * qJD(4) + (t1075 * t182 + t183 * t723) * t1065 + t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1123, t106, t156, -t1123, t157, t671, qJD(3) * t75 + qJD(5) * t69 - qJD(6) * t171 - t399 - t819, qJD(3) * t74 + qJD(5) * t71 + qJD(6) * t170 + t394 - t820, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501 * qJD(2), t502 * qJD(2), -t939, qJD(2) * t77, 0, 0, 0, 0, 0, 0, -qJD(2) * t112, -qJD(2) * t115, -qJD(2) * t128, -qJD(2) * t30 - t941, 0, 0, 0, 0, 0, 0, qJD(2) * t62 - t235 * t911, qJD(2) * t63 - t236 * t911, -qJD(2) * t28 + t1066, -qJD(2) * t2 - qJD(5) * t23 - t811; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t709, -t914, 0, t709, 0, 0, t905, t904, 0, 0, -t606, t926, 0, t606, 0, 0, -qJD(4) * t688 - t800, -qJD(4) * t782 - t799, t804, qJD(4) * t525 - t812, -t606 * t719 - t925, 0.2e1 * t724 * t785, -qJD(5) * t584 - t957, -t606 * t717 + t925, t568 + t959, -t1116, qJD(5) * t233 - t688 * t945 - t806, qJD(4) * t582 + qJD(5) * t231 - t805, -qJD(4) * t586 - t814, qJD(4) * t140 - t826, -t552 * t955 + t1145, -t936 + t971, -t415 * t911 - t932, -t1125 * t549 - t1145, -t961 + t967, -t1114, -qJD(4) * t446 - qJD(5) * t59 - qJD(6) * t72 - t825, qJD(4) * t449 - qJD(5) * t58 - qJD(6) * t73 - t824, qJD(4) * t143 - qJD(5) * t9 - t828, qJD(4) * t38 - qJD(5) * t5 - t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t884, t707 * qJD(5), 0, -t884, 0, 0, t713 * t944, t713 * t943, 0, 0, t788 * t846, t911 * t546, 0, -t698 * t845, 0, 0, qJD(5) * t539 + t698 * t942, qJD(5) * t540 + t788 * t942, 0, qJD(5) * t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t916, -t917, 0, t927, 0, 0, 0, 0, 0, 0, -t882, t923, -t921, t938, 0, 0, 0, 0, 0, 0, -t929, t1125, t963, t813 + t972; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, -t772, -t922 + t943, -t506, t523, -t919, -t712 * t943 - t756, t712 * t944 - t757, 0, 0, -t1124, t158, t319, t1124, t321, -t919, -t1112 - t1120, t1122 - t809 (-t1075 * t788 - t698 * t723) * t1065 + t768 (-t1075 * t575 - t723 * t849) * t1065 + t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1124, t158, t319, t1124, t321, -t919, -t1113 - t1120, t1122 - t787, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t110, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + t906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t915, t679, t920, -qJD(3) * t525 - t801, 0, 0, 0, 0, 0, 0, t568 + t667 + t958, -qJD(3) * t582 + t887 + t954, t586 * qJD(3), -qJD(3) * t140 - t807, 0, 0, 0, 0, 0, 0, qJD(3) * t446 - t960 + t967, -t449 * qJD(3) - t416 * t911 - t931, -qJD(3) * t143 - t962, -qJD(3) * t38 - qJD(5) * t18 - t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t916, t917, 0, -t927, 0, 0, 0, 0, 0, 0, t882, -t923, t921, -t938, 0, 0, 0, 0, 0, 0, t929, -t1125, -t963, -t813 + t972; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t523, t808, 0, 0, 0, 0, 0, 0, 0, 0, t321, t320, 0 (-t1075 * t698 + t723 * t788) * t1065 + t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, t320, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t188, qJD(2) * t189, 0, 0, 0, 0, 0, 0, 0, 0, t1149, t1148, -t817, qJD(2) * t3 + qJD(3) * t23 - t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, t773, qJD(3) * t584 - t606 * t724, -t426, -qJD(3) * t579 - t782 * t882, t671, -qJD(3) * t233 - qJD(4) * t579 + t803, -qJD(3) * t231 - t782 * t945 - t802, 0, 0, -t1123, -t106, t271, t1123, t272, t671, qJD(3) * t59 + qJD(6) * t68 - t389 + t822, qJD(3) * t58 + qJD(6) * t70 + t392 + t821, qJD(3) * t9 - t827, qJD(3) * t5 + qJD(4) * t18 - t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, t772, t922, t506, -t924, t919, t756, t757, 0, 0, t1124, -t158, t391, -t1124, -t390, t919, t1112, t934 + t809, -t768, -t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t924, -t727 * t917, 0, 0, 0, 0, 0, 0, 0, 0, -t390, t393, 0, -t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t1071, -pkin(5) * t856, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1071 * t911 + t1001, t996 + (-t857 - t856) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1149, t1148, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1123, -t106, t271, t1123, t272, t671, qJD(3) * t72 - qJD(5) * t68 - t389 + t819, qJD(3) * t73 - qJD(5) * t70 + t392 + t820, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1124, -t158, t391, -t1124, -t390, t919, t1113, t934 + t787, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t390, t393, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1065 * t723 - t1001, pkin(5) * t857 - t996, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
