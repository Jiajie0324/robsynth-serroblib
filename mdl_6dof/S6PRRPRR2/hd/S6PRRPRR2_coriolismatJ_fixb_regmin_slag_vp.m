% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:00:20
% EndTime: 2019-03-08 22:00:40
% DurationCPUTime: 9.78s
% Computational Cost: add. (7669->481), mult. (17802->713), div. (0->0), fcn. (21115->12), ass. (0->403)
t372 = sin(pkin(12));
t377 = sin(qJ(3));
t381 = cos(qJ(3));
t590 = cos(pkin(12));
t412 = -t372 * t377 + t381 * t590;
t609 = t412 / 0.2e1;
t461 = t590 * t377;
t564 = t372 * t381;
t345 = t461 + t564;
t376 = sin(qJ(5));
t263 = t376 * t345;
t595 = -qJ(4) - pkin(8);
t356 = t595 * t377;
t357 = t595 * t381;
t293 = -t590 * t356 - t357 * t372;
t222 = pkin(5) * t263 + t293;
t375 = sin(qJ(6));
t379 = cos(qJ(6));
t380 = cos(qJ(5));
t544 = t379 * t380;
t238 = t263 * t375 - t345 * t544;
t365 = pkin(3) * t372 + pkin(9);
t596 = pkin(10) + t365;
t339 = t596 * t376;
t340 = t596 * t380;
t257 = -t375 * t339 + t379 * t340;
t545 = t379 * t376;
t554 = t375 * t380;
t351 = t545 + t554;
t605 = t351 / 0.2e1;
t366 = -pkin(3) * t590 - pkin(4);
t353 = -t380 * pkin(5) + t366;
t646 = -t353 / 0.2e1;
t643 = t222 * t605 + t238 * t646 + t257 * t609;
t185 = t351 * t345;
t555 = t375 * t376;
t349 = -t544 + t555;
t430 = -t379 * t339 - t375 * t340;
t642 = -t222 * t349 / 0.2e1 + t185 * t646 + t430 * t609;
t640 = t293 * t380;
t645 = t640 / 0.2e1;
t374 = cos(pkin(6));
t373 = sin(pkin(6));
t378 = sin(qJ(2));
t563 = t373 * t378;
t336 = -t374 * t381 + t377 * t563;
t308 = t590 * t336;
t337 = t374 * t377 + t381 * t563;
t566 = t372 * t337;
t458 = t308 + t566;
t611 = t458 / 0.2e1;
t635 = -t458 / 0.2e1;
t644 = t635 + t611;
t490 = qJD(5) + qJD(6);
t260 = t376 * t412;
t597 = t377 * pkin(3);
t266 = pkin(4) * t345 - pkin(9) * t412 + t597;
t246 = t376 * t266;
t529 = -t246 + t640;
t133 = -pkin(10) * t260 - t529;
t558 = t375 * t133;
t468 = -t558 / 0.2e1;
t247 = t380 * t266;
t265 = t380 * t412;
t553 = t293 * t376;
t600 = pkin(5) * t345;
t115 = -pkin(10) * t265 + t247 + t553 + t600;
t551 = t379 * t115;
t422 = t468 + t551 / 0.2e1;
t15 = t422 - t643;
t548 = t379 * t133;
t465 = -t548 / 0.2e1;
t561 = t375 * t115;
t423 = -t561 / 0.2e1 + t465;
t16 = t423 - t642;
t641 = -t412 / 0.2e1;
t628 = t372 * t356 - t590 * t357;
t575 = t628 * t376;
t574 = t628 * t380;
t515 = qJD(2) * t345;
t284 = t412 * t515;
t338 = t461 / 0.2e1 + t564 / 0.2e1;
t630 = t338 * qJD(5) - t284;
t638 = -t544 / 0.2e1 + t555 / 0.2e1;
t637 = t490 * t257;
t636 = t490 * t430;
t634 = t412 * t490;
t633 = t349 * t490;
t341 = t412 ^ 2;
t342 = t345 ^ 2;
t629 = -t342 - t341;
t509 = qJD(3) * t353;
t400 = t638 * t458;
t444 = t458 * t349;
t78 = t444 / 0.2e1 - t400;
t534 = t78 * qJD(1);
t627 = qJD(2) * t16 + t349 * t509 + t534;
t419 = t554 / 0.2e1 + t545 / 0.2e1;
t401 = t419 * t458;
t443 = t458 * t351;
t77 = -t443 / 0.2e1 + t401;
t535 = t77 * qJD(1);
t626 = qJD(2) * t15 - t351 * t509 + t535;
t599 = pkin(5) * t376;
t231 = -t349 * t353 + t351 * t599;
t601 = -t380 / 0.2e1;
t603 = t376 / 0.2e1;
t604 = -t375 / 0.2e1;
t3 = (t238 * t603 + (t351 * t601 + t604) * t345) * pkin(5) + t16;
t625 = t3 * qJD(2) - t231 * qJD(3) + t534;
t230 = t349 * t599 + t351 * t353;
t602 = t379 / 0.2e1;
t4 = (-t185 * t603 + (t349 * t601 + t602) * t345) * pkin(5) + t15;
t624 = t4 * qJD(2) - t230 * qJD(3) + t535;
t623 = qJD(6) * t338 + t630;
t482 = t376 * t563;
t382 = cos(qJ(2));
t562 = t373 * t382;
t297 = t412 * t562;
t543 = t380 * t297;
t251 = t482 + t543;
t546 = t379 * t251;
t552 = t376 * t297;
t249 = t380 * t563 - t552;
t557 = t375 * t249;
t421 = -t557 / 0.2e1 - t546 / 0.2e1;
t413 = -t372 * t336 + t337 * t590;
t200 = t376 * t413 + t380 * t562;
t201 = -t376 * t562 + t380 * t413;
t53 = t379 * t200 + t375 * t201;
t619 = t185 * t635 + t53 * t641;
t385 = t421 - t619;
t622 = qJD(1) * t385;
t547 = t379 * t249;
t556 = t375 * t251;
t420 = -t556 / 0.2e1 + t547 / 0.2e1;
t54 = t375 * t200 - t379 * t201;
t620 = t238 * t635 + t54 * t641;
t386 = t420 - t620;
t621 = qJD(1) * t386;
t618 = qJD(2) * t385 + t78 * qJD(3);
t617 = qJD(2) * t386 + t77 * qJD(3);
t370 = t376 ^ 2;
t371 = t380 ^ 2;
t362 = t371 - t370;
t459 = 0.2e1 * t380 * t263;
t405 = qJD(2) * t459 - qJD(3) * t362;
t390 = t420 + t620;
t80 = t443 / 0.2e1 + t401;
t616 = qJD(2) * t390 + t80 * qJD(3) + t490 * t54;
t391 = t421 + t619;
t79 = -t444 / 0.2e1 - t400;
t615 = qJD(2) * t391 + t79 * qJD(3) + t490 * t53;
t368 = -pkin(3) * t381 - pkin(2);
t258 = -pkin(4) * t412 - pkin(9) * t345 + t368;
t152 = -t380 * t258 + t575;
t569 = t345 * t380;
t131 = -pkin(10) * t569 - t152;
t598 = t412 * pkin(5);
t114 = t131 - t598;
t113 = t379 * t114;
t614 = -t113 / 0.2e1;
t613 = -t114 / 0.2e1;
t612 = t413 / 0.2e1;
t608 = -t345 / 0.2e1;
t607 = t345 / 0.2e1;
t606 = t349 / 0.2e1;
t63 = t185 * t349 + t351 * t238;
t594 = t490 * t63;
t593 = pkin(5) * qJD(5);
t592 = pkin(5) * qJD(6);
t591 = qJD(3) * pkin(3);
t483 = t598 / 0.2e1;
t452 = t483 + t131 / 0.2e1;
t11 = (t613 + t452) * t375;
t589 = qJD(2) * t11;
t13 = t379 * t452 + t614;
t588 = qJD(2) * t13;
t587 = t200 * t412;
t586 = t201 * t412;
t585 = t222 * t238;
t584 = t222 * t185;
t581 = t238 * t345;
t239 = t351 * t412;
t580 = t239 * t412;
t579 = t185 * t345;
t242 = t349 * t412;
t578 = t242 * t412;
t296 = t345 * t562;
t572 = t296 * t376;
t571 = t296 * t380;
t570 = t412 * t345;
t560 = t375 * t131;
t153 = t258 * t376 + t574;
t132 = -pkin(10) * t263 + t153;
t559 = t375 * t132;
t550 = t379 * t131;
t549 = t379 * t132;
t418 = t611 - t566 / 0.2e1 - t308 / 0.2e1;
t42 = -t418 * t412 + (-t413 / 0.2e1 + t612) * t345;
t542 = t42 * qJD(2);
t64 = t185 * t242 + t238 * t239;
t536 = t64 * qJD(2);
t81 = -t373 ^ 2 * t382 * t378 + t296 * t458 + t297 * t413;
t533 = t81 * qJD(1);
t108 = -t185 * t605 + t238 * t606;
t532 = t490 * t108;
t162 = (t605 + t419) * t412;
t531 = t490 * t162;
t167 = t351 * t609 - t412 * t419;
t530 = t490 * t167;
t527 = -t260 * t604 - t265 * t602;
t526 = t638 * t412;
t104 = -t579 + t580;
t525 = qJD(2) * t104;
t105 = t579 + t580;
t524 = qJD(2) * t105;
t106 = t578 - t581;
t523 = qJD(2) * t106;
t107 = -t578 - t581;
t522 = qJD(2) * t107;
t489 = t342 - t341;
t208 = t489 * t376;
t521 = qJD(2) * t208;
t209 = t629 * t376;
t520 = qJD(2) * t209;
t210 = t489 * t380;
t519 = qJD(2) * t210;
t518 = qJD(2) * t238;
t268 = t629 * t380;
t517 = qJD(2) * t268;
t516 = qJD(2) * t412;
t514 = qJD(2) * t378;
t513 = qJD(2) * t380;
t512 = qJD(2) * t381;
t511 = qJD(3) * t349;
t510 = qJD(3) * t351;
t508 = qJD(3) * t376;
t507 = qJD(3) * t380;
t506 = qJD(4) * t380;
t505 = qJD(5) * t376;
t504 = qJD(5) * t380;
t503 = qJD(6) * t353;
t142 = t162 * qJD(2);
t470 = -t242 / 0.2e1;
t163 = t470 - t526;
t143 = t163 * qJD(2);
t471 = t242 / 0.2e1;
t164 = t471 + t527;
t145 = t164 * qJD(2);
t182 = t345 * t349;
t502 = t182 * qJD(2);
t501 = t185 * qJD(2);
t480 = -t590 / 0.2e1;
t403 = t345 * t480 + t372 * t609;
t225 = (-t377 / 0.2e1 + t403) * pkin(3);
t500 = t225 * qJD(2);
t499 = t260 * qJD(2);
t498 = t263 * qJD(2);
t497 = t265 * qJD(2);
t496 = t629 * qJD(2);
t495 = t338 * qJD(2);
t363 = -t377 ^ 2 + t381 ^ 2;
t493 = t363 * qJD(2);
t492 = t377 * qJD(3);
t491 = t381 * qJD(3);
t488 = pkin(5) * t569;
t487 = pkin(2) * t377 * qJD(2);
t486 = pkin(2) * t512;
t485 = t600 / 0.2e1;
t484 = -t599 / 0.2e1;
t481 = t377 * t562;
t479 = t376 * t507;
t478 = t412 * t504;
t283 = qJD(3) * t570;
t477 = qJD(2) * t562;
t476 = t376 * t504;
t475 = t377 * t512;
t474 = t345 * t513;
t473 = t296 * t606;
t472 = t296 * t605;
t469 = t563 / 0.2e1;
t466 = -t552 / 0.2e1;
t463 = -t543 / 0.2e1;
t462 = -t246 / 0.2e1 + t645;
t460 = pkin(5) * t490;
t456 = t490 * t351;
t455 = t380 * t485;
t454 = -qJD(5) + t516;
t453 = t485 + t115 / 0.2e1;
t451 = qJD(3) * t459;
t221 = pkin(5) * t260 + t628;
t47 = -t113 + t559;
t1 = -(t551 - t558) * t412 - t47 * t345 + t221 * t185 + t222 * t239;
t383 = -t185 * t612 + t239 * t644 + t53 * t607;
t7 = t473 + t383;
t449 = -t7 * qJD(1) + t1 * qJD(2);
t48 = t375 * t114 + t549;
t2 = (t548 + t561) * t412 - t48 * t345 - t221 * t238 - t222 * t242;
t384 = t238 * t612 - t242 * t635 - t458 * t471 + t54 * t608;
t8 = t472 + t384;
t448 = -t8 * qJD(1) + t2 * qJD(2);
t447 = qJD(6) - t454;
t389 = t644 * t628;
t404 = t297 * t372 / 0.2e1 + t296 * t480;
t19 = (t481 / 0.2e1 + t404) * pkin(3) + t389;
t94 = t368 * t597;
t442 = -t19 * qJD(1) + t94 * qJD(2);
t51 = -t549 - t560;
t21 = t185 * t488 - t412 * t51 - t585;
t441 = -qJD(2) * t21 + t621;
t52 = t550 - t559;
t22 = -t238 * t488 + t412 * t52 - t584;
t440 = -qJD(2) * t22 + t622;
t23 = -t412 * t47 - t584;
t439 = -qJD(2) * t23 + t622;
t24 = t412 * t48 - t585;
t438 = -qJD(2) * t24 + t621;
t394 = t413 * t607;
t388 = t200 * t608 + t376 * t394;
t35 = t571 / 0.2e1 + t388;
t39 = (-t152 + t575) * t345 - t247 * t412;
t437 = t35 * qJD(1) + t39 * qJD(2);
t387 = t201 * t608 + t380 * t394;
t38 = -t572 / 0.2e1 + t387;
t40 = (-t153 + t574) * t345 - (t529 - t640) * t412;
t436 = t38 * qJD(1) + t40 * qJD(2);
t435 = t42 * qJD(1);
t426 = t458 * t608;
t396 = t469 + t426;
t56 = t466 - t586 / 0.2e1 + t396 * t380;
t91 = t153 * t412 + t293 * t569;
t434 = qJD(1) * t56 - qJD(2) * t91;
t57 = t463 + t587 / 0.2e1 - t396 * t376;
t90 = -t152 * t412 - t263 * t293;
t433 = -qJD(1) * t57 + qJD(2) * t90;
t95 = t185 ^ 2 - t238 ^ 2;
t33 = qJD(2) * t95 + qJD(3) * t63;
t429 = -t345 * t365 + t366 * t412;
t134 = t293 * t345 + t412 * t628;
t397 = t413 * t609 + t458 * t607;
t96 = t469 - t397;
t428 = -qJD(1) * t96 + qJD(2) * t134;
t235 = t349 ^ 2 - t351 ^ 2;
t45 = qJD(2) * t63 + qJD(3) * t235;
t427 = t454 * t380;
t425 = t380 * t611;
t424 = t365 * t641 + t366 * t608;
t415 = t345 * t427;
t50 = -qJD(3) * t108 - t185 * t518;
t83 = -qJD(2) * t108 + t349 * t510;
t259 = (t370 / 0.2e1 - t371 / 0.2e1) * t345;
t414 = -qJD(2) * t259 + t479;
t407 = t342 * t376 * t513 + qJD(3) * t259;
t267 = t362 * t342;
t406 = qJD(2) * t267 + t451;
t402 = t424 * t380;
t127 = t418 * t376;
t75 = -t247 / 0.2e1 - t402;
t399 = qJD(1) * t127 - qJD(2) * t75 - t366 * t508;
t128 = t418 * t380;
t395 = t424 * t376 + t645;
t73 = t395 - t462;
t398 = qJD(1) * t128 - qJD(2) * t73 - t366 * t507;
t332 = t338 * qJD(3);
t329 = t345 * t507;
t253 = t260 * qJD(5);
t252 = t259 * qJD(5);
t224 = t597 / 0.2e1 + t403 * pkin(3);
t223 = t499 - t505;
t166 = t470 + t527;
t165 = t471 - t526;
t151 = t167 * qJD(4);
t146 = t166 * qJD(4);
t144 = t164 * qJD(4);
t141 = t162 * qJD(4);
t130 = -t458 * t601 + t425;
t129 = t376 * t611 + t458 * t603;
t118 = -t456 + t142;
t117 = -t145 + t633;
t116 = -t143 - t633;
t97 = t469 + t397;
t93 = qJD(3) * t163 - t185 * t516;
t92 = -qJD(3) * t162 + t238 * t516;
t76 = t293 * t603 + t553 / 0.2e1 + t247 / 0.2e1 - t402;
t74 = t395 + t462;
t59 = t586 / 0.2e1 + t345 * t425 + t466 + t380 * t469;
t58 = -t587 / 0.2e1 + t376 * t426 + t463 - t482 / 0.2e1;
t44 = qJD(3) * t165 - t185 * t447;
t43 = qJD(3) * t167 + t238 * t447;
t41 = t42 * qJD(3);
t37 = t572 / 0.2e1 + t387;
t36 = -t571 / 0.2e1 + t388;
t20 = -t389 + (-t481 / 0.2e1 + t404) * pkin(3);
t18 = t422 + t643;
t17 = t423 + t642;
t14 = t379 * t483 + t559 + t614 - t550 / 0.2e1;
t12 = -t549 - t560 / 0.2e1 + (t483 + t613) * t375;
t10 = t472 - t384;
t9 = t473 - t383;
t6 = t238 * t484 + t351 * t455 - t453 * t375 + t465 + t642;
t5 = -t185 * t484 + t349 * t455 + t453 * t379 + t468 + t643;
t25 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t373 * t514, -t477, 0, 0, 0, 0, 0 (-t378 * t512 - t382 * t492) * t373 (t377 * t514 - t382 * t491) * t373 (t296 * t345 + t297 * t412) * qJD(2) + t41, t533 + (t293 * t296 + t297 * t628 + t368 * t563) * qJD(2) + t20 * qJD(3) + t97 * qJD(4), 0, 0, 0, 0, 0 (-t249 * t412 + t263 * t296) * qJD(2) + t36 * qJD(3) + t59 * qJD(5) (t251 * t412 + t296 * t569) * qJD(2) + t37 * qJD(3) + t58 * qJD(5), 0, 0, 0, 0, 0 (-(t547 - t556) * t412 + t296 * t185) * qJD(2) + t9 * qJD(3) + t490 * t390 ((t546 + t557) * t412 - t296 * t238) * qJD(2) + t10 * qJD(3) + t490 * t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337 * qJD(3) - t377 * t477, t336 * qJD(3) - t381 * t477, t542, t20 * qJD(2) + (-t372 * t458 - t413 * t590) * t591, 0, 0, 0, 0, 0, qJD(2) * t36 + qJD(5) * t129 - t413 * t507, qJD(2) * t37 + qJD(5) * t130 + t413 * t508, 0, 0, 0, 0, 0, qJD(2) * t9 + t413 * t511 + t490 * t80, qJD(2) * t10 + t413 * t510 + t490 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t59 + qJD(3) * t129 - qJD(5) * t201, qJD(2) * t58 + qJD(3) * t130 + qJD(5) * t200, 0, 0, 0, 0, 0, t616, t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t616, t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -qJD(3) * t19 - qJD(4) * t96 - t533, 0, 0, 0, 0, 0, qJD(3) * t35 - qJD(5) * t56, qJD(3) * t38 - qJD(5) * t57, 0, 0, 0, 0, 0, -qJD(3) * t7 - t386 * t490, -qJD(3) * t8 - t385 * t490; 0, 0, 0, 0, t377 * t491, t363 * qJD(3), 0, 0, 0, -pkin(2) * t492, -pkin(2) * t491, -qJD(4) * t629, qJD(3) * t94 + qJD(4) * t134, t283 * t371 - t342 * t476, -qJD(5) * t267 - t412 * t451, qJD(3) * t210 + t505 * t570, -qJD(3) * t208 + t345 * t478, -t283, qJD(3) * t39 - qJD(4) * t209 + qJD(5) * t91, qJD(3) * t40 - qJD(4) * t268 + qJD(5) * t90 (qJD(3) * t242 + t185 * t490) * t238, qJD(3) * t64 + t490 * t95, qJD(3) * t106 + t185 * t634, qJD(3) * t104 - t238 * t634, -t283, qJD(3) * t1 + qJD(4) * t105 + qJD(5) * t21 + qJD(6) * t24, qJD(3) * t2 + qJD(4) * t107 + qJD(5) * t22 + qJD(6) * t23; 0, 0, 0, 0, t475, t493, t491, -t492, 0, -pkin(8) * t491 - t487, pkin(8) * t492 - t486 (-t345 * t372 - t412 * t590) * t591 + t435 (-t293 * t372 - t590 * t628) * t591 + t224 * qJD(4) + t442, -t252 - (-t371 * t515 - t479) * t412, -0.2e1 * t345 * t476 - t405 * t412, t345 * t508 + t519, t329 - t521, t630 (t376 * t429 - t574) * qJD(3) + t76 * qJD(5) + t437 (t380 * t429 + t575) * qJD(3) + t74 * qJD(5) + t436 -(t510 - t518) * t242 + t532, t536 + (-t239 * t351 + t242 * t349) * qJD(3) + t594, t165 * t490 + t345 * t510 + t523, -t345 * t511 + t525 + t530, t623 (t221 * t349 + t239 * t353 + t345 * t430) * qJD(3) + t5 * qJD(5) + t18 * qJD(6) + t449 (t221 * t351 - t242 * t353 - t257 * t345) * qJD(3) + t6 * qJD(5) + t17 * qJD(6) + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t496, qJD(3) * t224 + t428, 0, 0, 0, 0, 0, -t520, -t517, 0, 0, 0, 0, 0, t524 + t530, t166 * t490 + t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, -t406, t454 * t263, t415, t332, qJD(3) * t76 - qJD(5) * t153 - t434, qJD(3) * t74 + qJD(5) * t152 + t433, -t50, t33, t44, t43, t332, qJD(3) * t5 + qJD(5) * t51 + qJD(6) * t12 + t151 - t441, qJD(3) * t6 - qJD(5) * t52 + qJD(6) * t14 + t146 - t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, t33, t44, t43, t332, qJD(3) * t18 + qJD(5) * t12 - qJD(6) * t48 + t151 - t438, qJD(3) * t17 + qJD(5) * t14 + qJD(6) * t47 + t146 - t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t542, qJD(2) * t19, 0, 0, 0, 0, 0, -qJD(2) * t35 - qJD(5) * t127, -qJD(2) * t38 - qJD(5) * t128, 0, 0, 0, 0, 0, qJD(2) * t7 - t490 * t77, qJD(2) * t8 - t490 * t78; 0, 0, 0, 0, -t475, -t493, 0, 0, 0, t487, t486, -t435, qJD(4) * t225 - t442, -t284 * t371 - t252, 0.2e1 * t376 * t415, -qJD(5) * t265 - t519, t253 + t521, -t630, qJD(5) * t75 - t345 * t506 - t437, qJD(4) * t263 + qJD(5) * t73 - t436, -t242 * t518 + t532, -t536 + t594, -t163 * t490 - t523, -t525 + t531, -t623, qJD(4) * t182 - qJD(5) * t4 - qJD(6) * t15 - t449, qJD(4) * t185 - qJD(5) * t3 - qJD(6) * t16 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, t362 * qJD(5), 0, 0, 0, t366 * t505, t366 * t504, -t349 * t456, t490 * t235, 0, 0, 0, qJD(5) * t230 + t351 * t503, qJD(5) * t231 - t349 * t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t500, 0, 0, 0, 0, 0, -t474, t498, 0, 0, 0, 0, 0, t502, t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t414, -t405, -t497 + t504, t223, -t495, -t365 * t504 - t399, t365 * t505 - t398, -t83, t45, t116, t118, -t495, -t624 - t637, -t625 - t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, t45, t116, t118, -t495, -t626 - t637, -t627 - t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, -qJD(3) * t225 - t428, 0, 0, 0, 0, 0, t253 + t329 + t520, -qJD(3) * t263 + t478 + t517, 0, 0, 0, 0, 0, -qJD(3) * t182 - t524 + t531, -qJD(3) * t185 - t164 * t490 - t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, 0, 0, 0, 0, 0, t474, -t498, 0, 0, 0, 0, 0, -t502, -t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t427, 0, 0, 0, 0, 0, t118, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t56 + qJD(3) * t127, qJD(2) * t57 + qJD(3) * t128, 0, 0, 0, 0, 0, t617, t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t406, qJD(3) * t265 - t284 * t376, -qJD(3) * t260 - t412 * t474, t332, -qJD(3) * t75 - qJD(4) * t260 + t434, -qJD(3) * t73 - t412 * t506 - t433, t50, -t33, t93, t92, t332, qJD(3) * t4 + qJD(6) * t11 - t141 + t441, qJD(3) * t3 + qJD(6) * t13 + t144 + t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t405, t497, -t499, t495, t399, t398, t83, -t45, t143, -t142, t495, t624, t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t499, -t412 * t513, 0, 0, 0, 0, 0, -t142, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375 * t592, -t379 * t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375 * t460 + t589, -t379 * t460 + t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t617, t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t33, t93, t92, t332, qJD(3) * t15 - qJD(5) * t11 - t141 + t438, qJD(3) * t16 - qJD(5) * t13 + t144 + t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, -t45, t143, -t142, t495, t626, t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t375 * t593 - t589, t379 * t593 - t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t25;
