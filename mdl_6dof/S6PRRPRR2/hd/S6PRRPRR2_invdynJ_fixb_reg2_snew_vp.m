% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 04:34
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRPRR2_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 04:32:50
% EndTime: 2019-05-05 04:33:04
% DurationCPUTime: 6.58s
% Computational Cost: add. (36933->502), mult. (80747->744), div. (0->0), fcn. (60311->14), ass. (0->290)
t250 = sin(pkin(12));
t252 = cos(pkin(12));
t262 = cos(qJ(3));
t299 = qJD(2) * t262;
t258 = sin(qJ(3));
t300 = qJD(2) * t258;
t216 = t250 * t300 - t252 * t299;
t218 = t250 * t299 + t252 * t300;
t194 = t218 * t216;
t334 = qJDD(3) - t194;
t345 = t250 * t334;
t344 = t252 * t334;
t256 = sin(qJ(6));
t257 = sin(qJ(5));
t261 = cos(qJ(5));
t200 = -t261 * qJD(3) + t218 * t257;
t202 = qJD(3) * t257 + t218 * t261;
t260 = cos(qJ(6));
t170 = t260 * t200 + t202 * t256;
t172 = -t200 * t256 + t202 * t260;
t132 = t172 * t170;
t290 = qJD(2) * qJD(3);
t282 = t262 * t290;
t289 = t258 * qJDD(2);
t223 = t282 + t289;
t242 = t262 * qJDD(2);
t283 = t258 * t290;
t224 = t242 - t283;
t277 = t223 * t250 - t252 * t224;
t193 = qJDD(5) + t277;
t192 = qJDD(6) + t193;
t337 = -t132 + t192;
t343 = t256 * t337;
t175 = t202 * t200;
t335 = -t175 + t193;
t342 = t257 * t335;
t341 = t260 * t337;
t340 = t261 * t335;
t251 = sin(pkin(6));
t253 = cos(pkin(6));
t319 = sin(pkin(11));
t320 = cos(pkin(11));
t270 = t319 * g(1) - t320 * g(2);
t269 = t253 * t270;
t302 = -g(3) + qJDD(1);
t339 = t251 * t302 + t269;
t297 = qJD(3) * t218;
t176 = t277 + t297;
t228 = -t320 * g(1) - t319 * g(2);
t259 = sin(qJ(2));
t263 = cos(qJ(2));
t186 = t263 * t228 + t339 * t259;
t338 = qJDD(2) * pkin(8) + t186;
t196 = t223 * t252 + t224 * t250;
t274 = -t257 * qJDD(3) - t261 * t196;
t164 = -qJD(5) * t200 - t274;
t278 = -t261 * qJDD(3) + t257 * t196;
t272 = qJD(5) * t202 + t278;
t109 = -t170 * qJD(6) + t260 * t164 - t256 * t272;
t213 = qJD(5) + t216;
t209 = qJD(6) + t213;
t157 = t209 * t170;
t336 = -t157 + t109;
t184 = t213 * t200;
t137 = t164 + t184;
t229 = qJD(3) * pkin(3) - qJ(4) * t300;
t247 = t262 ^ 2;
t268 = -t251 * t270 + t253 * t302;
t267 = t258 * t268;
t332 = qJD(2) ^ 2;
t144 = t262 * t338 + t267 - qJD(3) * t229 + t224 * qJ(4) + (-pkin(2) * t262 - pkin(3) * t247) * t332;
t266 = -t332 * pkin(2) + t338;
t159 = t258 * t266 - t262 * t268;
t238 = t258 * t332 * t262;
t230 = qJDD(3) + t238;
t265 = -t159 + (-t223 + t282) * qJ(4) + t230 * pkin(3);
t99 = -0.2e1 * qJD(4) * t216 + t252 * t144 + t250 * t265;
t279 = t256 * t164 + t260 * t272;
t88 = (qJD(6) - t209) * t172 + t279;
t133 = (qJD(5) - t213) * t202 + t278;
t168 = t170 ^ 2;
t169 = t172 ^ 2;
t333 = t200 ^ 2;
t199 = t202 ^ 2;
t208 = t209 ^ 2;
t212 = t213 ^ 2;
t214 = t216 ^ 2;
t215 = t218 ^ 2;
t331 = 0.2e1 * qJD(4);
t275 = t259 * t228 - t339 * t263;
t181 = -qJDD(2) * pkin(2) - t332 * pkin(8) + t275;
t245 = t247 * t332;
t150 = -t224 * pkin(3) - qJ(4) * t245 + t229 * t300 + qJDD(4) + t181;
t298 = qJD(3) * t216;
t276 = -t196 + t298;
t112 = t176 * pkin(4) + t276 * pkin(9) + t150;
t187 = pkin(4) * t216 - pkin(9) * t218;
t264 = qJD(3) ^ 2;
t78 = -pkin(4) * t264 + qJDD(3) * pkin(9) - t187 * t216 + t99;
t64 = -t261 * t112 + t257 * t78;
t46 = pkin(5) * t335 - pkin(10) * t137 - t64;
t180 = pkin(5) * t213 - pkin(10) * t202;
t65 = t257 * t112 + t261 * t78;
t48 = -t333 * pkin(5) - pkin(10) * t272 - t213 * t180 + t65;
t24 = t256 * t48 - t260 * t46;
t25 = t256 * t46 + t260 * t48;
t12 = -t24 * t260 + t25 * t256;
t330 = pkin(5) * t12;
t91 = t157 + t109;
t56 = -t256 * t88 - t260 * t91;
t329 = pkin(5) * t56;
t328 = pkin(4) * t250;
t327 = t12 * t257;
t326 = t12 * t261;
t280 = t250 * t144 - t252 * t265;
t77 = -qJDD(3) * pkin(4) - t264 * pkin(9) + (t331 + t187) * t218 + t280;
t70 = pkin(5) * t272 - t333 * pkin(10) + t202 * t180 + t77;
t325 = t256 * t70;
t324 = t257 * t77;
t98 = t218 * t331 + t280;
t66 = t250 * t99 - t252 * t98;
t323 = t258 * t66;
t322 = t260 * t70;
t321 = t261 * t77;
t123 = t132 + t192;
t317 = t123 * t256;
t316 = t123 * t260;
t148 = t175 + t193;
t315 = t148 * t257;
t314 = t148 * t261;
t313 = t150 * t250;
t312 = t150 * t252;
t190 = qJDD(3) + t194;
t311 = t190 * t250;
t310 = t190 * t252;
t309 = t209 * t256;
t308 = t209 * t260;
t307 = t213 * t257;
t306 = t213 * t261;
t305 = t258 * t230;
t231 = qJDD(3) - t238;
t304 = t262 * t231;
t296 = qJD(3) * t250;
t295 = qJD(3) * t252;
t292 = qJD(5) + t213;
t288 = t250 * t132;
t287 = t252 * t132;
t286 = t250 * t175;
t285 = t252 * t175;
t284 = -pkin(4) * t252 - pkin(3);
t13 = t24 * t256 + t260 * t25;
t67 = t250 * t98 + t252 * t99;
t37 = t257 * t64 + t261 * t65;
t160 = t262 * t266 + t267;
t119 = t159 * t258 + t262 * t160;
t36 = t257 * t65 - t261 * t64;
t28 = t250 * t37 - t252 * t77;
t29 = t250 * t77 + t252 * t37;
t15 = -t258 * t28 + t262 * t29;
t127 = -t208 - t168;
t79 = t127 * t256 + t341;
t273 = pkin(5) * t79 - t24;
t177 = -t277 + t297;
t145 = -t169 - t208;
t95 = t145 * t260 - t317;
t271 = pkin(5) * t95 - t25;
t246 = t258 ^ 2;
t243 = t246 * t332;
t237 = -t245 - t264;
t236 = -t243 - t264;
t227 = t243 + t245;
t226 = (t246 + t247) * qJDD(2);
t225 = t242 - 0.2e1 * t283;
t222 = 0.2e1 * t282 + t289;
t207 = -t215 - t264;
t206 = -t215 + t264;
t205 = t214 - t264;
t204 = -t236 * t258 - t304;
t203 = t237 * t262 - t305;
t188 = -t264 - t214;
t183 = -t199 + t212;
t182 = -t212 + t333;
t179 = t196 + t298;
t174 = -t214 - t215;
t173 = t199 - t333;
t167 = -t199 - t212;
t166 = -t207 * t250 - t310;
t165 = t207 * t252 - t311;
t162 = -t212 - t333;
t156 = t199 + t333;
t154 = -t169 + t208;
t153 = t168 - t208;
t152 = t188 * t252 - t345;
t151 = t188 * t250 + t344;
t146 = (-t200 * t261 + t202 * t257) * t213;
t143 = t177 * t252 + t179 * t250;
t142 = t177 * t250 - t179 * t252;
t138 = t292 * t200 + t274;
t136 = t164 - t184;
t135 = -t292 * t202 - t278;
t131 = t169 - t168;
t130 = t164 * t261 - t202 * t307;
t129 = t200 * t306 + t257 * t272;
t128 = -t165 * t258 + t166 * t262;
t126 = t182 * t261 - t315;
t125 = -t183 * t257 + t340;
t121 = -t167 * t257 - t314;
t120 = t167 * t261 - t315;
t118 = (-t170 * t260 + t172 * t256) * t209;
t117 = (-t170 * t256 - t172 * t260) * t209;
t116 = t162 * t261 - t342;
t115 = t162 * t257 + t340;
t114 = -t151 * t258 + t152 * t262;
t113 = -t168 - t169;
t108 = -qJD(6) * t172 - t279;
t107 = -t142 * t258 + t143 * t262;
t106 = t135 * t261 - t136 * t257;
t105 = -t133 * t261 + t137 * t257;
t104 = -t133 * t257 - t137 * t261;
t103 = t153 * t260 - t317;
t102 = -t154 * t256 + t341;
t101 = t153 * t256 + t316;
t100 = t154 * t260 + t343;
t96 = -t145 * t256 - t316;
t94 = t121 * t252 - t138 * t250;
t93 = t121 * t250 + t138 * t252;
t87 = (qJD(6) + t209) * t172 + t279;
t86 = t116 * t252 - t135 * t250;
t85 = t116 * t250 + t135 * t252;
t84 = t109 * t260 - t172 * t309;
t83 = t109 * t256 + t172 * t308;
t82 = -t108 * t256 + t170 * t308;
t81 = t108 * t260 + t170 * t309;
t80 = t127 * t260 - t343;
t75 = t105 * t252 - t156 * t250;
t74 = t105 * t250 + t156 * t252;
t73 = -t117 * t257 + t118 * t261;
t72 = -pkin(9) * t120 + t321;
t71 = -pkin(9) * t115 + t324;
t69 = -t101 * t257 + t103 * t261;
t68 = -t100 * t257 + t102 * t261;
t62 = -t257 * t95 + t261 * t96;
t61 = t257 * t96 + t261 * t95;
t60 = -t258 * t93 + t262 * t94;
t59 = -t256 * t336 - t260 * t87;
t58 = t256 * t91 - t260 * t88;
t57 = -t256 * t87 + t260 * t336;
t55 = -t258 * t85 + t262 * t86;
t54 = -t257 * t83 + t261 * t84;
t53 = -t257 * t81 + t261 * t82;
t52 = -t257 * t79 + t261 * t80;
t51 = t257 * t80 + t261 * t79;
t50 = -t258 * t74 + t262 * t75;
t49 = -pkin(4) * t120 + t65;
t47 = -pkin(4) * t115 + t64;
t44 = -pkin(10) * t95 + t322;
t43 = -pkin(10) * t79 + t325;
t42 = t250 * t336 + t252 * t62;
t41 = t250 * t62 - t252 * t336;
t40 = t250 * t87 + t252 * t52;
t39 = t250 * t52 - t252 * t87;
t38 = t262 * t67 - t323;
t35 = -pkin(5) * t336 + pkin(10) * t96 + t325;
t34 = -pkin(5) * t87 + pkin(10) * t80 - t322;
t33 = -t257 * t57 + t261 * t59;
t32 = -t257 * t56 + t261 * t58;
t31 = t257 * t58 + t261 * t56;
t30 = -pkin(9) * t104 - t36;
t27 = t113 * t250 + t252 * t32;
t26 = -t113 * t252 + t250 * t32;
t22 = -t258 * t41 + t262 * t42;
t21 = -pkin(4) * t31 - t329;
t20 = -t258 * t39 + t262 * t40;
t19 = -pkin(4) * t61 - t271;
t18 = -pkin(4) * t51 - t273;
t17 = -pkin(9) * t61 - t257 * t35 + t261 * t44;
t16 = -pkin(9) * t51 - t257 * t34 + t261 * t43;
t14 = -t258 * t26 + t262 * t27;
t11 = -pkin(5) * t70 + pkin(10) * t13;
t10 = -pkin(10) * t56 - t12;
t9 = -pkin(5) * t113 + pkin(10) * t58 + t13;
t8 = t13 * t261 - t327;
t7 = t13 * t257 + t326;
t6 = t250 * t70 + t252 * t8;
t5 = t250 * t8 - t252 * t70;
t4 = -pkin(9) * t31 + t10 * t261 - t257 * t9;
t3 = -pkin(4) * t7 - t330;
t2 = -pkin(9) * t7 - pkin(10) * t326 - t11 * t257;
t1 = -t258 * t5 + t262 * t6;
t23 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t302, 0, 0, 0, 0, 0, 0, (qJDD(2) * t263 - t332 * t259) * t251, (-qJDD(2) * t259 - t332 * t263) * t251, 0, t253 ^ 2 * t302 + (t259 * t186 - t263 * t275 - t269) * t251, 0, 0, 0, 0, 0, 0, t253 * (t230 * t262 + t237 * t258) + (t203 * t259 + t225 * t263) * t251, t253 * (-t231 * t258 + t236 * t262) + (t204 * t259 - t222 * t263) * t251, (t226 * t259 + t227 * t263) * t251, t253 * (-t159 * t262 + t160 * t258) + (t119 * t259 - t181 * t263) * t251, 0, 0, 0, 0, 0, 0, t253 * (t151 * t262 + t152 * t258) + (t114 * t259 - t176 * t263) * t251, t253 * (t165 * t262 + t166 * t258) + (t128 * t259 + t263 * t276) * t251, t253 * (t142 * t262 + t143 * t258) + (t107 * t259 - t174 * t263) * t251, t253 * (t258 * t67 + t262 * t66) + (-t150 * t263 + t259 * t38) * t251, 0, 0, 0, 0, 0, 0, t253 * (t258 * t86 + t262 * t85) + (-t115 * t263 + t259 * t55) * t251, t253 * (t258 * t94 + t262 * t93) + (-t120 * t263 + t259 * t60) * t251, t253 * (t258 * t75 + t262 * t74) + (-t104 * t263 + t259 * t50) * t251, t253 * (t258 * t29 + t262 * t28) + (t15 * t259 - t263 * t36) * t251, 0, 0, 0, 0, 0, 0, t253 * (t258 * t40 + t262 * t39) + (t20 * t259 - t263 * t51) * t251, t253 * (t258 * t42 + t262 * t41) + (t22 * t259 - t263 * t61) * t251, t253 * (t258 * t27 + t26 * t262) + (t14 * t259 - t263 * t31) * t251, t253 * (t258 * t6 + t262 * t5) + (t1 * t259 - t263 * t7) * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t275, -t186, 0, 0, (t223 + t282) * t258, t222 * t262 + t225 * t258, t305 + t262 * (-t243 + t264), (t224 - t283) * t262, t258 * (t245 - t264) + t304, 0, pkin(2) * t225 + pkin(8) * t203 - t181 * t262, -pkin(2) * t222 + pkin(8) * t204 + t181 * t258, pkin(2) * t227 + pkin(8) * t226 + t119, -pkin(2) * t181 + pkin(8) * t119, t258 * (t196 * t252 - t218 * t296) + t262 * (t196 * t250 + t218 * t295), t258 * (-t176 * t252 + t250 * t276) + t262 * (-t176 * t250 - t252 * t276), t258 * (-t206 * t250 + t344) + t262 * (t206 * t252 + t345), t258 * (t216 * t295 + t250 * t277) + t262 * (t216 * t296 - t252 * t277), t258 * (t205 * t252 - t311) + t262 * (t205 * t250 + t310), (t258 * (-t216 * t252 + t218 * t250) + t262 * (-t216 * t250 - t218 * t252)) * qJD(3), t258 * (-qJ(4) * t151 + t313) + t262 * (-pkin(3) * t176 + qJ(4) * t152 - t312) - pkin(2) * t176 + pkin(8) * t114, t258 * (-qJ(4) * t165 + t312) + t262 * (pkin(3) * t276 + qJ(4) * t166 + t313) + pkin(2) * t276 + pkin(8) * t128, t258 * (-qJ(4) * t142 - t66) + t262 * (-pkin(3) * t174 + qJ(4) * t143 + t67) - pkin(2) * t174 + pkin(8) * t107, -qJ(4) * t323 + t262 * (-pkin(3) * t150 + qJ(4) * t67) - pkin(2) * t150 + pkin(8) * t38, t258 * (t130 * t252 + t286) + t262 * (t130 * t250 - t285), t258 * (t106 * t252 + t173 * t250) + t262 * (t106 * t250 - t173 * t252), t258 * (t125 * t252 + t137 * t250) + t262 * (t125 * t250 - t137 * t252), t258 * (t129 * t252 - t286) + t262 * (t129 * t250 + t285), t258 * (t126 * t252 - t133 * t250) + t262 * (t126 * t250 + t133 * t252), t258 * (t146 * t252 + t193 * t250) + t262 * (t146 * t250 - t193 * t252), t258 * (-qJ(4) * t85 - t250 * t47 + t252 * t71) + t262 * (-pkin(3) * t115 + qJ(4) * t86 + t250 * t71 + t252 * t47) - pkin(2) * t115 + pkin(8) * t55, t258 * (-qJ(4) * t93 - t250 * t49 + t252 * t72) + t262 * (-pkin(3) * t120 + qJ(4) * t94 + t250 * t72 + t252 * t49) - pkin(2) * t120 + pkin(8) * t60, t258 * (-qJ(4) * t74 + t252 * t30) + t262 * (qJ(4) * t75 + t250 * t30) + pkin(8) * t50 + (t258 * t328 + t262 * t284 - pkin(2)) * t104, (t258 * (-pkin(9) * t252 + t328) + t262 * (-pkin(9) * t250 + t284) - pkin(2)) * t36 + (pkin(8) + qJ(4)) * t15, t258 * (t252 * t54 + t288) + t262 * (t250 * t54 - t287), t258 * (t131 * t250 + t252 * t33) + t262 * (-t131 * t252 + t250 * t33), t258 * (t250 * t91 + t252 * t68) + t262 * (t250 * t68 - t252 * t91), t258 * (t252 * t53 - t288) + t262 * (t250 * t53 + t287), t258 * (-t250 * t88 + t252 * t69) + t262 * (t250 * t69 + t252 * t88), t258 * (t192 * t250 + t252 * t73) + t262 * (-t192 * t252 + t250 * t73), t258 * (-qJ(4) * t39 + t16 * t252 - t18 * t250) + t262 * (-pkin(3) * t51 + qJ(4) * t40 + t16 * t250 + t18 * t252) - pkin(2) * t51 + pkin(8) * t20, t258 * (-qJ(4) * t41 + t17 * t252 - t19 * t250) + t262 * (-pkin(3) * t61 + qJ(4) * t42 + t17 * t250 + t19 * t252) - pkin(2) * t61 + pkin(8) * t22, t258 * (-qJ(4) * t26 - t21 * t250 + t252 * t4) + t262 * (-pkin(3) * t31 + qJ(4) * t27 + t21 * t252 + t250 * t4) - pkin(2) * t31 + pkin(8) * t14, t258 * (-qJ(4) * t5 + t2 * t252 - t250 * t3) + t262 * (-pkin(3) * t7 + qJ(4) * t6 + t2 * t250 + t252 * t3) - pkin(2) * t7 + pkin(8) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, t243 - t245, t289, t238, t242, qJDD(3), -t159, -t160, 0, 0, t194, t215 - t214, t179, -t194, t177, qJDD(3), pkin(3) * t151 - t98, pkin(3) * t165 - t99, pkin(3) * t142, pkin(3) * t66, t164 * t257 + t202 * t306, t135 * t257 + t136 * t261, t183 * t261 + t342, t200 * t307 - t261 * t272, t182 * t257 + t314, (-t200 * t257 - t202 * t261) * t213, pkin(3) * t85 + pkin(4) * t135 + pkin(9) * t116 - t321, pkin(3) * t93 + pkin(4) * t138 + pkin(9) * t121 + t324, pkin(3) * t74 + pkin(4) * t156 + pkin(9) * t105 + t37, pkin(3) * t28 - pkin(4) * t77 + pkin(9) * t37, t257 * t84 + t261 * t83, t257 * t59 + t261 * t57, t100 * t261 + t102 * t257, t257 * t82 + t261 * t81, t101 * t261 + t103 * t257, t117 * t261 + t118 * t257, pkin(3) * t39 - pkin(4) * t87 + pkin(9) * t52 + t257 * t43 + t261 * t34, pkin(3) * t41 - pkin(4) * t336 + pkin(9) * t62 + t257 * t44 + t261 * t35, pkin(3) * t26 - pkin(4) * t113 + pkin(9) * t32 + t10 * t257 + t261 * t9, pkin(3) * t5 - pkin(4) * t70 + pkin(9) * t8 - pkin(10) * t327 + t11 * t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, -t276, t174, t150, 0, 0, 0, 0, 0, 0, t115, t120, t104, t36, 0, 0, 0, 0, 0, 0, t51, t61, t31, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t173, t137, -t175, -t133, t193, -t64, -t65, 0, 0, t132, t131, t91, -t132, -t88, t192, t273, t271, t329, t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, t131, t91, -t132, -t88, t192, -t24, -t25, 0, 0;];
tauJ_reg  = t23;
