% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRPRR2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR2_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:00:24
% EndTime: 2019-03-08 22:00:45
% DurationCPUTime: 13.57s
% Computational Cost: add. (13102->705), mult. (30723->958), div. (0->0), fcn. (24462->18), ass. (0->320)
t257 = sin(qJ(2));
t251 = sin(pkin(6));
t361 = qJD(1) * t251;
t333 = t257 * t361;
t256 = sin(qJ(3));
t356 = qJD(3) * t256;
t457 = pkin(3) * t356 - t333;
t260 = cos(qJ(3));
t253 = -qJ(4) - pkin(8);
t318 = qJD(3) * t253;
t187 = qJD(4) * t260 + t256 * t318;
t249 = sin(pkin(12));
t277 = -qJD(4) * t256 + t260 * t318;
t407 = cos(pkin(12));
t311 = t407 * t260;
t386 = t249 * t256;
t282 = t311 - t386;
t261 = cos(qJ(2));
t332 = t261 * t361;
t366 = t187 * t407 + t249 * t277 - t282 * t332;
t312 = t407 * t256;
t204 = t249 * t260 + t312;
t195 = t204 * qJD(3);
t198 = t282 * qJD(3);
t456 = pkin(4) * t195 - pkin(9) * t198 + t457;
t255 = sin(qJ(5));
t431 = pkin(3) * t249;
t231 = pkin(9) + t431;
t425 = pkin(10) + t231;
t317 = qJD(5) * t425;
t223 = qJD(2) * t311;
t358 = qJD(2) * t256;
t193 = t249 * t358 - t223;
t397 = t193 * t255;
t196 = t204 * qJD(2);
t343 = pkin(3) * t358;
t112 = pkin(4) * t196 + pkin(9) * t193 + t343;
t259 = cos(qJ(5));
t252 = cos(pkin(6));
t360 = qJD(1) * t252;
t331 = t256 * t360;
t210 = qJD(2) * pkin(8) + t333;
t307 = qJ(4) * qJD(2) + t210;
t439 = t260 * t307;
t155 = t331 + t439;
t142 = t249 * t155;
t224 = t260 * t360;
t154 = -t256 * t307 + t224;
t83 = t154 * t407 - t142;
t46 = t255 * t112 + t259 * t83;
t455 = pkin(10) * t397 + t255 * t317 + t46;
t45 = t259 * t112 - t255 * t83;
t454 = -pkin(5) * t196 - t45 + (-pkin(10) * t193 - t317) * t259;
t237 = pkin(3) * t260 + pkin(2);
t134 = -pkin(4) * t282 - pkin(9) * t204 - t237;
t214 = t253 * t260;
t161 = -t214 * t407 + t253 * t386;
t354 = qJD(5) * t259;
t355 = qJD(5) * t255;
t412 = t134 * t354 - t161 * t355 + t456 * t255 + t259 * t366;
t453 = -t255 * t366 + t456 * t259;
t452 = t355 + t397;
t162 = -t259 * qJD(3) + t196 * t255;
t164 = qJD(3) * t255 + t196 * t259;
t254 = sin(qJ(6));
t258 = cos(qJ(6));
t295 = t162 * t254 - t258 * t164;
t92 = t258 * t162 + t164 * t254;
t426 = t92 * t295;
t147 = t259 * t161;
t395 = t198 * t259;
t451 = -pkin(10) * t395 + pkin(5) * t195 + (-t147 + (pkin(10) * t204 - t134) * t255) * qJD(5) + t453;
t374 = t255 * t198;
t284 = t204 * t354 + t374;
t450 = pkin(10) * t284 - t412;
t376 = t254 * t259;
t207 = t255 * t258 + t376;
t344 = qJD(5) + qJD(6);
t149 = t344 * t207;
t369 = -t207 * t193 - t149;
t372 = t258 * t259;
t377 = t254 * t255;
t206 = -t372 + t377;
t352 = qJD(6) * t258;
t368 = t206 * t193 - t258 * t354 - t259 * t352 + t344 * t377;
t350 = qJD(2) * qJD(3);
t323 = t256 * t350;
t273 = qJDD(2) * t204 - t249 * t323;
t137 = qJD(3) * t223 + t273;
t449 = qJD(3) * qJD(5) + t137;
t351 = qJD(1) * qJD(2);
t325 = t261 * t351;
t405 = qJDD(2) * pkin(8);
t172 = t405 + (qJDD(1) * t257 + t325) * t251;
t448 = qJD(3) * t360 + t172;
t184 = qJD(5) + t193;
t347 = qJDD(1) * t252;
t222 = t260 * t347;
t349 = qJD(2) * qJD(4);
t64 = qJDD(3) * pkin(3) + t222 - qJD(3) * t439 + (-qJ(4) * qJDD(2) - t349 - t448) * t256;
t345 = t260 * qJDD(2);
t335 = t256 * t347 + t260 * t448;
t89 = -t210 * t356 + t335;
t67 = t260 * t349 + (-t323 + t345) * qJ(4) + t89;
t31 = t249 * t64 + t407 * t67;
t29 = qJDD(3) * pkin(9) + t31;
t380 = t251 * t261;
t321 = qJDD(1) * t380;
t326 = t257 * t351;
t297 = t251 * t326 - t321;
t135 = pkin(3) * t323 - qJDD(2) * t237 + qJDD(4) + t297;
t346 = t256 * qJDD(2);
t296 = -qJDD(2) * t311 + t249 * t346;
t136 = qJD(2) * t195 + t296;
t51 = pkin(4) * t136 - pkin(9) * t137 + t135;
t146 = qJD(3) * pkin(3) + t154;
t313 = t407 * t155;
t79 = t249 * t146 + t313;
t73 = qJD(3) * pkin(9) + t79;
t183 = -qJD(2) * t237 + qJD(4) - t332;
t97 = pkin(4) * t193 - pkin(9) * t196 + t183;
t285 = -t255 * t51 - t259 * t29 - t97 * t354 + t355 * t73;
t41 = -t255 * t73 + t259 * t97;
t298 = -t41 * t184 - t285;
t382 = t251 * t257;
t199 = t252 * t260 - t256 * t382;
t447 = t295 ^ 2 - t92 ^ 2;
t182 = qJD(6) + t184;
t336 = t196 * t354 + t255 * t449;
t288 = qJDD(3) * t259 - t336;
t353 = qJD(6) * t254;
t74 = -t255 * qJDD(3) + t196 * t355 - t259 * t449;
t21 = t162 * t352 + t164 * t353 - t254 * t288 + t258 * t74;
t446 = t182 * t92 - t21;
t35 = -pkin(10) * t164 + t41;
t26 = pkin(5) * t184 + t35;
t42 = t255 * t97 + t259 * t73;
t36 = -pkin(10) * t162 + t42;
t130 = qJDD(5) + t136;
t9 = -qJD(5) * t42 - t255 * t29 + t259 * t51;
t6 = pkin(5) * t130 + pkin(10) * t74 + t9;
t7 = pkin(10) * t288 - t285;
t1 = t258 * (qJD(6) * t26 + t7) + t254 * t6 - t36 * t353;
t408 = cos(pkin(11));
t315 = t408 * t257;
t250 = sin(pkin(11));
t383 = t250 * t261;
t190 = t252 * t315 + t383;
t245 = qJ(3) + pkin(12);
t238 = sin(t245);
t239 = cos(t245);
t316 = t251 * t408;
t139 = t190 * t239 - t238 * t316;
t314 = t408 * t261;
t384 = t250 * t257;
t192 = -t252 * t384 + t314;
t385 = t250 * t251;
t141 = t192 * t239 + t238 * t385;
t178 = t238 * t252 + t239 * t382;
t189 = -t252 * t314 + t384;
t191 = t252 * t383 + t315;
t248 = qJ(5) + qJ(6);
t242 = sin(t248);
t243 = cos(t248);
t78 = t146 * t407 - t142;
t72 = -qJD(3) * pkin(4) - t78;
t53 = t162 * pkin(5) + t72;
t445 = t53 * t92 - g(1) * (-t141 * t243 - t191 * t242) - g(2) * (-t139 * t243 - t189 * t242) - g(3) * (-t178 * t243 + t242 * t380) - t1;
t416 = t258 * t36;
t13 = t254 * t26 + t416;
t2 = -qJD(6) * t13 - t254 * t7 + t258 * t6;
t444 = t53 * t295 - g(1) * (-t141 * t242 + t191 * t243) - g(2) * (-t139 * t242 + t189 * t243) - g(3) * (-t178 * t242 - t243 * t380) + t2;
t271 = qJD(6) * t295 + t254 * t74 + t258 * t288;
t443 = -t182 * t295 + t271;
t201 = t425 * t255;
t202 = t425 * t259;
t131 = -t201 * t258 - t202 * t254;
t442 = qJD(6) * t131 + t454 * t254 - t258 * t455;
t132 = -t201 * t254 + t202 * t258;
t422 = -qJD(6) * t132 + t254 * t455 + t454 * t258;
t441 = t42 * t184 + t9;
t81 = t154 * t249 + t313;
t303 = pkin(5) * t452 - t81;
t309 = t184 * t255;
t440 = t164 * t309;
t301 = g(1) * t191 + g(2) * t189;
t438 = g(3) * t380 - t301;
t274 = t438 * t238;
t367 = t187 * t249 - t204 * t332 - t407 * t277;
t76 = t255 * t134 + t147;
t437 = t206 * t21 - t295 * t369;
t126 = qJDD(6) + t130;
t436 = t126 * t207 - t182 * t368;
t263 = qJD(3) ^ 2;
t406 = qJDD(2) * pkin(2);
t171 = t297 - t406;
t291 = -t171 + t301;
t435 = -pkin(8) * t263 + t251 * (-g(3) * t261 + t326) + t291 + t406;
t434 = t196 ^ 2;
t393 = t204 * t259;
t75 = t259 * t134 - t161 * t255;
t52 = -pkin(5) * t282 - pkin(10) * t393 + t75;
t394 = t204 * t255;
t57 = -pkin(10) * t394 + t76;
t24 = -t254 * t57 + t258 * t52;
t433 = qJD(6) * t24 + t254 * t451 - t258 * t450;
t25 = t254 * t52 + t258 * t57;
t432 = -qJD(6) * t25 + t254 * t450 + t258 * t451;
t430 = pkin(3) * t256;
t208 = t237 * t380;
t429 = g(3) * t208;
t428 = g(3) * t251;
t427 = t259 * pkin(5);
t423 = t249 * t67 - t407 * t64;
t421 = qJD(2) * pkin(2);
t420 = t196 * t92;
t419 = t196 * t295;
t417 = t254 * t36;
t413 = t74 * t255;
t411 = -qJD(5) * t76 + t453;
t410 = pkin(5) * t284 + t367;
t69 = t255 * t288;
t409 = -t162 * t354 + t69;
t403 = t162 * t193;
t402 = t162 * t196;
t401 = t164 * t162;
t400 = t164 * t196;
t399 = t190 * t255;
t398 = t192 * t255;
t396 = t196 * t193;
t392 = t210 * t256;
t391 = t239 * t242;
t390 = t239 * t243;
t389 = t239 * t255;
t388 = t239 * t259;
t387 = t239 * t261;
t381 = t251 * t260;
t378 = t253 * t257;
t375 = t255 * t130;
t373 = t255 * t261;
t119 = t259 * t130;
t371 = t259 * t261;
t370 = qJDD(1) - g(3);
t365 = -t189 * t237 - t190 * t253;
t364 = -t191 * t237 - t192 * t253;
t246 = t256 ^ 2;
t247 = t260 ^ 2;
t363 = t246 - t247;
t362 = t246 + t247;
t211 = -t332 - t421;
t359 = qJD(2) * t211;
t357 = qJD(2) * t257;
t340 = t251 * t373;
t338 = t251 * t371;
t264 = qJD(2) ^ 2;
t337 = t256 * t264 * t260;
t334 = t407 * pkin(3);
t330 = t251 * t357;
t329 = qJD(2) * t380;
t328 = t204 * t355;
t322 = t261 * t350;
t160 = -t214 * t249 - t253 * t312;
t308 = t184 * t259;
t306 = t207 * t271 + t368 * t92;
t305 = t260 * t323;
t304 = t250 * pkin(3) * t381 - t192 * t430;
t28 = -qJDD(3) * pkin(4) + t423;
t232 = -t334 - pkin(4);
t302 = pkin(4) * t239 + pkin(9) * t238;
t300 = g(1) * t192 + g(2) * t190;
t299 = -t206 * t126 + t182 * t369;
t200 = t252 * t256 + t257 * t381;
t118 = t249 * t199 + t200 * t407;
t286 = -t118 * t259 + t340;
t98 = -t118 * t255 - t338;
t47 = t254 * t286 + t258 * t98;
t48 = t254 * t98 - t258 * t286;
t236 = pkin(4) + t427;
t262 = -pkin(10) - pkin(9);
t294 = t236 * t239 - t238 * t262;
t293 = t199 * pkin(3);
t292 = qJDD(2) * t261 - t257 * t264;
t289 = -t184 * t452 + t119;
t167 = t210 * t260 + t331;
t283 = -t328 + t395;
t281 = -t231 * t130 + t184 * t72;
t138 = -t190 * t238 - t239 * t316;
t140 = -t192 * t238 + t239 * t385;
t177 = -t238 * t382 + t239 * t252;
t280 = g(1) * t140 + g(2) * t138 + g(3) * t177;
t279 = g(1) * t141 + g(2) * t139 + g(3) * t178;
t278 = t288 * t259;
t275 = (-t190 * t256 - t260 * t316) * pkin(3);
t270 = qJD(5) * t184 * t231 + t28 + t280;
t269 = -pkin(8) * qJDD(3) + (t211 + t332 - t421) * qJD(3);
t166 = t224 - t392;
t90 = -t167 * qJD(3) - t256 * t172 + t222;
t266 = -t90 * t256 + t89 * t260 + (-t166 * t260 - t167 * t256) * qJD(3) - t300;
t265 = -g(1) * (-t141 * t255 + t191 * t259) - g(2) * (-t139 * t255 + t189 * t259) - g(3) * (-t178 * t255 - t338);
t212 = t232 - t427;
t188 = t193 ^ 2;
t153 = -qJD(3) * t200 - t256 * t329;
t152 = qJD(3) * t199 + t260 * t329;
t121 = t206 * t204;
t120 = t207 * t204;
t117 = -t199 * t407 + t200 * t249;
t109 = pkin(5) * t394 + t160;
t82 = t152 * t407 + t249 * t153;
t80 = t152 * t249 - t153 * t407;
t44 = t198 * t376 - t254 * t328 - t353 * t394 + (t344 * t393 + t374) * t258;
t43 = t149 * t204 - t198 * t372 + t254 * t374;
t39 = qJD(5) * t286 - t255 * t82 + t259 * t330;
t38 = qJD(5) * t98 + t255 * t330 + t259 * t82;
t18 = -pkin(5) * t288 + t28;
t15 = t258 * t35 - t417;
t14 = -t254 * t35 - t416;
t12 = t258 * t26 - t417;
t11 = -qJD(6) * t48 - t254 * t38 + t258 * t39;
t10 = qJD(6) * t47 + t254 * t39 + t258 * t38;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t370, 0, 0, 0, 0, 0, 0, t292 * t251 (-qJDD(2) * t257 - t261 * t264) * t251, 0, -g(3) + (t252 ^ 2 + (t257 ^ 2 + t261 ^ 2) * t251 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, qJD(3) * t153 + qJDD(3) * t199 + (-t256 * t322 + t260 * t292) * t251, -qJD(3) * t152 - qJDD(3) * t200 + (-t256 * t292 - t260 * t322) * t251 (-t199 * t256 + t200 * t260) * qJDD(2) + (t152 * t260 - t153 * t256 + (-t199 * t260 - t200 * t256) * qJD(3)) * qJD(2), t152 * t167 + t153 * t166 + t199 * t90 + t200 * t89 - g(3) + (-t171 * t261 + t211 * t357) * t251, 0, 0, 0, 0, 0, 0, -qJD(3) * t80 - qJDD(3) * t117 + (-t136 * t261 + t193 * t357) * t251, -qJD(3) * t82 - qJDD(3) * t118 + (-t137 * t261 + t196 * t357) * t251, t117 * t137 - t118 * t136 - t193 * t82 + t196 * t80, t117 * t423 + t118 * t31 - t78 * t80 + t79 * t82 - g(3) + (-t135 * t261 + t183 * t357) * t251, 0, 0, 0, 0, 0, 0, -t117 * t288 + t98 * t130 + t80 * t162 + t39 * t184, -t117 * t74 + t130 * t286 + t164 * t80 - t184 * t38, -t38 * t162 - t39 * t164 - t286 * t288 + t98 * t74, t117 * t28 + t285 * t286 + t38 * t42 + t39 * t41 + t72 * t80 + t9 * t98 - g(3), 0, 0, 0, 0, 0, 0, t11 * t182 - t117 * t271 + t126 * t47 + t80 * t92, -t10 * t182 - t117 * t21 - t126 * t48 - t295 * t80, -t10 * t92 + t11 * t295 + t21 * t47 + t271 * t48, t1 * t48 + t10 * t13 + t11 * t12 + t117 * t18 + t2 * t47 + t53 * t80 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t438 + t321, -t370 * t382 + t300, 0, 0, qJDD(2) * t246 + 0.2e1 * t305, 0.2e1 * t256 * t345 - 0.2e1 * t350 * t363, qJDD(3) * t256 + t260 * t263, qJDD(2) * t247 - 0.2e1 * t305, qJDD(3) * t260 - t256 * t263, 0, t269 * t256 + t260 * t435, -t256 * t435 + t269 * t260, t362 * t405 + (-g(3) * t257 - t325 * t362) * t251 + t266, t291 * pkin(2) + t266 * pkin(8) + (-g(3) * (pkin(2) * t261 + pkin(8) * t257) + (-t211 * t257 + (t166 * t256 - t167 * t260) * t261) * qJD(1)) * t251, t137 * t204 + t196 * t198, -t136 * t204 + t137 * t282 - t193 * t198 - t195 * t196, qJD(3) * t198 + qJDD(3) * t204, -t136 * t282 + t193 * t195, -qJD(3) * t195 + qJDD(3) * t282, 0, -t193 * t333 - t160 * qJDD(3) - t135 * t282 - t136 * t237 + t183 * t195 - t438 * t239 + (t193 * t430 - t367) * qJD(3), -t196 * t333 - qJDD(3) * t161 + t135 * t204 - t137 * t237 + t183 * t198 + t274 + (t196 * t430 - t366) * qJD(3), -g(3) * t382 - t136 * t161 + t137 * t160 - t193 * t366 - t195 * t79 + t196 * t367 - t198 * t78 + t204 * t423 + t282 * t31 - t300, t31 * t161 + t423 * t160 - t135 * t237 - g(1) * t364 - g(2) * t365 - g(3) * (-t251 * t378 + t208) + t366 * t79 - t367 * t78 + t457 * t183, t164 * t283 - t393 * t74 (-t162 * t259 - t164 * t255) * t198 + (t278 + t413 + (t162 * t255 - t164 * t259) * qJD(5)) * t204, t119 * t204 + t164 * t195 + t184 * t283 + t282 * t74, t162 * t284 - t204 * t69, -t162 * t195 - t184 * t284 - t204 * t375 - t282 * t288, -t130 * t282 + t184 * t195, t75 * t130 - t9 * t282 + t41 * t195 - t160 * t288 + t72 * t374 - g(1) * (-t191 * t388 + t398) - g(2) * (-t189 * t388 + t399) - (t239 * t371 + t255 * t257) * t428 + (t28 * t255 + t354 * t72) * t204 + t411 * t184 + t367 * t162, -t76 * t130 - t285 * t282 - t42 * t195 - t160 * t74 + t72 * t395 - g(1) * (t191 * t389 + t192 * t259) - g(2) * (t189 * t389 + t190 * t259) - (-t239 * t373 + t257 * t259) * t428 + (t28 * t259 - t355 * t72) * t204 - t412 * t184 + t367 * t164, t76 * t288 + t75 * t74 + (-t255 * t42 - t259 * t41) * t198 - t411 * t164 - t412 * t162 - t274 + (t285 * t255 - t9 * t259 + (t255 * t41 - t259 * t42) * qJD(5)) * t204, -t285 * t76 + t9 * t75 + t28 * t160 - g(1) * (-t191 * t302 + t364) - g(2) * (-t189 * t302 + t365) - t429 + t367 * t72 + t412 * t42 + t411 * t41 - (t261 * t302 - t378) * t428, t121 * t21 + t295 * t43, t120 * t21 - t121 * t271 + t295 * t44 + t43 * t92, -t121 * t126 - t182 * t43 - t195 * t295 + t21 * t282, -t120 * t271 + t44 * t92, -t120 * t126 - t182 * t44 - t195 * t92 - t271 * t282, -t126 * t282 + t182 * t195, t24 * t126 - t2 * t282 + t12 * t195 - t109 * t271 + t18 * t120 + t53 * t44 - g(1) * (-t191 * t390 + t192 * t242) - g(2) * (-t189 * t390 + t190 * t242) + t410 * t92 - (t242 * t257 + t243 * t387) * t428 + t432 * t182, -t25 * t126 + t1 * t282 - t13 * t195 - t109 * t21 - t18 * t121 - t53 * t43 - g(1) * (t191 * t391 + t192 * t243) - g(2) * (t189 * t391 + t190 * t243) - t410 * t295 - (-t242 * t387 + t243 * t257) * t428 - t433 * t182, -t1 * t120 + t12 * t43 + t121 * t2 - t13 * t44 + t21 * t24 + t25 * t271 + t295 * t432 - t433 * t92 - t274, t1 * t25 + t2 * t24 + t18 * t109 - g(1) * (pkin(5) * t398 - t191 * t294 + t364) - g(2) * (pkin(5) * t399 - t189 * t294 + t365) - t429 + t410 * t53 + t433 * t13 + t432 * t12 - (t294 * t261 + (pkin(5) * t255 - t253) * t257) * t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337, t363 * t264, t346, t337, t345, qJDD(3), -g(3) * t199 + t222 + (-g(1) * t250 + g(2) * t408) * t381 + (-t172 + t300 - t359) * t256, -t260 * t359 - g(1) * (-t192 * t260 - t256 * t385) - g(2) * (-t190 * t260 + t256 * t316) + g(3) * t200 + (t166 + t392) * qJD(3) - t335, 0, 0, t396, -t188 + t434 (t223 + t193) * qJD(3) + t273, -t396, -t296, qJDD(3), t81 * qJD(3) - t183 * t196 + (qJDD(3) * t407 - t193 * t358) * pkin(3) - t280 - t423, qJD(3) * t83 + t183 * t193 + (-qJDD(3) * t249 - t196 * t358) * pkin(3) + t279 - t31 (t79 - t81) * t196 + (-t78 + t83) * t193 + (-t136 * t249 - t137 * t407) * pkin(3), -g(1) * t304 - g(2) * t275 - g(3) * t293 - t183 * t343 + t31 * t431 - t334 * t423 + t78 * t81 - t79 * t83, t164 * t308 - t413 (-t74 - t403) * t259 - t440 + t409, t184 * t308 + t375 - t400, t162 * t309 + t278, t289 + t402, -t184 * t196, t232 * t336 - t45 * t184 - t41 * t196 - t81 * t162 + t281 * t255 + (-qJDD(3) * t232 - t270) * t259, -t164 * t81 + t184 * t46 + t196 * t42 - t232 * t74 + t255 * t270 + t259 * t281, t46 * t162 + t45 * t164 + ((qJD(5) * t164 + t288) * t231 + t298) * t259 + (-t42 * t193 - t231 * t74 - t9 + (t162 * t231 - t42) * qJD(5)) * t255 - t279, t28 * t232 - t42 * t46 - t41 * t45 - t72 * t81 - g(1) * (pkin(4) * t140 + pkin(9) * t141 + t304) - g(2) * (t138 * pkin(4) + t139 * pkin(9) + t275) - g(3) * (pkin(4) * t177 + pkin(9) * t178 + t293) + (-t9 * t255 - t259 * t285 - t354 * t41 - t355 * t42) * t231, -t207 * t21 + t295 * t368, t306 + t437, t419 + t436, -t206 * t271 - t369 * t92, t299 + t420, -t182 * t196, -t12 * t196 + t126 * t131 + t18 * t206 + t182 * t422 - t212 * t271 - t243 * t280 + t303 * t92 - t369 * t53, -t126 * t132 + t13 * t196 + t18 * t207 - t182 * t442 - t21 * t212 + t242 * t280 - t295 * t303 - t368 * t53, -t1 * t206 + t12 * t368 + t13 * t369 + t131 * t21 + t132 * t271 - t2 * t207 + t295 * t422 - t442 * t92 - t279, t1 * t132 + t2 * t131 + t18 * t212 - g(1) * (t140 * t236 - t141 * t262 + t304) - g(2) * (t138 * t236 - t139 * t262 + t275) - g(3) * (t177 * t236 - t178 * t262 + t293) + t303 * t53 + t442 * t13 + t422 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * qJD(3) * t196 + t296 (t223 - t193) * qJD(3) + t273, -t188 - t434, t193 * t79 + t196 * t78 + t135 + t438, 0, 0, 0, 0, 0, 0, t289 - t402, -t184 ^ 2 * t259 - t375 - t400 (t74 - t403) * t259 + t440 + t409, -t196 * t72 + t298 * t255 + t259 * t441 + t438, 0, 0, 0, 0, 0, 0, t299 - t420, t419 - t436, t306 - t437, t1 * t207 + t12 * t369 - t13 * t368 - t196 * t53 - t2 * t206 + t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, -t162 ^ 2 + t164 ^ 2, t162 * t184 - t74, -t401, t164 * t184 + t288, t130, -t72 * t164 + t265 + t441, t72 * t162 - g(1) * (-t141 * t259 - t191 * t255) - g(2) * (-t139 * t259 - t189 * t255) - g(3) * (-t178 * t259 + t340) - t298, 0, 0, -t426, t447, t446, t426, t443, t126, -t14 * t182 + (t126 * t258 - t164 * t92 - t182 * t353) * pkin(5) + t444, t15 * t182 + (-t126 * t254 + t164 * t295 - t182 * t352) * pkin(5) + t445, -t12 * t92 - t13 * t295 - t14 * t295 + t15 * t92 + (t21 * t258 + t271 * t254 + (-t254 * t295 - t258 * t92) * qJD(6)) * pkin(5), -t12 * t14 - t13 * t15 + (t1 * t254 + t2 * t258 - t53 * t164 + (-t12 * t254 + t13 * t258) * qJD(6) + t265) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t447, t446, t426, t443, t126, t13 * t182 + t444, t12 * t182 + t445, 0, 0;];
tau_reg  = t3;
