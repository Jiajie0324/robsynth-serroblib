% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRPRR1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR1_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:54:14
% EndTime: 2019-03-08 21:54:32
% DurationCPUTime: 11.53s
% Computational Cost: add. (13773->659), mult. (32867->884), div. (0->0), fcn. (26620->18), ass. (0->324)
t251 = sin(qJ(3));
t254 = cos(qJ(3));
t248 = -qJ(4) - pkin(8);
t312 = qJD(3) * t248;
t184 = qJD(4) * t254 + t251 * t312;
t185 = -qJD(4) * t251 + t254 * t312;
t243 = sin(pkin(12));
t246 = cos(pkin(12));
t198 = t243 * t254 + t246 * t251;
t245 = sin(pkin(6));
t255 = cos(qJ(2));
t365 = t245 * t255;
t327 = qJD(1) * t365;
t361 = -t243 * t184 + t246 * t185 + t198 * t327;
t290 = t243 * t251 - t246 * t254;
t360 = t184 * t246 + t185 * t243 + t290 * t327;
t253 = cos(qJ(6));
t344 = qJD(6) * t253;
t349 = qJD(2) * t254;
t323 = t246 * t349;
t351 = qJD(2) * t251;
t192 = -t243 * t351 + t323;
t250 = sin(qJ(5));
t417 = cos(qJ(5));
t421 = t198 * qJD(2);
t115 = t192 * t417 - t250 * t421;
t441 = t115 * t253;
t453 = t344 - t441;
t277 = t198 * qJD(3);
t452 = -pkin(9) * t277 + t360;
t275 = t290 * qJD(3);
t451 = pkin(9) * t275 + t361;
t415 = pkin(3) * t246;
t231 = pkin(4) + t415;
t416 = pkin(3) * t243;
t183 = t231 * t250 + t416 * t417;
t412 = pkin(9) * t192;
t247 = cos(pkin(6));
t353 = qJD(1) * t247;
t326 = t251 * t353;
t252 = sin(qJ(2));
t352 = qJD(1) * t252;
t328 = t245 * t352;
t204 = qJD(2) * pkin(8) + t328;
t305 = qJ(4) * qJD(2) + t204;
t424 = t254 * t305;
t144 = t326 + t424;
t136 = t246 * t144;
t221 = t254 * t353;
t143 = -t251 * t305 + t221;
t86 = -t143 * t243 - t136;
t272 = t86 - t412;
t411 = pkin(9) * t421;
t134 = t243 * t144;
t88 = t143 * t246 - t134;
t71 = t88 - t411;
t385 = qJD(5) * t183 - t250 * t71 + t272 * t417;
t137 = qJD(3) * pkin(3) + t143;
t83 = t137 * t246 - t134;
t64 = qJD(3) * pkin(4) - t411 + t83;
t84 = t137 * t243 + t136;
t68 = t84 + t412;
t41 = t250 * t64 + t417 * t68;
t450 = -t41 - t385;
t249 = sin(qJ(6));
t335 = qJD(3) + qJD(5);
t35 = pkin(10) * t335 + t41;
t405 = t254 * pkin(3);
t232 = pkin(2) + t405;
t176 = -qJD(2) * t232 + qJD(4) - t327;
t126 = -pkin(4) * t192 + t176;
t279 = -t192 * t250 - t417 * t421;
t53 = -pkin(5) * t115 + pkin(10) * t279 + t126;
t292 = t249 * t35 - t253 * t53;
t436 = qJD(6) - t115;
t449 = t436 * t292;
t348 = qJD(3) * t251;
t234 = pkin(3) * t348;
t298 = pkin(4) * t277 + t234 - t328;
t336 = t254 * qJDD(2);
t337 = t251 * qJDD(2);
t295 = t243 * t337 - t246 * t336;
t437 = t421 * qJD(3);
t130 = t295 + t437;
t340 = qJD(2) * qJD(3);
t317 = t251 * t340;
t266 = qJDD(2) * t198 - t243 * t317;
t316 = t254 * t340;
t131 = t246 * t316 + t266;
t321 = qJD(5) * t417;
t347 = qJD(5) * t250;
t278 = -t130 * t250 + t131 * t417 + t192 * t321 - t347 * t421;
t425 = t115 * t335;
t448 = t278 - t425;
t378 = t115 ^ 2;
t379 = t279 ^ 2;
t447 = -t378 + t379;
t14 = t249 * t53 + t253 * t35;
t306 = t130 * t417 + t250 * t131;
t438 = t279 * qJD(5);
t55 = t306 - t438;
t314 = qJDD(1) * t365;
t341 = qJD(1) * qJD(2);
t320 = t252 * t341;
t296 = t245 * t320 - t314;
t129 = pkin(3) * t317 - qJDD(2) * t232 + qJDD(4) + t296;
t413 = pkin(4) * t130;
t81 = t129 + t413;
t16 = pkin(5) * t55 - pkin(10) * t278 + t81;
t334 = qJDD(3) + qJDD(5);
t338 = qJDD(1) * t247;
t219 = t254 * t338;
t339 = qJD(2) * qJD(4);
t319 = t255 * t341;
t381 = qJDD(2) * pkin(8);
t161 = t381 + (qJDD(1) * t252 + t319) * t245;
t440 = qJD(3) * t353 + t161;
t75 = qJDD(3) * pkin(3) + t219 - qJD(3) * t424 + (-qJ(4) * qJDD(2) - t339 - t440) * t251;
t329 = t251 * t338 + t254 * t440;
t93 = -t204 * t348 + t329;
t76 = t254 * t339 + (-t317 + t336) * qJ(4) + t93;
t47 = -t243 * t76 + t246 * t75;
t28 = qJDD(3) * pkin(4) - pkin(9) * t131 + t47;
t48 = t243 * t75 + t246 * t76;
t29 = -pkin(9) * t130 + t48;
t7 = t250 * t28 + t29 * t417 + t321 * t64 - t347 * t68;
t5 = pkin(10) * t334 + t7;
t3 = -qJD(6) * t14 + t16 * t253 - t249 * t5;
t427 = t14 * t436 + t3;
t304 = t253 * t335;
t345 = qJD(6) * t249;
t42 = -qJD(6) * t304 - t249 * t334 - t253 * t278 - t279 * t345;
t37 = t42 * t249;
t99 = t249 * t335 - t253 * t279;
t446 = t453 * t99 - t37;
t396 = t279 * t99;
t52 = qJDD(6) + t55;
t49 = t249 * t52;
t445 = t436 * t453 + t396 + t49;
t208 = t248 * t251;
t209 = t248 * t254;
t150 = t208 * t246 + t209 * t243;
t105 = -pkin(9) * t198 + t150;
t151 = t208 * t243 - t209 * t246;
t106 = -pkin(9) * t290 + t151;
t402 = t105 * t321 - t106 * t347 + t250 * t451 + t417 * t452;
t40 = -t250 * t68 + t417 * t64;
t34 = -pkin(5) * t335 - t40;
t444 = t115 * t34;
t97 = -t249 * t279 - t304;
t397 = t279 * t97;
t269 = t417 * t290;
t79 = t198 * t347 + t250 * t277 + t269 * t335;
t133 = t198 * t417 - t250 * t290;
t80 = qJD(5) * t133 - t250 * t275 + t277 * t417;
t443 = t80 * pkin(5) + t79 * pkin(10) + t298;
t442 = t436 * t279;
t375 = t115 * t279;
t343 = t279 * qJD(3);
t439 = -t343 - t306;
t384 = cos(pkin(11));
t310 = t384 * t252;
t244 = sin(pkin(11));
t368 = t244 * t255;
t189 = t247 * t310 + t368;
t240 = qJ(3) + pkin(12);
t237 = qJ(5) + t240;
t229 = sin(t237);
t230 = cos(t237);
t311 = t245 * t384;
t122 = -t189 * t229 - t230 * t311;
t309 = t384 * t255;
t369 = t244 * t252;
t191 = -t247 * t369 + t309;
t370 = t244 * t245;
t124 = -t191 * t229 + t230 * t370;
t367 = t245 * t252;
t158 = -t229 * t367 + t230 * t247;
t435 = g(1) * t124 + g(2) * t122 + g(3) * t158;
t313 = t250 * t29 - t28 * t417;
t8 = -t41 * qJD(5) - t313;
t6 = -pkin(5) * t334 - t8;
t429 = t249 * t6 + t34 * t344;
t434 = -t14 * t279 + t249 * t435 + t429;
t30 = t34 * t345;
t433 = -t279 * t292 + t30;
t123 = t189 * t230 - t229 * t311;
t125 = t191 * t230 + t229 * t370;
t159 = t229 * t247 + t230 * t367;
t273 = -g(1) * t125 - g(2) * t123 - g(3) * t159;
t432 = -t126 * t115 - t273 - t7;
t284 = -t253 * t42 - t345 * t99;
t389 = t253 * t97;
t391 = t249 * t99;
t291 = t389 + t391;
t383 = qJD(6) * t99;
t43 = t249 * t278 - t253 * t334 + t383;
t400 = -t249 * t43 - t344 * t97;
t431 = t115 * t291 + t284 + t400;
t430 = t126 * t279 - t313 - t435;
t73 = -pkin(5) * t279 - pkin(10) * t115;
t2 = -t292 * qJD(6) + t249 * t16 + t253 * t5;
t428 = t2 + t449;
t63 = t105 * t250 + t106 * t417;
t401 = qJD(5) * t63 + t250 * t452 - t417 * t451;
t182 = t231 * t417 - t250 * t416;
t168 = t182 * qJD(5);
t46 = t250 * t272 + t417 * t71;
t386 = t168 - t46;
t50 = t253 * t52;
t426 = t345 * t436 - t50;
t188 = -t247 * t309 + t369;
t190 = t247 * t368 + t310;
t300 = g(1) * t190 + g(2) * t188;
t422 = g(3) * t365 - t300;
t423 = t422 * t229;
t256 = qJD(3) ^ 2;
t382 = qJDD(2) * pkin(2);
t160 = t296 - t382;
t287 = -t160 + t300;
t420 = -pkin(8) * t256 + t245 * (-g(3) * t255 + t320) + t287 + t382;
t419 = t421 ^ 2;
t132 = t198 * t250 + t269;
t163 = pkin(4) * t290 - t232;
t60 = t132 * pkin(5) - t133 * pkin(10) + t163;
t32 = -t249 * t63 + t253 * t60;
t418 = qJD(6) * t32 + t249 * t443 + t253 * t402;
t414 = pkin(3) * t251;
t195 = t247 * t254 - t251 * t367;
t407 = g(3) * t195;
t406 = g(3) * t245;
t1 = t2 * t253;
t404 = t99 * t97;
t33 = t249 * t60 + t253 * t63;
t403 = -qJD(6) * t33 - t249 * t402 + t253 * t443;
t398 = qJD(2) * pkin(2);
t393 = t249 * t79;
t392 = t249 * t97;
t390 = t253 * t79;
t388 = t253 * t99;
t39 = t43 * t253;
t380 = t436 * t249;
t374 = t421 * t192;
t373 = t204 * t251;
t372 = t230 * t249;
t371 = t230 * t253;
t366 = t245 * t254;
t364 = t249 * t255;
t363 = t253 * t255;
t362 = qJDD(1) - g(3);
t236 = cos(t240);
t207 = pkin(4) * t236 + t405;
t203 = pkin(2) + t207;
t238 = -pkin(9) + t248;
t359 = -t188 * t203 - t189 * t238;
t358 = -t190 * t203 - t191 * t238;
t235 = sin(t240);
t206 = -pkin(4) * t235 - t414;
t357 = t191 * t206 + t207 * t370;
t356 = t206 * t367 + t207 * t247;
t241 = t251 ^ 2;
t242 = t254 ^ 2;
t355 = t241 - t242;
t354 = t241 + t242;
t350 = qJD(2) * t252;
t346 = qJD(6) * t436;
t233 = pkin(3) * t351;
t332 = t245 * t364;
t331 = t245 * t363;
t257 = qJD(2) ^ 2;
t330 = t251 * t257 * t254;
t325 = t245 * t350;
t324 = qJD(2) * t365;
t315 = t255 * t340;
t154 = pkin(4) * t421 + t233;
t56 = t154 + t73;
t18 = t249 * t56 + t253 * t46;
t308 = t168 * t253 - t18;
t303 = t251 * t316;
t301 = pkin(5) * t230 + pkin(10) * t229;
t299 = g(1) * t191 + g(2) * t189;
t178 = pkin(10) + t183;
t294 = -t178 * t52 - t444;
t293 = t14 * t249 - t253 * t292;
t289 = qJDD(2) * t255 - t252 * t257;
t288 = t115 * t380 - t426;
t285 = t189 * t206 - t207 * t311;
t196 = t247 * t251 + t252 * t366;
t110 = t195 * t246 - t196 * t243;
t111 = t195 * t243 + t196 * t246;
t66 = t110 * t250 + t111 * t417;
t57 = -t249 * t66 - t331;
t283 = -t253 * t66 + t332;
t280 = t110 * t417 - t111 * t250;
t157 = t204 * t254 + t326;
t271 = t1 + t273;
t270 = -t435 - t6;
t267 = -g(3) * t367 - t299;
t262 = -qJD(6) * t293 - t3 * t249 + t1;
t205 = -t327 - t398;
t261 = -pkin(8) * qJDD(3) + (t205 + t327 - t398) * qJD(3);
t156 = t221 - t373;
t94 = -t157 * qJD(3) - t251 * t161 + t219;
t259 = -t94 * t251 + t93 * t254 + (-t156 * t254 - t157 * t251) * qJD(3) - t299;
t258 = t129 + t422;
t186 = t192 ^ 2;
t177 = -pkin(5) - t182;
t175 = t203 * t365;
t152 = t158 * pkin(5);
t142 = -qJD(3) * t196 - t251 * t324;
t141 = qJD(3) * t195 + t254 * t324;
t118 = t124 * pkin(5);
t117 = t122 * pkin(5);
t87 = t141 * t246 + t142 * t243;
t85 = -t141 * t243 + t142 * t246;
t62 = -t105 * t417 + t106 * t250;
t22 = qJD(5) * t66 + t250 * t87 - t417 * t85;
t21 = qJD(5) * t280 + t250 * t85 + t417 * t87;
t20 = t249 * t73 + t253 * t40;
t19 = -t249 * t40 + t253 * t73;
t17 = -t249 * t46 + t253 * t56;
t12 = qJD(6) * t283 - t21 * t249 + t253 * t325;
t11 = qJD(6) * t57 + t21 * t253 + t249 * t325;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t362, 0, 0, 0, 0, 0, 0, t289 * t245 (-qJDD(2) * t252 - t255 * t257) * t245, 0, -g(3) + (t247 ^ 2 + (t252 ^ 2 + t255 ^ 2) * t245 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, qJD(3) * t142 + qJDD(3) * t195 + (-t251 * t315 + t254 * t289) * t245, -qJD(3) * t141 - qJDD(3) * t196 + (-t251 * t289 - t254 * t315) * t245 (-t195 * t251 + t196 * t254) * qJDD(2) + (t141 * t254 - t142 * t251 + (-t195 * t254 - t196 * t251) * qJD(3)) * qJD(2), t141 * t157 + t142 * t156 + t195 * t94 + t196 * t93 - g(3) + (-t160 * t255 + t205 * t350) * t245, 0, 0, 0, 0, 0, 0, qJD(3) * t85 + qJDD(3) * t110 + (-t130 * t255 - t192 * t350) * t245, -qJD(3) * t87 - qJDD(3) * t111 + (-t131 * t255 + t350 * t421) * t245, -t110 * t131 - t111 * t130 + t192 * t87 - t421 * t85, t110 * t47 + t111 * t48 + t83 * t85 + t84 * t87 - g(3) + (-t129 * t255 + t176 * t350) * t245, 0, 0, 0, 0, 0, 0, -t22 * t335 + t280 * t334 + (-t115 * t350 - t255 * t55) * t245, -t21 * t335 - t66 * t334 + (-t255 * t278 - t279 * t350) * t245, t115 * t21 - t22 * t279 - t278 * t280 - t55 * t66, t21 * t41 - t22 * t40 + t280 * t8 + t66 * t7 - g(3) + (t126 * t350 - t255 * t81) * t245, 0, 0, 0, 0, 0, 0, t12 * t436 + t22 * t97 - t280 * t43 + t52 * t57, -t11 * t436 + t22 * t99 + t280 * t42 + t283 * t52, -t11 * t97 - t12 * t99 + t283 * t43 + t42 * t57, t11 * t14 - t12 * t292 - t2 * t283 + t22 * t34 - t280 * t6 + t3 * t57 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t422 + t314, -t362 * t367 + t299, 0, 0, qJDD(2) * t241 + 0.2e1 * t303, 0.2e1 * t251 * t336 - 0.2e1 * t340 * t355, qJDD(3) * t251 + t254 * t256, qJDD(2) * t242 - 0.2e1 * t303, qJDD(3) * t254 - t251 * t256, 0, t251 * t261 + t254 * t420, -t251 * t420 + t254 * t261, t354 * t381 + (-g(3) * t252 - t319 * t354) * t245 + t259, t287 * pkin(2) + t259 * pkin(8) + (-g(3) * (pkin(2) * t255 + pkin(8) * t252) + (-t205 * t252 + (t156 * t251 - t157 * t254) * t255) * qJD(1)) * t245, t131 * t198 - t275 * t421, -t198 * t130 - t131 * t290 + (-t192 * t290 - t198 * t421) * qJD(3), t198 * qJDD(3) - t256 * t290, t130 * t290 - t192 * t277, -qJDD(3) * t290 - t198 * t256, 0, t150 * qJDD(3) - t232 * t130 + t129 * t290 + t192 * t328 - t422 * t236 + (t176 * t198 - t192 * t414 + t361) * qJD(3), -t421 * t328 - t151 * qJDD(3) + t129 * t198 - t232 * t131 + t422 * t235 + (-t176 * t290 + t414 * t421 - t360) * qJD(3), -t151 * t130 - t48 * t290 - t150 * t131 - t47 * t198 - t361 * t421 + t360 * t192 + (-t198 * t84 + t290 * t83) * qJD(3) + t267, t48 * t151 + t47 * t150 - t129 * t232 + t176 * t234 - g(1) * (-t190 * t232 - t191 * t248) - g(2) * (-t188 * t232 - t189 * t248) + t360 * t84 + t361 * t83 + (-t176 * t352 - g(3) * (t232 * t255 - t248 * t252)) * t245, t133 * t278 + t279 * t79, -t115 * t79 - t132 * t278 - t133 * t55 + t279 * t80, t133 * t334 - t335 * t79, -t115 * t80 + t132 * t55, -t132 * t334 - t335 * t80, 0, -t115 * t298 + t126 * t80 + t81 * t132 + t163 * t55 - t230 * t422 - t334 * t62 - t335 * t401, -t126 * t79 + t81 * t133 + t163 * t278 - t279 * t298 - t334 * t63 - t335 * t402 + t423, t115 * t402 - t132 * t7 - t133 * t8 + t278 * t62 - t279 * t401 + t40 * t79 - t41 * t80 - t55 * t63 + t267, t7 * t63 - t8 * t62 + t81 * t163 - g(1) * t358 - g(2) * t359 - g(3) * (-t238 * t367 + t175) + t402 * t41 - t401 * t40 + t298 * t126, t133 * t284 - t388 * t79, t291 * t79 + (t37 - t39 + (-t388 + t392) * qJD(6)) * t133, t133 * t50 - t132 * t42 + t80 * t99 + (-t133 * t345 - t390) * t436, -t133 * t400 - t392 * t79, -t133 * t49 - t132 * t43 - t80 * t97 + (-t133 * t344 + t393) * t436, t132 * t52 + t436 * t80, t32 * t52 + t3 * t132 - t292 * t80 + t62 * t43 - t34 * t393 - g(1) * (-t190 * t371 + t191 * t249) - g(2) * (-t188 * t371 + t189 * t249) + t401 * t97 - (t230 * t363 + t249 * t252) * t406 + t429 * t133 + t403 * t436, -t33 * t52 - t2 * t132 - t14 * t80 - t62 * t42 - t34 * t390 - g(1) * (t190 * t372 + t191 * t253) - g(2) * (t188 * t372 + t189 * t253) + t401 * t99 - (-t230 * t364 + t252 * t253) * t406 + (t6 * t253 - t30) * t133 - t418 * t436, t32 * t42 - t33 * t43 - t403 * t99 - t418 * t97 + t293 * t79 - t423 + (-t2 * t249 - t253 * t3 + (-t14 * t253 - t249 * t292) * qJD(6)) * t133, t2 * t33 + t3 * t32 + t6 * t62 - g(1) * (-t190 * t301 + t358) - g(2) * (-t188 * t301 + t359) - g(3) * t175 + t401 * t34 - (-t238 * t252 + t255 * t301) * t406 + t418 * t14 - t403 * t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330, t355 * t257, t337, t330, t336, qJDD(3), -t407 + t219 + (-g(1) * t244 + g(2) * t384) * t366 + (-qJD(2) * t205 - t161 + t299) * t251, -t205 * t349 - g(1) * (-t191 * t254 - t251 * t370) - g(2) * (-t189 * t254 + t251 * t311) + g(3) * t196 + (t156 + t373) * qJD(3) - t329, 0, 0, -t374, -t186 + t419 (-t192 + t323) * qJD(3) + t266, t374, -t295, qJDD(3), -t86 * qJD(3) - t176 * t421 - g(1) * (-t191 * t235 + t236 * t370) - g(2) * (-t189 * t235 - t236 * t311) - g(3) * (-t235 * t367 + t236 * t247) + (qJDD(3) * t246 + t192 * t351) * pkin(3) + t47, t88 * qJD(3) - t176 * t192 - g(1) * (-t191 * t236 - t235 * t370) - g(2) * (-t189 * t236 + t235 * t311) - g(3) * (-t235 * t247 - t236 * t367) + (-qJDD(3) * t243 - t351 * t421) * pkin(3) - t48 (t84 + t86) * t421 + (t83 - t88) * t192 + (-t130 * t243 - t131 * t246) * pkin(3), -t176 * t233 + t47 * t415 + t48 * t416 - t83 * t86 - t84 * t88 + (-g(1) * (-t191 * t251 + t244 * t366) - g(2) * (-t189 * t251 - t254 * t311) - t407) * pkin(3), t375, t447, t448, -t375, t439, t334, -t385 * qJD(3) + qJD(5) * t450 + t154 * t115 + t182 * t334 + t430, t154 * t279 - t183 * t334 - t335 * t386 + t432, -t182 * t278 - t183 * t55 + t450 * t279 + (t386 + t40) * t115, -g(1) * t357 - g(2) * t285 - g(3) * t356 - t126 * t154 + t8 * t182 + t7 * t183 - t385 * t40 + t386 * t41, t446, t431, t445, t380 * t97 - t39, t288 - t397, t442, -t436 * t17 + t177 * t43 + t385 * t97 + (-t168 * t436 + t294) * t249 + (-t178 * t346 + t270) * t253 + t433, -t177 * t42 + t385 * t99 + t294 * t253 + (t178 * t345 - t308) * t436 + t434, t17 * t99 + t18 * t97 + (-t115 * t292 - t168 * t97 - t178 * t43 + (t178 * t99 + t292) * qJD(6)) * t253 + (t115 * t14 + t168 * t99 - t178 * t42 - t3 + (t178 * t97 - t14) * qJD(6)) * t249 + t271, t6 * t177 - g(1) * (pkin(10) * t125 + t118 + t357) - g(2) * (pkin(10) * t123 + t117 + t285) - g(3) * (pkin(10) * t159 + t152 + t356) + t385 * t34 + t308 * t14 - (-t168 * t249 - t17) * t292 + t262 * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295 + 0.2e1 * t437 (t192 + t323) * qJD(3) + t266, -t186 - t419, -t192 * t84 + t421 * t83 + t258, 0, 0, 0, 0, 0, 0, t306 - t343 - 0.2e1 * t438, t278 + t425, -t378 - t379, -t115 * t41 - t279 * t40 + t258 + t413, 0, 0, 0, 0, 0, 0, t288 + t397, -t253 * t436 ^ 2 + t396 - t49 (t389 - t391) * t115 - t284 + t400, t249 * t428 + t253 * t427 + t279 * t34 + t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t375, t447, t448, -t375, t439, t334, qJD(3) * t41 + t430, t335 * t40 + t432, 0, 0, t446, t431, t445, t392 * t436 - t39, -t380 * t436 - t397 + t50, t442, -pkin(5) * t43 - t436 * t19 - t41 * t97 + (-pkin(10) * t52 - t444) * t249 + (-pkin(10) * t346 + t270) * t253 + t433, pkin(5) * t42 + pkin(10) * t426 + t20 * t436 - t34 * t441 - t41 * t99 + t434, t19 * t99 + t20 * t97 + (t449 + (-t43 + t383) * pkin(10)) * t253 + ((qJD(6) * t97 - t42) * pkin(10) - t427) * t249 + t271, -t6 * pkin(5) - g(1) * t118 - g(2) * t117 - g(3) * t152 + t292 * t19 - t14 * t20 - t34 * t41 + (t262 + t273) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, -t97 ^ 2 + t99 ^ 2, t436 * t97 - t42, -t404, t436 * t99 - t43, t52, -t34 * t99 - g(1) * (-t125 * t249 + t190 * t253) - g(2) * (-t123 * t249 + t188 * t253) - g(3) * (-t159 * t249 - t331) + t427, t34 * t97 - g(1) * (-t125 * t253 - t190 * t249) - g(2) * (-t123 * t253 - t188 * t249) - g(3) * (-t159 * t253 + t332) - t428, 0, 0;];
tau_reg  = t4;
