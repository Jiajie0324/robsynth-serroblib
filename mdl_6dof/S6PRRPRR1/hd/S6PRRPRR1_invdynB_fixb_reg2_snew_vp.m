% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 04:19
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRPRR1_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR1_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR1_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR1_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR1_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR1_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 04:17:46
% EndTime: 2019-05-05 04:18:31
% DurationCPUTime: 45.41s
% Computational Cost: add. (358184->1016), mult. (794039->1655), div. (0->0), fcn. (607171->14), ass. (0->725)
t987 = sin(qJ(3));
t1094 = qJD(2) * t987;
t978 = sin(pkin(12));
t981 = cos(pkin(12));
t991 = cos(qJ(3));
t935 = qJD(2) * t981 * t991 - t1094 * t978;
t1027 = t978 * t991 + t981 * t987;
t936 = t1027 * qJD(2);
t986 = sin(qJ(5));
t990 = cos(qJ(5));
t876 = -t990 * t935 + t936 * t986;
t975 = qJD(3) + qJD(5);
t867 = t975 * t876;
t1087 = qJD(2) * qJD(3);
t1071 = t987 * t1087;
t1083 = qJDD(2) * t991;
t1017 = t1071 - t1083;
t1070 = t991 * t1087;
t1085 = qJDD(2) * t987;
t944 = t1070 + t1085;
t1065 = t981 * t1017 + t944 * t978;
t900 = -t1017 * t978 + t981 * t944;
t999 = qJD(5) * t876 + t1065 * t986 - t900 * t990;
t1145 = t999 + t867;
t898 = t935 * t936;
t1132 = qJDD(3) + t898;
t1144 = t1132 * t978;
t1143 = t1132 * t981;
t1066 = t1065 * t990 + t986 * t900;
t878 = t935 * t986 + t936 * t990;
t782 = -qJD(5) * t878 - t1066;
t1000 = qJDD(6) - t782;
t985 = sin(qJ(6));
t989 = cos(qJ(6));
t850 = t878 * t985 - t989 * t975;
t852 = t878 * t989 + t975 * t985;
t794 = t852 * t850;
t1133 = t1000 - t794;
t1142 = t1133 * t985;
t1141 = t1133 * t989;
t817 = t878 * t876;
t974 = qJDD(3) + qJDD(5);
t1137 = -t817 + t974;
t1140 = t1137 * t986;
t1139 = t1137 * t990;
t979 = sin(pkin(11));
t982 = cos(pkin(11));
t1069 = g(1) * t979 - t982 * g(2);
t1095 = g(3) - qJDD(1);
t980 = sin(pkin(6));
t983 = cos(pkin(6));
t1138 = t983 * t1069 - t980 * t1095;
t731 = -t850 * qJD(6) + t985 * t974 - t989 * t999;
t873 = qJD(6) + t876;
t804 = t873 * t850;
t697 = -t804 + t731;
t1135 = t979 * t1095;
t1134 = t982 * t1095;
t951 = g(1) * t982 + g(2) * t979;
t906 = -t1069 * t979 - t982 * t951;
t745 = (qJD(5) - t975) * t878 + t1066;
t1067 = -t989 * t974 - t985 * t999;
t694 = (qJD(6) - t873) * t852 + t1067;
t905 = t1069 * t982 - t979 * t951;
t1127 = qJD(2) ^ 2;
t988 = sin(qJ(2));
t992 = cos(qJ(2));
t880 = t1138 * t988 - t992 * t951;
t863 = -pkin(2) * t1127 + qJDD(2) * pkin(8) + t880;
t923 = t1069 * t980 + t1095 * t983;
t827 = t863 * t987 + t991 * t923;
t1131 = -t827 + (-t944 + t1070) * qJ(4);
t848 = t850 ^ 2;
t849 = t852 ^ 2;
t872 = t873 ^ 2;
t874 = t876 ^ 2;
t875 = t878 ^ 2;
t1130 = t935 ^ 2;
t930 = t936 ^ 2;
t1129 = t975 ^ 2;
t1128 = t991 ^ 2;
t1126 = 2 * qJD(4);
t1125 = pkin(5) * t986;
t879 = -t1138 * t992 - t951 * t988;
t809 = t879 * t988 + t880 * t992;
t1124 = pkin(7) * t809;
t1090 = t991 * t1127;
t961 = t987 * t1090;
t953 = qJDD(3) + t961;
t995 = t953 * pkin(3) + t1131;
t972 = t1128 * t1127;
t828 = t991 * t863 - t987 * t923;
t952 = qJD(3) * pkin(3) - qJ(4) * t1094;
t997 = -qJ(4) * t1017 - qJD(3) * t952 + t828;
t996 = -pkin(3) * t972 + t997;
t704 = t935 * t1126 + t978 * t995 + t981 * t996;
t922 = qJD(3) * pkin(4) - pkin(9) * t936;
t678 = -pkin(4) * t1130 - pkin(9) * t1065 - qJD(3) * t922 + t704;
t1079 = t936 * t1126;
t703 = t978 * t996 - t981 * t995 + t1079;
t1091 = t935 * qJD(3);
t858 = -t900 + t1091;
t994 = pkin(4) * t1132 + pkin(9) * t858 - t703;
t587 = t678 * t986 - t990 * t994;
t588 = t990 * t678 + t986 * t994;
t532 = -t587 * t990 + t588 * t986;
t1123 = t532 * t978;
t1122 = t532 * t981;
t814 = pkin(5) * t876 - pkin(10) * t878;
t561 = -t974 * pkin(5) - pkin(10) * t1129 + t814 * t878 + t587;
t1121 = t561 * t985;
t1120 = t561 * t989;
t630 = -t703 * t981 + t704 * t978;
t1119 = t630 * t987;
t1118 = t630 * t991;
t713 = t1000 + t794;
t1117 = t713 * t985;
t1116 = t713 * t989;
t862 = -qJDD(2) * pkin(2) - t1127 * pkin(8) + t879;
t816 = t1017 * pkin(3) - qJ(4) * t972 + t1094 * t952 + qJDD(4) + t862;
t734 = pkin(4) * t1065 - t1130 * pkin(9) + t922 * t936 + t816;
t1115 = t734 * t986;
t1114 = t734 * t990;
t812 = t817 + t974;
t1113 = t812 * t986;
t1112 = t812 * t990;
t1111 = t816 * t978;
t1110 = t816 * t981;
t1109 = t862 * t987;
t1108 = t862 * t991;
t1107 = t873 * t985;
t1106 = t873 * t989;
t887 = qJDD(3) - t898;
t1105 = t887 * t978;
t1104 = t887 * t981;
t945 = -0.2e1 * t1071 + t1083;
t907 = t945 * t991;
t1103 = t953 * t987;
t954 = qJDD(3) - t961;
t1102 = t954 * t987;
t1101 = t954 * t991;
t1100 = t975 * t986;
t1099 = t975 * t990;
t1097 = t988 * t923;
t1096 = t992 * t923;
t562 = -pkin(5) * t1129 + pkin(10) * t974 - t814 * t876 + t588;
t628 = t734 + (t878 * t975 - t782) * pkin(5) + t1145 * pkin(10);
t537 = t989 * t562 + t985 * t628;
t976 = t987 ^ 2;
t1093 = t1127 * t976;
t1092 = qJD(3) * t936;
t1086 = qJDD(2) * t980;
t1084 = qJDD(2) * t988;
t1082 = qJDD(2) * t992;
t1081 = qJDD(3) * t992;
t1080 = t976 + t1128;
t1078 = t986 * t794;
t1077 = t990 * t794;
t1076 = t988 * t817;
t1075 = t992 * t817;
t1074 = t988 * t898;
t1073 = t992 * t898;
t1072 = -pkin(5) * t990 - pkin(4);
t536 = t562 * t985 - t989 * t628;
t533 = t587 * t986 + t990 * t588;
t631 = t703 * t978 + t981 * t704;
t752 = t827 * t987 + t991 * t828;
t1064 = t988 * t961;
t1063 = t992 * t961;
t751 = t827 * t991 - t828 * t987;
t946 = t1080 * qJDD(2);
t949 = t972 + t1093;
t903 = t946 * t992 - t949 * t988;
t1061 = pkin(7) * t903 + t751 * t988;
t947 = -t1127 * t988 + t1082;
t1060 = -pkin(7) * t947 - t1097;
t1024 = t1127 * t992 + t1084;
t1059 = -pkin(7) * t1024 + t1096;
t476 = t536 * t985 + t537 * t989;
t450 = t476 * t986 - t561 * t990;
t451 = t476 * t990 + t561 * t986;
t416 = t450 * t981 + t451 * t978;
t417 = -t450 * t978 + t451 * t981;
t389 = -t416 * t987 + t417 * t991;
t475 = -t536 * t989 + t537 * t985;
t1058 = t389 * t988 - t475 * t992;
t471 = t533 * t978 + t1122;
t472 = t533 * t981 - t1123;
t431 = -t471 * t987 + t472 * t991;
t1057 = t431 * t988 - t734 * t992;
t698 = -t804 - t731;
t617 = -t694 * t989 - t698 * t985;
t753 = t848 + t849;
t574 = t617 * t986 + t753 * t990;
t575 = t617 * t990 - t753 * t986;
t518 = t574 * t981 + t575 * t978;
t519 = -t574 * t978 + t575 * t981;
t462 = -t518 * t987 + t519 * t991;
t615 = -t694 * t985 + t698 * t989;
t1056 = t462 * t988 - t615 * t992;
t696 = (-qJD(6) - t873) * t852 - t1067;
t618 = t696 * t989 - t697 * t985;
t792 = -t849 + t848;
t580 = t618 * t986 + t792 * t990;
t581 = t618 * t990 - t792 * t986;
t524 = t580 * t981 + t581 * t978;
t525 = -t580 * t978 + t581 * t981;
t470 = -t524 * t987 + t525 * t991;
t616 = -t696 * t985 - t697 * t989;
t1055 = t470 * t988 + t616 * t992;
t755 = -t872 - t848;
t649 = t755 * t989 - t1142;
t590 = t649 * t986 + t696 * t990;
t591 = t649 * t990 - t696 * t986;
t534 = t590 * t981 + t591 * t978;
t535 = -t590 * t978 + t591 * t981;
t474 = -t534 * t987 + t535 * t991;
t648 = t755 * t985 + t1141;
t1054 = t474 * t988 - t648 * t992;
t762 = -t849 - t872;
t653 = -t762 * t985 - t1116;
t592 = t653 * t986 - t697 * t990;
t593 = t653 * t990 + t697 * t986;
t538 = t592 * t981 + t593 * t978;
t539 = -t592 * t978 + t593 * t981;
t478 = -t538 * t987 + t539 * t991;
t652 = t762 * t989 - t1117;
t1053 = t478 * t988 - t652 * t992;
t802 = -t849 + t872;
t674 = -t802 * t985 + t1141;
t600 = t674 * t986 + t698 * t990;
t602 = t674 * t990 - t698 * t986;
t544 = t600 * t981 + t602 * t978;
t546 = -t600 * t978 + t602 * t981;
t483 = -t544 * t987 + t546 * t991;
t672 = -t802 * t989 - t1142;
t1052 = t483 * t988 + t672 * t992;
t801 = t848 - t872;
t675 = t801 * t989 - t1117;
t601 = t675 * t986 + t694 * t990;
t603 = t675 * t990 - t694 * t986;
t545 = t601 * t981 + t603 * t978;
t547 = -t601 * t978 + t603 * t981;
t484 = -t545 * t987 + t547 * t991;
t673 = -t801 * t985 - t1116;
t1051 = t484 * t988 + t673 * t992;
t730 = -qJD(6) * t852 - t1067;
t691 = t1106 * t850 - t730 * t985;
t642 = t691 * t986 + t1077;
t644 = t691 * t990 - t1078;
t563 = t642 * t981 + t644 * t978;
t565 = -t642 * t978 + t644 * t981;
t508 = -t563 * t987 + t565 * t991;
t690 = -t1107 * t850 - t730 * t989;
t1050 = t508 * t988 + t690 * t992;
t693 = -t1107 * t852 + t731 * t989;
t643 = t693 * t986 - t1077;
t645 = t693 * t990 + t1078;
t564 = t643 * t981 + t645 * t978;
t566 = -t643 * t978 + t645 * t981;
t509 = -t564 * t987 + t566 * t991;
t692 = -t1106 * t852 - t731 * t985;
t1049 = t509 * t988 + t692 * t992;
t744 = (qJD(5) + t975) * t878 + t1066;
t668 = -t1145 * t990 - t744 * t986;
t670 = t1145 * t986 - t744 * t990;
t583 = t668 * t981 + t670 * t978;
t585 = -t668 * t978 + t670 * t981;
t530 = -t583 * t987 + t585 * t991;
t815 = -t875 + t874;
t1048 = t530 * t988 + t815 * t992;
t749 = -t867 + t999;
t669 = -t745 * t986 + t749 * t990;
t671 = -t745 * t990 - t749 * t986;
t584 = t669 * t981 + t671 * t978;
t586 = -t669 * t978 + t671 * t981;
t531 = -t584 * t987 + t586 * t991;
t777 = -t874 - t875;
t1047 = t531 * t988 - t777 * t992;
t725 = (-t850 * t989 + t852 * t985) * t873;
t679 = -t1000 * t990 + t725 * t986;
t680 = t1000 * t986 + t725 * t990;
t594 = t679 * t981 + t680 * t978;
t595 = -t679 * t978 + t680 * t981;
t541 = -t594 * t987 + t595 * t991;
t724 = (t850 * t985 + t852 * t989) * t873;
t1046 = t541 * t988 + t724 * t992;
t555 = t631 * t991 - t1119;
t1045 = t555 * t988 - t816 * t992;
t810 = -t1129 - t874;
t732 = t810 * t986 + t1139;
t733 = t810 * t990 - t1140;
t650 = t732 * t981 + t733 * t978;
t651 = -t732 * t978 + t733 * t981;
t573 = -t650 * t987 + t651 * t991;
t1044 = t573 * t988 - t744 * t992;
t860 = -t875 - t1129;
t756 = t860 * t990 - t1113;
t757 = -t860 * t986 - t1112;
t683 = t756 * t981 + t757 * t978;
t684 = -t756 * t978 + t757 * t981;
t607 = -t683 * t987 + t684 * t991;
t1043 = t1145 * t992 + t607 * t988;
t865 = -t875 + t1129;
t758 = t865 * t990 + t1140;
t760 = -t865 * t986 + t1139;
t685 = t758 * t981 + t760 * t978;
t687 = -t758 * t978 + t760 * t981;
t610 = -t685 * t987 + t687 * t991;
t1042 = t610 * t988 + t749 * t992;
t864 = t874 - t1129;
t759 = t864 * t986 + t1112;
t761 = t864 * t990 - t1113;
t686 = t759 * t981 + t761 * t978;
t688 = -t759 * t978 + t761 * t981;
t611 = -t686 * t987 + t688 * t991;
t1041 = t611 * t988 + t745 * t992;
t797 = (-t876 * t986 - t878 * t990) * t975;
t798 = (-t876 * t990 + t878 * t986) * t975;
t722 = t797 * t981 + t798 * t978;
t723 = -t797 * t978 + t798 * t981;
t639 = -t722 * t987 + t723 * t991;
t1040 = t639 * t988 - t974 * t992;
t854 = t1065 + t1092;
t857 = t900 + t1091;
t786 = -t854 * t978 + t857 * t981;
t788 = -t854 * t981 - t857 * t978;
t708 = -t786 * t987 + t788 * t991;
t894 = -t930 + t1130;
t1039 = t708 * t988 + t894 * t992;
t856 = -t1065 + t1092;
t787 = t856 * t978 + t858 * t981;
t789 = t856 * t981 - t858 * t978;
t709 = -t787 * t987 + t789 * t991;
t853 = -t930 - t1130;
t1038 = t709 * t988 - t853 * t992;
t993 = qJD(3) ^ 2;
t885 = -t993 - t1130;
t818 = t885 * t978 + t1143;
t819 = t885 * t981 - t1144;
t737 = -t818 * t987 + t819 * t991;
t1037 = t737 * t988 - t854 * t992;
t1036 = t752 * t988 - t862 * t992;
t924 = -t993 + t1130;
t837 = t924 * t978 + t1104;
t840 = t924 * t981 - t1105;
t766 = -t837 * t987 + t840 * t991;
t1035 = t766 * t988 - t856 * t992;
t925 = -t930 + t993;
t838 = t925 * t981 + t1144;
t841 = -t925 * t978 + t1143;
t767 = -t838 * t987 + t841 * t991;
t1034 = t767 * t988 + t858 * t992;
t926 = -t930 - t993;
t839 = t926 * t981 - t1105;
t842 = -t926 * t978 - t1104;
t768 = -t839 * t987 + t842 * t991;
t1033 = t768 * t988 - t857 * t992;
t808 = t879 * t992 - t880 * t988;
t943 = 0.2e1 * t1070 + t1085;
t902 = -t943 * t987 + t907;
t950 = t972 - t1093;
t1032 = t902 * t988 + t950 * t992;
t960 = -t972 - t993;
t914 = t960 * t991 - t1103;
t1031 = t914 * t988 + t945 * t992;
t958 = -t993 - t1093;
t916 = -t958 * t987 - t1101;
t1030 = t916 * t988 - t943 * t992;
t933 = t1024 * t983;
t1029 = t933 * t982 + t947 * t979;
t892 = t933 * t979 - t947 * t982;
t1028 = t946 * t988 + t949 * t992;
t870 = (t935 * t978 - t936 * t981) * qJD(3);
t871 = (t935 * t981 + t936 * t978) * qJD(3);
t800 = -t870 * t987 + t871 * t991;
t1026 = t800 * t988 - t1081;
t941 = t1080 * t1087;
t1025 = t941 * t988 - t1081;
t738 = t1100 * t876 + t782 * t990;
t739 = t1099 * t876 - t782 * t986;
t658 = t738 * t981 + t739 * t978;
t660 = -t738 * t978 + t739 * t981;
t578 = -t658 * t987 + t660 * t991;
t1023 = t578 * t988 + t1075;
t740 = t1099 * t878 - t986 * t999;
t741 = -t1100 * t878 - t990 * t999;
t659 = t740 * t981 + t741 * t978;
t661 = -t740 * t978 + t741 * t981;
t579 = -t659 * t987 + t661 * t991;
t1022 = t579 * t988 - t1075;
t843 = -t1065 * t981 - t1091 * t978;
t844 = t1065 * t978 - t1091 * t981;
t775 = -t843 * t987 + t844 * t991;
t1021 = t775 * t988 - t1073;
t845 = t1092 * t981 + t900 * t978;
t846 = -t1092 * t978 + t900 * t981;
t776 = -t845 * t987 + t846 * t991;
t1020 = t776 * t988 + t1073;
t959 = t972 - t993;
t913 = t959 * t991 - t1102;
t1019 = -t1082 * t991 + t913 * t988;
t942 = t991 * t953;
t957 = t993 - t1093;
t915 = -t957 * t987 + t942;
t1018 = -t1082 * t987 + t915 * t988;
t919 = t1017 * t987 - t1087 * t1128;
t1016 = t919 * t988 - t1063;
t920 = -t1087 * t976 + t944 * t991;
t1015 = t920 * t988 + t1063;
t392 = pkin(9) * t451 + (-pkin(10) * t986 + t1072) * t475;
t410 = -pkin(9) * t450 + (-pkin(10) * t990 + t1125) * t475;
t372 = -pkin(3) * t475 + qJ(4) * t417 + t392 * t981 + t410 * t978;
t374 = -qJ(4) * t416 - t392 * t978 + t410 * t981;
t388 = t416 * t991 + t417 * t987;
t359 = -pkin(8) * t388 - t372 * t987 + t374 * t991;
t373 = -pkin(2) * t388 - pkin(3) * t416 - pkin(4) * t450 + pkin(5) * t561 - pkin(10) * t476;
t387 = t389 * t992 + t475 * t988;
t1014 = pkin(7) * t387 + t359 * t988 + t373 * t992;
t455 = -pkin(10) * t615 - t475;
t434 = pkin(9) * t575 + t1072 * t615 + t986 * t455;
t435 = -pkin(9) * t574 + t1125 * t615 + t455 * t990;
t391 = -pkin(3) * t615 + qJ(4) * t519 + t434 * t981 + t435 * t978;
t393 = -qJ(4) * t518 - t434 * t978 + t435 * t981;
t461 = t518 * t991 + t519 * t987;
t377 = -pkin(8) * t461 - t391 * t987 + t393 * t991;
t413 = -pkin(2) * t461 - pkin(3) * t518 - pkin(4) * t574 - pkin(5) * t753 - pkin(10) * t617 - t476;
t448 = t462 * t992 + t615 * t988;
t1013 = pkin(7) * t448 + t377 * t988 + t413 * t992;
t500 = -pkin(5) * t648 + t536;
t548 = -pkin(10) * t648 + t1121;
t441 = -pkin(4) * t648 + pkin(9) * t591 + t500 * t990 + t548 * t986;
t444 = -pkin(9) * t590 - t500 * t986 + t548 * t990;
t402 = -pkin(3) * t648 + qJ(4) * t535 + t441 * t981 + t444 * t978;
t405 = -qJ(4) * t534 - t441 * t978 + t444 * t981;
t473 = t534 * t991 + t535 * t987;
t380 = -pkin(8) * t473 - t402 * t987 + t405 * t991;
t420 = -pkin(2) * t473 - pkin(3) * t534 - pkin(4) * t590 - pkin(5) * t696 - pkin(10) * t649 + t1120;
t457 = t474 * t992 + t648 * t988;
t1012 = pkin(7) * t457 + t380 * t988 + t420 * t992;
t501 = -pkin(5) * t652 + t537;
t549 = -pkin(10) * t652 + t1120;
t442 = -pkin(4) * t652 + pkin(9) * t593 + t501 * t990 + t549 * t986;
t445 = -pkin(9) * t592 - t501 * t986 + t549 * t990;
t403 = -pkin(3) * t652 + qJ(4) * t539 + t442 * t981 + t445 * t978;
t409 = -qJ(4) * t538 - t442 * t978 + t445 * t981;
t477 = t538 * t991 + t539 * t987;
t381 = -pkin(8) * t477 - t403 * t987 + t409 * t991;
t421 = -pkin(2) * t477 - pkin(3) * t538 - pkin(4) * t592 + pkin(5) * t697 - pkin(10) * t653 - t1121;
t459 = t478 * t992 + t652 * t988;
t1011 = pkin(7) * t459 + t381 * t988 + t421 * t992;
t511 = -pkin(4) * t734 + pkin(9) * t533;
t425 = -pkin(3) * t734 - pkin(9) * t1123 + qJ(4) * t472 + t511 * t981;
t429 = -pkin(9) * t1122 - qJ(4) * t471 - t511 * t978;
t430 = t471 * t991 + t472 * t987;
t384 = -pkin(8) * t430 - t425 * t987 + t429 * t991;
t401 = -pkin(2) * t430 - pkin(3) * t471 - pkin(4) * t532;
t428 = t431 * t992 + t734 * t988;
t1010 = pkin(7) * t428 + t384 * t988 + t401 * t992;
t498 = -pkin(4) * t777 + pkin(9) * t671 + t533;
t504 = -pkin(9) * t669 - t532;
t438 = -pkin(3) * t777 + qJ(4) * t586 + t498 * t981 + t504 * t978;
t440 = -qJ(4) * t584 - t498 * t978 + t504 * t981;
t529 = t584 * t991 + t586 * t987;
t400 = -pkin(8) * t529 - t438 * t987 + t440 * t991;
t486 = -pkin(2) * t529 - pkin(3) * t584 - pkin(4) * t669;
t517 = t531 * t992 + t777 * t988;
t1009 = pkin(7) * t517 + t400 * t988 + t486 * t992;
t623 = -pkin(4) * t744 + pkin(9) * t733 - t1114;
t654 = -pkin(9) * t732 + t1115;
t521 = -pkin(3) * t744 + qJ(4) * t651 + t623 * t981 + t654 * t978;
t543 = -qJ(4) * t650 - t623 * t978 + t654 * t981;
t572 = t650 * t991 + t651 * t987;
t449 = -pkin(8) * t572 - t521 * t987 + t543 * t991;
t494 = -pkin(2) * t572 - pkin(3) * t650 - pkin(4) * t732 + t587;
t556 = t573 * t992 + t744 * t988;
t1008 = pkin(7) * t556 + t449 * t988 + t494 * t992;
t632 = pkin(4) * t1145 + pkin(9) * t757 + t1115;
t676 = -pkin(9) * t756 + t1114;
t542 = pkin(3) * t1145 + qJ(4) * t684 + t632 * t981 + t676 * t978;
t551 = -qJ(4) * t683 - t632 * t978 + t676 * t981;
t606 = t683 * t991 + t684 * t987;
t458 = -pkin(8) * t606 - t542 * t987 + t551 * t991;
t499 = -pkin(2) * t606 - pkin(3) * t683 - pkin(4) * t756 + t588;
t569 = -t1145 * t988 + t607 * t992;
t1007 = pkin(7) * t569 + t458 * t988 + t499 * t992;
t554 = t631 * t987 + t1118;
t612 = -pkin(3) * t816 + qJ(4) * t631;
t492 = -pkin(8) * t554 - qJ(4) * t1118 - t612 * t987;
t514 = -pkin(2) * t554 - pkin(3) * t630;
t553 = t555 * t992 + t816 * t988;
t1006 = pkin(7) * t553 + t492 * t988 + t514 * t992;
t589 = -pkin(3) * t853 + qJ(4) * t789 + t631;
t599 = -qJ(4) * t787 - t630;
t707 = t787 * t991 + t789 * t987;
t512 = -pkin(8) * t707 - t589 * t987 + t599 * t991;
t657 = -pkin(2) * t707 - pkin(3) * t787;
t689 = t709 * t992 + t853 * t988;
t1005 = pkin(7) * t689 + t512 * t988 + t657 * t992;
t711 = -pkin(3) * t854 + qJ(4) * t819 - t1110;
t735 = -qJ(4) * t818 + t1111;
t736 = t818 * t991 + t819 * t987;
t613 = -pkin(8) * t736 - t711 * t987 + t735 * t991;
t629 = -pkin(2) * t736 + t978 * t997 - t981 * t1131 + t1079 + (-t981 * qJDD(3) - t1027 * t1090 - t818) * pkin(3);
t710 = t737 * t992 + t854 * t988;
t1004 = pkin(7) * t710 + t613 * t988 + t629 * t992;
t721 = -pkin(3) * t857 + qJ(4) * t842 + t1111;
t754 = -qJ(4) * t839 + t1110;
t765 = t839 * t991 + t842 * t987;
t625 = -pkin(8) * t765 - t721 * t987 + t754 * t991;
t633 = -pkin(2) * t765 - pkin(3) * t839 + t704;
t728 = t768 * t992 + t857 * t988;
t1003 = pkin(7) * t728 + t625 * t988 + t633 * t992;
t910 = t960 * t987 + t942;
t795 = -pkin(2) * t910 + t827;
t825 = -pkin(8) * t910 + t1109;
t868 = t914 * t992 - t945 * t988;
t1002 = pkin(7) * t868 + t795 * t992 + t825 * t988;
t912 = t958 * t991 - t1102;
t796 = -pkin(2) * t912 + t828;
t826 = -pkin(8) * t912 + t1108;
t869 = t916 * t992 + t943 * t988;
t1001 = pkin(7) * t869 + t796 * t992 + t826 * t988;
t718 = t752 * t992 + t862 * t988;
t998 = pkin(7) * t718 - (-pkin(2) * t992 - pkin(8) * t988) * t751;
t970 = t988 * qJDD(3);
t934 = t947 * t983;
t932 = t947 * t980;
t931 = t1024 * t980;
t921 = t941 * t992 + t970;
t911 = t957 * t991 + t1103;
t909 = t959 * t987 + t1101;
t908 = (t944 + t1070) * t987;
t904 = t1025 * t983;
t901 = t943 * t991 + t945 * t987;
t896 = t1028 * t983;
t895 = t1028 * t980;
t893 = -t1024 * t982 - t934 * t979;
t891 = -t1024 * t979 + t934 * t982;
t884 = t920 * t992 - t1064;
t883 = t919 * t992 + t1064;
t882 = t1084 * t987 + t915 * t992;
t881 = t1083 * t988 + t913 * t992;
t861 = t902 * t992 - t950 * t988;
t836 = -t1096 + (t931 * t980 + t933 * t983) * pkin(7);
t835 = -t1097 + (-t932 * t980 - t934 * t983) * pkin(7);
t834 = -t896 * t979 + t903 * t982;
t833 = t896 * t982 + t903 * t979;
t832 = t1015 * t983 - t980 * t908;
t831 = t1016 * t983 - t980 * t907;
t830 = t1018 * t983 - t980 * t911;
t829 = t1019 * t983 - t980 * t909;
t823 = t1030 * t983 - t980 * t912;
t822 = t1031 * t983 - t980 * t910;
t821 = t1030 * t980 + t983 * t912;
t820 = t1031 * t980 + t983 * t910;
t807 = t1032 * t983 - t980 * t901;
t806 = pkin(2) * t945 + pkin(8) * t914 - t1108;
t805 = -pkin(2) * t943 + pkin(8) * t916 + t1109;
t803 = t809 * t983;
t799 = t870 * t991 + t871 * t987;
t793 = t800 * t992 + t970;
t791 = -pkin(1) * t932 + t1059 * t983 + t879 * t980;
t790 = pkin(1) * t931 + t1060 * t983 + t880 * t980;
t779 = -t808 * t983 + t980 * t923;
t778 = -t808 * t980 - t983 * t923;
t774 = t845 * t991 + t846 * t987;
t773 = t843 * t991 + t844 * t987;
t772 = -t823 * t979 + t869 * t982;
t771 = -t822 * t979 + t868 * t982;
t770 = t823 * t982 + t869 * t979;
t769 = t822 * t982 + t868 * t979;
t764 = t838 * t991 + t841 * t987;
t763 = t837 * t991 + t840 * t987;
t743 = t776 * t992 - t1074;
t742 = t775 * t992 + t1074;
t729 = pkin(2) * t949 + pkin(8) * t946 + t752;
t727 = t767 * t992 - t858 * t988;
t726 = t766 * t992 + t856 * t988;
t720 = -pkin(2) * t862 + pkin(8) * t752;
t719 = t1026 * t983 - t980 * t799;
t717 = -pkin(1) * t778 + t1124 * t983;
t716 = -t779 * t979 + t809 * t982;
t715 = t779 * t982 + t809 * t979;
t706 = t786 * t991 + t788 * t987;
t705 = t992 * t751 + (-t895 * t980 - t896 * t983) * pkin(7);
t701 = (-t778 * t980 - t779 * t983) * pkin(7);
t700 = t708 * t992 - t894 * t988;
t682 = t1020 * t983 - t980 * t774;
t681 = t1021 * t983 - t980 * t773;
t665 = t1033 * t983 - t980 * t765;
t664 = t1034 * t983 - t980 * t764;
t663 = t1035 * t983 - t980 * t763;
t662 = t1033 * t980 + t983 * t765;
t656 = -t796 * t988 + t826 * t992 + (-t821 * t980 - t823 * t983) * pkin(7);
t655 = -t795 * t988 + t825 * t992 + (-t820 * t980 - t822 * t983) * pkin(7);
t647 = t1036 * t983 + t751 * t980;
t646 = t1036 * t980 - t751 * t983;
t641 = t1037 * t983 - t980 * t736;
t640 = t1037 * t980 + t983 * t736;
t638 = t722 * t991 + t723 * t987;
t637 = t639 * t992 + t974 * t988;
t636 = -pkin(1) * t821 + t1001 * t983 - t805 * t980;
t635 = -pkin(1) * t820 + t1002 * t983 - t806 * t980;
t634 = -pkin(1) * t895 + t1061 * t983 - t980 * t729;
t624 = t1039 * t983 - t980 * t706;
t622 = t1038 * t983 - t980 * t707;
t621 = t1038 * t980 + t983 * t707;
t620 = -t665 * t979 + t728 * t982;
t619 = t665 * t982 + t728 * t979;
t614 = -pkin(2) * t857 + pkin(8) * t768 + t721 * t991 + t754 * t987;
t609 = t686 * t991 + t688 * t987;
t608 = t685 * t991 + t687 * t987;
t605 = -t647 * t979 + t718 * t982;
t604 = t647 * t982 + t718 * t979;
t598 = -pkin(2) * t854 + pkin(8) * t737 + t711 * t991 + t735 * t987;
t597 = -t641 * t979 + t710 * t982;
t596 = t641 * t982 + t710 * t979;
t577 = t659 * t991 + t661 * t987;
t576 = t658 * t991 + t660 * t987;
t571 = t611 * t992 - t745 * t988;
t570 = t610 * t992 - t749 * t988;
t568 = t579 * t992 + t1076;
t567 = t578 * t992 - t1076;
t559 = -t622 * t979 + t689 * t982;
t558 = t622 * t982 + t689 * t979;
t557 = t1040 * t983 - t980 * t638;
t552 = -(pkin(2) * t988 - pkin(8) * t992) * t751 + (-t646 * t980 - t647 * t983) * pkin(7);
t550 = -pkin(1) * t646 - t720 * t980 + t983 * t998;
t540 = t594 * t991 + t595 * t987;
t528 = t583 * t991 + t585 * t987;
t527 = t1041 * t983 - t980 * t609;
t526 = t1042 * t983 - t980 * t608;
t523 = t1043 * t983 - t980 * t606;
t522 = t1043 * t980 + t983 * t606;
t520 = t530 * t992 - t815 * t988;
t516 = t1022 * t983 - t980 * t577;
t515 = t1023 * t983 - t980 * t576;
t513 = t541 * t992 - t724 * t988;
t510 = -pkin(2) * t853 + pkin(8) * t709 + t589 * t991 + t599 * t987;
t507 = t564 * t991 + t566 * t987;
t506 = t563 * t991 + t565 * t987;
t505 = t625 * t992 - t633 * t988 + (-t662 * t980 - t665 * t983) * pkin(7);
t503 = t1044 * t983 - t980 * t572;
t502 = t1044 * t980 + t983 * t572;
t497 = t509 * t992 - t692 * t988;
t496 = t508 * t992 - t690 * t988;
t495 = t613 * t992 - t629 * t988 + (-t640 * t980 - t641 * t983) * pkin(7);
t493 = -pkin(1) * t662 + t1003 * t983 - t614 * t980;
t491 = t1045 * t983 - t980 * t554;
t490 = t1045 * t980 + t983 * t554;
t489 = -t523 * t979 + t569 * t982;
t488 = t523 * t982 + t569 * t979;
t487 = -pkin(2) * t816 + pkin(8) * t555 - qJ(4) * t1119 + t612 * t991;
t485 = -pkin(1) * t640 + t1004 * t983 - t598 * t980;
t482 = t545 * t991 + t547 * t987;
t481 = t544 * t991 + t546 * t987;
t480 = -t503 * t979 + t556 * t982;
t479 = t503 * t982 + t556 * t979;
t469 = t524 * t991 + t525 * t987;
t468 = t1048 * t983 - t980 * t528;
t467 = t484 * t992 - t673 * t988;
t466 = t483 * t992 - t672 * t988;
t465 = t1047 * t983 - t980 * t529;
t464 = t1047 * t980 + t983 * t529;
t463 = t1046 * t983 - t980 * t540;
t460 = t512 * t992 - t657 * t988 + (-t621 * t980 - t622 * t983) * pkin(7);
t456 = pkin(2) * t1145 + pkin(8) * t607 + t542 * t991 + t551 * t987;
t454 = -t491 * t979 + t553 * t982;
t453 = t491 * t982 + t553 * t979;
t452 = t470 * t992 - t616 * t988;
t447 = t1049 * t983 - t980 * t507;
t446 = t1050 * t983 - t980 * t506;
t443 = -pkin(2) * t744 + pkin(8) * t573 + t521 * t991 + t543 * t987;
t439 = -pkin(1) * t621 + t1005 * t983 - t510 * t980;
t437 = -t465 * t979 + t517 * t982;
t436 = t465 * t982 + t517 * t979;
t433 = t1051 * t983 - t980 * t482;
t432 = t1052 * t983 - t980 * t481;
t427 = t1053 * t983 - t980 * t477;
t426 = t1053 * t980 + t983 * t477;
t424 = t1054 * t983 - t980 * t473;
t423 = t1054 * t980 + t983 * t473;
t422 = t1055 * t983 - t980 * t469;
t419 = t1056 * t983 - t980 * t461;
t418 = t1056 * t980 + t983 * t461;
t415 = t458 * t992 - t499 * t988 + (-t522 * t980 - t523 * t983) * pkin(7);
t414 = t492 * t992 - t514 * t988 + (-t490 * t980 - t491 * t983) * pkin(7);
t412 = -t427 * t979 + t459 * t982;
t411 = t427 * t982 + t459 * t979;
t408 = t449 * t992 - t494 * t988 + (-t502 * t980 - t503 * t983) * pkin(7);
t407 = -t424 * t979 + t457 * t982;
t406 = t424 * t982 + t457 * t979;
t404 = -pkin(1) * t490 + t1006 * t983 - t487 * t980;
t399 = -pkin(2) * t777 + pkin(8) * t531 + t438 * t991 + t440 * t987;
t398 = -t419 * t979 + t448 * t982;
t397 = t419 * t982 + t448 * t979;
t396 = -pkin(1) * t522 + t1007 * t983 - t456 * t980;
t395 = t1057 * t983 - t980 * t430;
t394 = t1057 * t980 + t983 * t430;
t390 = -pkin(1) * t502 + t1008 * t983 - t443 * t980;
t386 = -t395 * t979 + t428 * t982;
t385 = t395 * t982 + t428 * t979;
t383 = -pkin(2) * t734 + pkin(8) * t431 + t425 * t991 + t429 * t987;
t382 = t400 * t992 - t486 * t988 + (-t464 * t980 - t465 * t983) * pkin(7);
t379 = -pkin(2) * t652 + pkin(8) * t478 + t403 * t991 + t409 * t987;
t378 = -pkin(2) * t648 + pkin(8) * t474 + t402 * t991 + t405 * t987;
t376 = -pkin(2) * t615 + pkin(8) * t462 + t391 * t991 + t393 * t987;
t375 = -pkin(1) * t464 + t1009 * t983 - t399 * t980;
t371 = t1058 * t983 - t980 * t388;
t370 = t1058 * t980 + t983 * t388;
t369 = t381 * t992 - t421 * t988 + (-t426 * t980 - t427 * t983) * pkin(7);
t368 = t380 * t992 - t420 * t988 + (-t423 * t980 - t424 * t983) * pkin(7);
t367 = -t371 * t979 + t387 * t982;
t366 = t371 * t982 + t387 * t979;
t365 = t377 * t992 - t413 * t988 + (-t418 * t980 - t419 * t983) * pkin(7);
t364 = t384 * t992 - t401 * t988 + (-t394 * t980 - t395 * t983) * pkin(7);
t363 = -pkin(1) * t426 + t1011 * t983 - t379 * t980;
t362 = -pkin(1) * t423 + t1012 * t983 - t378 * t980;
t361 = -pkin(1) * t394 + t1010 * t983 - t383 * t980;
t360 = -pkin(1) * t418 + t1013 * t983 - t376 * t980;
t358 = -pkin(2) * t475 + pkin(8) * t389 + t372 * t991 + t374 * t987;
t357 = t359 * t992 - t373 * t988 + (-t370 * t980 - t371 * t983) * pkin(7);
t356 = -pkin(1) * t370 + t1014 * t983 - t358 * t980;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t906, 0, 0, 0, 0, 0, 0, t893, t892, 0, t716, 0, 0, 0, 0, 0, 0, t771, t772, t834, t605, 0, 0, 0, 0, 0, 0, t597, t620, t559, t454, 0, 0, 0, 0, 0, 0, t480, t489, t437, t386, 0, 0, 0, 0, 0, 0, t407, t412, t398, t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t905, 0, 0, 0, 0, 0, 0, t891, -t1029, 0, t715, 0, 0, 0, 0, 0, 0, t769, t770, t833, t604, 0, 0, 0, 0, 0, 0, t596, t619, t558, t453, 0, 0, 0, 0, 0, 0, t479, t488, t436, t385, 0, 0, 0, 0, 0, 0, t406, t411, t397, t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1095, 0, 0, 0, 0, 0, 0, t932, -t931, 0, t778, 0, 0, 0, 0, 0, 0, t820, t821, t895, t646, 0, 0, 0, 0, 0, 0, t640, t662, t621, t490, 0, 0, 0, 0, 0, 0, t502, t522, t464, t394, 0, 0, 0, 0, 0, 0, t423, t426, t418, t370; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1135, -t1134, -t905, -qJ(1) * t905, 0, 0, -t892, 0, t893, t979 * t1086, -qJ(1) * t891 - t791 * t979 + t835 * t982, qJ(1) * t1029 - t790 * t979 + t836 * t982, -t803 * t979 + t808 * t982, -qJ(1) * t715 + t701 * t982 - t717 * t979, -t832 * t979 + t884 * t982, -t807 * t979 + t861 * t982, -t830 * t979 + t882 * t982, -t831 * t979 + t883 * t982, -t829 * t979 + t881 * t982, -t904 * t979 + t921 * t982, -qJ(1) * t769 - t635 * t979 + t655 * t982, -qJ(1) * t770 - t636 * t979 + t656 * t982, -qJ(1) * t833 - t634 * t979 + t705 * t982, -qJ(1) * t604 - t550 * t979 + t552 * t982, -t682 * t979 + t743 * t982, -t624 * t979 + t700 * t982, -t664 * t979 + t727 * t982, -t681 * t979 + t742 * t982, -t663 * t979 + t726 * t982, -t719 * t979 + t793 * t982, -qJ(1) * t596 - t485 * t979 + t495 * t982, -qJ(1) * t619 - t493 * t979 + t505 * t982, -qJ(1) * t558 - t439 * t979 + t460 * t982, -qJ(1) * t453 - t404 * t979 + t414 * t982, -t516 * t979 + t568 * t982, -t468 * t979 + t520 * t982, -t526 * t979 + t570 * t982, -t515 * t979 + t567 * t982, -t527 * t979 + t571 * t982, -t557 * t979 + t637 * t982, -qJ(1) * t479 - t390 * t979 + t408 * t982, -qJ(1) * t488 - t396 * t979 + t415 * t982, -qJ(1) * t436 - t375 * t979 + t382 * t982, -qJ(1) * t385 - t361 * t979 + t364 * t982, -t447 * t979 + t497 * t982, -t422 * t979 + t452 * t982, -t432 * t979 + t466 * t982, -t446 * t979 + t496 * t982, -t433 * t979 + t467 * t982, -t463 * t979 + t513 * t982, -qJ(1) * t406 - t362 * t979 + t368 * t982, -qJ(1) * t411 - t363 * t979 + t369 * t982, -qJ(1) * t397 - t360 * t979 + t365 * t982, -qJ(1) * t366 - t356 * t979 + t357 * t982; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1134, -t1135, t906, qJ(1) * t906, 0, 0, t1029, 0, t891, -t982 * t1086, qJ(1) * t893 + t791 * t982 + t835 * t979, qJ(1) * t892 + t790 * t982 + t836 * t979, t803 * t982 + t808 * t979, qJ(1) * t716 + t701 * t979 + t717 * t982, t832 * t982 + t884 * t979, t807 * t982 + t861 * t979, t830 * t982 + t882 * t979, t831 * t982 + t883 * t979, t829 * t982 + t881 * t979, t904 * t982 + t921 * t979, qJ(1) * t771 + t635 * t982 + t655 * t979, qJ(1) * t772 + t636 * t982 + t656 * t979, qJ(1) * t834 + t634 * t982 + t705 * t979, qJ(1) * t605 + t550 * t982 + t552 * t979, t682 * t982 + t743 * t979, t624 * t982 + t700 * t979, t664 * t982 + t727 * t979, t681 * t982 + t742 * t979, t663 * t982 + t726 * t979, t719 * t982 + t793 * t979, qJ(1) * t597 + t485 * t982 + t495 * t979, qJ(1) * t620 + t493 * t982 + t505 * t979, qJ(1) * t559 + t439 * t982 + t460 * t979, qJ(1) * t454 + t404 * t982 + t414 * t979, t516 * t982 + t568 * t979, t468 * t982 + t520 * t979, t526 * t982 + t570 * t979, t515 * t982 + t567 * t979, t527 * t982 + t571 * t979, t557 * t982 + t637 * t979, qJ(1) * t480 + t390 * t982 + t408 * t979, qJ(1) * t489 + t396 * t982 + t415 * t979, qJ(1) * t437 + t375 * t982 + t382 * t979, qJ(1) * t386 + t361 * t982 + t364 * t979, t447 * t982 + t497 * t979, t422 * t982 + t452 * t979, t432 * t982 + t466 * t979, t446 * t982 + t496 * t979, t433 * t982 + t467 * t979, t463 * t982 + t513 * t979, qJ(1) * t407 + t362 * t982 + t368 * t979, qJ(1) * t412 + t363 * t982 + t369 * t979, qJ(1) * t398 + t360 * t982 + t365 * t979, qJ(1) * t367 + t356 * t982 + t357 * t979; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1069, t951, 0, 0, 0, 0, t931, 0, t932, t983 * qJDD(2), pkin(1) * t934 + t1059 * t980 - t879 * t983, -pkin(1) * t933 + t1060 * t980 - t880 * t983, t809 * t980, pkin(1) * t779 + t1124 * t980, t1015 * t980 + t983 * t908, t1032 * t980 + t983 * t901, t1018 * t980 + t983 * t911, t1016 * t980 + t983 * t907, t1019 * t980 + t983 * t909, t1025 * t980, pkin(1) * t822 + t1002 * t980 + t806 * t983, pkin(1) * t823 + t1001 * t980 + t805 * t983, pkin(1) * t896 + t1061 * t980 + t983 * t729, pkin(1) * t647 + t720 * t983 + t980 * t998, t1020 * t980 + t983 * t774, t1039 * t980 + t983 * t706, t1034 * t980 + t983 * t764, t1021 * t980 + t983 * t773, t1035 * t980 + t983 * t763, t1026 * t980 + t983 * t799, pkin(1) * t641 + t1004 * t980 + t598 * t983, pkin(1) * t665 + t1003 * t980 + t614 * t983, pkin(1) * t622 + t1005 * t980 + t510 * t983, pkin(1) * t491 + t1006 * t980 + t487 * t983, t1022 * t980 + t983 * t577, t1048 * t980 + t983 * t528, t1042 * t980 + t983 * t608, t1023 * t980 + t983 * t576, t1041 * t980 + t983 * t609, t1040 * t980 + t983 * t638, pkin(1) * t503 + t1008 * t980 + t443 * t983, pkin(1) * t523 + t1007 * t980 + t456 * t983, pkin(1) * t465 + t1009 * t980 + t399 * t983, pkin(1) * t395 + t1010 * t980 + t383 * t983, t1049 * t980 + t983 * t507, t1055 * t980 + t983 * t469, t1052 * t980 + t983 * t481, t1050 * t980 + t983 * t506, t1051 * t980 + t983 * t482, t1046 * t980 + t983 * t540, pkin(1) * t424 + t1012 * t980 + t378 * t983, pkin(1) * t427 + t1011 * t980 + t379 * t983, pkin(1) * t419 + t1013 * t980 + t376 * t983, pkin(1) * t371 + t1014 * t980 + t358 * t983;];
tauB_reg  = t1;
