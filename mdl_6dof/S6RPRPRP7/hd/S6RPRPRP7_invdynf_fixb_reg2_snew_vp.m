% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 17:59
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPRP7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP7_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP7_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRP7_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRP7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP7_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 17:59:15
% EndTime: 2019-05-05 17:59:18
% DurationCPUTime: 3.57s
% Computational Cost: add. (14252->248), mult. (31658->283), div. (0->0), fcn. (21551->8), ass. (0->164)
t1575 = sin(pkin(9));
t1576 = cos(pkin(9));
t1579 = sin(qJ(3));
t1582 = cos(qJ(3));
t1546 = (t1575 * t1582 + t1576 * t1579) * qJD(1);
t1544 = qJD(5) + t1546;
t1625 = qJD(5) + t1544;
t1615 = qJD(1) * t1582;
t1602 = qJD(3) * t1615;
t1605 = t1579 * qJDD(1);
t1553 = -t1602 - t1605;
t1572 = t1579 ^ 2;
t1585 = qJD(1) ^ 2;
t1580 = sin(qJ(1));
t1583 = cos(qJ(1));
t1563 = -t1583 * g(1) - t1580 * g(2);
t1590 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1563;
t1593 = qJD(3) * pkin(3) - qJ(4) * t1615;
t1617 = pkin(7) + pkin(1);
t1515 = t1553 * pkin(3) + t1585 * (qJ(4) * t1572 + t1617) - t1593 * t1615 - qJDD(4) + t1590;
t1616 = qJD(1) * t1579;
t1548 = -t1575 * t1616 + t1576 * t1615;
t1578 = sin(qJ(5));
t1581 = cos(qJ(5));
t1531 = -t1581 * qJD(3) + t1548 * t1578;
t1624 = t1531 ^ 2;
t1533 = qJD(3) * t1578 + t1548 * t1581;
t1623 = t1533 ^ 2;
t1622 = t1544 ^ 2;
t1621 = t1546 ^ 2;
t1620 = t1548 ^ 2;
t1619 = 2 * qJD(4);
t1618 = -2 * qJD(6);
t1614 = qJD(3) * t1546;
t1613 = qJD(3) * t1548;
t1612 = t1531 * t1533;
t1611 = t1546 * t1548;
t1610 = t1572 * t1585;
t1609 = t1582 * t1585;
t1608 = qJD(5) - t1544;
t1562 = t1580 * g(1) - t1583 * g(2);
t1591 = -t1585 * qJ(2) + qJDD(2) - t1562;
t1589 = -qJDD(1) * t1617 + t1591;
t1529 = -t1582 * g(3) + t1579 * t1589;
t1514 = -pkin(3) * t1610 + t1553 * qJ(4) - qJD(3) * t1593 + t1529;
t1603 = qJD(3) * t1616;
t1604 = t1582 * qJDD(1);
t1554 = -t1603 + t1604;
t1587 = t1582 * t1589;
t1586 = t1587 - t1554 * qJ(4) + qJDD(3) * pkin(3) + (-qJ(4) * qJD(1) * qJD(3) - pkin(3) * t1609 + g(3)) * t1579;
t1490 = t1576 * t1514 - t1546 * t1619 + t1575 * t1586;
t1523 = pkin(4) * t1546 - pkin(8) * t1548;
t1584 = qJD(3) ^ 2;
t1479 = -pkin(4) * t1584 + qJDD(3) * pkin(8) - t1523 * t1546 + t1490;
t1607 = -t1576 * t1553 + t1575 * t1554;
t1517 = t1607 + t1613;
t1527 = t1553 * t1575 + t1554 * t1576;
t1599 = -t1527 + t1614;
t1484 = pkin(4) * t1517 + pkin(8) * t1599 - t1515;
t1464 = t1581 * t1479 + t1578 * t1484;
t1573 = t1582 ^ 2;
t1606 = t1572 + t1573;
t1601 = t1579 * t1609;
t1600 = -qJDD(5) - t1607;
t1463 = -t1578 * t1479 + t1581 * t1484;
t1598 = t1575 * t1514 - t1576 * t1586;
t1597 = -t1581 * qJDD(3) + t1578 * t1527;
t1594 = -t1578 * qJDD(3) - t1581 * t1527;
t1499 = -t1600 - t1612;
t1592 = -qJD(5) * t1533 - t1597;
t1496 = t1531 * t1608 + t1594;
t1478 = -qJDD(3) * pkin(4) - t1584 * pkin(8) + (t1619 + t1523) * t1548 + t1598;
t1566 = -t1573 * t1585 - t1584;
t1565 = -t1584 - t1610;
t1561 = -qJDD(3) - t1601;
t1560 = qJDD(3) - t1601;
t1559 = t1606 * t1585;
t1558 = qJDD(1) * t1580 + t1583 * t1585;
t1557 = qJDD(1) * t1583 - t1580 * t1585;
t1556 = t1606 * qJDD(1);
t1555 = -0.2e1 * t1603 + t1604;
t1552 = 0.2e1 * t1602 + t1605;
t1545 = qJDD(1) * pkin(1) - t1591;
t1541 = t1585 * pkin(1) + t1590;
t1540 = -t1584 - t1620;
t1539 = t1585 * t1617 + t1590;
t1537 = t1561 * t1582 - t1566 * t1579;
t1536 = -t1560 * t1579 + t1565 * t1582;
t1535 = t1561 * t1579 + t1566 * t1582;
t1534 = t1560 * t1582 + t1565 * t1579;
t1528 = t1579 * g(3) + t1587;
t1526 = -qJDD(3) - t1611;
t1525 = qJDD(3) - t1611;
t1524 = -t1584 - t1621;
t1521 = pkin(5) * t1544 - qJ(6) * t1533;
t1520 = -t1527 - t1614;
t1518 = -t1607 + t1613;
t1516 = -t1620 - t1621;
t1513 = -t1622 - t1623;
t1512 = t1526 * t1576 - t1540 * t1575;
t1511 = t1526 * t1575 + t1540 * t1576;
t1509 = -t1528 * t1579 + t1529 * t1582;
t1508 = t1528 * t1582 + t1529 * t1579;
t1504 = -t1622 - t1624;
t1503 = -t1623 - t1624;
t1502 = t1524 * t1576 - t1525 * t1575;
t1501 = t1524 * t1575 + t1525 * t1576;
t1500 = t1600 - t1612;
t1498 = t1518 * t1576 - t1520 * t1575;
t1497 = t1518 * t1575 + t1520 * t1576;
t1495 = -t1531 * t1625 - t1594;
t1494 = -t1533 * t1608 - t1597;
t1493 = t1533 * t1625 + t1597;
t1492 = -t1511 * t1579 + t1512 * t1582;
t1491 = t1511 * t1582 + t1512 * t1579;
t1489 = -0.2e1 * qJD(4) * t1548 - t1598;
t1488 = t1500 * t1581 - t1513 * t1578;
t1487 = t1500 * t1578 + t1513 * t1581;
t1486 = -t1499 * t1578 + t1504 * t1581;
t1485 = t1499 * t1581 + t1504 * t1578;
t1481 = -t1501 * t1579 + t1502 * t1582;
t1480 = t1501 * t1582 + t1502 * t1579;
t1476 = -t1497 * t1579 + t1498 * t1582;
t1475 = t1497 * t1582 + t1498 * t1579;
t1474 = t1494 * t1581 - t1496 * t1578;
t1473 = t1494 * t1578 + t1496 * t1581;
t1472 = t1488 * t1576 + t1495 * t1575;
t1471 = t1488 * t1575 - t1495 * t1576;
t1470 = t1486 * t1576 + t1493 * t1575;
t1469 = t1486 * t1575 - t1493 * t1576;
t1468 = -t1489 * t1575 + t1490 * t1576;
t1467 = t1489 * t1576 + t1490 * t1575;
t1466 = t1474 * t1576 + t1503 * t1575;
t1465 = t1474 * t1575 - t1503 * t1576;
t1462 = -pkin(5) * t1592 - qJ(6) * t1624 + t1533 * t1521 + qJDD(6) + t1478;
t1461 = -t1471 * t1579 + t1472 * t1582;
t1460 = t1471 * t1582 + t1472 * t1579;
t1459 = -t1544 * t1521 + t1592 * qJ(6) + (-pkin(5) * t1531 + t1618) * t1531 + t1464;
t1458 = -t1469 * t1579 + t1470 * t1582;
t1457 = t1469 * t1582 + t1470 * t1579;
t1456 = pkin(5) * t1499 + qJ(6) * t1496 + t1533 * t1618 + t1463;
t1455 = -t1467 * t1579 + t1468 * t1582;
t1454 = t1467 * t1582 + t1468 * t1579;
t1453 = -t1465 * t1579 + t1466 * t1582;
t1452 = t1465 * t1582 + t1466 * t1579;
t1451 = t1460 * t1580 + t1487 * t1583;
t1450 = -t1460 * t1583 + t1487 * t1580;
t1449 = t1457 * t1580 + t1485 * t1583;
t1448 = -t1457 * t1583 + t1485 * t1580;
t1447 = -t1463 * t1578 + t1464 * t1581;
t1446 = t1463 * t1581 + t1464 * t1578;
t1445 = t1452 * t1580 + t1473 * t1583;
t1444 = -t1452 * t1583 + t1473 * t1580;
t1443 = t1447 * t1576 + t1478 * t1575;
t1442 = t1447 * t1575 - t1478 * t1576;
t1441 = -t1456 * t1578 + t1459 * t1581;
t1440 = t1456 * t1581 + t1459 * t1578;
t1439 = t1441 * t1576 + t1462 * t1575;
t1438 = t1441 * t1575 - t1462 * t1576;
t1437 = -t1442 * t1579 + t1443 * t1582;
t1436 = t1442 * t1582 + t1443 * t1579;
t1435 = -t1438 * t1579 + t1439 * t1582;
t1434 = t1438 * t1582 + t1439 * t1579;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1558, -t1557, 0, -t1562 * t1580 + t1563 * t1583, 0, 0, 0, 0, 0, 0, 0, t1558, t1557, -t1541 * t1583 - t1545 * t1580, 0, 0, 0, 0, 0, 0, t1534 * t1580 + t1552 * t1583, t1535 * t1580 + t1555 * t1583, -t1556 * t1580 - t1559 * t1583, t1508 * t1580 - t1539 * t1583, 0, 0, 0, 0, 0, 0, t1480 * t1580 + t1517 * t1583, t1491 * t1580 - t1583 * t1599, t1475 * t1580 + t1516 * t1583, t1454 * t1580 - t1515 * t1583, 0, 0, 0, 0, 0, 0, t1449, t1451, t1445, t1436 * t1580 + t1446 * t1583, 0, 0, 0, 0, 0, 0, t1449, t1451, t1445, t1434 * t1580 + t1440 * t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1557, -t1558, 0, t1562 * t1583 + t1563 * t1580, 0, 0, 0, 0, 0, 0, 0, -t1557, t1558, -t1541 * t1580 + t1545 * t1583, 0, 0, 0, 0, 0, 0, -t1534 * t1583 + t1552 * t1580, -t1535 * t1583 + t1555 * t1580, t1556 * t1583 - t1559 * t1580, -t1508 * t1583 - t1539 * t1580, 0, 0, 0, 0, 0, 0, -t1480 * t1583 + t1517 * t1580, -t1491 * t1583 - t1580 * t1599, -t1475 * t1583 + t1516 * t1580, -t1454 * t1583 - t1515 * t1580, 0, 0, 0, 0, 0, 0, t1448, t1450, t1444, -t1436 * t1583 + t1446 * t1580, 0, 0, 0, 0, 0, 0, t1448, t1450, t1444, -t1434 * t1583 + t1440 * t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1536, t1537, 0, t1509, 0, 0, 0, 0, 0, 0, t1481, t1492, t1476, t1455, 0, 0, 0, 0, 0, 0, t1458, t1461, t1453, t1437, 0, 0, 0, 0, 0, 0, t1458, t1461, t1453, t1435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1585, -qJDD(1), 0, t1563, 0, 0, 0, 0, 0, 0, 0, t1585, qJDD(1), -t1541, 0, 0, 0, 0, 0, 0, t1552, t1555, -t1559, -t1539, 0, 0, 0, 0, 0, 0, t1517, -t1599, t1516, -t1515, 0, 0, 0, 0, 0, 0, t1485, t1487, t1473, t1446, 0, 0, 0, 0, 0, 0, t1485, t1487, t1473, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1585, 0, t1562, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1585, t1545, 0, 0, 0, 0, 0, 0, -t1534, -t1535, t1556, -t1508, 0, 0, 0, 0, 0, 0, -t1480, -t1491, -t1475, -t1454, 0, 0, 0, 0, 0, 0, -t1457, -t1460, -t1452, -t1436, 0, 0, 0, 0, 0, 0, -t1457, -t1460, -t1452, -t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1536, t1537, 0, t1509, 0, 0, 0, 0, 0, 0, t1481, t1492, t1476, t1455, 0, 0, 0, 0, 0, 0, t1458, t1461, t1453, t1437, 0, 0, 0, 0, 0, 0, t1458, t1461, t1453, t1435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1536, t1537, 0, t1509, 0, 0, 0, 0, 0, 0, t1481, t1492, t1476, t1455, 0, 0, 0, 0, 0, 0, t1458, t1461, t1453, t1437, 0, 0, 0, 0, 0, 0, t1458, t1461, t1453, t1435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1585, -qJDD(1), t1541, 0, 0, 0, 0, 0, 0, -t1552, -t1555, t1559, t1539, 0, 0, 0, 0, 0, 0, -t1517, t1599, -t1516, t1515, 0, 0, 0, 0, 0, 0, -t1485, -t1487, -t1473, -t1446, 0, 0, 0, 0, 0, 0, -t1485, -t1487, -t1473, -t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1585, -t1545, 0, 0, 0, 0, 0, 0, t1534, t1535, -t1556, t1508, 0, 0, 0, 0, 0, 0, t1480, t1491, t1475, t1454, 0, 0, 0, 0, 0, 0, t1457, t1460, t1452, t1436, 0, 0, 0, 0, 0, 0, t1457, t1460, t1452, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1565, t1561, -t1605, t1529, 0, 0, 0, 0, 0, 0, t1502, t1512, t1498, t1468, 0, 0, 0, 0, 0, 0, t1470, t1472, t1466, t1443, 0, 0, 0, 0, 0, 0, t1470, t1472, t1466, t1439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1560, t1566, -t1604, t1528, 0, 0, 0, 0, 0, 0, t1501, t1511, t1497, t1467, 0, 0, 0, 0, 0, 0, t1469, t1471, t1465, t1442, 0, 0, 0, 0, 0, 0, t1469, t1471, t1465, t1438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1552, t1555, -t1559, -t1539, 0, 0, 0, 0, 0, 0, t1517, -t1599, t1516, -t1515, 0, 0, 0, 0, 0, 0, t1485, t1487, t1473, t1446, 0, 0, 0, 0, 0, 0, t1485, t1487, t1473, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1526, t1518, t1490, 0, 0, 0, 0, 0, 0, t1486, t1488, t1474, t1447, 0, 0, 0, 0, 0, 0, t1486, t1488, t1474, t1441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1525, t1540, t1520, t1489, 0, 0, 0, 0, 0, 0, -t1493, -t1495, -t1503, -t1478, 0, 0, 0, 0, 0, 0, -t1493, -t1495, -t1503, -t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1517, -t1599, t1516, -t1515, 0, 0, 0, 0, 0, 0, t1485, t1487, t1473, t1446, 0, 0, 0, 0, 0, 0, t1485, t1487, t1473, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1504, t1500, t1494, t1464, 0, 0, 0, 0, 0, 0, t1504, t1500, t1494, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1499, t1513, t1496, t1463, 0, 0, 0, 0, 0, 0, t1499, t1513, t1496, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1493, t1495, t1503, t1478, 0, 0, 0, 0, 0, 0, t1493, t1495, t1503, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1504, t1500, t1494, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1499, t1513, t1496, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1493, t1495, t1503, t1462;];
f_new_reg  = t1;
