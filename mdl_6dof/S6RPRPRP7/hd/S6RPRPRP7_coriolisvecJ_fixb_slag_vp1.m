% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RPRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RPRPRP7_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP7_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP7_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP7_coriolisvecJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRPRP7_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRPRP7_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRPRP7_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:21:12
% EndTime: 2019-03-09 03:22:37
% DurationCPUTime: 77.17s
% Computational Cost: add. (28366->1149), mult. (42194->1442), div. (0->0), fcn. (38529->8), ass. (0->558)
t1083 = -Icges(6,4) - Icges(7,4);
t1082 = Icges(6,1) + Icges(7,1);
t1016 = Icges(6,5) + Icges(7,5);
t1042 = Icges(6,2) + Icges(7,2);
t1015 = Icges(6,6) + Icges(7,6);
t502 = cos(qJ(5));
t1081 = t1083 * t502;
t499 = sin(qJ(5));
t1080 = t1083 * t499;
t1079 = Icges(4,3) + Icges(5,3);
t1078 = Icges(6,3) + Icges(7,3);
t1077 = -t1015 * t499 + t1016 * t502;
t494 = qJ(3) + pkin(9);
t475 = sin(t494);
t476 = cos(t494);
t500 = sin(qJ(3));
t503 = cos(qJ(3));
t1074 = Icges(4,5) * t500 + Icges(5,5) * t475 + Icges(4,6) * t503 + Icges(5,6) * t476;
t1076 = -t1042 * t499 - t1081;
t1075 = t1082 * t502 + t1080;
t504 = cos(qJ(1));
t799 = t502 * t504;
t501 = sin(qJ(1));
t802 = t501 * t499;
t369 = -t475 * t802 + t799;
t337 = Icges(7,4) * t369;
t801 = t501 * t502;
t805 = t499 * t504;
t370 = t475 * t801 + t805;
t807 = t476 * t501;
t189 = Icges(7,1) * t370 - Icges(7,5) * t807 + t337;
t340 = Icges(6,4) * t369;
t192 = Icges(6,1) * t370 - Icges(6,5) * t807 + t340;
t1048 = t189 + t192;
t833 = Icges(7,4) * t370;
t183 = Icges(7,2) * t369 - Icges(7,6) * t807 + t833;
t836 = Icges(6,4) * t370;
t186 = Icges(6,2) * t369 - Icges(6,6) * t807 + t836;
t1049 = t183 + t186;
t1033 = t1048 * t370 + t1049 * t369;
t371 = t475 * t805 + t801;
t372 = t475 * t799 - t802;
t338 = Icges(7,4) * t371;
t806 = t476 * t504;
t190 = Icges(7,1) * t372 - Icges(7,5) * t806 - t338;
t341 = Icges(6,4) * t371;
t193 = Icges(6,1) * t372 - Icges(6,5) * t806 - t341;
t963 = -t193 - t190;
t339 = Icges(7,4) * t372;
t185 = Icges(7,2) * t371 + Icges(7,6) * t806 - t339;
t342 = Icges(6,4) * t372;
t188 = Icges(6,2) * t371 + Icges(6,6) * t806 - t342;
t964 = t188 + t185;
t1034 = -t371 * t964 + t372 * t963;
t177 = Icges(7,5) * t370 + Icges(7,6) * t369 - Icges(7,3) * t807;
t180 = Icges(6,5) * t370 + Icges(6,6) * t369 - Icges(6,3) * t807;
t1050 = t177 + t180;
t179 = -Icges(7,5) * t372 + Icges(7,6) * t371 + Icges(7,3) * t806;
t182 = -Icges(6,5) * t372 + Icges(6,6) * t371 + Icges(6,3) * t806;
t965 = t179 + t182;
t1073 = t1034 + (-t1050 * t501 - t504 * t965) * t476 + t1033;
t730 = qJD(5) * t501;
t733 = qJD(3) * t504;
t389 = -t476 * t730 + t733;
t444 = qJD(5) * t475 + qJD(1);
t1024 = t1016 * t475 + t1075 * t476;
t1025 = t1015 * t475 + t1076 * t476;
t1037 = t1077 * t476 + t1078 * t475;
t922 = -t1024 * t372 + t1025 * t371 + t1037 * t806;
t974 = -t1048 * t372 + t1049 * t371 + t1050 * t806;
t1072 = -t389 * t974 - t922 * t444;
t1070 = -t1077 * t475 + t1078 * t476;
t956 = t1015 * t476 - t1076 * t475;
t955 = t1016 * t476 - t1075 * t475;
t1060 = t1074 * t501 + t1079 * t504;
t1069 = (-t1015 * t502 - t1016 * t499) * t476;
t1068 = (-t1042 * t502 + t1080) * t476;
t1067 = (-t1082 * t499 + t1081) * t476;
t1066 = Icges(4,5) * t503 + Icges(5,5) * t476 - Icges(4,6) * t500 - Icges(5,6) * t475;
t838 = Icges(5,4) * t475;
t607 = Icges(5,2) * t476 + t838;
t299 = -Icges(5,6) * t501 + t504 * t607;
t837 = Icges(5,4) * t476;
t611 = Icges(5,1) * t475 + t837;
t301 = -Icges(5,5) * t501 + t504 * t611;
t840 = Icges(4,4) * t500;
t608 = Icges(4,2) * t503 + t840;
t322 = -Icges(4,6) * t501 + t504 * t608;
t839 = Icges(4,4) * t503;
t612 = Icges(4,1) * t500 + t839;
t324 = -Icges(4,5) * t501 + t504 * t612;
t1036 = t299 * t476 + t301 * t475 + t322 * t503 + t324 * t500;
t1032 = t369 * t964 + t370 * t963 - t807 * t965;
t954 = t1074 * t504 - t1079 * t501;
t395 = -Icges(5,2) * t475 + t837;
t397 = Icges(5,1) * t476 - t838;
t429 = -Icges(4,2) * t500 + t839;
t431 = Icges(4,1) * t503 - t840;
t1047 = t395 * t476 + t397 * t475 + t429 * t503 + t431 * t500;
t298 = Icges(5,6) * t504 + t501 * t607;
t441 = Icges(5,4) * t807;
t810 = t475 * t501;
t829 = Icges(5,5) * t504;
t300 = Icges(5,1) * t810 + t441 + t829;
t321 = Icges(4,6) * t504 + t501 * t608;
t800 = t501 * t503;
t460 = Icges(4,4) * t800;
t804 = t500 * t501;
t830 = Icges(4,5) * t504;
t323 = Icges(4,1) * t804 + t460 + t830;
t1035 = t298 * t476 + t300 * t475 + t321 * t503 + t323 * t500;
t579 = t504 * t444;
t656 = qJD(1) * t475 + qJD(5);
t681 = t476 * t733;
t904 = t501 * t656 - t681;
t161 = -t499 * t904 + t502 * t579;
t162 = t499 * t579 + t502 * t904;
t739 = qJD(1) * t501;
t944 = t475 * t733 + t476 * t739;
t87 = Icges(7,5) * t162 + Icges(7,6) * t161 - Icges(7,3) * t944;
t89 = Icges(6,5) * t162 + Icges(6,6) * t161 - Icges(6,3) * t944;
t1059 = t87 + t89;
t734 = qJD(3) * t501;
t680 = t476 * t734;
t163 = -t444 * t801 + (-t504 * t656 - t680) * t499;
t578 = t444 * t499;
t736 = qJD(3) * t476;
t164 = t656 * t799 + (t502 * t736 - t578) * t501;
t687 = t475 * t734;
t738 = qJD(1) * t504;
t692 = t476 * t738;
t551 = t687 - t692;
t88 = Icges(7,5) * t164 + Icges(7,6) * t163 + Icges(7,3) * t551;
t90 = Icges(6,5) * t164 + Icges(6,6) * t163 + Icges(6,3) * t551;
t1058 = t88 + t90;
t91 = Icges(7,4) * t162 + Icges(7,2) * t161 - Icges(7,6) * t944;
t93 = Icges(6,4) * t162 + Icges(6,2) * t161 - Icges(6,6) * t944;
t1057 = t91 + t93;
t92 = Icges(7,4) * t164 + Icges(7,2) * t163 + Icges(7,6) * t551;
t94 = Icges(6,4) * t164 + Icges(6,2) * t163 + Icges(6,6) * t551;
t1056 = t92 + t94;
t95 = Icges(7,1) * t162 + Icges(7,4) * t161 - Icges(7,5) * t944;
t97 = Icges(6,1) * t162 + Icges(6,4) * t161 - Icges(6,5) * t944;
t1055 = t95 + t97;
t96 = Icges(7,1) * t164 + Icges(7,4) * t163 + Icges(7,5) * t551;
t98 = Icges(6,1) * t164 + Icges(6,4) * t163 + Icges(6,5) * t551;
t1054 = t96 + t98;
t1053 = qJD(3) * t1070 + qJD(5) * t1069;
t1052 = qJD(3) * t956 + qJD(5) * t1068;
t1051 = qJD(3) * t955 + qJD(5) * t1067;
t957 = t1060 * t501;
t953 = t1066 * t501;
t1046 = -t1024 * t502 + t1025 * t499;
t942 = t1066 * t504;
t1044 = t1036 * t504;
t923 = t1024 * t370 + t1025 * t369 - t1037 * t807;
t1041 = t1060 * t504 + t298 * t807 + t300 * t810 + t321 * t800 + t323 * t804;
t966 = -t299 * t807 - t301 * t810 - t322 * t800 - t324 * t804 - t504 * t954;
t1040 = -t1035 * t504 + t957;
t1012 = -t501 * t954 + t1044;
t1039 = t1047 * t501 + t942;
t962 = t299 * t475 - t301 * t476 + t322 * t500 - t324 * t503;
t1038 = t1047 * t504 - t953;
t950 = t298 * t475 - t300 * t476 + t321 * t500 - t323 * t503;
t989 = t1048 * t162 + t1049 * t161 - t1050 * t944 - t1054 * t372 + t1056 * t371 + t1058 * t806;
t988 = -t1055 * t372 + t1057 * t371 + t1059 * t806 + t964 * t161 + t963 * t162 - t965 * t944;
t987 = t1048 * t164 + t1049 * t163 + t1050 * t551 + t1054 * t370 + t1056 * t369 - t1058 * t807;
t986 = t1055 * t370 + t1057 * t369 - t1059 * t807 + t964 * t163 + t963 * t164 + t965 * t551;
t980 = t1024 * t162 + t1025 * t161 - t1037 * t944 - t1051 * t372 + t1052 * t371 + t1053 * t806;
t979 = t1024 * t164 + t1025 * t163 + t1037 * t551 + t1051 * t370 + t1052 * t369 - t1053 * t807;
t976 = -t1050 * t807 + t1033;
t1031 = t806 * t965 - t1034;
t599 = t183 * t499 - t189 * t502;
t75 = t177 * t475 - t476 * t599;
t596 = t186 * t499 - t192 * t502;
t77 = t180 * t475 - t476 * t596;
t1030 = t75 + t77;
t597 = t185 * t499 + t190 * t502;
t76 = t179 * t475 - t476 * t597;
t594 = t188 * t499 + t193 * t502;
t78 = t182 * t475 - t476 * t594;
t1029 = t76 + t78;
t495 = t501 ^ 2;
t877 = pkin(3) * t503;
t1028 = t877 * (-t504 ^ 2 - t495);
t921 = t1037 * t475 - t1046 * t476;
t729 = qJD(5) * t504;
t388 = t476 * t729 + t734;
t1023 = (-t1046 - t1070) * t444 + (-t1037 * t501 - t596 - t599) * t389 + (t1037 * t504 - t594 - t597) * t388;
t1022 = t1047 * qJD(1) - qJD(3) * t1074;
t1021 = t954 * qJD(1);
t1020 = t1060 * qJD(1);
t374 = t607 * qJD(3);
t375 = t611 * qJD(3);
t407 = t608 * qJD(3);
t408 = t612 * qJD(3);
t1019 = t374 * t476 + t375 * t475 + t407 * t503 + t408 * t500 + (t395 * t475 - t397 * t476 + t429 * t500 - t431 * t503) * qJD(3) + t1066 * qJD(1);
t1018 = (-t1082 * t371 - t339 - t342 + t964) * t388 + (t1025 - t1067) * t444 + t389 * (-t1082 * t369 + t1049 + t833 + t836);
t915 = (-t1042 * t370 + t1048 + t337 + t340) * t389 + (t1042 * t372 + t338 + t341 + t963) * t388 + (t1024 + t1068) * t444;
t1017 = (t1051 * t502 - t1052 * t499 + (-t1024 * t499 - t1025 * t502) * qJD(5) + t1037 * qJD(3)) * t476 + (qJD(3) * t1046 + t1053) * t475;
t1011 = t1039 * qJD(1);
t1010 = qJD(1) * t1035 + qJD(3) * t953 + t1021;
t1009 = -qJD(1) * t1036 - qJD(3) * t942 + t1020;
t1008 = (t1012 * t501 + t1040 * t504) * qJD(3);
t1007 = (t1041 * t504 + t501 * t966) * qJD(3);
t472 = pkin(5) * t502 + pkin(4);
t497 = -qJ(6) - pkin(8);
t809 = t475 * t504;
t1006 = rSges(7,1) * t372 - rSges(7,2) * t371 + t472 * t809 + t497 * t806;
t1005 = t1038 * qJD(1);
t627 = rSges(7,1) * t502 - rSges(7,2) * t499;
t864 = pkin(8) + t497;
t866 = pkin(4) - t472;
t777 = (t627 - t866) * t476 + (rSges(7,3) - t864) * t475;
t172 = qJD(1) * t299 + t395 * t734;
t335 = t397 * t501;
t174 = qJD(1) * t301 + qJD(3) * t335;
t217 = qJD(1) * t322 + t429 * t734;
t386 = t431 * t501;
t219 = qJD(1) * t324 + qJD(3) * t386;
t997 = qJD(3) * t950 - t172 * t476 - t174 * t475 - t217 * t503 - t219 * t500 + t1020;
t332 = t395 * t504;
t171 = qJD(1) * t298 - qJD(3) * t332;
t336 = t397 * t504;
t173 = -qJD(3) * t336 + (t501 * t611 + t829) * qJD(1);
t385 = t429 * t504;
t216 = qJD(1) * t321 - qJD(3) * t385;
t387 = t431 * t504;
t218 = -qJD(3) * t387 + (t501 * t612 + t830) * qJD(1);
t996 = qJD(3) * t962 + t171 * t476 + t173 * t475 + t216 * t503 + t218 * t500 + t1021;
t995 = t1032 * t388 + t923 * t444;
t752 = t429 + t612;
t753 = -t608 + t431;
t755 = t395 + t611;
t756 = -t607 + t397;
t994 = (t475 * t755 - t476 * t756 + t500 * t752 - t503 * t753) * qJD(1);
t993 = 0.2e1 * qJD(3);
t721 = qJD(3) * qJD(5);
t674 = t475 * t721;
t269 = -qJD(1) * t388 + t501 * t674;
t270 = qJD(1) * t389 - t504 * t674;
t673 = t476 * t721;
t992 = t1031 * t270 + t974 * t269 + t988 * t388 + t389 * t989 + t980 * t444 + t922 * t673;
t991 = t1032 * t270 + t269 * t976 + t388 * t986 + t389 * t987 + t444 * t979 + t673 * t923;
t990 = rSges(7,1) + pkin(5);
t464 = pkin(3) * t804;
t17 = (qJD(3) * t599 + t88) * t475 + (qJD(3) * t177 - t499 * t92 + t502 * t96 + (-t183 * t502 - t189 * t499) * qJD(5)) * t476;
t19 = (qJD(3) * t596 + t90) * t475 + (qJD(3) * t180 - t499 * t94 + t502 * t98 + (-t186 * t502 - t192 * t499) * qJD(5)) * t476;
t985 = t17 + t19;
t18 = (qJD(3) * t597 + t87) * t475 + (qJD(3) * t179 - t499 * t91 + t502 * t95 + (-t185 * t502 + t190 * t499) * qJD(5)) * t476;
t20 = (qJD(3) * t594 + t89) * t475 + (qJD(3) * t182 - t499 * t93 + t502 * t97 + (-t188 * t502 + t193 * t499) * qJD(5)) * t476;
t984 = t18 + t20;
t983 = t389 * t976 + t995;
t982 = t1031 * t388 - t1072;
t981 = t1029 * t388 + t1030 * t389 + t444 * t921;
t978 = t1007 + t1011;
t977 = -t1005 + t1008;
t972 = t1019 * t504 + t1022 * t501;
t971 = -t1019 * t501 + t1022 * t504;
t970 = -qJD(3) * t1035 - t172 * t475 + t174 * t476 - t217 * t500 + t219 * t503;
t969 = qJD(3) * t1036 - t171 * t475 + t173 * t476 - t216 * t500 + t218 * t503;
t631 = rSges(6,1) * t372 - rSges(6,2) * t371;
t200 = rSges(6,3) * t806 - t631;
t968 = t200 * t444;
t400 = rSges(5,1) * t476 - rSges(5,2) * t475;
t345 = t400 * t501;
t348 = t400 * t504;
t446 = pkin(8) * t806;
t358 = pkin(4) * t809 - t446;
t794 = rSges(7,3) * t806 + pkin(5) * t802 - t1006 + t358;
t967 = t444 * t794;
t961 = t1025 * t501;
t960 = t1025 * t504;
t959 = t1024 * t501;
t958 = t1024 * t504;
t857 = rSges(7,3) * t476;
t932 = t475 * t866;
t778 = -t475 * t627 - t476 * t864 + t857 + t932;
t952 = -t1037 * t444 - t1050 * t389 - t388 * t965;
t912 = -t1029 * t504 + t1030 * t501;
t949 = t1029 * t501 + t1030 * t504;
t911 = -t1031 * t504 + t501 * t974;
t948 = t1031 * t501 + t504 * t974;
t910 = -t1032 * t504 + t501 * t976;
t947 = t1032 * t501 + t504 * t976;
t633 = rSges(5,1) * t475 + rSges(5,2) * t476;
t878 = pkin(3) * t500;
t553 = t633 + t878;
t463 = qJD(6) * t475;
t498 = -qJ(4) - pkin(7);
t865 = pkin(7) + t498;
t366 = t501 * t865 + t504 * t878;
t309 = t366 * t733;
t445 = pkin(4) * t810;
t356 = -pkin(8) * t807 + t445;
t367 = -t504 * t865 + t464;
t759 = -t356 - t367;
t552 = -t358 * t733 + t734 * t759 - t309;
t906 = t370 * rSges(7,1) + t369 * rSges(7,2) + pkin(5) * t805 + t472 * t810 + t497 * t807;
t795 = -rSges(7,3) * t807 - t356 + t906;
t35 = -t388 * t795 + t389 * t794 + t463 + t552;
t404 = pkin(4) * t476 + pkin(8) * t475;
t479 = qJD(2) * t504;
t439 = t504 * pkin(1) + t501 * qJ(2);
t873 = pkin(7) * t504;
t662 = t439 + t873;
t642 = t367 + t662;
t715 = pkin(3) * t733;
t453 = t503 * t715;
t732 = qJD(4) * t501;
t657 = -t453 + t732;
t516 = (t356 + t642) * qJD(1) - t404 * t733 - t479 + t657;
t726 = qJD(6) * t504;
t683 = t476 * t726;
t46 = -t389 * t777 + t444 * t795 + t516 + t683;
t661 = t46 * t777;
t946 = -t35 * t794 + t661;
t945 = t475 * t738 + t680;
t943 = t1074 * qJD(1);
t940 = t1023 * t476;
t378 = t633 * qJD(3);
t531 = t501 * (t324 + t385) - t504 * (-Icges(4,2) * t804 + t323 + t460);
t532 = t501 * (t322 - t387) - t504 * (t321 - t386);
t534 = t501 * (t301 + t332) - t504 * (-Icges(5,2) * t810 + t300 + t441);
t535 = t501 * (t299 - t336) - t504 * (t298 - t335);
t939 = -t535 * t475 + t534 * t476 - t532 * t500 + t531 * t503;
t701 = pkin(4) * t681 + pkin(8) * t944;
t212 = qJD(1) * t445 - t701;
t459 = t498 * t738;
t244 = -t459 + (t464 - t873) * qJD(1) + t657;
t241 = t504 * t244;
t359 = t404 * t504;
t803 = t501 * t404;
t938 = t359 * t733 + t504 * t212 + t241 - (-t803 * t501 + t1028) * qJD(3);
t362 = t404 * t734;
t481 = t504 * qJ(2);
t435 = pkin(1) * t501 - t481;
t874 = pkin(7) * t501;
t663 = -t435 - t874;
t643 = t366 + t663;
t478 = qJD(2) * t501;
t477 = qJD(4) * t504;
t684 = t503 * t734;
t751 = pkin(3) * t684 + t477;
t699 = t478 + t751;
t523 = t362 + (t358 + t643) * qJD(1) + t699;
t727 = qJD(6) * t501;
t45 = t388 * t777 - t476 * t727 + t523 - t967;
t935 = t45 * t777;
t737 = qJD(3) * t475;
t711 = rSges(5,2) * t737;
t574 = -rSges(5,3) * qJD(1) - t711;
t703 = rSges(5,1) * t945 + rSges(5,2) * t692;
t176 = t501 * t574 + t703;
t691 = t500 * t738;
t652 = pkin(3) * t691 + t498 * t739 + t751;
t712 = pkin(7) * t739;
t243 = t652 + t712;
t920 = -t176 - t243;
t702 = pkin(4) * t945 + pkin(8) * t687;
t549 = pkin(8) * t692 - t702;
t722 = qJD(1) * qJD(3);
t675 = t404 * t722;
t919 = -qJD(1) * t549 + t501 * t675;
t376 = qJD(1) * t439 - t479;
t918 = -t244 - t376;
t659 = -rSges(3,2) * t504 + t501 * rSges(3,3);
t917 = t439 + t659;
t913 = t1069 * t444 + (-t1015 * t370 + t1016 * t369) * t389 + (t1015 * t372 + t1016 * t371) * t388;
t856 = pkin(5) * qJD(5);
t713 = t502 * t856;
t907 = t164 * rSges(7,1) + t163 * rSges(7,2) + rSges(7,3) * t687 + t472 * t945 + t497 * t692 + t504 * t713;
t905 = t1017 * t444 + t673 * t921;
t630 = rSges(6,1) * t502 - rSges(6,2) * t499;
t291 = rSges(6,3) * t475 + t476 * t630;
t758 = t358 + t366;
t781 = t549 - t243;
t510 = t781 * t501 + (t501 * t758 + t504 * t759) * qJD(1);
t728 = qJD(6) * t476;
t224 = t244 * t733;
t785 = t212 * t733 + t224;
t688 = t497 * t737;
t843 = -rSges(7,3) * t692 + (-pkin(5) * t578 - t688 - t728) * t501 + t549 + t907;
t629 = rSges(7,1) * t162 + rSges(7,2) * t161;
t808 = t476 * t497;
t811 = t472 * t476;
t875 = pkin(5) * t499;
t863 = (t713 + (t808 - t932) * qJD(1)) * t501 + (t728 + (t475 * t497 - t811) * qJD(3) + t444 * t875) * t504 + t701 - rSges(7,3) * t944 + t629;
t5 = t863 * t389 - t843 * t388 - t795 * t270 + t794 * t269 + (t510 + t728) * qJD(3) + t785;
t897 = t35 * t863 + t5 * t794;
t893 = -m(7) / 0.2e1;
t892 = m(7) / 0.2e1;
t891 = t269 / 0.2e1;
t890 = t270 / 0.2e1;
t889 = -t388 / 0.2e1;
t888 = t388 / 0.2e1;
t887 = -t389 / 0.2e1;
t886 = t389 / 0.2e1;
t885 = -t444 / 0.2e1;
t884 = t444 / 0.2e1;
t883 = t475 / 0.2e1;
t882 = t501 / 0.2e1;
t881 = -t504 / 0.2e1;
t879 = rSges(3,2) - pkin(1);
t876 = pkin(4) * t475;
t872 = pkin(7) * qJD(1) ^ 2;
t403 = pkin(8) * t476 - t876;
t379 = t403 * qJD(3);
t717 = qJD(1) * t877;
t655 = qJD(3) * t717;
t505 = qJD(3) ^ 2;
t719 = t505 * t878;
t723 = qJD(1) * qJD(2);
t748 = qJ(2) * t738 + t478;
t760 = qJD(1) * (-pkin(1) * t739 + t748) + t501 * t723;
t576 = t501 * t655 + t504 * t719 + t760 + (t243 + t477) * qJD(1);
t731 = qJD(5) * t476;
t346 = (-rSges(7,1) * t499 - rSges(7,2) * t502) * t476;
t714 = t499 * t856;
t796 = qJD(3) * t778 + qJD(5) * t346 - t476 * t714 + t463;
t6 = (-qJD(1) * t728 - t872) * t501 + t843 * t444 - t796 * t389 - t777 * t269 + ((-t379 - t463) * t504 + t795 * t731) * qJD(3) + t576 + t919;
t871 = t6 * t504;
t469 = t504 * t723;
t644 = -t504 * t872 + t469;
t580 = t504 * t655 + t644;
t522 = t379 * t734 - t464 * t505 + t504 * t675 + t580;
t577 = -t212 - t732 + t918;
t682 = t475 * t727;
t7 = -t863 * t444 + t796 * t388 + t777 * t270 + (-t731 * t794 + t682) * qJD(3) + (t577 - t683) * qJD(1) + t522;
t870 = t7 * t501;
t867 = -pkin(1) + t498;
t861 = rSges(3,3) * t504;
t859 = rSges(6,3) * t476;
t855 = t17 * t389;
t854 = t18 * t388;
t853 = t19 * t389;
t852 = t20 * t388;
t492 = t504 * rSges(4,3);
t491 = t504 * rSges(5,3);
t761 = t370 * rSges(6,1) + t369 * rSges(6,2);
t196 = -rSges(6,3) * t807 + t761;
t60 = t196 * t444 - t291 * t389 + t516;
t849 = t60 * t291;
t360 = t400 * t734;
t718 = t501 * t872;
t524 = t576 - t718;
t71 = t378 * t733 + (t176 + t360) * qJD(1) + t524;
t848 = t71 * t504;
t847 = t75 * t269;
t846 = t76 * t270;
t845 = t77 * t269;
t844 = t78 * t270;
t690 = t503 * t738;
t700 = rSges(4,2) * t690 + (t684 + t691) * rSges(4,1);
t735 = qJD(3) * t500;
t223 = (-rSges(4,2) * t735 - rSges(4,3) * qJD(1)) * t501 + t700;
t438 = rSges(4,1) * t503 - rSges(4,2) * t500;
t398 = t438 * t734;
t634 = rSges(4,1) * t500 + rSges(4,2) * t503;
t410 = t634 * qJD(3);
t109 = -t718 + t410 * t733 + (t223 + t398) * qJD(1) + t760;
t820 = t109 * t504;
t391 = t438 * t504;
t222 = -qJD(3) * t391 + (t501 * t634 + t492) * qJD(1);
t689 = t438 * t733;
t110 = -t410 * t734 + (-t222 - t376 + t689) * qJD(1) + t644;
t819 = t110 * t501;
t489 = t501 * rSges(4,3);
t354 = t504 * t634 - t489;
t146 = t398 + t478 + (t354 + t663) * qJD(1);
t818 = t146 * t504;
t813 = t403 * t504;
t783 = t777 * t501;
t782 = t777 * t504;
t780 = -rSges(7,2) * t370 + t369 * t990;
t779 = rSges(7,2) * t372 + t371 * t990;
t302 = rSges(5,1) * t810 + rSges(5,2) * t807 + t491;
t768 = -t302 - t367;
t312 = t504 * t366;
t767 = -t504 * t358 - t312;
t465 = pkin(3) * t800;
t757 = t803 + t465;
t750 = t500 * t715 + t501 * t717;
t749 = t453 + t479;
t747 = rSges(3,2) * t739 + rSges(3,3) * t738;
t412 = qJD(1) * t435;
t746 = t478 - t412;
t720 = -rSges(4,3) - pkin(1) - pkin(7);
t716 = pkin(3) * t735;
t709 = t164 * rSges(6,1) + t163 * rSges(6,2) + rSges(6,3) * t687;
t708 = -t196 + t759;
t707 = qJD(1) * t803 + t750;
t457 = pkin(3) * t690;
t706 = t501 * t379 + t404 * t738 + t457;
t705 = t404 * t739 + t750;
t698 = t459 + t749;
t353 = rSges(4,1) * t804 + rSges(4,2) * t800 + t492;
t697 = t464 + t439;
t696 = -pkin(1) - t875;
t695 = t476 * (-rSges(6,3) - pkin(8));
t685 = t500 * t734;
t676 = t7 * t777;
t672 = -t739 / 0.2e1;
t670 = t736 / 0.2e1;
t669 = -t734 / 0.2e1;
t668 = t734 / 0.2e1;
t667 = -t733 / 0.2e1;
t664 = -t404 - t877;
t654 = t759 - t795;
t645 = t476 * t875 - t346;
t638 = qJD(5) * t670;
t637 = -t857 + t878;
t636 = qJD(1) * t359 + t403 * t734 + t457;
t632 = rSges(6,1) * t162 + rSges(6,2) * t161;
t102 = -rSges(6,3) * t692 + t709;
t289 = -t475 * t630 + t859;
t347 = (-rSges(6,1) * t499 - rSges(6,2) * t502) * t476;
t166 = qJD(3) * t289 + qJD(5) * t347;
t25 = t102 * t444 - t166 * t389 - t269 * t291 + (t196 * t731 - t379 * t504) * qJD(3) + t524 + t919;
t100 = -rSges(6,3) * t944 + t632;
t26 = qJD(1) * t577 - t100 * t444 + t166 * t388 - t200 * t673 + t270 * t291 + t522;
t626 = t25 * t501 + t26 * t504;
t613 = qJD(1) * t366 - t412 + t699;
t147 = -t689 - t479 + (t353 + t662) * qJD(1);
t600 = t146 * t501 - t147 * t504;
t593 = t196 * t504 + t200 * t501;
t575 = t652 + t748;
t563 = -t400 * t733 + t732;
t488 = t501 * rSges(5,3);
t303 = t504 * t633 - t488;
t561 = -t303 * t504 + t501 * t768;
t201 = (-t353 * t501 - t354 * t504) * qJD(3);
t556 = qJD(1) * t358 + t362 + t613;
t555 = -t859 + t876 + t878;
t554 = -t475 * t714 - t728;
t548 = -t312 + t561;
t537 = -t45 * t794 + t46 * t795;
t536 = t35 * t795 - t935;
t53 = -t196 * t388 + t200 * t389 + t552;
t59 = t291 * t388 + t523 - t968;
t511 = t53 * t593 + (-t501 * t60 - t504 * t59) * t291;
t509 = -t501 * t946 + t536 * t504;
t436 = rSges(3,2) * t501 + t861;
t390 = t438 * t501;
t272 = qJD(1) * t917 - t479;
t271 = t478 + (-t435 + t436) * qJD(1);
t260 = t291 * t504;
t258 = t291 * t501;
t240 = rSges(6,1) * t371 + rSges(6,2) * t372;
t238 = rSges(6,1) * t369 - rSges(6,2) * t370;
t221 = t469 + (-qJD(1) * t659 - t376) * qJD(1);
t220 = qJD(1) * t747 + t760;
t175 = -qJD(3) * t348 + (t501 * t633 + t491) * qJD(1);
t117 = t360 + (t303 + t643) * qJD(1) + t699;
t114 = qJD(3) * t561 - t309;
t72 = (-qJD(3) * t378 - t719) * t501 + (-t175 - t563 + t918) * qJD(1) + t580;
t16 = qJD(3) * t510 + t100 * t389 - t102 * t388 - t196 * t270 + t200 * t269 + t785;
t1 = [t905 + (-t661 * t388 + t7 * (t481 + t1006) + t6 * (t697 + t906) + (-t6 * t498 + t7 * t637) * t504 + (t7 * (t498 + t696) - t6 * t857) * t501 + (-t629 + t698 + (t554 + (t811 + (rSges(7,3) - t497) * t475) * qJD(3) + t696 * qJD(1)) * t504 + (-qJD(4) - t713 + (-t472 * t475 - qJ(2) - t637 - t808) * qJD(1)) * t501) * t45 + (t45 + t967 - t556 + t575 + t907 - t857 * t738 + (t554 - t688 + t728 + (pkin(7) + t696) * qJD(1)) * t501) * t46) * m(7) + ((t1031 + t1073) * t389 + t995) * t889 + ((-t976 + t1073) * t388 + t982 + t1072) * t887 + (t110 * (-t489 + t663) + t146 * t479 + t109 * (t353 + t439) + t147 * (-rSges(4,2) * t685 + t700 + t748) + (qJD(3) * t146 * t438 + t109 * pkin(7) + t110 * t634) * t504 + (t720 * t818 + (t146 * (-qJ(2) - t634) + t147 * t720) * t501) * qJD(1) - (-t146 + t398 + (t354 - t874) * qJD(1) + t746) * t147) * m(4) + (t221 * (t501 * t879 + t481 + t861) + t271 * t479 + t220 * t917 + t272 * (t747 + t748) + (t271 * t879 * t504 + (t271 * (-rSges(3,3) - qJ(2)) - t272 * pkin(1)) * t501) * qJD(1) - (qJD(1) * t436 - t271 + t746) * t272) * m(3) + (-(t556 - t59 - t712 - t968) * t60 - t849 * t388 + t26 * (-t446 + t481 + t631) + t59 * (-t632 + t698 + t701) + t25 * (t445 + t697 + t761) + t60 * (t575 + t702 + t709) + (rSges(6,3) * t59 * t737 - t25 * t498 + t26 * t555) * t504 + (-t59 * qJD(4) + t25 * t695 + t26 * t867) * t501 + ((-t59 * pkin(1) + t60 * t695) * t504 + (t59 * (-qJ(2) - t555) - t60 * pkin(1)) * t501) * qJD(1)) * m(6) + ((-t498 * t504 + t302 + t697) * t71 + (t501 * t867 + t504 * t553 + t481 - t488) * t72 + (t698 + (rSges(5,1) * t736 - pkin(1) * qJD(1) + t574) * t504 + (-qJD(4) + (-qJ(2) - t553) * qJD(1)) * t501) * t117 + (t575 + t703 + (-t711 + (-rSges(5,3) - pkin(1)) * qJD(1)) * t501 + t117 - t360 - (t303 - t874) * qJD(1) - t613) * ((t302 + t642) * qJD(1) + t563 - t749)) * m(5) + (qJD(1) * t962 + t970 + t971) * t733 / 0.2e1 + t923 * t891 + (t969 + t972 + t978) * t668 + t979 * t886 + (t980 + t983) * t888 + t847 / 0.2e1 + t845 / 0.2e1 + t846 / 0.2e1 + t855 / 0.2e1 + t853 / 0.2e1 + t854 / 0.2e1 + t852 / 0.2e1 + ((t499 * t964 - t502 * t963) * t476 - t965 * t475 + t1029) * t389 * t885 + ((t954 * t495 + ((t1035 + t954) * t504 - t957 + t966) * t504) * qJD(3) + t977 + t1005) * t667 + (((t1012 + t1041 - t1044) * t504 + ((-t1035 + t954) * t504 + t957 + t966 - t1040) * t501) * qJD(3) + t1011) * t669 - ((-t950 + t1039) * t501 + t1038 * t504) * t722 / 0.2e1 + t922 * t890 + t844 / 0.2e1 + (-qJD(3) * t1047 + t374 * t475 - t375 * t476 + t407 * t500 - t408 * t503) * qJD(1); 0.2e1 * (t870 / 0.2e1 - t871 / 0.2e1) * m(7) + 0.2e1 * (t25 * t881 + t26 * t882) * m(6) + 0.2e1 * (t72 * t882 - t848 / 0.2e1) * m(5) + 0.2e1 * (-t820 / 0.2e1 + t819 / 0.2e1) * m(4) + 0.2e1 * (t220 * t881 + t221 * t882) * m(3); t947 * t891 + t948 * t890 + ((t476 * t922 + t810 * t974) * qJD(5) + ((-qJD(5) * t1031 + t952) * t475 - t940) * t504 + (t371 * t956 - t372 * t955) * t444 + (t371 * t961 - t372 * t959) * t389 + (-t371 * t960 + t372 * t958) * t388) * t889 + (-qJD(1) * t911 + t501 * t988 + t504 * t989) * t888 + ((-t1032 * t809 + t476 * t923) * qJD(5) + ((qJD(5) * t976 - t952) * t475 + t940) * t501 + (t369 * t956 + t370 * t955) * t444 + (t369 * t961 + t370 * t959) * t389 + (-t369 * t960 - t370 * t958) * t388) * t887 + (-qJD(1) * t910 + t501 * t986 + t504 * t987) * t886 + (((-t499 * t956 + t502 * t955 + t1037) * t444 + (-t499 * t961 + t502 * t959 + t1050) * t389 + (t499 * t960 - t502 * t958 + t965) * t388 + t921 * qJD(5)) * t476 + (qJD(5) * t912 - t1023) * t475) * t885 + (-qJD(1) * t912 + t501 * t984 + t504 * t985) * t884 - ((t475 * t534 + t476 * t535 + t500 * t531 + t503 * t532) * qJD(3) + (-t475 * t756 - t476 * t755 - t500 * t753 - t503 * t752) * qJD(1)) * qJD(1) / 0.2e1 + (t970 * t504 + t969 * t501 + (t501 * t950 + t504 * t962) * qJD(1)) * qJD(1) / 0.2e1 + ((-t734 * t942 - t943) * t501 + ((t501 * t953 + t939) * qJD(3) + t994) * t504) * t669 + ((t733 * t953 - t943) * t504 + ((-t504 * t942 - t939) * qJD(3) - t994) * t501) * t667 - t981 * t731 / 0.2e1 - t983 * t475 * t730 / 0.2e1 + t982 * t729 * t883 + t949 * t638 + (t7 * t757 + t5 * t767 + (t6 * (t664 - t777) + t935 * qJD(1) + t897) * t504 + (t661 * qJD(1) + t5 * t654 + t676) * t501 - (t475 * t509 + t476 * t537) * qJD(5) + (t706 + (-t716 + t796) * t501 - t636 - t682 - t782 * t444 - t778 * t388 + qJD(3) * t464) * t45 + (t654 * t738 + (t781 - t843 + (t758 - t794) * qJD(1)) * t501 - t728 + t782 * t389 + t783 * t388 + t938) * t35 + (t705 + (-t379 - t796) * t504 + t475 * t726 - t707 - t783 * t444 + t778 * t389 + t813 * qJD(3)) * t46) * m(7) + (t26 * t757 + t59 * t706 + t60 * t705 + t16 * t767 + (t25 * (-t291 + t664) + t60 * (-t166 - t379) + t16 * t200 + t59 * t291 * qJD(1)) * t504 + (t26 * t291 + t59 * (t166 - t716) + t16 * t708 + t849 * qJD(1)) * t501 - t59 * (t260 * t444 + t289 * t388 + t636) - t60 * (t258 * t444 - t289 * t389 + t707) - (-t464 * t59 - t60 * t813) * qJD(3) - ((t196 * t60 - t200 * t59) * t476 + t511 * t475) * qJD(5) + ((qJD(1) * t708 + t100) * t504 + (-t102 + t781 + (-t200 + t758) * qJD(1)) * t501 + t258 * t388 + t260 * t389 + t938) * t53) * m(6) + (-(-t345 * t501 - t348 * t504 + t1028) * t114 * qJD(3) + t72 * (t465 + t345) + (-t400 - t877) * t848 + (t175 * t733 + t734 * t920 + t224) * t548 + t114 * (t175 * t504 + t501 * t920 + t241) + (qJD(3) * t548 + t114) * (t768 * t504 + (t303 + t366) * t501) * qJD(1) + (-pkin(3) * t685 + (qJD(3) * t553 - t378) * t501) * t117) * m(5) + (-(t146 * t391 + t147 * t390) * qJD(1) - (t201 * (-t390 * t501 - t391 * t504) - t600 * t634) * qJD(3) + 0.2e1 * t201 * (t222 * t504 - t223 * t501 + (-t353 * t504 + t354 * t501) * qJD(1)) - t600 * t410 + (-t820 + t819 + (t147 * t501 + t818) * qJD(1)) * t438) * m(4) + (t972 * qJD(1) + t992 + ((t1012 * qJD(1) + t997 * t504) * t504 + (t1009 * t501 - t1040 * qJD(1) + (-t996 + t1010) * t504) * t501) * t993) * t882 + (t971 * qJD(1) + t991 + ((t966 * qJD(1) + t1010 * t504) * t504 + (t996 * t501 - t1041 * qJD(1) + (-t997 + t1009) * t504) * t501) * t993) * t504 / 0.2e1 + (t978 + t983 + t1007) * t672 + (t977 + t982 + t1008) * t738 / 0.2e1; m(5) * (t501 * t71 + t504 * t72) + m(6) * t626 + m(7) * (t501 * t6 + t504 * t7); (t475 * t923 - t476 * t910) * t891 + (t475 * t922 - t476 * t911) * t890 + (t1018 * t372 + t915 * t371 + t913 * t806) * t889 + ((-qJD(1) * t948 + t922 * qJD(3) - t501 * t989 + t504 * t988) * t476 + (qJD(3) * t911 + t980) * t475) * t888 + (-t1018 * t370 + t369 * t915 - t807 * t913) * t887 + ((-qJD(1) * t947 + t923 * qJD(3) - t501 * t987 + t504 * t986) * t476 + (qJD(3) * t910 + t979) * t475) * t886 + ((-t1018 * t502 - t499 * t915) * t476 + t913 * t475) * t885 + ((-qJD(1) * t949 + t921 * qJD(3) - t501 * t985 + t504 * t984) * t476 + (qJD(3) * t912 + t1017) * t475) * t884 + (t846 + t847 + t854 + t855 + t844 + t845 + t852 + t853 + t905) * t883 - t991 * t807 / 0.2e1 + t992 * t806 / 0.2e1 + t981 * t670 + (t475 * t921 - t476 * t912) * t638 + (-(-t45 * t779 + t46 * t780) * t444 - (t35 * t779 + t46 * t645) * t389 - (-t35 * t780 - t45 * t645) * t388 + (qJD(3) * t509 - t45 * t863 + t46 * t843 + t6 * t795 - t7 * t794) * t475 + (t537 * qJD(3) + (qJD(1) * t946 - t35 * t843 + t45 * t796 - t5 * t795 + t676) * t504 + (qJD(1) * t536 + t46 * t796 + t6 * t777 - t897) * t501) * t476) * m(7) + (-t59 * (-t240 * t444 + t347 * t388) - t60 * (t238 * t444 - t347 * t389) - t53 * (-t238 * t388 + t240 * t389) + (qJD(3) * t511 - t59 * t100 + t60 * t102 + t25 * t196 - t26 * t200) * t475 + (t59 * (-qJD(3) * t200 + t166 * t504) + t60 * (qJD(3) * t196 + t166 * t501) - t16 * t593 + t53 * (-t100 * t501 - t102 * t504 + t196 * t739 - t200 * t738) + ((-t501 * t59 + t504 * t60) * qJD(1) + t626) * t291) * t476) * m(6) + t982 * (t475 * t667 + t476 * t672) + t983 * (t475 * t668 - t692 / 0.2e1); 0.2e1 * ((t45 * t734 - t46 * t733 + t5) * t892 + (t388 * t45 - t389 * t46) * t893) * t475 + 0.2e1 * ((qJD(3) * t35 - t45 * t738 - t46 * t739 - t870 + t871) * t892 + (t35 * (t388 * t501 + t389 * t504) + (-t45 * t504 - t46 * t501) * t444) * t893) * t476;];
tauc  = t1(:);
