% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPP8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRRPP8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:55:52
% EndTime: 2019-03-09 04:56:03
% DurationCPUTime: 4.19s
% Computational Cost: add. (3622->433), mult. (7572->528), div. (0->0), fcn. (4283->4), ass. (0->215)
t133 = sin(qJ(3));
t226 = t133 * qJD(1);
t121 = qJD(4) + t226;
t134 = cos(qJ(4));
t132 = sin(qJ(4));
t190 = qJD(4) * t133 + qJD(1);
t166 = t190 * t132;
t135 = cos(qJ(3));
t225 = t134 * qJD(3);
t210 = t135 * t225;
t147 = t166 - t210;
t234 = qJD(3) * t133;
t229 = qJD(4) * t135;
t207 = t132 * t229;
t297 = t133 * t225 + t207;
t55 = qJD(1) * t297 - qJD(4) * t225;
t227 = t132 * qJD(3);
t235 = qJD(1) * t135;
t93 = t134 * t235 + t227;
t156 = -t135 * t55 - t93 * t234;
t224 = qJD(1) * qJD(3);
t124 = t135 * t224;
t187 = t133 * t124;
t300 = t121 * t147 - t134 * t187 - t156;
t136 = -pkin(1) - pkin(7);
t116 = t136 * qJD(1) + qJD(2);
t101 = t133 * pkin(3) - t135 * pkin(8) + qJ(2);
t152 = qJD(1) * t101;
t148 = qJD(4) * t152;
t212 = t135 * t227;
t230 = qJD(4) * t134;
t185 = pkin(3) * t135 + pkin(8) * t133;
t90 = t185 * qJD(3) + qJD(2);
t71 = t90 * qJD(1);
t100 = t133 * t116;
t80 = qJD(3) * pkin(8) + t100;
t196 = t116 * t212 + t132 * t148 - t134 * t71 + t80 * t230;
t40 = t132 * t152 + t134 * t80;
t157 = t40 * t121 - t196;
t231 = qJD(4) * t132;
t197 = -t116 * t210 - t132 * t71 - t134 * t148 + t80 * t231;
t39 = t132 * t80 - t134 * t152;
t296 = t39 * t121 - t197;
t165 = t93 * pkin(5) + t39;
t241 = qJD(5) + t165;
t213 = t133 * t227;
t109 = qJD(1) * t213;
t251 = qJD(4) * t93;
t56 = -t109 + t251;
t254 = t56 * t134;
t255 = t55 * t132;
t264 = t134 * t93;
t91 = t132 * t235 - t225;
t139 = t135 * ((t132 * t91 - t264) * qJD(4) - t254 + t255) + (t132 * t93 + t134 * t91) * t234;
t193 = -t93 + t227;
t248 = t133 * t134;
t24 = qJD(1) * (t121 * t248 + t193 * t135) + t121 * t230;
t192 = t91 + t225;
t250 = t132 * t133;
t295 = qJD(1) * (-t121 * t250 + t192 * t135) - t121 * t231;
t130 = t135 ^ 2;
t168 = qJD(1) * t130 - t121 * t133;
t204 = t134 * t229;
t8 = qJD(3) * (t168 * t132 + t135 * t91) + t121 * t204 + t133 * t56;
t7 = qJD(3) * (t168 * t134 + t135 * t93) - t121 * t207 - t133 * t55;
t169 = t93 * t121;
t170 = t121 * t91;
t294 = t132 * (t56 + t169) + t134 * (t55 + t170);
t223 = 0.2e1 * qJD(1);
t32 = -t121 * qJ(5) - t40;
t189 = pkin(4) * t124;
t6 = -t189 + t196;
t293 = t32 * t121 + t6;
t88 = t91 ^ 2;
t89 = t93 ^ 2;
t217 = -t89 + t88;
t292 = t55 - t170;
t34 = t56 - t169;
t118 = t121 ^ 2;
t289 = -t89 - t118;
t167 = t134 * t190;
t108 = t121 * qJD(5);
t119 = qJ(5) * t124;
t287 = t108 + t119;
t252 = qJ(5) * t134;
t286 = -pkin(4) * t231 + t132 * qJD(5) + t226 * t252 + t100;
t280 = pkin(5) + pkin(8);
t279 = t91 * pkin(5);
t278 = pkin(8) * t121;
t245 = t135 * t116;
t265 = qJD(3) * pkin(3);
t81 = -t245 - t265;
t150 = -t93 * qJ(5) + t81;
t272 = pkin(4) + qJ(6);
t21 = t272 * t91 + t150;
t277 = t21 * t93;
t37 = t91 * pkin(4) + t150;
t276 = t37 * t93;
t158 = t55 * qJ(5) - t93 * qJD(5) + t116 * t234;
t9 = t56 * pkin(4) + t158;
t275 = t9 * t132;
t274 = t9 * t134;
t273 = t91 * t93;
t107 = t280 * t134;
t155 = -pkin(5) * t248 - t272 * t135;
t96 = t185 * qJD(1);
t47 = -t132 * t245 + t134 * t96;
t271 = t155 * qJD(1) - qJD(4) * t107 - t47;
t48 = t132 * t96 + t134 * t245;
t270 = (pkin(5) * t250 + qJ(5) * t135) * qJD(1) + t48 + t280 * t231;
t172 = qJ(6) * t132 - t252;
t202 = t272 * t133;
t269 = -t132 * qJD(1) * t202 - t172 * qJD(4) + t134 * qJD(6) + t286;
t46 = t56 * t248;
t268 = -t91 * t210 - t46;
t267 = -t132 * pkin(4) * t226 + qJ(5) * t230 + t286;
t266 = qJ(5) * t56;
t262 = t135 * t56;
t16 = -t272 * t121 + t241;
t259 = t16 * t121;
t253 = t91 * qJ(5);
t247 = t133 * t136;
t58 = t132 * t101 + t134 * t247;
t249 = t132 * t135;
t246 = t134 * t135;
t137 = qJD(3) ^ 2;
t244 = t137 * t133;
t243 = t137 * t135;
t138 = qJD(1) ^ 2;
t242 = t138 * qJ(2);
t240 = qJD(5) + t39;
t28 = t40 - t279;
t239 = -qJD(6) - t28;
t237 = t133 ^ 2 - t130;
t236 = -t137 - t138;
t233 = qJD(3) * t135;
t232 = qJD(3) * t136;
t228 = qJD(4) * t136;
t222 = t132 * t278;
t221 = t134 * t278;
t209 = t135 * t232;
t220 = t101 * t230 + t132 * t90 + t134 * t209;
t219 = pkin(8) * t233;
t218 = qJD(2) * t223;
t73 = t91 * t234;
t214 = t135 * t138 * t133;
t206 = t133 * t228;
t203 = t121 * t235;
t201 = -t132 * qJ(5) - pkin(3);
t200 = -t124 + t273;
t199 = qJD(3) * t272;
t198 = qJD(1) * t264 - t55 * t250 + (t133 * t230 + t212) * t93;
t195 = qJD(4) * t91 - t55;
t194 = -t81 + t245;
t113 = t132 * t247;
t57 = t134 * t101 - t113;
t188 = pkin(4) * t204 + qJ(5) * t297 + t133 * t232;
t186 = -t108 + t197;
t53 = -t133 * qJ(5) - t58;
t184 = t195 * pkin(8);
t183 = (-t56 + t251) * pkin(8);
t20 = qJD(6) - t32 - t279;
t182 = t132 * t20 - t134 * t16;
t181 = t132 * t16 + t134 * t20;
t31 = -t121 * pkin(4) + t240;
t180 = t132 * t32 + t134 * t31;
t179 = t132 * t31 - t134 * t32;
t178 = t132 * t40 - t134 * t39;
t177 = t132 * t39 + t134 * t40;
t173 = t194 * qJD(3);
t171 = t135 * (t121 + t226);
t26 = -t101 * t231 - t132 * t209 + (-t206 + t90) * t134;
t164 = -t55 * pkin(5) + t196;
t163 = -t56 * pkin(5) - t197;
t162 = -t133 * t37 + t219;
t161 = t133 * t81 - t219;
t2 = t91 * qJD(6) + t272 * t56 + t158;
t160 = t2 * t132 + t21 * t230;
t159 = -t2 * t134 + t21 * t231;
t149 = -t21 * t91 + t163;
t17 = t134 * t169 - t255;
t18 = t132 * t170 - t254;
t4 = -t119 + t186;
t146 = t180 * qJD(4) + t6 * t132 - t4 * t134;
t145 = -t199 * t235 + t164;
t144 = -t178 * qJD(4) + t132 * t196 - t134 * t197;
t15 = t91 * t204 + (-t73 + t262) * t132;
t14 = t156 * t134 - t93 * t207;
t140 = t73 + (-t56 - t109) * t135 + (-t212 - t167) * t121;
t127 = qJ(2) * t218;
t123 = pkin(4) * t249;
t117 = 0.2e1 * t119;
t106 = t280 * t132;
t102 = -t134 * pkin(4) + t201;
t84 = -t272 * t134 + t201;
t62 = t123 + (-t136 - t252) * t135;
t61 = qJD(3) * t171;
t54 = -t133 * pkin(4) - t57;
t52 = t123 + (-t136 + t172) * t135;
t49 = t93 * pkin(4) + t253;
t44 = -pkin(5) * t249 - t53;
t43 = -pkin(4) * t235 - t47;
t42 = -qJ(5) * t235 - t48;
t38 = t113 + (pkin(5) * t135 - t101) * t134 - t202;
t35 = t272 * t93 + t253;
t30 = -pkin(4) * t213 - qJD(5) * t246 + t188;
t25 = -t132 * t206 + t220;
t22 = -pkin(4) * t233 - t26;
t19 = -qJ(5) * t233 + (t132 * t228 - qJD(5)) * t133 - t220;
t13 = (qJ(6) * qJD(4) - qJD(5)) * t246 + (qJD(6) * t135 - t133 * t199) * t132 + t188;
t10 = (-pkin(5) * t230 + qJ(5) * qJD(3)) * t135 + (qJD(5) + (pkin(5) * qJD(3) - t228) * t132) * t133 + t220;
t5 = -pkin(5) * t207 + t155 * qJD(3) - t133 * qJD(6) - t26;
t3 = t163 + t287;
t1 = -t121 * qJD(6) + t145;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, t127, -0.2e1 * t187, 0.2e1 * t237 * t224, -t244, 0.2e1 * t187, -t243, 0, -t136 * t244 + (qJ(2) * t233 + qJD(2) * t133) * t223, -t136 * t243 + (-qJ(2) * t234 + qJD(2) * t135) * t223, 0, t127, t14, t139, t7, t15, -t8, t61, -t196 * t133 + t26 * t121 + (-t136 * t56 + t230 * t81) * t135 + ((qJD(1) * t57 - t39) * t135 + (t132 * t194 + t136 * t91) * t133) * qJD(3), t197 * t133 - t25 * t121 + (t136 * t55 - t231 * t81) * t135 + ((-qJD(1) * t58 - t40) * t135 + (t134 * t194 + t136 * t93) * t133) * qJD(3), -t25 * t91 - t26 * t93 + t57 * t55 - t58 * t56 + t178 * t234 + (-qJD(4) * t177 + t132 * t197 + t134 * t196) * t135, -t173 * t247 - t196 * t57 - t197 * t58 + t40 * t25 - t39 * t26, t61, -t7, t8, t14, t139, t15, t19 * t91 + t22 * t93 + t53 * t56 - t54 * t55 - t180 * t234 + (-qJD(4) * t179 + t132 * t4 + t134 * t6) * t135, t22 * t121 - t30 * t91 - t62 * t56 + (t227 * t37 + t6) * t133 + (-t37 * t230 - t275 + (qJD(1) * t54 + t31) * qJD(3)) * t135, -t19 * t121 - t30 * t93 + t62 * t55 + (t225 * t37 - t4) * t133 + (t37 * t231 - t274 + (-qJD(1) * t53 - t32) * qJD(3)) * t135, t32 * t19 + t31 * t22 + t37 * t30 + t4 * t53 + t6 * t54 + t9 * t62, t61, t8, t7, t15, -t139, t14, -t10 * t91 - t38 * t55 - t44 * t56 + t5 * t93 + t182 * t234 + (-qJD(4) * t181 + t1 * t134 - t132 * t3) * t135, t10 * t121 - t13 * t93 + t52 * t55 + (t21 * t225 + t3) * t133 + ((qJD(1) * t44 + t20) * qJD(3) + t159) * t135, -t5 * t121 + t13 * t91 + t52 * t56 + (-t21 * t227 - t1) * t133 + ((-qJD(1) * t38 - t16) * qJD(3) + t160) * t135, t1 * t38 + t20 * t10 + t21 * t13 + t16 * t5 + t2 * t52 + t3 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, -t242, 0, 0, 0, 0, 0, 0, t236 * t133, t236 * t135, 0, -t242, 0, 0, 0, 0, 0, 0, t140, t300, t93 * t167 + (qJD(1) * t91 + t133 * t195 + t233 * t93) * t132 + t268, t177 * t233 - t178 * qJD(1) + (-t173 + t144) * t133, 0, 0, 0, 0, 0, 0, t147 * t91 + t198 - t46, t262 + t121 * t167 + (t132 * t171 - t133 * t91) * qJD(3), -t300, t180 * qJD(1) + (qJD(3) * t179 - t9) * t135 + (qJD(3) * t37 + t146) * t133, 0, 0, 0, 0, 0, 0, t166 * t91 + t198 + t268, -t300, t140, -t182 * qJD(1) + (qJD(3) * t181 - t2) * t135 + (qJD(3) * t21 - qJD(4) * t182 + t1 * t132 + t3 * t134) * t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, -t237 * t138, 0, -t214, 0, 0, -t135 * t242, t133 * t242, 0, 0, t17, -t294, t24, t18, t295, -t203, -pkin(3) * t56 - t47 * t121 - t192 * t100 + (t132 * t81 - t221) * qJD(4) + (t132 * t161 + t135 * t39) * qJD(1), pkin(3) * t55 + t48 * t121 + t193 * t100 + (t134 * t81 + t222) * qJD(4) + (t134 * t161 + t135 * t40) * qJD(1), t47 * t93 + t48 * t91 + (t183 + t296) * t134 + (t184 - t157) * t132, t39 * t47 - t40 * t48 + (-t81 - t265) * t100 + t144 * pkin(8), -t203, -t24, -t295, t17, -t294, t18, -t42 * t91 - t43 * t93 + (t121 * t31 + t183 - t4) * t134 + (t184 + t293) * t132, -t102 * t56 - t43 * t121 + t274 + t267 * t91 + (-t132 * t37 + t221) * qJD(4) + (t132 * t162 - t135 * t31) * qJD(1), t102 * t55 + t42 * t121 - t275 + t267 * t93 + (-t134 * t37 - t222) * qJD(4) + (t134 * t162 + t135 * t32) * qJD(1), t146 * pkin(8) + t9 * t102 - t267 * t37 - t31 * t43 - t32 * t42, -t203, -t295, t24, t18, t294, t17, -t106 * t55 - t107 * t56 - t271 * t93 + t270 * t91 + (t3 + t259) * t134 + (-t20 * t121 + t1) * t132, t84 * t55 + t269 * t93 - t270 * t121 + (-t21 * t248 + (qJD(3) * t107 - t20) * t135) * qJD(1) - t160, t84 * t56 - t269 * t91 + t271 * t121 + (t21 * t250 + (-qJD(3) * t106 + t16) * t135) * qJD(1) + t159, t1 * t106 + t3 * t107 - t271 * t16 + t2 * t84 - t270 * t20 - t269 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, -t217, -t292, -t273, -t34, t124, -t81 * t93 + t157, t81 * t91 - t296, 0, 0, t124, t292, t34, t273, -t217, -t273, pkin(4) * t55 - t266 + (-t32 - t40) * t93 + (t31 - t240) * t91, t49 * t91 - t157 - 0.2e1 * t189 + t276, t240 * t121 - t37 * t91 + t49 * t93 + t117 - t186, -t6 * pkin(4) - t4 * qJ(5) - t240 * t32 - t31 * t40 - t37 * t49, t124, t34, -t292, -t273, t217, t273, -t266 + t272 * t55 + (t20 + t239) * t93 + (t16 - t241) * t91, t121 * t165 + t35 * t93 + 0.2e1 * t108 + t117 + t149, -t277 - t35 * t91 + (0.2e1 * qJD(6) + t28) * t121 + 0.2e1 * t272 * t124 - t164, t3 * qJ(5) - t1 * t272 + t16 * t239 + t20 * t241 - t21 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292, -t200, t289, t276 + t293, 0, 0, 0, 0, 0, 0, -t292, t289, t200, t277 + (-qJD(6) - t20) * t121 + t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34, t124 + t273, -t88 - t118, t149 + t259 + t287;];
tauc_reg  = t11;
