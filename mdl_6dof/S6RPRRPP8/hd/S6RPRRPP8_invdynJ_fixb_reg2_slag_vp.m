% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRPP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPP8_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP8_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP8_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPP8_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPP8_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRRPP8_invdynJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:56:03
% EndTime: 2019-03-09 04:56:13
% DurationCPUTime: 5.71s
% Computational Cost: add. (4811->577), mult. (9153->645), div. (0->0), fcn. (5487->6), ass. (0->277)
t171 = sin(qJ(3));
t308 = qJD(1) * t171;
t137 = qJD(4) + t308;
t174 = cos(qJ(3));
t170 = sin(qJ(4));
t251 = qJD(4) * t171 + qJD(1);
t225 = t251 * t170;
t173 = cos(qJ(4));
t294 = t173 * qJD(3);
t274 = t174 * t294;
t194 = t225 - t274;
t296 = qJD(4) * t174;
t272 = t170 * t296;
t205 = t171 * t294 + t272;
t290 = t174 * qJDD(1);
t44 = qJD(1) * t205 - qJD(4) * t294 - t170 * qJDD(3) - t173 * t290;
t394 = t194 * t137 + t174 * t44;
t224 = t251 * t173;
t301 = qJD(3) * t174;
t302 = qJD(3) * t171;
t277 = t170 * t302;
t303 = qJD(3) * t170;
t306 = qJD(1) * t174;
t105 = t173 * t306 + t303;
t299 = qJD(4) * t105;
t45 = -qJD(1) * t277 - t173 * qJDD(3) + t170 * t290 + t299;
t393 = (t170 * t301 + t224) * t137 + t174 * t45;
t176 = -pkin(1) - pkin(7);
t125 = qJDD(1) * t176 + qJDD(2);
t132 = qJD(1) * t176 + qJD(2);
t161 = t174 * pkin(8);
t380 = t171 * pkin(3) + qJ(2) - t161;
t207 = qJD(1) * t380;
t392 = qJDD(3) * pkin(8) + qJD(4) * t207 + t125 * t171 + t132 * t301;
t293 = qJD(1) * qJD(3);
t264 = t174 * t293;
t291 = t171 * qJDD(1);
t101 = qJDD(4) + t264 + t291;
t362 = pkin(4) + qJ(6);
t266 = t362 * t101;
t111 = t171 * t132;
t91 = qJD(3) * pkin(8) + t111;
t41 = t170 * t91 - t173 * t207;
t219 = t105 * pkin(5) + t41;
t323 = qJD(5) + t219;
t103 = t170 * t306 - t294;
t350 = t45 * t173;
t351 = t44 * t170;
t179 = t174 * ((t103 * t170 - t105 * t173) * qJD(4) - t350 + t351) + (t103 * t173 + t105 * t170) * t302;
t222 = t105 * t137;
t223 = t137 * t103;
t389 = t170 * (t45 + t222) + t173 * (t44 + t223);
t123 = t137 * qJD(5);
t90 = t101 * qJ(5);
t388 = -t123 - t90;
t172 = sin(qJ(1));
t332 = t172 * t173;
t175 = cos(qJ(1));
t335 = t171 * t175;
t87 = t170 * t335 + t332;
t326 = t175 * t173;
t333 = t172 * t170;
t88 = t171 * t326 - t333;
t387 = t88 * pkin(4) + t87 * qJ(5);
t386 = t44 - t223;
t26 = t45 - t222;
t100 = t105 ^ 2;
t99 = t103 ^ 2;
t383 = -t99 + t100;
t167 = t171 ^ 2;
t168 = t174 ^ 2;
t310 = t167 + t168;
t255 = t310 * t125;
t134 = t137 ^ 2;
t381 = -t100 - t134;
t298 = qJD(4) * t170;
t307 = qJD(1) * t173;
t345 = qJ(5) * t171;
t379 = pkin(4) * t298 - t170 * qJD(5) - t307 * t345 - t111;
t327 = t174 * t175;
t287 = g(2) * t327;
t365 = g(3) * t171;
t378 = t365 + t287;
t377 = -pkin(5) * t45 + qJDD(6);
t330 = t173 * t101;
t212 = t137 * t298 - t330;
t339 = t170 * t171;
t21 = qJD(1) * (-t103 * t174 + t137 * t339) + t212;
t297 = qJD(4) * t173;
t340 = t170 * t101;
t213 = t137 * t297 + t340;
t336 = t171 * t173;
t22 = qJD(1) * (-t105 * t174 + t137 * t336) + t213;
t304 = qJD(3) * t105;
t375 = t171 * (t137 * t294 + t44) + t174 * (t212 - t304);
t305 = qJD(3) * t103;
t374 = t171 * (t137 * t303 - t45) - t174 * (t213 + t305);
t373 = 0.2e1 * t90;
t372 = 0.2e1 * qJ(2);
t371 = pkin(5) + pkin(8);
t369 = t44 * pkin(5);
t368 = pkin(4) * t101;
t367 = pkin(8) * t101;
t165 = g(1) * t172;
t164 = g(2) * t175;
t366 = g(3) * t161;
t364 = t103 * pkin(5);
t363 = t174 * pkin(5);
t39 = t45 * t336;
t361 = -t103 * t274 - t39;
t265 = t362 * t171;
t344 = qJ(6) * t170;
t360 = t170 * qJD(1) * t265 - t173 * qJD(6) + (-qJ(5) * t173 + t344) * qJD(4) + t379;
t359 = pkin(4) * t170 * t308 - qJ(5) * t297 + t379;
t243 = pkin(3) * t174 + pkin(8) * t171;
t108 = t243 * qJD(1);
t328 = t174 * t132;
t55 = t170 * t108 + t173 * t328;
t358 = qJ(5) * t45;
t18 = -t137 * t362 + t323;
t357 = t137 * t18;
t42 = t170 * t207 + t173 * t91;
t34 = -t137 * qJ(5) - t42;
t356 = t137 * t34;
t355 = t137 * t41;
t354 = t137 * t42;
t348 = -t371 * t298 - (pkin(5) * t339 + qJ(5) * t174) * qJD(1) - t55;
t122 = t371 * t173;
t208 = -pkin(5) * t336 - t174 * t362;
t54 = t173 * t108 - t170 * t328;
t347 = -qJD(1) * t208 + qJD(4) * t122 + t54;
t334 = t171 * t176;
t66 = t170 * t380 + t173 * t334;
t346 = pkin(1) * qJDD(1);
t343 = t103 * qJ(5);
t342 = t103 * t105;
t341 = t170 * qJ(5);
t338 = t170 * t174;
t337 = t171 * t172;
t331 = t172 * t174;
t329 = t173 * t174;
t177 = qJD(3) ^ 2;
t325 = t176 * t177;
t178 = qJD(1) ^ 2;
t324 = t178 * qJ(2);
t322 = qJD(5) + t41;
t30 = t42 - t364;
t321 = -qJD(6) - t30;
t319 = g(3) * t339 + t170 * t287;
t318 = g(3) * t336 + t173 * t287;
t317 = pkin(4) * t338 - qJ(5) * t329;
t316 = pkin(3) * t331 + pkin(8) * t337;
t315 = g(1) * t327 + g(2) * t331;
t285 = 0.2e1 * qJD(1) * qJD(2);
t314 = (qJDD(1) * qJ(2) + t285) * qJ(2);
t313 = t175 * pkin(1) + t172 * qJ(2);
t312 = t165 - t164;
t311 = t167 - t168;
t309 = -t177 - t178;
t300 = qJD(3) * t176;
t295 = qJD(4) * t176;
t292 = qJDD(3) * t171;
t289 = pkin(8) * t331;
t288 = g(1) * t331;
t148 = g(2) * t335;
t102 = qJD(3) * t243 + qJD(2);
t273 = t174 * t300;
t286 = t170 * t102 + t173 * t273 + t297 * t380;
t284 = t176 * t172;
t92 = -qJD(3) * pkin(3) - t328;
t203 = -t105 * qJ(5) + t92;
t23 = t103 * t362 + t203;
t283 = t23 * t298;
t282 = t23 * t297;
t281 = t172 * t329;
t280 = t174 * t178 * t171;
t278 = t175 * pkin(7) + t313;
t271 = t171 * t295;
t270 = t173 * t296;
t269 = t105 * t301;
t268 = t137 * t306;
t262 = -pkin(3) - t341;
t261 = g(3) * t174 - t148;
t85 = t171 * t333 - t326;
t86 = t170 * t175 + t171 * t332;
t260 = -t85 * pkin(4) + qJ(5) * t86;
t259 = t87 * pkin(4) - qJ(5) * t88;
t258 = t170 * t269 - t44 * t339 + (t171 * t297 + t307) * t105;
t51 = qJD(1) * t102 + qJDD(1) * t380;
t257 = -t170 * t51 - t173 * t392 + t91 * t298;
t256 = t170 * t392 - t173 * t51 + t91 * t297;
t129 = t170 * t334;
t65 = t173 * t380 - t129;
t253 = t310 * qJDD(1);
t252 = qJDD(2) - t346;
t250 = pkin(4) * t281 + t331 * t341 + t316;
t249 = pkin(4) * t270 + qJ(5) * t205 + t171 * t300;
t248 = pkin(3) * t337 + t278;
t59 = -qJDD(3) * pkin(3) - t174 * t125 + t132 * t302;
t189 = t44 * qJ(5) - t105 * qJD(5) + t59;
t2 = t103 * qJD(6) + t362 * t45 + t189;
t247 = -t2 - t288;
t246 = t171 * t264;
t245 = g(1) * t87 + g(2) * t85;
t244 = -g(1) * t88 - g(2) * t86;
t63 = -t345 - t66;
t242 = g(1) * t175 + g(2) * t172;
t239 = -t312 - t324;
t238 = -qJDD(5) - t256;
t237 = (qJD(4) * t103 - t44) * pkin(8);
t236 = (-t45 + t299) * pkin(8);
t20 = qJD(6) - t34 - t364;
t235 = t170 * t20 - t173 * t18;
t234 = t170 * t18 + t173 * t20;
t33 = -pkin(4) * t137 + t322;
t233 = t170 * t34 + t173 * t33;
t232 = t170 * t33 - t173 * t34;
t231 = t170 * t42 - t173 * t41;
t230 = t170 * t41 + t173 * t42;
t4 = t257 + t388;
t160 = t175 * qJ(2);
t226 = pkin(3) * t335 - pkin(8) * t327 + t160;
t28 = -t380 * t298 - t170 * t273 + (t102 - t271) * t173;
t221 = pkin(4) * t173 - t262;
t218 = qJDD(1) * t372 + t285;
t217 = -t125 + t324 + t165;
t211 = -g(1) * t337 - t261;
t210 = qJDD(3) * t176 + t293 * t372;
t209 = pkin(8) * qJD(4) * t137 + t288;
t95 = -t173 * t362 + t262;
t206 = t86 * pkin(4) + t85 * qJ(5) + t248;
t6 = pkin(4) * t45 + t189;
t204 = t209 + t6;
t202 = t209 + t59;
t201 = t137 * t92 - t367;
t37 = pkin(4) * t103 + t203;
t200 = -t137 * t37 + t367;
t198 = g(1) * t85 - g(2) * t87 + g(3) * t338 - t256;
t197 = t284 + t226;
t15 = t173 * t222 - t351;
t16 = t170 * t223 - t350;
t193 = -qJDD(5) + t198;
t192 = t218 - t242;
t191 = t101 - t342;
t190 = g(1) * t86 - g(2) * t88 + g(3) * t329 + t257;
t5 = -t238 - t368;
t188 = qJD(4) * t233 + t5 * t170 - t4 * t173;
t187 = -qJD(4) * t231 + t170 * t256 - t173 * t257;
t186 = t105 * t37 - t193;
t12 = -t105 * t205 - t329 * t44;
t13 = t45 * t338 + (t270 - t277) * t103;
t185 = t105 * t23 - t193 - t369;
t184 = -t103 * t23 - t190 + t377;
t181 = -t101 * t339 + t103 * t302 - t393;
t180 = -t105 * t302 + t171 * t330 - t394;
t157 = qJDD(3) * t174;
t121 = t371 * t170;
t67 = -t174 * t176 + t317;
t64 = -pkin(4) * t171 - t65;
t62 = (-t176 + t344) * t174 + t317;
t58 = t101 * t171 + t137 * t301;
t56 = pkin(4) * t105 + t343;
t50 = -pkin(5) * t338 - t63;
t49 = -pkin(4) * t306 - t54;
t48 = -qJ(5) * t306 - t55;
t40 = t129 + (-t380 + t363) * t173 - t265;
t35 = t105 * t362 + t343;
t32 = -pkin(4) * t277 - qJD(5) * t329 + t249;
t27 = -t170 * t271 + t286;
t24 = -pkin(4) * t301 - t28;
t19 = -qJ(5) * t301 + (t170 * t295 - qJD(5)) * t171 - t286;
t17 = (qJ(6) * qJD(4) - qJD(5)) * t329 + (-qJD(3) * t265 + qJD(6) * t174) * t170 + t249;
t14 = (-pkin(5) * t297 + qJ(5) * qJD(3)) * t174 + (qJD(5) + (pkin(5) * qJD(3) - t295) * t170) * t171 + t286;
t11 = -pkin(5) * t272 + qJD(3) * t208 - t171 * qJD(6) - t28;
t3 = -t4 + t377;
t1 = -t137 * qJD(6) - t238 - t266 - t369;
t7 = [0, 0, 0, 0, 0, qJDD(1), t312, t242, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, qJDD(2) - t312 - 0.2e1 * t346, t192, -t252 * pkin(1) - g(1) * (-t172 * pkin(1) + t160) - g(2) * t313 + t314, qJDD(1) * t168 - 0.2e1 * t246, -0.2e1 * t171 * t290 + 0.2e1 * t293 * t311, -t171 * t177 + t157, qJDD(1) * t167 + 0.2e1 * t246, -t174 * t177 - t292, 0, t210 * t174 + (t192 - t325) * t171, -t210 * t171 + (t218 - t325) * t174 - t315, -t176 * t253 - t255 + t312, -g(1) * (t160 + t284) - g(2) * t278 + t176 * t255 + t314, t12, t179, -t375, t13, t374, t58, t65 * t101 + t28 * t137 + (-t256 + (t103 * t176 - t170 * t92) * qJD(3)) * t171 + (-qJD(3) * t41 + t170 * t59 - t176 * t45 + t297 * t92) * t174 + t244, -t66 * t101 - t27 * t137 + (t257 + (t105 * t176 - t173 * t92) * qJD(3)) * t171 + (-qJD(3) * t42 + t173 * t59 + t176 * t44 - t298 * t92) * t174 + t245, -t103 * t27 - t105 * t28 + t44 * t65 - t45 * t66 + t231 * t302 + (-qJD(4) * t230 + t170 * t257 + t173 * t256) * t174 + t315, -t257 * t66 + t42 * t27 - t256 * t65 - t41 * t28 - g(1) * t197 - g(2) * (t248 - t289) + (-t59 * t174 + t302 * t92) * t176, t58, t375, -t374, t12, t179, t13, t103 * t19 + t105 * t24 - t44 * t64 + t45 * t63 - t233 * t302 + (-qJD(4) * t232 + t170 * t4 + t173 * t5) * t174 + t315, t64 * t101 - t32 * t103 + t24 * t137 - t67 * t45 + (t303 * t37 + t5) * t171 + (qJD(3) * t33 - t170 * t6 - t297 * t37) * t174 - t244, -t63 * t101 - t32 * t105 - t19 * t137 + t67 * t44 + (t294 * t37 - t4) * t171 + (-qJD(3) * t34 - t173 * t6 + t298 * t37) * t174 - t245, t6 * t67 + t37 * t32 + t4 * t63 + t34 * t19 + t5 * t64 + t33 * t24 - g(1) * (t197 + t387) - g(2) * (t206 - t289) t58, -t374, -t375, t13, -t179, t12, -t103 * t14 + t105 * t11 - t40 * t44 - t45 * t50 + t235 * t302 + (-qJD(4) * t234 + t1 * t173 - t170 * t3) * t174 + t315, t50 * t101 - t17 * t105 + t14 * t137 + t62 * t44 + (t23 * t294 + t3) * t171 + (qJD(3) * t20 - t173 * t2 + t283) * t174 - t245, -t40 * t101 + t17 * t103 - t11 * t137 + t62 * t45 + (-t23 * t303 - t1) * t171 + (-qJD(3) * t18 + t170 * t2 + t282) * t174 + t244, t2 * t62 + t23 * t17 + t1 * t40 + t18 * t11 + t3 * t50 + t20 * t14 - g(1) * (-pkin(5) * t327 + t88 * qJ(6) + t226 + t387) - g(2) * (t86 * qJ(6) + t206) + (g(2) * t174 * t371 - g(1) * t176) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t178, t239 + t252, 0, 0, 0, 0, 0, 0, t171 * t309 + t157, t174 * t309 - t292, -t253, t255 + t239, 0, 0, 0, 0, 0, 0, t181 (t304 - t330) * t171 + t394, t105 * t224 + (t103 * t251 - t171 * t44 + t269) * t170 + t361, -t231 * qJD(1) + (qJD(3) * t230 - t59) * t174 + (qJD(3) * t92 + t187) * t171 - t312, 0, 0, 0, 0, 0, 0, t103 * t194 + t258 - t39 (-t305 + t340) * t171 + t393, t180, t233 * qJD(1) + (qJD(3) * t232 - t6) * t174 + (qJD(3) * t37 + t188) * t171 - t312, 0, 0, 0, 0, 0, 0, t103 * t225 + t258 + t361, t180, t181, -t235 * qJD(1) + (qJD(3) * t234 - t2) * t174 + (qJD(3) * t23 - qJD(4) * t235 + t1 * t170 + t3 * t173) * t171 - t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, -t311 * t178, t290, -t280, -t291, qJDD(3), t365 + (-t217 + t164) * t174, t171 * t217 + t261, 0, 0, t15, -t389, t22, t16, -t21, -t268, -pkin(3) * t45 - t103 * t111 - t137 * t54 + t170 * t201 - t173 * t202 + t306 * t41 + t318, pkin(3) * t44 - t105 * t111 + t137 * t55 + t170 * t202 + t173 * t201 + t306 * t42 - t319, t103 * t55 + t105 * t54 + (t236 - t257 + t355) * t173 + (t237 + t256 - t354) * t170 + t211, -t42 * t55 + t41 * t54 - t92 * t111 - g(1) * t316 - t366 + (-t59 + t378) * pkin(3) + (t187 + t148) * pkin(8), -t268, -t22, t21, t15, -t389, t16, -t103 * t48 - t105 * t49 + (t137 * t33 + t236 - t4) * t173 + (t237 + t5 + t356) * t170 + t211, -t103 * t359 - t137 * t49 + t170 * t200 + t173 * t204 + t221 * t45 - t306 * t33 - t318, -t105 * t359 + t137 * t48 - t170 * t204 + t173 * t200 - t221 * t44 + t306 * t34 + t319, -t34 * t48 - t33 * t49 - g(1) * t250 - t366 + t359 * t37 + (t188 + t148) * pkin(8) + (-t6 + t378) * t221, -t268, t21, t22, t16, t389, t15, -t121 * t44 - t122 * t45 + t347 * t105 - t348 * t103 + (t3 + t357) * t173 + (-t137 * t20 + t1) * t170 + t211, -t282 + t101 * t122 + t44 * t95 + t247 * t170 + t348 * t137 - t360 * t105 + (-t174 * t20 - t23 * t336) * qJD(1) + t319, t283 - t101 * t121 + t45 * t95 + t247 * t173 - t347 * t137 + t360 * t103 + (t174 * t18 + t23 * t339) * qJD(1) + t318, t2 * t95 + t1 * t121 + t3 * t122 - g(1) * (qJ(6) * t281 + t250) - g(3) * (t161 + t363) + t360 * t23 + t348 * t20 + t347 * t18 + (-pkin(5) * t165 - g(3) * t95) * t171 - (-t171 * t371 + t174 * t95) * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, t383, -t386, -t342, -t26, t101, -t105 * t92 + t198 + t354, t103 * t92 + t190 - t355, 0, 0, t101, t386, t26, t342, t383, -t342, pkin(4) * t44 - t358 + (-t34 - t42) * t105 + (t33 - t322) * t103, t103 * t56 + t186 - t354 - 0.2e1 * t368, -t103 * t37 + t105 * t56 + t137 * t322 + t123 - t190 + t373, -t5 * pkin(4) - g(1) * t260 - g(2) * t259 + g(3) * t317 - t4 * qJ(5) - t322 * t34 - t33 * t42 - t37 * t56, t101, t26, -t386, -t342, -t383, t342, -t358 + t362 * t44 + (t20 + t321) * t105 + (t18 - t323) * t103, t105 * t35 + t137 * t219 + 0.2e1 * t123 + t184 + t373, -t103 * t35 + (0.2e1 * qJD(6) + t30) * t137 + 0.2e1 * t266 - t185, -t1 * t362 + t3 * qJ(5) - t23 * t35 - g(1) * (-qJ(6) * t85 + t260) - g(2) * (qJ(6) * t87 + t259) - g(3) * (-qJ(6) * t338 - t317) + t323 * t20 + t321 * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t191, t381, t186 + t356 - t368, 0, 0, 0, 0, 0, 0, -t386, t381, -t191 (-qJD(6) - t20) * t137 - t266 + t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, t101 + t342, -t99 - t134, t184 + t357 - t388;];
tau_reg  = t7;
