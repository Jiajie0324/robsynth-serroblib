% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:25:24
% EndTime: 2019-03-09 12:26:23
% DurationCPUTime: 45.70s
% Computational Cost: add. (36919->1023), mult. (77717->1216), div. (0->0), fcn. (85821->8), ass. (0->724)
t974 = qJD(4) + qJD(5);
t1172 = cos(qJ(5));
t1171 = sin(qJ(4));
t1173 = cos(qJ(4));
t1157 = pkin(8) + qJ(3);
t741 = cos(pkin(10));
t920 = t1157 * t741;
t740 = sin(pkin(10));
t921 = t1157 * t740;
t631 = t1171 * t920 + t1173 * t921;
t951 = t1171 * t741;
t958 = t1173 * t740;
t795 = t958 + t951;
t562 = -pkin(9) * t795 - t631;
t742 = sin(qJ(5));
t952 = t1171 * t740;
t957 = t1173 * t741;
t1242 = t952 - t957;
t632 = -t1171 * t921 + t1173 * t920;
t770 = -pkin(9) * t1242 + t632;
t1317 = t1172 * t770 + t742 * t562;
t1324 = t1317 * qJD(6);
t744 = cos(qJ(2));
t1079 = t741 * t744;
t743 = sin(qJ(2));
t698 = t743 * pkin(2) - qJ(3) * t744;
t1082 = t740 * t743;
t715 = pkin(7) * t1082;
t660 = t741 * t698 + t715;
t620 = t743 * pkin(3) - pkin(8) * t1079 + t660;
t601 = t1171 * t620;
t1081 = t740 * t744;
t1080 = t741 * t743;
t661 = -pkin(7) * t1080 + t740 * t698;
t630 = -pkin(8) * t1081 + t661;
t625 = t1173 * t630;
t471 = t625 + t601;
t667 = t795 * t744;
t390 = -pkin(9) * t667 + t471;
t1077 = t742 * t390;
t602 = t1173 * t620;
t953 = t1171 * t630;
t470 = -t953 + t602;
t700 = t744 * t952;
t912 = t744 * t957;
t669 = t912 - t700;
t387 = t743 * pkin(4) - t669 * pkin(9) + t470;
t956 = t1172 * t387;
t1056 = t956 / 0.2e1 - t1077 / 0.2e1;
t719 = -pkin(3) * t741 - pkin(2);
t659 = pkin(4) * t1242 + t719;
t1187 = -t659 / 0.2e1;
t666 = t795 * t743;
t689 = pkin(3) * t1082 + t743 * pkin(7);
t623 = pkin(4) * t666 + t689;
t1188 = -t623 / 0.2e1;
t1073 = t742 * t1242;
t676 = t1172 * t795;
t1231 = t676 - t1073;
t1076 = t742 * t666;
t668 = t1242 * t743;
t654 = t1172 * t668;
t1232 = -t654 - t1076;
t1290 = t1317 * t744;
t353 = -t1290 / 0.2e1;
t1316 = t1232 * t1187 + t1231 * t1188 + t353;
t75 = -t1316 + t1056;
t72 = t1316 + t1056;
t363 = t742 * t387;
t388 = t1172 * t390;
t1058 = t363 / 0.2e1 + t388 / 0.2e1;
t385 = t1172 * t562 - t742 * t770;
t1305 = t385 * t744;
t1321 = t1305 / 0.2e1;
t556 = -t1172 * t666 + t742 * t668;
t609 = -t1172 * t1242 - t742 * t795;
t825 = t1187 * t556 + t1188 * t609;
t74 = t1321 - t1058 - t825;
t1322 = -t1305 / 0.2e1;
t73 = t1322 + t825 - t1058;
t1323 = t974 * t385;
t1062 = t974 * t1317;
t352 = t1290 / 0.2e1;
t1279 = t1232 / 0.2e1;
t1281 = t1231 / 0.2e1;
t901 = -pkin(5) * t556 - qJ(6) * t1232;
t308 = t623 + t901;
t900 = -pkin(5) * t609 - qJ(6) * t1231;
t382 = t659 + t900;
t831 = t382 * t1279 + t308 * t1281;
t1320 = t352 + t831;
t1098 = t556 ^ 2;
t1285 = t1232 ^ 2;
t303 = -t1285 + t1098;
t1319 = qJD(1) * t303;
t1090 = t609 ^ 2;
t1286 = t1231 ^ 2;
t329 = -t1286 + t1090;
t1318 = qJD(2) * t329;
t1074 = t742 * t669;
t653 = t1172 * t667;
t1051 = t1074 / 0.2e1 + t653 / 0.2e1;
t1261 = t744 * t1231;
t1293 = -t1261 / 0.2e1;
t1297 = t1293 - t1051;
t1315 = qJD(1) * t1297;
t1292 = t1261 / 0.2e1;
t1298 = t1292 + t1051;
t1314 = qJD(1) * t1298;
t1266 = t1281 * t556;
t1283 = -t609 / 0.2e1;
t1301 = t1283 * t1232 - t1266;
t1313 = qJD(1) * t1301;
t1296 = t1293 + t1051;
t1312 = qJD(2) * t1296;
t1311 = qJD(2) * t1297;
t1310 = qJD(2) * t1298;
t1299 = t1292 - t1051;
t1309 = qJD(2) * t1299;
t1308 = qJD(2) * t1301;
t1160 = t744 * pkin(2);
t803 = -t1157 * t743 - pkin(1) - t1160;
t771 = (-pkin(7) * t740 - pkin(3)) * t744 + t803 * t741;
t973 = pkin(7) * t1079;
t779 = t740 * t803 + t973;
t463 = t1171 * t771 + t1173 * t779;
t756 = -t666 * pkin(9) + t463;
t1246 = t742 * t756;
t1159 = t744 * pkin(4);
t462 = t1171 * t779 - t1173 * t771;
t389 = t668 * pkin(9) - t462;
t751 = t389 - t1159;
t345 = t1172 * t751;
t203 = t1246 - t345;
t1132 = t203 * t1317;
t117 = -t1132 / 0.2e1;
t1306 = -t385 / 0.2e1;
t1235 = t1172 * t756;
t750 = t742 * t751;
t204 = t1235 + t750;
t1307 = t204 * t1306 + t117;
t1294 = 0.2e1 * t1281;
t828 = t1232 * t1294;
t1192 = t609 / 0.2e1;
t829 = (-t1283 + t1192) * t556;
t104 = t828 - t829;
t146 = -t1231 * t1232 + t556 * t609;
t1066 = t104 * qJD(4) - t146 * qJD(5);
t555 = t653 + t1074;
t1075 = t742 * t667;
t954 = t1172 * t669;
t559 = t954 - t1075;
t234 = t1232 * t555 - t556 * t559;
t1263 = t234 * qJD(1);
t1302 = t1066 + qJD(2) * (t1231 * t555 - t559 * t609) + t1263;
t1300 = t1263 - t1066;
t1203 = t1317 / 0.2e1;
t1071 = t744 * qJ(6);
t192 = t204 - t1071;
t1204 = t192 / 0.2e1;
t194 = t744 * pkin(5) + t203;
t1295 = t194 * t1203 + t385 * t1204;
t1271 = t609 * qJ(6);
t1291 = -t1271 / 0.2e1;
t1282 = -t1231 / 0.2e1;
t1198 = t556 / 0.2e1;
t1280 = -t1232 / 0.2e1;
t1078 = t742 * t389;
t225 = t1235 + t1078;
t955 = t1172 * t389;
t226 = t955 - t1246;
t777 = t1192 * t226 + t1198 * t385 + t1306 * t556 + t1281 * t225 + (t1279 + t1280) * t1317;
t1289 = -t1192 * t194 - t1282 * t192 - t777;
t1288 = -t1192 * t203 - t1282 * t204 - t777;
t1052 = t974 * t609;
t1022 = qJD(2) * t1231;
t1029 = qJD(1) * t1232;
t418 = t1022 + t1029;
t1023 = qJD(2) * t609;
t1030 = qJD(1) * t556;
t420 = t1023 + t1030;
t1276 = t1231 * pkin(5);
t459 = -t1271 + t1276;
t1272 = t556 * qJ(6);
t1275 = t1232 * pkin(5);
t376 = -t1272 + t1275;
t1161 = t743 * pkin(5);
t903 = -t1161 / 0.2e1 - t1056;
t1284 = -t556 / 0.2e1;
t1278 = -t1235 / 0.2e1;
t1277 = t1246 / 0.2e1;
t1274 = t308 * t556;
t1273 = t382 * t609;
t1270 = t623 * t556;
t1024 = qJD(1) * t744;
t514 = t1232 * t1024;
t910 = -t654 / 0.2e1;
t549 = t910 + t654 / 0.2e1;
t1269 = -t549 * qJD(5) - t514;
t1268 = qJD(3) * t609;
t1013 = qJD(4) * t556;
t1267 = qJD(5) * t1301;
t945 = t1022 * t609;
t948 = t1029 * t556;
t1265 = t1231 * t382;
t1264 = t1232 * t623;
t1114 = t308 * t1232;
t1184 = -t795 / 0.2e1;
t1185 = -t1242 / 0.2e1;
t479 = -t1184 * t666 + t1185 * t668;
t1262 = t479 * qJD(4);
t988 = t556 * qJD(3);
t989 = t556 * qJD(6);
t515 = t556 * t1024;
t983 = t609 * qJD(6);
t474 = 0.2e1 * t910 - t1076;
t546 = t1232 * qJD(4);
t1260 = t474 * qJD(5) - t514 + t546;
t1211 = qJD(4) * t1301 + t1267;
t1258 = -t420 * t555 + t1211;
t1017 = qJD(2) * t743;
t890 = -t555 * t744 - t556 * t743;
t1241 = qJD(1) * t890;
t1257 = t609 * t1017 - t1241;
t1256 = t555 * t1030 + t1211;
t1020 = qJD(2) * t795;
t1253 = qJD(1) * t479 + t1020 * t1242;
t1252 = -t945 + t1313;
t1025 = qJD(1) * t668;
t1251 = qJD(2) * t479 - t666 * t1025;
t1250 = -t948 + t1308;
t844 = -qJD(5) * t556 - t1013;
t874 = qJD(2) * t104 - t1319;
t873 = qJD(1) * t104 - t1318;
t864 = qJD(2) * t146 + t1319;
t863 = qJD(1) * t146 + t1318;
t1249 = t974 * t329;
t1247 = qJD(2) * t234 - t303 * t974;
t738 = t743 ^ 2;
t739 = t744 ^ 2;
t711 = t739 - t738;
t1244 = t1269 + t1311;
t1095 = t559 * qJ(6);
t1169 = t555 * pkin(5);
t1243 = -t1095 / 0.2e1 + t1169 / 0.2e1;
t892 = -t1231 * t385 + t1317 * t609;
t1238 = qJD(2) * t892;
t891 = t1098 + t1285;
t1237 = qJD(3) * t891;
t1236 = qJD(3) * t892;
t772 = t828 + t829;
t1233 = t772 * qJD(3);
t1230 = t1260 + t1312;
t796 = t1075 / 0.2e1 - t954 / 0.2e1;
t1174 = t744 / 0.2e1;
t932 = t609 * t1174;
t415 = t932 + t796;
t994 = t415 * qJD(1);
t1229 = t994 - t1052;
t747 = -t750 / 0.2e1 + t1278;
t964 = t1159 / 0.2e1;
t746 = t742 * t964 + t747;
t905 = t1278 - t1078 / 0.2e1;
t90 = t746 - t905;
t1228 = qJD(1) * t90;
t1162 = t742 * pkin(4);
t718 = qJ(6) + t1162;
t1182 = -t718 / 0.2e1;
t745 = t744 * t1182 - t1071 / 0.2e1 - t747;
t79 = -t745 - t905;
t1227 = qJD(1) * t79;
t909 = t676 / 0.2e1;
t604 = t909 - t676 / 0.2e1;
t959 = t604 * qJD(3) - t1062;
t748 = -t345 / 0.2e1 + t1277 + t1172 * t964;
t749 = t1277 - t955 / 0.2e1;
t92 = t748 - t749;
t970 = t1172 * pkin(4);
t960 = -t92 * qJD(1) + qJD(4) * t970;
t1226 = t1198 * t1317 - t1279 * t385;
t1225 = t1282 * t203 + t1283 * t204;
t1222 = t1192 * t192 + t1281 * t194;
t914 = -qJD(5) + t1024;
t1221 = t474 * qJD(4) - t1232 * t914;
t513 = t739 + t1285;
t1220 = -t513 * qJD(1) - t1022 * t1232 + t744 * t974;
t1218 = -t1023 * t1231 + t1313;
t1216 = -t1030 * t1232 + t1308;
t845 = qJD(5) * t1232 + t546;
t1215 = qJD(2) * t890 - t744 * t845;
t888 = t1090 + t1286;
t1214 = qJD(1) * t772 + qJD(2) * t888;
t1213 = qJD(1) * t891 + qJD(2) * t772;
t1212 = qJD(3) * t888;
t1209 = t668 ^ 2;
t1208 = t795 ^ 2;
t1207 = -pkin(5) / 0.2e1;
t1206 = -qJ(6) / 0.2e1;
t1205 = qJ(6) / 0.2e1;
t1196 = -t555 / 0.2e1;
t1186 = t668 / 0.2e1;
t1183 = -t689 / 0.2e1;
t1181 = t718 / 0.2e1;
t1180 = -t719 / 0.2e1;
t727 = -t970 - pkin(5);
t1179 = -t727 / 0.2e1;
t1178 = t727 / 0.2e1;
t733 = t744 * pkin(7);
t1177 = t733 / 0.2e1;
t1176 = t742 / 0.2e1;
t1175 = -t743 / 0.2e1;
t1165 = t667 * pkin(4);
t1164 = t668 * pkin(4);
t1163 = t795 * pkin(4);
t1158 = -qJD(4) / 0.2e1;
t1156 = pkin(4) * qJD(4);
t1155 = pkin(4) * qJD(5);
t461 = t474 * qJD(3);
t1153 = -t90 * qJD(4) - t461;
t1083 = t795 * t668;
t1085 = t666 * t1242;
t481 = -t1083 + t1085;
t1152 = t481 * qJD(3);
t547 = t1232 * qJD(3);
t1151 = t90 * qJD(5) - t547;
t91 = t746 + t905;
t1150 = -t225 * qJD(4) + t91 * qJD(5);
t18 = t117 + t1132 / 0.2e1;
t1149 = qJD(1) * t18;
t1122 = t225 * t744;
t321 = -t1164 + t376;
t61 = -t321 * t556 + t1114 + t1122;
t1148 = qJD(1) * t61;
t1126 = t204 * t744;
t68 = -t376 * t556 + t1114 + t1126;
t1147 = qJD(1) * t68;
t70 = t1232 * t194 + t192 * t556;
t1146 = qJD(1) * t70;
t71 = t1232 * t203 + t204 * t556;
t1145 = qJD(1) * t71;
t98 = -t1164 * t556 - t1122 - t1264;
t1142 = qJD(1) * t98;
t1119 = t226 * t744;
t99 = -t1164 * t1232 + t1119 + t1270;
t1141 = qJD(1) * t99;
t1140 = qJD(2) * t18;
t925 = t203 / 0.2e1 - t194 / 0.2e1;
t926 = t1204 - t204 / 0.2e1;
t780 = -t1231 * t926 - t609 * t925;
t840 = qJ(6) * t1196 + t1207 * t559;
t10 = t780 - t840;
t1139 = t10 * qJD(1);
t1072 = t743 * qJ(6);
t219 = t388 + t363;
t201 = t219 + t1072;
t218 = t956 - t1077;
t202 = -t218 - t1161;
t714 = pkin(3) * t1081;
t690 = t733 + t714;
t624 = t690 + t1165;
t309 = -t1095 + t624 + t1169;
t19 = t192 * t201 + t194 * t202 + t308 * t309;
t1138 = t19 * qJD(1);
t20 = t192 * t226 + t194 * t225 + t308 * t321;
t1133 = t20 * qJD(1);
t1129 = t203 * t744;
t21 = -t192 * t203 + t194 * t204 + t308 * t376;
t1125 = t21 * qJD(1);
t22 = t1232 * t202 - t192 * t555 + t194 * t559 + t201 * t556;
t1124 = t22 * qJD(1);
t1123 = t225 * t385;
t1121 = t226 * t1317;
t23 = (-t192 + t204) * t1232 - (-t194 + t203) * t556;
t1118 = t23 * qJD(1);
t894 = t1232 * t225 + t226 * t556;
t24 = -t1232 * t192 + t194 * t556 + t894;
t1117 = t24 * qJD(1);
t26 = -t1232 * t218 + t203 * t559 - t204 * t555 + t219 * t556;
t1116 = t26 * qJD(1);
t27 = -t1232 * t204 + t203 * t556 + t894;
t1115 = t27 * qJD(1);
t38 = -t203 * t218 + t204 * t219 + t623 * t624;
t1113 = t38 * qJD(1);
t1111 = t385 * t743;
t1106 = t1317 * t743;
t39 = -t1164 * t623 + t203 * t225 + t204 * t226;
t1104 = t39 * qJD(1);
t43 = t1232 * t309 - t192 * t743 + t201 * t744 + t308 * t559;
t1103 = t43 * qJD(1);
t44 = -t194 * t743 + t202 * t744 + t308 * t555 - t309 * t556;
t1102 = t44 * qJD(1);
t56 = t203 * t743 + t218 * t744 - t623 * t555 + t556 * t624;
t1094 = t56 * qJD(1);
t57 = t1232 * t624 - t204 * t743 + t219 * t744 + t623 * t559;
t1093 = t57 * qJD(1);
t1089 = t609 * t744;
t62 = t1232 * t321 + t1119 + t1274;
t1086 = t62 * qJD(1);
t67 = t1232 * t376 - t1129 + t1274;
t1084 = t67 * qJD(1);
t95 = t192 * t744 + t1114;
t1068 = t95 * qJD(1);
t97 = t462 * t669 - t463 * t667 + t470 * t668 - t471 * t666;
t1067 = t97 * qJD(1);
t505 = 0.2e1 * t909 - t1073;
t1064 = t505 * qJD(3);
t1063 = qJD(3) * t1231;
t262 = t1279 * t609 + t1266;
t1059 = t262 * qJD(4) - t1267;
t598 = t1231 * qJD(4);
t1053 = t505 * qJD(5) + t598;
t735 = t740 ^ 2;
t736 = t741 ^ 2;
t710 = t736 + t735;
t1049 = qJ(6) * qJD(5);
t130 = -t1129 + t1270;
t1048 = qJD(1) * t130;
t131 = -t1126 - t1264;
t1047 = qJD(1) * t131;
t236 = -t462 * t668 - t463 * t666;
t1046 = qJD(1) * t236;
t785 = t1174 * t632 + t1180 * t668 - t1183 * t795;
t842 = t602 / 0.2e1 - t953 / 0.2e1;
t267 = -t785 + t842;
t1045 = qJD(1) * t267;
t786 = t1174 * t631 - t1180 * t666 - t1183 * t1242;
t924 = -t601 / 0.2e1 - t625 / 0.2e1;
t268 = t786 + t924;
t1044 = qJD(1) * t268;
t326 = -t462 * t744 - t689 * t666;
t1043 = qJD(1) * t326;
t327 = -t463 * t744 + t689 * t668;
t1042 = qJD(1) * t327;
t361 = -t1232 * t743 + t559 * t744;
t1039 = qJD(1) * t361;
t1038 = qJD(1) * t1296;
t410 = t1089 / 0.2e1 - t796;
t314 = qJD(1) * t410;
t1033 = qJD(1) * t1299;
t414 = t932 - t796;
t1032 = qJD(1) * t414;
t902 = -t743 * qJ(3) - t1160;
t843 = -pkin(1) + t902;
t650 = -pkin(7) * t1081 + t741 * t843;
t651 = t740 * t843 + t973;
t490 = (t650 * t741 + t651 * t740) * t743;
t1031 = qJD(1) * t490;
t560 = t666 * t743 - t667 * t744;
t1028 = qJD(1) * t560;
t561 = t668 * t743 + t669 * t744;
t1027 = qJD(1) * t561;
t1026 = qJD(1) * t666;
t1021 = qJD(2) * t659;
t1019 = qJD(2) * t719;
t1018 = qJD(2) * t741;
t1016 = qJD(2) * t744;
t1015 = qJD(3) * t415;
t1014 = qJD(3) * t744;
t1012 = qJD(4) * t604;
t1011 = qJD(4) * t668;
t1010 = qJD(4) * t795;
t1008 = qJD(5) * t1231;
t1007 = qJD(5) * t659;
t1006 = qJD(6) * t1231;
t1005 = qJD(6) * t744;
t109 = -t462 * t470 + t463 * t471 + t689 * t690;
t1004 = t109 * qJD(1);
t178 = t462 * t743 + t470 * t744 - t690 * t666 - t689 * t667;
t1003 = t178 * qJD(1);
t179 = -t463 * t743 + t471 * t744 - t690 * t668 + t689 * t669;
t1002 = t179 * qJD(1);
t323 = (t650 * t744 + t660 * t743) * t741 + (t651 * t744 + t661 * t743) * t740;
t997 = t323 * qJD(1);
t365 = pkin(7) ^ 2 * t743 * t744 + t650 * t660 + t651 * t661;
t996 = t365 * qJD(1);
t995 = t414 * qJD(3);
t457 = -t666 * t669 + t667 * t668;
t993 = t457 * qJD(1);
t485 = -t650 * t743 + (t660 - 0.2e1 * t715) * t744;
t991 = t485 * qJD(1);
t486 = t661 * t744 + (-t651 + 0.2e1 * t973) * t743;
t990 = t486 * qJD(1);
t524 = t549 * qJD(3);
t793 = -t958 / 0.2e1 - t951 / 0.2e1;
t584 = (t1184 - t793) * t744;
t987 = t584 * qJD(1);
t585 = (t1184 + t793) * t744;
t986 = t585 * qJD(1);
t586 = -t1242 * t1174 + t912 / 0.2e1 - t700 / 0.2e1;
t985 = t586 * qJD(1);
t587 = t700 / 0.2e1 + (t1185 - t957 / 0.2e1) * t744;
t984 = t587 * qJD(1);
t582 = t604 * qJD(5);
t982 = t666 * qJD(4);
t682 = t710 * t738;
t981 = t682 * qJD(1);
t683 = t711 * t740;
t980 = t683 * qJD(1);
t678 = t1242 * qJD(4);
t685 = t711 * t741;
t979 = t685 * qJD(1);
t978 = t710 * qJD(2);
t977 = t711 * qJD(1);
t976 = t743 * qJD(1);
t731 = qJD(5) * t970;
t975 = t731 + qJD(6);
t972 = -t1172 / 0.2e1;
t971 = t1172 / 0.2e1;
t969 = pkin(1) * t976;
t968 = pkin(1) * t1024;
t967 = pkin(7) * t1016;
t966 = t742 * t1155;
t658 = -t1164 / 0.2e1;
t677 = t1163 / 0.2e1;
t963 = t1178 + t1207;
t961 = t91 * qJD(4) - t204 * qJD(5) + t524;
t942 = t740 * t1018;
t941 = t744 * t547;
t940 = t744 * t988;
t939 = t743 * t1014;
t938 = t795 * t678;
t937 = t743 * t1016;
t712 = t744 * t976;
t936 = -t1121 / 0.2e1;
t933 = t609 * t1181;
t929 = t742 * t1175;
t923 = t714 / 0.2e1 + t1177;
t922 = t1181 + t1205;
t919 = -0.2e1 * t740 * t1080;
t918 = -t1317 * t555 - t385 * t559;
t229 = qJD(2) * t414 + t515;
t649 = t668 * t1024;
t915 = qJD(2) * t585 + t649;
t913 = qJD(3) + t1019;
t911 = t741 * t712;
t908 = t743 * t971;
t907 = t1056 + t1161;
t906 = t1058 + t1072;
t391 = t1163 + t459;
t765 = -t1123 / 0.2e1 + t308 * t391 / 0.2e1 + t321 * t382 / 0.2e1 + t1295;
t833 = t1178 * t202 + t1181 * t201;
t1 = t936 - t765 + t833;
t51 = t382 * t391;
t899 = -t1 * qJD(1) + t51 * qJD(2);
t832 = -t308 * t459 / 0.2e1 - t376 * t382 / 0.2e1;
t838 = t1205 * t201 + t1207 * t202;
t3 = t1317 * t925 - t385 * t926 + t832 + t838;
t58 = t382 * t459;
t898 = -t3 * qJD(1) + t58 * qJD(2);
t790 = t1123 / 0.2e1 + t1307;
t799 = t1176 * t219 + t218 * t971;
t5 = t936 + (t1184 * t623 + t1186 * t659 + t799) * pkin(4) + t790;
t77 = t1163 * t659;
t897 = -t5 * qJD(1) + t77 * qJD(2);
t823 = t1178 * t559 + t1182 * t555;
t7 = t823 + t1289;
t896 = t7 * qJD(1);
t704 = -qJD(4) + t914;
t792 = (t1196 * t742 + t559 * t972) * pkin(4);
t11 = t792 + t1288;
t895 = t11 * qJD(1);
t887 = -t660 * t740 + t661 * t741;
t834 = t1165 / 0.2e1 + t923;
t778 = t834 - t1226;
t32 = t778 - t1222 + t1243;
t886 = qJD(1) * t32 - t1238;
t41 = t778 + t1225;
t885 = qJD(1) * t41 - t1238;
t142 = -t391 * t609 + t1265;
t764 = t321 * t1283 + t391 * t1284 + t1320;
t30 = t743 * t963 - t1056 + t764;
t884 = -qJD(1) * t30 - qJD(2) * t142;
t143 = -t1231 * t391 - t1273;
t775 = t1280 * t391 + t1282 * t321 + t1283 * t308 + t1284 * t382;
t800 = t743 * t922 + t1058;
t28 = t1321 - t775 + t800;
t883 = qJD(1) * t28 - qJD(2) * t143;
t148 = -t459 * t609 + t1265;
t774 = t1192 * t376 + t1198 * t459 - t831;
t36 = t353 + t774 + t907;
t882 = qJD(1) * t36 - qJD(2) * t148;
t149 = -t1231 * t459 - t1273;
t776 = t1192 * t308 + t1198 * t382 + t1279 * t459 + t1281 * t376;
t34 = t1321 + t776 + t906;
t881 = qJD(1) * t34 - qJD(2) * t149;
t324 = t1163 * t609 - t1231 * t659;
t53 = (-t1184 * t556 - t1186 * t609 + t908) * pkin(4) + t72;
t880 = qJD(1) * t53 + qJD(2) * t324;
t325 = -t1163 * t1231 - t659 * t609;
t52 = (t1184 * t1232 + t1186 * t1231 + t929) * pkin(4) + t73;
t879 = qJD(1) * t52 + qJD(2) * t325;
t878 = -t92 * qJD(4) - t988;
t877 = t92 * qJD(5) - t988;
t93 = t748 + t749;
t876 = t93 * qJD(4) + t203 * qJD(5);
t875 = -t226 * qJD(4) + t93 * qJD(5);
t767 = (t1176 * t1232 - t556 * t972) * pkin(4) + t1232 * t1182 - t556 * t1179;
t841 = pkin(5) * t1284 + t1206 * t1232;
t111 = t767 - t841;
t766 = (t1176 * t1231 - t609 * t972) * pkin(4) + t1231 * t1182 - t609 * t1179;
t839 = pkin(5) * t1283 + t1206 * t1231;
t151 = t766 - t839;
t866 = qJD(1) * t111 + qJD(2) * t151;
t773 = t462 * t1184 + t463 * t1242 / 0.2e1 + t631 * t1186 + t632 * t666 / 0.2e1;
t127 = t773 + t923;
t405 = -t1242 * t632 + t631 * t795;
t865 = qJD(1) * t127 - qJD(2) * t405;
t175 = -t1232 * t963 - t556 * t922 + t658;
t590 = t1271 / 0.2e1;
t239 = t933 - t1163 / 0.2e1 + t590 + t963 * t1231;
t860 = qJD(1) * t175 - qJD(2) * t239;
t217 = 0.2e1 * pkin(5) * t1279 + 0.2e1 * qJ(6) * t1284;
t274 = pkin(5) * t1294 + 0.2e1 * t1291;
t859 = qJD(1) * t217 + qJD(2) * t274;
t798 = t1176 * t556 + t1232 * t972;
t316 = (t1186 + t798) * pkin(4);
t797 = t1176 * t609 + t1231 * t972;
t374 = (t1184 + t797) * pkin(4);
t858 = qJD(1) * t316 + qJD(2) * t374;
t334 = t1083 + t1085;
t664 = t666 ^ 2;
t489 = t664 - t1209;
t857 = qJD(1) * t489 + qJD(2) * t334;
t679 = t1242 ^ 2;
t566 = t679 - t1208;
t856 = qJD(1) * t334 + qJD(2) * t566;
t312 = qJD(1) * t474 + qJD(2) * t505;
t574 = t664 + t1209;
t855 = qJD(1) * t574 + qJD(2) * t481;
t629 = t679 + t1208;
t854 = qJD(1) * t481 + qJD(2) * t629;
t824 = t650 * t740 / 0.2e1 - t651 * t741 / 0.2e1;
t487 = t1177 + t824;
t693 = t710 * qJ(3);
t853 = qJD(1) * t487 - qJD(2) * t693;
t394 = qJD(1) * t549 + qJD(2) * t604;
t852 = -qJD(2) * t1242 - t1026;
t851 = -t1020 + t1025;
t846 = qJD(4) * t505 + t1008;
t837 = t225 * pkin(5) / 0.2e1 + t226 * t1206;
t836 = pkin(5) * t1203 + qJ(6) * t1306;
t46 = t903 + t1320;
t822 = qJD(1) * t46 + t1022 * t382;
t821 = qJD(1) * t73 - t1021 * t609;
t820 = qJD(1) * t72 - t1021 * t1231;
t247 = t1175 + t1301;
t819 = qJD(1) * t247 - t945;
t137 = qJD(2) * t262 + t948;
t152 = qJD(1) * t262 + t945;
t805 = -t549 * qJD(4) + t514;
t804 = qJD(2) * t584 - t1011 + t649;
t801 = (t598 + t1008) * t609;
t769 = (t1176 * t194 + t192 * t971) * pkin(4) + t203 * t1182 + t204 * t1178;
t16 = t769 + t837;
t768 = (-t1176 * t385 + t1317 * t971) * pkin(4) - t385 * t1182 + t1317 * t1178;
t50 = t768 + t836;
t662 = (t1172 * t718 + t727 * t742) * pkin(4);
t794 = t16 * qJD(1) + t50 * qJD(2) + t662 * qJD(4);
t791 = qJD(2) * t415 + t515 + t844;
t784 = (qJD(2) * t555 + t845) * t556;
t783 = qJD(2) * t902 + t1014;
t782 = t834 + t1226;
t737 = qJ(6) * qJD(6);
t724 = t1017 / 0.2e1;
t723 = -t976 / 0.2e1;
t722 = t976 / 0.2e1;
t709 = t718 * qJD(6);
t681 = t704 * qJ(6);
t680 = t1158 * t743 + t712;
t665 = t712 + (t1158 - qJD(5) / 0.2e1) * t743;
t488 = t1177 - t824;
t482 = t586 * qJD(2) - t1024 * t666;
t450 = t1232 * t1006;
t413 = -t1089 / 0.2e1 - t796;
t404 = -t587 * qJD(2) - (qJD(4) - t1024) * t666;
t375 = pkin(4) * t797 + t677;
t330 = t334 * qJD(4);
t320 = qJD(2) * t1286 + t1029 * t1231;
t317 = pkin(4) * t798 + t658;
t275 = t1052 * t1231;
t273 = t1291 + t590;
t270 = t785 + t842;
t269 = -t786 + t924;
t248 = t1175 - t1301;
t240 = t677 + t1291 + t1276 / 0.2e1 + t933 + t1231 * t1178;
t238 = -t1032 + t1052;
t237 = -t314 + t1052;
t228 = t410 * qJD(2) + t515;
t227 = -t1269 + t1310;
t188 = -t361 * qJD(2) + t744 * t844;
t174 = t1178 * t1232 + t1181 * t556 + t658 + t1275 / 0.2e1 - t1272 / 0.2e1;
t150 = t766 + t839;
t140 = t413 * qJD(2) - t556 * t914 + t1013;
t139 = t1260 - t1309;
t132 = -qJD(4) * t414 - qJD(5) * t410 + t1039;
t129 = (qJD(2) * t559 - t844) * t1232;
t128 = -t773 + t923;
t125 = t1121 / 0.2e1;
t110 = t767 + t841;
t108 = -qJD(4) * t415 + qJD(5) * t413 + t1017 * t1231 - t1039;
t80 = t745 - t905;
t76 = -t1029 * t559 + t1059;
t69 = t418 * t559 + t1059;
t55 = pkin(4) * t929 + t1231 * t658 + t1232 * t677 + t74;
t54 = pkin(4) * t908 - t556 * t677 - t609 * t658 + t75;
t49 = t768 - t836;
t48 = t1156 * t742 - t1228;
t47 = t353 - t831 + t903;
t45 = -t1162 * t974 + t1228;
t42 = t782 - t1225;
t37 = t352 - t774 + t907;
t35 = t1322 - t776 + t906;
t33 = t782 + t1222 + t1243;
t31 = t727 * t1175 + t764 - t903;
t29 = t1322 + t775 + t800;
t17 = t18 * qJD(5);
t15 = t769 - t837;
t12 = t792 - t1288;
t9 = t780 + t840;
t8 = t823 - t1289;
t6 = pkin(4) * t799 + t623 * t677 + t658 * t659 + t125 - t790;
t4 = t1295 + t1307 - t832 + t838;
t2 = t125 + t765 + t833;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t937, t711 * qJD(2), 0, -t937, 0, 0, -pkin(1) * t1017, -pkin(1) * t1016, 0, 0, t736 * t937, t919 * t1016, -t685 * qJD(2), t735 * t937, t683 * qJD(2), -t937, -t485 * qJD(2) + t741 * t939, t486 * qJD(2) - t740 * t939, -qJD(2) * t323 + qJD(3) * t682, qJD(2) * t365 - qJD(3) * t490 (-qJD(2) * t669 + t982) * t668, qJD(2) * t457 + qJD(4) * t489, -t561 * qJD(2) + t744 * t982 -(-qJD(2) * t667 + t1011) * t666, -t560 * qJD(2) - t1011 * t744, -t937, -t178 * qJD(2) - t327 * qJD(4) - t1014 * t668, t179 * qJD(2) + t326 * qJD(4) - t1014 * t666, qJD(2) * t97 + qJD(3) * t574, qJD(2) * t109 + qJD(3) * t236, t129, -t1247, t188, -t784, -t1215, -t937, -t56 * qJD(2) - t98 * qJD(4) - t131 * qJD(5) + t941, t57 * qJD(2) + t99 * qJD(4) + t130 * qJD(5) + t940, qJD(2) * t26 + qJD(4) * t27 + t1237, qJD(2) * t38 + qJD(3) * t71 + qJD(4) * t39, t129, t188, t1247, -t937, t1215, -t784, t44 * qJD(2) + t61 * qJD(4) + t68 * qJD(5) + t1232 * t989 + t941, t22 * qJD(2) + t24 * qJD(4) + t23 * qJD(5) - t744 * t989 + t1237, -t43 * qJD(2) - t62 * qJD(4) - t67 * qJD(5) + t513 * qJD(6) - t940, qJD(2) * t19 + qJD(3) * t70 + qJD(4) * t20 + qJD(5) * t21 - qJD(6) * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t712, t977, t1016, -t712, -t1017, 0, -t967 - t969, pkin(7) * t1017 - t968, 0, 0 (t736 * t976 + t942) * t744 (qJD(1) * t919 + (-t735 + t736) * qJD(2)) * t744, t1017 * t740 - t979 (t735 * t976 - t942) * t744, t1017 * t741 + t980, -t712, t740 * t783 - t741 * t967 - t991, t740 * t967 + t741 * t783 + t990, qJD(2) * t887 - t997, t996 + (-pkin(2) * t733 + qJ(3) * t887) * qJD(2) + t488 * qJD(3), -t669 * t851 - t1262, t993 + (-t1242 * t669 - t667 * t795) * qJD(2) + t330, -qJD(4) * t587 + t1017 * t795 - t1027, -t667 * t852 + t1262, -qJD(4) * t584 - t1017 * t1242 - t1028, -t680, -t1003 + (t1242 * t690 - t631 * t743 + t667 * t719) * qJD(2) - t585 * qJD(3) + t270 * qJD(4), t1002 + (-t632 * t743 + t669 * t719 + t690 * t795) * qJD(2) + t586 * qJD(3) + t269 * qJD(4), t1067 + (-t1242 * t471 - t470 * t795 + t631 * t669 - t632 * t667) * qJD(2) + t1152, t1004 + (-t470 * t631 + t471 * t632 + t690 * t719) * qJD(2) + t128 * qJD(3), t69, -t1302, t108, t1258, -qJD(4) * t1296 + qJD(5) * t1299 + t1257, -t665, -t1094 + (t555 * t659 - t609 * t624 + t1111) * qJD(2) - t1297 * qJD(3) + t54 * qJD(4) + t75 * qJD(5), t1093 + (t1231 * t624 + t559 * t659 - t1106) * qJD(2) + t995 + t55 * qJD(4) + t74 * qJD(5), t1116 + (-t1231 * t218 + t219 * t609 + t918) * qJD(2) + t12 * qJD(4) + t1233, t1113 + (t1317 * t219 + t218 * t385 + t624 * t659) * qJD(2) + t42 * qJD(3) + t6 * qJD(4) + t17, t69, t108, t1302, -t665, -qJD(4) * t1299 + qJD(5) * t1296 - t1257, t1258, t1102 + (-t309 * t609 + t382 * t555 + t1111) * qJD(2) + t1298 * qJD(3) + t31 * qJD(4) + t37 * qJD(5) + t248 * qJD(6), t1124 + (t1231 * t202 + t201 * t609 + t918) * qJD(2) + t1233 + t8 * qJD(4) + t9 * qJD(5) + t413 * qJD(6), -t1103 + (-t1231 * t309 - t382 * t559 + t1106) * qJD(2) - t995 + t29 * qJD(4) + t35 * qJD(5) + t450, t1138 + (t1317 * t201 - t202 * t385 + t309 * t382) * qJD(2) + t33 * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t47 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(2) * t740 + t741 * t976) * t744 (-t740 * t976 + t1018) * t744, t981, qJD(2) * t488 - t1031, 0, 0, 0, 0, 0, 0, -t915, t482, t855, qJD(2) * t128 + t1046, 0, 0, 0, 0, 0, 0, -t1244, t229, t1213, qJD(2) * t42 + qJD(4) * t317 + t1145, 0, 0, 0, 0, 0, 0, t227, t1213, -t229, qJD(2) * t33 + qJD(4) * t174 - qJD(6) * t549 + t1146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1251, t857, t404, t1251, -t804, t724, qJD(2) * t270 - qJD(4) * t463 - t1042, qJD(2) * t269 + qJD(4) * t462 + t1043, 0, 0, t137, -t874, -t791, t1216, -t1230, t724, qJD(2) * t54 - t1142 + t1150, qJD(2) * t55 + t1141 + t875, t1115 + t12 * qJD(2) + (-t1172 * t556 - t1232 * t742) * t1156, t1104 + t6 * qJD(2) + t317 * qJD(3) + (-t1172 * t225 + t226 * t742) * t1156, t137, -t791, t874, t724, t139, t1216, qJD(2) * t31 + t1148 + t1150, t1117 + t8 * qJD(2) + (-t1232 * t718 + t556 * t727) * qJD(4) + t110 * qJD(5) + t989, t29 * qJD(2) - t1005 - t1086 - t875, t1133 + t2 * qJD(2) + t174 * qJD(3) + (t225 * t727 + t226 * t718) * qJD(4) + t15 * qJD(5) + t80 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1250, t864, t140, t1250, -t1221 + t1309, t724, qJD(2) * t75 - t1047 + t961, qJD(2) * t74 + t1048 + t876, 0, t1140, -t1250, t140, -t864, t724, t1221 + t1312, t1250, qJD(2) * t37 + t1147 + t961, t9 * qJD(2) + t110 * qJD(4) + qJD(5) * t901 + t1118 + t989, t35 * qJD(2) - t1005 - t1084 - t876, t1125 + t4 * qJD(2) + t15 * qJD(4) + (-pkin(5) * t204 - qJ(6) * t203) * qJD(5) + t192 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t248 + t948, t140, -t1220, qJD(2) * t47 + qJD(4) * t80 + qJD(5) * t192 - t1068 - t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, -t977, 0, t712, 0, 0, t969, t968, 0, 0, -t736 * t712, 0.2e1 * t740 * t911, t979, -t735 * t712, -t980, t712, t991, -t990, t997, -qJD(3) * t487 - t996, t1025 * t669 - t1262, t330 - t993, -qJD(4) * t586 + t1027, -t1026 * t667 + t1262, -qJD(4) * t585 + t1028, t680, -qJD(3) * t584 - qJD(4) * t267 + t1003, qJD(3) * t587 - qJD(4) * t268 - t1002, -t1067 + t1152, -qJD(3) * t127 - t1004, t76, t1300, t132, t1256, -t1297 * t974 + t1241, t665, -qJD(3) * t1296 - qJD(4) * t53 - qJD(5) * t72 + t1094, -qJD(4) * t52 - qJD(5) * t73 + t1015 - t1093, -qJD(4) * t11 - t1116 + t1233, -qJD(3) * t41 - qJD(4) * t5 - t1113 + t17, t76, t132, -t1300, t665, -t1298 * t974 - t1241, t1256, qJD(3) * t1299 + qJD(4) * t30 - qJD(5) * t36 - qJD(6) * t247 - t1102, -qJD(4) * t7 + qJD(5) * t10 - qJD(6) * t410 - t1124 + t1233, -qJD(4) * t28 - qJD(5) * t34 - t1015 + t1103 + t450, -qJD(3) * t32 - qJD(4) * t1 - qJD(5) * t3 - qJD(6) * t46 - t1138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t710 * qJD(3), t693 * qJD(3), -t938, t566 * qJD(4), 0, t938, 0, 0, t719 * t1010, -t719 * t678, qJD(3) * t629, qJD(3) * t405, t275, t1249, 0, -t801, 0, 0, -qJD(4) * t324 + t1007 * t1231, -qJD(4) * t325 + t1007 * t609, t1212, qJD(4) * t77 + t1236, t275, 0, -t1249, 0, 0, -t801, qJD(4) * t142 + qJD(5) * t148 + t1231 * t983, t1212, qJD(4) * t143 + qJD(5) * t149 + qJD(6) * t1286, qJD(4) * t51 + qJD(5) * t58 - t1006 * t382 + t1236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t978, -t853, 0, 0, 0, 0, 0, 0, -t987, t984, t854, -t865, 0, 0, 0, 0, 0, 0, t582 - t1038, t994, t1214, qJD(4) * t375 - t885, 0, 0, 0, 0, 0, 0, t582 + t1033, t1214, -t994, qJD(4) * t240 + qJD(5) * t273 - qJD(6) * t604 - t886; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1253, t856, -t678 - t985, t1253, -t986 - t1010, t723, -qJD(4) * t632 + t1019 * t795 - t1045, qJD(4) * t631 - t1019 * t1242 - t1044, 0, 0, t152, -t873, t238, t1218, -t1315 - t1053, t723, -t880 - t1062, -t1323 - t879 (-t1172 * t609 - t1231 * t742) * t1156 - t895, t375 * qJD(3) + (-t1172 * t1317 + t385 * t742) * t1156 + t897, t152, t238, t873, t723, -t1314 + t1053, t1218, -t884 - t1062 (-t1231 * t718 + t609 * t727) * qJD(4) + t150 * qJD(5) + t983 - t896, t1323 - t883, t240 * qJD(3) + (t1317 * t727 + t385 * t718) * qJD(4) + t49 * qJD(5) + t1324 + t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1252, t863, t237, t1252, -t846 - t1315, t723, -t820 + t959, -t821 - t1323, 0, t1149, -t1252, t237, -t863, t723, t846 - t1314, t1252, -t882 + t959, t150 * qJD(4) + qJD(5) * t900 + t1139 + t983, t1323 - t881, t273 * qJD(3) + t49 * qJD(4) + (-pkin(5) * t1317 + t385 * qJ(6)) * qJD(5) + t1324 + t898; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t819, t237, t320, -t822 - t959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t911, t740 * t712, -t981, qJD(2) * t487 + t1031, 0, 0, 0, 0, 0, 0, t804, t404, -t855, qJD(2) * t127 - t1046, 0, 0, 0, 0, 0, 0, t1230, -t791, -t1213, qJD(2) * t41 - qJD(4) * t316 - t1145, 0, 0, 0, 0, 0, 0, t139, -t1213, t791, qJD(2) * t32 + qJD(4) * t175 + qJD(5) * t217 - qJD(6) * t474 - t1146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t978, t853, 0, 0, 0, 0, 0, 0, t987 + t1010, -t678 - t984, -t854, t865, 0, 0, 0, 0, 0, 0, t1038 + t1053, -t1229, -t1214, -qJD(4) * t374 + t885, 0, 0, 0, 0, 0, 0, -t1033 + t1053, -t1214, t1229, -qJD(4) * t239 + qJD(5) * t274 - qJD(6) * t505 + t886; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t851, t852, 0, 0, 0, 0, 0, 0, 0, 0, t418, t420, 0, -t858, 0, 0, 0, 0, 0, 0, t418, 0, -t420, t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t420, 0, 0, 0, 0, 0, 0, 0, 0, t312, 0, -t420, t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1251, -t857, t482, -t1251, t915, t724, qJD(2) * t267 + qJD(3) * t668 + t1042, qJD(2) * t268 + qJD(3) * t666 - t1043, 0, 0, -t137, t874, t229, -t1216, t1244, t724, qJD(2) * t53 + t1142 + t1151, qJD(2) * t52 - t1141 + t877, qJD(2) * t11 - t1115, qJD(2) * t5 + qJD(3) * t316 - t1104, -t137, t229, -t874, t724, t227, -t1216, -qJD(2) * t30 - t1148 + t1151, qJD(2) * t7 + qJD(5) * t111 - t1117, t28 * qJD(2) - t1005 + t1086 - t877, qJD(2) * t1 - qJD(3) * t175 + qJD(5) * t16 - qJD(6) * t79 - t1133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, -t856, t985, -t1253, t986, t722, -t795 * t913 + t1045, t1242 * t913 + t1044, 0, 0, -t152, t873, t1032, -t1218, -t582 + t1315, t722, t880 - t1063, -t1268 + t879, t895, qJD(3) * t374 - t897, -t152, t1032, -t873, t722, t582 + t1314, -t1218, t884 - t1063, qJD(5) * t151 + t896, t1268 + t883, qJD(3) * t239 + qJD(5) * t50 - t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t851, -t852, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t420, 0, t858, 0, 0, 0, 0, 0, 0, -t418, 0, t420, -t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t966, -t731, 0, 0, 0, 0, 0, 0, 0, 0, -t966, 0, t975, qJD(5) * t662 + t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, 0, t45, -t731 - t960, 0, 0, 0, 0, 0, 0, t394, 0, t45, t866, t960 + t975 (-pkin(5) * t742 + qJ(6) * t1172) * t1155 + t709 + t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t704, t718 * t974 - t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1250, -t864, t228, -t1250, -t805 + t1311, t724, qJD(2) * t72 + t1047 + t1153, qJD(2) * t73 - t1048 + t878, 0, -t1140, t1250, t228, t864, t724, t805 + t1310, -t1250, qJD(2) * t36 - t1147 + t1153, -qJD(2) * t10 - qJD(4) * t111 - t1118, t34 * qJD(2) - t1005 + t1084 - t878, -qJ(6) * t1005 + t3 * qJD(2) - t217 * qJD(3) - t16 * qJD(4) - t1125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1252, -t863, t314, -t1252, t1012 + t1315, t722, t820 - t1064, t821 - t1268, 0, -t1149, t1252, t314, t863, t722, -t1012 + t1314, -t1252, t882 - t1064, -qJD(4) * t151 - t1139, t1268 + t881, -qJD(3) * t274 - qJD(4) * t50 - t898; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, -t420, 0, 0, 0, 0, 0, 0, 0, 0, -t312, 0, t420, -t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t394, 0, t48, t960, 0, 0, 0, 0, 0, 0, -t394, 0, t48, -t866, qJD(6) - t960, t737 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t737; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t704, -t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t247 - t948, t228, t1220, t46 * qJD(2) + t79 * qJD(4) + t1049 * t744 + t1068 + t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t819, t314, -t320, t822 + t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t704, -qJD(4) * t718 - t1049 + t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t704, t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
