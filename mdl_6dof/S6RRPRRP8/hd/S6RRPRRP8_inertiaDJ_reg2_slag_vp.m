% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP8_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:25:21
% EndTime: 2019-03-09 12:25:31
% DurationCPUTime: 4.06s
% Computational Cost: add. (7379->344), mult. (17455->584), div. (0->0), fcn. (16487->8), ass. (0->163)
t117 = sin(pkin(10));
t118 = cos(pkin(10));
t214 = sin(qJ(4));
t180 = qJD(4) * t214;
t216 = cos(qJ(4));
t181 = qJD(4) * t216;
t207 = t117 * t181 + t118 * t180;
t210 = pkin(8) + qJ(3);
t218 = t216 * t210;
t227 = -t216 * pkin(9) - t218;
t120 = sin(qJ(2));
t147 = t216 * t117 + t214 * t118;
t221 = t120 * t147;
t226 = qJD(2) * t221;
t176 = t214 * qJD(3);
t225 = -qJD(4) * t218 - t176;
t219 = t214 * t210;
t224 = -t216 * qJD(3) + qJD(4) * t219;
t170 = t118 * t181;
t99 = t117 * t180;
t156 = t99 - t170;
t223 = -0.2e1 * t156;
t222 = 0.2e1 * t207;
t121 = cos(qJ(2));
t205 = qJD(2) * t121;
t171 = t214 * t205;
t172 = t216 * t205;
t144 = t117 * t171 - t118 * t172 + t207 * t120;
t220 = t144 * t147;
t119 = sin(qJ(5));
t146 = t214 * t117 - t216 * t118;
t215 = cos(qJ(5));
t63 = t119 * t147 + t215 * t146;
t217 = (t120 ^ 2 - t121 ^ 2) * qJD(2);
t111 = qJD(2) * t120;
t193 = pkin(4) * t111;
t213 = pkin(2) * t120;
t150 = -t210 * t121 + t213;
t202 = t120 * qJD(3);
t183 = t118 * t202;
t212 = t117 * pkin(7);
t190 = pkin(3) + t212;
t129 = -t183 + (t150 * t118 + t190 * t120) * qJD(2);
t185 = t117 * t202;
t112 = t120 * pkin(7);
t195 = t118 * t112;
t130 = -t185 + (t150 * t117 - t195) * qJD(2);
t211 = t121 * pkin(2);
t131 = -t190 * t121 + (-t210 * t120 - pkin(1) - t211) * t118;
t61 = t214 * t131;
t208 = t117 * t120;
t103 = t118 * t121 * pkin(7);
t160 = -t120 * qJ(3) - t211;
t157 = -pkin(1) + t160;
t74 = t117 * t157 + t103;
t69 = -pkin(8) * t208 + t74;
t26 = -qJD(4) * t61 + t216 * t129 - t214 * t130 - t69 * t181;
t123 = t144 * pkin(9) + t193 + t26;
t197 = -t117 * t172 - t118 * t171 - t120 * t170;
t143 = -t120 * t99 - t197;
t62 = t216 * t131;
t25 = -qJD(4) * t62 - t214 * t129 - t216 * t130 + t69 * t180;
t17 = -t143 * pkin(9) - t25;
t42 = -t214 * t69 + t62;
t80 = t146 * t120;
t34 = -t121 * pkin(4) + t80 * pkin(9) + t42;
t43 = t216 * t69 + t61;
t39 = -pkin(9) * t221 + t43;
t209 = t119 * t34 + t215 * t39;
t4 = -qJD(5) * t209 - t119 * t17 + t215 * t123;
t50 = -t225 * t117 + t224 * t118;
t122 = 2 * qJD(6);
t71 = -t117 * t219 + t118 * t218;
t109 = pkin(7) * t205;
t186 = t117 * t205;
t83 = pkin(3) * t186 + t109;
t87 = pkin(3) * t208 + t112;
t204 = qJD(3) * t121;
t203 = qJD(5) * t119;
t201 = t121 * qJD(6);
t138 = t119 * t221;
t179 = qJD(5) * t215;
t28 = -qJD(5) * t138 - t119 * t144 + t215 * t143 - t80 * t179;
t134 = t215 * t221;
t56 = -t119 * t80 + t134;
t200 = 0.2e1 * t56 * t28;
t64 = -t119 * t146 + t215 * t147;
t41 = t64 * qJD(5) - t119 * t156 + t215 * t207;
t199 = 0.2e1 * t63 * t41;
t198 = -0.2e1 * pkin(1) * qJD(2);
t196 = t121 * t212;
t192 = pkin(5) * t111;
t191 = pkin(4) * t203;
t106 = -t118 * pkin(3) - pkin(2);
t133 = t224 * t117;
t124 = t99 * pkin(9) + (t227 * qJD(4) - t176) * t118 + t133;
t125 = -t207 * pkin(9) - t50;
t128 = (-t214 * pkin(9) - t219) * t118 + t227 * t117;
t126 = t215 * t128;
t58 = -t146 * pkin(9) + t71;
t11 = -qJD(5) * t126 - t119 * t124 - t215 * t125 + t58 * t203;
t127 = t119 * t128;
t12 = qJD(5) * t127 + t119 * t125 - t215 * t124 + t58 * t179;
t37 = t119 * t58 - t126;
t38 = t215 * t58 + t127;
t189 = -t38 * t11 + t37 * t12;
t184 = t118 * t205;
t182 = t120 * t205;
t178 = t207 * pkin(4);
t174 = 0.2e1 * t182;
t173 = t117 * t184;
t113 = t117 ^ 2;
t114 = t118 ^ 2;
t169 = 0.2e1 * (t113 + t114) * qJD(3);
t168 = -0.2e1 * t217;
t27 = qJD(5) * t134 + t119 * t143 + t215 * t144 - t80 * t203;
t57 = -t215 * t80 - t138;
t163 = t27 * t56 - t57 * t28;
t162 = t28 * t63 + t56 * t41;
t40 = t63 * qJD(5) + t119 * t207 + t215 * t156;
t161 = t40 * t63 - t64 * t41;
t159 = -qJ(3) * t121 + t213;
t67 = -t183 + (pkin(7) * t208 + t118 * t159) * qJD(2);
t68 = -t185 + (t117 * t159 - t195) * qJD(2);
t158 = -t67 * t117 + t68 * t118;
t21 = -t119 * t39 + t215 * t34;
t154 = -t11 * t121 - t38 * t111;
t153 = -t37 * t111 + t12 * t121;
t152 = t56 * t111 - t121 * t28;
t151 = t63 * t111 - t121 * t41;
t3 = -t119 * t123 - t215 * t17 - t34 * t179 + t39 * t203;
t149 = t11 * t56 + t12 * t57 - t37 * t27 - t38 * t28;
t107 = qJ(6) * t111;
t148 = t107 - t3;
t145 = 0.2e1 * t11 * t63 + 0.2e1 * t12 * t64 - 0.2e1 * t37 * t40 - 0.2e1 * t38 * t41;
t139 = t27 * t63 - t64 * t28 + t40 * t56 - t57 * t41;
t47 = t143 * pkin(4) + t83;
t76 = t146 * pkin(4) + t106;
t66 = pkin(4) * t221 + t87;
t132 = t121 * t191 + t4;
t110 = pkin(4) * t179;
t108 = -t215 * pkin(4) - pkin(5);
t105 = t119 * pkin(4) + qJ(6);
t104 = -0.2e1 * t191;
t98 = t110 + qJD(6);
t97 = -0.2e1 * t182;
t73 = t118 * t157 - t196;
t70 = -t117 * t218 - t118 * t219;
t51 = t225 * t118 + t133;
t36 = t63 * pkin(5) - t64 * qJ(6) + t76;
t31 = -0.2e1 * t64 * t40;
t30 = t64 * t111 + t40 * t121;
t29 = t56 * pkin(5) - t57 * qJ(6) + t66;
t23 = -0.2e1 * t57 * t27;
t20 = 0.2e1 * t57 * t111 + 0.2e1 * t27 * t121;
t19 = t121 * pkin(5) - t21;
t18 = -t121 * qJ(6) + t209;
t15 = t41 * pkin(5) + t40 * qJ(6) - t64 * qJD(6) + t178;
t7 = -t27 * t64 - t57 * t40;
t5 = t28 * pkin(5) + t27 * qJ(6) - t57 * qJD(6) + t47;
t2 = -t192 - t4;
t1 = t148 - t201;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, t168, 0, t97, 0, 0, t120 * t198, t121 * t198, 0, 0, t114 * t174, -0.4e1 * t120 * t173, 0.2e1 * t118 * t217, t113 * t174, t117 * t168, t97, -0.2e1 * t67 * t121 + 0.2e1 * (t73 + 0.2e1 * t196) * t111, 0.2e1 * t68 * t121 + 0.2e1 * (-t74 + 0.2e1 * t103) * t111, 0.2e1 * (-t117 * t68 - t118 * t67) * t120 + 0.2e1 * (-t117 * t74 - t118 * t73) * t205, 0.2e1 * pkin(7) ^ 2 * t182 + 0.2e1 * t73 * t67 + 0.2e1 * t74 * t68, 0.2e1 * t80 * t144, -0.2e1 * t80 * t197 + 0.2e1 * (-t80 * t99 + t220) * t120, -0.2e1 * t80 * t111 + 0.2e1 * t144 * t121, 0.2e1 * t143 * t221, -0.2e1 * t197 * t121 + 0.2e1 * (-t99 * t121 - t226) * t120, t97, 0.2e1 * t42 * t111 - 0.2e1 * t26 * t121 + 0.2e1 * t143 * t87 + 0.2e1 * t221 * t83, -0.2e1 * t43 * t111 - 0.2e1 * t25 * t121 - 0.2e1 * t144 * t87 - 0.2e1 * t83 * t80, -0.2e1 * t143 * t43 + 0.2e1 * t144 * t42 + 0.2e1 * t221 * t25 + 0.2e1 * t26 * t80, -0.2e1 * t43 * t25 + 0.2e1 * t42 * t26 + 0.2e1 * t87 * t83, t23, 0.2e1 * t163, t20, t200, -0.2e1 * t152, t97, 0.2e1 * t21 * t111 - 0.2e1 * t4 * t121 + 0.2e1 * t66 * t28 + 0.2e1 * t47 * t56, -0.2e1 * t111 * t209 - 0.2e1 * t3 * t121 - 0.2e1 * t66 * t27 + 0.2e1 * t47 * t57, -0.2e1 * t209 * t28 + 0.2e1 * t21 * t27 + 0.2e1 * t3 * t56 - 0.2e1 * t4 * t57, -0.2e1 * t209 * t3 + 0.2e1 * t21 * t4 + 0.2e1 * t66 * t47, t23, t20, -0.2e1 * t163, t97, 0.2e1 * t152, t200, -0.2e1 * t19 * t111 + 0.2e1 * t2 * t121 + 0.2e1 * t29 * t28 + 0.2e1 * t5 * t56, -0.2e1 * t1 * t56 - 0.2e1 * t18 * t28 - 0.2e1 * t19 * t27 + 0.2e1 * t2 * t57, -0.2e1 * t1 * t121 + 0.2e1 * t18 * t111 + 0.2e1 * t29 * t27 - 0.2e1 * t5 * t57, 0.2e1 * t18 * t1 + 0.2e1 * t19 * t2 + 0.2e1 * t29 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, 0, -t111, 0, -t109, pkin(7) * t111, 0, 0, t173 (-t113 + t114) * t205, t117 * t111, -t173, t118 * t111, 0, t117 * t204 + (t160 * t117 - t103) * qJD(2), t118 * t204 + (t160 * t118 + t196) * qJD(2), t158, -pkin(2) * t109 + (-t117 * t73 + t118 * t74) * qJD(3) + t158 * qJ(3), t80 * t156 - t220, -t147 * t143 + t144 * t146 + t156 * t221 + t80 * t207, t156 * t121 + t226, t143 * t146 + t207 * t221, -t146 * t111 + t207 * t121, 0, t106 * t143 + t70 * t111 - t51 * t121 + t83 * t146 + t87 * t207, -t106 * t144 - t71 * t111 - t50 * t121 + t147 * t83 - t156 * t87, -t71 * t143 + t70 * t144 + t25 * t146 - t26 * t147 + t42 * t156 - t43 * t207 + t221 * t50 + t51 * t80, t83 * t106 - t25 * t71 + t26 * t70 + t42 * t51 - t43 * t50, t7, t139, t30, t162, -t151, 0, t56 * t178 + t76 * t28 + t66 * t41 + t47 * t63 + t153, t57 * t178 - t76 * t27 - t66 * t40 + t47 * t64 + t154, -t209 * t41 + t21 * t40 + t3 * t63 - t4 * t64 + t149, -t11 * t209 - t21 * t12 + t66 * t178 - t3 * t38 - t4 * t37 + t47 * t76, t7, t30, -t139, 0, t151, t162, t15 * t56 + t36 * t28 + t29 * t41 + t5 * t63 + t153, -t1 * t63 - t18 * t41 - t19 * t40 + t2 * t64 + t149, -t15 * t57 + t36 * t27 + t29 * t40 - t5 * t64 - t154, t1 * t38 - t18 * t11 + t19 * t12 + t29 * t15 + t2 * t37 + t5 * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, qJ(3) * t169, t147 * t223, 0.2e1 * t156 * t146 - 0.2e1 * t147 * t207, 0, t146 * t222, 0, 0, t106 * t222, t106 * t223, 0.2e1 * t50 * t146 - 0.2e1 * t51 * t147 + 0.2e1 * t70 * t156 - 0.2e1 * t71 * t207, -0.2e1 * t71 * t50 + 0.2e1 * t70 * t51, t31, 0.2e1 * t161, 0, t199, 0, 0, 0.2e1 * t63 * t178 + 0.2e1 * t76 * t41, 0.2e1 * t64 * t178 - 0.2e1 * t76 * t40, t145, 0.2e1 * t76 * t178 + 0.2e1 * t189, t31, 0, -0.2e1 * t161, 0, 0, t199, 0.2e1 * t15 * t63 + 0.2e1 * t36 * t41, t145, -0.2e1 * t15 * t64 + 0.2e1 * t36 * t40, 0.2e1 * t36 * t15 + 0.2e1 * t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, t184, 0, t109, 0, 0, 0, 0, 0, 0, t143, -t144, 0, t83, 0, 0, 0, 0, 0, 0, t28, -t27, 0, t47, 0, 0, 0, 0, 0, 0, t28, 0, t27, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, -t156, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t40, 0, t178, 0, 0, 0, 0, 0, 0, t41, 0, t40, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, 0, -t143, t111, t26, t25, 0, 0, 0, 0, -t27, 0, -t28, t111, t215 * t193 + t132 (-t119 * t111 + t121 * t179) * pkin(4) + t3 (t215 * t27 - t119 * t28 + (t119 * t57 - t215 * t56) * qJD(5)) * pkin(4) (t215 * t4 - t119 * t3 + (-t119 * t21 + t209 * t215) * qJD(5)) * pkin(4), 0, -t27, 0, t111, t28, 0 (pkin(5) - t108) * t111 + t132, -t105 * t28 - t108 * t27 + t191 * t57 - t98 * t56, t105 * t111 + (-qJD(6) - t98) * t121 + t148, t1 * t105 + t2 * t108 + t18 * t98 + t19 * t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, 0, -t207, 0, t51, t50, 0, 0, 0, 0, -t40, 0, -t41, 0, -t12, t11 (t215 * t40 - t119 * t41 + (t119 * t64 - t215 * t63) * qJD(5)) * pkin(4) (-t215 * t12 - t11 * t119 + (t119 * t37 + t215 * t38) * qJD(5)) * pkin(4), 0, -t40, 0, 0, t41, 0, -t12, -t105 * t41 - t108 * t40 + t191 * t64 - t98 * t63, -t11, -t11 * t105 + t12 * t108 + t191 * t37 + t38 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -0.2e1 * t110, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, 0.2e1 * t98, 0.2e1 * t105 * t98 + 0.2e1 * t108 * t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, -t28, t111, t4, t3, 0, 0, 0, -t27, 0, t111, t28, 0, t4 + 0.2e1 * t192, pkin(5) * t27 - t28 * qJ(6) - t56 * qJD(6), 0.2e1 * t107 - t3 - 0.2e1 * t201, -t2 * pkin(5) + t1 * qJ(6) + t18 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, 0, -t41, 0, -t12, t11, 0, 0, 0, -t40, 0, 0, t41, 0, -t12, pkin(5) * t40 - t41 * qJ(6) - t63 * qJD(6), -t11, -t12 * pkin(5) - t11 * qJ(6) + t38 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, -t110, 0, 0, 0, 0, 0, 0, 0, 0, -t191, 0, t122 + t110, -pkin(5) * t191 + t98 * qJ(6) + t105 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, qJ(6) * t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, -t27, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, 0, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
