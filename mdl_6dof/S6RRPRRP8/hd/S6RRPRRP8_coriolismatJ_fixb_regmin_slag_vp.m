% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:25:20
% EndTime: 2019-03-09 12:26:04
% DurationCPUTime: 27.03s
% Computational Cost: add. (24364->835), mult. (51495->1026), div. (0->0), fcn. (56977->8), ass. (0->592)
t735 = qJD(4) + qJD(5);
t566 = cos(qJ(4));
t562 = sin(pkin(10));
t563 = cos(pkin(10));
t567 = cos(qJ(2));
t565 = sin(qJ(2));
t874 = pkin(8) + qJ(3);
t876 = t567 * pkin(2);
t612 = -t565 * t874 - pkin(1) - t876;
t583 = (-pkin(7) * t562 - pkin(3)) * t567 + t612 * t563;
t821 = t563 * t567;
t734 = pkin(7) * t821;
t588 = t562 * t612 + t734;
t886 = sin(qJ(4));
t319 = -t566 * t583 + t588 * t886;
t714 = t886 * t562;
t810 = t566 * t563;
t512 = -t714 + t810;
t497 = t512 * t565;
t272 = -t497 * pkin(9) - t319;
t875 = t567 * pkin(4);
t572 = t272 - t875;
t887 = cos(qJ(5));
t231 = t887 * t572;
t320 = t566 * t588 + t583 * t886;
t811 = t566 * t562;
t624 = t886 * t563 + t811;
t495 = t624 * t565;
t273 = -t495 * pkin(9) + t320;
t564 = sin(qJ(5));
t819 = t564 * t273;
t128 = -t231 + t819;
t122 = pkin(5) * t567 + t128;
t718 = t887 * t272;
t149 = t718 - t819;
t990 = t122 + t149;
t442 = t887 * t512 - t564 * t624;
t695 = t887 * t495 + t564 * t497;
t542 = -pkin(3) * t563 - pkin(2);
t490 = -pkin(4) * t512 + t542;
t899 = -t490 / 0.2e1;
t554 = t565 * pkin(7);
t823 = t562 * t565;
t515 = pkin(3) * t823 + t554;
t454 = pkin(4) * t495 + t515;
t900 = -t454 / 0.2e1;
t628 = t442 * t900 - t695 * t899;
t498 = t512 * t567;
t524 = t565 * pkin(2) - qJ(3) * t567;
t539 = pkin(7) * t823;
t491 = t563 * t524 + t539;
t451 = t565 * pkin(3) - pkin(8) * t821 + t491;
t435 = t566 * t451;
t492 = t562 * t524 - t554 * t563;
t822 = t562 * t567;
t460 = -pkin(8) * t822 + t492;
t715 = t886 * t460;
t682 = -t715 + t435;
t270 = t565 * pkin(4) - t498 * pkin(9) + t682;
t248 = t564 * t270;
t434 = t886 * t451;
t456 = t566 * t460;
t794 = t456 + t434;
t939 = t624 * t567;
t274 = -pkin(9) * t939 + t794;
t271 = t887 * t274;
t802 = t248 / 0.2e1 + t271 / 0.2e1;
t686 = t886 * t874;
t400 = (-pkin(9) * t886 - t686) * t563 + (-pkin(9) - t874) * t811;
t696 = t874 * t562;
t462 = -t696 * t886 + t810 * t874;
t401 = t512 * pkin(9) + t462;
t268 = t887 * t400 - t564 * t401;
t964 = t268 * t567;
t977 = t964 / 0.2e1;
t52 = -t628 + t977 - t802;
t978 = -t964 / 0.2e1;
t51 = t628 + t978 - t802;
t828 = t442 ^ 2;
t813 = t564 * t512;
t938 = t887 * t624;
t943 = t938 + t813;
t971 = t943 ^ 2;
t984 = t828 - t971;
t989 = qJD(2) * t984;
t484 = t887 * t939;
t814 = t564 * t498;
t793 = t814 / 0.2e1 + t484 / 0.2e1;
t963 = t943 * t567;
t979 = t963 / 0.2e1;
t286 = t979 + t793;
t988 = t286 * qJD(2);
t975 = t442 * qJ(6);
t987 = -t975 / 0.2e1;
t485 = t887 * t497;
t816 = t564 * t495;
t937 = t485 - t816;
t980 = t442 / 0.2e1;
t986 = t937 * t980;
t576 = t564 * t400;
t717 = t887 * t401;
t934 = t717 + t576;
t948 = t934 * t567;
t238 = t948 / 0.2e1;
t679 = pkin(5) * t695 - qJ(6) * t937;
t206 = t454 + t679;
t678 = -pkin(5) * t442 - qJ(6) * t943;
t265 = t490 + t678;
t955 = t937 / 0.2e1;
t968 = t943 / 0.2e1;
t632 = t206 * t968 + t265 * t955;
t985 = t238 + t632;
t719 = t887 * t270;
t818 = t564 * t274;
t800 = t719 / 0.2e1 - t818 / 0.2e1;
t239 = -t948 / 0.2e1;
t974 = t937 * t899 + t943 * t900 + t239;
t53 = -t974 + t800;
t50 = t974 + t800;
t967 = t943 * pkin(5);
t316 = -t975 + t967;
t981 = 0.2e1 * pkin(5);
t904 = -t442 / 0.2e1;
t976 = t265 * t442;
t775 = qJD(2) * t943;
t711 = t442 * t775;
t837 = t695 ^ 2;
t959 = t937 ^ 2;
t962 = t837 - t959;
t973 = qJD(1) * t962;
t972 = qJD(3) * t442;
t293 = -qJD(1) * t695 + qJD(2) * t442;
t795 = t735 * t442;
t970 = -t268 / 0.2e1;
t969 = -t943 / 0.2e1;
t966 = t265 * t943;
t778 = qJD(1) * t937;
t291 = t775 + t778;
t950 = t695 * qJ(6);
t954 = t937 * pkin(5);
t259 = t950 + t954;
t877 = t565 * pkin(5);
t681 = -t877 / 0.2e1 - t800;
t960 = t735 * t268;
t958 = t542 / 0.2e1;
t957 = t695 / 0.2e1;
t956 = -t937 / 0.2e1;
t594 = t938 / 0.2e1;
t953 = t206 * t695;
t848 = t206 * t937;
t952 = t454 * t695;
t951 = t454 * t937;
t737 = t567 * qJD(1);
t361 = t695 * t737;
t712 = t695 * t778;
t360 = t937 * t737;
t689 = t485 / 0.2e1;
t388 = t689 - t485 / 0.2e1;
t946 = -t388 * qJD(5) - t360;
t437 = t594 - t938 / 0.2e1;
t415 = t437 * qJD(5);
t705 = -t963 / 0.2e1;
t674 = t705 + t793;
t929 = qJD(1) * t674;
t945 = t415 - t929;
t356 = 0.2e1 * t594 + t813;
t796 = qJD(4) * t943 + t356 * qJD(5);
t944 = t929 + t796;
t749 = qJD(3) * t695;
t690 = -qJD(5) + t737;
t529 = -qJD(4) + t690;
t575 = t576 / 0.2e1;
t941 = t624 / 0.2e1;
t605 = t624 * qJD(2);
t742 = t497 * qJD(1);
t592 = t605 + t742;
t283 = t705 - t793;
t936 = qJD(2) * t283 + t946;
t327 = 0.2e1 * t689 - t816;
t385 = t937 * qJD(4);
t935 = qJD(2) * t674 + t327 * qJD(5) - t360 + t385;
t716 = t887 * t498;
t815 = t564 * t939;
t610 = t815 / 0.2e1 - t716 / 0.2e1;
t888 = t567 / 0.2e1;
t702 = t442 * t888;
t289 = t702 + t610;
t754 = t289 * qJD(1);
t932 = t754 - t795;
t260 = t887 * t273;
t571 = t564 * t572;
t570 = -t571 / 0.2e1 - t260 / 0.2e1;
t725 = t875 / 0.2e1;
t569 = t564 * t725 + t570;
t820 = t564 * t272;
t683 = t260 / 0.2e1 + t820 / 0.2e1;
t62 = t569 + t683;
t147 = t575 - t576 / 0.2e1;
t759 = t147 * qJD(2);
t931 = -qJD(1) * t62 + t759;
t878 = t564 * pkin(4);
t541 = qJ(6) + t878;
t809 = t567 * qJ(6);
t889 = -t567 / 0.2e1;
t568 = t541 * t889 - t809 / 0.2e1 - t570;
t54 = -t568 + t683;
t930 = -qJD(1) * t54 + t759;
t613 = -t231 / 0.2e1 + t887 * t725;
t64 = t718 / 0.2e1 + t613;
t731 = t887 * pkin(4);
t723 = t64 * qJD(1) - qJD(4) * t731;
t928 = qJD(3) * t674;
t744 = t442 * qJD(6);
t604 = t624 * qJD(4);
t750 = t695 * qJD(6);
t146 = t717 + 0.2e1 * t575;
t720 = t437 * qJD(3) - t146 * qJD(4) - qJD(5) * t934;
t561 = t567 ^ 2;
t359 = t561 + t959;
t927 = -t359 * qJD(1) + t567 * t735 - t775 * t937;
t644 = t735 * t695;
t925 = -pkin(5) / 0.2e1;
t924 = pkin(5) / 0.2e1;
t923 = -qJ(6) / 0.2e1;
t922 = qJ(6) / 0.2e1;
t921 = -t122 / 0.2e1;
t920 = -t206 / 0.2e1;
t919 = -t265 / 0.2e1;
t918 = t268 / 0.2e1;
t915 = -t934 / 0.2e1;
t912 = -t695 / 0.2e1;
t898 = -t497 / 0.2e1;
t897 = t512 / 0.2e1;
t896 = -t541 / 0.2e1;
t895 = t541 / 0.2e1;
t549 = -t731 - pkin(5);
t894 = -t549 / 0.2e1;
t893 = t549 / 0.2e1;
t555 = t567 * pkin(7);
t892 = t555 / 0.2e1;
t891 = t564 / 0.2e1;
t890 = -t565 / 0.2e1;
t393 = t484 + t814;
t884 = t393 * pkin(5);
t880 = t939 * pkin(4);
t879 = t497 * pkin(4);
t630 = (t904 - t980) * t695;
t631 = 0.2e1 * t969 * t937;
t72 = t630 + t631;
t91 = -t442 * t695 - t937 * t943;
t873 = t72 * qJD(4) + t91 * qJD(5);
t872 = pkin(4) * qJD(5);
t699 = t128 / 0.2e1 + t921;
t129 = t260 + t571;
t120 = t129 - t809;
t700 = t120 / 0.2e1 - t129 / 0.2e1;
t593 = -t442 * t699 - t700 * t943;
t397 = t716 - t815;
t640 = t393 * t923 + t397 * t925;
t8 = t593 - t640;
t871 = t8 * qJD(1);
t318 = t327 * qJD(3);
t870 = -t62 * qJD(4) - t318;
t386 = t937 * qJD(3);
t869 = t62 * qJD(5) - t386;
t148 = t260 + t820;
t63 = t569 - t683;
t868 = -t148 * qJD(4) + t63 * qJD(5);
t216 = t879 + t259;
t852 = t148 * t567;
t43 = t216 * t695 + t848 + t852;
t867 = qJD(1) * t43;
t855 = t129 * t567;
t48 = t259 * t695 + t848 + t855;
t866 = qJD(1) * t48;
t49 = -t120 * t695 + t122 * t937;
t865 = qJD(1) * t49;
t67 = -t695 * t879 - t852 - t951;
t862 = qJD(1) * t67;
t851 = t149 * t567;
t68 = t879 * t937 + t851 - t952;
t861 = qJD(1) * t68;
t856 = t128 * t567;
t83 = -t856 - t952;
t860 = qJD(1) * t83;
t84 = -t855 - t951;
t859 = qJD(1) * t84;
t798 = t271 + t248;
t812 = t565 * qJ(6);
t126 = t798 + t812;
t625 = t719 - t818;
t127 = -t625 - t877;
t538 = pkin(3) * t822;
t516 = t555 + t538;
t455 = t516 + t880;
t835 = t397 * qJ(6);
t207 = t455 - t835 + t884;
t11 = t120 * t126 + t122 * t127 + t206 * t207;
t858 = t11 * qJD(1);
t12 = t120 * t149 + t122 * t148 + t206 * t216;
t857 = t12 * qJD(1);
t13 = -t120 * t128 + t122 * t129 + t206 * t259;
t854 = t13 * qJD(1);
t14 = -t120 * t393 + t122 * t397 - t126 * t695 + t127 * t937;
t853 = t14 * qJD(1);
t15 = (-t120 + t129) * t937 + (-t122 + t128) * t695;
t850 = t15 * qJD(1);
t16 = (-t120 + t148) * t937 - t990 * t695;
t849 = t16 * qJD(1);
t846 = t268 * t565;
t843 = t934 * t565;
t27 = -t120 * t565 + t126 * t567 + t206 * t397 + t207 * t937;
t841 = t27 * qJD(1);
t28 = -t122 * t565 + t127 * t567 + t206 * t393 + t207 * t695;
t840 = t28 * qJD(1);
t40 = t128 * t565 - t454 * t393 - t455 * t695 + t567 * t625;
t834 = t40 * qJD(1);
t41 = -t129 * t565 + t454 * t397 + t455 * t937 + t567 * t798;
t833 = t41 * qJD(1);
t44 = t216 * t937 + t851 - t953;
t830 = t44 * qJD(1);
t827 = t442 * t567;
t47 = t259 * t937 - t856 - t953;
t824 = t47 * qJD(1);
t66 = t120 * t567 + t848;
t807 = t66 * qJD(1);
t806 = -t356 * qJD(3) + t147 * qJD(4);
t805 = -qJD(3) * t943 - t147 * qJD(5);
t804 = -qJD(4) * t934 - t146 * qJD(5);
t172 = -t695 * t968 + t986;
t173 = t695 * t969 + t986;
t803 = t172 * qJD(4) + t173 * qJD(5);
t535 = t562 ^ 2 + t563 ^ 2;
t791 = qJ(6) * qJD(5);
t461 = t563 * t686 + t566 * t696;
t596 = t461 * t888 - t515 * t512 / 0.2e1 + t495 * t958;
t698 = -t434 / 0.2e1 - t456 / 0.2e1;
t176 = t596 + t698;
t790 = qJD(1) * t176;
t220 = -t319 * t567 - t515 * t495;
t789 = qJD(1) * t220;
t221 = -t320 * t567 - t515 * t497;
t788 = qJD(1) * t221;
t245 = -t393 * t567 + t565 * t695;
t787 = qJD(1) * t245;
t246 = t397 * t567 - t565 * t937;
t786 = qJD(1) * t246;
t783 = qJD(1) * t283;
t782 = qJD(1) * t286;
t285 = t827 / 0.2e1 - t610;
t781 = qJD(1) * t285;
t288 = t702 - t610;
t780 = qJD(1) * t288;
t680 = -t565 * qJ(3) - t876;
t643 = -pkin(1) + t680;
t481 = -pkin(7) * t822 + t563 * t643;
t482 = t562 * t643 + t734;
t341 = (t481 * t563 + t482 * t562) * t565;
t779 = qJD(1) * t341;
t398 = t495 * t565 - t567 * t939;
t777 = qJD(1) * t398;
t774 = qJD(2) * t490;
t773 = qJD(2) * t542;
t772 = qJD(2) * t565;
t771 = qJD(2) * t567;
t770 = qJD(3) * t289;
t769 = qJD(3) * t567;
t767 = qJD(4) * t497;
t765 = qJD(5) * t490;
t764 = qJD(6) * t943;
t763 = qJD(6) * t567;
t110 = t319 * t565 - t516 * t495 - t515 * t939 + t567 * t682;
t762 = t110 * qJD(1);
t111 = -t320 * t565 + t516 * t497 + t515 * t498 + t567 * t794;
t761 = t111 * qJD(1);
t154 = -t393 * t937 - t397 * t695;
t758 = t154 * qJD(1);
t217 = (t481 * t567 + t491 * t565) * t563 + (t482 * t567 + t492 * t565) * t562;
t757 = t217 * qJD(1);
t250 = pkin(7) ^ 2 * t565 * t567 + t481 * t491 + t482 * t492;
t756 = t250 * qJD(1);
t755 = t288 * qJD(3);
t314 = -t495 * t498 - t497 * t939;
t753 = t314 * qJD(1);
t336 = -t481 * t565 + (t491 - 0.2e1 * t539) * t567;
t752 = t336 * qJD(1);
t337 = t492 * t567 + (-t482 + 0.2e1 * t734) * t565;
t751 = t337 * qJD(1);
t363 = t388 * qJD(3);
t399 = -t497 * t565 + t498 * t567;
t748 = t399 * qJD(1);
t747 = t939 * qJD(1);
t419 = t714 * t889 + (t512 + t810) * t888;
t746 = t419 * qJD(1);
t420 = (t897 - t810 / 0.2e1 + t714 / 0.2e1) * t567;
t745 = t420 * qJD(1);
t743 = t495 * qJD(4);
t560 = t565 ^ 2;
t511 = t535 * t560;
t741 = t511 * qJD(1);
t508 = t512 * qJD(4);
t740 = t535 * qJD(2);
t536 = t561 - t560;
t739 = t536 * qJD(1);
t738 = t565 * qJD(1);
t553 = qJD(5) * t731;
t736 = t553 + qJD(6);
t733 = -t887 / 0.2e1;
t732 = t887 / 0.2e1;
t730 = pkin(1) * t738;
t729 = pkin(1) * t737;
t728 = pkin(7) * t771;
t727 = t564 * t872;
t726 = t879 / 0.2e1;
t724 = t893 + t925;
t722 = t63 * qJD(4) - t129 * qJD(5) + t363;
t710 = t567 * t386;
t709 = t567 * t749;
t708 = t565 * t769;
t707 = t565 * t771;
t706 = t565 * t737;
t703 = t442 * t895;
t701 = t564 * t890;
t697 = t895 + t922;
t151 = qJD(2) * t288 - t361;
t480 = t497 * t737;
t692 = -qJD(2) * t939 - t480;
t691 = -t480 + t767;
t688 = t565 * t732;
t687 = t800 + t877;
t685 = t737 - qJD(4) / 0.2e1;
t684 = t802 + t812;
t609 = t624 * pkin(4);
t275 = t609 + t316;
t574 = t120 * t970 + t148 * t918 + t149 * t915 + t216 * t919 + t275 * t920 + t921 * t934;
t634 = t126 * t895 + t127 * t893;
t1 = t574 + t634;
t35 = t265 * t275;
t677 = -t1 * qJD(1) + t35 * qJD(2);
t633 = t259 * t919 + t316 * t920;
t638 = t126 * t922 + t127 * t925;
t3 = -t268 * t700 + t699 * t934 + t633 + t638;
t42 = t265 * t316;
t676 = -t3 * qJD(1) + t42 * qJD(2);
t573 = t120 * t969 + t148 * t968 + t268 * t912 - t695 * t970 + (t955 + t956) * t934 + t990 * t980;
t626 = t393 * t896 + t397 * t893;
t5 = -t573 + t626;
t675 = t5 * qJD(1);
t585 = t206 * t904 + t216 * t969 + t265 * t957 + t275 * t956;
t611 = t565 * t697 + t802;
t17 = t977 - t585 + t611;
t89 = -t275 * t943 - t976;
t673 = qJD(1) * t17 - qJD(2) * t89;
t577 = t216 * t904 + t275 * t957 + t985;
t19 = t565 * t724 + t577 - t800;
t88 = -t275 * t442 + t966;
t672 = -qJD(1) * t19 - qJD(2) * t88;
t587 = t120 * t904 + t122 * t969 - t268 * t956 + t934 * t957;
t591 = t538 / 0.2e1 + t892 + t884 / 0.2e1 - t835 / 0.2e1 + t880 / 0.2e1;
t21 = t587 + t591;
t85 = -t268 * t943 + t442 * t934;
t671 = qJD(1) * t21 - qJD(2) * t85;
t586 = t206 * t980 + t259 * t968 + t265 * t912 + t316 * t955;
t23 = t977 + t586 + t684;
t93 = -t316 * t943 - t976;
t670 = qJD(1) * t23 - qJD(2) * t93;
t584 = t259 * t980 + t316 * t912 - t632;
t25 = t239 + t584 + t687;
t92 = -t316 * t442 + t966;
t669 = qJD(1) * t25 - qJD(2) * t92;
t579 = (t695 * t733 + t891 * t937) * pkin(4) + t937 * t896 + t695 * t894;
t641 = pkin(5) * t957 + qJ(6) * t956;
t74 = t579 - t641;
t578 = (-t442 * t733 + t891 * t943) * pkin(4) + t943 * t896 - t442 * t894;
t639 = pkin(5) * t904 + qJ(6) * t969;
t95 = t578 - t639;
t668 = qJD(1) * t74 + qJD(2) * t95;
t667 = -t491 * t562 + t492 * t563;
t152 = t837 + t959;
t71 = t630 - t631;
t666 = qJD(1) * t152 + qJD(2) * t71;
t665 = qJD(2) * t72 + t973;
t199 = t828 + t971;
t664 = qJD(1) * t71 + qJD(2) * t199;
t663 = qJD(1) * t72 + t989;
t662 = qJD(2) * t91 + t973;
t218 = t442 * t609 - t490 * t943;
t37 = (-t442 * t898 + t624 * t912 + t688) * pkin(4) + t50;
t661 = qJD(1) * t37 + qJD(2) * t218;
t219 = -t490 * t442 - t609 * t943;
t36 = (t624 * t956 + t898 * t943 + t701) * pkin(4) + t51;
t660 = qJD(1) * t36 + qJD(2) * t219;
t659 = qJD(1) * t91 + t989;
t658 = -t64 * qJD(4) + t749;
t657 = t64 * qJD(5) + t749;
t65 = t819 - t718 / 0.2e1 + t613;
t656 = t65 * qJD(4) + t128 * qJD(5);
t655 = -t149 * qJD(4) + t65 * qJD(5);
t107 = t695 * t697 - t724 * t937 + t726;
t423 = t975 / 0.2e1;
t156 = t703 - t609 / 0.2e1 + t423 + t724 * t943;
t654 = qJD(1) * t107 - qJD(2) * t156;
t142 = 0.2e1 * qJ(6) * t957 + t955 * t981;
t182 = t968 * t981 + 0.2e1 * t987;
t653 = qJD(1) * t142 + qJD(2) * t182;
t226 = -t512 * t495 - t497 * t624;
t340 = t495 ^ 2 - t497 ^ 2;
t652 = qJD(1) * t340 + qJD(2) * t226;
t404 = t512 ^ 2 - t624 ^ 2;
t651 = qJD(1) * t226 + qJD(2) * t404;
t210 = qJD(1) * t327 + qJD(2) * t356;
t627 = t481 * t562 / 0.2e1 - t482 * t563 / 0.2e1;
t338 = t892 + t627;
t519 = t535 * qJ(3);
t650 = qJD(1) * t338 - qJD(2) * t519;
t649 = qJD(1) * t388 + qJD(2) * t437;
t648 = -qJD(1) * t495 + qJD(2) * t512;
t642 = t435 / 0.2e1 - t715 / 0.2e1;
t637 = t148 * t924 + t149 * t923;
t636 = qJ(6) * t970 + t924 * t934;
t30 = t681 + t985;
t623 = qJD(1) * t30 + t265 * t775;
t622 = qJD(1) * t51 - t442 * t774;
t621 = qJD(1) * t50 - t774 * t943;
t163 = t890 - t173;
t620 = qJD(1) * t163 - t711;
t619 = qJD(2) * t172 - t712;
t618 = qJD(1) * t172 + t711;
t617 = -qJD(2) * t173 + t712;
t616 = -qJD(1) * t173 - t711;
t332 = -t495 * t941 + t497 * t897;
t615 = qJD(2) * t332 - t495 * t742;
t581 = (t120 * t732 + t122 * t891) * pkin(4) + t128 * t896 + t129 * t893;
t10 = t581 + t637;
t580 = (-t268 * t891 + t732 * t934) * pkin(4) - t268 * t896 + t934 * t893;
t34 = t580 + t636;
t493 = (t541 * t887 + t549 * t564) * pkin(4);
t606 = t10 * qJD(1) + t34 * qJD(2) + t493 * qJD(4);
t602 = t609 / 0.2e1;
t600 = qJD(2) * t289 - t361 + t644;
t595 = qJD(2) * t680 + t769;
t590 = t332 * qJD(1) + t512 * t605;
t582 = t462 * t888 + t497 * t958 + t515 * t941;
t175 = -t582 + t642;
t589 = -t175 * qJD(1) + t542 * t605;
t559 = qJ(6) * qJD(6);
t546 = t772 / 0.2e1;
t545 = -t738 / 0.2e1;
t544 = t738 / 0.2e1;
t534 = t541 * qJD(6);
t510 = t529 * qJ(6);
t509 = t685 * t565;
t494 = (-qJD(5) / 0.2e1 + t685) * t565;
t339 = t892 - t627;
t333 = t419 * qJD(2) - t495 * t737;
t321 = t332 * qJD(4);
t309 = t937 * t764;
t290 = t979 - t793;
t287 = -t827 / 0.2e1 - t610;
t280 = -t420 * qJD(2) - (qJD(4) - t737) * t495;
t223 = t226 * qJD(4);
t215 = qJD(2) * t971 + t778 * t943;
t181 = t987 + t423;
t178 = t582 + t642;
t177 = -t596 + t698;
t164 = t890 + t173;
t157 = t602 + t987 + t967 / 0.2e1 + t703 + t943 * t893;
t155 = -t781 + t795;
t150 = t285 * qJD(2) - t361;
t106 = -t695 * t895 + t893 * t937 + t954 / 0.2e1 + t950 / 0.2e1 + t726;
t94 = t578 + t639;
t86 = t287 * qJD(2) + t529 * t695;
t73 = t579 + t641;
t69 = t71 * qJD(3);
t55 = t568 + t683;
t39 = pkin(4) * t701 + t602 * t937 + t726 * t943 + t52;
t38 = pkin(4) * t688 - t442 * t726 + t602 * t695 + t53;
t33 = t580 - t636;
t32 = qJD(4) * t878 + t931;
t31 = t239 - t632 + t681;
t29 = -t735 * t878 - t931;
t26 = t238 - t584 + t687;
t24 = t978 - t586 + t684;
t22 = -t587 + t591;
t20 = t549 * t890 + t577 - t681;
t18 = t978 + t585 + t611;
t9 = t581 - t637;
t7 = t593 + t640;
t6 = t573 + t626;
t4 = t128 * t915 + t120 * t918 + t129 * t970 + t122 * t934 / 0.2e1 - t633 + t638;
t2 = -t574 + t634;
t45 = [0, 0, 0, t707, t536 * qJD(2), 0, 0, 0, -pkin(1) * t772, -pkin(1) * t771, -t336 * qJD(2) + t563 * t708, t337 * qJD(2) - t562 * t708, -qJD(2) * t217 + qJD(3) * t511, qJD(2) * t250 - qJD(3) * t341 (qJD(2) * t498 - t743) * t497, qJD(2) * t314 + qJD(4) * t340, -t399 * qJD(2) + t567 * t743, -t398 * qJD(2) + t567 * t767, -t707, -t110 * qJD(2) - t221 * qJD(4) + t497 * t769, t111 * qJD(2) + t220 * qJD(4) - t495 * t769 (qJD(2) * t397 - t644) * t937, qJD(2) * t154 + t735 * t962, -t246 * qJD(2) + t567 * t644, -t245 * qJD(2) + (qJD(5) * t937 + t385) * t567, -t707, -t40 * qJD(2) - t67 * qJD(4) - t84 * qJD(5) + t710, t41 * qJD(2) + t68 * qJD(4) + t83 * qJD(5) - t709, t28 * qJD(2) + t43 * qJD(4) + t48 * qJD(5) - t750 * t937 + t710, t14 * qJD(2) + t152 * qJD(3) + t16 * qJD(4) + t15 * qJD(5) + t567 * t750, -t27 * qJD(2) - t44 * qJD(4) - t47 * qJD(5) + t359 * qJD(6) + t709, qJD(2) * t11 + qJD(3) * t49 + qJD(4) * t12 + qJD(5) * t13 - qJD(6) * t66; 0, 0, 0, t706, t739, t771, -t772, 0, -t728 - t730, pkin(7) * t772 - t729, t562 * t595 - t563 * t728 - t752, t562 * t728 + t563 * t595 + t751, qJD(2) * t667 - t757, t756 + (-pkin(2) * t555 + qJ(3) * t667) * qJD(2) + t339 * qJD(3), t498 * t592 + t321, t753 + (t498 * t512 - t624 * t939) * qJD(2) + t223, -t420 * qJD(4) + t565 * t605 - t748, t512 * t772 - t777, -t509, -t762 + (-t461 * t565 - t512 * t516 + t542 * t939) * qJD(2) + t939 * qJD(3) + t178 * qJD(4), t761 + (-t462 * t565 + t542 * t498 + t516 * t624) * qJD(2) + t419 * qJD(3) + t177 * qJD(4), t291 * t397 + t803, t758 + (-t393 * t943 + t397 * t442) * qJD(2) + t873, -qJD(4) * t289 + qJD(5) * t287 + t772 * t943 - t786, -qJD(4) * t674 + qJD(5) * t290 + t442 * t772 - t787, -t494, -t834 + (t393 * t490 - t442 * t455 + t846) * qJD(2) - t283 * qJD(3) + t38 * qJD(4) + t53 * qJD(5), t833 + (t397 * t490 + t455 * t943 - t843) * qJD(2) + t755 + t39 * qJD(4) + t52 * qJD(5), t840 + (-t207 * t442 + t265 * t393 + t846) * qJD(2) + t286 * qJD(3) + t20 * qJD(4) + t26 * qJD(5) + t164 * qJD(6), t853 + (t126 * t442 + t127 * t943 - t268 * t397 - t393 * t934) * qJD(2) + t69 + t6 * qJD(4) + t7 * qJD(5) + t287 * qJD(6), -t841 + (-t207 * t943 - t265 * t397 + t843) * qJD(2) - t755 + t18 * qJD(4) + t24 * qJD(5) + t309, t858 + (t126 * t934 - t127 * t268 + t207 * t265) * qJD(2) + t22 * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(2) * t562 + t563 * t738) * t567 (qJD(2) * t563 - t562 * t738) * t567, t741, qJD(2) * t339 - t779, 0, 0, 0, 0, 0, -t692, t333, 0, 0, 0, 0, 0, -t936, t151, -t946 + t988, t666, -t151, qJD(2) * t22 + qJD(4) * t106 - qJD(6) * t388 + t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t615, t652, t280, -t691, t546, qJD(2) * t178 - qJD(4) * t320 - t788, qJD(2) * t177 + qJD(4) * t319 + t789, t619, t665, -t600, -t935, t546, qJD(2) * t38 - t862 + t868, qJD(2) * t39 + t655 + t861, qJD(2) * t20 + t867 + t868, t849 + t6 * qJD(2) + (-t541 * t937 - t549 * t695) * qJD(4) + t73 * qJD(5) - t750, t18 * qJD(2) - t655 - t763 - t830, t857 + t2 * qJD(2) + t106 * qJD(3) + (t148 * t549 + t149 * t541) * qJD(4) + t9 * qJD(5) + t55 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t617, t662, t86, t290 * qJD(2) - t327 * qJD(4) + t690 * t937, t546, qJD(2) * t53 + t722 - t859, qJD(2) * t52 + t656 + t860, qJD(2) * t26 + t722 + t866, t7 * qJD(2) + t73 * qJD(4) + qJD(5) * t679 - t750 + t850, t24 * qJD(2) - t656 - t763 - t824, t854 + t4 * qJD(2) + t9 * qJD(4) + (-pkin(5) * t129 - qJ(6) * t128) * qJD(5) + t120 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t164 - t712, t86, -t927, qJD(2) * t31 + qJD(4) * t55 + qJD(5) * t120 - t363 - t807; 0, 0, 0, -t706, -t739, 0, 0, 0, t730, t729, t752, -t751, t757, -qJD(3) * t338 - t756, -t498 * t742 + t321, t223 - t753, -qJD(4) * t419 + t748, qJD(4) * t939 + t777, t509, -qJD(4) * t175 + t762, qJD(3) * t420 - qJD(4) * t176 - t761, -t397 * t778 + t803, -t758 + t873, -qJD(4) * t288 - qJD(5) * t285 + t786, -qJD(4) * t283 + qJD(5) * t286 + t787, t494, -qJD(4) * t37 - qJD(5) * t50 + t834 - t928, -qJD(4) * t36 - qJD(5) * t51 + t770 - t833, qJD(4) * t19 - qJD(5) * t25 - qJD(6) * t163 - t840 - t928, -qJD(4) * t5 + qJD(5) * t8 - qJD(6) * t285 + t69 - t853, -qJD(4) * t17 - qJD(5) * t23 + t309 - t770 + t841, -qJD(3) * t21 - qJD(4) * t1 - qJD(5) * t3 - qJD(6) * t30 - t858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t535 * qJD(3), t519 * qJD(3), t512 * t604, t404 * qJD(4), 0, 0, 0, t542 * t604, t542 * t508, t795 * t943, t735 * t984, 0, 0, 0, -qJD(4) * t218 + t765 * t943, -qJD(4) * t219 + t442 * t765, qJD(4) * t88 + qJD(5) * t92 + t744 * t943, qJD(3) * t199, qJD(4) * t89 + qJD(5) * t93 + qJD(6) * t971, qJD(3) * t85 + qJD(4) * t35 + qJD(5) * t42 - t265 * t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t740, -t650, 0, 0, 0, 0, 0, 0, t745, 0, 0, 0, 0, 0, t945, t754, t945, t664, -t754, qJD(4) * t157 + qJD(5) * t181 - qJD(6) * t437 - t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590, t651, t508 - t746, t747 - t604, t545, -t462 * qJD(4) + t589, qJD(4) * t461 + t512 * t773 - t790, t618, t663, -t780 + t795, -t783 - t796, t545, -t661 + t804, -t960 - t660, -t672 + t804 (t442 * t549 - t541 * t943) * qJD(4) + t94 * qJD(5) + t744 - t675, t960 - t673, t157 * qJD(3) + (t268 * t541 + t549 * t934) * qJD(4) + t33 * qJD(5) + t146 * qJD(6) + t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t616, t659, t155, -qJD(4) * t356 - qJD(5) * t943 + t782, t545, -t621 + t720, -t960 - t622, -t669 + t720, t94 * qJD(4) + qJD(5) * t678 + t744 + t871, t960 - t670, t181 * qJD(3) + t33 * qJD(4) + (-pkin(5) * t934 + t268 * qJ(6)) * qJD(5) + t934 * qJD(6) + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620, t155, t215, -t623 - t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t563 * t706, t562 * t706, -t741, qJD(2) * t338 + t779, 0, 0, 0, 0, 0, t691, t280, 0, 0, 0, 0, 0, t935, -t600, t935, -t666, t600, qJD(2) * t21 + qJD(4) * t107 + qJD(5) * t142 - qJD(6) * t327 - t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t740, t650, 0, 0, 0, 0, 0, t604, t508 - t745, 0, 0, 0, 0, 0, t944, -t932, t944, -t664, t932, -qJD(4) * t156 + qJD(5) * t182 - qJD(6) * t356 + t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t592, t648, 0, 0, 0, 0, 0, t291, t293, t291, 0, -t293, t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, t293, t210, 0, -t293, t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t615, -t652, t333, t692, t546, qJD(2) * t175 - qJD(3) * t497 + t788, qJD(2) * t176 + qJD(3) * t495 - t789, -t619, -t665, t151, t936, t546, qJD(2) * t37 + t862 + t869, qJD(2) * t36 + t657 - t861, -qJD(2) * t19 - t867 + t869, qJD(2) * t5 + qJD(5) * t74 - t849, t17 * qJD(2) - t657 - t763 + t830, qJD(2) * t1 - qJD(3) * t107 + qJD(5) * t10 - qJD(6) * t54 - t857; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t590, -t651, t746, -t747, t544, -qJD(3) * t624 - t589, t790 + (-qJD(3) - t773) * t512, -t618, -t663, t780, -t415 + t783, t544, t661 + t805, -t972 + t660, t672 + t805, qJD(5) * t95 + t675, t972 + t673, qJD(3) * t156 + qJD(5) * t34 + qJD(6) * t147 - t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t592, -t648, 0, 0, 0, 0, 0, -t291, -t293, -t291, 0, t293, -t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t727, -t553, -t727, 0, t736, qJD(5) * t493 + t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t649, 0, t29, -t553 + t723, t29, t668, -t723 + t736 (-pkin(5) * t564 + qJ(6) * t887) * t872 + t534 + t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, t541 * t735 + t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t617, -t662, t150, t388 * qJD(4) - t360 - t988, t546, qJD(2) * t50 + t859 + t870, qJD(2) * t51 + t658 - t860, qJD(2) * t25 - t866 + t870, -qJD(2) * t8 - qJD(4) * t74 - t850, t23 * qJD(2) - t658 - t763 + t824, -qJ(6) * t763 + t3 * qJD(2) - t142 * qJD(3) - t10 * qJD(4) - t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t616, -t659, t781, qJD(4) * t437 - t782, t544, t621 + t806, t622 - t972, t669 + t806, -qJD(4) * t95 - t871, t972 + t670, -qJD(3) * t182 - qJD(4) * t34 - t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210, -t293, -t210, 0, t293, -t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, 0, t32, -t723, t32, -t668, qJD(6) + t723, t559 - t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, -t510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t163 + t712, t150, t927, t30 * qJD(2) + t54 * qJD(4) + t567 * t791 + t318 + t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, t781, -t215, t623 - t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, -qJD(4) * t541 - t791 - t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, t510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t45;
