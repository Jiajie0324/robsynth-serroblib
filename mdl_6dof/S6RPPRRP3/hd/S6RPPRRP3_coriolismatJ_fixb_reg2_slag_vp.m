% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRP3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRP3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:03:56
% EndTime: 2019-03-09 02:04:04
% DurationCPUTime: 6.42s
% Computational Cost: add. (4195->448), mult. (7472->525), div. (0->0), fcn. (6137->6), ass. (0->337)
t268 = -cos(pkin(9)) * pkin(1) - pkin(2) - pkin(7);
t298 = sin(qJ(5));
t301 = cos(qJ(4));
t412 = t298 * t301;
t362 = t268 * t412;
t459 = t301 * pkin(4);
t299 = sin(qJ(4));
t461 = t299 * pkin(8);
t228 = t459 + t461;
t300 = cos(qJ(5));
t407 = t300 * t228;
t131 = -t362 + t407;
t406 = t300 * t301;
t211 = t268 * t406;
t219 = t298 * t228;
t132 = t211 + t219;
t404 = t301 * t299;
t409 = t299 * t300;
t209 = t268 * t409;
t273 = sin(pkin(9)) * pkin(1) + qJ(3);
t458 = t301 * pkin(8);
t462 = t299 * pkin(4);
t333 = -t458 + t462;
t308 = t273 + t333;
t106 = t298 * t308 + t209;
t434 = t106 * t301;
t165 = t300 * t308;
t410 = t299 * t268;
t105 = t298 * t410 - t165;
t437 = t105 * t301;
t467 = t299 / 0.2e1;
t19 = -t268 * t404 + (t132 * t467 + t434 / 0.2e1) * t300 + (-t131 * t299 / 0.2e1 + t437 / 0.2e1) * t298;
t295 = t298 ^ 2;
t296 = t300 ^ 2;
t395 = t295 + t296;
t146 = (t395 - 0.1e1) * t404;
t297 = t301 ^ 2;
t280 = t296 * t297;
t365 = -t295 / 0.2e1 + 0.1e1 / 0.2e1;
t479 = t299 ^ 2;
t96 = -t280 / 0.2e1 + t365 * t297 + (t296 / 0.2e1 - t365) * t479;
t447 = t96 * qJD(2) - t146 * qJD(3);
t489 = -t19 * qJD(1) + t447;
t428 = t132 * t300;
t429 = t131 * t298;
t466 = -t300 / 0.2e1;
t468 = -t298 / 0.2e1;
t15 = -t297 * t268 / 0.2e1 + (t428 / 0.2e1 - t429 / 0.2e1) * t301 + (t106 * t466 + t105 * t468 + t410 / 0.2e1) * t299;
t450 = t146 * qJD(2) + t96 * qJD(3);
t488 = -t15 * qJD(1) + t450;
t271 = pkin(5) * t412;
t408 = t300 * qJ(6);
t143 = t271 + (-t268 - t408) * t301;
t291 = t301 * pkin(5);
t108 = -t131 - t291;
t432 = t108 * t298;
t290 = t301 * qJ(6);
t107 = t290 + t132;
t433 = t107 * t300;
t310 = t433 / 0.2e1 + t143 / 0.2e1 + t432 / 0.2e1;
t463 = pkin(5) * t298;
t227 = -t408 + t463;
t142 = (-t227 + t268) * t299;
t415 = t268 * t298;
t95 = -t165 + (-pkin(5) + t415) * t299;
t476 = t95 / 0.2e1;
t411 = t299 * qJ(6);
t93 = t106 + t411;
t477 = t93 / 0.2e1;
t312 = t300 * t477 - t142 / 0.2e1 + t298 * t476;
t7 = -t299 * t312 + t301 * t310;
t487 = t7 * qJD(1) - t450;
t6 = t299 * t310 + t301 * t312;
t486 = t6 * qJD(1) - t447;
t279 = t295 * t301;
t281 = t296 * t301;
t485 = t279 + t281;
t369 = t301 * qJD(4);
t264 = t300 * t369;
t282 = t297 * t298;
t217 = t298 * t479 - t282;
t379 = t217 * qJD(1);
t484 = t379 + t264;
t372 = t299 * qJD(5);
t266 = t298 * t372;
t483 = t379 + t266;
t260 = t298 * t369;
t267 = t300 * t372;
t187 = t267 + t260;
t367 = t479 / 0.2e1;
t343 = t367 + 0.1e1 / 0.2e1;
t283 = t297 * t300;
t469 = t283 / 0.2e1;
t177 = t300 * t343 + t469;
t383 = t177 * qJD(1);
t482 = t383 + t187;
t185 = t266 - t264;
t470 = t282 / 0.2e1;
t175 = t298 * t343 + t470;
t384 = t175 * qJD(1);
t481 = t384 + t185;
t373 = t299 * qJD(4);
t245 = t296 - t295;
t374 = t299 * qJD(1);
t480 = 0.2e1 * t298 * t406 * (-qJD(5) + t374) - t245 * t373;
t413 = t298 * t299;
t76 = t106 * t413;
t478 = t76 / 0.2e1;
t475 = t106 / 0.2e1;
t414 = t298 * qJ(6);
t460 = t300 * pkin(5);
t330 = t414 + t460;
t189 = t330 * t301;
t474 = -t189 / 0.2e1;
t473 = t227 / 0.2e1;
t472 = -t228 / 0.2e1;
t471 = -t271 / 0.2e1;
t465 = -t301 / 0.2e1;
t464 = pkin(4) * t300;
t350 = -t413 / 0.2e1;
t37 = t106 * t350 + t478;
t457 = t19 * qJD(4) - t37 * qJD(5);
t56 = t93 * t413;
t75 = t105 * t409;
t315 = -t56 / 0.2e1 - t75 / 0.2e1 + t478 + t189 * t465;
t9 = -t414 / 0.2e1 + (t95 * t467 - pkin(5) / 0.2e1) * t300 + t315;
t454 = t9 * qJD(1);
t453 = t93 * t298;
t452 = t95 * t300;
t178 = t300 * t367 + t466 + t469;
t162 = t178 * qJD(3);
t448 = -t106 * qJD(5) - t162;
t425 = t143 * t300;
t435 = t106 * t299;
t29 = -t435 + (t189 * t298 + t425) * t301;
t446 = qJD(1) * t29;
t421 = t189 * t300;
t426 = t143 * t298;
t439 = t105 * t299;
t30 = -t439 + (-t421 + t426) * t301;
t445 = qJD(1) * t30;
t35 = -t452 + t453;
t444 = qJD(1) * t35;
t44 = -t143 * t406 + t93 * t299;
t443 = qJD(1) * t44;
t436 = t106 * t298;
t438 = t105 * t300;
t45 = t436 - t438;
t442 = qJD(1) * t45;
t46 = -t268 * t282 - t439;
t441 = qJD(1) * t46;
t47 = -t268 * t283 - t435;
t440 = qJD(1) * t47;
t361 = -t105 / 0.2e1 + t476;
t305 = t361 * t300 + (-t93 / 0.2e1 + t475) * t298;
t11 = t189 * t467 + t301 * t305;
t431 = t11 * qJD(1);
t348 = t411 / 0.2e1;
t13 = -t436 / 0.2e1 + (t348 + t477) * t298 + (pkin(5) * t467 - t361) * t300;
t430 = t13 * qJD(1);
t427 = t142 * t300;
t16 = ((-t106 + t93) * t300 + (-t105 + t95) * t298) * t301;
t423 = t16 * qJD(1);
t18 = t107 * t412 - t108 * t406 + t409 * t95 - t56;
t422 = t18 * qJD(1);
t20 = t75 - t76 + (t131 * t300 + t132 * t298) * t301;
t419 = t20 * qJD(1);
t21 = (t93 - t427) * t301 + (t107 + t425) * t299;
t418 = t21 * qJD(1);
t22 = -t108 * t299 - t95 * t301 + (t142 * t301 - t143 * t299) * t298;
t417 = t22 * qJD(1);
t222 = -pkin(4) - t330;
t416 = t222 * t299;
t405 = t301 * t222;
t33 = -t437 + (t131 + 0.2e1 * t362) * t299;
t403 = t33 * qJD(1);
t34 = t434 + (t132 - 0.2e1 * t211) * t299;
t402 = t34 * qJD(1);
t401 = t37 * qJD(1);
t400 = t37 * qJD(3);
t205 = t407 / 0.2e1;
t397 = -t362 / 0.2e1 + t205;
t396 = t485 * pkin(8);
t218 = t300 * t479 - t283;
t394 = qJD(1) * t218;
t393 = qJD(3) * t175;
t392 = qJD(3) * t299;
t391 = qJD(4) * t298;
t390 = qJD(4) * t300;
t389 = qJD(5) * t298;
t388 = qJD(5) * t300;
t385 = t146 * qJD(4);
t160 = t177 * qJD(3);
t202 = t279 / 0.2e1 - t281 / 0.2e1;
t382 = t202 * qJD(5);
t380 = t485 * qJD(1);
t244 = -t297 + t479;
t378 = t244 * qJD(1);
t377 = t245 * qJD(5);
t376 = t273 * qJD(1);
t375 = t298 * qJD(6);
t289 = t299 * qJD(6);
t371 = t300 * qJD(6);
t370 = t301 * qJD(1);
t368 = t301 * qJD(5);
t366 = -t211 / 0.2e1 - t290;
t364 = pkin(8) * t389;
t363 = pkin(8) * t388;
t347 = t409 / 0.2e1;
t360 = -t426 / 0.2e1 + t405 * t466 + pkin(8) * t347;
t359 = t298 * t370;
t358 = t298 * t392;
t357 = t298 * t368;
t356 = t300 * t368;
t355 = t298 * t371;
t354 = t273 * t374;
t353 = t273 * t370;
t258 = t298 * t388;
t257 = t298 * t390;
t265 = t299 * t369;
t352 = t301 * t375;
t351 = t299 * t370;
t349 = t412 / 0.2e1;
t346 = t408 / 0.2e1;
t345 = t405 / 0.2e1;
t344 = t227 * t465;
t342 = qJD(4) * t395;
t173 = t465 + t202;
t341 = qJD(1) * t173 - t257;
t144 = qJD(1) * t202 - t257;
t225 = t298 * qJD(1) * t283;
t129 = qJD(4) * t202 + t225;
t256 = t298 * t374;
t340 = qJD(5) * t175 + t256;
t176 = t298 * t367 + t468 + t470;
t339 = qJD(5) * t176 - t256;
t269 = qJD(5) + t374;
t337 = t300 * t359;
t336 = t298 * t264;
t335 = t297 * t258;
t332 = 0.2e1 * t336;
t331 = pkin(4) * t349 + pkin(8) * t413 / 0.2e1;
t329 = t416 + t458;
t12 = -t105 * t93 + t106 * t95 + t143 * t189;
t328 = t12 * qJD(1) + t11 * qJD(2);
t327 = t432 + t433;
t326 = t428 - t429;
t124 = t222 * t300 + t227 * t298;
t204 = -t219 / 0.2e1;
t303 = pkin(8) * t350 + (t345 + t474) * t298 + (t344 - t143 / 0.2e1) * t300;
t26 = t204 + t303 + t366;
t325 = -qJD(1) * t26 + qJD(4) * t124;
t125 = -t222 * t298 + t227 * t300;
t197 = t268 * t349;
t241 = -pkin(8) * t409 / 0.2e1;
t316 = t227 * t349 + t426 / 0.2e1 + t300 * t345 + t241;
t28 = -t291 + t197 + (t474 + t472) * t300 + t316;
t324 = -qJD(1) * t28 + qJD(4) * t125;
t323 = qJD(3) * t176 + qJD(5) * t105;
t322 = t463 / 0.2e1 - t408 / 0.2e1;
t321 = -t107 * qJ(6) / 0.2e1 + t108 * pkin(5) / 0.2e1;
t203 = t219 / 0.2e1;
t120 = t203 + t331;
t320 = pkin(4) * t390 - qJD(1) * t120;
t121 = t241 + (-t459 / 0.2e1 + t472) * t300;
t319 = pkin(4) * t391 - qJD(1) * t121;
t32 = t291 / 0.2e1 + t360 + t397;
t318 = -qJD(1) * t32 + t222 * t391;
t169 = t269 * t406;
t317 = t330 * qJD(5);
t215 = t295 * t297 - t280;
t140 = -t215 * qJD(1) + t332;
t152 = -t245 * qJD(4) + 0.2e1 * t337;
t314 = -t217 * qJD(4) + t299 * t356;
t10 = t107 * t93 + t108 * t95 + t142 * t143;
t313 = t10 * qJD(1) + t7 * qJD(2) + t6 * qJD(3);
t23 = -t268 ^ 2 * t404 - t105 * t131 + t106 * t132;
t311 = t23 * qJD(1) + t15 * qJD(2) + t19 * qJD(3);
t309 = t215 * qJD(5) + t299 * t332;
t307 = -t317 + t371;
t224 = t280 + t479;
t306 = t224 * qJD(1) + t336 + t372;
t116 = (-t227 / 0.2e1 + t322) * t299;
t117 = t471 + (t346 + t473) * t301;
t302 = t305 * pkin(8) + t143 * t473 + t189 * t222 / 0.2e1;
t3 = t302 + t321;
t304 = t222 * t227 * qJD(4) + t3 * qJD(1) - t116 * qJD(2) - t117 * qJD(3);
t277 = -t370 / 0.2e1;
t276 = t370 / 0.2e1;
t275 = t369 / 0.2e1;
t263 = t300 * t374;
t262 = t300 * t392;
t261 = t299 * t371;
t259 = t298 * t373;
t232 = t273 * qJD(3);
t226 = t300 * t352;
t223 = t269 * qJ(6);
t213 = t263 + t388;
t212 = t256 + t389;
t207 = (t374 + qJD(5) / 0.2e1) * t301;
t195 = t485 * qJD(4);
t194 = t299 * t342;
t190 = t485 * qJD(3);
t188 = -t259 + t356;
t186 = t300 * t373 + t357;
t184 = t295 * qJD(4) + t337;
t174 = t465 - t202;
t168 = t300 * t351 + t259;
t167 = t269 * t412;
t166 = (t359 - t390) * t299;
t151 = -t265 * t296 - t335;
t150 = -t265 * t295 + t335;
t149 = t260 - t394;
t148 = t267 + t394;
t147 = t298 * t169;
t141 = -t218 * qJD(4) - t299 * t357;
t128 = t296 * t351 - t382;
t127 = t295 * t351 + t382;
t123 = -qJD(5) * t177 - t263;
t122 = -qJD(5) * t178 + t263;
t119 = t301 * t346 + t344 + t471;
t118 = t227 * t467 + t299 * t322;
t88 = -t382 + (-t296 * t370 - t257) * t299;
t87 = t382 + (-t295 * t370 + t257) * t299;
t84 = t96 * qJD(4);
t59 = t241 + t205 + (-t464 / 0.2e1 - t415) * t301;
t58 = -t211 + t204 + t331;
t31 = t197 - t407 / 0.2e1 - t291 / 0.2e1 + t360;
t27 = -t421 / 0.2e1 + t291 + t316 + t397;
t25 = t203 + t303 - t366;
t14 = -t438 / 0.2e1 - t453 / 0.2e1 + t452 / 0.2e1 + pkin(5) * t347 + (t475 + t348) * t298;
t8 = t95 * t347 + t414 / 0.2e1 + t460 / 0.2e1 + t315;
t5 = t6 * qJD(4);
t4 = t15 * qJD(4);
t2 = t302 - t321;
t1 = qJD(4) * t7 + qJD(5) * t11;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t232, -t265, t244 * qJD(4), 0, t265, 0, 0, t273 * t369 + t392, qJD(3) * t301 - t273 * t373, 0, t232, t151, t309, t141, t150, -t314, t265, qJD(4) * t33 + qJD(5) * t47 + t262, -qJD(4) * t34 - qJD(5) * t46 - t358, -qJD(4) * t20 - t190, qJD(3) * t45 + qJD(4) * t23, t151, t141, -t309, t265, t314, t150, qJD(4) * t22 + qJD(5) * t29 - t297 * t355 + t262, -t18 * qJD(4) - t16 * qJD(5) - t299 * t352 - t190, qJD(4) * t21 + qJD(5) * t30 + qJD(6) * t224 + t358, qJD(3) * t35 + qJD(4) * t10 + qJD(5) * t12 + qJD(6) * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t376, 0, 0, 0, 0, 0, 0, t374, t370, 0, t376, 0, 0, 0, 0, 0, 0, t122, t339, -t380, t442 + t457, 0, 0, 0, 0, 0, 0, t122, -t380, -t339, qJD(5) * t8 + qJD(6) * t178 + t444 + t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351, t378, -t373, t351, -t369, 0, -t268 * t373 + t353, -t268 * t369 - t354, 0, 0, t88, t480, t149, t87, t484, t207, t403 + (t298 * t333 - t209) * qJD(4) + t59 * qJD(5), -t402 + (-pkin(8) * t406 + (t415 + t464) * t299) * qJD(4) + t58 * qJD(5), qJD(4) * t326 - t419 (-pkin(4) * t410 + pkin(8) * t326) * qJD(4) + t311, t88, t149, -t480, t207, -t484, t87, t417 + (-t298 * t329 - t427) * qJD(4) + t27 * qJD(5) + t174 * qJD(6), qJD(4) * t327 + t14 * qJD(5) - t422, t418 + (-t142 * t298 + t300 * t329) * qJD(4) + t25 * qJD(5) + t226 (pkin(8) * t327 + t142 * t222) * qJD(4) + t2 * qJD(5) + t31 * qJD(6) + t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, -t140, -t167, t129, -t169, t275, qJD(4) * t59 + t440 + t448, qJD(4) * t58 + t323 - t441, 0, -t400, -t129, -t167, t140, t275, t169, t129, qJD(4) * t27 + t446 + t448, -t423 + t14 * qJD(4) + (-t290 * t300 + t271) * qJD(5) - t352, qJD(4) * t25 + t289 - t323 + t445, t8 * qJD(3) + t2 * qJD(4) + (-pkin(5) * t106 - qJ(6) * t105) * qJD(5) + t93 * qJD(6) + t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t174 - t225, -t167, t306, qJD(4) * t31 + qJD(5) * t93 + t162 + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t385, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t369, t373, 0, 0, 0, 0, 0, 0, 0, 0, t185, t187, -t194 (-t395 * t461 - t459) * qJD(4) - t488, 0, 0, 0, 0, 0, 0, t185, -t194, -t187, t222 * t369 + t118 * qJD(5) + (-pkin(8) * t342 - t375) * t299 + t487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, t186, 0, 0, 0, 0, 0, 0, 0, 0, -t188, 0, -t186, t118 * qJD(4) - t189 * qJD(5) + t301 * t371 + t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t376, 0, 0, 0, 0, 0, 0, -t374, -t370, 0, -t376, 0, 0, 0, 0, 0, 0, t123, t340, t380, -t442 + t457, 0, 0, 0, 0, 0, 0, t123, t380, -t340, qJD(5) * t9 + qJD(6) * t177 - t444 + t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373, -t369, 0, 0, 0, 0, 0, 0, 0, 0, -t186, -t188, t195 (t396 - t462) * qJD(4) - t489, 0, 0, 0, 0, 0, 0, -t186, t195, t188 (t396 + t416) * qJD(4) + t119 * qJD(5) + t352 + t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482, t481, 0, -t401, 0, 0, 0, 0, 0, 0, -t482, 0, -t481, t119 * qJD(4) - t299 * t317 + t261 + t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, -t378, 0, -t351, 0, 0, -t353, t354, 0, 0, t128, -0.2e1 * t147, t148, t127, -t483, -t207, qJD(5) * t121 - t403, qJD(5) * t120 + t402, t419, -t311, t128, t148, 0.2e1 * t147, -t207, t483, t127, qJD(5) * t28 - qJD(6) * t173 - t417, -qJD(5) * t13 + t261 + t422, qJD(5) * t26 + t226 - t418, qJD(5) * t3 + qJD(6) * t32 - t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t116 - t487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t117 - t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, t377, 0, -t258, 0, 0, -pkin(4) * t389, -pkin(4) * t388, 0, 0, t258, 0, -t377, 0, 0, -t258, -qJD(5) * t125 + t355, 0, -qJD(5) * t124 + qJD(6) * t295 (qJD(5) * t227 - t375) * t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t152, t213, t144, -t212, t277, -t319 - t363, -t320 + t364, 0, 0, -t144, t213, t152, t277, t212, t144, -t324 - t363, t307 - t430, -t325 - t364, pkin(8) * t307 + t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341, t213, t184, -t318 + t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t140, t166, -t129, t168, t275, -qJD(4) * t121 + t160 - t440, -qJD(4) * t120 - t393 + t441, 0, t400, t129, t166, -t140, t275, -t168, -t129, -qJD(4) * t28 + t160 - t446, qJD(4) * t13 + t423, -qJD(4) * t26 + t289 + t393 - t445, qJ(6) * t289 - qJD(3) * t9 - qJD(4) * t3 - t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t116 - t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t383, -t384, 0, t401, 0, 0, 0, 0, 0, 0, t383, 0, t384, qJD(4) * t117 - t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, t152, -t263, -t144, t256, t276, t319, t320, 0, 0, t144, -t263, -t152, t276, -t256, -t144, t324, t430, t325, -t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t173 + t225, t166, -t306, -qJ(6) * t372 - qJD(4) * t32 - t160 - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341, -t263, -t184, t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, -t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
