% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:52
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRRP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRP3_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:52:45
% EndTime: 2019-05-05 14:52:50
% DurationCPUTime: 4.73s
% Computational Cost: add. (7337->240), mult. (13812->258), div. (0->0), fcn. (8413->8), ass. (0->146)
t1776 = cos(qJ(4));
t1810 = qJD(1) * t1776;
t1792 = qJD(4) * t1810;
t1773 = sin(qJ(4));
t1796 = t1773 * qJDD(1);
t1784 = qJDD(5) + t1792 + t1796;
t1772 = sin(qJ(5));
t1775 = cos(qJ(5));
t1734 = -t1775 * qJD(4) + t1772 * t1810;
t1736 = t1772 * qJD(4) + t1775 * t1810;
t1808 = t1736 * t1734;
t1701 = t1784 + t1808;
t1733 = t1736 ^ 2;
t1804 = t1773 * qJD(1);
t1756 = qJD(5) + t1804;
t1814 = t1756 ^ 2;
t1819 = -t1733 - t1814;
t1670 = t1775 * t1701 + t1772 * t1819;
t1794 = qJD(4) * t1804;
t1795 = t1776 * qJDD(1);
t1740 = -t1794 + t1795;
t1782 = -t1734 * qJD(5) + t1772 * qJDD(4) + t1775 * t1740;
t1809 = t1734 * t1756;
t1780 = t1782 - t1809;
t1650 = t1773 * t1670 + t1776 * t1780;
t1668 = t1772 * t1701 - t1775 * t1819;
t1768 = sin(pkin(9));
t1769 = cos(pkin(9));
t1635 = t1768 * t1650 + t1769 * t1668;
t1637 = t1769 * t1650 - t1768 * t1668;
t1774 = sin(qJ(1));
t1777 = cos(qJ(1));
t1841 = t1777 * t1635 + t1774 * t1637;
t1840 = t1774 * t1635 - t1777 * t1637;
t1687 = t1782 + t1809;
t1787 = -t1775 * qJDD(4) + t1772 * t1740;
t1783 = (-qJD(5) + t1756) * t1736 - t1787;
t1817 = -t1775 * t1687 + t1772 * t1783;
t1715 = t1734 ^ 2;
t1700 = t1733 + t1715;
t1816 = t1772 * t1687 + t1775 * t1783;
t1828 = t1776 * t1700 + t1773 * t1816;
t1834 = t1768 * t1817 - t1769 * t1828;
t1835 = t1768 * t1828 + t1769 * t1817;
t1839 = t1774 * t1835 + t1777 * t1834;
t1838 = -t1774 * t1834 + t1777 * t1835;
t1652 = t1776 * t1670 - t1773 * t1780;
t1702 = t1784 - t1808;
t1818 = -t1814 - t1715;
t1823 = t1775 * t1702 + t1772 * t1818;
t1833 = t1768 * t1823;
t1832 = t1769 * t1823;
t1822 = -t1772 * t1702 + t1775 * t1818;
t1831 = t1773 * t1822;
t1830 = t1776 * t1822;
t1829 = -t1773 * t1700 + t1776 * t1816;
t1778 = qJD(1) ^ 2;
t1742 = t1768 * qJDD(1) + t1769 * t1778;
t1743 = -t1769 * qJDD(1) + t1768 * t1778;
t1789 = t1774 * t1742 + t1777 * t1743;
t1791 = t1777 * t1742 - t1774 * t1743;
t1815 = qJD(4) ^ 2;
t1813 = 2 * qJD(3);
t1812 = t1773 * pkin(4);
t1811 = t1778 * pkin(7);
t1751 = -t1777 * g(1) - t1774 * g(2);
t1737 = -t1778 * pkin(1) + t1751;
t1807 = t1769 * t1737;
t1765 = -g(3) + qJDD(2);
t1750 = t1774 * g(1) - t1777 * g(2);
t1785 = qJDD(1) * pkin(1) + t1750;
t1708 = -t1768 * t1737 + t1769 * t1785;
t1698 = -qJDD(1) * pkin(2) - t1778 * qJ(3) + qJDD(3) - t1708;
t1781 = -qJDD(1) * pkin(7) + t1698;
t1689 = t1776 * t1765 + t1773 * t1781;
t1738 = (-pkin(8) * t1776 + t1812) * qJD(1);
t1674 = -t1815 * pkin(4) + qJDD(4) * pkin(8) - t1738 * t1804 + t1689;
t1771 = t1778 * pkin(2);
t1779 = t1807 + t1768 * t1750 - t1771 - t1811 - t1740 * pkin(8) + (t1768 * pkin(1) + qJ(3) + t1812) * qJDD(1) + (t1813 + (0.2e1 * pkin(4) * t1776 + pkin(8) * t1773) * qJD(4)) * qJD(1);
t1643 = t1775 * t1674 + t1772 * t1779;
t1763 = t1773 ^ 2;
t1764 = t1776 ^ 2;
t1797 = t1763 + t1764;
t1793 = t1773 * t1778 * t1776;
t1642 = -t1772 * t1674 + t1775 * t1779;
t1688 = -t1773 * t1765 + t1776 * t1781;
t1786 = -t1736 * qJD(5) - t1787;
t1673 = -qJDD(4) * pkin(4) - t1815 * pkin(8) + t1738 * t1810 - t1688;
t1709 = t1768 * t1785 + t1807;
t1697 = qJDD(1) * qJ(3) + qJD(1) * t1813 + t1709 - t1771;
t1754 = -t1764 * t1778 - t1815;
t1753 = -t1763 * t1778 - t1815;
t1749 = -qJDD(4) - t1793;
t1748 = qJDD(4) - t1793;
t1747 = t1797 * t1778;
t1746 = -t1774 * qJDD(1) - t1777 * t1778;
t1745 = t1777 * qJDD(1) - t1774 * t1778;
t1744 = t1797 * qJDD(1);
t1741 = -0.2e1 * t1794 + t1795;
t1739 = 0.2e1 * t1792 + t1796;
t1719 = t1776 * t1749 - t1773 * t1754;
t1718 = -t1773 * t1748 + t1776 * t1753;
t1717 = t1773 * t1749 + t1776 * t1754;
t1716 = t1776 * t1748 + t1773 * t1753;
t1712 = -t1768 * t1744 - t1769 * t1747;
t1711 = t1769 * t1744 - t1768 * t1747;
t1710 = t1734 * pkin(5) - t1736 * qJ(6);
t1696 = t1768 * t1717 + t1769 * t1741;
t1695 = t1768 * t1716 + t1769 * t1739;
t1694 = -t1769 * t1717 + t1768 * t1741;
t1693 = -t1769 * t1716 + t1768 * t1739;
t1692 = t1697 - t1811;
t1682 = (qJD(5) + t1756) * t1736 + t1787;
t1681 = t1756 * t1736 - t1786;
t1680 = -t1768 * t1708 + t1769 * t1709;
t1679 = t1769 * t1708 + t1768 * t1709;
t1665 = t1769 * t1697 + t1768 * t1698;
t1664 = t1768 * t1697 - t1769 * t1698;
t1663 = -t1773 * t1688 + t1776 * t1689;
t1662 = t1776 * t1688 + t1773 * t1689;
t1657 = t1773 * t1681 + t1830;
t1655 = -t1776 * t1681 + t1831;
t1653 = t1773 * t1682 + t1830;
t1651 = -t1776 * t1682 + t1831;
t1645 = t1768 * t1662 + t1769 * t1692;
t1644 = -t1769 * t1662 + t1768 * t1692;
t1641 = -t1786 * pkin(5) + (pkin(5) * t1756 - (2 * qJD(6))) * t1736 + t1673 - t1780 * qJ(6);
t1640 = t1768 * t1655 + t1832;
t1638 = -t1769 * t1655 + t1833;
t1636 = t1768 * t1651 + t1832;
t1634 = -t1769 * t1651 + t1833;
t1632 = -t1784 * pkin(5) - qJ(6) * t1814 + t1736 * t1710 + qJDD(6) - t1642;
t1631 = -pkin(5) * t1814 + t1784 * qJ(6) + 0.2e1 * qJD(6) * t1756 - t1734 * t1710 + t1643;
t1626 = -t1772 * t1642 + t1775 * t1643;
t1625 = t1775 * t1642 + t1772 * t1643;
t1624 = t1776 * t1626 + t1773 * t1673;
t1623 = t1773 * t1626 - t1776 * t1673;
t1622 = t1775 * t1631 + t1772 * t1632;
t1621 = t1772 * t1631 - t1775 * t1632;
t1620 = t1776 * t1622 + t1773 * t1641;
t1619 = t1773 * t1622 - t1776 * t1641;
t1618 = t1768 * t1623 + t1769 * t1625;
t1617 = -t1769 * t1623 + t1768 * t1625;
t1616 = t1768 * t1619 + t1769 * t1621;
t1615 = -t1769 * t1619 + t1768 * t1621;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1746, -t1745, 0, -t1774 * t1750 + t1777 * t1751, 0, 0, 0, 0, 0, 0, -t1791, t1789, 0, -t1774 * t1679 + t1777 * t1680, 0, 0, 0, 0, 0, 0, 0, t1791, -t1789, -t1774 * t1664 + t1777 * t1665, 0, 0, 0, 0, 0, 0, -t1774 * t1693 + t1777 * t1695, -t1774 * t1694 + t1777 * t1696, -t1774 * t1711 + t1777 * t1712, -t1774 * t1644 + t1777 * t1645, 0, 0, 0, 0, 0, 0, -t1774 * t1634 + t1777 * t1636, -t1841, t1838, -t1774 * t1617 + t1777 * t1618, 0, 0, 0, 0, 0, 0, -t1774 * t1638 + t1777 * t1640, t1838, t1841, -t1774 * t1615 + t1777 * t1616; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1745, t1746, 0, t1777 * t1750 + t1774 * t1751, 0, 0, 0, 0, 0, 0, -t1789, -t1791, 0, t1777 * t1679 + t1774 * t1680, 0, 0, 0, 0, 0, 0, 0, t1789, t1791, t1777 * t1664 + t1774 * t1665, 0, 0, 0, 0, 0, 0, t1777 * t1693 + t1774 * t1695, t1777 * t1694 + t1774 * t1696, t1777 * t1711 + t1774 * t1712, t1777 * t1644 + t1774 * t1645, 0, 0, 0, 0, 0, 0, t1777 * t1634 + t1774 * t1636, -t1840, t1839, t1777 * t1617 + t1774 * t1618, 0, 0, 0, 0, 0, 0, t1777 * t1638 + t1774 * t1640, t1839, t1840, t1777 * t1615 + t1774 * t1616; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, t1718, t1719, 0, t1663, 0, 0, 0, 0, 0, 0, t1653, -t1652, t1829, t1624, 0, 0, 0, 0, 0, 0, t1657, t1829, t1652, t1620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1778, -qJDD(1), 0, t1751, 0, 0, 0, 0, 0, 0, -t1742, t1743, 0, t1680, 0, 0, 0, 0, 0, 0, 0, t1742, -t1743, t1665, 0, 0, 0, 0, 0, 0, t1695, t1696, t1712, t1645, 0, 0, 0, 0, 0, 0, t1636, -t1635, t1835, t1618, 0, 0, 0, 0, 0, 0, t1640, t1835, t1635, t1616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1778, 0, t1750, 0, 0, 0, 0, 0, 0, -t1743, -t1742, 0, t1679, 0, 0, 0, 0, 0, 0, 0, t1743, t1742, t1664, 0, 0, 0, 0, 0, 0, t1693, t1694, t1711, t1644, 0, 0, 0, 0, 0, 0, t1634, t1637, t1834, t1617, 0, 0, 0, 0, 0, 0, t1638, t1834, -t1637, t1615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, t1718, t1719, 0, t1663, 0, 0, 0, 0, 0, 0, t1653, -t1652, t1829, t1624, 0, 0, 0, 0, 0, 0, t1657, t1829, t1652, t1620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1778, -qJDD(1), 0, t1709, 0, 0, 0, 0, 0, 0, 0, t1778, qJDD(1), t1697, 0, 0, 0, 0, 0, 0, t1739, t1741, -t1747, t1692, 0, 0, 0, 0, 0, 0, t1823, -t1668, t1817, t1625, 0, 0, 0, 0, 0, 0, t1823, t1817, t1668, t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1778, 0, t1708, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1778, -t1698, 0, 0, 0, 0, 0, 0, -t1716, -t1717, t1744, -t1662, 0, 0, 0, 0, 0, 0, -t1651, t1650, -t1828, -t1623, 0, 0, 0, 0, 0, 0, -t1655, -t1828, -t1650, -t1619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, t1718, t1719, 0, t1663, 0, 0, 0, 0, 0, 0, t1653, -t1652, t1829, t1624, 0, 0, 0, 0, 0, 0, t1657, t1829, t1652, t1620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, t1718, t1719, 0, t1663, 0, 0, 0, 0, 0, 0, t1653, -t1652, t1829, t1624, 0, 0, 0, 0, 0, 0, t1657, t1829, t1652, t1620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1778, -qJDD(1), -t1697, 0, 0, 0, 0, 0, 0, -t1739, -t1741, t1747, -t1692, 0, 0, 0, 0, 0, 0, -t1823, t1668, -t1817, -t1625, 0, 0, 0, 0, 0, 0, -t1823, -t1817, -t1668, -t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1778, t1698, 0, 0, 0, 0, 0, 0, t1716, t1717, -t1744, t1662, 0, 0, 0, 0, 0, 0, t1651, -t1650, t1828, t1623, 0, 0, 0, 0, 0, 0, t1655, t1828, t1650, t1619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1753, t1749, -t1796, t1689, 0, 0, 0, 0, 0, 0, t1822, -t1670, t1816, t1626, 0, 0, 0, 0, 0, 0, t1822, t1816, t1670, t1622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1748, t1754, -t1795, t1688, 0, 0, 0, 0, 0, 0, -t1682, -t1780, t1700, -t1673, 0, 0, 0, 0, 0, 0, -t1681, t1700, t1780, -t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1739, t1741, -t1747, t1692, 0, 0, 0, 0, 0, 0, t1823, -t1668, t1817, t1625, 0, 0, 0, 0, 0, 0, t1823, t1817, t1668, t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1818, -t1701, t1783, t1643, 0, 0, 0, 0, 0, 0, t1818, t1783, t1701, t1631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1702, t1819, -t1687, t1642, 0, 0, 0, 0, 0, 0, t1702, -t1687, -t1819, -t1632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1682, t1780, -t1700, t1673, 0, 0, 0, 0, 0, 0, t1681, -t1700, -t1780, t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1818, t1783, t1701, t1631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1681, -t1700, -t1780, t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1702, t1687, t1819, t1632;];
f_new_reg  = t1;
