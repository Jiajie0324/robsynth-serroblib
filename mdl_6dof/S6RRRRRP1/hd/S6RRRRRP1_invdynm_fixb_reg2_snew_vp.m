% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 04:27
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 04:27:00
% EndTime: 2019-05-08 04:27:41
% DurationCPUTime: 42.99s
% Computational Cost: add. (404494->914), mult. (879790->1191), div. (0->0), fcn. (668955->10), ass. (0->631)
t1671 = qJD(1) ^ 2;
t1664 = sin(qJ(1));
t1669 = cos(qJ(1));
t1640 = t1664 * g(1) - t1669 * g(2);
t1703 = qJDD(1) * pkin(1) + t1640;
t1668 = cos(qJ(2));
t1654 = t1668 * qJDD(1);
t1663 = sin(qJ(2));
t1800 = qJD(1) * t1663;
t1745 = qJD(2) * t1800;
t1713 = -t1654 + t1745;
t1826 = t1668 ^ 2;
t1572 = (pkin(8) * t1826 + pkin(7)) * t1671 - pkin(2) * t1713 - (qJD(2) * pkin(2) - pkin(8) * t1800) * t1800 + t1703;
t1662 = sin(qJ(3));
t1667 = cos(qJ(3));
t1799 = qJD(1) * t1668;
t1621 = -t1662 * t1800 + t1667 * t1799;
t1622 = (t1662 * t1668 + t1663 * t1667) * qJD(1);
t1661 = sin(qJ(4));
t1666 = cos(qJ(4));
t1589 = t1621 * t1661 + t1622 * t1666;
t1660 = sin(qJ(5));
t1665 = cos(qJ(5));
t1658 = qJD(2) + qJD(3);
t1744 = qJD(4) + t1658;
t1565 = -t1660 * t1589 + t1665 * t1744;
t1566 = t1665 * t1589 + t1660 * t1744;
t1512 = t1565 * t1566;
t1653 = qJD(2) * t1799;
t1756 = t1663 * qJDD(1);
t1631 = t1653 + t1756;
t1570 = t1621 * qJD(3) + t1667 * t1631 - t1662 * t1713;
t1728 = t1631 * t1662 + t1667 * t1713;
t1698 = qJD(3) * t1622 + t1728;
t1729 = t1661 * t1570 + t1666 * t1698;
t1697 = -t1589 * qJD(4) - t1729;
t1690 = qJDD(5) - t1697;
t1833 = t1512 + t1690;
t1843 = pkin(5) * t1833;
t1587 = -t1666 * t1621 + t1622 * t1661;
t1532 = t1589 * t1587;
t1755 = qJDD(2) + qJDD(3);
t1732 = qJDD(4) + t1755;
t1831 = -t1532 + t1732;
t1842 = t1661 * t1831;
t1595 = t1621 * t1622;
t1830 = t1595 + t1755;
t1841 = t1662 * t1830;
t1840 = t1666 * t1831;
t1839 = t1667 * t1830;
t1791 = t1833 * t1660;
t1790 = t1833 * t1665;
t1483 = -t1587 * qJD(4) + t1666 * t1570 - t1661 * t1698;
t1579 = t1744 * t1587;
t1838 = -t1579 + t1483;
t1657 = t1658 ^ 2;
t1827 = t1621 ^ 2;
t1590 = -t1657 - t1827;
t1528 = t1590 * t1662 + t1839;
t1641 = g(1) * t1669 + g(2) * t1664;
t1624 = -pkin(1) * t1671 + qJDD(1) * pkin(7) - t1641;
t1767 = t1663 * t1624;
t1610 = g(3) * t1668 + t1767;
t1611 = -t1663 * g(3) + t1668 * t1624;
t1675 = pkin(8) * (t1662 * t1654 - t1667 * (-t1631 + t1653)) + t1610 * t1667 + t1611 * t1662;
t1766 = t1663 * t1671;
t1649 = t1668 * t1766;
t1638 = qJDD(2) + t1649;
t1655 = t1826 * t1671;
t1670 = qJD(2) ^ 2;
t1828 = -t1655 - t1670;
t1680 = -t1638 * t1667 + t1662 * t1828;
t1837 = -t1675 + pkin(2) * (t1528 - t1680);
t1716 = pkin(3) * t1658 - pkin(9) * t1622;
t1480 = -pkin(3) * t1698 + pkin(9) * t1827 - t1622 * t1716 + t1572;
t1731 = t1744 ^ 2;
t1453 = t1565 * qJD(5) + t1665 * t1483 + t1660 * t1732;
t1584 = qJD(5) + t1587;
t1521 = t1584 * t1565;
t1427 = -t1521 + t1453;
t1801 = qJD(1) * qJD(2);
t1676 = qJDD(2) * pkin(2) - pkin(8) * t1631 - t1767 + (pkin(2) * t1766 + pkin(8) * t1801 - g(3)) * t1668;
t1682 = pkin(2) * t1828 + t1654 * pkin(8) + t1611;
t1509 = t1662 * t1676 + t1667 * t1682;
t1452 = -pkin(3) * t1827 - pkin(9) * t1698 - t1658 * t1716 + t1509;
t1617 = t1658 * t1621;
t1543 = -t1617 + t1570;
t1673 = pkin(3) * t1830 - pkin(9) * t1543 - t1662 * t1682 + t1667 * t1676;
t1379 = t1666 * t1452 + t1661 * t1673;
t1527 = pkin(4) * t1587 - pkin(10) * t1589;
t1361 = -pkin(4) * t1731 + pkin(10) * t1732 - t1587 * t1527 + t1379;
t1462 = (0.2e1 * qJD(4) + t1658) * t1589 + t1729;
t1672 = t1462 * pkin(4) - pkin(10) * t1838 - t1480;
t1298 = t1361 * t1660 - t1665 * t1672;
t1684 = -qJ(6) * t1521 + 0.2e1 * qJD(6) * t1566 + t1298 - t1843;
t1241 = (t1427 + t1453) * qJ(6) + t1684;
t1798 = qJD(6) * t1565;
t1557 = 0.2e1 * t1798;
t1299 = t1665 * t1361 + t1660 * t1672;
t1515 = pkin(5) * t1584 - qJ(6) * t1566;
t1563 = t1565 ^ 2;
t1730 = t1483 * t1660 - t1665 * t1732;
t1696 = qJD(5) * t1566 + t1730;
t1707 = t1563 * pkin(5) + t1696 * qJ(6) + t1584 * t1515 - t1299;
t1257 = t1557 - t1707;
t1424 = (qJD(5) - t1584) * t1566 + t1730;
t1564 = t1566 ^ 2;
t1481 = -t1563 - t1564;
t1242 = -pkin(5) * t1481 - qJ(6) * t1424 + t1257;
t1835 = -t1660 * t1241 - t1665 * t1242;
t1378 = t1452 * t1661 - t1666 * t1673;
t1360 = -t1732 * pkin(4) - t1731 * pkin(10) + t1527 * t1589 + t1378;
t1305 = t1696 * pkin(5) - t1563 * qJ(6) + t1515 * t1566 + qJDD(6) + t1360;
t1583 = t1584 ^ 2;
t1504 = -t1564 - t1583;
t1297 = -qJ(6) * t1504 + t1305;
t1442 = -t1512 + t1690;
t1832 = t1521 + t1453;
t1367 = -pkin(5) * t1832 - qJ(6) * t1442;
t1834 = -t1660 * t1297 - t1665 * t1367;
t1235 = t1660 * t1298 + t1665 * t1299;
t1829 = t1617 + t1570;
t1539 = (qJD(3) - t1658) * t1622 + t1728;
t1585 = t1587 ^ 2;
t1586 = t1589 ^ 2;
t1620 = t1622 ^ 2;
t1488 = -t1583 - t1563;
t1389 = t1488 * t1665 - t1791;
t1423 = (qJD(5) + t1584) * t1566 + t1730;
t1335 = t1389 * t1661 - t1423 * t1666;
t1336 = t1389 * t1666 + t1423 * t1661;
t1275 = t1335 * t1667 + t1336 * t1662;
t1276 = -t1335 * t1662 + t1336 * t1667;
t1217 = t1275 * t1668 + t1276 * t1663;
t1825 = pkin(1) * t1217;
t1508 = pkin(2) * t1680 + t1675;
t1444 = -t1508 * t1667 + t1509 * t1662;
t1824 = pkin(2) * t1444;
t1485 = -t1539 * t1662 - t1543 * t1667;
t1823 = pkin(2) * t1485;
t1350 = -t1424 * t1660 - t1427 * t1665;
t1822 = pkin(4) * t1350;
t1388 = t1488 * t1660 + t1790;
t1821 = pkin(4) * t1388;
t1793 = t1442 * t1660;
t1398 = t1504 * t1665 - t1793;
t1820 = pkin(4) * t1398;
t1819 = pkin(4) * t1661;
t1249 = qJ(6) * t1453 + t1684;
t1818 = pkin(5) * t1249;
t1817 = pkin(5) * t1427;
t1352 = -t1424 * t1665 + t1427 * t1660;
t1326 = t1352 * t1661 - t1481 * t1666;
t1327 = t1352 * t1666 + t1481 * t1661;
t1264 = t1326 * t1667 + t1327 * t1662;
t1265 = -t1326 * t1662 + t1327 * t1667;
t1207 = -t1264 * t1663 + t1265 * t1668;
t1816 = pkin(6) * (t1207 * t1664 - t1350 * t1669);
t1218 = -t1275 * t1663 + t1276 * t1668;
t1815 = pkin(6) * (t1218 * t1664 - t1388 * t1669);
t1792 = t1442 * t1665;
t1399 = -t1504 * t1660 - t1792;
t1339 = t1399 * t1661 - t1666 * t1832;
t1340 = t1399 * t1666 + t1661 * t1832;
t1280 = t1339 * t1667 + t1340 * t1662;
t1281 = -t1339 * t1662 + t1340 * t1667;
t1224 = -t1280 * t1663 + t1281 * t1668;
t1814 = pkin(6) * (t1224 * t1664 - t1398 * t1669);
t1206 = t1264 * t1668 + t1265 * t1663;
t1813 = pkin(7) * t1206;
t1812 = pkin(7) * t1217;
t1223 = t1280 * t1668 + t1281 * t1663;
t1811 = pkin(7) * t1223;
t1810 = pkin(8) * t1264;
t1809 = pkin(8) * t1275;
t1808 = pkin(8) * t1280;
t1807 = pkin(9) * t1326;
t1806 = pkin(9) * t1335;
t1805 = pkin(9) * t1339;
t1804 = pkin(10) * t1350;
t1803 = pkin(10) * t1388;
t1802 = pkin(10) * t1398;
t1797 = t1249 * t1660;
t1796 = t1249 * t1665;
t1310 = -t1378 * t1666 + t1379 * t1661;
t1795 = t1310 * t1662;
t1794 = t1310 * t1667;
t1789 = t1444 * t1663;
t1788 = t1444 * t1668;
t1787 = t1480 * t1661;
t1786 = t1480 * t1666;
t1525 = t1532 + t1732;
t1785 = t1525 * t1661;
t1784 = t1525 * t1666;
t1783 = t1572 * t1662;
t1782 = t1572 * t1667;
t1781 = t1584 * t1566;
t1780 = t1584 * t1660;
t1779 = t1584 * t1665;
t1592 = -t1595 + t1755;
t1778 = t1592 * t1662;
t1777 = t1592 * t1667;
t1623 = t1671 * pkin(7) + t1703;
t1776 = t1623 * t1663;
t1775 = t1623 * t1668;
t1632 = t1654 - 0.2e1 * t1745;
t1599 = t1632 * t1668;
t1774 = t1638 * t1663;
t1639 = qJDD(2) - t1649;
t1773 = t1639 * t1663;
t1772 = t1639 * t1668;
t1771 = t1658 * t1622;
t1770 = t1658 * t1662;
t1769 = t1658 * t1667;
t1659 = t1663 ^ 2;
t1768 = t1659 * t1671;
t1356 = t1660 * t1360;
t1357 = t1665 * t1360;
t1763 = -pkin(1) * t1350 + pkin(7) * t1207;
t1762 = -pkin(1) * t1388 + pkin(7) * t1218;
t1761 = -pkin(1) * t1398 + pkin(7) * t1224;
t1760 = -pkin(4) * t1481 + pkin(10) * t1352;
t1759 = -pkin(4) * t1360 + pkin(10) * t1235;
t1758 = -pkin(4) * t1423 + pkin(10) * t1389;
t1757 = -pkin(4) * t1832 + pkin(10) * t1399;
t1754 = t1659 + t1826;
t1753 = -pkin(4) * t1666 - pkin(3);
t1751 = t1661 * t1512;
t1750 = t1666 * t1512;
t1749 = t1664 * t1532;
t1748 = t1669 * t1532;
t1747 = t1664 * t1595;
t1746 = t1669 * t1595;
t1743 = t1356 + t1757;
t1742 = -t1357 + t1758;
t1220 = t1235 * t1661 - t1360 * t1666;
t1741 = pkin(3) * t1220 + t1759;
t1567 = -t1586 - t1731;
t1492 = t1567 * t1666 - t1785;
t1740 = pkin(3) * t1492 - t1379;
t1311 = t1378 * t1661 + t1666 * t1379;
t1247 = t1311 * t1662 + t1794;
t1309 = pkin(3) * t1310;
t1739 = pkin(2) * t1247 + t1309;
t1738 = -pkin(2) * t1350 + pkin(8) * t1265;
t1737 = -pkin(2) * t1388 + pkin(8) * t1276;
t1736 = -pkin(2) * t1398 + pkin(8) * t1281;
t1463 = -t1589 * t1658 + t1729;
t1466 = t1579 + t1483;
t1403 = -t1463 * t1661 - t1466 * t1666;
t1405 = -t1463 * t1666 + t1466 * t1661;
t1321 = t1403 * t1667 + t1405 * t1662;
t1400 = pkin(3) * t1403;
t1735 = pkin(2) * t1321 + t1400;
t1734 = -pkin(3) * t1388 + pkin(9) * t1336;
t1733 = -pkin(3) * t1398 + pkin(9) * t1340;
t1445 = t1508 * t1662 + t1667 * t1509;
t1556 = t1610 * t1663 + t1668 * t1611;
t1727 = -t1640 * t1664 - t1669 * t1641;
t1726 = t1664 * t1649;
t1725 = t1669 * t1649;
t1724 = t1760 - t1835;
t1723 = t1757 - t1834;
t1722 = t1760 + t1235;
t1338 = pkin(3) * t1339;
t1721 = t1338 + t1743;
t1334 = pkin(3) * t1335;
t1720 = t1334 + t1742;
t1609 = -t1620 - t1657;
t1544 = t1609 * t1667 - t1778;
t1718 = pkin(2) * t1544 - t1509;
t1635 = qJDD(1) * t1669 - t1664 * t1671;
t1715 = -pkin(6) * t1635 - g(3) * t1664;
t1714 = t1744 * t1589;
t1523 = -t1731 - t1585;
t1471 = t1523 * t1661 + t1840;
t1712 = pkin(3) * t1471 - t1378;
t1325 = pkin(3) * t1326;
t1711 = t1325 + t1724;
t1274 = pkin(2) * t1275;
t1710 = t1274 + t1720;
t1709 = t1338 + t1723;
t1708 = t1325 + t1722;
t1234 = -t1298 * t1665 + t1299 * t1660;
t1555 = t1610 * t1668 - t1611 * t1663;
t1706 = t1640 * t1669 - t1641 * t1664;
t1221 = t1235 * t1666 + t1360 * t1661;
t1168 = t1220 * t1667 + t1221 * t1662;
t1705 = pkin(2) * t1168 + t1741;
t1493 = -t1567 * t1661 - t1784;
t1435 = t1492 * t1667 + t1493 * t1662;
t1704 = pkin(2) * t1435 + t1740;
t1702 = t1661 * t1579;
t1701 = t1661 * t1714;
t1700 = t1666 * t1579;
t1699 = t1666 * t1714;
t1263 = pkin(2) * t1264;
t1695 = -pkin(1) * t1206 - t1263 - t1325 - t1760;
t1279 = pkin(2) * t1280;
t1694 = -pkin(1) * t1223 - t1279 - t1338 - t1757;
t1197 = t1257 * t1665 + t1797;
t1231 = -pkin(5) * t1305 + qJ(6) * t1257;
t1693 = -pkin(4) * t1305 + pkin(10) * t1197 + qJ(6) * t1797 + t1665 * t1231;
t1272 = -pkin(5) * t1423 + qJ(6) * t1488 - t1305;
t1692 = -qJ(6) * t1791 + t1665 * t1272 + t1758;
t1472 = t1523 * t1666 - t1842;
t1407 = t1471 * t1667 + t1472 * t1662;
t1691 = pkin(2) * t1407 + t1712;
t1689 = pkin(5) * t1504 + t1707;
t1178 = t1197 * t1661 - t1305 * t1666;
t1688 = pkin(3) * t1178 + t1693;
t1687 = t1334 + t1692;
t1686 = t1274 + t1687;
t1179 = t1197 * t1666 + t1305 * t1661;
t1153 = t1178 * t1667 + t1179 * t1662;
t1683 = pkin(2) * t1153 + t1688;
t1678 = -t1249 + t1843;
t1646 = t1655 - t1670;
t1645 = -t1670 - t1768;
t1644 = t1670 - t1768;
t1637 = -t1655 + t1768;
t1636 = t1655 + t1768;
t1634 = qJDD(1) * t1664 + t1669 * t1671;
t1633 = t1754 * qJDD(1);
t1630 = 0.2e1 * t1653 + t1756;
t1628 = t1668 * t1638;
t1627 = t1754 * t1801;
t1619 = -pkin(6) * t1634 + g(3) * t1669;
t1615 = -t1620 + t1657;
t1614 = -t1657 + t1827;
t1613 = t1631 * t1668 - t1659 * t1801;
t1612 = t1663 * t1713 - t1801 * t1826;
t1608 = -t1645 * t1663 - t1772;
t1607 = -t1644 * t1663 + t1628;
t1606 = t1668 * t1828 - t1774;
t1605 = t1646 * t1668 - t1773;
t1604 = t1645 * t1668 - t1773;
t1603 = t1644 * t1668 + t1774;
t1602 = t1663 * t1828 + t1628;
t1601 = t1646 * t1663 + t1772;
t1600 = (t1631 + t1653) * t1663;
t1597 = -t1630 * t1663 + t1599;
t1596 = t1630 * t1668 + t1632 * t1663;
t1594 = t1620 - t1827;
t1578 = -t1586 + t1731;
t1577 = t1585 - t1731;
t1576 = (t1621 * t1667 + t1622 * t1662) * t1658;
t1575 = (t1621 * t1662 - t1622 * t1667) * t1658;
t1574 = -pkin(7) * t1604 - t1775;
t1573 = -pkin(7) * t1602 - t1776;
t1571 = -t1620 - t1827;
t1569 = -pkin(1) * t1604 + t1611;
t1568 = -pkin(1) * t1602 + t1610;
t1551 = pkin(1) * t1632 + pkin(7) * t1606 + t1775;
t1550 = -pkin(1) * t1630 + pkin(7) * t1608 - t1776;
t1549 = t1614 * t1667 - t1778;
t1548 = -t1615 * t1662 + t1839;
t1547 = t1614 * t1662 + t1777;
t1546 = t1615 * t1667 + t1841;
t1545 = -t1609 * t1662 - t1777;
t1538 = (qJD(3) + t1658) * t1622 + t1728;
t1537 = pkin(1) * t1623 + pkin(7) * t1556;
t1536 = t1570 * t1667 - t1622 * t1770;
t1535 = t1570 * t1662 + t1622 * t1769;
t1534 = -t1621 * t1769 + t1662 * t1698;
t1533 = -t1621 * t1770 - t1667 * t1698;
t1531 = pkin(1) * t1636 + pkin(7) * t1633 + t1556;
t1530 = t1586 - t1585;
t1529 = t1590 * t1667 - t1841;
t1519 = -t1564 + t1583;
t1518 = t1563 - t1583;
t1517 = -t1700 + t1701;
t1516 = -t1702 - t1699;
t1514 = -t1575 * t1663 + t1576 * t1668;
t1513 = t1575 * t1668 + t1576 * t1663;
t1510 = t1564 - t1563;
t1507 = -t1585 - t1586;
t1505 = -pkin(8) * t1544 - t1782;
t1503 = -pkin(8) * t1528 - t1783;
t1501 = -t1547 * t1663 + t1549 * t1668;
t1500 = -t1546 * t1663 + t1548 * t1668;
t1499 = t1547 * t1668 + t1549 * t1663;
t1498 = t1546 * t1668 + t1548 * t1663;
t1497 = t1577 * t1666 - t1785;
t1496 = -t1578 * t1661 + t1840;
t1495 = t1577 * t1661 + t1784;
t1494 = t1578 * t1666 + t1842;
t1490 = -t1544 * t1663 + t1545 * t1668;
t1489 = t1544 * t1668 + t1545 * t1663;
t1487 = -t1539 * t1667 + t1543 * t1662;
t1486 = -t1538 * t1667 - t1662 * t1829;
t1484 = -t1538 * t1662 + t1667 * t1829;
t1478 = -t1535 * t1663 + t1536 * t1668;
t1477 = -t1533 * t1663 + t1534 * t1668;
t1476 = t1535 * t1668 + t1536 * t1663;
t1475 = t1533 * t1668 + t1534 * t1663;
t1474 = -t1528 * t1663 + t1529 * t1668;
t1473 = t1528 * t1668 + t1529 * t1663;
t1469 = (t1565 * t1665 + t1566 * t1660) * t1584;
t1468 = (t1565 * t1660 - t1566 * t1665) * t1584;
t1461 = -pkin(2) * t1829 + pkin(8) * t1545 - t1783;
t1460 = -t1516 * t1662 + t1517 * t1667;
t1459 = t1516 * t1667 + t1517 * t1662;
t1458 = t1666 * t1483 - t1701;
t1457 = t1661 * t1483 + t1699;
t1456 = -t1661 * t1697 + t1700;
t1455 = t1666 * t1697 + t1702;
t1454 = -pkin(2) * t1538 + pkin(8) * t1529 + t1782;
t1440 = -t1495 * t1662 + t1497 * t1667;
t1439 = -t1494 * t1662 + t1496 * t1667;
t1438 = t1495 * t1667 + t1497 * t1662;
t1437 = t1494 * t1667 + t1496 * t1662;
t1436 = -t1492 * t1662 + t1493 * t1667;
t1434 = pkin(2) * t1572 + pkin(8) * t1445;
t1433 = -t1485 * t1663 + t1487 * t1668;
t1432 = -t1484 * t1663 + t1486 * t1668;
t1431 = t1485 * t1668 + t1487 * t1663;
t1430 = t1484 * t1668 + t1486 * t1663;
t1429 = -pkin(9) * t1492 - t1786;
t1420 = t1453 * t1665 - t1566 * t1780;
t1419 = t1453 * t1660 + t1566 * t1779;
t1418 = -t1565 * t1779 + t1660 * t1696;
t1417 = t1565 * t1780 + t1665 * t1696;
t1416 = -pkin(1) * t1489 - t1718;
t1415 = -pkin(9) * t1471 - t1787;
t1414 = t1666 * t1469 + t1661 * t1690;
t1413 = t1661 * t1469 - t1666 * t1690;
t1412 = t1518 * t1665 - t1793;
t1411 = -t1519 * t1660 + t1790;
t1410 = t1518 * t1660 + t1792;
t1409 = t1519 * t1665 + t1791;
t1408 = -t1471 * t1662 + t1472 * t1667;
t1406 = -pkin(1) * t1473 - t1837;
t1404 = -t1462 * t1666 - t1661 * t1838;
t1402 = -t1462 * t1661 + t1666 * t1838;
t1401 = -pkin(8) * t1485 - t1444;
t1395 = -t1459 * t1663 + t1460 * t1668;
t1394 = t1459 * t1668 + t1460 * t1663;
t1393 = -t1457 * t1662 + t1458 * t1667;
t1392 = -t1455 * t1662 + t1456 * t1667;
t1391 = t1457 * t1667 + t1458 * t1662;
t1390 = t1455 * t1667 + t1456 * t1662;
t1385 = t1420 * t1666 - t1751;
t1384 = t1418 * t1666 + t1751;
t1383 = t1420 * t1661 + t1750;
t1382 = t1418 * t1661 - t1750;
t1381 = -pkin(2) * t1571 + pkin(8) * t1487 + t1445;
t1380 = -pkin(1) * t1431 - t1823;
t1376 = -pkin(7) * t1489 - t1461 * t1663 + t1505 * t1668;
t1375 = t1445 * t1668 - t1789;
t1374 = t1445 * t1663 + t1788;
t1373 = -pkin(3) * t1838 + pkin(9) * t1493 - t1787;
t1372 = -pkin(7) * t1473 - t1454 * t1663 + t1503 * t1668;
t1371 = -pkin(3) * t1462 + pkin(9) * t1472 + t1786;
t1370 = -pkin(1) * t1829 + pkin(7) * t1490 + t1461 * t1668 + t1505 * t1663;
t1365 = -t1438 * t1663 + t1440 * t1668;
t1364 = -t1437 * t1663 + t1439 * t1668;
t1363 = t1438 * t1668 + t1440 * t1663;
t1362 = t1437 * t1668 + t1439 * t1663;
t1355 = -pkin(1) * t1538 + pkin(7) * t1474 + t1454 * t1668 + t1503 * t1663;
t1354 = -t1435 * t1663 + t1436 * t1668;
t1353 = t1435 * t1668 + t1436 * t1663;
t1351 = -t1423 * t1665 - t1660 * t1832;
t1349 = -t1423 * t1660 + t1665 * t1832;
t1346 = t1412 * t1666 - t1424 * t1661;
t1345 = t1411 * t1666 + t1427 * t1661;
t1344 = t1412 * t1661 + t1424 * t1666;
t1343 = t1411 * t1661 - t1427 * t1666;
t1342 = -t1413 * t1662 + t1414 * t1667;
t1341 = t1413 * t1667 + t1414 * t1662;
t1332 = -t1407 * t1663 + t1408 * t1668;
t1331 = t1407 * t1668 + t1408 * t1663;
t1330 = t1351 * t1666 + t1510 * t1661;
t1329 = t1351 * t1661 - t1510 * t1666;
t1328 = -pkin(1) * t1374 - t1824;
t1324 = pkin(9) * t1327;
t1323 = -t1403 * t1662 + t1405 * t1667;
t1322 = -t1402 * t1662 + t1404 * t1667;
t1320 = t1402 * t1667 + t1404 * t1662;
t1319 = -t1391 * t1663 + t1393 * t1668;
t1318 = -t1390 * t1663 + t1392 * t1668;
t1317 = t1391 * t1668 + t1393 * t1663;
t1316 = t1390 * t1668 + t1392 * t1663;
t1315 = -t1383 * t1662 + t1385 * t1667;
t1314 = -t1382 * t1662 + t1384 * t1667;
t1313 = t1383 * t1667 + t1385 * t1662;
t1312 = t1382 * t1667 + t1384 * t1662;
t1308 = t1817 - t1822;
t1307 = t1357 - t1802;
t1306 = t1356 - t1803;
t1303 = -pkin(7) * t1374 - pkin(8) * t1788 - t1434 * t1663;
t1302 = pkin(3) * t1480 + pkin(9) * t1311;
t1301 = pkin(1) * t1572 + pkin(7) * t1375 - pkin(8) * t1789 + t1434 * t1668;
t1300 = -pkin(8) * t1435 - t1373 * t1662 + t1429 * t1667;
t1293 = -pkin(7) * t1431 - t1381 * t1663 + t1401 * t1668;
t1292 = -pkin(1) * t1571 + pkin(7) * t1433 + t1381 * t1668 + t1401 * t1663;
t1291 = -pkin(8) * t1407 - t1371 * t1662 + t1415 * t1667;
t1290 = -pkin(2) * t1838 + pkin(8) * t1436 + t1373 * t1667 + t1429 * t1662;
t1289 = -pkin(9) * t1403 - t1310;
t1288 = -t1344 * t1662 + t1346 * t1667;
t1287 = -t1343 * t1662 + t1345 * t1667;
t1286 = t1344 * t1667 + t1346 * t1662;
t1285 = t1343 * t1667 + t1345 * t1662;
t1284 = -t1341 * t1663 + t1342 * t1668;
t1283 = t1341 * t1668 + t1342 * t1663;
t1282 = -pkin(3) * t1507 + pkin(9) * t1405 + t1311;
t1277 = -pkin(2) * t1462 + pkin(8) * t1408 + t1371 * t1667 + t1415 * t1662;
t1270 = -t1329 * t1662 + t1330 * t1667;
t1269 = t1329 * t1667 + t1330 * t1662;
t1268 = -pkin(1) * t1353 - t1704;
t1267 = t1299 - t1820;
t1266 = t1298 - t1821;
t1261 = -t1321 * t1663 + t1323 * t1668;
t1260 = -t1320 * t1663 + t1322 * t1668;
t1259 = t1321 * t1668 + t1323 * t1663;
t1258 = t1320 * t1668 + t1322 * t1663;
t1256 = t1284 * t1669 + t1468 * t1664;
t1255 = t1284 * t1664 - t1468 * t1669;
t1254 = -t1313 * t1663 + t1315 * t1668;
t1253 = -t1312 * t1663 + t1314 * t1668;
t1252 = t1313 * t1668 + t1315 * t1663;
t1251 = t1312 * t1668 + t1314 * t1663;
t1250 = -pkin(1) * t1331 - t1691;
t1248 = t1311 * t1667 - t1795;
t1246 = t1254 * t1669 + t1419 * t1664;
t1245 = t1253 * t1669 - t1417 * t1664;
t1244 = t1254 * t1664 - t1419 * t1669;
t1243 = t1253 * t1664 + t1417 * t1669;
t1238 = t1297 * t1665 - t1367 * t1660 - t1802;
t1237 = -qJ(6) * t1790 - t1272 * t1660 - t1803;
t1236 = t1557 - t1689 - t1820;
t1232 = -t1678 - t1821;
t1229 = -t1286 * t1663 + t1288 * t1668;
t1228 = -t1285 * t1663 + t1287 * t1668;
t1227 = t1286 * t1668 + t1288 * t1663;
t1226 = t1285 * t1668 + t1287 * t1663;
t1225 = -pkin(1) * t1259 - t1735;
t1215 = -t1234 - t1804;
t1214 = -t1269 * t1663 + t1270 * t1668;
t1213 = t1269 * t1668 + t1270 * t1663;
t1212 = -pkin(7) * t1353 - t1290 * t1663 + t1300 * t1668;
t1211 = t1229 * t1669 + t1410 * t1664;
t1210 = t1228 * t1669 + t1409 * t1664;
t1209 = t1229 * t1664 - t1410 * t1669;
t1208 = t1228 * t1664 - t1409 * t1669;
t1204 = -pkin(1) * t1838 + pkin(7) * t1354 + t1290 * t1668 + t1300 * t1663;
t1203 = -t1267 * t1661 + t1307 * t1666 - t1805;
t1201 = pkin(6) * (t1224 * t1669 + t1398 * t1664);
t1200 = -t1266 * t1661 + t1306 * t1666 - t1806;
t1198 = pkin(6) * (t1218 * t1669 + t1388 * t1664);
t1196 = t1257 * t1660 - t1796;
t1194 = -pkin(7) * t1331 - t1277 * t1663 + t1291 * t1668;
t1193 = -pkin(8) * t1321 - t1282 * t1662 + t1289 * t1667;
t1192 = t1214 * t1669 + t1349 * t1664;
t1191 = t1214 * t1664 - t1349 * t1669;
t1190 = -pkin(1) * t1462 + pkin(7) * t1332 + t1277 * t1668 + t1291 * t1663;
t1189 = t1267 * t1666 + t1307 * t1661 + t1733;
t1188 = -pkin(2) * t1507 + pkin(8) * t1323 + t1282 * t1667 + t1289 * t1662;
t1187 = -t1247 * t1663 + t1248 * t1668;
t1186 = t1247 * t1668 + t1248 * t1663;
t1185 = t1266 * t1666 + t1306 * t1661 + t1734;
t1183 = pkin(6) * (t1207 * t1669 + t1350 * t1664);
t1182 = -pkin(8) * t1247 - pkin(9) * t1794 - t1302 * t1662;
t1181 = pkin(2) * t1480 + pkin(8) * t1248 - pkin(9) * t1795 + t1302 * t1667;
t1180 = t1215 * t1666 + t1350 * t1819 - t1807;
t1176 = t1241 * t1665 - t1242 * t1660 - t1804;
t1175 = t1215 * t1661 + t1350 * t1753 + t1324;
t1174 = -t1236 * t1661 + t1238 * t1666 - t1805;
t1173 = -pkin(4) * t1196 + t1818;
t1172 = -t1232 * t1661 + t1237 * t1666 - t1806;
t1171 = t1236 * t1666 + t1238 * t1661 + t1733;
t1170 = t1232 * t1666 + t1237 * t1661 + t1734;
t1169 = -t1220 * t1662 + t1221 * t1667;
t1167 = -t1356 + t1694;
t1166 = -t1710 - t1825;
t1165 = -pkin(1) * t1186 - t1739;
t1164 = t1176 * t1666 - t1308 * t1661 - t1807;
t1163 = -pkin(3) * t1350 + t1176 * t1661 + t1308 * t1666 + t1324;
t1162 = t1694 + t1834;
t1161 = -pkin(9) * t1220 + (-pkin(10) * t1666 + t1819) * t1234;
t1160 = -t1686 - t1825;
t1159 = -pkin(10) * t1196 + qJ(6) * t1796 - t1231 * t1660;
t1158 = -t1189 * t1662 + t1203 * t1667 - t1808;
t1157 = -t1185 * t1662 + t1200 * t1667 - t1809;
t1156 = t1695 - t1235;
t1155 = t1189 * t1667 + t1203 * t1662 + t1736;
t1154 = -t1178 * t1662 + t1179 * t1667;
t1152 = -pkin(7) * t1259 - t1188 * t1663 + t1193 * t1668;
t1151 = t1185 * t1667 + t1200 * t1662 + t1737;
t1150 = -pkin(1) * t1507 + pkin(7) * t1261 + t1188 * t1668 + t1193 * t1663;
t1149 = pkin(9) * t1221 + (-pkin(10) * t1661 + t1753) * t1234;
t1148 = t1695 + t1835;
t1147 = -t1175 * t1662 + t1180 * t1667 - t1810;
t1146 = -pkin(7) * t1186 - t1181 * t1663 + t1182 * t1668;
t1145 = t1175 * t1667 + t1180 * t1662 + t1738;
t1144 = -t1168 * t1663 + t1169 * t1668;
t1143 = t1168 * t1668 + t1169 * t1663;
t1142 = pkin(1) * t1480 + pkin(7) * t1187 + t1181 * t1668 + t1182 * t1663;
t1141 = -t1171 * t1662 + t1174 * t1667 - t1808;
t1140 = t1171 * t1667 + t1174 * t1662 + t1736;
t1139 = -t1170 * t1662 + t1172 * t1667 - t1809;
t1138 = t1170 * t1667 + t1172 * t1662 + t1737;
t1137 = -t1163 * t1662 + t1164 * t1667 - t1810;
t1136 = t1163 * t1667 + t1164 * t1662 + t1738;
t1135 = -pkin(9) * t1178 + t1159 * t1666 - t1173 * t1661;
t1134 = -t1153 * t1663 + t1154 * t1668;
t1133 = t1153 * t1668 + t1154 * t1663;
t1132 = -t1155 * t1663 + t1158 * t1668 - t1811;
t1131 = -t1151 * t1663 + t1157 * t1668 - t1812;
t1130 = t1155 * t1668 + t1158 * t1663 + t1761;
t1129 = t1151 * t1668 + t1157 * t1663 + t1762;
t1128 = -pkin(3) * t1196 + pkin(9) * t1179 + t1159 * t1661 + t1173 * t1666;
t1127 = -pkin(8) * t1168 - t1149 * t1662 + t1161 * t1667;
t1126 = -pkin(1) * t1143 - t1705;
t1125 = -pkin(2) * t1234 + pkin(8) * t1169 + t1149 * t1667 + t1161 * t1662;
t1124 = -t1145 * t1663 + t1147 * t1668 - t1813;
t1123 = t1145 * t1668 + t1147 * t1663 + t1763;
t1122 = -t1140 * t1663 + t1141 * t1668 - t1811;
t1121 = t1140 * t1668 + t1141 * t1663 + t1761;
t1120 = -t1138 * t1663 + t1139 * t1668 - t1812;
t1119 = t1138 * t1668 + t1139 * t1663 + t1762;
t1118 = -t1136 * t1663 + t1137 * t1668 - t1813;
t1117 = t1136 * t1668 + t1137 * t1663 + t1763;
t1116 = -pkin(1) * t1133 - t1683;
t1115 = -pkin(8) * t1153 - t1128 * t1662 + t1135 * t1667;
t1114 = -pkin(2) * t1196 + pkin(8) * t1154 + t1128 * t1667 + t1135 * t1662;
t1113 = -pkin(7) * t1143 - t1125 * t1663 + t1127 * t1668;
t1112 = -pkin(1) * t1234 + pkin(7) * t1144 + t1125 * t1668 + t1127 * t1663;
t1111 = -pkin(7) * t1133 - t1114 * t1663 + t1115 * t1668;
t1110 = -pkin(1) * t1196 + pkin(7) * t1134 + t1114 * t1668 + t1115 * t1663;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1635, 0, -t1634, 0, t1715, -t1619, -t1706, -pkin(6) * t1706, t1613 * t1669 - t1726, t1597 * t1669 + t1637 * t1664, t1607 * t1669 + t1664 * t1756, t1612 * t1669 + t1726, t1605 * t1669 + t1654 * t1664, qJDD(2) * t1664 + t1627 * t1669, t1669 * t1573 - t1664 * t1568 - pkin(6) * (t1606 * t1664 + t1632 * t1669), t1669 * t1574 - t1664 * t1569 - pkin(6) * (t1608 * t1664 - t1630 * t1669), t1669 * t1555 - pkin(6) * (t1633 * t1664 + t1636 * t1669), -pkin(6) * (t1556 * t1664 + t1623 * t1669) - (pkin(1) * t1664 - pkin(7) * t1669) * t1555, t1478 * t1669 - t1747, t1432 * t1669 + t1594 * t1664, t1500 * t1669 + t1543 * t1664, t1477 * t1669 + t1747, t1501 * t1669 - t1539 * t1664, t1669 * t1514 + t1664 * t1755, t1669 * t1372 - t1664 * t1406 - pkin(6) * (t1474 * t1664 - t1538 * t1669), t1669 * t1376 - t1664 * t1416 - pkin(6) * (t1490 * t1664 - t1669 * t1829), t1669 * t1293 - t1664 * t1380 - pkin(6) * (t1433 * t1664 - t1571 * t1669), t1669 * t1303 - t1664 * t1328 - pkin(6) * (t1375 * t1664 + t1572 * t1669), t1319 * t1669 + t1749, t1260 * t1669 + t1530 * t1664, t1364 * t1669 + t1466 * t1664, t1318 * t1669 - t1749, t1365 * t1669 - t1463 * t1664, t1669 * t1395 + t1664 * t1732, t1669 * t1194 - t1664 * t1250 - pkin(6) * (t1332 * t1664 - t1462 * t1669), t1669 * t1212 - t1664 * t1268 - pkin(6) * (t1354 * t1664 - t1669 * t1838), t1669 * t1152 - t1664 * t1225 - pkin(6) * (t1261 * t1664 - t1507 * t1669), t1669 * t1146 - t1664 * t1165 - pkin(6) * (t1187 * t1664 + t1480 * t1669), t1246, t1192, t1210, t1245, t1211, t1256, t1131 * t1669 - t1166 * t1664 - t1815, t1132 * t1669 - t1167 * t1664 - t1814, t1124 * t1669 - t1156 * t1664 - t1816, t1669 * t1113 - t1664 * t1126 - pkin(6) * (t1144 * t1664 - t1234 * t1669), t1246, t1192, t1210, t1245, t1211, t1256, t1120 * t1669 - t1160 * t1664 - t1815, t1122 * t1669 - t1162 * t1664 - t1814, t1118 * t1669 - t1148 * t1664 - t1816, t1669 * t1111 - t1664 * t1116 - pkin(6) * (t1134 * t1664 - t1196 * t1669); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1634, 0, t1635, 0, t1619, t1715, t1727, pkin(6) * t1727, t1613 * t1664 + t1725, t1597 * t1664 - t1637 * t1669, t1607 * t1664 - t1669 * t1756, t1612 * t1664 - t1725, t1605 * t1664 - t1654 * t1669, -qJDD(2) * t1669 + t1627 * t1664, t1664 * t1573 + t1669 * t1568 + pkin(6) * (t1606 * t1669 - t1632 * t1664), t1664 * t1574 + t1669 * t1569 + pkin(6) * (t1608 * t1669 + t1630 * t1664), t1664 * t1555 + pkin(6) * (t1633 * t1669 - t1636 * t1664), pkin(6) * (t1556 * t1669 - t1623 * t1664) - (-pkin(1) * t1669 - pkin(7) * t1664) * t1555, t1478 * t1664 + t1746, t1432 * t1664 - t1594 * t1669, t1500 * t1664 - t1543 * t1669, t1477 * t1664 - t1746, t1501 * t1664 + t1539 * t1669, t1664 * t1514 - t1669 * t1755, t1664 * t1372 + t1669 * t1406 + pkin(6) * (t1474 * t1669 + t1538 * t1664), t1664 * t1376 + t1669 * t1416 + pkin(6) * (t1490 * t1669 + t1664 * t1829), t1664 * t1293 + t1669 * t1380 + pkin(6) * (t1433 * t1669 + t1571 * t1664), t1664 * t1303 + t1669 * t1328 + pkin(6) * (t1375 * t1669 - t1572 * t1664), t1319 * t1664 - t1748, t1260 * t1664 - t1530 * t1669, t1364 * t1664 - t1466 * t1669, t1318 * t1664 + t1748, t1365 * t1664 + t1463 * t1669, t1664 * t1395 - t1669 * t1732, t1664 * t1194 + t1669 * t1250 + pkin(6) * (t1332 * t1669 + t1462 * t1664), t1664 * t1212 + t1669 * t1268 + pkin(6) * (t1354 * t1669 + t1664 * t1838), t1664 * t1152 + t1669 * t1225 + pkin(6) * (t1261 * t1669 + t1507 * t1664), t1664 * t1146 + t1669 * t1165 + pkin(6) * (t1187 * t1669 - t1480 * t1664), t1244, t1191, t1208, t1243, t1209, t1255, t1131 * t1664 + t1166 * t1669 + t1198, t1132 * t1664 + t1167 * t1669 + t1201, t1124 * t1664 + t1156 * t1669 + t1183, t1664 * t1113 + t1669 * t1126 + pkin(6) * (t1144 * t1669 + t1234 * t1664), t1244, t1191, t1208, t1243, t1209, t1255, t1120 * t1664 + t1160 * t1669 + t1198, t1122 * t1664 + t1162 * t1669 + t1201, t1118 * t1664 + t1148 * t1669 + t1183, t1664 * t1111 + t1669 * t1116 + pkin(6) * (t1134 * t1669 + t1196 * t1664); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1640, t1641, 0, 0, t1600, t1596, t1603, t1599, t1601, 0, t1551, t1550, t1531, t1537, t1476, t1430, t1498, t1475, t1499, t1513, t1355, t1370, t1292, t1301, t1317, t1258, t1362, t1316, t1363, t1394, t1190, t1204, t1150, t1142, t1252, t1213, t1226, t1251, t1227, t1283, t1129, t1130, t1123, t1112, t1252, t1213, t1226, t1251, t1227, t1283, t1119, t1121, t1117, t1110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1671, 0, 0, -g(3), -t1640, 0, t1613, t1597, t1607, t1612, t1605, t1627, t1573, t1574, t1555, pkin(7) * t1555, t1478, t1432, t1500, t1477, t1501, t1514, t1372, t1376, t1293, t1303, t1319, t1260, t1364, t1318, t1365, t1395, t1194, t1212, t1152, t1146, t1254, t1214, t1228, t1253, t1229, t1284, t1131, t1132, t1124, t1113, t1254, t1214, t1228, t1253, t1229, t1284, t1120, t1122, t1118, t1111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1671, 0, qJDD(1), 0, g(3), 0, -t1641, 0, t1649, -t1637, -t1756, -t1649, -t1654, -qJDD(2), t1568, t1569, 0, pkin(1) * t1555, t1595, -t1594, -t1543, -t1595, t1539, -t1755, t1406, t1416, t1380, t1328, -t1532, -t1530, -t1466, t1532, t1463, -t1732, t1250, t1268, t1225, t1165, -t1419, -t1349, -t1409, t1417, -t1410, -t1468, t1166, t1167, t1156, t1126, -t1419, -t1349, -t1409, t1417, -t1410, -t1468, t1160, t1162, t1148, t1116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1640, t1641, 0, 0, t1600, t1596, t1603, t1599, t1601, 0, t1551, t1550, t1531, t1537, t1476, t1430, t1498, t1475, t1499, t1513, t1355, t1370, t1292, t1301, t1317, t1258, t1362, t1316, t1363, t1394, t1190, t1204, t1150, t1142, t1252, t1213, t1226, t1251, t1227, t1283, t1129, t1130, t1123, t1112, t1252, t1213, t1226, t1251, t1227, t1283, t1119, t1121, t1117, t1110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1631, t1632, t1638, -t1653, t1646, t1653, 0, -t1623, t1610, 0, t1536, t1486, t1548, t1534, t1549, t1576, t1503, t1505, t1401, -pkin(8) * t1444, t1393, t1322, t1439, t1392, t1440, t1460, t1291, t1300, t1193, t1182, t1315, t1270, t1287, t1314, t1288, t1342, t1157, t1158, t1147, t1127, t1315, t1270, t1287, t1314, t1288, t1342, t1139, t1141, t1137, t1115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1745, t1630, t1644, -t1713, t1639, -t1745, t1623, 0, t1611, 0, t1535, t1484, t1546, t1533, t1547, t1575, t1454, t1461, t1381, t1434, t1391, t1320, t1437, t1390, t1438, t1459, t1277, t1290, t1188, t1181, t1313, t1269, t1285, t1312, t1286, t1341, t1151, t1155, t1145, t1125, t1313, t1269, t1285, t1312, t1286, t1341, t1138, t1140, t1136, t1114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1649, t1637, t1756, t1649, t1654, qJDD(2), -t1610, -t1611, 0, 0, -t1595, t1594, t1543, t1595, -t1539, t1755, t1837, t1718, t1823, t1824, t1532, t1530, t1466, -t1532, -t1463, t1732, t1691, t1704, t1735, t1739, t1419, t1349, t1409, -t1417, t1410, t1468, t1710, t1279 + t1721, t1263 + t1708, t1705, t1419, t1349, t1409, -t1417, t1410, t1468, t1686, t1279 + t1709, t1263 + t1711, t1683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1570, -t1538, t1830, -t1617, t1614, t1617, 0, -t1572, t1508, 0, t1458, t1404, t1496, t1456, t1497, t1517, t1415, t1429, t1289, -pkin(9) * t1310, t1385, t1330, t1345, t1384, t1346, t1414, t1200, t1203, t1180, t1161, t1385, t1330, t1345, t1384, t1346, t1414, t1172, t1174, t1164, t1135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1771, t1829, t1615, -t1698, t1592, -t1771, t1572, 0, t1509, 0, t1457, t1402, t1494, t1455, t1495, t1516, t1371, t1373, t1282, t1302, t1383, t1329, t1343, t1382, t1344, t1413, t1185, t1189, t1175, t1149, t1383, t1329, t1343, t1382, t1344, t1413, t1170, t1171, t1163, t1128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1595, t1594, t1543, t1595, -t1539, t1755, -t1508, -t1509, 0, 0, t1532, t1530, t1466, -t1532, -t1463, t1732, t1712, t1740, t1400, t1309, t1419, t1349, t1409, -t1417, t1410, t1468, t1720, t1721, t1708, t1741, t1419, t1349, t1409, -t1417, t1410, t1468, t1687, t1709, t1711, t1688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, -t1462, t1831, t1579, t1577, -t1579, 0, -t1480, t1378, 0, t1420, t1351, t1411, t1418, t1412, t1469, t1306, t1307, t1215, -pkin(10) * t1234, t1420, t1351, t1411, t1418, t1412, t1469, t1237, t1238, t1176, t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1714, t1838, t1578, t1697, t1525, -t1714, t1480, 0, t1379, 0, t1512, -t1510, -t1427, -t1512, t1424, -t1690, t1266, t1267, -t1822, -pkin(4) * t1234, t1512, -t1510, -t1427, -t1512, t1424, -t1690, t1232, t1236, t1308, t1173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1532, t1530, t1466, -t1532, -t1463, t1732, -t1378, -t1379, 0, 0, t1419, t1349, t1409, -t1417, t1410, t1468, t1742, t1743, t1722, t1759, t1419, t1349, t1409, -t1417, t1410, t1468, t1692, t1723, t1724, t1693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1453, -t1423, t1833, -t1521, t1518, t1521, 0, t1360, t1298, 0, t1453, -t1423, t1833, -t1521, t1518, t1521, -qJ(6) * t1833, t1297, t1241, qJ(6) * t1249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1781, t1832, t1519, -t1696, t1442, -t1781, -t1360, 0, t1299, 0, t1781, t1832, t1519, -t1696, t1442, -t1781, t1272, t1367, t1242, t1231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1512, t1510, t1427, t1512, -t1424, t1690, -t1298, -t1299, 0, 0, -t1512, t1510, t1427, t1512, -t1424, t1690, t1678, t1689 - 0.2e1 * t1798, -t1817, -t1818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1453, -t1423, t1833, -t1521, t1518, t1521, 0, t1305, t1249, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1781, t1832, t1519, -t1696, t1442, -t1781, -t1305, 0, t1257, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1512, t1510, t1427, t1512, -t1424, t1690, -t1249, -t1257, 0, 0;];
m_new_reg  = t1;
