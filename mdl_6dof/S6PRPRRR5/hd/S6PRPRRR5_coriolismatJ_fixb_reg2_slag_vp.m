% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRR5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:43:42
% EndTime: 2019-03-08 20:44:00
% DurationCPUTime: 15.67s
% Computational Cost: add. (12762->604), mult. (26804->835), div. (0->0), fcn. (30180->10), ass. (0->466)
t731 = qJD(4) + qJD(5);
t579 = sin(qJ(4));
t583 = cos(qJ(4));
t576 = sin(pkin(6));
t584 = cos(qJ(2));
t789 = t576 * t584;
t820 = cos(pkin(6));
t518 = -t579 * t789 + t583 * t820;
t578 = sin(qJ(5));
t582 = cos(qJ(5));
t615 = t579 * t820 + t583 * t789;
t681 = t578 * t518 + t582 * t615;
t581 = cos(qJ(6));
t577 = sin(qJ(6));
t580 = sin(qJ(2));
t790 = t576 * t580;
t490 = t582 * t518;
t599 = t578 * t615;
t876 = -t599 + t490;
t894 = t876 * t581;
t771 = t577 * t790 + t894;
t685 = t771 * t581;
t788 = t577 * t876;
t284 = -t581 * t790 + t788;
t812 = t284 * t577;
t908 = (t876 - t685 - t812) * t681;
t911 = qJD(1) * t908;
t837 = t876 * pkin(5);
t574 = t581 ^ 2;
t572 = t577 ^ 2;
t846 = t572 / 0.2e1;
t689 = t574 / 0.2e1 + t846;
t896 = t689 * t681;
t910 = -t837 / 0.2e1 - pkin(10) * t896;
t561 = t578 * t579;
t775 = t582 * t583;
t535 = -t561 + t775;
t776 = t582 * t579;
t781 = t578 * t583;
t533 = t776 + t781;
t858 = t681 / 0.2e1;
t694 = -t681 / 0.2e1 + t858;
t667 = t694 * t533;
t900 = t876 / 0.2e1;
t901 = -t876 / 0.2e1;
t693 = t900 + t901;
t62 = t535 * t693 + t667;
t649 = t62 * qJD(1);
t909 = t62 * qJD(4);
t536 = t775 * t790;
t675 = t561 * t790;
t456 = -t536 + t675;
t907 = -t456 / 0.2e1;
t830 = t582 * pkin(4);
t563 = -pkin(5) - t830;
t848 = -t563 / 0.2e1;
t585 = -pkin(2) - pkin(8);
t882 = -pkin(9) + t585;
t538 = t882 * t579;
t526 = t582 * t538;
t688 = t882 * t583;
t671 = t578 * t688;
t877 = t526 + t671;
t892 = t877 * t581;
t856 = -t892 / 0.2e1;
t860 = -t894 / 0.2e1;
t560 = pkin(4) * t579 + qJ(3);
t834 = t533 * pkin(5);
t838 = pkin(10) * t535;
t668 = t834 - t838;
t606 = t560 + t668;
t893 = t877 * t577;
t194 = -t581 * t606 + t893;
t195 = t577 * t606 + t892;
t840 = t581 / 0.2e1;
t843 = t577 / 0.2e1;
t630 = t194 * t843 + t195 * t840;
t899 = -t877 / 0.2e1;
t610 = t899 + t630;
t906 = t610 * t535;
t905 = (-t194 + t893) * t535;
t904 = (-t195 + t892) * t535;
t611 = t685 / 0.2e1 + t812 / 0.2e1;
t903 = (t901 + t611) * t535;
t902 = -0.2e1 * t535;
t836 = t877 * pkin(5);
t680 = t578 * t538 - t582 * t688;
t898 = t680 * t577;
t897 = t680 * t581;
t808 = t680 * t877;
t855 = t680 / 0.2e1;
t895 = t855 * t876;
t621 = -t776 / 0.2e1 - t781 / 0.2e1;
t703 = -t790 / 0.2e1;
t308 = t533 * t703 + t621 * t790;
t758 = qJD(4) * t681;
t891 = t308 * qJD(2) + qJD(5) * t681 + t758;
t832 = t535 * pkin(5);
t833 = t533 * pkin(10);
t438 = t832 + t833;
t779 = t581 * t438;
t229 = t779 + t898;
t786 = t577 * t438;
t230 = t786 - t897;
t645 = t194 * t581 - t195 * t577;
t619 = t645 * t533;
t23 = (t229 * t581 + t230 * t577) * t535 + t619;
t841 = -t581 / 0.2e1;
t612 = t284 * t841 + t771 * t843;
t598 = t612 * t533;
t457 = t533 * t790;
t783 = t577 * t457;
t378 = t581 * t789 - t783;
t722 = t577 * t789;
t777 = t581 * t457;
t379 = t722 + t777;
t844 = -t577 / 0.2e1;
t626 = t378 * t844 + t379 * t840;
t54 = t598 - t626;
t792 = t54 * qJD(1);
t890 = t23 * qJD(2) - t792;
t839 = pkin(4) * t583;
t415 = t438 + t839;
t780 = t581 * t415;
t219 = t780 + t898;
t787 = t577 * t415;
t220 = -t897 + t787;
t21 = (t219 * t581 + t220 * t577) * t535 + t619;
t889 = t21 * qJD(2) - t792;
t831 = t578 * pkin(4);
t562 = pkin(10) + t831;
t888 = t456 * t848 - t626 * t562;
t887 = pkin(5) * t907 + t626 * pkin(10);
t796 = t533 * t563;
t886 = -t796 / 0.2e1 + t834 / 0.2e1;
t852 = t533 / 0.2e1;
t307 = (t852 + t621) * t790;
t746 = t307 * qJD(1);
t885 = t680 * t731 - t746;
t884 = 0.2e1 * t577;
t881 = t533 * t731;
t793 = t535 * t578;
t795 = t533 * t582;
t823 = qJD(4) * pkin(4);
t878 = (-t793 + t795) * t823;
t528 = t535 ^ 2;
t866 = t533 ^ 2;
t729 = t528 - t866;
t770 = t572 + t574;
t814 = t230 * t581;
t816 = t229 * t577;
t628 = t814 / 0.2e1 - t816 / 0.2e1;
t14 = t906 + (t855 + t628) * t533;
t17 = t903 + (0.1e1 / 0.2e1 - t689) * t533 * t681;
t175 = (-0.1e1 + t770) * t535 * t533;
t749 = t175 * qJD(3);
t875 = t17 * qJD(1) + t14 * qJD(2) + t749;
t817 = t220 * t581;
t818 = t219 * t577;
t629 = -t817 / 0.2e1 + t818 / 0.2e1;
t12 = t906 + (t855 - t629) * t533;
t18 = t903 + (t858 - t896) * t533;
t874 = t18 * qJD(1) + t12 * qJD(2) + t749;
t794 = t535 * t562;
t872 = -t794 / 0.2e1 + (-t795 / 0.2e1 + t793 / 0.2e1) * pkin(4) + t886;
t871 = t528 / 0.2e1 + t866 / 0.2e1;
t739 = t535 * qJD(2);
t849 = -t561 / 0.2e1;
t850 = t536 / 0.2e1;
t851 = -t535 / 0.2e1;
t306 = t850 + (t849 + t851) * t790;
t747 = t306 * qJD(1);
t870 = -t560 * t739 + t747;
t376 = t533 * t839 + t535 * t560;
t869 = -qJD(2) * t376 + t747;
t394 = (t846 - t574 / 0.2e1) * t535;
t782 = t577 * t581;
t715 = qJD(2) * t782;
t149 = t394 * t731 + t528 * t715;
t555 = t574 - t572;
t361 = t555 * t731 + t715 * t902;
t865 = pkin(5) / 0.2e1;
t864 = -pkin(10) / 0.2e1;
t863 = pkin(10) / 0.2e1;
t862 = t230 / 0.2e1;
t861 = -t284 / 0.2e1;
t696 = -t490 / 0.2e1;
t695 = -t526 / 0.2e1;
t847 = t563 / 0.2e1;
t842 = t578 / 0.2e1;
t691 = -t680 / 0.2e1 + t855;
t692 = t877 / 0.2e1 + t899;
t80 = t533 * t691 + t535 * t692;
t826 = t80 * qJD(4);
t824 = pkin(4) * qJD(5);
t53 = t598 + t626;
t822 = t53 * qJD(2);
t821 = t54 * qJD(2);
t813 = t284 * t533;
t809 = t681 * t456;
t807 = t680 * t456;
t802 = t456 * t535;
t800 = t456 * t577;
t799 = t456 * t581;
t798 = t457 * t533;
t48 = -t284 * t378 + t379 * t771 + t809;
t797 = t48 * qJD(1);
t791 = t576 ^ 2 * t584;
t401 = t577 * t535;
t402 = t581 * t535;
t774 = t62 * qJD(2);
t573 = t579 ^ 2;
t575 = t583 ^ 2;
t769 = t573 + t575;
t636 = 0.1e1 / 0.2e1 + t871;
t233 = t636 * t577;
t768 = qJD(2) * t233;
t287 = t636 * t581;
t767 = qJD(2) * t287;
t304 = t729 * t577;
t766 = qJD(2) * t304;
t305 = t729 * t581;
t765 = qJD(2) * t305;
t377 = -t533 * t560 + t535 * t839;
t763 = qJD(2) * t377;
t762 = qJD(2) * t394;
t418 = t555 * t528;
t761 = qJD(2) * t418;
t760 = qJD(2) * t576;
t759 = qJD(3) * t533;
t757 = qJD(4) * t577;
t756 = qJD(4) * t581;
t755 = qJD(5) * t560;
t754 = qJD(5) * t577;
t753 = qJD(5) * t581;
t752 = qJD(6) * t577;
t751 = qJD(6) * t581;
t105 = t457 * t876 + t580 * t791 + t809;
t750 = t105 * qJD(1);
t243 = (t791 + (t518 * t579 - t583 * t615) * t576) * t580;
t748 = t243 * qJD(1);
t745 = t729 * qJD(2);
t744 = t394 * qJD(6);
t395 = t577 * t533;
t743 = t395 * qJD(2);
t399 = t581 * t533;
t385 = t399 * qJD(2);
t419 = t770 * t535;
t742 = t419 * qJD(2);
t525 = t775 / 0.2e1 + t849;
t741 = t525 * qJD(2);
t740 = t533 * qJD(2);
t554 = t573 - t575;
t738 = t554 * qJD(2);
t737 = t579 * qJD(2);
t736 = t579 * qJD(4);
t735 = t583 * qJD(2);
t734 = t583 * qJD(4);
t730 = t12 * qJD(4) + t14 * qJD(5);
t728 = t18 * qJD(4) + t17 * qJD(5);
t727 = t578 * t823;
t726 = t578 * t824;
t723 = -t830 / 0.2e1;
t721 = qJ(3) * t737;
t720 = qJ(3) * t735;
t719 = t560 * t740;
t718 = t577 * t740;
t717 = t581 * t740;
t714 = t533 * t752;
t713 = t533 * t751;
t712 = t533 * t739;
t552 = t580 * t760;
t711 = t584 * t760;
t558 = t577 * t751;
t710 = t579 * t734;
t331 = t681 * t843;
t332 = t681 * t840;
t707 = -t800 / 0.2e1;
t706 = t799 / 0.2e1;
t551 = t790 / 0.2e1;
t702 = t789 / 0.2e1;
t701 = t788 / 0.2e1;
t700 = -t783 / 0.2e1;
t699 = -t401 / 0.2e1;
t698 = -t777 / 0.2e1;
t697 = t402 / 0.2e1;
t690 = t573 / 0.2e1 + t575 / 0.2e1;
t687 = pkin(4) * t731;
t686 = t771 * t533;
t684 = t770 * t681;
t683 = t770 * t562;
t682 = t770 * t582;
t453 = (-0.1e1 / 0.2e1 + t690) * t790;
t570 = qJD(2) * qJ(3);
t679 = qJD(1) * t453 - t570;
t426 = t731 * t535;
t677 = t731 * t577;
t676 = t731 * t581;
t672 = t528 * t558;
t670 = t848 + t723;
t669 = t578 * t687;
t664 = t689 * t562;
t663 = t689 * t582;
t662 = t771 * t851;
t661 = t533 * t426;
t660 = t731 * t782;
t659 = t535 * t881;
t658 = t577 * t676;
t631 = (t861 + t701) * t535;
t34 = t706 + t631;
t46 = t905 + (t229 - t898) * t533;
t655 = t34 * qJD(1) + t46 * qJD(2);
t605 = t535 * t900 - t667;
t593 = t284 * t851 + t577 * t605;
t36 = t706 + t593;
t44 = t905 + (t219 - t898) * t533;
t654 = t36 * qJD(1) + t44 * qJD(2);
t604 = t697 * t876 + t662;
t39 = t707 + t604;
t47 = t904 + (-t230 - t897) * t533;
t653 = t39 * qJD(1) + t47 * qJD(2);
t591 = t581 * t605 + t662;
t41 = t707 + t591;
t45 = t904 + (-t220 - t897) * t533;
t652 = t41 * qJD(1) + t45 * qJD(2);
t595 = t626 * t533 - t802 / 0.2e1;
t42 = t595 - t612;
t651 = -qJD(1) * t42 - qJD(2) * t645;
t650 = t80 * qJD(2) + t649;
t648 = t17 * qJD(3) + t911;
t647 = t18 * qJD(3) + t911;
t646 = t62 * qJD(3);
t644 = t817 - t818;
t643 = t814 - t816;
t642 = -t794 - t796;
t111 = t194 * t533 - t401 * t680;
t622 = t681 * t851 + t702;
t86 = t698 - t813 / 0.2e1 - t622 * t577;
t640 = qJD(1) * t86 - qJD(2) * t111;
t112 = -t195 * t533 + t402 * t680;
t85 = t700 + t686 / 0.2e1 + t622 * t581;
t639 = qJD(1) * t85 - qJD(2) * t112;
t163 = t860 + t894 / 0.2e1;
t590 = (-t562 / 0.2e1 + t831 / 0.2e1 + t863) * t535 + (-pkin(5) / 0.2e1 + t670) * t533;
t66 = t856 + t892 / 0.2e1 + t590 * t577;
t638 = qJD(1) * t163 + qJD(2) * t66;
t637 = t535 * (-qJD(6) - t740);
t625 = t802 / 0.2e1 - t798 / 0.2e1;
t177 = t551 + t625;
t635 = -qJD(1) * t177 - qJD(2) * t560;
t357 = t696 + t490 / 0.2e1;
t424 = t695 + t526 / 0.2e1;
t634 = qJD(1) * t357 + qJD(2) * t424;
t633 = t833 / 0.2e1 + t832 / 0.2e1;
t632 = t865 + t670;
t627 = t858 * t877 + t895;
t624 = t457 * t842 + t582 * t907;
t623 = t535 * t848 + t562 * t852;
t620 = t581 * t637;
t317 = qJD(6) * t525 + t712;
t617 = t438 / 0.2e1 + t633;
t616 = 0.2e1 * t535 * t658;
t588 = -t630 * t681 + t219 * t861 + t771 * t220 / 0.2e1 + t627;
t2 = t588 + t888;
t22 = -t194 * t219 + t195 * t220 + t808;
t614 = t2 * qJD(1) + t22 * qJD(2) + t12 * qJD(3);
t24 = -t194 * t229 + t195 * t230 + t808;
t589 = t229 * t861 - t610 * t681 + t771 * t862 + t895;
t4 = t589 - t887;
t613 = t4 * qJD(1) + t24 * qJD(2) + t14 * qJD(3);
t609 = t415 / 0.2e1 + t623;
t113 = t560 * t839;
t594 = -t680 * t901 - t681 * t899 - t627;
t19 = (t583 * t703 + t624) * pkin(4) + t594;
t608 = -t19 * qJD(1) + t113 * qJD(2) + t80 * qJD(3);
t26 = (t862 - t220 / 0.2e1) * t581 + (-t229 / 0.2e1 + t219 / 0.2e1) * t577;
t524 = pkin(4) * t682;
t607 = -qJD(2) * t26 - qJD(4) * t524;
t106 = t617 * t577;
t471 = t632 * t581;
t603 = pkin(5) * t753 - qJD(2) * t106 + qJD(4) * t471;
t108 = t617 * t581;
t470 = t632 * t577;
t602 = pkin(5) * t754 + qJD(2) * t108 + qJD(4) * t470;
t158 = t694 * t577;
t99 = t577 * t691 - t581 * t609;
t601 = -qJD(1) * t158 - qJD(2) * t99 - t563 * t757;
t162 = t694 * t581;
t97 = t577 * t609 + t581 * t691;
t600 = -qJD(1) * t162 - qJD(2) * t97 - t563 * t756;
t160 = t693 * t577;
t69 = t577 * t692 + t581 * t590;
t597 = -qJD(1) * t160 - qJD(2) * t69 - t577 * t727;
t587 = (t582 * t611 + t681 * t842) * pkin(4) - t562 * t896 + t876 * t847;
t10 = t587 - t910;
t389 = (t562 * t682 + t563 * t578) * pkin(4);
t586 = t628 * t562 + (t582 * t630 + t680 * t842) * pkin(4) + t877 * t847;
t6 = t836 / 0.2e1 + t629 * pkin(10) + t586;
t78 = (pkin(4) * t663 + t847 + t865) * t533 + (-t831 / 0.2e1 + t664 - t689 * pkin(10)) * t535;
t596 = t10 * qJD(1) + t6 * qJD(2) + t78 * qJD(3) + t389 * qJD(4);
t571 = qJ(3) * qJD(3);
t559 = t579 * t735;
t553 = qJ(3) * t789;
t550 = t577 * t726;
t545 = t555 * qJD(6);
t515 = t524 * qJD(5);
t473 = pkin(5) * t841 + t563 * t840 + t581 * t723;
t472 = pkin(5) * t844 + t563 * t843 + t577 * t723;
t454 = t690 * t790 + t551;
t446 = -t799 / 0.2e1;
t445 = t800 / 0.2e1;
t416 = t731 * t525;
t353 = t385 + t751;
t352 = -t743 - t752;
t316 = 0.2e1 * t695 - t671;
t309 = t535 * t551 - t675 / 0.2e1 + t850;
t302 = t309 * qJD(2);
t297 = t307 * qJD(2);
t295 = t306 * qJD(2);
t288 = t840 + (t528 + t866) * t841;
t286 = t658 - t762;
t285 = -t660 + t762;
t266 = t620 * t884;
t242 = 0.2e1 * t696 + t599;
t234 = t577 * t871 + t844;
t227 = t574 * t712 - t744;
t226 = t572 * t712 + t744;
t196 = t731 * t419;
t176 = t551 - t625;
t174 = qJD(6) * t399 - t765;
t173 = -qJD(6) * t395 + t766;
t168 = -t681 * t841 + t332;
t167 = 0.2e1 * t332;
t166 = -t681 * t844 + t331;
t165 = 0.2e1 * t331;
t164 = 0.2e1 * t860;
t159 = t843 * t876 + t701;
t147 = -t744 + (-t574 * t739 - t660) * t533;
t146 = t744 + (-t572 * t739 + t658) * t533;
t130 = t535 * t677 + t765;
t129 = t535 * t676 - t766;
t122 = (-qJD(6) + t740) * t402 * t884 - t555 * t881;
t110 = -qJD(6) * t401 - t581 * t881;
t109 = t898 + t779 / 0.2e1 - t633 * t581;
t107 = t897 - t786 / 0.2e1 + t633 * t577;
t100 = t898 + t780 / 0.2e1 - t623 * t581;
t98 = t897 - t787 / 0.2e1 + t623 * t577;
t88 = -t686 / 0.2e1 + t681 * t697 + t700 + t581 * t702;
t87 = t813 / 0.2e1 + t681 * t699 + t698 - t722 / 0.2e1;
t77 = t535 * t664 + (-t793 / 0.2e1 + t533 * t663) * pkin(4) + t770 * t838 / 0.2e1 - t886;
t72 = -0.2e1 * t896;
t68 = t402 * t864 + t872 * t581 + t893;
t67 = pkin(10) * t699 + t872 * t577 + 0.2e1 * t856;
t65 = -qJD(6) * t402 + t533 * t677;
t43 = t595 + t612;
t40 = t445 + t591;
t38 = t445 + t604;
t37 = t446 + t593;
t35 = t446 + t631;
t25 = t628 - t629;
t20 = pkin(4) * t624 + t551 * t839 - t594;
t9 = t587 + t910;
t5 = t817 * t863 + t818 * t864 - t836 / 0.2e1 + t586;
t3 = t589 + t887;
t1 = t588 - t888;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t243, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t105, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t48 + t731 * t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t552, -t711, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, t711 (-pkin(2) * t790 + t553) * qJD(2) + qJD(3) * t790, 0, 0, 0, 0, 0, 0 (t580 * t734 + t584 * t737) * t576 (-t580 * t736 + t584 * t735) * t576, -t552 * t769, t748 + (t585 * t769 * t790 + t553) * qJD(2) + t454 * qJD(3), 0, 0, 0, 0, 0, 0, t309 * t731 + t533 * t711, t308 * t731 + t535 * t711 (-t798 + t802) * qJD(2) - t909, t750 + (t457 * t877 + t560 * t789 + t807) * qJD(2) + t176 * qJD(3) + t20 * qJD(4), 0, 0, 0, 0, 0, 0 (t378 * t533 + t401 * t456) * qJD(2) + t37 * qJD(4) + t35 * qJD(5) + t88 * qJD(6) (-t379 * t533 + t402 * t456) * qJD(2) + t40 * qJD(4) + t38 * qJD(5) + t87 * qJD(6) (-t378 * t581 - t379 * t577) * t739 + t731 * t53, t797 + (-t194 * t378 + t195 * t379 + t807) * qJD(2) + t43 * qJD(3) + t1 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t454, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t176 + t909, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t43 + t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t518 + t552 * t583, qJD(4) * t615 - t552 * t579, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t876 + qJD(5) * t242 + t302, t891, -t774, t20 * qJD(2) + (-t578 * t681 - t582 * t876) * t823 + t646, 0, 0, 0, 0, 0, 0, qJD(2) * t37 + qJD(5) * t164 + qJD(6) * t166 - t756 * t876, qJD(2) * t40 + qJD(5) * t159 + qJD(6) * t168 + t757 * t876, t72 * qJD(5) - t758 * t770 + t822, t1 * qJD(2) + (t563 * t876 - t681 * t683) * qJD(4) + t9 * qJD(5) + t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t242 - qJD(5) * t876 + t302, t891, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t35 + qJD(4) * t164 + qJD(6) * t165 - t753 * t876, qJD(2) * t38 + qJD(4) * t159 + qJD(6) * t167 + t754 * t876, t72 * qJD(4) - qJD(5) * t684 + t822, t3 * qJD(2) + t9 * qJD(4) + (-pkin(10) * t684 - t837) * qJD(5) + t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88 * qJD(2) + t166 * qJD(4) + t165 * qJD(5) - qJD(6) * t771, qJD(2) * t87 + qJD(4) * t168 + qJD(5) * t167 + qJD(6) * t284, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t453 - t748, 0, 0, 0, 0, 0, 0, -t731 * t306, -t731 * t307, -t909, qJD(3) * t177 - qJD(4) * t19 - t750, 0, 0, 0, 0, 0, 0, qJD(4) * t36 + qJD(5) * t34 - qJD(6) * t85, qJD(4) * t41 + qJD(5) * t39 - qJD(6) * t86, t54 * t731, -qJD(3) * t42 + qJD(4) * t2 + qJD(5) * t4 - t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t571, -t710, t554 * qJD(4), 0, t710, 0, 0, qJ(3) * t734 + qJD(3) * t579, -qJ(3) * t736 + qJD(3) * t583, 0, t571, -t661, -t731 * t729, 0, t659, 0, 0, qJD(4) * t376 + t535 * t755 + t759, qJD(3) * t535 + qJD(4) * t377 - t533 * t755, 0, qJD(3) * t560 + qJD(4) * t113, -t574 * t661 - t672, -qJD(6) * t418 + t533 * t616, t305 * t731 - t535 * t714, -t572 * t661 + t672, -t304 * t731 - t535 * t713, t659, qJD(4) * t44 + qJD(5) * t46 + qJD(6) * t112 + t581 * t759, qJD(4) * t45 + qJD(5) * t47 + qJD(6) * t111 - t577 * t759, -qJD(3) * t419 - qJD(4) * t21 - qJD(5) * t23, -qJD(3) * t645 + qJD(4) * t22 + qJD(5) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t570, 0, 0, 0, 0, 0, 0, t737, t735, 0, -t679, 0, 0, 0, 0, 0, 0, t740, t739, 0, -t635 + t826, 0, 0, 0, 0, 0, 0, qJD(6) * t288 + t717, qJD(6) * t234 - t718, -t742, t651 + t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, t738, -t736, t559, -t734, 0, -t585 * t736 + t720, -t585 * t734 - t721, 0, 0, -t712, -t745, -t881, t712, -t426, 0, -qJD(4) * t877 + qJD(5) * t316 - t869, t763 + t885, -t649 + t878 (-t578 * t680 - t582 * t877) * t823 + t608, t147, t122, t130, t146, t129, t317 (t577 * t642 - t892) * qJD(4) + t67 * qJD(5) + t100 * qJD(6) + t654 (t581 * t642 + t893) * qJD(4) + t68 * qJD(5) + t98 * qJD(6) + t652, qJD(4) * t644 + t25 * qJD(5) - t889 (t562 * t644 + t563 * t877) * qJD(4) + t5 * qJD(5) + t614; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, -t745, -t881, t712, -t426, 0, qJD(4) * t316 - qJD(5) * t877 - t870, -t719 + t885, 0, 0, t147, t122, t130, t146, t129, t317, t67 * qJD(4) + (t577 * t668 - t892) * qJD(5) + t109 * qJD(6) + t655, t68 * qJD(4) + (t581 * t668 + t893) * qJD(5) + t107 * qJD(6) + t653, t25 * qJD(4) + qJD(5) * t643 - t890, t5 * qJD(4) + (pkin(10) * t643 - t836) * qJD(5) + t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t149, t660 * t902 - t761, t577 * t637, t149, t620, t416, qJD(3) * t288 + qJD(4) * t100 + qJD(5) * t109 - qJD(6) * t195 - t639, qJD(3) * t234 + qJD(4) * t98 + qJD(5) * t107 + qJD(6) * t194 - t640, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t453, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t177 + t909, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t42 + t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t570, 0, 0, 0, 0, 0, 0, -t737, -t735, 0, t679, 0, 0, 0, 0, 0, 0, -t740, -t739, 0, t635 + t826, 0, 0, 0, 0, 0, 0, -qJD(6) * t287 - t717, qJD(6) * t233 + t718, t742, -t651 + t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t731 * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t736, -t734, 0, 0, 0, 0, 0, 0, 0, 0, -t881, -t426, 0, t650 - t878, 0, 0, 0, 0, 0, 0, t110, t65, t196 (t535 * t683 + t796) * qJD(4) + t77 * qJD(5) + t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t881, -t426, 0, 0, 0, 0, 0, 0, 0, 0, t110, t65, t196, t77 * qJD(4) + (pkin(10) * t419 - t834) * qJD(5) + t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401 * t731 - t713 - t767, -t402 * t731 + t714 + t768, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t357 + t295, t297, t774, qJD(2) * t19 - t646, 0, 0, 0, 0, 0, 0, -qJD(2) * t36 + qJD(5) * t163 + qJD(6) * t158, -qJD(2) * t41 + qJD(5) * t160 + qJD(6) * t162, -t821, -qJD(2) * t2 + qJD(5) * t10 - t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, -t738, 0, -t559, 0, 0, -t720, t721, 0, 0, t712, t745, 0, -t712, 0, 0, qJD(5) * t424 + t869, t746 - t763, t649, -t608, t227, t266, t174, t226, t173, -t317, qJD(5) * t66 + qJD(6) * t99 - t654, qJD(5) * t69 + qJD(6) * t97 - t652, qJD(5) * t26 + t889, qJD(5) * t6 - t614; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t650, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t78 - t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t726, -t582 * t824, 0, 0, t558, t545, 0, -t558, 0, 0, t563 * t752 - t581 * t726, t563 * t751 + t550, t515, t389 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669 + t634, -t582 * t687, 0, 0, t558, t545, 0, -t558, 0, 0, qJD(6) * t472 - t581 * t669 + t638, qJD(6) * t473 + t550 - t597, t515 - t607 (-pkin(5) * t578 + pkin(10) * t682) * t824 + t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t361, t353, t285, t352, -t741, qJD(5) * t472 - t562 * t751 - t601, qJD(5) * t473 + t562 * t752 - t600, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t357 + t295, t297, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t34 - qJD(4) * t163, -qJD(2) * t39 - qJD(4) * t160, -t821, -qJD(2) * t4 - qJD(4) * t10 - t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t712, t745, 0, -t712, 0, 0, -qJD(4) * t424 + t870, t746 + t719, 0, 0, t227, t266, t174, t226, t173, -t317, -qJD(4) * t66 - qJD(6) * t108 - t655, -qJD(4) * t69 + qJD(6) * t106 - t653, -qJD(4) * t26 + t890, -qJD(4) * t6 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t78 - t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t634 + t727, t582 * t823, 0, 0, t558, t545, 0, -t558, 0, 0, -qJD(6) * t470 + t581 * t727 - t638, -qJD(6) * t471 + t597, t607, -t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t558, t545, 0, -t558, 0, 0, -pkin(5) * t752, -pkin(5) * t751, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t361, t353, t285, t352, -t741, -pkin(10) * t751 - t602, pkin(10) * t752 - t603, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t85 - qJD(4) * t158, qJD(2) * t86 - qJD(4) * t162, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t616 + t761, -t399 * t731 + t577 * t712, -t149, t395 * t731 + t581 * t712, t416, qJD(3) * t287 - qJD(4) * t99 + qJD(5) * t108 + t639, -qJD(3) * t233 - qJD(4) * t97 - qJD(5) * t106 + t640, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t767, -t768, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, -t361, -t385, t286, t743, t741, qJD(5) * t470 + t601, qJD(5) * t471 + t600, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, -t361, -t385, t286, t743, t741, t602, t603, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
