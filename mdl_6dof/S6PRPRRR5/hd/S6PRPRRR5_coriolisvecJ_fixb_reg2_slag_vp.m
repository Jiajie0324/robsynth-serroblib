% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRRR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:43:36
% EndTime: 2019-03-08 20:43:45
% DurationCPUTime: 3.68s
% Computational Cost: add. (6010->390), mult. (13022->526), div. (0->0), fcn. (9395->10), ass. (0->218)
t139 = cos(qJ(2));
t130 = sin(pkin(6));
t218 = qJD(1) * t130;
t191 = t139 * t218;
t165 = qJD(3) - t191;
t138 = cos(qJ(4));
t211 = qJD(4) * t138;
t170 = pkin(4) * t211 + t165;
t134 = sin(qJ(4));
t137 = cos(qJ(5));
t133 = sin(qJ(5));
t224 = t133 * t138;
t101 = t134 * t137 + t224;
t212 = qJD(4) * t134;
t140 = -pkin(2) - pkin(8);
t253 = pkin(9) - t140;
t172 = t253 * t212;
t135 = sin(qJ(2));
t196 = t135 * t218;
t106 = t253 * t134;
t107 = t253 * t138;
t74 = -t106 * t133 + t137 * t107;
t97 = qJD(4) * t107;
t252 = -t74 * qJD(5) - t101 * t196 + t133 * t172 - t137 * t97;
t93 = t101 * qJD(2);
t267 = qJD(6) + t93;
t132 = sin(qJ(6));
t136 = cos(qJ(6));
t203 = qJD(4) + qJD(5);
t180 = t136 * t203;
t214 = qJD(2) * t138;
t192 = t137 * t214;
t215 = qJD(2) * t134;
t95 = -t133 * t215 + t192;
t80 = t132 * t95 - t180;
t272 = t267 * t80;
t70 = t203 * t101;
t223 = t137 * t138;
t166 = t203 * t223;
t210 = qJD(5) * t133;
t71 = -t133 * t212 - t134 * t210 + t166;
t271 = -pkin(5) * t71 - pkin(10) * t70 - t170;
t204 = qJD(2) * qJD(5);
t205 = qJD(2) * qJD(4);
t270 = (t204 + t205) * t134;
t207 = qJD(6) * t136;
t131 = cos(pkin(6));
t217 = qJD(1) * t131;
t195 = t134 * t217;
t153 = -pkin(9) * t214 - t195;
t92 = t140 * qJD(2) + t165;
t86 = t138 * t92;
t67 = t153 + t86;
t61 = qJD(4) * pkin(4) + t67;
t234 = t137 * t61;
t190 = t138 * t217;
t266 = (pkin(9) * qJD(2) - t92) * t134 - t190;
t241 = t133 * t266;
t32 = t234 + t241;
t30 = -t203 * pkin(5) - t32;
t228 = t130 * t135;
t194 = qJD(2) * t228;
t175 = qJD(1) * t194;
t105 = t138 * t175;
t147 = t266 * qJD(4);
t45 = t137 * (t105 + t147);
t230 = t134 * t175 + t92 * t211;
t49 = qJD(4) * t153 + t230;
t184 = t133 * t49 - t45;
t233 = t137 * t266;
t33 = t133 * t61 - t233;
t9 = t33 * qJD(5) + t184;
t269 = t9 * t132 + t30 * t207;
t102 = -t133 * t134 + t223;
t75 = -t106 * t137 - t107 * t133;
t251 = t75 * qJD(5) + t102 * t196 - t133 * t97 - t137 * t172;
t268 = t71 * t203;
t183 = qJD(5) * t61 + t49;
t250 = pkin(4) * qJD(5);
t265 = -t203 * t250 - t183;
t51 = -qJD(4) * t195 + t230;
t77 = t134 * t92 + t190;
t52 = -t77 * qJD(4) + t105;
t76 = t86 - t195;
t143 = -(t134 * t76 - t138 * t77) * qJD(4) + t51 * t134 + t52 * t138;
t31 = t203 * pkin(10) + t33;
t216 = qJD(2) * qJ(3);
t103 = t196 + t216;
t87 = pkin(4) * t215 + t103;
t48 = pkin(5) * t93 - pkin(10) * t95 + t87;
t162 = t132 * t31 - t136 * t48;
t187 = t138 * t205;
t62 = t133 * t187 + t270 * t137 + t204 * t224;
t221 = t270 * t133;
t63 = qJD(2) * t166 - t221;
t98 = (qJD(3) + t191) * qJD(2);
t84 = pkin(4) * t187 + t98;
t27 = t63 * pkin(5) + t62 * pkin(10) + t84;
t182 = t133 * t105 + t210 * t266;
t8 = t133 * t147 + t183 * t137 + t182;
t2 = -t162 * qJD(6) + t132 * t27 + t136 * t8;
t264 = t74 * t9;
t227 = t130 * t139;
t154 = -t131 * t138 + t134 * t227;
t90 = -t131 * t134 - t138 * t227;
t56 = -t133 * t154 - t137 * t90;
t263 = t9 * t56;
t121 = t134 * pkin(4) + qJ(3);
t65 = pkin(5) * t101 - pkin(10) * t102 + t121;
t37 = -t132 * t75 + t136 * t65;
t262 = t37 * qJD(6) - t271 * t132 + t252 * t136;
t38 = t132 * t65 + t136 * t75;
t261 = t38 * qJD(6) + t252 * t132 + t271 * t136;
t260 = t102 * t9;
t259 = t136 * t9;
t1 = t2 * t136;
t258 = t30 * t70;
t82 = t132 * t203 + t136 * t95;
t257 = t82 * t80;
t256 = t87 * t95;
t255 = t267 * t95;
t254 = t95 * t93;
t249 = qJD(2) * pkin(2);
t248 = t101 * t63;
t247 = t132 * t62;
t246 = t132 * t63;
t245 = t132 * t80;
t244 = t132 * t82;
t243 = t132 * t267;
t242 = t132 * t93;
t240 = t135 * t98;
t239 = t136 * t63;
t238 = t136 * t70;
t237 = t136 * t80;
t236 = t136 * t82;
t235 = t136 * t93;
t208 = qJD(6) * t132;
t39 = -qJD(6) * t180 + t136 * t62 + t95 * t208;
t232 = t39 * t132;
t40 = qJD(6) * t82 - t247;
t231 = t40 * t136;
t229 = t103 * t139;
t142 = qJD(2) ^ 2;
t226 = t130 * t142;
t128 = t134 ^ 2;
t129 = t138 ^ 2;
t220 = t128 - t129;
t141 = qJD(4) ^ 2;
t219 = -t141 - t142;
t213 = qJD(2) * t139;
t209 = qJD(5) * t137;
t206 = t103 * qJD(2);
t17 = t132 * t48 + t136 * t31;
t202 = t162 * t235 - t17 * t242 + t1;
t201 = pkin(4) * t214;
t200 = pkin(4) * t209;
t199 = t135 * t226;
t198 = t139 * t226;
t197 = t138 * t142 * t134;
t28 = t30 * t208;
t193 = t130 * t213;
t189 = t162 * t95 + t28;
t181 = t136 * t267;
t179 = qJD(6) * t101 + qJD(2);
t178 = t17 * t95 + t269;
t177 = t138 * t194;
t176 = t134 * t194;
t174 = t134 * t187;
t34 = t133 * t67 - t233;
t173 = pkin(4) * t210 - t34;
t64 = pkin(5) * t95 + pkin(10) * t93;
t171 = -t103 + t196;
t169 = t71 * t93 + t248;
t168 = -t102 * t62 - t70 * t95;
t164 = t132 * t17 - t136 * t162;
t163 = -t132 * t162 - t136 * t17;
t161 = t236 + t245;
t57 = t133 * t90 - t137 * t154;
t158 = t98 * qJ(3) + t103 * qJD(3);
t157 = t87 * t93 - t182;
t156 = -t207 * t267 - t246;
t155 = t208 * t267 - t239;
t46 = -t132 * t57 + t136 * t228;
t47 = t132 * t228 + t136 * t57;
t152 = t171 - t216;
t123 = pkin(4) * t133 + pkin(10);
t151 = -t123 * t63 - t200 * t267 + t30 * t93;
t150 = -t101 * t8 + t32 * t70 - t33 * t71 + t260;
t3 = -qJD(6) * t17 - t132 * t8 + t136 * t27;
t149 = -t164 * qJD(6) - t132 * t3;
t148 = t165 * qJD(2) - t140 * t141 + t98;
t146 = t133 * (pkin(9) * t215 - t77);
t145 = t149 + t1;
t144 = t161 * qJD(6) - t231 - t232;
t124 = -pkin(4) * t137 - pkin(5);
t100 = t165 - t249;
t73 = qJD(4) * t154 + t177;
t72 = qJD(4) * t90 + t176;
t66 = t70 * t203;
t55 = t64 + t201;
t50 = -t93 ^ 2 + t95 ^ 2;
t44 = t221 + (-t192 + t95) * t203;
t43 = t93 * t203 - t62;
t35 = t137 * t67 + t241;
t25 = t57 * qJD(5) + t133 * t72 - t137 * t73;
t24 = -t56 * qJD(5) + t133 * t73 + t137 * t72;
t23 = t132 * t64 + t136 * t32;
t22 = -t132 * t32 + t136 * t64;
t21 = t132 * t55 + t136 * t35;
t20 = -t132 * t35 + t136 * t55;
t19 = t181 * t267 - t82 * t95 + t246;
t18 = -t243 * t267 + t80 * t95 + t239;
t15 = t245 * t267 - t231;
t14 = t82 * t181 - t232;
t11 = -qJD(6) * t47 - t132 * t24 + t136 * t193;
t10 = qJD(6) * t46 + t132 * t193 + t136 * t24;
t4 = (-t39 - t272) * t136 + (-t267 * t82 - t40) * t132;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, -t198, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t198 (t240 + (t229 + (t100 - t191) * t135) * qJD(2)) * t130, 0, 0, 0, 0, 0, 0, t134 * t198 + (t73 + t177) * qJD(4), t138 * t198 + (-t72 - t176) * qJD(4) (-t134 * t72 - t138 * t73 + (t134 * t90 + t138 * t154) * qJD(4)) * qJD(2), -t51 * t154 + t52 * t90 + t77 * t72 + t76 * t73 + (t139 * t206 + t240) * t130, 0, 0, 0, 0, 0, 0, -t25 * t203 + (t135 * t63 + t93 * t213) * t130, -t24 * t203 + (-t135 * t62 + t95 * t213) * t130, -t24 * t93 + t25 * t95 - t56 * t62 - t57 * t63, t33 * t24 - t32 * t25 + t263 + t8 * t57 + (t135 * t84 + t87 * t213) * t130, 0, 0, 0, 0, 0, 0, t11 * t267 + t25 * t80 + t40 * t56 + t46 * t63, -t10 * t267 + t25 * t82 - t39 * t56 - t47 * t63, -t10 * t80 - t11 * t82 + t39 * t46 - t40 * t47, t10 * t17 - t11 * t162 + t2 * t47 + t25 * t30 + t3 * t46 + t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * qJD(2) * qJD(3) (-t229 + (-t100 - t249) * t135) * t218 + t158, -0.2e1 * t174, 0.2e1 * t220 * t205, -t141 * t134, 0.2e1 * t174, -t141 * t138, 0, t134 * t148 - t152 * t211, t138 * t148 + t152 * t212 (t128 + t129) * t175 - t143 (-t229 + (-t134 * t77 - t138 * t76) * t135) * t218 + t143 * t140 + t158, t168, t101 * t62 - t102 * t63 + t70 * t93 - t71 * t95, -t66, t169, -t268, 0, t84 * t101 + t121 * t63 + t170 * t93 - t203 * t251 + t87 * t71, t84 * t102 - t121 * t62 + t170 * t95 - t203 * t252 - t87 * t70, t251 * t95 - t252 * t93 - t62 * t74 - t63 * t75 + t150, t121 * t84 + t170 * t87 - t251 * t32 + t252 * t33 + t75 * t8 + t264, -t70 * t236 + (-t39 * t136 - t82 * t208) * t102 (t237 + t244) * t70 + (t232 - t231 + (-t236 + t245) * qJD(6)) * t102, -t39 * t101 - t102 * t155 - t238 * t267 + t82 * t71, -t70 * t245 + (t132 * t40 + t80 * t207) * t102, -t40 * t101 + t102 * t156 + t70 * t243 - t80 * t71, t267 * t71 + t248, t101 * t3 + t102 * t269 - t132 * t258 - t162 * t71 + t251 * t80 - t261 * t267 + t37 * t63 + t40 * t74, -t30 * t238 - t101 * t2 - t17 * t71 - t38 * t63 - t39 * t74 - t262 * t267 + t251 * t82 + (-t28 + t259) * t102, t37 * t39 - t38 * t40 + t261 * t82 - t262 * t80 + t164 * t70 + (qJD(6) * t163 - t132 * t2 - t136 * t3) * t102, t162 * t261 + t262 * t17 + t2 * t38 + t251 * t30 + t3 * t37 + t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, t171 * qJD(2), 0, 0, 0, 0, 0, 0, t219 * t134, t219 * t138, 0, t143 - t206, 0, 0, 0, 0, 0, 0, -qJD(2) * t93 - t66, -qJD(2) * t95 - t268, -t168 - t169, -qJD(2) * t87 - t150, 0, 0, 0, 0, 0, 0, -t101 * t246 - t102 * t40 + t70 * t80 + (-t132 * t71 - t179 * t136) * t267, -t101 * t239 + t102 * t39 + t70 * t82 + (t179 * t132 - t136 * t71) * t267 (-t237 + t244) * t71 + t161 * qJD(2) + t144 * t101, -qJD(2) * t164 + t101 * t145 - t163 * t71 + t258 - t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, -t220 * t142, 0, -t197, 0, 0, -t138 * t206 + t105, t134 * t206 + (t76 + t195) * qJD(4) - t230, 0, 0, t254, t50, t43, -t254, t44, 0, t133 * t265 - t93 * t201 + t34 * t203 + t209 * t266 - t256 + t45, -t95 * t201 + t35 * qJD(5) + (-t146 + t35) * qJD(4) + t265 * t137 + t157 (t33 - t34) * t95 + (-t32 + t35) * t93 + (-t133 * t63 + t137 * t62 + (t133 * t95 - t137 * t93) * qJD(5)) * pkin(4), t32 * t34 - t33 * t35 + (-t87 * t214 + t133 * t8 - t137 * t9 + (-t133 * t32 + t137 * t33) * qJD(5)) * pkin(4), t14, t4, t19, t15, t18, -t255, t124 * t40 - t20 * t267 + t173 * t80 + (-qJD(6) * t123 * t267 - t9) * t136 + t151 * t132 + t189, -t124 * t39 + (t123 * t208 + t21) * t267 + t173 * t82 + t151 * t136 + t178, t20 * t82 + t21 * t80 + (-t80 * t200 - t123 * t40 + (t123 * t82 + t162) * qJD(6)) * t136 + (t82 * t200 - t123 * t39 - t3 + (t123 * t80 - t17) * qJD(6)) * t132 + t202, t124 * t9 + t162 * t20 - t17 * t21 - t30 * t34 + (t133 * t30 - t137 * t163) * t250 + t145 * t123; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t50, t43, -t254, t44, 0, t33 * qJD(4) - t184 - t256, -t137 * t49 + (t32 - t234) * qJD(5) + (-t146 + t32) * qJD(4) + t157, 0, 0, t14, t4, t19, t15, t18, -t255, -pkin(5) * t40 + pkin(10) * t156 - t22 * t267 + t30 * t242 - t33 * t80 + t189 - t259, pkin(5) * t39 + pkin(10) * t155 + t23 * t267 + t30 * t235 - t33 * t82 + t178, pkin(10) * t144 + t22 * t82 + t23 * t80 + t149 + t202, -pkin(5) * t9 + pkin(10) * t145 + t162 * t22 - t17 * t23 - t30 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, -t80 ^ 2 + t82 ^ 2, -t39 + t272, -t257, t247 + (-qJD(6) + t267) * t82, t63, t17 * t267 - t30 * t82 + t3, -t162 * t267 + t30 * t80 - t2, 0, 0;];
tauc_reg  = t5;
