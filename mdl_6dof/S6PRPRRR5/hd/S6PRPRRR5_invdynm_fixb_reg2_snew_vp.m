% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRPRRR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 01:19
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRPRRR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR5_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR5_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRR5_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 01:19:08
% EndTime: 2019-05-05 01:19:38
% DurationCPUTime: 32.52s
% Computational Cost: add. (175597->897), mult. (338519->1263), div. (0->0), fcn. (242530->12), ass. (0->615)
t1386 = sin(qJ(5));
t1374 = qJDD(4) + qJDD(5);
t1387 = sin(qJ(4));
t1390 = cos(qJ(5));
t1391 = cos(qJ(4));
t1332 = (t1386 * t1391 + t1387 * t1390) * qJD(2);
t1544 = qJD(2) * t1391;
t1545 = qJD(2) * t1387;
t1334 = -t1386 * t1545 + t1390 * t1544;
t1532 = t1334 * t1332;
t1578 = t1374 - t1532;
t1581 = t1386 * t1578;
t1580 = t1390 * t1578;
t1370 = t1391 * qJDD(2);
t1502 = qJD(4) * t1545;
t1340 = t1370 - t1502;
t1501 = qJD(4) * t1544;
t1511 = t1387 * qJDD(2);
t1426 = -t1501 - t1511;
t1254 = -qJD(5) * t1332 + t1340 * t1390 + t1386 * t1426;
t1514 = qJD(4) + qJD(5);
t1488 = t1514 * t1332;
t1579 = t1254 - t1488;
t1380 = sin(pkin(6));
t1392 = cos(qJ(2));
t1512 = t1380 * qJDD(2);
t1388 = sin(qJ(2));
t1394 = qJD(2) ^ 2;
t1518 = t1388 * t1394;
t1326 = t1380 * t1518 - t1392 * t1512;
t1382 = cos(pkin(6));
t1368 = t1382 * qJDD(2);
t1328 = -t1368 * t1392 + t1382 * t1518;
t1379 = sin(pkin(11));
t1381 = cos(pkin(11));
t1347 = g(1) * t1379 - g(2) * t1381;
t1548 = g(3) - qJDD(1);
t1317 = t1347 * t1380 + t1382 * t1548;
t1519 = t1388 * t1317;
t1236 = (t1326 * t1380 + t1328 * t1382) * pkin(7) - t1519;
t1344 = qJDD(2) * t1388 + t1392 * t1394;
t1285 = t1328 * t1379 - t1344 * t1381;
t1577 = -qJ(1) * t1285 - t1236 * t1379;
t1280 = t1328 * t1381 + t1344 * t1379;
t1576 = -qJ(1) * t1280 - t1236 * t1381;
t1325 = t1344 * t1380;
t1327 = t1344 * t1382;
t1515 = t1392 * t1317;
t1239 = pkin(7) * (t1325 * t1380 + t1327 * t1382) - t1515;
t1343 = qJDD(2) * t1392 - t1518;
t1283 = t1327 * t1379 - t1343 * t1381;
t1575 = -qJ(1) * t1283 - t1239 * t1379;
t1278 = t1327 * t1381 + t1343 * t1379;
t1574 = -qJ(1) * t1278 - t1239 * t1381;
t1385 = sin(qJ(6));
t1389 = cos(qJ(6));
t1298 = t1334 * t1385 - t1389 * t1514;
t1300 = t1334 * t1389 + t1385 * t1514;
t1248 = t1300 * t1298;
t1484 = -t1386 * t1340 + t1390 * t1426;
t1429 = t1334 * qJD(5) - t1484;
t1251 = qJDD(6) + t1429;
t1564 = -t1248 + t1251;
t1569 = t1385 * t1564;
t1568 = t1389 * t1564;
t1321 = t1334 * t1514;
t1228 = t1321 + t1429;
t1567 = -t1382 * t1347 + t1380 * t1548;
t1510 = t1514 ^ 2;
t1566 = t1379 * t1548;
t1565 = t1381 * t1548;
t1378 = qJDD(2) * pkin(2);
t1348 = g(1) * t1381 + g(2) * t1379;
t1268 = -t1348 * t1388 + t1392 * t1567;
t1432 = qJDD(3) + t1268;
t1257 = -qJ(3) * t1394 - t1378 + t1432;
t1250 = -qJDD(2) * pkin(8) + t1257;
t1209 = t1250 * t1387 - t1317 * t1391;
t1352 = qJD(4) * pkin(4) - pkin(9) * t1544;
t1376 = t1387 ^ 2;
t1525 = t1376 * t1394;
t1175 = -pkin(4) * t1525 + pkin(9) * t1426 - qJD(4) * t1352 + t1209;
t1516 = t1391 * t1394;
t1517 = t1391 * t1250;
t1546 = qJD(2) * qJD(4);
t1395 = qJDD(4) * pkin(4) - t1340 * pkin(9) + t1517 + (-pkin(4) * t1516 - pkin(9) * t1546 + t1317) * t1387;
t1093 = t1175 * t1390 + t1386 * t1395;
t1286 = pkin(5) * t1332 - pkin(10) * t1334;
t1079 = -pkin(5) * t1510 + pkin(10) * t1374 - t1286 * t1332 + t1093;
t1383 = t1394 * pkin(8);
t1269 = -t1392 * t1348 - t1388 * t1567;
t1543 = qJDD(2) * qJ(3);
t1396 = -pkin(2) * t1394 + t1269 + t1543;
t1559 = 2 * qJD(3);
t1201 = -t1426 * pkin(4) - pkin(9) * t1525 - t1383 + (t1352 * t1391 + t1559) * qJD(2) + t1396;
t1094 = pkin(5) * t1228 - pkin(10) * t1579 + t1201;
t1012 = t1079 * t1385 - t1094 * t1389;
t1013 = t1079 * t1389 + t1094 * t1385;
t963 = t1012 * t1385 + t1013 * t1389;
t1208 = -t1387 * t1317 - t1517;
t1485 = t1208 * t1391 - t1387 * t1209;
t1468 = pkin(7) * t1344 - t1515;
t1563 = pkin(1) * t1328 + t1380 * t1468;
t1469 = pkin(7) * t1343 + t1519;
t1562 = pkin(1) * t1327 + t1380 * t1469;
t1561 = -pkin(1) * t1326 + t1382 * t1468;
t1560 = -pkin(1) * t1325 + t1382 * t1469;
t1296 = t1298 ^ 2;
t1297 = t1300 ^ 2;
t1324 = qJD(6) + t1332;
t1323 = t1324 ^ 2;
t1330 = t1332 ^ 2;
t1331 = t1334 ^ 2;
t1558 = -pkin(8) - pkin(2);
t1553 = pkin(3) * t1485;
t1509 = qJD(2) * t1559;
t1252 = t1396 + t1509;
t1249 = -t1383 + t1252;
t1552 = pkin(3) * t1249;
t1377 = t1391 ^ 2;
t1513 = t1376 + t1377;
t1342 = t1513 * qJDD(2);
t1551 = pkin(3) * t1342;
t1550 = pkin(5) * t1386;
t1200 = t1268 * t1388 + t1269 * t1392;
t1549 = pkin(7) * t1200;
t1092 = t1175 * t1386 - t1390 * t1395;
t1078 = -pkin(5) * t1374 - pkin(10) * t1510 + t1286 * t1334 + t1092;
t1547 = -pkin(5) * t1078 + pkin(10) * t963;
t1023 = -t1092 * t1390 + t1093 * t1386;
t1542 = t1023 * t1387;
t1541 = t1023 * t1391;
t1186 = t1248 + t1251;
t1540 = t1186 * t1385;
t1539 = t1186 * t1389;
t1538 = t1201 * t1386;
t1537 = t1201 * t1390;
t1276 = t1532 + t1374;
t1536 = t1276 * t1386;
t1535 = t1276 * t1390;
t1534 = t1324 * t1385;
t1533 = t1324 * t1389;
t1339 = 0.2e1 * t1501 + t1511;
t1302 = t1339 * t1387;
t1531 = t1342 * t1388;
t1530 = t1342 * t1392;
t1361 = t1387 * t1516;
t1349 = qJDD(4) + t1361;
t1529 = t1349 * t1387;
t1528 = t1349 * t1391;
t1350 = qJDD(4) - t1361;
t1527 = t1350 * t1387;
t1526 = t1350 * t1391;
t1524 = t1377 * t1394;
t1523 = t1380 * t1317;
t1075 = t1385 * t1078;
t1520 = t1387 * t1249;
t1076 = t1389 * t1078;
t1245 = t1391 * t1249;
t958 = -t1078 * t1390 + t1386 * t963;
t1508 = pkin(4) * t958 + t1547;
t1507 = -pkin(5) * t1390 - pkin(4);
t1506 = t1386 * t1248;
t1505 = t1390 * t1248;
t1504 = t1388 * t1532;
t1503 = t1392 * t1532;
t1244 = -t1297 - t1323;
t1117 = -t1244 * t1385 - t1539;
t1445 = -t1389 * t1254 - t1385 * t1374;
t1159 = (qJD(6) + t1324) * t1298 + t1445;
t1500 = pkin(5) * t1159 + pkin(10) * t1117 + t1075;
t1218 = -t1323 - t1296;
t1112 = t1218 * t1389 - t1569;
t1265 = t1300 * t1324;
t1444 = -t1385 * t1254 + t1389 * t1374;
t1400 = qJD(6) * t1300 - t1444;
t1156 = -t1265 - t1400;
t1499 = pkin(5) * t1156 + pkin(10) * t1112 - t1076;
t1312 = -t1331 - t1510;
t1234 = t1312 * t1390 - t1536;
t1498 = pkin(4) * t1234 - t1093;
t1022 = pkin(4) * t1023;
t1024 = t1092 * t1386 + t1093 * t1390;
t971 = t1024 * t1387 + t1541;
t1497 = -pkin(3) * t971 - t1022;
t1496 = t1381 * t1512;
t1230 = qJD(4) * t1334 + t1484;
t1233 = t1488 + t1254;
t1137 = t1230 * t1386 - t1233 * t1390;
t1139 = t1230 * t1390 + t1233 * t1386;
t1072 = t1137 * t1391 + t1139 * t1387;
t1135 = pkin(4) * t1137;
t1495 = -pkin(3) * t1072 - t1135;
t959 = t1078 * t1386 + t1390 * t963;
t962 = -t1012 * t1389 + t1013 * t1385;
t910 = pkin(9) * t959 + (-pkin(10) * t1386 + t1507) * t962;
t914 = -pkin(9) * t958 + (-pkin(10) * t1390 + t1550) * t962;
t1493 = -t1387 * t910 + t1391 * t914;
t1155 = (-qJD(6) + t1324) * t1300 + t1444;
t1198 = -qJD(6) * t1298 - t1445;
t1264 = t1324 * t1298;
t1158 = t1198 + t1264;
t1084 = t1155 * t1389 + t1158 * t1385;
t1204 = t1296 + t1297;
t1048 = t1084 * t1390 - t1204 * t1386;
t1082 = t1155 * t1385 - t1158 * t1389;
t960 = -pkin(10) * t1082 - t962;
t926 = pkin(9) * t1048 + t1082 * t1507 + t1386 * t960;
t1047 = t1084 * t1386 + t1204 * t1390;
t933 = -pkin(9) * t1047 + t1082 * t1550 + t1390 * t960;
t1492 = -t1387 * t926 + t1391 * t933;
t1111 = t1218 * t1385 + t1568;
t1018 = -pkin(10) * t1111 + t1075;
t1061 = t1112 * t1390 - t1156 * t1386;
t986 = -pkin(5) * t1111 + t1012;
t940 = -pkin(4) * t1111 + pkin(9) * t1061 + t1018 * t1386 + t1390 * t986;
t1060 = t1112 * t1386 + t1156 * t1390;
t946 = -pkin(9) * t1060 + t1018 * t1390 - t1386 * t986;
t1491 = -t1387 * t940 + t1391 * t946;
t1116 = t1244 * t1389 - t1540;
t1021 = -pkin(10) * t1116 + t1076;
t1064 = t1117 * t1390 - t1159 * t1386;
t987 = -pkin(5) * t1116 + t1013;
t941 = -pkin(4) * t1116 + pkin(9) * t1064 + t1021 * t1386 + t1390 * t987;
t1063 = t1117 * t1386 + t1159 * t1390;
t950 = -pkin(9) * t1063 + t1021 * t1390 - t1386 * t987;
t1490 = -t1387 * t941 + t1391 * t950;
t1001 = -pkin(9) * t1137 - t1023;
t1256 = -t1330 - t1331;
t990 = -pkin(4) * t1256 + pkin(9) * t1139 + t1024;
t1489 = t1001 * t1391 - t1387 * t990;
t1270 = -t1510 - t1330;
t1207 = t1270 * t1390 - t1581;
t1088 = -pkin(4) * t1228 + pkin(9) * t1207 - t1537;
t1206 = t1270 * t1386 + t1580;
t1118 = -pkin(9) * t1206 + t1538;
t1487 = -t1387 * t1088 + t1118 * t1391;
t1235 = -t1312 * t1386 - t1535;
t1091 = -pkin(4) * t1579 + pkin(9) * t1235 + t1538;
t1124 = -pkin(9) * t1234 + t1537;
t1486 = -t1387 * t1091 + t1124 * t1391;
t1483 = -t1347 * t1379 - t1348 * t1381;
t1482 = t1388 * t1361;
t1481 = t1392 * t1361;
t1480 = pkin(5) * t1204 + pkin(10) * t1084 + t963;
t1479 = pkin(4) * t1063 + t1500;
t1478 = pkin(4) * t1060 + t1499;
t1393 = qJD(4) ^ 2;
t1359 = -t1393 - t1524;
t1306 = t1359 * t1391 - t1529;
t1477 = -pkin(3) * t1306 + t1209;
t1476 = t1386 * t1321;
t1475 = t1386 * t1488;
t1474 = t1390 * t1321;
t1473 = t1390 * t1488;
t1472 = pkin(4) * t1206 - t1092;
t1471 = pkin(3) * t1339 + t1245;
t1341 = t1370 - 0.2e1 * t1502;
t1470 = pkin(3) * t1341 - t1520;
t920 = t1387 * t959 + t1391 * t958;
t1467 = t1388 * t962 - t1392 * t920;
t1466 = -pkin(3) * t920 - t1508;
t984 = t1047 * t1391 + t1048 * t1387;
t1465 = t1082 * t1388 - t1392 * t984;
t1157 = t1198 - t1264;
t1083 = t1156 * t1385 + t1157 * t1389;
t1085 = t1156 * t1389 - t1157 * t1385;
t1246 = t1297 - t1296;
t1056 = t1085 * t1386 - t1246 * t1390;
t1057 = t1085 * t1390 + t1246 * t1386;
t988 = t1056 * t1391 + t1057 * t1387;
t1464 = t1083 * t1388 - t1392 * t988;
t993 = t1060 * t1391 + t1061 * t1387;
t1463 = t1111 * t1388 - t1392 * t993;
t998 = t1063 * t1391 + t1064 * t1387;
t1462 = t1116 * t1388 - t1392 * t998;
t1461 = t1201 * t1388 - t1392 * t971;
t1460 = pkin(4) * t1047 + t1480;
t1262 = -t1297 + t1323;
t1131 = -t1262 * t1385 + t1568;
t1067 = t1131 * t1386 - t1158 * t1390;
t1069 = t1131 * t1390 + t1158 * t1386;
t1002 = t1067 * t1391 + t1069 * t1387;
t1129 = t1262 * t1389 + t1569;
t1459 = -t1002 * t1392 + t1129 * t1388;
t1261 = t1296 - t1323;
t1132 = t1261 * t1389 - t1540;
t1154 = -t1265 + t1400;
t1068 = t1132 * t1386 + t1154 * t1390;
t1070 = t1132 * t1390 - t1154 * t1386;
t1003 = t1068 * t1391 + t1070 * t1387;
t1130 = t1261 * t1385 + t1539;
t1458 = -t1003 * t1392 + t1130 * t1388;
t1143 = t1298 * t1533 + t1385 * t1400;
t1104 = t1143 * t1386 + t1505;
t1106 = t1143 * t1390 - t1506;
t1032 = t1104 * t1391 + t1106 * t1387;
t1142 = -t1298 * t1534 + t1389 * t1400;
t1457 = -t1032 * t1392 - t1142 * t1388;
t1145 = t1198 * t1389 - t1300 * t1534;
t1105 = t1145 * t1386 - t1505;
t1107 = t1145 * t1390 + t1506;
t1033 = t1105 * t1391 + t1107 * t1387;
t1144 = t1198 * t1385 + t1300 * t1533;
t1456 = -t1033 * t1392 + t1144 * t1388;
t1192 = (-t1298 * t1389 + t1300 * t1385) * t1324;
t1133 = t1192 * t1386 - t1251 * t1390;
t1134 = t1192 * t1390 + t1251 * t1386;
t1065 = t1133 * t1391 + t1134 * t1387;
t1191 = (-t1298 * t1385 - t1300 * t1389) * t1324;
t1455 = -t1065 * t1392 + t1191 * t1388;
t1136 = -t1228 * t1386 + t1390 * t1579;
t1138 = -t1228 * t1390 - t1386 * t1579;
t1071 = t1136 * t1391 + t1138 * t1387;
t1289 = t1331 - t1330;
t1454 = -t1071 * t1392 + t1289 * t1388;
t1453 = -t1072 * t1392 + t1256 * t1388;
t1119 = t1206 * t1391 + t1207 * t1387;
t1452 = -t1119 * t1392 + t1228 * t1388;
t1451 = t1249 * t1388 + t1392 * t1485;
t1140 = t1234 * t1391 + t1235 * t1387;
t1450 = -t1140 * t1392 + t1388 * t1579;
t1319 = -t1331 + t1510;
t1240 = t1319 * t1390 + t1581;
t1242 = -t1319 * t1386 + t1580;
t1148 = t1240 * t1391 + t1242 * t1387;
t1449 = -t1148 * t1392 + t1233 * t1388;
t1318 = t1330 - t1510;
t1241 = t1318 * t1386 + t1535;
t1243 = t1318 * t1390 - t1536;
t1149 = t1241 * t1391 + t1243 * t1387;
t1229 = -t1321 + t1429;
t1448 = -t1149 * t1392 - t1229 * t1388;
t1259 = -t1475 - t1474;
t1260 = -t1473 + t1476;
t1189 = t1259 * t1391 + t1260 * t1387;
t1447 = -t1189 * t1392 + t1374 * t1388;
t1122 = t1208 * t1387 + t1209 * t1391;
t1180 = t1252 * t1392 + t1257 * t1388;
t1446 = t1252 * t1388 - t1257 * t1392;
t1199 = t1268 * t1392 - t1269 * t1388;
t1291 = t1341 * t1391 - t1302;
t1346 = (-t1376 + t1377) * t1394;
t1443 = -t1291 * t1392 + t1346 * t1388;
t1357 = -t1393 - t1525;
t1304 = t1357 * t1387 + t1526;
t1442 = -t1304 * t1392 + t1339 * t1388;
t1441 = -t1306 * t1392 + t1341 * t1388;
t1345 = t1513 * t1394;
t1438 = -t1345 * t1388 + t1530;
t1437 = t1347 * t1381 - t1348 * t1379;
t1338 = t1513 * t1546;
t1435 = qJDD(4) * t1388 + t1338 * t1392;
t1434 = -pkin(3) * t1140 - t1498;
t1007 = -pkin(4) * t1201 + pkin(9) * t1024;
t1433 = -pkin(9) * t1541 - t1387 * t1007;
t1214 = -t1390 * t1429 + t1475;
t1215 = t1386 * t1429 + t1473;
t1125 = t1214 * t1391 + t1215 * t1387;
t1431 = -t1125 * t1392 - t1504;
t1216 = t1254 * t1386 + t1474;
t1217 = t1254 * t1390 - t1476;
t1126 = t1216 * t1391 + t1217 * t1387;
t1430 = -t1126 * t1392 + t1504;
t1428 = -pkin(3) * t993 - t1478;
t1427 = -pkin(3) * t998 - t1479;
t1356 = -t1393 + t1525;
t1303 = t1356 * t1387 + t1528;
t1425 = -t1303 * t1392 - t1388 * t1511;
t1358 = t1393 - t1524;
t1305 = t1358 * t1391 + t1527;
t1424 = -t1305 * t1392 + t1370 * t1388;
t1423 = -pkin(3) * t1119 - t1472;
t1422 = pkin(3) * t962 - t1387 * t914 - t1391 * t910;
t921 = -t1387 * t958 + t1391 * t959;
t888 = t1558 * t921 + t1422;
t899 = -qJ(3) * t921 - t1466;
t912 = t1388 * t920 + t1392 * t962;
t1421 = pkin(7) * t912 + t1388 * t899 + t1392 * t888;
t1416 = pkin(3) * t1082 - t1387 * t933 - t1391 * t926;
t985 = -t1047 * t1387 + t1048 * t1391;
t903 = t1558 * t985 + t1416;
t1407 = -pkin(3) * t984 - t1460;
t915 = -qJ(3) * t985 - t1407;
t965 = t1082 * t1392 + t1388 * t984;
t1420 = pkin(7) * t965 + t1388 * t915 + t1392 * t903;
t1415 = pkin(3) * t1111 - t1387 * t946 - t1391 * t940;
t994 = -t1060 * t1387 + t1061 * t1391;
t907 = t1558 * t994 + t1415;
t927 = -qJ(3) * t994 - t1428;
t973 = t1111 * t1392 + t1388 * t993;
t1419 = pkin(7) * t973 + t1388 * t927 + t1392 * t907;
t1414 = pkin(3) * t1116 - t1387 * t950 - t1391 * t941;
t999 = -t1063 * t1387 + t1064 * t1391;
t909 = t1558 * t999 + t1414;
t928 = -qJ(3) * t999 - t1427;
t976 = t1116 * t1392 + t1388 * t998;
t1418 = pkin(7) * t976 + t1388 * t928 + t1392 * t909;
t1398 = pkin(3) * t1201 + pkin(9) * t1542 - t1391 * t1007;
t972 = t1024 * t1391 - t1542;
t917 = t1558 * t972 + t1398;
t924 = -qJ(3) * t972 - t1497;
t964 = t1201 * t1392 + t1388 * t971;
t1417 = pkin(7) * t964 + t1388 * t924 + t1392 * t917;
t1053 = t1072 * t1388 + t1256 * t1392;
t1074 = -t1137 * t1387 + t1139 * t1391;
t1409 = pkin(3) * t1256 - t1387 * t1001 - t1391 * t990;
t935 = t1074 * t1558 + t1409;
t981 = -qJ(3) * t1074 - t1495;
t1413 = pkin(7) * t1053 + t1388 * t981 + t1392 * t935;
t1087 = t1119 * t1388 + t1228 * t1392;
t1120 = -t1206 * t1387 + t1207 * t1391;
t1406 = pkin(3) * t1228 - t1391 * t1088 - t1387 * t1118;
t975 = t1120 * t1558 + t1406;
t995 = -qJ(3) * t1120 - t1423;
t1412 = pkin(7) * t1087 + t1388 * t995 + t1392 * t975;
t1314 = t1376 * t1546 + t1391 * t1426;
t1411 = -t1314 * t1392 - t1482;
t1315 = t1340 * t1387 + t1377 * t1546;
t1410 = -t1315 * t1392 + t1482;
t1141 = -t1234 * t1387 + t1235 * t1391;
t1006 = -qJ(3) * t1141 - t1434;
t1096 = t1140 * t1388 + t1392 * t1579;
t1405 = pkin(3) * t1579 - t1391 * t1091 - t1387 * t1124;
t980 = t1141 * t1558 + t1405;
t1408 = pkin(7) * t1096 + t1006 * t1388 + t1392 * t980;
t1404 = -pkin(3) * t1304 + t1208;
t1039 = t1122 * t1558 + t1552;
t1054 = -qJ(3) * t1122 - t1553;
t1095 = t1249 * t1392 - t1388 * t1485;
t1403 = pkin(7) * t1095 + t1039 * t1392 + t1054 * t1388;
t1308 = t1357 * t1391 - t1527;
t1160 = -qJ(3) * t1308 - t1404;
t1165 = t1308 * t1558 + t1471;
t1266 = t1304 * t1388 + t1339 * t1392;
t1402 = pkin(7) * t1266 + t1160 * t1388 + t1165 * t1392;
t1311 = -t1359 * t1387 - t1528;
t1161 = -qJ(3) * t1311 - t1477;
t1164 = t1311 * t1558 + t1470;
t1267 = t1306 * t1388 + t1341 * t1392;
t1401 = pkin(7) * t1267 + t1161 * t1388 + t1164 * t1392;
t1113 = pkin(3) * t1345 + t1122;
t1293 = -t1345 * t1392 - t1531;
t1399 = -pkin(3) * t1531 + pkin(7) * t1293 - t1113 * t1392;
t1397 = pkin(7) * t1180 + (pkin(2) * t1392 + qJ(3) * t1388) * t1317;
t1353 = t1379 * t1512;
t1316 = qJDD(4) * t1392 - t1338 * t1388;
t1310 = -t1358 * t1387 + t1526;
t1309 = (t1340 - t1502) * t1391;
t1307 = t1356 * t1391 - t1529;
t1301 = t1382 * t1317;
t1295 = t1435 * t1382;
t1294 = t1435 * t1380;
t1292 = -t1339 * t1391 - t1341 * t1387;
t1288 = t1438 * t1382;
t1287 = t1438 * t1380;
t1274 = t1314 * t1388 - t1481;
t1273 = t1315 * t1388 + t1481;
t1272 = t1305 * t1388 + t1370 * t1392;
t1271 = t1303 * t1388 - t1392 * t1511;
t1263 = -0.2e1 * t1378 + t1432;
t1258 = t1269 + t1509 + 0.2e1 * t1543;
t1255 = t1291 * t1388 + t1346 * t1392;
t1226 = -t1380 * t1302 + t1382 * t1411;
t1225 = -t1380 * t1309 + t1382 * t1410;
t1224 = t1382 * t1302 + t1380 * t1411;
t1223 = t1382 * t1309 + t1380 * t1410;
t1222 = -t1380 * t1310 + t1382 * t1424;
t1221 = -t1380 * t1307 + t1382 * t1425;
t1220 = t1382 * t1310 + t1380 * t1424;
t1219 = t1382 * t1307 + t1380 * t1425;
t1213 = -t1380 * t1311 + t1382 * t1441;
t1212 = -t1380 * t1308 + t1382 * t1442;
t1211 = t1382 * t1311 + t1380 * t1441;
t1210 = t1382 * t1308 + t1380 * t1442;
t1197 = -t1380 * t1292 + t1382 * t1443;
t1196 = t1382 * t1292 + t1380 * t1443;
t1194 = t1200 * t1382;
t1193 = t1200 * t1380;
t1190 = -t1259 * t1387 + t1260 * t1391;
t1188 = -pkin(2) * t1257 + qJ(3) * t1252;
t1184 = t1380 * t1268 - t1561;
t1183 = t1380 * t1269 - t1560;
t1182 = -t1382 * t1268 - t1563;
t1181 = -t1382 * t1269 - t1562;
t1178 = -t1380 * t1263 + t1561;
t1177 = t1382 * t1263 + t1563;
t1176 = t1189 * t1388 + t1374 * t1392;
t1174 = t1180 * t1382;
t1173 = t1180 * t1380;
t1172 = -t1380 * t1258 + t1560;
t1171 = t1382 * t1258 + t1562;
t1167 = -t1199 * t1382 + t1523;
t1166 = -t1199 * t1380 - t1301;
t1163 = qJ(3) * t1341 + t1306 * t1558 + t1245;
t1162 = qJ(3) * t1339 + t1304 * t1558 + t1520;
t1151 = -t1241 * t1387 + t1243 * t1391;
t1150 = -t1240 * t1387 + t1242 * t1391;
t1147 = t1382 * t1446 + t1523;
t1146 = t1380 * t1446 - t1301;
t1128 = -t1216 * t1387 + t1217 * t1391;
t1127 = -t1214 * t1387 + t1215 * t1391;
t1109 = t1126 * t1388 + t1503;
t1108 = t1125 * t1388 - t1503;
t1103 = -qJ(3) * t1345 - t1342 * t1558 + t1485;
t1102 = pkin(1) * t1167 + t1380 * t1549;
t1101 = -pkin(1) * t1166 + t1382 * t1549;
t1100 = t1148 * t1388 + t1233 * t1392;
t1099 = t1149 * t1388 - t1229 * t1392;
t1098 = -t1380 * t1190 + t1382 * t1447;
t1097 = t1382 * t1190 + t1380 * t1447;
t1086 = (-t1166 * t1380 - t1167 * t1382) * pkin(7);
t1080 = -pkin(3) * t1530 + t1388 * t1113 + (-t1287 * t1380 - t1288 * t1382) * pkin(7);
t1073 = -t1136 * t1387 + t1138 * t1391;
t1066 = -t1133 * t1387 + t1134 * t1391;
t1058 = (-pkin(2) * t1388 + qJ(3) * t1392) * t1317 + (-t1146 * t1380 - t1147 * t1382) * pkin(7);
t1055 = t1071 * t1388 + t1289 * t1392;
t1052 = -t1380 * t1150 + t1382 * t1449;
t1051 = -t1380 * t1151 + t1382 * t1448;
t1050 = t1382 * t1150 + t1380 * t1449;
t1049 = t1382 * t1151 + t1380 * t1448;
t1045 = -t1380 * t1128 + t1382 * t1430;
t1044 = -t1380 * t1127 + t1382 * t1431;
t1043 = t1128 * t1382 + t1380 * t1430;
t1042 = t1382 * t1127 + t1380 * t1431;
t1041 = -t1380 * t1141 + t1382 * t1450;
t1040 = t1382 * t1141 + t1380 * t1450;
t1038 = qJ(3) * t1249 - t1485 * t1558;
t1037 = -t1380 * t1122 + t1382 * t1451;
t1036 = t1382 * t1122 + t1380 * t1451;
t1035 = -t1105 * t1387 + t1107 * t1391;
t1034 = -t1104 * t1387 + t1106 * t1391;
t1031 = -pkin(1) * t1146 - t1380 * t1188 + t1382 * t1397;
t1030 = pkin(1) * t1147 + t1382 * t1188 + t1380 * t1397;
t1029 = t1065 * t1388 + t1191 * t1392;
t1028 = -t1380 * t1120 + t1382 * t1452;
t1027 = t1382 * t1120 + t1380 * t1452;
t1026 = t1392 * t1161 - t1388 * t1164 + (-t1211 * t1380 - t1213 * t1382) * pkin(7);
t1025 = t1392 * t1160 - t1388 * t1165 + (-t1210 * t1380 - t1212 * t1382) * pkin(7);
t1020 = -pkin(1) * t1287 - t1380 * t1103 + t1382 * t1399;
t1019 = pkin(1) * t1288 + t1382 * t1103 + t1380 * t1399;
t1017 = -pkin(1) * t1211 - t1380 * t1163 + t1382 * t1401;
t1016 = -pkin(1) * t1210 - t1380 * t1162 + t1382 * t1402;
t1015 = pkin(1) * t1213 + t1382 * t1163 + t1380 * t1401;
t1014 = pkin(1) * t1212 + t1382 * t1162 + t1380 * t1402;
t1009 = t1033 * t1388 + t1144 * t1392;
t1008 = t1032 * t1388 - t1142 * t1392;
t1005 = -t1068 * t1387 + t1070 * t1391;
t1004 = -t1067 * t1387 + t1069 * t1391;
t997 = -t1380 * t1073 + t1382 * t1454;
t996 = t1382 * t1073 + t1380 * t1454;
t992 = -t1380 * t1074 + t1382 * t1453;
t991 = t1382 * t1074 + t1380 * t1453;
t989 = -t1056 * t1387 + t1057 * t1391;
t983 = -t1066 * t1380 + t1382 * t1455;
t982 = t1382 * t1066 + t1380 * t1455;
t979 = qJ(3) * t1579 + t1140 * t1558 + t1486;
t978 = t1003 * t1388 + t1130 * t1392;
t977 = t1002 * t1388 + t1129 * t1392;
t974 = qJ(3) * t1228 + t1119 * t1558 + t1487;
t970 = t1083 * t1392 + t1388 * t988;
t969 = -t1380 * t1035 + t1382 * t1456;
t968 = -t1380 * t1034 + t1382 * t1457;
t967 = t1035 * t1382 + t1380 * t1456;
t966 = t1382 * t1034 + t1380 * t1457;
t956 = -t1380 * t1005 + t1382 * t1458;
t955 = -t1380 * t1004 + t1382 * t1459;
t954 = t1382 * t1005 + t1380 * t1458;
t953 = t1382 * t1004 + t1380 * t1459;
t952 = -t1380 * t999 + t1382 * t1462;
t951 = t1380 * t1462 + t1382 * t999;
t948 = -t1380 * t994 + t1382 * t1463;
t947 = t1380 * t1463 + t1382 * t994;
t944 = -t1388 * t1039 + t1392 * t1054 + (-t1036 * t1380 - t1037 * t1382) * pkin(7);
t943 = -t1380 * t989 + t1382 * t1464;
t942 = t1380 * t1464 + t1382 * t989;
t939 = -t1380 * t985 + t1382 * t1465;
t938 = t1380 * t1465 + t1382 * t985;
t937 = -pkin(1) * t1036 - t1380 * t1038 + t1382 * t1403;
t936 = pkin(1) * t1037 + t1382 * t1038 + t1380 * t1403;
t934 = qJ(3) * t1256 + t1072 * t1558 + t1489;
t932 = -t1380 * t972 + t1382 * t1461;
t931 = t1380 * t1461 + t1382 * t972;
t929 = t1392 * t1006 - t1388 * t980 + (-t1040 * t1380 - t1041 * t1382) * pkin(7);
t925 = -t1388 * t975 + t1392 * t995 + (-t1027 * t1380 - t1028 * t1382) * pkin(7);
t923 = -pkin(1) * t1040 - t1380 * t979 + t1382 * t1408;
t922 = pkin(1) * t1041 + t1380 * t1408 + t1382 * t979;
t919 = -pkin(1) * t1027 - t1380 * t974 + t1382 * t1412;
t918 = pkin(1) * t1028 + t1380 * t1412 + t1382 * t974;
t916 = qJ(3) * t1201 + t1558 * t971 + t1433;
t911 = -t1388 * t935 + t1392 * t981 + (-t1380 * t991 - t1382 * t992) * pkin(7);
t908 = qJ(3) * t1116 + t1558 * t998 + t1490;
t906 = qJ(3) * t1111 + t1558 * t993 + t1491;
t905 = -pkin(1) * t991 - t1380 * t934 + t1382 * t1413;
t904 = pkin(1) * t992 + t1380 * t1413 + t1382 * t934;
t902 = qJ(3) * t1082 + t1558 * t984 + t1492;
t901 = -t1380 * t921 + t1382 * t1467;
t900 = t1380 * t1467 + t1382 * t921;
t898 = -t1388 * t917 + t1392 * t924 + (-t1380 * t931 - t1382 * t932) * pkin(7);
t897 = -t1388 * t909 + t1392 * t928 + (-t1380 * t951 - t1382 * t952) * pkin(7);
t896 = -t1388 * t907 + t1392 * t927 + (-t1380 * t947 - t1382 * t948) * pkin(7);
t895 = -pkin(1) * t931 - t1380 * t916 + t1382 * t1417;
t894 = pkin(1) * t932 + t1380 * t1417 + t1382 * t916;
t893 = -t1388 * t903 + t1392 * t915 + (-t1380 * t938 - t1382 * t939) * pkin(7);
t892 = -pkin(1) * t951 - t1380 * t908 + t1382 * t1418;
t891 = pkin(1) * t952 + t1380 * t1418 + t1382 * t908;
t890 = -pkin(1) * t947 - t1380 * t906 + t1382 * t1419;
t889 = pkin(1) * t948 + t1380 * t1419 + t1382 * t906;
t887 = qJ(3) * t962 + t1558 * t920 + t1493;
t886 = -pkin(1) * t938 - t1380 * t902 + t1382 * t1420;
t885 = pkin(1) * t939 + t1380 * t1420 + t1382 * t902;
t884 = -t1388 * t888 + t1392 * t899 + (-t1380 * t900 - t1382 * t901) * pkin(7);
t883 = -pkin(1) * t900 - t1380 * t887 + t1382 * t1421;
t882 = pkin(1) * t901 + t1380 * t1421 + t1382 * t887;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1566, -t1565, -t1437, -qJ(1) * t1437, 0, 0, -t1283, 0, t1285, t1353, -t1184 * t1379 - t1576, -t1183 * t1379 - t1574, -t1194 * t1379 + t1199 * t1381, t1381 * t1086 - t1379 * t1101 - qJ(1) * (t1167 * t1381 + t1200 * t1379), t1353, t1283, -t1285, 0, 0, 0, -t1174 * t1379 - t1381 * t1446, -t1178 * t1379 + t1576, -t1172 * t1379 + t1574, t1381 * t1058 - t1379 * t1031 - qJ(1) * (t1147 * t1381 + t1180 * t1379), -t1225 * t1379 + t1273 * t1381, -t1197 * t1379 + t1255 * t1381, -t1222 * t1379 + t1272 * t1381, -t1226 * t1379 + t1274 * t1381, -t1221 * t1379 + t1271 * t1381, -t1295 * t1379 + t1316 * t1381, t1381 * t1025 - t1379 * t1016 - qJ(1) * (t1212 * t1381 + t1266 * t1379), t1381 * t1026 - t1379 * t1017 - qJ(1) * (t1213 * t1381 + t1267 * t1379), t1381 * t1080 - t1379 * t1020 - qJ(1) * (t1288 * t1381 + t1293 * t1379), t1381 * t944 - t1379 * t937 - qJ(1) * (t1037 * t1381 + t1095 * t1379), -t1045 * t1379 + t1109 * t1381, t1055 * t1381 - t1379 * t997, -t1052 * t1379 + t1100 * t1381, -t1044 * t1379 + t1108 * t1381, -t1051 * t1379 + t1099 * t1381, -t1098 * t1379 + t1176 * t1381, t1381 * t925 - t1379 * t919 - qJ(1) * (t1028 * t1381 + t1087 * t1379), t1381 * t929 - t1379 * t923 - qJ(1) * (t1041 * t1381 + t1096 * t1379), t1381 * t911 - t1379 * t905 - qJ(1) * (t1053 * t1379 + t1381 * t992), t1381 * t898 - t1379 * t895 - qJ(1) * (t1379 * t964 + t1381 * t932), t1009 * t1381 - t1379 * t969, -t1379 * t943 + t1381 * t970, -t1379 * t955 + t1381 * t977, t1008 * t1381 - t1379 * t968, -t1379 * t956 + t1381 * t978, t1029 * t1381 - t1379 * t983, t1381 * t896 - t1379 * t890 - qJ(1) * (t1379 * t973 + t1381 * t948), t1381 * t897 - t1379 * t892 - qJ(1) * (t1379 * t976 + t1381 * t952), t1381 * t893 - t1379 * t886 - qJ(1) * (t1379 * t965 + t1381 * t939), t1381 * t884 - t1379 * t883 - qJ(1) * (t1379 * t912 + t1381 * t901); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1565, -t1566, t1483, qJ(1) * t1483, 0, 0, t1278, 0, -t1280, -t1496, t1184 * t1381 - t1577, t1183 * t1381 - t1575, t1194 * t1381 + t1199 * t1379, t1379 * t1086 + t1381 * t1101 + qJ(1) * (-t1167 * t1379 + t1200 * t1381), -t1496, -t1278, t1280, 0, 0, 0, t1174 * t1381 - t1379 * t1446, t1178 * t1381 + t1577, t1172 * t1381 + t1575, t1379 * t1058 + t1381 * t1031 + qJ(1) * (-t1147 * t1379 + t1180 * t1381), t1225 * t1381 + t1273 * t1379, t1197 * t1381 + t1255 * t1379, t1222 * t1381 + t1272 * t1379, t1226 * t1381 + t1274 * t1379, t1221 * t1381 + t1271 * t1379, t1295 * t1381 + t1316 * t1379, t1379 * t1025 + t1381 * t1016 + qJ(1) * (-t1212 * t1379 + t1266 * t1381), t1379 * t1026 + t1381 * t1017 + qJ(1) * (-t1213 * t1379 + t1267 * t1381), t1379 * t1080 + t1381 * t1020 + qJ(1) * (-t1288 * t1379 + t1293 * t1381), t1379 * t944 + t1381 * t937 + qJ(1) * (-t1037 * t1379 + t1095 * t1381), t1045 * t1381 + t1109 * t1379, t1055 * t1379 + t1381 * t997, t1052 * t1381 + t1100 * t1379, t1044 * t1381 + t1108 * t1379, t1051 * t1381 + t1099 * t1379, t1098 * t1381 + t1176 * t1379, t1379 * t925 + t1381 * t919 + qJ(1) * (-t1028 * t1379 + t1087 * t1381), t1379 * t929 + t1381 * t923 + qJ(1) * (-t1041 * t1379 + t1096 * t1381), t1379 * t911 + t1381 * t905 + qJ(1) * (t1053 * t1381 - t1379 * t992), t1379 * t898 + t1381 * t895 + qJ(1) * (-t1379 * t932 + t1381 * t964), t1009 * t1379 + t1381 * t969, t1379 * t970 + t1381 * t943, t1379 * t977 + t1381 * t955, t1008 * t1379 + t1381 * t968, t1379 * t978 + t1381 * t956, t1029 * t1379 + t1381 * t983, t1379 * t896 + t1381 * t890 + qJ(1) * (-t1379 * t948 + t1381 * t973), t1379 * t897 + t1381 * t892 + qJ(1) * (-t1379 * t952 + t1381 * t976), t1379 * t893 + t1381 * t886 + qJ(1) * (-t1379 * t939 + t1381 * t965), t1379 * t884 + t1381 * t883 + qJ(1) * (-t1379 * t901 + t1381 * t912); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1347, t1348, 0, 0, 0, 0, t1325, 0, -t1326, t1368, t1182, t1181, t1193, t1102, t1368, -t1325, t1326, 0, 0, 0, t1173, t1177, t1171, t1030, t1223, t1196, t1220, t1224, t1219, t1294, t1014, t1015, t1019, t936, t1043, t996, t1050, t1042, t1049, t1097, t918, t922, t904, t894, t967, t942, t953, t966, t954, t982, t889, t891, t885, t882; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1548, -t1347, 0, 0, 0, t1343, 0, -t1344, 0, t1236, t1239, t1199, t1086, 0, -t1343, t1344, 0, 0, 0, -t1446, -t1236, -t1239, t1058, t1273, t1255, t1272, t1274, t1271, t1316, t1025, t1026, t1080, t944, t1109, t1055, t1100, t1108, t1099, t1176, t925, t929, t911, t898, t1009, t970, t977, t1008, t978, t1029, t896, t897, t893, t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1548, 0, -t1348, 0, 0, 0, t1327, 0, -t1328, -t1512, t1184, t1183, t1194, t1101, -t1512, -t1327, t1328, 0, 0, 0, t1174, t1178, t1172, t1031, t1225, t1197, t1222, t1226, t1221, t1295, t1016, t1017, t1020, t937, t1045, t997, t1052, t1044, t1051, t1098, t919, t923, t905, t895, t969, t943, t955, t968, t956, t983, t890, t892, t886, t883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1347, t1348, 0, 0, 0, 0, t1325, 0, -t1326, t1368, t1182, t1181, t1193, t1102, t1368, -t1325, t1326, 0, 0, 0, t1173, t1177, t1171, t1030, t1223, t1196, t1220, t1224, t1219, t1294, t1014, t1015, t1019, t936, t1043, t996, t1050, t1042, t1049, t1097, t918, t922, t904, t894, t967, t942, t953, t966, t954, t982, t889, t891, t885, t882; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1394, 0, 0, -t1317, t1268, 0, 0, -qJDD(2), t1394, 0, 0, 0, t1257, 0, t1317, qJ(3) * t1317, t1361, t1346, t1370, -t1361, -t1511, qJDD(4), t1160, t1161, -t1551, t1054, t1532, t1289, t1233, -t1532, -t1229, t1374, t995, t1006, t981, t924, t1144, t1083, t1129, -t1142, t1130, t1191, t927, t928, t915, t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1394, 0, qJDD(2), 0, t1317, 0, t1269, 0, 0, -t1394, -qJDD(2), 0, 0, 0, t1252, -t1317, 0, pkin(2) * t1317, -t1315, -t1291, -t1305, -t1314, -t1303, t1338, t1165, t1164, -t1113, t1039, -t1126, -t1071, -t1148, -t1125, -t1149, -t1189, t975, t980, t935, t917, -t1033, -t988, -t1002, -t1032, -t1003, -t1065, t907, t909, t903, t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1268, -t1269, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1263, t1258, t1188, t1309, t1292, t1310, t1302, t1307, 0, t1162, t1163, t1103, t1038, t1128, t1073, t1150, t1127, t1151, t1190, t974, t979, t934, t916, t1035, t989, t1004, t1034, t1005, t1066, t906, t908, t902, t887; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1257, t1252, 0, t1309, t1292, t1310, t1302, t1307, 0, -pkin(8) * t1304 + t1520, -pkin(8) * t1306 + t1245, pkin(8) * t1342 + t1485, pkin(8) * t1485, t1128, t1073, t1150, t1127, t1151, t1190, -pkin(8) * t1119 + t1487, -pkin(8) * t1140 + t1486, -pkin(8) * t1072 + t1489, -pkin(8) * t971 + t1433, t1035, t989, t1004, t1034, t1005, t1066, -pkin(8) * t993 + t1491, -pkin(8) * t998 + t1490, -pkin(8) * t984 + t1492, -pkin(8) * t920 + t1493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1394, 0, 0, 0, -t1257, 0, -t1317, 0, -t1361, -t1346, -t1370, t1361, t1511, -qJDD(4), t1404, t1477, t1551, t1553, -t1532, -t1289, -t1233, t1532, t1229, -t1374, t1423, t1434, t1495, t1497, -t1144, -t1083, -t1129, t1142, -t1130, -t1191, t1428, t1427, t1407, t1466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1394, qJDD(2), 0, 0, 0, -t1252, t1317, 0, 0, t1315, t1291, t1305, t1314, t1303, -t1338, pkin(8) * t1308 - t1471, pkin(8) * t1311 - t1470, t1113, pkin(8) * t1122 - t1552, t1126, t1071, t1148, t1125, t1149, t1189, pkin(8) * t1120 - t1406, pkin(8) * t1141 - t1405, pkin(8) * t1074 - t1409, pkin(8) * t972 - t1398, t1033, t988, t1002, t1032, t1003, t1065, pkin(8) * t994 - t1415, pkin(8) * t999 - t1414, pkin(8) * t985 - t1416, pkin(8) * t921 - t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1340, -t1339, t1350, t1502, t1356, -t1502, 0, t1249, t1208, 0, t1217, t1138, t1242, t1215, t1243, t1260, t1118, t1124, t1001, -pkin(9) * t1023, t1107, t1057, t1069, t1106, t1070, t1134, t946, t950, t933, t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1501, t1341, t1358, t1426, t1349, -t1501, -t1249, 0, t1209, 0, t1216, t1136, t1240, t1214, t1241, t1259, t1088, t1091, t990, t1007, t1105, t1056, t1067, t1104, t1068, t1133, t940, t941, t926, t910; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1346, t1370, -t1361, -t1511, qJDD(4), -t1208, -t1209, 0, 0, t1532, t1289, t1233, -t1532, -t1229, t1374, t1472, t1498, t1135, t1022, t1144, t1083, t1129, -t1142, t1130, t1191, t1478, t1479, t1460, t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1254, -t1228, t1578, t1488, t1318, -t1488, 0, t1201, t1092, 0, t1145, t1085, t1131, t1143, t1132, t1192, t1018, t1021, t960, -pkin(10) * t962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1321, t1579, t1319, -t1429, t1276, -t1321, -t1201, 0, t1093, 0, -t1248, -t1246, -t1158, t1248, t1154, -t1251, t986, t987, -pkin(5) * t1082, -pkin(5) * t962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1532, t1289, t1233, -t1532, -t1229, t1374, -t1092, -t1093, 0, 0, t1144, t1083, t1129, -t1142, t1130, t1191, t1499, t1500, t1480, t1547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1198, t1156, t1564, t1264, t1261, -t1264, 0, t1078, t1012, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1265, t1157, t1262, -t1400, t1186, -t1265, -t1078, 0, t1013, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1248, t1246, t1158, -t1248, -t1154, t1251, -t1012, -t1013, 0, 0;];
m_new_reg  = t1;
