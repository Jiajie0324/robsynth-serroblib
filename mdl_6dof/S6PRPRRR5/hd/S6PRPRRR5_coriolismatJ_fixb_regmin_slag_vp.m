% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:43:39
% EndTime: 2019-03-08 20:43:48
% DurationCPUTime: 4.68s
% Computational Cost: add. (3743->327), mult. (8482->497), div. (0->0), fcn. (9452->10), ass. (0->275)
t383 = qJD(4) + qJD(5);
t285 = sin(qJ(6));
t284 = cos(pkin(6));
t287 = sin(qJ(4));
t290 = cos(qJ(4));
t283 = sin(pkin(6));
t291 = cos(qJ(2));
t427 = t283 * t291;
t239 = t284 * t287 + t290 * t427;
t240 = t284 * t290 - t287 * t427;
t286 = sin(qJ(5));
t444 = cos(qJ(5));
t317 = -t286 * t239 + t444 * t240;
t274 = t444 * t290;
t421 = t286 * t287;
t252 = -t274 + t421;
t452 = -t252 / 0.2e1;
t362 = t317 * t452;
t476 = t285 * t362;
t374 = t444 * t287;
t420 = t286 * t290;
t253 = t374 + t420;
t464 = t383 * t253;
t333 = t252 * t464;
t292 = -pkin(2) - pkin(8);
t468 = -pkin(9) + t292;
t256 = t468 * t287;
t257 = t468 * t290;
t316 = t444 * t256 + t286 * t257;
t466 = t316 * t285;
t289 = cos(qJ(6));
t273 = pkin(4) * t287 + qJ(3);
t441 = t253 * pkin(5);
t335 = t252 * pkin(10) + t441;
t307 = t273 + t335;
t58 = -t289 * t307 + t466;
t475 = (t58 - t466) * t252;
t465 = t316 * t289;
t59 = t285 * t307 + t465;
t474 = (t59 - t465) * t252;
t343 = t286 * t256 - t444 * t257;
t310 = -t374 / 0.2e1 - t420 / 0.2e1;
t288 = sin(qJ(2));
t428 = t283 * t288;
t104 = (t253 / 0.2e1 + t310) * t428;
t398 = t104 * qJD(1);
t473 = t383 * t343 - t398;
t359 = -t428 / 0.2e1;
t105 = t253 * t359 + t310 * t428;
t344 = t444 * t239 + t286 * t240;
t472 = t105 * qJD(2) + t383 * t344;
t471 = t383 * t316;
t458 = t274 / 0.2e1 - t421 / 0.2e1;
t106 = t252 * t359 + t428 * t458;
t470 = t106 * qJD(2) - t383 * t317;
t469 = 0.2e1 * t252;
t153 = t252 * t285;
t467 = t153 * t383;
t380 = t444 * pkin(4);
t276 = -t380 - pkin(5);
t429 = t253 * t276;
t439 = t286 * pkin(4);
t275 = pkin(10) + t439;
t430 = t252 * t275;
t462 = t441 / 0.2e1 + t430 / 0.2e1 - t429 / 0.2e1 + (-t444 * t253 / 0.2e1 + t286 * t452) * pkin(4);
t247 = t252 ^ 2;
t454 = t253 ^ 2;
t461 = t454 / 0.2e1 + t247 / 0.2e1;
t392 = t252 * qJD(2);
t451 = t252 / 0.2e1;
t103 = (t451 + t458) * t428;
t399 = t103 * qJD(1);
t460 = t273 * t392 + t399;
t443 = pkin(4) * t290;
t137 = -t252 * t273 + t253 * t443;
t459 = -qJD(2) * t137 + t399;
t127 = t454 - t247;
t282 = t289 ^ 2;
t453 = t285 ^ 2;
t146 = (-t453 / 0.2e1 + t282 / 0.2e1) * t252;
t423 = t285 * t289;
t367 = qJD(2) * t423;
t456 = t146 * t383 + t247 * t367;
t381 = -t282 + t453;
t128 = -0.2e1 * t252 * t367 + t381 * t383;
t449 = t275 / 0.2e1;
t448 = -t285 / 0.2e1;
t447 = t285 / 0.2e1;
t446 = -t289 / 0.2e1;
t445 = t289 / 0.2e1;
t442 = t252 * pkin(5);
t440 = t253 * pkin(10);
t426 = t285 * t317;
t87 = -t289 * t428 + t426;
t436 = t87 * t253;
t419 = t289 * t317;
t88 = t285 * t428 + t419;
t435 = t88 * t253;
t434 = t343 * t285;
t433 = t343 * t289;
t154 = t252 * t289;
t184 = t440 - t442;
t167 = t184 + t443;
t425 = t285 * t167;
t147 = t285 * t253;
t422 = t285 * t291;
t418 = t289 * t167;
t151 = t289 * t253;
t322 = 0.1e1 / 0.2e1 + t461;
t65 = t322 * t285;
t416 = t65 * qJD(2);
t91 = t322 * t289;
t415 = t91 * qJD(2);
t413 = qJD(2) * qJ(3);
t138 = -t252 * t443 - t253 * t273;
t411 = qJD(2) * t138;
t410 = qJD(2) * t283;
t409 = qJD(3) * t253;
t408 = qJD(4) * t285;
t407 = qJD(4) * t289;
t406 = qJD(5) * t273;
t405 = qJD(5) * t285;
t404 = qJD(5) * t289;
t403 = qJD(6) * t285;
t402 = qJD(6) * t289;
t101 = t127 * t285;
t401 = t101 * qJD(2);
t102 = t127 * t289;
t400 = t102 * qJD(2);
t397 = t127 * qJD(2);
t396 = t146 * qJD(2);
t395 = t147 * qJD(2);
t142 = t151 * qJD(2);
t170 = t381 * t247;
t394 = t170 * qJD(2);
t393 = t458 * qJD(2);
t391 = t253 * qJD(2);
t268 = t287 ^ 2 - t290 ^ 2;
t390 = t268 * qJD(2);
t389 = t287 * qJD(2);
t388 = t287 * qJD(4);
t387 = t290 * qJD(2);
t386 = t290 * qJD(4);
t379 = qJD(4) * t439;
t378 = qJD(5) * t439;
t376 = t87 * t451;
t375 = t88 * t451;
t373 = qJ(3) * t389;
t372 = qJ(3) * t387;
t370 = t273 * t391;
t369 = t285 * t391;
t368 = t289 * t391;
t366 = t253 * t403;
t365 = t253 * t402;
t193 = t252 * t391;
t267 = t288 * t410;
t364 = t291 * t410;
t272 = t285 * t402;
t363 = t287 * t387;
t119 = t344 * t447;
t120 = t344 * t445;
t361 = t153 / 0.2e1;
t360 = -t154 / 0.2e1;
t358 = t427 / 0.2e1;
t357 = -t426 / 0.2e1;
t194 = t253 * t428;
t356 = t194 * t448;
t353 = -t419 / 0.2e1;
t352 = t194 * t446;
t346 = t444 * qJD(4);
t345 = t444 * qJD(5);
t342 = t383 * t289;
t340 = t383 * t285;
t339 = -t380 / 0.2e1;
t336 = t383 * t439;
t334 = t285 * t342;
t332 = t289 * t340;
t309 = t288 * t252;
t302 = t283 * t309;
t297 = t302 / 0.2e1;
t296 = t289 * t297 + t376;
t3 = t296 + t476;
t9 = t418 * t253 + t475;
t331 = t3 * qJD(1) + t9 * qJD(2);
t1 = t252 * t357 + t296;
t11 = t184 * t151 + t475;
t330 = t1 * qJD(1) + t11 * qJD(2);
t10 = -t425 * t253 + t474;
t298 = -t302 / 0.2e1;
t295 = t285 * t298 + t375;
t8 = t317 * t360 + t295;
t329 = t8 * qJD(1) + t10 * qJD(2);
t12 = -t184 * t147 + t474;
t6 = t252 * t353 + t295;
t328 = t6 * qJD(1) + t12 * qJD(2);
t321 = -t276 / 0.2e1 + t339;
t293 = (-pkin(5) / 0.2e1 + t321) * t253 + (t449 - t439 / 0.2e1 - pkin(10) / 0.2e1) * t252;
t14 = t285 * t293;
t327 = t14 * qJD(2);
t318 = t344 * t451 + t358;
t18 = t356 + t435 / 0.2e1 + t318 * t289;
t33 = -t154 * t343 - t253 * t59;
t326 = qJD(1) * t18 - qJD(2) * t33;
t19 = t352 - t436 / 0.2e1 - t318 * t285;
t32 = t153 * t343 + t253 * t58;
t325 = qJD(1) * t19 - qJD(2) * t32;
t324 = -t429 + t430;
t323 = t252 * (qJD(6) + t391);
t320 = t440 / 0.2e1 - t442 / 0.2e1;
t319 = t253 * t449 + t276 * t451;
t315 = t289 * t323;
t110 = -qJD(6) * t458 + t193;
t314 = pkin(5) / 0.2e1 + t321;
t313 = t184 / 0.2e1 + t320;
t312 = t334 * t469;
t308 = t167 / 0.2e1 + t319;
t203 = t314 * t285;
t29 = t313 * t289;
t305 = pkin(5) * t405 + qJD(2) * t29 + qJD(4) * t203;
t204 = t314 * t289;
t27 = t313 * t285;
t304 = pkin(5) * t404 - qJD(2) * t27 + qJD(4) * t204;
t303 = t252 * t309;
t23 = t285 * t308;
t301 = -qJD(2) * t23 - t276 * t407;
t25 = t289 * t308;
t300 = qJD(2) * t25 - t276 * t408;
t17 = t289 * t293;
t299 = -qJD(2) * t17 - t285 * t379;
t266 = t285 * t378;
t262 = t381 * qJD(6);
t206 = pkin(5) * t446 + t276 * t445 + t289 * t339;
t205 = pkin(5) * t448 + t276 * t447 + t285 * t339;
t192 = t289 * t298;
t191 = t285 * t297;
t173 = t383 * t252;
t168 = t383 * t458;
t139 = t146 * qJD(6);
t124 = t142 + t402;
t123 = -t395 - t403;
t95 = t104 * qJD(2);
t93 = t103 * qJD(2);
t92 = t445 + (t247 + t454) * t446;
t90 = t332 - t396;
t89 = -t334 + t396;
t86 = 0.2e1 * t285 * t315;
t66 = t461 * t285 + t448;
t64 = -t193 * t282 - t139;
t57 = qJD(6) * t151 + t400;
t56 = -qJD(6) * t147 - t401;
t55 = -t344 * t446 + t120;
t54 = 0.2e1 * t120;
t53 = -t344 * t448 + t119;
t52 = 0.2e1 * t119;
t51 = t317 * t446 + t353;
t46 = t426 / 0.2e1 + t317 * t447;
t42 = -t139 + (t282 * t392 - t334) * t253;
t40 = -t400 - t467;
t39 = -t252 * t342 + t401;
t34 = (qJD(6) - t391) * t423 * t469 + t381 * t464;
t31 = t153 * qJD(6) - t253 * t342;
t30 = t184 * t445 - t320 * t289 + t434;
t28 = t184 * t448 + t320 * t285 + t433;
t26 = t434 / 0.2e1 - t343 * t448 + t418 / 0.2e1 - t319 * t289;
t24 = t433 / 0.2e1 - t343 * t446 - t425 / 0.2e1 + t319 * t285;
t21 = -t435 / 0.2e1 + t344 * t360 + t356 + t289 * t358;
t20 = t436 / 0.2e1 + t344 * t361 + t352 - t283 * t422 / 0.2e1;
t16 = t466 + pkin(10) * t154 / 0.2e1 + t462 * t289;
t15 = pkin(10) * t361 + t462 * t285 - t465;
t13 = t154 * qJD(6) + t253 * t340;
t7 = t289 * t362 + t191 + t375;
t5 = t191 + (t88 / 0.2e1 + t353) * t252;
t4 = t192 + t376 + t476;
t2 = t192 + (t87 / 0.2e1 + t357) * t252;
t22 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t267, -t364, t267, t364 ((-pkin(2) * t288 + qJ(3) * t291) * qJD(2) + t288 * qJD(3)) * t283, 0, 0, 0, 0, 0 (t288 * t386 + t291 * t389) * t283 (-t288 * t388 + t291 * t387) * t283, 0, 0, 0, 0, 0, t106 * t383 + t253 * t364, t105 * t383 - t252 * t364, 0, 0, 0, 0, 0 (-t194 * t147 + (t151 * t291 - t285 * t303) * t283) * qJD(2) + t4 * qJD(4) + t2 * qJD(5) + t21 * qJD(6) (-t194 * t151 + (-t253 * t422 - t289 * t303) * t283) * qJD(2) + t7 * qJD(4) + t5 * qJD(5) + t20 * qJD(6); 0, 0, 0, 0, 0, 0, t267, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t240 + t267 * t290, qJD(4) * t239 - t267 * t287, 0, 0, 0, 0, 0, t470, t472, 0, 0, 0, 0, 0, qJD(2) * t4 + qJD(5) * t51 + qJD(6) * t53 - t317 * t407, qJD(2) * t7 + qJD(5) * t46 + qJD(6) * t55 + t317 * t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t472, 0, 0, 0, 0, 0, qJD(2) * t2 + qJD(4) * t51 + qJD(6) * t52 - t317 * t404, qJD(2) * t5 + qJD(4) * t46 + qJD(6) * t54 + t317 * t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t21 + qJD(4) * t53 + qJD(5) * t52 - qJD(6) * t88, qJD(2) * t20 + qJD(4) * t55 + qJD(5) * t54 + qJD(6) * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383 * t103, -t383 * t104, 0, 0, 0, 0, 0, qJD(4) * t3 + qJD(5) * t1 - qJD(6) * t18, qJD(4) * t8 + qJD(5) * t6 - qJD(6) * t19; 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t287 * t386, t268 * qJD(4), 0, 0, 0, qJ(3) * t386 + qJD(3) * t287, -qJ(3) * t388 + qJD(3) * t290, t333, t383 * t127, 0, 0, 0, qJD(4) * t137 - t252 * t406 + t409, -qJD(3) * t252 + qJD(4) * t138 - t253 * t406, -t247 * t272 + t282 * t333, t170 * qJD(6) - t253 * t312, -t102 * t383 + t252 * t366, t101 * t383 + t252 * t365, -t333, qJD(4) * t9 + qJD(5) * t11 + qJD(6) * t33 + t289 * t409, qJD(4) * t10 + qJD(5) * t12 + qJD(6) * t32 - t285 * t409; 0, 0, 0, 0, 0, qJD(2), t413, 0, 0, 0, 0, 0, t389, t387, 0, 0, 0, 0, 0, t391, -t392, 0, 0, 0, 0, 0, qJD(6) * t92 + t368, qJD(6) * t66 - t369; 0, 0, 0, 0, 0, 0, 0, -t363, t390, -t388, -t386, 0, -t292 * t388 + t372, -t292 * t386 - t373, t193, t397, -t464, t173, 0, -t459 - t471, t411 + t473, t42, t34, t40, t39, -t110 (t285 * t324 - t465) * qJD(4) + t15 * qJD(5) + t26 * qJD(6) + t331 (t289 * t324 + t466) * qJD(4) + t16 * qJD(5) + t24 * qJD(6) + t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, t397, -t464, t173, 0, -t460 - t471, -t370 + t473, t42, t34, t40, t39, -t110, t15 * qJD(4) + (t285 * t335 - t465) * qJD(5) + t30 * qJD(6) + t330, t16 * qJD(4) + (t289 * t335 + t466) * qJD(5) + t28 * qJD(6) + t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t456, t332 * t469 + t394, t285 * t323, t315, t168, qJD(3) * t92 + qJD(4) * t26 + qJD(5) * t30 - qJD(6) * t59 - t326, qJD(3) * t66 + qJD(4) * t24 + qJD(5) * t28 + qJD(6) * t58 - t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, -qJD(2), -t413, 0, 0, 0, 0, 0, -t389, -t387, 0, 0, 0, 0, 0, -t391, t392, 0, 0, 0, 0, 0, -qJD(6) * t91 - t368, qJD(6) * t65 + t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, -t386, 0, 0, 0, 0, 0, -t464, t173, 0, 0, 0, 0, 0, t31, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t464, t173, 0, 0, 0, 0, 0, t31, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t365 - t415 + t467, t154 * t383 + t366 + t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t95, 0, 0, 0, 0, 0, -qJD(2) * t3, -qJD(2) * t8; 0, 0, 0, 0, 0, 0, 0, t363, -t390, 0, 0, 0, -t372, t373, -t193, -t397, 0, 0, 0, t459, t398 - t411, t64, t86, t57, t56, t110, qJD(5) * t14 - qJD(6) * t25 - t331, qJD(5) * t17 + qJD(6) * t23 - t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -pkin(4) * t345, t272, -t262, 0, 0, 0, t276 * t403 - t289 * t378, t276 * t402 + t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336 (-t346 - t345) * pkin(4), t272, -t262, 0, 0, 0, t205 * qJD(6) - t289 * t336 + t327, qJD(6) * t206 + t266 - t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t128, t124, t123, -t393, qJD(5) * t205 - t275 * t402 - t300, qJD(5) * t206 + t275 * t403 - t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t95, 0, 0, 0, 0, 0, -qJD(2) * t1, -qJD(2) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, -t397, 0, 0, 0, t460, t398 + t370, t64, t86, t57, t56, t110, -qJD(4) * t14 - qJD(6) * t29 - t330, -qJD(4) * t17 + qJD(6) * t27 - t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379, pkin(4) * t346, t272, -t262, 0, 0, 0, -qJD(6) * t203 + t289 * t379 - t327, -qJD(6) * t204 + t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -t262, 0, 0, 0, -pkin(5) * t403, -pkin(5) * t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t128, t124, t123, -t393, -pkin(10) * t402 - t305, pkin(10) * t403 - t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t18, qJD(2) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456, -t312 - t394, -t151 * t383 - t193 * t285, t147 * t383 - t193 * t289, t168, qJD(3) * t91 + qJD(4) * t25 + qJD(5) * t29 + t326, -qJD(3) * t65 - qJD(4) * t23 - qJD(5) * t27 + t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, -t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, t128, -t142, t395, t393, qJD(5) * t203 + t300, qJD(5) * t204 + t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, t128, -t142, t395, t393, t305, t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t22;
