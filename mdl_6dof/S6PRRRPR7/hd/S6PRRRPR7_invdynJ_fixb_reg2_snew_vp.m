% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 08:52
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRRPR7_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR7_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR7_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR7_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR7_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR7_invdynJ_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 08:48:20
% EndTime: 2019-05-05 08:48:43
% DurationCPUTime: 12.86s
% Computational Cost: add. (83729->580), mult. (176729->913), div. (0->0), fcn. (144676->16), ass. (0->390)
t312 = sin(pkin(13));
t316 = cos(pkin(7));
t391 = qJD(2) * t316;
t308 = qJD(3) + t391;
t318 = sin(qJ(4));
t322 = cos(qJ(4));
t313 = sin(pkin(7));
t319 = sin(qJ(3));
t390 = qJD(2) * t319;
t374 = t313 * t390;
t288 = t308 * t318 + t322 * t374;
t323 = cos(qJ(3));
t389 = qJD(2) * t323;
t373 = t313 * t389;
t304 = -qJD(4) + t373;
t315 = cos(pkin(13));
t269 = t288 * t312 + t315 * t304;
t270 = t288 * t315 - t304 * t312;
t236 = t270 * t269;
t382 = qJDD(2) * t319;
t383 = qJD(2) * qJD(3);
t293 = (t323 * t383 + t382) * t313;
t307 = qJDD(2) * t316 + qJDD(3);
t367 = t293 * t318 - t322 * t307;
t251 = qJD(4) * t288 + t367;
t434 = -t236 + t251;
t443 = t312 * t434;
t442 = t315 * t434;
t317 = sin(qJ(6));
t321 = cos(qJ(6));
t228 = t321 * t269 + t270 * t317;
t230 = -t269 * t317 + t270 * t321;
t182 = t230 * t228;
t250 = qJDD(6) + t251;
t436 = -t182 + t250;
t441 = t317 * t436;
t440 = t321 * t436;
t320 = sin(qJ(2));
t416 = sin(pkin(12));
t417 = cos(pkin(12));
t344 = -g(1) * t417 - g(2) * t416;
t426 = cos(qJ(2));
t314 = sin(pkin(6));
t343 = g(1) * t416 - g(2) * t417;
t418 = cos(pkin(6));
t332 = t418 * t343;
t394 = -g(3) + qJDD(1);
t432 = t314 * t394 + t332;
t267 = -t320 * t344 + t426 * t432;
t424 = pkin(9) * t313;
t427 = qJD(2) ^ 2;
t327 = qJDD(2) * pkin(2) + t424 * t427 + t267;
t330 = -t314 * t343 + t394 * t418;
t439 = t313 * t330 + t316 * t327;
t381 = qJDD(2) * t323;
t339 = (t319 * t383 - t381) * t313;
t334 = qJDD(4) + t339;
t286 = -t322 * t308 + t318 * t374;
t399 = t288 * t286;
t331 = t334 - t399;
t438 = t318 * t331;
t437 = t322 * t331;
t346 = -t293 * t322 - t307 * t318;
t252 = -qJD(4) * t286 - t346;
t234 = t315 * t252 + t312 * t334;
t368 = t252 * t312 - t315 * t334;
t153 = -t228 * qJD(6) + t321 * t234 - t317 * t368;
t281 = qJD(6) + t286;
t210 = t281 * t228;
t435 = -t210 + t153;
t247 = t286 * t269;
t194 = -t247 - t234;
t433 = -t247 + t234;
t277 = t286 * t304;
t222 = t252 + t277;
t369 = t234 * t317 + t321 * t368;
t125 = (qJD(6) - t281) * t230 + t369;
t219 = (qJD(4) + t304) * t288 + t367;
t226 = t228 ^ 2;
t227 = t230 ^ 2;
t431 = t269 ^ 2;
t266 = t270 ^ 2;
t279 = t281 ^ 2;
t430 = t286 ^ 2;
t285 = t288 ^ 2;
t429 = t304 ^ 2;
t428 = t308 ^ 2;
t309 = t313 ^ 2;
t425 = pkin(4) * t318;
t423 = t323 * pkin(3);
t325 = t439 * t319;
t268 = t320 * t432 + t426 * t344;
t256 = -pkin(2) * t427 + qJDD(2) * t424 + t268;
t365 = -t319 * pkin(10) - t423;
t392 = qJD(2) * t313;
t363 = t365 * t392 ^ 2 + t256;
t180 = -pkin(3) * t428 + t307 * pkin(10) + t323 * t363 + t325;
t328 = t316 * t330;
t387 = qJD(3) + t308;
t324 = t328 - t293 * pkin(10) + ((-pkin(2) - t423) * qJDD(2) + (pkin(3) * t319 * t387 - t323 * t308 * pkin(10) - pkin(9) * t392) * qJD(2) - t267) * t313;
t145 = t322 * t180 + t318 * t324;
t257 = pkin(4) * t286 - qJ(5) * t288;
t110 = -pkin(4) * t429 + qJ(5) * t334 - t286 * t257 + t145;
t393 = t439 * t323;
t179 = -t307 * pkin(3) - t428 * pkin(10) + t319 * t363 - t393;
t135 = -t222 * qJ(5) + (-t288 * t304 + t251) * pkin(4) + t179;
t78 = 0.2e1 * qJD(5) * t270 + t110 * t312 - t315 * t135;
t60 = pkin(5) * t434 + pkin(11) * t194 - t78;
t241 = pkin(5) * t286 - pkin(11) * t270;
t79 = -0.2e1 * qJD(5) * t269 + t315 * t110 + t312 * t135;
t67 = -pkin(5) * t431 - pkin(11) * t368 - t286 * t241 + t79;
t35 = t317 * t67 - t321 * t60;
t36 = t317 * t60 + t321 * t67;
t20 = t317 * t36 - t321 * t35;
t422 = t20 * t312;
t421 = t20 * t315;
t144 = t180 * t318 - t322 * t324;
t107 = -t334 * pkin(4) - t429 * qJ(5) + t257 * t288 + qJDD(5) + t144;
t99 = pkin(5) * t368 - pkin(11) * t431 + t241 * t270 + t107;
t420 = t317 * t99;
t419 = t321 * t99;
t415 = t107 * t312;
t414 = t107 * t315;
t161 = t182 + t250;
t413 = t161 * t317;
t412 = t161 * t321;
t411 = t179 * t318;
t410 = t179 * t322;
t196 = t236 + t251;
t409 = t196 * t312;
t408 = t196 * t315;
t242 = -t334 - t399;
t407 = t242 * t318;
t406 = t242 * t322;
t405 = t251 * t318;
t404 = t270 * t286;
t403 = t281 * t317;
t402 = t281 * t321;
t401 = t286 * t312;
t400 = t286 * t315;
t398 = t304 * t318;
t397 = t304 * t322;
t388 = t309 * t427;
t303 = t319 * t323 * t388;
t290 = t303 + t307;
t396 = t319 * t290;
t291 = -t303 + t307;
t395 = t323 * t291;
t386 = qJD(4) - t304;
t380 = t318 * t182;
t379 = t322 * t182;
t378 = t318 * t236;
t377 = t322 * t236;
t376 = t323 * t399;
t375 = -pkin(4) * t322 - pkin(3);
t310 = t319 ^ 2;
t372 = t310 * t388;
t311 = t323 ^ 2;
t371 = t311 * t388;
t45 = t312 * t78 + t315 * t79;
t21 = t317 * t35 + t321 * t36;
t97 = t144 * t318 + t322 * t145;
t366 = -t308 + t391;
t364 = -pkin(4) * t107 + qJ(5) * t45;
t11 = t21 * t312 + t421;
t12 = t21 * t315 - t422;
t9 = t12 * t322 + t318 * t99;
t362 = -t11 * t323 + t319 * t9;
t44 = t312 * t79 - t315 * t78;
t39 = t107 * t318 + t322 * t45;
t361 = t319 * t39 - t323 * t44;
t154 = -t226 - t227;
t128 = t210 + t153;
t86 = -t125 * t317 - t128 * t321;
t88 = -t125 * t321 + t128 * t317;
t50 = -t312 * t86 + t315 * t88;
t43 = t154 * t318 + t322 * t50;
t48 = t312 * t88 + t315 * t86;
t360 = t319 * t43 - t323 * t48;
t124 = (qJD(6) + t281) * t230 + t369;
t173 = -t279 - t226;
t108 = t173 * t317 + t440;
t109 = t173 * t321 - t441;
t74 = -t108 * t312 + t109 * t315;
t55 = t124 * t318 + t322 * t74;
t73 = t108 * t315 + t109 * t312;
t359 = t319 * t55 - t323 * t73;
t200 = -t227 - t279;
t130 = t200 * t321 - t413;
t131 = -t200 * t317 - t412;
t85 = -t130 * t312 + t131 * t315;
t59 = t318 * t435 + t322 * t85;
t84 = t130 * t315 + t131 * t312;
t358 = t319 * t59 - t323 * t84;
t357 = -t179 * t323 + t319 * t97;
t190 = t368 - t404;
t149 = -t190 * t315 - t194 * t312;
t205 = -t266 - t431;
t112 = t149 * t322 + t205 * t318;
t147 = -t190 * t312 + t194 * t315;
t356 = t112 * t319 - t147 * t323;
t214 = -t430 - t431;
t157 = t214 * t315 - t443;
t189 = t368 + t404;
t115 = t157 * t322 + t189 * t318;
t156 = t214 * t312 + t442;
t355 = t115 * t319 - t156 * t323;
t232 = -t266 - t430;
t164 = -t232 * t312 - t408;
t119 = t164 * t322 + t318 * t433;
t163 = t232 * t315 - t409;
t354 = t119 * t319 - t163 * t323;
t96 = -t144 * t322 + t145 * t318;
t223 = t252 - t277;
t177 = -t219 * t322 + t223 * t318;
t240 = t430 + t285;
t353 = t177 * t319 + t240 * t323;
t198 = t256 * t319 - t393;
t199 = t323 * t256 + t325;
t352 = -t198 * t323 + t199 * t319;
t151 = t319 * t198 + t199 * t323;
t253 = -t430 - t429;
t204 = t253 * t322 - t438;
t220 = -t288 * t386 - t367;
t351 = t204 * t319 + t220 * t323;
t260 = -t285 - t429;
t207 = -t260 * t318 + t406;
t224 = t286 * t386 + t346;
t350 = t207 * t319 + t224 * t323;
t298 = t308 * t373;
t274 = -t298 + t293;
t297 = t308 * t374;
t275 = t297 - t339;
t349 = -t274 * t323 + t275 * t319;
t280 = -t372 - t428;
t348 = t280 * t323 - t291 * t319;
t294 = -t371 - t428;
t347 = t290 * t323 + t294 * t319;
t342 = -pkin(4) * t189 + qJ(5) * t157 - t414;
t341 = -pkin(4) * t433 + qJ(5) * t164 + t415;
t340 = -pkin(4) * t205 + qJ(5) * t149 + t45;
t52 = -pkin(5) * t124 + pkin(11) * t109 - t419;
t61 = -pkin(11) * t108 + t420;
t338 = -pkin(4) * t124 + qJ(5) * t74 + t312 * t61 + t315 * t52;
t53 = -pkin(5) * t435 + pkin(11) * t131 + t420;
t68 = -pkin(11) * t130 + t419;
t337 = -pkin(4) * t435 + qJ(5) * t85 + t312 * t68 + t315 * t53;
t16 = -pkin(5) * t154 + pkin(11) * t88 + t21;
t17 = -pkin(11) * t86 - t20;
t336 = -pkin(4) * t154 + qJ(5) * t50 + t16 * t315 + t17 * t312;
t19 = -pkin(5) * t99 + pkin(11) * t21;
t333 = -pkin(4) * t99 - pkin(11) * t422 + qJ(5) * t12 + t19 * t315;
t296 = (-t310 - t311) * t388;
t295 = (t310 - t311) * t388;
t276 = -t297 - t339;
t273 = (t387 * t389 + t382) * t313;
t272 = -t285 + t429;
t271 = t430 - t429;
t264 = t294 * t323 - t396;
t258 = t285 - t430;
t255 = -t319 * t280 - t395;
t249 = t322 * t251;
t246 = -t266 + t430;
t245 = -t430 + t431;
t239 = (t286 * t318 + t288 * t322) * t304;
t238 = t319 * t274 + t275 * t323;
t237 = t313 * t327 - t328;
t235 = -t266 + t431;
t233 = t313 * t276 + t316 * t347;
t218 = -t313 * t273 + t316 * t348;
t217 = t252 * t318 - t288 * t397;
t216 = -t286 * t398 - t249;
t215 = -t313 * t296 + t316 * t349;
t213 = t271 * t318 - t406;
t212 = t272 * t322 + t438;
t209 = -t227 + t279;
t208 = t226 - t279;
t206 = t260 * t322 + t407;
t203 = t253 * t318 + t437;
t202 = (-t269 * t315 + t270 * t312) * t286;
t201 = (-t269 * t312 - t270 * t315) * t286;
t186 = t234 * t315 - t270 * t401;
t185 = t234 * t312 + t270 * t400;
t184 = t269 * t400 + t312 * t368;
t183 = -t269 * t401 + t315 * t368;
t181 = t227 - t226;
t176 = -t219 * t318 - t223 * t322;
t175 = t220 * t318 + t222 * t322;
t174 = t202 * t318 - t249;
t172 = t245 * t315 - t409;
t171 = -t246 * t312 + t442;
t170 = t245 * t312 + t408;
t169 = t246 * t315 + t443;
t168 = t207 * t323 - t319 * t224;
t167 = t204 * t323 - t319 * t220;
t166 = (-t228 * t321 + t230 * t317) * t281;
t165 = (-t228 * t317 - t230 * t321) * t281;
t159 = t186 * t318 - t377;
t158 = t184 * t318 + t377;
t155 = t177 * t323 - t319 * t240;
t152 = -qJD(6) * t230 - t369;
t150 = -t189 * t315 - t312 * t433;
t148 = -t189 * t312 + t315 * t433;
t146 = -t313 * t206 + t316 * t350;
t142 = t208 * t321 - t413;
t141 = -t209 * t317 + t440;
t140 = t208 * t317 + t412;
t139 = t209 * t321 + t441;
t138 = -t313 * t203 + t316 * t351;
t137 = t172 * t318 + t190 * t322;
t136 = t171 * t318 + t194 * t322;
t132 = t313 * t237 + t316 * t352;
t123 = t153 * t321 - t230 * t403;
t122 = t153 * t317 + t230 * t402;
t121 = -t152 * t317 + t228 * t402;
t120 = t152 * t321 + t228 * t403;
t118 = t164 * t318 - t322 * t433;
t117 = t150 * t318 + t235 * t322;
t116 = pkin(3) * t224 + pkin(10) * t207 + t411;
t114 = t157 * t318 - t189 * t322;
t113 = pkin(3) * t220 + pkin(10) * t204 - t410;
t111 = t149 * t318 - t205 * t322;
t105 = -t313 * t176 + t316 * t353;
t104 = -t165 * t312 + t166 * t315;
t103 = t165 * t315 + t166 * t312;
t102 = t104 * t318 - t250 * t322;
t101 = t119 * t323 + t319 * t163;
t100 = t115 * t323 + t319 * t156;
t98 = -qJ(5) * t163 + t414;
t95 = -qJ(5) * t156 + t415;
t94 = -t140 * t312 + t142 * t315;
t93 = -t139 * t312 + t141 * t315;
t92 = t140 * t315 + t142 * t312;
t91 = t139 * t315 + t141 * t312;
t90 = t112 * t323 + t319 * t147;
t89 = -t124 * t321 - t317 * t435;
t87 = -t124 * t317 + t321 * t435;
t83 = -t122 * t312 + t123 * t315;
t82 = -t120 * t312 + t121 * t315;
t81 = t122 * t315 + t123 * t312;
t80 = t120 * t315 + t121 * t312;
t76 = -pkin(3) * t179 + pkin(10) * t97;
t75 = t319 * t179 + t323 * t97;
t72 = pkin(3) * t240 + pkin(10) * t177 + t97;
t71 = t318 * t83 - t379;
t70 = t318 * t82 + t379;
t69 = -t313 * t118 + t316 * t354;
t66 = -t313 * t114 + t316 * t355;
t65 = -pkin(4) * t163 + t79;
t64 = t125 * t322 + t318 * t94;
t63 = -t128 * t322 + t318 * t93;
t62 = -pkin(4) * t156 + t78;
t58 = t318 * t85 - t322 * t435;
t56 = -t313 * t111 + t316 * t356;
t54 = -t124 * t322 + t318 * t74;
t51 = -t312 * t87 + t315 * t89;
t49 = t312 * t89 + t315 * t87;
t47 = -t313 * t96 + t316 * t357;
t46 = -t181 * t322 + t318 * t51;
t42 = -t154 * t322 + t318 * t50;
t41 = t319 * t84 + t323 * t59;
t40 = -qJ(5) * t147 - t44;
t38 = -t107 * t322 + t318 * t45;
t37 = t319 * t73 + t323 * t55;
t33 = -pkin(4) * t48 - pkin(5) * t86;
t32 = -pkin(3) * t163 + pkin(10) * t119 + t318 * t98 + t322 * t65;
t31 = -pkin(3) * t156 + pkin(10) * t115 + t318 * t95 + t322 * t62;
t30 = pkin(10) * t112 + t147 * t375 + t318 * t40;
t29 = -t313 * t58 + t316 * t358;
t28 = -qJ(5) * t84 - t312 * t53 + t315 * t68;
t27 = t319 * t48 + t323 * t43;
t26 = -pkin(4) * t84 - pkin(5) * t130 + t36;
t25 = -t313 * t54 + t316 * t359;
t24 = -qJ(5) * t73 - t312 * t52 + t315 * t61;
t23 = -pkin(4) * t73 - pkin(5) * t108 + t35;
t22 = t319 * t44 + t323 * t39;
t18 = -t313 * t42 + t316 * t360;
t15 = -t313 * t38 + t316 * t361;
t14 = pkin(10) * t39 + (-qJ(5) * t318 + t375) * t44;
t13 = -pkin(3) * t84 + pkin(10) * t59 + t26 * t322 + t28 * t318;
t10 = -pkin(3) * t73 + pkin(10) * t55 + t23 * t322 + t24 * t318;
t8 = t12 * t318 - t322 * t99;
t7 = -qJ(5) * t48 - t16 * t312 + t17 * t315;
t6 = -pkin(4) * t11 - pkin(5) * t20;
t5 = -pkin(3) * t48 + pkin(10) * t43 + t318 * t7 + t322 * t33;
t4 = -pkin(11) * t421 - qJ(5) * t11 - t19 * t312;
t3 = t319 * t11 + t323 * t9;
t2 = -t313 * t8 + t316 * t362;
t1 = -pkin(3) * t11 + pkin(10) * t9 + t318 * t4 + t322 * t6;
t34 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t394, 0, 0, 0, 0, 0, 0, (qJDD(2) * t426 - t320 * t427) * t314, (-qJDD(2) * t320 - t426 * t427) * t314, 0, t418 ^ 2 * t394 + (t267 * t426 + t320 * t268 - t332) * t314, 0, 0, 0, 0, 0, 0, t418 * (-t316 * t276 + t313 * t347) + (t233 * t426 + t320 * t264) * t314, t418 * (t316 * t273 + t313 * t348) + (t218 * t426 + t320 * t255) * t314, t418 * (t316 * t296 + t313 * t349) + (t215 * t426 + t320 * t238) * t314, t418 * (-t316 * t237 + t313 * t352) + (t132 * t426 + t320 * t151) * t314, 0, 0, 0, 0, 0, 0, t418 * (t316 * t203 + t313 * t351) + (t138 * t426 + t320 * t167) * t314, t418 * (t316 * t206 + t313 * t350) + (t146 * t426 + t320 * t168) * t314, t418 * (t316 * t176 + t313 * t353) + (t105 * t426 + t320 * t155) * t314, t418 * (t313 * t357 + t316 * t96) + (t320 * t75 + t426 * t47) * t314, 0, 0, 0, 0, 0, 0, t418 * (t316 * t114 + t313 * t355) + (t320 * t100 + t426 * t66) * t314, t418 * (t316 * t118 + t313 * t354) + (t320 * t101 + t426 * t69) * t314, t418 * (t316 * t111 + t313 * t356) + (t320 * t90 + t426 * t56) * t314, t418 * (t313 * t361 + t316 * t38) + (t15 * t426 + t320 * t22) * t314, 0, 0, 0, 0, 0, 0, t418 * (t313 * t359 + t316 * t54) + (t25 * t426 + t320 * t37) * t314, t418 * (t313 * t358 + t316 * t58) + (t29 * t426 + t320 * t41) * t314, t418 * (t313 * t360 + t316 * t42) + (t18 * t426 + t320 * t27) * t314, t418 * (t313 * t362 + t316 * t8) + (t2 * t426 + t320 * t3) * t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t267, -t268, 0, 0, (-t309 * t366 * t389 + t293 * t313) * t319, t316 * t295 + (t319 * t276 + (t293 + t298) * t323) * t313, t316 * t274 + (t396 + t323 * (-t372 + t428)) * t313, (t381 + (-qJD(3) + t366) * t390) * t309 * t323, t316 * t275 + (t319 * (t371 - t428) + t395) * t313, t316 * t307, pkin(2) * t233 - t316 * t198 + (pkin(9) * t264 + t237 * t323) * t313, pkin(2) * t218 - t199 * t316 + (pkin(9) * t255 - t237 * t319) * t313, pkin(2) * t215 + (pkin(9) * t238 + t151) * t313, pkin(2) * t132 + t151 * t424, t316 * t217 + (t319 * (t252 * t322 + t288 * t398) - t376) * t313, t316 * t175 + (t319 * (t220 * t322 - t222 * t318) - t323 * t258) * t313, t316 * t212 + (t319 * (-t272 * t318 + t437) - t323 * t223) * t313, t316 * t216 + (t319 * (-t286 * t397 + t405) + t376) * t313, t316 * t213 + (t319 * (t271 * t322 + t407) + t323 * t219) * t313, t316 * t239 + (-t323 * t334 + t319 * (t286 * t322 - t288 * t318) * t304) * t313, pkin(2) * t138 + t316 * t113 + (t319 * (-pkin(10) * t203 + t411) + t323 * (-pkin(3) * t203 + t144) + pkin(9) * t167) * t313, pkin(2) * t146 + t316 * t116 + (t319 * (-pkin(10) * t206 + t410) + t323 * (-pkin(3) * t206 + t145) + pkin(9) * t168) * t313, pkin(2) * t105 + t316 * t72 + (t319 * (-pkin(10) * t176 - t96) - t176 * t423 + pkin(9) * t155) * t313, pkin(2) * t47 + t316 * t76 + (pkin(9) * t75 + t365 * t96) * t313, t316 * t159 + (t319 * (t186 * t322 + t378) - t323 * t185) * t313, t316 * t117 + (t319 * (t150 * t322 - t235 * t318) - t323 * t148) * t313, t316 * t136 + (t319 * (t171 * t322 - t194 * t318) - t323 * t169) * t313, t316 * t158 + (t319 * (t184 * t322 - t378) + t323 * t183) * t313, t316 * t137 + (t319 * (t172 * t322 - t190 * t318) - t323 * t170) * t313, t316 * t174 + (t319 * (t202 * t322 + t405) - t323 * t201) * t313, pkin(2) * t66 + t316 * t31 + (t319 * (-pkin(10) * t114 - t318 * t62 + t322 * t95) + t323 * (-pkin(3) * t114 - t342) + pkin(9) * t100) * t313, pkin(2) * t69 + t316 * t32 + (t319 * (-pkin(10) * t118 - t318 * t65 + t322 * t98) + t323 * (-pkin(3) * t118 - t341) + pkin(9) * t101) * t313, pkin(2) * t56 + t316 * t30 + (t319 * (-pkin(10) * t111 + t147 * t425 + t322 * t40) + t323 * (-pkin(3) * t111 - t340) + pkin(9) * t90) * t313, pkin(2) * t15 + t316 * t14 + (t319 * (-pkin(10) * t38 + (-qJ(5) * t322 + t425) * t44) + t323 * (-pkin(3) * t38 - t364) + pkin(9) * t22) * t313, t316 * t71 + (t319 * (t322 * t83 + t380) - t323 * t81) * t313, t316 * t46 + (t319 * (t181 * t318 + t322 * t51) - t323 * t49) * t313, t316 * t63 + (t319 * (t128 * t318 + t322 * t93) - t323 * t91) * t313, t316 * t70 + (t319 * (t322 * t82 - t380) - t323 * t80) * t313, t316 * t64 + (t319 * (-t125 * t318 + t322 * t94) - t323 * t92) * t313, t316 * t102 + (t319 * (t104 * t322 + t250 * t318) - t323 * t103) * t313, pkin(2) * t25 + t316 * t10 + (t319 * (-pkin(10) * t54 - t23 * t318 + t24 * t322) + t323 * (-pkin(3) * t54 - t338) + pkin(9) * t37) * t313, pkin(2) * t29 + t316 * t13 + (t319 * (-pkin(10) * t58 - t26 * t318 + t28 * t322) + t323 * (-pkin(3) * t58 - t337) + pkin(9) * t41) * t313, pkin(2) * t18 + t316 * t5 + (t319 * (-pkin(10) * t42 - t318 * t33 + t322 * t7) + t323 * (-pkin(3) * t42 - t336) + pkin(9) * t27) * t313, pkin(2) * t2 + t316 * t1 + (t319 * (-pkin(10) * t8 - t318 * t6 + t322 * t4) + t323 * (-pkin(3) * t8 - t333) + pkin(9) * t3) * t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303, t295, t274, t303, t275, t307, -t198, -t199, 0, 0, t217, t175, t212, t216, t213, t239, t113, t116, t72, t76, t159, t117, t136, t158, t137, t174, t31, t32, t30, t14, t71, t46, t63, t70, t64, t102, t10, t13, t5, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399, t258, t223, -t399, -t219, t334, -t144, -t145, 0, 0, t185, t148, t169, -t183, t170, t201, t342, t341, t340, t364, t81, t49, t91, t80, t92, t103, t338, t337, t336, t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t433, t205, t107, 0, 0, 0, 0, 0, 0, t124, t435, t154, t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, t181, t128, -t182, -t125, t250, -t35, -t36, 0, 0;];
tauJ_reg  = t34;
