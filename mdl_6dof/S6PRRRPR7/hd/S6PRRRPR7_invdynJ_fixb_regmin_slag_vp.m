% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6PRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tau_reg [6x29]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRPR7_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR7_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR7_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR7_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR7_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR7_invdynJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:44:41
% EndTime: 2019-03-08 23:45:08
% DurationCPUTime: 12.87s
% Computational Cost: add. (10628->675), mult. (27150->990), div. (0->0), fcn. (23503->18), ass. (0->301)
t288 = sin(pkin(7));
t293 = sin(qJ(3));
t297 = cos(qJ(3));
t331 = (pkin(3) * t293 - pkin(10) * t297) * t288;
t289 = sin(pkin(6));
t294 = sin(qJ(2));
t421 = t289 * t294;
t390 = qJD(1) * t421;
t477 = qJD(3) * t331 - t288 * t390;
t439 = cos(pkin(7));
t374 = t293 * t439;
t456 = cos(qJ(2));
t312 = -t294 * t374 + t297 * t456;
t201 = t312 * t289;
t373 = t297 * t439;
t424 = t288 * t293;
t333 = pkin(2) * t373 - pkin(9) * t424;
t473 = qJD(1) * t201 - t333 * qJD(3);
t296 = cos(qJ(4));
t371 = t439 * qJD(2);
t339 = t371 + qJD(3);
t292 = sin(qJ(4));
t404 = qJD(2) * t288;
t389 = t293 * t404;
t363 = t292 * t389;
t197 = -t296 * t339 + t363;
t186 = qJD(6) + t197;
t199 = t292 * t339 + t296 * t389;
t287 = sin(pkin(13));
t290 = cos(pkin(13));
t388 = t297 * t404;
t475 = qJD(4) - t388;
t151 = t199 * t287 - t290 * t475;
t295 = cos(qJ(6));
t153 = t199 * t290 + t287 * t475;
t291 = sin(qJ(6));
t435 = t153 * t291;
t469 = -t295 * t151 - t435;
t476 = t186 * t469;
t422 = t288 * t297;
t406 = pkin(2) * t374 + pkin(9) * t422;
t211 = pkin(10) * t439 + t406;
t351 = -pkin(3) * t297 - pkin(10) * t293;
t212 = (-pkin(2) + t351) * t288;
t400 = qJD(4) * t296;
t401 = qJD(4) * t292;
t474 = -t211 * t401 + t212 * t400 + t292 * t477 - t473 * t296;
t311 = t293 * t456 + t294 * t373;
t200 = t311 * t289;
t409 = -qJD(1) * t200 + t406 * qJD(3);
t383 = qJD(1) * t456;
t250 = qJD(2) * pkin(2) + t289 * t383;
t440 = cos(pkin(6));
t377 = t288 * t440;
t465 = qJD(1) * t377 + t439 * t250;
t403 = qJD(3) * t293;
t472 = -(qJ(5) * t403 - qJD(5) * t297) * t288 - t474;
t232 = t292 * t424 - t296 * t439;
t402 = qJD(3) * t297;
t385 = t288 * t402;
t362 = t296 * t385;
t169 = -qJD(4) * t232 + t362;
t423 = t288 * t296;
t233 = t292 * t439 + t293 * t423;
t384 = t292 * t402;
t170 = qJD(4) * t233 + t288 * t384;
t471 = t170 * pkin(4) - t169 * qJ(5) - t233 * qJD(5) + t409;
t235 = pkin(9) * t404 + t390;
t133 = t297 * t235 + t293 * t465;
t470 = -qJD(5) * t292 - t133 + t475 * (pkin(4) * t292 - qJ(5) * t296);
t340 = t151 * t291 - t153 * t295;
t468 = t186 * t340;
t466 = t211 * t400 + t212 * t401 - t473 * t292 - t296 * t477;
t453 = pkin(9) * t288;
t464 = -qJDD(2) * t453 - (qJD(2) * t383 + qJDD(1) * t294) * t289 - t465 * qJD(3);
t369 = t439 * qJDD(2);
t272 = t369 + qJDD(3);
t316 = qJD(4) * t339;
t396 = qJDD(2) * t293;
t110 = -t296 * t272 + t288 * (qJD(2) * (t293 * t400 + t384) + t292 * t396) + t292 * t316;
t448 = t287 * t472 + t471 * t290;
t463 = t471 * t287 - t290 * t472;
t394 = pkin(10) * t401;
t132 = -t293 * t235 + t297 * t465;
t219 = qJD(2) * t331;
t413 = t296 * t132 + t292 * t219;
t84 = qJ(5) * t389 + t413;
t445 = t470 * t290 + (t394 + t84) * t287;
t462 = -t287 * t470 + t290 * t84;
t386 = t288 * t403;
t441 = -pkin(4) * t386 + t466;
t438 = cos(pkin(12));
t345 = t440 * t438;
t437 = sin(pkin(12));
t303 = t294 * t437 - t345 * t456;
t376 = t289 * t438;
t461 = t288 * t376 + t303 * t439;
t344 = t440 * t437;
t304 = t294 * t438 + t344 * t456;
t375 = t289 * t437;
t460 = -t288 * t375 + t304 * t439;
t356 = t439 * t456;
t459 = -t293 * t294 + t297 * t356;
t395 = qJDD(2) * t297;
t270 = t288 * t395;
t397 = qJD(2) * qJD(3);
t382 = t293 * t397;
t213 = t288 * t382 + qJDD(4) - t270;
t458 = -pkin(4) * t213 + qJDD(5);
t228 = t294 * t345 + t437 * t456;
t117 = t228 * t293 + t297 * t461;
t229 = -t294 * t344 + t438 * t456;
t119 = t229 * t293 + t297 * t460;
t163 = -t289 * t459 - t297 * t377;
t318 = g(1) * t119 + g(2) * t117 + g(3) * t163;
t380 = t288 * t396;
t109 = qJD(2) * t362 - qJD(4) * t363 + t292 * t272 + (t316 + t380) * t296;
t81 = t109 * t287 - t290 * t213;
t82 = t109 * t290 + t213 * t287;
t21 = -qJD(6) * t340 + t291 * t82 + t295 * t81;
t298 = qJD(2) ^ 2;
t454 = pkin(5) * t292;
t449 = pkin(11) + qJ(5);
t116 = pkin(10) * t339 + t133;
t346 = t440 * t439;
t269 = qJD(1) * t346;
t150 = t269 + (qJD(2) * t351 - t250) * t288;
t391 = t289 * t456;
t271 = qJDD(1) * t391;
t387 = qJD(2) * t421;
t361 = qJD(1) * t387;
t206 = qJDD(2) * pkin(2) + t271 - t361;
t347 = qJDD(1) * t377;
t309 = -t206 * t374 + t235 * t403 - t293 * t347 + t297 * t464;
t48 = pkin(10) * t272 - t309;
t268 = qJDD(1) * t346;
t321 = t382 - t395;
t381 = t297 * t397;
t322 = t381 + t396;
t92 = t268 + (pkin(3) * t321 - pkin(10) * t322 - t206) * t288;
t326 = -t116 * t401 + t150 * t400 + t292 * t92 + t296 * t48;
t12 = qJ(5) * t213 + qJD(5) * t475 + t326;
t332 = t206 * t373 - t235 * t402 + t293 * t464 + t297 * t347;
t49 = -pkin(3) * t272 - t332;
t18 = pkin(4) * t110 - qJ(5) * t109 - qJD(5) * t199 + t49;
t7 = t290 * t12 + t287 * t18;
t62 = t296 * t116 + t292 * t150;
t54 = qJ(5) * t475 + t62;
t115 = -pkin(3) * t339 - t132;
t63 = t197 * pkin(4) - t199 * qJ(5) + t115;
t24 = t287 * t63 + t290 * t54;
t446 = pkin(10) * qJD(4);
t444 = -t290 * t394 - t462;
t426 = t287 * t296;
t177 = -t290 * t389 + t388 * t426;
t392 = pkin(5) * t287 + pkin(10);
t128 = t292 * t132;
t85 = -pkin(4) * t389 - t219 * t296 + t128;
t443 = -pkin(5) * t177 + t392 * t400 - t85;
t138 = t169 * t287 - t290 * t386;
t442 = pkin(5) * t138 + t441;
t131 = pkin(4) * t199 + qJ(5) * t197;
t61 = -t292 * t116 + t150 * t296;
t37 = t287 * t131 + t290 * t61;
t436 = qJ(5) * t110;
t434 = t197 * t475;
t433 = t197 * t287;
t432 = t199 * t475;
t227 = -t288 * t391 + t346;
t431 = t227 * t288;
t328 = t475 * t292;
t284 = pkin(13) + qJ(6);
t281 = sin(t284);
t430 = t281 * t296;
t282 = cos(t284);
t429 = t282 * t296;
t283 = t288 ^ 2;
t428 = t283 * t298;
t427 = t287 * t291;
t425 = t288 * t292;
t420 = t290 * t292;
t419 = t290 * t296;
t417 = t294 * t298;
t416 = t296 * t297;
t53 = -pkin(4) * t475 + qJD(5) - t61;
t415 = -qJD(5) + t53;
t414 = qJDD(1) - g(3);
t210 = -pkin(3) * t439 - t333;
t121 = t232 * pkin(4) - t233 * qJ(5) + t210;
t410 = t296 * t211 + t292 * t212;
t124 = -qJ(5) * t422 + t410;
t52 = t287 * t121 + t290 * t124;
t178 = (t287 * t293 + t290 * t416) * t404;
t239 = -t295 * t290 + t427;
t240 = t287 * t295 + t290 * t291;
t399 = qJD(6) * t292;
t412 = t177 * t291 - t178 * t295 - t239 * t400 - t240 * t399;
t398 = qJD(6) * t295;
t411 = -t295 * t177 - t178 * t291 + t240 * t400 + t398 * t420 - t399 * t427;
t408 = t186 * t239;
t407 = t186 * t240;
t336 = pkin(4) * t296 + qJ(5) * t292 + pkin(3);
t196 = pkin(10) * t419 - t287 * t336;
t285 = t293 ^ 2;
t405 = -t297 ^ 2 + t285;
t393 = t288 * t421;
t6 = -t12 * t287 + t290 * t18;
t23 = -t287 * t54 + t290 * t63;
t36 = t290 * t131 - t287 * t61;
t51 = t290 * t121 - t124 * t287;
t370 = -t292 * t211 + t212 * t296;
t368 = t116 * t400 + t150 * t401 + t292 * t48 - t296 * t92;
t367 = t283 * t289 * t417;
t364 = t288 * t387;
t139 = t169 * t290 + t287 * t386;
t167 = t233 * t287 + t290 * t422;
t41 = -pkin(11) * t167 + t52;
t360 = -pkin(5) * t170 + pkin(11) * t139 + qJD(6) * t41 - t448;
t168 = t233 * t290 - t287 * t422;
t33 = pkin(5) * t232 - pkin(11) * t168 + t51;
t359 = pkin(11) * t138 - qJD(6) * t33 - t463;
t354 = qJD(3) * t377;
t353 = t288 * t298 * t439;
t4 = pkin(5) * t110 - pkin(11) * t82 + t6;
t5 = -pkin(11) * t81 + t7;
t350 = t291 * t4 + t295 * t5;
t171 = -pkin(11) * t287 * t292 + t196;
t349 = -pkin(11) * t178 + qJD(6) * t171 + t388 * t454 - (-pkin(11) * t419 + t454) * qJD(4) - t445;
t237 = t290 * t336;
t161 = -pkin(11) * t420 - t237 + (-pkin(10) * t287 - pkin(5)) * t296;
t348 = -pkin(11) * t177 - qJD(6) * t161 - (-pkin(10) * t420 - pkin(11) * t426) * qJD(4) + t462;
t125 = pkin(4) * t422 - t370;
t15 = pkin(5) * t197 - pkin(11) * t153 + t23;
t19 = -pkin(11) * t151 + t24;
t8 = t15 * t295 - t19 * t291;
t9 = t15 * t291 + t19 * t295;
t310 = t293 * t356 + t294 * t297;
t164 = t289 * t310 + t293 * t377;
t123 = t164 * t296 + t227 * t292;
t68 = -t123 * t287 + t163 * t290;
t69 = t123 * t290 + t163 * t287;
t342 = -t291 * t69 + t295 * t68;
t341 = t291 * t68 + t295 * t69;
t122 = t164 * t292 - t227 * t296;
t98 = t295 * t167 + t168 * t291;
t99 = -t167 * t291 + t168 * t295;
t338 = 0.2e1 * t371 + qJD(3);
t262 = t449 * t287;
t330 = pkin(11) * t433 - qJD(5) * t290 + qJD(6) * t262 + t37;
t263 = t449 * t290;
t329 = pkin(11) * t197 * t290 + pkin(5) * t199 + qJD(5) * t287 + qJD(6) * t263 + t36;
t20 = -qJD(6) * t435 - t151 * t398 - t291 * t81 + t295 * t82;
t118 = t228 * t297 - t293 * t461;
t120 = t229 * t297 - t293 * t460;
t299 = t288 * t303 - t376 * t439;
t300 = t288 * t304 + t375 * t439;
t325 = g(1) * (t120 * t292 - t296 * t300) + g(2) * (t118 * t292 - t296 * t299) + g(3) * t122;
t71 = t118 * t296 + t292 * t299;
t73 = t120 * t296 + t292 * t300;
t324 = -g(1) * t73 - g(2) * t71 - g(3) * t123;
t156 = t201 * t292 - t296 * t393;
t142 = -t228 * t374 - t297 * t303;
t94 = t142 * t292 - t228 * t423;
t144 = -t229 * t374 - t297 * t304;
t96 = t144 * t292 - t229 * t423;
t323 = g(1) * t96 + g(2) * t94 + g(3) * t156;
t319 = t288 * (t369 + t272);
t317 = g(1) * t120 + g(2) * t118 + g(3) * t164;
t13 = t368 + t458;
t314 = -t13 + t325;
t313 = t318 - t49;
t307 = -pkin(10) * t213 + t115 * t475;
t2 = -qJD(6) * t9 - t291 * t5 + t295 * t4;
t305 = t325 - t368;
t280 = -pkin(5) * t290 - pkin(4);
t243 = t392 * t292;
t218 = t239 * t292;
t217 = t240 * t292;
t195 = -pkin(10) * t426 - t237;
t185 = -t250 * t288 + t269;
t160 = -t206 * t288 + t268;
t157 = t201 * t296 + t292 * t393;
t143 = t229 * t373 - t293 * t304;
t141 = t228 * t373 - t293 * t303;
t105 = t297 * t354 + (t312 * qJD(2) + qJD(3) * t459) * t289;
t104 = t293 * t354 + (qJD(2) * t311 + qJD(3) * t310) * t289;
t101 = qJDD(6) + t110;
t97 = t144 * t296 + t229 * t425;
t95 = t142 * t296 + t228 * t425;
t80 = pkin(5) * t167 + t125;
t45 = -pkin(5) * t433 + t62;
t44 = -qJD(4) * t122 + t105 * t296 + t292 * t364;
t43 = qJD(4) * t123 + t105 * t292 - t296 * t364;
t40 = pkin(5) * t151 + t53;
t35 = qJD(6) * t99 + t295 * t138 + t139 * t291;
t34 = -qJD(6) * t98 - t138 * t291 + t139 * t295;
t29 = t104 * t287 + t290 * t44;
t28 = t104 * t290 - t287 * t44;
t10 = pkin(5) * t81 + t13;
t1 = t8 * qJD(6) + t350;
t3 = [t414, 0 (qJDD(2) * t456 - t417) * t289 (-qJDD(2) * t294 - t298 * t456) * t289, 0, 0, 0, 0, 0, -t104 * t339 - t163 * t272 - t297 * t367 + t321 * t431, -t105 * t339 - t164 * t272 + t293 * t367 + t322 * t431, 0, 0, 0, 0, 0, t104 * t197 + t110 * t163 - t122 * t213 - t43 * t475, t104 * t199 + t109 * t163 - t123 * t213 - t44 * t475, t110 * t68 + t122 * t81 + t151 * t43 + t197 * t28, -t110 * t69 + t122 * t82 + t153 * t43 - t197 * t29, -t151 * t29 - t153 * t28 - t68 * t82 - t69 * t81, t122 * t13 + t23 * t28 + t24 * t29 + t43 * t53 + t6 * t68 + t69 * t7 - g(3), 0, 0, 0, 0, 0 (-qJD(6) * t341 + t28 * t295 - t29 * t291) * t186 + t342 * t101 - t43 * t469 + t122 * t21 -(qJD(6) * t342 + t28 * t291 + t29 * t295) * t186 - t341 * t101 - t43 * t340 + t122 * t20; 0, qJDD(2), g(1) * t304 + g(2) * t303 - g(3) * t391 + t271, g(1) * t229 + g(2) * t228 - t414 * t421 (qJDD(2) * t285 + 0.2e1 * t293 * t381) * t283, 0.2e1 * (t293 * t395 - t397 * t405) * t283, t293 * t319 + t338 * t385, t297 * t319 - t338 * t386, t272 * t439, t333 * t272 + t332 * t439 - g(1) * t144 - g(2) * t142 - g(3) * t201 + (-t160 * t297 + t185 * t403) * t288 + (-pkin(2) * t321 + t297 * t361) * t283 - t409 * t339, -t406 * t272 + t309 * t439 + g(1) * t143 + g(2) * t141 + g(3) * t200 + (t160 * t293 + t185 * t402) * t288 + (-pkin(2) * t322 - t293 * t361) * t283 + t473 * t339, t109 * t233 + t169 * t199, -t109 * t232 - t110 * t233 - t169 * t197 - t170 * t199, t169 * t475 + t213 * t233 + (-t109 * t297 + t199 * t403) * t288, -t170 * t475 - t213 * t232 + (t110 * t297 - t197 * t403) * t288 (-t213 * t297 + t403 * t475) * t288, t370 * t213 + t210 * t110 + t49 * t232 + t115 * t170 - g(1) * t97 - g(2) * t95 - g(3) * t157 + (t297 * t368 + t403 * t61) * t288 - t466 * t475 + t409 * t197, t210 * t109 + t49 * t233 + t115 * t169 - t410 * t213 + (t297 * t326 - t403 * t62) * t288 - t474 * t475 + t409 * t199 + t323, t51 * t110 + t6 * t232 + t23 * t170 + t125 * t81 + t13 * t167 + t53 * t138 - g(1) * (t143 * t287 + t290 * t97) - g(2) * (t141 * t287 + t290 * t95) - g(3) * (t157 * t290 + t200 * t287) + t448 * t197 + t441 * t151, -t52 * t110 - t7 * t232 - t24 * t170 + t125 * t82 + t13 * t168 + t53 * t139 - g(1) * (t143 * t290 - t287 * t97) - g(2) * (t141 * t290 - t287 * t95) - g(3) * (-t157 * t287 + t200 * t290) - t463 * t197 + t441 * t153, -t138 * t24 - t139 * t23 - t151 * t463 - t153 * t448 - t167 * t7 - t168 * t6 - t51 * t82 - t52 * t81 - t323, t7 * t52 + t6 * t51 + t13 * t125 - g(1) * (-pkin(2) * t304 + t144 * pkin(3) + t97 * pkin(4) + t143 * pkin(10) + t96 * qJ(5) + t229 * t453) - g(2) * (-pkin(2) * t303 + t142 * pkin(3) + t95 * pkin(4) + t141 * pkin(10) + t94 * qJ(5) + t228 * t453) - g(3) * (t201 * pkin(3) + t157 * pkin(4) + t200 * pkin(10) + t156 * qJ(5) + (pkin(2) * t456 + t294 * t453) * t289) + t441 * t53 + t463 * t24 + t448 * t23, t20 * t99 - t34 * t340, -t20 * t98 - t21 * t99 + t34 * t469 + t340 * t35, t101 * t99 - t170 * t340 + t186 * t34 + t20 * t232, -t101 * t98 + t170 * t469 - t186 * t35 - t21 * t232, t101 * t232 + t170 * t186 (-t291 * t41 + t295 * t33) * t101 + t2 * t232 + t8 * t170 + t80 * t21 + t10 * t98 + t40 * t35 - g(1) * (t143 * t281 + t282 * t97) - g(2) * (t141 * t281 + t282 * t95) - g(3) * (t157 * t282 + t200 * t281) - t442 * t469 + (t291 * t359 - t295 * t360) * t186 -(t291 * t33 + t295 * t41) * t101 - t1 * t232 - t9 * t170 + t80 * t20 + t10 * t99 + t40 * t34 - g(1) * (t143 * t282 - t281 * t97) - g(2) * (t141 * t282 - t281 * t95) - g(3) * (-t157 * t281 + t200 * t282) - t442 * t340 + (t291 * t360 + t295 * t359) * t186; 0, 0, 0, 0, -t293 * t297 * t428, t405 * t428, -t297 * t353 + t380, t293 * t353 + t270, t272, t133 * t339 - t185 * t389 + t318 + t332, t132 * t339 - t185 * t388 + t309 + t317, t109 * t292 + t296 * t432 (t109 - t434) * t296 + (-t110 - t432) * t292, t475 * t400 + t292 * t213 + (-t199 * t293 - t416 * t475) * t404, -t475 * t401 + t213 * t296 + (t197 * t293 + t297 * t328) * t404, -t475 * t389, -t61 * t389 - pkin(3) * t110 + t128 * t475 - t133 * t197 + t307 * t292 + (-(t219 + t446) * t475 + t313) * t296, -pkin(3) * t109 - t133 * t199 + t413 * t475 + t62 * t389 + t307 * t296 + (t446 * t475 - t313) * t292, t195 * t110 - t85 * t151 - t53 * t177 + t445 * t197 - t317 * t287 + (-t6 + (pkin(10) * t151 + t287 * t53) * qJD(4) + t318 * t290) * t296 + (pkin(10) * t81 + t13 * t287 + t23 * t475) * t292, -t196 * t110 - t85 * t153 - t53 * t178 - t444 * t197 - t317 * t290 + (t7 + (pkin(10) * t153 + t290 * t53) * qJD(4) - t318 * t287) * t296 + (pkin(10) * t82 + t13 * t290 - t24 * t475) * t292, t177 * t24 + t178 * t23 - t195 * t82 - t196 * t81 - t445 * t153 - t444 * t151 + (-t23 * t290 - t24 * t287) * t400 + (-t287 * t7 - t290 * t6 + t318) * t292, t6 * t195 + t7 * t196 - t53 * t85 + t444 * t24 + t445 * t23 + (t13 * t292 + t400 * t53 - t317) * pkin(10) + t318 * t336, -t20 * t218 - t340 * t412, -t20 * t217 + t21 * t218 + t340 * t411 + t412 * t469, -t101 * t218 + t186 * t412 - t20 * t296 - t328 * t340, -t101 * t217 - t186 * t411 + t21 * t296 + t328 * t469, -t101 * t296 + t186 * t328 (t161 * t295 - t171 * t291) * t101 - t2 * t296 + t243 * t21 + t10 * t217 - g(1) * (-t119 * t429 + t120 * t281) - g(2) * (-t117 * t429 + t118 * t281) - g(3) * (-t163 * t429 + t164 * t281) - t443 * t469 + t411 * t40 + t8 * t328 + (t291 * t348 - t295 * t349) * t186 -(t161 * t291 + t171 * t295) * t101 + t1 * t296 + t243 * t20 - t10 * t218 - g(1) * (t119 * t430 + t120 * t282) - g(2) * (t117 * t430 + t118 * t282) - g(3) * (t163 * t430 + t164 * t282) - t443 * t340 + t412 * t40 - t9 * t328 + (t291 * t349 + t295 * t348) * t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199 * t197, -t197 ^ 2 + t199 ^ 2, t109 + t434, -t110 + t432, t213, -t115 * t199 + t475 * t62 + t305, t115 * t197 + t475 * t61 - t324 - t326, -t287 * t436 - pkin(4) * t81 - t151 * t62 - t199 * t23 + (t287 * t415 - t36) * t197 + t314 * t290, -t290 * t436 - pkin(4) * t82 - t153 * t62 + t199 * t24 + (t290 * t415 + t37) * t197 - t314 * t287, t151 * t37 + t153 * t36 + (-qJ(5) * t81 - qJD(5) * t151 - t197 * t23 + t7) * t290 + (qJ(5) * t82 + qJD(5) * t153 - t197 * t24 - t6) * t287 + t324, -t23 * t36 - t24 * t37 - t53 * t62 + (-t23 * t287 + t24 * t290) * qJD(5) + t314 * pkin(4) + (-t287 * t6 + t290 * t7 + t324) * qJ(5), t20 * t240 + t340 * t408, -t20 * t239 - t21 * t240 + t340 * t407 - t408 * t469, t101 * t240 - t186 * t408 + t199 * t340, -t101 * t239 - t186 * t407 - t199 * t469, -t186 * t199 (-t262 * t295 - t263 * t291) * t101 + t280 * t21 + t10 * t239 - t8 * t199 + t45 * t469 + t407 * t40 + (t291 * t330 - t295 * t329) * t186 + t325 * t282 -(-t262 * t291 + t263 * t295) * t101 + t280 * t20 + t10 * t240 + t9 * t199 + t45 * t340 - t408 * t40 + (t291 * t329 + t295 * t330) * t186 - t325 * t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 * t197 + t81, -t151 * t197 + t82, -t151 ^ 2 - t153 ^ 2, t151 * t24 + t153 * t23 - t305 + t458, 0, 0, 0, 0, 0, t21 - t468, t20 + t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340 * t469, t340 ^ 2 - t469 ^ 2, t20 - t476, -t21 - t468, t101, t9 * t186 + t40 * t340 - g(1) * (t119 * t282 - t281 * t73) - g(2) * (t117 * t282 - t281 * t71) - g(3) * (-t123 * t281 + t163 * t282) + t2, -t40 * t469 - g(1) * (-t119 * t281 - t282 * t73) - g(2) * (-t117 * t281 - t282 * t71) - g(3) * (-t123 * t282 - t163 * t281) - t350 + (t186 - qJD(6)) * t8;];
tau_reg  = t3;
