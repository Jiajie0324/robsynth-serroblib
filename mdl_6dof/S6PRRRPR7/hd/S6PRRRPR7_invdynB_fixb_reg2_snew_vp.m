% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 08:52
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRRPR7_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR7_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR7_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR7_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR7_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR7_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 08:48:43
% EndTime: 2019-05-05 08:50:15
% DurationCPUTime: 78.32s
% Computational Cost: add. (810874->1156), mult. (1712130->1951), div. (0->0), fcn. (1402382->16), ass. (0->849)
t1130 = sin(pkin(13));
t1136 = cos(pkin(7));
t1123 = qJD(2) * t1136 + qJD(3);
t1139 = sin(qJ(4));
t1143 = cos(qJ(4));
t1132 = sin(pkin(7));
t1140 = sin(qJ(3));
t1321 = qJD(2) * t1140;
t1284 = t1132 * t1321;
t1089 = t1123 * t1139 + t1143 * t1284;
t1144 = cos(qJ(3));
t1320 = qJD(2) * t1144;
t1283 = t1132 * t1320;
t1118 = -qJD(4) + t1283;
t1134 = cos(pkin(13));
t1057 = t1089 * t1130 + t1134 * t1118;
t1059 = t1089 * t1134 - t1118 * t1130;
t1012 = t1059 * t1057;
t1290 = qJDD(2) * t1140;
t1096 = (qJD(3) * t1320 + t1290) * t1132;
t1122 = qJDD(2) * t1136 + qJDD(3);
t1273 = t1096 * t1139 - t1143 * t1122;
t1032 = qJD(4) * t1089 + t1273;
t1346 = -t1012 + t1032;
t1358 = t1130 * t1346;
t1357 = t1134 * t1346;
t1138 = sin(qJ(6));
t1155 = qJDD(6) + t1032;
t1142 = cos(qJ(6));
t996 = t1142 * t1057 + t1059 * t1138;
t998 = -t1057 * t1138 + t1059 * t1142;
t926 = t998 * t996;
t1352 = t1155 - t926;
t1356 = t1138 * t1352;
t1355 = t1142 * t1352;
t1087 = -t1143 * t1123 + t1139 * t1284;
t1028 = t1087 * t1057;
t1033 = -t1087 * qJD(4) + t1143 * t1096 + t1139 * t1122;
t1119 = qJD(3) * t1284;
t1289 = qJDD(2) * t1144;
t1267 = t1132 * t1289 - t1119;
t1092 = -qJDD(4) + t1267;
t1293 = -t1134 * t1033 + t1130 * t1092;
t942 = -t1028 + t1293;
t1141 = sin(qJ(2));
t1145 = cos(qJ(2));
t1137 = cos(pkin(6));
t1133 = sin(pkin(6));
t1335 = g(3) - qJDD(1);
t1275 = t1133 * t1335;
t1135 = cos(pkin(12));
t1125 = t1135 * g(2);
t1131 = sin(pkin(12));
t1276 = g(1) * t1131 - t1125;
t1151 = t1137 * t1276 - t1275;
t1271 = g(1) * t1135 + g(2) * t1131;
t1055 = -t1141 * t1271 - t1145 * t1151;
t1146 = qJD(2) ^ 2;
t1336 = pkin(9) * t1132;
t1150 = qJDD(2) * pkin(2) + t1146 * t1336 - t1055;
t1108 = t1133 * t1276;
t1266 = t1137 * t1335 + t1108;
t1354 = -t1132 * t1266 + t1136 * t1150;
t1009 = -t1033 * t1130 - t1134 * t1092;
t871 = -qJD(6) * t996 + t1009 * t1138 - t1142 * t1293;
t1081 = qJD(6) + t1087;
t964 = t1081 * t996;
t1353 = t871 - t964;
t1056 = t1141 * t1151 - t1145 * t1271;
t1000 = t1055 * t1141 + t1056 * t1145;
t1351 = t1000 * t1133;
t1350 = t1131 * t1335;
t1349 = t1135 * t1335;
t1310 = t1087 * t1089;
t1152 = -t1092 - t1310;
t1348 = t1139 * t1152;
t1184 = t1141 * t1266;
t1347 = t1143 * t1152;
t1183 = t1145 * t1266;
t1073 = t1087 * t1118;
t990 = t1073 + t1033;
t1106 = t1123 * t1284;
t1345 = t1106 - t1267;
t1107 = t1123 * t1283;
t1069 = t1107 + t1096;
t943 = t1293 + t1028;
t1274 = -t1142 * t1009 - t1138 * t1293;
t820 = (qJD(6) - t1081) * t998 + t1274;
t987 = (qJD(4) + t1118) * t1089 + t1273;
t1076 = -t1131 * t1276 - t1135 * t1271;
t1041 = -t1146 * pkin(2) + qJDD(2) * t1336 + t1056;
t948 = t1144 * t1041 + t1140 * t1354;
t994 = t996 ^ 2;
t995 = t998 ^ 2;
t1344 = t1057 ^ 2;
t1054 = t1059 ^ 2;
t1079 = t1081 ^ 2;
t1343 = t1087 ^ 2;
t1086 = t1089 ^ 2;
t1342 = t1118 ^ 2;
t1341 = t1123 ^ 2;
t1340 = pkin(3) * t1140;
t1339 = pkin(3) * t1144;
t1338 = pkin(4) * t1139;
t1337 = pkin(8) * t1137;
t1043 = pkin(4) * t1087 - qJ(5) * t1089;
t1013 = t1132 * t1150 + t1136 * t1266;
t1148 = pkin(3) * t1345 - pkin(10) * t1069 - t1013;
t1272 = -pkin(10) * t1140 - t1339;
t1322 = qJD(2) * t1132;
t1095 = t1272 * t1322;
t920 = -t1341 * pkin(3) + t1122 * pkin(10) + t1095 * t1283 + t948;
t850 = t1139 * t1148 + t1143 * t920;
t796 = -pkin(4) * t1342 - qJ(5) * t1092 - t1043 * t1087 + t850;
t1294 = t1354 * t1144;
t919 = -t1122 * pkin(3) - t1341 * pkin(10) + (t1095 * t1322 + t1041) * t1140 - t1294;
t835 = -t990 * qJ(5) + (-t1089 * t1118 + t1032) * pkin(4) + t919;
t731 = 0.2e1 * qJD(5) * t1059 + t1130 * t796 - t1134 * t835;
t688 = t1346 * pkin(5) + pkin(11) * t942 - t731;
t1022 = pkin(5) * t1087 - pkin(11) * t1059;
t732 = -0.2e1 * qJD(5) * t1057 + t1130 * t835 + t1134 * t796;
t703 = -pkin(5) * t1344 + pkin(11) * t1009 - t1022 * t1087 + t732;
t619 = t1138 * t688 + t1142 * t703;
t618 = t1138 * t703 - t1142 * t688;
t569 = t1138 * t619 - t1142 * t618;
t1334 = t1130 * t569;
t849 = t1139 * t920 - t1143 * t1148;
t793 = t1092 * pkin(4) - t1342 * qJ(5) + t1043 * t1089 + qJDD(5) + t849;
t1333 = t1130 * t793;
t945 = t1012 + t1032;
t1332 = t1130 * t945;
t1331 = t1134 * t569;
t1330 = t1134 * t793;
t1329 = t1134 * t945;
t758 = -t1009 * pkin(5) - pkin(11) * t1344 + t1022 * t1059 + t793;
t1328 = t1138 * t758;
t890 = t1155 + t926;
t1327 = t1138 * t890;
t1326 = t1139 * t919;
t1325 = t1142 * t758;
t1324 = t1142 * t890;
t1323 = t1143 * t919;
t1319 = t1013 * t1140;
t1318 = t1013 * t1144;
t1023 = t1092 - t1310;
t1317 = t1023 * t1139;
t1316 = t1023 * t1143;
t1315 = t1032 * t1139;
t1314 = t1059 * t1087;
t1285 = t1123 * t1322;
t1128 = t1140 ^ 2;
t1129 = t1144 ^ 2;
t1292 = t1128 + t1129;
t1074 = t1292 * t1285;
t1313 = t1074 * t1141;
t1312 = t1081 * t1138;
t1311 = t1081 * t1142;
t1309 = t1087 * t1130;
t1308 = t1087 * t1134;
t1297 = t1144 * t1146;
t1127 = t1132 ^ 2;
t1301 = t1127 * t1140;
t1117 = t1297 * t1301;
t1093 = t1117 + t1122;
t1307 = t1093 * t1140;
t1306 = t1093 * t1144;
t1094 = -t1117 + t1122;
t1305 = t1094 * t1140;
t1304 = t1094 * t1144;
t1303 = t1118 * t1139;
t1302 = t1118 * t1143;
t1300 = t1127 * t1146;
t1299 = t1132 * t1145;
t1291 = qJDD(2) * t1133;
t1288 = t1139 * t926;
t1287 = t1143 * t926;
t1286 = -pkin(4) * t1143 - pkin(3);
t1282 = t1139 * t1012;
t1281 = t1143 * t1012;
t1280 = t1140 * t1310;
t1279 = t1144 * t1310;
t1278 = t1128 * t1300;
t1277 = t1129 * t1300;
t570 = t1138 * t618 + t1142 * t619;
t756 = t1139 * t849 + t1143 * t850;
t1080 = -t1278 - t1341;
t1040 = -t1080 * t1140 - t1304;
t1270 = pkin(9) * t1040 - t1319;
t1099 = -t1277 - t1341;
t1052 = t1099 * t1144 - t1307;
t1269 = pkin(9) * t1052 + t1318;
t1268 = g(2) * t1131 ^ 2 + t1125 * t1135;
t644 = t1130 * t732 - t1134 * t731;
t645 = t1130 * t731 + t1134 * t732;
t755 = t1139 * t850 - t1143 * t849;
t517 = t1134 * t570 - t1334;
t511 = t1139 * t758 + t1143 * t517;
t516 = t1130 * t570 + t1331;
t1265 = t1140 * t511 - t1144 * t516;
t623 = t1139 * t793 + t1143 * t645;
t1264 = t1140 * t623 - t1144 * t644;
t824 = -t871 - t964;
t741 = -t1138 * t820 + t1142 * t824;
t743 = -t1138 * t824 - t1142 * t820;
t664 = -t1130 * t741 + t1134 * t743;
t872 = -t994 - t995;
t636 = t1139 * t872 + t1143 * t664;
t662 = t1130 * t743 + t1134 * t741;
t1263 = t1140 * t636 - t1144 * t662;
t819 = (qJD(6) + t1081) * t998 + t1274;
t742 = -t1138 * t819 + t1142 * t1353;
t744 = -t1138 * t1353 - t1142 * t819;
t665 = -t1130 * t742 + t1134 * t744;
t925 = -t995 + t994;
t649 = -t1139 * t925 + t1143 * t665;
t663 = -t1130 * t744 - t1134 * t742;
t1262 = t1140 * t649 + t1144 * t663;
t911 = -t1079 - t994;
t794 = t1138 * t911 + t1355;
t795 = t1142 * t911 - t1356;
t726 = -t1130 * t794 + t1134 * t795;
t676 = t1139 * t819 + t1143 * t726;
t725 = t1130 * t795 + t1134 * t794;
t1261 = t1140 * t676 - t1144 * t725;
t949 = -t995 - t1079;
t825 = t1142 * t949 - t1327;
t826 = -t1138 * t949 - t1324;
t740 = -t1130 * t825 + t1134 * t826;
t687 = t1139 * t1353 + t1143 * t740;
t739 = t1130 * t826 + t1134 * t825;
t1260 = t1140 * t687 - t1144 * t739;
t963 = -t995 + t1079;
t844 = t1142 * t963 + t1356;
t846 = -t1138 * t963 + t1355;
t750 = -t1130 * t844 + t1134 * t846;
t696 = -t1139 * t824 + t1143 * t750;
t748 = -t1130 * t846 - t1134 * t844;
t1259 = t1140 * t696 + t1144 * t748;
t962 = t994 - t1079;
t845 = t1138 * t962 + t1324;
t847 = t1142 * t962 - t1327;
t751 = -t1130 * t845 + t1134 * t847;
t697 = -t1139 * t820 + t1143 * t751;
t749 = -t1130 * t847 - t1134 * t845;
t1258 = t1140 * t697 + t1144 * t749;
t870 = -qJD(6) * t998 - t1274;
t815 = t1142 * t870 + t1312 * t996;
t816 = -t1138 * t870 + t1311 * t996;
t737 = -t1130 * t815 + t1134 * t816;
t716 = t1143 * t737 - t1288;
t735 = -t1130 * t816 - t1134 * t815;
t1257 = t1140 * t716 + t1144 * t735;
t817 = t1138 * t871 + t1311 * t998;
t818 = t1142 * t871 - t1312 * t998;
t738 = -t1130 * t817 + t1134 * t818;
t717 = t1143 * t738 + t1288;
t736 = -t1130 * t818 - t1134 * t817;
t1256 = t1140 * t717 + t1144 * t736;
t1255 = t1140 * t756 - t1144 * t919;
t898 = (-t1138 * t996 - t1142 * t998) * t1081;
t899 = (t1138 * t998 - t1142 * t996) * t1081;
t788 = -t1130 * t898 + t1134 * t899;
t777 = t1139 * t1155 + t1143 * t788;
t787 = -t1130 * t899 - t1134 * t898;
t1254 = t1140 * t777 + t1144 * t787;
t938 = -t1009 - t1314;
t861 = -t1130 * t942 - t1134 * t938;
t957 = t1054 + t1344;
t800 = -t1139 * t957 + t1143 * t861;
t859 = -t1130 * t938 + t1134 * t942;
t1253 = t1140 * t800 - t1144 * t859;
t972 = -t1343 - t1344;
t882 = t1134 * t972 - t1358;
t940 = t1009 - t1314;
t807 = -t1139 * t940 + t1143 * t882;
t881 = t1130 * t972 + t1357;
t1252 = t1140 * t807 - t1144 * t881;
t1011 = -t1054 + t1344;
t862 = t1130 * t943 + t1134 * t940;
t812 = -t1011 * t1139 + t1143 * t862;
t860 = -t1130 * t940 + t1134 * t943;
t1251 = t1140 * t812 + t1144 * t860;
t1002 = -t1054 - t1343;
t893 = -t1002 * t1130 - t1329;
t814 = -t1139 * t943 + t1143 * t893;
t892 = t1002 * t1134 - t1332;
t1250 = t1140 * t814 - t1144 * t892;
t1027 = -t1054 + t1343;
t907 = -t1027 * t1130 + t1357;
t838 = -t1139 * t942 + t1143 * t907;
t905 = -t1027 * t1134 - t1358;
t1249 = t1140 * t838 + t1144 * t905;
t1026 = -t1343 + t1344;
t908 = t1026 * t1134 - t1332;
t839 = -t1139 * t938 + t1143 * t908;
t906 = -t1026 * t1130 - t1329;
t1248 = t1140 * t839 + t1144 * t906;
t930 = -t1009 * t1130 + t1057 * t1308;
t886 = t1143 * t930 - t1282;
t929 = -t1009 * t1134 - t1057 * t1309;
t1247 = t1140 * t886 + t1144 * t929;
t932 = -t1059 * t1309 - t1134 * t1293;
t887 = t1143 * t932 + t1282;
t931 = -t1059 * t1308 + t1130 * t1293;
t1246 = t1140 * t887 + t1144 * t931;
t954 = (-t1057 * t1134 + t1059 * t1130) * t1087;
t913 = t1143 * t954 + t1315;
t953 = (t1057 * t1130 + t1059 * t1134) * t1087;
t1245 = t1140 * t913 + t1144 * t953;
t947 = t1041 * t1140 - t1294;
t1244 = t1140 * t948 - t1144 * t947;
t868 = t1140 * t947 + t1144 * t948;
t1038 = -t1343 - t1342;
t956 = t1038 * t1143 - t1348;
t988 = (-qJD(4) + t1118) * t1089 - t1273;
t1243 = t1140 * t956 + t1144 * t988;
t1046 = -t1086 - t1342;
t961 = -t1046 * t1139 + t1316;
t1242 = t1140 * t961 - t1144 * t990;
t1067 = -t1086 + t1342;
t970 = -t1067 * t1139 + t1347;
t992 = t1073 - t1033;
t1241 = t1140 * t970 + t1144 * t992;
t1066 = t1343 - t1342;
t971 = t1066 * t1143 + t1317;
t1240 = t1140 * t971 + t1144 * t987;
t510 = t1139 * t517 - t1143 * t758;
t472 = -t1132 * t510 + t1136 * t1265;
t489 = t1140 * t516 + t1144 * t511;
t1239 = t1141 * t489 + t1145 * t472;
t622 = t1139 * t645 - t1143 * t793;
t541 = -t1132 * t622 + t1136 * t1264;
t577 = t1140 * t644 + t1144 * t623;
t1238 = t1141 * t577 + t1145 * t541;
t635 = t1139 * t664 - t1143 * t872;
t551 = -t1132 * t635 + t1136 * t1263;
t585 = t1140 * t662 + t1144 * t636;
t1237 = t1141 * t585 + t1145 * t551;
t648 = t1139 * t665 + t1143 * t925;
t558 = -t1132 * t648 + t1136 * t1262;
t587 = -t1140 * t663 + t1144 * t649;
t1236 = t1141 * t587 + t1145 * t558;
t675 = t1139 * t726 - t1143 * t819;
t583 = -t1132 * t675 + t1136 * t1261;
t621 = t1140 * t725 + t1144 * t676;
t1235 = t1141 * t621 + t1145 * t583;
t686 = t1139 * t740 - t1143 * t1353;
t591 = -t1132 * t686 + t1136 * t1260;
t630 = t1140 * t739 + t1144 * t687;
t1234 = t1141 * t630 + t1145 * t591;
t694 = t1139 * t750 + t1143 * t824;
t595 = -t1132 * t694 + t1136 * t1259;
t632 = -t1140 * t748 + t1144 * t696;
t1233 = t1141 * t632 + t1145 * t595;
t695 = t1139 * t751 + t1143 * t820;
t596 = -t1132 * t695 + t1136 * t1258;
t633 = -t1140 * t749 + t1144 * t697;
t1232 = t1141 * t633 + t1145 * t596;
t714 = t1139 * t737 + t1287;
t605 = -t1132 * t714 + t1136 * t1257;
t640 = -t1140 * t735 + t1144 * t716;
t1231 = t1141 * t640 + t1145 * t605;
t715 = t1139 * t738 - t1287;
t606 = -t1132 * t715 + t1136 * t1256;
t641 = -t1140 * t736 + t1144 * t717;
t1230 = t1141 * t641 + t1145 * t606;
t656 = -t1132 * t755 + t1136 * t1255;
t729 = t1140 * t919 + t1144 * t756;
t1229 = t1141 * t729 + t1145 * t656;
t776 = t1139 * t788 - t1143 * t1155;
t659 = -t1132 * t776 + t1136 * t1254;
t711 = -t1140 * t787 + t1144 * t777;
t1228 = t1141 * t711 + t1145 * t659;
t799 = t1139 * t861 + t1143 * t957;
t682 = -t1132 * t799 + t1136 * t1253;
t746 = t1140 * t859 + t1144 * t800;
t1227 = t1141 * t746 + t1145 * t682;
t811 = t1011 * t1143 + t1139 * t862;
t693 = -t1132 * t811 + t1136 * t1251;
t752 = -t1140 * t860 + t1144 * t812;
t1226 = t1141 * t752 + t1145 * t693;
t806 = t1139 * t882 + t1143 * t940;
t702 = -t1132 * t806 + t1136 * t1252;
t761 = t1140 * t881 + t1144 * t807;
t1225 = t1141 * t761 + t1145 * t702;
t813 = t1139 * t893 + t1143 * t943;
t710 = -t1132 * t813 + t1136 * t1250;
t769 = t1140 * t892 + t1144 * t814;
t1224 = t1141 * t769 + t1145 * t710;
t836 = t1139 * t907 + t1143 * t942;
t720 = -t1132 * t836 + t1136 * t1249;
t771 = -t1140 * t905 + t1144 * t838;
t1223 = t1141 * t771 + t1145 * t720;
t837 = t1139 * t908 + t1143 * t938;
t721 = -t1132 * t837 + t1136 * t1248;
t772 = -t1140 * t906 + t1144 * t839;
t1222 = t1141 * t772 + t1145 * t721;
t884 = t1139 * t930 + t1281;
t767 = -t1132 * t884 + t1136 * t1247;
t808 = -t1140 * t929 + t1144 * t886;
t1221 = t1141 * t808 + t1145 * t767;
t885 = t1139 * t932 - t1281;
t768 = -t1132 * t885 + t1136 * t1246;
t809 = -t1140 * t931 + t1144 * t887;
t1220 = t1141 * t809 + t1145 * t768;
t1030 = t1143 * t1032;
t912 = t1139 * t954 - t1030;
t775 = -t1132 * t912 + t1136 * t1245;
t853 = -t1140 * t953 + t1144 * t913;
t1219 = t1141 * t853 + t1145 * t775;
t1021 = t1343 + t1086;
t917 = -t1139 * t992 - t1143 * t987;
t1206 = t1021 * t1144 + t1140 * t917;
t915 = -t1139 * t987 + t1143 * t992;
t790 = -t1132 * t915 + t1136 * t1206;
t874 = -t1021 * t1140 + t1144 * t917;
t1218 = t1141 * t874 + t1145 * t790;
t1044 = -t1086 + t1343;
t916 = -t1139 * t990 + t1143 * t988;
t1204 = t1044 * t1144 + t1140 * t916;
t914 = t1139 * t988 + t1143 * t990;
t798 = -t1132 * t914 + t1136 * t1204;
t888 = -t1044 * t1140 + t1144 * t916;
t1217 = t1141 * t888 + t1145 * t798;
t832 = t1013 * t1132 + t1136 * t1244;
t1216 = t1141 * t868 + t1145 * t832;
t955 = t1038 * t1139 + t1347;
t841 = -t1132 * t955 + t1136 * t1243;
t900 = -t1140 * t988 + t1144 * t956;
t1215 = t1141 * t900 + t1145 * t841;
t960 = t1046 * t1143 + t1317;
t852 = -t1132 * t960 + t1136 * t1242;
t904 = t1140 * t990 + t1144 * t961;
t1214 = t1141 * t904 + t1145 * t852;
t968 = t1067 * t1143 + t1348;
t856 = -t1132 * t968 + t1136 * t1241;
t909 = -t1140 * t992 + t1144 * t970;
t1213 = t1141 * t909 + t1145 * t856;
t969 = t1066 * t1139 - t1316;
t857 = -t1132 * t969 + t1136 * t1240;
t910 = -t1140 * t987 + t1144 * t971;
t1212 = t1141 * t910 + t1145 * t857;
t981 = -t1087 * t1302 + t1315;
t1187 = t1140 * t981 + t1279;
t980 = -t1087 * t1303 - t1030;
t877 = -t1132 * t980 + t1136 * t1187;
t936 = t1144 * t981 - t1280;
t1211 = t1141 * t936 + t1145 * t877;
t983 = t1033 * t1143 + t1089 * t1303;
t1186 = t1140 * t983 - t1279;
t982 = t1033 * t1139 - t1089 * t1302;
t878 = -t1132 * t982 + t1136 * t1186;
t937 = t1144 * t983 + t1280;
t1210 = t1141 * t937 + t1145 * t878;
t1016 = (t1087 * t1139 + t1089 * t1143) * t1118;
t1017 = (t1087 * t1143 - t1089 * t1139) * t1118;
t1199 = t1017 * t1140 + t1092 * t1144;
t924 = -t1016 * t1132 + t1136 * t1199;
t979 = t1017 * t1144 - t1092 * t1140;
t1209 = t1141 * t979 + t1145 * t924;
t1070 = -t1107 + t1096;
t1071 = t1106 + t1267;
t1014 = t1070 * t1140 + t1071 * t1144;
t1105 = t1292 * t1300;
t1195 = -t1070 * t1144 + t1071 * t1140;
t977 = t1105 * t1132 + t1136 * t1195;
t1208 = t1014 * t1141 + t1145 * t977;
t1015 = -t1069 * t1140 - t1144 * t1345;
t1104 = (t1128 - t1129) * t1300;
t1196 = t1069 * t1144 - t1140 * t1345;
t978 = -t1104 * t1132 + t1136 * t1196;
t1207 = t1015 * t1141 + t1145 * t978;
t1068 = (t1290 + (qJD(3) + t1123) * t1320) * t1132;
t1194 = t1080 * t1144 - t1305;
t986 = -t1068 * t1132 + t1136 * t1194;
t1205 = t1040 * t1141 + t1145 * t986;
t1203 = qJD(2) * t1123 - t1136 * t1146;
t1097 = -t1278 + t1341;
t1193 = t1097 * t1144 + t1307;
t1006 = -t1070 * t1132 + t1136 * t1193;
t1050 = -t1097 * t1140 + t1306;
t1202 = t1006 * t1145 + t1050 * t1141;
t1098 = t1277 - t1341;
t1191 = t1098 * t1140 + t1304;
t1007 = -t1071 * t1132 + t1136 * t1191;
t1051 = t1098 * t1144 - t1305;
t1201 = t1007 * t1145 + t1051 * t1141;
t1192 = t1099 * t1140 + t1306;
t1008 = -t1132 * t1345 + t1136 * t1192;
t1200 = t1008 * t1145 + t1052 * t1141;
t1126 = t1132 * t1127;
t1034 = (-t1126 * t1140 * t1146 + (-t1119 + (-t1123 * t1321 + t1289) * t1132) * t1136) * t1144;
t1060 = -t1129 * t1285 - t1140 * t1267;
t1198 = t1034 * t1145 + t1060 * t1141;
t1037 = (t1069 * t1136 + t1126 * t1297) * t1140;
t1061 = t1096 * t1144 - t1128 * t1285;
t1197 = t1037 * t1145 + t1061 * t1141;
t999 = t1145 * t1055 - t1141 * t1056;
t1189 = qJDD(2) * t1141 + t1145 * t1146;
t1102 = t1189 * t1137;
t1115 = qJDD(2) * t1145 - t1141 * t1146;
t1190 = t1102 * t1135 + t1115 * t1131;
t1064 = t1102 * t1131 - t1115 * t1135;
t552 = -pkin(5) * t758 + pkin(11) * t570;
t490 = -pkin(11) * t1331 - qJ(5) * t516 - t1130 * t552;
t502 = -pkin(4) * t516 - pkin(5) * t569;
t465 = -pkin(10) * t510 - t1139 * t502 + t1143 * t490;
t468 = -pkin(3) * t510 + pkin(4) * t758 + pkin(11) * t1334 - qJ(5) * t517 - t1134 * t552;
t1166 = pkin(9) * t489 + t1140 * t465 + t1144 * t468;
t463 = -pkin(3) * t516 + pkin(10) * t511 + t1139 * t490 + t1143 * t502;
t471 = t1132 * t1265 + t1136 * t510;
t448 = -pkin(2) * t471 - t1132 * t463 + t1136 * t1166;
t449 = -t1140 * t468 + t1144 * t465 + (-t1132 * t471 - t1136 * t472) * pkin(9);
t464 = -t1141 * t472 + t1145 * t489;
t1182 = pkin(8) * t464 + t1141 * t449 + t1145 * t448;
t545 = -pkin(5) * t872 + pkin(11) * t743 + t570;
t548 = -pkin(11) * t741 - t569;
t506 = -qJ(5) * t662 - t1130 * t545 + t1134 * t548;
t616 = -pkin(4) * t662 - pkin(5) * t741;
t494 = -pkin(10) * t635 - t1139 * t616 + t1143 * t506;
t499 = -pkin(3) * t635 + pkin(4) * t872 - qJ(5) * t664 - t1130 * t548 - t1134 * t545;
t1165 = pkin(9) * t585 + t1140 * t494 + t1144 * t499;
t492 = -pkin(3) * t662 + pkin(10) * t636 + t1139 * t506 + t1143 * t616;
t550 = t1132 * t1263 + t1136 * t635;
t462 = -pkin(2) * t550 - t1132 * t492 + t1136 * t1165;
t466 = -t1140 * t499 + t1144 * t494 + (-t1132 * t550 - t1136 * t551) * pkin(9);
t519 = -t1141 * t551 + t1145 * t585;
t1181 = pkin(8) * t519 + t1141 * t466 + t1145 * t462;
t579 = -pkin(4) * t725 - pkin(5) * t794 + t618;
t667 = -pkin(5) * t819 + pkin(11) * t795 - t1325;
t690 = -pkin(11) * t794 + t1328;
t580 = -qJ(5) * t725 - t1130 * t667 + t1134 * t690;
t520 = -pkin(10) * t675 - t1139 * t579 + t1143 * t580;
t549 = -pkin(3) * t675 + pkin(4) * t819 - qJ(5) * t726 - t1130 * t690 - t1134 * t667;
t1164 = pkin(9) * t621 + t1140 * t520 + t1144 * t549;
t513 = -pkin(3) * t725 + pkin(10) * t676 + t1139 * t580 + t1143 * t579;
t582 = t1132 * t1261 + t1136 * t675;
t470 = -pkin(2) * t582 - t1132 * t513 + t1136 * t1164;
t485 = -t1140 * t549 + t1144 * t520 + (-t1132 * t582 - t1136 * t583) * pkin(9);
t542 = -t1141 * t583 + t1145 * t621;
t1180 = pkin(8) * t542 + t1141 * t485 + t1145 * t470;
t544 = -pkin(10) * t622 + (-qJ(5) * t1143 + t1338) * t644;
t573 = -pkin(3) * t622 + pkin(4) * t793 - qJ(5) * t645;
t1162 = pkin(9) * t577 + t1140 * t544 + t1144 * t573;
t532 = pkin(10) * t623 + (-qJ(5) * t1139 + t1286) * t644;
t540 = t1132 * t1264 + t1136 * t622;
t474 = -pkin(2) * t540 - t1132 * t532 + t1136 * t1162;
t484 = -t1140 * t573 + t1144 * t544 + (-t1132 * t540 - t1136 * t541) * pkin(9);
t509 = -t1141 * t541 + t1145 * t577;
t1179 = pkin(8) * t509 + t1141 * t484 + t1145 * t474;
t584 = -pkin(4) * t739 - pkin(5) * t825 + t619;
t672 = -pkin(5) * t1353 + pkin(11) * t826 + t1328;
t706 = -pkin(11) * t825 + t1325;
t586 = -qJ(5) * t739 - t1130 * t672 + t1134 * t706;
t524 = -pkin(10) * t686 - t1139 * t584 + t1143 * t586;
t559 = -pkin(3) * t686 + pkin(4) * t1353 - qJ(5) * t740 - t1130 * t706 - t1134 * t672;
t1163 = pkin(9) * t630 + t1140 * t524 + t1144 * t559;
t518 = -pkin(3) * t739 + pkin(10) * t687 + t1139 * t586 + t1143 * t584;
t590 = t1132 * t1260 + t1136 * t686;
t476 = -pkin(2) * t590 - t1132 * t518 + t1136 * t1163;
t488 = -t1140 * t559 + t1144 * t524 + (-t1132 * t590 - t1136 * t591) * pkin(9);
t555 = -t1141 * t591 + t1145 * t630;
t1178 = pkin(8) * t555 + t1141 * t488 + t1145 * t476;
t625 = -qJ(5) * t859 - t644;
t600 = -pkin(10) * t799 + t1143 * t625 + t1338 * t859;
t609 = -pkin(3) * t799 - pkin(4) * t957 - qJ(5) * t861 - t645;
t1161 = pkin(9) * t746 + t1140 * t600 + t1144 * t609;
t592 = pkin(10) * t800 + t1139 * t625 + t1286 * t859;
t681 = t1132 * t1253 + t1136 * t799;
t508 = -pkin(2) * t681 - t1132 * t592 + t1136 * t1161;
t525 = -t1140 * t609 + t1144 * t600 + (-t1132 * t681 - t1136 * t682) * pkin(9);
t627 = -t1141 * t682 + t1145 * t746;
t1177 = pkin(8) * t627 + t1141 * t525 + t1145 * t508;
t691 = -pkin(4) * t881 + t731;
t753 = -qJ(5) * t881 + t1333;
t620 = -pkin(10) * t806 - t1139 * t691 + t1143 * t753;
t677 = -pkin(3) * t806 - pkin(4) * t940 - qJ(5) * t882 + t1330;
t1160 = pkin(9) * t761 + t1140 * t620 + t1144 * t677;
t613 = -pkin(3) * t881 + pkin(10) * t807 + t1139 * t753 + t1143 * t691;
t701 = t1132 * t1252 + t1136 * t806;
t529 = -pkin(2) * t701 - t1132 * t613 + t1136 * t1160;
t543 = -t1140 * t677 + t1144 * t620 + (-t1132 * t701 - t1136 * t702) * pkin(9);
t639 = -t1141 * t702 + t1145 * t761;
t1176 = pkin(8) * t639 + t1141 * t543 + t1145 * t529;
t699 = -pkin(4) * t892 + t732;
t757 = -qJ(5) * t892 + t1330;
t624 = -pkin(10) * t813 - t1139 * t699 + t1143 * t757;
t678 = -pkin(3) * t813 - pkin(4) * t943 - qJ(5) * t893 - t1333;
t1159 = pkin(9) * t769 + t1140 * t624 + t1144 * t678;
t615 = -pkin(3) * t892 + pkin(10) * t814 + t1139 * t757 + t1143 * t699;
t709 = t1132 * t1250 + t1136 * t813;
t531 = -pkin(2) * t709 - t1132 * t615 + t1136 * t1159;
t546 = -t1140 * t678 + t1144 * t624 + (-t1132 * t709 - t1136 * t710) * pkin(9);
t652 = -t1141 * t710 + t1145 * t769;
t1175 = pkin(8) * t652 + t1141 * t546 + t1145 * t531;
t1153 = pkin(9) * t729 + t1272 * t755;
t655 = t1132 * t1255 + t1136 * t755;
t730 = -pkin(3) * t919 + pkin(10) * t756;
t563 = -pkin(2) * t655 - t1132 * t730 + t1136 * t1153;
t566 = (-pkin(10) * t1144 + t1340) * t755 + (-t1132 * t655 - t1136 * t656) * pkin(9);
t614 = -t1141 * t656 + t1145 * t729;
t1174 = pkin(8) * t614 + t1141 * t566 + t1145 * t563;
t728 = -pkin(10) * t915 - t755;
t1154 = pkin(9) * t874 + t1140 * t728 - t1339 * t915;
t722 = pkin(3) * t1021 + pkin(10) * t917 + t756;
t789 = t1132 * t1206 + t1136 * t915;
t602 = -pkin(2) * t789 - t1132 * t722 + t1136 * t1154;
t626 = t915 * t1340 + t1144 * t728 + (-t1132 * t789 - t1136 * t790) * pkin(9);
t747 = -t1141 * t790 + t1145 * t874;
t1173 = pkin(8) * t747 + t1141 * t626 + t1145 * t602;
t784 = -pkin(3) * t955 + t849;
t858 = -pkin(10) * t955 + t1326;
t1158 = pkin(9) * t900 + t1140 * t858 + t1144 * t784;
t805 = pkin(3) * t988 + pkin(10) * t956 - t1323;
t840 = t1132 * t1243 + t1136 * t955;
t638 = -pkin(2) * t840 - t1132 * t805 + t1136 * t1158;
t666 = -t1140 * t784 + t1144 * t858 + (-t1132 * t840 - t1136 * t841) * pkin(9);
t770 = -t1141 * t841 + t1145 * t900;
t1172 = pkin(8) * t770 + t1141 * t666 + t1145 * t638;
t791 = -pkin(3) * t960 + t850;
t863 = -pkin(10) * t960 + t1323;
t1157 = pkin(9) * t904 + t1140 * t863 + t1144 * t791;
t810 = -pkin(3) * t990 + pkin(10) * t961 + t1326;
t851 = t1132 * t1242 + t1136 * t960;
t647 = -pkin(2) * t851 - t1132 * t810 + t1136 * t1157;
t671 = -t1140 * t791 + t1144 * t863 + (-t1132 * t851 - t1136 * t852) * pkin(9);
t773 = -t1141 * t852 + t1145 * t904;
t1171 = pkin(8) * t773 + t1141 * t671 + t1145 * t647;
t831 = -t1013 * t1136 + t1132 * t1244;
t745 = (-t1132 * t831 - t1136 * t832) * pkin(9);
t762 = -t1141 * t832 + t1145 * t868;
t763 = pkin(9) * t1136 * t868 - pkin(2) * t831;
t1170 = pkin(8) * t762 + t1141 * t745 + t1145 * t763;
t975 = -t1105 * t1136 + t1132 * t1195;
t780 = (-t1132 * t975 - t1136 * t977) * pkin(9) - t1244;
t1156 = pkin(9) * t1014 + t868;
t786 = -pkin(2) * t975 + t1136 * t1156;
t921 = t1014 * t1145 - t1141 * t977;
t1169 = pkin(8) * t921 + t1141 * t780 + t1145 * t786;
t985 = t1068 * t1136 + t1132 * t1194;
t828 = -pkin(2) * t985 + t1132 * t948 + t1136 * t1270;
t869 = -t1318 + (-t1132 * t985 - t1136 * t986) * pkin(9);
t935 = t1040 * t1145 - t1141 * t986;
t1168 = pkin(8) * t935 + t1141 * t869 + t1145 * t828;
t1005 = t1132 * t1192 + t1136 * t1345;
t843 = -pkin(2) * t1005 + t1132 * t947 + t1136 * t1269;
t873 = -t1319 + (-t1005 * t1132 - t1008 * t1136) * pkin(9);
t952 = -t1008 * t1141 + t1052 * t1145;
t1167 = pkin(8) * t952 + t1141 * t873 + t1145 * t843;
t1103 = t1115 * t1137;
t1101 = t1115 * t1133;
t1100 = t1189 * t1133;
t1065 = -t1103 * t1131 - t1135 * t1189;
t1063 = t1103 * t1135 - t1131 * t1189;
t1042 = t1122 * t1132 * t1141 + t1074 * t1145;
t1036 = (t1127 * t1144 * t1203 + t1096 * t1132) * t1140;
t1035 = (t1132 * t1267 - t1203 * t1301) * t1144;
t1020 = -t1183 + (t1100 * t1133 + t1102 * t1137) * pkin(8);
t1019 = -t1184 + (-t1101 * t1133 - t1103 * t1137) * pkin(8);
t1018 = t1137 * t1313 + (-t1133 * t1136 - t1137 * t1299) * t1122;
t1004 = t1071 * t1136 + t1132 * t1191;
t1003 = t1070 * t1136 + t1132 * t1193;
t984 = t1000 * t1137;
t976 = t1104 * t1136 + t1132 * t1196;
t974 = -t1037 * t1141 + t1061 * t1145;
t973 = -t1034 * t1141 + t1060 * t1145;
t967 = -pkin(1) * t1101 + t1133 * t1055 + t1137 * t1183 - t1189 * t1337;
t966 = pkin(1) * t1100 + t1133 * t1056 - t1115 * t1337 - t1137 * t1184;
t959 = t1133 * t1108 + (t1275 - t999) * t1137;
t958 = -t1133 * t999 - t1137 * t1266;
t951 = -t1007 * t1141 + t1051 * t1145;
t950 = -t1006 * t1141 + t1050 * t1145;
t928 = -t1036 * t1133 + t1137 * t1197;
t927 = -t1035 * t1133 + t1137 * t1198;
t923 = t1016 * t1136 + t1132 * t1199;
t922 = t1015 * t1145 - t1141 * t978;
t903 = -pkin(1) * t958 + t1000 * t1337;
t902 = t1000 * t1135 - t1131 * t959;
t901 = t1000 * t1131 + t1135 * t959;
t897 = -t1005 * t1133 + t1137 * t1200;
t896 = -t1004 * t1133 + t1137 * t1201;
t895 = -t1003 * t1133 + t1137 * t1202;
t894 = t1005 * t1137 + t1133 * t1200;
t883 = (-t1133 * t958 - t1137 * t959) * pkin(8);
t880 = -t1133 * t985 + t1137 * t1205;
t879 = t1133 * t1205 + t1137 * t985;
t876 = t1132 * t1186 + t1136 * t982;
t875 = t1132 * t1187 + t1136 * t980;
t867 = -t1141 * t924 + t1145 * t979;
t866 = -t1133 * t976 + t1137 * t1207;
t865 = -t1133 * t975 + t1137 * t1208;
t864 = t1133 * t1208 + t1137 * t975;
t855 = t1132 * t1240 + t1136 * t969;
t854 = t1132 * t1241 + t1136 * t968;
t842 = pkin(2) * t1008 + t1132 * t1269 - t1136 * t947;
t830 = -t1131 * t897 + t1135 * t952;
t829 = t1131 * t952 + t1135 * t897;
t827 = pkin(2) * t986 + t1132 * t1270 - t1136 * t948;
t804 = -t1131 * t880 + t1135 * t935;
t803 = t1131 * t935 + t1135 * t880;
t802 = -t1141 * t878 + t1145 * t937;
t801 = -t1141 * t877 + t1145 * t936;
t797 = t1132 * t1204 + t1136 * t914;
t785 = pkin(2) * t977 + t1132 * t1156;
t783 = -t1133 * t923 + t1137 * t1209;
t782 = -t1131 * t865 + t1135 * t921;
t781 = t1131 * t921 + t1135 * t865;
t779 = -t1141 * t857 + t1145 * t910;
t778 = -t1141 * t856 + t1145 * t909;
t774 = t1132 * t1245 + t1136 * t912;
t766 = t1132 * t1246 + t1136 * t885;
t765 = t1132 * t1247 + t1136 * t884;
t764 = pkin(2) * t832 + t1336 * t868;
t760 = -t1133 * t876 + t1137 * t1210;
t759 = -t1133 * t875 + t1137 * t1211;
t754 = -t1141 * t798 + t1145 * t888;
t734 = -t1133 * t855 + t1137 * t1212;
t733 = -t1133 * t854 + t1137 * t1213;
t727 = -t1141 * t775 + t1145 * t853;
t724 = -t1133 * t851 + t1137 * t1214;
t723 = t1133 * t1214 + t1137 * t851;
t719 = t1132 * t1248 + t1136 * t837;
t718 = t1132 * t1249 + t1136 * t836;
t713 = -t1133 * t840 + t1137 * t1215;
t712 = t1133 * t1215 + t1137 * t840;
t708 = -t1133 * t831 + t1137 * t1216;
t707 = t1133 * t1216 + t1137 * t831;
t705 = -t1141 * t768 + t1145 * t809;
t704 = -t1141 * t767 + t1145 * t808;
t698 = -t1141 * t843 + t1145 * t873 + (-t1133 * t894 - t1137 * t897) * pkin(8);
t692 = t1132 * t1251 + t1136 * t811;
t689 = -t1133 * t797 + t1137 * t1217;
t683 = -t1141 * t828 + t1145 * t869 + (-t1133 * t879 - t1137 * t880) * pkin(8);
t680 = -t1133 * t789 + t1137 * t1218;
t679 = t1133 * t1218 + t1137 * t789;
t674 = -pkin(1) * t894 - t1133 * t842 + t1137 * t1167;
t673 = -t1133 * t774 + t1137 * t1219;
t670 = -pkin(1) * t879 - t1133 * t827 + t1137 * t1168;
t669 = -t1131 * t724 + t1135 * t773;
t668 = t1131 * t773 + t1135 * t724;
t661 = -t1141 * t721 + t1145 * t772;
t660 = -t1141 * t720 + t1145 * t771;
t658 = t1132 * t1254 + t1136 * t776;
t657 = -t1141 * t786 + t1145 * t780 + (-t1133 * t864 - t1137 * t865) * pkin(8);
t654 = -t1131 * t713 + t1135 * t770;
t653 = t1131 * t770 + t1135 * t713;
t651 = -t1131 * t708 + t1135 * t762;
t650 = t1131 * t762 + t1135 * t708;
t646 = pkin(2) * t852 + t1132 * t1157 + t1136 * t810;
t643 = -t1133 * t766 + t1137 * t1220;
t642 = -t1133 * t765 + t1137 * t1221;
t637 = pkin(2) * t841 + t1132 * t1158 + t1136 * t805;
t634 = -t1141 * t693 + t1145 * t752;
t631 = -pkin(1) * t864 - t1133 * t785 + t1137 * t1169;
t629 = -t1131 * t680 + t1135 * t747;
t628 = t1131 * t747 + t1135 * t680;
t612 = -t1133 * t719 + t1137 * t1222;
t611 = -t1133 * t718 + t1137 * t1223;
t610 = -t1141 * t659 + t1145 * t711;
t608 = -t1133 * t709 + t1137 * t1224;
t607 = t1133 * t1224 + t1137 * t709;
t604 = t1132 * t1256 + t1136 * t715;
t603 = t1132 * t1257 + t1136 * t714;
t601 = pkin(2) * t790 + t1132 * t1154 + t1136 * t722;
t599 = -t1133 * t701 + t1137 * t1225;
t598 = t1133 * t1225 + t1137 * t701;
t597 = -t1133 * t692 + t1137 * t1226;
t594 = t1132 * t1258 + t1136 * t695;
t593 = t1132 * t1259 + t1136 * t694;
t589 = -t1133 * t681 + t1137 * t1227;
t588 = t1133 * t1227 + t1137 * t681;
t581 = -t1141 * t763 + t1145 * t745 + (-t1133 * t707 - t1137 * t708) * pkin(8);
t578 = -pkin(1) * t707 - t1133 * t764 + t1137 * t1170;
t576 = -t1133 * t655 + t1137 * t1229;
t575 = t1133 * t1229 + t1137 * t655;
t574 = -t1133 * t658 + t1137 * t1228;
t572 = -t1131 * t608 + t1135 * t652;
t571 = t1131 * t652 + t1135 * t608;
t568 = -t1141 * t606 + t1145 * t641;
t567 = -t1141 * t605 + t1145 * t640;
t565 = -t1131 * t599 + t1135 * t639;
t564 = t1131 * t639 + t1135 * t599;
t562 = pkin(2) * t656 + t1132 * t1153 + t1136 * t730;
t561 = -t1141 * t596 + t1145 * t633;
t560 = -t1141 * t595 + t1145 * t632;
t557 = t1132 * t1262 + t1136 * t648;
t556 = -t1141 * t647 + t1145 * t671 + (-t1133 * t723 - t1137 * t724) * pkin(8);
t554 = -t1131 * t589 + t1135 * t627;
t553 = t1131 * t627 + t1135 * t589;
t547 = -t1141 * t638 + t1145 * t666 + (-t1133 * t712 - t1137 * t713) * pkin(8);
t539 = -pkin(1) * t723 - t1133 * t646 + t1137 * t1171;
t538 = -t1131 * t576 + t1135 * t614;
t537 = t1131 * t614 + t1135 * t576;
t536 = -pkin(1) * t712 - t1133 * t637 + t1137 * t1172;
t535 = -t1141 * t602 + t1145 * t626 + (-t1133 * t679 - t1137 * t680) * pkin(8);
t534 = -t1133 * t604 + t1137 * t1230;
t533 = -t1133 * t603 + t1137 * t1231;
t530 = pkin(2) * t710 + t1132 * t1159 + t1136 * t615;
t528 = pkin(2) * t702 + t1132 * t1160 + t1136 * t613;
t527 = -t1133 * t594 + t1137 * t1232;
t526 = -t1133 * t593 + t1137 * t1233;
t523 = -t1133 * t590 + t1137 * t1234;
t522 = t1133 * t1234 + t1137 * t590;
t521 = -t1141 * t558 + t1145 * t587;
t515 = -t1133 * t582 + t1137 * t1235;
t514 = t1133 * t1235 + t1137 * t582;
t512 = -pkin(1) * t679 - t1133 * t601 + t1137 * t1173;
t507 = pkin(2) * t682 + t1132 * t1161 + t1136 * t592;
t505 = -t1131 * t523 + t1135 * t555;
t504 = t1131 * t555 + t1135 * t523;
t503 = -t1133 * t557 + t1137 * t1236;
t501 = -t1133 * t550 + t1137 * t1237;
t500 = t1133 * t1237 + t1137 * t550;
t498 = -t1131 * t515 + t1135 * t542;
t497 = t1131 * t542 + t1135 * t515;
t496 = -t1133 * t540 + t1137 * t1238;
t495 = t1133 * t1238 + t1137 * t540;
t493 = -t1141 * t563 + t1145 * t566 + (-t1133 * t575 - t1137 * t576) * pkin(8);
t491 = -t1141 * t531 + t1145 * t546 + (-t1133 * t607 - t1137 * t608) * pkin(8);
t487 = -t1141 * t529 + t1145 * t543 + (-t1133 * t598 - t1137 * t599) * pkin(8);
t486 = -pkin(1) * t575 - t1133 * t562 + t1137 * t1174;
t483 = -t1131 * t501 + t1135 * t519;
t482 = t1131 * t519 + t1135 * t501;
t481 = -t1141 * t508 + t1145 * t525 + (-t1133 * t588 - t1137 * t589) * pkin(8);
t480 = -pkin(1) * t607 - t1133 * t530 + t1137 * t1175;
t479 = -pkin(1) * t598 - t1133 * t528 + t1137 * t1176;
t478 = -t1131 * t496 + t1135 * t509;
t477 = t1131 * t509 + t1135 * t496;
t475 = pkin(2) * t591 + t1132 * t1163 + t1136 * t518;
t473 = pkin(2) * t541 + t1132 * t1162 + t1136 * t532;
t469 = pkin(2) * t583 + t1132 * t1164 + t1136 * t513;
t467 = -pkin(1) * t588 - t1133 * t507 + t1137 * t1177;
t461 = pkin(2) * t551 + t1132 * t1165 + t1136 * t492;
t460 = -t1141 * t476 + t1145 * t488 + (-t1133 * t522 - t1137 * t523) * pkin(8);
t459 = -t1141 * t470 + t1145 * t485 + (-t1133 * t514 - t1137 * t515) * pkin(8);
t458 = -t1133 * t471 + t1137 * t1239;
t457 = t1133 * t1239 + t1137 * t471;
t456 = -t1141 * t474 + t1145 * t484 + (-t1133 * t495 - t1137 * t496) * pkin(8);
t455 = -pkin(1) * t522 - t1133 * t475 + t1137 * t1178;
t454 = -pkin(1) * t514 - t1133 * t469 + t1137 * t1180;
t453 = -pkin(1) * t495 - t1133 * t473 + t1137 * t1179;
t452 = -t1131 * t458 + t1135 * t464;
t451 = t1131 * t464 + t1135 * t458;
t450 = -t1141 * t462 + t1145 * t466 + (-t1133 * t500 - t1137 * t501) * pkin(8);
t447 = pkin(2) * t472 + t1132 * t1166 + t1136 * t463;
t446 = -pkin(1) * t500 - t1133 * t461 + t1137 * t1181;
t445 = -t1141 * t448 + t1145 * t449 + (-t1133 * t457 - t1137 * t458) * pkin(8);
t444 = -pkin(1) * t457 - t1133 * t447 + t1137 * t1182;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1076, 0, 0, 0, 0, 0, 0, t1065, t1064, 0, t902, 0, 0, 0, 0, 0, 0, t830, t804, t782, t651, 0, 0, 0, 0, 0, 0, t654, t669, t629, t538, 0, 0, 0, 0, 0, 0, t565, t572, t554, t478, 0, 0, 0, 0, 0, 0, t498, t505, t483, t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1268, 0, 0, 0, 0, 0, 0, t1063, -t1190, 0, t901, 0, 0, 0, 0, 0, 0, t829, t803, t781, t650, 0, 0, 0, 0, 0, 0, t653, t668, t628, t537, 0, 0, 0, 0, 0, 0, t564, t571, t553, t477, 0, 0, 0, 0, 0, 0, t497, t504, t482, t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1335, 0, 0, 0, 0, 0, 0, t1101, -t1100, 0, t958, 0, 0, 0, 0, 0, 0, t894, t879, t864, t707, 0, 0, 0, 0, 0, 0, t712, t723, t679, t575, 0, 0, 0, 0, 0, 0, t598, t607, t588, t495, 0, 0, 0, 0, 0, 0, t514, t522, t500, t457; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1350, -t1349, t1268, qJ(1) * t1268, 0, 0, -t1064, 0, t1065, t1131 * t1291, -qJ(1) * t1063 + t1019 * t1135 - t1131 * t967, qJ(1) * t1190 + t1020 * t1135 - t1131 * t966, -t1131 * t984 + t1135 * t999, -qJ(1) * t901 - t1131 * t903 + t1135 * t883, -t1131 * t928 + t1135 * t974, -t1131 * t866 + t1135 * t922, -t1131 * t895 + t1135 * t950, -t1131 * t927 + t1135 * t973, -t1131 * t896 + t1135 * t951, -t1018 * t1131 + t1042 * t1135, -qJ(1) * t829 - t1131 * t674 + t1135 * t698, -qJ(1) * t803 - t1131 * t670 + t1135 * t683, -qJ(1) * t781 - t1131 * t631 + t1135 * t657, -qJ(1) * t650 - t1131 * t578 + t1135 * t581, -t1131 * t760 + t1135 * t802, -t1131 * t689 + t1135 * t754, -t1131 * t733 + t1135 * t778, -t1131 * t759 + t1135 * t801, -t1131 * t734 + t1135 * t779, -t1131 * t783 + t1135 * t867, -qJ(1) * t653 - t1131 * t536 + t1135 * t547, -qJ(1) * t668 - t1131 * t539 + t1135 * t556, -qJ(1) * t628 - t1131 * t512 + t1135 * t535, -qJ(1) * t537 - t1131 * t486 + t1135 * t493, -t1131 * t643 + t1135 * t705, -t1131 * t597 + t1135 * t634, -t1131 * t611 + t1135 * t660, -t1131 * t642 + t1135 * t704, -t1131 * t612 + t1135 * t661, -t1131 * t673 + t1135 * t727, -qJ(1) * t564 - t1131 * t479 + t1135 * t487, -qJ(1) * t571 - t1131 * t480 + t1135 * t491, -qJ(1) * t553 - t1131 * t467 + t1135 * t481, -qJ(1) * t477 - t1131 * t453 + t1135 * t456, -t1131 * t534 + t1135 * t568, -t1131 * t503 + t1135 * t521, -t1131 * t526 + t1135 * t560, -t1131 * t533 + t1135 * t567, -t1131 * t527 + t1135 * t561, -t1131 * t574 + t1135 * t610, -qJ(1) * t497 - t1131 * t454 + t1135 * t459, -qJ(1) * t504 - t1131 * t455 + t1135 * t460, -qJ(1) * t482 - t1131 * t446 + t1135 * t450, -qJ(1) * t451 - t1131 * t444 + t1135 * t445; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1349, -t1350, t1076, qJ(1) * t1076, 0, 0, t1190, 0, t1063, -t1135 * t1291, qJ(1) * t1065 + t1019 * t1131 + t1135 * t967, qJ(1) * t1064 + t1020 * t1131 + t1135 * t966, t1131 * t999 + t1135 * t984, qJ(1) * t902 + t1131 * t883 + t1135 * t903, t1131 * t974 + t1135 * t928, t1131 * t922 + t1135 * t866, t1131 * t950 + t1135 * t895, t1131 * t973 + t1135 * t927, t1131 * t951 + t1135 * t896, t1018 * t1135 + t1042 * t1131, qJ(1) * t830 + t1131 * t698 + t1135 * t674, qJ(1) * t804 + t1131 * t683 + t1135 * t670, qJ(1) * t782 + t1131 * t657 + t1135 * t631, qJ(1) * t651 + t1131 * t581 + t1135 * t578, t1131 * t802 + t1135 * t760, t1131 * t754 + t1135 * t689, t1131 * t778 + t1135 * t733, t1131 * t801 + t1135 * t759, t1131 * t779 + t1135 * t734, t1131 * t867 + t1135 * t783, qJ(1) * t654 + t1131 * t547 + t1135 * t536, qJ(1) * t669 + t1131 * t556 + t1135 * t539, qJ(1) * t629 + t1131 * t535 + t1135 * t512, qJ(1) * t538 + t1131 * t493 + t1135 * t486, t1131 * t705 + t1135 * t643, t1131 * t634 + t1135 * t597, t1131 * t660 + t1135 * t611, t1131 * t704 + t1135 * t642, t1131 * t661 + t1135 * t612, t1131 * t727 + t1135 * t673, qJ(1) * t565 + t1131 * t487 + t1135 * t479, qJ(1) * t572 + t1131 * t491 + t1135 * t480, qJ(1) * t554 + t1131 * t481 + t1135 * t467, qJ(1) * t478 + t1131 * t456 + t1135 * t453, t1131 * t568 + t1135 * t534, t1131 * t521 + t1135 * t503, t1131 * t560 + t1135 * t526, t1131 * t567 + t1135 * t533, t1131 * t561 + t1135 * t527, t1131 * t610 + t1135 * t574, qJ(1) * t498 + t1131 * t459 + t1135 * t454, qJ(1) * t505 + t1131 * t460 + t1135 * t455, qJ(1) * t483 + t1131 * t450 + t1135 * t446, qJ(1) * t452 + t1131 * t445 + t1135 * t444; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1276, t1271, 0, 0, 0, 0, t1100, 0, t1101, t1137 * qJDD(2), pkin(1) * t1103 - t1137 * t1055 + (-pkin(8) * t1189 + t1183) * t1133, -pkin(1) * t1102 - t1137 * t1056 + (-pkin(8) * t1115 - t1184) * t1133, t1351, pkin(1) * t959 + pkin(8) * t1351, t1036 * t1137 + t1133 * t1197, t1133 * t1207 + t1137 * t976, t1003 * t1137 + t1133 * t1202, t1035 * t1137 + t1133 * t1198, t1004 * t1137 + t1133 * t1201, t1133 * t1313 + (-t1133 * t1299 + t1136 * t1137) * t1122, pkin(1) * t897 + t1133 * t1167 + t1137 * t842, pkin(1) * t880 + t1133 * t1168 + t1137 * t827, pkin(1) * t865 + t1133 * t1169 + t1137 * t785, pkin(1) * t708 + t1133 * t1170 + t1137 * t764, t1133 * t1210 + t1137 * t876, t1133 * t1217 + t1137 * t797, t1133 * t1213 + t1137 * t854, t1133 * t1211 + t1137 * t875, t1133 * t1212 + t1137 * t855, t1133 * t1209 + t1137 * t923, pkin(1) * t713 + t1133 * t1172 + t1137 * t637, pkin(1) * t724 + t1133 * t1171 + t1137 * t646, pkin(1) * t680 + t1133 * t1173 + t1137 * t601, pkin(1) * t576 + t1133 * t1174 + t1137 * t562, t1133 * t1220 + t1137 * t766, t1133 * t1226 + t1137 * t692, t1133 * t1223 + t1137 * t718, t1133 * t1221 + t1137 * t765, t1133 * t1222 + t1137 * t719, t1133 * t1219 + t1137 * t774, pkin(1) * t599 + t1133 * t1176 + t1137 * t528, pkin(1) * t608 + t1133 * t1175 + t1137 * t530, pkin(1) * t589 + t1133 * t1177 + t1137 * t507, pkin(1) * t496 + t1133 * t1179 + t1137 * t473, t1133 * t1230 + t1137 * t604, t1133 * t1236 + t1137 * t557, t1133 * t1233 + t1137 * t593, t1133 * t1231 + t1137 * t603, t1133 * t1232 + t1137 * t594, t1133 * t1228 + t1137 * t658, pkin(1) * t515 + t1133 * t1180 + t1137 * t469, pkin(1) * t523 + t1133 * t1178 + t1137 * t475, pkin(1) * t501 + t1133 * t1181 + t1137 * t461, pkin(1) * t458 + t1133 * t1182 + t1137 * t447;];
tauB_reg  = t1;
