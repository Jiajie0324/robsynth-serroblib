% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6PRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% MDP [29x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRRPR7_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6PRRRPR7_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(29,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [29 1]), ...
  'S6PRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [29x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:44:59
% EndTime: 2019-03-08 23:45:18
% DurationCPUTime: 13.81s
% Computational Cost: add. (8113->590), mult. (22232->848), div. (0->0), fcn. (18322->14), ass. (0->239)
t593 = sin(pkin(7));
t600 = sin(qJ(3));
t706 = t593 * t600;
t583 = pkin(9) * t706;
t596 = cos(pkin(7));
t604 = cos(qJ(3));
t605 = cos(qJ(2));
t696 = t604 * t605;
t601 = sin(qJ(2));
t700 = t600 * t601;
t619 = -t596 * t700 + t696;
t594 = sin(pkin(6));
t679 = qJD(1) * t594;
t701 = t596 * t604;
t686 = t619 * t679 - (pkin(2) * t701 - t583) * qJD(3);
t635 = pkin(3) * t600 - pkin(10) * t604;
t618 = t635 * qJD(3);
t659 = t601 * t679;
t735 = (t618 - t659) * t593;
t599 = sin(qJ(4));
t603 = cos(qJ(4));
t675 = qJD(2) * t596;
t647 = qJD(3) + t675;
t677 = qJD(2) * t593;
t658 = t600 * t677;
t725 = -t599 * t658 + t603 * t647;
t527 = qJD(6) - t725;
t535 = t599 * t647 + t603 * t658;
t674 = qJD(2) * t604;
t657 = t593 * t674;
t580 = -qJD(4) + t657;
t592 = sin(pkin(13));
t595 = cos(pkin(13));
t497 = t535 * t592 + t595 * t580;
t602 = cos(qJ(6));
t499 = t535 * t595 - t580 * t592;
t598 = sin(qJ(6));
t714 = t499 * t598;
t729 = -t602 * t497 - t714;
t734 = t527 * t729;
t705 = t593 * t604;
t664 = pkin(9) * t705;
t543 = t664 + (pkin(2) * t600 + pkin(10)) * t596;
t636 = -pkin(3) * t604 - pkin(10) * t600;
t544 = (-pkin(2) + t636) * t593;
t669 = qJD(4) * t603;
t670 = qJD(4) * t599;
t733 = -t543 * t670 + t544 * t669 + t735 * t599 - t603 * t686;
t698 = t601 * t604;
t699 = t600 * t605;
t621 = t596 * t698 + t699;
t702 = t596 * t600;
t684 = -t621 * t679 + (pkin(2) * t702 + t664) * qJD(3);
t672 = qJD(3) * t600;
t732 = (qJ(5) * t672 - qJD(5) * t604) * t593 + t733;
t558 = -t603 * t596 + t599 * t706;
t673 = qJD(3) * t593;
t654 = t604 * t673;
t515 = -qJD(4) * t558 + t603 * t654;
t559 = t596 * t599 + t603 * t706;
t516 = qJD(4) * t559 + t599 * t654;
t731 = pkin(4) * t516 - qJ(5) * t515 - qJD(5) * t559 + t684;
t597 = cos(pkin(6));
t678 = qJD(1) * t597;
t660 = t593 * t678;
t561 = pkin(9) * t677 + t659;
t719 = qJD(2) * pkin(2);
t571 = t605 * t679 + t719;
t723 = t604 * t561 + t571 * t702;
t483 = t600 * t660 + t723;
t730 = qJD(5) * t599 + t483 + t580 * (pkin(4) * t599 - qJ(5) * t603);
t626 = t497 * t598 - t499 * t602;
t728 = t527 * t626;
t726 = t543 * t669 + t544 * t670 - t686 * t599 - t603 * t735;
t695 = -t592 * t732 + t731 * t595;
t694 = t731 * t592 + t595 * t732;
t552 = t600 * t561;
t710 = t571 * t596;
t482 = t604 * (t660 + t710) - t552;
t547 = t635 * t677;
t689 = t603 * t482 + t599 * t547;
t439 = qJ(5) * t658 + t689;
t663 = pkin(10) * t670;
t693 = t730 * t595 + (-t439 - t663) * t592;
t724 = t595 * t439 + t592 * t730;
t655 = t593 * t672;
t690 = -pkin(4) * t655 + t726;
t589 = t593 ^ 2;
t722 = (-t600 * t604 * MDP(5) + (t600 ^ 2 - t604 ^ 2) * MDP(6)) * t589;
t606 = qJD(2) ^ 2;
t721 = pkin(5) * t599;
t720 = pkin(11) + qJ(5);
t665 = qJD(2) * qJD(3);
t652 = t593 * t665;
t637 = t604 * t652;
t625 = t599 * t637;
t503 = qJD(4) * t535 + t625;
t717 = qJ(5) * t503;
t638 = t600 * t652;
t609 = t619 * qJD(2);
t639 = t597 * t654;
t443 = (t571 * t701 - t552) * qJD(3) + (t594 * t609 + t639) * qJD(1);
t468 = pkin(10) * t647 + t483;
t582 = t596 * t678;
t496 = t582 + (qJD(2) * t636 - t571) * t593;
t508 = (t618 + t659) * t677;
t644 = t599 * t443 + t468 * t669 + t496 * t670 - t603 * t508;
t385 = -pkin(4) * t638 + t644;
t716 = t385 * t592;
t715 = t385 * t595;
t713 = t725 * t580;
t712 = t725 * t592;
t711 = t535 * t580;
t615 = t580 * t599;
t709 = t580 * t603;
t708 = t592 * t598;
t707 = t592 * t603;
t704 = t595 * t599;
t703 = t595 * t603;
t697 = t603 * t604;
t612 = -t603 * t443 + t468 * t670 - t496 * t669 - t599 * t508;
t384 = qJ(5) * t638 - qJD(5) * t580 - t612;
t610 = t621 * qJD(2);
t640 = t597 * t655;
t444 = t723 * qJD(3) + (t594 * t610 + t640) * qJD(1);
t502 = qJD(4) * t725 + t603 * t637;
t400 = pkin(4) * t503 - qJ(5) * t502 - qJD(5) * t535 + t444;
t377 = t595 * t384 + t592 * t400;
t692 = t595 * t663 + t724;
t488 = t515 * t592 - t595 * t655;
t691 = pkin(5) * t488 + t690;
t426 = t603 * t468 + t599 * t496;
t418 = -qJ(5) * t580 + t426;
t467 = -pkin(3) * t647 - t482;
t427 = -pkin(4) * t725 - t535 * qJ(5) + t467;
t387 = t595 * t418 + t592 * t427;
t425 = -t599 * t468 + t496 * t603;
t481 = pkin(4) * t535 - qJ(5) * t725;
t405 = t595 * t425 + t592 * t481;
t542 = t583 + (-pkin(2) * t604 - pkin(3)) * t596;
t469 = pkin(4) * t558 - qJ(5) * t559 + t542;
t685 = t603 * t543 + t599 * t544;
t472 = -qJ(5) * t705 + t685;
t416 = t592 * t469 + t595 * t472;
t519 = -t595 * t658 + t657 * t707;
t520 = (t592 * t600 + t595 * t697) * t677;
t565 = -t602 * t595 + t708;
t566 = t592 * t602 + t595 * t598;
t668 = qJD(6) * t599;
t688 = t519 * t598 - t520 * t602 - t565 * t669 - t566 * t668;
t667 = qJD(6) * t602;
t687 = -t602 * t519 - t520 * t598 + t566 * t669 + t667 * t704 - t668 * t708;
t683 = t527 * t565;
t682 = t527 * t566;
t649 = -t599 * t482 + t547 * t603;
t442 = -pkin(4) * t658 - t649;
t661 = pkin(5) * t592 + pkin(10);
t681 = -pkin(5) * t519 + t661 * t669 - t442;
t576 = -pkin(4) * t603 - qJ(5) * t599 - pkin(3);
t532 = pkin(10) * t703 + t592 * t576;
t676 = qJD(2) * t594;
t671 = qJD(3) * t603;
t417 = pkin(4) * t580 + qJD(5) - t425;
t666 = -qJD(5) + t417;
t474 = t502 * t592 - t595 * t638;
t475 = t502 * t595 + t592 * t638;
t662 = -t598 * t474 + t602 * t475 - t497 * t667;
t656 = t601 * t676;
t376 = -t384 * t592 + t595 * t400;
t374 = pkin(5) * t503 - pkin(11) * t475 + t376;
t375 = -pkin(11) * t474 + t377;
t651 = t602 * t374 - t375 * t598;
t386 = -t418 * t592 + t595 * t427;
t404 = -t425 * t592 + t595 * t481;
t415 = t595 * t469 - t472 * t592;
t650 = t602 * t474 + t598 * t475;
t648 = -t599 * t543 + t544 * t603;
t642 = t593 * t656;
t473 = pkin(4) * t705 - t648;
t513 = t559 * t592 + t595 * t705;
t409 = -pkin(11) * t513 + t416;
t489 = t515 * t595 + t592 * t655;
t634 = -pkin(5) * t516 + pkin(11) * t489 + qJD(6) * t409 - t695;
t514 = t559 * t595 - t592 * t705;
t401 = pkin(5) * t558 - pkin(11) * t514 + t415;
t633 = pkin(11) * t488 - qJD(6) * t401 - t694;
t517 = -pkin(11) * t592 * t599 + t532;
t632 = -pkin(11) * t520 + qJD(6) * t517 + t657 * t721 - (-pkin(11) * t703 + t721) * qJD(4) + t693;
t563 = t595 * t576;
t506 = -pkin(11) * t704 + t563 + (-pkin(10) * t592 - pkin(5)) * t603;
t631 = -pkin(11) * t519 - qJD(6) * t506 - (-pkin(10) * t704 - pkin(11) * t707) * qJD(4) + t724;
t629 = t374 * t598 + t375 * t602;
t379 = -pkin(5) * t725 - pkin(11) * t499 + t386;
t381 = -pkin(11) * t497 + t387;
t371 = t379 * t602 - t381 * t598;
t372 = t379 * t598 + t381 * t602;
t620 = t596 * t699 + t698;
t510 = t594 * t620 + t597 * t706;
t555 = -t593 * t594 * t605 + t596 * t597;
t471 = t510 * t603 + t555 * t599;
t622 = t596 * t696 - t700;
t509 = -t594 * t622 - t597 * t705;
t432 = -t471 * t592 + t509 * t595;
t433 = t471 * t595 + t509 * t592;
t628 = t432 * t602 - t433 * t598;
t627 = t432 * t598 + t433 * t602;
t470 = t510 * t599 - t555 * t603;
t450 = t602 * t513 + t514 * t598;
t451 = -t513 * t598 + t514 * t602;
t526 = -t571 * t593 + t582;
t623 = t526 * t593 - t589 * t719;
t579 = t720 * t595;
t614 = -pkin(11) * t595 * t725 + pkin(5) * t535 + qJD(5) * t592 + qJD(6) * t579 + t404;
t578 = t720 * t592;
t613 = -pkin(11) * t712 - qJD(5) * t595 + qJD(6) * t578 + t405;
t391 = -qJD(6) * t714 + t662;
t608 = qJD(1) * t596 * t656 + qJD(3) * t561;
t392 = -qJD(6) * t626 + t650;
t607 = -t526 * t677 - qJD(3) * t710 + (-t597 * t673 - t605 * t676) * qJD(1);
t588 = -pkin(5) * t595 - pkin(4);
t567 = t661 * t599;
t546 = t565 * t599;
t545 = t566 * t599;
t531 = -pkin(10) * t707 + t563;
t456 = t639 + (qJD(3) * t622 + t609) * t594;
t455 = t640 + (qJD(3) * t620 + t610) * t594;
t437 = pkin(5) * t513 + t473;
t413 = pkin(5) * t712 + t426;
t412 = -qJD(4) * t470 + t456 * t603 + t599 * t642;
t411 = qJD(4) * t471 + t456 * t599 - t603 * t642;
t408 = pkin(5) * t497 + t417;
t403 = qJD(6) * t451 + t602 * t488 + t489 * t598;
t402 = -qJD(6) * t450 - t488 * t598 + t489 * t602;
t394 = t412 * t595 + t455 * t592;
t393 = -t412 * t592 + t455 * t595;
t380 = pkin(5) * t474 + t385;
t370 = -qJD(6) * t372 + t651;
t369 = qJD(6) * t371 + t629;
t1 = [(-t455 * t647 + t555 * t638) * MDP(10) + (-t456 * t647 + t555 * t637) * MDP(11) + (t411 * t580 - t455 * t725 - t470 * t638 + t503 * t509) * MDP(17) + (t412 * t580 + t455 * t535 - t471 * t638 + t502 * t509) * MDP(18) + (-t393 * t725 + t411 * t497 + t432 * t503 + t470 * t474) * MDP(19) + (t394 * t725 + t411 * t499 - t433 * t503 + t470 * t475) * MDP(20) + (-t393 * t499 - t394 * t497 - t432 * t475 - t433 * t474) * MDP(21) + (t376 * t432 + t377 * t433 + t385 * t470 + t386 * t393 + t387 * t394 + t411 * t417) * MDP(22) + ((-qJD(6) * t627 + t393 * t602 - t394 * t598) * t527 + t628 * t503 - t411 * t729 + t470 * t392) * MDP(28) + (-(qJD(6) * t628 + t393 * t598 + t394 * t602) * t527 - t627 * t503 - t411 * t626 + t470 * t391) * MDP(29) + (-MDP(4) * t605 + (-MDP(3) + (-MDP(10) * t604 + MDP(11) * t600) * t589) * t601) * t606 * t594; (-t377 * t558 + t385 * t514 - t387 * t516 - t416 * t503 + t417 * t489 + t473 * t475 + t499 * t690 + t694 * t725) * MDP(20) + (-t376 * t514 - t377 * t513 - t386 * t489 - t387 * t488 - t415 * t475 - t416 * t474 - t497 * t694 - t499 * t695) * MDP(21) + (t376 * t415 + t377 * t416 + t385 * t473 + t386 * t695 + t387 * t694 + t417 * t690) * MDP(22) + (t391 * t451 - t402 * t626) * MDP(23) + (-t391 * t450 - t392 * t451 + t402 * t729 + t403 * t626) * MDP(24) + (t391 * t558 + t402 * t527 + t451 * t503 - t516 * t626) * MDP(25) + (-t392 * t558 - t403 * t527 - t450 * t503 + t516 * t729) * MDP(26) + (t503 * t558 + t516 * t527) * MDP(27) + ((t401 * t602 - t409 * t598) * t503 + t370 * t558 + t371 * t516 + t437 * t392 + t380 * t450 + t408 * t403 + (t598 * t633 - t602 * t634) * t527 - t691 * t729) * MDP(28) + (-(t401 * t598 + t409 * t602) * t503 - t369 * t558 - t372 * t516 + t437 * t391 + t380 * t451 + t408 * t402 + (t598 * t634 + t602 * t633) * t527 - t691 * t626) * MDP(29) + ((-qJD(2) * t684 - t444) * t596 + (t600 * t623 - t684) * qJD(3)) * MDP(10) + ((qJD(2) * t686 - t443) * t596 + (t604 * t623 + t686) * qJD(3)) * MDP(11) + (t502 * t559 + t515 * t535) * MDP(12) + (-t502 * t558 - t503 * t559 + t515 * t725 - t516 * t535) * MDP(13) + (-t515 * t580 + (-t502 * t604 + (qJD(2) * t559 + t535) * t672) * t593) * MDP(14) + (t516 * t580 + (t503 * t604 + (-qJD(2) * t558 + t725) * t672) * t593) * MDP(15) + (-t580 * t593 - t589 * t674) * MDP(16) * t672 + (t444 * t558 + t467 * t516 + t542 * t503 + t726 * t580 - t684 * t725 + (t644 * t604 + (qJD(2) * t648 + t425) * t672) * t593) * MDP(17) + (t444 * t559 + t467 * t515 + t542 * t502 + t733 * t580 + t684 * t535 + (-t612 * t604 + (-qJD(2) * t685 - t426) * t672) * t593) * MDP(18) + (t376 * t558 + t385 * t513 + t386 * t516 + t415 * t503 + t417 * t488 + t473 * t474 + t497 * t690 - t695 * t725) * MDP(19) - 0.2e1 * t722 * t665 + (MDP(7) * t654 - MDP(8) * t655) * (qJD(3) + 0.2e1 * t675); (t483 * t647 + t600 * t607 - t604 * t608) * MDP(10) + (t482 * t647 + t600 * t608 + t604 * t607) * MDP(11) + (t502 * t599 - t535 * t709) * MDP(12) + ((t502 - t713) * t603 + (-t503 + t711) * t599) * MDP(13) + (-t580 * t669 + (t580 * t697 + (qJD(3) * t599 - t535) * t600) * t677) * MDP(14) + (t580 * t670 + (-t604 * t615 + (-t725 + t671) * t600) * t677) * MDP(15) + (-pkin(3) * t503 - t444 * t603 + t649 * t580 + t483 * t725 + (pkin(10) * t709 + t467 * t599) * qJD(4) + (-t425 * t600 + (-pkin(10) * t672 - t467 * t604) * t599) * t677) * MDP(17) + (-pkin(3) * t502 + t444 * t599 - t483 * t535 - t689 * t580 + (-pkin(10) * t615 + t467 * t603) * qJD(4) + (-t467 * t697 + (-pkin(10) * t671 + t426) * t600) * t677) * MDP(18) + (-t417 * t519 - t442 * t497 + t503 * t531 + t693 * t725 + (-t376 + (pkin(10) * t497 + t417 * t592) * qJD(4)) * t603 + (pkin(10) * t474 - t386 * t580 + t716) * t599) * MDP(19) + (-t417 * t520 - t442 * t499 - t503 * t532 - t692 * t725 + (t377 + (pkin(10) * t499 + t417 * t595) * qJD(4)) * t603 + (pkin(10) * t475 + t387 * t580 + t715) * t599) * MDP(20) + (t386 * t520 + t387 * t519 - t474 * t532 - t475 * t531 + (-t376 * t595 - t377 * t592) * t599 + t693 * t499 + t692 * t497 + (-t386 * t595 - t387 * t592) * t669) * MDP(21) + (t376 * t531 + t377 * t532 - t417 * t442 - t692 * t387 - t693 * t386 + (t385 * t599 + t417 * t669) * pkin(10)) * MDP(22) + (-t391 * t546 - t626 * t688) * MDP(23) + (-t391 * t545 + t392 * t546 + t626 * t687 + t688 * t729) * MDP(24) + (-t391 * t603 - t503 * t546 + t527 * t688 + t615 * t626) * MDP(25) + (t392 * t603 - t503 * t545 - t527 * t687 - t615 * t729) * MDP(26) + (-t503 * t603 - t527 * t615) * MDP(27) + ((t506 * t602 - t517 * t598) * t503 - t370 * t603 + t567 * t392 + t380 * t545 + (t598 * t631 - t602 * t632) * t527 - t681 * t729 + t687 * t408 - t371 * t615) * MDP(28) + (-(t506 * t598 + t517 * t602) * t503 + t369 * t603 + t567 * t391 - t380 * t546 + (t598 * t632 + t602 * t631) * t527 - t681 * t626 + t688 * t408 + t372 * t615) * MDP(29) + t580 * MDP(16) * t658 + ((-MDP(7) * t604 + MDP(8) * t600) * t593 * t596 + t722) * t606; -t725 ^ 2 * MDP(13) + (t502 + t713) * MDP(14) + (-t625 - t711) * MDP(15) + MDP(16) * t638 + (-t426 * t580 - t644) * MDP(17) + (-t425 * t580 - t467 * t725 + t612) * MDP(18) + (-t592 * t717 - pkin(4) * t474 - t715 - t426 * t497 - (t592 * t666 - t404) * t725) * MDP(19) + (-t595 * t717 - pkin(4) * t475 + t716 - t426 * t499 - (t595 * t666 + t405) * t725) * MDP(20) + (t404 * t499 + t405 * t497 + (-qJ(5) * t474 - qJD(5) * t497 + t386 * t725 + t377) * t595 + (qJ(5) * t475 + qJD(5) * t499 + t387 * t725 - t376) * t592) * MDP(21) + (-pkin(4) * t385 - t386 * t404 - t387 * t405 - t417 * t426 + (-t386 * t592 + t387 * t595) * qJD(5) + (-t376 * t592 + t377 * t595) * qJ(5)) * MDP(22) + (t391 * t566 + t626 * t683) * MDP(23) + (-t391 * t565 - t392 * t566 + t626 * t682 - t683 * t729) * MDP(24) + (t503 * t566 - t527 * t683) * MDP(25) + (-t503 * t565 - t527 * t682) * MDP(26) + ((-t578 * t602 - t579 * t598) * t503 + t588 * t392 + t380 * t565 + t413 * t729 + (t598 * t613 - t602 * t614) * t527 + t682 * t408) * MDP(28) + (-(-t578 * t598 + t579 * t602) * t503 + t588 * t391 + t380 * t566 + t413 * t626 + (t598 * t614 + t602 * t613) * t527 - t683 * t408) * MDP(29) + (-MDP(12) * t725 + MDP(13) * t535 - MDP(15) * qJD(4) - MDP(17) * t467 - MDP(19) * t386 + MDP(20) * t387 + MDP(25) * t626 - MDP(26) * t729 - MDP(27) * t527 - MDP(28) * t371 + MDP(29) * t372) * t535; (-t499 * t725 + t474) * MDP(19) + (t497 * t725 + t475) * MDP(20) + (-t497 ^ 2 - t499 ^ 2) * MDP(21) + (t386 * t499 + t387 * t497 + t385) * MDP(22) + (t392 - t728) * MDP(28) + (t391 + t734) * MDP(29); t626 * t729 * MDP(23) + (t626 ^ 2 - t729 ^ 2) * MDP(24) + (t662 - t734) * MDP(25) + (-t650 - t728) * MDP(26) + t503 * MDP(27) + (t372 * t527 + t408 * t626 + t651) * MDP(28) + (t371 * t527 - t408 * t729 - t629) * MDP(29) + (-MDP(25) * t714 + MDP(26) * t626 - MDP(28) * t372 - MDP(29) * t371) * qJD(6);];
tauc  = t1;
