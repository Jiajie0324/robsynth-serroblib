% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR9_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:14:08
% EndTime: 2019-03-09 14:14:56
% DurationCPUTime: 28.79s
% Computational Cost: add. (44013->951), mult. (109031->1276), div. (0->0), fcn. (90783->18), ass. (0->425)
t375 = sin(pkin(12));
t377 = cos(pkin(12));
t382 = sin(qJ(4));
t593 = cos(qJ(4));
t313 = t375 * t593 + t382 * t377;
t376 = sin(pkin(6));
t386 = cos(qJ(2));
t540 = t376 * t386;
t399 = t313 * t540;
t249 = qJD(1) * t399;
t404 = qJD(4) * t313;
t606 = t249 - t404;
t487 = t593 * t377;
t424 = t382 * t375 - t487;
t526 = qJD(1) * t386;
t484 = t376 * t526;
t250 = t424 * t484;
t605 = -qJD(4) * t424 + t250;
t378 = cos(pkin(6));
t509 = qJDD(1) * t378;
t352 = qJDD(2) + t509;
t549 = t352 * t377;
t510 = qJD(1) * qJD(2);
t473 = t386 * t510;
t383 = sin(qJ(2));
t508 = qJDD(1) * t383;
t419 = t473 + t508;
t630 = t419 * t376;
t229 = t375 * t630 - t549;
t528 = qJD(1) * t378;
t353 = qJD(2) + t528;
t527 = qJD(1) * t383;
t485 = t376 * t527;
t267 = -t377 * t353 + t375 * t485;
t269 = t353 * t375 + t377 * t485;
t403 = t419 * t377;
t397 = t376 * t403;
t550 = t352 * t375;
t392 = t397 + t550;
t477 = qJD(4) * t593;
t520 = qJD(4) * t382;
t116 = t382 * t229 + t267 * t477 + t269 * t520 - t593 * t392;
t198 = -t382 * t267 + t269 * t593;
t117 = qJD(4) * t198 + t593 * t229 + t382 * t392;
t381 = sin(qJ(5));
t423 = -t267 * t593 - t382 * t269;
t592 = cos(qJ(5));
t476 = qJD(5) * t592;
t519 = qJD(5) * t381;
t60 = t592 * t116 + t381 * t117 + t198 * t519 - t423 * t476;
t467 = t381 * t116 - t592 * t117;
t624 = t198 * t592 + t381 * t423;
t640 = qJD(5) * t624;
t61 = -t467 + t640;
t500 = pkin(1) * qJD(2) * t378;
t456 = qJD(1) * t500;
t497 = pkin(1) * t509;
t216 = -pkin(8) * t630 - t383 * t456 + t386 * t497;
t589 = pkin(2) * t352;
t603 = qJDD(3) - t589;
t199 = -t216 + t603;
t588 = pkin(3) * t229;
t146 = t199 + t588;
t586 = pkin(4) * t117;
t88 = t146 + t586;
t16 = pkin(5) * t61 + pkin(11) * t60 + t88;
t380 = sin(qJ(6));
t385 = cos(qJ(6));
t337 = -qJD(4) + t484;
t425 = -qJD(5) + t337;
t501 = pkin(1) * t528;
t295 = pkin(8) * t484 + t383 * t501;
t252 = qJ(3) * t353 + t295;
t431 = -pkin(2) * t386 - qJ(3) * t383 - pkin(1);
t278 = t431 * t376;
t258 = qJD(1) * t278;
t177 = -t252 * t375 + t377 * t258;
t143 = -pkin(3) * t484 - pkin(9) * t269 + t177;
t178 = t377 * t252 + t375 * t258;
t147 = -pkin(9) * t267 + t178;
t98 = t382 * t143 + t147 * t593;
t84 = pkin(10) * t423 + t98;
t498 = t592 * t84;
t97 = t593 * t143 - t147 * t382;
t83 = -pkin(10) * t198 + t97;
t77 = -pkin(4) * t337 + t83;
t48 = t381 * t77 + t498;
t46 = -pkin(11) * t425 + t48;
t129 = t198 * t381 - t423 * t592;
t294 = -pkin(8) * t485 + t386 * t501;
t244 = -pkin(2) * t353 + qJD(3) - t294;
t194 = pkin(3) * t267 + t244;
t134 = -pkin(4) * t423 + t194;
t69 = pkin(5) * t129 - pkin(11) * t624 + t134;
t436 = t380 * t46 - t385 * t69;
t474 = t383 * t510;
t453 = t376 * t474;
t507 = qJDD(1) * t386;
t350 = t376 * t507;
t505 = t350 - qJDD(4);
t288 = t453 - t505;
t402 = qJDD(5) + t288;
t439 = pkin(2) * t383 - qJ(3) * t386;
t395 = qJD(2) * t439 - qJD(3) * t383;
t193 = (qJD(1) * t395 + qJDD(1) * t431) * t376;
t184 = t377 * t193;
t491 = -pkin(8) * t350 - t383 * t497 - t386 * t456;
t215 = -pkin(8) * t453 - t491;
t185 = qJ(3) * t352 + qJD(3) * t353 + t215;
t418 = t474 - t507;
t101 = t184 + (-pkin(9) * t352 - t185) * t375 + (pkin(3) * t418 - pkin(9) * t403) * t376;
t124 = t377 * t185 + t375 * t193;
t108 = -pkin(9) * t229 + t124;
t42 = -qJD(4) * t98 + t593 * t101 - t382 * t108;
t25 = t288 * pkin(4) + t116 * pkin(10) + t42;
t420 = -t382 * t101 - t593 * t108 - t143 * t477 + t147 * t520;
t29 = -pkin(10) * t117 - t420;
t9 = t381 * t25 + t592 * t29 + t77 * t476 - t84 * t519;
t7 = pkin(11) * t402 + t9;
t2 = -t436 * qJD(6) + t380 * t16 + t385 * t7;
t649 = qJD(6) + t129;
t571 = t436 * t649;
t658 = t2 + t571;
t290 = t439 * t376 * qJD(1);
t206 = t377 * t290 - t294 * t375;
t415 = (-pkin(9) * t377 * t386 + pkin(3) * t383) * t376;
t172 = qJD(1) * t415 + t206;
t207 = t375 * t290 + t377 * t294;
t455 = t375 * t484;
t189 = -pkin(9) * t455 + t207;
t576 = pkin(9) + qJ(3);
t332 = t576 * t375;
t478 = qJD(3) * t593;
t657 = -t382 * t172 - t593 * t189 - t332 * t477 + t377 * t478;
t120 = -t380 * t425 + t385 * t624;
t641 = t649 * t380;
t656 = t120 * t641;
t121 = t593 * t172 - t189 * t382;
t333 = t576 * t377;
t522 = qJD(3) * t382;
t655 = -pkin(4) * t485 - pkin(10) * t605 + t332 * t520 - t333 * t477 - t375 * t478 - t377 * t522 - t121;
t654 = -pkin(10) * t606 + t333 * t520 + t375 * t522 - t657;
t515 = qJD(6) * t385;
t632 = t129 * t385;
t653 = t515 + t632;
t18 = t380 * t69 + t385 * t46;
t3 = -qJD(6) * t18 + t385 * t16 - t380 * t7;
t652 = t18 * t649 + t3;
t651 = t129 ^ 2;
t650 = t129 * t425;
t398 = t592 * t424;
t506 = qJD(4) + qJD(5);
t157 = t313 * t519 + t381 * t404 + t398 * t506;
t175 = -t381 * t249 - t250 * t592;
t535 = t157 + t175;
t408 = t381 * t424;
t534 = -qJD(5) * t408 + t313 * t476 + t381 * t605 - t592 * t606;
t411 = t385 * t425;
t118 = t380 * t624 + t411;
t516 = qJD(6) * t380;
t37 = qJD(6) * t411 - t380 * t402 + t385 * t60 + t516 * t624;
t518 = qJD(6) * t120;
t38 = -t380 * t60 - t385 * t402 + t518;
t566 = -t118 * t515 - t380 * t38;
t648 = -t118 * t632 - t385 * t37 + t566 - t656;
t59 = qJDD(6) + t61;
t56 = t385 * t59;
t645 = t118 * t624;
t647 = -t641 * t649 + t56 + t645;
t646 = t624 ^ 2;
t247 = -t593 * t332 - t382 * t333;
t209 = -pkin(10) * t313 + t247;
t248 = -t382 * t332 + t593 * t333;
t210 = -pkin(10) * t424 + t248;
t615 = t209 * t476 - t210 * t519 + t381 * t655 - t592 * t654;
t644 = t120 * t624;
t643 = t337 * t624;
t372 = pkin(12) + qJ(4);
t368 = qJ(5) + t372;
t361 = sin(t368);
t594 = cos(qJ(1));
t488 = t594 * t386;
t384 = sin(qJ(1));
t538 = t383 * t384;
t302 = -t378 * t488 + t538;
t489 = t594 * t383;
t537 = t384 * t386;
t304 = t378 * t537 + t489;
t444 = g(1) * t304 + g(2) * t302;
t407 = -g(3) * t540 + t444;
t642 = t407 * t361;
t238 = pkin(3) * t455 + t295;
t604 = -pkin(4) * t606 - t238;
t34 = t37 * t380;
t638 = t120 * t653 - t34;
t55 = t380 * t59;
t637 = t649 * t653 + t55 - t644;
t636 = t198 ^ 2;
t305 = -t378 * t538 + t488;
t362 = cos(t368);
t541 = t376 * t384;
t227 = t305 * t361 - t362 * t541;
t542 = t376 * t383;
t265 = -t361 * t542 + t362 * t378;
t303 = t378 * t489 + t537;
t490 = t376 * t594;
t464 = -t303 * t361 - t362 * t490;
t417 = g(1) * t227 - g(2) * t464 - g(3) * t265;
t470 = -t592 * t25 + t381 * t29;
t10 = -qJD(5) * t48 - t470;
t8 = -pkin(5) * t402 - t10;
t409 = t417 - t8;
t635 = pkin(11) * t485 - t615;
t568 = t381 * t84;
t47 = t592 * t77 - t568;
t45 = pkin(5) * t425 - t47;
t634 = t129 * t45;
t633 = pkin(5) * t534 + pkin(11) * t535 + t604;
t558 = t129 * t624;
t631 = t198 * t337;
t366 = sin(t372);
t367 = cos(t372);
t232 = -t305 * t366 + t367 * t541;
t629 = -t366 * t542 + t367 * t378;
t627 = t646 - t651;
t87 = pkin(5) * t624 + pkin(11) * t129;
t626 = -t60 - t650;
t224 = t303 * t362 - t361 * t490;
t228 = t305 * t362 + t361 * t541;
t266 = t361 * t378 + t362 * t542;
t416 = -g(1) * t228 - g(2) * t224 - g(3) * t266;
t625 = t134 * t129 - t416 - t9;
t623 = t224 * t380 - t302 * t385;
t622 = t224 * t385 + t302 * t380;
t620 = t423 ^ 2;
t371 = t376 ^ 2;
t619 = 0.2e1 * t371;
t1 = t2 * t385;
t617 = -t3 * t380 + t1;
t141 = t381 * t209 + t210 * t592;
t614 = -qJD(5) * t141 + t381 * t654 + t592 * t655;
t49 = t381 * t83 + t498;
t613 = -pkin(4) * t519 + t49;
t612 = t649 * t624;
t611 = t337 * t423;
t591 = pkin(1) * t383;
t307 = pkin(8) * t540 + t378 * t591;
t277 = qJ(3) * t378 + t307;
t200 = -t277 * t375 + t377 * t278;
t299 = t375 * t378 + t377 * t542;
t159 = -pkin(3) * t540 - pkin(9) * t299 + t200;
t201 = t377 * t277 + t375 * t278;
t298 = t375 * t542 - t378 * t377;
t171 = -pkin(9) * t298 + t201;
t110 = t382 * t159 + t593 * t171;
t608 = (-qJD(3) * t375 - qJD(4) * t333) * t382 + t657;
t607 = -t313 * qJD(3) - qJD(4) * t248 - t121;
t297 = qJD(2) * t307;
t50 = t592 * t83 - t568;
t585 = pkin(4) * t198;
t74 = t585 + t87;
t20 = t380 * t74 + t385 * t50;
t584 = pkin(4) * t381;
t364 = pkin(11) + t584;
t457 = pkin(4) * t476;
t602 = -t364 * t516 + t385 * t457 - t20;
t600 = t436 * t624 + t45 * t516;
t598 = t18 * t624 - t380 * t409 + t45 * t515;
t596 = -t134 * t624 + t417 - t470;
t595 = t467 - t643;
t109 = t593 * t159 - t171 * t382;
t212 = -t382 * t298 + t299 * t593;
t91 = -pkin(4) * t540 - pkin(10) * t212 + t109;
t211 = t298 * t593 + t299 * t382;
t95 = -pkin(10) * t211 + t110;
t572 = t381 * t91 + t592 * t95;
t523 = qJD(2) * t386;
t482 = t376 * t523;
t454 = t375 * t482;
t164 = t298 * t477 - t482 * t487 + (qJD(4) * t299 + t454) * t382;
t524 = qJD(2) * t383;
t483 = t376 * t524;
t255 = t395 * t376;
t296 = -pkin(8) * t483 + t386 * t500;
t264 = qJD(3) * t378 + t296;
t186 = t377 * t255 - t264 * t375;
t152 = qJD(2) * t415 + t186;
t187 = t375 * t255 + t377 * t264;
t167 = -pkin(9) * t454 + t187;
t73 = -qJD(4) * t110 + t593 * t152 - t382 * t167;
t62 = pkin(4) * t483 + t164 * pkin(10) + t73;
t165 = qJD(2) * t399 + qJD(4) * t212;
t72 = t382 * t152 + t159 * t477 + t593 * t167 - t171 * t520;
t64 = -pkin(10) * t165 + t72;
t14 = -qJD(5) * t572 - t381 * t64 + t592 * t62;
t590 = pkin(1) * t386;
t587 = pkin(3) * t375;
t578 = g(3) * t376;
t230 = t313 * t381 + t398;
t231 = t313 * t592 - t408;
t363 = t377 * pkin(3) + pkin(2);
t275 = pkin(4) * t424 - t363;
t142 = t230 * pkin(5) - t231 * pkin(11) + t275;
t93 = -t141 * t380 + t142 * t385;
t575 = qJD(6) * t93 + t380 * t633 - t385 * t635;
t94 = t141 * t385 + t142 * t380;
t574 = -qJD(6) * t94 + t380 * t635 + t385 * t633;
t573 = pkin(5) * t485 - t614;
t570 = t436 * t380;
t36 = t38 * t385;
t564 = qJ(3) * t375;
t563 = t118 * t380;
t562 = t120 * t118;
t557 = t198 * t423;
t556 = t231 * t380;
t555 = t231 * t385;
t552 = t303 * t366;
t548 = t362 * t380;
t547 = t362 * t385;
t545 = t371 * qJD(1) ^ 2;
t544 = t375 * t386;
t543 = t376 * t377;
t539 = t380 * t386;
t536 = t385 * t386;
t315 = pkin(4) * t367 + t363;
t370 = -pkin(10) - t576;
t533 = -t302 * t315 - t303 * t370;
t532 = -t304 * t315 - t305 * t370;
t530 = pkin(1) * t594 + pkin(8) * t541;
t373 = t383 ^ 2;
t374 = t386 ^ 2;
t529 = t373 - t374;
t525 = qJD(2) * t375;
t517 = qJD(6) * t649;
t514 = qJD(2) - t353;
t513 = qJD(3) - t244;
t503 = g(1) * t594;
t502 = t592 * pkin(4);
t494 = t374 * t545;
t493 = t386 * t545;
t492 = t376 * t536;
t340 = t376 * t539;
t486 = qJ(3) * t524;
t480 = t269 * t523;
t479 = t269 * t526;
t475 = pkin(1) * t619;
t471 = -t384 * pkin(1) + pkin(8) * t490;
t468 = qJDD(5) - t505;
t155 = t175 * t380 - t385 * t485;
t466 = t157 * t380 + t155;
t156 = t175 * t385 + t380 * t485;
t465 = t157 * t385 + t156;
t463 = t303 * t367 - t366 * t490;
t462 = t649 ^ 2;
t459 = t353 + t528;
t458 = t352 + t509;
t451 = t383 * t473;
t450 = t371 * t374 * t510;
t448 = t232 * pkin(4);
t446 = pkin(5) * t362 + pkin(11) * t361;
t445 = g(1) * t464 + g(2) * t227;
t443 = g(1) * t302 - g(2) * t304;
t442 = g(1) * t305 + g(2) * t303;
t441 = g(1) * t303 - g(2) * t305;
t438 = -t364 * t59 + t634;
t437 = t18 * t380 - t385 * t436;
t52 = -pkin(11) * t540 + t572;
t144 = t211 * t592 + t212 * t381;
t145 = -t381 * t211 + t212 * t592;
t354 = pkin(8) * t542;
t284 = t354 + (-pkin(2) - t590) * t378;
t220 = pkin(3) * t298 + t284;
t150 = pkin(4) * t211 + t220;
t75 = pkin(5) * t144 - pkin(11) * t145 + t150;
t27 = t380 * t75 + t385 * t52;
t26 = -t380 * t52 + t385 * t75;
t321 = pkin(4) * t366 + t587;
t434 = -t304 * t370 + t305 * t315 + t321 * t541 + t530;
t433 = t629 * pkin(4);
t432 = qJD(1) * (qJD(2) * t377 + t267);
t430 = -t199 + t444;
t428 = g(2) * t384 + t503;
t53 = -t381 * t95 + t592 * t91;
t135 = t145 * t380 + t492;
t13 = t381 * t62 + t91 * t476 - t519 * t95 + t592 * t64;
t421 = t302 * t370 - t303 * t315 + t321 * t490 + t471;
t414 = -t367 * t490 - t552;
t413 = t231 * t515 - t466;
t412 = -t231 * t516 - t465;
t410 = t1 + t416;
t406 = -g(3) * t542 - t442;
t401 = t414 * pkin(4);
t396 = t407 + t216;
t239 = pkin(3) * t454 + t297;
t137 = pkin(4) * t165 + t239;
t391 = -t396 + t603;
t390 = t391 + t588;
t365 = -t502 - pkin(5);
t327 = t383 * t493;
t306 = t378 * t590 - t354;
t289 = t315 * t540;
t276 = (qJDD(1) * t374 - 0.2e1 * t451) * t371;
t257 = t265 * pkin(5);
t233 = t305 * t367 + t366 * t541;
t222 = t227 * pkin(5);
t221 = t464 * pkin(5);
t181 = t228 * t385 + t304 * t380;
t180 = -t228 * t380 + t304 * t385;
t140 = -t209 * t592 + t210 * t381;
t136 = t145 * t385 - t340;
t123 = -t375 * t185 + t184;
t82 = qJD(5) * t145 - t381 * t164 + t165 * t592;
t81 = t164 * t592 + t381 * t165 + t211 * t476 + t212 * t519;
t66 = -qJD(6) * t340 + t145 * t515 - t380 * t81 - t385 * t483;
t65 = qJD(6) * t135 - t380 * t483 + t385 * t81;
t51 = pkin(5) * t540 - t53;
t32 = pkin(5) * t82 + pkin(11) * t81 + t137;
t22 = t380 * t87 + t385 * t47;
t21 = -t380 * t47 + t385 * t87;
t19 = -t380 * t50 + t385 * t74;
t12 = -pkin(5) * t483 - t14;
t11 = pkin(11) * t483 + t13;
t5 = -qJD(6) * t27 - t11 * t380 + t32 * t385;
t4 = qJD(6) * t26 + t11 * t385 + t32 * t380;
t6 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t384 - g(2) * t594, t428, 0, 0 (qJDD(1) * t373 + 0.2e1 * t451) * t371 (t383 * t507 - t510 * t529) * t619 (t383 * t458 + t459 * t523) * t376, t276 (t386 * t458 - t459 * t524) * t376, t352 * t378, t216 * t378 - t297 * t353 + t306 * t352 - t418 * t475 + t441, -t215 * t378 - t296 * t353 - t307 * t352 - t419 * t475 - t443 ((-qJD(2) * t294 + qJDD(1) * t307 + t215 + (-qJD(2) * t306 + t296) * qJD(1)) * t386 + (-qJD(2) * t295 - qJDD(1) * t306 - t216) * t383 - t428) * t376, t371 * qJDD(1) * pkin(1) ^ 2 - g(1) * t471 - g(2) * t530 + t215 * t307 + t216 * t306 - t294 * t297 + t295 * t296, t299 * t550 + (t299 * t419 + t480) * t543, -t298 * t550 - t299 * t229 + (-t375 * t480 + (-t267 * t523 - t298 * t419) * t377) * t376, -t377 * t450 + (t269 * t524 + t299 * t418 - t352 * t544 - t386 * t397) * t376, t229 * t298 + t267 * t454, t375 * t450 + ((qJDD(1) * t298 + t229) * t386 + (-qJD(1) * t298 - t267) * t524) * t376, t276, t199 * t298 + t284 * t229 + t297 * t267 + t441 * t377 + (-t428 * t375 + (qJD(1) * t200 + t177) * t524 + (-qJD(1) * t186 - qJDD(1) * t200 + t244 * t525 - t123) * t386) * t376, t199 * t299 + t297 * t269 + (t284 * t352 - t441) * t375 + ((-qJD(1) * t201 - t178) * t524 + (qJD(1) * t187 + qJDD(1) * t201 + t124) * t386 + (t244 * t523 + t284 * t419 - t428) * t377) * t376, -t200 * t550 - t123 * t299 - t124 * t298 - t186 * t269 - t187 * t267 - t201 * t229 + (-t178 * t375 * t523 + (-t177 * t523 - t200 * t419) * t377) * t376 + t443, t124 * t201 + t178 * t187 + t123 * t200 + t177 * t186 + t199 * t284 + t244 * t297 - g(1) * (-pkin(2) * t303 - qJ(3) * t302 + t471) - g(2) * (pkin(2) * t305 + qJ(3) * t304 + t530) -t116 * t212 - t164 * t198, t116 * t211 - t117 * t212 - t164 * t423 - t165 * t198, t164 * t337 + t212 * t288 + (t116 * t386 + t198 * t524) * t376, t117 * t211 - t165 * t423, t165 * t337 - t211 * t288 + (t117 * t386 + t423 * t524) * t376 (-t288 * t386 - t337 * t524) * t376, -t73 * t337 + t109 * t288 - t239 * t423 + t220 * t117 + t146 * t211 + t194 * t165 + g(1) * t463 - g(2) * t233 + (-t386 * t42 + t524 * t97) * t376, -g(1) * t552 - g(2) * t232 - t110 * t288 - t220 * t116 + t146 * t212 - t194 * t164 + t239 * t198 + t72 * t337 + (-t367 * t503 - t386 * t420 - t524 * t98) * t376, t109 * t116 - t110 * t117 + t164 * t97 - t165 * t98 - t198 * t73 + t211 * t420 - t212 * t42 + t423 * t72 + t443, -t420 * t110 + t98 * t72 + t42 * t109 + t97 * t73 + t146 * t220 + t194 * t239 - g(1) * (-t302 * t576 - t303 * t363 + t490 * t587 + t471) - g(2) * (t304 * t576 + t305 * t363 + t541 * t587 + t530) -t145 * t60 - t624 * t81, t129 * t81 + t144 * t60 - t145 * t61 - t624 * t82, -t81 * t506 + t145 * t468 + (t624 * t524 + t60 * t386 + (t145 * t524 + t386 * t81) * qJD(1)) * t376, t129 * t82 + t144 * t61, -t82 * t506 - t144 * t468 + (-t129 * t524 + t61 * t386 + (-t144 * t524 + t386 * t82) * qJD(1)) * t376 (-t468 * t386 + (-0.2e1 * t484 + t506) * t524) * t376, t14 * t506 + t53 * t468 + t137 * t129 + t150 * t61 + t88 * t144 + t134 * t82 + g(1) * t224 - g(2) * t228 + (t47 * t524 - t10 * t386 + (-t14 * t386 + t524 * t53) * qJD(1)) * t376, -t13 * t506 - t572 * t468 + t137 * t624 - t150 * t60 + t88 * t145 - t134 * t81 + (-t48 * t524 + t9 * t386 + (t13 * t386 - t524 * t572) * qJD(1)) * t376 + t445, -t10 * t145 - t129 * t13 - t14 * t624 - t144 * t9 + t47 * t81 - t48 * t82 + t53 * t60 - t572 * t61 + t443, -g(1) * t421 - g(2) * t434 + t10 * t53 + t48 * t13 + t134 * t137 + t47 * t14 + t88 * t150 + t572 * t9, -t120 * t65 - t136 * t37, t118 * t65 - t120 * t66 + t135 * t37 - t136 * t38, t120 * t82 + t136 * t59 - t144 * t37 - t649 * t65, t118 * t66 + t135 * t38, -t118 * t82 - t135 * t59 - t144 * t38 - t649 * t66, t144 * t59 + t649 * t82, g(1) * t622 - g(2) * t181 + t12 * t118 + t8 * t135 + t3 * t144 + t26 * t59 + t51 * t38 - t436 * t82 + t45 * t66 + t5 * t649, -g(1) * t623 - g(2) * t180 + t12 * t120 + t8 * t136 - t2 * t144 - t18 * t82 - t27 * t59 - t51 * t37 - t4 * t649 - t45 * t65, -t118 * t4 - t120 * t5 - t135 * t2 - t136 * t3 - t18 * t66 + t26 * t37 - t27 * t38 - t436 * t65 - t445, t2 * t27 + t18 * t4 + t3 * t26 - t436 * t5 + t8 * t51 + t45 * t12 - g(1) * (-pkin(5) * t224 + pkin(11) * t464 + t421) - g(2) * (pkin(5) * t228 + pkin(11) * t227 + t434); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, t529 * t545 (t514 * t526 + t508) * t376, t327, -t485 * t514 + t350, t352, t295 * t353 + t545 * t591 + t396, pkin(1) * t493 + t294 * t353 + (pkin(8) * t510 + g(3)) * t542 + t442 + t491, 0, 0, t375 ^ 2 * t352 + (t375 * t419 - t479) * t543 (-t229 + t549) * t375 + (t375 * t479 + (t267 * t526 + t403) * t377) * t376, t377 * t494 + (-t375 * t507 + (-t269 + t525) * t527) * t376, -t377 * t229 - t267 * t455, -t375 * t494 + (-t377 * t507 + t383 * t432) * t376, t327, -pkin(2) * t229 - t267 * t295 + t430 * t377 + ((-g(3) * t377 + qJDD(1) * t564) * t386 + (-t177 * t383 + t206 * t386 + (t386 * t513 - t486) * t375) * qJD(1)) * t376, -t295 * t269 + (-t430 - t589) * t375 + (g(3) * t544 + (t178 * t383 - t207 * t386) * qJD(1) + (-t439 * qJDD(1) + (-t486 + (-pkin(2) * qJD(2) + t513) * t386) * qJD(1)) * t377) * t376, t206 * t269 + t207 * t267 + (qJ(3) * t550 + qJD(3) * t269 + t178 * t484 - t123) * t375 + (-qJ(3) * t229 - qJD(3) * t267 + t124 + (t177 * t526 + t419 * t564) * t376) * t377 + t406, -t177 * t206 - t178 * t207 - t244 * t295 + (-t177 * t375 + t178 * t377) * qJD(3) + (-t199 + t407) * pkin(2) + (-t123 * t375 + t124 * t377 + t406) * qJ(3), -t116 * t313 + t198 * t605, t116 * t424 - t313 * t117 + t198 * t606 + t423 * t605, -t198 * t485 + t313 * t288 - t337 * t605, t117 * t424 + t423 * t606, -t288 * t424 - t337 * t606 - t423 * t485, t337 * t485, -t363 * t117 + t146 * t424 - t194 * t606 + t238 * t423 + t247 * t288 - t337 * t607 + t367 * t407 - t485 * t97, t363 * t116 + t146 * t313 + t194 * t605 - t238 * t198 - t248 * t288 + t337 * t608 - t366 * t407 + t485 * t98, t247 * t116 - t248 * t117 - t97 * t250 - t42 * t313 + t406 + t606 * t98 + (qJD(4) * t97 + t420) * t424 - t607 * t198 + t608 * t423, -t420 * t248 + t42 * t247 - t146 * t363 - t194 * t238 - g(1) * (-t304 * t363 + t305 * t576) - g(2) * (-t302 * t363 + t303 * t576) + t608 * t98 + t607 * t97 - (t363 * t386 + t383 * t576) * t578, -t231 * t60 - t535 * t624, t129 * t535 + t230 * t60 - t231 * t61 - t534 * t624, t231 * t402 + t425 * t535 - t485 * t624, t129 * t534 + t230 * t61, t129 * t485 - t230 * t402 + t425 * t534, t425 * t485, t129 * t604 + t134 * t534 - t140 * t402 + t88 * t230 + t275 * t61 + t362 * t407 - t425 * t614 - t47 * t485, -t134 * t535 - t141 * t402 + t88 * t231 - t275 * t60 + t425 * t615 + t48 * t485 + t604 * t624 - t642, -t10 * t231 - t129 * t615 - t140 * t60 - t141 * t61 - t230 * t9 + t535 * t47 - t534 * t48 - t614 * t624 + t406, t9 * t141 - t10 * t140 + t88 * t275 - g(1) * t532 - g(2) * t533 - g(3) * (-t370 * t542 + t289) + t615 * t48 + t614 * t47 + t604 * t134, t120 * t412 - t37 * t555, t466 * t120 + t465 * t118 + (t34 - t36 + (-t120 * t385 + t563) * qJD(6)) * t231, t120 * t534 - t230 * t37 + t412 * t649 + t555 * t59, t118 * t413 + t38 * t556, -t118 * t534 - t230 * t38 - t413 * t649 - t556 * t59, t230 * t59 + t534 * t649, t93 * t59 + t3 * t230 + t140 * t38 + t8 * t556 - g(1) * (-t304 * t547 + t305 * t380) - g(2) * (-t302 * t547 + t303 * t380) - (t362 * t536 + t380 * t383) * t578 - t534 * t436 + t574 * t649 + t573 * t118 + t413 * t45, -t94 * t59 - t2 * t230 - t140 * t37 + t8 * t555 - g(1) * (t304 * t548 + t305 * t385) - g(2) * (t302 * t548 + t303 * t385) - (-t362 * t539 + t383 * t385) * t578 - t534 * t18 - t575 * t649 + t573 * t120 + t412 * t45, t155 * t18 - t156 * t436 + t37 * t93 - t38 * t94 + t437 * t157 - t574 * t120 - t575 * t118 + t642 + (-t2 * t380 - t3 * t385 + (-t18 * t385 - t570) * qJD(6)) * t231, t2 * t94 + t3 * t93 + t8 * t140 - g(1) * (-t304 * t446 + t532) - g(2) * (-t302 * t446 + t533) - g(3) * t289 + t573 * t45 - (-t370 * t383 + t386 * t446) * t578 + t575 * t18 - t574 * t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376 * t479 + t229, t550 + (t377 * t508 + t386 * t432) * t376, -t267 ^ 2 - t269 ^ 2, t177 * t269 + t178 * t267 + t391, 0, 0, 0, 0, 0, 0, t117 - t631, -t116 - t611, -t620 - t636, t198 * t97 - t423 * t98 + t390, 0, 0, 0, 0, 0, 0, -t467 + 0.2e1 * t640 - t643, -t60 + t650, -t646 - t651, t129 * t48 + t47 * t624 + t390 + t586, 0, 0, 0, 0, 0, 0, -t380 * t462 + t56 - t645, -t385 * t462 - t55 - t644 (-t118 * t129 + t37) * t385 + t656 + t566, t380 * t658 + t652 * t385 - t624 * t45 - t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t557, -t620 + t636, -t116 + t611, t557, -t117 - t631, t288, -g(1) * t232 - g(2) * t414 - g(3) * t629 - t194 * t198 - t98 * t337 + t42, -t97 * t337 - t194 * t423 + g(1) * t233 + g(2) * t463 - g(3) * (-t366 * t378 - t367 * t542) + t420, 0, 0, t558, t627, t626, -t558, t595, t402, -t49 * t337 + (t49 - t48) * qJD(5) + (-t198 * t129 + t402 * t592 + t425 * t519) * pkin(4) + t596, -t50 * t425 + (-t198 * t624 - t381 * t402 + t425 * t476) * pkin(4) + t625, t48 * t624 + t50 * t129 - t47 * t129 - t49 * t624 + (t592 * t60 - t381 * t61 + (-t129 * t592 + t381 * t624) * qJD(5)) * pkin(4), -g(1) * t448 - g(2) * t401 - g(3) * t433 + t10 * t502 - t134 * t585 + t584 * t9 + (t457 - t50) * t48 + t613 * t47, t638, t648, t637, t563 * t649 - t36, t647, -t612, -t19 * t649 + t365 * t38 - t613 * t118 + (-t457 * t649 + t438) * t380 + (-t364 * t517 + t409) * t385 + t600, -t120 * t613 - t365 * t37 + t438 * t385 - t602 * t649 + t598, t20 * t118 + t19 * t120 + (-t118 * t457 + t129 * t436 - t364 * t38 + (t120 * t364 + t436) * qJD(6)) * t385 + (t120 * t457 - t129 * t18 - t364 * t37 - t3 + (t118 * t364 - t18) * qJD(6)) * t380 + t410, t457 * t570 + t8 * t365 + t436 * t19 - g(1) * (pkin(11) * t228 - t222 + t448) - g(2) * (t224 * pkin(11) + t221 + t401) - g(3) * (pkin(11) * t266 + t257 + t433) - t613 * t45 + (t436 * t515 + t617) * t364 + t602 * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t558, t627, t626, -t558, t595, t402, -t337 * t48 + t596, -t425 * t47 + t625, 0, 0, t638, t648, t637, t118 * t641 - t36, t647, -t612, -pkin(5) * t38 - t118 * t48 - t649 * t21 + (-pkin(11) * t59 + t634) * t380 + (-pkin(11) * t517 + t409) * t385 + t600, t45 * t632 + pkin(5) * t37 - t120 * t48 + t649 * t22 + (t516 * t649 - t56) * pkin(11) + t598, t118 * t22 + t120 * t21 + (t571 + (-t38 + t518) * pkin(11)) * t385 + ((qJD(6) * t118 - t37) * pkin(11) - t652) * t380 + t410, -t8 * pkin(5) + g(1) * t222 - g(2) * t221 - g(3) * t257 + t436 * t21 - t18 * t22 - t45 * t48 + (-qJD(6) * t437 + t416 + t617) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, -t118 ^ 2 + t120 ^ 2, t118 * t649 - t37, -t562, t120 * t649 - t38, t59, -t45 * t120 - g(1) * t180 + g(2) * t623 - g(3) * (-t266 * t380 - t492) + t652, t45 * t118 + g(1) * t181 + g(2) * t622 - g(3) * (-t266 * t385 + t340) - t658, 0, 0;];
tau_reg  = t6;
