% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 23:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPRRR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR9_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR9_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR9_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 23:09:56
% EndTime: 2019-05-06 23:11:59
% DurationCPUTime: 128.78s
% Computational Cost: add. (1655959->1197), mult. (3775145->1817), div. (0->0), fcn. (3136361->14), ass. (0->848)
t2157 = sin(qJ(4));
t2151 = sin(pkin(12));
t2153 = cos(pkin(12));
t2154 = cos(pkin(6));
t2345 = qJD(1) * t2154;
t2285 = qJD(2) + t2345;
t2152 = sin(pkin(6));
t2158 = sin(qJ(2));
t2316 = t2152 * t2158;
t2302 = qJD(1) * t2316;
t2110 = t2151 * t2302 - t2153 * t2285;
t2111 = t2151 * t2285 + t2153 * t2302;
t2162 = cos(qJ(4));
t2076 = -t2110 * t2157 + t2111 * t2162;
t2281 = t2110 * t2162 + t2157 * t2111;
t2017 = t2076 * t2281;
t2163 = cos(qJ(2));
t2305 = qJDD(1) * t2152;
t2119 = -qJD(2) * t2302 + t2163 * t2305;
t2113 = -qJDD(4) + t2119;
t2360 = -t2017 - t2113;
t2367 = t2157 * t2360;
t2366 = t2162 * t2360;
t2155 = sin(qJ(6));
t2156 = sin(qJ(5));
t2161 = cos(qJ(5));
t2015 = t2161 * t2076 - t2156 * t2281;
t2304 = t2158 * qJDD(1);
t2344 = qJD(1) * t2163;
t2118 = (qJD(2) * t2344 + t2304) * t2152;
t2278 = qJDD(1) * t2154 + qJDD(2);
t2086 = t2153 * t2118 + t2151 * t2278;
t2175 = -t2151 * t2118 + t2153 * t2278;
t1995 = -qJD(4) * t2281 + t2162 * t2086 + t2157 * t2175;
t2282 = t2157 * t2086 - t2162 * t2175;
t2205 = -qJD(4) * t2076 - t2282;
t2283 = t2156 * t1995 - t2161 * t2205;
t1882 = -t2015 * qJD(5) - t2283;
t1881 = qJDD(6) - t1882;
t2160 = cos(qJ(6));
t2315 = t2152 * t2163;
t2301 = qJD(1) * t2315;
t2137 = -qJD(4) + t2301;
t2216 = -qJD(5) + t2137;
t1991 = t2015 * t2155 + t2160 * t2216;
t1993 = t2160 * t2015 - t2155 * t2216;
t1921 = t1993 * t1991;
t2357 = t1881 - t1921;
t2365 = t2155 * t2357;
t2013 = t2076 * t2156 + t2161 * t2281;
t1945 = t2015 * t2013;
t2112 = -qJDD(5) + t2113;
t2356 = -t1945 - t2112;
t2364 = t2156 * t2356;
t2363 = t2160 * t2357;
t2362 = t2161 * t2356;
t1883 = -t2013 * qJD(5) + t2161 * t1995 + t2156 * t2205;
t2003 = t2013 * t2216;
t2361 = t2003 + t1883;
t2215 = t2216 ^ 2;
t2276 = t2281 ^ 2;
t2277 = t2285 ^ 2;
t2148 = t2152 ^ 2;
t2165 = qJD(1) ^ 2;
t2317 = t2148 * t2165;
t2323 = t2111 * t2110;
t2184 = -t2119 - t2323;
t2359 = t2151 * t2184;
t2358 = t2153 * t2184;
t2159 = sin(qJ(1));
t2164 = cos(qJ(1));
t2140 = g(1) * t2164 + g(2) * t2159;
t2114 = -pkin(1) * t2165 + pkin(8) * t2305 - t2140;
t2352 = pkin(2) * t2163;
t2269 = -qJ(3) * t2158 - t2352;
t2346 = qJD(1) * t2152;
t2115 = t2269 * t2346;
t2139 = t2159 * g(1) - t2164 * g(2);
t2348 = pkin(8) * t2152;
t2174 = qJDD(1) * pkin(1) + t2165 * t2348 + t2139;
t2170 = t2154 * t2174;
t2168 = -g(3) * t2316 + t2158 * t2170;
t2032 = -t2277 * pkin(2) + t2278 * qJ(3) + (t2115 * t2346 + t2114) * t2163 + t2168;
t2265 = t2285 * qJD(1);
t2210 = t2158 * t2265;
t2212 = t2163 * t2265;
t2347 = t2154 * g(3);
t2033 = -t2119 * pkin(2) - t2347 - t2118 * qJ(3) + (pkin(2) * t2210 - qJ(3) * t2212 - t2174) * t2152;
t1939 = 0.2e1 * qJD(3) * t2111 + t2151 * t2032 - t2153 * t2033;
t2275 = t2110 * t2301;
t2217 = -t2086 + t2275;
t1890 = pkin(3) * t2184 + pkin(9) * t2217 - t1939;
t1940 = -0.2e1 * qJD(3) * t2110 + t2153 * t2032 + t2151 * t2033;
t2087 = -pkin(3) * t2301 - pkin(9) * t2111;
t2354 = t2110 ^ 2;
t1902 = -pkin(3) * t2354 + pkin(9) * t2175 + t2087 * t2301 + t1940;
t1819 = t2157 * t1890 + t2162 * t1902;
t2053 = -pkin(4) * t2137 - pkin(10) * t2076;
t1780 = -pkin(4) * t2276 + pkin(10) * t2205 + t2137 * t2053 + t1819;
t2064 = t2281 * t2137;
t1970 = -t2064 + t1995;
t2236 = t2162 * t1890 - t2157 * t1902;
t2167 = pkin(4) * t2360 - pkin(10) * t1970 + t2236;
t1684 = t2161 * t1780 + t2156 * t2167;
t1941 = pkin(5) * t2013 - pkin(11) * t2015;
t1660 = -pkin(5) * t2215 - t2112 * pkin(11) - t2013 * t1941 + t1684;
t2280 = t2158 * t2114 - t2163 * t2170;
t2027 = qJDD(3) - t2278 * pkin(2) - t2277 * qJ(3) + (qJD(1) * t2115 * t2158 + g(3) * t2163) * t2152 + t2280;
t1947 = -t2175 * pkin(3) - t2354 * pkin(9) + t2111 * t2087 + t2027;
t1836 = -t2205 * pkin(4) - t2276 * pkin(10) + t2076 * t2053 + t1947;
t2201 = t2216 * t2015;
t1726 = t1836 + (-t1882 - t2201) * pkin(5) - t2361 * pkin(11);
t1624 = t1660 * t2155 - t2160 * t1726;
t1625 = t1660 * t2160 + t1726 * t2155;
t1561 = t2155 * t1624 + t2160 * t1625;
t2355 = t2064 + t1995;
t2097 = t2111 * t2301;
t2058 = t2175 - t2097;
t1967 = (qJD(4) + t2137) * t2076 + t2282;
t1989 = t1991 ^ 2;
t1990 = t1993 ^ 2;
t2010 = qJD(6) + t2013;
t2009 = t2010 ^ 2;
t2011 = t2013 ^ 2;
t2012 = t2015 ^ 2;
t2075 = t2076 ^ 2;
t2108 = t2111 ^ 2;
t2133 = t2137 ^ 2;
t2353 = pkin(2) * t2158;
t1734 = t1819 * t2157 + t2162 * t2236;
t2351 = pkin(3) * t1734;
t1876 = -t1967 * t2157 - t1970 * t2162;
t2350 = pkin(3) * t1876;
t2349 = pkin(5) * t2156;
t1683 = t1780 * t2156 - t2161 * t2167;
t1618 = -t1683 * t2161 + t1684 * t2156;
t2343 = t1618 * t2157;
t2342 = t1618 * t2162;
t2341 = t1734 * t2151;
t2340 = t1734 * t2153;
t1823 = t1881 + t1921;
t2339 = t1823 * t2155;
t2338 = t1823 * t2160;
t2337 = t1836 * t2156;
t2336 = t1836 * t2161;
t1929 = -t1945 + t2112;
t2335 = t1929 * t2156;
t2334 = t1929 * t2161;
t2333 = t1947 * t2157;
t2332 = t1947 * t2162;
t2000 = -t2017 + t2113;
t2331 = t2000 * t2157;
t2330 = t2000 * t2162;
t2329 = t2010 * t2155;
t2328 = t2010 * t2160;
t2327 = t2027 * t2151;
t2326 = t2027 * t2153;
t2061 = t2119 - t2323;
t2325 = t2061 * t2151;
t2324 = t2061 * t2153;
t2311 = t2158 * t2163;
t2292 = t2148 * t2311;
t2136 = t2165 * t2292;
t2116 = -t2136 + t2278;
t2322 = t2116 * t2158;
t2321 = t2116 * t2163;
t2117 = t2136 + t2278;
t2320 = t2117 * t2158;
t2319 = t2117 * t2163;
t2318 = t2137 * t2076;
t1659 = t2112 * pkin(5) - pkin(11) * t2215 + t1941 * t2015 + t1683;
t1656 = t2155 * t1659;
t2314 = t2157 * t2076;
t2098 = t2152 * t2174 + t2347;
t2313 = t2158 * t2098;
t2312 = t2158 * t2119;
t1657 = t2160 * t1659;
t2310 = t2162 * t2076;
t2309 = t2163 * t2098;
t2307 = -pkin(5) * t1659 + pkin(11) * t1561;
t2303 = -pkin(5) * t2161 - pkin(4);
t2300 = t2156 * t1921;
t2299 = t2161 * t1921;
t2298 = t1991 * t2329;
t2297 = t2158 * t1945;
t2296 = t2163 * t1945;
t2295 = t2158 * t2323;
t2294 = t2163 * t2323;
t2149 = t2158 ^ 2;
t2293 = t2149 * t2317;
t1891 = -t1990 - t2009;
t1776 = -t1891 * t2155 - t2338;
t2237 = -t2160 * t1883 + t2155 * t2112;
t1811 = (qJD(6) + t2010) * t1991 + t2237;
t2291 = pkin(5) * t1811 + pkin(11) * t1776 + t1656;
t1888 = -t2009 - t1989;
t1761 = t1888 * t2160 - t2365;
t2284 = -t2155 * t1883 - t2160 * t2112;
t1835 = -qJD(6) * t1993 + t2284;
t1933 = t2010 * t1993;
t1807 = t1835 - t1933;
t2290 = pkin(5) * t1807 + pkin(11) * t1761 - t1657;
t1533 = t1561 * t2156 - t1659 * t2161;
t2289 = pkin(4) * t1533 + t2307;
t1981 = -t2012 - t2215;
t1879 = t1981 * t2161 + t2335;
t2288 = pkin(4) * t1879 - t1684;
t1619 = t1683 * t2156 + t2161 * t1684;
t1555 = t1619 * t2157 + t2342;
t1617 = pkin(4) * t1618;
t2287 = pkin(3) * t1555 + t1617;
t1848 = t2015 * t2137 + t2283;
t1851 = -t2003 + t1883;
t1767 = -t1848 * t2156 - t1851 * t2161;
t1769 = -t1848 * t2161 + t1851 * t2156;
t1677 = t1767 * t2162 + t1769 * t2157;
t1765 = pkin(4) * t1767;
t2286 = pkin(3) * t1677 + t1765;
t1735 = t2162 * t1819 - t2157 * t2236;
t1860 = t1939 * t2151 + t2153 * t1940;
t2279 = -t2139 * t2159 - t2164 * t2140;
t1808 = (-qJD(6) + t2010) * t1993 + t2284;
t1932 = t2010 * t1991;
t2182 = -qJD(6) * t1991 - t2237;
t1810 = t1932 + t2182;
t1720 = t1808 * t2160 + t1810 * t2155;
t1873 = t1989 + t1990;
t2274 = pkin(5) * t1873 + pkin(11) * t1720 + t1561;
t1698 = t1776 * t2156 + t1811 * t2161;
t2273 = pkin(4) * t1698 + t2291;
t1695 = t1761 * t2156 + t1807 * t2161;
t2272 = pkin(4) * t1695 + t2290;
t2043 = -t2075 - t2133;
t1951 = t2043 * t2162 + t2331;
t2271 = pkin(3) * t1951 - t1819;
t2135 = qJDD(1) * t2164 - t2159 * t2165;
t2270 = -pkin(7) * t2135 - g(3) * t2159;
t1936 = -t2215 - t2011;
t1856 = t1936 * t2156 + t2362;
t2268 = pkin(4) * t1856 - t1683;
t2107 = -t2293 - t2277;
t2077 = -t2107 * t2158 - t2321;
t2267 = pkin(8) * t2077 - t2313;
t2150 = t2163 ^ 2;
t2144 = t2150 * t2317;
t2123 = -t2144 - t2277;
t2081 = t2123 * t2163 - t2320;
t2266 = pkin(8) * t2081 + t2309;
t1688 = t1720 * t2156 + t1873 * t2161;
t2264 = pkin(4) * t1688 + t2274;
t1534 = t1561 * t2161 + t1659 * t2156;
t1503 = t1533 * t2162 + t1534 * t2157;
t1504 = -t1533 * t2157 + t1534 * t2162;
t1479 = -t1503 * t2151 + t1504 * t2153;
t1560 = -t1624 * t2160 + t1625 * t2155;
t2263 = t1479 * t2158 - t1560 * t2163;
t1556 = t1619 * t2162 - t2343;
t1515 = -t1555 * t2151 + t1556 * t2153;
t2262 = t1515 * t2158 - t1836 * t2163;
t1689 = t1720 * t2161 - t1873 * t2156;
t1620 = t1688 * t2162 + t1689 * t2157;
t1621 = -t1688 * t2157 + t1689 * t2162;
t1558 = -t1620 * t2151 + t1621 * t2153;
t1718 = t1808 * t2155 - t1810 * t2160;
t2261 = t1558 * t2158 - t1718 * t2163;
t1809 = -t1932 + t2182;
t1719 = t1807 * t2160 - t1809 * t2155;
t1920 = t1990 - t1989;
t1691 = t1719 * t2156 - t1920 * t2161;
t1692 = t1719 * t2161 + t1920 * t2156;
t1626 = t1691 * t2162 + t1692 * t2157;
t1627 = -t1691 * t2157 + t1692 * t2162;
t1567 = -t1626 * t2151 + t1627 * t2153;
t1717 = t1807 * t2155 + t1809 * t2160;
t2260 = t1567 * t2158 - t1717 * t2163;
t1696 = t1761 * t2161 - t1807 * t2156;
t1630 = t1695 * t2162 + t1696 * t2157;
t1631 = -t1695 * t2157 + t1696 * t2162;
t1569 = -t1630 * t2151 + t1631 * t2153;
t1760 = t1888 * t2155 + t2363;
t2259 = t1569 * t2158 - t1760 * t2163;
t1699 = t1776 * t2161 - t1811 * t2156;
t1633 = t1698 * t2162 + t1699 * t2157;
t1634 = -t1698 * t2157 + t1699 * t2162;
t1571 = -t1633 * t2151 + t1634 * t2153;
t1775 = t1891 * t2160 - t2339;
t2258 = t1571 * t2158 - t1775 * t2163;
t1928 = -t1990 + t2009;
t1790 = -t1928 * t2155 + t2363;
t1707 = t1790 * t2156 - t1810 * t2161;
t1709 = t1790 * t2161 + t1810 * t2156;
t1643 = t1707 * t2162 + t1709 * t2157;
t1645 = -t1707 * t2157 + t1709 * t2162;
t1577 = -t1643 * t2151 + t1645 * t2153;
t1788 = t1928 * t2160 + t2365;
t2257 = t1577 * t2158 - t1788 * t2163;
t1927 = t1989 - t2009;
t1791 = t1927 * t2160 - t2339;
t1806 = -t1835 - t1933;
t1708 = t1791 * t2156 + t1806 * t2161;
t1710 = t1791 * t2161 - t1806 * t2156;
t1644 = t1708 * t2162 + t1710 * t2157;
t1646 = -t1708 * t2157 + t1710 * t2162;
t1578 = -t1644 * t2151 + t1646 * t2153;
t1789 = t1927 * t2155 + t2338;
t2256 = t1578 * t2158 - t1789 * t2163;
t1795 = -t1835 * t2155 + t1991 * t2328;
t1745 = t1795 * t2156 + t2299;
t1747 = t1795 * t2161 - t2300;
t1663 = t1745 * t2162 + t1747 * t2157;
t1665 = -t1745 * t2157 + t1747 * t2162;
t1608 = -t1663 * t2151 + t1665 * t2153;
t1794 = t1835 * t2160 + t2298;
t2255 = t1608 * t2158 - t1794 * t2163;
t1797 = -t1993 * t2329 + t2160 * t2182;
t1746 = t1797 * t2156 - t2299;
t1748 = t1797 * t2161 + t2300;
t1664 = t1746 * t2162 + t1748 * t2157;
t1666 = -t1746 * t2157 + t1748 * t2162;
t1609 = -t1664 * t2151 + t1666 * t2153;
t1926 = t1993 * t2328;
t1796 = -t2155 * t2182 - t1926;
t2254 = t1609 * t2158 + t1796 * t2163;
t1847 = (0.2e1 * qJD(5) - t2137) * t2015 + t2283;
t1766 = -t1847 * t2156 + t2161 * t2361;
t1768 = -t1847 * t2161 - t2156 * t2361;
t1676 = t1766 * t2162 + t1768 * t2157;
t1678 = -t1766 * t2157 + t1768 * t2162;
t1613 = -t1676 * t2151 + t1678 * t2153;
t1942 = t2012 - t2011;
t2253 = t1613 * t2158 - t1942 * t2163;
t1679 = -t1767 * t2157 + t1769 * t2162;
t1614 = -t1677 * t2151 + t1679 * t2153;
t1895 = -t2011 - t2012;
t2252 = t1614 * t2158 - t1895 * t2163;
t1854 = (-t1991 * t2160 + t1993 * t2155) * t2010;
t1792 = t1854 * t2156 - t1881 * t2161;
t1793 = t1854 * t2161 + t1881 * t2156;
t1701 = t1792 * t2162 + t1793 * t2157;
t1702 = -t1792 * t2157 + t1793 * t2162;
t1640 = -t1701 * t2151 + t1702 * t2153;
t1853 = -t1926 - t2298;
t2251 = t1640 * t2158 - t1853 * t2163;
t1654 = t1735 * t2153 - t2341;
t2250 = t1654 * t2158 - t1947 * t2163;
t1857 = t1936 * t2161 - t2364;
t1777 = t1856 * t2162 + t1857 * t2157;
t1778 = -t1856 * t2157 + t1857 * t2162;
t1686 = -t1777 * t2151 + t1778 * t2153;
t2249 = t1686 * t2158 - t1847 * t2163;
t1880 = -t1981 * t2156 + t2334;
t1802 = t1879 * t2162 + t1880 * t2157;
t1803 = -t1879 * t2157 + t1880 * t2162;
t1715 = -t1802 * t2151 + t1803 * t2153;
t2248 = t1715 * t2158 - t2163 * t2361;
t1999 = -t2012 + t2215;
t1884 = t1999 * t2161 + t2364;
t1886 = -t1999 * t2156 + t2362;
t1812 = t1884 * t2162 + t1886 * t2157;
t1814 = -t1884 * t2157 + t1886 * t2162;
t1723 = -t1812 * t2151 + t1814 * t2153;
t2247 = t1723 * t2158 - t1851 * t2163;
t1998 = t2011 - t2215;
t1885 = t1998 * t2156 - t2334;
t1887 = t1998 * t2161 + t2335;
t1813 = t1885 * t2162 + t1887 * t2157;
t1815 = -t1885 * t2157 + t1887 * t2162;
t1724 = -t1813 * t2151 + t1815 * t2153;
t2246 = t1724 * t2158 + t1848 * t2163;
t2177 = t2161 * t2201;
t2180 = t2156 * t2003;
t1922 = t2180 + t2177;
t2178 = t2161 * t2003;
t2179 = t2156 * t2201;
t1923 = t2178 - t2179;
t1839 = t1922 * t2162 + t1923 * t2157;
t1840 = -t1922 * t2157 + t1923 * t2162;
t1754 = -t1839 * t2151 + t1840 * t2153;
t2245 = t1754 * t2158 + t2112 * t2163;
t1966 = (qJD(4) - t2137) * t2076 + t2282;
t1875 = -t1966 * t2157 + t2162 * t2355;
t1877 = -t1966 * t2162 - t2157 * t2355;
t1800 = -t1875 * t2151 + t1877 * t2153;
t2016 = t2075 - t2276;
t2244 = t1800 * t2158 - t2016 * t2163;
t1878 = -t1967 * t2162 + t1970 * t2157;
t1801 = -t1876 * t2151 + t1878 * t2153;
t1978 = -t2276 - t2075;
t2243 = t1801 * t2158 - t1978 * t2163;
t2007 = -t2133 - t2276;
t1924 = t2007 * t2157 + t2366;
t1925 = t2007 * t2162 - t2367;
t1846 = -t1924 * t2151 + t1925 * t2153;
t2242 = t1846 * t2158 - t1966 * t2163;
t2241 = t1860 * t2158 - t2027 * t2163;
t1952 = -t2043 * t2157 + t2330;
t1863 = -t1951 * t2151 + t1952 * t2153;
t2240 = t1863 * t2158 - t2163 * t2355;
t2055 = -t2075 + t2133;
t1962 = t2055 * t2162 + t2367;
t1964 = -t2055 * t2157 + t2366;
t1870 = -t1962 * t2151 + t1964 * t2153;
t2239 = t1870 * t2158 - t1970 * t2163;
t2054 = t2276 - t2133;
t1963 = t2054 * t2157 - t2330;
t1965 = t2054 * t2162 + t2331;
t1871 = -t1963 * t2151 + t1965 * t2153;
t2238 = t1871 * t2158 + t1967 * t2163;
t1987 = (t2157 * t2281 + t2310) * t2137;
t1988 = (t2162 * t2281 - t2314) * t2137;
t1919 = -t1987 * t2151 + t1988 * t2153;
t2235 = t1919 * t2158 + t2113 * t2163;
t1859 = -t1939 * t2153 + t1940 * t2151;
t2057 = t2097 + t2175;
t2060 = t2086 + t2275;
t1984 = t2057 * t2153 - t2060 * t2151;
t2078 = -t2108 + t2354;
t2234 = t1984 * t2158 + t2078 * t2163;
t1985 = t2058 * t2153 - t2151 * t2217;
t2050 = t2108 + t2354;
t2233 = t1985 * t2158 + t2050 * t2163;
t2073 = -t2144 - t2354;
t1997 = t2073 * t2153 - t2359;
t2232 = t1997 * t2158 + t2057 * t2163;
t2095 = -t2108 - t2144;
t2021 = -t2095 * t2151 + t2324;
t2231 = t2021 * t2158 - t2060 * t2163;
t2094 = -t2108 + t2144;
t2022 = -t2094 * t2151 + t2358;
t2230 = t2022 * t2158 + t2163 * t2217;
t2093 = -t2144 + t2354;
t2023 = t2093 * t2153 + t2325;
t2229 = t2023 * t2158 - t2058 * t2163;
t2071 = g(3) * t2315 + t2280;
t2072 = t2163 * t2114 + t2168;
t2228 = -t2163 * t2071 + t2158 * t2072;
t2008 = t2071 * t2158 + t2072 * t2163;
t2127 = t2152 * t2212;
t2089 = t2127 + t2118;
t2126 = t2152 * t2210;
t2092 = t2119 - t2126;
t2227 = t2089 * t2163 + t2092 * t2158;
t2090 = -t2127 + t2118;
t2091 = t2119 + t2126;
t2226 = -t2090 * t2163 + t2091 * t2158;
t2225 = t2107 * t2163 - t2322;
t2122 = t2144 - t2277;
t2224 = t2122 * t2158 + t2321;
t2121 = t2277 - t2293;
t2223 = t2121 * t2163 + t2320;
t2222 = t2123 * t2158 + t2319;
t2221 = t2139 * t2164 - t2140 * t2159;
t2220 = pkin(3) * t1503 + t2289;
t2219 = pkin(3) * t1802 + t2288;
t2218 = t2152 * t2278;
t2214 = t2152 * t2265;
t2213 = t2158 * t2017;
t2211 = t2163 * t2017;
t1841 = t2161 * t1882 - t2180;
t1842 = -t2156 * t1882 - t2178;
t1756 = t1841 * t2162 + t1842 * t2157;
t1758 = -t1841 * t2157 + t1842 * t2162;
t1672 = -t1756 * t2151 + t1758 * t2153;
t2209 = t1672 * t2158 + t2296;
t1843 = t2156 * t1883 - t2177;
t1844 = t2161 * t1883 + t2179;
t1757 = t1843 * t2162 + t1844 * t2157;
t1759 = -t1843 * t2157 + t1844 * t2162;
t1673 = -t1757 * t2151 + t1759 * t2153;
t2208 = t1673 * t2158 - t2296;
t2047 = -t2151 * t2175 - t2153 * t2275;
t2207 = t2047 * t2158 + t2294;
t2049 = t2086 * t2153 + t2097 * t2151;
t2206 = t2049 * t2158 - t2294;
t2204 = pkin(3) * t1630 + t2272;
t2203 = pkin(3) * t1633 + t2273;
t2202 = pkin(3) * t1777 + t2268;
t2200 = pkin(3) * t1924 + t2236;
t1480 = pkin(10) * t1534 + (-pkin(11) * t2156 + t2303) * t1560;
t1494 = -pkin(10) * t1533 + (-pkin(11) * t2161 + t2349) * t1560;
t1463 = -pkin(3) * t1560 + pkin(9) * t1504 + t1480 * t2162 + t1494 * t2157;
t1465 = -pkin(9) * t1503 - t1480 * t2157 + t1494 * t2162;
t1478 = t1503 * t2153 + t1504 * t2151;
t1448 = -qJ(3) * t1478 - t1463 * t2151 + t1465 * t2153;
t1464 = -pkin(2) * t1478 - t2220;
t1477 = t1479 * t2163 + t1560 * t2158;
t2199 = pkin(8) * t1477 + t1448 * t2158 + t1464 * t2163;
t1540 = -pkin(11) * t1718 - t1560;
t1520 = pkin(10) * t1689 + t2156 * t1540 + t1718 * t2303;
t1527 = -pkin(10) * t1688 + t1540 * t2161 + t1718 * t2349;
t1481 = -pkin(3) * t1718 + pkin(9) * t1621 + t1520 * t2162 + t1527 * t2157;
t1486 = -pkin(9) * t1620 - t1520 * t2157 + t1527 * t2162;
t1557 = t1620 * t2153 + t1621 * t2151;
t1469 = -qJ(3) * t1557 - t1481 * t2151 + t1486 * t2153;
t2183 = pkin(3) * t1620 + t2264;
t1500 = -pkin(2) * t1557 - t2183;
t1539 = t1558 * t2163 + t1718 * t2158;
t2198 = pkin(8) * t1539 + t1469 * t2158 + t1500 * t2163;
t1591 = -pkin(5) * t1760 + t1624;
t1642 = -pkin(11) * t1760 + t1656;
t1530 = -pkin(4) * t1760 + pkin(10) * t1696 + t1591 * t2161 + t1642 * t2156;
t1535 = -pkin(10) * t1695 - t1591 * t2156 + t1642 * t2161;
t1492 = -pkin(3) * t1760 + pkin(9) * t1631 + t1530 * t2162 + t1535 * t2157;
t1497 = -pkin(9) * t1630 - t1530 * t2157 + t1535 * t2162;
t1568 = t1630 * t2153 + t1631 * t2151;
t1472 = -qJ(3) * t1568 - t1492 * t2151 + t1497 * t2153;
t1508 = -pkin(2) * t1568 - t2204;
t1553 = t1569 * t2163 + t1760 * t2158;
t2197 = pkin(8) * t1553 + t1472 * t2158 + t1508 * t2163;
t1593 = -pkin(5) * t1775 + t1625;
t1647 = -pkin(11) * t1775 + t1657;
t1531 = -pkin(4) * t1775 + pkin(10) * t1699 + t1593 * t2161 + t1647 * t2156;
t1536 = -pkin(10) * t1698 - t1593 * t2156 + t1647 * t2161;
t1493 = -pkin(3) * t1775 + pkin(9) * t1634 + t1531 * t2162 + t1536 * t2157;
t1498 = -pkin(9) * t1633 - t1531 * t2157 + t1536 * t2162;
t1570 = t1633 * t2153 + t1634 * t2151;
t1473 = -qJ(3) * t1570 - t1493 * t2151 + t1498 * t2153;
t1509 = -pkin(2) * t1570 - t2203;
t1554 = t1571 * t2163 + t1775 * t2158;
t2196 = pkin(8) * t1554 + t1473 * t2158 + t1509 * t2163;
t1597 = -pkin(4) * t1836 + pkin(10) * t1619;
t1507 = -pkin(3) * t1836 + pkin(9) * t1556 - pkin(10) * t2343 + t1597 * t2162;
t1511 = -pkin(9) * t1555 - pkin(10) * t2342 - t1597 * t2157;
t1514 = t1555 * t2153 + t1556 * t2151;
t1476 = -qJ(3) * t1514 - t1507 * t2151 + t1511 * t2153;
t1489 = -pkin(2) * t1514 - t2287;
t1510 = t1515 * t2163 + t1836 * t2158;
t2195 = pkin(8) * t1510 + t1476 * t2158 + t1489 * t2163;
t1587 = -pkin(4) * t1895 + pkin(10) * t1769 + t1619;
t1590 = -pkin(10) * t1767 - t1618;
t1528 = -pkin(3) * t1895 + pkin(9) * t1679 + t1587 * t2162 + t1590 * t2157;
t1529 = -pkin(9) * t1677 - t1587 * t2157 + t1590 * t2162;
t1612 = t1677 * t2153 + t1679 * t2151;
t1488 = -qJ(3) * t1612 - t1528 * t2151 + t1529 * t2153;
t1572 = -pkin(2) * t1612 - t2286;
t1600 = t1614 * t2163 + t1895 * t2158;
t2194 = pkin(8) * t1600 + t1488 * t2158 + t1572 * t2163;
t1727 = -pkin(4) * t1847 + pkin(10) * t1857 - t2336;
t1764 = -pkin(10) * t1856 + t2337;
t1616 = -pkin(3) * t1847 + pkin(9) * t1778 + t1727 * t2162 + t1764 * t2157;
t1641 = -pkin(9) * t1777 - t1727 * t2157 + t1764 * t2162;
t1685 = t1777 * t2153 + t1778 * t2151;
t1538 = -qJ(3) * t1685 - t1616 * t2151 + t1641 * t2153;
t1586 = -pkin(2) * t1685 - t2202;
t1655 = t1686 * t2163 + t1847 * t2158;
t2193 = pkin(8) * t1655 + t1538 * t2158 + t1586 * t2163;
t1733 = -pkin(4) * t2361 + pkin(10) * t1880 + t2337;
t1786 = -pkin(10) * t1879 + t2336;
t1632 = -pkin(3) * t2361 + pkin(9) * t1803 + t1733 * t2162 + t1786 * t2157;
t1650 = -pkin(9) * t1802 - t1733 * t2157 + t1786 * t2162;
t1714 = t1802 * t2153 + t1803 * t2151;
t1552 = -qJ(3) * t1714 - t1632 * t2151 + t1650 * t2153;
t1594 = -pkin(2) * t1714 - t2219;
t1669 = t1715 * t2163 + t2158 * t2361;
t2192 = pkin(8) * t1669 + t1552 * t2158 + t1594 * t2163;
t1653 = t1735 * t2151 + t2340;
t1713 = -pkin(3) * t1947 + pkin(9) * t1735;
t1584 = -pkin(9) * t2340 - qJ(3) * t1653 - t1713 * t2151;
t1610 = -pkin(2) * t1653 - t2351;
t1652 = t1654 * t2163 + t1947 * t2158;
t2191 = pkin(8) * t1652 + t1584 * t2158 + t1610 * t2163;
t1690 = -pkin(3) * t1978 + pkin(9) * t1878 + t1735;
t1700 = -pkin(9) * t1876 - t1734;
t1799 = t1876 * t2153 + t1878 * t2151;
t1596 = -qJ(3) * t1799 - t1690 * t2151 + t1700 * t2153;
t1742 = -pkin(2) * t1799 - t2350;
t1781 = t1801 * t2163 + t1978 * t2158;
t2190 = pkin(8) * t1781 + t1596 * t2158 + t1742 * t2163;
t1821 = -pkin(3) * t1966 + pkin(9) * t1925 - t2332;
t1845 = t1924 * t2153 + t1925 * t2151;
t1858 = -pkin(9) * t1924 + t2333;
t1712 = -qJ(3) * t1845 - t1821 * t2151 + t1858 * t2153;
t1730 = -pkin(2) * t1845 - t2200;
t1816 = t1846 * t2163 + t1966 * t2158;
t2189 = pkin(8) * t1816 + t1712 * t2158 + t1730 * t2163;
t1825 = -pkin(3) * t2355 + pkin(9) * t1952 + t2333;
t1861 = -pkin(9) * t1951 + t2332;
t1862 = t1951 * t2153 + t1952 * t2151;
t1728 = -qJ(3) * t1862 - t1825 * t2151 + t1861 * t2153;
t1736 = -pkin(2) * t1862 - t2271;
t1826 = t1863 * t2163 + t2158 * t2355;
t2188 = pkin(8) * t1826 + t1728 * t2158 + t1736 * t2163;
t1996 = t2073 * t2151 + t2358;
t1894 = -pkin(2) * t1996 + t1939;
t1938 = -qJ(3) * t1996 + t2327;
t1961 = t1997 * t2163 - t2057 * t2158;
t2187 = pkin(8) * t1961 + t1894 * t2163 + t1938 * t2158;
t2018 = t2095 * t2153 + t2325;
t1898 = -pkin(2) * t2018 + t1940;
t1949 = -qJ(3) * t2018 + t2326;
t1973 = t2021 * t2163 + t2060 * t2158;
t2186 = pkin(8) * t1973 + t1898 * t2163 + t1949 * t2158;
t2044 = t2090 * t2158 + t2091 * t2163;
t2185 = pkin(8) * t2044 + t2008;
t1983 = t2058 * t2151 + t2153 * t2217;
t1827 = -qJ(3) * t1983 - t1859;
t1948 = t1985 * t2163 - t2050 * t2158;
t2181 = pkin(8) * t1948 + t1827 * t2158 - t1983 * t2352;
t2176 = -t2154 * t2165 + t2265;
t1832 = t1860 * t2163 + t2027 * t2158;
t2173 = pkin(8) * t1832 + t1859 * t2269;
t1957 = -t2064 * t2157 + t2162 * t2205;
t1958 = -t2064 * t2162 - t2157 * t2205;
t1866 = -t1957 * t2151 + t1958 * t2153;
t2172 = t2158 * t1866 + t2211;
t1959 = t1995 * t2157 - t2137 * t2310;
t1960 = t1995 * t2162 + t2137 * t2314;
t1867 = -t1959 * t2151 + t1960 * t2153;
t2171 = t2158 * t1867 - t2211;
t2169 = t2152 * t2317 + t2154 * t2214;
t2134 = qJDD(1) * t2159 + t2164 * t2165;
t2131 = t2154 * t2278;
t2125 = -t2144 - t2293;
t2124 = -t2144 + t2293;
t2120 = -pkin(7) * t2134 + g(3) * t2164;
t2105 = t2154 * t2163 * t2119;
t2104 = t2119 * t2315;
t2096 = t2285 * (t2149 + t2150) * t2346;
t2088 = (t2304 + (0.2e1 * qJD(2) + t2345) * t2344) * t2152;
t2083 = t2163 * t2118 - t2149 * t2214;
t2082 = -t2150 * t2214 - t2312;
t2080 = t2122 * t2163 - t2322;
t2079 = -t2121 * t2158 + t2319;
t2069 = (t2154 * t2118 + t2163 * t2169) * t2158;
t2068 = (t2148 * t2163 * t2176 + t2152 * t2118) * t2158;
t2067 = -t2176 * t2292 + t2104;
t2066 = -t2169 * t2311 + t2105;
t2052 = (t2110 * t2153 - t2111 * t2151) * t2301;
t2051 = (t2110 * t2151 + t2111 * t2153) * t2301;
t2048 = t2086 * t2151 - t2097 * t2153;
t2046 = -t2151 * t2275 + t2153 * t2175;
t2045 = -t2089 * t2158 + t2092 * t2163;
t2042 = t2152 * t2092 + t2154 * t2222;
t2041 = -t2152 * t2091 + t2154 * t2224;
t2040 = -t2152 * t2090 + t2154 * t2223;
t2039 = -t2154 * t2092 + t2152 * t2222;
t2038 = t2154 * t2091 + t2152 * t2224;
t2037 = t2154 * t2090 + t2152 * t2223;
t2036 = -t2152 * t2088 + t2154 * t2225;
t2035 = t2154 * t2088 + t2152 * t2225;
t2034 = t2052 * t2163 - t2312;
t2031 = -t2152 * t2124 + t2154 * t2227;
t2030 = -t2152 * t2125 + t2154 * t2226;
t2029 = t2154 * t2124 + t2152 * t2227;
t2028 = t2154 * t2125 + t2152 * t2226;
t2020 = t2093 * t2151 - t2324;
t2019 = t2094 * t2153 + t2359;
t2006 = t2049 * t2163 + t2295;
t2005 = t2047 * t2163 - t2295;
t1982 = t2057 * t2151 + t2060 * t2153;
t1980 = t2152 * t2098 + t2154 * t2228;
t1979 = -t2154 * t2098 + t2152 * t2228;
t1977 = t2052 * t2154 * t2158 - t2051 * t2152 + t2105;
t1976 = t2051 * t2154 + t2052 * t2316 + t2104;
t1975 = t2023 * t2163 + t2058 * t2158;
t1974 = t2022 * t2163 - t2158 * t2217;
t1972 = t1984 * t2163 - t2078 * t2158;
t1956 = -t2152 * t2048 + t2154 * t2206;
t1955 = -t2152 * t2046 + t2154 * t2207;
t1954 = t2154 * t2048 + t2152 * t2206;
t1953 = t2154 * t2046 + t2152 * t2207;
t1950 = -t2313 + (-t2039 * t2152 - t2042 * t2154) * pkin(8);
t1946 = -t2309 + (-t2035 * t2152 - t2036 * t2154) * pkin(8);
t1944 = -pkin(1) * t2039 + t2152 * t2071 + t2154 * t2266;
t1943 = pkin(1) * t2042 - t2154 * t2071 + t2152 * t2266;
t1935 = -pkin(1) * t2035 + t2152 * t2072 + t2154 * t2267;
t1934 = pkin(1) * t2036 - t2154 * t2072 + t2152 * t2267;
t1918 = t1987 * t2153 + t1988 * t2151;
t1917 = -pkin(2) * t2060 + qJ(3) * t2021 + t2327;
t1916 = pkin(1) * t1980 + t2008 * t2348;
t1915 = pkin(8) * t2008 * t2154 - pkin(1) * t1979;
t1914 = -t2152 * t2020 + t2154 * t2229;
t1913 = -t2152 * t2019 + t2154 * t2230;
t1912 = -t2152 * t2018 + t2154 * t2231;
t1911 = t2154 * t2020 + t2152 * t2229;
t1910 = t2154 * t2019 + t2152 * t2230;
t1909 = t2154 * t2018 + t2152 * t2231;
t1908 = pkin(2) * t2057 + qJ(3) * t1997 - t2326;
t1907 = t1919 * t2163 - t2113 * t2158;
t1906 = -pkin(1) * t2028 + t2154 * t2185;
t1905 = pkin(1) * t2030 + t2152 * t2185;
t1904 = (-t1979 * t2152 - t1980 * t2154) * pkin(8);
t1903 = (-t2028 * t2152 - t2030 * t2154) * pkin(8) - t2228;
t1901 = -t2152 * t1996 + t2154 * t2232;
t1900 = t2154 * t1996 + t2152 * t2232;
t1897 = -t2152 * t1982 + t2154 * t2234;
t1896 = t2154 * t1982 + t2152 * t2234;
t1893 = -t2152 * t1983 + t2154 * t2233;
t1892 = t2154 * t1983 + t2152 * t2233;
t1869 = t1963 * t2153 + t1965 * t2151;
t1868 = t1962 * t2153 + t1964 * t2151;
t1865 = t1959 * t2153 + t1960 * t2151;
t1864 = t1957 * t2153 + t1958 * t2151;
t1838 = t2163 * t1867 + t2213;
t1837 = t2163 * t1866 - t2213;
t1833 = -pkin(2) * t2027 + qJ(3) * t1860;
t1831 = -t2152 * t1918 + t2154 * t2235;
t1830 = t2154 * t1918 + t2152 * t2235;
t1829 = t1871 * t2163 - t1967 * t2158;
t1828 = t1870 * t2163 + t1970 * t2158;
t1820 = pkin(2) * t2050 + qJ(3) * t1985 + t1860;
t1798 = t1875 * t2153 + t1877 * t2151;
t1787 = t1800 * t2163 + t2016 * t2158;
t1785 = -t2152 * t1865 + t2154 * t2171;
t1784 = -t2152 * t1864 + t2154 * t2172;
t1783 = t2154 * t1865 + t2152 * t2171;
t1782 = t2154 * t1864 + t2152 * t2172;
t1774 = -t2152 * t1869 + t2154 * t2238;
t1773 = -t2152 * t1868 + t2154 * t2239;
t1772 = t2154 * t1869 + t2152 * t2238;
t1771 = t2154 * t1868 + t2152 * t2239;
t1753 = t1839 * t2153 + t1840 * t2151;
t1752 = -t2152 * t1862 + t2154 * t2240;
t1751 = t2154 * t1862 + t2152 * t2240;
t1750 = -t2152 * t1859 + t2154 * t2241;
t1749 = t2154 * t1859 + t2152 * t2241;
t1744 = t1754 * t2163 - t2112 * t2158;
t1743 = -t2158 * t1898 + t2163 * t1949 + (-t1909 * t2152 - t1912 * t2154) * pkin(8);
t1741 = -t2152 * t1845 + t2154 * t2242;
t1740 = t2154 * t1845 + t2152 * t2242;
t1739 = -t2158 * t1894 + t2163 * t1938 + (-t1900 * t2152 - t1901 * t2154) * pkin(8);
t1738 = -pkin(1) * t1909 - t2152 * t1917 + t2154 * t2186;
t1737 = pkin(1) * t1912 + t2154 * t1917 + t2152 * t2186;
t1732 = -pkin(1) * t1900 - t2152 * t1908 + t2154 * t2187;
t1731 = pkin(1) * t1901 + t2154 * t1908 + t2152 * t2187;
t1729 = t1983 * t2353 + t2163 * t1827 + (-t1892 * t2152 - t1893 * t2154) * pkin(8);
t1722 = t1813 * t2153 + t1815 * t2151;
t1721 = t1812 * t2153 + t1814 * t2151;
t1711 = -pkin(2) * t2355 + qJ(3) * t1863 + t1825 * t2153 + t1861 * t2151;
t1706 = -t2152 * t1798 + t2154 * t2244;
t1705 = t2154 * t1798 + t2152 * t2244;
t1704 = -t2152 * t1799 + t2154 * t2243;
t1703 = t2154 * t1799 + t2152 * t2243;
t1693 = -pkin(2) * t1966 + qJ(3) * t1846 + t1821 * t2153 + t1858 * t2151;
t1681 = -pkin(1) * t1892 - t2152 * t1820 + t2154 * t2181;
t1680 = pkin(1) * t1893 + t2154 * t1820 + t2152 * t2181;
t1675 = t1724 * t2163 - t1848 * t2158;
t1674 = t1723 * t2163 + t1851 * t2158;
t1671 = t1757 * t2153 + t1759 * t2151;
t1670 = t1756 * t2153 + t1758 * t2151;
t1668 = -t2152 * t1753 + t2154 * t2245;
t1667 = t2154 * t1753 + t2152 * t2245;
t1662 = t1673 * t2163 + t2297;
t1661 = t1672 * t2163 - t2297;
t1651 = (-qJ(3) * t2163 + t2353) * t1859 + (-t1749 * t2152 - t1750 * t2154) * pkin(8);
t1649 = -pkin(1) * t1749 - t2152 * t1833 + t2154 * t2173;
t1648 = pkin(1) * t1750 + t2154 * t1833 + t2152 * t2173;
t1639 = t1701 * t2153 + t1702 * t2151;
t1638 = -t2152 * t1722 + t2154 * t2246;
t1637 = -t2152 * t1721 + t2154 * t2247;
t1636 = t2154 * t1722 + t2152 * t2246;
t1635 = t2154 * t1721 + t2152 * t2247;
t1629 = -t2152 * t1714 + t2154 * t2248;
t1628 = t2154 * t1714 + t2152 * t2248;
t1615 = t1640 * t2163 + t1853 * t2158;
t1611 = t1676 * t2153 + t1678 * t2151;
t1607 = t1664 * t2153 + t1666 * t2151;
t1606 = t1663 * t2153 + t1665 * t2151;
t1605 = t1613 * t2163 + t1942 * t2158;
t1604 = -t2152 * t1671 + t2154 * t2208;
t1603 = -t2152 * t1670 + t2154 * t2209;
t1602 = t2154 * t1671 + t2152 * t2208;
t1601 = t2154 * t1670 + t2152 * t2209;
t1599 = -t2152 * t1685 + t2154 * t2249;
t1598 = t2154 * t1685 + t2152 * t2249;
t1595 = -pkin(2) * t1978 + qJ(3) * t1801 + t1690 * t2153 + t1700 * t2151;
t1592 = t2163 * t1728 - t2158 * t1736 + (-t1751 * t2152 - t1752 * t2154) * pkin(8);
t1589 = t1609 * t2163 - t1796 * t2158;
t1588 = t1608 * t2163 + t1794 * t2158;
t1585 = t2163 * t1712 - t2158 * t1730 + (-t1740 * t2152 - t1741 * t2154) * pkin(8);
t1583 = -t2152 * t1653 + t2154 * t2250;
t1582 = t2154 * t1653 + t2152 * t2250;
t1581 = -pkin(2) * t1947 - pkin(9) * t2341 + qJ(3) * t1654 + t1713 * t2153;
t1580 = -pkin(1) * t1751 - t2152 * t1711 + t2154 * t2188;
t1579 = pkin(1) * t1752 + t2154 * t1711 + t2152 * t2188;
t1576 = t1644 * t2153 + t1646 * t2151;
t1575 = t1643 * t2153 + t1645 * t2151;
t1574 = -pkin(1) * t1740 - t2152 * t1693 + t2154 * t2189;
t1573 = pkin(1) * t1741 + t2154 * t1693 + t2152 * t2189;
t1566 = t1626 * t2153 + t1627 * t2151;
t1565 = -t2152 * t1639 + t2154 * t2251;
t1564 = t2154 * t1639 + t2152 * t2251;
t1563 = t1578 * t2163 + t1789 * t2158;
t1562 = t1577 * t2163 + t1788 * t2158;
t1551 = -t2152 * t1611 + t2154 * t2253;
t1550 = t2154 * t1611 + t2152 * t2253;
t1549 = -t2152 * t1612 + t2154 * t2252;
t1548 = t2154 * t1612 + t2152 * t2252;
t1547 = -pkin(2) * t2361 + qJ(3) * t1715 + t1632 * t2153 + t1650 * t2151;
t1546 = t1567 * t2163 + t1717 * t2158;
t1545 = t2163 * t1596 - t2158 * t1742 + (-t1703 * t2152 - t1704 * t2154) * pkin(8);
t1544 = -t2152 * t1607 + t2154 * t2254;
t1543 = -t2152 * t1606 + t2154 * t2255;
t1542 = t2154 * t1607 + t2152 * t2254;
t1541 = t2154 * t1606 + t2152 * t2255;
t1537 = -pkin(2) * t1847 + qJ(3) * t1686 + t1616 * t2153 + t1641 * t2151;
t1526 = -pkin(1) * t1703 - t2152 * t1595 + t2154 * t2190;
t1525 = pkin(1) * t1704 + t2154 * t1595 + t2152 * t2190;
t1524 = -t2152 * t1576 + t2154 * t2256;
t1523 = -t2152 * t1575 + t2154 * t2257;
t1522 = t2154 * t1576 + t2152 * t2256;
t1521 = t2154 * t1575 + t2152 * t2257;
t1519 = -t2152 * t1570 + t2154 * t2258;
t1518 = t2154 * t1570 + t2152 * t2258;
t1517 = -t2152 * t1568 + t2154 * t2259;
t1516 = t2154 * t1568 + t2152 * t2259;
t1513 = -t2152 * t1566 + t2154 * t2260;
t1512 = t2154 * t1566 + t2152 * t2260;
t1506 = -t2152 * t1557 + t2154 * t2261;
t1505 = t2154 * t1557 + t2152 * t2261;
t1502 = t2163 * t1552 - t2158 * t1594 + (-t1628 * t2152 - t1629 * t2154) * pkin(8);
t1501 = t2163 * t1584 - t2158 * t1610 + (-t1582 * t2152 - t1583 * t2154) * pkin(8);
t1499 = t2163 * t1538 - t2158 * t1586 + (-t1598 * t2152 - t1599 * t2154) * pkin(8);
t1496 = -pkin(1) * t1582 - t2152 * t1581 + t2154 * t2191;
t1495 = pkin(1) * t1583 + t2154 * t1581 + t2152 * t2191;
t1491 = -pkin(1) * t1628 - t2152 * t1547 + t2154 * t2192;
t1490 = pkin(1) * t1629 + t2154 * t1547 + t2152 * t2192;
t1487 = -pkin(2) * t1895 + qJ(3) * t1614 + t1528 * t2153 + t1529 * t2151;
t1485 = -pkin(1) * t1598 - t2152 * t1537 + t2154 * t2193;
t1484 = pkin(1) * t1599 + t2154 * t1537 + t2152 * t2193;
t1483 = -t2152 * t1514 + t2154 * t2262;
t1482 = t2154 * t1514 + t2152 * t2262;
t1475 = -pkin(2) * t1836 + qJ(3) * t1515 + t1507 * t2153 + t1511 * t2151;
t1474 = t2163 * t1488 - t2158 * t1572 + (-t1548 * t2152 - t1549 * t2154) * pkin(8);
t1471 = -pkin(2) * t1775 + qJ(3) * t1571 + t1493 * t2153 + t1498 * t2151;
t1470 = -pkin(2) * t1760 + qJ(3) * t1569 + t1492 * t2153 + t1497 * t2151;
t1468 = -pkin(2) * t1718 + qJ(3) * t1558 + t1481 * t2153 + t1486 * t2151;
t1467 = -pkin(1) * t1548 - t2152 * t1487 + t2154 * t2194;
t1466 = pkin(1) * t1549 + t2154 * t1487 + t2152 * t2194;
t1462 = -t2152 * t1478 + t2154 * t2263;
t1461 = t2154 * t1478 + t2152 * t2263;
t1460 = t2163 * t1473 - t2158 * t1509 + (-t1518 * t2152 - t1519 * t2154) * pkin(8);
t1459 = t2163 * t1472 - t2158 * t1508 + (-t1516 * t2152 - t1517 * t2154) * pkin(8);
t1458 = t2163 * t1469 - t2158 * t1500 + (-t1505 * t2152 - t1506 * t2154) * pkin(8);
t1457 = t2163 * t1476 - t2158 * t1489 + (-t1482 * t2152 - t1483 * t2154) * pkin(8);
t1456 = -pkin(1) * t1518 - t2152 * t1471 + t2154 * t2196;
t1455 = pkin(1) * t1519 + t2154 * t1471 + t2152 * t2196;
t1454 = -pkin(1) * t1516 - t2152 * t1470 + t2154 * t2197;
t1453 = pkin(1) * t1517 + t2154 * t1470 + t2152 * t2197;
t1452 = -pkin(1) * t1482 - t2152 * t1475 + t2154 * t2195;
t1451 = pkin(1) * t1483 + t2154 * t1475 + t2152 * t2195;
t1450 = -pkin(1) * t1505 - t2152 * t1468 + t2154 * t2198;
t1449 = pkin(1) * t1506 + t2154 * t1468 + t2152 * t2198;
t1447 = -pkin(2) * t1560 + qJ(3) * t1479 + t1463 * t2153 + t1465 * t2151;
t1446 = t2163 * t1448 - t2158 * t1464 + (-t1461 * t2152 - t1462 * t2154) * pkin(8);
t1445 = -pkin(1) * t1461 - t2152 * t1447 + t2154 * t2199;
t1444 = pkin(1) * t1462 + t2154 * t1447 + t2152 * t2199;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2135, 0, -t2134, 0, t2270, -t2120, -t2221, -pkin(7) * t2221, -t2069 * t2159 + t2083 * t2164, -t2031 * t2159 + t2045 * t2164, -t2040 * t2159 + t2079 * t2164, -t2066 * t2159 + t2082 * t2164, -t2041 * t2159 + t2080 * t2164, t2164 * t2096 + t2159 * t2218, t2164 * t1950 - t2159 * t1944 - pkin(7) * (t2042 * t2164 + t2081 * t2159), t2164 * t1946 - t2159 * t1935 - pkin(7) * (t2036 * t2164 + t2077 * t2159), t2164 * t1903 - t2159 * t1906 - pkin(7) * (t2030 * t2164 + t2044 * t2159), t2164 * t1904 - t2159 * t1915 - pkin(7) * (t1980 * t2164 + t2008 * t2159), -t1956 * t2159 + t2006 * t2164, -t1897 * t2159 + t1972 * t2164, -t1913 * t2159 + t1974 * t2164, -t1955 * t2159 + t2005 * t2164, -t1914 * t2159 + t1975 * t2164, -t1977 * t2159 + t2034 * t2164, t2164 * t1739 - t2159 * t1732 - pkin(7) * (t1901 * t2164 + t1961 * t2159), t2164 * t1743 - t2159 * t1738 - pkin(7) * (t1912 * t2164 + t1973 * t2159), t2164 * t1729 - t2159 * t1681 - pkin(7) * (t1893 * t2164 + t1948 * t2159), t2164 * t1651 - t2159 * t1649 - pkin(7) * (t1750 * t2164 + t1832 * t2159), -t1785 * t2159 + t1838 * t2164, -t1706 * t2159 + t1787 * t2164, -t1773 * t2159 + t1828 * t2164, -t1784 * t2159 + t1837 * t2164, -t1774 * t2159 + t1829 * t2164, -t1831 * t2159 + t1907 * t2164, t2164 * t1585 - t2159 * t1574 - pkin(7) * (t1741 * t2164 + t1816 * t2159), t2164 * t1592 - t2159 * t1580 - pkin(7) * (t1752 * t2164 + t1826 * t2159), t2164 * t1545 - t2159 * t1526 - pkin(7) * (t1704 * t2164 + t1781 * t2159), t2164 * t1501 - t2159 * t1496 - pkin(7) * (t1583 * t2164 + t1652 * t2159), -t1604 * t2159 + t1662 * t2164, -t1551 * t2159 + t1605 * t2164, -t1637 * t2159 + t1674 * t2164, -t1603 * t2159 + t1661 * t2164, -t1638 * t2159 + t1675 * t2164, -t1668 * t2159 + t1744 * t2164, t2164 * t1499 - t2159 * t1485 - pkin(7) * (t1599 * t2164 + t1655 * t2159), t2164 * t1502 - t2159 * t1491 - pkin(7) * (t1629 * t2164 + t1669 * t2159), t2164 * t1474 - t2159 * t1467 - pkin(7) * (t1549 * t2164 + t1600 * t2159), t2164 * t1457 - t2159 * t1452 - pkin(7) * (t1483 * t2164 + t1510 * t2159), -t1544 * t2159 + t1589 * t2164, -t1513 * t2159 + t1546 * t2164, -t1523 * t2159 + t1562 * t2164, -t1543 * t2159 + t1588 * t2164, -t1524 * t2159 + t1563 * t2164, -t1565 * t2159 + t1615 * t2164, t2164 * t1459 - t2159 * t1454 - pkin(7) * (t1517 * t2164 + t1553 * t2159), t2164 * t1460 - t2159 * t1456 - pkin(7) * (t1519 * t2164 + t1554 * t2159), t2164 * t1458 - t2159 * t1450 - pkin(7) * (t1506 * t2164 + t1539 * t2159), t2164 * t1446 - t2159 * t1445 - pkin(7) * (t1462 * t2164 + t1477 * t2159); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2134, 0, t2135, 0, t2120, t2270, t2279, pkin(7) * t2279, t2069 * t2164 + t2083 * t2159, t2031 * t2164 + t2045 * t2159, t2040 * t2164 + t2079 * t2159, t2066 * t2164 + t2082 * t2159, t2041 * t2164 + t2080 * t2159, t2159 * t2096 - t2164 * t2218, t2159 * t1950 + t2164 * t1944 + pkin(7) * (-t2042 * t2159 + t2081 * t2164), t2159 * t1946 + t2164 * t1935 + pkin(7) * (-t2036 * t2159 + t2077 * t2164), t2159 * t1903 + t2164 * t1906 + pkin(7) * (-t2030 * t2159 + t2044 * t2164), t2159 * t1904 + t2164 * t1915 + pkin(7) * (-t1980 * t2159 + t2008 * t2164), t1956 * t2164 + t2006 * t2159, t1897 * t2164 + t1972 * t2159, t1913 * t2164 + t1974 * t2159, t1955 * t2164 + t2005 * t2159, t1914 * t2164 + t1975 * t2159, t1977 * t2164 + t2034 * t2159, t2159 * t1739 + t2164 * t1732 + pkin(7) * (-t1901 * t2159 + t1961 * t2164), t2159 * t1743 + t2164 * t1738 + pkin(7) * (-t1912 * t2159 + t1973 * t2164), t2159 * t1729 + t2164 * t1681 + pkin(7) * (-t1893 * t2159 + t1948 * t2164), t2159 * t1651 + t2164 * t1649 + pkin(7) * (-t1750 * t2159 + t1832 * t2164), t1785 * t2164 + t1838 * t2159, t1706 * t2164 + t1787 * t2159, t1773 * t2164 + t1828 * t2159, t1784 * t2164 + t1837 * t2159, t1774 * t2164 + t1829 * t2159, t1831 * t2164 + t1907 * t2159, t2159 * t1585 + t2164 * t1574 + pkin(7) * (-t1741 * t2159 + t1816 * t2164), t2159 * t1592 + t2164 * t1580 + pkin(7) * (-t1752 * t2159 + t1826 * t2164), t2159 * t1545 + t2164 * t1526 + pkin(7) * (-t1704 * t2159 + t1781 * t2164), t2159 * t1501 + t2164 * t1496 + pkin(7) * (-t1583 * t2159 + t1652 * t2164), t1604 * t2164 + t1662 * t2159, t1551 * t2164 + t1605 * t2159, t1637 * t2164 + t1674 * t2159, t1603 * t2164 + t1661 * t2159, t1638 * t2164 + t1675 * t2159, t1668 * t2164 + t1744 * t2159, t2159 * t1499 + t2164 * t1485 + pkin(7) * (-t1599 * t2159 + t1655 * t2164), t2159 * t1502 + t2164 * t1491 + pkin(7) * (-t1629 * t2159 + t1669 * t2164), t2159 * t1474 + t2164 * t1467 + pkin(7) * (-t1549 * t2159 + t1600 * t2164), t2159 * t1457 + t2164 * t1452 + pkin(7) * (-t1483 * t2159 + t1510 * t2164), t1544 * t2164 + t1589 * t2159, t1513 * t2164 + t1546 * t2159, t1523 * t2164 + t1562 * t2159, t1543 * t2164 + t1588 * t2159, t1524 * t2164 + t1563 * t2159, t1565 * t2164 + t1615 * t2159, t2159 * t1459 + t2164 * t1454 + pkin(7) * (-t1517 * t2159 + t1553 * t2164), t2159 * t1460 + t2164 * t1456 + pkin(7) * (-t1519 * t2159 + t1554 * t2164), t2159 * t1458 + t2164 * t1450 + pkin(7) * (-t1506 * t2159 + t1539 * t2164), t2159 * t1446 + t2164 * t1445 + pkin(7) * (-t1462 * t2159 + t1477 * t2164); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2139, t2140, 0, 0, t2068, t2029, t2037, t2067, t2038, t2131, t1943, t1934, t1905, t1916, t1954, t1896, t1910, t1953, t1911, t1976, t1731, t1737, t1680, t1648, t1783, t1705, t1771, t1782, t1772, t1830, t1573, t1579, t1525, t1495, t1602, t1550, t1635, t1601, t1636, t1667, t1484, t1490, t1466, t1451, t1542, t1512, t1521, t1541, t1522, t1564, t1453, t1455, t1449, t1444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2165, 0, 0, -g(3), -t2139, 0, t2083, t2045, t2079, t2082, t2080, t2096, t1950, t1946, t1903, t1904, t2006, t1972, t1974, t2005, t1975, t2034, t1739, t1743, t1729, t1651, t1838, t1787, t1828, t1837, t1829, t1907, t1585, t1592, t1545, t1501, t1662, t1605, t1674, t1661, t1675, t1744, t1499, t1502, t1474, t1457, t1589, t1546, t1562, t1588, t1563, t1615, t1459, t1460, t1458, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2165, 0, qJDD(1), 0, g(3), 0, -t2140, 0, t2069, t2031, t2040, t2066, t2041, -t2218, t1944, t1935, t1906, t1915, t1956, t1897, t1913, t1955, t1914, t1977, t1732, t1738, t1681, t1649, t1785, t1706, t1773, t1784, t1774, t1831, t1574, t1580, t1526, t1496, t1604, t1551, t1637, t1603, t1638, t1668, t1485, t1491, t1467, t1452, t1544, t1513, t1523, t1543, t1524, t1565, t1454, t1456, t1450, t1445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2139, t2140, 0, 0, t2068, t2029, t2037, t2067, t2038, t2131, t1943, t1934, t1905, t1916, t1954, t1896, t1910, t1953, t1911, t1976, t1731, t1737, t1680, t1648, t1783, t1705, t1771, t1782, t1772, t1830, t1573, t1579, t1525, t1495, t1602, t1550, t1635, t1601, t1636, t1667, t1484, t1490, t1466, t1451, t1542, t1512, t1521, t1541, t1522, t1564, t1453, t1455, t1449, t1444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2118, t2092, t2117, -t2127, t2122, t2127, 0, -t2098, t2071, 0, t2049, t1984, t2022, t2047, t2023, t2052, t1938, t1949, t1827, -qJ(3) * t1859, t1867, t1800, t1870, t1866, t1871, t1919, t1712, t1728, t1596, t1584, t1673, t1613, t1723, t1672, t1724, t1754, t1538, t1552, t1488, t1476, t1609, t1567, t1577, t1608, t1578, t1640, t1472, t1473, t1469, t1448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2126, t2089, t2121, t2119, t2116, -t2126, t2098, 0, t2072, 0, -t2323, t2078, t2217, t2323, -t2058, t2119, t1894, t1898, -pkin(2) * t1983, -pkin(2) * t1859, -t2017, -t2016, -t1970, t2017, t1967, t2113, t1730, t1736, t1742, t1610, -t1945, -t1942, -t1851, t1945, t1848, t2112, t1586, t1594, t1572, t1489, t1796, -t1717, -t1788, -t1794, -t1789, -t1853, t1508, t1509, t1500, t1464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2136, t2124, t2090, t2136, t2091, t2278, -t2071, -t2072, 0, 0, t2048, t1982, t2019, t2046, t2020, t2051, t1908, t1917, t1820, t1833, t1865, t1798, t1868, t1864, t1869, t1918, t1693, t1711, t1595, t1581, t1671, t1611, t1721, t1670, t1722, t1753, t1537, t1547, t1487, t1475, t1607, t1566, t1575, t1606, t1576, t1639, t1470, t1471, t1468, t1447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2086, t2057, t2184, -t2275, t2093, t2275, 0, t2027, t1939, 0, t1960, t1877, t1964, t1958, t1965, t1988, t1858, t1861, t1700, -pkin(9) * t1734, t1759, t1678, t1814, t1758, t1815, t1840, t1641, t1650, t1529, t1511, t1666, t1627, t1645, t1665, t1646, t1702, t1497, t1498, t1486, t1465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2097, t2060, t2094, t2175, -t2061, t2097, -t2027, 0, t1940, 0, t1959, t1875, t1962, t1957, t1963, t1987, t1821, t1825, t1690, t1713, t1757, t1676, t1812, t1756, t1813, t1839, t1616, t1632, t1528, t1507, t1664, t1626, t1643, t1663, t1644, t1701, t1492, t1493, t1481, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2323, -t2078, -t2217, -t2323, t2058, -t2119, -t1939, -t1940, 0, 0, t2017, t2016, t1970, -t2017, -t1967, -t2113, t2200, t2271, t2350, t2351, t1945, t1942, t1851, -t1945, -t1848, -t2112, t2202, t2219, t2286, t2287, -t1796, t1717, t1788, t1794, t1789, t1853, t2204, t2203, t2183, t2220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1995, -t1966, t2360, -t2064, t2054, t2064, 0, t1947, -t2236, 0, t1844, t1768, t1886, t1842, t1887, t1923, t1764, t1786, t1590, -pkin(10) * t1618, t1748, t1692, t1709, t1747, t1710, t1793, t1535, t1536, t1527, t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2318, t2355, t2055, t2205, -t2000, t2318, -t1947, 0, t1819, 0, t1843, t1766, t1884, t1841, t1885, t1922, t1727, t1733, t1587, t1597, t1746, t1691, t1707, t1745, t1708, t1792, t1530, t1531, t1520, t1480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2017, t2016, t1970, -t2017, -t1967, -t2113, t2236, -t1819, 0, 0, t1945, t1942, t1851, -t1945, -t1848, -t2112, t2268, t2288, t1765, t1617, -t1796, t1717, t1788, t1794, t1789, t1853, t2272, t2273, t2264, t2289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1883, -t1847, t2356, -t2003, t1998, t2003, 0, t1836, t1683, 0, t1797, t1719, t1790, t1795, t1791, t1854, t1642, t1647, t1540, -pkin(11) * t1560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2201, t2361, t1999, t1882, -t1929, t2201, -t1836, 0, t1684, 0, -t1921, -t1920, -t1810, t1921, t1806, -t1881, t1591, t1593, -pkin(5) * t1718, -pkin(5) * t1560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1945, t1942, t1851, -t1945, -t1848, -t2112, -t1683, -t1684, 0, 0, -t1796, t1717, t1788, t1794, t1789, t1853, t2290, t2291, t2274, t2307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2182, t1807, t2357, t1932, t1927, -t1932, 0, t1659, t1624, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1933, t1809, t1928, t1835, t1823, -t1933, -t1659, 0, t1625, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1921, t1920, t1810, -t1921, -t1806, t1881, -t1624, -t1625, 0, 0;];
m_new_reg  = t1;
