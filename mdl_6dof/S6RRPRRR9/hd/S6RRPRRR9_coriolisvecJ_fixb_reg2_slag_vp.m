% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR9_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:14:00
% EndTime: 2019-03-09 14:14:36
% DurationCPUTime: 17.66s
% Computational Cost: add. (37195->708), mult. (97090->1001), div. (0->0), fcn. (80367->12), ass. (0->316)
t308 = sin(pkin(12));
t310 = cos(pkin(12));
t314 = sin(qJ(4));
t448 = cos(qJ(4));
t271 = t308 * t448 + t314 * t310;
t309 = sin(pkin(6));
t317 = cos(qJ(2));
t414 = t309 * t317;
t326 = t271 * t414;
t458 = qJD(1) * t326 - qJD(4) * t271;
t343 = t314 * t308 - t310 * t448;
t407 = qJD(1) * t309;
t324 = t343 * t407;
t224 = t317 * t324;
t503 = -qJD(4) * t343 + t224;
t323 = qJD(2) * t326;
t311 = cos(pkin(6));
t406 = qJD(1) * t311;
t297 = qJD(2) + t406;
t315 = sin(qJ(2));
t405 = qJD(1) * t315;
t384 = t309 * t405;
t235 = -t310 * t297 + t308 * t384;
t237 = t297 * t308 + t310 * t384;
t189 = -t314 * t235 + t237 * t448;
t401 = qJD(4) * t189;
t141 = qJD(1) * t323 + t401;
t393 = qJD(1) * qJD(2);
t374 = t317 * t393;
t357 = t309 * t374;
t389 = pkin(1) * qJD(2) * t311;
t361 = qJD(1) * t389;
t245 = pkin(8) * t357 + t315 * t361;
t349 = t308 * t357;
t208 = pkin(3) * t349 + t245;
t111 = pkin(4) * t141 + t208;
t381 = qJD(2) * t414;
t358 = t310 * t381;
t344 = t448 * t358;
t377 = qJD(4) * t448;
t140 = t314 * (qJD(4) * t237 + t349) - qJD(1) * t344 + t235 * t377;
t313 = sin(qJ(5));
t342 = -t235 * t448 - t314 * t237;
t447 = cos(qJ(5));
t376 = qJD(5) * t447;
t399 = qJD(5) * t313;
t71 = t447 * t140 + t313 * t141 + t189 * t399 - t342 * t376;
t370 = t313 * t140 - t447 * t141;
t473 = t189 * t447 + t313 * t342;
t487 = t473 * qJD(5);
t72 = -t370 + t487;
t22 = pkin(5) * t72 + pkin(11) * t71 + t111;
t312 = sin(qJ(6));
t316 = cos(qJ(6));
t404 = qJD(1) * t317;
t383 = t309 * t404;
t290 = -qJD(4) + t383;
t345 = -qJD(5) + t290;
t390 = pkin(1) * t406;
t256 = pkin(8) * t383 + t315 * t390;
t225 = qJ(3) * t297 + t256;
t247 = (-pkin(2) * t317 - qJ(3) * t315 - pkin(1)) * t309;
t230 = qJD(1) * t247;
t174 = -t225 * t308 + t310 * t230;
t132 = -pkin(3) * t383 - pkin(9) * t237 + t174;
t175 = t310 * t225 + t308 * t230;
t142 = -pkin(9) * t235 + t175;
t96 = t314 * t132 + t142 * t448;
t83 = pkin(10) * t342 + t96;
t388 = t447 * t83;
t95 = t448 * t132 - t142 * t314;
t82 = -pkin(10) * t189 + t95;
t76 = -pkin(4) * t290 + t82;
t35 = t313 * t76 + t388;
t33 = -pkin(11) * t345 + t35;
t116 = t189 * t313 - t342 * t447;
t255 = -pkin(8) * t384 + t317 * t390;
t218 = -pkin(2) * t297 + qJD(3) - t255;
t185 = pkin(3) * t235 + t218;
t121 = -pkin(4) * t342 + t185;
t63 = pkin(5) * t116 - pkin(11) * t473 + t121;
t351 = t312 * t33 - t316 * t63;
t403 = qJD(2) * t315;
t382 = t309 * t403;
t291 = qJD(1) * t382;
t353 = pkin(2) * t315 - qJ(3) * t317;
t228 = (qJD(2) * t353 - qJD(3) * t315) * t309;
t212 = qJD(1) * t228;
t244 = -pkin(8) * t291 + t317 * t361;
t213 = qJD(3) * t297 + t244;
t164 = t310 * t212 - t213 * t308;
t413 = t310 * t317;
t338 = t309 * (pkin(3) * t315 - pkin(9) * t413);
t329 = qJD(2) * t338;
t133 = qJD(1) * t329 + t164;
t165 = t308 * t212 + t310 * t213;
t143 = -pkin(9) * t349 + t165;
t58 = -qJD(4) * t96 + t448 * t133 - t314 * t143;
t40 = pkin(4) * t291 + t140 * pkin(10) + t58;
t400 = qJD(4) * t314;
t57 = t132 * t377 + t314 * t133 - t142 * t400 + t448 * t143;
t42 = -pkin(10) * t141 + t57;
t372 = -t313 * t40 - t76 * t376 + t83 * t399 - t447 * t42;
t7 = pkin(11) * t291 - t372;
t2 = -qJD(6) * t351 + t22 * t312 + t316 * t7;
t495 = qJD(6) + t116;
t439 = t495 * t351;
t504 = t2 + t439;
t253 = t353 * t407;
t196 = t310 * t253 - t255 * t308;
t170 = qJD(1) * t338 + t196;
t197 = t308 * t253 + t310 * t255;
t360 = t308 * t383;
t181 = -pkin(9) * t360 + t197;
t444 = pkin(9) + qJ(3);
t285 = t444 * t308;
t378 = qJD(3) * t448;
t502 = -t314 * t170 - t448 * t181 - t285 * t377 + t310 * t378;
t109 = t448 * t170 - t181 * t314;
t286 = t444 * t310;
t402 = qJD(3) * t314;
t501 = -pkin(4) * t384 - pkin(10) * t503 + t285 * t400 - t286 * t377 - t308 * t378 - t310 * t402 - t109;
t108 = -t312 * t345 + t316 * t473;
t488 = t495 * t312;
t500 = t108 * t488;
t499 = pkin(10) * t458 - t286 * t400 - t308 * t402 + t502;
t16 = t312 * t63 + t316 * t33;
t3 = -qJD(6) * t16 + t316 * t22 - t312 * t7;
t498 = t16 * t495 + t3;
t497 = t116 ^ 2;
t496 = t116 * t345;
t325 = t447 * t343;
t392 = qJD(4) + qJD(5);
t412 = -t224 * t447 + t271 * t399 - t458 * t313 + t325 * t392;
t332 = t313 * t343;
t411 = -qJD(5) * t332 + t271 * t376 + t503 * t313 - t458 * t447;
t334 = t316 * t345;
t106 = t312 * t473 + t334;
t396 = qJD(6) * t316;
t398 = qJD(6) * t108;
t48 = -t316 * t291 - t312 * t71 + t398;
t431 = -t106 * t396 - t312 * t48;
t397 = qJD(6) * t312;
t47 = qJD(6) * t334 - t312 * t291 + t316 * t71 + t397 * t473;
t479 = t116 * t316;
t494 = -t106 * t479 - t316 * t47 + t431 - t500;
t491 = t106 * t473;
t70 = t316 * t72;
t493 = -t488 * t495 + t491 + t70;
t492 = t473 ^ 2;
t221 = -t448 * t285 - t286 * t314;
t199 = -pkin(10) * t271 + t221;
t222 = -t314 * t285 + t448 * t286;
t200 = -pkin(10) * t343 + t222;
t466 = t199 * t376 - t200 * t399 + t501 * t313 + t499 * t447;
t490 = t108 * t473;
t489 = t473 * t290;
t216 = pkin(3) * t360 + t256;
t461 = -t458 * pkin(4) - t216;
t44 = t47 * t312;
t485 = -t44 + (t396 + t479) * t108;
t68 = t312 * t72;
t430 = t396 * t495 + t68;
t484 = t479 * t495 + t430 - t490;
t483 = t189 ^ 2;
t482 = pkin(11) * t384 - t466;
t481 = pkin(5) * t411 + pkin(11) * t412 + t461;
t433 = t313 * t83;
t34 = t447 * t76 - t433;
t32 = pkin(5) * t345 - t34;
t480 = t116 * t32;
t424 = t116 * t473;
t478 = t189 * t290;
t476 = t492 - t497;
t86 = pkin(5) * t473 + pkin(11) * t116;
t475 = -t71 - t496;
t474 = t121 * t116 + t372;
t471 = t342 ^ 2;
t305 = t309 ^ 2;
t470 = -0.2e1 * t305 * t393;
t130 = t313 * t199 + t200 * t447;
t467 = qJD(5) * t130 + t499 * t313 - t501 * t447;
t465 = t495 * t473;
t464 = t290 * t342;
t446 = pkin(1) * t315;
t264 = pkin(8) * t414 + t311 * t446;
t246 = qJ(3) * t311 + t264;
t190 = -t246 * t308 + t310 * t247;
t415 = t309 * t315;
t260 = t308 * t311 + t310 * t415;
t155 = -pkin(3) * t414 - pkin(9) * t260 + t190;
t191 = t310 * t246 + t308 * t247;
t259 = t308 * t415 - t311 * t310;
t169 = -pkin(9) * t259 + t191;
t103 = t314 * t155 + t448 * t169;
t460 = (-qJD(3) * t308 - qJD(4) * t286) * t314 + t502;
t459 = t271 * qJD(3) + qJD(4) * t222 + t109;
t456 = t16 * t316 + t312 * t351;
t373 = t313 * t42 - t447 * t40;
t10 = -qJD(5) * t35 - t373;
t8 = -pkin(5) * t291 - t10;
t454 = -t8 * t316 + t32 * t397 + t351 * t473;
t453 = t16 * t473 + t8 * t312 + t32 * t396;
t451 = -t121 * t473 - t373;
t450 = t370 - t489;
t102 = t448 * t155 - t169 * t314;
t202 = -t314 * t259 + t260 * t448;
t89 = -pkin(4) * t414 - pkin(10) * t202 + t102;
t201 = t259 * t448 + t260 * t314;
t93 = -pkin(10) * t201 + t103;
t440 = t313 * t89 + t447 * t93;
t359 = t308 * t381;
t160 = t259 * t377 - t344 + (qJD(4) * t260 + t359) * t314;
t257 = -pkin(8) * t382 + t317 * t389;
t234 = qJD(3) * t311 + t257;
t178 = t310 * t228 - t234 * t308;
t148 = t178 + t329;
t179 = t308 * t228 + t310 * t234;
t163 = -pkin(9) * t359 + t179;
t67 = -t103 * qJD(4) + t448 * t148 - t314 * t163;
t54 = pkin(4) * t382 + t160 * pkin(10) + t67;
t161 = qJD(4) * t202 + t323;
t66 = t314 * t148 + t155 * t377 + t448 * t163 - t169 * t400;
t56 = -pkin(10) * t161 + t66;
t14 = -qJD(5) * t440 - t313 * t56 + t447 * t54;
t445 = pkin(1) * t317;
t1 = t2 * t316;
t204 = t271 * t313 + t325;
t205 = t271 * t447 - t332;
t302 = -t310 * pkin(3) - pkin(2);
t243 = pkin(4) * t343 + t302;
t131 = t204 * pkin(5) - t205 * pkin(11) + t243;
t91 = -t130 * t312 + t131 * t316;
t443 = qJD(6) * t91 + t481 * t312 - t482 * t316;
t92 = t130 * t316 + t131 * t312;
t442 = -qJD(6) * t92 + t482 * t312 + t481 * t316;
t441 = pkin(5) * t384 + t467;
t134 = t201 * t447 + t202 * t313;
t437 = t134 * t72;
t434 = t204 * t72;
t46 = t48 * t316;
t429 = t106 * t312;
t428 = t108 * t106;
t423 = t174 * t315;
t422 = t175 * t315;
t421 = t189 * t342;
t420 = t205 * t312;
t419 = t205 * t316;
t307 = t317 ^ 2;
t418 = t305 * t307;
t417 = t305 * qJD(1) ^ 2;
t416 = t308 * t317;
t408 = t315 ^ 2 - t307;
t387 = t307 * t417;
t386 = t317 * t417;
t385 = t312 * t414;
t380 = t305 * t404;
t369 = t412 * t312 - t316 * t384;
t368 = t312 * t384 + t412 * t316;
t367 = t495 ^ 2;
t364 = t297 + t406;
t363 = qJD(2) * t310 + t235;
t362 = pkin(4) * t376;
t36 = t313 * t82 + t388;
t356 = pkin(4) * t399 - t36;
t355 = pkin(1) * t470;
t303 = pkin(4) * t313 + pkin(11);
t352 = -t303 * t72 + t480;
t50 = -pkin(11) * t414 + t440;
t135 = -t313 * t201 + t202 * t447;
t298 = pkin(8) * t415;
t249 = t298 + (-pkin(2) - t445) * t311;
t203 = pkin(3) * t259 + t249;
t146 = pkin(4) * t201 + t203;
t74 = pkin(5) * t134 - pkin(11) * t135 + t146;
t24 = t312 * t74 + t316 * t50;
t23 = -t312 * t50 + t316 * t74;
t350 = -t235 * t310 - t237 * t308;
t348 = t305 * t315 * t374;
t51 = -t313 * t93 + t447 * t89;
t122 = t135 * t312 + t316 * t414;
t13 = t313 * t54 + t89 * t376 - t399 * t93 + t447 * t56;
t340 = t363 * t407;
t339 = (qJD(2) * t308 - t237) * t407;
t337 = t205 * t396 - t369;
t336 = -t205 * t397 - t368;
t335 = t317 * t339;
t333 = t345 * t309;
t258 = t264 * qJD(2);
t217 = pkin(3) * t359 + t258;
t322 = -qJ(3) * t403 + (-pkin(2) * qJD(2) + qJD(3) - t218) * t317;
t321 = t1 - t3 * t312 + (-t16 * t312 + t316 * t351) * qJD(6);
t124 = pkin(4) * t161 + t217;
t304 = -pkin(4) * t447 - pkin(5);
t280 = t315 * t386;
t274 = -0.2e1 * t348;
t263 = t311 * t445 - t298;
t129 = -t199 * t447 + t200 * t313;
t123 = t135 * t316 - t385;
t81 = qJD(5) * t135 - t313 * t160 + t161 * t447;
t80 = t160 * t447 + t313 * t161 + t201 * t376 + t202 * t399;
t73 = pkin(4) * t189 + t86;
t60 = -qJD(6) * t385 + t135 * t396 - t312 * t80 - t316 * t382;
t59 = qJD(6) * t122 - t312 * t382 + t316 * t80;
t49 = pkin(5) * t414 - t51;
t37 = t447 * t82 - t433;
t27 = pkin(5) * t81 + pkin(11) * t80 + t124;
t20 = t312 * t86 + t316 * t34;
t19 = -t312 * t34 + t316 * t86;
t18 = t312 * t73 + t316 * t37;
t17 = -t312 * t37 + t316 * t73;
t12 = -pkin(5) * t382 - t14;
t11 = pkin(11) * t382 + t13;
t5 = -qJD(6) * t24 - t11 * t312 + t27 * t316;
t4 = qJD(6) * t23 + t11 * t316 + t27 * t312;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t348, t408 * t470, t364 * t381, t274, -t364 * t382, 0, -t245 * t311 - t258 * t297 + t315 * t355, -t244 * t311 - t257 * t297 + t317 * t355 (t244 * t317 + t245 * t315 + (-t255 * t317 - t256 * t315) * qJD(2) + (t257 * t317 + t258 * t315 + (-t263 * t317 - t264 * t315) * qJD(2)) * qJD(1)) * t309, t244 * t264 - t245 * t263 - t255 * t258 + t256 * t257 (qJD(1) * t260 + t237) * t358 ((-t259 * t310 - t260 * t308) * qJD(1) + t350) * t381 (t237 * t415 + (t260 * t415 - 0.2e1 * t310 * t418) * qJD(1)) * qJD(2) (qJD(1) * t259 + t235) * t359 (-t235 * t415 + (-t259 * t415 + 0.2e1 * t308 * t418) * qJD(1)) * qJD(2), t274, t235 * t258 + t245 * t259 + ((-qJD(1) * t178 - t164) * t317 + (t218 * t416 + t423 + (t190 * t315 + t249 * t416) * qJD(1)) * qJD(2)) * t309, t237 * t258 + t245 * t260 + ((qJD(1) * t179 + t165) * t317 + (t218 * t413 - t422 + (-t191 * t315 + t249 * t413) * qJD(1)) * qJD(2)) * t309, -t164 * t260 - t165 * t259 - t178 * t237 - t179 * t235 + (-t174 * t310 - t175 * t308 + (-t190 * t310 - t191 * t308) * qJD(1)) * t381, t164 * t190 + t165 * t191 + t174 * t178 + t175 * t179 + t218 * t258 + t245 * t249, -t140 * t202 - t160 * t189, t140 * t201 - t141 * t202 - t160 * t342 - t161 * t189, t160 * t290 + (t140 * t317 + (qJD(1) * t202 + t189) * t403) * t309, t141 * t201 - t161 * t342, t161 * t290 + (t141 * t317 + (-qJD(1) * t201 + t342) * t403) * t309 (-t290 * t309 - t380) * t403, t141 * t203 + t161 * t185 - t342 * t217 + t201 * t208 - t290 * t67 + (-t317 * t58 + (qJD(1) * t102 + t95) * t403) * t309, -t140 * t203 - t160 * t185 + t189 * t217 + t202 * t208 + t290 * t66 + (t317 * t57 + (-qJD(1) * t103 - t96) * t403) * t309, t102 * t140 - t103 * t141 + t160 * t95 - t161 * t96 - t189 * t67 - t201 * t57 - t202 * t58 + t342 * t66, t102 * t58 + t103 * t57 + t185 * t217 + t203 * t208 + t66 * t96 + t67 * t95, -t135 * t71 - t473 * t80, t116 * t80 + t134 * t71 - t135 * t72 - t473 * t81, -t80 * t392 + (t473 * t403 + t71 * t317 + (t135 * t403 + t317 * t80) * qJD(1)) * t309, t116 * t81 + t437, -t81 * t392 + (-t116 * t403 + t72 * t317 + (-t134 * t403 + t317 * t81) * qJD(1)) * t309 (-t333 - t380) * t403, t14 * t392 + t124 * t116 + t146 * t72 + t111 * t134 + t121 * t81 + (t34 * t403 - t10 * t317 + (-t14 * t317 + t403 * t51) * qJD(1)) * t309, -t13 * t392 + t124 * t473 - t146 * t71 + t111 * t135 - t121 * t80 + (-t35 * t403 - t372 * t317 + (t13 * t317 - t403 * t440) * qJD(1)) * t309, -t10 * t135 - t116 * t13 + t134 * t372 - t14 * t473 + t34 * t80 - t35 * t81 - t440 * t72 + t51 * t71, t10 * t51 + t111 * t146 + t121 * t124 + t13 * t35 + t14 * t34 - t372 * t440, -t108 * t59 - t123 * t47, t106 * t59 - t108 * t60 + t122 * t47 - t123 * t48, t108 * t81 + t123 * t72 - t134 * t47 - t495 * t59, t106 * t60 + t122 * t48, -t106 * t81 - t122 * t72 - t134 * t48 - t495 * t60, t495 * t81 + t437, t106 * t12 + t122 * t8 + t134 * t3 + t23 * t72 + t32 * t60 - t351 * t81 + t48 * t49 + t495 * t5, t108 * t12 + t123 * t8 - t134 * t2 - t16 * t81 - t24 * t72 - t32 * t59 - t4 * t495 - t47 * t49, -t106 * t4 - t108 * t5 - t122 * t2 - t123 * t3 - t16 * t60 + t23 * t47 - t24 * t48 - t351 * t59, t12 * t32 + t16 * t4 + t2 * t24 + t23 * t3 - t351 * t5 + t49 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t408 * t417 (qJD(2) - t297) * t383, t280, t297 * t384 - t291, 0, t256 * t297 + t417 * t446 - t245, pkin(1) * t386 + t255 * t297 - t244, 0, 0, t310 * t335 ((-t308 ^ 2 + t310 ^ 2) * qJD(2) - t350) * t383, t310 * t387 + t315 * t339, -t363 * t360, -t308 * t387 + t315 * t340, t280, -t235 * t256 - t245 * t310 + (t196 * t317 + t308 * t322 - t423) * t407, -t237 * t256 + t245 * t308 + (-t197 * t317 + t310 * t322 + t422) * t407, t196 * t237 + t197 * t235 + (-qJD(3) * t235 + t174 * t383 + t165) * t310 + (qJD(3) * t237 + t175 * t383 - t164) * t308, -pkin(2) * t245 - t174 * t196 - t175 * t197 - t218 * t256 + (-t174 * t308 + t175 * t310) * qJD(3) + (-t164 * t308 + t165 * t310) * qJ(3), -t140 * t271 + t189 * t503, t140 * t343 - t271 * t141 + t189 * t458 + t342 * t503, -t189 * t384 + t271 * t291 - t290 * t503, t141 * t343 + t342 * t458, -t290 * t458 - t324 * t403 - t342 * t384, t290 * t384, t302 * t141 - t185 * t458 + t208 * t343 + t216 * t342 + t221 * t291 + t290 * t459 - t384 * t95, -t302 * t140 + t185 * t503 - t216 * t189 + t208 * t271 - t222 * t291 + t290 * t460 + t384 * t96, t221 * t140 - t222 * t141 - t95 * t224 - t58 * t271 + t458 * t96 + (qJD(4) * t95 - t57) * t343 + t459 * t189 + t460 * t342, -t185 * t216 + t208 * t302 + t221 * t58 + t222 * t57 - t459 * t95 + t460 * t96, -t205 * t71 - t412 * t473, t116 * t412 + t204 * t71 - t205 * t72 - t411 * t473 (t412 * t317 + (qJD(2) * t205 - t473) * t315) * t407 - t412 * t392, t116 * t411 + t434 (t411 * t317 + (-qJD(2) * t204 + t116) * t315) * t407 - t411 * t392, t333 * t405, t111 * t204 + t461 * t116 + t411 * t121 - t129 * t291 + t243 * t72 - t34 * t384 + t467 * t345, t111 * t205 - t412 * t121 - t130 * t291 - t243 * t71 + t466 * t345 + t35 * t384 + t461 * t473, -t10 * t205 - t466 * t116 - t129 * t71 - t130 * t72 + t204 * t372 + t412 * t34 - t411 * t35 + t467 * t473, -t10 * t129 + t111 * t243 + t461 * t121 - t130 * t372 - t467 * t34 + t466 * t35, t108 * t336 - t419 * t47, t369 * t108 + t368 * t106 + (t44 - t46 + (-t108 * t316 + t429) * qJD(6)) * t205, t108 * t411 - t204 * t47 + t336 * t495 + t419 * t72, t106 * t337 + t420 * t48, -t106 * t411 - t204 * t48 - t337 * t495 - t420 * t72, t411 * t495 + t434, t106 * t441 + t129 * t48 + t204 * t3 + t32 * t337 - t351 * t411 + t420 * t8 + t442 * t495 + t72 * t91, t108 * t441 - t129 * t47 - t16 * t411 - t2 * t204 + t32 * t336 + t419 * t8 - t443 * t495 - t72 * t92, t47 * t91 - t48 * t92 + t369 * t16 - t368 * t351 - t442 * t108 - t443 * t106 + (-qJD(6) * t456 - t2 * t312 - t3 * t316) * t205, t129 * t8 + t16 * t443 + t2 * t92 + t3 * t91 + t32 * t441 - t351 * t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, t317 * t340, -t235 ^ 2 - t237 ^ 2, t174 * t237 + t175 * t235 + t245, 0, 0, 0, 0, 0, 0, t141 - t478, -t140 - t464, -t471 - t483, t189 * t95 - t342 * t96 + t208, 0, 0, 0, 0, 0, 0, -t370 + 0.2e1 * t487 - t489, -t71 + t496, -t492 - t497, t116 * t35 + t34 * t473 + t111, 0, 0, 0, 0, 0, 0, -t312 * t367 - t491 + t70, -t316 * t367 - t490 - t68 (-t106 * t116 + t47) * t316 + t500 + t431, t504 * t312 + t498 * t316 - t473 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t421, -t471 + t483, -t140 + t464, t421, -t271 * t357 - t401 - t478, t291, -t185 * t189 - t96 * t290 + t58, -t185 * t342 - t290 * t95 - t57, 0, 0, t424, t476, t475, -t424, t450, t291, -t36 * t290 + (t36 - t35) * qJD(5) + (-t189 * t116 + t291 * t447 + t345 * t399) * pkin(4) + t451, -t37 * t345 + (-t189 * t473 - t291 * t313 + t345 * t376) * pkin(4) + t474, t35 * t473 + t37 * t116 - t34 * t116 - t36 * t473 + (t447 * t71 - t313 * t72 + (-t116 * t447 + t313 * t473) * qJD(5)) * pkin(4), t34 * t36 - t35 * t37 + (t447 * t10 - t121 * t189 - t313 * t372 + (-t313 * t34 + t35 * t447) * qJD(5)) * pkin(4), t485, t494, t484, t429 * t495 - t46, t493, -t465, t304 * t48 + t352 * t312 + t356 * t106 + (-t303 * t396 - t312 * t362 - t17) * t495 + t454, -t304 * t47 + t352 * t316 + t356 * t108 + (t303 * t397 - t316 * t362 + t18) * t495 + t453, t18 * t106 + t17 * t108 + t1 + (-t106 * t362 + t116 * t351 - t303 * t48 + (t108 * t303 + t351) * qJD(6)) * t316 + (t108 * t362 - t116 * t16 - t303 * t47 - t3 + (t106 * t303 - t16) * qJD(6)) * t312, t351 * t17 - t16 * t18 + t8 * t304 - t32 * t36 + (t313 * t32 + t447 * t456) * qJD(5) * pkin(4) + t321 * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, t476, t475, -t424, t450, t291, -t290 * t35 + t451, -t34 * t345 + t474, 0, 0, t485, t494, t484, t106 * t488 - t46, t493, -t465, -pkin(5) * t48 - t430 * pkin(11) - t106 * t35 - t19 * t495 + t312 * t480 + t454, t32 * t479 + pkin(5) * t47 - t108 * t35 + t495 * t20 + (t397 * t495 - t70) * pkin(11) + t453, t106 * t20 + t108 * t19 + t1 + (t439 + (-t48 + t398) * pkin(11)) * t316 + ((qJD(6) * t106 - t47) * pkin(11) - t498) * t312, -pkin(5) * t8 + pkin(11) * t321 - t16 * t20 + t19 * t351 - t32 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, -t106 ^ 2 + t108 ^ 2, t106 * t495 - t47, -t428, t108 * t495 - t48, t72, -t108 * t32 + t498, t106 * t32 - t504, 0, 0;];
tauc_reg  = t6;
