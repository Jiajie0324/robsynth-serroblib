% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRPRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRRR9_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPRRR9_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRPRRR9_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:14:26
% EndTime: 2019-03-09 14:14:49
% DurationCPUTime: 15.32s
% Computational Cost: add. (15951->619), mult. (41742->856), div. (0->0), fcn. (35310->12), ass. (0->257)
t685 = sin(qJ(2));
t689 = cos(qJ(2));
t723 = pkin(2) * t685 - qJ(3) * t689;
t679 = sin(pkin(6));
t779 = qJD(1) * t679;
t627 = t723 * t779;
t757 = t685 * t779;
t681 = cos(pkin(6));
t778 = qJD(1) * t681;
t763 = pkin(1) * t778;
t628 = -pkin(8) * t757 + t689 * t763;
t678 = sin(pkin(12));
t680 = cos(pkin(12));
t577 = t678 * t627 + t680 * t628;
t777 = qJD(1) * t689;
t756 = t679 * t777;
t732 = t678 * t756;
t566 = -pkin(9) * t732 + t577;
t846 = qJD(3) * t680 - t566;
t684 = sin(qJ(4));
t688 = cos(qJ(4));
t796 = t688 * t680;
t643 = t678 * t684 - t796;
t798 = t679 * t689;
t699 = t643 * t798;
t785 = qJD(1) * t699 - t643 * qJD(4);
t644 = t678 * t688 + t680 * t684;
t700 = t644 * t798;
t784 = -qJD(1) * t700 + t644 * qJD(4);
t686 = cos(qJ(6));
t769 = qJD(6) * t686;
t737 = qJD(2) + t778;
t613 = t678 * t757 - t680 * t737;
t615 = t678 * t737 + t680 * t757;
t570 = t613 * t684 - t615 * t688;
t683 = sin(qJ(5));
t687 = cos(qJ(5));
t711 = -t613 * t688 - t684 * t615;
t506 = t570 * t683 + t687 * t711;
t835 = t506 * t686;
t845 = t769 - t835;
t661 = -qJD(4) + t756;
t650 = -qJD(5) + t661;
t844 = t506 * t650;
t576 = t680 * t627 - t628 * t678;
t797 = t680 * t689;
t703 = (pkin(3) * t685 - pkin(9) * t797) * t679;
t554 = qJD(1) * t703 + t576;
t810 = pkin(9) + qJ(3);
t656 = t810 * t678;
t657 = t810 * t680;
t709 = qJD(3) * t678 + qJD(4) * t657;
t773 = qJD(4) * t688;
t843 = -t656 * t773 + t846 * t688 + (-t554 - t709) * t684;
t767 = -qJD(6) + t506;
t682 = sin(qJ(6));
t831 = -t570 * t687 + t683 * t711;
t805 = t831 * t682;
t495 = t686 * t650 + t805;
t842 = t495 * t831;
t497 = -t650 * t682 + t686 * t831;
t841 = t497 * t831;
t840 = t650 * t831;
t552 = t688 * t554;
t782 = -t684 * t656 + t688 * t657;
t839 = pkin(4) * t757 + t785 * pkin(10) + t644 * qJD(3) + qJD(4) * t782 - t566 * t684 + t552;
t838 = -t784 * pkin(10) + t843;
t765 = qJD(1) * qJD(2);
t751 = t679 * t765;
t729 = t689 * t751;
t710 = t678 * t729;
t783 = -t613 * t773 + t729 * t796;
t527 = (-qJD(4) * t615 - t710) * t684 + t783;
t697 = qJD(2) * t700;
t819 = qJD(4) * t570;
t528 = qJD(1) * t697 - t819;
t771 = qJD(5) * t687;
t772 = qJD(5) * t683;
t466 = t687 * t527 - t683 * t528 + t570 * t772 + t711 * t771;
t730 = t685 * t751;
t759 = t686 * t466 - t650 * t769 + t682 * t730;
t770 = qJD(6) * t682;
t450 = -t770 * t831 + t759;
t448 = t450 * t682;
t746 = t466 * t682 - t686 * t730;
t451 = qJD(6) * t497 + t746;
t467 = qJD(5) * t831 + t527 * t683 + t687 * t528;
t465 = t686 * t467;
t463 = t682 * t467;
t793 = -t767 * t769 + t463;
t833 = t682 * t767;
t837 = MDP(26) * t730 + (-t467 - t840) * MDP(25) - t506 ^ 2 * MDP(23) + (t466 + t844) * MDP(24) + (-MDP(22) * t506 + MDP(23) * t831 + MDP(33) * t767) * t831 + (t845 * t497 + t448) * MDP(29) + (t767 * t835 + t793 - t841) * MDP(31) + (-t767 * t833 + t465 + t842) * MDP(32) + (t450 * t686 - t682 * t451 - t845 * t495 + t497 * t833) * MDP(30);
t629 = pkin(8) * t756 + t685 * t763;
t603 = qJ(3) * t737 + t629;
t623 = (-pkin(2) * t689 - qJ(3) * t685 - pkin(1)) * t679;
t608 = qJD(1) * t623;
t559 = -t603 * t678 + t680 * t608;
t519 = -pkin(3) * t756 - pkin(9) * t615 + t559;
t560 = t680 * t603 + t678 * t608;
t529 = -pkin(9) * t613 + t560;
t486 = t688 * t519 - t529 * t684;
t475 = pkin(10) * t570 + t486;
t471 = -pkin(4) * t661 + t475;
t487 = t519 * t684 + t529 * t688;
t476 = pkin(10) * t711 + t487;
t809 = t476 * t683;
t438 = t471 * t687 - t809;
t436 = pkin(5) * t650 - t438;
t836 = t436 * t506;
t834 = t570 * t661;
t584 = t687 * t643 + t644 * t683;
t789 = -qJD(5) * t584 - t683 * t784 + t687 * t785;
t585 = -t643 * t683 + t644 * t687;
t788 = qJD(5) * t585 + t683 * t785 + t687 * t784;
t479 = pkin(5) * t831 - pkin(11) * t506;
t598 = -pkin(2) * t737 + qJD(3) - t628;
t569 = t613 * pkin(3) + t598;
t508 = -pkin(4) * t711 + t569;
t606 = (qJD(2) * t723 - qJD(3) * t685) * t679;
t592 = qJD(1) * t606;
t762 = pkin(1) * qJD(2) * t681;
t735 = qJD(1) * t762;
t707 = -pkin(8) * t730 + t689 * t735;
t593 = qJD(3) * t737 + t707;
t549 = t680 * t592 - t593 * t678;
t698 = qJD(2) * t703;
t520 = qJD(1) * t698 + t549;
t550 = t678 * t592 + t680 * t593;
t530 = -pkin(9) * t710 + t550;
t692 = -qJD(4) * t487 + t688 * t520 - t684 * t530;
t444 = pkin(4) * t730 - pkin(10) * t527 + t692;
t774 = qJD(4) * t684;
t706 = t519 * t773 + t684 * t520 - t529 * t774 + t688 * t530;
t446 = -pkin(10) * t528 + t706;
t733 = -t683 * t444 - t687 * t446 - t471 * t771 + t476 * t772;
t832 = -t506 * t508 + t733;
t675 = t679 ^ 2;
t828 = -0.2e1 * t675 * t765;
t826 = MDP(5) * (t685 ^ 2 - t689 ^ 2);
t825 = t661 * t711;
t741 = -t688 * t656 - t657 * t684;
t579 = -pkin(10) * t644 + t741;
t580 = -pkin(10) * t643 + t782;
t712 = t579 * t687 - t580 * t683;
t822 = qJD(5) * t712 - t683 * t839 + t687 * t838;
t517 = t579 * t683 + t580 * t687;
t821 = qJD(5) * t517 + t683 * t838 + t687 * t839;
t799 = t679 * t685;
t631 = t678 * t799 - t681 * t680;
t632 = t678 * t681 + t680 * t799;
t582 = -t631 * t684 + t632 * t688;
t622 = pkin(8) * t798 + (pkin(1) * t685 + qJ(3)) * t681;
t574 = -t622 * t678 + t680 * t623;
t542 = -pkin(3) * t798 - pkin(9) * t632 + t574;
t575 = t680 * t622 + t678 * t623;
t553 = -pkin(9) * t631 + t575;
t744 = t688 * t542 - t553 * t684;
t482 = -pkin(4) * t798 - pkin(10) * t582 + t744;
t581 = t688 * t631 + t632 * t684;
t787 = t684 * t542 + t688 * t553;
t484 = -pkin(10) * t581 + t787;
t820 = t683 * t482 + t687 * t484;
t596 = pkin(3) * t732 + t629;
t750 = pkin(4) * t784 - t596;
t808 = t476 * t687;
t439 = t471 * t683 + t808;
t693 = -qJD(5) * t439 + t687 * t444 - t683 * t446;
t426 = -pkin(5) * t730 - t693;
t437 = -pkin(11) * t650 + t439;
t462 = -pkin(5) * t506 - pkin(11) * t831 + t508;
t720 = t437 * t682 - t462 * t686;
t818 = -t426 * t686 + t436 * t770 + t720 * t831;
t424 = t426 * t682;
t430 = t437 * t686 + t462 * t682;
t817 = t430 * t831 + t436 * t769 + t424;
t814 = -t508 * t831 + t693;
t545 = -qJD(2) * t699 - qJD(4) * t581;
t776 = qJD(2) * t685;
t755 = t679 * t776;
t708 = -pkin(8) * t755 + t689 * t762;
t612 = qJD(3) * t681 + t708;
t563 = t680 * t606 - t612 * t678;
t535 = t563 + t698;
t564 = t678 * t606 + t680 * t612;
t754 = qJD(2) * t798;
t731 = t678 * t754;
t548 = -pkin(9) * t731 + t564;
t694 = -qJD(4) * t787 + t688 * t535 - t548 * t684;
t455 = pkin(4) * t755 - pkin(10) * t545 + t694;
t546 = qJD(4) * t582 + t697;
t705 = t684 * t535 + t542 * t773 + t688 * t548 - t553 * t774;
t457 = -pkin(10) * t546 + t705;
t813 = -qJD(5) * t820 + t455 * t687 - t457 * t683;
t690 = qJD(1) ^ 2;
t804 = t559 * t685;
t803 = t560 * t685;
t802 = t585 * t686;
t801 = t675 * t690;
t800 = t678 * t689;
t792 = pkin(5) * t757 + t821;
t621 = pkin(8) * t729 + t685 * t735;
t630 = pkin(8) * t754 + t685 * t762;
t764 = pkin(1) * t801;
t761 = t682 * t798;
t588 = pkin(3) * t710 + t621;
t597 = pkin(3) * t731 + t630;
t672 = -pkin(3) * t680 - pkin(2);
t758 = t675 * t777;
t425 = pkin(11) * t730 - t733;
t498 = pkin(4) * t528 + t588;
t432 = pkin(5) * t467 - pkin(11) * t466 + t498;
t749 = -t425 * t682 + t686 * t432;
t743 = -t682 * t789 - t686 * t757;
t742 = t682 * t757 - t686 * t789;
t673 = pkin(4) * t683 + pkin(11);
t738 = -pkin(4) * t570 + qJD(6) * t673 + t479;
t734 = t675 * t685 * t689 * MDP(4);
t440 = t475 * t683 + t808;
t728 = pkin(4) * t772 - t440;
t441 = t475 * t687 - t809;
t727 = -pkin(4) * t771 + t441;
t726 = pkin(1) * t828;
t620 = pkin(4) * t643 + t672;
t518 = pkin(5) * t584 - pkin(11) * t585 + t620;
t725 = pkin(11) * t757 - qJD(6) * t518 - t822;
t724 = -pkin(5) * t788 + pkin(11) * t789 + qJD(6) * t517 - t750;
t722 = t425 * t686 + t432 * t682;
t721 = -t467 * t673 - t836;
t453 = -pkin(11) * t798 + t820;
t521 = t687 * t581 + t582 * t683;
t522 = -t581 * t683 + t582 * t687;
t625 = pkin(8) * t799 + (-pkin(1) * t689 - pkin(2)) * t681;
t583 = pkin(3) * t631 + t625;
t533 = pkin(4) * t581 + t583;
t469 = pkin(5) * t521 - pkin(11) * t522 + t533;
t719 = t453 * t686 + t469 * t682;
t718 = -t453 * t682 + t469 * t686;
t716 = t482 * t687 - t484 * t683;
t511 = pkin(4) * t546 + t597;
t509 = t522 * t682 + t686 * t798;
t704 = t683 * t455 + t687 * t457 + t482 * t771 - t484 * t772;
t702 = t585 * t769 - t743;
t701 = -t585 * t770 - t742;
t695 = -qJ(3) * t776 + (-pkin(2) * qJD(2) + qJD(3) - t598) * t689;
t674 = -pkin(4) * t687 - pkin(5);
t510 = t522 * t686 - t761;
t474 = qJD(5) * t522 + t545 * t683 + t687 * t546;
t473 = -qJD(5) * t521 + t545 * t687 - t546 * t683;
t459 = -qJD(6) * t761 + t473 * t682 + t522 * t769 - t686 * t755;
t458 = -qJD(6) * t509 + t473 * t686 + t682 * t755;
t452 = pkin(5) * t798 - t716;
t433 = pkin(5) * t474 - pkin(11) * t473 + t511;
t428 = -pkin(5) * t755 - t813;
t427 = pkin(11) * t755 + t704;
t423 = -qJD(6) * t430 + t749;
t422 = -qJD(6) * t720 + t722;
t1 = [(t704 * t650 + t511 * t831 + t533 * t466 + t498 * t522 + t508 * t473 + (-t733 * t689 + (-qJD(1) * t820 - t439) * t776) * t679) * MDP(28) + (-t473 * t650 + (-t466 * t689 + (qJD(1) * t522 + t831) * t776) * t679) * MDP(24) + (t466 * t522 + t473 * t831) * MDP(22) + (-(-qJD(6) * t719 - t427 * t682 + t433 * t686) * t767 + t718 * t467 + t423 * t521 - t720 * t474 + t428 * t495 + t452 * t451 + t426 * t509 + t436 * t459) * MDP(34) + ((qJD(6) * t718 + t427 * t686 + t433 * t682) * t767 - t719 * t467 - t422 * t521 - t430 * t474 + t428 * t497 + t452 * t450 + t426 * t510 + t436 * t458) * MDP(35) + (-t451 * t521 + t459 * t767 - t467 * t509 - t474 * t495) * MDP(32) + (t450 * t521 - t458 * t767 + t467 * t510 + t474 * t497) * MDP(31) + (t467 * t521 - t474 * t767) * MDP(33) + (-t527 * t581 - t528 * t582 + t545 * t711 + t546 * t570) * MDP(16) + (t705 * t661 - t597 * t570 + t583 * t527 + t588 * t582 + t569 * t545 + (t706 * t689 + (-qJD(1) * t787 - t487) * t776) * t679) * MDP(21) + (t527 * t582 - t545 * t570) * MDP(15) + (-t545 * t661 + (-t527 * t689 + (qJD(1) * t582 - t570) * t776) * t679) * MDP(17) + (-t466 * t521 - t467 * t522 + t473 * t506 - t474 * t831) * MDP(23) + (t474 * t650 + (t467 * t689 + (-qJD(1) * t521 + t506) * t776) * t679) * MDP(25) + (-t813 * t650 - t511 * t506 + t533 * t467 + t498 * t521 + t508 * t474 + (-t693 * t689 + (qJD(1) * t716 + t438) * t776) * t679) * MDP(27) + (MDP(6) * t754 - MDP(7) * t755) * (qJD(2) + 0.2e1 * t778) + (-t694 * t661 - t597 * t711 + t583 * t528 + t588 * t581 + t569 * t546 + (-t692 * t689 + (qJD(1) * t744 + t486) * t776) * t679) * MDP(20) + (t546 * t661 + (t528 * t689 + (-qJD(1) * t581 + t711) * t776) * t679) * MDP(18) + (-t621 * t681 - t630 * t737 + t685 * t726) * MDP(9) + (-t681 * t707 + t689 * t726 - t708 * t737) * MDP(10) + (t615 * t630 + t621 * t632 + ((qJD(1) * t564 + t550) * t689 + (t598 * t797 - t803 + (-t575 * t685 + t625 * t797) * qJD(1)) * qJD(2)) * t679) * MDP(12) + (t613 * t630 + t621 * t631 + ((-qJD(1) * t563 - t549) * t689 + (t598 * t800 + t804 + (t574 * t685 + t625 * t800) * qJD(1)) * qJD(2)) * t679) * MDP(11) + (-t661 * t679 - t758) * MDP(19) * t776 + (-t650 * t679 - t758) * MDP(26) * t776 + 0.2e1 * t734 * t765 + (-t549 * t632 - t550 * t631 - t563 * t615 - t564 * t613 + (-t559 * t680 - t560 * t678 + (-t574 * t680 - t575 * t678) * qJD(1)) * t754) * MDP(13) + t826 * t828 + (t549 * t574 + t550 * t575 + t559 * t563 + t560 * t564 + t598 * t630 + t621 * t625) * MDP(14) + (-t450 * t509 - t451 * t510 - t458 * t495 - t459 * t497) * MDP(30) + (t450 * t510 + t458 * t497) * MDP(29); (t466 * t585 + t789 * t831) * MDP(22) + (t620 * t466 + t498 * t585 + t789 * t508 + t750 * t831) * MDP(28) + (t450 * t584 + t465 * t585 + t497 * t788 - t701 * t767) * MDP(31) + (t467 * t584 - t767 * t788) * MDP(33) + (-t451 * t584 - t463 * t585 - t495 * t788 + t702 * t767) * MDP(32) + ((-t517 * t682 + t518 * t686) * t467 + t423 * t584 - t712 * t451 + t585 * t424 - (t682 * t725 - t686 * t724) * t767 + t792 * t495 - t788 * t720 + t702 * t436) * MDP(34) + (-(t517 * t686 + t518 * t682) * t467 - t422 * t584 - t712 * t450 + t426 * t802 - (t682 * t724 + t686 * t725) * t767 + t792 * t497 - t788 * t430 + t701 * t436) * MDP(35) + (-t527 * t643 - t528 * t644 + t570 * t784 + t711 * t785) * MDP(16) + (t672 * t527 + t785 * t569 + t570 * t596 + t588 * t644) * MDP(21) + (t527 * t644 - t570 * t785) * MDP(15) + (-t734 + (-MDP(6) * t689 + MDP(7) * t685) * t679 * t681) * t690 + ((-qJD(2) * t584 - t506) * MDP(25) + (qJD(2) * t712 - t438) * MDP(27) + (qJD(2) * t585 - t831) * MDP(24) + (-qJD(2) * t517 + t439) * MDP(28) + t661 * MDP(19) + t650 * MDP(26) + (qJD(2) * t741 - t486) * MDP(20) + (-qJD(2) * t643 - t711) * MDP(18) + (qJD(2) * t644 + t570) * MDP(17) + (-qJD(2) * t782 + t487) * MDP(21)) * t757 + (-t466 * t584 - t467 * t585 + t506 * t789 - t788 * t831) * MDP(23) + (t620 * t467 + t498 * t584 - t506 * t750 + t788 * t508) * MDP(27) + (-pkin(2) * t621 - t559 * t576 - t560 * t577 - t598 * t629 + (-t559 * t678 + t560 * t680) * qJD(3) + (-t549 * t678 + t550 * t680) * qJ(3)) * MDP(14) + (t629 * t737 + t685 * t764 - t621) * MDP(9) + (t576 * t615 + t577 * t613 + (-qJD(3) * t613 + t559 * t756 + t550) * t680 + (qJD(3) * t615 + t560 * t756 - t549) * t678) * MDP(13) + (t672 * t528 + t784 * t569 + t588 * t643 + t596 * t711) * MDP(20) + (t450 * t802 + t497 * t701) * MDP(29) + (-t615 * t629 + t621 * t678 + (-t577 * t689 + t680 * t695 + t803) * t779) * MDP(12) + (-t613 * t629 - t621 * t680 + (t576 * t689 + t678 * t695 - t804) * t779) * MDP(11) + (t784 * MDP(18) - t785 * MDP(17) + (t552 + t709 * t688 + (-qJD(4) * t656 + t846) * t684) * MDP(20) + t843 * MDP(21)) * t661 + (-t789 * MDP(24) + t788 * MDP(25) + MDP(27) * t821 + MDP(28) * t822) * t650 + (t628 * t737 + t689 * t764 - t707) * MDP(10) + (t743 * t497 + t742 * t495 + (-t448 - t451 * t686 + (t495 * t682 - t497 * t686) * qJD(6)) * t585) * MDP(30) + t801 * t826; (-t613 ^ 2 - t615 ^ 2) * MDP(13) + (t559 * t615 + t560 * t613 + t621) * MDP(14) + (-t613 * t774 + t615 * t773 + t834) * MDP(20) + (-t615 * t774 + t783 - t825) * MDP(21) + (t467 - t840) * MDP(27) + (t466 - t844) * MDP(28) + (t465 - t842) * MDP(34) + (-t463 - t841) * MDP(35) + (-t615 * MDP(11) + t613 * MDP(12) + ((MDP(20) * t684 + MDP(12)) * t680 + (MDP(20) * t688 - MDP(21) * t684 + MDP(11)) * t678) * qJD(2)) * t756 - (MDP(34) * t682 + MDP(35) * t686) * t767 ^ 2; (t570 ^ 2 - t711 ^ 2) * MDP(16) + (t527 + t825) * MDP(17) + (-t486 * t661 - t569 * t711 - t706) * MDP(21) + t570 * t711 * MDP(15) + MDP(19) * t730 + (-t644 * t729 + t819 + t834) * MDP(18) + (-t487 * t661 + t569 * t570 + t692) * MDP(20) + (-t440 * t650 + (-t506 * t570 + t650 * t772 + t687 * t730) * pkin(4) + t814) * MDP(27) + (-t441 * t650 + (t570 * t831 + t650 * t771 - t683 * t730) * pkin(4) + t832) * MDP(28) + (t674 * t451 + t721 * t682 + t728 * t495 - (t682 * t727 - t686 * t738) * t767 + t818) * MDP(34) + (t674 * t450 + t721 * t686 + t728 * t497 - (t682 * t738 + t686 * t727) * t767 + t817) * MDP(35) + t837; (-t439 * t650 + t814) * MDP(27) + (-t438 * t650 + t832) * MDP(28) + (-pkin(5) * t451 + (-t438 * t682 + t479 * t686) * t767 - t439 * t495 - t682 * t836 - t793 * pkin(11) + t818) * MDP(34) + (-pkin(5) * t450 - (t438 * t686 + t479 * t682) * t767 - t439 * t497 - t436 * t835 + (-t767 * t770 - t465) * pkin(11) + t817) * MDP(35) + t837; t497 * t495 * MDP(29) + (-t495 ^ 2 + t497 ^ 2) * MDP(30) + (-t495 * t767 + t759) * MDP(31) + (-t497 * t767 - t746) * MDP(32) + t467 * MDP(33) + (-t430 * t767 - t436 * t497 + t749) * MDP(34) + (t436 * t495 + t720 * t767 - t722) * MDP(35) + (-MDP(31) * t805 - MDP(32) * t497 - MDP(34) * t430 + MDP(35) * t720) * qJD(6);];
tauc  = t1;
