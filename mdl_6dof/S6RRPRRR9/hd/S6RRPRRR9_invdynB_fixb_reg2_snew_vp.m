% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRPRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 23:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRPRRR9_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR9_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR9_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR9_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR9_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR9_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 23:08:21
% EndTime: 2019-05-06 23:09:56
% DurationCPUTime: 90.50s
% Computational Cost: add. (985169->1121), mult. (2246687->1822), div. (0->0), fcn. (1865650->14), ass. (0->807)
t1443 = -2 * qJD(3);
t1248 = sin(qJ(6));
t1244 = sin(pkin(12));
t1246 = cos(pkin(12));
t1247 = cos(pkin(6));
t1409 = qJD(1) * t1247;
t1355 = qJD(2) + t1409;
t1245 = sin(pkin(6));
t1251 = sin(qJ(2));
t1382 = t1245 * t1251;
t1368 = qJD(1) * t1382;
t1202 = t1244 * t1368 - t1246 * t1355;
t1203 = t1244 * t1355 + t1246 * t1368;
t1250 = sin(qJ(4));
t1255 = cos(qJ(4));
t1163 = -t1202 * t1255 - t1250 * t1203;
t1164 = -t1202 * t1250 + t1203 * t1255;
t1249 = sin(qJ(5));
t1254 = cos(qJ(5));
t1108 = t1163 * t1249 + t1164 * t1254;
t1256 = cos(qJ(2));
t1381 = t1245 * t1256;
t1367 = qJD(1) * t1381;
t1229 = -qJD(4) + t1367;
t1222 = -qJD(5) + t1229;
t1253 = cos(qJ(6));
t1083 = t1108 * t1248 + t1253 * t1222;
t1085 = t1108 * t1253 - t1222 * t1248;
t1014 = t1085 * t1083;
t1370 = t1251 * qJDD(1);
t1408 = qJD(1) * t1256;
t1209 = (qJD(2) * t1408 + t1370) * t1245;
t1350 = qJDD(1) * t1247 + qJDD(2);
t1174 = t1246 * t1209 + t1244 * t1350;
t1271 = t1244 * t1209 - t1246 * t1350;
t1352 = t1250 * t1174 + t1255 * t1271;
t1087 = -qJD(4) * t1164 - t1352;
t1088 = t1163 * qJD(4) + t1255 * t1174 - t1250 * t1271;
t1354 = -t1254 * t1087 + t1249 * t1088;
t980 = -qJD(5) * t1108 - t1354;
t1276 = qJDD(6) - t980;
t1433 = -t1014 + t1276;
t1442 = t1248 * t1433;
t1441 = t1253 * t1433;
t1106 = -t1254 * t1163 + t1164 * t1249;
t1096 = t1106 * t1222;
t1274 = qJD(5) * t1106 - t1087 * t1249 - t1088 * t1254;
t1440 = t1274 - t1096;
t1349 = t1355 ^ 2;
t1103 = qJD(6) + t1106;
t1024 = t1103 * t1083;
t1371 = qJDD(1) * t1245;
t1210 = -qJD(2) * t1368 + t1256 * t1371;
t1302 = -qJDD(4) + t1210;
t1204 = -qJDD(5) + t1302;
t931 = -t1083 * qJD(6) - t1248 * t1204 - t1253 * t1274;
t906 = -t931 + t1024;
t1241 = t1245 ^ 2;
t1258 = qJD(1) ^ 2;
t1383 = t1241 * t1258;
t1392 = t1202 * t1203;
t1277 = -t1210 - t1392;
t1439 = t1244 * t1277;
t1438 = t1246 * t1277;
t1398 = t1106 * t1108;
t1267 = -t1204 - t1398;
t1437 = t1249 * t1267;
t1393 = t1163 * t1164;
t1270 = -t1302 + t1393;
t1436 = t1250 * t1270;
t1435 = t1254 * t1267;
t1434 = t1255 * t1270;
t1153 = t1163 * t1229;
t1057 = -t1153 - t1088;
t1431 = -t1153 + t1088;
t1185 = t1202 * t1367;
t1149 = t1185 - t1174;
t1186 = t1203 * t1367;
t1147 = -t1271 - t1186;
t1079 = (-t1163 * t1250 + t1164 * t1255) * t1229;
t1080 = (-t1163 * t1255 - t1164 * t1250) * t1229;
t1012 = -t1079 * t1244 + t1080 * t1246;
t1430 = t1251 * t1012 + t1256 * t1302;
t1252 = sin(qJ(1));
t1257 = cos(qJ(1));
t1232 = g(1) * t1257 + g(2) * t1252;
t1205 = -pkin(1) * t1258 + pkin(8) * t1371 - t1232;
t1424 = pkin(2) * t1256;
t1347 = -qJ(3) * t1251 - t1424;
t1410 = qJD(1) * t1245;
t1206 = t1347 * t1410;
t1231 = t1252 * g(1) - t1257 * g(2);
t1422 = pkin(8) * t1245;
t1268 = qJDD(1) * pkin(1) + t1258 * t1422 + t1231;
t1266 = t1247 * t1268;
t1264 = -g(3) * t1382 + t1251 * t1266;
t1123 = -t1349 * pkin(2) + t1350 * qJ(3) + (t1206 * t1410 + t1205) * t1256 + t1264;
t1317 = t1355 * qJD(1);
t1295 = t1251 * t1317;
t1296 = t1256 * t1317;
t1421 = t1247 * g(3);
t1124 = -t1210 * pkin(2) - t1421 - t1209 * qJ(3) + (pkin(2) * t1295 - qJ(3) * t1296 - t1268) * t1245;
t1346 = -t1244 * t1123 + t1246 * t1124 + t1203 * t1443;
t1356 = t1253 * t1204 - t1248 * t1274;
t901 = (qJD(6) - t1103) * t1085 + t1356;
t946 = (qJD(5) + t1222) * t1108 + t1354;
t1053 = (qJD(4) + t1229) * t1164 + t1352;
t1429 = pkin(9) * t1149 + t1346;
t1081 = t1083 ^ 2;
t1082 = t1085 ^ 2;
t1102 = t1103 ^ 2;
t1104 = t1106 ^ 2;
t1105 = t1108 ^ 2;
t1428 = t1163 ^ 2;
t1162 = t1164 ^ 2;
t1427 = t1202 ^ 2;
t1200 = t1203 ^ 2;
t1426 = t1222 ^ 2;
t1225 = t1229 ^ 2;
t1425 = pkin(2) * t1251;
t1423 = pkin(5) * t1249;
t1031 = pkin(5) * t1106 - pkin(11) * t1108;
t1030 = t1246 * t1123 + t1244 * t1124 + t1202 * t1443;
t1175 = -pkin(3) * t1367 - pkin(9) * t1203;
t1262 = -pkin(9) * t1271 + t1175 * t1367 + t1030;
t1261 = -pkin(3) * t1427 + t1262;
t1263 = t1277 * pkin(3) + t1429;
t913 = t1250 * t1261 - t1255 * t1263;
t1260 = t1270 * pkin(4) + pkin(10) * t1057 - t913;
t1142 = -pkin(4) * t1229 - pkin(10) * t1164;
t914 = t1250 * t1263 + t1255 * t1261;
t879 = -pkin(4) * t1428 + pkin(10) * t1087 + t1142 * t1229 + t914;
t788 = t1249 * t1260 + t1254 * t879;
t766 = -pkin(5) * t1426 - pkin(11) * t1204 - t1031 * t1106 + t788;
t1351 = t1251 * t1205 - t1256 * t1266;
t1119 = qJDD(3) - t1350 * pkin(2) - t1349 * qJ(3) + (qJD(1) * t1206 * t1251 + g(3) * t1256) * t1245 + t1351;
t1035 = t1271 * pkin(3) - t1427 * pkin(9) + t1203 * t1175 + t1119;
t934 = -t1087 * pkin(4) - t1428 * pkin(10) + t1164 * t1142 + t1035;
t832 = t1440 * pkin(11) + (-t1108 * t1222 - t980) * pkin(5) + t934;
t734 = t1248 * t832 + t1253 * t766;
t839 = t1250 * t914 - t1255 * t913;
t1420 = t1244 * t839;
t1419 = t1246 * t839;
t787 = t1249 * t879 - t1254 * t1260;
t765 = t1204 * pkin(5) - pkin(11) * t1426 + t1031 * t1108 + t787;
t1418 = t1248 * t765;
t918 = t1014 + t1276;
t1417 = t1248 * t918;
t1416 = t1249 * t934;
t729 = t1249 * t788 - t1254 * t787;
t1415 = t1250 * t729;
t1414 = t1253 * t765;
t1413 = t1253 * t918;
t1412 = t1254 * t934;
t1411 = t1255 * t729;
t1021 = t1204 - t1398;
t1406 = t1021 * t1249;
t1405 = t1021 * t1254;
t1404 = t1035 * t1250;
t1403 = t1035 * t1255;
t1093 = t1302 + t1393;
t1402 = t1093 * t1250;
t1401 = t1093 * t1255;
t1400 = t1103 * t1248;
t1399 = t1103 * t1253;
t1397 = t1119 * t1244;
t1396 = t1119 * t1246;
t1150 = t1210 - t1392;
t1395 = t1150 * t1244;
t1394 = t1150 * t1246;
t1377 = t1251 * t1256;
t1357 = t1241 * t1377;
t1228 = t1258 * t1357;
t1207 = -t1228 + t1350;
t1391 = t1207 * t1251;
t1390 = t1207 * t1256;
t1208 = t1228 + t1350;
t1389 = t1208 * t1251;
t1388 = t1208 * t1256;
t1387 = t1222 * t1249;
t1386 = t1222 * t1254;
t1385 = t1229 * t1250;
t1384 = t1229 * t1255;
t1187 = t1245 * t1268 + t1421;
t1379 = t1251 * t1187;
t1378 = t1251 * t1210;
t1376 = t1256 * t1187;
t1369 = -pkin(5) * t1254 - pkin(4);
t1366 = t1249 * t1014;
t1365 = t1254 * t1014;
t1364 = t1251 * t1398;
t1363 = t1256 * t1398;
t1362 = t1251 * t1393;
t1361 = t1256 * t1393;
t1360 = t1251 * t1392;
t1359 = t1256 * t1392;
t1242 = t1251 ^ 2;
t1358 = t1242 * t1383;
t733 = t1248 * t766 - t1253 * t832;
t730 = t1249 * t787 + t1254 * t788;
t840 = t1250 * t913 + t1255 * t914;
t959 = t1246 * t1030 - t1244 * t1346;
t1189 = -t1231 * t1252 - t1257 * t1232;
t1227 = qJDD(1) * t1257 - t1252 * t1258;
t1348 = -pkin(7) * t1227 - g(3) * t1252;
t1199 = -t1358 - t1349;
t1165 = -t1199 * t1251 - t1390;
t1345 = pkin(8) * t1165 - t1379;
t1243 = t1256 ^ 2;
t1236 = t1243 * t1383;
t1214 = -t1236 - t1349;
t1169 = t1214 * t1256 - t1389;
t1344 = pkin(8) * t1169 + t1376;
t673 = t1248 * t734 - t1253 * t733;
t674 = t1248 * t733 + t1253 * t734;
t648 = t1249 * t674 - t1254 * t765;
t649 = t1249 * t765 + t1254 * t674;
t621 = t1250 * t649 + t1255 * t648;
t622 = -t1250 * t648 + t1255 * t649;
t594 = -t1244 * t621 + t1246 * t622;
t1343 = t1251 * t594 - t1256 * t673;
t669 = t1250 * t730 + t1411;
t670 = t1255 * t730 - t1415;
t632 = -t1244 * t669 + t1246 * t670;
t1342 = t1251 * t632 - t1256 * t934;
t905 = -t1024 - t931;
t824 = -t1248 * t905 - t1253 * t901;
t971 = t1081 + t1082;
t791 = t1249 * t824 + t1254 * t971;
t792 = -t1249 * t971 + t1254 * t824;
t731 = t1250 * t792 + t1255 * t791;
t732 = -t1250 * t791 + t1255 * t792;
t672 = -t1244 * t731 + t1246 * t732;
t822 = -t1248 * t901 + t1253 * t905;
t1341 = t1251 * t672 - t1256 * t822;
t1013 = -t1082 + t1081;
t902 = (-qJD(6) - t1103) * t1085 - t1356;
t823 = t1248 * t906 + t1253 * t902;
t796 = t1013 * t1254 + t1249 * t823;
t797 = -t1013 * t1249 + t1254 * t823;
t735 = t1250 * t797 + t1255 * t796;
t736 = -t1250 * t796 + t1255 * t797;
t679 = -t1244 * t735 + t1246 * t736;
t825 = -t1248 * t902 + t1253 * t906;
t1340 = t1251 * t679 + t1256 * t825;
t986 = -t1102 - t1081;
t864 = t1253 * t986 - t1442;
t799 = t1249 * t864 + t1254 * t902;
t800 = -t1249 * t902 + t1254 * t864;
t739 = t1250 * t800 + t1255 * t799;
t740 = -t1250 * t799 + t1255 * t800;
t681 = -t1244 * t739 + t1246 * t740;
t863 = t1248 * t986 + t1441;
t1339 = t1251 * t681 - t1256 * t863;
t988 = -t1082 - t1102;
t875 = -t1248 * t988 - t1413;
t801 = t1249 * t875 + t1254 * t906;
t802 = -t1249 * t906 + t1254 * t875;
t742 = t1250 * t802 + t1255 * t801;
t743 = -t1250 * t801 + t1255 * t802;
t683 = -t1244 * t742 + t1246 * t743;
t874 = t1253 * t988 - t1417;
t1338 = t1251 * t683 - t1256 * t874;
t1020 = -t1082 + t1102;
t885 = -t1020 * t1248 + t1441;
t809 = t1249 * t885 + t1254 * t905;
t811 = -t1249 * t905 + t1254 * t885;
t750 = t1250 * t811 + t1255 * t809;
t752 = -t1250 * t809 + t1255 * t811;
t690 = -t1244 * t750 + t1246 * t752;
t888 = -t1020 * t1253 - t1442;
t1337 = t1251 * t690 + t1256 * t888;
t1019 = t1081 - t1102;
t887 = t1019 * t1253 - t1417;
t810 = t1249 * t887 + t1254 * t901;
t812 = -t1249 * t901 + t1254 * t887;
t751 = t1250 * t812 + t1255 * t810;
t753 = -t1250 * t810 + t1255 * t812;
t691 = -t1244 * t751 + t1246 * t753;
t886 = -t1019 * t1248 - t1413;
t1336 = t1251 * t691 + t1256 * t886;
t930 = -qJD(6) * t1085 - t1356;
t891 = t1083 * t1399 - t1248 * t930;
t849 = t1249 * t891 + t1365;
t851 = t1254 * t891 - t1366;
t769 = t1250 * t851 + t1255 * t849;
t771 = -t1250 * t849 + t1255 * t851;
t720 = -t1244 * t769 + t1246 * t771;
t893 = -t1083 * t1400 - t1253 * t930;
t1335 = t1251 * t720 + t1256 * t893;
t894 = -t1085 * t1400 + t1253 * t931;
t850 = t1249 * t894 - t1365;
t852 = t1254 * t894 + t1366;
t770 = t1250 * t852 + t1255 * t850;
t772 = -t1250 * t850 + t1255 * t852;
t721 = -t1244 * t770 + t1246 * t772;
t892 = -t1085 * t1399 - t1248 * t931;
t1334 = t1251 * t721 + t1256 * t892;
t950 = t1096 + t1274;
t869 = -t1249 * t946 + t1254 * t950;
t871 = -t1249 * t950 - t1254 * t946;
t782 = t1250 * t871 + t1255 * t869;
t784 = -t1250 * t869 + t1255 * t871;
t726 = -t1244 * t782 + t1246 * t784;
t992 = -t1104 - t1105;
t1333 = t1251 * t726 - t1256 * t992;
t951 = (-t1083 * t1253 + t1085 * t1248) * t1103;
t889 = t1249 * t951 - t1254 * t1276;
t890 = t1249 * t1276 + t1254 * t951;
t804 = t1250 * t890 + t1255 * t889;
t805 = -t1250 * t889 + t1255 * t890;
t747 = -t1244 * t804 + t1246 * t805;
t952 = (t1083 * t1248 + t1085 * t1253) * t1103;
t1332 = t1251 * t747 + t1256 * t952;
t1026 = -t1426 - t1104;
t953 = t1026 * t1249 + t1435;
t954 = t1026 * t1254 - t1437;
t876 = t1250 * t954 + t1255 * t953;
t877 = -t1250 * t953 + t1255 * t954;
t790 = -t1244 * t876 + t1246 * t877;
t945 = (qJD(5) - t1222) * t1108 + t1354;
t1331 = t1251 * t790 - t1256 * t945;
t1070 = -t1105 - t1426;
t976 = t1070 * t1254 + t1406;
t977 = -t1070 * t1249 + t1405;
t899 = t1250 * t977 + t1255 * t976;
t900 = -t1250 * t976 + t1255 * t977;
t821 = -t1244 * t899 + t1246 * t900;
t1330 = t1251 * t821 + t1256 * t1440;
t1092 = -t1105 + t1426;
t982 = t1092 * t1254 + t1437;
t984 = -t1092 * t1249 + t1435;
t907 = t1250 * t984 + t1255 * t982;
t909 = -t1250 * t982 + t1255 * t984;
t828 = -t1244 * t907 + t1246 * t909;
t1329 = t1251 * t828 + t1256 * t950;
t1091 = t1104 - t1426;
t983 = t1091 * t1249 - t1405;
t985 = t1091 * t1254 + t1406;
t908 = t1250 * t985 + t1255 * t983;
t910 = -t1250 * t983 + t1255 * t985;
t829 = -t1244 * t908 + t1246 * t910;
t1328 = t1251 * t829 + t1256 * t946;
t1032 = -t1105 + t1104;
t868 = -t1249 * t945 - t1254 * t1440;
t870 = t1249 * t1440 - t1254 * t945;
t781 = t1250 * t870 + t1255 * t868;
t783 = -t1250 * t868 + t1255 * t870;
t725 = -t1244 * t781 + t1246 * t783;
t1327 = t1032 * t1256 + t1251 * t725;
t760 = t1246 * t840 - t1420;
t1326 = -t1035 * t1256 + t1251 * t760;
t1052 = (qJD(4) - t1229) * t1164 + t1352;
t1100 = -t1225 - t1428;
t1017 = t1100 * t1250 + t1434;
t1018 = t1100 * t1255 - t1436;
t944 = -t1017 * t1244 + t1018 * t1246;
t1325 = -t1052 * t1256 + t1251 * t944;
t1143 = -t1225 + t1428;
t1049 = t1143 * t1250 - t1401;
t1051 = t1143 * t1255 + t1402;
t970 = -t1049 * t1244 + t1051 * t1246;
t1324 = t1053 * t1256 + t1251 * t970;
t1132 = -t1162 - t1225;
t1039 = t1132 * t1255 + t1402;
t1040 = -t1132 * t1250 + t1401;
t962 = -t1039 * t1244 + t1040 * t1246;
t1323 = t1251 * t962 - t1256 * t1431;
t1144 = -t1162 + t1225;
t1048 = t1144 * t1255 + t1436;
t1050 = -t1144 * t1250 + t1434;
t969 = -t1048 * t1244 + t1050 * t1246;
t1322 = t1057 * t1256 + t1251 * t969;
t1065 = -t1162 - t1428;
t973 = -t1053 * t1250 + t1057 * t1255;
t975 = -t1053 * t1255 - t1057 * t1250;
t898 = -t1244 * t973 + t1246 * t975;
t1321 = -t1065 * t1256 + t1251 * t898;
t1109 = -t1162 + t1428;
t972 = -t1052 * t1250 + t1255 * t1431;
t974 = -t1052 * t1255 - t1250 * t1431;
t897 = -t1244 * t972 + t1246 * t974;
t1320 = t1109 * t1256 + t1251 * t897;
t1319 = -t1119 * t1256 + t1251 * t959;
t1015 = (t1106 * t1249 + t1108 * t1254) * t1222;
t1016 = (t1106 * t1254 - t1108 * t1249) * t1222;
t937 = t1015 * t1255 + t1016 * t1250;
t938 = -t1015 * t1250 + t1016 * t1255;
t858 = -t1244 * t937 + t1246 * t938;
t1318 = t1204 * t1256 + t1251 * t858;
t958 = t1030 * t1244 + t1246 * t1346;
t1146 = t1186 - t1271;
t1148 = t1185 + t1174;
t1073 = t1146 * t1246 - t1148 * t1244;
t1166 = -t1200 + t1427;
t1316 = t1073 * t1251 + t1166 * t1256;
t1074 = t1147 * t1246 - t1149 * t1244;
t1139 = t1200 + t1427;
t1315 = t1074 * t1251 + t1139 * t1256;
t1160 = -t1236 - t1427;
t1090 = t1160 * t1246 - t1439;
t1314 = t1090 * t1251 + t1146 * t1256;
t1183 = -t1200 - t1236;
t1113 = -t1183 * t1244 + t1394;
t1313 = t1113 * t1251 - t1148 * t1256;
t1182 = -t1200 + t1236;
t1114 = -t1182 * t1244 + t1438;
t1312 = t1114 * t1251 + t1149 * t1256;
t1181 = -t1236 + t1427;
t1115 = t1181 * t1246 + t1395;
t1311 = t1115 * t1251 - t1147 * t1256;
t1158 = g(3) * t1381 + t1351;
t1159 = t1256 * t1205 + t1264;
t1310 = -t1256 * t1158 + t1251 * t1159;
t1101 = t1158 * t1251 + t1159 * t1256;
t1218 = t1245 * t1296;
t1177 = t1218 + t1209;
t1217 = t1245 * t1295;
t1180 = t1210 - t1217;
t1309 = t1177 * t1256 + t1180 * t1251;
t1178 = -t1218 + t1209;
t1179 = t1210 + t1217;
t1308 = -t1178 * t1256 + t1179 * t1251;
t1307 = t1199 * t1256 - t1391;
t1213 = t1236 - t1349;
t1306 = t1213 * t1251 + t1390;
t1212 = t1349 - t1358;
t1305 = t1212 * t1256 + t1389;
t1304 = t1214 * t1251 + t1388;
t1188 = t1231 * t1257 - t1232 * t1252;
t1303 = t1245 * t1350;
t939 = -t1106 * t1387 + t1254 * t980;
t940 = -t1106 * t1386 - t1249 * t980;
t859 = t1250 * t940 + t1255 * t939;
t861 = -t1250 * t939 + t1255 * t940;
t777 = -t1244 * t859 + t1246 * t861;
t1301 = t1251 * t777 + t1363;
t941 = -t1108 * t1386 - t1249 * t1274;
t942 = t1108 * t1387 - t1254 * t1274;
t860 = t1250 * t942 + t1255 * t941;
t862 = -t1250 * t941 + t1255 * t942;
t778 = -t1244 * t860 + t1246 * t862;
t1300 = t1251 * t778 - t1363;
t1043 = t1087 * t1255 + t1163 * t1385;
t1044 = -t1087 * t1250 + t1163 * t1384;
t965 = -t1043 * t1244 + t1044 * t1246;
t1299 = t1251 * t965 - t1361;
t1045 = t1088 * t1250 - t1164 * t1384;
t1046 = t1088 * t1255 + t1164 * t1385;
t966 = -t1045 * t1244 + t1046 * t1246;
t1298 = t1251 * t966 + t1361;
t1297 = t1245 * t1317;
t1136 = -t1185 * t1246 + t1244 * t1271;
t1294 = t1136 * t1251 + t1359;
t1138 = t1174 * t1246 + t1186 * t1244;
t1293 = t1138 * t1251 - t1359;
t595 = pkin(10) * t649 + (-pkin(11) * t1249 + t1369) * t673;
t609 = -pkin(10) * t648 + (-pkin(11) * t1254 + t1423) * t673;
t577 = -pkin(3) * t673 + pkin(9) * t622 + t1250 * t609 + t1255 * t595;
t579 = -pkin(9) * t621 - t1250 * t595 + t1255 * t609;
t593 = t1244 * t622 + t1246 * t621;
t564 = -qJ(3) * t593 - t1244 * t577 + t1246 * t579;
t578 = -pkin(2) * t593 - pkin(3) * t621 - pkin(4) * t648 + pkin(5) * t765 - pkin(11) * t674;
t592 = t1251 * t673 + t1256 * t594;
t1292 = pkin(8) * t592 + t1251 * t564 + t1256 * t578;
t655 = -pkin(11) * t822 - t673;
t637 = pkin(10) * t792 + t1249 * t655 + t1369 * t822;
t641 = -pkin(10) * t791 + t1254 * t655 + t1423 * t822;
t596 = -pkin(3) * t822 + pkin(9) * t732 + t1250 * t641 + t1255 * t637;
t600 = -pkin(9) * t731 - t1250 * t637 + t1255 * t641;
t671 = t1244 * t732 + t1246 * t731;
t582 = -qJ(3) * t671 - t1244 * t596 + t1246 * t600;
t618 = -pkin(2) * t671 - pkin(3) * t731 - pkin(4) * t791 - pkin(5) * t971 - pkin(11) * t824 - t674;
t654 = t1251 * t822 + t1256 * t672;
t1291 = pkin(8) * t654 + t1251 * t582 + t1256 * t618;
t705 = -pkin(5) * t863 + t733;
t749 = -pkin(11) * t863 + t1418;
t646 = -pkin(4) * t863 + pkin(10) * t800 + t1249 * t749 + t1254 * t705;
t650 = -pkin(10) * t799 - t1249 * t705 + t1254 * t749;
t607 = -pkin(3) * t863 + pkin(9) * t740 + t1250 * t650 + t1255 * t646;
t611 = -pkin(9) * t739 - t1250 * t646 + t1255 * t650;
t680 = t1244 * t740 + t1246 * t739;
t585 = -qJ(3) * t680 - t1244 * t607 + t1246 * t611;
t626 = -pkin(2) * t680 - pkin(3) * t739 - pkin(4) * t799 - pkin(5) * t902 - pkin(11) * t864 + t1414;
t667 = t1251 * t863 + t1256 * t681;
t1290 = pkin(8) * t667 + t1251 * t585 + t1256 * t626;
t707 = -pkin(5) * t874 + t734;
t754 = -pkin(11) * t874 + t1414;
t647 = -pkin(4) * t874 + pkin(10) * t802 + t1249 * t754 + t1254 * t707;
t651 = -pkin(10) * t801 - t1249 * t707 + t1254 * t754;
t608 = -pkin(3) * t874 + pkin(9) * t743 + t1250 * t651 + t1255 * t647;
t612 = -pkin(9) * t742 - t1250 * t647 + t1255 * t651;
t682 = t1244 * t743 + t1246 * t742;
t586 = -qJ(3) * t682 - t1244 * t608 + t1246 * t612;
t627 = -pkin(2) * t682 - pkin(3) * t742 - pkin(4) * t801 - pkin(5) * t906 - pkin(11) * t875 - t1418;
t668 = t1251 * t874 + t1256 * t683;
t1289 = pkin(8) * t668 + t1251 * t586 + t1256 * t627;
t711 = -pkin(4) * t934 + pkin(10) * t730;
t625 = -pkin(3) * t934 + pkin(9) * t670 - pkin(10) * t1415 + t1255 * t711;
t629 = -pkin(9) * t669 - pkin(10) * t1411 - t1250 * t711;
t631 = t1244 * t670 + t1246 * t669;
t589 = -qJ(3) * t631 - t1244 * t625 + t1246 * t629;
t603 = -pkin(2) * t631 - pkin(3) * t669 - pkin(4) * t729;
t628 = t1251 * t934 + t1256 * t632;
t1288 = pkin(8) * t628 + t1251 * t589 + t1256 * t603;
t701 = -pkin(4) * t992 + pkin(10) * t871 + t730;
t704 = -pkin(10) * t869 - t729;
t644 = -pkin(3) * t992 + pkin(9) * t784 + t1250 * t704 + t1255 * t701;
t645 = -pkin(9) * t782 - t1250 * t701 + t1255 * t704;
t724 = t1244 * t784 + t1246 * t782;
t602 = -qJ(3) * t724 - t1244 * t644 + t1246 * t645;
t684 = -pkin(2) * t724 - pkin(3) * t782 - pkin(4) * t869;
t714 = t1251 * t992 + t1256 * t726;
t1287 = pkin(8) * t714 + t1251 * t602 + t1256 * t684;
t833 = -pkin(4) * t945 + pkin(10) * t954 - t1412;
t867 = -pkin(10) * t953 + t1416;
t728 = -pkin(3) * t945 + pkin(9) * t877 + t1250 * t867 + t1255 * t833;
t748 = -pkin(9) * t876 - t1250 * t833 + t1255 * t867;
t789 = t1244 * t877 + t1246 * t876;
t653 = -qJ(3) * t789 - t1244 * t728 + t1246 * t748;
t700 = -pkin(2) * t789 - pkin(3) * t876 - pkin(4) * t953 + t787;
t763 = t1251 * t945 + t1256 * t790;
t1286 = pkin(8) * t763 + t1251 * t653 + t1256 * t700;
t838 = pkin(4) * t1440 + pkin(10) * t977 + t1416;
t883 = -pkin(10) * t976 + t1412;
t741 = pkin(3) * t1440 + pkin(9) * t900 + t1250 * t883 + t1255 * t838;
t756 = -pkin(9) * t899 - t1250 * t838 + t1255 * t883;
t820 = t1244 * t900 + t1246 * t899;
t666 = -qJ(3) * t820 - t1244 * t741 + t1246 * t756;
t708 = -pkin(2) * t820 - pkin(3) * t899 - pkin(4) * t976 + t788;
t774 = -t1251 * t1440 + t1256 * t821;
t1285 = pkin(8) * t774 + t1251 * t666 + t1256 * t708;
t759 = t1244 * t840 + t1419;
t819 = -pkin(3) * t1035 + pkin(9) * t840;
t696 = -pkin(9) * t1419 - qJ(3) * t759 - t1244 * t819;
t722 = -pkin(2) * t759 - pkin(3) * t839;
t758 = t1035 * t1251 + t1256 * t760;
t1284 = pkin(8) * t758 + t1251 * t696 + t1256 * t722;
t793 = -pkin(3) * t1065 + pkin(9) * t975 + t840;
t803 = -pkin(9) * t973 - t839;
t896 = t1244 * t975 + t1246 * t973;
t710 = -qJ(3) * t896 - t1244 * t793 + t1246 * t803;
t846 = -pkin(2) * t896 - pkin(3) * t973;
t880 = t1065 * t1251 + t1256 * t898;
t1283 = pkin(8) * t880 + t1251 * t710 + t1256 * t846;
t916 = -pkin(3) * t1052 + pkin(9) * t1018 - t1403;
t943 = t1017 * t1246 + t1018 * t1244;
t955 = -pkin(9) * t1017 + t1404;
t816 = -qJ(3) * t943 - t1244 * t916 + t1246 * t955;
t836 = -pkin(2) * t943 + t1250 * t1262 - t1255 * t1429 + (-t1250 * t1427 - t1255 * t1277 - t1017) * pkin(3);
t911 = t1052 * t1251 + t1256 * t944;
t1282 = pkin(8) * t911 + t1251 * t816 + t1256 * t836;
t920 = -pkin(3) * t1431 + pkin(9) * t1040 + t1404;
t960 = -pkin(9) * t1039 + t1403;
t961 = t1039 * t1246 + t1040 * t1244;
t834 = -qJ(3) * t961 - t1244 * t920 + t1246 * t960;
t841 = -pkin(2) * t961 - pkin(3) * t1039 + t914;
t921 = t1251 * t1431 + t1256 * t962;
t1281 = pkin(8) * t921 + t1251 * t834 + t1256 * t841;
t1089 = t1160 * t1244 + t1438;
t1028 = -qJ(3) * t1089 + t1397;
t1047 = t1090 * t1256 - t1146 * t1251;
t991 = -pkin(2) * t1089 - t1346;
t1280 = pkin(8) * t1047 + t1028 * t1251 + t1256 * t991;
t1110 = t1183 * t1246 + t1395;
t1037 = -qJ(3) * t1110 + t1396;
t1061 = t1113 * t1256 + t1148 * t1251;
t994 = -pkin(2) * t1110 + t1030;
t1279 = pkin(8) * t1061 + t1037 * t1251 + t1256 * t994;
t1133 = t1178 * t1251 + t1179 * t1256;
t1278 = pkin(8) * t1133 + t1101;
t1036 = t1074 * t1256 - t1139 * t1251;
t1072 = t1147 * t1244 + t1149 * t1246;
t922 = -qJ(3) * t1072 - t958;
t1273 = pkin(8) * t1036 - t1072 * t1424 + t1251 * t922;
t1272 = -t1247 * t1258 + t1317;
t928 = t1119 * t1251 + t1256 * t959;
t1269 = pkin(8) * t928 + t1347 * t958;
t1265 = t1245 * t1383 + t1247 * t1297;
t1226 = qJDD(1) * t1252 + t1257 * t1258;
t1216 = -t1236 - t1358;
t1215 = -t1236 + t1358;
t1211 = -pkin(7) * t1226 + g(3) * t1257;
t1197 = t1247 * t1256 * t1210;
t1196 = t1210 * t1381;
t1184 = t1355 * (t1242 + t1243) * t1410;
t1176 = (t1370 + (0.2e1 * qJD(2) + t1409) * t1408) * t1245;
t1171 = t1256 * t1209 - t1242 * t1297;
t1170 = -t1243 * t1297 - t1378;
t1168 = t1213 * t1256 - t1391;
t1167 = -t1212 * t1251 + t1388;
t1156 = (t1247 * t1209 + t1256 * t1265) * t1251;
t1155 = -t1265 * t1377 + t1197;
t1141 = (t1202 * t1246 - t1203 * t1244) * t1367;
t1140 = (t1202 * t1244 + t1203 * t1246) * t1367;
t1137 = t1174 * t1244 - t1186 * t1246;
t1135 = -t1185 * t1244 - t1246 * t1271;
t1134 = -t1177 * t1251 + t1180 * t1256;
t1131 = t1245 * t1180 + t1247 * t1304;
t1130 = -t1245 * t1179 + t1247 * t1306;
t1129 = -t1245 * t1178 + t1247 * t1305;
t1128 = -t1247 * t1180 + t1245 * t1304;
t1127 = -t1245 * t1176 + t1247 * t1307;
t1126 = t1247 * t1176 + t1245 * t1307;
t1125 = t1141 * t1256 - t1378;
t1122 = -t1245 * t1215 + t1247 * t1309;
t1121 = -t1245 * t1216 + t1247 * t1308;
t1120 = t1247 * t1216 + t1245 * t1308;
t1112 = t1181 * t1244 - t1394;
t1111 = t1182 * t1246 + t1439;
t1099 = t1138 * t1256 + t1360;
t1098 = t1136 * t1256 - t1360;
t1076 = -t1131 * t1252 + t1169 * t1257;
t1075 = t1131 * t1257 + t1169 * t1252;
t1071 = t1146 * t1244 + t1148 * t1246;
t1069 = -t1127 * t1252 + t1165 * t1257;
t1068 = t1127 * t1257 + t1165 * t1252;
t1067 = t1245 * t1187 + t1247 * t1310;
t1066 = -t1247 * t1187 + t1245 * t1310;
t1064 = t1141 * t1247 * t1251 - t1140 * t1245 + t1197;
t1063 = t1115 * t1256 + t1147 * t1251;
t1062 = t1114 * t1256 - t1149 * t1251;
t1060 = -t1121 * t1252 + t1133 * t1257;
t1059 = t1121 * t1257 + t1133 * t1252;
t1058 = t1073 * t1256 - t1166 * t1251;
t1042 = -t1245 * t1137 + t1247 * t1293;
t1041 = -t1245 * t1135 + t1247 * t1294;
t1038 = -t1379 + (-t1128 * t1245 - t1131 * t1247) * pkin(8);
t1034 = -t1376 + (-t1126 * t1245 - t1127 * t1247) * pkin(8);
t1033 = -pkin(1) * t1128 + t1245 * t1158 + t1247 * t1344;
t1025 = -pkin(1) * t1126 + t1245 * t1159 + t1247 * t1345;
t1011 = t1079 * t1246 + t1080 * t1244;
t1010 = -pkin(2) * t1148 + qJ(3) * t1113 + t1397;
t1009 = pkin(8) * t1101 * t1247 - pkin(1) * t1066;
t1008 = -t1067 * t1252 + t1101 * t1257;
t1007 = t1067 * t1257 + t1101 * t1252;
t1006 = -t1245 * t1112 + t1247 * t1311;
t1005 = -t1245 * t1111 + t1247 * t1312;
t1004 = -t1245 * t1110 + t1247 * t1313;
t1003 = t1247 * t1110 + t1245 * t1313;
t1002 = pkin(2) * t1146 + qJ(3) * t1090 - t1396;
t1001 = t1256 * t1012 - t1251 * t1302;
t1000 = -pkin(1) * t1120 + t1247 * t1278;
t999 = (-t1066 * t1245 - t1067 * t1247) * pkin(8);
t998 = (-t1120 * t1245 - t1121 * t1247) * pkin(8) - t1310;
t997 = -t1245 * t1089 + t1247 * t1314;
t996 = t1247 * t1089 + t1245 * t1314;
t993 = -t1245 * t1071 + t1247 * t1316;
t990 = -t1245 * t1072 + t1247 * t1315;
t989 = t1247 * t1072 + t1245 * t1315;
t968 = t1049 * t1246 + t1051 * t1244;
t967 = t1048 * t1246 + t1050 * t1244;
t964 = t1045 * t1246 + t1046 * t1244;
t963 = t1043 * t1246 + t1044 * t1244;
t957 = -t1004 * t1252 + t1061 * t1257;
t956 = t1004 * t1257 + t1061 * t1252;
t936 = t1256 * t966 - t1362;
t935 = t1256 * t965 + t1362;
t933 = t1047 * t1257 - t1252 * t997;
t932 = t1047 * t1252 + t1257 * t997;
t929 = -pkin(2) * t1119 + qJ(3) * t959;
t927 = t1036 * t1257 - t1252 * t990;
t926 = t1036 * t1252 + t1257 * t990;
t925 = -t1245 * t1011 + t1247 * t1430;
t924 = -t1053 * t1251 + t1256 * t970;
t923 = -t1057 * t1251 + t1256 * t969;
t915 = pkin(2) * t1139 + qJ(3) * t1074 + t959;
t895 = t1244 * t974 + t1246 * t972;
t884 = -t1109 * t1251 + t1256 * t897;
t882 = -t1245 * t964 + t1247 * t1298;
t881 = -t1245 * t963 + t1247 * t1299;
t873 = -t1245 * t968 + t1247 * t1324;
t872 = -t1245 * t967 + t1247 * t1322;
t857 = t1244 * t938 + t1246 * t937;
t856 = -t1245 * t961 + t1247 * t1323;
t855 = t1245 * t1323 + t1247 * t961;
t854 = -t1245 * t958 + t1247 * t1319;
t853 = t1245 * t1319 + t1247 * t958;
t848 = -t1204 * t1251 + t1256 * t858;
t847 = t1256 * t1037 - t1251 * t994 + (-t1003 * t1245 - t1004 * t1247) * pkin(8);
t845 = -t1245 * t943 + t1247 * t1325;
t844 = t1245 * t1325 + t1247 * t943;
t843 = t1256 * t1028 - t1251 * t991 + (-t1245 * t996 - t1247 * t997) * pkin(8);
t842 = -pkin(1) * t1003 - t1245 * t1010 + t1247 * t1279;
t837 = -pkin(1) * t996 - t1245 * t1002 + t1247 * t1280;
t835 = t1072 * t1425 + t1256 * t922 + (-t1245 * t989 - t1247 * t990) * pkin(8);
t827 = t1244 * t910 + t1246 * t908;
t826 = t1244 * t909 + t1246 * t907;
t818 = -t1252 * t854 + t1257 * t928;
t817 = t1252 * t928 + t1257 * t854;
t815 = -pkin(2) * t1431 + qJ(3) * t962 + t1244 * t960 + t1246 * t920;
t814 = -t1252 * t856 + t1257 * t921;
t813 = t1252 * t921 + t1257 * t856;
t808 = -t1245 * t895 + t1247 * t1320;
t807 = -t1245 * t896 + t1247 * t1321;
t806 = t1245 * t1321 + t1247 * t896;
t798 = -pkin(2) * t1052 + qJ(3) * t944 + t1244 * t955 + t1246 * t916;
t795 = -t1252 * t845 + t1257 * t911;
t794 = t1252 * t911 + t1257 * t845;
t785 = -pkin(1) * t989 - t1245 * t915 + t1247 * t1273;
t780 = -t1251 * t946 + t1256 * t829;
t779 = -t1251 * t950 + t1256 * t828;
t776 = t1244 * t862 + t1246 * t860;
t775 = t1244 * t861 + t1246 * t859;
t773 = -t1245 * t857 + t1247 * t1318;
t768 = t1256 * t778 + t1364;
t767 = t1256 * t777 - t1364;
t762 = -t1252 * t807 + t1257 * t880;
t761 = t1252 * t880 + t1257 * t807;
t757 = (-qJ(3) * t1256 + t1425) * t958 + (-t1245 * t853 - t1247 * t854) * pkin(8);
t755 = -pkin(1) * t853 - t1245 * t929 + t1247 * t1269;
t746 = t1244 * t805 + t1246 * t804;
t745 = -t1245 * t827 + t1247 * t1328;
t744 = -t1245 * t826 + t1247 * t1329;
t738 = -t1245 * t820 + t1247 * t1330;
t737 = t1245 * t1330 + t1247 * t820;
t727 = -t1251 * t952 + t1256 * t747;
t723 = t1244 * t783 + t1246 * t781;
t719 = t1244 * t772 + t1246 * t770;
t718 = t1244 * t771 + t1246 * t769;
t717 = -t1032 * t1251 + t1256 * t725;
t716 = -t1245 * t776 + t1247 * t1300;
t715 = -t1245 * t775 + t1247 * t1301;
t713 = -t1245 * t789 + t1247 * t1331;
t712 = t1245 * t1331 + t1247 * t789;
t709 = -pkin(2) * t1065 + qJ(3) * t898 + t1244 * t803 + t1246 * t793;
t706 = -t1251 * t841 + t1256 * t834 + (-t1245 * t855 - t1247 * t856) * pkin(8);
t703 = -t1251 * t892 + t1256 * t721;
t702 = -t1251 * t893 + t1256 * t720;
t699 = -t1251 * t836 + t1256 * t816 + (-t1245 * t844 - t1247 * t845) * pkin(8);
t698 = -t1252 * t738 + t1257 * t774;
t697 = t1252 * t774 + t1257 * t738;
t695 = -t1245 * t759 + t1247 * t1326;
t694 = t1245 * t1326 + t1247 * t759;
t693 = -pkin(2) * t1035 - pkin(9) * t1420 + qJ(3) * t760 + t1246 * t819;
t692 = -pkin(1) * t855 - t1245 * t815 + t1247 * t1281;
t689 = t1244 * t753 + t1246 * t751;
t688 = t1244 * t752 + t1246 * t750;
t687 = -pkin(1) * t844 - t1245 * t798 + t1247 * t1282;
t686 = -t1252 * t713 + t1257 * t763;
t685 = t1252 * t763 + t1257 * t713;
t678 = t1244 * t736 + t1246 * t735;
t677 = -t1245 * t746 + t1247 * t1332;
t676 = -t1251 * t886 + t1256 * t691;
t675 = -t1251 * t888 + t1256 * t690;
t665 = -t1245 * t723 + t1247 * t1327;
t664 = -t1245 * t724 + t1247 * t1333;
t663 = t1245 * t1333 + t1247 * t724;
t662 = pkin(2) * t1440 + qJ(3) * t821 + t1244 * t756 + t1246 * t741;
t661 = -t1252 * t695 + t1257 * t758;
t660 = t1252 * t758 + t1257 * t695;
t659 = -t1251 * t825 + t1256 * t679;
t658 = -t1251 * t846 + t1256 * t710 + (-t1245 * t806 - t1247 * t807) * pkin(8);
t657 = -t1245 * t719 + t1247 * t1334;
t656 = -t1245 * t718 + t1247 * t1335;
t652 = -pkin(2) * t945 + qJ(3) * t790 + t1244 * t748 + t1246 * t728;
t643 = -t1252 * t664 + t1257 * t714;
t642 = t1252 * t714 + t1257 * t664;
t640 = -pkin(1) * t806 - t1245 * t709 + t1247 * t1283;
t639 = -t1245 * t689 + t1247 * t1336;
t638 = -t1245 * t688 + t1247 * t1337;
t636 = -t1245 * t682 + t1247 * t1338;
t635 = t1245 * t1338 + t1247 * t682;
t634 = -t1245 * t680 + t1247 * t1339;
t633 = t1245 * t1339 + t1247 * t680;
t630 = -t1245 * t678 + t1247 * t1340;
t624 = -t1245 * t671 + t1247 * t1341;
t623 = t1245 * t1341 + t1247 * t671;
t620 = -t1251 * t708 + t1256 * t666 + (-t1245 * t737 - t1247 * t738) * pkin(8);
t619 = -t1251 * t722 + t1256 * t696 + (-t1245 * t694 - t1247 * t695) * pkin(8);
t617 = -t1252 * t636 + t1257 * t668;
t616 = t1252 * t668 + t1257 * t636;
t615 = -t1252 * t634 + t1257 * t667;
t614 = t1252 * t667 + t1257 * t634;
t613 = -t1251 * t700 + t1256 * t653 + (-t1245 * t712 - t1247 * t713) * pkin(8);
t610 = -pkin(1) * t694 - t1245 * t693 + t1247 * t1284;
t606 = -t1252 * t624 + t1257 * t654;
t605 = t1252 * t654 + t1257 * t624;
t604 = -pkin(1) * t737 - t1245 * t662 + t1247 * t1285;
t601 = -pkin(2) * t992 + qJ(3) * t726 + t1244 * t645 + t1246 * t644;
t599 = -pkin(1) * t712 - t1245 * t652 + t1247 * t1286;
t598 = -t1245 * t631 + t1247 * t1342;
t597 = t1245 * t1342 + t1247 * t631;
t591 = -t1252 * t598 + t1257 * t628;
t590 = t1252 * t628 + t1257 * t598;
t588 = -pkin(2) * t934 + qJ(3) * t632 + t1244 * t629 + t1246 * t625;
t587 = -t1251 * t684 + t1256 * t602 + (-t1245 * t663 - t1247 * t664) * pkin(8);
t584 = -pkin(2) * t874 + qJ(3) * t683 + t1244 * t612 + t1246 * t608;
t583 = -pkin(2) * t863 + qJ(3) * t681 + t1244 * t611 + t1246 * t607;
t581 = -pkin(2) * t822 + qJ(3) * t672 + t1244 * t600 + t1246 * t596;
t580 = -pkin(1) * t663 - t1245 * t601 + t1247 * t1287;
t576 = -t1245 * t593 + t1247 * t1343;
t575 = t1245 * t1343 + t1247 * t593;
t574 = -t1251 * t627 + t1256 * t586 + (-t1245 * t635 - t1247 * t636) * pkin(8);
t573 = -t1251 * t626 + t1256 * t585 + (-t1245 * t633 - t1247 * t634) * pkin(8);
t572 = -t1251 * t618 + t1256 * t582 + (-t1245 * t623 - t1247 * t624) * pkin(8);
t571 = -t1252 * t576 + t1257 * t592;
t570 = t1252 * t592 + t1257 * t576;
t569 = -t1251 * t603 + t1256 * t589 + (-t1245 * t597 - t1247 * t598) * pkin(8);
t568 = -pkin(1) * t635 - t1245 * t584 + t1247 * t1289;
t567 = -pkin(1) * t633 - t1245 * t583 + t1247 * t1290;
t566 = -pkin(1) * t597 - t1245 * t588 + t1247 * t1288;
t565 = -pkin(1) * t623 - t1245 * t581 + t1247 * t1291;
t563 = -pkin(2) * t673 + qJ(3) * t594 + t1244 * t579 + t1246 * t577;
t562 = -t1251 * t578 + t1256 * t564 + (-t1245 * t575 - t1247 * t576) * pkin(8);
t561 = -pkin(1) * t575 - t1245 * t563 + t1247 * t1292;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1226, -t1227, 0, t1189, 0, 0, 0, 0, 0, 0, t1076, t1069, t1060, t1008, 0, 0, 0, 0, 0, 0, t933, t957, t927, t818, 0, 0, 0, 0, 0, 0, t795, t814, t762, t661, 0, 0, 0, 0, 0, 0, t686, t698, t643, t591, 0, 0, 0, 0, 0, 0, t615, t617, t606, t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1227, -t1226, 0, t1188, 0, 0, 0, 0, 0, 0, t1075, t1068, t1059, t1007, 0, 0, 0, 0, 0, 0, t932, t956, t926, t817, 0, 0, 0, 0, 0, 0, t794, t813, t761, t660, 0, 0, 0, 0, 0, 0, t685, t697, t642, t590, 0, 0, 0, 0, 0, 0, t614, t616, t605, t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1128, t1126, t1120, t1066, 0, 0, 0, 0, 0, 0, t996, t1003, t989, t853, 0, 0, 0, 0, 0, 0, t844, t855, t806, t694, 0, 0, 0, 0, 0, 0, t712, t737, t663, t597, 0, 0, 0, 0, 0, 0, t633, t635, t623, t575; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1227, 0, -t1226, 0, t1348, -t1211, -t1188, -pkin(7) * t1188, -t1156 * t1252 + t1171 * t1257, -t1122 * t1252 + t1134 * t1257, -t1129 * t1252 + t1167 * t1257, -t1155 * t1252 + t1170 * t1257, -t1130 * t1252 + t1168 * t1257, t1257 * t1184 + t1252 * t1303, -pkin(7) * t1075 - t1033 * t1252 + t1038 * t1257, -pkin(7) * t1068 - t1025 * t1252 + t1034 * t1257, -pkin(7) * t1059 - t1000 * t1252 + t1257 * t998, -pkin(7) * t1007 - t1009 * t1252 + t1257 * t999, -t1042 * t1252 + t1099 * t1257, t1058 * t1257 - t1252 * t993, -t1005 * t1252 + t1062 * t1257, -t1041 * t1252 + t1098 * t1257, -t1006 * t1252 + t1063 * t1257, -t1064 * t1252 + t1125 * t1257, -pkin(7) * t932 - t1252 * t837 + t1257 * t843, -pkin(7) * t956 - t1252 * t842 + t1257 * t847, -pkin(7) * t926 - t1252 * t785 + t1257 * t835, -pkin(7) * t817 - t1252 * t755 + t1257 * t757, -t1252 * t882 + t1257 * t936, -t1252 * t808 + t1257 * t884, -t1252 * t872 + t1257 * t923, -t1252 * t881 + t1257 * t935, -t1252 * t873 + t1257 * t924, t1001 * t1257 - t1252 * t925, -pkin(7) * t794 - t1252 * t687 + t1257 * t699, -pkin(7) * t813 - t1252 * t692 + t1257 * t706, -pkin(7) * t761 - t1252 * t640 + t1257 * t658, -pkin(7) * t660 - t1252 * t610 + t1257 * t619, -t1252 * t716 + t1257 * t768, -t1252 * t665 + t1257 * t717, -t1252 * t744 + t1257 * t779, -t1252 * t715 + t1257 * t767, -t1252 * t745 + t1257 * t780, -t1252 * t773 + t1257 * t848, -pkin(7) * t685 - t1252 * t599 + t1257 * t613, -pkin(7) * t697 - t1252 * t604 + t1257 * t620, -pkin(7) * t642 - t1252 * t580 + t1257 * t587, -pkin(7) * t590 - t1252 * t566 + t1257 * t569, -t1252 * t657 + t1257 * t703, -t1252 * t630 + t1257 * t659, -t1252 * t638 + t1257 * t675, -t1252 * t656 + t1257 * t702, -t1252 * t639 + t1257 * t676, -t1252 * t677 + t1257 * t727, -pkin(7) * t614 - t1252 * t567 + t1257 * t573, -pkin(7) * t616 - t1252 * t568 + t1257 * t574, -pkin(7) * t605 - t1252 * t565 + t1257 * t572, -pkin(7) * t570 - t1252 * t561 + t1257 * t562; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1226, 0, t1227, 0, t1211, t1348, t1189, pkin(7) * t1189, t1156 * t1257 + t1171 * t1252, t1122 * t1257 + t1134 * t1252, t1129 * t1257 + t1167 * t1252, t1155 * t1257 + t1170 * t1252, t1130 * t1257 + t1168 * t1252, t1252 * t1184 - t1257 * t1303, pkin(7) * t1076 + t1033 * t1257 + t1038 * t1252, pkin(7) * t1069 + t1025 * t1257 + t1034 * t1252, pkin(7) * t1060 + t1000 * t1257 + t1252 * t998, pkin(7) * t1008 + t1009 * t1257 + t1252 * t999, t1042 * t1257 + t1099 * t1252, t1058 * t1252 + t1257 * t993, t1005 * t1257 + t1062 * t1252, t1041 * t1257 + t1098 * t1252, t1006 * t1257 + t1063 * t1252, t1064 * t1257 + t1125 * t1252, pkin(7) * t933 + t1252 * t843 + t1257 * t837, pkin(7) * t957 + t1252 * t847 + t1257 * t842, pkin(7) * t927 + t1252 * t835 + t1257 * t785, pkin(7) * t818 + t1252 * t757 + t1257 * t755, t1252 * t936 + t1257 * t882, t1252 * t884 + t1257 * t808, t1252 * t923 + t1257 * t872, t1252 * t935 + t1257 * t881, t1252 * t924 + t1257 * t873, t1001 * t1252 + t1257 * t925, pkin(7) * t795 + t1252 * t699 + t1257 * t687, pkin(7) * t814 + t1252 * t706 + t1257 * t692, pkin(7) * t762 + t1252 * t658 + t1257 * t640, pkin(7) * t661 + t1252 * t619 + t1257 * t610, t1252 * t768 + t1257 * t716, t1252 * t717 + t1257 * t665, t1252 * t779 + t1257 * t744, t1252 * t767 + t1257 * t715, t1252 * t780 + t1257 * t745, t1252 * t848 + t1257 * t773, pkin(7) * t686 + t1252 * t613 + t1257 * t599, pkin(7) * t698 + t1252 * t620 + t1257 * t604, pkin(7) * t643 + t1252 * t587 + t1257 * t580, pkin(7) * t591 + t1252 * t569 + t1257 * t566, t1252 * t703 + t1257 * t657, t1252 * t659 + t1257 * t630, t1252 * t675 + t1257 * t638, t1252 * t702 + t1257 * t656, t1252 * t676 + t1257 * t639, t1252 * t727 + t1257 * t677, pkin(7) * t615 + t1252 * t573 + t1257 * t567, pkin(7) * t617 + t1252 * t574 + t1257 * t568, pkin(7) * t606 + t1252 * t572 + t1257 * t565, pkin(7) * t571 + t1252 * t562 + t1257 * t561; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1231, t1232, 0, 0, (t1241 * t1256 * t1272 + t1245 * t1209) * t1251, t1247 * t1215 + t1245 * t1309, t1247 * t1178 + t1245 * t1305, -t1272 * t1357 + t1196, t1247 * t1179 + t1245 * t1306, t1247 * t1350, pkin(1) * t1131 - t1247 * t1158 + t1245 * t1344, pkin(1) * t1127 - t1247 * t1159 + t1245 * t1345, pkin(1) * t1121 + t1245 * t1278, pkin(1) * t1067 + t1101 * t1422, t1247 * t1137 + t1245 * t1293, t1247 * t1071 + t1245 * t1316, t1247 * t1111 + t1245 * t1312, t1247 * t1135 + t1245 * t1294, t1247 * t1112 + t1245 * t1311, t1140 * t1247 + t1141 * t1382 + t1196, pkin(1) * t997 + t1247 * t1002 + t1245 * t1280, pkin(1) * t1004 + t1247 * t1010 + t1245 * t1279, pkin(1) * t990 + t1245 * t1273 + t1247 * t915, pkin(1) * t854 + t1245 * t1269 + t1247 * t929, t1245 * t1298 + t1247 * t964, t1245 * t1320 + t1247 * t895, t1245 * t1322 + t1247 * t967, t1245 * t1299 + t1247 * t963, t1245 * t1324 + t1247 * t968, t1247 * t1011 + t1245 * t1430, pkin(1) * t845 + t1245 * t1282 + t1247 * t798, pkin(1) * t856 + t1245 * t1281 + t1247 * t815, pkin(1) * t807 + t1245 * t1283 + t1247 * t709, pkin(1) * t695 + t1245 * t1284 + t1247 * t693, t1245 * t1300 + t1247 * t776, t1245 * t1327 + t1247 * t723, t1245 * t1329 + t1247 * t826, t1245 * t1301 + t1247 * t775, t1245 * t1328 + t1247 * t827, t1245 * t1318 + t1247 * t857, pkin(1) * t713 + t1245 * t1286 + t1247 * t652, pkin(1) * t738 + t1245 * t1285 + t1247 * t662, pkin(1) * t664 + t1245 * t1287 + t1247 * t601, pkin(1) * t598 + t1245 * t1288 + t1247 * t588, t1245 * t1334 + t1247 * t719, t1245 * t1340 + t1247 * t678, t1245 * t1337 + t1247 * t688, t1245 * t1335 + t1247 * t718, t1245 * t1336 + t1247 * t689, t1245 * t1332 + t1247 * t746, pkin(1) * t634 + t1245 * t1290 + t1247 * t583, pkin(1) * t636 + t1245 * t1289 + t1247 * t584, pkin(1) * t624 + t1245 * t1291 + t1247 * t581, pkin(1) * t576 + t1245 * t1292 + t1247 * t563;];
tauB_reg  = t1;
