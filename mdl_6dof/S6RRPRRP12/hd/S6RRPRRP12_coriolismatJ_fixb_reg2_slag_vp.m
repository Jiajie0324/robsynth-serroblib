% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP12_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP12_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP12_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP12_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:53:40
% EndTime: 2019-03-09 12:54:21
% DurationCPUTime: 31.96s
% Computational Cost: add. (20842->941), mult. (38228->1085), div. (0->0), fcn. (38314->6), ass. (0->698)
t1069 = cos(qJ(5));
t672 = cos(qJ(4));
t673 = cos(qJ(2));
t1101 = pkin(2) + pkin(8);
t871 = pkin(9) + t1101;
t780 = t673 * t871 + pkin(1);
t1143 = t672 * t780;
t671 = sin(qJ(2));
t1100 = pkin(3) + pkin(7);
t670 = sin(qJ(4));
t1123 = t1100 * t670;
t971 = t672 * qJ(3);
t746 = t971 - t1123;
t712 = t746 * t671;
t687 = t712 + t1143;
t1193 = t1069 * t687;
t1196 = t1193 / 0.2e1;
t847 = t1069 * t672;
t619 = t673 * t847;
t669 = sin(qJ(5));
t974 = t670 * t673;
t542 = t669 * t974 - t619;
t785 = t871 * t1069;
t581 = t672 * t785;
t810 = t670 * t871;
t787 = t669 * t810;
t488 = -t581 + t787;
t1089 = t488 / 0.2e1;
t811 = t669 * t871;
t789 = t670 * t811;
t485 = t581 - t789;
t1094 = t485 / 0.2e1;
t814 = t1089 + t1094;
t1195 = t542 * t814;
t1194 = t669 * t687;
t858 = t672 * t1100;
t977 = t670 * qJ(3);
t747 = -t858 - t977;
t683 = t780 * t670 + (pkin(4) - t747) * t671;
t680 = t669 * t683;
t241 = -t1193 + t680;
t979 = t669 * t670;
t591 = t847 - t979;
t1033 = t241 * t591;
t344 = t1069 * t683;
t240 = -t1194 - t344;
t848 = t1069 * t670;
t978 = t669 * t672;
t588 = t848 + t978;
t1035 = t240 * t588;
t830 = t1035 / 0.2e1;
t955 = t830 + t1033 / 0.2e1;
t831 = -t1035 / 0.2e1;
t956 = t831 - t1033 / 0.2e1;
t1190 = t955 + t956;
t1192 = qJD(1) * t1190;
t1191 = t1190 * qJD(5);
t966 = t673 * t588;
t1174 = t966 / 0.2e1;
t1082 = t588 / 0.2e1;
t715 = t848 / 0.2e1 + t978 / 0.2e1;
t693 = (t1082 + t715) * t671;
t870 = qJD(4) + qJD(5);
t1173 = t693 * t870;
t1079 = t619 / 0.2e1;
t1081 = -t591 / 0.2e1;
t822 = -t979 / 0.2e1;
t704 = t1079 + (t822 + t1081) * t673;
t543 = t671 * t588;
t915 = qJD(1) * t671;
t844 = t543 * t915;
t1189 = -qJD(2) * t704 - t1173 - t844;
t618 = t671 * t847;
t975 = t670 * t671;
t854 = t669 * t975;
t541 = -t618 + t854;
t261 = -t541 * t966 - t542 * t543;
t1166 = t261 * qJD(1);
t216 = t588 * t542 - t591 * t966;
t1186 = t870 * t216;
t1188 = t1166 - t1186;
t1187 = t1186 + qJD(2) * (t541 * t591 + t543 * t588) + t1166;
t1080 = t591 / 0.2e1;
t1083 = -t588 / 0.2e1;
t286 = t1080 * t542 - t1083 * t966;
t1185 = t870 * t286;
t1006 = t485 * t543;
t753 = t670 * t785;
t788 = t672 * t811;
t487 = -t753 - t788;
t333 = t541 * t487;
t969 = t672 * t673;
t636 = pkin(4) * t969;
t659 = t673 * pkin(7);
t660 = t673 * pkin(3);
t935 = t659 / 0.2e1 + t660 / 0.2e1;
t721 = t935 - t1006 / 0.2e1 + t333 / 0.2e1 + t636 / 0.2e1;
t1066 = t542 * pkin(5);
t993 = t966 * qJ(6);
t794 = -t1066 / 0.2e1 + t993 / 0.2e1;
t1184 = t721 + t794;
t416 = t715 * t673 + t1174;
t517 = t541 * t915;
t1072 = t671 / 0.2e1;
t421 = t591 * t1072 + t854 / 0.2e1 - t618 / 0.2e1;
t940 = t421 * t870;
t1183 = -qJD(2) * t416 - t517 - t940;
t883 = t588 * qJD(2);
t918 = qJD(1) * t542;
t1182 = (t883 - t918) * t541 - t1185;
t705 = t618 / 0.2e1 + (t1080 + t822) * t671;
t1172 = t705 * t870;
t417 = (t1083 + t715) * t673;
t1181 = qJD(2) * t417 - t1172 + t517;
t1180 = t541 * t918 - t1185;
t358 = t541 * t671 - t542 * t673;
t1165 = t358 * qJD(1);
t1178 = t1165 - t1172;
t1063 = t673 * pkin(5);
t1067 = pkin(9) * t671;
t968 = t673 * qJ(3);
t611 = t671 * pkin(2) - t968;
t582 = t671 * pkin(8) + t611;
t615 = t659 + t660;
t596 = t615 * t672;
t370 = pkin(4) * t673 + t596 + (-t582 - t1067) * t670;
t852 = t1069 * t370;
t554 = t672 * t582;
t595 = t615 * t670;
t483 = t554 + t595;
t404 = t1067 * t672 + t483;
t980 = t669 * t404;
t944 = t852 / 0.2e1 - t980 / 0.2e1;
t783 = -t1063 / 0.2e1 - t944;
t657 = t673 * qJD(2);
t1177 = t588 * t657 + t1165 + t940;
t638 = pkin(4) * t670 + qJ(3);
t1065 = t588 * pkin(5);
t577 = t591 * qJ(6);
t813 = t577 - t1065;
t429 = t638 - t813;
t1176 = t429 / 0.2e1;
t1175 = t638 / 0.2e1;
t585 = t591 ^ 2;
t375 = t588 ^ 2 - t585;
t1171 = t870 * t375;
t1120 = t693 * qJD(3);
t676 = -t680 / 0.2e1 + t1196;
t1073 = -t671 / 0.2e1;
t821 = t669 * t1073;
t675 = pkin(4) * t821 + t676;
t973 = t671 * qJ(3);
t400 = t671 * t858 + (t780 + t973) * t670;
t981 = t669 * t400;
t786 = t1196 - t981 / 0.2e1;
t88 = t675 - t786;
t1170 = t88 * qJD(5) + t1120;
t1169 = -t88 * qJD(4) + t1120;
t232 = -t344 - t669 * t1143 + (-t669 * t746 - pkin(5)) * t671;
t1039 = t232 * t588;
t972 = t671 * qJ(6);
t229 = t241 + t972;
t1041 = t229 * t591;
t1168 = -t1041 / 0.2e1 - t1039 / 0.2e1;
t1118 = t705 * qJD(1);
t575 = t591 * qJD(5);
t1164 = -t591 * qJD(4) - t1118 - t575;
t1121 = t693 * qJD(1);
t572 = t588 * qJD(5);
t1163 = -t588 * qJD(4) - t1121 - t572;
t882 = t588 * qJD(6);
t1162 = qJD(5) * t813 + t882;
t1064 = t669 * pkin(4);
t637 = qJ(6) + t1064;
t987 = t591 * t637;
t867 = t1069 * pkin(4);
t647 = -t867 - pkin(5);
t988 = t588 * t647;
t1161 = -qJD(4) * (t987 + t988) - t882;
t1141 = t870 * t671;
t1104 = t966 ^ 2;
t666 = t671 ^ 2;
t516 = t666 + t1104;
t913 = qJD(2) * t591;
t1160 = qJD(1) * t516 - t913 * t966 + t1141;
t774 = t541 * t542 + t543 * t966;
t1135 = qJD(1) * t774;
t473 = t541 * t588;
t994 = t543 * t591;
t824 = -t994 / 0.2e1;
t135 = 0.2e1 * t824 - t473;
t1159 = t135 * qJD(2) + t1135;
t1158 = qJD(1) * t704 + t883;
t1139 = t824 + t994 / 0.2e1;
t1157 = qJD(1) * t1139;
t1156 = qJD(3) * t1139;
t249 = -t1193 + t981;
t1096 = -t249 / 0.2e1;
t1075 = t669 / 0.2e1;
t868 = t1069 / 0.2e1;
t1148 = (t1075 * t541 + t543 * t868) * pkin(4);
t1155 = t1148 - t591 * (t241 / 0.2e1 + t1096);
t841 = t591 * t883;
t1154 = -qJD(1) * t286 + t841;
t917 = qJD(1) * t966;
t845 = t542 * t917;
t1153 = qJD(2) * t286 - t845;
t802 = qJD(4) + t915;
t620 = qJD(5) + t802;
t194 = qJD(2) * t421 - t966 * t620;
t1151 = -qJD(2) * t1139 - t1135;
t294 = t542 ^ 2 - t1104;
t1150 = qJD(2) * t261 - t294 * t870;
t112 = qJD(1) * t294 - qJD(2) * t216;
t120 = qJD(1) * t216 - qJD(2) * t375;
t1149 = qJD(2) * t358 - t1141 * t966;
t1076 = t647 / 0.2e1;
t1102 = pkin(5) / 0.2e1;
t801 = t867 / 0.2e1;
t724 = t801 + t1076 + t1102;
t1146 = t588 * t724;
t805 = t870 * t591;
t1145 = t588 * t805;
t857 = t1101 * t673;
t793 = -pkin(1) - t857;
t474 = t670 * t793 + t671 * t747;
t475 = t672 * t793 - t712;
t257 = (t474 * t670 + t475 * t672) * t671;
t1001 = t487 * t671;
t444 = -t1001 / 0.2e1;
t1085 = -t966 / 0.2e1;
t558 = t636 + t615;
t781 = t993 - t1066;
t297 = t781 + t558;
t740 = t297 * t1080 + t429 * t1085;
t1140 = t444 + t740;
t677 = t344 / 0.2e1 + t1194 / 0.2e1 + t671 * t801;
t851 = t1069 * t400;
t678 = -t1194 / 0.2e1 - t851 / 0.2e1;
t91 = t677 + t678;
t859 = t91 * qJD(1) + qJD(4) * t867;
t1091 = t487 / 0.2e1;
t580 = t1069 * t810;
t486 = -t580 - t788;
t1093 = -t486 / 0.2e1;
t815 = t1091 + t1093;
t692 = t588 * t814 + t591 * t815;
t1134 = qJD(2) * t692;
t709 = (t486 - t487) * t591 + (-t485 - t488) * t588;
t1133 = qJD(2) * t709;
t1131 = qJD(3) * t692;
t1130 = qJD(3) * t704;
t1129 = qJD(3) * t774;
t1128 = qJD(4) * t709;
t1125 = qJD(6) * t693;
t1060 = pkin(4) * qJD(4);
t849 = t1069 * t588;
t986 = t591 * t669;
t1124 = t1060 * (t849 - t986);
t1122 = t692 * qJD(4);
t820 = -t974 / 0.2e1;
t699 = t1080 * t673 + t669 * t820 + t1079;
t1119 = t699 * qJD(3);
t722 = -t753 / 0.2e1;
t482 = t722 + t580 / 0.2e1;
t888 = t482 * qJD(2);
t1117 = -qJD(1) * t88 + t888;
t674 = t637 * t1072 + t972 / 0.2e1 - t676;
t76 = -t674 - t786;
t1116 = -qJD(1) * t76 + t888;
t1008 = t483 * t670;
t976 = t670 * t582;
t481 = t596 - t976;
t1009 = t481 * t672;
t1115 = -t1008 - t1009;
t345 = t669 * t370;
t372 = t1069 * t404;
t946 = t345 / 0.2e1 + t372 / 0.2e1;
t1113 = t1081 * t558 + t1174 * t638;
t1112 = t1083 * t558 + t1175 * t542;
t1111 = (t849 / 0.2e1 - t986 / 0.2e1) * pkin(4) - t1065 / 0.2e1 + t988 / 0.2e1 + t987 / 0.2e1;
t1110 = t297 * t1083 + t1176 * t542;
t170 = t1039 / 0.2e1;
t1086 = t543 / 0.2e1;
t1098 = qJ(6) / 0.2e1;
t752 = pkin(5) * t1086 + t1098 * t541;
t1097 = t229 / 0.2e1;
t819 = t1097 - t241 / 0.2e1;
t1109 = -t591 * t819 - t170 + t752;
t665 = t670 ^ 2;
t667 = t672 ^ 2;
t627 = t665 - t667;
t875 = t673 * qJD(1);
t842 = t672 * t875;
t713 = t627 * qJD(2) + 0.2e1 * t670 * t842;
t1108 = qJD(2) * t699 + t844;
t291 = qJD(2) * t705 - t915 * t966;
t250 = t851 + t1194;
t1024 = t250 * t588;
t205 = -t1024 / 0.2e1;
t1105 = t486 * t1085 + t487 * t1174 + t1195 + t205;
t1077 = t637 / 0.2e1;
t1087 = -t543 / 0.2e1;
t735 = t1077 * t541 + t1087 * t647;
t20 = -(t250 / 0.2e1 + t232 / 0.2e1) * t588 - t591 * (t1097 + t1096) + t735;
t1103 = -pkin(5) / 0.2e1;
t1099 = -qJ(6) / 0.2e1;
t484 = pkin(5) * t591 + qJ(6) * t588;
t1095 = -t484 / 0.2e1;
t1092 = t486 / 0.2e1;
t1090 = -t488 / 0.2e1;
t1088 = -t542 / 0.2e1;
t1084 = -t577 / 0.2e1;
t1078 = -t637 / 0.2e1;
t1074 = t670 / 0.2e1;
t1071 = -t672 / 0.2e1;
t1070 = -t673 / 0.2e1;
t1068 = pkin(4) * t672;
t1059 = pkin(4) * qJD(5);
t9 = -t1109 + t831;
t1058 = t9 * qJD(1);
t89 = t675 + t786;
t1057 = -t249 * qJD(4) + t89 * qJD(5);
t1056 = t89 * qJD(4) - t241 * qJD(5);
t1036 = t240 * t487;
t150 = -t1036 / 0.2e1;
t19 = t150 + t1036 / 0.2e1;
t1054 = qJD(1) * t19;
t1019 = t297 * t966;
t1027 = t249 * t671;
t373 = -pkin(5) * t966 - t542 * qJ(6);
t869 = pkin(4) * t974;
t334 = t373 - t869;
t62 = -t334 * t542 - t1019 - t1027;
t1052 = qJD(1) * t62;
t1020 = t297 * t542;
t1023 = t250 * t671;
t63 = t334 * t966 - t1020 + t1023;
t1051 = qJD(1) * t63;
t1034 = t240 * t671;
t68 = t373 * t966 - t1020 - t1034;
t1050 = qJD(1) * t68;
t1032 = t241 * t671;
t69 = -t373 * t542 - t1019 - t1032;
t1049 = qJD(1) * t69;
t1046 = qJD(2) * t1190;
t1045 = qJD(4) * t91;
t1044 = qJD(5) * t91;
t246 = t372 + t345;
t967 = t673 * qJ(6);
t237 = t246 + t967;
t245 = t852 - t980;
t238 = -t245 - t1063;
t557 = (-t1068 - t1100) * t671;
t296 = pkin(5) * t541 - qJ(6) * t543 + t557;
t17 = t229 * t237 + t232 * t238 + t296 * t297;
t1043 = t17 * qJD(1);
t22 = -t229 * t240 + t232 * t241 + t297 * t373;
t1042 = t22 * qJD(1);
t23 = t1109 + t830;
t1040 = t23 * qJD(1);
t1038 = t237 * t588;
t1037 = t238 * t591;
t1031 = t245 * t591;
t1030 = t246 * t588;
t1029 = t249 * t485;
t1028 = t249 * t591;
t25 = t229 * t250 + t232 * t249 + t297 * t334;
t1026 = t25 * qJD(1);
t1025 = t250 * t487;
t70 = t229 * t541 - t232 * t543;
t28 = t237 * t542 - t238 * t966 - t70;
t1022 = t28 * qJD(1);
t29 = (t229 - t241) * t966 + (t232 - t240) * t542;
t1021 = t29 * qJD(1);
t30 = (t229 - t249) * t966 + (t232 + t250) * t542;
t1017 = t30 * qJD(1);
t72 = -t240 * t543 + t241 * t541;
t32 = t245 * t966 + t246 * t542 - t72;
t1016 = t32 * qJD(1);
t33 = (t241 - t249) * t966 + (t240 + t250) * t542;
t1015 = t33 * qJD(1);
t36 = -t240 * t245 + t241 * t246 + t557 * t558;
t1014 = t36 * qJD(1);
t41 = t240 * t249 + t241 * t250 - t558 * t869;
t1013 = t41 * qJD(1);
t1011 = t429 * t588;
t1010 = t429 * t591;
t1005 = t485 * t671;
t1004 = t485 * t673;
t1003 = t486 * t671;
t1000 = t487 * t673;
t999 = t488 * t671;
t49 = t229 * t673 + t237 * t671 + t296 * t966 - t297 * t543;
t998 = t49 * qJD(1);
t50 = -t232 * t673 - t238 * t671 - t296 * t542 + t297 * t541;
t997 = t50 * qJD(1);
t53 = -t240 * t673 + t245 * t671 + t558 * t541 - t557 * t542;
t996 = t53 * qJD(1);
t54 = t241 * t673 + t246 * t671 - t558 * t543 + t557 * t966;
t995 = t54 * qJD(1);
t992 = t966 * t669;
t991 = t558 * t966;
t985 = t637 * t966;
t982 = t647 * t542;
t970 = t672 * t542;
t965 = t70 * qJD(1);
t964 = t72 * qJD(1);
t957 = t1041 / 0.2e1 + t170;
t347 = t722 - t788 - t580 / 0.2e1;
t948 = -t486 * qJD(4) - t347 * qJD(5);
t947 = -t347 * qJD(4) - t487 * qJD(5);
t420 = t671 * t715 + t1087;
t942 = t870 * t420;
t656 = t671 * qJD(6);
t891 = t421 * qJD(3);
t939 = t891 + t656;
t889 = t705 * qJD(3);
t934 = t656 - t889;
t668 = t673 ^ 2;
t628 = t668 - t666;
t933 = qJ(6) * qJD(5);
t105 = t229 * t671 + t1019;
t932 = qJD(1) * t105;
t115 = t542 * t869 - t1027 - t991;
t931 = qJD(1) * t115;
t433 = t558 * t542;
t116 = -t869 * t966 + t1023 - t433;
t930 = qJD(1) * t116;
t142 = -t433 - t1034;
t927 = qJD(1) * t142;
t143 = -t991 - t1032;
t926 = qJD(1) * t143;
t925 = qJD(1) * t257;
t313 = -t474 * t671 + t615 * t969;
t922 = qJD(1) * t313;
t314 = -t475 * t671 - t615 * t974;
t921 = qJD(1) * t314;
t590 = t628 * t670;
t916 = qJD(1) * t590;
t914 = qJD(1) * t672;
t912 = qJD(2) * t638;
t911 = qJD(3) * t417;
t910 = qJD(3) * t591;
t909 = qJD(3) * t670;
t908 = qJD(3) * t671;
t907 = qJD(3) * t672;
t906 = qJD(4) * t670;
t905 = qJD(4) * t671;
t904 = qJD(4) * t672;
t903 = qJD(6) * t591;
t114 = -t481 * t974 + t483 * t969 - t257;
t902 = t114 * qJD(1);
t856 = t1100 * t671;
t117 = -t474 * t481 + t475 * t483 - t615 * t856;
t901 = t117 * qJD(1);
t855 = t1100 * t673;
t197 = -t474 * t673 + (t481 + (-t855 - t615) * t672) * t671;
t900 = t197 * qJD(1);
t198 = t475 * t673 - t615 * t975 + (-t670 * t855 + t483) * t671;
t899 = t198 * qJD(1);
t359 = t671 * t543 - t673 * t966;
t894 = t359 * qJD(1);
t893 = t416 * qJD(3);
t419 = t1073 * t848 + t672 * t821 + t1086;
t383 = t419 * qJD(3);
t467 = t482 * qJD(4);
t782 = -pkin(2) * t673 - t973;
t600 = -pkin(1) + t782;
t493 = t600 * t673 + t611 * t671;
t887 = t493 * qJD(1);
t494 = -t600 * t671 + t611 * t673;
t886 = t494 * qJD(1);
t533 = t542 * qJD(6);
t546 = (t665 + t667) * t673 * t671;
t885 = t546 * qJD(1);
t579 = (t667 / 0.2e1 - t665 / 0.2e1) * t673;
t884 = t579 * qJD(4);
t594 = t628 * t672;
t881 = t594 * qJD(1);
t880 = t628 * qJD(1);
t879 = t666 * qJD(1);
t878 = t670 * qJD(2);
t877 = t671 * qJD(2);
t876 = t672 * qJD(2);
t874 = t673 * qJD(3);
t873 = t673 * qJD(4);
t655 = qJD(5) * t867;
t872 = t655 + qJD(6);
t866 = pkin(1) * t915;
t865 = pkin(1) * t875;
t864 = t669 * t1059;
t863 = pkin(7) * t877;
t862 = t1068 / 0.2e1;
t861 = -t1064 / 0.2e1;
t853 = qJD(4) * t1101;
t850 = t1069 * t542;
t839 = t670 * t876;
t838 = t670 * t657;
t837 = t541 * t908;
t836 = t543 * t908;
t835 = t671 * t873;
t834 = t600 * t611 * qJD(1);
t833 = t600 * t915;
t633 = t671 * t657;
t632 = t671 * t875;
t635 = t672 * t657;
t832 = t670 * t904;
t829 = -t1028 / 0.2e1;
t828 = -t1025 / 0.2e1;
t204 = t1024 / 0.2e1;
t825 = -t1003 / 0.2e1;
t443 = t1001 / 0.2e1;
t812 = -t333 + t1006;
t736 = -t1009 / 0.2e1 - t1008 / 0.2e1;
t252 = t736 + t935;
t662 = qJD(2) * qJ(3);
t809 = qJD(1) * t252 + t662;
t803 = pkin(4) * t820;
t800 = t946 - t1110;
t799 = -t946 + t1112;
t798 = t944 - t1113;
t797 = t670 * t635;
t796 = t668 * t832;
t792 = t944 + t1063;
t791 = t1077 + t861;
t790 = (t1077 + t1098) * t673;
t741 = t297 * t1095 - t373 * t429 / 0.2e1;
t751 = t1098 * t237 + t1103 * t238;
t3 = (t240 / 0.2e1 - t232 / 0.2e1) * t487 + t819 * t485 + t741 + t751;
t81 = t429 * t484;
t779 = -t3 * qJD(1) + t81 * qJD(2);
t691 = -t815 * t966 - t1195;
t7 = -t20 + t691;
t778 = -t7 * qJD(1) + t1133;
t777 = qJD(2) * t19 + qJD(3) * t1190;
t775 = t485 * t486 + t487 * t488;
t771 = (t473 + t994) * qJD(3);
t770 = -t20 * qJD(1) + t1134;
t26 = t205 + t831 + t1155;
t769 = -t26 * qJD(1) + t1134;
t11 = t204 + t691 + t830 - t1155;
t768 = -t11 * qJD(1) + t1133;
t438 = t484 + t1068;
t213 = t438 * t588 + t1010;
t689 = t1082 * t334 + t1088 * t438 + t740 + t825;
t39 = (t1076 + t1103) * t673 + t689 - t944;
t767 = -qJD(1) * t39 - qJD(2) * t213;
t214 = -t438 * t591 + t1011;
t447 = -t999 / 0.2e1;
t708 = t946 + t1110;
t739 = t1080 * t334 + t1085 * t438;
t37 = t447 + t790 + t708 + t739;
t766 = qJD(1) * t37 - qJD(2) * t214;
t230 = t484 * t588 + t1010;
t719 = t443 - t740;
t738 = t1082 * t373 + t1088 * t484;
t47 = t719 - t738 + t792;
t765 = qJD(1) * t47 - qJD(2) * t230;
t231 = -t484 * t591 + t1011;
t440 = t1005 / 0.2e1;
t737 = t1081 * t373 - t1095 * t966;
t45 = t440 + t708 - t737 + t967;
t764 = qJD(1) * t45 - qJD(2) * t231;
t405 = t1068 * t588 + t591 * t638;
t706 = t944 + t1113;
t65 = t1003 / 0.2e1 + (t970 / 0.2e1 + (t1074 * t588 + t868) * t673) * pkin(4) + t706;
t763 = qJD(1) * t65 - qJD(2) * t405;
t406 = t1068 * t591 - t588 * t638;
t446 = t999 / 0.2e1;
t707 = -t946 - t1112;
t64 = t446 + (-t966 * t1071 + (-t669 / 0.2e1 + t591 * t1074) * t673) * pkin(4) + t707;
t762 = qJD(1) * t64 - qJD(2) * t406;
t744 = t1038 / 0.2e1 - t1037 / 0.2e1;
t42 = t744 - t1184;
t761 = -qJD(1) * t42 + qJD(2) * t429;
t742 = -t1031 / 0.2e1 - t1030 / 0.2e1;
t52 = t721 + t742;
t760 = -qJD(1) * t52 - t912;
t90 = t677 - t678;
t759 = -qJD(4) * t90 + qJD(5) * t240;
t758 = -qJD(4) * t250 - qJD(5) * t90;
t748 = t1099 + t791;
t124 = t542 * t724 + t748 * t966;
t173 = -t591 * t748 - t1146;
t757 = qJD(1) * t124 + qJD(2) * t173;
t309 = qJD(1) * t417 - t913;
t756 = -t879 - t905;
t346 = -t789 / 0.2e1 + t581 - t787 / 0.2e1;
t755 = -qJD(4) * t346 - qJD(5) * t485;
t754 = qJD(4) * t488 - qJD(5) * t346;
t750 = t1099 * t250 + t1102 * t249;
t749 = pkin(5) * t1092 + qJ(6) * t1090;
t743 = t1076 * t238 + t1077 * t237;
t55 = t783 + t1140;
t733 = qJD(1) * t55 + t429 * t913;
t439 = -t1005 / 0.2e1;
t93 = t439 + t707;
t732 = qJD(1) * t93 + t638 * t883;
t92 = t443 + t706;
t731 = qJD(1) * t92 - t591 * t912;
t730 = t802 * t974;
t720 = -t1101 * t1073 - t968 / 0.2e1;
t427 = (t582 / 0.2e1 + t720) * t670;
t729 = -qJ(3) * t876 - t427 * qJD(1);
t700 = t720 * t672;
t428 = t554 / 0.2e1 + t700;
t728 = qJ(3) * t878 - t428 * qJD(1);
t277 = t1070 - t286;
t727 = qJD(1) * t277 + t841;
t505 = qJD(1) * t579 + t839;
t718 = t1075 * t246 + t245 * t868;
t495 = t668 * t670 * t914 - qJD(2) * t579;
t593 = t627 * t668;
t714 = -t593 * qJD(1) + 0.2e1 * t797;
t684 = t229 * t1089 + t232 * t1092 + t1029 / 0.2e1 + t297 * t438 / 0.2e1 + t334 * t1176;
t1 = t828 - t684 + t743;
t79 = t429 * t438 + t775;
t711 = -t1 * qJD(1) + t79 * qJD(2) + t1131;
t140 = t1068 * t638 + t775;
t696 = t240 * t1093 + t241 * t1090 - t1029 / 0.2e1;
t5 = t828 + (t558 * t1071 + t1175 * t974 + t718) * pkin(4) + t696;
t710 = -t5 * qJD(1) + t140 * qJD(2) + t1131;
t703 = (-qJD(2) * t541 + t870 * t966) * t542;
t695 = t829 + t735;
t694 = qJD(2) * t782 + t874;
t686 = (t1075 * t232 + t229 * t868) * pkin(4) + t240 * t1078 + t241 * t1076;
t16 = t686 + t750;
t175 = t591 * t791 + t1084 + t1146;
t523 = (t1069 * t637 + t647 * t669) * pkin(4);
t685 = (t1075 * t485 + t487 * t868) * pkin(4) + t485 * t1078 + t487 * t1076;
t75 = t685 + t749;
t690 = t16 * qJD(1) + t75 * qJD(2) + t175 * qJD(3) + t523 * qJD(4);
t664 = qJ(3) * qJD(3);
t663 = qJ(6) * qJD(6);
t654 = pkin(7) * t657;
t643 = -t875 / 0.2e1;
t642 = t875 / 0.2e1;
t641 = t657 / 0.2e1;
t634 = t671 * t914;
t631 = t670 * t915;
t626 = t637 * qJD(6);
t612 = t628 * qJD(2);
t587 = -t634 - t904;
t586 = -t631 - t906;
t584 = t620 * qJ(6);
t583 = t632 + t873 / 0.2e1;
t569 = t588 * qJD(3);
t534 = t632 + (qJD(4) / 0.2e1 + qJD(5) / 0.2e1) * t673;
t469 = t482 * qJD(5);
t464 = t966 * t903;
t387 = t420 * qJD(3);
t332 = -t595 - t554 / 0.2e1 + t700;
t331 = t596 - t976 / 0.2e1 + t720 * t670;
t330 = qJD(2) * t585 - t591 * t917;
t290 = qJD(2) * t693 - t542 * t915;
t278 = t1070 + t286;
t273 = t1118 + t805;
t251 = -t736 + t935;
t233 = qJD(2) * t359 + t1141 * t542;
t192 = qJD(2) * t420 + t542 * t620;
t174 = t577 / 0.2e1 + t1111;
t172 = t1084 - t1111;
t160 = t1025 / 0.2e1;
t157 = (-qJD(2) * t543 - t542 * t870) * t966;
t148 = -t894 - t1173;
t125 = t135 * qJD(3);
t123 = t985 / 0.2e1 + t982 / 0.2e1 + (t850 / 0.2e1 - t992 / 0.2e1) * pkin(4) + t794;
t122 = t591 * t657 + t894 + t942;
t104 = t543 * t917 + t1185;
t95 = t444 + t798;
t94 = t440 + t799;
t77 = t674 - t786;
t74 = t685 - t749;
t73 = (t913 - t917) * t543 + t1185;
t71 = t1060 * t669 + t1117;
t67 = t591 * t803 + t673 * t861 - t862 * t966 + t447 + t799;
t66 = t825 - pkin(4) * t970 / 0.2e1 + t588 * t803 + t673 * t801 + t798;
t61 = -t1064 * t870 - t1117;
t56 = t719 + t783;
t51 = t721 - t742;
t48 = t738 + t792 + t1140;
t46 = t439 + t737 + t800 + t967;
t43 = t744 + t1184;
t40 = t647 * t1070 + t689 - t783;
t38 = t446 + t790 - t739 + t800;
t27 = t204 + t829 + t1148 + t955;
t24 = t752 + t956 + t957;
t21 = t204 + t695 + t957;
t18 = t19 * qJD(5);
t15 = t686 - t750;
t12 = t1028 / 0.2e1 - t1148 + t956 + t1105;
t10 = -t752 + t955 + t1168;
t8 = -t695 + t1105 + t1168;
t6 = pkin(4) * t718 + t558 * t862 + t638 * t803 + t160 - t696;
t4 = t150 - t229 * t485 / 0.2e1 + t241 * t1094 + t232 * t1091 - t741 + t751;
t2 = t160 + t684 + t743;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t633, t612, 0, -t633, 0, 0, -pkin(1) * t877, -pkin(1) * t657, 0, 0, 0, 0, 0, t633, t612, -t633, 0, t494 * qJD(2) - t671 * t874, -qJD(2) * t493 + qJD(3) * t666 (qJD(2) * t611 - t908) * t600, -t633 * t665 + t796, -t593 * qJD(4) - 0.2e1 * t671 * t797, -t590 * qJD(2) - t672 * t835, -t633 * t667 - t796, -t594 * qJD(2) + t670 * t835, t633, qJD(2) * t197 + qJD(4) * t314 + t666 * t909, -qJD(2) * t198 - qJD(4) * t313 + t666 * t907, -qJD(2) * t114 + qJD(3) * t546, qJD(2) * t117 - qJD(3) * t257, t157, -t1150, t233, t703, -t1149, t633, qJD(2) * t53 + qJD(4) * t115 + qJD(5) * t143 + t836, -qJD(2) * t54 - qJD(4) * t116 - qJD(5) * t142 - t837, qJD(2) * t32 + qJD(4) * t33 + t1129, qJD(2) * t36 + qJD(3) * t72 + qJD(4) * t41, t157, t233, t1150, t633, t1149, t703, qJD(2) * t50 + qJD(4) * t62 + qJD(5) * t69 - t533 * t966 + t836, qJD(2) * t28 + qJD(4) * t30 + qJD(5) * t29 + t542 * t656 + t1129, qJD(2) * t49 + qJD(4) * t63 + qJD(5) * t68 + qJD(6) * t516 + t837, qJD(2) * t17 + qJD(3) * t70 + qJD(4) * t25 + qJD(5) * t22 + qJD(6) * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t632, t880, t657, -t632, -t877, 0, -t654 - t866, t863 - t865, 0, 0, 0, -t657, t877, t632, t880, -t632, t694, t654 + t886, -t863 - t887, pkin(7) * t694 + t834, -t884 + (-t665 * t875 + t839) * t671, -t671 * t713 + 0.2e1 * t673 * t832, t635 - t916, t884 + (-t667 * t875 - t839) * t671, -t838 - t881, t583, t900 + (-t672 * t857 + (-t971 - t1123) * t671) * qJD(2) + t672 * t874 + t331 * qJD(4), -t899 + (t670 * t857 + (t977 - t858) * t671) * qJD(2) - t670 * t874 + t332 * qJD(4), qJD(2) * t1115 - t902, t901 + (-qJ(3) * t856 + t1101 * t1115) * qJD(2) + t251 * qJD(3), t73, -t1187, t122, t1182, -t1177, t534, t996 + (t638 * t541 + t557 * t588 - t1004) * qJD(2) + t1119 + t66 * qJD(4) + t95 * qJD(5), -t995 + (t638 * t543 + t557 * t591 - t1000) * qJD(2) - t893 + t67 * qJD(4) + t94 * qJD(5), t1016 + (-t1030 + t812 - t1031) * qJD(2) + t125 + t12 * qJD(4) + t1191, t1014 + (-t245 * t485 + t246 * t487 + t557 * t638) * qJD(2) + t51 * qJD(3) + t6 * qJD(4) + t18, t73, t122, t1187, t534, t1177, t1182, t997 + (t296 * t588 + t429 * t541 - t1004) * qJD(2) + t1119 + t40 * qJD(4) + t48 * qJD(5) + t278 * qJD(6), t1022 + (t1037 + t812 - t1038) * qJD(2) + t125 + t8 * qJD(4) + t10 * qJD(5) + t420 * qJD(6), t998 + (-t296 * t591 - t429 * t543 + t1000) * qJD(2) + t893 + t38 * qJD(4) + t46 * qJD(5) - t464, t1043 + (t237 * t487 + t238 * t485 + t296 * t429) * qJD(2) + t43 * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t56 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t657, -t632, t879, t654 - t833, 0, 0, 0, 0, 0, 0, t670 * t879 + t635, t672 * t879 - t838, t885, qJD(2) * t251 - t925, 0, 0, 0, 0, 0, 0, t1108 + t942, t1183, t1159, t51 * qJD(2) + t27 * qJD(4) + t1191 + t771 + t964, 0, 0, 0, 0, 0, 0, -t419 * t870 + t1108, t1159, -t1183, t43 * qJD(2) + t21 * qJD(4) + t24 * qJD(5) + t419 * qJD(6) + t771 + t965; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t495, t714, -t802 * t969, -t495, t730, t641, qJD(2) * t331 - qJD(4) * t475 + t921, qJD(2) * t332 + qJD(4) * t474 - t922, 0, 0, t1153, t112, t192, -t1153, -t194, t641, qJD(2) * t66 + t1057 + t387 + t931, qJD(2) * t67 + t758 - t891 - t930, t1015 + t12 * qJD(2) + (-t850 + t992) * t1060, t1013 + t6 * qJD(2) + t27 * qJD(3) + (-t1069 * t249 + t250 * t669) * t1060, t1153, t192, -t112, t641, t194, -t1153, qJD(2) * t40 + t1052 + t1057 - t383, t1017 + t8 * qJD(2) + (t982 + t985) * qJD(4) + t123 * qJD(5) + t533, qJD(2) * t38 + t1051 - t758 + t939, t1026 + t2 * qJD(2) + t21 * qJD(3) + (t249 * t647 + t250 * t637) * qJD(4) + t15 * qJD(5) + t77 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1153, t112, t192, -t1153, -t194, t641, qJD(2) * t95 + t1056 + t387 + t926, qJD(2) * t94 + t759 - t891 - t927, t1046, t777, t1153, t192, -t112, t641, t194, -t1153, qJD(2) * t48 + t1049 + t1056 - t383, t10 * qJD(2) + t123 * qJD(4) + qJD(5) * t781 + t1021 + t533, qJD(2) * t46 + t1050 - t759 + t939, t1042 + t4 * qJD(2) + t24 * qJD(3) + t15 * qJD(4) + (-pkin(5) * t241 - qJ(6) * t240) * qJD(5) + t229 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t278 - t845, t192, t1160, qJD(2) * t56 + qJD(4) * t77 + qJD(5) * t229 + t383 + t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t632, -t880, 0, t632, 0, 0, t866, t865, 0, 0, 0, 0, 0, -t632, -t880, t632, 0, -t886, t887, -t834, t632 * t665 - t884, 0.2e1 * t672 * t730, -t670 * t905 + t916, t632 * t667 + t884, -t671 * t904 + t881, -t583, qJD(4) * t427 - t900, qJD(4) * t428 + t899, t902, qJD(3) * t252 - t901, t104, t1188, t148, t1180, t1178, -t534, -qJD(4) * t65 - qJD(5) * t92 + t1130 - t996, -qJD(4) * t64 - qJD(5) * t93 - t911 + t995, -qJD(4) * t11 - t1016 + t1156 + t1191, qJD(3) * t52 - qJD(4) * t5 - t1014 + t18, t104, t148, -t1188, -t534, -t1178, t1180, qJD(4) * t39 - qJD(5) * t47 - qJD(6) * t277 + t1130 - t997, -qJD(4) * t7 - qJD(5) * t9 - t1022 - t1125 + t1156, -qJD(4) * t37 - qJD(5) * t45 - t464 + t911 - t998, -qJD(3) * t42 - qJD(4) * t1 - qJD(5) * t3 - qJD(6) * t55 - t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t664, -t832, t627 * qJD(4), 0, t832, 0, 0, qJ(3) * t904 + t909, -qJ(3) * t906 + t907, 0, t664, -t1145, t1171, 0, t1145, 0, 0, qJD(4) * t405 + t575 * t638 + t569, qJD(4) * t406 - t572 * t638 + t910, t1128, qJD(3) * t638 + qJD(4) * t140, -t1145, 0, -t1171, 0, 0, t1145, qJD(4) * t213 + qJD(5) * t230 - t591 * t882 + t569, t1128, qJD(4) * t214 + qJD(5) * t231 + qJD(6) * t585 - t910, qJD(4) * t79 + qJD(5) * t81 + (qJD(3) - t903) * t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t662, 0, 0, 0, 0, 0, 0, t878, t876, 0, t809, 0, 0, 0, 0, 0, 0, t1158, -t309, t1157, -t760 + t1122, 0, 0, 0, 0, 0, 0, t1158, t1157, t309, t761 + t1122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t505, t713, t586, t505, t587, t643, t670 * t853 - t729, t672 * t853 - t728, 0, 0, -t1154, -t120, t1163, t1154, t1164, t643, -t763 + t948, -t754 - t762, t768 + t1124 (-t1069 * t486 + t488 * t669) * t1060 + t710, -t1154, t1163, t120, t643, t273, t1154, -t767 + t948, t172 * qJD(5) + t1161 + t778, t754 - t766 (t486 * t647 + t488 * t637) * qJD(4) + t74 * qJD(5) + t347 * qJD(6) + t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1154, -t120, t1163, t1154, t1164, t643, -t731 + t947, -t732 - t755, t1192, t1054, -t1154, t1163, t120, t643, t273, t1154, -t765 + t947, t172 * qJD(4) - t1058 - t1162, t755 - t764, t74 * qJD(4) + (-pkin(5) * t487 - qJ(6) * t485) * qJD(5) + t487 * qJD(6) + t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t727, t1163, t330, -t733 - t947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t632, -t879, t833, 0, 0, 0, 0, 0, 0, t756 * t670, t756 * t672, -t885, -qJD(2) * t252 + t925, 0, 0, 0, 0, 0, 0, t1189, t1181, t1151, -qJD(2) * t52 - qJD(4) * t26 + t1191 - t964, 0, 0, 0, 0, 0, 0, t1189, t1151, -t1181, qJD(2) * t42 - qJD(4) * t20 - qJD(5) * t23 + t1125 - t965; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t662, 0, 0, 0, 0, 0, 0, -t878, -t876, 0, -t809, 0, 0, 0, 0, 0, 0, -t1158, t309, -t1157, t760 + t1122, 0, 0, 0, 0, 0, 0, -t1158, -t1157, -t309, -t761 + t1122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t586, t587, 0, 0, 0, 0, 0, 0, 0, 0, t1163, t1164, 0, t769 - t1124, 0, 0, 0, 0, 0, 0, t1163, 0, t273, t174 * qJD(5) - t1161 + t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1163, t1164, 0, t1192, 0, 0, 0, 0, 0, 0, t1163, 0, t273, t174 * qJD(4) - t1040 + t1162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588 * t870 + t1121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, -t714 (t842 + t878) * t671, t495 (-t670 * t875 + t876) * t671, t641, -qJD(2) * t427 + t670 * t908 - t921, -qJD(2) * t428 + t671 * t907 + t922, 0, 0, -t1153, -t112, t290, t1153, t291, t641, qJD(2) * t65 + t1170 - t931, qJD(2) * t64 - t1044 + t889 + t930, qJD(2) * t11 - t1015, qJD(2) * t5 + qJD(3) * t26 - t1013, -t1153, t290, t112, t641, -t291, t1153, -qJD(2) * t39 - t1052 + t1170, qJD(2) * t7 + qJD(5) * t124 - t1017, qJD(2) * t37 + t1044 - t1051 + t934, qJD(2) * t1 + qJD(3) * t20 + qJD(5) * t16 - qJD(6) * t76 - t1026; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, -t713, t631, -t505, t634, t642, t729, t728, 0, 0, t1154, t120, t1121, -t1154, t1118, t642, -t469 + t763, t762, -t768, -t710, t1154, t1121, -t120, t642, -t1118, -t1154, -t469 + t767, qJD(5) * t173 - t778, t766, qJD(5) * t75 + qJD(6) * t482 - t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t631, t634, 0, 0, 0, 0, 0, 0, 0, 0, t1121, t1118, 0, -t769, 0, 0, 0, 0, 0, 0, t1121, 0, -t1118, qJD(5) * t175 - t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t864, -t655, 0, 0, 0, 0, 0, 0, 0, 0, -t864, 0, t872, qJD(5) * t523 + t626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, -t655 - t859, 0, 0, 0, 0, 0, 0, 0, 0, t61, t757, t859 + t872 (-pkin(5) * t669 + qJ(6) * t1069) * t1059 + t626 + t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, t637 * t870 + t1116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1153, -t112, t290, t1153, t291, t641, qJD(2) * t92 + t1169 - t926, qJD(2) * t93 + t1045 + t889 + t927, -t1046, -t777, -t1153, t290, t112, t641, -t291, t1153, qJD(2) * t47 - t1049 + t1169, qJD(2) * t9 - qJD(4) * t124 - t1021, qJD(2) * t45 - t1045 - t1050 + t934, qJ(6) * t656 + qJD(2) * t3 + qJD(3) * t23 - qJD(4) * t16 - t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1154, t120, t1121, -t1154, t1118, t642, t467 + t731, t732, -t1192, -t1054, t1154, t1121, -t120, t642, -t1118, -t1154, t467 + t765, -qJD(4) * t173 + t1058, t764, -qJD(4) * t75 - t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1121, t1118, 0, -t1192, 0, 0, 0, 0, 0, 0, t1121, 0, -t1118, -qJD(4) * t175 + t1040; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t859, 0, 0, 0, 0, 0, 0, 0, 0, t71, -t757, qJD(6) - t859, t663 - t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t277 + t845, t290, -t1160, qJD(2) * t55 + qJD(4) * t76 - t671 * t933 - t1120 - t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t1121, -t330, t733 - t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620, -qJD(4) * t637 - t1116 - t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620, -t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
