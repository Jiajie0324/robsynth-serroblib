% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP12_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP12_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP12_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP12_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:53:32
% EndTime: 2019-03-09 12:53:42
% DurationCPUTime: 3.64s
% Computational Cost: add. (4206->300), mult. (8842->492), div. (0->0), fcn. (7327->6), ass. (0->160)
t107 = sin(qJ(4));
t109 = cos(qJ(4));
t200 = cos(qJ(5));
t157 = t200 * qJD(5);
t199 = sin(qJ(5));
t158 = qJD(5) * t199;
t208 = t199 * qJD(4) + t158;
t48 = (t200 * qJD(4) + t157) * t109 - t208 * t107;
t70 = t200 * t107 + t199 * t109;
t204 = 0.2e1 * t70 * t48;
t207 = qJD(4) + qJD(5);
t47 = t207 * t70;
t169 = t199 * t107;
t170 = t200 * t109;
t71 = t170 - t169;
t39 = -0.2e1 * t71 * t47;
t212 = t204 + t39;
t201 = pkin(3) + pkin(7);
t211 = (qJD(5) * (-t199 * t71 + t200 * t70) + t199 * t48 - t200 * t47) * pkin(4);
t108 = sin(qJ(2));
t202 = pkin(2) + pkin(8);
t173 = t202 * t108;
t110 = cos(qJ(2));
t194 = qJ(3) * t110;
t210 = t173 - t194;
t160 = qJD(2) * t200;
t147 = t108 * t160;
t159 = qJD(2) * t199;
t148 = t108 * t159;
t30 = -t107 * t148 + t109 * t147 + t47 * t110;
t151 = t110 * t170;
t54 = t110 * t169 - t151;
t144 = -t70 * t30 - t48 * t54;
t106 = t110 ^ 2;
t155 = qJD(2) * (t108 ^ 2 - t106);
t103 = t107 ^ 2;
t105 = t109 ^ 2;
t190 = t103 - t105;
t154 = t190 * qJD(4);
t182 = pkin(9) + t202;
t153 = t182 * t109;
t137 = t200 * t153;
t188 = qJD(4) * t107;
t142 = t182 * t188;
t75 = t182 * t107;
t27 = t137 * t207 - t199 * t142 - t75 * t158;
t136 = t199 * t153;
t28 = -t136 * t207 - t200 * t142 - t75 * t157;
t49 = -t199 * t75 + t137;
t50 = -t200 * t75 - t136;
t129 = -t27 * t70 - t28 * t71 + t49 * t47 + t50 * t48;
t192 = t108 * qJ(3);
t131 = -t202 * t110 - t192;
t183 = t110 * qJD(3);
t80 = t201 * t110;
t206 = t131 * qJD(2) + t80 * qJD(4) + t183;
t132 = t107 * qJ(3) + t109 * t201;
t66 = -pkin(1) + t131;
t162 = t110 * pkin(9) - t66;
t184 = t108 * qJD(3);
t172 = t201 * t108;
t72 = t107 * t172;
t113 = t107 * t184 + (t162 * t109 - t72) * qJD(4) + (-t108 * t75 + (pkin(4) + t132) * t110) * qJD(2);
t185 = t108 * qJD(2);
t164 = t109 * t185;
t186 = qJD(4) * t110;
t168 = t107 * t186;
t123 = t164 + t168;
t98 = t110 * qJD(2);
t166 = t107 * t98;
t73 = t109 * t172;
t24 = t66 * t188 - t109 * (t210 * qJD(2) - t184) - t201 * t166 - qJD(4) * t73;
t115 = t123 * pkin(9) - t24;
t114 = -t200 * t113 + t199 * t115;
t41 = t108 * pkin(4) + t162 * t107 + t73;
t191 = t109 * t110;
t46 = t109 * t66 + t72;
t43 = -pkin(9) * t191 + t46;
t195 = t199 * t41 + t200 * t43;
t4 = -qJD(5) * t195 - t114;
t203 = 0.2e1 * qJD(3);
t111 = 2 * qJD(6);
t91 = t107 * pkin(4) + qJ(3);
t193 = qJD(2) * t80;
t187 = qJD(4) * t109;
t85 = pkin(4) * t187 + qJD(3);
t181 = 0.2e1 * t54 * t30;
t180 = -0.2e1 * pkin(1) * qJD(2);
t179 = t199 * pkin(4);
t178 = pkin(5) * t98;
t177 = pkin(7) * t185;
t176 = pkin(7) * t98;
t61 = pkin(4) * t191 + t80;
t175 = t107 * t202;
t174 = t109 * t202;
t171 = qJD(4) * t202;
t167 = t109 * t186;
t165 = t108 * t98;
t163 = t107 * t187;
t161 = -t50 * t27 + t49 * t28;
t152 = pkin(4) * t158;
t150 = t107 * t164;
t149 = t106 * t163;
t29 = t109 * t148 + (t110 * t208 + t147) * t107 - t207 * t151;
t55 = t70 * t110;
t145 = t29 * t54 - t55 * t30;
t8 = t29 * t71 + t47 * t55;
t143 = t47 * t70 - t71 * t48;
t141 = -t110 * pkin(2) - t192;
t45 = -t107 * t66 + t73;
t140 = -t45 * t107 + t46 * t109;
t135 = -t27 * t108 + t50 * t98;
t134 = -t28 * t108 - t49 * t98;
t133 = t108 * t30 + t54 * t98;
t35 = -t47 * t108 + t71 * t98;
t34 = t108 * t48 + t70 * t98;
t130 = -t27 * t54 - t28 * t55 + t49 * t29 + t50 * t30;
t128 = -t8 - t144;
t17 = -t199 * t43 + t200 * t41;
t3 = -t199 * t113 - t200 * t115 - t41 * t157 + t43 * t158;
t124 = t47 * pkin(5) - t48 * qJ(6) - t70 * qJD(6);
t122 = 0.2e1 * t129;
t92 = qJ(6) * t98;
t97 = t108 * qJD(6);
t1 = t92 + t97 - t3;
t13 = t108 * qJ(6) + t195;
t14 = -t108 * pkin(5) - t17;
t2 = -t178 - t4;
t121 = t1 * t70 + t13 * t48 + t14 * t47 - t2 * t71;
t120 = -t17 * t47 + t195 * t48 - t3 * t70 + t4 * t71;
t119 = t29 * t70 - t71 * t30 + t47 * t54 - t55 * t48;
t74 = t201 * t185;
t118 = t210 * qJD(4) - t74;
t117 = t141 * qJD(2) + t183;
t51 = -pkin(4) * t168 + (-pkin(4) * t109 - t201) * t185;
t95 = pkin(4) * t157;
t84 = t95 + qJD(6);
t90 = t179 + qJ(6);
t94 = -t200 * pkin(4) - pkin(5);
t116 = t71 * t152 - t47 * t94 - t48 * t90 - t70 * t84;
t112 = (-t108 * t179 - t195) * qJD(5) - t114;
t102 = qJ(3) * t203;
t89 = -0.2e1 * t152;
t83 = -0.2e1 * t165;
t82 = 0.2e1 * t165;
t76 = -pkin(1) + t141;
t69 = -0.2e1 * t155;
t63 = -t108 * t187 - t166;
t62 = -t108 * t188 + t109 * t98;
t57 = -t184 + (pkin(2) * t108 - t194) * qJD(2);
t53 = -t110 * t154 - t150;
t44 = t70 * pkin(5) - t71 * qJ(6) + t91;
t33 = -t54 * pkin(5) + t55 * qJ(6) + t61;
t25 = -t66 * t187 + (-qJD(4) * t201 + qJD(3)) * t107 * t108 + (-t107 * t173 + t132 * t110) * qJD(2);
t21 = -0.2e1 * t55 * t29;
t19 = t48 * pkin(5) + t47 * qJ(6) - t71 * qJD(6) + t85;
t16 = 0.2e1 * t108 * t29 - 0.2e1 * t55 * t98;
t7 = -t30 * pkin(5) - t29 * qJ(6) + t55 * qJD(6) + t51;
t5 = t140 * qJD(4) - t24 * t107 + t25 * t109;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t69, 0, t83, 0, 0, t108 * t180, t110 * t180, 0, 0, 0, 0, 0, t82, t69, t83, 0, 0.2e1 * t57 * t110 - 0.2e1 * t76 * t185, -0.2e1 * t57 * t108 - 0.2e1 * t76 * t98, 0.2e1 * t76 * t57, -0.2e1 * t103 * t165 + 0.2e1 * t149, -0.2e1 * t106 * t154 - 0.4e1 * t110 * t150, 0.2e1 * t107 * t155 - 0.2e1 * t108 * t167, -0.2e1 * t105 * t165 - 0.2e1 * t149, 0.2e1 * t108 * t168 + 0.2e1 * t109 * t155, t82, 0.2e1 * (-t109 * t193 + t25) * t108 + 0.2e1 * (qJD(2) * t45 - t74 * t109 - t80 * t188) * t110, 0.2e1 * (t107 * t193 + t24) * t108 + 0.2e1 * (-qJD(2) * t46 + t74 * t107 - t80 * t187) * t110, 0.2e1 * t140 * t185 + 0.2e1 * (t107 * t25 + t109 * t24 + (t107 * t46 + t109 * t45) * qJD(4)) * t110, -0.2e1 * t46 * t24 + 0.2e1 * t45 * t25 - 0.2e1 * t80 * t74, t21, 0.2e1 * t145, t16, t181, 0.2e1 * t133, t82, 0.2e1 * t4 * t108 + 0.2e1 * t17 * t98 - 0.2e1 * t61 * t30 - 0.2e1 * t51 * t54, 0.2e1 * t3 * t108 - 0.2e1 * t195 * t98 + 0.2e1 * t61 * t29 - 0.2e1 * t51 * t55, -0.2e1 * t17 * t29 + 0.2e1 * t195 * t30 - 0.2e1 * t3 * t54 + 0.2e1 * t4 * t55, 0.2e1 * t17 * t4 - 0.2e1 * t195 * t3 + 0.2e1 * t61 * t51, t21, t16, -0.2e1 * t145, t82, -0.2e1 * t133, t181, -0.2e1 * t2 * t108 - 0.2e1 * t14 * t98 - 0.2e1 * t33 * t30 - 0.2e1 * t7 * t54, 0.2e1 * t1 * t54 + 0.2e1 * t13 * t30 + 0.2e1 * t14 * t29 - 0.2e1 * t2 * t55, 0.2e1 * t1 * t108 + 0.2e1 * t13 * t98 - 0.2e1 * t33 * t29 + 0.2e1 * t7 * t55, 0.2e1 * t13 * t1 + 0.2e1 * t14 * t2 + 0.2e1 * t33 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, -t185, 0, -t176, t177, 0, 0, 0, -t98, t185, 0, 0, 0, t117, t176, -t177, t117 * pkin(7), -t53, 0.4e1 * t110 * t163 - t190 * t185, t62, t53, t63, 0, t118 * t107 + t109 * t206, -t107 * t206 + t118 * t109, -t5, t24 * t175 - t25 * t174 - t74 * qJ(3) + t80 * qJD(3) + (-t46 * t174 + t45 * t175) * qJD(4), t8, -t119, t35, t144, -t34, 0, -t91 * t30 + t61 * t48 + t51 * t70 - t85 * t54 + t134, t91 * t29 - t61 * t47 + t51 * t71 - t85 * t55 - t135, -t120 + t130, -t17 * t28 - t195 * t27 - t3 * t50 - t4 * t49 + t51 * t91 + t61 * t85, t8, t35, t119, 0, t34, t144, -t19 * t54 - t44 * t30 + t33 * t48 + t7 * t70 + t134, -t121 + t130, t19 * t55 - t44 * t29 + t33 * t47 - t7 * t71 + t135, t1 * t50 - t13 * t27 + t14 * t28 + t33 * t19 + t2 * t49 + t7 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t102, -0.2e1 * t163, 0.2e1 * t154, 0, 0.2e1 * t163, 0, 0, 0.2e1 * qJ(3) * t187 + 0.2e1 * qJD(3) * t107, -0.2e1 * qJ(3) * t188 + 0.2e1 * qJD(3) * t109, 0, t102, t39, 0.2e1 * t143, 0, t204, 0, 0, 0.2e1 * t91 * t48 + 0.2e1 * t85 * t70, -0.2e1 * t91 * t47 + 0.2e1 * t85 * t71, -t122, 0.2e1 * t91 * t85 + 0.2e1 * t161, t39, 0, -0.2e1 * t143, 0, 0, t204, 0.2e1 * t19 * t70 + 0.2e1 * t44 * t48, -t122, -0.2e1 * t19 * t71 + 0.2e1 * t44 * t47, 0.2e1 * t44 * t19 + 0.2e1 * t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, t176, 0, 0, 0, 0, 0, 0, t62, t63, 0, t5, 0, 0, 0, 0, 0, 0, t35, -t34, t128, t120, 0, 0, 0, 0, 0, 0, t35, t128, t34, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, t129, 0, 0, 0, 0, 0, 0, 0, -t212, 0, t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107 * t185 - t167, 0, t123, t98, t25, t24, 0, 0, 0, 0, t29, 0, t30, t98, pkin(4) * t110 * t160 + t112 (-t108 * t157 - t110 * t159) * pkin(4) + t3 (-t200 * t29 + t199 * t30 + (-t199 * t55 + t200 * t54) * qJD(5)) * pkin(4) (t200 * t4 - t199 * t3 + (-t199 * t17 + t195 * t200) * qJD(5)) * pkin(4), 0, t29, 0, t98, -t30, 0, -t94 * t98 + t112 + t178, -t152 * t55 + t94 * t29 + t90 * t30 + t84 * t54, t84 * t108 + t90 * t98 + t1, t1 * t90 + t13 * t84 + t14 * t152 + t2 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, 0, -t187, 0, t107 * t171, t109 * t171, 0, 0, 0, 0, -t47, 0, -t48, 0, -t28, t27, -t211 (-t200 * t28 - t199 * t27 + (t199 * t49 + t200 * t50) * qJD(5)) * pkin(4), 0, -t47, 0, 0, t48, 0, -t28, t116, -t27, t152 * t49 - t27 * t90 + t28 * t94 + t50 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, -t187, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t48, 0, t211, 0, 0, 0, 0, 0, 0, -t47, 0, t48, -t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -0.2e1 * t95, 0, 0, 0, 0, 0, 0, 0, 0, t89, 0, 0.2e1 * t84, 0.2e1 * t152 * t94 + 0.2e1 * t90 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, t30, t98, t4, t3, 0, 0, 0, t29, 0, t98, -t30, 0, t4 + 0.2e1 * t178, -pkin(5) * t29 + t30 * qJ(6) + t54 * qJD(6), 0.2e1 * t92 + 0.2e1 * t97 - t3, -t2 * pkin(5) + t1 * qJ(6) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, 0, -t48, 0, -t28, t27, 0, 0, 0, -t47, 0, 0, t48, 0, -t28, t124, -t27, -t28 * pkin(5) - t27 * qJ(6) + t50 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t48, 0, 0, 0, 0, 0, 0, 0, 0, -t47, 0, t48, -t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152, -t95, 0, 0, 0, 0, 0, 0, 0, 0, -t152, 0, t111 + t95, -pkin(5) * t152 + t84 * qJ(6) + t90 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, qJ(6) * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, t29, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
