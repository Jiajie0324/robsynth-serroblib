% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:53:36
% EndTime: 2019-03-09 12:54:05
% DurationCPUTime: 15.79s
% Computational Cost: add. (13607->736), mult. (25030->892), div. (0->0), fcn. (24959->6), ass. (0->550)
t502 = sin(qJ(2));
t504 = cos(qJ(2));
t720 = t504 * qJ(3);
t446 = t502 * pkin(2) - t720;
t417 = pkin(8) * t502 + t446;
t492 = t504 * pkin(7);
t493 = t504 * pkin(3);
t448 = t492 + t493;
t503 = cos(qJ(4));
t430 = t448 * t503;
t501 = sin(qJ(4));
t806 = pkin(4) * t504;
t244 = t806 + t430 + (-pkin(9) * t502 - t417) * t501;
t500 = sin(qJ(5));
t223 = t500 * t244;
t393 = t503 * t417;
t429 = t448 * t501;
t700 = t393 + t429;
t725 = t502 * t503;
t269 = pkin(9) * t725 + t700;
t808 = cos(qJ(5));
t246 = t808 * t269;
t708 = t223 / 0.2e1 + t246 / 0.2e1;
t721 = t503 * t504;
t568 = pkin(4) * t721 + t448;
t636 = t808 * t501;
t732 = t500 * t503;
t424 = t636 + t732;
t385 = t424 * t504;
t745 = t385 * qJ(6);
t635 = t808 * t503;
t454 = t504 * t635;
t728 = t501 * t504;
t383 = t500 * t728 - t454;
t805 = t383 * pkin(5);
t587 = t745 - t805;
t185 = t568 + t587;
t473 = pkin(4) * t501 + qJ(3);
t733 = t500 * t501;
t423 = -t635 + t733;
t414 = t423 * qJ(6);
t804 = t424 * pkin(5);
t866 = t414 + t804;
t290 = t473 + t866;
t821 = -t424 / 0.2e1;
t852 = t290 * t383 / 0.2e1 + t185 * t821;
t505 = -pkin(2) - pkin(8);
t872 = pkin(9) - t505;
t433 = t872 * t501;
t609 = t872 * t503;
t606 = -t500 * t433 + t808 * t609;
t881 = t606 * t502;
t897 = t881 / 0.2e1;
t904 = t708 + t852 + t897;
t740 = t473 * t383;
t898 = -t881 / 0.2e1;
t903 = -t740 / 0.2e1 - t708 + t898;
t902 = t708 - t852 + t898;
t619 = -t733 / 0.2e1;
t818 = t454 / 0.2e1;
t822 = t423 / 0.2e1;
t523 = t818 + (t619 + t822) * t504;
t451 = t500 * t725;
t452 = t502 * t636;
t384 = -t451 - t452;
t685 = qJD(1) * t502;
t633 = t384 * t685;
t610 = t451 / 0.2e1 + t452 / 0.2e1;
t811 = t502 / 0.2e1;
t620 = t424 * t811;
t549 = t620 + t610;
t650 = qJD(4) + qJD(5);
t882 = t549 * t650;
t901 = -qJD(2) * t523 + t633 - t882;
t617 = -t728 / 0.2e1;
t809 = -t504 / 0.2e1;
t521 = t423 * t809 + t500 * t617 + t818;
t287 = t620 - t610;
t883 = t287 * t650;
t900 = qJD(2) * t521 - t633 - t883;
t660 = t424 * qJD(6);
t453 = t502 * t635;
t729 = t501 * t502;
t382 = t500 * t729 - t453;
t839 = qJ(6) / 0.2e1;
t843 = -pkin(5) / 0.2e1;
t561 = t382 * t839 + t384 * t843;
t727 = t502 * qJ(3);
t608 = pkin(1) + t727;
t841 = pkin(3) + pkin(7);
t447 = t841 * t502;
t722 = t503 * t447;
t267 = t722 + (t504 * t872 + t608) * t501;
t514 = t502 * pkin(4) + t267;
t222 = t808 * t514;
t870 = t504 * t505;
t535 = -t608 + t870;
t730 = t501 * t447;
t328 = t503 * t535 + t730;
t268 = -pkin(9) * t721 + t328;
t735 = t500 * t268;
t154 = -t222 + t735;
t149 = -pkin(5) * t502 + t154;
t837 = -t149 / 0.2e1;
t614 = t154 / 0.2e1 + t837;
t245 = t808 * t268;
t511 = t500 * t514;
t155 = t245 + t511;
t726 = t502 * qJ(6);
t146 = t155 + t726;
t838 = t146 / 0.2e1;
t616 = t838 - t155 / 0.2e1;
t15 = t423 * t616 + t424 * t614 + t561;
t896 = t15 * qJD(1);
t899 = qJD(5) * t866 - t660 + t896;
t536 = t568 * t424;
t68 = t897 - t536 / 0.2e1 + t740 / 0.2e1 - t708;
t889 = -t606 / 0.2e1;
t895 = t383 * t889;
t522 = -t433 * t808 - t500 * t609;
t869 = t522 * t502;
t301 = t869 / 0.2e1;
t638 = t808 * t244;
t734 = t500 * t269;
t706 = t638 / 0.2e1 - t734 / 0.2e1;
t739 = t473 * t385;
t894 = t301 + t739 / 0.2e1 + t706;
t508 = -t511 / 0.2e1 - t245 / 0.2e1;
t812 = -t502 / 0.2e1;
t618 = t500 * t812;
t507 = pkin(4) * t618 + t508;
t736 = t500 * t267;
t590 = t245 / 0.2e1 + t736 / 0.2e1;
t63 = t507 - t590;
t875 = t287 * qJD(3);
t893 = t63 * qJD(4) - t155 * qJD(5) - t875;
t161 = t245 + t736;
t892 = -t161 * qJD(4) + t63 * qJD(5) - t875;
t823 = -t423 / 0.2e1;
t826 = -t385 / 0.2e1;
t556 = t185 * t823 + t290 * t826;
t887 = -t869 / 0.2e1;
t867 = t887 + t556;
t537 = t568 * t423;
t69 = t887 - t537 / 0.2e1 - t739 / 0.2e1 + t706;
t802 = t504 * pkin(5);
t589 = -t802 / 0.2e1 - t706;
t891 = qJD(5) * t15 - qJD(6) * t549;
t820 = t424 / 0.2e1;
t830 = -t522 / 0.2e1;
t888 = t606 / 0.2e1;
t62 = t507 + t590;
t854 = t549 * qJD(3);
t886 = t62 * qJD(5) + t854;
t885 = -t62 * qJD(4) + t854;
t819 = t453 / 0.2e1;
t285 = t423 * t811 + t501 * t618 + t819;
t884 = t285 * t650;
t497 = t502 ^ 2;
t844 = t385 ^ 2;
t358 = t497 + t844;
t602 = t650 * t502;
t682 = qJD(2) * t423;
t880 = qJD(1) * t358 + t385 * t682 + t602;
t661 = t424 * qJD(2);
t879 = qJD(1) * t523 + t661;
t411 = t424 * qJD(5);
t855 = t549 * qJD(1);
t878 = -t424 * qJD(4) - t411 - t855;
t405 = t423 * qJD(5);
t524 = t819 + (t619 + t823) * t502;
t856 = t524 * qJD(1);
t877 = t423 * qJD(4) + t405 - t856;
t803 = t500 * pkin(4);
t472 = qJ(6) + t803;
t741 = t472 * t423;
t647 = t808 * pkin(4);
t481 = -t647 - pkin(5);
t743 = t424 * t481;
t876 = qJD(4) * (t741 - t743) - t660;
t874 = t650 * t606;
t580 = t382 * t424 + t384 * t423;
t873 = -qJD(3) * t580 - t287 * qJD(6);
t600 = t647 / 0.2e1;
t815 = t481 / 0.2e1;
t842 = pkin(5) / 0.2e1;
t534 = t600 + t815 + t842;
t871 = t424 * t534;
t868 = t524 * t650;
t744 = t385 * t424;
t308 = t744 / 0.2e1;
t178 = t383 * t823 + t308;
t539 = t222 / 0.2e1 + t502 * t600;
t637 = t808 * t267;
t65 = -t637 / 0.2e1 + t539;
t639 = t65 * qJD(1) + qJD(4) * t647;
t862 = qJD(3) * t523;
t858 = t521 * qJD(3);
t857 = t522 * qJD(6);
t853 = t385 * t830 + t895;
t714 = t146 * t823 + t149 * t820;
t648 = t808 / 0.2e1;
t813 = t500 / 0.2e1;
t851 = (t423 * t813 + t424 * t648) * pkin(4) - t804 / 0.2e1 + t743 / 0.2e1 - t741 / 0.2e1;
t531 = t636 / 0.2e1 + t732 / 0.2e1;
t825 = t385 / 0.2e1;
t280 = t504 * t531 + t825;
t359 = t382 * t685;
t850 = -qJD(2) * t280 - t359 + t884;
t281 = (t821 + t531) * t504;
t849 = -qJD(2) * t281 - t359 + t868;
t496 = t501 ^ 2;
t498 = t503 ^ 2;
t462 = t496 - t498;
t654 = t504 * qJD(1);
t632 = t503 * t654;
t528 = qJD(2) * t462 + 0.2e1 * t501 * t632;
t653 = t504 * qJD(3);
t846 = qJD(2) * (t727 - t870) - t653;
t845 = t650 * t522;
t162 = t637 - t735;
t816 = t472 / 0.2e1;
t552 = t382 * t816 + t384 * t815;
t836 = t149 / 0.2e1;
t12 = t423 * (t838 - t161 / 0.2e1) - t424 * (t162 / 0.2e1 + t836) + t552;
t420 = t423 ^ 2;
t840 = -qJ(6) / 0.2e1;
t835 = -t185 / 0.2e1;
t834 = -t290 / 0.2e1;
t831 = t522 / 0.2e1;
t827 = -t383 / 0.2e1;
t824 = t414 / 0.2e1;
t817 = -t472 / 0.2e1;
t814 = -t500 / 0.2e1;
t810 = t503 / 0.2e1;
t807 = pkin(4) * t503;
t611 = t889 + t888;
t612 = t830 + t831;
t73 = t423 * t612 + t424 * t611;
t801 = t73 * qJD(4);
t91 = t308 - t744 / 0.2e1;
t800 = t650 * t91;
t799 = pkin(4) * qJD(5);
t374 = t383 * qJD(6);
t717 = t91 * qJD(3);
t797 = t374 + t717;
t247 = -pkin(5) * t385 - qJ(6) * t383;
t649 = pkin(4) * t728;
t213 = t247 - t649;
t766 = t185 * t385;
t771 = t161 * t502;
t40 = -t213 * t383 - t766 - t771;
t794 = qJD(1) * t40;
t767 = t185 * t383;
t770 = t162 * t502;
t41 = t213 * t385 - t767 + t770;
t793 = qJD(1) * t41;
t773 = t154 * t502;
t46 = t247 * t385 - t767 - t773;
t792 = qJD(1) * t46;
t772 = t155 * t502;
t47 = -t247 * t383 - t766 - t772;
t791 = qJD(1) * t47;
t506 = t472 * t811 + t726 / 0.2e1 - t508;
t52 = -t506 + t590;
t790 = qJD(1) * t52;
t789 = qJD(1) * t62;
t74 = t146 * t502 + t766;
t788 = qJD(1) * t74;
t538 = t568 * t385;
t79 = t383 * t649 - t538 - t771;
t787 = qJD(1) * t79;
t292 = t568 * t383;
t80 = -t385 * t649 - t292 + t770;
t786 = qJD(1) * t80;
t785 = qJD(1) * t91;
t92 = -t292 - t773;
t784 = qJD(1) * t92;
t93 = -t538 - t772;
t783 = qJD(1) * t93;
t782 = qJD(4) * t65;
t781 = qJD(5) * t65;
t704 = t246 + t223;
t719 = t504 * qJ(6);
t151 = t704 + t719;
t551 = t638 - t734;
t152 = -t551 - t802;
t395 = (-t807 - t841) * t502;
t184 = pkin(5) * t382 + qJ(6) * t384 + t395;
t11 = t146 * t151 + t149 * t152 + t184 * t185;
t780 = t11 * qJD(1);
t14 = -t146 * t154 + t149 * t155 + t185 * t247;
t779 = t14 * qJD(1);
t775 = t151 * t424;
t774 = t152 * t423;
t17 = t146 * t162 + t149 * t161 + t185 * t213;
t769 = t17 * qJD(1);
t48 = t146 * t382 + t149 * t384;
t18 = t151 * t383 - t152 * t385 - t48;
t768 = t18 * qJD(1);
t19 = (t146 - t155) * t385 + (t149 - t154) * t383;
t764 = t19 * qJD(1);
t20 = (t146 - t161) * t385 + (t149 + t162) * t383;
t763 = t20 * qJD(1);
t761 = t290 * t423;
t760 = t290 * t424;
t31 = t146 * t504 + t151 * t502 + t184 * t385 + t185 * t384;
t759 = t31 * qJD(1);
t32 = -t149 * t504 - t152 * t502 - t184 * t383 + t185 * t382;
t758 = t32 * qJD(1);
t33 = -t154 * t504 + t382 * t568 - t395 * t383 + t502 * t551;
t757 = t33 * qJD(1);
t754 = t606 * t504;
t750 = t522 * t504;
t34 = t155 * t504 + t384 * t568 + t395 * t385 + t502 * t704;
t748 = t34 * qJD(1);
t747 = t382 * t522;
t746 = t384 * t606;
t742 = t472 * t385;
t738 = t48 * qJD(1);
t737 = t481 * t383;
t731 = t501 * t417;
t724 = t503 * t423;
t723 = t503 * t424;
t139 = -t383 * t424 - t423 * t385;
t713 = t650 * t139;
t712 = t650 * t178;
t488 = t502 * qJD(6);
t667 = t285 * qJD(3);
t701 = -t667 + t488;
t665 = t524 * qJD(3);
t697 = t488 - t665;
t499 = t504 ^ 2;
t463 = t499 - t497;
t696 = qJ(6) * qJD(5);
t164 = t382 * t383 - t384 * t385;
t695 = qJD(1) * t164;
t327 = t501 * t535 - t722;
t198 = -t327 * t502 + t448 * t721;
t694 = qJD(1) * t198;
t199 = -t328 * t502 - t448 * t728;
t693 = qJD(1) * t199;
t232 = -t382 * t502 + t383 * t504;
t692 = qJD(1) * t232;
t233 = -t384 * t502 - t385 * t504;
t691 = qJD(1) * t233;
t688 = qJD(1) * t385;
t426 = t463 * t501;
t687 = qJD(1) * t426;
t428 = t463 * t503;
t686 = qJD(1) * t428;
t684 = qJD(1) * t503;
t683 = qJD(2) * qJ(3);
t681 = qJD(3) * t281;
t680 = qJD(3) * t423;
t679 = qJD(3) * t501;
t678 = qJD(3) * t502;
t677 = qJD(3) * t503;
t676 = qJD(4) * t501;
t675 = qJD(4) * t502;
t674 = qJD(4) * t503;
t673 = qJD(4) * t505;
t672 = qJD(6) * t423;
t125 = (-t327 - t722) * t504 - t731 * t502;
t671 = t125 * qJD(1);
t126 = t700 * t502 - t448 * t729 + (t328 - t730) * t504;
t670 = t126 * qJD(1);
t165 = t382 * t385 - t383 * t384;
t669 = t165 * qJD(1);
t668 = t280 * qJD(3);
t588 = -pkin(2) * t504 - t727;
t435 = -pkin(1) + t588;
t344 = t435 * t504 + t446 * t502;
t663 = t344 * qJD(1);
t345 = -t435 * t502 + t446 * t504;
t662 = t345 * qJD(1);
t659 = t463 * qJD(1);
t658 = t497 * qJD(1);
t657 = t501 * qJD(2);
t656 = t502 * qJD(2);
t655 = t503 * qJD(2);
t489 = t504 * qJD(2);
t652 = t504 * qJD(4);
t487 = qJD(5) * t647;
t651 = t487 + qJD(6);
t646 = pkin(1) * t685;
t645 = pkin(1) * t654;
t644 = pkin(7) * t656;
t643 = t500 * t799;
t642 = -t807 / 0.2e1;
t641 = -t806 / 0.2e1;
t634 = t383 * t688;
t631 = t423 * t661;
t630 = t501 * t655;
t629 = t501 * t489;
t628 = t382 * t678;
t627 = t384 * t678;
t626 = t502 * t652;
t625 = t435 * t446 * qJD(1);
t624 = t435 * t685;
t468 = t502 * t489;
t467 = t502 * t654;
t470 = t503 * t489;
t623 = t501 * t674;
t603 = t650 * t424;
t601 = qJD(4) + t685;
t599 = -t714 - t853;
t595 = t501 * t470;
t593 = t706 + t802;
t592 = t817 + t803 / 0.2e1;
t591 = (t816 + t839) * t504;
t335 = -pkin(5) * t423 + qJ(6) * t424;
t557 = t247 * t834 + t335 * t835;
t564 = t151 * t839 + t152 * t843;
t3 = t522 * t614 + t606 * t616 + t557 + t564;
t55 = t290 * t335;
t586 = -t3 * qJD(1) + t55 * qJD(2);
t5 = -t383 * t611 + t385 * t612 - t12;
t585 = t5 * qJD(1);
t455 = qJD(5) + t601;
t581 = -t12 * qJD(1) + t73 * qJD(2);
t560 = t840 - t592;
t112 = t423 * t560 - t871;
t84 = t383 * t534 + t385 * t560;
t578 = qJD(1) * t84 + qJD(2) * t112;
t296 = t335 + t807;
t137 = t296 * t423 + t760;
t555 = t213 * t823 + t296 * t826;
t21 = t591 + t555 + t904;
t577 = qJD(1) * t21 - qJD(2) * t137;
t138 = t296 * t424 - t761;
t517 = t213 * t820 + t296 * t827 + t867;
t23 = (t815 + t843) * t504 + t517 - t706;
t576 = -qJD(1) * t23 - qJD(2) * t138;
t147 = t335 * t423 + t760;
t554 = t247 * t822 + t335 * t825;
t27 = -t554 + t719 + t904;
t575 = qJD(1) * t27 - qJD(2) * t147;
t148 = t335 * t424 - t761;
t533 = t301 - t556;
t553 = t247 * t820 + t335 * t827;
t29 = t533 - t553 + t593;
t574 = qJD(1) * t29 - qJD(2) * t148;
t510 = -t492 / 0.2e1 - t493 / 0.2e1 - t747 / 0.2e1 - t746 / 0.2e1 - t745 / 0.2e1 + t503 * t641;
t559 = t775 / 0.2e1 + t774 / 0.2e1;
t25 = t805 / 0.2e1 + t510 + t559;
t573 = -qJD(1) * t25 + qJD(2) * t290;
t270 = pkin(4) * t723 - t423 * t473;
t43 = t448 * t822 + (t383 * t810 + (t648 + t501 * t820 + t724 / 0.2e1) * t504) * pkin(4) + t894;
t572 = qJD(1) * t43 - qJD(2) * t270;
t271 = -pkin(4) * t724 - t424 * t473;
t42 = t448 * t820 + (t385 * t810 + (t814 + t501 * t823 + t723 / 0.2e1) * t504) * pkin(4) + t903;
t571 = qJD(1) * t42 - qJD(2) * t271;
t64 = -t735 + t637 / 0.2e1 + t539;
t570 = -qJD(4) * t64 + qJD(5) * t154;
t569 = -qJD(4) * t162 - qJD(5) * t64;
t183 = t383 ^ 2 - t844;
t77 = qJD(1) * t183 + qJD(2) * t139;
t248 = t424 ^ 2 - t420;
t81 = qJD(1) * t139 + qJD(2) * t248;
t195 = qJD(1) * t281 + t682;
t567 = -t658 - t675;
t563 = t161 * t842 + t162 * t840;
t562 = pkin(5) * t831 + qJ(6) * t888;
t558 = t151 * t816 + t152 * t815;
t550 = t505 * t812 - t720 / 0.2e1;
t35 = t589 + t867;
t548 = qJD(1) * t35 - t290 * t682;
t66 = t537 / 0.2e1 + t894;
t547 = qJD(1) * t66 + t473 * t682;
t67 = t536 / 0.2e1 + t903;
t546 = qJD(1) * t67 + t473 * t661;
t545 = t601 * t728;
t288 = (t417 / 0.2e1 + t550) * t501;
t544 = -qJ(3) * t655 - t288 * qJD(1);
t526 = t550 * t503;
t289 = t393 / 0.2e1 + t526;
t543 = qJ(3) * t657 - t289 * qJD(1);
t174 = t809 - t178;
t542 = -qJD(1) * t174 + t631;
t116 = -qJD(2) * t178 + t634;
t142 = qJD(1) * t178 + t631;
t415 = (t498 / 0.2e1 - t496 / 0.2e1) * t504;
t540 = qJD(1) * t415 + t630;
t530 = t499 * t501 * t684 - qJD(2) * t415;
t427 = t462 * t499;
t529 = -qJD(1) * t427 + 0.2e1 * t595;
t509 = t146 * t888 + t161 * t889 + t162 * t830 + t213 * t834 + t296 * t835 + t522 * t837;
t1 = t509 + t558;
t54 = t290 * t296;
t527 = -t1 * qJD(1) + t54 * qJD(2) + t73 * qJD(3);
t519 = qJD(2) * t588 + t653;
t513 = (t146 * t648 + t149 * t813) * pkin(4) + t154 * t817 + t155 * t815;
t10 = t513 + t563;
t114 = t423 * t592 + t824 + t871;
t364 = (t472 * t808 + t481 * t500) * pkin(4);
t512 = (t522 * t648 + t606 * t813) * pkin(4) + t606 * t817 + t522 * t815;
t51 = t512 + t562;
t518 = t10 * qJD(1) + t51 * qJD(2) + t114 * qJD(3) + t364 * qJD(4);
t516 = t154 * t821 + t155 * t822 + t561;
t515 = t161 * t822 + t162 * t820 + t552;
t495 = qJ(6) * qJD(6);
t486 = pkin(7) * t489;
t477 = -t654 / 0.2e1;
t476 = t654 / 0.2e1;
t475 = t489 / 0.2e1;
t469 = t502 * t684;
t466 = t501 * t685;
t461 = t472 * qJD(6);
t422 = -t469 - t674;
t421 = -t466 - t676;
t419 = t455 * qJ(6);
t418 = t467 + t652 / 0.2e1;
t408 = t424 * qJD(3);
t394 = t415 * qJD(4);
t375 = t467 + (qJD(4) / 0.2e1 + qJD(5) / 0.2e1) * t504;
t367 = -t805 / 0.2e1;
t318 = t385 * t672;
t212 = -t429 - t393 / 0.2e1 + t526;
t211 = t430 - t731 / 0.2e1 + t550 * t501;
t210 = qJD(2) * t420 + t423 * t688;
t182 = qJD(2) * t524 - t385 * t685;
t181 = qJD(2) * t549 - t383 * t685;
t175 = t809 + t178;
t170 = -t423 * t650 + t856;
t124 = qJD(2) * t285 + t385 * t455;
t123 = -qJD(2) * t287 + t383 * t455;
t113 = -t414 / 0.2e1 + t851;
t111 = t824 - t851;
t83 = t742 / 0.2e1 + t737 / 0.2e1 + t745 / 0.2e1 + t367 + (t383 * t648 + t385 * t814) * pkin(4);
t53 = t506 + t590;
t50 = t512 - t562;
t49 = qJD(4) * t803 - t789;
t45 = t385 * t642 + t500 * t641 + t649 * t822 + t68;
t44 = pkin(4) * t424 * t617 + t383 * t642 + t504 * t600 + t69;
t39 = -t650 * t803 + t789;
t36 = t533 + t589;
t30 = t553 + t593 + t867;
t28 = t554 + t719 + t902;
t26 = t367 - t510 + t559;
t24 = t481 * t809 + t517 - t589;
t22 = t591 - t555 + t902;
t16 = t516 + t714;
t13 = t515 + t714;
t9 = t513 - t563;
t8 = -t516 + t599 + t853;
t6 = t522 * t826 - t515 + t599 + t895;
t4 = t146 * t889 + t154 * t830 + t155 * t888 + t522 * t836 - t557 + t564;
t2 = -t509 + t558;
t7 = [0, 0, 0, t468, t463 * qJD(2), 0, 0, 0, -pkin(1) * t656, -pkin(1) * t489, 0, qJD(2) * t345 - t502 * t653, -qJD(2) * t344 + qJD(3) * t497 (qJD(2) * t446 - t678) * t435, -t468 * t496 + t499 * t623, -qJD(4) * t427 - 0.2e1 * t502 * t595, -qJD(2) * t426 - t503 * t626, -qJD(2) * t428 + t501 * t626, t468, qJD(2) * t125 + qJD(4) * t199 + t497 * t679, -qJD(2) * t126 - qJD(4) * t198 + t497 * t677 (qJD(2) * t384 - t383 * t650) * t385, qJD(2) * t165 + t183 * t650, qJD(2) * t233 + t383 * t602, qJD(2) * t232 + t385 * t602, t468, qJD(2) * t33 + qJD(4) * t79 + qJD(5) * t93 - t627, -qJD(2) * t34 - qJD(4) * t80 - qJD(5) * t92 - t628, qJD(2) * t32 + qJD(4) * t40 + qJD(5) * t47 - t374 * t385 - t627, qJD(2) * t18 + qJD(3) * t164 + qJD(4) * t20 + qJD(5) * t19 + t383 * t488, qJD(2) * t31 + qJD(4) * t41 + qJD(5) * t46 + qJD(6) * t358 + t628, qJD(2) * t11 + qJD(3) * t48 + qJD(4) * t17 + qJD(5) * t14 + qJD(6) * t74; 0, 0, 0, t467, t659, t489, -t656, 0, -t486 - t646, t644 - t645, t519, t486 + t662, -t644 - t663, pkin(7) * t519 + t625, -t394 + (-t496 * t654 + t630) * t502, -t502 * t528 + 0.2e1 * t504 * t623, t470 - t687, -t629 - t686, t418, t211 * qJD(4) - t447 * t657 - t503 * t846 + t671, t212 * qJD(4) - t447 * t655 + t501 * t846 - t670 (t682 + t688) * t384 + t712, t669 + (t382 * t423 + t384 * t424) * qJD(2) + t713, -t423 * t489 + t691 - t883, -t424 * t489 + t692 + t884, t375, t757 + (t382 * t473 + t395 * t424 - t754) * qJD(2) + t858 + t44 * qJD(4) + t69 * qJD(5), -t748 + (-t384 * t473 - t395 * t423 - t750) * qJD(2) - t668 + t45 * qJD(4) + t68 * qJD(5), t758 + (t184 * t424 + t290 * t382 - t754) * qJD(2) + t858 + t24 * qJD(4) + t30 * qJD(5) + t175 * qJD(6), t768 + (-t746 - t747 - t774 - t775) * qJD(2) + t6 * qJD(4) + t8 * qJD(5) + t873, t759 + (t184 * t423 + t290 * t384 + t750) * qJD(2) + t668 + t22 * qJD(4) + t28 * qJD(5) + t318, t780 + (t151 * t522 + t152 * t606 + t184 * t290) * qJD(2) + t26 * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t36 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, -t467, t658, t486 - t624, 0, 0, 0, 0, 0, t501 * t658 + t470, t503 * t658 - t629, 0, 0, 0, 0, 0, t900, t850, t900, -qJD(2) * t580 + t695 + t800, -t850, t26 * qJD(2) + t13 * qJD(4) + t16 * qJD(5) + t738 - t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, t529, -t601 * t721, t545, t475, qJD(2) * t211 - qJD(4) * t328 + t693, qJD(2) * t212 + qJD(4) * t327 - t694, -t116, t77, t123, t124, t475, qJD(2) * t44 + t787 + t892, qJD(2) * t45 + t569 + t667 - t786, qJD(2) * t24 + t794 + t892, t763 + t6 * qJD(2) + (t737 + t742) * qJD(4) + t83 * qJD(5) + t797, qJD(2) * t22 - t569 + t701 + t793, t769 + t2 * qJD(2) + t13 * qJD(3) + (t161 * t481 + t162 * t472) * qJD(4) + t9 * qJD(5) + t53 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, t77, t123, t124, t475, qJD(2) * t69 + t783 + t893, qJD(2) * t68 + t570 + t667 - t784, qJD(2) * t30 + t791 + t893, t8 * qJD(2) + t83 * qJD(4) + qJD(5) * t587 + t764 + t797, qJD(2) * t28 - t570 + t701 + t792, t779 + t4 * qJD(2) + t16 * qJD(3) + t9 * qJD(4) + (-pkin(5) * t155 - qJ(6) * t154) * qJD(5) + t146 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t175 - t634, t123, t880, qJD(2) * t36 + qJD(4) * t53 + qJD(5) * t146 + t788 + t875; 0, 0, 0, -t467, -t659, 0, 0, 0, t646, t645, 0, -t662, t663, -t625, t467 * t496 - t394, 0.2e1 * t503 * t545, -t501 * t675 + t687, -t502 * t674 + t686, -t418, qJD(4) * t288 - t671, qJD(4) * t289 + t670, -t384 * t688 + t712, -t669 + t713, -t691 - t882, -t692 - t868, -t375, -qJD(4) * t43 - qJD(5) * t66 - t757 + t862, -qJD(4) * t42 - qJD(5) * t67 - t681 + t748, qJD(4) * t23 - qJD(5) * t29 - qJD(6) * t174 - t758 + t862, -qJD(4) * t5 - t768 + t891, -qJD(4) * t21 - qJD(5) * t27 + t318 + t681 - t759, -qJD(3) * t25 - qJD(4) * t1 - qJD(5) * t3 - qJD(6) * t35 - t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t623, t462 * qJD(4), 0, 0, 0, qJ(3) * t674 + t679, -qJ(3) * t676 + t677, t423 * t603, t650 * t248, 0, 0, 0, qJD(4) * t270 - t405 * t473 + t408, qJD(4) * t271 - t411 * t473 - t680, qJD(4) * t138 + qJD(5) * t148 + t423 * t660 + t408, 0, qJD(4) * t137 + qJD(5) * t147 + qJD(6) * t420 + t680, qJD(4) * t54 + qJD(5) * t55 + (qJD(3) + t672) * t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t683, 0, 0, 0, 0, 0, t657, t655, 0, 0, 0, 0, 0, t879, -t195, t879, 0, t195, t573 + t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t540, t528, t421, t422, t477, -t501 * t673 - t544, -t503 * t673 - t543, t142, t81, t878, t877, t477, -t572 - t845, t874 - t571, -t576 - t845, t111 * qJD(5) - t585 + t876, -t874 - t577 (-t472 * t606 + t481 * t522) * qJD(4) + t50 * qJD(5) + t857 + t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t81, t878, t877, t477, -t547 - t845, -t546 + t874, -t574 - t845, t111 * qJD(4) + t899, -t874 - t575, t50 * qJD(4) + (-pkin(5) * t522 - qJ(6) * t606) * qJD(5) + t857 + t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, t878, t210, -t548 + t845; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t467, -t658, t624, 0, 0, 0, 0, 0, t567 * t501, t567 * t503, 0, 0, 0, 0, 0, t901, -t849, t901, -t695 + t800, t849, qJD(2) * t25 - qJD(4) * t12 - t738 - t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t683, 0, 0, 0, 0, 0, -t657, -t655, 0, 0, 0, 0, 0, -t879, t195, -t879, 0, -t195, -t573 + t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t422, 0, 0, 0, 0, 0, t878, t877, t878, t785, t170, t113 * qJD(5) + t581 - t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t878, t877, t878, t785, t170, t113 * qJD(4) - t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t855 + t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530, -t529 (t632 + t657) * t502 (-t501 * t654 + t655) * t502, t475, -qJD(2) * t288 + t501 * t678 - t693, -qJD(2) * t289 + t502 * t677 + t694, t116, -t77, t181, t182, t475, qJD(2) * t43 - t787 + t886, qJD(2) * t42 + t665 - t781 + t786, -qJD(2) * t23 - t794 + t886, qJD(2) * t5 + qJD(5) * t84 - t717 - t763, qJD(2) * t21 + t697 + t781 - t793, qJD(2) * t1 + qJD(3) * t12 + qJD(5) * t10 - qJD(6) * t52 - t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t540, -t528, t466, t469, t476, t544, t543, -t142, -t81, t855, t856, t476, t572, t571, t576, qJD(5) * t112 + t585, t577, qJD(5) * t51 - t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, t469, 0, 0, 0, 0, 0, t855, t856, t855, -t785, -t856, qJD(5) * t114 - t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t643, -t487, -t643, 0, t651, qJD(5) * t364 + t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, -t487 - t639, t39, t578, t639 + t651 (-pkin(5) * t500 + qJ(6) * t808) * t799 + t461 + t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t472 * t650 - t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, -t77, t181, t182, t475, qJD(2) * t66 - t783 + t885, qJD(2) * t67 + t665 + t782 + t784, qJD(2) * t29 - t791 + t885, -qJD(2) * t15 - qJD(4) * t84 - t717 - t764, qJD(2) * t27 + t697 - t782 - t792, qJ(6) * t488 + qJD(2) * t3 + qJD(3) * t15 - qJD(4) * t10 - t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t81, t855, t856, t476, t547, t546, t574, -qJD(4) * t112 - t896, t575, -qJD(4) * t51 - t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t855, t856, t855, -t785, -t856, -qJD(4) * t114 + t896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t639, t49, -t578, qJD(6) - t639, t495 - t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t174 + t634, t181, -t880, qJD(2) * t35 + qJD(4) * t52 - t502 * t696 - t788 - t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t542, t855, -t210, t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -qJD(4) * t472 - t696 + t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
