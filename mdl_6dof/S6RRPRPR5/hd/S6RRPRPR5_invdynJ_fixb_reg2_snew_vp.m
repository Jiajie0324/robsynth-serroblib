% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 14:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRPR5_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 14:02:53
% EndTime: 2019-05-06 14:03:35
% DurationCPUTime: 21.87s
% Computational Cost: add. (173896->766), mult. (462382->1160), div. (0->0), fcn. (372781->14), ass. (0->458)
t391 = sin(pkin(11));
t394 = cos(pkin(11));
t392 = sin(pkin(6));
t401 = cos(qJ(2));
t464 = qJD(1) * t401;
t441 = t392 * t464;
t398 = sin(qJ(2));
t465 = qJD(1) * t398;
t442 = t392 * t465;
t363 = t391 * t441 + t394 * t442;
t395 = cos(pkin(6));
t466 = qJD(1) * t395;
t385 = qJD(2) + t466;
t397 = sin(qJ(4));
t400 = cos(qJ(4));
t344 = t363 * t400 + t385 * t397;
t361 = t391 * t442 - t394 * t441;
t357 = qJD(4) + t361;
t390 = sin(pkin(12));
t393 = cos(pkin(12));
t319 = t344 * t390 - t393 * t357;
t342 = t363 * t397 - t400 * t385;
t293 = t342 * t319;
t452 = qJDD(1) * t401;
t455 = qJD(1) * qJD(2);
t425 = t398 * t455 - t452;
t418 = t425 * t392;
t453 = qJDD(1) * t398;
t426 = t401 * t455 + t453;
t419 = t426 * t392;
t335 = -t391 * t418 + t394 * t419;
t384 = t395 * qJDD(1) + qJDD(2);
t427 = -t335 * t400 - t384 * t397;
t300 = -qJD(4) * t342 - t427;
t530 = (t391 * t426 + t394 * t425) * t392;
t406 = qJDD(4) + t530;
t532 = t393 * t300 + t390 * t406;
t228 = -t532 - t293;
t459 = -qJD(2) - t385;
t320 = t344 * t393 + t357 * t390;
t276 = t320 * t319;
t434 = t335 * t397 - t400 * t384;
t299 = qJD(4) * t344 + t434;
t527 = -t276 + t299;
t540 = t390 * t527;
t334 = t363 * t361;
t524 = -t334 + t384;
t539 = t391 * t524;
t538 = t393 * t527;
t537 = t394 * t524;
t396 = sin(qJ(6));
t399 = cos(qJ(6));
t271 = t399 * t319 + t320 * t396;
t273 = -t319 * t396 + t320 * t399;
t218 = t273 * t271;
t298 = qJDD(6) + t299;
t529 = -t218 + t298;
t536 = t396 * t529;
t306 = t344 * t342;
t525 = -t306 + t406;
t535 = t397 * t525;
t534 = t399 * t529;
t533 = t400 * t525;
t478 = t385 * t363;
t307 = t530 + t478;
t435 = t300 * t390 - t393 * t406;
t180 = -t271 * qJD(6) - t396 * t435 + t399 * t532;
t338 = qJD(6) + t342;
t251 = t338 * t271;
t528 = -t251 + t180;
t526 = -t293 + t532;
t323 = t357 * t342;
t261 = t300 - t323;
t350 = t385 * t361;
t523 = -t350 + t335;
t388 = t392 ^ 2;
t514 = qJD(1) ^ 2;
t461 = t388 * t514;
t438 = t401 * t461;
t380 = t398 * t438;
t367 = t384 + t380;
t511 = sin(qJ(1));
t512 = cos(qJ(1));
t424 = g(1) * t512 + g(2) * t511;
t454 = qJDD(1) * t392;
t366 = -pkin(1) * t514 + pkin(8) * t454 - t424;
t475 = t392 * t398;
t386 = g(3) * t475;
t423 = g(1) * t511 - g(2) * t512;
t460 = t392 * t514;
t413 = qJDD(1) * pkin(1) + pkin(8) * t460 + t423;
t412 = t395 * t413;
t431 = qJD(1) * (-qJD(2) + t385);
t516 = t385 ^ 2;
t289 = -pkin(2) * t516 - t386 + (qJ(3) * t392 * t431 + t412) * t398 + (-pkin(2) * t438 + qJ(3) * t454 + t366) * t401;
t433 = -t398 * t366 + t401 * t412;
t403 = t367 * pkin(2) + (-t401 * g(3) + (t401 * t431 - t453) * qJ(3)) * t392 + t433;
t231 = -0.2e1 * qJD(3) * t361 + t394 * t289 + t391 * t403;
t474 = t392 * t401;
t324 = g(3) * t474 - t433;
t325 = t401 * t366 + t398 * t412 - t386;
t522 = t398 * t324 + t401 * t325;
t515 = t401 ^ 2;
t440 = t515 * t461;
t521 = qJ(3) * t440 - qJDD(3);
t437 = t396 * t532 + t399 * t435;
t153 = (qJD(6) - t338) * t273 + t437;
t258 = (qJD(4) - t357) * t344 + t434;
t520 = (t466 + t459) * t388;
t269 = t271 ^ 2;
t270 = t273 ^ 2;
t519 = t319 ^ 2;
t317 = t320 ^ 2;
t336 = t338 ^ 2;
t518 = t342 ^ 2;
t341 = t344 ^ 2;
t517 = t357 ^ 2;
t359 = t361 ^ 2;
t360 = t363 ^ 2;
t389 = t398 ^ 2;
t513 = 0.2e1 * qJD(3);
t436 = t289 * t391 - t394 * t403;
t230 = t363 * t513 + t436;
t177 = -t230 * t394 + t231 * t391;
t510 = pkin(2) * t177;
t312 = t350 + t335;
t405 = -t530 + t478;
t264 = -t312 * t394 + t391 * t405;
t509 = pkin(2) * t264;
t508 = pkin(3) * t391;
t507 = pkin(4) * t397;
t506 = pkin(8) * t392;
t505 = t395 * g(3);
t331 = pkin(3) * t361 - pkin(9) * t363;
t209 = -pkin(3) * t516 + pkin(9) * t384 - t331 * t361 + t231;
t351 = t392 * t413 + t505;
t402 = (pkin(2) * t385 - qJ(3) * t442) * t442 + pkin(2) * t418 - t351 - t523 * pkin(9) + t307 * pkin(3) - t521;
t166 = t400 * t209 + t397 * t402;
t303 = pkin(4) * t342 - qJ(5) * t344;
t132 = -pkin(4) * t517 + qJ(5) * t406 - t342 * t303 + t166;
t208 = -t384 * pkin(3) - t516 * pkin(9) + (t513 + t331) * t363 + t436;
t145 = -t261 * qJ(5) + (t344 * t357 + t299) * pkin(4) + t208;
t94 = 0.2e1 * qJD(5) * t320 + t132 * t390 - t393 * t145;
t75 = t527 * pkin(5) + pkin(10) * t228 - t94;
t288 = pkin(5) * t342 - pkin(10) * t320;
t95 = -0.2e1 * qJD(5) * t319 + t393 * t132 + t390 * t145;
t81 = -pkin(5) * t519 - pkin(10) * t435 - t342 * t288 + t95;
t44 = t396 * t81 - t399 * t75;
t45 = t396 * t75 + t399 * t81;
t27 = t396 * t45 - t399 * t44;
t504 = t27 * t390;
t503 = t27 * t393;
t165 = t209 * t397 - t400 * t402;
t131 = -t406 * pkin(4) - t517 * qJ(5) + t303 * t344 + qJDD(5) + t165;
t114 = pkin(5) * t435 - pkin(10) * t519 + t288 * t320 + t131;
t502 = t114 * t396;
t501 = t114 * t399;
t500 = t131 * t390;
t499 = t131 * t393;
t193 = t218 + t298;
t498 = t193 * t396;
t497 = t193 * t399;
t496 = t208 * t397;
t495 = t208 * t400;
t235 = t276 + t299;
t494 = t235 * t390;
t493 = t235 * t393;
t280 = t306 + t406;
t492 = t280 * t397;
t491 = t280 * t400;
t490 = t299 * t397;
t302 = t505 + ((t401 * pkin(2) + pkin(1)) * qJDD(1) + ((qJ(3) * t389 + pkin(8)) * t392 * qJD(1) + t459 * t398 * pkin(2)) * qJD(1) + t423) * t392 + t521;
t489 = t302 * t391;
t488 = t302 * t394;
t487 = t320 * t342;
t328 = t334 + t384;
t486 = t328 * t391;
t485 = t328 * t394;
t484 = t338 * t396;
t483 = t338 * t399;
t482 = t342 * t390;
t481 = t342 * t393;
t480 = t357 * t397;
t479 = t357 * t400;
t477 = t385 * t391;
t476 = t385 * t394;
t472 = t398 * t177;
t470 = t398 * t367;
t368 = -t380 + t384;
t468 = t401 * t368;
t457 = qJD(4) + t357;
t451 = t397 * t218;
t450 = t400 * t218;
t449 = t397 * t276;
t448 = t400 * t276;
t447 = t391 * t306;
t446 = t394 * t306;
t445 = t395 * t334;
t444 = -pkin(3) * t394 - pkin(2);
t443 = -pkin(4) * t400 - pkin(3);
t439 = t389 * t461;
t58 = t390 * t94 + t393 * t95;
t28 = t396 * t44 + t399 * t45;
t113 = t165 * t397 + t400 * t166;
t178 = t230 * t391 + t394 * t231;
t429 = -pkin(4) * t131 + qJ(5) * t58;
t57 = t390 * t95 - t393 * t94;
t112 = -t165 * t400 + t166 * t397;
t224 = t435 - t487;
t253 = -t518 - t519;
t185 = t253 * t393 - t540;
t223 = t435 + t487;
t422 = -pkin(4) * t223 + qJ(5) * t185 - t499;
t274 = -t317 - t518;
t196 = -t274 * t390 - t493;
t421 = -pkin(4) * t526 + qJ(5) * t196 + t500;
t176 = -t224 * t393 - t228 * t390;
t244 = -t317 - t519;
t420 = -pkin(4) * t244 + qJ(5) * t176 + t58;
t152 = (qJD(6) + t338) * t273 + t437;
t210 = -t336 - t269;
t138 = t210 * t399 - t536;
t67 = -pkin(5) * t152 + pkin(10) * t138 - t501;
t137 = t210 * t396 + t534;
t77 = -pkin(10) * t137 + t502;
t98 = -t137 * t390 + t138 * t393;
t417 = -pkin(4) * t152 + qJ(5) * t98 + t390 * t77 + t393 * t67;
t183 = -t269 - t270;
t156 = t251 + t180;
t106 = -t153 * t399 + t156 * t396;
t22 = -pkin(5) * t183 + pkin(10) * t106 + t28;
t104 = -t153 * t396 - t156 * t399;
t23 = -pkin(10) * t104 - t27;
t66 = -t104 * t390 + t106 * t393;
t416 = -pkin(4) * t183 + qJ(5) * t66 + t22 * t393 + t23 * t390;
t239 = -t270 - t336;
t158 = t239 * t399 - t498;
t159 = -t239 * t396 - t497;
t110 = -t158 * t390 + t159 * t393;
t68 = -pkin(5) * t528 + pkin(10) * t159 + t502;
t86 = -pkin(10) * t158 + t501;
t415 = -pkin(4) * t528 + qJ(5) * t110 + t390 * t86 + t393 * t68;
t18 = t28 * t393 - t504;
t24 = -pkin(5) * t114 + pkin(10) * t28;
t414 = -pkin(4) * t114 - pkin(10) * t504 + qJ(5) * t18 + t24 * t393;
t408 = t391 * t530;
t407 = t394 * t530;
t374 = t395 * t384;
t373 = t385 * t441;
t372 = t385 * t442;
t370 = (t389 - t515) * t461;
t369 = -t516 - t440;
t358 = -t516 - t439;
t349 = -t360 + t516;
t348 = t359 - t516;
t347 = -t372 - t418;
t346 = t372 - t418;
t345 = -t373 + t419;
t337 = -t360 - t516;
t333 = t360 - t359;
t326 = -t516 - t359;
t322 = -t341 + t517;
t321 = t518 - t517;
t318 = -t359 - t360;
t304 = t341 - t518;
t301 = -t341 - t517;
t297 = -t518 - t517;
t296 = -t337 * t391 - t485;
t295 = t337 * t394 - t486;
t294 = t400 * t299;
t291 = -t317 + t518;
t290 = -t518 + t519;
t287 = t518 + t341;
t283 = t326 * t394 - t539;
t282 = t326 * t391 + t537;
t278 = (-t342 * t400 + t344 * t397) * t357;
t277 = (-t342 * t397 - t344 * t400) * t357;
t275 = -t317 + t519;
t265 = t312 * t391 + t394 * t405;
t263 = t342 * t457 + t427;
t262 = t300 + t323;
t259 = -t344 * t457 - t434;
t257 = t300 * t400 - t344 * t480;
t256 = t300 * t397 + t344 * t479;
t255 = t342 * t479 + t490;
t254 = t342 * t480 - t294;
t250 = -t270 + t336;
t249 = t269 - t336;
t248 = t321 * t400 - t492;
t247 = -t322 * t397 + t533;
t246 = t321 * t397 + t491;
t245 = t322 * t400 + t535;
t243 = -t301 * t397 - t491;
t242 = t301 * t400 - t492;
t241 = (-t319 * t393 + t320 * t390) * t342;
t240 = (-t319 * t390 - t320 * t393) * t342;
t238 = t297 * t400 - t535;
t237 = t297 * t397 + t533;
t222 = -t320 * t482 + t393 * t532;
t221 = t320 * t481 + t390 * t532;
t220 = t319 * t481 + t390 * t435;
t219 = -t319 * t482 + t393 * t435;
t217 = t270 - t269;
t216 = t241 * t400 + t490;
t215 = t241 * t397 - t294;
t214 = -t258 * t400 + t262 * t397;
t213 = t259 * t400 - t261 * t397;
t212 = -t258 * t397 - t262 * t400;
t211 = t259 * t397 + t261 * t400;
t206 = t290 * t393 - t494;
t205 = -t291 * t390 + t538;
t204 = t290 * t390 + t493;
t203 = t291 * t393 + t540;
t202 = pkin(2) * t295 - t231;
t201 = pkin(2) * t282 - t230;
t200 = (-t271 * t399 + t273 * t396) * t338;
t199 = (-t271 * t396 - t273 * t399) * t338;
t198 = t243 * t394 - t263 * t391;
t197 = t243 * t391 + t263 * t394;
t195 = t274 * t393 - t494;
t191 = t238 * t394 - t259 * t391;
t190 = t238 * t391 + t259 * t394;
t189 = t222 * t400 + t449;
t188 = t220 * t400 - t449;
t187 = t222 * t397 - t448;
t186 = t220 * t397 + t448;
t184 = t253 * t390 + t538;
t182 = t214 * t394 - t287 * t391;
t181 = t214 * t391 + t287 * t394;
t179 = -qJD(6) * t273 - t437;
t175 = -t223 * t393 - t390 * t526;
t174 = -t224 * t390 + t228 * t393;
t173 = -t223 * t390 + t393 * t526;
t172 = -pkin(9) * t242 + t495;
t171 = -pkin(9) * t237 + t496;
t170 = t249 * t399 - t498;
t169 = -t250 * t396 + t534;
t168 = t249 * t396 + t497;
t167 = t250 * t399 + t536;
t163 = t206 * t400 - t224 * t397;
t162 = t205 * t400 - t228 * t397;
t161 = t206 * t397 + t224 * t400;
t160 = t205 * t397 + t228 * t400;
t151 = t180 * t399 - t273 * t484;
t150 = t180 * t396 + t273 * t483;
t149 = -t179 * t396 + t271 * t483;
t148 = t179 * t399 + t271 * t484;
t147 = t196 * t400 + t397 * t526;
t146 = t196 * t397 - t400 * t526;
t142 = t175 * t400 - t275 * t397;
t141 = t175 * t397 + t275 * t400;
t140 = t185 * t400 + t223 * t397;
t139 = t185 * t397 - t223 * t400;
t136 = t176 * t400 + t244 * t397;
t135 = t176 * t397 - t244 * t400;
t134 = -t199 * t390 + t200 * t393;
t133 = t199 * t393 + t200 * t390;
t129 = -pkin(3) * t242 + t166;
t128 = -pkin(3) * t237 + t165;
t127 = t134 * t400 + t298 * t397;
t126 = t134 * t397 - t298 * t400;
t125 = t147 * t394 + t195 * t391;
t124 = t147 * t391 - t195 * t394;
t123 = pkin(2) * t197 + pkin(3) * t263 + pkin(9) * t243 + t496;
t122 = t140 * t394 + t184 * t391;
t121 = t140 * t391 - t184 * t394;
t120 = pkin(2) * t190 + pkin(3) * t259 + pkin(9) * t238 - t495;
t119 = -qJ(5) * t195 + t499;
t118 = -t168 * t390 + t170 * t393;
t117 = -t167 * t390 + t169 * t393;
t116 = t168 * t393 + t170 * t390;
t115 = t167 * t393 + t169 * t390;
t111 = -qJ(5) * t184 + t500;
t109 = t158 * t393 + t159 * t390;
t108 = t136 * t394 + t174 * t391;
t107 = t136 * t391 - t174 * t394;
t105 = -t152 * t399 - t396 * t528;
t103 = -t152 * t396 + t399 * t528;
t102 = -t150 * t390 + t151 * t393;
t101 = -t148 * t390 + t149 * t393;
t100 = t150 * t393 + t151 * t390;
t99 = t148 * t393 + t149 * t390;
t97 = t137 * t393 + t138 * t390;
t96 = -pkin(9) * t212 - t112;
t92 = t113 * t394 + t208 * t391;
t91 = t113 * t391 - t208 * t394;
t90 = t102 * t400 + t451;
t89 = t101 * t400 - t451;
t88 = t102 * t397 - t450;
t87 = t101 * t397 + t450;
t85 = t118 * t400 - t153 * t397;
t84 = t117 * t400 + t156 * t397;
t83 = t118 * t397 + t153 * t400;
t82 = t117 * t397 - t156 * t400;
t80 = t110 * t400 + t397 * t528;
t79 = t110 * t397 - t400 * t528;
t78 = -pkin(4) * t195 + t95;
t76 = -pkin(4) * t184 + t94;
t73 = pkin(2) * t181 + pkin(3) * t287 + pkin(9) * t214 + t113;
t72 = -pkin(3) * t146 - t421;
t71 = t152 * t397 + t400 * t98;
t70 = -t152 * t400 + t397 * t98;
t69 = -pkin(3) * t139 - t422;
t65 = -t103 * t390 + t105 * t393;
t64 = t104 * t393 + t106 * t390;
t63 = t103 * t393 + t105 * t390;
t62 = t217 * t397 + t400 * t65;
t61 = -t217 * t400 + t397 * t65;
t60 = t183 * t397 + t400 * t66;
t59 = -t183 * t400 + t397 * t66;
t56 = pkin(2) * t91 - pkin(3) * t208 + pkin(9) * t113;
t55 = t109 * t391 + t394 * t80;
t54 = -t109 * t394 + t391 * t80;
t53 = -qJ(5) * t174 - t57;
t52 = t391 * t97 + t394 * t71;
t51 = t391 * t71 - t394 * t97;
t50 = -pkin(9) * t146 + t119 * t400 - t397 * t78;
t49 = t131 * t397 + t400 * t58;
t48 = -t131 * t400 + t397 * t58;
t47 = -pkin(9) * t139 + t111 * t400 - t397 * t76;
t46 = -pkin(4) * t64 - pkin(5) * t104;
t42 = -pkin(3) * t135 - t420;
t41 = -pkin(9) * t135 + t174 * t507 + t400 * t53;
t40 = pkin(2) * t124 - pkin(3) * t195 + pkin(9) * t147 + t119 * t397 + t400 * t78;
t39 = pkin(2) * t121 - pkin(3) * t184 + pkin(9) * t140 + t111 * t397 + t400 * t76;
t38 = -qJ(5) * t109 - t390 * t68 + t393 * t86;
t37 = t391 * t64 + t394 * t60;
t36 = t391 * t60 - t394 * t64;
t35 = -pkin(4) * t109 - pkin(5) * t158 + t45;
t34 = -qJ(5) * t97 - t390 * t67 + t393 * t77;
t33 = -pkin(4) * t97 - pkin(5) * t137 + t44;
t32 = pkin(2) * t107 + pkin(9) * t136 + t174 * t443 + t397 * t53;
t31 = t391 * t57 + t394 * t49;
t30 = t391 * t49 - t394 * t57;
t29 = -pkin(3) * t48 - t429;
t26 = -pkin(3) * t79 - t415;
t25 = -pkin(3) * t70 - t417;
t21 = -pkin(9) * t48 + (-qJ(5) * t400 + t507) * t57;
t20 = -pkin(9) * t79 - t35 * t397 + t38 * t400;
t19 = -pkin(9) * t70 - t33 * t397 + t34 * t400;
t17 = t28 * t390 + t503;
t16 = t114 * t397 + t18 * t400;
t15 = -t114 * t400 + t18 * t397;
t14 = pkin(2) * t54 - pkin(3) * t109 + pkin(9) * t80 + t35 * t400 + t38 * t397;
t13 = pkin(2) * t51 - pkin(3) * t97 + pkin(9) * t71 + t33 * t400 + t34 * t397;
t12 = pkin(2) * t30 + pkin(9) * t49 + (-qJ(5) * t397 + t443) * t57;
t11 = -qJ(5) * t64 - t22 * t390 + t23 * t393;
t10 = -pkin(4) * t17 - pkin(5) * t27;
t9 = -pkin(3) * t59 - t416;
t8 = -pkin(9) * t59 + t11 * t400 - t397 * t46;
t7 = -pkin(10) * t503 - qJ(5) * t17 - t24 * t390;
t6 = t16 * t394 + t17 * t391;
t5 = t16 * t391 - t17 * t394;
t4 = pkin(2) * t36 - pkin(3) * t64 + pkin(9) * t60 + t11 * t397 + t400 * t46;
t3 = -pkin(3) * t15 - t414;
t2 = -pkin(9) * t15 - t10 * t397 + t400 * t7;
t1 = pkin(2) * t5 - pkin(3) * t17 + pkin(9) * t16 + t10 * t400 + t397 * t7;
t43 = [0, 0, 0, 0, 0, qJDD(1), t423, t424, 0, 0, (t388 * t453 - t464 * t520) * t398, t395 * t370 + (t398 * t347 + (t373 + t419) * t401) * t392, t395 * t345 + (t470 + t401 * (t516 - t439)) * t392, (t388 * t452 + t465 * t520) * t401, t395 * t346 + (t398 * (-t516 + t440) + t468) * t392, t374, (-t324 + pkin(1) * (t367 * t401 + t369 * t398)) * t395 + (t401 * t351 + pkin(1) * t347 + pkin(8) * (t369 * t401 - t470)) * t392, -t351 * t475 - t395 * t325 + pkin(1) * ((t358 * t401 - t368 * t398) * t395 + (t459 * t464 - t453) * t388) + (-t398 * t358 - t468) * t506, pkin(1) * ((-t345 * t401 + t346 * t398) * t395 - (-t389 - t515) * t388 * t460) + (t398 * t345 + t346 * t401) * t506 + t522 * t392, pkin(1) * (t392 * t351 + (-t324 * t401 + t325 * t398) * t395) + t522 * t506, t445 + (t398 * (t335 * t394 - t363 * t477) + t401 * (t335 * t391 + t363 * t476)) * t392, t395 * t333 + (t398 * (-t307 * t394 - t391 * t523) + t401 * (-t307 * t391 + t394 * t523)) * t392, t395 * t312 + (t398 * (-t349 * t391 + t537) + t401 * (t349 * t394 + t539)) * t392, (t361 * t476 + t408) * t475 + (t361 * t477 - t407) * t474 - t445, t395 * t405 + (t398 * (t348 * t394 - t486) + t401 * (t348 * t391 + t485)) * t392, t374 + (t398 * (-t361 * t394 + t363 * t391) + t401 * (-t361 * t391 - t363 * t394)) * t392 * t385, (t201 + pkin(1) * (t282 * t401 + t283 * t398)) * t395 + (t398 * (-qJ(3) * t282 - t489) + t401 * (-pkin(2) * t307 + qJ(3) * t283 + t488) - pkin(1) * t307 + pkin(8) * (-t398 * t282 + t283 * t401)) * t392, (t202 + pkin(1) * (t295 * t401 + t296 * t398)) * t395 + (t398 * (-qJ(3) * t295 - t488) + t401 * (-pkin(2) * t523 + qJ(3) * t296 - t489) - pkin(1) * t523 + pkin(8) * (-t398 * t295 + t296 * t401)) * t392, (t509 + pkin(1) * (t264 * t401 + t265 * t398)) * t395 + (t398 * (-qJ(3) * t264 - t177) + t401 * (-pkin(2) * t318 + qJ(3) * t265 + t178) - pkin(1) * t318 + pkin(8) * (-t398 * t264 + t265 * t401)) * t392, (t510 + pkin(1) * (t177 * t401 + t178 * t398)) * t395 + (-qJ(3) * t472 + t401 * (pkin(2) * t302 + qJ(3) * t178) + pkin(1) * t302 + pkin(8) * (t178 * t401 - t472)) * t392, t395 * t256 + (t398 * (t257 * t394 + t447) + t401 * (t257 * t391 - t446)) * t392, t395 * t211 + (t398 * (t213 * t394 + t304 * t391) + t401 * (t213 * t391 - t304 * t394)) * t392, t395 * t245 + (t398 * (t247 * t394 + t262 * t391) + t401 * (t247 * t391 - t262 * t394)) * t392, t395 * t254 + (t398 * (t255 * t394 - t447) + t401 * (t255 * t391 + t446)) * t392, t395 * t246 + (t398 * (t248 * t394 - t258 * t391) + t401 * (t248 * t391 + t258 * t394)) * t392, (t391 * qJDD(4) + t394 * t278 + t408) * t475 + (-t394 * qJDD(4) + t391 * t278 - t407) * t474 + t395 * t277, (t120 + pkin(1) * (t190 * t401 + t191 * t398)) * t395 + (t398 * (-qJ(3) * t190 - t128 * t391 + t171 * t394) + t401 * (-pkin(2) * t237 + qJ(3) * t191 + t128 * t394 + t171 * t391) - pkin(1) * t237 + pkin(8) * (-t398 * t190 + t191 * t401)) * t392, (t123 + pkin(1) * (t197 * t401 + t198 * t398)) * t395 + (t398 * (-qJ(3) * t197 - t129 * t391 + t172 * t394) + t401 * (-pkin(2) * t242 + qJ(3) * t198 + t129 * t394 + t172 * t391) - pkin(1) * t242 + pkin(8) * (-t398 * t197 + t198 * t401)) * t392, (t73 + pkin(1) * (t181 * t401 + t182 * t398)) * t395 + (t398 * (-qJ(3) * t181 + t394 * t96) + t401 * (qJ(3) * t182 + t391 * t96) + pkin(8) * (-t398 * t181 + t182 * t401) + (t398 * t508 + t401 * t444 - pkin(1)) * t212) * t392, (t56 + pkin(1) * (t398 * t92 + t401 * t91)) * t395 + ((t398 * (-pkin(9) * t394 + t508) + t401 * (-pkin(9) * t391 + t444) - pkin(1)) * t112 + (pkin(8) + qJ(3)) * (-t398 * t91 + t401 * t92)) * t392, t395 * t187 + (t398 * (t189 * t394 + t221 * t391) + t401 * (t189 * t391 - t221 * t394)) * t392, t395 * t141 + (t398 * (t142 * t394 + t173 * t391) + t401 * (t142 * t391 - t173 * t394)) * t392, t395 * t160 + (t398 * (t162 * t394 + t203 * t391) + t401 * (t162 * t391 - t203 * t394)) * t392, t395 * t186 + (t398 * (t188 * t394 - t219 * t391) + t401 * (t188 * t391 + t219 * t394)) * t392, t395 * t161 + (t398 * (t163 * t394 + t204 * t391) + t401 * (t163 * t391 - t204 * t394)) * t392, t395 * t215 + (t398 * (t216 * t394 + t240 * t391) + t401 * (t216 * t391 - t240 * t394)) * t392, (t39 + pkin(1) * (t121 * t401 + t122 * t398)) * t395 + (t398 * (-qJ(3) * t121 - t391 * t69 + t394 * t47) + t401 * (-pkin(2) * t139 + qJ(3) * t122 + t391 * t47 + t394 * t69) - pkin(1) * t139 + pkin(8) * (-t398 * t121 + t122 * t401)) * t392, (t40 + pkin(1) * (t124 * t401 + t125 * t398)) * t395 + (t398 * (-qJ(3) * t124 - t391 * t72 + t394 * t50) + t401 * (-pkin(2) * t146 + qJ(3) * t125 + t391 * t50 + t394 * t72) - pkin(1) * t146 + pkin(8) * (-t398 * t124 + t125 * t401)) * t392, (t32 + pkin(1) * (t107 * t401 + t108 * t398)) * t395 + (t398 * (-qJ(3) * t107 - t391 * t42 + t394 * t41) + t401 * (-pkin(2) * t135 + qJ(3) * t108 + t391 * t41 + t394 * t42) - pkin(1) * t135 + pkin(8) * (-t398 * t107 + t108 * t401)) * t392, (t12 + pkin(1) * (t30 * t401 + t31 * t398)) * t395 + (t398 * (-qJ(3) * t30 + t21 * t394 - t29 * t391) + t401 * (-pkin(2) * t48 + qJ(3) * t31 + t21 * t391 + t29 * t394) - pkin(1) * t48 + pkin(8) * (-t398 * t30 + t31 * t401)) * t392, t395 * t88 + (t398 * (t100 * t391 + t394 * t90) + t401 * (-t100 * t394 + t391 * t90)) * t392, t395 * t61 + (t398 * (t391 * t63 + t394 * t62) + t401 * (t391 * t62 - t394 * t63)) * t392, t395 * t82 + (t398 * (t115 * t391 + t394 * t84) + t401 * (-t115 * t394 + t391 * t84)) * t392, t395 * t87 + (t398 * (t391 * t99 + t394 * t89) + t401 * (t391 * t89 - t394 * t99)) * t392, t395 * t83 + (t398 * (t116 * t391 + t394 * t85) + t401 * (-t116 * t394 + t391 * t85)) * t392, t395 * t126 + (t398 * (t127 * t394 + t133 * t391) + t401 * (t127 * t391 - t133 * t394)) * t392, (t13 + pkin(1) * (t398 * t52 + t401 * t51)) * t395 + (t398 * (-qJ(3) * t51 + t19 * t394 - t25 * t391) + t401 * (-pkin(2) * t70 + qJ(3) * t52 + t19 * t391 + t25 * t394) - pkin(1) * t70 + pkin(8) * (-t398 * t51 + t401 * t52)) * t392, (t14 + pkin(1) * (t398 * t55 + t401 * t54)) * t395 + (t398 * (-qJ(3) * t54 + t20 * t394 - t26 * t391) + t401 * (-pkin(2) * t79 + qJ(3) * t55 + t20 * t391 + t26 * t394) - pkin(1) * t79 + pkin(8) * (-t398 * t54 + t401 * t55)) * t392, (t4 + pkin(1) * (t36 * t401 + t37 * t398)) * t395 + (t398 * (-qJ(3) * t36 - t391 * t9 + t394 * t8) + t401 * (-pkin(2) * t59 + qJ(3) * t37 + t391 * t8 + t394 * t9) - pkin(1) * t59 + pkin(8) * (-t398 * t36 + t37 * t401)) * t392, (t1 + pkin(1) * (t398 * t6 + t401 * t5)) * t395 + (t398 * (-qJ(3) * t5 + t2 * t394 - t3 * t391) + t401 * (-pkin(2) * t15 + qJ(3) * t6 + t2 * t391 + t3 * t394) - pkin(1) * t15 + pkin(8) * (-t398 * t5 + t401 * t6)) * t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, t370, t345, t380, t346, t384, -t324, -t325, 0, 0, t334, t333, t312, -t334, t405, t384, t201, t202, t509, t510, t256, t211, t245, t254, t246, t277, t120, t123, t73, t56, t187, t141, t160, t186, t161, t215, t39, t40, t32, t12, t88, t61, t82, t87, t83, t126, t13, t14, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, t523, t318, -t302, 0, 0, 0, 0, 0, 0, t237, t242, t212, t112, 0, 0, 0, 0, 0, 0, t139, t146, t135, t48, 0, 0, 0, 0, 0, 0, t70, t79, t59, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, t304, t262, -t306, -t258, t406, -t165, -t166, 0, 0, t221, t173, t203, -t219, t204, t240, t422, t421, t420, t429, t100, t63, t115, t99, t116, t133, t417, t415, t416, t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t526, t244, t131, 0, 0, 0, 0, 0, 0, t152, t528, t183, t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, t217, t156, -t218, -t153, t298, -t44, -t45, 0, 0;];
tauJ_reg  = t43;
