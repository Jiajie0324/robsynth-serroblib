% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:35:21
% EndTime: 2019-03-09 10:36:03
% DurationCPUTime: 25.68s
% Computational Cost: add. (28511->891), mult. (80975->1181), div. (0->0), fcn. (66957->16), ass. (0->395)
t347 = sin(pkin(11));
t348 = sin(pkin(6));
t356 = cos(qJ(2));
t534 = cos(pkin(11));
t455 = t356 * t534;
t430 = t348 * t455;
t353 = sin(qJ(2));
t491 = qJD(1) * t348;
t475 = t353 * t491;
t260 = -qJD(1) * t430 + t347 * t475;
t254 = qJD(4) + t260;
t535 = cos(pkin(6));
t456 = t356 * t535;
t331 = pkin(1) * t456;
t325 = qJD(1) * t331;
t547 = pkin(8) + qJ(3);
t466 = t547 * t348;
t436 = t353 * t466;
t248 = -qJD(1) * t436 + t325;
t457 = t353 * t535;
t330 = pkin(1) * t457;
t510 = t348 * t356;
t249 = (t510 * t547 + t330) * qJD(1);
t453 = t534 * t249;
t171 = t248 * t347 + t453;
t352 = sin(qJ(4));
t355 = cos(qJ(4));
t587 = -qJD(5) * t352 - t171 + t254 * (pkin(4) * t352 - qJ(5) * t355);
t346 = sin(pkin(12));
t349 = cos(pkin(12));
t297 = -t356 * t347 - t353 * t534;
t371 = qJD(1) * t297;
t264 = t348 * t371;
t451 = t535 * qJD(1);
t404 = t451 + qJD(2);
t366 = t355 * t264 - t352 * t404;
t161 = t254 * t346 - t349 * t366;
t351 = sin(qJ(6));
t554 = cos(qJ(6));
t216 = t346 * t366;
t564 = t254 * t349 + t216;
t393 = t554 * t564;
t98 = -t161 * t351 + t393;
t586 = t98 ^ 2;
t308 = t355 * t404;
t229 = -t264 * t352 - t308;
t228 = qJD(6) + t229;
t585 = t228 * t98;
t99 = t161 * t554 + t351 * t564;
t584 = t99 ^ 2;
t552 = pkin(2) * t347;
t336 = pkin(9) + t552;
t488 = qJD(4) * t352;
t473 = t336 * t488;
t239 = t347 * t249;
t172 = t248 * t534 - t239;
t442 = pkin(2) * t475;
t187 = -pkin(3) * t264 + pkin(9) * t260 + t442;
t105 = t355 * t172 + t352 * t187;
t89 = -qJ(5) * t264 + t105;
t537 = t587 * t349 + (t473 + t89) * t346;
t583 = t587 * t346 - t349 * t89;
t513 = t346 * t355;
t189 = -t260 * t513 + t349 * t264;
t487 = qJD(4) * t355;
t418 = t346 * t487 - t189;
t506 = t349 * t355;
t190 = -t260 * t506 - t264 * t346;
t582 = -t349 * t487 + t190;
t521 = t260 * t352;
t581 = pkin(5) * t521 + pkin(10) * t190 + (pkin(5) * t352 - pkin(10) * t506) * qJD(4) + t537;
t507 = t349 * t352;
t580 = pkin(10) * t189 + (-pkin(10) * t513 - t336 * t507) * qJD(4) + t583;
t444 = t254 * t352;
t578 = t366 * t444;
t296 = t346 * t554 + t351 * t349;
t285 = t296 * qJD(6);
t501 = t285 * t352 + t351 * t418 + t554 * t582;
t467 = qJD(6) * t554;
t486 = qJD(6) * t351;
t561 = -t346 * t486 + t349 * t467;
t496 = -t189 * t554 - t190 * t351 + t296 * t487 + t352 * t561;
t406 = t564 * qJD(4);
t428 = qJD(2) * t455;
t485 = qJD(1) * qJD(2);
t464 = t353 * t485;
t434 = t348 * t464;
t204 = -t347 * t434 + (qJD(1) * t428 - qJDD(1) * t297) * t348;
t443 = t535 * qJDD(1);
t399 = t443 + qJDD(2);
t123 = -qJD(4) * t308 - t355 * t204 - t264 * t488 - t352 * t399;
t120 = t346 * t123;
t303 = qJDD(1) * t430;
t370 = qJD(2) * t297;
t484 = qJDD(1) * t353;
t462 = t347 * t484;
t203 = -t303 + (-qJD(1) * t370 + t462) * t348;
t202 = qJDD(4) + t203;
t450 = t202 * t349 + t120;
t577 = -t450 * t352 - t355 * t406;
t354 = sin(qJ(1));
t357 = cos(qJ(1));
t454 = t357 * t535;
t576 = -t354 * t353 + t356 * t454;
t575 = t488 + t521;
t81 = -t123 * t349 + t202 * t346;
t459 = t351 * t81 - t554 * t450;
t28 = qJD(6) * t99 + t459;
t574 = t28 * t355 + t444 * t98;
t295 = t347 * t353 - t455;
t414 = t535 * t534;
t495 = -t347 * t456 - t353 * t414;
t217 = t354 * t295 + t357 * t495;
t509 = t348 * t357;
t193 = -t217 * t355 - t352 * t509;
t362 = -t347 * t457 + t356 * t414;
t218 = t354 * t297 + t357 * t362;
t343 = pkin(12) + qJ(6);
t340 = sin(t343);
t341 = cos(t343);
t573 = t193 * t340 + t218 * t341;
t572 = t193 * t341 - t218 * t340;
t342 = t348 ^ 2;
t571 = 0.2e1 * t342;
t476 = t534 * pkin(2);
t338 = -t476 - pkin(3);
t413 = t355 * pkin(4) + t352 * qJ(5);
t292 = -t413 + t338;
t275 = t349 * t292;
t208 = -pkin(10) * t507 + t275 + (-t336 * t346 - pkin(5)) * t355;
t237 = t346 * t292 + t336 * t506;
t514 = t346 * t352;
t224 = -pkin(10) * t514 + t237;
t128 = t208 * t554 - t351 * t224;
t570 = qJD(6) * t128 + t581 * t351 + t580 * t554;
t129 = t351 * t208 + t224 * t554;
t544 = -qJD(6) * t129 - t580 * t351 + t581 * t554;
t569 = -t349 * t473 + t583;
t551 = pkin(5) * t346;
t460 = t336 + t551;
t104 = -t352 * t172 + t187 * t355;
t90 = pkin(4) * t264 - t104;
t536 = -pkin(5) * t189 + t460 * t487 - t90;
t339 = pkin(2) * t356 + pkin(1);
t416 = t339 * qJDD(1);
t481 = pkin(2) * t434 + qJDD(3);
t247 = -t348 * t416 + t481;
t109 = pkin(3) * t203 - pkin(9) * t204 + t247;
t368 = pkin(2) * t535 - t436;
t232 = qJD(2) * pkin(2) + qJD(1) * t368 + t325;
t154 = t347 * t232 + t453;
t144 = pkin(9) * t404 + t154;
t283 = -t339 * t491 + qJD(3);
t168 = pkin(3) * t260 + pkin(9) * t264 + t283;
t431 = pkin(1) * t443;
t324 = t356 * t431;
t420 = qJD(2) * t451;
t400 = pkin(1) * t420;
t374 = -t353 * t400 + t324;
t458 = qJD(2) * t547;
t489 = qJD(3) * t353;
t148 = t399 * pkin(2) + (-t547 * t484 + (-t356 * t458 - t489) * qJD(1)) * t348 + t374;
t378 = qJD(3) * t356 - t353 * t458;
t483 = qJDD(1) * t356;
t461 = t348 * t483;
t478 = pkin(8) * t461 + t353 * t431 + t356 * t400;
t163 = (qJ(3) * t483 + qJD(1) * t378) * t348 + t478;
t86 = t347 * t148 + t534 * t163;
t75 = pkin(9) * t399 + t86;
t30 = t352 * t109 - t144 * t488 + t168 * t487 + t355 * t75;
t87 = -t352 * t144 + t355 * t168;
t568 = -t254 * t87 + t30;
t567 = t260 * t404;
t566 = t582 * t229;
t565 = t450 * t355;
t563 = (-t356 * t466 - t330) * qJD(2) - t348 * t489;
t562 = (qJDD(2) + 0.2e1 * t443) * t348;
t493 = pkin(8) * t510 + t330;
t279 = t493 * qJD(2);
t549 = t202 * pkin(4);
t560 = qJDD(5) - t549;
t27 = -qJD(6) * t393 + t161 * t486 - t351 * t450 - t554 * t81;
t272 = t296 * t352;
t559 = t27 * t272 - t496 * t99;
t558 = -t161 * t418 - t81 * t514;
t124 = -qJD(4) * t366 + t352 * t204 - t355 * t399;
t122 = qJDD(6) + t124;
t391 = -t351 * t346 + t349 * t554;
t273 = t391 * t352;
t557 = t122 * t273 - t228 * t501;
t222 = -t357 * t295 + t354 * t495;
t88 = t144 * t355 + t168 * t352;
t70 = qJ(5) * t254 + t88;
t153 = t232 * t534 - t239;
t143 = -pkin(3) * t404 - t153;
t82 = t229 * pkin(4) + qJ(5) * t366 + t143;
t39 = -t346 * t70 + t349 * t82;
t29 = pkin(5) * t229 - pkin(10) * t161 + t39;
t40 = t346 * t82 + t349 * t70;
t32 = pkin(10) * t564 + t40;
t396 = -t29 * t554 + t351 * t32;
t402 = qJ(5) * t202 + qJD(5) * t254;
t24 = t30 + t402;
t497 = -t534 * t148 + t347 * t163;
t74 = -pkin(3) * t399 + t497;
t35 = t124 * pkin(4) + t123 * qJ(5) + qJD(5) * t366 + t74;
t8 = -t24 * t346 + t349 * t35;
t6 = pkin(5) * t124 - pkin(10) * t81 + t8;
t9 = t349 * t24 + t346 * t35;
t7 = pkin(10) * t450 + t9;
t1 = -t396 * qJD(6) + t351 * t6 + t554 * t7;
t556 = t229 ^ 2;
t555 = t264 ^ 2;
t358 = qJD(1) ^ 2;
t553 = pkin(1) * t348;
t550 = g(1) * t354;
t548 = t99 * t98;
t546 = pkin(10) + qJ(5);
t263 = t348 * t370;
t512 = t348 * t353;
t270 = t347 * t512 - t430;
t326 = qJD(2) * t331;
t235 = t348 * t378 + t326;
t147 = t235 * t534 + t347 * t563;
t246 = t331 + t368;
t257 = qJ(3) * t510 + t493;
t183 = t347 * t246 + t534 * t257;
t170 = pkin(9) * t535 + t183;
t490 = qJD(2) * t348;
t474 = t353 * t490;
t262 = t347 * t474 - t348 * t428;
t441 = pkin(2) * t474;
t188 = -pkin(3) * t263 + pkin(9) * t262 + t441;
t271 = t297 * t348;
t328 = pkin(2) * t510;
t494 = -t270 * pkin(3) + t328;
t432 = -pkin(9) * t271 + t494;
t191 = -t432 - t553;
t54 = t355 * t147 - t170 * t488 + t352 * t188 + t191 * t487;
t45 = -qJ(5) * t263 + qJD(5) * t270 + t54;
t146 = t235 * t347 - t534 * t563;
t243 = -t271 * t355 + t352 * t535;
t180 = qJD(4) * t243 - t262 * t352;
t390 = t271 * t352 + t355 * t535;
t181 = qJD(4) * t390 - t262 * t355;
t61 = pkin(4) * t180 - qJ(5) * t181 - qJD(5) * t243 + t146;
t22 = t346 * t61 + t349 * t45;
t542 = t254 * t88;
t311 = t546 * t346;
t312 = t546 * t349;
t244 = -t311 * t554 - t351 * t312;
t524 = t229 * t349;
t145 = -pkin(4) * t366 + qJ(5) * t229;
t57 = t349 * t145 - t346 * t87;
t44 = -pkin(5) * t366 + pkin(10) * t524 + t57;
t525 = t229 * t346;
t58 = t346 * t145 + t349 * t87;
t51 = pkin(10) * t525 + t58;
t539 = qJD(5) * t391 + qJD(6) * t244 - t351 * t44 - t51 * t554;
t245 = -t351 * t311 + t312 * t554;
t538 = -qJD(5) * t296 - qJD(6) * t245 + t351 * t51 - t44 * t554;
t182 = t246 * t534 - t347 * t257;
t169 = -pkin(3) * t535 - t182;
t106 = -pkin(4) * t390 - t243 * qJ(5) + t169;
t108 = t355 * t170 + t352 * t191;
t93 = qJ(5) * t270 + t108;
t50 = t346 * t106 + t349 * t93;
t532 = t161 * t260;
t531 = t202 * t352;
t528 = t229 * t366;
t527 = t229 * t260;
t526 = t229 * t264;
t523 = t366 * t264;
t520 = t264 * t260;
t519 = t336 * t352;
t518 = t340 * t355;
t517 = t341 * t355;
t516 = t342 * t358;
t515 = t346 * t124;
t511 = t348 * t354;
t508 = t349 * t124;
t69 = -t254 * pkin(4) + qJD(5) - t87;
t502 = -qJD(5) + t69;
t500 = -t352 * t124 - t229 * t487;
t499 = -t296 * t229 - t285;
t498 = -t391 * t229 - t561;
t344 = t353 ^ 2;
t345 = t356 ^ 2;
t492 = t344 - t345;
t479 = t356 * t516;
t477 = pkin(9) + t551;
t472 = t336 * t487;
t465 = pkin(1) * t571;
t463 = t356 * t485;
t21 = -t346 * t45 + t349 * t61;
t49 = t349 * t106 - t346 * t93;
t452 = t161 * t488 - t355 * t81;
t107 = -t352 * t170 + t191 * t355;
t280 = pkin(2) * t457 - t466;
t447 = -t280 * t354 + t357 * t339;
t446 = t254 * t355;
t440 = -t355 * t109 + t144 * t487 + t168 * t488 + t352 * t75;
t439 = t353 * t479;
t438 = -t273 * t28 - t501 * t98;
t435 = t353 * t463;
t433 = t576 * pkin(2);
t427 = t348 * t358 * t535;
t192 = -t217 * t352 + t355 * t509;
t196 = t222 * t352 - t355 * t511;
t426 = g(1) * t192 - g(2) * t196;
t221 = t297 * t357 - t354 * t362;
t425 = g(1) * t218 - g(2) * t221;
t424 = g(1) * t357 + g(2) * t354;
t423 = -t8 * t346 + t9 * t349;
t422 = -t272 * t122 - t228 * t496;
t421 = t222 * pkin(3) + t447;
t419 = g(2) * t509 - g(3) * t535;
t415 = t450 * pkin(5);
t411 = -t346 * t39 + t349 * t40;
t409 = -t124 * t390 + t180 * t229;
t408 = -t280 * t357 - t339 * t354;
t337 = pkin(5) * t349 + pkin(4);
t407 = t337 * t355 + t352 * t546;
t403 = 0.2e1 * t451 + qJD(2);
t401 = t218 * pkin(3) + t433;
t55 = -t352 * t147 - t170 * t487 + t188 * t355 - t191 * t488;
t397 = t355 * t202 - t254 * t575;
t94 = -pkin(4) * t270 - t107;
t186 = t243 * t349 + t270 * t346;
t37 = -pkin(5) * t390 - pkin(10) * t186 + t49;
t185 = t243 * t346 - t270 * t349;
t41 = -pkin(10) * t185 + t50;
t12 = -t351 * t41 + t37 * t554;
t11 = t351 * t29 + t32 * t554;
t13 = t351 * t37 + t41 * t554;
t395 = pkin(3) * t217 + t408;
t394 = t418 * t229;
t111 = -t351 * t185 + t186 * t554;
t389 = -t463 - t484;
t388 = t27 * t355 + t575 * t99;
t387 = t264 * t404;
t386 = t143 * t254 - t202 * t336;
t385 = g(1) * t196 + g(2) * t192 - g(3) * t390;
t197 = t222 * t355 + t352 * t511;
t384 = -g(1) * t197 - g(2) * t193 - g(3) * t243;
t383 = -g(1) * t222 + g(2) * t217 + g(3) * t271;
t382 = g(1) * t221 + g(2) * t218 - g(3) * t270;
t381 = -pkin(9) * t221 + t421;
t25 = t440 + t560;
t288 = -t357 * t353 - t354 * t456;
t380 = -t190 * t564 - t349 * t577;
t379 = -pkin(9) * t217 + t401;
t377 = -t25 + t385;
t376 = -t124 * t355 + t229 * t444;
t48 = pkin(4) * t263 - t55;
t375 = t389 * pkin(8);
t372 = -g(1) * t511 + t419;
t369 = pkin(9) * t218 + t395;
t367 = t288 * pkin(2);
t365 = t221 * pkin(3) + t367;
t364 = t385 - t440;
t2 = -qJD(6) * t11 - t351 * t7 + t554 * t6;
t361 = qJD(4) * t254 * t336 + t382 + t74;
t360 = pkin(9) * t222 + t365;
t359 = -t364 + t560;
t302 = t399 * t535;
t298 = -t328 - t553;
t290 = -pkin(8) * t512 + t331;
t289 = -t354 * t457 + t357 * t356;
t287 = -t353 * t454 - t354 * t356;
t281 = t460 * t352;
t278 = -pkin(8) * t474 + t326;
t277 = t493 * qJD(1);
t276 = -pkin(8) * t475 + t325;
t256 = t260 ^ 2;
t236 = -t336 * t513 + t275;
t226 = t348 * t375 + t374;
t225 = -pkin(8) * t434 + t478;
t131 = t181 * t349 - t263 * t346;
t130 = t181 * t346 + t263 * t349;
t119 = t197 * t341 - t221 * t340;
t118 = -t197 * t340 - t221 * t341;
t110 = t185 * t554 + t186 * t351;
t66 = -pkin(5) * t525 + t88;
t63 = pkin(5) * t185 + t94;
t56 = -pkin(5) * t564 + t69;
t47 = qJD(6) * t111 + t130 * t554 + t351 * t131;
t46 = t351 * t130 - t131 * t554 + t185 * t467 + t186 * t486;
t36 = pkin(5) * t130 + t48;
t18 = -pkin(10) * t130 + t22;
t17 = -t415 + t25;
t14 = pkin(5) * t180 - pkin(10) * t131 + t21;
t4 = -qJD(6) * t13 + t14 * t554 - t351 * t18;
t3 = qJD(6) * t12 + t351 * t14 + t18 * t554;
t5 = [0, 0, 0, 0, 0, qJDD(1), -g(2) * t357 + t550, t424, 0, 0 (qJDD(1) * t344 + 0.2e1 * t435) * t342 (t353 * t483 - t485 * t492) * t571, t356 * t403 * t490 + t353 * t562 (qJDD(1) * t345 - 0.2e1 * t435) * t342, t356 * t562 - t403 * t474, t302, -t279 * t404 + t290 * t399 + t226 * t535 - g(1) * t287 - g(2) * t289 + (-t464 + t483) * t465, g(1) * t576 - g(2) * t288 - t225 * t535 - t278 * t404 + t389 * t465 - t399 * t493 ((-t276 * qJD(2) + qJDD(1) * t493 + t225 + (-qJD(2) * t290 + t278) * qJD(1)) * t356 + (-t277 * qJD(2) - qJDD(1) * t290 - t226) * t353 - t424) * t348, t225 * t493 + t277 * t278 + t226 * t290 - t276 * t279 + t342 * qJDD(1) * pkin(1) ^ 2 - g(1) * (-pkin(1) * t354 + pkin(8) * t509) - g(2) * (pkin(1) * t357 + pkin(8) * t511) -t204 * t271 + t262 * t264, t203 * t271 - t204 * t270 + t260 * t262 - t263 * t264, t204 * t535 - t262 * t404 - t271 * t399, t203 * t270 - t260 * t263, -t203 * t535 + t263 * t404 - t270 * t399, t302, -g(1) * t217 - g(2) * t222 - t146 * t404 + t182 * t399 + t298 * t203 + t247 * t270 + t260 * t441 - t283 * t263 - t497 * t535, -t147 * t404 - t183 * t399 + t298 * t204 - t247 * t271 - t283 * t262 - t264 * t441 - t535 * t86 + t425, -t146 * t264 - t147 * t260 + t153 * t262 + t154 * t263 - t182 * t204 - t183 * t203 - t270 * t86 - t271 * t497 - t348 * t424, -g(1) * t408 - g(2) * t447 - t153 * t146 + t154 * t147 - t182 * t497 + t86 * t183 + t247 * t298 + t283 * t441, -t123 * t243 - t181 * t366, -t123 * t390 - t124 * t243 + t180 * t366 - t181 * t229, -t123 * t270 + t181 * t254 + t202 * t243 + t263 * t366, t409, -t124 * t270 - t180 * t254 + t202 * t390 + t229 * t263, t202 * t270 - t254 * t263, g(1) * t193 - g(2) * t197 + t107 * t202 + t124 * t169 + t143 * t180 + t146 * t229 + t254 * t55 - t263 * t87 - t270 * t440 - t390 * t74, -t108 * t202 - t123 * t169 + t143 * t181 - t146 * t366 + t243 * t74 - t254 * t54 + t263 * t88 - t270 * t30 - t426, t107 * t123 - t108 * t124 - t180 * t88 - t181 * t87 - t229 * t54 + t243 * t440 + t30 * t390 + t366 * t55 - t425, -g(1) * t369 - g(2) * t381 - t107 * t440 + t30 * t108 + t143 * t146 + t74 * t169 + t88 * t54 + t87 * t55, t131 * t161 + t186 * t81, -t161 * t130 + t131 * t564 - t81 * t185 + t186 * t450, t124 * t186 + t131 * t229 + t161 * t180 - t390 * t81, -t130 * t564 - t185 * t450, -t185 * t124 - t130 * t229 + t180 * t564 - t390 * t450, t409, t21 * t229 + t49 * t124 - t8 * t390 + t39 * t180 - t48 * t564 - t94 * t450 + t25 * t185 + t69 * t130 - g(1) * (-t193 * t349 + t218 * t346) - g(2) * (t197 * t349 - t221 * t346) -t22 * t229 - t50 * t124 + t9 * t390 - t40 * t180 + t48 * t161 + t94 * t81 + t25 * t186 + t69 * t131 - g(1) * (t193 * t346 + t218 * t349) - g(2) * (-t197 * t346 - t221 * t349) -t40 * t130 - t39 * t131 - t21 * t161 - t9 * t185 - t8 * t186 + t22 * t564 + t450 * t50 - t49 * t81 + t426, t9 * t50 + t40 * t22 + t8 * t49 + t39 * t21 + t25 * t94 + t69 * t48 - g(1) * (-pkin(4) * t193 - qJ(5) * t192 + t369) - g(2) * (pkin(4) * t197 + qJ(5) * t196 + t381) -t111 * t27 - t46 * t99, t110 * t27 - t111 * t28 - t46 * t98 - t47 * t99, t111 * t122 + t180 * t99 - t228 * t46 + t27 * t390, t110 * t28 - t47 * t98, -t110 * t122 + t180 * t98 - t228 * t47 + t28 * t390, -t122 * t390 + t180 * t228, g(1) * t572 - g(2) * t119 + t17 * t110 + t12 * t122 - t396 * t180 - t2 * t390 + t4 * t228 + t63 * t28 - t36 * t98 + t56 * t47, -g(1) * t573 - g(2) * t118 + t1 * t390 - t11 * t180 + t17 * t111 - t13 * t122 - t3 * t228 - t63 * t27 + t36 * t99 - t56 * t46, -t1 * t110 - t11 * t47 - t111 * t2 + t12 * t27 - t13 * t28 + t3 * t98 - t396 * t46 - t4 * t99 + t426, t1 * t13 + t11 * t3 + t2 * t12 - t396 * t4 + t17 * t63 + t56 * t36 - g(1) * (-t192 * t546 - t193 * t337 + t218 * t477 + t395) - g(2) * (t196 * t546 + t197 * t337 - t221 * t477 + t421); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t439, t492 * t516, t348 * t484 - t356 * t427, t439, t353 * t427 + t461, t399, t324 + t277 * t404 - g(1) * t288 - g(2) * t576 + (-t420 + t516) * t353 * pkin(1) + (-g(3) * t356 + t375) * t348, pkin(1) * t479 + t276 * t404 + g(1) * t289 - g(2) * t287 + (pkin(8) * t485 + g(3)) * t512 - t478, 0, 0, -t520, -t256 + t555, t204 + t567, t520, t303 - t387 + (qJD(2) * t371 - t462) * t348, t399, t171 * t404 + t283 * t264 + (-t260 * t475 + t399 * t534) * pkin(2) - t382 - t497, t172 * t404 + t283 * t260 + (t264 * t475 - t347 * t399) * pkin(2) - t383 - t86 -(t154 - t171) * t264 + (-t153 + t172) * t260 + (-t203 * t347 - t204 * t534) * pkin(2), -g(1) * t367 - g(2) * t433 - g(3) * t328 + t153 * t171 - t154 * t172 - t283 * t442 - t476 * t497 + t552 * t86, -t123 * t352 - t366 * t446 (-t123 - t527) * t355 + t578 + t500, t254 * t446 - t523 + t531, t376, t397 - t526, t254 * t264, -t104 * t254 + t124 * t338 - t171 * t229 + t264 * t87 + t352 * t386 - t355 * t361, t105 * t254 - t123 * t338 + t171 * t366 - t264 * t88 + t352 * t361 + t355 * t386, -t104 * t366 + t105 * t229 + (-t124 * t336 - t260 * t87 + t30 + (-t336 * t366 - t87) * qJD(4)) * t355 + (-t123 * t336 - t260 * t88 + t440 + (t229 * t336 - t88) * qJD(4)) * t352 + t383, t30 * t355 * t336 - g(1) * t360 - g(2) * t379 - g(3) * t432 - t143 * t171 + t440 * t519 + t74 * t338 + (-t105 - t473) * t88 + (-t104 - t472) * t87, -t161 * t582 + t507 * t81, t380 + t558 (t508 + t532) * t352 - t566 + t452, t564 * t189 + t346 * t577, -t565 - t394 + (t260 * t564 + t406 - t515) * t352, t376, t236 * t124 + t90 * t564 - t69 * t189 + t537 * t229 + t383 * t346 + (-t8 - t382 * t349 + (-t336 * t564 + t69 * t346) * qJD(4)) * t355 + (t25 * t346 + t254 * t39 - t336 * t450) * t352, -t237 * t124 - t90 * t161 - t69 * t190 - t569 * t229 + t383 * t349 + (t9 + (t161 * t336 + t349 * t69) * qJD(4) + t382 * t346) * t355 + (t25 * t349 - t254 * t40 + t336 * t81) * t352, t237 * t450 - t236 * t81 + t40 * t189 + t39 * t190 - t537 * t161 + (-t346 * t40 - t349 * t39) * t487 + (-t346 * t9 - t349 * t8 - t382) * t352 + t569 * t564, t9 * t237 + t8 * t236 + t25 * t519 - g(1) * (t221 * t413 + t360) - g(2) * (t218 * t413 + t379) - g(3) * (-t270 * t413 + t432) + (t472 - t90) * t69 + t569 * t40 + t537 * t39, -t27 * t273 - t501 * t99, t438 + t559, t388 + t557, t272 * t28 - t496 * t98, t422 + t574, -t122 * t355 + t228 * t444, t128 * t122 - t2 * t355 + t281 * t28 + t17 * t272 - g(1) * (t221 * t517 + t222 * t340) - g(2) * (-t217 * t340 + t218 * t517) - g(3) * (-t270 * t517 - t271 * t340) - t536 * t98 + t496 * t56 + t544 * t228 - t396 * t444, -t129 * t122 + t1 * t355 - t281 * t27 + t17 * t273 - g(1) * (-t221 * t518 + t222 * t341) - g(2) * (-t217 * t341 - t218 * t518) - g(3) * (t270 * t518 - t271 * t341) + t536 * t99 - t501 * t56 - t570 * t228 - t11 * t444, -t1 * t272 - t11 * t496 + t128 * t27 - t129 * t28 - t2 * t273 - t352 * t382 - t396 * t501 - t544 * t99 + t570 * t98, t1 * t129 + t2 * t128 + t17 * t281 - g(1) * (t221 * t407 + t222 * t477 + t365) - g(2) * (-t217 * t477 + t218 * t407 + t401) - g(3) * (-t270 * t407 - t271 * t477 + t494) + t536 * t56 + t570 * t11 - t544 * t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t387 + t203, t204 - t567, -t256 - t555, -t153 * t264 + t154 * t260 + (-t416 - t550) * t348 + t419 + t481, 0, 0, 0, 0, 0, 0, t397 + t526, -t254 ^ 2 * t355 - t523 - t531 (t123 - t527) * t355 - t578 + t500, t143 * t264 + (-t440 + t542) * t355 + t568 * t352 + t372, 0, 0, 0, 0, 0, 0, t565 - t394 + (-t254 * t564 - t515) * t352 (-t508 + t532) * t352 + t566 + t452, t380 - t558, t39 * t189 - t40 * t190 + (qJD(4) * t411 - t25) * t355 + (t254 * t69 + t423) * t352 + t372, 0, 0, 0, 0, 0, 0, t422 - t574, t388 - t557, t438 - t559, t1 * t273 - t11 * t501 - t17 * t355 - t2 * t272 + t396 * t496 + t444 * t56 + t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t528, t366 ^ 2 - t556, t229 * t254 - t123, t528, -t254 * t366 - t124, t202, t143 * t366 + t364 + t542, t143 * t229 - t384 - t568, 0, 0, t161 * t524 + t346 * t81, t346 * t450 + t81 * t349 + (-t161 * t346 + t349 * t564) * t229, t161 * t366 + t349 * t556 + t515, t349 * t450 - t525 * t564, -t346 * t556 + t366 * t564 + t508, t528, -qJ(5) * t515 + pkin(4) * t120 + t88 * t216 + t39 * t366 + (t346 * t502 - t57) * t229 + (t377 + t542 + t549) * t349, -qJ(5) * t508 - pkin(4) * t81 - t161 * t88 - t366 * t40 + (t349 * t502 + t58) * t229 - t377 * t346, t57 * t161 - t58 * t216 + (qJ(5) * t120 + qJD(5) * t216 - t39 * t229 - t58 * t254 + t349 * t402 + t9) * t349 + (qJ(5) * t81 + qJD(5) * t161 - t229 * t40 - t8) * t346 + t384, -t39 * t57 - t40 * t58 - t69 * t88 + t411 * qJD(5) + t377 * pkin(4) + (t384 + t423) * qJ(5), -t27 * t296 - t498 * t99, -t27 * t391 - t28 * t296 - t498 * t98 + t499 * t99, t122 * t296 - t228 * t498 + t366 * t99, -t28 * t391 + t499 * t98, t122 * t391 + t228 * t499 + t366 * t98, t228 * t366, t122 * t244 - t17 * t391 + t228 * t538 - t28 * t337 + t341 * t385 - t366 * t396 - t499 * t56 + t66 * t98, -t11 * t366 - t122 * t245 + t17 * t296 - t228 * t539 + t27 * t337 - t340 * t385 - t498 * t56 - t66 * t99, t1 * t391 + t11 * t499 - t2 * t296 + t244 * t27 - t245 * t28 - t396 * t498 - t538 * t99 + t539 * t98 + t384, t1 * t245 + t2 * t244 - t17 * t337 - t56 * t66 - g(1) * (-t196 * t337 + t197 * t546) - g(2) * (-t192 * t337 + t193 * t546) - g(3) * (t243 * t546 + t337 * t390) + t539 * t11 - t538 * t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161 * t229 - t450, t229 * t564 + t81, -t161 ^ 2 - t564 ^ 2, t161 * t39 - t40 * t564 + t359, 0, 0, 0, 0, 0, 0, t99 * t228 + t28, -t27 + t585, -t584 - t586, -t11 * t98 - t396 * t99 + t359 - t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t548, t584 - t586, -t27 - t585, t548, -t459 + (-qJD(6) + t228) * t99, t122, t11 * t228 - t56 * t99 - g(1) * t118 + g(2) * t573 - g(3) * (-t243 * t340 + t270 * t341) + t2, -t396 * t228 - t56 * t98 + g(1) * t119 + g(2) * t572 - g(3) * (-t243 * t341 - t270 * t340) - t1, 0, 0;];
tau_reg  = t5;
