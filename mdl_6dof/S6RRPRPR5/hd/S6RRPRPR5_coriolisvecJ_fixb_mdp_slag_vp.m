% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% MDP [30x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRPR5_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPRPR5_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(30,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR5_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [30 1]), ...
  'S6RRPRPR5_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [30x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:35:31
% EndTime: 2019-03-09 10:35:50
% DurationCPUTime: 11.81s
% Computational Cost: add. (11711->600), mult. (35462->827), div. (0->0), fcn. (28783->12), ass. (0->246)
t606 = sin(pkin(11));
t609 = cos(pkin(11));
t612 = sin(qJ(2));
t615 = cos(qJ(2));
t634 = t606 * t615 + t609 * t612;
t607 = sin(pkin(6));
t682 = qJD(1) * t607;
t564 = t634 * t682;
t614 = cos(qJ(4));
t715 = cos(pkin(6));
t662 = t715 * qJD(1);
t633 = t662 + qJD(2);
t588 = t614 * t633;
t611 = sin(qJ(4));
t529 = t564 * t611 - t588;
t528 = qJD(6) + t529;
t669 = t612 * t682;
t695 = t609 * t615;
t672 = t607 * t695;
t561 = qJD(1) * t672 - t606 * t669;
t558 = qJD(4) - t561;
t605 = sin(pkin(12));
t608 = cos(pkin(12));
t619 = -t614 * t564 - t611 * t633;
t480 = -t608 * t558 - t605 * t619;
t613 = cos(qJ(6));
t482 = t558 * t605 - t608 * t619;
t610 = sin(qJ(6));
t712 = t482 * t610;
t727 = -t613 * t480 - t712;
t729 = t528 * t727;
t670 = pkin(1) * t715;
t652 = t615 * t670;
t595 = qJD(1) * t652;
t717 = pkin(8) + qJ(3);
t666 = t717 * t612;
t651 = t607 * t666;
t550 = -qJD(1) * t651 + t595;
t653 = t612 * t670;
t699 = t607 * t615;
t560 = t699 * t717 + t653;
t551 = t560 * qJD(1);
t696 = t609 * t551;
t497 = t550 * t606 + t696;
t728 = qJD(5) * t611 + t497 - t558 * (pkin(4) * t611 - qJ(5) * t614);
t635 = t480 * t610 - t482 * t613;
t726 = t528 * t635;
t701 = t605 * t614;
t514 = t561 * t701 - t608 * t564;
t697 = t608 * t614;
t515 = t561 * t697 + t564 * t605;
t583 = t605 * t613 + t608 * t610;
t677 = qJD(6) * t613;
t678 = qJD(6) * t611;
t679 = qJD(4) * t614;
t698 = t608 * t611;
t702 = t605 * t610;
t687 = -t613 * t514 - t515 * t610 + t583 * t679 + t677 * t698 - t678 * t702;
t674 = qJD(1) * qJD(2);
t664 = t607 * t674;
t649 = t615 * t664;
t650 = t612 * t664;
t557 = -t606 * t650 + t609 * t649;
t484 = -qJD(4) * t619 + t611 * t557;
t582 = -t613 * t608 + t702;
t572 = t582 * t611;
t688 = t514 * t610 - t515 * t613 - t582 * t679 - t583 * t678;
t724 = t484 * t572 - t528 * t688;
t602 = t607 ^ 2;
t723 = -0.2e1 * t602 * t674;
t681 = qJD(2) * t607;
t668 = t612 * t681;
t722 = pkin(2) * t668;
t721 = MDP(5) * (t612 ^ 2 - t615 ^ 2);
t720 = MDP(6) * t615;
t540 = t606 * t551;
t498 = t550 * t609 - t540;
t512 = pkin(2) * t669 + pkin(3) * t564 - pkin(9) * t561;
t690 = t614 * t498 + t611 * t512;
t426 = qJ(5) * t564 + t690;
t599 = pkin(2) * t606 + pkin(9);
t680 = qJD(4) * t611;
t667 = t599 * t680;
t693 = t728 * t608 + (-t426 - t667) * t605;
t718 = t608 * t426 + t605 * t728;
t616 = qJD(1) ^ 2;
t716 = pkin(10) + qJ(5);
t570 = t634 * t607;
t562 = qJD(2) * t570;
t556 = qJD(1) * t562;
t644 = qJD(2) * t662;
t631 = pkin(1) * t644;
t593 = t615 * t631;
t620 = (-qJD(2) * t666 + qJD(3) * t615) * t607;
t524 = qJD(1) * t620 + t593;
t700 = t607 * t612;
t536 = -qJD(2) * t560 - qJD(3) * t700;
t617 = qJD(1) * t536;
t454 = t609 * t524 + t606 * t617;
t621 = pkin(2) * t715 - t651;
t532 = qJD(2) * pkin(2) + qJD(1) * t621 + t595;
t476 = t606 * t532 + t696;
t469 = pkin(9) * t633 + t476;
t648 = (-pkin(2) * t615 - pkin(1)) * t607;
t629 = qJD(1) * t648;
t577 = qJD(3) + t629;
t493 = -pkin(3) * t561 - pkin(9) * t564 + t577;
t592 = pkin(2) * t650;
t494 = pkin(3) * t556 - pkin(9) * t557 + t592;
t654 = -t611 * t454 - t469 * t679 - t493 * t680 + t614 * t494;
t390 = -pkin(4) * t556 - t654;
t714 = t390 * t605;
t713 = t390 * t608;
t710 = t484 * t605;
t709 = t484 * t608;
t708 = t529 * t558;
t707 = t529 * t605;
t706 = t619 * t558;
t705 = t619 * t564;
t657 = t558 * t611;
t704 = t561 * t611;
t703 = t602 * t616;
t625 = t614 * t454 - t469 * t680 + t493 * t679 + t611 * t494;
t384 = qJ(5) * t556 + qJD(5) * t558 + t625;
t453 = t524 * t606 - t609 * t617;
t483 = qJD(4) * t588 + t614 * t557 - t564 * t680;
t406 = pkin(4) * t484 - qJ(5) * t483 + qJD(5) * t619 + t453;
t374 = t608 * t384 + t605 * t406;
t569 = t606 * t700 - t672;
t596 = qJD(2) * t652;
t535 = t596 + t620;
t472 = t535 * t609 + t536 * t606;
t548 = t652 + t621;
t508 = t606 * t548 + t609 * t560;
t496 = pkin(9) * t715 + t508;
t563 = (-t606 * t612 + t695) * t681;
t513 = pkin(3) * t562 - pkin(9) * t563 + t722;
t516 = pkin(3) * t569 - pkin(9) * t570 + t648;
t624 = t614 * t472 - t496 * t680 + t611 * t513 + t516 * t679;
t395 = qJ(5) * t562 + qJD(5) * t569 + t624;
t471 = t535 * t606 - t609 * t536;
t544 = t570 * t614 + t611 * t715;
t505 = qJD(4) * t544 + t563 * t611;
t626 = -t570 * t611 + t614 * t715;
t506 = qJD(4) * t626 + t563 * t614;
t412 = pkin(4) * t505 - qJ(5) * t506 - qJD(5) * t544 + t471;
t377 = t608 * t395 + t605 * t412;
t692 = t608 * t667 + t718;
t425 = t614 * t469 + t611 * t493;
t418 = qJ(5) * t558 + t425;
t475 = t609 * t532 - t540;
t468 = -pkin(3) * t633 - t475;
t421 = t529 * pkin(4) + qJ(5) * t619 + t468;
t389 = t608 * t418 + t605 * t421;
t424 = -t611 * t469 + t493 * t614;
t470 = -pkin(4) * t619 + qJ(5) * t529;
t409 = t608 * t424 + t605 * t470;
t691 = t614 * t496 + t611 * t516;
t430 = qJ(5) * t569 + t691;
t507 = t609 * t548 - t606 * t560;
t495 = -pkin(3) * t715 - t507;
t437 = -pkin(4) * t626 - t544 * qJ(5) + t495;
t400 = t608 * t430 + t605 * t437;
t689 = t614 * t556 + t558 * t704;
t491 = t611 * t498;
t427 = -pkin(4) * t564 - t512 * t614 + t491;
t663 = pkin(5) * t605 + t599;
t686 = -pkin(5) * t514 + t663 * t679 - t427;
t685 = t528 * t582;
t684 = t528 * t583;
t600 = -pkin(2) * t609 - pkin(3);
t580 = -pkin(4) * t614 - qJ(5) * t611 + t600;
t538 = t605 * t580 + t599 * t697;
t676 = t558 * MDP(19);
t417 = -pkin(4) * t558 + qJD(5) - t424;
t675 = -qJD(5) + t417;
t673 = pkin(1) * t703;
t448 = t483 * t605 - t608 * t556;
t449 = t483 * t608 + t556 * t605;
t671 = -t610 * t448 + t613 * t449 - t480 * t677;
t373 = -t384 * t605 + t608 * t406;
t370 = pkin(5) * t484 - pkin(10) * t449 + t373;
t371 = -pkin(10) * t448 + t374;
t661 = t613 * t370 - t371 * t610;
t376 = -t395 * t605 + t608 * t412;
t388 = -t418 * t605 + t608 * t421;
t408 = -t424 * t605 + t608 * t470;
t399 = -t430 * t605 + t608 * t437;
t660 = t613 * t448 + t610 * t449;
t659 = -t611 * t496 + t516 * t614;
t656 = t558 * t614;
t655 = t602 * t612 * t615 * MDP(4);
t647 = t607 * t616 * t715;
t646 = pkin(1) * t723;
t571 = t583 * t611;
t645 = -t571 * t484 - t528 * t687;
t526 = -pkin(10) * t605 * t611 + t538;
t643 = pkin(5) * t704 - pkin(10) * t515 + qJD(6) * t526 - (pkin(5) * t611 - pkin(10) * t697) * qJD(4) + t693;
t574 = t608 * t580;
t521 = -pkin(10) * t698 + t574 + (-t599 * t605 - pkin(5)) * t614;
t642 = -pkin(10) * t514 - qJD(6) * t521 - (-pkin(10) * t701 - t599 * t698) * qJD(4) + t718;
t640 = t370 * t610 + t371 * t613;
t639 = -t373 * t605 + t374 * t608;
t378 = pkin(5) * t529 - pkin(10) * t482 + t388;
t380 = -pkin(10) * t480 + t389;
t367 = t378 * t613 - t380 * t610;
t368 = t378 * t610 + t380 * t613;
t511 = t544 * t608 + t569 * t605;
t382 = -pkin(5) * t626 - pkin(10) * t511 + t399;
t510 = t544 * t605 - t569 * t608;
t391 = -pkin(10) * t510 + t400;
t638 = t382 * t613 - t391 * t610;
t637 = t382 * t610 + t391 * t613;
t636 = -t388 * t605 + t389 * t608;
t438 = t613 * t510 + t511 * t610;
t439 = -t510 * t610 + t511 * t613;
t630 = -t611 * t472 - t496 * t679 + t513 * t614 - t516 * t680;
t431 = -pkin(4) * t569 - t659;
t591 = t716 * t608;
t628 = pkin(10) * t529 * t608 - pkin(5) * t619 + qJD(5) * t605 + qJD(6) * t591 + t408;
t590 = t716 * t605;
t627 = pkin(10) * t707 - qJD(5) * t608 + qJD(6) * t590 + t409;
t386 = -qJD(6) * t712 + t671;
t623 = t468 * t558 - t599 * t556;
t398 = -pkin(4) * t562 - t630;
t622 = -pkin(8) * t699 - t653;
t387 = -qJD(6) * t635 + t660;
t618 = t633 * t622;
t601 = -pkin(5) * t608 - pkin(4);
t575 = t663 * t611;
t537 = -t599 * t701 + t574;
t456 = t506 * t608 + t562 * t605;
t455 = t506 * t605 - t562 * t608;
t429 = t635 * t680;
t415 = -pkin(5) * t707 + t425;
t414 = pkin(5) * t510 + t431;
t407 = pkin(5) * t480 + t417;
t397 = qJD(6) * t439 + t613 * t455 + t456 * t610;
t396 = -qJD(6) * t438 - t455 * t610 + t456 * t613;
t381 = pkin(5) * t455 + t398;
t379 = pkin(5) * t448 + t390;
t375 = -pkin(10) * t455 + t377;
t372 = pkin(5) * t505 - pkin(10) * t456 + t376;
t366 = -qJD(6) * t368 + t661;
t365 = qJD(6) * t367 + t640;
t1 = [(-MDP(7) * t668 + t681 * t720) * (0.2e1 * t662 + qJD(2)) + (t386 * t439 - t396 * t635) * MDP(24) + (-t425 * t562 + t453 * t544 + t468 * t506 - t471 * t619 + t495 * t483 - t556 * t691 - t558 * t624 - t569 * t625) * MDP(19) + (t483 * t569 + t506 * t558 + t544 * t556 - t562 * t619) * MDP(15) + (t483 * t544 - t506 * t619) * MDP(13) + (-(qJD(6) * t638 + t372 * t610 + t375 * t613) * t528 - t637 * t484 + t365 * t626 - t368 * t505 - t381 * t635 + t414 * t386 + t379 * t439 + t407 * t396) * MDP(30) + (-t386 * t626 + t396 * t528 + t439 * t484 - t505 * t635) * MDP(26) + (t483 * t626 - t484 * t544 + t505 * t619 - t506 * t529) * MDP(14) + (t424 * t562 - t453 * t626 + t468 * t505 + t471 * t529 + t495 * t484 + t556 * t659 + t558 * t630 + t569 * t654) * MDP(18) + (-t484 * t569 - t505 * t558 - t529 * t562 + t556 * t626) * MDP(16) + (t374 * t626 - t377 * t529 - t389 * t505 + t390 * t511 + t398 * t482 - t400 * t484 + t417 * t456 + t431 * t449) * MDP(21) + (-t373 * t626 + t376 * t529 + t388 * t505 + t390 * t510 + t398 * t480 + t399 * t484 + t417 * t455 + t431 * t448) * MDP(20) + (-t484 * t626 + t505 * t528) * MDP(28) + (t615 * t646 - (-pkin(8) * t668 + t596) * t633 - (-pkin(8) * t650 + t593) * t715) * MDP(10) + 0.2e1 * t655 * t674 + (qJD(2) * t618 + t612 * t646 + t622 * t644) * MDP(9) + (-t386 * t438 - t387 * t439 + t396 * t727 + t397 * t635) * MDP(25) + ((-qJD(6) * t637 + t372 * t613 - t375 * t610) * t528 + t638 * t484 - t366 * t626 + t367 * t505 - t381 * t727 + t414 * t387 + t379 * t438 + t407 * t397) * MDP(29) + (t387 * t626 - t397 * t528 - t438 * t484 + t505 * t727) * MDP(27) + (t556 * t569 + t558 * t562) * MDP(17) + (t453 * t570 - t454 * t569 + t471 * t564 + t472 * t561 - t475 * t563 - t476 * t562 - t507 * t557 - t508 * t556) * MDP(11) + t721 * t723 + (-t373 * t511 - t374 * t510 - t376 * t482 - t377 * t480 - t388 * t456 - t389 * t455 - t399 * t449 - t400 * t448) * MDP(22) + (t373 * t399 + t374 * t400 + t376 * t388 + t377 * t389 + t390 * t431 + t398 * t417) * MDP(23) + (-t453 * t507 + t454 * t508 - t475 * t471 + t476 * t472 + (t577 + t629) * t722) * MDP(12); ((t476 - t497) * t564 + (t475 - t498) * t561 + (-t556 * t606 - t557 * t609) * pkin(2)) * MDP(11) + (t529 * t564 - t558 * t680 + t689) * MDP(16) + (-t424 * t564 - t453 * t614 + t600 * t484 - t497 * t529 + (t491 + (-qJD(4) * t599 - t512) * t614) * t558 + t623 * t611) * MDP(18) + ((t483 - t708) * t614 + (-t484 + t706) * t611) * MDP(14) + (-pkin(8) * t649 - qJD(1) * t618) * MDP(9) + ((-t631 + t673) * MDP(9) + MDP(7) * t647) * t612 + (-t386 * t572 - t635 * t688) * MDP(24) + (t425 * t564 + t453 * t611 + t600 * t483 + t497 * t619 + (t667 + t690) * t558 + t623 * t614) * MDP(19) + (t483 * t611 - t619 * t656) * MDP(13) + (-(t521 * t610 + t526 * t613) * t484 + t365 * t614 + t575 * t386 - t379 * t572 + (t610 * t643 + t613 * t642) * t528 - t686 * t635 + t688 * t407 - t368 * t657) * MDP(30) + (-t417 * t515 - t427 * t482 - t484 * t538 + t692 * t529 + (t374 + (t417 * t608 + t482 * t599) * qJD(4)) * t614 + (-t389 * t558 + t449 * t599 + t713) * t611) * MDP(21) + (-t417 * t514 - t427 * t480 + t484 * t537 - t693 * t529 + (-t373 + (t417 * t605 + t480 * t599) * qJD(4)) * t614 + (t388 * t558 + t448 * t599 + t714) * t611) * MDP(20) + (t556 * t611 + t558 * t656 + t705) * MDP(15) + (t388 * t515 + t389 * t514 - t448 * t538 - t449 * t537 + (-t373 * t608 - t374 * t605) * t611 + t693 * t482 + t692 * t480 + (-t388 * t608 - t389 * t605) * t679) * MDP(22) + (t390 * t599 * t611 + t373 * t537 + t374 * t538 + (t599 * t679 - t427) * t417 - t692 * t389 - t693 * t388) * MDP(23) + (-t593 + t615 * t673 + (-pkin(8) * t669 + t595) * t662 + t595 * qJD(2)) * MDP(10) + (t475 * t497 - t476 * t498 + (-t453 * t609 + t454 * t606 - t577 * t669) * pkin(2)) * MDP(12) + (-t484 * t614 + t528 * t657) * MDP(28) - t616 * t655 - t647 * t720 + (-t386 * t571 + t387 * t572 + t635 * t687 + t688 * t727) * MDP(25) + (t387 * t614 + t657 * t727 + t645) * MDP(27) + ((t521 * t613 - t526 * t610) * t484 - t366 * t614 + t575 * t387 + t379 * t571 + (t610 * t642 - t613 * t643) * t528 - t686 * t727 + t687 * t407 + t367 * t657) * MDP(29) + t703 * t721 + (-t386 * t614 + t635 * t704 - t429 - t724) * MDP(26) - t558 * t564 * MDP(17); (-t561 ^ 2 - t564 ^ 2) * MDP(11) + (t475 * t564 - t476 * t561 + t592) * MDP(12) + t689 * MDP(18) + MDP(19) * t705 + (t480 * t515 - t482 * t514) * MDP(22) + (t388 * t514 - t389 * t515) * MDP(23) + t645 * MDP(29) + (-t429 + t724) * MDP(30) + (-MDP(18) * t564 + t514 * MDP(20) + t515 * MDP(21)) * t529 + (t561 * t676 - t448 * MDP(20) - t449 * MDP(21) - t390 * MDP(23) - t387 * MDP(29) - t386 * MDP(30) + (-t676 + (-t480 * t608 + t482 * t605) * MDP(22) + t636 * MDP(23) + (-t605 * MDP(20) - t608 * MDP(21)) * t529) * qJD(4)) * t614 + (-t556 * MDP(19) + (t480 * t558 - t710) * MDP(20) + (t482 * t558 - t709) * MDP(21) + (-t448 * t608 + t449 * t605) * MDP(22) + (t417 * t558 + t639) * MDP(23) + t635 * t561 * MDP(30) + (-MDP(18) * qJD(4) - MDP(29) * t727) * t558) * t611; -t529 ^ 2 * MDP(14) + (t483 + t708) * MDP(15) + (-t484 - t706) * MDP(16) + t556 * MDP(17) + (t425 * t558 + t654) * MDP(18) + (t424 * t558 + t468 * t529 - t625) * MDP(19) + (-qJ(5) * t710 - pkin(4) * t448 - t713 - t425 * t480 + (t605 * t675 - t408) * t529) * MDP(20) + (-qJ(5) * t709 - pkin(4) * t449 + t714 - t425 * t482 + (t608 * t675 + t409) * t529) * MDP(21) + (t408 * t482 + t409 * t480 + (-qJ(5) * t448 - qJD(5) * t480 - t388 * t529 + t374) * t608 + (qJ(5) * t449 + qJD(5) * t482 - t389 * t529 - t373) * t605) * MDP(22) + (-pkin(4) * t390 + qJ(5) * t639 + qJD(5) * t636 - t388 * t408 - t389 * t409 - t417 * t425) * MDP(23) + (t386 * t583 + t635 * t685) * MDP(24) + (-t386 * t582 - t387 * t583 + t635 * t684 - t685 * t727) * MDP(25) + (t484 * t583 - t528 * t685) * MDP(26) + (-t484 * t582 - t528 * t684) * MDP(27) + ((-t590 * t613 - t591 * t610) * t484 + t601 * t387 + t379 * t582 + t415 * t727 + (t610 * t627 - t613 * t628) * t528 + t684 * t407) * MDP(29) + (-(-t590 * t610 + t591 * t613) * t484 + t601 * t386 + t379 * t583 + t415 * t635 + (t610 * t628 + t613 * t627) * t528 - t685 * t407) * MDP(30) - (MDP(13) * t529 - MDP(14) * t619 - MDP(18) * t468 - MDP(20) * t388 + MDP(21) * t389 + MDP(26) * t635 - MDP(27) * t727 - MDP(28) * t528 - MDP(29) * t367 + MDP(30) * t368) * t619; (t482 * t529 + t448) * MDP(20) + (-t480 * t529 + t449) * MDP(21) + (-t480 ^ 2 - t482 ^ 2) * MDP(22) + (t388 * t482 + t389 * t480 + t390) * MDP(23) + (t387 - t726) * MDP(29) + (t386 + t729) * MDP(30); t635 * t727 * MDP(24) + (t635 ^ 2 - t727 ^ 2) * MDP(25) + (t671 - t729) * MDP(26) + (-t660 - t726) * MDP(27) + t484 * MDP(28) + (t368 * t528 + t407 * t635 + t661) * MDP(29) + (t367 * t528 - t407 * t727 - t640) * MDP(30) + (-MDP(26) * t712 + MDP(27) * t635 - MDP(29) * t368 - MDP(30) * t367) * qJD(6);];
tauc  = t1;
