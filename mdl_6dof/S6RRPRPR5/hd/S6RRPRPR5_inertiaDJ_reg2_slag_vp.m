% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:35:12
% EndTime: 2019-03-09 10:35:32
% DurationCPUTime: 7.80s
% Computational Cost: add. (11839->457), mult. (32874->851), div. (0->0), fcn. (33006->12), ass. (0->238)
t123 = sin(pkin(6));
t118 = t123 ^ 2;
t126 = sin(qJ(2));
t128 = cos(qJ(2));
t275 = sin(pkin(11));
t276 = cos(pkin(11));
t194 = t126 * t276 + t128 * t275;
t302 = qJD(2) * t194;
t177 = t118 * t302;
t313 = t123 * t302;
t125 = sin(qJ(4));
t127 = cos(qJ(4));
t226 = t275 * t126;
t227 = t276 * t128;
t193 = t227 - t226;
t299 = qJD(4) * t193;
t312 = (t125 * t302 - t127 * t299) * t123;
t277 = cos(pkin(6));
t249 = pkin(1) * t277;
t219 = t128 * t249;
t287 = pkin(8) + qJ(3);
t232 = t123 * t287;
t182 = -t126 * t232 + t219;
t260 = qJD(3) * t123;
t155 = qJD(2) * t182 + t128 * t260;
t220 = t126 * t249;
t156 = -t126 * t260 + (-t128 * t232 - t220) * qJD(2);
t138 = t155 * t276 + t156 * t275;
t187 = t123 * t194;
t268 = t123 * t128;
t306 = t123 * t193;
t146 = -t123 * pkin(1) - pkin(2) * t268 - pkin(3) * t306 - pkin(9) * t187;
t311 = -qJD(4) * t146 - t138;
t167 = pkin(2) * t277 + t182;
t183 = t287 * t268 + t220;
t58 = t167 * t275 + t183 * t276;
t140 = pkin(9) * t277 + t58;
t263 = qJD(2) * t123;
t101 = t226 * t263;
t195 = t227 * t263 - t101;
t262 = qJD(2) * t126;
t240 = t123 * t262;
t222 = pkin(2) * t240;
t310 = -pkin(3) * t313 + pkin(9) * t195 + qJD(4) * t140 - t222;
t122 = sin(pkin(12));
t124 = cos(pkin(12));
t170 = t277 * qJD(4) + t195;
t175 = qJD(4) * t187;
t298 = t125 * t175 - t127 * t170;
t168 = -t122 * t298 - t124 * t313;
t184 = t127 * t194;
t228 = t277 * t125;
t157 = t123 * t184 + t228;
t169 = t157 * t122 + t124 * t306;
t300 = qJD(4) * t169;
t309 = -t125 * t300 + t127 * t168;
t301 = qJD(4) * t157;
t308 = -t125 * t301 - t127 * t298;
t307 = t126 * pkin(2);
t145 = t122 * t313 - t124 * t298;
t143 = t145 * t122;
t292 = sin(qJ(6));
t233 = qJD(6) * t292;
t293 = cos(qJ(6));
t234 = qJD(6) * t293;
t91 = t122 * t233 - t124 * t234;
t96 = t292 * t122 - t293 * t124;
t303 = qJD(2) * t118;
t297 = -0.2e1 * t91;
t248 = t293 * t122;
t97 = t292 * t124 + t248;
t92 = t97 * qJD(6);
t296 = 0.2e1 * t92;
t295 = 0.2e1 * t123;
t294 = 0.2e1 * qJD(4);
t291 = pkin(4) * t125;
t290 = t127 * pkin(4);
t259 = qJD(4) * t127;
t68 = -t91 * t125 + t259 * t97;
t85 = t97 * t125;
t289 = t85 * t68;
t238 = t124 * t259;
t242 = t122 * t259;
t67 = t125 * t92 - t293 * t238 + t292 * t242;
t86 = t96 * t125;
t288 = t86 * t67;
t286 = pkin(10) + qJ(5);
t159 = t292 * t169;
t59 = t124 * t228 + (-t122 * t193 + t124 * t184) * t123;
t14 = -qJD(6) * t159 + t292 * t145 + t293 * t168 + t59 * t234;
t160 = t293 * t169;
t30 = t292 * t59 + t160;
t285 = t86 * t14 + t67 * t30;
t29 = t125 * t146 + t127 * t140;
t135 = -qJ(5) * t306 + t29;
t57 = t167 * t276 - t183 * t275;
t47 = -pkin(3) * t277 - t57;
t79 = t125 * t187 - t127 * t277;
t137 = t79 * pkin(4) - qJ(5) * t157 + t47;
t17 = t122 * t137 + t124 * t135;
t158 = t127 * t300;
t161 = t168 * t124;
t284 = -t124 * t158 - t125 * t161;
t56 = t170 * t125 + t127 * t175;
t283 = -t85 * t56 - t68 * t79;
t281 = -t125 * t56 - t79 * t259;
t280 = t67 * t96 + t86 * t92;
t114 = -pkin(2) * t276 - pkin(3);
t196 = t114 - t290;
t266 = t125 * qJ(5);
t188 = t196 - t266;
t113 = pkin(2) * t275 + pkin(9);
t271 = t113 * t127;
t99 = t124 * t271;
t78 = t122 * t188 + t99;
t279 = t122 * t56;
t278 = t124 * t56;
t274 = qJ(5) * t127;
t272 = t113 * t125;
t270 = t122 * t113;
t269 = t122 * t125;
t267 = t124 * t125;
t117 = t122 ^ 2;
t119 = t124 ^ 2;
t265 = t117 + t119;
t264 = t125 ^ 2 - t127 ^ 2;
t261 = qJD(2) * t128;
t116 = qJD(4) * t125;
t258 = qJD(5) * t122;
t257 = qJD(5) * t124;
t256 = qJD(5) * t125;
t255 = qJD(5) * t127;
t39 = 0.2e1 * t79 * t56;
t254 = 0.2e1 * t277;
t253 = t114 * t294;
t252 = t127 * t270;
t251 = t113 * t267;
t250 = -t128 * pkin(2) - pkin(1);
t245 = t118 * t261;
t244 = t117 * t259;
t243 = t113 * t116;
t100 = t113 * t259;
t241 = t122 * t256;
t239 = t124 * t116;
t237 = t124 * t256;
t236 = t125 * t259;
t235 = qJD(5) * t292;
t231 = t293 * qJD(5);
t230 = pkin(5) + t270;
t13 = qJD(6) * t160 - t293 * t145 + t292 * t168 + t59 * t233;
t31 = t293 * t59 - t159;
t229 = t31 * t116 + t127 * t13;
t224 = t265 * qJD(5);
t223 = 0.2e1 * t236;
t221 = t59 * t242;
t218 = t126 * t245;
t217 = t122 * t238;
t214 = 0.2e1 * t224;
t213 = -0.2e1 * t264 * qJD(4);
t212 = t286 * t292;
t211 = t277 * t263;
t18 = t310 * t125 + t311 * t127;
t131 = qJ(5) * t313 - qJD(5) * t306 - t18;
t41 = t155 * t275 - t276 * t156;
t136 = t56 * pkin(4) + qJ(5) * t298 - qJD(5) * t157 + t41;
t7 = -t122 * t131 + t124 * t136;
t8 = t122 * t136 + t124 * t131;
t210 = -t7 * t122 + t8 * t124;
t209 = -t13 * t85 + t31 * t68;
t208 = t56 * t86 + t67 * t79;
t207 = -t68 * t97 + t85 * t91;
t206 = -t266 - t290;
t205 = -t274 + t291;
t16 = -t122 * t135 + t124 * t137;
t204 = -t122 * t16 + t124 * t17;
t73 = -t237 + (t113 * t269 + t124 * t205) * qJD(4);
t74 = -t241 + (t122 * t205 - t251) * qJD(4);
t203 = -t122 * t73 + t124 * t74;
t77 = t124 * t188 - t252;
t202 = -t122 * t77 + t124 * t78;
t19 = t311 * t125 - t310 * t127;
t201 = -t19 * t125 - t18 * t127;
t200 = t286 * t248;
t199 = -t116 * t30 + t127 * t14;
t32 = t116 * t79 - t127 * t56;
t198 = t116 * t96 - t127 * t92;
t197 = -t286 * t127 + t291;
t192 = -pkin(8) * t268 - t220;
t191 = t126 * t123 * pkin(8) - t219;
t190 = -t242 * t79 - t269 * t56;
t189 = -t238 * t79 - t267 * t56;
t176 = t193 * t303;
t162 = t122 * t168;
t152 = t241 - (t122 * t197 - t251) * qJD(4);
t151 = -t230 * t127 + (-t286 * t125 + t196) * t124;
t150 = -t237 + (t124 * t197 + t125 * t230) * qJD(4);
t149 = t293 * t151;
t148 = t292 * t151;
t142 = t145 * t125;
t141 = t59 * t116 - t127 * t145;
t45 = t125 * t140;
t25 = pkin(4) * t306 - t127 * t146 + t45;
t15 = -pkin(4) * t313 - t19;
t134 = t79 * pkin(5) - t59 * pkin(10) + t16;
t133 = t293 * t134;
t132 = t292 * t134;
t130 = -pkin(10) * t168 + t8;
t129 = t56 * pkin(5) - pkin(10) * t145 + t7;
t115 = -pkin(5) * t124 - pkin(4);
t108 = t119 * t259;
t107 = t122 * t116;
t106 = -0.2e1 * t236;
t104 = t286 * t124;
t98 = t250 * t123;
t90 = (pkin(5) * t122 + t113) * t125;
t89 = t192 * qJD(2);
t88 = t191 * qJD(2);
t84 = pkin(5) * t242 + t100;
t81 = t293 * t104 - t122 * t212;
t80 = -t292 * t104 - t200;
t70 = t116 * t97 + t127 * t91;
t69 = -pkin(10) * t269 + t78;
t66 = -t104 * t234 - t124 * t235 + (qJD(6) * t212 - t231) * t122;
t65 = qJD(6) * t200 + t104 * t233 + t122 * t235 - t124 * t231;
t62 = (t125 * t299 + t127 * t302) * t123;
t38 = t293 * t69 + t148;
t37 = -t292 * t69 + t149;
t28 = -t45 + t127 * (-pkin(3) * t193 - pkin(9) * t194 + t250) * t123;
t22 = -qJD(6) * t148 + t293 * t150 + t292 * t152 - t69 * t234;
t21 = -qJD(6) * t149 - t292 * t150 + t293 * t152 + t69 * t233;
t20 = pkin(5) * t169 + t25;
t11 = -pkin(10) * t169 + t17;
t9 = pkin(5) * t168 + t15;
t4 = t293 * t11 + t132;
t3 = -t292 * t11 + t133;
t2 = -qJD(6) * t132 - t11 * t234 + t293 * t129 - t292 * t130;
t1 = -qJD(6) * t133 + t11 * t233 - t292 * t129 - t293 * t130;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t218, 0.2e1 * (-t126 ^ 2 + t128 ^ 2) * t303, 0.2e1 * t128 * t211, -0.2e1 * t218, -0.2e1 * t126 * t211, 0, -0.2e1 * pkin(1) * t118 * t262 + 0.2e1 * t277 * t89, -0.2e1 * pkin(1) * t245 + 0.2e1 * t277 * t88 (-t126 * t89 - t128 * t88 + (t126 * t192 + t128 * t191) * qJD(2)) * t295, -0.2e1 * t191 * t89 + 0.2e1 * t192 * t88, 0.2e1 * t195 * t187, -0.2e1 * t177 * t194 + 0.2e1 * t195 * t306, t195 * t254, -0.2e1 * t193 * t177, -t313 * t254, 0, -0.2e1 * t176 * t307 - 0.2e1 * t277 * t41 + 0.2e1 * t313 * t98, -0.2e1 * t138 * t277 + 0.2e1 * t177 * t307 + 0.2e1 * t195 * t98, 0.2e1 * t138 * t306 + 0.2e1 * t41 * t187 - 0.2e1 * t195 * t57 - 0.2e1 * t313 * t58, 0.2e1 * t138 * t58 + 0.2e1 * t222 * t98 - 0.2e1 * t57 * t41, -0.2e1 * t157 * t298, -0.2e1 * t157 * t56 + 0.2e1 * t298 * t79, 0.2e1 * t157 * t313 + 0.2e1 * t298 * t306, t39 (t193 * t56 - t302 * t79) * t295, -0.2e1 * t194 * t176, -0.2e1 * t19 * t306 + 0.2e1 * t28 * t313 + 0.2e1 * t41 * t79 + 0.2e1 * t47 * t56, 0.2e1 * t157 * t41 - 0.2e1 * t18 * t306 - 0.2e1 * t29 * t313 - 0.2e1 * t298 * t47, -0.2e1 * t157 * t19 + 0.2e1 * t18 * t79 + 0.2e1 * t28 * t298 - 0.2e1 * t29 * t56, -0.2e1 * t18 * t29 + 0.2e1 * t19 * t28 + 0.2e1 * t41 * t47, 0.2e1 * t59 * t145, -0.2e1 * t145 * t169 - 0.2e1 * t168 * t59, 0.2e1 * t145 * t79 + 0.2e1 * t59 * t56, 0.2e1 * t169 * t168, -0.2e1 * t168 * t79 - 0.2e1 * t169 * t56, t39, 0.2e1 * t15 * t169 + 0.2e1 * t16 * t56 + 0.2e1 * t168 * t25 + 0.2e1 * t7 * t79, 0.2e1 * t145 * t25 + 0.2e1 * t15 * t59 - 0.2e1 * t17 * t56 - 0.2e1 * t8 * t79, -0.2e1 * t145 * t16 - 0.2e1 * t168 * t17 - 0.2e1 * t169 * t8 - 0.2e1 * t7 * t59, 0.2e1 * t15 * t25 + 0.2e1 * t16 * t7 + 0.2e1 * t17 * t8, -0.2e1 * t31 * t13, 0.2e1 * t13 * t30 - 0.2e1 * t14 * t31, -0.2e1 * t13 * t79 + 0.2e1 * t31 * t56, 0.2e1 * t30 * t14, -0.2e1 * t14 * t79 - 0.2e1 * t30 * t56, t39, 0.2e1 * t14 * t20 + 0.2e1 * t2 * t79 + 0.2e1 * t3 * t56 + 0.2e1 * t30 * t9, 0.2e1 * t1 * t79 - 0.2e1 * t13 * t20 + 0.2e1 * t31 * t9 - 0.2e1 * t4 * t56, 0.2e1 * t1 * t30 + 0.2e1 * t13 * t3 - 0.2e1 * t14 * t4 - 0.2e1 * t2 * t31, -0.2e1 * t1 * t4 + 0.2e1 * t2 * t3 + 0.2e1 * t20 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 * t261, 0, -t240, 0, t89, t88, 0, 0, 0, 0, t195, 0, -t313, 0, -t41, -t138 (t276 * t101 + (-t128 * t276 ^ 2 - t194 * t275) * t263) * pkin(2) (t138 * t275 - t276 * t41) * pkin(2), -t125 * t298 + t127 * t301, t281 + t308, t312, t32, t62, 0, -t113 * t312 + t114 * t56 + t116 * t47 - t41 * t127, -t123 * t272 * t299 - t114 * t298 + t41 * t125 + t259 * t47 - t271 * t313, -t116 * t29 - t298 * t272 + t243 * t79 - t259 * t28 + t201 + (t301 - t56) * t271, t114 * t41 + ((-t29 * t125 - t28 * t127) * qJD(4) + t201) * t113 (t259 * t59 + t142) * t124, -t122 * t142 - t221 + t284, t141 - t189, t122 * t158 + t125 * t162, t190 + t309, t32, t116 * t16 - t7 * t127 + t15 * t269 + t168 * t272 + t242 * t25 + t271 * t300 + t77 * t56 + t73 * t79, t100 * t59 + t113 * t142 - t116 * t17 + t8 * t127 + t15 * t267 + t238 * t25 - t78 * t56 - t74 * t79, -t145 * t77 - t16 * t238 - t168 * t78 - t169 * t74 - t17 * t242 - t267 * t7 - t269 * t8 - t73 * t59, t16 * t73 + t17 * t74 + t7 * t77 + t78 * t8 + (t15 * t125 + t25 * t259) * t113, t13 * t86 - t31 * t67, -t209 + t285, -t208 + t229, t14 * t85 + t30 * t68, t199 + t283, t32, t116 * t3 - t127 * t2 + t14 * t90 + t20 * t68 + t22 * t79 + t30 * t84 + t37 * t56 + t85 * t9, -t1 * t127 - t116 * t4 - t13 * t90 - t20 * t67 + t21 * t79 + t31 * t84 - t38 * t56 - t86 * t9, t1 * t85 + t13 * t37 - t14 * t38 + t2 * t86 + t21 * t30 - t22 * t31 + t3 * t67 - t4 * t68, -t1 * t38 + t2 * t37 + t20 * t84 - t21 * t4 + t22 * t3 + t9 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t213, 0, t106, 0, 0, t125 * t253, t127 * t253, 0, 0, t119 * t223, -0.4e1 * t125 * t217, t264 * t124 * t294, t117 * t223, t122 * t213, t106, -0.2e1 * t127 * t73 + 0.2e1 * (t77 + 0.2e1 * t252) * t116, 0.2e1 * t127 * t74 + 0.2e1 * (-t78 + 0.2e1 * t99) * t116, 0.2e1 * (-t122 * t74 - t124 * t73) * t125 + 0.2e1 * (-t122 * t78 - t124 * t77) * t259, 0.2e1 * t113 ^ 2 * t236 + 0.2e1 * t73 * t77 + 0.2e1 * t74 * t78, 0.2e1 * t288, 0.2e1 * t85 * t67 + 0.2e1 * t86 * t68, -0.2e1 * t116 * t86 + 0.2e1 * t127 * t67, 0.2e1 * t289, -0.2e1 * t85 * t116 + 0.2e1 * t127 * t68, t106, 0.2e1 * t116 * t37 - 0.2e1 * t127 * t22 + 0.2e1 * t68 * t90 + 0.2e1 * t84 * t85, -0.2e1 * t116 * t38 - 0.2e1 * t127 * t21 - 0.2e1 * t67 * t90 - 0.2e1 * t84 * t86, 0.2e1 * t21 * t85 + 0.2e1 * t22 * t86 + 0.2e1 * t37 * t67 - 0.2e1 * t38 * t68, -0.2e1 * t21 * t38 + 0.2e1 * t22 * t37 + 0.2e1 * t84 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313, t195, 0, t222, 0, 0, 0, 0, 0, 0, t62, -t312, t281 - t308, -t125 * t18 + t127 * t19 + (-t125 * t28 + t127 * t29) * qJD(4), 0, 0, 0, 0, 0, 0, t190 - t309, t141 + t189, t125 * t143 + t221 + t284, -t127 * t15 + t210 * t125 + (t125 * t25 + t127 * t204) * qJD(4), 0, 0, 0, 0, 0, 0, -t199 + t283, t208 + t229, t209 + t285, t1 * t86 + t116 * t20 - t127 * t9 - t2 * t85 - t3 * t68 - t4 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203 * t125 + (t113 * t264 + t127 * t202) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, t116 * t90 - t127 * t84 + t21 * t86 - t22 * t85 - t37 * t68 - t38 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t265) * t223, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t236 + 0.2e1 * t288 + 0.2e1 * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, 0, -t56, t313, t19, t18, 0, 0, t143, t124 * t145 - t162, t279, -t161, t278, 0, -pkin(4) * t168 - qJ(5) * t279 - t15 * t124 - t258 * t79, -pkin(4) * t145 - qJ(5) * t278 + t15 * t122 - t257 * t79, -t169 * t257 + t258 * t59 + t210 + (t143 - t161) * qJ(5), -pkin(4) * t15 + qJ(5) * t210 + qJD(5) * t204, -t13 * t97 - t31 * t91, t13 * t96 - t14 * t97 + t30 * t91 - t31 * t92, t56 * t97 - t79 * t91, t14 * t96 + t30 * t92, -t56 * t96 - t79 * t92, 0, t115 * t14 + t20 * t92 + t56 * t80 + t66 * t79 + t9 * t96, -t115 * t13 - t20 * t91 - t56 * t81 + t65 * t79 + t9 * t97, t1 * t96 + t13 * t80 - t14 * t81 - t2 * t97 + t3 * t91 + t30 * t65 - t31 * t66 - t4 * t92, -t1 * t81 + t115 * t9 + t2 * t80 + t3 * t66 - t4 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, 0, -t116, 0, -t100, t243, 0, 0, t217, t108 - t244, t107, -t217, t239, 0, t122 * t255 + (t122 * t206 - t99) * qJD(4), t124 * t255 + (t124 * t206 + t252) * qJD(4), t203, -pkin(4) * t100 + qJ(5) * t203 + qJD(5) * t202, -t67 * t97 + t86 * t91, t207 + t280, t70, t68 * t96 + t85 * t92, -t198, 0, t115 * t68 + t116 * t80 - t127 * t66 + t84 * t96 + t90 * t92, -t115 * t67 - t116 * t81 - t127 * t65 + t84 * t97 - t90 * t91, t21 * t96 - t22 * t97 + t37 * t91 - t38 * t92 + t65 * t85 + t66 * t86 + t67 * t80 - t68 * t81, t115 * t84 - t21 * t81 + t22 * t80 + t37 * t66 - t38 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, -t259, 0, 0, 0, 0, 0, 0, 0, 0, -t239, t107, t108 + t244, t125 * t224 + (t265 * t274 - t291) * qJD(4), 0, 0, 0, 0, 0, 0, t198, t70, -t207 + t280, t115 * t116 + t65 * t86 - t66 * t85 - t67 * t81 - t68 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, qJ(5) * t214, t97 * t297, 0.2e1 * t91 * t96 - 0.2e1 * t92 * t97, 0, t96 * t296, 0, 0, t115 * t296, t115 * t297, 0.2e1 * t65 * t96 - 0.2e1 * t66 * t97 + 0.2e1 * t80 * t91 - 0.2e1 * t81 * t92, -0.2e1 * t65 * t81 + 0.2e1 * t66 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, t145, 0, t15, 0, 0, 0, 0, 0, 0, t14, -t13, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, t238, 0, t100, 0, 0, 0, 0, 0, 0, t68, -t67, 0, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t91, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, 0, -t14, t56, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, 0, -t68, t116, t22, t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t67, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t91, 0, -t92, 0, t66, t65, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
