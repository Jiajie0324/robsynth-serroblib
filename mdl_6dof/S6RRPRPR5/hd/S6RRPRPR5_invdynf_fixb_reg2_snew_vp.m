% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 14:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPRPR5_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR5_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR5_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR5_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 14:06:35
% EndTime: 2019-05-06 14:06:50
% DurationCPUTime: 15.32s
% Computational Cost: add. (152143->374), mult. (404852->580), div. (0->0), fcn. (326468->14), ass. (0->320)
t2674 = sin(pkin(11));
t2675 = sin(pkin(6));
t2677 = cos(pkin(11));
t2681 = sin(qJ(2));
t2685 = cos(qJ(2));
t2637 = (t2674 * t2685 + t2677 * t2681) * t2675 * qJD(1);
t2678 = cos(pkin(6));
t2667 = qJD(1) * t2678 + qJD(2);
t2680 = sin(qJ(4));
t2684 = cos(qJ(4));
t2619 = t2637 * t2680 - t2667 * t2684;
t2618 = qJD(6) + t2619;
t2754 = qJD(6) + t2618;
t2730 = t2675 * t2685;
t2725 = qJD(1) * t2730;
t2727 = qJDD(1) * t2675;
t2646 = qJD(2) * t2725 + t2681 * t2727;
t2731 = t2675 * t2681;
t2726 = qJD(1) * t2731;
t2647 = -qJD(2) * t2726 + t2685 * t2727;
t2615 = t2646 * t2677 + t2647 * t2674;
t2635 = t2674 * t2726 - t2677 * t2725;
t2735 = t2635 * t2667;
t2594 = t2615 - t2735;
t2621 = t2637 * t2684 + t2667 * t2680;
t2633 = qJD(4) + t2635;
t2673 = sin(pkin(12));
t2676 = cos(pkin(12));
t2602 = t2621 * t2673 - t2633 * t2676;
t2604 = t2621 * t2676 + t2633 * t2673;
t2679 = sin(qJ(6));
t2683 = cos(qJ(6));
t2561 = t2602 * t2683 + t2604 * t2679;
t2753 = t2561 ^ 2;
t2563 = -t2602 * t2679 + t2604 * t2683;
t2752 = t2563 ^ 2;
t2751 = t2602 ^ 2;
t2750 = t2604 ^ 2;
t2749 = t2618 ^ 2;
t2591 = t2619 ^ 2;
t2748 = t2621 ^ 2;
t2747 = t2633 ^ 2;
t2746 = t2635 ^ 2;
t2745 = t2637 ^ 2;
t2744 = t2667 ^ 2;
t2743 = -2 * qJD(3);
t2742 = -2 * qJD(5);
t2741 = t2561 * t2563;
t2740 = t2602 * t2604;
t2739 = t2604 * t2619;
t2738 = t2619 * t2602;
t2737 = t2619 * t2621;
t2736 = t2635 * t2637;
t2734 = t2637 * t2667;
t2682 = sin(qJ(1));
t2686 = cos(qJ(1));
t2658 = g(1) * t2682 - g(2) * t2686;
t2687 = qJD(1) ^ 2;
t2642 = pkin(8) * t2675 * t2687 + qJDD(1) * pkin(1) + t2658;
t2733 = t2642 * t2678;
t2732 = t2675 ^ 2 * t2687;
t2729 = qJD(4) - t2633;
t2728 = qJD(6) - t2618;
t2659 = -g(1) * t2686 - g(2) * t2682;
t2643 = -pkin(1) * t2687 + pkin(8) * t2727 + t2659;
t2607 = -g(3) * t2731 + t2643 * t2685 + t2681 * t2733;
t2692 = pkin(2) * t2667 - qJ(3) * t2726;
t2672 = t2685 ^ 2;
t2724 = t2672 * t2732;
t2575 = -pkin(2) * t2724 + t2647 * qJ(3) - t2667 * t2692 + t2607;
t2666 = qJDD(1) * t2678 + qJDD(2);
t2717 = -t2681 * t2643 + t2685 * t2733;
t2723 = t2681 * t2732;
t2689 = t2666 * pkin(2) - t2646 * qJ(3) + (pkin(2) * t2723 + (qJ(3) * qJD(1) * t2667 - g(3)) * t2675) * t2685 + t2717;
t2535 = t2575 * t2677 + t2635 * t2743 + t2674 * t2689;
t2613 = pkin(3) * t2635 - pkin(9) * t2637;
t2521 = -pkin(3) * t2744 + pkin(9) * t2666 - t2613 * t2635 + t2535;
t2626 = -t2678 * g(3) - t2675 * t2642;
t2589 = -t2647 * pkin(2) - qJ(3) * t2724 + t2692 * t2726 + qJDD(3) + t2626;
t2716 = -t2646 * t2674 + t2647 * t2677;
t2592 = -t2716 + t2734;
t2688 = pkin(3) * t2592 - pkin(9) * t2594 + t2589;
t2499 = t2521 * t2684 + t2680 * t2688;
t2590 = pkin(4) * t2619 - qJ(5) * t2621;
t2714 = qJDD(4) - t2716;
t2479 = -pkin(4) * t2747 + qJ(5) * t2714 - t2590 * t2619 + t2499;
t2721 = t2674 * t2575 - t2677 * t2689;
t2520 = -t2666 * pkin(3) - t2744 * pkin(9) + ((2 * qJD(3)) + t2613) * t2637 + t2721;
t2718 = t2680 * t2615 - t2666 * t2684;
t2582 = qJD(4) * t2621 + t2718;
t2696 = -t2684 * t2615 - t2680 * t2666;
t2583 = -qJD(4) * t2619 - t2696;
t2719 = t2619 * t2633 - t2583;
t2489 = t2719 * qJ(5) + (t2621 * t2633 + t2582) * pkin(4) + t2520;
t2450 = t2479 * t2676 + t2489 * t2673 + t2602 * t2742;
t2498 = -t2521 * t2680 + t2684 * t2688;
t2560 = t2583 * t2676 + t2673 * t2714;
t2720 = t2583 * t2673 - t2676 * t2714;
t2722 = -t2679 * t2560 - t2683 * t2720;
t2533 = -t2560 - t2738;
t2539 = t2582 - t2740;
t2715 = t2667 * t2725;
t2449 = -t2673 * t2479 + t2489 * t2676 + t2604 * t2742;
t2443 = pkin(5) * t2539 + pkin(10) * t2533 + t2449;
t2574 = pkin(5) * t2619 - pkin(10) * t2604;
t2446 = -pkin(5) * t2751 - pkin(10) * t2720 - t2574 * t2619 + t2450;
t2417 = t2443 * t2683 - t2446 * t2679;
t2418 = t2443 * t2679 + t2446 * t2683;
t2407 = t2417 * t2683 + t2418 * t2679;
t2408 = -t2417 * t2679 + t2418 * t2683;
t2398 = -t2407 * t2673 + t2408 * t2676;
t2478 = -pkin(4) * t2714 - qJ(5) * t2747 + t2590 * t2621 + qJDD(5) - t2498;
t2463 = pkin(5) * t2720 - pkin(10) * t2751 + t2574 * t2604 + t2478;
t2396 = t2398 * t2684 + t2463 * t2680;
t2397 = t2407 * t2676 + t2408 * t2673;
t2391 = t2396 * t2674 - t2397 * t2677;
t2392 = t2396 * t2677 + t2397 * t2674;
t2713 = t2391 * t2685 + t2392 * t2681;
t2429 = -t2449 * t2673 + t2450 * t2676;
t2420 = t2429 * t2684 + t2478 * t2680;
t2428 = t2449 * t2676 + t2450 * t2673;
t2410 = t2420 * t2674 - t2428 * t2677;
t2411 = t2420 * t2677 + t2428 * t2674;
t2712 = t2410 * t2685 + t2411 * t2681;
t2493 = -t2563 * t2728 + t2722;
t2690 = -t2683 * t2560 + t2679 * t2720;
t2495 = t2561 * t2728 + t2690;
t2453 = t2493 * t2679 + t2495 * t2683;
t2454 = t2493 * t2683 - t2495 * t2679;
t2437 = -t2453 * t2673 + t2454 * t2676;
t2506 = -t2752 - t2753;
t2431 = t2437 * t2684 + t2506 * t2680;
t2436 = t2453 * t2676 + t2454 * t2673;
t2413 = t2431 * t2674 - t2436 * t2677;
t2414 = t2431 * t2677 + t2436 * t2674;
t2711 = t2413 * t2685 + t2414 * t2681;
t2691 = -qJDD(6) - t2582;
t2513 = -t2691 - t2741;
t2522 = -t2749 - t2753;
t2483 = t2513 * t2683 + t2522 * t2679;
t2484 = -t2513 * t2679 + t2522 * t2683;
t2452 = -t2483 * t2673 + t2484 * t2676;
t2492 = t2563 * t2754 - t2722;
t2441 = t2452 * t2684 + t2492 * t2680;
t2451 = t2483 * t2676 + t2484 * t2673;
t2421 = t2441 * t2674 - t2451 * t2677;
t2422 = t2441 * t2677 + t2451 * t2674;
t2710 = t2421 * t2685 + t2422 * t2681;
t2514 = t2691 - t2741;
t2543 = -t2749 - t2752;
t2496 = t2514 * t2679 + t2543 * t2683;
t2497 = t2514 * t2683 - t2543 * t2679;
t2458 = -t2496 * t2673 + t2497 * t2676;
t2494 = -t2561 * t2754 - t2690;
t2445 = t2458 * t2684 + t2494 * t2680;
t2457 = t2496 * t2676 + t2497 * t2673;
t2425 = t2445 * t2674 - t2457 * t2677;
t2426 = t2445 * t2677 + t2457 * t2674;
t2709 = t2425 * t2685 + t2426 * t2681;
t2462 = -t2498 * t2680 + t2499 * t2684;
t2447 = t2462 * t2674 - t2520 * t2677;
t2448 = t2462 * t2677 + t2520 * t2674;
t2708 = t2447 * t2685 + t2448 * t2681;
t2531 = -t2720 + t2739;
t2501 = t2531 * t2676 - t2533 * t2673;
t2546 = -t2750 - t2751;
t2482 = t2501 * t2684 + t2546 * t2680;
t2500 = t2531 * t2673 + t2533 * t2676;
t2455 = t2482 * t2674 - t2500 * t2677;
t2456 = t2482 * t2677 + t2500 * t2674;
t2707 = t2455 * t2685 + t2456 * t2681;
t2549 = -t2591 - t2751;
t2508 = -t2539 * t2673 + t2549 * t2676;
t2530 = t2720 + t2739;
t2486 = t2508 * t2684 + t2530 * t2680;
t2507 = t2539 * t2676 + t2549 * t2673;
t2466 = t2486 * t2674 - t2507 * t2677;
t2467 = t2486 * t2677 + t2507 * t2674;
t2706 = t2466 * t2685 + t2467 * t2681;
t2540 = -t2582 - t2740;
t2564 = -t2591 - t2750;
t2516 = t2540 * t2676 - t2564 * t2673;
t2532 = t2560 - t2738;
t2491 = t2516 * t2684 + t2532 * t2680;
t2515 = t2540 * t2673 + t2564 * t2676;
t2468 = t2491 * t2674 - t2515 * t2677;
t2469 = t2491 * t2677 + t2515 * t2674;
t2705 = t2468 * t2685 + t2469 * t2681;
t2534 = t2637 * t2743 - t2721;
t2502 = t2534 * t2677 + t2535 * t2674;
t2503 = -t2534 * t2674 + t2535 * t2677;
t2704 = t2502 * t2685 + t2503 * t2681;
t2551 = -t2621 * t2729 - t2718;
t2553 = t2619 * t2729 + t2696;
t2524 = t2551 * t2684 - t2553 * t2680;
t2573 = -t2748 - t2591;
t2504 = t2524 * t2674 - t2573 * t2677;
t2505 = t2524 * t2677 + t2573 * t2674;
t2703 = t2504 * t2685 + t2505 * t2681;
t2565 = t2714 - t2737;
t2579 = -t2591 - t2747;
t2542 = -t2565 * t2680 + t2579 * t2684;
t2550 = (qJD(4) + t2633) * t2621 + t2718;
t2511 = t2542 * t2674 - t2550 * t2677;
t2512 = t2542 * t2677 + t2550 * t2674;
t2702 = t2511 * t2685 + t2512 * t2681;
t2566 = -t2714 - t2737;
t2586 = -t2747 - t2748;
t2545 = t2566 * t2684 - t2586 * t2680;
t2517 = t2545 * t2674 + t2677 * t2719;
t2518 = t2545 * t2677 - t2674 * t2719;
t2701 = t2517 * t2685 + t2518 * t2681;
t2593 = t2716 + t2734;
t2595 = -t2615 - t2735;
t2554 = t2593 * t2674 + t2595 * t2677;
t2555 = t2593 * t2677 - t2595 * t2674;
t2700 = t2554 * t2685 + t2555 * t2681;
t2608 = -t2744 - t2746;
t2609 = t2666 - t2736;
t2568 = t2608 * t2674 + t2609 * t2677;
t2569 = t2608 * t2677 - t2609 * t2674;
t2699 = t2568 * t2685 + t2569 * t2681;
t2610 = -t2666 - t2736;
t2617 = -t2744 - t2745;
t2577 = t2610 * t2674 + t2617 * t2677;
t2578 = t2610 * t2677 - t2617 * t2674;
t2698 = t2577 * t2685 + t2578 * t2681;
t2606 = -g(3) * t2730 + t2717;
t2697 = t2606 * t2685 + t2607 * t2681;
t2623 = t2715 - t2646;
t2651 = t2667 * t2726;
t2624 = t2647 + t2651;
t2695 = t2623 * t2685 + t2624 * t2681;
t2671 = t2681 ^ 2;
t2634 = -t2671 * t2732 - t2744;
t2657 = t2685 * t2723;
t2645 = t2657 - t2666;
t2694 = t2634 * t2685 + t2645 * t2681;
t2644 = t2657 + t2666;
t2648 = -t2744 - t2724;
t2693 = t2644 * t2685 + t2648 * t2681;
t2656 = -qJDD(1) * t2682 - t2686 * t2687;
t2655 = qJDD(1) * t2686 - t2682 * t2687;
t2649 = (-t2671 - t2672) * t2732;
t2625 = -t2647 + t2651;
t2622 = t2715 + t2646;
t2616 = -t2644 * t2681 + t2648 * t2685;
t2611 = -t2634 * t2681 + t2645 * t2685;
t2601 = -t2745 - t2746;
t2596 = -t2623 * t2681 + t2624 * t2685;
t2588 = -t2675 * t2625 + t2678 * t2693;
t2587 = t2678 * t2625 + t2675 * t2693;
t2585 = -t2675 * t2622 + t2678 * t2694;
t2584 = t2678 * t2622 + t2675 * t2694;
t2581 = -t2675 * t2649 + t2678 * t2695;
t2580 = t2678 * t2649 + t2675 * t2695;
t2567 = -t2606 * t2681 + t2607 * t2685;
t2558 = -t2675 * t2626 + t2678 * t2697;
t2557 = t2678 * t2626 + t2675 * t2697;
t2547 = -t2577 * t2681 + t2578 * t2685;
t2544 = t2566 * t2680 + t2586 * t2684;
t2541 = t2565 * t2684 + t2579 * t2680;
t2538 = -t2568 * t2681 + t2569 * t2685;
t2529 = -t2675 * t2594 + t2678 * t2698;
t2528 = t2678 * t2594 + t2675 * t2698;
t2527 = -t2554 * t2681 + t2555 * t2685;
t2526 = -t2675 * t2592 + t2678 * t2699;
t2525 = t2678 * t2592 + t2675 * t2699;
t2523 = t2551 * t2680 + t2553 * t2684;
t2510 = -t2675 * t2601 + t2678 * t2700;
t2509 = t2678 * t2601 + t2675 * t2700;
t2490 = t2516 * t2680 - t2532 * t2684;
t2485 = t2508 * t2680 - t2530 * t2684;
t2481 = t2501 * t2680 - t2546 * t2684;
t2480 = -t2517 * t2681 + t2518 * t2685;
t2476 = -t2511 * t2681 + t2512 * t2685;
t2475 = -t2504 * t2681 + t2505 * t2685;
t2474 = -t2675 * t2544 + t2678 * t2701;
t2473 = t2678 * t2544 + t2675 * t2701;
t2472 = -t2675 * t2541 + t2678 * t2702;
t2471 = t2678 * t2541 + t2675 * t2702;
t2470 = -t2502 * t2681 + t2503 * t2685;
t2465 = -t2675 * t2589 + t2678 * t2704;
t2464 = t2678 * t2589 + t2675 * t2704;
t2461 = t2498 * t2684 + t2499 * t2680;
t2460 = -t2675 * t2523 + t2678 * t2703;
t2459 = t2678 * t2523 + t2675 * t2703;
t2444 = t2458 * t2680 - t2494 * t2684;
t2442 = -t2468 * t2681 + t2469 * t2685;
t2440 = t2452 * t2680 - t2492 * t2684;
t2439 = -t2466 * t2681 + t2467 * t2685;
t2438 = -t2455 * t2681 + t2456 * t2685;
t2435 = -t2675 * t2490 + t2678 * t2705;
t2434 = t2678 * t2490 + t2675 * t2705;
t2433 = -t2675 * t2485 + t2678 * t2706;
t2432 = t2678 * t2485 + t2675 * t2706;
t2430 = t2437 * t2680 - t2506 * t2684;
t2427 = -t2447 * t2681 + t2448 * t2685;
t2424 = -t2675 * t2481 + t2678 * t2707;
t2423 = t2678 * t2481 + t2675 * t2707;
t2419 = t2429 * t2680 - t2478 * t2684;
t2416 = -t2675 * t2461 + t2678 * t2708;
t2415 = t2678 * t2461 + t2675 * t2708;
t2412 = -t2425 * t2681 + t2426 * t2685;
t2409 = -t2421 * t2681 + t2422 * t2685;
t2406 = -t2675 * t2444 + t2678 * t2709;
t2405 = t2678 * t2444 + t2675 * t2709;
t2404 = -t2675 * t2440 + t2678 * t2710;
t2403 = t2678 * t2440 + t2675 * t2710;
t2402 = -t2413 * t2681 + t2414 * t2685;
t2401 = -t2410 * t2681 + t2411 * t2685;
t2400 = -t2675 * t2430 + t2678 * t2711;
t2399 = t2678 * t2430 + t2675 * t2711;
t2395 = t2398 * t2680 - t2463 * t2684;
t2394 = -t2675 * t2419 + t2678 * t2712;
t2393 = t2678 * t2419 + t2675 * t2712;
t2390 = -t2391 * t2681 + t2392 * t2685;
t2389 = -t2675 * t2395 + t2678 * t2713;
t2388 = t2678 * t2395 + t2675 * t2713;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2656, -t2655, 0, -t2658 * t2682 + t2659 * t2686, 0, 0, 0, 0, 0, 0, -t2588 * t2682 + t2616 * t2686, -t2585 * t2682 + t2611 * t2686, -t2581 * t2682 + t2596 * t2686, -t2558 * t2682 + t2567 * t2686, 0, 0, 0, 0, 0, 0, -t2526 * t2682 + t2538 * t2686, -t2529 * t2682 + t2547 * t2686, -t2510 * t2682 + t2527 * t2686, -t2465 * t2682 + t2470 * t2686, 0, 0, 0, 0, 0, 0, -t2472 * t2682 + t2476 * t2686, -t2474 * t2682 + t2480 * t2686, -t2460 * t2682 + t2475 * t2686, -t2416 * t2682 + t2427 * t2686, 0, 0, 0, 0, 0, 0, -t2433 * t2682 + t2439 * t2686, -t2435 * t2682 + t2442 * t2686, -t2424 * t2682 + t2438 * t2686, -t2394 * t2682 + t2401 * t2686, 0, 0, 0, 0, 0, 0, -t2404 * t2682 + t2409 * t2686, -t2406 * t2682 + t2412 * t2686, -t2400 * t2682 + t2402 * t2686, -t2389 * t2682 + t2390 * t2686; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2655, t2656, 0, t2658 * t2686 + t2659 * t2682, 0, 0, 0, 0, 0, 0, t2588 * t2686 + t2616 * t2682, t2585 * t2686 + t2611 * t2682, t2581 * t2686 + t2596 * t2682, t2558 * t2686 + t2567 * t2682, 0, 0, 0, 0, 0, 0, t2526 * t2686 + t2538 * t2682, t2529 * t2686 + t2547 * t2682, t2510 * t2686 + t2527 * t2682, t2465 * t2686 + t2470 * t2682, 0, 0, 0, 0, 0, 0, t2472 * t2686 + t2476 * t2682, t2474 * t2686 + t2480 * t2682, t2460 * t2686 + t2475 * t2682, t2416 * t2686 + t2427 * t2682, 0, 0, 0, 0, 0, 0, t2433 * t2686 + t2439 * t2682, t2435 * t2686 + t2442 * t2682, t2424 * t2686 + t2438 * t2682, t2394 * t2686 + t2401 * t2682, 0, 0, 0, 0, 0, 0, t2404 * t2686 + t2409 * t2682, t2406 * t2686 + t2412 * t2682, t2400 * t2686 + t2402 * t2682, t2389 * t2686 + t2390 * t2682; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2587, t2584, t2580, t2557, 0, 0, 0, 0, 0, 0, t2525, t2528, t2509, t2464, 0, 0, 0, 0, 0, 0, t2471, t2473, t2459, t2415, 0, 0, 0, 0, 0, 0, t2432, t2434, t2423, t2393, 0, 0, 0, 0, 0, 0, t2403, t2405, t2399, t2388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2687, -qJDD(1), 0, t2659, 0, 0, 0, 0, 0, 0, t2616, t2611, t2596, t2567, 0, 0, 0, 0, 0, 0, t2538, t2547, t2527, t2470, 0, 0, 0, 0, 0, 0, t2476, t2480, t2475, t2427, 0, 0, 0, 0, 0, 0, t2439, t2442, t2438, t2401, 0, 0, 0, 0, 0, 0, t2409, t2412, t2402, t2390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2687, 0, t2658, 0, 0, 0, 0, 0, 0, t2588, t2585, t2581, t2558, 0, 0, 0, 0, 0, 0, t2526, t2529, t2510, t2465, 0, 0, 0, 0, 0, 0, t2472, t2474, t2460, t2416, 0, 0, 0, 0, 0, 0, t2433, t2435, t2424, t2394, 0, 0, 0, 0, 0, 0, t2404, t2406, t2400, t2389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2587, t2584, t2580, t2557, 0, 0, 0, 0, 0, 0, t2525, t2528, t2509, t2464, 0, 0, 0, 0, 0, 0, t2471, t2473, t2459, t2415, 0, 0, 0, 0, 0, 0, t2432, t2434, t2423, t2393, 0, 0, 0, 0, 0, 0, t2403, t2405, t2399, t2388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2648, t2645, t2624, t2607, 0, 0, 0, 0, 0, 0, t2569, t2578, t2555, t2503, 0, 0, 0, 0, 0, 0, t2512, t2518, t2505, t2448, 0, 0, 0, 0, 0, 0, t2467, t2469, t2456, t2411, 0, 0, 0, 0, 0, 0, t2422, t2426, t2414, t2392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2644, t2634, t2623, t2606, 0, 0, 0, 0, 0, 0, t2568, t2577, t2554, t2502, 0, 0, 0, 0, 0, 0, t2511, t2517, t2504, t2447, 0, 0, 0, 0, 0, 0, t2466, t2468, t2455, t2410, 0, 0, 0, 0, 0, 0, t2421, t2425, t2413, t2391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2625, t2622, t2649, t2626, 0, 0, 0, 0, 0, 0, t2592, t2594, t2601, t2589, 0, 0, 0, 0, 0, 0, t2541, t2544, t2523, t2461, 0, 0, 0, 0, 0, 0, t2485, t2490, t2481, t2419, 0, 0, 0, 0, 0, 0, t2440, t2444, t2430, t2395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2608, t2610, t2593, t2535, 0, 0, 0, 0, 0, 0, t2542, t2545, t2524, t2462, 0, 0, 0, 0, 0, 0, t2486, t2491, t2482, t2420, 0, 0, 0, 0, 0, 0, t2441, t2445, t2431, t2396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2609, t2617, t2595, t2534, 0, 0, 0, 0, 0, 0, -t2550, t2719, -t2573, -t2520, 0, 0, 0, 0, 0, 0, -t2507, -t2515, -t2500, -t2428, 0, 0, 0, 0, 0, 0, -t2451, -t2457, -t2436, -t2397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2592, t2594, t2601, t2589, 0, 0, 0, 0, 0, 0, t2541, t2544, t2523, t2461, 0, 0, 0, 0, 0, 0, t2485, t2490, t2481, t2419, 0, 0, 0, 0, 0, 0, t2440, t2444, t2430, t2395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2579, t2566, t2551, t2499, 0, 0, 0, 0, 0, 0, t2508, t2516, t2501, t2429, 0, 0, 0, 0, 0, 0, t2452, t2458, t2437, t2398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2565, t2586, t2553, t2498, 0, 0, 0, 0, 0, 0, -t2530, -t2532, -t2546, -t2478, 0, 0, 0, 0, 0, 0, -t2492, -t2494, -t2506, -t2463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2550, -t2719, t2573, t2520, 0, 0, 0, 0, 0, 0, t2507, t2515, t2500, t2428, 0, 0, 0, 0, 0, 0, t2451, t2457, t2436, t2397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2549, t2540, t2531, t2450, 0, 0, 0, 0, 0, 0, t2484, t2497, t2454, t2408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2539, t2564, t2533, t2449, 0, 0, 0, 0, 0, 0, t2483, t2496, t2453, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2530, t2532, t2546, t2478, 0, 0, 0, 0, 0, 0, t2492, t2494, t2506, t2463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2522, t2514, t2493, t2418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2513, t2543, t2495, t2417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2492, t2494, t2506, t2463;];
f_new_reg  = t1;
