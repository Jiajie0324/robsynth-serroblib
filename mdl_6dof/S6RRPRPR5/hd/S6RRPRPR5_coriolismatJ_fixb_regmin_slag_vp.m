% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:35:16
% EndTime: 2019-03-09 10:36:19
% DurationCPUTime: 41.92s
% Computational Cost: add. (27415->1020), mult. (71219->1430), div. (0->0), fcn. (81061->12), ass. (0->717)
t1023 = cos(pkin(6));
t656 = sin(qJ(4));
t804 = t1023 * t656;
t653 = sin(pkin(6));
t1022 = cos(pkin(11));
t657 = sin(qJ(2));
t802 = t1022 * t657;
t652 = sin(pkin(11));
t660 = cos(qJ(2));
t955 = t652 * t660;
t583 = (-t802 - t955) * t653;
t659 = cos(qJ(4));
t968 = t583 * t659;
t527 = t804 - t968;
t651 = sin(pkin(12));
t513 = t527 * t651;
t953 = t653 * t660;
t954 = t653 * t657;
t581 = -t1022 * t953 + t652 * t954;
t654 = cos(pkin(12));
t973 = t581 * t654;
t1079 = -t513 + t973;
t658 = cos(qJ(6));
t1084 = t658 * t1079;
t974 = t581 * t651;
t981 = t527 * t654;
t390 = t974 + t981;
t655 = sin(qJ(6));
t258 = -t655 * t390 + t1084;
t1089 = t258 * t659;
t245 = -t1089 / 0.2e1;
t969 = t583 * t656;
t525 = -t1023 * t659 - t969;
t927 = t658 * t651;
t939 = t655 * t654;
t610 = t927 + t939;
t586 = t610 * t656;
t967 = t586 * t525;
t822 = -t967 / 0.2e1;
t445 = t659 * t581;
t970 = t583 * t651;
t440 = -t445 * t654 - t970;
t930 = t658 * t440;
t570 = t583 * t654;
t439 = -t445 * t651 + t570;
t944 = t655 * t439;
t916 = t944 / 0.2e1 - t930 / 0.2e1;
t1093 = t245 + t822 - t916;
t1095 = qJD(2) * t1093;
t425 = t967 / 0.2e1;
t827 = t1089 / 0.2e1;
t1092 = t827 + t425 - t916;
t854 = t525 * qJD(1);
t837 = t258 * t854;
t1094 = qJD(2) * t1092 - t837;
t255 = -t655 * t1079 - t658 * t390;
t1090 = t255 * t659;
t825 = -t1090 / 0.2e1;
t826 = t1090 / 0.2e1;
t1046 = t610 / 0.2e1;
t716 = -t939 / 0.2e1 - t927 / 0.2e1;
t700 = t1046 - t716;
t268 = t700 * t525;
t838 = t255 * t854;
t1091 = qJD(4) * t268 - t838;
t641 = pkin(2) * t652 + pkin(9);
t805 = pkin(5) * t651 + t641;
t599 = t805 * t656;
t1051 = -t599 / 0.2e1;
t643 = -pkin(5) * t654 - pkin(4);
t1045 = t643 / 0.2e1;
t1072 = t1084 / 0.2e1;
t1088 = t390 / 0.2e1;
t1064 = t525 / 0.2e1;
t1063 = t527 / 0.2e1;
t1040 = t654 / 0.2e1;
t735 = t1079 * t1040;
t580 = t581 ^ 2;
t1083 = t580 * t659;
t647 = t653 ^ 2;
t1082 = t647 * t657;
t926 = t658 * t654;
t940 = t655 * t651;
t1076 = t926 - t940;
t1048 = -t1076 / 0.2e1;
t1081 = (t581 * t1048 - t258 / 0.2e1) * t656;
t1049 = t1076 / 0.2e1;
t714 = -t926 / 0.2e1 + t940 / 0.2e1;
t702 = t1049 + t714;
t480 = t702 * t659;
t468 = t480 * qJD(4);
t850 = t586 * qJD(6);
t1078 = -t850 - t468;
t646 = t651 ^ 2;
t648 = t654 ^ 2;
t630 = t648 + t646;
t1036 = t659 / 0.2e1;
t812 = t658 * t1036;
t950 = t654 * t659;
t814 = t950 / 0.2e1;
t1037 = -t659 / 0.2e1;
t820 = t610 * t1037;
t476 = t651 * t812 + t655 * t814 + t820;
t589 = t1076 * t656;
t847 = t659 * qJD(2);
t569 = t589 * t847;
t579 = t589 * qJD(6);
t1077 = -qJD(4) * t476 + t569 - t579;
t983 = t525 * t656;
t824 = -t983 / 0.2e1;
t723 = t1036 * t527 + t824;
t1075 = t723 * qJD(4);
t418 = t658 * t439;
t943 = t655 * t440;
t915 = t943 / 0.2e1 + t418 / 0.2e1;
t588 = t610 * t659;
t722 = t1063 * t586 + t1064 * t588;
t635 = t656 * t847;
t795 = qJD(1) * t723 + t635;
t710 = -qJD(2) * t723 + t527 * t854;
t1074 = -pkin(4) / 0.2e1;
t1032 = pkin(8) + qJ(3);
t839 = pkin(1) * t1023;
t636 = t660 * t839;
t572 = -t1032 * t954 + t636;
t532 = pkin(2) * t1023 + t572;
t789 = t657 * t839;
t573 = t1032 * t953 + t789;
t803 = t1022 * t573;
t383 = t652 * t532 + t803;
t356 = pkin(9) * t1023 + t383;
t923 = t659 * t356;
t840 = -pkin(2) * t660 - pkin(1);
t404 = t581 * pkin(3) + t583 * pkin(9) + t653 * t840;
t938 = t656 * t404;
t254 = t923 + t938;
t1073 = t254 / 0.2e1;
t1069 = -t439 / 0.2e1;
t642 = -pkin(2) * t1022 - pkin(3);
t776 = -t659 * pkin(4) - t656 * qJ(5);
t604 = t776 + t642;
t592 = t654 * t604;
t921 = t659 * t641;
t518 = -t651 * t921 + t592;
t1068 = -t518 / 0.2e1;
t1067 = t518 / 0.2e1;
t614 = t654 * t921;
t519 = t651 * t604 + t614;
t1066 = -t519 / 0.2e1;
t1065 = -t525 / 0.2e1;
t957 = t651 * t656;
t613 = t641 * t957;
t1033 = t656 * pkin(4);
t626 = -qJ(5) * t659 + t1033;
t541 = t654 * t626 + t613;
t1062 = -t541 / 0.2e1;
t951 = t654 * t656;
t542 = t651 * t626 - t641 * t951;
t1061 = t542 / 0.2e1;
t1060 = -t581 / 0.2e1;
t1059 = t581 / 0.2e1;
t1058 = t583 / 0.2e1;
t1057 = -t586 / 0.2e1;
t1056 = -t588 / 0.2e1;
t1055 = -t589 / 0.2e1;
t1054 = t589 / 0.2e1;
t590 = t1076 * t659;
t1053 = -t590 / 0.2e1;
t1052 = t590 / 0.2e1;
t600 = t805 * t659;
t1050 = -t600 / 0.2e1;
t1047 = -t610 / 0.2e1;
t649 = t656 ^ 2;
t1044 = t649 / 0.2e1;
t1043 = -t651 / 0.2e1;
t1042 = t651 / 0.2e1;
t1041 = -t654 / 0.2e1;
t1039 = -t656 / 0.2e1;
t1038 = t656 / 0.2e1;
t1035 = t581 * pkin(4);
t1034 = t583 * pkin(4);
t1031 = pkin(10) + qJ(5);
t1030 = pkin(2) * qJD(2);
t253 = t656 * t356 - t659 * t404;
t206 = t253 - t1035;
t166 = -pkin(5) * t1079 + t206;
t543 = t652 * t573;
t416 = t1022 * t572 - t543;
t393 = t656 * t416;
t846 = pkin(2) * t954;
t433 = -pkin(3) * t583 + pkin(9) * t581 + t846;
t922 = t659 * t433;
t799 = -t393 + t922;
t233 = -t799 + t1034;
t179 = pkin(5) * t439 + t233;
t282 = t418 + t943;
t442 = t656 * t581;
t975 = t581 * qJ(5);
t205 = t254 + t975;
t382 = t1022 * t532 - t543;
t355 = -pkin(3) * t1023 - t382;
t777 = t525 * pkin(4) - t527 * qJ(5);
t250 = t355 + t777;
t117 = -t205 * t651 + t250 * t654;
t677 = pkin(5) * t525 - pkin(10) * t390 + t117;
t118 = t654 * t205 + t651 * t250;
t77 = pkin(10) * t1079 + t118;
t48 = t655 * t77 - t658 * t677;
t394 = t659 * t416;
t417 = t656 * t433;
t918 = t394 + t417;
t232 = -qJ(5) * t583 + t918;
t415 = t652 * t572 + t803;
t290 = -t581 * t626 + t415;
t147 = -t232 * t651 + t654 * t290;
t80 = -pkin(5) * t442 - pkin(10) * t440 + t147;
t1025 = t658 * t80;
t148 = t654 * t232 + t651 * t290;
t88 = -pkin(10) * t439 + t148;
t1026 = t655 * t88;
t53 = t1025 - t1026;
t5 = t166 * t282 - t179 * t258 + t442 * t48 + t525 * t53;
t1029 = t5 * qJD(1);
t283 = t930 - t944;
t49 = t655 * t677 + t658 * t77;
t1024 = t658 * t88;
t1027 = t655 * t80;
t54 = t1024 + t1027;
t6 = t166 * t283 - t179 * t255 + t442 * t49 - t525 * t54;
t1028 = t6 * qJD(1);
t27 = t166 * t258 + t48 * t525;
t1021 = qJD(1) * t27;
t28 = -t166 * t255 - t49 * t525;
t1020 = qJD(1) * t28;
t733 = t1040 * t148 + t1043 * t147;
t669 = t1037 * t233 + t656 * t733;
t961 = t641 * t581;
t673 = t1044 * t961 + t1066 * t440 + t1067 * t439;
t40 = t669 + t673;
t1019 = qJD(1) * t40;
t52 = t1079 * t118 - t117 * t390;
t1018 = qJD(1) * t52;
t324 = t1076 * t525;
t994 = t324 * t659;
t675 = (t581 * t1047 + t255 / 0.2e1) * t656 - t994 / 0.2e1;
t721 = t1052 * t525 + t1054 * t527;
t72 = t675 + t721;
t1017 = qJD(1) * t72;
t937 = t656 * t586;
t843 = t581 * t937;
t925 = t659 * t282;
t83 = t843 - t925;
t1016 = qJD(1) * t83;
t328 = t651 * t525;
t191 = -pkin(5) * t328 + t254;
t323 = t610 * t525;
t350 = pkin(4) * t527 + qJ(5) * t525;
t177 = t253 * t651 + t654 * t350;
t984 = t525 * t654;
t123 = pkin(5) * t527 + pkin(10) * t984 + t177;
t935 = t658 * t123;
t178 = -t654 * t253 + t651 * t350;
t156 = pkin(10) * t328 + t178;
t948 = t655 * t156;
t768 = t935 - t948;
t11 = -t166 * t323 - t191 * t258 - t48 * t527 + t525 * t768;
t1015 = t11 * qJD(1);
t1014 = t117 * t654;
t1013 = t118 * t651;
t934 = t658 * t156;
t949 = t655 * t123;
t767 = t934 + t949;
t12 = -t166 * t324 - t191 * t255 - t49 * t527 - t525 * t767;
t1012 = t12 * qJD(1);
t1011 = t177 * t651;
t1010 = t178 * t654;
t19 = t117 * t147 + t118 * t148 + t206 * t233;
t1009 = t19 * qJD(1);
t20 = t1079 * t148 - t117 * t440 - t118 * t439 - t147 * t390;
t1008 = t20 * qJD(1);
t21 = t117 * t177 + t118 * t178 + t206 * t254;
t1007 = t21 * qJD(1);
t1006 = t233 * t651;
t1005 = t233 * t654;
t26 = t178 * t1079 - t177 * t390 + (t1013 + t1014) * t525;
t1000 = t26 * qJD(1);
t999 = t282 * t525;
t998 = t283 * t525;
t997 = t283 * t610;
t29 = -t1079 * t233 - t117 * t442 + t147 * t525 + t206 * t439;
t996 = t29 * qJD(1);
t30 = t118 * t442 - t148 * t525 + t206 * t440 + t233 * t390;
t995 = t30 * qJD(1);
t35 = t117 * t527 - t254 * t1079 + (-t206 * t651 + t177) * t525;
t993 = t35 * qJD(1);
t992 = t355 * t656;
t991 = t355 * t659;
t36 = -t118 * t527 + t254 * t390 + (-t206 * t654 - t178) * t525;
t990 = t36 * qJD(1);
t39 = -t117 * t439 + t118 * t440 - t206 * t442;
t989 = t39 * qJD(1);
t988 = t439 * t651;
t987 = t440 * t654;
t986 = t518 * t659;
t985 = t519 * t659;
t982 = t527 * t583;
t980 = t541 * t390;
t979 = t541 * t656;
t978 = t542 * t656;
t57 = t255 * t282 + t258 * t283;
t977 = t57 * qJD(1);
t58 = t253 * t583 + t415 * t525 + (t799 - t992) * t581;
t976 = t58 * qJD(1);
t972 = t580 * t656;
t971 = t583 * t525;
t964 = t589 * t525;
t59 = t254 * t583 + t415 * t527 + (-t918 - t991) * t581;
t963 = t59 * qJD(1);
t64 = -t255 * t323 - t258 * t324;
t962 = t64 * qJD(1);
t960 = t641 * t656;
t959 = t647 * t660;
t958 = t651 * t440;
t956 = t651 * t659;
t952 = t654 * t439;
t475 = pkin(5) * t656 - pkin(10) * t950 + t541;
t942 = t655 * t475;
t512 = -pkin(10) * t956 + t542;
t941 = t655 * t512;
t936 = t656 * t659;
t929 = t658 * t475;
t928 = t658 * t512;
t924 = t659 * t323;
t730 = -t1052 * t255 - t1054 * t324;
t68 = -t997 / 0.2e1 + t730;
t920 = t68 * qJD(1);
t85 = -(-t383 + t415) * t583 + (t382 - t416) * t581;
t919 = t85 * qJD(1);
t650 = t659 ^ 2;
t634 = t650 - t649;
t821 = t964 / 0.2e1;
t101 = t821 + t826 + t915;
t911 = qJD(1) * t101;
t771 = t821 - t915;
t102 = t825 + t771;
t910 = qJD(1) * t102;
t103 = t826 + t771;
t909 = qJD(1) * t103;
t106 = t822 + t827 + t916;
t908 = qJD(1) * t106;
t845 = t258 * t442;
t113 = t845 - t999;
t907 = qJD(1) * t113;
t844 = t255 * t442;
t116 = t844 - t998;
t906 = qJD(1) * t116;
t126 = t258 * t527 + t323 * t525;
t905 = qJD(1) * t126;
t127 = -t255 * t527 - t324 * t525;
t904 = qJD(1) * t127;
t149 = t253 * t581 - t355 * t525;
t903 = qJD(1) * t149;
t150 = -t254 * t581 + t355 * t527;
t902 = qJD(1) * t150;
t165 = t1079 * t440 + t439 * t390;
t901 = qJD(1) * t165;
t773 = t656 * t1079;
t189 = -t439 * t525 + t581 * t773;
t900 = qJD(1) * t189;
t190 = -t390 * t442 - t440 * t525;
t899 = qJD(1) * t190;
t192 = t382 * t583 - t383 * t581;
t898 = qJD(1) * t192;
t556 = t442 / 0.2e1;
t726 = -t1043 * t390 + t735;
t197 = t656 * t726 + t556;
t897 = qJD(1) * t197;
t896 = qJD(1) * t255;
t297 = t971 - t972;
t895 = qJD(1) * t297;
t298 = -t971 - t972;
t894 = qJD(1) * t298;
t299 = -t982 - t1083;
t893 = qJD(1) * t299;
t322 = -t982 + t1083;
t892 = qJD(1) * t322;
t891 = qJD(1) * t581;
t890 = qJD(1) * t659;
t889 = qJD(2) * t581;
t888 = qJD(2) * t589;
t887 = qJD(3) * t659;
t885 = qJD(4) * t581;
t884 = qJD(4) * t1076;
t883 = qJD(4) * t610;
t882 = qJD(4) * t643;
t881 = qJD(4) * t651;
t880 = qJD(4) * t654;
t879 = qJD(4) * t656;
t878 = qJD(4) * t659;
t877 = qJD(5) * t525;
t876 = qJD(5) * t659;
t875 = qJD(6) * t525;
t874 = qJD(6) * t610;
t114 = -t845 - t999;
t873 = t114 * qJD(1);
t115 = t844 + t998;
t872 = t115 * qJD(1);
t146 = pkin(2) * t1082 * t840 - t382 * t415 + t383 * t416;
t871 = t146 * qJD(1);
t152 = t659 * t735 - t987 / 0.2e1 + (t1036 * t390 + t1069) * t651;
t870 = t152 * qJD(1);
t173 = t973 * t656;
t869 = t173 * qJD(1);
t186 = (-t952 + t958) * t656;
t868 = t186 * qJD(1);
t280 = t283 * t659;
t462 = t589 * t442;
t198 = t462 - t280;
t867 = t198 * qJD(1);
t781 = t1079 / 0.2e1 + t973 / 0.2e1;
t202 = t781 * t659 + (t983 / 0.2e1 + t1058) * t651;
t866 = t202 * qJD(1);
t816 = -t951 / 0.2e1;
t786 = t525 * t816;
t823 = t974 / 0.2e1;
t204 = t786 - t570 / 0.2e1 + (t1088 + t823) * t659;
t865 = t204 * qJD(1);
t229 = -t659 * t439 + t649 * t974;
t864 = t229 * qJD(1);
t779 = -t981 / 0.2e1 + t1088;
t252 = (t823 + t779) * t656;
t863 = t252 * qJD(1);
t701 = t1046 + t716;
t267 = t701 * t525;
t862 = t267 * qJD(4);
t763 = t525 * t659 + t527 * t656;
t284 = t763 * t581;
t861 = t284 * qJD(1);
t316 = -t440 * t659 + t649 * t973;
t860 = t316 * qJD(1);
t706 = t1022 * t1058 + t1060 * t652;
t386 = (-t954 / 0.2e1 + t706) * pkin(2);
t859 = t386 * qJD(1);
t858 = t442 * qJD(1);
t857 = t445 * qJD(1);
t856 = t969 * qJD(1);
t463 = t583 ^ 2 + t580;
t855 = t463 * qJD(1);
t817 = -t956 / 0.2e1;
t479 = -t1037 * t1076 + t654 * t812 + t655 * t817;
t466 = t479 * qJD(4);
t697 = -pkin(8) * t953 - t789;
t539 = pkin(1) * t1082 - t1023 * t697;
t853 = t539 * qJD(1);
t603 = pkin(8) * t954 - t636;
t540 = pkin(1) * t959 - t1023 * t603;
t852 = t540 * qJD(1);
t577 = (t802 / 0.2e1 + t955 / 0.2e1) * t653;
t851 = t577 * qJD(1);
t602 = t1076 * qJD(6);
t609 = (-t657 ^ 2 + t660 ^ 2) * t647;
t849 = t609 * qJD(1);
t848 = t656 * qJD(2);
t842 = t657 * t959;
t430 = -t964 / 0.2e1;
t841 = t430 - t915;
t836 = t390 * t854;
t834 = t1076 * t879;
t833 = t641 * t878;
t832 = t656 * t876;
t831 = t581 * t890;
t830 = t583 * t890;
t829 = t656 * t878;
t828 = t206 * t1037;
t819 = -t957 / 0.2e1;
t818 = t957 / 0.2e1;
t815 = t951 / 0.2e1;
t813 = -t442 / 0.2e1;
t811 = t924 / 0.2e1;
t810 = -t445 / 0.2e1;
t809 = t921 / 0.2e1;
t808 = 0.2e1 * t1088;
t807 = -t394 / 0.2e1 - t417 / 0.2e1;
t806 = t1031 * t651;
t801 = t630 * t659;
t800 = t1023 * qJD(1);
t568 = t586 * t847;
t797 = qJD(1) * t1092 - t568;
t796 = -qJD(1) * t1093 - t568;
t478 = t700 * t659;
t793 = qJD(4) * t478 + t569;
t792 = -qJD(4) - t891;
t791 = -qJD(6) - t854;
t790 = qJD(5) + t882;
t788 = qJD(1) * t842;
t787 = t654 * t556;
t785 = t641 * t824;
t784 = t854 + qJD(6) / 0.2e1;
t783 = t653 * t800;
t782 = qJD(2) * t653 * t1023;
t780 = -t393 / 0.2e1 + t922 / 0.2e1;
t775 = t641 * t1079;
t470 = -pkin(10) * t957 + t519;
t678 = -pkin(10) * t951 + t592 + (-t641 * t651 - pkin(5)) * t659;
t307 = t658 * t470 + t655 * t678;
t764 = t928 + t942;
t129 = -t307 * t656 + t600 * t589 + t599 * t590 + t659 * t764;
t625 = t1031 * t654;
t531 = t658 * t625 - t655 * t806;
t661 = t1037 * t767 - t1050 * t255 - t1051 * t324 + t1053 * t166 + t1055 * t191 + t1063 * t307 + t1064 * t764;
t731 = t1045 * t283 + t1046 * t179;
t2 = (t531 * t1059 + t49 / 0.2e1) * t656 + t661 + t731;
t770 = -t2 * qJD(1) + t129 * qJD(2);
t207 = (t979 + t986) * t654 + (t978 + t985) * t651;
t9 = t513 * t1061 + t980 / 0.2e1 + (qJ(5) * t1069 + t148 / 0.2e1 + t542 * t1060 + t518 * t1065 + t177 * t1038 + t117 * t1036) * t654 + (t440 * qJ(5) / 0.2e1 - t147 / 0.2e1 + t519 * t1065 + t178 * t1038 + t118 * t1036) * t651;
t769 = t9 * qJD(1) + t207 * qJD(2);
t766 = t1010 - t1011;
t765 = t929 - t941;
t762 = -t541 * t651 + t542 * t654;
t761 = -t581 * t642 + t583 * t641;
t760 = t800 + qJD(2);
t667 = t49 * t1036 + t1051 * t255 + t166 * t1054 + t307 * t1065;
t737 = -t1026 / 0.2e1 + t1025 / 0.2e1;
t13 = -t667 + t737;
t236 = -t307 * t659 - t599 * t589;
t759 = qJD(1) * t13 + qJD(2) * t236;
t306 = t470 * t655 - t658 * t678;
t668 = t1037 * t48 - t1051 * t258 + t1057 * t166 + t1064 * t306;
t738 = -t1027 / 0.2e1 - t1024 / 0.2e1;
t14 = -t668 + t738;
t235 = -t306 * t659 - t586 * t599;
t758 = qJD(1) * t14 - qJD(2) * t235;
t664 = t828 + (t975 / 0.2e1 + t641 * t1064 - t254 / 0.2e1) * t656;
t684 = t1039 * t117 + t1062 * t525 + t1068 * t527;
t741 = pkin(4) * t1069 - t1005 / 0.2e1;
t22 = (t177 / 0.2e1 + t775 / 0.2e1) * t659 + t664 * t651 + t684 + t741;
t314 = -t518 * t656 + (t541 - 0.2e1 * t613) * t659;
t757 = t22 * qJD(1) + t314 * qJD(2);
t683 = t1038 * t118 + t1061 * t525 + t1063 * t519;
t740 = t440 * t1074 + t1006 / 0.2e1;
t23 = (-t178 / 0.2e1 - t641 * t390 / 0.2e1) * t659 + t664 * t654 + t683 + t740;
t315 = t542 * t659 + (-t519 + 0.2e1 * t614) * t656;
t756 = t23 * qJD(1) - t315 * qJD(2);
t69 = -t924 / 0.2e1 - t1081 + t722;
t755 = qJD(1) * t69;
t320 = (t518 * t654 + t519 * t651) * t656;
t707 = t1034 / 0.2e1 - t780;
t727 = t1066 * t1079 - t1068 * t390;
t37 = (t1013 / 0.2e1 + t1014 / 0.2e1) * t656 + t707 + t727;
t754 = qJD(1) * t37 + qJD(2) * t320;
t321 = -t586 * t590 - t588 * t589;
t665 = -t1053 * t258 - t1055 * t323 - t1056 * t255 - t1057 * t324;
t729 = t1047 * t282 + t1049 * t283;
t51 = t665 - t729;
t753 = t51 * qJD(1) + t321 * qJD(2);
t453 = -t659 * t588 + t937;
t70 = t722 + t811 + t1081;
t752 = qJD(1) * t70 + qJD(2) * t453;
t454 = -t589 * t656 + t590 * t659;
t71 = t675 - t721;
t751 = qJD(1) * t71 + qJD(2) * t454;
t125 = (0.2e1 * t1042 * t1079 + (-t1040 + t1041) * t390) * t656;
t606 = t630 * t649;
t750 = qJD(1) * t125 - qJD(2) * t606;
t749 = -qJD(1) * t267 - qJD(2) * t476;
t748 = qJD(1) * t268 - qJD(2) * t478;
t269 = (t1048 + t714) * t525;
t747 = qJD(1) * t269 + qJD(2) * t479;
t270 = t702 * t525;
t746 = -qJD(1) * t270 + qJD(2) * t480;
t303 = t525 ^ 2 - t527 ^ 2;
t745 = qJD(1) * t303 - qJD(2) * t763;
t744 = -qJD(1) * t763 + qJD(2) * t634;
t713 = -t513 / 0.2e1 + t781;
t135 = t651 * t808 + t654 * t713;
t743 = qJD(1) * t135 + qJD(4) * t630;
t742 = t883 + t888;
t520 = -t968 / 0.2e1 + t804 / 0.2e1;
t739 = t520 * qJD(1) + t848 / 0.2e1;
t736 = -t255 * t1038 + t610 * t813 + t994 / 0.2e1;
t734 = t1041 * t118 + t1042 * t117;
t732 = t1045 * t282 + t1048 * t179;
t728 = t992 / 0.2e1 + t642 * t1063;
t725 = t987 / 0.2e1 + t988 / 0.2e1;
t724 = t1040 * t519 + t1043 * t518;
t720 = -t949 / 0.2e1 - t934 / 0.2e1;
t719 = -t948 / 0.2e1 + t935 / 0.2e1;
t718 = -t942 / 0.2e1 - t928 / 0.2e1;
t717 = -t941 / 0.2e1 + t929 / 0.2e1;
t715 = -t938 / 0.2e1 - t923 / 0.2e1;
t674 = t991 / 0.2e1 + t642 * t1065 + t641 * t556;
t138 = t674 - t807;
t712 = -qJD(1) * t138 - t642 * t847;
t140 = t393 / 0.2e1 + (-t961 / 0.2e1 - t433 / 0.2e1) * t659 + t728;
t711 = -qJD(1) * t140 - t642 * t848;
t709 = -qJD(4) * t577 + t583 * t891;
t708 = qJD(6) * t1039 + t795;
t61 = t255 * t589 - t258 * t586;
t63 = t1076 * t258 + t255 * t610;
t66 = -t255 ^ 2 + t258 ^ 2;
t705 = qJD(1) * t66 + qJD(2) * t61 + qJD(4) * t63;
t704 = t725 * qJ(5);
t703 = t714 * t525;
t530 = t625 * t655 + t658 * t806;
t662 = t1036 * t768 - t1050 * t258 - t1051 * t323 + t1056 * t166 + t1057 * t191 + t1063 * t306 + t1065 * t765;
t1 = (t530 * t1059 + t48 / 0.2e1) * t656 + t662 + t732;
t128 = t306 * t656 - t600 * t586 - t599 * t588 + t659 * t765;
t699 = -t1 * qJD(1) - t128 * qJD(2);
t188 = (t978 / 0.2e1 + t985 / 0.2e1) * t654 + (-t979 / 0.2e1 - t986 / 0.2e1) * t651 + (-t650 / 0.2e1 + t1044) * t641;
t234 = t641 ^ 2 * t936 + t518 * t541 + t519 * t542;
t666 = t117 * t1062 - t118 * t542 / 0.2e1 + t177 * t1068 + t178 * t1066;
t670 = qJ(5) * t733 + t1074 * t233;
t7 = (t1039 * t254 + t828) * t641 + t666 + t670;
t698 = -t7 * qJD(1) + t234 * qJD(2) + t188 * qJD(3);
t17 = t704 + (t1073 + t734) * t659 + (t1035 / 0.2e1 - t1010 / 0.2e1 + t1011 / 0.2e1 - t206 / 0.2e1) * t656;
t551 = (-0.1e1 + t630) * t936;
t696 = -t17 * qJD(1) + t188 * qJD(2) + t551 * qJD(3);
t679 = t1036 * t531 + t1045 * t589 + t1046 * t599;
t182 = -t679 + t717;
t681 = -t1045 * t255 + t1046 * t166 + t1065 * t531;
t31 = -t681 + t719;
t477 = t701 * t659;
t695 = t31 * qJD(1) + t182 * qJD(2) + t477 * qJD(3);
t680 = t1037 * t530 - t1045 * t586 + t1049 * t599;
t183 = -t680 + t718;
t682 = t1045 * t258 + t166 * t1049 + t530 * t1064;
t32 = -t682 + t720;
t694 = t32 * qJD(1) + t183 * qJD(2) + t480 * qJD(3);
t291 = -t1076 * t586 - t610 * t589;
t384 = t586 ^ 2 - t589 ^ 2;
t693 = qJD(1) * t61 + qJD(2) * t384 + qJD(4) * t291;
t461 = t1076 ^ 2 - t610 ^ 2;
t692 = qJD(1) * t63 + qJD(2) * t291 + qJD(4) * t461;
t155 = t1079 ^ 2 + t390 ^ 2;
t691 = qJD(1) * t155 - qJD(2) * t125 + qJD(4) * t135;
t142 = -t655 * t713 - t658 * t808;
t690 = qJD(1) * t142 - t742;
t143 = -t808 * t655 + 0.2e1 * t1072;
t689 = qJD(1) * t143 - qJD(2) * t586 + t884;
t120 = -t1047 * t258 - t1049 * t255;
t98 = -t1055 * t258 - t1057 * t255;
t688 = -qJD(2) * t98 - qJD(4) * t120 + t258 * t896;
t334 = -t1046 * t586 + t1049 * t589;
t687 = qJD(1) * t98 + qJD(4) * t334 - t586 * t888;
t686 = -qJD(1) * t120 - qJD(2) * t334 - t1076 * t883;
t685 = qJD(6) * t520 + t710;
t676 = qJD(4) * t776 + t876;
t672 = -t1038 * t258 - t1076 * t813 + t811;
t310 = t809 - t724;
t663 = qJ(5) * t726 - t734;
t43 = t663 + t715;
t593 = (0.1e1 / 0.2e1 - t648 / 0.2e1 - t646 / 0.2e1) * t656;
t620 = t630 * qJ(5);
t671 = qJD(1) * t43 - qJD(2) * t310 - qJD(3) * t593 + qJD(4) * t620;
t644 = t879 / 0.2e1;
t598 = t610 * t879;
t594 = (0.1e1 + t630) * t1038;
t571 = t577 * qJD(2);
t561 = t583 * t847;
t481 = t659 * t716 + t820;
t469 = t479 * qJD(6);
t467 = t480 * qJD(6);
t443 = t813 + t556;
t437 = t443 * qJD(4);
t436 = t442 * qJD(4);
t399 = -t858 - t879;
t385 = t846 / 0.2e1 + t706 * pkin(2);
t377 = qJD(2) * t813 + t520 * qJD(4);
t327 = t334 * qJD(6);
t311 = t809 + t724;
t288 = t291 * qJD(6);
t287 = t763 * qJD(4);
t272 = -t324 / 0.2e1 + t703;
t271 = t324 / 0.2e1 + t703;
t251 = t651 * t813 + t656 * t779;
t203 = t786 - t390 * t1037 + t651 * t810 + t570 / 0.2e1;
t201 = t525 * t818 + t1079 * t1036 + t654 * t810 - t970 / 0.2e1;
t196 = (t1060 + t726) * t656;
t187 = t188 * qJD(4);
t185 = t679 + t717;
t184 = t680 + t718;
t174 = t527 * t819 - t773 / 0.2e1 + t787;
t151 = (t1042 * t390 + t735) * t659 + t725;
t144 = t1072 - t1084 / 0.2e1;
t141 = t641 * t810 + t728 + t780;
t139 = t674 + t807;
t130 = t135 * qJD(5);
t124 = t125 * qJD(5);
t119 = t120 * qJD(6);
t112 = t825 + t841;
t111 = t826 + t841;
t110 = t430 + t825 + t915;
t108 = t425 + t245 + t916;
t95 = t98 * qJD(6);
t76 = -t721 + t736;
t75 = t721 + t736;
t74 = -t672 - t722;
t73 = t672 - t722;
t67 = t997 / 0.2e1 + t730;
t62 = t63 * qJD(6);
t60 = t61 * qJD(6);
t50 = t665 + t729;
t42 = t663 - t715;
t41 = t669 - t673;
t38 = t117 * t816 + t118 * t819 + t707 - t727;
t34 = t681 + t719;
t33 = t682 + t720;
t25 = qJ(5) * t787 + t1036 * t178 + t206 * t814 + t254 * t815 + t390 * t809 + t654 * t785 - t683 + t740;
t24 = t177 * t1037 - t775 * t1036 + t254 * t818 + t206 * t956 / 0.2e1 - t684 + t741 + (qJ(5) * t556 + t785) * t651;
t18 = pkin(4) * t556 + t1037 * t254 + t1038 * t206 + t117 * t817 + t118 * t814 + t177 * t819 + t178 * t815 + t704;
t16 = t667 + t737;
t15 = t668 + t738;
t10 = t1079 * t1061 + t519 * t328 / 0.2e1 + t178 * t819 + t118 * t817 - t980 / 0.2e1 + t984 * t1067 + t177 * t816 - t117 * t950 / 0.2e1 + (-t952 / 0.2e1 + t958 / 0.2e1) * qJ(5) + t733;
t8 = t1073 * t960 + t206 * t809 - t666 + t670;
t4 = t1039 * t49 + t531 * t556 - t661 + t731;
t3 = t1039 * t48 + t530 * t556 - t662 + t732;
t44 = [0, 0, 0, qJD(2) * t842, t609 * qJD(2), t660 * t782, -t657 * t782, 0, -t539 * qJD(2), -t540 * qJD(2), qJD(2) * t85 + qJD(3) * t463, qJD(2) * t146 + qJD(3) * t192 (-qJD(4) * t525 - t581 * t847) * t527, qJD(2) * t284 + qJD(4) * t303, qJD(2) * t299 - t525 * t885, -qJD(2) * t298 - t527 * t885, -t583 * t889, qJD(2) * t58 - qJD(3) * t297 + qJD(4) * t150, qJD(2) * t59 + qJD(3) * t322 + qJD(4) * t149, qJD(2) * t29 + qJD(3) * t189 + qJD(4) * t35 - t390 * t877, qJD(2) * t30 + qJD(3) * t190 + qJD(4) * t36 - t1079 * t877, qJD(2) * t20 + qJD(3) * t165 + qJD(4) * t26 + qJD(5) * t155, qJD(2) * t19 + qJD(3) * t39 + qJD(4) * t21 + qJD(5) * t52 -(qJD(2) * t283 - qJD(4) * t324 + qJD(6) * t258) * t255, qJD(2) * t57 + qJD(4) * t64 + qJD(6) * t66, qJD(2) * t115 + qJD(4) * t127 + t258 * t875, qJD(2) * t114 + qJD(4) * t126 + t255 * t875 (qJD(4) * t527 - t581 * t848) * t525, qJD(2) * t5 + qJD(3) * t113 + qJD(4) * t11 + qJD(6) * t28 + t255 * t877, qJD(2) * t6 + qJD(3) * t116 + qJD(4) * t12 + qJD(6) * t27 - t258 * t877; 0, 0, 0, t788, t849, t760 * t953, -t760 * t954, 0, qJD(2) * t697 - t853, qJD(2) * t603 - t852, t919 + (t1022 * t581 + t583 * t652) * t1030, t871 + (-t1022 * t415 + t416 * t652) * t1030 + t385 * qJD(3), t1075 + (-qJD(1) * t527 - t848) * t445, -t634 * t889 - t287 + t861, -t583 * t848 + t893, t437 - t561 - t894, -t709, t976 + (-t415 * t659 + t656 * t761) * qJD(2) + t141 * qJD(4), t963 + (t415 * t656 + t659 * t761) * qJD(2) + t139 * qJD(4), -t147 * t847 + t996 + t24 * qJD(4) + t203 * qJD(5) + (t439 * t641 - t518 * t581 + t1006) * t848, t148 * t847 + t995 + t25 * qJD(4) + t201 * qJD(5) + (t440 * t641 + t519 * t581 + t1005) * t848, t1008 + (-t519 * t439 - t518 * t440 + (-t147 * t654 - t148 * t651) * t656) * qJD(2) + t10 * qJD(4) - t124, t1009 + (t147 * t518 + t148 * t519 + t233 * t960) * qJD(2) + t41 * qJD(3) + t8 * qJD(4) + t38 * qJD(5), t67 * qJD(4) + t95 + (t888 - t896) * t283, t977 + (-t282 * t589 - t283 * t586) * qJD(2) + t50 * qJD(4) + t60, t872 + (-t462 - t280) * qJD(2) + t75 * qJD(4) + t1093 * qJD(6), t873 + (t843 + t925) * qJD(2) + t74 * qJD(4) + t112 * qJD(6), -t1075 + (-t784 + t847) * t442, t1029 + (t179 * t586 + t282 * t599 + t306 * t442 - t53 * t659) * qJD(2) + t3 * qJD(4) + t110 * qJD(5) + t16 * qJD(6), t1028 + (t179 * t589 + t283 * t599 + t307 * t442 + t54 * t659) * qJD(2) + t4 * qJD(4) + t1092 * qJD(5) + t15 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t855, qJD(2) * t385 + t898, 0, 0, 0, 0, 0, t437 - t895, t892, qJD(4) * t174 + t900, qJD(4) * t251 + t899, qJD(4) * t151 + t901, t989 + t41 * qJD(2) + t18 * qJD(4) + t196 * qJD(5) + (t445 + t987 + t988) * qJD(3) * t656, 0, 0, 0, 0, 0, qJD(4) * t73 + qJD(6) * t111 + t907, qJD(4) * t76 + qJD(6) * t108 + t906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t710, t745, t792 * t525, t443 * qJD(2) + t527 * t792, t571, qJD(2) * t141 + qJD(3) * t443 - qJD(4) * t254 + t902, qJD(2) * t139 + qJD(4) * t253 + t903, t993 + t24 * qJD(2) + t174 * qJD(3) + (-t254 * t654 + t651 * t777) * qJD(4) - t328 * qJD(5), t254 * t881 + t990 + t25 * qJD(2) + t251 * qJD(3) + (qJD(4) * t777 - t877) * t654, t10 * qJD(2) + t151 * qJD(3) + qJD(4) * t766 + t1000 + t130, t1007 + t8 * qJD(2) + t18 * qJD(3) + (-t254 * pkin(4) + qJ(5) * t766) * qJD(4) + t42 * qJD(5), t67 * qJD(2) + t119 - (t883 - t896) * t324, t962 + t50 * qJD(2) + (-t1076 * t324 + t323 * t610) * qJD(4) + t62, qJD(2) * t75 + qJD(6) * t271 + t527 * t883 + t904, qJD(2) * t74 - qJD(6) * t267 + t527 * t884 + t905, t685, t1015 + t3 * qJD(2) + t73 * qJD(3) + (-t1076 * t191 - t323 * t643 - t527 * t530) * qJD(4) - t268 * qJD(5) + t34 * qJD(6), t1012 + t4 * qJD(2) + t76 * qJD(3) + (t191 * t610 - t324 * t643 - t527 * t531) * qJD(4) + t272 * qJD(5) + t33 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t203 - qJD(4) * t328 - t836, t201 * qJD(2) + (-qJD(1) * t1079 - t880) * t525, t691, qJD(2) * t38 + qJD(3) * t196 + qJD(4) * t42 + t1018, 0, 0, 0, 0, 0, qJD(2) * t110 - t1091, qJD(4) * t272 + qJD(6) * t144 + t1094; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688, t705, t271 * qJD(4) - t258 * t791 + t1095, t112 * qJD(2) - t255 * t791 - t862, t377, qJD(2) * t16 + qJD(3) * t111 + qJD(4) * t34 - qJD(6) * t49 + t1020, qJD(2) * t15 + qJD(3) * t108 + qJD(4) * t33 + qJD(5) * t144 + qJD(6) * t48 + t1021; 0, 0, 0, -t788, -t849, -t660 * t783, t657 * t783, 0, t853, t852, -t919, qJD(3) * t386 - t871, t527 * t831 + t1075, -t287 - t861, qJD(4) * t445 - t893, -t436 + t894, t709, qJD(4) * t140 + t583 * t887 - t976, -qJD(3) * t969 + qJD(4) * t138 - t963, -qJD(3) * t229 - qJD(4) * t22 + qJD(5) * t204 - t996, -qJD(3) * t316 - qJD(4) * t23 + qJD(5) * t202 - t995, -qJD(3) * t186 - qJD(4) * t9 - t1008 - t124, -qJD(3) * t40 - qJD(4) * t7 - qJD(5) * t37 - t1009, qJD(4) * t68 + t283 * t896 + t95, qJD(4) * t51 + t60 - t977, -qJD(4) * t71 - qJD(6) * t1092 - t872, -qJD(4) * t70 - qJD(6) * t103 - t873, t442 * t784 - t1075, -qJD(3) * t83 - qJD(4) * t1 - qJD(5) * t101 - qJD(6) * t13 - t1029, -qJD(3) * t198 - qJD(4) * t2 - qJD(5) * t1093 - qJD(6) * t14 - t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t829, t634 * qJD(4), 0, 0, 0, t642 * t879, t642 * t878, -qJD(4) * t314 + t654 * t832, qJD(4) * t315 - t651 * t832, -qJD(4) * t207 + qJD(5) * t606, qJD(4) * t234 - qJD(5) * t320 (qJD(4) * t590 - t850) * t589, qJD(4) * t321 + qJD(6) * t384, -qJD(4) * t454 + t659 * t850, -qJD(4) * t453 + t579 * t659, -t829, -qJD(4) * t128 - qJD(6) * t236 + t589 * t876, qJD(4) * t129 + qJD(6) * t235 - t586 * t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t859, 0, 0, 0, 0, 0, t830, -t856, -t864, -t860, -t868, t187 - t1019, 0, 0, 0, 0, 0, -t1016, -t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t795, t744, t857 + t878, t399, -t851, -t711 - t833, t641 * t879 - t712, -t614 * qJD(4) + t651 * t676 - t757, t651 * t833 + t654 * t676 - t756, qJD(4) * t762 - t769 (-pkin(4) * t921 + qJ(5) * t762) * qJD(4) + t311 * qJD(5) + t698, t590 * t742 + t327 + t920 (t1076 * t590 - t588 * t610) * qJD(4) + t288 + t753, -t467 + t598 - t751, -qJD(6) * t476 - t752 + t834, -t708 (-t1076 * t600 - t530 * t656 + t588 * t643) * qJD(4) + t478 * qJD(5) + t185 * qJD(6) + t699 (-t531 * t656 + t590 * t643 + t600 * t610) * qJD(4) + t479 * qJD(5) + t184 * qJD(6) + t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t865 + (t654 * t848 + t881) * t659, t866 + (-t651 * t848 + t880) * t659, -t750, qJD(4) * t311 - t754, 0, 0, 0, 0, 0, t793 - t911, t466 + t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t687, t693, -t797 + t1078, -t909 + t1077, qJD(1) * t556 + t644, qJD(4) * t185 - qJD(6) * t307 - t759, qJD(4) * t184 + qJD(6) * t306 - t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t855, -qJD(2) * t386 - t898, 0, 0, 0, 0, 0, -t436 - t561 + t895, qJD(2) * t969 - t581 * t878 - t892, qJD(2) * t229 - qJD(4) * t173 - t900, qJD(2) * t316 + qJD(4) * t252 - t899, qJD(2) * t186 + qJD(4) * t152 - t901, qJD(2) * t40 - qJD(4) * t17 + qJD(5) * t197 - t989, 0, 0, 0, 0, 0, qJD(2) * t83 - qJD(4) * t69 - qJD(6) * t102 - t907, qJD(2) * t198 - qJD(4) * t72 - qJD(6) * t106 - t906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t859, 0, 0, 0, 0, 0, -t830, t856, t864, t860, t868, t187 + t1019, 0, 0, 0, 0, 0, t1016, t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t551 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399, t792 * t659, -t654 * t879 - t869, t651 * t879 + t863, qJD(4) * t801 + t870 (qJ(5) * t801 - t1033) * qJD(4) + t594 * qJD(5) + t696, 0, 0, 0, 0, 0, qJD(6) * t481 - t755 - t834, -t469 + t598 - t1017; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t594 + t897, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t481 - t579 - t910, -t466 + t850 - t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t710, -t745, -qJD(2) * t445 + t581 * t854, qJD(2) * t442 + t527 * t891, t571, -qJD(2) * t140 + qJD(3) * t442 - t902, -qJD(2) * t138 + t581 * t887 - t903, qJD(2) * t22 + qJD(3) * t173 - t993, qJD(2) * t23 - qJD(3) * t252 - t990, qJD(2) * t9 - qJD(3) * t152 - t1000 + t130, qJD(2) * t7 + qJD(3) * t17 + qJD(5) * t43 - t1007, -qJD(2) * t68 - t324 * t896 + t119, -qJD(2) * t51 + t62 - t962, qJD(2) * t71 - qJD(6) * t269 - t904, qJD(2) * t70 - qJD(6) * t268 - t905, -t685, qJD(2) * t1 + qJD(3) * t69 - qJD(5) * t267 - qJD(6) * t31 - t1015, qJD(2) * t2 + qJD(3) * t72 - qJD(5) * t270 - qJD(6) * t32 - t1012; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t795, -t744, -t857, t858, t851, t711, t712, t757, t756, t769, -qJD(5) * t310 - t698, -t590 * t888 + t327 - t920, t288 - t753, -t469 + t751, qJD(6) * t478 + t752, t708, -qJD(5) * t476 - qJD(6) * t182 - t699, qJD(5) * t480 - qJD(6) * t183 - t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, t831, t869, -t863, -t870, -qJD(5) * t593 - t696, 0, 0, 0, 0, 0, -qJD(6) * t477 + t755, -t467 + t1017; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t630 * qJD(5), t620 * qJD(5), t610 * t602, t461 * qJD(6), 0, 0, 0, t643 * t874, t643 * t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t743, t671, 0, 0, 0, 0, 0, t749, t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t686, t692, t602 - t747, -t748 - t874, -t739, -qJD(6) * t531 + t610 * t882 - t695, qJD(6) * t530 + t1076 * t882 - t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t204 + t836, -qJD(2) * t202 + t1079 * t854, -t691, qJD(2) * t37 - qJD(3) * t197 - qJD(4) * t43 - t1018, 0, 0, 0, 0, 0, qJD(2) * t101 - qJD(6) * t142 - t838 + t862, qJD(4) * t270 + qJD(6) * t143 + t1095 + t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t635 * t654 - t865, t635 * t651 - t866, t750, qJD(4) * t310 + t754, 0, 0, 0, 0, 0, t911 - t1077, -t796 + t1078; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t593 - t897, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t743, -t671, 0, 0, 0, 0, 0, -t749 + t874, t602 - t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t690, t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t688, -t705, qJD(4) * t269 + t1094, qJD(2) * t103 + t1091, t377, qJD(2) * t13 + qJD(3) * t102 + qJD(4) * t31 + qJD(5) * t142 - t1020, qJD(2) * t14 + qJD(3) * t106 + qJD(4) * t32 - qJD(5) * t143 - t1021; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t687, -t693, t466 + t797, -t793 + t909, qJD(1) * t813 + t644, qJD(4) * t182 - qJD(5) * t589 + t759, qJD(4) * t183 + qJD(5) * t586 + t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t477 + t910, t468 + t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t686, -t692, t747, t748, t739, -t610 * t790 + t695, -t1076 * t790 + t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t690, -t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t44;
