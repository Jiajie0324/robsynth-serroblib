% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RPPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RPPRRP6_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP6_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP6_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPPRRP6_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPPRRP6_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPPRRP6_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPPRRP6_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:10:12
% EndTime: 2019-03-09 02:11:06
% DurationCPUTime: 47.50s
% Computational Cost: add. (14334->1002), mult. (37694->1292), div. (0->0), fcn. (35436->6), ass. (0->476)
t770 = Icges(6,1) + Icges(7,1);
t788 = Icges(7,4) + Icges(6,5);
t787 = Icges(6,6) - Icges(7,6);
t394 = sin(qJ(5));
t802 = (Icges(6,4) - Icges(7,5)) * t394;
t769 = Icges(6,2) + Icges(7,3);
t801 = Icges(7,2) + Icges(6,3);
t397 = cos(qJ(5));
t800 = -t394 * t787 + t397 * t788;
t799 = t397 * t770 - t802;
t395 = sin(qJ(4));
t398 = cos(qJ(4));
t643 = Icges(6,4) * t397;
t480 = -Icges(6,2) * t394 + t643;
t798 = -t395 * t787 - t398 * t480;
t638 = Icges(7,5) * t397;
t476 = Icges(7,3) * t394 + t638;
t715 = -t787 * t398 + (-t476 + t480) * t395;
t619 = t397 * t398;
t363 = Icges(7,5) * t619;
t627 = t394 * t398;
t781 = Icges(7,3) * t627 + t363 + t798;
t797 = t395 * t800 - t398 * t801;
t767 = t395 * t801 + t398 * t800;
t714 = -t799 * t395 + t398 * t788;
t764 = t395 * t788 + t799 * t398;
t796 = (t397 * t769 + t802) * t398;
t795 = (-t394 * t788 - t787 * t397) * t398;
t519 = qJD(1) * t395 + qJD(5);
t399 = cos(qJ(1));
t569 = qJD(4) * t399;
t544 = t398 * t569;
t616 = t399 * t397;
t558 = t395 * t616;
t573 = qJD(1) * t399;
t396 = sin(qJ(1));
t623 = t396 * t394;
t133 = -qJD(5) * t558 - t394 * t544 - t397 * t573 + t519 * t623;
t568 = qJD(5) * t395;
t369 = qJD(1) + t568;
t461 = t369 * t394;
t134 = -t399 * t461 + (-t396 * t519 + t544) * t397;
t546 = t395 * t569;
t574 = qJD(1) * t396;
t550 = t398 * t574;
t435 = t546 + t550;
t73 = Icges(7,5) * t134 + Icges(7,6) * t435 - Icges(7,3) * t133;
t79 = Icges(6,4) * t134 + Icges(6,2) * t133 + Icges(6,6) * t435;
t794 = t73 - t79;
t460 = t519 * t399;
t570 = qJD(4) * t398;
t545 = t396 * t570;
t622 = t396 * t397;
t135 = t369 * t622 + (t460 + t545) * t394;
t136 = t397 * t460 + (t397 * t570 - t461) * t396;
t571 = qJD(4) * t396;
t547 = t395 * t571;
t549 = t398 * t573;
t436 = t547 - t549;
t74 = Icges(7,5) * t136 + Icges(7,6) * t436 + Icges(7,3) * t135;
t80 = Icges(6,4) * t136 - Icges(6,2) * t135 + Icges(6,6) * t436;
t793 = t74 - t80;
t75 = Icges(6,5) * t134 + Icges(6,6) * t133 + Icges(6,3) * t435;
t77 = Icges(7,4) * t134 + Icges(7,2) * t435 - Icges(7,6) * t133;
t792 = -t75 - t77;
t76 = Icges(6,5) * t136 - Icges(6,6) * t135 + Icges(6,3) * t436;
t78 = Icges(7,4) * t136 + Icges(7,2) * t436 + Icges(7,6) * t135;
t791 = -t76 - t78;
t81 = Icges(7,1) * t134 + Icges(7,4) * t435 - Icges(7,5) * t133;
t83 = Icges(6,1) * t134 + Icges(6,4) * t133 + Icges(6,5) * t435;
t790 = t81 + t83;
t82 = Icges(7,1) * t136 + Icges(7,4) * t436 + Icges(7,5) * t135;
t84 = Icges(6,1) * t136 - Icges(6,4) * t135 + Icges(6,5) * t436;
t789 = t82 + t84;
t625 = t395 * t399;
t289 = t394 * t625 + t622;
t290 = t558 - t623;
t618 = t398 * t399;
t725 = t289 * t781 + t290 * t764 - t618 * t767;
t273 = Icges(7,5) * t290;
t144 = -Icges(7,6) * t618 + Icges(7,3) * t289 + t273;
t645 = Icges(6,4) * t290;
t153 = -Icges(6,2) * t289 - Icges(6,6) * t618 + t645;
t786 = t144 - t153;
t147 = Icges(6,5) * t290 - Icges(6,6) * t289 - Icges(6,3) * t618;
t150 = Icges(7,4) * t290 - Icges(7,2) * t618 + Icges(7,6) * t289;
t768 = t147 + t150;
t287 = t395 * t623 - t616;
t288 = t394 * t399 + t395 * t622;
t621 = t396 * t398;
t146 = -Icges(6,5) * t288 + Icges(6,6) * t287 + Icges(6,3) * t621;
t149 = -Icges(7,4) * t288 + Icges(7,2) * t621 - Icges(7,6) * t287;
t748 = t149 + t146;
t272 = Icges(7,5) * t288;
t143 = Icges(7,6) * t621 - Icges(7,3) * t287 - t272;
t275 = Icges(6,4) * t288;
t151 = -Icges(6,2) * t287 - Icges(6,6) * t621 + t275;
t747 = t151 + t143;
t640 = Icges(7,5) * t289;
t156 = Icges(7,1) * t290 - Icges(7,4) * t618 + t640;
t276 = Icges(6,4) * t289;
t159 = Icges(6,1) * t290 - Icges(6,5) * t618 - t276;
t785 = t156 + t159;
t271 = Icges(7,5) * t287;
t154 = Icges(7,1) * t288 - Icges(7,4) * t621 + t271;
t274 = Icges(6,4) * t287;
t158 = -Icges(6,1) * t288 + Icges(6,5) * t621 + t274;
t746 = t158 - t154;
t784 = qJD(4) * t715 + t796 * qJD(5);
t783 = qJD(4) * t797 - qJD(5) * t795;
t303 = (-Icges(6,1) * t394 - t643) * t398;
t567 = qJD(5) * t398;
t782 = (-Icges(7,1) * t394 + t638) * t567 + qJD(5) * t303 + t714 * qJD(4);
t780 = -t394 * t781 - t397 * t764;
t474 = t143 * t287 - t154 * t288;
t49 = t149 * t621 - t474;
t471 = t151 * t287 + t158 * t288;
t51 = t146 * t621 - t471;
t755 = t49 + t51;
t614 = t287 * t144 + t288 * t156;
t50 = -t150 * t621 + t614;
t613 = -t287 * t153 + t288 * t159;
t52 = -t147 * t621 + t613;
t754 = t50 + t52;
t612 = -t143 * t289 + t290 * t154;
t53 = t149 * t618 + t612;
t610 = -t289 * t151 - t158 * t290;
t55 = t146 * t618 + t610;
t753 = t53 + t55;
t611 = t289 * t144 + t290 * t156;
t54 = -t150 * t618 + t611;
t609 = -t289 * t153 + t290 * t159;
t56 = -t147 * t618 + t609;
t752 = t54 + t56;
t726 = t287 * t781 + t764 * t288 - t767 * t621;
t779 = t726 * t369;
t778 = t398 * (t396 * t748 + t399 * t768) - t609 - t611;
t322 = -t399 * t567 - t571;
t446 = t396 * t567 - t569;
t469 = t153 * t394 - t159 * t397;
t470 = t151 * t394 + t158 * t397;
t472 = t144 * t394 + t156 * t397;
t473 = -t143 * t394 + t154 * t397;
t777 = -t322 * (t399 * t767 + t469 - t472) - t369 * (t780 - t797) + (t396 * t767 + t470 - t473) * t446;
t758 = rSges(7,1) + pkin(5);
t736 = t133 * t747 - t134 * t746 + t289 * t793 + t290 * t789 - t435 * t748 + t618 * t791;
t776 = -t786 * t133 + t785 * t134 + t289 * t794 + t790 * t290 + t768 * t435 + t792 * t618;
t733 = -t135 * t747 - t136 * t746 + t287 * t793 + t288 * t789 - t436 * t748 + t621 * t791;
t775 = t786 * t135 + t785 * t136 + t287 * t794 + t790 * t288 + t768 * t436 + t792 * t621;
t757 = -t133 * t781 + t134 * t764 + t289 * t784 + t290 * t782 + t435 * t767 + t618 * t783;
t756 = t135 * t781 + t136 * t764 + t287 * t784 + t288 * t782 + t436 * t767 + t621 * t783;
t774 = (t782 * t397 + t784 * t394 + (-t394 * t764 + t397 * t781) * qJD(5) + t767 * qJD(4)) * t398 + (qJD(4) * t780 - t783) * t395;
t63 = -t395 * t149 + t398 * t473;
t65 = -t395 * t146 - t398 * t470;
t773 = t63 + t65;
t64 = t150 * t395 + t398 * t472;
t66 = t147 * t395 - t398 * t469;
t772 = t64 + t66;
t771 = t725 * t369;
t751 = rSges(7,3) + qJ(6);
t721 = t395 * t767 - t398 * t780;
t478 = Icges(5,5) * t395 + Icges(5,6) * t398;
t248 = -Icges(5,3) * t396 + t399 * t478;
t647 = Icges(5,4) * t395;
t481 = Icges(5,2) * t398 + t647;
t253 = Icges(5,6) * t399 + t396 * t481;
t646 = Icges(5,4) * t398;
t484 = Icges(5,1) * t395 + t646;
t259 = Icges(5,5) * t399 + t396 * t484;
t465 = t253 * t398 + t259 * t395;
t766 = t248 + t465;
t765 = t398 * t476 + t798;
t763 = (t287 * t788 + t288 * t787) * t446 + t795 * t369 + (-t289 * t788 - t290 * t787) * t322;
t729 = t754 * t322 - t446 * t755 + t779;
t728 = t322 * t752 - t446 * t753 + t771;
t162 = rSges(6,1) * t288 - rSges(6,2) * t287 - rSges(6,3) * t621;
t750 = t162 * t369;
t749 = t396 * t399;
t500 = pkin(5) * t397 + qJ(6) * t394;
t501 = rSges(7,1) * t397 + rSges(7,3) * t394;
t594 = rSges(7,2) * t395 + (t500 + t501) * t398;
t710 = -t396 * rSges(4,2) - t399 * rSges(4,3);
t346 = t399 * pkin(1) + t396 * qJ(2);
t711 = t399 * qJ(3) + t346;
t743 = t711 - t710;
t269 = qJD(6) * t287;
t742 = t322 * t594 - t269;
t270 = qJD(6) * t289;
t372 = pkin(8) * t621;
t626 = t395 * t396;
t560 = pkin(4) * t626;
t313 = -t372 + t560;
t672 = pkin(4) * t398;
t350 = pkin(8) * t395 + t672;
t320 = t350 * t569;
t389 = t399 * qJ(2);
t342 = pkin(1) * t396 - t389;
t634 = qJ(3) * t396;
t499 = -pkin(7) * t399 - t634;
t458 = -t342 + t499;
t384 = qJD(3) * t399;
t385 = qJD(2) * t396;
t579 = t384 + t385;
t419 = t320 + (-t313 + t458) * qJD(1) + t579;
t607 = -rSges(7,2) * t621 + t751 * t287 + t288 * t758;
t45 = -t369 * t607 - t446 * t594 + t270 + t419;
t566 = qJD(6) * t394;
t360 = t398 * t566;
t373 = pkin(4) * t625;
t315 = -pkin(8) * t618 + t373;
t438 = (-t313 * t396 - t315 * t399) * qJD(4);
t720 = t751 * t289 + t290 * t758;
t604 = -rSges(7,2) * t618 + t720;
t41 = t322 * t607 + t446 * t604 + t360 + t438;
t527 = t41 * t604;
t741 = t45 * t594 - t527;
t740 = (t396 * t768 - t399 * t748) * t398 - t613 - t614;
t739 = 0.2e1 * qJD(4);
t562 = qJD(4) * qJD(5);
t538 = t395 * t562;
t237 = qJD(1) * t322 + t396 * t538;
t238 = qJD(1) * t446 + t399 * t538;
t537 = t398 * t562;
t738 = t237 * t753 + t238 * t752 + t322 * t776 + t369 * t757 - t446 * t736 + t537 * t725;
t737 = t237 * t755 + t238 * t754 + t322 * t775 + t369 * t756 - t446 * t733 + t537 * t726;
t359 = pkin(8) * t549;
t210 = pkin(8) * t547 - t359 + (t395 * t573 + t545) * pkin(4);
t386 = qJD(2) * t399;
t277 = qJD(1) * t346 - t386;
t673 = pkin(4) * t395;
t349 = pkin(8) * t398 - t673;
t331 = qJD(4) * t349;
t400 = qJD(1) ^ 2;
t620 = t396 * t400;
t382 = pkin(7) * t620;
t564 = qJD(1) * qJD(2);
t375 = t399 * t564;
t563 = qJD(1) * qJD(3);
t584 = -0.2e1 * t396 * t563 + t375;
t615 = t399 * t400;
t459 = -qJ(3) * t615 + t584;
t548 = t350 * t571;
t405 = t331 * t569 + t382 + (-t210 - t277 - t548) * qJD(1) + t459;
t663 = rSges(7,2) * t398;
t261 = -t395 * t501 + t663;
t309 = (-rSges(7,1) * t394 + rSges(7,3) * t397) * t398;
t572 = qJD(4) * t395;
t543 = t397 * t567;
t696 = -t394 * t572 + t543;
t608 = t360 + t696 * qJ(6) + (-t394 * t567 - t397 * t572) * pkin(5) + qJD(4) * t261 + qJD(5) * t309;
t723 = -t751 * t135 - t136 * t758 - t269;
t666 = rSges(7,2) * t436 - t723;
t7 = -qJD(6) * t133 + t237 * t594 - t369 * t666 - t446 * t608 - t537 * t607 + t405;
t734 = t7 * t594;
t16 = (-qJD(4) * t473 + t78) * t395 + (-qJD(4) * t149 + t394 * t74 + t397 * t82 + (-t143 * t397 - t154 * t394) * qJD(5)) * t398;
t18 = (qJD(4) * t470 + t76) * t395 + (-qJD(4) * t146 - t394 * t80 + t397 * t84 + (-t151 * t397 + t158 * t394) * qJD(5)) * t398;
t731 = t16 + t18;
t17 = (-qJD(4) * t472 + t77) * t395 + (qJD(4) * t150 + t394 * t73 + t397 * t81 + (t144 * t397 - t156 * t394) * qJD(5)) * t398;
t19 = (qJD(4) * t469 + t75) * t395 + (qJD(4) * t147 - t394 * t79 + t397 * t83 + (-t153 * t397 - t159 * t394) * qJD(5)) * t398;
t730 = -t17 - t19;
t727 = t322 * t772 + t369 * t721 - t446 * t773;
t507 = t315 + t711;
t383 = pkin(7) * t574;
t580 = t383 + t386;
t409 = (qJD(4) * t350 + qJD(3)) * t396 + t507 * qJD(1) - t580;
t46 = t604 * t369 + t409 - t742;
t526 = t46 * t594;
t719 = t765 * t396;
t718 = t765 * t399;
t717 = t764 * t396;
t716 = t764 * t399;
t267 = t315 * t574;
t617 = t399 * t350;
t624 = t396 * t350;
t713 = t569 * t617 + t571 * t624 + t267;
t524 = -rSges(3,2) * t399 + t396 * rSges(3,3);
t712 = t346 + t524;
t709 = t777 * t398;
t708 = (-t288 * t769 + t271 - t274 - t746) * t446 + (-t764 + t796) * t369 + (t290 * t769 + t276 - t640 - t785) * t322;
t707 = (t287 * t770 - t272 + t275 + t747) * t446 + (-Icges(7,1) * t627 + t303 + t363 + t781) * t369 + (-t289 * t770 + t273 - t645 + t786) * t322;
t706 = t763 * t398;
t705 = t322 * t768 + t369 * t767 + t446 * t748;
t704 = t396 * t773 + t399 * t772;
t703 = t396 * t772 - t399 * t773;
t702 = t396 * t753 + t399 * t752;
t701 = t396 * t755 + t399 * t754;
t698 = t369 * t774 + t537 * t721;
t247 = Icges(5,3) * t399 + t396 * t478;
t505 = rSges(5,1) * t395 + rSges(5,2) * t398;
t263 = rSges(5,3) * t399 + t396 * t505;
t336 = Icges(5,5) * t398 - Icges(5,6) * t395;
t440 = qJD(4) * t336;
t254 = -Icges(5,6) * t396 + t399 * t481;
t364 = Icges(5,4) * t618;
t642 = Icges(5,5) * t396;
t260 = Icges(5,1) * t625 + t364 - t642;
t464 = t254 * t398 + t260 * t395;
t695 = t399 * t440 + (-t247 + t464) * qJD(1);
t694 = qJD(1) * t766 + t396 * t440;
t338 = -Icges(5,2) * t395 + t646;
t340 = Icges(5,1) * t398 - t647;
t463 = t338 * t398 + t340 * t395;
t693 = t463 * qJD(1) - t478 * qJD(4);
t692 = -qJ(2) * qJD(1) - qJD(3);
t691 = t396 * (-Icges(5,2) * t625 + t260 + t364) - t399 * (t338 * t396 + t259);
t690 = t237 / 0.2e1;
t689 = t238 / 0.2e1;
t688 = -t322 / 0.2e1;
t687 = t322 / 0.2e1;
t686 = t446 / 0.2e1;
t685 = -t446 / 0.2e1;
t684 = -t369 / 0.2e1;
t683 = t369 / 0.2e1;
t680 = t396 / 0.2e1;
t679 = -t399 / 0.2e1;
t677 = rSges(3,2) - pkin(1);
t676 = -rSges(7,2) - pkin(8);
t675 = -rSges(5,3) - pkin(7);
t674 = -rSges(6,3) - pkin(8);
t671 = -qJD(1) / 0.2e1;
t670 = -pkin(1) - qJ(3);
t667 = t435 * rSges(7,2) - t751 * t133 + t134 * t758 + t270;
t664 = rSges(4,2) * t399;
t662 = rSges(3,3) * t399;
t661 = rSges(5,3) * t396;
t659 = rSges(6,3) * t398;
t658 = t16 * t446;
t657 = t17 * t322;
t656 = t18 * t446;
t655 = t19 * t322;
t591 = t290 * rSges(6,1) - t289 * rSges(6,2);
t166 = -rSges(6,3) * t618 + t591;
t503 = rSges(6,1) * t397 - rSges(6,2) * t394;
t262 = -t395 * t503 + t659;
t310 = (-rSges(6,1) * t394 - rSges(6,2) * t397) * t398;
t182 = qJD(4) * t262 + qJD(5) * t310;
t265 = rSges(6,3) * t395 + t398 * t503;
t555 = pkin(4) * t544 + pkin(8) * t435;
t209 = -qJD(1) * t560 + t555;
t376 = qJ(2) * t573;
t582 = t376 + t385;
t593 = qJD(1) * (-pkin(1) * t574 + t582) + t396 * t564;
t556 = 0.2e1 * t399 * t563 + t593;
t413 = t331 * t571 + t400 * t499 + t556 + (t209 + t320) * qJD(1);
t88 = t134 * rSges(6,1) + t133 * rSges(6,2) + rSges(6,3) * t435;
t27 = t166 * t537 - t182 * t322 - t238 * t265 + t369 * t88 + t413;
t654 = t27 * t399;
t504 = rSges(6,1) * t136 - rSges(6,2) * t135;
t90 = rSges(6,3) * t436 + t504;
t28 = -t162 * t537 - t182 * t446 + t237 * t265 - t369 * t90 + t405;
t653 = t28 * t396;
t62 = t166 * t369 - t265 * t322 + t409;
t652 = t62 * t265;
t651 = t63 * t237;
t650 = t64 * t238;
t649 = t65 * t237;
t648 = t66 * t238;
t629 = t247 * t396;
t628 = t247 * t399;
t296 = t336 * t396;
t297 = t336 * t399;
t239 = t399 * t248;
t606 = -t162 - t313;
t603 = -t287 * t758 + t751 * t288;
t602 = -t289 * t758 + t751 * t290;
t601 = t594 * t396;
t600 = t594 * t399;
t599 = t253 * t618 + t259 * t625;
t598 = t254 * t618 + t260 * t625;
t595 = -t500 * t395 + t261;
t590 = qJD(1) * t617 + t349 * t571;
t589 = t396 * t331 + t350 * t573;
t588 = (-pkin(5) * t394 + qJ(6) * t397) * t398 + t309;
t587 = -t481 + t340;
t586 = -t338 - t484;
t585 = rSges(5,1) * t625 + rSges(5,2) * t618;
t583 = t372 + t389;
t581 = rSges(3,2) * t574 + rSges(3,3) * t573;
t578 = -qJD(1) * t342 + t385;
t285 = qJD(1) * t313;
t575 = qJD(1) * t478;
t137 = t396 * t463 + t297;
t565 = t137 * qJD(1);
t561 = -rSges(4,3) + t670;
t559 = rSges(5,2) * t572;
t557 = -t313 - t607;
t100 = t254 * t621 + t260 * t626 + t239;
t554 = t359 + t580;
t553 = t376 + t579;
t552 = t384 + t578;
t345 = rSges(5,1) * t398 - rSges(5,2) * t395;
t317 = t345 * t569;
t542 = t395 * t566;
t535 = -t573 / 0.2e1;
t533 = t571 / 0.2e1;
t531 = -t569 / 0.2e1;
t530 = t569 / 0.2e1;
t522 = -rSges(4,3) * t396 - t634 + t664;
t521 = -qJD(1) * t624 + t349 * t569;
t520 = qJD(3) * t396 - t386;
t518 = t373 + t711;
t517 = t670 - t673;
t498 = t396 * t50 - t399 * t49;
t496 = t396 * t52 - t399 * t51;
t494 = t396 * t54 - t399 * t53;
t492 = t396 * t56 - t399 * t55;
t353 = rSges(5,1) * t544;
t183 = -rSges(5,2) * t546 - qJD(1) * t263 + t353;
t329 = t505 * qJD(4);
t462 = -qJ(3) * t400 - qJD(4) * t329;
t71 = -pkin(7) * t615 + t462 * t396 + (t183 + t317) * qJD(1) + t556;
t307 = t345 * t396;
t184 = qJD(4) * t307 + (t399 * t505 - t661) * qJD(1);
t72 = t382 + t462 * t399 + (-t345 * t571 - t184 - t277) * qJD(1) + t584;
t486 = t396 * t71 + t399 * t72;
t485 = t320 - t285 + t552;
t108 = t317 + (-t263 + t458) * qJD(1) + t579;
t266 = t585 - t661;
t109 = (qJD(4) * t345 + qJD(3)) * t396 + (t266 + t711) * qJD(1) - t580;
t475 = t108 * t399 + t109 * t396;
t468 = t162 * t399 - t166 * t396;
t131 = -t253 * t395 + t259 * t398;
t132 = -t254 * t395 + t260 * t398;
t457 = t553 + t555;
t444 = -t505 + t670;
t99 = t396 * t465 + t628;
t443 = (-t100 * t396 + t399 * t99) * qJD(4);
t442 = qJD(4) * t340;
t441 = qJD(4) * t338;
t103 = t599 - t629;
t104 = -t248 * t396 + t598;
t439 = (t103 * t399 - t104 * t396) * qJD(4);
t124 = (-t263 * t396 - t266 * t399) * qJD(4);
t6 = qJD(6) * t135 - t238 * t594 - t322 * t608 + t369 * t667 + t537 * t604 + t413;
t430 = t46 * t608 + t594 * t6;
t429 = -t45 * t607 + t46 * t604;
t428 = t41 * t607 - t526;
t427 = -t253 * t399 + t254 * t396;
t426 = -t210 * t396 + (-t209 - t285) * t399;
t420 = (t395 * t586 + t398 * t587) * qJD(1);
t60 = t162 * t322 + t166 * t446 + t438;
t61 = -t265 * t446 + t419 - t750;
t410 = t60 * t468 + (t396 * t61 - t399 * t62) * t265;
t325 = t481 * qJD(4);
t326 = t484 * qJD(4);
t406 = -qJD(1) * t336 - t325 * t398 - t326 * t395 + (-t338 * t395 + t340 * t398) * qJD(4);
t404 = t396 * t741 + t428 * t399;
t403 = t427 * t395 - t398 * t691;
t381 = rSges(4,2) * t573;
t343 = rSges(3,2) * t396 + t662;
t312 = t345 * t399;
t293 = t399 * t331;
t240 = qJD(4) * t267;
t230 = t265 * t399;
t228 = t265 * t396;
t214 = qJD(1) * t712 - t386;
t213 = t385 + (-t342 + t343) * qJD(1);
t207 = -rSges(6,1) * t289 - rSges(6,2) * t290;
t202 = -rSges(6,1) * t287 - rSges(6,2) * t288;
t186 = qJD(1) * t743 + t520;
t185 = (-t342 + t522) * qJD(1) + t579;
t180 = t375 + (-qJD(1) * t524 - t277) * qJD(1);
t179 = qJD(1) * t581 + t593;
t138 = t399 * t463 - t296;
t125 = t138 * qJD(1);
t123 = (qJD(1) * t710 - t277) * qJD(1) + t459;
t122 = -qJ(3) * t620 + qJD(1) * (-rSges(4,3) * t574 + t381) + t556;
t70 = t406 * t396 + t399 * t693;
t69 = -t396 * t693 + t406 * t399;
t68 = -qJD(4) * t464 - (-qJD(1) * t253 + t399 * t441) * t395 + (-qJD(1) * t259 + t399 * t442) * t398;
t67 = -qJD(4) * t465 - (qJD(1) * t254 + t396 * t441) * t395 + (t396 * t442 + (t399 * t484 - t642) * qJD(1)) * t398;
t48 = t125 + t439;
t47 = t443 + t565;
t20 = qJD(4) * t426 + t162 * t238 - t166 * t237 + t322 * t90 + t446 * t88 + t240;
t5 = qJD(6) * t543 + t240 + t667 * t446 + t666 * t322 + t607 * t238 - t604 * t237 + (t426 - t542) * qJD(4);
t1 = [((t394 * t747 + t397 * t746) * t398 + t748 * t395 + t773) * t322 * t684 + (t67 + t70 + t48) * t530 + (t47 - t565 + ((-t104 + t598 - t628) * t399 + (t100 - t103 - t239 - t629) * t396) * qJD(4)) * t533 + (t180 * (t396 * t677 + t389 + t662) + t213 * t386 + t179 * t712 + t214 * (t581 + t582) + (t213 * t677 * t399 + (t213 * (-rSges(3,3) - qJ(2)) - t214 * pkin(1)) * t396) * qJD(1) - (qJD(1) * t343 - t213 + t578) * t214) * m(3) + t698 + (-(-t108 + t317 + (-t263 + t499) * qJD(1) + t552) * t109 + t72 * t389 + t108 * t580 + t71 * (t711 + t585) + t109 * (t353 + t553) + (t72 * t675 - t109 * t559 + (t108 * t444 + t109 * t675) * qJD(1)) * t399 + (t72 * t444 + t108 * (-rSges(5,1) * t570 - qJD(3) + t559) + t71 * t675 + (t108 * (rSges(5,3) - qJ(2)) + t109 * t444) * qJD(1)) * t396) * m(5) + (-t45 * (t383 - t520 - t548 + t742) - t46 * (t270 + t485) - (-t45 * t604 - t46 * t607) * t369 - (-t45 * t507 + t46 * t499) * qJD(1) + t526 * t446 + t7 * (t583 - t607) + t45 * (t554 + t723) + t6 * (t518 + t720) + t46 * (t457 + t667) + (-t7 * pkin(7) + t6 * t676 * t398 + (t45 * (t517 + t663) - t46 * pkin(7)) * qJD(1)) * t399 + (-t6 * pkin(7) + (qJD(1) * t46 + t7) * t517 + ((t395 * t676 - t672) * qJD(4) + t692) * t45) * t396) * m(7) + t725 * t689 + t657 / 0.2e1 - t658 / 0.2e1 + t726 * t690 + (t123 * (t389 + t664) + t185 * t386 + t122 * t743 + t186 * (t381 + t553) + (-t185 * qJD(3) + t123 * t561) * t396 + (t185 * t561 * t399 + (t185 * (-rSges(4,2) - qJ(2)) + t186 * t561) * t396) * qJD(1) - (qJD(1) * t522 - t185 + t552) * t186) * m(4) + t655 / 0.2e1 - t656 / 0.2e1 + t649 / 0.2e1 + t650 / 0.2e1 + t651 / 0.2e1 + t648 / 0.2e1 + t757 * t687 + (t756 + t728) * t685 + (-t779 + (-t471 - t474 + t752 + t778) * t446 + (t289 * t747 + t290 * t746 + t740 + t753) * t322 + t729) * t688 + (-qJD(4) * t463 + t325 * t395 - t326 * t398) * qJD(1) + ((-t610 - t612 + t740 + t754) * t446 + (t747 * t287 + t746 * t288 + t755 - t778) * t322 + t771) * t686 + (t28 * (-t162 + t583) + t61 * (-t504 + t554) + t27 * (t518 + t591) + t62 * (t457 + t88) + (-t28 * pkin(7) + t27 * t674 * t398 + (t61 * (t517 + t659) - t62 * pkin(7)) * qJD(1)) * t399 + (-t27 * pkin(7) + (qJD(1) * t62 + t28) * t517 + ((t395 * t674 - t672) * qJD(4) + t692) * t61) * t396 - (qJD(1) * t499 + t485 - t61 - t750) * t62 + t652 * t446) * m(6) + ((t131 + t137) * t396 + (t132 + t138) * t399) * qJD(4) * t671 - (t68 + t69) * t571 / 0.2e1 + (t125 + (t599 * t399 + (t396 * t766 - t598 - t99) * t396) * qJD(4)) * t531; 0.2e1 * (t6 * t679 + t680 * t7) * m(7) + 0.2e1 * (-t654 / 0.2e1 + t653 / 0.2e1) * m(6) + 0.2e1 * (t679 * t71 + t680 * t72) * m(5) + 0.2e1 * (t122 * t679 + t123 * t680) * m(4) + 0.2e1 * (t179 * t679 + t180 * t680) * m(3); m(4) * (t122 * t396 + t123 * t399) + m(5) * t486 + m(6) * (t27 * t396 + t28 * t399) + m(7) * (t396 * t6 + t399 * t7); qJD(1) * (-t68 * t396 + t67 * t399 + (-t131 * t396 - t132 * t399) * qJD(1)) / 0.2e1 + ((-t395 * t587 + t398 * t586) * qJD(1) + (t395 * t691 + t427 * t398) * qJD(4)) * t671 + ((t297 * t571 + t575) * t396 + (t420 + (-t296 * t396 + t403) * qJD(4)) * t399) * t533 + ((t296 * t569 - t575) * t399 + (t420 + (-t297 * t399 + t403) * qJD(4)) * t396) * t531 + ((t725 * t398 + t626 * t753) * qJD(5) + ((qJD(5) * t752 + t705) * t395 + t709) * t399 + (t289 * t715 + t290 * t714) * t369 - (t289 * t719 + t290 * t717) * t446 + (t289 * t718 + t290 * t716) * t322) * t688 + (-qJD(1) * t702 - t396 * t776 + t399 * t736) * t687 + ((t726 * t398 + t625 * t754) * qJD(5) + ((qJD(5) * t755 + t705) * t395 + t709) * t396 + (t287 * t715 + t288 * t714) * t369 - (t287 * t719 + t288 * t717) * t446 + (t287 * t718 + t288 * t716) * t322) * t686 + (-qJD(1) * t701 - t396 * t775 + t399 * t733) * t685 + (((t394 * t715 + t397 * t714 + t767) * t369 - (t394 * t719 + t397 * t717 - t748) * t446 + (t394 * t718 + t397 * t716 + t768) * t322 + t721 * qJD(5)) * t398 + (t704 * qJD(5) - t777) * t395) * t684 + (-qJD(1) * t704 + t396 * t730 + t399 * t731) * t683 + (-t492 / 0.2e1 - t494 / 0.2e1) * t238 + (-t496 / 0.2e1 - t498 / 0.2e1) * t237 + (t7 * t617 + t6 * t624 + (t734 + t5 * (-t315 - t604) + t526 * qJD(1)) * t399 + (qJD(1) * t527 + t5 * t557 + t430) * t396 - (t395 * t404 + t398 * t429) * qJD(5) + (t293 + (-t350 - t594) * t574 - t521 + t601 * t369 + t595 * t446 + (t608 - t360) * t399) * t45 + (t322 * t595 - t360 * t396 - t369 * t600 + t589 - t590) * t46 + ((qJD(1) * t557 - t209 - t667) * t399 + (-t210 - t666) * t396 + t542 - t600 * t446 - t601 * t322 + t713) * t41) * m(7) + (-t61 * (-t228 * t369 - t262 * t446 + t521) - t62 * (t230 * t369 - t262 * t322 + t590) - ((-t162 * t61 + t166 * t62) * t398 + t410 * t395) * qJD(5) + t28 * t617 + t61 * t293 + t27 * t624 + t62 * t589 + (t28 * t265 + t61 * t182 + t20 * (-t166 - t315) + t652 * qJD(1)) * t399 + (t27 * t265 + t62 * t182 + t20 * t606 + t61 * (-t265 - t350) * qJD(1)) * t396 + (-t228 * t322 - t230 * t446 + (qJD(1) * t606 - t209 - t88) * t399 + (qJD(1) * t166 - t210 - t90) * t396 + t713) * t60) * m(6) + (-(-t108 * t307 + t109 * t312) * qJD(1) - (t124 * (-t307 * t396 - t312 * t399) - t475 * t505) * qJD(4) + 0.2e1 * t124 * (-t183 * t399 - t184 * t396 + (-t263 * t399 + t266 * t396) * qJD(1)) - t475 * t329 + ((-t108 * t396 + t109 * t399) * qJD(1) + t486) * t345) * m(5) - (qJD(1) * t69 + (-t694 * t749 + t396 ^ 2 * t695 + (-t103 * t396 - t104 * t399) * qJD(1)) * t739 + t738) * t396 / 0.2e1 + (qJD(1) * t70 + (t399 ^ 2 * t694 - t695 * t749 + (-t100 * t399 - t99 * t396) * qJD(1)) * t739 + t737) * t399 / 0.2e1 - (t443 + t47 + t729) * t574 / 0.2e1 + (t439 + t48 + t728) * t535 - (qJD(4) * t703 + t727) * t567 / 0.2e1 - (t396 * t729 + t399 * t728) * t568 / 0.2e1; (t395 * t726 - t398 * t701) * t690 + (t395 * t725 - t398 * t702) * t689 + (t289 * t708 + t290 * t707 - t399 * t706) * t688 + ((-t776 * t399 - t736 * t396 + t725 * qJD(4) + (t492 + t494) * qJD(1)) * t398 + (qJD(4) * t702 + t757) * t395) * t687 + (t287 * t708 + t288 * t707 - t396 * t706) * t686 + ((-t775 * t399 - t733 * t396 + t726 * qJD(4) + (t496 + t498) * qJD(1)) * t398 + (qJD(4) * t701 + t756) * t395) * t685 + ((t394 * t708 + t397 * t707) * t398 + t763 * t395) * t684 + ((qJD(1) * t703 + qJD(4) * t721 - t396 * t731 + t399 * t730) * t398 + (qJD(4) * t704 + t774) * t395) * t683 + (t650 + t651 + t657 - t658 + t648 + t649 + t655 - t656 + t698) * t395 / 0.2e1 - t737 * t621 / 0.2e1 - t738 * t618 / 0.2e1 + ((qJD(4) * t404 - t45 * t666 + t46 * t667 + t6 * t604 - t7 * t607) * t395 + (t429 * qJD(4) + (-qJD(1) * t741 - t41 * t666 - t5 * t607 + t430) * t399 + (qJD(1) * t428 + t41 * t667 - t45 * t608 + t5 * t604 - t734) * t396) * t398 - (t288 * t46 + t290 * t45 + t41 * t619) * qJD(6) - (-t45 * t603 + t46 * t602) * t369 + (-t41 * t602 + t45 * t588) * t446 - (t41 * t603 - t46 * t588) * t322) * m(7) + ((qJD(4) * t410 - t28 * t162 + t27 * t166 - t61 * t90 + t62 * t88) * t395 + (t61 * (-qJD(4) * t162 - t182 * t396) + t62 * (qJD(4) * t166 + t182 * t399) - t20 * t468 + t60 * (t162 * t574 + t166 * t573 + t396 * t88 - t399 * t90) + (t654 - t653 + (-t396 * t62 - t399 * t61) * qJD(1)) * t265) * t398 - t61 * (-t202 * t369 - t310 * t446) - t62 * (t207 * t369 - t310 * t322) - t60 * (t202 * t322 + t207 * t446)) * m(6) + t728 * (t395 * t530 + t550 / 0.2e1) + t729 * (t395 * t533 + t398 * t535) + (t727 + (t395 * t721 - t398 * t704) * qJD(5)) * t570 / 0.2e1; (t5 * t627 + t287 * t6 + t289 * t7 + (-t289 * t369 + t322 * t627 + t135) * t46 + (t287 * t369 + t446 * t627 - t133) * t45 + (-t287 * t322 - t289 * t446 + t696) * t41) * m(7);];
tauc  = t1(:);
