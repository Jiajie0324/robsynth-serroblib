% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPPRRP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:11:20
% EndTime: 2019-03-09 02:11:29
% DurationCPUTime: 3.69s
% Computational Cost: add. (2643->406), mult. (4702->478), div. (0->0), fcn. (3765->4), ass. (0->303)
t219 = sin(qJ(5));
t393 = 0.2e1 * t219;
t213 = t219 ^ 2;
t221 = cos(qJ(5));
t215 = t221 ^ 2;
t323 = t213 + t215;
t220 = sin(qJ(4));
t214 = t220 ^ 2;
t222 = cos(qJ(4));
t216 = t222 ^ 2;
t322 = t214 + t216;
t139 = t322 * t221;
t308 = t139 * qJD(1);
t301 = t222 * qJD(4);
t183 = t219 * t301;
t303 = t220 * qJD(5);
t191 = t221 * t303;
t326 = t183 + t191;
t392 = t308 + t326;
t380 = t216 / 0.2e1;
t382 = t214 / 0.2e1;
t273 = t382 + t380;
t262 = 0.1e1 / 0.2e1 + t273;
t110 = t262 * t221;
t311 = t110 * qJD(1);
t391 = t311 + t326;
t108 = t262 * t219;
t312 = t108 * qJD(1);
t188 = t221 * t301;
t190 = t219 * t303;
t324 = t190 - t188;
t390 = t312 + t324;
t204 = t220 * qJD(1);
t389 = t204 + qJD(5);
t218 = pkin(1) + qJ(3);
t373 = pkin(8) * t222;
t260 = t220 * pkin(4) - t373;
t237 = t260 + t218;
t217 = -pkin(7) + qJ(2);
t335 = t220 * t221;
t290 = t217 * t335;
t88 = t219 * t237 + t290;
t388 = t88 / 0.2e1;
t339 = t219 * qJ(6);
t371 = t221 * pkin(5);
t256 = t339 + t371;
t119 = t256 * t222;
t387 = -t119 / 0.2e1;
t334 = t221 * qJ(6);
t374 = pkin(5) * t219;
t151 = -t334 + t374;
t386 = t151 / 0.2e1;
t370 = t222 * pkin(4);
t372 = t220 * pkin(8);
t152 = t370 + t372;
t385 = -t152 / 0.2e1;
t337 = t219 * t222;
t193 = pkin(5) * t337;
t384 = -t193 / 0.2e1;
t383 = t213 / 0.2e1;
t381 = t215 / 0.2e1;
t379 = t219 / 0.2e1;
t378 = t220 / 0.2e1;
t377 = -t221 / 0.2e1;
t376 = -t222 / 0.2e1;
t375 = pkin(4) * t221;
t111 = t273 * t221 + t377;
t99 = t111 * qJD(3);
t369 = -t88 * qJD(5) - t99;
t124 = t221 * t237;
t341 = t217 * t219;
t71 = -t124 + (-pkin(5) + t341) * t220;
t338 = t219 * t220;
t87 = t217 * t338 - t124;
t292 = -t87 / 0.2e1 + t71 / 0.2e1;
t261 = t292 * t221;
t288 = t88 * t379;
t340 = t217 * t221;
t70 = t219 * (t218 - t373) + (pkin(4) * t219 + qJ(6) + t340) * t220;
t41 = t70 * t338;
t224 = (t288 + t261) * t220 - t41 / 0.2e1 + t119 * t376;
t244 = t339 / 0.2e1 + t371 / 0.2e1;
t6 = t224 - t244;
t368 = t6 * qJD(1);
t367 = t70 * t219;
t366 = t70 * t221;
t365 = t71 * t219;
t364 = t71 * t221;
t141 = t219 * t152;
t332 = t221 * t222;
t154 = t217 * t332;
t206 = t222 * qJ(6);
t77 = t154 + t141 + t206;
t363 = t77 * t221;
t91 = t193 + (-t217 - t334) * t222;
t8 = t119 * t91 - t70 * t87 + t71 * t88;
t362 = t8 * qJD(1);
t207 = t222 * pkin(5);
t289 = t217 * t337;
t333 = t221 * t152;
t80 = -t207 + t289 - t333;
t361 = t80 * t219;
t360 = t87 * t220;
t359 = t88 * t220;
t293 = -t70 / 0.2e1 + t388;
t241 = qJ(6) * t378 - t293;
t245 = pkin(5) * t378 - t292;
t9 = t241 * t219 + t245 * t221;
t358 = t9 * qJD(1);
t90 = (-t151 + t217) * t220;
t357 = t90 * t221;
t356 = t91 * t219;
t355 = t91 * t221;
t21 = -t222 * t91 + (t365 + t366) * t220;
t354 = qJD(1) * t21;
t26 = -t359 + (t119 * t219 + t355) * t222;
t353 = qJD(1) * t26;
t346 = t119 * t221;
t27 = -t360 + (-t346 + t356) * t222;
t352 = qJD(1) * t27;
t30 = -t364 + t367;
t351 = qJD(1) * t30;
t31 = t70 * t220 - t91 * t332;
t350 = qJD(1) * t31;
t34 = -t216 * t341 - t360;
t349 = qJD(1) * t34;
t35 = -t216 * t340 - t359;
t348 = qJD(1) * t35;
t10 = -t245 * t219 + t241 * t221;
t347 = t10 * qJD(1);
t13 = -t80 * t332 + t71 * t335 + t77 * t337 - t41;
t345 = t13 * qJD(1);
t14 = -t88 * t332 + (t366 + (t71 - t87) * t219) * t222;
t344 = t14 * qJD(1);
t15 = (t70 - t357) * t222 + (t77 + t355) * t220;
t343 = t15 * qJD(1);
t16 = -t80 * t220 - t71 * t222 + (-t91 * t220 + t90 * t222) * t219;
t342 = t16 * qJD(1);
t272 = t381 + t383;
t143 = -pkin(4) - t256;
t331 = t222 * t143;
t277 = -t331 / 0.2e1;
t228 = t272 * t372 + t277;
t242 = t80 * t377 + t77 * t379;
t22 = t228 + t242;
t336 = t22 * qJD(1);
t28 = -t87 * t222 + (t289 + t333) * t220;
t330 = t28 * qJD(1);
t29 = t88 * t222 + (-t154 + t141) * t220;
t329 = t29 * qJD(1);
t78 = t380 + t323 * (t382 + 0.1e1 / 0.2e1);
t328 = t78 * qJD(1);
t129 = t333 / 0.2e1;
t327 = t129 - t289 / 0.2e1;
t137 = t322 * t219;
t317 = qJD(3) * t220;
t325 = -t137 * qJD(2) + t221 * t317;
t169 = t214 - t216;
t170 = t215 - t213;
t138 = t169 * t219;
t321 = qJD(1) * t138;
t140 = t169 * t221;
t320 = qJD(1) * t140;
t319 = qJD(2) * t220;
t318 = qJD(2) * t222;
t316 = qJD(4) * t219;
t315 = qJD(4) * t221;
t314 = qJD(5) * t219;
t313 = qJD(5) * t221;
t97 = t110 * qJD(3);
t196 = t213 * t220;
t197 = t215 * t220;
t134 = -t196 - t197;
t310 = t134 * qJD(1);
t136 = t323 * t222;
t309 = t136 * qJD(1);
t121 = t137 * qJD(1);
t307 = t169 * qJD(1);
t306 = t218 * qJD(1);
t305 = t219 * qJD(6);
t304 = t220 * qJD(4);
t203 = t220 * qJD(6);
t302 = t221 * qJD(6);
t205 = t222 * qJD(1);
t300 = t222 * qJD(5);
t299 = -t154 / 0.2e1 - t206;
t297 = pkin(8) * t314;
t296 = pkin(8) * t313;
t295 = -t372 / 0.2e1;
t294 = t372 / 0.2e1;
t291 = -t356 / 0.2e1 + (t277 + t294) * t221;
t287 = t219 * t318;
t286 = t219 * t300;
t285 = t221 * t300;
t284 = t219 * t302;
t283 = t219 * t313;
t180 = t219 * t315;
t181 = t219 * t205;
t187 = t221 * t205;
t282 = t220 * t301;
t281 = t222 * t305;
t280 = t220 * t205;
t279 = t337 / 0.2e1;
t278 = t334 / 0.2e1;
t276 = t331 / 0.2e1;
t275 = t151 * t376;
t274 = t383 - t215 / 0.2e1;
t106 = (-0.1e1 / 0.2e1 + t274) * t222;
t271 = qJD(1) * t106 - t180;
t126 = t274 * t222;
t270 = qJD(1) * t126 - t180;
t149 = t221 * t216 * t219 * qJD(1);
t269 = qJD(4) * t126 + t149;
t179 = t219 * t204;
t268 = qJD(5) * t108 + t179;
t109 = (-0.1e1 / 0.2e1 + t273) * t219;
t267 = qJD(5) * t109 - t179;
t266 = -qJD(2) + t306;
t264 = t219 * t187;
t263 = t219 * t188;
t259 = -t219 * t319 + t97;
t258 = 0.2e1 * t263;
t257 = pkin(4) * t279 + t219 * t294;
t255 = t220 * t143 + t373;
t243 = t366 / 0.2e1 + t365 / 0.2e1;
t4 = (-t90 / 0.2e1 + t243) * t222 + (t363 / 0.2e1 + t91 / 0.2e1 + t361 / 0.2e1) * t220;
t7 = t70 * t77 + t71 * t80 + t90 * t91;
t254 = t7 * qJD(1) + t4 * qJD(3);
t253 = t361 + t363;
t89 = (-0.1e1 + t323) * t222 * t220;
t252 = t4 * qJD(1) + t89 * qJD(3);
t128 = -t141 / 0.2e1;
t225 = (t275 - t91 / 0.2e1) * t221 + (t295 + t276 + t387) * t219;
t18 = t128 + t225 + t299;
t74 = t143 * t221 + t151 * t219;
t251 = -qJD(1) * t18 + qJD(4) * t74;
t144 = t217 * t279;
t166 = t221 * t295;
t232 = t151 * t279 + t221 * t276 + t166 + t356 / 0.2e1;
t20 = -t207 + t144 + (t387 + t385) * t221 + t232;
t75 = -t143 * t219 + t151 * t221;
t250 = -qJD(1) * t20 + qJD(4) * t75;
t249 = qJD(3) * t109 + qJD(5) * t87;
t248 = t389 * t222;
t247 = qJD(5) * t151 - t305;
t246 = -t77 * qJ(6) / 0.2e1 + t80 * pkin(5) / 0.2e1;
t65 = t166 + (-t370 / 0.2e1 + t385) * t221;
t240 = pkin(4) * t316 - qJD(1) * t65;
t127 = t141 / 0.2e1;
t64 = t127 + t257;
t239 = pkin(4) * t315 - qJD(1) * t64;
t25 = t207 / 0.2e1 + t291 + t327;
t238 = -qJD(1) * t25 + t143 * t316;
t236 = t221 * t248;
t235 = -qJD(3) * t108 - t221 * t319;
t234 = -qJD(2) * t139 - t219 * t317;
t233 = t256 * qJD(5);
t135 = t170 * t216;
t231 = t135 * qJD(1) + t258;
t230 = -t170 * qJD(4) + 0.2e1 * t264;
t223 = (t293 * t219 + t261) * pkin(8) + t119 * t143 / 0.2e1 + t91 * t386;
t2 = t223 + t246;
t59 = t384 + (t278 + t386) * t222;
t229 = t143 * t151 * qJD(4) + t2 * qJD(1) - t59 * qJD(3);
t227 = -t233 + t302;
t148 = t215 * t216 + t214;
t226 = t148 * qJD(1) + t263 + t303;
t212 = qJ(2) * qJD(1);
t211 = qJ(2) * qJD(2);
t194 = t301 / 0.2e1;
t189 = t221 * t318;
t186 = t221 * t204;
t184 = t220 * t302;
t182 = t219 * t304;
t150 = t221 * t281;
t147 = t389 * qJ(6);
t133 = t186 + t313;
t132 = t179 + t314;
t131 = (t204 + qJD(5) / 0.2e1) * t222;
t117 = -t182 + t285;
t116 = -t221 * t304 - t286;
t115 = t213 * qJD(4) + t264;
t114 = t126 * qJD(5);
t107 = t213 * t376 + t222 * t381 + t376;
t102 = t219 * t248;
t101 = (t181 - t315) * t220;
t79 = t272 * t214 - t272 + t380;
t73 = -qJD(5) * t110 - t186;
t72 = -qJD(5) * t111 + t186;
t60 = t222 * t278 + t275 + t384;
t56 = t121 + t324;
t33 = t166 + t129 + (-t375 / 0.2e1 - t341) * t222;
t32 = -t154 + t128 + t257;
t24 = t144 - t333 / 0.2e1 - t207 / 0.2e1 + t291;
t23 = t228 - t242;
t19 = -t346 / 0.2e1 + t207 + t232 + t327;
t17 = t127 + t225 - t299;
t12 = t87 * t377 - t367 / 0.2e1 + t288 + t364 / 0.2e1 + t244 * t220;
t11 = t87 * t379 + t221 * t388 + (t278 - t374 / 0.2e1) * t220 - t243;
t5 = t224 + t244;
t3 = t4 * qJD(4);
t1 = t223 - t246;
t36 = [0, 0, 0, 0, qJD(2), t211, qJD(2), qJD(3), qJD(3) * t218 + t211, -t282, t169 * qJD(4), 0, 0, 0, t218 * t301 + t317, qJD(3) * t222 - t218 * t304, -t215 * t282 - t216 * t283, -t135 * qJD(5) + t220 * t258, -t140 * qJD(4) - t220 * t286, t138 * qJD(4) - t220 * t285, t282, qJD(4) * t28 + qJD(5) * t35 + t325, -qJD(4) * t29 - qJD(5) * t34 + t234, qJD(4) * t16 + qJD(5) * t26 - t216 * t284 + t325, -t136 * qJD(3) - t13 * qJD(4) - t14 * qJD(5) - t220 * t281, qJD(4) * t15 + qJD(5) * t27 + qJD(6) * t148 - t234, qJD(2) * t21 + qJD(3) * t30 + qJD(4) * t7 + qJD(5) * t8 + qJD(6) * t31; 0, 0, 0, 0, qJD(1), t212, qJD(1), 0, t212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, -t308, -t121, 0, t308, qJD(3) * t79 + qJD(4) * t23 + qJD(5) * t11 + t354; 0, 0, 0, 0, 0, 0, 0, qJD(1), t306, 0, 0, 0, 0, 0, t204, t205, 0, 0, 0, 0, 0, t72, t267, t72, -t309, -t267, qJD(2) * t79 + qJD(5) * t5 + qJD(6) * t111 + t3 + t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t307, -t304, -t301, 0, t218 * t205 - t217 * t304, -t218 * t204 - t217 * t301, -t114 + (-t215 * t205 - t180) * t220 (t196 - t197) * qJD(4) + (-qJD(5) + t204) * t332 * t393, t183 - t320, t188 + t321, t131, t330 + (t219 * t260 - t290) * qJD(4) + t33 * qJD(5), -t329 + (-pkin(8) * t332 + (t341 + t375) * t220) * qJD(4) + t32 * qJD(5), t342 + (-t219 * t255 - t357) * qJD(4) + t19 * qJD(5) + t107 * qJD(6), qJD(4) * t253 + t12 * qJD(5) - t345, t343 + (-t90 * t219 + t221 * t255) * qJD(4) + t17 * qJD(5) + t150, t23 * qJD(2) + (pkin(8) * t253 + t143 * t90) * qJD(4) + t1 * qJD(5) + t24 * qJD(6) + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, -t231, -t102, -t236, t194, qJD(4) * t33 + t348 + t369, qJD(4) * t32 + t249 - t349, qJD(4) * t19 + t353 + t369, -t344 + t12 * qJD(4) + (-t206 * t221 + t193) * qJD(5) - t281, qJD(4) * t17 + t203 - t249 + t352, t362 + t11 * qJD(2) + t5 * qJD(3) + t1 * qJD(4) + (-pkin(5) * t88 - qJ(6) * t87) * qJD(5) + t70 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t107 - t149, -t102, t226, qJD(4) * t24 + qJD(5) * t70 + t350 + t99; 0, 0, 0, 0, -qJD(1), -t212, -qJD(1), 0, -qJD(3) - t212, 0, 0, 0, 0, 0, -t301, t304, 0, 0, 0, 0, 0, t56, t392, t56, t134 * qJD(4), -t392, -qJD(3) * t78 - qJD(4) * t22 - qJD(5) * t10 - t203 * t219 - t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, t204, 0, 0, 0, 0, 0, -t187, t181, -t187, t310, -t181, -t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, t133, t132, 0, -t133, t247 - t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132; 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t266, 0, 0, 0, 0, 0, -t204, -t205, 0, 0, 0, 0, 0, t73, t268, t73, t309, -t268, qJD(2) * t78 + qJD(5) * t6 + qJD(6) * t110 + t3 - t351; 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t304, -t301, 0, 0, 0, 0, 0, t116, -t117, t116, t136 * qJD(4), t117, t143 * t304 + t60 * qJD(5) + (pkin(8) * qJD(4) * t323 + t305) * t222 + t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t391, t390, -t391, 0, -t390, t60 * qJD(4) - t220 * t233 + t184 + t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, -t307, 0, 0, 0, -t266 * t222, t266 * t220, t215 * t280 - t114, -t236 * t393, t191 + t320, -t190 - t321, -t131, qJD(5) * t65 + t189 - t330, t64 * qJD(5) - t287 + t329, qJD(5) * t20 - qJD(6) * t106 + t189 - t342, -qJD(2) * t134 - qJD(5) * t9 + t184 + t345, t18 * qJD(5) + t150 + t287 - t343, qJD(2) * t22 + qJD(5) * t2 + qJD(6) * t25 - t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, -t204, 0, 0, 0, 0, 0, t187, -t181, t187, -t310, t181, t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t59 - t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, t170 * qJD(5), 0, 0, 0, -pkin(4) * t314, -pkin(4) * t313, -qJD(5) * t75 + t284, 0, -qJD(5) * t74 + qJD(6) * t213, t247 * t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t270, -t230, t133, -t132, -t205 / 0.2e1, -t240 - t296, -t239 + t297, -t250 - t296, t227 - t358, -t251 - t297, pkin(8) * t227 + t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t271, t133, t115, -t238 + t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t231, t101, t221 * t280 + t182, t194, -qJD(4) * t65 + t259 - t348, -qJD(4) * t64 + t235 + t349, -qJD(4) * t20 + t259 - t353, qJD(4) * t9 + t344, -qJD(4) * t18 + t203 - t235 - t352, qJ(6) * t203 + qJD(2) * t10 - qJD(3) * t6 - qJD(4) * t2 - t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, -t186, -t179, 0, t186, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t312, t311, 0, t312, qJD(4) * t59 - t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270, t230, -t186, t179, t205 / 0.2e1, t240, t239, t250, t358, t251, -t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t389, t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t106 + t149, t101, -t226, -t350 - t97 - qJD(4) * t25 + (-qJ(6) * qJD(5) + qJD(2) * t219) * t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, -t186, -t115, t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, -t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t36;
