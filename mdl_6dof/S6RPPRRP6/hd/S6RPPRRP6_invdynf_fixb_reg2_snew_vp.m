% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRRP6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 15:02
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRRP6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP6_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP6_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRP6_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRP6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPPRRP6_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 15:01:57
% EndTime: 2019-05-05 15:02:00
% DurationCPUTime: 3.42s
% Computational Cost: add. (4920->225), mult. (9345->191), div. (0->0), fcn. (5350->6), ass. (0->111)
t1458 = sin(qJ(1));
t1461 = cos(qJ(1));
t1460 = cos(qJ(4));
t1491 = qJD(1) * t1460;
t1476 = qJD(4) * t1491;
t1457 = sin(qJ(4));
t1480 = t1457 * qJDD(1);
t1470 = qJDD(5) + t1476 + t1480;
t1456 = sin(qJ(5));
t1459 = cos(qJ(5));
t1424 = -t1459 * qJD(4) + t1456 * t1491;
t1426 = t1456 * qJD(4) + t1459 * t1491;
t1489 = t1426 * t1424;
t1393 = t1470 - t1489;
t1405 = t1424 ^ 2;
t1485 = t1457 * qJD(1);
t1442 = qJD(5) + t1485;
t1496 = t1442 ^ 2;
t1499 = -t1496 - t1405;
t1505 = t1459 * t1393 + t1456 * t1499;
t1478 = qJD(4) * t1485;
t1479 = t1460 * qJDD(1);
t1428 = -t1478 + t1479;
t1475 = -t1459 * qJDD(4) + t1456 * t1428;
t1482 = qJD(5) + t1442;
t1384 = t1426 * t1482 + t1475;
t1504 = -t1456 * t1393 + t1459 * t1499;
t1521 = -t1460 * t1384 + t1457 * t1504;
t1526 = t1458 * t1521 + t1461 * t1505;
t1525 = -t1458 * t1505 + t1461 * t1521;
t1392 = t1470 + t1489;
t1423 = t1426 ^ 2;
t1501 = -t1423 - t1496;
t1370 = t1459 * t1392 + t1456 * t1501;
t1474 = t1456 * qJDD(4) + t1459 * t1428;
t1468 = -t1424 * qJD(5) + t1474;
t1490 = t1424 * t1442;
t1465 = t1468 - t1490;
t1354 = t1457 * t1370 + t1460 * t1465;
t1368 = t1456 * t1392 - t1459 * t1501;
t1524 = t1458 * t1354 + t1461 * t1368;
t1523 = t1461 * t1354 - t1458 * t1368;
t1522 = t1457 * t1384 + t1460 * t1504;
t1356 = t1460 * t1370 - t1457 * t1465;
t1389 = t1468 + t1490;
t1469 = (-qJD(5) + t1442) * t1426 - t1475;
t1498 = -t1459 * t1389 + t1456 * t1469;
t1391 = t1423 + t1405;
t1497 = t1456 * t1389 + t1459 * t1469;
t1510 = t1460 * t1391 + t1457 * t1497;
t1518 = t1458 * t1510 + t1461 * t1498;
t1517 = -t1458 * t1498 + t1461 * t1510;
t1511 = -t1457 * t1391 + t1460 * t1497;
t1463 = qJD(1) ^ 2;
t1437 = -t1461 * g(1) - t1458 * g(2);
t1467 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1437;
t1493 = pkin(1) + qJ(3);
t1411 = t1463 * t1493 - qJDD(3) + t1467;
t1495 = 2 * qJD(3);
t1494 = 2 * qJD(6);
t1492 = pkin(4) * t1457;
t1404 = -qJDD(1) * pkin(7) - t1411;
t1396 = -t1460 * g(3) + t1457 * t1404;
t1462 = qJD(4) ^ 2;
t1473 = t1463 * (-pkin(8) * t1460 + t1492);
t1382 = -t1462 * pkin(4) + qJDD(4) * pkin(8) - t1457 * t1473 + t1396;
t1455 = t1463 * pkin(7);
t1436 = t1458 * g(1) - t1461 * g(2);
t1471 = t1463 * qJ(2) - qJDD(2) + t1436;
t1464 = -t1428 * pkin(8) - t1455 + (t1492 + t1493) * qJDD(1) + (t1495 + (0.2e1 * pkin(4) * t1460 + pkin(8) * t1457) * qJD(4)) * qJD(1) + t1471;
t1363 = t1459 * t1382 + t1456 * t1464;
t1453 = t1457 ^ 2;
t1454 = t1460 ^ 2;
t1481 = t1453 + t1454;
t1477 = t1457 * t1463 * t1460;
t1362 = -t1456 * t1382 + t1459 * t1464;
t1395 = t1457 * g(3) + t1460 * t1404;
t1381 = qJDD(4) * pkin(4) + t1462 * pkin(8) - t1460 * t1473 + t1395;
t1410 = qJD(1) * t1495 + qJDD(1) * t1493 + t1471;
t1440 = -t1454 * t1463 - t1462;
t1439 = -t1453 * t1463 - t1462;
t1435 = -qJDD(4) - t1477;
t1434 = qJDD(4) - t1477;
t1433 = t1481 * t1463;
t1432 = t1458 * qJDD(1) + t1461 * t1463;
t1431 = t1461 * qJDD(1) - t1458 * t1463;
t1430 = t1481 * qJDD(1);
t1429 = -0.2e1 * t1478 + t1479;
t1427 = 0.2e1 * t1476 + t1480;
t1418 = qJDD(1) * pkin(1) + t1471;
t1417 = t1463 * pkin(1) + t1467;
t1409 = t1460 * t1435 - t1457 * t1440;
t1408 = -t1457 * t1434 + t1460 * t1439;
t1407 = t1457 * t1435 + t1460 * t1440;
t1406 = t1460 * t1434 + t1457 * t1439;
t1403 = -t1455 + t1410;
t1400 = t1424 * pkin(5) - t1426 * qJ(6);
t1373 = -t1457 * t1395 + t1460 * t1396;
t1372 = t1460 * t1395 + t1457 * t1396;
t1349 = t1426 * t1494 + (-t1424 * t1482 + t1474) * qJ(6) + t1381 - t1384 * pkin(5);
t1348 = -pkin(5) * t1470 - qJ(6) * t1496 + t1426 * t1400 + qJDD(6) - t1362;
t1347 = -pkin(5) * t1496 + qJ(6) * t1470 - t1424 * t1400 + t1442 * t1494 + t1363;
t1346 = -t1456 * t1362 + t1459 * t1363;
t1345 = t1459 * t1362 + t1456 * t1363;
t1344 = t1460 * t1346 - t1457 * t1381;
t1343 = t1457 * t1346 + t1460 * t1381;
t1342 = t1459 * t1347 + t1456 * t1348;
t1341 = t1456 * t1347 - t1459 * t1348;
t1340 = t1460 * t1342 - t1457 * t1349;
t1339 = t1457 * t1342 + t1460 * t1349;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1432, -t1431, 0, -t1458 * t1436 + t1461 * t1437, 0, 0, 0, 0, 0, 0, 0, t1432, t1431, -t1461 * t1417 - t1458 * t1418, 0, 0, 0, 0, 0, 0, 0, t1431, -t1432, -t1458 * t1410 - t1461 * t1411, 0, 0, 0, 0, 0, 0, t1461 * t1406 - t1458 * t1427, t1461 * t1407 - t1458 * t1429, -t1461 * t1430 + t1458 * t1433, t1461 * t1372 - t1458 * t1403, 0, 0, 0, 0, 0, 0, t1525, -t1523, t1517, t1461 * t1343 - t1458 * t1345, 0, 0, 0, 0, 0, 0, t1525, t1517, t1523, t1461 * t1339 - t1458 * t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1431, -t1432, 0, t1461 * t1436 + t1458 * t1437, 0, 0, 0, 0, 0, 0, 0, -t1431, t1432, -t1458 * t1417 + t1461 * t1418, 0, 0, 0, 0, 0, 0, 0, t1432, t1431, t1461 * t1410 - t1458 * t1411, 0, 0, 0, 0, 0, 0, t1458 * t1406 + t1461 * t1427, t1458 * t1407 + t1461 * t1429, -t1458 * t1430 - t1461 * t1433, t1458 * t1372 + t1461 * t1403, 0, 0, 0, 0, 0, 0, t1526, -t1524, t1518, t1458 * t1343 + t1461 * t1345, 0, 0, 0, 0, 0, 0, t1526, t1518, t1524, t1458 * t1339 + t1461 * t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1408, t1409, 0, t1373, 0, 0, 0, 0, 0, 0, t1522, -t1356, t1511, t1344, 0, 0, 0, 0, 0, 0, t1522, t1511, t1356, t1340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1463, -qJDD(1), 0, t1437, 0, 0, 0, 0, 0, 0, 0, t1463, qJDD(1), -t1417, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1463, -t1411, 0, 0, 0, 0, 0, 0, t1406, t1407, -t1430, t1372, 0, 0, 0, 0, 0, 0, t1521, -t1354, t1510, t1343, 0, 0, 0, 0, 0, 0, t1521, t1510, t1354, t1339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1463, 0, t1436, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1463, t1418, 0, 0, 0, 0, 0, 0, 0, t1463, qJDD(1), t1410, 0, 0, 0, 0, 0, 0, t1427, t1429, -t1433, t1403, 0, 0, 0, 0, 0, 0, t1505, -t1368, t1498, t1345, 0, 0, 0, 0, 0, 0, t1505, t1498, t1368, t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1408, t1409, 0, t1373, 0, 0, 0, 0, 0, 0, t1522, -t1356, t1511, t1344, 0, 0, 0, 0, 0, 0, t1522, t1511, t1356, t1340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1408, t1409, 0, t1373, 0, 0, 0, 0, 0, 0, t1522, -t1356, t1511, t1344, 0, 0, 0, 0, 0, 0, t1522, t1511, t1356, t1340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1463, -qJDD(1), t1417, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1463, t1411, 0, 0, 0, 0, 0, 0, -t1406, -t1407, t1430, -t1372, 0, 0, 0, 0, 0, 0, -t1521, t1354, -t1510, -t1343, 0, 0, 0, 0, 0, 0, -t1521, -t1510, -t1354, -t1339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1463, -t1418, 0, 0, 0, 0, 0, 0, 0, -t1463, -qJDD(1), -t1410, 0, 0, 0, 0, 0, 0, -t1427, -t1429, t1433, -t1403, 0, 0, 0, 0, 0, 0, -t1505, t1368, -t1498, -t1345, 0, 0, 0, 0, 0, 0, -t1505, -t1498, -t1368, -t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1408, t1409, 0, t1373, 0, 0, 0, 0, 0, 0, t1522, -t1356, t1511, t1344, 0, 0, 0, 0, 0, 0, t1522, t1511, t1356, t1340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1463, -qJDD(1), -t1410, 0, 0, 0, 0, 0, 0, -t1427, -t1429, t1433, -t1403, 0, 0, 0, 0, 0, 0, -t1505, t1368, -t1498, -t1345, 0, 0, 0, 0, 0, 0, -t1505, -t1498, -t1368, -t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1463, -t1411, 0, 0, 0, 0, 0, 0, t1406, t1407, -t1430, t1372, 0, 0, 0, 0, 0, 0, t1521, -t1354, t1510, t1343, 0, 0, 0, 0, 0, 0, t1521, t1510, t1354, t1339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1439, t1435, -t1480, t1396, 0, 0, 0, 0, 0, 0, t1504, -t1370, t1497, t1346, 0, 0, 0, 0, 0, 0, t1504, t1497, t1370, t1342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1434, t1440, -t1479, t1395, 0, 0, 0, 0, 0, 0, -t1384, -t1465, t1391, t1381, 0, 0, 0, 0, 0, 0, -t1384, t1391, t1465, t1349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1427, t1429, -t1433, t1403, 0, 0, 0, 0, 0, 0, t1505, -t1368, t1498, t1345, 0, 0, 0, 0, 0, 0, t1505, t1498, t1368, t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1499, -t1392, t1469, t1363, 0, 0, 0, 0, 0, 0, t1499, t1469, t1392, t1347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1393, t1501, -t1389, t1362, 0, 0, 0, 0, 0, 0, t1393, -t1389, -t1501, -t1348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, t1465, -t1391, -t1381, 0, 0, 0, 0, 0, 0, t1384, -t1391, -t1465, -t1349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1499, t1469, t1392, t1347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, -t1391, -t1465, -t1349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1393, t1389, t1501, t1348;];
f_new_reg  = t1;
