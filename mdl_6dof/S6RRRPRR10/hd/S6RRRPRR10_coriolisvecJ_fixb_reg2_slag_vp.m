% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:21:57
% EndTime: 2019-03-09 19:22:23
% DurationCPUTime: 11.75s
% Computational Cost: add. (14786->657), mult. (33566->852), div. (0->0), fcn. (22731->8), ass. (0->294)
t305 = cos(qJ(3));
t381 = qJD(3) * t305;
t306 = cos(qJ(2));
t387 = qJD(1) * t306;
t492 = -t305 * t387 + t381;
t301 = sin(qJ(3));
t362 = t301 * t387;
t383 = qJD(3) * t301;
t491 = t362 - t383;
t302 = sin(qJ(2));
t252 = -pkin(2) * t306 - pkin(8) * t302 - pkin(1);
t219 = t252 * qJD(1);
t289 = pkin(7) * t387;
t260 = qJD(2) * pkin(8) + t289;
t157 = t305 * t219 - t301 * t260;
t375 = qJD(4) - t157;
t445 = pkin(8) - pkin(9);
t262 = t445 * t305;
t444 = pkin(7) * t301;
t365 = -pkin(3) - t444;
t404 = t305 * t306;
t315 = -pkin(9) * t404 + (-pkin(4) + t365) * t302;
t335 = pkin(2) * t302 - pkin(8) * t306;
t245 = t335 * qJD(1);
t405 = t305 * t245;
t490 = -qJD(1) * t315 + qJD(3) * t262 + t405;
t215 = t301 * t245;
t388 = qJD(1) * t302;
t284 = qJ(4) * t388;
t406 = t302 * t305;
t407 = t301 * t306;
t489 = t215 + t284 + (-pkin(7) * t406 + pkin(9) * t407) * qJD(1) + t445 * t383;
t361 = t305 * t388;
t386 = qJD(2) * t301;
t234 = t361 + t386;
t488 = -t234 * pkin(9) + t375;
t300 = sin(qJ(5));
t304 = cos(qJ(5));
t237 = t300 * t301 + t304 * t305;
t164 = t237 * qJD(5) - t300 * t383 - t304 * t381;
t319 = t306 * t237;
t396 = qJD(1) * t319 + t164;
t379 = qJD(5) * t304;
t380 = qJD(5) * t300;
t395 = t492 * t300 + t301 * t379 + t491 * t304 - t305 * t380;
t278 = -qJD(3) + t387;
t269 = qJD(5) + t278;
t257 = qJD(6) + t269;
t261 = t445 * t301;
t430 = t261 * t379 - t262 * t380 + t490 * t300 - t489 * t304;
t180 = t300 * t261 + t304 * t262;
t429 = -qJD(5) * t180 + t489 * t300 + t490 * t304;
t158 = t219 * t301 + t260 * t305;
t363 = t301 * t388;
t376 = t305 * qJD(2);
t232 = t363 - t376;
t123 = pkin(9) * t232 + t158;
t446 = pkin(3) + pkin(4);
t249 = -qJ(4) * t300 - t304 * t446;
t426 = qJD(5) * t249 - t300 * t123 + t488 * t304;
t250 = qJ(4) * t304 - t300 * t446;
t425 = -qJD(5) * t250 - t304 * t123 - t488 * t300;
t153 = t232 * t300 + t234 * t304;
t299 = sin(qJ(6));
t303 = cos(qJ(6));
t328 = -t304 * t232 + t234 * t300;
t468 = -t303 * t153 + t299 * t328;
t469 = t153 * t299 + t303 * t328;
t441 = t469 * t468;
t473 = t468 ^ 2 - t469 ^ 2;
t265 = t278 * qJ(4);
t106 = t123 - t265;
t94 = t278 * t446 + t488;
t40 = -t106 * t300 + t304 * t94;
t484 = pkin(10) * t153;
t36 = t40 - t484;
t34 = pkin(5) * t269 + t36;
t41 = t106 * t304 + t300 * t94;
t461 = pkin(10) * t328;
t37 = t41 - t461;
t434 = t303 * t37;
t13 = t299 * t34 + t434;
t384 = qJD(2) * t306;
t359 = t301 * t384;
t316 = t302 * t381 + t359;
t373 = qJD(2) * qJD(3);
t184 = qJD(1) * t316 + t301 * t373;
t263 = t278 * qJD(4);
t374 = qJD(1) * qJD(2);
t283 = t302 * t374;
t271 = qJ(4) * t283;
t248 = t335 * qJD(2);
t221 = qJD(1) * t248;
t340 = pkin(7) * t283;
t312 = -t219 * t381 - t301 * t221 + t260 * t383 + t305 * t340;
t71 = -t263 + t271 - t312;
t48 = pkin(9) * t184 + t71;
t349 = t306 * t374;
t382 = qJD(3) * t302;
t356 = t301 * t382;
t183 = qJD(1) * t356 + (-t349 - t373) * t305;
t339 = t219 * t383 - t305 * t221 + t260 * t381 - t301 * t340;
t51 = t183 * pkin(9) - t283 * t446 + t339;
t11 = -qJD(5) * t41 - t300 * t48 + t304 * t51;
t60 = t304 * t183 - t300 * t184 - t232 * t379 + t234 * t380;
t7 = -pkin(5) * t283 + t60 * pkin(10) + t11;
t10 = -t106 * t380 + t300 * t51 + t304 * t48 + t94 * t379;
t61 = -t300 * t183 - t184 * t304 + t232 * t380 + t234 * t379;
t9 = -pkin(10) * t61 + t10;
t2 = -qJD(6) * t13 - t299 * t9 + t303 * t7;
t288 = pkin(7) * t388;
t298 = qJD(2) * pkin(2);
t259 = t288 - t298;
t139 = t232 * pkin(3) - t234 * qJ(4) + t259;
t110 = -pkin(4) * t232 - t139;
t66 = pkin(5) * t328 + t110;
t472 = t468 * t66 + t2;
t377 = qJD(6) * t303;
t378 = qJD(6) * t299;
t22 = t153 * t378 + t299 * t61 + t303 * t60 + t328 * t377;
t471 = t257 * t469 - t22;
t351 = -t299 * t7 - t303 * t9 - t34 * t377 + t37 * t378;
t470 = t469 * t66 + t351;
t313 = qJD(6) * t468 + t299 * t60 - t303 * t61;
t487 = t257 * t468 - t313;
t435 = t299 * t37;
t12 = t303 * t34 - t435;
t486 = -t12 * t469 - t13 * t468;
t412 = t234 * t278;
t415 = t232 * t278;
t485 = (t184 - t412) * t301 + t305 * (t183 - t415);
t483 = pkin(5) * t388 + pkin(10) * t396 + t429;
t482 = pkin(10) * t395 - t430;
t481 = -t484 + t426;
t480 = -t461 - t425;
t479 = t110 * t153;
t420 = t153 * t328;
t320 = -t158 * t278 - t339;
t475 = t492 * qJ(4) + t301 * qJD(4) + t289;
t474 = t153 ^ 2 - t328 ^ 2;
t457 = t153 * t269 - t61;
t416 = t184 * t305;
t417 = t183 * t301;
t466 = t302 * (qJD(3) * (t232 * t301 - t234 * t305) - t416 + t417) - (t232 * t305 + t234 * t301) * t384;
t343 = t232 + t376;
t465 = qJD(1) * (-t278 * t407 + t302 * t343) + t278 * t383;
t296 = t302 ^ 2;
t323 = qJD(1) * t296 - t278 * t306;
t355 = t278 * t381;
t464 = qJD(2) * (t232 * t302 + t301 * t323) - t306 * t184 - t302 * t355;
t462 = -0.2e1 * t374;
t460 = t41 * t269 + t11;
t133 = t158 - t265;
t341 = pkin(3) * t283;
t90 = t339 - t341;
t459 = t133 * t278 + t90;
t458 = -t328 * t269 + t60;
t280 = pkin(7) * t407;
t295 = t306 * pkin(3);
t144 = t306 * pkin(4) + t280 + t295 + (-pkin(9) * t302 - t252) * t305;
t281 = pkin(7) * t404;
t194 = t301 * t252 + t281;
t181 = -qJ(4) * t306 + t194;
t409 = t301 * t302;
t156 = pkin(9) * t409 + t181;
t78 = t300 * t144 + t304 * t156;
t368 = t446 * t301;
t399 = -qJD(3) * t368 + t362 * t446 + t475;
t453 = t184 + t412;
t451 = t110 * t328 - t10;
t447 = t234 ^ 2;
t443 = pkin(8) * t234;
t442 = pkin(8) * t278;
t179 = t304 * t261 - t262 * t300;
t408 = t301 * t304;
t324 = t300 * t305 - t408;
t134 = pkin(10) * t324 + t179;
t135 = -pkin(10) * t237 + t180;
t67 = t134 * t303 - t135 * t299;
t440 = qJD(6) * t67 + t483 * t299 - t482 * t303;
t68 = t134 * t299 + t135 * t303;
t439 = -qJD(6) * t68 + t482 * t299 + t483 * t303;
t244 = -pkin(5) + t249;
t161 = t244 * t299 + t250 * t303;
t438 = qJD(6) * t161 + t481 * t299 + t480 * t303;
t160 = t244 * t303 - t250 * t299;
t437 = -qJD(6) * t160 + t480 * t299 - t481 * t303;
t436 = t269 * t40;
t80 = t184 * pkin(3) + pkin(7) * t349 + t183 * qJ(4) - t234 * qJD(4);
t432 = t80 * t301;
t431 = t80 * t305;
t155 = -t237 * t299 - t303 * t324;
t428 = -qJD(6) * t155 + t396 * t299 - t395 * t303;
t427 = t237 * t377 + t395 * t299 + t396 * t303 - t324 * t378;
t422 = t139 * t234;
t413 = t234 * t232;
t411 = t259 * t301;
t410 = t259 * t305;
t292 = t301 * qJ(4);
t309 = qJD(1) ^ 2;
t403 = t306 * t309;
t308 = qJD(2) ^ 2;
t402 = t308 * t302;
t401 = t308 * t306;
t400 = t395 * pkin(5) + t399;
t325 = t299 * t300 - t303 * t304;
t398 = t257 * t325;
t238 = t299 * t304 + t300 * t303;
t397 = t257 * t238;
t394 = t491 * pkin(3) + t475;
t393 = t301 * t248 + t252 * t381;
t168 = t234 * pkin(3) + t232 * qJ(4);
t358 = t306 * t376;
t391 = qJ(4) * t358 + qJD(4) * t406;
t389 = -t306 ^ 2 + t296;
t385 = qJD(2) * t302;
t372 = t301 * t442;
t371 = t305 * t442;
t251 = -t305 * pkin(3) - pkin(2) - t292;
t370 = pkin(8) * t376;
t369 = pkin(7) * t384;
t366 = t302 * t403;
t354 = t278 * t388;
t350 = t232 ^ 2 - t447;
t345 = pkin(1) * t462;
t77 = t304 * t144 - t156 * t300;
t193 = t252 * t305 - t280;
t344 = t269 ^ 2;
t226 = t305 * pkin(4) - t251;
t342 = -t234 + t386;
t338 = t306 * t283;
t337 = -pkin(7) - t368;
t126 = -pkin(4) * t234 - t168;
t336 = t302 * t365;
t334 = qJD(3) * t281 - t305 * t248 + t252 * t383;
t206 = t237 * t302;
t53 = pkin(5) * t306 - pkin(10) * t206 + t77;
t205 = t300 * t406 - t302 * t408;
t56 = -pkin(10) * t205 + t78;
t28 = -t299 * t56 + t303 * t53;
t29 = t299 * t53 + t303 * t56;
t333 = (qJD(3) * t232 - t183) * pkin(8);
t131 = pkin(3) * t278 + t375;
t332 = t131 * t305 - t133 * t301;
t330 = -t157 * t305 - t158 * t301;
t129 = -t205 * t299 + t206 * t303;
t186 = -pkin(7) * t361 + t215;
t79 = pkin(9) * t356 + qJD(2) * t315 + t334;
t286 = qJ(4) * t385;
t81 = t286 + (-pkin(7) * qJD(2) + pkin(9) * qJD(3)) * t406 + (-qJD(4) + (-pkin(7) * qJD(3) + pkin(9) * qJD(2)) * t301) * t306 + t393;
t26 = t144 * t379 - t156 * t380 + t300 * t79 + t304 * t81;
t277 = qJ(4) * t406;
t178 = t302 * t337 + t277;
t314 = -t301 * t415 - t416;
t52 = -pkin(4) * t184 - t80;
t27 = -qJD(5) * t78 - t300 * t81 + t304 * t79;
t118 = (-t302 * t376 - t306 * t383) * pkin(7) + t393;
t311 = t184 * t409 + t232 * t316;
t310 = -t157 * t278 + t312;
t98 = (-t305 * t446 - t292) * t382 + t337 * t384 + t391;
t199 = -t277 + (pkin(3) * t301 + pkin(7)) * t302;
t192 = (-t278 - t387) * t385;
t185 = pkin(7) * t363 + t405;
t182 = -t193 + t295;
t170 = pkin(8) * t416;
t169 = pkin(5) * t237 + t226;
t167 = qJD(1) * t336 - t405;
t166 = t186 + t284;
t154 = t303 * t237 - t299 * t324;
t128 = t303 * t205 + t206 * t299;
t125 = -t183 - t415;
t124 = t205 * pkin(5) + t178;
t119 = t385 * t444 - t334;
t117 = pkin(3) * t316 + qJ(4) * t356 + t369 - t391;
t111 = -t355 + (t278 * t404 + t302 * t342) * qJD(1);
t109 = qJD(2) * t336 + t334;
t105 = -t306 * qJD(4) + t118 + t286;
t102 = qJD(2) * t319 + (qJD(3) - qJD(5)) * t302 * t324;
t101 = t164 * t302 + t300 * t358 - t304 * t359;
t93 = -t305 * t412 - t417;
t89 = -t183 * t406 + (-t356 + t358) * t234;
t70 = -pkin(5) * t153 + t126;
t69 = t278 * t356 + t183 * t306 + (t234 * t302 + t305 * t323) * qJD(2);
t42 = t101 * pkin(5) + t98;
t33 = qJD(6) * t129 + t303 * t101 + t299 * t102;
t32 = t299 * t101 - t303 * t102 + t205 * t377 + t206 * t378;
t30 = pkin(5) * t61 + t52;
t17 = -pkin(10) * t101 + t26;
t16 = -pkin(5) * t385 - t102 * pkin(10) + t27;
t15 = t303 * t36 - t435;
t14 = -t299 * t36 - t434;
t4 = -qJD(6) * t29 + t303 * t16 - t299 * t17;
t3 = qJD(6) * t28 + t299 * t16 + t303 * t17;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t338, t389 * t462, t401, -0.2e1 * t338, -t402, 0, -pkin(7) * t401 + t302 * t345, pkin(7) * t402 + t306 * t345, 0, 0, t89, t466, t69, t311, -t464, t192, t339 * t306 - t119 * t278 + (pkin(7) * t184 + t259 * t381) * t302 + ((pkin(7) * t232 + t411) * t306 + (t157 + (t193 + t280) * qJD(1)) * t302) * qJD(2), t118 * t278 - t312 * t306 + (-pkin(7) * t183 - t259 * t383) * t302 + ((pkin(7) * t234 + t410) * t306 + (-t158 + (-t194 + t281) * qJD(1)) * t302) * qJD(2), -t118 * t232 - t119 * t234 + t193 * t183 - t194 * t184 + t330 * t384 + (t339 * t305 + t301 * t312 + (t157 * t301 - t158 * t305) * qJD(3)) * t302, -t339 * t193 + t158 * t118 + t157 * t119 - t312 * t194 + (t259 + t288) * t369, t89, t69, -t466, t192, t464, t311, t109 * t278 + t117 * t232 + t199 * t184 + (t139 * t386 + t90) * t306 + (t139 * t381 + t432 + (-qJD(1) * t182 - t131) * qJD(2)) * t302, -t105 * t232 + t109 * t234 - t181 * t184 - t182 * t183 + t332 * t384 + (-t301 * t71 + t305 * t90 + (-t131 * t301 - t133 * t305) * qJD(3)) * t302, -t105 * t278 - t117 * t234 + t199 * t183 + (-t139 * t376 - t71) * t306 + (t139 * t383 - t431 + (qJD(1) * t181 + t133) * qJD(2)) * t302, t105 * t133 + t109 * t131 + t117 * t139 + t181 * t71 + t182 * t90 + t199 * t80, t102 * t153 - t206 * t60, -t101 * t153 - t102 * t328 + t205 * t60 - t206 * t61, t102 * t269 - t60 * t306 + (-qJD(1) * t206 - t153) * t385, t101 * t328 + t205 * t61, -t101 * t269 - t61 * t306 + (qJD(1) * t205 + t328) * t385 (-t269 - t387) * t385, t110 * t101 + t11 * t306 + t98 * t328 + t178 * t61 + t52 * t205 + t27 * t269 + (-qJD(1) * t77 - t40) * t385, -t10 * t306 + t110 * t102 + t98 * t153 - t178 * t60 + t52 * t206 - t26 * t269 + (qJD(1) * t78 + t41) * t385, -t10 * t205 - t101 * t41 - t102 * t40 - t11 * t206 - t153 * t27 - t26 * t328 + t60 * t77 - t61 * t78, t10 * t78 + t11 * t77 + t110 * t98 + t178 * t52 + t26 * t41 + t27 * t40, -t129 * t22 + t32 * t468, t128 * t22 + t129 * t313 + t32 * t469 + t33 * t468, -t22 * t306 - t32 * t257 + (-qJD(1) * t129 + t468) * t385, -t128 * t313 + t33 * t469, t313 * t306 - t33 * t257 + (qJD(1) * t128 + t469) * t385 (-t257 - t387) * t385, -t124 * t313 + t30 * t128 + t2 * t306 + t4 * t257 + t66 * t33 + t42 * t469 + (-qJD(1) * t28 - t12) * t385, t351 * t306 - t124 * t22 + t30 * t129 - t3 * t257 - t66 * t32 - t42 * t468 + (qJD(1) * t29 + t13) * t385, t12 * t32 + t128 * t351 - t129 * t2 - t13 * t33 + t22 * t28 + t29 * t313 - t3 * t469 + t4 * t468, t12 * t4 + t124 * t30 + t13 * t3 + t2 * t28 - t29 * t351 + t42 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, t389 * t309, 0, t366, 0, 0, t309 * pkin(1) * t302, pkin(1) * t403, 0, 0, t93, -t485, t111, t314, t465, t354, -pkin(2) * t184 + t185 * t278 + (t371 + t411) * qJD(3) + ((-pkin(8) * t386 - t157) * t302 + (-pkin(7) * t343 - t411) * t306) * qJD(1), pkin(2) * t183 - t186 * t278 + (-t372 + t410) * qJD(3) + ((t158 - t370) * t302 + (pkin(7) * t342 - t410) * t306) * qJD(1), t185 * t234 + t186 * t232 - t170 + (t157 * t387 - t312 + (-t157 + t443) * qJD(3)) * t305 + (t333 - t320) * t301, -t157 * t185 - t158 * t186 + (-t259 - t298) * t289 + (qJD(3) * t330 + t301 * t339 - t305 * t312) * pkin(8), t93, t111, t485, t354, -t465, t314, -t167 * t278 + t251 * t184 - t431 - t394 * t232 + (t139 * t301 + t371) * qJD(3) + (t131 * t302 + (-pkin(8) * t385 - t139 * t306) * t301) * qJD(1), t166 * t232 - t167 * t234 - t170 + (-t131 * t387 + t71 + (t131 + t443) * qJD(3)) * t305 + (t333 + t459) * t301, t166 * t278 + t251 * t183 - t432 + t394 * t234 + (-t139 * t305 + t372) * qJD(3) + (t139 * t404 + (-t133 + t370) * t302) * qJD(1), -t131 * t167 - t133 * t166 + t80 * t251 - t394 * t139 + (qJD(3) * t332 + t90 * t301 + t71 * t305) * pkin(8), -t153 * t396 + t324 * t60, -t153 * t395 + t60 * t237 + t324 * t61 + t328 * t396, -t396 * t269 + (qJD(2) * t324 + t153) * t388, t61 * t237 + t328 * t395, -t395 * t269 + (qJD(2) * t237 - t328) * t388, t269 * t388, t226 * t61 + t52 * t237 + t429 * t269 + t399 * t328 + t395 * t110 + (-qJD(2) * t179 + t40) * t388, -t226 * t60 - t52 * t324 - t430 * t269 + t399 * t153 - t396 * t110 + (qJD(2) * t180 - t41) * t388, -t10 * t237 + t11 * t324 - t153 * t429 + t179 * t60 - t180 * t61 - t328 * t430 - t395 * t41 + t396 * t40, t10 * t180 + t11 * t179 + t110 * t399 + t52 * t226 + t40 * t429 + t41 * t430, -t155 * t22 + t427 * t468, t154 * t22 + t155 * t313 + t427 * t469 - t428 * t468, -t427 * t257 + (-qJD(2) * t155 - t468) * t388, -t154 * t313 - t428 * t469, t428 * t257 + (qJD(2) * t154 - t469) * t388, t257 * t388, t30 * t154 - t169 * t313 + t400 * t469 - t428 * t66 + t439 * t257 + (-qJD(2) * t67 + t12) * t388, t30 * t155 - t169 * t22 - t400 * t468 - t427 * t66 - t440 * t257 + (qJD(2) * t68 - t13) * t388, t12 * t427 + t13 * t428 + t154 * t351 - t155 * t2 + t22 * t67 + t313 * t68 + t439 * t468 - t440 * t469, t12 * t439 + t13 * t440 + t30 * t169 + t2 * t67 - t351 * t68 + t400 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, -t350, t125, -t413, -t453, t283, -t234 * t259 + t320, t232 * t259 + t310, 0, 0, t413, t125, t350, t283, t453, -t413, -t168 * t232 + t320 + 0.2e1 * t341 - t422, pkin(3) * t183 - t184 * qJ(4) + (t133 - t158) * t234 + (t131 - t375) * t232, -t139 * t232 + t168 * t234 - 0.2e1 * t263 + 0.2e1 * t271 - t310, -t90 * pkin(3) + t71 * qJ(4) - t131 * t158 + t133 * t375 - t139 * t168, -t420, -t474, t458, t420, -t457, t283, -t126 * t328 - t249 * t283 + t269 * t425 - t11 + t479, -t126 * t153 + t250 * t283 - t269 * t426 - t451, t249 * t60 - t250 * t61 + (t40 - t426) * t328 + (-t41 - t425) * t153, t10 * t250 + t11 * t249 - t110 * t126 + t40 * t425 + t41 * t426, t441, -t473, -t471, -t441, t487, t283, -t160 * t283 - t257 * t438 - t469 * t70 - t472, t161 * t283 + t257 * t437 + t468 * t70 - t470, t160 * t22 + t161 * t313 + t437 * t469 - t438 * t468 - t486, -t12 * t438 - t13 * t437 + t2 * t160 - t161 * t351 - t66 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283 + t413, t125, -t278 ^ 2 - t447, t422 + t459, 0, 0, 0, 0, 0, 0, -t234 * t328 - t283 * t304 - t300 * t344, -t234 * t153 + t283 * t300 - t304 * t344, t300 * t457 + t304 * t458, -t110 * t234 + t460 * t304 + (t10 - t436) * t300, 0, 0, 0, 0, 0, 0, -t234 * t469 - t257 * t397 + t283 * t325, t234 * t468 + t238 * t283 + t257 * t398, -t22 * t325 + t238 * t313 - t397 * t468 + t398 * t469, -t12 * t397 - t13 * t398 - t2 * t325 - t66 * t234 - t238 * t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420, t474, -t458, -t420, t457, -t283, t460 - t479, t436 + t451, 0, 0, -t441, t473, t471, t441, -t487, -t283, -t14 * t257 + (-t153 * t469 - t257 * t378 - t283 * t303) * pkin(5) + t472, t15 * t257 + (t153 * t468 - t257 * t377 + t283 * t299) * pkin(5) + t470, -t14 * t468 + t15 * t469 + (t22 * t303 + t313 * t299 + (-t299 * t468 - t303 * t469) * qJD(6)) * pkin(5) + t486, -t12 * t14 - t13 * t15 + (-t351 * t299 - t153 * t66 + t2 * t303 + (-t12 * t299 + t13 * t303) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441, t473, t471, t441, -t487, -t283, t13 * t257 + t472, t12 * t257 + t470, 0, 0;];
tauc_reg  = t1;
