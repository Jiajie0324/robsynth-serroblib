% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:22:00
% EndTime: 2019-03-09 19:23:05
% DurationCPUTime: 42.57s
% Computational Cost: add. (13406->989), mult. (28423->1239), div. (0->0), fcn. (29922->8), ass. (0->738)
t868 = qJD(5) + qJD(6);
t666 = sin(qJ(6));
t667 = sin(qJ(5));
t668 = sin(qJ(3));
t671 = cos(qJ(5));
t672 = cos(qJ(3));
t573 = t667 * t668 + t671 * t672;
t1128 = pkin(8) - pkin(9);
t605 = t1128 * t668;
t606 = t1128 * t672;
t758 = t667 * t605 + t671 * t606;
t699 = -pkin(10) * t573 + t758;
t1121 = t666 * t699;
t670 = cos(qJ(6));
t580 = t667 * t606;
t978 = t671 * t605;
t1117 = t580 - t978;
t578 = -t667 * t672 + t668 * t671;
t785 = -pkin(10) * t578 - t1117;
t1171 = t670 * t785;
t1133 = t1121 / 0.2e1 - t1171 / 0.2e1;
t1201 = -0.2e1 * t1133;
t1202 = qJD(3) * t1201;
t869 = qJD(3) - qJD(6);
t1200 = -qJD(5) + t869;
t1010 = t666 * t573;
t534 = t670 * t578;
t1142 = t534 - t1010;
t1175 = -t1142 / 0.2e1;
t673 = cos(qJ(2));
t1070 = -t673 / 0.2e1;
t1119 = t670 * t699;
t1172 = t666 * t785;
t156 = t1119 + t1172;
t1185 = t1070 * t156;
t669 = sin(qJ(2));
t655 = t672 * qJ(4);
t998 = t668 * t669;
t934 = -pkin(3) * t998 + t669 * t655;
t442 = (-pkin(4) * t668 - pkin(7)) * t669 + t934;
t977 = t671 * t669;
t996 = t669 * t672;
t497 = t667 * t996 - t668 * t977;
t264 = t497 * pkin(5) + t442;
t1199 = t1175 * t264 - t1185;
t804 = qJD(3) - t868;
t1169 = t1142 * t673;
t1173 = t1169 / 0.2e1;
t501 = t573 * t673;
t1011 = t666 * t501;
t976 = t671 * t673;
t610 = t668 * t976;
t972 = t672 * t673;
t500 = t667 * t972 - t610;
t485 = t670 * t500;
t940 = t1011 / 0.2e1 + t485 / 0.2e1;
t1191 = t1173 - t940;
t1198 = qJD(1) * t1191;
t870 = qJD(3) - qJD(5);
t1195 = -t869 * t1142 + t1198;
t1014 = t666 * t497;
t499 = t573 * t669;
t484 = t670 * t499;
t1143 = t484 - t1014;
t871 = t673 * qJD(1);
t1186 = -qJD(2) * t1191 - t1143 * t871;
t172 = t1173 + t940;
t1193 = t172 * qJD(2);
t1009 = t666 * t578;
t533 = t670 * t573;
t1114 = t533 + t1009;
t1155 = t1114 / 0.2e1;
t1174 = t673 * t1155;
t1012 = t666 * t500;
t984 = t670 * t501;
t941 = t1012 / 0.2e1 - t984 / 0.2e1;
t175 = t1174 + t941;
t1192 = t175 * qJD(2);
t1163 = t1174 - t941;
t1190 = qJD(1) * t1163;
t1107 = -t1114 / 0.2e1;
t1013 = t666 * t499;
t483 = t670 * t497;
t1115 = t483 + t1013;
t1189 = t1115 * t1107 - 0.2e1 * t1175 * t1143;
t1179 = t1172 / 0.2e1 + t1119 / 0.2e1;
t915 = qJD(2) * t1142;
t1148 = t1114 * t915;
t1103 = t1142 / 0.2e1;
t80 = t1103 * t1115 + t1143 * t1155;
t716 = qJD(1) * t80 + t1148;
t921 = qJD(1) * t1143;
t1145 = t1115 * t921;
t719 = qJD(2) * t80 + t1145;
t1176 = qJD(2) * t1163 + t1115 * t871;
t1161 = t1115 ^ 2 - t1143 ^ 2;
t1183 = qJD(1) * t1161;
t1162 = t1114 ^ 2 - t1142 ^ 2;
t1181 = qJD(2) * t1162;
t1166 = 0.2e1 * t1179;
t1180 = qJD(3) * t1166;
t762 = t1171 - t1121;
t1069 = t673 / 0.2e1;
t653 = t668 * qJ(4);
t659 = t672 * pkin(3);
t778 = t653 + t659;
t586 = -pkin(2) - t778;
t554 = t672 * pkin(4) - t586;
t427 = pkin(5) * t573 + t554;
t1101 = -t427 / 0.2e1;
t1177 = t1069 * t762 - t1101 * t1115;
t1170 = t1142 * t427;
t1168 = t1155 * t264;
t1153 = t264 * t1143;
t1006 = t666 * t667;
t981 = t670 * t671;
t572 = -t981 + t1006;
t1085 = -t572 / 0.2e1;
t724 = t981 / 0.2e1 - t1006 / 0.2e1;
t354 = (t1085 + t724) * t673;
t249 = t354 * qJD(1) + t572 * qJD(3);
t1167 = -t572 * t868 + t249;
t1005 = t666 * t671;
t982 = t670 * t667;
t577 = t982 + t1005;
t1083 = -t577 / 0.2e1;
t359 = (t1083 - t1005 / 0.2e1 - t982 / 0.2e1) * t673;
t944 = t359 * qJD(1) + t577 * qJD(3);
t163 = -t577 * t868 + t944;
t1164 = qJD(3) + qJD(6);
t872 = t672 * qJD(4);
t1160 = -qJD(3) * t778 + t872;
t1150 = t1114 * t427;
t1147 = t1115 * t264;
t1100 = t427 / 0.2e1;
t1144 = t1143 * t1100;
t1095 = t484 / 0.2e1;
t1096 = -t484 / 0.2e1;
t1112 = t1095 + t1096;
t1141 = qJD(5) * t1112;
t1089 = t534 / 0.2e1;
t1090 = -t534 / 0.2e1;
t1113 = t1089 + t1090;
t1140 = qJD(5) * t1113;
t1137 = t1114 * t1115;
t1081 = t578 / 0.2e1;
t1084 = t573 / 0.2e1;
t234 = t1081 * t497 + t1084 * t499;
t913 = qJD(2) * t578;
t1132 = qJD(1) * t234 + t573 * t913;
t916 = qJD(1) * t499;
t1131 = qJD(2) * t234 + t497 * t916;
t1087 = t554 / 0.2e1;
t685 = t1070 * t758 + t1081 * t442 + t1087 * t499;
t1130 = t870 * t758;
t686 = t1070 * t1117 + t1084 * t442 + t1087 * t497;
t132 = t573 * t497 - t499 * t578;
t245 = t497 ^ 2 - t499 ^ 2;
t747 = qJD(1) * t245 + qJD(2) * t132;
t312 = t573 ^ 2 - t578 ^ 2;
t746 = qJD(1) * t132 + qJD(2) * t312;
t1129 = qJD(1) * t1112 + qJD(2) * t1113;
t1080 = t978 / 0.2e1;
t795 = qJD(5) + t871;
t772 = -qJD(3) + t795;
t1126 = t497 * t772;
t1125 = t499 * t772;
t1123 = t573 * t870;
t797 = t870 * t578;
t830 = t1009 / 0.2e1;
t831 = -t1009 / 0.2e1;
t377 = t831 + t830;
t832 = t1013 / 0.2e1;
t833 = -t1013 / 0.2e1;
t267 = t833 + t832;
t662 = t668 ^ 2;
t664 = t672 ^ 2;
t623 = t664 - t662;
t873 = t669 * qJD(1);
t851 = t672 * t873;
t793 = t668 * t851;
t1111 = qJD(2) * t623 - 0.2e1 * t793;
t665 = t673 ^ 2;
t1110 = -pkin(5) / 0.2e1;
t1109 = -pkin(3) - pkin(4);
t638 = pkin(7) * t972;
t1060 = t669 * pkin(8);
t782 = -pkin(2) * t673 - t1060;
t753 = -pkin(1) + t782;
t487 = t668 * t753 + t638;
t634 = pkin(9) * t998;
t432 = t634 + t487;
t409 = t671 * t432;
t1102 = t409 / 0.2e1;
t1063 = t578 * pkin(5);
t855 = t1109 * t668;
t564 = t655 + t855;
t429 = t564 - t1063;
t1099 = t429 / 0.2e1;
t971 = t673 * qJ(4);
t450 = t487 - t971;
t1098 = -t450 / 0.2e1;
t1097 = t483 / 0.2e1;
t568 = t672 * t753;
t997 = t668 * t673;
t864 = pkin(7) * t997;
t486 = -t568 + t864;
t1094 = -t486 / 0.2e1;
t493 = t669 * pkin(7) - t934;
t1093 = t493 / 0.2e1;
t1092 = -t499 / 0.2e1;
t1091 = t533 / 0.2e1;
t547 = t778 * t669;
t1088 = -t547 / 0.2e1;
t1086 = t564 / 0.2e1;
t1082 = -t578 / 0.2e1;
t1004 = t667 * qJ(4);
t647 = t671 * t1109;
t584 = -t647 + t1004;
t1079 = t584 / 0.2e1;
t1058 = t673 * pkin(8);
t1062 = t669 * pkin(2);
t607 = -t1058 + t1062;
t1078 = -t607 / 0.2e1;
t637 = pkin(7) * t998;
t1077 = -t637 / 0.2e1;
t1076 = t666 / 0.2e1;
t1075 = t667 / 0.2e1;
t1074 = t668 / 0.2e1;
t1073 = -t669 / 0.2e1;
t1072 = t669 / 0.2e1;
t1071 = t672 / 0.2e1;
t1068 = pkin(3) * t668;
t1067 = pkin(7) * t668;
t1066 = pkin(10) * t497;
t1065 = t499 * pkin(5);
t1064 = t499 * pkin(10);
t1061 = t669 * pkin(5);
t660 = t673 * pkin(3);
t1059 = t673 * pkin(5);
t1057 = pkin(5) * qJD(5);
t1056 = pkin(5) * qJD(6);
t657 = t669 * pkin(3);
t364 = -t669 * pkin(4) - t637 - t657 + (-pkin(9) * t673 - t607) * t672;
t325 = t667 * t364;
t581 = t668 * t607;
t654 = t669 * qJ(4);
t453 = -pkin(7) * t996 + t581 + t654;
t404 = pkin(9) * t997 + t453;
t369 = t671 * t404;
t943 = t369 + t325;
t137 = -pkin(10) * t500 + t943;
t1022 = t666 * t137;
t632 = t672 * t971;
t443 = t632 + (-pkin(7) + t855) * t673;
t265 = t500 * pkin(5) + t443;
t296 = t485 + t1011;
t787 = -pkin(9) * t996 - t568;
t347 = t660 + (pkin(4) + t1067) * t673 + t787;
t1003 = t667 * t347;
t401 = t450 + t634;
t979 = t671 * t401;
t202 = t979 + t1003;
t134 = t202 - t1066;
t1023 = t666 * t134;
t1002 = t667 * t401;
t324 = t671 * t347;
t201 = -t324 + t1002;
t133 = -t201 - t1064;
t692 = t133 + t1059;
t112 = t670 * t692;
t48 = -t112 + t1023;
t1001 = t667 * t404;
t326 = t671 * t364;
t802 = t326 - t1001;
t130 = -pkin(10) * t501 - t1061 + t802;
t995 = t670 * t130;
t5 = (t995 - t1022) * t673 + t48 * t669 + t265 * t1115 + t264 * t296;
t1055 = t5 * qJD(1);
t1025 = t666 * t130;
t300 = t984 - t1012;
t684 = t666 * t692;
t993 = t670 * t134;
t49 = t684 + t993;
t992 = t670 * t137;
t6 = (t992 + t1025) * t673 - t49 * t669 - t265 * t1143 - t264 * t300;
t1054 = t6 * qJD(1);
t1024 = t666 * t133;
t50 = -t993 - t1024;
t27 = t1065 * t1115 + t50 * t673 + t1153;
t1053 = qJD(1) * t27;
t994 = t670 * t133;
t51 = t994 - t1023;
t28 = -t1065 * t1143 + t51 * t673 + t1147;
t1052 = qJD(1) * t28;
t482 = (t1109 * t672 - t653) * t669;
t303 = t482 - t1065;
t407 = t667 * t432;
t431 = -t787 - t864;
t408 = t671 * t431;
t237 = t408 + t407;
t165 = t237 + t1064;
t1020 = t666 * t165;
t1000 = t667 * t431;
t236 = -t409 + t1000;
t164 = -t236 - t1066;
t991 = t670 * t164;
t71 = -t991 + t1020;
t29 = t1115 * t303 - t673 * t71 - t1153;
t1051 = qJD(1) * t29;
t1021 = t666 * t164;
t990 = t670 * t165;
t72 = t990 + t1021;
t30 = -t1143 * t303 + t673 * t72 - t1147;
t1050 = qJD(1) * t30;
t35 = -t48 * t673 + t1147;
t1049 = qJD(1) * t35;
t36 = -t49 * t673 + t1153;
t1048 = qJD(1) * t36;
t41 = t201 * t669 + t442 * t500 + t443 * t497 + t673 * t802;
t1041 = t41 * qJD(1);
t585 = t671 * qJ(4) + t1109 * t667;
t1007 = t666 * t585;
t786 = -pkin(5) - t584;
t546 = t670 * t786;
t414 = -t546 + t1007;
t1040 = t414 * t673;
t42 = -t202 * t669 - t442 * t501 - t443 * t499 + t673 * t943;
t1039 = t42 * qJD(1);
t1008 = t666 * t584;
t555 = t670 * t585;
t423 = t555 - t1008;
t1038 = t423 * t673;
t983 = t670 * t584;
t424 = -t983 - t1007;
t1037 = t424 * t673;
t1036 = t442 * t497;
t1035 = t442 * t499;
t1034 = t450 * t673;
t1033 = t486 * t673;
t1032 = t487 * t673;
t1031 = t493 * t668;
t1030 = t493 * t672;
t1029 = t547 * t668;
t1028 = t554 * t573;
t1027 = t578 * t673;
t1026 = t586 * t668;
t999 = t668 * t499;
t980 = t670 * t673;
t975 = t672 * t578;
t974 = t672 * t607;
t663 = t669 ^ 2;
t973 = t672 * t663;
t70 = -t1115 * t300 - t1143 * t296;
t970 = t70 * qJD(1);
t730 = t585 * t1069 - t979 / 0.2e1;
t76 = t1102 + (-t431 / 0.2e1 - t347 / 0.2e1) * t667 + t730;
t969 = t76 * qJD(1);
t83 = -t236 * t673 + t482 * t497 - t1035;
t968 = t83 * qJD(1);
t84 = t237 * t673 - t482 * t499 - t1036;
t967 = t84 * qJD(1);
t451 = t486 + t660;
t801 = -t637 - t974;
t455 = -t657 + t801;
t494 = -t632 + (pkin(7) + t1068) * t673;
t85 = t450 * t453 + t451 * t455 + t493 * t494;
t966 = t85 * qJD(1);
t89 = -t450 * t486 + t451 * t487 + t493 * t547;
t965 = t89 * qJD(1);
t808 = t1094 + t451 / 0.2e1;
t809 = t1098 + t487 / 0.2e1;
t90 = (-t660 / 0.2e1 - t808) * t672 + (-t971 / 0.2e1 - t809) * t668;
t964 = t90 * qJD(1);
t92 = -t201 * t673 + t1036;
t963 = t92 * qJD(1);
t93 = -t202 * t673 + t1035;
t962 = t93 * qJD(1);
t96 = -t451 * t972 - t455 * t996 + (t453 * t669 + t1034) * t668;
t961 = t96 * qJD(1);
t97 = -t487 * t996 + (t450 * t672 + (t451 - t486) * t668) * t669;
t960 = t97 * qJD(1);
t125 = t993 / 0.2e1;
t959 = t1024 / 0.2e1 + t125;
t958 = -t1024 / 0.2e1 - t993 / 0.2e1;
t119 = -t1023 / 0.2e1;
t957 = t119 + t994 / 0.2e1;
t956 = t1023 / 0.2e1 - t994 / 0.2e1;
t955 = t870 * t132;
t954 = t870 * t234;
t813 = t972 / 0.2e1;
t825 = t997 / 0.2e1;
t938 = t667 * t825 + t671 * t813;
t814 = -t972 / 0.2e1;
t826 = -t997 / 0.2e1;
t937 = t667 * t826 + t671 * t814;
t936 = t610 / 0.2e1 + t667 * t814;
t935 = -t610 / 0.2e1 + t667 * t813;
t624 = t665 - t663;
t135 = t1115 * t669 - t296 * t673;
t932 = qJD(1) * t135;
t136 = -t1143 * t669 + t300 * t673;
t931 = qJD(1) * t136;
t216 = t1115 * t996 + t577 * t665;
t924 = qJD(1) * t216;
t217 = -t1143 * t996 + t572 * t665;
t923 = qJD(1) * t217;
t218 = t1032 + (t1029 + t1030) * t669;
t922 = qJD(1) * t218;
t301 = t497 * t669 - t500 * t673;
t920 = qJD(1) * t301;
t302 = -t499 * t669 + t501 * t673;
t919 = qJD(1) * t302;
t402 = -t1067 * t663 - t1033;
t918 = qJD(1) * t402;
t403 = -pkin(7) * t973 - t1032;
t917 = qJD(1) * t403;
t914 = qJD(2) * t427;
t912 = qJD(2) * t668;
t911 = qJD(2) * t669;
t910 = qJD(2) * t672;
t909 = qJD(2) * t673;
t908 = qJD(3) * t1114;
t907 = qJD(3) * t668;
t906 = qJD(3) * t672;
t905 = qJD(3) * t673;
t904 = qJD(4) * t667;
t903 = qJD(4) * t668;
t902 = qJD(4) * t671;
t901 = qJD(4) * t673;
t900 = qJD(5) * t1114;
t899 = qJD(5) * t554;
t898 = qJD(6) * t1114;
t897 = qJD(6) * t427;
t759 = t493 * t673 + t494 * t669;
t104 = -t450 * t669 + t453 * t673 + t672 * t759;
t896 = t104 * qJD(1);
t105 = -t451 * t669 + t455 * t673 + t668 * t759;
t895 = t105 * qJD(1);
t213 = -t497 * t501 - t499 * t500;
t894 = t213 * qJD(1);
t219 = -t493 * t998 + t547 * t996 - t1033;
t893 = t219 * qJD(1);
t242 = t486 * t669 + (-t801 - 0.2e1 * t637) * t673;
t892 = t242 * qJD(1);
t243 = t581 * t673 + (-t487 + t638) * t669;
t891 = t243 * qJD(1);
t248 = t493 * t996 + t1034;
t890 = t248 * qJD(1);
t838 = -t1027 / 0.2e1;
t350 = t838 + t935;
t889 = t350 * qJD(1);
t837 = t1027 / 0.2e1;
t351 = t837 + t936;
t888 = t351 * qJD(1);
t839 = t501 / 0.2e1;
t352 = t839 + t938;
t887 = t352 * qJD(1);
t840 = -t501 / 0.2e1;
t353 = t840 + t937;
t886 = t353 * qJD(1);
t884 = t354 * qJD(4);
t882 = t359 * qJD(4);
t411 = t497 * t996 + t665 * t667;
t881 = t411 * qJD(1);
t412 = t499 * t996 + t665 * t671;
t880 = t412 * qJD(1);
t879 = t486 * qJD(3);
t548 = t572 * qJD(4);
t576 = t624 * t668;
t877 = t576 * qJD(1);
t552 = t577 * qJD(4);
t579 = t665 * t672 - t973;
t875 = t579 * qJD(1);
t874 = t624 * qJD(1);
t651 = t667 * qJD(3);
t652 = t671 * qJD(3);
t867 = t1077 - t657;
t33 = -t1137 / 0.2e1 + t1189;
t34 = t1115 * t1155 - t1189;
t44 = -t1142 * t1143 + t1137;
t866 = t33 * qJD(3) + t34 * qJD(5) + t44 * qJD(6);
t82 = t1107 * t1143 + t1115 * t1175;
t865 = t82 * qJD(6) + t80 * t870;
t863 = pkin(1) * t873;
t862 = pkin(1) * t871;
t861 = pkin(8) * t907;
t860 = pkin(8) * t906;
t859 = pkin(2) * t1074;
t858 = t1065 / 0.2e1;
t857 = t1063 / 0.2e1;
t856 = t1058 / 0.2e1;
t853 = t497 * t871;
t852 = t499 * t871;
t849 = t668 * t905;
t848 = t672 * t905;
t847 = t667 * t901;
t846 = t668 * t872;
t845 = t671 * t901;
t844 = t668 * t906;
t629 = t668 * t910;
t843 = t669 * t909;
t842 = t669 * t903;
t841 = t669 * t871;
t836 = t586 * t1072;
t835 = -t1022 / 0.2e1;
t834 = -t1020 / 0.2e1;
t829 = t1115 * t1074;
t828 = t1143 * t1074;
t827 = t497 * t1074;
t824 = -t996 / 0.2e1;
t823 = -t992 / 0.2e1;
t822 = -t990 / 0.2e1;
t817 = t1114 * t1071;
t816 = t1142 * t1071;
t815 = t573 * t1071;
t812 = t164 / 0.2e1 - t134 / 0.2e1;
t811 = -t325 / 0.2e1 - t369 / 0.2e1;
t810 = -t407 / 0.2e1 - t408 / 0.2e1;
t807 = t1077 - t657 / 0.2e1;
t806 = t662 / 0.2e1 - t664 / 0.2e1;
t803 = pkin(5) * t868;
t506 = (-0.1e1 / 0.2e1 + t806) * t669;
t800 = qJD(1) * t506 - t629;
t556 = t806 * t669;
t799 = qJD(1) * t556 - t629;
t602 = t668 * qJD(1) * t973;
t798 = qJD(2) * t556 + t602;
t796 = t870 * t673;
t633 = -qJD(3) + t871;
t794 = -qJD(6) - t871;
t792 = t669 * t629;
t790 = 0.2e1 * t1097;
t788 = 0.2e1 * t1091;
t784 = t1061 / 0.2e1 - t130 / 0.2e1;
t783 = t871 - qJD(3) / 0.2e1;
t781 = t112 / 0.2e1 + t119;
t780 = t326 / 0.2e1 - t1001 / 0.2e1;
t604 = -t655 + t1068;
t779 = t1072 * t604 + t1093;
t268 = t1097 - t483 / 0.2e1;
t378 = t1091 - t533 / 0.2e1;
t777 = -t586 * t673 + t1060;
t678 = t1115 * t1099 + t1155 * t303 - t1144 + t1199;
t728 = t835 + t995 / 0.2e1;
t688 = t1073 * t414 + t728;
t1 = t678 + t688;
t94 = t1114 * t429 - t1170;
t776 = -qJD(1) * t1 - qJD(2) * t94;
t677 = -t1070 * t762 + t1099 * t1143 + t1100 * t1115 + t1103 * t303 + t1168;
t739 = t666 * t786;
t415 = t739 + t555;
t729 = -t1025 / 0.2e1 + t823;
t687 = t1073 * t415 + t729;
t4 = t677 + t687;
t95 = t1142 * t429 + t1150;
t775 = -qJD(1) * t4 - qJD(2) * t95;
t680 = t1168 + t1177;
t7 = (t1072 * t666 + t1082 * t1143 + t1092 * t1142) * pkin(5) + t680 + t729;
t99 = -t1063 * t1142 + t1150;
t774 = -t7 * qJD(1) - t99 * qJD(2);
t681 = t1101 * t1143 + t1199;
t8 = (t1073 * t670 + t1082 * t1115 + t1092 * t1114) * pkin(5) + t681 + t728;
t98 = -t1063 * t1114 - t1170;
t773 = -t8 * qJD(1) - t98 * qJD(2);
t682 = t415 * t1069 - t684 / 0.2e1;
t15 = t670 * t812 + t682 + t834;
t771 = t15 * qJD(1);
t16 = t822 - t1040 / 0.2e1 - t112 / 0.2e1 - t812 * t666;
t770 = t16 * qJD(1);
t726 = t834 + t991 / 0.2e1;
t23 = t1038 / 0.2e1 + t726 + t958;
t769 = t23 * qJD(1);
t727 = -t1021 / 0.2e1 + t822;
t24 = t1037 / 0.2e1 + t727 + t956;
t768 = t24 * qJD(1);
t767 = qJD(2) * t33 - t1183;
t766 = qJD(1) * t33 - t1181;
t765 = qJD(2) * t34 + t1183;
t764 = qJD(1) * t34 + t1181;
t763 = qJD(2) * t44 + t1183;
t760 = t453 * t672 + t455 * t668;
t757 = qJD(1) * t44 + t1181;
t246 = -t554 * t578 + t564 * t573;
t675 = t1084 * t482 + t1086 * t497 - t685;
t696 = t1073 * t584 + t780;
t37 = t675 + t696;
t756 = -qJD(1) * t37 - qJD(2) * t246;
t247 = t564 * t578 + t1028;
t676 = t1081 * t482 + t1086 * t499 + t686;
t723 = t1073 * t585 + t811;
t40 = t676 + t723;
t755 = -qJD(1) * t40 - qJD(2) * t247;
t438 = t1080 - t978 / 0.2e1;
t697 = -t324 / 0.2e1 + t584 * t1070 + t1002 / 0.2e1;
t77 = t697 + t810;
t754 = -t77 * qJD(1) + t438 * qJD(2);
t752 = t633 * t669;
t560 = -t581 / 0.2e1;
t613 = pkin(8) * t825;
t101 = t613 - t1029 / 0.2e1 - t1030 / 0.2e1 - t654 + t560 + (t1026 / 0.2e1 + (-t604 / 0.2e1 + pkin(7) / 0.2e1) * t672) * t669;
t433 = t586 * t672 + t604 * t668;
t751 = -qJD(1) * t101 + qJD(2) * t433;
t737 = t836 + t856;
t698 = t1088 + t737;
t733 = t779 * t668;
t103 = t733 + (t1078 + t698) * t672 + t867;
t434 = t604 * t672 - t1026;
t750 = -qJD(1) * t103 + qJD(2) * t434;
t151 = t268 + t267;
t222 = t378 + t377;
t744 = qJD(1) * t151 + qJD(2) * t222;
t743 = qJD(1) * t267 + qJD(2) * t377;
t742 = qJD(1) * t268 + qJD(2) * t378;
t740 = t856 - t1062 / 0.2e1;
t738 = -t453 * qJ(4) / 0.2e1 + t455 * pkin(3) / 0.2e1;
t736 = qJD(5) / 0.2e1 + t783;
t559 = t581 / 0.2e1;
t614 = pkin(8) * t826;
t425 = t669 * t859 + t559 + t614;
t735 = pkin(2) * t910 - qJD(1) * t425;
t426 = (t1078 + t740) * t672;
t734 = pkin(2) * t912 - qJD(1) * t426;
t689 = t1103 * t264 + t1144 + t1185;
t11 = -t689 + t728;
t722 = qJD(1) * t11 - t1142 * t914;
t690 = t1107 * t264 - t1177;
t12 = -t690 + t729;
t721 = qJD(1) * t12 + t1114 * t914;
t720 = -qJD(2) * t82 + t1145;
t717 = -qJD(1) * t82 + t1148;
t674 = (t668 * t809 + t672 * t808) * pkin(8) + t604 * t1093 + t547 * t586 / 0.2e1;
t46 = t674 + t738;
t714 = -t586 * t604 * qJD(2) - t46 * qJD(1);
t52 = -t685 + t780;
t713 = qJD(1) * t52 - t554 * t913;
t53 = t686 + t811;
t712 = qJD(1) * t53 + qJD(2) * t1028;
t711 = t672 * t752;
t108 = t829 + (t817 + t1085) * t669;
t710 = qJD(1) * t108 + t1114 * t912;
t111 = t828 + (t816 + t1083) * t669;
t709 = qJD(1) * t111 + t1142 * t912;
t211 = t1031 / 0.2e1 + (t1078 + t737) * t672 + t807;
t708 = qJD(1) * t211 + t586 * t912;
t258 = -t999 / 0.2e1 + (t1075 - t975 / 0.2e1) * t669;
t703 = -qJD(1) * t258 + t578 * t912;
t259 = t827 + (t815 + t671 / 0.2e1) * t669;
t702 = qJD(1) * t259 + t573 * t912;
t575 = t623 * t663;
t701 = qJD(1) * t575 + 0.2e1 * t792;
t679 = -t1059 * t666 + t958;
t19 = t679 + t959;
t224 = (t1079 - pkin(5) - t1004 / 0.2e1 + t647 / 0.2e1) * t666;
t695 = t19 * qJD(1) - t224 * qJD(3);
t691 = t1110 * t980 - t781;
t21 = t691 + t957;
t226 = t546 / 0.2e1 + (t1079 + t1110) * t670;
t694 = t21 * qJD(1) - t226 * qJD(3);
t693 = t804 * t1115;
t589 = t663 * t664 + t665;
t683 = t589 * qJD(1) + t792 - t905;
t644 = -t911 / 0.2e1;
t643 = t911 / 0.2e1;
t642 = -t873 / 0.2e1;
t641 = t873 / 0.2e1;
t630 = t672 * t871;
t603 = t672 * t842;
t588 = t633 * qJ(4);
t571 = -t630 + t906;
t570 = t671 * t871 - t652;
t569 = t667 * t871 - t651;
t566 = t783 * t669;
t563 = t974 / 0.2e1;
t545 = qJD(2) * t662 + t793;
t532 = t556 * qJD(3);
t507 = t664 * t1072 + t1073 * t662 + t1073;
t505 = t671 * t795 - t652;
t504 = t667 * t795 - t651;
t496 = (-t668 * t873 + t910) * t673;
t495 = t668 * t752;
t492 = t736 * t669;
t459 = t487 * qJD(3);
t454 = (qJD(6) / 0.2e1 + t736) * t669;
t363 = t672 * t740 + t563 + t637;
t362 = t614 + t560 + (pkin(7) * t672 + t859) * t669;
t361 = t838 + t936;
t360 = t837 + t935;
t358 = t1070 * t577 + t1075 * t980 + t1076 * t976;
t357 = t840 + t938;
t356 = t839 + t937;
t355 = t1069 * t572 + t673 * t724;
t332 = t358 * qJD(4);
t329 = t355 * qJD(4);
t322 = -t580 + 0.2e1 * t1080;
t261 = t999 / 0.2e1 + (t975 + t667) * t1072;
t260 = t827 + t669 * t815 - t977 / 0.2e1;
t255 = 0.2e1 * t1090 + t1010;
t254 = t788 + t1009;
t253 = 0.2e1 * t831 - t533;
t232 = 0.2e1 * t1096 + t1014;
t231 = t790 + t1013;
t230 = 0.2e1 * t833 - t483;
t227 = t670 * pkin(5) / 0.2e1 + t1007 - t546 / 0.2e1 + t983 / 0.2e1;
t225 = pkin(5) * t1076 - t555 - t739 / 0.2e1 + t1008 / 0.2e1;
t223 = 0.2e1 * t830 + t788;
t221 = 0.2e1 * t1089 - t1010;
t212 = pkin(8) * t814 + t586 * t824 - t1031 / 0.2e1 - t974 / 0.2e1 + t807;
t173 = -t1169 / 0.2e1 - t940;
t152 = 0.2e1 * t832 + t790;
t150 = 0.2e1 * t1095 - t1014;
t110 = t1072 * t577 + t669 * t816 + t828;
t109 = t1072 * t572 + t669 * t817 + t829;
t102 = t672 * t698 + t563 + t733 - t867;
t100 = t613 + t654 + pkin(7) * t824 + t559 - t779 * t672 + (t836 + t1088) * t668;
t91 = t672 * t1094 + t668 * t1098 + t487 * t1074 + t451 * t1071 + (-t653 / 0.2e1 - t659 / 0.2e1) * t673;
t79 = t1003 / 0.2e1 - t1000 / 0.2e1 + t1102 - t730;
t78 = -t697 + t810;
t67 = -0.2e1 * t1179;
t61 = 0.2e1 * t1133;
t55 = t685 + t780;
t54 = -t686 + t811;
t45 = t674 - t738;
t39 = t676 - t723;
t38 = t675 - t696;
t26 = -t1037 / 0.2e1 + t727 + t957;
t25 = -t1038 / 0.2e1 + t726 + t959;
t22 = t691 + t956;
t20 = t679 + t958;
t18 = t125 - t682 + t726;
t17 = t1040 / 0.2e1 + t727 + t781;
t14 = t689 + t728;
t13 = t690 + t729;
t10 = t1142 * t858 + t1143 * t857 + t666 * t784 - t680 + t823;
t9 = t1114 * t858 + t1115 * t857 - t670 * t784 - t681 + t835;
t3 = t677 - t687;
t2 = t678 - t688;
t31 = [0, 0, 0, t843, t624 * qJD(2), 0, 0, 0, -pkin(1) * t911, -pkin(1) * t909, -t663 * t844 + t664 * t843, -t575 * qJD(3) - 0.2e1 * t673 * t792, -t579 * qJD(2) + t669 * t849, t576 * qJD(2) + t669 * t848, -t843, -qJD(2) * t242 - qJD(3) * t403, qJD(2) * t243 + qJD(3) * t402, qJD(2) * t105 + qJD(3) * t218 - t663 * t846, -t96 * qJD(2) - t97 * qJD(3) + t673 * t842, -qJD(2) * t104 - qJD(3) * t219 + qJD(4) * t589, qJD(2) * t85 + qJD(3) * t89 - qJD(4) * t248 (qJD(2) * t501 + t497 * t870) * t499, qJD(2) * t213 - t245 * t870, t302 * qJD(2) + t497 * t796, t301 * qJD(2) + t499 * t796, -t843, qJD(2) * t41 + qJD(3) * t83 + qJD(4) * t411 + qJD(5) * t93, -qJD(2) * t42 - qJD(3) * t84 + qJD(4) * t412 - qJD(5) * t92 (qJD(2) * t300 + t693) * t1143, qJD(2) * t70 - t1161 * t804, t136 * qJD(2) + t673 * t693, t1143 * t1200 * t673 + t135 * qJD(2), -t843, qJD(2) * t5 + qJD(3) * t29 + qJD(4) * t216 + qJD(5) * t27 + qJD(6) * t36, -qJD(2) * t6 - qJD(3) * t30 - qJD(4) * t217 - qJD(5) * t28 - qJD(6) * t35; 0, 0, 0, t841, t874, t909, -t911, 0, -pkin(7) * t909 - t863, pkin(7) * t911 - t862, -t532 + (t664 * t873 + t629) * t673, t1111 * t673 - 0.2e1 * t669 * t844, t668 * t911 - t875, t669 * t910 + t877, -t566, -t892 + (t668 * t782 - t638) * qJD(2) + t363 * qJD(3), t891 + (t672 * t782 + t864) * qJD(2) + t362 * qJD(3), t895 + (-t494 * t672 - t668 * t777) * qJD(2) + t102 * qJD(3) + t507 * qJD(4), qJD(2) * t760 + t91 * qJD(3) - t961, -t896 + (-t494 * t668 + t672 * t777) * qJD(2) + t100 * qJD(3) + t603, t966 + (pkin(8) * t760 + t494 * t586) * qJD(2) + t45 * qJD(3) + t212 * qJD(4) (t913 + t916) * t501 + t954, t894 + (-t500 * t578 - t501 * t573) * qJD(2) - t955, qJD(3) * t356 + qJD(5) * t357 - t578 * t911 + t919, qJD(3) * t360 + qJD(5) * t361 + t573 * t911 + t920, -t492, t1041 + (t1117 * t669 + t443 * t573 + t500 * t554) * qJD(2) + t38 * qJD(3) + t260 * qJD(4) + t55 * qJD(5), -t1039 + (t443 * t578 + t501 * t554 + t669 * t758) * qJD(2) + t39 * qJD(3) + t261 * qJD(4) + t54 * qJD(5) (t915 + t921) * t300 + t865, t970 + (-t1114 * t300 - t1142 * t296) * qJD(2) + t866, -t1142 * t911 + t175 * t804 + t931, qJD(5) * t173 + t1114 * t911 + t172 * t869 + t932, -t454, t1055 + (t1114 * t265 + t296 * t427 - t669 * t762) * qJD(2) + t2 * qJD(3) + t109 * qJD(4) + t9 * qJD(5) + t14 * qJD(6), -t1054 + (t1142 * t265 + t156 * t669 + t300 * t427) * qJD(2) + t3 * qJD(3) + t110 * qJD(4) + t10 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t798, -t701, t495, t711, t643, qJD(2) * t363 - t459 - t917, qJD(2) * t362 + t879 + t918, qJD(2) * t102 - t459 + t922, t91 * qJD(2) - qJD(3) * t934 - t842 - t960, t100 * qJD(2) - t879 - t893 - t901, t965 + t45 * qJD(2) + (-pkin(3) * t487 - qJ(4) * t486) * qJD(3) + t450 * qJD(4), t1131, -t747, t356 * qJD(2) + t1126, t360 * qJD(2) + t1125, t643, t38 * qJD(2) + t236 * qJD(3) + t79 * qJD(5) - t847 + t968, t39 * qJD(2) + t237 * qJD(3) + t78 * qJD(5) - t845 - t967, t719, t767, t152 * qJD(5) + t231 * qJD(6) + t1115 * t633 + t1192, t1193 + t150 * qJD(5) + (qJD(6) + t633) * t1143, t643, qJD(2) * t2 + qJD(3) * t71 + qJD(5) * t25 + qJD(6) * t18 + t1051 + t882, qJD(2) * t3 + qJD(3) * t72 + qJD(5) * t26 + qJD(6) * t17 - t1050 - t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t507 - t602, t495, t683, qJD(2) * t212 + qJD(3) * t450 - t890, 0, 0, 0, 0, 0, t260 * qJD(2) - t651 * t673 + t881, t261 * qJD(2) - t652 * t673 + t880, 0, 0, 0, 0, 0, qJD(2) * t109 + qJD(3) * t359 + t358 * t868 + t924, qJD(2) * t110 - qJD(3) * t354 + t355 * t868 - t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1131, t747, t357 * qJD(2) - t1126, t361 * qJD(2) - t1125, t644, qJD(2) * t55 + qJD(3) * t79 - qJD(5) * t202 + t962, qJD(2) * t54 + qJD(3) * t78 + qJD(5) * t201 - t963, -t719, t765, t152 * qJD(3) + t230 * qJD(6) - t1115 * t795 - t1192, t173 * qJD(2) + t150 * qJD(3) + t232 * qJD(6) - t1143 * t795, t644, qJD(2) * t9 + qJD(3) * t25 + qJD(5) * t50 + qJD(6) * t20 + t1053 + t332, qJD(2) * t10 + qJD(3) * t26 - qJD(5) * t51 + qJD(6) * t22 - t1052 + t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, t763, t231 * qJD(3) + t230 * qJD(5) + t1115 * t794 - t1192, -t1193 + t232 * qJD(5) + (qJD(3) + t794) * t1143, t644, qJD(2) * t14 + qJD(3) * t18 + qJD(5) * t20 - qJD(6) * t49 + t1048 + t332, qJD(2) * t13 + qJD(3) * t17 + qJD(5) * t22 + qJD(6) * t48 - t1049 + t329; 0, 0, 0, -t841, -t874, 0, 0, 0, t863, t862, -t664 * t841 - t532, 0.2e1 * t668 * t711, -t848 + t875, t849 - t877, t566, qJD(3) * t426 + t892, qJD(3) * t425 - t891, qJD(3) * t103 - qJD(4) * t506 - t895, -t90 * qJD(3) - t673 * t872 + t961, qJD(3) * t101 + t603 + t896, qJD(3) * t46 - qJD(4) * t211 - t966, -t501 * t916 + t954, -t894 - t955, -qJD(3) * t353 - qJD(5) * t352 - t919, -qJD(3) * t350 - qJD(5) * t351 - t920, t492, qJD(3) * t37 + qJD(4) * t259 - qJD(5) * t52 - t1041, qJD(3) * t40 - qJD(4) * t258 - qJD(5) * t53 + t1039, -t300 * t921 + t865, t866 - t970, t1163 * t804 - t931, t1191 * t1200 - t932, t454, qJD(3) * t1 + qJD(4) * t108 - qJD(5) * t8 - qJD(6) * t11 - t1055, qJD(3) * t4 + qJD(4) * t111 - qJD(5) * t7 - qJD(6) * t12 + t1054; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t844, t623 * qJD(3), 0, 0, 0, -pkin(2) * t907, -pkin(2) * t906, -qJD(3) * t434 + t846, 0, -qJD(3) * t433 + qJD(4) * t662 (qJD(3) * t604 - t903) * t586, t573 * t797, -t870 * t312, 0, 0, 0, qJD(3) * t246 + t573 * t903 + t578 * t899, qJD(3) * t247 - t573 * t899 + t578 * t903 (-t898 - t900 + t908) * t1142, -t804 * t1162, 0, 0, 0, qJD(3) * t94 - qJD(5) * t98 + t1114 * t903 + t1142 * t897, qJD(3) * t95 - qJD(5) * t99 - t1114 * t897 + t1142 * t903; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t799, t1111, t571, t633 * t668, t642, -t734 - t860, -t735 + t861, -t750 - t860, t1160 - t964, -t751 - t861, pkin(8) * t1160 - t714, t1132, -t746, -t886 - t1123, -t889 - t797, t642, -t1130 - t756, qJD(3) * t1117 + qJD(5) * t322 - t755, t716, t766, qJD(5) * t223 + qJD(6) * t254 + t1190 - t908, qJD(5) * t221 + t1195, t642, -qJD(3) * t156 + t1166 * t868 - t776, -qJD(3) * t762 + t1201 * t868 - t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t800, t571, t545, -t708 + t860, 0, 0, 0, 0, 0, t702, t703, 0, 0, 0, 0, 0, t710, t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1132, t746, -t887 + t1123, t797 - t888, t641, t1130 - t713, qJD(3) * t322 + qJD(5) * t1117 - t712, -t716, t764, qJD(3) * t223 + qJD(6) * t253 - t1190 - t900, qJD(3) * t221 - qJD(5) * t1142 + qJD(6) * t255 - t1198, t641, -qJD(5) * t156 + t67 * qJD(6) + t1180 + t773, -qJD(5) * t762 + t61 * qJD(6) + t1202 + t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t717, t757, qJD(3) * t254 + qJD(5) * t253 - t1190 - t898, qJD(5) * t255 - t1195, t641, qJD(5) * t67 - qJD(6) * t156 + t1180 - t722, qJD(5) * t61 - qJD(6) * t762 + t1202 - t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t798, t701, t496 (-t851 - t912) * t673, t643, -qJD(2) * t426 + t917, -qJD(2) * t425 - t918, -qJD(2) * t103 - t922, qJD(2) * t90 + t960, -t101 * qJD(2) + t893 - t901, -qJ(4) * t901 - t46 * qJD(2) - t965, -t1131, t747, t353 * qJD(2) - t853, t350 * qJD(2) - t852, t643, -t37 * qJD(2) - t76 * qJD(5) - t847 - t968, -t40 * qJD(2) - t77 * qJD(5) - t845 + t967, -t719, -t767, -t151 * qJD(5) - t268 * qJD(6) - t1176, -t1141 + t1186, t643, -qJD(2) * t1 - qJD(5) * t23 - qJD(6) * t15 - t1051 + t882, -qJD(2) * t4 - qJD(5) * t24 - qJD(6) * t16 + t1050 - t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t799, -t1111, t630, -t668 * t871, t641, t734, t735, t750, t964, t751, t714, -t1132, t746, t886, t889, t641, t756, qJD(5) * t438 + t755, -t716, -t766, -qJD(5) * t222 - qJD(6) * t378 - t1190, -t1198 - t1140, t641, t776, t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), 0, 0, 0, 0, 0, qJD(5) * t585 + t904, -qJD(5) * t584 + t902, 0, 0, 0, 0, 0, qJD(5) * t423 + qJD(6) * t415 + t552, qJD(5) * t424 - qJD(6) * t414 - t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t633, -t588, 0, 0, 0, 0, 0, -t569, -t570, 0, 0, 0, 0, 0, t944, -t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t585 * t870 - t969, -t584 * t870 + t754, 0, 0, -t744, -t1129, 0, qJD(6) * t225 + t423 * t870 - t769, qJD(6) * t227 + t424 * t870 - t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t742, 0, 0, qJD(5) * t225 + t415 * t869 - t771, qJD(5) * t227 - t414 * t869 - t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t506 + t602, t496, -t683, qJ(4) * t905 + t211 * qJD(2) + t890, 0, 0, 0, 0, 0, -t259 * qJD(2) + t667 * t796 - t881, t258 * qJD(2) + t671 * t796 - t880, 0, 0, 0, 0, 0, -qJD(2) * t108 - t359 * t804 - t924, -qJD(2) * t111 + t354 * t804 + t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t800, t630, -t545, t708, 0, 0, 0, 0, 0, -t702, -t703, 0, 0, 0, 0, 0, -t710, -t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t633, t588, 0, 0, 0, 0, 0, t504, t505, 0, 0, 0, 0, 0, -t163, t1167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504, -t505, 0, 0, 0, 0, 0, t163, -t1167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, -t1167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1131, -t747, t352 * qJD(2) + t853, t351 * qJD(2) + t852, t644, t52 * qJD(2) + t76 * qJD(3) + t847 - t962, t53 * qJD(2) + t77 * qJD(3) + t845 + t963, t719, -t765, t151 * qJD(3) + t267 * qJD(6) + t1176, t1112 * t1164 - t1186, t644, qJD(2) * t8 + qJD(3) * t23 + qJD(6) * t19 - t1053 - t882, qJD(2) * t7 + qJD(3) * t24 + qJD(6) * t21 + t1052 + t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, -t746, t887, t888, t642, t713, -qJD(3) * t438 + t712, t716, -t764, qJD(3) * t222 + qJD(6) * t377 + t1190, t1113 * t1164 + t1198, t642, -t773, -t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t585 - t904 + t969, qJD(3) * t584 - t754 - t902, 0, 0, t744, t1129, 0, -qJD(3) * t423 - qJD(6) * t224 - t552 + t769, -qJD(3) * t424 - qJD(6) * t226 + t548 + t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, t570, 0, 0, 0, 0, 0, -t944, t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t666 * t1056, -t670 * t1056; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t743, t1129, 0, -t666 * t803 + t695, -t670 * t803 + t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, -t763, t268 * qJD(3) - t267 * qJD(5) + t1176, -t1141 - t1186, t644, qJD(2) * t11 + qJD(3) * t15 - qJD(5) * t19 - t1048 - t882, qJD(2) * t12 + qJD(3) * t16 - qJD(5) * t21 + t1049 + t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t717, -t757, qJD(3) * t378 - qJD(5) * t377 + t1190, t1198 - t1140, t642, t722, t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t742, 0, 0, -qJD(3) * t415 + qJD(5) * t224 - t552 + t771, qJD(3) * t414 + qJD(5) * t226 + t548 + t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t944, t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t743, -t1129, 0, t1057 * t666 - t695, t1057 * t670 - t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t31;
