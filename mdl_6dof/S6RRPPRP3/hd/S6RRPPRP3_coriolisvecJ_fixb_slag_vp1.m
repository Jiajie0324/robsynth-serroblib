% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRPPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:36
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPPRP3_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP3_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP3_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RRPPRP3_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPPRP3_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPPRP3_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPPRP3_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:33:46
% EndTime: 2019-03-09 08:35:27
% DurationCPUTime: 99.11s
% Computational Cost: add. (19029->1307), mult. (49170->1596), div. (0->0), fcn. (44057->6), ass. (0->644)
t1294 = Icges(6,4) + Icges(7,4);
t1257 = Icges(6,1) + Icges(7,1);
t1256 = Icges(6,5) + Icges(7,5);
t1255 = Icges(6,2) + Icges(7,2);
t1254 = Icges(6,6) + Icges(7,6);
t589 = sin(qJ(2));
t1010 = Icges(5,4) * t589;
t592 = cos(qJ(2));
t574 = Icges(4,5) * t589;
t738 = Icges(4,3) * t592 - t574;
t1237 = -Icges(5,1) * t592 - t1010 - t738;
t1012 = Icges(3,4) * t589;
t493 = Icges(3,2) * t592 + t1012;
t1280 = t493 - t1237;
t591 = cos(qJ(5));
t1293 = t1294 * t591;
t588 = sin(qJ(5));
t1292 = t1294 * t588;
t1291 = Icges(6,3) + Icges(7,3);
t1290 = -t1254 * t588 + t1256 * t591;
t1289 = -t1255 * t588 + t1293;
t1288 = t1257 * t591 - t1292;
t1009 = Icges(5,4) * t592;
t495 = Icges(5,1) * t589 - t1009;
t577 = Icges(3,4) * t592;
t742 = -Icges(3,2) * t589 + t577;
t1239 = t495 - t742;
t1001 = Icges(4,5) * t592;
t486 = Icges(4,3) * t589 + t1001;
t1287 = t486 + t1239;
t489 = -Icges(5,2) * t592 + t1010;
t500 = Icges(3,1) * t592 - t1012;
t1240 = t489 - t500;
t746 = Icges(4,1) * t592 + t574;
t1286 = t746 - t1240;
t497 = Icges(4,1) * t589 - t1001;
t741 = Icges(5,2) * t589 + t1009;
t1272 = Icges(3,1) * t589 + t497 + t577 + t741;
t590 = sin(qJ(1));
t593 = cos(qJ(1));
t326 = -Icges(4,6) * t593 + t486 * t590;
t1000 = Icges(5,5) * t593;
t959 = t590 * t592;
t543 = Icges(5,4) * t959;
t963 = t589 * t590;
t344 = Icges(5,1) * t963 + t1000 - t543;
t1285 = -t326 - t344;
t957 = t592 * t593;
t540 = Icges(4,5) * t957;
t962 = t589 * t593;
t994 = Icges(4,6) * t590;
t327 = Icges(4,3) * t962 + t540 + t994;
t345 = -Icges(5,5) * t590 + t495 * t593;
t1284 = t327 + t345;
t488 = Icges(3,5) * t592 - Icges(3,6) * t589;
t329 = Icges(3,3) * t590 + t488 * t593;
t492 = Icges(4,4) * t592 + Icges(4,6) * t589;
t337 = Icges(4,2) * t590 + t492 * t593;
t1283 = -t329 - t337;
t347 = Icges(4,4) * t590 + t593 * t746;
t349 = Icges(3,5) * t590 + t500 * t593;
t1241 = t347 + t349;
t965 = t588 * t592;
t1282 = t1294 * t965;
t1281 = t1256 * t589;
t991 = Icges(5,6) * t593;
t334 = Icges(5,4) * t963 - Icges(5,2) * t959 + t991;
t346 = -Icges(4,4) * t593 + t590 * t746;
t1002 = Icges(3,5) * t593;
t545 = Icges(3,4) * t963;
t348 = Icges(3,1) * t959 - t1002 - t545;
t1279 = t334 - t346 - t348;
t1264 = (Icges(5,5) + Icges(3,6) - Icges(4,6)) * t592 + (Icges(4,4) + Icges(3,5) + Icges(5,6)) * t589;
t1207 = -t1254 * t589 + t1289 * t592;
t1208 = t1290 * t592 - t1291 * t589;
t958 = t591 * t592;
t1243 = -t1257 * t958 + t1281 + t1282;
t956 = t593 * t591;
t961 = t590 * t588;
t407 = t589 * t961 - t956;
t960 = t590 * t591;
t964 = t588 * t593;
t408 = t589 * t960 + t964;
t1126 = t1207 * t407 - t1208 * t959 + t1243 * t408;
t409 = -t588 * t962 - t960;
t381 = Icges(7,4) * t409;
t410 = t589 * t956 - t961;
t203 = Icges(7,1) * t410 + Icges(7,5) * t957 + t381;
t384 = Icges(6,4) * t409;
t206 = Icges(6,1) * t410 + Icges(6,5) * t957 + t384;
t1247 = t203 + t206;
t1005 = Icges(7,4) * t410;
t197 = Icges(7,2) * t409 + Icges(7,6) * t957 + t1005;
t1008 = Icges(6,4) * t410;
t200 = Icges(6,2) * t409 + Icges(6,6) * t957 + t1008;
t1248 = t197 + t200;
t191 = Icges(7,5) * t410 + Icges(7,6) * t409 + Icges(7,3) * t957;
t194 = Icges(6,5) * t410 + Icges(6,6) * t409 + Icges(6,3) * t957;
t1249 = t191 + t194;
t1216 = t1247 * t408 - t1248 * t407 + t1249 * t959;
t379 = Icges(7,4) * t407;
t202 = -Icges(7,1) * t408 - Icges(7,5) * t959 + t379;
t382 = Icges(6,4) * t407;
t205 = -Icges(6,1) * t408 - Icges(6,5) * t959 + t382;
t1170 = t202 + t205;
t380 = Icges(7,4) * t408;
t195 = -Icges(7,2) * t407 + Icges(7,6) * t959 + t380;
t383 = Icges(6,4) * t408;
t198 = -Icges(6,2) * t407 + Icges(6,6) * t959 + t383;
t1171 = t195 + t198;
t189 = Icges(7,5) * t408 - Icges(7,6) * t407 + Icges(7,3) * t959;
t192 = Icges(6,5) * t408 - Icges(6,6) * t407 + Icges(6,3) * t959;
t1211 = t189 + t192;
t1217 = -t1170 * t408 - t1171 * t407 + t1211 * t959;
t878 = qJD(5) * t592;
t886 = qJD(2) * t590;
t459 = t593 * t878 + t886;
t884 = qJD(2) * t593;
t460 = -t590 * t878 + t884;
t879 = qJD(5) * t589;
t554 = qJD(1) + t879;
t1138 = t1126 * t554 + t1216 * t459 - t1217 * t460;
t1125 = -t1207 * t409 - t1208 * t957 + t1243 * t410;
t1214 = t1247 * t410 + t1248 * t409 + t1249 * t957;
t1215 = -t1170 * t410 + t1171 * t409 + t1211 * t957;
t1137 = t1125 * t554 + t1214 * t459 - t1215 * t460;
t483 = Icges(5,5) * t589 - Icges(5,6) * t592;
t325 = -Icges(5,3) * t590 + t483 * t593;
t317 = t593 * t325;
t1278 = -t345 * t963 - t349 * t959 - t317;
t1277 = t1290 * t589 + t1291 * t592;
t1119 = t1254 * t592 + t1289 * t589;
t1118 = t1256 * t592 + t1288 * t589;
t1276 = (t1254 * t591 + t1256 * t588) * t592;
t1275 = (t1257 * t588 + t1293) * t592;
t887 = qJD(2) * t589;
t885 = qJD(2) * t592;
t1227 = t483 - t488;
t1274 = -t492 + t1227;
t1271 = -t1272 * t592 + t1280 * t589;
t1270 = -t329 * t593 - t1278;
t727 = t326 * t589 + t346 * t592;
t1130 = t590 * t727;
t986 = Icges(5,3) * t593;
t324 = Icges(5,5) * t963 - Icges(5,6) * t959 + t986;
t722 = t334 * t592 - t344 * t589;
t336 = -Icges(4,2) * t593 + t492 * t590;
t973 = t336 * t593;
t1174 = t324 * t593 - t590 * t722 + t1130 - t973;
t988 = Icges(3,3) * t593;
t328 = Icges(3,5) * t959 - Icges(3,6) * t963 - t988;
t995 = Icges(3,6) * t593;
t338 = Icges(3,4) * t959 - Icges(3,2) * t963 - t995;
t972 = t338 * t589;
t718 = -t348 * t592 + t972;
t1269 = -t328 * t593 - t590 * t718 + t1174;
t544 = Icges(5,4) * t962;
t992 = Icges(5,6) * t590;
t335 = -Icges(5,2) * t957 + t544 - t992;
t339 = Icges(3,6) * t590 + t593 * t742;
t1173 = -t335 * t959 - t339 * t963 + t1270;
t776 = -t327 * t963 + t337 * t593 - t347 * t959;
t1268 = -t776 + t1173;
t1267 = -t1241 * t957 + t1283 * t590 - t1284 * t962;
t1266 = t1287 * qJD(2);
t1265 = t1286 * qJD(2);
t315 = t590 * t336;
t1261 = t1279 * t957 + t1285 * t962 - t590 * t328 - t315;
t1086 = t1264 * t593;
t1087 = t1264 * t590;
t1260 = t1272 * t887 + t1280 * t885;
t846 = t589 * t884;
t889 = qJD(1) * t592;
t850 = t590 * t889;
t1165 = t846 + t850;
t805 = qJD(1) * t589 + qJD(5);
t844 = t592 * t884;
t1082 = t590 * t805 - t844;
t712 = t591 * t554;
t175 = t1082 * t588 - t593 * t712;
t711 = t554 * t588;
t176 = -t1082 * t591 - t593 * t711;
t96 = Icges(7,5) * t176 + Icges(7,6) * t175 - Icges(7,3) * t1165;
t98 = Icges(6,5) * t176 + Icges(6,6) * t175 - Icges(6,3) * t1165;
t1259 = t96 + t98;
t845 = t590 * t885;
t177 = -t590 * t712 + (-t593 * t805 - t845) * t588;
t178 = t805 * t956 + (t591 * t885 - t711) * t590;
t847 = t589 * t886;
t888 = qJD(1) * t593;
t849 = t592 * t888;
t663 = -t847 + t849;
t97 = Icges(7,5) * t178 + Icges(7,6) * t177 + Icges(7,3) * t663;
t99 = Icges(6,5) * t178 + Icges(6,6) * t177 + Icges(6,3) * t663;
t1258 = t97 + t99;
t100 = Icges(7,4) * t176 + Icges(7,2) * t175 - Icges(7,6) * t1165;
t102 = Icges(6,4) * t176 + Icges(6,2) * t175 - Icges(6,6) * t1165;
t1253 = t100 + t102;
t101 = Icges(7,4) * t178 + Icges(7,2) * t177 + Icges(7,6) * t663;
t103 = Icges(6,4) * t178 + Icges(6,2) * t177 + Icges(6,6) * t663;
t1252 = t101 + t103;
t104 = Icges(7,1) * t176 + Icges(7,4) * t175 - Icges(7,5) * t1165;
t106 = Icges(6,1) * t176 + Icges(6,4) * t175 - Icges(6,5) * t1165;
t1251 = t104 + t106;
t105 = Icges(7,1) * t178 + Icges(7,4) * t177 + Icges(7,5) * t663;
t107 = Icges(6,1) * t178 + Icges(6,4) * t177 + Icges(6,5) * t663;
t1250 = t105 + t107;
t1246 = qJD(2) * t1277 + qJD(5) * t1276;
t1245 = (t1255 * t591 + t1292) * t878 + t1119 * qJD(2);
t1244 = qJD(2) * t1118 + qJD(5) * t1275;
t1242 = t345 - t339;
t1238 = -t1207 * t588 - t1243 * t591;
t1236 = t335 * t592 + t339 * t589;
t1157 = -t324 * t590 - t338 * t962 - t1261;
t1156 = -t325 * t590 - t335 * t957 - t339 * t962 - t1267;
t1235 = t1271 * t590 + t1086;
t1234 = -t1271 * t593 + t1087;
t1233 = t338 + t1285;
t1232 = -t327 - t1242;
t1230 = -t335 + t1241;
t890 = qJD(1) * t590;
t852 = t589 * t890;
t529 = pkin(3) * t852;
t502 = pkin(2) * t589 - qJ(3) * t592;
t436 = t502 * t590;
t882 = qJD(3) * t593;
t807 = qJD(1) * t436 + t592 * t882;
t1226 = t529 + t807;
t1225 = t1265 * t592 + t1266 * t589 + (-t1272 * t589 - t1280 * t592) * qJD(2) + t1264 * qJD(1);
t1224 = t1264 * qJD(2);
t1223 = t1241 * t592 + t1284 * t589 - t1236;
t1222 = t718 + t722 - t727;
t1221 = -qJD(1) * t1271 + qJD(2) * t1274;
t1220 = (-Icges(3,2) * t959 + t1237 * t590 - t1279 - t545) * t593 - (-Icges(5,1) * t957 - t544 + (-t493 - t738) * t593 + t1230) * t590;
t1112 = (t1257 * t407 + t1171 + t380 + t383) * t460 - (-t1257 * t409 + t1005 + t1008 + t1248) * t459 - (-t1207 - t1275) * t554;
t1219 = (-t1255 * t408 - t1170 - t379 - t382) * t460 - (-t1255 * t410 + t1247 + t381 + t384) * t459 - (t1255 * t958 + t1243 + t1282) * t554;
t1144 = -t1165 * t1211 - t1170 * t176 + t1171 * t175 + t1250 * t410 + t1252 * t409 + t1258 * t957;
t1143 = -t1165 * t1249 + t1247 * t176 + t1248 * t175 + t1251 * t410 + t1253 * t409 + t1259 * t957;
t1142 = -t1170 * t178 + t1171 * t177 + t1211 * t663 + t1250 * t408 - t1252 * t407 + t1258 * t959;
t1141 = t1247 * t178 + t1248 * t177 + t1249 * t663 + t1251 * t408 - t1253 * t407 + t1259 * t959;
t1184 = t1165 * t1208 - t1207 * t175 + t1243 * t176 + t1244 * t410 + t1245 * t409 + t1246 * t957;
t1183 = -t1207 * t177 - t1208 * t663 + t1243 * t178 + t1244 * t408 - t1245 * t407 + t1246 * t959;
t1218 = (-t1244 * t591 + t1245 * t588 + (-t1207 * t591 + t1243 * t588) * qJD(5) - t1208 * qJD(2)) * t592 + (-qJD(2) * t1238 + t1246) * t589;
t733 = t195 * t588 + t202 * t591;
t75 = t189 * t589 + t592 * t733;
t731 = t198 * t588 + t205 * t591;
t77 = t192 * t589 + t592 * t731;
t1213 = t75 + t77;
t732 = t197 * t588 - t203 * t591;
t76 = t191 * t589 + t592 * t732;
t730 = t200 * t588 - t206 * t591;
t78 = t194 * t589 + t592 * t730;
t1212 = t76 + t78;
t1124 = -t1208 * t589 + t1238 * t592;
t1209 = (-t1238 + t1277) * t554 + (-t1208 * t590 + t731 + t733) * t460 + (t1208 * t593 - t730 - t732) * t459;
t1206 = t1288 * t592 - t1281;
t1205 = t1276 * t554 + (t1254 * t408 + t1256 * t407) * t460 + (-t1254 * t410 + t1256 * t409) * t459;
t555 = pkin(5) * t964;
t564 = pkin(5) * t591 + pkin(4);
t1204 = -rSges(7,1) * t408 + rSges(7,2) * t407 - t564 * t963 - t555;
t1197 = (-t1224 * t590 + (t1222 - t325 - t1283) * qJD(1)) * t593;
t587 = -qJ(6) - pkin(8);
t1043 = pkin(8) + t587;
t764 = rSges(7,1) * t591 - rSges(7,2) * t588;
t1044 = pkin(4) - t564;
t834 = t1044 * t592;
t1167 = t592 * t764 - t834 + (-rSges(7,3) + t1043) * t589;
t877 = qJD(6) * t592;
t530 = t593 * t877;
t1050 = pkin(4) * t589;
t1095 = t1043 * t592;
t943 = (t1050 + t1095) * t590 - rSges(7,3) * t959 + t1204;
t1194 = t1167 * t460 + t554 * t943 + t530;
t1193 = t1234 * qJD(1);
t1192 = (Icges(5,2) * t963 + t1233 + t543) * t593 + (-Icges(4,1) * t962 + t540 + (t497 - t741) * t593 - t1232) * t590;
t1191 = (t1156 * t590 - t1157 * t593) * qJD(2);
t1190 = (t1268 * t590 - t1269 * t593) * qJD(2);
t1189 = t1235 * qJD(1);
t1188 = t1272 - t1287;
t1187 = -t1280 + t1286;
t1178 = pkin(1) * qJD(1);
t1039 = rSges(5,2) * t589;
t770 = rSges(5,1) * t592 + t1039;
t440 = t770 * t590;
t769 = rSges(6,1) * t178 + rSges(6,2) * t177;
t111 = rSges(6,3) * t663 + t769;
t768 = -rSges(6,1) * t408 + rSges(6,2) * t407;
t212 = rSges(6,3) * t959 - t768;
t767 = rSges(6,1) * t591 - rSges(6,2) * t588;
t358 = rSges(6,3) * t592 + t589 * t767;
t442 = (rSges(6,1) * t588 + rSges(6,2) * t591) * t592;
t242 = qJD(2) * t358 + qJD(5) * t442;
t871 = qJD(2) * qJD(5);
t830 = t589 * t871;
t311 = qJD(1) * t459 - t590 * t830;
t640 = -rSges(6,3) * t589 + t592 * t767;
t558 = pkin(3) * t957;
t594 = qJD(2) ^ 2;
t779 = pkin(4) * t592 - pkin(8) * t589;
t873 = qJD(1) * qJD(2);
t833 = t590 * t873;
t526 = pkin(3) * t847;
t872 = qJD(2) * qJD(3);
t831 = t592 * t872;
t915 = t502 * t833 + t593 * t831;
t861 = qJD(1) * t526 + t915;
t645 = -t558 * t594 - t779 * t833 + t861;
t851 = t589 * t888;
t403 = t845 + t851;
t525 = pkin(8) * t847;
t273 = pkin(4) * t403 + pkin(8) * t849 - t525;
t899 = -qJ(4) * t890 - t526;
t280 = (pkin(3) * t889 + qJD(4)) * t593 + t899;
t880 = qJD(4) * t593;
t527 = pkin(2) * t847;
t569 = qJD(3) * t589;
t839 = t590 * t569;
t208 = pkin(2) * t849 + qJ(3) * t403 - t527 + t839;
t515 = pkin(1) * t593 + pkin(7) * t590;
t477 = t515 * qJD(1);
t944 = -t208 - t477;
t702 = -t280 - t880 + t944;
t684 = -t273 + t702;
t1053 = pkin(2) * t592;
t983 = qJ(3) * t589;
t507 = t983 + t1053;
t883 = qJD(3) * t592;
t385 = qJD(2) * t507 - t883;
t1048 = pkin(8) * t592;
t512 = t1048 + t1050;
t476 = t512 * qJD(2);
t917 = -t385 - t476;
t21 = -t111 * t554 - t242 * t460 - t311 * t640 + (-t212 * t878 + t593 * t917) * qJD(2) + (t684 - t839) * qJD(1) + t645;
t216 = rSges(6,1) * t410 + rSges(6,2) * t409 + rSges(6,3) * t957;
t450 = pkin(4) * t962 + pkin(8) * t957;
t452 = t502 * t886;
t774 = -t452 - t526 + t880;
t475 = -qJ(4) * t590 + t558;
t446 = pkin(2) * t957 + qJ(3) * t962;
t799 = t446 + t515;
t858 = t475 + t799;
t627 = (t450 + t858) * qJD(1) + t779 * t886 + t774;
t64 = t216 * t554 + t459 * t640 + t627 + t839;
t1169 = qJD(1) * t64 + t21;
t1094 = t1044 * t589;
t309 = -t1094 - t1095;
t1168 = rSges(7,3) * t592 + t589 * t764 + t309;
t1166 = t324 - t328 + t1236;
t568 = qJD(6) * t589;
t448 = t512 * t590;
t474 = pkin(3) * t959 + qJ(4) * t593;
t439 = t507 * t590;
t775 = t439 * t886 + t446 * t884 - t883;
t685 = t474 * t886 + t475 * t884 + t775;
t644 = t448 * t886 + t450 * t884 + t685;
t1116 = rSges(7,1) * t410 + rSges(7,2) * t409 + rSges(7,3) * t957 + t564 * t962;
t942 = -pkin(5) * t961 - t587 * t957 + t1116 - t450;
t34 = -t459 * t943 + t460 * t942 + t568 + t644;
t1052 = pkin(3) * t589;
t817 = -t502 - t1052;
t789 = t779 + t817;
t700 = t593 * t789;
t665 = qJD(2) * t700;
t533 = t589 * t882;
t881 = qJD(4) * t590;
t806 = t533 - t881;
t583 = t593 * pkin(7);
t513 = pkin(1) * t590 - t583;
t914 = -t439 - t513;
t860 = -t474 + t914;
t604 = (-t448 + t860) * qJD(1) + t665 + t806;
t35 = t604 + t1194;
t814 = t35 * t1167;
t1164 = -t34 * t942 - t814;
t1163 = -t1189 + t1190;
t1162 = t1191 + t1193;
t1161 = t1222 * qJD(2) + t1260 * t590 + ((t486 * t593 + t1242 + t994) * t592 + (t489 * t593 - t1241 - t992) * t589) * qJD(1);
t1160 = t1223 * qJD(2) - t1260 * t593 + ((t1000 + t326 + t995) * t592 + (t1002 - t346 + t991) * t589 + (t1239 * t592 + t1240 * t589) * t590) * qJD(1);
t1159 = -t1221 * t590 + t1225 * t593;
t1158 = t1221 * t593 + t1225 * t590;
t1155 = -t973 + t1267;
t1152 = t1230 * t589 + t1232 * t592;
t1151 = t1233 * t592 - t1279 * t589;
t1149 = -t1224 * t593 + (t1227 * t590 - t1223 - t336 + t986 + t988) * qJD(1);
t1148 = -t212 * t554 + t460 * t640;
t1147 = 0.2e1 * qJD(2);
t312 = qJD(1) * t460 - t593 * t830;
t829 = t592 * t871;
t1146 = t1125 * t829 + t1143 * t459 - t1144 * t460 + t1184 * t554 + t1214 * t312 + t1215 * t311;
t1145 = t1126 * t829 + t1141 * t459 - t1142 * t460 + t1183 * t554 + t1216 * t312 + t1217 * t311;
t17 = (-qJD(2) * t733 + t97) * t589 + (qJD(2) * t189 + t101 * t588 - t105 * t591 + (t195 * t591 - t202 * t588) * qJD(5)) * t592;
t19 = (-qJD(2) * t731 + t99) * t589 + (qJD(2) * t192 + t103 * t588 - t107 * t591 + (t198 * t591 - t205 * t588) * qJD(5)) * t592;
t1140 = t17 + t19;
t18 = (-qJD(2) * t732 + t96) * t589 + (qJD(2) * t191 + t100 * t588 - t104 * t591 + (t197 * t591 + t203 * t588) * qJD(5)) * t592;
t20 = (-qJD(2) * t730 + t98) * t589 + (qJD(2) * t194 + t102 * t588 - t106 * t591 + (t200 * t591 + t206 * t588) * qJD(5)) * t592;
t1139 = t18 + t20;
t1136 = t1124 * t554 + t1212 * t459 - t1213 * t460;
t1134 = t34 * t943;
t63 = t1148 + t604;
t1133 = qJD(1) * t63;
t1131 = t590 * (t877 + t569);
t1129 = (-qJD(2) * t770 - t569) * t590;
t1041 = rSges(4,1) * t589;
t504 = -rSges(4,3) * t592 + t1041;
t1128 = (qJD(2) * t504 - t569) * t590;
t1127 = -qJ(3) - t564;
t1123 = t1207 * t590;
t1122 = t1207 * t593;
t1121 = t1206 * t590;
t1120 = t1206 * t593;
t480 = qJD(1) * t513;
t1117 = -qJD(1) * t439 - t480;
t1114 = t1209 * t592;
t1111 = t1205 * t592;
t683 = -qJD(1) * t474 + t1117 + t806;
t1110 = -qJD(1) * t448 + t665 + t683;
t1109 = t1208 * t554 + t1211 * t460 - t1249 * t459;
t1108 = t1212 * t593 + t1213 * t590;
t1107 = t1212 * t590 - t1213 * t593;
t1106 = t1214 * t593 + t1215 * t590;
t1105 = t1214 * t590 - t1215 * t593;
t1104 = t1216 * t593 + t1217 * t590;
t1103 = t1216 * t590 - t1217 * t593;
t579 = t590 * rSges(4,2);
t365 = rSges(4,1) * t957 + rSges(4,3) * t962 + t579;
t1100 = t799 + t365;
t1099 = rSges(7,1) * t176 + rSges(7,2) * t175 + t1165 * t587 + t564 * t844 + t530;
t547 = rSges(5,2) * t959;
t698 = -rSges(5,1) * t963 - rSges(5,3) * t593;
t359 = -t547 - t698;
t1097 = qJD(1) * t359;
t1089 = t1124 * t829 + t1218 * t554;
t1051 = pkin(3) * t592;
t1088 = -t1051 - t1053;
t1085 = t1192 * t592 + t1220 * t589;
t1084 = (t1187 * t592 - t1188 * t589) * qJD(1);
t1083 = t1274 * qJD(1);
t387 = t409 * pkin(5);
t528 = pkin(4) * t844;
t1018 = -rSges(7,3) * t1165 + pkin(8) * t846 - t528 + qJD(5) * t387 + (-t555 + (t1048 + t1094) * t590) * qJD(1) + t1099;
t766 = rSges(7,1) * t178 + rSges(7,2) * t177;
t1034 = pkin(5) * qJD(5);
t867 = t591 * t1034;
t1017 = rSges(7,3) * t663 + t766 + t525 + (qJD(1) * t309 + t867) * t593 + (t877 - pkin(5) * t711 + (t587 * t589 - t834) * qJD(2)) * t590;
t272 = -pkin(4) * t852 - pkin(8) * t1165 + t528;
t279 = -pkin(3) * t1165 - qJ(4) * t888 - t881;
t902 = qJ(3) * t844 + t533;
t207 = -pkin(2) * t1165 - qJ(3) * t852 + t902;
t832 = t593 * t873;
t804 = t207 * t884 + t208 * t886 + t439 * t832 + t589 * t872;
t664 = t279 * t884 + t280 * t886 + t474 * t832 + t804;
t629 = t272 * t884 + t273 * t886 + t448 * t832 + t664;
t913 = t446 + t475;
t859 = t450 + t913;
t704 = t859 * t890;
t5 = t1018 * t460 - t943 * t312 + t1017 * t459 - t942 * t311 + t629 + (-t704 + t877) * qJD(2);
t1072 = t1018 * t34 + t5 * t942;
t1071 = m(4) / 0.2e1;
t1070 = m(5) / 0.2e1;
t1069 = m(6) / 0.2e1;
t1068 = -m(7) / 0.2e1;
t1067 = m(7) / 0.2e1;
t1066 = -pkin(2) - pkin(3);
t1065 = t311 / 0.2e1;
t1064 = t312 / 0.2e1;
t1063 = -t459 / 0.2e1;
t1062 = t459 / 0.2e1;
t1061 = -t460 / 0.2e1;
t1060 = t460 / 0.2e1;
t1059 = -t554 / 0.2e1;
t1058 = t554 / 0.2e1;
t1054 = -rSges(4,1) - pkin(2);
t1049 = pkin(5) * t588;
t1045 = -pkin(4) - qJ(3);
t1042 = rSges(3,1) * t592;
t1040 = rSges(5,1) * t589;
t1038 = rSges(5,2) * t592;
t1037 = rSges(5,3) * t590;
t1033 = t17 * t460;
t1032 = t18 * t459;
t1031 = t19 * t460;
t1030 = t20 * t459;
t578 = t590 * rSges(3,3);
t1025 = t75 * t311;
t1024 = t76 * t312;
t1023 = t77 * t311;
t1022 = t78 * t312;
t1021 = -rSges(5,1) - qJ(3);
t1020 = -rSges(4,3) - qJ(3);
t1019 = -rSges(5,3) - qJ(4);
t36 = t1167 * t459 + t554 * t942 + t1131 + t627;
t982 = qJD(1) * t36;
t981 = qJD(2) * t34;
t898 = rSges(3,2) * t963 + rSges(3,3) * t593;
t361 = rSges(3,1) * t959 - t898;
t505 = rSges(3,1) * t589 + rSges(3,2) * t592;
t840 = t505 * t884;
t161 = -t840 + (-t361 - t513) * qJD(1);
t978 = t161 * t590;
t977 = t161 * t593;
t848 = t505 * t886;
t366 = rSges(3,1) * t957 - rSges(3,2) * t962 + t578;
t920 = t366 + t515;
t162 = qJD(1) * t920 - t848;
t445 = t505 * t593;
t976 = t162 * t445;
t954 = rSges(6,1) * t176 + rSges(6,2) * t175;
t441 = (rSges(7,1) * t588 + rSges(7,2) * t591) * t592;
t868 = t588 * t1034;
t953 = qJD(2) * t1168 + qJD(5) * t441 + t592 * t868 + t568;
t941 = t1167 * t590;
t940 = t1167 * t593;
t939 = -rSges(7,2) * t408 + (-rSges(7,1) - pkin(5)) * t407;
t938 = rSges(7,1) * t409 - rSges(7,2) * t410 + t387;
t921 = -t365 - t446;
t919 = t439 * t590 + t446 * t593;
t509 = rSges(4,1) * t592 + rSges(4,3) * t589;
t918 = -qJD(2) * t509 - t385;
t443 = t502 * t593;
t916 = -qJD(1) * t443 + t590 * t883;
t453 = t502 * t890;
t912 = t453 + t529;
t904 = -t502 - t504;
t903 = -t507 - t509;
t901 = rSges(4,2) * t888 + rSges(4,3) * t844;
t900 = rSges(3,2) * t852 + rSges(3,3) * t888;
t897 = t590 ^ 2 + t593 ^ 2;
t870 = -rSges(7,3) + t1066;
t869 = t594 * t1051;
t866 = t36 * t888;
t865 = t207 * t593 + t208 * t590 + t439 * t888;
t864 = -t436 * t886 - t443 * t884 + t569;
t549 = rSges(5,1) * t962;
t364 = -rSges(5,2) * t957 - t1037 + t549;
t863 = -t364 - t913;
t451 = t779 * t593;
t862 = qJD(1) * t451 + t916;
t857 = -t779 * t890 + t912;
t567 = pkin(7) * t888;
t856 = t567 + t902;
t855 = rSges(5,1) * t844 + rSges(5,2) * t1165;
t854 = t527 - t899;
t853 = -rSges(6,3) - pkin(8) + t1066;
t835 = -pkin(1) - t1042;
t827 = t888 / 0.2e1;
t826 = -t886 / 0.2e1;
t824 = t885 / 0.2e1;
t823 = -t884 / 0.2e1;
t822 = t884 / 0.2e1;
t819 = t587 + t870;
t818 = -pkin(1) - t983;
t816 = -t507 - t1051;
t815 = -qJ(4) - t1049;
t812 = t593 * t904;
t455 = qJD(1) * (-pkin(1) * t890 + t567);
t803 = t590 * t831 + t455 + (t207 + t533) * qJD(1);
t801 = t474 * t590 + t475 * t593 + t919;
t798 = t897 * t1052;
t791 = -pkin(5) * t965 - t441;
t790 = t770 + t817;
t787 = -t512 + t816;
t786 = t64 * t853;
t782 = qJD(5) * t824;
t781 = t1054 * t592 - pkin(1);
t780 = -pkin(3) * t885 - t385;
t778 = -qJD(4) - t867;
t773 = -t568 + t917;
t771 = -rSges(3,2) * t589 + t1042;
t503 = -t1038 + t1040;
t109 = -rSges(6,3) * t1165 + t954;
t666 = qJD(1) * t700;
t750 = qJD(1) * t279 + t803;
t696 = qJD(1) * t272 + t750;
t22 = t109 * t554 - t242 * t459 + t312 * t640 + (-qJD(1) * qJD(4) - t869) * t590 + (t216 * t878 + t590 * t917 + t666) * qJD(2) + t696;
t763 = -t21 * t590 + t22 * t593;
t449 = t779 * t590;
t749 = t449 * t886 + t451 * t884 + t864;
t748 = t558 + t799;
t734 = -t162 * t590 - t977;
t729 = t212 * t593 - t216 * t590;
t713 = t640 + t789;
t470 = t503 * qJD(2);
t707 = -t470 + t780;
t706 = -t476 + t780;
t703 = t818 - t1040;
t701 = t590 * t787;
t699 = t787 * t593;
t697 = t279 * t593 + t280 * t590 + t474 * t888 + t865;
t694 = t448 * t590 + t450 * t593 + t801;
t689 = qJD(2) * t812 + t533;
t688 = t789 + t1167;
t438 = t505 * t590;
t437 = t504 * t590;
t687 = -t242 + t706;
t151 = (t361 * t590 + t366 * t593) * qJD(2);
t667 = t790 * t884;
t661 = -qJD(1) * t449 + t1226;
t660 = t706 - t953;
t659 = -t869 + (-t385 - t470) * qJD(2);
t658 = t1017 * t34 - t5 * t943;
t651 = t35 * t884 + t36 * t886 - t5;
t650 = t35 * t943 + t36 * t942;
t649 = -t1167 * t36 + t1134;
t643 = t272 * t593 + t273 * t590 + t448 * t888 + t697;
t628 = t667 - t881;
t56 = t212 * t459 + t216 * t460 + t644;
t615 = -t56 * t729 - (-t590 * t63 + t593 * t64) * t640;
t6 = -t1017 * t554 - t953 * t460 - t1167 * t311 + (t593 * t773 + t878 * t943) * qJD(2) + (t684 - t1131) * qJD(1) + t645;
t7 = -t590 * t869 + t1018 * t554 - t953 * t459 + t1167 * t312 + (t530 - t881) * qJD(1) + (t590 * t773 + t878 * t942 + t666) * qJD(2) + t696;
t605 = (-t35 * t890 + t590 * t7 + t593 * t6 + t866 + t981) * t1067;
t603 = -t1164 * t590 + t593 * t649;
t581 = t593 * rSges(4,2);
t472 = t771 * qJD(2);
t447 = t770 * t593;
t444 = t504 * t593;
t404 = t844 - t852;
t402 = t897 * t887;
t360 = t509 * t590 - t581;
t296 = t640 * t593;
t294 = t640 * t590;
t271 = rSges(6,1) * t409 - rSges(6,2) * t410;
t269 = -rSges(6,1) * t407 - rSges(6,2) * t408;
t248 = -qJD(2) * t438 + (t593 * t771 + t578) * qJD(1);
t247 = -qJD(2) * t437 + (t509 * t593 + t579) * qJD(1);
t246 = qJD(2) * t440 + (t503 * t593 - t1037) * qJD(1);
t245 = -rSges(3,1) * t1165 - rSges(3,2) * t844 + t900;
t244 = -rSges(4,1) * t1165 - rSges(4,3) * t852 + t901;
t243 = qJD(1) * t698 + t855;
t122 = qJD(1) * t1100 - t1128 - t452;
t121 = (-t360 + t914) * qJD(1) + t689;
t120 = -t472 * t884 + (-t248 - t477 + t848) * qJD(1);
t119 = -t472 * t886 + t455 + (t245 - t840) * qJD(1);
t118 = (t360 * t590 + t365 * t593) * qJD(2) + t775;
t95 = -t1129 + (t364 + t858) * qJD(1) + t774;
t94 = t533 + (-t359 + t860) * qJD(1) + t628;
t91 = (t359 * t590 + t364 * t593) * qJD(2) + t685;
t66 = t918 * t884 + (-t247 + t944 + t1128) * qJD(1) + t915;
t65 = qJD(1) * t244 + (qJD(1) * t812 + t590 * t918) * qJD(2) + t803;
t55 = t659 * t593 + (-t246 + t702 + t1129) * qJD(1) + t861;
t54 = t659 * t590 + (t243 + t628) * qJD(1) + t750;
t37 = (t244 * t593 + t247 * t590 + (t360 * t593 + t590 * t921) * qJD(1)) * qJD(2) + t804;
t29 = (t243 * t593 + t246 * t590 + (t359 * t593 + t590 * t863) * qJD(1)) * qJD(2) + t664;
t8 = -qJD(2) * t704 + t109 * t460 + t111 * t459 + t212 * t312 - t216 * t311 + t629;
t1 = [(((t1166 * t593 + t1155 + t1156) * t593 + (t1166 * t590 + t1157 - t1270 - t315 + t317 + t776) * t590) * qJD(2) + t1163 + t1189) * t826 + (t6 * (t583 + t1204) + t7 * (t748 + t1116) + (-t7 * t587 * t592 - t6 * qJ(4)) * t593 + (-t6 * pkin(1) + t7 * t815 + (-t6 * qJ(3) + t1127 * t982) * t589 + (t6 * t819 + t870 * t982) * t592) * t590 + (-t766 + t854 + (t778 + (-t564 * t589 + t592 * t819 + t818) * qJD(1)) * t593 + ((-pkin(7) + t1049) * qJD(1) + (-qJD(3) + t868 + (rSges(7,3) - t587) * qJD(2)) * t589 + (qJD(2) * t1127 - qJD(6)) * t592) * t590) * t35 + (t856 + t1099 + ((qJD(2) * t870 - t868) * t589 + t815 * qJD(1)) * t593 + (t778 - t1178) * t590 + t35 - t1110 - t1194) * t36) * m(7) + (-(-qJD(1) * t360 + t1117 - t121 + t689) * t122 + t66 * (t581 + t583) + t121 * t527 + t65 * t1100 + t122 * (t856 + t901) + (t122 * t1054 * t887 + t121 * (t1020 * t589 + t781) * qJD(1)) * t593 + (t66 * t781 + (-qJD(3) * t121 + t1020 * t66) * t589 + t121 * (t1020 * t592 + t1041) * qJD(2) + (t121 * (-rSges(4,2) - pkin(7)) + t122 * (-pkin(1) + t903)) * qJD(1)) * t590) * m(4) + (t120 * (t590 * t835 + t583 + t898) + t119 * t920 + t162 * (t567 + t900) + (t505 * t978 - t976) * qJD(2) + ((-pkin(1) - t771) * t977 + (t161 * (-rSges(3,3) - pkin(7)) + t162 * t835) * t590) * qJD(1) - (-qJD(1) * t361 - t161 - t480 - t840) * t162) * m(3) + ((((t329 + t972) * t593 + t1173 + t1261 + t1278) * t593 + (-t1130 + (-t325 + t722) * t590 - t1155 + t1174) * t590) * qJD(2) + t1193) * t822 + t1184 * t1062 + (t1183 + t1137) * t1061 + (t21 * (t583 + t768) + t63 * (t525 - t769 + t854) + t22 * (t748 + t216 + t450) + t64 * (t528 + t856 + t954) + (-t21 * qJ(4) - t63 * qJD(4) + t786 * t887 + (-t64 * qJ(4) + (t592 * t853 - t1050 + t818) * t63) * qJD(1)) * t593 + (-t21 * pkin(1) - pkin(7) * t1133 - t22 * qJ(4) + t64 * (-qJD(4) - t1178) + (t63 * (rSges(6,3) * qJD(2) - qJD(3)) + t1169 * t1045) * t589 + (qJD(2) * t1045 * t63 + qJD(1) * t786 + t21 * t853) * t592) * t590 - (t1110 + t1148 - t63) * t64) * m(6) + t1089 + (t1159 + t1160) * t886 / 0.2e1 + (t1158 - t1161 + t1162) * t823 + ((t1151 - t1235) * t590 + (t1152 + t1234) * t593) * t873 / 0.2e1 + t1024 / 0.2e1 + t1025 / 0.2e1 + t1137 * t1060 + (-qJD(2) * t1271 + t1265 * t589 - t1266 * t592) * qJD(1) + t1030 / 0.2e1 + t1125 * t1064 + t1126 * t1065 + ((-t1170 * t591 - t1171 * t588) * t592 - t1211 * t589 + t1213) * t459 * t1059 + ((t1019 * t590 - t1038 * t593 + t549 + t748) * t54 + (t547 + t583 + t1019 * t593 + (t1021 * t589 - pkin(1) + t1088) * t590) * t55 + (t854 + (-qJD(4) + (t703 + (rSges(5,2) + t1066) * t592) * qJD(1)) * t593 + (-t569 + (t1021 * t592 - t1039) * qJD(2) + (rSges(5,3) - pkin(7)) * qJD(1)) * t590) * t94 + (-t667 - t683 + t94 + t1097 + t855 + t856 + (qJD(1) * t1019 + t1066 * t887) * t593 + (-qJD(4) + (t703 + t1088) * qJD(1)) * t590) * t95) * m(5) + t1022 / 0.2e1 + t1023 / 0.2e1 - t1033 / 0.2e1 - t1031 / 0.2e1 + t1032 / 0.2e1; (t63 * t857 + t8 * t694 + (t1169 * t713 + t8 * t216 + t63 * t687) * t593 + (-t1133 * t640 + t8 * t212 + t22 * t713 + t64 * t687) * t590 - t63 * (-t294 * t554 - t358 * t460 + t661) - t64 * (-pkin(3) * t851 + t296 * t554 - t358 * t459 + t862) - ((-t212 * t63 + t216 * t64) * t592 + t615 * t589) * qJD(5) - (t63 * t699 + t64 * t701) * qJD(2) + (t643 + (qJD(1) * t212 + t109) * t593 + (t111 + (-t216 - t859) * qJD(1)) * t590 - t294 * t459 - t296 * t460 - t749 + t798 * qJD(2)) * t56) * m(6) + (-(t161 * t438 - t976) * qJD(1) - (t151 * (-t438 * t590 - t445 * t593) + t734 * t771) * qJD(2) + 0.2e1 * t151 * (t245 * t593 + t248 * t590 + (t361 * t593 - t366 * t590) * qJD(1)) + t734 * t472 + (-t119 * t590 - t120 * t593 + (-t162 * t593 + t978) * qJD(1)) * t505) * m(3) + (-t121 * (qJD(1) * t437 + t807) - t122 * (-qJD(1) * t444 + t916) - t118 * t864 - ((-t118 * t444 + t121 * t903) * t593 + (-t118 * t437 + t122 * t903) * t590) * qJD(2) + t121 * t453 + t37 * t919 + t118 * t865 + (t66 * t904 + t121 * t918 + t37 * t365 + t118 * t244 + (t118 * t360 + t122 * t904) * qJD(1)) * t593 + (t65 * t904 + t122 * t918 + t37 * t360 + t118 * t247 + (t118 * t921 + t121 * t504) * qJD(1)) * t590) * m(4) - ((t1192 * t589 - t1220 * t592) * qJD(2) + (t1187 * t589 + t1188 * t592) * qJD(1)) * qJD(1) / 0.2e1 + (t1159 * qJD(1) + t1146 + (t1156 * t888 + (t1157 * qJD(1) + t1149 * t590 - t1197) * t590) * t1147) * t590 / 0.2e1 - (t1158 * qJD(1) + t1145 + ((qJD(1) * t1268 + t1197) * t593 + (qJD(1) * t1269 - t1149 * t593) * t590) * t1147) * t593 / 0.2e1 + ((t1126 * t592 - t1216 * t962) * qJD(5) + ((-qJD(5) * t1217 + t1109) * t589 + t1114) * t590 + (t1118 * t408 - t1119 * t407) * t554 + (-t1121 * t408 + t1123 * t407) * t460 + (t1120 * t408 - t1122 * t407) * t459) * t1060 + ((t1125 * t592 - t1215 * t963) * qJD(5) + ((-qJD(5) * t1214 + t1109) * t589 + t1114) * t593 + (t1118 * t410 + t1119 * t409) * t554 + (-t1121 * t410 - t1123 * t409) * t460 + (t1120 * t410 + t1122 * t409) * t459) * t1063 + (t29 * t801 + (t29 * t364 + t55 * t790) * t593 + (t29 * t359 + t54 * t790) * t590 + (t707 * t590 - t916 + (pkin(3) * t962 + t593 * t790 - t447) * qJD(1)) * t95 + (t707 * t593 - t1226 + t912) * t94 - (t590 * t95 + t593 * t94) * qJD(2) * (-t503 + t816) + (-t864 - (t440 * t590 + t447 * t593 - t798) * qJD(2) + t697 + (t243 + t1097) * t593 + (qJD(1) * t863 + t246) * t590) * t91) * m(5) + (t1161 * t593 + t1160 * t590 + (t1151 * t590 + t1152 * t593) * qJD(1)) * qJD(1) / 0.2e1 + (t1137 + t1162 + t1191) * t827 + (t1138 + t1163 + t1190) * t890 / 0.2e1 + (((-t1118 * t591 + t1119 * t588 - t1208) * t554 + (t1121 * t591 - t1123 * t588 - t1211) * t460 + (-t1120 * t591 + t1122 * t588 + t1249) * t459 + t1124 * qJD(5)) * t592 + (-qJD(5) * t1108 + t1209) * t589) * t1059 + (qJD(1) * t1106 + t1143 * t590 - t1144 * t593) * t1062 + t1103 * t1065 + t1105 * t1064 + t1107 * t782 + (qJD(1) * t1108 + t1139 * t590 - t1140 * t593) * t1058 + (qJD(1) * t1104 + t1141 * t590 - t1142 * t593) * t1061 - t1136 * t878 / 0.2e1 + ((-t1086 * t886 - t1083) * t590 + ((t1087 * t590 + t1085) * qJD(2) + t1084) * t593) * t826 + ((-t1087 * t884 + t1083) * t593 + ((t1086 * t593 + t1085) * qJD(2) + t1084) * t590) * t822 + (t35 * t857 + t5 * t694 + t34 * t643 + (t6 * t688 + t35 * t660 + (t36 * t688 - t1134) * qJD(1) + t1072) * t593 + (t7 * t688 + t36 * t660 + (-t814 + t34 * (-t859 - t942)) * qJD(1) + t658) * t590 - t35 * t661 - t36 * t862 - t34 * (t749 + t877) - (-t35 * t941 + t36 * t940) * t554 - (-t1168 * t35 + t34 * t940) * t460 - (-t1168 * t36 + t34 * t941) * t459 - t650 * t878 - (t35 * t699 + t36 * t701) * qJD(2) - ((-t35 * t593 - t36 * t590) * qJD(6) + (-t897 * t981 - t866) * pkin(3) + t603 * qJD(5)) * t589) * m(7) + (t1137 * t593 + t1138 * t590) * t879 / 0.2e1; -m(4) * (t118 * t402 + t121 * t404 + t122 * t403) - m(5) * (t402 * t91 + t403 * t95 + t404 * t94) - m(6) * (t402 * t56 + t403 * t64 + t404 * t63) - m(7) * (t34 * t402 + t35 * t404 + t36 * t403) + 0.2e1 * ((t121 * t884 + t122 * t886 - t37) * t1071 + (t884 * t94 + t886 * t95 - t29) * t1070 + (t63 * t884 + t64 * t886 - t8) * t1069 + t651 * t1067) * t592 + 0.2e1 * ((qJD(2) * t118 - t121 * t890 + t122 * t888 + t590 * t65 + t593 * t66) * t1071 + (qJD(2) * t91 + t54 * t590 + t55 * t593 + t888 * t95 - t890 * t94) * t1070 + (qJD(2) * t56 + t21 * t593 + t22 * t590 - t63 * t890 + t64 * t888) * t1069 + t605) * t589; m(5) * (t54 * t593 - t55 * t590) + m(6) * t763 + m(7) * (-t590 * t6 + t593 * t7); t1145 * t959 / 0.2e1 + t1146 * t957 / 0.2e1 + t1136 * t824 + (t1108 * t592 + t1124 * t589) * t782 + (t1104 * t592 + t1126 * t589) * t1065 + (t1106 * t592 + t1125 * t589) * t1064 + (t1111 * t593 + t1112 * t410 - t1219 * t409) * t1063 + ((-qJD(1) * t1105 + qJD(2) * t1125 + t1143 * t593 + t1144 * t590) * t592 + (-qJD(2) * t1106 + t1184) * t589) * t1062 + ((-qJD(1) * t1103 + qJD(2) * t1126 + t1141 * t593 + t1142 * t590) * t592 + (-qJD(2) * t1104 + t1183) * t589) * t1061 + (t1111 * t590 + t1112 * t408 + t1219 * t407) * t1060 + ((-t1112 * t591 - t1219 * t588) * t592 + t1205 * t589) * t1059 + ((-qJD(1) * t1107 + qJD(2) * t1124 + t1139 * t593 + t1140 * t590) * t592 + (-qJD(2) * t1108 + t1218) * t589) * t1058 + (t1024 + t1025 + t1032 - t1033 + t1022 + t1023 + t1030 - t1031 + t1089) * t589 / 0.2e1 + ((qJD(2) * t603 - t1017 * t35 + t1018 * t36 + t6 * t943 + t7 * t942) * t589 + (t650 * qJD(2) + (qJD(1) * t1164 + t1167 * t7 - t36 * t953 + t658) * t593 + (qJD(1) * t649 - t1167 * t6 + t35 * t953 - t1072) * t590) * t592 - (-t35 * t939 + t36 * t938) * t554 - (t34 * t938 + t35 * t791) * t460 - (t34 * t939 + t36 * t791) * t459) * m(7) + ((qJD(2) * t615 + t109 * t64 - t111 * t63 - t21 * t212 + t216 * t22) * t589 + (t63 * (-qJD(2) * t212 + t242 * t590) + t64 * (qJD(2) * t216 - t242 * t593) + t8 * t729 + t56 * (-t109 * t590 + t111 * t593 - t212 * t890 - t216 * t888) - ((t590 * t64 + t593 * t63) * qJD(1) - t763) * t640) * t592 - t63 * (-t269 * t554 - t442 * t460) - t64 * (t271 * t554 - t442 * t459) - t56 * (t269 * t459 + t271 * t460)) * m(6) + t1137 * (t589 * t823 - t850 / 0.2e1) + t1138 * (t589 * t826 + t592 * t827); 0.2e1 * (-t35 * t460 - t36 * t459 + t651) * t1068 * t589 + 0.2e1 * (t605 + (t34 * (t459 * t590 + t460 * t593) + (-t35 * t590 + t36 * t593) * t554) * t1068) * t592;];
tauc  = t1(:);
