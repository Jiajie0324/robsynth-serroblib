% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPPRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 09:17
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPPRP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RRPPRP3_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 09:17:13
% EndTime: 2019-05-06 09:17:16
% DurationCPUTime: 3.29s
% Computational Cost: add. (5882->261), mult. (12621->226), div. (0->0), fcn. (6817->6), ass. (0->137)
t1554 = sin(qJ(2));
t1557 = cos(qJ(2));
t1560 = qJD(1) ^ 2;
t1572 = t1557 * t1560 * t1554;
t1523 = qJDD(2) + t1572;
t1524 = -qJDD(2) + t1572;
t1547 = t1554 ^ 2;
t1559 = qJD(2) ^ 2;
t1528 = t1547 * t1560 + t1559;
t1494 = t1557 * t1524 + t1554 * t1528;
t1589 = qJD(2) * t1557;
t1538 = qJD(1) * t1589;
t1575 = t1554 * qJDD(1);
t1514 = 0.2e1 * t1538 + t1575;
t1555 = sin(qJ(1));
t1558 = cos(qJ(1));
t1602 = t1555 * t1494 - t1558 * t1514;
t1601 = t1558 * t1494 + t1555 * t1514;
t1548 = t1557 ^ 2;
t1586 = t1548 * t1560;
t1529 = t1559 + t1586;
t1496 = t1554 * t1523 + t1557 * t1529;
t1585 = t1554 * qJD(1);
t1537 = qJD(2) * t1585;
t1574 = t1557 * qJDD(1);
t1517 = -0.2e1 * t1537 + t1574;
t1600 = t1555 * t1496 - t1558 * t1517;
t1599 = t1558 * t1496 + t1555 * t1517;
t1531 = qJD(5) + t1585;
t1598 = qJD(5) + t1531;
t1553 = sin(qJ(5));
t1556 = cos(qJ(5));
t1590 = qJD(1) * t1557;
t1509 = -t1556 * qJD(2) + t1553 * t1590;
t1507 = t1509 ^ 2;
t1510 = t1553 * qJD(2) + t1556 * t1590;
t1597 = t1510 ^ 2;
t1596 = t1531 ^ 2;
t1595 = 2 * qJD(3);
t1594 = 2 * qJD(6);
t1593 = pkin(4) + qJ(3);
t1516 = -t1537 + t1574;
t1592 = t1516 * pkin(2);
t1591 = t1557 * g(3);
t1588 = qJDD(2) * qJ(3);
t1587 = t1509 * t1510;
t1526 = -t1558 * g(1) - t1555 * g(2);
t1505 = -t1560 * pkin(1) + qJDD(1) * pkin(7) + t1526;
t1584 = t1554 * t1505;
t1579 = -qJD(2) * pkin(3) - qJ(4) * t1585 + t1595;
t1512 = (-pkin(2) * t1557 - qJ(3) * t1554) * qJD(1);
t1578 = -(2 * qJD(4)) + t1512;
t1577 = qJD(5) - t1531;
t1515 = t1538 + t1575;
t1525 = t1555 * g(1) - t1558 * g(2);
t1504 = qJDD(1) * pkin(1) + t1560 * pkin(7) + t1525;
t1564 = -pkin(2) * t1537 + t1504;
t1562 = t1516 * pkin(3) - qJ(4) * t1586 + qJDD(4) + t1564;
t1570 = t1579 * t1554;
t1451 = (pkin(2) + pkin(8)) * t1516 + t1593 * t1515 + (t1570 + (-pkin(8) * t1554 + t1593 * t1557) * qJD(2)) * qJD(1) + t1562;
t1513 = (pkin(4) * t1554 + pkin(8) * t1557) * qJD(1);
t1565 = -qJDD(2) * pkin(2) - t1559 * qJ(3) + qJDD(3) + t1591;
t1563 = -pkin(3) * t1523 - t1515 * qJ(4) + t1565 + t1584;
t1573 = qJ(4) * t1589;
t1456 = -t1559 * pkin(4) - qJDD(2) * pkin(8) + (t1573 + (-t1513 + t1578) * t1554) * qJD(1) + t1563;
t1435 = t1553 * t1451 + t1556 * t1456;
t1500 = -t1554 * g(3) + t1557 * t1505;
t1576 = t1547 + t1548;
t1571 = -t1559 * pkin(2) + t1500;
t1569 = t1556 * t1451 - t1553 * t1456;
t1568 = t1553 * qJDD(2) + t1556 * t1516;
t1567 = -qJDD(5) - t1515;
t1518 = t1576 * qJDD(1);
t1521 = t1576 * t1560;
t1489 = t1558 * t1518 - t1555 * t1521;
t1488 = t1555 * t1518 + t1558 * t1521;
t1493 = t1557 * t1523 - t1554 * t1529;
t1490 = t1554 * t1524 - t1557 * t1528;
t1566 = t1556 * qJDD(2) - t1553 * t1516;
t1482 = -t1567 - t1587;
t1471 = -t1577 * t1509 + t1568;
t1561 = -pkin(3) * t1586 - t1516 * qJ(4) + t1579 * qJD(2) + t1578 * t1590 + t1571;
t1455 = -t1559 * pkin(8) + t1593 * qJDD(2) - t1513 * t1590 + t1561;
t1520 = -t1555 * qJDD(1) - t1558 * t1560;
t1519 = t1558 * qJDD(1) - t1555 * t1560;
t1499 = -t1584 - t1591;
t1498 = t1531 * pkin(5) + t1510 * qJ(6);
t1487 = -t1596 - t1597;
t1485 = -t1596 - t1507;
t1484 = t1510 * qJD(5) - t1566;
t1483 = t1567 - t1587;
t1481 = -t1507 - t1597;
t1475 = (qJD(1) * t1512 + t1505) * t1554 + t1565;
t1474 = qJD(2) * t1595 + t1512 * t1590 + t1571 + t1588;
t1473 = -t1554 * t1499 + t1557 * t1500;
t1472 = t1557 * t1499 + t1554 * t1500;
t1470 = t1509 * t1598 - t1568;
t1469 = t1577 * t1510 - t1566;
t1468 = -t1510 * t1598 + t1566;
t1466 = t1585 * t1595 + t1592 + (t1515 + t1538) * qJ(3) + t1564;
t1465 = t1556 * t1483 - t1553 * t1487;
t1464 = t1553 * t1483 + t1556 * t1487;
t1463 = -t1553 * t1482 + t1556 * t1485;
t1462 = t1556 * t1482 + t1553 * t1485;
t1461 = (t1578 * t1554 + t1573) * qJD(1) + t1563;
t1460 = t1561 + t1588;
t1459 = t1592 + t1515 * qJ(3) + (qJ(3) * t1589 + t1570) * qJD(1) + t1562;
t1458 = t1557 * t1474 + t1554 * t1475;
t1457 = t1554 * t1474 - t1557 * t1475;
t1453 = t1556 * t1469 - t1553 * t1471;
t1452 = t1553 * t1469 + t1556 * t1471;
t1450 = t1554 * t1465 + t1557 * t1470;
t1449 = -t1557 * t1465 + t1554 * t1470;
t1446 = t1554 * t1463 + t1557 * t1468;
t1445 = -t1557 * t1463 + t1554 * t1468;
t1444 = t1554 * t1453 + t1557 * t1481;
t1443 = -t1557 * t1453 + t1554 * t1481;
t1442 = t1557 * t1460 + t1554 * t1461;
t1441 = t1554 * t1460 - t1557 * t1461;
t1440 = -t1484 * pkin(5) - t1507 * qJ(6) - t1510 * t1498 + qJDD(6) + t1455;
t1439 = t1558 * t1450 - t1555 * t1464;
t1438 = t1555 * t1450 + t1558 * t1464;
t1437 = t1558 * t1446 - t1555 * t1462;
t1436 = t1555 * t1446 + t1558 * t1462;
t1433 = t1558 * t1444 - t1555 * t1452;
t1432 = t1555 * t1444 + t1558 * t1452;
t1431 = -t1507 * pkin(5) + t1484 * qJ(6) - t1531 * t1498 + t1509 * t1594 + t1435;
t1430 = t1482 * pkin(5) + t1471 * qJ(6) + t1510 * t1594 + t1569;
t1428 = t1556 * t1435 - t1553 * t1569;
t1427 = t1553 * t1435 + t1556 * t1569;
t1426 = t1554 * t1428 + t1557 * t1455;
t1425 = -t1557 * t1428 + t1554 * t1455;
t1424 = -t1553 * t1430 + t1556 * t1431;
t1423 = t1556 * t1430 + t1553 * t1431;
t1422 = t1554 * t1424 + t1557 * t1440;
t1421 = -t1557 * t1424 + t1554 * t1440;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1520, -t1519, 0, -t1555 * t1525 + t1558 * t1526, 0, 0, 0, 0, 0, 0, -t1599, t1601, t1489, t1558 * t1473 - t1555 * t1504, 0, 0, 0, 0, 0, 0, -t1599, t1489, -t1601, t1558 * t1458 - t1555 * t1466, 0, 0, 0, 0, 0, 0, -t1601, t1599, -t1489, t1558 * t1442 - t1555 * t1459, 0, 0, 0, 0, 0, 0, t1437, t1439, t1433, t1558 * t1426 - t1555 * t1427, 0, 0, 0, 0, 0, 0, t1437, t1439, t1433, t1558 * t1422 - t1555 * t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1519, t1520, 0, t1558 * t1525 + t1555 * t1526, 0, 0, 0, 0, 0, 0, -t1600, t1602, t1488, t1555 * t1473 + t1558 * t1504, 0, 0, 0, 0, 0, 0, -t1600, t1488, -t1602, t1555 * t1458 + t1558 * t1466, 0, 0, 0, 0, 0, 0, -t1602, t1600, -t1488, t1555 * t1442 + t1558 * t1459, 0, 0, 0, 0, 0, 0, t1436, t1438, t1432, t1555 * t1426 + t1558 * t1427, 0, 0, 0, 0, 0, 0, t1436, t1438, t1432, t1555 * t1422 + t1558 * t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1493, t1490, 0, t1472, 0, 0, 0, 0, 0, 0, t1493, 0, -t1490, t1457, 0, 0, 0, 0, 0, 0, -t1490, -t1493, 0, t1441, 0, 0, 0, 0, 0, 0, t1445, t1449, t1443, t1425, 0, 0, 0, 0, 0, 0, t1445, t1449, t1443, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1560, -qJDD(1), 0, t1526, 0, 0, 0, 0, 0, 0, -t1496, t1494, t1518, t1473, 0, 0, 0, 0, 0, 0, -t1496, t1518, -t1494, t1458, 0, 0, 0, 0, 0, 0, -t1494, t1496, -t1518, t1442, 0, 0, 0, 0, 0, 0, t1446, t1450, t1444, t1426, 0, 0, 0, 0, 0, 0, t1446, t1450, t1444, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1560, 0, t1525, 0, 0, 0, 0, 0, 0, t1517, -t1514, t1521, t1504, 0, 0, 0, 0, 0, 0, t1517, t1521, t1514, t1466, 0, 0, 0, 0, 0, 0, t1514, -t1517, -t1521, t1459, 0, 0, 0, 0, 0, 0, t1462, t1464, t1452, t1427, 0, 0, 0, 0, 0, 0, t1462, t1464, t1452, t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1493, t1490, 0, t1472, 0, 0, 0, 0, 0, 0, t1493, 0, -t1490, t1457, 0, 0, 0, 0, 0, 0, -t1490, -t1493, 0, t1441, 0, 0, 0, 0, 0, 0, t1445, t1449, t1443, t1425, 0, 0, 0, 0, 0, 0, t1445, t1449, t1443, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1529, t1524, t1574, t1500, 0, 0, 0, 0, 0, 0, -t1529, t1574, -t1524, t1474, 0, 0, 0, 0, 0, 0, -t1524, t1529, -t1574, t1460, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1455, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1523, -t1528, -t1575, t1499, 0, 0, 0, 0, 0, 0, t1523, -t1575, t1528, -t1475, 0, 0, 0, 0, 0, 0, t1528, -t1523, t1575, -t1461, 0, 0, 0, 0, 0, 0, -t1463, -t1465, -t1453, -t1428, 0, 0, 0, 0, 0, 0, -t1463, -t1465, -t1453, -t1424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1517, t1514, -t1521, -t1504, 0, 0, 0, 0, 0, 0, -t1517, -t1521, -t1514, -t1466, 0, 0, 0, 0, 0, 0, -t1514, t1517, t1521, -t1459, 0, 0, 0, 0, 0, 0, -t1462, -t1464, -t1452, -t1427, 0, 0, 0, 0, 0, 0, -t1462, -t1464, -t1452, -t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1529, t1574, -t1524, t1474, 0, 0, 0, 0, 0, 0, -t1524, t1529, -t1574, t1460, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1455, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1517, -t1521, -t1514, -t1466, 0, 0, 0, 0, 0, 0, -t1514, t1517, t1521, -t1459, 0, 0, 0, 0, 0, 0, -t1462, -t1464, -t1452, -t1427, 0, 0, 0, 0, 0, 0, -t1462, -t1464, -t1452, -t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1523, t1575, -t1528, t1475, 0, 0, 0, 0, 0, 0, -t1528, t1523, -t1575, t1461, 0, 0, 0, 0, 0, 0, t1463, t1465, t1453, t1428, 0, 0, 0, 0, 0, 0, t1463, t1465, t1453, t1424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1528, t1523, -t1575, t1461, 0, 0, 0, 0, 0, 0, t1463, t1465, t1453, t1428, 0, 0, 0, 0, 0, 0, t1463, t1465, t1453, t1424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, -t1529, t1574, -t1460, 0, 0, 0, 0, 0, 0, -t1468, -t1470, -t1481, -t1455, 0, 0, 0, 0, 0, 0, -t1468, -t1470, -t1481, -t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1514, -t1517, -t1521, t1459, 0, 0, 0, 0, 0, 0, t1462, t1464, t1452, t1427, 0, 0, 0, 0, 0, 0, t1462, t1464, t1452, t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1485, t1483, t1469, t1435, 0, 0, 0, 0, 0, 0, t1485, t1483, t1469, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1482, t1487, t1471, t1569, 0, 0, 0, 0, 0, 0, t1482, t1487, t1471, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1455, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1485, t1483, t1469, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1482, t1487, t1471, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1468, t1470, t1481, t1440;];
f_new_reg  = t1;
