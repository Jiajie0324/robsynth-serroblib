% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 09:02
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRRRR3_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR3_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR3_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR3_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR3_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR3_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 08:57:40
% EndTime: 2019-05-08 08:58:35
% DurationCPUTime: 17.74s
% Computational Cost: add. (192215->682), mult. (383140->980), div. (0->0), fcn. (289807->12), ass. (0->440)
t413 = sin(qJ(6));
t417 = sin(qJ(2));
t421 = cos(qJ(3));
t416 = sin(qJ(3));
t422 = cos(qJ(2));
t489 = t416 * t422;
t391 = (t417 * t421 + t489) * qJD(1);
t415 = sin(qJ(4));
t420 = cos(qJ(4));
t482 = qJD(2) + qJD(3);
t373 = t391 * t415 - t420 * t482;
t374 = t391 * t420 + t415 * t482;
t414 = sin(qJ(5));
t419 = cos(qJ(5));
t342 = t373 * t419 + t374 * t414;
t344 = -t373 * t414 + t374 * t419;
t418 = cos(qJ(6));
t303 = t342 * t418 + t344 * t413;
t305 = -t342 * t413 + t344 * t418;
t248 = t305 * t303;
t406 = t417 * qJDD(1);
t483 = qJD(1) * qJD(2);
t465 = t422 * t483;
t396 = t406 + t465;
t407 = t422 * qJDD(1);
t466 = t417 * t483;
t397 = t407 - t466;
t457 = t416 * t396 - t397 * t421;
t353 = -t391 * qJD(3) - t457;
t352 = qJDD(4) - t353;
t351 = qJDD(5) + t352;
t349 = qJDD(6) + t351;
t533 = -t248 + t349;
t542 = t413 * t533;
t307 = t344 * t342;
t532 = -t307 + t351;
t541 = t414 * t532;
t348 = t374 * t373;
t530 = -t348 + t352;
t540 = t415 * t530;
t484 = qJD(1) * t417;
t389 = -qJD(1) * t421 * t422 + t416 * t484;
t367 = t391 * t389;
t480 = qJDD(2) + qJDD(3);
t529 = -t367 + t480;
t539 = t416 * t529;
t538 = t418 * t533;
t537 = t419 * t532;
t536 = t420 * t530;
t535 = t421 * t529;
t479 = t482 ^ 2;
t441 = t421 * t396 + t416 * t397;
t354 = -t389 * qJD(3) + t441;
t432 = -t420 * t354 - t415 * t480;
t319 = -t373 * qJD(4) - t432;
t435 = -qJD(4) * t374 - t354 * t415 + t420 * t480;
t459 = t414 * t319 - t419 * t435;
t251 = -qJD(5) * t344 - t459;
t252 = -qJD(5) * t342 + t319 * t419 + t414 * t435;
t171 = -qJD(6) * t303 + t251 * t413 + t252 * t418;
t386 = qJD(4) + t389;
t384 = qJD(5) + t386;
t381 = qJD(6) + t384;
t284 = t381 * t303;
t534 = t171 - t284;
t382 = t482 * t389;
t335 = t354 - t382;
t412 = t422 ^ 2;
t523 = sin(qJ(1));
t524 = cos(qJ(1));
t449 = g(1) * t523 - g(2) * t524;
t433 = qJDD(1) * pkin(1) + t449;
t526 = qJD(1) ^ 2;
t356 = (pkin(8) * t412 + pkin(7)) * t526 + t397 * pkin(2) - (qJD(2) * pkin(2) - pkin(8) * t484) * t484 + t433;
t455 = t482 * t391;
t257 = -t335 * pkin(9) + (-t353 + t455) * pkin(3) - t356;
t434 = g(1) * t524 + g(2) * t523;
t512 = qJDD(1) * pkin(7);
t427 = -t434 + t512;
t425 = -pkin(1) * t526 + t427;
t424 = t417 * t425;
t520 = t396 * pkin(8);
t444 = qJDD(2) * pkin(2) - t520;
t423 = qJD(2) ^ 2;
t517 = pkin(8) * qJD(2);
t519 = t417 * g(3);
t347 = t422 * t427 - t519 + t397 * pkin(8) - t423 * pkin(2) + (t417 * t517 + (-pkin(1) * t422 - pkin(2) * t412) * qJD(1)) * qJD(1);
t487 = t421 * t347;
t310 = t487 + t416 * (-t424 + t444) + (-g(3) + (pkin(2) * t484 + t517) * qJD(1)) * t489;
t365 = pkin(3) * t389 - pkin(9) * t391;
t268 = -pkin(3) * t479 + pkin(9) * t480 - t389 * t365 + t310;
t202 = -t257 * t420 + t415 * t268;
t203 = t257 * t415 + t268 * t420;
t154 = t202 * t415 + t203 * t420;
t327 = t384 * t342;
t531 = -t327 + t252;
t222 = t327 + t252;
t360 = t386 * t373;
t299 = t360 + t319;
t301 = t303 ^ 2;
t302 = t305 ^ 2;
t528 = t342 ^ 2;
t341 = t344 ^ 2;
t527 = t373 ^ 2;
t371 = t374 ^ 2;
t380 = t381 ^ 2;
t383 = t384 ^ 2;
t385 = t386 ^ 2;
t387 = t389 ^ 2;
t388 = t391 ^ 2;
t174 = pkin(4) * t530 - pkin(10) * t299 - t202;
t357 = pkin(4) * t386 - pkin(10) * t374;
t185 = -pkin(4) * t527 + pkin(10) * t435 - t357 * t386 + t203;
t119 = -t174 * t419 + t414 * t185;
t120 = t174 * t414 + t185 * t419;
t78 = -t119 * t419 + t120 * t414;
t525 = pkin(4) * t78;
t522 = pkin(3) * t416;
t430 = (-qJD(5) + t384) * t344 - t459;
t163 = -t222 * t419 + t414 * t430;
t521 = pkin(4) * t163;
t518 = t422 * g(3);
t94 = pkin(5) * t532 - pkin(11) * t222 - t119;
t321 = pkin(5) * t384 - pkin(11) * t344;
t95 = -pkin(5) * t528 + pkin(11) * t251 - t321 * t384 + t120;
t54 = t413 * t95 - t418 * t94;
t55 = t413 * t94 + t418 * t95;
t33 = t413 * t55 - t418 * t54;
t516 = t33 * t414;
t515 = t33 * t419;
t514 = t415 * t78;
t513 = t420 * t78;
t309 = t347 * t416 - t421 * (-t417 * t427 - t518 + (t422 * t517 + (pkin(2) * t422 + pkin(1)) * t484) * qJD(1) + t444);
t267 = -pkin(3) * t480 - pkin(9) * t479 + t365 * t391 + t309;
t205 = -pkin(4) * t435 - pkin(10) * t527 + t357 * t374 + t267;
t139 = -pkin(5) * t251 - pkin(11) * t528 + t321 * t344 + t205;
t511 = t139 * t413;
t510 = t139 * t418;
t509 = t205 * t414;
t508 = t205 * t419;
t231 = t248 + t349;
t507 = t231 * t413;
t506 = t231 * t418;
t253 = -t309 * t421 + t310 * t416;
t505 = t253 * t417;
t273 = t307 + t351;
t504 = t273 * t414;
t503 = t273 * t419;
t312 = t348 + t352;
t502 = t312 * t415;
t501 = t312 * t420;
t500 = t356 * t416;
t499 = t356 * t421;
t362 = t367 + t480;
t498 = t362 * t416;
t497 = t362 * t421;
t496 = t381 * t413;
t495 = t381 * t418;
t494 = t384 * t414;
t493 = t384 * t419;
t492 = t386 * t374;
t491 = t386 * t415;
t490 = t386 * t420;
t263 = t415 * t267;
t402 = t422 * t526 * t417;
t399 = qJDD(2) + t402;
t488 = t417 * t399;
t264 = t420 * t267;
t486 = t422 * (qJDD(2) - t402);
t485 = -pkin(3) * t267 + pkin(9) * t154;
t481 = 0.2e1 * qJD(3) + qJD(2);
t478 = t416 * t248;
t477 = t421 * t248;
t476 = t416 * t307;
t475 = t421 * t307;
t474 = t416 * t348;
t473 = t421 * t348;
t339 = -t371 - t385;
t271 = -t339 * t415 - t501;
t300 = (qJD(4) + t386) * t373 + t432;
t472 = pkin(3) * t300 + pkin(9) * t271 + t263;
t329 = -t385 - t527;
t261 = t329 * t420 - t540;
t296 = t435 - t492;
t471 = pkin(3) * t296 + pkin(9) * t261 - t264;
t470 = -pkin(3) * t421 - pkin(2);
t34 = t413 * t54 + t418 * t55;
t17 = t34 * t414 + t515;
t32 = pkin(5) * t33;
t469 = pkin(4) * t17 + t32;
t150 = t171 + t284;
t460 = -t251 * t418 + t413 * t252;
t431 = (-qJD(6) + t381) * t305 - t460;
t102 = -t150 * t418 + t413 * t431;
t100 = pkin(5) * t102;
t104 = t150 * t413 + t418 * t431;
t65 = t102 * t419 + t104 * t414;
t467 = pkin(4) * t65 + t100;
t18 = t34 * t419 - t516;
t12 = -t17 * t415 + t18 * t420;
t27 = -pkin(5) * t139 + pkin(11) * t34;
t5 = -pkin(4) * t139 + pkin(10) * t18 - pkin(11) * t516 + t27 * t419;
t9 = -pkin(10) * t17 - pkin(11) * t515 - t27 * t414;
t464 = -pkin(3) * t139 + pkin(9) * t12 + t415 * t9 + t420 * t5;
t199 = -t301 - t302;
t23 = -pkin(5) * t199 + pkin(11) * t104 + t34;
t24 = -pkin(11) * t102 - t33;
t67 = -t102 * t414 + t104 * t419;
t14 = -pkin(4) * t199 + pkin(10) * t67 + t23 * t419 + t24 * t414;
t16 = -pkin(10) * t65 - t23 * t414 + t24 * t419;
t39 = -t415 * t65 + t420 * t67;
t463 = -pkin(3) * t199 + pkin(9) * t39 + t14 * t420 + t16 * t415;
t146 = (qJD(6) + t381) * t305 + t460;
t237 = -t380 - t301;
t178 = t237 * t413 + t538;
t107 = -pkin(11) * t178 + t511;
t179 = t237 * t418 - t542;
t117 = -t178 * t414 + t179 * t419;
t81 = -pkin(5) * t146 + pkin(11) * t179 - t510;
t41 = -pkin(4) * t146 + pkin(10) * t117 + t107 * t414 + t419 * t81;
t116 = t178 * t419 + t179 * t414;
t47 = -pkin(10) * t116 + t107 * t419 - t414 * t81;
t76 = -t116 * t415 + t117 * t420;
t462 = -pkin(3) * t146 + pkin(9) * t76 + t41 * t420 + t415 * t47;
t275 = -t302 - t380;
t192 = t275 * t418 - t507;
t113 = -pkin(11) * t192 + t510;
t193 = -t275 * t413 - t506;
t129 = -t192 * t414 + t193 * t419;
t83 = -pkin(5) * t534 + pkin(11) * t193 + t511;
t43 = -pkin(4) * t534 + pkin(10) * t129 + t113 * t414 + t419 * t83;
t128 = t192 * t419 + t193 * t414;
t52 = -pkin(10) * t128 + t113 * t419 - t414 * t83;
t88 = -t128 * t415 + t129 * t420;
t461 = -pkin(3) * t534 + pkin(9) * t88 + t415 * t52 + t420 * t43;
t79 = t119 * t414 + t120 * t419;
t254 = t309 * t416 + t310 * t421;
t376 = t424 + t518;
t377 = t422 * t425 - t519;
t458 = t417 * t376 + t377 * t422;
t165 = t222 * t414 + t419 * t430;
t112 = -t163 * t415 + t165 * t420;
t262 = -t341 - t528;
t57 = -pkin(4) * t262 + pkin(10) * t165 + t79;
t69 = -pkin(10) * t163 - t78;
t456 = -pkin(3) * t262 + pkin(9) * t112 + t415 * t69 + t420 * t57;
t218 = (qJD(5) + t384) * t344 + t459;
t288 = -t383 - t528;
t227 = t288 * t419 - t541;
t123 = -pkin(4) * t218 + pkin(10) * t227 - t508;
t226 = t288 * t414 + t537;
t156 = -pkin(10) * t226 + t509;
t169 = -t226 * t415 + t227 * t420;
t454 = -pkin(3) * t218 + pkin(9) * t169 + t123 * t420 + t156 * t415;
t314 = -t341 - t383;
t236 = -t314 * t414 - t503;
t125 = -pkin(4) * t531 + pkin(10) * t236 + t509;
t235 = t314 * t419 - t504;
t166 = -pkin(10) * t235 + t508;
t182 = -t235 * t415 + t236 * t420;
t453 = -pkin(3) * t531 + pkin(9) * t182 + t125 * t420 + t166 * t415;
t428 = t435 + t492;
t242 = t299 * t415 + t420 * t428;
t322 = t371 + t527;
t452 = pkin(3) * t322 + pkin(9) * t242 + t154;
t451 = pkin(4) * t235 - t120;
t450 = pkin(5) * t178 - t54;
t448 = t416 * t382;
t447 = t416 * t455;
t446 = t421 * t382;
t445 = t421 * t455;
t442 = -t202 * t420 + t203 * t415;
t440 = pkin(4) * t226 - t119;
t439 = pkin(5) * t192 - t55;
t50 = t420 * t79 - t514;
t73 = -pkin(4) * t205 + pkin(10) * t79;
t438 = -pkin(3) * t205 + pkin(9) * t50 - pkin(10) * t514 + t420 * t73;
t437 = qJD(2) * t391 - t457;
t436 = pkin(4) * t116 + t450;
t429 = pkin(4) * t128 + t439;
t411 = t417 ^ 2;
t409 = t412 * t526;
t408 = t411 * t526;
t398 = t407 - 0.2e1 * t466;
t395 = t406 + 0.2e1 * t465;
t392 = pkin(7) * t526 + t433;
t379 = t479 - t388;
t378 = t387 - t479;
t375 = -t388 - t479;
t366 = t388 - t387;
t361 = -t479 - t387;
t359 = -t371 + t385;
t358 = -t385 + t527;
t355 = -t387 - t388;
t346 = t371 - t527;
t337 = -t375 * t416 - t497;
t336 = t375 * t421 - t498;
t334 = t354 + t382;
t333 = -t389 * t481 + t441;
t330 = t391 * t481 + t457;
t326 = t361 * t421 - t539;
t325 = t361 * t416 + t535;
t324 = -t341 + t383;
t323 = -t383 + t528;
t316 = (-t373 * t420 + t374 * t415) * t386;
t315 = (-t373 * t415 - t374 * t420) * t386;
t306 = t341 - t528;
t298 = -t360 + t319;
t292 = t319 * t420 - t374 * t491;
t291 = t319 * t415 + t374 * t490;
t290 = t373 * t490 - t415 * t435;
t289 = t373 * t491 + t420 * t435;
t287 = t334 * t416 + t421 * t437;
t286 = -t334 * t421 + t416 * t437;
t283 = -t302 + t380;
t282 = t301 - t380;
t281 = t358 * t420 - t502;
t280 = -t359 * t415 + t536;
t279 = t358 * t415 + t501;
t278 = t359 * t420 + t540;
t277 = (-t342 * t419 + t344 * t414) * t384;
t276 = (-t342 * t414 - t344 * t419) * t384;
t270 = t339 * t420 - t502;
t260 = t329 * t415 + t536;
t247 = t302 - t301;
t246 = t323 * t419 - t504;
t245 = -t324 * t414 + t537;
t244 = t323 * t414 + t503;
t243 = t324 * t419 + t541;
t241 = t296 * t420 - t298 * t415;
t240 = -t299 * t420 + t415 * t428;
t239 = t296 * t415 + t298 * t420;
t234 = (-t303 * t418 + t305 * t413) * t381;
t233 = (-t303 * t413 - t305 * t418) * t381;
t229 = t271 * t421 - t300 * t416;
t228 = t271 * t416 + t300 * t421;
t225 = t261 * t421 - t296 * t416;
t224 = t261 * t416 + t296 * t421;
t215 = t252 * t419 - t344 * t494;
t214 = t252 * t414 + t344 * t493;
t213 = -t251 * t414 + t342 * t493;
t212 = t251 * t419 + t342 * t494;
t211 = -t276 * t415 + t277 * t420;
t210 = t276 * t420 + t277 * t415;
t209 = -pkin(9) * t270 + t264;
t208 = t242 * t421 - t322 * t416;
t207 = t242 * t416 + t322 * t421;
t206 = -pkin(9) * t260 + t263;
t197 = t282 * t418 - t507;
t196 = -t283 * t413 + t538;
t195 = t282 * t413 + t506;
t194 = t283 * t418 + t542;
t190 = -t244 * t415 + t246 * t420;
t189 = -t243 * t415 + t245 * t420;
t188 = t244 * t420 + t246 * t415;
t187 = t243 * t420 + t245 * t415;
t186 = -pkin(3) * t270 + t203;
t184 = -pkin(3) * t260 + t202;
t181 = t235 * t420 + t236 * t415;
t176 = -t233 * t414 + t234 * t419;
t175 = t233 * t419 + t234 * t414;
t170 = -qJD(6) * t305 - t460;
t168 = t226 * t420 + t227 * t415;
t164 = -t218 * t419 - t414 * t531;
t162 = -t218 * t414 + t419 * t531;
t160 = -t214 * t415 + t215 * t420;
t159 = -t212 * t415 + t213 * t420;
t158 = t214 * t420 + t215 * t415;
t157 = t212 * t420 + t213 * t415;
t143 = t171 * t418 - t305 * t496;
t142 = t171 * t413 + t305 * t495;
t141 = -t170 * t413 + t303 * t495;
t140 = t170 * t418 + t303 * t496;
t137 = t182 * t421 + t416 * t531;
t136 = t182 * t416 - t421 * t531;
t135 = -t195 * t414 + t197 * t419;
t134 = -t194 * t414 + t196 * t419;
t133 = t195 * t419 + t197 * t414;
t132 = t194 * t419 + t196 * t414;
t130 = t154 * t416 - t267 * t421;
t127 = t169 * t421 + t218 * t416;
t126 = t169 * t416 - t218 * t421;
t121 = -pkin(9) * t240 - t442;
t115 = -t175 * t415 + t176 * t420;
t114 = t175 * t420 + t176 * t415;
t111 = -t162 * t415 + t164 * t420;
t110 = t163 * t420 + t165 * t415;
t109 = t162 * t420 + t164 * t415;
t106 = t112 * t421 + t262 * t416;
t105 = t112 * t416 - t262 * t421;
t103 = -t146 * t418 - t413 * t534;
t101 = -t146 * t413 + t418 * t534;
t99 = -t142 * t414 + t143 * t419;
t98 = -t140 * t414 + t141 * t419;
t97 = t142 * t419 + t143 * t414;
t96 = t140 * t419 + t141 * t414;
t92 = -t133 * t415 + t135 * t420;
t91 = -t132 * t415 + t134 * t420;
t90 = t133 * t420 + t135 * t415;
t89 = t132 * t420 + t134 * t415;
t87 = t128 * t420 + t129 * t415;
t85 = -pkin(3) * t110 - t521;
t84 = -pkin(3) * t181 - t451;
t82 = -pkin(3) * t168 - t440;
t80 = -pkin(9) * t181 - t125 * t415 + t166 * t420;
t77 = -pkin(9) * t168 - t123 * t415 + t156 * t420;
t75 = t116 * t420 + t117 * t415;
t71 = t416 * t534 + t421 * t88;
t70 = t416 * t88 - t421 * t534;
t66 = -t101 * t414 + t103 * t419;
t64 = t101 * t419 + t103 * t414;
t63 = -t415 * t97 + t420 * t99;
t62 = -t415 * t96 + t420 * t98;
t61 = t415 * t99 + t420 * t97;
t60 = t415 * t98 + t420 * t96;
t59 = t146 * t416 + t421 * t76;
t58 = -t146 * t421 + t416 * t76;
t49 = t415 * t79 + t513;
t45 = t205 * t416 + t421 * t50;
t44 = -t205 * t421 + t416 * t50;
t38 = -t415 * t64 + t420 * t66;
t37 = t415 * t67 + t420 * t65;
t36 = t415 * t66 + t420 * t64;
t31 = t199 * t416 + t39 * t421;
t30 = -t199 * t421 + t39 * t416;
t29 = -pkin(3) * t87 - t429;
t28 = -pkin(3) * t49 - t525;
t26 = -pkin(3) * t75 - t436;
t25 = -pkin(9) * t110 - t415 * t57 + t420 * t69;
t22 = -pkin(9) * t49 - pkin(10) * t513 - t415 * t73;
t21 = -pkin(3) * t37 - t467;
t20 = -pkin(9) * t87 - t415 * t43 + t420 * t52;
t19 = -pkin(9) * t75 - t41 * t415 + t420 * t47;
t11 = t17 * t420 + t18 * t415;
t7 = t12 * t421 + t139 * t416;
t6 = t12 * t416 - t139 * t421;
t3 = -pkin(3) * t11 - t469;
t2 = -pkin(9) * t37 - t14 * t415 + t16 * t420;
t1 = -pkin(9) * t11 - t415 * t5 + t420 * t9;
t4 = [0, 0, 0, 0, 0, qJDD(1), t449, t434, 0, 0, (t396 + t465) * t417, t395 * t422 + t398 * t417, t488 + t422 * (-t408 + t423), (t397 - t466) * t422, t417 * (t409 - t423) + t486, 0, t422 * t392 + pkin(1) * t398 + pkin(7) * (t422 * (-t409 - t423) - t488), -t417 * t392 - pkin(1) * t395 + pkin(7) * (-t486 - t417 * (-t408 - t423)), pkin(1) * (t408 + t409) + (t411 + t412) * t512 + t458, pkin(1) * t392 + pkin(7) * t458, t417 * (t421 * t354 - t447) + t422 * (t416 * t354 + t445), t417 * (-t330 * t421 - t335 * t416) + t422 * (-t330 * t416 + t335 * t421), t417 * (-t379 * t416 + t535) + t422 * (t379 * t421 + t539), t417 * (-t416 * t353 + t446) + t422 * (t421 * t353 + t448), t417 * (t378 * t421 - t498) + t422 * (t378 * t416 + t497), t417 * (-t446 + t447) + t422 * (-t448 - t445), t417 * (-pkin(8) * t325 - t500) + t422 * (-pkin(2) * t330 + pkin(8) * t326 + t499) - pkin(1) * t330 + pkin(7) * (-t325 * t417 + t326 * t422), t417 * (-pkin(8) * t336 - t499) + t422 * (-pkin(2) * t333 + pkin(8) * t337 - t500) - pkin(1) * t333 + pkin(7) * (-t336 * t417 + t337 * t422), t417 * (-pkin(8) * t286 - t253) + t422 * (-pkin(2) * t355 + pkin(8) * t287 + t254) - pkin(1) * t355 + pkin(7) * (-t286 * t417 + t287 * t422), -pkin(8) * t505 + t422 * (pkin(2) * t356 + pkin(8) * t254) + pkin(1) * t356 + pkin(7) * (t254 * t422 - t505), t417 * (t292 * t421 + t474) + t422 * (t292 * t416 - t473), t417 * (t241 * t421 + t346 * t416) + t422 * (t241 * t416 - t346 * t421), t417 * (t280 * t421 + t299 * t416) + t422 * (t280 * t416 - t299 * t421), t417 * (t290 * t421 - t474) + t422 * (t290 * t416 + t473), t417 * (t281 * t421 + t416 * t428) + t422 * (t281 * t416 - t421 * t428), t417 * (t316 * t421 + t352 * t416) + t422 * (t316 * t416 - t352 * t421), t417 * (-pkin(8) * t224 - t184 * t416 + t206 * t421) + t422 * (-pkin(2) * t260 + pkin(8) * t225 + t184 * t421 + t206 * t416) - pkin(1) * t260 + pkin(7) * (-t224 * t417 + t225 * t422), t417 * (-pkin(8) * t228 - t186 * t416 + t209 * t421) + t422 * (-pkin(2) * t270 + pkin(8) * t229 + t186 * t421 + t209 * t416) - pkin(1) * t270 + pkin(7) * (-t228 * t417 + t229 * t422), t417 * (-pkin(8) * t207 + t121 * t421) + t422 * (pkin(8) * t208 + t416 * t121) + pkin(7) * (-t207 * t417 + t208 * t422) + (t417 * t522 + t422 * t470 - pkin(1)) * t240, (t417 * (-pkin(9) * t421 + t522) + t422 * (-pkin(9) * t416 + t470) - pkin(1)) * t442 + (pkin(7) + pkin(8)) * (-t130 * t417 + (t154 * t421 + t267 * t416) * t422), t417 * (t160 * t421 + t476) + t422 * (t160 * t416 - t475), t417 * (t111 * t421 + t306 * t416) + t422 * (t111 * t416 - t306 * t421), t417 * (t189 * t421 + t222 * t416) + t422 * (t189 * t416 - t222 * t421), t417 * (t159 * t421 - t476) + t422 * (t159 * t416 + t475), t417 * (t190 * t421 + t416 * t430) + t422 * (t190 * t416 - t421 * t430), t417 * (t211 * t421 + t351 * t416) + t422 * (t211 * t416 - t351 * t421), t417 * (-pkin(8) * t126 - t416 * t82 + t421 * t77) + t422 * (-pkin(2) * t168 + pkin(8) * t127 + t416 * t77 + t421 * t82) - pkin(1) * t168 + pkin(7) * (-t126 * t417 + t127 * t422), t417 * (-pkin(8) * t136 - t416 * t84 + t421 * t80) + t422 * (-pkin(2) * t181 + pkin(8) * t137 + t416 * t80 + t421 * t84) - pkin(1) * t181 + pkin(7) * (-t136 * t417 + t137 * t422), t417 * (-pkin(8) * t105 + t25 * t421 - t416 * t85) + t422 * (-pkin(2) * t110 + pkin(8) * t106 + t25 * t416 + t421 * t85) - pkin(1) * t110 + pkin(7) * (-t105 * t417 + t106 * t422), t417 * (-pkin(8) * t44 + t22 * t421 - t28 * t416) + t422 * (-pkin(2) * t49 + pkin(8) * t45 + t22 * t416 + t28 * t421) - pkin(1) * t49 + pkin(7) * (-t417 * t44 + t422 * t45), t417 * (t421 * t63 + t478) + t422 * (t416 * t63 - t477), t417 * (t247 * t416 + t38 * t421) + t422 * (-t247 * t421 + t38 * t416), t417 * (t150 * t416 + t421 * t91) + t422 * (-t150 * t421 + t416 * t91), t417 * (t421 * t62 - t478) + t422 * (t416 * t62 + t477), t417 * (t416 * t431 + t421 * t92) + t422 * (t416 * t92 - t421 * t431), t417 * (t115 * t421 + t349 * t416) + t422 * (t115 * t416 - t349 * t421), t417 * (-pkin(8) * t58 + t19 * t421 - t26 * t416) + t422 * (-pkin(2) * t75 + pkin(8) * t59 + t19 * t416 + t26 * t421) - pkin(1) * t75 + pkin(7) * (-t417 * t58 + t422 * t59), t417 * (-pkin(8) * t70 + t20 * t421 - t29 * t416) + t422 * (-pkin(2) * t87 + pkin(8) * t71 + t20 * t416 + t29 * t421) - pkin(1) * t87 + pkin(7) * (-t417 * t70 + t422 * t71), t417 * (-pkin(8) * t30 + t2 * t421 - t21 * t416) + t422 * (-pkin(2) * t37 + pkin(8) * t31 + t2 * t416 + t21 * t421) - pkin(1) * t37 + pkin(7) * (-t30 * t417 + t31 * t422), t417 * (-pkin(8) * t6 + t1 * t421 - t3 * t416) + t422 * (-pkin(2) * t11 + pkin(8) * t7 + t1 * t416 + t3 * t421) - pkin(1) * t11 + pkin(7) * (-t417 * t6 + t422 * t7); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, t408 - t409, t406, t402, t407, qJDD(2), -t376, -t377, 0, 0, t367, t366, t334, -t367, t437, t480, pkin(2) * t325 - t309, -t487 - t416 * (pkin(8) * t465 - t376 - t520) + (-t399 * t416 + t336) * pkin(2), pkin(2) * t286, pkin(2) * t253, t291, t239, t278, t289, t279, t315, pkin(2) * t224 + t471, pkin(2) * t228 + t472, pkin(2) * t207 + t452, pkin(2) * t130 + t485, t158, t109, t187, t157, t188, t210, pkin(2) * t126 + t454, pkin(2) * t136 + t453, pkin(2) * t105 + t456, pkin(2) * t44 + t438, t61, t36, t89, t60, t90, t114, pkin(2) * t58 + t462, pkin(2) * t70 + t461, pkin(2) * t30 + t463, pkin(2) * t6 + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, t366, t334, -t367, t437, t480, -t309, -t310, 0, 0, t291, t239, t278, t289, t279, t315, t471, t472, t452, t485, t158, t109, t187, t157, t188, t210, t454, t453, t456, t438, t61, t36, t89, t60, t90, t114, t462, t461, t463, t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348, t346, t299, -t348, t428, t352, -t202, -t203, 0, 0, t307, t306, t222, -t307, t430, t351, t440, t451, t521, t525, t248, t247, t150, -t248, t431, t349, t436, t429, t467, t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, t306, t222, -t307, t430, t351, -t119, -t120, 0, 0, t248, t247, t150, -t248, t431, t349, t450, t439, t100, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t247, t150, -t248, t431, t349, -t54, -t55, 0, 0;];
tauJ_reg  = t4;
