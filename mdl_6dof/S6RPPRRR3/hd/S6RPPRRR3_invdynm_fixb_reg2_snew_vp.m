% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 15:32
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRRR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR3_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR3_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR3_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 15:32:21
% EndTime: 2019-05-05 15:32:45
% DurationCPUTime: 26.31s
% Computational Cost: add. (122482->777), mult. (232601->1010), div. (0->0), fcn. (148438->10), ass. (0->514)
t1262 = sin(pkin(10));
t1263 = cos(pkin(10));
t1275 = qJD(1) ^ 2;
t1225 = -t1263 * qJDD(1) + t1262 * t1275;
t1259 = g(3) - qJDD(2);
t1192 = qJ(2) * t1225 - t1259 * t1262;
t1270 = sin(qJ(1));
t1274 = cos(qJ(1));
t1224 = qJDD(1) * t1262 + t1263 * t1275;
t1340 = t1274 * t1224 - t1225 * t1270;
t1348 = -qJ(2) * t1224 + t1263 * t1259;
t1449 = -pkin(6) * t1340 + t1192 * t1270 + t1274 * t1348;
t1234 = g(1) * t1274 + g(2) * t1270;
t1216 = -pkin(1) * t1275 - t1234;
t1233 = g(1) * t1270 - t1274 * g(2);
t1309 = qJDD(1) * pkin(1) + t1233;
t1155 = t1216 * t1262 - t1263 * t1309;
t1156 = t1263 * t1216 + t1262 * t1309;
t1341 = t1155 * t1262 + t1263 * t1156;
t1079 = t1155 * t1263 - t1156 * t1262;
t1392 = t1079 * t1270;
t1446 = t1274 * t1341 + t1392;
t1391 = t1079 * t1274;
t1445 = -t1270 * t1341 + t1391;
t1338 = t1224 * t1270 + t1274 * t1225;
t1421 = pkin(6) * t1338 + t1192 * t1274 - t1270 * t1348;
t1267 = sin(qJ(6));
t1268 = sin(qJ(5));
t1272 = cos(qJ(5));
t1273 = cos(qJ(4));
t1396 = qJD(1) * t1273;
t1213 = -t1272 * qJD(4) + t1268 * t1396;
t1214 = qJD(4) * t1268 + t1272 * t1396;
t1271 = cos(qJ(6));
t1152 = t1271 * t1213 + t1214 * t1267;
t1154 = -t1213 * t1267 + t1214 * t1271;
t1088 = t1154 * t1152;
t1352 = qJD(4) * t1396;
t1269 = sin(qJ(4));
t1360 = t1269 * qJDD(1);
t1221 = -t1352 - t1360;
t1211 = qJDD(5) - t1221;
t1202 = qJDD(6) + t1211;
t1428 = -t1088 + t1202;
t1442 = t1267 * t1428;
t1171 = t1214 * t1213;
t1426 = -t1171 + t1211;
t1441 = t1268 * t1426;
t1440 = t1271 * t1428;
t1439 = t1272 * t1426;
t1409 = pkin(4) * t1269;
t1438 = -pkin(8) * t1273 + t1409;
t1395 = qJDD(1) * qJ(3);
t1277 = -t1275 * pkin(2) + t1156 + t1395;
t1418 = 2 * qJD(3);
t1359 = qJD(1) * t1418;
t1126 = t1277 + t1359;
t1261 = qJDD(1) * pkin(2);
t1322 = qJDD(3) + t1155;
t1131 = -t1275 * qJ(3) - t1261 + t1322;
t1049 = t1126 * t1262 - t1131 * t1263;
t1343 = t1263 * t1126 + t1131 * t1262;
t1437 = -t1049 * t1270 + t1274 * t1343;
t1436 = t1049 * t1274 + t1270 * t1343;
t1250 = t1273 * qJDD(1);
t1397 = qJD(1) * t1269;
t1353 = qJD(4) * t1397;
t1222 = t1250 - t1353;
t1265 = t1275 * pkin(7);
t1408 = pkin(4) * t1273;
t1327 = pkin(8) * t1269 + t1408;
t1056 = -t1265 - t1222 * pkin(8) - t1221 * pkin(4) + (qJD(4) * t1327 + t1418) * qJD(1) + t1277;
t1219 = t1438 * qJD(1);
t1278 = -qJDD(1) * pkin(7) + t1131;
t1362 = t1273 * t1259 - t1269 * t1278;
t1420 = qJD(4) ^ 2;
t1072 = -pkin(4) * t1420 + qJDD(4) * pkin(8) - t1219 * t1397 - t1362;
t970 = -t1272 * t1056 + t1268 * t1072;
t971 = t1268 * t1056 + t1272 * t1072;
t912 = t1268 * t970 + t1272 * t971;
t911 = t1268 * t971 - t1272 * t970;
t1433 = (pkin(3) + t1327) * t911;
t1344 = t1259 * t1269 + t1273 * t1278;
t1032 = -t1269 * t1362 + t1273 * t1344;
t1318 = -t1268 * qJDD(4) - t1272 * t1222;
t1148 = -qJD(5) * t1213 - t1318;
t1319 = t1272 * qJDD(4) - t1268 * t1222;
t1282 = qJD(5) * t1214 - t1319;
t1038 = -t1152 * qJD(6) + t1271 * t1148 - t1267 * t1282;
t1243 = qJD(5) + t1397;
t1236 = qJD(6) + t1243;
t1129 = t1236 * t1152;
t1427 = -t1129 + t1038;
t1197 = t1243 * t1213;
t1100 = t1148 + t1197;
t1098 = (-qJD(5) + t1243) * t1214 + t1319;
t1028 = t1098 * t1268 - t1100 * t1272;
t889 = -pkin(8) * t1028 - t911;
t1425 = -t1028 * (pkin(3) + t1408) + t1269 * t889;
t1342 = t1267 * t1148 + t1271 * t1282;
t998 = (qJD(6) - t1236) * t1154 + t1342;
t1150 = t1152 ^ 2;
t1151 = t1154 ^ 2;
t1419 = t1213 ^ 2;
t1210 = t1214 ^ 2;
t1235 = t1236 ^ 2;
t1241 = t1243 ^ 2;
t1417 = -pkin(2) - pkin(7);
t947 = pkin(5) * t1426 - pkin(9) * t1100 - t970;
t1184 = pkin(5) * t1243 - pkin(9) * t1214;
t949 = -pkin(5) * t1419 - pkin(9) * t1282 - t1243 * t1184 + t971;
t878 = t1267 * t949 - t1271 * t947;
t879 = t1267 * t947 + t1271 * t949;
t839 = t1267 * t879 - t1271 * t878;
t1416 = pkin(5) * t839;
t1001 = t1129 + t1038;
t924 = -t1001 * t1271 - t1267 * t998;
t1415 = pkin(5) * t924;
t1414 = pkin(1) * t1224;
t1413 = pkin(1) * t1225;
t1412 = pkin(3) * t1032;
t1116 = -t1265 + t1126;
t1411 = pkin(3) * t1116;
t1257 = t1269 ^ 2;
t1258 = t1273 ^ 2;
t1361 = t1257 + t1258;
t1226 = t1361 * qJDD(1);
t1410 = pkin(3) * t1226;
t1407 = pkin(7) * t1032;
t1071 = -qJDD(4) * pkin(4) - t1420 * pkin(8) + t1219 * t1396 - t1344;
t983 = pkin(5) * t1282 - pkin(9) * t1419 + t1184 * t1214 + t1071;
t1404 = t1267 * t983;
t1403 = t1268 * t839;
t1401 = t1271 * t983;
t1400 = t1272 * t839;
t1399 = -pkin(4) * t1071 + pkin(8) * t912;
t1398 = qJD(1) * qJD(4);
t1060 = t1088 + t1202;
t1394 = t1060 * t1267;
t1393 = t1060 * t1271;
t1134 = t1171 + t1211;
t1389 = t1134 * t1268;
t1388 = t1134 * t1272;
t1381 = t1226 * t1262;
t1380 = t1226 * t1263;
t1242 = t1269 * t1275 * t1273;
t1231 = qJDD(4) + t1242;
t1379 = t1231 * t1269;
t1378 = t1231 * t1273;
t1232 = qJDD(4) - t1242;
t1377 = t1232 * t1269;
t1376 = t1232 * t1273;
t1375 = t1236 * t1154;
t1374 = t1236 * t1267;
t1373 = t1236 * t1271;
t1372 = t1243 * t1268;
t1371 = t1243 * t1272;
t1370 = t1257 * t1275;
t1369 = t1258 * t1275;
t1065 = t1268 * t1071;
t1367 = t1269 * t1116;
t1066 = t1272 * t1071;
t1109 = t1273 * t1116;
t1363 = -pkin(2) * t1131 + qJ(3) * t1126;
t1357 = t1269 * t1088;
t1356 = t1273 * t1088;
t1355 = t1269 * t1171;
t1354 = t1273 * t1171;
t1169 = -t1210 - t1241;
t1075 = -t1169 * t1268 - t1388;
t1101 = (qJD(5) + t1243) * t1213 + t1318;
t1351 = pkin(4) * t1101 + pkin(8) * t1075 + t1065;
t1149 = -t1241 - t1419;
t1063 = t1149 * t1272 - t1441;
t1198 = t1243 * t1214;
t1097 = -t1198 - t1282;
t1350 = pkin(4) * t1097 + pkin(8) * t1063 - t1066;
t1240 = -t1369 - t1420;
t1178 = t1240 * t1273 - t1379;
t1349 = -pkin(7) * t1178 + t1109;
t840 = t1267 * t878 + t1271 * t879;
t1073 = -t1235 - t1150;
t985 = t1073 * t1271 - t1442;
t997 = (qJD(6) + t1236) * t1154 + t1342;
t886 = -pkin(5) * t997 + pkin(9) * t985 - t1401;
t984 = t1073 * t1267 + t1440;
t917 = -t1268 * t984 + t1272 * t985;
t918 = -pkin(9) * t984 + t1404;
t1346 = -pkin(4) * t997 + pkin(8) * t917 + t1268 * t918 + t1272 * t886;
t1105 = -t1151 - t1235;
t1009 = -t1105 * t1267 - t1393;
t890 = -pkin(5) * t1427 + pkin(9) * t1009 + t1404;
t1008 = t1105 * t1271 - t1394;
t928 = -pkin(9) * t1008 + t1401;
t936 = -t1008 * t1268 + t1009 * t1272;
t1345 = -pkin(4) * t1427 + pkin(8) * t936 + t1268 * t928 + t1272 * t890;
t1336 = -t1233 * t1270 - t1274 * t1234;
t1043 = -t1150 - t1151;
t926 = t1001 * t1267 - t1271 * t998;
t824 = -pkin(5) * t1043 + pkin(9) * t926 + t840;
t828 = -pkin(9) * t924 - t839;
t876 = -t1268 * t924 + t1272 * t926;
t1335 = -pkin(4) * t1043 + pkin(8) * t876 + t1268 * t828 + t1272 * t824;
t1030 = t1098 * t1272 + t1100 * t1268;
t1132 = t1210 + t1419;
t1334 = pkin(4) * t1132 + pkin(8) * t1030 + t912;
t900 = -t1071 * t1273 + t1269 * t912;
t1333 = -pkin(3) * t900 - t1399;
t976 = t1030 * t1269 + t1132 * t1273;
t1332 = -pkin(7) * t976 + t1028 * t1409 + t1273 * t889;
t1331 = t1262 * t1242;
t1330 = t1263 * t1242;
t1329 = -pkin(3) * t1178 - t1362;
t1328 = -pkin(2) * t1032 + qJ(3) * t1116 - t1407;
t1228 = qJDD(1) * t1274 - t1270 * t1275;
t1326 = -pkin(6) * t1228 - g(3) * t1270;
t1220 = 0.2e1 * t1352 + t1360;
t1325 = pkin(3) * t1220 + t1109;
t1223 = t1250 - 0.2e1 * t1353;
t1324 = pkin(3) * t1223 - t1367;
t1238 = -t1370 - t1420;
t1176 = t1238 * t1269 + t1376;
t1323 = -pkin(7) * t1176 + t1367;
t1033 = -t1269 * t1344 - t1273 * t1362;
t1320 = t1233 * t1274 - t1234 * t1270;
t1006 = t1063 * t1269 + t1097 * t1273;
t1317 = -pkin(3) * t1006 - t1350;
t1011 = t1075 * t1269 + t1101 * t1273;
t1316 = -pkin(3) * t1011 - t1351;
t1315 = -pkin(2) * t1178 + qJ(3) * t1223 + t1349;
t1314 = pkin(5) * t984 - t878;
t815 = t1268 * t840 + t1400;
t834 = -pkin(5) * t983 + pkin(9) * t840;
t796 = -pkin(8) * t815 - pkin(9) * t1400 - t1268 * t834;
t805 = -pkin(4) * t815 - t1416;
t816 = t1272 * t840 - t1403;
t810 = t1269 * t816 - t1273 * t983;
t1313 = -pkin(7) * t810 - t1269 * t805 + t1273 * t796;
t874 = t1268 * t926 + t1272 * t924;
t803 = -pkin(8) * t874 - t1268 * t824 + t1272 * t828;
t845 = -pkin(4) * t874 - t1415;
t856 = -t1043 * t1273 + t1269 * t876;
t1312 = -pkin(7) * t856 - t1269 * t845 + t1273 * t803;
t916 = t1268 * t985 + t1272 * t984;
t836 = -pkin(8) * t916 - t1268 * t886 + t1272 * t918;
t843 = -pkin(4) * t916 - t1314;
t882 = t1269 * t917 - t1273 * t997;
t1311 = -pkin(7) * t882 - t1269 * t843 + t1273 * t836;
t935 = t1008 * t1272 + t1009 * t1268;
t838 = -pkin(8) * t935 - t1268 * t890 + t1272 * t928;
t1289 = pkin(5) * t1008 - t879;
t846 = -pkin(4) * t935 - t1289;
t893 = t1269 * t936 - t1273 * t1427;
t1310 = -pkin(7) * t893 - t1269 * t846 + t1273 * t838;
t1062 = t1149 * t1268 + t1439;
t948 = -pkin(4) * t1062 + t970;
t986 = -pkin(8) * t1062 + t1065;
t1308 = -pkin(7) * t1006 - t1269 * t948 + t1273 * t986;
t1074 = t1169 * t1272 - t1389;
t950 = -pkin(4) * t1074 + t971;
t994 = -pkin(8) * t1074 + t1066;
t1307 = -pkin(7) * t1011 - t1269 * t950 + t1273 * t994;
t1306 = -pkin(3) * t882 - t1346;
t1305 = -pkin(3) * t893 - t1345;
t1304 = -pkin(3) * t1176 - t1344;
t1303 = pkin(7) * t1226 - t1032;
t1302 = -0.2e1 * t1261 + t1322;
t1301 = -pkin(4) * t983 + pkin(8) * t816 - pkin(9) * t1403 + t1272 * t834;
t1300 = -pkin(3) * t856 - t1335;
t1299 = -pkin(3) * t976 - t1334;
t1298 = -pkin(2) * t976 + qJ(3) * t1028 + t1332;
t1297 = -pkin(7) * t900 + t1438 * t911;
t1296 = -pkin(2) * t1176 + qJ(3) * t1220 + t1323;
t1295 = pkin(3) * t815 - t1269 * t796 - t1273 * t805;
t1294 = pkin(3) * t874 - t1269 * t803 - t1273 * t845;
t1293 = pkin(3) * t916 - t1269 * t836 - t1273 * t843;
t1292 = pkin(3) * t935 - t1269 * t838 - t1273 * t846;
t1291 = pkin(3) * t1062 - t1269 * t986 - t1273 * t948;
t1290 = pkin(3) * t1074 - t1269 * t994 - t1273 * t950;
t1288 = -pkin(2) * t810 + qJ(3) * t815 + t1313;
t1287 = -pkin(2) * t856 + qJ(3) * t874 + t1312;
t1286 = -pkin(2) * t882 + qJ(3) * t916 + t1311;
t1285 = -pkin(2) * t893 + qJ(3) * t935 + t1310;
t1284 = -pkin(2) * t1006 + qJ(3) * t1062 + t1308;
t1283 = -pkin(2) * t1011 + qJ(3) * t1074 + t1307;
t1229 = t1361 * t1275;
t1281 = pkin(2) * t1226 - qJ(3) * t1229 + t1303;
t1280 = -pkin(3) * t810 - t1301;
t1279 = -pkin(2) * t900 + qJ(3) * t911 + t1297;
t1276 = t1156 + 0.2e1 * t1395 + t1359;
t1239 = -t1369 + t1420;
t1237 = t1370 - t1420;
t1230 = (-t1257 + t1258) * t1275;
t1227 = qJDD(1) * t1270 + t1274 * t1275;
t1212 = t1361 * t1398;
t1199 = -pkin(6) * t1227 + g(3) * t1274;
t1190 = -t1210 + t1241;
t1189 = -t1241 + t1419;
t1188 = t1222 * t1269 + t1258 * t1398;
t1187 = t1221 * t1273 + t1257 * t1398;
t1186 = qJDD(4) * t1263 - t1212 * t1262;
t1185 = qJDD(4) * t1262 + t1212 * t1263;
t1183 = -t1240 * t1269 - t1378;
t1182 = -t1239 * t1269 + t1376;
t1181 = (t1222 - t1353) * t1273;
t1180 = t1238 * t1273 - t1377;
t1179 = t1237 * t1273 - t1379;
t1177 = t1239 * t1273 + t1377;
t1175 = t1237 * t1269 + t1378;
t1174 = (-t1221 + t1352) * t1269;
t1170 = t1210 - t1419;
t1168 = -t1229 * t1263 - t1381;
t1167 = -t1229 * t1262 + t1380;
t1158 = -t1220 * t1273 - t1223 * t1269;
t1157 = -t1220 * t1269 + t1223 * t1273;
t1146 = t1187 * t1262 - t1330;
t1145 = t1188 * t1262 + t1330;
t1144 = -t1187 * t1263 - t1331;
t1143 = -t1188 * t1263 + t1331;
t1142 = t1177 * t1262 + t1250 * t1263;
t1141 = t1175 * t1262 - t1263 * t1360;
t1140 = -t1177 * t1263 + t1250 * t1262;
t1139 = -t1175 * t1263 - t1262 * t1360;
t1125 = -t1151 + t1235;
t1124 = t1150 - t1235;
t1122 = t1178 * t1262 + t1223 * t1263;
t1121 = t1176 * t1262 + t1220 * t1263;
t1120 = -t1178 * t1263 + t1223 * t1262;
t1119 = -t1176 * t1263 + t1220 * t1262;
t1118 = -t1155 - t1413;
t1117 = -t1156 - t1414;
t1114 = (-t1213 * t1272 + t1214 * t1268) * t1243;
t1113 = (-t1213 * t1268 - t1214 * t1272) * t1243;
t1108 = t1157 * t1262 + t1230 * t1263;
t1107 = -t1157 * t1263 + t1230 * t1262;
t1106 = t1302 + t1413;
t1104 = t1276 + t1414;
t1099 = t1148 - t1197;
t1096 = -t1198 + t1282;
t1092 = t1148 * t1272 - t1214 * t1372;
t1091 = t1148 * t1268 + t1214 * t1371;
t1090 = t1213 * t1371 + t1268 * t1282;
t1089 = -t1213 * t1372 + t1272 * t1282;
t1087 = t1114 * t1273 + t1211 * t1269;
t1086 = t1114 * t1269 - t1211 * t1273;
t1085 = t1151 - t1150;
t1084 = t1189 * t1272 - t1389;
t1083 = -t1190 * t1268 + t1439;
t1082 = t1189 * t1268 + t1388;
t1081 = t1190 * t1272 + t1441;
t1076 = pkin(1) * t1079;
t1064 = pkin(1) * t1259 + qJ(2) * t1341;
t1053 = (-t1152 * t1271 + t1154 * t1267) * t1236;
t1052 = (-t1152 * t1267 - t1154 * t1271) * t1236;
t1047 = t1092 * t1273 + t1355;
t1046 = t1090 * t1273 - t1355;
t1045 = t1092 * t1269 - t1354;
t1044 = t1090 * t1269 + t1354;
t1041 = -qJ(3) * t1183 - t1329;
t1040 = -qJ(3) * t1180 - t1304;
t1039 = -qJ(2) * t1049 + (-pkin(2) * t1262 + qJ(3) * t1263) * t1259;
t1037 = -qJD(6) * t1154 - t1342;
t1036 = qJ(2) * t1343 + (pkin(2) * t1263 + qJ(3) * t1262 + pkin(1)) * t1259;
t1035 = t1180 * t1417 + t1325;
t1034 = t1183 * t1417 + t1324;
t1029 = t1097 * t1272 - t1099 * t1268;
t1027 = t1097 * t1268 + t1099 * t1272;
t1024 = t1086 * t1262 + t1113 * t1263;
t1023 = -t1086 * t1263 + t1113 * t1262;
t1021 = pkin(3) * t1229 + t1033;
t1020 = t1084 * t1273 - t1096 * t1269;
t1019 = t1083 * t1273 + t1100 * t1269;
t1018 = t1084 * t1269 + t1096 * t1273;
t1017 = t1083 * t1269 - t1100 * t1273;
t1016 = t1124 * t1271 - t1394;
t1015 = -t1125 * t1267 + t1440;
t1014 = t1124 * t1267 + t1393;
t1013 = t1125 * t1271 + t1442;
t1012 = t1075 * t1273 - t1101 * t1269;
t1007 = t1063 * t1273 - t1097 * t1269;
t1004 = t1029 * t1273 + t1170 * t1269;
t1003 = t1029 * t1269 - t1170 * t1273;
t993 = pkin(1) * t1120 + t1315;
t992 = pkin(1) * t1119 + t1296;
t990 = t1038 * t1271 - t1154 * t1374;
t989 = t1038 * t1267 + t1154 * t1373;
t988 = -t1037 * t1267 + t1152 * t1373;
t987 = t1037 * t1271 + t1152 * t1374;
t982 = t1045 * t1262 + t1091 * t1263;
t981 = t1044 * t1262 - t1089 * t1263;
t980 = -t1045 * t1263 + t1091 * t1262;
t979 = -t1044 * t1263 - t1089 * t1262;
t977 = t1030 * t1273 - t1132 * t1269;
t973 = t1032 * t1262 + t1116 * t1263;
t972 = -t1032 * t1263 + t1116 * t1262;
t967 = -pkin(3) * t1380 - qJ(2) * t1167 + t1021 * t1262;
t966 = -pkin(3) * t1381 + qJ(2) * t1168 - t1021 * t1263;
t965 = pkin(1) * t1049 + t1363;
t964 = pkin(1) * t1167 + t1281;
t963 = -t1052 * t1268 + t1053 * t1272;
t962 = t1052 * t1272 + t1053 * t1268;
t961 = t1018 * t1262 + t1082 * t1263;
t960 = t1017 * t1262 + t1081 * t1263;
t959 = -t1018 * t1263 + t1082 * t1262;
t958 = -t1017 * t1263 + t1081 * t1262;
t957 = t1202 * t1269 + t1273 * t963;
t956 = -t1202 * t1273 + t1269 * t963;
t955 = t1011 * t1262 + t1074 * t1263;
t954 = -t1011 * t1263 + t1074 * t1262;
t953 = t1006 * t1262 + t1062 * t1263;
t952 = -t1006 * t1263 + t1062 * t1262;
t951 = -qJ(3) * t1033 + t1412;
t946 = -t1014 * t1268 + t1016 * t1272;
t945 = -t1013 * t1268 + t1015 * t1272;
t944 = t1014 * t1272 + t1016 * t1268;
t943 = t1013 * t1272 + t1015 * t1268;
t941 = -qJ(2) * t1120 - t1034 * t1262 + t1041 * t1263;
t940 = -qJ(2) * t1119 - t1035 * t1262 + t1040 * t1263;
t939 = t1003 * t1262 + t1027 * t1263;
t938 = -t1003 * t1263 + t1027 * t1262;
t937 = t1033 * t1417 + t1411;
t932 = t1028 * t1263 + t1262 * t976;
t931 = t1028 * t1262 - t1263 * t976;
t930 = -pkin(1) * t1183 + qJ(2) * t1122 + t1034 * t1263 + t1041 * t1262;
t929 = -pkin(1) * t1180 + qJ(2) * t1121 + t1035 * t1263 + t1040 * t1262;
t925 = -t1267 * t1427 - t1271 * t997;
t923 = -t1267 * t997 + t1271 * t1427;
t922 = -t1268 * t989 + t1272 * t990;
t921 = -t1268 * t987 + t1272 * t988;
t920 = t1268 * t990 + t1272 * t989;
t919 = t1268 * t988 + t1272 * t987;
t907 = t1262 * t956 + t1263 * t962;
t906 = t1262 * t962 - t1263 * t956;
t905 = t1273 * t922 + t1357;
t904 = t1273 * t921 - t1357;
t903 = t1269 * t922 - t1356;
t902 = t1269 * t921 + t1356;
t901 = t1071 * t1269 + t1273 * t912;
t898 = -t1269 * t998 + t1273 * t946;
t897 = t1001 * t1269 + t1273 * t945;
t896 = t1269 * t946 + t1273 * t998;
t895 = -t1001 * t1273 + t1269 * t945;
t894 = t1269 * t1427 + t1273 * t936;
t891 = pkin(1) * t972 + t1328;
t884 = -qJ(3) * t1012 - t1316;
t883 = t1269 * t997 + t1273 * t917;
t880 = -qJ(3) * t1007 - t1317;
t875 = -t1268 * t923 + t1272 * t925;
t873 = t1268 * t925 + t1272 * t923;
t870 = -qJ(2) * t972 - t1262 * t937 + t1263 * t951;
t869 = t1262 * t896 + t1263 * t944;
t868 = t1262 * t895 + t1263 * t943;
t867 = t1262 * t944 - t1263 * t896;
t866 = t1262 * t943 - t1263 * t895;
t865 = t1085 * t1269 + t1273 * t875;
t864 = -t1085 * t1273 + t1269 * t875;
t863 = t1262 * t903 + t1263 * t920;
t862 = t1262 * t902 + t1263 * t919;
t861 = t1262 * t920 - t1263 * t903;
t860 = t1262 * t919 - t1263 * t902;
t859 = t1262 * t893 + t1263 * t935;
t858 = t1262 * t935 - t1263 * t893;
t857 = t1043 * t1269 + t1273 * t876;
t854 = t1012 * t1417 + t1290;
t853 = t1262 * t900 + t1263 * t911;
t852 = t1262 * t911 - t1263 * t900;
t851 = t1007 * t1417 + t1291;
t850 = -pkin(1) * t1033 + qJ(2) * t973 + t1262 * t951 + t1263 * t937;
t849 = t1262 * t882 + t1263 * t916;
t848 = t1262 * t916 - t1263 * t882;
t847 = -qJ(3) * t977 - t1299;
t844 = pkin(1) * t954 + t1283;
t842 = pkin(1) * t952 + t1284;
t841 = t1417 * t977 - t1425;
t832 = -qJ(3) * t901 - t1333;
t831 = pkin(1) * t931 + t1298;
t830 = t1262 * t864 + t1263 * t873;
t829 = t1262 * t873 - t1263 * t864;
t826 = t1262 * t856 + t1263 * t874;
t825 = t1262 * t874 - t1263 * t856;
t822 = -qJ(2) * t954 - t1262 * t854 + t1263 * t884;
t821 = -qJ(2) * t952 - t1262 * t851 + t1263 * t880;
t820 = -pkin(1) * t1012 + qJ(2) * t955 + t1262 * t884 + t1263 * t854;
t819 = -pkin(1) * t1007 + qJ(2) * t953 + t1262 * t880 + t1263 * t851;
t818 = t1417 * t901 + t1433;
t817 = -qJ(3) * t894 - t1305;
t812 = -qJ(2) * t931 - t1262 * t841 + t1263 * t847;
t811 = t1269 * t983 + t1273 * t816;
t808 = -qJ(3) * t883 - t1306;
t807 = -pkin(1) * t977 + qJ(2) * t932 + t1262 * t847 + t1263 * t841;
t806 = pkin(1) * t852 + t1279;
t804 = t1417 * t894 + t1292;
t801 = t1417 * t883 + t1293;
t800 = pkin(1) * t858 + t1285;
t799 = -qJ(2) * t852 - t1262 * t818 + t1263 * t832;
t798 = pkin(1) * t848 + t1286;
t797 = -pkin(1) * t901 + qJ(2) * t853 + t1262 * t832 + t1263 * t818;
t794 = t1262 * t810 + t1263 * t815;
t793 = t1262 * t815 - t1263 * t810;
t792 = -qJ(3) * t857 - t1300;
t791 = -qJ(2) * t858 - t1262 * t804 + t1263 * t817;
t790 = -pkin(1) * t894 + qJ(2) * t859 + t1262 * t817 + t1263 * t804;
t789 = t1417 * t857 + t1294;
t788 = -qJ(2) * t848 - t1262 * t801 + t1263 * t808;
t787 = -pkin(1) * t883 + qJ(2) * t849 + t1262 * t808 + t1263 * t801;
t786 = pkin(1) * t825 + t1287;
t785 = -qJ(3) * t811 - t1280;
t784 = -qJ(2) * t825 - t1262 * t789 + t1263 * t792;
t783 = -pkin(1) * t857 + qJ(2) * t826 + t1262 * t792 + t1263 * t789;
t782 = t1417 * t811 + t1295;
t781 = pkin(1) * t793 + t1288;
t780 = -qJ(2) * t793 - t1262 * t782 + t1263 * t785;
t779 = -pkin(1) * t811 + qJ(2) * t794 + t1262 * t785 + t1263 * t782;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1228, 0, -t1227, 0, t1326, -t1199, -t1320, -pkin(6) * t1320, 0, 0, -t1338, 0, -t1340, 0, t1421, -t1449, t1445, pkin(6) * t1445 + qJ(2) * t1391 - t1270 * t1064, 0, t1338, t1340, 0, 0, 0, -t1436, -t1421, t1449, -pkin(6) * t1436 - t1270 * t1036 + t1274 * t1039, -t1143 * t1270 + t1145 * t1274, -t1107 * t1270 + t1108 * t1274, -t1140 * t1270 + t1142 * t1274, -t1144 * t1270 + t1146 * t1274, -t1139 * t1270 + t1141 * t1274, -t1185 * t1270 + t1186 * t1274, t1274 * t940 - t1270 * t929 - pkin(6) * (t1119 * t1274 + t1121 * t1270), t1274 * t941 - t1270 * t930 - pkin(6) * (t1120 * t1274 + t1122 * t1270), t1274 * t967 - t1270 * t966 - pkin(6) * (t1167 * t1274 + t1168 * t1270), t1274 * t870 - t1270 * t850 - pkin(6) * (t1270 * t973 + t1274 * t972), -t1270 * t980 + t1274 * t982, -t1270 * t938 + t1274 * t939, -t1270 * t958 + t1274 * t960, -t1270 * t979 + t1274 * t981, -t1270 * t959 + t1274 * t961, -t1023 * t1270 + t1024 * t1274, t1274 * t821 - t1270 * t819 - pkin(6) * (t1270 * t953 + t1274 * t952), t1274 * t822 - t1270 * t820 - pkin(6) * (t1270 * t955 + t1274 * t954), t1274 * t812 - t1270 * t807 - pkin(6) * (t1270 * t932 + t1274 * t931), t1274 * t799 - t1270 * t797 - pkin(6) * (t1270 * t853 + t1274 * t852), -t1270 * t861 + t1274 * t863, -t1270 * t829 + t1274 * t830, -t1270 * t866 + t1274 * t868, -t1270 * t860 + t1274 * t862, -t1270 * t867 + t1274 * t869, -t1270 * t906 + t1274 * t907, t1274 * t788 - t1270 * t787 - pkin(6) * (t1270 * t849 + t1274 * t848), t1274 * t791 - t1270 * t790 - pkin(6) * (t1270 * t859 + t1274 * t858), t1274 * t784 - t1270 * t783 - pkin(6) * (t1270 * t826 + t1274 * t825), t1274 * t780 - t1270 * t779 - pkin(6) * (t1270 * t794 + t1274 * t793); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1227, 0, t1228, 0, t1199, t1326, t1336, pkin(6) * t1336, 0, 0, t1340, 0, -t1338, 0, t1449, t1421, t1446, pkin(6) * t1446 + qJ(2) * t1392 + t1274 * t1064, 0, -t1340, t1338, 0, 0, 0, t1437, -t1449, -t1421, pkin(6) * t1437 + t1274 * t1036 + t1270 * t1039, t1143 * t1274 + t1145 * t1270, t1107 * t1274 + t1108 * t1270, t1140 * t1274 + t1142 * t1270, t1144 * t1274 + t1146 * t1270, t1139 * t1274 + t1141 * t1270, t1185 * t1274 + t1186 * t1270, t1270 * t940 + t1274 * t929 + pkin(6) * (-t1119 * t1270 + t1121 * t1274), t1270 * t941 + t1274 * t930 + pkin(6) * (-t1120 * t1270 + t1122 * t1274), t1270 * t967 + t1274 * t966 + pkin(6) * (-t1167 * t1270 + t1168 * t1274), t1270 * t870 + t1274 * t850 + pkin(6) * (-t1270 * t972 + t1274 * t973), t1270 * t982 + t1274 * t980, t1270 * t939 + t1274 * t938, t1270 * t960 + t1274 * t958, t1270 * t981 + t1274 * t979, t1270 * t961 + t1274 * t959, t1023 * t1274 + t1024 * t1270, t1270 * t821 + t1274 * t819 + pkin(6) * (-t1270 * t952 + t1274 * t953), t1270 * t822 + t1274 * t820 + pkin(6) * (-t1270 * t954 + t1274 * t955), t1270 * t812 + t1274 * t807 + pkin(6) * (-t1270 * t931 + t1274 * t932), t1270 * t799 + t1274 * t797 + pkin(6) * (-t1270 * t852 + t1274 * t853), t1270 * t863 + t1274 * t861, t1270 * t830 + t1274 * t829, t1270 * t868 + t1274 * t866, t1270 * t862 + t1274 * t860, t1270 * t869 + t1274 * t867, t1270 * t907 + t1274 * t906, t1270 * t788 + t1274 * t787 + pkin(6) * (-t1270 * t848 + t1274 * t849), t1270 * t791 + t1274 * t790 + pkin(6) * (-t1270 * t858 + t1274 * t859), t1270 * t784 + t1274 * t783 + pkin(6) * (-t1270 * t825 + t1274 * t826), t1270 * t780 + t1274 * t779 + pkin(6) * (-t1270 * t793 + t1274 * t794); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1233, t1234, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1118, t1117, 0, -t1076, qJDD(1), 0, 0, 0, 0, 0, 0, t1106, t1104, t965, t1181, t1158, t1182, t1174, t1179, 0, t992, t993, t964, t891, t1047, t1004, t1019, t1046, t1020, t1087, t842, t844, t831, t806, t905, t865, t897, t904, t898, t957, t798, t800, t786, t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1275, 0, 0, -g(3), -t1233, 0, 0, 0, -t1225, 0, -t1224, 0, t1192, -t1348, t1079, qJ(2) * t1079, 0, t1225, t1224, 0, 0, 0, -t1049, -t1192, t1348, t1039, t1145, t1108, t1142, t1146, t1141, t1186, t940, t941, t967, t870, t982, t939, t960, t981, t961, t1024, t821, t822, t812, t799, t863, t830, t868, t862, t869, t907, t788, t791, t784, t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, 0, qJDD(1), 0, g(3), 0, -t1234, 0, 0, 0, t1224, 0, -t1225, 0, t1348, t1192, t1341, t1064, 0, -t1224, t1225, 0, 0, 0, t1343, -t1348, -t1192, t1036, t1143, t1107, t1140, t1144, t1139, t1185, t929, t930, t966, t850, t980, t938, t958, t979, t959, t1023, t819, t820, t807, t797, t861, t829, t866, t860, t867, t906, t787, t790, t783, t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1233, t1234, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1118, t1117, 0, -t1076, qJDD(1), 0, 0, 0, 0, 0, 0, t1106, t1104, t965, t1181, t1158, t1182, t1174, t1179, 0, t992, t993, t964, t891, t1047, t1004, t1019, t1046, t1020, t1087, t842, t844, t831, t806, t905, t865, t897, t904, t898, t957, t798, t800, t786, t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1275, 0, 0, -t1259, t1155, 0, 0, -qJDD(1), t1275, 0, 0, 0, t1131, 0, t1259, qJ(3) * t1259, t1242, t1230, t1250, -t1242, -t1360, qJDD(4), t1040, t1041, -t1410, t951, t1091, t1027, t1081, -t1089, t1082, t1113, t880, t884, t847, t832, t920, t873, t943, t919, t944, t962, t808, t817, t792, t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, 0, qJDD(1), 0, t1259, 0, t1156, 0, 0, -t1275, -qJDD(1), 0, 0, 0, t1126, -t1259, 0, pkin(2) * t1259, -t1188, -t1157, -t1177, -t1187, -t1175, t1212, t1035, t1034, -t1021, t937, -t1045, -t1003, -t1017, -t1044, -t1018, -t1086, t851, t854, t841, t818, -t903, -t864, -t895, -t902, -t896, -t956, t801, t804, t789, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1155, -t1156, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1302, t1276, t1363, t1181, t1158, t1182, t1174, t1179, 0, t1296, t1315, t1281, t1328, t1047, t1004, t1019, t1046, t1020, t1087, t1284, t1283, t1298, t1279, t905, t865, t897, t904, t898, t957, t1286, t1285, t1287, t1288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1131, t1126, 0, t1181, t1158, t1182, t1174, t1179, 0, t1323, t1349, t1303, -t1407, t1047, t1004, t1019, t1046, t1020, t1087, t1308, t1307, t1332, t1297, t905, t865, t897, t904, t898, t957, t1311, t1310, t1312, t1313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1275, 0, 0, 0, -t1131, 0, -t1259, 0, -t1242, -t1230, -t1250, t1242, t1360, -qJDD(4), t1304, t1329, t1410, -t1412, -t1091, -t1027, -t1081, t1089, -t1082, -t1113, t1317, t1316, t1299, t1333, -t920, -t873, -t943, -t919, -t944, -t962, t1306, t1305, t1300, t1280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, qJDD(1), 0, 0, 0, -t1126, t1259, 0, 0, t1188, t1157, t1177, t1187, t1175, -t1212, pkin(7) * t1180 - t1325, pkin(7) * t1183 - t1324, t1021, pkin(7) * t1033 - t1411, t1045, t1003, t1017, t1044, t1018, t1086, pkin(7) * t1007 - t1291, pkin(7) * t1012 - t1290, pkin(7) * t977 + t1425, pkin(7) * t901 - t1433, t903, t864, t895, t902, t896, t956, pkin(7) * t883 - t1293, pkin(7) * t894 - t1292, pkin(7) * t857 - t1294, pkin(7) * t811 - t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1222, -t1220, t1232, t1353, t1237, -t1353, 0, t1116, -t1344, 0, t1092, t1029, t1083, t1090, t1084, t1114, t986, t994, t889, -pkin(8) * t911, t922, t875, t945, t921, t946, t963, t836, t838, t803, t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1352, t1223, t1239, t1221, t1231, -t1352, -t1116, 0, -t1362, 0, -t1171, -t1170, -t1100, t1171, t1096, -t1211, t948, t950, -pkin(4) * t1028, -pkin(4) * t911, -t1088, -t1085, -t1001, t1088, t998, -t1202, t843, t846, t845, t805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1242, t1230, t1250, -t1242, -t1360, qJDD(4), t1344, t1362, 0, 0, t1091, t1027, t1081, -t1089, t1082, t1113, t1350, t1351, t1334, t1399, t920, t873, t943, t919, t944, t962, t1346, t1345, t1335, t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1148, t1097, t1426, t1197, t1189, -t1197, 0, t1071, t970, 0, t990, t925, t1015, t988, t1016, t1053, t918, t928, t828, -pkin(9) * t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1198, t1099, t1190, -t1282, t1134, -t1198, -t1071, 0, t971, 0, t989, t923, t1013, t987, t1014, t1052, t886, t890, t824, t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1171, t1170, t1100, -t1171, -t1096, t1211, -t970, -t971, 0, 0, t1088, t1085, t1001, -t1088, -t998, t1202, t1314, t1289, t1415, t1416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1038, -t997, t1428, t1129, t1124, -t1129, 0, t983, t878, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, t1427, t1125, t1037, t1060, -t1375, -t983, 0, t879, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1088, t1085, t1001, -t1088, -t998, t1202, -t878, -t879, 0, 0;];
m_new_reg  = t1;
