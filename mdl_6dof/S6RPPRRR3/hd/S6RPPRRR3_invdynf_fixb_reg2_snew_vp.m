% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 15:32
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRRR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR3_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 15:32:45
% EndTime: 2019-05-05 15:32:49
% DurationCPUTime: 3.97s
% Computational Cost: add. (16964->260), mult. (32280->326), div. (0->0), fcn. (20693->10), ass. (0->185)
t1624 = sin(qJ(4));
t1609 = t1624 * qJD(1);
t1603 = t1609 + qJD(5);
t1600 = qJD(6) + t1603;
t1669 = qJD(6) + t1600;
t1618 = sin(pkin(10));
t1619 = cos(pkin(10));
t1630 = qJD(1) ^ 2;
t1590 = qJDD(1) * t1618 + t1619 * t1630;
t1591 = -qJDD(1) * t1619 + t1618 * t1630;
t1625 = sin(qJ(1));
t1629 = cos(qJ(1));
t1640 = t1590 * t1625 + t1591 * t1629;
t1642 = t1590 * t1629 - t1591 * t1625;
t1668 = qJD(4) ^ 2;
t1623 = sin(qJ(5));
t1627 = cos(qJ(5));
t1628 = cos(qJ(4));
t1659 = qJD(1) * t1628;
t1582 = -qJD(4) * t1627 + t1623 * t1659;
t1584 = qJD(4) * t1623 + t1627 * t1659;
t1622 = sin(qJ(6));
t1626 = cos(qJ(6));
t1559 = t1582 * t1626 + t1584 * t1622;
t1667 = t1559 ^ 2;
t1561 = -t1582 * t1622 + t1584 * t1626;
t1666 = t1561 ^ 2;
t1665 = t1582 ^ 2;
t1664 = t1584 ^ 2;
t1663 = t1600 ^ 2;
t1662 = t1603 ^ 2;
t1661 = 2 * qJD(3);
t1660 = t1630 * pkin(7);
t1658 = t1559 * t1561;
t1657 = t1582 * t1584;
t1654 = t1603 * t1582;
t1651 = qJD(5) - t1603;
t1650 = qJD(6) - t1600;
t1646 = qJD(4) * t1609;
t1647 = t1628 * qJDD(1);
t1588 = -t1646 + t1647;
t1599 = -g(1) * t1629 - g(2) * t1625;
t1585 = -pkin(1) * t1630 + t1599;
t1598 = g(1) * t1625 - g(2) * t1629;
t1633 = qJDD(1) * pkin(1) + t1598;
t1563 = t1585 * t1619 + t1618 * t1633;
t1635 = -pkin(2) * t1630 + qJDD(1) * qJ(3) + t1563;
t1605 = qJD(4) * t1659;
t1607 = t1624 * qJDD(1);
t1649 = -t1607 - t1605;
t1522 = -t1660 - t1588 * pkin(8) - t1649 * pkin(4) + (t1661 + (pkin(4) * t1628 + pkin(8) * t1624) * qJD(4)) * qJD(1) + t1635;
t1615 = -g(3) + qJDD(2);
t1562 = -t1585 * t1618 + t1619 * t1633;
t1551 = -qJDD(1) * pkin(2) - qJ(3) * t1630 + qJDD(3) - t1562;
t1632 = -qJDD(1) * pkin(7) + t1551;
t1540 = t1615 * t1628 + t1624 * t1632;
t1586 = (pkin(4) * t1624 - pkin(8) * t1628) * qJD(1);
t1529 = -pkin(4) * t1668 + qJDD(4) * pkin(8) - t1586 * t1609 + t1540;
t1495 = t1522 * t1623 + t1529 * t1627;
t1613 = t1624 ^ 2;
t1614 = t1628 ^ 2;
t1648 = t1613 + t1614;
t1645 = t1624 * t1628 * t1630;
t1644 = qJDD(5) - t1649;
t1494 = t1522 * t1627 - t1623 * t1529;
t1539 = -t1615 * t1624 + t1628 * t1632;
t1636 = -t1623 * qJDD(4) - t1627 * t1588;
t1557 = -qJD(5) * t1582 - t1636;
t1638 = -qJDD(4) * t1627 + t1623 * t1588;
t1634 = qJD(5) * t1584 + t1638;
t1643 = -t1622 * t1557 - t1626 * t1634;
t1637 = -qJDD(6) - t1644;
t1553 = t1644 - t1657;
t1549 = qJD(1) * t1661 + t1635;
t1528 = -qJDD(4) * pkin(4) - pkin(8) * t1668 + t1586 * t1659 - t1539;
t1631 = -t1626 * t1557 + t1622 * t1634;
t1602 = -t1614 * t1630 - t1668;
t1601 = -t1613 * t1630 - t1668;
t1597 = -qJDD(4) - t1645;
t1596 = qJDD(4) - t1645;
t1595 = t1648 * t1630;
t1594 = -qJDD(1) * t1625 - t1629 * t1630;
t1593 = qJDD(1) * t1629 - t1625 * t1630;
t1592 = t1648 * qJDD(1);
t1589 = -0.2e1 * t1646 + t1647;
t1587 = t1607 + 0.2e1 * t1605;
t1571 = pkin(5) * t1603 - pkin(9) * t1584;
t1570 = t1597 * t1628 - t1602 * t1624;
t1569 = -t1596 * t1624 + t1601 * t1628;
t1568 = t1597 * t1624 + t1602 * t1628;
t1567 = t1596 * t1628 + t1601 * t1624;
t1566 = -t1662 - t1664;
t1565 = -t1592 * t1618 - t1595 * t1619;
t1564 = t1592 * t1619 - t1595 * t1618;
t1558 = -t1662 - t1665;
t1554 = -t1644 - t1657;
t1552 = -t1664 - t1665;
t1548 = t1568 * t1618 + t1589 * t1619;
t1547 = t1567 * t1618 + t1587 * t1619;
t1546 = -t1568 * t1619 + t1589 * t1618;
t1545 = -t1567 * t1619 + t1587 * t1618;
t1544 = t1549 - t1660;
t1541 = -t1663 - t1666;
t1538 = t1582 * t1651 + t1636;
t1537 = t1557 - t1654;
t1536 = -t1584 * t1651 - t1638;
t1535 = (qJD(5) + t1603) * t1584 + t1638;
t1534 = -t1562 * t1618 + t1563 * t1619;
t1533 = t1562 * t1619 + t1563 * t1618;
t1532 = t1554 * t1627 - t1566 * t1623;
t1531 = t1554 * t1623 + t1566 * t1627;
t1530 = -t1663 - t1667;
t1526 = -t1553 * t1623 + t1558 * t1627;
t1525 = t1553 * t1627 + t1558 * t1623;
t1524 = t1637 - t1658;
t1523 = -t1637 - t1658;
t1519 = t1549 * t1619 + t1551 * t1618;
t1518 = t1549 * t1618 - t1551 * t1619;
t1517 = -t1666 - t1667;
t1516 = -t1539 * t1624 + t1540 * t1628;
t1515 = t1539 * t1628 + t1540 * t1624;
t1514 = t1536 * t1627 - t1538 * t1623;
t1513 = t1536 * t1623 + t1538 * t1627;
t1512 = t1532 * t1628 + t1537 * t1624;
t1511 = t1532 * t1624 - t1537 * t1628;
t1510 = t1524 * t1626 - t1541 * t1622;
t1509 = t1524 * t1622 + t1541 * t1626;
t1508 = t1526 * t1628 + t1535 * t1624;
t1507 = t1526 * t1624 - t1535 * t1628;
t1506 = t1559 * t1650 + t1631;
t1505 = -t1559 * t1669 - t1631;
t1504 = -t1561 * t1650 + t1643;
t1503 = t1561 * t1669 - t1643;
t1502 = -t1523 * t1622 + t1530 * t1626;
t1501 = t1523 * t1626 + t1530 * t1622;
t1500 = pkin(5) * t1634 - pkin(9) * t1665 + t1571 * t1584 + t1528;
t1499 = t1514 * t1628 + t1552 * t1624;
t1498 = t1514 * t1624 - t1552 * t1628;
t1497 = t1515 * t1618 + t1544 * t1619;
t1496 = -t1515 * t1619 + t1544 * t1618;
t1493 = t1511 * t1618 + t1531 * t1619;
t1492 = -t1511 * t1619 + t1531 * t1618;
t1491 = t1507 * t1618 + t1525 * t1619;
t1490 = -t1507 * t1619 + t1525 * t1618;
t1489 = -pkin(5) * t1665 - pkin(9) * t1634 - t1571 * t1603 + t1495;
t1488 = (-t1557 - t1654) * pkin(9) + t1553 * pkin(5) + t1494;
t1487 = -t1509 * t1623 + t1510 * t1627;
t1486 = t1509 * t1627 + t1510 * t1623;
t1485 = t1498 * t1618 + t1513 * t1619;
t1484 = -t1498 * t1619 + t1513 * t1618;
t1483 = t1504 * t1626 - t1506 * t1622;
t1482 = t1504 * t1622 + t1506 * t1626;
t1481 = -t1501 * t1623 + t1502 * t1627;
t1480 = t1501 * t1627 + t1502 * t1623;
t1479 = -t1494 * t1623 + t1495 * t1627;
t1478 = t1494 * t1627 + t1495 * t1623;
t1477 = t1479 * t1628 + t1528 * t1624;
t1476 = t1479 * t1624 - t1528 * t1628;
t1475 = t1487 * t1628 + t1505 * t1624;
t1474 = t1487 * t1624 - t1505 * t1628;
t1473 = t1481 * t1628 + t1503 * t1624;
t1472 = t1481 * t1624 - t1503 * t1628;
t1471 = t1488 * t1622 + t1489 * t1626;
t1470 = t1488 * t1626 - t1489 * t1622;
t1469 = -t1482 * t1623 + t1483 * t1627;
t1468 = t1482 * t1627 + t1483 * t1623;
t1467 = t1474 * t1618 + t1486 * t1619;
t1466 = -t1474 * t1619 + t1486 * t1618;
t1465 = t1469 * t1628 + t1517 * t1624;
t1464 = t1469 * t1624 - t1517 * t1628;
t1463 = t1476 * t1618 + t1478 * t1619;
t1462 = -t1476 * t1619 + t1478 * t1618;
t1461 = t1472 * t1618 + t1480 * t1619;
t1460 = -t1472 * t1619 + t1480 * t1618;
t1459 = -t1470 * t1622 + t1471 * t1626;
t1458 = t1470 * t1626 + t1471 * t1622;
t1457 = t1464 * t1618 + t1468 * t1619;
t1456 = -t1464 * t1619 + t1468 * t1618;
t1455 = -t1458 * t1623 + t1459 * t1627;
t1454 = t1458 * t1627 + t1459 * t1623;
t1453 = t1455 * t1628 + t1500 * t1624;
t1452 = t1455 * t1624 - t1500 * t1628;
t1451 = t1452 * t1618 + t1454 * t1619;
t1450 = -t1452 * t1619 + t1454 * t1618;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1594, -t1593, 0, -t1598 * t1625 + t1599 * t1629, 0, 0, 0, 0, 0, 0, -t1642, t1640, 0, -t1533 * t1625 + t1534 * t1629, 0, 0, 0, 0, 0, 0, 0, t1642, -t1640, -t1518 * t1625 + t1519 * t1629, 0, 0, 0, 0, 0, 0, -t1545 * t1625 + t1547 * t1629, -t1546 * t1625 + t1548 * t1629, -t1564 * t1625 + t1565 * t1629, -t1496 * t1625 + t1497 * t1629, 0, 0, 0, 0, 0, 0, -t1490 * t1625 + t1491 * t1629, -t1492 * t1625 + t1493 * t1629, -t1484 * t1625 + t1485 * t1629, -t1462 * t1625 + t1463 * t1629, 0, 0, 0, 0, 0, 0, -t1460 * t1625 + t1461 * t1629, -t1466 * t1625 + t1467 * t1629, -t1456 * t1625 + t1457 * t1629, -t1450 * t1625 + t1451 * t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1593, t1594, 0, t1598 * t1629 + t1599 * t1625, 0, 0, 0, 0, 0, 0, -t1640, -t1642, 0, t1533 * t1629 + t1534 * t1625, 0, 0, 0, 0, 0, 0, 0, t1640, t1642, t1518 * t1629 + t1519 * t1625, 0, 0, 0, 0, 0, 0, t1545 * t1629 + t1547 * t1625, t1546 * t1629 + t1548 * t1625, t1564 * t1629 + t1565 * t1625, t1496 * t1629 + t1497 * t1625, 0, 0, 0, 0, 0, 0, t1490 * t1629 + t1491 * t1625, t1492 * t1629 + t1493 * t1625, t1484 * t1629 + t1485 * t1625, t1462 * t1629 + t1463 * t1625, 0, 0, 0, 0, 0, 0, t1460 * t1629 + t1461 * t1625, t1466 * t1629 + t1467 * t1625, t1456 * t1629 + t1457 * t1625, t1450 * t1629 + t1451 * t1625; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, t1569, t1570, 0, t1516, 0, 0, 0, 0, 0, 0, t1508, t1512, t1499, t1477, 0, 0, 0, 0, 0, 0, t1473, t1475, t1465, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1630, -qJDD(1), 0, t1599, 0, 0, 0, 0, 0, 0, -t1590, t1591, 0, t1534, 0, 0, 0, 0, 0, 0, 0, t1590, -t1591, t1519, 0, 0, 0, 0, 0, 0, t1547, t1548, t1565, t1497, 0, 0, 0, 0, 0, 0, t1491, t1493, t1485, t1463, 0, 0, 0, 0, 0, 0, t1461, t1467, t1457, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1630, 0, t1598, 0, 0, 0, 0, 0, 0, -t1591, -t1590, 0, t1533, 0, 0, 0, 0, 0, 0, 0, t1591, t1590, t1518, 0, 0, 0, 0, 0, 0, t1545, t1546, t1564, t1496, 0, 0, 0, 0, 0, 0, t1490, t1492, t1484, t1462, 0, 0, 0, 0, 0, 0, t1460, t1466, t1456, t1450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, t1569, t1570, 0, t1516, 0, 0, 0, 0, 0, 0, t1508, t1512, t1499, t1477, 0, 0, 0, 0, 0, 0, t1473, t1475, t1465, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1630, -qJDD(1), 0, t1563, 0, 0, 0, 0, 0, 0, 0, t1630, qJDD(1), t1549, 0, 0, 0, 0, 0, 0, t1587, t1589, -t1595, t1544, 0, 0, 0, 0, 0, 0, t1525, t1531, t1513, t1478, 0, 0, 0, 0, 0, 0, t1480, t1486, t1468, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1630, 0, t1562, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1630, -t1551, 0, 0, 0, 0, 0, 0, -t1567, -t1568, t1592, -t1515, 0, 0, 0, 0, 0, 0, -t1507, -t1511, -t1498, -t1476, 0, 0, 0, 0, 0, 0, -t1472, -t1474, -t1464, -t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, t1569, t1570, 0, t1516, 0, 0, 0, 0, 0, 0, t1508, t1512, t1499, t1477, 0, 0, 0, 0, 0, 0, t1473, t1475, t1465, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, 0, 0, 0, 0, 0, 0, t1569, t1570, 0, t1516, 0, 0, 0, 0, 0, 0, t1508, t1512, t1499, t1477, 0, 0, 0, 0, 0, 0, t1473, t1475, t1465, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1630, -qJDD(1), -t1549, 0, 0, 0, 0, 0, 0, -t1587, -t1589, t1595, -t1544, 0, 0, 0, 0, 0, 0, -t1525, -t1531, -t1513, -t1478, 0, 0, 0, 0, 0, 0, -t1480, -t1486, -t1468, -t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1630, t1551, 0, 0, 0, 0, 0, 0, t1567, t1568, -t1592, t1515, 0, 0, 0, 0, 0, 0, t1507, t1511, t1498, t1476, 0, 0, 0, 0, 0, 0, t1472, t1474, t1464, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1601, t1597, -t1607, t1540, 0, 0, 0, 0, 0, 0, t1526, t1532, t1514, t1479, 0, 0, 0, 0, 0, 0, t1481, t1487, t1469, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1596, t1602, -t1647, t1539, 0, 0, 0, 0, 0, 0, -t1535, -t1537, -t1552, -t1528, 0, 0, 0, 0, 0, 0, -t1503, -t1505, -t1517, -t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1587, t1589, -t1595, t1544, 0, 0, 0, 0, 0, 0, t1525, t1531, t1513, t1478, 0, 0, 0, 0, 0, 0, t1480, t1486, t1468, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1558, t1554, t1536, t1495, 0, 0, 0, 0, 0, 0, t1502, t1510, t1483, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1553, t1566, t1538, t1494, 0, 0, 0, 0, 0, 0, t1501, t1509, t1482, t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1535, t1537, t1552, t1528, 0, 0, 0, 0, 0, 0, t1503, t1505, t1517, t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1530, t1524, t1504, t1471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1523, t1541, t1506, t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1503, t1505, t1517, t1500;];
f_new_reg  = t1;
