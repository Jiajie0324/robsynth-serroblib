% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:23:51
% EndTime: 2019-03-09 02:24:01
% DurationCPUTime: 4.27s
% Computational Cost: add. (3073->356), mult. (6720->491), div. (0->0), fcn. (6640->8), ass. (0->313)
t339 = qJD(5) + qJD(6);
t264 = sin(qJ(5));
t266 = cos(qJ(6));
t384 = t266 * t264;
t263 = sin(qJ(6));
t267 = cos(qJ(5));
t390 = t263 * t267;
t204 = t384 + t390;
t268 = cos(qJ(4));
t379 = t268 * t204;
t445 = -t379 / 0.2e1;
t265 = sin(qJ(4));
t434 = pkin(8) + pkin(9);
t214 = t434 * t264;
t216 = t434 * t267;
t295 = -t214 * t266 - t216 * t263;
t405 = t295 * t265;
t444 = t405 / 0.2e1;
t147 = -t214 * t263 + t216 * t266;
t284 = t390 / 0.2e1 + t384 / 0.2e1;
t431 = -t204 / 0.2e1;
t273 = t431 + t284;
t117 = t273 * t265;
t119 = t273 * t268;
t417 = qJD(2) * t117 - qJD(3) * t119;
t443 = -t147 * t339 - t417;
t389 = t264 * t265;
t217 = t263 * t389;
t253 = t266 * t267;
t428 = t253 / 0.2e1;
t391 = t263 * t264;
t200 = -t253 + t391;
t432 = t200 / 0.2e1;
t300 = t428 + t432;
t120 = -t217 / 0.2e1 + t300 * t265;
t388 = t264 * t268;
t218 = t263 * t388;
t429 = t218 / 0.2e1;
t122 = -t268 * t300 + t429;
t407 = qJD(2) * t120 + qJD(3) * t122;
t442 = -t295 * t339 - t407;
t441 = 0.2e1 * t264;
t440 = t379 * t339;
t246 = -cos(pkin(10)) * pkin(1) - pkin(2) - pkin(7);
t425 = pkin(5) * t264;
t314 = -t246 + t425;
t298 = t314 * t268;
t292 = -t298 / 0.2e1;
t423 = t267 * pkin(5);
t255 = -pkin(4) - t423;
t396 = t255 * t379;
t439 = t200 * t292 - t396 / 0.2e1;
t291 = t298 / 0.2e1;
t382 = t267 * t268;
t173 = t266 * t382 - t218;
t395 = t255 * t173;
t438 = t204 * t291 + t395 / 0.2e1;
t258 = t264 ^ 2;
t260 = t267 ^ 2;
t228 = t260 - t258;
t312 = t382 * t441;
t275 = qJD(1) * t312 - qJD(4) * t228;
t437 = -pkin(5) / 0.2e1;
t248 = sin(pkin(10)) * pkin(1) + qJ(3);
t304 = pkin(4) * t265 - pkin(8) * t268;
t189 = t248 + t304;
t168 = t267 * t189;
t398 = t246 * t264;
t315 = pkin(5) - t398;
t338 = pkin(9) * t382;
t84 = t265 * t315 + t168 - t338;
t72 = t266 * t84;
t436 = -t72 / 0.2e1;
t435 = -t84 / 0.2e1;
t433 = -t173 / 0.2e1;
t430 = t204 / 0.2e1;
t259 = t265 ^ 2;
t427 = t259 / 0.2e1;
t426 = t268 / 0.2e1;
t424 = t265 * pkin(8);
t422 = t268 * pkin(4);
t35 = -t173 * t204 + t200 * t379;
t421 = t339 * t35;
t52 = t200 * t433 - t379 * t430;
t420 = t339 * t52;
t380 = t268 * t173;
t172 = t253 * t265 - t217;
t402 = t172 * t265;
t287 = -t402 / 0.2e1 - t380 / 0.2e1;
t301 = t428 - t391 / 0.2e1;
t59 = -t287 + t301;
t419 = t59 * qJD(3);
t62 = t287 + t301;
t418 = t62 * qJD(3);
t416 = pkin(5) * qJD(5);
t415 = pkin(5) * qJD(6);
t169 = t204 * t265;
t174 = t314 * t265;
t387 = t265 * t267;
t333 = t246 * t387;
t135 = t189 * t264 + t333;
t93 = -pkin(9) * t388 + t135;
t411 = t263 * t93;
t38 = -t72 + t411;
t215 = t422 + t424;
t207 = t267 * t215;
t111 = pkin(9) * t387 + t268 * t315 + t207;
t386 = t266 * t111;
t199 = t246 * t382;
t206 = t264 * t215;
t127 = pkin(9) * t389 + t199 + t206;
t392 = t263 * t127;
t1 = (t386 - t392) * t265 - t174 * t379 + (-t169 * t314 - t38) * t268;
t414 = t1 * qJD(1);
t385 = t266 * t127;
t409 = t266 * t93;
t39 = t263 * t84 + t409;
t393 = t263 * t111;
t2 = (t385 + t393) * t265 + t39 * t268 + t174 * t173 + t172 * t298;
t413 = t2 * qJD(1);
t134 = t246 * t389 - t168;
t92 = -t134 - t338;
t412 = t263 * t92;
t410 = t266 * t92;
t336 = t265 * t437;
t307 = t336 + t92 / 0.2e1;
t8 = (t435 + t307) * t263;
t408 = t8 * qJD(1);
t10 = t266 * t307 + t436;
t406 = t10 * qJD(1);
t404 = t147 * t265;
t403 = t169 * t265;
t42 = -t409 - t412;
t18 = t42 * t265 + (t173 * t314 + t379 * t423) * t268;
t401 = t18 * qJD(1);
t115 = t379 * t298;
t43 = t410 - t411;
t19 = t265 * t43 - t380 * t423 + t115;
t400 = t19 * qJD(1);
t24 = -t265 * t38 + t115;
t399 = t24 * qJD(1);
t25 = t173 * t298 - t39 * t265;
t397 = t25 * qJD(1);
t261 = t268 ^ 2;
t394 = t261 * t264;
t254 = t261 * t267;
t383 = t267 * t259;
t381 = t268 * t379;
t332 = t246 * t388;
t44 = -t134 * t268 + (t207 + t332) * t265;
t378 = t44 * qJD(1);
t45 = t135 * t268 + (-t199 + t206) * t265;
t377 = t45 * qJD(1);
t47 = t169 * t173 + t172 * t379;
t376 = t47 * qJD(1);
t375 = t59 * qJD(1);
t288 = t403 / 0.2e1 + t381 / 0.2e1;
t60 = -t284 - t288;
t374 = t60 * qJD(1);
t64 = -t134 * t265 - t246 * t394;
t373 = t64 * qJD(1);
t65 = -t135 * t265 - t246 * t254;
t372 = t65 * qJD(1);
t82 = -t381 + t403;
t371 = t82 * qJD(1);
t83 = t380 - t402;
t370 = t83 * qJD(1);
t316 = -t253 / 0.2e1;
t121 = t217 / 0.2e1 + (t316 + t432) * t265;
t367 = t339 * t121;
t366 = t339 * t120;
t365 = t339 * t173;
t341 = t268 * qJD(4);
t241 = t264 * t341;
t357 = qJD(5) * t267;
t245 = t265 * t357;
t364 = t245 + t241;
t227 = t259 - t261;
t363 = qJD(1) * t173;
t362 = qJD(3) * t265;
t361 = qJD(4) * t204;
t360 = qJD(4) * t255;
t359 = qJD(4) * t267;
t358 = qJD(5) * t264;
t356 = qJD(6) * t255;
t118 = (t430 + t284) * t265;
t95 = t118 * qJD(1);
t97 = t120 * qJD(4);
t99 = t121 * qJD(1);
t352 = t121 * qJD(4);
t337 = 0.1e1 / 0.2e1 + t427;
t175 = (-t261 / 0.2e1 - t337) * t264;
t350 = t175 * qJD(1);
t176 = t254 / 0.2e1 + t337 * t267;
t349 = t176 * qJD(1);
t203 = t227 * t264;
t348 = t203 * qJD(1);
t205 = -t254 + t383;
t347 = t205 * qJD(1);
t346 = t227 * qJD(1);
t345 = t248 * qJD(1);
t344 = t265 * qJD(1);
t343 = t265 * qJD(4);
t342 = t268 * qJD(1);
t340 = t268 * qJD(5);
t335 = -t423 / 0.2e1;
t334 = pkin(5) * t426;
t331 = t200 * t341;
t330 = t264 * t340;
t329 = t267 * t340;
t328 = t173 * t344;
t327 = t200 * t344;
t326 = t204 * t344;
t325 = t248 * t344;
t324 = t248 * t342;
t323 = t264 * t357;
t322 = t264 * t359;
t321 = t267 * t341;
t243 = t265 * t341;
t320 = t265 * t342;
t319 = t404 / 0.2e1;
t318 = -t392 / 0.2e1;
t317 = -t385 / 0.2e1;
t313 = pkin(5) * t339;
t311 = t339 * t204;
t310 = t339 * t265;
t309 = t267 * t334;
t308 = -qJD(5) - t344;
t306 = t344 + qJD(5) / 0.2e1;
t305 = t334 + t111 / 0.2e1;
t302 = qJD(4) * t312;
t244 = t265 * t358;
t299 = t244 - t321;
t112 = t200 * t425 + t204 * t255;
t269 = t425 * t445 + t319;
t285 = t318 + t386 / 0.2e1;
t271 = -t395 / 0.2e1 + t285;
t4 = (t266 * pkin(5) / 0.2e1 + t200 * t335 + t314 * t431) * t268 + t269 + t271;
t297 = -qJD(1) * t4 + qJD(4) * t112;
t113 = -t200 * t255 + t204 * t425;
t270 = t425 * t433 + t444;
t286 = -t393 / 0.2e1 + t317;
t272 = t396 / 0.2e1 + t286;
t3 = (t204 * t335 + t263 * t437 + t314 * t432) * t268 + t270 + t272;
t296 = -qJD(1) * t3 + qJD(4) * t113;
t63 = -t173 ^ 2 + t379 ^ 2;
t16 = qJD(1) * t63 + qJD(4) * t35;
t89 = t200 ^ 2 - t204 ^ 2;
t20 = qJD(1) * t35 + qJD(4) * t89;
t294 = t308 * t268;
t293 = t424 / 0.2e1 + t422 / 0.2e1;
t278 = t293 * t264;
t140 = t206 / 0.2e1 + t278;
t290 = pkin(4) * t359 - qJD(1) * t140;
t279 = t293 * t267;
t141 = -t207 / 0.2e1 - t279;
t289 = pkin(4) * qJD(4) * t264 - qJD(1) * t141;
t12 = t204 * t292 + t271 + t319;
t283 = qJD(1) * t12 - t204 * t360;
t13 = t200 * t291 + t272 + t444;
t282 = qJD(1) * t13 + t200 * t360;
t27 = qJD(4) * t52 - t363 * t379;
t37 = -qJD(1) * t52 + t200 * t361;
t281 = t267 * t294;
t190 = (t258 / 0.2e1 - t260 / 0.2e1) * t268;
t280 = -qJD(1) * t190 + t322;
t277 = qJD(1) * t254 * t264 + qJD(4) * t190;
t202 = t228 * t261;
t276 = qJD(1) * t202 + t302;
t274 = t284 * t265;
t252 = -t342 / 0.2e1;
t251 = t342 / 0.2e1;
t250 = t341 / 0.2e1;
t242 = t267 * t344;
t240 = t264 * t343;
t239 = t264 * t344;
t197 = t306 * t268;
t188 = t240 - t329;
t187 = t267 * t343 + t330;
t186 = t190 * qJD(5);
t184 = t204 * t341;
t178 = -t383 / 0.2e1 - t254 / 0.2e1 + t267 / 0.2e1;
t177 = t394 / 0.2e1 + (t427 - 0.1e1 / 0.2e1) * t264;
t167 = (qJD(6) / 0.2e1 + t306) * t268;
t126 = -t169 / 0.2e1 + t274;
t125 = t169 / 0.2e1 + t274;
t124 = -t268 * t284 + t445;
t123 = t200 * t426 + t268 * t316 + t429;
t86 = -t332 + t207 / 0.2e1 - t279;
t85 = -t199 - t206 / 0.2e1 + t278;
t61 = -t284 + t288;
t57 = t61 * qJD(3);
t56 = t60 * qJD(3);
t54 = qJD(4) * t118 + t328;
t53 = t344 * t379 + t352;
t49 = -t311 - t95;
t48 = -t200 * t339 - t99;
t46 = -t352 + t440;
t41 = t117 * qJD(4);
t32 = qJD(4) * t122 + t374;
t31 = -qJD(4) * t119 + t375;
t30 = qJD(4) * t126 - t328 - t365;
t29 = -t97 + (-qJD(6) + t308) * t379;
t26 = qJD(4) * t125 - t365;
t23 = t124 * qJD(4) - t172 * t339 - t375;
t22 = t123 * qJD(4) + t169 * t339 - t374;
t15 = -t404 / 0.2e1 + t285 + t438;
t14 = -t405 / 0.2e1 + t286 + t439;
t11 = t266 * t336 + t411 + t436 - t410 / 0.2e1;
t9 = -t409 - t412 / 0.2e1 + (t336 + t435) * t263;
t6 = t204 * t309 - t263 * t305 - t270 + t317 + t439;
t5 = t200 * t309 + t266 * t305 - t269 + t318 + t438;
t7 = [0, 0, 0, 0, 0, qJD(3), t248 * qJD(3), -t243, t227 * qJD(4), 0, 0, 0, t248 * t341 + t362, qJD(3) * t268 - t248 * t343, -t243 * t260 - t261 * t323, -qJD(5) * t202 + t265 * t302, -qJD(4) * t205 - t265 * t330, qJD(4) * t203 - t265 * t329, t243, qJD(4) * t44 + qJD(5) * t65 + t267 * t362, -qJD(4) * t45 - qJD(5) * t64 - t264 * t362 (-qJD(4) * t172 - t440) * t173, t47 * qJD(4) + t339 * t63, t83 * qJD(4) - t310 * t379, t82 * qJD(4) - t173 * t310, t243, qJD(4) * t1 + qJD(5) * t18 + qJD(6) * t25 - t200 * t362, -qJD(4) * t2 - qJD(5) * t19 - qJD(6) * t24 - t204 * t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, qJD(1), t345, 0, 0, 0, 0, 0, t344, t342, 0, 0, 0, 0, 0, qJD(5) * t178 + t242, qJD(5) * t177 - t239, 0, 0, 0, 0, 0, t339 * t62 - t327, t339 * t61 - t326; 0, 0, 0, 0, 0, 0, 0, -t320, t346, -t343, -t341, 0, -t246 * t343 + t324, -t246 * t341 - t325, -t186 + (-t260 * t342 - t322) * t265, t265 * t275 - 0.2e1 * t268 * t323, t241 - t347, t321 + t348, t197, t378 + (t264 * t304 - t333) * qJD(4) + t86 * qJD(5), -t377 + (-pkin(8) * t382 + (pkin(4) * t267 + t398) * t265) * qJD(4) + t85 * qJD(5) (-t361 - t363) * t172 + t420, t376 + (t169 * t204 + t172 * t200) * qJD(4) + t421, t184 - t366 + t370, t126 * t339 - t331 + t371, t167, t414 + (-t169 * t255 - t174 * t200 + t268 * t295) * qJD(4) + t5 * qJD(5) + t15 * qJD(6), -t413 + (-t147 * t268 - t172 * t255 - t174 * t204) * qJD(4) + t6 * qJD(5) + t14 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277, -t276, t264 * t294, t281, t250, qJD(3) * t178 + qJD(4) * t86 - qJD(5) * t135 + t372, qJD(3) * t177 + qJD(4) * t85 + qJD(5) * t134 - t373, t27, t16, t29, t30, t250, qJD(4) * t5 + qJD(5) * t42 + qJD(6) * t9 + t401 + t418, qJD(4) * t6 - qJD(5) * t43 + qJD(6) * t11 - t400 + t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, t16, t29, t30, t250, qJD(4) * t15 + qJD(5) * t9 - qJD(6) * t39 + t397 + t418, qJD(4) * t14 + qJD(5) * t11 + qJD(6) * t38 - t399 + t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341, t343, 0, 0, 0, 0, 0, t299, t364, 0, 0, 0, 0, 0, t125 * t339 + t331, t184 - t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t187, 0, 0, 0, 0, 0, t26, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, t46; 0, 0, 0, 0, 0, -qJD(1), -t345, 0, 0, 0, 0, 0, -t344, -t342, 0, 0, 0, 0, 0, -qJD(5) * t176 - t242, -qJD(5) * t175 + t239, 0, 0, 0, 0, 0, -t339 * t59 + t327, -t339 * t60 + t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343, -t341, 0, 0, 0, 0, 0, -t187, t188, 0, 0, 0, 0, 0, t124 * t339 + t200 * t343, t123 * t339 + t204 * t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t349 - t364, t299 - t350, 0, 0, 0, 0, 0, t23, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, t22; 0, 0, 0, 0, 0, 0, 0, t320, -t346, 0, 0, 0, -t324, t325, t260 * t320 - t186, t281 * t441, t245 + t347, -t244 - t348, -t197, qJD(5) * t141 - t378, qJD(5) * t140 + t377, t172 * t363 + t420, -t376 + t421, -t367 - t370, -t118 * t339 - t371, -t167, -qJD(5) * t4 - qJD(6) * t12 - t414, -qJD(5) * t3 - qJD(6) * t13 + t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339 * t117, -t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339 * t119, -t339 * t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, t228 * qJD(5), 0, 0, 0, -pkin(4) * t358, -pkin(4) * t357, -t200 * t311, t339 * t89, 0, 0, 0, qJD(5) * t112 + t204 * t356, qJD(5) * t113 - t200 * t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, -t275, t242 + t357, -t239 - t358, t252, -pkin(8) * t357 - t289, pkin(8) * t358 - t290, -t37, t20, t48, t49, t252, t297 + t443, t296 + t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t20, t48, t49, t252, -t283 + t443, -t282 + t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, t276 (t264 * t342 - t359) * t265, t267 * t320 + t240, t250, qJD(3) * t176 - qJD(4) * t141 - t372, qJD(3) * t175 - qJD(4) * t140 + t373, -t27, -t16, t53, t54, t250, qJD(4) * t4 + qJD(6) * t8 - t401 + t419, qJD(4) * t3 + qJD(6) * t10 + t400 + t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t349, t350, 0, 0, 0, 0, 0, t31, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t275, -t242, t239, t251, t289, t290, t37, -t20, t99, t95, t251, -t297 + t417, -t296 + t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263 * t415, -t266 * t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263 * t313 + t408, -t266 * t313 + t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t16, t53, t54, t250, qJD(4) * t12 - qJD(5) * t8 - t397 + t419, qJD(4) * t13 - qJD(5) * t10 + t399 + t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t20, t99, t95, t251, t283 + t417, t282 + t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263 * t416 - t408, t266 * t416 - t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
