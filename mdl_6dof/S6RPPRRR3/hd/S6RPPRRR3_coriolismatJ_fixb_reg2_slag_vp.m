% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:24:02
% EndTime: 2019-03-09 02:24:15
% DurationCPUTime: 13.09s
% Computational Cost: add. (12812->581), mult. (24826->784), div. (0->0), fcn. (24764->8), ass. (0->439)
t543 = sin(qJ(4));
t852 = -t543 / 0.2e1;
t544 = cos(qJ(5));
t830 = -pkin(9) - pkin(8);
t479 = t830 * t544;
t541 = sin(qJ(6));
t542 = sin(qJ(5));
t805 = cos(qJ(6));
t647 = t805 * t542;
t617 = -t541 * t479 - t830 * t647;
t825 = t617 / 0.2e1;
t664 = qJD(5) + qJD(6);
t734 = t541 * t542;
t381 = -t479 * t805 + t734 * t830;
t545 = cos(qJ(4));
t730 = t542 * t545;
t481 = t541 * t730;
t528 = t805 * t544;
t429 = t528 * t545 - t481;
t520 = -cos(pkin(10)) * pkin(1) - pkin(2) - pkin(7);
t804 = pkin(5) * t542;
t621 = -t520 + t804;
t431 = t621 * t545;
t733 = t541 * t544;
t464 = t647 + t733;
t819 = -t464 / 0.2e1;
t532 = -pkin(5) * t544 - pkin(4);
t848 = -t532 / 0.2e1;
t851 = t381 * t852 - t429 * t848 - t431 * t819;
t427 = t545 * t464;
t459 = -t528 + t734;
t849 = -t431 * t459 / 0.2e1 + t427 * t848 + t543 * t825;
t744 = t464 * t427;
t750 = t429 * t459;
t198 = -t744 / 0.2e1 - t750 / 0.2e1;
t850 = t664 * t198;
t727 = t544 * t545;
t458 = t520 * t727;
t798 = t545 * pkin(4);
t800 = t543 * pkin(8);
t478 = t798 + t800;
t466 = t542 * t478;
t375 = t458 + t466;
t731 = t542 * t543;
t341 = pkin(9) * t731 + t375;
t651 = t805 * t341;
t610 = -t651 / 0.2e1;
t468 = t544 * t478;
t732 = t542 * t520;
t622 = pkin(5) - t732;
t729 = t543 * t544;
t317 = pkin(9) * t729 + t545 * t622 + t468;
t736 = t541 * t317;
t574 = -t736 / 0.2e1 + t610;
t57 = t574 - t849;
t652 = t805 * t317;
t735 = t541 * t341;
t573 = -t735 / 0.2e1 + t652 / 0.2e1;
t59 = t573 + t851;
t56 = t573 - t851;
t823 = -t427 / 0.2e1;
t846 = t429 * t664;
t426 = t464 * t543;
t480 = t541 * t731;
t428 = t528 * t543 - t480;
t531 = t545 * t543;
t170 = t426 * t427 + t429 * t428 - t531;
t844 = qJD(4) * t170;
t696 = qJD(4) * t464;
t843 = -qJD(1) * t198 + t459 * t696;
t700 = qJD(1) * t429;
t842 = -qJD(4) * t198 + t427 * t700;
t816 = t528 / 0.2e1;
t820 = t459 / 0.2e1;
t590 = t816 + t820;
t328 = -t480 / 0.2e1 + t590 * t543;
t817 = t481 / 0.2e1;
t330 = -t545 * t590 + t817;
t714 = t328 * qJD(2) + t330 * qJD(3);
t841 = t617 * t664 - t714;
t572 = t733 / 0.2e1 + t647 / 0.2e1;
t561 = t819 + t572;
t325 = t561 * t543;
t327 = t561 * t545;
t715 = t325 * qJD(2) - t327 * qJD(3);
t840 = -t381 * t664 - t715;
t839 = 0.2e1 * t542;
t821 = t429 / 0.2e1;
t806 = t545 / 0.2e1;
t838 = t427 * t664;
t616 = t664 * t464;
t837 = t459 * t616;
t538 = t543 ^ 2;
t540 = t545 ^ 2;
t496 = t538 - t540;
t812 = -t540 / 0.2e1;
t813 = t538 / 0.2e1;
t835 = t812 + t813;
t537 = t542 ^ 2;
t539 = t544 ^ 2;
t497 = t539 - t537;
t618 = t727 * t839;
t570 = qJD(1) * t618 - t497 * qJD(4);
t832 = t427 ^ 2;
t831 = t429 ^ 2;
t522 = sin(pkin(10)) * pkin(1) + qJ(3);
t564 = t545 * t830 + t522;
t799 = t544 * pkin(4);
t548 = t564 * t544 + (t622 + t799) * t543;
t227 = t805 * t548;
t802 = t543 * pkin(4);
t607 = -t545 * pkin(8) + t802;
t560 = t522 + t607;
t557 = t542 * t560;
t656 = t520 * t729;
t552 = t557 + t656;
t275 = -pkin(9) * t730 + t552;
t737 = t541 * t275;
t159 = -t227 + t737;
t829 = t159 / 0.2e1;
t546 = t541 * t548;
t653 = t805 * t275;
t160 = t653 + t546;
t828 = -t160 / 0.2e1;
t657 = t520 * t731;
t274 = -t657 + (t564 + t802) * t544;
t654 = t805 * t274;
t164 = t654 - t737;
t827 = -t164 / 0.2e1;
t826 = -t381 / 0.2e1;
t824 = -t426 / 0.2e1;
t822 = t428 / 0.2e1;
t818 = t464 / 0.2e1;
t530 = t540 * t544;
t815 = -t530 / 0.2e1;
t814 = t530 / 0.2e1;
t811 = -t541 / 0.2e1;
t810 = -t542 / 0.2e1;
t809 = t542 / 0.2e1;
t808 = t543 / 0.2e1;
t807 = -t544 / 0.2e1;
t803 = t541 * pkin(5);
t801 = t543 * pkin(5);
t797 = t545 * pkin(5);
t791 = pkin(5) * qJD(5);
t549 = t552 * t542;
t310 = t543 * t549;
t550 = t552 * t543;
t173 = t310 / 0.2e1 - t550 * t809;
t556 = t544 * t560;
t358 = -t556 + t657;
t655 = t520 * t730;
t374 = t468 - t655;
t551 = t544 * t552;
t630 = t730 / 0.2e1;
t633 = -t731 / 0.2e1;
t61 = t375 * t729 / 0.2e1 + t551 * t806 + t374 * t633 + t358 * t630 - t520 * t531;
t782 = t61 * qJD(4) - t173 * qJD(5);
t738 = t541 * t274;
t163 = -t653 - t738;
t663 = pkin(5) * t727;
t747 = t431 * t429;
t76 = t163 * t543 + t427 * t663 + t747;
t781 = qJD(1) * t76;
t323 = t431 * t427;
t77 = t164 * t543 - t429 * t663 + t323;
t780 = qJD(1) * t77;
t96 = -t159 * t543 + t323;
t779 = qJD(1) * t96;
t97 = -t160 * t543 + t747;
t778 = qJD(1) * t97;
t648 = t805 * t459;
t743 = t464 * t541;
t575 = t743 / 0.2e1 - t648 / 0.2e1;
t627 = t164 / 0.2e1 + t829;
t628 = t160 / 0.2e1 + t163 / 0.2e1;
t10 = -t627 * t428 + t628 * t426 + (t814 + t575) * pkin(5);
t775 = t10 * qJD(1);
t774 = t159 * t428;
t773 = t159 * t459;
t629 = t727 / 0.2e1;
t614 = pkin(5) * t629;
t16 = -t427 * t628 + t429 * t627 + t543 * t614;
t772 = t16 * qJD(1);
t771 = t160 * t426;
t770 = t160 * t464;
t20 = (-t160 - t163) * t429 + (-t159 - t164) * t427;
t769 = t20 * qJD(1);
t175 = t652 - t735;
t176 = t651 + t736;
t21 = -t175 * t429 - t176 * t427 + t771 - t774;
t768 = t21 * qJD(1);
t430 = t621 * t543;
t29 = -t159 * t545 + t175 * t543 - t431 * t426 - t430 * t427;
t767 = t29 * qJD(1);
t30 = t160 * t545 + t176 * t543 + t431 * t428 + t430 * t429;
t766 = t30 * qJD(1);
t764 = t617 * t427;
t763 = t617 * t428;
t760 = t381 * t426;
t757 = t426 * t464;
t756 = t426 * t541;
t755 = t426 * t543;
t754 = t427 * t459;
t753 = t428 * t543;
t751 = t429 * t381;
t749 = t429 * t464;
t748 = t429 * t541;
t632 = t731 / 0.2e1;
t47 = (-t801 + t520 * t632 - t556 / 0.2e1 + pkin(9) * t629 + t274 / 0.2e1) * t541;
t742 = t47 * qJD(1);
t658 = -t801 / 0.2e1;
t581 = -t227 / 0.2e1 + t805 * t658;
t49 = t654 / 0.2e1 + t581;
t741 = t49 * qJD(1);
t728 = t544 * t538;
t726 = t545 * t427;
t725 = t545 * t429;
t81 = t358 * t729 - t310 + (t374 * t544 + t375 * t542) * t545;
t724 = t81 * qJD(1);
t152 = -t749 + t754;
t722 = t664 * t152;
t585 = -t753 / 0.2e1 - t725 / 0.2e1;
t604 = t816 - t734 / 0.2e1;
t208 = -t585 + t604;
t719 = t208 * qJD(3);
t211 = t585 + t604;
t718 = t211 * qJD(3);
t609 = -t528 / 0.2e1;
t329 = t480 / 0.2e1 + (t609 + t820) * t543;
t711 = t664 * t329;
t710 = t664 * t328;
t666 = t545 * qJD(4);
t514 = t542 * t666;
t692 = qJD(5) * t544;
t519 = t543 * t692;
t708 = t519 + t514;
t707 = t537 + t539;
t189 = -t358 * t544 + t549;
t706 = qJD(1) * t189;
t196 = t749 / 0.2e1 + t754 / 0.2e1;
t705 = qJD(1) * t196;
t596 = t744 - t750;
t704 = qJD(1) * t596;
t213 = -t358 * t543 - t540 * t732;
t703 = qJD(1) * t213;
t256 = t725 - t753;
t702 = qJD(1) * t256;
t701 = qJD(1) * t427;
t465 = -t530 + t728;
t699 = qJD(1) * t465;
t698 = qJD(3) * t173;
t697 = qJD(3) * t543;
t695 = qJD(4) * t532;
t694 = qJD(4) * t544;
t693 = qJD(5) * t542;
t691 = qJD(6) * t532;
t167 = -t358 * t545 + (t374 + 0.2e1 * t655) * t543;
t690 = t167 * qJD(1);
t168 = t545 * t557 + (t375 - t458) * t543;
t689 = t168 * qJD(1);
t688 = t173 * qJD(1);
t186 = t429 * t426 + t428 * t427;
t687 = t186 * qJD(1);
t686 = t208 * qJD(1);
t586 = t755 / 0.2e1 + t726 / 0.2e1;
t209 = -t572 - t586;
t685 = t209 * qJD(1);
t214 = -t520 * t530 - t550;
t684 = t214 * qJD(1);
t255 = -t726 + t755;
t683 = t255 * qJD(1);
t326 = (t818 + t572) * t543;
t277 = t326 * qJD(1);
t279 = t328 * qJD(4);
t281 = t329 * qJD(1);
t679 = t329 * qJD(4);
t619 = t707 * t545;
t385 = t543 * t619 - t531;
t677 = t385 * qJD(4);
t661 = 0.1e1 / 0.2e1 + t813;
t432 = (t812 - t661) * t542;
t676 = t432 * qJD(1);
t433 = t544 * t661 + t814;
t675 = t433 * qJD(1);
t527 = t537 * t545;
t529 = t539 * t545;
t447 = t527 / 0.2e1 - t529 / 0.2e1;
t674 = t447 * qJD(5);
t462 = -t527 - t529;
t673 = t462 * qJD(1);
t463 = t496 * t542;
t672 = t463 * qJD(1);
t671 = t496 * qJD(1);
t670 = t522 * qJD(1);
t669 = t543 * qJD(1);
t668 = t543 * qJD(4);
t667 = t545 * qJD(1);
t665 = t545 * qJD(5);
t662 = t805 / 0.2e1;
t102 = -t428 ^ 2 / 0.2e1 + t831 / 0.2e1 - t426 ^ 2 / 0.2e1 + t832 / 0.2e1 + t835;
t660 = t102 * qJD(4);
t659 = t804 / 0.2e1;
t650 = t805 * t427;
t649 = t805 * t428;
t645 = t429 * t669;
t643 = t542 * t694;
t642 = t544 * t666;
t641 = t459 * t666;
t640 = t542 * t665;
t639 = t544 * t665;
t638 = t459 * t669;
t637 = t464 * t669;
t636 = t522 * t669;
t635 = t522 * t667;
t634 = t542 * t692;
t517 = t543 * t666;
t516 = t543 * t667;
t631 = -t730 / 0.2e1;
t626 = -t617 / 0.2e1 + t825;
t625 = t381 / 0.2e1 + t826;
t624 = t805 * qJD(5);
t623 = t805 * qJD(6);
t620 = t707 * t543;
t615 = t664 * t543;
t613 = -qJD(5) - t669;
t611 = t540 * t634;
t606 = qJD(4) * t618;
t518 = t543 * t693;
t603 = t518 - t642;
t563 = (t756 / 0.2e1 + t649 / 0.2e1) * pkin(5);
t4 = t427 * t626 + t429 * t625 + t459 * t627 + t464 * t628 + t563;
t602 = t4 * qJD(1);
t14 = t159 * t824 + t175 * t823 + t176 * t821 + t428 * t828 - t430 * t808 + t431 * t806;
t24 = -t159 * t175 + t160 * t176 - t430 * t431;
t601 = t24 * qJD(1) + t14 * qJD(2);
t23 = -t159 * t163 + t160 * t164 + t431 * t663;
t600 = t23 * qJD(1) + t16 * qJD(2);
t597 = -t374 * t542 + t375 * t544;
t41 = t770 + t773;
t595 = t41 * qJD(1) + t196 * qJD(2);
t318 = t459 * t804 + t464 * t532;
t38 = (t427 * t810 + (t459 * t807 + t662) * t545) * pkin(5) + t56;
t594 = qJD(1) * t38 - qJD(4) * t318;
t319 = -t459 * t532 + t464 * t804;
t37 = (t429 * t810 + (t464 * t807 + t811) * t545) * pkin(5) + t57;
t593 = qJD(1) * t37 - qJD(4) * t319;
t592 = t613 * t545;
t212 = -t831 + t832;
t64 = qJD(1) * t212 + qJD(4) * t152;
t263 = t459 ^ 2 - t464 ^ 2;
t82 = qJD(1) * t152 + qJD(4) * t263;
t591 = t800 / 0.2e1 + t798 / 0.2e1;
t579 = t591 * t542;
t366 = t466 / 0.2e1 + t579;
t589 = pkin(4) * t694 - qJD(1) * t366;
t580 = t591 * t544;
t367 = -t468 / 0.2e1 - t580;
t588 = pkin(4) * qJD(4) * t542 - qJD(1) * t367;
t587 = t381 * t818 + t617 * t820;
t584 = qJD(1) * t57 + t459 * t695;
t583 = qJD(1) * t56 - t464 * t695;
t582 = t544 * t592;
t384 = -qJD(1) * t447 + t643;
t578 = t176 * t541 / 0.2e1 + t175 * t662;
t577 = t426 * t662 + t428 * t811;
t576 = t748 / 0.2e1 - t650 / 0.2e1;
t372 = qJD(1) * t530 * t542 + qJD(4) * t447;
t461 = t497 * t540;
t571 = t461 * qJD(1) + t606;
t55 = t358 * t633 + t374 * t631 + t375 * t629 + t835 * t520 + t551 * t852;
t86 = -t520 ^ 2 * t531 - t358 * t374 + t375 * t552;
t569 = t86 * qJD(1) + t55 * qJD(2) + t61 * qJD(3);
t547 = t160 * t821 + t175 * t824 + t176 * t822 + t427 * t829 + t430 * t806 + t431 * t808;
t8 = -t547 + t587;
t568 = -t8 * qJD(1) + t102 * qJD(2) + t170 * qJD(3);
t567 = t14 * qJD(1) - qJD(2) * t170 + t102 * qJD(3);
t336 = t496 * (t539 / 0.2e1 + t537 / 0.2e1 - 0.1e1 / 0.2e1);
t566 = t55 * qJD(1) - t385 * qJD(2) - t336 * qJD(3);
t565 = t61 * qJD(1) - t336 * qJD(2) + t385 * qJD(3);
t562 = t572 * t543;
t111 = t532 * t804;
t555 = t159 * t826 + t163 * t825 + t381 * t827 - t617 * t828;
t2 = (t431 * t810 + t727 * t848 + t578) * pkin(5) + t555;
t33 = -t626 * t429 + t625 * t427 + (t633 + t577) * pkin(5);
t34 = -t626 * t428 + t625 * t426 + (t630 + t576) * pkin(5);
t558 = -t2 * qJD(1) - t33 * qJD(2) - t34 * qJD(3) + t111 * qJD(4);
t526 = -t667 / 0.2e1;
t525 = t667 / 0.2e1;
t524 = t666 / 0.2e1;
t515 = t544 * t669;
t513 = t542 * t668;
t512 = t542 * t669;
t482 = t522 * qJD(3);
t455 = t516 + t665 / 0.2e1;
t446 = t513 - t639;
t445 = t544 * t668 + t640;
t441 = t464 * t666;
t435 = -t728 / 0.2e1 + t815 + t544 / 0.2e1;
t434 = t810 + (t538 + t540) * t809;
t422 = t516 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t545;
t361 = t428 * t459;
t334 = t824 + t562;
t333 = t426 / 0.2e1 + t562;
t332 = -t545 * t572 + t823;
t331 = t459 * t806 + t545 * t609 + t817;
t316 = t336 * qJD(4);
t258 = -t655 + t468 / 0.2e1 - t580;
t257 = -t458 - t466 / 0.2e1 + t579;
t210 = -t572 + t586;
t206 = t210 * qJD(3);
t205 = t209 * qJD(3);
t203 = qJD(4) * t326 + t645;
t202 = t427 * t669 + t679;
t191 = -t616 - t277;
t190 = -t459 * t664 - t281;
t172 = -t679 + t838;
t162 = qJD(4) * t325;
t145 = qJD(4) * t330 + t685;
t144 = -qJD(4) * t327 + t686;
t141 = qJD(4) * t334 - t645 - t846;
t140 = -t279 + (-qJD(6) + t613) * t427;
t100 = qJD(4) * t333 - t846;
t85 = t332 * qJD(4) - t428 * t664 - t686;
t84 = t331 * qJD(4) + t426 * t664 - t685;
t58 = t574 + t849;
t50 = t737 - t654 / 0.2e1 + t581;
t48 = t541 * t658 - t653 - t546 / 0.2e1 - t738 / 0.2e1;
t40 = t429 * t659 + t464 * t614 + t610 + (-t797 / 0.2e1 - t317 / 0.2e1) * t541 + t849;
t39 = t427 * t659 + t459 * t614 + t662 * t797 + t59;
t36 = -t617 * t821 + t429 * t825 + (t577 + t632) * pkin(5);
t35 = -t381 * t824 - t617 * t822 - t760 / 0.2e1 + t763 / 0.2e1 + (t576 + t631) * pkin(5);
t28 = qJD(4) * t55;
t11 = t163 * t824 + t164 * t822 + t774 / 0.2e1 - t771 / 0.2e1 + (t575 + t815) * pkin(5);
t9 = t547 + t587;
t5 = t163 * t819 + t381 * t821 - t617 * t823 + t459 * t827 + t563 - t773 / 0.2e1 - t770 / 0.2e1 - t764 / 0.2e1 - t751 / 0.2e1;
t3 = pkin(5) * t578 + t431 * t659 + t532 * t614 - t555;
t1 = qJD(3) * t196 + qJD(4) * t14 + qJD(5) * t16;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t482, -t517, t496 * qJD(4), 0, t517, 0, 0, t522 * t666 + t697, qJD(3) * t545 - t522 * t668, 0, t482, -t517 * t539 - t611, -t461 * qJD(5) + t543 * t606, -t465 * qJD(4) - t543 * t640, -t517 * t537 + t611, t463 * qJD(4) - t543 * t639, t517, qJD(4) * t167 + qJD(5) * t214 + t544 * t697, -qJD(4) * t168 - qJD(5) * t213 - t542 * t697, qJD(3) * t462 - qJD(4) * t81, qJD(3) * t189 + qJD(4) * t86 (-qJD(4) * t428 - t838) * t429, qJD(4) * t186 + t212 * t664, t256 * qJD(4) - t427 * t615 (-qJD(4) * t426 + t846) * t427, t255 * qJD(4) - t429 * t615, t517, qJD(4) * t29 + qJD(5) * t76 + qJD(6) * t97 - t459 * t697, -qJD(4) * t30 - qJD(5) * t77 - qJD(6) * t96 - t464 * t697, -qJD(3) * t596 + qJD(4) * t21 + qJD(5) * t20, qJD(3) * t41 + qJD(4) * t24 + qJD(5) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t670, 0, 0, 0, 0, 0, 0, t669, t667, 0, t670, 0, 0, 0, 0, 0, 0, qJD(5) * t435 + t515, qJD(5) * t434 - t512, t673, t706 + t782, 0, 0, 0, 0, 0, 0, t211 * t664 - t638, t210 * t664 - t637, -t704 (t426 * t459 + t464 * t428) * qJD(3) + t9 * qJD(4) + t11 * qJD(5) + t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t516, t671, -t668, t516, -t666, 0, -t520 * t668 + t635, -t520 * t666 - t636, 0, 0, -t674 + (-t539 * t667 - t643) * t543, t543 * t570 - 0.2e1 * t545 * t634, t514 - t699, t674 + (-t537 * t667 + t643) * t543, t642 + t672, t455, t690 + (t542 * t607 - t656) * qJD(4) + t258 * qJD(5), -t689 + (-pkin(8) * t727 + (t732 + t799) * t543) * qJD(4) + t257 * qJD(5), qJD(4) * t597 - t724 (pkin(8) * t597 - t520 * t802) * qJD(4) + t569 (-t696 - t700) * t428 + t850, t687 + (t361 + t757) * qJD(4) + t722, t441 + t702 - t710 (-qJD(4) * t459 - t701) * t426 - t850, t334 * t664 - t641 + t683, t422, t767 + (-t532 * t426 - t430 * t459 - t545 * t617) * qJD(4) + t39 * qJD(5) + t59 * qJD(6), -t766 + (-t381 * t545 - t532 * t428 - t430 * t464) * qJD(4) + t40 * qJD(5) + t58 * qJD(6), t768 + (-t175 * t464 - t176 * t459 + t760 - t763) * qJD(4) + t5 * qJD(5), t9 * qJD(3) + (-t175 * t617 + t176 * t381 - t430 * t532) * qJD(4) + t3 * qJD(5) + t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, -t571, t542 * t592, t372, t582, t524, t435 * qJD(3) + t258 * qJD(4) - qJD(5) * t552 + t684, qJD(3) * t434 + qJD(4) * t257 + qJD(5) * t358 - t703, 0, -t698, -t842, t64, t140, t842, t141, t524, qJD(4) * t39 + qJD(5) * t163 + qJD(6) * t48 + t718 + t781, qJD(4) * t40 - qJD(5) * t164 + qJD(6) * t50 + t206 - t780, t769 + t5 * qJD(4) + (t650 - t748) * t791, t11 * qJD(3) + t3 * qJD(4) + (t163 * t805 + t164 * t541) * t791 + t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t842, t64, t140, t842, t141, t524, qJD(4) * t59 + qJD(5) * t48 - qJD(6) * t160 + t718 + t778, qJD(4) * t58 + qJD(5) * t50 + qJD(6) * t159 + t206 - t779, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t677, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, 0, 0, 0, 0, 0, 0, 0, 0, 0, t660 + t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t666, t668, 0, 0, 0, 0, 0, 0, 0, 0, t603, t708, -qJD(4) * t620 (-pkin(8) * t620 - t798) * qJD(4) + t566, 0, 0, 0, 0, 0, 0, t333 * t664 + t641, t441 - t711 (t361 - t757) * qJD(4) (-t428 * t381 - t426 * t617 + t532 * t545) * qJD(4) + t36 * qJD(5) + t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t445, 0, 0, 0, 0, 0, 0, 0, 0, t100, t172, 0, t772 + t36 * qJD(4) + (-t427 * t541 - t429 * t805) * t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t670, 0, 0, 0, 0, 0, 0, -t669, -t667, 0, -t670, 0, 0, 0, 0, 0, 0, -qJD(5) * t433 - t515, -qJD(5) * t432 + t512, -t673, -t706 + t782, 0, 0, 0, 0, 0, 0, -t208 * t664 + t638, -t209 * t664 + t637, t704, -qJD(4) * t8 - qJD(5) * t10 - t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, 0, 0, 0, 0, 0, 0, 0, 0, 0, t660 - t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t677, 0, 0, 0, 0, 0, 0, 0, 0, 0, t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t668, -t666, 0, 0, 0, 0, 0, 0, 0, 0, -t445, t446, -t462 * qJD(4) (pkin(8) * t619 - t802) * qJD(4) + t565, 0, 0, 0, 0, 0, 0, t332 * t664 + t459 * t668, t331 * t664 + t464 * t668, qJD(4) * t596 (t532 * t543 + t751 + t764) * qJD(4) + t35 * qJD(5) + t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t675 - t708, t603 - t676, 0, -t688, 0, 0, 0, 0, 0, 0, t85, t84, 0, -t775 + t35 * qJD(4) + (-t649 - t756) * t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516, -t671, 0, -t516, 0, 0, -t635, t636, 0, 0, t516 * t539 - t674, t582 * t839, t519 + t699, t516 * t537 + t674, -t518 - t672, -t455, qJD(5) * t367 - t690, qJD(5) * t366 + t689, t724, -t569, t428 * t700 + t850, -t687 + t722, -t702 - t711, t426 * t701 - t850, -t326 * t664 - t683, -t422, -qJD(5) * t38 - qJD(6) * t56 - t767, -qJD(5) * t37 - qJD(6) * t57 + t766, -qJD(5) * t4 - t768, qJD(3) * t8 - qJD(5) * t2 - t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t566, 0, 0, 0, 0, 0, 0, -t664 * t325, -t710, 0, -qJD(5) * t33 - t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t565, 0, 0, 0, 0, 0, 0, t664 * t327, -t664 * t330, 0, -qJD(5) * t34 - t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t634, t497 * qJD(5), 0, -t634, 0, 0, -pkin(4) * t693, -pkin(4) * t692, 0, 0, -t837, t664 * t263, 0, t837, 0, 0, qJD(5) * t318 + t464 * t691, qJD(5) * t319 - t459 * t691, 0, qJD(5) * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384, -t570, t515 + t692, -t384, -t512 - t693, t526, -pkin(8) * t692 - t588, pkin(8) * t693 - t589, 0, 0, -t843, t82, t190, t843, t191, t526, -t594 + t840, -t593 + t841 (t648 - t743) * t791 - t602 (-t381 * t805 - t541 * t617) * t791 + t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t843, t82, t190, t843, t191, t526, -t583 + t840, -t584 + t841, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, t571 (t542 * t667 - t694) * t543, -t372, t516 * t544 + t513, t524, qJD(3) * t433 - qJD(4) * t367 - t684, qJD(3) * t432 - qJD(4) * t366 + t703, 0, t698, t842, -t64, t202, -t842, t203, t524, qJD(4) * t38 + qJD(6) * t47 + t719 - t781, qJD(4) * t37 + qJD(6) * t49 + t205 + t780, qJD(4) * t4 - t769, qJD(3) * t10 + qJD(4) * t2 - t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t279, 0, qJD(4) * t33 - t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t675, t676, 0, t688, 0, 0, 0, 0, 0, 0, t144, t145, 0, qJD(4) * t34 + t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, t570, -t515, t384, t512, t525, t588, t589, 0, 0, t843, -t82, t281, -t843, t277, t525, t594 + t715, t593 + t714, t602, -t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t803, -pkin(5) * t623, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t664 * t803 + t742, t741 + (-t624 - t623) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t842, -t64, t202, -t842, t203, t524, qJD(4) * t56 - qJD(5) * t47 + t719 - t778, qJD(4) * t57 - qJD(5) * t49 + t205 + t779, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t279, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, t145, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t843, -t82, t281, -t843, t277, t525, t583 + t715, t584 + t714, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t541 * t791 - t742, pkin(5) * t624 - t741, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t6;
