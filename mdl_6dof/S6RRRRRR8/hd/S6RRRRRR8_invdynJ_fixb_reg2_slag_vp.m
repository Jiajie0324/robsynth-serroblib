% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR8_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR8_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR8_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR8_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 05:06:56
% EndTime: 2019-03-10 05:08:44
% DurationCPUTime: 64.06s
% Computational Cost: add. (87536->1259), mult. (245888->1718), div. (0->0), fcn. (208215->18), ass. (0->523)
t520 = cos(qJ(2));
t785 = cos(pkin(6));
t696 = pkin(1) * t785;
t496 = t520 * t696;
t483 = qJD(1) * t496;
t517 = sin(qJ(2));
t512 = sin(pkin(6));
t784 = cos(pkin(7));
t605 = t512 * (-pkin(10) * t784 - pkin(9));
t584 = t517 * t605;
t380 = qJD(1) * t584 + t483;
t495 = t517 * t696;
t546 = t520 * t605 - t495;
t381 = t546 * qJD(1);
t511 = sin(pkin(7));
t811 = pkin(10) * t511;
t610 = pkin(2) * t517 - t520 * t811;
t726 = qJD(1) * t512;
t419 = t610 * t726;
t816 = cos(qJ(3));
t635 = t784 * t816;
t516 = sin(qJ(3));
t755 = t511 * t516;
t446 = pkin(2) * t635 - pkin(10) * t755;
t675 = t516 * t784;
t833 = t446 * qJD(3) - t816 * t380 - t381 * t675 - t419 * t755;
t567 = -t517 * t675 + t520 * t816;
t415 = t567 * t512;
t402 = qJD(1) * t415;
t683 = t816 * qJD(3);
t650 = t511 * t683;
t606 = t650 - t402;
t284 = -t381 * t511 + t784 * t419;
t565 = t516 * t520 + t517 * t635;
t414 = t565 * t512;
t401 = qJD(1) * t414;
t885 = -pkin(3) * t401 + pkin(11) * t402 - t284 + (pkin(3) * t516 - pkin(11) * t816) * t511 * qJD(3);
t688 = t517 * t726;
t653 = t511 * t688;
t884 = pkin(11) * t653 - t833;
t515 = sin(qJ(4));
t519 = cos(qJ(4));
t440 = t515 * t755 - t519 * t784;
t739 = qJD(4) * t440 + t515 * t653 - t519 * t606;
t754 = t511 * t519;
t441 = t515 * t784 + t516 * t754;
t735 = qJD(4) * t441 + t515 * t606 + t519 * t653;
t724 = qJD(3) * t516;
t685 = t511 * t724;
t834 = t401 - t685;
t694 = t511 * t816;
t448 = pkin(2) * t675 + pkin(10) * t694;
t425 = pkin(11) * t784 + t448;
t426 = (-pkin(3) * t816 - pkin(11) * t516 - pkin(2)) * t511;
t721 = qJD(4) * t519;
t722 = qJD(4) * t515;
t743 = -t425 * t722 + t426 * t721 + t515 * t885 - t884 * t519;
t309 = t519 * t425 + t515 * t426;
t742 = -qJD(4) * t309 + t884 * t515 + t519 * t885;
t883 = -t834 * pkin(4) + pkin(12) * t739 + t742;
t882 = pkin(12) * t735 - t743;
t752 = t512 * t520;
t729 = pkin(9) * t752 + t495;
t430 = t729 * qJD(1);
t669 = t785 * qJD(1);
t618 = t669 + qJD(2);
t592 = t511 * t618;
t673 = t520 * t784;
t639 = t512 * t673;
t328 = t430 + (qJD(1) * t639 + t592) * pkin(10);
t552 = pkin(2) * t785 + t584;
t338 = qJD(2) * pkin(2) + qJD(1) * t552 + t483;
t597 = -pkin(2) * t520 - t517 * t811 - pkin(1);
t394 = t597 * t726;
t195 = -t516 * t328 + t338 * t635 + t394 * t694;
t652 = t516 * t688;
t573 = t618 * t816;
t613 = t520 * t635;
t595 = t512 * t613;
t732 = qJD(1) * t595 + t511 * t573;
t339 = t652 - t732;
t690 = t816 * t517;
t566 = t516 * t673 + t690;
t556 = t566 * t512;
t574 = t516 * t592;
t341 = qJD(1) * t556 + t574;
t243 = pkin(3) * t341 + pkin(11) * t339;
t140 = t519 * t195 + t515 * t243;
t522 = -pkin(12) - pkin(11);
t695 = qJD(4) * t522;
t772 = t339 * t515;
t881 = -pkin(12) * t772 + t515 * t695 - t140;
t880 = t448 * qJD(3) - t516 * t380 + t381 * t635;
t518 = cos(qJ(6));
t716 = qJD(6) * t518;
t702 = t511 * t752;
t404 = qJD(1) * t702 - t618 * t784 - qJD(3);
t262 = -t515 * t341 - t404 * t519;
t263 = t341 * t519 - t404 * t515;
t514 = sin(qJ(5));
t815 = cos(qJ(5));
t172 = -t815 * t262 + t263 * t514;
t863 = t172 * t518;
t879 = t716 + t863;
t684 = qJD(5) * t815;
t720 = qJD(5) * t514;
t745 = t440 * t684 + t441 * t720 + t735 * t514 + t739 * t815;
t335 = -t514 * t440 + t441 * t815;
t744 = qJD(5) * t335 - t739 * t514 + t735 * t815;
t689 = t815 * t519;
t750 = t514 * t515;
t458 = -t689 + t750;
t649 = qJD(4) * t689;
t710 = qJD(4) + qJD(5);
t737 = -t458 * t339 + t519 * t684 - t710 * t750 + t649;
t749 = t514 * t519;
t459 = t515 * t815 + t749;
t736 = (t339 + t710) * t459;
t692 = t816 * t419;
t734 = -(-pkin(3) * t688 - t692) * t511 + t880;
t609 = qJD(3) * t635;
t560 = qJD(2) * t816 + t609;
t664 = qJDD(1) * t784;
t714 = qJD(1) * qJD(2);
t628 = t784 * t714;
t608 = t517 * t628;
t659 = t785 * qJDD(1);
t611 = t659 + qJDD(2);
t853 = t516 * t512 * t608 + qJD(3) * t652 - (qJD(3) * t573 + t516 * t611) * t511;
t526 = t853 - (qJDD(1) * t690 + t520 * (qJD(1) * t560 + t516 * t664)) * t512;
t513 = sin(qJ(6));
t333 = qJD(4) + t339;
t564 = qJD(5) + t333;
t554 = t518 * t564;
t600 = t514 * t262 + t263 * t815;
t147 = t513 * t600 - t554;
t149 = t513 * t564 + t518 * t600;
t533 = qJD(2) * t565 + qJD(3) * t566;
t713 = qJDD(1) * t517;
t678 = t516 * t713;
t531 = (qJD(1) * t533 + t678) * t512;
t583 = t511 * t611;
t550 = qJD(3) * t574 - qJDD(1) * t595 - t816 * t583;
t530 = -t550 - t531;
t213 = qJDD(4) - t530;
t528 = -qJDD(5) - t213;
t712 = qJDD(1) * t520;
t679 = t512 * t712;
t551 = -t511 * t679 + t611 * t784 + qJDD(3);
t681 = t517 * t714;
t647 = t512 * t681;
t540 = t511 * t647 + t551;
t133 = t341 * t722 + t404 * t721 - t515 * t540 + t519 * t526;
t723 = qJD(4) * t263;
t134 = -t515 * t526 - t519 * t540 + t723;
t70 = t815 * t133 + t514 * t134 - t262 * t684 + t263 * t720;
t717 = qJD(6) * t513;
t43 = -qJD(6) * t554 + t513 * t528 + t518 * t70 + t600 * t717;
t719 = qJD(6) * t149;
t44 = -t513 * t70 + t518 * t528 + t719;
t852 = qJD(6) + t172;
t874 = t852 * t513;
t878 = -t147 * t879 - t149 * t874 - t43 * t518 - t513 * t44;
t521 = cos(qJ(1));
t672 = t521 * t785;
t814 = sin(qJ(1));
t442 = t517 * t814 - t520 * t672;
t443 = t517 * t672 + t520 * t814;
t751 = t512 * t521;
t297 = -t442 * t675 + t443 * t816 - t751 * t755;
t510 = qJ(4) + qJ(5);
t504 = sin(t510);
t505 = cos(t510);
t676 = t512 * t784;
t854 = -t442 * t511 + t521 * t676;
t228 = t297 * t505 - t504 * t854;
t296 = t442 * t635 + t443 * t516 + t694 * t751;
t877 = t228 * t513 - t296 * t518;
t876 = t228 * t518 + t296 * t513;
t667 = t514 * t133 - t815 * t134;
t71 = qJD(5) * t600 - t667;
t69 = qJDD(6) + t71;
t66 = t518 * t69;
t875 = t147 * t600 - t852 * t874 + t66;
t308 = -t515 * t425 + t519 * t426;
t256 = -pkin(4) * t694 - t441 * pkin(12) + t308;
t267 = -pkin(12) * t440 + t309;
t799 = t256 * t684 - t267 * t720 + t514 * t883 - t882 * t815;
t139 = -t195 * t515 + t519 * t243;
t118 = pkin(12) * t339 * t519 + pkin(4) * t341 + t139;
t477 = t522 * t515;
t478 = t522 * t519;
t598 = t477 * t815 + t514 * t478;
t788 = qJD(5) * t598 - t514 * t118 + t695 * t749 + t815 * t881;
t196 = t816 * t328 + (t338 * t784 + t394 * t511) * t516;
t837 = -t196 + (t722 + t772) * pkin(4);
t835 = pkin(4) * t735 + t734;
t768 = t854 * t519;
t872 = t297 * t515 + t768;
t769 = t854 * t515;
t871 = -t297 * t519 + t769;
t40 = t43 * t513;
t869 = t149 * t879 - t40;
t868 = -t149 * t600 + t513 * t69 + t852 * t879;
t507 = t512 ^ 2;
t867 = 0.2e1 * t507;
t636 = t785 * t814;
t444 = -t517 * t636 + t520 * t521;
t568 = t521 * t517 + t520 * t636;
t693 = t512 * t814;
t830 = -t511 * t693 + t568 * t784;
t301 = t444 * t816 - t516 * t830;
t856 = t568 * t511 + t814 * t676;
t231 = t301 * t504 - t505 * t856;
t671 = t785 * t511;
t640 = t516 * t671;
t373 = t640 + t556;
t439 = -t784 * t785 + t702;
t282 = -t373 * t504 - t439 * t505;
t847 = -t297 * t504 - t505 * t854;
t590 = g(1) * t231 - g(2) * t847 - g(3) * t282;
t252 = -t338 * t511 + t784 * t394;
t163 = pkin(3) * t339 - pkin(11) * t341 + t252;
t169 = -t404 * pkin(11) + t196;
t113 = t163 * t515 + t169 * t519;
t97 = pkin(12) * t262 + t113;
t705 = t815 * t97;
t112 = t519 * t163 - t169 * t515;
t96 = -pkin(12) * t263 + t112;
t82 = pkin(4) * t333 + t96;
t52 = t514 * t82 + t705;
t642 = pkin(1) * t659;
t482 = t520 * t642;
t627 = qJD(2) * t669;
t615 = pkin(1) * t627;
t571 = -t517 * t615 + t482;
t680 = t520 * t714;
t593 = -t680 - t713;
t572 = t593 * pkin(9);
t255 = t611 * pkin(2) + ((-t517 * t664 - t520 * t628) * pkin(10) + t572) * t512 + t571;
t580 = t610 * qJD(2);
t304 = (qJD(1) * t580 + qJDD(1) * t597) * t512;
t187 = -t511 * t255 + t784 * t304;
t102 = -pkin(3) * t530 + pkin(11) * t526 + t187;
t698 = pkin(9) * t679 + t517 * t642 + t520 * t615;
t336 = -pkin(9) * t647 + t698;
t249 = (t583 + (t520 * t664 - t608) * t512) * pkin(10) + t336;
t107 = t816 * t249 + t255 * t675 + t304 * t755 - t328 * t724 + t338 * t609 + t394 * t650;
t94 = pkin(11) * t540 + t107;
t32 = -qJD(4) * t113 + t519 * t102 - t515 * t94;
t19 = pkin(4) * t213 + pkin(12) * t133 + t32;
t596 = -t515 * t102 - t163 * t721 + t169 * t722 - t519 * t94;
t23 = -pkin(12) * t134 - t596;
t677 = -t815 * t19 + t514 * t23;
t10 = -qJD(5) * t52 - t677;
t826 = -qJDD(4) - qJDD(5);
t543 = -t550 + t826;
t832 = t531 - t543;
t8 = -pkin(5) * t832 - t10;
t576 = t590 - t8;
t866 = pkin(13) * t834 - t799;
t793 = t514 * t97;
t51 = t815 * t82 - t793;
t49 = -pkin(5) * t564 - t51;
t865 = t172 * t49;
t864 = -pkin(13) * t341 + t788;
t776 = t172 * t600;
t858 = pkin(5) * t736 - pkin(13) * t737 + t837;
t857 = t744 * pkin(5) + pkin(13) * t745 + t835;
t855 = -t112 * t333 - t596;
t851 = -t172 ^ 2 + t600 ^ 2;
t117 = pkin(5) * t600 + pkin(13) * t172;
t850 = t172 * t564 - t70;
t168 = t404 * pkin(3) - t195;
t135 = -t262 * pkin(4) + t168;
t232 = t301 * t505 + t504 * t856;
t283 = t373 * t505 - t439 * t504;
t589 = -g(1) * t232 - g(2) * t228 - g(3) * t283;
t9 = t514 * t19 + t815 * t23 + t82 * t684 - t97 * t720;
t849 = t135 * t172 - t589 - t9;
t50 = pkin(13) * t564 + t52;
t80 = t172 * pkin(5) - pkin(13) * t600 + t135;
t21 = t50 * t518 + t513 * t80;
t668 = t784 * qJD(3);
t634 = t516 * t668;
t603 = t516 * t249 - t255 * t635 - t304 * t694 + t328 * t683 + t338 * t634 + t394 * t685;
t95 = -pkin(3) * t540 + t603;
t67 = t134 * pkin(4) + t95;
t16 = t71 * pkin(5) + t70 * pkin(13) + t67;
t7 = pkin(13) * t832 + t9;
t3 = -qJD(6) * t21 + t518 * t16 - t513 * t7;
t844 = -t21 * t852 - t3;
t836 = t514 * t256 + t815 * t267;
t798 = -qJD(5) * t836 + t882 * t514 + t815 * t883;
t397 = t514 * t477 - t478 * t815;
t786 = qJD(5) * t397 + t118 * t815 + t514 * t881 - t522 * t649;
t843 = -t113 * t333 - t32;
t55 = t514 * t96 + t705;
t842 = -pkin(4) * t720 + t55;
t841 = t852 * t600;
t549 = t517 * (qJD(2) * t635 + t683);
t591 = t520 * (t668 + qJD(2));
t300 = t444 * t516 + t816 * t830;
t614 = t816 * t671;
t748 = t516 * t517;
t372 = t512 * t748 - t595 - t614;
t587 = g(1) * t300 + g(2) * t296 + g(3) * t372;
t839 = t587 * t504;
t379 = t496 + t552;
t753 = t512 * t517;
t703 = t511 * t753;
t730 = pkin(2) * t752 + pkin(10) * t703;
t408 = -pkin(1) * t512 - t730;
t271 = -t379 * t511 + t784 * t408;
t193 = pkin(3) * t372 - pkin(11) * t373 + t271;
t364 = (t639 + t671) * pkin(10) + t729;
t220 = t816 * t364 + t379 * t675 + t408 * t755;
t201 = -pkin(11) * t439 + t220;
t125 = t519 * t193 - t201 * t515;
t294 = t373 * t519 - t439 * t515;
t106 = pkin(4) * t372 - pkin(12) * t294 + t125;
t126 = t515 * t193 + t519 * t201;
t767 = t439 * t519;
t293 = t373 * t515 + t767;
t111 = -pkin(12) * t293 + t126;
t838 = t514 * t106 + t815 * t111;
t733 = t511 * t692 + t880;
t829 = (qJDD(2) + 0.2e1 * t659) * t512;
t622 = t50 * t513 - t518 * t80;
t828 = t21 * t518 + t513 * t622;
t827 = -g(1) * t444 - g(2) * t443;
t434 = t729 * qJD(2);
t825 = t49 * t717 + t600 * t622;
t823 = t21 * t600 + t49 * t716 - t513 * t576;
t822 = -t135 * t600 + t590 - t677;
t820 = t333 * t600 + t667;
t281 = qJD(3) * t614 + ((t613 - t748) * qJD(3) + t567 * qJD(2)) * t512;
t725 = qJD(2) * t517;
t686 = t512 * t725;
t651 = t511 * t686;
t185 = -qJD(4) * t293 + t281 * t519 + t515 * t651;
t280 = qJD(3) * t640 + t512 * t533;
t484 = qJD(2) * t496;
t382 = qJD(2) * t584 + t484;
t383 = t546 * qJD(2);
t420 = t512 * t580;
t143 = -t364 * t724 + t379 * t609 + t816 * t382 + t383 * t675 + t408 * t650 + t420 * t755;
t137 = pkin(11) * t651 + t143;
t285 = -t383 * t511 + t784 * t420;
t152 = pkin(3) * t280 - pkin(11) * t281 + t285;
t62 = -qJD(4) * t126 - t137 * t515 + t519 * t152;
t48 = pkin(4) * t280 - pkin(12) * t185 + t62;
t184 = qJD(4) * t294 + t281 * t515 - t519 * t651;
t61 = t519 * t137 + t515 * t152 + t193 * t721 - t201 * t722;
t54 = -pkin(12) * t184 + t61;
t14 = -qJD(5) * t838 + t48 * t815 - t514 * t54;
t2 = -t622 * qJD(6) + t513 * t16 + t518 * t7;
t523 = qJD(1) ^ 2;
t813 = pkin(4) * t263;
t812 = pkin(4) * t514;
t1 = t2 * t518;
t167 = -pkin(13) * t694 + t836;
t334 = t440 * t815 + t441 * t514;
t424 = -pkin(3) * t784 - t446;
t346 = t440 * pkin(4) + t424;
t202 = t334 * pkin(5) - t335 * pkin(13) + t346;
t119 = -t167 * t513 + t202 * t518;
t802 = qJD(6) * t119 + t513 * t857 - t518 * t866;
t120 = t167 * t518 + t202 * t513;
t801 = -qJD(6) * t120 + t513 * t866 + t518 * t857;
t800 = pkin(5) * t834 - t798;
t797 = t622 * t852;
t42 = t44 * t518;
t503 = pkin(4) * t519 + pkin(3);
t357 = pkin(5) * t458 - pkin(13) * t459 - t503;
t265 = t357 * t518 - t397 * t513;
t792 = qJD(6) * t265 + t513 * t858 + t518 * t864;
t266 = t357 * t513 + t397 * t518;
t791 = -qJD(6) * t266 - t513 * t864 + t518 * t858;
t787 = t341 * pkin(5) + t786;
t781 = t147 * t513;
t780 = t149 * t147;
t775 = t262 * t333;
t774 = t263 * t262;
t773 = t263 * t333;
t771 = t341 * t339;
t770 = t372 * t513;
t765 = t443 * t511;
t764 = t444 * t511;
t763 = t459 * t513;
t762 = t459 * t518;
t761 = t504 * t511;
t760 = t505 * t511;
t759 = t505 * t513;
t758 = t505 * t518;
t757 = t507 * t523;
t756 = t511 * t515;
t302 = t513 * t335 + t518 * t694;
t747 = qJD(6) * t302 + t513 * t834 + t518 * t745;
t655 = t513 * t694;
t746 = -qJD(6) * t655 + t335 * t716 - t513 * t745 + t518 * t834;
t741 = -t296 * t503 - t297 * t522;
t740 = -t300 * t503 - t301 * t522;
t738 = -t372 * t503 - t373 * t522;
t728 = t521 * pkin(1) + pkin(9) * t693;
t508 = t517 ^ 2;
t509 = t520 ^ 2;
t727 = t508 - t509;
t718 = qJD(6) * t852;
t708 = t815 * pkin(4);
t704 = t520 * t757;
t322 = -t442 * t516 + t443 * t635;
t323 = -t442 * t816 - t443 * t675;
t435 = t442 * pkin(2);
t700 = -t322 * t522 + t323 * t503 - t435;
t324 = t444 * t635 - t516 * t568;
t325 = -t444 * t675 - t568 * t816;
t437 = t568 * pkin(2);
t699 = -t324 * t522 + t325 * t503 - t437;
t691 = t816 * t420;
t687 = t511 * t725;
t682 = pkin(1) * t867;
t666 = -t518 * t341 - t513 * t737;
t665 = t341 * t513 - t518 * t737;
t663 = t515 * t333;
t662 = t333 * t519;
t658 = pkin(4) * t684;
t657 = t517 * t704;
t656 = t515 * t703;
t648 = t517 * t680;
t646 = t710 - t732;
t644 = pkin(10) * t765 - t435;
t643 = pkin(10) * t764 - t437;
t637 = -pkin(1) * t814 + pkin(9) * t751;
t633 = t512 * t523 * t785;
t631 = -pkin(5) * t505 - pkin(13) * t504;
t630 = g(1) * t847 + g(2) * t231;
t629 = -g(1) * t296 + g(2) * t300;
t501 = pkin(13) + t812;
t623 = -t501 * t69 + t865;
t58 = pkin(13) * t372 + t838;
t219 = -t516 * t364 + t379 * t635 + t408 * t694;
t200 = t439 * pkin(3) - t219;
t153 = t293 * pkin(4) + t200;
t203 = t293 * t815 + t294 * t514;
t204 = -t514 * t293 + t294 * t815;
t85 = t203 * pkin(5) - t204 * pkin(13) + t153;
t28 = t513 * t85 + t518 * t58;
t27 = -t513 * t58 + t518 * t85;
t621 = pkin(4) * t656 - t414 * t522 + t415 * t503 + t730;
t159 = t204 * t518 + t770;
t617 = 0.2e1 * t669 + qJD(2);
t607 = g(1) * t521 + g(2) * t814;
t59 = t106 * t815 - t514 * t111;
t176 = t256 * t815 - t514 * t267;
t13 = t106 * t684 - t111 * t720 + t514 * t48 + t815 * t54;
t594 = -pkin(11) * t213 + t168 * t333;
t257 = t323 * t504 - t443 * t760;
t259 = t325 * t504 - t444 * t760;
t326 = t415 * t504 - t505 * t703;
t588 = -g(1) * t259 - g(2) * t257 - g(3) * t326;
t586 = g(1) * t301 + g(2) * t297 + g(3) * t373;
t585 = -g(1) * t324 - g(2) * t322 - g(3) * t414;
t579 = t459 * t716 - t666;
t578 = -t459 * t717 - t665;
t577 = t1 + t589;
t575 = t587 - t95;
t569 = t586 * t515;
t562 = -t443 * pkin(2) + pkin(10) * t854 + t637;
t559 = -t364 * t683 - t379 * t634 - t516 * t382 + t383 * t635 - t408 * t685;
t553 = pkin(11) * qJD(4) * t333 - t575;
t547 = t1 - t3 * t513 + (-t21 * t513 + t518 * t622) * qJD(6);
t545 = pkin(4) * t769 + t296 * t522 - t297 * t503 + t562;
t544 = t827 * (pkin(4) * t515 + pkin(10)) * t511;
t542 = t444 * pkin(2) + pkin(10) * t856 + t728;
t538 = t856 * t515;
t537 = t856 * t519;
t536 = pkin(4) * t538 - t300 * t522 + t301 * t503 + t542;
t535 = t511 * t540;
t138 = (-pkin(3) * t686 - t691) * t511 - t559;
t101 = t184 * pkin(4) + t138;
t529 = t530 + t826;
t525 = t511 * t526;
t502 = -t708 - pkin(5);
t447 = -pkin(9) * t753 + t496;
t433 = -pkin(9) * t686 + t484;
t428 = -pkin(9) * t688 + t483;
t421 = pkin(4) * t767;
t363 = pkin(4) * t537;
t361 = pkin(4) * t768;
t358 = t372 * t518;
t337 = t512 * t572 + t571;
t327 = t415 * t505 + t504 * t703;
t303 = t518 * t335 - t655;
t272 = t282 * pkin(5);
t260 = t325 * t505 + t444 * t761;
t258 = t323 * t505 + t443 * t761;
t238 = t301 * t519 + t538;
t237 = -t301 * t515 + t537;
t226 = t231 * pkin(5);
t225 = t847 * pkin(5);
t166 = pkin(5) * t694 - t176;
t162 = t232 * t518 + t300 * t513;
t161 = -t232 * t513 + t300 * t518;
t158 = t204 * t513 - t358;
t144 = t511 * t691 + t559;
t98 = t117 + t813;
t90 = qJD(5) * t204 + t184 * t815 + t514 * t185;
t89 = t514 * t184 - t185 * t815 + t293 * t684 + t294 * t720;
t64 = qJD(6) * t159 - t280 * t518 - t513 * t89;
t63 = t204 * t717 - t280 * t513 - t372 * t716 + t518 * t89;
t57 = -t372 * pkin(5) - t59;
t56 = t815 * t96 - t793;
t30 = t117 * t513 + t51 * t518;
t29 = t117 * t518 - t51 * t513;
t26 = t513 * t98 + t518 * t56;
t25 = -t513 * t56 + t518 * t98;
t24 = t90 * pkin(5) + t89 * pkin(13) + t101;
t12 = -t280 * pkin(5) - t14;
t11 = pkin(13) * t280 + t13;
t5 = -qJD(6) * t28 - t11 * t513 + t24 * t518;
t4 = qJD(6) * t27 + t11 * t518 + t24 * t513;
t6 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t814 - g(2) * t521, t607, 0, 0 (qJDD(1) * t508 + 0.2e1 * t648) * t507 (t517 * t712 - t714 * t727) * t867, qJD(2) * t617 * t752 + t517 * t829 (qJDD(1) * t509 - 0.2e1 * t648) * t507, t520 * t829 - t617 * t686, t611 * t785, -t434 * t618 + t447 * t611 + t337 * t785 + g(1) * t443 - g(2) * t444 + (-t681 + t712) * t682, -g(1) * t442 + g(2) * t568 - t336 * t785 - t433 * t618 + t593 * t682 - t611 * t729 ((-qJD(2) * t428 + qJDD(1) * t729 + t336 + (-qJD(2) * t447 + t433) * qJD(1)) * t520 + (-t430 * qJD(2) - qJDD(1) * t447 - t337) * t517 - t607) * t512, t507 * qJDD(1) * pkin(1) ^ 2 - g(1) * t637 - g(2) * t728 + t336 * t729 + t337 * t447 - t428 * t434 + t430 * t433, t341 * t281 - t373 * t526, -t341 * t280 - t281 * t339 + t372 * t526 + t373 * t530, -t281 * t404 + t373 * t551 + t853 * t439 + (t341 * t687 - t566 * t439 * qJDD(1) + (-t439 * t520 * t560 + t373 * t687) * qJD(1)) * t512, t280 * t339 - t372 * t530, t280 * t404 - t339 * t651 - t372 * t540 - t439 * t530, -t404 * t651 - t439 * t540, g(1) * t297 - g(2) * t301 - t144 * t404 + t187 * t372 + t195 * t651 + t219 * t540 + t252 * t280 - t271 * t530 + t285 * t339 + t439 * t603, t107 * t439 + t143 * t404 + t187 * t373 - t196 * t651 - t220 * t540 + t252 * t281 - t271 * t526 + t285 * t341 + t629, -g(1) * t854 - g(2) * t856 - t107 * t372 - t143 * t339 - t144 * t341 - t195 * t281 - t196 * t280 + t219 * t526 + t220 * t530 + t373 * t603, -g(1) * t562 - g(2) * t542 + t107 * t220 + t196 * t143 + t195 * t144 + t187 * t271 - t219 * t603 + t252 * t285, -t133 * t294 + t185 * t263, t133 * t293 - t134 * t294 - t184 * t263 + t185 * t262, -t133 * t372 + t185 * t333 + t213 * t294 + t263 * t280, t134 * t293 - t184 * t262, -t134 * t372 - t184 * t333 - t213 * t293 + t262 * t280, t213 * t372 + t280 * t333, -g(1) * t871 - g(2) * t238 + t112 * t280 + t125 * t213 + t200 * t134 - t138 * t262 + t168 * t184 + t95 * t293 + t32 * t372 + t62 * t333, -g(1) * t872 - g(2) * t237 - t113 * t280 - t126 * t213 - t200 * t133 + t138 * t263 + t168 * t185 + t95 * t294 - t61 * t333 + t596 * t372, -t112 * t185 - t113 * t184 + t125 * t133 - t126 * t134 + t262 * t61 - t263 * t62 + t293 * t596 - t294 * t32 - t629, -t596 * t126 + t113 * t61 + t32 * t125 + t112 * t62 + t95 * t200 + t168 * t138 - g(1) * (-pkin(3) * t297 - pkin(11) * t296 + t562) - g(2) * (t301 * pkin(3) + t300 * pkin(11) + t542) -t204 * t70 - t600 * t89, t172 * t89 + t203 * t70 - t204 * t71 - t600 * t90, -t89 * t646 - t204 * t543 - t70 * t372 + t600 * t280 + (t204 * t678 + (t204 * t549 + (t204 * t591 - t89 * t517) * t516) * qJD(1)) * t512, t172 * t90 + t203 * t71, -t90 * t646 + t203 * t543 - t71 * t372 - t172 * t280 + (-t203 * t678 + (-t203 * t549 + (-t203 * t591 - t90 * t517) * t516) * qJD(1)) * t512, -t543 * t372 + t646 * t280 + (t372 * t678 + (t372 * t549 + (t517 * t280 + t372 * t591) * t516) * qJD(1)) * t512, t14 * t646 - t59 * t543 + t10 * t372 + t51 * t280 + t101 * t172 + t153 * t71 + t67 * t203 + t135 * t90 + g(1) * t228 - g(2) * t232 + (t59 * t678 + (t59 * t549 + (t14 * t517 + t59 * t591) * t516) * qJD(1)) * t512, -t13 * t646 + t838 * t543 - t9 * t372 - t52 * t280 + t101 * t600 - t153 * t70 + t67 * t204 - t135 * t89 + (-t838 * t678 + (-t838 * t549 + (-t13 * t517 - t591 * t838) * t516) * qJD(1)) * t512 + t630, -t10 * t204 - t13 * t172 - t14 * t600 - t203 * t9 + t51 * t89 - t52 * t90 + t59 * t70 - t71 * t838 - t629, -g(1) * t545 - g(2) * t536 + t10 * t59 + t135 * t101 + t52 * t13 + t51 * t14 + t67 * t153 + t838 * t9, -t149 * t63 - t159 * t43, t147 * t63 - t149 * t64 + t158 * t43 - t159 * t44, t149 * t90 + t159 * t69 - t203 * t43 - t63 * t852, t147 * t64 + t158 * t44, -t147 * t90 - t158 * t69 - t203 * t44 - t64 * t852, t203 * t69 + t852 * t90, g(1) * t876 - g(2) * t162 + t12 * t147 + t8 * t158 + t3 * t203 + t27 * t69 + t57 * t44 + t49 * t64 + t5 * t852 - t622 * t90, -g(1) * t877 - g(2) * t161 + t12 * t149 + t8 * t159 - t2 * t203 - t21 * t90 - t28 * t69 - t4 * t852 - t57 * t43 - t49 * t63, -t147 * t4 - t149 * t5 - t158 * t2 - t159 * t3 - t21 * t64 + t27 * t43 - t28 * t44 - t622 * t63 - t630, t2 * t28 + t21 * t4 + t3 * t27 - t622 * t5 + t8 * t57 + t49 * t12 - g(1) * (-pkin(5) * t228 + pkin(13) * t847 + t545) - g(2) * (t232 * pkin(5) + t231 * pkin(13) + t536); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t657, t727 * t757, t512 * t713 - t520 * t633, t657, t517 * t633 + t679, t611, t482 + t430 * t618 + g(1) * t568 + g(2) * t442 + (-t627 + t757) * t517 * pkin(1) + (-g(3) * t520 + t572) * t512, pkin(1) * t704 + t428 * t618 + (pkin(9) * t714 + g(3)) * t753 - t698 - t827, 0, 0, t341 * t606 - t516 * t525, -t339 * t606 + t341 * t834 - t525 * t816 + t530 * t755, -t341 * t653 - t404 * t606 + t516 * t535 - t526 * t784, -t339 * t834 + t530 * t694, t339 * t653 - t404 * t834 + t530 * t784 + t535 * t816, t404 * t653 + t540 * t784, t446 * t551 - t603 * t784 - t284 * t339 - t252 * t401 - g(1) * t325 - g(2) * t323 - g(3) * t415 + t733 * t404 + (t252 * t724 - t187 * t816 + pkin(2) * t530 + (qJD(2) * t446 - t195) * t688) * t511, pkin(2) * t525 - t107 * t784 + t187 * t755 + t196 * t653 + t252 * t606 - t284 * t341 + t404 * t833 - t448 * t540 - t585, -g(1) * t764 - g(2) * t765 - g(3) * t703 + t107 * t694 - t195 * t606 + t196 * t834 - t339 * t833 + t341 * t733 + t446 * t526 + t448 * t530 + t603 * t755, -t187 * t511 * pkin(2) - g(1) * t643 - g(2) * t644 - g(3) * t730 + t107 * t448 - t733 * t195 + t196 * t833 - t252 * t284 - t446 * t603, -t133 * t441 - t263 * t739, t133 * t440 - t134 * t441 - t262 * t739 - t263 * t735, t133 * t694 + t441 * t213 - t263 * t834 - t333 * t739, t134 * t440 - t262 * t735, t134 * t694 - t440 * t213 - t262 * t834 - t333 * t735, -t213 * t694 - t333 * t834, t308 * t213 - t32 * t694 + t424 * t134 + t95 * t440 - g(1) * (t325 * t519 + t444 * t756) - g(2) * (t323 * t519 + t443 * t756) - g(3) * (t415 * t519 + t656) + t742 * t333 - t734 * t262 + t735 * t168 - t834 * t112, -t309 * t213 - t596 * t694 - t424 * t133 + t95 * t441 - g(1) * (-t325 * t515 + t444 * t754) - g(2) * (-t323 * t515 + t443 * t754) - g(3) * (-t415 * t515 + t519 * t703) - t743 * t333 + t734 * t263 - t739 * t168 + t834 * t113, t112 * t739 - t113 * t735 + t133 * t308 - t134 * t309 + t262 * t743 - t263 * t742 - t32 * t441 + t440 * t596 + t585, -t596 * t309 + t32 * t308 + t95 * t424 - g(1) * (pkin(3) * t325 + pkin(11) * t324 + t643) - g(2) * (pkin(3) * t323 + pkin(11) * t322 + t644) - g(3) * (pkin(3) * t415 + pkin(11) * t414 + t730) + t734 * t168 + t743 * t113 + t742 * t112, -t335 * t70 - t600 * t745, t172 * t745 + t334 * t70 - t335 * t71 - t600 * t744, -t335 * t543 + t70 * t694 - t834 * t600 + (t335 * t678 + (t335 * t549 + (t335 * t591 - t517 * t745) * t516) * qJD(1)) * t512 - t745 * t646, t172 * t744 + t334 * t71, t334 * t543 + t71 * t694 + t834 * t172 + (-t334 * t678 + (-t334 * t549 + (-t334 * t591 - t517 * t744) * t516) * qJD(1)) * t512 - t744 * t646, t528 * t694 - t564 * t834, -g(1) * t260 - g(2) * t258 - g(3) * t327 - t10 * t694 + t135 * t744 + t172 * t835 - t176 * t528 + t67 * t334 + t346 * t71 - t51 * t834 + t564 * t798, -t135 * t745 + t67 * t335 - t346 * t70 + t52 * t834 + t529 * t836 - t564 * t799 + t600 * t835 + t694 * t9 - t588, -t10 * t335 - t172 * t799 + t176 * t70 - t334 * t9 + t51 * t745 - t52 * t744 - t600 * t798 - t71 * t836 + t585, -g(1) * t699 - g(2) * t700 - g(3) * t621 + t10 * t176 + t135 * t835 + t67 * t346 + t798 * t51 + t799 * t52 + t836 * t9 + t544, -t149 * t747 - t303 * t43, t147 * t747 - t149 * t746 + t302 * t43 - t303 * t44, t149 * t744 + t303 * t69 - t334 * t43 - t747 * t852, t147 * t746 + t302 * t44, -t147 * t744 - t302 * t69 - t334 * t44 - t746 * t852, t334 * t69 + t744 * t852, t119 * t69 + t3 * t334 + t166 * t44 + t8 * t302 - g(1) * (t260 * t518 + t324 * t513) - g(2) * (t258 * t518 + t322 * t513) - g(3) * (t327 * t518 + t414 * t513) + t746 * t49 - t744 * t622 + t801 * t852 + t800 * t147, -t120 * t69 - t2 * t334 - t166 * t43 + t8 * t303 - g(1) * (-t260 * t513 + t324 * t518) - g(2) * (-t258 * t513 + t322 * t518) - g(3) * (-t327 * t513 + t414 * t518) - t747 * t49 - t744 * t21 - t802 * t852 + t800 * t149, t119 * t43 - t120 * t44 - t147 * t802 - t149 * t801 - t2 * t302 - t21 * t746 - t3 * t303 - t622 * t747 + t588, t2 * t120 + t3 * t119 + t8 * t166 - g(1) * (pkin(5) * t260 + pkin(13) * t259 + t699) - g(2) * (pkin(5) * t258 + pkin(13) * t257 + t700) - g(3) * (pkin(5) * t327 + pkin(13) * t326 + t621) + t544 + t800 * t49 + t802 * t21 - t801 * t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t771, -t339 ^ 2 + t341 ^ 2, -t339 * t404 - t526, -t771, -t341 * t404 + t530, t540, -t196 * t404 - t252 * t341 + t587 - t603, -t195 * t404 + t252 * t339 - t107 + t586, 0, 0, -t133 * t515 + t263 * t662 (-t133 + t775) * t519 + (-t134 - t773) * t515, t213 * t515 - t263 * t341 + t333 * t662, -t134 * t519 - t262 * t663, t213 * t519 - t262 * t341 - t333 * t663, -t333 * t341, -pkin(3) * t134 - t112 * t341 - t139 * t333 + t196 * t262 + t515 * t594 - t519 * t553, pkin(3) * t133 + t113 * t341 + t140 * t333 - t196 * t263 + t515 * t553 + t519 * t594, t139 * t263 - t140 * t262 + ((-t134 + t723) * pkin(11) + t855) * t519 + ((-qJD(4) * t262 - t133) * pkin(11) + t843) * t515 - t586, -t112 * t139 - t113 * t140 - t168 * t196 + t575 * pkin(3) + (-t596 * t519 - t32 * t515 + (-t112 * t519 - t113 * t515) * qJD(4) - t586) * pkin(11), -t459 * t70 + t600 * t737, -t172 * t737 + t458 * t70 - t459 * t71 - t600 * t736, -t459 * t543 - t600 * t341 + (t459 * t678 + (t459 * t549 + (t459 * t591 + t517 * t737) * t516) * qJD(1)) * t512 + t737 * t646, t172 * t736 + t458 * t71, t458 * t543 + t172 * t341 + (-t458 * t678 + (-t458 * t549 + (-t458 * t591 - t517 * t736) * t516) * qJD(1)) * t512 - t736 * t646, -t564 * t341, t135 * t736 + t172 * t837 - t51 * t341 + t67 * t458 - t503 * t71 + t505 * t587 - t528 * t598 - t564 * t786, t135 * t737 + t52 * t341 + t397 * t529 + t67 * t459 + t503 * t70 - t564 * t788 + t600 * t837 - t839, -t10 * t459 - t172 * t788 - t397 * t71 - t458 * t9 - t51 * t737 - t52 * t736 + t598 * t70 + t600 * t786 - t586, -g(1) * t740 - g(2) * t741 - g(3) * t738 + t10 * t598 + t135 * t837 + t9 * t397 - t67 * t503 - t786 * t51 + t788 * t52, t149 * t578 - t43 * t762, t666 * t149 + t665 * t147 + (t40 - t42 + (-t149 * t518 + t781) * qJD(6)) * t459, t149 * t736 - t43 * t458 + t578 * t852 + t69 * t762, t147 * t579 + t44 * t763, -t147 * t736 - t44 * t458 - t579 * t852 - t69 * t763, t458 * t69 + t736 * t852, t265 * t69 + t3 * t458 - t598 * t44 + t8 * t763 - g(1) * (-t300 * t758 + t301 * t513) - g(2) * (-t296 * t758 + t297 * t513) - g(3) * (-t372 * t758 + t373 * t513) - t736 * t622 + t791 * t852 + t787 * t147 + t579 * t49, -t266 * t69 - t2 * t458 + t598 * t43 + t8 * t762 - g(1) * (t300 * t759 + t301 * t518) - g(2) * (t296 * t759 + t297 * t518) - g(3) * (t372 * t759 + t373 * t518) - t736 * t21 - t792 * t852 + t787 * t149 + t578 * t49, t265 * t43 - t266 * t44 + t666 * t21 - t665 * t622 - t791 * t149 - t792 * t147 + t839 + (-qJD(6) * t828 - t2 * t513 - t3 * t518) * t459, t2 * t266 + t3 * t265 - t8 * t598 - g(1) * (t300 * t631 + t740) - g(2) * (t296 * t631 + t741) - g(3) * (t372 * t631 + t738) + t787 * t49 + t792 * t21 - t791 * t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t774, -t262 ^ 2 + t263 ^ 2, -t133 - t775, t774, t773 - t134, t213, -g(1) * t237 + g(2) * t872 + g(3) * t293 - t168 * t263 - t843, g(1) * t238 - g(2) * t871 + g(3) * t294 - t168 * t262 - t855, 0, 0, t776, t851, t850, -t776, t820, -t528, -t172 * t813 - t528 * t708 + t564 * t842 - t684 * t97 - t720 * t82 + t822, -t600 * t813 + t529 * t812 + (t56 - t658) * t564 + t849, t52 * t600 + t56 * t172 - t51 * t172 - t55 * t600 + (t815 * t70 - t514 * t71 + (-t172 * t815 + t514 * t600) * qJD(5)) * pkin(4), -g(1) * t363 + g(2) * t361 + g(3) * t421 + t51 * t55 - t52 * t56 + (t10 * t815 - t135 * t263 + t9 * t514 + (-t51 * t514 + t52 * t815) * qJD(5) + t569) * pkin(4), t869, t878, t868, t781 * t852 - t42, t875, -t841, -t25 * t852 + t502 * t44 - t842 * t147 + (-t658 * t852 + t623) * t513 + (-t501 * t718 + t576) * t518 + t825, -t502 * t43 + t623 * t518 - t842 * t149 + (t501 * t717 - t518 * t658 + t26) * t852 + t823, t26 * t147 + t25 * t149 + (-t147 * t658 + t172 * t622 - t44 * t501 + (t149 * t501 + t622) * qJD(6)) * t518 + (t149 * t658 - t172 * t21 - t43 * t501 - t3 + (t147 * t501 - t21) * qJD(6)) * t513 + t577, t8 * t502 - t21 * t26 + t622 * t25 - t49 * t55 - g(1) * (pkin(13) * t232 - t226 + t363) - g(2) * (pkin(13) * t228 + t225 - t361) - g(3) * (pkin(13) * t283 + t272 - t421) + (t569 + (t49 * t514 + t815 * t828) * qJD(5)) * pkin(4) + t547 * t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t776, t851, t850, -t776, t820, -t528, t333 * t52 + t822, t51 * t564 + t849, 0, 0, t869, t878, t868, t147 * t874 - t42, t875, -t841, -pkin(5) * t44 - t147 * t52 - t852 * t29 + (-pkin(13) * t69 + t865) * t513 + (-pkin(13) * t718 + t576) * t518 + t825, t49 * t863 + pkin(5) * t43 - t149 * t52 + t852 * t30 + (t717 * t852 - t66) * pkin(13) + t823, t147 * t30 + t149 * t29 + (t797 + (-t44 + t719) * pkin(13)) * t518 + ((qJD(6) * t147 - t43) * pkin(13) + t844) * t513 + t577, -t8 * pkin(5) + g(1) * t226 - g(2) * t225 - g(3) * t272 + t622 * t29 - t21 * t30 - t49 * t52 + (t547 + t589) * pkin(13); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t780, -t147 ^ 2 + t149 ^ 2, t147 * t852 - t43, -t780, t149 * t852 - t44, t69, -t49 * t149 - g(1) * t161 + g(2) * t877 - g(3) * (-t283 * t513 + t358) - t844, -t797 + t49 * t147 + g(1) * t162 + g(2) * t876 - g(3) * (-t283 * t518 - t770) - t2, 0, 0;];
tau_reg  = t6;
