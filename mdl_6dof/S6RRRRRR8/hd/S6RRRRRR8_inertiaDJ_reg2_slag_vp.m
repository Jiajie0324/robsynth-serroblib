% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_inertiaDJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 05:06:46
% EndTime: 2019-03-10 05:08:00
% DurationCPUTime: 35.53s
% Computational Cost: add. (44150->911), mult. (128565->1595), div. (0->0), fcn. (133313->14), ass. (0->374)
t190 = sin(pkin(6));
t194 = sin(qJ(3));
t199 = cos(qJ(2));
t453 = cos(pkin(7));
t370 = t199 * t453;
t195 = sin(qJ(2));
t198 = cos(qJ(3));
t433 = t195 * t198;
t313 = t194 * t370 + t433;
t189 = sin(pkin(7));
t454 = cos(pkin(6));
t373 = t189 * t454;
t351 = qJD(3) * t373;
t334 = t194 * t351;
t371 = t198 * t453;
t485 = (t194 * t199 + t195 * t371) * qJD(2);
t234 = t190 * (qJD(3) * t313 + t485) + t334;
t435 = t194 * t195;
t400 = t190 * t435;
t354 = t190 * t370;
t156 = t198 * t354;
t168 = t198 * t373;
t430 = t156 + t168;
t332 = t400 - t430;
t86 = 0.2e1 * t234 * t332;
t197 = cos(qJ(4));
t502 = t190 * t485;
t258 = t190 * t313 + t194 * t373;
t503 = qJD(3) * t258;
t489 = t503 + t502;
t505 = t489 * t197;
t440 = t190 * t195;
t356 = t453 * t440;
t335 = qJD(2) * t356;
t423 = qJD(2) * t199;
t379 = t190 * t423;
t269 = t194 * t379 + t198 * t335;
t504 = t503 + t269;
t331 = t190 * (-t453 * pkin(10) - pkin(9));
t393 = pkin(1) * t454;
t364 = t199 * t393;
t265 = t195 * t331 + t364;
t389 = t454 * pkin(2);
t256 = t389 + t265;
t395 = -pkin(2) * t199 - pkin(1);
t442 = t189 * t195;
t308 = (-pkin(10) * t442 + t395) * t190;
t233 = t189 * t308 + t453 * t256;
t291 = t354 + t373;
t365 = t195 * t393;
t439 = t190 * t199;
t302 = -pkin(9) * t439 - t365;
t251 = pkin(10) * t291 - t302;
t82 = -t194 * t251 + t198 * t233;
t422 = qJD(3) * t189;
t441 = t189 * t198;
t479 = t194 ^ 2;
t81 = -t441 * t502 + ((-0.2e1 * t168 - t156) * t194 + (t479 * t195 - t198 * t313) * t190) * t422;
t238 = pkin(3) * t332 - pkin(11) * t258;
t220 = -t189 * t256 + t453 * t308 + t238;
t424 = qJD(2) * t195;
t380 = t190 * t424;
t358 = t189 * t380;
t481 = -qJD(2) * t265 - t233 * qJD(3);
t262 = qJD(2) * (t199 * t331 - t365);
t425 = qJD(2) * t190;
t297 = (-pkin(10) * t189 * t199 + pkin(2) * t195) * t425;
t482 = qJD(3) * t251 - t189 * t297 - t453 * t262;
t55 = t194 * t482 + t198 * t481;
t501 = -pkin(11) * t358 - qJD(4) * t220 + t55;
t325 = t189 * t439 - t454 * t453;
t310 = t325 * pkin(11);
t83 = t194 * t233 + t198 * t251;
t218 = -t310 + t83;
t274 = qJD(3) * t291;
t383 = qJD(3) * t440;
t431 = (t335 + t383) * t194;
t495 = -(t274 + t379) * t198 + t431;
t500 = pkin(3) * t234 + pkin(11) * t495 - qJD(4) * t218 - t189 * t262 + t453 * t297;
t76 = pkin(3) * t325 - t82;
t372 = t194 * t453;
t363 = pkin(2) * t372;
t295 = t453 * pkin(11) + t363;
t406 = pkin(10) * t441;
t499 = qJD(4) * (t295 + t406) - (pkin(3) * t194 - pkin(11) * t198) * t422;
t443 = t189 * t194;
t300 = -pkin(2) * t371 + pkin(10) * t443;
t282 = t300 * qJD(3);
t394 = -pkin(11) * t194 - pkin(2);
t337 = -pkin(3) * t198 + t394;
t419 = qJD(4) * t189;
t498 = -t337 * t419 + t282;
t420 = qJD(3) * t198;
t381 = t189 * t420;
t497 = qJD(4) * t453 + t381;
t191 = sin(qJ(6));
t187 = t191 ^ 2;
t196 = cos(qJ(6));
t188 = t196 ^ 2;
t428 = t187 - t188;
t484 = t428 * qJD(6);
t193 = sin(qJ(4));
t105 = -t193 * t325 + t197 * t258;
t192 = sin(qJ(5));
t253 = qJD(4) * t258;
t298 = t325 * qJD(4);
t401 = t197 * t253 + (-t495 - t298) * t193;
t293 = t197 * t358 - t401;
t415 = qJD(5) * t192;
t473 = cos(qJ(5));
t368 = t453 * qJD(3);
t322 = t199 * (t368 + qJD(2));
t432 = t197 * t198;
t73 = -t193 * t253 + (t198 * t351 - t298 - t431) * t197 + (t189 * t193 * t424 + t322 * t432) * t190;
t257 = t105 * t415 - t192 * t293 - t473 * t73;
t284 = t258 * t193 + t197 * t325;
t266 = t473 * t284;
t230 = qJD(5) * t266 + t257;
t78 = t473 * t105 - t192 * t284;
t40 = t78 * qJD(5) + t192 * t73 - t473 * t293;
t56 = t194 * t481 - t198 * t482;
t52 = -pkin(3) * t358 - t56;
t41 = -pkin(4) * t293 + t52;
t205 = t40 * pkin(5) + pkin(13) * t230 + t41;
t321 = t332 * pkin(4);
t281 = -t105 * pkin(12) + t321;
t208 = -t193 * t218 + t197 * t220 + t281;
t273 = t284 * pkin(12);
t296 = t364 + t389;
t407 = pkin(9) * t440;
t270 = t296 - t407;
t333 = -t190 * pkin(1) - pkin(2) * t439;
t223 = -t189 * t270 + t453 * t333 + t238;
t224 = -t198 * t302 + t270 * t372 + t333 * t443 - t310;
t211 = t193 * t223 + t197 * t224;
t185 = t189 ^ 2;
t487 = -t453 ^ 2 - t185;
t242 = pkin(10) * (t168 + (t198 * t370 + t435 * t487) * t190);
t48 = t197 * t242 + t211;
t207 = -t273 + t48;
t43 = t473 * t207;
t24 = t192 * t208 + t43;
t22 = pkin(13) * t332 + t24;
t413 = qJD(6) * t191;
t58 = pkin(4) * t284 + t76;
t77 = t105 * t192 + t266;
t216 = t77 * pkin(5) - t78 * pkin(13) + t58;
t232 = t234 * pkin(4);
t26 = t501 * t193 + t500 * t197;
t202 = -t73 * pkin(12) + t232 + t26;
t25 = -t500 * t193 + t501 * t197;
t491 = pkin(12) * t293 + qJD(5) * t208 - t25;
t7 = -t192 * t202 + t207 * t415 - t491 * t473;
t493 = -pkin(13) * t234 - qJD(6) * t216 + t7;
t2 = -t191 * t205 + t493 * t196 + t22 * t413;
t1 = t2 * t196;
t184 = qJD(6) * t196;
t3 = -t184 * t22 + t493 * t191 + t196 * t205;
t11 = -t191 * t22 + t196 * t216;
t12 = t191 * t216 + t196 * t22;
t348 = t11 * t196 + t12 * t191;
t271 = -qJD(6) * t348 - t3 * t191 - t1;
t112 = t197 * t295 + (pkin(10) * t432 + t193 * t337) * t189;
t343 = t193 * t443 - t197 * t453;
t228 = -pkin(12) * t343 + t112;
t143 = t193 * t453 + t197 * t443;
t279 = t193 * t295;
t470 = pkin(10) * t193;
t236 = t279 + t143 * pkin(12) - (t197 * t394 + (-pkin(3) * t197 - pkin(4) - t470) * t198) * t189;
t70 = -t192 * t236 + t473 * t228;
t387 = t473 * t193;
t437 = t192 * t197;
t153 = t387 + t437;
t210 = -t193 * t224 + t197 * t223;
t23 = -pkin(10) * t153 * (t198 * t291 + t400 * t487) + t473 * (t210 + t281) - t192 * (-t273 + t211);
t21 = -pkin(5) * t332 - t23;
t201 = qJD(5) * t43 + t491 * t192 - t473 * t202;
t6 = -pkin(5) * t234 + t201;
t376 = -t6 * t196 + t21 * t413;
t147 = t363 + t406;
t138 = qJD(3) * t147;
t382 = t194 * t419;
t396 = t193 * t497 + t197 * t382;
t110 = pkin(4) * t396 + t138;
t128 = t193 * t382 - t197 * t497;
t280 = t473 * t128 + t143 * t415 + t192 * t396;
t309 = t473 * t343;
t247 = qJD(5) * t309 + t280;
t114 = t473 * t143 - t192 * t343;
t80 = t114 * qJD(5) - t192 * t128 + t473 * t396;
t226 = t80 * pkin(5) + pkin(13) * t247 + t110;
t421 = qJD(3) * t194;
t175 = t189 * t421;
t113 = t192 * t143 + t309;
t136 = -t453 * pkin(3) + t300;
t116 = pkin(4) * t343 + t136;
t239 = t113 * pkin(5) - t114 * pkin(13) + t116;
t367 = pkin(4) * t175;
t85 = t193 * t498 - t197 * t499;
t221 = t128 * pkin(12) + t367 + t85;
t84 = t193 * t499 + t197 * t498;
t240 = pkin(12) * t396 + t84;
t490 = t192 * t228 + t473 * t236;
t37 = t490 * qJD(5) - t192 * t221 + t473 * t240;
t492 = -pkin(13) * t175 - qJD(6) * t239 + t37;
t68 = -pkin(13) * t441 + t70;
t14 = -t191 * t226 + t492 * t196 + t413 * t68;
t13 = t14 * t196;
t15 = -t184 * t68 + t492 * t191 + t196 * t226;
t44 = -t191 * t68 + t196 * t239;
t45 = t191 * t239 + t196 * t68;
t346 = t191 * t45 + t196 * t44;
t268 = -qJD(6) * t346 - t15 * t191 - t13;
t212 = t70 * qJD(5) - t192 * t240 - t473 * t221;
t36 = -pkin(5) * t175 + t212;
t67 = pkin(5) * t441 + t490;
t374 = -t36 * t196 + t67 * t413;
t483 = qJD(4) + qJD(5);
t478 = t198 ^ 2;
t477 = 0.2e1 * t189;
t476 = 0.2e1 * qJD(3);
t475 = -pkin(12) - pkin(11);
t474 = t21 * t184 + t6 * t191;
t472 = pkin(2) * t189;
t471 = pkin(4) * t192;
t469 = pkin(11) * t189;
t467 = t67 * t184 + t36 * t191;
t466 = pkin(4) * qJD(5);
t319 = t332 * t196;
t27 = -qJD(6) * t319 - t191 * t234 + t196 * t230 + t413 * t78;
t465 = t191 * t27;
t62 = t191 * t332 + t196 * t78;
t28 = qJD(6) * t62 - t191 * t230 - t196 * t234;
t464 = t191 * t28;
t106 = t114 * t191 + t196 * t441;
t59 = qJD(6) * t106 - t175 * t191 + t196 * t247;
t463 = t191 * t59;
t61 = t191 * t78 - t319;
t462 = t191 * t61;
t461 = t193 * t73;
t460 = t196 * t27;
t459 = t196 * t28;
t398 = t191 * t441;
t60 = -qJD(6) * t398 + t114 * t184 - t175 * t196 - t191 * t247;
t458 = t196 * t60;
t457 = t196 * t62;
t169 = t475 * t197;
t438 = t192 * t193;
t130 = -t473 * t169 + t475 * t438;
t392 = qJD(4) * t475;
t155 = t193 * t392;
t386 = t473 * t197;
t357 = qJD(4) * t386;
t102 = t130 * qJD(5) + t192 * t155 - t475 * t357;
t129 = -t192 * t169 - t475 * t387;
t455 = t102 * t191 + t129 * t184;
t452 = t102 * t129;
t451 = t106 * t191;
t107 = t114 * t196 - t398;
t450 = t107 * t196;
t375 = qJD(5) * t473;
t126 = -t197 * t375 + t438 * t483 - t357;
t449 = t126 * t191;
t448 = t126 * t196;
t447 = t129 * t192;
t446 = t153 * t126;
t445 = t153 * t191;
t444 = t153 * t196;
t436 = t193 * t128;
t182 = -t473 * pkin(4) - pkin(5);
t402 = pkin(4) * t415;
t429 = t182 * t184 + t191 * t402;
t427 = t473 ^ 2;
t426 = qJD(2) * t189;
t418 = qJD(4) * t193;
t417 = qJD(4) * t197;
t416 = qJD(4) * t198;
t412 = 0.2e1 * t77 * t40;
t410 = -0.2e1 * pkin(3) * qJD(4);
t409 = 0.2e1 * t113 * t80;
t127 = t483 * t153;
t152 = -t386 + t438;
t408 = 0.2e1 * t152 * t127;
t405 = pkin(4) * t418;
t404 = pkin(5) * t413;
t403 = pkin(5) * t184;
t399 = t190 * t433;
t397 = t191 * t448;
t183 = -pkin(4) * t197 - pkin(3);
t391 = t191 * t473;
t390 = t196 * t473;
t388 = t473 * t113;
t186 = t190 ^ 2;
t385 = t186 * t423;
t384 = t185 * t421;
t378 = t191 * t184;
t377 = t193 * t417;
t366 = pkin(4) * t375;
t362 = t185 * t380;
t150 = t153 ^ 2;
t361 = t150 * t378;
t360 = t198 * t384;
t359 = t195 * t385;
t353 = t396 * t197;
t352 = t454 * t425;
t350 = t189 * t368;
t349 = t113 * t40 + t77 * t80;
t347 = t127 * t77 + t152 * t40;
t345 = t191 * t62 + t196 * t61;
t311 = -pkin(5) * t152 + pkin(13) * t153 - t183;
t290 = t196 * t311;
t92 = -t191 * t130 - t290;
t93 = t196 * t130 - t191 * t311;
t344 = t191 * t93 + t196 * t92;
t342 = t113 * t127 + t152 * t80;
t341 = t106 * t196 + t107 * t191;
t181 = pkin(13) + t471;
t340 = t152 * t181 - t153 * t182;
t339 = t453 * qJD(2) + qJD(3);
t336 = t182 * t413 - t196 * t402;
t31 = t184 * t77 + t191 * t40;
t330 = -t196 * t40 + t413 * t77;
t64 = t113 * t184 + t191 * t80;
t329 = t113 * t413 - t196 * t80;
t328 = t153 * t184 - t449;
t327 = t153 * t413 + t448;
t326 = -t127 * t196 + t152 * t413;
t324 = t193 * t343;
t323 = t198 * t339;
t320 = t189 * t332;
t318 = qJD(4) * t332;
t316 = (t187 + t188) * t473;
t315 = t193 * t416 + t197 * t421;
t314 = t193 * t421 - t197 * t416;
t307 = t194 * t322;
t306 = t195 * t323;
t305 = t189 * t325;
t304 = (-t473 * t152 + t153 * t192) * qJD(5);
t301 = -t364 + t407;
t299 = pkin(5) * t127 + pkin(13) * t126 + t405;
t289 = qJD(3) * t305;
t277 = t293 * t197;
t272 = t193 * t284;
t101 = t129 * qJD(5) - t473 * t155 - t392 * t437;
t53 = qJD(6) * t290 + t196 * t101 + t130 * t413 - t191 * t299;
t54 = -qJD(6) * t93 + t191 * t101 + t196 * t299;
t29 = -qJD(6) * t344 - t191 * t54 - t196 * t53;
t47 = -t193 * t242 + t210;
t267 = -t26 * t193 - t25 * t197 + (-t193 * t48 - t197 * t47) * qJD(4);
t111 = -t279 + (t197 * t337 - t198 * t470) * t189;
t264 = -t85 * t193 - t84 * t197 + (-t111 * t197 - t112 * t193) * qJD(4);
t260 = pkin(4) * t304 - t126 * t182 - t127 * t181;
t243 = t189 * t495;
t225 = t489 * t193 + t197 * t318;
t174 = -0.2e1 * t378;
t173 = 0.2e1 * t378;
t157 = -0.2e1 * t360;
t151 = -0.2e1 * t484;
t142 = t316 * t466;
t140 = t302 * qJD(2);
t139 = t301 * qJD(2);
t124 = t129 * t413;
t109 = t127 * t191 + t152 * t184;
t103 = (pkin(2) * t356 - t189 * t302) * qJD(2);
t99 = -t189 * t296 + (pkin(9) * t442 + t453 * t395) * t190;
t90 = t153 * t484 + t397;
t87 = t126 * t428 - 0.4e1 * t153 * t378;
t50 = t106 * t413 - t458;
t49 = t107 * t184 - t463;
t32 = -qJD(6) * t341 - t191 * t60 - t196 * t59;
t18 = t413 * t61 - t459;
t17 = t184 * t62 - t465;
t9 = -qJD(6) * t345 - t460 - t464;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t359, 0.2e1 * (-t195 ^ 2 + t199 ^ 2) * t186 * qJD(2), 0.2e1 * t199 * t352, -0.2e1 * t359, -0.2e1 * t195 * t352, 0, -0.2e1 * t186 * pkin(1) * t424 + 0.2e1 * t140 * t454, -0.2e1 * pkin(1) * t385 + 0.2e1 * t139 * t454, 0.2e1 * (-t139 * t199 - t140 * t195 + (t195 * t302 + t199 * t301) * qJD(2)) * t190, 0.2e1 * t139 * t302 - 0.2e1 * t140 * t301, -0.2e1 * t258 * t495, -0.2e1 * t234 * t258 + 0.2e1 * t332 * t495, 0.2e1 * t258 * t358 + 0.2e1 * t325 * t495, t86, 0.2e1 * t234 * t325 - 0.2e1 * t320 * t380, -0.2e1 * t305 * t380, -0.2e1 * t56 * t325 - 0.2e1 * t103 * t430 + 0.2e1 * t99 * t334 + 0.2e1 * (t99 * t307 + (t103 * t194 + t323 * t99 + t426 * t82) * t195) * t190, 0.2e1 * t103 * t258 - 0.2e1 * t325 * t55 - 0.2e1 * t358 * t83 - 0.2e1 * t495 * t99, -0.2e1 * t234 * t83 - 0.2e1 * t258 * t56 + 0.2e1 * t332 * t55 + 0.2e1 * t495 * t82, 0.2e1 * t103 * t99 - 0.2e1 * t55 * t83 + 0.2e1 * t56 * t82, 0.2e1 * t105 * t73, 0.2e1 * t105 * t293 - 0.2e1 * t284 * t73, -0.2e1 * t73 * t430 + 0.2e1 * t105 * t334 + 0.2e1 * (t105 * t306 + (t105 * t322 + t73 * t195) * t194) * t190, -0.2e1 * t284 * t293, -0.2e1 * t234 * t284 + 0.2e1 * t293 * t332, t86, -0.2e1 * t26 * t430 + 0.2e1 * t47 * t334 + 0.2e1 * t52 * t284 + 0.2e1 * t76 * t401 + 0.2e1 * (t47 * t307 + (-t197 * t426 * t76 + t26 * t194 + t323 * t47) * t195) * t190, -0.2e1 * t25 * t430 - 0.2e1 * t48 * t334 + 0.2e1 * t52 * t105 + 0.2e1 * t76 * t73 + 0.2e1 * (-t48 * t339 * t433 + (t25 * t195 - t48 * t322) * t194) * t190, -0.2e1 * t26 * t105 + 0.2e1 * t25 * t284 + 0.2e1 * t293 * t48 - 0.2e1 * t47 * t73, -0.2e1 * t25 * t48 + 0.2e1 * t26 * t47 + 0.2e1 * t52 * t76, -0.2e1 * t78 * t230, 0.2e1 * t230 * t77 - 0.2e1 * t78 * t40, -0.2e1 * t230 * t332 + 0.2e1 * t504 * t78, t412, 0.2e1 * t40 * t430 - 0.2e1 * t77 * t334 + 0.2e1 * (-t77 * t306 + (-t40 * t195 - t322 * t77) * t194) * t190, t86, 0.2e1 * t201 * t430 + 0.2e1 * t23 * t334 + 0.2e1 * t41 * t77 + 0.2e1 * t58 * t40 + 0.2e1 * (t23 * t306 + (-t195 * t201 + t23 * t322) * t194) * t190, -0.2e1 * t230 * t58 - 0.2e1 * t504 * t24 + 0.2e1 * t332 * t7 + 0.2e1 * t41 * t78, 0.2e1 * t201 * t78 + 0.2e1 * t23 * t230 - 0.2e1 * t24 * t40 + 0.2e1 * t7 * t77, -0.2e1 * t201 * t23 - 0.2e1 * t24 * t7 + 0.2e1 * t41 * t58, -0.2e1 * t62 * t27, 0.2e1 * t27 * t61 - 0.2e1 * t28 * t62, -0.2e1 * t27 * t77 + 0.2e1 * t40 * t62, 0.2e1 * t61 * t28, -0.2e1 * t28 * t77 - 0.2e1 * t40 * t61, t412, 0.2e1 * t11 * t40 + 0.2e1 * t21 * t28 + 0.2e1 * t3 * t77 + 0.2e1 * t6 * t61, -0.2e1 * t12 * t40 + 0.2e1 * t2 * t77 - 0.2e1 * t21 * t27 + 0.2e1 * t6 * t62, 0.2e1 * t11 * t27 - 0.2e1 * t12 * t28 + 0.2e1 * t2 * t61 - 0.2e1 * t3 * t62, 0.2e1 * t11 * t3 - 0.2e1 * t12 * t2 + 0.2e1 * t21 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379, 0, -t380, 0, t140, t139, 0, 0 (t478 * t383 + ((0.2e1 * t274 + t379) * t198 - t431) * t194) * t189, -t198 * t243 - t320 * t420 + (-t234 - t503) * t443, t194 * t362 - t198 * t289 - t453 * t495, t81, t194 * t289 + t198 * t362 - t234 * t453, t189 * t335, -t103 * t441 + t138 * t325 + t175 * t99 - t234 * t472 - t300 * t358 + t453 * t56, pkin(2) * t243 + t103 * t443 - t147 * t358 - t282 * t325 + t381 * t99 + t453 * t55, t138 * t258 - t147 * t234 - t175 * t83 + t282 * t332 - t300 * t495 - t381 * t82 - t441 * t55 - t443 * t56, -t103 * t472 - t82 * t138 - t55 * t147 - t282 * t83 - t300 * t56, -t105 * t128 + t143 * t73, -t105 * t396 + t128 * t284 + t143 * t293 - t343 * t73, -t128 * t332 - t73 * t441 + t143 * t502 + (t143 * t399 + (t105 * t189 + t143 * t291) * t194) * qJD(3), t284 * t396 - t293 * t343, -t175 * t284 - t234 * t343 - t293 * t441 - t332 * t396, t81, t111 * t234 - t136 * t293 + t138 * t284 + t175 * t47 - t26 * t441 + t332 * t85 + t343 * t52 + t396 * t76, t138 * t105 - t112 * t234 - t76 * t128 + t136 * t73 + t52 * t143 - t175 * t48 - t25 * t441 + t332 * t84, -t85 * t105 - t111 * t73 + t112 * t293 + t47 * t128 - t26 * t143 + t25 * t343 + t284 * t84 - t396 * t48, t111 * t26 - t112 * t25 + t136 * t52 + t138 * t76 + t47 * t85 - t48 * t84, -t114 * t230 - t247 * t78, t113 * t230 - t114 * t40 + t247 * t77 - t78 * t80, -t247 * t332 + t114 * t269 + t230 * t441 + (t114 * t399 + (t114 * t291 + t78 * t189) * t194) * qJD(3), t349, -t80 * t332 + t40 * t441 - t113 * t502 + (-t113 * t399 + (-t113 * t291 - t77 * t189) * t194) * qJD(3), t81, t110 * t77 + t41 * t113 + t116 * t40 + t175 * t23 + t201 * t441 - t212 * t332 - t234 * t490 + t58 * t80, t110 * t78 + t41 * t114 - t116 * t230 - t175 * t24 - t234 * t70 - t247 * t58 + t332 * t37 - t441 * t7, t7 * t113 + t114 * t201 + t212 * t78 + t23 * t247 - t230 * t490 - t24 * t80 + t37 * t77 - t70 * t40, t110 * t58 + t116 * t41 + t201 * t490 - t212 * t23 - t24 * t37 - t7 * t70, -t107 * t27 - t59 * t62, t106 * t27 - t107 * t28 + t59 * t61 - t60 * t62, t107 * t40 - t113 * t27 - t59 * t77 + t62 * t80, t106 * t28 + t60 * t61, -t106 * t40 - t113 * t28 - t60 * t77 - t61 * t80, t349, t106 * t6 + t11 * t80 + t113 * t3 + t15 * t77 + t21 * t60 + t28 * t67 + t36 * t61 + t40 * t44, t107 * t6 + t113 * t2 - t12 * t80 + t14 * t77 - t21 * t59 - t27 * t67 + t36 * t62 - t40 * t45, t106 * t2 - t107 * t3 + t11 * t59 - t12 * t60 + t14 * t61 - t15 * t62 + t27 * t44 - t28 * t45, t11 * t15 - t12 * t14 - t2 * t45 + t21 * t36 + t3 * t44 + t6 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t360 (t478 - t479) * t185 * t476, 0.2e1 * t198 * t350, t157, -0.2e1 * t194 * t350, 0, -0.2e1 * pkin(2) * t384 - 0.2e1 * t138 * t453 (-t185 * pkin(2) * t198 + t300 * t453) * t476, 0.2e1 * t138 * t443 - 0.2e1 * t147 * t175 - 0.2e1 * t282 * t441 + 0.2e1 * t300 * t381, 0.2e1 * t138 * t300 - 0.2e1 * t147 * t282, -0.2e1 * t143 * t128, 0.2e1 * t128 * t343 - 0.2e1 * t143 * t396 (t128 * t198 + t143 * t421) * t477, 0.2e1 * t343 * t396 (t198 * t396 - t343 * t421) * t477, t157, 0.2e1 * t138 * t343 + 0.2e1 * t136 * t396 + 0.2e1 * (t111 * t421 - t198 * t85) * t189, -0.2e1 * t128 * t136 + 0.2e1 * t138 * t143 + 0.2e1 * (-t112 * t421 - t198 * t84) * t189, 0.2e1 * t111 * t128 - 0.2e1 * t112 * t396 - 0.2e1 * t85 * t143 + 0.2e1 * t343 * t84, 0.2e1 * t111 * t85 - 0.2e1 * t112 * t84 + 0.2e1 * t136 * t138, -0.2e1 * t114 * t247, 0.2e1 * t113 * t247 - 0.2e1 * t114 * t80 (t114 * t421 + t198 * t247) * t477, t409 (-t113 * t421 + t198 * t80) * t477, t157, 0.2e1 * t110 * t113 + 0.2e1 * t116 * t80 + 0.2e1 * (t198 * t212 - t421 * t490) * t189, 0.2e1 * t110 * t114 - 0.2e1 * t116 * t247 + 0.2e1 * (-t198 * t37 - t421 * t70) * t189, 0.2e1 * t37 * t113 + 0.2e1 * t114 * t212 - 0.2e1 * t247 * t490 - 0.2e1 * t70 * t80, 0.2e1 * t110 * t116 + 0.2e1 * t212 * t490 - 0.2e1 * t37 * t70, -0.2e1 * t107 * t59, 0.2e1 * t106 * t59 - 0.2e1 * t107 * t60, 0.2e1 * t107 * t80 - 0.2e1 * t113 * t59, 0.2e1 * t106 * t60, -0.2e1 * t106 * t80 - 0.2e1 * t113 * t60, t409, 0.2e1 * t106 * t36 + 0.2e1 * t113 * t15 + 0.2e1 * t44 * t80 + 0.2e1 * t60 * t67, 0.2e1 * t107 * t36 + 0.2e1 * t113 * t14 - 0.2e1 * t45 * t80 - 0.2e1 * t59 * t67, 0.2e1 * t106 * t14 - 0.2e1 * t107 * t15 + 0.2e1 * t44 * t59 - 0.2e1 * t45 * t60, -0.2e1 * t14 * t45 + 0.2e1 * t15 * t44 + 0.2e1 * t36 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, 0, -t234, t358, t56, t55, 0, 0, t105 * t417 + t461, t193 * t293 + t73 * t197 + (-t105 * t193 - t197 * t284) * qJD(4), t225, qJD(4) * t272 + t277, -t193 * t318 + t505, 0, pkin(3) * t293 - pkin(11) * t225 - t52 * t197 + t418 * t76, t76 * t417 - pkin(3) * t73 + t52 * t193 + (t332 * t418 - t505) * pkin(11) (t277 + t461 + (t197 * t105 + t272) * qJD(4)) * pkin(11) + t267, -pkin(3) * t52 + pkin(11) * t267, -t78 * t126 - t153 * t230, t126 * t77 - t78 * t127 + t152 * t230 - t153 * t40, t126 * t430 + t153 * t334 + (t153 * t306 + (-t126 * t195 + t153 * t322) * t194) * t190, t347, t127 * t430 - t152 * t334 + (-t152 * t306 + (-t127 * t195 - t152 * t322) * t194) * t190, 0, -t102 * t332 + t58 * t127 - t129 * t234 + t41 * t152 + t183 * t40 + t405 * t77, t101 * t332 - t58 * t126 - t130 * t234 + t41 * t153 - t183 * t230 + t405 * t78, t101 * t77 + t102 * t78 + t23 * t126 - t24 * t127 - t129 * t230 - t130 * t40 + t7 * t152 + t153 * t201, -t101 * t24 - t102 * t23 + t129 * t201 - t130 * t7 + t183 * t41 + t405 * t58, -t62 * t448 + (-t413 * t62 - t460) * t153, t345 * t126 + (t465 - t459 + (-t457 + t462) * qJD(6)) * t153, t127 * t62 - t152 * t27 - t153 * t330 - t448 * t77, -t61 * t449 + (t184 * t61 + t464) * t153, -t127 * t61 - t152 * t28 - t153 * t31 + t449 * t77, t347, t102 * t61 + t11 * t127 + t129 * t28 + t152 * t3 + t153 * t474 - t21 * t449 + t40 * t92 + t54 * t77, t102 * t62 - t12 * t127 - t129 * t27 + t152 * t2 - t376 * t153 - t21 * t448 - t40 * t93 + t53 * t77, t27 * t92 - t28 * t93 + t53 * t61 - t54 * t62 + t348 * t126 + (t191 * t2 - t196 * t3 + (t11 * t191 - t12 * t196) * qJD(6)) * t153, t102 * t21 + t11 * t54 - t12 * t53 + t129 * t6 - t2 * t93 + t3 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381, 0, -t175, 0, -t138, t282, 0, 0, t143 * t417 - t436, -t193 * t396 - t128 * t197 + (-t143 * t193 - t197 * t343) * qJD(4), t314 * t189, qJD(4) * t324 - t353, t315 * t189, 0, -pkin(3) * t396 + t136 * t418 - t138 * t197 - t314 * t469, pkin(3) * t128 + t136 * t417 + t138 * t193 - t315 * t469 (-t353 - t436 + (t197 * t143 + t324) * qJD(4)) * pkin(11) + t264, -pkin(3) * t138 + pkin(11) * t264, -t114 * t126 - t153 * t247, t126 * t113 - t114 * t127 + t152 * t247 - t153 * t80 (t126 * t198 + t153 * t421) * t189, t342 (t127 * t198 - t152 * t421) * t189, 0, t113 * t405 + t110 * t152 + t116 * t127 + t183 * t80 + (t102 * t198 - t129 * t421) * t189, t114 * t405 - t183 * t247 + t110 * t153 - t116 * t126 + (-t101 * t198 - t130 * t421) * t189, t101 * t113 + t102 * t114 - t126 * t490 - t70 * t127 - t129 * t247 - t130 * t80 + t37 * t152 + t153 * t212, -t101 * t70 + t102 * t490 + t110 * t183 + t116 * t405 + t129 * t212 - t130 * t37, -t107 * t327 - t444 * t59, t341 * t126 + (t463 - t458 + (-t450 + t451) * qJD(6)) * t153, t107 * t127 - t113 * t327 - t152 * t59 + t444 * t80, t106 * t328 + t445 * t60, -t106 * t127 - t113 * t328 - t152 * t60 - t445 * t80, t342, t102 * t106 + t113 * t54 + t127 * t44 + t129 * t60 + t15 * t152 + t153 * t467 - t449 * t67 + t80 * t92, t102 * t107 + t113 * t53 - t127 * t45 - t129 * t59 + t14 * t152 - t374 * t153 - t67 * t448 - t80 * t93, t106 * t53 - t107 * t54 + t59 * t92 - t60 * t93 + t346 * t126 + (t14 * t191 - t15 * t196 + (t191 * t44 - t196 * t45) * qJD(6)) * t153, t102 * t67 + t129 * t36 - t14 * t93 + t15 * t92 + t44 * t54 - t45 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t377, 0.2e1 * (-t193 ^ 2 + t197 ^ 2) * qJD(4), 0, -0.2e1 * t377, 0, 0, t193 * t410, t197 * t410, 0, 0, -0.2e1 * t446, 0.2e1 * t126 * t152 - 0.2e1 * t127 * t153, 0, t408, 0, 0, 0.2e1 * t127 * t183 + 0.2e1 * t152 * t405, -0.2e1 * t126 * t183 + 0.2e1 * t153 * t405, 0.2e1 * t101 * t152 + 0.2e1 * t102 * t153 - 0.2e1 * t126 * t129 - 0.2e1 * t127 * t130, -0.2e1 * t101 * t130 + 0.2e1 * t183 * t405 + 0.2e1 * t452, -0.2e1 * t188 * t446 - 0.2e1 * t361, 0.2e1 * t150 * t484 + 0.4e1 * t153 * t397, 0.2e1 * t127 * t444 - 0.2e1 * t152 * t327, -0.2e1 * t187 * t446 + 0.2e1 * t361, -0.2e1 * t127 * t445 - 0.2e1 * t152 * t328, t408, 0.2e1 * t102 * t445 + 0.2e1 * t127 * t92 + 0.2e1 * t129 * t328 + 0.2e1 * t152 * t54, 0.2e1 * t102 * t444 - 0.2e1 * t127 * t93 - 0.2e1 * t129 * t327 + 0.2e1 * t152 * t53, 0.2e1 * t344 * t126 + 0.2e1 * (t191 * t53 - t196 * t54 + (t191 * t92 - t196 * t93) * qJD(6)) * t153, -0.2e1 * t53 * t93 + 0.2e1 * t54 * t92 + 0.2e1 * t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, t293, t234, t26, t25, 0, 0, 0, 0, -t230, 0, -t40, t234, t232 * t473 - t321 * t415 - t201, -t234 * t471 - t332 * t366 + t7 (-t192 * t40 + t473 * t257 + (t192 * t78 + t284 * t427 - t473 * t77) * qJD(5)) * pkin(4) (-t473 * t201 - t192 * t7 + (-t192 * t23 + t24 * t473) * qJD(5)) * pkin(4), t17, t9, t31, t18, -t330, 0, t182 * t28 - t31 * t181 + (t192 * t61 - t391 * t77) * t466 + t376, -t182 * t27 + t330 * t181 + (t192 * t62 - t390 * t77) * t466 + t474, -t1 + (-t61 * t366 - t181 * t28 + (t181 * t62 - t11) * qJD(6)) * t196 + (t62 * t366 - t181 * t27 - t3 + (t181 * t61 - t12) * qJD(6)) * t191, t6 * t182 + (-t11 * t391 + t12 * t390 + t192 * t21) * t466 + t271 * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, 0, -t396, t175, t85, t84, 0, 0, 0, 0, -t247, 0, -t80, t175, t367 * t473 + t402 * t441 - t212, -t192 * t367 + t366 * t441 + t37 (-t192 * t80 + t473 * t280 + (t192 * t114 + t343 * t427 - t388) * qJD(5)) * pkin(4) (-t473 * t212 - t192 * t37 + (t192 * t490 + t473 * t70) * qJD(5)) * pkin(4), t49, t32, t64, t50, -t329, 0, t182 * t60 - t64 * t181 + (t106 * t192 - t191 * t388) * t466 + t374, -t182 * t59 + t329 * t181 + (t107 * t192 - t196 * t388) * t466 + t467, -t13 + (-t106 * t366 - t181 * t60 + (t107 * t181 - t44) * qJD(6)) * t196 + (t107 * t366 - t181 * t59 - t15 + (t106 * t181 - t45) * qJD(6)) * t191, t36 * t182 + (t192 * t67 + t390 * t45 - t391 * t44) * t466 + t268 * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, 0, -t418, 0, -pkin(11) * t417, pkin(11) * t418, 0, 0, 0, 0, -t126, 0, -t127, 0, -t102, t101 (t126 * t473 - t127 * t192 + t304) * pkin(4) (-t473 * t102 - t101 * t192 + (t130 * t473 + t447) * qJD(5)) * pkin(4), -t90, t87, t109, t90, -t326, 0, t124 + (-qJD(6) * t340 - t102) * t196 + t260 * t191, t196 * t260 + t340 * t413 + t455, t29, t102 * t182 + (t390 * t93 - t391 * t92 + t447) * t466 + t29 * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t402, -0.2e1 * t366, 0, 0, t173, t151, 0, t174, 0, 0, 0.2e1 * t336, 0.2e1 * t429, 0.2e1 * t142, 0.2e1 * (t181 * t316 + t182 * t192) * t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t230, 0, -t40, t234, -t201, t7, 0, 0, t17, t9, t31, t18, -t330, 0, -pkin(5) * t28 - pkin(13) * t31 + t376, pkin(5) * t27 + pkin(13) * t330 + t474 (-t465 - t459 + (t457 + t462) * qJD(6)) * pkin(13) + t271, -pkin(5) * t6 + pkin(13) * t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247, 0, -t80, t175, -t212, t37, 0, 0, t49, t32, t64, t50, -t329, 0, -pkin(5) * t60 - pkin(13) * t64 + t374, pkin(5) * t59 + pkin(13) * t329 + t467 (-t463 - t458 + (t450 + t451) * qJD(6)) * pkin(13) + t268, -pkin(5) * t36 + pkin(13) * t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, 0, -t127, 0, -t102, t101, 0, 0, -t90, t87, t109, t90, -t326, 0, t124 + (pkin(5) * t126 - pkin(13) * t127) * t191 + (-t102 + (-pkin(5) * t153 - pkin(13) * t152) * qJD(6)) * t196, pkin(5) * t327 + pkin(13) * t326 + t455, t29, -pkin(5) * t102 + pkin(13) * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, -t366, 0, 0, t173, t151, 0, t174, 0, 0, t336 - t404, -t403 + t429, t142 (-pkin(5) * t192 + pkin(13) * t316) * t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, t151, 0, t174, 0, 0, -0.2e1 * t404, -0.2e1 * t403, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, -t28, t40, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, -t60, t80, t15, t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, 0, -t328, t127, t54, t53, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, 0, -t413, 0, -t181 * t184 - t191 * t366, t181 * t413 - t196 * t366, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, 0, -t413, 0, -pkin(13) * t184, pkin(13) * t413, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
