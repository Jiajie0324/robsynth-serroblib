% Calculate joint inertia matrix for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Mq [6x6]
%   inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S6RRRRRR8_inertiaJ_slag_vp1(qJ, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(13,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_inertiaJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_inertiaJ_slag_vp1: pkin has to be [13x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRRRR8_inertiaJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRRRR8_inertiaJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRRRR8_inertiaJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:48:25
% EndTime: 2019-03-10 04:48:49
% DurationCPUTime: 10.34s
% Computational Cost: add. (79063->765), mult. (188402->1029), div. (0->0), fcn. (247472->16), ass. (0->373)
t374 = cos(pkin(6));
t379 = sin(qJ(1));
t382 = cos(qJ(2));
t460 = t379 * t382;
t378 = sin(qJ(2));
t383 = cos(qJ(1));
t461 = t378 * t383;
t357 = t374 * t461 + t460;
t377 = sin(qJ(3));
t459 = t382 * t383;
t462 = t378 * t379;
t397 = t374 * t459 - t462;
t475 = cos(pkin(7));
t393 = t397 * t475;
t373 = sin(pkin(6));
t474 = sin(pkin(7));
t419 = t373 * t474;
t480 = cos(qJ(3));
t319 = t357 * t480 + (-t383 * t419 + t393) * t377;
t420 = t373 * t475;
t339 = -t383 * t420 - t397 * t474;
t458 = qJ(4) + qJ(5);
t371 = sin(t458);
t423 = cos(t458);
t284 = t319 * t371 - t339 * t423;
t285 = t319 * t423 + t339 * t371;
t405 = t480 * t474;
t399 = t373 * t405;
t318 = t357 * t377 + t383 * t399 - t393 * t480;
t206 = Icges(6,5) * t285 - Icges(6,6) * t284 + Icges(6,3) * t318;
t208 = Icges(6,4) * t285 - Icges(6,2) * t284 + Icges(6,6) * t318;
t210 = Icges(6,1) * t285 - Icges(6,4) * t284 + Icges(6,5) * t318;
t112 = t206 * t318 - t208 * t284 + t210 * t285;
t358 = -t374 * t460 - t461;
t359 = -t374 * t462 + t459;
t321 = t359 * t480 + (t358 * t475 + t379 * t419) * t377;
t340 = -t358 * t474 + t379 * t420;
t286 = t321 * t371 - t340 * t423;
t287 = t321 * t423 + t340 * t371;
t406 = t475 * t480;
t320 = -t358 * t406 + t359 * t377 - t379 * t399;
t207 = Icges(6,5) * t287 - Icges(6,6) * t286 + Icges(6,3) * t320;
t209 = Icges(6,4) * t287 - Icges(6,2) * t286 + Icges(6,6) * t320;
t211 = Icges(6,1) * t287 - Icges(6,4) * t286 + Icges(6,5) * t320;
t113 = t207 * t318 - t209 * t284 + t211 * t285;
t465 = t373 * t382;
t467 = t373 * t378;
t337 = -t374 * t405 + t377 * t467 - t406 * t465;
t375 = sin(qJ(6));
t380 = cos(qJ(6));
t244 = -t285 * t375 + t318 * t380;
t245 = t285 * t380 + t318 * t375;
t166 = Icges(7,5) * t245 + Icges(7,6) * t244 + Icges(7,3) * t284;
t168 = Icges(7,4) * t245 + Icges(7,2) * t244 + Icges(7,6) * t284;
t170 = Icges(7,1) * t245 + Icges(7,4) * t244 + Icges(7,5) * t284;
t76 = t166 * t284 + t168 * t244 + t170 * t245;
t246 = -t287 * t375 + t320 * t380;
t247 = t287 * t380 + t320 * t375;
t167 = Icges(7,5) * t247 + Icges(7,6) * t246 + Icges(7,3) * t286;
t169 = Icges(7,4) * t247 + Icges(7,2) * t246 + Icges(7,6) * t286;
t171 = Icges(7,1) * t247 + Icges(7,4) * t246 + Icges(7,5) * t286;
t77 = t167 * t284 + t169 * t244 + t171 * t245;
t338 = t374 * t474 * t377 + (t377 * t382 * t475 + t378 * t480) * t373;
t356 = t374 * t475 - t382 * t419;
t304 = t338 * t423 + t356 * t371;
t277 = -t304 * t375 + t337 * t380;
t278 = t304 * t380 + t337 * t375;
t303 = t338 * t371 - t356 * t423;
t202 = Icges(7,5) * t278 + Icges(7,6) * t277 + Icges(7,3) * t303;
t203 = Icges(7,4) * t278 + Icges(7,2) * t277 + Icges(7,6) * t303;
t204 = Icges(7,1) * t278 + Icges(7,4) * t277 + Icges(7,5) * t303;
t96 = t202 * t284 + t203 * t244 + t204 * t245;
t13 = t318 * t76 + t320 * t77 + t337 * t96;
t241 = Icges(6,5) * t304 - Icges(6,6) * t303 + Icges(6,3) * t337;
t242 = Icges(6,4) * t304 - Icges(6,2) * t303 + Icges(6,6) * t337;
t243 = Icges(6,1) * t304 - Icges(6,4) * t303 + Icges(6,5) * t337;
t134 = t241 * t318 - t242 * t284 + t243 * t285;
t501 = t112 * t318 + t113 * t320 + t134 * t337 + t13;
t114 = t206 * t320 - t208 * t286 + t210 * t287;
t115 = t207 * t320 - t209 * t286 + t211 * t287;
t135 = t241 * t320 - t242 * t286 + t243 * t287;
t78 = t166 * t286 + t168 * t246 + t170 * t247;
t79 = t167 * t286 + t169 * t246 + t171 * t247;
t97 = t202 * t286 + t203 * t246 + t204 * t247;
t14 = t318 * t78 + t320 * t79 + t337 * t97;
t500 = t114 * t318 + t115 * t320 + t135 * t337 + t14;
t17 = t339 * t76 + t340 * t77 + t356 * t96;
t44 = t112 * t339 + t113 * t340 + t134 * t356;
t499 = t17 + t44;
t18 = t339 * t78 + t340 * t79 + t356 * t97;
t45 = t114 * t339 + t115 * t340 + t135 * t356;
t498 = t18 + t45;
t21 = t374 * t96 + (t379 * t77 - t383 * t76) * t373;
t50 = t134 * t374 + (-t112 * t383 + t113 * t379) * t373;
t497 = t21 + t50;
t22 = t374 * t97 + (t379 * t79 - t383 * t78) * t373;
t51 = t135 * t374 + (-t114 * t383 + t115 * t379) * t373;
t496 = t22 + t51;
t146 = t337 * t241 - t303 * t242 + t304 * t243;
t142 = t146 * t337;
t108 = t303 * t202 + t277 * t203 + t278 * t204;
t105 = t108 * t337;
t87 = t167 * t303 + t169 * t277 + t171 * t278;
t476 = t87 * t320;
t86 = t166 * t303 + t168 * t277 + t170 * t278;
t477 = t86 * t318;
t29 = t105 + t476 + t477;
t123 = t207 * t337 - t209 * t303 + t211 * t304;
t472 = t123 * t320;
t122 = t206 * t337 - t208 * t303 + t210 * t304;
t473 = t122 * t318;
t495 = t29 + t142 + t472 + t473;
t106 = t108 * t356;
t31 = t86 * t339 + t87 * t340 + t106;
t143 = t146 * t356;
t61 = t122 * t339 + t123 * t340 + t143;
t494 = t31 + t61;
t107 = t108 * t374;
t33 = t107 + (t87 * t379 - t86 * t383) * t373;
t144 = t146 * t374;
t64 = t144 + (-t122 * t383 + t123 * t379) * t373;
t493 = t33 + t64;
t401 = -t245 * rSges(7,1) - t244 * rSges(7,2);
t172 = t284 * rSges(7,3) - t401;
t479 = t285 * pkin(5);
t455 = t284 * pkin(13) + t172 + t479;
t173 = t247 * rSges(7,1) + t246 * rSges(7,2) + t286 * rSges(7,3);
t454 = t287 * pkin(5) + t286 * pkin(13) + t173;
t205 = rSges(7,1) * t278 + rSges(7,2) * t277 + rSges(7,3) * t303;
t448 = pkin(5) * t304 + pkin(13) * t303 + t205;
t466 = t373 * t379;
t492 = t284 / 0.2e1;
t491 = t286 / 0.2e1;
t490 = t303 / 0.2e1;
t489 = t318 / 0.2e1;
t488 = t320 / 0.2e1;
t487 = t337 / 0.2e1;
t486 = t339 / 0.2e1;
t485 = t340 / 0.2e1;
t484 = t356 / 0.2e1;
t483 = t374 / 0.2e1;
t482 = t379 / 0.2e1;
t481 = -t383 / 0.2e1;
t381 = cos(qJ(4));
t370 = pkin(4) * t381 + pkin(3);
t478 = -pkin(3) + t370;
t384 = -pkin(12) - pkin(11);
t471 = t318 * t384;
t376 = sin(qJ(4));
t470 = t339 * t376;
t469 = t340 * t376;
t468 = t356 * t376;
t464 = t373 * t383;
t463 = t374 * t382;
t457 = t455 * t320;
t456 = t454 * t337;
t453 = t448 * t318;
t310 = t318 * pkin(11);
t438 = pkin(4) * t470;
t200 = t319 * t478 - t310 + t438 - t471;
t271 = t319 * pkin(3) + t310;
t263 = t340 * t271;
t452 = t340 * t200 + t263;
t272 = t321 * pkin(3) + t320 * pkin(11);
t429 = pkin(4) * t469 - t320 * t384 + t321 * t370;
t201 = -t272 + t429;
t264 = t356 * t272;
t451 = t356 * t201 + t264;
t402 = -t285 * rSges(6,1) + t284 * rSges(6,2);
t212 = t318 * rSges(6,3) - t402;
t450 = -t200 - t212;
t213 = t287 * rSges(6,1) - t286 * rSges(6,2) + t320 * rSges(6,3);
t449 = -t201 - t213;
t290 = -t319 * t376 + t339 * t381;
t291 = t319 * t381 + t470;
t221 = rSges(5,1) * t291 + rSges(5,2) * t290 + rSges(5,3) * t318;
t447 = -t221 - t271;
t292 = -t321 * t376 + t340 * t381;
t293 = t321 * t381 + t469;
t222 = t293 * rSges(5,1) + t292 * rSges(5,2) + t320 * rSges(5,3);
t446 = -t222 - t272;
t238 = pkin(4) * t468 + t478 * t338 + (-pkin(11) - t384) * t337;
t301 = t338 * pkin(3) + t337 * pkin(11);
t283 = t339 * t301;
t445 = t339 * t238 + t283;
t248 = rSges(6,1) * t304 - rSges(6,2) * t303 + rSges(6,3) * t337;
t444 = -t238 - t248;
t312 = -t338 * t376 + t356 * t381;
t313 = t338 * t381 + t468;
t254 = rSges(5,1) * t313 + rSges(5,2) * t312 + rSges(5,3) * t337;
t443 = -t254 - t301;
t324 = t359 * pkin(2) + pkin(10) * t340;
t322 = t374 * t324;
t442 = t374 * t272 + t322;
t323 = t357 * pkin(2) + pkin(10) * t339;
t441 = t323 * t466 + t324 * t464;
t440 = t383 * pkin(1) + pkin(9) * t466;
t437 = t87 / 0.2e1 + t97 / 0.2e1;
t436 = t96 / 0.2e1 + t86 / 0.2e1;
t435 = -t200 - t455;
t434 = -t201 - t454;
t433 = t374 * t201 + t442;
t432 = -t271 + t450;
t431 = -t238 - t448;
t249 = Icges(5,5) * t313 + Icges(5,6) * t312 + Icges(5,3) * t337;
t250 = Icges(5,4) * t313 + Icges(5,2) * t312 + Icges(5,6) * t337;
t251 = Icges(5,1) * t313 + Icges(5,4) * t312 + Icges(5,5) * t337;
t151 = t337 * t249 + t312 * t250 + t313 * t251;
t430 = -t301 + t444;
t294 = Icges(4,5) * t338 - Icges(4,6) * t337 + Icges(4,3) * t356;
t295 = Icges(4,4) * t338 - Icges(4,2) * t337 + Icges(4,6) * t356;
t296 = Icges(4,1) * t338 - Icges(4,4) * t337 + Icges(4,5) * t356;
t184 = t356 * t294 - t337 * t295 + t338 * t296;
t262 = t321 * rSges(4,1) - t320 * rSges(4,2) + t340 * rSges(4,3);
t348 = Icges(3,3) * t374 + (Icges(3,5) * t378 + Icges(3,6) * t382) * t373;
t349 = Icges(3,6) * t374 + (Icges(3,4) * t378 + Icges(3,2) * t382) * t373;
t350 = Icges(3,5) * t374 + (Icges(3,1) * t378 + Icges(3,4) * t382) * t373;
t428 = t374 * t348 + t349 * t465 + t350 * t467;
t332 = t359 * rSges(3,1) + t358 * rSges(3,2) + rSges(3,3) * t466;
t215 = Icges(5,5) * t291 + Icges(5,6) * t290 + Icges(5,3) * t318;
t217 = Icges(5,4) * t291 + Icges(5,2) * t290 + Icges(5,6) * t318;
t219 = Icges(5,1) * t291 + Icges(5,4) * t290 + Icges(5,5) * t318;
t124 = t215 * t337 + t217 * t312 + t219 * t313;
t136 = t249 * t318 + t250 * t290 + t251 * t291;
t425 = t124 / 0.2e1 + t136 / 0.2e1;
t216 = Icges(5,5) * t293 + Icges(5,6) * t292 + Icges(5,3) * t320;
t218 = Icges(5,4) * t293 + Icges(5,2) * t292 + Icges(5,6) * t320;
t220 = Icges(5,1) * t293 + Icges(5,4) * t292 + Icges(5,5) * t320;
t125 = t216 * t337 + t218 * t312 + t220 * t313;
t137 = t249 * t320 + t250 * t292 + t251 * t293;
t424 = t137 / 0.2e1 + t125 / 0.2e1;
t422 = -t379 * pkin(1) + pkin(9) * t464;
t297 = rSges(4,1) * t338 - rSges(4,2) * t337 + rSges(4,3) * t356;
t343 = pkin(2) * t467 + pkin(10) * t356;
t413 = t373 * (-t297 - t343);
t412 = -t271 + t435;
t411 = -t301 + t431;
t410 = t271 * t466 + t272 * t464 + t441;
t407 = t373 * (-t343 + t443);
t104 = t108 * t303;
t24 = t86 * t284 + t87 * t286 + t104;
t3 = t284 * t76 + t286 * t77 + t303 * t96;
t4 = t284 * t78 + t286 * t79 + t303 * t97;
t404 = t13 * t492 + t14 * t491 + t24 * t487 + t29 * t490 + t3 * t489 + t4 * t488;
t403 = t318 * t501 + t500 * t320 + t495 * t337;
t400 = t373 * (-t343 + t430);
t398 = t200 * t466 + t201 * t464 + t410;
t396 = t373 * (-t343 + t411);
t261 = rSges(4,1) * t319 - rSges(4,2) * t318 + rSges(4,3) * t339;
t395 = -t323 + t422;
t394 = t324 + t440;
t391 = t105 + t473 / 0.2e1 + t472 / 0.2e1 + t142 + t477 / 0.2e1 + t476 / 0.2e1 + (t134 + t96) * t489 + (t135 + t97) * t488;
t390 = t495 * t484 + t500 * t485 + t486 * t501 + t494 * t487 + t498 * t488 + t499 * t489;
t389 = t497 * t489 + t496 * t488 + t493 * t487 + t495 * t483 + t500 * t466 / 0.2e1 - t501 * t464 / 0.2e1;
t388 = t394 + t429;
t256 = Icges(4,5) * t321 - Icges(4,6) * t320 + Icges(4,3) * t340;
t258 = Icges(4,4) * t321 - Icges(4,2) * t320 + Icges(4,6) * t340;
t260 = Icges(4,1) * t321 - Icges(4,4) * t320 + Icges(4,5) * t340;
t157 = t256 * t356 - t258 * t337 + t260 * t338;
t178 = t294 * t340 - t295 * t320 + t296 * t321;
t387 = t123 / 0.2e1 + t135 / 0.2e1 + t178 / 0.2e1 + t157 / 0.2e1 + t424 + t437;
t255 = Icges(4,5) * t319 - Icges(4,6) * t318 + Icges(4,3) * t339;
t257 = Icges(4,4) * t319 - Icges(4,2) * t318 + Icges(4,6) * t339;
t259 = Icges(4,1) * t319 - Icges(4,4) * t318 + Icges(4,5) * t339;
t156 = t255 * t356 - t257 * t337 + t259 * t338;
t177 = t294 * t339 - t295 * t318 + t296 * t319;
t386 = t122 / 0.2e1 + t134 / 0.2e1 + t156 / 0.2e1 + t177 / 0.2e1 + t425 + t436;
t385 = -t319 * t370 + t395 - t438;
t331 = t357 * rSges(3,1) + rSges(3,2) * t397 - rSges(3,3) * t464;
t365 = rSges(2,1) * t383 - rSges(2,2) * t379;
t364 = -rSges(2,1) * t379 - rSges(2,2) * t383;
t351 = rSges(3,3) * t374 + (rSges(3,1) * t378 + rSges(3,2) * t382) * t373;
t330 = Icges(3,1) * t359 + Icges(3,4) * t358 + Icges(3,5) * t466;
t329 = Icges(3,1) * t357 + Icges(3,4) * t397 - Icges(3,5) * t464;
t328 = Icges(3,4) * t359 + Icges(3,2) * t358 + Icges(3,6) * t466;
t327 = Icges(3,4) * t357 + Icges(3,2) * t397 - Icges(3,6) * t464;
t326 = Icges(3,5) * t359 + Icges(3,6) * t358 + Icges(3,3) * t466;
t325 = Icges(3,5) * t357 + Icges(3,6) * t397 - Icges(3,3) * t464;
t317 = t332 + t440;
t316 = -t331 + t422;
t300 = -t331 * t374 - t351 * t464;
t299 = t332 * t374 - t351 * t466;
t298 = t428 * t374;
t276 = (t331 * t379 + t332 * t383) * t373;
t275 = t348 * t466 + t349 * t358 + t350 * t359;
t274 = -t348 * t464 + t349 * t397 + t357 * t350;
t253 = t326 * t374 + (t328 * t382 + t330 * t378) * t373;
t252 = t325 * t374 + (t327 * t382 + t329 * t378) * t373;
t231 = t394 + t262;
t230 = -t261 + t395;
t227 = t318 * t248;
t226 = t318 * t238;
t196 = t262 * t356 - t297 * t340;
t195 = -t261 * t356 + t297 * t339;
t193 = t337 * t213;
t191 = t337 * t201;
t190 = t320 * t212;
t188 = t320 * t200;
t186 = (-t261 - t323) * t374 + t383 * t413;
t185 = t262 * t374 + t379 * t413 + t322;
t183 = t184 * t374;
t182 = t261 * t340 - t262 * t339;
t181 = t184 * t356;
t176 = (t261 * t379 + t262 * t383) * t373 + t441;
t175 = t394 - t446;
t174 = t395 + t447;
t164 = t388 + t213;
t163 = (-rSges(6,3) + t384) * t318 + t385 + t402;
t161 = t222 * t337 - t254 * t320;
t160 = -t221 * t337 + t254 * t318;
t159 = -t248 * t320 + t193;
t158 = -t212 * t337 + t227;
t155 = t256 * t340 - t258 * t320 + t260 * t321;
t154 = t255 * t340 - t257 * t320 + t259 * t321;
t153 = t256 * t339 - t258 * t318 + t260 * t319;
t152 = t255 * t339 - t257 * t318 + t259 * t319;
t150 = t151 * t374;
t149 = t221 * t320 - t222 * t318;
t148 = t151 * t356;
t147 = -t213 * t318 + t190;
t145 = t151 * t337;
t141 = t222 * t356 + t340 * t443 + t264;
t140 = t254 * t339 + t356 * t447 + t283;
t139 = (-t323 + t447) * t374 + t383 * t407;
t138 = t222 * t374 + t379 * t407 + t442;
t131 = t388 + t454;
t130 = -t479 + t471 + (-rSges(7,3) - pkin(13)) * t284 + t385 + t401;
t129 = t221 * t340 + t339 * t446 + t263;
t128 = t173 * t303 - t205 * t286;
t127 = -t172 * t303 + t205 * t284;
t126 = (t221 * t379 + t222 * t383) * t373 + t410;
t119 = t216 * t320 + t218 * t292 + t220 * t293;
t118 = t215 * t320 + t217 * t292 + t219 * t293;
t117 = t216 * t318 + t218 * t290 + t220 * t291;
t116 = t215 * t318 + t217 * t290 + t219 * t291;
t111 = t320 * t444 + t191 + t193;
t110 = t337 * t450 + t226 + t227;
t109 = t172 * t286 - t173 * t284;
t103 = (-t323 + t432) * t374 + t383 * t400;
t102 = t213 * t374 + t379 * t400 + t433;
t101 = t213 * t356 + t340 * t430 + t451;
t100 = t248 * t339 + t356 * t432 + t445;
t99 = -t320 * t448 + t456;
t98 = -t337 * t455 + t453;
t95 = t318 * t449 + t188 + t190;
t92 = t183 + (-t156 * t383 + t157 * t379) * t373;
t91 = (t212 * t379 + t213 * t383) * t373 + t398;
t90 = t212 * t340 + (-t272 + t449) * t339 + t452;
t89 = -t318 * t454 + t457;
t88 = t156 * t339 + t157 * t340 + t181;
t83 = t178 * t374 + (-t154 * t383 + t155 * t379) * t373;
t82 = t177 * t374 + (-t152 * t383 + t153 * t379) * t373;
t81 = t154 * t339 + t155 * t340 + t178 * t356;
t80 = t152 * t339 + t153 * t340 + t177 * t356;
t75 = t320 * t431 + t191 + t456;
t74 = t337 * t435 + t226 + t453;
t73 = (-t323 + t412) * t374 + t383 * t396;
t72 = t374 * t454 + t379 * t396 + t433;
t71 = t340 * t411 + t356 * t454 + t451;
t70 = t339 * t448 + t356 * t412 + t445;
t69 = t318 * t434 + t188 + t457;
t68 = (t379 * t455 + t383 * t454) * t373 + t398;
t67 = t455 * t340 + (-t272 + t434) * t339 + t452;
t66 = t150 + (-t124 * t383 + t125 * t379) * t373;
t65 = t124 * t339 + t125 * t340 + t148;
t63 = t124 * t318 + t125 * t320 + t145;
t55 = t137 * t374 + (-t118 * t383 + t119 * t379) * t373;
t54 = t136 * t374 + (-t116 * t383 + t117 * t379) * t373;
t53 = t118 * t339 + t119 * t340 + t137 * t356;
t52 = t116 * t339 + t117 * t340 + t136 * t356;
t49 = t118 * t318 + t119 * t320 + t137 * t337;
t48 = t116 * t318 + t117 * t320 + t136 * t337;
t1 = [(t163 ^ 2 + t164 ^ 2) * m(6) + (t174 ^ 2 + t175 ^ 2) * m(5) + (t230 ^ 2 + t231 ^ 2) * m(4) + t428 + m(2) * (t364 ^ 2 + t365 ^ 2) + (t130 ^ 2 + t131 ^ 2) * m(7) + (t316 ^ 2 + t317 ^ 2) * m(3) + Icges(2,3) + t184 + t151 + t146 + t108; t144 + (t185 * t231 + t186 * t230) * m(4) + (t299 * t317 + t300 * t316) * m(3) + t150 + t183 + t107 + t298 + (t138 * t175 + t139 * t174) * m(5) + (t102 * t164 + t103 * t163) * m(6) + (t130 * t73 + t131 * t72) * m(7) + ((-t274 / 0.2e1 - t252 / 0.2e1 - t386) * t383 + (t275 / 0.2e1 + t253 / 0.2e1 + t387) * t379) * t373; (t68 ^ 2 + t72 ^ 2 + t73 ^ 2) * m(7) + (t102 ^ 2 + t103 ^ 2 + t91 ^ 2) * m(6) + (t126 ^ 2 + t138 ^ 2 + t139 ^ 2) * m(5) + (t176 ^ 2 + t185 ^ 2 + t186 ^ 2) * m(4) + (t276 ^ 2 + t299 ^ 2 + t300 ^ 2) * m(3) + (t66 + t92 + t298 + t493) * t374 + ((t55 + t83 + (t326 * t466 + t328 * t358 + t330 * t359) * t466 + (t253 + t275) * t374 + t496) * t379 + (-t54 - t82 + (t357 * t329 * t373 + (-t325 * t373 + t327 * t463) * t464) * t383 + (-t327 * t358 - t329 * t359 - t357 * t330 + (-t327 * t378 - t328 * t463) * t383 + t328 * t462 + (-t325 * t379 + t326 * t383) * t373) * t466 + (-t274 - t252) * t374 - t497) * t383) * t373; (t130 * t70 + t131 * t71) * m(7) + t106 + t143 + (t100 * t163 + t101 * t164) * m(6) + (t140 * t174 + t141 * t175) * m(5) + t148 + t181 + (t195 * t230 + t196 * t231) * m(4) + t387 * t340 + t386 * t339; (t67 * t68 + t70 * t73 + t71 * t72) * m(7) + (t176 * t182 + t185 * t196 + t186 * t195) * m(4) + (t100 * t103 + t101 * t102 + t90 * t91) * m(6) + (t126 * t129 + t138 * t141 + t139 * t140) * m(5) + (t65 / 0.2e1 + t61 / 0.2e1 + t88 / 0.2e1 + t31 / 0.2e1) * t374 + (t66 / 0.2e1 + t64 / 0.2e1 + t92 / 0.2e1 + t33 / 0.2e1) * t356 + (t55 / 0.2e1 + t51 / 0.2e1 + t83 / 0.2e1 + t22 / 0.2e1) * t340 + (t54 / 0.2e1 + t50 / 0.2e1 + t82 / 0.2e1 + t21 / 0.2e1) * t339 + ((-t44 / 0.2e1 - t52 / 0.2e1 - t80 / 0.2e1 - t17 / 0.2e1) * t383 + (t45 / 0.2e1 + t53 / 0.2e1 + t81 / 0.2e1 + t18 / 0.2e1) * t379) * t373; (t100 ^ 2 + t101 ^ 2 + t90 ^ 2) * m(6) + (t129 ^ 2 + t140 ^ 2 + t141 ^ 2) * m(5) + (t182 ^ 2 + t195 ^ 2 + t196 ^ 2) * m(4) + (t67 ^ 2 + t70 ^ 2 + t71 ^ 2) * m(7) + (t65 + t88 + t494) * t356 + (t53 + t81 + t498) * t340 + (t52 + t80 + t499) * t339; t425 * t318 + t424 * t320 + t391 + (t110 * t163 + t111 * t164) * m(6) + (t130 * t74 + t131 * t75) * m(7) + (t160 * t174 + t161 * t175) * m(5) + t145; t63 * t483 + (t102 * t111 + t103 * t110 + t91 * t95) * m(6) + (t126 * t149 + t138 * t161 + t139 * t160) * m(5) + (t68 * t69 + t72 * t75 + t73 * t74) * m(7) + t66 * t487 + t54 * t489 + t389 + t55 * t488 + (t48 * t481 + t482 * t49) * t373; t63 * t484 + t49 * t485 + (t100 * t110 + t101 * t111 + t90 * t95) * m(6) + (t129 * t149 + t140 * t160 + t141 * t161) * m(5) + (t67 * t69 + t70 * t74 + t71 * t75) * m(7) + t48 * t486 + t65 * t487 + t52 * t489 + t53 * t488 + t390; (t69 ^ 2 + t74 ^ 2 + t75 ^ 2) * m(7) + (t110 ^ 2 + t111 ^ 2 + t95 ^ 2) * m(6) + t337 * t63 + (t149 ^ 2 + t160 ^ 2 + t161 ^ 2) * m(5) + t320 * t49 + t318 * t48 + t403; (t130 * t98 + t131 * t99) * m(7) + (t158 * t163 + t159 * t164) * m(6) + t391; (t102 * t159 + t103 * t158 + t147 * t91) * m(6) + (t68 * t89 + t72 * t99 + t73 * t98) * m(7) + t389; (t100 * t158 + t101 * t159 + t147 * t90) * m(6) + (t67 * t89 + t70 * t98 + t71 * t99) * m(7) + t390; (t69 * t89 + t74 * t98 + t75 * t99) * m(7) + (t110 * t158 + t111 * t159 + t147 * t95) * m(6) + t403; (t89 ^ 2 + t98 ^ 2 + t99 ^ 2) * m(7) + (t147 ^ 2 + t158 ^ 2 + t159 ^ 2) * m(6) + t403; (t127 * t130 + t128 * t131) * m(7) + t104 + t437 * t286 + t436 * t284; (t109 * t68 + t127 * t73 + t128 * t72) * m(7) + t24 * t483 + t33 * t490 + t21 * t492 + t22 * t491 + (t3 * t481 + t4 * t482) * t373; (t109 * t67 + t127 * t70 + t128 * t71) * m(7) + t17 * t492 + t4 * t485 + t24 * t484 + t18 * t491 + t31 * t490 + t3 * t486; (t109 * t69 + t127 * t74 + t128 * t75) * m(7) + t404; (t109 * t89 + t127 * t98 + t128 * t99) * m(7) + t404; t286 * t4 + t284 * t3 + t303 * t24 + (t109 ^ 2 + t127 ^ 2 + t128 ^ 2) * m(7);];
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [t1(1) t1(2) t1(4) t1(7) t1(11) t1(16); t1(2) t1(3) t1(5) t1(8) t1(12) t1(17); t1(4) t1(5) t1(6) t1(9) t1(13) t1(18); t1(7) t1(8) t1(9) t1(10) t1(14) t1(19); t1(11) t1(12) t1(13) t1(14) t1(15) t1(20); t1(16) t1(17) t1(18) t1(19) t1(20) t1(21);];
Mq  = res;
