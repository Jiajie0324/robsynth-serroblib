% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% MDP [38x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRR8_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRR8_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(38,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [38 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [38x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 05:07:29
% EndTime: 2019-03-10 05:08:14
% DurationCPUTime: 26.89s
% Computational Cost: add. (33209->823), mult. (96609->1133), div. (0->0), fcn. (82277->14), ass. (0->330)
t917 = cos(qJ(3));
t1036 = qJD(3) * t917;
t906 = sin(pkin(7));
t1010 = t906 * t1036;
t907 = sin(pkin(6));
t1041 = qJD(1) * t907;
t918 = cos(qJ(2));
t1068 = t917 * t918;
t912 = sin(qJ(3));
t913 = sin(qJ(2));
t1071 = t912 * t913;
t908 = cos(pkin(7));
t942 = -t1071 * t908 + t1068;
t845 = t942 * t1041;
t969 = -t845 + t1010;
t1073 = t908 * t912;
t1076 = t906 * t912;
t1072 = t908 * t917;
t893 = pkin(10) * t1076;
t1102 = pkin(2) * t1072 - t893;
t1087 = cos(pkin(6));
t1016 = pkin(1) * t1087;
t986 = t918 * t1016;
t890 = qJD(1) * t986;
t976 = t907 * (-pkin(10) * t908 - pkin(9));
t946 = t913 * t976;
t826 = qJD(1) * t946 + t890;
t987 = t913 * t1016;
t924 = t918 * t976 - t987;
t827 = t924 * qJD(1);
t1088 = pkin(10) * t906;
t934 = (pkin(2) * t913 - t1088 * t918) * t907;
t856 = qJD(1) * t934;
t1132 = t1102 * qJD(3) - t827 * t1073 - t856 * t1076 - t917 * t826;
t759 = -t827 * t906 + t908 * t856;
t1069 = t913 * t917;
t1070 = t912 * t918;
t944 = t1069 * t908 + t1070;
t844 = t944 * t1041;
t1131 = pkin(3) * t844 - pkin(11) * t845 + t759 - (pkin(3) * t912 - pkin(11) * t917) * t906 * qJD(3);
t1014 = t913 * t1041;
t985 = t906 * t1014;
t1130 = pkin(11) * t985 - t1132;
t1013 = t918 * t1041;
t982 = t908 * t1013;
t875 = t917 * t982;
t1004 = t1087 * qJD(1);
t949 = t1004 + qJD(2);
t935 = t906 * t949;
t984 = t912 * t1014;
t789 = -t917 * t935 - t875 + t984;
t785 = qJD(4) + t789;
t1129 = qJD(5) + t785;
t911 = sin(qJ(4));
t916 = cos(qJ(4));
t867 = t1076 * t911 - t916 * t908;
t1048 = -qJD(4) * t867 - t911 * t985 + t916 * t969;
t868 = t1076 * t916 + t908 * t911;
t1047 = qJD(4) * t868 + t911 * t969 + t916 * t985;
t1037 = qJD(3) * t912;
t1011 = t906 * t1037;
t970 = -t844 + t1011;
t914 = cos(qJ(6));
t1030 = qJD(6) * t914;
t943 = t1070 * t908 + t1069;
t931 = t943 * t907;
t791 = qJD(1) * t931 + t912 * t935;
t847 = t1013 * t906 - t908 * t949 - qJD(3);
t746 = -t911 * t791 - t847 * t916;
t747 = t791 * t916 - t847 * t911;
t910 = sin(qJ(5));
t915 = cos(qJ(5));
t690 = -t915 * t746 + t747 * t910;
t1117 = t690 * t914;
t1127 = t1030 + t1117;
t1126 = t1131 * t916;
t1034 = qJD(4) * t916;
t1035 = qJD(4) * t911;
t1075 = t906 * t917;
t1044 = pkin(2) * t1073 + pkin(10) * t1075;
t860 = pkin(11) * t908 + t1044;
t861 = (-pkin(3) * t917 - pkin(11) * t912 - pkin(2)) * t906;
t1124 = -t861 * t1034 + t1035 * t860 + t1130 * t916 + t1131 * t911;
t1046 = t916 * t860 + t911 * t861;
t1116 = -t970 * pkin(4) + t1048 * pkin(12) + qJD(4) * t1046 - t1130 * t911 + t1126;
t1089 = pkin(11) + pkin(12);
t1015 = qJD(4) * t1089;
t1074 = t907 * t918;
t929 = pkin(9) * t1074 + t987;
t779 = t929 * qJD(1) + (t935 + t982) * pkin(10);
t925 = pkin(2) * t1087 + t946;
t788 = qJD(2) * pkin(2) + qJD(1) * t925 + t890;
t852 = (-pkin(2) * t918 - t1088 * t913 - pkin(1)) * t907;
t838 = qJD(1) * t852;
t708 = -t912 * t779 + t917 * (t788 * t908 + t838 * t906);
t733 = pkin(3) * t791 + pkin(11) * t789;
t732 = t916 * t733;
t1123 = pkin(4) * t791 - t708 * t911 + t732 + (pkin(12) * t789 + t1015) * t916;
t1122 = pkin(12) * t1047 + t1124;
t1058 = t916 * t708 + t911 * t733;
t1079 = t789 * t911;
t1121 = pkin(12) * t1079 + t911 * t1015 + t1058;
t1009 = t908 * t1037;
t1120 = pkin(2) * t1009 + pkin(10) * t1010 + t1072 * t827 - t912 * t826;
t1028 = -qJD(6) - t690;
t1038 = qJD(2) * t908;
t930 = qJD(3) * t935;
t1027 = qJD(1) * qJD(2);
t1006 = t907 * t1027;
t980 = t918 * t1006;
t748 = qJD(3) * t875 + (-qJD(3) - t1038) * t984 + (t930 + t980) * t917;
t981 = t913 * t1006;
t950 = t906 * t981;
t675 = -t847 * t1034 - t1035 * t791 + t916 * t748 + t911 * t950;
t676 = qJD(4) * t747 + t748 * t911 - t916 * t950;
t954 = t746 * t910 + t915 * t747;
t615 = qJD(5) * t954 + t675 * t910 + t915 * t676;
t909 = sin(qJ(6));
t611 = t909 * t615;
t1106 = t1028 * t1030 - t611;
t1114 = t1028 * t909;
t1032 = qJD(5) * t915;
t1033 = qJD(5) * t910;
t614 = t746 * t1032 - t1033 * t747 + t915 * t675 - t910 * t676;
t1091 = qJD(2) * t944 + qJD(3) * t943;
t920 = t1091 * t907;
t927 = t912 * t930;
t749 = qJD(1) * t920 + t927;
t1019 = t1030 * t1129 + t914 * t614 + t909 * t749;
t1031 = qJD(6) * t909;
t600 = -t1031 * t954 + t1019;
t598 = t600 * t909;
t1000 = t614 * t909 - t914 * t749;
t664 = t1129 * t909 + t914 * t954;
t601 = qJD(6) * t664 + t1000;
t613 = t914 * t615;
t1082 = t954 * t909;
t662 = -t1129 * t914 + t1082;
t1119 = t749 * MDP(29) - t615 * MDP(28) - t690 ^ 2 * MDP(26) + (t1129 * t690 + t614) * MDP(27) + (MDP(25) * t690 + MDP(26) * t954 + MDP(28) * t1129 + MDP(36) * t1028) * t954 + (-t1028 * t1117 - t664 * t954 - t1106) * MDP(34) + (-t1028 * t1114 + t662 * t954 + t613) * MDP(35) + (t1127 * t664 + t598) * MDP(32) + (t1114 * t664 - t1127 * t662 + t600 * t914 - t909 * t601) * MDP(33);
t737 = -t788 * t906 + t908 * t838;
t681 = pkin(3) * t789 - pkin(11) * t791 + t737;
t709 = t788 * t1073 + t838 * t1076 + t917 * t779;
t687 = -pkin(11) * t847 + t709;
t637 = t681 * t911 + t687 * t916;
t626 = pkin(12) * t746 + t637;
t1086 = t626 * t910;
t636 = t916 * t681 - t687 * t911;
t625 = -pkin(12) * t747 + t636;
t617 = pkin(4) * t785 + t625;
t589 = t617 * t915 - t1086;
t587 = -pkin(5) * t1129 - t589;
t1118 = t587 * t690;
t786 = t915 * t867 + t868 * t910;
t1055 = -qJD(5) * t786 - t1047 * t910 + t1048 * t915;
t787 = -t867 * t910 + t868 * t915;
t1054 = qJD(5) * t787 + t1047 * t915 + t1048 * t910;
t876 = t910 * t911 - t915 * t916;
t1050 = t1129 * t876;
t877 = t910 * t916 + t911 * t915;
t1049 = t1129 * t877;
t1045 = -(-pkin(3) * t1014 - t856 * t917) * t906 + t1120;
t641 = pkin(5) * t954 + pkin(13) * t690;
t686 = pkin(3) * t847 - t708;
t653 = -pkin(4) * t746 + t686;
t1008 = t908 * t1036;
t971 = qJD(2) * t1004;
t947 = pkin(1) * t971;
t885 = t918 * t947;
t940 = qJD(2) * t946;
t807 = qJD(1) * t940 + t885;
t829 = t924 * qJD(2);
t808 = qJD(1) * t829;
t857 = qJD(2) * t934;
t848 = qJD(1) * t857;
t651 = t788 * t1008 + t838 * t1010 - t1037 * t779 + t808 * t1073 + t848 * t1076 + t917 * t807;
t649 = pkin(11) * t950 + t651;
t751 = -t808 * t906 + t908 * t848;
t659 = pkin(3) * t749 - pkin(11) * t748 + t751;
t594 = -qJD(4) * t637 - t649 * t911 + t916 * t659;
t580 = pkin(4) * t749 - pkin(12) * t675 + t594;
t593 = t681 * t1034 - t1035 * t687 + t916 * t649 + t911 * t659;
t582 = -pkin(12) * t676 + t593;
t989 = -t617 * t1032 + t626 * t1033 - t910 * t580 - t915 * t582;
t1113 = t653 * t690 + t989;
t903 = t907 ^ 2;
t1110 = -0.2e1 * t903 * t1027;
t1108 = MDP(6) * t918;
t1005 = t1087 * t906;
t817 = t1005 * t912 + t931;
t866 = t1074 * t906 - t1087 * t908;
t763 = t817 * t916 - t866 * t911;
t1099 = t908 * t1068 - t1071;
t816 = -t1005 * t917 - t1099 * t907;
t825 = t986 + t925;
t754 = -t825 * t906 + t908 * t852;
t706 = pkin(3) * t816 - pkin(11) * t817 + t754;
t810 = (t1074 * t908 + t1005) * pkin(10) + t929;
t1018 = t825 * t1073 + t852 * t1076 + t917 * t810;
t714 = -pkin(11) * t866 + t1018;
t996 = t916 * t706 - t714 * t911;
t632 = pkin(4) * t816 - pkin(12) * t763 + t996;
t1057 = t911 * t706 + t916 * t714;
t762 = t817 * t911 + t866 * t916;
t635 = -pkin(12) * t762 + t1057;
t1107 = t910 * t632 + t915 * t635;
t995 = -t860 * t911 + t916 * t861;
t743 = -pkin(4) * t1075 - pkin(12) * t868 + t995;
t752 = -pkin(12) * t867 + t1046;
t1053 = t910 * t743 + t915 * t752;
t887 = t1089 * t911;
t888 = t1089 * t916;
t841 = -t887 * t910 + t888 * t915;
t1105 = -qJD(5) * t841 + t1121 * t910 - t1123 * t915;
t1051 = pkin(4) * t1047 + t1045;
t1104 = MDP(5) * (t913 ^ 2 - t918 ^ 2);
t979 = -t709 + (t1035 + t1079) * pkin(4);
t951 = -t887 * t915 - t888 * t910;
t1103 = -qJD(5) * t951 + t1121 * t915 + t1123 * t910;
t1101 = -t743 * t1032 + t1033 * t752 + t1116 * t910 + t1122 * t915;
t1085 = t626 * t915;
t590 = t617 * t910 + t1085;
t570 = -qJD(5) * t590 + t915 * t580 - t582 * t910;
t1098 = -t653 * t954 + t570;
t1096 = -t912 * t810 + t917 * (t825 * t908 + t852 * t906);
t975 = qJD(3) * t1005;
t758 = t917 * t975 + (t942 * qJD(2) + qJD(3) * t1099) * t907;
t1039 = qJD(2) * t907;
t1012 = t913 * t1039;
t983 = t906 * t1012;
t699 = -qJD(4) * t762 + t758 * t916 + t911 * t983;
t757 = t912 * t975 + t920;
t891 = qJD(2) * t986;
t828 = t891 + t940;
t928 = t825 * t1008 + t852 * t1010 - t1037 * t810 + t829 * t1073 + t857 * t1076 + t917 * t828;
t655 = pkin(11) * t983 + t928;
t760 = -t829 * t906 + t908 * t857;
t667 = pkin(3) * t757 - pkin(11) * t758 + t760;
t923 = -qJD(4) * t1057 - t655 * t911 + t916 * t667;
t586 = pkin(4) * t757 - pkin(12) * t699 + t923;
t698 = qJD(4) * t763 + t758 * t911 - t916 * t983;
t939 = t706 * t1034 - t1035 * t714 + t916 * t655 + t911 * t667;
t592 = -pkin(12) * t698 + t939;
t1095 = -qJD(5) * t1107 + t586 * t915 - t592 * t910;
t568 = -pkin(5) * t749 - t570;
t588 = pkin(13) * t1129 + t590;
t610 = pkin(5) * t690 - pkin(13) * t954 + t653;
t961 = t588 * t909 - t610 * t914;
t1094 = t587 * t1031 - t568 * t914 + t954 * t961;
t566 = t568 * t909;
t574 = t588 * t914 + t610 * t909;
t1092 = t587 * t1030 + t574 * t954 + t566;
t919 = qJD(1) ^ 2;
t1081 = t746 * t785;
t1080 = t747 * t785;
t1078 = t877 * t914;
t1077 = t903 * t919;
t1064 = -pkin(5) * t970 + qJD(5) * t1053 + t1116 * t915 - t1122 * t910;
t764 = t1075 * t914 + t787 * t909;
t1060 = -qJD(6) * t764 + t1055 * t914 + t909 * t970;
t1022 = t909 * t1075;
t1059 = -qJD(6) * t1022 + t1030 * t787 + t1055 * t909 - t914 * t970;
t1052 = pkin(5) * t791 - t1105;
t1040 = qJD(2) * t906 ^ 2;
t1026 = pkin(1) * t1077;
t1023 = t749 * t1075;
t901 = -pkin(4) * t916 - pkin(3);
t567 = pkin(13) * t749 - t989;
t945 = t788 * t1009 + t838 * t1011 + t779 * t1036 - t808 * t1072 - t848 * t1075 + t912 * t807;
t650 = -pkin(3) * t950 + t945;
t621 = pkin(4) * t676 + t650;
t576 = pkin(5) * t615 - pkin(13) * t614 + t621;
t1003 = -t567 * t909 + t914 * t576;
t998 = t1050 * t909 - t914 * t791;
t997 = t1050 * t914 + t791 * t909;
t994 = t785 * t916;
t899 = pkin(4) * t910 + pkin(13);
t991 = pkin(4) * t747 + qJD(6) * t899 + t641;
t990 = t903 * t913 * t918 * MDP(4);
t988 = -t825 * t1009 - t852 * t1011 - t810 * t1036 - t912 * t828;
t595 = t625 * t910 + t1085;
t978 = pkin(4) * t1033 - t595;
t596 = t625 * t915 - t1086;
t977 = -pkin(4) * t1032 + t596;
t974 = t907 * t919 * t1087;
t973 = pkin(1) * t1110;
t859 = t893 + (-pkin(2) * t917 - pkin(3)) * t908;
t795 = pkin(4) * t867 + t859;
t715 = pkin(5) * t786 - pkin(13) * t787 + t795;
t968 = -pkin(13) * t970 - qJD(6) * t715 + t1101;
t805 = pkin(5) * t876 - pkin(13) * t877 + t901;
t967 = pkin(13) * t791 - qJD(6) * t805 + t1103;
t966 = -pkin(5) * t1049 - pkin(13) * t1050 + qJD(6) * t841 - t979;
t685 = -pkin(13) * t1075 + t1053;
t965 = -pkin(5) * t1054 + pkin(13) * t1055 + qJD(6) * t685 - t1051;
t964 = t567 * t914 + t576 * t909;
t962 = -t615 * t899 + t1118;
t603 = pkin(13) * t816 + t1107;
t713 = pkin(3) * t866 - t1096;
t668 = pkin(4) * t762 + t713;
t716 = t915 * t762 + t763 * t910;
t717 = -t762 * t910 + t763 * t915;
t620 = pkin(5) * t716 - pkin(13) * t717 + t668;
t960 = t603 * t914 + t620 * t909;
t959 = -t603 * t909 + t620 * t914;
t958 = t632 * t915 - t635 * t910;
t679 = t717 * t914 + t816 * t909;
t678 = t717 * t909 - t816 * t914;
t955 = t743 * t915 - t752 * t910;
t941 = -pkin(11) * t749 + t686 * t785;
t937 = t632 * t1032 - t1033 * t635 + t910 * t586 + t915 * t592;
t933 = t1030 * t877 - t998;
t932 = -t1031 * t877 - t997;
t921 = t949 * t929;
t656 = -t829 * t1072 + (-pkin(3) * t1012 - t857 * t917) * t906 - t988;
t628 = pkin(4) * t698 + t656;
t900 = -pkin(4) * t915 - pkin(5);
t765 = t787 * t914 - t1022;
t726 = t749 * t816;
t684 = pkin(5) * t1075 - t955;
t623 = qJD(5) * t717 + t915 * t698 + t699 * t910;
t622 = -qJD(5) * t716 - t698 * t910 + t699 * t915;
t605 = qJD(6) * t679 + t622 * t909 - t757 * t914;
t604 = -qJD(6) * t678 + t622 * t914 + t757 * t909;
t602 = -pkin(5) * t816 - t958;
t577 = pkin(5) * t623 - pkin(13) * t622 + t628;
t572 = -pkin(5) * t757 - t1095;
t571 = pkin(13) * t757 + t937;
t565 = -qJD(6) * t574 + t1003;
t564 = -qJD(6) * t961 + t964;
t1 = [(t614 * t717 + t622 * t954) * MDP(25) + (-t614 * t716 - t615 * t717 - t622 * t690 - t623 * t954) * MDP(26) + (-qJD(1) * t866 - t847) * MDP(15) * t983 + (-qJD(2) * t921 + t913 * t973 - t929 * t971) * MDP(9) + (t600 * t679 + t604 * t664) * MDP(32) + (-t600 * t678 - t601 * t679 - t604 * t662 - t605 * t664) * MDP(33) + (-t676 * t816 - t698 * t785 + t746 * t757 - t749 * t762) * MDP(21) + (t675 * t816 + t699 * t785 + t747 * t757 + t749 * t763) * MDP(20) + (t748 * t817 + t758 * t791) * MDP(11) + (-t748 * t816 - t749 * t817 - t757 * t791 - t758 * t789) * MDP(12) + (t757 * t785 + t726) * MDP(22) + (-((t829 * t908 + t857 * t906) * t917 + t988) * t847 + t945 * t866 + t760 * t789 + t754 * t749 + t751 * t816 + t737 * t757 + (qJD(1) * t1096 + t708) * t983) * MDP(16) + (-t1028 * t604 + t600 * t716 + t615 * t679 + t623 * t664) * MDP(34) + (-t1028 * t623 + t615 * t716) * MDP(36) + (t1028 * t605 - t601 * t716 - t615 * t678 - t623 * t662) * MDP(35) + ((qJD(6) * t959 + t571 * t914 + t577 * t909) * t1028 - t960 * t615 - t564 * t716 - t574 * t623 + t572 * t664 + t602 * t600 + t568 * t679 + t587 * t604) * MDP(38) + (-(-qJD(6) * t960 - t571 * t909 + t577 * t914) * t1028 + t959 * t615 + t565 * t716 - t961 * t623 + t572 * t662 + t602 * t601 + t568 * t678 + t587 * t605) * MDP(37) + t1104 * t1110 + (-t675 * t762 - t676 * t763 - t698 * t747 + t699 * t746) * MDP(19) + (t675 * t763 + t699 * t747) * MDP(18) + (t918 * t973 - (-pkin(9) * t1012 + t891) * t949 - (-pkin(9) * t981 + t885) * t1087) * MDP(10) + (-t1057 * t749 - t593 * t816 - t637 * t757 + t650 * t763 + t656 * t747 + t713 * t675 + t686 * t699 - t785 * t939) * MDP(24) + 0.2e1 * t990 * t1027 + (t928 * t847 + t651 * t866 + t760 * t791 + t754 * t748 + t751 * t817 + t737 * t758 + (-qJD(1) * t1018 - t709) * t983) * MDP(17) + (t594 * t816 + t636 * t757 + t650 * t762 - t656 * t746 + t713 * t676 + t686 * t698 + t749 * t996 + t785 * t923) * MDP(23) + (-t748 * t866 - t758 * t847 + (qJD(1) * t817 + t791) * t983) * MDP(13) + (t749 * t866 + t757 * t847 + (-qJD(1) * t816 - t789) * t983) * MDP(14) + (-MDP(7) * t1012 + t1039 * t1108) * (0.2e1 * t1004 + qJD(2)) + (-t1107 * t749 - t1129 * t937 - t590 * t757 + t668 * t614 + t621 * t717 + t653 * t622 + t628 * t954 + t816 * t989) * MDP(31) + (t1129 * t622 + t614 * t816 + t717 * t749 + t757 * t954) * MDP(27) + (-t1129 * t623 - t615 * t816 - t690 * t757 - t716 * t749) * MDP(28) + (t1129 * t757 + t726) * MDP(29) + (t1095 * t1129 + t570 * t816 + t589 * t757 + t668 * t615 + t621 * t716 + t653 * t623 + t628 * t690 + t958 * t749) * MDP(30); (-t945 * t908 - t737 * t844 - t759 * t789 + t1120 * t847 + (t737 * t1037 - pkin(2) * t749 + (t847 * t856 - t751) * t917 + (qJD(2) * t1102 - t708) * t1014) * t906) * MDP(16) + (MDP(7) * t974 + (t1026 - t947) * MDP(9)) * t913 + (t995 * t749 - t594 * t1075 + t859 * t676 + t650 * t867 + (-t860 * t1034 + (-qJD(4) * t861 + t1130) * t911 - t1126) * t785 - t1045 * t746 + t1047 * t686 + t970 * t636) * MDP(23) + (t1055 * t954 + t614 * t787) * MDP(25) + (-t1054 * t954 - t1055 * t690 - t614 * t786 - t615 * t787) * MDP(26) + (t1045 * t747 - t1046 * t749 + t1048 * t686 + t593 * t1075 + t1124 * t785 - t970 * t637 + t650 * t868 + t859 * t675) * MDP(24) + (t789 * t845 + t791 * t844 + (t748 * t917 - t749 * t912 + (-t789 * t917 - t791 * t912) * qJD(3)) * t906) * MDP(12) + (-pkin(9) * t980 + qJD(1) * t921) * MDP(9) + (-t1028 * t1060 + t1054 * t664 + t600 * t786 + t615 * t765) * MDP(34) + (-(t685 * t914 + t715 * t909) * t615 - t564 * t786 + t684 * t600 + t568 * t765 - (t909 * t965 + t914 * t968) * t1028 + t1064 * t664 + t1060 * t587 - t1054 * t574) * MDP(38) + (t1028 * t1059 - t1054 * t662 - t601 * t786 - t615 * t764) * MDP(35) + (-t1028 * t1054 + t615 * t786) * MDP(36) + ((-t685 * t909 + t715 * t914) * t615 + t565 * t786 + t684 * t601 + t568 * t764 - (t909 * t968 - t914 * t965) * t1028 + t1064 * t662 + t1059 * t587 - t1054 * t961) * MDP(37) + t1077 * t1104 + (t1048 * t785 - t1075 * t675 + t747 * t970 + t749 * t868) * MDP(20) + (-t1047 * t785 + t1075 * t676 + t746 * t970 - t749 * t867) * MDP(21) + (t1076 * t748 + t791 * t969) * MDP(11) + (t847 + t1038) * MDP(15) * t985 + (-t1059 * t664 - t1060 * t662 - t600 * t764 - t601 * t765) * MDP(33) + (t1060 * t664 + t600 * t765) * MDP(32) + (t1048 * t747 + t675 * t868) * MDP(18) + (-t1047 * t747 + t1048 * t746 - t675 * t867 - t676 * t868) * MDP(19) + (-t749 * t908 + t970 * t847 + (t1040 * t917 + t789 * t906) * t1014) * MDP(14) + (t748 * t908 - t969 * t847 + (t1040 * t912 - t791 * t906) * t1014) * MDP(13) + (-t885 + t918 * t1026 + (-pkin(9) * t1014 + t890) * t1004 + t890 * qJD(2)) * MDP(10) + (t785 * t970 - t1023) * MDP(22) - t919 * t990 - t974 * t1108 + (-t651 * t908 - t737 * t845 - t759 * t791 + t1132 * t847 + (t737 * t1036 - pkin(2) * t748 + t751 * t912 + (-qJD(2) * t1044 + t709) * t1014) * t906) * MDP(17) + (t1055 * t1129 - t1075 * t614 + t749 * t787 + t954 * t970) * MDP(27) + (t1051 * t954 - t1053 * t749 + t1055 * t653 - t1075 * t989 + t1101 * t1129 - t970 * t590 + t795 * t614 + t621 * t787) * MDP(31) + (-t1054 * t1129 + t1075 * t615 - t690 * t970 - t749 * t786) * MDP(28) + (t955 * t749 - t570 * t1075 + t795 * t615 + t621 * t786 + ((-qJD(5) * t752 - t1116) * t915 + (-qJD(5) * t743 + t1122) * t910) * t1129 + t1051 * t690 + t1054 * t653 + t970 * t589) * MDP(30) + (t1129 * t970 - t1023) * MDP(29); (-(t805 * t909 + t841 * t914) * t615 - t564 * t876 - t951 * t600 + t568 * t1078 - (t909 * t966 + t914 * t967) * t1028 + t1052 * t664 - t1049 * t574 + t932 * t587) * MDP(38) + ((t805 * t914 - t841 * t909) * t615 + t565 * t876 - t951 * t601 + t877 * t566 - (t909 * t967 - t914 * t966) * t1028 + t1052 * t662 - t1049 * t961 + t933 * t587) * MDP(37) - t789 ^ 2 * MDP(12) + MDP(15) * t950 + (t1028 * t933 - t1049 * t662 - t601 * t876 - t611 * t877) * MDP(35) + (-t1028 * t932 + t1049 * t664 + t600 * t876 + t613 * t877) * MDP(34) + (-t1028 * t1049 + t615 * t876) * MDP(36) + (t998 * t664 + t997 * t662 + (-t598 - t601 * t914 + (t662 * t909 - t664 * t914) * qJD(6)) * t877) * MDP(33) + ((t675 + t1081) * t916 + (-t676 - t1080) * t911) * MDP(19) + (t1078 * t600 + t664 * t932) * MDP(32) + (-t1050 * t954 + t614 * t877) * MDP(25) + (-t1049 * t954 + t1050 * t690 - t614 * t876 - t615 * t877) * MDP(26) + (t675 * t911 + t747 * t994) * MDP(18) + (-pkin(3) * t675 + t650 * t911 - t709 * t747 + (pkin(11) * t1035 + t1058) * t785 + t941 * t916) * MDP(24) + (-pkin(3) * t676 - t650 * t916 + t709 * t746 + (-pkin(11) * t1034 - t732) * t785 + (t708 * t785 + t941) * t911) * MDP(23) + (-t708 * t847 + t737 * t789 - t651) * MDP(17) + (-t1041 * t1091 - t927) * MDP(14) + (-t1049 * t1129 - t749 * t876) * MDP(28) + (t1049 * t653 + t1105 * t1129 + t901 * t615 + t621 * t876 + t979 * t690 + t749 * t951) * MDP(30) + (MDP(11) * t789 + MDP(12) * t791 - MDP(14) * t847 - MDP(16) * t737 - MDP(20) * t747 - MDP(21) * t746 - MDP(22) * t785 - MDP(23) * t636 + MDP(24) * t637 - MDP(27) * t954 + MDP(28) * t690 - MDP(29) * t1129 - MDP(30) * t589 + MDP(31) * t590) * t791 + (-t1050 * t1129 + t749 * t877) * MDP(27) + (-t1050 * t653 + t1103 * t1129 + t901 * t614 + t621 * t877 - t841 * t749 + t979 * t954) * MDP(31) + (-t709 * t847 - t945) * MDP(16) + (-t785 ^ 2 * t911 + t749 * t916) * MDP(21) + (t749 * t911 + t785 * t994) * MDP(20) + (-t789 * t847 + t748) * MDP(13); (t595 * t1129 + (-t1033 * t1129 - t690 * t747 + t749 * t915) * pkin(4) + t1098) * MDP(30) + (t900 * t601 + t962 * t909 + t978 * t662 - (t909 * t977 - t914 * t991) * t1028 + t1094) * MDP(37) + (t900 * t600 + t962 * t914 + t978 * t664 - (t909 * t991 + t914 * t977) * t1028 + t1092) * MDP(38) + (t596 * t1129 + (-t1032 * t1129 - t747 * t954 - t749 * t910) * pkin(4) + t1113) * MDP(31) + (-t746 ^ 2 + t747 ^ 2) * MDP(19) + t749 * MDP(22) - t747 * t746 * MDP(18) + (t1080 - t676) * MDP(21) + (t675 - t1081) * MDP(20) + (t636 * t785 - t686 * t746 - t593) * MDP(24) + (t637 * t785 - t686 * t747 + t594) * MDP(23) + t1119; (t1129 * t590 + t1098) * MDP(30) + (t1129 * t589 + t1113) * MDP(31) + (-pkin(5) * t601 + (-t589 * t909 + t641 * t914) * t1028 - t590 * t662 + t909 * t1118 + t1106 * pkin(13) + t1094) * MDP(37) + (-pkin(5) * t600 - (t589 * t914 + t641 * t909) * t1028 - t590 * t664 + t587 * t1117 + (-t1028 * t1031 - t613) * pkin(13) + t1092) * MDP(38) + t1119; t664 * t662 * MDP(32) + (-t662 ^ 2 + t664 ^ 2) * MDP(33) + (-t1028 * t662 + t1019) * MDP(34) + (-t1028 * t664 - t1000) * MDP(35) + t615 * MDP(36) + (-t1028 * t574 - t587 * t664 + t1003) * MDP(37) + (t1028 * t961 + t587 * t662 - t964) * MDP(38) + (-MDP(34) * t1082 - MDP(35) * t664 - MDP(37) * t574 + MDP(38) * t961) * qJD(6);];
tauc  = t1;
