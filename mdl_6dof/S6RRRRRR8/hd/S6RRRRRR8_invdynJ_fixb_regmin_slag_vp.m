% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x38]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR8_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR8_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR8_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR8_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_invdynJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 05:07:02
% EndTime: 2019-03-10 05:07:56
% DurationCPUTime: 26.69s
% Computational Cost: add. (39268->880), mult. (109625->1256), div. (0->0), fcn. (94637->18), ass. (0->407)
t402 = sin(pkin(6));
t403 = cos(pkin(7));
t412 = cos(qJ(3));
t413 = cos(qJ(2));
t575 = t412 * t413;
t407 = sin(qJ(3));
t408 = sin(qJ(2));
t578 = t407 * t408;
t453 = -t403 * t578 + t575;
t327 = t453 * t402;
t317 = qJD(1) * t327;
t401 = sin(pkin(7));
t554 = qJD(3) * t412;
t525 = t401 * t554;
t671 = -t317 + t525;
t601 = cos(pkin(6));
t532 = pkin(1) * t601;
t388 = t413 * t532;
t379 = qJD(1) * t388;
t613 = pkin(10) * t403;
t484 = t402 * (-pkin(9) - t613);
t458 = t408 * t484;
t296 = qJD(1) * t458 + t379;
t387 = t408 * t532;
t422 = t413 * t484 - t387;
t297 = t422 * qJD(1);
t614 = pkin(10) * t401;
t457 = pkin(2) * t408 - t413 * t614;
t557 = qJD(1) * t402;
t331 = t457 * t557;
t580 = t403 * t407;
t585 = t401 * t407;
t383 = pkin(10) * t585;
t579 = t403 * t412;
t630 = pkin(2) * t579 - t383;
t670 = t630 * qJD(3) - t412 * t296 - t297 * t580 - t331 * t585;
t219 = -t297 * t401 + t403 * t331;
t576 = t408 * t412;
t577 = t407 * t413;
t455 = t403 * t576 + t577;
t326 = t455 * t402;
t316 = qJD(1) * t326;
t669 = pkin(3) * t316 - pkin(11) * t317 + t219 - (pkin(3) * t407 - pkin(11) * t412) * t401 * qJD(3);
t529 = t408 * t557;
t498 = t401 * t529;
t668 = pkin(11) * t498 - t670;
t528 = t413 * t557;
t495 = t403 * t528;
t356 = t412 * t495;
t511 = t601 * qJD(1);
t461 = t511 + qJD(2);
t444 = t401 * t461;
t497 = t407 * t529;
t264 = -t412 * t444 - t356 + t497;
t260 = qJD(4) + t264;
t667 = qJD(5) + t260;
t406 = sin(qJ(4));
t411 = cos(qJ(4));
t342 = -t411 * t403 + t406 * t585;
t563 = -qJD(4) * t342 - t406 * t498 + t411 * t671;
t343 = t403 * t406 + t411 * t585;
t562 = qJD(4) * t343 + t406 * t671 + t411 * t498;
t555 = qJD(3) * t407;
t526 = t401 * t555;
t644 = t316 - t526;
t409 = cos(qJ(6));
t548 = qJD(6) * t409;
t454 = t403 * t577 + t576;
t435 = t454 * t402;
t266 = qJD(1) * t435 + t407 * t444;
t319 = t401 * t528 - t403 * t461 - qJD(3);
t206 = -t406 * t266 - t319 * t411;
t207 = t266 * t411 - t319 * t406;
t405 = sin(qJ(5));
t410 = cos(qJ(5));
t130 = -t410 * t206 + t207 * t405;
t647 = t130 * t409;
t665 = t548 + t647;
t414 = cos(qJ(1));
t515 = t414 * t601;
t616 = sin(qJ(1));
t344 = t408 * t616 - t413 * t515;
t345 = t408 * t515 + t413 * t616;
t581 = t402 * t414;
t538 = t401 * t581;
t230 = t344 * t580 - t345 * t412 + t407 * t538;
t300 = -t344 * t401 + t403 * t581;
t400 = qJ(4) + qJ(5);
t395 = sin(t400);
t396 = cos(t400);
t178 = t230 * t396 + t300 * t395;
t404 = sin(qJ(6));
t664 = t178 * t404;
t663 = t178 * t409;
t661 = t669 * t411;
t584 = t401 * t412;
t559 = pkin(2) * t580 + pkin(10) * t584;
t335 = pkin(11) * t403 + t559;
t336 = (-pkin(3) * t412 - pkin(11) * t407 - pkin(2)) * t401;
t552 = qJD(4) * t411;
t553 = qJD(4) * t406;
t660 = t335 * t553 - t336 * t552 + t406 * t669 + t668 * t411;
t397 = t402 ^ 2;
t659 = 0.2e1 * t397;
t561 = t411 * t335 + t406 * t336;
t649 = t644 * pkin(4) + t563 * pkin(12) + qJD(4) * t561 - t406 * t668 + t661;
t648 = -pkin(12) * t562 - t660;
t617 = pkin(11) + pkin(12);
t531 = qJD(4) * t617;
t582 = t402 * t413;
t430 = pkin(9) * t582 + t387;
t254 = t430 * qJD(1) + (t444 + t495) * pkin(10);
t426 = pkin(2) * t601 + t458;
t263 = qJD(2) * pkin(2) + qJD(1) * t426 + t379;
t451 = -pkin(2) * t413 - t408 * t614 - pkin(1);
t323 = t451 * t402;
t310 = qJD(1) * t323;
t149 = -t407 * t254 + (t263 * t403 + t310 * t401) * t412;
t189 = pkin(3) * t266 + pkin(11) * t264;
t572 = t411 * t149 + t406 * t189;
t595 = t264 * t406;
t658 = pkin(12) * t595 + t406 * t531 + t572;
t188 = t411 * t189;
t657 = pkin(4) * t266 - t149 * t406 + t188 + (pkin(12) * t264 + t531) * t411;
t524 = t403 * t555;
t656 = pkin(2) * t524 + pkin(10) * t525 - t407 * t296 + t297 * t579;
t465 = t206 * t405 + t410 * t207;
t107 = t404 * t667 + t409 * t465;
t501 = t601 * qJDD(1);
t382 = t501 + qJDD(2);
t417 = qJD(2) * t455 + qJD(3) * t454;
t432 = qJD(3) * t444;
t545 = qJDD(1) * t413;
t519 = t402 * t545;
t493 = t403 * t519;
t544 = t408 * qJDD(1);
t173 = -t382 * t584 + t402 * (qJD(1) * t417 + t407 * t544) + t407 * t432 - t412 * t493;
t167 = qJDD(4) + t173;
t166 = qJDD(5) + t167;
t550 = qJD(5) * t410;
t551 = qJD(5) * t405;
t520 = t402 * t544;
t546 = qJD(1) * qJD(2);
t521 = t413 * t546;
t643 = -t402 * t521 - t520;
t172 = qJD(3) * t356 + t382 * t585 + t407 * t493 + (-qJD(2) * t403 - qJD(3)) * t497 + (t432 - t643) * t412;
t522 = t408 * t546;
t492 = t402 * t522;
t271 = t382 * t403 + qJDD(3) + (t492 - t519) * t401;
t97 = t411 * t172 - t266 * t553 + t406 * t271 - t319 * t552;
t98 = qJD(4) * t207 + t172 * t406 - t411 * t271;
t48 = t206 * t550 - t207 * t551 - t405 * t98 + t410 * t97;
t549 = qJD(6) * t404;
t25 = t404 * t166 + t409 * t48 - t465 * t549 + t548 * t667;
t23 = t25 * t404;
t655 = t107 * t665 + t23;
t49 = qJD(5) * t465 + t405 * t97 + t410 * t98;
t47 = qJDD(6) + t49;
t547 = -qJD(6) - t130;
t654 = -t107 * t465 + t404 * t47 - t547 * t665;
t105 = t404 * t465 - t409 * t667;
t44 = t409 * t47;
t645 = t547 * t404;
t653 = t105 * t465 - t547 * t645 + t44;
t512 = -t409 * t166 + t404 * t48;
t26 = qJD(6) * t107 + t512;
t652 = -t105 * t665 + t107 * t645 + t25 * t409 - t404 * t26;
t651 = pkin(1) * t659;
t483 = t601 * t616;
t346 = -t408 * t483 + t413 * t414;
t428 = t414 * t408 + t413 * t483;
t530 = t402 * t616;
t499 = t401 * t530;
t232 = t346 * t412 + (-t403 * t428 + t499) * t407;
t302 = t401 * t428 + t403 * t530;
t179 = -t232 * t395 + t302 * t396;
t514 = t601 * t401;
t289 = t407 * t514 + t435;
t341 = t401 * t582 - t403 * t601;
t639 = t230 * t395 - t300 * t396;
t442 = -g(3) * (-t289 * t395 - t341 * t396) - g(2) * t639 - g(1) * t179;
t494 = qJD(2) * t532;
t459 = qJD(1) * t494;
t488 = pkin(1) * t501;
t533 = pkin(9) * t519 + t408 * t488 + t413 * t459;
t429 = -pkin(9) * t492 + t533;
t628 = -t522 + t545;
t195 = (t402 * t403 * t628 + t382 * t401) * pkin(10) + t429;
t431 = -t408 * t459 + t413 * t488;
t448 = -t521 - t544;
t433 = t448 * pkin(9);
t201 = t382 * pkin(2) + (t448 * t613 + t433) * t402 + t431;
t439 = qJD(2) * t457;
t235 = (qJD(1) * t439 + qJDD(1) * t451) * t402;
t523 = t403 * t554;
t77 = t412 * t195 + t201 * t580 + t235 * t585 - t254 * t555 + t263 * t523 + t310 * t525;
t64 = pkin(11) * t271 + t77;
t141 = -t201 * t401 + t403 * t235;
t72 = pkin(3) * t173 - pkin(11) * t172 + t141;
t198 = -t263 * t401 + t403 * t310;
t121 = pkin(3) * t264 - pkin(11) * t266 + t198;
t150 = t412 * t254 + t263 * t580 + t310 * t585;
t127 = -pkin(11) * t319 + t150;
t83 = t121 * t406 + t127 * t411;
t21 = -qJD(4) * t83 - t406 * t64 + t411 * t72;
t14 = pkin(4) * t167 - pkin(12) * t97 + t21;
t450 = -t121 * t552 + t127 * t553 - t406 * t72 - t411 * t64;
t18 = -pkin(12) * t98 - t450;
t82 = t411 * t121 - t127 * t406;
t66 = -pkin(12) * t207 + t82;
t56 = pkin(4) * t260 + t66;
t67 = pkin(12) * t206 + t83;
t605 = t410 * t67;
t34 = t405 * t56 + t605;
t7 = -qJD(5) * t34 + t410 * t14 - t18 * t405;
t5 = -pkin(5) * t166 - t7;
t436 = t442 - t5;
t606 = t405 * t67;
t33 = t410 * t56 - t606;
t31 = -pkin(5) * t667 - t33;
t650 = t130 * t31;
t646 = t465 * t130;
t261 = t410 * t342 + t343 * t405;
t569 = -qJD(5) * t261 - t405 * t562 + t410 * t563;
t262 = -t342 * t405 + t343 * t410;
t568 = qJD(5) * t262 + t405 * t563 + t410 * t562;
t357 = t405 * t406 - t410 * t411;
t565 = t667 * t357;
t358 = t405 * t411 + t406 * t410;
t564 = t667 * t358;
t560 = -(-pkin(3) * t529 - t331 * t412) * t401 + t656;
t642 = -t130 ^ 2 + t465 ^ 2;
t87 = pkin(5) * t465 + pkin(13) * t130;
t641 = t130 * t667 + t48;
t180 = t232 * t396 + t302 * t395;
t218 = t289 * t396 - t341 * t395;
t513 = -t405 * t14 - t410 * t18 - t56 * t550 + t67 * t551;
t126 = pkin(3) * t319 - t149;
t99 = -pkin(4) * t206 + t126;
t640 = g(1) * t180 - g(2) * t178 + g(3) * t218 + t130 * t99 + t513;
t638 = t230 * t411 + t300 * t406;
t637 = t230 * t406 - t300 * t411;
t634 = t547 * t465;
t487 = -t150 + (t553 + t595) * pkin(4);
t295 = t388 + t426;
t212 = -t295 * t401 + t403 * t323;
t627 = t403 * t575 - t578;
t288 = -t402 * t627 - t412 * t514;
t147 = pkin(3) * t288 - pkin(11) * t289 + t212;
t282 = (t403 * t582 + t514) * pkin(10) + t430;
t535 = t412 * t282 + t295 * t580 + t323 * t585;
t155 = -pkin(11) * t341 + t535;
t571 = t406 * t147 + t411 * t155;
t505 = -t335 * t406 + t411 * t336;
t202 = -pkin(4) * t584 - pkin(12) * t343 + t505;
t209 = -pkin(12) * t342 + t561;
t567 = t405 * t202 + t410 * t209;
t372 = t617 * t406;
t373 = t617 * t411;
t462 = -t372 * t410 - t373 * t405;
t633 = -qJD(5) * t462 + t405 * t657 + t410 * t658;
t313 = -t372 * t405 + t373 * t410;
t632 = -qJD(5) * t313 + t405 * t658 - t410 * t657;
t566 = pkin(4) * t562 + t560;
t224 = t289 * t406 + t341 * t411;
t225 = t289 * t411 - t341 * t406;
t158 = -t224 * t405 + t225 * t410;
t280 = t288 * t409;
t631 = -t158 * t404 + t280;
t629 = -t202 * t550 + t209 * t551 + t405 * t649 - t410 * t648;
t32 = pkin(13) * t667 + t34;
t54 = pkin(5) * t130 - pkin(13) * t465 + t99;
t472 = t32 * t404 - t409 * t54;
t625 = t31 * t549 + t465 * t472;
t16 = t32 * t409 + t404 * t54;
t623 = t16 * t465 + t31 * t548 - t436 * t404;
t622 = -t465 * t99 + t442 + t7;
t620 = t465 * t667 - t49;
t482 = qJD(3) * t514;
t216 = t412 * t482 + (t453 * qJD(2) + qJD(3) * t627) * t402;
t556 = qJD(2) * t402;
t527 = t408 * t556;
t496 = t401 * t527;
t139 = -qJD(4) * t224 + t216 * t411 + t406 * t496;
t215 = t402 * t417 + t407 * t482;
t380 = t413 * t494;
t298 = qJD(2) * t458 + t380;
t299 = t422 * qJD(2);
t332 = t402 * t439;
t427 = -t282 * t555 + t295 * t523 + t412 * t298 + t299 * t580 + t323 * t525 + t332 * t585;
t101 = pkin(11) * t496 + t427;
t220 = -t299 * t401 + t403 * t332;
t110 = pkin(3) * t215 - pkin(11) * t216 + t220;
t421 = -qJD(4) * t571 - t101 * t406 + t411 * t110;
t30 = pkin(4) * t215 - pkin(12) * t139 + t421;
t138 = qJD(4) * t225 + t216 * t406 - t411 * t496;
t447 = t411 * t101 + t406 * t110 + t147 * t552 - t155 * t553;
t36 = -pkin(12) * t138 + t447;
t507 = t411 * t147 - t155 * t406;
t76 = pkin(4) * t288 - pkin(12) * t225 + t507;
t81 = -pkin(12) * t224 + t571;
t468 = t405 * t76 + t410 * t81;
t618 = -qJD(5) * t468 + t30 * t410 - t36 * t405;
t456 = t407 * t195 - t201 * t579 - t235 * t584 + t254 * t554 + t263 * t524 + t310 * t526;
t65 = -pkin(3) * t271 + t456;
t45 = pkin(4) * t98 + t65;
t11 = pkin(5) * t49 - pkin(13) * t48 + t45;
t4 = pkin(13) * t166 - t513;
t1 = -t472 * qJD(6) + t404 * t11 + t409 * t4;
t415 = qJD(1) ^ 2;
t609 = t644 * pkin(5) + t567 * qJD(5) + t648 * t405 + t649 * t410;
t602 = pkin(5) * t266 - t632;
t597 = t206 * t260;
t596 = t207 * t260;
t594 = t288 * t404;
t593 = t345 * t407;
t592 = t358 * t404;
t591 = t358 * t409;
t590 = t395 * t401;
t589 = t396 * t401;
t588 = t396 * t404;
t587 = t396 * t409;
t586 = t397 * t415;
t583 = t402 * t408;
t233 = t262 * t404 + t409 * t584;
t574 = -qJD(6) * t233 - t644 * t404 + t569 * t409;
t537 = t404 * t584;
t573 = -qJD(6) * t537 + t262 * t548 + t569 * t404 + t644 * t409;
t398 = t408 ^ 2;
t558 = -t413 ^ 2 + t398;
t540 = t413 * t586;
t539 = t401 * t583;
t394 = -pkin(4) * t411 - pkin(3);
t392 = pkin(4) * t405 + pkin(13);
t510 = pkin(4) * t207 + qJD(6) * t392 + t87;
t509 = -t409 * t266 + t565 * t404;
t508 = t266 * t404 + t565 * t409;
t504 = t411 * t260;
t500 = -t282 * t554 - t295 * t524 - t407 * t298 - t323 * t526;
t37 = t405 * t66 + t605;
t490 = pkin(4) * t551 - t37;
t38 = t410 * t66 - t606;
t489 = -pkin(4) * t550 + t38;
t125 = -pkin(13) * t584 + t567;
t486 = -t568 * pkin(5) + t569 * pkin(13) + qJD(6) * t125 - t566;
t334 = t383 + (-pkin(2) * t412 - pkin(3)) * t403;
t270 = pkin(4) * t342 + t334;
t156 = pkin(5) * t261 - pkin(13) * t262 + t270;
t485 = t644 * pkin(13) - qJD(6) * t156 + t629;
t481 = t402 * t415 * t601;
t478 = -t564 * pkin(5) - t565 * pkin(13) + qJD(6) * t313 - t487;
t279 = pkin(5) * t357 - pkin(13) * t358 + t394;
t477 = pkin(13) * t266 - qJD(6) * t279 + t633;
t474 = -t392 * t47 + t650;
t40 = pkin(13) * t288 + t468;
t273 = t407 * t282;
t463 = t295 * t403 + t323 * t401;
t154 = pkin(3) * t341 - t412 * t463 + t273;
t111 = pkin(4) * t224 + t154;
t157 = t410 * t224 + t225 * t405;
t59 = pkin(5) * t157 - pkin(13) * t158 + t111;
t471 = t40 * t409 + t404 * t59;
t470 = -t40 * t404 + t409 * t59;
t469 = -t405 * t81 + t410 * t76;
t117 = t158 * t409 + t594;
t466 = t202 * t410 - t209 * t405;
t460 = 0.2e1 * t511 + qJD(2);
t452 = t405 * t30 + t410 * t36 + t76 * t550 - t551 * t81;
t449 = -pkin(11) * t167 + t126 * t260;
t443 = t402 * (t501 + t382);
t227 = t344 * t579 + t412 * t538 + t593;
t425 = t428 * t412;
t231 = t346 * t407 + t403 * t425 - t412 * t499;
t441 = g(1) * t231 + g(2) * t227 + g(3) * t288;
t250 = -t344 * t412 - t345 * t580;
t252 = -t346 * t580 - t425;
t440 = g(1) * t252 + g(2) * t250 + g(3) * t327;
t438 = t358 * t548 - t509;
t437 = -t358 * t549 - t508;
t434 = g(1) * t346 + g(2) * t345 + g(3) * t583;
t2 = -qJD(6) * t16 + t409 * t11 - t404 * t4;
t420 = pkin(11) * qJD(4) * t260 - t441 + t65;
t418 = t461 * t430;
t102 = -t299 * t579 + (-pkin(3) * t527 - t332 * t412) * t401 - t500;
t71 = pkin(4) * t138 + t102;
t393 = -pkin(4) * t410 - pkin(5);
t253 = t327 * t396 + t395 * t539;
t251 = t346 * t579 - t407 * t428;
t249 = -t344 * t407 + t345 * t579;
t234 = t262 * t409 - t537;
t229 = -t593 + (-t344 * t403 - t538) * t412;
t204 = t252 * t396 + t346 * t590;
t203 = t250 * t396 + t345 * t590;
t184 = t232 * t411 + t302 * t406;
t183 = -t232 * t406 + t302 * t411;
t124 = pkin(5) * t584 - t466;
t120 = t180 * t409 + t231 * t404;
t119 = -t180 * t404 + t231 * t409;
t61 = qJD(5) * t158 + t410 * t138 + t139 * t405;
t60 = -qJD(5) * t157 - t138 * t405 + t139 * t410;
t42 = qJD(6) * t117 - t215 * t409 + t404 * t60;
t41 = qJD(6) * t631 + t215 * t404 + t409 * t60;
t39 = -pkin(5) * t288 - t469;
t19 = pkin(5) * t61 - pkin(13) * t60 + t71;
t9 = -pkin(5) * t215 - t618;
t8 = pkin(13) * t215 + t452;
t3 = [qJDD(1), g(1) * t616 - g(2) * t414, g(1) * t414 + g(2) * t616 (qJDD(1) * t398 + 0.2e1 * t408 * t521) * t397 (t413 * t544 - t546 * t558) * t659, t413 * t460 * t556 + t408 * t443, t413 * t443 - t460 * t527, t382 * t601, -qJD(2) * t418 + (-pkin(9) * t583 + t388) * t382 + (t402 * t433 + t431) * t601 + g(1) * t345 - g(2) * t346 + t628 * t651 -(-pkin(9) * t527 + t380) * t461 - t430 * t382 - t429 * t601 - g(1) * t344 + g(2) * t428 + t448 * t651, t172 * t289 + t216 * t266, -t172 * t288 - t173 * t289 - t215 * t266 - t216 * t264, -t172 * t341 - t216 * t319 + t266 * t496 + t271 * t289, t173 * t341 + t215 * t319 - t264 * t496 - t271 * t288, -t271 * t341 - t319 * t496, -t500 * t319 - t273 * t271 + t456 * t341 + t149 * t496 + t220 * t264 + t212 * t173 + t141 * t288 + t198 * t215 - g(1) * t230 - g(2) * t232 + (-(t299 * t403 + t332 * t401) * t319 + t463 * t271) * t412, g(1) * t229 + g(2) * t231 + t141 * t289 - t150 * t496 + t212 * t172 + t198 * t216 + t220 * t266 - t271 * t535 + t319 * t427 + t77 * t341, t139 * t207 + t225 * t97, -t138 * t207 + t139 * t206 - t224 * t97 - t225 * t98, t139 * t260 + t167 * t225 + t207 * t215 + t288 * t97, -t138 * t260 - t167 * t224 + t206 * t215 - t288 * t98, t167 * t288 + t215 * t260, -g(1) * t638 - g(2) * t184 - t102 * t206 + t126 * t138 + t154 * t98 + t507 * t167 + t21 * t288 + t82 * t215 + t65 * t224 + t421 * t260, g(1) * t637 - g(2) * t183 + t102 * t207 + t126 * t139 + t154 * t97 - t571 * t167 - t83 * t215 + t65 * t225 - t447 * t260 + t450 * t288, t158 * t48 + t465 * t60, -t130 * t60 - t157 * t48 - t158 * t49 - t465 * t61, t158 * t166 + t215 * t465 + t288 * t48 + t60 * t667, -t130 * t215 - t157 * t166 - t288 * t49 - t61 * t667, t166 * t288 + t215 * t667, -g(1) * t178 - g(2) * t180 + t111 * t49 + t71 * t130 + t45 * t157 + t469 * t166 + t33 * t215 + t7 * t288 + t99 * t61 + t618 * t667, g(1) * t639 - g(2) * t179 + t111 * t48 + t45 * t158 - t468 * t166 - t34 * t215 + t513 * t288 - t452 * t667 + t71 * t465 + t99 * t60, t107 * t41 + t117 * t25, -t105 * t41 - t107 * t42 - t117 * t26 + t25 * t631, t107 * t61 + t117 * t47 + t157 * t25 - t41 * t547, -t105 * t61 - t157 * t26 + t42 * t547 + t47 * t631, t157 * t47 - t547 * t61 -(-qJD(6) * t471 + t19 * t409 - t404 * t8) * t547 + t470 * t47 + t2 * t157 - t472 * t61 + t9 * t105 + t39 * t26 - t5 * t631 + t31 * t42 - g(1) * (t229 * t404 + t663) - g(2) * t120 (qJD(6) * t470 + t19 * t404 + t409 * t8) * t547 - t471 * t47 - t1 * t157 - t16 * t61 + t9 * t107 + t39 * t25 + t5 * t117 + t31 * t41 - g(1) * (t229 * t409 - t664) - g(2) * t119; 0, 0, 0, -t408 * t540, t558 * t586, -t413 * t481 + t520, t408 * t481 + t519, t382, pkin(1) * t408 * t586 + pkin(9) * t643 + g(1) * t428 + g(2) * t344 - g(3) * t582 + qJD(1) * t418 + t431, pkin(1) * t540 + (-pkin(9) * t529 + t379) * t511 + t379 * qJD(2) + t434 - t533, t172 * t585 + t266 * t671, t264 * t317 + t266 * t316 + (t172 * t412 - t173 * t407 + (-t264 * t412 - t266 * t407) * qJD(3)) * t401, t172 * t403 + t317 * t319 + (-t266 * t529 + t271 * t407 - t319 * t554) * t401, -t173 * t403 - t316 * t319 + (t264 * t529 + t271 * t412 + t319 * t555) * t401, t271 * t403 + t319 * t498, t630 * t271 - t456 * t403 - t219 * t264 - t198 * t316 + t656 * t319 + (-t149 * t529 + t198 * t555 - pkin(2) * t173 + (t319 * t331 - t141) * t412) * t401 - t440, -t559 * t271 - t77 * t403 - t219 * t266 - t198 * t317 + g(1) * t251 + g(2) * t249 + g(3) * t326 + t670 * t319 + (-pkin(2) * t172 + t141 * t407 + t150 * t529 + t198 * t554) * t401, t207 * t563 + t343 * t97, t206 * t563 - t207 * t562 - t342 * t97 - t343 * t98, t167 * t343 - t207 * t644 + t260 * t563 - t584 * t97, -t167 * t342 - t206 * t644 - t260 * t562 + t584 * t98, -t167 * t584 - t260 * t644, t505 * t167 + t334 * t98 + t65 * t342 - t82 * t316 - t440 * t411 + (-t21 * t412 - t406 * t434 + t555 * t82) * t401 + (-t335 * t552 + (-qJD(4) * t336 + t668) * t406 - t661) * t260 - t560 * t206 + t562 * t126, -t561 * t167 + t334 * t97 + t65 * t343 + t83 * t316 + t440 * t406 + (-t411 * t434 - t412 * t450 - t555 * t83) * t401 + t660 * t260 + t560 * t207 + t563 * t126, t262 * t48 + t465 * t569, -t130 * t569 - t261 * t48 - t262 * t49 - t465 * t568, t166 * t262 - t465 * t644 - t48 * t584 + t569 * t667, t130 * t644 - t166 * t261 + t49 * t584 - t568 * t667, -t166 * t584 - t644 * t667, t466 * t166 - t7 * t584 + t270 * t49 + t45 * t261 - g(1) * t204 - g(2) * t203 - g(3) * t253 + t568 * t99 - t644 * t33 + ((-qJD(5) * t209 - t649) * t410 + (-qJD(5) * t202 - t648) * t405) * t667 + t566 * t130, -t567 * t166 - t513 * t584 + t270 * t48 + t45 * t262 - g(1) * (-t252 * t395 + t346 * t589) - g(2) * (-t250 * t395 + t345 * t589) - g(3) * (-t327 * t395 + t396 * t539) + t569 * t99 + t644 * t34 + t629 * t667 + t566 * t465, t107 * t574 + t234 * t25, -t105 * t574 - t107 * t573 - t233 * t25 - t234 * t26, t107 * t568 + t234 * t47 + t25 * t261 - t547 * t574, -t105 * t568 - t233 * t47 - t26 * t261 + t547 * t573, t261 * t47 - t547 * t568 (-t125 * t404 + t156 * t409) * t47 + t2 * t261 + t124 * t26 + t5 * t233 - g(1) * (t204 * t409 + t251 * t404) - g(2) * (t203 * t409 + t249 * t404) - g(3) * (t253 * t409 + t326 * t404) + t573 * t31 - t568 * t472 - (t404 * t485 - t409 * t486) * t547 + t609 * t105 -(t125 * t409 + t156 * t404) * t47 - t1 * t261 + t124 * t25 + t5 * t234 - g(1) * (-t204 * t404 + t251 * t409) - g(2) * (-t203 * t404 + t249 * t409) - g(3) * (-t253 * t404 + t326 * t409) + t574 * t31 - t568 * t16 - (t404 * t486 + t409 * t485) * t547 + t609 * t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266 * t264, -t264 ^ 2 + t266 ^ 2, -t264 * t319 + t172, -t266 * t319 - t173, t271, -t150 * t319 - t198 * t266 + t441 - t456, g(1) * t232 - g(2) * t230 + g(3) * t289 - t149 * t319 + t198 * t264 - t77, t207 * t504 + t406 * t97 (t97 + t597) * t411 + (-t98 - t596) * t406, t406 * t167 - t207 * t266 + t260 * t504, -t260 ^ 2 * t406 + t167 * t411 - t206 * t266, -t260 * t266, -pkin(3) * t98 + t150 * t206 - t188 * t260 - t82 * t266 + (t149 * t260 + t449) * t406 - t420 * t411, -pkin(3) * t97 - t150 * t207 + t260 * t572 + t83 * t266 + t406 * t420 + t411 * t449, t358 * t48 - t465 * t565, t130 * t565 - t357 * t48 - t358 * t49 - t465 * t564, t166 * t358 - t266 * t465 - t565 * t667, t130 * t266 - t166 * t357 - t564 * t667, -t667 * t266, t487 * t130 + t166 * t462 - t33 * t266 + t45 * t357 + t394 * t49 + t441 * t396 + t564 * t99 + t632 * t667, -t313 * t166 + t34 * t266 + t45 * t358 + t394 * t48 - t441 * t395 + t487 * t465 - t565 * t99 + t633 * t667, t107 * t437 + t25 * t591, t509 * t107 + t508 * t105 + (-t23 - t26 * t409 + (t105 * t404 - t107 * t409) * qJD(6)) * t358, t107 * t564 + t25 * t357 - t437 * t547 + t47 * t591, -t105 * t564 - t26 * t357 + t438 * t547 - t47 * t592, t357 * t47 - t547 * t564 (t279 * t409 - t313 * t404) * t47 + t2 * t357 - t462 * t26 + t5 * t592 - g(1) * (-t231 * t587 + t232 * t404) - g(2) * (-t227 * t587 - t230 * t404) - g(3) * (-t288 * t587 + t289 * t404) - t564 * t472 - (t404 * t477 - t409 * t478) * t547 + t602 * t105 + t438 * t31 -(t279 * t404 + t313 * t409) * t47 - t1 * t357 - t462 * t25 + t5 * t591 - g(1) * (t231 * t588 + t232 * t409) - g(2) * (t227 * t588 - t230 * t409) - g(3) * (t288 * t588 + t289 * t409) - t564 * t16 - (t404 * t478 + t409 * t477) * t547 + t602 * t107 + t437 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207 * t206, -t206 ^ 2 + t207 ^ 2, t97 - t597, t596 - t98, t167, -g(1) * t183 - g(2) * t637 + g(3) * t224 - t126 * t207 + t83 * t260 + t21, g(1) * t184 - g(2) * t638 + g(3) * t225 - t126 * t206 + t82 * t260 + t450, t646, t642, t641, t620, t166, t667 * t37 + (-t130 * t207 + t166 * t410 - t551 * t667) * pkin(4) + t622, t667 * t38 + (-t166 * t405 - t207 * t465 - t550 * t667) * pkin(4) + t640, t655, t652, t654, t653, t634, t393 * t26 + t490 * t105 + (-t489 * t547 + t474) * t404 + (t510 * t547 + t436) * t409 + t625, t393 * t25 + t474 * t409 + t490 * t107 - (t404 * t510 + t409 * t489) * t547 + t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t646, t642, t641, t620, t166, t34 * t667 + t622, t33 * t667 + t640, t655, t652, t654, t653, t634, -pkin(5) * t26 - t34 * t105 + (-pkin(13) * t47 - t33 * t547 + t650) * t404 + (-(-pkin(13) * qJD(6) - t87) * t547 + t436) * t409 + t625, -pkin(5) * t25 - (t33 * t409 + t404 * t87) * t547 - t34 * t107 + t31 * t647 + (-t547 * t549 - t44) * pkin(13) + t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107 * t105, -t105 ^ 2 + t107 ^ 2, -t105 * t547 + t25, -t512 + (-qJD(6) - t547) * t107, t47, -t16 * t547 - t31 * t107 - g(1) * t119 - g(2) * (t227 * t409 + t664) - g(3) * (-t218 * t404 + t280) + t2, t472 * t547 + t31 * t105 + g(1) * t120 - g(2) * (-t227 * t404 + t663) - g(3) * (-t218 * t409 - t594) - t1;];
tau_reg  = t3;
