% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x38]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRR8_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 05:06:45
% EndTime: 2019-03-10 05:07:29
% DurationCPUTime: 18.19s
% Computational Cost: add. (33087->706), mult. (96471->1014), div. (0->0), fcn. (82277->14), ass. (0->333)
t344 = cos(pkin(7));
t353 = cos(qJ(3));
t354 = cos(qJ(2));
t491 = t353 * t354;
t348 = sin(qJ(3));
t349 = sin(qJ(2));
t494 = t348 * t349;
t378 = -t344 * t494 + t491;
t343 = sin(pkin(6));
t473 = qJD(1) * t343;
t281 = t378 * t473;
t342 = sin(pkin(7));
t468 = qJD(3) * t353;
t444 = t342 * t468;
t400 = -t281 + t444;
t508 = cos(pkin(6));
t450 = pkin(1) * t508;
t421 = t354 * t450;
t326 = qJD(1) * t421;
t409 = t343 * (-pkin(10) * t344 - pkin(9));
t381 = t349 * t409;
t262 = qJD(1) * t381 + t326;
t422 = t349 * t450;
t360 = t354 * t409 - t422;
t263 = t360 * qJD(1);
t517 = pkin(10) * t342;
t370 = t343 * (pkin(2) * t349 - t354 * t517);
t292 = qJD(1) * t370;
t496 = t344 * t348;
t499 = t342 * t348;
t329 = pkin(10) * t499;
t495 = t344 * t353;
t532 = pkin(2) * t495 - t329;
t563 = t532 * qJD(3) - t353 * t262 - t263 * t496 - t292 * t499;
t195 = -t263 * t342 + t344 * t292;
t492 = t349 * t353;
t493 = t348 * t354;
t380 = t344 * t492 + t493;
t280 = t380 * t473;
t562 = pkin(3) * t280 - pkin(11) * t281 + t195 - (pkin(3) * t348 - pkin(11) * t353) * t342 * qJD(3);
t448 = t349 * t473;
t420 = t342 * t448;
t561 = pkin(11) * t420 - t563;
t447 = t354 * t473;
t417 = t344 * t447;
t311 = t353 * t417;
t434 = t508 * qJD(1);
t384 = t434 + qJD(2);
t371 = t342 * t384;
t419 = t348 * t448;
t225 = -t353 * t371 - t311 + t419;
t221 = qJD(4) + t225;
t560 = qJD(5) + t221;
t347 = sin(qJ(4));
t352 = cos(qJ(4));
t303 = -t352 * t344 + t347 * t499;
t479 = -qJD(4) * t303 - t347 * t420 + t352 * t400;
t304 = t344 * t347 + t352 * t499;
t478 = qJD(4) * t304 + t347 * t400 + t352 * t420;
t469 = qJD(3) * t348;
t445 = t342 * t469;
t541 = t280 - t445;
t350 = cos(qJ(6));
t462 = qJD(6) * t350;
t379 = t344 * t493 + t492;
t367 = t379 * t343;
t227 = qJD(1) * t367 + t348 * t371;
t283 = t342 * t447 - t344 * t384 - qJD(3);
t182 = -t347 * t227 - t283 * t352;
t183 = t227 * t352 - t283 * t347;
t346 = sin(qJ(5));
t351 = cos(qJ(5));
t127 = -t351 * t182 + t183 * t346;
t544 = t127 * t350;
t558 = t462 + t544;
t556 = t562 * t352;
t498 = t342 * t353;
t475 = pkin(2) * t496 + pkin(10) * t498;
t296 = pkin(11) * t344 + t475;
t297 = (-pkin(3) * t353 - pkin(11) * t348 - pkin(2)) * t342;
t466 = qJD(4) * t352;
t467 = qJD(4) * t347;
t555 = t296 * t467 - t297 * t466 + t347 * t562 + t561 * t352;
t477 = t352 * t296 + t347 * t297;
t546 = t541 * pkin(4) + t479 * pkin(12) + qJD(4) * t477 - t347 * t561 + t556;
t545 = -pkin(12) * t478 - t555;
t519 = pkin(11) + pkin(12);
t449 = qJD(4) * t519;
t497 = t343 * t354;
t365 = pkin(9) * t497 + t422;
t215 = t365 * qJD(1) + (t371 + t417) * pkin(10);
t361 = pkin(2) * t508 + t381;
t224 = qJD(2) * pkin(2) + qJD(1) * t361 + t326;
t288 = (-pkin(2) * t354 - t349 * t517 - pkin(1)) * t343;
t274 = qJD(1) * t288;
t145 = -t348 * t215 + (t224 * t344 + t274 * t342) * t353;
t170 = pkin(3) * t227 + pkin(11) * t225;
t488 = t352 * t145 + t347 * t170;
t503 = t225 * t347;
t554 = pkin(12) * t503 + t347 * t449 + t488;
t169 = t352 * t170;
t553 = pkin(4) * t227 - t145 * t347 + t169 + (pkin(12) * t225 + t449) * t352;
t443 = t344 * t469;
t552 = pkin(2) * t443 + pkin(10) * t444 - t348 * t262 + t263 * t495;
t345 = sin(qJ(6));
t389 = t182 * t346 + t351 * t183;
t101 = t345 * t560 + t350 * t389;
t520 = qJD(2) * t380 + qJD(3) * t379;
t356 = t520 * t343;
t366 = qJD(3) * t371;
t363 = t348 * t366;
t185 = qJD(1) * t356 + t363;
t463 = qJD(6) * t345;
t460 = qJD(1) * qJD(2);
t439 = t343 * t460;
t415 = t354 * t439;
t470 = qJD(2) * t344;
t184 = qJD(3) * t311 + (-qJD(3) - t470) * t419 + (t366 + t415) * t353;
t416 = t349 * t439;
t385 = t342 * t416;
t112 = t352 * t184 - t227 * t467 - t283 * t466 + t347 * t385;
t113 = qJD(4) * t183 + t184 * t347 - t352 * t385;
t464 = qJD(5) * t351;
t465 = qJD(5) * t346;
t51 = t351 * t112 - t346 * t113 + t182 * t464 - t183 * t465;
t37 = t345 * t185 + t350 * t51 - t389 * t463 + t462 * t560;
t35 = t37 * t345;
t551 = t101 * t558 + t35;
t461 = -qJD(6) - t127;
t52 = qJD(5) * t389 + t112 * t346 + t351 * t113;
t510 = t345 * t52 - t461 * t462;
t550 = -t101 * t389 - t461 * t544 + t510;
t50 = t350 * t52;
t542 = t461 * t345;
t99 = t345 * t389 - t350 * t560;
t549 = t389 * t99 - t461 * t542 + t50;
t435 = -t350 * t185 + t345 * t51;
t38 = qJD(6) * t101 + t435;
t548 = t101 * t542 - t345 * t38 + t37 * t350 - t558 * t99;
t174 = -t224 * t342 + t344 * t274;
t118 = pkin(3) * t225 - pkin(11) * t227 + t174;
t146 = t353 * t215 + t224 * t496 + t274 * t499;
t124 = -pkin(11) * t283 + t146;
t74 = t118 * t347 + t124 * t352;
t63 = pkin(12) * t182 + t74;
t512 = t346 * t63;
t73 = t352 * t118 - t124 * t347;
t62 = -pkin(12) * t183 + t73;
t54 = pkin(4) * t221 + t62;
t26 = t351 * t54 - t512;
t24 = -pkin(5) * t560 - t26;
t547 = t127 * t24;
t543 = t389 * t127;
t222 = t351 * t303 + t304 * t346;
t485 = -qJD(5) * t222 - t346 * t478 + t351 * t479;
t223 = -t303 * t346 + t304 * t351;
t484 = qJD(5) * t223 + t346 * t479 + t351 * t478;
t312 = t346 * t347 - t351 * t352;
t481 = t560 * t312;
t313 = t346 * t352 + t347 * t351;
t480 = t560 * t313;
t476 = -(-pkin(3) * t448 - t292 * t353) * t342 + t552;
t540 = -t127 ^ 2 + t389 ^ 2;
t78 = pkin(5) * t389 + pkin(13) * t127;
t539 = t127 * t560 + t51;
t402 = qJD(2) * t434;
t382 = pkin(1) * t402;
t321 = t354 * t382;
t374 = qJD(2) * t381;
t243 = qJD(1) * t374 + t321;
t265 = t360 * qJD(2);
t244 = qJD(1) * t265;
t293 = qJD(2) * t370;
t284 = qJD(1) * t293;
t442 = t344 * t468;
t88 = -t215 * t469 + t224 * t442 + t353 * t243 + t244 * t496 + t274 * t444 + t284 * t499;
t86 = pkin(11) * t385 + t88;
t187 = -t244 * t342 + t344 * t284;
t96 = pkin(3) * t185 - pkin(11) * t184 + t187;
t31 = -qJD(4) * t74 - t347 * t86 + t352 * t96;
t17 = pkin(4) * t185 - pkin(12) * t112 + t31;
t30 = t118 * t466 - t124 * t467 + t347 * t96 + t352 * t86;
t19 = -pkin(12) * t113 + t30;
t436 = -t346 * t17 - t351 * t19 - t54 * t464 + t63 * t465;
t123 = pkin(3) * t283 - t145;
t90 = -pkin(4) * t182 + t123;
t538 = t127 * t90 + t436;
t535 = t461 * t389;
t412 = -t146 + (t467 + t503) * pkin(4);
t261 = t421 + t361;
t190 = -t261 * t342 + t344 * t288;
t437 = t508 * t342;
t530 = t344 * t491 - t494;
t252 = -t343 * t530 - t353 * t437;
t253 = t348 * t437 + t367;
t143 = pkin(3) * t252 - pkin(11) * t253 + t190;
t302 = t342 * t497 - t344 * t508;
t246 = (t344 * t497 + t437) * pkin(10) + t365;
t452 = t353 * t246 + t261 * t496 + t288 * t499;
t151 = -pkin(11) * t302 + t452;
t487 = t347 * t143 + t352 * t151;
t428 = -t296 * t347 + t352 * t297;
t180 = -pkin(4) * t498 - pkin(12) * t304 + t428;
t188 = -pkin(12) * t303 + t477;
t483 = t346 * t180 + t351 * t188;
t323 = t519 * t347;
t324 = t519 * t352;
t386 = -t323 * t351 - t324 * t346;
t534 = -qJD(5) * t386 + t346 * t553 + t351 * t554;
t277 = -t323 * t346 + t324 * t351;
t533 = -qJD(5) * t277 + t346 * t554 - t351 * t553;
t482 = pkin(4) * t478 + t476;
t531 = -t180 * t464 + t188 * t465 + t346 * t546 - t545 * t351;
t511 = t351 * t63;
t27 = t346 * t54 + t511;
t7 = -qJD(5) * t27 + t351 * t17 - t19 * t346;
t528 = -t389 * t90 + t7;
t25 = pkin(13) * t560 + t27;
t47 = pkin(5) * t127 - pkin(13) * t389 + t90;
t396 = t25 * t345 - t350 * t47;
t5 = -pkin(5) * t185 - t7;
t526 = t24 * t463 - t5 * t350 + t389 * t396;
t11 = t25 * t350 + t345 * t47;
t525 = t11 * t389 + t24 * t462 + t5 * t345;
t523 = t389 * t560 - t52;
t522 = -t348 * t246 + t353 * (t261 * t344 + t288 * t342);
t408 = qJD(3) * t437;
t194 = t353 * t408 + (t378 * qJD(2) + qJD(3) * t530) * t343;
t198 = t253 * t347 + t302 * t352;
t471 = qJD(2) * t343;
t446 = t349 * t471;
t418 = t342 * t446;
t136 = -qJD(4) * t198 + t194 * t352 + t347 * t418;
t193 = t348 * t408 + t356;
t196 = -t265 * t342 + t344 * t293;
t104 = pkin(3) * t193 - pkin(11) * t194 + t196;
t327 = qJD(2) * t421;
t264 = t327 + t374;
t364 = -t246 * t469 + t261 * t442 + t353 * t264 + t265 * t496 + t288 * t444 + t293 * t499;
t92 = pkin(11) * t418 + t364;
t359 = -qJD(4) * t487 + t352 * t104 - t347 * t92;
t23 = pkin(4) * t193 - pkin(12) * t136 + t359;
t199 = t253 * t352 - t302 * t347;
t135 = qJD(4) * t199 + t194 * t347 - t352 * t418;
t375 = t347 * t104 + t143 * t466 - t151 * t467 + t352 * t92;
t29 = -pkin(12) * t135 + t375;
t429 = t352 * t143 - t151 * t347;
t69 = pkin(4) * t252 - pkin(12) * t199 + t429;
t72 = -pkin(12) * t198 + t487;
t392 = t346 * t69 + t351 * t72;
t521 = -qJD(5) * t392 + t23 * t351 - t29 * t346;
t89 = -t215 * t468 - t224 * t443 - t348 * t243 + t244 * t495 - t274 * t445 + t284 * t498;
t87 = -pkin(3) * t385 - t89;
t58 = pkin(4) * t113 + t87;
t13 = pkin(5) * t52 - pkin(13) * t51 + t58;
t4 = pkin(13) * t185 - t436;
t1 = -qJD(6) * t396 + t13 * t345 + t350 * t4;
t355 = qJD(1) ^ 2;
t515 = pkin(5) * t541 + t483 * qJD(5) + t545 * t346 + t546 * t351;
t509 = pkin(5) * t227 - t533;
t505 = t182 * t221;
t504 = t183 * t221;
t502 = t313 * t345;
t501 = t313 * t350;
t339 = t343 ^ 2;
t500 = t339 * t355;
t200 = t223 * t345 + t350 * t498;
t490 = -qJD(6) * t200 - t345 * t541 + t350 * t485;
t454 = t345 * t498;
t489 = -qJD(6) * t454 + t223 * t462 + t345 * t485 + t350 * t541;
t474 = t349 ^ 2 - t354 ^ 2;
t472 = qJD(2) * t342 ^ 2;
t456 = t185 * t498;
t455 = t354 * t500;
t337 = -pkin(4) * t352 - pkin(3);
t440 = t339 * t460;
t335 = pkin(4) * t346 + pkin(13);
t433 = pkin(4) * t183 + qJD(6) * t335 + t78;
t431 = -t350 * t227 + t345 * t481;
t430 = t227 * t345 + t350 * t481;
t427 = t221 * t352;
t424 = 0.2e1 * t440;
t423 = -t246 * t468 - t261 * t443 - t348 * t264 - t288 * t445;
t32 = t346 * t62 + t511;
t414 = pkin(4) * t465 - t32;
t33 = t351 * t62 - t512;
t413 = -pkin(4) * t464 + t33;
t122 = -pkin(13) * t498 + t483;
t411 = -pkin(5) * t484 + pkin(13) * t485 + qJD(6) * t122 - t482;
t295 = t329 + (-pkin(2) * t353 - pkin(3)) * t344;
t231 = pkin(4) * t303 + t295;
t152 = pkin(5) * t222 - pkin(13) * t223 + t231;
t410 = pkin(13) * t541 - qJD(6) * t152 + t531;
t407 = t343 * t355 * t508;
t406 = -0.2e1 * pkin(1) * t440;
t404 = -pkin(5) * t480 - pkin(13) * t481 + qJD(6) * t277 - t412;
t241 = pkin(5) * t312 - pkin(13) * t313 + t337;
t403 = pkin(13) * t227 - qJD(6) * t241 + t534;
t398 = -t335 * t52 + t547;
t40 = pkin(13) * t252 + t392;
t150 = pkin(3) * t302 - t522;
t105 = pkin(4) * t198 + t150;
t153 = t351 * t198 + t199 * t346;
t154 = -t198 * t346 + t199 * t351;
t57 = pkin(5) * t153 - pkin(13) * t154 + t105;
t395 = t345 * t57 + t350 * t40;
t394 = -t345 * t40 + t350 * t57;
t393 = -t346 * t72 + t351 * t69;
t116 = t154 * t350 + t252 * t345;
t115 = t154 * t345 - t252 * t350;
t390 = t180 * t351 - t188 * t346;
t383 = 0.2e1 * t434 + qJD(2);
t377 = t346 * t23 + t351 * t29 + t69 * t464 - t465 * t72;
t376 = -pkin(11) * t185 + t123 * t221;
t369 = t313 * t462 - t431;
t368 = -t313 * t463 - t430;
t2 = -qJD(6) * t11 + t350 * t13 - t345 * t4;
t357 = t384 * t365;
t93 = -t265 * t495 + (-pkin(3) * t446 - t293 * t353) * t342 - t423;
t65 = pkin(4) * t135 + t93;
t336 = -pkin(4) * t351 - pkin(5);
t201 = t223 * t350 - t454;
t163 = t185 * t252;
t121 = pkin(5) * t498 - t390;
t60 = qJD(5) * t154 + t351 * t135 + t136 * t346;
t59 = -qJD(5) * t153 - t135 * t346 + t136 * t351;
t42 = qJD(6) * t116 - t193 * t350 + t345 * t59;
t41 = -qJD(6) * t115 + t193 * t345 + t350 * t59;
t39 = -pkin(5) * t252 - t393;
t14 = pkin(5) * t60 - pkin(13) * t59 + t65;
t9 = -pkin(5) * t193 - t521;
t8 = pkin(13) * t193 + t377;
t3 = [0, 0, 0, t349 * t354 * t424, -t474 * t424, t383 * t354 * t471, -t383 * t446, 0, -qJD(2) * t357 + t349 * t406 - t365 * t402, t354 * t406 - (-pkin(9) * t446 + t327) * t384 - (-pkin(9) * t416 + t321) * t508, t184 * t253 + t194 * t227, -t184 * t252 - t185 * t253 - t193 * t227 - t194 * t225, -t184 * t302 - t194 * t283 + (qJD(1) * t253 + t227) * t418, t185 * t302 + t193 * t283 + (-qJD(1) * t252 - t225) * t418 (-qJD(1) * t302 - t283) * t418 -((t265 * t344 + t293 * t342) * t353 + t423) * t283 - t89 * t302 + t196 * t225 + t190 * t185 + t187 * t252 + t174 * t193 + (qJD(1) * t522 + t145) * t418, t364 * t283 + t88 * t302 + t196 * t227 + t190 * t184 + t187 * t253 + t174 * t194 + (-qJD(1) * t452 - t146) * t418, t112 * t199 + t136 * t183, -t112 * t198 - t113 * t199 - t135 * t183 + t136 * t182, t112 * t252 + t136 * t221 + t183 * t193 + t185 * t199, -t113 * t252 - t135 * t221 + t182 * t193 - t185 * t198, t193 * t221 + t163, t150 * t113 + t123 * t135 - t93 * t182 + t185 * t429 + t73 * t193 + t87 * t198 + t221 * t359 + t31 * t252, t150 * t112 + t123 * t136 + t93 * t183 - t185 * t487 - t74 * t193 + t87 * t199 - t221 * t375 - t30 * t252, t154 * t51 + t389 * t59, -t127 * t59 - t153 * t51 - t154 * t52 - t389 * t60, t154 * t185 + t193 * t389 + t252 * t51 + t560 * t59, -t127 * t193 - t153 * t185 - t252 * t52 - t560 * t60, t193 * t560 + t163, t105 * t52 + t65 * t127 + t58 * t153 + t393 * t185 + t26 * t193 + t7 * t252 + t521 * t560 + t90 * t60, t105 * t51 + t58 * t154 - t185 * t392 - t27 * t193 + t252 * t436 - t377 * t560 + t389 * t65 + t90 * t59, t101 * t41 + t116 * t37, -t101 * t42 - t115 * t37 - t116 * t38 - t41 * t99, t101 * t60 + t116 * t52 + t153 * t37 - t41 * t461, -t115 * t52 - t153 * t38 + t42 * t461 - t60 * t99, t153 * t52 - t461 * t60 -(-qJD(6) * t395 + t14 * t350 - t345 * t8) * t461 + t394 * t52 + t2 * t153 - t396 * t60 + t9 * t99 + t39 * t38 + t5 * t115 + t24 * t42 (qJD(6) * t394 + t14 * t345 + t350 * t8) * t461 - t395 * t52 - t1 * t153 - t11 * t60 + t9 * t101 + t39 * t37 + t5 * t116 + t24 * t41; 0, 0, 0, -t349 * t455, t474 * t500, -t354 * t407, t349 * t407, 0, -pkin(9) * t415 + qJD(1) * t357 + (pkin(1) * t500 - t382) * t349, -t321 + pkin(1) * t455 + (-pkin(9) * t448 + t326) * t434 + t326 * qJD(2), t184 * t499 + t227 * t400, t225 * t281 + t227 * t280 + (t184 * t353 - t185 * t348 + (-t225 * t353 - t227 * t348) * qJD(3)) * t342, t184 * t344 - t400 * t283 + (-t227 * t342 + t348 * t472) * t448, -t185 * t344 - t541 * t283 + (t225 * t342 + t353 * t472) * t448 (t283 + t470) * t420, -t174 * t280 - t195 * t225 + t89 * t344 + t552 * t283 + (t174 * t469 - pkin(2) * t185 + (t283 * t292 - t187) * t353 + (qJD(2) * t532 - t145) * t448) * t342, -t174 * t281 - t195 * t227 - t88 * t344 + t563 * t283 + (t174 * t468 - pkin(2) * t184 + t187 * t348 + (-qJD(2) * t475 + t146) * t448) * t342, t112 * t304 + t183 * t479, -t112 * t303 - t113 * t304 + t182 * t479 - t183 * t478, -t112 * t498 - t183 * t541 + t185 * t304 + t221 * t479, t113 * t498 - t182 * t541 - t185 * t303 - t221 * t478, -t221 * t541 - t456, t428 * t185 + t295 * t113 + t87 * t303 - t73 * t280 + (-t31 * t353 + t469 * t73) * t342 + (-t296 * t466 + (-qJD(4) * t297 + t561) * t347 - t556) * t221 - t476 * t182 + t478 * t123, -t477 * t185 + t295 * t112 + t87 * t304 + t74 * t280 + (t30 * t353 - t469 * t74) * t342 + t555 * t221 + t476 * t183 + t479 * t123, t223 * t51 + t389 * t485, -t127 * t485 - t222 * t51 - t223 * t52 - t389 * t484, t185 * t223 - t389 * t541 + t485 * t560 - t498 * t51, t127 * t541 - t185 * t222 - t484 * t560 + t498 * t52, -t541 * t560 - t456, t390 * t185 - t7 * t498 + t231 * t52 + t58 * t222 + t484 * t90 - t541 * t26 + ((-qJD(5) * t188 - t546) * t351 + (-qJD(5) * t180 - t545) * t346) * t560 + t482 * t127, -t483 * t185 + t58 * t223 + t231 * t51 + t27 * t541 + t482 * t389 - t436 * t498 + t485 * t90 + t531 * t560, t101 * t490 + t201 * t37, -t101 * t489 - t200 * t37 - t201 * t38 - t490 * t99, t101 * t484 + t201 * t52 + t222 * t37 - t461 * t490, -t200 * t52 - t222 * t38 + t461 * t489 - t484 * t99, t222 * t52 - t461 * t484 (-t122 * t345 + t152 * t350) * t52 + t2 * t222 + t121 * t38 + t5 * t200 + t515 * t99 + t489 * t24 - (t345 * t410 - t350 * t411) * t461 - t484 * t396 -(t122 * t350 + t152 * t345) * t52 - t1 * t222 + t121 * t37 + t5 * t201 + t490 * t24 - (t345 * t411 + t350 * t410) * t461 - t484 * t11 + t515 * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227 * t225, -t225 ^ 2 + t227 ^ 2, -t225 * t283 + t184, -t227 * t283 - t473 * t520 - t363, t385, -t146 * t283 - t174 * t227 + t89, -t145 * t283 + t174 * t225 - t88, t112 * t347 + t183 * t427 (t112 + t505) * t352 + (-t113 - t504) * t347, -t183 * t227 + t347 * t185 + t221 * t427, -t221 ^ 2 * t347 - t182 * t227 + t352 * t185, -t221 * t227, -pkin(3) * t113 + t146 * t182 - t73 * t227 - t87 * t352 + (-pkin(11) * t466 - t169) * t221 + (t145 * t221 + t376) * t347, -pkin(3) * t112 - t146 * t183 + t74 * t227 + t87 * t347 + (pkin(11) * t467 + t488) * t221 + t376 * t352, t313 * t51 - t389 * t481, t127 * t481 - t312 * t51 - t313 * t52 - t389 * t480, t185 * t313 - t227 * t389 - t481 * t560, t127 * t227 - t185 * t312 - t480 * t560, -t560 * t227, t412 * t127 + t185 * t386 - t26 * t227 + t58 * t312 + t337 * t52 + t480 * t90 + t533 * t560, -t277 * t185 + t27 * t227 + t58 * t313 + t337 * t51 + t412 * t389 - t481 * t90 + t534 * t560, t101 * t368 + t37 * t501, t430 * t99 + t431 * t101 + (-t35 - t350 * t38 + (-t101 * t350 + t345 * t99) * qJD(6)) * t313, t101 * t480 + t312 * t37 - t368 * t461 + t501 * t52, -t312 * t38 + t369 * t461 - t480 * t99 - t502 * t52, t312 * t52 - t461 * t480 (t241 * t350 - t277 * t345) * t52 + t2 * t312 - t386 * t38 + t5 * t502 + t509 * t99 - (t345 * t403 - t350 * t404) * t461 - t480 * t396 + t369 * t24 -(t241 * t345 + t277 * t350) * t52 - t1 * t312 - t386 * t37 + t5 * t501 - (t345 * t404 + t350 * t403) * t461 - t480 * t11 + t509 * t101 + t368 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183 * t182, -t182 ^ 2 + t183 ^ 2, t112 - t505, -t113 + t504, t185, -t123 * t183 + t221 * t74 + t31, -t123 * t182 + t221 * t73 - t30, t543, t540, t539, t523, t185, t560 * t32 + (-t127 * t183 + t185 * t351 - t465 * t560) * pkin(4) + t528, t560 * t33 + (-t183 * t389 - t185 * t346 - t464 * t560) * pkin(4) + t538, t551, t548, t550, t549, t535, t336 * t38 + t414 * t99 + t398 * t345 - (t345 * t413 - t350 * t433) * t461 + t526, t336 * t37 + t398 * t350 + t414 * t101 - (t345 * t433 + t350 * t413) * t461 + t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, t540, t539, t523, t185, t27 * t560 + t528, t26 * t560 + t538, t551, t548, t550, t549, t535, -pkin(5) * t38 + (-t26 * t345 + t350 * t78) * t461 - t27 * t99 + t345 * t547 - t510 * pkin(13) + t526, -pkin(5) * t37 - (t26 * t350 + t345 * t78) * t461 - t27 * t101 + t24 * t544 + (-t461 * t463 - t50) * pkin(13) + t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101 * t99, t101 ^ 2 - t99 ^ 2, -t461 * t99 + t37, -t435 + (-qJD(6) - t461) * t101, t52, -t101 * t24 - t11 * t461 + t2, t24 * t99 + t396 * t461 - t1;];
tauc_reg  = t3;
