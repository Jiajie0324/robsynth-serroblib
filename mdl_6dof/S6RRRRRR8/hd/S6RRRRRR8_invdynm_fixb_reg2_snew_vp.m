% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 14:16
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRRR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_invdynm_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 14:10:22
% EndTime: 2019-05-08 14:15:50
% DurationCPUTime: 324.54s
% Computational Cost: add. (4003317->1353), mult. (9817713->2154), div. (0->0), fcn. (8433068->16), ass. (0->978)
t2491 = sin(pkin(7));
t2493 = cos(pkin(7));
t2494 = cos(pkin(6));
t2765 = qJD(1) * t2494;
t2484 = qJD(2) + t2765;
t2483 = t2484 ^ 2;
t2492 = sin(pkin(6));
t2499 = sin(qJ(2));
t2505 = cos(qJ(2));
t2500 = sin(qJ(1));
t2506 = cos(qJ(1));
t2480 = t2500 * g(1) - t2506 * g(2);
t2591 = qJDD(1) * pkin(1) + t2480;
t2578 = t2494 * t2591;
t2769 = pkin(10) * t2499;
t2592 = -pkin(2) * t2505 - t2491 * t2769;
t2579 = t2592 * t2492;
t2481 = g(1) * t2506 + t2500 * g(2);
t2780 = qJD(1) ^ 2;
t2768 = t2780 * pkin(1);
t2581 = t2481 + t2768;
t2694 = qJDD(1) * t2494 + qJDD(2);
t2681 = t2694 * pkin(2);
t2770 = pkin(10) * t2493;
t2713 = -pkin(9) - t2770;
t2717 = qJDD(1) * t2499;
t2727 = t2493 * t2505;
t2771 = pkin(10) * t2491;
t2772 = pkin(9) * t2494;
t2513 = t2483 * t2771 + t2499 * t2581 + t2505 * t2578 + t2681 + (-t2505 * g(3) + t2713 * t2717 + ((-qJD(2) + t2484) * pkin(10) * t2727 + qJD(1) * (-t2499 * t2579 + t2505 * t2772)) * qJD(1)) * t2492;
t2732 = t2492 * t2499;
t2711 = qJD(1) * t2732;
t2482 = qJD(2) * t2711;
t2489 = t2499 ^ 2;
t2490 = t2505 ^ 2;
t2718 = t2489 + t2490;
t2721 = qJD(2) + t2484;
t2736 = t2484 * t2499;
t2766 = qJD(1) * t2492;
t2767 = t2494 * g(3);
t2515 = t2482 * pkin(2) - t2767 + ((-pkin(1) + t2592) * qJDD(1) + (pkin(2) * t2736 - pkin(9) * t2766 + (-t2721 * t2505 * t2491 - t2493 * t2718 * t2766) * pkin(10)) * qJD(1) - t2480) * t2492;
t2322 = t2491 * t2513 - t2493 * t2515;
t2498 = sin(qJ(3));
t2504 = cos(qJ(3));
t2731 = t2492 * t2505;
t2710 = qJD(1) * t2731;
t2691 = t2493 * t2710;
t2733 = t2491 * t2504;
t2443 = -t2484 * t2733 + t2498 * t2711 - t2504 * t2691;
t2716 = qJDD(1) * t2505;
t2682 = t2492 * t2716 - t2482;
t2525 = t2491 * t2694 + t2493 * t2682;
t2764 = qJD(1) * t2505;
t2583 = qJD(2) * t2764 + t2717;
t2547 = t2583 * t2492;
t2518 = t2498 * t2525 + t2504 * t2547;
t2401 = -t2443 * qJD(3) + t2518;
t2692 = t2491 * t2710;
t2730 = t2493 * t2484;
t2458 = -qJD(3) + t2692 - t2730;
t2425 = t2443 * t2458;
t2367 = t2425 + t2401;
t2803 = -t2367 * pkin(11) - t2322;
t2497 = sin(qJ(4));
t2734 = t2491 * t2498;
t2445 = t2484 * t2734 + (t2498 * t2727 + t2499 * t2504) * t2766;
t2503 = cos(qJ(4));
t2422 = t2445 * t2503 - t2458 * t2497;
t2696 = t2497 * t2445 + t2458 * t2503;
t2382 = t2422 * t2696;
t2527 = t2498 * t2547 - t2504 * t2525;
t2400 = -t2445 * qJD(3) - t2527;
t2522 = qJDD(4) - t2400;
t2791 = -t2382 + t2522;
t2800 = t2497 * t2791;
t2799 = t2503 * t2791;
t2495 = sin(qJ(6));
t2496 = sin(qJ(5));
t2502 = cos(qJ(5));
t2380 = t2502 * t2422 - t2496 * t2696;
t2539 = t2491 * t2682 - t2493 * t2694 - qJDD(3);
t2343 = -qJD(4) * t2696 + t2503 * t2401 - t2497 * t2539;
t2524 = -t2497 * t2401 - t2503 * t2539;
t2520 = -t2422 * qJD(4) + t2524;
t2698 = t2496 * t2343 - t2502 * t2520;
t2252 = -t2380 * qJD(5) - t2698;
t2250 = qJDD(6) - t2252;
t2501 = cos(qJ(6));
t2440 = qJD(4) + t2443;
t2540 = qJD(5) + t2440;
t2349 = t2380 * t2495 - t2501 * t2540;
t2351 = t2501 * t2380 + t2495 * t2540;
t2283 = t2351 * t2349;
t2785 = t2250 - t2283;
t2796 = t2495 * t2785;
t2378 = t2422 * t2496 + t2502 * t2696;
t2321 = t2380 * t2378;
t2398 = qJDD(5) + t2522;
t2784 = -t2321 + t2398;
t2795 = t2496 * t2784;
t2794 = t2501 * t2785;
t2793 = t2502 * t2784;
t2253 = -t2378 * qJD(5) + t2502 * t2343 + t2496 * t2520;
t2354 = t2540 * t2378;
t2792 = -t2354 + t2253;
t2790 = t2491 * t2515 + t2493 * t2513;
t2538 = t2540 ^ 2;
t2693 = t2696 ^ 2;
t2488 = t2492 ^ 2;
t2788 = t2488 * t2499;
t2744 = t2445 * t2443;
t2526 = -t2539 - t2744;
t2787 = t2498 * t2526;
t2786 = t2504 * t2526;
t2415 = pkin(3) * t2443 - pkin(11) * t2445;
t2485 = g(3) * t2732;
t2773 = pkin(9) * t2492;
t2548 = qJDD(1) * t2773 - t2481;
t2726 = t2494 * t2499;
t2375 = t2505 * t2548 + t2499 * t2578 - t2485 - t2483 * pkin(2) + t2525 * pkin(10) + (-pkin(1) * t2764 + (t2730 * t2769 + (pkin(9) * t2726 + t2505 * t2579) * qJD(1)) * t2492) * qJD(1);
t2722 = t2504 * t2375;
t2510 = -pkin(11) * t2539 - t2443 * t2415 + t2498 * t2790 + t2722;
t2779 = t2458 ^ 2;
t2509 = -pkin(3) * t2779 + t2510;
t2741 = t2458 * t2445;
t2697 = -t2400 - t2741;
t2511 = t2697 * pkin(3) + t2803;
t2151 = t2497 * t2511 + t2503 * t2509;
t2388 = pkin(4) * t2440 - pkin(12) * t2422;
t2100 = -pkin(4) * t2693 + pkin(12) * t2520 - t2440 * t2388 + t2151;
t2150 = t2497 * t2509 - t2503 * t2511;
t2394 = t2440 * t2696;
t2312 = t2394 + t2343;
t2508 = pkin(4) * t2791 - pkin(12) * t2312 - t2150;
t2011 = t2502 * t2100 + t2496 * t2508;
t2319 = pkin(5) * t2378 - pkin(13) * t2380;
t2001 = -pkin(5) * t2538 + t2398 * pkin(13) - t2378 * t2319 + t2011;
t2266 = t2498 * t2375 - t2504 * t2790;
t2242 = t2539 * pkin(3) - t2779 * pkin(11) + t2445 * t2415 + t2266;
t2176 = -t2520 * pkin(4) - t2693 * pkin(12) + t2422 * t2388 + t2242;
t2532 = t2540 * t2380;
t2055 = -t2792 * pkin(13) + (-t2252 + t2532) * pkin(5) + t2176;
t1941 = t2001 * t2495 - t2501 * t2055;
t1942 = t2001 * t2501 + t2055 * t2495;
t1889 = t2495 * t1941 + t2501 * t1942;
t2311 = -t2394 + t2343;
t2347 = t2349 ^ 2;
t2348 = t2351 ^ 2;
t2374 = qJD(6) + t2378;
t2373 = t2374 ^ 2;
t2376 = t2378 ^ 2;
t2377 = t2380 ^ 2;
t2421 = t2422 ^ 2;
t2439 = t2440 ^ 2;
t2441 = t2443 ^ 2;
t2442 = t2445 ^ 2;
t2778 = pkin(3) * t2498;
t2777 = pkin(3) * t2504;
t2010 = t2100 * t2496 - t2502 * t2508;
t1935 = -t2010 * t2502 + t2011 * t2496;
t2776 = pkin(4) * t1935;
t2214 = -t2380 * t2440 + t2698;
t2217 = t2354 + t2253;
t2114 = -t2214 * t2496 - t2217 * t2502;
t2775 = pkin(4) * t2114;
t2774 = pkin(5) * t2496;
t2763 = t1935 * t2497;
t2762 = t1935 * t2503;
t2761 = t2176 * t2496;
t2760 = t2176 * t2502;
t2190 = t2250 + t2283;
t2759 = t2190 * t2495;
t2758 = t2190 * t2501;
t2757 = t2242 * t2497;
t2756 = t2242 * t2503;
t2278 = t2321 + t2398;
t2755 = t2278 * t2496;
t2754 = t2278 * t2502;
t2753 = t2322 * t2498;
t2752 = t2322 * t2504;
t2330 = t2382 + t2522;
t2751 = t2330 * t2497;
t2750 = t2330 * t2503;
t2749 = t2374 * t2495;
t2748 = t2374 * t2501;
t2389 = t2539 - t2744;
t2747 = t2389 * t2498;
t2746 = t2389 * t2504;
t2745 = t2443 * t2504;
t2541 = t2773 * t2780 + t2591;
t2455 = t2492 * t2541 + t2767;
t2743 = t2455 * t2499;
t2742 = t2455 * t2505;
t2724 = t2499 * t2780;
t2703 = t2505 * t2724;
t2479 = t2488 * t2703;
t2460 = t2479 + t2694;
t2740 = t2460 * t2499;
t2739 = t2460 * t2505;
t2461 = -t2479 + t2694;
t2738 = t2461 * t2499;
t2737 = t2461 * t2505;
t2735 = t2488 * t2780;
t2729 = t2493 * t2498;
t2728 = t2493 * t2504;
t2000 = -t2398 * pkin(5) - pkin(13) * t2538 + t2319 * t2380 + t2010;
t1997 = t2495 * t2000;
t2725 = t2497 * t2422;
t1998 = t2501 * t2000;
t2723 = t2503 * t2422;
t2720 = qJD(3) - t2458;
t2719 = -pkin(5) * t2000 + pkin(13) * t1889;
t2714 = -pkin(5) * t2502 - pkin(4);
t2712 = t2484 * t2766;
t2709 = t2489 * t2735;
t2708 = t2490 * t2735;
t2707 = t2496 * t2283;
t2706 = t2502 * t2283;
t2705 = t2498 * t2321;
t2704 = t2504 * t2321;
t2261 = -t2348 - t2373;
t2128 = -t2261 * t2495 - t2758;
t2627 = -t2253 * t2501 - t2398 * t2495;
t2163 = (qJD(6) + t2374) * t2349 + t2627;
t2702 = pkin(5) * t2163 + pkin(13) * t2128 + t1997;
t2258 = -t2373 - t2347;
t2121 = t2258 * t2501 - t2796;
t2699 = -t2253 * t2495 + t2501 * t2398;
t2198 = -qJD(6) * t2351 + t2699;
t2299 = t2374 * t2351;
t2159 = t2198 - t2299;
t2701 = pkin(5) * t2159 + pkin(13) * t2121 - t1998;
t2700 = -t2484 + t2765;
t1936 = t2010 * t2496 + t2502 * t2011;
t2066 = t2150 * t2497 + t2503 * t2151;
t2695 = -t2480 * t2500 - t2506 * t2481;
t2160 = (-qJD(6) + t2374) * t2351 + t2699;
t2199 = -qJD(6) * t2349 - t2627;
t2298 = t2374 * t2349;
t2162 = t2199 + t2298;
t2071 = t2160 * t2501 + t2162 * t2495;
t2251 = t2347 + t2348;
t2690 = pkin(5) * t2251 + pkin(13) * t2071 + t1889;
t1861 = t1889 * t2496 - t2000 * t2502;
t2689 = pkin(4) * t1861 + t2719;
t2334 = -t2377 - t2538;
t2238 = t2334 * t2502 - t2755;
t2688 = pkin(4) * t2238 - t2011;
t2478 = qJDD(1) * t2506 - t2500 * t2780;
t2687 = -pkin(8) * t2478 - g(3) * t2500;
t2459 = -t2709 - t2483;
t2432 = -t2459 * t2499 - t2737;
t2686 = pkin(9) * t2432 - t2743;
t2465 = -t2483 - t2708;
t2437 = t2465 * t2505 - t2740;
t2685 = pkin(9) * t2437 + t2742;
t2399 = -t2779 - t2441;
t2340 = t2399 * t2504 - t2787;
t2684 = pkin(10) * t2340 + t2752;
t2408 = -t2442 - t2779;
t2346 = -t2408 * t2498 + t2746;
t2683 = pkin(10) * t2346 - t2753;
t2680 = t2497 * t2696;
t2679 = t2503 * t2696;
t1862 = t1889 * t2502 + t2000 * t2496;
t1815 = t1861 * t2503 + t1862 * t2497;
t1816 = -t1861 * t2497 + t1862 * t2503;
t1888 = -t1941 * t2501 + t1942 * t2495;
t2677 = t1816 * t2498 - t1888 * t2504;
t1785 = -t1815 * t2491 + t2493 * t2677;
t1803 = t1816 * t2504 + t1888 * t2498;
t2678 = t1785 * t2505 + t1803 * t2499;
t1883 = t1936 * t2497 + t2762;
t1884 = t1936 * t2503 - t2763;
t2674 = t1884 * t2498 - t2176 * t2504;
t1829 = -t1883 * t2491 + t2493 * t2674;
t1875 = t1884 * t2504 + t2176 * t2498;
t2676 = t1829 * t2505 + t1875 * t2499;
t2040 = t2071 * t2496 + t2251 * t2502;
t2041 = t2071 * t2502 - t2251 * t2496;
t1951 = t2040 * t2503 + t2041 * t2497;
t1952 = -t2040 * t2497 + t2041 * t2503;
t2069 = t2160 * t2495 - t2162 * t2501;
t2664 = t1952 * t2498 - t2069 * t2504;
t1880 = -t1951 * t2491 + t2493 * t2664;
t1918 = t1952 * t2504 + t2069 * t2498;
t2675 = t1880 * t2505 + t1918 * t2499;
t2161 = t2199 - t2298;
t2070 = t2159 * t2501 - t2161 * t2495;
t2282 = t2348 - t2347;
t2044 = t2070 * t2496 - t2282 * t2502;
t2045 = t2070 * t2502 + t2282 * t2496;
t1962 = t2044 * t2503 + t2045 * t2497;
t1963 = -t2044 * t2497 + t2045 * t2503;
t2068 = t2159 * t2495 + t2161 * t2501;
t2662 = t1963 * t2498 - t2068 * t2504;
t1886 = -t1962 * t2491 + t2493 * t2662;
t1925 = t1963 * t2504 + t2068 * t2498;
t2673 = t1886 * t2505 + t1925 * t2499;
t2050 = t2121 * t2496 + t2159 * t2502;
t2051 = t2121 * t2502 - t2159 * t2496;
t1969 = t2050 * t2503 + t2051 * t2497;
t1970 = -t2050 * t2497 + t2051 * t2503;
t2120 = t2258 * t2495 + t2794;
t2660 = t1970 * t2498 - t2120 * t2504;
t1891 = -t1969 * t2491 + t2493 * t2660;
t1934 = t1970 * t2504 + t2120 * t2498;
t2672 = t1891 * t2505 + t1934 * t2499;
t2052 = t2128 * t2496 + t2163 * t2502;
t2053 = t2128 * t2502 - t2163 * t2496;
t1974 = t2052 * t2503 + t2053 * t2497;
t1975 = -t2052 * t2497 + t2053 * t2503;
t2127 = t2261 * t2501 - t2759;
t2659 = t1975 * t2498 - t2127 * t2504;
t1893 = -t1974 * t2491 + t2493 * t2659;
t1937 = t1975 * t2504 + t2127 * t2498;
t2671 = t1893 * t2505 + t1937 * t2499;
t2297 = -t2348 + t2373;
t2139 = -t2297 * t2495 + t2794;
t2059 = t2139 * t2496 - t2162 * t2502;
t2061 = t2139 * t2502 + t2162 * t2496;
t1985 = t2059 * t2503 + t2061 * t2497;
t1987 = -t2059 * t2497 + t2061 * t2503;
t2137 = t2297 * t2501 + t2796;
t2658 = t1987 * t2498 - t2137 * t2504;
t1900 = -t1985 * t2491 + t2493 * t2658;
t1948 = t1987 * t2504 + t2137 * t2498;
t2670 = t1900 * t2505 + t1948 * t2499;
t2296 = t2347 - t2373;
t2140 = t2296 * t2501 - t2759;
t2158 = -t2198 - t2299;
t2060 = t2140 * t2496 + t2158 * t2502;
t2062 = t2140 * t2502 - t2158 * t2496;
t1986 = t2060 * t2503 + t2062 * t2497;
t1988 = -t2060 * t2497 + t2062 * t2503;
t2138 = t2296 * t2495 + t2758;
t2657 = t1988 * t2498 - t2138 * t2504;
t1901 = -t1986 * t2491 + t2493 * t2657;
t1949 = t1988 * t2504 + t2138 * t2498;
t2669 = t1901 * t2505 + t1949 * t2499;
t2153 = -t2198 * t2495 + t2349 * t2748;
t2105 = t2153 * t2496 + t2706;
t2107 = t2153 * t2502 - t2707;
t2020 = t2105 * t2503 + t2107 * t2497;
t2022 = -t2105 * t2497 + t2107 * t2503;
t2152 = -t2501 * t2198 - t2349 * t2749;
t2652 = t2022 * t2498 + t2152 * t2504;
t1930 = -t2020 * t2491 + t2493 * t2652;
t1991 = t2022 * t2504 - t2152 * t2498;
t2668 = t1930 * t2505 + t1991 * t2499;
t2155 = t2199 * t2501 - t2351 * t2749;
t2106 = t2155 * t2496 - t2706;
t2108 = t2155 * t2502 + t2707;
t2021 = t2106 * t2503 + t2108 * t2497;
t2023 = -t2106 * t2497 + t2108 * t2503;
t2154 = t2199 * t2495 + t2351 * t2748;
t2651 = t2023 * t2498 - t2154 * t2504;
t1931 = -t2021 * t2491 + t2493 * t2651;
t1992 = t2023 * t2504 + t2154 * t2498;
t2667 = t1931 * t2505 + t1992 * t2499;
t2116 = -t2214 * t2502 + t2217 * t2496;
t2037 = t2114 * t2503 + t2116 * t2497;
t2039 = -t2114 * t2497 + t2116 * t2503;
t2268 = -t2376 - t2377;
t2647 = t2039 * t2498 - t2268 * t2504;
t1945 = -t2037 * t2491 + t2493 * t2647;
t2008 = t2039 * t2504 + t2268 * t2498;
t2666 = t1945 * t2505 + t2008 * t2499;
t2213 = (0.2e1 * qJD(5) + t2440) * t2380 + t2698;
t2113 = -t2213 * t2496 + t2502 * t2792;
t2115 = -t2213 * t2502 - t2496 * t2792;
t2036 = t2113 * t2503 + t2115 * t2497;
t2038 = -t2113 * t2497 + t2115 * t2503;
t2320 = t2377 - t2376;
t2648 = t2038 * t2498 - t2320 * t2504;
t1947 = -t2036 * t2491 + t2493 * t2648;
t2016 = t2038 * t2504 + t2320 * t2498;
t2665 = t1947 * t2505 + t2016 * t2499;
t2231 = (-t2349 * t2501 + t2351 * t2495) * t2374;
t2143 = t2231 * t2496 - t2250 * t2502;
t2144 = t2231 * t2502 + t2250 * t2496;
t2057 = t2143 * t2503 + t2144 * t2497;
t2058 = -t2143 * t2497 + t2144 * t2503;
t2230 = (-t2349 * t2495 - t2351 * t2501) * t2374;
t2646 = t2058 * t2498 - t2230 * t2504;
t1961 = -t2057 * t2491 + t2493 * t2646;
t2024 = t2058 * t2504 + t2230 * t2498;
t2663 = t1961 * t2505 + t2024 * t2499;
t2065 = -t2150 * t2503 + t2151 * t2497;
t2645 = t2066 * t2498 - t2242 * t2504;
t1966 = -t2065 * t2491 + t2493 * t2645;
t2034 = t2066 * t2504 + t2242 * t2498;
t2661 = t1966 * t2505 + t2034 * t2499;
t2300 = -t2538 - t2376;
t2223 = t2300 * t2496 + t2793;
t2224 = t2300 * t2502 - t2795;
t2124 = t2223 * t2503 + t2224 * t2497;
t2125 = -t2223 * t2497 + t2224 * t2503;
t2642 = t2125 * t2498 - t2213 * t2504;
t2005 = -t2124 * t2491 + t2493 * t2642;
t2075 = t2125 * t2504 + t2213 * t2498;
t2656 = t2005 * t2505 + t2075 * t2499;
t2531 = t2496 * t2354;
t2209 = t2502 * t2252 + t2531;
t2529 = t2502 * t2354;
t2210 = -t2496 * t2252 + t2529;
t2109 = t2209 * t2503 + t2210 * t2497;
t2111 = -t2209 * t2497 + t2210 * t2503;
t2587 = t2111 * t2498 + t2704;
t2014 = -t2109 * t2491 + t2493 * t2587;
t2088 = t2111 * t2504 - t2705;
t2655 = t2014 * t2505 + t2088 * t2499;
t2528 = t2502 * t2532;
t2211 = t2496 * t2253 + t2528;
t2530 = t2496 * t2532;
t2212 = t2502 * t2253 - t2530;
t2110 = t2211 * t2503 + t2212 * t2497;
t2112 = -t2211 * t2497 + t2212 * t2503;
t2586 = t2112 * t2498 - t2704;
t2015 = -t2110 * t2491 + t2493 * t2586;
t2089 = t2112 * t2504 + t2705;
t2654 = t2015 * t2505 + t2089 * t2499;
t2239 = -t2334 * t2496 - t2754;
t2145 = t2238 * t2503 + t2239 * t2497;
t2146 = -t2238 * t2497 + t2239 * t2503;
t2640 = t2146 * t2498 - t2504 * t2792;
t2019 = -t2145 * t2491 + t2493 * t2640;
t2083 = t2146 * t2504 + t2498 * t2792;
t2653 = t2019 * t2505 + t2083 * t2499;
t2353 = -t2377 + t2538;
t2245 = t2353 * t2502 + t2795;
t2247 = -t2353 * t2496 + t2793;
t2166 = t2245 * t2503 + t2247 * t2497;
t2168 = -t2245 * t2497 + t2247 * t2503;
t2638 = t2168 * t2498 - t2217 * t2504;
t2029 = -t2166 * t2491 + t2493 * t2638;
t2084 = t2168 * t2504 + t2217 * t2498;
t2650 = t2029 * t2505 + t2084 * t2499;
t2352 = t2376 - t2538;
t2246 = t2352 * t2496 + t2754;
t2248 = t2352 * t2502 - t2755;
t2167 = t2246 * t2503 + t2248 * t2497;
t2169 = -t2246 * t2497 + t2248 * t2503;
t2637 = t2169 * t2498 + t2214 * t2504;
t2030 = -t2167 * t2491 + t2493 * t2637;
t2085 = t2169 * t2504 - t2214 * t2498;
t2649 = t2030 * t2505 + t2085 * t2499;
t2284 = -t2531 - t2528;
t2285 = -t2529 + t2530;
t2219 = t2284 * t2503 + t2285 * t2497;
t2220 = -t2284 * t2497 + t2285 * t2503;
t2630 = t2220 * t2498 - t2398 * t2504;
t2103 = -t2219 * t2491 + t2493 * t2630;
t2201 = t2220 * t2504 + t2398 * t2498;
t2644 = t2103 * t2505 + t2201 * t2499;
t2310 = (-qJD(4) + t2440) * t2422 + t2524;
t2235 = t2310 * t2497 - t2312 * t2503;
t2237 = t2310 * t2503 + t2312 * t2497;
t2344 = t2693 + t2421;
t2628 = t2237 * t2498 + t2344 * t2504;
t2118 = -t2235 * t2491 + t2493 * t2628;
t2202 = t2237 * t2504 - t2344 * t2498;
t2643 = t2118 * t2505 + t2202 * t2499;
t2395 = t2440 * t2422;
t2309 = -t2395 + t2520;
t2234 = t2309 * t2497 + t2311 * t2503;
t2236 = t2309 * t2503 - t2311 * t2497;
t2381 = t2421 - t2693;
t2629 = t2236 * t2498 - t2381 * t2504;
t2130 = -t2234 * t2491 + t2493 * t2629;
t2207 = t2236 * t2504 + t2381 * t2498;
t2641 = t2130 * t2505 + t2207 * t2499;
t2358 = -t2439 - t2693;
t2271 = t2358 * t2497 + t2799;
t2272 = t2358 * t2503 - t2800;
t2623 = t2272 * t2498 + t2309 * t2504;
t2165 = -t2271 * t2491 + t2493 * t2623;
t2222 = t2272 * t2504 - t2309 * t2498;
t2639 = t2165 * t2505 + t2222 * t2499;
t2533 = t2494 * t2541;
t2577 = t2484 * t2491 + t2691;
t2542 = qJD(1) * t2577;
t2267 = t2722 + (t2493 * (-g(3) * t2731 + t2505 * t2533 + t2681) + t2491 * (-pkin(2) * t2682 - t2455) + (t2493 * (-qJD(2) * t2691 + t2484 * t2577) + t2491 * (-qJD(2) * t2692 - t2542 * t2731)) * pkin(10) + (t2493 * t2581 + (pkin(2) * t2542 + (-pkin(10) * t2491 ^ 2 + t2493 * t2713) * qJDD(1)) * t2492) * t2499) * t2498;
t2624 = -t2266 * t2504 + t2267 * t2498;
t2173 = t2322 * t2491 + t2493 * t2624;
t2200 = t2266 * t2498 + t2267 * t2504;
t2636 = t2173 * t2505 + t2200 * t2499;
t2372 = -t2421 - t2439;
t2275 = t2372 * t2503 - t2751;
t2276 = -t2372 * t2497 - t2750;
t2621 = t2276 * t2498 - t2311 * t2504;
t2175 = -t2275 * t2491 + t2493 * t2621;
t2225 = t2276 * t2504 + t2311 * t2498;
t2635 = t2175 * t2505 + t2225 * t2499;
t2393 = -t2421 + t2439;
t2288 = t2393 * t2503 + t2800;
t2290 = -t2393 * t2497 + t2799;
t2618 = t2290 * t2498 - t2312 * t2504;
t2180 = -t2288 * t2491 + t2493 * t2618;
t2232 = t2290 * t2504 + t2312 * t2498;
t2634 = t2180 * t2505 + t2232 * t2499;
t2392 = t2693 - t2439;
t2289 = t2392 * t2497 + t2750;
t2291 = t2392 * t2503 - t2751;
t2308 = -t2395 - t2520;
t2617 = t2291 * t2498 + t2308 * t2504;
t2181 = -t2289 * t2491 + t2493 * t2617;
t2233 = t2291 * t2504 - t2308 * t2498;
t2633 = t2181 * t2505 + t2233 * t2499;
t2304 = t2440 * t2680 + t2503 * t2520;
t2305 = t2440 * t2679 - t2497 * t2520;
t2588 = t2504 * t2382;
t2537 = t2498 * t2305 + t2588;
t2205 = -t2491 * t2304 + t2493 * t2537;
t2589 = t2498 * t2382;
t2262 = t2504 * t2305 - t2589;
t2632 = t2205 * t2505 + t2262 * t2499;
t2306 = t2343 * t2497 + t2440 * t2723;
t2307 = t2343 * t2503 - t2440 * t2725;
t2536 = t2498 * t2307 - t2588;
t2206 = -t2491 * t2306 + t2493 * t2536;
t2263 = t2504 * t2307 + t2589;
t2631 = t2206 * t2505 + t2263 * t2499;
t2335 = (-t2680 - t2723) * t2440;
t2336 = (-t2679 + t2725) * t2440;
t2519 = t2498 * t2336 - t2504 * t2522;
t2255 = -t2491 * t2335 + t2493 * t2519;
t2301 = t2504 * t2336 + t2498 * t2522;
t2626 = t2255 * t2505 + t2301 * t2499;
t2386 = -t2441 - t2442;
t2368 = -t2425 + t2401;
t2521 = (-qJD(3) - t2458) * t2445 - t2527;
t2610 = -t2368 * t2504 + t2498 * t2521;
t2265 = -t2386 * t2491 + t2493 * t2610;
t2303 = t2368 * t2498 + t2504 * t2521;
t2625 = t2265 * t2505 + t2303 * t2499;
t2416 = t2442 - t2441;
t2363 = t2445 * t2720 + t2527;
t2611 = -t2363 * t2498 + t2367 * t2504;
t2274 = -t2416 * t2491 + t2493 * t2611;
t2302 = -t2363 * t2504 - t2367 * t2498;
t2622 = t2274 * t2505 + t2302 * t2499;
t2606 = t2399 * t2498 + t2786;
t2281 = -t2363 * t2491 + t2493 * t2606;
t2620 = t2281 * t2505 + t2340 * t2499;
t2366 = -t2443 * t2720 + t2518;
t2609 = t2408 * t2504 + t2747;
t2287 = -t2366 * t2491 + t2493 * t2609;
t2619 = t2287 * t2505 + t2346 * t2499;
t2424 = -t2442 + t2779;
t2607 = t2424 * t2504 + t2787;
t2294 = -t2368 * t2491 + t2493 * t2607;
t2356 = -t2424 * t2498 + t2786;
t2616 = t2294 * t2505 + t2356 * t2499;
t2423 = t2441 - t2779;
t2608 = t2423 * t2498 - t2746;
t2295 = -t2491 * t2521 + t2493 * t2608;
t2357 = t2423 * t2504 + t2747;
t2615 = t2295 * t2505 + t2357 * t2499;
t2326 = t2400 * t2728 + (t2445 * t2491 - t2458 * t2729) * t2443;
t2361 = -t2400 * t2498 - t2458 * t2745;
t2614 = t2326 * t2505 + t2361 * t2499;
t2328 = t2401 * t2729 + (-t2443 * t2491 - t2458 * t2728) * t2445;
t2362 = t2401 * t2504 + t2498 * t2741;
t2613 = t2328 * t2505 + t2362 * t2499;
t2580 = t2458 * (t2443 * t2498 + t2445 * t2504);
t2360 = t2491 * t2539 + t2493 * t2580;
t2385 = (-t2445 * t2498 + t2745) * t2458;
t2612 = t2360 * t2505 + t2385 * t2499;
t2534 = t2548 - t2768;
t2430 = t2499 * t2534 + (t2492 * g(3) - t2533) * t2505;
t2431 = t2499 * t2533 + t2505 * t2534 - t2485;
t2605 = -t2430 * t2505 + t2431 * t2499;
t2387 = t2430 * t2499 + t2431 * t2505;
t2469 = t2484 * t2710;
t2450 = t2469 + t2547;
t2468 = t2484 * t2711;
t2453 = -t2468 + t2682;
t2604 = t2450 * t2505 + t2453 * t2499;
t2451 = -t2469 + t2547;
t2452 = t2468 + t2682;
t2603 = -t2451 * t2505 + t2452 * t2499;
t2602 = t2459 * t2505 - t2738;
t2463 = t2483 - t2709;
t2601 = t2463 * t2505 + t2740;
t2600 = t2465 * t2499 + t2739;
t2464 = -t2483 + t2708;
t2599 = t2464 * t2499 + t2737;
t2598 = t2480 * t2506 - t2500 * t2481;
t2596 = pkin(4) * t2052 + t2702;
t2595 = pkin(4) * t2050 + t2701;
t2593 = t2492 * t2694;
t2590 = pkin(4) * t2223 - t2010;
t2582 = pkin(4) * t2040 + t2690;
t1797 = pkin(12) * t1862 + (-pkin(13) * t2496 + t2714) * t1888;
t1804 = -pkin(12) * t1861 + (-pkin(13) * t2502 + t2774) * t1888;
t1770 = -pkin(3) * t1888 + pkin(11) * t1816 + t1797 * t2503 + t1804 * t2497;
t1784 = t1815 * t2493 + t2491 * t2677;
t1771 = -pkin(11) * t1815 - t1797 * t2497 + t1804 * t2503;
t1794 = -pkin(3) * t1815 - t2689;
t2559 = pkin(10) * t1803 + t1771 * t2498 + t1794 * t2504;
t1750 = -pkin(2) * t1784 - t1770 * t2491 + t2493 * t2559;
t1756 = t1771 * t2504 - t1794 * t2498 + (-t1784 * t2491 - t1785 * t2493) * pkin(10);
t1772 = -t1785 * t2499 + t1803 * t2505;
t2576 = pkin(9) * t1772 + t1750 * t2505 + t1756 * t2499;
t1873 = -pkin(13) * t2069 - t1888;
t1835 = pkin(12) * t2041 + t1873 * t2496 + t2069 * t2714;
t1844 = -pkin(12) * t2040 + t1873 * t2502 + t2069 * t2774;
t1801 = -pkin(3) * t2069 + pkin(11) * t1952 + t1835 * t2503 + t1844 * t2497;
t1879 = t1951 * t2493 + t2491 * t2664;
t1802 = -pkin(11) * t1951 - t1835 * t2497 + t1844 * t2503;
t1831 = -pkin(3) * t1951 - t2582;
t2558 = pkin(10) * t1918 + t1802 * t2498 + t1831 * t2504;
t1769 = -pkin(2) * t1879 - t1801 * t2491 + t2493 * t2558;
t1781 = t1802 * t2504 - t1831 * t2498 + (-t1879 * t2491 - t1880 * t2493) * pkin(10);
t1836 = -t1880 * t2499 + t1918 * t2505;
t2575 = pkin(9) * t1836 + t1769 * t2505 + t1781 * t2499;
t1927 = -pkin(4) * t2176 + pkin(12) * t1936;
t1823 = -pkin(3) * t2176 + pkin(11) * t1884 - pkin(12) * t2763 + t1927 * t2503;
t1828 = t1883 * t2493 + t2491 * t2674;
t1830 = -pkin(11) * t1883 - pkin(12) * t2762 - t1927 * t2497;
t1846 = -pkin(3) * t1883 - t2776;
t2555 = pkin(10) * t1875 + t1830 * t2498 + t1846 * t2504;
t1775 = -pkin(2) * t1828 - t1823 * t2491 + t2493 * t2555;
t1780 = t1830 * t2504 - t1846 * t2498 + (-t1828 * t2491 - t1829 * t2493) * pkin(10);
t1805 = -t1829 * t2499 + t1875 * t2505;
t2574 = pkin(9) * t1805 + t1775 * t2505 + t1780 * t2499;
t1924 = -pkin(5) * t2120 + t1941;
t1967 = -pkin(13) * t2120 + t1997;
t1855 = -pkin(4) * t2120 + pkin(12) * t2051 + t1924 * t2502 + t1967 * t2496;
t1868 = -pkin(12) * t2050 - t1924 * t2496 + t1967 * t2502;
t1806 = -pkin(3) * t2120 + pkin(11) * t1970 + t1855 * t2503 + t1868 * t2497;
t1890 = t1969 * t2493 + t2491 * t2660;
t1808 = -pkin(11) * t1969 - t1855 * t2497 + t1868 * t2503;
t1874 = -pkin(3) * t1969 - t2595;
t2557 = pkin(10) * t1934 + t1808 * t2498 + t1874 * t2504;
t1777 = -pkin(2) * t1890 - t1806 * t2491 + t2493 * t2557;
t1786 = t1808 * t2504 - t1874 * t2498 + (-t1890 * t2491 - t1891 * t2493) * pkin(10);
t1852 = -t1891 * t2499 + t1934 * t2505;
t2573 = pkin(9) * t1852 + t1777 * t2505 + t1786 * t2499;
t1926 = -pkin(5) * t2127 + t1942;
t1968 = -pkin(13) * t2127 + t1998;
t1858 = -pkin(4) * t2127 + pkin(12) * t2053 + t1926 * t2502 + t1968 * t2496;
t1869 = -pkin(12) * t2052 - t1926 * t2496 + t1968 * t2502;
t1807 = -pkin(3) * t2127 + pkin(11) * t1975 + t1858 * t2503 + t1869 * t2497;
t1892 = t1974 * t2493 + t2491 * t2659;
t1809 = -pkin(11) * t1974 - t1858 * t2497 + t1869 * t2503;
t1878 = -pkin(3) * t1974 - t2596;
t2556 = pkin(10) * t1937 + t1809 * t2498 + t1878 * t2504;
t1779 = -pkin(2) * t1892 - t1807 * t2491 + t2493 * t2556;
t1787 = t1809 * t2504 - t1878 * t2498 + (-t1892 * t2491 - t1893 * t2493) * pkin(10);
t1853 = -t1893 * t2499 + t1937 * t2505;
t2572 = pkin(9) * t1853 + t1779 * t2505 + t1787 * t2499;
t1910 = -pkin(4) * t2268 + pkin(12) * t2116 + t1936;
t1919 = -pkin(12) * t2114 - t1935;
t1845 = -pkin(3) * t2268 + pkin(11) * t2039 + t1910 * t2503 + t1919 * t2497;
t1944 = t2037 * t2493 + t2491 * t2647;
t1847 = -pkin(11) * t2037 - t1910 * t2497 + t1919 * t2503;
t1990 = -pkin(3) * t2037 - t2775;
t2554 = pkin(10) * t2008 + t1847 * t2498 + t1990 * t2504;
t1800 = -pkin(2) * t1944 - t1845 * t2491 + t2493 * t2554;
t1810 = t1847 * t2504 - t1990 * t2498 + (-t1944 * t2491 - t1945 * t2493) * pkin(10);
t1903 = -t1945 * t2499 + t2008 * t2505;
t2571 = pkin(9) * t1903 + t1800 * t2505 + t1810 * t2499;
t2056 = -pkin(4) * t2213 + pkin(12) * t2224 - t2760;
t2090 = -pkin(12) * t2223 + t2761;
t1943 = -pkin(3) * t2213 + pkin(11) * t2125 + t2056 * t2503 + t2090 * t2497;
t2004 = t2124 * t2493 + t2491 * t2642;
t1957 = -pkin(11) * t2124 - t2056 * t2497 + t2090 * t2503;
t1964 = -pkin(3) * t2124 - t2590;
t2553 = pkin(10) * t2075 + t1957 * t2498 + t1964 * t2504;
t1834 = -pkin(2) * t2004 - t1943 * t2491 + t2493 * t2553;
t1854 = t1957 * t2504 - t1964 * t2498 + (-t2004 * t2491 - t2005 * t2493) * pkin(10);
t1956 = -t2005 * t2499 + t2075 * t2505;
t2570 = pkin(9) * t1956 + t1834 * t2505 + t1854 * t2499;
t2064 = -pkin(4) * t2792 + pkin(12) * t2239 + t2761;
t2096 = -pkin(12) * t2238 + t2760;
t1950 = -pkin(3) * t2792 + pkin(11) * t2146 + t2064 * t2503 + t2096 * t2497;
t2018 = t2145 * t2493 + t2491 * t2640;
t1971 = -pkin(11) * t2145 - t2064 * t2497 + t2096 * t2503;
t1976 = -pkin(3) * t2145 - t2688;
t2552 = pkin(10) * t2083 + t1971 * t2498 + t1976 * t2504;
t1838 = -pkin(2) * t2018 - t1950 * t2491 + t2493 * t2552;
t1859 = t1971 * t2504 - t1976 * t2498 + (-t2018 * t2491 - t2019 * t2493) * pkin(10);
t1977 = -t2019 * t2499 + t2083 * t2505;
t2569 = pkin(9) * t1977 + t1838 * t2505 + t1859 * t2499;
t1965 = t2065 * t2493 + t2491 * t2645;
t2035 = -pkin(3) * t2242 + pkin(11) * t2066;
t2543 = pkin(10) * t2034 + (-pkin(11) * t2498 - t2777) * t2065;
t1867 = -pkin(2) * t1965 - t2035 * t2491 + t2493 * t2543;
t1872 = (-pkin(11) * t2504 + t2778) * t2065 + (-t1965 * t2491 - t1966 * t2493) * pkin(10);
t1911 = -t1966 * t2499 + t2034 * t2505;
t2568 = pkin(9) * t1911 + t1867 * t2505 + t1872 * t2499;
t2017 = pkin(3) * t2344 + pkin(11) * t2237 + t2066;
t2117 = t2235 * t2493 + t2491 * t2628;
t2033 = -pkin(11) * t2235 - t2065;
t2545 = pkin(10) * t2202 + t2033 * t2498 - t2235 * t2777;
t1908 = -pkin(2) * t2117 - t2017 * t2491 + t2493 * t2545;
t1938 = t2235 * t2778 + t2033 * t2504 + (-t2117 * t2491 - t2118 * t2493) * pkin(10);
t2072 = -t2118 * t2499 + t2202 * t2505;
t2567 = pkin(9) * t2072 + t1908 * t2505 + t1938 * t2499;
t2131 = pkin(3) * t2309 + pkin(11) * t2272 - t2756;
t2164 = t2271 * t2493 + t2491 * t2623;
t2101 = t2497 * t2510 - t2503 * t2803 + (-t2497 * t2779 - t2503 * t2697 - t2271) * pkin(3);
t2183 = -pkin(11) * t2271 + t2757;
t2551 = pkin(10) * t2222 + t2101 * t2504 + t2183 * t2498;
t1954 = -pkin(2) * t2164 - t2131 * t2491 + t2493 * t2551;
t1984 = -t2101 * t2498 + t2183 * t2504 + (-t2164 * t2491 - t2165 * t2493) * pkin(10);
t2086 = -t2165 * t2499 + t2222 * t2505;
t2566 = pkin(9) * t2086 + t1954 * t2505 + t1984 * t2499;
t2134 = -pkin(3) * t2311 + pkin(11) * t2276 + t2757;
t2174 = t2275 * t2493 + t2491 * t2621;
t2104 = -pkin(3) * t2275 + t2151;
t2186 = -pkin(11) * t2275 + t2756;
t2550 = pkin(10) * t2225 + t2104 * t2504 + t2186 * t2498;
t1959 = -pkin(2) * t2174 - t2134 * t2491 + t2493 * t2550;
t1989 = -t2104 * t2498 + t2186 * t2504 + (-t2174 * t2491 - t2175 * t2493) * pkin(10);
t2087 = -t2175 * t2499 + t2225 * t2505;
t2565 = pkin(9) * t2087 + t1959 * t2505 + t1989 * t2499;
t2172 = -t2322 * t2493 + t2491 * t2624;
t2073 = (-t2172 * t2491 - t2173 * t2493) * pkin(10);
t2080 = -t2173 * t2499 + t2200 * t2505;
t2081 = -pkin(2) * t2172 + t2200 * t2770;
t2564 = pkin(9) * t2080 + t2073 * t2499 + t2081 * t2505;
t2264 = t2386 * t2493 + t2491 * t2610;
t2093 = (-t2264 * t2491 - t2265 * t2493) * pkin(10) - t2624;
t2549 = pkin(10) * t2303 + t2200;
t2098 = -pkin(2) * t2264 + t2493 * t2549;
t2208 = -t2265 * t2499 + t2303 * t2505;
t2563 = pkin(9) * t2208 + t2093 * t2499 + t2098 * t2505;
t2280 = t2363 * t2493 + t2491 * t2606;
t2133 = -pkin(2) * t2280 + t2266 * t2491 + t2493 * t2684;
t2177 = -t2753 + (-t2280 * t2491 - t2281 * t2493) * pkin(10);
t2241 = -t2281 * t2499 + t2340 * t2505;
t2562 = pkin(9) * t2241 + t2133 * t2505 + t2177 * t2499;
t2286 = t2366 * t2493 + t2491 * t2609;
t2136 = -pkin(2) * t2286 + t2267 * t2491 + t2493 * t2683;
t2182 = -t2752 + (-t2286 * t2491 - t2287 * t2493) * pkin(10);
t2244 = -t2287 * t2499 + t2346 * t2505;
t2561 = pkin(9) * t2244 + t2136 * t2505 + t2182 * t2499;
t2417 = t2451 * t2499 + t2452 * t2505;
t2560 = pkin(9) * t2417 + t2387;
t2449 = (t2721 * t2764 + t2717) * t2492;
t2487 = t2492 * t2488;
t2477 = t2500 * qJDD(1) + t2506 * t2780;
t2475 = t2494 * t2694;
t2467 = t2718 * t2735;
t2466 = (t2489 - t2490) * t2735;
t2462 = -pkin(8) * t2477 + g(3) * t2506;
t2454 = t2718 * t2712;
t2447 = (-t2489 * t2484 * qJD(1) + t2505 * t2583) * t2492;
t2446 = -t2490 * t2712 - t2499 * t2682;
t2436 = t2464 * t2505 - t2738;
t2435 = -t2463 * t2499 + t2739;
t2429 = t2449 * t2726 + t2487 * t2703;
t2428 = (t2717 + (qJD(2) - t2700) * t2764) * t2788;
t2427 = (qJD(1) * t2700 * t2788 + t2492 * t2682) * t2505;
t2426 = (-t2487 * t2724 + (-t2482 + (-qJD(1) * t2736 + t2716) * t2492) * t2494) * t2505;
t2418 = -t2450 * t2499 + t2453 * t2505;
t2414 = t2453 * t2492 + t2494 * t2600;
t2413 = -t2452 * t2492 + t2494 * t2599;
t2412 = -t2451 * t2492 + t2494 * t2601;
t2411 = -t2453 * t2494 + t2492 * t2600;
t2410 = t2452 * t2494 + t2492 * t2599;
t2409 = t2451 * t2494 + t2492 * t2601;
t2407 = -t2449 * t2492 + t2494 * t2602;
t2406 = t2449 * t2494 + t2492 * t2602;
t2405 = -t2466 * t2492 + t2494 * t2604;
t2404 = t2467 * t2492 + t2494 * t2603;
t2403 = t2466 * t2494 + t2492 * t2604;
t2402 = -t2467 * t2494 + t2492 * t2603;
t2370 = t2455 * t2492 + t2494 * t2605;
t2369 = -t2455 * t2494 + t2492 * t2605;
t2359 = t2491 * t2580 - t2493 * t2539;
t2345 = -t2743 + (-t2411 * t2492 - t2414 * t2494) * pkin(9);
t2339 = -t2742 + (-t2406 * t2492 - t2407 * t2494) * pkin(9);
t2338 = -pkin(1) * t2411 + t2430 * t2492 + t2494 * t2685;
t2337 = pkin(1) * t2414 - t2430 * t2494 + t2492 * t2685;
t2333 = -pkin(1) * t2406 + t2431 * t2492 + t2494 * t2686;
t2332 = pkin(1) * t2407 - t2431 * t2494 + t2492 * t2686;
t2327 = t2401 * t2734 + (t2443 * t2493 - t2458 * t2733) * t2445;
t2325 = t2400 * t2733 + (-t2445 * t2493 - t2458 * t2734) * t2443;
t2324 = pkin(1) * t2370 + t2387 * t2773;
t2323 = -pkin(1) * t2369 + t2387 * t2772;
t2318 = -pkin(1) * t2402 + t2494 * t2560;
t2317 = pkin(1) * t2404 + t2492 * t2560;
t2316 = -t2360 * t2499 + t2385 * t2505;
t2315 = (-t2369 * t2492 - t2370 * t2494) * pkin(9);
t2314 = (-t2402 * t2492 - t2404 * t2494) * pkin(9) - t2605;
t2293 = t2491 * t2608 + t2493 * t2521;
t2292 = t2368 * t2493 + t2491 * t2607;
t2273 = t2416 * t2493 + t2491 * t2611;
t2270 = -t2328 * t2499 + t2362 * t2505;
t2269 = -t2326 * t2499 + t2361 * t2505;
t2260 = -t2359 * t2492 + t2494 * t2612;
t2259 = t2359 * t2494 + t2492 * t2612;
t2257 = -t2295 * t2499 + t2357 * t2505;
t2256 = -t2294 * t2499 + t2356 * t2505;
t2254 = t2493 * t2335 + t2491 * t2519;
t2229 = -t2327 * t2492 + t2494 * t2613;
t2228 = -t2325 * t2492 + t2494 * t2614;
t2227 = t2327 * t2494 + t2492 * t2613;
t2226 = t2325 * t2494 + t2492 * t2614;
t2221 = -t2274 * t2499 + t2302 * t2505;
t2204 = t2493 * t2306 + t2491 * t2536;
t2203 = t2493 * t2304 + t2491 * t2537;
t2196 = -t2255 * t2499 + t2301 * t2505;
t2195 = -t2293 * t2492 + t2494 * t2615;
t2194 = -t2292 * t2492 + t2494 * t2616;
t2193 = t2293 * t2494 + t2492 * t2615;
t2192 = t2292 * t2494 + t2492 * t2616;
t2188 = -t2286 * t2492 + t2494 * t2619;
t2187 = t2286 * t2494 + t2492 * t2619;
t2185 = -t2280 * t2492 + t2494 * t2620;
t2184 = t2280 * t2494 + t2492 * t2620;
t2179 = t2289 * t2493 + t2491 * t2617;
t2178 = t2288 * t2493 + t2491 * t2618;
t2171 = -t2273 * t2492 + t2494 * t2622;
t2170 = t2273 * t2494 + t2492 * t2622;
t2148 = -t2264 * t2492 + t2494 * t2625;
t2147 = t2264 * t2494 + t2492 * t2625;
t2142 = -t2206 * t2499 + t2263 * t2505;
t2141 = -t2205 * t2499 + t2262 * t2505;
t2135 = pkin(2) * t2287 - t2267 * t2493 + t2491 * t2683;
t2132 = pkin(2) * t2281 - t2266 * t2493 + t2491 * t2684;
t2129 = t2234 * t2493 + t2491 * t2629;
t2123 = -t2254 * t2492 + t2494 * t2626;
t2122 = t2254 * t2494 + t2492 * t2626;
t2102 = t2219 * t2493 + t2491 * t2630;
t2097 = pkin(2) * t2265 + t2491 * t2549;
t2095 = -t2181 * t2499 + t2233 * t2505;
t2094 = -t2180 * t2499 + t2232 * t2505;
t2082 = pkin(2) * t2173 + t2200 * t2771;
t2079 = -t2204 * t2492 + t2494 * t2631;
t2078 = -t2203 * t2492 + t2494 * t2632;
t2077 = t2204 * t2494 + t2492 * t2631;
t2076 = t2203 * t2494 + t2492 * t2632;
t2074 = -t2130 * t2499 + t2207 * t2505;
t2063 = -t2103 * t2499 + t2201 * t2505;
t2049 = -t2179 * t2492 + t2494 * t2633;
t2048 = -t2178 * t2492 + t2494 * t2634;
t2047 = t2179 * t2494 + t2492 * t2633;
t2046 = t2178 * t2494 + t2492 * t2634;
t2043 = -t2174 * t2492 + t2494 * t2635;
t2042 = t2174 * t2494 + t2492 * t2635;
t2032 = -t2164 * t2492 + t2494 * t2639;
t2031 = t2164 * t2494 + t2492 * t2639;
t2028 = t2167 * t2493 + t2491 * t2637;
t2027 = t2166 * t2493 + t2491 * t2638;
t2026 = -t2172 * t2492 + t2494 * t2636;
t2025 = t2172 * t2494 + t2492 * t2636;
t2013 = t2110 * t2493 + t2491 * t2586;
t2012 = t2109 * t2493 + t2491 * t2587;
t2007 = -t2129 * t2492 + t2494 * t2641;
t2006 = t2129 * t2494 + t2492 * t2641;
t2003 = -t2117 * t2492 + t2494 * t2643;
t2002 = t2117 * t2494 + t2492 * t2643;
t1996 = -t2102 * t2492 + t2494 * t2644;
t1995 = t2102 * t2494 + t2492 * t2644;
t1994 = -t2136 * t2499 + t2182 * t2505 + (-t2187 * t2492 - t2188 * t2494) * pkin(9);
t1993 = -t2133 * t2499 + t2177 * t2505 + (-t2184 * t2492 - t2185 * t2494) * pkin(9);
t1983 = -t2030 * t2499 + t2085 * t2505;
t1982 = -t2029 * t2499 + t2084 * t2505;
t1981 = -t2015 * t2499 + t2089 * t2505;
t1980 = -t2014 * t2499 + t2088 * t2505;
t1979 = -pkin(1) * t2187 - t2135 * t2492 + t2494 * t2561;
t1978 = pkin(1) * t2188 + t2135 * t2494 + t2492 * t2561;
t1973 = -pkin(1) * t2184 - t2132 * t2492 + t2494 * t2562;
t1972 = pkin(1) * t2185 + t2132 * t2494 + t2492 * t2562;
t1960 = t2057 * t2493 + t2491 * t2646;
t1958 = pkin(2) * t2175 + t2134 * t2493 + t2491 * t2550;
t1955 = t2093 * t2505 - t2098 * t2499 + (-t2147 * t2492 - t2148 * t2494) * pkin(9);
t1953 = pkin(2) * t2165 + t2131 * t2493 + t2491 * t2551;
t1946 = t2036 * t2493 + t2491 * t2648;
t1933 = -pkin(1) * t2147 - t2097 * t2492 + t2494 * t2563;
t1932 = pkin(1) * t2148 + t2097 * t2494 + t2492 * t2563;
t1929 = t2021 * t2493 + t2491 * t2651;
t1928 = t2020 * t2493 + t2491 * t2652;
t1923 = -t2028 * t2492 + t2494 * t2649;
t1922 = -t2027 * t2492 + t2494 * t2650;
t1921 = t2028 * t2494 + t2492 * t2649;
t1920 = t2027 * t2494 + t2492 * t2650;
t1917 = -t2018 * t2492 + t2494 * t2653;
t1916 = t2018 * t2494 + t2492 * t2653;
t1915 = -t2013 * t2492 + t2494 * t2654;
t1914 = -t2012 * t2492 + t2494 * t2655;
t1913 = t2013 * t2494 + t2492 * t2654;
t1912 = t2012 * t2494 + t2492 * t2655;
t1909 = -t1961 * t2499 + t2024 * t2505;
t1907 = pkin(2) * t2118 + t2017 * t2493 + t2491 * t2545;
t1906 = -t2004 * t2492 + t2494 * t2656;
t1905 = t2004 * t2494 + t2492 * t2656;
t1904 = -t1947 * t2499 + t2016 * t2505;
t1902 = t2073 * t2505 - t2081 * t2499 + (-t2025 * t2492 - t2026 * t2494) * pkin(9);
t1899 = t1986 * t2493 + t2491 * t2657;
t1898 = t1985 * t2493 + t2491 * t2658;
t1897 = -pkin(1) * t2025 - t2082 * t2492 + t2494 * t2564;
t1896 = pkin(1) * t2026 + t2082 * t2494 + t2492 * t2564;
t1895 = -t1931 * t2499 + t1992 * t2505;
t1894 = -t1930 * t2499 + t1991 * t2505;
t1885 = t1962 * t2493 + t2491 * t2662;
t1882 = -t1965 * t2492 + t2494 * t2661;
t1881 = t1965 * t2494 + t2492 * t2661;
t1877 = -t1960 * t2492 + t2494 * t2663;
t1876 = t1960 * t2494 + t2492 * t2663;
t1871 = -t1946 * t2492 + t2494 * t2665;
t1870 = t1946 * t2494 + t2492 * t2665;
t1866 = pkin(2) * t1966 + t2035 * t2493 + t2491 * t2543;
t1865 = -t1944 * t2492 + t2494 * t2666;
t1864 = t1944 * t2494 + t2492 * t2666;
t1863 = -t1959 * t2499 + t1989 * t2505 + (-t2042 * t2492 - t2043 * t2494) * pkin(9);
t1860 = -t1954 * t2499 + t1984 * t2505 + (-t2031 * t2492 - t2032 * t2494) * pkin(9);
t1857 = -t1901 * t2499 + t1949 * t2505;
t1856 = -t1900 * t2499 + t1948 * t2505;
t1851 = -t1929 * t2492 + t2494 * t2667;
t1850 = -t1928 * t2492 + t2494 * t2668;
t1849 = t1929 * t2494 + t2492 * t2667;
t1848 = t1928 * t2494 + t2492 * t2668;
t1843 = -pkin(1) * t2042 - t1958 * t2492 + t2494 * t2565;
t1842 = pkin(1) * t2043 + t1958 * t2494 + t2492 * t2565;
t1841 = -t1886 * t2499 + t1925 * t2505;
t1840 = -pkin(1) * t2031 - t1953 * t2492 + t2494 * t2566;
t1839 = pkin(1) * t2032 + t1953 * t2494 + t2492 * t2566;
t1837 = pkin(2) * t2019 + t1950 * t2493 + t2491 * t2552;
t1833 = pkin(2) * t2005 + t1943 * t2493 + t2491 * t2553;
t1832 = -t1908 * t2499 + t1938 * t2505 + (-t2002 * t2492 - t2003 * t2494) * pkin(9);
t1827 = -t1899 * t2492 + t2494 * t2669;
t1826 = -t1898 * t2492 + t2494 * t2670;
t1825 = t1899 * t2494 + t2492 * t2669;
t1824 = t1898 * t2494 + t2492 * t2670;
t1822 = -t1892 * t2492 + t2494 * t2671;
t1821 = t1892 * t2494 + t2492 * t2671;
t1820 = -t1890 * t2492 + t2494 * t2672;
t1819 = t1890 * t2494 + t2492 * t2672;
t1818 = -pkin(1) * t2002 - t1907 * t2492 + t2494 * t2567;
t1817 = pkin(1) * t2003 + t1907 * t2494 + t2492 * t2567;
t1814 = -t1885 * t2492 + t2494 * t2673;
t1813 = t1885 * t2494 + t2492 * t2673;
t1812 = -t1879 * t2492 + t2494 * t2675;
t1811 = t1879 * t2494 + t2492 * t2675;
t1799 = pkin(2) * t1945 + t1845 * t2493 + t2491 * t2554;
t1798 = -t1838 * t2499 + t1859 * t2505 + (-t1916 * t2492 - t1917 * t2494) * pkin(9);
t1796 = -t1867 * t2499 + t1872 * t2505 + (-t1881 * t2492 - t1882 * t2494) * pkin(9);
t1795 = -t1834 * t2499 + t1854 * t2505 + (-t1905 * t2492 - t1906 * t2494) * pkin(9);
t1793 = -pkin(1) * t1881 - t1866 * t2492 + t2494 * t2568;
t1792 = pkin(1) * t1882 + t1866 * t2494 + t2492 * t2568;
t1791 = -t1828 * t2492 + t2494 * t2676;
t1790 = t1828 * t2494 + t2492 * t2676;
t1789 = -pkin(1) * t1916 - t1837 * t2492 + t2494 * t2569;
t1788 = pkin(1) * t1917 + t1837 * t2494 + t2492 * t2569;
t1783 = -pkin(1) * t1905 - t1833 * t2492 + t2494 * t2570;
t1782 = pkin(1) * t1906 + t1833 * t2494 + t2492 * t2570;
t1778 = pkin(2) * t1893 + t1807 * t2493 + t2491 * t2556;
t1776 = pkin(2) * t1891 + t1806 * t2493 + t2491 * t2557;
t1774 = pkin(2) * t1829 + t1823 * t2493 + t2491 * t2555;
t1773 = -t1800 * t2499 + t1810 * t2505 + (-t1864 * t2492 - t1865 * t2494) * pkin(9);
t1768 = pkin(2) * t1880 + t1801 * t2493 + t2491 * t2558;
t1767 = -pkin(1) * t1864 - t1799 * t2492 + t2494 * t2571;
t1766 = pkin(1) * t1865 + t1799 * t2494 + t2492 * t2571;
t1765 = -t1784 * t2492 + t2494 * t2678;
t1764 = t1784 * t2494 + t2492 * t2678;
t1763 = -t1779 * t2499 + t1787 * t2505 + (-t1821 * t2492 - t1822 * t2494) * pkin(9);
t1762 = -t1777 * t2499 + t1786 * t2505 + (-t1819 * t2492 - t1820 * t2494) * pkin(9);
t1761 = -t1769 * t2499 + t1781 * t2505 + (-t1811 * t2492 - t1812 * t2494) * pkin(9);
t1760 = -pkin(1) * t1821 - t1778 * t2492 + t2494 * t2572;
t1759 = pkin(1) * t1822 + t1778 * t2494 + t2492 * t2572;
t1758 = -pkin(1) * t1819 - t1776 * t2492 + t2494 * t2573;
t1757 = pkin(1) * t1820 + t1776 * t2494 + t2492 * t2573;
t1755 = -t1775 * t2499 + t1780 * t2505 + (-t1790 * t2492 - t1791 * t2494) * pkin(9);
t1754 = -pkin(1) * t1790 - t1774 * t2492 + t2494 * t2574;
t1753 = pkin(1) * t1791 + t1774 * t2494 + t2492 * t2574;
t1752 = -pkin(1) * t1811 - t1768 * t2492 + t2494 * t2575;
t1751 = pkin(1) * t1812 + t1768 * t2494 + t2492 * t2575;
t1749 = pkin(2) * t1785 + t1770 * t2493 + t2491 * t2559;
t1748 = -t1750 * t2499 + t1756 * t2505 + (-t1764 * t2492 - t1765 * t2494) * pkin(9);
t1747 = -pkin(1) * t1764 - t1749 * t2492 + t2494 * t2576;
t1746 = pkin(1) * t1765 + t1749 * t2494 + t2492 * t2576;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2478, 0, -t2477, 0, t2687, -t2462, -t2598, -pkin(8) * t2598, -t2500 * t2429 + t2447 * t2506, -t2500 * t2405 + t2418 * t2506, -t2500 * t2412 + t2435 * t2506, -t2500 * t2426 + t2446 * t2506, -t2500 * t2413 + t2436 * t2506, t2506 * t2454 + t2500 * t2593, t2506 * t2345 - t2500 * t2338 - pkin(8) * (t2414 * t2506 + t2500 * t2437), t2506 * t2339 - t2500 * t2333 - pkin(8) * (t2407 * t2506 + t2500 * t2432), t2506 * t2314 - t2500 * t2318 - pkin(8) * (t2404 * t2506 + t2500 * t2417), t2506 * t2315 - t2500 * t2323 - pkin(8) * (t2370 * t2506 + t2500 * t2387), -t2500 * t2229 + t2270 * t2506, -t2500 * t2171 + t2221 * t2506, -t2500 * t2194 + t2256 * t2506, -t2500 * t2228 + t2269 * t2506, -t2500 * t2195 + t2257 * t2506, -t2500 * t2260 + t2316 * t2506, t2506 * t1993 - t2500 * t1973 - pkin(8) * (t2185 * t2506 + t2500 * t2241), t2506 * t1994 - t2500 * t1979 - pkin(8) * (t2188 * t2506 + t2500 * t2244), t2506 * t1955 - t2500 * t1933 - pkin(8) * (t2148 * t2506 + t2500 * t2208), t2506 * t1902 - t2500 * t1897 - pkin(8) * (t2026 * t2506 + t2500 * t2080), -t2500 * t2079 + t2142 * t2506, -t2500 * t2007 + t2074 * t2506, -t2500 * t2048 + t2094 * t2506, -t2500 * t2078 + t2141 * t2506, -t2500 * t2049 + t2095 * t2506, -t2500 * t2123 + t2196 * t2506, t2506 * t1860 - t2500 * t1840 - pkin(8) * (t2032 * t2506 + t2500 * t2086), t2506 * t1863 - t2500 * t1843 - pkin(8) * (t2043 * t2506 + t2500 * t2087), t2506 * t1832 - t2500 * t1818 - pkin(8) * (t2003 * t2506 + t2500 * t2072), t2506 * t1796 - t2500 * t1793 - pkin(8) * (t1882 * t2506 + t2500 * t1911), -t2500 * t1915 + t1981 * t2506, -t2500 * t1871 + t1904 * t2506, -t2500 * t1922 + t1982 * t2506, -t2500 * t1914 + t1980 * t2506, -t2500 * t1923 + t1983 * t2506, -t2500 * t1996 + t2063 * t2506, t2506 * t1795 - t2500 * t1783 - pkin(8) * (t1906 * t2506 + t2500 * t1956), t2506 * t1798 - t2500 * t1789 - pkin(8) * (t1917 * t2506 + t2500 * t1977), t2506 * t1773 - t2500 * t1767 - pkin(8) * (t1865 * t2506 + t2500 * t1903), t2506 * t1755 - t2500 * t1754 - pkin(8) * (t1791 * t2506 + t2500 * t1805), -t2500 * t1851 + t1895 * t2506, -t2500 * t1814 + t1841 * t2506, -t2500 * t1826 + t1856 * t2506, -t2500 * t1850 + t1894 * t2506, -t2500 * t1827 + t1857 * t2506, -t2500 * t1877 + t1909 * t2506, t2506 * t1762 - t2500 * t1758 - pkin(8) * (t1820 * t2506 + t2500 * t1852), t2506 * t1763 - t2500 * t1760 - pkin(8) * (t1822 * t2506 + t2500 * t1853), t2506 * t1761 - t2500 * t1752 - pkin(8) * (t1812 * t2506 + t2500 * t1836), t2506 * t1748 - t2500 * t1747 - pkin(8) * (t1765 * t2506 + t2500 * t1772); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2477, 0, t2478, 0, t2462, t2687, t2695, pkin(8) * t2695, t2429 * t2506 + t2500 * t2447, t2405 * t2506 + t2500 * t2418, t2412 * t2506 + t2500 * t2435, t2426 * t2506 + t2500 * t2446, t2413 * t2506 + t2500 * t2436, t2500 * t2454 - t2506 * t2593, t2500 * t2345 + t2506 * t2338 + pkin(8) * (-t2500 * t2414 + t2437 * t2506), t2500 * t2339 + t2506 * t2333 + pkin(8) * (-t2500 * t2407 + t2432 * t2506), t2500 * t2314 + t2506 * t2318 + pkin(8) * (-t2500 * t2404 + t2417 * t2506), t2500 * t2315 + t2506 * t2323 + pkin(8) * (-t2500 * t2370 + t2387 * t2506), t2229 * t2506 + t2500 * t2270, t2171 * t2506 + t2500 * t2221, t2194 * t2506 + t2500 * t2256, t2228 * t2506 + t2500 * t2269, t2195 * t2506 + t2500 * t2257, t2260 * t2506 + t2500 * t2316, t2500 * t1993 + t2506 * t1973 + pkin(8) * (-t2500 * t2185 + t2241 * t2506), t2500 * t1994 + t2506 * t1979 + pkin(8) * (-t2500 * t2188 + t2244 * t2506), t2500 * t1955 + t2506 * t1933 + pkin(8) * (-t2500 * t2148 + t2208 * t2506), t2500 * t1902 + t2506 * t1897 + pkin(8) * (-t2500 * t2026 + t2080 * t2506), t2079 * t2506 + t2500 * t2142, t2007 * t2506 + t2500 * t2074, t2048 * t2506 + t2500 * t2094, t2078 * t2506 + t2500 * t2141, t2049 * t2506 + t2500 * t2095, t2123 * t2506 + t2500 * t2196, t2500 * t1860 + t2506 * t1840 + pkin(8) * (-t2500 * t2032 + t2086 * t2506), t2500 * t1863 + t2506 * t1843 + pkin(8) * (-t2500 * t2043 + t2087 * t2506), t2500 * t1832 + t2506 * t1818 + pkin(8) * (-t2500 * t2003 + t2072 * t2506), t2500 * t1796 + t2506 * t1793 + pkin(8) * (-t2500 * t1882 + t1911 * t2506), t1915 * t2506 + t2500 * t1981, t1871 * t2506 + t2500 * t1904, t1922 * t2506 + t2500 * t1982, t1914 * t2506 + t2500 * t1980, t1923 * t2506 + t2500 * t1983, t1996 * t2506 + t2500 * t2063, t2500 * t1795 + t2506 * t1783 + pkin(8) * (-t2500 * t1906 + t1956 * t2506), t2500 * t1798 + t2506 * t1789 + pkin(8) * (-t2500 * t1917 + t1977 * t2506), t2500 * t1773 + t2506 * t1767 + pkin(8) * (-t2500 * t1865 + t1903 * t2506), t2500 * t1755 + t2506 * t1754 + pkin(8) * (-t2500 * t1791 + t1805 * t2506), t1851 * t2506 + t2500 * t1895, t1814 * t2506 + t2500 * t1841, t1826 * t2506 + t2500 * t1856, t1850 * t2506 + t2500 * t1894, t1827 * t2506 + t2500 * t1857, t1877 * t2506 + t2500 * t1909, t2500 * t1762 + t2506 * t1758 + pkin(8) * (-t2500 * t1820 + t1852 * t2506), t2500 * t1763 + t2506 * t1760 + pkin(8) * (-t2500 * t1822 + t1853 * t2506), t2500 * t1761 + t2506 * t1752 + pkin(8) * (-t2500 * t1812 + t1836 * t2506), t2500 * t1748 + t2506 * t1747 + pkin(8) * (-t2500 * t1765 + t1772 * t2506); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2480, t2481, 0, 0, t2428, t2403, t2409, t2427, t2410, t2475, t2337, t2332, t2317, t2324, t2227, t2170, t2192, t2226, t2193, t2259, t1972, t1978, t1932, t1896, t2077, t2006, t2046, t2076, t2047, t2122, t1839, t1842, t1817, t1792, t1913, t1870, t1920, t1912, t1921, t1995, t1782, t1788, t1766, t1753, t1849, t1813, t1824, t1848, t1825, t1876, t1757, t1759, t1751, t1746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2780, 0, 0, -g(3), -t2480, 0, t2447, t2418, t2435, t2446, t2436, t2454, t2345, t2339, t2314, t2315, t2270, t2221, t2256, t2269, t2257, t2316, t1993, t1994, t1955, t1902, t2142, t2074, t2094, t2141, t2095, t2196, t1860, t1863, t1832, t1796, t1981, t1904, t1982, t1980, t1983, t2063, t1795, t1798, t1773, t1755, t1895, t1841, t1856, t1894, t1857, t1909, t1762, t1763, t1761, t1748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2780, 0, qJDD(1), 0, g(3), 0, -t2481, 0, t2429, t2405, t2412, t2426, t2413, -t2593, t2338, t2333, t2318, t2323, t2229, t2171, t2194, t2228, t2195, t2260, t1973, t1979, t1933, t1897, t2079, t2007, t2048, t2078, t2049, t2123, t1840, t1843, t1818, t1793, t1915, t1871, t1922, t1914, t1923, t1996, t1783, t1789, t1767, t1754, t1851, t1814, t1826, t1850, t1827, t1877, t1758, t1760, t1752, t1747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2480, t2481, 0, 0, t2428, t2403, t2409, t2427, t2410, t2475, t2337, t2332, t2317, t2324, t2227, t2170, t2192, t2226, t2193, t2259, t1972, t1978, t1932, t1896, t2077, t2006, t2046, t2076, t2047, t2122, t1839, t1842, t1817, t1792, t1913, t1870, t1920, t1912, t1921, t1995, t1782, t1788, t1766, t1753, t1849, t1813, t1824, t1848, t1825, t1876, t1757, t1759, t1751, t1746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2547, t2453, t2460, -t2469, t2464, t2469, 0, -t2455, t2430, 0, t2362, t2302, t2356, t2361, t2357, t2385, t2177, t2182, t2093, t2073, t2263, t2207, t2232, t2262, t2233, t2301, t1984, t1989, t1938, t1872, t2089, t2016, t2084, t2088, t2085, t2201, t1854, t1859, t1810, t1780, t1992, t1925, t1948, t1991, t1949, t2024, t1786, t1787, t1781, t1756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2468, t2450, t2463, t2682, t2461, -t2468, t2455, 0, t2431, 0, t2328, t2274, t2294, t2326, t2295, t2360, t2133, t2136, t2098, t2081, t2206, t2130, t2180, t2205, t2181, t2255, t1954, t1959, t1908, t1867, t2015, t1947, t2029, t2014, t2030, t2103, t1834, t1838, t1800, t1775, t1931, t1886, t1900, t1930, t1901, t1961, t1777, t1779, t1769, t1750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2479, t2466, t2451, t2479, t2452, t2694, -t2430, -t2431, 0, 0, t2327, t2273, t2292, t2325, t2293, t2359, t2132, t2135, t2097, t2082, t2204, t2129, t2178, t2203, t2179, t2254, t1953, t1958, t1907, t1866, t2013, t1946, t2027, t2012, t2028, t2102, t1833, t1837, t1799, t1774, t1929, t1885, t1898, t1928, t1899, t1960, t1776, t1778, t1768, t1749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2401, -t2363, t2526, -t2425, t2423, t2425, 0, -t2322, t2266, 0, t2307, t2236, t2290, t2305, t2291, t2336, t2183, t2186, t2033, -pkin(11) * t2065, t2112, t2038, t2168, t2111, t2169, t2220, t1957, t1971, t1847, t1830, t2023, t1963, t1987, t2022, t1988, t2058, t1808, t1809, t1802, t1771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2741, t2367, t2424, t2400, -t2389, t2741, t2322, 0, t2267, 0, -t2382, -t2381, -t2312, t2382, t2308, -t2522, t2101, t2104, -pkin(3) * t2235, -pkin(3) * t2065, -t2321, -t2320, -t2217, t2321, t2214, -t2398, t1964, t1976, t1990, t1846, -t2154, -t2068, -t2137, t2152, -t2138, -t2230, t1874, t1878, t1831, t1794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2744, t2416, t2368, -t2744, t2521, -t2539, -t2266, -t2267, 0, 0, t2306, t2234, t2288, t2304, t2289, t2335, t2131, t2134, t2017, t2035, t2110, t2036, t2166, t2109, t2167, t2219, t1943, t1950, t1845, t1823, t2021, t1962, t1985, t2020, t1986, t2057, t1806, t1807, t1801, t1770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2343, t2309, t2791, t2394, t2392, -t2394, 0, t2242, t2150, 0, t2212, t2115, t2247, t2210, t2248, t2285, t2090, t2096, t1919, -pkin(12) * t1935, t2108, t2045, t2061, t2107, t2062, t2144, t1868, t1869, t1844, t1804; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2395, t2311, t2393, t2520, t2330, -t2395, -t2242, 0, t2151, 0, t2211, t2113, t2245, t2209, t2246, t2284, t2056, t2064, t1910, t1927, t2106, t2044, t2059, t2105, t2060, t2143, t1855, t1858, t1835, t1797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2382, t2381, t2312, -t2382, -t2308, t2522, -t2150, -t2151, 0, 0, t2321, t2320, t2217, -t2321, -t2214, t2398, t2590, t2688, t2775, t2776, t2154, t2068, t2137, -t2152, t2138, t2230, t2595, t2596, t2582, t2689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2253, -t2213, t2784, t2354, t2352, -t2354, 0, t2176, t2010, 0, t2155, t2070, t2139, t2153, t2140, t2231, t1967, t1968, t1873, -pkin(13) * t1888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2532, t2792, t2353, t2252, t2278, -t2532, -t2176, 0, t2011, 0, -t2283, -t2282, -t2162, t2283, t2158, -t2250, t1924, t1926, -pkin(5) * t2069, -pkin(5) * t1888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2321, t2320, t2217, -t2321, -t2214, t2398, -t2010, -t2011, 0, 0, t2154, t2068, t2137, -t2152, t2138, t2230, t2701, t2702, t2690, t2719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2199, t2159, t2785, t2298, t2296, -t2298, 0, t2000, t1941, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2299, t2161, t2297, t2198, t2190, -t2299, -t2000, 0, t1942, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2283, t2282, t2162, -t2283, -t2158, t2250, -t1941, -t1942, 0, 0;];
m_new_reg  = t1;
