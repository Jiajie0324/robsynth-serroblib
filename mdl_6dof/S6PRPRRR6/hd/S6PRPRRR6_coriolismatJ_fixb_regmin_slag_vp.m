% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:48:55
% EndTime: 2019-03-08 20:49:07
% DurationCPUTime: 6.97s
% Computational Cost: add. (3586->459), mult. (9008->689), div. (0->0), fcn. (9471->10), ass. (0->382)
t455 = qJD(5) + qJD(6);
t332 = sin(qJ(4));
t549 = -t332 / 0.2e1;
t336 = cos(qJ(4));
t329 = sin(pkin(6));
t337 = cos(qJ(2));
t519 = t329 * t337;
t532 = cos(pkin(6));
t364 = t332 * t532 + t336 * t519;
t574 = t364 / 0.2e1;
t331 = sin(qJ(5));
t559 = pkin(9) + pkin(10);
t282 = t559 * t331;
t335 = cos(qJ(5));
t284 = t559 * t335;
t330 = sin(qJ(6));
t334 = cos(qJ(6));
t196 = -t330 * t282 + t334 * t284;
t499 = t334 * t331;
t511 = t330 * t335;
t376 = t511 / 0.2e1 + t499 / 0.2e1;
t266 = t499 + t511;
t553 = t266 / 0.2e1;
t133 = (t553 - t376) * t336;
t362 = t364 * t335;
t352 = t362 / 0.2e1;
t363 = t364 * t331;
t353 = t363 / 0.2e1;
t343 = t330 * t352 + t334 * t353;
t358 = t364 * t266;
t66 = -t358 / 0.2e1 + t343;
t535 = t66 * qJD(1) + t133 * qJD(3);
t573 = -t196 * t455 - t535;
t393 = -t334 * t282 - t330 * t284;
t320 = t334 * t335;
t512 = t330 * t331;
t262 = -t320 + t512;
t497 = t335 * t336;
t287 = t334 * t497;
t551 = -t287 / 0.2e1;
t131 = t551 + (t512 / 0.2e1 - t262 / 0.2e1) * t336;
t355 = t330 * t363;
t344 = -t355 / 0.2e1 + t334 * t352;
t359 = t364 * t262;
t67 = t359 / 0.2e1 + t344;
t536 = t67 * qJD(1) + t131 * qJD(3);
t572 = -t393 * t455 - t536;
t571 = 0.2e1 * t331;
t570 = t332 * t455;
t338 = -pkin(2) - pkin(8);
t544 = pkin(5) * t331;
t421 = -t338 + t544;
t407 = t421 * t336;
t386 = -t407 / 0.2e1;
t543 = pkin(5) * t335;
t322 = -pkin(4) - t543;
t494 = t336 * t266;
t521 = t322 * t494;
t569 = t262 * t386 - t521 / 0.2e1;
t385 = t407 / 0.2e1;
t508 = t331 * t336;
t233 = t330 * t508 - t287;
t522 = t322 * t233;
t568 = t266 * t385 - t522 / 0.2e1;
t492 = t337 * t331;
t333 = sin(qJ(2));
t506 = t333 * t335;
t225 = (t332 * t506 + t492) * t329;
t500 = t334 * t225;
t491 = t337 * t335;
t509 = t331 * t333;
t224 = (-t332 * t509 + t491) * t329;
t514 = t330 * t224;
t378 = -t514 / 0.2e1 - t500 / 0.2e1;
t448 = t329 * t506;
t247 = -t332 * t519 + t336 * t532;
t524 = t247 * t331;
t182 = -t448 + t524;
t449 = t329 * t509;
t523 = t247 * t335;
t183 = t449 + t523;
t45 = t334 * t182 + t330 * t183;
t565 = t45 * t549 + t494 * t574;
t341 = t378 + t565;
t567 = qJD(1) * t341;
t501 = t334 * t224;
t513 = t330 * t225;
t377 = -t513 / 0.2e1 + t501 / 0.2e1;
t46 = t330 * t182 - t334 * t183;
t564 = t233 * t574 + t46 * t549;
t342 = t377 + t564;
t566 = qJD(1) * t342;
t563 = qJD(2) * t341 + t67 * qJD(4);
t562 = qJD(2) * t342 + t66 * qJD(4);
t325 = t331 ^ 2;
t327 = t335 ^ 2;
t300 = t327 - t325;
t419 = t497 * t571;
t365 = qJD(2) * t419 - qJD(4) * t300;
t345 = t377 - t564;
t69 = t358 / 0.2e1 + t343;
t561 = qJD(2) * t345 + t69 * qJD(4) + t455 * t46;
t346 = t378 - t565;
t68 = -t359 / 0.2e1 + t344;
t560 = qJD(2) * t346 + t68 * qJD(4) + t45 * t455;
t411 = pkin(4) * t332 - pkin(9) * t336;
t271 = qJ(3) + t411;
t255 = t335 * t271;
t507 = t331 * t338;
t422 = pkin(5) - t507;
t454 = pkin(10) * t497;
t153 = t332 * t422 + t255 - t454;
t128 = t334 * t153;
t558 = -t128 / 0.2e1;
t557 = -t153 / 0.2e1;
t234 = t266 * t332;
t556 = -t234 / 0.2e1;
t555 = -t247 / 0.2e1;
t554 = t262 / 0.2e1;
t510 = t331 * t332;
t286 = t330 * t510;
t552 = t286 / 0.2e1;
t550 = t331 / 0.2e1;
t548 = t332 / 0.2e1;
t547 = t335 / 0.2e1;
t546 = -t336 / 0.2e1;
t545 = t336 / 0.2e1;
t542 = t332 * pkin(9);
t541 = t336 * pkin(4);
t51 = t266 * t233 + t262 * t494;
t540 = t455 * t51;
t87 = t233 * t554 - t494 * t553;
t539 = t455 * t87;
t538 = pkin(5) * qJD(5);
t537 = pkin(5) * qJD(6);
t214 = t332 * t507 - t255;
t178 = -t214 - t454;
t450 = pkin(5) * t549;
t414 = t450 + t178 / 0.2e1;
t25 = (t557 + t414) * t330;
t531 = qJD(2) * t25;
t27 = t334 * t414 + t558;
t530 = qJD(2) * t27;
t529 = t393 * t332;
t528 = t196 * t332;
t527 = t234 * t332;
t526 = t494 * t336;
t237 = t320 * t332 - t286;
t525 = t237 * t332;
t328 = t336 ^ 2;
t321 = t328 * t335;
t520 = t329 * t333;
t283 = t541 + t542;
t269 = t335 * t283;
t164 = t335 * t332 * pkin(10) + t336 * t422 + t269;
t518 = t330 * t164;
t517 = t330 * t178;
t496 = t335 * t338;
t446 = t332 * t496;
t215 = t331 * t271 + t446;
t179 = -pkin(10) * t508 + t215;
t516 = t330 * t179;
t268 = t331 * t283;
t493 = t336 * t338;
t289 = t335 * t493;
t184 = pkin(10) * t510 + t268 + t289;
t515 = t330 * t184;
t505 = t334 * t164;
t504 = t334 * t178;
t503 = t334 * t179;
t502 = t334 * t184;
t326 = t332 ^ 2;
t498 = t335 * t326;
t495 = t336 * t233;
t70 = -t233 * t234 + t237 * t494;
t484 = t70 * qJD(2);
t381 = -t525 / 0.2e1 + t495 / 0.2e1;
t408 = t320 / 0.2e1 - t512 / 0.2e1;
t96 = -t381 + t408;
t483 = t96 * qJD(2);
t382 = t527 / 0.2e1 + t526 / 0.2e1;
t97 = -t376 - t382;
t482 = t97 * qJD(2);
t299 = t326 - t328;
t481 = qJD(2) * qJ(3);
t480 = qJD(2) * t233;
t265 = t299 * t331;
t479 = qJD(2) * t265;
t267 = -t321 + t498;
t478 = qJD(2) * t267;
t477 = qJD(2) * t329;
t476 = qJD(3) * t332;
t475 = qJD(4) * t247;
t474 = qJD(4) * t266;
t473 = qJD(4) * t322;
t472 = qJD(4) * t331;
t471 = qJD(4) * t335;
t470 = qJD(5) * t331;
t469 = qJD(5) * t335;
t468 = qJD(6) * t322;
t107 = -t526 + t527;
t467 = t107 * qJD(2);
t108 = -t495 - t525;
t466 = t108 * qJD(2);
t132 = (t553 + t376) * t332;
t119 = t132 * qJD(2);
t424 = -t320 / 0.2e1;
t134 = t552 + (t424 + t554) * t332;
t121 = t134 * qJD(2);
t453 = 0.1e1 / 0.2e1 + t326 / 0.2e1;
t238 = (-t328 / 0.2e1 - t453) * t331;
t463 = t238 * qJD(2);
t239 = t321 / 0.2e1 + t453 * t335;
t462 = t239 * qJD(2);
t461 = t299 * qJD(2);
t460 = t332 * qJD(2);
t459 = t332 * qJD(4);
t458 = t336 * qJD(2);
t457 = t336 * qJD(4);
t456 = t336 * qJD(5);
t452 = t544 / 0.2e1;
t451 = -t543 / 0.2e1;
t447 = t336 * t520;
t445 = t331 * t493;
t444 = qJ(3) * t460;
t443 = qJ(3) * t458;
t442 = t331 * t471;
t441 = t331 * t457;
t440 = t335 * t457;
t439 = t332 * t470;
t438 = t331 * t456;
t437 = t332 * t469;
t436 = t335 * t456;
t435 = t262 * t460;
t434 = t266 * t460;
t298 = t333 * t477;
t433 = t337 * t477;
t432 = t331 * t469;
t314 = t332 * t457;
t431 = t332 * t458;
t430 = t528 / 0.2e1;
t429 = -t515 / 0.2e1;
t428 = -t509 / 0.2e1;
t427 = t508 / 0.2e1;
t426 = -t506 / 0.2e1;
t425 = -t502 / 0.2e1;
t423 = t497 / 0.2e1;
t420 = pkin(5) * t455;
t418 = t455 * t266;
t417 = pkin(5) * t423;
t416 = -qJD(5) - t460;
t415 = -t447 / 0.2e1;
t413 = t460 + qJD(5) / 0.2e1;
t412 = pkin(5) * t545 + t164 / 0.2e1;
t410 = qJD(4) * t419;
t339 = -t494 * t555 + t364 * t556 + (t330 * t362 + t334 * t363) * t548 + t45 * t546;
t403 = t262 * t415;
t1 = t403 - t339;
t257 = t421 * t332;
t71 = -t128 + t516;
t5 = (t505 - t515) * t332 - t257 * t494 + (-t234 * t421 - t71) * t336;
t406 = -t1 * qJD(1) + t5 * qJD(2);
t340 = t233 * t555 - t364 * t237 / 0.2e1 + (-t334 * t362 + t355) * t549 + t46 * t545;
t402 = t266 * t415;
t2 = t402 - t340;
t72 = t330 * t153 + t503;
t6 = (t502 + t518) * t332 + t72 * t336 - t257 * t233 + t237 * t407;
t405 = -t2 * qJD(1) - t6 * qJD(2);
t404 = qJD(6) - t416;
t81 = -t503 - t517;
t33 = t81 * t332 + (-t233 * t421 + t494 * t543) * t336;
t401 = -qJD(2) * t33 + t566;
t40 = -t233 * t407 - t72 * t332;
t400 = -qJD(2) * t40 + t566;
t170 = t494 * t407;
t39 = -t332 * t71 + t170;
t399 = qJD(2) * t39 + t567;
t83 = t504 - t516;
t34 = t332 * t83 + t495 * t543 + t170;
t398 = qJD(2) * t34 + t567;
t388 = t329 * t428 + t183 / 0.2e1;
t35 = (-t523 / 0.2e1 + t388) * t336;
t89 = t215 * t336 + (-t289 + t268) * t332;
t397 = -t35 * qJD(1) - t89 * qJD(2);
t387 = t329 * t426 - t182 / 0.2e1;
t36 = (-t524 / 0.2e1 - t387) * t336;
t88 = -t214 * t336 + (t269 + t445) * t332;
t396 = -t36 * qJD(1) + t88 * qJD(2);
t129 = t262 * t544 + t266 * t322;
t348 = -t452 * t494 + t430;
t379 = t429 + t505 / 0.2e1;
t357 = t522 / 0.2e1 + t379;
t8 = (t334 * pkin(5) / 0.2e1 + t262 * t451 - t421 * t266 / 0.2e1) * t336 + t348 + t357;
t395 = -t8 * qJD(2) + t129 * qJD(4);
t130 = -t262 * t322 + t266 * t544;
t349 = t233 * t452 + t393 * t548;
t380 = -t518 / 0.2e1 + t425;
t356 = t521 / 0.2e1 + t380;
t7 = (-t330 * pkin(5) / 0.2e1 + t266 * t451 + t421 * t554) * t336 + t349 + t356;
t394 = -t7 * qJD(2) + t130 * qJD(4);
t145 = -t214 * t332 - t328 * t507;
t350 = t364 * t546;
t347 = t519 / 0.2e1 + t350;
t55 = -t331 * t347 + t332 * t387;
t392 = qJD(1) * t55 + qJD(2) * t145;
t146 = -t215 * t332 - t328 * t496;
t54 = t332 * t388 + t335 * t347;
t391 = qJD(1) * t54 - qJD(2) * t146;
t100 = -t233 ^ 2 + t494 ^ 2;
t11 = qJD(2) * t100 + qJD(4) * t51;
t113 = t262 ^ 2 - t266 ^ 2;
t29 = qJD(2) * t51 + qJD(4) * t113;
t390 = t416 * t336;
t389 = t542 / 0.2e1 + t541 / 0.2e1;
t368 = t389 * t331;
t180 = t268 / 0.2e1 + t368;
t384 = pkin(4) * t471 - qJD(2) * t180;
t369 = t389 * t335;
t181 = -t269 / 0.2e1 - t369;
t383 = pkin(4) * t472 - qJD(2) * t181;
t21 = t266 * t386 + t357 + t430;
t375 = qJD(2) * t21 - t266 * t473;
t22 = t529 / 0.2e1 + t262 * t385 + t356;
t374 = qJD(2) * t22 + t262 * t473;
t42 = -qJD(4) * t87 - t480 * t494;
t53 = -qJD(2) * t87 + t262 * t474;
t373 = t335 * t390;
t248 = (t325 / 0.2e1 - t327 / 0.2e1) * t336;
t372 = -qJD(2) * t248 + t442;
t367 = qJD(2) * t321 * t331 + qJD(4) * t248;
t264 = t300 * t328;
t366 = qJD(2) * t264 + t410;
t354 = t364 * t549;
t351 = t364 * t547;
t319 = -t458 / 0.2e1;
t318 = t458 / 0.2e1;
t317 = t457 / 0.2e1;
t313 = t335 * t460;
t312 = t331 * t459;
t311 = t331 * t460;
t256 = t413 * t336;
t246 = t248 * qJD(5);
t241 = -t498 / 0.2e1 - t321 / 0.2e1 + t547;
t240 = -t331 / 0.2e1 + (t326 + t328) * t550;
t232 = (qJD(6) / 0.2e1 + t413) * t336;
t138 = t332 * t376 + t556;
t137 = t262 * t549 + t332 * t424 + t552;
t136 = -t494 / 0.2e1 - t376 * t336;
t135 = t262 * t545 + t330 * t427 + t551;
t125 = -t445 + t269 / 0.2e1 - t369;
t124 = -t289 - t268 / 0.2e1 + t368;
t112 = t351 + t352;
t110 = t364 * t550 + t353;
t99 = t381 + t408;
t98 = -t376 + t382;
t95 = t99 * qJD(3);
t94 = t98 * qJD(3);
t93 = t97 * qJD(3);
t92 = t96 * qJD(3);
t91 = qJD(4) * t134 + t460 * t494;
t90 = qJD(4) * t132 - t233 * t460;
t80 = -t418 - t119;
t79 = -t262 * t455 - t121;
t57 = t183 * t549 + t336 * t351 + (t332 * t428 + t491 / 0.2e1) * t329;
t56 = t182 * t548 + t331 * t350 + (t332 * t426 - t492 / 0.2e1) * t329;
t48 = qJD(4) * t131 + t482;
t47 = qJD(4) * t133 + t483;
t44 = t137 * qJD(4) - t404 * t494;
t43 = t138 * qJD(4) + t233 * t404;
t38 = t183 * t546 + t247 * t423 + t331 * t415 + t332 * t352 + t335 * t354;
t37 = t182 * t546 + t247 * t427 + t331 * t354 + t332 * t353 + t423 * t520;
t32 = t136 * qJD(4) - t237 * t455 - t483;
t31 = t135 * qJD(4) + t234 * t455 - t482;
t28 = t334 * t450 + t516 + t558 - t504 / 0.2e1;
t26 = -t503 - t517 / 0.2e1 + (t450 + t557) * t330;
t24 = -t528 / 0.2e1 + t379 + t568;
t23 = -t529 / 0.2e1 + t380 + t569;
t10 = t266 * t417 - t330 * t412 - t349 + t425 + t569;
t9 = t262 * t417 + t334 * t412 - t348 + t429 + t568;
t4 = t402 + t340;
t3 = t403 + t339;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t298, -t433, t298, t433 ((-pkin(2) * t333 + qJ(3) * t337) * qJD(2) + t333 * qJD(3)) * t329, 0, 0, 0, 0, 0 (t333 * t457 + t337 * t460) * t329 (-t333 * t459 + t337 * t458) * t329, 0, 0, 0, 0, 0 (t224 * t332 - t328 * t449) * qJD(2) + t37 * qJD(4) + t57 * qJD(5) (-t225 * t332 - t328 * t448) * qJD(2) + t38 * qJD(4) + t56 * qJD(5), 0, 0, 0, 0, 0 ((t501 - t513) * t332 - t494 * t447) * qJD(2) + t3 * qJD(4) + t455 * t345 (-(t500 + t514) * t332 + t233 * t447) * qJD(2) + t4 * qJD(4) + t455 * t346; 0, 0, 0, 0, 0, 0, t298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298 * t336 - t475, qJD(4) * t364 - t298 * t332, 0, 0, 0, 0, 0, qJD(2) * t37 + qJD(5) * t110 - t247 * t471, qJD(2) * t38 + qJD(5) * t112 + t247 * t472, 0, 0, 0, 0, 0, qJD(2) * t3 + t262 * t475 + t455 * t69, qJD(2) * t4 + t247 * t474 + t455 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t57 + qJD(4) * t110 - qJD(5) * t183, qJD(2) * t56 + qJD(4) * t112 + qJD(5) * t182, 0, 0, 0, 0, 0, t561, t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t561, t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t36 - qJD(5) * t54, -qJD(4) * t35 - qJD(5) * t55, 0, 0, 0, 0, 0, -qJD(4) * t1 - t342 * t455, -qJD(4) * t2 - t341 * t455; 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t314, t299 * qJD(4), 0, 0, 0, qJ(3) * t457 + t476, -qJ(3) * t459 + qJD(3) * t336, -t314 * t327 - t328 * t432, -qJD(5) * t264 + t332 * t410, -qJD(4) * t267 - t332 * t438, qJD(4) * t265 - t332 * t436, t314, qJD(4) * t88 + qJD(5) * t146 + t335 * t476, -qJD(4) * t89 - qJD(5) * t145 - t331 * t476 (qJD(4) * t237 + t455 * t494) * t233, t70 * qJD(4) + t100 * t455, t108 * qJD(4) - t494 * t570, t107 * qJD(4) + t233 * t570, t314, qJD(4) * t5 + qJD(5) * t33 + qJD(6) * t40 - t262 * t476, -qJD(4) * t6 - qJD(5) * t34 - qJD(6) * t39 - t266 * t476; 0, 0, 0, 0, 0, qJD(2), t481, 0, 0, 0, 0, 0, t460, t458, 0, 0, 0, 0, 0, qJD(5) * t241 + t313, qJD(5) * t240 - t311, 0, 0, 0, 0, 0, t455 * t99 - t435, t455 * t98 - t434; 0, 0, 0, 0, 0, 0, 0, -t431, t461, -t459, -t457, 0, -t338 * t459 + t443, -t338 * t457 - t444, -t246 + (-t327 * t458 - t442) * t332, t332 * t365 - 0.2e1 * t336 * t432, t441 - t478, t440 + t479, t256 (t331 * t411 - t446) * qJD(4) + t125 * qJD(5) + t396 (-pkin(9) * t497 + (pkin(4) * t335 + t507) * t332) * qJD(4) + t124 * qJD(5) + t397 (-t474 + t480) * t237 + t539, t484 + (t234 * t266 + t237 * t262) * qJD(4) + t540, t137 * t455 + t266 * t457 + t466, t138 * t455 - t262 * t457 + t467, t232 (-t234 * t322 - t257 * t262 + t336 * t393) * qJD(4) + t9 * qJD(5) + t24 * qJD(6) + t406 (-t196 * t336 - t237 * t322 - t257 * t266) * qJD(4) + t10 * qJD(5) + t23 * qJD(6) + t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, -t366, t331 * t390, t373, t317, qJD(3) * t241 + qJD(4) * t125 - qJD(5) * t215 - t391, qJD(3) * t240 + qJD(4) * t124 + qJD(5) * t214 - t392, -t42, t11, t44, t43, t317, qJD(4) * t9 + qJD(5) * t81 + qJD(6) * t26 - t401 + t95, qJD(4) * t10 - qJD(5) * t83 + qJD(6) * t28 - t398 + t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, t11, t44, t43, t317, qJD(4) * t24 + qJD(5) * t26 - qJD(6) * t72 - t400 + t95, qJD(4) * t23 + qJD(5) * t28 + qJD(6) * t71 - t399 + t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, -qJD(2), -t481, 0, 0, 0, 0, 0, -t460, -t458, 0, 0, 0, 0, 0, -qJD(5) * t239 - t313, -qJD(5) * t238 + t311, 0, 0, 0, 0, 0, -t455 * t96 + t435, -t455 * t97 + t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t459, -t457, 0, 0, 0, 0, 0, -t335 * t459 - t438, t312 - t436, 0, 0, 0, 0, 0, t136 * t455 + t262 * t459, t135 * t455 + t266 * t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t437 - t441 - t462, t439 - t440 - t463, 0, 0, 0, 0, 0, t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t36, qJD(2) * t35, 0, 0, 0, 0, 0, t1 * qJD(2) - t455 * t66, t2 * qJD(2) - t455 * t67; 0, 0, 0, 0, 0, 0, 0, t431, -t461, 0, 0, 0, -t443, t444, t327 * t431 - t246, t373 * t571, t437 + t478, -t439 - t479, -t256, qJD(5) * t181 - t396, qJD(5) * t180 - t397, -t237 * t480 + t539, -t484 + t540, -t134 * t455 - t466, -t132 * t455 - t467, -t232, -qJD(5) * t8 - qJD(6) * t21 - t406, -qJD(5) * t7 - qJD(6) * t22 - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455 * t133, -t455 * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432, t300 * qJD(5), 0, 0, 0, -pkin(4) * t470, -pkin(4) * t469, -t262 * t418, t455 * t113, 0, 0, 0, qJD(5) * t129 + t266 * t468, qJD(5) * t130 - t262 * t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, -t365, t313 + t469, -t311 - t470, t319, -pkin(9) * t469 - t383, pkin(9) * t470 - t384, -t53, t29, t79, t80, t319, t395 + t573, t394 + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t29, t79, t80, t319, -t375 + t573, -t374 + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t54, qJD(2) * t55, 0, 0, 0, 0, 0, t562, t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, t366 (t331 * t458 - t471) * t332, t335 * t431 + t312, t317, qJD(3) * t239 - qJD(4) * t181 + t391, qJD(3) * t238 - qJD(4) * t180 + t392, t42, -t11, t91, t90, t317, qJD(4) * t8 + qJD(6) * t25 + t401 + t92, qJD(4) * t7 + qJD(6) * t27 + t398 + t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t462, t463, 0, 0, 0, 0, 0, t47, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, t365, -t313, t311, t318, t383, t384, t53, -t29, t121, t119, t318, -t395 + t535, -t394 + t536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330 * t537, -t334 * t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330 * t420 + t531, -t334 * t420 + t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t11, t91, t90, t317, qJD(4) * t21 - qJD(5) * t25 + t400 + t92, qJD(4) * t22 - qJD(5) * t27 + t399 + t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t29, t121, t119, t318, t375 + t535, t374 + t536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330 * t538 - t531, t334 * t538 - t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
