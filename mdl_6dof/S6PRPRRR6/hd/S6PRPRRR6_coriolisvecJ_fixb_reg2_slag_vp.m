% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRRR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:48:47
% EndTime: 2019-03-08 20:48:59
% DurationCPUTime: 4.66s
% Computational Cost: add. (5822->452), mult. (12966->645), div. (0->0), fcn. (9147->10), ass. (0->221)
t156 = sin(qJ(4));
t160 = cos(qJ(4));
t184 = pkin(4) * t160 + pkin(9) * t156;
t110 = t184 * qJD(4) + qJD(3);
t183 = pkin(4) * t156 - pkin(9) * t160;
t124 = qJ(3) + t183;
t155 = sin(qJ(5));
t159 = cos(qJ(5));
t161 = cos(qJ(2));
t162 = -pkin(2) - pkin(8);
t226 = qJD(4) * t162;
t200 = t160 * t226;
t242 = t156 * t162;
t211 = t155 * t242;
t224 = qJD(5) * t159;
t152 = sin(pkin(6));
t235 = qJD(1) * t152;
t157 = sin(qJ(2));
t241 = t157 * t159;
t277 = -qJD(5) * t211 + t155 * t110 + t124 * t224 + t159 * t200 - (t155 * t161 + t156 * t241) * t235;
t245 = t155 * t157;
t296 = (-t156 * t245 + t159 * t161) * t235 - t159 * t110;
t138 = t159 * t242;
t194 = -t155 * t162 + pkin(5);
t243 = t156 * t159;
t215 = pkin(10) * t243;
t295 = -(-t138 + (pkin(10) * t160 - t124) * t155) * qJD(5) - (t194 * t160 + t215) * qJD(4) + t296;
t223 = qJD(5) * t160;
t198 = t159 * t223;
t228 = qJD(4) * t156;
t202 = t155 * t228;
t172 = -t198 + t202;
t294 = t172 * pkin(10) + t277;
t219 = t159 * qJD(4);
t231 = qJD(2) * t160;
t114 = t155 * t231 - t219;
t203 = t159 * t231;
t229 = qJD(4) * t155;
t116 = t203 + t229;
t154 = sin(qJ(6));
t158 = cos(qJ(6));
t176 = t114 * t154 - t158 * t116;
t56 = t158 * t114 + t116 * t154;
t280 = t56 * t176;
t232 = qJD(2) * t156;
t204 = t155 * t232;
t284 = -pkin(10) - pkin(9);
t209 = qJD(5) * t284;
t119 = t184 * qJD(2);
t207 = t161 * t235;
t181 = qJD(3) - t207;
t102 = t162 * qJD(2) + t181;
t153 = cos(pkin(6));
t234 = qJD(1) * t156;
t76 = t102 * t160 - t153 * t234;
t48 = t155 * t119 + t159 * t76;
t293 = -pkin(10) * t204 + t155 * t209 - t48;
t47 = t159 * t119 - t155 * t76;
t292 = -t159 * t209 + (pkin(5) * t160 + t215) * qJD(2) + t47;
t291 = t176 ^ 2 - t56 ^ 2;
t143 = qJD(5) + t232;
t247 = t153 * t160;
t196 = qJD(1) * t247;
t77 = t102 * t156 + t196;
t64 = qJD(4) * pkin(9) + t77;
t208 = t157 * t235;
t86 = t124 * qJD(2) + t208;
t33 = -t155 * t64 + t159 * t86;
t22 = -pkin(10) * t116 + t33;
t20 = pkin(5) * t143 + t22;
t34 = t155 * t86 + t159 * t64;
t23 = -pkin(10) * t114 + t34;
t266 = t158 * t23;
t10 = t154 * t20 + t266;
t225 = qJD(5) * t155;
t206 = qJD(2) * t152 * t157;
t227 = qJD(4) * t160;
t51 = t102 * t227 + (-qJD(4) * t153 + t206) * t234;
t78 = (t110 + t207) * qJD(2);
t14 = t155 * t78 + t159 * t51 + t86 * t224 - t64 * t225;
t217 = qJD(4) * qJD(5);
t238 = qJD(2) * t198 + t155 * t217;
t174 = qJD(2) * t202 - t238;
t11 = t174 * pkin(10) + t14;
t218 = qJD(2) * qJD(4);
t144 = t160 * t218;
t15 = -t34 * qJD(5) - t155 * t51 + t159 * t78;
t199 = t155 * t223;
t201 = t156 * t219;
t173 = t199 + t201;
t82 = t173 * qJD(2) - t159 * t217;
t8 = pkin(5) * t144 + pkin(10) * t82 + t15;
t2 = -t10 * qJD(6) - t11 * t154 + t158 * t8;
t63 = -qJD(4) * pkin(4) - t76;
t50 = pkin(5) * t114 + t63;
t290 = t50 * t176 + t2;
t139 = qJD(6) + t143;
t221 = qJD(6) * t158;
t222 = qJD(6) * t154;
t18 = t114 * t221 + t116 * t222 - t154 * t174 + t158 * t82;
t289 = t139 * t56 - t18;
t1 = (qJD(6) * t20 + t11) * t158 + t154 * t8 - t23 * t222;
t288 = t50 * t56 - t1;
t168 = t176 * qJD(6) + t154 * t82 + t158 * t174;
t287 = -t139 * t176 + t168;
t286 = -t143 * t33 + t14;
t285 = -t143 * t34 - t15;
t240 = t158 * t159;
t246 = t154 * t155;
t117 = -t240 + t246;
t93 = t117 * t156;
t118 = t154 * t159 + t155 * t158;
t91 = t118 * t156;
t88 = t155 * t124 + t138;
t150 = t156 ^ 2;
t151 = t160 ^ 2;
t237 = t150 - t151;
t216 = qJD(5) + qJD(6);
t186 = qJD(1) * t206;
t123 = t160 * t186;
t52 = qJD(4) * t77 - t123;
t165 = -(t156 * t76 - t160 * t77) * qJD(4) + t156 * t51 - t160 * t52;
t109 = t159 * t124;
t239 = t159 * t160;
t54 = -pkin(10) * t239 + t194 * t156 + t109;
t244 = t155 * t160;
t67 = -pkin(10) * t244 + t88;
t28 = t154 * t54 + t158 * t67;
t283 = t28 * qJD(6) + t294 * t154 + t295 * t158;
t27 = -t154 * t67 + t158 * t54;
t282 = -t27 * qJD(6) + t295 * t154 - t294 * t158;
t281 = pkin(5) * t155;
t134 = t284 * t155;
t135 = t284 * t159;
t81 = t134 * t154 - t135 * t158;
t279 = t81 * qJD(6) + t293 * t154 + t292 * t158;
t80 = t134 * t158 + t135 * t154;
t278 = -t80 * qJD(6) + t292 * t154 - t293 * t158;
t276 = -t88 * qJD(5) - t155 * t200 - t296;
t275 = t154 * t204 - t158 * t224 - t159 * t221 + t216 * t246 - t232 * t240;
t104 = t118 * qJD(2);
t66 = t216 * t118;
t274 = t156 * t104 + t66;
t273 = qJD(2) * pkin(2);
t249 = t152 * t161;
t100 = t153 * t156 + t160 * t249;
t272 = t100 * t52;
t269 = t154 * t23;
t268 = t155 * t63;
t267 = t156 * t63;
t265 = t159 * t33;
t264 = t159 * t63;
t263 = t52 * t155;
t262 = t52 * t159;
t261 = t82 * t155;
t260 = t82 * t156;
t259 = -t117 * qJD(2) + t118 * t227 - t216 * t93;
t94 = t117 * t160;
t258 = qJD(4) * t94 + t216 * t91 + t104;
t111 = (qJD(3) + t207) * qJD(2);
t256 = t111 * t157;
t255 = t114 * t143;
t254 = t116 * t114;
t233 = qJD(2) * qJ(3);
t122 = t208 + t233;
t253 = t122 * t161;
t252 = t143 * t155;
t251 = t143 * t156;
t250 = t143 * t159;
t164 = qJD(2) ^ 2;
t248 = t152 * t164;
t163 = qJD(4) ^ 2;
t236 = -t163 - t164;
t230 = qJD(2) * t161;
t220 = t116 * qJD(5);
t214 = t156 * t249;
t213 = t157 * t248;
t212 = t161 * t248;
t210 = t160 * t164 * t156;
t205 = t152 * t230;
t197 = t156 * t226;
t192 = qJD(2) * t88 + t34;
t190 = -t116 + t229;
t189 = qJD(5) * t156 + qJD(2);
t188 = t160 * t206;
t187 = t156 * t206;
t53 = t196 + (-qJD(2) * t281 + t102) * t156;
t185 = pkin(5) * t225 - t53;
t182 = -t122 + t208;
t101 = -t214 + t247;
t70 = -t101 * t155 + t152 * t241;
t71 = t101 * t159 + t152 * t245;
t31 = -t154 * t71 + t158 * t70;
t32 = t154 * t70 + t158 * t71;
t180 = -t155 * t34 - t265;
t179 = t155 * t33 - t159 * t34;
t175 = qJ(3) * t111 + qJD(3) * t122;
t171 = t182 - t233;
t170 = t174 * t159;
t167 = t181 * qJD(2) - t162 * t163 + t111;
t166 = t180 * qJD(5) + t14 * t159 - t15 * t155;
t148 = -pkin(5) * t159 - pkin(4);
t136 = t156 * t144;
t113 = t181 - t273;
t112 = (-t162 + t281) * t160;
t92 = t118 * t160;
t87 = t109 - t211;
t83 = -t172 * pkin(5) + t197;
t69 = -qJD(4) * t214 + t153 * t227 - t188;
t68 = -t100 * qJD(4) + t187;
t38 = -t222 * t244 + (t216 * t239 - t202) * t158 - t173 * t154;
t36 = -t154 * t202 + t158 * t201 + t66 * t160;
t30 = t238 * pkin(5) + t53 * qJD(4) - t123;
t25 = t70 * qJD(5) + t155 * t205 + t159 * t68;
t24 = -t71 * qJD(5) - t155 * t68 + t159 * t205;
t13 = t158 * t22 - t269;
t12 = -t154 * t22 - t266;
t9 = t158 * t20 - t269;
t4 = -t32 * qJD(6) - t154 * t25 + t158 * t24;
t3 = t31 * qJD(6) + t154 * t24 + t158 * t25;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213, -t212, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, t212 (t256 + (t253 + (t113 - t207) * t157) * qJD(2)) * t152, 0, 0, 0, 0, 0, 0, t156 * t212 + (-t69 + t188) * qJD(4), t160 * t212 + (-t68 - t187) * qJD(4) (-t156 * t68 + t160 * t69 + (-t100 * t156 - t101 * t160) * qJD(4)) * qJD(2), t272 + t101 * t51 + t68 * t77 - t69 * t76 + (t122 * t230 + t256) * t152, 0, 0, 0, 0, 0, 0, -t100 * t174 + t69 * t114 + t24 * t143 + t144 * t70, -t100 * t82 + t116 * t69 - t143 * t25 - t144 * t71, -t25 * t114 - t24 * t116 + t174 * t71 + t70 * t82, t14 * t71 + t15 * t70 + t24 * t33 + t25 * t34 + t63 * t69 + t272, 0, 0, 0, 0, 0, 0, -t100 * t168 + t139 * t4 + t144 * t31 + t56 * t69, -t100 * t18 - t139 * t3 - t144 * t32 - t176 * t69, t168 * t32 + t176 * t4 + t18 * t31 - t3 * t56, t1 * t32 + t10 * t3 + t100 * t30 + t2 * t31 + t4 * t9 + t50 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * qJD(2) * qJD(3) (-t253 + (-t113 - t273) * t157) * t235 + t175, -0.2e1 * t136, 0.2e1 * t237 * t218, -t163 * t156, 0.2e1 * t136, -t163 * t160, 0, t167 * t156 - t171 * t227, t160 * t167 + t171 * t228 (t150 + t151) * t186 - t165 (-t253 + (-t156 * t77 - t160 * t76) * t157) * t235 + t165 * t162 + t175, -t116 * t173 - t82 * t239 (t114 * t159 + t116 * t155) * t228 + (t170 + t261 + (t114 * t155 - t116 * t159) * qJD(5)) * t160, -t143 * t199 - t260 + (t116 * t160 + (qJD(2) * t151 - t251) * t159) * qJD(4), -t114 * t172 - t174 * t244, -t143 * t198 - t238 * t156 + (-t114 * t160 + (t237 * qJD(2) + t251) * t155) * qJD(4), t143 * t227 + t136, t276 * t143 + (t15 + (t114 * t162 - t268) * qJD(4)) * t156 + (-t162 * t238 + t263 + t63 * t224 + t114 * t208 + (t33 + (t87 + t211) * qJD(2)) * qJD(4)) * t160, -t277 * t143 + (-t14 + (t116 * t162 - t264) * qJD(4)) * t156 + (-t192 * qJD(4) + t116 * t208 + t162 * t82 - t225 * t63 + t262) * t160, -t88 * t238 + t87 * t82 - t276 * t116 - t277 * t114 + (t155 * t192 + t265) * t228 + (qJD(5) * t179 - t14 * t155 - t15 * t159) * t160, t63 * t197 + t14 * t88 + t15 * t87 + t277 * t34 + t276 * t33 + (-t162 * t52 + t208 * t63) * t160, t176 * t36 + t18 * t94, -t168 * t94 + t176 * t38 + t18 * t92 + t36 * t56, -t139 * t36 - t156 * t18 + (-qJD(2) * t94 - t176) * t227, -t168 * t92 + t38 * t56, -t139 * t38 + t156 * t168 + (-qJD(2) * t92 - t56) * t227, t139 * t227 + t136, -t112 * t168 + t156 * t2 + t30 * t92 + t38 * t50 + t56 * t83 - t283 * t139 + (t56 * t208 + (qJD(2) * t27 + t9) * qJD(4)) * t160, -t1 * t156 - t112 * t18 - t30 * t94 - t36 * t50 - t176 * t83 + t282 * t139 + (-t176 * t208 + (-qJD(2) * t28 - t10) * qJD(4)) * t160, -t1 * t92 - t10 * t38 + t168 * t28 - t176 * t283 + t18 * t27 + t2 * t94 + t282 * t56 + t36 * t9, t1 * t28 + t112 * t30 + t2 * t27 - t283 * t9 + (t160 * t208 + t83) * t50 - t282 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, t182 * qJD(2), 0, 0, 0, 0, 0, 0, t236 * t156, t236 * t160, 0, -qJD(2) * t122 + t165, 0, 0, 0, 0, 0, 0, -t160 * t238 - t189 * t250 + (t114 * t156 - t143 * t244) * qJD(4), t160 * t82 + t189 * t252 + (-t143 * t239 + (t116 - t203) * t156) * qJD(4) (t114 * t189 + t116 * t227 - t260) * t155 + (-t114 * t227 + t116 * t189 + t156 * t174) * t159, t180 * qJD(2) + (-qJD(4) * t179 - t52) * t160 + (qJD(4) * t63 + t166) * t156, 0, 0, 0, 0, 0, 0, t160 * t168 - t259 * t139 + (t156 * t56 - t231 * t91) * qJD(4), t160 * t18 + t258 * t139 + (-t156 * t176 + t231 * t93) * qJD(4), -t168 * t93 - t176 * t259 - t18 * t91 + t258 * t56, -t1 * t93 - t10 * t258 - t160 * t30 - t2 * t91 + t228 * t50 - t259 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, -t237 * t164, 0, -t210, 0, 0, -t122 * t231 + t123, -t182 * t232, 0, 0, t116 * t250 - t261 (-t82 - t255) * t159 + (t190 * t232 - t220 - t238) * t155, t143 * t224 + (t143 * t243 + t160 * t190) * qJD(2), t114 * t252 + t170, -t143 * t225 + (-t155 * t251 + (t114 + t219) * t160) * qJD(2), -t143 * t231, -pkin(4) * t238 - t262 - t47 * t143 - t77 * t114 + (-pkin(9) * t250 + t268) * qJD(5) + (-t33 * t160 + (qJD(4) * t183 + t267) * t155) * qJD(2), pkin(4) * t82 - t116 * t77 + t143 * t48 + t263 + (pkin(9) * t252 + t264) * qJD(5) + (t160 * t34 + (-pkin(9) * t227 + t267) * t159) * qJD(2), t48 * t114 + t47 * t116 + ((qJD(5) * t114 - t82) * pkin(9) + t285) * t155 + ((t174 + t220) * pkin(9) + t286) * t159, -pkin(4) * t52 + pkin(9) * t166 - t33 * t47 - t34 * t48 - t63 * t77, -t18 * t118 + t176 * t275, t117 * t18 + t118 * t168 + t176 * t274 + t275 * t56, -t275 * t139 + (qJD(4) * t118 + t176) * t231, -t117 * t168 + t274 * t56, -t274 * t139 + (-qJD(4) * t117 + t56) * t231, -t139 * t231, t117 * t30 - t148 * t168 + t185 * t56 + t274 * t50 - t279 * t139 + (qJD(4) * t80 - t9) * t231, t118 * t30 - t148 * t18 - t185 * t176 - t275 * t50 + t278 * t139 + (-qJD(4) * t81 + t10) * t231, -t1 * t117 - t10 * t274 - t118 * t2 + t168 * t81 - t176 * t279 + t18 * t80 + t275 * t9 + t278 * t56, t1 * t81 - t10 * t278 + t148 * t30 + t185 * t50 + t2 * t80 - t279 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, -t114 ^ 2 + t116 ^ 2, t255 - t82, -t254, t116 * t143 + t174, t144, -t116 * t63 - t285, t114 * t63 - t286, 0, 0, -t280, t291, t289, t280, t287, t144, -t12 * t139 + (-t116 * t56 - t139 * t222 + t144 * t158) * pkin(5) + t290, t13 * t139 + (t116 * t176 - t139 * t221 - t144 * t154) * pkin(5) + t288, -t10 * t176 - t12 * t176 + t13 * t56 - t56 * t9 + (t154 * t168 + t158 * t18 + (-t154 * t176 - t158 * t56) * qJD(6)) * pkin(5), -t10 * t13 - t12 * t9 + (t1 * t154 - t116 * t50 + t158 * t2 + (t10 * t158 - t154 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t291, t289, t280, t287, t144, t10 * t139 + t290, t139 * t9 + t288, 0, 0;];
tauc_reg  = t5;
