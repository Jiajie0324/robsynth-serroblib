% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR5_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR5_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR5_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR5_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:16:17
% EndTime: 2019-03-09 22:16:32
% DurationCPUTime: 5.12s
% Computational Cost: add. (7801->485), mult. (18667->626), div. (0->0), fcn. (13510->8), ass. (0->275)
t233 = sin(qJ(2));
t232 = sin(qJ(3));
t236 = cos(qJ(2));
t337 = t232 * t236;
t376 = cos(qJ(3));
t196 = t233 * t376 + t337;
t230 = sin(qJ(6));
t231 = sin(qJ(4));
t234 = cos(qJ(6));
t235 = cos(qJ(4));
t385 = -t230 * t235 + t231 * t234;
t119 = t385 * t196;
t321 = qJD(4) * t231;
t299 = qJD(1) * t376;
t323 = qJD(1) * t233;
t177 = t232 * t323 - t236 * t299;
t345 = t177 * t231;
t406 = t321 + t345;
t314 = qJD(2) + qJD(3);
t141 = t314 * t196;
t405 = t141 * qJD(1);
t317 = qJD(6) * t234;
t318 = qJD(6) * t230;
t320 = qJD(4) * t235;
t330 = t385 * t177 - t230 * t320 - t231 * t317 + t234 * t321 + t235 * t318;
t193 = t230 * t231 + t234 * t235;
t403 = qJD(6) - qJD(4);
t404 = (t177 - t403) * t193;
t378 = -pkin(8) - pkin(7);
t207 = t378 * t233;
t198 = qJD(1) * t207;
t209 = t378 * t236;
t200 = qJD(1) * t209;
t303 = t376 * t200;
t134 = t198 * t232 - t303;
t322 = qJD(3) * t232;
t284 = pkin(2) * t322 - t134;
t179 = -qJD(1) * t337 - t233 * t299;
t288 = t235 * t314;
t146 = -t179 * t231 - t288;
t253 = t235 * t179 - t231 * t314;
t271 = -t234 * t146 - t230 * t253;
t91 = t146 * t230 - t234 * t253;
t402 = -t271 ^ 2 + t91 ^ 2;
t221 = -pkin(2) * t236 - pkin(1);
t205 = t221 * qJD(1);
t109 = t177 * pkin(3) + t179 * pkin(9) + t205;
t370 = qJD(2) * pkin(2);
t184 = t198 + t370;
t132 = t232 * t184 - t303;
t114 = pkin(9) * t314 + t132;
t262 = -t232 * t233 + t236 * t376;
t251 = t262 * qJD(3);
t67 = t405 * pkin(3) + (-pkin(9) * t251 + (t233 * pkin(2) - pkin(9) * t262) * qJD(2)) * qJD(1);
t306 = qJD(2) * t378;
t286 = qJD(1) * t306;
t185 = t233 * t286;
t186 = t236 * t286;
t298 = qJD(3) * t376;
t75 = t184 * t298 + t185 * t376 + t232 * t186 + t200 * t322;
t294 = t109 * t321 + t114 * t320 + t231 * t75 - t235 * t67;
t379 = pkin(4) + pkin(5);
t140 = qJD(2) * t262 + t251;
t241 = t140 * qJD(1);
t83 = -qJD(4) * t288 - t179 * t321 - t235 * t241;
t5 = t83 * pkin(10) - t379 * t405 + t294;
t121 = t405 * qJ(5);
t174 = qJD(4) + t177;
t163 = t174 * qJD(5);
t258 = -t109 * t320 + t114 * t321 - t231 * t67 - t235 * t75;
t12 = t121 + t163 - t258;
t84 = -qJD(4) * t253 + t231 * t241;
t7 = pkin(10) * t84 + t12;
t307 = -t230 * t7 + t234 * t5;
t180 = t232 * t200;
t131 = t376 * t184 + t180;
t113 = -pkin(3) * t314 - t131;
t250 = -qJ(5) * t253 - t113;
t42 = -t146 * t379 + t250;
t401 = t42 * t91 - t307;
t315 = qJD(1) * qJD(2);
t399 = -0.2e1 * t315;
t336 = t235 * t405;
t398 = pkin(9) * (t174 * t321 - t336);
t375 = pkin(4) * t405;
t19 = t294 - t375;
t397 = t12 * t235 + t19 * t231;
t396 = t271 * t91;
t395 = t42 * t271;
t344 = t177 * t235;
t325 = -pkin(4) * t345 + qJ(5) * t344;
t394 = -t325 + t284;
t165 = t174 * qJ(5);
t63 = t231 * t109 + t235 * t114;
t52 = t165 + t63;
t57 = t146 * pkin(4) - t250;
t393 = t52 * t179 - t57 * t344;
t76 = t184 * t322 + t232 * t185 - t376 * t186 - t200 * t298;
t248 = -t83 * qJ(5) - qJD(5) * t253 - t76;
t21 = pkin(4) * t84 - t248;
t392 = -t21 * t235 + t57 * t321;
t219 = pkin(2) * t232 + pkin(9);
t287 = pkin(2) * t298;
t247 = -t219 * t321 + t235 * t287;
t172 = t179 * qJ(5);
t127 = -pkin(3) * t179 + pkin(9) * t177;
t112 = pkin(2) * t323 + t127;
t135 = t198 * t376 + t180;
t327 = t231 * t112 + t235 * t135;
t55 = -t172 + t327;
t391 = -t55 + t247;
t62 = t235 * t109 - t231 * t114;
t331 = qJD(5) - t62;
t128 = t231 * t135;
t275 = t231 * t287;
t390 = t128 - t275;
t173 = pkin(4) * t321 - qJ(5) * t320 - t231 * qJD(5);
t389 = -t406 * pkin(5) - t173;
t388 = t406 * pkin(10);
t225 = t231 * qJ(5);
t387 = t235 * pkin(4) + t225;
t386 = t376 * t207 + t232 * t209;
t316 = qJD(6) - t174;
t384 = -qJD(6) + t316;
t26 = t146 * t317 + t230 * t84 - t234 * t83 + t253 * t318;
t382 = t271 * t316 + t26;
t151 = t232 * t207 - t209 * t376;
t199 = t233 * t306;
t201 = t236 * t306;
t94 = t151 * qJD(3) + t232 * t199 - t376 * t201;
t381 = t253 ^ 2;
t380 = t174 ^ 2;
t377 = pkin(9) - pkin(10);
t374 = pkin(10) * t177;
t373 = t179 * pkin(4);
t372 = -pkin(10) + t219;
t371 = pkin(2) * qJD(3);
t369 = t253 * t57;
t368 = t21 * t231;
t44 = pkin(10) * t146 + t63;
t38 = t165 + t44;
t366 = t230 * t38;
t365 = t235 * t84;
t363 = t83 * t231;
t362 = t389 - t394;
t74 = t132 + t325;
t361 = t74 + t389;
t360 = t173 + t394;
t359 = t173 - t74;
t358 = qJ(5) * t235;
t357 = t405 * t262;
t356 = t405 * t219;
t355 = t140 * t231;
t354 = t140 * t235;
t353 = t146 * qJ(5);
t352 = t146 * t174;
t351 = t146 * t231;
t350 = t253 * t146;
t349 = t253 * t174;
t348 = t253 * t235;
t347 = t316 * t179;
t346 = t174 * t179;
t343 = t179 * t177;
t342 = t196 * t231;
t341 = t196 * t235;
t339 = t231 * t405;
t239 = qJD(1) ^ 2;
t335 = t236 * t239;
t238 = qJD(2) ^ 2;
t334 = t238 * t233;
t333 = t238 * t236;
t332 = pkin(10) * t253 + t331;
t328 = t231 * t127 + t235 * t131;
t130 = -pkin(3) * t262 - pkin(9) * t196 + t221;
t326 = t231 * t130 + t235 * t151;
t324 = t233 ^ 2 - t236 ^ 2;
t319 = qJD(5) * t235;
t30 = -t174 * t379 + t332;
t313 = t230 * t5 + t234 * t7 + t30 * t317;
t311 = pkin(3) + t387;
t309 = t233 * t370;
t308 = t379 * t179;
t208 = t377 * t235;
t58 = -t172 + t328;
t68 = -qJ(5) * t262 + t326;
t305 = t231 * t376;
t304 = t235 * t376;
t301 = t196 * t321;
t300 = t196 * t320;
t192 = t372 * t235;
t297 = t233 * t315;
t296 = -t230 * t83 - t234 * t84;
t295 = pkin(1) * t399;
t123 = t231 * t131;
t293 = t235 * t127 - t123;
t143 = t231 * t151;
t292 = t235 * t130 - t143;
t290 = t316 ^ 2;
t289 = t174 * t235;
t220 = -pkin(2) * t376 - pkin(3);
t285 = t113 * t320 - t63 * t179 + t76 * t231;
t191 = t372 * t231;
t283 = qJD(6) * t191 + t388 + t391;
t282 = (-t112 + t374) * t235 + t308 + t390 + t403 * t192;
t206 = t377 * t231;
t281 = -pkin(9) * t321 + qJD(6) * t206 + t388 - t58;
t280 = t123 + (-t127 + t374) * t235 + t308 + t403 * t208;
t279 = pkin(4) * t231 - t358;
t16 = t230 * t30 + t234 * t38;
t49 = t143 + (-pkin(10) * t196 - t130) * t235 + t379 * t262;
t54 = pkin(10) * t342 + t68;
t278 = -t230 * t54 + t234 * t49;
t277 = t230 * t49 + t234 * t54;
t51 = -pkin(4) * t174 + t331;
t276 = -t231 * t52 + t235 * t51;
t274 = qJ(5) * t234 - t230 * t379;
t273 = -qJ(5) * t230 - t234 * t379;
t272 = t113 * t177 - t356;
t82 = pkin(3) * t141 - pkin(9) * t140 + t309;
t93 = qJD(3) * t386 + t376 * t199 + t232 * t201;
t269 = -t130 * t321 - t151 * t320 - t231 * t93 + t235 * t82;
t268 = -t51 * t179 + t392;
t267 = t113 * t321 + t62 * t179 - t76 * t235;
t266 = -t318 * t38 + t313;
t265 = t320 * t57 + t368;
t264 = t174 * t63 - t294;
t263 = -t231 * t379 + t358;
t188 = t220 - t387;
t260 = t300 + t355;
t259 = t301 - t354;
t257 = t130 * t320 - t151 * t321 + t231 * t82 + t235 * t93;
t13 = -t379 * t84 + t248;
t15 = t234 * t30 - t366;
t256 = t13 * t193 - t15 * t179 - t330 * t42;
t255 = t13 * t385 + t16 * t179 + t404 * t42;
t254 = t205 * t179 - t76;
t120 = t193 * t196;
t252 = (-t174 * t320 - t339) * pkin(9);
t20 = t141 * qJ(5) - qJD(5) * t262 + t257;
t249 = t174 * t62 + t258;
t246 = t397 - t406 * t52 + (t320 + t344) * t51;
t27 = qJD(6) * t91 + t296;
t245 = qJD(4) * t276 + t397;
t244 = -t363 - t365 + (-t348 + t351) * qJD(4);
t243 = t205 * t177 - t75;
t226 = t235 * pkin(5);
t189 = t226 + t311;
t164 = t226 - t188;
t98 = -t177 ^ 2 + t179 ^ 2;
t97 = -t179 * t314 - t405;
t96 = t177 * t314 + t241;
t95 = -pkin(4) * t253 + t353;
t92 = t196 * t279 - t386;
t70 = t196 * t263 + t386;
t69 = pkin(4) * t262 - t292;
t66 = t253 * t379 - t353;
t60 = -t293 + t373;
t56 = -t235 * t112 + t128 + t373;
t50 = -t83 + t352;
t37 = t174 * t289 - t179 * t253 + t339;
t36 = -t146 * t179 - t231 * t380 + t336;
t35 = -t253 * t289 - t363;
t34 = qJD(6) * t120 - t140 * t385 - t230 * t301 - t234 * t300;
t33 = t119 * t403 + t193 * t140;
t28 = t279 * t140 + (qJD(4) * t387 - t319) * t196 + t94;
t25 = t263 * t140 + (t319 + (-t235 * t379 - t225) * qJD(4)) * t196 - t94;
t24 = -t141 * pkin(4) - t269;
t23 = t179 * t271 + t193 * t405 + t316 * t330;
t22 = -t179 * t91 + t316 * t404 - t385 * t405;
t17 = (-t83 - t352) * t235 + (-t84 + t349) * t231;
t14 = pkin(10) * t260 + t20;
t10 = pkin(10) * t259 - t141 * t379 - t269;
t2 = t26 * t385 + t404 * t91;
t1 = -t193 * t26 - t27 * t385 - t271 * t404 + t330 * t91;
t3 = [0, 0, 0, 0.2e1 * t236 * t297, t324 * t399, t333, -t334, 0, -pkin(7) * t333 + t233 * t295, pkin(7) * t334 + t236 * t295, -t179 * t140 + t196 * t241, -t140 * t177 + t179 * t141 - t196 * t405 + t241 * t262, t140 * t314, -t141 * t314, 0, t221 * t405 + t205 * t141 - t94 * t314 + (-qJD(1) * t262 + t177) * t309, pkin(2) * t196 * t297 + t205 * t140 - t179 * t309 + t221 * t241 - t314 * t93, t253 * t259 - t341 * t83 (-t146 * t235 + t231 * t253) * t140 + (t363 - t365 + (t348 + t351) * qJD(4)) * t196, -t141 * t253 - t174 * t259 + t196 * t336 + t262 * t83, -t146 * t141 - t174 * t260 - t196 * t339 + t262 * t84, t141 * t174 - t357, t113 * t260 + t62 * t141 + t94 * t146 + t174 * t269 + t262 * t294 + t292 * t405 + t342 * t76 - t386 * t84, -t113 * t259 - t63 * t141 - t174 * t257 - t253 * t94 - t258 * t262 - t326 * t405 + t341 * t76 + t386 * t83, -t51 * t141 + t28 * t146 - t24 * t174 + t19 * t262 + t196 * t265 + t355 * t57 - t405 * t69 + t92 * t84, -t20 * t146 - t24 * t253 - t68 * t84 - t69 * t83 + t276 * t140 + (-t12 * t231 + t19 * t235 + (-t231 * t51 - t235 * t52) * qJD(4)) * t196, -t12 * t262 + t52 * t141 + t20 * t174 + t196 * t392 + t253 * t28 - t57 * t354 + t405 * t68 + t92 * t83, t12 * t68 + t19 * t69 + t20 * t52 + t21 * t92 + t24 * t51 + t28 * t57, t120 * t26 + t33 * t91, t119 * t26 - t120 * t27 - t271 * t33 - t34 * t91, -t120 * t405 - t141 * t91 + t26 * t262 + t316 * t33, -t119 * t405 + t141 * t271 - t262 * t27 - t316 * t34, -t141 * t316 - t357 (t234 * t10 - t230 * t14) * t316 - t278 * t405 + t307 * t262 - t15 * t141 + t25 * t271 + t70 * t27 - t13 * t119 + t42 * t34 + (-t16 * t262 - t277 * t316) * qJD(6) -(qJD(6) * t278 + t230 * t10 + t234 * t14) * t316 + t277 * t405 - t266 * t262 + t16 * t141 + t25 * t91 + t70 * t26 + t13 * t120 + t42 * t33; 0, 0, 0, -t233 * t335, t324 * t239, 0, 0, 0, t239 * pkin(1) * t233, pkin(1) * t335, -t343, t98, t96, t97, 0, t134 * t314 + (-t177 * t323 - t314 * t322) * pkin(2) + t254, t135 * t314 + (t179 * t323 - t298 * t314) * pkin(2) + t243, t35, t17, t37, t36, t346, t220 * t84 + t272 * t231 + t284 * t146 + ((-qJD(4) * t219 - t112) * t235 + t390) * t174 + t267, -t220 * t83 + t272 * t235 - t284 * t253 + (-t247 + t327) * t174 + t285, t188 * t84 + (t177 * t57 - t356) * t231 + t360 * t146 + (-t219 * t320 - t275 + t56) * t174 + t268, t55 * t146 + t56 * t253 + (-t146 * t304 - t253 * t305) * t371 + t244 * t219 + t246, t188 * t83 - t368 + (-qJD(4) * t57 + t356) * t235 + t360 * t253 + t391 * t174 + t393, t21 * t188 - t51 * t56 - t52 * t55 + t360 * t57 + (t304 * t52 + t305 * t51) * t371 + t245 * t219, t2, t1, t22, t23, -t347 -(t191 * t234 - t192 * t230) * t405 + t164 * t27 + t362 * t271 - (t230 * t283 + t234 * t282) * t316 + t256 (t191 * t230 + t192 * t234) * t405 + t164 * t26 + t362 * t91 - (-t230 * t282 + t234 * t283) * t316 + t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343, t98, t96, t97, 0, t132 * t314 + t254, t131 * t314 + t243, t35, t17, t37, t36, t346, -pkin(3) * t84 + t113 * t345 - t132 * t146 - t174 * t293 + t252 + t267, pkin(3) * t83 + t113 * t344 + t132 * t253 + t174 * t328 + t285 + t398, t146 * t359 + t60 * t174 - t311 * t84 + t345 * t57 + t252 + t268, pkin(9) * t244 + t58 * t146 + t253 * t60 + t246, -t58 * t174 + t253 * t359 - t311 * t83 - t265 + t393 - t398, pkin(9) * t245 - t21 * t311 + t359 * t57 - t51 * t60 - t52 * t58, t2, t1, t22, t23, -t347 -(t206 * t234 - t208 * t230) * t405 + t189 * t27 + t361 * t271 - (t230 * t281 + t234 * t280) * t316 + t256 (t206 * t230 + t208 * t234) * t405 + t189 * t26 + t361 * t91 - (-t230 * t280 + t234 * t281) * t316 + t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t350, -t146 ^ 2 + t381, t50, -t84 - t349, t405, t113 * t253 + t264, t113 * t146 + t249, -t146 * t95 + t264 + t369 + 0.2e1 * t375, pkin(4) * t83 - t84 * qJ(5) - (t52 - t63) * t253 + (t51 - t331) * t146, -t146 * t57 - t253 * t95 + 0.2e1 * t121 + 0.2e1 * t163 - t249, -t19 * pkin(4) + t12 * qJ(5) + t331 * t52 - t51 * t63 - t57 * t95, -t396, -t402, -t382, -t316 * t91 + t27, t405, -t273 * t405 - t66 * t271 - (t230 * t332 + t234 * t44) * t316 + (-t274 * t316 + t16) * qJD(6) + t401, t274 * t405 - t66 * t91 - t395 - (-t230 * t44 + t234 * t332) * t316 + (-t273 * t316 - t366) * qJD(6) + t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405 - t350, t50, -t380 - t381, -t174 * t52 + t19 - t369, 0, 0, 0, 0, 0, -t230 * t290 - t234 * t405 + t253 * t271, t230 * t405 - t234 * t290 + t253 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t396, t402, t382, t384 * t91 - t296, -t405, t16 * t384 - t401, t15 * t316 - t266 + t395;];
tauc_reg  = t3;
