% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR5_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR5_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR5_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR5_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR5_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR5_invdynJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:16:27
% EndTime: 2019-03-09 22:16:44
% DurationCPUTime: 8.58s
% Computational Cost: add. (9644->596), mult. (21201->745), div. (0->0), fcn. (15669->12), ass. (0->327)
t277 = sin(qJ(2));
t276 = sin(qJ(3));
t281 = cos(qJ(2));
t413 = t276 * t281;
t468 = cos(qJ(3));
t214 = t277 * t468 + t413;
t387 = qJD(2) + qJD(3);
t146 = t387 * t214;
t371 = t468 * t281;
t389 = t277 * qJDD(1);
t102 = qJD(1) * t146 - qJDD(1) * t371 + t276 * t389;
t101 = qJDD(4) + t102;
t278 = sin(qJ(1));
t282 = cos(qJ(1));
t349 = g(1) * t282 + g(2) * t278;
t366 = qJD(1) * t468;
t199 = -qJD(1) * t413 - t277 * t366;
t275 = sin(qJ(4));
t280 = cos(qJ(4));
t311 = t280 * t199 - t275 * t387;
t283 = -pkin(8) - pkin(7);
t390 = qJD(1) * qJD(2);
t363 = t281 * t390;
t149 = qJDD(2) * pkin(2) - t283 * (-t363 - t389);
t364 = t277 * t390;
t388 = t281 * qJDD(1);
t157 = t283 * (-t364 + t388);
t229 = t283 * t277;
t216 = qJD(1) * t229;
t452 = qJD(2) * pkin(2);
t204 = t216 + t452;
t231 = t283 * t281;
t218 = qJD(1) * t231;
t365 = qJD(3) * t468;
t397 = qJD(3) * t276;
t353 = -t468 * t149 - t276 * t157 + t204 * t397 - t218 * t365;
t385 = qJDD(2) + qJDD(3);
t60 = -pkin(3) * t385 + t353;
t320 = -t276 * t277 + t371;
t145 = t387 * t320;
t291 = t145 * qJD(1);
t289 = t214 * qJDD(1) + t291;
t355 = t280 * t387;
t396 = qJD(4) * t275;
t73 = -qJD(4) * t355 - t199 * t396 - t275 * t385 - t280 * t289;
t294 = -t73 * qJ(5) - qJD(5) * t311 - t60;
t470 = pkin(4) + pkin(5);
t74 = -qJD(4) * t311 + t275 * t289 - t280 * t385;
t10 = -t470 * t74 + t294;
t273 = qJ(2) + qJ(3);
t267 = cos(t273);
t457 = g(3) * t267;
t502 = t10 - t457;
t274 = sin(qJ(6));
t279 = cos(qJ(6));
t478 = -t274 * t280 + t275 * t279;
t125 = t478 * t214;
t398 = qJD(1) * t277;
t197 = t276 * t398 - t281 * t366;
t427 = t197 * t275;
t501 = t396 + t427;
t409 = t282 * t275;
t412 = t278 * t280;
t190 = t267 * t409 - t412;
t410 = t280 * t282;
t415 = t275 * t278;
t191 = t267 * t410 + t415;
t117 = t190 * t279 - t191 * t274;
t266 = sin(t273);
t168 = t478 * t266;
t262 = t281 * pkin(2) + pkin(1);
t227 = t262 * qJD(1);
t114 = pkin(3) * t197 + pkin(9) * t199 - t227;
t372 = t468 * t218;
t136 = t276 * t204 - t372;
t121 = pkin(9) * t387 + t136;
t395 = qJD(4) * t280;
t251 = pkin(2) * t364;
t481 = -pkin(9) * t214 - t262;
t46 = t102 * pkin(3) - pkin(9) * t291 + qJDD(1) * t481 + t251;
t300 = t276 * t149 - t157 * t468 + t204 * t365 + t218 * t397;
t59 = pkin(9) * t385 + t300;
t356 = -t114 * t396 - t121 * t395 - t275 * t59 + t280 * t46;
t336 = qJDD(5) - t356;
t4 = pkin(10) * t73 - t101 * t470 + t336;
t193 = qJD(4) + t197;
t180 = t193 * qJD(5);
t316 = t114 * t395 - t121 * t396 + t275 * t46 + t280 * t59;
t98 = t101 * qJ(5);
t12 = t180 + t316 + t98;
t6 = pkin(10) * t74 + t12;
t376 = -t274 * t6 + t279 * t4;
t158 = -t199 * t275 - t355;
t200 = t276 * t218;
t135 = t468 * t204 + t200;
t120 = -pkin(3) * t387 - t135;
t308 = -qJ(5) * t311 - t120;
t45 = -t158 * t470 + t308;
t188 = t267 * t415 + t410;
t189 = t267 * t412 - t409;
t477 = t188 * t279 - t189 * t274;
t93 = t158 * t274 - t279 * t311;
t500 = g(1) * t117 + g(2) * t477 + g(3) * t168 + t45 * t93 - t376;
t392 = qJD(6) * t279;
t393 = qJD(6) * t274;
t406 = t478 * t197 - t274 * t395 - t275 * t392 + t279 * t396 + t280 * t393;
t211 = t274 * t275 + t279 * t280;
t496 = qJD(6) - qJD(4);
t499 = (t197 - t496) * t211;
t139 = t216 * t276 - t372;
t352 = pkin(2) * t397 - t139;
t420 = t266 * t282;
t421 = t266 * t278;
t498 = g(1) * t420 + g(2) * t421;
t268 = t275 * qJ(5);
t343 = t280 * pkin(4) + t268;
t497 = t349 * t267;
t332 = -t279 * t158 - t274 * t311;
t495 = -t332 ^ 2 + t93 ^ 2;
t411 = t280 * t101;
t492 = pkin(9) * (t193 * t396 - t411);
t383 = pkin(3) + t343;
t467 = pkin(4) * t101;
t14 = t336 - t467;
t489 = t12 * t280 + t14 * t275;
t488 = t332 * t93;
t426 = t197 * t280;
t401 = -pkin(4) * t427 + qJ(5) * t426;
t487 = -t401 + t352;
t260 = pkin(2) * t276 + pkin(9);
t354 = pkin(2) * t365;
t306 = -t260 * t396 + t280 * t354;
t187 = t199 * qJ(5);
t131 = -pkin(3) * t199 + pkin(9) * t197;
t119 = pkin(2) * t398 + t131;
t140 = t216 * t468 + t200;
t403 = t275 * t119 + t280 * t140;
t63 = -t187 + t403;
t486 = -t63 + t306;
t314 = t211 * t266;
t75 = t280 * t114 - t275 * t121;
t407 = qJD(5) - t75;
t192 = pkin(4) * t396 - qJ(5) * t395 - t275 * qJD(5);
t485 = -pkin(5) * t501 - t192;
t484 = t501 * pkin(10);
t483 = t468 * t229 + t231 * t276;
t482 = t267 * pkin(3) + t266 * pkin(9);
t132 = t275 * t140;
t337 = t275 * t354;
t479 = -t337 + t132;
t391 = qJD(6) - t193;
t476 = t391 - qJD(6);
t24 = t158 * t392 + t274 * t74 - t279 * t73 + t311 * t393;
t474 = t332 * t391 + t24;
t163 = t276 * t229 - t231 * t468;
t375 = qJD(2) * t283;
t217 = t277 * t375;
t219 = t281 * t375;
t96 = t163 * qJD(3) + t276 * t217 - t468 * t219;
t118 = t190 * t274 + t191 * t279;
t331 = t188 * t274 + t189 * t279;
t473 = -g(1) * t118 - g(2) * t331 - g(3) * t314 - t45 * t332;
t472 = t311 ^ 2;
t471 = t193 ^ 2;
t469 = pkin(9) - pkin(10);
t466 = pkin(4) * t199;
t465 = pkin(9) * t101;
t463 = pkin(10) * t197;
t255 = g(3) * t266;
t456 = g(3) * t275;
t455 = g(3) * t281;
t454 = -pkin(10) + t260;
t453 = pkin(9) * qJD(4);
t17 = t74 * pkin(4) - t294;
t451 = t17 * t275;
t76 = t275 * t114 + t280 * t121;
t450 = t193 * t76;
t65 = t158 * pkin(4) - t308;
t449 = t197 * t65;
t182 = t193 * qJ(5);
t48 = pkin(10) * t158 + t76;
t38 = t182 + t48;
t448 = t274 * t38;
t447 = t275 * t73;
t446 = t280 * t74;
t445 = t485 - t487;
t81 = t136 + t401;
t444 = t81 + t485;
t443 = t192 + t487;
t442 = t192 - t81;
t441 = qJ(5) * t158;
t440 = qJ(5) * t280;
t439 = t101 * t260;
t438 = t120 * t197;
t437 = t145 * t275;
t436 = t145 * t280;
t435 = t158 * t193;
t434 = t158 * t275;
t433 = t311 * t158;
t432 = t311 * t193;
t431 = t311 * t280;
t430 = t391 * t199;
t428 = t193 * t199;
t425 = t199 * t197;
t424 = t214 * t275;
t423 = t214 * t280;
t416 = t275 * t101;
t408 = pkin(10) * t311 + t407;
t404 = t275 * t131 + t280 * t135;
t134 = -pkin(3) * t320 + t481;
t402 = t275 * t134 + t280 * t163;
t400 = t498 * t280;
t271 = t277 ^ 2;
t399 = -t281 ^ 2 + t271;
t394 = qJD(5) * t280;
t31 = -t193 * t470 + t408;
t386 = t274 * t4 + t279 * t6 + t31 * t392;
t382 = t277 * t452;
t380 = t470 * t199;
t230 = t469 * t280;
t61 = t65 * t396;
t379 = t65 * t395;
t69 = -t187 + t404;
t78 = -qJ(5) * t320 + t402;
t378 = t267 * t456 - t275 * t498;
t377 = t255 + t497;
t374 = t275 * t468;
t373 = t280 * t468;
t370 = t214 * t396;
t369 = t214 * t395;
t368 = -t17 - t457;
t367 = -t60 - t457;
t210 = t454 * t280;
t362 = -t274 * t73 - t279 * t74;
t150 = t275 * t163;
t361 = t134 * t280 - t150;
t358 = t391 ^ 2;
t357 = t193 * t280;
t261 = -pkin(2) * t468 - pkin(3);
t351 = -g(1) * t188 + g(2) * t190;
t350 = g(1) * t189 - g(2) * t191;
t348 = g(1) * t278 - g(2) * t282;
t209 = t454 * t275;
t347 = qJD(6) * t209 + t484 + t486;
t346 = (-t119 + t463) * t280 + t380 + t479 + t496 * t210;
t228 = t469 * t275;
t345 = -pkin(9) * t396 + qJD(6) * t228 + t484 - t69;
t128 = t275 * t135;
t344 = t128 + (-t131 + t463) * t280 + t380 + t496 * t230;
t342 = pkin(4) * t275 - t440;
t20 = t274 * t31 + t279 * t38;
t53 = t150 + (-pkin(10) * t214 - t134) * t280 + t470 * t320;
t62 = pkin(10) * t424 + t78;
t340 = -t274 * t62 + t279 * t53;
t339 = t274 * t53 + t279 * t62;
t54 = -pkin(4) * t193 + t407;
t55 = t182 + t76;
t338 = -t275 * t55 + t280 * t54;
t335 = qJ(5) * t279 - t274 * t470;
t334 = -qJ(5) * t274 - t279 * t470;
t333 = t438 - t439;
t86 = pkin(3) * t146 - pkin(9) * t145 + t382;
t95 = qJD(3) * t483 + t468 * t217 + t276 * t219;
t328 = -t134 * t396 - t163 * t395 - t275 * t95 + t280 * t86;
t327 = -t54 * t199 + t400 + t61;
t326 = t120 * t396 + t75 * t199 + t400;
t324 = t262 + t482;
t323 = t38 * t393 - t386;
t322 = -t275 * t470 + t440;
t206 = t261 - t343;
t321 = -0.2e1 * pkin(1) * t390 - pkin(7) * qJDD(2);
t318 = t369 + t437;
t317 = t370 - t436;
t315 = t134 * t395 - t163 * t396 + t275 * t86 + t280 * t95;
t126 = t211 * t214;
t310 = t120 * t395 - t76 * t199 + t60 * t275 + t378;
t23 = t146 * qJ(5) - qJD(5) * t320 + t315;
t307 = t55 * t199 - t65 * t426 - t378 - t451;
t305 = g(1) * t190 + g(2) * t188 + t266 * t456 + t356;
t285 = qJD(2) ^ 2;
t304 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t285 + t348;
t286 = qJD(1) ^ 2;
t303 = pkin(1) * t286 - pkin(7) * qJDD(1) + t349;
t25 = qJD(6) * t93 + t362;
t302 = -t227 * t199 - t353 - t457 + t498;
t301 = qJD(4) * t338 + t489;
t299 = -t447 - t446 + (-t431 + t434) * qJD(4);
t298 = -t311 * t65 + qJDD(5) - t305;
t19 = t279 * t31 - t448;
t297 = -t19 * t199 + t211 * t502 + t349 * t314 - t406 * t45;
t296 = t349 * t168 + t20 * t199 + t499 * t45 + t478 * t502;
t295 = -t377 + t489 - t501 * t55 + (t395 + t426) * t54;
t293 = g(1) * t191 + g(2) * t189 + t193 * t75 + t255 * t280 - t316;
t292 = -t227 * t197 - t300 + t377;
t288 = -g(3) * (t267 * t343 + t482) + t349 * t266 * t383 - t497 * pkin(9);
t269 = t280 * pkin(5);
t207 = t269 + t383;
t194 = -qJDD(1) * t262 + t251;
t181 = t269 - t206;
t103 = -t197 ^ 2 + t199 ^ 2;
t100 = -qJDD(6) + t101;
t97 = -pkin(4) * t311 + t441;
t94 = t214 * t342 - t483;
t85 = -t199 * t387 - t102;
t84 = t197 * t387 + t289;
t80 = t214 * t322 + t483;
t79 = pkin(4) * t320 - t361;
t77 = t311 * t470 - t441;
t71 = -t131 * t280 + t128 + t466;
t64 = -t119 * t280 + t132 + t466;
t39 = -t73 + t435;
t37 = qJD(6) * t126 - t145 * t478 - t274 * t370 - t279 * t369;
t36 = t125 * t496 + t211 * t145;
t33 = t193 * t357 - t199 * t311 + t416;
t32 = -t158 * t199 - t275 * t471 + t411;
t29 = -t311 * t357 - t447;
t28 = t342 * t145 + (qJD(4) * t343 - t394) * t214 + t96;
t27 = t322 * t145 + (t394 + (-t280 * t470 - t268) * qJD(4)) * t214 - t96;
t26 = -pkin(4) * t146 - t328;
t22 = t100 * t211 + t199 * t332 + t391 * t406;
t21 = -t100 * t478 - t199 * t93 + t391 * t499;
t18 = pkin(10) * t318 + t23;
t16 = pkin(10) * t317 - t146 * t470 - t328;
t15 = (-t73 - t435) * t280 + (-t74 + t432) * t275;
t7 = t24 * t478 + t499 * t93;
t1 = -t211 * t24 - t25 * t478 - t332 * t499 + t406 * t93;
t2 = [qJDD(1), t348, t349, qJDD(1) * t271 + 0.2e1 * t277 * t363, 0.2e1 * t277 * t388 - 0.2e1 * t390 * t399, qJDD(2) * t277 + t281 * t285, qJDD(2) * t281 - t277 * t285, 0, t277 * t321 + t281 * t304, -t277 * t304 + t281 * t321, -t199 * t145 + t214 * t289, -t214 * t102 - t145 * t197 + t199 * t146 + t289 * t320, t145 * t387 + t214 * t385, -t146 * t387 + t320 * t385, 0, -t262 * t102 - t227 * t146 - t194 * t320 + t197 * t382 + t267 * t348 + t385 * t483 - t387 * t96, -g(1) * t421 + g(2) * t420 - t227 * t145 - t163 * t385 + t194 * t214 - t199 * t382 - t262 * t289 - t387 * t95, t311 * t317 - t423 * t73 (-t158 * t280 + t275 * t311) * t145 + (t447 - t446 + (t431 + t434) * qJD(4)) * t214, -t146 * t311 - t193 * t317 + t214 * t411 + t320 * t73, -t146 * t158 - t193 * t318 - t214 * t416 + t320 * t74, -t101 * t320 + t146 * t193, t101 * t361 + t120 * t318 + t75 * t146 + t96 * t158 + t193 * t328 - t320 * t356 + t424 * t60 - t483 * t74 + t350, -t101 * t402 - t120 * t317 - t76 * t146 - t193 * t315 - t311 * t96 + t316 * t320 + t423 * t60 + t483 * t73 + t351, t65 * t437 - t101 * t79 + t14 * t320 - t146 * t54 + t158 * t28 - t193 * t26 + t74 * t94 + (t379 + t451) * t214 + t350, -t158 * t23 - t311 * t26 - t73 * t79 - t74 * t78 + t348 * t266 + t338 * t145 + (-t12 * t275 + t14 * t280 + (-t275 * t54 - t280 * t55) * qJD(4)) * t214, -t65 * t436 + t101 * t78 - t12 * t320 + t146 * t55 + t311 * t28 + t193 * t23 + t73 * t94 + (-t17 * t280 + t61) * t214 - t351, t12 * t78 + t55 * t23 + t17 * t94 + t65 * t28 + t14 * t79 + t54 * t26 - g(1) * (-pkin(4) * t189 - qJ(5) * t188) - g(2) * (pkin(4) * t191 + qJ(5) * t190) + (g(1) * t283 - g(2) * t324) * t282 + (g(1) * t324 + g(2) * t283) * t278, t126 * t24 + t36 * t93, t125 * t24 - t126 * t25 - t332 * t36 - t37 * t93, -t100 * t126 - t146 * t93 + t24 * t320 + t36 * t391, -t100 * t125 + t146 * t332 - t25 * t320 - t37 * t391, -t100 * t320 - t146 * t391 (t16 * t279 - t18 * t274) * t391 - t340 * t100 + t376 * t320 - t19 * t146 + t27 * t332 + t80 * t25 - t10 * t125 + t45 * t37 + g(1) * t331 - g(2) * t118 + (-t20 * t320 - t339 * t391) * qJD(6) -(qJD(6) * t340 + t16 * t274 + t18 * t279) * t391 + t339 * t100 + t323 * t320 + t20 * t146 + t27 * t93 + t80 * t24 + t10 * t126 + t45 * t36 + g(1) * t477 - g(2) * t117; 0, 0, 0, -t277 * t286 * t281, t399 * t286, t389, t388, qJDD(2), t277 * t303 - t455, g(3) * t277 + t281 * t303, -t425, t103, t84, t85, t385, t139 * t387 + (-t197 * t398 + t385 * t468 - t387 * t397) * pkin(2) + t302, t140 * t387 + (t199 * t398 - t276 * t385 - t365 * t387) * pkin(2) + t292, t29, t15, t33, t32, t428, t261 * t74 + t367 * t280 + t333 * t275 + t352 * t158 + ((-qJD(4) * t260 - t119) * t280 + t479) * t193 + t326, -t261 * t73 + t333 * t280 - t352 * t311 + (-t306 + t403) * t193 + t310, t206 * t74 + t368 * t280 + (-t439 + t449) * t275 + t443 * t158 + (-t260 * t395 - t337 + t64) * t193 + t327, t63 * t158 + t64 * t311 + (-t158 * t373 - t311 * t374) * qJD(3) * pkin(2) + t299 * t260 + t295, t206 * t73 + (-qJD(4) * t65 + t439) * t280 + t443 * t311 + t486 * t193 + t307, t17 * t206 - t55 * t63 - t54 * t64 + t443 * t65 + (-t455 + t349 * t277 + (t373 * t55 + t374 * t54) * qJD(3)) * pkin(2) + t301 * t260 + t288, t7, t1, t21, t22, -t430 -(t209 * t279 - t210 * t274) * t100 + t181 * t25 + t445 * t332 - (t274 * t347 + t279 * t346) * t391 + t297 (t209 * t274 + t210 * t279) * t100 + t181 * t24 + t445 * t93 - (-t274 * t346 + t279 * t347) * t391 + t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t425, t103, t84, t85, t385, t136 * t387 + t302, t135 * t387 + t292, t29, t15, t33, t32, t428, -pkin(3) * t74 + t128 * t193 - t136 * t158 + (t438 - t465) * t275 + ((-t131 - t453) * t193 + t367) * t280 + t326, pkin(3) * t73 + t120 * t426 + t136 * t311 + t193 * t404 + t310 + t492, t193 * t71 - t383 * t74 + (t449 - t465) * t275 + t442 * t158 + (-t193 * t453 + t368) * t280 + t327, pkin(9) * t299 + t158 * t69 + t311 * t71 + t295, -t193 * t69 + t311 * t442 - t383 * t73 + t307 - t379 - t492, pkin(9) * t301 - t17 * t383 + t442 * t65 - t54 * t71 - t55 * t69 + t288, t7, t1, t21, t22, -t430 -(t228 * t279 - t230 * t274) * t100 + t207 * t25 + t444 * t332 - (t274 * t345 + t279 * t344) * t391 + t297 (t228 * t274 + t230 * t279) * t100 + t207 * t24 + t444 * t93 - (-t274 * t344 + t279 * t345) * t391 + t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t433, -t158 ^ 2 + t472, t39, -t74 - t432, t101, t120 * t311 + t305 + t450, t120 * t158 + t293, -t158 * t97 - t298 + t450 + 0.2e1 * t467, pkin(4) * t73 - qJ(5) * t74 - (t55 - t76) * t311 + (t54 - t407) * t158, -t158 * t65 - t311 * t97 + 0.2e1 * t180 - t293 + 0.2e1 * t98, t12 * qJ(5) - t14 * pkin(4) - t65 * t97 - t54 * t76 - g(1) * (-pkin(4) * t190 + qJ(5) * t191) - g(2) * (-pkin(4) * t188 + qJ(5) * t189) + t407 * t55 + t342 * t255, -t488, -t495, -t474, -t391 * t93 + t25, t100, -t334 * t100 - t77 * t332 - (t274 * t408 + t279 * t48) * t391 + (-t335 * t391 + t20) * qJD(6) + t500, t335 * t100 - t77 * t93 - (-t274 * t48 + t279 * t408) * t391 + (-t334 * t391 - t448) * qJD(6) + t386 + t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t433 - t101, t39, -t471 - t472, -t193 * t55 + t298 - t467, 0, 0, 0, 0, 0, -t279 * t100 - t274 * t358 + t311 * t332, t274 * t100 - t279 * t358 + t311 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, t495, t474, t476 * t93 - t362, -t100, t20 * t476 - t500, t19 * t391 + t323 - t473;];
tau_reg  = t2;
