% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:16:21
% EndTime: 2019-03-09 22:17:08
% DurationCPUTime: 28.76s
% Computational Cost: add. (16939->968), mult. (33874->1167), div. (0->0), fcn. (37154->8), ass. (0->750)
t1057 = sin(qJ(3));
t658 = cos(qJ(2));
t637 = t1057 * t658;
t1058 = cos(qJ(3));
t655 = sin(qJ(2));
t638 = t1058 * t655;
t593 = -t638 - t637;
t1054 = pkin(4) * t593;
t654 = sin(qJ(4));
t1084 = -pkin(8) - pkin(7);
t617 = t1084 * t655;
t619 = t1084 * t658;
t759 = -t1057 * t619 - t1058 * t617;
t1128 = t759 * t654;
t1140 = -t1128 / 0.2e1;
t1144 = t1140 + t1054 / 0.2e1;
t591 = t1057 * t655 - t1058 * t658;
t388 = t654 * t591;
t657 = cos(qJ(4));
t391 = t657 * t591;
t596 = t1057 * t617;
t599 = t1058 * t619;
t920 = t596 - t599;
t1092 = -pkin(4) * t388 + qJ(5) * t391 + t920;
t1119 = pkin(5) * t388 - t1092;
t656 = cos(qJ(6));
t954 = t654 * t656;
t653 = sin(qJ(6));
t957 = t653 * t657;
t594 = t954 - t957;
t1136 = t1119 * t594;
t1146 = t1136 / 0.2e1;
t589 = t653 * t654 + t656 * t657;
t1137 = t1119 * t589;
t1145 = t1137 / 0.2e1;
t1086 = pkin(4) / 0.2e1;
t975 = t593 * t654;
t556 = pkin(4) * t975;
t730 = t556 - t759;
t944 = t657 * qJ(5);
t844 = t593 * t944;
t273 = -t730 + t844;
t1011 = t273 * t654;
t263 = t1011 / 0.2e1;
t613 = pkin(4) * t654 - t944;
t969 = t613 * t654;
t812 = -t969 / 0.2e1;
t1143 = t263 + (t812 + t1086) * t593 + t1144;
t860 = qJD(2) + qJD(3);
t859 = qJD(4) - qJD(6);
t362 = t589 * t593;
t1142 = -t362 / 0.2e1;
t1127 = t759 * t657;
t1141 = -t1127 / 0.2e1;
t1076 = t1128 / 0.2e1;
t385 = t653 * t591;
t1126 = t385 * qJD(1) + t653 * qJD(4);
t572 = t593 * qJ(5);
t1055 = pkin(2) * t655;
t1050 = t593 * pkin(3);
t1051 = t591 * pkin(9);
t434 = -t1050 + t1051;
t399 = t434 + t1055;
t369 = t654 * t399;
t935 = t369 / 0.2e1 + t1141;
t1139 = t935 - t572;
t647 = t654 * qJ(5);
t650 = t657 * pkin(4);
t1096 = -t647 - t650;
t855 = t1058 * pkin(2);
t641 = -t855 - pkin(3);
t569 = t641 + t1096;
t536 = t569 * t654;
t856 = pkin(3) - t1096;
t586 = t856 * t654;
t923 = t536 / 0.2e1 - t586 / 0.2e1;
t968 = t613 * t657;
t1138 = t968 - t923;
t1085 = pkin(4) + pkin(5);
t1135 = t1085 * t593 - t1128;
t945 = t656 * t593;
t359 = -t593 * t957 + t654 * t945;
t146 = t362 * t589 / 0.2e1 - t359 * t594 / 0.2e1;
t780 = t860 * t594;
t1134 = -t146 * qJD(1) + t589 * t780;
t1123 = t1092 * t654;
t1052 = t591 * pkin(4);
t1098 = t920 * t654;
t642 = -pkin(2) * t658 - pkin(1);
t1049 = t593 * pkin(9);
t762 = t591 * pkin(3) + t1049;
t698 = t642 + t762;
t243 = -t657 * t698 + t1098;
t215 = t243 - t1052;
t1133 = (t215 - t1123) * t593;
t226 = (pkin(5) * t654 - t944) * t593 + t730;
t520 = t591 * t954;
t358 = -t391 * t653 + t520;
t974 = t593 * t657;
t703 = pkin(10) * t974 + t243;
t678 = -t1085 * t591 + t703;
t133 = t656 * t678;
t1097 = t920 * t657;
t244 = t654 * t698 + t1097;
t571 = t591 * qJ(5);
t214 = t571 + t244;
t555 = pkin(10) * t975;
t155 = -t555 + t214;
t963 = t653 * t155;
t85 = -t133 + t963;
t1132 = t1119 * t359 + t226 * t358 - t85 * t593;
t673 = t653 * t678;
t950 = t656 * t155;
t86 = t673 + t950;
t979 = t591 * t589;
t1131 = -t1119 * t362 - t226 * t979 - t86 * t593;
t1122 = t1092 * t657;
t1130 = t273 * t391 + (-t214 + t1122) * t593;
t854 = t1057 * pkin(2);
t640 = t854 + pkin(9);
t648 = t654 * pkin(10);
t574 = t654 * t640 - t648;
t576 = (-pkin(10) + t640) * t657;
t291 = t656 * t574 - t653 * t576;
t1129 = t859 * t291;
t1073 = -t1097 / 0.2e1;
t900 = qJD(1) * t593;
t450 = t591 * t900;
t575 = -t637 / 0.2e1 - t638 / 0.2e1;
t327 = t575 * qJD(4) + t450;
t1125 = -qJD(6) * t653 + t1126;
t1124 = t1092 * t273;
t1014 = t1092 * t856;
t1100 = t860 * t593;
t1120 = t591 * t1100;
t904 = qJD(1) * t362;
t1118 = t146 * t860 + t359 * t904;
t1117 = (t243 - t1098) * t593;
t1116 = (t244 - t1097) * t593;
t1099 = t860 * t654;
t1060 = -t657 / 0.2e1;
t805 = t589 * t1060;
t1061 = t654 / 0.2e1;
t809 = t359 * t1061;
t189 = t809 + (t805 - t656 / 0.2e1) * t593;
t118 = t189 * qJD(1) + t1099 * t589;
t1059 = t657 / 0.2e1;
t1063 = -t653 / 0.2e1;
t956 = t654 * t362;
t187 = t956 / 0.2e1 + (t1059 * t594 + t1063) * t593;
t119 = -t187 * qJD(1) + t1099 * t594;
t1115 = t860 * t759;
t786 = t653 * t574 + t656 * t576;
t1114 = t859 * t786;
t1048 = t654 * pkin(9);
t616 = -t648 + t1048;
t618 = (pkin(9) - pkin(10)) * t657;
t785 = t653 * t616 + t656 * t618;
t1113 = t859 * t785;
t862 = t657 * qJD(5);
t679 = qJD(4) * t1096 + t862;
t1069 = t591 / 0.2e1;
t649 = t657 * pkin(5);
t570 = t649 + t856;
t718 = t785 * t1069 + t1142 * t570;
t514 = t649 - t569;
t720 = t786 * t1069 + t1142 * t514;
t107 = t359 * t589 + t362 * t594;
t131 = t359 ^ 2 - t362 ^ 2;
t1112 = qJD(1) * t131 + t107 * t860;
t344 = t589 ^ 2 - t594 ^ 2;
t1111 = qJD(1) * t107 + t344 * t860;
t349 = t656 * t616 - t653 * t618;
t1110 = t859 * t349;
t901 = qJD(1) * t591;
t775 = qJD(4) + t901;
t747 = -qJD(6) + t775;
t1109 = t359 * t747;
t1108 = t362 * t747;
t798 = t570 / 0.2e1 + t514 / 0.2e1;
t1106 = t589 * t798;
t1105 = t589 * t859;
t1067 = t856 / 0.2e1;
t1072 = t569 / 0.2e1;
t731 = t855 / 0.2e1 + t1072;
t1104 = t591 * (t1067 + t731);
t846 = t640 / 0.2e1 - pkin(9) / 0.2e1;
t1103 = t593 * t846;
t1102 = t594 * t798;
t777 = t859 * t594;
t1101 = t860 * t575;
t425 = t860 * t591;
t587 = t591 ^ 2;
t588 = t593 ^ 2;
t858 = t588 - t587;
t269 = -qJD(6) * t575 + t327;
t651 = t654 ^ 2;
t652 = t657 ^ 2;
t387 = (-t651 / 0.2e1 + t652 / 0.2e1) * t593;
t953 = t654 * t657;
t835 = qJD(1) * t953;
t509 = t588 * t835;
t1087 = t387 * t860 + t509;
t628 = t652 - t651;
t770 = t593 * t835;
t348 = t628 * t860 + 0.2e1 * t770;
t928 = -t1127 + t369;
t218 = -t572 + t928;
t1083 = -t218 / 0.2e1;
t942 = t657 * t434;
t787 = -t1128 - t942;
t228 = t787 + t1054;
t1082 = t228 / 0.2e1;
t308 = (t1085 * t657 + t647) * t593;
t1081 = t308 / 0.2e1;
t382 = t1096 * t593;
t1080 = -t382 / 0.2e1;
t1079 = -t399 / 0.2e1;
t1078 = -t434 / 0.2e1;
t1074 = t1127 / 0.2e1;
t585 = -t1085 * t654 + t944;
t1071 = t585 / 0.2e1;
t1070 = -t591 / 0.2e1;
t1068 = -t593 / 0.2e1;
t764 = t599 / 0.2e1;
t1066 = -t856 / 0.2e1;
t1065 = t613 / 0.2e1;
t1064 = -t641 / 0.2e1;
t1062 = -t654 / 0.2e1;
t1056 = pkin(2) * t591;
t1053 = pkin(10) * t591;
t136 = (-t399 + t1053) * t657 + t1135;
t952 = t656 * t136;
t553 = pkin(10) * t388;
t162 = -t553 + t218;
t962 = t653 * t162;
t3 = -(t952 - t962) * t591 + t1132;
t1047 = t3 * qJD(1);
t949 = t656 * t162;
t965 = t653 * t136;
t4 = (t949 + t965) * t591 + t1131;
t1046 = t4 * qJD(1);
t141 = (-t434 + t1053) * t657 + t1135;
t951 = t656 * t141;
t404 = t654 * t434;
t929 = t404 - t1127;
t224 = -t572 + t929;
t165 = -t553 + t224;
t961 = t653 * t165;
t5 = -(t951 - t961) * t591 + t1132;
t1045 = t5 * qJD(1);
t948 = t656 * t165;
t964 = t653 * t141;
t6 = (t948 + t964) * t591 + t1131;
t1044 = t6 * qJD(1);
t51 = t243 * t1060 + t214 * t1062 + t244 * t1061 + t215 * t1059 + (t647 / 0.2e1 + t650 / 0.2e1) * t591;
t1043 = t51 * qJD(4);
t800 = -t243 / 0.2e1 + t215 / 0.2e1;
t801 = -t214 / 0.2e1 + t244 / 0.2e1;
t50 = (t1052 / 0.2e1 - t800) * t657 + (t571 / 0.2e1 - t801) * t654;
t1042 = -t50 * qJD(4) + t391 * qJD(5);
t1026 = t226 * t362;
t206 = -t555 + t244;
t946 = t656 * t206;
t960 = t653 * t703;
t97 = -t946 - t960;
t37 = t308 * t359 + t591 * t97 + t1026;
t1041 = qJD(1) * t37;
t1027 = t226 * t359;
t947 = t656 * t703;
t959 = t653 * t206;
t98 = -t947 + t959;
t38 = -t308 * t362 + t591 * t98 + t1027;
t1040 = qJD(1) * t38;
t52 = -t591 * t85 - t1027;
t1039 = qJD(1) * t52;
t53 = t591 * t86 - t1026;
t1038 = qJD(1) * t53;
t1018 = t244 * t591;
t87 = -t1018 + (-t273 * t657 - t382 * t654) * t593;
t1037 = qJD(1) * t87;
t1019 = t243 * t591;
t88 = -t1019 + (t382 * t657 - t1011) * t593;
t1036 = qJD(1) * t88;
t1034 = t214 * t591;
t99 = t273 * t974 + t1034;
t1035 = qJD(1) * t99;
t1033 = t218 * t657;
t943 = t657 * t399;
t788 = -t1128 - t943;
t219 = t788 + t1054;
t1032 = t219 * t654;
t1007 = t291 * t593;
t771 = -t854 / 0.2e1;
t840 = t657 * t1058;
t841 = t654 * t1058;
t998 = t514 * t358;
t662 = t1145 + t1007 / 0.2e1 + t998 / 0.2e1 - (-t653 * t840 + t656 * t841) * t1056 / 0.2e1 + t359 * t771;
t1002 = t349 * t593;
t985 = t570 * t358;
t683 = t1145 + t1002 / 0.2e1 + t985 / 0.2e1;
t22 = t662 - t683;
t1031 = t22 * qJD(1);
t1030 = t224 * t657;
t1025 = t226 * t589;
t1024 = t226 * t594;
t1021 = t228 * t654;
t1006 = t786 * t593;
t996 = t514 * t979;
t661 = t1146 - t1006 / 0.2e1 - t996 / 0.2e1 + (t653 * t841 + t656 * t840) * t1056 / 0.2e1 - t362 * t771;
t983 = t570 * t979;
t999 = t785 * t593;
t682 = t1146 - t999 / 0.2e1 - t983 / 0.2e1;
t24 = t661 - t682;
t1020 = t24 * qJD(1);
t25 = t214 * t218 + t215 * t219 + t1124;
t1017 = t25 * qJD(1);
t26 = t214 * t224 + t215 * t228 + t1124;
t1016 = t26 * qJD(1);
t601 = t656 * qJ(5) - t1085 * t653;
t667 = t601 * t1070 - t673 / 0.2e1;
t802 = t206 / 0.2e1 - t155 / 0.2e1;
t810 = t960 / 0.2e1;
t27 = t656 * t802 + t667 + t810;
t1015 = t27 * qJD(1);
t36 = -t214 * t243 + t215 * t244 + t273 * t382;
t1008 = t36 * qJD(1);
t163 = t215 * t391;
t43 = t163 + t219 * t974 + (-t218 * t593 - t1034) * t654;
t1005 = t43 * qJD(1);
t44 = t163 + t228 * t974 + (-t224 * t593 - t1034) * t654;
t1004 = t44 * qJD(1);
t46 = t244 * t974 + (-t214 * t657 + (-t215 + t243) * t654) * t593;
t1003 = t46 * qJD(1);
t47 = t50 * qJD(1);
t997 = t514 * t359;
t994 = t514 * t589;
t993 = t514 * t594;
t54 = t218 * t591 + t1130;
t992 = t54 * qJD(1);
t55 = t1133 + (-t219 - t1011) * t591;
t991 = t55 * qJD(1);
t56 = t224 * t591 + t1130;
t990 = t56 * qJD(1);
t989 = t569 * t591;
t988 = t569 * t613;
t987 = t569 * t657;
t57 = t1133 + (-t228 - t1011) * t591;
t986 = t57 * qJD(1);
t984 = t570 * t359;
t981 = t570 * t589;
t980 = t570 * t594;
t978 = t591 * t594;
t977 = t591 * t641;
t976 = t593 * t640;
t600 = t653 * qJ(5) + t1085 * t656;
t973 = t600 * t593;
t972 = t601 * t593;
t971 = t856 * t657;
t970 = t613 * t856;
t967 = t640 * t591;
t966 = t641 * t593;
t75 = t1117 + (-t788 - t1128) * t591;
t941 = t75 * qJD(1);
t76 = t1116 + (-t928 - t1127) * t591;
t940 = t76 * qJD(1);
t83 = t1117 + (-t787 - t1128) * t591;
t939 = t83 * qJD(1);
t84 = t1116 + (-t929 - t1127) * t591;
t938 = t84 * qJD(1);
t937 = t859 * t107;
t936 = t859 * t146;
t933 = t943 / 0.2e1 + t1076;
t932 = t404 / 0.2e1 + t1141;
t931 = -t404 / 0.2e1 + t1074;
t930 = t942 / 0.2e1 + t1076;
t804 = -t391 / 0.2e1;
t808 = -t388 / 0.2e1;
t927 = t653 * t808 + t656 * t804;
t803 = t391 / 0.2e1;
t807 = t388 / 0.2e1;
t926 = t653 * t807 + t656 * t803;
t925 = t653 * t804 + t520 / 0.2e1;
t924 = t653 * t803 - t520 / 0.2e1;
t921 = t651 * t593 / 0.2e1 + t652 * t1068;
t766 = t841 / 0.2e1;
t621 = pkin(2) * t766;
t765 = t840 / 0.2e1;
t623 = pkin(2) * t765;
t919 = t653 * t621 + t656 * t623;
t767 = -t841 / 0.2e1;
t622 = pkin(2) * t767;
t772 = -t855 / 0.2e1;
t624 = t657 * t772;
t918 = t653 * t622 + t656 * t624;
t917 = t656 * t622 + t653 * t623;
t916 = t656 * t621 + t653 * t624;
t891 = qJD(3) * t657;
t895 = qJD(2) * t657;
t915 = (t891 + t895) * t654;
t793 = t1057 * qJD(3);
t774 = pkin(2) * t793;
t627 = t654 * t774;
t646 = t651 * qJD(5);
t914 = t646 - t627;
t108 = t358 * t362 + t359 * t979;
t910 = qJD(1) * t108;
t122 = t759 * t975 + t1019;
t909 = qJD(1) * t122;
t123 = -t759 * t974 - t1018;
t908 = qJD(1) * t123;
t208 = t359 * t974 - t587 * t653;
t905 = qJD(1) * t208;
t367 = t1055 * t591 - t593 * t642;
t903 = qJD(1) * t367;
t368 = -t1055 * t593 - t591 * t642;
t902 = qJD(1) * t368;
t899 = qJD(1) * t642;
t898 = qJD(1) * t658;
t897 = qJD(2) * t514;
t896 = qJD(2) * t654;
t894 = qJD(3) * t570;
t893 = qJD(3) * t642;
t892 = qJD(3) * t654;
t890 = qJD(4) * t243;
t889 = qJD(4) * t654;
t888 = qJD(4) * t657;
t887 = qJD(5) * t653;
t886 = qJD(5) * t654;
t885 = qJD(5) * t656;
t884 = qJD(6) * t589;
t883 = qJD(6) * t594;
t149 = t358 * t591 - t359 * t593;
t880 = t149 * qJD(1);
t151 = -t362 * t593 + t591 * t979;
t879 = t151 * qJD(1);
t237 = t362 * t974 + t587 * t656;
t876 = t237 * qJD(1);
t819 = t978 / 0.2e1;
t248 = t819 + t925;
t239 = t248 * qJD(1);
t820 = -t978 / 0.2e1;
t249 = t820 + t924;
t240 = t249 * qJD(1);
t822 = -t979 / 0.2e1;
t250 = t822 + t927;
t241 = t250 * qJD(1);
t821 = t979 / 0.2e1;
t251 = t821 + t926;
t242 = t251 * qJD(1);
t323 = t858 * t654;
t875 = t323 * qJD(1);
t324 = t858 * t657;
t874 = t324 * qJD(1);
t873 = t858 * qJD(1);
t871 = t385 * qJD(5);
t870 = t388 * qJD(1);
t377 = t391 * qJD(1);
t403 = t628 * t588;
t869 = t403 * qJD(1);
t456 = t764 - t599 / 0.2e1;
t868 = t456 * qJD(1);
t867 = t575 * qJD(1);
t865 = t591 * qJD(4);
t568 = t591 * qJD(5);
t629 = -t655 ^ 2 + t658 ^ 2;
t864 = t629 * qJD(1);
t863 = t655 * qJD(2);
t861 = t658 * qJD(2);
t853 = pkin(1) * t655 * qJD(1);
t852 = pkin(1) * t898;
t851 = pkin(9) * t889;
t850 = pkin(9) * t888;
t849 = -t1054 / 0.2e1;
t848 = t1048 / 0.2e1;
t847 = pkin(3) / 0.2e1 + t1064;
t264 = -t1011 / 0.2e1;
t816 = t974 / 0.2e1;
t843 = t569 * t816 + t640 * t803 + t264;
t842 = pkin(9) * t803 - t816 * t856 + t264;
t839 = t1057 * t593;
t837 = t591 * t899;
t836 = t593 * t899;
t834 = t593 * t865;
t833 = t640 * t889;
t832 = t640 * t888;
t831 = t359 * t901;
t830 = t362 * t901;
t635 = t654 * t888;
t829 = t593 * t886;
t632 = t654 * t862;
t828 = t655 * t898;
t827 = t1025 / 0.2e1;
t826 = -t1024 / 0.2e1;
t825 = t273 * t1065;
t818 = t976 / 0.2e1;
t817 = -t974 / 0.2e1;
t815 = t973 / 0.2e1;
t814 = t972 / 0.2e1;
t813 = t971 / 0.2e1;
t811 = -t966 / 0.2e1;
t806 = t947 / 0.2e1;
t797 = t1066 + t1072;
t796 = t1058 * qJD(2);
t795 = t1058 * qJD(3);
t794 = t1057 * qJD(2);
t773 = pkin(2) * t794;
t625 = t654 * t773;
t753 = pkin(2) * t657 * t839;
t497 = t753 / 0.2e1;
t68 = t497 + (-t1103 + t1104) * t657;
t792 = -qJD(1) * t68 + t625;
t496 = -t753 / 0.2e1;
t732 = t772 + t1064;
t692 = (-pkin(3) / 0.2e1 + t732) * t591;
t96 = t496 + (t692 + t1103) * t657;
t791 = -qJD(1) * t96 - t625;
t626 = t657 * t773;
t693 = (t771 + t846) * t593;
t66 = (t693 - t1104) * t654;
t790 = t66 * qJD(1) - t626;
t93 = t1073 + t1097 / 0.2e1 + (t693 + t692) * t654;
t789 = t93 * qJD(1) - t626;
t781 = t860 * t657;
t778 = t859 * t591;
t776 = t593 * t848;
t769 = t640 * t804 + t1076;
t768 = pkin(9) * t804 + t1076;
t763 = t1080 - t1051 / 0.2e1;
t761 = -t133 / 0.2e1 + t600 * t1069;
t760 = t1080 - t967 / 0.2e1;
t320 = -t575 + t921;
t257 = qJD(1) * t320 + t915;
t309 = qJD(1) * t387 - t915;
t756 = t654 * t781;
t751 = t591 * t856 + t1049;
t750 = t657 * t774;
t722 = t1030 / 0.2e1 + t1021 / 0.2e1;
t660 = t722 * t640 + (t214 * t765 + t273 * t1057 / 0.2e1 + t215 * t766) * pkin(2) + t1092 * t1072;
t723 = -t1033 / 0.2e1 - t1032 / 0.2e1;
t2 = t1014 / 0.2e1 + t723 * pkin(9) + t660;
t699 = (t651 + t652) * t1058;
t325 = (t1057 * t569 + t640 * t699) * pkin(2);
t746 = t2 * qJD(1) + t325 * qJD(2);
t745 = t1032 + t1033;
t744 = t1021 + t1030;
t743 = -t976 + t989;
t742 = t976 - t977;
t680 = t1071 * t359 + t1081 * t589 + t826;
t669 = t680 - t720;
t713 = t962 / 0.2e1 - t952 / 0.2e1;
t13 = t815 + t669 - t713;
t457 = t585 * t589;
t270 = t457 - t993;
t741 = -qJD(1) * t13 - qJD(2) * t270;
t681 = -t1071 * t362 + t1081 * t594 + t827;
t671 = -t291 * t1069 + t997 / 0.2e1 + t681;
t715 = t965 / 0.2e1 + t949 / 0.2e1;
t15 = t814 + t671 - t715;
t458 = t585 * t594;
t271 = t458 + t994;
t740 = -qJD(1) * t15 - qJD(2) * t271;
t28 = -t653 * t802 + t761 + t806;
t739 = t28 * qJD(1);
t410 = t969 + t987;
t724 = (t593 * t1065 - t273 / 0.2e1) * t657;
t665 = t724 + (t1068 * t569 + t760) * t654;
t72 = t665 - t1139;
t738 = -qJD(1) * t72 + qJD(2) * t410;
t411 = -t536 + t968;
t408 = t569 * t817;
t63 = t408 + (t1079 + t760) * t657 + t1143;
t737 = -qJD(1) * t63 + qJD(2) * t411;
t573 = t699 * pkin(2);
t59 = (t224 / 0.2e1 + t1083) * t657 + (t1082 - t219 / 0.2e1) * t654;
t736 = -qJD(1) * t59 - qJD(2) * t573;
t735 = t593 * t775;
t427 = t588 * t652 + t587;
t734 = -t427 * qJD(1) - t865;
t733 = qJD(4) * t613 - t886;
t729 = t593 * t756;
t728 = t1099 * t974;
t727 = qJ(5) * t1083 + t1086 * t219;
t726 = -t224 * qJ(5) / 0.2e1 + pkin(4) * t1082;
t677 = t654 * t801 + t657 * t800;
t663 = t1072 * t382 + t640 * t677 + t825;
t9 = t663 + t727;
t725 = t9 * qJD(1) + qJD(2) * t988;
t721 = -t291 * t1070 - t997 / 0.2e1;
t719 = -t349 * t1070 - t984 / 0.2e1;
t717 = -t994 / 0.2e1 - t981 / 0.2e1;
t716 = t993 / 0.2e1 + t980 / 0.2e1;
t714 = t964 / 0.2e1 + t948 / 0.2e1;
t712 = t961 / 0.2e1 - t951 / 0.2e1;
t31 = t826 - t713 - t720;
t711 = qJD(1) * t31 - t594 * t897;
t32 = t827 - t715 - t721;
t710 = qJD(1) * t32 + t589 * t897;
t90 = t849 + t843 + t933;
t709 = -qJD(1) * t90 + t569 * t896;
t708 = t657 * t735;
t674 = (t967 / 0.2e1 + t966 / 0.2e1) * t654 + t1074;
t109 = t674 + t935;
t707 = -qJD(1) * t109 - t641 * t895;
t111 = t1140 + (t811 + t1079) * t657 + t769;
t706 = -qJD(1) * t111 - t641 * t896;
t704 = t632 - t750;
t701 = t593 * t812 + t263 + 0.2e1 * t849;
t700 = -0.2e1 * t729;
t137 = -t457 + t917 + t1102;
t668 = t680 - t718;
t17 = t815 + t668 - t712;
t282 = t457 - t980;
t697 = -qJD(1) * t17 + qJD(2) * t137 - qJD(3) * t282;
t138 = -t458 + t919 - t1106;
t670 = -t349 * t1069 + t984 / 0.2e1 + t681;
t19 = t814 + t670 - t714;
t283 = t458 + t981;
t696 = -qJD(1) * t19 + qJD(2) * t138 - qJD(3) * t283;
t293 = t622 + t1138;
t452 = t586 + t968;
t443 = t593 * t813;
t69 = t443 + (t1078 + t763) * t657 + t1143;
t695 = -qJD(1) * t69 + qJD(2) * t293 + qJD(3) * t452;
t294 = t657 * t797 + t623 + t969;
t451 = t969 - t971;
t666 = t724 + (t1067 * t593 + t763) * t654;
t74 = t572 + t666 + t931;
t694 = -qJD(1) * t74 + qJD(2) * t294 + qJD(3) * t451;
t676 = (t1051 / 0.2e1 - t1050 / 0.2e1) * t654 + t1074;
t113 = t676 + t932;
t488 = t657 * t847 + t624;
t690 = pkin(3) * t891 - qJD(1) * t113 + qJD(2) * t488;
t115 = t1140 + (t1050 / 0.2e1 + t1078) * t657 + t768;
t487 = t654 * t847 + t622;
t689 = pkin(3) * t892 - qJD(1) * t115 + qJD(2) * t487;
t688 = (-t794 - t793) * pkin(2);
t664 = pkin(9) * t677 + t1066 * t382 + t825;
t11 = t664 + t726;
t675 = (pkin(4) * t767 + qJ(5) * t765) * pkin(2);
t259 = -t613 * t797 + t675;
t687 = t11 * qJD(1) - t259 * qJD(2) - qJD(3) * t970;
t210 = t916 - t1102;
t39 = t826 - t712 - t718;
t686 = qJD(1) * t39 + qJD(2) * t210 - t594 * t894;
t211 = t918 + t1106;
t40 = t827 - t714 - t719;
t685 = qJD(1) * t40 + qJD(2) * t211 + t589 * t894;
t336 = t621 + t923;
t92 = t849 + t842 + t930;
t684 = -qJD(1) * t92 + qJD(2) * t336 - t856 * t892;
t672 = (t1058 * t1070 - t839 / 0.2e1) * pkin(2) + t818;
t615 = t628 * qJD(4);
t557 = t573 * qJD(3);
t549 = t656 * t568;
t548 = t594 * t886;
t547 = t589 * t886;
t510 = t593 * t632;
t500 = t775 * qJ(5);
t491 = t775 * t656;
t490 = pkin(3) * t1060 + t1059 * t641 + t624;
t489 = pkin(3) * t1062 + t1061 * t641 + t622;
t464 = -t972 / 0.2e1;
t463 = -t973 / 0.2e1;
t445 = t747 * t656;
t424 = t651 * t860 - t770;
t373 = t387 * qJD(4);
t352 = 0.2e1 * t764 - t596;
t337 = t621 - t923;
t335 = t377 + t888;
t334 = -t870 - t889;
t321 = t575 + t921;
t319 = t321 * qJD(5);
t318 = t320 * qJD(5);
t296 = t622 - t1138;
t295 = -t969 - t987 / 0.2e1 + t813 + t623;
t284 = t589 * t777;
t281 = 0.2e1 * t654 * t708;
t260 = -t970 / 0.2e1 + t988 / 0.2e1 + t675;
t255 = t819 + t924;
t254 = t820 + t925;
t253 = t822 + t926;
t252 = t821 + t927;
t245 = -t450 * t652 - t373;
t238 = t244 * qJD(4);
t213 = t716 + t916;
t212 = t717 + t918;
t203 = qJD(4) * t391 - t874;
t202 = -qJD(4) * t388 + t875;
t201 = t859 * t344;
t190 = -t956 / 0.2e1 + t594 * t817 + t593 * t1063;
t188 = t809 + t593 * t805 + t945 / 0.2e1;
t180 = t187 * qJD(5);
t179 = t190 * qJD(5);
t178 = t189 * qJD(5);
t177 = t188 * qJD(5);
t173 = t1024 / 0.2e1;
t172 = -t1025 / 0.2e1;
t159 = t777 - t240;
t158 = -t239 - t777;
t157 = -t242 - t1105;
t156 = -t241 + t1105;
t152 = -t391 * t860 - t450 * t654;
t142 = -t373 + (t652 * t900 - t756) * t591;
t140 = t458 - t717 + t919;
t139 = t457 - t716 + t917;
t126 = -t1099 * t593 + t874;
t125 = -t593 * t781 - t875;
t124 = t654 * t735;
t121 = 0.2e1 * (qJD(4) - t901) * t593 * t953 - t628 * t425;
t116 = pkin(3) * t816 + t768 + t930;
t114 = t676 + t931;
t112 = t657 * t811 + t769 + t933;
t110 = t674 - t935;
t95 = t496 + t1098 + pkin(9) * t816 + pkin(3) * t803 + (t591 * t732 + t818) * t657;
t94 = 0.2e1 * t1073 + t776 + pkin(3) * t807 + (-t977 / 0.2e1 + t672) * t654;
t91 = -t942 / 0.2e1 + t842 + t1144;
t89 = -t943 / 0.2e1 + t843 + t1144;
t82 = -qJD(4) * t251 - qJD(6) * t250 - t879;
t81 = -qJD(4) * t248 - qJD(6) * t249 - t880;
t73 = -t572 + t666 + t932;
t71 = t665 + t1139;
t70 = t657 * t763 + t443 + t701 + t930;
t67 = t497 - t1123 + pkin(9) * t817 - t856 * t803 + (-t976 / 0.2e1 + t731 * t591) * t657;
t65 = -t1122 - t856 * t808 + t776 + (-t989 / 0.2e1 + t672) * t654;
t64 = t657 * t760 + t408 + t701 + t933;
t62 = -t904 * t979 - t936;
t61 = t253 * qJD(4) + t252 * qJD(6) + t593 * t780 + t879;
t60 = t254 * qJD(4) + t255 * qJD(6) - t1100 * t589 + t880;
t58 = t722 - t723;
t45 = -t47 + t679;
t42 = t173 - t712 + t718;
t41 = t172 - t714 + t719;
t35 = -(t780 - t904) * t979 - t936;
t34 = t173 - t713 + t720;
t33 = t172 - t715 + t721;
t30 = t950 / 0.2e1 + t810 + t946 / 0.2e1 - t667;
t29 = -t963 / 0.2e1 + t806 - t959 / 0.2e1 - t761;
t23 = t661 + t682;
t21 = t662 + t683;
t20 = -t910 - t937;
t18 = t464 + t670 + t714;
t16 = t463 + t668 + t712;
t14 = t464 + t671 + t715;
t12 = t463 + t669 + t713;
t10 = t664 - t726;
t8 = t663 - t727;
t7 = t910 + t860 * (-t358 * t594 + t589 * t979) - t937;
t1 = pkin(9) * t1033 / 0.2e1 - t1014 / 0.2e1 + t219 * t848 + t660;
t48 = [0, 0, 0, t655 * t861, t629 * qJD(2), 0, 0, 0, -pkin(1) * t863, -pkin(1) * t861, t1120, -t860 * t858, 0, 0, 0, qJD(2) * t367 - t593 * t893, qJD(2) * t368 - t591 * t893, t1120 * t652 - t588 * t635, -t403 * qJD(4) + t591 * t700, t324 * t860 + t654 * t834, -t323 * t860 + t657 * t834, -t1120, qJD(2) * t75 + qJD(3) * t83 + qJD(4) * t123, qJD(2) * t76 + qJD(3) * t84 + qJD(4) * t122, qJD(2) * t55 + qJD(3) * t57 + qJD(4) * t87 - t588 * t632, -qJD(2) * t43 - qJD(3) * t44 - qJD(4) * t46 + t591 * t829, qJD(2) * t54 + qJD(3) * t56 + qJD(4) * t88 + qJD(5) * t427, qJD(2) * t25 + qJD(3) * t26 + qJD(4) * t36 + qJD(5) * t99 -(t359 * t859 - t860 * t979) * t362, t108 * t860 - t131 * t859, t151 * t860 - t359 * t778, t149 * t860 + t362 * t778, -t1120, qJD(2) * t3 + qJD(3) * t5 + qJD(4) * t37 - qJD(5) * t208 + qJD(6) * t53, qJD(2) * t4 + qJD(3) * t6 + qJD(4) * t38 + qJD(5) * t237 + qJD(6) * t52; 0, 0, 0, t828, t864, t861, -t863, 0, -pkin(7) * t861 - t853, pkin(7) * t863 - t852, t450, -t873, -t425, t1100, 0, -qJD(2) * t920 + qJD(3) * t352 + t903, t1115 + t902, t142, t121, t126, t125, -t327, t941 + (t654 * t742 - t1097) * qJD(2) + t94 * qJD(3) + t112 * qJD(4), t940 + (t657 * t742 + t1098) * qJD(2) + t95 * qJD(3) + t110 * qJD(4), t991 + (-t654 * t743 - t1122) * qJD(2) + t65 * qJD(3) + t64 * qJD(4) + t319, qJD(2) * t745 + t58 * qJD(3) - t1005 + t1043, t992 + (t657 * t743 - t1123) * qJD(2) + t67 * qJD(3) + t71 * qJD(4) - t510, t1017 + (t1092 * t569 + t640 * t745) * qJD(2) + t1 * qJD(3) + t8 * qJD(4) + t89 * qJD(5), t35, t7, t61, t60, -t269, t1047 + (t1007 + t998 + t1137) * qJD(2) + t21 * qJD(3) + t12 * qJD(4) + t177 + t34 * qJD(6), t1046 + (-t1006 - t996 + t1136) * qJD(2) + t23 * qJD(3) + t14 * qJD(4) + t179 + t33 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t450, -t873, -t425, t1100, 0, qJD(2) * t352 - qJD(3) * t920 - t836, t1115 - t837, t142, t121, t126, t125, -t327, t939 + t94 * qJD(2) + (t654 * t762 - t1097) * qJD(3) + t116 * qJD(4), t938 + t95 * qJD(2) + (t657 * t762 + t1098) * qJD(3) + t114 * qJD(4), t986 + t65 * qJD(2) + (t654 * t751 - t1122) * qJD(3) + t70 * qJD(4) + t319, t58 * qJD(2) + qJD(3) * t744 - t1004 + t1043, t990 + t67 * qJD(2) + (-t657 * t751 - t1123) * qJD(3) + t73 * qJD(4) - t510, t1016 + t1 * qJD(2) + (pkin(9) * t744 - t1014) * qJD(3) + t10 * qJD(4) + t91 * qJD(5), t35, t7, t61, t60, -t269, t1045 + t21 * qJD(2) + (t1002 + t985 + t1137) * qJD(3) + t16 * qJD(4) + t177 + t42 * qJD(6), t1044 + t23 * qJD(2) + (-t983 - t999 + t1136) * qJD(3) + t18 * qJD(4) + t179 + t41 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1087, 0.2e1 * t728 - t869, t124, t708, -t1101, qJD(2) * t112 + qJD(3) * t116 - t238 + t908, qJD(2) * t110 + qJD(3) * t114 + t890 + t909, qJD(2) * t64 + qJD(3) * t70 + t1037 - t238, -t1003 + (-t556 + t844) * qJD(4) + t829 + t860 * t51, qJD(2) * t71 + qJD(3) * t73 + t1036 + t568 - t890, t1008 + t8 * qJD(2) + t10 * qJD(3) + (-pkin(4) * t244 - qJ(5) * t243) * qJD(4) + t214 * qJD(5), -t1118, -t1112, t253 * t860 - t1109, t254 * t860 + t1108, -t1101, qJD(2) * t12 + qJD(3) * t16 + qJD(4) * t97 + qJD(6) * t30 + t1041 + t871, qJD(2) * t14 + qJD(3) * t18 + qJD(4) * t98 + qJD(6) * t29 + t1040 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321 * t860 - t509, t124, -t729 - t734, qJD(2) * t89 + qJD(3) * t91 + qJD(4) * t214 + t1035, 0, 0, 0, 0, 0, qJD(4) * t385 + t188 * t860 - t905, t190 * t860 + t656 * t865 + t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1118, t1112, t252 * t860 + t1109, t255 * t860 - t1108, t1101, qJD(2) * t34 + qJD(3) * t42 + qJD(4) * t30 - qJD(6) * t86 + t1038, qJD(2) * t33 + qJD(3) * t41 + qJD(4) * t29 + qJD(6) * t85 + t1039; 0, 0, 0, -t828, -t864, 0, 0, 0, t853, t852, -t450, t873, 0, 0, 0, qJD(3) * t456 - t903, -t902, t245, t281, t203, t202, t327, qJD(3) * t93 + qJD(4) * t111 - t941, qJD(3) * t96 + qJD(4) * t109 - t940, qJD(3) * t66 + qJD(4) * t63 + t318 - t991, qJD(3) * t59 + t1005 + t1042, qJD(3) * t68 + qJD(4) * t72 - t510 - t992, qJD(3) * t2 + qJD(4) * t9 + qJD(5) * t90 - t1017, t62, t20, t82, t81, t269, qJD(3) * t22 + qJD(4) * t13 - qJD(6) * t31 - t1047 + t178, qJD(3) * t24 + qJD(4) * t15 - qJD(6) * t32 - t1046 - t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t774, -pkin(2) * t795, t635, t615, 0, 0, 0, t641 * t889 - t750, t641 * t888 + t627, -t411 * qJD(4) + t704, t557, -qJD(4) * t410 + t914, t325 * qJD(3) + t569 * t733, t284, -t201, 0, 0, 0, t270 * qJD(4) + t514 * t883 - t589 * t774 + t547, t271 * qJD(4) - t514 * t884 - t594 * t774 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t688 + t868 (-t796 - t795) * pkin(2), t635, t615, 0, 0, 0, t489 * qJD(4) - t750 + t789, qJD(4) * t490 + t627 - t791, t296 * qJD(4) + t704 + t790, t557 - t736, qJD(4) * t295 - t792 + t914 (pkin(9) * t699 - t1057 * t856) * pkin(2) * qJD(3) + t260 * qJD(4) + t337 * qJD(5) + t746, t284, -t201, 0, 0, 0, t139 * qJD(4) + t213 * qJD(6) + t589 * t688 + t1031 + t547, t140 * qJD(4) + t212 * qJD(6) + t594 * t688 + t1020 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t348, t335, t334, t867, qJD(3) * t489 - t706 - t832, qJD(3) * t490 - t707 + t833, qJD(3) * t296 - t737 - t832, t45, qJD(3) * t295 - t738 - t833, t260 * qJD(3) + t640 * t679 + t725, t1134, -t1111, t157, t158, t867, qJD(3) * t139 - t1114 - t741, qJD(3) * t140 - t1129 - t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t335, t424, qJD(3) * t337 - t709 + t832, 0, 0, 0, 0, 0, t118, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1134, t1111, t156, t159, -t867, qJD(3) * t213 + t1114 - t711, qJD(3) * t212 + t1129 - t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t450, t873, 0, 0, 0, -qJD(2) * t456 + t836, t837, t245, t281, t203, t202, t327, -qJD(2) * t93 + qJD(4) * t115 - t939, -qJD(2) * t96 + qJD(4) * t113 - t938, -qJD(2) * t66 + qJD(4) * t69 + t318 - t986, -qJD(2) * t59 + t1004 + t1042, -qJD(2) * t68 + qJD(4) * t74 - t510 - t990, -qJD(2) * t2 + qJD(4) * t11 + qJD(5) * t92 - t1016, t62, t20, t82, t81, t269, -qJD(2) * t22 + qJD(4) * t17 - qJD(6) * t39 - t1045 + t178, -qJD(2) * t24 + qJD(4) * t19 - qJD(6) * t40 - t1044 - t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t773 - t868, pkin(2) * t796, t635, t615, 0, 0, 0, -qJD(4) * t487 - t789, -qJD(4) * t488 + t791, -qJD(4) * t293 + t632 - t790, t736, -qJD(4) * t294 + t646 + t792, -qJD(4) * t259 - qJD(5) * t336 - t746, t284, -t201, 0, 0, 0, -t137 * qJD(4) - t210 * qJD(6) + t589 * t773 - t1031 + t547, -t138 * qJD(4) - t211 * qJD(6) + t594 * t773 - t1020 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t635, t615, 0, 0, 0, -pkin(3) * t889, -pkin(3) * t888, -qJD(4) * t452 + t632, 0, -qJD(4) * t451 + t646, -t733 * t856, t284, -t201, 0, 0, 0, qJD(4) * t282 + t570 * t883 + t547, qJD(4) * t283 - t570 * t884 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t348, t335, t334, t867, -t689 - t850, -t690 + t851, -t695 - t850, t45, -t694 - t851, pkin(9) * t679 + t687, t1134, -t1111, t157, t158, t867, -t1113 - t697, -t1110 - t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t335, t424, -t684 + t850, 0, 0, 0, 0, 0, t118, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1134, t1111, t156, t159, -t867, t1113 - t686, t1110 - t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1087, t700 + t869, t152, t388 * t860 - t450 * t657, -t1101, -qJD(2) * t111 - qJD(3) * t115 - t908, -qJD(2) * t109 - qJD(3) * t113 - t909, -qJD(2) * t63 - qJD(3) * t69 - t1037, t50 * t860 + t1003, -qJD(2) * t72 - qJD(3) * t74 - t1036 + t568, qJ(5) * t568 - qJD(2) * t9 - qJD(3) * t11 - t1008, t1118, t1112, t251 * t860 + t831, t248 * t860 - t830, -t1101, -qJD(2) * t13 - qJD(3) * t17 - qJD(6) * t27 - t1041 + t871, -qJD(2) * t15 - qJD(3) * t19 - qJD(6) * t28 - t1040 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, -t348, -t377, t870, -t867, qJD(3) * t487 + t706, qJD(3) * t488 + t707, qJD(3) * t293 + t737, t47, qJD(3) * t294 + t738, qJD(3) * t259 - t725, -t1134, t1111, t242, t239, -t867, qJD(3) * t137 + t741, qJD(3) * t138 + t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, -t348, -t377, t870, -t867, t689, t690, t695, t47, t694, -t687, -t1134, t1111, t242, t239, -t867, t697, t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5), 0, 0, 0, 0, 0, qJD(6) * t601 + t887, -qJD(6) * t600 + t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t775, t500, 0, 0, 0, 0, 0, t1126, t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t601 * t859 - t1015, -t600 * t859 - t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320 * t860 + t509, t152, t728 + t734, -qJ(5) * t865 - qJD(2) * t90 - qJD(3) * t92 - t1035, 0, 0, 0, 0, 0, -t189 * t860 - t385 * t859 + t905, t187 * t860 - t656 * t778 - t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, -t377, -t424, qJD(3) * t336 + t709, 0, 0, 0, 0, 0, -t118, -t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, -t377, -t424, t684, 0, 0, 0, 0, 0, -t118, -t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t775, -t500, 0, 0, 0, 0, 0, -t1125, -t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1125, t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1118, -t1112, t250 * t860 - t831, t249 * t860 + t830, t1101, qJD(2) * t31 + qJD(3) * t39 + qJD(4) * t27 - t1038 - t871, qJD(2) * t32 + qJD(3) * t40 + qJD(4) * t28 - t1039 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1134, -t1111, t241, t240, t867, qJD(3) * t210 + t711, qJD(3) * t211 + t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1134, -t1111, t241, t240, t867, t686, t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t601 + t1015 - t887, qJD(4) * t600 + t739 - t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1126, -t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t48;
