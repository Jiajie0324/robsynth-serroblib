% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRPR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 23:57
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRPR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR10_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR10_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPR10_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 23:56:44
% EndTime: 2019-05-05 23:57:12
% DurationCPUTime: 29.79s
% Computational Cost: add. (85222->803), mult. (165329->896), div. (0->0), fcn. (105909->8), ass. (0->502)
t1379 = cos(qJ(4));
t1375 = sin(qJ(4));
t1380 = cos(qJ(3));
t1531 = qJD(1) * t1380;
t1330 = -qJD(3) * t1379 + t1375 * t1531;
t1365 = t1380 * qJDD(1);
t1376 = sin(qJ(3));
t1532 = qJD(1) * t1376;
t1479 = qJD(3) * t1532;
t1336 = t1365 - t1479;
t1425 = -t1375 * qJDD(3) - t1379 * t1336;
t1263 = -qJD(4) * t1330 - t1425;
t1361 = qJD(4) + t1532;
t1509 = t1330 * t1361;
t1569 = t1263 - t1509;
t1521 = t1569 * t1375;
t1332 = qJD(3) * t1375 + t1379 * t1531;
t1309 = t1361 * t1332;
t1457 = qJDD(3) * t1379 - t1375 * t1336;
t1413 = qJD(4) * t1332 - t1457;
t1566 = t1309 + t1413;
t1153 = -t1379 * t1566 - t1521;
t1327 = t1332 ^ 2;
t1551 = t1330 ^ 2;
t1565 = t1327 - t1551;
t1110 = t1153 * t1376 - t1380 * t1565;
t1520 = t1569 * t1379;
t1149 = -t1375 * t1566 + t1520;
t1377 = sin(qJ(1));
t1381 = cos(qJ(1));
t1639 = t1110 * t1377 + t1149 * t1381;
t1638 = t1110 * t1381 - t1149 * t1377;
t1550 = t1361 ^ 2;
t1301 = t1551 - t1550;
t1282 = t1332 * t1330;
t1477 = qJD(3) * t1531;
t1486 = t1376 * qJDD(1);
t1335 = -t1477 - t1486;
t1328 = qJDD(4) - t1335;
t1567 = t1282 + t1328;
t1585 = t1567 * t1375;
t1199 = t1301 * t1379 - t1585;
t1227 = -t1309 + t1413;
t1134 = t1199 * t1376 + t1227 * t1380;
t1584 = t1567 * t1379;
t1195 = t1301 * t1375 + t1584;
t1637 = t1134 * t1377 + t1195 * t1381;
t1636 = t1134 * t1381 - t1195 * t1377;
t1302 = t1327 - t1550;
t1459 = -t1328 + t1282;
t1515 = t1459 * t1375;
t1611 = -t1302 * t1379 - t1515;
t1568 = t1263 + t1509;
t1514 = t1459 * t1379;
t1610 = t1302 * t1375 - t1514;
t1618 = t1376 * t1610 - t1380 * t1568;
t1635 = t1377 * t1618 + t1381 * t1611;
t1634 = t1377 * t1611 - t1381 * t1618;
t1265 = t1550 + t1327;
t1179 = t1265 * t1379 + t1585;
t1633 = pkin(2) * t1179;
t1632 = pkin(3) * t1179;
t1631 = pkin(8) * t1179;
t1191 = t1265 * t1375 - t1584;
t1630 = pkin(8) * t1191;
t1629 = qJ(2) * t1179;
t1626 = t1179 * t1377;
t1625 = t1179 * t1381;
t1624 = t1191 * t1376;
t1623 = t1191 * t1380;
t1112 = t1153 * t1380 + t1376 * t1565;
t1138 = t1199 * t1380 - t1227 * t1376;
t1617 = t1376 * t1568 + t1380 * t1610;
t1563 = -t1550 - t1551;
t1581 = t1379 * t1563 + t1515;
t1598 = t1376 * t1581 - t1380 * t1566;
t1616 = pkin(2) * t1598;
t1597 = t1376 * t1566 + t1380 * t1581;
t1615 = pkin(7) * t1597;
t1614 = pkin(7) * t1598;
t1613 = qJ(2) * t1597;
t1547 = pkin(7) + pkin(1);
t1612 = t1547 * t1597;
t1582 = t1375 * t1563 - t1514;
t1609 = qJ(2) * t1582 - t1547 * t1598;
t1608 = pkin(6) * (t1377 * t1598 + t1381 * t1582);
t1607 = pkin(6) * (t1377 * t1582 - t1381 * t1598);
t1606 = pkin(2) * t1582;
t1605 = pkin(3) * t1582;
t1604 = pkin(8) * t1581;
t1603 = pkin(8) * t1582;
t1602 = -qJ(5) * t1375 - pkin(3);
t1564 = t1327 + t1551;
t1596 = pkin(3) * t1564;
t1431 = t1569 * qJ(5);
t1374 = sin(qJ(6));
t1378 = cos(qJ(6));
t1268 = -t1330 * t1378 + t1332 * t1374;
t1270 = t1330 * t1374 + t1332 * t1378;
t1206 = t1270 * t1268;
t1321 = -qJDD(6) + t1328;
t1571 = -t1206 - t1321;
t1595 = t1374 * t1571;
t1594 = t1376 * t1564;
t1590 = t1378 * t1571;
t1589 = t1380 * t1564;
t1529 = qJD(5) * t1361;
t1345 = 0.2e1 * t1529;
t1530 = qJD(2) * qJD(1);
t1369 = 0.2e1 * t1530;
t1348 = t1381 * g(1) + t1377 * g(2);
t1371 = qJDD(1) * qJ(2);
t1421 = t1348 - t1371;
t1439 = -t1336 + t1479;
t1440 = -t1335 + t1477;
t1383 = qJD(1) ^ 2;
t1573 = t1383 * t1547;
t1214 = pkin(3) * t1440 + pkin(8) * t1439 + t1369 - t1421 - t1573;
t1347 = t1377 * g(1) - g(2) * t1381;
t1445 = qJDD(2) - t1347;
t1406 = -t1383 * qJ(2) + t1445;
t1305 = -qJDD(1) * t1547 + t1406;
t1276 = t1380 * g(3) - t1305 * t1376;
t1382 = qJD(3) ^ 2;
t1539 = pkin(8) * t1380;
t1540 = pkin(3) * t1376;
t1416 = t1383 * (-t1539 + t1540);
t1240 = -t1382 * pkin(3) + qJDD(3) * pkin(8) - t1376 * t1416 - t1276;
t1144 = t1214 * t1375 + t1240 * t1379;
t1274 = pkin(4) * t1330 - qJ(5) * t1332;
t1429 = -pkin(4) * t1550 + qJ(5) * t1328 - t1274 * t1330 + t1144;
t1083 = t1345 + t1429;
t1143 = -t1214 * t1379 + t1375 * t1240;
t1084 = -pkin(4) * t1328 - qJ(5) * t1550 + t1332 * t1274 + qJDD(5) + t1143;
t1029 = t1083 * t1379 + t1084 * t1375;
t1275 = t1376 * g(3) + t1380 * t1305;
t1239 = qJDD(3) * pkin(3) + t1382 * pkin(8) - t1380 * t1416 + t1275;
t1388 = -pkin(4) * t1309 + t1239;
t1549 = 0.2e1 * qJD(5);
t1485 = t1332 * t1549;
t1384 = -pkin(4) * t1413 + t1388 + t1485;
t1088 = t1431 + t1384;
t1005 = t1029 * t1376 + t1088 * t1380;
t1392 = pkin(8) * t1029 + (pkin(4) * t1379 - t1602) * t1088;
t1583 = -pkin(2) * t1005 - t1392;
t1499 = t1361 * t1375;
t1215 = t1330 * t1499 - t1379 * t1413;
t1498 = t1361 * t1379;
t1478 = t1330 * t1498;
t1387 = t1375 * t1413 + t1478;
t1480 = t1380 * t1282;
t1555 = t1376 * t1387 + t1480;
t1580 = t1215 * t1381 + t1377 * t1555;
t1579 = t1215 * t1377 - t1381 * t1555;
t1296 = t1332 * t1499;
t1437 = t1296 - t1478;
t1554 = -t1328 * t1380 + t1376 * t1437;
t1572 = (t1330 * t1375 + t1332 * t1379) * t1361;
t1578 = -t1377 * t1572 - t1381 * t1554;
t1577 = t1377 * t1554 - t1381 * t1572;
t1068 = -t1143 * t1379 + t1144 * t1375;
t1484 = pkin(3) * t1380 + pkin(2);
t1576 = t1068 * (pkin(8) * t1376 + t1484);
t1053 = pkin(5) * t1459 - pkin(9) * t1568 + t1084;
t1295 = -pkin(5) * t1361 - pkin(9) * t1332;
t1058 = -pkin(5) * t1551 + pkin(9) * t1413 + t1295 * t1361 + t1083;
t1010 = -t1053 * t1378 + t1374 * t1058;
t1011 = t1053 * t1374 + t1058 * t1378;
t968 = -t1010 * t1378 + t1011 * t1374;
t1069 = t1143 * t1375 + t1144 * t1379;
t1156 = -qJD(6) * t1268 + t1263 * t1378 + t1374 * t1413;
t1352 = -qJD(6) + t1361;
t1250 = t1268 * t1352;
t1570 = t1250 + t1156;
t1212 = t1275 * t1380 - t1376 * t1276;
t1548 = pkin(4) + pkin(5);
t969 = t1374 * t1010 + t1011 * t1378;
t1562 = qJ(5) * t969 - t1548 * t968;
t1463 = t1374 * t1263 - t1378 * t1413;
t1104 = (qJD(6) + t1352) * t1270 + t1463;
t1107 = -t1250 + t1156;
t1046 = -t1104 * t1374 - t1107 * t1378;
t1048 = -t1104 * t1378 + t1107 * t1374;
t1561 = qJ(5) * t1048 - t1046 * t1548;
t1266 = t1268 ^ 2;
t1349 = t1352 ^ 2;
t1188 = -t1349 - t1266;
t1093 = t1188 * t1374 + t1590;
t1094 = t1188 * t1378 - t1595;
t1560 = qJ(5) * t1094 - t1093 * t1548 + t1010;
t1267 = t1270 ^ 2;
t1238 = -t1267 - t1349;
t1176 = -t1206 + t1321;
t1527 = t1176 * t1374;
t1118 = t1238 * t1378 + t1527;
t1526 = t1176 * t1378;
t1119 = -t1238 * t1374 + t1526;
t1559 = qJ(5) * t1119 - t1118 * t1548 + t1011;
t1228 = (-qJD(4) + t1361) * t1332 + t1457;
t1518 = t1568 * t1379;
t1150 = t1228 * t1375 - t1518;
t1035 = -pkin(8) * t1150 - t1068;
t1558 = t1376 * t1035 - t1150 * t1484;
t1219 = t1263 * t1375 + t1332 * t1498;
t1220 = t1263 * t1379 - t1296;
t1414 = t1220 * t1376 - t1480;
t1557 = t1219 * t1377 - t1381 * t1414;
t1556 = t1219 * t1381 + t1377 * t1414;
t1481 = t1376 * t1282;
t1553 = t1380 * t1387 - t1481;
t1552 = t1328 * t1376 + t1380 * t1437;
t1546 = pkin(9) * t968;
t1545 = pkin(9) * t969;
t1543 = pkin(2) * t1212;
t1394 = t1421 - 0.2e1 * t1530;
t1298 = t1394 + t1573;
t1542 = pkin(2) * t1298;
t1372 = t1376 ^ 2;
t1373 = t1380 ^ 2;
t1487 = t1372 + t1373;
t1338 = t1487 * qJDD(1);
t1541 = pkin(2) * t1338;
t1537 = qJDD(1) * pkin(1);
t1534 = qJ(5) * t1379;
t1533 = qJD(1) * qJD(3);
t1519 = t1568 * t1375;
t1508 = t1338 * t1377;
t1507 = t1338 * t1381;
t1359 = t1376 * t1383 * t1380;
t1343 = t1359 + qJDD(3);
t1506 = t1343 * t1376;
t1505 = t1343 * t1380;
t1344 = qJDD(3) - t1359;
t1504 = t1344 * t1376;
t1503 = t1344 * t1380;
t1502 = t1352 * t1270;
t1501 = t1352 * t1374;
t1500 = t1352 * t1378;
t1497 = t1372 * t1383;
t1496 = t1373 * t1383;
t1385 = t1431 + t1388;
t1061 = t1457 * pkin(4) - t1413 * pkin(5) - t1551 * pkin(9) + (-pkin(4) * qJD(4) + t1295 + t1549) * t1332 + t1385;
t1495 = t1374 * t1061;
t1234 = t1375 * t1239;
t1492 = t1376 * t1298;
t1059 = t1378 * t1061;
t1235 = t1379 * t1239;
t1283 = t1380 * t1298;
t1489 = t1035 * t1380 + t1150 * t1540;
t1488 = pkin(3) * t1239 + pkin(8) * t1069;
t1483 = t1376 * t1206;
t1482 = t1380 * t1206;
t1233 = (qJD(4) + t1361) * t1330 + t1425;
t1476 = pkin(3) * t1233 - t1234 + t1630;
t1475 = -pkin(3) * t1566 + t1235 + t1604;
t1474 = -pkin(9) * t1118 + t1059;
t946 = t1375 * t969 - t1379 * t968;
t929 = -pkin(3) * t946 - t1562;
t950 = t1061 * t1548 - t1545;
t961 = qJ(5) * t1061 - t1546;
t932 = -pkin(8) * t946 - t1375 * t950 + t1379 * t961;
t1473 = -t1376 * t929 + t1380 * t932;
t1158 = -t1266 - t1267;
t1419 = -pkin(9) * t1048 - t969;
t954 = t1158 * t1548 + t1419;
t1420 = -pkin(9) * t1046 - t968;
t959 = qJ(5) * t1158 + t1420;
t998 = -t1046 * t1379 + t1048 * t1375;
t938 = -pkin(8) * t998 - t1375 * t954 + t1379 * t959;
t956 = -pkin(3) * t998 - t1561;
t1472 = -t1376 * t956 + t1380 * t938;
t1103 = (qJD(6) - t1352) * t1270 + t1463;
t1434 = -pkin(9) * t1093 + t1495;
t1003 = qJ(5) * t1103 + t1434;
t1039 = -t1093 * t1379 + t1094 * t1375;
t1433 = -pkin(9) * t1094 + t1059;
t982 = t1103 * t1548 + t1433;
t952 = -pkin(8) * t1039 + t1003 * t1379 - t1375 * t982;
t962 = -pkin(3) * t1039 - t1560;
t1471 = -t1376 * t962 + t1380 * t952;
t1012 = qJ(5) * t1570 + t1474;
t1055 = -t1118 * t1379 + t1119 * t1375;
t1432 = -pkin(9) * t1119 - t1495;
t988 = t1548 * t1570 + t1432;
t957 = -pkin(8) * t1055 + t1012 * t1379 - t1375 * t988;
t967 = -pkin(3) * t1055 - t1559;
t1470 = -t1376 * t967 + t1380 * t957;
t1028 = t1083 * t1375 - t1084 * t1379;
t1443 = -pkin(4) * t1084 + qJ(5) * t1083;
t978 = -pkin(3) * t1028 - t1443;
t980 = -pkin(8) * t1028 + (-pkin(4) * t1375 + t1534) * t1088;
t1469 = -t1376 * t978 + t1380 * t980;
t1075 = pkin(4) * t1564 + t1083;
t1078 = qJ(5) * t1564 + t1084;
t1148 = -t1227 * t1375 - t1518;
t1004 = -pkin(8) * t1148 - t1075 * t1375 + t1078 * t1379;
t1442 = -pkin(4) * t1568 - qJ(5) * t1227;
t1076 = -pkin(3) * t1148 - t1442;
t1468 = t1004 * t1380 - t1376 * t1076;
t1073 = t1384 + 0.2e1 * t1431;
t1031 = -pkin(4) * t1521 + t1073 * t1379 - t1631;
t1390 = pkin(4) * t1265 + qJ(5) * t1567 + t1429;
t1036 = -t1390 - 0.2e1 * t1529 - t1632;
t1467 = t1031 * t1380 - t1376 * t1036;
t1074 = t1485 + (-t1566 - t1413) * pkin(4) + t1385;
t1033 = -t1074 * t1375 - t1534 * t1566 - t1603;
t1386 = -pkin(4) * t1459 + qJ(5) * t1563 - t1084;
t1038 = -t1386 - t1605;
t1466 = t1033 * t1380 - t1376 * t1038;
t1081 = t1143 - t1605;
t1124 = -t1234 - t1603;
t1465 = -t1376 * t1081 + t1124 * t1380;
t1082 = t1144 + t1632;
t1127 = -t1235 + t1631;
t1464 = -t1376 * t1082 + t1127 * t1380;
t1310 = t1383 * pkin(1) + t1394;
t1311 = -t1406 + t1537;
t1460 = -t1310 * t1381 - t1311 * t1377;
t1458 = -t1347 * t1377 - t1348 * t1381;
t1000 = t1046 * t1375 + t1048 * t1379;
t1456 = pkin(3) * t1158 + pkin(8) * t1000 + t1375 * t959 + t1379 * t954;
t947 = t1375 * t968 + t1379 * t969;
t1455 = pkin(3) * t1061 + pkin(8) * t947 + t1375 * t961 + t1379 * t950;
t1040 = t1093 * t1375 + t1094 * t1379;
t1454 = pkin(3) * t1103 + pkin(8) * t1040 + t1003 * t1375 + t1379 * t982;
t1056 = t1118 * t1375 + t1119 * t1379;
t1453 = pkin(3) * t1570 + pkin(8) * t1056 + t1012 * t1375 + t1379 * t988;
t1452 = t1377 * t1359;
t1451 = t1381 * t1359;
t1152 = -t1227 * t1379 + t1519;
t1450 = pkin(8) * t1152 + t1075 * t1379 + t1078 * t1375 + t1596;
t1154 = t1228 * t1379 + t1519;
t1449 = pkin(8) * t1154 + t1069 + t1596;
t1049 = t1069 * t1376 + t1239 * t1380;
t1448 = -pkin(2) * t1049 - t1488;
t1339 = qJDD(1) * t1381 - t1377 * t1383;
t1447 = pkin(6) * t1339 + g(3) * t1377;
t1340 = qJDD(1) * t1377 + t1381 * t1383;
t1446 = -pkin(6) * t1340 + g(3) * t1381;
t1438 = t1220 * t1380 + t1481;
t1334 = 0.2e1 * t1477 + t1486;
t1436 = pkin(2) * t1334 - t1283;
t1337 = t1365 - 0.2e1 * t1479;
t1435 = pkin(2) * t1337 + t1492;
t1213 = -t1275 * t1376 - t1276 * t1380;
t1428 = t1310 * t1377 - t1311 * t1381;
t1426 = t1347 * t1381 - t1348 * t1377;
t1424 = -t1475 - t1616;
t1120 = t1233 * t1380 + t1624;
t1423 = -pkin(2) * t1120 - t1476;
t1357 = -t1382 - t1496;
t1288 = t1357 * t1380 - t1506;
t1422 = -pkin(2) * t1288 - t1276;
t943 = t1061 * t1380 + t1376 * t947;
t1418 = -pkin(2) * t943 - t1455;
t983 = t1000 * t1376 + t1158 * t1380;
t1417 = -pkin(2) * t983 - t1456;
t1013 = t1040 * t1376 + t1103 * t1380;
t1412 = -pkin(2) * t1013 - t1454;
t1017 = t1056 * t1376 + t1380 * t1570;
t1411 = -pkin(2) * t1017 - t1453;
t1410 = pkin(3) * t1569 + pkin(4) * t1520 + t1073 * t1375 - t1630;
t1089 = t1152 * t1376 + t1589;
t1409 = -pkin(2) * t1089 - t1450;
t1090 = t1154 * t1376 + t1589;
t1408 = -pkin(2) * t1090 - t1449;
t1407 = t1379 * t1074 + t1566 * t1602 + t1604;
t1355 = -t1382 - t1497;
t1286 = t1355 * t1376 + t1503;
t1405 = -pkin(2) * t1286 - t1275;
t1404 = pkin(2) * t946 - t1376 * t932 - t1380 * t929;
t1403 = pkin(2) * t998 - t1376 * t938 - t1380 * t956;
t1402 = pkin(2) * t1028 - t1376 * t980 - t1380 * t978;
t1401 = pkin(2) * t1039 - t1376 * t952 - t1380 * t962;
t1400 = pkin(2) * t1055 - t1376 * t957 - t1380 * t967;
t1399 = pkin(2) * t1148 - t1376 * t1004 - t1380 * t1076;
t1398 = -t1376 * t1031 - t1380 * t1036 + t1633;
t1397 = -t1376 * t1033 - t1380 * t1038 + t1606;
t1396 = -t1380 * t1081 - t1376 * t1124 + t1606;
t1395 = -t1380 * t1082 - t1376 * t1127 - t1633;
t1113 = t1380 * t1569 - t1624;
t1393 = -pkin(2) * t1113 - t1410;
t1391 = -t1407 - t1616;
t1356 = t1382 - t1496;
t1354 = -t1382 + t1497;
t1342 = (-t1372 + t1373) * t1383;
t1341 = t1487 * t1383;
t1329 = t1487 * t1533;
t1325 = t1445 - 0.2e1 * t1537;
t1317 = -t1348 + t1369 + 0.2e1 * t1371;
t1300 = t1336 * t1376 + t1373 * t1533;
t1299 = t1335 * t1380 + t1372 * t1533;
t1293 = -t1357 * t1376 - t1505;
t1292 = -t1356 * t1376 + t1503;
t1291 = t1439 * t1380;
t1290 = t1355 * t1380 - t1504;
t1289 = t1354 * t1380 - t1506;
t1287 = t1356 * t1380 + t1504;
t1285 = t1354 * t1376 + t1505;
t1284 = t1440 * t1376;
t1273 = -t1334 * t1380 - t1337 * t1376;
t1272 = -t1334 * t1376 + t1337 * t1380;
t1253 = pkin(1) * t1311 - qJ(2) * t1310;
t1246 = -t1267 + t1349;
t1245 = t1266 - t1349;
t1201 = t1267 - t1266;
t1187 = pkin(2) * t1341 + t1213;
t1184 = -qJ(2) * t1293 - t1422;
t1183 = -qJ(2) * t1290 - t1405;
t1173 = (t1268 * t1378 - t1270 * t1374) * t1352;
t1172 = (t1268 * t1374 + t1270 * t1378) * t1352;
t1171 = -t1290 * t1547 + t1436;
t1170 = -t1293 * t1547 + t1435;
t1169 = qJ(2) * t1337 - t1288 * t1547 - t1283;
t1168 = qJ(2) * t1334 - t1286 * t1547 - t1492;
t1159 = -qJ(2) * t1341 + t1338 * t1547 - t1212;
t1155 = -qJD(6) * t1270 - t1463;
t1131 = t1245 * t1378 + t1527;
t1130 = -t1246 * t1374 + t1590;
t1129 = t1245 * t1374 - t1526;
t1128 = t1246 * t1378 + t1595;
t1126 = -qJ(2) * t1213 + t1543;
t1122 = -t1233 * t1376 + t1623;
t1115 = -t1376 * t1569 - t1623;
t1102 = -t1213 * t1547 - t1542;
t1101 = -qJ(2) * t1298 - t1212 * t1547;
t1098 = t1156 * t1378 + t1270 * t1501;
t1097 = t1156 * t1374 - t1270 * t1500;
t1096 = -t1155 * t1374 - t1268 * t1500;
t1095 = -t1155 * t1378 + t1268 * t1501;
t1092 = t1154 * t1380 - t1594;
t1091 = t1152 * t1380 - t1594;
t1086 = t1172 * t1375 + t1173 * t1379;
t1085 = -t1172 * t1379 + t1173 * t1375;
t1080 = t1086 * t1380 + t1321 * t1376;
t1079 = t1086 * t1376 - t1321 * t1380;
t1066 = t1068 * t1540;
t1065 = t1129 * t1375 + t1131 * t1379;
t1064 = t1128 * t1375 + t1130 * t1379;
t1063 = -t1129 * t1379 + t1131 * t1375;
t1062 = -t1128 * t1379 + t1130 * t1375;
t1050 = t1069 * t1380 - t1239 * t1376;
t1047 = -t1103 * t1378 - t1374 * t1570;
t1045 = -t1103 * t1374 + t1378 * t1570;
t1044 = t1097 * t1375 + t1098 * t1379;
t1043 = -t1095 * t1375 + t1096 * t1379;
t1042 = -t1097 * t1379 + t1098 * t1375;
t1041 = t1095 * t1379 + t1096 * t1375;
t1026 = t1044 * t1380 - t1483;
t1025 = t1043 * t1380 + t1483;
t1024 = t1044 * t1376 + t1482;
t1023 = t1043 * t1376 - t1482;
t1022 = t1065 * t1380 + t1104 * t1376;
t1021 = t1064 * t1380 - t1107 * t1376;
t1020 = t1065 * t1376 - t1104 * t1380;
t1019 = t1064 * t1376 + t1107 * t1380;
t1018 = t1056 * t1380 - t1376 * t1570;
t1016 = -qJ(2) * t1122 - t1423;
t1015 = -t1424 - t1613;
t1014 = t1040 * t1380 - t1103 * t1376;
t1006 = t1029 * t1380 - t1088 * t1376;
t999 = t1045 * t1375 + t1047 * t1379;
t997 = -t1045 * t1379 + t1047 * t1375;
t995 = -t1122 * t1547 + t1395;
t994 = -t1120 * t1547 + t1464 - t1629;
t993 = -t1201 * t1376 + t1380 * t999;
t992 = t1201 * t1380 + t1376 * t999;
t991 = -t1391 - t1613;
t990 = t1396 - t1612;
t989 = t1465 + t1609;
t986 = -qJ(2) * t1115 - t1393;
t985 = -qJ(2) * t1092 - t1408;
t984 = t1000 * t1380 - t1158 * t1376;
t977 = -qJ(2) * t1050 - t1448;
t976 = -t1092 * t1547 - t1558;
t975 = qJ(2) * t1150 - t1090 * t1547 + t1489;
t974 = -qJ(2) * t1091 - t1409;
t973 = t1397 - t1612;
t972 = t1466 + t1609;
t971 = -t1115 * t1547 + t1398;
t970 = -t1113 * t1547 + t1467 + t1629;
t966 = -t1091 * t1547 + t1399;
t965 = qJ(2) * t1148 - t1089 * t1547 + t1468;
t964 = -t1050 * t1547 + t1576;
t963 = t1066 + (qJ(2) - t1539) * t1068 - t1547 * t1049;
t948 = -qJ(2) * t1006 - t1583;
t944 = -t1061 * t1376 + t1380 * t947;
t942 = -qJ(2) * t1018 - t1411;
t941 = -qJ(2) * t1014 - t1412;
t940 = -t1006 * t1547 + t1402;
t939 = qJ(2) * t1028 - t1005 * t1547 + t1469;
t936 = -t1018 * t1547 + t1400;
t935 = qJ(2) * t1055 - t1017 * t1547 + t1470;
t934 = -t1014 * t1547 + t1401;
t933 = qJ(2) * t1039 - t1013 * t1547 + t1471;
t930 = -qJ(2) * t984 - t1417;
t928 = -t1547 * t984 + t1403;
t927 = qJ(2) * t998 - t1547 * t983 + t1472;
t926 = -qJ(2) * t944 - t1418;
t925 = -t1547 * t944 + t1404;
t924 = qJ(2) * t946 - t1547 * t943 + t1473;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1339, 0, -t1340, 0, -t1447, -t1446, -t1426, -pkin(6) * t1426, 0, -t1339, t1340, 0, 0, 0, t1428, t1447, t1446, pkin(6) * t1428 + (-pkin(1) * t1377 + qJ(2) * t1381) * g(3), t1300 * t1377 + t1451, t1272 * t1377 + t1342 * t1381, t1287 * t1377 + t1365 * t1381, t1299 * t1377 - t1451, t1285 * t1377 - t1381 * t1486, qJDD(3) * t1381 - t1329 * t1377, t1381 * t1183 - t1377 * t1171 - pkin(6) * (-t1286 * t1381 + t1334 * t1377), t1381 * t1184 - t1377 * t1170 - pkin(6) * (-t1288 * t1381 + t1337 * t1377), -pkin(2) * t1507 + t1377 * t1187 - pkin(6) * (-t1341 * t1377 + t1507), t1381 * t1126 - t1377 * t1102 - pkin(6) * (-t1212 * t1381 - t1298 * t1377), t1556, t1639, t1635, t1580, t1637, t1577, t1381 * t1015 - t1377 * t990 - t1607, t1381 * t1016 - t1377 * t995 - pkin(6) * (-t1120 * t1381 - t1626), t1381 * t985 - t1377 * t976 - pkin(6) * (-t1090 * t1381 + t1150 * t1377), t1381 * t977 - t1377 * t964 - pkin(6) * (-t1049 * t1381 + t1068 * t1377), t1556, t1635, -t1639, t1577, -t1637, t1580, -t1377 * t973 + t1381 * t991 - t1607, t1381 * t974 - t1377 * t966 - pkin(6) * (-t1089 * t1381 + t1148 * t1377), t1381 * t986 - t1377 * t971 - pkin(6) * (-t1113 * t1381 + t1626), t1381 * t948 - t1377 * t940 - pkin(6) * (-t1005 * t1381 + t1028 * t1377), t1024 * t1377 + t1042 * t1381, t1377 * t992 + t1381 * t997, t1019 * t1377 + t1062 * t1381, t1023 * t1377 + t1041 * t1381, t1020 * t1377 + t1063 * t1381, t1079 * t1377 + t1085 * t1381, t1381 * t941 - t1377 * t934 - pkin(6) * (-t1013 * t1381 + t1039 * t1377), t1381 * t942 - t1377 * t936 - pkin(6) * (-t1017 * t1381 + t1055 * t1377), t1381 * t930 - t1377 * t928 - pkin(6) * (t1377 * t998 - t1381 * t983), t1381 * t926 - t1377 * t925 - pkin(6) * (t1377 * t946 - t1381 * t943); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1340, 0, t1339, 0, t1446, -t1447, t1458, pkin(6) * t1458, 0, -t1340, -t1339, 0, 0, 0, t1460, -t1446, t1447, pkin(6) * t1460 + (pkin(1) * t1381 + qJ(2) * t1377) * g(3), -t1300 * t1381 + t1452, -t1272 * t1381 + t1342 * t1377, -t1287 * t1381 + t1365 * t1377, -t1299 * t1381 - t1452, -t1285 * t1381 - t1377 * t1486, qJDD(3) * t1377 + t1329 * t1381, t1377 * t1183 + t1381 * t1171 + pkin(6) * (t1286 * t1377 + t1334 * t1381), t1377 * t1184 + t1381 * t1170 + pkin(6) * (t1288 * t1377 + t1337 * t1381), -pkin(2) * t1508 - t1381 * t1187 + pkin(6) * (-t1341 * t1381 - t1508), t1377 * t1126 + t1381 * t1102 + pkin(6) * (t1212 * t1377 - t1298 * t1381), t1557, -t1638, t1634, t1579, -t1636, t1578, t1377 * t1015 + t1381 * t990 + t1608, t1377 * t1016 + t1381 * t995 + pkin(6) * (t1120 * t1377 - t1625), t1377 * t985 + t1381 * t976 + pkin(6) * (t1090 * t1377 + t1150 * t1381), t1377 * t977 + t1381 * t964 + pkin(6) * (t1049 * t1377 + t1068 * t1381), t1557, t1634, t1638, t1578, t1636, t1579, t1377 * t991 + t1381 * t973 + t1608, t1377 * t974 + t1381 * t966 + pkin(6) * (t1089 * t1377 + t1148 * t1381), t1377 * t986 + t1381 * t971 + pkin(6) * (t1113 * t1377 + t1625), t1377 * t948 + t1381 * t940 + pkin(6) * (t1005 * t1377 + t1028 * t1381), -t1024 * t1381 + t1042 * t1377, t1377 * t997 - t1381 * t992, -t1019 * t1381 + t1062 * t1377, -t1023 * t1381 + t1041 * t1377, -t1020 * t1381 + t1063 * t1377, -t1079 * t1381 + t1085 * t1377, t1377 * t941 + t1381 * t934 + pkin(6) * (t1013 * t1377 + t1039 * t1381), t1377 * t942 + t1381 * t936 + pkin(6) * (t1017 * t1377 + t1055 * t1381), t1377 * t930 + t1381 * t928 + pkin(6) * (t1377 * t983 + t1381 * t998), t1377 * t926 + t1381 * t925 + pkin(6) * (t1377 * t943 + t1381 * t946); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1347, t1348, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1325, t1317, t1253, -t1291, t1273, t1292, t1284, t1289, 0, t1168, t1169, t1159, t1101, t1438, t1112, t1617, t1553, t1138, t1552, t989, t994, t975, t963, t1438, t1617, -t1112, t1552, -t1138, t1553, t972, t965, t970, t939, t1026, t993, t1021, t1025, t1022, t1080, t933, t935, t927, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1383, 0, 0, -g(3), -t1347, 0, 0, -qJDD(1), t1383, 0, 0, 0, -t1311, 0, g(3), qJ(2) * g(3), t1359, t1342, t1365, -t1359, -t1486, qJDD(3), t1183, t1184, -t1541, t1126, t1219, t1149, t1611, t1215, t1195, -t1572, t1015, t1016, t985, t977, t1219, t1611, -t1149, -t1572, -t1195, t1215, t991, t974, t986, t948, t1042, t997, t1062, t1041, t1063, t1085, t941, t942, t930, t926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1383, 0, qJDD(1), 0, g(3), 0, -t1348, 0, 0, -t1383, -qJDD(1), 0, 0, 0, -t1310, -g(3), 0, pkin(1) * g(3), -t1300, -t1272, -t1287, -t1299, -t1285, t1329, t1171, t1170, -t1187, t1102, -t1414, -t1110, -t1618, -t1555, -t1134, -t1554, t990, t995, t976, t964, -t1414, -t1618, t1110, -t1554, t1134, -t1555, t973, t966, t971, t940, -t1024, -t992, -t1019, -t1023, -t1020, -t1079, t934, t936, t928, t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1347, t1348, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1325, t1317, t1253, -t1291, t1273, t1292, t1284, t1289, 0, t1168, t1169, t1159, t1101, t1438, t1112, t1617, t1553, t1138, t1552, t989, t994, t975, t963, t1438, t1617, -t1112, t1552, -t1138, t1553, t972, t965, t970, t939, t1026, t993, t1021, t1025, t1022, t1080, t933, t935, t927, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1311, -t1310, 0, -t1291, t1273, t1292, t1284, t1289, 0, -pkin(7) * t1286 - t1492, -pkin(7) * t1288 - t1283, pkin(7) * t1338 - t1212, -pkin(7) * t1212, t1438, t1112, t1617, t1553, t1138, t1552, t1465 - t1614, -pkin(7) * t1120 + t1464, -pkin(7) * t1090 + t1489, -pkin(7) * t1049 - t1068 * t1539 + t1066, t1438, t1617, -t1112, t1552, -t1138, t1553, t1466 - t1614, -pkin(7) * t1089 + t1468, -pkin(7) * t1113 + t1467, -pkin(7) * t1005 + t1469, t1026, t993, t1021, t1025, t1022, t1080, -pkin(7) * t1013 + t1471, -pkin(7) * t1017 + t1470, -pkin(7) * t983 + t1472, -pkin(7) * t943 + t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1383, 0, 0, 0, t1311, 0, -g(3), 0, -t1359, -t1342, -t1365, t1359, t1486, -qJDD(3), t1405, t1422, t1541, -t1543, -t1219, -t1149, -t1611, -t1215, -t1195, t1572, t1424, t1423, t1408, t1448, -t1219, -t1611, t1149, t1572, t1195, -t1215, t1391, t1409, t1393, t1583, -t1042, -t997, -t1062, -t1041, -t1063, -t1085, t1412, t1411, t1417, t1418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1383, qJDD(1), 0, 0, 0, t1310, g(3), 0, 0, t1300, t1272, t1287, t1299, t1285, -t1329, pkin(7) * t1290 - t1436, pkin(7) * t1293 - t1435, t1187, pkin(7) * t1213 + t1542, t1414, t1110, t1618, t1555, t1134, t1554, -t1396 + t1615, pkin(7) * t1122 - t1395, pkin(7) * t1092 + t1558, pkin(7) * t1050 - t1576, t1414, t1618, -t1110, t1554, -t1134, t1555, -t1397 + t1615, pkin(7) * t1091 - t1399, pkin(7) * t1115 - t1398, pkin(7) * t1006 - t1402, t1024, t992, t1019, t1023, t1020, t1079, pkin(7) * t1014 - t1401, pkin(7) * t1018 - t1400, pkin(7) * t984 - t1403, pkin(7) * t944 - t1404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1336, -t1334, t1344, t1479, t1354, -t1479, 0, -t1298, -t1275, 0, t1220, t1153, t1610, t1387, t1199, t1437, t1124, t1127, t1035, -pkin(8) * t1068, t1220, t1610, -t1153, t1437, -t1199, t1387, t1033, t1004, t1031, t980, t1044, t999, t1064, t1043, t1065, t1086, t952, t957, t938, t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1477, t1337, t1356, t1335, t1343, -t1477, t1298, 0, -t1276, 0, -t1282, -t1565, -t1568, t1282, t1227, -t1328, t1081, t1082, -pkin(3) * t1150, -pkin(3) * t1068, -t1282, -t1568, t1565, -t1328, -t1227, t1282, t1038, t1076, t1036, t978, t1206, t1201, t1107, -t1206, -t1104, -t1321, t962, t967, t956, t929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1359, t1342, t1365, -t1359, -t1486, qJDD(3), t1275, t1276, 0, 0, t1219, t1149, t1611, t1215, t1195, -t1572, t1475, t1476, t1449, t1488, t1219, t1611, -t1149, -t1572, -t1195, t1215, t1407, t1450, t1410, t1392, t1042, t997, t1062, t1041, t1063, t1085, t1454, t1453, t1456, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, -t1566, -t1459, t1509, t1301, -t1509, 0, -t1239, t1143, 0, t1263, -t1459, t1566, -t1509, -t1301, t1509, -qJ(5) * t1566, t1078, t1073, qJ(5) * t1088, t1098, t1047, t1130, t1096, t1131, t1173, t1003, t1012, t959, t961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1309, t1569, -t1302, -t1413, t1567, -t1309, t1239, 0, t1144, 0, t1309, -t1302, -t1569, -t1309, -t1567, -t1413, t1074, t1075, pkin(4) * t1569, pkin(4) * t1088, -t1097, -t1045, -t1128, t1095, -t1129, -t1172, t982, t988, t954, t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, t1565, t1568, -t1282, -t1227, t1328, -t1143, -t1144, 0, 0, t1282, t1568, -t1565, t1328, t1227, -t1282, t1386, t1442, t1345 + t1390, t1443, -t1206, -t1201, -t1107, t1206, t1104, t1321, t1560, t1559, t1561, t1562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, -t1459, t1566, -t1509, -t1301, t1509, 0, t1084, t1088, 0, t1098, t1047, t1130, t1096, t1131, t1173, t1434, t1474, t1420, -t1546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, t1568, -t1565, t1328, t1227, -t1282, -t1084, 0, t1083, 0, -t1206, -t1201, -t1107, t1206, t1104, t1321, -pkin(5) * t1093 + t1010, -pkin(5) * t1118 + t1011, -pkin(5) * t1046, -pkin(5) * t968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1309, t1302, t1569, t1309, t1567, t1413, -t1088, -t1083, 0, 0, t1097, t1045, t1128, -t1095, t1129, t1172, -pkin(5) * t1103 - t1433, -pkin(5) * t1570 - t1432, -pkin(5) * t1158 - t1419, -pkin(5) * t1061 + t1545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1156, -t1103, t1571, -t1250, t1245, t1250, 0, t1061, t1010, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1502, t1570, t1246, t1155, -t1176, t1502, -t1061, 0, t1011, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1206, t1201, t1107, -t1206, -t1104, -t1321, -t1010, -t1011, 0, 0;];
m_new_reg  = t1;
