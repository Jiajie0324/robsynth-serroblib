% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPR10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:37:10
% EndTime: 2019-03-09 05:37:25
% DurationCPUTime: 6.20s
% Computational Cost: add. (6012->475), mult. (12342->629), div. (0->0), fcn. (7457->6), ass. (0->238)
t177 = sin(qJ(3));
t272 = qJD(1) * t177;
t350 = -t272 - qJD(4);
t180 = cos(qJ(3));
t141 = pkin(3) * t177 - pkin(8) * t180 + qJ(2);
t118 = t141 * qJD(1);
t182 = -pkin(1) - pkin(7);
t158 = qJD(1) * t182 + qJD(2);
t138 = t177 * t158;
t120 = qJD(3) * pkin(8) + t138;
t176 = sin(qJ(4));
t179 = cos(qJ(4));
t58 = t118 * t179 - t120 * t176;
t275 = qJD(5) - t58;
t291 = qJ(5) * t179;
t315 = pkin(4) + pkin(5);
t204 = t176 * t315 - t291;
t349 = t182 - t204;
t258 = qJD(6) + t350;
t175 = sin(qJ(6));
t178 = cos(qJ(6));
t271 = qJD(1) * t180;
t248 = t179 * t271;
t270 = qJD(3) * t176;
t131 = t248 + t270;
t344 = -pkin(9) * t131 + t275;
t31 = t315 * t350 + t344;
t153 = t350 * qJ(5);
t259 = t179 * qJD(3);
t129 = t176 * t271 - t259;
t59 = t118 * t176 + t120 * t179;
t48 = pkin(9) * t129 + t59;
t35 = -t153 + t48;
t5 = -t175 * t35 + t178 * t31;
t348 = t258 * t5;
t6 = t175 * t31 + t178 * t35;
t347 = t258 * t6;
t216 = -t129 * t178 + t131 * t175;
t68 = t129 * t175 + t131 * t178;
t312 = t68 * t216;
t267 = qJD(4) * t176;
t314 = pkin(8) - pkin(9);
t226 = pkin(3) * t180 + pkin(8) * t177;
t135 = t226 * qJD(1);
t279 = t180 * t158;
t73 = t135 * t176 + t179 * t279;
t61 = qJ(5) * t271 + t73;
t346 = -pkin(9) * t176 * t272 + t267 * t314 + t61;
t149 = t314 * t179;
t282 = t177 * t179;
t199 = pkin(9) * t282 - t180 * t315;
t72 = t179 * t135 - t176 * t279;
t345 = qJD(1) * t199 - qJD(4) * t149 - t72;
t128 = qJD(3) * t226 + qJD(2);
t266 = qJD(4) * t177;
t343 = -t182 * t266 + t128;
t104 = t128 * qJD(1);
t268 = qJD(3) * t180;
t246 = t176 * t268;
t265 = qJD(4) * t179;
t233 = -t104 * t179 + t118 * t267 + t120 * t265 + t158 * t246;
t205 = -t350 * t59 - t233;
t342 = -t216 ^ 2 + t68 ^ 2;
t150 = t350 * qJD(5);
t257 = qJD(1) * qJD(3);
t165 = t180 * t257;
t159 = qJ(5) * t165;
t245 = t180 * t259;
t202 = -t104 * t176 - t118 * t265 + t120 * t267 - t158 * t245;
t17 = -t150 + t159 - t202;
t269 = qJD(3) * t177;
t247 = t176 * t269;
t151 = qJD(1) * t247;
t86 = qJD(4) * t131 - t151;
t10 = pkin(9) * t86 + t17;
t264 = qJD(4) * t180;
t242 = t176 * t264;
t197 = t177 * t259 + t242;
t85 = qJD(1) * t197 - qJD(4) * t259;
t11 = pkin(9) * t85 - t165 * t315 + t233;
t2 = -qJD(6) * t6 - t175 * t10 + t11 * t178;
t306 = qJD(3) * pkin(3);
t121 = -t279 - t306;
t194 = qJ(5) * t131 - t121;
t42 = -t129 * t315 + t194;
t341 = -t42 * t68 + t2;
t234 = -t175 * t85 - t178 * t86;
t19 = qJD(6) * t68 + t234;
t340 = t258 * t68 - t19;
t261 = qJD(6) * t178;
t262 = qJD(6) * t175;
t18 = -t129 * t261 + t131 * t262 - t175 * t86 + t178 * t85;
t323 = t216 * t258 - t18;
t287 = t131 * t179;
t297 = t86 * t179;
t299 = t85 * t176;
t339 = (qJD(4) * (t129 * t176 - t287) - t297 + t299) * t180 + (t129 * t179 + t131 * t176) * t269;
t230 = t129 + t259;
t285 = t350 * t177;
t338 = (t176 * t285 + t180 * t230) * qJD(1) + t350 * t267;
t174 = t180 ^ 2;
t211 = qJD(1) * t174 + t285;
t240 = t179 * t264;
t337 = (t129 * t180 + t176 * t211) * qJD(3) - t350 * t240 + t86 * t177;
t228 = qJD(1) + t266;
t280 = t179 * t180;
t286 = t350 * t176;
t336 = ((-t131 + t248) * t177 - t350 * t280) * qJD(3) - t180 * t85 + t228 * t286;
t209 = t131 * t350;
t210 = t129 * t350;
t335 = (t86 - t209) * t176 + (-t210 + t85) * t179;
t256 = 0.2e1 * qJD(1);
t227 = pkin(4) * t165;
t20 = -t227 + t233;
t52 = -t153 + t59;
t333 = t350 * t52 + t20;
t331 = t86 + t209;
t213 = t175 * t179 - t176 * t178;
t329 = t177 * t213;
t327 = -qJD(5) * t176 - t138;
t326 = qJD(4) - qJD(6);
t325 = -t175 * t265 - t176 * t261 + t178 * t267 + t179 * t262;
t1 = t10 * t178 + t11 * t175 + t261 * t31 - t262 * t35;
t324 = t216 * t42 - t1;
t284 = t176 * qJ(5);
t320 = -t179 * t315 - t284;
t316 = t131 ^ 2;
t313 = pkin(8) * t131;
t148 = t314 * t176;
t84 = t148 * t175 + t149 * t178;
t311 = qJD(6) * t84 - t175 * t346 + t178 * t345;
t83 = t148 * t178 - t149 * t175;
t310 = -qJD(6) * t83 + t175 * t345 + t178 * t346;
t309 = t204 * t350 - t327;
t133 = t175 * t176 + t178 * t179;
t106 = t133 * t177;
t308 = -qJD(1) * t106 + qJD(6) * t133 - t175 * t267 - t178 * t265;
t307 = qJD(1) * t329 - t325;
t55 = pkin(4) * t129 - t194;
t305 = t131 * t55;
t193 = -qJ(5) * t85 + qJD(5) * t131 - t158 * t269;
t22 = pkin(4) * t86 - t193;
t302 = t176 * t22;
t301 = t179 * t22;
t298 = t85 * t177;
t139 = -qJ(5) * t175 - t178 * t315;
t296 = t139 * qJD(6) - t175 * t48 + t178 * t344;
t140 = qJ(5) * t178 - t175 * t315;
t295 = -t140 * qJD(6) - t175 * t344 - t178 * t48;
t222 = pkin(4) * t176 - t291;
t294 = -t222 * t350 + t327;
t187 = t326 * t133;
t293 = -qJD(1) * t133 - t177 * t187 + t213 * t268;
t200 = qJD(3) * t133;
t292 = -qJD(1) * t213 - t180 * t200 - t326 * t329;
t290 = t129 * qJ(5);
t289 = t129 * t131;
t283 = t176 * t180;
t281 = t177 * t182;
t183 = qJD(3) ^ 2;
t278 = t183 * t177;
t277 = t183 * t180;
t184 = qJD(1) ^ 2;
t276 = t184 * qJ(2);
t88 = t141 * t176 + t179 * t281;
t274 = t177 ^ 2 - t174;
t273 = -t183 - t184;
t263 = qJD(5) * t179;
t255 = pkin(8) * t286;
t254 = pkin(8) * t350 * t179;
t253 = pkin(8) * t268;
t252 = qJD(2) * t256;
t249 = t180 * t184 * t177;
t81 = qJ(5) * t177 + t88;
t244 = t182 * t268;
t238 = t350 * t271;
t236 = t129 ^ 2 - t316;
t232 = -t121 + t279;
t155 = t176 * t281;
t87 = t141 * t179 - t155;
t231 = t258 ^ 2;
t229 = -t131 + t270;
t224 = (qJD(4) * t129 - t85) * pkin(8);
t223 = pkin(4) * t179 + t284;
t57 = t155 + (-pkin(9) * t180 - t141) * t179 - t315 * t177;
t63 = pkin(9) * t283 + t81;
t24 = -t175 * t63 + t178 * t57;
t25 = t175 * t57 + t178 * t63;
t51 = pkin(4) * t350 + t275;
t221 = t176 * t52 - t179 * t51;
t220 = t176 * t51 + t179 * t52;
t219 = t176 * t59 + t179 * t58;
t218 = t176 * t58 - t179 * t59;
t212 = t232 * qJD(3);
t46 = -t141 * t267 - t176 * t244 + t179 * t343;
t208 = -t177 * t55 + t253;
t207 = -t182 + t222;
t206 = t121 * t177 - t253;
t196 = t240 - t247;
t45 = t141 * t265 + t176 * t343 + t179 * t244;
t192 = -t350 * t58 + t202;
t191 = -t176 * t210 - t297;
t34 = qJ(5) * t268 + qJD(5) * t177 + t45;
t190 = -qJD(4) * t221 + t17 * t179 + t176 * t20;
t189 = -qJD(4) * t219 + t176 * t233 - t179 * t202;
t188 = t129 * t196 + t283 * t86;
t186 = t129 * t269 + (-t86 - t151) * t180 - (-t179 * t228 - t246) * t350;
t185 = -t86 * t282 - t129 * t245 + t228 * t287 + (t129 * t228 + t131 * t268 - t298) * t176;
t169 = qJ(2) * t252;
t152 = t177 * t165;
t142 = -pkin(3) - t223;
t124 = pkin(3) - t320;
t108 = t133 * t180;
t107 = t175 * t280 - t178 * t283;
t95 = t207 * t180;
t92 = -t268 * t350 + t152;
t82 = -pkin(4) * t177 - t87;
t80 = t349 * t180;
t76 = pkin(8) * t297;
t74 = pkin(4) * t131 + t290;
t62 = -pkin(4) * t271 - t72;
t56 = -t131 * t315 - t290;
t53 = -t85 - t210;
t50 = (qJD(4) * t223 - t263) * t180 - t207 * t269;
t44 = -t350 * t265 + (t180 * t229 - t282 * t350) * qJD(1);
t43 = -pkin(4) * t268 - t46;
t38 = t177 * t200 + t180 * t325;
t37 = qJD(3) * t329 + t180 * t187;
t33 = (qJD(4) * t320 + t263) * t180 - t349 * t269;
t32 = -t179 * t209 - t299;
t30 = -t131 * t197 - t280 * t85;
t26 = pkin(9) * t196 + t34;
t23 = pkin(9) * t242 + qJD(3) * t199 - t46;
t21 = t350 * t242 - t298 + (t131 * t180 + t179 * t211) * qJD(3);
t14 = -t315 * t86 + t193;
t4 = -qJD(6) * t25 - t175 * t26 + t178 * t23;
t3 = qJD(6) * t24 + t175 * t23 + t178 * t26;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t169, -0.2e1 * t152, 0.2e1 * t274 * t257, -t278, 0.2e1 * t152, -t277, 0, -t182 * t278 + (qJ(2) * t268 + qJD(2) * t177) * t256, -t182 * t277 + (-qJ(2) * t269 + qJD(2) * t180) * t256, 0, t169, t30, t339, t21, t188, -t337, t92, -t350 * t46 - t177 * t233 + (t121 * t265 - t182 * t86) * t180 + ((qJD(1) * t87 + t58) * t180 + (t129 * t182 + t176 * t232) * t177) * qJD(3), t350 * t45 + t177 * t202 + (-t121 * t267 + t182 * t85) * t180 + ((-qJD(1) * t88 - t59) * t180 + (t131 * t182 + t179 * t232) * t177) * qJD(3), -t129 * t45 - t131 * t46 + t85 * t87 - t86 * t88 + t219 * t269 + (qJD(4) * t218 + t176 * t202 + t179 * t233) * t180, -t202 * t88 - t212 * t281 - t233 * t87 + t45 * t59 + t46 * t58, t30, t21, -t339, t92, t337, t188, t129 * t50 + t350 * t43 + t86 * t95 + (-t270 * t55 - t20) * t177 + (t55 * t265 + t302 + (-qJD(1) * t82 - t51) * qJD(3)) * t180, -t129 * t34 + t131 * t43 - t81 * t86 - t82 * t85 + t221 * t269 + (-qJD(4) * t220 - t17 * t176 + t179 * t20) * t180, -t131 * t50 - t350 * t34 + t85 * t95 + (t259 * t55 + t17) * t177 + (t55 * t267 - t301 + (qJD(1) * t81 + t52) * qJD(3)) * t180, t17 * t81 + t20 * t82 + t22 * t95 + t34 * t52 + t43 * t51 + t50 * t55, -t108 * t18 - t38 * t68, t107 * t18 - t108 * t19 + t216 * t38 + t37 * t68, -t38 * t258 + t18 * t177 + (-qJD(1) * t108 - t68) * t268, t107 * t19 - t216 * t37, t37 * t258 + t19 * t177 + (qJD(1) * t107 + t216) * t268, -t258 * t268 + t152, t107 * t14 + t258 * t4 - t177 * t2 + t19 * t80 + t33 * t216 - t37 * t42 + (-qJD(1) * t24 - t5) * t268, t1 * t177 + t108 * t14 - t258 * t3 - t18 * t80 + t33 * t68 - t38 * t42 + (qJD(1) * t25 + t6) * t268, -t1 * t107 - t108 * t2 + t18 * t24 - t19 * t25 - t216 * t3 + t37 * t6 + t38 * t5 - t4 * t68, t1 * t25 + t14 * t80 + t2 * t24 + t3 * t6 + t33 * t42 + t4 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184, -t276, 0, 0, 0, 0, 0, 0, t273 * t177, t273 * t180, 0, -t276, 0, 0, 0, 0, 0, 0, t186, -t336, t185, -t218 * t268 - t219 * qJD(1) + (-t212 + t189) * t177, 0, 0, 0, 0, 0, 0, t186, t185, t336, -t221 * qJD(1) + (qJD(3) * t220 - t22) * t180 + (qJD(3) * t55 + t190) * t177, 0, 0, 0, 0, 0, 0, t180 * t19 - t293 * t258 + (-t177 * t216 + t271 * t329) * qJD(3), -t180 * t18 + t292 * t258 + (t106 * t271 - t177 * t68) * qJD(3), -t106 * t19 - t18 * t329 + t216 * t292 + t293 * t68, t1 * t106 + t14 * t180 - t2 * t329 - t269 * t42 - t292 * t6 - t293 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, -t274 * t184, 0, -t249, 0, 0, -t180 * t276, t177 * t276, 0, 0, t32, -t335, t44, t191, t338, t238, -pkin(3) * t86 + t350 * t72 - t230 * t138 + (t121 * t176 + t254) * qJD(4) + (t176 * t206 - t180 * t58) * qJD(1), pkin(3) * t85 - t350 * t73 + t229 * t138 + (t121 * t179 - t255) * qJD(4) + (t179 * t206 + t180 * t59) * qJD(1), t129 * t73 + t131 * t72 - t76 + (-t58 * t272 - t202 + (-t58 + t313) * qJD(4)) * t179 + (t224 - t205) * t176, -t58 * t72 - t59 * t73 + (-t121 - t306) * t138 + t189 * pkin(8), t32, t44, t335, t238, -t338, t191, t142 * t86 - t350 * t62 - t301 + t294 * t129 + (t176 * t55 + t254) * qJD(4) + (-t176 * t208 + t180 * t51) * qJD(1), t129 * t61 - t131 * t62 - t76 + (t51 * t272 + t17 + (t51 + t313) * qJD(4)) * t179 + (t224 + t333) * t176, t142 * t85 + t350 * t61 - t302 - t294 * t131 + (-t179 * t55 + t255) * qJD(4) + (t179 * t208 - t180 * t52) * qJD(1), pkin(8) * t190 + t142 * t22 + t294 * t55 - t51 * t62 - t52 * t61, t18 * t213 - t308 * t68, t133 * t18 + t19 * t213 + t216 * t308 - t307 * t68, -t308 * t258 + (qJD(3) * t213 + t68) * t271, t133 * t19 + t216 * t307, -t307 * t258 + (-t216 + t200) * t271, t258 * t271, t124 * t19 + t133 * t14 + t309 * t216 + t307 * t42 - t311 * t258 + (-qJD(3) * t83 + t5) * t271, -t124 * t18 - t213 * t14 + t309 * t68 - t308 * t42 + t310 * t258 + (qJD(3) * t84 - t6) * t271, -t1 * t133 + t18 * t83 - t19 * t84 + t2 * t213 + t216 * t310 - t307 * t6 + t308 * t5 + t311 * t68, t1 * t84 + t124 * t14 + t2 * t83 + t309 * t42 - t310 * t6 - t311 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, -t236, t53, -t289, -t331, t165, -t121 * t131 + t205, t121 * t129 + t192, 0, 0, t289, t53, t236, t165, t331, -t289, -t129 * t74 + t205 + 0.2e1 * t227 - t305, pkin(4) * t85 - qJ(5) * t86 + (t52 - t59) * t131 + (t51 - t275) * t129, -t129 * t55 + t131 * t74 - 0.2e1 * t150 + 0.2e1 * t159 - t192, -pkin(4) * t20 + qJ(5) * t17 + t275 * t52 - t51 * t59 - t55 * t74, -t312, -t342, -t323, t312, -t340, t165, -t139 * t165 - t216 * t56 + t258 * t295 - t341, t140 * t165 - t258 * t296 - t56 * t68 - t324, t139 * t18 - t140 * t19 + (-t296 + t5) * t216 + (-t295 - t6) * t68, t1 * t140 + t139 * t2 + t295 * t5 + t296 * t6 - t42 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165 + t289, t53, -t350 ^ 2 - t316, t305 + t333, 0, 0, 0, 0, 0, 0, -t131 * t216 - t165 * t178 - t175 * t231, -t131 * t68 + t165 * t175 - t178 * t231, t175 * t340 - t178 * t323, -t42 * t131 + (t2 + t347) * t178 + (t1 - t348) * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t342, t323, -t312, -t234 + (-qJD(6) + t258) * t68, -t165, t341 + t347, t324 + t348, 0, 0;];
tauc_reg  = t7;
