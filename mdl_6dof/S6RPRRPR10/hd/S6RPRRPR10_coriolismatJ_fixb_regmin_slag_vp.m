% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:37:14
% EndTime: 2019-03-09 05:37:39
% DurationCPUTime: 13.18s
% Computational Cost: add. (4835->637), mult. (9776->810), div. (0->0), fcn. (9099->6), ass. (0->487)
t404 = sin(qJ(3));
t403 = sin(qJ(4));
t405 = cos(qJ(6));
t602 = t405 * t403;
t332 = t404 * t602;
t402 = sin(qJ(6));
t406 = cos(qJ(4));
t608 = t404 * t406;
t237 = t402 * t608 - t332;
t533 = qJD(4) - qJD(6);
t407 = cos(qJ(3));
t600 = t405 * t407;
t333 = t403 * t600;
t596 = t406 * t407;
t239 = t402 * t596 - t333;
t594 = t407 * t239;
t630 = t237 * t404;
t441 = t630 / 0.2e1 + t594 / 0.2e1;
t385 = t402 * t406;
t571 = t385 / 0.2e1 - t602 / 0.2e1;
t60 = t441 + t571;
t696 = t60 * qJD(1);
t698 = t237 * t533 + t696;
t61 = t441 - t571;
t697 = qJD(2) * t61;
t390 = t404 * qJD(5);
t369 = t405 * t390;
t695 = qJD(2) * t60 - t369;
t610 = t403 * t407;
t378 = pkin(4) * t610;
t408 = -pkin(1) - pkin(7);
t599 = t406 * qJ(5);
t485 = t408 + t599;
t183 = -t378 + (-pkin(5) * t403 + t485) * t407;
t666 = t404 / 0.2e1;
t601 = t405 * t406;
t614 = t402 * t403;
t290 = t601 + t614;
t675 = t290 / 0.2e1;
t613 = t403 * qJ(5);
t679 = pkin(4) + pkin(5);
t680 = -t406 * t679 - t613;
t272 = pkin(3) - t680;
t677 = t272 / 0.2e1;
t690 = pkin(8) - pkin(9);
t327 = t690 * t403;
t329 = t690 * t406;
t96 = t405 * t327 - t402 * t329;
t420 = -t183 * t675 - t239 * t677 + t666 * t96;
t241 = t407 * t290;
t295 = -t385 + t602;
t674 = t295 / 0.2e1;
t52 = t239 * t674 + t241 * t675;
t559 = qJD(3) * t295;
t694 = qJD(1) * t52 + t290 * t559;
t564 = qJD(1) * t241;
t693 = qJD(3) * t52 + t239 * t564;
t484 = t402 * t327 + t405 * t329;
t419 = t183 * t674 + t241 * t677 + t484 * t666;
t692 = t533 * t484;
t691 = t533 * t96;
t40 = t290 * t239 - t241 * t295;
t67 = t239 ^ 2 - t241 ^ 2;
t457 = qJD(1) * t67 + qJD(3) * t40;
t95 = t290 ^ 2 - t295 ^ 2;
t456 = qJD(1) * t40 + qJD(3) * t95;
t238 = t290 * t404;
t688 = t238 * t533;
t539 = t404 * qJD(1);
t376 = qJD(4) + t539;
t461 = -qJD(6) + t376;
t687 = t239 * t461;
t686 = t241 * t461;
t685 = t290 * t533;
t684 = t403 * t679;
t476 = t533 * t295;
t662 = pkin(8) * t407;
t469 = pkin(3) * t404 - t662;
t448 = qJ(2) + t469;
t284 = t406 * t448;
t609 = t403 * t408;
t486 = -pkin(4) + t609;
t475 = -pkin(5) + t486;
t531 = pkin(9) * t596;
t414 = t475 * t404 - t284 - t531;
t535 = t407 * qJD(3);
t368 = t403 * t535;
t554 = qJD(4) * t406;
t375 = t404 * t554;
t399 = t404 ^ 2;
t669 = t399 / 0.2e1;
t401 = t407 ^ 2;
t386 = t401 * t406;
t670 = t386 / 0.2e1;
t251 = t670 + (t669 + 0.1e1 / 0.2e1) * t406;
t543 = t251 * qJD(1);
t683 = t543 + t368 + t375;
t373 = t406 * t535;
t555 = qJD(4) * t404;
t517 = t403 * t555;
t487 = t669 + t401 / 0.2e1;
t249 = (0.1e1 / 0.2e1 + t487) * t403;
t544 = t249 * qJD(1);
t682 = t544 - t373 + t517;
t398 = t403 ^ 2;
t400 = t406 ^ 2;
t347 = t400 - t398;
t536 = t407 * qJD(1);
t520 = t403 * t536;
t473 = t406 * t520;
t426 = -qJD(3) * t347 + 0.2e1 * t473;
t661 = t406 * pkin(4);
t463 = t613 + t661;
t271 = t463 * t407;
t678 = -t271 / 0.2e1;
t282 = t599 - t684;
t676 = t282 / 0.2e1;
t326 = pkin(4) * t403 - t599;
t673 = t326 / 0.2e1;
t660 = t407 * pkin(3);
t328 = pkin(8) * t404 + t660;
t672 = -t328 / 0.2e1;
t671 = -t378 / 0.2e1;
t668 = t402 / 0.2e1;
t667 = t403 / 0.2e1;
t665 = -t406 / 0.2e1;
t664 = -t407 / 0.2e1;
t663 = t407 / 0.2e1;
t659 = t533 * t40;
t658 = t533 * t52;
t182 = (-t485 + t684) * t404;
t595 = t406 * t408;
t334 = t404 * t595;
t205 = t403 * t448 + t334;
t391 = t404 * qJ(5);
t184 = t391 + t205;
t377 = pkin(9) * t610;
t138 = t377 + t184;
t618 = t402 * t138;
t92 = t405 * t414;
t41 = -t92 + t618;
t591 = t407 * t408;
t336 = t403 * t591;
t394 = t407 * pkin(4);
t104 = -t407 * pkin(5) + t336 - t394 + (pkin(9) * t404 - t328) * t406;
t607 = t405 * t104;
t297 = t403 * t328;
t337 = t406 * t591;
t392 = t407 * qJ(5);
t191 = t337 + t297 + t392;
t611 = t403 * t404;
t144 = -pkin(9) * t611 + t191;
t617 = t402 * t144;
t5 = (t607 - t617) * t404 - t41 * t407 - t182 * t239 + t183 * t237;
t657 = t5 * qJD(1);
t606 = t405 * t138;
t42 = t402 * t414 + t606;
t605 = t405 * t144;
t619 = t402 * t104;
t6 = (t605 + t619) * t404 + t42 * t407 + t182 * t241 - t183 * t238;
t656 = t6 * qJD(1);
t220 = t680 * t407;
t169 = t377 + t205;
t603 = t405 * t169;
t204 = t404 * t609 - t284;
t167 = -t204 + t531;
t616 = t402 * t167;
t48 = -t603 + t616;
t642 = t183 * t241;
t19 = -t220 * t239 - t404 * t48 + t642;
t655 = qJD(1) * t19;
t604 = t405 * t167;
t615 = t402 * t169;
t49 = t604 + t615;
t643 = t183 * t239;
t20 = t220 * t241 + t404 * t49 + t643;
t654 = qJD(1) * t20;
t28 = -t404 * t41 - t643;
t653 = qJD(1) * t28;
t29 = -t404 * t42 - t642;
t652 = qJD(1) * t29;
t222 = -t407 * t485 + t378;
t631 = t222 * t406;
t635 = t205 * t404;
t45 = -t635 + (t271 * t403 + t631) * t407;
t651 = qJD(1) * t45;
t625 = t271 * t406;
t632 = t222 * t403;
t636 = t204 * t404;
t46 = -t636 + (-t625 + t632) * t407;
t650 = qJD(1) * t46;
t188 = t404 * t486 - t284;
t639 = t188 * t406;
t641 = t184 * t403;
t56 = -t639 + t641;
t649 = qJD(1) * t56;
t65 = t184 * t404 - t222 * t596;
t648 = qJD(1) * t65;
t82 = -t594 + t630;
t647 = qJD(1) * t82;
t593 = t407 * t241;
t629 = t238 * t404;
t83 = t593 - t629;
t646 = qJD(1) * t83;
t301 = t405 * qJ(5) - t402 * t679;
t491 = t169 / 0.2e1 - t138 / 0.2e1;
t497 = t596 / 0.2e1;
t15 = (-t167 / 0.2e1 + pkin(9) * t497 + t284 / 0.2e1) * t402 + t491 * t405 + (-t301 / 0.2e1 - t402 * t475 / 0.2e1) * t404;
t645 = t15 * qJD(1);
t300 = qJ(5) * t402 + t405 * t679;
t470 = -t92 / 0.2e1 + t300 * t666;
t499 = -t604 / 0.2e1;
t16 = -t402 * t491 + t470 + t499;
t644 = t16 * qJD(1);
t640 = t184 * t406;
t638 = t191 * t406;
t598 = t406 * t328;
t483 = t336 - t598;
t192 = -t394 + t483;
t637 = t192 * t403;
t142 = t184 * t611;
t489 = -t204 / 0.2e1 + t188 / 0.2e1;
t468 = t489 * t406;
t510 = t205 * t667;
t412 = (t510 + t468) * t404 - t142 / 0.2e1 + t271 * t664;
t446 = t613 / 0.2e1 + t661 / 0.2e1;
t22 = t412 - t446;
t634 = t22 * qJD(1);
t221 = (-t326 + t408) * t404;
t633 = t221 * t406;
t24 = -t184 * t204 + t188 * t205 + t222 * t271;
t628 = t24 * qJD(1);
t490 = -t184 / 0.2e1 + t205 / 0.2e1;
t25 = (pkin(4) * t666 - t489) * t406 + (t391 / 0.2e1 - t490) * t403;
t627 = t25 * qJD(1);
t27 = t188 * t608 + t191 * t610 - t192 * t596 - t142;
t626 = t27 * qJD(1);
t624 = t272 * t290;
t623 = t295 * t404;
t30 = -t205 * t596 + (t640 + (t188 - t204) * t403) * t407;
t622 = t30 * qJD(1);
t31 = (t184 - t633) * t407 + (t191 + t631) * t404;
t621 = t31 * qJD(1);
t32 = -t188 * t407 - t192 * t404 + (t221 * t407 - t222 * t404) * t403;
t620 = t32 * qJD(1);
t612 = t403 * t241;
t597 = t406 * t399;
t592 = t407 * t295;
t47 = t237 * t241 + t238 * t239;
t590 = t47 * qJD(1);
t54 = -t204 * t407 + (-t483 + 0.2e1 * t336) * t404;
t589 = t54 * qJD(1);
t55 = t205 * t407 + (-t337 + t297) * t404;
t588 = t55 * qJD(1);
t440 = t629 / 0.2e1 + t593 / 0.2e1;
t357 = t601 / 0.2e1;
t573 = t614 / 0.2e1 + t357;
t57 = t440 + t573;
t587 = t57 * qJD(1);
t349 = -t614 / 0.2e1;
t358 = -t601 / 0.2e1;
t572 = t349 + t358;
t58 = -t440 + t572;
t586 = t58 * qJD(1);
t252 = t597 / 0.2e1 + t670 + t665;
t232 = t252 * qJD(2);
t583 = -t205 * qJD(4) - t232;
t281 = t598 / 0.2e1;
t582 = t281 - t336 / 0.2e1;
t500 = t608 / 0.2e1;
t581 = t402 * t500 - t332 / 0.2e1;
t501 = -t608 / 0.2e1;
t580 = t402 * t501 + t332 / 0.2e1;
t503 = t611 / 0.2e1;
t579 = t404 * t357 + t402 * t503;
t504 = -t611 / 0.2e1;
t578 = t404 * t358 + t402 * t504;
t502 = t610 / 0.2e1;
t577 = t402 * t502 + t405 * t497;
t498 = -t596 / 0.2e1;
t576 = t407 * t349 + t405 * t498;
t575 = t333 / 0.2e1 + t402 * t498;
t574 = -t333 / 0.2e1 + t402 * t497;
t568 = t398 + t400;
t346 = t399 - t401;
t567 = qJD(1) * qJ(2);
t123 = -t401 * t609 - t636;
t566 = qJD(1) * t123;
t124 = -t401 * t595 - t635;
t565 = qJD(1) * t124;
t294 = t346 * t403;
t563 = qJD(1) * t294;
t296 = -t386 + t597;
t562 = qJD(1) * t296;
t561 = qJD(2) * t249;
t560 = qJD(2) * t404;
t558 = qJD(3) * t403;
t557 = qJD(3) * t406;
t556 = qJD(4) * t403;
t553 = qJD(5) * t402;
t552 = qJD(5) * t405;
t551 = qJD(6) * t272;
t507 = -t623 / 0.2e1;
t107 = t507 + t581;
t550 = t107 * qJD(1);
t506 = t623 / 0.2e1;
t108 = t506 + t580;
t549 = t108 * qJD(1);
t508 = t238 / 0.2e1;
t109 = t508 + t579;
t548 = t109 * qJD(1);
t509 = -t238 / 0.2e1;
t110 = t509 + t578;
t547 = t110 * qJD(1);
t159 = t399 * t402 + t406 * t594;
t546 = t159 * qJD(1);
t160 = t399 * t405 + t406 * t593;
t545 = t160 * qJD(1);
t230 = t251 * qJD(2);
t293 = t568 * t407;
t542 = t293 * qJD(1);
t541 = t346 * qJD(1);
t540 = t403 * qJD(5);
t538 = t404 * qJD(3);
t537 = t406 * qJD(5);
t534 = t407 * qJD(4);
t532 = -t337 / 0.2e1 - t392;
t530 = pkin(8) * t556;
t529 = pkin(8) * t554;
t302 = -pkin(3) - t463;
t528 = -t632 / 0.2e1 + t302 * t498 + pkin(8) * t500;
t527 = qJ(2) * t539;
t526 = qJ(2) * t536;
t524 = t239 * t539;
t523 = t241 * t539;
t522 = t290 * t539;
t521 = t295 * t539;
t519 = t403 * t560;
t516 = t403 * t534;
t515 = t406 * t534;
t514 = t403 * t537;
t513 = t403 * t554;
t366 = t403 * t557;
t374 = t404 * t535;
t512 = t407 * t540;
t511 = t404 * t536;
t505 = t239 * t667;
t496 = -t241 / 0.2e1;
t495 = t241 / 0.2e1;
t494 = -t592 / 0.2e1;
t493 = t592 / 0.2e1;
t492 = t326 * t664;
t488 = t398 / 0.2e1 - t400 / 0.2e1;
t247 = (-0.1e1 / 0.2e1 + t488) * t407;
t482 = qJD(1) * t247 - t366;
t274 = t488 * t407;
t481 = qJD(1) * t274 - t366;
t321 = t403 * qJD(1) * t386;
t480 = qJD(3) * t274 + t321;
t365 = t403 * t539;
t479 = qJD(4) * t249 + t365;
t250 = (-0.1e1 / 0.2e1 + t487) * t403;
t478 = qJD(4) * t250 - t365;
t477 = t533 * t404;
t474 = t403 * t373;
t471 = t539 + qJD(4) / 0.2e1;
t467 = 0.2e1 * t474;
t464 = pkin(3) * t502 + pkin(8) * t503;
t462 = t404 * t302 + t662;
t14 = (t640 / 0.2e1 - t221 / 0.2e1 + t188 * t667) * t407 + (t638 / 0.2e1 + t222 / 0.2e1 + t637 / 0.2e1) * t404;
t23 = t184 * t191 + t188 * t192 + t221 * t222;
t460 = t23 * qJD(1) + t14 * qJD(2);
t455 = t637 + t638;
t203 = (-0.1e1 + t568) * t407 * t404;
t454 = t14 * qJD(1) + t203 * qJD(2);
t185 = t302 * t406 + t326 * t403;
t278 = -t297 / 0.2e1;
t413 = pkin(8) * t504 + (t302 * t663 + t678) * t403 + (t492 - t222 / 0.2e1) * t406;
t34 = t278 + t413 + t532;
t453 = -qJD(1) * t34 + qJD(3) * t185;
t186 = -t302 * t403 + t326 * t406;
t323 = t336 / 0.2e1;
t343 = pkin(8) * t501;
t428 = t326 * t502 + t632 / 0.2e1 + t302 * t497 + t343;
t36 = -t394 + t323 + (t678 + t672) * t406 + t428;
t452 = -qJD(1) * t36 + qJD(3) * t186;
t451 = t376 * t407;
t450 = qJD(2) * t250 + qJD(4) * t204;
t447 = -t191 * qJ(5) / 0.2e1 + t192 * pkin(4) / 0.2e1;
t277 = t297 / 0.2e1;
t172 = t277 + t464;
t445 = pkin(3) * t557 - qJD(1) * t172;
t173 = t343 + (-t660 / 0.2e1 + t672) * t406;
t444 = pkin(3) * t558 - qJD(1) * t173;
t439 = -t619 / 0.2e1 - t605 / 0.2e1;
t438 = -t617 / 0.2e1 + t607 / 0.2e1;
t71 = t505 + (t406 * t675 + t405 / 0.2e1) * t407;
t433 = qJD(1) * t71 + t290 * t558;
t70 = -t612 / 0.2e1 + (t295 * t665 + t668) * t407;
t432 = -qJD(1) * t70 + t295 * t558;
t44 = t394 / 0.2e1 + t528 + t582;
t431 = -qJD(1) * t44 + t302 * t558;
t430 = t406 * t451;
t429 = t463 * qJD(4);
t292 = t347 * t401;
t427 = qJD(1) * t292 + t467;
t410 = t220 * t675 + t239 * t676 - t419;
t418 = t300 * t664 + t438;
t1 = t410 + t418;
t111 = t493 + t574;
t68 = -t272 * t295 + t282 * t290;
t425 = -qJD(1) * t1 + qJD(2) * t111 - qJD(3) * t68;
t113 = t496 + t577;
t411 = t220 * t674 + t241 * t676 - t420;
t417 = t301 * t664 + t439;
t4 = t411 + t417;
t69 = t282 * t295 + t624;
t424 = -qJD(1) * t4 + qJD(2) * t113 - qJD(3) * t69;
t168 = t671 + (t599 / 0.2e1 + t673) * t407;
t409 = (t403 * t490 + t468) * pkin(8) + t222 * t673 + t271 * t302 / 0.2e1;
t8 = t409 + t447;
t423 = t302 * t326 * qJD(3) + t8 * qJD(1) - t168 * qJD(2);
t10 = -t419 + t438;
t112 = t494 + t575;
t422 = qJD(1) * t10 + qJD(2) * t112 - t272 * t559;
t11 = -t420 + t439;
t114 = t495 + t576;
t421 = qJD(1) * t11 + qJD(2) * t114 + qJD(3) * t624;
t416 = -t429 + t537;
t304 = t400 * t401 + t399;
t415 = qJD(1) * t304 + t474 + t555;
t383 = -t536 / 0.2e1;
t382 = t536 / 0.2e1;
t381 = -t535 / 0.2e1;
t380 = t535 / 0.2e1;
t372 = t406 * t539;
t371 = t406 * t560;
t370 = t404 * t537;
t367 = t403 * t538;
t364 = t402 * t390;
t322 = t406 * t512;
t303 = t376 * qJ(5);
t289 = t372 + t554;
t288 = t376 * t405;
t287 = t376 * t402;
t286 = t471 * t407;
t270 = -t367 + t515;
t269 = -t406 * t538 - t516;
t268 = qJD(3) * t398 + t473;
t263 = t274 * qJD(4);
t248 = t398 * t664 + t400 * t663 + t664;
t246 = t461 * t405;
t245 = t461 * t402;
t236 = t403 * t451;
t235 = (t520 - t557) * t404;
t234 = (-qJD(6) / 0.2e1 + t471) * t407;
t179 = -qJD(4) * t251 - t372;
t178 = -qJD(4) * t252 + t372;
t170 = qJ(5) * t497 + t492 + t671;
t122 = t506 + t581;
t121 = t507 + t580;
t120 = t508 + t578;
t119 = t509 + t579;
t118 = t494 + t574;
t117 = t493 + t575;
t116 = t496 + t576;
t115 = t495 + t577;
t103 = pkin(3) * t498 + t281 - t336 + t343;
t102 = -t337 + t278 + t464;
t73 = t612 / 0.2e1 + t406 * t493 + t402 * t663;
t72 = t505 + t406 * t495 - t600 / 0.2e1;
t64 = t440 + t572;
t63 = -t440 + t573;
t43 = t323 - t598 / 0.2e1 - t394 / 0.2e1 + t528;
t35 = -t625 / 0.2e1 + t394 + t428 + t582;
t33 = t277 + t413 - t532;
t26 = t204 * t665 - t641 / 0.2e1 + t510 + t639 / 0.2e1 + t446 * t404;
t21 = t412 + t446;
t18 = t301 * t666 + t606 / 0.2e1 + t414 * t668 - t616 / 0.2e1 + t603 / 0.2e1;
t17 = -t618 / 0.2e1 + t499 - t615 / 0.2e1 - t470;
t13 = t419 + t438;
t12 = t420 + t439;
t9 = t14 * qJD(3);
t7 = t409 - t447;
t3 = t411 - t417;
t2 = t410 - t418;
t37 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t374, t346 * qJD(3), 0, 0, 0, qJ(2) * t535 + t560, -qJ(2) * t538 + qJD(2) * t407, -t374 * t400 - t401 * t513, -qJD(4) * t292 + t404 * t467, -qJD(3) * t296 - t404 * t516, qJD(3) * t294 - t404 * t515, t374, qJD(3) * t54 + qJD(4) * t124 + t371, -qJD(3) * t55 - qJD(4) * t123 - t519, qJD(3) * t32 + qJD(4) * t45 - t401 * t514 + t371, -qJD(2) * t293 - qJD(3) * t27 - qJD(4) * t30 - t404 * t512, qJD(3) * t31 + qJD(4) * t46 + qJD(5) * t304 + t519, qJD(2) * t56 + qJD(3) * t23 + qJD(4) * t24 + qJD(5) * t65 (-qJD(3) * t238 + t239 * t533) * t241, qJD(3) * t47 - t533 * t67, -t83 * qJD(3) - t239 * t477, -t82 * qJD(3) - t241 * t477, t374, -qJD(3) * t5 - qJD(4) * t19 + qJD(5) * t159 - qJD(6) * t29 + t290 * t560, qJD(3) * t6 + qJD(4) * t20 + qJD(5) * t160 + qJD(6) * t28 + t295 * t560; 0, 0, 0, 0, qJD(1), t567, 0, 0, 0, 0, 0, t539, t536, 0, 0, 0, 0, 0, t178, t478, t178, -t542, -t478, qJD(4) * t21 + qJD(5) * t252 + t649 + t9, 0, 0, 0, 0, 0, qJD(4) * t63 + qJD(6) * t64 + t522, t533 * t61 + t521; 0, 0, 0, 0, 0, 0, -t511, t541, -t538, -t535, 0, -t408 * t538 + t526, -t408 * t535 - t527, -t263 + (-t400 * t536 - t366) * t404, t404 * t426 - 0.2e1 * t407 * t513, t368 - t562, t373 + t563, t286, t589 + (t403 * t469 - t334) * qJD(3) + t103 * qJD(4), -t588 + (-pkin(8) * t596 + (pkin(3) * t406 + t609) * t404) * qJD(3) + t102 * qJD(4), t620 + (-t403 * t462 - t633) * qJD(3) + t35 * qJD(4) + t248 * qJD(5), qJD(3) * t455 + t26 * qJD(4) - t626, t621 + (-t221 * t403 + t406 * t462) * qJD(3) + t33 * qJD(4) + t322 (pkin(8) * t455 + t221 * t302) * qJD(3) + t7 * qJD(4) + t43 * qJD(5) + t460 (-t559 - t564) * t238 + t658, t590 + (t237 * t295 + t238 * t290) * qJD(3) - t659, qJD(4) * t119 + qJD(6) * t120 - t295 * t535 - t646, qJD(4) * t121 + qJD(6) * t122 + t290 * t535 - t647, t234, -t657 + (t182 * t290 - t237 * t272 - t407 * t96) * qJD(3) + t2 * qJD(4) + t72 * qJD(5) + t13 * qJD(6), t656 + (t182 * t295 - t238 * t272 + t407 * t484) * qJD(3) + t3 * qJD(4) + t73 * qJD(5) + t12 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, -t427, -t236, -t430, t380, qJD(3) * t103 + t565 + t583, qJD(3) * t102 + t450 - t566, qJD(3) * t35 + t583 + t651, -t622 + t26 * qJD(3) + (-t392 * t406 + t378) * qJD(4) - t512, qJD(3) * t33 + t390 - t450 + t650, t628 + t21 * qJD(2) + t7 * qJD(3) + (-pkin(4) * t205 - qJ(5) * t204) * qJD(4) + t184 * qJD(5), t693, -t457, t119 * qJD(3) - t687, t121 * qJD(3) - t686, t380, qJD(2) * t63 + qJD(3) * t2 + qJD(4) * t48 + qJD(6) * t18 + t364 - t655, qJD(3) * t3 + qJD(4) * t49 + qJD(6) * t17 + t369 + t654 + t697; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t248 - t321, -t236, t415, qJD(3) * t43 + qJD(4) * t184 + t232 + t648, 0, 0, 0, 0, 0, qJD(3) * t72 + t402 * t555 + t546, qJD(3) * t73 + t405 * t555 + t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t693, t457, t120 * qJD(3) + t687, t122 * qJD(3) + t686, t381, qJD(2) * t64 + qJD(3) * t13 + qJD(4) * t18 - qJD(6) * t42 - t652, qJD(3) * t12 + qJD(4) * t17 + qJD(6) * t41 + t653 - t697; 0, 0, 0, 0, -qJD(1), -t567, 0, 0, 0, 0, 0, -t539, -t536, 0, 0, 0, 0, 0, t179, t479, t179, t542, -t479, qJD(4) * t22 + qJD(5) * t251 - t649 + t9, 0, 0, 0, 0, 0, -qJD(4) * t57 - qJD(6) * t58 - t522, t533 * t60 - t521; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t538, -t535, 0, 0, 0, 0, 0, t269, -t270, t269, t293 * qJD(3), t270, t302 * t538 + t170 * qJD(4) + (pkin(8) * qJD(3) * t568 + t540) * t407 + t454, 0, 0, 0, 0, 0, qJD(4) * t118 + qJD(6) * t117 - t290 * t538, qJD(4) * t115 + qJD(6) * t116 - t295 * t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t683, t682, -t683, 0, -t682, t170 * qJD(3) - t404 * t429 + t370 + t634, 0, 0, 0, 0, 0, t118 * qJD(3) - t587 - t688, t115 * qJD(3) + t698; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t683, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117 * qJD(3) - t586 + t688, t116 * qJD(3) - t698; 0, 0, 0, 0, 0, 0, t511, -t541, 0, 0, 0, -t526, t527, t400 * t511 - t263, -0.2e1 * t403 * t430, t375 + t562, -t517 - t563, -t286, qJD(4) * t173 - t589, qJD(4) * t172 + t588, qJD(4) * t36 - qJD(5) * t247 - t620, -qJD(4) * t25 + t370 + t626, qJD(4) * t34 + t322 - t621, qJD(4) * t8 + qJD(5) * t44 - t460, t238 * t564 + t658, -t590 - t659, -qJD(4) * t109 - qJD(6) * t110 + t646, -qJD(4) * t108 - qJD(6) * t107 + t647, -t234, qJD(4) * t1 + qJD(5) * t71 - qJD(6) * t10 + t657, qJD(4) * t4 - qJD(5) * t70 - qJD(6) * t11 - t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t168 - t454, 0, 0, 0, 0, 0, -qJD(4) * t111 - qJD(6) * t112, -qJD(4) * t113 - qJD(6) * t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, t347 * qJD(4), 0, 0, 0, -pkin(3) * t556, -pkin(3) * t554, -qJD(4) * t186 + t514, 0, -qJD(4) * t185 + qJD(5) * t398 (qJD(4) * t326 - t540) * t302, t290 * t476, -t533 * t95, 0, 0, 0, qJD(4) * t68 + t290 * t540 + t295 * t551, qJD(4) * t69 - t290 * t551 + t295 * t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t481, -t426, t289, -t365 - t556, t383, -t444 - t529, -t445 + t530, -t452 - t529, t416 - t627, -t453 - t530, pkin(8) * t416 + t423, t694, -t456, -t548 - t685, -t549 - t476, t383, -t425 - t692, -t424 - t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482, t289, t268, -t431 + t529, 0, 0, 0, 0, 0, t433, t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t694, t456, -t547 + t685, t476 - t550, t382, -t422 + t692, -t421 + t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t427, t235, t406 * t511 + t367, t380, -qJD(3) * t173 + t230 - t565, -qJD(3) * t172 - t561 + t566, -qJD(3) * t36 + t230 - t651, qJD(3) * t25 + t622, -qJD(3) * t34 + t390 + t561 - t650, qJ(5) * t390 - qJD(2) * t22 - qJD(3) * t8 - t628, -t693, t457, qJD(3) * t109 + t524, qJD(3) * t108 + t523, t380, qJD(2) * t57 - qJD(3) * t1 - qJD(6) * t15 + t364 + t655, -qJD(3) * t4 - qJD(6) * t16 - t654 - t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, -t544, t543, 0, t544, qJD(3) * t168 - t634, 0, 0, 0, 0, 0, qJD(3) * t111 + t587, qJD(3) * t113 - t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481, t426, -t372, t365, t382, t444, t445, t452, t627, t453, -t423, -t694, t456, t548, t549, t382, t425, t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5), 0, 0, 0, 0, 0, qJD(6) * t301 + t553, -qJD(6) * t300 + t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, t303, 0, 0, 0, 0, 0, t287, t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301 * t533 - t645, -t300 * t533 - t644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t247 + t321, t235, -t415, -qJ(5) * t555 - qJD(3) * t44 - t230 - t648, 0, 0, 0, 0, 0, -t71 * qJD(3) - t402 * t477 - t546, t70 * qJD(3) - t405 * t477 - t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t543, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, -t372, -t268, t431, 0, 0, 0, 0, 0, -t433, -t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, -t303, 0, 0, 0, 0, 0, -t245, -t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t693, -t457, qJD(3) * t110 - t524, qJD(3) * t107 - t523, t381, qJD(2) * t58 + qJD(3) * t10 + qJD(4) * t15 - t364 + t652, qJD(3) * t11 + qJD(4) * t16 - t653 + t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t112 + t586, qJD(3) * t114 + t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t694, -t456, t547, t550, t383, t422, t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t301 - t553 + t645, qJD(4) * t300 - t552 + t644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, -t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t37;
