% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR4_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:34:50
% EndTime: 2019-03-09 13:35:12
% DurationCPUTime: 8.19s
% Computational Cost: add. (16877->461), mult. (44888->836), div. (0->0), fcn. (46079->12), ass. (0->245)
t149 = cos(qJ(4));
t143 = sin(pkin(6));
t150 = cos(qJ(2));
t274 = t143 * t150;
t279 = cos(pkin(12));
t127 = t279 * t274;
t147 = sin(qJ(2));
t275 = t143 * t147;
t278 = sin(pkin(12));
t224 = t278 * t275;
t210 = t224 - t127;
t315 = qJD(4) * t210;
t327 = t149 * t315;
t280 = cos(pkin(6));
t248 = pkin(1) * t280;
t228 = t150 * t248;
t302 = pkin(8) + qJ(3);
t236 = t143 * t302;
t190 = -t147 * t236 + t228;
t266 = qJD(3) * t143;
t173 = qJD(2) * t190 + t150 * t266;
t229 = t147 * t248;
t174 = -t147 * t266 + (-t150 * t236 - t229) * qJD(2);
t160 = t173 * t279 + t174 * t278;
t199 = t147 * t279 + t150 * t278;
t321 = t143 * t199;
t166 = -t143 * pkin(1) - pkin(2) * t274 + pkin(3) * t210 - pkin(9) * t321;
t326 = -qJD(4) * t166 - t160;
t177 = pkin(2) * t280 + t190;
t191 = t302 * t274 + t229;
t71 = t177 * t278 + t191 * t279;
t162 = pkin(9) * t280 + t71;
t186 = qJD(2) * t321;
t123 = qJD(2) * t224;
t207 = qJD(2) * t127 - t123;
t268 = qJD(2) * t147;
t241 = t143 * t268;
t231 = pkin(2) * t241;
t325 = -pkin(3) * t186 + pkin(9) * t207 + qJD(4) * t162 - t231;
t324 = t280 * qJD(4) + t207;
t144 = sin(qJ(6));
t141 = t144 ^ 2;
t148 = cos(qJ(6));
t142 = t148 ^ 2;
t314 = (t141 - t142) * qJD(6);
t323 = 0.2e1 * t207;
t146 = sin(qJ(4));
t100 = t146 * t280 + t149 * t321;
t145 = sin(qJ(5));
t175 = -t146 * t321 + t149 * t280;
t307 = cos(qJ(5));
t170 = t307 * t175;
t187 = qJD(4) * t321;
t249 = t146 * t324 + t149 * t187;
t263 = qJD(5) * t145;
t69 = -t146 * t187 + t149 * t324;
t163 = -qJD(5) * t170 + t100 * t263 + t145 * t249 - t307 * t69;
t172 = t145 * t175;
t237 = qJD(5) * t307;
t36 = qJD(5) * t172 + t100 * t237 + t145 * t69 + t307 * t249;
t57 = t173 * t278 - t279 * t174;
t39 = pkin(4) * t249 + t57;
t154 = t36 * pkin(5) + pkin(11) * t163 + t39;
t206 = t210 * pkin(4);
t42 = -t146 * t162 + t149 * t166;
t158 = t100 * pkin(10) - t206 - t42;
t43 = t146 * t166 + t149 * t162;
t168 = pkin(10) * t175 + t43;
t22 = -t145 * t158 + t307 * t168;
t19 = pkin(11) * t210 + t22;
t261 = qJD(6) * t144;
t70 = t177 * t279 - t191 * t278;
t64 = -pkin(3) * t280 - t70;
t45 = -pkin(4) * t175 + t64;
t61 = t145 * t100 - t170;
t62 = t307 * t100 + t172;
t156 = t61 * pkin(5) - t62 * pkin(11) + t45;
t189 = qJD(2) * t199;
t185 = t143 * t189;
t182 = pkin(4) * t185;
t28 = t146 * t326 - t149 * t325;
t152 = -t69 * pkin(10) + t182 + t28;
t27 = t146 * t325 + t149 * t326;
t159 = pkin(10) * t249 + t27;
t21 = -t145 * t168 - t307 * t158;
t7 = -t21 * qJD(5) - t145 * t152 + t307 * t159;
t319 = -pkin(11) * t185 - qJD(6) * t156 + t7;
t2 = -t144 * t154 + t319 * t148 + t19 * t261;
t1 = t2 * t148;
t11 = -t144 * t19 + t148 * t156;
t12 = t144 * t156 + t148 * t19;
t218 = t11 * t148 + t12 * t144;
t139 = qJD(6) * t148;
t3 = -t139 * t19 + t319 * t144 + t148 * t154;
t179 = -qJD(6) * t218 - t3 * t144 - t1;
t245 = t307 * t149;
t273 = t145 * t146;
t313 = qJD(4) + qJD(5);
t98 = -qJD(4) * t245 - t149 * t237 + t313 * t273;
t322 = t210 * t98;
t18 = -pkin(5) * t210 - t21;
t153 = t22 * qJD(5) - t145 * t159 - t307 * t152;
t6 = -pkin(5) * t185 + t153;
t238 = -t6 * t148 + t18 * t261;
t320 = t141 + t142;
t318 = -qJD(6) * t210 + t163;
t317 = t146 * t185 + t327;
t171 = qJD(4) * t175;
t316 = -t146 * t171 - t249 * t149;
t120 = -t245 + t273;
t121 = t145 * t149 + t307 * t146;
t99 = t313 * t121;
t312 = -t120 * t163 + t62 * t99;
t209 = -t148 * t36 + t261 * t61;
t281 = t148 * t98;
t311 = -t121 * t209 - t61 * t281;
t140 = t143 ^ 2;
t310 = 0.2e1 * qJD(4);
t309 = pkin(5) * t99;
t308 = t18 * t139 + t6 * t144;
t306 = pkin(4) * t145;
t134 = pkin(2) * t278 + pkin(9);
t301 = pkin(10) + t134;
t234 = qJD(4) * t301;
t114 = t146 * t234;
t225 = t149 * t234;
t117 = t301 * t149;
t235 = t301 * t146;
t91 = t307 * t117 - t145 * t235;
t56 = t91 * qJD(5) - t145 * t114 + t307 * t225;
t90 = t145 * t117 + t307 * t235;
t305 = t56 * t90;
t26 = t139 * t62 - t318 * t144 - t148 * t185;
t276 = t121 * t148;
t46 = t144 * t62 - t148 * t210;
t300 = -t26 * t276 + t46 * t281;
t25 = -t144 * t185 + t318 * t148 + t261 * t62;
t47 = t144 * t210 + t148 * t62;
t299 = -t25 * t120 + t47 * t99;
t298 = -t121 * t36 + t98 * t61;
t297 = t90 * t139 + t56 * t144;
t296 = -t146 * t249 + t149 * t171;
t295 = -t120 * t281 + t99 * t276;
t216 = t120 * t98 - t121 * t99;
t294 = pkin(4) * qJD(5);
t293 = t120 * t99;
t292 = t121 * t98;
t291 = t141 * t98;
t95 = t142 * t98;
t290 = t144 * t25;
t289 = t144 * t26;
t288 = t144 * t46;
t287 = t144 * t98;
t286 = t144 * t99;
t285 = t145 * t90;
t284 = t148 * t25;
t283 = t148 * t26;
t282 = t148 * t47;
t277 = t120 * t145;
t272 = t146 * t134;
t255 = t307 * pkin(4);
t138 = -t255 - pkin(5);
t251 = pkin(4) * t263;
t271 = t138 * t139 + t144 * t251;
t269 = qJD(2) * t143;
t267 = qJD(2) * t150;
t265 = qJD(4) * t146;
t264 = qJD(4) * t149;
t260 = 0.2e1 * t61 * t36;
t259 = 0.2e1 * t293;
t258 = t47 * t287;
t135 = -pkin(2) * t279 - pkin(3);
t256 = t135 * t310;
t254 = pkin(4) * t265;
t253 = pkin(5) * t261;
t252 = pkin(5) * t139;
t250 = t144 * t281;
t87 = t90 * t261;
t247 = t144 * t307;
t246 = t148 * t307;
t244 = t140 * t267;
t243 = t134 * t264;
t242 = t121 * t261;
t240 = t144 * t139;
t239 = t146 * t264;
t233 = t98 * t320;
t230 = pkin(4) * t237;
t118 = t121 ^ 2;
t227 = t118 * t240;
t226 = t147 * t244;
t222 = t280 * t269;
t221 = -t120 * t26 - t46 * t99;
t220 = t120 * t36 + t61 * t99;
t219 = t120 * t56 + t90 * t99;
t217 = t11 * t144 - t12 * t148;
t126 = -t149 * pkin(4) + t135;
t183 = -t120 * pkin(5) + t121 * pkin(11) - t126;
t178 = t148 * t183;
t52 = -t144 * t91 - t178;
t53 = -t144 * t183 + t148 * t91;
t215 = t144 * t53 + t148 * t52;
t214 = t144 * t52 - t148 * t53;
t213 = -t28 * t146 - t27 * t149;
t137 = pkin(11) + t306;
t212 = t120 * t137 - t121 * t138;
t211 = t138 * t261 - t148 * t251;
t30 = t139 * t61 + t144 * t36;
t208 = -t100 * t265 + t149 * t69;
t74 = t120 * t261 - t148 * t99;
t77 = -t121 * t139 + t287;
t75 = t242 + t281;
t205 = t320 * t307;
t201 = pkin(11) * t98 + t254 + t309;
t200 = (-t307 * t120 + t121 * t145) * qJD(5);
t198 = -pkin(8) * t274 - t229;
t197 = pkin(8) * t275 - t228;
t192 = -t290 + (t282 + t288) * qJD(6);
t188 = t140 * t189;
t184 = -0.2e1 * t186;
t181 = -t121 * t30 + t287 * t61;
t55 = t90 * qJD(5) + t307 * t114 + t145 * t225;
t31 = qJD(6) * t178 - t144 * t201 + t148 * t55 + t261 * t91;
t32 = -qJD(6) * t53 + t144 * t55 + t148 * t201;
t10 = -qJD(6) * t215 - t144 * t32 - t148 * t31;
t176 = pkin(4) * t200 - t137 * t99 - t138 * t98;
t130 = -0.2e1 * t240;
t129 = 0.2e1 * t240;
t122 = (-t150 * pkin(2) - pkin(1)) * t143;
t119 = -0.2e1 * t314;
t113 = t205 * t294;
t110 = t198 * qJD(2);
t109 = t197 * qJD(2);
t86 = 0.2e1 * t210 * t185;
t80 = t121 * t95;
t79 = t121 * t291;
t78 = -t146 * t315 + t149 * t185;
t76 = t120 * t139 + t286;
t60 = -t95 - t291;
t59 = t121 * t314 + t250;
t49 = -t120 * t185 - t210 * t99;
t48 = -0.4e1 * t121 * t240 + t291 - t95;
t15 = t261 * t46 - t283;
t14 = t139 * t47 - t290;
t9 = -t289 - t284 + (-t144 * t47 - t148 * t46) * qJD(6);
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t226, 0.2e1 * (-t147 ^ 2 + t150 ^ 2) * t140 * qJD(2), 0.2e1 * t150 * t222, -0.2e1 * t226, -0.2e1 * t147 * t222, 0, -0.2e1 * pkin(1) * t140 * t268 + 0.2e1 * t110 * t280, -0.2e1 * pkin(1) * t244 + 0.2e1 * t109 * t280, 0.2e1 * (-t109 * t150 - t110 * t147 + (t147 * t198 + t150 * t197) * qJD(2)) * t143, 0.2e1 * t109 * t198 - 0.2e1 * t110 * t197, t321 * t323, -0.2e1 * t188 * t199 - 0.2e1 * t207 * t210, t280 * t323, -t210 * t184, t280 * t184, 0, 0.2e1 * t122 * t185 + 0.2e1 * t210 * t231 - 0.2e1 * t280 * t57, 0.2e1 * pkin(2) * t147 * t188 + 0.2e1 * t122 * t207 - 0.2e1 * t160 * t280, -0.2e1 * t160 * t210 - 0.2e1 * t186 * t71 - 0.2e1 * t207 * t70 + 0.2e1 * t321 * t57, 0.2e1 * t122 * t231 + 0.2e1 * t160 * t71 - 0.2e1 * t70 * t57, 0.2e1 * t100 * t69, -0.2e1 * t100 * t249 + 0.2e1 * t175 * t69, 0.2e1 * t100 * t185 + 0.2e1 * t210 * t69, -0.2e1 * t175 * t249, 0.2e1 * t175 * t185 - 0.2e1 * t210 * t249, t86, -0.2e1 * t175 * t57 + 0.2e1 * t185 * t42 + 0.2e1 * t210 * t28 + 0.2e1 * t249 * t64, 0.2e1 * t57 * t100 - 0.2e1 * t186 * t43 + 0.2e1 * t210 * t27 + 0.2e1 * t64 * t69, -0.2e1 * t28 * t100 - 0.2e1 * t175 * t27 - 0.2e1 * t249 * t43 - 0.2e1 * t42 * t69, -0.2e1 * t27 * t43 + 0.2e1 * t28 * t42 + 0.2e1 * t57 * t64, -0.2e1 * t62 * t163, 0.2e1 * t163 * t61 - 0.2e1 * t62 * t36, -0.2e1 * t163 * t210 + 0.2e1 * t185 * t62, t260, -0.2e1 * t185 * t61 - 0.2e1 * t210 * t36, t86, -0.2e1 * t153 * t210 + 0.2e1 * t185 * t21 + 0.2e1 * t45 * t36 + 0.2e1 * t39 * t61, -0.2e1 * t163 * t45 - 0.2e1 * t186 * t22 + 0.2e1 * t210 * t7 + 0.2e1 * t39 * t62, 0.2e1 * t153 * t62 + 0.2e1 * t163 * t21 - 0.2e1 * t22 * t36 + 0.2e1 * t7 * t61, -0.2e1 * t153 * t21 - 0.2e1 * t22 * t7 + 0.2e1 * t39 * t45, -0.2e1 * t47 * t25, 0.2e1 * t25 * t46 - 0.2e1 * t26 * t47, -0.2e1 * t25 * t61 + 0.2e1 * t36 * t47, 0.2e1 * t46 * t26, -0.2e1 * t26 * t61 - 0.2e1 * t36 * t46, t260, 0.2e1 * t11 * t36 + 0.2e1 * t18 * t26 + 0.2e1 * t3 * t61 + 0.2e1 * t46 * t6, -0.2e1 * t12 * t36 - 0.2e1 * t18 * t25 + 0.2e1 * t2 * t61 + 0.2e1 * t47 * t6, 0.2e1 * t11 * t25 - 0.2e1 * t12 * t26 + 0.2e1 * t2 * t46 - 0.2e1 * t3 * t47, 0.2e1 * t11 * t3 - 0.2e1 * t12 * t2 + 0.2e1 * t18 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143 * t267, 0, -t241, 0, t110, t109, 0, 0, 0, 0, t207, 0, -t186, 0, -t57, -t160 (t279 * t123 + (-t150 * t279 ^ 2 - t199 * t278) * t269) * pkin(2) (t160 * t278 - t279 * t57) * pkin(2), t100 * t264 + t146 * t69, t208 + t296, t317, t316, t78, 0, -t134 * t317 + t135 * t249 - t57 * t149 + t265 * t64, -t134 * t149 * t186 + t135 * t69 + t57 * t146 + t264 * t64 + t272 * t315, t100 * t243 + t134 * t316 - t264 * t42 - t265 * t43 + t272 * t69 + t213, t135 * t57 + ((-t43 * t146 - t42 * t149) * qJD(4) + t213) * t134, -t121 * t163 - t62 * t98, t298 - t312, t121 * t185 - t322, t220, t49, 0, t39 * t120 + t126 * t36 - t185 * t90 - t210 * t56 + t254 * t61 + t45 * t99, t39 * t121 - t126 * t163 - t186 * t91 + t210 * t55 + t254 * t62 - t45 * t98, t7 * t120 + t121 * t153 - t163 * t90 + t21 * t98 - t22 * t99 - t91 * t36 + t55 * t61 + t56 * t62, t126 * t39 + t153 * t90 - t21 * t56 - t22 * t55 + t254 * t45 - t7 * t91, -t47 * t281 + (-t261 * t47 - t284) * t121, t258 + (t290 + (-t282 + t288) * qJD(6)) * t121 + t300, t299 + t311, -t46 * t287 + (t139 * t46 + t289) * t121, t181 + t221, t220, t11 * t99 + t120 * t3 + t308 * t121 - t18 * t287 + t26 * t90 + t32 * t61 + t36 * t52 + t46 * t56, -t12 * t99 + t120 * t2 - t238 * t121 - t18 * t281 - t25 * t90 + t31 * t61 - t36 * t53 + t47 * t56, t25 * t52 - t26 * t53 + t31 * t46 - t32 * t47 + t218 * t98 + (qJD(6) * t217 + t144 * t2 - t148 * t3) * t121, t11 * t32 - t12 * t31 + t18 * t56 - t2 * t53 + t3 * t52 + t6 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t239 (-t146 ^ 2 + t149 ^ 2) * t310, 0, -0.2e1 * t239, 0, 0, t146 * t256, t149 * t256, 0, 0, -0.2e1 * t292, 0.2e1 * t216, 0, t259, 0, 0, 0.2e1 * t120 * t254 + 0.2e1 * t126 * t99, 0.2e1 * t121 * t254 - 0.2e1 * t126 * t98, 0.2e1 * t120 * t55 + 0.2e1 * t121 * t56 - 0.2e1 * t90 * t98 - 0.2e1 * t91 * t99, 0.2e1 * t126 * t254 - 0.2e1 * t55 * t91 + 0.2e1 * t305, -0.2e1 * t80 - 0.2e1 * t227, 0.2e1 * t118 * t314 + 0.4e1 * t121 * t250, -0.2e1 * t120 * t242 + 0.2e1 * t295, -0.2e1 * t79 + 0.2e1 * t227, 0.2e1 * t120 * t77 - 0.2e1 * t121 * t286, t259, 0.2e1 * t120 * t32 + 0.2e1 * t297 * t121 - 0.2e1 * t90 * t287 + 0.2e1 * t52 * t99, -0.2e1 * t90 * t281 + 0.2e1 * t120 * t31 - 0.2e1 * t53 * t99 + 0.2e1 * (t56 * t148 - t87) * t121, 0.2e1 * t215 * t98 + 0.2e1 * (qJD(6) * t214 + t144 * t31 - t148 * t32) * t121, -0.2e1 * t31 * t53 + 0.2e1 * t32 * t52 + 0.2e1 * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t207, 0, t231, 0, 0, 0, 0, 0, 0, t78, -t146 * t186 - t327, -t208 + t296, -t146 * t27 + t149 * t28 + (-t146 * t42 + t149 * t43) * qJD(4), 0, 0, 0, 0, 0, 0, t49, -t121 * t186 + t322, t298 + t312, t120 * t153 - t121 * t7 - t21 * t99 - t22 * t98, 0, 0, 0, 0, 0, 0, t181 - t221, t299 - t311, t121 * t192 - t258 + t300, t120 * t6 + t121 * t179 + t18 * t99 + t217 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121 * t55 - t91 * t98 + t219, 0, 0, 0, 0, 0, 0, 0, t148 * t216 + t295, 0, t10 * t121 + t214 * t98 + t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t292 + 0.2e1 * t293, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t79 - 0.2e1 * t80 + 0.2e1 * t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, 0, -t249, t185, t28, t27, 0, 0, 0, 0, -t163, 0, -t36, t185, t307 * t182 - t206 * t263 - t153, -t186 * t306 - t210 * t230 + t7, t163 * t255 - t230 * t61 + t251 * t62 - t36 * t306 (-t307 * t153 - t145 * t7 + (-t145 * t21 + t307 * t22) * qJD(5)) * pkin(4), t14, t9, t30, t15, -t209, 0, t138 * t26 - t30 * t137 + (t145 * t46 - t247 * t61) * t294 + t238, -t138 * t25 + t209 * t137 + (t145 * t47 - t246 * t61) * t294 + t308, -t1 + (-t46 * t230 - t137 * t26 + (t137 * t47 - t11) * qJD(6)) * t148 + (t47 * t230 - t137 * t25 - t3 + (t137 * t46 - t12) * qJD(6)) * t144, t6 * t138 + (-t11 * t247 + t12 * t246 + t145 * t18) * t294 + t179 * t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264, 0, -t265, 0, -t243, t134 * t265, 0, 0, 0, 0, -t98, 0, -t99, 0, -t56, t55 (-t145 * t99 + t307 * t98 + t200) * pkin(4) (-t307 * t56 - t145 * t55 + (t307 * t91 + t285) * qJD(5)) * pkin(4), -t59, t48, t76, t59, -t74, 0, t87 + (-qJD(6) * t212 - t56) * t148 + t176 * t144, t148 * t176 + t212 * t261 + t297, t10, t56 * t138 + (t246 * t53 - t247 * t52 + t285) * t294 + t10 * t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265, -t264, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t98, 0 (-t307 * t99 - t145 * t98 + (t307 * t121 + t277) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, t74, t76, t60, t99 * t138 - t137 * t233 + (t121 * t205 + t277) * t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t251, -0.2e1 * t230, 0, 0, t129, t119, 0, t130, 0, 0, 0.2e1 * t211, 0.2e1 * t271, 0.2e1 * t113, 0.2e1 * (t137 * t205 + t138 * t145) * t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, 0, -t36, t185, -t153, t7, 0, 0, t14, t9, t30, t15, -t209, 0, -pkin(5) * t26 - pkin(11) * t30 + t238, pkin(5) * t25 + pkin(11) * t209 + t308 (t192 - t283) * pkin(11) + t179, -pkin(5) * t6 + pkin(11) * t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t99, 0, -t56, t55, 0, 0, -t59, t48, t76, t59, -t74, 0, t87 + (pkin(5) * t98 - pkin(11) * t99) * t144 + (-t56 + (-pkin(5) * t121 - pkin(11) * t120) * qJD(6)) * t148, pkin(5) * t75 + pkin(11) * t74 + t297, t10, -pkin(5) * t56 + pkin(11) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t98, 0, 0, 0, 0, 0, 0, 0, 0, t74, t76, t60, -pkin(11) * t233 - t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, -t230, 0, 0, t129, t119, 0, t130, 0, 0, t211 - t253, -t252 + t271, t113 (-pkin(5) * t145 + pkin(11) * t205) * t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t119, 0, t130, 0, 0, -0.2e1 * t253, -0.2e1 * t252, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t25, 0, -t26, t36, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, 0, t77, t99, t32, t31, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t75, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139, 0, -t261, 0, -t137 * t139 - t144 * t230, t137 * t261 - t148 * t230, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139, 0, -t261, 0, -pkin(11) * t139, pkin(11) * t261, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
