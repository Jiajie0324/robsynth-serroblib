% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:34:54
% EndTime: 2019-03-09 13:36:05
% DurationCPUTime: 49.56s
% Computational Cost: add. (32602->1080), mult. (83170->1399), div. (0->0), fcn. (96686->12), ass. (0->828)
t737 = sin(qJ(5));
t741 = cos(qJ(4));
t1110 = t737 * t741;
t1218 = cos(qJ(5));
t738 = sin(qJ(4));
t945 = t1218 * t738;
t702 = t945 + t1110;
t1287 = -0.2e1 * t702;
t740 = cos(qJ(6));
t1025 = qJD(2) * t740;
t736 = sin(qJ(6));
t939 = t736 * t1025;
t1336 = t939 * t1287;
t1219 = t740 / 0.2e1;
t734 = sin(pkin(6));
t742 = cos(qJ(2));
t1133 = t734 * t742;
t739 = sin(qJ(2));
t1134 = t734 * t739;
t1202 = cos(pkin(12));
t733 = sin(pkin(12));
t659 = -t1133 * t1202 + t1134 * t733;
t944 = t1218 * t741;
t700 = t737 * t738 - t944;
t486 = t700 * t659;
t1120 = t736 * t486;
t1135 = t733 * t742;
t883 = t1202 * t739;
t661 = (-t883 - t1135) * t734;
t649 = t661 * t740;
t392 = t649 + t1120;
t1098 = t740 * t486;
t1146 = t661 * t736;
t393 = t1098 - t1146;
t1262 = -t736 * t392 / 0.2e1 + t393 * t1219;
t1115 = t736 * t740;
t1145 = t661 * t738;
t735 = cos(pkin(6));
t595 = t735 * t741 + t1145;
t596 = -t661 * t741 + t735 * t738;
t444 = -t1218 * t595 + t596 * t737;
t1159 = t444 * t702;
t1111 = t737 * t595;
t584 = t1218 * t596;
t1269 = t584 + t1111;
t1297 = t736 * t1269;
t313 = -t659 * t740 + t1297;
t1102 = t740 * t313;
t1100 = t740 * t1269;
t315 = t659 * t736 + t1100;
t1170 = t315 * t736;
t804 = t1102 / 0.2e1 + t1170 / 0.2e1;
t1332 = t1115 * t1159 + t700 * t804;
t1322 = -t1262 + t1332;
t1335 = -qJD(1) * t1322 + t1336 * t700;
t727 = qJD(6) * t740;
t718 = t736 * t727;
t655 = t718 * t1287;
t729 = t736 ^ 2;
t731 = t740 ^ 2;
t714 = t731 - t729;
t974 = qJD(4) + qJD(5);
t874 = t974 * t700;
t1334 = -t714 * t874 - t1335 + t655;
t1333 = t655 + t1335;
t1258 = t444 ^ 2;
t1319 = -t1269 ^ 2 + t1258;
t1331 = qJD(1) * t1319;
t1253 = t313 / 0.2e1;
t1325 = -t1297 / 0.2e1;
t753 = (t1325 + t1253) * t702;
t1329 = (t1325 - t313 / 0.2e1) * t702;
t835 = t1102 + t1170;
t131 = t835 * qJD(6);
t1306 = t835 * t444;
t1320 = t1306 * qJD(1);
t1321 = t1262 + t1332;
t1328 = qJD(2) * t1321 - t131 + t1320;
t1327 = -qJD(2) * t1322 - t131 - t1320;
t1326 = 0.2e1 * t702;
t1307 = t740 * t444;
t1324 = -t1307 / 0.2e1;
t902 = t1307 / 0.2e1;
t1308 = t736 * t444;
t1323 = t1308 / 0.2e1;
t1214 = t444 * pkin(11);
t258 = pkin(5) * t1269 + t1214;
t720 = pkin(2) * t733 + pkin(9);
t1208 = pkin(10) + t720;
t695 = t1208 * t738;
t696 = t1208 * t741;
t803 = t1218 * t696 - t695 * t737;
t1285 = -t803 / 0.2e1;
t1315 = t1269 / 0.2e1;
t1279 = t803 * t740;
t721 = -pkin(2) * t1202 - pkin(3);
t707 = -pkin(4) * t741 + t721;
t848 = t700 * pkin(5) - t702 * pkin(11);
t758 = t707 + t848;
t374 = t736 * t758 + t1279;
t811 = t1285 * t315 + t1315 * t374;
t1280 = t803 * t736;
t373 = -t740 * t758 + t1280;
t812 = t1285 * t313 + t1315 * t373;
t1317 = -t444 / 0.2e1;
t1316 = t444 / 0.2e1;
t1245 = -t1269 / 0.2e1;
t1209 = pkin(8) + qJ(3);
t719 = t735 * t742 * pkin(1);
t646 = -t1134 * t1209 + t719;
t600 = pkin(2) * t735 + t646;
t1217 = pkin(1) * t739;
t971 = t735 * t1217;
t647 = t1133 * t1209 + t971;
t609 = t733 * t647;
t456 = t1202 * t600 - t609;
t448 = -pkin(3) * t735 - t456;
t312 = -pkin(4) * t595 + t448;
t1313 = t312 * t444;
t568 = t736 * t700;
t908 = t568 / 0.2e1;
t352 = t444 * t908;
t909 = -t568 / 0.2e1;
t1312 = t444 * t909;
t849 = pkin(5) * t444 - pkin(11) * t1269;
t749 = t312 + t849;
t1213 = t659 * pkin(4);
t884 = t1202 * t647;
t457 = t600 * t733 + t884;
t449 = pkin(9) * t735 + t457;
t948 = -pkin(2) * t742 - pkin(1);
t479 = t659 * pkin(3) + t661 * pkin(9) + t734 * t948;
t267 = t449 * t738 - t479 * t741;
t221 = -pkin(10) * t596 - t267;
t188 = t221 + t1213;
t268 = t449 * t741 + t479 * t738;
t222 = pkin(10) * t595 + t268;
t218 = t1218 * t222;
t101 = t737 * t188 + t218;
t92 = pkin(11) * t659 + t101;
t49 = t736 * t92 - t740 * t749;
t1310 = t49 * t1269;
t50 = t736 * t749 + t740 * t92;
t1309 = t50 * t1269;
t570 = t740 * t700;
t1282 = t570 * t974;
t882 = t1218 * t695 + t696 * t737;
t1305 = t882 * t736;
t1304 = t882 * t740;
t1033 = qJD(1) * t659;
t654 = (t883 / 0.2e1 + t1135 / 0.2e1) * t734;
t1275 = -qJD(4) * t654 + t1033 * t661;
t1022 = qJD(4) * t444;
t1016 = qJD(5) * t444;
t1303 = t1269 * t312;
t1302 = t1269 * t313;
t1301 = t1269 * t315;
t1157 = t1269 * t700;
t925 = t1159 / 0.2e1;
t203 = t1157 / 0.2e1 + t925;
t1300 = t203 * qJD(5);
t1036 = qJD(1) * t1269;
t942 = t444 * t1036;
t1140 = t702 * t1269;
t1270 = t974 * t1115;
t1126 = t736 * t313;
t1169 = t315 * t740;
t180 = -t1126 / 0.2e1 + t1169 / 0.2e1;
t1225 = -t731 / 0.2e1;
t887 = t729 / 0.2e1 + t1225;
t566 = t887 * t702;
t158 = qJD(1) * t180 - qJD(2) * t566 + t1270;
t1240 = t584 / 0.2e1;
t1268 = t1111 / 0.2e1 + t1240;
t1296 = qJD(6) * t1268;
t1277 = t1098 / 0.2e1 - t1146 / 0.2e1;
t1044 = qJD(1) * t315;
t178 = t180 * qJD(6);
t1295 = t1044 * t1307 + t178;
t1294 = (-t373 + t1280) * t702;
t1293 = (-t374 + t1279) * t702;
t1028 = qJD(2) * t702;
t934 = t700 * t1028;
t880 = -qJD(1) * t203 - t934;
t796 = qJD(2) * t203 + t942;
t970 = -t1218 / 0.2e1;
t856 = t659 * t970;
t493 = t738 * t659;
t905 = t493 / 0.2e1;
t1075 = t737 * t905 + t741 * t856;
t923 = t486 / 0.2e1;
t341 = t923 + t1075;
t1292 = qJD(2) * t341 + t1033 * t444;
t697 = t945 / 0.2e1 + t1110 / 0.2e1;
t1291 = qJD(1) * t1268 + qJD(2) * t697;
t1290 = t974 * t882;
t1233 = t702 / 0.2e1;
t340 = (t1233 + t697) * t659;
t1289 = qJD(2) * t340 + t1033 * t1269;
t1288 = t974 * t803;
t1286 = pkin(11) / 0.2e1;
t1206 = t49 * t702;
t1113 = t737 * t222;
t187 = t1218 * t188;
t100 = -t187 + t1113;
t91 = -pkin(5) * t659 + t100;
t1284 = -t1206 / 0.2e1 + t91 * t909;
t1205 = t50 * t702;
t899 = -t570 / 0.2e1;
t1283 = -t1205 / 0.2e1 + t91 * t899;
t658 = t659 ^ 2;
t1281 = t658 * t741;
t892 = 0.2e1 * t1316;
t1278 = t892 * t700;
t976 = t697 * qJD(6);
t1274 = -t880 + t976;
t1235 = t700 / 0.2e1;
t200 = t1235 * t1269 + t925;
t1273 = qJD(1) * t200 + t934 + t976;
t1272 = qJD(5) * t654 - t1275;
t699 = t702 ^ 2;
t973 = -t700 ^ 2 + t699;
t166 = t700 * t444 - t1140;
t985 = t973 * qJD(2);
t1265 = qJD(1) * t166 - t985;
t111 = t1245 * t1326 + t1278;
t1264 = qJD(1) * t111 - t985;
t1263 = -t1120 / 0.2e1 - t649 / 0.2e1;
t107 = (-t1126 + t1169) * t702;
t143 = t313 ^ 2 - t315 ^ 2;
t1261 = -qJD(1) * t143 + qJD(2) * t107 + t835 * t974;
t172 = t804 * t702;
t1260 = -qJD(2) * t172 - t1044 * t313 + t180 * t974;
t1259 = qJD(1) * t172 + t566 * t974 + t699 * t939;
t104 = -qJD(1) * t835 + t714 * t974 + t1336;
t728 = t734 ^ 2;
t1256 = -pkin(5) / 0.2e1;
t1255 = t91 / 0.2e1;
t855 = -t218 / 0.2e1;
t1252 = -t315 / 0.2e1;
t1251 = t315 / 0.2e1;
t1242 = t882 / 0.2e1;
t562 = -t584 / 0.2e1;
t1211 = t702 * pkin(5);
t1212 = t700 * pkin(11);
t597 = t1211 + t1212;
t1239 = t597 / 0.2e1;
t1238 = -t659 / 0.2e1;
t1237 = t659 / 0.2e1;
t1236 = -t700 / 0.2e1;
t1234 = -t702 / 0.2e1;
t1232 = -t707 / 0.2e1;
t1231 = t707 / 0.2e1;
t1230 = t721 / 0.2e1;
t1210 = t737 * pkin(4);
t723 = pkin(11) + t1210;
t1229 = -t723 / 0.2e1;
t1228 = t723 / 0.2e1;
t969 = t1218 * pkin(4);
t724 = -t969 - pkin(5);
t1227 = -t724 / 0.2e1;
t1226 = t724 / 0.2e1;
t1224 = t736 / 0.2e1;
t1223 = t737 / 0.2e1;
t1222 = -t738 / 0.2e1;
t1221 = t738 / 0.2e1;
t1220 = -t740 / 0.2e1;
t1216 = pkin(4) * t596;
t1215 = pkin(4) * t738;
t1207 = pkin(2) * qJD(2);
t1103 = t740 * t258;
t1203 = t100 - t91;
t9 = t101 * t313 - t1310 + (t1203 * t736 + t1103) * t444;
t1204 = t9 * qJD(1);
t23 = -t313 * t91 + t444 * t49;
t1201 = qJD(1) * t23;
t24 = t315 * t91 - t444 * t50;
t1200 = qJD(1) * t24;
t852 = -t1213 / 0.2e1 - t188 / 0.2e1;
t35 = t855 + t218 / 0.2e1 + (t221 / 0.2e1 + t852) * t737;
t1199 = qJD(1) * t35;
t1114 = t737 * t221;
t122 = t218 + t1114;
t47 = t1216 * t444 - t122 * t659 + t1303;
t1198 = qJD(1) * t47;
t947 = t1218 * t221;
t123 = t947 - t1113;
t48 = t1216 * t1269 - t123 * t659 - t1313;
t1197 = qJD(1) * t48;
t55 = t100 * t659 - t1313;
t1196 = qJD(1) * t55;
t56 = -t101 * t659 + t1303;
t1195 = qJD(1) * t56;
t485 = t702 * t659;
t1099 = t740 * t485;
t471 = t1099 / 0.2e1;
t752 = -t1312 + t1329 + t352;
t70 = t471 + t752;
t1192 = qJD(1) * t70;
t470 = -t1099 / 0.2e1;
t71 = t470 + t753;
t1191 = qJD(1) * t71;
t754 = 0.2e1 * t352 + t1329;
t74 = t471 + t754;
t1190 = qJD(1) * t74;
t755 = t1312 + t753 + t352;
t75 = t470 + t755;
t1189 = qJD(1) * t75;
t927 = t315 * t1233;
t750 = (t1140 / 0.2e1 - t1278) * t740 + t927;
t1121 = t736 * t485;
t910 = t1121 / 0.2e1;
t78 = t910 + t750;
t1188 = qJD(1) * t78;
t900 = t1100 / 0.2e1;
t766 = (t900 + t1251) * t702 - t444 * t570;
t80 = t910 + t766;
t1187 = qJD(1) * t80;
t891 = t1316 + t1317;
t751 = (-t1140 / 0.2e1 + t891 * t700) * t740 + t927;
t82 = t910 + t751;
t1186 = qJD(1) * t82;
t813 = (-t1100 / 0.2e1 + t1251) * t702;
t84 = t910 + t813;
t1185 = qJD(1) * t84;
t1127 = t736 * t258;
t10 = t101 * t315 - t1309 + (t1203 * t740 - t1127) * t444;
t1184 = t10 * qJD(1);
t1183 = t101 * t736;
t1182 = t101 * t740;
t481 = t1202 * t646 - t609;
t467 = t741 * t481;
t972 = pkin(2) * t1134;
t487 = -pkin(3) * t661 + pkin(9) * t659 + t972;
t482 = t738 * t487;
t1086 = -t467 - t482;
t260 = pkin(10) * t493 - t1086;
t1112 = t737 * t260;
t1109 = t738 * t481;
t483 = t741 * t487;
t496 = t741 * t659;
t223 = -pkin(4) * t661 + pkin(10) * t496 - t1109 + t483;
t946 = t1218 * t223;
t805 = t946 - t1112;
t124 = pkin(5) * t661 - t805;
t480 = t646 * t733 + t884;
t400 = -pkin(4) * t493 + t480;
t184 = -pkin(5) * t485 - pkin(11) * t486 + t400;
t1105 = t740 * t184;
t219 = t737 * t223;
t259 = t1218 * t260;
t1089 = t259 + t219;
t125 = -pkin(11) * t661 + t1089;
t1130 = t736 * t125;
t59 = t1105 - t1130;
t11 = t124 * t313 + t392 * t91 + t444 * t59 + t485 * t49;
t1181 = t11 * qJD(1);
t1106 = t740 * t125;
t1129 = t736 * t184;
t60 = t1106 + t1129;
t12 = t124 * t315 + t393 * t91 - t444 * t60 + t485 * t50;
t1180 = t12 * qJD(1);
t1179 = t122 * t736;
t1178 = t122 * t740;
t191 = t1216 + t258;
t1104 = t740 * t191;
t1131 = t736 * t123;
t836 = t1104 - t1131;
t13 = t122 * t313 - t1308 * t91 + t444 * t836 - t1310;
t1177 = t13 * qJD(1);
t1107 = t740 * t123;
t1128 = t736 * t191;
t837 = t1107 + t1128;
t14 = t122 * t315 - t1307 * t91 - t444 * t837 - t1309;
t1176 = t14 * qJD(1);
t1175 = t312 * t700;
t1174 = t312 * t702;
t1173 = t313 * t485;
t1172 = t315 * t485;
t1171 = t315 * t700;
t33 = t100 * t661 - t312 * t485 + t400 * t444 + t659 * t805;
t1168 = t33 * qJD(1);
t34 = t101 * t661 - t1089 * t659 + t1269 * t400 + t312 * t486;
t1167 = t34 * qJD(1);
t792 = -t187 / 0.2e1 + pkin(4) * t856;
t37 = t947 / 0.2e1 + t792;
t1166 = t37 * qJD(1);
t1165 = t392 * t444;
t1164 = t393 * t444;
t1163 = t393 * t700;
t1162 = t393 * t736;
t1160 = t444 * t661;
t1158 = t1269 * t661;
t1156 = t448 * t741;
t1155 = t485 * t659;
t1154 = t486 * t659;
t1149 = t595 * t661;
t1148 = t596 * t661;
t1147 = t658 * t738;
t67 = t267 * t661 - t480 * t595 + (t483 + (-t448 - t481) * t738) * t659;
t1144 = t67 * qJD(1);
t68 = t268 * t661 + t480 * t596 + (t1086 - t1156) * t659;
t1143 = t68 * qJD(1);
t1142 = t700 * t392;
t1141 = t700 * t724;
t1139 = t702 * t723;
t1138 = t702 * t736;
t1137 = t702 * t740;
t1136 = t728 * t742;
t1132 = t736 * t100;
t580 = t597 + t1215;
t1117 = t736 * t580;
t1116 = t736 * t597;
t1108 = t740 * t100;
t1095 = t740 * t580;
t1094 = t740 * t597;
t95 = -t313 * t393 - t315 * t392;
t1093 = t95 * qJD(1);
t1092 = qJD(4) * t111 + qJD(5) * t166;
t1091 = qJD(4) * t200 + t1300;
t202 = -t444 * t1233 - t1157 / 0.2e1;
t1090 = qJD(4) * t202 - t1300;
t1088 = t974 * t340;
t345 = (t1234 + t697) * t659;
t1087 = t974 * t345;
t983 = t568 * qJD(6);
t503 = t973 * t736;
t988 = t503 * qJD(2);
t1085 = t988 - t983;
t1083 = t974 * t568;
t551 = t570 * qJD(6);
t504 = t973 * t740;
t987 = t504 * qJD(2);
t1080 = t551 - t987;
t982 = t570 * qJD(2);
t1079 = t982 + t727;
t536 = t566 * qJD(6);
t594 = t731 * t934;
t1077 = t594 - t536;
t1076 = -t737 * t493 / 0.2e1 + t944 * t1237;
t1014 = qJD(5) * t736;
t1020 = qJD(4) * t736;
t1074 = (t1014 + t1020) * t702;
t1013 = qJD(5) * t740;
t1018 = qJD(4) * t740;
t1073 = (-t1013 - t1018) * t702;
t1072 = t974 * t697;
t715 = -t738 ^ 2 + t741 ^ 2;
t955 = t702 * t1099;
t120 = t955 + t1163;
t1070 = qJD(1) * t120;
t127 = -t1258 * t736 + t1302;
t1069 = qJD(1) * t127;
t128 = -t1308 * t444 + t1302;
t1068 = qJD(1) * t128;
t129 = -t1258 * t740 + t1301;
t1067 = qJD(1) * t129;
t130 = -t1307 * t444 + t1301;
t1066 = qJD(1) * t130;
t133 = -t1165 - t1173;
t1065 = qJD(1) * t133;
t136 = -t1164 - t1172;
t1064 = qJD(1) * t136;
t859 = t315 * t899;
t777 = t1159 * t1225 + t859;
t926 = -t1162 / 0.2e1;
t145 = t926 + t777;
t1062 = qJD(1) * t145;
t917 = t731 * t1317;
t776 = t702 * t917 + t859;
t147 = t926 + t776;
t1061 = qJD(1) * t147;
t914 = -t1308 / 0.2e1;
t930 = t313 * t1236;
t789 = t702 * t914 + t930;
t149 = t789 - t1277;
t1060 = qJD(1) * t149;
t788 = t1323 * t702 + t930;
t150 = t788 + t1277;
t1059 = qJD(1) * t150;
t858 = t702 * t1324;
t774 = t858 - t1263;
t928 = t1171 / 0.2e1;
t152 = t928 + t774;
t1058 = qJD(1) * t152;
t929 = -t1171 / 0.2e1;
t154 = t929 + t774;
t1057 = qJD(1) * t154;
t168 = t267 * t659 + t448 * t595;
t1055 = qJD(1) * t168;
t169 = -t268 * t659 + t448 * t596;
t1054 = qJD(1) * t169;
t214 = t1155 - t1160;
t1053 = qJD(1) * t214;
t215 = t1155 + t1160;
t1052 = qJD(1) * t215;
t217 = -t1154 - t1158;
t1051 = qJD(1) * t217;
t220 = t456 * t661 - t457 * t659;
t1050 = qJD(1) * t220;
t237 = t891 * t1115;
t1049 = qJD(1) * t237;
t1048 = qJD(1) * t1308;
t243 = t892 * t736;
t1047 = qJD(1) * t243;
t1046 = qJD(1) * t1307;
t250 = t892 * t740;
t1045 = qJD(1) * t250;
t321 = -t1147 - t1149;
t1043 = qJD(1) * t321;
t322 = -t1147 + t1149;
t1042 = qJD(1) * t322;
t323 = -t1148 - t1281;
t1041 = qJD(1) * t323;
t405 = -t1148 + t1281;
t1040 = qJD(1) * t405;
t1037 = qJD(1) * t444;
t896 = -t496 / 0.2e1;
t484 = t737 * t896 + t738 * t856;
t1035 = qJD(1) * t484;
t1034 = qJD(1) * t596;
t1032 = qJD(1) * t735;
t1031 = qJD(1) * t741;
t1030 = qJD(2) * t659;
t1029 = qJD(2) * t700;
t1027 = qJD(2) * t707;
t1026 = qJD(2) * t738;
t1024 = qJD(2) * t741;
t1023 = qJD(3) * t741;
t1021 = qJD(4) * t659;
t1019 = qJD(4) * t738;
t1017 = qJD(4) * t741;
t1015 = qJD(5) * t707;
t1012 = qJD(6) * t444;
t1011 = qJD(6) * t484;
t1010 = qJD(6) * t736;
t126 = -(-t457 + t480) * t661 + (t456 - t481) * t659;
t1007 = t126 * qJD(1);
t134 = -t1165 + t1173;
t1006 = t134 * qJD(1);
t135 = t1164 - t1172;
t1005 = t135 * qJD(1);
t442 = t702 * t1121;
t157 = t442 + t1142;
t1004 = t157 * qJD(1);
t164 = pkin(2) * t728 * t739 * t948 - t456 * t480 + t457 * t481;
t1003 = t164 * qJD(1);
t167 = t1269 * t485 - t444 * t486;
t1002 = t167 * qJD(1);
t216 = t1154 - t1158;
t1001 = t216 * qJD(1);
t893 = t1315 + t1245;
t240 = t893 * t736;
t1000 = t240 * qJD(1);
t246 = t893 * t740;
t999 = t246 * qJD(1);
t297 = t595 * t741 - t596 * t738;
t291 = t297 * t659;
t998 = t291 * qJD(1);
t327 = t340 * qJD(1);
t329 = t341 * qJD(1);
t924 = -t486 / 0.2e1;
t342 = t924 + t1076;
t331 = t342 * qJD(1);
t435 = t562 + t1240;
t995 = t435 * qJD(1);
t437 = t661 * t700;
t994 = t437 * qJD(1);
t439 = t702 * t661;
t993 = t439 * qJD(1);
t781 = t733 * t1238 + t1202 * t661 / 0.2e1;
t459 = (-t1134 / 0.2e1 + t781) * pkin(2);
t992 = t459 * qJD(1);
t991 = t493 * qJD(1);
t990 = t496 * qJD(1);
t989 = t1145 * qJD(1);
t522 = t661 ^ 2 + t658;
t986 = t522 * qJD(1);
t984 = t568 * qJD(2);
t791 = -pkin(8) * t1133 - t971;
t601 = t1217 * t728 - t735 * t791;
t981 = t601 * qJD(1);
t694 = pkin(8) * t1134 - t719;
t602 = pkin(1) * t1136 - t694 * t735;
t980 = t602 * qJD(1);
t979 = t654 * qJD(1);
t698 = (-t739 ^ 2 + t742 ^ 2) * t728;
t975 = t698 * qJD(1);
t968 = qJD(4) * t1210;
t967 = qJD(5) * t1210;
t966 = t1216 / 0.2e1;
t965 = t1215 / 0.2e1;
t964 = pkin(5) * t1253;
t963 = pkin(5) * t1252;
t962 = t392 * t1256;
t961 = t393 * t1256;
t960 = t1210 / 0.2e1;
t959 = pkin(11) * t1220;
t956 = t739 * t1136;
t954 = t91 * t1224;
t953 = t91 * t1219;
t952 = t1255 - t100 / 0.2e1;
t951 = t1255 + t123 / 0.2e1;
t949 = t983 + t1073;
t941 = t734 * t1032;
t940 = qJD(2) * t734 * t735;
t938 = t702 * t1010;
t937 = t702 * t727;
t936 = t659 * t1031;
t935 = t661 * t1031;
t933 = -t1178 / 0.2e1;
t932 = t124 * t1224;
t931 = t124 * t1220;
t922 = -t1138 / 0.2e1;
t921 = t1138 / 0.2e1;
t920 = t1137 / 0.2e1;
t919 = t313 * t1227;
t918 = t315 * t1226;
t916 = -t1130 / 0.2e1;
t906 = t661 * t1223;
t904 = -t1106 / 0.2e1;
t898 = t570 / 0.2e1;
t897 = t723 * t1220;
t895 = t101 / 0.2e1 - t122 / 0.2e1;
t894 = -t219 / 0.2e1 - t259 / 0.2e1;
t890 = -t467 / 0.2e1 - t482 / 0.2e1;
t889 = t1242 - t882 / 0.2e1;
t888 = t803 / 0.2e1 + t1285;
t886 = t1218 * qJD(4);
t885 = t1218 * qJD(5);
t879 = qJD(1) * t202 - t934;
t876 = -t984 - t1010;
t875 = t974 * t702;
t873 = t313 * t960;
t872 = t315 * t960;
t871 = qJD(2) + t1032;
t870 = qJD(4) + t1033;
t869 = -qJD(5) - t1033;
t868 = -qJD(6) - t1037;
t867 = -t969 / 0.2e1;
t866 = t551 + t1074;
t865 = t987 + t1074;
t864 = -t1282 * t736 - t536 - t594;
t863 = -t988 - t1073;
t860 = qJD(1) * t956;
t857 = -t1175 / 0.2e1 + t894;
t854 = t661 * t970;
t853 = t1214 / 0.2e1 + t258 / 0.2e1;
t851 = t974 * t1210;
t850 = t184 / 0.2e1 + t91 * t1234;
t846 = t444 * t1228 + t191 / 0.2e1;
t845 = t700 * t875;
t744 = t836 * t1236 + (t1095 + t1305) * t1317 + t882 * t1323 + t812;
t763 = t1226 * t392 + t723 * t910 + t931;
t1 = t91 * t908 + (t49 / 0.2e1 - t1179 / 0.2e1) * t702 + t744 + t763;
t137 = t1095 * t700 + t1294;
t841 = -t1 * qJD(1) + t137 * qJD(2);
t138 = -t1117 * t700 + t1293;
t743 = t837 * t1235 + (-t1304 + t1117) * t1316 + t882 * t902 + t811;
t764 = t1226 * t393 - t485 * t897 + t932;
t2 = t91 * t898 + (t50 / 0.2e1 + t933) * t702 + t743 + t764;
t840 = -t2 * qJD(1) + t138 * qJD(2);
t139 = t570 * t597 + t1294;
t759 = t101 * t1234 + t1286 * t485 + t700 * t952;
t779 = t124 / 0.2e1 + t444 * t1239 + t258 * t1235;
t5 = t962 + t1206 / 0.2e1 - t779 * t740 + t759 * t736 + t812;
t839 = -t5 * qJD(1) + t139 * qJD(2);
t140 = -t568 * t597 + t1293;
t6 = t961 + t1205 / 0.2e1 + t779 * t736 + t759 * t740 + t811;
t838 = -t6 * qJD(1) + t140 * qJD(2);
t834 = -t1269 * t723 - t724 * t444;
t833 = -t659 * t721 + t661 * t720;
t832 = -t1139 - t1141;
t768 = t1235 * t50 + t1252 * t882 + t1316 * t374;
t15 = t740 * t850 + t768 + t916;
t235 = t1137 * t882 - t374 * t700;
t831 = qJD(1) * t15 - qJD(2) * t235;
t769 = t1236 * t49 + t1242 * t313 + t1317 * t373;
t16 = -t736 * t850 + t769 + t904;
t234 = -t1138 * t882 + t373 * t700;
t830 = qJD(1) * t16 - qJD(2) * t234;
t816 = t867 + t1227;
t745 = (t1229 + t960 + t1286) * t702 + (t1256 + t816) * t700;
t174 = t736 * t745 - t740 * t888;
t760 = t1229 * t1269 + t444 * t816;
t746 = pkin(5) * t1317 + pkin(11) * t1315 + t760;
t19 = t736 * t746 - t740 * t895 + t873;
t829 = qJD(1) * t19 + qJD(2) * t174;
t802 = t1175 / 0.2e1 + t894;
t808 = -t1232 * t444 - t1237 * t882;
t39 = (t1222 * t1269 + t1234 * t596 + t906) * pkin(4) + t802 + t808;
t511 = t1215 * t702 - t700 * t707;
t828 = qJD(1) * t39 - qJD(2) * t511;
t784 = -t1112 / 0.2e1 + t946 / 0.2e1;
t761 = -t1174 / 0.2e1 + t784;
t810 = t1232 * t1269 + t1237 * t803;
t40 = (t1222 * t444 + t1236 * t596 + t854) * pkin(4) + t761 + t810;
t510 = t1215 * t700 + t702 * t707;
t827 = qJD(1) * t40 - qJD(2) * t510;
t826 = t702 * (-qJD(6) - t1029);
t586 = t714 * t699;
t824 = -qJD(1) * t107 - qJD(2) * t586;
t823 = qJD(2) * t111 + t1331;
t822 = qJD(2) * t166 + t1331;
t324 = t595 ^ 2 - t596 ^ 2;
t820 = qJD(1) * t324 + qJD(2) * t297;
t819 = qJD(1) * t297 + qJD(2) * t715;
t818 = t974 * t1269;
t817 = -t1016 - t1022;
t815 = t1212 / 0.2e1 + t1211 / 0.2e1;
t814 = t858 + t1263;
t809 = t1231 * t444 + t1238 * t882;
t807 = t1231 * t1269 + t1238 * t803;
t806 = t1227 * t702 + t1228 * t700;
t51 = t761 - t807;
t801 = qJD(1) * t51 - t1027 * t702;
t52 = t802 + t809;
t800 = qJD(1) * t52 + t1027 * t700;
t762 = t1156 / 0.2e1 + t595 * t1230 + t720 * t905;
t160 = t762 - t890;
t799 = -qJD(1) * t160 - t1024 * t721;
t787 = t1230 * t596 + t720 * t896;
t162 = -t483 / 0.2e1 + (t448 / 0.2e1 + t481 / 0.2e1) * t738 + t787;
t798 = -qJD(1) * t162 - t1026 * t721;
t795 = qJD(2) * t202 - t942;
t433 = t595 * t1221 + t596 * t741 / 0.2e1;
t794 = qJD(2) * t433 + t1034 * t595;
t793 = qJD(1) * t433 + t1024 * t738;
t790 = pkin(5) / 0.2e1 + t816;
t786 = t1239 + t815;
t785 = t1270 * t1326;
t778 = t580 / 0.2e1 + t806;
t775 = t1174 / 0.2e1 + t784;
t196 = t736 * t778 + t740 * t889;
t25 = t736 * t846 + t740 * t951 + t919;
t773 = -qJD(1) * t25 - qJD(2) * t196 - t1018 * t724;
t198 = t736 * t889 - t740 * t778;
t27 = t736 * t951 - t740 * t846 + t918;
t772 = -qJD(1) * t27 - qJD(2) * t198 - t1020 * t724;
t771 = qJD(2) * t200 + t1037 * t1269 + t1296;
t770 = t796 + t1296;
t177 = t736 * t888 + t740 * t745;
t22 = t736 * t895 + t740 * t746 + t872;
t767 = -qJD(1) * t22 - qJD(2) * t177 - t736 * t968;
t230 = t786 * t736;
t29 = t736 * t853 + t740 * t952 + t964;
t638 = t790 * t740;
t757 = pkin(5) * t1013 - qJD(1) * t29 - qJD(2) * t230 + qJD(4) * t638;
t232 = t786 * t740;
t31 = t736 * t952 - t740 * t853 + t963;
t637 = t790 * t736;
t756 = pkin(5) * t1014 - qJD(1) * t31 + qJD(2) * t232 + qJD(4) * t637;
t747 = -t1139 / 0.2e1 - t1141 / 0.2e1 + (t1223 * t702 + t700 * t970) * pkin(4);
t713 = t736 * t967;
t708 = t714 * qJD(6);
t642 = t654 * qJD(2);
t640 = pkin(5) * t1220 + t1219 * t724 + t740 * t867;
t639 = t724 * t1224 + (t1256 + t867) * t736;
t627 = t661 * t1024;
t523 = t661 * t1030;
t490 = t493 * qJD(4);
t476 = -t991 - t1019;
t468 = -t1121 / 0.2e1;
t458 = t972 / 0.2e1 + t781 * pkin(2);
t428 = t433 * qJD(4);
t371 = t1162 / 0.2e1;
t344 = t923 + t1076;
t343 = t924 + t1075;
t339 = t345 * qJD(2);
t338 = t345 * qJD(3);
t333 = t344 * qJD(3);
t332 = t343 * qJD(2);
t330 = t342 * qJD(3);
t325 = t340 * qJD(3);
t296 = -t1111 + 0.2e1 * t562;
t292 = t297 * qJD(4);
t271 = -t875 - t327;
t270 = t874 - t331;
t269 = -t329 - t874;
t251 = t1219 * t1269 + t900;
t249 = t902 + t1324;
t244 = t914 + t1323;
t236 = 0.2e1 * t1324 * t736;
t233 = t1305 + t1094 / 0.2e1 - t815 * t740;
t231 = t1304 - t1116 / 0.2e1 + t815 * t736;
t199 = t1305 + t1095 / 0.2e1 - t806 * t740;
t197 = t1304 - t1117 / 0.2e1 + t806 * t736;
t179 = qJD(2) * t484 + t1268 * t974;
t176 = pkin(5) * t898 + t702 * t959 + t740 * t747 + t1280;
t175 = pkin(5) * t908 + pkin(11) * t922 + t736 * t747 - t1279;
t171 = t172 * qJD(6);
t163 = t448 * t1221 - t1109 / 0.2e1 + t483 / 0.2e1 + t787;
t161 = t762 + t890;
t155 = t929 + t814;
t153 = t928 + t814;
t151 = t788 - t1277;
t148 = t789 + t1277;
t146 = t371 + t776;
t144 = t371 + t777;
t142 = t1316 * t729 + t444 * t887 + t917;
t106 = t107 * qJD(6);
t83 = t468 + t813;
t81 = t468 + t751;
t79 = t468 + t766;
t77 = t468 + t750;
t76 = t471 + t755;
t73 = t470 + t754;
t72 = t471 + t753;
t69 = t470 + t752;
t54 = t775 + t807;
t53 = -t809 + t857;
t42 = pkin(4) * t906 + t1269 * t965 + t702 * t966 - t808 + t857;
t41 = pkin(4) * t854 + t444 * t965 + t700 * t966 + t775 - t810;
t38 = t1113 - t947 / 0.2e1 + t792;
t36 = 0.2e1 * t855 - t1114 / 0.2e1 + t852 * t737;
t32 = pkin(11) * t1324 + t963 + t954 + t1132 / 0.2e1 + t1103 / 0.2e1;
t30 = pkin(11) * t1323 + t964 + t953 + t1108 / 0.2e1 - t1127 / 0.2e1;
t28 = t444 * t897 + t918 + t954 - t1131 / 0.2e1 + t1104 / 0.2e1;
t26 = t723 * t1323 + t919 + t953 - t1107 / 0.2e1 - t1128 / 0.2e1;
t21 = t872 + t1183 / 0.2e1 + t1269 * t959 + pkin(5) * t902 + t1179 / 0.2e1 + t760 * t740;
t20 = t873 - t1182 / 0.2e1 + pkin(11) * t1325 + pkin(5) * t1323 + t933 + t760 * t736;
t18 = t91 * t920 + t916 + t1105 / 0.2e1 - t768;
t17 = t91 * t922 + t904 - t1129 / 0.2e1 - t769;
t8 = (t1116 - t1304) * t1317 + (-t1108 + t1127) * t1236 + t882 * t1324 + t101 * t920 + pkin(11) * t471 + t961 + t932 - t811 + t1283;
t7 = (t1094 + t1305) * t1316 + (t1103 + t1132) * t1235 + t882 * t914 + t101 * t921 + pkin(11) * t910 + t962 + t931 - t812 + t1284;
t4 = t122 * t920 + t1283 - t743 + t764;
t3 = t122 * t921 + t1284 - t744 + t763;
t43 = [0, 0, 0, qJD(2) * t956, t698 * qJD(2), t742 * t940, -t739 * t940, 0, -t601 * qJD(2), -t602 * qJD(2), qJD(2) * t126 + qJD(3) * t522, qJD(2) * t164 + qJD(3) * t220 (qJD(4) * t595 - t1024 * t659) * t596, -qJD(2) * t291 + qJD(4) * t324, qJD(2) * t323 + t1021 * t595, -qJD(2) * t322 - t1021 * t596, -t523, qJD(2) * t67 - qJD(3) * t321 + qJD(4) * t169, qJD(2) * t68 + qJD(3) * t405 + qJD(4) * t168 (qJD(2) * t486 + t817) * t1269, qJD(2) * t167 + t1319 * t974, t216 * qJD(2) + t659 * t817, t215 * qJD(2) - t659 * t818, -t523, qJD(2) * t33 + qJD(3) * t214 + qJD(4) * t47 + qJD(5) * t56, qJD(2) * t34 + qJD(3) * t217 + qJD(4) * t48 + qJD(5) * t55 (qJD(2) * t393 - qJD(6) * t313 + t740 * t817) * t315, qJD(2) * t95 + qJD(6) * t143 + t1306 * t974, qJD(2) * t135 + qJD(4) * t130 + qJD(5) * t129 - t1012 * t313, qJD(2) * t134 - qJD(4) * t128 - qJD(5) * t127 - t1012 * t315 (-qJD(2) * t485 + t818) * t444, qJD(2) * t11 + qJD(3) * t133 + qJD(4) * t13 + qJD(5) * t9 + qJD(6) * t24, qJD(2) * t12 + qJD(3) * t136 + qJD(4) * t14 + qJD(5) * t10 + qJD(6) * t23; 0, 0, 0, t860, t975, t871 * t1133, -t871 * t1134, 0, qJD(2) * t791 - t981, qJD(2) * t694 - t980, t1007 + (t1202 * t659 + t661 * t733) * t1207, t1003 + (-t1202 * t480 + t481 * t733) * t1207 + t458 * qJD(3), t428 + (-t1026 - t1034) * t496, -t1030 * t715 + t292 - t998, -t1026 * t661 + t1041, -t627 - t1042, -t1275, t1144 + (-t480 * t741 + t738 * t833) * qJD(2) + t163 * qJD(4), t1143 + (t480 * t738 + t741 * t833) * qJD(2) + t161 * qJD(4) (t1028 + t1036) * t486 + t1090, t1002 + (t485 * t702 - t486 * t700) * qJD(2) + t1092, -t1028 * t661 + t343 * t974 + t1001, t1029 * t661 + t1052 + t1087, t1272, t1168 + (t400 * t700 - t485 * t707 + t661 * t882) * qJD(2) + t41 * qJD(4) + t54 * qJD(5), t1167 + (t400 * t702 + t486 * t707 + t661 * t803) * qJD(2) + t42 * qJD(4) + t53 * qJD(5), qJD(4) * t146 + qJD(5) * t144 - t171 + (t1025 * t702 + t1044) * t393, t1093 - t106 + (-t392 * t740 - t1162) * t1028 + t974 * t1321, t1005 + (-t955 + t1163) * qJD(2) + t77 * qJD(4) + t79 * qJD(5) + t148 * qJD(6), t1006 + (t442 - t1142) * qJD(2) + t69 * qJD(4) + t73 * qJD(5) + t155 * qJD(6), t1011 - (t1029 + t1037) * t485 + t1091, t1181 + (t1138 * t124 + t373 * t485 + t392 * t882 + t59 * t700) * qJD(2) + t3 * qJD(4) + t7 * qJD(5) + t18 * qJD(6), t1180 + (t1137 * t124 + t374 * t485 + t393 * t882 - t60 * t700) * qJD(2) + t4 * qJD(4) + t8 * qJD(5) + t17 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t986, qJD(2) * t458 + t1050, 0, 0, 0, 0, 0, -t1043, t1040, 0, 0, 0, 0, 0, t1053 + t1087, t344 * t974 + t1051, 0, 0, 0, 0, 0, qJD(4) * t72 + qJD(5) * t76 + qJD(6) * t153 + t1065, qJD(4) * t81 + qJD(5) * t83 + qJD(6) * t151 + t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t794, t820, t870 * t595, -t870 * t596, t642, qJD(2) * t163 - qJD(4) * t268 + t1054, qJD(2) * t161 + qJD(4) * t267 + t1055, t795, t823, -t444 * t870 - t1016 + t332, qJD(5) * t296 - t1269 * t870 + t339, t642, qJD(2) * t41 - qJD(4) * t122 + qJD(5) * t36 + t1198 + t338, qJD(2) * t42 - qJD(4) * t123 + qJD(5) * t38 + t1197 + t333, qJD(2) * t146 + qJD(5) * t236 + t178 - (t1020 + t1044) * t1307, t142 * qJD(5) - t1022 * t714 + t1328, qJD(2) * t77 + qJD(5) * t1297 + qJD(6) * t249 + t1020 * t1269 + t1066, qJD(2) * t69 + qJD(5) * t251 + qJD(6) * t244 + t1018 * t1269 - t1068, t771, t1177 + t3 * qJD(2) + t72 * qJD(3) + (t736 * t834 - t1178) * qJD(4) + t20 * qJD(5) + t28 * qJD(6), t1176 + t4 * qJD(2) + t81 * qJD(3) + (t740 * t834 + t1179) * qJD(4) + t21 * qJD(5) + t26 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t796, t822, t444 * t869 - t1022 + t332, qJD(4) * t296 + t1269 * t869 + t339, t642, qJD(2) * t54 + qJD(4) * t36 - qJD(5) * t101 + t1195 + t338, qJD(2) * t53 + qJD(4) * t38 + qJD(5) * t100 + t1196 + t333, qJD(2) * t144 + qJD(4) * t236 + t178 + (-t1014 - t1044) * t1307, t142 * qJD(4) - t1016 * t714 + t1328, qJD(2) * t79 + qJD(4) * t1297 + t1014 * t1269 + t1067, qJD(2) * t73 + qJD(4) * t251 + t1013 * t1269 - t1069, t770, t1204 + t7 * qJD(2) + t76 * qJD(3) + t20 * qJD(4) + (t736 * t849 - t1182) * qJD(5) + t32 * qJD(6), t1184 + t8 * qJD(2) + t83 * qJD(3) + t21 * qJD(4) + (t740 * t849 + t1183) * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1260, -t1261, qJD(2) * t148 + qJD(4) * t249 + t313 * t868, qJD(2) * t155 + qJD(4) * t244 + t315 * t868, t179, qJD(2) * t18 + qJD(3) * t153 + qJD(4) * t28 + qJD(5) * t32 - qJD(6) * t50 + t1200, qJD(2) * t17 + qJD(3) * t151 + qJD(4) * t26 + qJD(5) * t30 + qJD(6) * t49 + t1201; 0, 0, 0, -t860, -t975, -t742 * t941, t739 * t941, 0, t981, t980, -t1007, qJD(3) * t459 - t1003, t596 * t936 + t428, t292 + t998, qJD(4) * t496 - t1041, -t490 + t1042, t1275, qJD(4) * t162 + t1023 * t661 - t1144, -qJD(3) * t1145 + qJD(4) * t160 - t1143, -t1036 * t486 + t1090, -t1002 + t1092, -t341 * t974 - t1001, -t1052 - t1088, -t1272, -qJD(3) * t437 - qJD(4) * t40 - qJD(5) * t51 - t1168, -qJD(3) * t439 - qJD(4) * t39 - qJD(5) * t52 - t1167, qJD(4) * t147 + qJD(5) * t145 - t1044 * t393 - t171, t1322 * t974 - t106 - t1093, qJD(4) * t78 + qJD(5) * t80 + qJD(6) * t149 - t1005, qJD(4) * t70 + qJD(5) * t74 + qJD(6) * t154 - t1006, t1037 * t485 - t1011 + t1091, -qJD(3) * t157 - qJD(4) * t1 - qJD(5) * t5 - qJD(6) * t15 - t1181, -qJD(3) * t120 - qJD(4) * t2 - qJD(5) * t6 - qJD(6) * t16 - t1180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t738 * t1017, t715 * qJD(4), 0, 0, 0, t721 * t1019, t721 * t1017, -t845, -t974 * t973, 0, 0, 0, qJD(4) * t510 + t1015 * t702, qJD(4) * t511 - t1015 * t700, -t699 * t718 - t731 * t845, -qJD(6) * t586 + t700 * t785, t504 * t974 - t700 * t938, -t503 * t974 - t700 * t937, t702 * t874, qJD(4) * t137 + qJD(5) * t139 + qJD(6) * t235, qJD(4) * t138 + qJD(5) * t140 + qJD(6) * t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t992, 0, 0, 0, 0, 0, t935, -t989, 0, 0, 0, 0, 0, -t994, -t993, 0, 0, 0, 0, 0, -t1004, -t1070; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t793, t819, t990 + t1017, t476, -t979, -t1017 * t720 - t798, t1019 * t720 - t799, t879, t1264, t269, t271, -t979, -t1288 - t827, t1290 - t828, t864 + t1061, t1334, t865 + t1188, t863 + t1192, t1273 (t736 * t832 - t1279) * qJD(4) + t175 * qJD(5) + t199 * qJD(6) + t841 (t740 * t832 + t1280) * qJD(4) + t176 * qJD(5) + t197 * qJD(6) + t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t880, t1265, t269, t271, -t979, -t1288 - t801, t1290 - t800, t864 + t1062, t1334, t865 + t1187, t863 + t1190, t1274, t175 * qJD(4) + (t736 * t848 - t1279) * qJD(5) + t233 * qJD(6) + t839, t176 * qJD(4) + (t740 * t848 + t1280) * qJD(5) + t231 * qJD(6) + t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1259, t1270 * t1287 + t824, t736 * t826 + t1060, t740 * t826 + t1057, -t1035 + t1072, qJD(4) * t199 + qJD(5) * t233 - qJD(6) * t374 - t831, qJD(4) * t197 + qJD(5) * t231 + qJD(6) * t373 - t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t986, -qJD(2) * t459 - t1050, 0, 0, 0, 0, 0, -t490 - t627 + t1043, qJD(2) * t1145 - t1017 * t659 - t1040, 0, 0, 0, 0, 0, qJD(2) * t437 - t1053 - t1088, qJD(2) * t439 - t342 * t974 - t1051, 0, 0, 0, 0, 0, qJD(2) * t157 + qJD(4) * t71 + qJD(5) * t75 + qJD(6) * t152 - t1065, qJD(2) * t120 + qJD(4) * t82 + qJD(5) * t84 + qJD(6) * t150 - t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t992, 0, 0, 0, 0, 0, -t935, t989, 0, 0, 0, 0, 0, t994, t993, 0, 0, 0, 0, 0, t1004, t1070; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, -t870 * t741, 0, 0, 0, 0, 0, t271, t270, 0, 0, 0, 0, 0, t949 + t1191, t866 + t1186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, t270, 0, 0, 0, 0, 0, t949 + t1189, t866 + t1185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t937 + t1058 + t1083, t1059 + t938 + t1282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t794, -t820, -qJD(2) * t496 - t1033 * t595, qJD(2) * t493 + t1033 * t596, t642, -qJD(2) * t162 + qJD(3) * t493 - t1054, -qJD(2) * t160 + t1023 * t659 - t1055, -t795, -t823, t1292, qJD(5) * t435 + t1289, t642, qJD(2) * t40 + qJD(5) * t35 - t1198 + t325, qJD(2) * t39 + qJD(5) * t37 - t1197 + t330, -qJD(2) * t147 - qJD(5) * t237 + t1295, t1327, -qJD(2) * t78 - qJD(5) * t240 + qJD(6) * t250 - t1066, -qJD(2) * t70 - qJD(5) * t246 - qJD(6) * t243 + t1068, -t771, qJD(2) * t1 - qJD(3) * t71 + qJD(5) * t19 + qJD(6) * t27 - t1177, qJD(2) * t2 - qJD(3) * t82 + qJD(5) * t22 + qJD(6) * t25 - t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t793, -t819, -t990, t991, t979, t798, t799, -t879, -t1264, t329, t327, t979, t827, t828, -t1061 + t1077, t1333, t1080 - t1188, t1085 - t1192, -t1273, qJD(5) * t174 + qJD(6) * t198 - t841, qJD(5) * t177 + qJD(6) * t196 - t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t991, t936, 0, 0, 0, 0, 0, t327, t331, 0, 0, 0, 0, 0, -t1191, -t1186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t967, -pkin(4) * t885, t718, t708, 0, 0, 0, t1010 * t724 - t740 * t967, t724 * t727 + t713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t995, 0, -t851 + t1199, t1166 + (-t886 - t885) * pkin(4), t718 - t1049, t708, -t1000, -t999, 0, qJD(6) * t639 - t740 * t851 + t829, qJD(6) * t640 + t713 - t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t104, t1045 + t1079, t876 - t1047, -t1291, qJD(5) * t639 - t723 * t727 - t772, qJD(5) * t640 + t1010 * t723 - t773; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t796, -t822, t1292, -qJD(4) * t435 + t1289, t642, qJD(2) * t51 - qJD(4) * t35 - t1195 + t325, qJD(2) * t52 - qJD(4) * t37 - t1196 + t330, -qJD(2) * t145 + qJD(4) * t237 + t1295, t1327, -qJD(2) * t80 + qJD(4) * t240 + qJD(6) * t1307 - t1067, -qJD(2) * t74 + qJD(4) * t246 - qJD(6) * t1308 + t1069, -t770, qJD(2) * t5 - qJD(3) * t75 - qJD(4) * t19 + qJD(6) * t31 - t1204, qJD(2) * t6 - qJD(3) * t84 - qJD(4) * t22 + qJD(6) * t29 - t1184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t880, -t1265, t329, t327, t979, t801, t800, -t1062 + t1077, t1333, t1080 - t1187, t1085 - t1190, -t1274, -qJD(4) * t174 - qJD(6) * t232 - t839, -qJD(4) * t177 + qJD(6) * t230 - t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327, t331, 0, 0, 0, 0, 0, -t1189, -t1185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t995, 0, t968 - t1199, pkin(4) * t886 - t1166, t718 + t1049, t708, t1000, t999, 0, -qJD(6) * t637 + t740 * t968 - t829, -qJD(6) * t638 + t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t718, t708, 0, 0, 0, -pkin(5) * t1010, -pkin(5) * t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t104, t1046 + t1079, t876 - t1048, -t1291, -pkin(11) * t727 - t756, pkin(11) * t1010 - t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1260, t1261, -qJD(2) * t149 - qJD(4) * t250 - qJD(5) * t1307 + t1037 * t313, -qJD(2) * t154 + qJD(4) * t243 + qJD(5) * t1308 + t1037 * t315, t179, qJD(2) * t15 - qJD(3) * t152 - qJD(4) * t27 - qJD(5) * t31 - t1200, qJD(2) * t16 - qJD(3) * t150 - qJD(4) * t25 - qJD(5) * t29 - t1201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1259, t785 - t824, t736 * t934 - t1060 - t1282, t740 * t934 - t1057 + t1083, t1035 + t1072, -qJD(4) * t198 + qJD(5) * t232 + t831, -qJD(4) * t196 - qJD(5) * t230 + t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1058, -t1059; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t158, -t104, -t982 - t1045, t984 + t1047, t1291, qJD(5) * t637 + t772, qJD(5) * t638 + t773; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t158, -t104, -t982 - t1046, t984 + t1048, t1291, t756, t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
