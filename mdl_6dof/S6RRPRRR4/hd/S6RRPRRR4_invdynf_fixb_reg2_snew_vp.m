% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPRRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 20:52
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPRRR4_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR4_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR4_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR4_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR4_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR4_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 20:51:42
% EndTime: 2019-05-06 20:51:55
% DurationCPUTime: 13.01s
% Computational Cost: add. (143746->375), mult. (376635->580), div. (0->0), fcn. (306785->14), ass. (0->323)
t2680 = sin(pkin(12));
t2682 = cos(pkin(12));
t2687 = sin(qJ(2));
t2692 = cos(qJ(2));
t2681 = sin(pkin(6));
t2751 = qJD(1) * t2681;
t2646 = (t2680 * t2692 + t2682 * t2687) * t2751;
t2683 = cos(pkin(6));
t2674 = qJD(1) * t2683 + qJD(2);
t2686 = sin(qJ(4));
t2691 = cos(qJ(4));
t2627 = t2646 * t2686 - t2674 * t2691;
t2629 = t2646 * t2691 + t2674 * t2686;
t2685 = sin(qJ(5));
t2690 = cos(qJ(5));
t2601 = t2690 * t2627 + t2629 * t2685;
t2600 = qJD(6) + t2601;
t2763 = qJD(6) + t2600;
t2733 = t2692 * t2751;
t2736 = qJDD(1) * t2681;
t2656 = qJD(2) * t2733 + t2687 * t2736;
t2742 = t2681 * t2687;
t2734 = qJD(1) * t2742;
t2657 = -qJD(2) * t2734 + t2692 * t2736;
t2621 = t2682 * t2656 + t2680 * t2657;
t2644 = t2680 * t2734 - t2682 * t2733;
t2745 = t2644 * t2674;
t2606 = t2621 - t2745;
t2603 = -t2627 * t2685 + t2629 * t2690;
t2642 = qJD(4) + t2644;
t2638 = qJD(5) + t2642;
t2684 = sin(qJ(6));
t2689 = cos(qJ(6));
t2578 = t2603 * t2684 - t2689 * t2638;
t2762 = t2578 ^ 2;
t2580 = t2603 * t2689 + t2638 * t2684;
t2761 = t2580 ^ 2;
t2760 = t2600 ^ 2;
t2759 = t2601 ^ 2;
t2758 = t2603 ^ 2;
t2626 = t2627 ^ 2;
t2757 = t2629 ^ 2;
t2756 = t2638 ^ 2;
t2755 = t2642 ^ 2;
t2754 = t2644 ^ 2;
t2753 = t2646 ^ 2;
t2660 = t2674 ^ 2;
t2752 = -2 * qJD(3);
t2750 = t2578 * t2580;
t2749 = t2601 * t2603;
t2748 = t2627 * t2629;
t2747 = t2642 * t2627;
t2746 = t2644 * t2646;
t2744 = t2646 * t2674;
t2694 = qJD(1) ^ 2;
t2743 = t2681 ^ 2 * t2694;
t2688 = sin(qJ(1));
t2693 = cos(qJ(1));
t2667 = t2688 * g(1) - g(2) * t2693;
t2653 = pkin(8) * t2681 * t2694 + qJDD(1) * pkin(1) + t2667;
t2741 = t2683 * t2653;
t2740 = qJD(4) - t2642;
t2739 = qJD(5) - t2638;
t2738 = qJD(6) - t2600;
t2668 = -g(1) * t2693 - g(2) * t2688;
t2698 = -pkin(1) * t2694 + pkin(8) * t2736 + t2668;
t2613 = -g(3) * t2742 + t2687 * t2741 + t2692 * t2698;
t2652 = pkin(2) * t2674 - qJ(3) * t2734;
t2679 = t2692 ^ 2;
t2732 = t2679 * t2743;
t2583 = -pkin(2) * t2732 + qJ(3) * t2657 - t2652 * t2674 + t2613;
t2697 = t2687 * t2698;
t2731 = t2687 * t2743;
t2735 = t2683 * qJDD(1) + qJDD(2);
t2695 = -t2697 - t2656 * qJ(3) + t2735 * pkin(2) + (pkin(2) * t2731 + t2741 + (qJ(3) * qJD(1) * t2674 - g(3)) * t2681) * t2692;
t2547 = t2682 * t2583 + t2644 * t2752 + t2680 * t2695;
t2620 = pkin(3) * t2644 - pkin(9) * t2646;
t2535 = -pkin(3) * t2660 + pkin(9) * t2735 - t2644 * t2620 + t2547;
t2635 = -t2683 * g(3) - t2681 * t2653;
t2599 = -t2657 * pkin(2) - qJ(3) * t2732 + t2652 * t2734 + qJDD(3) + t2635;
t2737 = t2680 * t2656 - t2682 * t2657;
t2604 = t2737 + t2744;
t2551 = t2604 * pkin(3) - pkin(9) * t2606 + t2599;
t2510 = t2691 * t2535 + t2686 * t2551;
t2725 = t2686 * t2621 - t2691 * t2735;
t2592 = -qJD(4) * t2629 - t2725;
t2610 = pkin(4) * t2642 - pkin(10) * t2629;
t2496 = -pkin(4) * t2626 + pkin(10) * t2592 - t2610 * t2642 + t2510;
t2509 = -t2686 * t2535 + t2691 * t2551;
t2730 = -qJDD(4) - t2737;
t2571 = -t2730 - t2748;
t2701 = -t2691 * t2621 - t2686 * t2735;
t2593 = -t2627 * qJD(4) - t2701;
t2696 = (-t2593 - t2747) * pkin(10) + t2571 * pkin(4) + t2509;
t2459 = t2690 * t2496 + t2685 * t2696;
t2458 = -t2685 * t2496 + t2690 * t2696;
t2706 = -t2685 * t2592 - t2690 * t2593;
t2544 = -qJD(5) * t2601 - t2706;
t2729 = t2638 * t2601 - t2544;
t2723 = qJDD(5) - t2730;
t2728 = -t2684 * t2544 + t2689 * t2723;
t2727 = t2680 * t2583 - t2682 * t2695;
t2726 = -t2690 * t2592 + t2685 * t2593;
t2724 = t2674 * t2733;
t2561 = pkin(5) * t2601 - pkin(11) * t2603;
t2455 = -pkin(5) * t2756 + pkin(11) * t2723 - t2601 * t2561 + t2459;
t2534 = -t2735 * pkin(3) - t2660 * pkin(9) + ((2 * qJD(3)) + t2620) * t2646 + t2727;
t2511 = -t2592 * pkin(4) - t2626 * pkin(10) + t2629 * t2610 + t2534;
t2524 = (qJD(5) + t2638) * t2603 + t2726;
t2470 = pkin(5) * t2524 + pkin(11) * t2729 + t2511;
t2437 = -t2455 * t2684 + t2470 * t2689;
t2438 = t2455 * t2689 + t2470 * t2684;
t2423 = -t2437 * t2684 + t2438 * t2689;
t2454 = -pkin(5) * t2723 - pkin(11) * t2756 + t2603 * t2561 - t2458;
t2416 = t2423 * t2685 - t2454 * t2690;
t2417 = t2423 * t2690 + t2454 * t2685;
t2407 = -t2416 * t2686 + t2417 * t2691;
t2422 = t2437 * t2689 + t2438 * t2684;
t2402 = t2407 * t2680 - t2422 * t2682;
t2403 = t2407 * t2682 + t2422 * t2680;
t2722 = t2402 * t2692 + t2403 * t2687;
t2439 = t2458 * t2690 + t2459 * t2685;
t2440 = -t2458 * t2685 + t2459 * t2690;
t2425 = -t2439 * t2686 + t2440 * t2691;
t2420 = t2425 * t2680 - t2511 * t2682;
t2421 = t2425 * t2682 + t2511 * t2680;
t2721 = t2420 * t2692 + t2421 * t2687;
t2506 = -t2580 * t2738 + t2728;
t2699 = -t2689 * t2544 - t2684 * t2723;
t2508 = t2578 * t2738 + t2699;
t2472 = t2506 * t2689 - t2508 * t2684;
t2533 = -t2761 - t2762;
t2460 = t2472 * t2685 - t2533 * t2690;
t2461 = t2472 * t2690 + t2533 * t2685;
t2442 = -t2460 * t2686 + t2461 * t2691;
t2471 = t2506 * t2684 + t2508 * t2689;
t2428 = t2442 * t2680 - t2471 * t2682;
t2429 = t2442 * t2682 + t2471 * t2680;
t2720 = t2428 * t2692 + t2429 * t2687;
t2700 = -qJD(5) * t2603 - qJDD(6) - t2726;
t2512 = -t2700 - t2750;
t2541 = -t2760 - t2762;
t2492 = -t2512 * t2684 + t2541 * t2689;
t2505 = t2580 * t2763 - t2728;
t2466 = t2492 * t2685 - t2505 * t2690;
t2467 = t2492 * t2690 + t2505 * t2685;
t2447 = -t2466 * t2686 + t2467 * t2691;
t2491 = t2512 * t2689 + t2541 * t2684;
t2432 = t2447 * t2680 - t2491 * t2682;
t2433 = t2447 * t2682 + t2491 * t2680;
t2719 = t2432 * t2692 + t2433 * t2687;
t2513 = t2700 - t2750;
t2545 = -t2760 - t2761;
t2498 = t2513 * t2689 - t2545 * t2684;
t2507 = -t2578 * t2763 - t2699;
t2468 = t2498 * t2685 - t2507 * t2690;
t2469 = t2498 * t2690 + t2507 * t2685;
t2451 = -t2468 * t2686 + t2469 * t2691;
t2497 = t2513 * t2684 + t2545 * t2689;
t2434 = t2451 * t2680 - t2497 * t2682;
t2435 = t2451 * t2682 + t2497 * t2680;
t2718 = t2434 * t2692 + t2435 * t2687;
t2525 = -t2603 * t2739 - t2726;
t2527 = t2601 * t2739 + t2706;
t2500 = t2525 * t2685 + t2527 * t2690;
t2501 = t2525 * t2690 - t2527 * t2685;
t2463 = -t2500 * t2686 + t2501 * t2691;
t2548 = -t2758 - t2759;
t2456 = t2463 * t2680 - t2548 * t2682;
t2457 = t2463 * t2682 + t2548 * t2680;
t2717 = t2456 * t2692 + t2457 * t2687;
t2478 = -t2509 * t2686 + t2510 * t2691;
t2464 = t2478 * t2680 - t2534 * t2682;
t2465 = t2478 * t2682 + t2534 * t2680;
t2716 = t2464 * t2692 + t2465 * t2687;
t2556 = t2723 - t2749;
t2560 = -t2756 - t2759;
t2518 = t2556 * t2690 + t2560 * t2685;
t2519 = -t2556 * t2685 + t2560 * t2690;
t2494 = -t2518 * t2686 + t2519 * t2691;
t2475 = t2494 * t2680 - t2524 * t2682;
t2476 = t2494 * t2682 + t2524 * t2680;
t2715 = t2475 * t2692 + t2476 * t2687;
t2557 = -t2723 - t2749;
t2570 = -t2756 - t2758;
t2530 = t2557 * t2685 + t2570 * t2690;
t2531 = t2557 * t2690 - t2570 * t2685;
t2504 = -t2530 * t2686 + t2531 * t2691;
t2481 = t2504 * t2680 + t2682 * t2729;
t2482 = t2504 * t2682 - t2680 * t2729;
t2714 = t2481 * t2692 + t2482 * t2687;
t2546 = t2646 * t2752 - t2727;
t2514 = t2546 * t2682 + t2547 * t2680;
t2515 = -t2546 * t2680 + t2547 * t2682;
t2713 = t2514 * t2692 + t2515 * t2687;
t2563 = -t2629 * t2740 - t2725;
t2565 = t2627 * t2740 + t2701;
t2537 = t2563 * t2691 - t2565 * t2686;
t2582 = -t2626 - t2757;
t2516 = t2537 * t2680 - t2582 * t2682;
t2517 = t2537 * t2682 + t2582 * t2680;
t2712 = t2516 * t2692 + t2517 * t2687;
t2588 = -t2755 - t2626;
t2553 = -t2571 * t2686 + t2588 * t2691;
t2562 = (qJD(4) + t2642) * t2629 + t2725;
t2522 = t2553 * t2680 - t2562 * t2682;
t2523 = t2553 * t2682 + t2562 * t2680;
t2711 = t2522 * t2692 + t2523 * t2687;
t2572 = t2730 - t2748;
t2596 = -t2755 - t2757;
t2555 = t2572 * t2691 - t2596 * t2686;
t2564 = t2593 - t2747;
t2528 = t2555 * t2680 - t2564 * t2682;
t2529 = t2555 * t2682 + t2564 * t2680;
t2710 = t2528 * t2692 + t2529 * t2687;
t2605 = -t2737 + t2744;
t2607 = -t2621 - t2745;
t2566 = t2605 * t2680 + t2607 * t2682;
t2567 = t2605 * t2682 - t2607 * t2680;
t2709 = t2566 * t2692 + t2567 * t2687;
t2614 = -t2660 - t2754;
t2615 = t2735 - t2746;
t2574 = t2614 * t2680 + t2615 * t2682;
t2575 = t2614 * t2682 - t2615 * t2680;
t2708 = t2574 * t2692 + t2575 * t2687;
t2616 = -t2735 - t2746;
t2624 = -t2660 - t2753;
t2586 = t2616 * t2680 + t2624 * t2682;
t2587 = t2616 * t2682 - t2624 * t2680;
t2707 = t2586 * t2692 + t2587 * t2687;
t2612 = -t2697 + (-g(3) * t2681 + t2741) * t2692;
t2705 = t2612 * t2692 + t2613 * t2687;
t2631 = t2724 - t2656;
t2661 = t2674 * t2734;
t2632 = t2657 + t2661;
t2704 = t2631 * t2692 + t2632 * t2687;
t2678 = t2687 ^ 2;
t2643 = -t2678 * t2743 - t2660;
t2666 = t2692 * t2731;
t2655 = t2666 - t2735;
t2703 = t2643 * t2692 + t2655 * t2687;
t2654 = t2666 + t2735;
t2658 = -t2732 - t2660;
t2702 = t2654 * t2692 + t2658 * t2687;
t2665 = -qJDD(1) * t2688 - t2693 * t2694;
t2664 = qJDD(1) * t2693 - t2688 * t2694;
t2659 = (-t2678 - t2679) * t2743;
t2633 = -t2657 + t2661;
t2630 = t2724 + t2656;
t2622 = -t2654 * t2687 + t2658 * t2692;
t2618 = -t2643 * t2687 + t2655 * t2692;
t2609 = -t2753 - t2754;
t2608 = -t2631 * t2687 + t2632 * t2692;
t2598 = -t2681 * t2633 + t2683 * t2702;
t2597 = t2683 * t2633 + t2681 * t2702;
t2595 = -t2681 * t2630 + t2683 * t2703;
t2594 = t2683 * t2630 + t2681 * t2703;
t2591 = -t2681 * t2659 + t2683 * t2704;
t2590 = t2683 * t2659 + t2681 * t2704;
t2573 = -t2612 * t2687 + t2613 * t2692;
t2569 = -t2681 * t2635 + t2683 * t2705;
t2568 = t2683 * t2635 + t2681 * t2705;
t2558 = -t2586 * t2687 + t2587 * t2692;
t2554 = t2572 * t2686 + t2596 * t2691;
t2552 = t2571 * t2691 + t2588 * t2686;
t2550 = -t2574 * t2687 + t2575 * t2692;
t2543 = -t2681 * t2606 + t2683 * t2707;
t2542 = t2683 * t2606 + t2681 * t2707;
t2540 = -t2566 * t2687 + t2567 * t2692;
t2539 = -t2681 * t2604 + t2683 * t2708;
t2538 = t2683 * t2604 + t2681 * t2708;
t2536 = t2563 * t2686 + t2565 * t2691;
t2521 = -t2681 * t2609 + t2683 * t2709;
t2520 = t2683 * t2609 + t2681 * t2709;
t2503 = t2530 * t2691 + t2531 * t2686;
t2502 = -t2528 * t2687 + t2529 * t2692;
t2499 = -t2522 * t2687 + t2523 * t2692;
t2493 = t2518 * t2691 + t2519 * t2686;
t2488 = -t2516 * t2687 + t2517 * t2692;
t2487 = -t2681 * t2554 + t2683 * t2710;
t2486 = t2683 * t2554 + t2681 * t2710;
t2485 = -t2681 * t2552 + t2683 * t2711;
t2484 = t2683 * t2552 + t2681 * t2711;
t2483 = -t2514 * t2687 + t2515 * t2692;
t2480 = -t2681 * t2599 + t2683 * t2713;
t2479 = t2683 * t2599 + t2681 * t2713;
t2477 = t2509 * t2691 + t2510 * t2686;
t2474 = -t2681 * t2536 + t2683 * t2712;
t2473 = t2683 * t2536 + t2681 * t2712;
t2462 = t2500 * t2691 + t2501 * t2686;
t2453 = -t2481 * t2687 + t2482 * t2692;
t2452 = -t2475 * t2687 + t2476 * t2692;
t2450 = t2468 * t2691 + t2469 * t2686;
t2449 = -t2681 * t2503 + t2683 * t2714;
t2448 = t2683 * t2503 + t2681 * t2714;
t2446 = t2466 * t2691 + t2467 * t2686;
t2445 = -t2464 * t2687 + t2465 * t2692;
t2444 = -t2681 * t2493 + t2683 * t2715;
t2443 = t2683 * t2493 + t2681 * t2715;
t2441 = t2460 * t2691 + t2461 * t2686;
t2436 = -t2456 * t2687 + t2457 * t2692;
t2431 = -t2681 * t2477 + t2683 * t2716;
t2430 = t2683 * t2477 + t2681 * t2716;
t2427 = -t2681 * t2462 + t2683 * t2717;
t2426 = t2683 * t2462 + t2681 * t2717;
t2424 = t2439 * t2691 + t2440 * t2686;
t2419 = -t2434 * t2687 + t2435 * t2692;
t2418 = -t2432 * t2687 + t2433 * t2692;
t2415 = -t2428 * t2687 + t2429 * t2692;
t2414 = -t2681 * t2450 + t2683 * t2718;
t2413 = t2683 * t2450 + t2681 * t2718;
t2412 = -t2681 * t2446 + t2683 * t2719;
t2411 = t2683 * t2446 + t2681 * t2719;
t2410 = -t2681 * t2441 + t2683 * t2720;
t2409 = t2683 * t2441 + t2681 * t2720;
t2408 = -t2420 * t2687 + t2421 * t2692;
t2406 = t2416 * t2691 + t2417 * t2686;
t2405 = -t2681 * t2424 + t2683 * t2721;
t2404 = t2683 * t2424 + t2681 * t2721;
t2401 = -t2402 * t2687 + t2403 * t2692;
t2400 = -t2681 * t2406 + t2683 * t2722;
t2399 = t2683 * t2406 + t2681 * t2722;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2665, -t2664, 0, -t2667 * t2688 + t2668 * t2693, 0, 0, 0, 0, 0, 0, -t2598 * t2688 + t2622 * t2693, -t2595 * t2688 + t2618 * t2693, -t2591 * t2688 + t2608 * t2693, -t2569 * t2688 + t2573 * t2693, 0, 0, 0, 0, 0, 0, -t2539 * t2688 + t2550 * t2693, -t2543 * t2688 + t2558 * t2693, -t2521 * t2688 + t2540 * t2693, -t2480 * t2688 + t2483 * t2693, 0, 0, 0, 0, 0, 0, -t2485 * t2688 + t2499 * t2693, -t2487 * t2688 + t2502 * t2693, -t2474 * t2688 + t2488 * t2693, -t2431 * t2688 + t2445 * t2693, 0, 0, 0, 0, 0, 0, -t2444 * t2688 + t2452 * t2693, -t2449 * t2688 + t2453 * t2693, -t2427 * t2688 + t2436 * t2693, -t2405 * t2688 + t2408 * t2693, 0, 0, 0, 0, 0, 0, -t2412 * t2688 + t2418 * t2693, -t2414 * t2688 + t2419 * t2693, -t2410 * t2688 + t2415 * t2693, -t2400 * t2688 + t2401 * t2693; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2664, t2665, 0, t2667 * t2693 + t2668 * t2688, 0, 0, 0, 0, 0, 0, t2598 * t2693 + t2622 * t2688, t2595 * t2693 + t2618 * t2688, t2591 * t2693 + t2608 * t2688, t2569 * t2693 + t2573 * t2688, 0, 0, 0, 0, 0, 0, t2539 * t2693 + t2550 * t2688, t2543 * t2693 + t2558 * t2688, t2521 * t2693 + t2540 * t2688, t2480 * t2693 + t2483 * t2688, 0, 0, 0, 0, 0, 0, t2485 * t2693 + t2499 * t2688, t2487 * t2693 + t2502 * t2688, t2474 * t2693 + t2488 * t2688, t2431 * t2693 + t2445 * t2688, 0, 0, 0, 0, 0, 0, t2444 * t2693 + t2452 * t2688, t2449 * t2693 + t2453 * t2688, t2427 * t2693 + t2436 * t2688, t2405 * t2693 + t2408 * t2688, 0, 0, 0, 0, 0, 0, t2412 * t2693 + t2418 * t2688, t2414 * t2693 + t2419 * t2688, t2410 * t2693 + t2415 * t2688, t2400 * t2693 + t2401 * t2688; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2597, t2594, t2590, t2568, 0, 0, 0, 0, 0, 0, t2538, t2542, t2520, t2479, 0, 0, 0, 0, 0, 0, t2484, t2486, t2473, t2430, 0, 0, 0, 0, 0, 0, t2443, t2448, t2426, t2404, 0, 0, 0, 0, 0, 0, t2411, t2413, t2409, t2399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2694, -qJDD(1), 0, t2668, 0, 0, 0, 0, 0, 0, t2622, t2618, t2608, t2573, 0, 0, 0, 0, 0, 0, t2550, t2558, t2540, t2483, 0, 0, 0, 0, 0, 0, t2499, t2502, t2488, t2445, 0, 0, 0, 0, 0, 0, t2452, t2453, t2436, t2408, 0, 0, 0, 0, 0, 0, t2418, t2419, t2415, t2401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2694, 0, t2667, 0, 0, 0, 0, 0, 0, t2598, t2595, t2591, t2569, 0, 0, 0, 0, 0, 0, t2539, t2543, t2521, t2480, 0, 0, 0, 0, 0, 0, t2485, t2487, t2474, t2431, 0, 0, 0, 0, 0, 0, t2444, t2449, t2427, t2405, 0, 0, 0, 0, 0, 0, t2412, t2414, t2410, t2400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2597, t2594, t2590, t2568, 0, 0, 0, 0, 0, 0, t2538, t2542, t2520, t2479, 0, 0, 0, 0, 0, 0, t2484, t2486, t2473, t2430, 0, 0, 0, 0, 0, 0, t2443, t2448, t2426, t2404, 0, 0, 0, 0, 0, 0, t2411, t2413, t2409, t2399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2658, t2655, t2632, t2613, 0, 0, 0, 0, 0, 0, t2575, t2587, t2567, t2515, 0, 0, 0, 0, 0, 0, t2523, t2529, t2517, t2465, 0, 0, 0, 0, 0, 0, t2476, t2482, t2457, t2421, 0, 0, 0, 0, 0, 0, t2433, t2435, t2429, t2403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2654, t2643, t2631, t2612, 0, 0, 0, 0, 0, 0, t2574, t2586, t2566, t2514, 0, 0, 0, 0, 0, 0, t2522, t2528, t2516, t2464, 0, 0, 0, 0, 0, 0, t2475, t2481, t2456, t2420, 0, 0, 0, 0, 0, 0, t2432, t2434, t2428, t2402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2633, t2630, t2659, t2635, 0, 0, 0, 0, 0, 0, t2604, t2606, t2609, t2599, 0, 0, 0, 0, 0, 0, t2552, t2554, t2536, t2477, 0, 0, 0, 0, 0, 0, t2493, t2503, t2462, t2424, 0, 0, 0, 0, 0, 0, t2446, t2450, t2441, t2406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2614, t2616, t2605, t2547, 0, 0, 0, 0, 0, 0, t2553, t2555, t2537, t2478, 0, 0, 0, 0, 0, 0, t2494, t2504, t2463, t2425, 0, 0, 0, 0, 0, 0, t2447, t2451, t2442, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2615, t2624, t2607, t2546, 0, 0, 0, 0, 0, 0, -t2562, -t2564, -t2582, -t2534, 0, 0, 0, 0, 0, 0, -t2524, t2729, -t2548, -t2511, 0, 0, 0, 0, 0, 0, -t2491, -t2497, -t2471, -t2422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2604, t2606, t2609, t2599, 0, 0, 0, 0, 0, 0, t2552, t2554, t2536, t2477, 0, 0, 0, 0, 0, 0, t2493, t2503, t2462, t2424, 0, 0, 0, 0, 0, 0, t2446, t2450, t2441, t2406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2588, t2572, t2563, t2510, 0, 0, 0, 0, 0, 0, t2519, t2531, t2501, t2440, 0, 0, 0, 0, 0, 0, t2467, t2469, t2461, t2417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2571, t2596, t2565, t2509, 0, 0, 0, 0, 0, 0, t2518, t2530, t2500, t2439, 0, 0, 0, 0, 0, 0, t2466, t2468, t2460, t2416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2562, t2564, t2582, t2534, 0, 0, 0, 0, 0, 0, t2524, -t2729, t2548, t2511, 0, 0, 0, 0, 0, 0, t2491, t2497, t2471, t2422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2560, t2557, t2525, t2459, 0, 0, 0, 0, 0, 0, t2492, t2498, t2472, t2423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2556, t2570, t2527, t2458, 0, 0, 0, 0, 0, 0, -t2505, -t2507, -t2533, -t2454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2524, -t2729, t2548, t2511, 0, 0, 0, 0, 0, 0, t2491, t2497, t2471, t2422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2541, t2513, t2506, t2438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2512, t2545, t2508, t2437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2505, t2507, t2533, t2454;];
f_new_reg  = t1;
