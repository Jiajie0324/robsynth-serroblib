% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:34:50
% EndTime: 2019-03-09 13:35:25
% DurationCPUTime: 16.99s
% Computational Cost: add. (30737->663), mult. (89703->891), div. (0->0), fcn. (73160->12), ass. (0->295)
t286 = sin(pkin(6));
t293 = cos(qJ(2));
t383 = t286 * t293;
t405 = cos(pkin(12));
t326 = t405 * t383;
t263 = qJD(1) * t326;
t285 = sin(pkin(12));
t291 = sin(qJ(2));
t375 = qJD(1) * t286;
t353 = t291 * t375;
t235 = t285 * t353 - t263;
t231 = qJD(4) + t235;
t470 = qJD(5) + t231;
t287 = cos(pkin(6));
t425 = pkin(1) * t291;
t274 = t287 * t425;
t424 = pkin(8) + qJ(3);
t431 = t383 * t424 + t274;
t221 = t431 * qJD(1);
t206 = t285 * t221;
t275 = t287 * t293 * pkin(1);
t268 = qJD(1) * t275;
t348 = t424 * t291;
t329 = t286 * t348;
t220 = -qJD(1) * t329 + t268;
t162 = t220 * t405 - t206;
t310 = t285 * t293 + t291 * t405;
t239 = t310 * t375;
t334 = pkin(2) * t353;
t179 = pkin(3) * t239 + pkin(9) * t235 + t334;
t290 = sin(qJ(4));
t427 = cos(qJ(4));
t105 = t427 * t162 + t290 * t179;
t277 = pkin(2) * t285 + pkin(9);
t255 = (-pkin(10) - t277) * t290;
t392 = t235 * t290;
t468 = -pkin(10) * t392 + qJD(4) * t255 - t105;
t104 = -t290 * t162 + t427 * t179;
t354 = t427 * t277;
t256 = pkin(10) * t427 + t354;
t355 = t427 * t235;
t467 = t239 * pkin(4) + pkin(10) * t355 + qJD(4) * t256 + t104;
t289 = sin(qJ(5));
t426 = cos(qJ(5));
t257 = t289 * t290 - t426 * t427;
t380 = t470 * t257;
t292 = cos(qJ(6));
t368 = qJD(6) * t292;
t374 = qJD(1) * t287;
t272 = qJD(2) + t374;
t196 = -t290 * t239 + t272 * t427;
t312 = -t239 * t427 - t290 * t272;
t129 = -t426 * t196 - t289 * t312;
t455 = t129 * t292;
t466 = t368 + t455;
t372 = qJD(4) * t290;
t465 = t372 + t392;
t258 = t289 * t427 + t290 * t426;
t379 = t470 * t258;
t349 = qJD(5) * t426;
t371 = qJD(5) * t289;
t408 = t255 * t349 - t256 * t371 - t467 * t289 + t468 * t426;
t344 = t405 * t221;
t161 = t220 * t285 + t344;
t325 = t465 * pkin(4) - t161;
t288 = sin(qJ(6));
t340 = t239 * t288 + t380 * t292;
t299 = t292 * t470;
t311 = t289 * t196 - t312 * t426;
t111 = t288 * t311 - t299;
t127 = qJD(6) + t129;
t456 = t127 * t288;
t245 = t310 * t286;
t238 = qJD(2) * t245;
t229 = qJD(1) * t238;
t113 = t288 * t470 + t292 * t311;
t370 = qJD(6) * t113;
t373 = qJD(2) * t286;
t352 = t291 * t373;
t328 = qJD(1) * t352;
t303 = qJD(2) * t263 - t285 * t328;
t350 = qJD(4) * t427;
t148 = t239 * t372 - t272 * t350 - t427 * t303;
t149 = -qJD(4) * t312 + t290 * t303;
t75 = t426 * t148 + t289 * t149 - t196 * t349 - t312 * t371;
t48 = -t292 * t229 - t288 * t75 + t370;
t464 = t111 * t456 - t48 * t292;
t369 = qJD(6) * t288;
t47 = -qJD(6) * t299 - t288 * t229 + t292 * t75 + t311 * t369;
t463 = t466 * t113 - t47 * t288;
t339 = t289 * t148 - t426 * t149;
t76 = qJD(5) * t311 - t339;
t409 = t127 * t368 + t288 * t76;
t462 = -t113 * t311 + t127 * t455 + t409;
t74 = t292 * t76;
t461 = t111 * t311 - t127 * t456 + t74;
t460 = -t466 * t111 - t113 * t456 - t288 * t48 - t47 * t292;
t200 = t272 * pkin(2) + t220;
t145 = t285 * t200 + t344;
t137 = pkin(9) * t272 + t145;
t259 = (-pkin(2) * t293 - pkin(1)) * t286;
t376 = qJD(1) * t259;
t252 = qJD(3) + t376;
t157 = t235 * pkin(3) - t239 * pkin(9) + t252;
t100 = t137 * t427 + t290 * t157;
t87 = t196 * pkin(10) + t100;
t412 = t289 * t87;
t99 = -t137 * t290 + t427 * t157;
t86 = pkin(10) * t312 + t99;
t78 = pkin(4) * t231 + t86;
t34 = t426 * t78 - t412;
t30 = -pkin(5) * t470 - t34;
t459 = t129 * t30;
t458 = -pkin(11) * t239 + t408;
t457 = -t379 * pkin(5) - pkin(11) * t380 - t325;
t400 = t129 * t311;
t306 = t258 * t369 + t340;
t305 = t350 + t355;
t454 = -t129 ^ 2 + t311 ^ 2;
t93 = pkin(5) * t311 + pkin(11) * t129;
t453 = t129 * t470 - t75;
t144 = t200 * t405 - t206;
t136 = -t272 * pkin(3) - t144;
t110 = -t196 * pkin(4) + t136;
t266 = qJD(2) * t268;
t300 = (-qJD(2) * t348 + qJD(3) * t293) * t286;
t188 = qJD(1) * t300 + t266;
t384 = t286 * t291;
t202 = -qJD(2) * t431 - qJD(3) * t384;
t189 = t202 * qJD(1);
t120 = t188 * t405 + t285 * t189;
t265 = pkin(2) * t328;
t158 = t229 * pkin(3) - pkin(9) * t303 + t265;
t64 = -qJD(4) * t100 - t290 * t120 + t427 * t158;
t36 = t229 * pkin(4) + t148 * pkin(10) + t64;
t63 = t427 * t120 - t137 * t372 + t157 * t350 + t290 * t158;
t42 = -pkin(10) * t149 + t63;
t343 = -t289 * t36 - t78 * t349 + t87 * t371 - t426 * t42;
t452 = t110 * t129 + t343;
t451 = t258 * t229 - t380 * t470;
t394 = t231 * t290;
t450 = t427 * t148 - t312 * t394;
t282 = t286 ^ 2;
t365 = qJD(1) * qJD(2);
t448 = -0.2e1 * t282 * t365;
t358 = t426 * t87;
t35 = t289 * t78 + t358;
t31 = pkin(11) * t470 + t35;
t65 = t129 * pkin(5) - pkin(11) * t311 + t110;
t16 = t288 * t65 + t292 * t31;
t119 = t188 * t285 - t405 * t189;
t95 = pkin(4) * t149 + t119;
t18 = pkin(5) * t76 + pkin(11) * t75 + t95;
t7 = pkin(11) * t229 - t343;
t3 = -qJD(6) * t16 + t292 * t18 - t288 * t7;
t446 = -t16 * t127 - t3;
t199 = t289 * t255 + t256 * t426;
t406 = qJD(5) * t199 + t468 * t289 + t467 * t426;
t445 = -t231 * t99 + t63;
t444 = t127 * t311;
t219 = t287 * pkin(2) + t275 - t329;
t378 = pkin(8) * t383 + t274;
t233 = qJ(3) * t383 + t378;
t174 = t285 * t219 + t405 * t233;
t160 = pkin(9) * t287 + t174;
t244 = t285 * t384 - t326;
t182 = t244 * pkin(3) - t245 * pkin(9) + t259;
t107 = t427 * t160 + t290 * t182;
t318 = t288 * t31 - t292 * t65;
t443 = t16 * t292 + t288 * t318;
t345 = t289 * t42 - t426 * t36;
t10 = -qJD(5) * t35 - t345;
t8 = -t229 * pkin(5) - t10;
t440 = -t8 * t292 + t30 * t369 + t311 * t318;
t439 = t16 * t311 + t8 * t288 + t30 * t368;
t438 = -t110 * t311 - t345;
t437 = -t111 * t379 - t257 * t48;
t341 = -t292 * t239 + t288 * t380;
t307 = t258 * t368 - t341;
t387 = t258 * t288;
t436 = -t113 * t307 + t47 * t387;
t386 = t258 * t292;
t434 = -t127 * t306 + t76 * t386;
t433 = -t290 * t229 - t231 * t305;
t432 = t231 * t311 + t339;
t430 = t257 * t75 - t311 * t379;
t106 = -t160 * t290 + t427 * t182;
t212 = t245 * t427 + t287 * t290;
t91 = pkin(4) * t244 - pkin(10) * t212 + t106;
t313 = -t245 * t290 + t287 * t427;
t97 = pkin(10) * t313 + t107;
t421 = t289 * t91 + t426 * t97;
t237 = -qJD(2) * t326 + t285 * t352;
t172 = qJD(4) * t313 - t237 * t427;
t269 = qJD(2) * t275;
t201 = t269 + t300;
t139 = t201 * t405 + t285 * t202;
t333 = pkin(2) * t352;
t180 = pkin(3) * t238 + pkin(9) * t237 + t333;
t67 = -qJD(4) * t107 - t290 * t139 + t427 * t180;
t54 = t238 * pkin(4) - t172 * pkin(10) + t67;
t171 = qJD(4) * t212 - t237 * t290;
t66 = t427 * t139 - t160 * t372 + t290 * t180 + t182 * t350;
t60 = -pkin(10) * t171 + t66;
t14 = -qJD(5) * t421 - t289 * t60 + t426 * t54;
t2 = -qJD(6) * t318 + t288 * t18 + t292 * t7;
t429 = t239 ^ 2;
t1 = t2 * t292;
t278 = -pkin(2) * t405 - pkin(3);
t264 = -pkin(4) * t427 + t278;
t193 = t257 * pkin(5) - t258 * pkin(11) + t264;
t126 = t193 * t288 + t199 * t292;
t423 = qJD(6) * t126 + t288 * t458 + t292 * t457;
t125 = t193 * t292 - t199 * t288;
t422 = -qJD(6) * t125 + t288 * t457 - t292 * t458;
t420 = t318 * t127;
t153 = t212 * t289 - t313 * t426;
t418 = t153 * t76;
t411 = t76 * t257;
t407 = t239 * pkin(5) + t406;
t404 = t113 * t111;
t399 = t311 * t239;
t398 = t196 * t239;
t397 = t312 * t196;
t396 = t312 * t239;
t184 = t229 * t244;
t393 = t235 * t272;
t391 = t239 * t129;
t390 = t239 * t235;
t389 = t239 * t272;
t385 = t282 * qJD(1) ^ 2;
t377 = t291 ^ 2 - t293 ^ 2;
t367 = qJD(2) - t272;
t360 = t63 * t427;
t359 = t427 * t99;
t357 = t293 * t385;
t346 = t293 * t365;
t138 = t201 * t285 - t405 * t202;
t335 = t272 + t374;
t332 = pkin(4) * t349;
t331 = t291 * t357;
t39 = t289 * t86 + t358;
t327 = pkin(4) * t371 - t39;
t324 = t113 * t379 - t47 * t257;
t323 = t129 * t380 - t258 * t76;
t322 = pkin(1) * t448;
t280 = pkin(4) * t289 + pkin(11);
t319 = -t280 * t76 + t459;
t50 = pkin(11) * t244 + t421;
t173 = t219 * t405 - t285 * t233;
t159 = -t287 * pkin(3) - t173;
t115 = -pkin(4) * t313 + t159;
t154 = t212 * t426 + t289 * t313;
t71 = t153 * pkin(5) - t154 * pkin(11) + t115;
t20 = t288 * t71 + t292 * t50;
t19 = -t288 * t50 + t292 * t71;
t117 = t154 * t292 + t244 * t288;
t317 = t282 * t291 * t346;
t316 = t427 * t229 - t465 * t231;
t103 = pkin(4) * t171 + t138;
t55 = -t289 * t97 + t426 * t91;
t13 = t289 * t54 + t91 * t349 - t371 * t97 + t426 * t60;
t241 = -pkin(8) * t328 + t266;
t308 = -t290 * t149 + t196 * t305;
t249 = t378 * qJD(2);
t302 = t111 * t306 - t48 * t386;
t297 = t1 - t3 * t288 + (-t16 * t288 + t292 * t318) * qJD(6);
t296 = -t257 * t229 - t379 * t470;
t295 = -t127 * t307 - t387 * t76;
t281 = -pkin(4) * t426 - pkin(5);
t253 = -pkin(8) * t384 + t275;
t248 = -pkin(8) * t352 + t269;
t247 = t378 * qJD(1);
t246 = -pkin(8) * t353 + t268;
t242 = qJD(1) * t249;
t232 = t235 ^ 2;
t198 = -t255 * t426 + t256 * t289;
t116 = t154 * t288 - t244 * t292;
t85 = qJD(5) * t154 + t171 * t426 + t289 * t172;
t84 = t289 * t171 - t172 * t426 + t212 * t371 - t313 * t349;
t80 = -pkin(4) * t312 + t93;
t62 = qJD(6) * t117 - t238 * t292 - t288 * t84;
t61 = t154 * t369 - t238 * t288 - t244 * t368 + t292 * t84;
t49 = -t244 * pkin(5) - t55;
t40 = t426 * t86 - t412;
t27 = pkin(5) * t85 + pkin(11) * t84 + t103;
t24 = t288 * t93 + t292 * t34;
t23 = -t288 * t34 + t292 * t93;
t22 = t288 * t80 + t292 * t40;
t21 = -t288 * t40 + t292 * t80;
t12 = -t238 * pkin(5) - t14;
t11 = pkin(11) * t238 + t13;
t5 = -qJD(6) * t20 - t288 * t11 + t292 * t27;
t4 = qJD(6) * t19 + t292 * t11 + t288 * t27;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t317, t377 * t448, t335 * t293 * t373, -0.2e1 * t317, -t335 * t352, 0, -t242 * t287 - t249 * t272 + t291 * t322, -t241 * t287 - t248 * t272 + t293 * t322 (t241 * t293 + t242 * t291 + (-t246 * t293 - t247 * t291) * qJD(2) + (t248 * t293 + t249 * t291 + (-t253 * t293 - t291 * t378) * qJD(2)) * qJD(1)) * t286, t241 * t378 - t242 * t253 - t246 * t249 + t247 * t248, -t239 * t237 + t245 * t303, -t245 * t229 + t237 * t235 - t239 * t238 - t244 * t303, -t237 * t272 + t287 * t303, t235 * t238 + t184, -t229 * t287 - t238 * t272, 0, -t119 * t287 - t138 * t272 + t259 * t229 + t252 * t238 + (qJD(1) * t244 + t235) * t333, -t139 * t272 - t120 * t287 + t259 * t303 - t252 * t237 + (qJD(1) * t245 + t239) * t333, t119 * t245 - t120 * t244 + t138 * t239 - t139 * t235 + t144 * t237 - t145 * t238 - t173 * t303 - t174 * t229, -t119 * t173 + t120 * t174 - t144 * t138 + t145 * t139 + (t252 + t376) * t333, -t148 * t212 - t172 * t312, -t148 * t313 - t149 * t212 + t171 * t312 + t172 * t196, -t148 * t244 + t172 * t231 + t212 * t229 - t238 * t312, -t149 * t313 - t171 * t196, -t149 * t244 - t171 * t231 + t196 * t238 + t229 * t313, t231 * t238 + t184, t106 * t229 - t119 * t313 + t136 * t171 - t138 * t196 + t149 * t159 + t231 * t67 + t238 * t99 + t244 * t64, -t100 * t238 - t107 * t229 + t119 * t212 + t136 * t172 - t138 * t312 - t148 * t159 - t231 * t66 - t244 * t63, -t100 * t171 + t106 * t148 - t107 * t149 - t172 * t99 + t196 * t66 - t212 * t64 + t312 * t67 + t313 * t63, t100 * t66 + t106 * t64 + t107 * t63 + t119 * t159 + t136 * t138 + t67 * t99, -t154 * t75 - t311 * t84, t129 * t84 + t153 * t75 - t154 * t76 - t311 * t85, t154 * t229 + t238 * t311 - t75 * t244 - t470 * t84, t129 * t85 + t418, -t129 * t238 - t153 * t229 - t76 * t244 - t470 * t85, t238 * t470 + t184, t10 * t244 + t103 * t129 + t110 * t85 + t115 * t76 + t14 * t470 + t95 * t153 + t55 * t229 + t34 * t238, t103 * t311 - t110 * t84 - t115 * t75 - t13 * t470 + t95 * t154 - t229 * t421 - t35 * t238 + t244 * t343, -t10 * t154 - t129 * t13 - t14 * t311 + t153 * t343 + t34 * t84 - t35 * t85 - t421 * t76 + t55 * t75, t10 * t55 + t103 * t110 + t115 * t95 + t13 * t35 + t14 * t34 - t343 * t421, -t113 * t61 - t117 * t47, t111 * t61 - t113 * t62 + t116 * t47 - t117 * t48, t113 * t85 + t117 * t76 - t127 * t61 - t153 * t47, t111 * t62 + t116 * t48, -t111 * t85 - t116 * t76 - t127 * t62 - t153 * t48, t127 * t85 + t418, t111 * t12 + t116 * t8 + t127 * t5 + t153 * t3 + t19 * t76 + t30 * t62 - t318 * t85 + t48 * t49, t113 * t12 + t117 * t8 - t127 * t4 - t153 * t2 - t16 * t85 - t20 * t76 - t30 * t61 - t47 * t49, -t111 * t4 - t113 * t5 - t116 * t2 - t117 * t3 - t16 * t62 + t19 * t47 - t20 * t48 - t318 * t61, t12 * t30 + t16 * t4 + t19 * t3 + t2 * t20 - t318 * t5 + t49 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t331, t377 * t385, t367 * t293 * t375, t331, -t367 * t353, 0, -t286 * pkin(8) * t346 + t247 * t272 + (-t287 * t365 + t385) * t425, pkin(1) * t357 + t246 * t272 - t241, 0, 0, t390, -t232 + t429, t303 + t393, -t390, -qJD(2) * t239 + t389, 0, t161 * t272 - t235 * t334 - t239 * t252 - t119, t162 * t272 + t252 * t235 - t239 * t334 - t120 (t145 - t161) * t239 + (t162 - t144) * t235 + (-t285 * t229 - t303 * t405) * pkin(2), t144 * t161 - t145 * t162 + (-t119 * t405 + t120 * t285 - t252 * t353) * pkin(2), -t148 * t290 - t305 * t312, t308 - t450, t396 - t433, -t149 * t427 - t196 * t394, t316 - t398, -t231 * t239, -t119 * t427 + t278 * t149 + t161 * t196 - t99 * t239 + (-t277 * t350 - t104) * t231 + (t136 * t231 - t229 * t277) * t290, t136 * t355 - t229 * t354 + t100 * t239 + t105 * t231 + t119 * t290 - t278 * t148 + t161 * t312 + (t136 * t427 + t277 * t394) * qJD(4), -t149 * t354 - t99 * t355 + t360 - t104 * t312 - t105 * t196 + (-t312 * t354 - t359) * qJD(4) + (-t100 * t235 - t148 * t277 - t64 + (-t196 * t277 - t100) * qJD(4)) * t290, -t100 * t105 - t99 * t104 + t119 * t278 - t136 * t161 + (t360 - t64 * t290 + (-t100 * t290 - t359) * qJD(4)) * t277, -t75 * t258 - t311 * t380, t323 + t430, -t399 + t451, t129 * t379 + t411, t296 + t391, -t470 * t239, t110 * t379 + t129 * t325 - t198 * t229 - t34 * t239 + t95 * t257 + t264 * t76 - t406 * t470, -t110 * t380 - t199 * t229 + t35 * t239 + t95 * t258 - t264 * t75 + t311 * t325 - t408 * t470, -t10 * t258 - t129 * t408 - t198 * t75 - t199 * t76 + t257 * t343 + t311 * t406 + t34 * t380 - t35 * t379, -t10 * t198 + t110 * t325 - t199 * t343 + t95 * t264 - t34 * t406 + t35 * t408, -t113 * t306 - t386 * t47, t302 + t436, t324 + t434, t111 * t307 + t387 * t48, t295 + t437, t127 * t379 + t411, t111 * t407 + t125 * t76 - t127 * t423 + t198 * t48 + t3 * t257 + t30 * t307 - t318 * t379 + t387 * t8, t113 * t407 - t126 * t76 + t127 * t422 - t16 * t379 - t198 * t47 - t2 * t257 - t30 * t306 + t386 * t8, t125 * t47 - t126 * t48 + t341 * t16 - t340 * t318 + t423 * t113 + t422 * t111 + (-qJD(6) * t443 - t2 * t288 - t292 * t3) * t258, t3 * t125 + t2 * t126 - t16 * t422 + t8 * t198 + t30 * t407 + t318 * t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229 + t389, t303 - t393, -t232 - t429, t144 * t239 + t145 * t235 + t265, 0, 0, 0, 0, 0, 0, t316 + t398, t396 + t433, t308 + t450, t305 * t100 - t136 * t239 + t290 * t445 + t64 * t427, 0, 0, 0, 0, 0, 0, t296 - t391, -t399 - t451, t323 - t430, -t10 * t257 - t110 * t239 - t258 * t343 - t34 * t379 - t35 * t380, 0, 0, 0, 0, 0, 0, t295 - t437, t324 - t434, t302 - t436, -t16 * t340 + t8 * t257 + t258 * t297 + t30 * t379 - t318 * t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, -t196 ^ 2 + t312 ^ 2, -t196 * t231 - t148, -t397, -t231 * t312 - t149, t229, t100 * t231 + t136 * t312 + t64, -t136 * t196 - t445, 0, 0, t400, t454, t453, -t400, t432, t229, t39 * t231 + (t39 - t35) * qJD(5) + (t129 * t312 + t229 * t426 - t371 * t470) * pkin(4) + t438, t40 * t470 + (-t289 * t229 + t311 * t312 - t349 * t470) * pkin(4) + t452, t35 * t311 + t40 * t129 - t34 * t129 - t39 * t311 + (t426 * t75 - t289 * t76 + (-t129 * t426 + t289 * t311) * qJD(5)) * pkin(4), t34 * t39 - t35 * t40 + (t426 * t10 + t110 * t312 - t289 * t343 + (-t289 * t34 + t35 * t426) * qJD(5)) * pkin(4), t463, t460, t462, t464, t461, -t444, t281 * t48 + t319 * t288 + t327 * t111 + (-t280 * t368 - t288 * t332 - t21) * t127 + t440, -t281 * t47 + t319 * t292 + t327 * t113 + (t280 * t369 - t292 * t332 + t22) * t127 + t439, t22 * t111 + t21 * t113 + t1 + (-t111 * t332 + t129 * t318 - t280 * t48 + (t113 * t280 + t318) * qJD(6)) * t292 + (t113 * t332 - t129 * t16 - t280 * t47 - t3 + (t111 * t280 - t16) * qJD(6)) * t288, t318 * t21 - t16 * t22 + t8 * t281 - t30 * t39 + (t289 * t30 + t426 * t443) * qJD(5) * pkin(4) + t297 * t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400, t454, t453, -t400, t432, t229, t231 * t35 + t438, t34 * t470 + t452, 0, 0, t463, t460, t462, t464, t461, -t444, -pkin(5) * t48 - pkin(11) * t409 - t35 * t111 - t23 * t127 + t288 * t459 + t440, t30 * t455 + pkin(5) * t47 - t35 * t113 + t24 * t127 + (t127 * t369 - t74) * pkin(11) + t439, t24 * t111 + t23 * t113 + t1 + (t420 + (-t48 + t370) * pkin(11)) * t292 + ((qJD(6) * t111 - t47) * pkin(11) + t446) * t288, -t8 * pkin(5) + pkin(11) * t297 - t16 * t24 + t23 * t318 - t30 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, -t111 ^ 2 + t113 ^ 2, t111 * t127 - t47, -t404, t113 * t127 - t48, t76, -t30 * t113 - t446, t30 * t111 - t2 - t420, 0, 0;];
tauc_reg  = t6;
