% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 20:52
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR4_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR4_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR4_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR4_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR4_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR4_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 20:48:10
% EndTime: 2019-05-06 20:48:44
% DurationCPUTime: 19.47s
% Computational Cost: add. (170965->767), mult. (447415->1147), div. (0->0), fcn. (364141->14), ass. (0->462)
t400 = sin(pkin(12));
t402 = cos(pkin(12));
t411 = cos(qJ(2));
t401 = sin(pkin(6));
t479 = qJD(1) * t401;
t456 = t411 * t479;
t407 = sin(qJ(2));
t457 = t407 * t479;
t368 = t400 * t457 - t402 * t456;
t370 = t400 * t456 + t402 * t457;
t340 = t370 * t368;
t403 = cos(pkin(6));
t446 = qJDD(1) * t403 + qJDD(2);
t528 = -t340 + t446;
t542 = t400 * t528;
t541 = t402 * t528;
t404 = sin(qJ(6));
t394 = qJD(1) * t403 + qJD(2);
t406 = sin(qJ(4));
t410 = cos(qJ(4));
t348 = -t406 * t370 + t394 * t410;
t349 = t370 * t410 + t394 * t406;
t405 = sin(qJ(5));
t409 = cos(qJ(5));
t315 = t348 * t405 + t349 * t409;
t455 = qJD(2) * t479;
t473 = qJDD(1) * t401;
t376 = t407 * t473 + t411 * t455;
t377 = -t407 * t455 + t411 * t473;
t342 = t402 * t376 + t400 * t377;
t427 = -t410 * t342 - t406 * t446;
t306 = t348 * qJD(4) - t427;
t450 = t342 * t406 - t410 * t446;
t434 = -qJD(4) * t349 - t450;
t452 = t405 * t306 - t409 * t434;
t237 = -t315 * qJD(5) - t452;
t236 = qJDD(6) - t237;
t408 = cos(qJ(6));
t364 = qJD(4) + t368;
t429 = qJD(5) + t364;
t291 = t315 * t404 - t408 * t429;
t293 = t408 * t315 + t404 * t429;
t246 = t293 * t291;
t531 = t236 - t246;
t540 = t404 * t531;
t313 = -t409 * t348 + t349 * t405;
t270 = t315 * t313;
t449 = t376 * t400 - t402 * t377;
t443 = qJDD(4) + t449;
t338 = qJDD(5) + t443;
t530 = -t270 + t338;
t539 = t405 * t530;
t317 = t348 * t349;
t529 = t317 + t443;
t538 = t406 * t529;
t537 = t408 * t531;
t536 = t409 * t530;
t535 = t410 * t529;
t238 = -t313 * qJD(5) + t409 * t306 + t405 * t434;
t299 = t429 * t313;
t534 = -t299 + t238;
t492 = t370 * t394;
t533 = t449 + t492;
t428 = t429 ^ 2;
t337 = pkin(3) * t368 - pkin(9) * t370;
t380 = t394 ^ 2;
t412 = qJD(1) ^ 2;
t521 = sin(qJ(1));
t522 = cos(qJ(1));
t432 = g(1) * t522 + g(2) * t521;
t418 = -t412 * pkin(1) + pkin(8) * t473 - t432;
t444 = t521 * g(1) - g(2) * t522;
t431 = qJDD(1) * pkin(1) + t444;
t487 = t401 * t412;
t425 = pkin(8) * t487 + t431;
t419 = t403 * t425;
t488 = t401 * t407;
t330 = -g(3) * t488 + t407 * t419 + t411 * t418;
t430 = pkin(2) * t394 - qJ(3) * t457;
t399 = t411 ^ 2;
t397 = t401 ^ 2;
t489 = t397 * t412;
t463 = t399 * t489;
t296 = -pkin(2) * t463 + t377 * qJ(3) - t394 * t430 + t330;
t416 = t407 * t418;
t462 = t407 * t489;
t480 = qJD(1) * t394;
t486 = t403 * t412;
t414 = -t416 - t376 * qJ(3) + t446 * pkin(2) + (t403 * t431 + pkin(2) * t462 + (pkin(8) * t486 + qJ(3) * t480 - g(3)) * t401) * t411;
t453 = t400 * t296 - t402 * t414;
t524 = 2 * qJD(3);
t226 = -t446 * pkin(3) - t380 * pkin(9) + (t524 + t337) * t370 + t453;
t325 = pkin(4) * t364 - pkin(10) * t349;
t346 = t348 ^ 2;
t187 = -t434 * pkin(4) - t346 * pkin(10) + t349 * t325 + t226;
t426 = t429 * t315;
t117 = -t534 * pkin(11) + (-t237 + t426) * pkin(5) + t187;
t264 = pkin(5) * t313 - pkin(11) * t315;
t357 = t403 * g(3) + t401 * t425;
t308 = t377 * pkin(2) + qJ(3) * t463 - t430 * t457 - qJDD(3) + t357;
t355 = t394 * t368;
t527 = -t355 + t342;
t525 = -pkin(9) * t527 - t308;
t415 = pkin(3) * t533 + t525;
t242 = -0.2e1 * qJD(3) * t368 + t402 * t296 + t400 * t414;
t420 = pkin(9) * t446 - t368 * t337 + t242;
t417 = -pkin(3) * t380 + t420;
t186 = t406 * t415 + t410 * t417;
t147 = -t346 * pkin(4) + pkin(10) * t434 - t364 * t325 + t186;
t185 = t406 * t417 - t410 * t415;
t328 = t364 * t348;
t275 = -t328 + t306;
t413 = pkin(4) * t529 - pkin(10) * t275 - t185;
t93 = t409 * t147 + t405 * t413;
t84 = -pkin(5) * t428 + t338 * pkin(11) - t313 * t264 + t93;
t55 = -t408 * t117 + t404 * t84;
t56 = t117 * t404 + t408 * t84;
t37 = t404 * t55 + t408 * t56;
t532 = t397 * (t480 - t486);
t329 = t416 + (t401 * g(3) - t419) * t411;
t526 = t407 * t329 + t411 * t330;
t310 = qJD(6) + t313;
t454 = t238 * t404 - t408 * t338;
t178 = (qJD(6) - t310) * t293 + t454;
t271 = (qJD(4) - t364) * t349 + t450;
t289 = t291 ^ 2;
t290 = t293 ^ 2;
t309 = t310 ^ 2;
t311 = t313 ^ 2;
t312 = t315 ^ 2;
t347 = t349 ^ 2;
t363 = t364 ^ 2;
t366 = t368 ^ 2;
t367 = t370 ^ 2;
t92 = t147 * t405 - t409 * t413;
t57 = t405 * t93 - t409 * t92;
t523 = pkin(4) * t57;
t241 = t370 * t524 + t453;
t193 = -t241 * t402 + t242 * t400;
t520 = pkin(2) * t193;
t323 = t355 + t342;
t435 = -t449 + t492;
t277 = -t323 * t402 + t400 * t435;
t519 = pkin(2) * t277;
t518 = pkin(3) * t400;
t212 = -t315 * t364 + t452;
t215 = t299 + t238;
t157 = -t212 * t405 - t215 * t409;
t517 = pkin(4) * t157;
t516 = pkin(5) * t405;
t515 = pkin(8) * t401;
t83 = -t338 * pkin(5) - pkin(11) * t428 + t264 * t315 + t92;
t514 = -pkin(5) * t83 + pkin(11) * t37;
t80 = t404 * t83;
t513 = t406 * t57;
t81 = t408 * t83;
t512 = t410 * t57;
t511 = t187 * t405;
t510 = t187 * t409;
t191 = t236 + t246;
t509 = t191 * t404;
t508 = t191 * t408;
t507 = t193 * t407;
t506 = t226 * t406;
t505 = t226 * t410;
t254 = t270 + t338;
t504 = t254 * t405;
t503 = t254 * t409;
t283 = -t317 + t443;
t502 = t283 * t406;
t501 = t283 * t410;
t500 = t308 * t400;
t499 = t308 * t402;
t498 = t310 * t404;
t497 = t310 * t408;
t333 = t340 + t446;
t496 = t333 * t400;
t495 = t333 * t402;
t494 = t364 * t406;
t493 = t364 * t410;
t491 = t394 * t400;
t490 = t394 * t402;
t388 = t411 * t462;
t374 = t388 + t446;
t484 = t407 * t374;
t375 = -t388 + t446;
t482 = t411 * t375;
t477 = -qJD(4) - t364;
t474 = qJD(6) + t310;
t239 = -t290 - t309;
t154 = -t239 * t404 - t508;
t441 = -t238 * t408 - t338 * t404;
t183 = t291 * t474 + t441;
t472 = pkin(5) * t183 + pkin(11) * t154 + t80;
t235 = -t309 - t289;
t142 = t235 * t408 - t540;
t179 = -t293 * t474 - t454;
t471 = pkin(5) * t179 + pkin(11) * t142 - t81;
t470 = t405 * t246;
t469 = t409 * t246;
t468 = t400 * t270;
t467 = t402 * t270;
t466 = t400 * t317;
t465 = t402 * t317;
t398 = t407 ^ 2;
t464 = t398 * t489;
t461 = t403 * t340;
t382 = t394 * t456;
t460 = t382 + t376;
t459 = -pkin(3) * t402 - pkin(2);
t458 = -pkin(5) * t409 - pkin(4);
t58 = t405 * t92 + t409 * t93;
t127 = t185 * t406 + t410 * t186;
t194 = t241 * t400 + t402 * t242;
t196 = -qJD(6) * t291 - t441;
t258 = t310 * t291;
t182 = t196 + t258;
t123 = -t178 * t408 + t182 * t404;
t225 = t289 + t290;
t448 = pkin(5) * t225 + pkin(11) * t123 + t37;
t26 = t37 * t405 - t409 * t83;
t447 = pkin(4) * t26 + t514;
t279 = -t312 - t428;
t221 = t279 * t409 - t504;
t445 = pkin(4) * t221 - t93;
t36 = t404 * t56 - t408 * t55;
t126 = -t185 * t410 + t186 * t406;
t105 = t142 * t405 + t179 * t409;
t440 = pkin(4) * t105 + t471;
t107 = t154 * t405 + t183 * t409;
t439 = pkin(4) * t107 + t472;
t263 = -t428 - t311;
t201 = t263 * t405 + t536;
t437 = pkin(4) * t201 - t92;
t94 = t123 * t405 + t225 * t409;
t436 = pkin(4) * t94 + t448;
t433 = qJD(6) * t293 + t454;
t424 = t405 * t299;
t423 = t405 * t426;
t422 = t409 * t299;
t421 = t409 * t426;
t383 = t403 * t446;
t381 = t394 * t457;
t379 = (t398 - t399) * t489;
t378 = -t463 - t380;
t365 = -t380 - t464;
t354 = -t367 + t380;
t353 = t366 - t380;
t352 = t377 - t381;
t351 = t377 + t381;
t350 = -t382 + t376;
t344 = -t367 - t380;
t339 = t367 - t366;
t331 = -t380 - t366;
t327 = -t347 + t363;
t326 = t346 - t363;
t324 = -t366 - t367;
t316 = t347 - t346;
t307 = -t347 - t363;
t304 = -t363 - t346;
t303 = -t344 * t400 - t495;
t302 = t344 * t402 - t496;
t298 = -t312 + t428;
t297 = t311 - t428;
t295 = t346 + t347;
t286 = t331 * t402 - t542;
t285 = t331 * t400 + t541;
t281 = (t348 * t410 + t349 * t406) * t364;
t280 = (t348 * t406 - t349 * t410) * t364;
t278 = t323 * t400 + t402 * t435;
t276 = t348 * t477 + t427;
t274 = t328 + t306;
t272 = t349 * t477 - t450;
t269 = t312 - t311;
t268 = t306 * t410 - t349 * t494;
t267 = t306 * t406 + t349 * t493;
t266 = -t348 * t493 - t406 * t434;
t265 = -t348 * t494 + t410 * t434;
t262 = t326 * t410 - t502;
t261 = -t327 * t406 + t535;
t260 = t326 * t406 + t501;
t259 = t327 * t410 + t538;
t257 = -t290 + t309;
t256 = t289 - t309;
t252 = -t307 * t406 - t501;
t251 = t307 * t410 - t502;
t250 = -t422 + t423;
t249 = -t424 - t421;
t248 = t304 * t410 - t538;
t247 = t304 * t406 + t535;
t245 = t290 - t289;
t243 = -t311 - t312;
t234 = -t271 * t410 + t275 * t406;
t233 = t272 * t410 - t274 * t406;
t232 = -t271 * t406 - t275 * t410;
t231 = t272 * t406 + t274 * t410;
t230 = t297 * t409 - t504;
t229 = -t298 * t405 + t536;
t228 = t297 * t405 + t503;
t227 = t298 * t409 + t539;
t222 = -t279 * t405 - t503;
t220 = pkin(2) * t302 - t242;
t219 = pkin(2) * t285 - t241;
t218 = t252 * t402 - t276 * t400;
t217 = t252 * t400 + t276 * t402;
t211 = (0.2e1 * qJD(5) + t364) * t315 + t452;
t210 = t248 * t402 - t272 * t400;
t209 = t248 * t400 + t272 * t402;
t208 = t409 * t238 - t423;
t207 = t405 * t238 + t421;
t206 = -t405 * t237 + t422;
t205 = (-t291 * t408 + t293 * t404) * t310;
t204 = t409 * t237 + t424;
t203 = (-t291 * t404 - t293 * t408) * t310;
t202 = t263 * t409 - t539;
t200 = t234 * t402 - t295 * t400;
t199 = t234 * t400 + t295 * t402;
t198 = -t249 * t406 + t250 * t410;
t197 = t249 * t410 + t250 * t406;
t189 = -pkin(9) * t251 + t505;
t188 = -pkin(9) * t247 + t506;
t181 = t196 - t258;
t175 = -t228 * t406 + t230 * t410;
t174 = -t227 * t406 + t229 * t410;
t173 = t228 * t410 + t230 * t406;
t172 = t227 * t410 + t229 * t406;
t171 = t196 * t408 - t293 * t498;
t170 = t196 * t404 + t293 * t497;
t169 = t291 * t497 + t404 * t433;
t168 = -t291 * t498 + t408 * t433;
t167 = t205 * t409 + t236 * t405;
t166 = t205 * t405 - t236 * t409;
t165 = -t221 * t406 + t222 * t410;
t164 = t221 * t410 + t222 * t406;
t163 = t256 * t408 - t509;
t162 = -t257 * t404 + t537;
t161 = t256 * t404 + t508;
t160 = t257 * t408 + t540;
t159 = -t212 * t409 + t215 * t405;
t158 = -t211 * t409 - t405 * t534;
t156 = -t211 * t405 + t409 * t534;
t155 = -pkin(3) * t251 + t186;
t153 = t239 * t408 - t509;
t151 = -t207 * t406 + t208 * t410;
t150 = -t204 * t406 + t206 * t410;
t149 = t207 * t410 + t208 * t406;
t148 = t204 * t410 + t206 * t406;
t146 = t406 * t420 - t410 * t525 + (-t380 * t406 - t410 * t533 - t247) * pkin(3);
t144 = -t201 * t406 + t202 * t410;
t143 = t201 * t410 + t202 * t406;
t141 = t235 * t404 + t537;
t137 = t171 * t409 + t470;
t136 = t169 * t409 - t470;
t135 = t171 * t405 - t469;
t134 = t169 * t405 + t469;
t133 = -pkin(10) * t221 + t510;
t132 = -pkin(10) * t201 + t511;
t131 = pkin(2) * t217 + pkin(3) * t276 + pkin(9) * t252 + t506;
t130 = t165 * t402 + t400 * t534;
t129 = t165 * t400 - t402 * t534;
t128 = pkin(2) * t209 + pkin(3) * t272 + pkin(9) * t248 - t505;
t125 = t144 * t402 + t211 * t400;
t124 = t144 * t400 - t211 * t402;
t122 = t179 * t408 - t181 * t404;
t121 = -t178 * t404 - t182 * t408;
t120 = t179 * t404 + t181 * t408;
t118 = -pkin(4) * t534 + pkin(10) * t222 + t511;
t115 = t163 * t409 - t178 * t405;
t114 = t162 * t409 + t182 * t405;
t113 = t163 * t405 + t178 * t409;
t112 = t162 * t405 - t182 * t409;
t111 = -pkin(4) * t211 + pkin(10) * t202 - t510;
t110 = -t166 * t406 + t167 * t410;
t109 = t166 * t410 + t167 * t406;
t108 = t154 * t409 - t183 * t405;
t106 = t142 * t409 - t179 * t405;
t104 = -pkin(9) * t232 - t126;
t103 = t127 * t402 + t226 * t400;
t102 = t127 * t400 - t226 * t402;
t101 = t122 * t409 + t245 * t405;
t100 = t122 * t405 - t245 * t409;
t99 = -t157 * t406 + t159 * t410;
t98 = -t156 * t406 + t158 * t410;
t97 = t157 * t410 + t159 * t406;
t96 = t156 * t410 + t158 * t406;
t95 = t123 * t409 - t225 * t405;
t90 = -t135 * t406 + t137 * t410;
t89 = -t134 * t406 + t136 * t410;
t88 = t135 * t410 + t137 * t406;
t87 = t134 * t410 + t136 * t406;
t86 = t243 * t400 + t402 * t99;
t85 = -t243 * t402 + t400 * t99;
t79 = pkin(2) * t199 + pkin(3) * t295 + pkin(9) * t234 + t127;
t78 = -pkin(3) * t97 - t517;
t77 = -pkin(3) * t164 - t445;
t76 = -t113 * t406 + t115 * t410;
t75 = -t112 * t406 + t114 * t410;
t74 = t113 * t410 + t115 * t406;
t73 = t112 * t410 + t114 * t406;
t72 = -pkin(11) * t153 + t81;
t71 = -pkin(11) * t141 + t80;
t70 = -pkin(3) * t143 - t437;
t69 = -t107 * t406 + t108 * t410;
t68 = t107 * t410 + t108 * t406;
t67 = -pkin(9) * t164 - t118 * t406 + t133 * t410;
t66 = -t105 * t406 + t106 * t410;
t65 = t105 * t410 + t106 * t406;
t64 = pkin(2) * t102 - pkin(3) * t226 + pkin(9) * t127;
t63 = -t100 * t406 + t101 * t410;
t62 = t100 * t410 + t101 * t406;
t61 = -pkin(9) * t143 - t111 * t406 + t132 * t410;
t60 = -t406 * t94 + t410 * t95;
t59 = t406 * t95 + t410 * t94;
t52 = t153 * t400 + t402 * t69;
t51 = -t153 * t402 + t400 * t69;
t50 = t141 * t400 + t402 * t66;
t49 = -t141 * t402 + t400 * t66;
t48 = -pkin(4) * t187 + pkin(10) * t58;
t47 = -pkin(10) * t157 - t57;
t46 = -pkin(5) * t153 + t56;
t45 = -pkin(5) * t141 + t55;
t44 = -pkin(4) * t243 + pkin(10) * t159 + t58;
t43 = pkin(2) * t129 - pkin(3) * t534 + pkin(9) * t165 + t118 * t410 + t133 * t406;
t42 = t121 * t400 + t402 * t60;
t41 = -t121 * t402 + t400 * t60;
t40 = pkin(2) * t124 - pkin(3) * t211 + pkin(9) * t144 + t111 * t410 + t132 * t406;
t39 = t410 * t58 - t513;
t38 = t406 * t58 + t512;
t34 = t187 * t400 + t39 * t402;
t33 = -t187 * t402 + t39 * t400;
t32 = -pkin(3) * t68 - t439;
t31 = -pkin(3) * t65 - t440;
t30 = -pkin(11) * t121 - t36;
t29 = -pkin(10) * t107 - t405 * t46 + t409 * t72;
t28 = -pkin(10) * t105 - t405 * t45 + t409 * t71;
t27 = t37 * t409 + t405 * t83;
t25 = -pkin(4) * t153 + pkin(10) * t108 + t405 * t72 + t409 * t46;
t24 = -pkin(4) * t141 + pkin(10) * t106 + t405 * t71 + t409 * t45;
t23 = -pkin(3) * t38 - t523;
t22 = -pkin(9) * t97 - t406 * t44 + t410 * t47;
t21 = -pkin(10) * t94 + t121 * t516 + t30 * t409;
t20 = pkin(2) * t85 - pkin(3) * t243 + pkin(9) * t99 + t406 * t47 + t410 * t44;
t19 = pkin(10) * t95 + t121 * t458 + t30 * t405;
t18 = -pkin(3) * t59 - t436;
t17 = -pkin(9) * t38 - pkin(10) * t512 - t406 * t48;
t16 = -t26 * t406 + t27 * t410;
t15 = t26 * t410 + t27 * t406;
t14 = -pkin(9) * t68 - t25 * t406 + t29 * t410;
t13 = -pkin(9) * t65 - t24 * t406 + t28 * t410;
t12 = pkin(2) * t33 - pkin(3) * t187 + pkin(9) * t39 - pkin(10) * t513 + t410 * t48;
t11 = -pkin(10) * t26 + (-pkin(11) * t409 + t516) * t36;
t10 = t16 * t402 + t36 * t400;
t9 = t16 * t400 - t36 * t402;
t8 = pkin(2) * t51 - pkin(3) * t153 + pkin(9) * t69 + t25 * t410 + t29 * t406;
t7 = pkin(2) * t49 - pkin(3) * t141 + pkin(9) * t66 + t24 * t410 + t28 * t406;
t6 = -pkin(9) * t59 - t19 * t406 + t21 * t410;
t5 = pkin(10) * t27 + (-pkin(11) * t405 + t458) * t36;
t4 = pkin(2) * t41 - pkin(3) * t121 + pkin(9) * t60 + t19 * t410 + t21 * t406;
t3 = -pkin(3) * t15 - t447;
t2 = -pkin(9) * t15 + t11 * t410 - t406 * t5;
t1 = pkin(2) * t9 - pkin(3) * t36 + pkin(9) * t16 + t11 * t406 + t410 * t5;
t35 = [0, 0, 0, 0, 0, qJDD(1), t444, t432, 0, 0, (t376 * t401 + t411 * t532) * t407, t403 * t379 + (t407 * t352 + t411 * t460) * t401, t403 * t350 + (t484 + t411 * (-t464 + t380)) * t401, (t377 * t401 - t407 * t532) * t411, t403 * t351 + (t407 * (t463 - t380) + t482) * t401, t383, (-t329 + pkin(1) * (t374 * t411 + t378 * t407)) * t403 + (t411 * t357 + pkin(1) * t352 + pkin(8) * (t378 * t411 - t484)) * t401, -t357 * t488 - t403 * t330 + pkin(1) * (-t401 * t460 + (t365 * t411 - t375 * t407) * t403) + (-t365 * t407 - t482) * t515, pkin(1) * ((-t350 * t411 + t351 * t407) * t403 - (-t398 - t399) * t397 * t487) + (t350 * t407 + t351 * t411) * t515 + t526 * t401, pkin(1) * (t401 * t357 + (-t329 * t411 + t330 * t407) * t403) + t526 * t515, t461 + (t407 * (t342 * t402 - t370 * t491) + t411 * (t342 * t400 + t370 * t490)) * t401, t403 * t339 + (t407 * (-t400 * t527 - t402 * t533) + t411 * (-t400 * t533 + t402 * t527)) * t401, t403 * t323 + (t407 * (-t354 * t400 + t541) + t411 * (t354 * t402 + t542)) * t401, -t461 + (t407 * (t368 * t490 + t400 * t449) + t411 * (t368 * t491 - t402 * t449)) * t401, t403 * t435 + (t407 * (t353 * t402 - t496) + t411 * (t353 * t400 + t495)) * t401, t383 + (t407 * (-t368 * t402 + t370 * t400) + t411 * (-t368 * t400 - t370 * t402)) * t401 * t394, (t219 + pkin(1) * (t285 * t411 + t286 * t407)) * t403 + (t407 * (-qJ(3) * t285 - t500) + t411 * (-pkin(2) * t533 + qJ(3) * t286 + t499) - pkin(1) * t533 + pkin(8) * (-t285 * t407 + t286 * t411)) * t401, (t220 + pkin(1) * (t302 * t411 + t303 * t407)) * t403 + (t407 * (-qJ(3) * t302 - t499) + t411 * (-pkin(2) * t527 + qJ(3) * t303 - t500) - pkin(1) * t527 + pkin(8) * (-t302 * t407 + t303 * t411)) * t401, (t519 + pkin(1) * (t277 * t411 + t278 * t407)) * t403 + (t407 * (-qJ(3) * t277 - t193) + t411 * (-pkin(2) * t324 + qJ(3) * t278 + t194) - pkin(1) * t324 + pkin(8) * (-t277 * t407 + t278 * t411)) * t401, (t520 + pkin(1) * (t193 * t411 + t194 * t407)) * t403 + (-qJ(3) * t507 + t411 * (pkin(2) * t308 + qJ(3) * t194) + pkin(1) * t308 + pkin(8) * (t194 * t411 - t507)) * t401, t403 * t267 + (t407 * (t268 * t402 - t466) + t411 * (t268 * t400 + t465)) * t401, t403 * t231 + (t407 * (t233 * t402 + t316 * t400) + t411 * (t233 * t400 - t316 * t402)) * t401, t403 * t259 + (t407 * (t261 * t402 + t275 * t400) + t411 * (t261 * t400 - t275 * t402)) * t401, t403 * t265 + (t407 * (t266 * t402 + t466) + t411 * (t266 * t400 - t465)) * t401, t403 * t260 + (t407 * (t262 * t402 - t271 * t400) + t411 * (t262 * t400 + t271 * t402)) * t401, t403 * t280 + (t407 * (t402 * t281 + t400 * t443) + t411 * (t400 * t281 - t402 * t443)) * t401, (t128 + pkin(1) * (t209 * t411 + t210 * t407)) * t403 + (t407 * (-qJ(3) * t209 - t146 * t400 + t188 * t402) + t411 * (-pkin(2) * t247 + qJ(3) * t210 + t146 * t402 + t188 * t400) - pkin(1) * t247 + pkin(8) * (-t209 * t407 + t210 * t411)) * t401, (t131 + pkin(1) * (t217 * t411 + t218 * t407)) * t403 + (t407 * (-qJ(3) * t217 - t155 * t400 + t189 * t402) + t411 * (-pkin(2) * t251 + qJ(3) * t218 + t155 * t402 + t189 * t400) - pkin(1) * t251 + pkin(8) * (-t217 * t407 + t218 * t411)) * t401, (t79 + pkin(1) * (t199 * t411 + t200 * t407)) * t403 + (t407 * (-qJ(3) * t199 + t104 * t402) + t411 * (qJ(3) * t200 + t104 * t400) + pkin(8) * (-t199 * t407 + t200 * t411) + (t407 * t518 + t411 * t459 - pkin(1)) * t232) * t401, (t64 + pkin(1) * (t102 * t411 + t103 * t407)) * t403 + ((t407 * (-pkin(9) * t402 + t518) + t411 * (-pkin(9) * t400 + t459) - pkin(1)) * t126 + (pkin(8) + qJ(3)) * (-t102 * t407 + t103 * t411)) * t401, t403 * t149 + (t407 * (t151 * t402 + t468) + t411 * (t151 * t400 - t467)) * t401, t403 * t96 + (t407 * (t269 * t400 + t402 * t98) + t411 * (-t269 * t402 + t400 * t98)) * t401, t403 * t172 + (t407 * (t174 * t402 + t215 * t400) + t411 * (t174 * t400 - t215 * t402)) * t401, t403 * t148 + (t407 * (t150 * t402 - t468) + t411 * (t150 * t400 + t467)) * t401, t403 * t173 + (t407 * (t175 * t402 - t212 * t400) + t411 * (t175 * t400 + t212 * t402)) * t401, t403 * t197 + (t407 * (t198 * t402 + t338 * t400) + t411 * (t198 * t400 - t338 * t402)) * t401, (t40 + pkin(1) * (t124 * t411 + t125 * t407)) * t403 + (t407 * (-qJ(3) * t124 - t400 * t70 + t402 * t61) + t411 * (-pkin(2) * t143 + qJ(3) * t125 + t400 * t61 + t402 * t70) - pkin(1) * t143 + pkin(8) * (-t124 * t407 + t125 * t411)) * t401, (t43 + pkin(1) * (t129 * t411 + t130 * t407)) * t403 + (t407 * (-qJ(3) * t129 - t400 * t77 + t402 * t67) + t411 * (-pkin(2) * t164 + qJ(3) * t130 + t400 * t67 + t402 * t77) - pkin(1) * t164 + pkin(8) * (-t129 * t407 + t130 * t411)) * t401, (t20 + pkin(1) * (t407 * t86 + t411 * t85)) * t403 + (t407 * (-qJ(3) * t85 + t22 * t402 - t400 * t78) + t411 * (-pkin(2) * t97 + qJ(3) * t86 + t22 * t400 + t402 * t78) - pkin(1) * t97 + pkin(8) * (-t407 * t85 + t411 * t86)) * t401, (t12 + pkin(1) * (t33 * t411 + t34 * t407)) * t403 + (t407 * (-qJ(3) * t33 + t17 * t402 - t23 * t400) + t411 * (-pkin(2) * t38 + qJ(3) * t34 + t17 * t400 + t23 * t402) - pkin(1) * t38 + pkin(8) * (-t33 * t407 + t34 * t411)) * t401, t403 * t88 + (t407 * (t170 * t400 + t402 * t90) + t411 * (-t170 * t402 + t400 * t90)) * t401, t403 * t62 + (t407 * (t120 * t400 + t402 * t63) + t411 * (-t120 * t402 + t400 * t63)) * t401, t403 * t73 + (t407 * (t160 * t400 + t402 * t75) + t411 * (-t160 * t402 + t400 * t75)) * t401, t403 * t87 + (t407 * (-t168 * t400 + t402 * t89) + t411 * (t168 * t402 + t400 * t89)) * t401, t403 * t74 + (t407 * (t161 * t400 + t402 * t76) + t411 * (-t161 * t402 + t400 * t76)) * t401, t403 * t109 + (t407 * (t110 * t402 + t203 * t400) + t411 * (t110 * t400 - t203 * t402)) * t401, (t7 + pkin(1) * (t407 * t50 + t411 * t49)) * t403 + (t407 * (-qJ(3) * t49 + t13 * t402 - t31 * t400) + t411 * (-pkin(2) * t65 + qJ(3) * t50 + t13 * t400 + t31 * t402) - pkin(1) * t65 + pkin(8) * (-t407 * t49 + t411 * t50)) * t401, (t8 + pkin(1) * (t407 * t52 + t411 * t51)) * t403 + (t407 * (-qJ(3) * t51 + t14 * t402 - t32 * t400) + t411 * (-pkin(2) * t68 + qJ(3) * t52 + t14 * t400 + t32 * t402) - pkin(1) * t68 + pkin(8) * (-t407 * t51 + t411 * t52)) * t401, (t4 + pkin(1) * (t407 * t42 + t41 * t411)) * t403 + (t407 * (-qJ(3) * t41 - t18 * t400 + t402 * t6) + t411 * (-pkin(2) * t59 + qJ(3) * t42 + t18 * t402 + t400 * t6) - pkin(1) * t59 + pkin(8) * (-t407 * t41 + t411 * t42)) * t401, (t1 + pkin(1) * (t10 * t407 + t411 * t9)) * t403 + (t407 * (-qJ(3) * t9 + t2 * t402 - t3 * t400) + t411 * (-pkin(2) * t15 + qJ(3) * t10 + t2 * t400 + t3 * t402) - pkin(1) * t15 + pkin(8) * (t10 * t411 - t407 * t9)) * t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t379, t350, t388, t351, t446, -t329, -t330, 0, 0, t340, t339, t323, -t340, t435, t446, t219, t220, t519, t520, t267, t231, t259, t265, t260, t280, t128, t131, t79, t64, t149, t96, t172, t148, t173, t197, t40, t43, t20, t12, t88, t62, t73, t87, t74, t109, t7, t8, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533, t527, t324, -t308, 0, 0, 0, 0, 0, 0, t247, t251, t232, t126, 0, 0, 0, 0, 0, 0, t143, t164, t97, t38, 0, 0, 0, 0, 0, 0, t65, t68, t59, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, t316, t275, t317, -t271, t443, -t185, -t186, 0, 0, t270, t269, t215, -t270, -t212, t338, t437, t445, t517, t523, t170, t120, t160, -t168, t161, t203, t440, t439, t436, t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270, t269, t215, -t270, -t212, t338, -t92, -t93, 0, 0, t170, t120, t160, -t168, t161, t203, t471, t472, t448, t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, t245, t182, -t246, -t178, t236, -t55, -t56, 0, 0;];
tauJ_reg  = t35;
