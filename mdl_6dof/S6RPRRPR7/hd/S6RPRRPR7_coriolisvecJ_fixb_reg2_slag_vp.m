% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:21:11
% EndTime: 2019-03-09 05:21:18
% DurationCPUTime: 4.24s
% Computational Cost: add. (11092->415), mult. (24088->541), div. (0->0), fcn. (16889->8), ass. (0->231)
t183 = sin(qJ(6));
t182 = sin(pkin(10));
t258 = cos(pkin(10));
t184 = sin(qJ(4));
t185 = sin(qJ(3));
t187 = cos(qJ(4));
t188 = cos(qJ(3));
t148 = t184 * t188 + t185 * t187;
t177 = qJD(3) + qJD(4);
t106 = t177 * t148;
t97 = t106 * qJD(1);
t251 = t187 * t188;
t215 = t177 * t251;
t243 = qJD(1) * t185;
t229 = t184 * t243;
t246 = t177 * t229;
t98 = qJD(1) * t215 - t246;
t60 = -t182 * t97 + t258 * t98;
t272 = t183 * t60;
t139 = t148 * qJD(1);
t242 = qJD(1) * t188;
t230 = t187 * t242;
t141 = -t229 + t230;
t94 = t258 * t139 + t141 * t182;
t302 = qJD(6) + t94;
t186 = cos(qJ(6));
t309 = t186 * t302;
t310 = -t302 * t309 - t272;
t149 = -t184 * t185 + t251;
t200 = t258 * t148 + t182 * t149;
t239 = qJD(4) * t184;
t241 = qJD(3) * t185;
t107 = -t184 * t241 - t185 * t239 + t215;
t202 = -t182 * t106 + t258 * t107;
t102 = t148 * t182 - t258 * t149;
t189 = -pkin(1) - pkin(7);
t159 = t189 * qJD(1) + qJD(2);
t225 = pkin(8) * qJD(1) - t159;
t121 = t225 * t241;
t240 = qJD(3) * t188;
t122 = t225 * t240;
t222 = t187 * t121 + t122 * t184;
t131 = -pkin(8) * t242 + t188 * t159;
t120 = qJD(3) * pkin(3) + t131;
t130 = -pkin(8) * t243 + t159 * t185;
t255 = t130 * t187;
t86 = t120 * t184 + t255;
t53 = -t86 * qJD(4) + t222;
t194 = qJ(5) * t97 - qJD(5) * t141 + t53;
t238 = qJD(4) * t187;
t219 = -t120 * t238 - t184 * t121 + t187 * t122 + t130 * t239;
t31 = -qJ(5) * t98 - qJD(5) * t139 - t219;
t8 = t182 * t31 - t258 * t194;
t291 = t102 * t8;
t257 = qJ(5) * t139;
t74 = t86 - t257;
t274 = t182 * t74;
t134 = t141 * qJ(5);
t118 = t184 * t130;
t85 = t187 * t120 - t118;
t73 = -t134 + t85;
t67 = pkin(4) * t177 + t73;
t36 = t258 * t67 - t274;
t68 = t258 * t74;
t37 = t182 * t67 + t68;
t64 = t258 * t106 + t107 * t182;
t9 = t182 * t194 + t258 * t31;
t308 = t200 * t9 + t202 * t37 - t36 * t64 + t291;
t35 = pkin(9) * t177 + t37;
t154 = pkin(3) * t243 + qJD(1) * qJ(2);
t110 = pkin(4) * t139 + qJD(5) + t154;
t201 = -t182 * t139 + t258 * t141;
t49 = pkin(5) * t94 - pkin(9) * t201 + t110;
t17 = t183 * t49 + t186 * t35;
t61 = -t182 * t98 - t258 * t97;
t178 = qJD(1) * qJD(2);
t235 = qJD(1) * qJD(3);
t227 = t188 * t235;
t151 = pkin(3) * t227 + t178;
t82 = pkin(4) * t98 + t151;
t25 = pkin(5) * t60 - pkin(9) * t61 + t82;
t3 = -qJD(6) * t17 - t183 * t9 + t186 * t25;
t307 = t17 * t302 + t3;
t212 = t183 * t35 - t186 * t49;
t2 = -t212 * qJD(6) + t183 * t25 + t186 * t9;
t306 = t212 * t302 + t2;
t34 = -t177 * pkin(5) - t36;
t305 = t34 * t64;
t304 = t177 * t64;
t303 = t94 * t201;
t276 = t200 * t60;
t301 = t202 * t94 + t276;
t299 = -t102 * t61 - t201 * t64;
t236 = qJD(6) * t186;
t298 = t8 * t183 + t34 * t236;
t237 = qJD(6) * t183;
t57 = t186 * t60;
t204 = t237 * t302 - t57;
t296 = t202 * t177;
t279 = pkin(8) - t189;
t152 = t279 * t185;
t153 = t279 * t188;
t109 = -t187 * t152 - t184 * t153;
t294 = 0.2e1 * t178;
t108 = t152 * t184 - t187 * t153;
t203 = -qJ(5) * t149 + t108;
t87 = -qJ(5) * t148 + t109;
t54 = t182 * t87 - t258 * t203;
t293 = t54 * t8;
t292 = pkin(4) * t141;
t290 = t183 * t3;
t289 = t186 * t8;
t1 = t2 * t186;
t79 = -t186 * t177 + t183 * t201;
t288 = t79 * t201;
t287 = t79 * t94;
t81 = t177 * t183 + t186 * t201;
t286 = t81 * t79;
t285 = t81 * t201;
t284 = t302 * t201;
t283 = t201 ^ 2;
t281 = t94 ^ 2;
t271 = t183 * t61;
t40 = t81 * qJD(6) + t271;
t278 = -t183 * t40 - t79 * t236;
t277 = pkin(3) * qJD(4);
t275 = t177 * t201;
t39 = -t177 * t236 - t186 * t61 + t201 * t237;
t273 = t183 * t39;
t270 = t183 * t64;
t269 = t183 * t79;
t268 = t183 * t81;
t267 = t183 * t94;
t266 = t186 * t40;
t265 = t186 * t79;
t264 = t186 * t81;
t262 = t186 * t94;
t261 = t94 * t177;
t88 = -t131 * t184 - t255;
t197 = t88 + t257;
t226 = t258 * t184;
t89 = t187 * t131 - t118;
t75 = -t134 + t89;
t260 = -t182 * t75 + t258 * t197 + (t182 * t187 + t226) * t277;
t252 = t182 * t184;
t129 = (t258 * t187 - t252) * t277;
t44 = t182 * t197 + t258 * t75;
t259 = t129 - t44;
t256 = t107 * t177;
t254 = t141 * t139;
t253 = t141 * t154;
t190 = qJD(3) ^ 2;
t250 = t190 * t185;
t249 = t190 * t188;
t191 = qJD(1) ^ 2;
t248 = t191 * qJ(2);
t169 = t185 * pkin(3) + qJ(2);
t170 = pkin(3) * t187 + pkin(4);
t133 = pkin(3) * t226 + t182 * t170;
t245 = t185 ^ 2 - t188 ^ 2;
t244 = -t190 - t191;
t160 = pkin(3) * t240 + qJD(2);
t234 = -t17 * t267 + t212 * t262 + t1;
t233 = 0.2e1 * qJD(1);
t173 = pkin(3) * t242;
t231 = t188 * t191 * t185;
t32 = t34 * t237;
t228 = t201 * t212 + t32;
t224 = t183 * t302;
t221 = qJD(6) * t200 + qJD(1);
t220 = t17 * t201 + t298;
t218 = t185 * t227;
t123 = pkin(4) * t148 + t169;
t91 = pkin(4) * t107 + t160;
t217 = t201 * t37 - t36 * t94;
t214 = -t17 * t183 + t186 * t212;
t213 = -t17 * t186 - t183 * t212;
t211 = -t266 - t273;
t55 = t182 * t203 + t258 * t87;
t56 = pkin(5) * t200 + pkin(9) * t102 + t123;
t27 = t183 * t56 + t186 * t55;
t26 = -t183 * t55 + t186 * t56;
t210 = t264 + t269;
t209 = -t106 * t141 - t149 * t97;
t208 = t107 * t139 + t148 * t98;
t207 = -t267 * t302 - t204;
t206 = -t110 * t201 - t8;
t205 = -t236 * t302 - t272;
t51 = pkin(5) * t201 + pkin(9) * t94 + t292;
t199 = t139 * t154 + t219;
t146 = t279 * t241;
t147 = qJD(3) * t153;
t70 = t184 * t146 - t187 * t147 + t152 * t239 - t153 * t238;
t127 = pkin(9) + t133;
t198 = -t127 * t60 - t129 * t302 + t34 * t94;
t132 = -pkin(3) * t252 + t258 * t170;
t196 = -t106 * t85 + t107 * t86 - t148 * t219 + t149 * t53;
t195 = t214 * qJD(6) + t1 - t290;
t71 = -t109 * qJD(4) + t146 * t187 + t147 * t184;
t193 = qJ(5) * t106 - qJD(5) * t149 + t71;
t192 = t110 * t94 - t9;
t175 = qJ(2) * t294;
t168 = -t258 * pkin(4) - pkin(5);
t167 = pkin(4) * t182 + pkin(9);
t126 = -pkin(5) - t132;
t116 = t173 + t292;
t99 = t106 * t177;
t83 = -t139 ^ 2 + t141 ^ 2;
t77 = t246 + (t141 - t230) * t177;
t50 = t173 + t51;
t48 = -qJ(5) * t107 - qJD(5) * t148 + t70;
t46 = t61 + t261;
t45 = -t60 + t275;
t42 = t258 * t73 - t274;
t41 = t182 * t73 + t68;
t29 = -t281 + t283;
t28 = pkin(5) * t202 + pkin(9) * t64 + t91;
t23 = t182 * t193 + t258 * t48;
t22 = t182 * t48 - t258 * t193;
t21 = t183 * t50 + t186 * t44;
t20 = -t183 * t44 + t186 * t50;
t19 = t183 * t51 + t186 * t42;
t18 = -t183 * t42 + t186 * t51;
t15 = t79 * t224 - t266;
t14 = t309 * t81 - t273;
t13 = -t285 - t310;
t12 = t207 + t288;
t6 = (-t39 - t287) * t186 - t302 * t268 + t278;
t5 = -t27 * qJD(6) - t183 * t23 + t186 * t28;
t4 = t26 * qJD(6) + t183 * t28 + t186 * t23;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, t175, -0.2e1 * t218, 0.2e1 * t245 * t235, -t250, 0.2e1 * t218, -t249, 0, -t189 * t250 + (qJ(2) * t240 + qJD(2) * t185) * t233, -t189 * t249 + (-qJ(2) * t241 + qJD(2) * t188) * t233, 0, t175, t209, t106 * t139 - t107 * t141 + t148 * t97 - t149 * t98, -t99, t208, -t256, 0, t107 * t154 + t139 * t160 + t148 * t151 + t169 * t98 + t177 * t71, -t106 * t154 + t141 * t160 + t149 * t151 - t169 * t97 - t177 * t70, t108 * t97 - t109 * t98 - t139 * t70 - t141 * t71 - t196, t108 * t53 - t109 * t219 + t151 * t169 + t154 * t160 + t70 * t86 + t71 * t85, t299, t102 * t60 - t200 * t61 - t201 * t202 + t64 * t94, -t304, t301, -t296, 0, t110 * t202 + t123 * t60 - t177 * t22 + t200 * t82 + t91 * t94, -t102 * t82 - t110 * t64 + t123 * t61 - t177 * t23 + t201 * t91, t201 * t22 - t23 * t94 + t54 * t61 - t55 * t60 - t308, t110 * t91 + t123 * t82 - t22 * t36 + t23 * t37 + t55 * t9 + t293, -t64 * t264 - (-t186 * t39 - t237 * t81) * t102 -(-t265 - t268) * t64 - (t273 - t266 + (-t264 + t269) * qJD(6)) * t102, t102 * t204 - t200 * t39 + t202 * t81 - t309 * t64, t102 * t278 - t269 * t64, -t102 * t205 - t200 * t40 - t202 * t79 + t270 * t302, t202 * t302 + t276, -t102 * t298 + t200 * t3 - t202 * t212 + t22 * t79 + t26 * t60 - t34 * t270 + t302 * t5 + t40 * t54, -t186 * t305 - t200 * t2 - t17 * t202 + t22 * t81 - t27 * t60 - t39 * t54 - t4 * t302 - (-t32 + t289) * t102, t26 * t39 - t27 * t40 - t4 * t79 - t5 * t81 - t214 * t64 - (qJD(6) * t213 - t183 * t2 - t186 * t3) * t102, t17 * t4 + t2 * t27 - t212 * t5 + t22 * t34 + t26 * t3 + t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, -t248, 0, 0, 0, 0, 0, 0, t244 * t185, t244 * t188, 0, -t248, 0, 0, 0, 0, 0, 0, -qJD(1) * t139 - t99, -qJD(1) * t141 - t256, -t208 - t209, -qJD(1) * t154 + t196, 0, 0, 0, 0, 0, 0, -qJD(1) * t94 - t304, -qJD(1) * t201 - t296, -t299 - t301, -qJD(1) * t110 + t308, 0, 0, 0, 0, 0, 0, -t200 * t272 + t102 * t40 + t64 * t79 + (-t183 * t202 - t186 * t221) * t302, -t200 * t57 - t102 * t39 + t64 * t81 + (t183 * t221 - t186 * t202) * t302 (-t265 + t268) * t202 + t210 * qJD(1) + (qJD(6) * t210 + t211) * t200, qJD(1) * t214 + t195 * t200 - t202 * t213 + t291 + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, -t245 * t191, 0, -t231, 0, 0, -t188 * t248, t185 * t248, 0, 0, t254, t83, 0, -t254, t77, 0, -t139 * t173 - t253 - t177 * t88 + (-t255 + (-pkin(3) * t177 - t120) * t184) * qJD(4) + t222, t177 * t89 + (-t141 * t242 - t177 * t238) * pkin(3) + t199 (t86 + t88) * t141 + (-t85 + t89) * t139 + (-t184 * t98 + t187 * t97 + (-t139 * t187 + t141 * t184) * qJD(4)) * pkin(3), -t85 * t88 - t86 * t89 + (-t154 * t242 - t184 * t219 + t187 * t53 + (-t184 * t85 + t187 * t86) * qJD(4)) * pkin(3), t303, t29, t46, -t303, t45, 0, -t116 * t94 - t177 * t260 + t206, -t116 * t201 - t177 * t259 + t192, -t132 * t61 - t133 * t60 + t201 * t260 - t259 * t94 + t217, -t110 * t116 - t132 * t8 + t133 * t9 + t259 * t37 - t260 * t36, t14, t6, t13, t15, t12, -t284, t126 * t40 - t20 * t302 + t260 * t79 + (-qJD(6) * t127 * t302 - t8) * t186 + t198 * t183 + t228, -t126 * t39 + (t127 * t237 + t21) * t302 + t260 * t81 + t198 * t186 + t220, t20 * t81 + t21 * t79 + (-t127 * t40 - t129 * t79 + (t127 * t81 + t212) * qJD(6)) * t186 + (-t127 * t39 + t129 * t81 - t3 + (t127 * t79 - t17) * qJD(6)) * t183 + t234, t126 * t8 + t127 * t195 - t129 * t213 - t17 * t21 + t20 * t212 + t260 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t83, 0, -t254, t77, 0, t177 * t86 - t253 + t53, t177 * t85 + t199, 0, 0, t303, t29, t46, -t303, t45, 0, t177 * t41 - t94 * t292 + t206, t42 * t177 - t201 * t292 + t192, -t41 * t201 + t42 * t94 + (-t182 * t60 - t258 * t61) * pkin(4) + t217, t36 * t41 - t37 * t42 + (-t110 * t141 + t182 * t9 - t258 * t8) * pkin(4), t14, t6, t13, t15, t12, -t284, t167 * t205 + t168 * t40 - t18 * t302 + t267 * t34 - t41 * t79 + t228 - t289, t167 * t204 - t168 * t39 + t19 * t302 + t262 * t34 - t41 * t81 + t220, t18 * t81 - t290 + t19 * t79 + t211 * t167 + (t167 * t210 + t214) * qJD(6) + t234, t167 * t195 + t168 * t8 - t17 * t19 + t18 * t212 - t34 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60 + t275, t61 - t261, -t281 - t283, t201 * t36 + t37 * t94 + t82, 0, 0, 0, 0, 0, 0, t207 - t288, -t285 + t310 (t39 - t287) * t186 + t81 * t224 + t278, t306 * t183 + t307 * t186 - t34 * t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, -t79 ^ 2 + t81 ^ 2, t302 * t79 - t39, -t286, -t271 + (-qJD(6) + t302) * t81, t60, -t34 * t81 + t307, t34 * t79 - t306, 0, 0;];
tauc_reg  = t7;
