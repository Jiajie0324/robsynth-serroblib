% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRP5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP5_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:26:00
% EndTime: 2019-03-09 00:26:32
% DurationCPUTime: 18.64s
% Computational Cost: add. (16416->849), mult. (41952->1148), div. (0->0), fcn. (35820->14), ass. (0->380)
t318 = sin(pkin(7));
t324 = sin(qJ(3));
t328 = cos(qJ(3));
t380 = t318 * (pkin(3) * t324 - pkin(10) * t328);
t319 = sin(pkin(6));
t325 = sin(qJ(2));
t487 = t319 * t325;
t442 = qJD(1) * t487;
t568 = qJD(3) * t380 - t318 * t442;
t329 = cos(qJ(2));
t509 = cos(pkin(7));
t427 = t324 * t509;
t359 = -t325 * t427 + t328 * t329;
t233 = t359 * t319;
t425 = t328 * t509;
t490 = t318 * t324;
t263 = pkin(2) * t425 - pkin(9) * t490;
t250 = qJD(3) * t263;
t475 = -qJD(1) * t233 + t250;
t488 = t318 * t328;
t264 = pkin(2) * t427 + pkin(9) * t488;
t243 = pkin(10) * t509 + t264;
t395 = -pkin(3) * t328 - pkin(10) * t324;
t244 = (-pkin(2) + t395) * t318;
t323 = sin(qJ(4));
t327 = cos(qJ(4));
t461 = qJD(4) * t327;
t463 = qJD(4) * t323;
t555 = -t243 * t463 + t244 * t461 + t323 * t568 + t475 * t327;
t357 = t324 * t329 + t325 * t425;
t232 = t357 * t319;
t251 = qJD(3) * t264;
t474 = -qJD(1) * t232 + t251;
t468 = qJD(1) * t329;
t282 = qJD(2) * pkin(2) + t319 * t468;
t423 = t509 * t282;
t320 = cos(pkin(6));
t469 = qJD(1) * t320;
t354 = t318 * t469 + t423;
t465 = qJD(3) * t324;
t439 = t318 * t465;
t567 = -pkin(11) * t439 - t555;
t447 = t323 * t490;
t404 = qJD(4) * t447;
t426 = t327 * t509;
t464 = qJD(3) * t328;
t438 = t318 * t464;
t199 = -qJD(4) * t426 - t327 * t438 + t404;
t489 = t318 * t327;
t260 = t323 * t509 + t324 * t489;
t437 = t323 * t464;
t200 = qJD(4) * t260 + t318 * t437;
t566 = t200 * pkin(4) + t199 * pkin(11) + t474;
t394 = pkin(4) * t323 - pkin(11) * t327;
t466 = qJD(2) * t328;
t467 = qJD(2) * t318;
t267 = pkin(9) * t467 + t442;
t477 = t328 * t267;
t565 = -t324 * t423 - t477 - (t324 * t469 + t394 * t466) * t318 + t394 * qJD(4);
t322 = sin(qJ(5));
t326 = cos(qJ(5));
t304 = t318 * t466;
t405 = t327 * t304;
t441 = t324 * t467;
t213 = t322 * t405 - t326 * t441;
t564 = -t322 * t461 + t213;
t554 = -t243 * t461 - t244 * t463 - t475 * t323 + t327 * t568;
t458 = qJD(5) * t326;
t563 = t323 * t458 - t564;
t391 = t304 - qJD(4);
t417 = t509 * qJD(2);
t387 = t417 + qJD(3);
t364 = qJD(4) * t387;
t456 = qJD(2) * qJD(3);
t434 = t328 * t456;
t455 = qJDD(2) * t324;
t372 = t434 + t455;
t339 = t318 * t372 + t364;
t414 = t509 * qJDD(2);
t382 = t414 + qJDD(3);
t351 = qJD(2) * t404 - t323 * t382;
t552 = t339 * t327 - t351;
t562 = qJD(5) * t391 - t552;
t538 = pkin(9) * t318;
t561 = qJDD(2) * t538 + (qJD(2) * t468 + qJDD(1) * t325) * t319 + t354 * qJD(3);
t507 = sin(pkin(12));
t419 = t507 * t329;
t508 = cos(pkin(12));
t422 = t508 * t325;
t257 = t320 * t422 + t419;
t420 = t507 * t325;
t421 = t508 * t329;
t348 = -t320 * t421 + t420;
t430 = t319 * t508;
t551 = t318 * t430 + t348 * t509;
t154 = t257 * t328 - t551 * t324;
t336 = t318 * t348 - t430 * t509;
t102 = t154 * t323 - t327 * t336;
t258 = -t320 * t420 + t421;
t349 = t320 * t419 + t422;
t429 = t319 * t507;
t550 = -t318 * t429 + t349 * t509;
t156 = t258 * t328 - t550 * t324;
t337 = t318 * t349 + t429 * t509;
t104 = t156 * t323 - t327 * t337;
t424 = t329 * t509;
t358 = t324 * t424 + t325 * t328;
t198 = t319 * t358 + t320 * t490;
t428 = t320 * t509;
t486 = t319 * t329;
t360 = t318 * t486 - t428;
t157 = t198 * t323 + t327 * t360;
t370 = g(1) * t104 + g(2) * t102 + g(3) * t157;
t147 = (qJD(2) * (t324 * t461 + t437) + t323 * t455) * t318 + t323 * t364 - t327 * t382;
t435 = t324 * t456;
t454 = qJDD(2) * t328;
t302 = t318 * t454;
t452 = qJDD(4) - t302;
t363 = t318 * t435 + t452;
t560 = pkin(10) * t363;
t242 = -pkin(3) * t509 - t263;
t259 = -t426 + t447;
t159 = t259 * pkin(4) - t260 * pkin(11) + t242;
t172 = t327 * t243 + t323 * t244;
t161 = -pkin(11) * t488 + t172;
t459 = qJD(5) * t322;
t515 = t159 * t458 - t161 * t459 + t566 * t322 - t326 * t567;
t85 = t322 * t159 + t326 * t161;
t514 = -t85 * qJD(5) + t322 * t567 + t566 * t326;
t169 = -t324 * t267 + t328 * t354;
t248 = qJD(2) * t380;
t125 = t327 * t169 + t323 * t248;
t113 = pkin(11) * t441 + t125;
t449 = pkin(10) * t463;
t559 = t565 * t326 + (t113 + t449) * t322;
t540 = pkin(4) * t327;
t293 = -pkin(11) * t323 - pkin(3) - t540;
t558 = -t326 * t113 + t293 * t458 + t322 * t565;
t231 = t323 * t387 + t327 * t441;
t185 = t231 * t322 + t326 * t391;
t229 = t323 * t441 - t327 * t387;
t218 = qJD(5) + t229;
t502 = t185 * t218;
t69 = t231 * t459 - t322 * t363 + t326 * t562;
t557 = -t69 - t502;
t510 = -pkin(4) * t439 - t554;
t556 = t231 * t391;
t553 = t125 + t449;
t480 = t326 * t327;
t311 = pkin(10) * t480;
t240 = t322 * t293 + t311;
t549 = (qJDD(3) + 0.2e1 * t414) * t318;
t548 = -t324 * t325 + t328 * t424;
t547 = t405 - t461;
t406 = t323 * t304;
t546 = t406 - t463;
t158 = t198 * t327 - t323 * t360;
t197 = -t548 * t319 - t320 * t488;
t100 = -t158 * t322 + t197 * t326;
t103 = t154 * t327 + t323 * t336;
t105 = t156 * t327 + t323 * t337;
t153 = t257 * t324 + t551 * t328;
t155 = t258 * t324 + t550 * t328;
t545 = -g(3) * t100 - g(2) * (-t103 * t322 + t153 * t326) - g(1) * (-t105 * t322 + t155 * t326);
t187 = t326 * t231 - t322 * t391;
t543 = t187 ^ 2;
t330 = qJD(2) ^ 2;
t140 = qJDD(5) + t147;
t539 = pkin(5) * t140;
t533 = t185 * pkin(5);
t321 = -qJ(6) - pkin(11);
t170 = t324 * t354 + t477;
t152 = pkin(10) * t387 + t170;
t301 = qJD(1) * t428;
t183 = t301 + (qJD(2) * t395 - t282) * t318;
t93 = t327 * t152 + t323 * t183;
t87 = -pkin(11) * t391 + t93;
t151 = -pkin(3) * t387 - t169;
t95 = t229 * pkin(4) - t231 * pkin(11) + t151;
t39 = -t322 * t87 + t326 * t95;
t32 = -qJ(6) * t187 + t39;
t27 = pkin(5) * t218 + t32;
t532 = -t32 + t27;
t531 = qJ(6) * t69;
t228 = t326 * t363;
t460 = qJD(5) * t187;
t70 = t552 * t322 - t228 + t460;
t530 = qJ(6) * t70;
t303 = qJDD(1) * t486;
t440 = qJD(2) * t487;
t403 = qJD(1) * t440;
t238 = qJDD(2) * pkin(2) + t303 - t403;
t300 = qJDD(1) * t428;
t371 = t435 - t454;
t129 = t300 + (pkin(3) * t371 - pkin(10) * t372 - t238) * t318;
t433 = qJDD(1) * t318 * t320;
t350 = -t238 * t427 + t267 * t465 - t324 * t433 - t328 * t561;
t67 = pkin(10) * t382 - t350;
t411 = -t327 * t129 + t152 * t461 + t183 * t463 + t323 * t67;
t20 = -pkin(4) * t363 + t411;
t11 = t70 * pkin(5) + qJDD(6) + t20;
t529 = t11 * t322;
t528 = t20 * t322;
t40 = t322 * t95 + t326 * t87;
t33 = -qJ(6) * t185 + t40;
t527 = t218 * t33;
t526 = t218 * t39;
t525 = t218 * t40;
t524 = t322 * t69;
t523 = t326 * t70;
t479 = t326 * t328;
t214 = (t322 * t324 + t327 * t479) * t467;
t457 = qJD(6) * t326;
t522 = -pkin(5) * t406 + qJ(6) * t214 - t323 * t457 + (pkin(5) * t323 - qJ(6) * t480) * qJD(4) + (-t311 + (qJ(6) * t323 - t293) * t322) * qJD(5) + t559;
t201 = t260 * t322 + t318 * t479;
t116 = qJD(5) * t201 + t326 * t199 - t322 * t439;
t446 = t322 * t488;
t202 = t260 * t326 - t446;
t521 = pkin(5) * t200 + qJ(6) * t116 - qJD(6) * t202 + t514;
t483 = t323 * t326;
t520 = qJ(6) * t213 + (-pkin(10) * qJD(4) - qJ(6) * qJD(5)) * t483 + (-qJD(6) * t323 + (-pkin(10) * qJD(5) - qJ(6) * qJD(4)) * t327) * t322 + t558;
t117 = -qJD(5) * t446 - t199 * t322 + t260 * t458 - t326 * t439;
t519 = -qJ(6) * t117 - qJD(6) * t201 + t515;
t462 = qJD(4) * t326;
t518 = (-t323 * t462 - t327 * t459) * pkin(10) + t558;
t517 = -t240 * qJD(5) + t559;
t124 = -t323 * t169 + t248 * t327;
t112 = -pkin(4) * t441 - t124;
t450 = pkin(10) * t461;
t516 = pkin(5) * t563 - t112 + t450;
t431 = qJD(5) * t321;
t495 = t229 * t322;
t168 = pkin(4) * t231 + pkin(11) * t229;
t92 = -t323 * t152 + t327 * t183;
t52 = t322 * t168 + t326 * t92;
t513 = -qJ(6) * t495 + t322 * t431 + t457 - t52;
t494 = t229 * t326;
t51 = t326 * t168 - t322 * t92;
t512 = -pkin(5) * t231 - qJ(6) * t494 - qJD(6) * t322 + t326 * t431 - t51;
t511 = pkin(5) * t117 + t510;
t506 = t140 * t322;
t505 = t140 * t326;
t504 = t153 * t323;
t503 = t155 * t323;
t501 = t185 * t322;
t500 = t187 * t185;
t499 = t187 * t218;
t498 = t187 * t322;
t497 = t197 * t323;
t496 = t218 * t231;
t493 = t231 * t229;
t314 = t318 ^ 2;
t492 = t314 * t330;
t491 = t318 * t323;
t485 = t322 * t323;
t484 = t322 * t327;
t481 = t325 * t330;
t478 = t327 * t147;
t476 = qJDD(1) - g(3);
t448 = t318 * t487;
t471 = pkin(2) * t486 + pkin(9) * t448;
t316 = t324 ^ 2;
t317 = t328 ^ 2;
t470 = t316 - t317;
t451 = t370 * t322;
t445 = t233 * pkin(3) + t471;
t444 = pkin(5) * t322 + pkin(10);
t373 = -t323 * t129 + t152 * t463 - t183 * t461 - t327 * t67;
t19 = pkin(11) * t363 - t373;
t381 = -t238 * t425 + t267 * t464 + t324 * t561 - t328 * t433;
t68 = -pkin(3) * t382 + t381;
t36 = t147 * pkin(4) - pkin(11) * t552 + t68;
t6 = t326 * t19 + t322 * t36 + t95 * t458 - t87 * t459;
t418 = qJD(6) + t533;
t84 = t326 * t159 - t161 * t322;
t171 = -t323 * t243 + t244 * t327;
t416 = t218 * t326;
t415 = t328 * t391;
t413 = qJD(4) * t391;
t410 = t324 * t328 * t492;
t407 = t318 * t440;
t401 = t324 * t434;
t396 = t318 * t330 * t509;
t393 = g(1) * t258 + g(2) * t257;
t160 = pkin(4) * t488 - t171;
t392 = t326 * t461 - t214;
t390 = -t322 * t40 - t326 * t39;
t101 = t158 * t326 + t197 * t322;
t313 = pkin(5) * t326 + pkin(4);
t389 = -t313 * t327 + t321 * t323;
t386 = 0.2e1 * t417 + qJD(3);
t178 = -t257 * t427 - t328 * t348;
t252 = t348 * pkin(2);
t385 = t178 * pkin(3) + t257 * t538 - t252;
t180 = -t258 * t427 - t328 * t349;
t253 = t349 * pkin(2);
t384 = t180 * pkin(3) + t258 * t538 - t253;
t383 = pkin(10) * t232 + t445;
t379 = t391 * t323;
t86 = pkin(4) * t391 - t92;
t378 = -pkin(11) * t140 + t218 * t86;
t377 = -g(1) * (t155 * t484 + t156 * t326) - g(2) * (t153 * t484 + t154 * t326) - g(3) * (t197 * t484 + t198 * t326);
t376 = -g(1) * (-t155 * t480 + t156 * t322) - g(2) * (-t153 * t480 + t154 * t322) - g(3) * (-t197 * t480 + t198 * t322);
t131 = t178 * t327 + t257 * t491;
t133 = t180 * t327 + t258 * t491;
t177 = t257 * t425 - t324 * t348;
t179 = t258 * t425 - t324 * t349;
t190 = t233 * t327 + t323 * t448;
t375 = -g(1) * (-t133 * t322 + t179 * t326) - g(2) * (-t131 * t322 + t177 * t326) - g(3) * (-t190 * t322 + t232 * t326);
t374 = -g(1) * (t133 * t326 + t179 * t322) - g(2) * (t131 * t326 + t177 * t322) - g(3) * (t190 * t326 + t232 * t322);
t369 = -g(1) * t105 - g(2) * t103 - g(3) * t158;
t130 = t178 * t323 - t257 * t489;
t132 = t180 * t323 - t258 * t489;
t189 = t233 * t323 - t327 * t448;
t368 = -g(1) * t132 - g(2) * t130 - g(3) * t189;
t367 = g(1) * t155 + g(2) * t153 + g(3) * t197;
t366 = g(1) * t156 + g(2) * t154 + g(3) * t198;
t365 = g(1) * t179 + g(2) * t177 + g(3) * t232;
t356 = pkin(10) * t177 + t385;
t355 = pkin(10) * t179 + t384;
t353 = -t11 + t370;
t352 = -t20 + t370;
t347 = t318 * t360;
t345 = -g(1) * (-t105 * t326 - t155 * t322) - g(2) * (-t103 * t326 - t153 * t322) + g(3) * t101 - t6;
t7 = -qJD(5) * t40 - t19 * t322 + t326 * t36;
t344 = t347 * t456;
t343 = t323 * t411 - t327 * t373 - t366;
t340 = t314 * t319 * t481 - qJDD(2) * t347;
t338 = t7 + t545;
t331 = -t231 * t458 + t322 * t562 + t228;
t295 = t321 * t326;
t294 = t321 * t322;
t280 = t444 * t323;
t271 = t326 * t293;
t239 = -pkin(10) * t484 + t271;
t216 = -t282 * t318 + t301;
t203 = -qJ(6) * t485 + t240;
t196 = -qJ(6) * t483 + t271 + (-pkin(10) * t322 - pkin(5)) * t327;
t195 = t197 * pkin(3);
t193 = -t238 * t318 + t300;
t184 = t185 ^ 2;
t150 = t155 * pkin(3);
t149 = t153 * pkin(3);
t144 = t320 * t438 + (t359 * qJD(2) + t548 * qJD(3)) * t319;
t143 = t320 * t439 + (qJD(2) * t357 + qJD(3) * t358) * t319;
t108 = pkin(5) * t201 + t160;
t81 = -t184 + t543;
t71 = -t140 * t327 - t218 * t379;
t64 = t140 * t259 + t200 * t218;
t63 = -pkin(5) * t495 + t93;
t62 = -qJD(4) * t157 + t144 * t327 + t323 * t407;
t61 = qJD(4) * t158 + t144 * t323 - t327 * t407;
t60 = -qJ(6) * t201 + t85;
t55 = t418 + t86;
t50 = pkin(5) * t259 - qJ(6) * t202 + t84;
t46 = t331 + t499;
t45 = -t69 + t502;
t43 = -t187 * t231 + t218 * t416 + t506;
t42 = -t218 ^ 2 * t322 + t185 * t231 + t505;
t38 = t218 * t501 - t523;
t37 = t187 * t416 - t524;
t31 = t117 * t185 + t201 * t70;
t30 = -t116 * t187 - t202 * t69;
t29 = t185 * t563 + t70 * t485;
t28 = -t69 * t483 + (-t323 * t459 + t392) * t187;
t26 = qJD(5) * t100 + t143 * t322 + t326 * t62;
t25 = -qJD(5) * t101 + t143 * t326 - t322 * t62;
t17 = t327 * t70 + t564 * t218 + (t185 * t391 - t218 * t458 - t506) * t323;
t16 = t327 * t69 + t392 * t218 + (-t187 * t391 - t218 * t459 + t505) * t323;
t15 = -t117 * t218 - t140 * t201 - t185 * t200 - t259 * t70;
t14 = -t116 * t218 + t140 * t202 + t187 * t200 - t259 * t69;
t10 = t557 * t326 + (-t70 - t499) * t322;
t9 = t116 * t185 - t117 * t187 + t201 * t69 - t202 * t70;
t8 = t185 * t214 + t187 * t213 + (-t185 * t326 - t498) * t461 + (t524 - t523 + (-t187 * t326 + t501) * qJD(5)) * t323;
t5 = -t101 * t140 - t157 * t69 + t187 * t61 - t218 * t26;
t4 = t100 * t140 + t157 * t70 + t185 * t61 + t218 * t25;
t3 = -qJD(6) * t185 - t530 + t6;
t2 = -qJD(6) * t187 + t531 + t539 + t7;
t1 = t100 * t69 - t101 * t70 - t185 * t26 - t187 * t25;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t476, 0, 0, 0, 0, 0, 0 (qJDD(2) * t329 - t481) * t319 (-qJDD(2) * t325 - t329 * t330) * t319, 0, -g(3) + (t320 ^ 2 + (t325 ^ 2 + t329 ^ 2) * t319 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -t143 * t387 - t197 * t382 - t324 * t344 - t328 * t340, -t144 * t387 - t198 * t382 + t324 * t340 - t328 * t344 ((t197 * t324 + t198 * t328) * qJDD(2) + (t143 * t324 + t144 * t328 + (t197 * t328 - t198 * t324) * qJD(3)) * qJD(2)) * t318, -t169 * t143 + t170 * t144 - t193 * t360 + t197 * t381 - t198 * t350 + t216 * t407 - g(3), 0, 0, 0, 0, 0, 0, t143 * t229 + t197 * t147 - t157 * t363 + t391 * t61, t143 * t231 - t158 * t363 + t552 * t197 + t391 * t62, -t158 * t147 + t157 * t552 - t62 * t229 + t61 * t231, t143 * t151 + t157 * t411 - t158 * t373 + t197 * t68 - t61 * t92 + t62 * t93 - g(3), 0, 0, 0, 0, 0, 0, t4, t5, t1, t100 * t7 + t101 * t6 + t157 * t20 + t25 * t39 + t26 * t40 + t61 * t86 - g(3), 0, 0, 0, 0, 0, 0, t4, t5, t1, t100 * t2 + t101 * t3 + t11 * t157 + t25 * t27 + t26 * t33 + t55 * t61 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), g(1) * t349 + g(2) * t348 - g(3) * t486 + t303, -t476 * t487 + t393, 0, 0 (qJDD(2) * t316 + 0.2e1 * t401) * t314, 0.2e1 * (t324 * t454 - t456 * t470) * t314, t549 * t324 + t386 * t438 (qJDD(2) * t317 - 0.2e1 * t401) * t314, t549 * t328 - t386 * t439, t382 * t509, t263 * t382 - t381 * t509 - g(1) * t180 - g(2) * t178 - g(3) * t233 + (-t193 * t328 + t216 * t465) * t318 + (-pkin(2) * t371 + t328 * t403) * t314 - t474 * t387, -t264 * t382 + t350 * t509 + (t193 * t324 + t216 * t464) * t318 + (-pkin(2) * t372 - t324 * t403) * t314 + t365 - t475 * t387 (-g(3) * t487 + (-qJD(3) * t169 + qJDD(2) * t264 - t350) * t328 + (-t170 * qJD(3) - qJDD(2) * t263 + t381) * t324 + ((t475 - t250) * t328 + (t474 - t251) * t324) * qJD(2) - t393) * t318, -t350 * t264 - t381 * t263 + g(1) * t253 + g(2) * t252 - g(3) * t471 + (-t193 * pkin(2) - pkin(9) * t393 - t216 * t442) * t318 + t475 * t170 - t474 * t169, -t231 * t199 + t552 * t260, -t260 * t147 + t199 * t229 - t231 * t200 - t552 * t259, t199 * t391 + t260 * t452 + ((qJD(2) * t260 + t231) * t465 - t552 * t328) * t318, t147 * t259 + t200 * t229, t200 * t391 - t259 * t452 + (t147 * t328 + (-qJD(2) * t259 - t229) * t465) * t318 (-t452 * t328 + (-t304 - t391) * t465) * t318, t171 * t452 + t242 * t147 + t68 * t259 + t151 * t200 - g(1) * t133 - g(2) * t131 - g(3) * t190 + (t411 * t328 + (qJD(2) * t171 + t92) * t465) * t318 + t474 * t229 - t554 * t391, -t151 * t199 - t172 * t363 + t474 * t231 + t242 * t552 + t68 * t260 - t373 * t488 + t555 * t391 - t439 * t93 - t368, -t172 * t147 - t171 * t552 + t92 * t199 - t93 * t200 - t555 * t229 - t554 * t231 + t259 * t373 + t260 * t411 - t365, -g(1) * t355 - g(2) * t356 - g(3) * t383 + t474 * t151 - t171 * t411 - t172 * t373 + t68 * t242 + t554 * t92 + t555 * t93, t30, t9, t14, t31, t15, t64, t117 * t86 + t140 * t84 + t160 * t70 + t185 * t510 + t20 * t201 + t200 * t39 + t218 * t514 + t259 * t7 + t374, -t116 * t86 - t140 * t85 - t160 * t69 + t187 * t510 + t20 * t202 - t200 * t40 - t218 * t515 - t259 * t6 + t375, t116 * t39 - t117 * t40 - t185 * t515 - t187 * t514 - t201 * t6 - t202 * t7 + t69 * t84 - t70 * t85 + t368, t6 * t85 + t7 * t84 + t20 * t160 - g(1) * (pkin(4) * t133 + pkin(11) * t132 + t355) - g(2) * (pkin(4) * t131 + pkin(11) * t130 + t356) - g(3) * (pkin(4) * t190 + pkin(11) * t189 + t383) + t510 * t86 + t515 * t40 + t514 * t39, t30, t9, t14, t31, t15, t64, t108 * t70 + t11 * t201 + t117 * t55 + t140 * t50 + t185 * t511 + t2 * t259 + t200 * t27 + t218 * t521 + t374, -t108 * t69 + t11 * t202 - t116 * t55 - t140 * t60 + t187 * t511 - t200 * t33 - t218 * t519 - t259 * t3 + t375, t116 * t27 - t117 * t33 - t185 * t519 - t187 * t521 - t2 * t202 - t201 * t3 + t50 * t69 - t60 * t70 + t368, t3 * t60 + t2 * t50 + t11 * t108 - g(1) * (-t132 * t321 + t133 * t313 + t179 * t444 + t384) - g(2) * (-t130 * t321 + t131 * t313 + t177 * t444 + t385) - g(3) * (-t189 * t321 + t190 * t313 + t232 * t444 + t445) + t511 * t55 + t519 * t33 + t521 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t410, t470 * t492, t318 * t455 - t328 * t396, t410, t324 * t396 + t302, t382, t170 * t387 - t216 * t441 + t367 - t381, t169 * t387 - t216 * t304 + t350 + t366, 0, 0, -t351 * t323 + (t323 * t339 - t556) * t327, -t323 * t147 + t547 * t229 + t546 * t231 + t327 * t552, -t327 * t413 + t323 * t452 + (t327 * t415 + (qJD(3) * t323 - t231) * t324) * t467, -t229 * t379 - t478, t323 * t413 + t327 * t452 + (-t323 * t415 + (qJD(3) * t327 + t229) * t324) * t467, t391 * t441, -pkin(3) * t147 + t124 * t391 - t92 * t441 - t170 * t229 + (-t151 * t391 - t560) * t323 + (pkin(10) * t413 + t367 - t68) * t327, -pkin(3) * t552 - g(1) * t503 - g(2) * t504 - g(3) * t497 - t547 * t151 - t170 * t231 + t68 * t323 - t327 * t560 - t553 * t391 + t441 * t93, t343 + t546 * t93 + t547 * t92 + (t124 + t450) * t231 + t553 * t229 + (t323 * t552 - t478) * pkin(10), -t68 * pkin(3) + g(1) * t150 + g(2) * t149 + g(3) * t195 - t92 * t124 - t93 * t125 - t151 * t170 + ((-t93 * t323 - t92 * t327) * qJD(4) + t343) * pkin(10), t28, t8, t16, t29, t17, t71, -t112 * t185 + t140 * t239 - t213 * t86 + t517 * t218 + (-t7 + (pkin(10) * t185 + t322 * t86) * qJD(4)) * t327 + (pkin(10) * t70 - t39 * t391 + t458 * t86 + t528) * t323 + t376, -t112 * t187 - t140 * t240 - t214 * t86 - t518 * t218 + (t6 + (pkin(10) * t187 + t326 * t86) * qJD(4)) * t327 + (-pkin(10) * t69 + t20 * t326 + t391 * t40 - t459 * t86) * t323 + t377, t213 * t40 + t214 * t39 + t239 * t69 - t240 * t70 - t517 * t187 - t518 * t185 + t390 * t461 + (-t322 * t6 - t326 * t7 + (t322 * t39 - t326 * t40) * qJD(5) + t367) * t323, t6 * t240 + t7 * t239 - t86 * t112 - g(1) * (-pkin(11) * t503 - t155 * t540 - t150) - g(2) * (-pkin(11) * t504 - t153 * t540 - t149) - g(3) * (-pkin(11) * t497 - t197 * t540 - t195) + t518 * t40 + t517 * t39 + (t20 * t323 + t461 * t86 - t366) * pkin(10), t28, t8, t16, t29, t17, t71, t140 * t196 - t213 * t55 + t280 * t70 + (qJD(4) * t322 * t55 - t2) * t327 + t522 * t218 + t516 * t185 + (-t27 * t391 + t458 * t55 + t529) * t323 + t376, -t140 * t203 - t214 * t55 - t280 * t69 + (t462 * t55 + t3) * t327 - t520 * t218 + t516 * t187 + (t11 * t326 + t33 * t391 - t459 * t55) * t323 + t377, t196 * t69 - t203 * t70 + t213 * t33 + t214 * t27 - t522 * t187 - t520 * t185 + (-t27 * t326 - t322 * t33) * t461 + (-t2 * t326 - t3 * t322 + (t27 * t322 - t326 * t33) * qJD(5) + t367) * t323, t3 * t203 + t2 * t196 + t11 * t280 - g(1) * (t155 * t389 + t156 * t444 - t150) - g(2) * (t153 * t389 + t154 * t444 - t149) - g(3) * (t197 * t389 + t198 * t444 - t195) + t516 * t55 + t520 * t33 + t522 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t493, -t229 ^ 2 + t231 ^ 2, -t229 * t391 + t552, -t493, -t147 - t556, t363, -t151 * t231 - t391 * t93 + t370 - t411, t151 * t229 - t391 * t92 - t369 + t373, 0, 0, t37, t10, t43, t38, t42, -t496, -pkin(4) * t70 - t185 * t93 - t218 * t51 - t231 * t39 + t378 * t322 + (-pkin(11) * qJD(5) * t218 + t352) * t326, pkin(4) * t69 - t187 * t93 + t528 + t231 * t40 + (pkin(11) * t459 + t52) * t218 + t378 * t326 - t451, t185 * t52 + t187 * t51 + (t6 - t526 + (-t70 + t460) * pkin(11)) * t326 + (-t7 - t525 + (qJD(5) * t185 - t69) * pkin(11)) * t322 + t369, -t39 * t51 - t40 * t52 - t86 * t93 + t352 * pkin(4) + (qJD(5) * t390 - t7 * t322 + t6 * t326 + t369) * pkin(11), t37, t10, t43, t38, t42, -t496, t140 * t294 - t185 * t63 - t231 * t27 - t313 * t70 + t512 * t218 + (t229 * t55 + (t55 + t533) * qJD(5)) * t322 + t353 * t326, t55 * t494 + t529 + t140 * t295 - t187 * t63 + t231 * t33 + t313 * t69 - t513 * t218 + (pkin(5) * t498 + t326 * t55) * qJD(5) - t451, t294 * t69 + t295 * t70 - t512 * t187 - t513 * t185 + (-t218 * t27 + t3) * t326 + (-t2 - t527) * t322 + t369, -t3 * t295 + t2 * t294 - t11 * t313 - g(1) * (-t104 * t313 - t105 * t321) - g(2) * (-t102 * t313 - t103 * t321) - g(3) * (-t157 * t313 - t158 * t321) + (pkin(5) * t459 - t63) * t55 + t513 * t33 + t512 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t500, t81, t45, -t500, t46, t140, -t187 * t86 + t338 + t525, t185 * t86 + t345 + t526, 0, 0, t500, t81, t45, -t500, t46, t140, 0.2e1 * t539 + t531 + t527 + (-t418 - t55) * t187 + t338, -pkin(5) * t543 + t530 + t218 * t32 + (qJD(6) + t55) * t185 + t345, pkin(5) * t69 - t185 * t532, t532 * t33 + (-t55 * t187 + t2 + t545) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t331 + t499, t557, -t184 - t543, t33 * t185 + t27 * t187 - t353;];
tau_reg  = t12;
