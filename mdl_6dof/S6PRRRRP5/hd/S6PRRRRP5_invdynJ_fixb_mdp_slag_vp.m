% Calculate vector of inverse dynamics joint torques for
% S6PRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% MDP [27x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRRRP5_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRRP5_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1),zeros(27,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP5_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP5_invdynJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [27 1]), ...
  'S6PRRRRP5_invdynJ_fixb_mdp_slag_vp: MDP has to be [27x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:26:23
% EndTime: 2019-03-09 00:26:45
% DurationCPUTime: 18.47s
% Computational Cost: add. (8389->691), mult. (21170->962), div. (0->0), fcn. (18090->14), ass. (0->294)
t674 = sin(pkin(7));
t681 = sin(qJ(3));
t685 = cos(qJ(3));
t725 = (pkin(3) * t681 - pkin(10) * t685) * t674;
t675 = sin(pkin(6));
t682 = sin(qJ(2));
t831 = t675 * t682;
t775 = qJD(1) * t831;
t881 = qJD(3) * t725 - t674 * t775;
t676 = cos(pkin(7));
t686 = cos(qJ(2));
t819 = t685 * t686;
t825 = t681 * t682;
t722 = -t676 * t825 + t819;
t600 = t722 * t675;
t834 = t674 * t681;
t664 = pkin(9) * t834;
t828 = t676 * t685;
t864 = pkin(2) * t828 - t664;
t877 = -qJD(1) * t600 + t864 * qJD(3);
t829 = t676 * t681;
t832 = t674 * t685;
t804 = pkin(2) * t829 + pkin(9) * t832;
t608 = pkin(10) * t676 + t804;
t735 = -pkin(3) * t685 - pkin(10) * t681;
t609 = (-pkin(2) + t735) * t674;
t680 = sin(qJ(4));
t684 = cos(qJ(4));
t794 = qJD(4) * t684;
t795 = qJD(4) * t680;
t880 = -t608 * t795 + t609 * t794 + t680 * t881 + t877 * t684;
t823 = t682 * t685;
t824 = t681 * t686;
t724 = t676 * t823 + t824;
t599 = t724 * t675;
t865 = -qJD(1) * t599 + t804 * qJD(3);
t799 = qJD(2) * t674;
t662 = t685 * t799;
t731 = t662 - qJD(4);
t797 = qJD(3) * t681;
t770 = t674 * t797;
t879 = -pkin(11) * t770 - t880;
t625 = -t684 * t676 + t680 * t834;
t796 = qJD(3) * t685;
t768 = t684 * t796;
t568 = -qJD(4) * t625 + t674 * t768;
t833 = t674 * t684;
t626 = t676 * t680 + t681 * t833;
t769 = t680 * t796;
t569 = qJD(4) * t626 + t674 * t769;
t878 = pkin(4) * t569 - pkin(11) * t568 + t865;
t631 = pkin(9) * t799 + t775;
t800 = qJD(1) * t686;
t642 = qJD(2) * pkin(2) + t675 * t800;
t677 = cos(pkin(6));
t801 = qJD(1) * t677;
t776 = t674 * t801;
t543 = t685 * t631 + t642 * t829 + t681 * t776;
t876 = t543 + t731 * (pkin(4) * t680 - pkin(11) * t684);
t787 = qJDD(2) * t676;
t663 = qJDD(3) + t787;
t830 = t675 * t686;
t661 = qJDD(1) * t830;
t773 = qJD(2) * t831;
t739 = qJD(1) * t773;
t605 = qJDD(2) * pkin(2) + t661 - t739;
t788 = qJDD(1) * t677;
t764 = t674 * t788;
t771 = qJD(3) * t674 * t677;
t838 = t642 * t676;
t856 = pkin(9) * t674;
t870 = qJDD(2) * t856 + (qJD(2) * t800 + qJDD(1) * t682) * t675 + qJD(1) * t771 + qJD(3) * t838;
t726 = -t605 * t828 + t631 * t796 + t681 * t870 - t685 * t764;
t472 = -t663 * pkin(3) + t726;
t846 = sin(pkin(12));
t755 = t846 * t686;
t847 = cos(pkin(12));
t758 = t847 * t682;
t623 = t677 * t758 + t755;
t756 = t846 * t682;
t757 = t847 * t686;
t701 = -t677 * t757 + t756;
t696 = t701 * t685;
t760 = t675 * t847;
t737 = t674 * t760;
t528 = t623 * t681 + t676 * t696 + t685 * t737;
t624 = -t677 * t756 + t757;
t702 = t677 * t755 + t758;
t698 = t702 * t685;
t759 = t675 * t846;
t736 = t674 * t759;
t530 = t624 * t681 + t676 * t698 - t685 * t736;
t861 = t676 * t819 - t825;
t566 = -t675 * t861 - t677 * t832;
t710 = g(1) * t530 + g(2) * t528 + g(3) * t566;
t875 = t472 - t710;
t679 = sin(qJ(5));
t683 = cos(qJ(5));
t607 = t664 + (-pkin(2) * t685 - pkin(3)) * t676;
t534 = pkin(4) * t625 - pkin(11) * t626 + t607;
t809 = t684 * t608 + t680 * t609;
t536 = -pkin(11) * t832 + t809;
t811 = t679 * t534 + t683 * t536;
t874 = -qJD(5) * t811 + t679 * t879 + t878 * t683;
t791 = qJD(5) * t683;
t792 = qJD(5) * t679;
t873 = -t534 * t791 + t536 * t792 - t878 * t679 + t683 * t879;
t872 = t608 * t794 + t609 * t795 + t877 * t680 - t684 * t881;
t798 = qJD(2) * t676;
t748 = qJD(3) + t798;
t774 = t681 * t799;
t596 = t680 * t774 - t684 * t748;
t678 = -qJ(6) - pkin(11);
t871 = -qJ(6) * t596 + qJD(5) * t678;
t729 = qJD(4) * t748;
t786 = qJDD(2) * t681;
t524 = -t684 * t663 + t674 * (qJD(2) * (t681 * t794 + t769) + t680 * t786) + t680 * t729;
t789 = qJD(2) * qJD(3);
t766 = t681 * t789;
t784 = qJDD(2) * t685;
t660 = t674 * t784;
t783 = qJDD(4) - t660;
t708 = t674 * t766 + t783;
t869 = pkin(10) * t708;
t820 = t683 * t685;
t570 = t626 * t679 + t674 * t820;
t499 = qJD(5) * t570 - t683 * t568 - t679 * t770;
t779 = t679 * t832;
t571 = t626 * t683 - t779;
t868 = pkin(5) * t569 + qJ(6) * t499 - qJD(6) * t571 + t874;
t500 = -qJD(5) * t779 + t568 * t679 + t626 * t791 - t683 * t770;
t867 = -qJ(6) * t500 - qJD(6) * t570 - t873;
t815 = -pkin(4) * t770 + t872;
t781 = pkin(10) * t795;
t866 = t679 * t781 - t683 * t876;
t827 = t680 * t663;
t700 = t684 * t729 + t827;
t707 = -t681 * t795 + t768;
t785 = qJDD(2) * t684;
t762 = t681 * t785;
t689 = (qJD(2) * t707 + t762) * t674 + t700;
t723 = t676 * t824 + t823;
t567 = t675 * t723 + t677 * t834;
t622 = -t674 * t830 + t676 * t677;
t533 = t567 * t684 + t622 * t680;
t486 = -t533 * t679 + t566 * t683;
t697 = t701 * t681;
t529 = t623 * t685 - t676 * t697 - t681 * t737;
t690 = t674 * t701 - t676 * t760;
t489 = t529 * t684 + t680 * t690;
t531 = t624 * t685 + (-t676 * t702 + t736) * t681;
t691 = t674 * t702 + t676 * t759;
t491 = t531 * t684 + t680 * t691;
t863 = -g(1) * (-t491 * t679 + t530 * t683) - g(2) * (-t489 * t679 + t528 * t683) - g(3) * t486;
t740 = t684 * t662;
t862 = t740 - t794;
t542 = -t681 * t631 + t685 * (t776 + t838);
t613 = qJD(2) * t725;
t810 = t684 * t542 + t680 * t613;
t496 = pkin(11) * t774 + t810;
t652 = -pkin(4) * t684 - pkin(11) * t680 - pkin(3);
t860 = t683 * t496 - t652 * t791 + t679 * t876;
t709 = g(1) * t531 + g(2) * t529 + g(3) * t567;
t598 = t680 * t748 + t684 * t774;
t557 = t683 * t598 - t679 * t731;
t474 = qJD(5) * t557 + t679 * t689 - t683 * t708;
t858 = t557 ^ 2;
t687 = qJD(2) ^ 2;
t857 = pkin(5) * t679;
t848 = pkin(10) * qJD(4);
t844 = qJ(6) * t680;
t752 = t683 * t731;
t473 = qJD(5) * t752 + t598 * t792 - t679 * t708 - t683 * t689;
t843 = t473 * t679;
t517 = qJDD(5) + t524;
t842 = t517 * t679;
t841 = t517 * t683;
t555 = t598 * t679 + t752;
t586 = qJD(5) + t596;
t840 = t555 * t586;
t839 = t557 * t586;
t750 = t586 * t683;
t837 = t663 * MDP(9);
t835 = t674 * t680;
t826 = t680 * t683;
t822 = t682 * t687;
t821 = t683 * t684;
t818 = qJDD(1) - g(3);
t527 = pkin(10) * t748 + t543;
t659 = t676 * t801;
t553 = t659 + (qJD(2) * t735 - t642) * t674;
t481 = t684 * t527 + t680 * t553;
t476 = -pkin(11) * t731 + t481;
t526 = -pkin(3) * t748 - t542;
t483 = t596 * pkin(4) - t598 * pkin(11) + t526;
t458 = -t476 * t679 + t683 * t483;
t453 = -qJ(6) * t557 + t458;
t452 = pkin(5) * t586 + t453;
t817 = -t453 + t452;
t480 = -t680 * t527 + t684 * t553;
t541 = pkin(4) * t598 + pkin(11) * t596;
t816 = t683 * t480 + t679 * t541;
t583 = (t679 * t681 + t684 * t820) * t799;
t668 = pkin(10) * t821;
t741 = t680 * t662;
t790 = qJD(6) * t683;
t813 = -pkin(5) * t741 + qJ(6) * t583 + t496 * t679 - t680 * t790 + (pkin(5) * t680 - qJ(6) * t821) * qJD(4) + (-t668 + (-t652 + t844) * t679) * qJD(5) + t866;
t582 = t679 * t740 - t683 * t774;
t812 = qJ(6) * t582 + (-qJ(6) * qJD(5) - t848) * t826 + (-qJD(6) * t680 + (-pkin(10) * qJD(5) - qJ(6) * qJD(4)) * t684) * t679 - t860;
t808 = t679 * t871 + t790 - t816;
t538 = t683 * t541;
t807 = -pkin(5) * t598 - t538 + t871 * t683 + (-qJD(6) + t480) * t679;
t803 = t679 * t652 + t668;
t672 = t681 ^ 2;
t802 = -t685 ^ 2 + t672;
t793 = qJD(5) * t586;
t780 = t674 * t831;
t777 = pkin(10) + t857;
t767 = t674 * t676 * t687;
t765 = t685 * t789;
t754 = t683 * t534 - t536 * t679;
t753 = -t680 * t608 + t609 * t684;
t751 = t685 * t731;
t749 = qJD(4) * t731;
t747 = qJD(3) + 0.2e1 * t798;
t746 = t663 + t787;
t671 = t674 ^ 2;
t745 = t671 * t675 * t822;
t703 = -t605 * t829 + t631 * t797 - t681 * t764 - t685 * t870;
t471 = pkin(10) * t663 - t703;
t658 = t676 * t788;
t718 = t766 - t784;
t719 = t765 + t786;
t508 = t658 + (pkin(3) * t718 - pkin(10) * t719 - t605) * t674;
t744 = t680 * t471 - t684 * t508 + t527 * t794 + t553 * t795;
t742 = t674 * t773;
t535 = pkin(4) * t832 - t753;
t733 = -t679 * t794 + t582;
t732 = t683 * t794 - t583;
t459 = t476 * t683 + t483 * t679;
t487 = t533 * t683 + t566 * t679;
t532 = t567 * t680 - t622 * t684;
t539 = t680 * t542;
t730 = pkin(4) * t774 - t539;
t475 = pkin(4) * t731 - t480;
t720 = -pkin(11) * t517 + t475 * t586;
t717 = -t684 * t471 - t680 * t508 + t527 * t795 - t553 * t794;
t448 = pkin(11) * t708 - t717;
t457 = t524 * pkin(4) - pkin(11) * t689 + t472;
t715 = -t683 * t448 - t679 * t457 + t476 * t792 - t483 * t791;
t488 = t529 * t680 - t684 * t690;
t490 = t531 * t680 - t684 * t691;
t713 = g(1) * t490 + g(2) * t488 + g(3) * t532;
t712 = -g(1) * t491 - g(2) * t489 - g(3) * t533;
t548 = -t623 * t829 - t696;
t509 = t548 * t680 - t623 * t833;
t550 = -t624 * t829 - t698;
t511 = t550 * t680 - t624 * t833;
t559 = t600 * t680 - t684 * t780;
t711 = -g(1) * t511 - g(2) * t509 - g(3) * t559;
t704 = t719 * t674;
t699 = pkin(10) * t793 - t710;
t443 = -qJD(5) * t459 - t679 * t448 + t683 * t457;
t449 = -pkin(4) * t708 + t744;
t694 = pkin(11) * t793 + t449 - t713;
t444 = t474 * pkin(5) + qJDD(6) + t449;
t670 = pkin(5) * t683 + pkin(4);
t654 = t678 * t683;
t653 = t678 * t679;
t633 = t683 * t652;
t585 = -t642 * t674 + t659;
t572 = -t679 * t844 + t803;
t565 = -qJ(6) * t826 + t633 + (-pkin(10) * t679 - pkin(5)) * t684;
t563 = -t605 * t674 + t658;
t560 = t600 * t684 + t680 * t780;
t554 = t555 ^ 2;
t549 = t624 * t828 - t681 * t702;
t547 = t623 * t828 - t697;
t521 = t685 * t771 + (t722 * qJD(2) + qJD(3) * t861) * t675;
t520 = t677 * t770 + (qJD(2) * t724 + qJD(3) * t723) * t675;
t512 = t550 * t684 + t624 * t835;
t510 = t548 * t684 + t623 * t835;
t495 = -t613 * t684 - t730;
t468 = -qJD(4) * t532 + t521 * t684 + t680 * t742;
t467 = qJD(4) * t533 + t521 * t680 - t684 * t742;
t466 = -qJ(6) * t570 + t811;
t465 = t555 * pkin(5) + qJD(6) + t475;
t464 = pkin(5) * t625 - qJ(6) * t571 + t754;
t454 = -qJ(6) * t555 + t459;
t451 = qJD(5) * t486 + t468 * t683 + t520 * t679;
t450 = -qJD(5) * t487 - t468 * t679 + t520 * t683;
t441 = -qJ(6) * t474 - qJD(6) * t555 - t715;
t440 = pkin(5) * t517 + qJ(6) * t473 - qJD(6) * t557 + t443;
t1 = [t818 * MDP(1) + (t622 * t674 * t718 - t520 * t748 - t566 * t663 - t685 * t745) * MDP(10) + (-t521 * t748 - t567 * t663 + t622 * t704 + t681 * t745) * MDP(11) + (t467 * t731 + t520 * t596 + t566 * t524 - t532 * t708) * MDP(17) + (t468 * t731 - t533 * t783 + t520 * t598 + t566 * t700 + (t566 * t762 + (-t533 * t797 + t566 * t707) * qJD(2)) * t674) * MDP(18) + (t450 * t586 + t467 * t555 + t474 * t532 + t486 * t517) * MDP(24) + (-t451 * t586 + t467 * t557 - t473 * t532 - t487 * t517) * MDP(25) + (-t450 * t557 - t451 * t555 + t473 * t486 - t474 * t487) * MDP(26) + (t440 * t486 + t441 * t487 + t444 * t532 + t450 * t452 + t451 * t454 + t465 * t467 - g(3)) * MDP(27) + ((qJDD(2) * t686 - t822) * MDP(3) + (-qJDD(2) * t682 - t686 * t687) * MDP(4)) * t675; (t598 * t568 + t626 * t689) * MDP(12) + (-t626 * t524 - t568 * t596 - t598 * t569 - t625 * t689) * MDP(13) + (-t568 * t731 + t626 * t783 + ((-t827 + (-t674 * t765 - t729) * t684) * t685 + (-(-qJD(2) * t795 + t785) * t832 + (qJD(2) * t626 + t598) * qJD(3)) * t681) * t674) * MDP(14) + (g(1) * t702 + g(2) * t701 - g(3) * t830 + t661) * MDP(3) + (g(1) * t624 + g(2) * t623 - t818 * t831) * MDP(4) + (t441 * t466 + t440 * t464 + t444 * (pkin(5) * t570 + t535) - g(1) * (-pkin(2) * t702 + t550 * pkin(3) - t511 * t678 + t512 * t670 + t549 * t777 + t624 * t856) - g(2) * (-pkin(2) * t701 + t548 * pkin(3) - t509 * t678 + t510 * t670 + t547 * t777 + t623 * t856) - g(3) * (pkin(3) * t600 - t559 * t678 + t560 * t670 + (pkin(2) * t686 + t682 * t856) * t675 + t777 * t599) + (pkin(5) * t500 + t815) * t465 + t867 * t454 + t868 * t452) * MDP(27) + (-t440 * t571 - t441 * t570 + t452 * t499 - t454 * t500 + t464 * t473 - t466 * t474 - t555 * t867 - t557 * t868 + t711) * MDP(26) + (t681 * t746 + t747 * t796) * t674 * MDP(7) + (-t783 * t685 + (-t662 - t731) * t797) * t674 * MDP(16) + (t685 * t746 - t747 * t797) * t674 * MDP(8) + (t472 * t626 - t481 * t770 + t526 * t568 + t865 * t598 + t607 * t689 - t708 * t809 - t717 * t832 + t731 * t880 - t711) * MDP(18) + (t569 * t731 - t625 * t783 + (t524 * t685 + (-qJD(2) * t625 - t596) * t797) * t674) * MDP(15) + (0.2e1 * (t681 * t784 - t789 * t802) * MDP(6) + (-pkin(2) * t718 + t685 * t739) * MDP(10) + (-pkin(2) * t719 - t681 * t739) * MDP(11) + (qJDD(2) * t672 + 0.2e1 * t681 * t765) * MDP(5)) * t671 + (t864 * t663 - t726 * t676 - g(1) * t550 - g(2) * t548 - g(3) * t600 + (-t563 * t685 + t585 * t797) * t674 - t865 * t748) * MDP(10) + (-t804 * t663 + t703 * t676 + g(1) * t549 + g(2) * t547 + g(3) * t599 + (t563 * t681 + t585 * t796) * t674 - t877 * t748) * MDP(11) + qJDD(2) * MDP(2) + (t517 * t625 + t569 * t586) * MDP(23) + (-t474 * t625 - t500 * t586 - t517 * t570 - t555 * t569) * MDP(22) + (-t473 * t625 - t499 * t586 + t517 * t571 + t557 * t569) * MDP(21) + (t473 * t570 - t474 * t571 + t499 * t555 - t500 * t557) * MDP(20) + (-t473 * t571 - t499 * t557) * MDP(19) + (-g(1) * t512 - g(2) * t510 - g(3) * t560 + t472 * t625 + t480 * t770 + t607 * t524 + t526 * t569 + t865 * t596 + t753 * t708 + t731 * t872 + t744 * t832) * MDP(17) + (-t811 * t517 + t715 * t625 - t459 * t569 - t535 * t473 + t449 * t571 - t475 * t499 - g(1) * (-t512 * t679 + t549 * t683) - g(2) * (-t510 * t679 + t547 * t683) - g(3) * (-t560 * t679 + t599 * t683) + t873 * t586 + t815 * t557) * MDP(25) + (t754 * t517 + t443 * t625 + t458 * t569 + t535 * t474 + t449 * t570 + t475 * t500 - g(1) * (t512 * t683 + t549 * t679) - g(2) * (t510 * t683 + t547 * t679) - g(3) * (t560 * t683 + t599 * t679) + t874 * t586 + t815 * t555) * MDP(24) + t676 * t837; (t674 * t786 - t685 * t767) * MDP(7) + (t681 * t767 + t660) * MDP(8) + t837 + (t543 * t748 - t585 * t774 + t710 - t726) * MDP(10) + (t542 * t748 - t585 * t662 + t703 + t709) * MDP(11) + ((-qJD(4) * t774 + t663) * t680 ^ 2 + ((t729 + t704) * t680 - t731 * t598) * t684) * MDP(12) + (-t680 * t524 + t684 * t689 + (t741 - t795) * t598 + t862 * t596) * MDP(13) + (-t684 * t749 + t680 * t783 + (t684 * t751 + (qJD(3) * t680 - t598) * t681) * t799) * MDP(14) + (t680 * t749 + t684 * t783 + (-t680 * t751 + (qJD(3) * t684 + t596) * t681) * t799) * MDP(15) + t731 * MDP(16) * t774 + (-pkin(3) * t524 - t539 * t731 - t480 * t774 - t543 * t596 + (-t526 * t731 - t869) * t680 + (pkin(10) * t749 + t613 * t731 - t875) * t684) * MDP(17) + (-t684 * t869 - pkin(3) * t689 + t481 * t774 - t543 * t598 + (-t781 - t810) * t731 - t862 * t526 + t875 * t680) * MDP(18) + (-t473 * t826 + (-t680 * t792 + t732) * t557) * MDP(19) + (t555 * t583 + t557 * t582 + (-t555 * t683 - t557 * t679) * t794 + (t843 - t474 * t683 + (t555 * t679 - t557 * t683) * qJD(5)) * t680) * MDP(20) + (t473 * t684 + t732 * t586 + (-t557 * t731 - t586 * t792 + t841) * t680) * MDP(21) + (t474 * t684 + t733 * t586 + (t555 * t731 - t586 * t791 - t842) * t680) * MDP(22) + (-t586 * t680 * t731 - t517 * t684) * MDP(23) + (-t475 * t582 - t495 * t555 + t633 * t517 + t866 * t586 + ((-qJD(5) * t652 + t496) * t586 - t709) * t679 + (t475 * t679 * qJD(4) - t443 + (qJD(4) * t555 - t842) * pkin(10) - t699 * t683) * t684 + (pkin(10) * t474 + t449 * t679 - t458 * t731 + t475 * t791) * t680) * MDP(24) + (-t803 * t517 - t495 * t557 - t475 * t583 + t860 * t586 - t709 * t683 + (-t715 + (pkin(10) * t557 + t475 * t683) * qJD(4) + t699 * t679) * t684 + (-t475 * t792 + t449 * t683 + t731 * t459 + (qJD(4) * t750 - t473) * pkin(10)) * t680) * MDP(25) + (t452 * t583 + t454 * t582 + t473 * t565 - t474 * t572 - t813 * t557 - t812 * t555 + (-t452 * t683 - t454 * t679) * t794 + (-t440 * t683 - t441 * t679 + (t452 * t679 - t454 * t683) * qJD(5) + t710) * t680) * MDP(26) + (t440 * t565 + t441 * t572 + ((t613 + t848) * t684 + (t680 * t791 - t733) * pkin(5) + t730) * t465 + t812 * t454 + t813 * t452 + t710 * (t670 * t684 - t678 * t680 + pkin(3)) + (t444 * t680 - t709) * t777) * MDP(27) + (-MDP(5) * t681 * t685 + MDP(6) * t802) * t671 * t687; -t596 ^ 2 * MDP(13) + (-t596 * t731 + t689) * MDP(14) - t524 * MDP(15) + t708 * MDP(16) + (-t481 * t731 + t713 - t744) * MDP(17) + (-t480 * t731 + t526 * t596 - t712 + t717) * MDP(18) + (t557 * t750 - t843) * MDP(19) + ((-t473 - t840) * t683 + (-t474 - t839) * t679) * MDP(20) + (t586 * t750 + t842) * MDP(21) + (-t586 ^ 2 * t679 + t841) * MDP(22) + (-pkin(4) * t474 - t481 * t555 - t538 * t586 + (t480 * t586 + t720) * t679 - t694 * t683) * MDP(24) + (pkin(4) * t473 - t481 * t557 + t586 * t816 + t679 * t694 + t683 * t720) * MDP(25) + (t473 * t653 + t474 * t654 - t807 * t557 - t808 * t555 + (-t452 * t586 + t441) * t683 + (-t454 * t586 - t440) * t679 + t712) * MDP(26) + (-t441 * t654 + t440 * t653 - t444 * t670 - g(1) * (-t490 * t670 - t491 * t678) - g(2) * (-t488 * t670 - t489 * t678) - g(3) * (-t532 * t670 - t533 * t678) + (t586 * t857 - t481) * t465 + t808 * t454 + t807 * t452) * MDP(27) + (MDP(12) * t596 + MDP(13) * t598 - MDP(15) * t731 - MDP(17) * t526 - MDP(21) * t557 + MDP(22) * t555 - MDP(23) * t586 - MDP(24) * t458 + MDP(25) * t459) * t598; t557 * t555 * MDP(19) + (-t554 + t858) * MDP(20) + (-t473 + t840) * MDP(21) + (-t474 + t839) * MDP(22) + t517 * MDP(23) + (t459 * t586 - t475 * t557 + t443 + t863) * MDP(24) + (t458 * t586 + t475 * t555 - g(1) * (-t491 * t683 - t530 * t679) - g(2) * (-t489 * t683 - t528 * t679) + g(3) * t487 + t715) * MDP(25) + (pkin(5) * t473 - t555 * t817) * MDP(26) + (t817 * t454 + (-t465 * t557 + t440 + t863) * pkin(5)) * MDP(27); (-t554 - t858) * MDP(26) + (t452 * t557 + t454 * t555 + t444 - t713) * MDP(27);];
tau  = t1;
