% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:25:54
% EndTime: 2019-03-09 00:26:20
% DurationCPUTime: 11.85s
% Computational Cost: add. (12705->620), mult. (34554->862), div. (0->0), fcn. (28155->12), ass. (0->301)
t236 = sin(pkin(7));
t242 = sin(qJ(3));
t356 = t236 * t242;
t226 = pkin(9) * t356;
t238 = cos(pkin(7));
t246 = cos(qJ(3));
t352 = t238 * t246;
t194 = pkin(2) * t352 - t226;
t184 = qJD(3) * t194;
t247 = cos(qJ(2));
t342 = t246 * t247;
t243 = sin(qJ(2));
t349 = t242 * t243;
t263 = -t238 * t349 + t342;
t237 = sin(pkin(6));
t336 = qJD(1) * t237;
t341 = t263 * t336 - t184;
t277 = pkin(3) * t242 - pkin(10) * t246;
t262 = t277 * qJD(3);
t311 = t243 * t336;
t422 = (t262 - t311) * t236;
t353 = t238 * t242;
t355 = t236 * t246;
t195 = pkin(2) * t353 + pkin(9) * t355;
t180 = pkin(10) * t238 + t195;
t278 = -pkin(3) * t246 - pkin(10) * t242;
t181 = (-pkin(2) + t278) * t236;
t241 = sin(qJ(4));
t245 = cos(qJ(4));
t325 = qJD(4) * t245;
t327 = qJD(4) * t241;
t408 = -t180 * t327 + t181 * t325 + t422 * t241 - t245 * t341;
t185 = qJD(3) * t195;
t347 = t243 * t246;
t348 = t242 * t247;
t265 = t238 * t347 + t348;
t340 = -t265 * t336 + t185;
t329 = qJD(3) * t242;
t309 = t236 * t329;
t421 = -pkin(11) * t309 - t408;
t315 = t241 * t356;
t284 = qJD(4) * t315;
t328 = qJD(3) * t246;
t308 = t236 * t328;
t151 = -t238 * t325 - t245 * t308 + t284;
t191 = t238 * t241 + t245 * t356;
t152 = qJD(4) * t191 + t241 * t308;
t420 = pkin(4) * t152 + pkin(11) * t151 + t340;
t390 = qJD(2) * pkin(2);
t210 = t247 * t336 + t390;
t334 = qJD(2) * t236;
t198 = pkin(9) * t334 + t311;
t343 = t246 * t198;
t266 = t210 * t353 + t343;
t276 = pkin(4) * t241 - pkin(11) * t245;
t330 = qJD(2) * t246;
t239 = cos(pkin(6));
t335 = qJD(1) * t239;
t419 = -(t242 * t335 + t276 * t330) * t236 - t266 + t276 * qJD(4);
t240 = sin(qJ(5));
t244 = cos(qJ(5));
t224 = t236 * t330;
t285 = t245 * t224;
t331 = qJD(2) * t242;
t310 = t236 * t331;
t161 = t240 * t285 - t244 * t310;
t418 = -t240 * t325 + t161;
t407 = -t180 * t325 - t181 * t327 + t341 * t241 + t245 * t422;
t323 = qJD(5) * t244;
t417 = t241 * t323 - t418;
t332 = qJD(2) * t238;
t292 = qJD(3) + t332;
t169 = t241 * t310 - t245 * t292;
t164 = qJD(5) + t169;
t358 = t210 * t238;
t261 = t236 * t335 + t358;
t129 = t242 * t261 + t343;
t115 = pkin(10) * t292 + t129;
t223 = t238 * t335;
t136 = t223 + (qJD(2) * t278 - t210) * t236;
t146 = (t262 + t311) * t334;
t186 = t242 * t198;
t255 = t263 * qJD(2);
t281 = t239 * t308;
t93 = (t210 * t352 - t186) * qJD(3) + (t237 * t255 + t281) * qJD(1);
t258 = t115 * t327 - t136 * t325 - t241 * t146 - t245 * t93;
t319 = qJD(2) * qJD(3);
t301 = t236 * t319;
t280 = t242 * t301;
t30 = pkin(11) * t280 - t258;
t324 = qJD(5) * t240;
t279 = t246 * t301;
t269 = t241 * t279;
t171 = t241 * t292 + t245 * t310;
t320 = t171 * qJD(4);
t143 = t269 + t320;
t333 = qJD(2) * t237;
t303 = qJD(1) * t333;
t271 = t238 * t243 * t303;
t282 = t239 * t309;
t304 = qJD(3) * t358;
t402 = qJD(2) * t284 - t245 * (qJD(4) * t292 + t279);
t55 = t143 * pkin(4) + pkin(11) * t402 + qJD(1) * t282 + t198 * t328 + t242 * t304 + t246 * t271 + t303 * t348;
t274 = t224 - qJD(4);
t72 = t245 * t115 + t241 * t136;
t65 = -pkin(11) * t274 + t72;
t128 = t246 * t261 - t186;
t114 = -pkin(3) * t292 - t128;
t74 = t169 * pkin(4) - t171 * pkin(11) + t114;
t299 = -t240 * t55 - t244 * t30 - t74 * t323 + t65 * t324;
t32 = -t240 * t65 + t244 * t74;
t416 = -t164 * t32 - t299;
t415 = qJD(5) * t274 + t402;
t414 = -t241 * t402 + t245 * t320;
t179 = t226 + (-pkin(2) * t246 - pkin(3)) * t238;
t190 = -t245 * t238 + t315;
t118 = pkin(4) * t190 - pkin(11) * t191 + t179;
t131 = t245 * t180 + t241 * t181;
t120 = -pkin(11) * t355 + t131;
t394 = t118 * t323 - t120 * t324 + t420 * t240 - t244 * t421;
t63 = t240 * t118 + t244 * t120;
t393 = -qJD(5) * t63 + t240 * t421 + t420 * t244;
t33 = t240 * t74 + t244 * t65;
t7 = -qJD(5) * t33 - t240 * t30 + t244 * t55;
t413 = -t164 * t33 - t7;
t375 = -pkin(4) * t309 - t407;
t316 = pkin(10) * t327;
t182 = t277 * t334;
t103 = t245 * t128 + t241 * t182;
t91 = pkin(11) * t310 + t103;
t412 = t419 * t244 + (t316 + t91) * t240;
t217 = -pkin(4) * t245 - pkin(11) * t241 - pkin(3);
t411 = t217 * t323 + t240 * t419 - t244 * t91;
t139 = t171 * t240 + t244 * t274;
t371 = t139 * t164;
t80 = t171 * t324 - t240 * t280 + t244 * t415;
t410 = -t80 - t371;
t141 = t244 * t171 - t240 * t274;
t368 = t141 * t164;
t81 = t171 * t323 - t240 * t415 - t244 * t280;
t409 = t81 + t368;
t406 = t242 * t246;
t405 = t103 + t316;
t346 = t244 * t245;
t230 = pkin(10) * t346;
t177 = t240 * t217 + t230;
t404 = t285 - t325;
t403 = t238 * t342 - t349;
t401 = t141 ^ 2;
t248 = qJD(2) ^ 2;
t400 = pkin(5) * t143;
t399 = pkin(10) * t245;
t398 = t139 * pkin(5);
t397 = -qJ(6) - pkin(11);
t312 = t240 * t355;
t154 = t191 * t244 - t312;
t345 = t244 * t246;
t153 = t191 * t240 + t236 * t345;
t96 = qJD(5) * t153 + t244 * t151 - t240 * t309;
t396 = pkin(5) * t152 + qJ(6) * t96 - qJD(6) * t154 + t393;
t97 = -qJD(5) * t312 - t151 * t240 + t191 * t323 - t244 * t309;
t395 = -qJ(6) * t97 - qJD(6) * t153 + t394;
t23 = -qJ(6) * t141 + t32;
t22 = pkin(5) * t164 + t23;
t392 = t22 - t23;
t162 = (t240 * t242 + t245 * t345) * t334;
t286 = t241 * t224;
t322 = qJD(6) * t244;
t391 = pkin(5) * t286 - qJ(6) * t162 + t241 * t322 - (pkin(5) * t241 - qJ(6) * t346) * qJD(4) - (-t230 + (qJ(6) * t241 - t217) * t240) * qJD(5) - t412;
t149 = -t237 * t403 - t239 * t355;
t256 = t265 * qJD(2);
t94 = t266 * qJD(3) + (t237 * t256 + t282) * qJD(1);
t389 = t149 * t94;
t24 = -qJ(6) * t139 + t33;
t388 = t164 * t24;
t35 = -t115 * t325 - t136 * t327 + t245 * t146 - t241 * t93;
t31 = -pkin(4) * t280 - t35;
t17 = pkin(5) * t81 + t31;
t385 = t17 * t240;
t384 = t17 * t244;
t383 = t240 * t31;
t382 = t240 * t80;
t381 = t244 * t31;
t380 = t244 * t81;
t350 = t241 * t244;
t379 = qJ(6) * t161 + (-pkin(10) * qJD(4) - qJ(6) * qJD(5)) * t350 + (-qJD(6) * t241 + (-pkin(10) * qJD(5) - qJ(6) * qJD(4)) * t245) * t240 + t411;
t326 = qJD(4) * t244;
t378 = (-t241 * t326 - t245 * t324) * pkin(10) + t411;
t377 = -qJD(5) * t177 + t412;
t376 = pkin(5) * t97 + t375;
t102 = -t241 * t128 + t182 * t245;
t90 = -pkin(4) * t310 - t102;
t374 = pkin(5) * t417 + pkin(10) * t325 - t90;
t300 = qJD(5) * t397;
t361 = t169 * t240;
t127 = pkin(4) * t171 + pkin(11) * t169;
t71 = -t241 * t115 + t245 * t136;
t47 = t240 * t127 + t244 * t71;
t373 = -qJ(6) * t361 + t240 * t300 + t322 - t47;
t360 = t169 * t244;
t46 = t244 * t127 - t240 * t71;
t372 = -pkin(5) * t171 - qJ(6) * t360 - qJD(6) * t240 + t244 * t300 - t46;
t370 = t139 * t240;
t369 = t141 * t139;
t367 = t141 * t240;
t366 = t143 * t190;
t365 = t143 * t240;
t364 = t143 * t244;
t163 = -t210 * t236 + t223;
t363 = t163 * t236;
t362 = t164 * t171;
t359 = t171 * t169;
t283 = t171 * t224;
t233 = t236 ^ 2;
t357 = t233 * t248;
t354 = t237 * t248;
t351 = t240 * t241;
t344 = t245 * t143;
t337 = t242 ^ 2 - t246 ^ 2;
t321 = t114 * qJD(4);
t317 = t233 * t390;
t314 = t243 * t354;
t305 = t236 * t238 * t248;
t302 = t233 * t319;
t298 = qJD(6) + t398;
t62 = t244 * t118 - t120 * t240;
t130 = -t241 * t180 + t181 * t245;
t297 = t246 * t274;
t296 = t164 * t244;
t295 = t274 * t236;
t294 = qJD(4) * t274;
t291 = qJD(3) + 0.2e1 * t332;
t290 = t233 * t314;
t289 = t357 * t406;
t287 = t236 * t243 * t333;
t119 = pkin(4) * t355 - t130;
t275 = t244 * t325 - t162;
t273 = -t240 * t33 - t244 * t32;
t272 = -t35 * t241 - t245 * t258;
t264 = t238 * t348 + t347;
t150 = t237 * t264 + t239 * t356;
t189 = -t236 * t237 * t247 + t238 * t239;
t117 = t150 * t245 + t189 * t241;
t79 = t117 * t244 + t149 * t240;
t78 = -t117 * t240 + t149 * t244;
t116 = t150 * t241 - t189 * t245;
t270 = t302 * t406;
t268 = qJ(6) * t81 + t299;
t267 = -t317 + t363;
t260 = t274 * t241;
t64 = pkin(4) * t274 - t71;
t259 = -pkin(11) * t143 + t164 * t64;
t254 = qJD(3) * t198 + t271;
t252 = qJ(6) * t80 + t7;
t249 = -t163 * t334 - t304 + (-qJD(3) * t236 * t239 - t247 * t333) * qJD(1);
t232 = -pkin(5) * t244 - pkin(4);
t219 = t397 * t244;
t218 = t397 * t240;
t206 = (pkin(5) * t240 + pkin(10)) * t241;
t202 = t244 * t217;
t176 = -t240 * t399 + t202;
t155 = -qJ(6) * t351 + t177;
t148 = -qJ(6) * t350 + t202 + (-pkin(10) * t240 - pkin(5)) * t245;
t138 = t139 ^ 2;
t110 = t281 + (qJD(3) * t403 + t255) * t237;
t109 = t282 + (qJD(3) * t264 + t256) * t237;
t84 = pkin(5) * t153 + t119;
t75 = -t164 * t260 - t344;
t69 = t152 * t164 + t366;
t61 = -t138 + t401;
t59 = -pkin(5) * t361 + t72;
t58 = -qJD(4) * t116 + t110 * t245 + t241 * t287;
t57 = qJD(4) * t117 + t110 * t241 - t245 * t287;
t56 = -qJ(6) * t153 + t63;
t54 = -t81 + t368;
t53 = -t80 + t371;
t50 = t298 + t64;
t45 = pkin(5) * t190 - qJ(6) * t154 + t62;
t43 = -t141 * t171 + t164 * t296 + t365;
t42 = -t164 ^ 2 * t240 + t139 * t171 + t364;
t38 = t164 * t370 - t380;
t37 = t141 * t296 - t382;
t28 = t139 * t97 + t153 * t81;
t27 = -t141 * t96 - t154 * t80;
t26 = t139 * t417 + t81 * t351;
t25 = -t80 * t350 + (-t241 * t324 + t275) * t141;
t21 = qJD(5) * t78 + t109 * t240 + t244 * t58;
t20 = -qJD(5) * t79 + t109 * t244 - t240 * t58;
t16 = t245 * t81 + t418 * t164 + (t139 * t274 - t164 * t323 - t365) * t241;
t15 = t245 * t80 + t275 * t164 + (-t141 * t274 - t164 * t324 + t364) * t241;
t14 = -t139 * t152 - t143 * t153 - t164 * t97 - t190 * t81;
t13 = t141 * t152 + t143 * t154 - t164 * t96 - t190 * t80;
t12 = -t240 * t409 + t244 * t410;
t9 = t139 * t96 - t141 * t97 + t153 * t80 - t154 * t81;
t8 = t139 * t162 + t141 * t161 + (-t139 * t244 - t367) * t325 + (t382 - t380 + (-t141 * t244 + t370) * qJD(5)) * t241;
t5 = -qJD(6) * t139 - t268;
t4 = -t116 * t80 + t141 * t57 - t143 * t79 - t164 * t21;
t3 = t116 * t81 + t139 * t57 + t143 * t78 + t164 * t20;
t2 = -qJD(6) * t141 + t252 + t400;
t1 = -t139 * t21 - t141 * t20 + t78 * t80 - t79 * t81;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314, -t247 * t354, 0, 0, 0, 0, 0, 0, 0, 0, -t109 * t292 + t189 * t280 - t246 * t290, -t110 * t292 + t189 * t279 + t242 * t290 (t109 * t242 + t110 * t246 + (t149 * t246 - t150 * t242) * qJD(3)) * t334, -t109 * t128 + t110 * t129 + t389 + t150 * t93 + (qJD(1) * t189 + t163) * t287, 0, 0, 0, 0, 0, 0, t109 * t169 - t116 * t280 + t149 * t143 + t274 * t57, t109 * t171 - t117 * t280 - t149 * t402 + t274 * t58, -t116 * t402 - t117 * t143 - t58 * t169 + t57 * t171, t109 * t114 - t116 * t35 - t117 * t258 - t57 * t71 + t58 * t72 + t389, 0, 0, 0, 0, 0, 0, t3, t4, t1, t116 * t31 + t20 * t32 + t21 * t33 - t299 * t79 + t57 * t64 + t7 * t78, 0, 0, 0, 0, 0, 0, t3, t4, t1, t116 * t17 + t2 * t78 + t20 * t22 + t21 * t24 + t5 * t79 + t50 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t270, -0.2e1 * t337 * t302, t291 * t308, -0.2e1 * t270, -t291 * t309, 0 (-qJD(2) * t340 - t94) * t238 + (t242 * t267 - t340) * qJD(3) (qJD(2) * t341 - t93) * t238 + (t246 * t267 + t341) * qJD(3) (t242 * t94 + t246 * t93 + (-t128 * t246 - t129 * t242) * qJD(3) + ((-t341 - t184) * t246 + (t340 - t185) * t242) * qJD(2)) * t236, -t194 * t94 + t195 * t93 - t341 * t129 - t340 * t128 + (-t317 - t363) * t311, -t171 * t151 - t191 * t402, -t191 * t143 + t151 * t169 - t171 * t152 + t190 * t402, t151 * t274 + t171 * t309 + t191 * t280 + t355 * t402, t152 * t169 + t366, t152 * t274 + (t143 * t246 + (-qJD(2) * t190 - t169) * t329) * t236 (-t233 * t330 - t295) * t329, t179 * t143 + t94 * t190 + t114 * t152 + t340 * t169 + (-t35 * t246 + (qJD(2) * t130 + t71) * t329) * t236 - t407 * t274, -t114 * t151 - t131 * t280 + t171 * t340 - t179 * t402 + t94 * t191 - t258 * t355 + t274 * t408 - t72 * t309, t130 * t402 - t131 * t143 + t71 * t151 - t72 * t152 - t169 * t408 - t171 * t407 + t190 * t258 - t35 * t191, t340 * t114 + t130 * t35 - t131 * t258 + t179 * t94 + t407 * t71 + t408 * t72, t27, t9, t13, t28, t14, t69, t119 * t81 + t139 * t375 + t143 * t62 + t152 * t32 + t153 * t31 + t164 * t393 + t190 * t7 + t64 * t97, -t119 * t80 + t141 * t375 - t143 * t63 - t152 * t33 + t154 * t31 - t164 * t394 + t190 * t299 - t64 * t96, -t139 * t394 - t141 * t393 + t153 * t299 - t154 * t7 + t32 * t96 - t33 * t97 + t62 * t80 - t63 * t81, t119 * t31 - t299 * t63 + t32 * t393 + t33 * t394 + t375 * t64 + t62 * t7, t27, t9, t13, t28, t14, t69, t139 * t376 + t143 * t45 + t152 * t22 + t153 * t17 + t164 * t396 + t190 * t2 + t50 * t97 + t81 * t84, t141 * t376 - t143 * t56 - t152 * t24 + t154 * t17 - t164 * t395 - t190 * t5 - t50 * t96 - t80 * t84, -t139 * t395 - t141 * t396 - t153 * t5 - t154 * t2 + t22 * t96 - t24 * t97 + t45 * t80 - t56 * t81, t17 * t84 + t2 * t45 + t22 * t396 + t24 * t395 + t376 * t50 + t5 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, t337 * t357, -t246 * t305, t289, t242 * t305, 0, t129 * t292 + t242 * t249 - t246 * t254, t128 * t292 + t242 * t254 + t246 * t249, 0, 0, -t245 * t283 + t414, -t245 * t402 + t404 * t169 + (-t143 + t283 - t320) * t241, -t245 * t294 + (t245 * t297 + (qJD(3) * t241 - t171) * t242) * t334, -t169 * t260 - t344, t241 * t294 + (-t241 * t297 + (qJD(3) * t245 + t169) * t242) * t334, t295 * t331, -pkin(3) * t143 + t241 * t321 + t102 * t274 - t129 * t169 + (pkin(10) * t294 - t94) * t245 + (-t242 * t71 + (-pkin(10) * t329 - t114 * t246) * t241) * t334, pkin(3) * t402 - t114 * t285 - t129 * t171 + t94 * t241 + t245 * t321 - t274 * t405 - t280 * t399 + t72 * t310, t102 * t171 + t272 + (t286 - t327) * t72 + t404 * t71 + t405 * t169 + (-t344 + t414) * pkin(10), -pkin(3) * t94 - t102 * t71 - t103 * t72 - t114 * t129 + ((-t241 * t72 - t245 * t71) * qJD(4) + t272) * pkin(10), t25, t8, t15, t26, t16, t75, -t139 * t90 + t143 * t176 - t161 * t64 + t377 * t164 + (-t7 + (pkin(10) * t139 + t240 * t64) * qJD(4)) * t245 + (pkin(10) * t81 - t274 * t32 + t323 * t64 + t383) * t241, -t141 * t90 - t143 * t177 - t162 * t64 - t378 * t164 + (-t299 + (pkin(10) * t141 + t244 * t64) * qJD(4)) * t245 + (-pkin(10) * t80 + t274 * t33 - t324 * t64 + t381) * t241, t161 * t33 + t162 * t32 + t176 * t80 - t177 * t81 - t377 * t141 - t378 * t139 + t273 * t325 + (t240 * t299 - t244 * t7 + (t240 * t32 - t244 * t33) * qJD(5)) * t241, t176 * t7 - t177 * t299 - t64 * t90 + t378 * t33 + t377 * t32 + (t241 * t31 + t325 * t64) * pkin(10), t25, t8, t15, t26, t16, t75, t143 * t148 - t161 * t50 + t206 * t81 + (qJD(4) * t240 * t50 - t2) * t245 - t391 * t164 + t374 * t139 + (-t22 * t274 + t323 * t50 + t385) * t241, -t143 * t155 - t162 * t50 - t206 * t80 + (t326 * t50 + t5) * t245 - t379 * t164 + t374 * t141 + (t24 * t274 - t324 * t50 + t384) * t241, t148 * t80 - t155 * t81 + t161 * t24 + t162 * t22 + t391 * t141 - t379 * t139 + (-t22 * t244 - t24 * t240) * t325 + (-t2 * t244 - t240 * t5 + (t22 * t240 - t24 * t244) * qJD(5)) * t241, t148 * t2 + t155 * t5 + t17 * t206 - t22 * t391 + t24 * t379 + t374 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, -t169 ^ 2 + t171 ^ 2, -t169 * t274 - t402, -t359, -t269 - t283, t280, -t114 * t171 - t274 * t72 + t35, t114 * t169 - t274 * t71 + t258, 0, 0, t37, t12, t43, t38, t42, -t362, -pkin(4) * t81 - t139 * t72 - t171 * t32 - t381 + (-pkin(11) * t323 - t46) * t164 + t259 * t240, pkin(4) * t80 - t141 * t72 + t171 * t33 + t383 + (pkin(11) * t324 + t47) * t164 + t259 * t244, t139 * t47 + t141 * t46 + ((qJD(5) * t141 - t81) * pkin(11) + t416) * t244 + ((qJD(5) * t139 - t80) * pkin(11) + t413) * t240, -pkin(4) * t31 - t32 * t46 - t33 * t47 - t64 * t72 + (qJD(5) * t273 - t240 * t7 - t244 * t299) * pkin(11), t37, t12, t43, t38, t42, -t362, -t139 * t59 + t143 * t218 - t384 - t171 * t22 + t232 * t81 + t372 * t164 + (t169 * t50 + (t50 + t398) * qJD(5)) * t240, t50 * t360 - t141 * t59 + t143 * t219 + t385 + t171 * t24 - t232 * t80 - t373 * t164 + (pkin(5) * t367 + t244 * t50) * qJD(5), t218 * t80 + t219 * t81 - t372 * t141 - t373 * t139 + (-t164 * t22 + t5) * t244 + (-t2 - t388) * t240, t17 * t232 + t2 * t218 - t219 * t5 + (pkin(5) * t324 - t59) * t50 + t373 * t24 + t372 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, t61, t53, -t369, t54, t143, -t141 * t64 - t413, t139 * t64 - t416, 0, 0, t369, t61, t53, -t369, t54, t143, 0.2e1 * t400 + t388 + (-t298 - t50) * t141 + t252, -pkin(5) * t401 + t164 * t23 + (qJD(6) + t50) * t139 + t268, pkin(5) * t80 - t139 * t392, t392 * t24 + (-t141 * t50 + t2) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, t410, -t138 - t401, t139 * t24 + t141 * t22 + t17;];
tauc_reg  = t6;
