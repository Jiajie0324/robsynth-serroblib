% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 10:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRRRP5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP5_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP5_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP5_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP5_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 10:07:00
% EndTime: 2019-05-05 10:07:57
% DurationCPUTime: 46.36s
% Computational Cost: add. (378715->981), mult. (786340->1579), div. (0->0), fcn. (639938->14), ass. (0->749)
t1000 = cos(qJ(5));
t1002 = cos(qJ(3));
t1153 = qJD(2) * t1002;
t991 = sin(pkin(7));
t981 = t991 * t1153;
t1154 = t981 - qJD(4);
t1001 = cos(qJ(4));
t1172 = qJD(2) * t991;
t998 = sin(qJ(3));
t1144 = t998 * t1172;
t994 = cos(pkin(7));
t983 = qJD(2) * t994 + qJD(3);
t997 = sin(qJ(4));
t949 = t1001 * t1144 + t983 * t997;
t996 = sin(qJ(5));
t918 = t1000 * t1154 + t949 * t996;
t920 = t1000 * t949 - t1154 * t996;
t875 = t920 * t918;
t1150 = qJDD(2) * t998;
t955 = (qJD(3) * t1153 + t1150) * t991;
t982 = qJDD(2) * t994 + qJDD(3);
t1128 = -t1001 * t982 + t997 * t955;
t894 = -t949 * qJD(4) - t1128;
t893 = qJDD(5) - t894;
t1130 = -t893 + t875;
t1195 = t1130 * t996;
t1167 = t1000 * t1130;
t1225 = t1130 * pkin(5);
t1004 = qJD(2) ^ 2;
t1212 = pkin(9) * t991;
t1003 = cos(qJ(2));
t1186 = g(3) - qJDD(1);
t992 = sin(pkin(6));
t1131 = t992 * t1186;
t993 = cos(pkin(12));
t985 = t993 * g(2);
t990 = sin(pkin(12));
t1132 = g(1) * t990 - t985;
t995 = cos(pkin(6));
t1009 = t1132 * t995 - t1131;
t1125 = g(1) * t993 + g(2) * t990;
t999 = sin(qJ(2));
t914 = -t1003 * t1009 - t999 * t1125;
t1008 = qJDD(2) * pkin(2) + t1004 * t1212 - t914;
t967 = t992 * t1132;
t1116 = t1186 * t995 + t967;
t1226 = t994 * t1008 - t991 * t1116;
t1149 = t1154 ^ 2;
t1152 = qJDD(2) * t991;
t1174 = -qJD(3) * t1144 + t1002 * t1152;
t1139 = -qJDD(4) + t1174;
t947 = -t1001 * t983 + t1144 * t997;
t895 = -t947 * qJD(4) + t1001 * t955 + t997 * t982;
t832 = -t918 * qJD(5) + t1000 * t895 - t1139 * t996;
t943 = qJD(5) + t947;
t891 = t943 * t918;
t1224 = -t891 + t832;
t934 = t947 * t1154;
t862 = t934 + t895;
t966 = t983 * t981;
t930 = t966 + t955;
t1189 = t947 * t949;
t1045 = -t1139 - t1189;
t1223 = t1045 * t997;
t1222 = t990 * t1186;
t1221 = t993 * t1186;
t1032 = t999 * t1116;
t965 = t983 * t1144;
t933 = -t965 + t1174;
t1220 = t1001 * t1045;
t1031 = t1003 * t1116;
t937 = -t993 * t1125 - t1132 * t990;
t1129 = t1000 * t1139 + t895 * t996;
t793 = (qJD(5) - t943) * t920 + t1129;
t915 = -t1003 * t1125 + t1009 * t999;
t903 = -t1004 * pkin(2) + pkin(9) * t1152 + t915;
t820 = t1002 * t903 + t1226 * t998;
t916 = t918 ^ 2;
t917 = t920 ^ 2;
t941 = t943 ^ 2;
t945 = t947 ^ 2;
t946 = t949 ^ 2;
t1219 = t983 ^ 2;
t1218 = pkin(3) * t998;
t844 = -t941 - t916;
t764 = t844 * t996 - t1167;
t1217 = pkin(4) * t764;
t817 = t875 + t893;
t1196 = t817 * t996;
t865 = -t917 - t941;
t769 = t1000 * t865 - t1196;
t1216 = pkin(4) * t769;
t1215 = pkin(4) * t997;
t1214 = pkin(8) * t992;
t1213 = pkin(8) * t995;
t1211 = pkin(9) * t994;
t797 = -t891 - t832;
t717 = -t1000 * t793 - t797 * t996;
t833 = -t916 - t917;
t676 = -t1001 * t833 + t717 * t997;
t1210 = pkin(10) * t676;
t765 = t1000 * t844 + t1195;
t792 = (qJD(5) + t943) * t920 + t1129;
t693 = -t1001 * t792 + t765 * t997;
t1209 = pkin(10) * t693;
t1168 = t1000 * t817;
t770 = -t865 * t996 - t1168;
t702 = -t1001 * t1224 + t770 * t997;
t1208 = pkin(10) * t702;
t715 = t1000 * t797 - t793 * t996;
t1207 = pkin(11) * t715;
t1206 = pkin(11) * t764;
t1205 = pkin(11) * t769;
t1204 = pkin(3) * t1002;
t1203 = pkin(4) * t1001;
t677 = t1001 * t717 + t833 * t997;
t1105 = -t1002 * t715 + t677 * t998;
t591 = t1105 * t994 - t676 * t991;
t630 = t1002 * t677 + t715 * t998;
t1074 = t1003 * t591 + t630 * t999;
t590 = t1105 * t991 + t676 * t994;
t500 = t1074 * t995 - t590 * t992;
t539 = t1003 * t630 - t591 * t999;
t465 = t500 * t993 + t539 * t990;
t1202 = qJ(1) * t465;
t694 = t1001 * t765 + t792 * t997;
t1103 = -t1002 * t764 + t694 * t998;
t609 = t1103 * t994 - t693 * t991;
t652 = t1002 * t694 + t764 * t998;
t1072 = t1003 * t609 + t652 * t999;
t608 = t1103 * t991 + t693 * t994;
t518 = t1072 * t995 - t608 * t992;
t560 = t1003 * t652 - t609 * t999;
t479 = t518 * t993 + t560 * t990;
t1201 = qJ(1) * t479;
t703 = t1001 * t770 + t1224 * t997;
t1102 = -t1002 * t769 + t703 * t998;
t614 = t1102 * t994 - t702 * t991;
t662 = t1002 * t703 + t769 * t998;
t1071 = t1003 * t614 + t662 * t999;
t613 = t1102 * t991 + t702 * t994;
t524 = t1071 * t995 - t613 * t992;
t566 = t1003 * t662 - t614 * t999;
t482 = t524 * t993 + t566 * t990;
t1200 = qJ(1) * t482;
t876 = t1008 * t991 + t994 * t1116;
t1006 = -pkin(3) * t933 - pkin(10) * t930 - t876;
t1122 = -pkin(10) * t998 - t1204;
t954 = t1122 * t1172;
t804 = -t1219 * pkin(3) + t982 * pkin(10) + t954 * t981 + t820;
t735 = t1001 * t804 + t997 * t1006;
t905 = pkin(4) * t947 - pkin(11) * t949;
t698 = -pkin(4) * t1149 - pkin(11) * t1139 - t947 * t905 + t735;
t1127 = t949 * t1154;
t1175 = t1226 * t1002;
t803 = -t982 * pkin(3) - t1219 * pkin(10) + (t1172 * t954 + t903) * t998 - t1175;
t727 = -t862 * pkin(11) + (-t894 - t1127) * pkin(4) + t803;
t1176 = t1000 * t727 - t996 * t698;
t1146 = t832 * qJ(6) - t1176;
t1035 = -qJ(6) * t891 - t1146;
t1171 = qJD(6) * t920;
t605 = t1035 - 0.2e1 * t1171 - t1225;
t1199 = t605 * t996;
t734 = -t1001 * t1006 + t804 * t997;
t697 = t1139 * pkin(4) - t1149 * pkin(11) + t905 * t949 + t734;
t1198 = t697 * t996;
t1197 = t803 * t997;
t1194 = t876 * t998;
t888 = t1139 - t1189;
t1193 = t888 * t997;
t1192 = t933 * t994;
t1145 = t983 * t1172;
t988 = t998 ^ 2;
t989 = t1002 ^ 2;
t1173 = t988 + t989;
t935 = t1173 * t1145;
t1191 = t935 * t999;
t1190 = t943 * t996;
t1156 = t1004 * t998;
t987 = t991 ^ 2;
t1159 = t1002 * t987;
t976 = t1156 * t1159;
t952 = t976 + t982;
t1188 = t952 * t998;
t953 = -t976 + t982;
t1187 = t953 * t998;
t1185 = pkin(1) * t500 + t539 * t1214;
t1184 = pkin(1) * t518 + t560 * t1214;
t1183 = pkin(1) * t524 + t566 * t1214;
t1182 = pkin(2) * t591 + t630 * t1212;
t1181 = pkin(2) * t609 + t652 * t1212;
t1180 = pkin(2) * t614 + t662 * t1212;
t1179 = -pkin(3) * t715 + pkin(10) * t677;
t1178 = -pkin(3) * t764 + pkin(10) * t694;
t641 = t1000 * t698 + t996 * t727;
t1177 = -pkin(3) * t769 + pkin(10) * t703;
t1170 = t1000 * t605;
t1169 = t1000 * t697;
t1166 = t1000 * t943;
t1165 = t1001 * t803;
t1164 = t1001 * t888;
t1163 = t1002 * t876;
t1161 = t1002 * t952;
t1160 = t1002 * t953;
t1158 = t1003 * t991;
t1157 = t1004 * t987;
t1151 = qJDD(2) * t992;
t1148 = t997 * t875;
t1147 = t998 * t1189;
t1143 = t1001 * t875;
t1142 = t1002 * t1189;
t1141 = t988 * t1157;
t1140 = t989 * t1157;
t499 = t1074 * t992 + t590 * t995;
t1138 = -pkin(1) * t499 + t539 * t1213;
t517 = t1072 * t992 + t608 * t995;
t1137 = -pkin(1) * t517 + t560 * t1213;
t523 = t1071 * t992 + t613 * t995;
t1136 = -pkin(1) * t523 + t566 * t1213;
t1135 = -pkin(2) * t590 + t630 * t1211;
t1134 = -pkin(2) * t608 + t652 * t1211;
t1133 = -pkin(2) * t613 + t662 * t1211;
t656 = t1001 * t735 + t734 * t997;
t1126 = t1001 * t1154;
t1124 = t997 * t1127;
t1123 = t997 * t934;
t1121 = t949 * t1126;
t1120 = t947 * t1126;
t942 = -t1141 - t1219;
t902 = -t942 * t998 - t1160;
t1119 = pkin(9) * t902 - t1194;
t1118 = g(2) * t990 ^ 2 + t985 * t993;
t958 = -t1140 - t1219;
t910 = t1002 * t958 - t1188;
t1117 = pkin(9) * t910 + t1163;
t1046 = qJDD(2) * t999 + t1003 * t1004;
t961 = t1046 * t995;
t974 = qJDD(2) * t1003 - t1004 * t999;
t1115 = t961 * t993 + t974 * t990;
t925 = t961 * t990 - t974 * t993;
t574 = t1000 * t641 - t1176 * t996;
t573 = t1000 * t1176 + t641 * t996;
t655 = -t1001 * t734 + t735 * t997;
t831 = -qJD(5) * t920 - t1129;
t885 = pkin(5) * t943 - qJ(6) * t920;
t1034 = t831 * qJ(6) - 0.2e1 * qJD(6) * t918 - t885 * t943 + t641;
t592 = -qJ(6) * t793 + (-t833 - t916) * pkin(5) + t1034;
t912 = 0.2e1 * t1171;
t595 = t912 + (-t797 + t891) * qJ(6) + t1225 + t1146;
t515 = t1000 * t595 - t592 * t996 - t1207;
t669 = -pkin(4) * t715 - pkin(5) * t797;
t492 = t1001 * t515 - t669 * t997 - t1210;
t1030 = -pkin(3) * t676 + pkin(4) * t833 - pkin(11) * t717;
t496 = -t1000 * t592 - t595 * t996 + t1030;
t1114 = t1002 * t496 + t492 * t998;
t575 = -t1035 - t1217 + t912 + 0.2e1 * t1225;
t649 = -t831 * pkin(5) - t916 * qJ(6) + t885 * t920 + qJDD(6) + t697;
t624 = -pkin(5) * t792 + qJ(6) * t844 - t649;
t593 = qJ(6) * t1167 - t624 * t996 - t1206;
t508 = t1001 * t593 - t575 * t997 - t1209;
t1029 = -pkin(3) * t693 + pkin(4) * t792 - pkin(11) * t765;
t551 = -qJ(6) * t1195 - t1000 * t624 + t1029;
t1113 = t1002 * t551 + t508 * t998;
t588 = -t1216 + (-t865 - t916) * pkin(5) + t1034;
t642 = -qJ(6) * t865 + t649;
t738 = -pkin(5) * t1224 - qJ(6) * t817;
t594 = t1000 * t642 - t738 * t996 - t1205;
t514 = t1001 * t594 - t588 * t997 - t1208;
t1028 = -pkin(3) * t702 + pkin(4) * t1224 - pkin(11) * t770;
t553 = -t1000 * t738 - t642 * t996 + t1028;
t1112 = t1002 * t553 + t514 * t998;
t611 = -pkin(5) * t916 + t1034;
t541 = t1000 * t611 - t1199;
t520 = t1001 * t541 + t649 * t997;
t540 = t611 * t996 + t1170;
t1111 = -t1002 * t540 + t520 * t998;
t552 = -t573 - t1207;
t521 = t1001 * t552 + t1215 * t715 - t1210;
t531 = t1030 - t574;
t1110 = t1002 * t531 + t521 * t998;
t616 = -t1176 - t1217;
t653 = t1198 - t1206;
t543 = t1001 * t653 - t616 * t997 - t1209;
t599 = t1029 + t1169;
t1109 = t1002 * t599 + t543 * t998;
t617 = t641 - t1216;
t657 = t1169 - t1205;
t544 = t1001 * t657 - t617 * t997 - t1208;
t600 = t1028 - t1198;
t1108 = t1002 * t600 + t544 * t998;
t546 = t1001 * t574 + t697 * t997;
t1107 = -t1002 * t573 + t546 * t998;
t1106 = -t1002 * t803 + t656 * t998;
t718 = -t1000 * t792 - t1224 * t996;
t874 = -t917 + t916;
t685 = t1001 * t718 - t874 * t997;
t716 = -t1000 * t1224 + t792 * t996;
t1104 = t1002 * t716 + t685 * t998;
t887 = -t917 + t941;
t782 = -t887 * t996 - t1167;
t710 = t1001 * t782 - t797 * t997;
t780 = -t1000 * t887 + t1195;
t1101 = t1002 * t780 + t710 * t998;
t886 = t916 - t941;
t783 = t1000 * t886 - t1196;
t711 = t1001 * t783 - t793 * t997;
t781 = -t886 * t996 - t1168;
t1100 = t1002 * t781 + t711 * t998;
t789 = t1166 * t918 - t831 * t996;
t751 = t1001 * t789 - t1148;
t788 = -t1000 * t831 - t1190 * t918;
t1099 = t1002 * t788 + t751 * t998;
t791 = t1000 * t832 - t1190 * t920;
t752 = t1001 * t791 + t1148;
t790 = -t1166 * t920 - t832 * t996;
t1098 = t1002 * t790 + t752 * t998;
t825 = (-t1000 * t918 + t920 * t996) * t943;
t787 = t1001 * t825 + t893 * t997;
t824 = (t1000 * t920 + t918 * t996) * t943;
t1097 = t1002 * t824 + t787 * t998;
t860 = (-0.2e1 * qJD(4) + t981) * t949 - t1128;
t800 = t1001 * t860 - t862 * t997;
t906 = -t946 + t945;
t1096 = t1002 * t906 + t800 * t998;
t859 = t949 * t981 + t1128;
t864 = -t895 + t934;
t801 = -t1001 * t859 - t864 * t997;
t884 = t945 + t946;
t1095 = t1002 * t884 + t801 * t998;
t819 = t998 * t903 - t1175;
t753 = t1002 * t820 + t819 * t998;
t1094 = -t1002 * t819 + t820 * t998;
t900 = -t1149 - t945;
t829 = t1001 * t900 - t1223;
t1093 = t1002 * t860 + t829 * t998;
t907 = -t946 - t1149;
t837 = -t907 * t997 + t1164;
t1092 = -t1002 * t862 + t837 * t998;
t928 = -t946 + t1149;
t842 = -t928 * t997 + t1220;
t1091 = t1002 * t864 + t842 * t998;
t927 = t945 - t1149;
t843 = t1001 * t927 + t1193;
t1090 = t1002 * t859 + t843 * t998;
t1089 = t1002 * t930 + t933 * t998;
t931 = -t966 + t955;
t932 = t965 + t1174;
t1088 = -t1002 * t931 + t932 * t998;
t1087 = t1002 * t942 - t1187;
t956 = -t1141 + t1219;
t1086 = t1002 * t956 + t1188;
t1085 = t958 * t998 + t1161;
t957 = t1140 - t1219;
t1084 = t957 * t998 + t1160;
t486 = t1001 * t669 + t515 * t997 + t1179;
t435 = t1114 * t994 - t486 * t991 + t1135;
t1038 = (-t590 * t991 - t591 * t994) * pkin(9);
t443 = t1002 * t492 - t496 * t998 + t1038;
t1083 = t1003 * t435 + t443 * t999;
t513 = -t1203 * t715 + t552 * t997 + t1179;
t440 = t1110 * t994 - t513 * t991 + t1135;
t449 = t1002 * t521 - t531 * t998 + t1038;
t1082 = t1003 * t440 + t449 * t999;
t502 = t1001 * t575 + t593 * t997 + t1178;
t442 = t1113 * t994 - t502 * t991 + t1134;
t1037 = (-t608 * t991 - t609 * t994) * pkin(9);
t454 = t1002 * t508 - t551 * t998 + t1037;
t1081 = t1003 * t442 + t454 * t999;
t507 = t1001 * t588 + t594 * t997 + t1177;
t445 = t1112 * t994 - t507 * t991 + t1133;
t1036 = (-t613 * t991 - t614 * t994) * pkin(9);
t457 = t1002 * t514 - t553 * t998 + t1036;
t1080 = t1003 * t445 + t457 * t999;
t519 = -t1001 * t649 + t541 * t997;
t451 = t1111 * t994 - t519 * t991;
t474 = t1002 * t520 + t540 * t998;
t1079 = t1003 * t451 + t474 * t999;
t532 = t1001 * t616 + t653 * t997 + t1178;
t453 = t1109 * t994 - t532 * t991 + t1134;
t467 = t1002 * t543 - t599 * t998 + t1037;
t1078 = t1003 * t453 + t467 * t999;
t534 = t1001 * t617 + t657 * t997 + t1177;
t456 = t1108 * t994 - t534 * t991 + t1133;
t472 = t1002 * t544 - t600 * t998 + t1036;
t1077 = t1003 * t456 + t472 * t999;
t545 = -t1001 * t697 + t574 * t997;
t469 = t1107 * t994 - t545 * t991;
t501 = t1002 * t546 + t573 * t998;
t1076 = t1003 * t469 + t501 * t999;
t579 = t1106 * t994 - t655 * t991;
t635 = t1002 * t656 + t803 * t998;
t1075 = t1003 * t579 + t635 * t999;
t684 = t1001 * t874 + t718 * t997;
t598 = t1104 * t994 - t684 * t991;
t637 = t1002 * t685 - t716 * t998;
t1073 = t1003 * t598 + t637 * t999;
t708 = t1001 * t797 + t782 * t997;
t620 = t1101 * t994 - t708 * t991;
t666 = t1002 * t710 - t780 * t998;
t1070 = t1003 * t620 + t666 * t999;
t709 = t1001 * t793 + t783 * t997;
t621 = t1100 * t994 - t709 * t991;
t667 = t1002 * t711 - t781 * t998;
t1069 = t1003 * t621 + t667 * t999;
t749 = t789 * t997 + t1143;
t645 = t1099 * t994 - t749 * t991;
t679 = t1002 * t751 - t788 * t998;
t1068 = t1003 * t645 + t679 * t999;
t750 = t791 * t997 - t1143;
t646 = t1098 * t994 - t750 * t991;
t680 = t1002 * t752 - t790 * t998;
t1067 = t1003 * t646 + t680 * t999;
t786 = -t1001 * t893 + t825 * t997;
t672 = t1097 * t994 - t786 * t991;
t733 = t1002 * t787 - t824 * t998;
t1066 = t1003 * t672 + t733 * t999;
t799 = t1001 * t864 - t859 * t997;
t690 = t1095 * t994 - t799 * t991;
t756 = t1002 * t801 - t884 * t998;
t1065 = t1003 * t690 + t756 * t999;
t798 = t1001 * t862 + t860 * t997;
t700 = t1096 * t994 - t798 * t991;
t767 = t1002 * t800 - t906 * t998;
t1064 = t1003 * t700 + t767 * t999;
t724 = t1094 * t994 + t876 * t991;
t1063 = t1003 * t724 + t753 * t999;
t828 = t900 * t997 + t1220;
t729 = t1093 * t994 - t828 * t991;
t775 = t1002 * t829 - t860 * t998;
t1062 = t1003 * t729 + t775 * t999;
t836 = t1001 * t907 + t1193;
t737 = t1092 * t994 - t836 * t991;
t779 = t1002 * t837 + t862 * t998;
t1061 = t1003 * t737 + t779 * t999;
t840 = t1001 * t928 + t1223;
t741 = t1091 * t994 - t840 * t991;
t784 = t1002 * t842 - t864 * t998;
t1060 = t1003 * t741 + t784 * t999;
t841 = t927 * t997 - t1164;
t742 = t1090 * t994 - t841 * t991;
t785 = t1002 * t843 - t859 * t998;
t1059 = t1003 * t742 + t785 * t999;
t853 = -t997 * t894 - t1120;
t1043 = t853 * t998 + t1142;
t852 = t1001 * t894 - t1123;
t759 = t1043 * t994 - t852 * t991;
t814 = t1002 * t853 - t1147;
t1058 = t1003 * t759 + t814 * t999;
t855 = t1001 * t895 + t1124;
t1042 = t855 * t998 - t1142;
t854 = t997 * t895 - t1121;
t760 = t1042 * t994 - t854 * t991;
t815 = t1002 * t855 + t1147;
t1057 = t1003 * t760 + t815 * t999;
t880 = t1120 - t1124;
t1012 = t1002 * t1139 + t998 * t880;
t879 = t1123 + t1121;
t808 = t1012 * t994 - t991 * t879;
t851 = t1002 * t880 - t1139 * t998;
t1056 = t1003 * t808 + t851 * t999;
t964 = t1173 * t1157;
t849 = t1088 * t994 + t964 * t991;
t877 = t1002 * t932 + t931 * t998;
t1055 = t1003 * t849 + t877 * t999;
t963 = (t988 - t989) * t1157;
t850 = t1089 * t994 - t963 * t991;
t878 = t1002 * t933 - t930 * t998;
t1054 = t1003 * t850 + t878 * t999;
t929 = (t1150 + (qJD(3) + t983) * t1153) * t991;
t858 = t1087 * t994 - t929 * t991;
t1053 = t1003 * t858 + t902 * t999;
t871 = t1086 * t994 - t931 * t991;
t908 = -t956 * t998 + t1161;
t1052 = t1003 * t871 + t908 * t999;
t872 = t1084 * t994 - t932 * t991;
t909 = t1002 * t957 - t1187;
t1051 = t1003 * t872 + t909 * t999;
t873 = t1085 * t994 + t933 * t991;
t1050 = t1003 * t873 + t910 * t999;
t986 = t991 * t987;
t896 = (-t1156 * t986 + t1192) * t1002;
t921 = -t1145 * t989 - t1174 * t998;
t1049 = t1003 * t896 + t921 * t999;
t899 = (t955 * t994 + (t1004 * t986 + t1145 * t994) * t1002) * t998;
t922 = t1002 * t955 - t1145 * t988;
t1048 = t1003 * t899 + t922 * t999;
t867 = t1003 * t915 + t914 * t999;
t866 = t1003 * t914 - t999 * t915;
t1047 = qJD(2) * t983 - t1004 * t994;
t1041 = (-t499 * t992 - t500 * t995) * pkin(8);
t1040 = (-t517 * t992 - t518 * t995) * pkin(8);
t1039 = (-t523 * t992 - t524 * t995) * pkin(8);
t561 = -pkin(5) * t649 + qJ(6) * t611;
t475 = -pkin(11) * t540 - qJ(6) * t1170 - t561 * t996;
t505 = -pkin(4) * t540 - pkin(5) * t605;
t438 = -pkin(10) * t519 + t1001 * t475 - t505 * t997;
t448 = -pkin(3) * t519 + pkin(4) * t649 - pkin(11) * t541 + qJ(6) * t1199 - t1000 * t561;
t1017 = pkin(9) * t474 + t1002 * t448 + t438 * t998;
t436 = -pkin(3) * t540 + pkin(10) * t520 + t1001 * t505 + t475 * t997;
t450 = t1111 * t991 + t519 * t994;
t407 = -pkin(2) * t450 + t1017 * t994 - t436 * t991;
t409 = t1002 * t438 - t448 * t998 + (-t450 * t991 - t451 * t994) * pkin(9);
t437 = t1003 * t474 - t451 * t999;
t1027 = pkin(8) * t437 + t1003 * t407 + t409 * t999;
t473 = -pkin(10) * t545 + (-pkin(11) * t1001 + t1215) * t573;
t493 = -pkin(3) * t545 + pkin(4) * t697 - pkin(11) * t574;
t1016 = pkin(9) * t501 + t1002 * t493 + t473 * t998;
t459 = pkin(10) * t546 + (-pkin(11) * t997 - pkin(3) - t1203) * t573;
t468 = t1107 * t991 + t545 * t994;
t419 = -pkin(2) * t468 + t1016 * t994 - t459 * t991;
t427 = t1002 * t473 - t493 * t998 + (-t468 * t991 - t469 * t994) * pkin(9);
t446 = t1003 * t501 - t469 * t999;
t1026 = pkin(8) * t446 + t1003 * t419 + t427 * t999;
t1010 = pkin(9) * t635 + t1122 * t655;
t578 = t1106 * t991 + t655 * t994;
t636 = -pkin(3) * t803 + pkin(10) * t656;
t485 = -pkin(2) * t578 + t1010 * t994 - t636 * t991;
t487 = (-pkin(10) * t1002 + t1218) * t655 + (-t578 * t991 - t579 * t994) * pkin(9);
t533 = t1003 * t635 - t579 * t999;
t1025 = pkin(8) * t533 + t1003 * t485 + t487 * t999;
t634 = -pkin(10) * t799 - t655;
t1011 = pkin(9) * t756 - t1204 * t799 + t634 * t998;
t627 = pkin(3) * t884 + pkin(10) * t801 + t656;
t689 = t1095 * t991 + t799 * t994;
t526 = -pkin(2) * t689 + t1011 * t994 - t627 * t991;
t554 = t799 * t1218 + t1002 * t634 + (-t689 * t991 - t690 * t994) * pkin(9);
t648 = t1003 * t756 - t690 * t999;
t1024 = pkin(8) * t648 + t1003 * t526 + t554 * t999;
t686 = -pkin(3) * t828 + t734;
t743 = -pkin(10) * t828 + t1197;
t1015 = pkin(9) * t775 + t1002 * t686 + t743 * t998;
t712 = pkin(3) * t860 + pkin(10) * t829 - t1165;
t728 = t1093 * t991 + t828 * t994;
t563 = -pkin(2) * t728 + t1015 * t994 - t712 * t991;
t581 = t1002 * t743 - t686 * t998 + (-t728 * t991 - t729 * t994) * pkin(9);
t668 = t1003 * t775 - t729 * t999;
t1023 = pkin(8) * t668 + t1003 * t563 + t581 * t999;
t691 = -pkin(3) * t836 + t735;
t744 = -pkin(10) * t836 + t1165;
t1014 = pkin(9) * t779 + t1002 * t691 + t744 * t998;
t713 = -pkin(3) * t862 + pkin(10) * t837 + t1197;
t736 = t1092 * t991 + t836 * t994;
t568 = -pkin(2) * t736 + t1014 * t994 - t713 * t991;
t587 = t1002 * t744 - t691 * t998 + (-t736 * t991 - t737 * t994) * pkin(9);
t670 = t1003 * t779 - t737 * t999;
t1022 = pkin(8) * t670 + t1003 * t568 + t587 * t999;
t723 = t1094 * t991 - t876 * t994;
t647 = (-t723 * t991 - t724 * t994) * pkin(9);
t663 = t1003 * t753 - t724 * t999;
t664 = -pkin(2) * t723 + t1211 * t753;
t1021 = pkin(8) * t663 + t1003 * t664 + t647 * t999;
t847 = t1088 * t991 - t964 * t994;
t678 = (-t847 * t991 - t849 * t994) * pkin(9) - t1094;
t1013 = pkin(9) * t877 + t753;
t688 = -pkin(2) * t847 + t1013 * t994;
t805 = t1003 * t877 - t849 * t999;
t1020 = pkin(8) * t805 + t1003 * t688 + t678 * t999;
t857 = t1087 * t991 + t929 * t994;
t720 = -pkin(2) * t857 + t1119 * t994 + t820 * t991;
t754 = -t1163 + (-t857 * t991 - t858 * t994) * pkin(9);
t813 = t1003 * t902 - t858 * t999;
t1019 = pkin(8) * t813 + t1003 * t720 + t754 * t999;
t870 = t1085 * t991 - t1192;
t731 = -pkin(2) * t870 + t1117 * t994 + t819 * t991;
t755 = -t1194 + (-t870 * t991 - t873 * t994) * pkin(9);
t823 = t1003 * t910 - t873 * t999;
t1018 = pkin(8) * t823 + t1003 * t731 + t755 * t999;
t962 = t974 * t995;
t960 = t974 * t992;
t959 = t1046 * t992;
t926 = -t1046 * t993 - t962 * t990;
t924 = -t1046 * t990 + t962 * t993;
t904 = t982 * t991 * t999 + t1003 * t935;
t898 = (t1047 * t1159 + t955 * t991) * t998;
t897 = (-t1047 * t987 * t998 + t1174 * t991) * t1002;
t883 = -t1031 + (t959 * t992 + t961 * t995) * pkin(8);
t882 = -t1032 + (-t960 * t992 - t962 * t995) * pkin(8);
t881 = t995 * t1191 + (-t1158 * t995 - t992 * t994) * t982;
t869 = t1084 * t991 + t932 * t994;
t868 = t1086 * t991 + t931 * t994;
t856 = t867 * t995;
t848 = t1089 * t991 + t963 * t994;
t846 = t1003 * t922 - t899 * t999;
t845 = t1003 * t921 - t896 * t999;
t839 = -pkin(1) * t960 + t1031 * t995 - t1046 * t1213 + t992 * t914;
t838 = pkin(1) * t959 - t1032 * t995 - t1213 * t974 + t992 * t915;
t835 = t992 * t967 + (t1131 - t866) * t995;
t834 = -t1116 * t995 - t866 * t992;
t822 = t1003 * t909 - t872 * t999;
t821 = t1003 * t908 - t871 * t999;
t810 = t1048 * t995 - t898 * t992;
t809 = t1049 * t995 - t897 * t992;
t807 = t1012 * t991 + t994 * t879;
t806 = t1003 * t878 - t850 * t999;
t778 = -pkin(1) * t834 + t1213 * t867;
t777 = -t835 * t990 + t867 * t993;
t776 = t835 * t993 + t867 * t990;
t774 = t1050 * t995 - t870 * t992;
t773 = t1051 * t995 - t869 * t992;
t772 = t1052 * t995 - t868 * t992;
t771 = t1050 * t992 + t870 * t995;
t766 = (-t834 * t992 - t835 * t995) * pkin(8);
t762 = t1053 * t995 - t857 * t992;
t761 = t1053 * t992 + t857 * t995;
t758 = t1042 * t991 + t854 * t994;
t757 = t1043 * t991 + t852 * t994;
t748 = t1003 * t851 - t808 * t999;
t747 = t1054 * t995 - t848 * t992;
t746 = t1055 * t995 - t847 * t992;
t745 = t1055 * t992 + t847 * t995;
t740 = t1090 * t991 + t841 * t994;
t739 = t1091 * t991 + t840 * t994;
t730 = pkin(2) * t873 + t1117 * t991 - t819 * t994;
t722 = -t774 * t990 + t823 * t993;
t721 = t774 * t993 + t823 * t990;
t719 = pkin(2) * t858 + t1119 * t991 - t820 * t994;
t707 = -t762 * t990 + t813 * t993;
t706 = t762 * t993 + t813 * t990;
t705 = t1003 * t815 - t760 * t999;
t704 = t1003 * t814 - t759 * t999;
t699 = t1096 * t991 + t798 * t994;
t687 = pkin(2) * t849 + t1013 * t991;
t683 = t1056 * t995 - t807 * t992;
t682 = -t746 * t990 + t805 * t993;
t681 = t746 * t993 + t805 * t990;
t674 = t1003 * t785 - t742 * t999;
t673 = t1003 * t784 - t741 * t999;
t671 = t1097 * t991 + t786 * t994;
t665 = pkin(2) * t724 + t1212 * t753;
t661 = t1057 * t995 - t758 * t992;
t660 = t1058 * t995 - t757 * t992;
t654 = t1003 * t767 - t700 * t999;
t644 = t1098 * t991 + t750 * t994;
t643 = t1099 * t991 + t749 * t994;
t639 = t1059 * t995 - t740 * t992;
t638 = t1060 * t995 - t739 * t992;
t633 = t1003 * t733 - t672 * t999;
t632 = t1061 * t995 - t736 * t992;
t631 = t1061 * t992 + t736 * t995;
t626 = t1062 * t995 - t728 * t992;
t625 = t1062 * t992 + t728 * t995;
t623 = t1063 * t995 - t723 * t992;
t622 = t1063 * t992 + t723 * t995;
t619 = t1100 * t991 + t709 * t994;
t618 = t1101 * t991 + t708 * t994;
t615 = t1003 * t755 - t731 * t999 + (-t771 * t992 - t774 * t995) * pkin(8);
t610 = t1064 * t995 - t699 * t992;
t606 = t1003 * t754 - t720 * t999 + (-t761 * t992 - t762 * t995) * pkin(8);
t604 = t1065 * t995 - t689 * t992;
t603 = t1065 * t992 + t689 * t995;
t602 = t1003 * t680 - t646 * t999;
t601 = t1003 * t679 - t645 * t999;
t597 = t1104 * t991 + t684 * t994;
t596 = -pkin(1) * t771 + t1018 * t995 - t730 * t992;
t586 = -pkin(1) * t761 + t1019 * t995 - t719 * t992;
t585 = t1066 * t995 - t671 * t992;
t584 = t1066 * t992 + t671 * t995;
t583 = -t632 * t990 + t670 * t993;
t582 = t632 * t993 + t670 * t990;
t580 = t1003 * t678 - t688 * t999 + (-t745 * t992 - t746 * t995) * pkin(8);
t577 = -t626 * t990 + t668 * t993;
t576 = t626 * t993 + t668 * t990;
t572 = t1003 * t667 - t621 * t999;
t571 = t1003 * t666 - t620 * t999;
t570 = -t623 * t990 + t663 * t993;
t569 = t623 * t993 + t663 * t990;
t567 = pkin(2) * t737 + t1014 * t991 + t713 * t994;
t562 = pkin(2) * t729 + t1015 * t991 + t712 * t994;
t557 = -pkin(1) * t745 + t1020 * t995 - t687 * t992;
t556 = -t604 * t990 + t648 * t993;
t555 = t604 * t993 + t648 * t990;
t550 = t1067 * t995 - t644 * t992;
t549 = t1068 * t995 - t643 * t992;
t548 = t1067 * t992 + t644 * t995;
t547 = t1068 * t992 + t643 * t995;
t542 = t1003 * t637 - t598 * t999;
t536 = -t585 * t990 + t633 * t993;
t535 = t585 * t993 + t633 * t990;
t530 = t1069 * t995 - t619 * t992;
t529 = t1070 * t995 - t618 * t992;
t528 = t1069 * t992 + t619 * t995;
t527 = t1070 * t992 + t618 * t995;
t525 = pkin(2) * t690 + t1011 * t991 + t627 * t994;
t512 = -t550 * t990 + t602 * t993;
t511 = -t549 * t990 + t601 * t993;
t510 = t550 * t993 + t602 * t990;
t509 = t549 * t993 + t601 * t990;
t506 = t1003 * t647 - t664 * t999 + (-t622 * t992 - t623 * t995) * pkin(8);
t504 = t1073 * t995 - t597 * t992;
t503 = t1073 * t992 + t597 * t995;
t497 = -pkin(1) * t622 + t1021 * t995 - t665 * t992;
t495 = t1075 * t995 - t578 * t992;
t494 = t1075 * t992 + t578 * t995;
t491 = -t530 * t990 + t572 * t993;
t490 = -t529 * t990 + t571 * t993;
t489 = t530 * t993 + t572 * t990;
t488 = t529 * t993 + t571 * t990;
t484 = pkin(2) * t579 + t1010 * t991 + t636 * t994;
t483 = -t524 * t990 + t566 * t993;
t481 = qJ(1) * t483;
t480 = -t518 * t990 + t560 * t993;
t478 = qJ(1) * t480;
t477 = t1003 * t587 - t568 * t999 + (-t631 * t992 - t632 * t995) * pkin(8);
t476 = t1003 * t581 - t563 * t999 + (-t625 * t992 - t626 * t995) * pkin(8);
t471 = -t504 * t990 + t542 * t993;
t470 = t504 * t993 + t542 * t990;
t466 = -t500 * t990 + t539 * t993;
t464 = qJ(1) * t466;
t463 = -pkin(1) * t631 + t1022 * t995 - t567 * t992;
t462 = -t495 * t990 + t533 * t993;
t461 = t495 * t993 + t533 * t990;
t460 = -pkin(1) * t625 + t1023 * t995 - t562 * t992;
t458 = t1003 * t554 - t526 * t999 + (-t603 * t992 - t604 * t995) * pkin(8);
t455 = t1108 * t991 + t534 * t994 + t1180;
t452 = t1109 * t991 + t532 * t994 + t1181;
t447 = -pkin(1) * t603 + t1024 * t995 - t525 * t992;
t444 = t1112 * t991 + t507 * t994 + t1180;
t441 = t1113 * t991 + t502 * t994 + t1181;
t439 = t1110 * t991 + t513 * t994 + t1182;
t434 = t1114 * t991 + t486 * t994 + t1182;
t433 = t1076 * t995 - t468 * t992;
t432 = t1076 * t992 + t468 * t995;
t431 = t1003 * t487 - t485 * t999 + (-t494 * t992 - t495 * t995) * pkin(8);
t430 = t1003 * t472 - t456 * t999 + t1039;
t429 = t1003 * t467 - t453 * t999 + t1040;
t428 = -pkin(1) * t494 + t1025 * t995 - t484 * t992;
t426 = t1079 * t995 - t450 * t992;
t425 = t1079 * t992 + t450 * t995;
t424 = t1003 * t457 - t445 * t999 + t1039;
t423 = -t433 * t990 + t446 * t993;
t422 = t433 * t993 + t446 * t990;
t421 = t1003 * t454 - t442 * t999 + t1040;
t420 = t1077 * t995 - t455 * t992 + t1136;
t418 = pkin(2) * t469 + t1016 * t991 + t459 * t994;
t417 = t1078 * t995 - t452 * t992 + t1137;
t416 = t1003 * t449 - t440 * t999 + t1041;
t415 = t1080 * t995 - t444 * t992 + t1136;
t414 = t1003 * t443 - t435 * t999 + t1041;
t413 = t1081 * t995 - t441 * t992 + t1137;
t412 = -t426 * t990 + t437 * t993;
t411 = t426 * t993 + t437 * t990;
t410 = t1082 * t995 - t439 * t992 + t1138;
t408 = t1083 * t995 - t434 * t992 + t1138;
t406 = pkin(2) * t451 + t1017 * t991 + t436 * t994;
t405 = t1003 * t427 - t419 * t999 + (-t432 * t992 - t433 * t995) * pkin(8);
t404 = -pkin(1) * t432 + t1026 * t995 - t418 * t992;
t403 = t1003 * t409 - t407 * t999 + (-t425 * t992 - t426 * t995) * pkin(8);
t402 = -pkin(1) * t425 + t1027 * t995 - t406 * t992;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t937, 0, 0, 0, 0, 0, 0, t926, t925, 0, t777, 0, 0, 0, 0, 0, 0, t722, t707, t682, t570, 0, 0, 0, 0, 0, 0, t577, t583, t556, t462, 0, 0, 0, 0, 0, 0, t480, t483, t466, t423, 0, 0, 0, 0, 0, 0, t480, t483, t466, t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1118, 0, 0, 0, 0, 0, 0, t924, -t1115, 0, t776, 0, 0, 0, 0, 0, 0, t721, t706, t681, t569, 0, 0, 0, 0, 0, 0, t576, t582, t555, t461, 0, 0, 0, 0, 0, 0, t479, t482, t465, t422, 0, 0, 0, 0, 0, 0, t479, t482, t465, t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1186, 0, 0, 0, 0, 0, 0, t960, -t959, 0, t834, 0, 0, 0, 0, 0, 0, t771, t761, t745, t622, 0, 0, 0, 0, 0, 0, t625, t631, t603, t494, 0, 0, 0, 0, 0, 0, t517, t523, t499, t432, 0, 0, 0, 0, 0, 0, t517, t523, t499, t425; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1222, -t1221, t1118, qJ(1) * t1118, 0, 0, -t925, 0, t926, t990 * t1151, -qJ(1) * t924 - t839 * t990 + t882 * t993, qJ(1) * t1115 - t838 * t990 + t883 * t993, -t856 * t990 + t866 * t993, -qJ(1) * t776 + t766 * t993 - t778 * t990, -t810 * t990 + t846 * t993, -t747 * t990 + t806 * t993, -t772 * t990 + t821 * t993, -t809 * t990 + t845 * t993, -t773 * t990 + t822 * t993, -t881 * t990 + t904 * t993, -qJ(1) * t721 - t596 * t990 + t615 * t993, -qJ(1) * t706 - t586 * t990 + t606 * t993, -qJ(1) * t681 - t557 * t990 + t580 * t993, -qJ(1) * t569 - t497 * t990 + t506 * t993, -t661 * t990 + t705 * t993, -t610 * t990 + t654 * t993, -t638 * t990 + t673 * t993, -t660 * t990 + t704 * t993, -t639 * t990 + t674 * t993, -t683 * t990 + t748 * t993, -qJ(1) * t576 - t460 * t990 + t476 * t993, -qJ(1) * t582 - t463 * t990 + t477 * t993, -qJ(1) * t555 - t447 * t990 + t458 * t993, -qJ(1) * t461 - t428 * t990 + t431 * t993, t512, t471, t490, t511, t491, t536, -t417 * t990 + t429 * t993 - t1201, -t420 * t990 + t430 * t993 - t1200, -t410 * t990 + t416 * t993 - t1202, -qJ(1) * t422 - t404 * t990 + t405 * t993, t512, t471, t490, t511, t491, t536, -t413 * t990 + t421 * t993 - t1201, -t415 * t990 + t424 * t993 - t1200, -t408 * t990 + t414 * t993 - t1202, -qJ(1) * t411 - t402 * t990 + t403 * t993; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1221, -t1222, t937, qJ(1) * t937, 0, 0, t1115, 0, t924, -t993 * t1151, qJ(1) * t926 + t839 * t993 + t882 * t990, qJ(1) * t925 + t838 * t993 + t883 * t990, t856 * t993 + t866 * t990, qJ(1) * t777 + t766 * t990 + t778 * t993, t810 * t993 + t846 * t990, t747 * t993 + t806 * t990, t772 * t993 + t821 * t990, t809 * t993 + t845 * t990, t773 * t993 + t822 * t990, t881 * t993 + t904 * t990, qJ(1) * t722 + t596 * t993 + t615 * t990, qJ(1) * t707 + t586 * t993 + t606 * t990, qJ(1) * t682 + t557 * t993 + t580 * t990, qJ(1) * t570 + t497 * t993 + t506 * t990, t661 * t993 + t705 * t990, t610 * t993 + t654 * t990, t638 * t993 + t673 * t990, t660 * t993 + t704 * t990, t639 * t993 + t674 * t990, t683 * t993 + t748 * t990, qJ(1) * t577 + t460 * t993 + t476 * t990, qJ(1) * t583 + t463 * t993 + t477 * t990, qJ(1) * t556 + t447 * t993 + t458 * t990, qJ(1) * t462 + t428 * t993 + t431 * t990, t510, t470, t488, t509, t489, t535, t417 * t993 + t429 * t990 + t478, t420 * t993 + t430 * t990 + t481, t410 * t993 + t416 * t990 + t464, qJ(1) * t423 + t404 * t993 + t405 * t990, t510, t470, t488, t509, t489, t535, t413 * t993 + t421 * t990 + t478, t415 * t993 + t424 * t990 + t481, t408 * t993 + t414 * t990 + t464, qJ(1) * t412 + t402 * t993 + t403 * t990; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1132, t1125, 0, 0, 0, 0, t959, 0, t960, t995 * qJDD(2), pkin(1) * t962 - t995 * t914 + (-pkin(8) * t1046 + t1031) * t992, -pkin(1) * t961 - t995 * t915 + (-pkin(8) * t974 - t1032) * t992, t867 * t992, pkin(1) * t835 + t1214 * t867, t1048 * t992 + t898 * t995, t1054 * t992 + t848 * t995, t1052 * t992 + t868 * t995, t1049 * t992 + t897 * t995, t1051 * t992 + t869 * t995, t992 * t1191 + (-t1158 * t992 + t994 * t995) * t982, pkin(1) * t774 + t1018 * t992 + t730 * t995, pkin(1) * t762 + t1019 * t992 + t719 * t995, pkin(1) * t746 + t1020 * t992 + t687 * t995, pkin(1) * t623 + t1021 * t992 + t665 * t995, t1057 * t992 + t758 * t995, t1064 * t992 + t699 * t995, t1060 * t992 + t739 * t995, t1058 * t992 + t757 * t995, t1059 * t992 + t740 * t995, t1056 * t992 + t807 * t995, pkin(1) * t626 + t1023 * t992 + t562 * t995, pkin(1) * t632 + t1022 * t992 + t567 * t995, pkin(1) * t604 + t1024 * t992 + t525 * t995, pkin(1) * t495 + t1025 * t992 + t484 * t995, t548, t503, t527, t547, t528, t584, t1078 * t992 + t452 * t995 + t1184, t1077 * t992 + t455 * t995 + t1183, t1082 * t992 + t439 * t995 + t1185, pkin(1) * t433 + t1026 * t992 + t418 * t995, t548, t503, t527, t547, t528, t584, t1081 * t992 + t441 * t995 + t1184, t1080 * t992 + t444 * t995 + t1183, t1083 * t992 + t434 * t995 + t1185, pkin(1) * t426 + t1027 * t992 + t406 * t995;];
tauB_reg  = t1;
