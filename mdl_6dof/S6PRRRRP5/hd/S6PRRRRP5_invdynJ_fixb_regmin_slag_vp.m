% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6PRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x27]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRP5_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP5_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP5_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP5_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:25:56
% EndTime: 2019-03-09 00:26:23
% DurationCPUTime: 12.36s
% Computational Cost: add. (8313->616), mult. (21083->887), div. (0->0), fcn. (18090->14), ass. (0->296)
t235 = sin(pkin(7));
t242 = sin(qJ(3));
t246 = cos(qJ(3));
t285 = (pkin(3) * t242 - pkin(10) * t246) * t235;
t236 = sin(pkin(6));
t243 = sin(qJ(2));
t381 = t236 * t243;
t334 = qJD(1) * t381;
t439 = qJD(3) * t285 - t235 * t334;
t237 = cos(pkin(7));
t247 = cos(qJ(2));
t369 = t246 * t247;
t375 = t242 * t243;
t282 = -t237 * t375 + t369;
t161 = t282 * t236;
t384 = t235 * t242;
t225 = pkin(9) * t384;
t378 = t237 * t246;
t420 = pkin(2) * t378 - t225;
t435 = qJD(1) * t161 - qJD(3) * t420;
t379 = t237 * t242;
t382 = t235 * t246;
t363 = pkin(2) * t379 + pkin(9) * t382;
t169 = pkin(10) * t237 + t363;
t293 = -pkin(3) * t246 - pkin(10) * t242;
t170 = (-pkin(2) + t293) * t235;
t241 = sin(qJ(4));
t245 = cos(qJ(4));
t353 = qJD(4) * t245;
t354 = qJD(4) * t241;
t438 = -t169 * t354 + t170 * t353 + t241 * t439 - t245 * t435;
t373 = t243 * t246;
t374 = t242 * t247;
t284 = t237 * t373 + t374;
t160 = t284 * t236;
t421 = -qJD(1) * t160 + qJD(3) * t363;
t358 = qJD(2) * t235;
t223 = t246 * t358;
t290 = t223 - qJD(4);
t356 = qJD(3) * t242;
t329 = t235 * t356;
t437 = -pkin(11) * t329 - t438;
t186 = -t237 * t245 + t241 * t384;
t355 = qJD(3) * t246;
t327 = t245 * t355;
t129 = -qJD(4) * t186 + t235 * t327;
t383 = t235 * t245;
t187 = t237 * t241 + t242 * t383;
t328 = t241 * t355;
t130 = qJD(4) * t187 + t235 * t328;
t436 = -pkin(4) * t130 + pkin(11) * t129 - t421;
t192 = pkin(9) * t358 + t334;
t359 = qJD(1) * t247;
t203 = qJD(2) * pkin(2) + t236 * t359;
t238 = cos(pkin(6));
t360 = qJD(1) * t238;
t335 = t235 * t360;
t104 = t192 * t246 + t203 * t379 + t242 * t335;
t434 = -t104 - t290 * (pkin(4) * t241 - pkin(11) * t245);
t240 = sin(qJ(5));
t244 = cos(qJ(5));
t350 = qJD(5) * t244;
t351 = qJD(5) * t240;
t168 = t225 + (-pkin(2) * t246 - pkin(3)) * t237;
t95 = pkin(4) * t186 - pkin(11) * t187 + t168;
t366 = t169 * t245 + t170 * t241;
t97 = -pkin(11) * t382 + t366;
t433 = t240 * t436 + t244 * t437 - t95 * t350 + t351 * t97;
t393 = sin(pkin(12));
t313 = t393 * t247;
t394 = cos(pkin(12));
t316 = t394 * t243;
t184 = t238 * t316 + t313;
t314 = t393 * t243;
t315 = t394 * t247;
t262 = -t238 * t315 + t314;
t256 = t262 * t246;
t318 = t236 * t394;
t295 = t235 * t318;
t89 = t184 * t242 + t237 * t256 + t246 * t295;
t185 = -t238 * t314 + t315;
t263 = t238 * t313 + t316;
t258 = t263 * t246;
t317 = t236 * t393;
t294 = t235 * t317;
t91 = t185 * t242 + t237 * t258 - t246 * t294;
t296 = -g(1) * t91 - g(2) * t89;
t417 = t237 * t369 - t375;
t127 = -t236 * t417 - t238 * t382;
t408 = g(3) * t127;
t274 = -t296 + t408;
t346 = qJDD(2) * t237;
t224 = qJDD(3) + t346;
t380 = t236 * t247;
t222 = qJDD(1) * t380;
t332 = qJD(2) * t381;
t298 = qJD(1) * t332;
t166 = qJDD(2) * pkin(2) + t222 - t298;
t347 = qJDD(1) * t238;
t323 = t235 * t347;
t330 = qJD(3) * t235 * t238;
t388 = t203 * t237;
t409 = pkin(9) * t235;
t428 = qJDD(2) * t409 + (qJD(2) * t359 + qJDD(1) * t243) * t236 + qJD(1) * t330 + qJD(3) * t388;
t287 = -t166 * t378 + t192 * t355 + t242 * t428 - t246 * t323;
t33 = -t224 * pkin(3) + t287;
t432 = t33 - t274;
t401 = t240 * t95 + t244 * t97;
t431 = -qJD(5) * t401 + t240 * t437 - t244 * t436;
t430 = t169 * t353 + t170 * t354 - t241 * t435 - t245 * t439;
t357 = qJD(2) * t237;
t306 = qJD(3) + t357;
t333 = t242 * t358;
t157 = t241 * t333 - t245 * t306;
t239 = -qJ(6) - pkin(11);
t429 = -qJ(6) * t157 + qJD(5) * t239;
t289 = qJD(4) * t306;
t345 = qJDD(2) * t242;
t85 = -t245 * t224 + t235 * (qJD(2) * (t242 * t353 + t328) + t241 * t345) + t241 * t289;
t338 = t240 * t382;
t132 = t187 * t244 - t338;
t370 = t244 * t246;
t131 = t187 * t240 + t235 * t370;
t60 = qJD(5) * t131 - t129 * t244 - t240 * t329;
t427 = pkin(5) * t130 + qJ(6) * t60 - qJD(6) * t132 + t431;
t61 = -qJD(5) * t338 + t129 * t240 + t187 * t350 - t244 * t329;
t426 = qJ(6) * t61 + qJD(6) * t131 + t433;
t348 = qJD(2) * qJD(3);
t325 = t242 * t348;
t343 = qJDD(2) * t246;
t221 = t235 * t343;
t342 = qJDD(4) - t221;
t269 = t235 * t325 + t342;
t425 = pkin(10) * t269;
t231 = pkin(5) * t244 + pkin(4);
t424 = -t231 * t245 - pkin(3);
t410 = pkin(5) * t240;
t336 = pkin(10) + t410;
t395 = -pkin(4) * t329 + t430;
t340 = pkin(10) * t354;
t423 = t240 * t340 + t244 * t434;
t159 = t241 * t306 + t245 * t333;
t422 = t290 * t159;
t377 = t241 * t224;
t261 = t245 * t289 + t377;
t268 = -t242 * t354 + t327;
t344 = qJDD(2) * t245;
t321 = t242 * t344;
t250 = t261 + (qJD(2) * t268 + t321) * t235;
t283 = t237 * t374 + t373;
t128 = t236 * t283 + t238 * t384;
t183 = -t235 * t380 + t237 * t238;
t94 = t128 * t245 + t183 * t241;
t47 = t127 * t244 - t240 * t94;
t251 = t235 * t262 - t237 * t318;
t257 = t262 * t242;
t90 = t184 * t246 - t237 * t257 - t242 * t295;
t50 = t241 * t251 + t245 * t90;
t252 = t235 * t263 + t237 * t317;
t92 = t185 * t246 + (-t237 * t263 + t294) * t242;
t52 = t241 * t252 + t245 * t92;
t419 = -g(1) * (-t240 * t52 + t244 * t91) - g(2) * (-t240 * t50 + t244 * t89) - g(3) * t47;
t299 = t245 * t223;
t418 = t299 - t353;
t213 = -pkin(4) * t245 - pkin(11) * t241 - pkin(3);
t103 = -t242 * t192 + t246 * (t335 + t388);
t174 = qJD(2) * t285;
t367 = t103 * t245 + t174 * t241;
t57 = pkin(11) * t333 + t367;
t416 = -t213 * t350 - t240 * t434 + t244 * t57;
t118 = t159 * t244 - t240 * t290;
t35 = qJD(5) * t118 + t240 * t250 - t244 * t269;
t414 = t118 ^ 2;
t248 = qJD(2) ^ 2;
t407 = g(3) * t128;
t220 = t237 * t360;
t114 = t220 + (qJD(2) * t293 - t203) * t235;
t88 = pkin(10) * t306 + t104;
t42 = t114 * t241 + t245 * t88;
t37 = -pkin(11) * t290 + t42;
t87 = -pkin(3) * t306 - t103;
t44 = pkin(4) * t157 - pkin(11) * t159 + t87;
t19 = -t240 * t37 + t244 * t44;
t14 = -qJ(6) * t118 + t19;
t147 = qJD(5) + t157;
t13 = pkin(5) * t147 + t14;
t406 = -t14 + t13;
t102 = pkin(4) * t159 + pkin(11) * t157;
t41 = t114 * t245 - t241 * t88;
t405 = t102 * t240 + t244 * t41;
t144 = (t240 * t242 + t245 * t370) * t358;
t371 = t244 * t245;
t229 = pkin(10) * t371;
t300 = t241 * t223;
t349 = qJD(6) * t244;
t391 = qJ(6) * t241;
t403 = -pkin(5) * t300 + qJ(6) * t144 + t240 * t57 - t241 * t349 + (pkin(5) * t241 - qJ(6) * t371) * qJD(4) + (-t229 + (-t213 + t391) * t240) * qJD(5) + t423;
t143 = t240 * t299 - t244 * t333;
t376 = t241 * t244;
t402 = qJ(6) * t143 + (-pkin(10) * qJD(4) - qJ(6) * qJD(5)) * t376 + (-qJD(6) * t241 + (-pkin(10) * qJD(5) - qJ(6) * qJD(4)) * t245) * t240 - t416;
t309 = t244 * t290;
t34 = qJD(5) * t309 + t159 * t351 - t240 * t269 - t244 * t250;
t400 = t240 * t34;
t78 = qJDD(5) + t85;
t399 = t240 * t78;
t398 = t244 * t78;
t397 = t240 * t429 + t349 - t405;
t99 = t244 * t102;
t396 = -pkin(5) * t159 - t99 + t429 * t244 + (-qJD(6) + t41) * t240;
t116 = t159 * t240 + t309;
t390 = t116 * t147;
t389 = t118 * t147;
t310 = t147 * t244;
t232 = t235 ^ 2;
t386 = t232 * t248;
t385 = t235 * t241;
t372 = t243 * t248;
t368 = qJDD(1) - g(3);
t362 = t213 * t240 + t229;
t233 = t242 ^ 2;
t361 = -t246 ^ 2 + t233;
t352 = qJD(5) * t147;
t339 = t235 * t381;
t326 = t235 * t237 * t248;
t324 = t246 * t348;
t320 = -t240 * t97 + t244 * t95;
t264 = -t166 * t379 + t192 * t356 - t242 * t323 - t246 * t428;
t32 = pkin(10) * t224 - t264;
t219 = t237 * t347;
t271 = t325 - t343;
t272 = t324 + t345;
t69 = t219 + (pkin(3) * t271 - pkin(10) * t272 - t166) * t235;
t312 = t114 * t354 + t241 * t32 - t245 * t69 + t353 * t88;
t311 = -t169 * t241 + t170 * t245;
t308 = t246 * t290;
t307 = qJD(4) * t290;
t305 = qJD(3) + 0.2e1 * t357;
t304 = t224 + t346;
t303 = t232 * t236 * t372;
t301 = t235 * t332;
t96 = pkin(4) * t382 - t311;
t291 = t244 * t353 - t144;
t20 = t240 * t44 + t244 * t37;
t48 = t127 * t240 + t244 * t94;
t93 = t128 * t241 - t183 * t245;
t18 = t85 * pkin(4) - pkin(11) * t250 + t33;
t278 = -t114 * t353 - t241 * t69 - t245 * t32 + t354 * t88;
t9 = pkin(11) * t269 - t278;
t286 = -t18 * t240 - t244 * t9 - t350 * t44 + t351 * t37;
t36 = pkin(4) * t290 - t41;
t280 = -pkin(11) * t78 + t147 * t36;
t49 = t241 * t90 - t245 * t251;
t51 = t241 * t92 - t245 * t252;
t277 = g(1) * t51 + g(2) * t49 + g(3) * t93;
t276 = -g(1) * t52 - g(2) * t50 - g(3) * t94;
t120 = t161 * t241 - t245 * t339;
t109 = -t184 * t379 - t256;
t70 = t109 * t241 - t184 * t383;
t111 = -t185 * t379 - t258;
t72 = t111 * t241 - t185 * t383;
t275 = -g(1) * t72 - g(2) * t70 - g(3) * t120;
t273 = g(1) * t92 + g(2) * t90 + t407;
t100 = t241 * t103;
t56 = -pkin(4) * t333 - t174 * t245 + t100;
t265 = t272 * t235;
t260 = pkin(10) * t352 - t274;
t4 = -qJD(5) * t20 + t18 * t244 - t240 * t9;
t10 = -pkin(4) * t269 + t312;
t255 = pkin(11) * t352 + t10 - t277;
t5 = pkin(5) * t35 + qJDD(6) + t10;
t215 = t239 * t244;
t214 = t239 * t240;
t194 = t244 * t213;
t146 = -t203 * t235 + t220;
t133 = -t240 * t391 + t362;
t126 = -qJ(6) * t376 + t194 + (-pkin(10) * t240 - pkin(5)) * t245;
t124 = -t166 * t235 + t219;
t121 = t161 * t245 + t241 * t339;
t115 = t116 ^ 2;
t110 = t185 * t378 - t242 * t263;
t108 = t184 * t378 - t257;
t82 = t246 * t330 + (qJD(2) * t282 + qJD(3) * t417) * t236;
t81 = t238 * t329 + (qJD(2) * t284 + qJD(3) * t283) * t236;
t73 = t111 * t245 + t185 * t385;
t71 = t109 * t245 + t184 * t385;
t29 = -qJD(4) * t93 + t241 * t301 + t245 * t82;
t28 = qJD(4) * t94 + t241 * t82 - t245 * t301;
t27 = -qJ(6) * t131 + t401;
t26 = pkin(5) * t116 + qJD(6) + t36;
t25 = pkin(5) * t186 - qJ(6) * t132 + t320;
t15 = -qJ(6) * t116 + t20;
t12 = qJD(5) * t47 + t240 * t81 + t244 * t29;
t11 = -qJD(5) * t48 - t240 * t29 + t244 * t81;
t2 = -qJ(6) * t35 - qJD(6) * t116 - t286;
t1 = pkin(5) * t78 + qJ(6) * t34 - qJD(6) * t118 + t4;
t3 = [t368, 0 (qJDD(2) * t247 - t372) * t236 (-qJDD(2) * t243 - t247 * t248) * t236, 0, 0, 0, 0, 0, t183 * t235 * t271 - t127 * t224 - t246 * t303 - t306 * t81, -t128 * t224 + t183 * t265 + t242 * t303 - t306 * t82, 0, 0, 0, 0, 0, t127 * t85 + t157 * t81 - t269 * t93 + t28 * t290, t29 * t290 - t94 * t342 + t81 * t159 + t127 * t261 + (t127 * t321 + (t127 * t268 - t356 * t94) * qJD(2)) * t235, 0, 0, 0, 0, 0, t11 * t147 + t116 * t28 + t35 * t93 + t47 * t78, t118 * t28 - t12 * t147 - t34 * t93 - t48 * t78, -t11 * t118 - t116 * t12 + t34 * t47 - t35 * t48, t1 * t47 + t11 * t13 + t12 * t15 + t2 * t48 + t26 * t28 + t5 * t93 - g(3); 0, qJDD(2), g(1) * t263 + g(2) * t262 - g(3) * t380 + t222, g(1) * t185 + g(2) * t184 - t368 * t381 (qJDD(2) * t233 + 0.2e1 * t242 * t324) * t232, 0.2e1 * (t242 * t343 - t348 * t361) * t232 (t242 * t304 + t305 * t355) * t235 (t246 * t304 - t305 * t356) * t235, t224 * t237, t420 * t224 - t287 * t237 - g(1) * t111 - g(2) * t109 - g(3) * t161 + (-t124 * t246 + t146 * t356) * t235 + (-pkin(2) * t271 + t246 * t298) * t232 - t421 * t306, -t363 * t224 + t264 * t237 + g(1) * t110 + g(2) * t108 + g(3) * t160 + (t124 * t242 + t146 * t355) * t235 + (-pkin(2) * t272 - t242 * t298) * t232 + t435 * t306, t159 * t129 + t187 * t250, -t129 * t157 - t159 * t130 - t186 * t250 - t187 * t85, -t129 * t290 + t187 * t342 + ((-t377 + (-t235 * t324 - t289) * t245) * t246 + (-(-qJD(2) * t354 + t344) * t382 + (qJD(2) * t187 + t159) * qJD(3)) * t242) * t235, t130 * t290 - t186 * t342 + (t85 * t246 + (-qJD(2) * t186 - t157) * t356) * t235 (-t342 * t246 + (-t223 - t290) * t356) * t235, -g(1) * t73 - g(2) * t71 - g(3) * t121 + t87 * t130 + t157 * t421 + t168 * t85 + t33 * t186 + t311 * t269 + t290 * t430 + t312 * t382 + t41 * t329, t87 * t129 + t159 * t421 + t168 * t250 + t33 * t187 - t269 * t366 - t278 * t382 + t290 * t438 - t42 * t329 - t275, -t118 * t60 - t132 * t34, t116 * t60 - t118 * t61 + t131 * t34 - t132 * t35, t118 * t130 + t132 * t78 - t147 * t60 - t186 * t34, -t116 * t130 - t131 * t78 - t147 * t61 - t186 * t35, t130 * t147 + t186 * t78, t320 * t78 + t4 * t186 + t19 * t130 + t96 * t35 + t10 * t131 + t36 * t61 - g(1) * (t110 * t240 + t244 * t73) - g(2) * (t108 * t240 + t244 * t71) - g(3) * (t121 * t244 + t160 * t240) + t431 * t147 + t395 * t116, -t401 * t78 + t286 * t186 - t20 * t130 - t96 * t34 + t10 * t132 - t36 * t60 - g(1) * (t110 * t244 - t240 * t73) - g(2) * (t108 * t244 - t240 * t71) - g(3) * (-t121 * t240 + t160 * t244) + t433 * t147 + t395 * t118, -t1 * t132 + t116 * t426 - t118 * t427 + t13 * t60 - t131 * t2 - t15 * t61 + t25 * t34 - t27 * t35 + t275, t2 * t27 + t1 * t25 + t5 * (pkin(5) * t131 + t96) - g(1) * (-pkin(2) * t263 + t111 * pkin(3) + t110 * t336 + t185 * t409 + t73 * t231 - t72 * t239) - g(2) * (-pkin(2) * t262 + t109 * pkin(3) + t108 * t336 + t184 * t409 + t71 * t231 - t70 * t239) - g(3) * (pkin(3) * t161 - t120 * t239 + t121 * t231 + (pkin(2) * t247 + t243 * t409) * t236 + t336 * t160) + (pkin(5) * t61 + t395) * t26 - t426 * t15 + t427 * t13; 0, 0, 0, 0, -t242 * t246 * t386, t361 * t386, t235 * t345 - t246 * t326, t242 * t326 + t221, t224, t104 * t306 - t146 * t333 + t274 - t287, t103 * t306 - t146 * t223 + t264 + t273 (-qJD(4) * t333 + t224) * t241 ^ 2 + ((t289 + t265) * t241 - t422) * t245, -t241 * t85 + t245 * t250 + (t300 - t354) * t159 + t418 * t157, -t245 * t307 + t241 * t342 + (t245 * t308 + (qJD(3) * t241 - t159) * t242) * t358, t241 * t307 + t245 * t342 + (-t241 * t308 + (qJD(3) * t245 + t157) * t242) * t358, t290 * t333, -pkin(3) * t85 - t100 * t290 - t41 * t333 - t104 * t157 + (-t290 * t87 - t425) * t241 + (pkin(10) * t307 + t174 * t290 - t432) * t245, -t245 * t425 - pkin(3) * t250 - t104 * t159 + t42 * t333 - t418 * t87 + (-t340 - t367) * t290 + t432 * t241, -t34 * t376 + (-t241 * t351 + t291) * t118, t116 * t144 + t118 * t143 + (-t116 * t244 - t118 * t240) * t353 + (t400 - t244 * t35 + (t116 * t240 - t118 * t244) * qJD(5)) * t241, t245 * t34 + t291 * t147 + (-t118 * t290 - t147 * t351 + t398) * t241, t245 * t35 + (-t240 * t353 + t143) * t147 + (t116 * t290 - t147 * t350 - t399) * t241, -t147 * t241 * t290 - t245 * t78, -t56 * t116 - t36 * t143 + t194 * t78 + t423 * t147 + ((-qJD(5) * t213 + t57) * t147 - t273) * t240 + (t36 * t240 * qJD(4) - t4 + (qJD(4) * t116 - t399) * pkin(10) - t260 * t244) * t245 + (pkin(10) * t35 + t10 * t240 - t19 * t290 + t350 * t36) * t241, -t362 * t78 - t56 * t118 - t36 * t144 + t416 * t147 - t273 * t244 + (-t286 + (pkin(10) * t118 + t244 * t36) * qJD(4) + t260 * t240) * t245 + (-t36 * t351 + t10 * t244 + t290 * t20 + (qJD(4) * t310 - t34) * pkin(10)) * t241, t126 * t34 + t13 * t144 - t133 * t35 + t143 * t15 - t403 * t118 - t402 * t116 + (-t13 * t244 - t15 * t240) * t353 + (-t1 * t244 - t2 * t240 + (t13 * t240 - t15 * t244) * qJD(5) + t274) * t241, t2 * t133 + t1 * t126 - g(1) * (t336 * t92 + t424 * t91) - g(2) * (t336 * t90 + t424 * t89) + (t239 * t296 + t336 * t5) * t241 + t402 * t15 + t403 * t13 - t336 * t407 - (t239 * t241 + t424) * t408 + (t336 * t353 - t56 + (t241 * t350 - t143) * pkin(5)) * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159 * t157, -t157 ^ 2 + t159 ^ 2, -t157 * t290 + t250, -t422 - t85, t269, -t159 * t87 - t290 * t42 + t277 - t312, t157 * t87 - t290 * t41 - t276 + t278, t118 * t310 - t400 (-t34 - t390) * t244 + (-t35 - t389) * t240, -t118 * t159 + t147 * t310 + t399, -t147 ^ 2 * t240 + t116 * t159 + t398, -t147 * t159, -pkin(4) * t35 - t42 * t116 - t99 * t147 - t19 * t159 + (t147 * t41 + t280) * t240 - t255 * t244, pkin(4) * t34 - t42 * t118 + t147 * t405 + t20 * t159 + t240 * t255 + t244 * t280, t214 * t34 + t215 * t35 - t396 * t118 - t397 * t116 + (-t13 * t147 + t2) * t244 + (-t147 * t15 - t1) * t240 + t276, -t2 * t215 + t1 * t214 - t5 * t231 - g(1) * (-t231 * t51 - t239 * t52) - g(2) * (-t231 * t49 - t239 * t50) - g(3) * (-t231 * t93 - t239 * t94) + (t147 * t410 - t42) * t26 + t397 * t15 + t396 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118 * t116, -t115 + t414, -t34 + t390, -t35 + t389, t78, -t36 * t118 + t20 * t147 + t4 + t419, t19 * t147 + t36 * t116 - g(1) * (-t240 * t91 - t244 * t52) - g(2) * (-t240 * t89 - t244 * t50) + g(3) * t48 + t286, pkin(5) * t34 - t116 * t406, t406 * t15 + (-t26 * t118 + t1 + t419) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115 - t414, t116 * t15 + t118 * t13 - t277 + t5;];
tau_reg  = t3;
