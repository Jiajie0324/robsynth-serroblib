% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 17:17
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPPR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR7_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR7_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPPR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPPR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPPR7_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 17:17:36
% EndTime: 2019-05-05 17:17:41
% DurationCPUTime: 5.10s
% Computational Cost: add. (10815->281), mult. (24373->275), div. (0->0), fcn. (16026->8), ass. (0->162)
t1795 = sin(pkin(9));
t1796 = cos(pkin(9));
t1799 = sin(qJ(3));
t1802 = cos(qJ(3));
t1765 = (-t1795 * t1802 - t1796 * t1799) * qJD(1);
t1767 = (t1795 * t1799 - t1796 * t1802) * qJD(1);
t1831 = t1767 * t1765;
t1729 = qJDD(3) + t1831;
t1804 = qJD(3) ^ 2;
t1842 = t1767 ^ 2;
t1752 = t1804 + t1842;
t1709 = t1729 * t1795 + t1752 * t1796;
t1711 = t1729 * t1796 - t1752 * t1795;
t1686 = t1709 * t1802 + t1711 * t1799;
t1800 = sin(qJ(1));
t1803 = cos(qJ(1));
t1838 = qJD(1) * t1802;
t1822 = qJD(3) * t1838;
t1825 = t1799 * qJDD(1);
t1772 = -t1822 - t1825;
t1823 = qJD(1) * qJD(3) * t1799;
t1824 = t1802 * qJDD(1);
t1773 = -t1823 + t1824;
t1736 = t1772 * t1795 + t1773 * t1796;
t1832 = t1765 * qJD(3);
t1849 = t1736 + t1832;
t1869 = t1686 * t1800 - t1803 * t1849;
t1868 = t1686 * t1803 + t1800 * t1849;
t1764 = t1765 ^ 2;
t1847 = -t1764 - t1842;
t1735 = -t1796 * t1772 + t1773 * t1795;
t1837 = qJD(3) * t1767;
t1720 = t1735 + t1837;
t1850 = t1736 - t1832;
t1860 = -t1720 * t1796 + t1795 * t1850;
t1861 = -t1720 * t1795 - t1796 * t1850;
t1862 = t1799 * t1860 + t1802 * t1861;
t1867 = t1800 * t1862 + t1803 * t1847;
t1866 = t1800 * t1847 - t1803 * t1862;
t1728 = -t1804 - t1764;
t1817 = qJDD(3) - t1831;
t1700 = t1728 * t1795 + t1796 * t1817;
t1703 = -t1728 * t1796 + t1795 * t1817;
t1676 = t1700 * t1802 - t1703 * t1799;
t1851 = t1735 - t1837;
t1865 = t1676 * t1800 + t1803 * t1851;
t1864 = t1676 * t1803 - t1800 * t1851;
t1863 = -t1799 * t1861 + t1802 * t1860;
t1689 = t1709 * t1799 - t1711 * t1802;
t1679 = t1700 * t1799 + t1703 * t1802;
t1840 = 2 * qJD(5);
t1792 = t1799 ^ 2;
t1805 = qJD(1) ^ 2;
t1782 = -t1803 * g(1) - t1800 * g(2);
t1808 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1782;
t1812 = qJD(3) * pkin(3) - qJ(4) * t1838;
t1839 = pkin(7) + pkin(1);
t1716 = t1772 * pkin(3) + (qJ(4) * t1792 + t1839) * t1805 - t1812 * t1838 - qJDD(4) + t1808;
t1848 = -pkin(4) * t1837 - qJ(5) * t1849 + t1767 * t1840 - t1716;
t1798 = sin(qJ(6));
t1801 = cos(qJ(6));
t1739 = qJD(3) * t1798 + t1801 * t1765;
t1845 = t1739 ^ 2;
t1741 = qJD(3) * t1801 - t1765 * t1798;
t1844 = t1741 ^ 2;
t1762 = qJD(6) - t1767;
t1843 = t1762 ^ 2;
t1841 = 2 * qJD(4);
t1833 = t1739 * t1741;
t1830 = t1792 * t1805;
t1829 = -pkin(4) * t1765 + qJ(5) * t1767 + t1841;
t1828 = qJD(6) - t1762;
t1827 = qJD(6) + t1762;
t1781 = t1800 * g(1) - t1803 * g(2);
t1810 = -t1805 * qJ(2) + qJDD(2) - t1781;
t1750 = -t1839 * qJDD(1) + t1810;
t1737 = t1799 * g(3) + t1802 * t1750;
t1793 = t1802 ^ 2;
t1826 = t1792 + t1793;
t1821 = t1799 * t1802 * t1805;
t1738 = -t1802 * g(3) + t1799 * t1750;
t1779 = qJDD(3) - t1821;
t1714 = (-t1773 - t1823) * qJ(4) + t1779 * pkin(3) + t1737;
t1715 = -pkin(3) * t1830 + t1772 * qJ(4) - qJD(3) * t1812 + t1738;
t1819 = -t1796 * t1714 + t1795 * t1715;
t1818 = -t1798 * qJDD(3) + t1801 * t1735;
t1815 = t1795 * t1714 + t1796 * t1715;
t1813 = -t1801 * qJDD(3) - t1798 * t1735;
t1811 = -qJDD(6) - t1736;
t1809 = -qJDD(3) * pkin(4) - t1804 * qJ(5) + qJDD(5) + t1819;
t1806 = -t1804 * pkin(4) + qJDD(3) * qJ(5) + t1829 * t1765 + t1815;
t1784 = -t1793 * t1805 - t1804;
t1783 = -t1804 - t1830;
t1780 = -qJDD(3) - t1821;
t1778 = t1826 * t1805;
t1777 = qJDD(1) * t1800 + t1803 * t1805;
t1776 = qJDD(1) * t1803 - t1800 * t1805;
t1775 = t1826 * qJDD(1);
t1774 = -0.2e1 * t1823 + t1824;
t1771 = 0.2e1 * t1822 + t1825;
t1763 = qJDD(1) * pkin(1) - t1810;
t1754 = t1805 * pkin(1) + t1808;
t1749 = -pkin(5) * t1767 - qJD(3) * pkin(8);
t1748 = t1839 * t1805 + t1808;
t1745 = t1780 * t1802 - t1784 * t1799;
t1744 = -t1779 * t1799 + t1783 * t1802;
t1743 = t1780 * t1799 + t1784 * t1802;
t1742 = t1779 * t1802 + t1783 * t1799;
t1713 = -t1843 - t1844;
t1708 = -t1737 * t1799 + t1738 * t1802;
t1707 = t1737 * t1802 + t1738 * t1799;
t1705 = -t1843 - t1845;
t1704 = -t1844 - t1845;
t1699 = t1811 - t1833;
t1698 = -t1811 - t1833;
t1693 = t1828 * t1739 + t1813;
t1692 = -t1827 * t1739 - t1813;
t1691 = -t1828 * t1741 + t1818;
t1690 = t1827 * t1741 - t1818;
t1685 = t1765 * t1841 + t1815;
t1684 = t1767 * t1841 - t1819;
t1683 = t1699 * t1801 - t1713 * t1798;
t1682 = t1699 * t1798 + t1713 * t1801;
t1681 = -t1698 * t1798 + t1705 * t1801;
t1680 = t1698 * t1801 + t1705 * t1798;
t1675 = -t1735 * pkin(4) - t1848;
t1674 = -t1829 * t1767 + t1809;
t1673 = qJD(3) * t1840 + t1806;
t1668 = t1691 * t1801 - t1693 * t1798;
t1667 = t1691 * t1798 + t1693 * t1801;
t1666 = -t1764 * pkin(5) + t1767 * t1749 + (pkin(4) + pkin(8)) * t1735 + t1848;
t1665 = t1682 * t1795 + t1692 * t1796;
t1664 = -t1682 * t1796 + t1692 * t1795;
t1663 = t1680 * t1795 + t1690 * t1796;
t1662 = -t1680 * t1796 + t1690 * t1795;
t1661 = -t1735 * pkin(5) - t1764 * pkin(8) + (t1840 + t1749) * qJD(3) + t1806;
t1660 = -qJDD(3) * pkin(8) + t1850 * pkin(5) - (-pkin(8) * t1765 + t1829) * t1767 + t1809;
t1659 = -t1684 * t1795 + t1685 * t1796;
t1658 = t1684 * t1796 + t1685 * t1795;
t1657 = t1667 * t1795 + t1704 * t1796;
t1656 = -t1667 * t1796 + t1704 * t1795;
t1655 = t1673 * t1796 + t1674 * t1795;
t1654 = t1673 * t1795 - t1674 * t1796;
t1653 = -t1664 * t1799 + t1665 * t1802;
t1652 = t1664 * t1802 + t1665 * t1799;
t1651 = -t1662 * t1799 + t1663 * t1802;
t1650 = t1662 * t1802 + t1663 * t1799;
t1649 = t1660 * t1798 + t1666 * t1801;
t1648 = t1660 * t1801 - t1666 * t1798;
t1647 = -t1658 * t1799 + t1659 * t1802;
t1646 = t1658 * t1802 + t1659 * t1799;
t1645 = -t1656 * t1799 + t1657 * t1802;
t1644 = t1656 * t1802 + t1657 * t1799;
t1643 = -t1654 * t1799 + t1655 * t1802;
t1642 = t1654 * t1802 + t1655 * t1799;
t1641 = -t1648 * t1798 + t1649 * t1801;
t1640 = t1648 * t1801 + t1649 * t1798;
t1639 = t1640 * t1795 + t1661 * t1796;
t1638 = -t1640 * t1796 + t1661 * t1795;
t1637 = -t1638 * t1799 + t1639 * t1802;
t1636 = t1638 * t1802 + t1639 * t1799;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1777, -t1776, 0, -t1781 * t1800 + t1782 * t1803, 0, 0, 0, 0, 0, 0, 0, t1777, t1776, -t1754 * t1803 - t1763 * t1800, 0, 0, 0, 0, 0, 0, t1742 * t1800 + t1771 * t1803, t1743 * t1800 + t1774 * t1803, -t1775 * t1800 - t1778 * t1803, t1707 * t1800 - t1748 * t1803, 0, 0, 0, 0, 0, 0, t1865, -t1869, t1867, t1646 * t1800 - t1716 * t1803, 0, 0, 0, 0, 0, 0, t1867, -t1865, t1869, t1642 * t1800 - t1675 * t1803, 0, 0, 0, 0, 0, 0, t1650 * t1800 + t1681 * t1803, t1652 * t1800 + t1683 * t1803, t1644 * t1800 + t1668 * t1803, t1636 * t1800 + t1641 * t1803; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1776, -t1777, 0, t1781 * t1803 + t1782 * t1800, 0, 0, 0, 0, 0, 0, 0, -t1776, t1777, -t1754 * t1800 + t1763 * t1803, 0, 0, 0, 0, 0, 0, -t1742 * t1803 + t1771 * t1800, -t1743 * t1803 + t1774 * t1800, t1775 * t1803 - t1778 * t1800, -t1707 * t1803 - t1748 * t1800, 0, 0, 0, 0, 0, 0, -t1864, t1868, t1866, -t1646 * t1803 - t1716 * t1800, 0, 0, 0, 0, 0, 0, t1866, t1864, -t1868, -t1642 * t1803 - t1675 * t1800, 0, 0, 0, 0, 0, 0, -t1650 * t1803 + t1681 * t1800, -t1652 * t1803 + t1683 * t1800, -t1644 * t1803 + t1668 * t1800, -t1636 * t1803 + t1641 * t1800; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1744, t1745, 0, t1708, 0, 0, 0, 0, 0, 0, -t1679, t1689, t1863, t1647, 0, 0, 0, 0, 0, 0, t1863, t1679, -t1689, t1643, 0, 0, 0, 0, 0, 0, t1651, t1653, t1645, t1637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1805, -qJDD(1), 0, t1782, 0, 0, 0, 0, 0, 0, 0, t1805, qJDD(1), -t1754, 0, 0, 0, 0, 0, 0, t1771, t1774, -t1778, -t1748, 0, 0, 0, 0, 0, 0, t1851, t1849, t1847, -t1716, 0, 0, 0, 0, 0, 0, t1847, -t1851, -t1849, -t1675, 0, 0, 0, 0, 0, 0, t1681, t1683, t1668, t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1805, 0, t1781, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1805, t1763, 0, 0, 0, 0, 0, 0, -t1742, -t1743, t1775, -t1707, 0, 0, 0, 0, 0, 0, -t1676, t1686, -t1862, -t1646, 0, 0, 0, 0, 0, 0, -t1862, t1676, -t1686, -t1642, 0, 0, 0, 0, 0, 0, -t1650, -t1652, -t1644, -t1636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1744, t1745, 0, t1708, 0, 0, 0, 0, 0, 0, -t1679, t1689, t1863, t1647, 0, 0, 0, 0, 0, 0, t1863, t1679, -t1689, t1643, 0, 0, 0, 0, 0, 0, t1651, t1653, t1645, t1637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1744, t1745, 0, t1708, 0, 0, 0, 0, 0, 0, -t1679, t1689, t1863, t1647, 0, 0, 0, 0, 0, 0, t1863, t1679, -t1689, t1643, 0, 0, 0, 0, 0, 0, t1651, t1653, t1645, t1637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1805, -qJDD(1), t1754, 0, 0, 0, 0, 0, 0, -t1771, -t1774, t1778, t1748, 0, 0, 0, 0, 0, 0, -t1851, -t1849, -t1847, t1716, 0, 0, 0, 0, 0, 0, -t1847, t1851, t1849, t1675, 0, 0, 0, 0, 0, 0, -t1681, -t1683, -t1668, -t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1805, -t1763, 0, 0, 0, 0, 0, 0, t1742, t1743, -t1775, t1707, 0, 0, 0, 0, 0, 0, t1676, -t1686, t1862, t1646, 0, 0, 0, 0, 0, 0, t1862, -t1676, t1686, t1642, 0, 0, 0, 0, 0, 0, t1650, t1652, t1644, t1636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1783, t1780, -t1825, t1738, 0, 0, 0, 0, 0, 0, -t1703, -t1711, t1860, t1659, 0, 0, 0, 0, 0, 0, t1860, t1703, t1711, t1655, 0, 0, 0, 0, 0, 0, t1663, t1665, t1657, t1639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1779, t1784, -t1824, t1737, 0, 0, 0, 0, 0, 0, t1700, -t1709, t1861, t1658, 0, 0, 0, 0, 0, 0, t1861, -t1700, t1709, t1654, 0, 0, 0, 0, 0, 0, t1662, t1664, t1656, t1638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1771, t1774, -t1778, -t1748, 0, 0, 0, 0, 0, 0, t1851, t1849, t1847, -t1716, 0, 0, 0, 0, 0, 0, t1847, -t1851, -t1849, -t1675, 0, 0, 0, 0, 0, 0, t1681, t1683, t1668, t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1728, -t1729, -t1720, t1685, 0, 0, 0, 0, 0, 0, -t1720, -t1728, t1729, t1673, 0, 0, 0, 0, 0, 0, t1690, t1692, t1704, t1661; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1817, -t1752, -t1850, t1684, 0, 0, 0, 0, 0, 0, -t1850, -t1817, t1752, -t1674, 0, 0, 0, 0, 0, 0, -t1680, -t1682, -t1667, -t1640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1851, t1849, t1847, -t1716, 0, 0, 0, 0, 0, 0, t1847, -t1851, -t1849, -t1675, 0, 0, 0, 0, 0, 0, t1681, t1683, t1668, t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1847, -t1851, -t1849, -t1675, 0, 0, 0, 0, 0, 0, t1681, t1683, t1668, t1641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1720, t1728, -t1729, -t1673, 0, 0, 0, 0, 0, 0, -t1690, -t1692, -t1704, -t1661; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1850, t1817, -t1752, t1674, 0, 0, 0, 0, 0, 0, t1680, t1682, t1667, t1640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1705, t1699, t1691, t1649; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1698, t1713, t1693, t1648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1690, t1692, t1704, t1661;];
f_new_reg  = t1;
