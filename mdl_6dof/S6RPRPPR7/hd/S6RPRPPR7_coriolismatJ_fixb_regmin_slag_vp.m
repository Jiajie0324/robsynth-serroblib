% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPPR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPPR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:57:29
% EndTime: 2019-03-09 02:57:36
% DurationCPUTime: 2.82s
% Computational Cost: add. (2725->234), mult. (4858->312), div. (0->0), fcn. (5313->6), ass. (0->193)
t173 = cos(qJ(3));
t280 = sin(pkin(9));
t159 = t280 * t173;
t171 = sin(qJ(3));
t281 = cos(pkin(9));
t160 = t281 * t171;
t147 = -t160 - t159;
t144 = t147 ^ 2;
t146 = -t171 * t280 + t173 * t281;
t296 = t146 ^ 2;
t201 = -t296 / 0.2e1 - t144 / 0.2e1;
t320 = -0.1e1 / 0.2e1 + t201;
t172 = cos(qJ(6));
t319 = 0.2e1 * t172;
t174 = -pkin(1) - pkin(7);
t307 = -qJ(4) + t174;
t150 = t307 * t171;
t141 = t281 * t150;
t151 = t307 * t173;
t207 = t280 * t151;
t305 = t207 + t141;
t93 = t150 * t280 - t151 * t281;
t198 = t146 * t93 + t147 * t305;
t304 = qJD(1) * t198;
t318 = -qJD(2) * t320 - t304;
t42 = 0.1e1 / 0.2e1 + t201;
t317 = qJD(2) * t42 + t304;
t170 = sin(qJ(6));
t184 = pkin(5) * t146 + t93;
t282 = t170 * t184;
t316 = t172 * t184;
t306 = t144 + t296;
t34 = t306 * t170;
t241 = qJD(6) * t170;
t82 = t170 * t146;
t252 = t82 * qJD(1);
t314 = t252 + t241;
t313 = pkin(5) * t147 + t305;
t312 = qJD(4) * t306;
t311 = t306 * qJD(1);
t309 = 0.2e1 * t313;
t287 = qJD(3) * pkin(3);
t308 = (t146 * t280 + t147 * t281) * t287;
t237 = t146 * qJD(1);
t209 = t172 * t237;
t240 = qJD(6) * t172;
t109 = -t209 - t240;
t301 = qJD(4) * t198;
t168 = t170 ^ 2;
t169 = t172 ^ 2;
t154 = t168 - t169;
t235 = t147 * qJD(1);
t211 = t170 * t235;
t181 = qJD(3) * t154 + t211 * t319;
t161 = -pkin(3) * t281 - pkin(4);
t234 = t147 * qJD(5);
t157 = pkin(3) * t280 + qJ(5);
t263 = t146 * t157;
t297 = -qJD(3) * (-t147 * t161 + t263) + t234;
t295 = pkin(4) + pkin(8);
t200 = t141 / 0.2e1;
t294 = -t146 / 0.2e1;
t293 = -t170 / 0.2e1;
t291 = t172 / 0.2e1;
t290 = t146 * pkin(4);
t165 = t173 * pkin(3);
t162 = t171 * pkin(3) + qJ(2);
t191 = -t146 * qJ(5) + t162;
t50 = -t147 * t295 + t191;
t23 = t170 * t50 - t316;
t262 = t147 * qJ(5);
t206 = t165 - t262;
t51 = t146 * t295 + t206;
t285 = t170 * t51;
t1 = (-t23 - t316) * t147 - t285 * t146;
t286 = t1 * qJD(1);
t284 = t172 * t51;
t24 = t172 * t50 + t282;
t2 = (-t24 + t282) * t147 - t284 * t146;
t283 = t2 * qJD(1);
t86 = t172 * t147;
t12 = t146 * t23 - t313 * t86;
t279 = qJD(1) * t12;
t261 = t147 * t170;
t13 = -t146 * t24 - t261 * t313;
t278 = qJD(1) * t13;
t81 = -pkin(4) * t147 + t191;
t87 = t206 + t290;
t25 = -t146 * t81 + t147 * t87;
t277 = qJD(1) * t25;
t26 = -t146 * t87 - t147 * t81;
t276 = qJD(1) * t26;
t273 = qJD(1) * t34;
t226 = t296 - t144;
t57 = t226 * t170;
t272 = qJD(1) * t57;
t58 = t226 * t172;
t271 = qJD(1) * t58;
t270 = qJD(1) * t81;
t269 = qJD(3) * t86;
t268 = qJD(6) * t82;
t264 = t144 * t172;
t259 = t157 * t147;
t163 = t165 / 0.2e1;
t29 = t163 + (-qJ(5) / 0.2e1 - t157 / 0.2e1) * t147 + (pkin(4) / 0.2e1 - t161 / 0.2e1) * t146;
t258 = t29 * qJD(1);
t257 = t320 * qJD(1);
t48 = t320 * t170;
t256 = t48 * qJD(1);
t59 = t306 * t172;
t255 = t59 * qJD(1);
t175 = (t280 * t147 / 0.2e1 + t281 * t294) * pkin(3);
t73 = -t165 / 0.2e1 + t175;
t254 = t73 * qJD(1);
t74 = t320 * t172;
t253 = t74 * qJD(1);
t251 = t86 * qJD(1);
t248 = qJD(1) * qJ(2);
t247 = qJD(1) * t162;
t246 = qJD(1) * t170;
t245 = qJD(3) * t170;
t244 = qJD(4) * t147;
t243 = qJD(5) * t146;
t242 = qJD(5) * t172;
t140 = t159 / 0.2e1 + t160 / 0.2e1;
t239 = t140 * qJD(1);
t238 = t296 * qJD(1);
t236 = t146 * qJD(3);
t134 = t146 * qJD(4);
t137 = t147 * qJD(3);
t155 = t171 ^ 2 - t173 ^ 2;
t233 = t155 * qJD(1);
t232 = t171 * qJD(1);
t231 = t171 * qJD(3);
t230 = t172 * qJD(3);
t229 = t173 * qJD(1);
t228 = t173 * qJD(3);
t223 = t81 * t237;
t222 = qJ(2) * t232;
t221 = qJ(2) * t229;
t220 = t296 * t246;
t219 = t170 * t137;
t218 = t147 * t230;
t217 = t170 * t230;
t216 = t146 * t241;
t215 = t146 * t240;
t214 = t147 * t241;
t128 = t147 * t240;
t213 = t146 * t235;
t212 = t146 * t137;
t210 = t170 * t240;
t208 = t171 * t229;
t205 = -qJD(2) + t243;
t204 = t147 * t209;
t203 = t147 * t217;
t7 = t81 * t87;
t197 = t7 * qJD(1);
t16 = t162 * t165;
t196 = t16 * qJD(1);
t156 = -pkin(8) + t161;
t195 = -t147 * t156 + t263;
t89 = t200 - t141 / 0.2e1;
t193 = qJD(1) * t89 + qJD(3) * t157;
t192 = -qJD(2) * t146 + qJD(5) * t296;
t188 = t156 * t294 - t259 / 0.2e1;
t178 = t51 / 0.2e1 + t188;
t5 = t178 * t172;
t190 = -qJD(1) * t5 + t157 * t245;
t3 = t178 * t170;
t189 = -qJD(1) * t3 - t157 * t230;
t84 = (-t169 / 0.2e1 + t168 / 0.2e1) * t147;
t187 = -qJD(1) * t84 + t217;
t186 = (qJD(6) + t237) * t261;
t185 = -qJD(6) * t140 + t213;
t183 = qJD(3) * t84 + t246 * t264;
t88 = t154 * t144;
t182 = -qJD(1) * t88 + 0.2e1 * t203;
t180 = -t215 - t219;
t129 = t140 * qJD(3);
t125 = t146 * t230;
t124 = t170 * t237;
t123 = t170 * t236;
t79 = t84 * qJD(6);
t75 = t296 * t291 + t264 / 0.2e1 - t172 / 0.2e1;
t72 = t163 + t175;
t60 = 0.2e1 * t200 + t207;
t49 = t293 + t34 / 0.2e1;
t38 = t320 * qJD(4);
t36 = t42 * qJD(4);
t30 = t259 / 0.2e1 + t161 * t146 / 0.2e1 + t163 - t262 / 0.2e1 + t290 / 0.2e1;
t6 = -t284 / 0.2e1 + t188 * t172 + t309 * t293;
t4 = -t285 / 0.2e1 + t188 * t170 + t309 * t291;
t8 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t171 * t228, t155 * qJD(3), 0, 0, 0, qJ(2) * t228 + qJD(2) * t171, -qJ(2) * t231 + qJD(2) * t173, t312, qJD(2) * t162 + qJD(3) * t16 + t301, t312, t25 * qJD(3) - t147 * t205, qJD(3) * t26 + t192, t7 * qJD(3) - t205 * t81 + t301, t144 * t210 - t168 * t212, -qJD(6) * t88 - 0.2e1 * t146 * t203, qJD(3) * t57 - t128 * t146, qJD(3) * t58 + t146 * t214, t212, t1 * qJD(3) + t59 * qJD(4) + t13 * qJD(6) + t205 * t82, t2 * qJD(3) - t34 * qJD(4) + t12 * qJD(6) + t172 * t192; 0, 0, 0, 0, qJD(1), t248, 0, 0, 0, 0, 0, t232, t229, 0, t36 + t247, 0, t235, -t237, t36 + t270, 0, 0, 0, 0, 0, qJD(6) * t49 - t124, qJD(6) * t75 - t209; 0, 0, 0, 0, 0, 0, -t208, t233, -t231, -t228, 0, -t174 * t231 + t221, -t174 * t228 - t222, -t308 (-t280 * t93 - t281 * t305) * t287 + t72 * qJD(4) + t196, t297, qJD(3) * t305 + t277, -qJD(3) * t93 + t276 (-t157 * t93 + t161 * t305) * qJD(3) + t30 * qJD(4) + t60 * qJD(5) + t197, t79 + (-t168 * t235 + t217) * t146, -t146 * t181 + 0.2e1 * t147 * t210, t218 + t272, -t219 + t271, t185, t286 + (-t172 * t195 - t282) * qJD(3) + t86 * qJD(5) + t4 * qJD(6), -t184 * t230 + t283 + t6 * qJD(6) + (qJD(3) * t195 - t234) * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, qJD(3) * t72 + t317, t311, 0, 0, qJD(3) * t30 + t317, 0, 0, 0, 0, 0, t255, -t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, -t213, t238, qJD(3) * t60 - t223, 0, 0, 0, 0, 0, t220 + t269, t172 * t238 - t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, t182, -t128 - t204, t186, -t129, qJD(2) * t49 + qJD(3) * t4 - qJD(6) * t24 + t278, qJD(2) * t75 + qJD(3) * t6 + qJD(6) * t23 + t279; 0, 0, 0, 0, -qJD(1), -t248, 0, 0, 0, 0, 0, -t232, -t229, 0, t38 - t247, 0, -t235, t237, t38 - t270, 0, 0, 0, 0, 0, -qJD(6) * t48 + t124, -qJD(6) * t74 + t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, -t228, 0, t308, 0, -t137, t236, -t297, 0, 0, 0, 0, 0, t123 - t128, t125 + t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, 0, 0, 0, t257, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216 - t218 - t256, -t180 - t253; 0, 0, 0, 0, 0, 0, t208, -t233, 0, 0, 0, -t221, t222, 0, qJD(4) * t73 - t196, 0, t134 - t277, t244 - t276, -qJD(4) * t29 + qJD(5) * t89 - t197, t168 * t213 + t79, t186 * t319, -t216 - t272, -t215 - t271, -t185, qJD(6) * t3 + t170 * t244 - t286, qJD(4) * t86 + qJD(6) * t5 - t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t157 * qJD(5), -t210, t154 * qJD(6), 0, 0, 0, qJD(5) * t170 + t157 * t240, -t157 * t241 + t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, 0, t237, t235, -t258, 0, 0, 0, 0, 0, t211, t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t193, 0, 0, 0, 0, 0, t245, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187, t181, -t124 - t241, t109, t239, -t156 * t241 - t189, -t156 * t240 - t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311, -qJD(3) * t73 + t318, -t311, -t236, -t137, qJD(3) * t29 - t243 + t318, 0, 0, 0, 0, 0, t180 - t255, t268 - t269 + t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, 0, 0, 0, -t257, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, 0, -t237, -t235, t258, 0, 0, 0, 0, 0, -t211, -t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, -t238, -qJD(3) * t89 + t134 + t223, 0, 0, 0, 0, 0, -t220 - t268 (-qJD(6) * t146 - t238) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t193, 0, 0, 0, 0, 0, -t245, -t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314, t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183, -t182, t123 + t204, -t146 * t211 + t125, -t129, qJD(2) * t48 - qJD(3) * t3 + qJD(5) * t82 + t134 * t172 - t278, qJD(2) * t74 - qJD(3) * t5 - qJD(4) * t82 + t146 * t242 - t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187, -t181, t124, t209, -t239, t189, t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, -t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
