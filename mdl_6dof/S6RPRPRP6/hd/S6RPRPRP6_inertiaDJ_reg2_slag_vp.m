% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPRP6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP6_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:19:45
% EndTime: 2019-03-09 03:19:51
% DurationCPUTime: 1.95s
% Computational Cost: add. (2401->186), mult. (5209->310), div. (0->0), fcn. (4990->6), ass. (0->114)
t134 = sin(qJ(3));
t135 = cos(qJ(3));
t75 = sin(pkin(9));
t76 = cos(pkin(9));
t57 = t134 * t76 + t135 * t75;
t128 = pkin(7) + qJ(2);
t42 = t57 * t128;
t137 = pkin(3) + pkin(8);
t52 = t57 * qJD(3);
t87 = t57 * pkin(4) + t42;
t56 = t134 * t75 - t135 * t76;
t51 = t56 * qJD(3);
t96 = t51 * qJ(4) - t57 * qJD(4);
t142 = -qJD(5) * t87 - t137 * t52 - t96;
t77 = sin(qJ(5));
t73 = t77 ^ 2;
t78 = cos(qJ(5));
t74 = t78 ^ 2;
t127 = t73 - t74;
t123 = qJD(5) * t78;
t130 = t77 * t52;
t37 = t56 * t123 + t130;
t141 = t127 * qJD(5);
t140 = -0.2e1 * t51;
t139 = 0.2e1 * t52;
t138 = 0.2e1 * qJD(4);
t136 = t51 * pkin(5);
t133 = t56 * t77;
t132 = t56 * t78;
t131 = t73 * t52;
t45 = t74 * t52;
t129 = t78 * t52;
t68 = -t76 * pkin(2) - pkin(1);
t93 = -t57 * qJ(4) + t68;
t26 = t137 * t56 + t93;
t10 = t78 * t26 + t77 * t87;
t126 = t78 * qJ(6);
t125 = qJ(6) + t137;
t124 = qJD(5) * t56;
t69 = qJD(5) * t77;
t122 = qJD(5) * t137;
t121 = t77 * qJD(6);
t120 = t78 * qJD(6);
t119 = qJ(4) * qJD(5);
t118 = t56 * t139;
t41 = t57 * t140;
t117 = t77 * t129;
t100 = t128 * t134;
t106 = t134 * qJD(2);
t107 = t135 * qJD(2);
t99 = t128 * t135;
t29 = (qJD(3) * t99 + t106) * t76 + (-qJD(3) * t100 + t107) * t75;
t81 = -t51 * pkin(4) + t29;
t116 = t142 * t78 - t77 * t81;
t115 = pkin(5) * t69;
t114 = pkin(5) * t123;
t112 = t77 * t123;
t60 = t125 * t78;
t105 = qJ(6) * t56 + t26;
t54 = t56 ^ 2;
t104 = t54 * t112;
t103 = 0.2e1 * (t75 ^ 2 + t76 ^ 2) * qJD(2);
t67 = t77 * pkin(5) + qJ(4);
t28 = t42 * qJD(3) + t75 * t106 - t76 * t107;
t18 = -t52 * pkin(4) - t28;
t34 = t56 * t69 - t129;
t8 = t34 * pkin(5) + t18;
t102 = t67 * t124 + t8;
t31 = t78 * t87;
t6 = t57 * pkin(5) - t105 * t77 + t31;
t7 = t56 * t126 + t10;
t101 = -t6 * t77 + t7 * t78;
t9 = -t77 * t26 + t31;
t98 = t10 * t78 - t77 * t9;
t43 = -t75 * t100 + t76 * t99;
t97 = -t43 * t28 + t42 * t29;
t95 = -qJ(4) * t52 - qJD(4) * t56;
t92 = t57 * t123 - t77 * t51;
t36 = t78 * t51 + t57 * t69;
t91 = 0.2e1 * t51 * t56 - 0.2e1 * t57 * t52;
t20 = (-t78 * pkin(5) - pkin(4)) * t56 + t43;
t63 = qJD(4) + t114;
t90 = qJD(5) * t20 - t52 * t67 - t56 * t63;
t89 = t18 + (qJ(4) * t56 + t137 * t57) * qJD(5);
t32 = -t56 * pkin(4) + t43;
t86 = -qJD(5) * t32 - t137 * t51 - t95;
t5 = -t26 * t123 + t142 * t77 + t78 * t81;
t80 = -t37 * qJ(6) - t56 * t121 + t5;
t2 = t80 - t136;
t3 = t105 * t69 - t56 * t120 - t52 * t126 + t116;
t84 = -t2 * t77 - t3 * t78 + (-t6 * t78 - t7 * t77) * qJD(5);
t4 = t26 * t69 + t116;
t1 = qJD(5) * t98 - t4 * t77 + t5 * t78;
t83 = -t4 * t78 - t5 * t77 + (-t10 * t77 - t78 * t9) * qJD(5);
t82 = 0.2e1 * t28 * t56 + 0.2e1 * t29 * t57 - 0.2e1 * t42 * t51 - 0.2e1 * t43 * t52;
t70 = qJ(4) * t138;
t62 = -0.2e1 * t112;
t61 = 0.2e1 * t112;
t59 = t125 * t77;
t58 = 0.2e1 * t141;
t48 = -qJD(5) * t60 - t121;
t47 = t125 * t69 - t120;
t40 = t56 * pkin(3) + t93;
t33 = t45 + t131;
t25 = t52 * pkin(3) + t96;
t23 = 0.2e1 * t56 * t45 - 0.2e1 * t104;
t22 = 0.2e1 * t56 * t131 + 0.2e1 * t104;
t21 = -t127 * t124 + t117;
t19 = -0.4e1 * t56 * t112 - t131 + t45;
t14 = 0.4e1 * t56 * t117 - 0.2e1 * t54 * t141;
t13 = t47 * t78 + t48 * t77 + (-t59 * t78 + t60 * t77) * qJD(5);
t12 = 0.2e1 * t57 * t130 + 0.2e1 * t92 * t56;
t11 = 0.2e1 * t57 * t129 - 0.2e1 * t36 * t56;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, qJ(2) * t103, t41, t91, 0, t118, 0, 0, t68 * t139, t68 * t140, t82, 0.2e1 * t97, 0, 0, 0, t41, t91, t118, t82, -0.2e1 * t25 * t56 - 0.2e1 * t40 * t52, -0.2e1 * t25 * t57 + 0.2e1 * t40 * t51, 0.2e1 * t40 * t25 + 0.2e1 * t97, t22, t14, t12, t23, t11, t41, -0.2e1 * t18 * t132 + 0.2e1 * t34 * t32 + 0.2e1 * t5 * t57 - 0.2e1 * t9 * t51, 0.2e1 * t10 * t51 + 0.2e1 * t18 * t133 + 0.2e1 * t37 * t32 + 0.2e1 * t4 * t57, 0.2e1 * t98 * t52 + 0.2e1 * t83 * t56, -0.2e1 * t10 * t4 + 0.2e1 * t18 * t32 + 0.2e1 * t5 * t9, t22, t14, t12, t23, t11, t41, -0.2e1 * t8 * t132 + 0.2e1 * t2 * t57 + 0.2e1 * t34 * t20 - 0.2e1 * t6 * t51, 0.2e1 * t8 * t133 + 0.2e1 * t37 * t20 + 0.2e1 * t3 * t57 + 0.2e1 * t7 * t51, 0.2e1 * t101 * t52 + 0.2e1 * t84 * t56, 0.2e1 * t2 * t6 + 0.2e1 * t20 * t8 - 0.2e1 * t3 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, -t51, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t51, t25, 0, 0, 0, 0, 0, 0, -t92, t36, t33, t83, 0, 0, 0, 0, 0, 0, -t92, t36, t33, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, 0, -t52, 0, -t29, t28, 0, 0, 0, t51, t52, 0, 0, 0, pkin(3) * t51 + t95, t29, -t28, -t29 * pkin(3) - t28 * qJ(4) + t43 * qJD(4), t21, t19, -t36, -t21, -t92, 0, t89 * t77 - t86 * t78, t86 * t77 + t89 * t78, -t1, t18 * qJ(4) + t32 * qJD(4) - t1 * t137, t21, t19, -t36, -t21, -t92, 0, t102 * t77 + t47 * t57 + t60 * t51 + t90 * t78, t102 * t78 - t48 * t57 - t59 * t51 - t90 * t77 (t48 * t56 - t52 * t59 - t2 + (t56 * t60 - t7) * qJD(5)) * t78 + (-t47 * t56 + t52 * t60 + t3 + (t56 * t59 + t6) * qJD(5)) * t77, -t2 * t60 + t20 * t63 + t3 * t59 + t6 * t47 + t7 * t48 + t8 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77 * t47 + t78 * t48 + (t59 * t77 + t60 * t78) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t70, t62, t58, 0, t61, 0, 0, 0.2e1 * qJD(4) * t77 + 0.2e1 * t78 * t119, 0.2e1 * qJD(4) * t78 - 0.2e1 * t77 * t119, 0, t70, t62, t58, 0, t61, 0, 0, 0.2e1 * t67 * t123 + 0.2e1 * t63 * t77, 0.2e1 * t63 * t78 - 0.2e1 * t67 * t69, -0.2e1 * t13, -0.2e1 * t60 * t47 - 0.2e1 * t59 * t48 + 0.2e1 * t67 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, 0, 0, t29, 0, 0, 0, 0, 0, 0, -t36, -t92, 0, t1, 0, 0, 0, 0, 0, 0, -t36, -t92, 0, t101 * qJD(5) + t2 * t78 - t3 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, -t34, -t51, t5, t4, 0, 0, 0, 0, t37, 0, -t34, -t51, t80 - 0.2e1 * t136, t3, -t37 * pkin(5), t2 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, t69, 0, 0, 0, 0, 0, 0, 0, 0, -t123, t69, 0, -t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, 0, -t123, 0, t77 * t122, t78 * t122, 0, 0, 0, 0, -t69, 0, -t123, 0, t47, -t48, t115, t47 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, -t123, 0, 0, 0, 0, 0, 0, 0, 0, -t69, -t123, 0, -t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, t37, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, -t69, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t15;
