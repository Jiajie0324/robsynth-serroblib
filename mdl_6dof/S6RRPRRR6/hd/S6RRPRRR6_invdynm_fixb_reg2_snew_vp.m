% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPRRR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 22:03
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPRRR6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR6_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR6_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR6_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRR6_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 22:02:32
% EndTime: 2019-05-06 22:03:06
% DurationCPUTime: 36.94s
% Computational Cost: add. (257290->932), mult. (559493->1164), div. (0->0), fcn. (387620->10), ass. (0->593)
t1556 = qJD(2) ^ 2;
t1549 = sin(qJ(2));
t1543 = t1549 ^ 2;
t1557 = qJD(1) ^ 2;
t1654 = t1543 * t1557;
t1514 = t1556 + t1654;
t1554 = cos(qJ(2));
t1649 = t1554 * t1557;
t1521 = t1549 * t1649;
t1508 = qJDD(2) - t1521;
t1650 = t1554 * t1508;
t1464 = -t1514 * t1549 + t1650;
t1682 = qJD(2) * t1554;
t1528 = qJD(1) * t1682;
t1642 = t1549 * qJDD(1);
t1498 = 0.2e1 * t1528 + t1642;
t1550 = sin(qJ(1));
t1555 = cos(qJ(1));
t1737 = pkin(6) * (t1464 * t1555 - t1498 * t1550);
t1736 = pkin(6) * (t1464 * t1550 + t1498 * t1555);
t1735 = pkin(7) * t1464;
t1548 = sin(qJ(4));
t1553 = cos(qJ(4));
t1683 = qJD(1) * t1554;
t1684 = qJD(1) * t1549;
t1484 = -t1548 * t1683 + t1553 * t1684;
t1643 = t1548 * t1684 + t1553 * t1683;
t1443 = t1484 * t1643;
t1538 = qJDD(2) - qJDD(4);
t1722 = -t1538 - t1443;
t1734 = t1548 * t1722;
t1733 = t1553 * t1722;
t1658 = t1508 * t1549;
t1458 = t1514 * t1554 + t1658;
t1730 = pkin(1) * t1458;
t1729 = pkin(7) * t1458;
t1546 = sin(qJ(6));
t1547 = sin(qJ(5));
t1552 = cos(qJ(5));
t1431 = t1552 * t1484 - t1547 * t1643;
t1499 = t1528 + t1642;
t1532 = t1554 * qJDD(1);
t1634 = qJD(2) * t1684;
t1604 = -t1532 + t1634;
t1413 = -qJD(4) * t1643 + t1553 * t1499 + t1548 * t1604;
t1619 = t1548 * t1499 - t1553 * t1604;
t1578 = qJD(4) * t1484 + t1619;
t1620 = t1547 * t1413 + t1552 * t1578;
t1317 = -t1431 * qJD(5) - t1620;
t1316 = qJDD(6) - t1317;
t1551 = cos(qJ(6));
t1539 = qJD(2) - qJD(4);
t1633 = -qJD(5) + t1539;
t1405 = t1431 * t1546 + t1551 * t1633;
t1407 = t1551 * t1431 - t1546 * t1633;
t1347 = t1407 * t1405;
t1717 = t1316 - t1347;
t1728 = t1546 * t1717;
t1429 = t1484 * t1547 + t1552 * t1643;
t1373 = t1431 * t1429;
t1531 = -qJDD(5) + t1538;
t1716 = -t1373 - t1531;
t1727 = t1547 * t1716;
t1726 = t1551 * t1717;
t1725 = t1552 * t1716;
t1689 = t1554 * g(3);
t1595 = -qJDD(2) * pkin(2) - t1556 * qJ(3) + qJDD(3) + t1689;
t1511 = g(1) * t1555 + g(2) * t1550;
t1486 = -pkin(1) * t1557 + qJDD(1) * pkin(7) - t1511;
t1696 = pkin(2) * t1554;
t1606 = -qJ(3) * t1549 - t1696;
t1496 = t1606 * qJD(1);
t1622 = qJD(1) * t1496 + t1486;
t1412 = t1549 * t1622 + t1595;
t1507 = qJDD(2) + t1521;
t1701 = t1554 ^ 2;
t1648 = t1701 * t1557;
t1517 = -t1556 - t1648;
t1724 = pkin(2) * t1507 + qJ(3) * t1517 - t1412;
t1318 = -t1429 * qJD(5) + t1552 * t1413 - t1547 * t1578;
t1422 = t1429 * t1633;
t1723 = t1422 + t1318;
t1500 = t1532 - 0.2e1 * t1634;
t1452 = t1500 * t1554;
t1665 = t1498 * t1549;
t1447 = -t1452 + t1665;
t1506 = (t1543 - t1701) * t1557;
t1721 = t1447 * t1550 + t1506 * t1555;
t1720 = t1447 * t1555 - t1506 * t1550;
t1516 = -t1556 + t1648;
t1462 = -t1516 * t1554 + t1658;
t1719 = t1462 * t1550 + t1555 * t1532;
t1718 = t1462 * t1555 - t1550 * t1532;
t1623 = t1633 ^ 2;
t1641 = t1643 ^ 2;
t1681 = qJD(3) * qJD(2);
t1533 = 0.2e1 * t1681;
t1468 = -t1549 * g(3) + t1554 * t1486;
t1598 = -t1556 * pkin(2) + qJDD(2) * qJ(3) + t1496 * t1683 + t1468;
t1404 = t1533 + t1598;
t1509 = -qJD(2) * pkin(3) - pkin(8) * t1684;
t1366 = -pkin(3) * t1648 + pkin(8) * t1604 + qJD(2) * t1509 + t1404;
t1367 = -qJDD(2) * pkin(3) + (-t1499 + t1528) * pkin(8) + (-pkin(3) * t1649 + t1622) * t1549 + t1595;
t1306 = t1553 * t1366 + t1548 * t1367;
t1469 = -pkin(4) * t1539 - pkin(9) * t1484;
t1275 = -pkin(4) * t1641 - pkin(9) * t1578 + t1539 * t1469 + t1306;
t1305 = t1548 * t1366 - t1553 * t1367;
t1477 = t1643 * t1539;
t1386 = -t1477 + t1413;
t1559 = pkin(4) * t1722 - pkin(9) * t1386 - t1305;
t1206 = t1552 * t1275 + t1547 * t1559;
t1368 = pkin(5) * t1429 - pkin(10) * t1431;
t1183 = -pkin(5) * t1623 - t1531 * pkin(10) - t1429 * t1368 + t1206;
t1510 = t1550 * g(1) - t1555 * g(2);
t1485 = qJDD(1) * pkin(1) + t1557 * pkin(7) + t1510;
t1562 = -pkin(2) * t1634 + t1485;
t1700 = 0.2e1 * qJD(3);
t1352 = t1532 * pkin(2) + t1499 * qJ(3) - t1604 * pkin(3) - pkin(8) * t1648 + (qJ(3) * t1682 + (-pkin(2) * qJD(2) + t1509 + t1700) * t1549) * qJD(1) + t1562;
t1285 = t1578 * pkin(4) - t1641 * pkin(9) + t1484 * t1469 + t1352;
t1610 = t1633 * t1431;
t1195 = t1285 + (-t1317 - t1610) * pkin(5) - t1723 * pkin(10);
t1138 = t1183 * t1546 - t1551 * t1195;
t1139 = t1183 * t1551 + t1195 * t1546;
t1094 = t1546 * t1138 + t1551 * t1139;
t1243 = -t1553 * t1305 + t1306 * t1548;
t1715 = t1477 + t1413;
t1454 = t1516 * t1549 + t1650;
t1205 = t1547 * t1275 - t1552 * t1559;
t1182 = t1531 * pkin(5) - pkin(10) * t1623 + t1368 * t1431 + t1205;
t1077 = t1094 * t1547 - t1182 * t1552;
t1078 = t1094 * t1552 + t1182 * t1547;
t1054 = t1077 * t1553 + t1078 * t1548;
t1055 = -t1077 * t1548 + t1078 * t1553;
t1646 = -pkin(5) * t1182 + pkin(10) * t1094;
t1630 = -pkin(4) * t1077 - t1646;
t1699 = pkin(2) + pkin(3);
t1713 = qJ(3) * t1055 - t1054 * t1699 + t1630;
t1142 = t1205 * t1547 + t1552 * t1206;
t1141 = -t1205 * t1552 + t1206 * t1547;
t1679 = t1141 * t1553;
t1096 = t1142 * t1548 + t1679;
t1680 = t1141 * t1548;
t1097 = t1142 * t1553 - t1680;
t1140 = pkin(4) * t1141;
t1712 = qJ(3) * t1097 - t1096 * t1699 - t1140;
t1426 = qJD(6) + t1429;
t1621 = -t1546 * t1318 - t1551 * t1531;
t1258 = (-qJD(6) + t1426) * t1407 + t1621;
t1597 = -t1551 * t1318 + t1546 * t1531;
t1284 = -qJD(6) * t1405 - t1597;
t1358 = t1426 * t1405;
t1260 = t1284 + t1358;
t1192 = t1258 * t1551 + t1260 * t1546;
t1402 = t1405 ^ 2;
t1403 = t1407 ^ 2;
t1315 = t1402 + t1403;
t1159 = t1192 * t1547 + t1315 * t1552;
t1160 = t1192 * t1552 - t1315 * t1547;
t1115 = t1159 * t1553 + t1160 * t1548;
t1116 = -t1159 * t1548 + t1160 * t1553;
t1615 = pkin(5) * t1315 + pkin(10) * t1192 + t1094;
t1599 = pkin(4) * t1159 + t1615;
t1711 = qJ(3) * t1116 - t1115 * t1699 - t1599;
t1425 = t1426 ^ 2;
t1323 = -t1425 - t1402;
t1218 = t1323 * t1551 - t1728;
t1359 = t1426 * t1407;
t1577 = qJD(6) * t1407 - t1621;
t1257 = -t1359 - t1577;
t1169 = t1218 * t1547 + t1257 * t1552;
t1170 = t1218 * t1552 - t1257 * t1547;
t1124 = t1169 * t1553 + t1170 * t1548;
t1125 = -t1169 * t1548 + t1170 * t1553;
t1180 = t1551 * t1182;
t1631 = pkin(5) * t1257 + pkin(10) * t1218 - t1180;
t1613 = -pkin(4) * t1169 - t1631;
t1710 = qJ(3) * t1125 - t1124 * t1699 + t1613;
t1339 = -t1403 - t1425;
t1278 = t1316 + t1347;
t1677 = t1278 * t1551;
t1227 = -t1339 * t1546 - t1677;
t1261 = (qJD(6) + t1426) * t1405 + t1597;
t1175 = t1227 * t1547 + t1261 * t1552;
t1176 = t1227 * t1552 - t1261 * t1547;
t1126 = t1175 * t1553 + t1176 * t1548;
t1127 = -t1175 * t1548 + t1176 * t1553;
t1179 = t1546 * t1182;
t1632 = pkin(5) * t1261 + pkin(10) * t1227 + t1179;
t1614 = pkin(4) * t1175 + t1632;
t1709 = qJ(3) * t1127 - t1126 * t1699 - t1614;
t1293 = t1431 * t1539 + t1620;
t1296 = -t1422 + t1318;
t1230 = -t1293 * t1547 - t1296 * t1552;
t1232 = -t1293 * t1552 + t1296 * t1547;
t1155 = t1230 * t1553 + t1232 * t1548;
t1157 = -t1230 * t1548 + t1232 * t1553;
t1228 = pkin(4) * t1230;
t1708 = qJ(3) * t1157 - t1155 * t1699 - t1228;
t1427 = t1429 ^ 2;
t1362 = -t1623 - t1427;
t1301 = t1362 * t1547 + t1725;
t1302 = t1362 * t1552 - t1727;
t1235 = t1301 * t1553 + t1302 * t1548;
t1236 = -t1301 * t1548 + t1302 * t1553;
t1603 = -pkin(4) * t1301 + t1205;
t1707 = qJ(3) * t1236 - t1235 * t1699 + t1603;
t1244 = t1548 * t1305 + t1553 * t1306;
t1706 = qJ(3) * t1244 - t1243 * t1699;
t1428 = t1431 ^ 2;
t1408 = -t1428 - t1623;
t1363 = -t1373 + t1531;
t1673 = t1363 * t1547;
t1327 = t1408 * t1552 + t1673;
t1672 = t1363 * t1552;
t1328 = -t1408 * t1547 + t1672;
t1266 = t1327 * t1553 + t1328 * t1548;
t1267 = -t1327 * t1548 + t1328 * t1553;
t1629 = -pkin(4) * t1327 + t1206;
t1705 = qJ(3) * t1267 - t1266 * t1699 + t1629;
t1382 = (qJD(4) + t1539) * t1484 + t1619;
t1320 = -t1382 * t1548 - t1386 * t1553;
t1322 = -t1382 * t1553 + t1386 * t1548;
t1704 = qJ(3) * t1322 - t1320 * t1699;
t1537 = t1539 ^ 2;
t1432 = -t1537 - t1641;
t1369 = t1432 * t1548 + t1733;
t1370 = t1432 * t1553 - t1734;
t1703 = qJ(3) * t1370 - t1369 * t1699 + t1305;
t1483 = t1484 ^ 2;
t1466 = -t1483 - t1537;
t1439 = -t1443 + t1538;
t1669 = t1439 * t1548;
t1387 = t1466 * t1553 + t1669;
t1668 = t1439 * t1553;
t1388 = -t1466 * t1548 + t1668;
t1702 = qJ(3) * t1388 - t1387 * t1699 + t1306;
t1491 = t1554 * t1507;
t1455 = t1517 * t1549 + t1491;
t1698 = pkin(1) * t1455;
t1695 = pkin(5) * t1547;
t1659 = t1507 * t1549;
t1461 = t1517 * t1554 - t1659;
t1694 = pkin(6) * (t1461 * t1550 + t1500 * t1555);
t1640 = t1543 + t1701;
t1502 = t1640 * qJDD(1);
t1505 = t1640 * t1557;
t1693 = pkin(6) * (t1502 * t1550 + t1505 * t1555);
t1692 = pkin(7) * t1455;
t1691 = pkin(8) * t1243;
t1690 = pkin(8) * t1244;
t1685 = qJD(1) * qJD(2);
t1678 = t1278 * t1546;
t1676 = t1285 * t1547;
t1675 = t1285 * t1552;
t1671 = t1426 * t1546;
t1670 = t1426 * t1551;
t1667 = t1485 * t1549;
t1666 = t1485 * t1554;
t1662 = t1500 * t1549;
t1655 = t1539 * t1484;
t1653 = t1548 * t1352;
t1652 = t1548 * t1484;
t1348 = t1553 * t1352;
t1651 = t1553 * t1484;
t1645 = pkin(1) * t1500 + pkin(7) * t1461;
t1644 = pkin(1) * t1505 + pkin(7) * t1502;
t1639 = -pkin(5) * t1552 - pkin(4);
t1638 = t1547 * t1347;
t1637 = t1552 * t1347;
t1636 = t1550 * t1373;
t1635 = t1555 * t1373;
t1626 = -pkin(8) * t1387 + t1348;
t1467 = t1549 * t1486 + t1689;
t1400 = t1467 * t1549 + t1554 * t1468;
t1618 = -t1510 * t1550 - t1555 * t1511;
t1617 = t1550 * t1521;
t1616 = t1555 * t1521;
t1504 = qJDD(1) * t1555 - t1550 * t1557;
t1612 = -pkin(6) * t1504 - g(3) * t1550;
t1609 = t1550 * t1443;
t1608 = t1555 * t1443;
t1607 = -pkin(2) * t1412 + qJ(3) * t1404;
t1605 = t1499 + t1528;
t1602 = -pkin(8) * t1369 + t1653;
t1601 = -pkin(8) * t1370 + t1348;
t1600 = -pkin(8) * t1388 - t1653;
t1093 = -t1138 * t1551 + t1139 * t1546;
t1399 = t1467 * t1554 - t1468 * t1549;
t1444 = t1498 * t1554 + t1662;
t1596 = t1510 * t1555 - t1511 * t1550;
t1592 = t1547 * t1422;
t1591 = t1547 * t1610;
t1590 = t1552 * t1422;
t1589 = t1552 * t1610;
t1588 = t1604 * pkin(2);
t1043 = pkin(9) * t1078 + (-pkin(10) * t1547 + t1639) * t1093;
t1053 = -pkin(9) * t1077 + (-pkin(10) * t1552 + t1695) * t1093;
t1587 = -pkin(8) * t1054 - t1043 * t1548 + t1553 * t1053;
t1190 = t1258 * t1546 - t1260 * t1551;
t1079 = -pkin(10) * t1190 - t1093;
t1056 = pkin(9) * t1160 + t1547 * t1079 + t1190 * t1639;
t1060 = -pkin(9) * t1159 + t1079 * t1552 + t1190 * t1695;
t1586 = -pkin(8) * t1115 - t1056 * t1548 + t1553 * t1060;
t1217 = t1323 * t1546 + t1726;
t1107 = -pkin(5) * t1217 + t1138;
t1143 = -pkin(10) * t1217 + t1179;
t1068 = -pkin(4) * t1217 + pkin(9) * t1170 + t1107 * t1552 + t1143 * t1547;
t1073 = -pkin(9) * t1169 - t1107 * t1547 + t1143 * t1552;
t1585 = -pkin(8) * t1124 - t1068 * t1548 + t1553 * t1073;
t1226 = t1339 * t1551 - t1678;
t1108 = -pkin(5) * t1226 + t1139;
t1144 = -pkin(10) * t1226 + t1180;
t1069 = -pkin(4) * t1226 + pkin(9) * t1176 + t1108 * t1552 + t1144 * t1547;
t1075 = -pkin(9) * t1175 - t1108 * t1547 + t1144 * t1552;
t1584 = -pkin(8) * t1126 - t1069 * t1548 + t1553 * t1075;
t1343 = -t1427 - t1428;
t1109 = -pkin(4) * t1343 + pkin(9) * t1232 + t1142;
t1119 = -pkin(9) * t1230 - t1141;
t1583 = -pkin(8) * t1155 - t1109 * t1548 + t1553 * t1119;
t1292 = (0.2e1 * qJD(5) - t1539) * t1431 + t1620;
t1199 = -pkin(4) * t1292 + pkin(9) * t1302 - t1675;
t1234 = -pkin(9) * t1301 + t1676;
t1582 = -pkin(8) * t1235 - t1199 * t1548 + t1553 * t1234;
t1209 = -pkin(4) * t1723 + pkin(9) * t1328 + t1676;
t1242 = -pkin(9) * t1327 + t1675;
t1581 = -pkin(8) * t1266 - t1209 * t1548 + t1553 * t1242;
t1580 = -pkin(8) * t1320 - t1243;
t1579 = -pkin(8) * t1322 - t1244;
t1573 = -pkin(8) * t1055 - t1553 * t1043 - t1548 * t1053;
t1572 = -pkin(8) * t1116 - t1553 * t1056 - t1548 * t1060;
t1571 = -pkin(8) * t1125 - t1553 * t1068 - t1548 * t1073;
t1570 = -pkin(8) * t1127 - t1553 * t1069 - t1548 * t1075;
t1569 = -pkin(8) * t1157 - t1553 * t1109 - t1548 * t1119;
t1568 = -pkin(8) * t1236 - t1553 * t1199 - t1548 * t1234;
t1567 = -pkin(8) * t1267 - t1553 * t1209 - t1548 * t1242;
t1135 = -pkin(4) * t1285 + pkin(9) * t1142;
t1564 = -pkin(8) * t1096 - pkin(9) * t1679 - t1135 * t1548;
t1563 = -pkin(8) * t1097 + pkin(9) * t1680 - t1553 * t1135;
t1561 = pkin(2) * t1514 + qJ(3) * t1508 + t1598;
t1560 = t1684 * t1700 + t1562;
t1558 = qJ(3) * t1605 + t1560;
t1515 = -t1556 + t1654;
t1503 = qJDD(1) * t1550 + t1555 * t1557;
t1494 = -pkin(2) * t1642 + qJ(3) * t1532;
t1490 = t1640 * t1685;
t1482 = -pkin(6) * t1503 + g(3) * t1555;
t1475 = -t1483 + t1537;
t1474 = t1641 - t1537;
t1473 = qJDD(2) * t1550 + t1490 * t1555;
t1472 = t1499 * t1554 - t1543 * t1685;
t1471 = -qJDD(2) * t1555 + t1490 * t1550;
t1470 = t1549 * t1604 - t1685 * t1701;
t1463 = t1515 * t1549 + t1491;
t1457 = -t1515 * t1554 + t1659;
t1453 = t1605 * t1549;
t1448 = pkin(6) * (t1502 * t1555 - t1505 * t1550);
t1442 = t1483 - t1641;
t1438 = t1472 * t1555 - t1617;
t1437 = t1470 * t1555 + t1617;
t1436 = t1472 * t1550 + t1616;
t1435 = t1470 * t1550 - t1616;
t1434 = t1463 * t1555 + t1550 * t1642;
t1433 = t1463 * t1550 - t1555 * t1642;
t1421 = pkin(6) * (t1461 * t1555 - t1500 * t1550);
t1420 = -t1428 + t1623;
t1419 = t1427 - t1623;
t1418 = (t1553 * t1643 - t1652) * t1539;
t1417 = (t1548 * t1643 + t1651) * t1539;
t1416 = -t1666 + t1729;
t1415 = -t1667 - t1692;
t1414 = -t1641 - t1483;
t1411 = t1468 + t1730;
t1410 = t1467 - t1698;
t1397 = t1645 + t1666;
t1396 = -pkin(1) * t1498 - t1667 - t1735;
t1395 = qJ(3) * t1505 + t1412;
t1394 = pkin(2) * t1505 + t1404;
t1393 = -t1588 + t1558;
t1392 = t1474 * t1553 + t1669;
t1391 = -t1475 * t1548 + t1733;
t1390 = t1474 * t1548 - t1668;
t1389 = t1475 * t1553 + t1734;
t1381 = (qJD(4) - t1539) * t1484 + t1619;
t1380 = pkin(1) * t1485 + pkin(7) * t1400;
t1379 = t1413 * t1553 + t1539 * t1652;
t1378 = t1413 * t1548 - t1539 * t1651;
t1377 = -t1477 * t1553 + t1548 * t1578;
t1376 = t1477 * t1548 + t1553 * t1578;
t1375 = (t1500 - t1604) * pkin(2) + t1558;
t1374 = -t1588 + (t1498 + t1605) * qJ(3) + t1560;
t1372 = t1400 + t1644;
t1371 = t1428 - t1427;
t1357 = -t1403 + t1425;
t1356 = t1402 - t1425;
t1355 = t1590 - t1591;
t1354 = t1592 + t1589;
t1353 = -t1698 - t1724;
t1351 = -t1561 - 0.2e1 * t1681 - t1730;
t1350 = t1417 * t1549 + t1418 * t1554;
t1349 = -t1417 * t1554 + t1418 * t1549;
t1346 = t1403 - t1402;
t1345 = t1404 * t1554 + t1412 * t1549;
t1344 = t1404 * t1549 - t1412 * t1554;
t1342 = -pkin(2) * t1665 + t1374 * t1554 - t1729;
t1341 = qJ(3) * t1452 - t1375 * t1549 - t1692;
t1340 = -t1394 * t1549 + t1395 * t1554;
t1338 = t1390 * t1549 + t1392 * t1554;
t1337 = t1389 * t1549 + t1391 * t1554;
t1336 = -t1390 * t1554 + t1392 * t1549;
t1335 = -t1389 * t1554 + t1391 * t1549;
t1334 = t1419 * t1552 + t1673;
t1333 = -t1420 * t1547 + t1725;
t1332 = t1419 * t1547 - t1672;
t1331 = t1420 * t1552 + t1727;
t1330 = t1735 + t1549 * t1374 + (pkin(1) + t1696) * t1498;
t1329 = qJ(3) * t1662 + t1375 * t1554 + t1645;
t1325 = t1387 * t1549 + t1388 * t1554;
t1324 = -t1387 * t1554 + t1388 * t1549;
t1321 = -t1381 * t1553 - t1548 * t1715;
t1319 = -t1381 * t1548 + t1553 * t1715;
t1314 = t1394 * t1554 + t1395 * t1549 + t1644;
t1312 = t1378 * t1549 + t1379 * t1554;
t1311 = -t1376 * t1549 + t1377 * t1554;
t1310 = -t1378 * t1554 + t1379 * t1549;
t1309 = t1376 * t1554 + t1377 * t1549;
t1308 = t1369 * t1549 + t1370 * t1554;
t1307 = -t1369 * t1554 + t1370 * t1549;
t1299 = (-t1405 * t1551 + t1407 * t1546) * t1426;
t1298 = (-t1405 * t1546 - t1407 * t1551) * t1426;
t1291 = -t1354 * t1548 + t1355 * t1553;
t1290 = t1354 * t1553 + t1355 * t1548;
t1289 = t1552 * t1318 + t1591;
t1288 = t1547 * t1318 - t1589;
t1287 = -t1547 * t1317 - t1590;
t1286 = t1552 * t1317 - t1592;
t1283 = -pkin(1) * t1344 - t1607;
t1281 = qJ(3) * t1715 + t1626;
t1280 = -pkin(7) * t1344 + (-pkin(2) * t1549 + qJ(3) * t1554) * t1393;
t1276 = qJ(3) * t1381 + t1602;
t1273 = -t1332 * t1548 + t1334 * t1553;
t1272 = -t1331 * t1548 + t1333 * t1553;
t1271 = t1332 * t1553 + t1334 * t1548;
t1270 = t1331 * t1553 + t1333 * t1548;
t1265 = t1320 * t1549 + t1322 * t1554;
t1264 = t1319 * t1549 + t1321 * t1554;
t1263 = -t1320 * t1554 + t1322 * t1549;
t1262 = -t1319 * t1554 + t1321 * t1549;
t1259 = t1284 - t1358;
t1256 = -t1359 + t1577;
t1253 = t1284 * t1551 - t1407 * t1671;
t1252 = t1284 * t1546 + t1407 * t1670;
t1251 = t1405 * t1670 + t1546 * t1577;
t1250 = -t1405 * t1671 + t1551 * t1577;
t1249 = pkin(7) * t1345 + (pkin(1) - t1606) * t1393;
t1248 = t1699 * t1715 + t1600;
t1247 = t1381 * t1699 + t1601;
t1246 = t1299 * t1552 + t1316 * t1547;
t1245 = t1299 * t1547 - t1316 * t1552;
t1241 = t1356 * t1551 - t1678;
t1240 = -t1357 * t1546 + t1726;
t1239 = t1356 * t1546 + t1677;
t1238 = t1357 * t1551 + t1728;
t1231 = -t1292 * t1552 - t1547 * t1723;
t1229 = -t1292 * t1547 + t1552 * t1723;
t1224 = t1290 * t1549 + t1291 * t1554;
t1223 = -t1290 * t1554 + t1291 * t1549;
t1222 = -t1288 * t1548 + t1289 * t1553;
t1221 = -t1286 * t1548 + t1287 * t1553;
t1220 = t1288 * t1553 + t1289 * t1548;
t1219 = t1286 * t1553 + t1287 * t1548;
t1215 = t1253 * t1552 + t1638;
t1214 = t1251 * t1552 - t1638;
t1213 = t1253 * t1547 - t1637;
t1212 = t1251 * t1547 + t1637;
t1211 = qJ(3) * t1352 - t1691;
t1210 = -pkin(1) * t1324 - t1702;
t1208 = qJ(3) * t1414 + t1580;
t1207 = t1352 * t1699 - t1690;
t1203 = t1271 * t1549 + t1273 * t1554;
t1202 = t1270 * t1549 + t1272 * t1554;
t1201 = -t1271 * t1554 + t1273 * t1549;
t1200 = -t1270 * t1554 + t1272 * t1549;
t1198 = -pkin(1) * t1307 - t1703;
t1197 = t1266 * t1549 + t1267 * t1554;
t1196 = -t1266 * t1554 + t1267 * t1549;
t1193 = t1414 * t1699 + t1579;
t1191 = t1257 * t1551 - t1259 * t1546;
t1189 = t1257 * t1546 + t1259 * t1551;
t1187 = t1241 * t1552 - t1256 * t1547;
t1186 = t1240 * t1552 + t1260 * t1547;
t1185 = t1241 * t1547 + t1256 * t1552;
t1184 = t1240 * t1547 - t1260 * t1552;
t1178 = -t1245 * t1548 + t1246 * t1553;
t1177 = t1245 * t1553 + t1246 * t1548;
t1174 = t1243 * t1549 + t1244 * t1554;
t1173 = -t1243 * t1554 + t1244 * t1549;
t1171 = -pkin(7) * t1324 - t1248 * t1549 + t1281 * t1554;
t1167 = t1235 * t1549 + t1236 * t1554;
t1166 = -t1235 * t1554 + t1236 * t1549;
t1165 = t1191 * t1552 + t1346 * t1547;
t1164 = t1191 * t1547 - t1346 * t1552;
t1163 = -pkin(1) * t1263 - t1704;
t1162 = -pkin(7) * t1307 - t1247 * t1549 + t1276 * t1554;
t1161 = pkin(1) * t1715 + pkin(7) * t1325 + t1248 * t1554 + t1281 * t1549;
t1156 = -t1229 * t1548 + t1231 * t1553;
t1154 = t1229 * t1553 + t1231 * t1548;
t1153 = t1220 * t1549 + t1222 * t1554;
t1152 = t1219 * t1549 + t1221 * t1554;
t1151 = -t1220 * t1554 + t1222 * t1549;
t1150 = -t1219 * t1554 + t1221 * t1549;
t1149 = pkin(1) * t1381 + pkin(7) * t1308 + t1247 * t1554 + t1276 * t1549;
t1148 = -t1213 * t1548 + t1215 * t1553;
t1147 = -t1212 * t1548 + t1214 * t1553;
t1146 = t1213 * t1553 + t1215 * t1548;
t1145 = t1212 * t1553 + t1214 * t1548;
t1134 = -t1185 * t1548 + t1187 * t1553;
t1133 = -t1184 * t1548 + t1186 * t1553;
t1132 = t1185 * t1553 + t1187 * t1548;
t1131 = t1184 * t1553 + t1186 * t1548;
t1130 = qJ(3) * t1723 + t1581;
t1129 = t1177 * t1549 + t1178 * t1554;
t1128 = -t1177 * t1554 + t1178 * t1549;
t1123 = -pkin(7) * t1263 - t1193 * t1549 + t1208 * t1554;
t1122 = -t1164 * t1548 + t1165 * t1553;
t1121 = t1164 * t1553 + t1165 * t1548;
t1120 = pkin(1) * t1414 + pkin(7) * t1265 + t1193 * t1554 + t1208 * t1549;
t1117 = qJ(3) * t1292 + t1582;
t1114 = t1155 * t1549 + t1157 * t1554;
t1113 = t1154 * t1549 + t1156 * t1554;
t1112 = -t1155 * t1554 + t1157 * t1549;
t1111 = -t1154 * t1554 + t1156 * t1549;
t1110 = t1699 * t1723 + t1567;
t1106 = t1146 * t1549 + t1148 * t1554;
t1105 = t1145 * t1549 + t1147 * t1554;
t1104 = -t1146 * t1554 + t1148 * t1549;
t1103 = -t1145 * t1554 + t1147 * t1549;
t1102 = -pkin(7) * t1173 - t1207 * t1549 + t1211 * t1554;
t1101 = t1292 * t1699 + t1568;
t1100 = -pkin(1) * t1173 - t1706;
t1099 = pkin(1) * t1352 + pkin(7) * t1174 + t1207 * t1554 + t1211 * t1549;
t1098 = -pkin(1) * t1196 - t1705;
t1095 = -pkin(1) * t1166 - t1707;
t1091 = t1132 * t1549 + t1134 * t1554;
t1090 = t1131 * t1549 + t1133 * t1554;
t1089 = -t1132 * t1554 + t1134 * t1549;
t1088 = -t1131 * t1554 + t1133 * t1549;
t1087 = t1126 * t1549 + t1127 * t1554;
t1086 = -t1126 * t1554 + t1127 * t1549;
t1085 = t1124 * t1549 + t1125 * t1554;
t1084 = -t1124 * t1554 + t1125 * t1549;
t1083 = t1121 * t1549 + t1122 * t1554;
t1082 = -t1121 * t1554 + t1122 * t1549;
t1081 = t1115 * t1549 + t1116 * t1554;
t1080 = -t1115 * t1554 + t1116 * t1549;
t1071 = -pkin(7) * t1196 - t1110 * t1549 + t1130 * t1554;
t1070 = pkin(1) * t1723 + pkin(7) * t1197 + t1110 * t1554 + t1130 * t1549;
t1067 = -pkin(7) * t1166 - t1101 * t1549 + t1117 * t1554;
t1066 = qJ(3) * t1343 + t1583;
t1065 = t1343 * t1699 + t1569;
t1064 = pkin(1) * t1292 + pkin(7) * t1167 + t1101 * t1554 + t1117 * t1549;
t1063 = -pkin(1) * t1112 - t1708;
t1062 = t1096 * t1549 + t1097 * t1554;
t1061 = -t1096 * t1554 + t1097 * t1549;
t1058 = qJ(3) * t1285 + t1564;
t1057 = t1285 * t1699 + t1563;
t1051 = qJ(3) * t1226 + t1584;
t1050 = -pkin(1) * t1086 - t1709;
t1049 = qJ(3) * t1217 + t1585;
t1048 = -pkin(1) * t1084 - t1710;
t1047 = t1226 * t1699 + t1570;
t1046 = t1217 * t1699 + t1571;
t1045 = -pkin(7) * t1112 - t1065 * t1549 + t1066 * t1554;
t1044 = pkin(1) * t1343 + pkin(7) * t1114 + t1065 * t1554 + t1066 * t1549;
t1042 = -pkin(1) * t1080 - t1711;
t1041 = qJ(3) * t1190 + t1586;
t1040 = -pkin(1) * t1061 - t1712;
t1039 = t1190 * t1699 + t1572;
t1038 = t1054 * t1549 + t1055 * t1554;
t1037 = -t1054 * t1554 + t1055 * t1549;
t1036 = -pkin(7) * t1061 - t1057 * t1549 + t1058 * t1554;
t1035 = pkin(1) * t1285 + pkin(7) * t1062 + t1057 * t1554 + t1058 * t1549;
t1034 = -pkin(7) * t1086 - t1047 * t1549 + t1051 * t1554;
t1033 = -pkin(7) * t1084 - t1046 * t1549 + t1049 * t1554;
t1032 = pkin(1) * t1226 + pkin(7) * t1087 + t1047 * t1554 + t1051 * t1549;
t1031 = pkin(1) * t1217 + pkin(7) * t1085 + t1046 * t1554 + t1049 * t1549;
t1030 = -pkin(7) * t1080 - t1039 * t1549 + t1041 * t1554;
t1029 = pkin(1) * t1190 + pkin(7) * t1081 + t1039 * t1554 + t1041 * t1549;
t1028 = qJ(3) * t1093 + t1587;
t1027 = t1093 * t1699 + t1573;
t1026 = -pkin(1) * t1037 - t1713;
t1025 = -pkin(7) * t1037 - t1027 * t1549 + t1028 * t1554;
t1024 = pkin(1) * t1093 + pkin(7) * t1038 + t1027 * t1554 + t1028 * t1549;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1504, 0, -t1503, 0, t1612, -t1482, -t1596, -pkin(6) * t1596, t1438, -t1720, t1434, t1437, -t1718, t1473, -t1410 * t1550 + t1415 * t1555 - t1694, -t1550 * t1411 + t1555 * t1416 + t1736, t1399 * t1555 - t1693, -pkin(6) * (t1400 * t1550 + t1485 * t1555) - (pkin(1) * t1550 - pkin(7) * t1555) * t1399, t1438, t1434, t1720, t1473, t1718, t1437, t1341 * t1555 - t1353 * t1550 - t1694, t1340 * t1555 + t1494 * t1550 - t1693, t1555 * t1342 - t1550 * t1351 - t1736, t1555 * t1280 - t1550 * t1283 - pkin(6) * (t1345 * t1550 + t1393 * t1555), t1555 * t1312 - t1609, t1264 * t1555 - t1442 * t1550, t1337 * t1555 - t1386 * t1550, t1555 * t1311 + t1609, t1338 * t1555 + t1382 * t1550, t1350 * t1555 + t1538 * t1550, t1555 * t1162 - t1550 * t1198 - pkin(6) * (t1308 * t1550 + t1381 * t1555), t1555 * t1171 - t1550 * t1210 - pkin(6) * (t1325 * t1550 + t1555 * t1715), t1555 * t1123 - t1550 * t1163 - pkin(6) * (t1265 * t1550 + t1414 * t1555), t1555 * t1102 - t1550 * t1100 - pkin(6) * (t1174 * t1550 + t1352 * t1555), t1153 * t1555 - t1636, t1113 * t1555 - t1371 * t1550, t1202 * t1555 - t1296 * t1550, t1152 * t1555 + t1636, t1203 * t1555 + t1293 * t1550, t1224 * t1555 + t1531 * t1550, t1555 * t1067 - t1550 * t1095 - pkin(6) * (t1167 * t1550 + t1292 * t1555), t1555 * t1071 - t1550 * t1098 - pkin(6) * (t1197 * t1550 + t1555 * t1723), t1555 * t1045 - t1550 * t1063 - pkin(6) * (t1114 * t1550 + t1343 * t1555), t1555 * t1036 - t1550 * t1040 - pkin(6) * (t1062 * t1550 + t1285 * t1555), t1106 * t1555 - t1252 * t1550, t1083 * t1555 - t1189 * t1550, t1090 * t1555 - t1238 * t1550, t1105 * t1555 + t1250 * t1550, t1091 * t1555 - t1239 * t1550, t1129 * t1555 - t1298 * t1550, t1555 * t1033 - t1550 * t1048 - pkin(6) * (t1085 * t1550 + t1217 * t1555), t1555 * t1034 - t1550 * t1050 - pkin(6) * (t1087 * t1550 + t1226 * t1555), t1555 * t1030 - t1550 * t1042 - pkin(6) * (t1081 * t1550 + t1190 * t1555), t1555 * t1025 - t1550 * t1026 - pkin(6) * (t1038 * t1550 + t1093 * t1555); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1503, 0, t1504, 0, t1482, t1612, t1618, pkin(6) * t1618, t1436, -t1721, t1433, t1435, -t1719, t1471, t1410 * t1555 + t1415 * t1550 + t1421, t1555 * t1411 + t1550 * t1416 - t1737, t1399 * t1550 + t1448, pkin(6) * (t1400 * t1555 - t1485 * t1550) - (-pkin(1) * t1555 - pkin(7) * t1550) * t1399, t1436, t1433, t1721, t1471, t1719, t1435, t1341 * t1550 + t1353 * t1555 + t1421, t1340 * t1550 - t1494 * t1555 + t1448, t1550 * t1342 + t1555 * t1351 + t1737, t1550 * t1280 + t1555 * t1283 + pkin(6) * (t1345 * t1555 - t1393 * t1550), t1550 * t1312 + t1608, t1264 * t1550 + t1442 * t1555, t1337 * t1550 + t1386 * t1555, t1550 * t1311 - t1608, t1338 * t1550 - t1382 * t1555, t1350 * t1550 - t1538 * t1555, t1550 * t1162 + t1555 * t1198 + pkin(6) * (t1308 * t1555 - t1381 * t1550), t1550 * t1171 + t1555 * t1210 + pkin(6) * (t1325 * t1555 - t1550 * t1715), t1550 * t1123 + t1555 * t1163 + pkin(6) * (t1265 * t1555 - t1414 * t1550), t1550 * t1102 + t1555 * t1100 + pkin(6) * (t1174 * t1555 - t1352 * t1550), t1153 * t1550 + t1635, t1113 * t1550 + t1371 * t1555, t1202 * t1550 + t1296 * t1555, t1152 * t1550 - t1635, t1203 * t1550 - t1293 * t1555, t1224 * t1550 - t1531 * t1555, t1550 * t1067 + t1555 * t1095 + pkin(6) * (t1167 * t1555 - t1292 * t1550), t1550 * t1071 + t1555 * t1098 + pkin(6) * (t1197 * t1555 - t1550 * t1723), t1550 * t1045 + t1555 * t1063 + pkin(6) * (t1114 * t1555 - t1343 * t1550), t1550 * t1036 + t1555 * t1040 + pkin(6) * (t1062 * t1555 - t1285 * t1550), t1106 * t1550 + t1252 * t1555, t1083 * t1550 + t1189 * t1555, t1090 * t1550 + t1238 * t1555, t1105 * t1550 - t1250 * t1555, t1091 * t1550 + t1239 * t1555, t1129 * t1550 + t1298 * t1555, t1550 * t1033 + t1555 * t1048 + pkin(6) * (t1085 * t1555 - t1217 * t1550), t1550 * t1034 + t1555 * t1050 + pkin(6) * (t1087 * t1555 - t1226 * t1550), t1550 * t1030 + t1555 * t1042 + pkin(6) * (t1081 * t1555 - t1190 * t1550), t1550 * t1025 + t1555 * t1026 + pkin(6) * (t1038 * t1555 - t1093 * t1550); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1510, t1511, 0, 0, t1453, t1444, t1457, t1452, t1454, 0, t1397, t1396, t1372, t1380, t1453, t1457, -t1444, 0, -t1454, t1452, t1329, t1314, t1330, t1249, t1310, t1262, t1335, t1309, t1336, t1349, t1149, t1161, t1120, t1099, t1151, t1111, t1200, t1150, t1201, t1223, t1064, t1070, t1044, t1035, t1104, t1082, t1088, t1103, t1089, t1128, t1031, t1032, t1029, t1024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1557, 0, 0, -g(3), -t1510, 0, t1472, -t1447, t1463, t1470, -t1462, t1490, t1415, t1416, t1399, pkin(7) * t1399, t1472, t1463, t1447, t1490, t1462, t1470, t1341, t1340, t1342, t1280, t1312, t1264, t1337, t1311, t1338, t1350, t1162, t1171, t1123, t1102, t1153, t1113, t1202, t1152, t1203, t1224, t1067, t1071, t1045, t1036, t1106, t1083, t1090, t1105, t1091, t1129, t1033, t1034, t1030, t1025; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1557, 0, qJDD(1), 0, g(3), 0, -t1511, 0, t1521, -t1506, -t1642, -t1521, -t1532, -qJDD(2), t1410, t1411, 0, pkin(1) * t1399, t1521, -t1642, t1506, -qJDD(2), t1532, -t1521, t1353, -t1494, t1351, t1283, t1443, t1442, t1386, -t1443, -t1382, -t1538, t1198, t1210, t1163, t1100, t1373, t1371, t1296, -t1373, -t1293, -t1531, t1095, t1098, t1063, t1040, t1252, t1189, t1238, -t1250, t1239, t1298, t1048, t1050, t1042, t1026; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1510, t1511, 0, 0, t1453, t1444, t1457, t1452, t1454, 0, t1397, t1396, t1372, t1380, t1453, t1457, -t1444, 0, -t1454, t1452, t1329, t1314, t1330, t1249, t1310, t1262, t1335, t1309, t1336, t1349, t1149, t1161, t1120, t1099, t1151, t1111, t1200, t1150, t1201, t1223, t1064, t1070, t1044, t1035, t1104, t1082, t1088, t1103, t1089, t1128, t1031, t1032, t1029, t1024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1499, t1500, t1507, -t1528, t1516, t1528, 0, -t1485, t1467, 0, t1499, t1507, -t1500, t1528, -t1516, -t1528, qJ(3) * t1500, t1395, t1374, qJ(3) * t1393, t1379, t1321, t1391, t1377, t1392, t1418, t1276, t1281, t1208, t1211, t1222, t1156, t1272, t1221, t1273, t1291, t1117, t1130, t1066, t1058, t1148, t1122, t1133, t1147, t1134, t1178, t1049, t1051, t1041, t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1634, t1498, -t1515, -t1604, t1508, -t1634, t1485, 0, t1468, 0, t1634, -t1515, -t1498, -t1634, -t1508, -t1604, t1375, t1394, pkin(2) * t1498, pkin(2) * t1393, -t1378, -t1319, -t1389, t1376, -t1390, -t1417, t1247, t1248, t1193, t1207, -t1220, -t1154, -t1270, -t1219, -t1271, -t1290, t1101, t1110, t1065, t1057, -t1146, -t1121, -t1131, -t1145, -t1132, -t1177, t1046, t1047, t1039, t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1521, t1506, t1642, t1521, t1532, qJDD(2), -t1467, -t1468, 0, 0, -t1521, t1642, -t1506, qJDD(2), -t1532, t1521, t1724, t1494, t1533 + t1561, t1607, -t1443, -t1442, -t1386, t1443, t1382, t1538, t1703, t1702, t1704, t1706, -t1373, -t1371, -t1296, t1373, t1293, t1531, t1707, t1705, t1708, t1712, -t1252, -t1189, -t1238, t1250, -t1239, -t1298, t1710, t1709, t1711, t1713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1499, t1507, -t1500, t1528, -t1516, -t1528, 0, t1412, t1393, 0, t1379, t1321, t1391, t1377, t1392, t1418, t1602, t1626, t1580, -t1691, t1222, t1156, t1272, t1221, t1273, t1291, t1582, t1581, t1583, t1564, t1148, t1122, t1133, t1147, t1134, t1178, t1585, t1584, t1586, t1587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1521, t1642, -t1506, qJDD(2), -t1532, t1521, -t1412, 0, t1404, 0, -t1443, -t1442, -t1386, t1443, t1382, t1538, -pkin(3) * t1369 + t1305, -pkin(3) * t1387 + t1306, -pkin(3) * t1320, -pkin(3) * t1243, -t1373, -t1371, -t1296, t1373, t1293, t1531, -pkin(3) * t1235 + t1603, -pkin(3) * t1266 + t1629, -pkin(3) * t1155 - t1228, -pkin(3) * t1096 - t1140, -t1252, -t1189, -t1238, t1250, -t1239, -t1298, -pkin(3) * t1124 + t1613, -pkin(3) * t1126 - t1614, -pkin(3) * t1115 - t1599, -pkin(3) * t1054 + t1630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1634, t1515, t1498, t1634, t1508, t1604, -t1393, -t1404, 0, 0, t1378, t1319, t1389, -t1376, t1390, t1417, -pkin(3) * t1381 - t1601, -pkin(3) * t1715 - t1600, -pkin(3) * t1414 - t1579, -pkin(3) * t1352 + t1690, t1220, t1154, t1270, t1219, t1271, t1290, -pkin(3) * t1292 - t1568, -pkin(3) * t1723 - t1567, -pkin(3) * t1343 - t1569, -pkin(3) * t1285 - t1563, t1146, t1121, t1131, t1145, t1132, t1177, -pkin(3) * t1217 - t1571, -pkin(3) * t1226 - t1570, -pkin(3) * t1190 - t1572, -pkin(3) * t1093 - t1573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, -t1381, t1722, -t1477, t1474, t1477, 0, t1352, t1305, 0, t1289, t1231, t1333, t1287, t1334, t1355, t1234, t1242, t1119, -pkin(9) * t1141, t1215, t1165, t1186, t1214, t1187, t1246, t1073, t1075, t1060, t1053; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1655, t1715, t1475, -t1578, -t1439, t1655, -t1352, 0, t1306, 0, t1288, t1229, t1331, t1286, t1332, t1354, t1199, t1209, t1109, t1135, t1213, t1164, t1184, t1212, t1185, t1245, t1068, t1069, t1056, t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1443, t1442, t1386, -t1443, -t1382, -t1538, -t1305, -t1306, 0, 0, t1373, t1371, t1296, -t1373, -t1293, -t1531, -t1603, -t1629, t1228, t1140, t1252, t1189, t1238, -t1250, t1239, t1298, -t1613, t1614, t1599, -t1630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, -t1292, t1716, -t1422, t1419, t1422, 0, t1285, t1205, 0, t1253, t1191, t1240, t1251, t1241, t1299, t1143, t1144, t1079, -pkin(10) * t1093; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1610, t1723, t1420, t1317, -t1363, t1610, -t1285, 0, t1206, 0, -t1347, -t1346, -t1260, t1347, t1256, -t1316, t1107, t1108, -pkin(5) * t1190, -pkin(5) * t1093; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1373, t1371, t1296, -t1373, -t1293, -t1531, -t1205, -t1206, 0, 0, t1252, t1189, t1238, -t1250, t1239, t1298, t1631, t1632, t1615, t1646; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1284, t1257, t1717, t1358, t1356, -t1358, 0, t1182, t1138, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1359, t1259, t1357, -t1577, t1278, -t1359, -t1182, 0, t1139, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1347, t1346, t1260, -t1347, -t1256, t1316, -t1138, -t1139, 0, 0;];
m_new_reg  = t1;
