% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:53:25
% EndTime: 2019-03-09 13:53:43
% DurationCPUTime: 7.09s
% Computational Cost: add. (14164->540), mult. (32238->687), div. (0->0), fcn. (22257->8), ass. (0->268)
t215 = cos(qJ(6));
t216 = cos(qJ(2));
t214 = sin(qJ(2));
t341 = sin(qJ(4));
t277 = qJD(1) * t341;
t257 = t214 * t277;
t343 = cos(qJ(4));
t278 = qJD(1) * t343;
t139 = -t216 * t278 - t257;
t256 = t216 * t277;
t141 = t214 * t278 - t256;
t213 = sin(qJ(5));
t287 = qJD(5) * t213;
t342 = cos(qJ(5));
t273 = t343 * qJD(2);
t253 = qJD(1) * t273;
t239 = t214 * t341 + t216 * t343;
t354 = t239 * qJD(4);
t96 = qJD(1) * t354 - qJD(2) * t257 - t216 * t253;
t272 = t341 * qJD(2);
t276 = qJD(4) * t343;
t97 = qJD(1) * (t214 * t276 + t216 * t272) - qJD(4) * t256 - t214 * t253;
t242 = t141 * t287 + t213 * t97 + t342 * t96;
t274 = qJD(5) * t342;
t226 = -t139 * t274 + t242;
t243 = t213 * t139 + t342 * t141;
t206 = qJD(2) - qJD(4);
t267 = -qJD(5) + t206;
t247 = t215 * t267;
t212 = sin(qJ(6));
t286 = qJD(6) * t212;
t28 = qJD(6) * t247 + t215 * t226 + t243 * t286;
t26 = t28 * t215;
t285 = qJD(6) * t215;
t78 = -t212 * t267 + t215 * t243;
t311 = qJD(6) * t78;
t29 = -t212 * t226 + t311;
t76 = t212 * t243 + t247;
t361 = t212 * t29 + t76 * t285;
t127 = t342 * t139;
t357 = t213 * t141 - t127;
t374 = t215 * t357;
t371 = qJD(6) + t357;
t386 = t212 * t371;
t388 = t374 * t76 + t386 * t78 + t26 + t361;
t268 = t213 * t96 - t342 * t97;
t45 = qJD(5) * t243 - t268;
t43 = t215 * t45;
t387 = -t243 * t76 + t371 * t386 - t43;
t289 = qJD(2) * t214;
t346 = pkin(7) - pkin(8);
t163 = t346 * t289;
t207 = qJD(2) * qJD(3);
t131 = -qJD(1) * t163 + t207;
t284 = qJD(1) * qJD(2);
t270 = t216 * t284;
t188 = pkin(7) * t270;
t149 = -pkin(8) * t270 + t188;
t291 = qJD(1) * t214;
t197 = pkin(7) * t291;
t162 = pkin(8) * t291 - t197;
t217 = -pkin(2) - pkin(3);
t281 = t217 * qJD(2);
t126 = qJD(3) + t281 - t162;
t290 = qJD(1) * t216;
t198 = pkin(7) * t290;
t164 = -pkin(8) * t290 + t198;
t208 = qJD(2) * qJ(3);
t142 = t164 + t208;
t83 = t341 * t126 + t343 * t142;
t59 = -t83 * qJD(4) - t341 * t131 + t343 * t149;
t223 = t96 * pkin(9) + t59;
t40 = t342 * t223;
t275 = qJD(4) * t341;
t58 = t126 * t276 + t343 * t131 - t142 * t275 + t341 * t149;
t44 = -t97 * pkin(9) + t58;
t269 = t213 * t44 - t40;
t143 = -qJD(1) * pkin(1) - pkin(2) * t290 - qJ(3) * t291;
t124 = pkin(3) * t290 - t143;
t95 = -pkin(4) * t139 + t124;
t359 = t95 * t243;
t385 = t269 + t359;
t60 = pkin(5) * t243 + pkin(10) * t357;
t384 = -t243 ^ 2 + t357 ^ 2;
t27 = t29 * t215;
t321 = t212 * t76;
t383 = t321 * t371 - t27;
t25 = t28 * t212;
t381 = -t25 + (t285 + t374) * t78;
t41 = t212 * t45;
t331 = t285 * t371 + t41;
t380 = -t243 * t78 + t371 * t374 + t331;
t339 = t139 * pkin(9);
t71 = t83 + t339;
t318 = t213 * t71;
t337 = t141 * pkin(9);
t82 = t343 * t126 - t341 * t142;
t70 = t82 - t337;
t65 = -t206 * pkin(4) + t70;
t34 = t342 * t65 - t318;
t32 = pkin(5) * t267 - t34;
t377 = t32 * t357;
t360 = t371 * t243;
t376 = -t124 * t141 + t59;
t375 = -t139 * t206 + t96;
t282 = t342 * t71;
t35 = t213 * t65 + t282;
t33 = -pkin(10) * t267 + t35;
t46 = pkin(5) * t357 - pkin(10) * t243 + t95;
t248 = t212 * t33 - t215 * t46;
t373 = t248 * t357;
t332 = t357 * t243;
t372 = -qJD(2) * t239 + t354;
t15 = t212 * t46 + t215 * t33;
t258 = t214 * t281;
t201 = t214 * qJD(3);
t294 = qJ(3) * t270 + qJD(1) * t201;
t113 = qJD(1) * t258 + t294;
t64 = t97 * pkin(4) + t113;
t10 = t45 * pkin(5) + pkin(10) * t226 + t64;
t266 = -t213 * t223 - t65 * t274 + t71 * t287 - t342 * t44;
t3 = -qJD(6) * t15 + t215 * t10 + t212 * t266;
t369 = t15 * t357 + t3;
t8 = qJD(5) * t35 + t269;
t344 = t8 * t212 + t32 * t285;
t350 = t15 * t243 + t344;
t30 = t32 * t286;
t352 = t248 * t243 + t30;
t368 = t95 * t357 + t266;
t367 = t206 * t243 - t268;
t366 = t267 * t357 + t226;
t365 = t35 * t243 - t34 * t357;
t362 = -t15 * t371 - t3;
t106 = -t341 * t162 + t343 * t164;
t231 = t106 + t339;
t107 = t343 * t162 + t341 * t164;
t79 = t107 + t337;
t49 = t213 * t231 + t342 * t79;
t167 = -t341 * qJ(3) + t343 * t217;
t161 = -pkin(4) + t167;
t168 = t343 * qJ(3) + t341 * t217;
t108 = t342 * t161 - t213 * t168;
t129 = t343 * qJD(3) + t167 * qJD(4);
t130 = -t341 * qJD(3) - t168 * qJD(4);
t61 = t108 * qJD(5) + t342 * t129 + t213 * t130;
t330 = t61 - t49;
t109 = t213 * t161 + t342 * t168;
t329 = t109 * qJD(5) + (-t130 + t231) * t342 + (t129 - t79) * t213;
t358 = t141 * t206 + t97;
t236 = -t213 * t341 + t342 * t343;
t353 = qJD(4) + qJD(5);
t110 = t353 * t236;
t140 = t236 * qJD(2);
t298 = t110 - t140;
t156 = t213 * t343 + t342 * t341;
t297 = (-qJD(2) + t353) * t156;
t356 = t15 * t215 + t212 * t248;
t2 = -qJD(6) * t248 + t10 * t212 - t215 * t266;
t176 = t346 * t214;
t177 = t346 * t216;
t116 = t343 * t176 - t341 * t177;
t155 = t214 * t343 - t216 * t341;
t84 = -t155 * pkin(9) + t116;
t117 = t341 * t176 + t343 * t177;
t85 = -pkin(9) * t239 + t117;
t56 = t213 * t85 - t342 * t84;
t345 = t56 * t8;
t340 = pkin(4) * t141;
t338 = t248 * t371;
t335 = t236 * t8;
t1 = t2 * t215;
t334 = t78 * t76;
t333 = t8 * t215;
t327 = pkin(4) * qJD(5);
t326 = qJD(2) * pkin(2);
t230 = t342 * t239;
t102 = t155 * t213 + t230;
t325 = t102 * t45;
t322 = t212 * t32;
t320 = t212 * t78;
t222 = t206 * t155;
t50 = qJD(5) * t230 + t155 * t287 - t213 * t222 + t342 * t372;
t317 = t215 * t50;
t316 = t215 * t76;
t315 = t215 * t78;
t310 = qJD(6) * t371;
t307 = t141 * t139;
t219 = qJD(1) ^ 2;
t304 = t216 * t219;
t218 = qJD(2) ^ 2;
t303 = t218 * t214;
t202 = t218 * t216;
t300 = t106 - t130;
t299 = -t107 + t129;
t288 = qJD(2) * t216;
t293 = qJ(3) * t288 + t201;
t209 = t214 ^ 2;
t292 = t216 ^ 2 - t209;
t170 = -t216 * pkin(2) - t214 * qJ(3) - pkin(1);
t279 = t139 ^ 2 - t141 ^ 2;
t271 = t214 * t284;
t262 = -0.2e1 * pkin(1) * t284;
t261 = qJD(3) - t326;
t150 = t216 * pkin(3) - t170;
t260 = qJD(1) * t170 + t143;
t259 = pkin(4) * t274;
t255 = t214 * t270;
t36 = t213 * t70 + t282;
t254 = pkin(4) * t287 - t36;
t250 = t15 * t212 - t215 * t248;
t235 = t213 * t239;
t103 = t342 * t155 - t235;
t112 = pkin(4) * t239 + t150;
t53 = t102 * pkin(5) - t103 * pkin(10) + t112;
t57 = t213 * t84 + t342 * t85;
t22 = -t212 * t57 + t215 * t53;
t23 = t212 * t53 + t215 * t57;
t136 = pkin(2) * t289 - t293;
t191 = qJ(3) * t290;
t134 = t217 * t291 + t191;
t245 = t286 * t371 - t43;
t123 = pkin(2) * t271 - t294;
t244 = -pkin(7) * t218 - qJD(1) * t136 - t123;
t105 = -pkin(10) + t109;
t241 = -t105 * t45 - t371 * t61 - t377;
t165 = qJD(2) * t177;
t237 = t341 * t163 + t343 * t165;
t68 = -t343 * t163 + t341 * t165 + t176 * t276 - t177 * t275;
t98 = t134 - t340;
t194 = t213 * pkin(4) + pkin(10);
t229 = -t194 * t45 - t259 * t371 + t377;
t228 = -t124 * t139 - t58;
t227 = -qJD(6) * t250 - t3 * t212 + t1;
t166 = -pkin(7) * t271 + t207;
t169 = t197 + t261;
t172 = t198 + t208;
t224 = t166 * t216 + (t169 * t216 + (-t172 + t198) * t214) * qJD(2);
t74 = -pkin(3) * t289 - pkin(4) * t222 - t136;
t220 = pkin(9) * t372 - t176 * t275 - t177 * t276 + t237;
t195 = -t342 * pkin(4) - pkin(5);
t186 = t214 * t304;
t175 = -0.2e1 * t255;
t174 = 0.2e1 * t255;
t171 = t292 * t219;
t160 = pkin(2) * t291 - t191;
t153 = t292 * t284;
t119 = t258 + t293;
t115 = t140 * t215 + t212 * t291;
t114 = -t140 * t212 + t215 * t291;
t104 = pkin(5) - t108;
t69 = -qJD(4) * t117 + t237;
t55 = pkin(9) * t222 + t68;
t52 = t340 + t60;
t51 = -qJD(5) * t235 + t155 * t274 - t213 * t372 - t342 * t222;
t47 = t98 - t60;
t37 = t342 * t70 - t318;
t21 = t212 * t60 + t215 * t34;
t20 = -t212 * t34 + t215 * t60;
t19 = t212 * t47 + t215 * t49;
t18 = -t212 * t49 + t215 * t47;
t17 = t212 * t52 + t215 * t37;
t16 = -t212 * t37 + t215 * t52;
t13 = t51 * pkin(5) + t50 * pkin(10) + t74;
t12 = t57 * qJD(5) + t213 * t55 - t342 * t220;
t11 = t213 * t220 + t84 * t274 - t85 * t287 + t342 * t55;
t5 = -qJD(6) * t23 - t11 * t212 + t13 * t215;
t4 = qJD(6) * t22 + t11 * t215 + t13 * t212;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, 0.2e1 * t153, t202, t175, -t303, 0, -pkin(7) * t202 + t214 * t262, pkin(7) * t303 + t216 * t262, 0, 0, t174, t202, -0.2e1 * t153, 0, t303, t175, t216 * t244 + t260 * t289, t224, t214 * t244 - t260 * t288, pkin(7) * t224 + t123 * t170 + t136 * t143, -t141 * t372 - t96 * t155, -t155 * t97 + t96 * t239 + t206 * (t139 * t239 + t141 * t155) t372 * t206, t139 * t222 + t239 * t97, -t222 * t206, 0, t113 * t239 - t119 * t139 + t150 * t97 + (-t124 * t155 - t69) * t206, t113 * t155 + t119 * t141 - t124 * t372 - t150 * t96 + t68 * t206, t116 * t96 - t117 * t97 + t68 * t139 - t69 * t141 - t59 * t155 + t83 * t222 - t58 * t239 + t82 * t372, t113 * t150 + t116 * t59 + t117 * t58 + t119 * t124 + t68 * t83 + t69 * t82, -t103 * t226 - t243 * t50, t102 * t226 - t103 * t45 - t243 * t51 + t357 * t50, t50 * t267, t357 * t51 + t325, t51 * t267, 0, t64 * t102 + t112 * t45 + t12 * t267 + t357 * t74 + t95 * t51, t64 * t103 + t11 * t267 - t112 * t226 + t243 * t74 - t95 * t50, t102 * t266 + t8 * t103 - t11 * t357 + t12 * t243 - t226 * t56 + t34 * t50 - t35 * t51 - t57 * t45, t11 * t35 + t112 * t64 - t12 * t34 - t266 * t57 + t74 * t95 + t345, -t50 * t315 + (-t286 * t78 - t26) * t103 (t316 + t320) * t50 + (t25 - t27 + (-t315 + t321) * qJD(6)) * t103, -t102 * t28 - t103 * t245 - t317 * t371 + t51 * t78, t361 * t103 - t50 * t321, -t102 * t29 - t103 * t331 + t386 * t50 - t51 * t76, t371 * t51 + t325, t102 * t3 + t103 * t344 + t12 * t76 + t22 * t45 - t248 * t51 + t29 * t56 - t322 * t50 + t371 * t5, -t32 * t317 - t102 * t2 + t12 * t78 - t15 * t51 - t23 * t45 - t28 * t56 - t4 * t371 + (-t30 + t333) * t103, t22 * t28 - t23 * t29 - t4 * t76 - t5 * t78 + t250 * t50 + (-qJD(6) * t356 - t2 * t212 - t215 * t3) * t103, t12 * t32 + t15 * t4 + t2 * t23 + t22 * t3 - t248 * t5 + t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, -t171, 0, t186, 0, 0, t219 * pkin(1) * t214, pkin(1) * t304, 0, 0, -t186, 0, t171, 0, 0, t186 (-t143 * t214 + t160 * t216) * qJD(1) ((t172 - t208) * t214 + (-t169 + t261) * t216) * qJD(1), 0.2e1 * t207 + (t143 * t216 + t160 * t214) * qJD(1), qJ(3) * t166 + qJD(3) * t172 - t143 * t160 + (t172 * t214 + (-t169 - t326) * t216) * qJD(1) * pkin(7), t307, t279, t375, -t307, t358, 0, t134 * t139 + t206 * t300 - t376, -t134 * t141 + t206 * t299 - t228, t167 * t96 - t168 * t97 + (-t83 + t300) * t141 + (-t82 + t299) * t139, -t124 * t134 + t167 * t59 + t168 * t58 + t299 * t83 - t300 * t82, -t332, t384, t366, t332, t367, 0, -t98 * t357 + (t35 - t329) * qJD(5) + t329 * t206 + t385, -t98 * t243 + t330 * t267 - t368, t108 * t226 - t109 * t45 + t243 * t329 - t330 * t357 - t365, -t108 * t8 - t109 * t266 - t329 * t34 + t330 * t35 - t95 * t98, -t381, t388, -t380, -t383, t387, t360, t104 * t29 - t18 * t371 + t329 * t76 + (-t105 * t310 + t8) * t215 + t241 * t212 - t352, -t104 * t28 + (t105 * t286 + t19) * t371 + t329 * t78 + t241 * t215 - t350, t18 * t78 + t19 * t76 - t1 + (-t105 * t29 - t373 - t61 * t76 + (t105 * t78 - t248) * qJD(6)) * t215 + (-t105 * t28 + t61 * t78 + (t105 * t76 + t15) * qJD(6) + t369) * t212, t104 * t8 + t329 * t32 + (t215 * t61 - t19) * t15 - (-t212 * t61 - t18) * t248 + t227 * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, 0, -t209 * t219 - t218, -qJD(2) * t172 + t143 * t291 + t188, 0, 0, 0, 0, 0, 0, t139 * t291 + (-t272 + t275) * t206, -t141 * t291 + (-t273 + t276) * t206, -t341 * t97 + t343 * t96 - t206 * (t139 * t343 + t141 * t341) -t124 * t291 + t58 * t341 + t59 * t343 - t206 * (-t341 * t82 + t343 * t83) 0, 0, 0, 0, 0, 0, t297 * t267 - t291 * t357, -t291 * t243 + t298 * t267, -t156 * t45 + t226 * t236 + t243 * t297 - t298 * t357, -t156 * t266 - t291 * t95 - t297 * t34 + t298 * t35 - t335, 0, 0, 0, 0, 0, 0, -t156 * t41 - t236 * t29 + t297 * t76 + (-t110 * t212 - t156 * t285 - t114) * t371, -t156 * t43 + t236 * t28 + t297 * t78 + (-t110 * t215 + t156 * t286 + t115) * t371, t114 * t78 + t115 * t76 + (-t316 + t320) * t110 + (-t25 - t27 + (t315 + t321) * qJD(6)) * t156, t110 * t356 + t114 * t248 - t115 * t15 + t156 * t227 + t297 * t32 - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t307, -t279, -t375, t307, -t358, 0, -t83 * t206 + t376, -t82 * t206 + t228, 0, 0, t332, -t384, -t366, -t332, -t367, 0, -t71 * t274 + t40 - t357 * t340 - t359 - t36 * t267 + (-qJD(5) * t65 + t267 * t327 - t44) * t213, -t37 * t267 + (-t141 * t243 + t267 * t274) * pkin(4) + t368, -t36 * t243 + t37 * t357 + (-t213 * t45 + t342 * t242 + (t213 * t243 + (-t357 - t127) * t342) * qJD(5)) * pkin(4) + t365, t34 * t36 - t35 * t37 + (-t342 * t8 - t141 * t95 - t213 * t266 + (-t213 * t34 + t342 * t35) * qJD(5)) * pkin(4), t381, -t388, t380, t383, -t387, -t360, -t16 * t371 + t195 * t29 + t254 * t76 + (-t194 * t310 - t8) * t215 + t229 * t212 + t352, -t195 * t28 + (t194 * t286 + t17) * t371 + t254 * t78 + t229 * t215 + t350, t16 * t78 + t17 * t76 + t1 + (-t76 * t259 + t373 - t194 * t29 + (t194 * t78 + t248) * qJD(6)) * t215 + (t78 * t259 - t194 * t28 + (t194 * t76 - t15) * qJD(6) - t369) * t212, t248 * t16 - t15 * t17 + t8 * t195 - t32 * t36 + (t213 * t32 + t342 * t356) * t327 + t227 * t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, -t384, -t366, -t332, -t367, 0, -t206 * t35 - t385, -t267 * t34 + t368, 0, 0, t381, -t388, t380, t386 * t76 - t27, -t387, -t360, -pkin(5) * t29 - pkin(10) * t331 - t20 * t371 + t322 * t357 - t35 * t76 - t333 + t352, pkin(5) * t28 + pkin(10) * t245 + t21 * t371 + t32 * t374 - t35 * t78 + t350, t20 * t78 + t21 * t76 + t1 + (t338 + (-t29 + t311) * pkin(10)) * t215 + ((qJD(6) * t76 - t28) * pkin(10) + t362) * t212, -pkin(5) * t8 + pkin(10) * t227 - t15 * t21 + t20 * t248 - t32 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, -t76 ^ 2 + t78 ^ 2, t371 * t76 - t28, -t334, t371 * t78 - t29, t45, -t32 * t78 - t362, t32 * t76 - t2 - t338, 0, 0;];
tauc_reg  = t6;
