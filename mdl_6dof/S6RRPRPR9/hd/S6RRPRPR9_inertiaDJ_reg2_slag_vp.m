% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR9_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:01:09
% EndTime: 2019-03-09 11:01:31
% DurationCPUTime: 8.45s
% Computational Cost: add. (13336->474), mult. (34809->882), div. (0->0), fcn. (35935->12), ass. (0->233)
t130 = cos(pkin(12));
t128 = sin(pkin(11));
t131 = cos(pkin(11));
t281 = cos(qJ(4));
t274 = pkin(9) + qJ(3);
t279 = sin(qJ(4));
t288 = t274 * t279;
t293 = -t281 * qJD(3) + qJD(4) * t288;
t287 = t274 * t281;
t294 = t279 * qJD(3) + qJD(4) * t287;
t286 = t294 * t128 + t293 * t131;
t295 = t286 * t130;
t129 = sin(pkin(6));
t133 = cos(qJ(2));
t132 = sin(qJ(2));
t261 = cos(pkin(6));
t242 = pkin(1) * t261;
t220 = t132 * t242;
t175 = t261 * qJ(3) + t220;
t163 = t261 * pkin(9) + t175;
t276 = pkin(2) * t133;
t184 = -t274 * t132 - pkin(1) - t276;
t150 = -t163 * t128 + ((-pkin(8) * t128 - pkin(3)) * t133 + t184 * t131) * t129;
t253 = t131 * t133;
t246 = pkin(8) * t253;
t152 = t163 * t131 + (t128 * t184 + t246) * t129;
t29 = t279 * t150 + t281 * t152;
t225 = t261 * t128;
t254 = t131 * t132;
t244 = t129 * t254;
t179 = t225 + t244;
t224 = t261 * t131;
t256 = t129 * t132;
t180 = t128 * t256 - t224;
t73 = t279 * t179 + t281 * t180;
t241 = t281 * t131;
t105 = t279 * t128 - t241;
t107 = t281 * t128 + t279 * t131;
t98 = t105 * qJD(4);
t99 = t107 * qJD(4);
t193 = t105 * t98 - t107 * t99;
t292 = 0.2e1 * t193;
t250 = qJD(2) * t133;
t291 = 0.2e1 * t250;
t233 = t129 * t250;
t217 = t128 * t233;
t162 = -qJD(4) * t73 - t279 * t217;
t216 = t131 * t233;
t158 = -t281 * t216 - t162;
t84 = t128 * t287 + t131 * t288;
t290 = t158 * t84;
t28 = t281 * t150 - t279 * t152;
t127 = sin(pkin(12));
t251 = qJD(2) * t132;
t234 = t129 * t251;
t218 = t127 * t234;
t154 = -t130 * t158 + t218;
t289 = t130 * t154;
t151 = t154 * t127;
t278 = sin(qJ(6));
t280 = cos(qJ(6));
t104 = t278 * t127 - t280 * t130;
t177 = pkin(8) * t256 - t133 * t242;
t94 = t177 * qJD(2);
t285 = -0.2e1 * t98;
t284 = 0.2e1 * t99;
t125 = t131 ^ 2;
t283 = 0.2e1 * t129;
t282 = 0.2e1 * qJD(2);
t277 = pkin(2) * t132;
t70 = -t128 * t293 + t131 * t294;
t275 = t84 * t70;
t273 = pkin(10) + qJ(5);
t255 = t129 * t133;
t140 = -qJ(5) * t255 + t29;
t157 = t281 * t179 - t279 * t180;
t92 = -t261 * pkin(2) + t177;
t77 = pkin(3) * t180 + t92;
t142 = t73 * pkin(4) - qJ(5) * t157 + t77;
t21 = t127 * t142 + t130 * t140;
t240 = t280 * t127;
t106 = t278 * t130 + t240;
t186 = t127 * t158 + t130 * t234;
t262 = t127 * t157 + t130 * t255;
t65 = -t127 * t255 + t130 * t157;
t36 = -t278 * t262 + t280 * t65;
t19 = t36 * qJD(6) + t278 * t154 - t280 * t186;
t207 = t280 * t262;
t35 = t278 * t65 + t207;
t230 = qJD(6) * t278;
t215 = t127 * t230;
t231 = qJD(6) * t280;
t96 = -t130 * t231 + t215;
t272 = -t106 * t19 + t96 * t35;
t48 = -t98 * t240 - t107 * t215 + (t107 * t231 - t278 * t98) * t130;
t74 = t106 * t107;
t271 = -t106 * t48 + t96 * t74;
t120 = -pkin(3) * t131 - pkin(2);
t188 = pkin(4) * t105 + t120;
t178 = -qJ(5) * t107 + t188;
t86 = -t128 * t288 + t131 * t287;
t53 = t127 * t178 + t130 * t86;
t97 = t106 * qJD(6);
t270 = t104 * t97;
t269 = t106 * t96;
t56 = qJD(4) * t157 + t107 * t233;
t268 = t127 * t56;
t267 = t127 * t86;
t266 = t127 * t98;
t265 = t127 * t99;
t264 = t130 * t98;
t263 = t65 * t127;
t260 = t107 * t127;
t123 = t129 ^ 2;
t126 = t133 ^ 2;
t259 = t123 * t126;
t258 = t128 * t132;
t257 = t128 * t133;
t121 = t127 ^ 2;
t124 = t130 ^ 2;
t252 = t121 + t124;
t249 = qJD(3) * t132;
t37 = 0.2e1 * t73 * t56;
t79 = t105 * t284;
t248 = t107 * t285;
t247 = pkin(8) * t254;
t245 = t127 * t264;
t243 = pkin(3) * t128 + pkin(8);
t236 = t123 * t250;
t235 = t128 * t249;
t232 = qJD(5) * t278;
t228 = t280 * qJD(5);
t226 = t130 * t262;
t223 = qJD(2) * t261;
t222 = t261 * qJD(3);
t221 = pkin(4) * t234;
t219 = t132 * t236;
t214 = 0.2e1 * t252 * qJD(5);
t122 = t128 ^ 2;
t213 = 0.2e1 * (t122 + t125) * qJD(3);
t208 = t273 * t278;
t206 = t133 * t223;
t196 = -qJ(3) * t133 + t277;
t143 = t128 * (t222 - t94) - t131 * (t196 * qJD(2) - t249) * t129 + pkin(9) * t216 - pkin(3) * t234;
t170 = pkin(1) * t206 + t222;
t166 = t131 * t170;
t148 = t166 + (-t235 + (-t247 + (-t274 * t133 + t277) * t128) * qJD(2)) * t129;
t16 = -t28 * qJD(4) + t279 * t143 - t281 * t148;
t136 = qJ(5) * t234 - qJD(5) * t255 - t16;
t141 = -t162 * qJ(5) - t157 * qJD(5) + t56 * pkin(4) + (t220 + (-qJ(5) * t241 + t243) * t255) * qJD(2);
t7 = -t127 * t136 + t130 * t141;
t8 = t127 * t141 + t130 * t136;
t205 = t127 * t8 + t130 * t7;
t204 = -t7 * t127 + t8 * t130;
t18 = qJD(6) * t207 - t280 * t154 - t278 * t186 + t65 * t230;
t203 = -t104 * t18 + t36 * t97;
t47 = -t104 * t98 + t107 * t97;
t75 = t104 * t107;
t202 = -t104 * t47 - t75 * t97;
t30 = t105 * t56 + t73 * t99;
t201 = t106 * t56 - t73 * t96;
t17 = -qJD(4) * t29 - t281 * t143 - t279 * t148;
t14 = -t17 - t221;
t26 = pkin(4) * t255 - t28;
t200 = t14 * t107 - t26 * t98;
t199 = -t107 * t56 + t98 * t73;
t198 = t70 * t107 - t84 * t98;
t197 = -qJ(3) * t132 - t276;
t195 = t99 * pkin(4) - t107 * qJD(5);
t194 = t105 * t96 - t106 * t99;
t155 = t286 * t127;
t181 = qJ(5) * t98 + t195;
t39 = t130 * t181 + t155;
t40 = t127 * t181 - t295;
t192 = t127 * t40 + t130 * t39;
t191 = -t127 * t39 + t130 * t40;
t190 = -qJ(5) * t56 - qJD(5) * t73;
t189 = t128 * t216;
t187 = t273 * t240;
t185 = -pkin(1) + t197;
t183 = t186 * t130;
t182 = pkin(4) * t98 - qJ(5) * t99 - qJD(5) * t105;
t101 = pkin(8) * t255 + t220;
t176 = t273 * t98 + t195;
t174 = t129 * t180;
t173 = t129 * t179;
t167 = t129 * (t197 * qJD(2) + qJD(3) * t133);
t161 = t105 * pkin(5) - t267 + (-t273 * t107 + t188) * t130;
t160 = t280 * t161;
t159 = t278 * t161;
t153 = -t105 * t158 - t199;
t145 = t127 * t176 - t295;
t144 = t99 * pkin(5) + t130 * t176 + t155;
t20 = -t127 * t140 + t130 * t142;
t139 = t73 * pkin(5) - t65 * pkin(10) + t20;
t138 = t280 * t139;
t137 = t278 * t139;
t135 = pkin(10) * t186 + t8;
t134 = t56 * pkin(5) - pkin(10) * t154 + t7;
t119 = -pkin(5) * t130 - pkin(4);
t110 = t273 * t130;
t109 = -0.2e1 * t219;
t95 = t101 * qJD(2);
t91 = t130 * t99;
t85 = t280 * t110 - t127 * t208;
t83 = -t278 * t110 - t187;
t82 = (t243 * t255 + t220) * qJD(2);
t71 = pkin(5) * t260 + t84;
t69 = -t110 * t231 - t130 * t232 + (qJD(6) * t208 - t228) * t127;
t68 = qJD(6) * t187 + t110 * t230 + t127 * t232 - t130 * t228;
t67 = t131 * t175 + (t128 * t185 + t246) * t129;
t66 = -t128 * t175 + (-pkin(8) * t257 + t131 * t185) * t129;
t63 = t166 + (-t235 + (t128 * t196 - t247) * qJD(2)) * t129;
t62 = -t128 * t170 + (-t131 * t249 + (pkin(8) * t258 + t131 * t196) * qJD(2)) * t129;
t59 = -t104 * t99 - t105 * t97;
t58 = -pkin(5) * t266 + t70;
t52 = t130 * t178 - t267;
t51 = t130 * t56;
t43 = t127 * t186;
t42 = -pkin(10) * t260 + t53;
t31 = -t104 * t56 - t73 * t97;
t24 = t280 * t42 + t159;
t23 = -t278 * t42 + t160;
t22 = t262 * pkin(5) + t26;
t13 = -t262 * pkin(10) + t21;
t11 = -pkin(5) * t186 + t14;
t10 = -qJD(6) * t159 + t280 * t144 - t278 * t145 - t42 * t231;
t9 = -qJD(6) * t160 - t278 * t144 - t280 * t145 + t42 * t230;
t4 = t280 * t13 + t137;
t3 = -t278 * t13 + t138;
t2 = -qJD(6) * t137 - t13 * t231 + t280 * t134 - t278 * t135;
t1 = -qJD(6) * t138 + t13 * t230 - t278 * t134 - t280 * t135;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t219 (-t132 ^ 2 + t126) * t123 * t282, t206 * t283, t109, -0.2e1 * t223 * t256, 0, -0.2e1 * t123 * pkin(1) * t251 - 0.2e1 * t95 * t261, -0.2e1 * pkin(1) * t236 + 0.2e1 * t94 * t261 (t132 * t95 - t133 * t94 + (-t101 * t132 + t133 * t177) * qJD(2)) * t283, -0.2e1 * t101 * t94 + 0.2e1 * t177 * t95, t131 * t173 * t291, 0.2e1 * (t261 * t125 + (-t225 - 0.2e1 * t244) * t128) * t233 (-t131 * t259 + t132 * t173) * t282, t128 * t174 * t291 (t128 * t259 - t132 * t174) * t282, t109, -0.2e1 * t95 * t224 + 0.2e1 * (t95 * t258 - t62 * t133 + (t132 * t66 + t92 * t257) * qJD(2)) * t129, 0.2e1 * t95 * t225 + 0.2e1 * (t95 * t254 + t63 * t133 + (-t132 * t67 + t92 * t253) * qJD(2)) * t129, -0.2e1 * t63 * t180 - 0.2e1 * t62 * t179 + 0.2e1 * (-t128 * t67 - t131 * t66) * t233, 0.2e1 * t62 * t66 + 0.2e1 * t63 * t67 + 0.2e1 * t92 * t95, -0.2e1 * t157 * t158, -0.2e1 * t157 * t56 + 0.2e1 * t158 * t73, 0.2e1 * t157 * t234 + 0.2e1 * t158 * t255, t37 (t133 * t56 - t73 * t251) * t283, t109, 0.2e1 * t77 * t56 + 0.2e1 * t82 * t73 + 0.2e1 * (-t133 * t17 + t28 * t251) * t129, 0.2e1 * t157 * t82 - 0.2e1 * t158 * t77 - 0.2e1 * t16 * t255 - 0.2e1 * t29 * t234, -0.2e1 * t157 * t17 + 0.2e1 * t158 * t28 + 0.2e1 * t16 * t73 - 0.2e1 * t29 * t56, -0.2e1 * t16 * t29 + 0.2e1 * t17 * t28 + 0.2e1 * t77 * t82, 0.2e1 * t65 * t154, -0.2e1 * t154 * t262 + 0.2e1 * t65 * t186, 0.2e1 * t154 * t73 + 0.2e1 * t65 * t56, -0.2e1 * t262 * t186, 0.2e1 * t186 * t73 - 0.2e1 * t262 * t56, t37, 0.2e1 * t14 * t262 - 0.2e1 * t186 * t26 + 0.2e1 * t20 * t56 + 0.2e1 * t7 * t73, 0.2e1 * t14 * t65 + 0.2e1 * t154 * t26 - 0.2e1 * t21 * t56 - 0.2e1 * t8 * t73, -0.2e1 * t154 * t20 + 0.2e1 * t186 * t21 - 0.2e1 * t262 * t8 - 0.2e1 * t7 * t65, 0.2e1 * t14 * t26 + 0.2e1 * t20 * t7 + 0.2e1 * t21 * t8, -0.2e1 * t36 * t18, 0.2e1 * t18 * t35 - 0.2e1 * t19 * t36, -0.2e1 * t18 * t73 + 0.2e1 * t36 * t56, 0.2e1 * t35 * t19, -0.2e1 * t19 * t73 - 0.2e1 * t35 * t56, t37, 0.2e1 * t11 * t35 + 0.2e1 * t19 * t22 + 0.2e1 * t2 * t73 + 0.2e1 * t3 * t56, 0.2e1 * t1 * t73 + 0.2e1 * t11 * t36 - 0.2e1 * t18 * t22 - 0.2e1 * t4 * t56, 0.2e1 * t1 * t35 + 0.2e1 * t18 * t3 - 0.2e1 * t19 * t4 - 0.2e1 * t2 * t36, -0.2e1 * t1 * t4 + 0.2e1 * t11 * t22 + 0.2e1 * t2 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, 0, -t234, 0, -t95, t94, 0, 0, t189 (-t122 + t125) * t233, t128 * t234, -t189, t131 * t234, 0, t128 * t167 - t95 * t131, t95 * t128 + t131 * t167 (t131 * t222 + t63) * t131 + (t128 * t222 - t62) * t128, -pkin(2) * t95 + (-t128 * t66 + t131 * t67) * qJD(3) + (-t62 * t128 + t63 * t131) * qJ(3), -t107 * t158 - t157 * t98, -t157 * t99 - t153 (t107 * t251 + t133 * t98) * t129, t30 (-t105 * t251 + t133 * t99) * t129, 0, t82 * t105 + t120 * t56 + t77 * t99 + (t133 * t70 - t84 * t251) * t129, t82 * t107 - t120 * t158 - t86 * t234 - t255 * t286 - t77 * t98, t16 * t105 - t17 * t107 + t157 * t70 + t28 * t98 + t286 * t73 - t29 * t99 - t86 * t56 - t290, t82 * t120 - t16 * t86 - t17 * t84 - t28 * t70 - t286 * t29 (t107 * t154 - t65 * t98) * t130 (t226 + t263) * t98 + (t183 - t151) * t107, t105 * t218 + t130 * t153 + t65 * t99 (-t186 * t107 - t262 * t98) * t127, t186 * t105 + t127 * t199 - t262 * t99, t30, t7 * t105 + t127 * t200 - t186 * t84 + t20 * t99 + t262 * t70 + t39 * t73 + t52 * t56, t84 * t218 - t8 * t105 - t21 * t99 - t40 * t73 - t53 * t56 + t70 * t65 + (t200 - t290) * t130, -t40 * t262 + t53 * t186 - t39 * t65 - t52 * t154 + (t127 * t21 + t130 * t20) * t98 - t205 * t107, t14 * t84 + t20 * t39 + t21 * t40 + t26 * t70 + t52 * t7 + t53 * t8, t18 * t75 - t36 * t47, t18 * t74 + t19 * t75 + t35 * t47 - t36 * t48, -t105 * t18 + t36 * t99 - t47 * t73 - t56 * t75, t19 * t74 + t35 * t48, -t105 * t19 - t35 * t99 - t48 * t73 - t56 * t74, t30, t10 * t73 + t105 * t2 + t11 * t74 + t19 * t71 + t22 * t48 + t23 * t56 + t3 * t99 + t35 * t58, t1 * t105 - t11 * t75 - t18 * t71 - t22 * t47 - t24 * t56 + t36 * t58 - t4 * t99 + t73 * t9, t1 * t74 - t10 * t36 + t18 * t23 - t19 * t24 + t2 * t75 + t3 * t47 + t35 * t9 - t4 * t48, -t1 * t24 + t10 * t3 + t11 * t71 + t2 * t23 + t22 * t58 - t4 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, qJ(3) * t213, t248, t292, 0, t79, 0, 0, t120 * t284, t120 * t285, 0.2e1 * t286 * t105 - 0.2e1 * t86 * t99 + 0.2e1 * t198, -0.2e1 * t286 * t86 + 0.2e1 * t275, t124 * t248, 0.4e1 * t107 * t245, -0.2e1 * t193 * t130, t121 * t248, t127 * t292, t79, 0.2e1 * t105 * t39 + 0.2e1 * t127 * t198 + 0.2e1 * t52 * t99, -0.2e1 * t105 * t40 + 0.2e1 * t130 * t198 - 0.2e1 * t53 * t99, 0.2e1 * (t127 * t53 + t130 * t52) * t98 - 0.2e1 * t192 * t107, 0.2e1 * t39 * t52 + 0.2e1 * t40 * t53 + 0.2e1 * t275, 0.2e1 * t75 * t47, 0.2e1 * t47 * t74 + 0.2e1 * t48 * t75, -0.2e1 * t105 * t47 - 0.2e1 * t75 * t99, 0.2e1 * t74 * t48, -0.2e1 * t105 * t48 - 0.2e1 * t74 * t99, t79, 0.2e1 * t10 * t105 + 0.2e1 * t23 * t99 + 0.2e1 * t48 * t71 + 0.2e1 * t58 * t74, 0.2e1 * t105 * t9 - 0.2e1 * t24 * t99 - 0.2e1 * t47 * t71 - 0.2e1 * t58 * t75, 0.2e1 * t10 * t75 + 0.2e1 * t23 * t47 - 0.2e1 * t24 * t48 + 0.2e1 * t74 * t9, 0.2e1 * t10 * t23 - 0.2e1 * t24 * t9 + 0.2e1 * t58 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, t216, 0, t95, 0, 0, 0, 0, 0, 0, t56, -t158, 0, t82, 0, 0, 0, 0, 0, 0, t51, -t268, t43 - t289, t205, 0, 0, 0, 0, 0, 0, t31, -t201, t203 + t272, -t1 * t106 - t104 * t2 - t3 * t97 - t4 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, -t98, 0, 0, 0, 0, 0, 0, 0, 0, t91, -t265, t252 * t98, t192, 0, 0, 0, 0, 0, 0, t59, t194, t202 + t271, -t10 * t104 - t106 * t9 - t23 * t97 - t24 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t269 + 0.2e1 * t270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t158, 0, -t56, t234, t17, t16, 0, 0, t151, t43 + t289, t268, t183, t51, 0, pkin(4) * t186 + t127 * t190 - t14 * t130 (t14 - t221) * t127 + (pkin(4) * t158 + t190) * t130 (-t226 + t263) * qJD(5) + (t183 + t151) * qJ(5) + t204, -pkin(4) * t14 + (-t127 * t20 + t130 * t21) * qJD(5) + t204 * qJ(5), -t106 * t18 - t36 * t96, -t203 + t272, t201, t104 * t19 + t35 * t97, t31, 0, t104 * t11 + t119 * t19 + t22 * t97 + t56 * t83 + t69 * t73, t106 * t11 - t119 * t18 - t22 * t96 - t56 * t85 + t68 * t73, t1 * t104 - t106 * t2 + t18 * t83 - t19 * t85 + t3 * t96 + t35 * t68 - t36 * t69 - t4 * t97, -t1 * t85 + t11 * t119 + t2 * t83 + t3 * t69 - t4 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t99, 0, -t70, t286, 0, 0, -t245 (t121 - t124) * t98, t265, t245, t91, 0, t127 * t182 - t130 * t70, t127 * t70 + t130 * t182, t191, -pkin(4) * t70 + (-t127 * t52 + t130 * t53) * qJD(5) + t191 * qJ(5), -t106 * t47 + t75 * t96, -t202 + t271, -t194, t104 * t48 + t74 * t97, t59, 0, t104 * t58 + t105 * t69 + t119 * t48 + t71 * t97 + t83 * t99, t105 * t68 + t106 * t58 - t119 * t47 - t71 * t96 - t85 * t99, -t10 * t106 + t104 * t9 + t23 * t96 - t24 * t97 + t47 * t83 - t48 * t85 + t68 * t74 + t69 * t75, t10 * t83 + t119 * t58 + t23 * t69 - t24 * t68 - t85 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104 * t69 - t106 * t68 - t83 * t97 - t85 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, qJ(5) * t214, -0.2e1 * t269, 0.2e1 * t104 * t96 - 0.2e1 * t106 * t97, 0, 0.2e1 * t270, 0, 0, 0.2e1 * t119 * t97, -0.2e1 * t119 * t96, 0.2e1 * t104 * t68 - 0.2e1 * t106 * t69 + 0.2e1 * t83 * t96 - 0.2e1 * t85 * t97, -0.2e1 * t68 * t85 + 0.2e1 * t69 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, t154, 0, t14, 0, 0, 0, 0, 0, 0, t19, -t18, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, -t264, 0, t70, 0, 0, 0, 0, 0, 0, t48, -t47, 0, t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, -t96, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t18, 0, -t19, t56, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, 0, -t48, t99, t10, t9, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, t96, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, 0, -t97, 0, t69, t68, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
