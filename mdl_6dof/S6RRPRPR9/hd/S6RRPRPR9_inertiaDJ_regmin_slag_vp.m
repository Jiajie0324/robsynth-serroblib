% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR9_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR9_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR9_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR9_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:01:08
% EndTime: 2019-03-09 11:01:18
% DurationCPUTime: 3.17s
% Computational Cost: add. (6601->334), mult. (17710->635), div. (0->0), fcn. (18093->12), ass. (0->159)
t148 = sin(pkin(12));
t151 = cos(pkin(12));
t212 = cos(qJ(6));
t184 = qJD(6) * t212;
t154 = sin(qJ(6));
t192 = qJD(6) * t154;
t216 = -t148 * t192 + t151 * t184;
t124 = t212 * t148 + t154 * t151;
t117 = t124 * qJD(6);
t215 = 0.2e1 * t216;
t152 = cos(pkin(11));
t142 = -t152 * pkin(3) - pkin(2);
t214 = 0.2e1 * t142;
t150 = sin(pkin(6));
t213 = 0.2e1 * t150;
t156 = sin(qJ(2));
t211 = pkin(1) * t156;
t158 = cos(qJ(2));
t210 = t158 * pkin(1);
t209 = pkin(9) + qJ(3);
t208 = pkin(10) + qJ(5);
t155 = sin(qJ(4));
t157 = cos(qJ(4));
t193 = qJD(4) * t157;
t194 = qJD(4) * t155;
t200 = t152 * t158;
t103 = (-qJD(3) * t156 + (pkin(2) * t156 - qJ(3) * t158) * qJD(2)) * t150;
t153 = cos(pkin(6));
t196 = qJD(2) * t156;
t186 = t150 * t196;
t195 = qJD(2) * t158;
t113 = -t153 * pkin(1) * t195 + pkin(8) * t186;
t107 = t153 * qJD(3) - t113;
t149 = sin(pkin(11));
t71 = t152 * t103 - t149 * t107;
t54 = (pkin(3) * t156 - pkin(9) * t200) * t150 * qJD(2) + t71;
t203 = t150 * t156;
t115 = t153 * t149 + t152 * t203;
t202 = t150 * t158;
t191 = pkin(8) * t202;
t109 = t191 + (qJ(3) + t211) * t153;
t175 = -pkin(2) * t158 - qJ(3) * t156;
t110 = (-pkin(1) + t175) * t150;
t79 = -t149 * t109 + t152 * t110;
t56 = -pkin(3) * t202 - t115 * pkin(9) + t79;
t185 = t150 * t195;
t180 = t149 * t185;
t72 = t149 * t103 + t152 * t107;
t66 = -pkin(9) * t180 + t72;
t190 = t149 * t203;
t199 = t153 * t152;
t164 = -t190 + t199;
t80 = t152 * t109 + t149 * t110;
t68 = pkin(9) * t164 + t80;
t18 = -t155 * t54 - t157 * t66 - t56 * t193 + t68 * t194;
t16 = (qJ(5) * t196 - qJD(5) * t158) * t150 - t18;
t198 = t157 * t152;
t123 = t155 * t149 - t198;
t86 = t155 * t115 - t157 * t164;
t62 = -qJD(4) * t86 - t123 * t185;
t125 = t157 * t149 + t155 * t152;
t87 = t157 * t115 + t155 * t164;
t63 = qJD(4) * t87 + t125 * t185;
t114 = (t153 * t211 + t191) * qJD(2);
t97 = pkin(3) * t180 + t114;
t26 = t63 * pkin(4) - t62 * qJ(5) - t87 * qJD(5) + t97;
t8 = t148 * t26 + t151 * t16;
t207 = t155 * t56 + t157 * t68;
t31 = -qJ(5) * t202 + t207;
t137 = pkin(8) * t203;
t92 = pkin(3) * t190 + t137 + (t142 - t210) * t153;
t38 = t86 * pkin(4) - t87 * qJ(5) + t92;
t23 = t148 * t38 + t151 * t31;
t118 = t123 * qJD(4);
t119 = t125 * qJD(4);
t77 = t119 * pkin(4) + t118 * qJ(5) - t125 * qJD(5);
t129 = t209 * t149;
t131 = t209 * t152;
t83 = t129 * t193 - qJD(3) * t198 + (qJD(3) * t149 + qJD(4) * t131) * t155;
t43 = t148 * t77 - t151 * t83;
t101 = -t155 * t129 + t157 * t131;
t93 = t123 * pkin(4) - t125 * qJ(5) + t142;
t58 = t151 * t101 + t148 * t93;
t206 = t114 * t149;
t205 = t125 * t148;
t204 = t148 * t118;
t201 = t151 * t118;
t197 = t148 ^ 2 + t151 ^ 2;
t189 = t212 * t151;
t145 = t150 ^ 2;
t188 = t145 * t195;
t7 = -t148 * t16 + t151 * t26;
t22 = -t148 * t31 + t151 * t38;
t42 = t148 * t83 + t151 * t77;
t183 = -t155 * t68 + t157 * t56;
t57 = -t148 * t101 + t151 * t93;
t49 = t148 * t62 - t151 * t186;
t182 = t49 * pkin(10) - t8;
t181 = t156 * t188;
t178 = 0.2e1 * t197 * qJD(5);
t177 = 0.2e1 * (t149 ^ 2 + t152 ^ 2) * qJD(3);
t32 = pkin(4) * t202 - t183;
t176 = t8 * t148 + t7 * t151;
t174 = -t124 * t63 - t216 * t86;
t19 = -t155 * t66 + t157 * t54 - t68 * t193 - t56 * t194;
t17 = -pkin(4) * t186 - t19;
t173 = -t118 * t32 + t125 * t17;
t84 = qJD(3) * t125 + qJD(4) * t101;
t99 = t157 * t129 + t155 * t131;
t172 = -t118 * t99 + t125 * t84;
t171 = t43 * t148 + t42 * t151;
t170 = -t42 * t148 + t43 * t151;
t169 = -t71 * t149 + t72 * t152;
t168 = -qJ(5) * t63 - qJD(5) * t86;
t167 = -pkin(10) * t204 - t43;
t166 = -t124 * t119 - t123 * t216;
t76 = -t148 * t202 + t151 * t87;
t13 = t86 * pkin(5) - t76 * pkin(10) + t22;
t75 = t148 * t87 + t151 * t202;
t14 = -t75 * pkin(10) + t23;
t4 = t154 * t13 + t212 * t14;
t44 = -t151 * t125 * pkin(10) + t123 * pkin(5) + t57;
t45 = -pkin(10) * t205 + t58;
t29 = t154 * t44 + t212 * t45;
t165 = -t154 * t76 - t212 * t75;
t40 = -t154 * t75 + t212 * t76;
t128 = t208 * t148;
t130 = t208 * t151;
t100 = -t154 * t128 + t212 * t130;
t163 = -t154 * t148 + t189;
t162 = pkin(4) * t118 - qJ(5) * t119 - qJD(5) * t123;
t50 = t148 * t186 + t151 * t62;
t161 = t63 * pkin(5) - t50 * pkin(10) + t7;
t160 = t119 * pkin(5) + pkin(10) * t201 + t42;
t159 = (qJD(2) * t175 + qJD(3) * t158) * t150;
t141 = -t151 * pkin(5) - pkin(4);
t112 = t137 + (-pkin(2) - t210) * t153;
t98 = -t212 * t128 - t154 * t130;
t89 = t163 * t125;
t88 = t124 * t125;
t85 = pkin(5) * t205 + t99;
t82 = -qJD(5) * t124 - qJD(6) * t100;
t81 = t128 * t184 - qJD(5) * t189 + (qJD(5) * t148 + qJD(6) * t130) * t154;
t69 = -t117 * t123 + t119 * t163;
t67 = -pkin(5) * t204 + t84;
t48 = -t124 * t118 + t216 * t125;
t47 = -t125 * t117 - t118 * t163;
t34 = -t117 * t86 + t163 * t63;
t28 = -t154 * t45 + t212 * t44;
t27 = t75 * pkin(5) + t32;
t21 = t40 * qJD(6) + t154 * t50 + t212 * t49;
t20 = t165 * qJD(6) - t154 * t49 + t212 * t50;
t11 = t49 * pkin(5) + t17;
t10 = -t29 * qJD(6) + t154 * t167 + t212 * t160;
t9 = -t154 * t160 + t212 * t167 - t44 * t184 + t45 * t192;
t3 = t212 * t13 - t154 * t14;
t2 = -t4 * qJD(6) + t154 * t182 + t212 * t161;
t1 = -t13 * t184 + t14 * t192 - t154 * t161 + t212 * t182;
t5 = [0, 0, 0, 0.2e1 * t181, 0.2e1 * (-t156 ^ 2 + t158 ^ 2) * t145 * qJD(2), 0.2e1 * t153 * t185, -0.2e1 * t153 * t186, 0, -0.2e1 * t145 * pkin(1) * t196 - 0.2e1 * t114 * t153, -0.2e1 * pkin(1) * t188 + 0.2e1 * t113 * t153, -0.2e1 * t114 * t199 + 0.2e1 * (t156 * t206 - t71 * t158 + (t112 * t149 * t158 + t156 * t79) * qJD(2)) * t150, 0.2e1 * t114 * t115 + 0.2e1 * (t158 * t72 + (t112 * t200 - t156 * t80) * qJD(2)) * t150, 0.2e1 * t72 * t164 - 0.2e1 * t71 * t115 + 0.2e1 * (-t149 * t80 - t152 * t79) * t185, 0.2e1 * t112 * t114 + 0.2e1 * t79 * t71 + 0.2e1 * t80 * t72, 0.2e1 * t87 * t62, -0.2e1 * t62 * t86 - 0.2e1 * t87 * t63 (-t158 * t62 + t87 * t196) * t213 (t158 * t63 - t86 * t196) * t213, -0.2e1 * t181, 0.2e1 * t92 * t63 + 0.2e1 * t97 * t86 + 0.2e1 * (-t19 * t158 + t183 * t196) * t150, 0.2e1 * t92 * t62 + 0.2e1 * t97 * t87 + 0.2e1 * (-t18 * t158 - t207 * t196) * t150, 0.2e1 * t17 * t75 + 0.2e1 * t22 * t63 + 0.2e1 * t32 * t49 + 0.2e1 * t7 * t86, 0.2e1 * t17 * t76 - 0.2e1 * t23 * t63 + 0.2e1 * t32 * t50 - 0.2e1 * t8 * t86, -0.2e1 * t22 * t50 - 0.2e1 * t23 * t49 - 0.2e1 * t7 * t76 - 0.2e1 * t8 * t75, 0.2e1 * t32 * t17 + 0.2e1 * t22 * t7 + 0.2e1 * t23 * t8, 0.2e1 * t40 * t20, 0.2e1 * t165 * t20 - 0.2e1 * t40 * t21, 0.2e1 * t20 * t86 + 0.2e1 * t40 * t63, 0.2e1 * t165 * t63 - 0.2e1 * t21 * t86, 0.2e1 * t86 * t63, -0.2e1 * t11 * t165 + 0.2e1 * t2 * t86 + 0.2e1 * t27 * t21 + 0.2e1 * t3 * t63, 0.2e1 * t1 * t86 + 0.2e1 * t11 * t40 + 0.2e1 * t27 * t20 - 0.2e1 * t4 * t63; 0, 0, 0, 0, 0, t185, -t186, 0, -t114, t113, -t114 * t152 + t149 * t159, t152 * t159 + t206 (t149 * t115 + t152 * t164) * qJD(3) + t169, -t114 * pkin(2) + (-t149 * t79 + t152 * t80) * qJD(3) + t169 * qJ(3), -t87 * t118 + t62 * t125, t118 * t86 - t87 * t119 - t62 * t123 - t125 * t63 (t118 * t158 + t125 * t196) * t150 (t119 * t158 - t123 * t196) * t150, 0, t92 * t119 + t97 * t123 + t142 * t63 + (t158 * t84 - t99 * t196) * t150, -t92 * t118 + t97 * t125 + t142 * t62 + (-t101 * t196 - t158 * t83) * t150, t22 * t119 + t7 * t123 + t148 * t173 + t42 * t86 + t99 * t49 + t57 * t63 + t84 * t75, -t23 * t119 - t8 * t123 + t151 * t173 - t43 * t86 + t99 * t50 - t58 * t63 + t84 * t76, -t42 * t76 - t43 * t75 - t58 * t49 - t57 * t50 - t176 * t125 - (-t148 * t23 - t151 * t22) * t118, t17 * t99 + t22 * t42 + t23 * t43 + t32 * t84 + t7 * t57 + t8 * t58, t20 * t89 + t40 * t47, t165 * t47 - t20 * t88 - t89 * t21 - t40 * t48, t40 * t119 + t20 * t123 + t47 * t86 + t89 * t63, t119 * t165 - t21 * t123 - t48 * t86 - t88 * t63, t86 * t119 + t63 * t123, t10 * t86 + t11 * t88 + t3 * t119 + t2 * t123 - t165 * t67 + t85 * t21 + t27 * t48 + t28 * t63, t1 * t123 + t11 * t89 - t4 * t119 + t85 * t20 + t27 * t47 - t29 * t63 + t67 * t40 + t9 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, qJ(3) * t177, -0.2e1 * t125 * t118, 0.2e1 * t118 * t123 - 0.2e1 * t125 * t119, 0, 0, 0, t119 * t214, -t118 * t214, 0.2e1 * t57 * t119 + 0.2e1 * t42 * t123 + 0.2e1 * t148 * t172, -0.2e1 * t58 * t119 - 0.2e1 * t43 * t123 + 0.2e1 * t151 * t172, -0.2e1 * t171 * t125 - 0.2e1 * (-t148 * t58 - t151 * t57) * t118, 0.2e1 * t57 * t42 + 0.2e1 * t58 * t43 + 0.2e1 * t99 * t84, 0.2e1 * t89 * t47, -0.2e1 * t47 * t88 - 0.2e1 * t89 * t48, 0.2e1 * t89 * t119 + 0.2e1 * t47 * t123, -0.2e1 * t88 * t119 - 0.2e1 * t48 * t123, 0.2e1 * t123 * t119, 0.2e1 * t10 * t123 + 0.2e1 * t28 * t119 + 0.2e1 * t85 * t48 + 0.2e1 * t67 * t88, -0.2e1 * t29 * t119 + 0.2e1 * t9 * t123 + 0.2e1 * t85 * t47 + 0.2e1 * t67 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t152 * t185, 0, t114, 0, 0, 0, 0, 0, t63, t62, t151 * t63, -t148 * t63, -t148 * t49 - t151 * t50, t176, 0, 0, 0, 0, 0, t34, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, -t118, t151 * t119, -t148 * t119, t197 * t118, t171, 0, 0, 0, 0, 0, t69, t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, -t63, t186, t19, t18, -pkin(4) * t49 + t148 * t168 - t17 * t151, -pkin(4) * t50 + t17 * t148 + t151 * t168 (-qJ(5) * t49 - qJD(5) * t75 + t8) * t151 + (qJ(5) * t50 + qJD(5) * t76 - t7) * t148, -t17 * pkin(4) + (-t148 * t22 + t151 * t23) * qJD(5) + (-t7 * t148 + t8 * t151) * qJ(5), t20 * t124 + t216 * t40, -t40 * t117 - t124 * t21 + t163 * t20 + t165 * t216, -t174, t34, 0, -t11 * t163 + t27 * t117 + t141 * t21 + t98 * t63 + t82 * t86, -t100 * t63 + t11 * t124 + t141 * t20 + t216 * t27 + t81 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, -t119, 0, -t84, t83, t148 * t162 - t84 * t151, t84 * t148 + t151 * t162, t170, -t84 * pkin(4) + (-t148 * t57 + t151 * t58) * qJD(5) + t170 * qJ(5), t47 * t124 + t216 * t89, -t89 * t117 - t124 * t48 + t163 * t47 - t216 * t88, -t166, t69, 0, t85 * t117 + t98 * t119 + t82 * t123 + t141 * t48 - t163 * t67, -t100 * t119 + t81 * t123 + t67 * t124 + t141 * t47 + t216 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, qJ(5) * t178, t124 * t215, -0.2e1 * t124 * t117 + 0.2e1 * t163 * t216, 0, 0, 0, 0.2e1 * t141 * t117, t141 * t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t50, 0, t17, 0, 0, 0, 0, 0, t21, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204, -t201, 0, t84, 0, 0, 0, 0, 0, t48, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, -t21, t63, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t48, t119, t10, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t117, -t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, -t117, 0, t82, t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
