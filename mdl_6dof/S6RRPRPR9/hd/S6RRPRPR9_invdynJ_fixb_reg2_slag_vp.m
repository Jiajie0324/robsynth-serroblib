% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR9_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:01:18
% EndTime: 2019-03-09 11:01:58
% DurationCPUTime: 23.68s
% Computational Cost: add. (32044->898), mult. (79778->1202), div. (0->0), fcn. (66267->18), ass. (0->382)
t369 = sin(pkin(11));
t372 = cos(pkin(11));
t377 = sin(qJ(4));
t560 = cos(qJ(4));
t404 = -t377 * t369 + t372 * t560;
t370 = sin(pkin(6));
t380 = cos(qJ(2));
t486 = qJD(1) * t380;
t461 = t370 * t486;
t253 = t404 * t461;
t457 = qJD(4) * t560;
t482 = qJD(4) * t377;
t298 = t369 * t482 - t372 * t457;
t496 = t253 + t298;
t310 = t369 * t560 + t377 * t372;
t513 = t370 * t380;
t389 = t310 * t513;
t493 = -qJD(1) * t389 + t310 * qJD(4);
t332 = -qJD(4) + t461;
t368 = sin(pkin(12));
t371 = cos(pkin(12));
t373 = cos(pkin(6));
t488 = qJD(1) * t373;
t346 = qJD(2) + t488;
t378 = sin(qJ(2));
t487 = qJD(1) * t378;
t462 = t370 * t487;
t270 = t346 * t372 - t369 * t462;
t271 = t346 * t369 + t372 * t462;
t405 = t377 * t270 + t271 * t560;
t168 = -t332 * t368 + t371 * t405;
t376 = sin(qJ(6));
t192 = t368 * t405;
t448 = t332 * t371 + t192;
t559 = cos(qJ(6));
t406 = t559 * t448;
t96 = t168 * t376 + t406;
t596 = t96 ^ 2;
t201 = -t560 * t270 + t271 * t377;
t197 = qJD(6) + t201;
t595 = t197 * t96;
t425 = pkin(2) * t378 - qJ(3) * t380;
t290 = t425 * t370 * qJD(1);
t557 = pkin(1) * t380;
t473 = t373 * t557;
t291 = -pkin(8) * t462 + qJD(1) * t473;
t215 = t372 * t290 - t291 * t369;
t395 = (-pkin(9) * t372 * t380 + pkin(3) * t378) * t370;
t175 = qJD(1) * t395 + t215;
t216 = t369 * t290 + t372 * t291;
t440 = t369 * t461;
t190 = -pkin(9) * t440 + t216;
t550 = pkin(9) + qJ(3);
t324 = t550 * t369;
t326 = t550 * t372;
t567 = -t560 * t324 - t377 * t326;
t499 = t404 * qJD(3) + t567 * qJD(4) - t377 * t175 - t560 * t190;
t95 = -t168 * t559 + t376 * t448;
t594 = t95 ^ 2;
t478 = qJD(1) * qJD(2);
t453 = t380 * t478;
t476 = qJDD(1) * t378;
t399 = t453 + t476;
t578 = t399 * t370;
t593 = qJ(5) * t462 - t499;
t558 = pkin(1) * t378;
t491 = pkin(8) * t513 + t373 * t558;
t292 = t491 * qJD(1);
t243 = pkin(3) * t440 + t292;
t592 = t493 * pkin(4) + qJ(5) * t496 - qJD(5) * t310 - t243;
t403 = -t376 * t368 + t559 * t371;
t456 = qJD(6) * t559;
t481 = qJD(6) * t376;
t565 = -t368 * t481 + t371 * t456;
t588 = -t403 * t201 - t565;
t309 = t368 * t559 + t376 * t371;
t297 = t309 * qJD(6);
t504 = t309 * t201 + t297;
t477 = qJDD(1) * t373;
t345 = qJDD(2) + t477;
t522 = t345 * t369;
t232 = t372 * t578 + t522;
t492 = t578 * t369;
t427 = t372 * t345 - t492;
t108 = -t560 * t232 - t270 * t457 + t271 * t482 - t377 * t427;
t105 = t368 * t108;
t475 = qJDD(1) * t380;
t342 = t370 * t475;
t454 = t378 * t478;
t436 = t370 * t454;
t285 = qJDD(4) - t342 + t436;
t449 = t285 * t371 + t105;
t88 = -t108 * t371 + t285 * t368;
t32 = qJD(6) * t406 + t168 * t481 - t376 * t449 - t559 * t88;
t591 = t403 * t32 - t504 * t95;
t217 = t253 * t368 - t371 * t462;
t447 = t298 * t368 + t217;
t218 = t253 * t371 + t368 * t462;
t590 = t298 * t371 + t218;
t109 = qJD(4) * t405 + t377 * t232 - t560 * t427;
t107 = qJDD(6) + t109;
t589 = t107 * t309 - t197 * t588;
t541 = t368 * t593 + t371 * t592;
t540 = t368 * t592 - t371 * t593;
t450 = t376 * t88 - t559 * t449;
t33 = -qJD(6) * t95 + t450;
t587 = -t309 * t33 + t588 * t96;
t586 = t107 * t403 - t197 * t504;
t562 = t201 ^ 2;
t585 = pkin(5) * t493 + pkin(10) * t590 + t541;
t584 = pkin(10) * t447 + t540;
t581 = t201 * t332;
t251 = -t377 * t324 + t326 * t560;
t498 = -qJD(3) * t310 - qJD(4) * t251 - t175 * t560 + t377 * t190;
t561 = cos(qJ(1));
t465 = t561 * t378;
t379 = sin(qJ(1));
t508 = t379 * t380;
t301 = t373 * t465 + t508;
t365 = pkin(11) + qJ(4);
t359 = sin(t365);
t361 = cos(t365);
t466 = t370 * t561;
t234 = t301 * t361 - t359 * t466;
t464 = t561 * t380;
t509 = t378 * t379;
t300 = -t373 * t464 + t509;
t364 = pkin(12) + qJ(6);
t358 = sin(t364);
t360 = cos(t364);
t577 = t234 * t358 - t300 * t360;
t576 = t234 * t360 + t300 * t358;
t575 = t405 ^ 2;
t363 = t370 ^ 2;
t574 = 0.2e1 * t363;
t573 = pkin(3) * t369;
t572 = t405 * t96;
t571 = t405 * t95;
t570 = t168 * t405;
t569 = t332 * t405;
t302 = t373 * t508 + t465;
t432 = g(1) * t302 + g(2) * t300;
t566 = g(3) * t513 - t432;
t388 = t566 * t359;
t568 = t405 * t448;
t497 = pkin(4) * t462 - t498;
t294 = t491 * qJD(2);
t552 = t345 * pkin(2);
t564 = qJDD(3) - t552;
t553 = t285 * pkin(4);
t563 = qJDD(5) - t553;
t254 = qJ(3) * t346 + t292;
t413 = -pkin(2) * t380 - qJ(3) * t378 - pkin(1);
t282 = t413 * t370;
t260 = qJD(1) * t282;
t179 = -t254 * t369 + t372 * t260;
t134 = -pkin(3) * t461 - pkin(9) * t271 + t179;
t180 = t372 * t254 + t369 * t260;
t149 = pkin(9) * t270 + t180;
t73 = t377 * t134 + t149 * t560;
t70 = -t332 * qJ(5) + t73;
t245 = -pkin(2) * t346 + qJD(3) - t291;
t198 = -pkin(3) * t270 + t245;
t85 = pkin(4) * t201 - qJ(5) * t405 + t198;
t41 = -t368 * t70 + t371 * t85;
t29 = pkin(5) * t201 - pkin(10) * t168 + t41;
t42 = t368 * t85 + t371 * t70;
t34 = -pkin(10) * t448 + t42;
t408 = -t29 * t559 + t376 * t34;
t472 = pkin(1) * qJD(2) * t373;
t442 = qJD(1) * t472;
t471 = pkin(1) * t477;
t467 = -pkin(8) * t342 - t378 * t471 - t380 * t442;
t225 = -pkin(8) * t436 - t467;
t187 = qJ(3) * t345 + qJD(3) * t346 + t225;
t384 = qJD(2) * t425 - qJD(3) * t378;
t196 = (qJD(1) * t384 + qJDD(1) * t413) * t370;
t116 = -t187 * t369 + t372 * t196;
t398 = t454 - t475;
t77 = pkin(3) * t370 * t398 - pkin(9) * t232 + t116;
t117 = t372 * t187 + t369 * t196;
t90 = pkin(9) * t427 + t117;
t26 = t134 * t457 - t149 * t482 + t377 * t77 + t560 * t90;
t415 = qJ(5) * t285 - qJD(5) * t332;
t22 = t26 + t415;
t226 = -pkin(8) * t578 - t378 * t442 + t380 * t471;
t206 = -t226 + t564;
t146 = -pkin(3) * t427 + t206;
t38 = t109 * pkin(4) + t108 * qJ(5) - qJD(5) * t405 + t146;
t8 = -t22 * t368 + t371 * t38;
t6 = pkin(5) * t109 - pkin(10) * t88 + t8;
t9 = t371 * t22 + t368 * t38;
t7 = pkin(10) * t449 + t9;
t1 = -t408 * qJD(6) + t376 * t6 + t559 * t7;
t556 = pkin(5) * t368;
t357 = pkin(3) * t372 + pkin(2);
t312 = t357 * t513;
t555 = g(3) * t312;
t554 = g(3) * t370;
t551 = t95 * t96;
t549 = pkin(10) + qJ(5);
t231 = -pkin(4) * t404 - qJ(5) * t310 - t357;
t158 = t371 * t231 - t251 * t368;
t524 = t310 * t371;
t129 = -pkin(5) * t404 - pkin(10) * t524 + t158;
t159 = t368 * t231 + t371 * t251;
t525 = t310 * t368;
t137 = -pkin(10) * t525 + t159;
t66 = t129 * t559 - t376 * t137;
t548 = qJD(6) * t66 + t585 * t376 + t584 * t559;
t67 = t376 * t129 + t137 * t559;
t547 = -qJD(6) * t67 - t584 * t376 + t585 * t559;
t484 = qJD(2) * t378;
t257 = t384 * t370;
t460 = t370 * t484;
t293 = -pkin(8) * t460 + t380 * t472;
t264 = qJD(3) * t373 + t293;
t188 = t372 * t257 - t264 * t369;
t153 = qJD(2) * t395 + t188;
t281 = qJ(3) * t373 + t491;
t207 = -t281 * t369 + t372 * t282;
t515 = t370 * t378;
t295 = t369 * t373 + t372 * t515;
t156 = -pkin(3) * t513 - pkin(9) * t295 + t207;
t189 = t369 * t257 + t372 * t264;
t483 = qJD(2) * t380;
t459 = t370 * t483;
t439 = t369 * t459;
t171 = -pkin(9) * t439 + t189;
t208 = t372 * t281 + t369 * t282;
t468 = t369 * t515;
t407 = -t372 * t373 + t468;
t174 = -pkin(9) * t407 + t208;
t49 = t377 * t153 + t156 * t457 + t560 * t171 - t174 * t482;
t46 = (qJ(5) * t484 - qJD(5) * t380) * t370 + t49;
t390 = t560 * t407;
t438 = t372 * t459;
t163 = qJD(4) * t390 - t560 * t438 + (qJD(4) * t295 + t439) * t377;
t220 = t295 * t560 - t377 * t407;
t164 = qJD(2) * t389 + qJD(4) * t220;
t244 = pkin(3) * t439 + t294;
t64 = pkin(4) * t164 + qJ(5) * t163 - qJD(5) * t220 + t244;
t25 = t368 * t64 + t371 * t46;
t544 = t332 * t73;
t543 = t88 * t368;
t542 = t88 * t371;
t539 = -pkin(5) * t447 + t497;
t323 = t549 * t368;
t325 = t549 * t371;
t248 = -t323 * t559 - t376 * t325;
t126 = pkin(4) * t405 + qJ(5) * t201;
t72 = t134 * t560 - t377 * t149;
t51 = t371 * t126 - t368 * t72;
t532 = t201 * t371;
t37 = pkin(5) * t405 + pkin(10) * t532 + t51;
t52 = t368 * t126 + t371 * t72;
t533 = t201 * t368;
t43 = pkin(10) * t533 + t52;
t538 = qJD(5) * t403 + qJD(6) * t248 - t376 * t37 - t43 * t559;
t250 = -t376 * t323 + t325 * t559;
t537 = -qJD(5) * t309 - qJD(6) * t250 - t37 * t559 + t376 * t43;
t219 = t295 * t377 + t390;
t347 = pkin(8) * t515;
t230 = pkin(3) * t468 + t347 + (-t357 - t557) * t373;
t115 = t219 * pkin(4) - t220 * qJ(5) + t230;
t94 = t377 * t156 + t560 * t174;
t91 = -qJ(5) * t513 + t94;
t56 = t368 * t115 + t371 * t91;
t535 = t109 * t368;
t534 = t201 * t405;
t527 = t300 * t368;
t526 = t302 * t368;
t521 = t358 * t361;
t520 = t360 * t361;
t519 = t361 * t380;
t367 = t380 ^ 2;
t518 = t363 * t367;
t517 = t363 * qJD(1) ^ 2;
t516 = t368 * t168;
t514 = t370 * t379;
t106 = t371 * t109;
t512 = t550 * t378;
t69 = t332 * pkin(4) + qJD(5) - t72;
t507 = -qJD(5) + t69;
t501 = t376 * t217 - t559 * t218 - t297 * t310 - t403 * t298;
t500 = -t559 * t217 - t218 * t376 - t298 * t309 + t565 * t310;
t495 = -t300 * t357 + t301 * t550;
t303 = -t373 * t509 + t464;
t494 = -t302 * t357 + t303 * t550;
t490 = t561 * pkin(1) + pkin(8) * t514;
t366 = t378 ^ 2;
t489 = t366 - t367;
t485 = qJD(2) * t372;
t480 = qJD(2) - t346;
t479 = qJ(3) * qJDD(1);
t474 = g(3) * t515;
t470 = t367 * t517;
t469 = t380 * t517;
t455 = pkin(1) * t574;
t451 = -pkin(1) * t379 + pkin(8) * t466;
t24 = -t368 * t46 + t371 * t64;
t55 = t371 * t115 - t368 * t91;
t27 = -t134 * t482 - t149 * t457 - t377 * t90 + t560 * t77;
t444 = t346 + t488;
t443 = t345 + t477;
t441 = t271 * t461;
t434 = t378 * t453;
t233 = t301 * t359 + t361 * t466;
t237 = t303 * t359 - t361 * t514;
t433 = -g(1) * t233 + g(2) * t237;
t431 = g(1) * t300 - g(2) * t302;
t430 = g(1) * t303 + g(2) * t301;
t429 = g(1) * t301 - g(2) * t303;
t428 = -t9 * t368 - t8 * t371;
t93 = t156 * t560 - t377 * t174;
t426 = t449 * pkin(5);
t424 = pkin(4) * t361 + qJ(5) * t359;
t423 = t368 * t41 - t371 * t42;
t422 = t302 * t550 + t303 * t357 + t514 * t573 + t490;
t421 = t371 * t448;
t420 = t449 * t371;
t419 = t448 * t298;
t418 = t109 * t219 + t164 * t201;
t417 = t270 * t372 - t271 * t369;
t356 = pkin(5) * t371 + pkin(4);
t416 = t356 * t361 + t359 * t549;
t414 = qJD(1) * (-t270 + t485);
t412 = -t206 + t432;
t410 = g(1) * t561 + g(2) * t379;
t92 = pkin(4) * t513 - t93;
t195 = t220 * t371 - t368 * t513;
t40 = pkin(5) * t219 - pkin(10) * t195 + t55;
t194 = t220 * t368 + t371 * t513;
t44 = -pkin(10) * t194 + t56;
t14 = -t376 * t44 + t40 * t559;
t11 = t376 * t29 + t34 * t559;
t15 = t376 * t40 + t44 * t559;
t123 = -t376 * t194 + t195 * t559;
t402 = -t300 * t550 - t301 * t357 + t466 * t573 + t451;
t400 = -t109 * t404 + t201 * t493;
t50 = t153 * t560 - t156 * t482 - t377 * t171 - t174 * t457;
t278 = t359 * t515 - t373 * t361;
t397 = g(1) * t237 + g(2) * t233 + g(3) * t278;
t238 = t303 * t361 + t359 * t514;
t279 = t359 * t373 + t361 * t515;
t396 = -g(1) * t238 - g(2) * t234 - g(3) * t279;
t23 = -t27 + t563;
t394 = -t23 + t397;
t392 = -t430 - t474;
t391 = -qJ(3) * t484 + (qJD(3) - t245) * t380;
t387 = t566 * t361;
t386 = t23 * t310 - t298 * t69 - t430;
t385 = -t566 + t226;
t383 = t397 + t27;
t47 = -pkin(4) * t460 - t50;
t2 = -qJD(6) * t11 - t376 * t7 + t559 * t6;
t382 = -t383 + t563;
t322 = t378 * t469;
t304 = -t347 + t473;
t284 = t347 + (-pkin(2) - t557) * t373;
t280 = (qJDD(1) * t367 - 0.2e1 * t434) * t363;
t222 = t403 * t310;
t221 = t309 * t310;
t214 = pkin(5) * t525 - t567;
t177 = t238 * t360 + t302 * t358;
t176 = -t238 * t358 + t302 * t360;
t148 = -t163 * t371 + t368 * t460;
t147 = -t163 * t368 - t371 * t460;
t122 = t194 * t559 + t195 * t376;
t81 = t368 * t449;
t65 = t194 * pkin(5) + t92;
t59 = -pkin(5) * t533 + t73;
t58 = pkin(5) * t448 + t69;
t54 = qJD(6) * t123 + t147 * t559 + t376 * t148;
t53 = t376 * t147 - t148 * t559 + t194 * t456 + t195 * t481;
t39 = t147 * pkin(5) + t47;
t18 = -pkin(10) * t147 + t25;
t17 = pkin(5) * t164 - pkin(10) * t148 + t24;
t16 = -t426 + t23;
t4 = -qJD(6) * t15 + t17 * t559 - t376 * t18;
t3 = qJD(6) * t14 + t376 * t17 + t18 * t559;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t379 - g(2) * t561, t410, 0, 0 (qJDD(1) * t366 + 0.2e1 * t434) * t363 (t378 * t475 - t478 * t489) * t574 (t378 * t443 + t444 * t483) * t370, t280 (t380 * t443 - t444 * t484) * t370, t345 * t373, t226 * t373 - t294 * t346 + t304 * t345 - t398 * t455 + t429, -t225 * t373 - t293 * t346 - t345 * t491 - t399 * t455 - t431 ((-qJD(2) * t291 + qJDD(1) * t491 + t225 + (-qJD(2) * t304 + t293) * qJD(1)) * t380 + (-qJD(2) * t292 - qJDD(1) * t304 - t226) * t378 - t410) * t370, t363 * qJDD(1) * pkin(1) ^ 2 - g(1) * t451 - g(2) * t490 + t225 * t491 + t226 * t304 - t291 * t294 + t292 * t293, t232 * t295 + t271 * t438, -t232 * t407 + t295 * t427 + t417 * t459, -t372 * t478 * t518 + ((-qJDD(1) * t295 - t232) * t380 + (qJD(1) * t295 + t271) * t484) * t370, -t270 * t439 - t407 * t427 (qJDD(1) * t407 - t427) * t513 + (t270 * t515 + (t369 * t518 - t407 * t515) * qJD(1)) * qJD(2), t280, -t294 * t270 + t284 * t492 + (-t206 * t373 - t284 * t345 + t429) * t372 + ((qJD(1) * t207 + t179) * t484 + (-qJD(1) * t188 - qJDD(1) * t207 - t116) * t380 + (t206 * t378 + t245 * t483 - t410) * t369) * t370, t206 * t295 + t284 * t232 + t294 * t271 - t429 * t369 + (-t410 * t372 + (-qJD(1) * t208 - t180) * t484 + (qJD(1) * t189 + qJDD(1) * t208 + t245 * t485 + t117) * t380) * t370, t189 * t270 + t208 * t427 - t117 * t407 - t188 * t271 - t207 * t232 - t116 * t295 + (-t179 * t372 - t180 * t369) * t459 + t431, t117 * t208 + t180 * t189 + t116 * t207 + t179 * t188 + t206 * t284 + t245 * t294 - g(1) * (-pkin(2) * t301 - qJ(3) * t300 + t451) - g(2) * (pkin(2) * t303 + qJ(3) * t302 + t490) -t108 * t220 - t163 * t405, t108 * t219 - t109 * t220 + t163 * t201 - t164 * t405, t163 * t332 + t220 * t285 + (t108 * t380 + t405 * t484) * t370, t418, t164 * t332 - t219 * t285 + (t109 * t380 - t201 * t484) * t370 (-t285 * t380 - t332 * t484) * t370, g(1) * t234 - g(2) * t238 + t109 * t230 + t146 * t219 + t164 * t198 + t201 * t244 + t285 * t93 - t332 * t50 + (-t27 * t380 + t484 * t72) * t370, -t108 * t230 + t146 * t220 - t163 * t198 + t405 * t244 - t285 * t94 + t332 * t49 + (t26 * t380 - t484 * t73) * t370 + t433, t108 * t93 - t109 * t94 + t163 * t72 - t164 * t73 - t201 * t49 - t219 * t26 - t220 * t27 - t405 * t50 + t431, -g(1) * t402 - g(2) * t422 + t146 * t230 + t198 * t244 + t26 * t94 + t27 * t93 + t73 * t49 + t72 * t50, t148 * t168 + t195 * t88, -t168 * t147 - t148 * t448 - t88 * t194 + t195 * t449, t109 * t195 + t148 * t201 + t164 * t168 + t219 * t88, t147 * t448 - t194 * t449, -t194 * t109 - t147 * t201 - t164 * t448 + t219 * t449, t418, t24 * t201 + t55 * t109 + t8 * t219 + t41 * t164 + t47 * t448 - t92 * t449 + t23 * t194 + t69 * t147 - g(1) * (-t234 * t371 - t527) - g(2) * (t238 * t371 + t526) -t25 * t201 - t56 * t109 - t9 * t219 - t42 * t164 + t47 * t168 + t92 * t88 + t23 * t195 + t69 * t148 - g(1) * (t234 * t368 - t300 * t371) - g(2) * (-t238 * t368 + t302 * t371) -t42 * t147 - t41 * t148 - t24 * t168 - t9 * t194 - t8 * t195 - t25 * t448 + t449 * t56 - t55 * t88 - t433, t9 * t56 + t42 * t25 + t8 * t55 + t41 * t24 + t23 * t92 + t69 * t47 - g(1) * (-pkin(4) * t234 - qJ(5) * t233 + t402) - g(2) * (pkin(4) * t238 + qJ(5) * t237 + t422) -t123 * t32 + t53 * t95, t122 * t32 - t123 * t33 + t53 * t96 + t54 * t95, t107 * t123 - t164 * t95 - t197 * t53 - t219 * t32, t122 * t33 + t54 * t96, -t107 * t122 - t164 * t96 - t197 * t54 - t219 * t33, t107 * t219 + t164 * t197, g(1) * t576 - g(2) * t177 + t14 * t107 + t16 * t122 - t408 * t164 + t4 * t197 + t2 * t219 + t65 * t33 + t39 * t96 + t58 * t54, -g(1) * t577 - g(2) * t176 - t1 * t219 - t15 * t107 - t11 * t164 + t16 * t123 - t3 * t197 - t65 * t32 - t39 * t95 - t58 * t53, -t1 * t122 - t11 * t54 - t123 * t2 + t14 * t32 - t15 * t33 - t3 * t96 + t4 * t95 - t408 * t53 - t433, t1 * t15 + t11 * t3 + t2 * t14 - t408 * t4 + t16 * t65 + t58 * t39 - g(1) * (-pkin(5) * t527 - t233 * t549 - t234 * t356 + t402) - g(2) * (pkin(5) * t526 + t237 * t549 + t238 * t356 + t422); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, t489 * t517 (t480 * t486 + t476) * t370, t322, -t462 * t480 + t342, t345, t292 * t346 + t517 * t558 + t385, pkin(1) * t469 + t291 * t346 + (pkin(8) * t478 + g(3)) * t515 + t430 + t467, 0, 0, t232 * t369 - t372 * t441, t232 * t372 + t369 * t427 - t417 * t461, t372 * t470 + (-t369 * t475 + (qJD(2) * t369 - t271) * t487) * t370, t270 * t440 + t372 * t427, -t369 * t470 + (-t372 * t475 + t378 * t414) * t370, t322, -pkin(2) * t492 + t292 * t270 + (t412 + t552) * t372 + ((-g(3) * t372 + t369 * t479) * t380 + (-t179 * t378 + t215 * t380 + t369 * t391) * qJD(1)) * t370, -pkin(2) * t232 - t271 * t292 - t412 * t369 + ((g(3) * t369 + t372 * t479) * t380 + (t180 * t378 - t216 * t380 + t372 * t391) * qJD(1)) * t370, t215 * t271 - t216 * t270 + (qJ(3) * t427 + qJD(3) * t270 + t179 * t461 + t117) * t372 + (qJ(3) * t232 + qJD(3) * t271 + t180 * t461 - t116) * t369 + t392, -t179 * t215 - t180 * t216 - t245 * t292 + (-t179 * t369 + t180 * t372) * qJD(3) + (-t206 - t566) * pkin(2) + (-t116 * t369 + t117 * t372 + t392) * qJ(3), -t108 * t310 - t405 * t496, -t108 * t404 - t109 * t310 + t201 * t496 - t405 * t493, t285 * t310 + t332 * t496 - t405 * t462, t400, t201 * t462 + t285 * t404 + t332 * t493, t332 * t462, -t109 * t357 - t146 * t404 + t198 * t493 - t201 * t243 + t285 * t567 - t332 * t498 - t462 * t72 - t387, t108 * t357 + t146 * t310 - t198 * t496 - t243 * t405 - t251 * t285 + t332 * t499 + t462 * t73 + t388, t108 * t567 - t109 * t251 - t201 * t499 + t26 * t404 - t27 * t310 - t405 * t498 - t493 * t73 + t496 * t72 + t392, t26 * t251 + t27 * t567 - t146 * t357 - t198 * t243 - g(1) * t494 - g(2) * t495 - g(3) * (t370 * t512 + t312) + t499 * t73 + t498 * t72, -t168 * t590 + t524 * t88, t371 * t419 + t218 * t448 + (t420 - t543) * t310 + t447 * t168, t106 * t310 + t168 * t493 - t201 * t590 - t404 * t88, -t448 * t217 + (-t310 * t449 - t419) * t368, -t109 * t525 + t201 * t447 - t404 * t449 - t493 * t448, t400, t158 * t109 - t8 * t404 + t567 * t449 - t69 * t217 + t493 * t41 - t371 * t387 + (t386 - t474) * t368 + t541 * t201 + t497 * t448, -t159 * t109 - t69 * t218 - t567 * t88 + t9 * t404 - t493 * t42 - t432 * t368 * t361 + t386 * t371 - (-t368 * t519 + t371 * t378) * t554 - t540 * t201 + t497 * t168, t159 * t449 - t158 * t88 + t42 * t217 + t41 * t218 + t428 * t310 + (t368 * t42 + t371 * t41) * t298 - t541 * t168 - t388 - t540 * t448, t9 * t159 + t8 * t158 - t23 * t567 - g(1) * (-t302 * t424 + t494) - g(2) * (-t300 * t424 + t495) - t555 + t497 * t69 + t540 * t42 + t541 * t41 - (t380 * t424 + t512) * t554, -t222 * t32 - t501 * t95, t221 * t32 - t222 * t33 + t500 * t95 - t501 * t96, t107 * t222 + t197 * t501 + t32 * t404 - t493 * t95, t221 * t33 + t500 * t96, -t107 * t221 - t197 * t500 + t33 * t404 - t493 * t96, -t107 * t404 + t197 * t493, t66 * t107 - t2 * t404 + t214 * t33 + t16 * t221 - g(1) * (-t302 * t520 + t303 * t358) - g(2) * (-t300 * t520 + t301 * t358) + t539 * t96 + t500 * t58 - (t358 * t378 + t360 * t519) * t554 + t547 * t197 - t493 * t408, -t67 * t107 + t1 * t404 - t214 * t32 + t16 * t222 - g(1) * (t302 * t521 + t303 * t360) - g(2) * (t300 * t521 + t301 * t360) - t539 * t95 + t501 * t58 - (-t358 * t519 + t360 * t378) * t554 - t548 * t197 - t493 * t11, -t1 * t221 - t11 * t500 - t2 * t222 + t32 * t66 - t33 * t67 + t408 * t501 + t547 * t95 - t548 * t96 - t388, t1 * t67 + t2 * t66 + t16 * t214 - g(1) * (-t302 * t416 + t303 * t556 + t494) - g(2) * (-t300 * t416 + t301 * t556 + t495) - t555 + t539 * t58 + t548 * t11 - t547 * t408 - (t416 * t380 + (t550 + t556) * t378) * t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427 - t441, t522 + (t372 * t476 + t380 * t414) * t370, -t270 ^ 2 - t271 ^ 2, t179 * t271 - t180 * t270 - t385 + t564, 0, 0, 0, 0, 0, 0, t109 - t569, -t108 + t581, -t575 - t562, t201 * t73 + t405 * t72 + t146 + t566, 0, 0, 0, 0, 0, 0, -t201 * t533 + t106 - t568, -t201 * t532 - t535 - t570, -t542 + t81 - (t421 - t516) * t201, -t201 * t423 - t405 * t69 - t428 + t566, 0, 0, 0, 0, 0, 0, -t572 + t586, t571 - t589, t587 + t591, t1 * t309 - t11 * t588 + t2 * t403 - t405 * t58 + t408 * t504 + t566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534, -t562 + t575, -t108 - t581, -t534, -t109 - t569, t285, -t198 * t405 + t383 - t544, t198 * t201 - t332 * t72 - t26 - t396, 0, 0, t168 * t532 + t543, t542 + t81 + (-t421 - t516) * t201, t371 * t562 + t535 - t570, t448 * t533 + t420, -t368 * t562 + t106 + t568, -t534, -qJ(5) * t535 + pkin(4) * t105 - t73 * t192 - t41 * t405 + (t368 * t507 - t51) * t201 + (t394 - t544 + t553) * t371, -qJ(5) * t106 - pkin(4) * t88 - t168 * t73 + t405 * t42 + (t371 * t507 + t52) * t201 - t394 * t368, t51 * t168 + t52 * t192 + (qJ(5) * t105 - qJD(5) * t192 - t41 * t201 + t52 * t332 + t371 * t415 + t9) * t371 + (qJ(5) * t88 + qJD(5) * t168 - t201 * t42 - t8) * t368 + t396, -t41 * t51 - t42 * t52 - t69 * t73 - t423 * qJD(5) + t394 * pkin(4) + (-t8 * t368 + t9 * t371 + t396) * qJ(5), -t309 * t32 + t588 * t95, t587 - t591, t571 + t589, -t33 * t403 + t504 * t96, t572 + t586, -t197 * t405, t107 * t248 - t16 * t403 + t197 * t537 - t33 * t356 + t360 * t397 + t405 * t408 + t504 * t58 - t59 * t96, -t107 * t250 + t11 * t405 + t16 * t309 - t197 * t538 + t32 * t356 - t358 * t397 - t58 * t588 + t59 * t95, t1 * t403 - t11 * t504 - t2 * t309 + t248 * t32 - t250 * t33 - t408 * t588 + t537 * t95 - t538 * t96 + t396, t1 * t250 + t2 * t248 - t16 * t356 - t58 * t59 - g(1) * (-t237 * t356 + t238 * t549) - g(2) * (-t233 * t356 + t234 * t549) - g(3) * (-t278 * t356 + t279 * t549) + t538 * t11 - t537 * t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168 * t201 - t449, -t201 * t448 + t88, -t168 ^ 2 - t448 ^ 2, t168 * t41 + t42 * t448 + t382, 0, 0, 0, 0, 0, 0, -t95 * t197 + t33, -t32 - t595, -t594 - t596, t11 * t96 + t408 * t95 + t382 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t551, t594 - t596, -t32 + t595, t551, -t450 - (-qJD(6) + t197) * t95, t107, t11 * t197 + t58 * t95 - g(1) * t176 + g(2) * t577 - g(3) * (-t279 * t358 - t360 * t513) + t2, -t408 * t197 + t58 * t96 + g(1) * t177 + g(2) * t576 - g(3) * (-t279 * t360 + t358 * t513) - t1, 0, 0;];
tau_reg  = t5;
