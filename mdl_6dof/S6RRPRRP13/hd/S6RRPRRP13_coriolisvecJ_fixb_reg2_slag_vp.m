% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP13_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP13_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP13_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP13_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:01:33
% EndTime: 2019-03-09 13:01:54
% DurationCPUTime: 9.19s
% Computational Cost: add. (11956->640), mult. (30532->853), div. (0->0), fcn. (22375->8), ass. (0->308)
t253 = cos(pkin(6));
t259 = cos(qJ(2));
t397 = pkin(1) * t259;
t326 = t253 * t397;
t236 = qJD(1) * t326;
t401 = qJD(3) - t236;
t255 = sin(qJ(4));
t258 = cos(qJ(4));
t299 = pkin(4) * t258 + pkin(10) * t255;
t252 = sin(pkin(6));
t256 = sin(qJ(2));
t343 = qJD(1) * t256;
t321 = t252 * t343;
t399 = pkin(3) + pkin(8);
t418 = (-t299 - t399) * t321 - qJD(4) * t299 - t401;
t254 = sin(qJ(5));
t257 = cos(qJ(5));
t345 = qJD(1) * t252;
t320 = t259 * t345;
t170 = t254 * t255 * t321 - t257 * t320;
t339 = qJD(4) * t255;
t417 = t254 * t339 + t170;
t332 = qJD(5) * t258;
t313 = t257 * t332;
t416 = t313 - t417;
t352 = t256 * t257;
t171 = (t254 * t259 + t255 * t352) * t345;
t338 = qJD(4) * t257;
t298 = -t255 * t338 - t171;
t344 = qJD(1) * t253;
t240 = qJD(2) + t344;
t260 = -pkin(2) - pkin(9);
t110 = t240 * t260 + t321 * t399 + t401;
t342 = qJD(2) * t256;
t319 = t252 * t342;
t302 = qJD(1) * t319;
t224 = pkin(2) * t302;
t297 = pkin(9) * t256 - qJ(3) * t259;
t340 = qJD(3) * t256;
t266 = (qJD(2) * t297 - t340) * t252;
t113 = qJD(1) * t266 + t224;
t376 = qJ(3) * t256;
t310 = -pkin(1) - t376;
t403 = t259 * t260;
t157 = (t310 + t403) * t252;
t134 = qJD(1) * t157;
t398 = pkin(1) * t256;
t245 = t253 * t398;
t356 = t252 * t259;
t162 = (t356 * t399 + t245) * qJD(2);
t139 = qJD(1) * t162;
t337 = qJD(4) * t258;
t273 = -t110 * t337 - t258 * t113 + t134 * t339 - t255 * t139;
t296 = qJD(4) + t321;
t78 = t258 * t110 - t255 * t134;
t415 = -t78 * t296 - t273;
t176 = t240 * t255 + t258 * t320;
t173 = qJD(5) + t176;
t333 = qJD(5) * t257;
t334 = qJD(5) * t254;
t327 = qJD(1) * qJD(2);
t311 = t259 * t327;
t231 = t252 * t311;
t37 = pkin(10) * t231 - t273;
t348 = pkin(8) * t302 - qJD(2) * t236;
t145 = -t240 * qJD(3) + t348;
t114 = -pkin(3) * t302 - t145;
t317 = qJD(4) * t356;
t301 = qJD(1) * t317;
t124 = t240 * t337 - t255 * t301 - t258 * t302;
t349 = t240 * t339 + t258 * t301;
t270 = t255 * t302 - t349;
t62 = t124 * pkin(4) - pkin(10) * t270 + t114;
t79 = t255 * t110 + t258 * t134;
t69 = pkin(10) * t296 + t79;
t347 = pkin(8) * t356 + t245;
t188 = t347 * qJD(1);
t161 = pkin(3) * t320 + t188;
t232 = t240 * qJ(3);
t128 = t232 + t161;
t178 = t240 * t258 - t255 * t320;
t82 = t176 * pkin(4) - t178 * pkin(10) + t128;
t307 = -t254 * t62 - t257 * t37 - t82 * t333 + t69 * t334;
t32 = -t254 * t69 + t257 * t82;
t414 = -t173 * t32 - t307;
t402 = qJD(4) * t296;
t413 = -t260 * t402 + t114;
t249 = t252 ^ 2;
t412 = -0.2e1 * t249 * t327;
t33 = t254 * t82 + t257 * t69;
t8 = -qJD(5) * t33 - t254 * t37 + t257 * t62;
t411 = -t33 * t173 - t8;
t42 = -t110 * t339 - t255 * t113 - t134 * t337 + t258 * t139;
t410 = t79 * t296 + t42;
t216 = pkin(4) * t255 - pkin(10) * t258 + qJ(3);
t353 = t255 * t260;
t175 = t254 * t216 + t257 * t353;
t238 = pkin(2) * t321;
t159 = t297 * t345 + t238;
t99 = t258 * t159 + t255 * t161;
t91 = pkin(10) * t320 + t99;
t409 = t175 * qJD(5) - t254 * t91 + t257 * t418;
t336 = qJD(4) * t260;
t314 = t258 * t336;
t408 = -t216 * t333 + (-t314 + t91) * t257 + t418 * t254;
t284 = t257 * t296;
t117 = t178 * t254 - t284;
t375 = t117 * t173;
t74 = -qJD(5) * t284 + t178 * t334 - t254 * t231 - t257 * t270;
t407 = -t74 - t375;
t119 = t257 * t178 + t254 * t296;
t371 = t119 * t173;
t335 = qJD(5) * t119;
t75 = -t257 * t231 + t254 * t270 + t335;
t406 = t75 + t371;
t405 = t117 * t296;
t404 = t176 * t296;
t282 = t178 * t296;
t400 = t119 ^ 2;
t250 = t256 ^ 2;
t396 = pkin(5) * t124;
t395 = t117 * pkin(5);
t394 = -qJ(6) - pkin(10);
t25 = -qJ(6) * t119 + t32;
t22 = pkin(5) * t173 + t25;
t393 = t22 - t25;
t303 = t258 * t321;
t309 = -t254 * t260 + pkin(5);
t330 = t257 * qJD(6);
t392 = -pkin(5) * t303 - (qJD(4) * t309 - t330) * t258 + t409 + (-t334 * t258 + t298) * qJ(6);
t391 = -qJ(6) * t170 + qJ(6) * t313 - (-qJD(6) * t258 + (qJ(6) * qJD(4) - qJD(5) * t260) * t255) * t254 + t408;
t357 = t252 * t256;
t242 = pkin(8) * t357;
t322 = -pkin(2) - t397;
t138 = pkin(3) * t357 + t242 + (-pkin(9) + t322) * t253;
t94 = t255 * t138 + t258 * t157;
t88 = pkin(10) * t357 + t94;
t183 = -t253 * qJ(3) - t347;
t156 = pkin(3) * t356 - t183;
t196 = t253 * t255 + t258 * t356;
t197 = t253 * t258 - t255 * t356;
t97 = pkin(4) * t196 - pkin(10) * t197 + t156;
t51 = t254 * t97 + t257 * t88;
t26 = -qJ(6) * t117 + t33;
t390 = t173 * t26;
t38 = -pkin(4) * t231 - t42;
t19 = pkin(5) * t75 + t38;
t388 = t19 * t254;
t387 = t19 * t257;
t386 = t254 * t38;
t385 = t257 * t38;
t383 = t74 * t254;
t382 = t75 * t257;
t324 = t254 * t353;
t381 = -qJD(5) * t324 - t408;
t380 = -t254 * t314 - t409;
t98 = -t255 * t159 + t161 * t258;
t90 = -pkin(4) * t320 - t98;
t379 = pkin(5) * t416 + t255 * t336 - t90;
t308 = qJD(5) * t394;
t364 = t176 * t254;
t109 = pkin(4) * t178 + pkin(10) * t176;
t53 = t254 * t109 + t257 * t78;
t378 = -qJ(6) * t364 + t254 * t308 + t330 - t53;
t363 = t176 * t257;
t52 = t257 * t109 - t254 * t78;
t377 = -pkin(5) * t178 - qJ(6) * t363 - t254 * qJD(6) + t257 * t308 - t52;
t374 = t117 * t254;
t373 = t117 * t257;
t372 = t119 * t117;
t370 = t119 * t254;
t369 = t119 * t257;
t368 = t124 * t196;
t367 = t124 * t255;
t366 = t128 * t256;
t365 = t173 * t178;
t362 = t178 * t176;
t190 = t347 * qJD(2);
t181 = qJD(1) * t190;
t361 = t181 * t256;
t360 = t188 * t240;
t359 = t190 * t256;
t358 = t249 * qJD(1) ^ 2;
t355 = t254 * t124;
t354 = t254 * t258;
t351 = t257 * t124;
t350 = t257 * t258;
t346 = -t259 ^ 2 + t250;
t341 = qJD(2) * t259;
t331 = t128 * qJD(4);
t304 = t399 * t357;
t329 = qJD(1) * t304 + t401;
t187 = pkin(8) * t321 - t236;
t328 = qJD(3) + t187;
t325 = t259 * t358;
t318 = t252 * t341;
t50 = -t254 * t88 + t257 * t97;
t306 = qJD(6) + t395;
t93 = t138 * t258 - t255 * t157;
t305 = t173 * t257;
t300 = pkin(1) * t412;
t295 = t22 * t257 + t254 * t26;
t294 = t22 * t254 - t257 * t26;
t293 = t254 * t33 + t257 * t32;
t292 = t254 * t32 - t257 * t33;
t291 = t181 * t253 + t190 * t240;
t290 = t249 * t256 * t311;
t237 = qJD(2) * t326;
t189 = -pkin(8) * t319 + t237;
t235 = pkin(2) * t319;
t130 = t235 + t266;
t56 = -t255 * t130 - t138 * t339 - t157 * t337 + t162 * t258;
t165 = -t240 * t320 + t231;
t289 = qJ(6) * t75 + t307;
t152 = t197 * t257 + t254 * t357;
t55 = t258 * t130 + t138 * t337 - t157 * t339 + t255 * t162;
t48 = pkin(10) * t318 + t55;
t247 = t253 * qJD(3);
t137 = -qJD(2) * t304 + t237 + t247;
t149 = qJD(4) * t196 - t255 * t319;
t150 = t253 * t337 - t255 * t317 - t258 * t319;
t73 = t150 * pkin(4) + t149 * pkin(10) + t137;
t11 = t254 * t73 + t257 * t48 + t97 * t333 - t334 * t88;
t286 = -t173 * t333 - t355;
t285 = -t173 * t334 + t351;
t283 = t258 * t296;
t281 = t296 * t119;
t280 = t296 * t252;
t279 = (-qJD(2) * t255 + t176) * t345;
t278 = qJD(2) * t252 * (t240 + t344);
t68 = -pkin(4) * t296 - t78;
t277 = -pkin(10) * t124 + t173 * t68;
t87 = -pkin(4) * t357 - t93;
t184 = (-pkin(2) * t259 + t310) * t252;
t271 = qJD(1) * t280;
t269 = (-qJ(3) * t341 - t340) * t252;
t49 = -pkin(4) * t318 - t56;
t12 = -qJD(5) * t51 - t254 * t48 + t257 * t73;
t265 = -qJD(5) * t293 - t254 * t8 - t257 * t307;
t264 = qJ(6) * t74 + t8;
t263 = -t256 * t271 - t402;
t262 = t258 * t231 + t255 * t263;
t246 = -pkin(5) * t257 - pkin(4);
t229 = t394 * t257;
t228 = t394 * t254;
t218 = t256 * t325;
t208 = -0.2e1 * t290;
t207 = 0.2e1 * t290;
t205 = (pkin(5) * t254 - t260) * t258;
t203 = t257 * t216;
t198 = -t242 + t326;
t195 = t346 * t358;
t186 = -qJ(3) * t320 + t238;
t185 = t253 * t322 + t242;
t179 = t346 * t412;
t174 = t203 - t324;
t172 = -t189 - t247;
t169 = t240 * t254 - t257 * t303;
t168 = t240 * t257 + t254 * t303;
t167 = qJD(1) * t184;
t164 = (qJD(2) - t240) * t321;
t163 = t235 + t269;
t158 = -t232 - t188;
t155 = t259 * t278;
t154 = t256 * t278;
t153 = -t240 * pkin(2) + t328;
t151 = t197 * t254 - t252 * t352;
t146 = -qJ(6) * t354 + t175;
t142 = qJD(1) * t269 + t224;
t135 = t167 * t321;
t131 = -qJ(6) * t350 + t255 * t309 + t203;
t116 = t117 ^ 2;
t86 = -t149 * t257 - t197 * t334 + (t254 * t341 + t256 * t333) * t252;
t85 = qJD(5) * t152 - t149 * t254 - t257 * t318;
t67 = t173 * t283 + t367;
t65 = pkin(5) * t151 + t87;
t64 = t150 * t173 + t368;
t63 = -pkin(5) * t364 + t79;
t61 = -t116 + t400;
t54 = t306 + t68;
t45 = t371 - t75;
t44 = -t74 + t375;
t39 = -qJ(6) * t151 + t51;
t36 = -t119 * t178 + t173 * t305 + t355;
t35 = -t173 ^ 2 * t254 + t117 * t178 + t351;
t30 = pkin(5) * t196 - qJ(6) * t152 + t50;
t29 = t173 * t374 - t382;
t28 = t119 * t305 - t383;
t27 = pkin(5) * t85 + t49;
t24 = t117 * t85 + t151 * t75;
t23 = t119 * t86 - t152 * t74;
t21 = t117 * t416 + t75 * t354;
t20 = -t74 * t350 + (-t254 * t332 + t298) * t119;
t18 = -t255 * t75 + t417 * t173 + (t286 - t405) * t258;
t17 = -t255 * t74 + t298 * t173 + (t281 + t285) * t258;
t16 = -t258 * t75 + (-t254 * t337 - t168) * t173 + (t286 + t405) * t255;
t15 = t258 * t74 + (-t257 * t337 + t169) * t173 + (t281 - t285) * t255;
t14 = t119 * t150 + t124 * t152 + t173 * t86 - t196 * t74;
t13 = -t117 * t150 - t124 * t151 - t173 * t85 - t196 * t75;
t10 = -t406 * t254 + t407 * t257;
t9 = -t117 * t86 - t119 * t85 + t151 * t74 - t152 * t75;
t6 = -qJ(6) * t85 - qJD(6) * t151 + t11;
t5 = t117 * t171 + t119 * t170 + (t370 + t373) * t339 + (t383 - t382 + (-t369 + t374) * qJD(5)) * t258;
t4 = t117 * t169 + t119 * t168 + (t370 - t373) * t337 + (-t383 - t382 + (t369 + t374) * qJD(5)) * t255;
t3 = pkin(5) * t150 - qJ(6) * t86 - qJD(6) * t152 + t12;
t2 = -qJD(6) * t117 - t289;
t1 = -qJD(6) * t119 + t264 + t396;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, t179, t155, t208, -t154, 0, t256 * t300 - t291, -t189 * t240 + t253 * t348 + t259 * t300 (-t348 * t259 + t361 + (t187 * t259 - t188 * t256) * qJD(2) + (t189 * t259 + t359 + (-t198 * t259 - t256 * t347) * qJD(2)) * qJD(1)) * t252, -t181 * t198 + t187 * t190 + t188 * t189 - t347 * t348, 0, -t155, t154, t207, t179, t208 (-t145 * t259 + t361 + (t153 * t259 + t158 * t256) * qJD(2) + (-t172 * t259 + t359 + (t183 * t256 + t185 * t259) * qJD(2)) * qJD(1)) * t252 (-t167 * t342 + t142 * t259 + (t163 * t259 - t184 * t342) * qJD(1)) * t252 + t291, -t145 * t253 - t172 * t240 + (-t167 * t341 - t142 * t256 + (-t163 * t256 - t184 * t341) * qJD(1)) * t252, t142 * t184 + t145 * t183 + t153 * t190 + t158 * t172 + t163 * t167 + t181 * t185, -t178 * t149 + t197 * t270, -t197 * t124 + t149 * t176 - t178 * t150 - t196 * t270, -t149 * qJD(4) + (-t349 * t256 + t178 * t341 + (-t149 * t256 + (t250 * t252 * t255 + t197 * t259) * qJD(2)) * qJD(1)) * t252, t150 * t176 + t368, -t150 * qJD(4) + (-t176 * t341 - t124 * t256 + (-t150 * t256 - t196 * t341) * qJD(1)) * t252 (t249 * t343 + t280) * t341, t56 * qJD(4) + t114 * t196 + t156 * t124 + t128 * t150 + t137 * t176 + (t78 * t341 + t42 * t256 + (t256 * t56 + t341 * t93) * qJD(1)) * t252, -t55 * qJD(4) + t137 * t178 - t156 * t349 + t114 * t197 - t128 * t149 + (-t79 * t341 + t273 * t256 + (-t256 * t55 + (t156 * t255 * t256 - t259 * t94) * qJD(2)) * qJD(1)) * t252, -t94 * t124 + t78 * t149 - t79 * t150 - t55 * t176 - t56 * t178 + t196 * t273 - t42 * t197 - t270 * t93, t114 * t156 + t128 * t137 - t273 * t94 + t42 * t93 + t55 * t79 + t56 * t78, t23, t9, t14, t24, t13, t64, t117 * t49 + t12 * t173 + t124 * t50 + t150 * t32 + t151 * t38 + t196 * t8 + t68 * t85 + t75 * t87, -t11 * t173 + t119 * t49 - t124 * t51 - t150 * t33 + t152 * t38 + t196 * t307 + t68 * t86 - t74 * t87, -t11 * t117 - t119 * t12 + t151 * t307 - t152 * t8 - t32 * t86 - t33 * t85 + t50 * t74 - t51 * t75, t11 * t33 + t12 * t32 - t307 * t51 + t38 * t87 + t49 * t68 + t50 * t8, t23, t9, t14, t24, t13, t64, t1 * t196 + t117 * t27 + t124 * t30 + t150 * t22 + t151 * t19 + t173 * t3 + t54 * t85 + t65 * t75, t119 * t27 - t124 * t39 - t150 * t26 + t152 * t19 - t173 * t6 - t196 * t2 + t54 * t86 - t65 * t74, -t1 * t152 - t117 * t6 - t119 * t3 - t151 * t2 - t22 * t86 - t26 * t85 + t30 * t74 - t39 * t75, t1 * t30 + t19 * t65 + t2 * t39 + t22 * t3 + t26 * t6 + t27 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, t195, t165, t218, -t164, 0, -pkin(8) * t231 + t360 + (-t253 * t327 + t358) * t398, pkin(1) * t325 - t187 * t240 + t348, 0, 0, 0, -t165, t164, -t218, t195, t218 ((-qJ(3) * qJD(2) - t158 - t188) * t256 + (-pkin(2) * qJD(2) - t153 + t328) * t259) * t345, -t360 + t135 + (-t186 * t356 + t190) * qJD(1), t328 * t240 + (t167 * t259 + t186 * t256) * t345 - t145, -t181 * pkin(2) - t145 * qJ(3) - t153 * t188 - t158 * t328 - t167 * t186, -t255 * t282 + t258 * t270 (-t124 - t282) * t258 + (t176 * qJD(4) + t256 * t279 + t349) * t255, -t178 * t320 + t262, t176 * t283 + t367, t258 * t263 + t259 * t279, -t259 * t271, qJ(3) * t124 - t98 * t296 - t78 * t320 + t413 * t255 + t329 * t176 + (t331 + (t260 * t341 + t366) * t345) * t258, -qJ(3) * t349 + t99 * t296 + t79 * t320 + t413 * t258 + t329 * t178 + (-t331 + (-t366 + (t376 - t403) * qJD(2)) * t345) * t255, t99 * t176 + t98 * t178 + (t78 * t321 - t260 * t124 + t273 + (t178 * t260 + t78) * qJD(4)) * t255 + (-t260 * t270 - t42 - t79 * t321 + (-t176 * t260 - t79) * qJD(4)) * t258, qJ(3) * t114 - t78 * t98 - t79 * t99 + t329 * t128 + (-t273 * t255 + t42 * t258 + (-t255 * t78 + t258 * t79) * qJD(4)) * t260, t20, t5, t17, t21, t18, t67, -t117 * t90 + t124 * t174 - t170 * t68 + t380 * t173 + (t8 + (t117 * t260 - t254 * t68) * qJD(4)) * t255 + (-t260 * t75 + t296 * t32 + t333 * t68 + t386) * t258, -t119 * t90 - t124 * t175 - t171 * t68 - t381 * t173 + (t307 + (t119 * t260 - t257 * t68) * qJD(4)) * t255 + (t260 * t74 - t296 * t33 - t334 * t68 + t385) * t258, t170 * t33 + t171 * t32 + t174 * t74 - t175 * t75 - t380 * t119 - t381 * t117 + t293 * t339 + (qJD(5) * t292 + t254 * t307 - t257 * t8) * t258, t174 * t8 - t175 * t307 - t68 * t90 + t381 * t33 + t380 * t32 + (-t258 * t38 + t339 * t68) * t260, t20, t5, t17, t21, t18, t67, t124 * t131 - t170 * t54 + t205 * t75 + (-qJD(4) * t254 * t54 + t1) * t255 - t392 * t173 + t379 * t117 + (t22 * t296 + t333 * t54 + t388) * t258, -t124 * t146 - t171 * t54 - t205 * t74 + (-t338 * t54 - t2) * t255 + t391 * t173 + t379 * t119 + (-t26 * t296 - t334 * t54 + t387) * t258, t131 * t74 - t146 * t75 + t170 * t26 + t171 * t22 + t392 * t119 + t391 * t117 + t295 * t339 + (qJD(5) * t294 - t1 * t257 - t2 * t254) * t258, t1 * t131 + t146 * t2 + t19 * t205 - t22 * t392 - t26 * t391 + t379 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, t218, -t240 ^ 2 - t250 * t358, t158 * t240 + t135 + t181, 0, 0, 0, 0, 0, 0, -t240 * t176 + t262, -t255 * t231 - t240 * t178 + (-t296 * t321 - t402) * t258 (t349 - t404) * t258 + (t178 * qJD(4) - t124 + (-qJD(2) * t258 + t178) * t321) * t255, -t128 * t240 + t255 * t415 + t410 * t258, 0, 0, 0, 0, 0, 0, t16, t15, t4, -t168 * t32 - t169 * t33 + (-qJD(4) * t292 - t38) * t258 + (t296 * t68 + t265) * t255, 0, 0, 0, 0, 0, 0, t16, t15, t4, -t168 * t22 - t169 * t26 + (-qJD(4) * t294 - t19) * t258 + (-qJD(5) * t295 - t1 * t254 + t2 * t257 + t296 * t54) * t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, -t176 ^ 2 + t178 ^ 2, t270 + t404, -t362, -t124 + t282, t231, -t128 * t178 + t410, t128 * t176 - t415, 0, 0, t28, t10, t36, t29, t35, -t365, -pkin(4) * t75 - t117 * t79 - t178 * t32 - t385 + (-pkin(10) * t333 - t52) * t173 + t277 * t254, pkin(4) * t74 - t119 * t79 + t178 * t33 + t386 + (pkin(10) * t334 + t53) * t173 + t277 * t257, t117 * t53 + t119 * t52 + ((-t75 + t335) * pkin(10) + t414) * t257 + ((qJD(5) * t117 - t74) * pkin(10) + t411) * t254, -pkin(4) * t38 + pkin(10) * t265 - t32 * t52 - t33 * t53 - t68 * t79, t28, t10, t36, t29, t35, -t365, -t117 * t63 + t124 * t228 - t178 * t22 - t387 + t246 * t75 + t377 * t173 + (t176 * t54 + (t54 + t395) * qJD(5)) * t254, t54 * t363 - t119 * t63 + t124 * t229 + t178 * t26 + t388 - t246 * t74 - t378 * t173 + (pkin(5) * t370 + t257 * t54) * qJD(5), t228 * t74 + t229 * t75 - t377 * t119 - t378 * t117 + (-t173 * t22 + t2) * t257 + (-t1 - t390) * t254, t1 * t228 + t19 * t246 - t2 * t229 + (pkin(5) * t334 - t63) * t54 + t378 * t26 + t377 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, t61, t44, -t372, t45, t124, -t68 * t119 - t411, t117 * t68 - t414, 0, 0, t372, t61, t44, -t372, t45, t124, 0.2e1 * t396 + t390 + (-t306 - t54) * t119 + t264, -pkin(5) * t400 + t173 * t25 + (qJD(6) + t54) * t117 + t289, t74 * pkin(5) - t117 * t393, t393 * t26 + (-t119 * t54 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t406, t407, -t116 - t400, t117 * t26 + t119 * t22 + t19;];
tauc_reg  = t7;
