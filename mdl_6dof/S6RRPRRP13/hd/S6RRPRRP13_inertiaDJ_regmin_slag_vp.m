% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRRP13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP13_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP13_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP13_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP13_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:01:33
% EndTime: 2019-03-09 13:01:40
% DurationCPUTime: 2.57s
% Computational Cost: add. (3062->317), mult. (7872->562), div. (0->0), fcn. (7149->8), ass. (0->169)
t104 = sin(pkin(6));
t111 = cos(qJ(2));
t179 = t104 * t111;
t108 = sin(qJ(2));
t105 = cos(pkin(6));
t194 = pkin(1) * t105;
t95 = t108 * t194;
t198 = pkin(8) * t179 + t95;
t106 = sin(qJ(5));
t100 = t106 ^ 2;
t109 = cos(qJ(5));
t102 = t109 ^ 2;
t174 = t100 - t102;
t135 = t174 * qJD(5);
t197 = 0.2e1 * t104;
t196 = 2 * qJD(3);
t112 = -pkin(2) - pkin(9);
t195 = pkin(3) + pkin(8);
t193 = -qJ(6) - pkin(10);
t180 = t104 * t108;
t107 = sin(qJ(4));
t110 = cos(qJ(4));
t149 = -pkin(1) * t111 - pkin(2);
t92 = pkin(8) * t180;
t40 = pkin(3) * t180 + t92 + (-pkin(9) + t149) * t105;
t184 = qJ(3) * t108;
t50 = (t111 * t112 - pkin(1) - t184) * t104;
t192 = t107 * t40 + t110 * t50;
t24 = pkin(10) * t180 + t192;
t60 = -qJ(3) * t105 - t198;
t49 = pkin(3) * t179 - t60;
t69 = t105 * t107 + t110 * t179;
t151 = t107 * t179;
t70 = t105 * t110 - t151;
t28 = pkin(4) * t69 - pkin(10) * t70 + t49;
t12 = t106 * t28 + t109 * t24;
t129 = pkin(4) * t107 - pkin(10) * t110;
t80 = qJ(3) + t129;
t177 = t107 * t112;
t90 = t109 * t177;
t56 = t106 * t80 + t90;
t47 = t106 * t70 - t109 * t180;
t191 = t106 * t47;
t48 = t106 * t180 + t109 * t70;
t190 = t106 * t48;
t170 = qJD(2) * t108;
t144 = t104 * t170;
t181 = qJD(4) * t69;
t45 = t107 * t144 - t181;
t169 = qJD(2) * t111;
t91 = t104 * t169;
t21 = qJD(5) * t48 + t45 * t106 - t109 * t91;
t189 = t109 * t21;
t188 = t109 * t47;
t187 = t109 * t48;
t162 = qJD(5) * t109;
t163 = qJD(5) * t106;
t22 = t45 * t109 - t70 * t163 + (t106 * t169 + t108 * t162) * t104;
t186 = t22 * t106;
t64 = t198 * qJD(2);
t185 = t64 * t105;
t183 = qJD(4) * t47;
t182 = qJD(4) * t48;
t178 = t106 * t112;
t176 = t109 * t110;
t175 = t110 * t112;
t173 = t100 + t102;
t101 = t107 ^ 2;
t103 = t110 ^ 2;
t172 = t101 - t103;
t171 = t101 + t103;
t168 = qJD(3) * t108;
t167 = qJD(4) * t107;
t166 = qJD(4) * t109;
t165 = qJD(4) * t110;
t164 = qJD(4) * t112;
t161 = qJD(5) * t110;
t160 = qJD(5) * t112;
t159 = t109 * qJD(6);
t158 = -0.2e1 * pkin(4) * qJD(5);
t130 = pkin(4) * t110 + pkin(10) * t107;
t117 = qJD(4) * t130 + qJD(3);
t140 = t109 * t165;
t157 = t106 * t117 + t112 * t140 + t162 * t80;
t156 = pkin(5) * t163;
t99 = t104 ^ 2;
t155 = t99 * t169;
t154 = t106 * t181;
t153 = t69 * t166;
t152 = t112 * t180;
t150 = t106 * t177;
t148 = t107 * t164;
t147 = t106 * t161;
t146 = t106 * t160;
t145 = t109 * t161;
t143 = t106 * t165;
t142 = t106 * t162;
t141 = t107 * t166;
t139 = t107 * t165;
t138 = pkin(5) - t178;
t11 = -t106 * t24 + t109 * t28;
t137 = -t107 * t50 + t110 * t40;
t136 = qJD(5) * t193;
t134 = t172 * qJD(4);
t133 = 0.2e1 * t139;
t132 = t112 * t91;
t131 = t106 * t141;
t6 = pkin(5) * t69 - qJ(6) * t48 + t11;
t7 = -qJ(6) * t47 + t12;
t128 = t106 * t7 + t109 * t6;
t127 = t106 * t6 - t109 * t7;
t126 = -pkin(2) * t111 - t184;
t77 = t109 * t80;
t37 = -qJ(6) * t176 + t107 * t138 + t77;
t43 = -qJ(6) * t106 * t110 + t56;
t125 = t106 * t43 + t109 * t37;
t124 = t106 * t37 - t109 * t43;
t123 = t188 + t190;
t88 = pkin(2) * t144;
t36 = t88 + (-t168 + (pkin(9) * t108 - qJ(3) * t111) * qJD(2)) * t104;
t51 = (t179 * t195 + t95) * qJD(2);
t14 = -t107 * t36 + t110 * t51 - t165 * t50 - t167 * t40;
t89 = t169 * t194;
t63 = pkin(8) * t144 - t89;
t10 = -pkin(4) * t91 - t14;
t23 = -pkin(4) * t180 - t137;
t122 = t10 * t106 + t162 * t23;
t121 = -t10 * t109 + t163 * t23;
t46 = -qJD(4) * t151 + t105 * t165 - t110 * t144;
t120 = t106 * t46 + t162 * t69;
t119 = -t109 * t46 + t163 * t69;
t97 = t105 * qJD(3);
t39 = -t144 * t195 + t89 + t97;
t114 = t46 * pkin(4) - t45 * pkin(10) + t39;
t13 = -t107 * t51 - t110 * t36 - t165 * t40 + t167 * t50;
t9 = pkin(10) * t91 - t13;
t3 = -t106 * t114 - t109 * t9 - t162 * t28 + t163 * t24;
t118 = t141 + t147;
t73 = t107 * t162 + t143;
t74 = t106 * t167 - t145;
t116 = -qJD(5) * t56 + t109 * t117;
t4 = -qJD(5) * t12 - t106 * t9 + t109 * t114;
t1 = t46 * pkin(5) - t22 * qJ(6) - t48 * qJD(6) + t4;
t2 = -qJ(6) * t21 - qJD(6) * t47 - t3;
t115 = -qJD(5) * t128 - t1 * t106 + t2 * t109;
t65 = t106 * t136 + t159;
t66 = -t106 * qJD(6) + t109 * t136;
t85 = t193 * t106;
t86 = t193 * t109;
t113 = -t66 * t106 + t65 * t109 + (t106 * t86 - t109 * t85) * qJD(5);
t96 = -pkin(5) * t109 - pkin(4);
t79 = 0.2e1 * t108 * t155;
t78 = (pkin(5) * t106 - t112) * t110;
t71 = t107 * t163 - t140;
t62 = t105 * t149 + t92;
t61 = (-pkin(1) + t126) * t104;
t58 = (-t108 * t167 + t110 * t169) * t104;
t57 = (-t107 * t169 - t108 * t165) * t104;
t55 = t77 - t150;
t54 = t63 - t97;
t53 = -pkin(5) * t74 + t148;
t52 = t88 + (-qJ(3) * t169 - t168) * t104;
t30 = -t112 * t143 + t116;
t29 = t107 * t146 - t157;
t19 = -qJ(6) * t145 + (-qJD(6) * t110 + (qJ(6) * qJD(4) - t160) * t107) * t106 + t157;
t18 = qJ(6) * t141 + (qJ(6) * t163 + qJD(4) * t138 - t159) * t110 + t116;
t15 = pkin(5) * t47 + t23;
t5 = pkin(5) * t21 + t10;
t8 = [0, 0, 0, t79, 0.2e1 * (-t108 ^ 2 + t111 ^ 2) * t99 * qJD(2), 0.2e1 * t105 * t91, -0.2e1 * t105 * t144, 0, -0.2e1 * pkin(1) * t170 * t99 - 0.2e1 * t185, -0.2e1 * pkin(1) * t155 + 0.2e1 * t105 * t63 (t108 * t64 - t111 * t54 + (t108 * t60 + t111 * t62) * qJD(2)) * t197, 0.2e1 * t185 + 0.2e1 * (t111 * t52 - t61 * t170) * t104, -0.2e1 * t54 * t105 + 0.2e1 * (-t108 * t52 - t169 * t61) * t104, 0.2e1 * t52 * t61 + 0.2e1 * t54 * t60 + 0.2e1 * t62 * t64, 0.2e1 * t70 * t45, -0.2e1 * t45 * t69 - 0.2e1 * t46 * t70 (t108 * t45 + t169 * t70) * t197 (-t108 * t46 - t169 * t69) * t197, t79, 0.2e1 * t39 * t69 + 0.2e1 * t49 * t46 + 0.2e1 * (t14 * t108 + t137 * t169) * t104, 0.2e1 * t39 * t70 + 0.2e1 * t49 * t45 + 0.2e1 * (t13 * t108 - t169 * t192) * t104, 0.2e1 * t48 * t22, -0.2e1 * t21 * t48 - 0.2e1 * t22 * t47, 0.2e1 * t22 * t69 + 0.2e1 * t46 * t48, -0.2e1 * t21 * t69 - 0.2e1 * t46 * t47, 0.2e1 * t69 * t46, 0.2e1 * t10 * t47 + 0.2e1 * t11 * t46 + 0.2e1 * t21 * t23 + 0.2e1 * t4 * t69, 0.2e1 * t10 * t48 - 0.2e1 * t12 * t46 + 0.2e1 * t22 * t23 + 0.2e1 * t3 * t69, -0.2e1 * t1 * t48 - 0.2e1 * t2 * t47 - 0.2e1 * t21 * t7 - 0.2e1 * t22 * t6, 0.2e1 * t1 * t6 + 0.2e1 * t15 * t5 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, t91, -t144, 0, -t64, t63 (qJD(2) * t126 + qJD(3) * t111) * t104, t64, -t63 + 0.2e1 * t97, -pkin(2) * t64 - qJ(3) * t54 - qJD(3) * t60, t110 * t45 - t167 * t70, -t45 * t107 - t110 * t46 + (t107 * t69 - t110 * t70) * qJD(4), t58, t57, 0, t110 * t132 + qJ(3) * t46 + qJD(3) * t69 + t39 * t107 + (-t107 * t152 + t110 * t49) * qJD(4), -t107 * t132 + qJ(3) * t45 + qJD(3) * t70 + t39 * t110 + (-t107 * t49 - t110 * t152) * qJD(4), -t48 * t147 + (t110 * t22 - t167 * t48) * t109, t123 * t167 + (-t186 - t189 + (-t187 + t191) * qJD(5)) * t110 (t22 - t153) * t107 + (-t119 + t182) * t110 (-t21 + t154) * t107 + (-t120 - t183) * t110, t107 * t46 + t165 * t69, t30 * t69 + t55 * t46 + (t4 + (-t106 * t23 + t112 * t47) * qJD(4)) * t107 + (qJD(4) * t11 - t112 * t21 + t122) * t110, t29 * t69 - t56 * t46 + (t3 + (-t109 * t23 + t112 * t48) * qJD(4)) * t107 + (-qJD(4) * t12 - t112 * t22 - t121) * t110, -t18 * t48 - t19 * t47 - t43 * t21 - t37 * t22 + t128 * t167 + (qJD(5) * t127 - t1 * t109 - t106 * t2) * t110, t1 * t37 + t15 * t53 + t18 * t6 + t19 * t7 + t2 * t43 + t5 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196, qJ(3) * t196, -0.2e1 * t139, 0.2e1 * t134, 0, 0, 0, 0.2e1 * qJ(3) * t165 + 0.2e1 * qJD(3) * t107, -0.2e1 * qJ(3) * t167 + 0.2e1 * qJD(3) * t110, -0.2e1 * t102 * t139 - 0.2e1 * t103 * t142, 0.2e1 * t103 * t135 + 0.4e1 * t110 * t131, -0.2e1 * t107 * t147 - 0.2e1 * t166 * t172, 0.2e1 * t106 * t134 - 0.2e1 * t107 * t145, t133, -0.2e1 * t103 * t109 * t160 + 0.2e1 * t30 * t107 + 0.2e1 * (t55 + 0.2e1 * t150) * t165, 0.2e1 * t103 * t146 + 0.2e1 * t29 * t107 + 0.2e1 * (-t56 + 0.2e1 * t90) * t165, 0.2e1 * t125 * t167 + 0.2e1 * (qJD(5) * t124 - t106 * t19 - t109 * t18) * t110, 0.2e1 * t18 * t37 + 0.2e1 * t19 * t43 + 0.2e1 * t53 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, 0, 0, t64, 0, 0, 0, 0, 0, t58, t57, 0, 0, 0, 0, 0 (-t21 - t154) * t110 + (-t120 + t183) * t107 (-t22 - t153) * t110 + (t119 + t182) * t107 (-t188 + t190) * t165 + (t186 - t189 + (t187 + t191) * qJD(5)) * t107 (-qJD(4) * t127 - t5) * t110 + (qJD(4) * t15 + t115) * t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171 * t162, t171 * t163, 0 (-qJD(4) * t124 - t53) * t110 + (qJD(4) * t78 - qJD(5) * t125 - t18 * t106 + t19 * t109) * t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t173) * t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t46, t91, t14, t13, t162 * t48 + t186, -qJD(5) * t123 - t106 * t21 + t22 * t109, t120, -t119, 0, -pkin(4) * t21 - pkin(10) * t120 + t121, -pkin(4) * t22 + pkin(10) * t119 + t122, t86 * t21 - t85 * t22 - t65 * t47 - t66 * t48 + t115, t1 * t85 + t15 * t156 - t2 * t86 + t5 * t96 + t6 * t66 + t65 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, -t165, 0, -t148, -t110 * t164, -t110 * t135 - t131, -0.4e1 * t110 * t142 + t167 * t174, t73, -t71, 0 (-t106 * t175 - t109 * t130) * qJD(5) + (t106 * t129 - t90) * qJD(4) (t106 * t130 - t109 * t175) * qJD(5) + (-pkin(10) * t176 + (pkin(4) * t109 + t178) * t107) * qJD(4) (t85 * t167 - t110 * t66 + t19 + (t110 * t86 - t37) * qJD(5)) * t109 + (-t86 * t167 - t110 * t65 - t18 + (t110 * t85 - t43) * qJD(5)) * t106, t156 * t78 + t18 * t85 - t19 * t86 + t37 * t66 + t43 * t65 + t53 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, -t165, 0, 0, 0, 0, 0, -t118, t74, t173 * t165 (-t156 + (-t106 * t85 - t109 * t86) * qJD(4)) * t110 + (qJD(4) * t96 + t113) * t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t142, -0.2e1 * t135, 0, 0, 0, t106 * t158, t109 * t158, 0.2e1 * t113, 0.2e1 * t156 * t96 - 0.2e1 * t65 * t86 + 0.2e1 * t66 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t21, t46, t4, t3, -pkin(5) * t22, t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, t74, t165, t30, t29, t118 * pkin(5), t18 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, t71, 0, -t73 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t163, 0, -pkin(10) * t162, pkin(10) * t163, -pkin(5) * t162, t66 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t8;
