% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRPRRP13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tauc_reg [6x30]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP13_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP13_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP13_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP13_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:01:33
% EndTime: 2019-03-09 13:01:46
% DurationCPUTime: 5.61s
% Computational Cost: add. (6091->486), mult. (15544->665), div. (0->0), fcn. (11400->8), ass. (0->243)
t198 = cos(qJ(2));
t191 = sin(pkin(6));
t195 = sin(qJ(2));
t287 = qJD(1) * t195;
t267 = t191 * t287;
t192 = cos(pkin(6));
t288 = qJD(1) * t192;
t273 = pkin(1) * t288;
t133 = pkin(8) * t267 - t198 * t273;
t275 = qJD(3) + t133;
t194 = sin(qJ(4));
t197 = cos(qJ(4));
t237 = pkin(4) * t197 + pkin(10) * t194;
t339 = qJD(4) * t237 - (-pkin(3) - t237) * t267 + t275;
t193 = sin(qJ(5));
t289 = qJD(1) * t191;
t196 = cos(qJ(5));
t295 = t195 * t196;
t122 = (t193 * t198 + t194 * t295) * t289;
t282 = qJD(4) * t194;
t235 = -t196 * t282 - t122;
t279 = qJD(5) * t193;
t338 = -t197 * t279 + t235;
t199 = -pkin(2) - pkin(9);
t231 = qJD(4) + t267;
t330 = qJD(4) * t231;
t180 = qJD(2) + t288;
t274 = qJD(1) * qJD(2);
t255 = t191 * t274;
t240 = t195 * t255;
t272 = pkin(1) * qJD(2) * t192;
t243 = qJD(1) * t272;
t292 = pkin(8) * t240 - t198 * t243;
t101 = -t180 * qJD(3) + t292;
t69 = -pkin(3) * t240 - t101;
t336 = -t199 * t330 + t69;
t266 = t198 * t289;
t127 = t180 * t197 - t194 * t266;
t218 = t196 * t231;
t72 = t127 * t193 - t218;
t335 = t231 * t72;
t334 = t339 * t196;
t217 = t127 * t231;
t333 = t198 * t199;
t153 = pkin(4) * t194 - pkin(10) * t197 + qJ(3);
t291 = t196 * t194 * t199 + t193 * t153;
t326 = pkin(1) * t195;
t185 = t192 * t326;
t297 = t191 * t198;
t332 = pkin(8) * t297 + t185;
t281 = qJD(4) * t197;
t260 = t196 * t281;
t278 = qJD(5) * t196;
t178 = pkin(2) * t267;
t232 = pkin(9) * t195 - qJ(3) * t198;
t113 = t232 * t289 + t178;
t134 = pkin(8) * t266 + t195 * t273;
t115 = pkin(3) * t266 + t134;
t293 = t197 * t113 + t194 * t115;
t51 = pkin(10) * t266 + t293;
t331 = -t153 * t278 - t339 * t193 + t196 * t51 - t199 * t260;
t276 = pkin(3) * t267 + t275;
t168 = t198 * t255;
t280 = qJD(4) * t198;
t259 = t197 * t280;
t285 = qJD(2) * t195;
t263 = t194 * t285;
t210 = -t259 + t263;
t207 = t210 * t191;
t261 = t180 * t282;
t204 = -qJD(1) * t207 + t261;
t74 = t196 * t127 + t193 * t231;
t35 = qJD(5) * t74 - t196 * t168 - t193 * t204;
t329 = t74 ^ 2;
t328 = pkin(3) + pkin(8);
t300 = t180 * t194;
t125 = t197 * t266 + t300;
t124 = qJD(5) + t125;
t65 = t199 * t180 + t276;
t303 = qJ(3) * t195;
t254 = -pkin(1) - t303;
t111 = (t254 + t333) * t191;
t90 = qJD(1) * t111;
t39 = t194 * t65 + t197 * t90;
t30 = pkin(10) * t231 + t39;
t169 = t180 * qJ(3);
t84 = t169 + t115;
t42 = pkin(4) * t125 - pkin(10) * t127 + t84;
t13 = -t193 * t30 + t196 * t42;
t9 = -qJ(6) * t74 + t13;
t8 = pkin(5) * t124 + t9;
t327 = t8 - t9;
t325 = pkin(5) * t193;
t324 = -qJ(6) - pkin(10);
t38 = -t194 * t90 + t197 * t65;
t64 = pkin(4) * t127 + pkin(10) * t125;
t323 = t193 * t64 + t196 * t38;
t241 = t197 * t267;
t296 = t193 * t199;
t253 = pkin(5) - t296;
t277 = qJD(6) * t196;
t322 = pkin(5) * t241 + t193 * t51 - t291 * qJD(5) + (qJD(4) * t253 - t277) * t197 + t334 - t338 * qJ(6);
t121 = t193 * t194 * t267 - t196 * t266;
t294 = t196 * t197;
t271 = qJ(6) * t294;
t321 = qJ(6) * t121 - qJD(5) * t271 + (-qJD(6) * t197 + (qJ(6) * qJD(4) - qJD(5) * t199) * t194) * t193 - t331;
t298 = t191 * t195;
t182 = pkin(8) * t298;
t268 = -pkin(1) * t198 - pkin(2);
t94 = pkin(3) * t298 + t182 + (-pkin(9) + t268) * t192;
t318 = t197 * t111 + t194 * t94;
t48 = pkin(10) * t298 + t318;
t129 = -t192 * qJ(3) - t332;
t110 = pkin(3) * t297 - t129;
t140 = t192 * t194 + t197 * t297;
t141 = t192 * t197 - t194 * t297;
t55 = pkin(4) * t140 - pkin(10) * t141 + t110;
t320 = t193 * t55 + t196 * t48;
t317 = t124 * t72;
t159 = pkin(2) * t240;
t283 = qJD(3) * t195;
t205 = (qJD(2) * t232 - t283) * t191;
t68 = qJD(1) * t205 + t159;
t128 = pkin(8) * t168 + t195 * t243;
t95 = pkin(3) * t168 + t128;
t248 = -t194 * t68 + t197 * t95 - t90 * t281 - t65 * t282;
t17 = -pkin(4) * t168 - t248;
t316 = t17 * t193;
t315 = t17 * t196;
t34 = -qJD(5) * t218 + t127 * t279 - t193 * t168 + t196 * t204;
t314 = t193 * t34;
t313 = t193 * t72;
t312 = t193 * t74;
t262 = t191 * t280;
t239 = qJD(1) * t262;
t79 = t180 * t281 - t194 * t239 - t197 * t240;
t311 = t193 * t79;
t310 = t196 * t35;
t309 = t196 * t72;
t308 = t196 * t74;
t307 = t196 * t79;
t306 = t74 * t124;
t249 = qJD(5) * t324;
t302 = qJ(6) * t193;
t305 = -t125 * t302 + t193 * t249 + t277 - t323;
t59 = t196 * t64;
t304 = -pkin(5) * t127 - t59 + (-qJ(6) * t125 + t249) * t196 + (-qJD(6) + t38) * t193;
t301 = t115 * t197;
t188 = t191 ^ 2;
t299 = t188 * qJD(1) ^ 2;
t189 = t195 ^ 2;
t290 = -t198 ^ 2 + t189;
t286 = qJD(2) * t194;
t284 = qJD(2) * t198;
t270 = t198 * t299;
t265 = t191 * t285;
t264 = t191 * t284;
t258 = t124 * t279;
t256 = t188 * t274;
t252 = -t199 + t325;
t251 = -t193 * t48 + t196 * t55;
t250 = -t194 * t111 + t197 * t94;
t247 = t124 * t196;
t246 = t180 + t288;
t245 = t125 - t286;
t244 = 0.2e1 * t256;
t242 = t195 * t270;
t238 = -0.2e1 * pkin(1) * t256;
t236 = t134 * t180 - t128;
t14 = t193 * t42 + t196 * t30;
t10 = -qJ(6) * t72 + t14;
t234 = t10 * t196 - t193 * t8;
t233 = t10 * t193 + t196 * t8;
t135 = t332 * qJD(2);
t230 = t128 * t192 + t135 * t180;
t116 = (t328 * t297 + t185) * qJD(2);
t173 = pkin(2) * t265;
t86 = t173 + t205;
t229 = -t111 * t281 + t116 * t197 - t194 * t86 - t94 * t282;
t99 = t194 * t113;
t228 = -pkin(4) * t266 + t99;
t177 = t198 * t272;
t227 = -pkin(8) * t265 + t177;
t226 = -t180 * t266 + t168;
t225 = -t124 * t278 - t311;
t224 = -t258 + t307;
t223 = -t141 * t193 + t191 * t295;
t108 = t141 * t196 + t193 * t298;
t222 = -t194 * t95 - t197 * t68 - t65 * t281 + t282 * t90;
t16 = pkin(10) * t168 - t222;
t28 = pkin(10) * t261 + t79 * pkin(4) + (-pkin(3) * t285 - pkin(10) * t210) * t289 - t101;
t5 = t196 * t16 + t193 * t28 + t42 * t278 - t279 * t30;
t213 = -t111 * t282 + t194 * t116 + t197 * t86 + t94 * t281;
t23 = pkin(10) * t264 + t213;
t105 = -qJD(4) * t140 + t191 * t263;
t106 = t192 * t281 - t194 * t262 - t197 * t265;
t186 = t192 * qJD(3);
t93 = -t328 * t265 + t177 + t186;
t33 = pkin(4) * t106 - pkin(10) * t105 + t93;
t221 = t193 * t33 + t196 * t23 + t55 * t278 - t279 * t48;
t220 = t231 * t74;
t29 = -pkin(4) * t231 - t38;
t219 = -pkin(10) * t79 + t124 * t29;
t216 = t231 * t191;
t215 = t231 * t197;
t47 = -pkin(4) * t298 - t250;
t130 = (-pkin(2) * t198 + t254) * t191;
t209 = qJD(1) * t216;
t208 = (-qJ(3) * t284 - t283) * t191;
t24 = -pkin(4) * t264 - t229;
t6 = -qJD(5) * t14 - t16 * t193 + t196 * t28;
t206 = -t320 * qJD(5) - t193 * t23 + t196 * t33;
t7 = pkin(5) * t35 + t17;
t203 = -t195 * t209 - t330;
t201 = t197 * t168 + t194 * t203;
t166 = t324 * t196;
t165 = t324 * t193;
t145 = t196 * t153;
t132 = -qJ(3) * t266 + t178;
t131 = t192 * t268 + t182;
t123 = -t186 - t227;
t120 = t180 * t193 - t196 * t241;
t119 = t180 * t196 + t193 * t241;
t118 = qJD(1) * t130;
t117 = t173 + t208;
t112 = -t169 - t134;
t109 = -pkin(2) * t180 + t275;
t102 = -t197 * t302 + t291;
t98 = qJD(1) * t208 + t159;
t91 = t118 * t267;
t87 = t194 * t253 + t145 - t271;
t71 = t72 ^ 2;
t50 = t228 - t301;
t46 = qJD(5) * t223 + t105 * t196 + t193 * t264;
t45 = qJD(5) * t108 + t105 * t193 - t196 * t264;
t25 = t72 * pkin(5) + qJD(6) + t29;
t18 = qJ(6) * t223 + t320;
t11 = pkin(5) * t140 - qJ(6) * t108 + t251;
t4 = -qJ(6) * t45 + qJD(6) * t223 + t221;
t3 = pkin(5) * t106 - qJ(6) * t46 - qJD(6) * t108 + t206;
t2 = -qJ(6) * t35 - qJD(6) * t72 + t5;
t1 = pkin(5) * t79 + qJ(6) * t34 - qJD(6) * t74 + t6;
t12 = [0, 0, 0, t195 * t198 * t244, -t290 * t244, t246 * t264, -t246 * t265, 0, t195 * t238 - t230, -t227 * t180 + t192 * t292 + t198 * t238 (-t101 * t198 + t128 * t195 + (t109 * t198 + t112 * t195) * qJD(2) + (-t123 * t198 + t135 * t195 + (t129 * t195 + t131 * t198) * qJD(2)) * qJD(1)) * t191 (-t118 * t285 + t198 * t98 + (t117 * t198 - t130 * t285) * qJD(1)) * t191 + t230, -t101 * t192 - t123 * t180 + (-t118 * t284 - t195 * t98 + (-t117 * t195 - t130 * t284) * qJD(1)) * t191, t101 * t129 + t109 * t135 + t112 * t123 + t117 * t118 + t128 * t131 + t130 * t98, t127 * t105 - t141 * t204, -t105 * t125 - t127 * t106 + t140 * t204 - t141 * t79, t105 * qJD(4) + ((t141 * qJD(1) + t127) * t284 + (-t261 + (t105 + t207) * qJD(1)) * t195) * t191, -t106 * qJD(4) + (-t125 * t284 - t79 * t195 + (-t106 * t195 - t140 * t284) * qJD(1)) * t191 (t188 * t287 + t216) * t284, t229 * t231 + t248 * t298 + t93 * t125 + t110 * t79 + t69 * t140 + t84 * t106 + (qJD(1) * t250 + t38) * t264, -t213 * t231 + t222 * t298 + t93 * t127 + t110 * (-t197 * t239 - t261) + t69 * t141 + t84 * t105 + (-t39 * t198 + (t110 * t194 * t195 - t198 * t318) * qJD(1)) * t191 * qJD(2), -t108 * t34 + t46 * t74, -t108 * t35 - t223 * t34 - t45 * t74 - t46 * t72, t106 * t74 + t108 * t79 + t124 * t46 - t140 * t34, -t106 * t72 - t124 * t45 - t140 * t35 + t223 * t79, t106 * t124 + t140 * t79, t13 * t106 + t124 * t206 + t6 * t140 - t17 * t223 + t24 * t72 + t251 * t79 + t29 * t45 + t47 * t35, -t14 * t106 + t17 * t108 - t124 * t221 - t5 * t140 + t24 * t74 + t29 * t46 - t320 * t79 - t47 * t34, -t1 * t108 - t10 * t45 + t11 * t34 - t18 * t35 + t2 * t223 - t3 * t74 - t4 * t72 - t46 * t8, t2 * t18 + t10 * t4 + t1 * t11 + t8 * t3 + t7 * (-pkin(5) * t223 + t47) + t25 * (pkin(5) * t45 + t24); 0, 0, 0, -t242, t290 * t299, t226 (-qJD(2) + t180) * t267, 0, t299 * t326 + t236, pkin(1) * t270 - t133 * t180 + t292 ((-qJ(3) * qJD(2) - t112 - t134) * t195 + (-pkin(2) * qJD(2) - t109 + t275) * t198) * t289, -t132 * t266 - t236 + t91, t275 * t180 + (t118 * t198 + t132 * t195) * t289 - t101, -pkin(2) * t128 - qJ(3) * t101 - t109 * t134 - t112 * t275 - t118 * t132, -t197 ^ 2 * t239 + ((-qJD(4) * t180 + t240) * t197 - t217) * t194 (-t79 - t217) * t197 + ((t125 + t300) * qJD(4) + (t195 * t245 + t259) * t289) * t194, -t127 * t266 + t201, t197 * t203 + t245 * t266, -t198 * t209, qJ(3) * t79 - (-t99 + t301) * t231 + t84 * t215 + (qJD(2) * t197 * t199 - t38) * t266 + t336 * t194 + t276 * t125, t293 * t231 + t39 * t266 + t276 * t127 + (-qJ(3) * t239 + t336) * t197 + ((-t84 - t169) * qJD(4) + (-t195 * t84 + (t303 - t333) * qJD(2)) * t289) * t194, -t34 * t294 + t338 * t74, t121 * t74 + t122 * t72 + (t309 + t312) * t282 + (t314 - t310 + (-t308 + t313) * qJD(5)) * t197, -t194 * t34 + t235 * t124 + (t220 + t224) * t197, -t194 * t35 + (t193 * t282 + t121) * t124 + (t225 - t335) * t197, t124 * t215 + t194 * t79, -t29 * t121 + t145 * t79 - t50 * t72 + ((-qJD(5) * t153 + t51) * t193 + t334) * t124 + (-t29 * t193 * qJD(4) + t6 + (qJD(4) * t72 + t225) * t199) * t194 + (t13 * t267 + t29 * t278 + t316 - t199 * t35 + (-t124 * t296 + t13) * qJD(4)) * t197, -t291 * t79 - t50 * t74 - t29 * t122 + t331 * t124 + (t199 * t258 - t5 + (-t29 * t196 + t199 * t74) * qJD(4)) * t194 + (-t14 * t231 + t199 * t34 - t279 * t29 + t315) * t197, t10 * t121 - t102 * t35 + t122 * t8 + t34 * t87 - t322 * t74 - t321 * t72 + t233 * t282 + (-qJD(5) * t234 - t1 * t196 - t193 * t2) * t197, t7 * t252 * t197 + t1 * t87 + t321 * t10 + t2 * t102 + t322 * t8 + (-pkin(5) * t121 - t228 - t252 * t282 + (pkin(5) * t278 + t115) * t197) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, t242, -t180 ^ 2 - t189 * t299, t112 * t180 + t128 + t91, 0, 0, 0, 0, 0, -t180 * t125 + t201, -t194 * t168 - t180 * t127 + (-t231 * t267 - t330) * t197, 0, 0, 0, 0, 0, -t197 * t35 + (-t193 * t281 - t119) * t124 + (t225 + t335) * t194, t197 * t34 + (t120 - t260) * t124 + (t220 - t224) * t194, t119 * t74 + t120 * t72 + (-t309 + t312) * t281 + (-t314 - t310 + (t308 + t313) * qJD(5)) * t194, -t10 * t120 - t119 * t8 + (qJD(4) * t234 - t7) * t197 + (-qJD(5) * t233 - t1 * t193 + t196 * t2 + t231 * t25) * t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127 * t125, -t125 ^ 2 + t127 ^ 2 (t125 - t300) * qJD(4) + (-t259 + (t125 + t286) * t195) * t289, -t79 + t217, t168, -t84 * t127 + t231 * t39 + t248, t84 * t125 + t231 * t38 + t222, t247 * t74 - t314 (-t34 - t317) * t196 + (-t35 - t306) * t193, t124 * t247 - t127 * t74 + t311, -t124 ^ 2 * t193 + t127 * t72 + t307, -t124 * t127, -pkin(4) * t35 - t13 * t127 - t315 - t39 * t72 + (-pkin(10) * t278 - t59) * t124 + (t38 * t124 + t219) * t193, pkin(4) * t34 + t14 * t127 + t316 - t39 * t74 + (pkin(10) * t279 + t323) * t124 + t219 * t196, t165 * t34 + t166 * t35 - t304 * t74 - t305 * t72 + (-t124 * t8 + t2) * t196 + (-t10 * t124 - t1) * t193, -t2 * t166 + t1 * t165 + t7 * (-pkin(5) * t196 - pkin(4)) + t304 * t8 + (t124 * t325 - t39) * t25 + t305 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74 * t72, -t71 + t329, -t34 + t317, t306 - t35, t79, t124 * t14 - t29 * t74 + t6, t124 * t13 + t29 * t72 - t5, pkin(5) * t34 - t327 * t72, t327 * t10 + (-t25 * t74 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71 - t329, t10 * t72 + t74 * t8 + t7;];
tauc_reg  = t12;
