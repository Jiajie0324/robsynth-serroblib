% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRPRRP13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tau_reg [6x30]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRP13_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP13_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP13_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP13_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP13_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP13_invdynJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:01:36
% EndTime: 2019-03-09 13:01:56
% DurationCPUTime: 8.71s
% Computational Cost: add. (7711->645), mult. (18518->839), div. (0->0), fcn. (14034->10), ass. (0->312)
t236 = cos(qJ(2));
t227 = sin(pkin(6));
t232 = sin(qJ(2));
t376 = qJD(1) * t232;
t344 = t227 * t376;
t228 = cos(pkin(6));
t377 = qJD(1) * t228;
t353 = pkin(1) * t377;
t383 = -pkin(8) * t344 + t236 * t353;
t360 = qJD(3) - t383;
t231 = sin(qJ(4));
t235 = cos(qJ(4));
t310 = pkin(4) * t235 + pkin(10) * t231;
t447 = qJD(4) * t310 - (-pkin(3) - t310) * t344 + t360;
t230 = sin(qJ(5));
t378 = qJD(1) * t227;
t234 = cos(qJ(5));
t390 = t232 * t234;
t132 = (t230 * t236 + t231 * t390) * t378;
t369 = qJD(4) * t231;
t303 = -t234 * t369 - t132;
t366 = qJD(5) * t230;
t446 = -t235 * t366 + t303;
t359 = qJD(1) * qJD(2);
t334 = t232 * t359;
t312 = t227 * t334;
t356 = qJDD(1) * t236;
t331 = t227 * t356;
t445 = t312 - t331;
t358 = qJDD(1) * t228;
t208 = qJDD(2) + t358;
t367 = qJD(4) * t236;
t339 = t227 * t367;
t290 = -qJD(1) * t339 + t208;
t333 = t236 * t359;
t357 = qJDD(1) * t232;
t266 = t333 + t357;
t254 = t266 * t227;
t248 = qJDD(4) + t254;
t394 = t227 * t236;
t348 = t231 * t394;
t160 = t228 * t235 - t348;
t286 = -t160 * t230 + t227 * t390;
t233 = sin(qJ(1));
t388 = t233 * t236;
t237 = cos(qJ(1));
t389 = t232 * t237;
t162 = t228 * t389 + t388;
t385 = t236 * t237;
t391 = t232 * t233;
t161 = -t228 * t385 + t391;
t393 = t227 * t237;
t285 = -t161 * t231 + t235 * t393;
t433 = t162 * t234 + t230 * t285;
t163 = t228 * t388 + t389;
t395 = t227 * t233;
t114 = t163 * t231 + t235 * t395;
t164 = -t228 * t391 + t385;
t70 = -t114 * t230 + t164 * t234;
t443 = -g(1) * t70 - g(2) * t433 - g(3) * t286;
t238 = -pkin(2) - pkin(9);
t396 = t227 * t232;
t354 = g(3) * t396;
t436 = -g(1) * t164 - g(2) * t162;
t255 = -t436 + t354;
t301 = qJD(4) + t344;
t435 = qJD(4) * t301;
t187 = t208 * qJ(3);
t210 = qJD(2) + t377;
t188 = t210 * qJD(3);
t352 = pkin(1) * qJD(2) * t228;
t317 = qJD(1) * t352;
t351 = pkin(1) * t358;
t315 = pkin(8) * t445 - t232 * t351 - t236 * t317;
t66 = -t187 - t188 + t315;
t260 = pkin(3) * t331 - t66;
t50 = -pkin(3) * t312 + t260;
t442 = -t238 * t435 - t255 + t50;
t224 = t227 ^ 2;
t355 = 0.2e1 * t224;
t426 = pkin(5) * t230;
t345 = pkin(9) + t426;
t375 = qJD(1) * t236;
t343 = t227 * t375;
t140 = t210 * t235 - t231 * t343;
t276 = t234 * t301;
t82 = t140 * t230 - t276;
t441 = t301 * t82;
t440 = t447 * t234;
t274 = t140 * t301;
t173 = pkin(4) * t231 - pkin(10) * t235 + qJ(3);
t382 = t234 * t231 * t238 + t230 * t173;
t336 = t235 * t367;
t373 = qJD(2) * t232;
t340 = t231 * t373;
t258 = -t336 + t340;
t386 = t235 * t208;
t278 = t210 * t369 - t386;
t330 = t231 * t356;
t439 = (qJD(1) * t258 - t330) * t227 - t278;
t256 = g(1) * t163 + g(2) * t161 - g(3) * t394;
t368 = qJD(4) * t235;
t337 = t234 * t368;
t365 = qJD(5) * t234;
t206 = pkin(2) * t344;
t403 = qJ(3) * t236;
t302 = pkin(9) * t232 - t403;
t123 = t302 * t378 + t206;
t202 = pkin(8) * t343;
t149 = t232 * t353 + t202;
t125 = pkin(3) * t343 + t149;
t384 = t235 * t123 + t231 * t125;
t58 = pkin(10) * t343 + t384;
t437 = -t173 * t365 - t230 * t447 + t234 * t58 - t238 * t337;
t361 = pkin(3) * t344 + t360;
t329 = -qJ(3) * t232 - pkin(1);
t293 = -pkin(2) * t236 + t329;
t128 = t293 * t378;
t434 = t128 * t344 + qJDD(3);
t84 = t234 * t140 + t230 * t301;
t30 = qJD(5) * t84 + t230 * t439 - t234 * t248;
t432 = -t162 * t230 + t234 * t285;
t370 = qJD(4) * t210;
t65 = t290 * t231 + (t370 - t445) * t235;
t431 = t84 ^ 2;
t430 = pkin(3) + pkin(8);
t428 = pkin(1) * t232;
t427 = pkin(2) * t208;
t423 = g(3) * t232;
t229 = -qJ(6) - pkin(10);
t80 = t210 * t238 + t361;
t264 = t236 * t238 + t329;
t97 = t264 * t378;
t39 = t231 * t80 + t235 * t97;
t32 = pkin(10) * t301 + t39;
t398 = t210 * t231;
t138 = t235 * t343 + t398;
t189 = t210 * qJ(3);
t93 = t189 + t125;
t42 = pkin(4) * t138 - pkin(10) * t140 + t93;
t19 = -t230 * t32 + t234 * t42;
t12 = -qJ(6) * t84 + t19;
t134 = qJD(5) + t138;
t11 = pkin(5) * t134 + t12;
t422 = -t12 + t11;
t38 = -t231 * t97 + t235 * t80;
t79 = pkin(4) * t140 + pkin(10) * t138;
t421 = t230 * t79 + t234 * t38;
t313 = t235 * t344;
t392 = t230 * t238;
t328 = pkin(5) - t392;
t363 = qJD(6) * t234;
t420 = pkin(5) * t313 + t230 * t58 - t382 * qJD(5) + (qJD(4) * t328 - t363) * t235 + t440 - t446 * qJ(6);
t131 = t230 * t231 * t344 - t234 * t343;
t387 = t234 * t235;
t350 = qJ(6) * t387;
t364 = qJD(5) * t238;
t419 = qJ(6) * t131 - qJD(5) * t350 + (-qJD(6) * t235 + (qJ(6) * qJD(4) - t364) * t231) * t230 - t437;
t212 = pkin(8) * t396;
t346 = -pkin(1) * t236 - pkin(2);
t101 = pkin(3) * t396 + t212 + (-pkin(9) + t346) * t228;
t381 = pkin(2) * t394 + qJ(3) * t396;
t121 = (-pkin(9) * t236 - pkin(1)) * t227 - t381;
t406 = t231 * t101 + t235 * t121;
t54 = pkin(10) * t396 + t406;
t218 = t228 * t428;
t380 = pkin(8) * t394 + t218;
t141 = -t228 * qJ(3) - t380;
t120 = pkin(3) * t394 - t141;
t159 = t228 * t231 + t235 * t394;
t62 = pkin(4) * t159 - pkin(10) * t160 + t120;
t418 = t230 * t62 + t234 * t54;
t416 = t134 * t82;
t29 = -qJD(5) * t276 + t140 * t366 - t230 * t248 - t234 * t439;
t415 = t230 * t29;
t64 = qJDD(5) + t65;
t414 = t230 * t64;
t413 = t230 * t82;
t412 = t230 * t84;
t411 = t234 * t30;
t410 = t234 * t64;
t409 = t234 * t82;
t408 = t234 * t84;
t407 = t84 * t134;
t325 = qJD(5) * t229;
t402 = qJ(6) * t230;
t405 = -t138 * t402 + t230 * t325 + t363 - t421;
t73 = t234 * t79;
t404 = -pkin(5) * t140 - t73 + (-qJ(6) * t138 + t325) * t234 + (-qJD(6) + t38) * t230;
t399 = t208 * t228;
t397 = t224 * qJD(1) ^ 2;
t225 = t232 ^ 2;
t379 = -t236 ^ 2 + t225;
t374 = qJD(2) * t231;
t372 = qJD(2) * t236;
t371 = qJD(3) * t232;
t362 = qJD(2) - t210;
t349 = t236 * t397;
t342 = t227 * t373;
t341 = t227 * t372;
t335 = g(3) * t381;
t332 = t227 * t357;
t327 = -t238 + t426;
t326 = -t230 * t54 + t234 * t62;
t314 = pkin(8) * t332 + qJD(2) * t202 + t232 * t317 - t236 * t351;
t296 = qJDD(3) + t314;
t45 = pkin(3) * t254 + t208 * t238 + t296;
t179 = pkin(2) * t312;
t249 = qJD(2) * t302 - t371;
t55 = t179 + (qJD(1) * t249 + qJDD(1) * t264) * t227;
t324 = t231 * t55 - t235 * t45 + t97 * t368 + t80 * t369;
t323 = t101 * t235 - t231 * t121;
t104 = t231 * t123;
t322 = t125 * t235 - t104;
t321 = t134 * t234;
t320 = t210 + t377;
t319 = 0.2e1 * t333;
t318 = t208 + t358;
t316 = t232 * t349;
t113 = -t163 * t235 + t231 * t395;
t284 = t161 * t235 + t231 * t393;
t309 = g(1) * t284 + g(2) * t113;
t307 = g(1) * t161 - g(2) * t163;
t305 = g(1) * t237 + g(2) * t233;
t20 = t230 * t42 + t234 * t32;
t13 = -qJ(6) * t82 + t20;
t300 = t11 * t234 + t13 * t230;
t299 = t11 * t230 - t13 * t234;
t220 = pkin(5) * t234 + pkin(4);
t298 = t220 * t231 + t229 * t235;
t126 = (t394 * t430 + t218) * qJD(2);
t201 = pkin(2) * t342;
t95 = t227 * t249 + t201;
t297 = -t101 * t369 - t121 * t368 + t126 * t235 - t231 * t95;
t142 = -pkin(1) * t227 - t381;
t295 = qJD(2) * (-qJD(1) * t142 - t128);
t205 = t236 * t352;
t294 = -pkin(8) * t342 + t205;
t291 = t237 * pkin(1) + t164 * pkin(2) + pkin(8) * t395 + qJ(3) * t163;
t16 = t278 * pkin(10) + t65 * pkin(4) + (pkin(10) * t330 + (-pkin(3) * t373 - pkin(10) * t258) * qJD(1)) * t227 + t260;
t282 = -t231 * t45 - t235 * t55 - t80 * t368 + t369 * t97;
t9 = pkin(10) * t248 - t282;
t289 = -t230 * t16 - t234 * t9 + t32 * t366 - t42 * t365;
t288 = -t134 * t365 - t414;
t287 = -t134 * t366 + t410;
t112 = t160 * t234 + t230 * t396;
t270 = t101 * t368 - t121 * t369 + t231 * t126 + t235 * t95;
t26 = pkin(10) * t341 + t270;
t221 = t228 * qJD(3);
t100 = -t342 * t430 + t205 + t221;
t109 = -qJD(4) * t159 + t227 * t340;
t110 = t228 * t368 - t231 * t339 - t235 * t342;
t35 = pkin(4) * t110 - pkin(10) * t109 + t100;
t281 = t230 * t35 + t234 * t26 + t62 * t365 - t366 * t54;
t280 = t301 * t84;
t31 = -pkin(4) * t301 - t38;
t279 = -pkin(10) * t64 + t134 * t31;
t275 = t235 * t301;
t273 = -qJ(3) * t372 - t371;
t127 = t227 * t273 + t201;
t67 = t179 + (qJD(1) * t273 + qJDD(1) * t293) * t227;
t272 = qJD(1) * t127 + qJDD(1) * t142 + t67;
t265 = t334 - t356;
t53 = -pkin(4) * t396 - t323;
t263 = g(1) * t113 - g(2) * t284 + g(3) * t159;
t262 = -g(1) * t114 + g(2) * t285 - g(3) * t160;
t261 = -pkin(1) * t233 - t162 * pkin(2) + pkin(8) * t393 - qJ(3) * t161;
t150 = t380 * qJD(2);
t259 = -g(1) * t162 + g(2) * t164 + t150 * t210;
t257 = t301 * t378;
t253 = t436 - t315;
t27 = -pkin(4) * t341 - t297;
t251 = t256 - t314;
t250 = (t362 * t375 + t357) * t227;
t4 = -qJD(5) * t20 + t234 * t16 - t230 * t9;
t247 = -qJD(5) * t418 - t230 * t26 + t234 * t35;
t10 = -pkin(4) * t248 + t324;
t246 = pkin(10) * qJD(5) * t134 + t10 - t263;
t245 = t134 * t364 + t255;
t137 = t235 * t248;
t244 = t149 * t210 + t251;
t242 = -t232 * t257 - t435;
t7 = t30 * pkin(5) + qJDD(6) + t10;
t241 = t231 * t242 + t137;
t186 = t229 * t234;
t185 = t229 * t230;
t168 = t234 * t173;
t153 = t163 * pkin(2);
t151 = t161 * pkin(2);
t147 = -qJ(3) * t343 + t206;
t143 = t228 * t346 + t212;
t133 = -t221 - t294;
t130 = t210 * t230 - t234 * t313;
t129 = t210 * t234 + t230 * t313;
t122 = -t189 - t149;
t119 = -pkin(2) * t210 + t360;
t106 = -t235 * t402 + t382;
t96 = t231 * t328 + t168 - t350;
t81 = t82 ^ 2;
t76 = t296 - t427;
t71 = t114 * t234 + t164 * t230;
t57 = -pkin(4) * t343 - t322;
t52 = qJD(5) * t286 + t109 * t234 + t230 * t341;
t51 = qJD(5) * t112 + t109 * t230 - t234 * t341;
t28 = t82 * pkin(5) + qJD(6) + t31;
t21 = qJ(6) * t286 + t418;
t17 = pkin(5) * t159 - qJ(6) * t112 + t326;
t6 = -qJ(6) * t51 + qJD(6) * t286 + t281;
t5 = pkin(5) * t110 - qJ(6) * t52 - qJD(6) * t112 + t247;
t2 = -qJ(6) * t30 - qJD(6) * t82 - t289;
t1 = pkin(5) * t64 + qJ(6) * t29 - qJD(6) * t84 + t4;
t3 = [qJDD(1), g(1) * t233 - g(2) * t237, t305 (qJDD(1) * t225 + t232 * t319) * t224 (t232 * t356 - t359 * t379) * t355 (t232 * t318 + t320 * t372) * t227 (t236 * t318 - t320 * t373) * t227, t399, -t212 * t208 - t314 * t228 + (t236 * t399 - t265 * t355) * pkin(1) - t259, -pkin(1) * t266 * t355 - t208 * t380 - t210 * t294 + t228 * t315 - t307 ((qJD(2) * t119 - qJDD(1) * t141 - t66 + (qJD(2) * t143 - t133) * qJD(1)) * t236 + (qJD(2) * t122 + qJDD(1) * t143 + t76 + (qJD(2) * t141 + t150) * qJD(1)) * t232 - t305) * t227, t143 * t208 + t228 * t76 + (t232 * t295 + t236 * t272) * t227 + t259, -t133 * t210 - t141 * t208 - t228 * t66 + (-t232 * t272 + t236 * t295) * t227 + t307, -g(1) * t261 - g(2) * t291 + t119 * t150 + t122 * t133 + t128 * t127 + t66 * t141 + t67 * t142 + t76 * t143, t140 * t109 + t160 * t439, -t109 * t138 - t140 * t110 - t159 * t439 - t160 * t65, t109 * qJD(4) + t160 * qJDD(4) + ((qJD(1) * t160 + t140) * t372 + ((t160 - t348) * qJDD(1) + (t227 * t258 + t109) * qJD(1) - t278) * t232) * t227, -t110 * qJD(4) - t159 * qJDD(4) + ((-qJD(1) * t159 - t138) * t372 + (-qJD(1) * t110 - qJDD(1) * t159 - t65) * t232) * t227 (qJD(2) * t367 + (qJDD(4) + (t319 + t357) * t227) * t232) * t227, -g(1) * t285 - g(2) * t114 + t100 * t138 + t93 * t110 + t120 * t65 + t50 * t159 + t248 * t323 + t297 * t301 - t324 * t396 + t341 * t38, -t270 * t301 + t406 * (-qJDD(4) - t332) + t282 * t396 + t100 * t140 + t120 * (t231 * t312 - t278) + t50 * t160 + t93 * t109 + (t120 * (-qJD(1) * t368 - qJDD(1) * t231) + (-qJD(1) * t406 - t39) * qJD(2)) * t394 + t309, -t112 * t29 + t52 * t84, -t112 * t30 - t286 * t29 - t51 * t84 - t52 * t82, t110 * t84 + t112 * t64 + t134 * t52 - t159 * t29, -t110 * t82 - t134 * t51 - t159 * t30 + t286 * t64, t110 * t134 + t159 * t64, -g(1) * t432 - g(2) * t71 - t10 * t286 + t19 * t110 + t247 * t134 + t4 * t159 + t27 * t82 + t53 * t30 + t31 * t51 + t326 * t64, g(1) * t433 - g(2) * t70 + t10 * t112 - t20 * t110 - t281 * t134 + t159 * t289 + t27 * t84 - t53 * t29 + t31 * t52 - t418 * t64, -t1 * t112 - t11 * t52 - t13 * t51 + t17 * t29 + t2 * t286 - t21 * t30 - t5 * t84 - t6 * t82 - t309, t2 * t21 + t13 * t6 + t1 * t17 + t11 * t5 + t7 * (-pkin(5) * t286 + t53) + t28 * (pkin(5) * t51 + t27) - g(1) * (pkin(3) * t393 - t162 * t345 + t220 * t285 - t229 * t284 + t261) - g(2) * (pkin(3) * t395 - t113 * t229 + t114 * t220 + t164 * t345 + t291); 0, 0, 0, -t316, t379 * t397, t250 (-t362 * t376 + t356) * t227, t208, t397 * t428 + t244, pkin(1) * t349 + t210 * t383 - t253 + t354 ((-pkin(2) * t232 + t403) * qJDD(1) + ((-qJ(3) * qJD(2) - t122 - t149) * t232 + (-pkin(2) * qJD(2) - t119 + t360) * t236) * qJD(1)) * t227, -t147 * t343 - t244 - 0.2e1 * t427 + t434, 0.2e1 * t187 + t188 + t360 * t210 + (-t423 + (t128 * t236 + t147 * t232) * qJD(1)) * t227 + t253, -t66 * qJ(3) - t76 * pkin(2) - t128 * t147 - t119 * t149 - g(1) * (qJ(3) * t164 - t153) - g(2) * (qJ(3) * t162 - t151) - t335 - t360 * t122, t290 * t235 ^ 2 + ((t227 * t265 - t370) * t235 - t274) * t231 (-t65 - t274) * t235 + (-t386 + (t138 + t398) * qJD(4) + (t330 + (t336 + (t138 - t374) * t232) * qJD(1)) * t227) * t231, -t140 * t343 + t241, -t231 * qJDD(4) + (t138 * t375 - t231 * t266) * t227 + t242 * t235, -t236 * t257, qJ(3) * t65 + t238 * t137 + t361 * t138 + t442 * t231 + t93 * t275 - t322 * t301 - t38 * t343, t384 * t301 + t39 * t343 + t361 * t140 + (-t238 * qJDD(4) + (-t93 - t189) * qJD(4) + (qJ(3) * t265 - t238 * t266 - t376 * t93) * t227) * t231 + (qJ(3) * t290 + t442) * t235, -t29 * t387 + t446 * t84, t131 * t84 + t132 * t82 + (t409 + t412) * t369 + (t415 - t411 + (-t408 + t413) * qJD(5)) * t235, -t231 * t29 + t303 * t134 + (t280 + t287) * t235, -t231 * t30 + (t230 * t369 + t131) * t134 + (t288 - t441) * t235, t134 * t275 + t231 * t64, -t31 * t131 + t168 * t64 - t57 * t82 + t440 * t134 + ((-qJD(5) * t173 + t58) * t134 + t256) * t230 + (-t64 * t392 + t4 + (-t230 * t31 + t238 * t82) * qJD(4) - t245 * t234) * t231 + (t19 * t344 + t31 * t365 + t10 * t230 - t238 * t30 + (-t134 * t392 + t19) * qJD(4)) * t235, -t382 * t64 - t57 * t84 - t31 * t132 + t437 * t134 + t256 * t234 + (t289 + (-t234 * t31 + t238 * t84) * qJD(4) + t245 * t230) * t231 + (t10 * t234 - t20 * t301 + t238 * t29 - t31 * t366) * t235, -t106 * t30 + t11 * t132 + t13 * t131 + t29 * t96 - t420 * t84 - t419 * t82 + t300 * t369 + (qJD(5) * t299 - t1 * t234 - t2 * t230 + t255) * t235, t2 * t106 + t1 * t96 - t28 * (pkin(5) * t131 + t104) - g(1) * (-t163 * t345 - t153) - g(2) * (-t161 * t345 - t151) - t335 - t28 * t327 * t369 + (t7 * t327 + (pkin(5) * t365 + t125) * t28) * t235 + t419 * t13 + t420 * t11 + (-t298 * t423 + (t28 * pkin(4) * qJD(1) - g(3) * t345) * t236) * t227 + t436 * (qJ(3) + t298); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, t208 + t316, -t210 ^ 2 - t225 * t397, t122 * t210 - t251 - t427 + t434, 0, 0, 0, 0, 0, -t210 * t138 + t241, -t231 * t248 - t210 * t140 + (-t301 * t344 - t435) * t235, 0, 0, 0, 0, 0, -t235 * t30 + (-t230 * t368 - t129) * t134 + (t288 + t441) * t231, t235 * t29 + (t130 - t337) * t134 + (t280 - t287) * t231, t129 * t84 + t130 * t82 + (-t409 + t412) * t368 + (-t415 - t411 + (t408 + t413) * qJD(5)) * t231, -t11 * t129 - t13 * t130 + (-qJD(4) * t299 - t7) * t235 + (-qJD(5) * t300 - t1 * t230 + t2 * t234 + t28 * t301) * t231 - t256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140 * t138, -t138 ^ 2 + t140 ^ 2, t386 + (t138 - t398) * qJD(4) + (-t330 + (-t336 + (t138 + t374) * t232) * qJD(1)) * t227, -t65 + t274, t248, -t93 * t140 + t301 * t39 + t263 - t324, t93 * t138 + t301 * t38 - t262 + t282, t321 * t84 - t415 (-t29 - t416) * t234 + (-t30 - t407) * t230, t134 * t321 - t140 * t84 + t414, -t134 ^ 2 * t230 + t140 * t82 + t410, -t134 * t140, -pkin(4) * t30 - t73 * t134 - t19 * t140 - t39 * t82 + (t38 * t134 + t279) * t230 - t246 * t234, pkin(4) * t29 + t134 * t421 + t20 * t140 + t230 * t246 + t234 * t279 - t39 * t84, t185 * t29 + t186 * t30 - t404 * t84 - t405 * t82 + (-t11 * t134 + t2) * t234 + (-t13 * t134 - t1) * t230 + t262, -t2 * t186 + t1 * t185 - t7 * t220 - g(1) * (-t113 * t220 - t114 * t229) - g(2) * (t220 * t284 + t229 * t285) - g(3) * (-t159 * t220 - t160 * t229) + (t134 * t426 - t39) * t28 + t405 * t13 + t404 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84 * t82, -t81 + t431, -t29 + t416, -t30 + t407, t64, t20 * t134 - t31 * t84 + t4 + t443, g(1) * t71 - g(2) * t432 + g(3) * t112 + t19 * t134 + t31 * t82 + t289, pkin(5) * t29 - t422 * t82, t422 * t13 + (-t28 * t84 + t1 + t443) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81 - t431, t11 * t84 + t13 * t82 - t263 + t7;];
tau_reg  = t3;
