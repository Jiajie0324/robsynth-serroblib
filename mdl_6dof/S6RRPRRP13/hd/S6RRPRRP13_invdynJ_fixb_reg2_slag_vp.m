% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRP13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRP13_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP13_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP13_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP13_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP13_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP13_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:01:41
% EndTime: 2019-03-09 13:02:05
% DurationCPUTime: 14.19s
% Computational Cost: add. (14968->850), mult. (36073->1061), div. (0->0), fcn. (27217->10), ass. (0->404)
t312 = cos(pkin(6));
t320 = cos(qJ(2));
t539 = pkin(1) * t320;
t445 = t312 * t539;
t285 = qJD(1) * t445;
t546 = qJD(3) - t285;
t315 = sin(qJ(4));
t319 = cos(qJ(4));
t398 = pkin(4) * t319 + pkin(10) * t315;
t316 = sin(qJ(2));
t311 = sin(pkin(6));
t468 = qJD(1) * t311;
t432 = t316 * t468;
t541 = pkin(3) + pkin(8);
t566 = -(-t398 - t541) * t432 + qJD(4) * t398 + t546;
t318 = cos(qJ(5));
t466 = qJD(1) * t320;
t431 = t311 * t466;
t314 = sin(qJ(5));
t484 = t314 * t315;
t193 = -t318 * t431 + t432 * t484;
t461 = qJD(4) * t315;
t565 = t314 * t461 + t193;
t449 = qJD(1) * qJD(2);
t422 = t316 * t449;
t401 = t311 * t422;
t446 = qJDD(1) * t320;
t420 = t311 * t446;
t561 = t401 - t420;
t317 = sin(qJ(1));
t475 = t317 * t320;
t321 = cos(qJ(1));
t476 = t316 * t321;
t236 = t312 * t476 + t475;
t473 = t320 * t321;
t478 = t316 * t317;
t238 = -t312 * t478 + t473;
t392 = -g(1) * t238 - g(2) * t236;
t488 = t311 * t316;
t444 = g(3) * t488;
t564 = t444 - t392;
t453 = qJD(5) * t319;
t424 = t318 * t453;
t563 = t424 - t565;
t477 = t316 * t318;
t481 = t314 * t320;
t206 = (t315 * t477 + t481) * t311;
t194 = qJD(1) * t206;
t460 = qJD(4) * t318;
t388 = -t315 * t460 - t194;
t467 = qJD(1) * t312;
t291 = qJD(2) + t467;
t322 = -pkin(2) - pkin(9);
t131 = t291 * t322 + t432 * t541 + t546;
t508 = qJ(3) * t316;
t419 = -pkin(1) - t508;
t549 = t320 * t322;
t351 = t419 + t549;
t153 = t351 * t468;
t459 = qJD(4) * t319;
t448 = qJDD(1) * t312;
t289 = qJDD(2) + t448;
t421 = t320 * t449;
t447 = qJDD(1) * t316;
t352 = t421 + t447;
t339 = t352 * t311;
t293 = pkin(8) * t488;
t443 = pkin(1) * qJD(2) * t312;
t406 = qJD(1) * t443;
t442 = pkin(1) * t448;
t142 = -t311 * pkin(8) * t421 - qJDD(1) * t293 - t316 * t406 + t320 * t442;
t380 = qJDD(3) - t142;
t85 = pkin(3) * t339 + t289 * t322 + t380;
t262 = pkin(2) * t401;
t507 = qJ(3) * t320;
t387 = pkin(9) * t316 - t507;
t462 = qJD(3) * t316;
t334 = qJD(2) * t387 - t462;
t95 = t262 + (qJD(1) * t334 + qJDD(1) * t351) * t311;
t359 = -t131 * t459 + t153 * t461 - t315 * t85 - t319 * t95;
t386 = qJD(4) + t432;
t78 = t319 * t131 - t315 * t153;
t562 = -t78 * t386 - t359;
t333 = qJDD(4) + t339;
t237 = t312 * t475 + t476;
t487 = t311 * t317;
t174 = -t237 * t319 + t315 * t487;
t486 = t311 * t320;
t233 = t312 * t315 + t319 * t486;
t235 = -t312 * t473 + t478;
t485 = t311 * t321;
t371 = t235 * t319 + t315 * t485;
t348 = g(1) * t174 - g(2) * t371 + g(3) * t233;
t175 = t237 * t315 + t319 * t487;
t118 = -t175 * t314 + t238 * t318;
t234 = t312 * t319 - t315 * t486;
t373 = -t234 * t314 + t311 * t477;
t372 = -t235 * t315 + t319 * t485;
t544 = t236 * t318 + t314 * t372;
t560 = -g(1) * t118 - g(2) * t544 - g(3) * t373;
t547 = qJD(4) * t386;
t271 = t289 * qJ(3);
t272 = t291 * qJD(3);
t405 = pkin(8) * t561 - t316 * t442 - t320 * t406;
t110 = -t271 - t272 + t405;
t90 = -pkin(3) * t561 - t110;
t559 = -t322 * t547 + t90;
t308 = t311 ^ 2;
t558 = 0.2e1 * t308;
t557 = g(3) * t311;
t29 = -t131 * t461 - t153 * t459 - t315 * t95 + t319 * t85;
t79 = t315 * t131 + t319 * t153;
t556 = t79 * t386 + t29;
t397 = pkin(4) * t315 - pkin(10) * t319;
t254 = qJ(3) + t397;
t479 = t315 * t322;
t198 = t314 * t254 + t318 * t479;
t287 = pkin(2) * t432;
t184 = t387 * t468 + t287;
t540 = pkin(1) * t316;
t302 = t312 * t540;
t471 = pkin(8) * t486 + t302;
t221 = t471 * qJD(1);
t186 = pkin(3) * t431 + t221;
t107 = t319 * t184 + t315 * t186;
t98 = pkin(10) * t431 + t107;
t555 = -qJD(5) * t198 + t314 * t98 + t318 * t566;
t457 = qJD(4) * t322;
t425 = t319 * t457;
t454 = qJD(5) * t318;
t554 = t254 * t454 + (t425 - t98) * t318 + t566 * t314;
t204 = t291 * t319 - t315 * t431;
t365 = t318 * t386;
t137 = t204 * t314 - t365;
t202 = t291 * t315 + t319 * t431;
t196 = qJD(5) + t202;
t504 = t137 * t196;
t458 = qJD(4) * t320;
t428 = t311 * t458;
t399 = qJD(1) * t428;
t436 = -t291 * t461 - t315 * t420 - t319 * t399;
t374 = t319 * t289 + t436;
t330 = t315 * t401 + t374;
t455 = qJD(5) * t314;
t63 = -qJD(5) * t365 + t204 * t455 - t314 * t333 - t318 * t330;
t553 = -t63 - t504;
t139 = t318 * t204 + t314 * t386;
t500 = t139 * t196;
t456 = qJD(5) * t139;
t64 = t314 * t330 - t318 * t333 + t456;
t552 = t64 + t500;
t211 = -t312 * qJ(3) - t471;
t181 = pkin(3) * t486 - t211;
t104 = pkin(4) * t233 - pkin(10) * t234 + t181;
t434 = -pkin(2) - t539;
t162 = pkin(3) * t488 + t293 + (-pkin(9) + t434) * t312;
t472 = pkin(2) * t486 + qJ(3) * t488;
t212 = -pkin(1) * t311 - t472;
t296 = pkin(9) * t486;
t182 = t212 - t296;
t101 = t315 * t162 + t319 * t182;
t94 = pkin(10) * t488 + t101;
t54 = t314 * t104 + t318 * t94;
t551 = t137 * t386;
t550 = t202 * t386;
t363 = t204 * t386;
t223 = t471 * qJD(2);
t377 = -pkin(2) * t320 + t419;
t190 = t377 * t468;
t545 = t190 * t432 + qJDD(3);
t543 = -t236 * t314 + t318 * t372;
t109 = (t289 - t399) * t315 + (qJD(4) * t291 - t561) * t319;
t542 = t139 ^ 2;
t538 = pkin(2) * t289;
t108 = qJDD(5) + t109;
t537 = pkin(5) * t108;
t536 = pkin(5) * t314;
t535 = pkin(9) * t235;
t534 = pkin(9) * t237;
t526 = t137 * pkin(5);
t313 = -qJ(6) - pkin(10);
t71 = pkin(10) * t386 + t79;
t273 = t291 * qJ(3);
t149 = t273 + t186;
t82 = pkin(4) * t202 - pkin(10) * t204 + t149;
t44 = -t314 * t71 + t318 * t82;
t32 = -qJ(6) * t139 + t44;
t27 = pkin(5) * t196 + t32;
t525 = -t32 + t27;
t404 = t319 * t432;
t417 = -t314 * t322 + pkin(5);
t452 = qJD(6) * t318;
t524 = pkin(5) * t404 + (qJD(4) * t417 - t452) * t319 + t555 + (t319 * t455 - t388) * qJ(6);
t523 = qJ(6) * t193 - qJ(6) * t424 + (-qJD(6) * t319 + (qJ(6) * qJD(4) - qJD(5) * t322) * t315) * t314 + t554;
t522 = qJ(6) * t63;
t521 = qJ(6) * t64;
t26 = -pkin(4) * t333 - t29;
t17 = t64 * pkin(5) + qJDD(6) + t26;
t520 = t17 * t314;
t45 = t314 * t82 + t318 * t71;
t33 = -qJ(6) * t137 + t45;
t519 = t196 * t33;
t518 = t196 * t44;
t517 = t196 * t45;
t516 = t26 * t314;
t515 = t314 * t63;
t514 = t318 * t64;
t440 = t314 * t479;
t513 = -qJD(5) * t440 + t554;
t512 = -t314 * t425 + t555;
t106 = -t315 * t184 + t186 * t319;
t97 = -pkin(4) * t431 - t106;
t511 = pkin(5) * t563 + t315 * t457 - t97;
t414 = qJD(5) * t313;
t496 = t202 * t314;
t130 = pkin(4) * t204 + pkin(10) * t202;
t56 = t314 * t130 + t318 * t78;
t510 = -qJ(6) * t496 + t314 * t414 + t452 - t56;
t495 = t202 * t318;
t55 = t318 * t130 - t314 * t78;
t509 = -pkin(5) * t204 - qJ(6) * t495 - qJD(6) * t314 + t318 * t414 - t55;
t506 = t108 * t314;
t505 = t108 * t318;
t503 = t137 * t314;
t502 = t137 * t318;
t501 = t139 * t137;
t499 = t139 * t314;
t498 = t139 * t318;
t497 = t196 * t204;
t494 = t204 * t202;
t493 = t235 * t314;
t490 = t237 * t314;
t489 = t308 * qJD(1) ^ 2;
t483 = t314 * t316;
t482 = t314 * t319;
t480 = t315 * t318;
t474 = t318 * t319;
t470 = t321 * pkin(1) + pkin(8) * t487;
t309 = t316 ^ 2;
t310 = t320 ^ 2;
t469 = t309 - t310;
t465 = qJD(2) * t315;
t464 = qJD(2) * t319;
t463 = qJD(2) * t320;
t407 = t541 * t488;
t451 = qJD(1) * t407 + t546;
t220 = pkin(8) * t432 - t285;
t450 = qJD(3) + t220;
t441 = t320 * t489;
t439 = t348 * t314;
t438 = t564 * t319;
t435 = t296 + t472;
t433 = pkin(9) + t536;
t430 = qJD(2) * t488;
t429 = t311 * t463;
t423 = pkin(1) * t558;
t418 = -pkin(1) * t317 + pkin(8) * t485;
t224 = t235 * pkin(2);
t416 = -t224 - t535;
t226 = t237 * pkin(2);
t415 = -t226 - t534;
t25 = pkin(10) * t333 - t359;
t39 = t109 * pkin(4) - pkin(10) * t330 + t90;
t3 = t318 * t25 + t314 * t39 + t82 * t454 - t71 * t455;
t413 = qJD(6) + t526;
t53 = t318 * t104 - t314 * t94;
t412 = qJ(3) * t236 - t224;
t411 = qJ(3) * t238 - t226;
t100 = t162 * t319 - t315 * t182;
t410 = t196 * t318;
t409 = qJD(1) * (qJD(2) - t291);
t408 = t289 + t448;
t403 = t315 * t430;
t402 = g(3) * t435;
t400 = t316 * t421;
t396 = g(1) * t544 - g(2) * t118;
t119 = t175 * t318 + t238 * t314;
t395 = -g(1) * t543 - g(2) * t119;
t394 = g(1) * t371 + g(2) * t174;
t393 = -g(1) * t235 + g(2) * t237;
t391 = g(1) * t236 - g(2) * t238;
t390 = g(1) * t321 + g(2) * t317;
t385 = t27 * t318 + t314 * t33;
t384 = t27 * t314 - t318 * t33;
t383 = t314 * t45 + t318 * t44;
t382 = t314 * t44 - t318 * t45;
t304 = pkin(5) * t318 + pkin(4);
t381 = t304 * t315 + t313 * t319;
t379 = qJD(2) * (-qJD(1) * t212 - t190);
t378 = qJD(2) * (t291 + t467);
t286 = t320 * t443;
t222 = -pkin(8) * t430 + t286;
t376 = g(1) * t237 + g(2) * t235 - g(3) * t486;
t375 = t238 * pkin(2) + qJ(3) * t237 + t470;
t284 = pkin(2) * t430;
t151 = t311 * t334 + t284;
t187 = (t486 * t541 + t302) * qJD(2);
t59 = -t315 * t151 - t162 * t461 - t182 * t459 + t187 * t319;
t173 = t234 * t318 + t311 * t483;
t58 = t319 * t151 + t162 * t459 - t182 * t461 + t315 * t187;
t51 = pkin(10) * t429 + t58;
t305 = t312 * qJD(3);
t161 = -qJD(2) * t407 + t286 + t305;
t170 = qJD(4) * t233 - t403;
t171 = t312 * t459 - t315 * t428 - t319 * t430;
t75 = pkin(4) * t171 + pkin(10) * t170 + t161;
t18 = t104 * t454 + t314 * t75 + t318 * t51 - t455 * t94;
t367 = -t196 * t454 - t506;
t366 = -t196 * t455 + t505;
t364 = t319 * t386;
t362 = t386 * t139;
t70 = -pkin(4) * t386 - t78;
t361 = -pkin(10) * t108 + t196 * t70;
t360 = -qJ(3) * t463 - t462;
t111 = t262 + (qJD(1) * t360 + qJDD(1) * t377) * t311;
t188 = t311 * t360 + t284;
t354 = qJD(1) * t188 + qJDD(1) * t212 + t111;
t353 = pkin(3) * t487 + t375;
t93 = -pkin(4) * t488 - t100;
t350 = -g(1) * (-t237 * t318 - t238 * t484) - g(2) * (-t235 * t318 - t236 * t484) - (-t315 * t483 + t318 * t320) * t557;
t349 = -g(1) * (t238 * t480 - t490) - g(2) * (t236 * t480 - t493) - g(3) * t206;
t347 = -g(1) * t175 + g(2) * t372 - g(3) * t234;
t346 = -t236 * pkin(2) - qJ(3) * t235 + t418;
t345 = t223 * t291 - t391;
t343 = t386 * t468;
t342 = -t17 + t348;
t341 = -t26 + t348;
t340 = pkin(3) * t485 + t346;
t338 = t392 - t405;
t337 = pkin(9) * t238 + t353;
t335 = t376 + t142;
t157 = (t320 * t409 + t447) * t311;
t52 = -pkin(4) * t429 - t59;
t332 = -pkin(9) * t236 + t340;
t331 = g(1) * t119 - g(2) * t543 + g(3) * t173 - t3;
t4 = -qJD(5) * t45 - t25 * t314 + t318 * t39;
t19 = -qJD(5) * t54 - t314 * t51 + t318 * t75;
t329 = -qJD(5) * t383 + t3 * t318 - t4 * t314;
t328 = t221 * t291 + t335;
t326 = -t316 * t343 - t547;
t325 = t4 + t560;
t324 = t315 * t326 + t319 * t333;
t270 = t313 * t318;
t269 = t313 * t314;
t256 = t316 * t441;
t252 = t289 * t312;
t246 = (-t322 + t536) * t319;
t244 = t318 * t254;
t239 = -t293 + t445;
t232 = t469 * t489;
t219 = -qJ(3) * t431 + t287;
t215 = t312 * t434 + t293;
t209 = (qJDD(1) * t310 - 0.2e1 * t400) * t308;
t208 = (qJDD(1) * t309 + 0.2e1 * t400) * t308;
t197 = t244 - t440;
t195 = -t222 - t305;
t192 = t291 * t314 - t318 * t404;
t191 = t291 * t318 + t314 * t404;
t183 = -t273 - t221;
t180 = -pkin(2) * t291 + t450;
t167 = -qJ(6) * t482 + t198;
t158 = (t316 * t446 - t449 * t469) * t558;
t156 = (t316 * t409 - t446) * t311;
t152 = -qJ(6) * t474 + t315 * t417 + t244;
t136 = t137 ^ 2;
t128 = t380 - t538;
t113 = (t316 * t408 + t320 * t378) * t311;
t112 = (t316 * t378 - t320 * t408) * t311;
t92 = -t170 * t318 - t234 * t455 + (t314 * t463 + t316 * t454) * t311;
t91 = qJD(5) * t173 - t170 * t314 - t318 * t429;
t68 = -pkin(5) * t373 + t93;
t67 = -pkin(5) * t496 + t79;
t66 = -t136 + t542;
t65 = t108 * t315 + t196 * t364;
t60 = t108 * t233 + t171 * t196;
t57 = t413 + t70;
t46 = qJ(6) * t373 + t54;
t43 = t500 - t64;
t42 = -t63 + t504;
t40 = pkin(5) * t233 - qJ(6) * t173 + t53;
t36 = -t139 * t204 + t196 * t410 + t506;
t35 = -t196 ^ 2 * t314 + t137 * t204 + t505;
t34 = pkin(5) * t91 + t52;
t31 = t196 * t503 - t514;
t30 = t139 * t410 - t515;
t23 = t137 * t91 - t373 * t64;
t22 = t139 * t92 - t173 * t63;
t21 = t137 * t563 + t64 * t482;
t20 = -t63 * t474 + (-t314 * t453 + t388) * t139;
t16 = -t315 * t64 + t565 * t196 + (t367 - t551) * t319;
t15 = -t315 * t63 + t388 * t196 + (t362 + t366) * t319;
t14 = -t319 * t64 + (-t314 * t459 - t191) * t196 + (t367 + t551) * t315;
t13 = t319 * t63 + (-t318 * t459 + t192) * t196 + (t362 - t366) * t315;
t12 = t108 * t173 + t139 * t171 + t196 * t92 - t233 * t63;
t11 = t108 * t373 - t137 * t171 - t196 * t91 - t233 * t64;
t10 = -t314 * t552 + t318 * t553;
t9 = -qJ(6) * t91 + qJD(6) * t373 + t18;
t8 = pkin(5) * t171 - qJ(6) * t92 - qJD(6) * t173 + t19;
t7 = -t137 * t92 - t139 * t91 - t173 * t64 - t373 * t63;
t6 = t137 * t194 + t139 * t193 + (t499 + t502) * t461 + (t515 - t514 + (-t498 + t503) * qJD(5)) * t319;
t5 = t137 * t192 + t139 * t191 + (t499 - t502) * t459 + (-t515 - t514 + (t498 + t503) * qJD(5)) * t315;
t2 = -qJD(6) * t137 + t3 - t521;
t1 = -qJD(6) * t139 + t4 + t522 + t537;
t24 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t317 - g(2) * t321, t390, 0, 0, t208, t158, t113, t209, -t112, t252, t142 * t312 + t239 * t289 + (-t422 + t446) * t423 - t345, -t222 * t291 - t289 * t471 + t312 * t405 - t352 * t423 + t393 ((qJD(2) * t220 + qJDD(1) * t471 - t405 + (-qJD(2) * t239 + t222) * qJD(1)) * t320 + (-qJD(2) * t221 - qJDD(1) * t239 - t142) * t316 - t390) * t311, t308 * qJDD(1) * pkin(1) ^ 2 - g(1) * t418 - g(2) * t470 + t142 * t239 + t220 * t223 + t221 * t222 - t405 * t471, t252, -t113, t112, t208, t158, t209 ((qJD(2) * t180 - qJDD(1) * t211 - t110 + (qJD(2) * t215 - t195) * qJD(1)) * t320 + (qJD(2) * t183 + qJDD(1) * t215 + t128 + (qJD(2) * t211 + t223) * qJD(1)) * t316 - t390) * t311, t128 * t312 + t215 * t289 + (t316 * t379 + t320 * t354) * t311 + t345, -t110 * t312 - t195 * t291 - t211 * t289 + (-t316 * t354 + t320 * t379) * t311 - t393, -g(1) * t346 - g(2) * t375 + t110 * t211 + t111 * t212 + t128 * t215 + t180 * t223 + t183 * t195 + t190 * t188, -t204 * t170 + t234 * t330, -t234 * t109 + t170 * t202 - t204 * t171 - t233 * t330, -t170 * qJD(4) + t234 * qJDD(4) + ((qJD(1) * t234 + t204) * t463 + (t234 * qJDD(1) + (-t170 + t403) * qJD(1) + t374) * t316) * t311, t109 * t233 + t171 * t202, -t171 * qJD(4) - t233 * qJDD(4) + ((-qJD(1) * t233 - t202) * t463 + (-qJD(1) * t171 - qJDD(1) * t233 - t109) * t316) * t311 (qJD(2) * t458 + (qJDD(4) + (0.2e1 * t421 + t447) * t311) * t316) * t311, -g(1) * t372 - g(2) * t175 + t59 * qJD(4) + t100 * qJDD(4) + t181 * t109 + t149 * t171 + t161 * t202 + t90 * t233 + ((qJD(1) * t100 + t78) * t463 + (qJD(1) * t59 + qJDD(1) * t100 + t29) * t316) * t311, -t58 * qJD(4) - t101 * qJDD(4) + t161 * t204 + t181 * t374 + t90 * t234 - t149 * t170 + ((-qJD(1) * t101 - t79) * t463 + (-t101 * qJDD(1) + t359 + (t181 * t465 - t58) * qJD(1)) * t316) * t311 + t394, -t100 * t330 - t101 * t109 + t78 * t170 - t79 * t171 - t58 * t202 - t59 * t204 + t233 * t359 - t29 * t234 + t391, -g(1) * t332 - g(2) * t337 + t29 * t100 - t101 * t359 + t149 * t161 + t90 * t181 + t79 * t58 + t78 * t59, t22, t7, t12, t23, t11, t60, t108 * t53 + t137 * t52 + t171 * t44 + t19 * t196 + t233 * t4 - t26 * t373 + t64 * t93 + t70 * t91 + t395, -t108 * t54 + t139 * t52 - t171 * t45 + t173 * t26 - t18 * t196 - t233 * t3 - t63 * t93 + t70 * t92 + t396, -t137 * t18 - t139 * t19 - t173 * t4 + t3 * t373 - t44 * t92 - t45 * t91 + t53 * t63 - t54 * t64 - t394, t3 * t54 + t45 * t18 + t4 * t53 + t44 * t19 + t26 * t93 + t70 * t52 - g(1) * (pkin(4) * t372 + pkin(10) * t371 + t332) - g(2) * (pkin(4) * t175 + pkin(10) * t174 + t337) t22, t7, t12, t23, t11, t60, t1 * t233 + t108 * t40 + t137 * t34 - t17 * t373 + t171 * t27 + t196 * t8 + t57 * t91 + t64 * t68 + t395, -t108 * t46 + t139 * t34 + t17 * t173 - t171 * t33 - t196 * t9 - t2 * t233 + t57 * t92 - t63 * t68 + t396, -t1 * t173 - t137 * t9 - t139 * t8 + t2 * t373 - t27 * t92 - t33 * t91 + t40 * t63 - t46 * t64 - t394, t2 * t46 + t33 * t9 + t1 * t40 + t27 * t8 + t17 * t68 + t57 * t34 - g(1) * (-t236 * t433 + t304 * t372 - t313 * t371 + t340) - g(2) * (-t174 * t313 + t175 * t304 + t238 * t433 + t353); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t256, t232, t157, t256, -t156, t289, t489 * t540 + t328, pkin(1) * t441 - t220 * t291 - t338 + t444, 0, 0, t289, -t157, t156, -t256, t232, t256 ((-pkin(2) * t316 + t507) * qJDD(1) + ((-qJ(3) * qJD(2) - t183 - t221) * t316 + (-pkin(2) * qJD(2) - t180 + t450) * t320) * qJD(1)) * t311, -t219 * t431 - t328 - 0.2e1 * t538 + t545, 0.2e1 * t271 + t272 + t450 * t291 + (-g(3) * t316 + (t190 * t320 + t219 * t316) * qJD(1)) * t311 + t338, -t128 * pkin(2) - g(1) * t411 - g(2) * t412 - g(3) * t472 - t110 * qJ(3) - t180 * t221 - t183 * t450 - t190 * t219, -t315 * t363 + t319 * t330 (-t109 - t363) * t319 + (t202 * qJD(4) + (t202 - t465) * t432 - t374) * t315, -t204 * t431 + t324, t109 * t315 + t202 * t364, -t315 * qJDD(4) + (t202 * t466 - t315 * t352) * t311 + t326 * t319, -t320 * t343, qJ(3) * t109 - t106 * t386 - t78 * t431 + t451 * t202 + (t149 * t386 + t322 * t333) * t319 + (t559 - t564) * t315, qJ(3) * t436 + t107 * t386 + t79 * t431 + (t271 + t559) * t319 + t451 * t204 + (-t149 * qJD(4) - t322 * qJDD(4) + (-t322 * t447 + (-t149 * t316 + (t508 - t549) * qJD(2)) * qJD(1)) * t311) * t315 - t438, t106 * t204 + t107 * t202 + (-t322 * t374 - t432 * t79 - t29) * t319 + (-t322 * t109 + t359 + (-t322 * t464 + t78) * t432) * t315 + ((-t202 * t322 - t79) * t319 + (t204 * t322 + t78) * t315) * qJD(4) + t376, t90 * qJ(3) - t79 * t107 - t78 * t106 - g(1) * (t411 - t534) - g(2) * (t412 - t535) - t402 + t451 * t149 + (-t359 * t315 + t29 * t319 + (-t315 * t78 + t319 * t79) * qJD(4)) * t322, t20, t6, t15, t21, t16, t65, t108 * t197 - t137 * t97 - t193 * t70 + t512 * t196 + (t4 + (t137 * t322 - t314 * t70) * qJD(4)) * t315 + (-t322 * t64 + t386 * t44 + t454 * t70 + t516) * t319 + t349, -t108 * t198 - t139 * t97 - t194 * t70 - t513 * t196 + (-t3 + (t139 * t322 - t318 * t70) * qJD(4)) * t315 + (t26 * t318 + t322 * t63 - t386 * t45 - t455 * t70) * t319 + t350, t193 * t45 + t194 * t44 + t197 * t63 - t198 * t64 - t512 * t139 - t513 * t137 + t383 * t461 + (qJD(5) * t382 - t3 * t314 - t318 * t4) * t319 + t438, t3 * t198 + t4 * t197 - t70 * t97 - g(1) * t415 - g(2) * t416 - g(3) * (t397 * t488 + t435) + t513 * t45 + t512 * t44 + (-t26 * t319 + t461 * t70) * t322 + t392 * t254, t20, t6, t15, t21, t16, t65, t108 * t152 - t193 * t57 + t246 * t64 + (-qJD(4) * t314 * t57 + t1) * t315 + t524 * t196 + t511 * t137 + (t27 * t386 + t454 * t57 + t520) * t319 + t349, -t108 * t167 - t194 * t57 - t246 * t63 + (-t460 * t57 - t2) * t315 - t523 * t196 + t511 * t139 + (t17 * t318 - t33 * t386 - t455 * t57) * t319 + t350, t152 * t63 - t167 * t64 + t193 * t33 + t194 * t27 - t524 * t139 - t523 * t137 + t385 * t461 + (qJD(5) * t384 - t1 * t318 - t2 * t314) * t319 + t438, t2 * t167 + t1 * t152 + t17 * t246 - g(1) * (-pkin(5) * t490 + t415) - g(2) * (-pkin(5) * t493 + t416) - t402 + t511 * t57 + t523 * t33 - (pkin(5) * t481 + t316 * t381) * t557 + t524 * t27 + t392 * (qJ(3) + t381); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t256 + t289, -t291 ^ 2 - t309 * t489, t183 * t291 - t335 - t538 + t545, 0, 0, 0, 0, 0, 0, -t291 * t202 + t324, -t315 * t333 - t291 * t204 + (-t386 * t432 - t547) * t319 (-t374 - t550) * t319 + (t204 * qJD(4) - t109 + (t204 - t464) * t432) * t315, -t149 * t291 + t315 * t562 + t556 * t319 - t376, 0, 0, 0, 0, 0, 0, t14, t13, t5, -t191 * t44 - t192 * t45 + (-qJD(4) * t382 - t26) * t319 + (t386 * t70 + t329) * t315 - t376, 0, 0, 0, 0, 0, 0, t14, t13, t5, -t191 * t27 - t192 * t33 + (-qJD(4) * t384 - t17) * t319 + (-qJD(5) * t385 - t1 * t314 + t2 * t318 + t386 * t57) * t315 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, -t202 ^ 2 + t204 ^ 2, t330 + t550, -t494, -t109 + t363, t333, -t149 * t204 + t348 + t556, t149 * t202 - t347 - t562, 0, 0, t30, t10, t36, t31, t35, -t497, -pkin(4) * t64 - t137 * t79 - t196 * t55 - t204 * t44 + t361 * t314 + (-pkin(10) * qJD(5) * t196 + t341) * t318, pkin(4) * t63 - t139 * t79 + t204 * t45 + t516 + (pkin(10) * t455 + t56) * t196 + t361 * t318 - t439, t137 * t56 + t139 * t55 + (t3 - t518 + (-t64 + t456) * pkin(10)) * t318 + (-t4 - t517 + (qJD(5) * t137 - t63) * pkin(10)) * t314 + t347, -t44 * t55 - t45 * t56 - t70 * t79 + t341 * pkin(4) + (t329 + t347) * pkin(10), t30, t10, t36, t31, t35, -t497, t108 * t269 - t137 * t67 - t204 * t27 - t304 * t64 + t509 * t196 + (t202 * t57 + (t57 + t526) * qJD(5)) * t314 + t342 * t318, t57 * t495 + t108 * t270 - t139 * t67 + t520 + t204 * t33 + t304 * t63 - t510 * t196 + (pkin(5) * t499 + t318 * t57) * qJD(5) - t439, t269 * t63 + t270 * t64 - t509 * t139 - t510 * t137 + (-t196 * t27 + t2) * t318 + (-t1 - t519) * t314 + t347, -t2 * t270 + t1 * t269 - t17 * t304 - g(1) * (-t174 * t304 - t175 * t313) - g(2) * (t304 * t371 + t313 * t372) - g(3) * (-t233 * t304 - t234 * t313) + (pkin(5) * t455 - t67) * t57 + t510 * t33 + t509 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, t66, t42, -t501, t43, t108, -t139 * t70 + t325 + t517, t137 * t70 + t331 + t518, 0, 0, t501, t66, t42, -t501, t43, t108, 0.2e1 * t537 + t522 + t519 + (-t413 - t57) * t139 + t325, -pkin(5) * t542 + t521 + t196 * t32 + (qJD(6) + t57) * t137 + t331, pkin(5) * t63 - t137 * t525, t525 * t33 + (-t57 * t139 + t1 + t560) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, t553, -t136 - t542, t33 * t137 + t27 * t139 - t342;];
tau_reg  = t24;
