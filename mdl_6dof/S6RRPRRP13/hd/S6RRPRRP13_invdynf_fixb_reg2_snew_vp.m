% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPRRP13
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 19:15
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPRRP13_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP13_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP13_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP13_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP13_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP13_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 19:15:40
% EndTime: 2019-05-06 19:15:46
% DurationCPUTime: 6.48s
% Computational Cost: add. (30524->304), mult. (68904->382), div. (0->0), fcn. (51273->10), ass. (0->220)
t2137 = sin(pkin(6));
t2141 = sin(qJ(2));
t2181 = qJDD(1) * t2141;
t2145 = cos(qJ(2));
t2196 = qJD(1) * t2145;
t2152 = (qJD(2) * t2196 + t2181) * t2137;
t2138 = cos(pkin(6));
t2133 = qJD(1) * t2138 + qJD(2);
t2186 = t2137 * t2145;
t2179 = qJD(1) * t2186;
t2174 = t2133 * t2179;
t2084 = t2152 + t2174;
t2147 = qJD(1) ^ 2;
t2184 = t2147 * t2137 ^ 2;
t2130 = t2141 ^ 2 * t2184;
t2201 = t2133 ^ 2;
t2092 = -t2130 - t2201;
t2120 = t2145 * t2141 * t2184;
t2132 = qJDD(1) * t2138 + qJDD(2);
t2106 = -t2120 + t2132;
t2159 = t2092 * t2145 - t2106 * t2141;
t2054 = -t2084 * t2137 + t2138 * t2159;
t2074 = t2092 * t2141 + t2106 * t2145;
t2142 = sin(qJ(1));
t2146 = cos(qJ(1));
t2216 = t2054 * t2142 + t2074 * t2146;
t2215 = t2054 * t2146 - t2074 * t2142;
t2187 = t2137 * t2141;
t2180 = qJD(1) * t2187;
t2182 = qJDD(1) * t2137;
t2107 = -qJD(2) * t2180 + t2145 * t2182;
t2112 = t2133 * t2180;
t2087 = t2107 - t2112;
t2105 = t2120 + t2132;
t2136 = t2145 ^ 2;
t2131 = t2136 * t2184;
t2108 = -t2131 - t2201;
t2158 = t2105 * t2145 + t2108 * t2141;
t2062 = t2087 * t2137 + t2138 * t2158;
t2079 = t2105 * t2141 - t2108 * t2145;
t2214 = t2062 * t2142 + t2079 * t2146;
t2213 = t2062 * t2146 - t2079 * t2142;
t2151 = qJDD(4) + t2152;
t2140 = sin(qJ(4));
t2144 = cos(qJ(4));
t2095 = t2133 * t2140 + t2144 * t2179;
t2093 = qJD(5) + t2095;
t2208 = qJD(5) + t2093;
t2060 = -t2087 * t2138 + t2137 * t2158;
t2052 = t2084 * t2138 + t2137 * t2159;
t2097 = t2133 * t2144 - t2140 * t2179;
t2122 = qJD(4) + t2180;
t2139 = sin(qJ(5));
t2143 = cos(qJ(5));
t2081 = t2097 * t2139 - t2143 * t2122;
t2207 = t2081 ^ 2;
t2083 = t2097 * t2143 + t2122 * t2139;
t2206 = t2083 ^ 2;
t2205 = t2093 ^ 2;
t2204 = t2095 ^ 2;
t2203 = t2097 ^ 2;
t2202 = t2122 ^ 2;
t2200 = 2 * qJD(3);
t2199 = -2 * qJD(6);
t2198 = t2138 * g(3);
t2197 = qJD(1) * t2141;
t2195 = t2081 * t2083;
t2190 = t2095 * t2097;
t2189 = t2097 * t2122;
t2124 = t2142 * g(1) - g(2) * t2146;
t2185 = t2137 * t2147;
t2101 = qJDD(1) * pkin(1) + pkin(8) * t2185 + t2124;
t2188 = t2101 * t2138;
t2183 = qJD(5) - t2093;
t2104 = pkin(3) * t2180 - pkin(9) * t2133;
t2150 = -t2101 + (-t2181 + (-qJD(2) - t2133) * t2196) * qJ(3);
t2172 = pkin(2) * t2112 - 0.2e1 * qJD(3) * t2180 - t2198;
t2178 = t2136 * t2185;
t2031 = (-pkin(2) - pkin(9)) * t2107 + (-pkin(3) * t2178 - t2104 * t2197 + t2150) * t2137 + t2172;
t2103 = (-pkin(2) * t2145 - qJ(3) * t2141) * t2137 * qJD(1);
t2125 = -g(1) * t2146 - g(2) * t2142;
t2102 = -pkin(1) * t2147 + pkin(8) * t2182 + t2125;
t2175 = t2141 * t2102 - t2145 * t2188;
t2153 = -t2132 * pkin(2) - t2201 * qJ(3) + qJDD(3) + t2175;
t2148 = -t2132 * pkin(9) + ((pkin(3) * qJDD(1) + qJD(1) * t2103) * t2141 + (-t2141 * pkin(9) * t2185 + g(3) + (qJD(2) - t2133) * qJD(1) * pkin(3)) * t2145) * t2137 + t2153;
t2012 = t2144 * t2031 + t2140 * t2148;
t2076 = pkin(4) * t2095 - pkin(10) * t2097;
t1997 = -pkin(4) * t2202 + pkin(10) * t2151 - t2095 * t2076 + t2012;
t2073 = -g(3) * t2187 + t2145 * t2102 + t2141 * t2188;
t2154 = -t2201 * pkin(2) + t2132 * qJ(3) + t2073;
t2030 = t2107 * pkin(3) + (-pkin(9) * t2178 + t2103 * t2196) * t2137 + (t2200 + t2104) * t2133 + t2154;
t2177 = t2097 * qJD(4) + t2144 * t2107 + t2140 * t2132;
t2055 = t2177 + t2189;
t2157 = t2107 * t2140 - t2132 * t2144;
t2070 = -qJD(4) * t2095 - t2157;
t2006 = (t2095 * t2122 - t2070) * pkin(10) + t2055 * pkin(4) + t2030;
t1983 = t2143 * t1997 + t2139 * t2006;
t1982 = -t2139 * t1997 + t2143 * t2006;
t2011 = -t2031 * t2140 + t2144 * t2148;
t2176 = t2070 * t2139 - t2143 * t2151;
t2173 = -qJDD(5) - t2177;
t2149 = -t2143 * t2070 - t2139 * t2151;
t2024 = t2081 * t2183 + t2149;
t2036 = -t2173 - t2195;
t1974 = pkin(5) * t2036 + qJ(6) * t2024 + t2083 * t2199 + t1982;
t2066 = pkin(5) * t2093 - qJ(6) * t2083;
t2156 = -qJD(5) * t2083 - t2176;
t1979 = -t2093 * t2066 + t2156 * qJ(6) + (-pkin(5) * t2081 + t2199) * t2081 + t1983;
t1961 = -t1974 * t2139 + t1979 * t2143;
t1996 = -t2151 * pkin(4) - t2202 * pkin(10) + t2076 * t2097 - t2011;
t1984 = -pkin(5) * t2156 - qJ(6) * t2207 + t2066 * t2083 + qJDD(6) + t1996;
t1956 = t1961 * t2140 - t1984 * t2144;
t1960 = t1974 * t2143 + t1979 * t2139;
t2171 = -t1956 * t2145 + t1960 * t2141;
t1969 = -t1982 * t2139 + t1983 * t2143;
t1962 = t1969 * t2140 - t1996 * t2144;
t1968 = t1982 * t2143 + t1983 * t2139;
t2170 = -t1962 * t2145 + t1968 * t2141;
t1987 = t2011 * t2144 + t2012 * t2140;
t2169 = -t1987 * t2145 + t2030 * t2141;
t2022 = -t2083 * t2183 - t2176;
t2001 = t2022 * t2143 - t2024 * t2139;
t2041 = -t2206 - t2207;
t1989 = t2001 * t2140 - t2041 * t2144;
t2000 = t2022 * t2139 + t2024 * t2143;
t2168 = -t1989 * t2145 + t2000 * t2141;
t2047 = -t2205 - t2207;
t2015 = -t2036 * t2139 + t2047 * t2143;
t2021 = t2083 * t2208 + t2176;
t1993 = t2015 * t2140 - t2021 * t2144;
t2014 = t2036 * t2143 + t2047 * t2139;
t2167 = -t1993 * t2145 + t2014 * t2141;
t2037 = t2173 - t2195;
t2059 = -t2205 - t2206;
t2017 = t2037 * t2143 - t2059 * t2139;
t2023 = -t2081 * t2208 - t2149;
t1998 = t2017 * t2140 - t2023 * t2144;
t2016 = t2037 * t2139 + t2059 * t2143;
t2166 = -t1998 * t2145 + t2016 * t2141;
t2056 = -t2177 + t2189;
t2058 = (qJD(4) - t2122) * t2095 + t2157;
t2025 = t2056 * t2140 + t2058 * t2144;
t2065 = -t2203 - t2204;
t2165 = -t2025 * t2145 + t2065 * t2141;
t2067 = t2151 - t2190;
t2071 = -t2202 - t2204;
t2038 = t2067 * t2144 + t2071 * t2140;
t2164 = -t2038 * t2145 + t2055 * t2141;
t2068 = -t2190 - t2151;
t2077 = -t2202 - t2203;
t2043 = t2068 * t2140 + t2077 * t2144;
t2057 = (-qJD(4) - t2122) * t2095 - t2157;
t2163 = -t2043 * t2145 + t2057 * t2141;
t2045 = t2103 * t2179 + t2133 * t2200 + t2154;
t2048 = (t2145 * g(3) + t2103 * t2197) * t2137 + t2153;
t2162 = t2045 * t2141 - t2048 * t2145;
t2072 = -g(3) * t2186 - t2175;
t2161 = t2072 * t2145 + t2073 * t2141;
t2085 = t2152 - t2174;
t2086 = t2107 + t2112;
t2160 = -t2085 * t2145 + t2086 * t2141;
t2118 = -qJDD(1) * t2142 - t2146 * t2147;
t2117 = qJDD(1) * t2146 - t2142 * t2147;
t2109 = -t2130 - t2131;
t2088 = -t2137 * t2101 - t2198;
t2064 = t2085 * t2141 + t2086 * t2145;
t2050 = -t2109 * t2137 + t2138 * t2160;
t2049 = t2109 * t2138 + t2137 * t2160;
t2046 = -t2107 * pkin(2) + t2137 * t2150 + t2172;
t2044 = t2068 * t2144 - t2077 * t2140;
t2042 = -t2072 * t2141 + t2073 * t2145;
t2039 = -t2067 * t2140 + t2071 * t2144;
t2035 = -t2088 * t2137 + t2138 * t2161;
t2034 = t2088 * t2138 + t2137 * t2161;
t2028 = -t2050 * t2142 + t2064 * t2146;
t2027 = t2050 * t2146 + t2064 * t2142;
t2026 = t2056 * t2144 - t2058 * t2140;
t2020 = t2043 * t2141 + t2057 * t2145;
t2019 = t2045 * t2145 + t2048 * t2141;
t2018 = t2038 * t2141 + t2055 * t2145;
t2013 = t2025 * t2141 + t2065 * t2145;
t2010 = -t2046 * t2137 + t2138 * t2162;
t2009 = t2046 * t2138 + t2137 * t2162;
t2008 = -t2044 * t2137 + t2138 * t2163;
t2007 = t2044 * t2138 + t2137 * t2163;
t2003 = -t2039 * t2137 + t2138 * t2164;
t2002 = t2039 * t2138 + t2137 * t2164;
t1999 = t2017 * t2144 + t2023 * t2140;
t1994 = t2015 * t2144 + t2021 * t2140;
t1992 = -t2026 * t2137 + t2138 * t2165;
t1991 = t2026 * t2138 + t2137 * t2165;
t1990 = t2001 * t2144 + t2041 * t2140;
t1988 = -t2011 * t2140 + t2012 * t2144;
t1986 = t1998 * t2141 + t2016 * t2145;
t1985 = t1993 * t2141 + t2014 * t2145;
t1981 = t1987 * t2141 + t2030 * t2145;
t1980 = t1989 * t2141 + t2000 * t2145;
t1978 = -t1999 * t2137 + t2138 * t2166;
t1977 = t1999 * t2138 + t2137 * t2166;
t1976 = -t1994 * t2137 + t2138 * t2167;
t1975 = t1994 * t2138 + t2137 * t2167;
t1973 = -t1990 * t2137 + t2138 * t2168;
t1972 = t1990 * t2138 + t2137 * t2168;
t1971 = -t1988 * t2137 + t2138 * t2169;
t1970 = t1988 * t2138 + t2137 * t2169;
t1967 = -t1978 * t2142 + t1986 * t2146;
t1966 = t1978 * t2146 + t1986 * t2142;
t1965 = -t1976 * t2142 + t1985 * t2146;
t1964 = t1976 * t2146 + t1985 * t2142;
t1963 = t1969 * t2144 + t1996 * t2140;
t1959 = -t1973 * t2142 + t1980 * t2146;
t1958 = t1973 * t2146 + t1980 * t2142;
t1957 = t1961 * t2144 + t1984 * t2140;
t1955 = t1962 * t2141 + t1968 * t2145;
t1954 = t1956 * t2141 + t1960 * t2145;
t1953 = -t1963 * t2137 + t2138 * t2170;
t1952 = t1963 * t2138 + t2137 * t2170;
t1951 = -t1957 * t2137 + t2138 * t2171;
t1950 = t1957 * t2138 + t2137 * t2171;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2118, -t2117, 0, -t2124 * t2142 + t2125 * t2146, 0, 0, 0, 0, 0, 0, -t2214, -t2216, t2028, -t2035 * t2142 + t2042 * t2146, 0, 0, 0, 0, 0, 0, t2028, t2214, t2216, -t2010 * t2142 + t2019 * t2146, 0, 0, 0, 0, 0, 0, -t2003 * t2142 + t2018 * t2146, -t2008 * t2142 + t2020 * t2146, -t1992 * t2142 + t2013 * t2146, -t1971 * t2142 + t1981 * t2146, 0, 0, 0, 0, 0, 0, t1965, t1967, t1959, -t1953 * t2142 + t1955 * t2146, 0, 0, 0, 0, 0, 0, t1965, t1967, t1959, -t1951 * t2142 + t1954 * t2146; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2117, t2118, 0, t2124 * t2146 + t2125 * t2142, 0, 0, 0, 0, 0, 0, t2213, t2215, t2027, t2035 * t2146 + t2042 * t2142, 0, 0, 0, 0, 0, 0, t2027, -t2213, -t2215, t2010 * t2146 + t2019 * t2142, 0, 0, 0, 0, 0, 0, t2003 * t2146 + t2018 * t2142, t2008 * t2146 + t2020 * t2142, t1992 * t2146 + t2013 * t2142, t1971 * t2146 + t1981 * t2142, 0, 0, 0, 0, 0, 0, t1964, t1966, t1958, t1953 * t2146 + t1955 * t2142, 0, 0, 0, 0, 0, 0, t1964, t1966, t1958, t1951 * t2146 + t1954 * t2142; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2060, t2052, t2049, t2034, 0, 0, 0, 0, 0, 0, t2049, -t2060, -t2052, t2009, 0, 0, 0, 0, 0, 0, t2002, t2007, t1991, t1970, 0, 0, 0, 0, 0, 0, t1975, t1977, t1972, t1952, 0, 0, 0, 0, 0, 0, t1975, t1977, t1972, t1950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2147, -qJDD(1), 0, t2125, 0, 0, 0, 0, 0, 0, -t2079, -t2074, t2064, t2042, 0, 0, 0, 0, 0, 0, t2064, t2079, t2074, t2019, 0, 0, 0, 0, 0, 0, t2018, t2020, t2013, t1981, 0, 0, 0, 0, 0, 0, t1985, t1986, t1980, t1955, 0, 0, 0, 0, 0, 0, t1985, t1986, t1980, t1954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2147, 0, t2124, 0, 0, 0, 0, 0, 0, t2062, t2054, t2050, t2035, 0, 0, 0, 0, 0, 0, t2050, -t2062, -t2054, t2010, 0, 0, 0, 0, 0, 0, t2003, t2008, t1992, t1971, 0, 0, 0, 0, 0, 0, t1976, t1978, t1973, t1953, 0, 0, 0, 0, 0, 0, t1976, t1978, t1973, t1951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2060, t2052, t2049, t2034, 0, 0, 0, 0, 0, 0, t2049, -t2060, -t2052, t2009, 0, 0, 0, 0, 0, 0, t2002, t2007, t1991, t1970, 0, 0, 0, 0, 0, 0, t1975, t1977, t1972, t1952, 0, 0, 0, 0, 0, 0, t1975, t1977, t1972, t1950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2108, -t2106, t2086, t2073, 0, 0, 0, 0, 0, 0, t2086, -t2108, t2106, t2045, 0, 0, 0, 0, 0, 0, t2055, t2057, t2065, t2030, 0, 0, 0, 0, 0, 0, t2014, t2016, t2000, t1968, 0, 0, 0, 0, 0, 0, t2014, t2016, t2000, t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2105, t2092, -t2085, t2072, 0, 0, 0, 0, 0, 0, -t2085, -t2105, -t2092, -t2048, 0, 0, 0, 0, 0, 0, -t2038, -t2043, -t2025, -t1987, 0, 0, 0, 0, 0, 0, -t1993, -t1998, -t1989, -t1962, 0, 0, 0, 0, 0, 0, -t1993, -t1998, -t1989, -t1956; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2087, t2084, t2109, t2088, 0, 0, 0, 0, 0, 0, t2109, t2087, -t2084, t2046, 0, 0, 0, 0, 0, 0, t2039, t2044, t2026, t1988, 0, 0, 0, 0, 0, 0, t1994, t1999, t1990, t1963, 0, 0, 0, 0, 0, 0, t1994, t1999, t1990, t1957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2109, t2087, -t2084, t2046, 0, 0, 0, 0, 0, 0, t2039, t2044, t2026, t1988, 0, 0, 0, 0, 0, 0, t1994, t1999, t1990, t1963, 0, 0, 0, 0, 0, 0, t1994, t1999, t1990, t1957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2086, t2108, -t2106, -t2045, 0, 0, 0, 0, 0, 0, -t2055, -t2057, -t2065, -t2030, 0, 0, 0, 0, 0, 0, -t2014, -t2016, -t2000, -t1968, 0, 0, 0, 0, 0, 0, -t2014, -t2016, -t2000, -t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2085, t2105, t2092, t2048, 0, 0, 0, 0, 0, 0, t2038, t2043, t2025, t1987, 0, 0, 0, 0, 0, 0, t1993, t1998, t1989, t1962, 0, 0, 0, 0, 0, 0, t1993, t1998, t1989, t1956; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2071, t2068, t2056, t2012, 0, 0, 0, 0, 0, 0, t2015, t2017, t2001, t1969, 0, 0, 0, 0, 0, 0, t2015, t2017, t2001, t1961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2067, t2077, t2058, t2011, 0, 0, 0, 0, 0, 0, -t2021, -t2023, -t2041, -t1996, 0, 0, 0, 0, 0, 0, -t2021, -t2023, -t2041, -t1984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2055, t2057, t2065, t2030, 0, 0, 0, 0, 0, 0, t2014, t2016, t2000, t1968, 0, 0, 0, 0, 0, 0, t2014, t2016, t2000, t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2047, t2037, t2022, t1983, 0, 0, 0, 0, 0, 0, t2047, t2037, t2022, t1979; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2036, t2059, t2024, t1982, 0, 0, 0, 0, 0, 0, t2036, t2059, t2024, t1974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2021, t2023, t2041, t1996, 0, 0, 0, 0, 0, 0, t2021, t2023, t2041, t1984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2047, t2037, t2022, t1979; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2036, t2059, t2024, t1974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2021, t2023, t2041, t1984;];
f_new_reg  = t1;
