% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR8_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:53:20
% EndTime: 2019-03-09 10:53:31
% DurationCPUTime: 4.33s
% Computational Cost: add. (5231->327), mult. (12294->574), div. (0->0), fcn. (11286->8), ass. (0->149)
t116 = sin(pkin(10));
t117 = cos(pkin(10));
t197 = sin(qJ(4));
t199 = cos(qJ(4));
t95 = t199 * t116 + t197 * t117;
t94 = t197 * t116 - t199 * t117;
t193 = pkin(8) + qJ(3);
t70 = t95 * t193;
t119 = sin(qJ(2));
t120 = cos(qJ(2));
t177 = t116 * pkin(7) + pkin(3);
t195 = pkin(2) * t120;
t131 = -t177 * t120 + (-t193 * t119 - pkin(1) - t195) * t117;
t192 = t116 * t119;
t194 = t120 * pkin(7);
t105 = t117 * t194;
t149 = -t119 * qJ(3) - t195;
t143 = -pkin(1) + t149;
t74 = t116 * t143 + t105;
t69 = -pkin(8) * t192 + t74;
t30 = t199 * t131 - t197 * t69;
t31 = t197 * t131 + t199 * t69;
t83 = t94 * t119;
t204 = (t119 ^ 2 - t120 ^ 2) * qJD(2);
t86 = t94 * qJD(4);
t203 = -0.2e1 * t86;
t87 = t95 * qJD(4);
t202 = 0.2e1 * t87;
t201 = 2 * qJD(5);
t200 = -pkin(4) - pkin(5);
t198 = cos(qJ(6));
t196 = pkin(2) * t119;
t111 = t119 * pkin(7);
t154 = t193 * t199;
t155 = t193 * t197;
t71 = -t116 * t155 + t117 * t154;
t96 = pkin(3) * t192 + t111;
t190 = qJD(3) * t120;
t118 = sin(qJ(6));
t189 = qJD(6) * t118;
t109 = t119 * qJD(2);
t188 = t119 * qJD(3);
t187 = t120 * qJD(2);
t186 = t120 * qJD(5);
t57 = -t83 * qJD(4) + t95 * t187;
t82 = t95 * t119;
t185 = 0.2e1 * t82 * t57;
t184 = t94 * t202;
t183 = -0.2e1 * pkin(1) * qJD(2);
t182 = t116 * t194;
t181 = t117 * t111;
t180 = pkin(4) * t109;
t179 = pkin(7) * t187;
t108 = -pkin(3) * t117 - pkin(2);
t172 = qJ(5) * t109;
t171 = t116 * t187;
t170 = t116 * t188;
t169 = t117 * t187;
t168 = t117 * t188;
t167 = t119 * t187;
t163 = t197 * qJD(3);
t164 = t199 * qJD(3);
t45 = t70 * qJD(4) + t116 * t163 - t117 * t164;
t46 = (qJD(4) * t154 + t163) * t117 + (-qJD(4) * t155 + t164) * t116;
t166 = -t71 * t45 + t46 * t70;
t165 = qJD(6) * t198;
t162 = 0.2e1 * t167;
t161 = t198 * t200;
t158 = t116 * t169;
t112 = t116 ^ 2;
t113 = t117 ^ 2;
t157 = 0.2e1 * (t112 + t113) * qJD(3);
t156 = -0.2e1 * t204;
t24 = -qJ(5) * t120 + t31;
t153 = -qJ(5) * t83 - t96;
t56 = t119 * t87 - t199 * t169 + t197 * t171;
t152 = t56 * t82 + t57 * t83;
t151 = t57 * t94 + t82 * t87;
t150 = t86 * t94 - t87 * t95;
t148 = -qJ(3) * t120 + t196;
t67 = -t168 + (pkin(7) * t192 + t117 * t148) * qJD(2);
t68 = -t170 + (t116 * t148 - t181) * qJD(2);
t147 = -t116 * t67 + t117 * t68;
t146 = -qJ(5) * t86 + qJD(5) * t95;
t144 = qJ(5) * t95 - t108;
t88 = (pkin(3) * t116 + pkin(7)) * t187;
t138 = -t193 * t120 + t196;
t126 = -t168 + (t138 * t117 + t177 * t119) * qJD(2);
t127 = -t170 + (t138 * t116 - t181) * qJD(2);
t13 = -t31 * qJD(4) + t199 * t126 - t197 * t127;
t10 = -t13 - t180;
t121 = -pkin(5) * t109 + t56 * pkin(9) + t10;
t26 = t120 * pkin(4) - t30;
t124 = t120 * pkin(5) + t83 * pkin(9) + t26;
t122 = t198 * t124;
t12 = -t30 * qJD(4) - t197 * t126 - t199 * t127;
t9 = -t12 + t172 - t186;
t130 = t57 * pkin(9) + t9;
t18 = t82 * pkin(9) + t24;
t1 = -qJD(6) * t122 - t118 * t121 - t198 * t130 + t18 * t189;
t51 = t118 * t82 - t198 * t83;
t64 = t118 * t94 + t198 * t95;
t142 = -t71 * t109 - t120 * t45;
t141 = -t70 * t109 + t120 * t46;
t140 = t82 * t109 - t120 * t57;
t139 = t94 * t109 - t120 * t87;
t137 = t45 * t82 - t46 * t83 - t56 * t70 - t71 * t57;
t98 = t198 * qJ(5) + t118 * t200;
t136 = 0.2e1 * t45 * t94 + 0.2e1 * t46 * t95 - 0.2e1 * t70 * t86 - 0.2e1 * t71 * t87;
t16 = t57 * pkin(4) + t56 * qJ(5) + t83 * qJD(5) + t88;
t135 = -t95 * pkin(9) + t70;
t134 = t56 * t94 - t57 * t95 + t82 * t86 + t83 * t87;
t133 = t118 * t135;
t132 = t198 * t135;
t129 = t87 * pkin(9) - t45;
t125 = t86 * pkin(9) + t46;
t123 = t118 * t124;
t2 = -qJD(6) * t123 - t118 * t130 + t198 * t121 - t18 * t165;
t102 = -0.2e1 * t167;
t97 = -t118 * qJ(5) + t161;
t81 = t118 * qJD(5) + t98 * qJD(6);
t80 = qJ(5) * t189 - t198 * qJD(5) - qJD(6) * t161;
t73 = t117 * t143 - t182;
t66 = t95 * t203;
t63 = t118 * t95 - t198 * t94;
t62 = pkin(4) * t94 - t144;
t59 = t95 * t109 + t120 * t86;
t55 = pkin(9) * t94 + t71;
t50 = -t118 * t83 - t198 * t82;
t41 = t200 * t94 + t144;
t40 = pkin(4) * t87 - t146;
t39 = pkin(4) * t82 - t153;
t37 = 0.2e1 * t83 * t56;
t32 = t200 * t87 + t146;
t28 = -0.2e1 * t83 * t109 + 0.2e1 * t120 * t56;
t27 = t200 * t82 + t153;
t23 = t64 * qJD(6) - t118 * t86 - t198 * t87;
t22 = -t118 * t87 - t94 * t165 + t95 * t189 + t198 * t86;
t21 = -t56 * t95 + t83 * t86;
t20 = t198 * t55 + t133;
t19 = -t118 * t55 + t132;
t15 = t51 * qJD(6) - t118 * t56 - t198 * t57;
t14 = -t118 * t57 - t82 * t165 - t83 * t189 + t198 * t56;
t11 = t57 * pkin(5) + t16;
t8 = t198 * t18 + t123;
t7 = -t118 * t18 + t122;
t4 = qJD(6) * t133 + t118 * t129 - t198 * t125 + t55 * t165;
t3 = -qJD(6) * t132 - t118 * t125 - t198 * t129 + t55 * t189;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t156, 0, t102, 0, 0, t119 * t183, t120 * t183, 0, 0, t113 * t162, -0.4e1 * t119 * t158, 0.2e1 * t117 * t204, t112 * t162, t116 * t156, t102, -0.2e1 * t120 * t67 + 0.2e1 * (t73 + 0.2e1 * t182) * t109, 0.2e1 * t120 * t68 + 0.2e1 * (-t74 + 0.2e1 * t105) * t109, 0.2e1 * (-t116 * t68 - t117 * t67) * t119 + 0.2e1 * (-t116 * t74 - t117 * t73) * t187, 0.2e1 * pkin(7) ^ 2 * t167 + 0.2e1 * t73 * t67 + 0.2e1 * t74 * t68, t37, 0.2e1 * t152, t28, t185, -0.2e1 * t140, t102, 0.2e1 * t30 * t109 - 0.2e1 * t120 * t13 + 0.2e1 * t96 * t57 + 0.2e1 * t88 * t82, -0.2e1 * t31 * t109 - 0.2e1 * t12 * t120 - 0.2e1 * t96 * t56 - 0.2e1 * t88 * t83, 0.2e1 * t12 * t82 + 0.2e1 * t13 * t83 + 0.2e1 * t30 * t56 - 0.2e1 * t31 * t57, -0.2e1 * t12 * t31 + 0.2e1 * t13 * t30 + 0.2e1 * t88 * t96, t37, t28, -0.2e1 * t152, t102, 0.2e1 * t140, t185, 0.2e1 * t10 * t120 - 0.2e1 * t26 * t109 + 0.2e1 * t16 * t82 + 0.2e1 * t39 * t57, -0.2e1 * t10 * t83 - 0.2e1 * t24 * t57 - 0.2e1 * t26 * t56 - 0.2e1 * t82 * t9, 0.2e1 * t24 * t109 - 0.2e1 * t120 * t9 + 0.2e1 * t16 * t83 + 0.2e1 * t39 * t56, 0.2e1 * t10 * t26 + 0.2e1 * t16 * t39 + 0.2e1 * t24 * t9, -0.2e1 * t51 * t14, 0.2e1 * t14 * t50 - 0.2e1 * t15 * t51, -0.2e1 * t51 * t109 - 0.2e1 * t120 * t14, 0.2e1 * t50 * t15, 0.2e1 * t50 * t109 - 0.2e1 * t120 * t15, t102, -0.2e1 * t7 * t109 - 0.2e1 * t11 * t50 + 0.2e1 * t120 * t2 + 0.2e1 * t27 * t15, 0.2e1 * t1 * t120 + 0.2e1 * t8 * t109 - 0.2e1 * t11 * t51 - 0.2e1 * t27 * t14, 0.2e1 * t1 * t50 + 0.2e1 * t14 * t7 - 0.2e1 * t15 * t8 - 0.2e1 * t2 * t51, -0.2e1 * t1 * t8 - 0.2e1 * t11 * t27 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187, 0, -t109, 0, -t179, pkin(7) * t109, 0, 0, t158 (-t112 + t113) * t187, t116 * t109, -t158, t117 * t109, 0, t116 * t190 + (t116 * t149 - t105) * qJD(2), t117 * t190 + (t117 * t149 + t182) * qJD(2), t147, -pkin(2) * t179 + (-t116 * t73 + t117 * t74) * qJD(3) + t147 * qJ(3), t21, t134, t59, t151, -t139, 0, t108 * t57 + t96 * t87 + t88 * t94 + t141, -t108 * t56 - t96 * t86 + t88 * t95 + t142, t12 * t94 - t13 * t95 + t30 * t86 - t31 * t87 + t137, t108 * t88 - t12 * t71 - t13 * t70 - t30 * t46 - t31 * t45, t21, t59, -t134, 0, t139, t151, t16 * t94 + t39 * t87 + t40 * t82 + t62 * t57 + t141, t10 * t95 - t24 * t87 - t26 * t86 - t9 * t94 + t137, -t16 * t95 + t39 * t86 + t40 * t83 + t62 * t56 - t142, t10 * t70 + t16 * t62 - t24 * t45 + t26 * t46 + t39 * t40 + t71 * t9, -t14 * t64 - t22 * t51, t14 * t63 - t15 * t64 + t22 * t50 - t23 * t51, -t64 * t109 - t120 * t22, t15 * t63 + t23 * t50, t63 * t109 - t120 * t23, 0, -t19 * t109 - t11 * t63 - t120 * t4 + t41 * t15 + t27 * t23 + t32 * t50, t20 * t109 - t11 * t64 + t120 * t3 - t41 * t14 - t27 * t22 + t32 * t51, t1 * t63 + t14 * t19 - t15 * t20 - t2 * t64 + t22 * t7 - t23 * t8 + t3 * t50 + t4 * t51, -t1 * t20 - t11 * t41 + t19 * t2 + t27 * t32 - t3 * t8 - t4 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, qJ(3) * t157, t66, 0.2e1 * t150, 0, t184, 0, 0, t108 * t202, t108 * t203, t136, 0.2e1 * t166, t66, 0, -0.2e1 * t150, 0, 0, t184, 0.2e1 * t40 * t94 + 0.2e1 * t62 * t87, t136, -0.2e1 * t40 * t95 + 0.2e1 * t62 * t86, 0.2e1 * t40 * t62 + 0.2e1 * t166, -0.2e1 * t64 * t22, 0.2e1 * t22 * t63 - 0.2e1 * t23 * t64, 0, 0.2e1 * t63 * t23, 0, 0, 0.2e1 * t23 * t41 + 0.2e1 * t32 * t63, -0.2e1 * t22 * t41 + 0.2e1 * t32 * t64, 0.2e1 * t19 * t22 - 0.2e1 * t20 * t23 + 0.2e1 * t3 * t63 + 0.2e1 * t4 * t64, -0.2e1 * t19 * t4 - 0.2e1 * t20 * t3 + 0.2e1 * t32 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, t169, 0, t179, 0, 0, 0, 0, 0, 0, t57, -t56, 0, t88, 0, 0, 0, 0, 0, 0, t57, 0, t56, t16, 0, 0, 0, 0, 0, 0, -t15, t14, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, -t86, 0, 0, 0, 0, 0, 0, 0, 0, t87, 0, t86, t40, 0, 0, 0, 0, 0, 0, -t23, t22, 0, -t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t57, t109, t13, t12, 0, 0, 0, -t56, 0, t109, t57, 0, t13 + 0.2e1 * t180, pkin(4) * t56 - qJ(5) * t57 - qJD(5) * t82, -t12 + 0.2e1 * t172 - 0.2e1 * t186, -pkin(4) * t10 + qJ(5) * t9 + qJD(5) * t24, 0, 0, t14, 0, t15, t109, -t97 * t109 - t81 * t120 - t2, t98 * t109 + t120 * t80 - t1, t14 * t97 - t15 * t98 + t50 * t80 + t51 * t81, -t1 * t98 + t2 * t97 - t7 * t81 - t8 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, 0, -t87, 0, -t46, t45, 0, 0, 0, -t86, 0, 0, t87, 0, -t46, pkin(4) * t86 - qJ(5) * t87 - qJD(5) * t94, -t45, -pkin(4) * t46 - qJ(5) * t45 + qJD(5) * t71, 0, 0, t22, 0, t23, 0, t4, -t3, t22 * t97 - t23 * t98 + t63 * t80 + t64 * t81, -t19 * t81 - t20 * t80 - t3 * t98 - t4 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, qJ(5) * t201, 0, 0, 0, 0, 0, 0, 0.2e1 * t81, -0.2e1 * t80, 0, -0.2e1 * t80 * t98 - 0.2e1 * t81 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, -t56, 0, t10, 0, 0, 0, 0, 0, 0, -t198 * t109 - t120 * t189, t118 * t109 - t120 * t165, t198 * t14 - t118 * t15 + (t118 * t51 - t198 * t50) * qJD(6), t2 * t198 - t1 * t118 + (-t118 * t7 + t198 * t8) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, t198 * t22 - t118 * t23 + (t118 * t64 - t198 * t63) * qJD(6), -t4 * t198 - t3 * t118 + (-t118 * t19 + t198 * t20) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t165, 0, -t81 * t198 - t80 * t118 + (-t118 * t97 + t198 * t98) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, 0, -t15, -t109, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22, 0, -t23, 0, -t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, t80, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
