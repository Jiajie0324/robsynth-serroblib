% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR8_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR8_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR8_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR8_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR8_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR8_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:53:36
% EndTime: 2019-03-09 10:53:51
% DurationCPUTime: 10.90s
% Computational Cost: add. (13790->727), mult. (30911->905), div. (0->0), fcn. (22520->12), ass. (0->345)
t301 = sin(pkin(10));
t302 = cos(pkin(10));
t305 = sin(qJ(4));
t499 = cos(qJ(4));
t230 = t301 * t499 + t305 * t302;
t210 = t230 * qJD(4);
t309 = cos(qJ(2));
t337 = t309 * t230;
t442 = qJD(1) * t337 - t210;
t414 = t499 * t302;
t386 = t309 * t414;
t433 = qJD(1) * t309;
t413 = t301 * t433;
t402 = qJD(4) * t499;
t428 = qJD(4) * t305;
t511 = -t301 * t428 + t302 * t402;
t441 = qJD(1) * t386 - t305 * t413 - t511;
t487 = pkin(8) + qJ(3);
t244 = t487 * t301;
t245 = t487 * t302;
t164 = -t305 * t244 + t499 * t245;
t290 = t309 * qJDD(1);
t306 = sin(qJ(2));
t424 = qJD(1) * qJD(2);
t344 = t306 * t424 - t290;
t228 = qJDD(4) + t344;
t298 = pkin(10) + qJ(4);
t288 = sin(t298);
t297 = g(3) * t309;
t310 = cos(qJ(1));
t307 = sin(qJ(1));
t490 = g(2) * t307;
t380 = g(1) * t310 + t490;
t352 = t380 * t306;
t527 = -t352 + t297;
t538 = -t164 * t228 + t288 * t527;
t434 = qJD(1) * t306;
t405 = t301 * t434;
t431 = qJD(2) * t302;
t222 = -t405 + t431;
t412 = t302 * t434;
t432 = qJD(2) * t301;
t223 = t412 + t432;
t145 = -t499 * t222 + t223 * t305;
t304 = sin(qJ(6));
t308 = cos(qJ(6));
t350 = t305 * t222 + t223 * t499;
t523 = -t308 * t145 + t304 * t350;
t537 = t523 ^ 2;
t524 = t145 * t304 + t308 * t350;
t536 = t524 ^ 2;
t115 = -t244 * t402 + qJD(3) * t414 + (-qJD(3) * t301 - qJD(4) * t245) * t305;
t373 = pkin(2) * t306 - qJ(3) * t309;
t232 = t373 * qJD(1);
t169 = pkin(7) * t405 + t302 * t232;
t451 = t302 * t309;
t359 = pkin(3) * t306 - pkin(8) * t451;
t133 = qJD(1) * t359 + t169;
t211 = t301 * t232;
t452 = t302 * t306;
t453 = t301 * t309;
t346 = -pkin(7) * t452 - pkin(8) * t453;
t152 = qJD(1) * t346 + t211;
t78 = t305 * t133 + t499 * t152;
t73 = qJ(5) * t434 + t78;
t475 = t115 - t73;
t399 = t309 * t424;
t421 = t306 * qJDD(1);
t345 = t399 + t421;
t334 = t345 * t302;
t422 = t301 * qJDD(2);
t323 = t334 + t422;
t423 = qJDD(2) * t302;
t264 = t301 * t421;
t440 = t301 * t399 + t264;
t371 = t423 - t440;
t70 = -t222 * t402 + t223 * t428 - t305 * t371 - t499 * t323;
t71 = qJD(4) * t350 + t305 * t323 - t499 * t371;
t20 = qJD(6) * t524 - t304 * t70 - t308 * t71;
t274 = -qJD(4) + t433;
t261 = qJD(6) + t274;
t479 = t261 * t524;
t535 = t20 - t479;
t534 = t261 * t523;
t374 = pkin(2) * t309 + qJ(3) * t306;
t240 = -pkin(1) - t374;
t213 = t240 * qJD(1);
t286 = pkin(7) * t433;
t246 = qJD(2) * qJ(3) + t286;
t155 = t302 * t213 - t246 * t301;
t103 = -pkin(3) * t433 - pkin(8) * t223 + t155;
t156 = t301 * t213 + t302 * t246;
t111 = pkin(8) * t222 + t156;
t54 = t499 * t103 - t305 * t111;
t443 = qJD(5) - t54;
t472 = t230 * qJD(3) + t164 * qJD(4) + t133 * t499 - t305 * t152;
t444 = t310 * t288;
t289 = cos(t298);
t447 = t307 * t289;
t191 = t309 * t444 - t447;
t445 = t309 * t310;
t192 = t288 * t307 + t289 * t445;
t113 = t191 * t308 - t192 * t304;
t296 = g(3) * t306;
t364 = t288 * t308 - t289 * t304;
t394 = qJD(2) * pkin(2) - qJD(3);
t378 = -pkin(7) * t434 + t394;
t342 = pkin(3) * t222 + t378;
t328 = qJ(5) * t350 + t342;
t501 = pkin(4) + pkin(5);
t45 = -t145 * t501 + t328;
t446 = t307 * t309;
t189 = t288 * t446 + t289 * t310;
t190 = t289 * t446 - t444;
t509 = t189 * t308 - t190 * t304;
t533 = -g(1) * t113 - g(2) * t509 - t364 * t296 - t45 * t524;
t532 = t145 ^ 2;
t419 = t306 * t501;
t531 = pkin(9) * t441 + qJD(1) * t419 + t472;
t530 = pkin(9) * t442 - t475;
t488 = t524 * t523;
t529 = t145 * t274;
t528 = -pkin(9) * t350 + t443;
t526 = t536 - t537;
t522 = -0.2e1 * pkin(1);
t502 = t350 ^ 2;
t37 = t274 * t501 + t528;
t256 = t274 * qJ(5);
t55 = t305 * t103 + t111 * t499;
t42 = t145 * pkin(9) + t55;
t40 = -t256 + t42;
t14 = t304 * t37 + t308 * t40;
t205 = qJD(2) * t373 - qJD(3) * t306;
t142 = qJD(1) * t205 + qJDD(1) * t240;
t188 = -pkin(7) * t344 + qJDD(2) * qJ(3) + qJD(2) * qJD(3);
t95 = t302 * t142 - t301 * t188;
t59 = pkin(3) * t344 - pkin(8) * t323 + t95;
t96 = t301 * t142 + t302 * t188;
t72 = pkin(8) * t371 + t96;
t16 = -t103 * t428 - t111 * t402 - t305 * t72 + t499 * t59;
t370 = qJDD(5) - t16;
t7 = pkin(9) * t70 - t228 * t501 + t370;
t15 = t103 * t402 - t111 * t428 + t305 * t59 + t499 * t72;
t214 = t228 * qJ(5);
t254 = t274 * qJD(5);
t11 = t15 + t214 - t254;
t9 = pkin(9) * t71 + t11;
t2 = -qJD(6) * t14 - t304 * t9 + t308 * t7;
t520 = t14 * t261 + t2;
t519 = t501 * t71;
t426 = qJD(6) * t308;
t427 = qJD(6) * t304;
t19 = -t145 * t426 - t304 * t71 + t308 * t70 + t350 * t427;
t518 = t19 - t534;
t461 = t350 * t274;
t517 = t71 + t461;
t514 = -t190 * pkin(4) - qJ(5) * t189;
t429 = qJD(2) * t309;
t513 = t222 * t429 + t371 * t306;
t216 = pkin(3) * t413 + t286;
t512 = t441 * qJ(5) - qJD(5) * t230 - t216;
t510 = -t70 * qJ(5) + t350 * qJD(5);
t507 = -pkin(7) * t399 - qJDD(3);
t229 = t301 * t305 - t414;
t506 = -t145 * t434 + t228 * t229 + t274 * t442;
t504 = t145 * t441 + t229 * t70 - t230 * t71 + t350 * t442;
t114 = t191 * t304 + t192 * t308;
t353 = -t304 * t7 - t308 * t9 - t37 * t426 + t40 * t427;
t363 = t288 * t304 + t289 * t308;
t366 = t189 * t304 + t190 * t308;
t503 = g(1) * t114 + g(2) * t366 + t363 * t296 + t45 * t523 + t353;
t300 = t309 ^ 2;
t500 = t71 * pkin(4);
t313 = qJD(1) ^ 2;
t498 = pkin(1) * t313;
t497 = pkin(3) * t301;
t496 = pkin(4) * t228;
t495 = pkin(7) * t222;
t492 = g(1) * t307;
t486 = pkin(9) - t487;
t163 = t499 * t244 + t245 * t305;
t125 = -pkin(9) * t230 + t163;
t126 = pkin(9) * t229 + t164;
t68 = t125 * t308 - t126 * t304;
t485 = qJD(6) * t68 + t304 * t531 - t308 * t530;
t69 = t125 * t304 + t126 * t308;
t484 = -qJD(6) * t69 + t304 * t530 + t308 * t531;
t483 = t442 * t501 - t512;
t13 = -t304 * t40 + t308 * t37;
t482 = t13 * t261;
t478 = t274 * t55;
t476 = -pkin(4) * t442 + t512;
t474 = t115 - t78;
t473 = pkin(4) * t434 + t472;
t237 = -qJ(5) * t304 - t308 * t501;
t471 = qJD(6) * t237 - t304 * t42 + t308 * t528;
t238 = qJ(5) * t308 - t304 * t501;
t470 = -qJD(6) * t238 - t304 * t528 - t308 * t42;
t469 = t229 * t426 - t230 * t427 - t304 * t442 - t308 * t441;
t151 = t229 * t304 + t230 * t308;
t468 = qJD(6) * t151 - t304 * t441 + t308 * t442;
t467 = pkin(7) * qJDD(1);
t466 = qJ(5) * t145;
t464 = qJ(5) * t309;
t463 = qJDD(2) * pkin(2);
t462 = t350 * t145;
t458 = t288 * t306;
t457 = t289 * t306;
t456 = t289 * t309;
t455 = t300 * t313;
t454 = t301 * t306;
t450 = t487 * t309;
t449 = t306 * t307;
t448 = t306 * t310;
t281 = t302 * pkin(3) + pkin(2);
t249 = t309 * t281;
t221 = t302 * t240;
t154 = -pkin(8) * t452 + t221 + (-pkin(7) * t301 - pkin(3)) * t309;
t178 = pkin(7) * t451 + t301 * t240;
t161 = -pkin(8) * t454 + t178;
t93 = t305 * t154 + t499 * t161;
t430 = qJD(2) * t306;
t420 = pkin(7) * t430;
t159 = t302 * t205 + t301 * t420;
t439 = g(1) * t449 - g(2) * t448;
t284 = pkin(7) * t421;
t438 = -t284 - t297;
t411 = t301 * t429;
t217 = pkin(3) * t411 + pkin(7) * t429;
t233 = pkin(3) * t454 + t306 * pkin(7);
t437 = t310 * pkin(1) + t307 * pkin(7);
t299 = t306 ^ 2;
t436 = t299 - t300;
t435 = t299 + t300;
t418 = t487 * t448;
t294 = t310 * pkin(7);
t417 = t310 * t497 - t449 * t487 + t294;
t416 = g(1) * t445 + g(2) * t446 + t296;
t408 = t223 * t429;
t407 = t223 * t433;
t406 = t274 * t434;
t404 = t222 * t433;
t403 = -t502 + t532;
t401 = t486 * t310;
t398 = t301 * t290;
t397 = t306 * t290;
t396 = -pkin(1) - t249;
t393 = -t189 * pkin(4) + qJ(5) * t190;
t392 = -t191 * pkin(4) + qJ(5) * t192;
t391 = -qJ(5) * t288 - t281;
t389 = qJD(1) * t436;
t388 = t261 ^ 2;
t387 = t281 * t445 + t307 * t497 + t437;
t385 = g(3) * (pkin(4) * t456 + t288 * t464 + t249);
t383 = t306 * t399;
t382 = g(1) * t189 - g(2) * t191;
t381 = g(1) * t190 - g(2) * t192;
t379 = -g(2) * t310 + t492;
t88 = t93 - t464;
t201 = -t305 * t454 + t306 * t414;
t376 = qJ(5) * t201 - t233;
t92 = t154 * t499 - t305 * t161;
t89 = t309 * pkin(4) - t92;
t60 = t309 * pkin(5) - t201 * pkin(9) + t89;
t200 = t230 * t306;
t62 = pkin(9) * t200 + t88;
t30 = -t304 * t62 + t308 * t60;
t31 = t304 * t60 + t308 * t62;
t128 = qJD(2) * t337 + t306 * t511;
t369 = t128 * t145 + t200 * t71;
t368 = -t502 - t532;
t121 = t200 * t304 + t201 * t308;
t361 = qJD(1) * (-t222 + t431);
t312 = qJD(2) ^ 2;
t360 = qJDD(2) * t309 - t306 * t312;
t358 = qJ(5) * t230 + t281;
t357 = -g(1) * t191 - g(2) * t189 - g(3) * t458;
t356 = t407 - t440;
t354 = -t284 + t463 + t507;
t351 = t371 * pkin(3);
t347 = -t145 * t442 + t229 * t71;
t122 = qJD(2) * t359 + t159;
t186 = t301 * t205;
t135 = qJD(2) * t346 + t186;
t39 = t122 * t499 - t305 * t135 - t154 * t428 - t161 * t402;
t343 = t302 * t421 + t422;
t38 = t305 * t122 + t499 * t135 + t154 * t402 - t161 * t428;
t340 = -t115 * t145 - t163 * t70 - t164 * t71 - t416;
t127 = -qJD(2) * t386 + t210 * t306 + t305 * t411;
t339 = -qJ(5) * t127 + qJD(5) * t201 - t217;
t338 = t192 * pkin(4) + qJ(5) * t191 + t387;
t336 = g(1) * t289 * t448 + g(2) * t306 * t447 - g(3) * t456 - t163 * t228;
t333 = t307 * t396 + t417;
t331 = -t352 - t463;
t330 = t70 - t529;
t329 = -t357 + t16;
t327 = t354 - t527;
t326 = t127 * t145 - t128 * t350 + t200 * t70 - t201 * t71;
t33 = qJ(5) * t430 - qJD(5) * t309 + t38;
t324 = -t128 * t274 + t145 * t430 + t200 * t228 - t309 * t71;
t123 = -t351 - t354;
t61 = pkin(4) * t145 - t328;
t322 = t350 * t61 + qJDD(5) - t329;
t321 = t331 - t438 - t507;
t319 = g(1) * t192 + g(2) * t190 + g(3) * t457 - t274 * t54 - t15;
t318 = -t123 + t510;
t317 = -t351 + t321;
t316 = t317 - t510;
t315 = t71 - t461;
t268 = t306 * t313 * t309;
t247 = qJ(5) * t457;
t219 = qJDD(1) * t300 - 0.2e1 * t383;
t215 = -qJDD(6) + t228;
t177 = -pkin(7) * t453 + t221;
t170 = -pkin(7) * t412 + t211;
t162 = -t228 * t309 - t274 * t430;
t160 = -t302 * t420 + t186;
t150 = -t308 * t229 + t230 * t304;
t143 = pkin(4) * t229 - t358;
t120 = -t308 * t200 + t201 * t304;
t108 = -t229 * t501 + t358;
t104 = pkin(4) * t200 - t376;
t91 = pkin(4) * t350 + t466;
t90 = -t200 * t501 + t376;
t56 = -t350 * t501 - t466;
t51 = -t256 + t55;
t49 = pkin(4) * t274 + t443;
t48 = t228 * t230 + t274 * t441 - t350 * t434;
t47 = pkin(4) * t128 - t339;
t46 = -t70 - t529;
t44 = qJD(6) * t121 - t127 * t304 - t308 * t128;
t43 = t308 * t127 - t304 * t128 - t200 * t426 + t201 * t427;
t36 = -t128 * t501 + t339;
t35 = -pkin(4) * t430 - t39;
t32 = -t127 * t350 - t201 * t70;
t29 = -t230 * t70 - t350 * t441;
t28 = t127 * t274 + t201 * t228 + t309 * t70 + t350 * t430;
t27 = pkin(9) * t128 + t33;
t26 = t127 * pkin(9) - qJD(2) * t419 - t39;
t21 = -t318 + t500;
t12 = t370 - t496;
t10 = t318 - t519;
t4 = -qJD(6) * t31 + t26 * t308 - t27 * t304;
t3 = qJD(6) * t30 + t26 * t304 + t27 * t308;
t1 = [0, 0, 0, 0, 0, qJDD(1), t379, t380, 0, 0, qJDD(1) * t299 + 0.2e1 * t383, -0.2e1 * qJD(2) * t389 + 0.2e1 * t397, qJDD(2) * t306 + t309 * t312, t219, t360, 0 (-pkin(7) * qJDD(2) + t424 * t522) * t306 + (0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t312 + t379) * t309, -pkin(7) * t360 + t345 * t522 - t439, 0.2e1 * t435 * t467 - t380, -g(1) * (-pkin(1) * t307 + t294) - g(2) * t437 + (pkin(7) ^ 2 * t435 + pkin(1) ^ 2) * qJDD(1) (t306 * t323 + t408) * t302, -t301 * t408 + t302 * t513 - t323 * t454, t223 * t430 - t309 * t422 + (-0.2e1 * t397 + (t436 - t300) * t424) * t302, -t513 * t301 (-t371 + t264) * t309 + (t306 * t222 - t301 * t389) * qJD(2), t219, -t380 * t301 + (-pkin(7) * t371 - t354 * t301 + (qJD(1) * t177 + t155) * qJD(2)) * t306 + (-t159 * qJD(1) - t177 * qJDD(1) - t95 + t379 * t302 + (-t301 * t378 - t495) * qJD(2)) * t309, -t380 * t302 + (-t354 * t302 + (-qJD(1) * t178 - t156) * qJD(2) + t343 * pkin(7)) * t306 + (t160 * qJD(1) + t178 * qJDD(1) + t96 - t379 * t301 + (-t378 * t302 + (t223 + t412) * pkin(7)) * qJD(2)) * t309, t160 * t222 - t178 * t440 - t159 * t223 + (-qJDD(2) * t177 - t156 * t429 - t306 * t96) * t301 + (t178 * qJDD(2) - t155 * t429 - t177 * t345 - t95 * t306) * t302 + t439, t96 * t178 + t156 * t160 + t95 * t177 + t155 * t159 - g(1) * t294 - g(2) * (t310 * t374 + t437) - t240 * t492 + (-t306 * t354 - t378 * t429) * pkin(7), t32, t326, t28, t369, -t324, t162, t123 * t200 - t128 * t342 + t145 * t217 - t16 * t309 + t228 * t92 + t233 * t71 - t274 * t39 + t430 * t54 + t381, t123 * t201 + t127 * t342 + t15 * t309 + t217 * t350 - t228 * t93 - t233 * t70 + t274 * t38 - t430 * t55 - t382, t127 * t54 - t128 * t55 - t145 * t38 - t15 * t200 - t16 * t201 - t350 * t39 + t70 * t92 - t71 * t93 + t439, t15 * t93 + t55 * t38 + t16 * t92 + t54 * t39 + t123 * t233 - t342 * t217 - g(1) * t333 - g(2) * (t387 + t418) t32, t28, -t326, t162, t324, t369, t104 * t71 + t12 * t309 + t128 * t61 + t145 * t47 + t200 * t21 - t228 * t89 + t274 * t35 - t430 * t49 + t381, -t11 * t200 + t12 * t201 - t127 * t49 - t128 * t51 - t145 * t33 + t35 * t350 - t70 * t89 - t71 * t88 + t439, t104 * t70 - t11 * t309 + t127 * t61 - t201 * t21 + t228 * t88 - t274 * t33 - t350 * t47 + t430 * t51 + t382, t11 * t88 + t51 * t33 + t21 * t104 + t61 * t47 + t12 * t89 + t49 * t35 - g(1) * (t333 + t514) - g(2) * (t338 + t418) -t121 * t19 - t43 * t524, t120 * t19 - t121 * t20 + t43 * t523 - t44 * t524, -t121 * t215 - t19 * t309 - t261 * t43 - t430 * t524, t120 * t20 + t44 * t523, t120 * t215 - t20 * t309 - t261 * t44 + t430 * t523, -t215 * t309 - t261 * t430, g(1) * t366 - g(2) * t114 + t10 * t120 - t13 * t430 + t2 * t309 + t90 * t20 - t30 * t215 + t4 * t261 + t36 * t523 + t45 * t44, g(1) * t509 - g(2) * t113 + t10 * t121 + t14 * t430 - t90 * t19 + t31 * t215 - t3 * t261 + t309 * t353 + t36 * t524 - t45 * t43, t120 * t353 - t121 * t2 + t13 * t43 - t14 * t44 + t19 * t30 - t20 * t31 - t3 * t523 - t4 * t524 - t439, -t353 * t31 + t14 * t3 + t2 * t30 + t13 * t4 + t10 * t90 + t45 * t36 - g(1) * (-pkin(5) * t190 + t417 + t514) - g(2) * (pkin(5) * t192 - t306 * t401 + t338) - (pkin(9) * t306 + t396) * t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t436 * t313, t421, t268, t290, qJDD(2) (t380 + t498) * t306 + t438 (-t467 + t498) * t309 + t416, 0, 0, t301 ^ 2 * qJDD(2) + (t301 * t345 - t407) * t302, t356 * t301 + (t334 - t404 + 0.2e1 * t422) * t302, -t398 + t302 * t455 + (-t223 + t432) * t434, t301 * t404 + t302 * t371, -t290 * t302 - t301 * t455 + t306 * t361, t268, qJ(3) * t398 - pkin(2) * t440 + (t327 + t463) * t302 + ((-qJ(3) * t432 - t155) * t306 + (t495 + t169 + (qJD(3) + t378) * t301) * t309) * qJD(1), -t373 * t302 * qJDD(1) + (-t354 + t331 + t297) * t301 + ((-qJ(3) * t431 + t156) * t306 + (-pkin(7) * t223 - t170 + (t378 - t394) * t302) * t309) * qJD(1), t169 * t223 - t170 * t222 + (qJ(3) * t371 + qJD(3) * t222 + t155 * t433 + t96) * t302 + (qJ(3) * t323 + qJD(3) * t223 + t156 * t433 - t95) * t301 - t416, t378 * t286 - t155 * t169 - t156 * t170 + (-t155 * t301 + t156 * t302) * qJD(3) + t327 * pkin(2) + (-t95 * t301 + t96 * t302 - t309 * t380 - t296) * qJ(3), t29, t504, t48, t347, -t506, t406, t123 * t229 - t145 * t216 + t274 * t472 - t281 * t71 + t342 * t442 - t434 * t54 + t336, t123 * t230 - t350 * t216 + t474 * t274 + t281 * t70 + t441 * t342 + t55 * t434 + t538, t145 * t78 - t15 * t229 - t16 * t230 + t350 * t472 + t441 * t54 + t442 * t55 + t340, t15 * t164 - t16 * t163 - t123 * t281 + t342 * t216 - g(3) * (t306 * t487 + t249) + t474 * t55 - t472 * t54 + t380 * (t281 * t306 - t450) t29, t48, -t504, t406, t506, t347, t143 * t71 + t145 * t476 + t21 * t229 + t274 * t473 + t434 * t49 - t442 * t61 + t336, -t11 * t229 + t12 * t230 + t145 * t73 + t350 * t473 - t441 * t49 + t442 * t51 + t340, t143 * t70 - t21 * t230 - t274 * t475 - t350 * t476 - t434 * t51 + t441 * t61 - t538, t11 * t164 + t21 * t143 + t12 * t163 - t385 + t476 * t61 + t475 * t51 + t473 * t49 - t380 * t450 + (-g(3) * t487 + t380 * (pkin(4) * t289 - t391)) * t306, -t151 * t19 + t469 * t524, t150 * t19 - t151 * t20 - t468 * t524 - t469 * t523, -t151 * t215 + t261 * t469 + t434 * t524, t150 * t20 + t468 * t523, t150 * t215 - t261 * t468 - t434 * t523, t261 * t434, t10 * t150 + t108 * t20 + t13 * t434 - t68 * t215 + t484 * t261 - t363 * t527 + t468 * t45 + t483 * t523, t10 * t151 - t108 * t19 - t14 * t434 + t69 * t215 - t485 * t261 - t364 * t527 + t469 * t45 + t483 * t524, -t13 * t469 - t14 * t468 + t150 * t353 - t151 * t2 + t19 * t68 - t20 * t69 - t484 * t524 - t485 * t523 + t416, -t353 * t69 + t2 * t68 + t10 * t108 - t385 + t483 * t45 + t485 * t14 + t484 * t13 + (-g(3) * pkin(5) * t289 + g(1) * t401 + t486 * t490) * t309 + (g(3) * t486 + t380 * (t289 * t501 - t391)) * t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356 - t423, t309 * t361 + t343, -t222 ^ 2 - t223 ^ 2, t155 * t223 - t156 * t222 + t321, 0, 0, 0, 0, 0, 0, t315, -t330, t368, t145 * t55 + t350 * t54 + t317, 0, 0, 0, 0, 0, 0, t315, t368, t330, t145 * t51 - t350 * t49 + t316 + t500, 0, 0, 0, 0, 0, 0, -t20 - t479, t19 + t534, t536 + t537, -t13 * t524 - t14 * t523 + t316 + t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t462, -t403, t46, -t462, -t517, t228, t342 * t350 + t329 - t478, -t145 * t342 + t319, 0, 0, t462, t46, t403, t228, t517, -t462, -t145 * t91 - t322 - t478 + 0.2e1 * t496, pkin(4) * t70 - qJ(5) * t71 + (t51 - t55) * t350 + (t49 - t443) * t145, -t145 * t61 + t350 * t91 + 0.2e1 * t214 - 0.2e1 * t254 - t319, t11 * qJ(5) - t12 * pkin(4) - t61 * t91 - t49 * t55 - g(1) * t392 - g(2) * t393 - g(3) * (-pkin(4) * t458 + t247) + t443 * t51, -t488, -t526, t518, t488, t535, t215, -t237 * t215 + t261 * t470 - t523 * t56 - t2 - t533, t238 * t215 - t261 * t471 - t524 * t56 - t503, t19 * t237 - t20 * t238 + (t13 - t471) * t523 + (-t14 - t470) * t524, -t353 * t238 + t2 * t237 - t45 * t56 - g(1) * (-pkin(5) * t191 + t392) - g(2) * (-pkin(5) * t189 + t393) - g(3) * (-t288 * t419 + t247) + t471 * t14 + t470 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228 + t462, t46, -t274 ^ 2 - t502, t274 * t51 + t322 - t496, 0, 0, 0, 0, 0, 0, -t215 * t308 - t304 * t388 - t350 * t523, t215 * t304 - t308 * t388 - t350 * t524, -t535 * t304 + t518 * t308, -t350 * t45 + t520 * t308 + (-t353 - t482) * t304 + t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, t526, -t518, -t488, -t535, -t215, t520 + t533, t482 + t503, 0, 0;];
tau_reg  = t1;
