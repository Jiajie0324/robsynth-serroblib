% Calculate vector of centrifugal and Coriolis load on the joints for
% S6PRRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6PRRPRP4_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:40:17
% EndTime: 2019-03-08 21:43:57
% DurationCPUTime: 212.99s
% Computational Cost: add. (61610->1583), mult. (169785->2233), div. (0->0), fcn. (195079->10), ass. (0->601)
t1136 = Icges(4,4) + Icges(5,6);
t1120 = Icges(4,1) + Icges(5,2);
t1102 = -Icges(5,1) - Icges(4,3);
t1131 = Icges(5,4) - Icges(4,5);
t1084 = Icges(5,5) - Icges(4,6);
t1083 = Icges(4,2) + Icges(5,3);
t1085 = Icges(6,4) + Icges(7,4);
t616 = sin(pkin(10));
t618 = cos(pkin(10));
t625 = cos(qJ(2));
t622 = sin(qJ(2));
t907 = cos(pkin(6));
t756 = t622 * t907;
t590 = t616 * t625 + t618 * t756;
t621 = sin(qJ(3));
t617 = sin(pkin(6));
t624 = cos(qJ(3));
t871 = t617 * t624;
t540 = t590 * t621 + t618 * t871;
t1135 = t1136 * t540;
t723 = t616 * t756;
t592 = t618 * t625 - t723;
t542 = t592 * t621 - t616 * t871;
t1134 = t1136 * t542;
t873 = t617 * t621;
t543 = t592 * t624 + t616 * t873;
t1133 = t1136 * t543;
t541 = t590 * t624 - t618 * t873;
t1132 = t1136 * t541;
t1087 = Icges(6,1) + Icges(7,1);
t1070 = Icges(6,5) + Icges(7,5);
t1069 = Icges(6,2) + Icges(7,2);
t1068 = Icges(6,6) + Icges(7,6);
t1082 = Icges(6,3) + Icges(7,3);
t755 = t625 * t907;
t669 = -t616 * t622 + t618 * t755;
t1101 = t1083 * t540 - t1084 * t669 - t1132;
t670 = -t616 * t755 - t618 * t622;
t1100 = t1083 * t542 - t1084 * t670 - t1133;
t1010 = t1084 * t540 + t1102 * t669 - t1131 * t541;
t1009 = t1084 * t542 + t1102 * t670 - t1131 * t543;
t1099 = t1120 * t541 + t1131 * t669 - t1135;
t1098 = t1120 * t543 + t1131 * t670 - t1134;
t620 = sin(qJ(5));
t623 = cos(qJ(5));
t434 = t540 * t623 + t620 * t669;
t1130 = t1085 * t434;
t436 = t542 * t623 + t620 * t670;
t1129 = t1085 * t436;
t872 = t617 * t622;
t593 = t621 * t872 - t624 * t907;
t868 = t620 * t625;
t546 = t593 * t623 + t617 * t868;
t1128 = t1085 * t546;
t1127 = t1136 * t593;
t594 = t621 * t907 + t622 * t871;
t1126 = t1136 * t594;
t866 = t623 * t625;
t876 = t593 * t620;
t547 = t617 * t866 - t876;
t1125 = t1085 * t547;
t882 = t542 * t620;
t437 = -t623 * t670 + t882;
t1124 = t1085 * t437;
t885 = t540 * t620;
t435 = -t623 * t669 + t885;
t1123 = t1085 * t435;
t807 = qJD(3) * t590;
t570 = t669 * qJD(2);
t805 = qJD(3) * t617;
t964 = -t618 * t805 + t570;
t427 = t621 * t964 + t624 * t807;
t571 = t590 * qJD(2);
t185 = -qJD(5) * t435 + t427 * t623 - t571 * t620;
t653 = qJD(5) * t434 + t427 * t620;
t186 = t571 * t623 + t653;
t804 = qJD(3) * t621;
t428 = -t590 * t804 + t624 * t964;
t1122 = -t1068 * t185 - t1070 * t186 - t1082 * t428;
t572 = t670 * qJD(2);
t429 = qJD(3) * t543 + t572 * t621;
t810 = qJD(2) * t625;
t573 = -qJD(2) * t723 + t618 * t810;
t187 = -qJD(5) * t437 + t429 * t623 - t573 * t620;
t652 = qJD(5) * t436 + t429 * t620;
t188 = t573 * t623 + t652;
t430 = -t592 * t804 + (t616 * t805 + t572) * t624;
t1121 = -t1068 * t187 - t1070 * t188 - t1082 * t430;
t1118 = -t1068 * t428 - t1069 * t185 - t1085 * t186;
t1117 = -t1068 * t430 - t1069 * t187 - t1085 * t188;
t1116 = t1070 * t428 + t1085 * t185 + t1087 * t186;
t1115 = t1070 * t430 + t1085 * t187 + t1087 * t188;
t1035 = -t1010 * t669 + t1099 * t541 + t1101 * t540;
t1034 = -t1009 * t669 + t1098 * t541 + t1100 * t540;
t1033 = -t1010 * t670 + t1099 * t543 + t1101 * t542;
t1032 = -t1009 * t670 + t1098 * t543 + t1100 * t542;
t870 = t617 * t625;
t1031 = -t1010 * t870 + t1099 * t594 + t1101 * t593;
t1030 = -t1009 * t870 + t1098 * t594 + t1100 * t593;
t771 = t617 * t810;
t544 = qJD(3) * t594 + t621 * t771;
t811 = qJD(2) * t622;
t772 = t617 * t811;
t316 = qJD(5) * t547 + t544 * t623 - t620 * t772;
t650 = qJD(5) * t546 + t544 * t620;
t317 = t623 * t772 + t650;
t803 = qJD(3) * t622;
t769 = t617 * t803;
t545 = -t621 * t769 + (qJD(3) * t907 + t771) * t624;
t1114 = t1068 * t316 + t1070 * t317 + t1082 * t545;
t1113 = t1068 * t545 + t1069 * t316 + t1085 * t317;
t1112 = t1070 * t545 + t1085 * t316 + t1087 * t317;
t1026 = t1068 * t434 + t1070 * t435 + t1082 * t541;
t1025 = t1068 * t436 + t1070 * t437 + t1082 * t543;
t1024 = t1068 * t541 + t1069 * t434 + t1123;
t1023 = t1068 * t543 + t1069 * t436 + t1124;
t1022 = t1070 * t541 + t1087 * t435 + t1130;
t1021 = t1070 * t543 + t1087 * t437 + t1129;
t1111 = -t1084 * t427 + t1102 * t571 + t1131 * t428;
t1110 = -t1084 * t429 + t1102 * t573 + t1131 * t430;
t1109 = t1083 * t427 + t1084 * t571 - t1136 * t428;
t1108 = t1083 * t429 + t1084 * t573 - t1136 * t430;
t1107 = t1120 * t428 - t1131 * t571 - t1136 * t427;
t1106 = t1120 * t430 - t1131 * t573 - t1136 * t429;
t1008 = t1068 * t546 - t1070 * t547 + t1082 * t594;
t1007 = t1068 * t594 + t1069 * t546 - t1125;
t1006 = t1070 * t594 - t1087 * t547 + t1128;
t1105 = -t1084 * t544 + t1102 * t772 + t1131 * t545;
t1104 = t1083 * t544 + t1084 * t772 - t1136 * t545;
t1103 = t1120 * t545 - t1131 * t772 - t1136 * t544;
t1097 = t1083 * t593 - t1084 * t870 - t1126;
t1096 = t1120 * t594 + t1131 * t870 - t1127;
t996 = t1084 * t593 + t1102 * t870 - t1131 * t594;
t1060 = rSges(7,1) + pkin(5);
t1095 = -t1084 * t621 + t1131 * t624;
t813 = qJD(2) * t617;
t611 = t616 * t813;
t556 = -qJD(3) * t670 + t611;
t923 = -t556 / 0.2e1;
t812 = qJD(2) * t618;
t773 = t617 * t812;
t557 = -qJD(3) * t669 - t773;
t921 = -t557 / 0.2e1;
t615 = qJD(2) * t907;
t601 = -t625 * t805 + t615;
t913 = -t601 / 0.2e1;
t1059 = -t1022 * t186 - t1024 * t185 - t1026 * t428 - t1116 * t435 + t1118 * t434 + t1122 * t541;
t1058 = -t1021 * t186 - t1023 * t185 - t1025 * t428 - t1115 * t435 + t1117 * t434 + t1121 * t541;
t1057 = -t1022 * t188 - t1024 * t187 - t1026 * t430 - t1116 * t437 + t1118 * t436 + t1122 * t543;
t1056 = -t1021 * t188 - t1023 * t187 - t1025 * t430 - t1115 * t437 + t1117 * t436 + t1121 * t543;
t1055 = -t1022 * t317 - t1024 * t316 - t1026 * t545 + t1116 * t547 + t1118 * t546 + t1122 * t594;
t1054 = -t1021 * t317 - t1023 * t316 - t1025 * t545 + t1115 * t547 + t1117 * t546 + t1121 * t594;
t1050 = t1006 * t186 + t1007 * t185 + t1008 * t428 + t1112 * t435 + t1113 * t434 + t1114 * t541;
t1049 = t1006 * t188 + t1007 * t187 + t1008 * t430 + t1112 * t437 + t1113 * t436 + t1114 * t543;
t1048 = t1006 * t317 + t1007 * t316 + t1008 * t545 - t1112 * t547 + t1113 * t546 + t1114 * t594;
t1094 = t1010 * t571 + t1099 * t428 + t1101 * t427 + t1107 * t541 + t1109 * t540 + t1111 * t669;
t1093 = t1009 * t571 + t1098 * t428 + t1100 * t427 + t1106 * t541 + t1108 * t540 + t1110 * t669;
t1092 = t1010 * t573 + t1099 * t430 + t1101 * t429 + t1107 * t543 + t1109 * t542 + t1111 * t670;
t1091 = t1009 * t573 + t1098 * t430 + t1100 * t429 + t1106 * t543 + t1108 * t542 + t1110 * t670;
t1090 = (t1010 * t811 + t1111 * t625) * t617 + t1107 * t594 + t1109 * t593 + t1099 * t545 + t1101 * t544;
t1089 = (t1009 * t811 + t1110 * t625) * t617 + t1106 * t594 + t1108 * t593 + t1098 * t545 + t1100 * t544;
t981 = t1022 * t435 + t1024 * t434 + t1026 * t541;
t980 = t1021 * t435 + t1023 * t434 + t1025 * t541;
t979 = t1022 * t437 + t1024 * t436 + t1026 * t543;
t978 = t1021 * t437 + t1023 * t436 + t1025 * t543;
t1038 = t1096 * t428 + t1097 * t427 + t1103 * t541 + t1104 * t540 + t1105 * t669 + t571 * t996;
t1037 = t1096 * t430 + t1097 * t429 + t1103 * t543 + t1104 * t542 + t1105 * t670 + t573 * t996;
t977 = -t1022 * t547 + t1024 * t546 + t1026 * t594;
t976 = -t1021 * t547 + t1023 * t546 + t1025 * t594;
t1036 = (t1105 * t625 + t811 * t996) * t617 + t1103 * t594 + t1104 * t593 + t1096 * t545 + t1097 * t544;
t975 = t1006 * t435 + t1007 * t434 + t1008 * t541;
t974 = t1006 * t437 + t1007 * t436 + t1008 * t543;
t968 = -t1006 * t547 + t1007 * t546 + t1008 * t594;
t1029 = t1096 * t541 + t1097 * t540 - t669 * t996;
t1028 = t1096 * t543 + t1097 * t542 - t670 * t996;
t1027 = t1096 * t594 + t1097 * t593 - t870 * t996;
t1081 = t1030 * t573 + t1031 * t571;
t1080 = t1032 * t573 + t1033 * t571;
t1079 = t1034 * t573 + t1035 * t571;
t1078 = t1083 * t621 - t1136 * t624;
t1077 = t1120 * t624 - t1136 * t621;
t1076 = t1068 * t623 + t1070 * t620;
t1075 = t1069 * t623 + t1085 * t620;
t1074 = t1085 * t623 + t1087 * t620;
t397 = qJD(5) * t543 + t556;
t398 = qJD(5) * t541 + t557;
t531 = qJD(5) * t594 + t601;
t1073 = (-t1087 * t434 + t1024 + t1123) * t398 + (-t1087 * t436 + t1023 + t1124) * t397 + (-t1087 * t546 + t1007 - t1125) * t531;
t809 = qJD(3) * t571;
t306 = qJD(5) * t428 + t809;
t808 = qJD(3) * t573;
t307 = qJD(5) * t430 + t808;
t726 = qJD(2) * t769;
t497 = qJD(5) * t545 + t726;
t1063 = t1050 * t531 - t1058 * t397 - t1059 * t398 + t306 * t981 + t307 * t980 + t497 * t975;
t1072 = -t1063 / 0.2e1 + t1038 * t913 + t1094 * t921 + t1093 * t923 - (t1029 * t772 + t1079) * qJD(3) / 0.2e1;
t1071 = rSges(7,3) + qJ(6);
t1067 = rSges(7,2) * t623 + t1060 * t620;
t993 = (t1096 * t624 + t1097 * t621 + (t1095 * t625 + t1102 * t622) * t617) * t601 + (t1095 * t669 + t1099 * t624 + t1101 * t621 + t1102 * t590) * t557 + (t1095 * t670 + t1098 * t624 + t1100 * t621 + t1102 * t592) * t556;
t1062 = t1049 * t531 - t1056 * t397 - t1057 * t398 + t306 * t979 + t307 * t978 + t497 * t974;
t1061 = t1048 * t531 - t1054 * t397 - t1055 * t398 + t306 * t977 + t307 * t976 + t497 * t968;
t1053 = t397 * t980 + t398 * t981 + t531 * t975;
t1052 = t397 * t978 + t398 * t979 + t531 * t974;
t1051 = t397 * t976 + t398 * t977 + t531 * t968;
t1047 = t1029 * t601 + t1034 * t556 + t1035 * t557;
t1046 = t1028 * t601 + t1032 * t556 + t1033 * t557;
t1041 = t1027 * t601 + t1030 * t556 + t1031 * t557;
t867 = t621 * t623;
t484 = -t590 * t620 + t669 * t867;
t869 = t620 * t621;
t485 = t590 * t623 + t669 * t869;
t878 = t669 * t624;
t1020 = t1068 * t484 + t1070 * t485 + t1082 * t878;
t486 = -t592 * t620 + t670 * t867;
t487 = t592 * t623 + t670 * t869;
t877 = t670 * t624;
t1019 = t1068 * t486 + t1070 * t487 + t1082 * t877;
t1018 = t1068 * t878 + t1069 * t484 + t1085 * t485;
t1017 = t1068 * t877 + t1069 * t486 + t1085 * t487;
t1016 = t1070 * t878 + t1085 * t484 + t1087 * t485;
t1015 = t1070 * t877 + t1085 * t486 + t1087 * t487;
t1014 = -t1068 * t540 + t1075 * t541;
t1013 = -t1068 * t542 + t1075 * t543;
t1012 = -t1070 * t540 + t1074 * t541;
t1011 = -t1070 * t542 + t1074 * t543;
t1005 = t1078 * t669 + t1084 * t590;
t1004 = t1078 * t670 + t1084 * t592;
t1003 = t1077 * t669 - t1131 * t590;
t1002 = t1077 * t670 - t1131 * t592;
t1001 = -t1068 * t593 + t1075 * t594;
t1000 = -t1070 * t593 + t1074 * t594;
t559 = (-t620 * t622 + t621 * t866) * t617;
t560 = (t621 * t868 + t622 * t623) * t617;
t865 = t624 * t625;
t783 = t617 * t865;
t999 = t1068 * t559 + t1070 * t560 + t1082 * t783;
t998 = t1068 * t783 + t1069 * t559 + t1085 * t560;
t997 = t1070 * t783 + t1085 * t559 + t1087 * t560;
t995 = (t1078 * t625 + t1084 * t622) * t617;
t994 = (t1077 * t625 - t1131 * t622) * t617;
t992 = (t1006 * t620 + t1007 * t623 + t1076 * t594 - t1082 * t593) * t531 + (t1022 * t620 + t1024 * t623 + t1076 * t541 - t1082 * t540) * t398 + (t1021 * t620 + t1023 * t623 + t1076 * t543 - t1082 * t542) * t397;
t991 = (t1083 * t594 - t1096 + t1127) * t601 + (t1083 * t541 - t1099 + t1135) * t557 + (t1083 * t543 - t1098 + t1134) * t556;
t990 = (-t1120 * t593 + t1097 - t1126) * t601 + (-t1120 * t540 + t1101 - t1132) * t557 + (-t1120 * t542 + t1100 - t1133) * t556;
t989 = (-t1084 * t594 - t1131 * t593) * t601 + (-t1084 * t541 - t1131 * t540) * t557 + (-t1084 * t543 - t1131 * t542) * t556;
t988 = t540 * t601 - t557 * t593;
t987 = -t542 * t601 + t556 * t593;
t986 = -t540 * t556 + t542 * t557;
t984 = t1062 + t1037 * t601 + t1092 * t557 + t1091 * t556 + (t1028 * t772 + t1080) * qJD(3);
t983 = t1061 + t1036 * t601 + t1090 * t557 + t1089 * t556 + (t1027 * t772 + t1081) * qJD(3);
t311 = pkin(4) * t573 + pkin(9) * t430;
t446 = -pkin(4) * t670 + pkin(9) * t543;
t529 = qJD(4) * t542;
t166 = pkin(3) * t430 + qJ(4) * t429 + t529;
t364 = pkin(3) * t543 + qJ(4) * t542;
t494 = pkin(2) * t572 + pkin(8) * t573;
t450 = t494 * t615;
t600 = (pkin(2) * t625 + pkin(8) * t622) * t617;
t585 = qJD(2) * t600;
t659 = qJD(4) * t427 + t601 * t166 + t364 * t726 - t585 * t611 + t450;
t525 = pkin(3) * t594 + qJ(4) * t593;
t558 = -pkin(4) * t870 + t594 * pkin(9);
t816 = -t525 - t558;
t738 = qJD(3) * t816;
t583 = qJD(4) * t593;
t296 = pkin(3) * t545 + qJ(4) * t544 + t583;
t501 = pkin(4) * t772 + t545 * pkin(9);
t840 = -t296 - t501;
t633 = t601 * t311 + t446 * t726 + t556 * t840 + t573 * t738 + t659;
t909 = pkin(5) * t623;
t835 = -rSges(7,1) * t547 + rSges(7,2) * t546 + pkin(5) * t876 + t1071 * t594 - t870 * t909;
t852 = rSges(7,1) * t437 + rSges(7,2) * t436 + pkin(5) * t882 + t1071 * t543 - t670 * t909;
t764 = t909 * t622;
t797 = qJD(6) * t594;
t862 = rSges(7,1) * t317 + rSges(7,2) * t316 + pkin(5) * t650 + t1071 * t545 + t764 * t813 + t797;
t799 = qJD(6) * t543;
t863 = rSges(7,1) * t188 + rSges(7,2) * t187 + pkin(5) * t652 + t1071 * t430 + t573 * t909 + t799;
t14 = qJD(6) * t428 - t307 * t835 - t397 * t862 + t497 * t852 + t531 * t863 + t633;
t982 = 0.2e1 * t14;
t445 = -pkin(4) * t669 + pkin(9) * t541;
t360 = pkin(3) * t541 + qJ(4) * t540;
t513 = pkin(2) * t590 - pkin(8) * t669;
t515 = pkin(2) * t592 - pkin(8) * t670;
t765 = t513 * t611 + t515 * t773 + qJD(1);
t711 = t556 * t360 + t583 + t765;
t829 = -t364 - t446;
t651 = t556 * t445 + t557 * t829 + t711;
t853 = -rSges(7,1) * t435 - rSges(7,2) * t434 - pkin(5) * t885 - t1071 * t541 + t669 * t909;
t37 = -t397 * t853 - t398 * t852 + t651 + t797;
t973 = t37 * t853;
t527 = qJD(4) * t540;
t599 = (pkin(2) * t622 - pkin(8) * t625) * t617;
t684 = t515 * t615 - t599 * t611;
t664 = t601 * t364 + t527 + t684;
t637 = t601 * t446 + t556 * t816 + t664;
t800 = qJD(6) * t541;
t45 = -t397 * t835 + t531 * t852 + t637 + t800;
t972 = t45 * t852;
t753 = t907 * t513;
t874 = t617 * t618;
t654 = (-t599 * t874 - t753) * qJD(2);
t648 = t557 * t525 + t529 + t654;
t830 = -t360 - t445;
t634 = t557 * t558 + t601 * t830 + t648;
t46 = t398 * t835 + t531 * t853 + t634 + t799;
t971 = t46 * t835;
t488 = rSges(3,1) * t570 - rSges(3,2) * t571;
t489 = rSges(3,1) * t572 - rSges(3,2) * t573;
t688 = t488 * t616 + t489 * t618;
t970 = t688 * t813;
t864 = rSges(7,1) * t186 + rSges(7,2) * t185 + pkin(5) * t653 + t1071 * t428 + t571 * t909 + t800;
t113 = rSges(6,1) * t188 + rSges(6,2) * t187 + rSges(6,3) * t430;
t858 = -t166 - t311;
t969 = -t113 + t858;
t182 = rSges(6,1) * t437 + rSges(6,2) * t436 + rSges(6,3) * t543;
t960 = -t182 + t829;
t967 = t1067 * t541 - t1071 * t540;
t966 = t1067 * t543 - t1071 * t542;
t291 = -rSges(5,1) * t669 - rSges(5,2) * t541 + rSges(5,3) * t540;
t843 = -t291 - t360;
t292 = -rSges(5,1) * t670 - rSges(5,2) * t543 + rSges(5,3) * t542;
t842 = -t292 - t364;
t305 = -rSges(6,1) * t547 + rSges(6,2) * t546 + rSges(6,3) * t594;
t776 = -t305 + t816;
t965 = t1067 * t594 - t1071 * t593;
t493 = pkin(2) * t570 + pkin(8) * t571;
t825 = t493 * t611 + t494 * t773;
t474 = -rSges(5,1) * t870 - t594 * rSges(5,2) + t593 * rSges(5,3);
t818 = -t474 - t525;
t963 = (t1069 * t547 + t1006 + t1128) * t531 + (-t1069 * t435 + t1022 + t1130) * t398 + (-t1069 * t437 + t1021 + t1129) * t397;
t961 = (t1068 * t547 + t1070 * t546) * t531 + (-t1068 * t435 + t1070 * t434) * t398 + (-t1068 * t437 + t1070 * t436) * t397;
t959 = pkin(5) * t869 + qJ(6) * t624;
t958 = -t852 * t306 - t853 * t307 + t864 * t397 - t863 * t398;
t310 = pkin(4) * t571 + pkin(9) * t428;
t245 = t556 * t310;
t331 = t445 * t808;
t165 = pkin(3) * t428 + qJ(4) * t427 + t527;
t155 = t556 * t165;
t273 = t360 * t808;
t536 = qJD(4) * t544;
t714 = t155 + t273 + t536 + t825;
t739 = qJD(3) * t829;
t636 = t557 * t858 + t571 * t739 + t245 + t331 + t714;
t798 = qJD(6) * t545;
t7 = t636 + t798 + t958;
t956 = 0.2e1 * t7;
t722 = t830 * t803;
t754 = t907 * t493;
t778 = qJD(4) * t429 + t557 * t296 + t525 * t809;
t879 = t585 * t618;
t627 = t557 * t501 + t558 * t809 + (-t165 - t310) * t601 + (-t754 + (t722 - t879) * t617) * qJD(2) + t778;
t15 = qJD(6) * t430 + t306 * t835 + t398 * t862 + t497 * t853 - t531 * t864 + t627;
t955 = 0.2e1 * t15;
t888 = t182 * t306;
t180 = rSges(6,1) * t435 + rSges(6,2) * t434 + rSges(6,3) * t541;
t889 = t180 * t307;
t890 = t113 * t398;
t111 = rSges(6,1) * t186 + rSges(6,2) * t185 + rSges(6,3) * t428;
t891 = t111 * t397;
t16 = t636 - t888 + t889 - t890 + t891;
t954 = 0.2e1 * t16;
t150 = rSges(6,1) * t317 + rSges(6,2) * t316 + rSges(6,3) * t545;
t26 = -t531 * t111 + t398 * t150 - t497 * t180 + t306 * t305 + t627;
t953 = 0.2e1 * t26;
t952 = 0.2e1 * t37;
t951 = 0.2e1 * t45;
t950 = 0.2e1 * t46;
t61 = t180 * t397 - t182 * t398 + t651;
t949 = 0.2e1 * t61;
t68 = t182 * t531 - t305 * t397 + t637;
t948 = 0.2e1 * t68;
t69 = -t531 * t180 + t398 * t305 + t634;
t947 = 0.2e1 * t69;
t83 = t291 * t556 + t557 * t842 + t711;
t946 = 0.2e1 * t83;
t92 = t292 * t601 + t556 * t818 + t664;
t945 = 0.2e1 * t92;
t93 = t557 * t474 + t601 * t843 + t648;
t944 = 0.2e1 * t93;
t943 = -0.2e1 * t557;
t942 = m(5) / 0.2e1;
t941 = m(6) / 0.2e1;
t940 = m(7) / 0.2e1;
t939 = t306 / 0.2e1;
t938 = t307 / 0.2e1;
t937 = -t397 / 0.2e1;
t936 = t397 / 0.2e1;
t935 = -t398 / 0.2e1;
t934 = t398 / 0.2e1;
t931 = t497 / 0.2e1;
t928 = -t531 / 0.2e1;
t927 = t531 / 0.2e1;
t922 = t556 / 0.2e1;
t920 = t557 / 0.2e1;
t912 = t601 / 0.2e1;
t906 = Icges(3,4) * t590;
t905 = Icges(3,4) * t592;
t904 = Icges(3,4) * t622;
t875 = t616 * t617;
t861 = -t165 * t670 + t573 * t360;
t452 = t907 * t494;
t860 = t907 * t166 + t452;
t204 = rSges(5,1) * t573 - rSges(5,2) * t430 + rSges(5,3) * t429;
t859 = -t166 - t204;
t851 = t544 + t986;
t850 = -rSges(7,2) * t435 + t1060 * t434;
t849 = -rSges(7,2) * t437 + t1060 * t436;
t848 = -rSges(7,1) * t485 - rSges(7,2) * t484 - rSges(7,3) * t878 - t590 * t909 - t669 * t959;
t847 = rSges(7,1) * t487 + rSges(7,2) * t486 + rSges(7,3) * t877 + t592 * t909 + t670 * t959;
t358 = -pkin(3) * t540 + qJ(4) * t541;
t846 = qJD(4) * t594 + t556 * t358;
t845 = t427 + t987;
t844 = t429 + t988;
t327 = rSges(5,1) * t772 - rSges(5,2) * t545 + rSges(5,3) * t544;
t841 = -t296 - t327;
t297 = t670 * t360;
t839 = -t445 * t670 - t297;
t362 = -pkin(3) * t542 + qJ(4) * t543;
t836 = qJD(4) * t541 + t601 * t362;
t329 = t364 * t772;
t834 = t446 * t772 + t329;
t833 = t360 * t870 - t525 * t669;
t500 = t907 * t515;
t832 = t907 * t364 + t500;
t523 = -pkin(3) * t593 + qJ(4) * t594;
t831 = qJD(4) * t543 + t557 * t523;
t828 = rSges(7,2) * t547 + t1060 * t546;
t827 = t560 * rSges(7,1) + t559 * rSges(7,2) + rSges(7,3) * t783 + (t625 * t959 + t764) * t617;
t826 = 0.2e1 * t825;
t824 = t493 * t875 + t494 * t874;
t455 = Icges(3,2) * t669 - Icges(3,6) * t874 + t906;
t508 = Icges(3,1) * t669 - t906;
t823 = -t455 + t508;
t456 = Icges(3,2) * t670 + Icges(3,6) * t875 + t905;
t509 = Icges(3,1) * t670 - t905;
t822 = -t456 + t509;
t581 = Icges(3,4) * t669;
t457 = Icges(3,1) * t590 - Icges(3,5) * t874 + t581;
t506 = -Icges(3,2) * t590 + t581;
t821 = -t457 - t506;
t582 = Icges(3,4) * t670;
t458 = Icges(3,1) * t592 + Icges(3,5) * t875 + t582;
t507 = -Icges(3,2) * t592 + t582;
t820 = -t458 - t507;
t512 = pkin(2) * t669 + pkin(8) * t590;
t514 = pkin(2) * t670 + pkin(8) * t592;
t819 = t512 * t611 + t514 * t773;
t817 = t513 * t875 + t515 * t874;
t565 = Icges(3,6) * t907 + (Icges(3,2) * t625 + t904) * t617;
t597 = (Icges(3,1) * t625 - t904) * t617;
t815 = -t565 + t597;
t612 = Icges(3,4) * t870;
t566 = Icges(3,1) * t872 + Icges(3,5) * t907 + t612;
t596 = -Icges(3,2) * t872 + t612;
t814 = -t566 - t596;
t806 = qJD(3) * t592;
t802 = qJD(4) * t621;
t801 = qJD(5) * t624;
t796 = qJD(6) * t624;
t794 = 2 * m(3);
t793 = 2 * m(4);
t792 = 0.2e1 * m(5);
t791 = 0.2e1 * m(6);
t790 = 0.2e1 * m(7);
t789 = 0.2e1 * t670;
t788 = 0.2e1 * t616;
t787 = 0.2e1 * t618;
t786 = 0.2e1 * t625;
t784 = -0.2e1 * t809;
t781 = -t150 + t840;
t780 = t165 * t870 - t296 * t669 + t571 * t525;
t779 = t907 * t311 + t860;
t777 = -t585 + t841;
t775 = t907 * t446 + t832;
t774 = -t599 + t818;
t763 = t809 / 0.2e1;
t762 = t808 / 0.2e1;
t752 = t794 / 0.2e1;
t751 = -t793 / 0.2e1;
t750 = t793 / 0.2e1;
t749 = -t791 / 0.2e1;
t748 = -t790 / 0.2e1;
t328 = rSges(4,1) * t545 - rSges(4,2) * t544 + rSges(4,3) * t772;
t747 = t617 * (-t328 - t585);
t475 = t594 * rSges(4,1) - t593 * rSges(4,2) - rSges(4,3) * t870;
t746 = t617 * (-t475 - t599);
t741 = t843 * t622;
t740 = t818 * t573;
t737 = 0.2e1 * t811;
t736 = t858 - t863;
t735 = t840 - t862;
t734 = -t585 + t781;
t733 = -t310 * t670 + t573 * t445 + t861;
t732 = t165 * t875 + t166 * t874 + t824;
t731 = t829 - t852;
t730 = t816 - t835;
t729 = -t599 + t776;
t728 = t360 * t875 + t364 * t874 + t817;
t727 = t445 * t870 - t558 * t669 + t833;
t725 = t772 / 0.2e1;
t721 = rSges(4,1) * t624 - rSges(4,2) * t621;
t720 = rSges(6,1) * t620 + rSges(6,2) * t623;
t718 = rSges(5,2) * t624 - rSges(5,3) * t621;
t717 = pkin(3) * t624 + qJ(4) * t621;
t716 = t61 * t111 + t16 * t180;
t715 = -t585 + t735;
t491 = t717 * t669;
t713 = t360 * t806 + t556 * t491 + t802 * t870 + t819;
t712 = -t599 + t730;
t293 = rSges(4,1) * t541 - rSges(4,2) * t540 - rSges(4,3) * t669;
t294 = rSges(4,1) * t543 - rSges(4,2) * t542 - rSges(4,3) * t670;
t692 = t293 * t573 - t294 * t571;
t691 = -t455 * t622 + t457 * t625;
t690 = -t456 * t622 + t458 * t625;
t461 = rSges(3,1) * t590 + rSges(3,2) * t669 - rSges(3,3) * t874;
t462 = rSges(3,1) * t592 + rSges(3,2) * t670 + rSges(3,3) * t875;
t689 = t461 * t616 + t462 * t618;
t687 = -t565 * t622 + t566 * t625;
t686 = qJD(3) * t725;
t685 = t514 * t615 - t600 * t611;
t683 = t310 * t875 + t311 * t874 + t732;
t682 = t310 * t870 - t501 * t669 + t571 * t558 + t780;
t681 = t445 * t875 + t446 * t874 + t728;
t598 = (rSges(3,1) * t625 - rSges(3,2) * t622) * t617;
t595 = (Icges(3,5) * t625 - Icges(3,6) * t622) * t617;
t674 = t291 * t573 + t571 * t842;
t672 = t166 * t943 + t364 * t784 + 0.2e1 * t155 + 0.2e1 * t273 + 0.2e1 * t536 + t826;
t663 = t37 * t864 - t7 * t853;
t662 = -t165 * t907 - t754;
t661 = -t360 * t907 - t753;
t567 = t717 * t870;
t660 = -t512 * t615 + t525 * t807 + t557 * t567 + t670 * t802;
t492 = t717 * t670;
t658 = t364 * t769 + t601 * t492 + t669 * t802 + t685;
t657 = pkin(9) * t986 - t362 * t557 + t846;
t656 = pkin(9) * t987 - t523 * t556 + t836;
t655 = pkin(9) * t988 - t358 * t601 + t831;
t568 = t907 * rSges(3,3) + (rSges(3,1) * t622 + rSges(3,2) * t625) * t617;
t308 = (t462 * t907 - t568 * t875) * qJD(2);
t309 = (-t461 * t907 - t568 * t874) * qJD(2);
t649 = t311 * t943 + t446 * t784 + 0.2e1 * t245 + 0.2e1 * t331 + t672;
t647 = -t310 * t907 + t662;
t646 = -t445 * t907 + t661;
t502 = pkin(4) * t590 + pkin(9) * t878;
t503 = pkin(4) * t592 + pkin(9) * t877;
t635 = t445 * t806 + t556 * t502 + (-t492 - t503) * t557 + t590 * t739 + t713;
t588 = (pkin(4) * t622 + pkin(9) * t865) * t617;
t632 = t446 * t769 + t601 * t503 + (-t567 - t588) * t556 + t592 * t738 + t658;
t626 = t557 * t588 + t558 * t807 + (-t491 - t502) * t601 + (-t600 * t812 + t722) * t617 + t660;
t580 = qJD(2) * t598;
t577 = qJD(2) * t597;
t576 = (Icges(3,4) * t625 - Icges(3,2) * t622) * t813;
t575 = qJD(2) * t595;
t574 = (t625 * t801 + t803) * t617;
t555 = (rSges(5,1) * t622 - t625 * t718) * t617;
t554 = (rSges(4,3) * t622 + t625 * t721) * t617;
t524 = -rSges(4,1) * t593 - rSges(4,2) * t594;
t522 = rSges(5,2) * t593 + rSges(5,3) * t594;
t511 = rSges(3,1) * t670 - rSges(3,2) * t592;
t510 = rSges(3,1) * t669 - rSges(3,2) * t590;
t505 = Icges(3,5) * t670 - Icges(3,6) * t592;
t504 = Icges(3,5) * t669 - Icges(3,6) * t590;
t499 = t670 * t801 + t806;
t498 = t669 * t801 + t807;
t483 = Icges(3,1) * t572 - Icges(3,4) * t573;
t482 = Icges(3,1) * t570 - Icges(3,4) * t571;
t481 = Icges(3,4) * t572 - Icges(3,2) * t573;
t480 = Icges(3,4) * t570 - Icges(3,2) * t571;
t479 = Icges(3,5) * t572 - Icges(3,6) * t573;
t478 = Icges(3,5) * t570 - Icges(3,6) * t571;
t415 = t560 * rSges(6,1) + t559 * rSges(6,2) + rSges(6,3) * t783;
t396 = -rSges(6,3) * t593 + t594 * t720;
t388 = rSges(5,1) * t592 - t670 * t718;
t387 = rSges(5,1) * t590 - t669 * t718;
t386 = rSges(4,3) * t592 + t670 * t721;
t385 = rSges(4,3) * t590 + t669 * t721;
t372 = rSges(6,1) * t546 + rSges(6,2) * t547;
t363 = -rSges(4,1) * t542 - rSges(4,2) * t543;
t361 = rSges(5,2) * t542 + rSges(5,3) * t543;
t359 = -rSges(4,1) * t540 - rSges(4,2) * t541;
t357 = rSges(5,2) * t540 + rSges(5,3) * t541;
t261 = -rSges(6,3) * t542 + t543 * t720;
t259 = -rSges(6,3) * t540 + t541 * t720;
t242 = t689 * t813 + qJD(1);
t238 = rSges(6,1) * t487 + rSges(6,2) * t486 + rSges(6,3) * t877;
t236 = rSges(6,1) * t485 + rSges(6,2) * t484 + rSges(6,3) * t878;
t222 = rSges(6,1) * t436 - rSges(6,2) * t437;
t220 = rSges(6,1) * t434 - rSges(6,2) * t435;
t203 = rSges(5,1) * t571 - rSges(5,2) * t428 + rSges(5,3) * t427;
t202 = rSges(4,1) * t430 - rSges(4,2) * t429 + rSges(4,3) * t573;
t201 = rSges(4,1) * t428 - rSges(4,2) * t427 + rSges(4,3) * t571;
t138 = -t601 * t293 + t557 * t475 + t654;
t137 = t294 * t601 - t475 * t556 + t684;
t124 = t293 * t556 - t294 * t557 + t765;
t89 = t475 * t809 - t601 * t201 + t557 * t328 + (-t754 + (-t293 * t803 - t879) * t617) * qJD(2);
t88 = -t475 * t808 + t202 * t601 - t328 * t556 + t450 + (t294 * t803 - t585 * t616) * t813;
t70 = qJD(3) * t692 + t201 * t556 - t202 * t557 + t825;
t48 = t474 * t809 + t557 * t327 + (-t165 - t203) * t601 + (-t754 + (qJD(3) * t741 - t879) * t617) * qJD(2) + t778;
t47 = t204 * t601 + t841 * t556 + (t292 * t772 + t740) * qJD(3) + t659;
t42 = qJD(3) * t674 + t203 * t556 + t557 * t859 + t714;
t25 = t113 * t531 - t150 * t397 + t182 * t497 - t305 * t307 + t633;
t1 = [m(4) * t826 / 0.2e1 + t672 * t942 + (t649 - 0.2e1 * t888 + 0.2e1 * t889 - 0.2e1 * t890 + 0.2e1 * t891) * t941 + (m(4) * t293 + m(5) * t291) * t808 + (-m(4) * t294 - m(5) * t292) * t809 + (-m(4) * t202 - m(5) * t204) * t557 + (m(4) * t201 + m(5) * t203) * t556 + t752 * t970 + (t649 + 0.2e1 * t798 + 0.2e1 * t958) * t940; (t1049 * t907 + (-t1056 * t616 + t1057 * t618) * t617) * t936 + (t1050 * t907 + (-t1058 * t616 + t1059 * t618) * t617) * t934 + t984 * t875 / 0.2e1 + (t618 * ((-t505 * t874 + t590 * t822 - t669 * t820) * t875 - (-t504 * t874 + t590 * t823 - t669 * t821) * t874 + (t590 * t815 - t595 * t874 - t669 * t814) * t907) / 0.2e1 - t616 * ((t505 * t875 + t592 * t822 - t670 * t820) * t875 - (t504 * t875 + t592 * t823 - t670 * t821) * t874 + (t592 * t815 + t595 * t875 - t670 * t814) * t907) / 0.2e1) * t617 * qJD(2) ^ 2 + ((t542 * t995 + t543 * t994 + t592 * t996) * t601 + t993 * t670 + (t1003 * t543 + t1005 * t542 + t1010 * t592) * t557 + (t1002 * t543 + t1004 * t542 + t1009 * t592) * t556 + (t1028 * t872 + t1032 * t592 + t1033 * t590) * qJD(3)) * t923 + (t1028 * t907 + (t1032 * t616 - t1033 * t618) * t617) * t762 + ((t540 * t995 + t541 * t994 + t590 * t996) * t601 + t993 * t669 + (t1003 * t541 + t1005 * t540 + t1010 * t590) * t557 + (t1002 * t541 + t1004 * t540 + t1009 * t590) * t556 + (t1029 * t872 + t1034 * t592 + t1035 * t590) * qJD(3)) * t921 + (t1029 * t907 + (t1034 * t616 - t1035 * t618) * t617) * t763 + (t968 * t574 + (t1006 * t560 + t1007 * t559 + t1008 * t783 + t546 * t998 - t547 * t997 + t594 * t999) * t531 + t976 * t499 + t977 * t498 + (-t1016 * t547 + t1018 * t546 + t1020 * t594 + t1022 * t560 + t1024 * t559 + t1026 * t783) * t398 + (-t1015 * t547 + t1017 * t546 + t1019 * t594 + t1021 * t560 + t1023 * t559 + t1025 * t783) * t397) * t928 + (t968 * t907 + (t616 * t976 - t618 * t977) * t617) * t931 - t1046 * t806 / 0.2e1 - t1047 * t807 / 0.2e1 - t1051 * t574 / 0.2e1 - t1052 * t499 / 0.2e1 - t1053 * t498 / 0.2e1 + (t1048 * t907 + (-t1054 * t616 + t1055 * t618) * t617) * t927 + (0.2e1 * t48 * (-t291 * t907 + t661) + (-t203 * t907 + t662) * t944 + 0.2e1 * t47 * (t292 * t907 + t832) + (t204 * t907 + t860) * t945 + 0.2e1 * t42 * t728 + t732 * t946 + ((t83 * t204 + t42 * t292 + t48 * t774 + t777 * t93) * t787 + (t83 * t203 + t42 * t291 + t47 * t774 + t777 * t92) * t788) * t617) * t942 + (t69 * (-t574 * t180 - t531 * t236 + t498 * t305 + t398 * t415 + t626) + t68 * (t182 * t574 + t238 * t531 - t305 * t499 - t397 * t415 + t632) + t61 * (t180 * t499 - t182 * t498 + t236 * t397 - t238 * t398 + t635)) * t749 + (t89 * (-t293 * t907 + t618 * t746 - t753) + t138 * (-t201 * t907 + t618 * t747 - t754) + t88 * (t294 * t907 + t616 * t746 + t500) + t137 * (t202 * t907 + t616 * t747 + t452) + t70 * ((t293 * t616 + t294 * t618) * t617 + t817) + t124 * ((t201 * t616 + t202 * t618) * t617 + t824)) * t750 + (t975 * t907 + (t616 * t980 - t618 * t981) * t617) * t939 - t1041 * t769 / 0.2e1 + t983 * t907 / 0.2e1 + (t1036 * t907 + (t1089 * t616 - t1090 * t618) * t617) * t912 + (t1037 * t907 + (t1091 * t616 - t1092 * t618) * t617) * t922 + (t1038 * t907 + (t1093 * t616 - t1094 * t618) * t617) * t920 + t874 * t1072 + ((t907 * t575 + (qJD(2) * t687 + t576 * t625 + t577 * t622) * t617) * t907 + (-(t907 * t478 + (qJD(2) * t691 + t480 * t625 + t482 * t622) * t617) * t618 + (t907 * t479 + (qJD(2) * t690 + t481 * t625 + t483 * t622) * t617) * t616) * t617) * t615 + (t138 * (-t601 * t385 + t557 * t554 + (-t293 * t872 + t475 * t590) * qJD(3) + (-t512 * t907 - t600 * t874) * qJD(2)) + t137 * (t386 * t601 - t554 * t556 + (t294 * t872 - t475 * t592) * qJD(3) + t685) + t124 * (t385 * t556 - t386 * t557 + (t293 * t592 - t294 * t590) * qJD(3) + t819)) * t751 + (t974 * t574 + (t1006 * t487 + t1007 * t486 + t1008 * t877 + t436 * t998 + t437 * t997 + t543 * t999) * t531 + t978 * t499 + t979 * t498 + (t1016 * t437 + t1018 * t436 + t1020 * t543 + t1022 * t487 + t1024 * t486 + t1026 * t877) * t398 + (t1015 * t437 + t1017 * t436 + t1019 * t543 + t1021 * t487 + t1023 * t486 + t1025 * t877) * t397) * t937 + (t974 * t907 + (t616 * t978 - t618 * t979) * t617) * t938 + (t975 * t574 + (t1006 * t485 + t1007 * t484 + t1008 * t878 + t434 * t998 + t435 * t997 + t541 * t999) * t531 + t980 * t499 + t981 * t498 + (t1016 * t435 + t1018 * t434 + t1020 * t541 + t1022 * t485 + t1024 * t484 + t1026 * t878) * t398 + (t1015 * t435 + t1017 * t434 + t1019 * t541 + t1021 * t485 + t1023 * t484 + t1025 * t878) * t397) * t935 + (t1027 * t907 + (t1030 * t616 - t1031 * t618) * t617) * t686 + ((t593 * t995 + t594 * t994) * t601 + (t1003 * t594 + t1005 * t593) * t557 + (t1002 * t594 + t1004 * t593) * t556 + (t1030 * t592 + t1031 * t590) * qJD(3) + (t993 * t625 + (qJD(3) * t1027 + t1009 * t556 + t1010 * t557 + t601 * t996) * t622) * t617) * t913 - (t242 * (t510 * t616 + t511 * t618) * t813 + (t309 * (-t510 * t907 - t598 * t874) + t308 * (t511 * t907 - t598 * t875)) * qJD(2)) * t794 / 0.2e1 + (t646 * t955 + t647 * t950 + t775 * t982 + t779 * t951 + t681 * t956 + t683 * t952 + ((t15 * t712 + t37 * t863 + t46 * t715 + t7 * t852) * t787 + (t14 * t712 + t45 * t715 + t663) * t788) * t617 + (t852 * t982 + t853 * t955 + t863 * t951 - t864 * t950) * t907) * t940 - (((t507 * t625 + t509 * t622 + t690) * t616 - (t506 * t625 + t508 * t622 + t691) * t618) * t617 * t813 + ((-t504 * t618 + t505 * t616 + t596 * t625 + t597 * t622 + t687) * t813 + t595 * t615) * t907) * t615 / 0.2e1 + (0.2e1 * t309 * (-t488 * t907 - t580 * t874) + 0.2e1 * t308 * (t489 * t907 - t580 * t875) + (t242 * t688 + t689 * t970) * t617) * t752 + ((-t180 * t907 + t646) * t953 + (-t111 * t907 + t647) * t947 + 0.2e1 * t25 * (t182 * t907 + t775) + (t113 * t907 + t779) * t948 + t681 * t954 + t683 * t949 + ((t61 * t113 + t16 * t182 + t26 * t729 + t69 * t734) * t787 + (t25 * t729 + t68 * t734 + t716) * t788) * t617) * t941 - ((-t565 * t571 + t566 * t570 - t575 * t874 + t576 * t669 + t577 * t590) * t907 + (-(-t455 * t571 + t457 * t570 - t478 * t874 + t480 * t669 + t482 * t590) * t618 + (-t456 * t571 + t458 * t570 - t479 * t874 + t481 * t669 + t483 * t590) * t616) * t617) * t773 + ((-t565 * t573 + t566 * t572 + t575 * t875 + t576 * t670 + t577 * t592) * t907 + (-(-t455 * t573 + t457 * t572 + t478 * t875 + t480 * t670 + t482 * t592) * t618 + (-t456 * t573 + t458 * t572 + t479 * t875 + t481 * t670 + t483 * t592) * t616) * t617) * t611 + (t46 * (t398 * t827 + t498 * t835 + t531 * t848 + t574 * t853 + t670 * t796 + t626) + t45 * (-t397 * t827 - t499 * t835 + t531 * t847 + t574 * t852 + t669 * t796 + t632) + t37 * (qJD(6) * t783 - t397 * t848 - t398 * t847 - t498 * t852 - t499 * t853 + t635)) * t748 - m(5) * ((t557 * t555 - t600 * t773 + t660 + (-t387 - t491) * t601) * t944 + (t388 * t601 + t658 + (-t555 - t567) * t556) * t945 + (t387 * t556 + t713 + (-t388 - t492) * t557) * t946 + 0.2e1 * (t93 * (t474 * t590 + t843 * t872) + t92 * (t292 * t872 + t592 * t818) + t83 * (t291 * t592 + t590 * t842)) * qJD(3)) / 0.2e1; ((-t1049 * t625 + t811 * t974) * t617 + t1056 * t670 + t1057 * t669 + t978 * t573 + t979 * t571) * t936 + ((-t1050 * t625 + t811 * t975) * t617 + t1058 * t670 + t1059 * t669 + t980 * t573 + t981 * t571) * t934 - t984 * t670 / 0.2e1 + (t593 * t991 + t594 * t990 + t870 * t989) * t913 + (t540 * t991 + t541 * t990 + t669 * t989) * t921 + (t542 * t991 + t543 * t990 + t670 * t989) * t923 + (-t1028 * t870 - t1032 * t670 - t1033 * t669) * t762 + (-t1029 * t870 - t1034 * t670 - t1035 * t669) * t763 + (t992 * t594 + (-t1000 * t547 + t1001 * t546 - t1008 * t593) * t531 + (-t1012 * t547 + t1014 * t546 - t1026 * t593) * t398 + (-t1011 * t547 + t1013 * t546 - t1025 * t593) * t397 + (-t540 * t977 - t542 * t976 - t593 * t968) * qJD(5)) * t928 + (-t669 * t977 - t670 * t976 - t870 * t968) * t931 + (t1041 + t1051) * t725 + (t1046 + t1052) * t573 / 0.2e1 + (t1047 + t1053) * t571 / 0.2e1 + ((-t1048 * t625 + t811 * t968) * t617 + t1054 * t670 + t1055 * t669 + t976 * t573 + t977 * t571) * t927 + (t138 * (-t359 * t601 + t524 * t557) + t137 * (t363 * t601 - t524 * t556) + t124 * (t359 * t556 - t363 * t557)) * t751 + (t69 * (-t259 * t531 + t396 * t398 + (t180 * t593 - t305 * t540) * qJD(5) + t655) + t68 * (t261 * t531 - t396 * t397 + (-t182 * t593 + t305 * t542) * qJD(5) + t656) + t61 * (t259 * t397 - t261 * t398 + (-t180 * t542 + t182 * t540) * qJD(5) + t657)) * t749 - (t93 * (t522 * t557 + (-t357 - t358) * t601 + t831) + t92 * (t361 * t601 + (-t522 - t523) * t556 + t836) + t83 * (t357 * t556 + (-t361 - t362) * t557 + t846)) * t792 / 0.2e1 - t983 * t870 / 0.2e1 + ((t1027 * t811 - t1036 * t625) * t617 - t1089 * t670 - t1090 * t669 + t1081) * t912 + ((t1028 * t811 - t1037 * t625) * t617 - t1091 * t670 - t1092 * t669 + t1080) * t922 + ((t1029 * t811 - t1038 * t625) * t617 - t1093 * t670 - t1094 * t669 + t1079) * t920 + t669 * t1072 + (t992 * t543 + (t1000 * t437 + t1001 * t436 - t1008 * t542) * t531 + (t1012 * t437 + t1014 * t436 - t1026 * t542) * t398 + (t1011 * t437 + t1013 * t436 - t1025 * t542) * t397 + (-t540 * t979 - t542 * t978 - t593 * t974) * qJD(5)) * t937 + (-t669 * t979 - t670 * t978 - t870 * t974) * t938 + (t992 * t541 + (t1000 * t435 + t1001 * t434 - t1008 * t540) * t531 + (t1012 * t435 + t1014 * t434 - t1026 * t540) * t398 + (t1011 * t435 + t1013 * t434 - t1025 * t540) * t397 + (-t540 * t981 - t542 * t980 - t593 * t975) * qJD(5)) * t935 + (-t669 * t981 - t670 * t980 - t870 * t975) * t939 + (-t1027 * t870 - t1030 * t670 - t1031 * t669) * t686 - m(7) * ((-qJD(6) * t542 + t398 * t965 - t531 * t967 + t655) * t950 + (-qJD(6) * t540 - t397 * t965 + t531 * t966 + t656) * t951 + (-qJD(6) * t593 + t397 * t967 - t398 * t966 + t657) * t952 + 0.2e1 * ((-t46 * t853 - t972) * t593 + (t45 * t835 + t973) * t542 + (t37 * t852 - t971) * t540) * qJD(5)) / 0.2e1 + (t727 * t953 + t682 * t947 + t834 * t948 + t839 * t954 + t733 * t949 - (t25 * t776 + t68 * t781 + t716) * t789 + ((t69 * (-t180 + t830) + t68 * t182) * t737 + (t69 * t111 + t26 * t180 + t25 * t960 + t68 * t969) * t786) * t617 + (t180 * t949 + t776 * t948) * t573 + (t305 * t947 + t949 * t960) * t571 - (t150 * t947 + t305 * t953 + t949 * t969 + t954 * t960) * t669) * t941 + (t727 * t955 + t682 * t950 + t834 * t951 + t839 * t956 + t733 * t952 - (t14 * t730 + t45 * t735 + t663) * t789 + ((t46 * (t830 + t853) + t972) * t737 + (t14 * t731 - t15 * t853 + t45 * t736 + t46 * t864) * t786) * t617 + 0.2e1 * (t45 * t730 - t973) * t573 + 0.2e1 * (t37 * t731 + t971) * t571 - 0.2e1 * (t15 * t835 + t37 * t736 + t46 * t862 + t7 * t731) * t669) * t940 + (t89 * (t293 * t870 - t475 * t669) + t138 * (-t669 * t328 + t571 * t475 + (t201 * t625 - t293 * t811) * t617) + t88 * (-t294 * t870 + t475 * t670) + t137 * (t670 * t328 - t573 * t475 + (-t202 * t625 + t294 * t811) * t617) + t70 * (-t293 * t670 + t294 * t669) + t124 * (-t201 * t670 + t202 * t669 + t692)) * t750 + (t48 * (t291 * t870 - t474 * t669 + t833) + t93 * (-t669 * t327 + t571 * t474 + (qJD(2) * t741 + t203 * t625) * t617 + t780) + t47 * (-t670 * t818 + t842 * t870) + t92 * (t329 - t841 * t670 + t740 + (t292 * t811 + t625 * t859) * t617) + t42 * (-t291 * t670 - t669 * t842 - t297) + t83 * (-t203 * t670 - t669 * t859 + t674 + t861)) * t792 / 0.2e1 + (t1051 * t593 + t1052 * t542 + t1053 * t540) * qJD(5) / 0.2e1; (t14 * t540 + t15 * t542 + t37 * t851 + t45 * t845 + t46 * t844 + t593 * t7) * m(7) + (t16 * t593 + t25 * t540 + t26 * t542 + t61 * t851 + t68 * t845 + t69 * t844) * m(6) + (t42 * t593 + t47 * t540 + t48 * t542 + t83 * t851 + t844 * t93 + t845 * t92) * m(5); (t26 * (-t180 * t594 + t305 * t541) + t69 * (-t111 * t594 + t150 * t541 - t180 * t545 + t305 * t428) + t25 * (t182 * t594 - t305 * t543) + t68 * (t113 * t594 - t150 * t543 + t182 * t545 - t305 * t430) + t16 * (t180 * t543 - t182 * t541) + t61 * (t111 * t543 - t113 * t541 + t180 * t430 - t182 * t428)) * t791 / 0.2e1 + (t69 * (-t220 * t531 + t372 * t398) + t68 * (t222 * t531 - t372 * t397) + t61 * (t220 * t397 - t222 * t398)) * t749 + (t46 * (t398 * t828 - t531 * t850) + t45 * (-t397 * t828 + t531 * t849) + t37 * (t397 * t850 - t398 * t849)) * t748 + (t15 * (t541 * t835 + t594 * t853) + t46 * (t428 * t835 + t541 * t862 + t545 * t853 - t594 * t864) + t14 * (-t543 * t835 + t594 * t852) + t45 * (-t430 * t835 - t543 * t862 + t545 * t852 + t594 * t863) + t7 * (-t541 * t852 - t543 * t853) + t37 * (-t428 * t852 - t430 * t853 - t541 * t863 + t543 * t864)) * t790 / 0.2e1 + (t541 * t981 + t543 * t980 + t594 * t975) * t939 + (t541 * t979 + t543 * t978 + t594 * t974) * t938 + (-t1073 * t437 + t436 * t963 + t543 * t961) * t937 + (t1049 * t594 - t1056 * t543 - t1057 * t541 + t979 * t428 + t978 * t430 + t974 * t545) * t936 + (-t1073 * t435 + t434 * t963 + t541 * t961) * t935 + (t1050 * t594 - t1058 * t543 - t1059 * t541 + t981 * t428 + t980 * t430 + t975 * t545) * t934 + t1053 * t428 / 0.2e1 + t1052 * t430 / 0.2e1 + (t541 * t977 + t543 * t976 + t594 * t968) * t931 + (t1073 * t547 + t963 * t546 + t961 * t594) * t928 + (t1048 * t594 - t1054 * t543 - t1055 * t541 + t977 * t428 + t976 * t430 + t968 * t545) * t927 + t1063 * t541 / 0.2e1 + t1062 * t543 / 0.2e1 + t1051 * t545 / 0.2e1 + t1061 * t594 / 0.2e1; (t14 * t541 + t15 * t543 + t7 * t594 + (-t398 * t594 + t531 * t541 + t430) * t46 + (t397 * t594 - t531 * t543 + t428) * t45 + (-t397 * t541 + t398 * t543 + t545) * t37) * m(7);];
tauc  = t1(:);
