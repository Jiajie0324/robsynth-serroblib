% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRP4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:43:58
% EndTime: 2019-03-08 21:44:08
% DurationCPUTime: 3.84s
% Computational Cost: add. (3478->389), mult. (8381->512), div. (0->0), fcn. (5551->8), ass. (0->225)
t150 = cos(qJ(5));
t147 = sin(qJ(5));
t223 = t147 * qJD(3);
t151 = cos(qJ(3));
t229 = qJD(2) * t151;
t100 = t150 * t229 + t223;
t148 = sin(qJ(3));
t222 = t148 * qJD(2);
t132 = qJD(5) + t222;
t177 = t100 * t132;
t218 = qJD(2) * qJD(3);
t200 = t148 * t218;
t75 = qJD(5) * t100 - t147 * t200;
t286 = t75 - t177;
t285 = t75 + t177;
t271 = pkin(4) + pkin(8);
t149 = sin(qJ(2));
t145 = sin(pkin(6));
t234 = qJD(1) * t145;
t206 = t149 * t234;
t110 = qJD(2) * pkin(8) + t206;
t146 = cos(pkin(6));
t246 = t146 * t151;
t128 = qJD(1) * t246;
t79 = t148 * t110 - t128;
t284 = -qJD(4) - t79;
t225 = qJD(5) * t150;
t226 = qJD(5) * t147;
t152 = cos(qJ(2));
t231 = qJD(2) * t145;
t201 = qJD(1) * t231;
t186 = t152 * t201;
t180 = t148 * t186;
t197 = pkin(4) * qJD(2) + t110;
t233 = qJD(1) * t148;
t203 = t146 * t233;
t43 = t180 + (t151 * t197 + t203) * qJD(3);
t182 = pkin(9) * t148 - qJ(4) * t151;
t221 = t148 * qJD(4);
t160 = qJD(3) * t182 - t221;
t236 = pkin(3) * t200 + t149 * t201;
t53 = qJD(2) * t160 + t236;
t153 = -pkin(3) - pkin(9);
t277 = qJD(4) - t128;
t237 = t197 * t148 + t277;
t55 = t153 * qJD(3) + t237;
t205 = t152 * t234;
t199 = -t148 * qJ(4) - pkin(2);
t97 = t153 * t151 + t199;
t69 = qJD(2) * t97 - t205;
t198 = -t147 * t43 - t150 * t53 - t55 * t225 + t69 * t226;
t23 = -t147 * t69 + t150 * t55;
t283 = -t132 * t23 - t198;
t220 = t150 * qJD(3);
t102 = -t147 * t229 + t220;
t14 = -t102 * qJ(6) + t23;
t13 = t132 * pkin(5) + t14;
t24 = t147 * t55 + t150 * t69;
t7 = -qJD(5) * t24 - t147 * t53 + t150 * t43;
t157 = t75 * qJ(6) + t7;
t135 = t151 * t218;
t191 = pkin(5) * t135;
t2 = -t102 * qJD(6) + t157 + t191;
t15 = -t100 * qJ(6) + t24;
t260 = t15 * t132;
t76 = t102 * qJD(5) - t150 * t200;
t173 = t76 * qJ(6) + t198;
t3 = -t100 * qJD(6) - t173;
t282 = -t147 * (t13 * t132 - t3) + t150 * (t2 + t260);
t227 = qJD(3) * t151;
t108 = t271 * t227;
t119 = t271 * t148;
t244 = t147 * t152;
t228 = qJD(3) * t148;
t137 = pkin(3) * t228;
t82 = t137 + t160;
t266 = t147 * t108 + t119 * t225 + t150 * t82 - t226 * t97 - (t148 * t244 + t149 * t150) * t234;
t280 = t24 * t132 + t7;
t241 = t150 * t152;
t279 = t150 * t108 - (-t147 * t149 + t148 * t241) * t234;
t80 = t151 * t110 + t203;
t73 = -qJD(3) * qJ(4) - t80;
t72 = -qJD(3) * pkin(3) - t284;
t251 = t102 * t132;
t42 = -t76 + t251;
t278 = t76 + t251;
t61 = t147 * t119 + t150 * t97;
t154 = qJD(3) ^ 2;
t168 = -qJ(4) * t227 - t221;
t62 = qJD(2) * t168 + t236;
t89 = t137 + t168;
t275 = qJD(2) * (-t89 + t206) - pkin(8) * t154 - t62;
t211 = t152 * t231;
t155 = qJD(2) ^ 2;
t247 = t145 * t155;
t214 = t149 * t247;
t167 = qJD(3) * t146 + t211;
t248 = t145 * t149;
t215 = t148 * t248;
t63 = -qJD(3) * t215 + t151 * t167;
t274 = qJD(3) * (t151 * t211 + t63) - t148 * t214;
t187 = t148 * t211;
t93 = t146 * t148 + t151 * t248;
t64 = qJD(3) * t93 + t187;
t273 = qJD(3) * (t64 + t187) + t151 * t214;
t272 = t102 ^ 2;
t52 = t110 * t227 + t167 * t233;
t92 = t215 - t246;
t270 = t52 * t92;
t195 = qJ(6) * t151 - t97;
t269 = pkin(5) * t227 + t195 * t225 + (-qJ(6) * t228 - qJD(5) * t119 + qJD(6) * t151 - t82) * t147 + t279;
t224 = qJD(5) * t151;
t210 = t147 * t224;
t164 = t148 * t220 + t210;
t219 = t150 * qJD(6);
t268 = qJ(6) * t164 - t151 * t219 + t266;
t267 = t13 - t14;
t265 = -qJD(5) * t61 - t147 * t82 + t279;
t238 = qJ(6) - t153;
t245 = t147 * t148;
t136 = pkin(4) * t229;
t68 = t136 + t80;
t138 = pkin(3) * t222;
t87 = qJD(2) * t182 + t138;
t31 = -t147 * t87 + t150 * t68;
t264 = (pkin(5) * t151 - qJ(6) * t245) * qJD(2) + t31 - t226 * t238 + t219;
t113 = t238 * t150;
t32 = t147 * t68 + t150 * t87;
t263 = qJ(6) * t150 * t222 + qJD(5) * t113 + t147 * qJD(6) + t32;
t262 = qJD(2) * pkin(2);
t259 = t150 * t75;
t141 = qJD(3) * qJD(4);
t217 = -qJD(3) * t128 + t110 * t228 - t151 * t186;
t45 = -t141 + t217;
t37 = -pkin(4) * t200 - t45;
t257 = t37 * t147;
t256 = t37 * t150;
t255 = t52 * t148;
t254 = t76 * t147;
t213 = -pkin(5) * t150 - pkin(4);
t253 = pkin(5) * t225 - (qJD(2) * t213 - t110) * t148 + t277;
t252 = t102 * t100;
t250 = t102 * t151;
t249 = t132 * t153;
t243 = t148 * t150;
t242 = t150 * t151;
t240 = t154 * t148;
t239 = t154 * t151;
t120 = t271 * t151;
t143 = t148 ^ 2;
t144 = t151 ^ 2;
t235 = t143 - t144;
t114 = -t151 * pkin(3) + t199;
t232 = qJD(2) * t114;
t230 = qJD(2) * t149;
t216 = t132 * t243;
t212 = t145 * t230;
t209 = t132 * t225;
t208 = t150 * t224;
t207 = t132 * t229;
t196 = -t100 * pkin(5) - qJD(6);
t190 = t100 * t205;
t189 = t102 * t205;
t188 = t151 * t205;
t185 = t148 * t135;
t111 = -t205 - t262;
t183 = -t111 - t205;
t181 = -t147 * t23 + t150 * t24;
t179 = -qJD(2) * t144 + t132 * t148;
t178 = t132 * t147;
t176 = t79 * qJD(3) - t217;
t22 = t76 * pkin(5) + t37;
t57 = t136 - t73;
t40 = -t196 + t57;
t172 = -t22 * t147 - t225 * t40;
t171 = t22 * t150 - t226 * t40;
t170 = t145 * t241 - t92 * t147;
t65 = t145 * t244 + t92 * t150;
t169 = t148 * t57 + t153 * t227;
t166 = (-t143 - t144) * t186;
t163 = qJD(3) * (-t183 - t262);
t81 = -t205 + t232;
t162 = qJD(3) * (-t205 - t81 - t232);
t159 = t255 - t45 * t151 + (t148 * t73 + t151 * t72) * qJD(3);
t158 = t255 - t217 * t151 + (-t148 * t80 + t151 * t79) * qJD(3);
t156 = (t148 * t64 + t151 * t63 + (-t148 * t93 + t151 * t92) * qJD(3)) * qJD(2);
t134 = t147 * pkin(5) + qJ(4);
t130 = t148 * t155 * t151;
t124 = t150 * t135;
t118 = -0.2e1 * t185;
t117 = 0.2e1 * t185;
t116 = t235 * t155;
t112 = t238 * t147;
t107 = t271 * t228;
t106 = -qJ(4) * t229 + t138;
t105 = t150 * t119;
t99 = t100 ^ 2;
t94 = -0.2e1 * t235 * t218;
t91 = pkin(5) * t242 + t120;
t84 = (t132 + t222) * t227;
t71 = t81 * t222;
t70 = -pkin(5) * t210 + (-pkin(8) + t213) * t228;
t60 = -t147 * t97 + t105;
t50 = -qJ(6) * t242 + t61;
t48 = -t99 + t272;
t44 = t148 * pkin(5) + t147 * t195 + t105;
t36 = -t209 - qJD(3) * t102 + (-t151 * t223 - t216) * qJD(2);
t35 = -qJD(3) * t100 - t132 * t178 + t124;
t34 = -t209 + (-t216 + (t100 - t223) * t151) * qJD(2);
t33 = -t132 * t226 + t124 + (-t132 * t245 - t250) * qJD(2);
t29 = t150 * t177 + t254;
t28 = -t102 * t178 - t259;
t26 = -t100 * t164 + t242 * t76;
t25 = t75 * t147 * t151 + (t148 * t223 - t208) * t102;
t21 = qJD(5) * t65 + t64 * t147 + t150 * t212;
t20 = qJD(5) * t170 - t147 * t212 + t64 * t150;
t17 = -t132 * t208 - t75 * t148 + (t147 * t179 + t250) * qJD(3);
t16 = t132 * t210 - t76 * t148 + (-t100 * t151 + t150 * t179) * qJD(3);
t10 = t42 * t147 + t150 * t286;
t9 = t147 * t285 - t278 * t150;
t8 = (-t100 * t147 + t102 * t150) * t228 + (t254 + t259 + (t100 * t150 + t102 * t147) * qJD(5)) * t151;
t5 = t63 * t102 - t21 * t132 + t135 * t170 - t93 * t75;
t4 = t63 * t100 + t20 * t132 + t135 * t65 + t93 * t76;
t1 = -t21 * t100 - t20 * t102 + t170 * t76 + t65 * t75;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t152 * t247, 0, 0, 0, 0, 0, 0, 0, 0, -t273, -t274, t156, -t217 * t93 + t270 + t80 * t63 + t79 * t64 + (t111 - t205) * t212, 0, 0, 0, 0, 0, 0, t156, t273, t274, -t45 * t93 + t270 - t73 * t63 + t72 * t64 + (-t152 * t62 + t230 * t81) * t145, 0, 0, 0, 0, 0, 0, t4, t5, t1, t170 * t198 + t20 * t23 + t21 * t24 + t37 * t93 + t57 * t63 + t65 * t7, 0, 0, 0, 0, 0, 0, t4, t5, t1, t13 * t20 + t15 * t21 - t170 * t3 + t2 * t65 + t22 * t93 + t40 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, t94, t239, t118, -t240, 0, -pkin(8) * t239 + t148 * t163, pkin(8) * t240 + t151 * t163, t166 + t158 ((-t148 * t79 - t151 * t80) * t152 + (-t111 - t262) * t149) * t234 + t158 * pkin(8), 0, -t239, t240, t117, t94, t118, t166 + t159, t148 * t162 - t151 * t275, t148 * t275 + t151 * t162, t62 * t114 + t81 * t89 + (-t149 * t81 + (-t148 * t72 + t151 * t73) * t152) * t234 + t159 * pkin(8), t25, t8, t17, t26, t16, t84, -t107 * t100 + t120 * t76 + (-t220 * t57 + t7) * t148 + t265 * t132 + (-t190 - t57 * t226 + t256 + (qJD(2) * t60 + t23) * qJD(3)) * t151, -t107 * t102 - t120 * t75 + (t223 * t57 + t198) * t148 - t266 * t132 + (-t189 - t57 * t225 - t257 + (-qJD(2) * t61 - t24) * qJD(3)) * t151, t60 * t75 - t61 * t76 - t265 * t102 - t266 * t100 + t181 * t228 + (t147 * t7 + t150 * t198 + (t147 * t24 + t150 * t23) * qJD(5)) * t151, t37 * t120 - t198 * t61 + t7 * t60 + (-t107 - t188) * t57 + t266 * t24 + t265 * t23, t25, t8, t17, t26, t16, t84, t70 * t100 + t91 * t76 + (-t220 * t40 + t2) * t148 + t269 * t132 + (-t190 + (qJD(2) * t44 + t13) * qJD(3) + t171) * t151, t70 * t102 - t91 * t75 + (t223 * t40 - t3) * t148 - t268 * t132 + (-t189 + (-qJD(2) * t50 - t15) * qJD(3) + t172) * t151, t44 * t75 - t50 * t76 - t269 * t102 - t268 * t100 + (-t13 * t147 + t15 * t150) * t228 + (t147 * t2 - t150 * t3 + (t13 * t150 + t147 * t15) * qJD(5)) * t151, t2 * t44 + t22 * t91 + t3 * t50 + (t70 - t188) * t40 + t268 * t15 + t269 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, t116, 0, t130, 0, 0, t183 * t222, -t111 * t229 - t176, 0, 0, 0, 0, 0, -t130, t116, t130, 0, t71 + (-t106 * t151 + t148 * t205) * qJD(2), 0.2e1 * t141 + (t106 * t148 + t151 * t81) * qJD(2) + t176, -t52 * pkin(3) - t45 * qJ(4) - t81 * t106 + t284 * t73 - t72 * t80, t28, t9, t33, t29, t34, -t207, qJ(4) * t76 - t31 * t132 + t257 + t237 * t100 + (-t147 * t249 + t150 * t57) * qJD(5) + (t150 * t169 - t151 * t23) * qJD(2), -qJ(4) * t75 + t32 * t132 + t256 + t237 * t102 + (-t147 * t57 - t150 * t249) * qJD(5) + (-t147 * t169 + t151 * t24) * qJD(2), t32 * t100 + t31 * t102 + (-t24 * t222 + t153 * t75 - t7 + (-t100 * t153 - t24) * qJD(5)) * t150 + (t23 * t222 - t153 * t76 + t198 + (t102 * t153 + t23) * qJD(5)) * t147, t37 * qJ(4) - t23 * t31 - t24 * t32 + t237 * t57 + (qJD(5) * t181 - t147 * t198 + t7 * t150) * t153, t28, t9, t33, t29, t34, -t207, t134 * t76 - t264 * t132 + t253 * t100 + (t40 * t243 + (-qJD(3) * t113 - t13) * t151) * qJD(2) - t172, -t134 * t75 + t263 * t132 + t253 * t102 + (-t40 * t245 + (qJD(3) * t112 + t15) * t151) * qJD(2) + t171, t263 * t100 + t264 * t102 + t112 * t76 - t113 * t75 - t282, -t3 * t112 - t2 * t113 - t13 * t264 + t22 * t134 - t15 * t263 + t253 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, -t143 * t155 - t154, t180 + t71 + (t73 + t80) * qJD(3), 0, 0, 0, 0, 0, 0, t35, t36, t10, -t57 * qJD(3) + t283 * t147 + t280 * t150, 0, 0, 0, 0, 0, 0, t35, t36, t10, -t40 * qJD(3) + t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t48, -t286, -t252, t42, t135, -t57 * t102 + t280, t100 * t57 - t283, 0, 0, t252, t48, -t286, -t252, t42, t135, 0.2e1 * t191 + t260 + (t196 - t40) * t102 + t157, -t272 * pkin(5) + t14 * t132 + (qJD(6) + t40) * t100 + t173, t75 * pkin(5) - t267 * t100, t267 * t15 + (-t40 * t102 + t2) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, -t285, -t99 - t272, t100 * t15 + t102 * t13 + t22;];
tauc_reg  = t6;
