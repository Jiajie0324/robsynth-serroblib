% Calculate vector of inverse dynamics joint torques for
% S6PRRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRPRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRPRP4_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:40:17
% EndTime: 2019-03-08 21:43:49
% DurationCPUTime: 206.54s
% Computational Cost: add. (64284->1749), mult. (175725->2392), div. (0->0), fcn. (201935->10), ass. (0->633)
t1250 = Icges(4,4) + Icges(5,6);
t1211 = Icges(6,4) + Icges(7,4);
t1252 = Icges(4,1) + Icges(5,2);
t1251 = Icges(5,1) + Icges(4,3);
t1213 = Icges(6,1) + Icges(7,1);
t1249 = Icges(5,4) - Icges(4,5);
t1210 = Icges(5,5) - Icges(4,6);
t1209 = Icges(6,5) + Icges(7,5);
t1248 = Icges(4,2) + Icges(5,3);
t1208 = Icges(6,2) + Icges(7,2);
t1207 = Icges(6,6) + Icges(7,6);
t1206 = Icges(6,3) + Icges(7,3);
t744 = sin(pkin(6));
t752 = cos(qJ(3));
t1000 = t744 * t752;
t743 = sin(pkin(10));
t745 = cos(pkin(10));
t753 = cos(qJ(2));
t746 = cos(pkin(6));
t750 = sin(qJ(2));
t998 = t746 * t750;
t699 = t743 * t753 + t745 * t998;
t749 = sin(qJ(3));
t599 = t1000 * t745 + t699 * t749;
t748 = sin(qJ(5));
t751 = cos(qJ(5));
t997 = t746 * t753;
t808 = -t743 * t750 + t745 * t997;
t450 = t599 * t751 + t808 * t748;
t1289 = t1211 * t450;
t904 = t743 * t998;
t701 = t745 * t753 - t904;
t601 = -t1000 * t743 + t701 * t749;
t700 = t743 * t997 + t745 * t750;
t452 = t601 * t751 - t700 * t748;
t1288 = t1211 * t452;
t1287 = t1250 * t599;
t1286 = t1250 * t601;
t1001 = t744 * t750;
t702 = t1001 * t749 - t746 * t752;
t1007 = t702 * t751;
t999 = t744 * t753;
t903 = t748 * t999;
t605 = t903 + t1007;
t1285 = t1211 * t605;
t1284 = t1250 * t702;
t703 = t1000 * t750 + t746 * t749;
t1283 = t1250 * t703;
t1002 = t744 * t749;
t602 = t1002 * t743 + t701 * t752;
t1282 = t1250 * t602;
t600 = -t1002 * t745 + t699 * t752;
t1281 = t1250 * t600;
t1008 = t702 * t748;
t992 = t751 * t753;
t606 = t744 * t992 - t1008;
t1280 = t1211 * t606;
t1020 = t601 * t748;
t453 = t700 * t751 + t1020;
t1279 = t1211 * t453;
t1026 = t599 * t748;
t451 = -t751 * t808 + t1026;
t1278 = t1211 * t451;
t662 = t808 * qJD(2);
t929 = qJD(3) * t744;
t1106 = -t745 * t929 + t662;
t931 = qJD(3) * t699;
t443 = t1106 * t749 + t752 * t931;
t663 = t699 * qJD(2);
t193 = -qJD(5) * t451 + t443 * t751 - t663 * t748;
t786 = qJD(5) * t450 + t443 * t748;
t194 = t663 * t751 + t786;
t928 = qJD(3) * t749;
t444 = t1106 * t752 - t699 * t928;
t1277 = -t1206 * t444 - t1207 * t193 - t1209 * t194;
t664 = t700 * qJD(2);
t445 = qJD(3) * t602 - t664 * t749;
t932 = qJD(2) * t753;
t665 = -qJD(2) * t904 + t745 * t932;
t195 = -qJD(5) * t453 + t445 * t751 - t665 * t748;
t785 = qJD(5) * t452 + t445 * t748;
t196 = t665 * t751 + t785;
t446 = -t701 * t928 + (t743 * t929 - t664) * t752;
t1276 = t1206 * t446 + t1207 * t195 + t1209 * t196;
t1275 = -t1207 * t444 - t1208 * t193 - t1211 * t194;
t1274 = t1207 * t446 + t1208 * t195 + t1211 * t196;
t1273 = t1209 * t444 + t1211 * t193 + t1213 * t194;
t1272 = t1209 * t446 + t1211 * t195 + t1213 * t196;
t889 = t744 * t932;
t603 = qJD(3) * t703 + t749 * t889;
t933 = qJD(2) * t750;
t890 = t744 * t933;
t332 = qJD(5) * t606 + t603 * t751 - t748 * t890;
t781 = qJD(5) * t605 + t603 * t748;
t333 = t751 * t890 + t781;
t927 = qJD(3) * t750;
t886 = t744 * t927;
t604 = -t749 * t886 + (qJD(3) * t746 + t889) * t752;
t1271 = t1206 * t604 + t1207 * t332 + t1209 * t333;
t1270 = t1207 * t604 + t1208 * t332 + t1211 * t333;
t1269 = t1209 * t604 + t1211 * t332 + t1213 * t333;
t1140 = t1206 * t600 + t1207 * t450 + t1209 * t451;
t1139 = t1206 * t602 + t1207 * t452 + t1209 * t453;
t1138 = t1207 * t600 + t1208 * t450 + t1278;
t1137 = t1207 * t602 + t1208 * t452 + t1279;
t1136 = t1209 * t600 + t1213 * t451 + t1289;
t1135 = t1209 * t602 + t1213 * t453 + t1288;
t1268 = t1210 * t663 + t1248 * t443 - t1250 * t444;
t1267 = t1210 * t443 - t1249 * t444 + t1251 * t663;
t1266 = t1210 * t445 - t1249 * t446 + t1251 * t665;
t1265 = -t1249 * t663 - t1250 * t443 + t1252 * t444;
t1264 = t1210 * t665 + t1248 * t445 - t1250 * t446;
t1263 = -t1249 * t665 - t1250 * t445 + t1252 * t446;
t1262 = -t1210 * t808 + t1248 * t599 - t1281;
t1123 = t1210 * t599 - t1249 * t600 - t1251 * t808;
t1122 = t1210 * t601 - t1249 * t602 + t1251 * t700;
t1245 = -t1249 * t808 - t1252 * t600 + t1287;
t1261 = t1210 * t700 + t1248 * t601 - t1282;
t1260 = -t1249 * t700 + t1252 * t602 - t1286;
t1121 = t1206 * t703 + t1207 * t605 - t1209 * t606;
t1120 = t1207 * t703 + t1208 * t605 - t1280;
t1119 = t1209 * t703 - t1213 * t606 + t1285;
t1259 = t1210 * t603 - t1249 * t604 + t1251 * t890;
t1258 = t1210 * t890 + t1248 * t603 - t1250 * t604;
t1257 = -t1249 * t890 - t1250 * t603 + t1252 * t604;
t1109 = t1210 * t702 - t1249 * t703 - t1251 * t999;
t1243 = t1210 * t999 - t1248 * t702 + t1283;
t1256 = t1249 * t999 + t1252 * t703 - t1284;
t1173 = t1135 * t194 + t1137 * t193 + t1139 * t444 + t1272 * t451 + t1274 * t450 + t1276 * t600;
t1228 = -t1136 * t194 - t1138 * t193 - t1140 * t444 - t1273 * t451 + t1275 * t450 + t1277 * t600;
t1171 = t1135 * t196 + t1137 * t195 + t1139 * t446 + t1272 * t453 + t1274 * t452 + t1276 * t602;
t1227 = -t1136 * t196 - t1138 * t195 - t1140 * t446 - t1273 * t453 + t1275 * t452 + t1277 * t602;
t1169 = t1135 * t333 + t1137 * t332 + t1139 * t604 - t1272 * t606 + t1274 * t605 + t1276 * t703;
t1226 = -t1136 * t333 - t1138 * t332 - t1140 * t604 + t1273 * t606 + t1275 * t605 + t1277 * t703;
t1165 = t1119 * t194 + t1120 * t193 + t1121 * t444 + t1269 * t451 + t1270 * t450 + t1271 * t600;
t1164 = t1119 * t196 + t1120 * t195 + t1121 * t446 + t1269 * t453 + t1270 * t452 + t1271 * t602;
t1163 = t1119 * t333 + t1120 * t332 + t1121 * t604 - t1269 * t606 + t1270 * t605 + t1271 * t703;
t1255 = t1123 * t663 - t1245 * t444 + t1262 * t443 + t1265 * t600 - t1267 * t808 + t1268 * t599;
t1222 = t1122 * t663 + t1260 * t444 + t1261 * t443 + t1263 * t600 + t1264 * t599 - t1266 * t808;
t1254 = t1123 * t665 - t1245 * t446 + t1262 * t445 + t1265 * t602 + t1267 * t700 + t1268 * t601;
t1220 = t1122 * t665 + t1260 * t446 + t1261 * t445 + t1263 * t602 + t1264 * t601 + t1266 * t700;
t1253 = (t1123 * t933 - t1267 * t753) * t744 + t1265 * t703 + t1268 * t702 - t1245 * t604 + t1262 * t603;
t1217 = (t1122 * t933 - t1266 * t753) * t744 + t1263 * t703 + t1264 * t702 + t1260 * t604 + t1261 * t603;
t1162 = t1136 * t451 + t1138 * t450 + t1140 * t600;
t1161 = t1135 * t451 + t1137 * t450 + t1139 * t600;
t1160 = t1136 * t453 + t1138 * t452 + t1140 * t602;
t1159 = t1135 * t453 + t1137 * t452 + t1139 * t602;
t1216 = t1109 * t663 - t1243 * t443 + t1256 * t444 + t1257 * t600 + t1258 * t599 - t1259 * t808;
t1215 = t1109 * t665 - t1243 * t445 + t1256 * t446 + t1257 * t602 + t1258 * t601 + t1259 * t700;
t1158 = -t1136 * t606 + t1138 * t605 + t1140 * t703;
t1157 = -t1135 * t606 + t1137 * t605 + t1139 * t703;
t1214 = (t1109 * t933 - t1259 * t753) * t744 + t1257 * t703 + t1258 * t702 + t1256 * t604 - t1243 * t603;
t1156 = t1119 * t451 + t1120 * t450 + t1121 * t600;
t1155 = t1119 * t453 + t1120 * t452 + t1121 * t602;
t1150 = -t1123 * t808 - t1245 * t600 + t1262 * t599;
t1149 = -t1122 * t808 + t1260 * t600 + t1261 * t599;
t1148 = t1123 * t700 - t1245 * t602 + t1262 * t601;
t1147 = t1122 * t700 + t1260 * t602 + t1261 * t601;
t1146 = -t1119 * t606 + t1120 * t605 + t1121 * t703;
t1145 = -t1123 * t999 - t1245 * t703 + t1262 * t702;
t1144 = -t1122 * t999 + t1260 * t703 + t1261 * t702;
t1143 = -t1109 * t808 - t1243 * t599 + t1256 * t600;
t1142 = t1109 * t700 - t1243 * t601 + t1256 * t602;
t1141 = -t1109 * t999 - t1243 * t702 + t1256 * t703;
t1241 = t1207 * t751 + t1209 * t748;
t1240 = t1210 * t749 - t1249 * t752;
t1239 = t1208 * t751 + t1211 * t748;
t1238 = t1211 * t751 + t1213 * t748;
t1232 = rSges(7,1) + pkin(5);
t747 = -qJ(6) - pkin(9);
t1237 = rSges(7,3) - t747;
t914 = qJDD(2) * t744;
t731 = t743 * t914;
t463 = qJD(3) * t665 + qJDD(3) * t700 + t731;
t191 = qJD(5) * t446 + qJDD(5) * t602 + t463;
t881 = t745 * t914;
t464 = qJD(3) * t663 - qJDD(3) * t808 - t881;
t192 = qJD(5) * t444 + qJDD(5) * t600 + t464;
t741 = qJDD(2) * t746;
t620 = qJD(2) * t886 - qJDD(3) * t999 + t741;
t335 = qJD(5) * t604 + qJDD(5) * t703 + t620;
t935 = qJD(2) * t744;
t732 = t743 * t935;
t615 = qJD(3) * t700 + t732;
t411 = qJD(5) * t602 + t615;
t934 = qJD(2) * t745;
t891 = t744 * t934;
t616 = -qJD(3) * t808 - t891;
t412 = qJD(5) * t600 + t616;
t742 = qJD(2) * t746;
t710 = -t753 * t929 + t742;
t578 = qJD(5) * t703 + t710;
t1175 = t1146 * t335 + t1157 * t191 + t1158 * t192 + t1163 * t578 + t1169 * t411 - t1226 * t412;
t1236 = t1141 * t620 + t1144 * t463 + t1145 * t464 + t1214 * t710 + t1217 * t615 + t1253 * t616 + t1175;
t1176 = t1155 * t335 + t1159 * t191 + t1160 * t192 + t1164 * t578 + t1171 * t411 - t1227 * t412;
t1235 = t1142 * t620 + t1147 * t463 + t1148 * t464 + t1215 * t710 + t1220 * t615 + t1254 * t616 + t1176;
t1177 = t1156 * t335 + t1161 * t191 + t1162 * t192 + t1165 * t578 + t1173 * t411 - t1228 * t412;
t1234 = t1143 * t620 + t1149 * t463 + t1150 * t464 + t1216 * t710 + t1222 * t615 + t1255 * t616 + t1177;
t1233 = (-t1213 * t450 + t1138 + t1278) * t412 + (-t1213 * t452 + t1137 + t1279) * t411 + (-t1213 * t605 + t1120 - t1280) * t578;
t1105 = (t1240 * t808 + t1245 * t752 + t1251 * t699 - t1262 * t749) * t616 + (-t1240 * t700 + t1251 * t701 - t1260 * t752 - t1261 * t749) * t615 + (-t1256 * t752 + t1243 * t749 + (t1240 * t753 + t1251 * t750) * t744) * t710;
t1168 = t1156 * t578 + t1161 * t411 + t1162 * t412;
t1167 = t1155 * t578 + t1159 * t411 + t1160 * t412;
t1166 = t1146 * t578 + t1157 * t411 + t1158 * t412;
t1225 = t1143 * t710 + t1149 * t615 + t1150 * t616;
t1224 = t1142 * t710 + t1147 * t615 + t1148 * t616;
t1219 = t1141 * t710 + t1144 * t615 + t1145 * t616;
t1187 = -pkin(9) + t1237;
t1205 = -t1207 * t599 + t1239 * t600;
t1204 = -t1207 * t601 + t1239 * t602;
t1203 = -t1209 * t599 + t1238 * t600;
t1202 = -t1209 * t601 + t1238 * t602;
t1201 = -t1207 * t702 + t1239 * t703;
t1200 = -t1209 * t702 + t1238 * t703;
t1199 = (t1119 * t748 + t1120 * t751 - t1206 * t702 + t1241 * t703) * t578 + (t1136 * t748 + t1138 * t751 - t1206 * t599 + t1241 * t600) * t412 + (t1135 * t748 + t1137 * t751 - t1206 * t601 + t1241 * t602) * t411;
t1198 = (t1248 * t703 - t1256 + t1284) * t710 + (t1248 * t600 + t1245 + t1287) * t616 + (t1248 * t602 - t1260 + t1286) * t615;
t1197 = (-t1252 * t702 - t1243 - t1283) * t710 + (-t1252 * t599 + t1262 - t1281) * t616 + (-t1252 * t601 + t1261 - t1282) * t615;
t1196 = (t1210 * t703 + t1249 * t702) * t710 + (t1210 * t600 + t1249 * t599) * t616 + (t1210 * t602 + t1249 * t601) * t615;
t1192 = -t1248 * t749 + t1250 * t752;
t1191 = -t1250 * t749 + t1252 * t752;
t907 = 0.2e1 * qJD(2);
t188 = rSges(6,1) * t453 + rSges(6,2) * t452 + rSges(6,3) * t602;
t378 = pkin(3) * t602 + qJ(4) * t601;
t462 = pkin(4) * t700 + pkin(9) * t602;
t951 = -t462 - t378;
t1134 = -t188 + t951;
t1023 = t600 * t751;
t1024 = t600 * t748;
t1186 = rSges(7,2) * t1023 + t1024 * t1232 - t1237 * t599;
t1017 = t602 * t751;
t1018 = t602 * t748;
t1185 = rSges(7,2) * t1017 + t1018 * t1232 - t1237 * t601;
t1005 = t703 * t751;
t1006 = t703 * t748;
t1184 = rSges(7,2) * t1005 + t1006 * t1232 - t1237 * t702;
t1183 = t599 * t710 - t616 * t702;
t1182 = -t601 * t710 + t615 * t702;
t1181 = -t599 * t615 + t601 * t616;
t186 = rSges(6,1) * t451 + rSges(6,2) * t450 + rSges(6,3) * t600;
t321 = -rSges(6,1) * t606 + rSges(6,2) * t605 + rSges(6,3) * t703;
t617 = -pkin(4) * t999 + pkin(9) * t703;
t556 = pkin(3) * t703 + qJ(4) * t702;
t576 = qJD(4) * t601;
t1003 = t744 * t745;
t544 = pkin(2) * t699 - pkin(8) * t808;
t708 = (pkin(2) * t750 - pkin(8) * t753) * t744;
t809 = -t1003 * t708 - t544 * t746;
t793 = t809 * qJD(2);
t783 = t616 * t556 + t576 + t793;
t374 = pkin(3) * t600 + qJ(4) * t599;
t461 = -pkin(4) * t808 + pkin(9) * t600;
t955 = -t374 - t461;
t768 = t616 * t617 + t710 * t955 + t783;
t70 = -t186 * t578 + t321 * t412 + t768;
t1180 = 0.2e1 * t70;
t959 = t374 * t999 - t556 * t808;
t1179 = 0.2e1 * t461 * t999 - 0.2e1 * t617 * t808 + 0.2e1 * t959;
t546 = pkin(2) * t701 + pkin(8) * t700;
t531 = t746 * t546;
t958 = t746 * t378 + t531;
t1178 = 0.2e1 * t746 * t462 + 0.2e1 * t958;
t683 = qJD(4) * t702;
t882 = t544 * t732 + t546 * t891 + qJD(1);
t844 = t615 * t374 + t683 + t882;
t784 = t615 * t461 + t616 * t951 + t844;
t921 = qJD(6) * t703;
t740 = pkin(5) * t751 + pkin(4);
t1049 = pkin(4) - t740;
t979 = rSges(7,1) * t453 + rSges(7,2) * t452 + pkin(5) * t1020 - t1049 * t700 + t1187 * t602;
t980 = -rSges(7,1) * t451 - rSges(7,2) * t450 - pkin(5) * t1026 - t1049 * t808 - t1187 * t600;
t38 = -t411 * t980 - t412 * t979 + t784 + t921;
t1154 = t38 * t980;
t574 = qJD(4) * t599;
t817 = t546 * t742 - t708 * t732;
t794 = t710 * t378 + t574 + t817;
t941 = -t556 - t617;
t771 = t710 * t462 + t615 * t941 + t794;
t924 = qJD(6) * t600;
t961 = -rSges(7,1) * t606 + rSges(7,2) * t605 + pkin(5) * t1008 + t1049 * t999 + t1187 * t703;
t47 = -t411 * t961 + t578 * t979 + t771 + t924;
t1153 = t47 * t979;
t923 = qJD(6) * t602;
t48 = t412 * t961 + t578 * t980 + t768 + t923;
t1152 = t48 * t961;
t113 = rSges(6,1) * t196 + rSges(6,2) * t195 + rSges(6,3) * t446;
t172 = pkin(3) * t446 + qJ(4) * t445 + t576;
t326 = pkin(4) * t665 + pkin(9) * t446;
t963 = -t326 - t172;
t1151 = -t113 + t963;
t1012 = t808 * t752;
t994 = t749 * t751;
t515 = -t699 * t748 + t808 * t994;
t995 = t748 * t749;
t906 = t808 * t995;
t516 = t699 * t751 + t906;
t1133 = t1012 * t1206 + t1207 * t515 + t1209 * t516;
t1009 = t700 * t752;
t517 = -t700 * t994 - t701 * t748;
t905 = t700 * t995;
t518 = t701 * t751 - t905;
t1132 = -t1009 * t1206 + t1207 * t517 + t1209 * t518;
t1131 = t1012 * t1207 + t1208 * t515 + t1211 * t516;
t1130 = -t1009 * t1207 + t1208 * t517 + t1211 * t518;
t1129 = t1012 * t1209 + t1211 * t515 + t1213 * t516;
t1128 = -t1009 * t1209 + t1211 * t517 + t1213 * t518;
t996 = t747 * t752;
t1127 = -t516 * rSges(7,1) - t515 * rSges(7,2) - rSges(7,3) * t1012 - pkin(5) * t906 - t699 * t740 + t808 * t996;
t1126 = t518 * rSges(7,1) + t517 * rSges(7,2) - rSges(7,3) * t1009 - pkin(5) * t905 + t700 * t996 + t701 * t740;
t1053 = pkin(9) * t599;
t1125 = t1053 + t1186;
t1052 = pkin(9) * t601;
t1124 = t1052 + t1185;
t306 = -rSges(5,1) * t808 - rSges(5,2) * t600 + rSges(5,3) * t599;
t970 = -t306 - t374;
t307 = rSges(5,1) * t700 - rSges(5,2) * t602 + rSges(5,3) * t601;
t969 = -t307 - t378;
t894 = -t321 + t941;
t1118 = -t1192 * t808 + t1210 * t699;
t1117 = t1192 * t700 + t1210 * t701;
t1116 = t1191 * t808 - t1249 * t699;
t1115 = -t1191 * t700 - t1249 * t701;
t1051 = pkin(9) * t702;
t1114 = t1051 + t1184;
t627 = (-t748 * t750 + t749 * t992) * t744;
t993 = t749 * t753;
t628 = (t748 * t993 + t750 * t751) * t744;
t901 = t752 * t999;
t1113 = t1206 * t901 + t1207 * t627 + t1209 * t628;
t1112 = t1207 * t901 + t1208 * t627 + t1211 * t628;
t1111 = t1209 * t901 + t1211 * t627 + t1213 * t628;
t723 = pkin(5) * t903;
t1110 = t628 * rSges(7,1) + t627 * rSges(7,2) + t740 * t1001 + t1237 * t901 + t749 * t723;
t505 = -rSges(5,1) * t999 - rSges(5,2) * t703 + rSges(5,3) * t702;
t944 = -t505 - t556;
t1108 = (-t1192 * t753 + t1210 * t750) * t744;
t1107 = (t1191 * t753 - t1249 * t750) * t744;
t1104 = (t1208 * t606 + t1119 + t1285) * t578 + (-t1208 * t451 + t1136 + t1289) * t412 + (-t1208 * t453 + t1135 + t1288) * t411;
t1102 = (t1207 * t606 + t1209 * t605) * t578 + (-t1207 * t451 + t1209 * t450) * t412 + (-t1207 * t453 + t1209 * t452) * t411;
t704 = (Icges(3,5) * t753 - Icges(3,6) * t750) * t744;
t668 = qJD(2) * t704;
t990 = rSges(7,1) * t196 + rSges(7,2) * t195 + pkin(5) * t785 - t1049 * t665 + t1187 * t446 + t923;
t991 = rSges(7,1) * t194 + rSges(7,2) * t193 + pkin(5) * t786 - t1049 * t663 + t1187 * t444 + t924;
t1101 = -t980 * t191 - t979 * t192 + t991 * t411 - t990 * t412;
t474 = Icges(3,5) * t699 + Icges(3,6) * t808 - Icges(3,3) * t1003;
t1004 = t743 * t744;
t475 = Icges(3,5) * t701 - Icges(3,6) * t700 + Icges(3,3) * t1004;
t1047 = Icges(3,4) * t699;
t476 = Icges(3,2) * t808 - Icges(3,6) * t1003 + t1047;
t1046 = Icges(3,4) * t701;
t477 = -Icges(3,2) * t700 + Icges(3,6) * t1004 + t1046;
t677 = Icges(3,4) * t808;
t478 = Icges(3,1) * t699 - Icges(3,5) * t1003 + t677;
t678 = Icges(3,4) * t700;
t479 = Icges(3,1) * t701 + Icges(3,5) * t1004 - t678;
t637 = Icges(3,3) * t746 + (Icges(3,5) * t750 + Icges(3,6) * t753) * t744;
t1045 = Icges(3,4) * t750;
t638 = Icges(3,6) * t746 + (Icges(3,2) * t753 + t1045) * t744;
t733 = Icges(3,4) * t999;
t639 = Icges(3,1) * t1001 + Icges(3,5) * t746 + t733;
t1100 = (-t1003 * t637 + t638 * t808 + t639 * t699) * t746 + t744 * (-(-t1003 * t474 + t476 * t808 + t478 * t699) * t745 + (-t1003 * t475 + t477 * t808 + t479 * t699) * t743);
t325 = pkin(4) * t663 + pkin(9) * t444;
t256 = t615 * t325;
t277 = t463 * t461;
t171 = pkin(3) * t444 + qJ(4) * t443 + t574;
t159 = t615 * t171;
t217 = t463 * t374;
t593 = qJD(4) * t603;
t676 = qJDD(4) * t702;
t524 = pkin(2) * t662 + pkin(8) * t663;
t459 = t524 * t732;
t525 = -pkin(2) * t664 + pkin(8) * t665;
t460 = t525 * t891;
t480 = t544 * t731;
t481 = t546 * t881;
t823 = qJDD(1) + t459 + t460 + t480 + t481;
t787 = t159 + t217 + t593 + t676 + t823;
t764 = t464 * t951 + t616 * t963 + t256 + t277 + t787;
t913 = qJDD(6) * t703;
t922 = qJD(6) * t604;
t7 = t764 + t913 + t922 + t1101;
t1099 = 0.2e1 * t7;
t1029 = t188 * t192;
t1030 = t186 * t191;
t1031 = t113 * t412;
t111 = rSges(6,1) * t194 + rSges(6,2) * t193 + rSges(6,3) * t444;
t1032 = t111 * t411;
t16 = -t1029 + t1030 - t1031 + t764 + t1032;
t1098 = 0.2e1 * t16;
t1097 = 0.2e1 * t38;
t1096 = 0.2e1 * t47;
t1095 = 0.2e1 * t48;
t61 = t186 * t411 - t188 * t412 + t784;
t1094 = 0.2e1 * t61;
t69 = t188 * t578 - t321 * t411 + t771;
t1093 = 0.2e1 * t69;
t85 = t306 * t615 + t616 * t969 + t844;
t1092 = 0.2e1 * t85;
t92 = t307 * t710 + t615 * t944 + t794;
t1091 = 0.2e1 * t92;
t1090 = -0.2e1 * t464;
t1089 = -0.2e1 * t616;
t1088 = m(5) / 0.2e1;
t1087 = m(6) / 0.2e1;
t1086 = m(7) / 0.2e1;
t1085 = t191 / 0.2e1;
t1084 = t192 / 0.2e1;
t1083 = t335 / 0.2e1;
t1082 = -t411 / 0.2e1;
t1081 = t411 / 0.2e1;
t1080 = -t412 / 0.2e1;
t1079 = t412 / 0.2e1;
t1076 = t463 / 0.2e1;
t1075 = t464 / 0.2e1;
t1072 = -t578 / 0.2e1;
t1071 = t578 / 0.2e1;
t1067 = -t615 / 0.2e1;
t1066 = t615 / 0.2e1;
t1065 = -t616 / 0.2e1;
t1064 = t616 / 0.2e1;
t1063 = t620 / 0.2e1;
t1056 = -t710 / 0.2e1;
t1055 = t710 / 0.2e1;
t1013 = t808 * t749;
t1010 = t700 * t749;
t989 = rSges(7,1) * t333 + rSges(7,2) * t332 + pkin(5) * t781 - t1049 * t890 + t1187 * t604 + t921;
t988 = t700 * t171 + t665 * t374;
t469 = t746 * t525;
t987 = t746 * t172 + t469;
t986 = -t171 - t524;
t212 = rSges(5,1) * t665 - rSges(5,2) * t446 + rSges(5,3) * t445;
t985 = -t172 - t212;
t978 = t603 + t1181;
t977 = -t451 * rSges(7,2) + t1232 * t450;
t976 = -t453 * rSges(7,2) + t1232 * t452;
t533 = t699 * pkin(4) + pkin(9) * t1012;
t975 = t533 + t1127;
t534 = t701 * pkin(4) - pkin(9) * t1009;
t974 = -t534 + t1126;
t372 = -t599 * pkin(3) + qJ(4) * t600;
t973 = qJD(4) * t703 + t615 * t372;
t972 = t443 + t1182;
t971 = t445 + t1183;
t312 = pkin(3) * t604 + qJ(4) * t603 + t683;
t342 = rSges(5,1) * t890 - rSges(5,2) * t604 + rSges(5,3) * t603;
t968 = -t312 - t342;
t532 = pkin(4) * t890 + pkin(9) * t604;
t967 = -t312 - t532;
t313 = t700 * t374;
t966 = t700 * t461 + t313;
t376 = -t601 * pkin(3) + qJ(4) * t602;
t962 = qJD(4) * t600 + t710 * t376;
t344 = t378 * t890;
t960 = t462 * t890 + t344;
t554 = -t702 * pkin(3) + qJ(4) * t703;
t957 = qJD(4) * t602 + t616 * t554;
t371 = t599 * rSges(5,2) + t600 * rSges(5,3);
t956 = -t371 - t372;
t375 = t601 * rSges(5,2) + t602 * rSges(5,3);
t954 = -t375 - t376;
t953 = t605 * rSges(7,1) + t606 * rSges(7,2) + pkin(5) * t1007 + t723;
t692 = pkin(4) * t1001 + pkin(9) * t901;
t952 = -t692 + t1110;
t950 = t525 * t1003 + t524 * t1004;
t949 = Icges(3,1) * t808 - t1047 - t476;
t948 = -Icges(3,1) * t700 - t1046 - t477;
t947 = -Icges(3,2) * t699 + t478 + t677;
t946 = -Icges(3,2) * t701 + t479 - t678;
t543 = pkin(2) * t808 + pkin(8) * t699;
t545 = -t700 * pkin(2) + pkin(8) * t701;
t945 = t543 * t732 + t545 * t891;
t943 = t546 * t1003 + t544 * t1004;
t553 = t702 * rSges(5,2) + t703 * rSges(5,3);
t942 = -t553 - t554;
t706 = (Icges(3,1) * t753 - t1045) * t744;
t938 = -t638 + t706;
t937 = -Icges(3,2) * t1001 + t639 + t733;
t522 = pkin(3) * t1012 + qJ(4) * t1013;
t523 = -pkin(3) * t1009 - qJ(4) * t1010;
t902 = t744 * t993;
t640 = pkin(3) * t901 + qJ(4) * t902;
t709 = pkin(2) * t999 + pkin(8) * t1001;
t930 = qJD(3) * t701;
t926 = qJD(4) * t749;
t925 = qJD(5) * t752;
t920 = qJD(6) * t752;
t918 = 2 * m(4);
t917 = 0.2e1 * m(5);
t916 = 0.2e1 * m(6);
t915 = 0.2e1 * m(7);
t912 = 0.2e1 * t700;
t911 = 0.2e1 * t743;
t910 = 0.2e1 * t745;
t909 = 0.2e1 * t746;
t908 = 0.2e1 * t753;
t150 = rSges(6,1) * t333 + rSges(6,2) * t332 + rSges(6,3) * t604;
t900 = -t150 + t967;
t899 = t171 * t999 - t312 * t808 + t663 * t556;
t898 = t746 * t326 + t987;
t897 = -t325 + t986;
t896 = -t186 + t955;
t685 = (pkin(2) * t753 + pkin(8) * t750) * t935;
t895 = -t685 + t968;
t247 = t516 * rSges(6,1) + t515 * rSges(6,2) + rSges(6,3) * t1012;
t249 = t518 * rSges(6,1) + t517 * rSges(6,2) - rSges(6,3) * t1009;
t892 = -t708 + t944;
t272 = rSges(6,1) * t1024 + rSges(6,2) * t1023 - t599 * rSges(6,3);
t274 = rSges(6,1) * t1018 + rSges(6,2) * t1017 - t601 * rSges(6,3);
t427 = t628 * rSges(6,1) + t627 * rSges(6,2) + rSges(6,3) * t901;
t410 = rSges(6,1) * t1006 + rSges(6,2) * t1005 - t702 * rSges(6,3);
t888 = t709 * t934;
t880 = t935 / 0.2e1;
t874 = -t918 / 0.2e1;
t873 = t918 / 0.2e1;
t872 = -t916 / 0.2e1;
t871 = -t915 / 0.2e1;
t343 = rSges(4,1) * t604 - rSges(4,2) * t603 + rSges(4,3) * t890;
t870 = t744 * (-t343 - t685);
t506 = rSges(4,1) * t703 - rSges(4,2) * t702 - rSges(4,3) * t999;
t869 = t744 * (-t506 - t708);
t864 = t750 * t907;
t863 = t963 - t990;
t862 = t967 - t989;
t861 = -t685 + t900;
t860 = t700 * t325 + t665 * t461 + t988;
t859 = t172 * t1003 + t171 * t1004 + t950;
t858 = t955 + t980;
t857 = t951 - t979;
t856 = t941 - t961;
t855 = -t708 + t894;
t854 = t378 * t1003 + t374 * t1004 + t943;
t852 = t709 + t640;
t849 = t61 * t111 + t16 * t186;
t848 = -t685 + t862;
t847 = qJD(4) * t902 + t374 * t930 + t615 * t522 + t945;
t846 = -t708 + t856;
t754 = 0.2e1 * qJDD(1);
t845 = 0.2e1 * t459 + 0.2e1 * t460 + 0.2e1 * t480 + 0.2e1 * t481 + t754;
t509 = Icges(3,5) * t662 - Icges(3,6) * t663;
t510 = -Icges(3,5) * t664 - Icges(3,6) * t665;
t511 = Icges(3,4) * t662 - Icges(3,2) * t663;
t512 = -Icges(3,4) * t664 - Icges(3,2) * t665;
t513 = Icges(3,1) * t662 - Icges(3,4) * t663;
t514 = -Icges(3,1) * t664 - Icges(3,4) * t665;
t830 = -(t1004 * t509 - t476 * t665 - t478 * t664 - t511 * t700 + t513 * t701) * t745 + (t1004 * t510 - t477 * t665 - t479 * t664 - t512 * t700 + t514 * t701) * t743;
t829 = -(t509 * t746 + (t511 * t753 + t513 * t750 + (-t476 * t750 + t478 * t753) * qJD(2)) * t744) * t745 + (t510 * t746 + (t512 * t753 + t514 * t750 + (-t477 * t750 + t479 * t753) * qJD(2)) * t744) * t743;
t827 = -(t1004 * t474 - t476 * t700 + t478 * t701) * t745 + (t1004 * t475 - t477 * t700 + t479 * t701) * t743;
t826 = -(t474 * t746 + (t476 * t753 + t478 * t750) * t744) * t745 + (t475 * t746 + (t477 * t753 + t479 * t750) * t744) * t743;
t484 = rSges(3,1) * t699 + rSges(3,2) * t808 - rSges(3,3) * t1003;
t485 = rSges(3,1) * t701 - rSges(3,2) * t700 + rSges(3,3) * t1004;
t825 = t484 * t743 + t485 * t745;
t519 = rSges(3,1) * t662 - rSges(3,2) * t663;
t520 = -rSges(3,1) * t664 - rSges(3,2) * t665;
t824 = t519 * t743 + t520 * t745;
t822 = t543 + t522;
t821 = t545 + t523;
t399 = rSges(4,1) * t1012 - rSges(4,2) * t1013 + t699 * rSges(4,3);
t400 = -rSges(4,1) * t1009 + rSges(4,2) * t1010 + t701 * rSges(4,3);
t401 = t699 * rSges(5,1) - rSges(5,2) * t1012 + rSges(5,3) * t1013;
t402 = t701 * rSges(5,1) + rSges(5,2) * t1009 - rSges(5,3) * t1010;
t818 = t545 * t742 - t709 * t732;
t816 = t326 * t1003 + t325 * t1004 + t859;
t815 = t325 * t999 - t532 * t808 + t663 * t617 + t899;
t814 = t462 * t1003 + t461 * t1004 + t854;
t657 = rSges(3,3) * t746 + (rSges(3,1) * t750 + rSges(3,2) * t753) * t744;
t813 = -t1003 * t657 - t484 * t746;
t812 = -t1004 * t657 + t485 * t746;
t707 = (rSges(3,1) * t753 - rSges(3,2) * t750) * t744;
t675 = qJD(2) * t707;
t811 = -t1003 * t675 - t519 * t746;
t810 = -t1004 * t675 + t520 * t746;
t613 = rSges(4,1) * t901 - rSges(4,2) * t902 + rSges(4,3) * t1001;
t614 = rSges(5,1) * t1001 - rSges(5,2) * t901 + rSges(5,3) * t902;
t800 = t744 * t825;
t799 = -t543 * t742 + t556 * t931 + t616 * t640 - t700 * t926;
t792 = t38 * t991 - t7 * t980;
t791 = t378 * t886 + t710 * t523 + t808 * t926 + t818;
t790 = pkin(9) * t1181 - t376 * t616 + t973;
t789 = pkin(9) * t1182 - t554 * t615 + t962;
t788 = pkin(9) * t1183 - t372 * t710 + t957;
t782 = t525 * t742 + t546 * t741 + (-qJD(2) * t685 - qJDD(2) * t708) * t1004;
t780 = t172 * t1089 + t378 * t1090 + 0.2e1 * t159 + 0.2e1 * t217 + 0.2e1 * t593 + 0.2e1 * t676 + t845;
t770 = qJD(4) * t443 + qJDD(4) * t599 + t710 * t172 + t620 * t378 + t782;
t769 = t326 * t1089 + t462 * t1090 + 0.2e1 * t256 + 0.2e1 * t277 + t780;
t767 = t461 * t930 + t615 * t533 + (-t523 - t534) * t616 + t951 * t931 + t847;
t766 = (qJD(2) * t824 + qJDD(2) * t825) * t744;
t765 = (-t1003 * t685 - t524 * t746) * qJD(2) + t809 * qJDD(2);
t763 = t462 * t886 + t710 * t534 + (-t640 - t692) * t615 + t941 * t930 + t791;
t762 = qJD(4) * t445 + qJDD(4) * t601 + t616 * t312 + t464 * t556 + t765;
t761 = t616 * t692 + t617 * t931 + (-t522 - t533) * t710 + (t927 * t955 - t888) * t744 + t799;
t756 = t710 * t326 + t620 * t462 + t463 * t941 + t615 * t967 + t770;
t755 = t464 * t617 + t616 * t532 + (-t171 - t325) * t710 + t955 * t620 + t762;
t670 = qJD(2) * t706;
t669 = (Icges(3,4) * t753 - Icges(3,2) * t750) * t935;
t667 = (t753 * t925 + t927) * t744;
t555 = -rSges(4,1) * t702 - rSges(4,2) * t703;
t542 = -rSges(3,1) * t700 - rSges(3,2) * t701;
t541 = rSges(3,1) * t808 - rSges(3,2) * t699;
t536 = -Icges(3,5) * t700 - Icges(3,6) * t701;
t535 = Icges(3,5) * t808 - Icges(3,6) * t699;
t530 = -t700 * t925 + t930;
t529 = t808 * t925 + t931;
t386 = rSges(6,1) * t605 + rSges(6,2) * t606;
t377 = -rSges(4,1) * t601 - rSges(4,2) * t602;
t373 = -rSges(4,1) * t599 - rSges(4,2) * t600;
t324 = t813 * qJD(2);
t323 = t812 * qJD(2);
t322 = t637 * t746 + (t638 * t753 + t639 * t750) * t744;
t311 = g(1) * t601 + g(2) * t599 + g(3) * t702;
t309 = rSges(4,1) * t602 - rSges(4,2) * t601 + rSges(4,3) * t700;
t308 = rSges(4,1) * t600 - rSges(4,2) * t599 - rSges(4,3) * t808;
t258 = t1004 * t637 - t638 * t700 + t639 * t701;
t253 = qJD(2) * t800 + qJD(1);
t233 = rSges(6,1) * t452 - rSges(6,2) * t453;
t231 = rSges(6,1) * t450 - rSges(6,2) * t451;
t213 = t668 * t746 + (t669 * t753 + t670 * t750 + (-t638 * t750 + t639 * t753) * qJD(2)) * t744;
t211 = rSges(5,1) * t663 - rSges(5,2) * t444 + rSges(5,3) * t443;
t210 = rSges(4,1) * t446 - rSges(4,2) * t445 + rSges(4,3) * t665;
t209 = rSges(4,1) * t444 - rSges(4,2) * t443 + rSges(4,3) * t663;
t152 = t1004 * t668 - t638 * t665 - t639 * t664 - t669 * t700 + t670 * t701;
t138 = -t308 * t710 + t506 * t616 + t793;
t137 = t309 * t710 - t506 * t615 + t817;
t124 = t308 * t615 - t309 * t616 + t882;
t93 = t505 * t616 + t710 * t970 + t783;
t72 = -t209 * t710 - t308 * t620 + t343 * t616 + t464 * t506 + t765;
t71 = t210 * t710 + t309 * t620 - t343 * t615 - t463 * t506 + t782;
t64 = t209 * t615 - t210 * t616 + t308 * t463 - t309 * t464 + t823;
t44 = t342 * t616 + t464 * t505 + (-t171 - t211) * t710 + t970 * t620 + t762;
t43 = t212 * t710 + t307 * t620 + t463 * t944 + t615 * t968 + t770;
t37 = t211 * t615 + t306 * t463 + t464 * t969 + t616 * t985 + t787;
t18 = -t111 * t578 + t150 * t412 - t186 * t335 + t192 * t321 + t755;
t17 = t113 * t578 - t150 * t411 + t188 * t335 - t191 * t321 + t756;
t13 = qJD(6) * t444 + qJDD(6) * t600 - t191 * t961 + t335 * t979 - t411 * t989 + t578 * t990 + t756;
t12 = qJD(6) * t446 + qJDD(6) * t602 + t192 * t961 + t335 * t980 + t412 * t989 - t578 * t991 + t755;
t1 = [m(2) * qJDD(1) + m(4) * t845 / 0.2e1 + t780 * t1088 + (-0.2e1 * t1029 + 0.2e1 * t1030 - 0.2e1 * t1031 + t769 + 0.2e1 * t1032) * t1087 + (-m(4) * t210 - m(5) * t212) * t616 + (m(4) * t209 + m(5) * t211) * t615 + (-m(4) * t309 - m(5) * t307) * t464 + (m(4) * t308 + m(5) * t306) * t463 + (-m(2) - m(4) - m(5) - m(6) - m(7)) * g(3) + (t754 / 0.2e1 - g(3) + t766) * m(3) + (t769 + 0.2e1 * t913 + 0.2e1 * t922 + 0.2e1 * t1101) * t1086; (t745 * ((-t1003 * t536 + t699 * t948 + t808 * t946) * t1004 - (-t1003 * t535 + t699 * t949 + t808 * t947) * t1003 + (-t1003 * t704 + t699 * t938 + t808 * t937) * t746) / 0.2e1 - t743 * ((t1004 * t536 - t700 * t946 + t701 * t948) * t1004 - (t1004 * t535 - t700 * t947 + t701 * t949) * t1003 + (t1004 * t704 - t700 * t937 + t701 * t938) * t746) / 0.2e1) * t744 * qJD(2) ^ 2 + (t322 * t746 + t744 * t826) * t741 / 0.2e1 + (t70 * (-t186 * t667 - t247 * t578 + t321 * t529 + t412 * t427 + t761) + t69 * (t188 * t667 + t249 * t578 - t321 * t530 - t411 * t427 + t763) + t61 * (t186 * t530 - t188 * t529 + t247 * t411 - t249 * t412 + t767)) * t872 + (-g(1) * (t402 + t821) - g(2) * (t401 + t822) - g(3) * (t614 + t852) - t93 * (t614 * t616 - t744 * t888 + t799 + (-t401 - t522) * t710) - (t402 * t710 + t791 + (-t614 - t640) * t615) * t1091 / 0.2e1 - (t401 * t615 + t847 + (-t402 - t523) * t616) * t1092 / 0.2e1 - (t93 * (t1001 * t970 + t505 * t699) + t92 * (t1001 * t307 + t701 * t944) + t85 * (t306 * t701 + t699 * t969)) * qJD(3)) * m(5) + (t1214 * t746 + (t1217 * t743 - t1253 * t745) * t744) * t1055 + (t1215 * t746 + (t1220 * t743 - t1254 * t745) * t744) * t1066 + (t1216 * t746 + (t1222 * t743 - t1255 * t745) * t744) * t1064 + (t258 * t746 + t744 * t827) * t731 / 0.2e1 + (t1163 * t746 + (t1169 * t743 + t1226 * t745) * t744) * t1071 + (t1164 * t746 + (t1171 * t743 + t1227 * t745) * t744) * t1081 + (t1165 * t746 + (t1173 * t743 + t1228 * t745) * t744) * t1079 + (t48 * (t412 * t952 + t529 * t961 + t578 * t975 + t667 * t980 - t700 * t920 + t761) + t47 * (-t411 * t952 - t530 * t961 + t578 * t974 + t667 * t979 + t808 * t920 + t763) + t38 * (qJD(6) * t901 - t411 * t975 - t412 * t974 - t529 * t979 - t530 * t980 + t767)) * t871 + ((t1107 * t600 + t1108 * t599 + t1109 * t699) * t710 - t1105 * t808 + (t1116 * t600 + t1118 * t599 + t1123 * t699) * t616 + (t1115 * t600 + t1117 * t599 + t1122 * t699) * t615 + (t1001 * t1143 + t1149 * t701 + t1150 * t699) * qJD(3)) * t1065 - m(4) * (g(1) * (t400 + t545) + g(2) * (t399 + t543) + g(3) * (t613 + t709)) - m(6) * (g(1) * (t821 + t249 + t534) + g(2) * (t822 + t247 + t533) + g(3) * (t852 + t427 + t692)) + (t213 * t746 + t744 * t829) * t742 / 0.2e1 + (t72 * ((-t308 - t544) * t746 + t745 * t869) + t138 * ((-t209 - t524) * t746 + t745 * t870) + t71 * (t309 * t746 + t743 * t869 + t531) + t137 * (t210 * t746 + t743 * t870 + t469) + t64 * ((t308 * t743 + t309 * t745) * t744 + t943) + t124 * ((t209 * t743 + t210 * t745) * t744 + t950)) * t873 + (0.2e1 * t43 * t958 + t987 * t1091 + 0.2e1 * t37 * t854 + t859 * t1092 + (t44 * (-t544 + t970) + t93 * (-t211 + t986) + t43 * t307 + t92 * t212) * t909 + ((t85 * t212 + t37 * t307 + t44 * t892 + t895 * t93) * t910 + (t85 * t211 + t37 * t306 + t43 * t892 + t895 * t92) * t911) * t744) * t1088 + ((qJD(2) * t811 + qJDD(2) * t813) * t813 + t324 * t811 + (qJD(2) * t810 + qJDD(2) * t812) * t812 + t323 * t810 + (qJDD(1) + t766) * t800 + t253 * t824 * t744 - (t324 * (-t1003 * t707 - t541 * t746) + t323 * (-t1004 * t707 + t542 * t746) + t253 * (t1003 * t542 + t1004 * t541)) * t907 / 0.2e1 - g(1) * t542 - g(2) * t541 - g(3) * t707) * m(3) + (t138 * (-t399 * t710 + t613 * t616 + (-t1001 * t308 + t506 * t699) * qJD(3) + (-t1003 * t709 - t543 * t746) * qJD(2)) + t137 * (t400 * t710 - t613 * t615 + (t1001 * t309 - t506 * t701) * qJD(3) + t818) + t124 * (t399 * t615 - t400 * t616 + (t308 * t701 - t309 * t699) * qJD(3) + t945)) * t874 - t1224 * t930 / 0.2e1 - t1225 * t931 / 0.2e1 - t1219 * t886 / 0.2e1 + (t17 * t1178 + t898 * t1093 + t814 * t1098 + t816 * t1094 + (t18 * (-t544 + t896) + t70 * (-t111 + t897) + t17 * t188 + t69 * t113) * t909 + ((t61 * t113 + t16 * t188 + t18 * t855 + t70 * t861) * t910 + (t17 * t855 + t69 * t861 + t849) * t911) * t744) * t1087 + (t13 * t1178 + t898 * t1096 + t814 * t1099 + t816 * t1097 + (t12 * (-t544 + t858) + t48 * (t897 - t991) + t13 * t979 + t47 * t990) * t909 + ((t12 * t846 + t38 * t990 + t48 * t848 + t7 * t979) * t910 + (t13 * t846 + t47 * t848 + t792) * t911) * t744) * t1086 - t1168 * t529 / 0.2e1 + (t1155 * t667 + (-t1009 * t1121 + t1111 * t453 + t1112 * t452 + t1113 * t602 + t1119 * t518 + t1120 * t517) * t578 + t1159 * t530 + t1160 * t529 + (-t1009 * t1140 + t1129 * t453 + t1131 * t452 + t1133 * t602 + t1136 * t518 + t1138 * t517) * t412 + (-t1009 * t1139 + t1128 * t453 + t1130 * t452 + t1132 * t602 + t1135 * t518 + t1137 * t517) * t411) * t1082 + (t1155 * t746 + (t1159 * t743 - t1160 * t745) * t744) * t1085 + (t1156 * t667 + (t1012 * t1121 + t1111 * t451 + t1112 * t450 + t1113 * t600 + t1119 * t516 + t1120 * t515) * t578 + t1161 * t530 + t1162 * t529 + (t1012 * t1140 + t1129 * t451 + t1131 * t450 + t1133 * t600 + t1136 * t516 + t1138 * t515) * t412 + (t1012 * t1139 + t1128 * t451 + t1130 * t450 + t1132 * t600 + t1135 * t516 + t1137 * t515) * t411) * t1080 + (t1156 * t746 + (t1161 * t743 - t1162 * t745) * t744) * t1084 - t1166 * t667 / 0.2e1 - t1167 * t530 / 0.2e1 - (t1100 * qJDD(2) + ((-t1003 * t668 - t638 * t663 + t639 * t662 + t669 * t808 + t670 * t699) * t746 + t744 * (-(-t1003 * t509 - t476 * t663 + t478 * t662 + t511 * t808 + t513 * t699) * t745 + (-t1003 * t510 - t477 * t663 + t479 * t662 + t512 * t808 + t514 * t699) * t743)) * t907 + t1234) * t1003 / 0.2e1 + ((qJD(2) * t152 + qJDD(2) * t258) * t746 + (qJD(2) * t830 + qJDD(2) * t827) * t744 + t1235) * t1004 / 0.2e1 + ((qJD(2) * t213 + qJDD(2) * t322) * t746 + (qJD(2) * t829 + qJDD(2) * t826) * t744 + t1236) * t746 / 0.2e1 - m(7) * (g(1) * (t821 + t1126) + g(2) * (t822 - t1127) + g(3) * (t852 + t1110)) - t1100 * t881 / 0.2e1 + (t1146 * t667 + (-t1111 * t606 + t1112 * t605 + t1113 * t703 + t1119 * t628 + t1120 * t627 + t1121 * t901) * t578 + t1157 * t530 + t1158 * t529 + (-t1129 * t606 + t1131 * t605 + t1133 * t703 + t1136 * t628 + t1138 * t627 + t1140 * t901) * t412 + (-t1128 * t606 + t1130 * t605 + t1132 * t703 + t1135 * t628 + t1137 * t627 + t1139 * t901) * t411) * t1072 + (t1146 * t746 + (t1157 * t743 - t1158 * t745) * t744) * t1083 - (t746 ^ 2 * t668 + (((t743 * t946 - t745 * t947) * t753 + (t743 * t948 - t745 * t949) * t750) * t744 + (-t535 * t745 + t536 * t743 + t750 * t938 + t753 * t937) * t746) * t935) * t742 / 0.2e1 + (t1141 * t746 + (t1144 * t743 - t1145 * t745) * t744) * t1063 + ((t1107 * t602 + t1108 * t601 + t1109 * t701) * t710 + t1105 * t700 + (t1116 * t602 + t1118 * t601 + t1123 * t701) * t616 + (t1115 * t602 + t1117 * t601 + t1122 * t701) * t615 + (t1001 * t1142 + t1147 * t701 + t1148 * t699) * qJD(3)) * t1067 + (t1142 * t746 + (t1147 * t743 - t1148 * t745) * t744) * t1076 + (t1143 * t746 + (t1149 * t743 - t1150 * t745) * t744) * t1075 + t743 * (t152 * t746 + t744 * t830) * t880 + ((t1107 * t703 + t1108 * t702) * t710 + (t1116 * t703 + t1118 * t702) * t616 + (t1115 * t703 + t1117 * t702) * t615 + (t1144 * t701 + t1145 * t699) * qJD(3) + (-t1105 * t753 + (qJD(3) * t1141 + t1109 * t710 + t1122 * t615 + t1123 * t616) * t750) * t744) * t1056; (t1166 * t702 + t1167 * t601 + t1168 * t599) * qJD(5) / 0.2e1 + (t70 * (-t272 * t578 + t410 * t412 + (t186 * t702 - t321 * t599) * qJD(5) + t788) + t69 * (t274 * t578 - t410 * t411 + (-t188 * t702 + t321 * t601) * qJD(5) + t789) + t61 * (t272 * t411 - t274 * t412 + (-t186 * t601 + t188 * t599) * qJD(5) + t790)) * t872 + (t138 * (-t373 * t710 + t555 * t616) + t137 * (t377 * t710 - t555 * t615) + t124 * (t373 * t615 - t377 * t616)) * t874 + (-t1253 * t808 + (t1141 * t933 - t1214 * t753) * t744 + t1217 * t700 + t1144 * t665 + t1145 * t663) * t1055 + (-t1254 * t808 + (t1142 * t933 - t1215 * t753) * t744 + t1220 * t700 + t1147 * t665 + t1148 * t663) * t1066 + (-t1255 * t808 + (t1143 * t933 - t1216 * t753) * t744 + t1222 * t700 + t1149 * t665 + t1150 * t663) * t1064 - m(5) * (-g(1) * t954 - g(2) * t956 - g(3) * t942) + (t72 * (t308 * t999 - t506 * t808) + t138 * (-t343 * t808 + t506 * t663 + (t209 * t753 - t308 * t933) * t744) + t71 * (-t309 * t999 - t506 * t700) + t137 * (-t343 * t700 - t506 * t665 + (-t210 * t753 + t309 * t933) * t744) + t64 * (t308 * t700 + t309 * t808) + t124 * (t209 * t700 + t210 * t808 + t308 * t665 - t309 * t663)) * t873 + (t44 * (t306 * t999 - t505 * t808 + t959) + t93 * (-t342 * t808 + t505 * t663 + (t211 * t753 + t933 * t970) * t744 + t899) + t43 * (t700 * t944 + t969 * t999) + t92 * (t344 + t968 * t700 + t944 * t665 + (t307 * t933 + t753 * t985) * t744) + t37 * (t306 * t700 - t808 * t969 + t313) + t85 * (t211 * t700 + t306 * t665 + t663 * t969 - t808 * t985 + t988)) * t917 / 0.2e1 + (t12 * t1179 + t815 * t1095 + t960 * t1096 + t966 * t1099 + t860 * t1097 + (t13 * t856 + t47 * t862 + t792) * t912 + ((t48 * t858 + t1153) * t864 + (-t12 * t980 + t13 * t857 + t47 * t863 + t48 * t991) * t908) * t744 + 0.2e1 * (t47 * t856 - t1154) * t665 + 0.2e1 * (t38 * t857 + t1152) * t663 - 0.2e1 * (t12 * t961 + t38 * t863 + t48 * t989 + t7 * t857) * t808) * t1086 + (t1219 + t1166) * t750 * t880 + (t18 * t1179 + t815 * t1180 + t960 * t1093 + t966 * t1098 + t860 * t1094 + (t17 * t894 + t69 * t900 + t849) * t912 + ((t69 * t188 + t70 * t896) * t864 + (t70 * t111 + t1134 * t17 + t1151 * t69 + t18 * t186) * t908) * t744 - (t1094 * t1151 + t1098 * t1134 + t1180 * t150 + 0.2e1 * t18 * t321) * t808 + (t1093 * t894 + t186 * t1094) * t665 + (t1094 * t1134 + t321 * t1180) * t663) * t1087 + (t1227 * t808 + (t1155 * t933 - t1164 * t753) * t744 + t1171 * t700 + t1159 * t665 + t1160 * t663) * t1081 + (t1228 * t808 + (t1156 * t933 - t1165 * t753) * t744 + t1173 * t700 + t1161 * t665 + t1162 * t663) * t1079 - (t93 * (t553 * t616 + t710 * t956 + t957) + t92 * (t375 * t710 + t615 * t942 + t962) + t85 * (t371 * t615 + t616 * t954 + t973)) * t917 / 0.2e1 + (t1224 + t1167) * t665 / 0.2e1 + (t1225 + t1168) * t663 / 0.2e1 + (t1226 * t808 + (t1146 * t933 - t1163 * t753) * t744 + t1169 * t700 + t1157 * t665 + t1158 * t663) * t1071 + (-t1155 * t999 + t1159 * t700 - t1160 * t808) * t1085 + (t1199 * t602 + (-t1121 * t601 + t1200 * t453 + t1201 * t452) * t578 + (-t1140 * t601 + t1203 * t453 + t1205 * t452) * t412 + (-t1139 * t601 + t1202 * t453 + t1204 * t452) * t411 + (-t1155 * t702 - t1159 * t601 - t1160 * t599) * qJD(5)) * t1082 + (-t1156 * t999 + t1161 * t700 - t1162 * t808) * t1084 + (t1199 * t600 + (-t1121 * t599 + t1200 * t451 + t1201 * t450) * t578 + (-t1140 * t599 + t1203 * t451 + t1205 * t450) * t412 + (-t1139 * t599 + t1202 * t451 + t1204 * t450) * t411 + (-t1156 * t702 - t1161 * t601 - t1162 * t599) * qJD(5)) * t1080 + (-t1146 * t999 + t1157 * t700 - t1158 * t808) * t1083 + (t1199 * t703 + (-t1121 * t702 - t1200 * t606 + t1201 * t605) * t578 + (-t1140 * t702 - t1203 * t606 + t1205 * t605) * t412 + (-t1139 * t702 - t1202 * t606 + t1204 * t605) * t411 + (-t1146 * t702 - t1157 * t601 - t1158 * t599) * qJD(5)) * t1072 - m(7) * (g(1) * (t376 + t1185) + g(2) * (t372 + t1186) + g(3) * (t554 + t1184)) - m(7) * ((-qJD(6) * t601 + t1114 * t412 - t1125 * t578 + t788) * t1095 + (-qJD(6) * t599 - t1114 * t411 + t1124 * t578 + t789) * t1096 + (-qJD(6) * t702 - t1124 * t412 + t1125 * t411 + t790) * t1097 + 0.2e1 * ((-t48 * t980 - t1153) * t702 + (t47 * t961 + t1154) * t601 + (t38 * t979 - t1152) * t599) * qJD(5)) / 0.2e1 - t1234 * t808 / 0.2e1 + t1235 * t700 / 0.2e1 - t1236 * t999 / 0.2e1 - m(6) * (g(1) * (t274 + t376 - t1052) + g(2) * (t272 + t372 - t1053) + g(3) * (t410 + t554 - t1051)) + (t1196 * t700 + t1197 * t602 + t1198 * t601) * t1067 + (-t1196 * t999 + t1197 * t703 + t1198 * t702) * t1056 + (-t1196 * t808 + t1197 * t600 + t1198 * t599) * t1065 + (-t1142 * t999 + t1147 * t700 - t1148 * t808) * t1076 + (-t1143 * t999 + t1149 * t700 - t1150 * t808) * t1075 + (-t1141 * t999 + t1144 * t700 - t1145 * t808) * t1063 - m(4) * (g(1) * t377 + g(2) * t373 + g(3) * t555); (t12 * t601 + t13 * t599 + t38 * t978 + t47 * t972 + t48 * t971 + t7 * t702 - t311) * m(7) + (t16 * t702 + t17 * t599 + t18 * t601 + t61 * t978 + t69 * t972 + t70 * t971 - t311) * m(6) + (t37 * t702 + t43 * t599 + t44 * t601 + t85 * t978 + t92 * t972 + t93 * t971 - t311) * m(5); (t70 * (-t231 * t578 + t386 * t412) + t69 * (t233 * t578 - t386 * t411) + t61 * (t231 * t411 - t233 * t412)) * t872 + (t18 * (-t186 * t703 + t321 * t600) + t70 * (-t111 * t703 + t150 * t600 - t186 * t604 + t321 * t444) + t17 * (t188 * t703 - t321 * t602) + t69 * (t113 * t703 - t150 * t602 + t188 * t604 - t321 * t446) + t16 * (t186 * t602 - t188 * t600) + t61 * (t111 * t602 - t113 * t600 + t186 * t446 - t188 * t444)) * t916 / 0.2e1 - m(7) * (g(1) * t976 + g(2) * t977 + g(3) * t953) + (t48 * (t412 * t953 - t578 * t977) + t47 * (-t411 * t953 + t578 * t976) + t38 * (t411 * t977 - t412 * t976)) * t871 - m(6) * (g(1) * t233 + g(2) * t231 + g(3) * t386) + (t12 * (t600 * t961 + t703 * t980) + t48 * (t444 * t961 + t600 * t989 + t604 * t980 - t703 * t991) + t13 * (-t602 * t961 + t703 * t979) + t47 * (-t446 * t961 - t602 * t989 + t604 * t979 + t703 * t990) + t7 * (-t600 * t979 - t602 * t980) + t38 * (-t444 * t979 - t446 * t980 - t600 * t990 + t602 * t991)) * t915 / 0.2e1 + (t1155 * t703 + t1159 * t602 + t1160 * t600) * t1085 + (t1156 * t703 + t1161 * t602 + t1162 * t600) * t1084 + (t1146 * t703 + t1157 * t602 + t1158 * t600) * t1083 + (t1102 * t602 + t1104 * t452 - t1233 * t453) * t1082 + (t1155 * t604 + t1159 * t446 + t1160 * t444 + t1164 * t703 + t1171 * t602 - t1227 * t600) * t1081 + (t1102 * t600 + t1104 * t450 - t1233 * t451) * t1080 + (t1156 * t604 + t1161 * t446 + t1162 * t444 + t1165 * t703 + t1173 * t602 - t1228 * t600) * t1079 + t1168 * t444 / 0.2e1 + t1167 * t446 / 0.2e1 + (t1102 * t703 + t1104 * t605 + t1233 * t606) * t1072 + (t1146 * t604 + t1157 * t446 + t1158 * t444 + t1163 * t703 + t1169 * t602 - t1226 * t600) * t1071 + t1177 * t600 / 0.2e1 + t1176 * t602 / 0.2e1 + t1166 * t604 / 0.2e1 + t1175 * t703 / 0.2e1; ((-g(3) + t7) * t703 + (t12 - g(1)) * t602 + (-g(2) + t13) * t600 + (-t412 * t703 + t578 * t600 + t446) * t48 + (t411 * t703 - t578 * t602 + t444) * t47 + (-t411 * t600 + t412 * t602 + t604) * t38) * m(7);];
tau  = t1;
