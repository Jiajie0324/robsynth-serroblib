% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% MDP [33x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRP11_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRP11_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(33,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP11_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP11_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP11_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [33 1]), ...
  'S6RRRRRP11_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [33x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:54:20
% EndTime: 2019-03-10 02:55:02
% DurationCPUTime: 26.99s
% Computational Cost: add. (23008->786), mult. (68600->1085), div. (0->0), fcn. (56693->12), ass. (0->321)
t824 = cos(pkin(7));
t831 = cos(qJ(3));
t832 = cos(qJ(2));
t984 = t831 * t832;
t827 = sin(qJ(3));
t828 = sin(qJ(2));
t989 = t827 * t828;
t876 = -t824 * t989 + t984;
t823 = sin(pkin(6));
t957 = qJD(1) * t823;
t758 = t876 * t957;
t822 = sin(pkin(7));
t951 = qJD(3) * t831;
t928 = t822 * t951;
t1027 = t758 - t928;
t997 = t822 * t827;
t811 = pkin(10) * t997;
t992 = t824 * t831;
t1026 = pkin(2) * t992 - t811;
t1010 = cos(pkin(6));
t933 = pkin(1) * t1010;
t904 = t832 * t933;
t808 = qJD(1) * t904;
t897 = t823 * (-pkin(10) * t824 - pkin(9));
t881 = t828 * t897;
t738 = qJD(1) * t881 + t808;
t905 = t828 * t933;
t848 = t832 * t897 - t905;
t739 = t848 * qJD(1);
t864 = (-pkin(10) * t822 * t832 + pkin(2) * t828) * t823;
t770 = qJD(1) * t864;
t993 = t824 * t827;
t1048 = t1026 * qJD(3) - t831 * t738 - t739 * t993 - t770 * t997;
t679 = -t739 * t822 + t824 * t770;
t987 = t828 * t831;
t988 = t827 * t832;
t878 = t824 * t987 + t988;
t757 = t878 * t957;
t953 = qJD(3) * t822;
t1047 = pkin(3) * t757 - pkin(11) * t758 + t679 - (pkin(3) * t827 - pkin(11) * t831) * t953;
t932 = t828 * t957;
t903 = t822 * t932;
t1046 = pkin(11) * t903 - t1048;
t826 = sin(qJ(4));
t830 = cos(qJ(4));
t782 = -t830 * t824 + t826 * t997;
t1028 = -qJD(4) * t782 - t1027 * t830 - t826 * t903;
t783 = t824 * t826 + t830 * t997;
t967 = qJD(4) * t783 - t1027 * t826 + t830 * t903;
t995 = t822 * t831;
t960 = pkin(2) * t993 + pkin(10) * t995;
t1045 = t960 * qJD(3) - t827 * t738;
t952 = qJD(3) * t827;
t929 = t822 * t952;
t1022 = t929 - t757;
t918 = t1010 * qJD(1);
t886 = t918 + qJD(2);
t866 = t822 * t886;
t790 = t831 * t866;
t931 = t832 * t957;
t900 = t824 * t931;
t793 = t831 * t900;
t1037 = t790 + t793;
t902 = t827 * t932;
t704 = t902 - t1037;
t860 = qJD(4) + t704;
t877 = t824 * t988 + t987;
t861 = t877 * qJD(3);
t862 = t878 * qJD(2);
t1035 = t862 + t861;
t842 = t1035 * t823;
t865 = t827 * t886;
t859 = qJD(3) * t865;
t855 = t822 * t859;
t834 = qJD(1) * t842 + t855;
t994 = t823 * t832;
t858 = pkin(9) * t994 + t905;
t699 = t858 * qJD(1) + (t866 + t900) * pkin(10);
t850 = pkin(2) * t1010 + t881;
t703 = qJD(2) * pkin(2) + qJD(1) * t850 + t808;
t892 = qJD(2) * t918;
t882 = pkin(1) * t892;
t804 = t832 * t882;
t872 = qJD(2) * t881;
t720 = qJD(1) * t872 + t804;
t741 = t848 * qJD(2);
t721 = qJD(1) * t741;
t996 = t822 * t828;
t766 = (-pkin(2) * t832 - pkin(10) * t996 - pkin(1)) * t823;
t753 = qJD(1) * t766;
t771 = qJD(2) * t864;
t762 = qJD(1) * t771;
t926 = t824 * t951;
t857 = t699 * t952 - t703 * t926 - t831 * t720 - t721 * t993 - t753 * t928 - t762 * t997;
t942 = qJD(1) * qJD(2);
t922 = t823 * t942;
t899 = t828 * t922;
t887 = t822 * t899;
t582 = pkin(11) * t887 - t857;
t898 = t832 * t922;
t909 = t824 * qJD(2) + qJD(3);
t672 = qJD(3) * t1037 + t831 * t898 - t902 * t909;
t749 = t824 * t762;
t840 = t1035 * t957;
t599 = -t672 * pkin(11) + t749 + (pkin(3) * t859 - t721) * t822 + pkin(3) * t840;
t664 = -t703 * t822 + t824 * t753;
t863 = t877 * t823;
t706 = qJD(1) * t863 + t822 * t865;
t612 = pkin(3) * t704 - pkin(11) * t706 + t664;
t633 = t831 * t699 + t703 * t993 + t753 * t997;
t799 = t822 * t931;
t943 = t799 - qJD(3);
t851 = -t824 * t886 + t943;
t616 = -pkin(11) * t851 + t633;
t948 = qJD(4) * t830;
t950 = qJD(4) * t826;
t907 = t826 * t582 - t830 * t599 + t612 * t950 + t616 * t948;
t531 = -pkin(4) * t834 + t907;
t669 = t826 * t706 + t830 * t851;
t985 = t830 * t672;
t854 = t826 * t887 + t985;
t836 = -qJD(4) * t669 + t854;
t1036 = qJD(5) * t860 + t836;
t671 = t830 * t706 - t826 * t851;
t825 = sin(qJ(5));
t829 = cos(qJ(5));
t946 = qJD(5) * t829;
t560 = t1036 * t825 + t671 * t946 - t829 * t834;
t528 = t560 * pkin(5) + t531;
t1030 = t739 * t992 - (-pkin(3) * t932 - t770 * t831) * t822 + t1045;
t774 = pkin(11) * t824 + t960;
t775 = (-pkin(3) * t831 - pkin(11) * t827 - pkin(2)) * t822;
t1044 = t1046 * t830 + t1047 * t826 + t774 * t950 - t775 * t948;
t1023 = t1046 * t826 - t1047 * t830 - t774 * t948 - t775 * t950;
t973 = -t1022 * pkin(4) - t1023;
t1038 = -pkin(12) * t1022 + t1044;
t1042 = t633 - t860 * (pkin(4) * t826 - pkin(12) * t830);
t1041 = -t967 * pkin(4) + pkin(12) * t1028 - t1030;
t744 = t783 * t825 + t829 * t995;
t971 = qJD(5) * t744 - t1022 * t825 - t1028 * t829;
t938 = t825 * t995;
t970 = -qJD(5) * t938 - t1022 * t829 + t1028 * t825 + t783 * t946;
t1012 = -qJ(6) - pkin(12);
t1033 = -qJ(6) * t669 + qJD(5) * t1012;
t819 = t823 ^ 2;
t1032 = -0.2e1 * t819 * t942;
t1031 = MDP(5) * (t828 ^ 2 - t832 ^ 2);
t1021 = t824 * t984 - t989;
t920 = t1010 * t822;
t730 = -t1021 * t823 - t831 * t920;
t737 = t904 + t850;
t675 = -t737 * t822 + t824 * t766;
t731 = t827 * t920 + t863;
t628 = pkin(3) * t730 - pkin(11) * t731 + t675;
t919 = t1010 * t824;
t781 = t822 * t994 - t919;
t723 = (t824 * t994 + t920) * pkin(10) + t858;
t936 = t831 * t723 + t737 * t993 + t766 * t997;
t635 = -pkin(11) * t781 + t936;
t975 = t826 * t628 + t830 * t635;
t573 = pkin(12) * t730 + t975;
t1018 = -t827 * t723 + t831 * (t737 * t824 + t766 * t822);
t634 = pkin(3) * t781 - t1018;
t684 = t731 * t826 + t781 * t830;
t685 = t731 * t830 - t781 * t826;
t589 = pkin(4) * t684 - pkin(12) * t685 + t634;
t979 = t829 * t573 + t825 * t589;
t1029 = t1041 * t829;
t773 = t811 + (-pkin(2) * t831 - pkin(3)) * t824;
t686 = pkin(4) * t782 - pkin(12) * t783 + t773;
t966 = t830 * t774 + t826 * t775;
t688 = -pkin(12) * t995 + t966;
t968 = t825 * t686 + t829 * t688;
t1025 = qJD(2) * t757 + qJD(3) * t706;
t835 = -t855 - t840;
t947 = qJD(5) * t825;
t1024 = t1038 * t829 + t1041 * t825 - t686 * t946 + t688 * t947;
t939 = pkin(11) * t950;
t1020 = -t1042 * t829 + t825 * t939;
t632 = -t827 * t699 + t831 * (t703 * t824 + t753 * t822);
t657 = pkin(3) * t706 + pkin(11) * t704;
t976 = t830 * t632 + t826 * t657;
t581 = pkin(12) * t706 + t976;
t803 = -pkin(4) * t830 - pkin(12) * t826 - pkin(3);
t1019 = t1042 * t825 + t829 * t581 - t803 * t946;
t639 = t829 * t671 + t825 * t860;
t1017 = t639 ^ 2;
t833 = qJD(1) ^ 2;
t1016 = pkin(4) * t706;
t1015 = pkin(5) * t825;
t1014 = pkin(11) * t830;
t1011 = pkin(11) * qJD(4);
t1008 = qJ(6) * t826;
t1007 = t531 * t825;
t1006 = t531 * t829;
t559 = -t1036 * t829 + t671 * t947 - t825 * t834;
t1005 = t559 * t825;
t913 = t826 * t672 - t830 * t887;
t607 = t671 * qJD(4) + t913;
t1004 = t607 * t829;
t637 = t671 * t825 - t829 * t860;
t668 = qJD(5) + t669;
t1003 = t637 * t668;
t1002 = t639 * t668;
t1001 = t704 * t822;
t1000 = t704 * t826;
t999 = t704 * t830;
t998 = t819 * t833;
t991 = t825 * t607;
t990 = t826 * t829;
t986 = t829 * t830;
t565 = t826 * t612 + t830 * t616;
t562 = pkin(12) * t860 + t565;
t615 = pkin(3) * t851 - t632;
t570 = t669 * pkin(4) - t671 * pkin(12) + t615;
t541 = -t562 * t825 + t829 * t570;
t535 = -qJ(6) * t639 + t541;
t532 = pkin(5) * t668 + t535;
t983 = t532 - t535;
t745 = t783 * t829 - t938;
t982 = pkin(5) * t967 + qJ(6) * t971 - qJD(5) * t968 - qJD(6) * t745 + t1038 * t825 - t1029;
t981 = -qJ(6) * t970 - qJD(6) * t744 - t1024;
t564 = t830 * t612 - t826 * t616;
t620 = pkin(4) * t671 + pkin(12) * t669;
t980 = t829 * t564 + t825 * t620;
t653 = -t704 * t986 + t706 * t825;
t815 = pkin(11) * t986;
t945 = qJD(6) * t829;
t972 = pkin(5) * t1000 + qJ(6) * t653 + t581 * t825 - t826 * t945 + (pkin(5) * t826 - qJ(6) * t986) * qJD(4) + (-t815 + (-t803 + t1008) * t825) * qJD(5) + t1020;
t652 = -t829 * t706 - t825 * t999;
t969 = qJ(6) * t652 + (-qJ(6) * qJD(5) - t1011) * t990 + (-qJD(6) * t826 + (-pkin(11) * qJD(5) - qJ(6) * qJD(4)) * t830) * t825 - t1019;
t965 = t1033 * t825 + t945 - t980;
t619 = t829 * t620;
t964 = -pkin(5) * t671 - t619 + t1033 * t829 + (-qJD(6) + t564) * t825;
t959 = t825 * t803 + t815;
t956 = qJD(2) * t828;
t955 = qJD(2) * t831;
t954 = qJD(2) * t832;
t949 = qJD(4) * t829;
t944 = t615 * qJD(4);
t941 = pkin(1) * t998;
t930 = t823 * t956;
t927 = t824 * t952;
t925 = t668 * t947;
t924 = qJD(4) - t1037;
t917 = -t573 * t825 + t829 * t589;
t626 = t826 * t632;
t916 = t657 * t830 - t626;
t915 = t628 * t830 - t826 * t635;
t912 = t829 * t686 - t688 * t825;
t680 = -t741 * t822 + t824 * t771;
t911 = -t826 * t774 + t775 * t830;
t910 = t668 * t829;
t908 = t819 * t828 * t832 * MDP(4);
t809 = qJD(2) * t904;
t740 = t809 + t872;
t906 = -t723 * t951 - t737 * t927 - t827 * t740 - t766 * t929;
t901 = t822 * t930;
t896 = qJD(3) * t920;
t894 = pkin(1) * t1032;
t687 = pkin(4) * t995 - t911;
t891 = -t825 * t948 + t652;
t890 = t829 * t948 - t653;
t542 = t562 * t829 + t570 * t825;
t651 = t685 * t829 + t730 * t825;
t650 = t685 * t825 - t730 * t829;
t884 = t831 * t909;
t883 = t832 * (qJD(3) * t824 + qJD(2));
t856 = -t723 * t952 + t737 * t926 + t831 * t740 + t741 * t993 + t766 * t928 + t771 * t997;
t592 = pkin(11) * t901 + t856;
t677 = t827 * t896 + t842;
t678 = t831 * t896 + (t876 * qJD(2) + qJD(3) * t1021) * t823;
t604 = pkin(3) * t677 - pkin(11) * t678 + t680;
t880 = -t826 * t592 + t604 * t830 - t628 * t950 - t635 * t948;
t572 = -pkin(4) * t730 - t915;
t588 = -t699 * t951 - t703 * t927 - t827 * t720 + t721 * t992 - t753 * t929 + t762 * t995;
t875 = -t668 * t946 - t991;
t874 = t828 * t884;
t561 = -pkin(4) * t860 - t564;
t873 = -pkin(12) * t607 + t561 * t668;
t871 = -t830 * t582 - t826 * t599 - t612 * t948 + t616 * t950;
t870 = t830 * t592 + t826 * t604 + t628 * t948 - t635 * t950;
t530 = pkin(12) * t834 - t871;
t583 = -pkin(3) * t887 - t588;
t549 = t607 * pkin(4) - pkin(12) * t836 + t583;
t526 = t829 * t530 + t825 * t549 - t562 * t947 + t570 * t946;
t538 = pkin(12) * t677 + t870;
t593 = -t741 * t992 + (-pkin(3) * t930 - t771 * t831) * t822 - t906;
t621 = qJD(4) * t685 + t678 * t826 - t830 * t901;
t622 = -qJD(4) * t684 + t678 * t830 + t826 * t901;
t555 = pkin(4) * t621 - pkin(12) * t622 + t593;
t868 = t829 * t538 + t825 * t555 - t573 * t947 + t589 * t946;
t539 = -pkin(4) * t677 - t880;
t853 = qJD(4) * t860;
t527 = -qJD(5) * t542 - t530 * t825 + t829 * t549;
t847 = -qJD(5) * t979 - t538 * t825 + t829 * t555;
t846 = qJD(4) * t851;
t843 = t886 * t858;
t838 = t704 * t860 + t853;
t818 = t822 ^ 2;
t806 = t1012 * t829;
t805 = t1012 * t825;
t795 = t829 * t803;
t747 = -t1008 * t825 + t959;
t729 = -qJ(6) * t990 + t795 + (-pkin(11) * t825 - pkin(5)) * t830;
t673 = -t822 * t721 + t749;
t636 = t637 ^ 2;
t617 = -qJ(6) * t744 + t968;
t605 = pkin(5) * t782 - qJ(6) * t745 + t912;
t580 = -t916 - t1016;
t567 = -qJD(5) * t650 + t622 * t829 + t677 * t825;
t566 = qJD(5) * t651 + t622 * t825 - t677 * t829;
t556 = t637 * pkin(5) + qJD(6) + t561;
t543 = -qJ(6) * t650 + t979;
t540 = pkin(5) * t684 - qJ(6) * t651 + t917;
t536 = -qJ(6) * t637 + t542;
t525 = -qJ(6) * t566 - qJD(6) * t650 + t868;
t524 = pkin(5) * t621 - qJ(6) * t567 - qJD(6) * t651 + t847;
t523 = -qJ(6) * t560 - qJD(6) * t637 + t526;
t522 = pkin(5) * t607 + qJ(6) * t559 - qJD(6) * t639 + t527;
t1 = [(-t565 * t677 + t583 * t685 + t593 * t671 + t615 * t622 + t634 * t836 + t730 * t871 + t835 * t975 - t860 * t870) * MDP(24) + (t564 * t677 + t583 * t684 + t593 * t669 + t634 * t607 + t615 * t621 - t730 * t907 + t834 * t915 + t860 * t880) * MDP(23) + (t856 * t851 - t857 * t781 + t680 * t706 + t675 * t672 + t673 * t731 + t664 * t678 + (-qJD(1) * t936 - t633) * t901) * MDP(17) + (-t672 * t730 - t706 * t677 - t678 * t704 + t731 * t835) * MDP(12) + (MDP(6) * t823 * t954 - MDP(7) * t930) * (0.2e1 * t918 + qJD(2)) + 0.2e1 * t908 * t942 + (-t526 * t684 + t531 * t651 + t539 * t639 - t542 * t621 - t572 * t559 + t561 * t567 - t607 * t979 - t668 * t868) * MDP(31) + (-t678 * t851 - t672 * t781 + (qJD(1) * t731 + t706) * t901) * MDP(13) + (-qJD(2) * t843 + t828 * t894 - t858 * t892) * MDP(9) + (t622 * t924 + t685 * t855 + (-t706 * t950 - t830 * t846 + t985) * t730 + t671 * t677 + (t685 * t827 * t883 + (t826 * t822 * qJD(2) * t730 + t622 * t827 + t685 * t884) * t828) * t957) * MDP(20) + (t677 * t851 + t781 * t855 + (-t956 * t1001 + (t781 * t861 + (-t730 * t996 + t781 * t878) * qJD(2)) * qJD(1)) * t823) * MDP(14) + (t730 * t855 + t924 * t677 + (t730 * t874 + (t828 * t677 + t730 * t883) * t827) * t957) * MDP(22) + (-t621 * t924 - t684 * t855 - t607 * t730 - t669 * t677 + (-t684 * t874 + (-t621 * t828 - t684 * t883) * t827) * t957) * MDP(21) + (t527 * t684 + t531 * t650 + t539 * t637 + t541 * t621 + t572 * t560 + t561 * t566 + t607 * t917 + t668 * t847) * MDP(30) + (-t799 + (t919 - t781) * qJD(1) + t909) * MDP(15) * t901 + (-((t741 * t824 + t771 * t822) * t831 + t906) * t851 + t1018 * t887 - t588 * t781 + t632 * t901 + t680 * t704 + t675 * t834 + t673 * t730 + t664 * t677) * MDP(16) + (t523 * t543 + t536 * t525 + t522 * t540 + t532 * t524 + t528 * (pkin(5) * t650 + t572) + t556 * (pkin(5) * t566 + t539)) * MDP(33) + (t832 * t894 - (-pkin(9) * t930 + t809) * t886 - (-pkin(9) * t899 + t804) * t1010) * MDP(10) + t1031 * t1032 + (t671 * t622 + t685 * t836) * MDP(18) + (-t685 * t607 - t671 * t621 - t622 * t669 - t684 * t836) * MDP(19) + (t672 * t731 + t678 * t706) * MDP(11) + (-t560 * t684 - t566 * t668 - t607 * t650 - t621 * t637) * MDP(28) + (-t559 * t684 + t567 * t668 + t607 * t651 + t621 * t639) * MDP(27) + (t607 * t684 + t621 * t668) * MDP(29) + (t559 * t650 - t560 * t651 - t566 * t639 - t567 * t637) * MDP(26) + (-t559 * t651 + t567 * t639) * MDP(25) + (-t522 * t651 - t523 * t650 - t524 * t639 - t525 * t637 - t532 * t567 - t536 * t566 + t540 * t559 - t543 * t560) * MDP(32); (t912 * t607 + t527 * t782 + t687 * t560 + t531 * t744 + (-t688 * t946 + (-qJD(5) * t686 + t1038) * t825 - t1029) * t668 + t973 * t637 + t970 * t561 + t967 * t541) * MDP(30) + ((-MDP(6) * t832 + MDP(7) * t828) * t823 * t1010 - t908) * t833 + (t1022 * t564 + t1023 * t860 + t1030 * t669 + t583 * t782 + t773 * t607 + t615 * t967 + t834 * t911 + t907 * t995) * MDP(23) + (t1024 * t668 - t526 * t782 + t531 * t745 - t967 * t542 - t687 * t559 - t971 * t561 - t968 * t607 + t973 * t639) * MDP(31) + (-t924 * t757 + (-t757 * t989 - t862 * t995) * t957 + ((qJD(4) - 0.2e1 * t790 - t793) * t827 + (t827 ^ 2 * t828 - t831 * t877) * t957) * t953) * MDP(22) + (-t804 + t832 * t941 + (-pkin(9) * t932 + t808) * t918 + t808 * qJD(2)) * MDP(10) + (-t522 * t745 - t523 * t744 + t532 * t971 - t536 * t970 + t559 * t605 - t560 * t617 - t637 * t981 - t639 * t982) * MDP(32) + (t523 * t617 + t522 * t605 + t528 * (pkin(5) * t744 + t687) + (t970 * pkin(5) + t973) * t556 + t981 * t536 + t982 * t532) * MDP(33) + (-pkin(9) * t898 + qJD(1) * t843 + (-t882 + t941) * t828) * MDP(9) + (-t1022 * t706 + t1027 * t704 + t672 * t995 + t835 * t997) * MDP(12) + (-t1027 * t706 + t672 * t997) * MDP(11) + (-t1022 * t669 + t607 * t995 - t782 * t834 - t860 * t967) * MDP(21) + (t1022 * t671 + t1028 * t860 + t783 * t834 - t836 * t995) * MDP(20) + (t1028 * t671 + t836 * t783) * MDP(18) + (-t1028 * t669 - t783 * t607 - t671 * t967 - t782 * t836) * MDP(19) + (t857 * t824 - t679 * t706 - t664 * t758 + (t664 * t951 - pkin(2) * t672 + t673 * t827 + (-qJD(2) * t960 + t633) * t932) * t822 + t1048 * t851) * MDP(17) + (t559 * t744 - t560 * t745 + t637 * t971 - t639 * t970) * MDP(26) + (-t559 * t745 - t639 * t971) * MDP(25) + (-t559 * t782 + t607 * t745 + t639 * t967 - t668 * t971) * MDP(27) + (t818 * t827 * t899 + t672 * t824 + t758 * t851 + (-t706 * t932 - t851 * t951) * t822) * MDP(13) - (t824 * t918 - t943) * MDP(15) * t903 + (t607 * t782 + t668 * t967) * MDP(29) + (-t560 * t782 - t607 * t744 - t637 * t967 - t668 * t970) * MDP(28) + (-t1022 * t565 + t1028 * t615 + t1030 * t671 + t1044 * t860 + t583 * t783 + t773 * t836 + t835 * t966 - t871 * t995) * MDP(24) + ((t818 * t955 + t1001) * t932 + (-0.2e1 * t855 + t757 * t886 + (-t827 * t954 - t828 * t951 + (-t828 * t955 - t832 * t952) * t824) * t957) * t824 + t1022 * t943) * MDP(14) + (t1026 * t887 + t588 * t824 - t822 * pkin(2) * t834 - t673 * t995 - t632 * t903 - t679 * t704 + ((t739 * t824 + t770 * t822) * t831 + t1045) * t851 + t1022 * t664) * MDP(16) + t998 * t1031; t706 * t704 * MDP(11) + (-t704 ^ 2 + t706 ^ 2) * MDP(12) + (-t704 * t851 + t672) * MDP(13) + (-t706 * t851 + t835) * MDP(14) + MDP(15) * t887 + (-t633 * t851 - t664 * t706 + t588) * MDP(16) + (-t632 * t851 + t664 * t704 + t857) * MDP(17) + ((-qJD(4) * t706 + t887) * t826 ^ 2 + ((t672 - t846) * t826 + t860 * t671) * t830) * MDP(18) + (-t826 * t607 + t830 * t836 + (-t1000 - t950) * t671 + (-t948 - t999) * t669) * MDP(19) + (t1025 * t826 - t671 * t706 + t830 * t838) * MDP(20) + (t1025 * t830 + t669 * t706 - t826 * t838) * MDP(21) - t860 * t706 * MDP(22) + (-pkin(3) * t607 + t1000 * t615 - t1014 * t853 - t564 * t706 - t583 * t830 - t633 * t669 - t860 * t916 + (-pkin(11) * t834 + t944) * t826) * MDP(23) + (-pkin(3) * t836 + t1014 * t835 + t565 * t706 + t583 * t826 + t615 * t999 - t633 * t671 + t830 * t944 + (t939 + t976) * t860) * MDP(24) + (-t559 * t990 + (-t826 * t947 + t890) * t639) * MDP(25) + (t637 * t653 + t639 * t652 + (-t637 * t829 - t639 * t825) * t948 + (t1005 - t560 * t829 + (t637 * t825 - t639 * t829) * qJD(5)) * t826) * MDP(26) + (t559 * t830 + t890 * t668 + (t639 * t860 + t1004 - t925) * t826) * MDP(27) + (t560 * t830 + t891 * t668 + (-t637 * t860 + t875) * t826) * MDP(28) + (t668 * t826 * t860 - t607 * t830) * MDP(29) + (-t561 * t652 - t580 * t637 + t795 * t607 + ((-qJD(5) * t803 + t581) * t825 + t1020) * t668 + (t561 * t825 * qJD(4) - t527 + (qJD(4) * t637 + t875) * pkin(11)) * t830 + (pkin(11) * t560 + t541 * t860 + t561 * t946 + t1007) * t826) * MDP(30) + (-t959 * t607 - t580 * t639 - t561 * t653 + t1019 * t668 + (t561 * t949 + t526 + (qJD(4) * t639 + t925) * pkin(11)) * t830 + (-t561 * t947 + t1006 - t860 * t542 + (t668 * t949 - t559) * pkin(11)) * t826) * MDP(31) + (t532 * t653 + t536 * t652 + t559 * t729 - t560 * t747 - t972 * t639 - t969 * t637 + (-t532 * t829 - t536 * t825) * t948 + (-t522 * t829 - t523 * t825 + (t532 * t825 - t536 * t829) * qJD(5)) * t826) * MDP(32) + (t522 * t729 + t523 * t747 + t528 * (pkin(11) + t1015) * t826 + (t1016 - t626 + (t657 + t1011) * t830 + (t826 * t946 - t891) * pkin(5)) * t556 + t969 * t536 + t972 * t532) * MDP(33); -t669 ^ 2 * MDP(19) + (t669 * t704 + t854) * MDP(20) - t913 * MDP(21) + t834 * MDP(22) + (t565 * t860 - t907) * MDP(23) + (t564 * t860 + t615 * t669 + t871) * MDP(24) + (t639 * t910 - t1005) * MDP(25) + ((-t559 - t1003) * t829 + (-t560 - t1002) * t825) * MDP(26) + (t668 * t910 + t991) * MDP(27) + (-t668 ^ 2 * t825 + t1004) * MDP(28) + (-pkin(4) * t560 - t1006 - t565 * t637 + (-pkin(12) * t946 - t619) * t668 + (t564 * t668 + t873) * t825) * MDP(30) + (pkin(4) * t559 + t1007 - t565 * t639 + (pkin(12) * t947 + t980) * t668 + t873 * t829) * MDP(31) + (t559 * t805 + t560 * t806 - t964 * t639 - t965 * t637 + (-t532 * t668 + t523) * t829 + (-t536 * t668 - t522) * t825) * MDP(32) + (-t523 * t806 + t522 * t805 + t528 * (-pkin(5) * t829 - pkin(4)) + (t1015 * t668 - t565) * t556 + t965 * t536 + t964 * t532) * MDP(33) + (MDP(18) * t669 + MDP(19) * t671 + MDP(21) * t704 - t615 * MDP(23) - t639 * MDP(27) + t637 * MDP(28) - t668 * MDP(29) - t541 * MDP(30) + t542 * MDP(31)) * t671; t639 * t637 * MDP(25) + (-t636 + t1017) * MDP(26) + (-t559 + t1003) * MDP(27) + (-t560 + t1002) * MDP(28) + t607 * MDP(29) + (t542 * t668 - t561 * t639 + t527) * MDP(30) + (t541 * t668 + t561 * t637 - t526) * MDP(31) + (pkin(5) * t559 - t637 * t983) * MDP(32) + (t983 * t536 + (-t556 * t639 + t522) * pkin(5)) * MDP(33); (-t636 - t1017) * MDP(32) + (t532 * t639 + t536 * t637 + t528) * MDP(33);];
tauc  = t1;
