% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x33]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP11_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP11_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP11_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP11_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP11_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP11_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:53:44
% EndTime: 2019-03-10 02:54:40
% DurationCPUTime: 26.40s
% Computational Cost: add. (27878->868), mult. (79619->1207), div. (0->0), fcn. (67254->14), ass. (0->390)
t366 = cos(qJ(2));
t573 = cos(pkin(6));
t517 = pkin(1) * t573;
t348 = t366 * t517;
t339 = qJD(1) * t348;
t363 = sin(qJ(2));
t358 = sin(pkin(6));
t572 = cos(pkin(7));
t442 = t358 * (-pkin(10) * t572 - pkin(9));
t420 = t363 * t442;
t250 = qJD(1) * t420 + t339;
t347 = t363 * t517;
t386 = t366 * t442 - t347;
t251 = t386 * qJD(1);
t357 = sin(pkin(7));
t596 = pkin(10) * t357;
t447 = pkin(2) * t363 - t366 * t596;
t538 = qJD(1) * t358;
t287 = t447 * t538;
t601 = cos(qJ(3));
t468 = t572 * t601;
t362 = sin(qJ(3));
t562 = t357 * t362;
t426 = pkin(2) * t468 - pkin(10) * t562;
t498 = t362 * t572;
t647 = t426 * qJD(3) - t601 * t250 - t251 * t498 - t287 * t562;
t408 = -t363 * t498 + t366 * t601;
t283 = t408 * t358;
t269 = qJD(1) * t283;
t508 = t601 * qJD(3);
t476 = t357 * t508;
t646 = t476 - t269;
t178 = -t251 * t357 + t572 * t287;
t406 = t362 * t366 + t363 * t468;
t282 = t406 * t358;
t268 = qJD(1) * t282;
t645 = pkin(3) * t268 - pkin(11) * t269 + t178 - (pkin(3) * t362 - pkin(11) * t601) * t357 * qJD(3);
t512 = t363 * t538;
t480 = t357 * t512;
t644 = pkin(11) * t480 - t647;
t395 = t406 * qJD(2);
t497 = t366 * t572;
t407 = t362 * t497 + t363 * t601;
t375 = qJD(3) * t407 + t395;
t528 = qJDD(1) * t363;
t503 = t362 * t528;
t372 = (qJD(1) * t375 + t503) * t358;
t494 = t573 * qJD(1);
t454 = t494 + qJD(2);
t428 = t357 * t454;
t416 = t362 * t428;
t483 = t573 * qJDD(1);
t448 = t483 + qJDD(2);
t419 = t448 * t357;
t449 = t366 * t468;
t432 = t358 * t449;
t543 = -qJDD(1) * t432 - t601 * t419;
t390 = qJD(3) * t416 + t543;
t133 = t372 + t390;
t643 = -qJDD(4) - t133;
t361 = sin(qJ(4));
t365 = cos(qJ(4));
t299 = t361 * t562 - t365 * t572;
t619 = -qJD(4) * t299 - t361 * t480 + t646 * t365;
t561 = t357 * t365;
t300 = t361 * t572 + t362 * t561;
t547 = qJD(4) * t300 + t646 * t361 + t365 * t480;
t536 = qJD(3) * t362;
t510 = t357 * t536;
t618 = t268 - t510;
t516 = t357 * t601;
t541 = pkin(2) * t498 + pkin(10) * t516;
t642 = t541 * qJD(3) - t362 * t250 + t251 * t468;
t367 = cos(qJ(1));
t496 = t367 * t573;
t600 = sin(qJ(1));
t301 = t363 * t496 + t366 * t600;
t558 = t358 * t367;
t441 = t600 * t363 - t366 * t496;
t620 = t441 * t572;
t194 = -t301 * t601 + t362 * t620 + t558 * t562;
t499 = t358 * t572;
t606 = t357 * t441 - t367 * t499;
t142 = t194 * t365 - t361 * t606;
t191 = t301 * t362 + t516 * t558 + t601 * t620;
t360 = sin(qJ(5));
t364 = cos(qJ(5));
t641 = t142 * t360 + t191 * t364;
t567 = t191 * t360;
t640 = t142 * t364 - t567;
t514 = t601 * t287;
t617 = -(-pkin(3) * t512 - t514) * t357 + t642;
t291 = pkin(11) * t572 + t541;
t292 = (-pkin(3) * t601 - pkin(11) * t362 - pkin(2)) * t357;
t534 = qJD(4) * t365;
t535 = qJD(4) * t361;
t639 = t291 * t535 - t292 * t534 + t645 * t361 + t644 * t365;
t479 = t362 * t512;
t542 = -qJD(1) * t432 - t601 * t428;
t216 = t479 + t542;
t415 = qJD(4) + t216;
t635 = pkin(12) * t618 + t639;
t638 = t547 * pkin(4) - pkin(12) * t619 + t617;
t141 = t194 * t361 + t365 * t606;
t354 = t358 ^ 2;
t636 = 0.2e1 * t354;
t559 = t358 * t366;
t412 = pkin(9) * t559 + t347;
t470 = t358 * t497;
t212 = t412 * qJD(1) + (qJD(1) * t470 + t428) * pkin(10);
t391 = pkin(2) * t573 + t420;
t215 = qJD(2) * pkin(2) + qJD(1) * t391 + t339;
t446 = pkin(2) * t366 + t363 * t596;
t435 = -pkin(1) - t446;
t276 = t435 * t358;
t264 = qJD(1) * t276;
t116 = t601 * t212 + t215 * t498 + t264 * t562;
t634 = -t116 + t415 * (pkin(4) * t361 - pkin(12) * t365);
t256 = t360 * t300 + t364 * t516;
t550 = qJD(5) * t256 + t618 * t360 - t364 * t619;
t482 = t360 * t516;
t531 = qJD(5) * t364;
t549 = -qJD(5) * t482 + t300 * t531 + t360 * t619 + t618 * t364;
t632 = pkin(1) * t636;
t631 = t638 * t364;
t398 = t407 * t358;
t218 = qJD(1) * t398 + t416;
t522 = t357 * t559;
t393 = qJD(1) * t522 - t454 * t572 - qJD(3);
t166 = t361 * t218 + t365 * t393;
t485 = qJDD(1) * t572;
t462 = t366 * t485;
t493 = t572 * qJD(2);
t505 = t358 * t528;
t529 = qJD(1) * qJD(2);
t507 = t366 * t529;
t625 = t358 * t507 + t505;
t132 = -t493 * t479 + t625 * t601 + (t358 * t462 + t419) * t362 - t216 * qJD(3);
t506 = t363 * t529;
t475 = t358 * t506;
t526 = t366 * qJDD(1);
t504 = t358 * t526;
t224 = t572 * t448 + qJDD(3) + (t475 - t504) * t357;
t457 = t365 * t132 + t361 * t224;
t373 = -qJD(4) * t166 + t457;
t628 = qJD(5) * t415 + t373;
t290 = -pkin(3) * t572 - t426;
t187 = t299 * pkin(4) - t300 * pkin(12) + t290;
t546 = t365 * t291 + t361 * t292;
t190 = -pkin(12) * t516 + t546;
t532 = qJD(5) * t360;
t627 = -t187 * t531 + t190 * t532 - t638 * t360 + t364 * t635;
t626 = -t291 * t534 - t292 * t535 + t644 * t361 - t645 * t365;
t359 = -qJ(6) - pkin(12);
t624 = -qJ(6) * t166 + qJD(5) * t359;
t257 = t364 * t300 - t482;
t548 = t360 * t187 + t364 * t190;
t623 = t547 * pkin(5) + t550 * qJ(6) - qJD(5) * t548 - qJD(6) * t257 + t635 * t360 + t631;
t622 = -t549 * qJ(6) - qJD(6) * t256 - t627;
t579 = t618 * pkin(4) - t626;
t525 = pkin(11) * t535;
t621 = t360 * t525 + t634 * t364;
t384 = -qJDD(4) - t390;
t616 = t372 - t384;
t469 = t573 * t600;
t409 = t367 * t363 + t366 * t469;
t515 = t358 * t600;
t615 = -t357 * t515 + t409 * t572;
t614 = (qJDD(2) + 0.2e1 * t483) * t358;
t554 = t365 * t216;
t613 = t534 + t554;
t565 = t216 * t361;
t612 = t535 + t565;
t330 = -pkin(4) * t365 - pkin(12) * t361 - pkin(3);
t115 = -t362 * t212 + t215 * t468 + t264 * t516;
t150 = pkin(3) * t218 + pkin(11) * t216;
t553 = t365 * t115 + t361 * t150;
t67 = pkin(12) * t218 + t553;
t611 = -t330 * t531 - t634 * t360 + t364 * t67;
t168 = t365 * t218 - t361 * t393;
t37 = t168 * t531 + t360 * t628 + t364 * t643;
t609 = t37 * pkin(5) + qJDD(6);
t608 = qJD(3) * t218 + t358 * (qJD(1) * t395 + t503) + qJDD(4) + t543;
t302 = -t363 * t469 + t366 * t367;
t196 = t302 * t601 - t362 * t615;
t495 = t573 * t357;
t471 = t362 * t495;
t245 = t471 + t398;
t421 = g(1) * t196 - g(2) * t194 + g(3) * t245;
t195 = t302 * t362 + t601 * t615;
t450 = t601 * t495;
t556 = t362 * t363;
t244 = t358 * t556 - t432 - t450;
t422 = g(1) * t195 + g(2) * t191 + g(3) * t244;
t298 = -t572 * t573 + t522;
t186 = t245 * t365 - t298 * t361;
t137 = t186 * t360 - t244 * t364;
t378 = -t357 * t409 - t499 * t600;
t144 = t196 * t365 - t361 * t378;
t95 = -t144 * t360 + t195 * t364;
t607 = -g(1) * t95 - g(2) * t641 + g(3) * t137;
t477 = qJD(2) * t517;
t451 = qJD(1) * t477;
t473 = pkin(1) * t483;
t519 = pkin(9) * t504 + t363 * t473 + t366 * t451;
t410 = -pkin(9) * t475 + t519;
t463 = qJD(1) * t493;
t157 = (t419 + (-t363 * t463 + t462) * t358) * pkin(10) + t410;
t413 = -t363 * t451 + t366 * t473;
t431 = -t507 - t528;
t414 = t431 * pkin(9);
t163 = t448 * pkin(2) + ((-t363 * t485 - t366 * t463) * pkin(10) + t414) * t358 + t413;
t417 = t447 * qJD(2);
t197 = (qJD(1) * t417 + qJDD(1) * t435) * t358;
t492 = t572 * qJD(3);
t467 = t362 * t492;
t440 = t362 * t157 - t163 * t468 - t197 * t516 + t212 * t508 + t215 * t467 + t264 * t510;
t43 = -t224 * pkin(3) + t440;
t605 = t43 - t422;
t122 = t364 * t168 + t360 * t415;
t604 = t122 ^ 2;
t368 = qJD(1) ^ 2;
t598 = pkin(4) * t218;
t597 = pkin(5) * t360;
t595 = pkin(11) * t365;
t165 = qJD(5) + t166;
t162 = -t215 * t357 + t572 * t264;
t92 = pkin(3) * t216 - pkin(11) * t218 + t162;
t98 = -pkin(11) * t393 + t116;
t53 = t361 * t92 + t365 * t98;
t47 = pkin(12) * t415 + t53;
t97 = pkin(3) * t393 - t115;
t58 = t166 * pkin(4) - t168 * pkin(12) + t97;
t23 = -t360 * t47 + t364 * t58;
t17 = -qJ(6) * t122 + t23;
t13 = pkin(5) * t165 + t17;
t587 = -t17 + t13;
t249 = t348 + t391;
t174 = -t249 * t357 + t572 * t276;
t111 = pkin(3) * t244 - pkin(11) * t245 + t174;
t234 = (t470 + t495) * pkin(10) + t412;
t521 = t601 * t234 + t249 * t498 + t276 * t562;
t118 = -pkin(11) * t298 + t521;
t552 = t361 * t111 + t365 * t118;
t61 = pkin(12) * t244 + t552;
t387 = -t362 * t234 + t249 * t468 + t276 * t516;
t117 = t298 * pkin(3) - t387;
t185 = t245 * t361 + t298 * t365;
t71 = t185 * pkin(4) - t186 * pkin(12) + t117;
t586 = t360 * t71 + t364 * t61;
t583 = pkin(11) * qJD(4);
t36 = t168 * t532 + t360 * t643 - t364 * t628;
t582 = t36 * t360;
t488 = t361 * t132 - t365 * t224;
t74 = t168 * qJD(4) + t488;
t73 = qJDD(5) + t74;
t581 = t360 * t73;
t580 = t364 * t73;
t146 = t218 * t360 - t364 * t554;
t555 = t364 * t365;
t349 = pkin(11) * t555;
t530 = qJD(6) * t364;
t570 = qJ(6) * t361;
t578 = pkin(5) * t565 + qJ(6) * t146 + t360 * t67 - t361 * t530 + (pkin(5) * t361 - qJ(6) * t555) * qJD(4) + (-t349 + (-t330 + t570) * t360) * qJD(5) + t621;
t145 = -t364 * t218 - t360 * t554;
t557 = t361 * t364;
t577 = qJ(6) * t145 + (-qJ(6) * qJD(5) - t583) * t557 + (-qJD(6) * t361 + (-pkin(11) * qJD(5) - qJ(6) * qJD(4)) * t365) * t360 - t611;
t102 = pkin(4) * t168 + pkin(12) * t166;
t52 = -t361 * t98 + t365 * t92;
t574 = t360 * t102 + t364 * t52;
t576 = t360 * t624 + t530 - t574;
t101 = t364 * t102;
t575 = -pkin(5) * t168 - t101 + t624 * t364 + (-qJD(6) + t52) * t360;
t120 = t168 * t360 - t364 * t415;
t569 = t120 * t165;
t568 = t122 * t165;
t484 = t165 * t364;
t566 = t195 * t360;
t564 = t354 * t368;
t563 = t357 * t361;
t560 = t358 * t363;
t540 = t360 * t330 + t349;
t355 = t363 ^ 2;
t539 = -t366 ^ 2 + t355;
t537 = qJD(2) * t358;
t533 = qJD(5) * t165;
t524 = t366 * t564;
t523 = t357 * t560;
t518 = pkin(11) + t597;
t288 = t358 * t417;
t513 = t601 * t288;
t511 = t363 * t537;
t509 = qJD(4) + t542;
t501 = -t360 * t61 + t364 * t71;
t444 = qJD(3) * t468;
t405 = -t601 * t157 - t163 * t498 - t197 * t562 + t212 * t536 - t215 * t444 - t264 * t476;
t42 = pkin(11) * t224 - t405;
t105 = -t163 * t357 + t572 * t197;
t48 = pkin(3) * t133 - pkin(11) * t132 + t105;
t12 = -t361 * t42 + t365 * t48 - t98 * t534 - t92 * t535;
t109 = t361 * t115;
t491 = t150 * t365 - t109;
t490 = t111 * t365 - t361 * t118;
t487 = t364 * t187 - t190 * t360;
t253 = t386 * qJD(2);
t179 = -t253 * t357 + t572 * t288;
t486 = -t361 * t291 + t292 * t365;
t478 = t357 * t511;
t466 = t358 * t368 * t573;
t143 = t196 * t361 + t365 * t378;
t464 = g(1) * t141 + g(2) * t143;
t189 = pkin(4) * t516 - t486;
t459 = -t360 * t534 + t145;
t458 = t364 * t534 - t146;
t24 = t360 * t58 + t364 * t47;
t138 = t186 * t364 + t244 * t360;
t453 = 0.2e1 * t494 + qJD(2);
t340 = t366 * t477;
t252 = qJD(2) * t420 + t340;
t404 = -t234 * t536 + t249 * t444 + t601 * t252 + t253 * t498 + t276 * t476 + t288 * t562;
t77 = pkin(11) * t478 + t404;
t176 = qJD(3) * t471 + t358 * t375;
t177 = qJD(3) * t450 + ((t449 - t556) * qJD(3) + t408 * qJD(2)) * t358;
t86 = pkin(3) * t176 - pkin(11) * t177 + t179;
t452 = -t111 * t535 - t118 * t534 - t361 * t77 + t365 * t86;
t60 = -pkin(4) * t244 - t490;
t16 = t74 * pkin(4) - pkin(12) * t373 + t43;
t438 = -t361 * t48 - t365 * t42 - t92 * t534 + t535 * t98;
t9 = pkin(12) * t616 - t438;
t439 = -t360 * t16 - t364 * t9 + t47 * t532 - t58 * t531;
t433 = t111 * t534 - t118 * t535 + t361 * t86 + t365 * t77;
t20 = pkin(12) * t176 + t433;
t103 = qJD(4) * t186 + t177 * t361 - t365 * t478;
t104 = -qJD(4) * t185 + t177 * t365 + t361 * t478;
t399 = -t234 * t508 - t249 * t467 - t362 * t252 + t253 * t468 - t276 * t510;
t78 = (-pkin(3) * t511 - t513) * t357 - t399;
t34 = t103 * pkin(4) - t104 * pkin(12) + t78;
t437 = t364 * t20 + t360 * t34 + t71 * t531 - t532 * t61;
t46 = -pkin(4) * t415 - t52;
t436 = -pkin(12) * t73 + t165 * t46;
t427 = t366 * (t492 + qJD(2));
t425 = g(1) * t143 - g(2) * t141 + g(3) * t185;
t424 = -g(1) * t144 + g(2) * t142 - g(3) * t186;
t209 = -t301 * t498 - t441 * t601;
t169 = t209 * t361 - t301 * t561;
t211 = -t302 * t498 - t409 * t601;
t171 = t211 * t361 - t302 * t561;
t219 = t283 * t361 - t365 * t523;
t423 = -g(1) * t171 - g(2) * t169 - g(3) * t219;
t21 = -pkin(4) * t176 - t452;
t401 = qJD(4) * t415;
t4 = -qJD(5) * t24 + t364 * t16 - t360 * t9;
t397 = pkin(11) * t533 - t422;
t396 = t425 + t12;
t394 = -qJD(5) * t586 - t20 * t360 + t364 * t34;
t10 = -pkin(4) * t616 - t12;
t392 = pkin(12) * t533 + t10 - t425;
t389 = t363 * (qJD(2) * t468 + t508);
t385 = qJD(3) * t393;
t381 = t454 * t412;
t380 = t393 * t523;
t376 = t216 * t415 + t401;
t353 = pkin(5) * t364 + pkin(4);
t333 = t359 * t364;
t332 = t359 * t360;
t317 = t364 * t330;
t259 = -t360 * t570 + t540;
t243 = -qJ(6) * t557 + t317 + (-pkin(11) * t360 - pkin(5)) * t365;
t220 = t283 * t365 + t361 * t523;
t210 = t302 * t468 - t362 * t409;
t208 = t301 * t468 - t362 * t441;
t172 = t211 * t365 + t302 * t563;
t170 = t209 * t365 + t301 * t563;
t119 = t120 ^ 2;
t99 = -qJ(6) * t256 + t548;
t96 = t144 * t364 + t566;
t87 = pkin(5) * t299 - qJ(6) * t257 + t487;
t66 = -t491 - t598;
t55 = -qJD(5) * t137 + t104 * t364 + t176 * t360;
t54 = qJD(5) * t138 + t104 * t360 - t176 * t364;
t35 = t120 * pkin(5) + qJD(6) + t46;
t25 = -qJ(6) * t137 + t586;
t22 = pkin(5) * t185 - qJ(6) * t138 + t501;
t18 = -qJ(6) * t120 + t24;
t7 = t10 + t609;
t6 = -qJ(6) * t54 - qJD(6) * t137 + t437;
t5 = pkin(5) * t103 - qJ(6) * t55 - qJD(6) * t138 + t394;
t2 = -qJ(6) * t37 - qJD(6) * t120 - t439;
t1 = pkin(5) * t73 + qJ(6) * t36 - qJD(6) * t122 + t4;
t3 = [qJDD(1), g(1) * t600 - g(2) * t367, g(1) * t367 + g(2) * t600 (qJDD(1) * t355 + 0.2e1 * t366 * t506) * t354 (t363 * t526 - t529 * t539) * t636, t366 * t453 * t537 + t363 * t614, t366 * t614 - t453 * t511, t448 * t573, -qJD(2) * t381 + (-pkin(9) * t560 + t348) * t448 + (t358 * t414 + t413) * t573 + g(1) * t301 - g(2) * t302 + (t526 - t506) * t632 -(-pkin(9) * t511 + t340) * t454 - t412 * t448 - t410 * t573 - g(1) * t441 + g(2) * t409 + t431 * t632, t132 * t245 + t177 * t218, -t132 * t244 - t133 * t245 - t176 * t218 - t177 * t216, -t132 * t298 - t177 * t393 + t218 * t478 + t245 * t224, t133 * t298 + t176 * t393 - t216 * t478 - t244 * t224, -qJD(2) * t380 - t224 * t298 -(t357 * t513 + t399) * t393 + t387 * t224 + t440 * t298 + t115 * t478 + t179 * t216 + t174 * t133 + t105 * t244 + t162 * t176 - g(1) * t194 - g(2) * t196, -g(1) * t191 + g(2) * t195 + t105 * t245 - t116 * t478 + t174 * t132 + t162 * t177 + t179 * t218 - t224 * t521 - t298 * t405 + t393 * t404, t168 * t104 + t186 * t373, -t168 * t103 - t104 * t166 - t185 * t373 - t186 * t74, t104 * t509 - t186 * t384 + t373 * t244 + t168 * t176 + (t186 * t503 + (t186 * t389 + (t104 * t363 + t186 * t427) * t362) * qJD(1)) * t358, -t103 * t509 + t185 * t384 - t74 * t244 - t166 * t176 + (-t185 * t503 + (-t185 * t389 + (-t103 * t363 - t185 * t427) * t362) * qJD(1)) * t358, -t384 * t244 + t509 * t176 + (t244 * t503 + (t244 * t389 + (t363 * t176 + t244 * t427) * t362) * qJD(1)) * t358, -g(1) * t142 - g(2) * t144 + t97 * t103 + t117 * t74 + t12 * t244 + t78 * t166 + t52 * t176 + t43 * t185 + t415 * t452 - t490 * t643, t97 * t104 + t117 * t373 + t78 * t168 - t53 * t176 + t43 * t186 + t244 * t438 - t415 * t433 + t552 * t643 + t464, t122 * t55 - t138 * t36, -t120 * t55 - t122 * t54 + t137 * t36 - t138 * t37, t103 * t122 + t138 * t73 + t165 * t55 - t185 * t36, -t103 * t120 - t137 * t73 - t165 * t54 - t185 * t37, t103 * t165 + t185 * t73, -g(1) * t640 - g(2) * t96 + t10 * t137 + t23 * t103 + t21 * t120 + t394 * t165 + t4 * t185 + t60 * t37 + t46 * t54 + t501 * t73, g(1) * t641 - g(2) * t95 + t10 * t138 - t24 * t103 + t21 * t122 - t437 * t165 + t439 * t185 - t60 * t36 + t46 * t55 - t586 * t73, -t1 * t138 - t120 * t6 - t122 * t5 - t13 * t55 - t137 * t2 - t18 * t54 + t22 * t36 - t25 * t37 - t464, t2 * t25 + t18 * t6 + t1 * t22 + t13 * t5 + t7 * (pkin(5) * t137 + t60) + t35 * (pkin(5) * t54 + t21) - g(1) * (-pkin(1) * t600 - t301 * pkin(2) + t194 * pkin(3) - pkin(5) * t567 + pkin(9) * t558 - pkin(11) * t191 - t141 * t359 + t142 * t353) - g(2) * (t367 * pkin(1) + t302 * pkin(2) + t196 * pkin(3) + pkin(5) * t566 + pkin(9) * t515 + t195 * pkin(11) - t143 * t359 + t144 * t353) + (g(1) * t606 + g(2) * t378) * pkin(10); 0, 0, 0, -t363 * t524, t539 * t564, -t366 * t466 + t505, t363 * t466 + t504, t448, pkin(1) * t363 * t564 - pkin(9) * t625 + g(1) * t409 + g(2) * t441 - g(3) * t559 + qJD(1) * t381 + t413, pkin(1) * t524 + (-pkin(9) * t512 + t339) * t494 + g(1) * t302 + g(2) * t301 + g(3) * t560 + t339 * qJD(2) - t519, t132 * t562 + t646 * t218, t269 * t216 + t218 * t268 + (t601 * t132 - t133 * t362 + (-t216 * t601 - t218 * t362) * qJD(3)) * t357, t132 * t572 + t269 * t393 + (-t218 * t512 + t362 * t224 - t385 * t601) * t357, -t133 * t572 - t268 * t393 + (t216 * t512 + t224 * t601 + t362 * t385) * t357, qJD(1) * t380 + t224 * t572, -t357 * pkin(2) * t133 - g(1) * t211 - g(2) * t209 - g(3) * t283 - t105 * t516 - t115 * t480 - t618 * t162 - t178 * t216 + t426 * t224 - t440 * t572 + (t357 * t514 + t642) * t393, -t541 * t224 + t405 * t572 - t178 * t218 - t162 * t269 + g(1) * t210 + g(2) * t208 + g(3) * t282 + (-pkin(2) * t132 + t105 * t362 + t116 * t512 + t162 * t508) * t357 + t647 * t393, t168 * t619 + t373 * t300, -t166 * t619 - t168 * t547 - t299 * t373 - t300 * t74, -t168 * t618 - t300 * t643 - t373 * t516 + t415 * t619, t299 * t384 + t74 * t516 + t618 * t166 + (-t299 * t503 + (-t299 * t389 + (-t299 * t427 - t363 * t547) * t362) * qJD(1)) * t358 - t547 * t509, -t415 * t618 + t516 * t643, -g(1) * t172 - g(2) * t170 - g(3) * t220 - t12 * t516 + t617 * t166 + t290 * t74 + t43 * t299 + t415 * t626 - t486 * t643 - t618 * t52 + t547 * t97, t617 * t168 + t290 * t373 + t43 * t300 + t415 * t639 - t438 * t516 + t618 * t53 + t546 * t643 + t619 * t97 - t423, -t122 * t550 - t257 * t36, t120 * t550 - t122 * t549 + t256 * t36 - t257 * t37, t122 * t547 - t165 * t550 + t257 * t73 - t299 * t36, -t120 * t547 - t165 * t549 - t256 * t73 - t299 * t37, t165 * t547 + t299 * t73, t487 * t73 + t4 * t299 + t189 * t37 + t10 * t256 - g(1) * (t172 * t364 + t210 * t360) - g(2) * (t170 * t364 + t208 * t360) - g(3) * (t220 * t364 + t282 * t360) + t549 * t46 + t547 * t23 + (-t190 * t531 + (-qJD(5) * t187 + t635) * t360 + t631) * t165 + t579 * t120, -t548 * t73 + t439 * t299 - t189 * t36 + t10 * t257 - g(1) * (-t172 * t360 + t210 * t364) - g(2) * (-t170 * t360 + t208 * t364) - g(3) * (-t220 * t360 + t282 * t364) - t550 * t46 - t547 * t24 + t627 * t165 + t579 * t122, -t1 * t257 - t622 * t120 - t122 * t623 + t550 * t13 - t549 * t18 - t2 * t256 + t36 * t87 - t37 * t99 + t423, t2 * t99 + t1 * t87 + t7 * (pkin(5) * t256 + t189) - g(1) * (-pkin(2) * t409 + t211 * pkin(3) - t171 * t359 + t172 * t353 + t210 * t518 + t302 * t596) - g(2) * (-pkin(2) * t441 + t209 * pkin(3) - t169 * t359 + t170 * t353 + t208 * t518 + t301 * t596) - g(3) * (pkin(3) * t283 - t219 * t359 + t220 * t353 + t282 * t518 + t358 * t446) + (pkin(5) * t549 + t579) * t35 + t622 * t18 + t623 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218 * t216, -t216 ^ 2 + t218 ^ 2, -t216 * t393 + t132, -t218 * t393 - t133, t224, -t116 * t393 - t162 * t218 + t422 - t440, -t115 * t393 + t162 * t216 + t405 + t421 (-qJD(4) * t218 + t224) * t361 ^ 2 + ((-qJD(4) * t393 + t132) * t361 + t415 * t168) * t365, -t166 * t613 - t168 * t612 - t361 * t74 + t365 * t373, -t168 * t218 + t361 * t608 + t365 * t376, t166 * t218 - t361 * t376 + t365 * t608, -t415 * t218, pkin(11) * t361 * t643 - pkin(3) * t74 - t116 * t166 - t52 * t218 - t365 * t605 - t401 * t595 - t415 * t491 + t612 * t97, -pkin(3) * t373 - t116 * t168 + t53 * t218 + t643 * t595 + t613 * t97 + (t525 + t553) * t415 + t605 * t361, -t36 * t557 + (-t361 * t532 + t458) * t122, t120 * t146 + t122 * t145 + (-t120 * t364 - t122 * t360) * t534 + (t582 - t364 * t37 + (t120 * t360 - t122 * t364) * qJD(5)) * t361, t36 * t365 + t458 * t165 + (t122 * t415 - t165 * t532 + t580) * t361, t365 * t37 + t459 * t165 + (-t120 * t415 - t165 * t531 - t581) * t361, t165 * t361 * t415 - t365 * t73, -t66 * t120 - t46 * t145 + t317 * t73 + t621 * t165 + ((-qJD(5) * t330 + t67) * t165 - t421) * t360 + (t46 * t360 * qJD(4) - t4 + (qJD(4) * t120 - t581) * pkin(11) - t397 * t364) * t365 + (pkin(11) * t37 + t10 * t360 + t23 * t415 + t46 * t531) * t361, -t540 * t73 - t66 * t122 - t46 * t146 + t611 * t165 - t421 * t364 + (-t439 + (pkin(11) * t122 + t364 * t46) * qJD(4) + t397 * t360) * t365 + (-t46 * t532 + t10 * t364 - t415 * t24 + (qJD(4) * t484 - t36) * pkin(11)) * t361, t13 * t146 + t145 * t18 + t243 * t36 - t259 * t37 - t578 * t122 - t577 * t120 + (-t13 * t364 - t18 * t360) * t534 + (-t1 * t364 - t2 * t360 + (t13 * t360 - t18 * t364) * qJD(5) + t422) * t361, t1 * t243 + t2 * t259 + (t598 - t109 + (t150 + t583) * t365 + (t361 * t531 - t459) * pkin(5)) * t35 + t577 * t18 + t578 * t13 + t422 * (t353 * t365 - t359 * t361 + pkin(3)) + (t361 * t7 - t421) * t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168 * t166, -t166 ^ 2 + t168 ^ 2, t216 * t166 + t457, t168 * t216 - t488, -t643, -t97 * t168 + t415 * t53 + t396, t97 * t166 + t415 * t52 - t424 + t438, t122 * t484 - t582 (-t36 - t569) * t364 + (-t37 - t568) * t360, -t122 * t168 + t165 * t484 + t581, -t165 ^ 2 * t360 + t120 * t168 + t580, -t165 * t168, -pkin(4) * t37 - t101 * t165 - t53 * t120 - t23 * t168 + (t52 * t165 + t436) * t360 - t392 * t364, pkin(4) * t36 - t53 * t122 + t165 * t574 + t24 * t168 + t360 * t392 + t364 * t436, t332 * t36 + t333 * t37 - t575 * t122 - t576 * t120 + (-t13 * t165 + t2) * t364 + (-t165 * t18 - t1) * t360 + t424, -t2 * t333 + t1 * t332 - t7 * t353 - g(1) * (-t143 * t353 - t144 * t359) - g(2) * (t141 * t353 + t142 * t359) - g(3) * (-t185 * t353 - t186 * t359) + (t165 * t597 - t53) * t35 + t576 * t18 + t575 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122 * t120, -t119 + t604, -t36 + t569, -t37 + t568, t73, -t46 * t122 + t24 * t165 + t4 + t607, g(1) * t96 - g(2) * t640 + g(3) * t138 + t46 * t120 + t23 * t165 + t439, pkin(5) * t36 - t120 * t587, t587 * t18 + (-t35 * t122 + t1 + t607) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119 - t604, pkin(4) * t643 + t18 * t120 + t13 * t122 - t396 + t609;];
tau_reg  = t3;
