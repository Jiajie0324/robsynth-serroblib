% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRRRP11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 07:15
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRRRP11_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP11_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP11_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP11_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP11_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP11_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 07:15:07
% EndTime: 2019-05-08 07:15:24
% DurationCPUTime: 18.42s
% Computational Cost: add. (211417->364), mult. (523076->564), div. (0->0), fcn. (444559->14), ass. (0->309)
t2769 = cos(pkin(6));
t2760 = qJD(1) * t2769 + qJD(2);
t2773 = sin(qJ(2));
t2777 = cos(qJ(3));
t2778 = cos(qJ(2));
t2768 = cos(pkin(7));
t2772 = sin(qJ(3));
t2849 = t2768 * t2772;
t2766 = sin(pkin(7));
t2852 = t2766 * t2772;
t2767 = sin(pkin(6));
t2862 = qJD(1) * t2767;
t2724 = t2760 * t2852 + (t2773 * t2777 + t2778 * t2849) * t2862;
t2851 = t2767 * t2773;
t2843 = qJD(1) * t2851;
t2845 = qJDD(1) * t2767;
t2742 = -qJD(2) * t2843 + t2778 * t2845;
t2759 = t2769 * qJDD(1) + qJDD(2);
t2804 = t2742 * t2768 + t2759 * t2766;
t2850 = t2767 * t2778;
t2842 = qJD(1) * t2850;
t2846 = qJD(2) * t2842 + t2773 * t2845;
t2793 = -t2772 * t2846 + t2777 * t2804;
t2790 = -t2724 * qJD(3) + t2793;
t2789 = qJDD(4) - t2790;
t2780 = qJD(1) ^ 2;
t2853 = t2767 ^ 2 * t2780;
t2878 = t2773 * t2853;
t2774 = sin(qJ(1));
t2779 = cos(qJ(1));
t2755 = -g(1) * t2779 - g(2) * t2774;
t2795 = -pkin(1) * t2780 + pkin(9) * t2845 + t2755;
t2791 = t2773 * t2795;
t2754 = t2774 * g(1) - t2779 * g(2);
t2796 = pkin(9) * t2767 * t2780 + qJDD(1) * pkin(1) + t2754;
t2794 = t2769 * t2796;
t2714 = -t2791 + (-t2767 * g(3) + t2794) * t2778;
t2864 = pkin(10) * t2766;
t2803 = -pkin(2) * t2778 - t2773 * t2864;
t2799 = t2803 * t2862;
t2854 = t2760 * t2768;
t2844 = pkin(10) * t2854;
t2863 = t2759 * pkin(2);
t2866 = t2760 ^ 2;
t2783 = t2863 + (t2766 * t2866 - t2768 * t2846) * pkin(10) + (-t2773 * t2799 + t2778 * t2844) * t2862 + t2714;
t2731 = -t2769 * g(3) - t2767 * t2796;
t2876 = t2760 * t2766 + t2768 * t2842;
t2797 = t2876 * pkin(10);
t2786 = -t2742 * pkin(2) + (-pkin(10) * t2768 * t2843 + pkin(2) * t2760) * t2843 - t2797 * t2842 + t2731;
t2785 = -t2846 * t2864 + t2786;
t2877 = t2766 * t2785 + t2768 * t2783;
t2722 = t2772 * t2843 - t2777 * t2876;
t2800 = qJD(4) + t2722;
t2798 = t2800 ^ 2;
t2700 = -t2722 * qJD(3) + t2742 * t2849 + t2759 * t2852 + t2777 * t2846;
t2736 = -t2766 * t2842 + qJD(3) + t2854;
t2857 = t2722 * t2736;
t2676 = t2700 - t2857;
t2771 = sin(qJ(4));
t2776 = cos(qJ(4));
t2713 = t2724 * t2776 + t2736 * t2771;
t2726 = -t2742 * t2766 + t2768 * t2759 + qJDD(3);
t2839 = t2771 * t2700 - t2776 * t2726;
t2801 = t2713 * qJD(4) + qJDD(5) + t2839;
t2770 = sin(qJ(5));
t2775 = cos(qJ(5));
t2690 = t2770 * t2713 - t2775 * t2800;
t2692 = t2775 * t2713 + t2770 * t2800;
t2861 = t2690 * t2692;
t2643 = t2801 - t2861;
t2711 = t2724 * t2771 - t2776 * t2736;
t2809 = -t2776 * t2700 - t2771 * t2726;
t2668 = -t2711 * qJD(4) - t2809;
t2875 = t2711 * t2800 - t2668;
t2874 = t2690 ^ 2;
t2873 = t2692 ^ 2;
t2710 = qJD(5) + t2711;
t2872 = t2710 ^ 2;
t2871 = t2711 ^ 2;
t2870 = t2713 ^ 2;
t2869 = t2722 ^ 2;
t2868 = t2724 ^ 2;
t2867 = t2736 ^ 2;
t2865 = -2 * qJD(6);
t2860 = t2710 * t2690;
t2859 = t2713 * t2711;
t2858 = t2722 * t2724;
t2848 = qJD(5) - t2710;
t2847 = t2773 * t2794 + t2778 * t2795;
t2684 = -t2866 * pkin(2) + t2804 * pkin(10) + (-t2773 * g(3) + (t2773 * t2844 + t2778 * t2799) * qJD(1)) * t2767 + t2847;
t2647 = t2777 * t2684 + t2772 * t2877;
t2708 = pkin(3) * t2722 - pkin(11) * t2724;
t2637 = -pkin(3) * t2867 + pkin(11) * t2726 - t2708 * t2722 + t2647;
t2781 = -t2766 * t2783 + t2768 * t2785 - t2676 * pkin(11) + (t2736 * t2724 - t2790) * pkin(3);
t2608 = t2776 * t2637 + t2771 * t2781;
t2685 = pkin(4) * t2711 - pkin(12) * t2713;
t2593 = -pkin(4) * t2798 + pkin(12) * t2789 - t2711 * t2685 + t2608;
t2836 = t2772 * t2684 - t2777 * t2877;
t2636 = -t2726 * pkin(3) - t2867 * pkin(11) + t2724 * t2708 + t2836;
t2658 = (0.2e1 * qJD(4) + t2722) * t2713 + t2839;
t2602 = t2658 * pkin(4) + pkin(12) * t2875 + t2636;
t2579 = t2775 * t2593 + t2770 * t2602;
t2578 = -t2770 * t2593 + t2775 * t2602;
t2607 = -t2771 * t2637 + t2776 * t2781;
t2840 = t2770 * t2668 - t2775 * t2789;
t2838 = t2760 * t2842;
t2788 = -t2775 * t2668 - t2770 * t2789;
t2787 = -t2690 * qJD(5) - t2788;
t2562 = t2692 * t2865 + t2578 + (-t2787 - t2860) * qJ(6) + t2643 * pkin(5);
t2671 = pkin(5) * t2710 - qJ(6) * t2692;
t2802 = -qJD(5) * t2692 - t2840;
t2565 = -t2710 * t2671 + t2802 * qJ(6) + (-pkin(5) * t2690 + t2865) * t2690 + t2579;
t2550 = -t2562 * t2770 + t2565 * t2775;
t2592 = -t2789 * pkin(4) - t2798 * pkin(12) + t2713 * t2685 - t2607;
t2582 = -pkin(5) * t2802 - qJ(6) * t2874 + t2692 * t2671 + qJDD(6) + t2592;
t2542 = t2550 * t2771 - t2582 * t2776;
t2543 = t2550 * t2776 + t2582 * t2771;
t2549 = t2562 * t2775 + t2565 * t2770;
t2833 = t2543 * t2772 - t2549 * t2777;
t2527 = -t2766 * t2542 + t2768 * t2833;
t2532 = t2543 * t2777 + t2549 * t2772;
t2835 = t2527 * t2778 + t2532 * t2773;
t2555 = -t2578 * t2770 + t2579 * t2775;
t2552 = t2555 * t2771 - t2592 * t2776;
t2553 = t2555 * t2776 + t2592 * t2771;
t2554 = t2578 * t2775 + t2579 * t2770;
t2832 = t2553 * t2772 - t2554 * t2777;
t2529 = -t2766 * t2552 + t2768 * t2832;
t2539 = t2553 * t2777 + t2554 * t2772;
t2834 = t2529 * t2778 + t2539 * t2773;
t2580 = t2607 * t2776 + t2608 * t2771;
t2581 = -t2607 * t2771 + t2608 * t2776;
t2827 = t2581 * t2772 - t2636 * t2777;
t2558 = -t2766 * t2580 + t2768 * t2827;
t2574 = t2581 * t2777 + t2636 * t2772;
t2831 = t2558 * t2778 + t2574 * t2773;
t2631 = -t2692 * t2848 - t2840;
t2633 = t2690 * t2848 + t2788;
t2606 = t2631 * t2775 - t2633 * t2770;
t2656 = -t2873 - t2874;
t2589 = t2606 * t2771 - t2656 * t2776;
t2590 = t2606 * t2776 + t2656 * t2771;
t2605 = t2631 * t2770 + t2633 * t2775;
t2826 = t2590 * t2772 - t2605 * t2777;
t2561 = -t2766 * t2589 + t2768 * t2826;
t2577 = t2590 * t2777 + t2605 * t2772;
t2830 = t2561 * t2778 + t2577 * t2773;
t2662 = -t2872 - t2874;
t2623 = -t2643 * t2770 + t2662 * t2775;
t2630 = (qJD(5) + t2710) * t2692 + t2840;
t2596 = t2623 * t2771 - t2630 * t2776;
t2597 = t2623 * t2776 + t2630 * t2771;
t2622 = t2643 * t2775 + t2662 * t2770;
t2824 = t2597 * t2772 - t2622 * t2777;
t2567 = -t2766 * t2596 + t2768 * t2824;
t2584 = t2597 * t2777 + t2622 * t2772;
t2829 = t2567 * t2778 + t2584 * t2773;
t2644 = -t2801 - t2861;
t2664 = -t2872 - t2873;
t2627 = t2644 * t2775 - t2664 * t2770;
t2632 = t2787 - t2860;
t2598 = t2627 * t2771 - t2632 * t2776;
t2599 = t2627 * t2776 + t2632 * t2771;
t2626 = t2644 * t2770 + t2664 * t2775;
t2823 = t2599 * t2772 - t2626 * t2777;
t2569 = -t2766 * t2598 + t2768 * t2823;
t2586 = t2599 * t2777 + t2626 * t2772;
t2828 = t2569 * t2778 + t2586 * t2773;
t2659 = t2713 * t2722 - t2839;
t2661 = -t2711 * t2722 + t2809;
t2628 = t2659 * t2771 + t2661 * t2776;
t2629 = t2659 * t2776 - t2661 * t2771;
t2669 = -t2870 - t2871;
t2819 = t2629 * t2772 - t2669 * t2777;
t2595 = -t2766 * t2628 + t2768 * t2819;
t2620 = t2629 * t2777 + t2669 * t2772;
t2825 = t2595 * t2778 + t2620 * t2773;
t2665 = t2789 - t2859;
t2673 = -t2798 - t2871;
t2648 = t2665 * t2776 + t2673 * t2771;
t2649 = -t2665 * t2771 + t2673 * t2776;
t2816 = t2649 * t2772 - t2658 * t2777;
t2610 = -t2766 * t2648 + t2768 * t2816;
t2624 = t2649 * t2777 + t2658 * t2772;
t2822 = t2610 * t2778 + t2624 * t2773;
t2663 = -t2766 * (-g(3) * t2850 + t2760 * t2797 + t2778 * t2794 - t2803 * t2878 - t2791 + t2863) + t2768 * t2786;
t2817 = t2647 * t2772 - t2777 * t2836;
t2612 = -t2766 * t2663 + t2768 * t2817;
t2619 = t2647 * t2777 + t2772 * t2836;
t2821 = t2612 * t2778 + t2619 * t2773;
t2666 = -t2859 - t2789;
t2682 = -t2870 - t2798;
t2650 = t2666 * t2771 + t2682 * t2776;
t2651 = t2666 * t2776 - t2682 * t2771;
t2815 = t2651 * t2772 + t2777 * t2875;
t2614 = -t2766 * t2650 + t2768 * t2815;
t2625 = t2651 * t2777 - t2772 * t2875;
t2820 = t2614 * t2778 + t2625 * t2773;
t2689 = -t2868 - t2869;
t2675 = (-qJD(3) + t2736) * t2724 + t2793;
t2677 = -t2700 - t2857;
t2812 = t2675 * t2772 + t2677 * t2777;
t2642 = -t2766 * t2689 + t2768 * t2812;
t2657 = t2675 * t2777 - t2677 * t2772;
t2818 = t2642 * t2778 + t2657 * t2773;
t2674 = (qJD(3) + t2736) * t2724 - t2793;
t2695 = t2726 - t2858;
t2699 = -t2867 - t2869;
t2810 = t2695 * t2777 + t2699 * t2772;
t2653 = -t2766 * t2674 + t2768 * t2810;
t2667 = -t2695 * t2772 + t2699 * t2777;
t2814 = t2653 * t2778 + t2667 * t2773;
t2694 = -t2726 - t2858;
t2705 = -t2867 - t2868;
t2811 = t2694 * t2772 + t2705 * t2777;
t2655 = -t2766 * t2676 + t2768 * t2811;
t2670 = t2694 * t2777 - t2705 * t2772;
t2813 = t2655 * t2778 + t2670 * t2773;
t2715 = -g(3) * t2851 + t2847;
t2808 = t2714 * t2778 + t2715 * t2773;
t2728 = t2838 - t2846;
t2745 = t2760 * t2843;
t2729 = t2742 + t2745;
t2807 = t2728 * t2778 + t2729 * t2773;
t2764 = t2773 ^ 2;
t2737 = -t2764 * t2853 - t2866;
t2753 = t2778 * t2878;
t2741 = t2753 - t2759;
t2806 = t2737 * t2778 + t2741 * t2773;
t2740 = t2753 + t2759;
t2765 = t2778 ^ 2;
t2743 = -t2765 * t2853 - t2866;
t2805 = t2740 * t2778 + t2743 * t2773;
t2752 = -qJDD(1) * t2774 - t2779 * t2780;
t2751 = qJDD(1) * t2779 - t2774 * t2780;
t2744 = (-t2764 - t2765) * t2853;
t2730 = -t2742 + t2745;
t2727 = t2838 + t2846;
t2718 = -t2740 * t2773 + t2743 * t2778;
t2716 = -t2737 * t2773 + t2741 * t2778;
t2709 = -t2728 * t2773 + t2729 * t2778;
t2707 = -t2767 * t2730 + t2769 * t2805;
t2706 = t2769 * t2730 + t2767 * t2805;
t2704 = -t2767 * t2727 + t2769 * t2806;
t2703 = t2769 * t2727 + t2767 * t2806;
t2702 = -t2767 * t2744 + t2769 * t2807;
t2701 = t2769 * t2744 + t2767 * t2807;
t2693 = -t2714 * t2773 + t2715 * t2778;
t2679 = -t2767 * t2731 + t2769 * t2808;
t2678 = t2769 * t2731 + t2767 * t2808;
t2654 = t2768 * t2676 + t2766 * t2811;
t2652 = t2768 * t2674 + t2766 * t2810;
t2641 = t2768 * t2689 + t2766 * t2812;
t2640 = -t2655 * t2773 + t2670 * t2778;
t2635 = -t2653 * t2773 + t2667 * t2778;
t2621 = -t2642 * t2773 + t2657 * t2778;
t2618 = -t2767 * t2654 + t2769 * t2813;
t2617 = t2769 * t2654 + t2767 * t2813;
t2616 = -t2767 * t2652 + t2769 * t2814;
t2615 = t2769 * t2652 + t2767 * t2814;
t2613 = t2768 * t2650 + t2766 * t2815;
t2611 = t2768 * t2663 + t2766 * t2817;
t2609 = t2768 * t2648 + t2766 * t2816;
t2604 = -t2767 * t2641 + t2769 * t2818;
t2603 = t2769 * t2641 + t2767 * t2818;
t2594 = t2768 * t2628 + t2766 * t2819;
t2588 = -t2614 * t2773 + t2625 * t2778;
t2587 = -t2610 * t2773 + t2624 * t2778;
t2585 = -t2612 * t2773 + t2619 * t2778;
t2583 = -t2595 * t2773 + t2620 * t2778;
t2576 = -t2767 * t2613 + t2769 * t2820;
t2575 = t2769 * t2613 + t2767 * t2820;
t2573 = -t2767 * t2609 + t2769 * t2822;
t2572 = t2769 * t2609 + t2767 * t2822;
t2571 = -t2767 * t2611 + t2769 * t2821;
t2570 = t2769 * t2611 + t2767 * t2821;
t2568 = t2768 * t2598 + t2766 * t2823;
t2566 = t2768 * t2596 + t2766 * t2824;
t2564 = -t2767 * t2594 + t2769 * t2825;
t2563 = t2769 * t2594 + t2767 * t2825;
t2560 = t2768 * t2589 + t2766 * t2826;
t2559 = -t2569 * t2773 + t2586 * t2778;
t2557 = t2768 * t2580 + t2766 * t2827;
t2556 = -t2567 * t2773 + t2584 * t2778;
t2551 = -t2561 * t2773 + t2577 * t2778;
t2548 = -t2558 * t2773 + t2574 * t2778;
t2547 = -t2767 * t2568 + t2769 * t2828;
t2546 = t2769 * t2568 + t2767 * t2828;
t2545 = -t2767 * t2566 + t2769 * t2829;
t2544 = t2769 * t2566 + t2767 * t2829;
t2541 = -t2767 * t2560 + t2769 * t2830;
t2540 = t2769 * t2560 + t2767 * t2830;
t2538 = -t2767 * t2557 + t2769 * t2831;
t2537 = t2769 * t2557 + t2767 * t2831;
t2536 = -t2547 * t2774 + t2559 * t2779;
t2535 = t2547 * t2779 + t2559 * t2774;
t2534 = -t2545 * t2774 + t2556 * t2779;
t2533 = t2545 * t2779 + t2556 * t2774;
t2531 = -t2541 * t2774 + t2551 * t2779;
t2530 = t2541 * t2779 + t2551 * t2774;
t2528 = t2768 * t2552 + t2766 * t2832;
t2526 = t2768 * t2542 + t2766 * t2833;
t2525 = -t2529 * t2773 + t2539 * t2778;
t2524 = -t2527 * t2773 + t2532 * t2778;
t2523 = -t2767 * t2528 + t2769 * t2834;
t2522 = t2769 * t2528 + t2767 * t2834;
t2521 = -t2767 * t2526 + t2769 * t2835;
t2520 = t2769 * t2526 + t2767 * t2835;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2752, -t2751, 0, -t2754 * t2774 + t2755 * t2779, 0, 0, 0, 0, 0, 0, -t2707 * t2774 + t2718 * t2779, -t2704 * t2774 + t2716 * t2779, -t2702 * t2774 + t2709 * t2779, -t2679 * t2774 + t2693 * t2779, 0, 0, 0, 0, 0, 0, -t2616 * t2774 + t2635 * t2779, -t2618 * t2774 + t2640 * t2779, -t2604 * t2774 + t2621 * t2779, -t2571 * t2774 + t2585 * t2779, 0, 0, 0, 0, 0, 0, -t2573 * t2774 + t2587 * t2779, -t2576 * t2774 + t2588 * t2779, -t2564 * t2774 + t2583 * t2779, -t2538 * t2774 + t2548 * t2779, 0, 0, 0, 0, 0, 0, t2534, t2536, t2531, -t2523 * t2774 + t2525 * t2779, 0, 0, 0, 0, 0, 0, t2534, t2536, t2531, -t2521 * t2774 + t2524 * t2779; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2751, t2752, 0, t2754 * t2779 + t2755 * t2774, 0, 0, 0, 0, 0, 0, t2707 * t2779 + t2718 * t2774, t2704 * t2779 + t2716 * t2774, t2702 * t2779 + t2709 * t2774, t2679 * t2779 + t2693 * t2774, 0, 0, 0, 0, 0, 0, t2616 * t2779 + t2635 * t2774, t2618 * t2779 + t2640 * t2774, t2604 * t2779 + t2621 * t2774, t2571 * t2779 + t2585 * t2774, 0, 0, 0, 0, 0, 0, t2573 * t2779 + t2587 * t2774, t2576 * t2779 + t2588 * t2774, t2564 * t2779 + t2583 * t2774, t2538 * t2779 + t2548 * t2774, 0, 0, 0, 0, 0, 0, t2533, t2535, t2530, t2523 * t2779 + t2525 * t2774, 0, 0, 0, 0, 0, 0, t2533, t2535, t2530, t2521 * t2779 + t2524 * t2774; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2706, t2703, t2701, t2678, 0, 0, 0, 0, 0, 0, t2615, t2617, t2603, t2570, 0, 0, 0, 0, 0, 0, t2572, t2575, t2563, t2537, 0, 0, 0, 0, 0, 0, t2544, t2546, t2540, t2522, 0, 0, 0, 0, 0, 0, t2544, t2546, t2540, t2520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2780, -qJDD(1), 0, t2755, 0, 0, 0, 0, 0, 0, t2718, t2716, t2709, t2693, 0, 0, 0, 0, 0, 0, t2635, t2640, t2621, t2585, 0, 0, 0, 0, 0, 0, t2587, t2588, t2583, t2548, 0, 0, 0, 0, 0, 0, t2556, t2559, t2551, t2525, 0, 0, 0, 0, 0, 0, t2556, t2559, t2551, t2524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2780, 0, t2754, 0, 0, 0, 0, 0, 0, t2707, t2704, t2702, t2679, 0, 0, 0, 0, 0, 0, t2616, t2618, t2604, t2571, 0, 0, 0, 0, 0, 0, t2573, t2576, t2564, t2538, 0, 0, 0, 0, 0, 0, t2545, t2547, t2541, t2523, 0, 0, 0, 0, 0, 0, t2545, t2547, t2541, t2521; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2706, t2703, t2701, t2678, 0, 0, 0, 0, 0, 0, t2615, t2617, t2603, t2570, 0, 0, 0, 0, 0, 0, t2572, t2575, t2563, t2537, 0, 0, 0, 0, 0, 0, t2544, t2546, t2540, t2522, 0, 0, 0, 0, 0, 0, t2544, t2546, t2540, t2520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2743, t2741, t2729, t2715, 0, 0, 0, 0, 0, 0, t2667, t2670, t2657, t2619, 0, 0, 0, 0, 0, 0, t2624, t2625, t2620, t2574, 0, 0, 0, 0, 0, 0, t2584, t2586, t2577, t2539, 0, 0, 0, 0, 0, 0, t2584, t2586, t2577, t2532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2740, t2737, t2728, t2714, 0, 0, 0, 0, 0, 0, t2653, t2655, t2642, t2612, 0, 0, 0, 0, 0, 0, t2610, t2614, t2595, t2558, 0, 0, 0, 0, 0, 0, t2567, t2569, t2561, t2529, 0, 0, 0, 0, 0, 0, t2567, t2569, t2561, t2527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2730, t2727, t2744, t2731, 0, 0, 0, 0, 0, 0, t2652, t2654, t2641, t2611, 0, 0, 0, 0, 0, 0, t2609, t2613, t2594, t2557, 0, 0, 0, 0, 0, 0, t2566, t2568, t2560, t2528, 0, 0, 0, 0, 0, 0, t2566, t2568, t2560, t2526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2699, t2694, t2675, t2647, 0, 0, 0, 0, 0, 0, t2649, t2651, t2629, t2581, 0, 0, 0, 0, 0, 0, t2597, t2599, t2590, t2553, 0, 0, 0, 0, 0, 0, t2597, t2599, t2590, t2543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2695, t2705, t2677, -t2836, 0, 0, 0, 0, 0, 0, -t2658, t2875, -t2669, -t2636, 0, 0, 0, 0, 0, 0, -t2622, -t2626, -t2605, -t2554, 0, 0, 0, 0, 0, 0, -t2622, -t2626, -t2605, -t2549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2674, t2676, t2689, t2663, 0, 0, 0, 0, 0, 0, t2648, t2650, t2628, t2580, 0, 0, 0, 0, 0, 0, t2596, t2598, t2589, t2552, 0, 0, 0, 0, 0, 0, t2596, t2598, t2589, t2542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2673, t2666, t2659, t2608, 0, 0, 0, 0, 0, 0, t2623, t2627, t2606, t2555, 0, 0, 0, 0, 0, 0, t2623, t2627, t2606, t2550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2665, t2682, t2661, t2607, 0, 0, 0, 0, 0, 0, -t2630, -t2632, -t2656, -t2592, 0, 0, 0, 0, 0, 0, -t2630, -t2632, -t2656, -t2582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2658, -t2875, t2669, t2636, 0, 0, 0, 0, 0, 0, t2622, t2626, t2605, t2554, 0, 0, 0, 0, 0, 0, t2622, t2626, t2605, t2549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2662, t2644, t2631, t2579, 0, 0, 0, 0, 0, 0, t2662, t2644, t2631, t2565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2643, t2664, t2633, t2578, 0, 0, 0, 0, 0, 0, t2643, t2664, t2633, t2562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2630, t2632, t2656, t2592, 0, 0, 0, 0, 0, 0, t2630, t2632, t2656, t2582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2662, t2644, t2631, t2565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2643, t2664, t2633, t2562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2630, t2632, t2656, t2582;];
f_new_reg  = t1;
