% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x34]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:18
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:17:59
% EndTime: 2019-03-09 07:18:26
% DurationCPUTime: 16.28s
% Computational Cost: add. (12142->574), mult. (22216->735), div. (0->0), fcn. (25987->8), ass. (0->444)
t425 = sin(qJ(6));
t426 = sin(qJ(5));
t428 = sin(qJ(3));
t432 = -pkin(1) - pkin(7);
t730 = -pkin(8) + t432;
t393 = t730 * t428;
t431 = cos(qJ(3));
t394 = t730 * t431;
t427 = sin(qJ(4));
t430 = cos(qJ(4));
t250 = t427 * t393 - t430 * t394;
t391 = t427 * t428 - t430 * t431;
t723 = t391 * pkin(9) - t250;
t737 = t426 * t723;
t392 = -t427 * t431 - t428 * t430;
t389 = t430 * t393;
t630 = t427 * t394;
t721 = -t389 - t630;
t265 = -pkin(9) * t392 + t721;
t676 = cos(qJ(5));
t760 = t676 * t265;
t769 = -t760 + t737;
t784 = t769 * t425;
t790 = t784 / 0.2e1;
t796 = 0.2e1 * t790;
t429 = cos(qJ(6));
t783 = t769 * t429;
t791 = -t783 / 0.2e1;
t795 = 0.2e1 * t791;
t678 = -t429 / 0.2e1;
t418 = pkin(5) * t678;
t381 = t676 * t392;
t634 = t426 * t391;
t515 = t381 + t634;
t380 = t676 * t391;
t633 = t426 * t392;
t722 = -t380 + t633;
t736 = t429 * t722;
t750 = -t736 / 0.2e1;
t794 = pkin(10) * t750 + t515 * t418 + t796;
t680 = -t425 / 0.2e1;
t533 = t515 * t680;
t738 = t425 * t722;
t535 = -t738 / 0.2e1;
t793 = pkin(5) * t533 + pkin(10) * t535 + t795;
t242 = t760 / 0.2e1;
t532 = -t737 / 0.2e1;
t782 = t532 + t242;
t792 = 0.2e1 * t782;
t789 = qJD(4) + qJD(5);
t411 = pkin(3) * t428 + qJ(2);
t357 = -pkin(4) * t392 + t411;
t495 = -pkin(5) * t515 - pkin(10) * t722;
t443 = t357 + t495;
t52 = -t429 * t443 + t784;
t785 = t722 * t769;
t788 = t425 * t785 - t52 * t722;
t53 = t425 * t443 + t783;
t787 = t429 * t785 - t53 * t722;
t734 = t676 * t723;
t751 = -t734 / 0.2e1;
t761 = t426 * t265;
t766 = t751 - t761 / 0.2e1;
t786 = 0.2e1 * t766;
t781 = qJD(3) * t792;
t780 = qJD(3) * t786;
t566 = qJD(3) + qJD(4);
t732 = qJD(5) + t566;
t772 = t734 + t761;
t649 = t429 * t772;
t777 = t678 * t772 - t649 / 0.2e1;
t650 = t425 * t772;
t776 = t680 * t772 - t650 / 0.2e1;
t775 = -t760 / 0.2e1;
t503 = t734 / 0.2e1;
t57 = t751 + t503;
t774 = qJD(5) * t57;
t773 = t57 * qJD(1);
t330 = t722 ^ 2;
t747 = -t515 ^ 2 + t330;
t756 = t747 * t429;
t768 = t756 * qJD(1);
t757 = t747 * t425;
t767 = t757 * qJD(1);
t748 = t429 * t515;
t765 = -t748 / 0.2e1;
t764 = t748 / 0.2e1;
t749 = t425 * t515;
t763 = -t749 / 0.2e1;
t762 = t749 / 0.2e1;
t753 = t747 * qJD(1);
t752 = -t515 / 0.2e1;
t600 = qJD(5) * t722;
t729 = t722 * t566;
t745 = t600 + t729;
t672 = pkin(10) * t515;
t674 = pkin(5) * t722;
t197 = -t672 + t674;
t744 = qJD(5) * t515;
t424 = t429 ^ 2;
t700 = t425 ^ 2;
t513 = t700 / 0.2e1 - t424 / 0.2e1;
t150 = t513 * t722;
t135 = t150 * qJD(6);
t575 = t722 * qJD(1);
t735 = t515 * t575;
t743 = -t424 * t735 - t135;
t691 = t515 / 0.2e1;
t740 = t722 / 0.2e1;
t511 = t566 * t515;
t733 = t511 + t744;
t517 = qJD(3) + t789;
t639 = t425 * t429;
t726 = t517 * t639;
t101 = -t150 * qJD(1) + t726;
t731 = -0.2e1 * t722;
t561 = -t424 + t700;
t728 = t561 * t517;
t340 = t566 * t392;
t725 = t566 * t429;
t345 = t426 * pkin(4);
t413 = pkin(10) + t345;
t560 = t676 * pkin(4);
t414 = -t560 - pkin(5);
t681 = -t414 / 0.2e1;
t690 = -t722 / 0.2e1;
t436 = t413 * t690 - t515 * t681 + (t426 * t740 + t676 * t691) * pkin(4);
t473 = pkin(5) * t691 + pkin(10) * t740;
t433 = t436 + t473;
t19 = t429 * t433;
t552 = t676 * t427;
t631 = t426 * t430;
t386 = (t552 + t631) * pkin(3);
t557 = pkin(3) * t430 + pkin(4);
t497 = t426 * t557;
t377 = pkin(3) * t552 + t497;
t686 = t377 / 0.2e1;
t499 = t345 / 0.2e1 + t686;
t468 = -t386 / 0.2e1 + t499;
t246 = t468 * t425;
t559 = qJD(4) * t345;
t153 = t763 + t762;
t593 = t153 * qJD(2);
t720 = -qJD(1) * t19 - qJD(3) * t246 - t425 * t559 + t593;
t551 = t676 * t430;
t632 = t426 * t427;
t387 = (t551 - t632) * pkin(3);
t683 = -t387 / 0.2e1;
t400 = t676 * t557;
t376 = pkin(3) * t632 - t400;
t366 = -pkin(5) + t376;
t688 = -t366 / 0.2e1;
t490 = t683 + t681 + t688;
t222 = t490 * t429;
t675 = pkin(4) * t391;
t130 = -t675 + t197;
t682 = t413 / 0.2e1;
t465 = -t515 * t682 + t681 * t722;
t451 = t130 / 0.2e1 + t465;
t27 = t425 * t451;
t684 = t380 / 0.2e1;
t455 = t684 - t633 / 0.2e1;
t447 = t690 - t455;
t170 = t447 * t429;
t587 = t170 * qJD(2);
t602 = qJD(4) * t414;
t719 = -qJD(1) * t27 + qJD(3) * t222 - t429 * t602 + t587;
t221 = t490 * t425;
t29 = t429 * t451;
t160 = t447 * t425;
t591 = t160 * qJD(2);
t718 = qJD(1) * t29 + qJD(3) * t221 - t425 * t602 + t591;
t421 = t431 * pkin(3);
t129 = t130 + t421;
t367 = pkin(10) + t377;
t467 = t367 * t752 + t688 * t722;
t452 = t129 / 0.2e1 + t467;
t24 = t429 * t452;
t605 = qJD(3) * t425;
t717 = qJD(1) * t24 - t366 * t605 + t591;
t22 = t425 * t452;
t604 = qJD(3) * t429;
t716 = -qJD(1) * t22 - t366 * t604 + t587;
t520 = t376 / 0.2e1 + t688;
t687 = -t367 / 0.2e1;
t442 = (t687 + t686) * t722 - t520 * t515;
t435 = t442 + t473;
t15 = t429 * t435;
t715 = -qJD(1) * t15 - t377 * t605 + t593;
t501 = t381 / 0.2e1;
t328 = t501 - t381 / 0.2e1;
t578 = t328 * qJD(2);
t450 = t737 / 0.2e1;
t61 = t775 + t450 + t782;
t714 = qJD(1) * t61 + qJD(3) * t377 - t578;
t56 = t532 + t450;
t713 = t56 * qJD(1) + t345 * qJD(3) - t578;
t712 = t566 * t250;
t16 = t425 * t433;
t247 = t468 * t429;
t167 = t764 + t765;
t588 = t167 * qJD(2);
t711 = -t16 * qJD(1) + t247 * qJD(3) + t588;
t12 = t425 * t435;
t710 = t12 * qJD(1) - t588;
t4 = t130 * t749 + t787;
t439 = t515 * t740 + t722 * t752;
t49 = t439 * t429;
t624 = t49 * qJD(2);
t709 = t4 * qJD(1) - t624;
t3 = -t130 * t748 + t788;
t80 = t439 * t425;
t620 = t80 * qJD(2);
t708 = t3 * qJD(1) - t620;
t2 = t129 * t749 + t787;
t707 = t2 * qJD(1) - t624;
t1 = -t129 * t748 + t788;
t706 = t1 * qJD(1) - t620;
t558 = qJD(5) * t345;
t504 = 0.2e1 * t750;
t705 = qJD(6) * t504;
t704 = qJD(6) * t738;
t543 = qJD(1) * t639;
t703 = t150 * t517 + t330 * t543;
t699 = pkin(5) / 0.2e1;
t685 = -t380 / 0.2e1;
t528 = -t389 / 0.2e1;
t679 = t425 / 0.2e1;
t677 = t429 / 0.2e1;
t671 = pkin(3) * qJD(4);
t670 = qJD(3) * pkin(3);
t5 = -t197 * t748 + (-t52 + t784) * t722;
t665 = t5 * qJD(1);
t6 = t197 * t749 + (-t53 + t783) * t722;
t662 = t6 * qJD(1);
t466 = t386 * t740 - t515 * t683;
t434 = (t366 / 0.2e1 + t681) * t515 + (t687 + t682) * t722 + t466;
t8 = t791 + t783 / 0.2e1 + t434 * t425;
t661 = t8 * qJD(1);
t33 = -t515 * t52 + t738 * t772;
t660 = qJD(1) * t33;
t34 = t515 * t53 - t736 * t772;
t659 = qJD(1) * t34;
t521 = t752 + t691;
t68 = t561 * t521;
t658 = qJD(1) * t68;
t215 = t357 * t722;
t358 = t421 - t675;
t91 = -t358 * t515 + t215;
t657 = qJD(1) * t91;
t216 = t357 * t515;
t92 = t358 * t722 + t216;
t656 = qJD(1) * t92;
t97 = -t515 * t675 - t215;
t655 = qJD(1) * t97;
t98 = t675 * t722 - t216;
t654 = qJD(1) * t98;
t645 = t722 * t367;
t644 = t515 * t366;
t625 = t49 * qJD(1);
t448 = t330 / 0.2e1;
t437 = 0.1e1 / 0.2e1 - t515 * t752 + t448;
t70 = t437 * t425;
t623 = t70 * qJD(1);
t71 = t437 * t429;
t622 = t71 * qJD(1);
t621 = t80 * qJD(1);
t365 = t377 * qJD(5);
t378 = t386 * qJD(4);
t609 = -t378 - t365;
t608 = qJD(1) * qJ(2);
t134 = t521 * t639;
t607 = qJD(1) * t134;
t606 = qJD(2) * t515;
t603 = qJD(4) * t411;
t599 = qJD(5) * t357;
t598 = qJD(5) * t425;
t597 = qJD(5) * t429;
t596 = qJD(6) * t425;
t419 = qJD(6) * t429;
t523 = t740 + t690;
t152 = t523 * t425;
t594 = t152 * qJD(1);
t592 = t749 * qJD(1);
t522 = 0.2e1 * t752;
t156 = t522 * t425;
t139 = t156 * qJD(1);
t162 = t523 * t429;
t590 = t162 * qJD(1);
t589 = t748 * qJD(1);
t166 = t522 * t429;
t145 = t166 * qJD(1);
t178 = t561 * t330;
t586 = t178 * qJD(1);
t275 = -t391 ^ 2 + t392 ^ 2;
t583 = t275 * qJD(1);
t308 = -t391 * t411 - t392 * t421;
t582 = t308 * qJD(1);
t309 = -t391 * t421 + t392 * t411;
t581 = t309 * qJD(1);
t326 = t633 / 0.2e1 + t685;
t580 = t326 * qJD(1);
t327 = t684 + t685;
t579 = t327 * qJD(1);
t577 = t455 * qJD(1);
t576 = t515 * qJD(1);
t338 = t528 + t389 / 0.2e1;
t574 = t338 * qJD(1);
t573 = t391 * qJD(1);
t572 = t392 * qJD(1);
t408 = t428 ^ 2 - t431 ^ 2;
t571 = t408 * qJD(1);
t570 = t428 * qJD(1);
t569 = t428 * qJD(3);
t568 = t431 * qJD(1);
t567 = t431 * qJD(3);
t564 = t566 * t49;
t563 = t566 * t80;
t550 = qJ(2) * t570;
t549 = qJ(2) * t568;
t548 = t357 * t576;
t547 = t425 * t576;
t546 = t429 * t576;
t545 = t357 * t575;
t544 = t424 * t575;
t542 = qJD(6) * t515 * t722;
t540 = t411 * t573;
t539 = t411 * t572;
t410 = t425 * t419;
t538 = t428 * t568;
t397 = t414 * t679;
t529 = t515 * t677;
t519 = t676 * qJD(4);
t518 = t676 * qJD(5);
t516 = pkin(3) * t566;
t510 = t566 * t425;
t508 = -t560 / 0.2e1;
t506 = t722 * t543;
t500 = -t551 / 0.2e1;
t498 = t699 + t520;
t496 = t789 * t345;
t493 = -0.2e1 * t506;
t492 = 0.2e1 * t506;
t489 = t515 * t506;
t485 = t644 - t645;
t484 = -t413 * t722 + t414 * t515;
t474 = -t400 / 0.2e1 + t508;
t347 = pkin(3) * t500 - t474;
t480 = t347 * qJD(3) - t773;
t479 = -qJD(3) * t376 - t773;
t54 = t242 + t775;
t477 = -qJD(1) * t54 + qJD(3) * t386;
t62 = t503 + t761 / 0.2e1 + t766;
t476 = -qJD(1) * t62 + qJD(3) * t387;
t475 = t722 * (-qJD(6) + t576);
t472 = -t672 / 0.2e1 + t674 / 0.2e1;
t11 = t790 - t784 / 0.2e1 + t434 * t429;
t464 = -qJD(1) * t11 - t386 * t605;
t95 = qJD(6) * t326 - t576 * t722;
t460 = -qJD(6) * t455 - t735;
t459 = t508 + t699 + t681;
t458 = t197 / 0.2e1 + t472;
t449 = t733 * t722;
t229 = t498 * t425;
t344 = t459 * t425;
t37 = t458 * t429;
t441 = pkin(5) * t598 + qJD(1) * t37 + qJD(3) * t229 + qJD(4) * t344;
t230 = t498 * t429;
t346 = t459 * t429;
t35 = t458 * t425;
t440 = pkin(5) * t597 - qJD(1) * t35 + qJD(3) * t230 + qJD(4) * t346;
t438 = -t645 / 0.2e1 + t644 / 0.2e1 + t466;
t417 = pkin(5) * t680;
t407 = t425 * t558;
t399 = t561 * qJD(6);
t398 = t414 * t677;
t379 = t387 * qJD(4);
t364 = t376 * qJD(5);
t363 = t425 * t378;
t356 = t425 * t365;
t351 = t366 * t677;
t350 = t366 * t679;
t349 = t429 * t508 + t398 + t418;
t348 = t425 * t508 + t397 + t417;
t343 = t391 * t572;
t342 = (t500 + t632) * pkin(3) + t474;
t341 = -t345 / 0.2e1 - t497 / 0.2e1 + (-t552 - t631 / 0.2e1) * pkin(3);
t339 = t566 * t391;
t322 = t327 * qJD(5);
t319 = t328 * qJD(5);
t274 = t410 * t731;
t251 = 0.2e1 * t528 - t630;
t248 = t386 * t678 - t429 * t499;
t245 = t386 * t679 + t425 * t499;
t232 = t376 * t677 + t351 + t418;
t231 = t376 * t679 + t350 + t417;
t228 = 0.2e1 * t684 - t633;
t227 = 0.2e1 * t501 + t634;
t224 = t387 * t678 + t351 + t398;
t223 = t387 * t680 + t350 + t397;
t196 = t493 - t728;
t195 = t492 + t728;
t168 = 0.2e1 * t764;
t165 = t765 + t529;
t158 = 0.2e1 * t763;
t157 = t762 + t533;
t133 = (t764 + t529) * t425;
t132 = t419 + t145;
t131 = -t139 - t596;
t126 = t410 + t607;
t125 = t410 - t607;
t90 = -qJD(5) * t455 + t326 * t566;
t87 = qJD(5) * t227 + t511;
t86 = qJD(5) * t228 - t729;
t73 = -t515 * t764 + t722 * t750 + t677;
t72 = t425 * t448 - t515 * t763 + t680;
t69 = t424 * t691 - t513 * t515 + t700 * t752;
t67 = -t399 - t658;
t66 = -t399 + t658;
t51 = -qJD(5) * t134 + t743;
t50 = qJD(5) * t68 + t274 + 0.2e1 * t489;
t42 = -qJD(5) * t152 + qJD(6) * t166 - t768;
t41 = -qJD(5) * t162 - qJD(6) * t156 + t767;
t40 = -qJD(5) * t167 - qJD(6) * t160 + t621;
t39 = t133 * qJD(5) - t135 + (t425 * t725 + t544) * t515;
t38 = t197 * t677 - t429 * t472 - t650;
t36 = t197 * t680 + t425 * t472 - t649;
t32 = qJD(5) * t738 + t165 * qJD(6) + t510 * t722 + t768;
t31 = qJD(5) * t736 + t157 * qJD(6) + t722 * t725 - t767;
t30 = t130 * t677 - t429 * t465 + t776;
t28 = t130 * t680 + t425 * t465 + t777;
t26 = t168 * qJD(5) + t515 * t725 - t621 - t704;
t25 = t129 * t677 - t429 * t467 + t776;
t23 = t129 * t680 + t425 * t467 + t777;
t21 = t69 * qJD(5) - t511 * t561 + t274 - 0.2e1 * t489;
t20 = -qJD(5) * t153 - qJD(6) * t170 + t625;
t18 = t429 * t436 + t794;
t17 = t425 * t436 + t793;
t14 = t429 * t442 + t794;
t13 = t425 * t442 + t793;
t10 = t413 * t750 + t414 * t529 + t429 * t438 + t796;
t9 = t397 * t515 + t413 * t535 + t425 * t438 + t795;
t7 = t158 * qJD(5) - t510 * t515 - t625 + t705;
t43 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t428 * t567, t408 * qJD(3), 0, 0, 0, qJ(2) * t567 + qJD(2) * t428, -qJ(2) * t569 + qJD(2) * t431, -t391 * t340, t566 * t275, 0, 0, 0, -qJD(2) * t392 + qJD(3) * t308 - t391 * t603, -qJD(2) * t391 + qJD(3) * t309 + t392 * t603, t449, -t732 * t747, 0, 0, 0, qJD(3) * t91 - qJD(4) * t97 + t599 * t722 - t606, qJD(2) * t722 + qJD(3) * t92 - qJD(4) * t98 + t515 * t599, -t330 * t410 + t424 * t449, -0.2e1 * t425 * t733 * t736 + t178 * qJD(6), t425 * t542 + t732 * t756, t429 * t542 - t732 * t757, -t745 * t515, qJD(3) * t1 + qJD(4) * t3 + qJD(5) * t5 + qJD(6) * t34 - t429 * t606, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t6 + qJD(6) * t33 + t425 * t606; 0, 0, 0, 0, qJD(1), t608, 0, 0, 0, 0, 0, t570, t568, 0, 0, 0, 0, 0, -t572, -t573, 0, 0, 0, 0, 0, -t576, t575, 0, 0, 0, 0, 0, qJD(6) * t73 - t546 - t563, qJD(6) * t72 + t547 - t564; 0, 0, 0, 0, 0, 0, -t538, t571, -t569, -t567, 0, -t432 * t569 + t549, -t432 * t567 - t550, -t343, t583, t340, t339, 0, qJD(3) * t721 + t251 * qJD(4) + t582, t581 + t712, t735, -t753, t733, t86, 0, -qJD(3) * t769 + t789 * t792 + t657, -qJD(3) * t772 + t786 * t789 + t656, t39, t21, t32, t31, t95 (t425 * t485 - t783) * qJD(3) + t9 * qJD(4) + t13 * qJD(5) + t25 * qJD(6) + t706 (t429 * t485 + t784) * qJD(3) + t10 * qJD(4) + t14 * qJD(5) + t23 * qJD(6) + t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343, t583, t340, t339, 0, t251 * qJD(3) + qJD(4) * t721 - t540, t539 + t712, t735, -t753, t733, t86, 0, -qJD(4) * t769 + qJD(5) * t792 - t655 + t781, -qJD(4) * t772 + qJD(5) * t786 - t654 + t780, t39, t21, t32, t31, t95, t9 * qJD(3) + (t425 * t484 - t783) * qJD(4) + t17 * qJD(5) + t30 * qJD(6) + t708, t10 * qJD(3) + (t429 * t484 + t784) * qJD(4) + t18 * qJD(5) + t28 * qJD(6) + t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t735, -t753, t733, t228 * t566 - t600, 0, qJD(4) * t792 - qJD(5) * t769 + t545 + t781, qJD(4) * t786 - qJD(5) * t772 + t548 + t780, -t135 - (-t425 * t597 - t544) * t515 + t566 * t133, t274 + t566 * t69 - (qJD(5) * t561 + t492) * t515, t566 * t738 + t598 * t722 + t768, t566 * t736 + t597 * t722 - t767, t460, t665 + t13 * qJD(3) + t17 * qJD(4) + (t425 * t495 - t783) * qJD(5) + t38 * qJD(6), t662 + t14 * qJD(3) + t18 * qJD(4) + (t429 * t495 + t784) * qJD(5) + t36 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t703, t726 * t731 + t586, t165 * t566 + t425 * t475, t157 * t566 + t429 * t475, t90, qJD(2) * t73 + qJD(3) * t25 + qJD(4) * t30 + qJD(5) * t38 - qJD(6) * t53 + t659, qJD(2) * t72 + qJD(3) * t23 + qJD(4) * t28 + qJD(5) * t36 + qJD(6) * t52 + t660; 0, 0, 0, 0, -qJD(1), -t608, 0, 0, 0, 0, 0, -t570, -t568, 0, 0, 0, 0, 0, t572, t573, 0, 0, 0, 0, 0, t576, -t575, 0, 0, 0, 0, 0, -qJD(6) * t71 + t546 - t563, qJD(6) * t70 - t547 - t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, -t567, 0, 0, 0, 0, 0, t340, t339, 0, 0, 0, 0, 0, t87, -t745, 0, 0, 0, 0, 0, t26, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, t339, 0, 0, 0, 0, 0, t87, -t745, 0, 0, 0, 0, 0, t26, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227 * t566 + t744, -t745, 0, 0, 0, 0, 0, t168 * t566 + t515 * t597 - t704, t158 * t566 - t515 * t598 + t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419 * t515 - t732 * t738 - t622, t504 * t732 - t515 * t596 + t623; 0, 0, 0, 0, 0, 0, t538, -t571, 0, 0, 0, -t549, t550, t343, -t583, 0, 0, 0, qJD(4) * t338 - t582, -t581, -t735, t753, 0, -t322, 0, qJD(4) * t54 - qJD(5) * t61 - t657, qJD(4) * t62 - t656 + t774, t51, t50, t42, t41, -t95, qJD(4) * t8 + qJD(5) * t12 - qJD(6) * t24 - t706, qJD(4) * t11 + qJD(5) * t15 + qJD(6) * t22 - t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, 0, 0, 0, 0, 0, 0, t40, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427 * t671, -t430 * t671, 0, 0, 0, 0, 0, t609, -t379 + t364, t410, -t399, 0, 0, 0, t366 * t596 + t429 * t609, t366 * t419 + t356 + t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427 * t516 + t574, -t430 * t516, 0, 0, 0, 0, 0, qJD(5) * t341 - t378 - t477, qJD(5) * t342 - t379 - t476, t410, -t399, 0, 0, 0, t248 * qJD(5) + t223 * qJD(6) - t386 * t725 + t661, qJD(5) * t245 + qJD(6) * t224 + t363 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, 0, qJD(4) * t341 - t365 - t714, qJD(4) * t342 + t364 - t479, t125, t66, -t594, -t590, 0, t248 * qJD(4) + t231 * qJD(6) + (-qJD(3) - qJD(5)) * t429 * t377 + t710, qJD(4) * t245 + qJD(6) * t232 + t356 - t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t196, t132, t131, -t580, qJD(4) * t223 + qJD(5) * t231 - t367 * t419 - t717, qJD(4) * t224 + qJD(5) * t232 + t367 * t596 - t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, -t583, 0, 0, 0, -qJD(3) * t338 + t540, -t539, -t735, t753, 0, -t322, 0, -qJD(3) * t54 - qJD(5) * t56 + t655, -qJD(3) * t62 + t654 + t774, t51, t50, t42, t41, -t95, -qJD(3) * t8 + qJD(5) * t16 - qJD(6) * t29 - t708, -qJD(3) * t11 + qJD(5) * t19 + qJD(6) * t27 - t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, 0, 0, 0, 0, 0, 0, t40, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427 * t670 - t574, t430 * t670, 0, 0, 0, 0, 0, t477 - t558, -qJD(5) * t347 + t476, t410, -t399, 0, 0, 0, -qJD(5) * t247 - qJD(6) * t221 + t386 * t604 - t661, qJD(5) * t246 - qJD(6) * t222 + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t558, -pkin(4) * t518, t410, -t399, 0, 0, 0, t414 * t596 - t429 * t558, t414 * t419 + t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, 0, -t496 - t713 (-t519 - t518) * pkin(4) - t480, t125, t66, -t594, -t590, 0, t348 * qJD(6) - t429 * t496 - t711, qJD(6) * t349 + t407 - t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t196, t132, t131, -t580, qJD(5) * t348 - t413 * t419 - t718, qJD(5) * t349 + t413 * t596 - t719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t735, t753, 0, t566 * t327, 0, qJD(3) * t61 + qJD(4) * t56 - t545, -t566 * t57 - t548, t134 * t566 + t743, -t493 * t515 - t566 * t68 + t274, -qJD(6) * t748 + t152 * t566 - t768, qJD(6) * t749 + t162 * t566 + t767, -t460, -qJD(3) * t12 - qJD(4) * t16 - qJD(6) * t37 - t665, -qJD(3) * t15 - qJD(4) * t19 + qJD(6) * t35 - t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t566 * t328, 0, 0, 0, 0, 0, 0, t566 * t167, t566 * t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, 0, t559 + t714, qJD(4) * t347 + t479, t126, t67, t594, t590, 0, qJD(4) * t247 - qJD(6) * t229 + t377 * t604 - t710, -qJD(4) * t246 - qJD(6) * t230 + t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, 0, t559 + t713, pkin(4) * t519 + t480, t126, t67, t594, t590, 0, -qJD(6) * t344 + t429 * t559 + t711, -qJD(6) * t346 + t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, -t399, 0, 0, 0, -pkin(5) * t596, -pkin(5) * t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t196, t419 - t589, t592 - t596, t577, -pkin(10) * t419 - t441, pkin(10) * t596 - t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t703, 0.2e1 * t722 * t726 - t586, qJD(5) * t748 - t166 * t566 - t425 * t735, -qJD(5) * t749 + t156 * t566 - t429 * t735, t90, qJD(2) * t71 + qJD(3) * t24 + qJD(4) * t29 + qJD(5) * t37 - t659, -qJD(2) * t70 - qJD(3) * t22 - qJD(4) * t27 - qJD(5) * t35 - t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160 * t566 + t622, t170 * t566 - t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, t195, -t145, t139, t580, qJD(4) * t221 + qJD(5) * t229 + t717, qJD(4) * t222 + qJD(5) * t230 + t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, t195, -t145, t139, t580, qJD(5) * t344 + t718, qJD(5) * t346 + t719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, t195, t589, -t592, -t577, t441, t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
