% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:18
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR7_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR7_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR7_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR7_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR7_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR7_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:18:03
% EndTime: 2019-03-09 07:18:21
% DurationCPUTime: 9.72s
% Computational Cost: add. (17636->634), mult. (34938->778), div. (0->0), fcn. (24453->14), ass. (0->314)
t253 = cos(qJ(6));
t359 = qJD(6) * t253;
t250 = sin(qJ(4));
t251 = sin(qJ(3));
t423 = cos(qJ(4));
t337 = qJD(1) * t423;
t254 = cos(qJ(3));
t365 = qJD(1) * t254;
t162 = -t250 * t365 - t251 * t337;
t366 = qJD(1) * t251;
t339 = t250 * t366;
t163 = t254 * t337 - t339;
t249 = sin(qJ(5));
t422 = cos(qJ(5));
t116 = -t422 * t162 + t163 * t249;
t452 = t116 * t253;
t466 = t359 + t452;
t172 = -t250 * t251 + t254 * t423;
t433 = t250 * t254 + t423 * t251;
t435 = t249 * t433;
t126 = -t422 * t172 + t435;
t336 = qJD(5) * t422;
t361 = qJD(5) * t249;
t327 = qJDD(1) * t423;
t353 = t251 * qJDD(1);
t239 = qJD(3) + qJD(4);
t450 = t239 * t433;
t94 = qJD(1) * t450 + t250 * t353 - t254 * t327;
t334 = t423 * qJD(4);
t276 = t423 * qJD(3) + t334;
t356 = qJD(1) * qJD(3);
t333 = t251 * t356;
t95 = -qJD(4) * t339 - t250 * t333 + t251 * t327 + t254 * (qJD(1) * t276 + qJDD(1) * t250);
t51 = -t162 * t336 + t163 * t361 + t249 * t95 + t422 * t94;
t465 = t126 * t51;
t238 = qJDD(3) + qJDD(4);
t316 = qJDD(5) + t238;
t464 = t126 * t316;
t301 = t422 * t433;
t449 = t249 * t172 + t301;
t374 = t276 * t254;
t436 = t239 * t251;
t446 = -t250 * t436 + t374;
t454 = -qJD(5) * t435 + t172 * t336 - t249 * t450 + t422 * t446;
t283 = t249 * t162 + t163 * t422;
t328 = t249 * t94 - t422 * t95;
t52 = qJD(5) * t283 - t328;
t463 = t116 * t454 + t449 * t52;
t326 = qJD(5) + t239;
t462 = -t316 * t449 - t326 * t454;
t257 = -pkin(1) - pkin(7);
t198 = qJD(1) * t257 + qJD(2);
t150 = -pkin(8) * t365 + t254 * t198;
t139 = qJD(3) * pkin(3) + t150;
t149 = -pkin(8) * t366 + t198 * t251;
t341 = t423 * t149;
t102 = t250 * t139 + t341;
t196 = qJDD(1) * t257 + qJDD(2);
t175 = t254 * t196;
t352 = t254 * qJDD(1);
t364 = qJD(3) * t251;
t111 = -t198 * t364 + qJDD(3) * pkin(3) + t175 + (t333 - t352) * pkin(8);
t363 = qJD(3) * t254;
t332 = t254 * t356;
t448 = t332 + t353;
t114 = -pkin(8) * t448 + t251 * t196 + t198 * t363;
t60 = -qJD(4) * t102 + t423 * t111 - t250 * t114;
t41 = t238 * pkin(4) + t94 * pkin(9) + t60;
t362 = qJD(4) * t250;
t312 = -t250 * t111 - t423 * t114 - t139 * t334 + t149 * t362;
t45 = -pkin(9) * t95 - t312;
t137 = t250 * t149;
t101 = t423 * t139 - t137;
t155 = t163 * pkin(9);
t88 = t101 - t155;
t82 = pkin(4) * t239 + t88;
t418 = t162 * pkin(9);
t89 = t102 + t418;
t10 = t249 * t41 + t82 * t336 - t89 * t361 + t422 * t45;
t329 = t249 * t45 - t422 * t41;
t346 = t422 * t89;
t58 = t249 * t82 + t346;
t11 = -qJD(5) * t58 - t329;
t255 = cos(qJ(1));
t236 = g(2) * t255;
t252 = sin(qJ(1));
t370 = g(1) * t252 - t236;
t461 = t10 * t449 - t11 * t126 + t454 * t58 - t370;
t259 = qJD(1) ^ 2;
t458 = -t259 * qJ(2) - t370;
t248 = sin(qJ(6));
t292 = t253 * t326;
t360 = qJD(6) * t248;
t35 = -qJD(6) * t292 - t248 * t316 + t253 * t51 + t283 * t360;
t32 = t35 * t248;
t98 = t248 * t326 + t253 * t283;
t16 = t466 * t98 - t32;
t456 = t249 * t446 + t422 * t450;
t455 = -t238 * t433 - t239 * t446;
t447 = qJD(6) + t116;
t50 = qJDD(6) + t52;
t47 = t248 * t50;
t15 = -t283 * t98 + t447 * t466 + t47;
t453 = -t101 * t450 + t102 * t446 + t60 * t172 - t312 * t433 - t370;
t404 = t249 * t89;
t57 = t422 * t82 - t404;
t55 = -pkin(5) * t326 - t57;
t412 = t116 * t55;
t451 = t116 * t283;
t247 = qJ(3) + qJ(4);
t233 = qJ(5) + t247;
t217 = sin(t233);
t218 = cos(t233);
t289 = g(3) * t217 + t218 * t236;
t241 = qJDD(1) * qJ(2);
t46 = -t116 ^ 2 + t283 ^ 2;
t77 = pkin(5) * t283 + pkin(10) * t116;
t39 = t116 * t326 - t51;
t187 = pkin(3) * t366 + qJD(1) * qJ(2);
t132 = -pkin(4) * t162 + t187;
t184 = t217 * t236;
t208 = g(3) * t218;
t387 = t217 * t252;
t342 = g(1) * t387 - t184 + t208;
t272 = t132 * t116 - t10 + t342;
t96 = t248 * t283 - t292;
t402 = t253 * t96;
t405 = t248 * t98;
t294 = t402 + t405;
t439 = -t35 * t253 - t98 * t360;
t396 = qJD(6) * t98;
t36 = -t248 * t51 - t253 * t316 + t396;
t441 = t248 * t36 + t96 * t359;
t6 = -t116 * t294 + t439 - t441;
t9 = -pkin(5) * t316 - t11;
t443 = t9 * t248 + t55 * t359;
t440 = t433 * t95;
t221 = pkin(3) * t423 + pkin(4);
t380 = t249 * t250;
t120 = t221 * t336 + (-t250 * t361 + (t422 * t423 - t380) * qJD(4)) * pkin(3);
t108 = -t250 * t150 - t341;
t275 = t108 - t418;
t109 = t423 * t150 - t137;
t90 = -t155 + t109;
t64 = t249 * t275 + t422 * t90;
t399 = t120 - t64;
t340 = t422 * t250;
t398 = -t249 * t90 + t275 * t422 + t221 * t361 + (t250 * t336 + (t249 * t423 + t340) * qJD(4)) * pkin(3);
t395 = t447 * t283;
t304 = g(1) * t255 + g(2) * t252;
t434 = t304 * t218;
t245 = t251 ^ 2;
t246 = t254 ^ 2;
t368 = t245 + t246;
t322 = t368 * t196;
t416 = pkin(8) - t257;
t179 = t416 * t251;
t180 = t416 * t254;
t131 = -t423 * t179 - t250 * t180;
t206 = t218 * pkin(10);
t330 = -pkin(5) * t217 + t206;
t56 = pkin(10) * t326 + t58;
t65 = pkin(5) * t116 - pkin(10) * t283 + t132;
t22 = -t248 * t56 + t253 * t65;
t23 = t248 * t65 + t253 * t56;
t432 = -t22 * t248 + t23 * t253;
t242 = qJD(1) * qJD(2);
t348 = 0.2e1 * t242;
t431 = 0.2e1 * t241 + t348 - t304;
t48 = t253 * t50;
t430 = t283 * t96 + t48;
t53 = t55 * t360;
t429 = -t283 * t22 + t253 * t289 + t53;
t386 = t218 * t252;
t350 = g(1) * t386;
t428 = t283 * t23 + t248 * t350 + t443;
t270 = -t132 * t283 + t289 - t329 - t350;
t40 = t239 * t283 + t328;
t256 = -pkin(8) - pkin(7);
t421 = pkin(4) * t163;
t229 = sin(t247);
t213 = g(3) * t229;
t419 = g(3) * t251;
t140 = pkin(3) * t448 + t241 + t242;
t78 = pkin(4) * t95 + t140;
t13 = pkin(5) * t52 + pkin(10) * t51 + t78;
t8 = pkin(10) * t316 + t10;
t2 = qJD(6) * t22 + t248 * t13 + t253 * t8;
t1 = t2 * t253;
t234 = t251 * pkin(3);
t417 = t98 * t96;
t414 = t447 * t22;
t413 = t447 * t23;
t411 = t172 * t94;
t409 = t23 * t248;
t68 = qJD(5) * t301 + t172 * t361 + t456;
t407 = t248 * t68;
t406 = t248 * t96;
t403 = t253 * t68;
t401 = t253 * t98;
t34 = t36 * t253;
t397 = pkin(1) * qJDD(1);
t394 = t447 * t248;
t388 = t163 * t162;
t230 = cos(t247);
t385 = t230 * t252;
t384 = t230 * t255;
t383 = t248 * t252;
t382 = t248 * t255;
t379 = t252 * t253;
t378 = t253 * t255;
t212 = qJ(2) + t234;
t376 = t172 * t238 - t239 * t450;
t375 = pkin(5) * t386 + pkin(10) * t387;
t159 = pkin(3) * t340 + t249 * t221;
t372 = (t348 + t241) * qJ(2);
t371 = t255 * pkin(1) + t252 * qJ(2);
t369 = t245 - t246;
t258 = qJD(3) ^ 2;
t367 = -t258 - t259;
t358 = t187 * qJD(1);
t199 = pkin(3) * t363 + qJD(2);
t354 = qJDD(3) * t251;
t349 = pkin(10) * qJD(6) * t447;
t344 = t254 * t259 * t251;
t170 = t416 * t364;
t171 = qJD(3) * t180;
t343 = t250 * t170 - t423 * t171 - t180 * t334;
t338 = g(1) * t375;
t232 = t255 * qJ(2);
t331 = -pkin(1) * t252 + t232;
t177 = pkin(4) * t229 + t234;
t130 = t179 * t250 - t423 * t180;
t321 = t1 - t342;
t320 = t254 * t239;
t317 = t368 * qJDD(1);
t315 = qJDD(2) - t397;
t314 = qJD(6) * t449 + qJD(1);
t313 = pkin(4) * t336;
t311 = -t9 - t350;
t310 = t251 * t332;
t61 = t249 * t88 + t346;
t309 = pkin(4) * t361 - t61;
t307 = -pkin(5) * t218 - pkin(10) * t217;
t305 = -pkin(10) * t50 + t412;
t299 = -t116 * t57 + t283 * t58;
t152 = pkin(10) + t159;
t298 = -t152 * t50 + t412;
t219 = pkin(4) * t249 + pkin(10);
t297 = -t219 * t50 + t412;
t296 = t22 * t253 + t409;
t106 = -pkin(9) * t172 + t130;
t107 = -pkin(9) * t433 + t131;
t75 = t249 * t106 + t107 * t422;
t141 = pkin(4) * t433 + t212;
t76 = pkin(5) * t449 + pkin(10) * t126 + t141;
t44 = t248 * t76 + t253 * t75;
t43 = -t248 * t75 + t253 * t76;
t293 = t401 + t406;
t243 = -pkin(9) + t256;
t291 = t255 * t177 + t252 * t243 + t331;
t290 = -t116 * t409 - t22 * t452 + t321;
t288 = -qJD(6) * t65 + t208 - t8;
t287 = t252 * t177 - t243 * t255 + t371;
t285 = t170 * t423 + t250 * t171;
t281 = 0.2e1 * qJ(2) * t356 + qJDD(3) * t257;
t72 = t421 + t77;
t158 = -pkin(3) * t380 + t221 * t422;
t273 = -t230 * t370 + t213;
t271 = t251 * t276;
t113 = pkin(4) * t446 + t199;
t269 = t253 * t311 + t429;
t12 = t253 * t13;
t3 = -qJD(6) * t23 - t248 * t8 + t12;
t268 = -qJD(6) * t296 - t3 * t248 + t1;
t267 = g(3) * t230 - t187 * t162 + t229 * t370 + t312;
t266 = -t248 * t289 + t428;
t265 = -t257 * t258 + t431;
t262 = -g(1) * t385 + g(2) * t384 - t187 * t163 + t213 + t60;
t260 = pkin(9) * t450 + t179 * t334 + t180 * t362 + t285;
t228 = qJDD(3) * t254;
t225 = pkin(3) * t365;
t220 = -pkin(4) * t422 - pkin(5);
t178 = pkin(3) * t254 + pkin(4) * t230;
t151 = -pkin(5) - t158;
t148 = t217 * t378 - t383;
t147 = t217 * t382 + t379;
t146 = t217 * t379 + t382;
t145 = -t217 * t383 + t378;
t135 = t225 + t421;
t99 = -t162 ^ 2 + t163 ^ 2;
t86 = -qJD(4) * t131 + t285;
t85 = t179 * t362 + t343;
t81 = t163 * t239 - t95;
t80 = -t162 * t239 - t94;
t74 = -t106 * t422 + t107 * t249;
t73 = -t374 * pkin(9) + (pkin(9) * t436 + qJD(4) * t179) * t250 + t343;
t69 = qJD(5) * t449 + t456;
t66 = t225 + t72;
t62 = t422 * t88 - t404;
t30 = t248 * t77 + t253 * t57;
t29 = -t248 * t57 + t253 * t77;
t28 = t248 * t66 + t253 * t64;
t27 = -t248 * t64 + t253 * t66;
t26 = t248 * t72 + t253 * t62;
t25 = -t248 * t62 + t253 * t72;
t24 = pkin(5) * t454 + t68 * pkin(10) + t113;
t21 = qJD(5) * t75 + t249 * t73 - t260 * t422;
t20 = t106 * t336 - t107 * t361 + t249 * t260 + t422 * t73;
t17 = t406 * t447 - t34;
t14 = -t394 * t447 + t430;
t5 = -qJD(6) * t44 - t248 * t20 + t253 * t24;
t4 = qJD(6) * t43 + t253 * t20 + t248 * t24;
t7 = [0, 0, 0, 0, 0, qJDD(1), t370, t304, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, qJDD(2) - t370 - 0.2e1 * t397, t431, -pkin(1) * t315 - g(1) * t331 - g(2) * t371 + t372, qJDD(1) * t246 - 0.2e1 * t310, -0.2e1 * t251 * t352 + 0.2e1 * t356 * t369, -t251 * t258 + t228, qJDD(1) * t245 + 0.2e1 * t310, -t254 * t258 - t354, 0, t251 * t265 + t254 * t281, -t251 * t281 + t254 * t265, -t257 * t317 - t322 + t370, -g(1) * (t252 * t257 + t232) - g(2) * (pkin(7) * t255 + t371) + t257 * t322 + t372, -t163 * t450 - t411, -t172 * t95 + t94 * t433 - t163 * t374 - t162 * t271 + (-t162 * t320 + t163 * t436) * t250, t376, -t162 * t446 + t440, t455, 0, t130 * t238 + t140 * t433 - t199 * t162 + t187 * t446 + t212 * t95 - t229 * t304 + t86 * t239, -g(1) * t384 - g(2) * t385 - t131 * t238 + t140 * t172 + t199 * t163 - t187 * t450 - t212 * t94 - t85 * t239, t130 * t94 - t131 * t95 + t85 * t162 - t86 * t163 - t453, -t312 * t131 + t102 * t85 + t60 * t130 + t101 * t86 + t140 * t212 + t187 * t199 - g(1) * (t255 * t234 + t232 + (-pkin(1) + t256) * t252) - g(2) * (t234 * t252 - t255 * t256 + t371) -t283 * t68 + t465, t116 * t68 + t126 * t52 - t283 * t454 + t449 * t51, -t326 * t68 - t464, t463, t462, 0, t113 * t116 + t132 * t454 + t141 * t52 - t21 * t326 - t217 * t304 - t316 * t74 + t449 * t78, t113 * t283 - t126 * t78 - t132 * t68 - t141 * t51 - t20 * t326 - t316 * t75 - t434, -t116 * t20 + t21 * t283 - t51 * t74 - t52 * t75 + t57 * t68 - t461, -g(1) * t291 - g(2) * t287 + t10 * t75 - t11 * t74 + t132 * t113 + t78 * t141 + t58 * t20 - t57 * t21, -t126 * t439 - t68 * t401, t294 * t68 - (t32 - t34 + (-t401 + t406) * qJD(6)) * t126, -t126 * t48 - t35 * t449 + t98 * t454 + (t126 * t360 - t403) * t447, -t126 * t441 - t68 * t406, t126 * t47 - t36 * t449 - t96 * t454 + (t126 * t359 + t407) * t447, t447 * t454 + t449 * t50, -g(1) * t148 - g(2) * t146 - t126 * t443 + t21 * t96 + t22 * t454 + t3 * t449 + t36 * t74 - t55 * t407 + t43 * t50 + t447 * t5, -t55 * t403 + g(1) * t147 - g(2) * t145 - t447 * t4 - t449 * t2 + t21 * t98 - t23 * t454 - t35 * t74 - t44 * t50 - (t9 * t253 - t53) * t126, t35 * t43 - t36 * t44 - t4 * t96 - t5 * t98 + t296 * t68 + t434 - (-qJD(6) * t432 - t2 * t248 - t253 * t3) * t126, t2 * t44 + t23 * t4 + t3 * t43 + t22 * t5 + t9 * t74 + t55 * t21 - g(1) * (-t255 * t330 + t291) - g(2) * (-t252 * t330 + t287); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t259, t458 + t315, 0, 0, 0, 0, 0, 0, t251 * t367 + t228, t254 * t367 - t354, -t317, t322 + t458, 0, 0, 0, 0, 0, 0, qJD(1) * t162 + t376, -qJD(1) * t163 + t455, t374 * t162 - t440 + t411 + t163 * t271 + (-t162 * t436 + t163 * t320) * t250, -t358 + t453, 0, 0, 0, 0, 0, 0, -qJD(1) * t116 - t326 * t69 - t464, -qJD(1) * t283 + t462, t283 * t69 - t463 - t465, -qJD(1) * t132 - t57 * t69 + t461, 0, 0, 0, 0, 0, 0, -t449 * t47 + t126 * t36 + t69 * t96 + (-t248 * t454 - t253 * t314) * t447, -t449 * t48 - t126 * t35 + t69 * t98 + (t248 * t314 - t253 * t454) * t447 (-t402 + t405) * t454 + t293 * qJD(1) + (qJD(6) * t293 - t32 - t34) * t449, -qJD(1) * t296 + t126 * t9 + t268 * t449 + t432 * t454 + t55 * t69 - t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t369 * t259, t352, -t344, -t353, qJDD(3), t254 * t458 + t175 + t419, g(3) * t254 + (-t196 - t458) * t251, 0, 0, -t388, t99, t80, t388, t81, t238, -t108 * t239 + (t162 * t365 + t238 * t423 - t239 * t362) * pkin(3) + t262, t109 * t239 + (-t163 * t365 - t238 * t250 - t239 * t334) * pkin(3) + t267 (t102 + t108) * t163 + (t101 - t109) * t162 + (t423 * t94 - t250 * t95 + (t162 * t423 + t163 * t250) * qJD(4)) * pkin(3), -t101 * t108 - t102 * t109 + (t423 * t60 + t419 - t250 * t312 + (-t101 * t250 + t102 * t423) * qJD(4) + (-t370 - t358) * t254) * pkin(3), t451, t46, t39, -t451, t40, t316, t158 * t316 - t135 * t116 + (-t58 - t398) * qJD(5) + t270 - t398 * t239, -t135 * t283 - t159 * t316 - t326 * t399 + t272, -t116 * t399 + t158 * t51 - t159 * t52 + t283 * t398 + t299, g(3) * t177 + t10 * t159 + t11 * t158 - t132 * t135 - t178 * t370 - t398 * t57 + t399 * t58, t16, t6, t15, t17, t14, -t395, t151 * t36 + t398 * t96 + t298 * t248 + (-t120 * t248 - t152 * t359 - t27) * t447 + t269, -t151 * t35 + t398 * t98 + t298 * t253 + (-t120 * t253 + t152 * t360 + t28) * t447 + t266, t27 * t98 + t28 * t96 + (-t120 * t96 - t152 * t36 + (t152 * t98 - t22) * qJD(6)) * t253 + (t120 * t98 - t152 * t35 - t3 + (t152 * t96 - t23) * qJD(6)) * t248 + t290, t9 * t151 - t23 * t28 - t22 * t27 - g(1) * (t178 * t252 + t375) - g(3) * (-t177 + t330) + t398 * t55 + t432 * t120 - (-t178 + t307) * t236 + t268 * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t99, t80, t388, t81, t238, t102 * t239 + t262, t101 * t239 + t267, 0, 0, t451, t46, t39, -t451, t40, t316, t61 * t239 + (t61 - t58) * qJD(5) + (-t163 * t116 + t316 * t422 - t326 * t361) * pkin(4) + t270, t62 * t326 + (-t163 * t283 - t249 * t316 - t326 * t336) * pkin(4) + t272, t62 * t116 - t61 * t283 + (t422 * t51 - t249 * t52 + (-t116 * t422 + t249 * t283) * qJD(5)) * pkin(4) + t299, t57 * t61 - t58 * t62 + (t422 * t11 + t10 * t249 - t132 * t163 + (-t249 * t57 + t422 * t58) * qJD(5) + t273) * pkin(4), t16, t6, t15, t17, t14, -t395, t220 * t36 + t309 * t96 + t297 * t248 + (-t219 * t359 - t248 * t313 - t25) * t447 + t269, -t220 * t35 + t309 * t98 + t297 * t253 + (t219 * t360 - t253 * t313 + t26) * t447 + t266, t25 * t98 + t26 * t96 + (-t96 * t313 - t219 * t36 + (t219 * t98 - t22) * qJD(6)) * t253 + (t98 * t313 - t219 * t35 - t3 + (t219 * t96 - t23) * qJD(6)) * t248 + t290, t9 * t220 - t23 * t26 - t22 * t25 - t55 * t61 - t338 - g(3) * t330 - t307 * t236 + ((t249 * t55 + t422 * t432) * qJD(5) + t273) * pkin(4) + t268 * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t46, t39, -t451, t40, t316, t239 * t58 + t270, t326 * t57 + t272, 0, 0, t16, t6, t15, t394 * t96 - t34, -t248 * t447 ^ 2 + t430, -t395, -pkin(5) * t36 - t447 * t29 - t58 * t96 + t305 * t248 + (t311 - t349) * t253 + t429, pkin(5) * t35 + t447 * t30 - t58 * t98 + t305 * t253 + (-t289 + t349) * t248 + t428, t29 * t98 + t30 * t96 + (-t414 + (-t36 + t396) * pkin(10)) * t253 + (-t3 - t413 + (qJD(6) * t96 - t35) * pkin(10)) * t248 + t321, -t23 * t30 - t22 * t29 - t55 * t58 - t338 - g(3) * t206 + (t289 - t9) * pkin(5) + (t268 + t184) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, -t96 ^ 2 + t98 ^ 2, t447 * t96 - t35, -t417, t447 * t98 - t36, t50, -g(1) * t145 - g(2) * t147 + t248 * t288 - t359 * t56 - t55 * t98 + t12 + t413, g(1) * t146 - g(2) * t148 + t414 + t55 * t96 + (qJD(6) * t56 - t13) * t248 + t288 * t253, 0, 0;];
tau_reg  = t7;
