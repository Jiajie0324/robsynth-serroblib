% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 04:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 04:05:39
% EndTime: 2019-05-06 04:06:08
% DurationCPUTime: 30.33s
% Computational Cost: add. (279370->871), mult. (590063->1119), div. (0->0), fcn. (429829->10), ass. (0->574)
t1413 = sin(qJ(6));
t1415 = sin(qJ(4));
t1420 = cos(qJ(4));
t1421 = cos(qJ(3));
t1560 = qJD(1) * t1421;
t1416 = sin(qJ(3));
t1561 = qJD(1) * t1416;
t1369 = -t1415 * t1560 - t1420 * t1561;
t1370 = -t1415 * t1561 + t1420 * t1560;
t1414 = sin(qJ(5));
t1419 = cos(qJ(5));
t1325 = t1369 * t1414 + t1370 * t1419;
t1516 = qJD(3) * t1560;
t1527 = t1416 * qJDD(1);
t1377 = -t1516 - t1527;
t1403 = t1421 * qJDD(1);
t1517 = qJD(3) * t1561;
t1378 = t1403 - t1517;
t1308 = qJD(4) * t1369 + t1377 * t1415 + t1378 * t1420;
t1492 = t1420 * t1377 - t1415 * t1378;
t1453 = qJD(4) * t1370 - t1492;
t1495 = -t1414 * t1308 - t1419 * t1453;
t1452 = t1325 * qJD(5) - t1495;
t1216 = qJDD(6) + t1452;
t1418 = cos(qJ(6));
t1409 = qJD(3) + qJD(4);
t1515 = qJD(5) + t1409;
t1304 = t1325 * t1413 - t1418 * t1515;
t1306 = t1418 * t1325 + t1413 * t1515;
t1249 = t1306 * t1304;
t1575 = t1216 - t1249;
t1582 = t1413 * t1575;
t1323 = -t1419 * t1369 + t1370 * t1414;
t1274 = t1325 * t1323;
t1408 = qJDD(3) + qJDD(4);
t1402 = qJDD(5) + t1408;
t1574 = -t1274 + t1402;
t1581 = t1414 * t1574;
t1332 = t1369 * t1370;
t1572 = t1332 + t1408;
t1580 = t1415 * t1572;
t1579 = t1418 * t1575;
t1578 = t1419 * t1574;
t1577 = t1420 * t1572;
t1219 = -t1323 * qJD(5) + t1419 * t1308 - t1414 * t1453;
t1314 = t1515 * t1323;
t1576 = -t1314 + t1219;
t1315 = t1515 * t1325;
t1194 = t1315 + t1452;
t1501 = t1515 ^ 2;
t1411 = t1416 ^ 2;
t1424 = qJD(1) ^ 2;
t1570 = pkin(7) + pkin(1);
t1473 = (pkin(8) * t1411 + t1570) * t1424;
t1417 = sin(qJ(1));
t1422 = cos(qJ(1));
t1387 = t1417 * g(1) - t1422 * g(2);
t1478 = qJDD(2) - t1387;
t1449 = -t1424 * qJ(2) + t1478;
t1429 = -qJDD(1) * t1570 + t1449;
t1428 = t1421 * t1429;
t1530 = t1421 * t1424;
t1562 = qJD(1) * qJD(3);
t1298 = t1428 - t1378 * pkin(8) + qJDD(3) * pkin(3) + (-pkin(3) * t1530 - pkin(8) * t1562 + g(3)) * t1416;
t1336 = t1421 * g(3) - t1416 * t1429;
t1464 = qJD(3) * pkin(3) - pkin(8) * t1560;
t1534 = t1411 * t1424;
t1299 = -pkin(3) * t1534 + t1377 * pkin(8) - qJD(3) * t1464 - t1336;
t1246 = t1415 * t1298 + t1420 * t1299;
t1367 = t1369 ^ 2;
t1481 = pkin(4) * t1409 - pkin(9) * t1370;
t1183 = -t1367 * pkin(4) - pkin(9) * t1453 - t1409 * t1481 + t1246;
t1245 = -t1420 * t1298 + t1415 * t1299;
t1357 = t1409 * t1369;
t1286 = t1308 - t1357;
t1427 = pkin(4) * t1572 - pkin(9) * t1286 - t1245;
t1114 = t1419 * t1183 + t1414 * t1427;
t1270 = pkin(5) * t1323 - pkin(10) * t1325;
t1097 = -pkin(5) * t1501 + t1402 * pkin(10) - t1323 * t1270 + t1114;
t1559 = qJD(2) * qJD(1);
t1405 = 0.2e1 * t1559;
t1388 = t1422 * g(1) + t1417 * g(2);
t1410 = qJDD(1) * qJ(2);
t1462 = t1388 - t1410;
t1430 = t1377 * pkin(3) - t1464 * t1560 + t1462;
t1425 = -pkin(4) * t1453 + t1367 * pkin(9) - t1370 * t1481 + t1430;
t1106 = pkin(5) * t1194 - pkin(10) * t1576 + t1405 - t1425 - t1473;
t1041 = t1097 * t1413 - t1418 * t1106;
t1042 = t1097 * t1418 + t1106 * t1413;
t996 = t1413 * t1041 + t1418 * t1042;
t1573 = t1308 + t1357;
t1335 = t1416 * g(3) + t1428;
t1289 = t1421 * t1335 - t1416 * t1336;
t1526 = -0.2e1 * t1559;
t1571 = t1473 + t1526;
t1302 = t1304 ^ 2;
t1303 = t1306 ^ 2;
t1319 = qJD(6) + t1323;
t1318 = t1319 ^ 2;
t1321 = t1323 ^ 2;
t1322 = t1325 ^ 2;
t1368 = t1370 ^ 2;
t1407 = t1409 ^ 2;
t1569 = pkin(2) * t1289;
t1432 = t1462 + t1526;
t1351 = t1424 * t1570 + t1432;
t1568 = pkin(2) * t1351;
t1412 = t1421 ^ 2;
t1528 = t1411 + t1412;
t1380 = t1528 * qJDD(1);
t1567 = pkin(2) * t1380;
t1566 = pkin(5) * t1414;
t1565 = qJDD(1) * pkin(1);
t1113 = t1183 * t1414 - t1419 * t1427;
t1096 = -t1402 * pkin(5) - pkin(10) * t1501 + t1270 * t1325 + t1113;
t1564 = -pkin(5) * t1096 + pkin(10) * t996;
t1049 = -t1113 * t1419 + t1114 * t1414;
t1048 = pkin(4) * t1049;
t1050 = t1113 * t1414 + t1419 * t1114;
t1557 = t1049 * t1420;
t999 = t1050 * t1415 + t1557;
t1563 = pkin(3) * t999 + t1048;
t1558 = t1049 * t1415;
t1175 = -t1245 * t1420 + t1246 * t1415;
t1556 = t1175 * t1416;
t1555 = t1175 * t1421;
t1178 = t1216 + t1249;
t1554 = t1178 * t1413;
t1553 = t1178 * t1418;
t1207 = t1425 + t1571;
t1552 = t1207 * t1414;
t1551 = t1207 * t1419;
t1265 = t1274 + t1402;
t1550 = t1265 * t1414;
t1549 = t1265 * t1419;
t1300 = t1430 + t1571;
t1548 = t1300 * t1415;
t1547 = t1300 * t1420;
t1546 = t1319 * t1413;
t1545 = t1319 * t1418;
t1328 = -t1332 + t1408;
t1544 = t1328 * t1415;
t1543 = t1328 * t1420;
t1542 = t1380 * t1417;
t1541 = t1380 * t1422;
t1396 = t1416 * t1530;
t1385 = qJDD(3) + t1396;
t1540 = t1385 * t1416;
t1539 = t1385 * t1421;
t1386 = qJDD(3) - t1396;
t1538 = t1386 * t1416;
t1537 = t1386 * t1421;
t1536 = t1409 * t1415;
t1535 = t1409 * t1420;
t1533 = t1412 * t1424;
t1093 = t1413 * t1096;
t1531 = t1416 * t1351;
t1094 = t1418 * t1096;
t1337 = t1421 * t1351;
t1196 = t1325 * t1409 + t1495;
t1198 = t1314 + t1219;
t1136 = t1196 * t1414 - t1198 * t1419;
t1138 = t1196 * t1419 + t1198 * t1414;
t1061 = t1136 * t1420 + t1138 * t1415;
t1134 = pkin(4) * t1136;
t1529 = pkin(3) * t1061 + t1134;
t981 = -t1096 * t1419 + t1414 * t996;
t1525 = pkin(4) * t981 + t1564;
t1524 = -pkin(5) * t1419 - pkin(4);
t1523 = t1414 * t1249;
t1522 = t1419 * t1249;
t1521 = t1417 * t1274;
t1520 = t1422 * t1274;
t1519 = t1417 * t1332;
t1518 = t1422 * t1332;
t1241 = -t1303 - t1318;
t1133 = -t1241 * t1413 - t1553;
t1469 = -t1418 * t1219 - t1413 * t1402;
t1162 = (qJD(6) + t1319) * t1304 + t1469;
t1514 = pkin(5) * t1162 + pkin(10) * t1133 + t1093;
t1225 = -t1318 - t1302;
t1124 = t1225 * t1418 - t1582;
t1262 = t1319 * t1306;
t1468 = -t1413 * t1219 + t1418 * t1402;
t1435 = qJD(6) * t1306 - t1468;
t1158 = -t1262 - t1435;
t1513 = pkin(5) * t1158 + pkin(10) * t1124 - t1094;
t1307 = -t1322 - t1501;
t1229 = t1307 * t1419 - t1550;
t1512 = pkin(4) * t1229 - t1114;
t1348 = -t1368 - t1407;
t1287 = t1348 * t1420 - t1544;
t1511 = pkin(3) * t1287 - t1246;
t1176 = t1245 * t1415 + t1420 * t1246;
t1108 = t1176 * t1416 + t1555;
t1174 = pkin(3) * t1175;
t1510 = -pkin(2) * t1108 - t1174;
t1283 = (-qJD(4) + t1409) * t1370 + t1492;
t1221 = t1283 * t1415 - t1286 * t1420;
t1223 = t1283 * t1420 + t1286 * t1415;
t1164 = t1221 * t1421 + t1223 * t1416;
t1217 = pkin(3) * t1221;
t1509 = -pkin(2) * t1164 - t1217;
t982 = t1096 * t1414 + t1419 * t996;
t995 = -t1041 * t1418 + t1042 * t1413;
t945 = pkin(9) * t982 + (-pkin(10) * t1414 + t1524) * t995;
t954 = -pkin(9) * t981 + (-pkin(10) * t1419 + t1566) * t995;
t957 = -t1415 * t981 + t1420 * t982;
t927 = -pkin(3) * t995 + pkin(8) * t957 + t1415 * t954 + t1420 * t945;
t956 = t1415 * t982 + t1420 * t981;
t931 = -pkin(8) * t956 - t1415 * t945 + t1420 * t954;
t1508 = -t1416 * t927 + t1421 * t931;
t1159 = (-qJD(6) + t1319) * t1306 + t1468;
t1185 = -qJD(6) * t1304 - t1469;
t1261 = t1319 * t1304;
t1161 = t1185 + t1261;
t1092 = t1159 * t1418 + t1161 * t1413;
t1215 = t1302 + t1303;
t1065 = t1092 * t1414 + t1215 * t1419;
t1066 = t1092 * t1419 - t1215 * t1414;
t1013 = -t1065 * t1415 + t1066 * t1420;
t1090 = t1159 * t1413 - t1161 * t1418;
t979 = -pkin(10) * t1090 - t995;
t958 = pkin(9) * t1066 + t1090 * t1524 + t1414 * t979;
t959 = -pkin(9) * t1065 + t1090 * t1566 + t1419 * t979;
t939 = -pkin(3) * t1090 + pkin(8) * t1013 + t1415 * t959 + t1420 * t958;
t1012 = t1065 * t1420 + t1066 * t1415;
t941 = -pkin(8) * t1012 - t1415 * t958 + t1420 * t959;
t1507 = -t1416 * t939 + t1421 * t941;
t1075 = t1124 * t1414 + t1158 * t1419;
t1076 = t1124 * t1419 - t1158 * t1414;
t1024 = -t1075 * t1415 + t1076 * t1420;
t1123 = t1225 * t1413 + t1579;
t1014 = -pkin(5) * t1123 + t1041;
t1046 = -pkin(10) * t1123 + t1093;
t971 = -pkin(4) * t1123 + pkin(9) * t1076 + t1014 * t1419 + t1046 * t1414;
t975 = -pkin(9) * t1075 - t1014 * t1414 + t1046 * t1419;
t948 = -pkin(3) * t1123 + pkin(8) * t1024 + t1415 * t975 + t1420 * t971;
t1023 = t1075 * t1420 + t1076 * t1415;
t951 = -pkin(8) * t1023 - t1415 * t971 + t1420 * t975;
t1506 = -t1416 * t948 + t1421 * t951;
t1078 = t1133 * t1414 + t1162 * t1419;
t1079 = t1133 * t1419 - t1162 * t1414;
t1027 = -t1078 * t1415 + t1079 * t1420;
t1132 = t1241 * t1418 - t1554;
t1015 = -pkin(5) * t1132 + t1042;
t1047 = -pkin(10) * t1132 + t1094;
t972 = -pkin(4) * t1132 + pkin(9) * t1079 + t1015 * t1419 + t1047 * t1414;
t976 = -pkin(9) * t1078 - t1015 * t1414 + t1047 * t1419;
t949 = -pkin(3) * t1132 + pkin(8) * t1027 + t1415 * t976 + t1420 * t972;
t1026 = t1078 * t1420 + t1079 * t1415;
t953 = -pkin(8) * t1026 - t1415 * t972 + t1420 * t976;
t1505 = -t1416 * t949 + t1421 * t953;
t1000 = t1050 * t1420 - t1558;
t1045 = pkin(4) * t1207 + pkin(9) * t1050;
t963 = pkin(3) * t1207 + pkin(8) * t1000 - pkin(9) * t1558 + t1045 * t1420;
t965 = -pkin(8) * t999 - pkin(9) * t1557 - t1045 * t1415;
t1504 = -t1416 * t963 + t1421 * t965;
t1247 = -t1321 - t1322;
t1020 = -pkin(4) * t1247 + pkin(9) * t1138 + t1050;
t1031 = -pkin(9) * t1136 - t1049;
t1063 = -t1136 * t1415 + t1138 * t1420;
t970 = -pkin(3) * t1247 + pkin(8) * t1063 + t1020 * t1420 + t1031 * t1415;
t974 = -pkin(8) * t1061 - t1020 * t1415 + t1031 * t1420;
t1503 = -t1416 * t970 + t1421 * t974;
t1263 = -t1501 - t1321;
t1204 = t1263 * t1419 - t1581;
t1107 = -pkin(4) * t1194 + pkin(9) * t1204 + t1551;
t1203 = t1263 * t1414 + t1578;
t1141 = -t1203 * t1415 + t1204 * t1420;
t1148 = -pkin(9) * t1203 - t1552;
t1021 = -pkin(3) * t1194 + pkin(8) * t1141 + t1107 * t1420 + t1148 * t1415;
t1140 = t1203 * t1420 + t1204 * t1415;
t1038 = -pkin(8) * t1140 - t1107 * t1415 + t1148 * t1420;
t1500 = -t1416 * t1021 + t1421 * t1038;
t1230 = -t1307 * t1414 - t1549;
t1110 = -pkin(4) * t1576 + pkin(9) * t1230 - t1552;
t1154 = -pkin(9) * t1229 - t1551;
t1169 = -t1229 * t1415 + t1230 * t1420;
t1036 = -pkin(3) * t1576 + pkin(8) * t1169 + t1110 * t1420 + t1154 * t1415;
t1168 = t1229 * t1420 + t1230 * t1415;
t1044 = -pkin(8) * t1168 - t1110 * t1415 + t1154 * t1420;
t1499 = -t1416 * t1036 + t1421 * t1044;
t1309 = -t1367 - t1368;
t1115 = -pkin(3) * t1309 + pkin(8) * t1223 + t1176;
t1121 = -pkin(8) * t1221 - t1175;
t1498 = -t1416 * t1115 + t1421 * t1121;
t1326 = -t1407 - t1367;
t1272 = t1326 * t1420 - t1580;
t1358 = t1409 * t1370;
t1281 = t1358 + t1453;
t1186 = -pkin(3) * t1281 + pkin(8) * t1272 + t1547;
t1271 = t1326 * t1415 + t1577;
t1231 = -pkin(8) * t1271 - t1548;
t1497 = -t1416 * t1186 + t1421 * t1231;
t1288 = -t1348 * t1415 - t1543;
t1187 = -pkin(3) * t1573 + pkin(8) * t1288 - t1548;
t1244 = -pkin(8) * t1287 - t1547;
t1496 = -t1416 * t1187 + t1421 * t1244;
t1359 = t1424 * pkin(1) + t1432;
t1361 = -t1449 + t1565;
t1493 = -t1422 * t1359 - t1361 * t1417;
t1491 = -t1387 * t1417 - t1422 * t1388;
t1490 = pkin(3) * t956 + t1525;
t968 = t1000 * t1416 + t1421 * t999;
t1489 = -pkin(2) * t968 - t1563;
t1488 = t1417 * t1396;
t1487 = t1422 * t1396;
t1486 = pkin(5) * t1215 + pkin(10) * t1092 + t996;
t1485 = pkin(4) * t1078 + t1514;
t1484 = pkin(4) * t1075 + t1513;
t1483 = pkin(3) * t1168 + t1512;
t1008 = t1061 * t1421 + t1063 * t1416;
t1482 = -pkin(2) * t1008 - t1529;
t1381 = qJDD(1) * t1422 - t1417 * t1424;
t1480 = pkin(6) * t1381 + g(3) * t1417;
t1382 = qJDD(1) * t1417 + t1422 * t1424;
t1479 = -pkin(6) * t1382 + g(3) * t1422;
t1477 = pkin(4) * t1203 - t1113;
t1476 = pkin(3) * t1271 - t1245;
t1376 = 0.2e1 * t1516 + t1527;
t1475 = pkin(2) * t1376 - t1337;
t1379 = t1403 - 0.2e1 * t1517;
t1474 = pkin(2) * t1379 + t1531;
t1472 = pkin(3) * t1023 + t1484;
t1471 = pkin(3) * t1026 + t1485;
t1470 = pkin(4) * t1065 + t1486;
t1290 = -t1335 * t1416 - t1336 * t1421;
t1467 = t1359 * t1417 - t1361 * t1422;
t1466 = t1387 * t1422 - t1388 * t1417;
t1226 = t1287 * t1421 + t1288 * t1416;
t1465 = -pkin(2) * t1226 - t1511;
t1423 = qJD(3) ^ 2;
t1393 = -t1423 - t1533;
t1342 = t1393 * t1421 - t1540;
t1463 = -pkin(2) * t1342 - t1336;
t1461 = t1414 * t1314;
t1460 = t1414 * t1315;
t1459 = t1419 * t1314;
t1458 = t1419 * t1315;
t1457 = pkin(3) * t1140 + t1477;
t1149 = pkin(3) * t1300 + pkin(8) * t1176;
t1456 = -pkin(8) * t1555 - t1416 * t1149;
t936 = t1416 * t957 + t1421 * t956;
t1455 = -pkin(2) * t936 - t1490;
t1454 = pkin(3) * t1012 + t1470;
t1098 = t1168 * t1421 + t1169 * t1416;
t1451 = -pkin(2) * t1098 - t1483;
t1205 = t1271 * t1421 + t1272 * t1416;
t1450 = -pkin(2) * t1205 - t1476;
t1448 = pkin(2) * t995 - t1416 * t931 - t1421 * t927;
t1447 = pkin(2) * t1090 - t1416 * t941 - t1421 * t939;
t1446 = pkin(2) * t1123 - t1416 * t951 - t1421 * t948;
t1445 = pkin(2) * t1132 - t1416 * t953 - t1421 * t949;
t1444 = -pkin(2) * t1207 - t1416 * t965 - t1421 * t963;
t1443 = pkin(2) * t1247 - t1416 * t974 - t1421 * t970;
t985 = t1023 * t1421 + t1024 * t1416;
t1442 = -pkin(2) * t985 - t1472;
t987 = t1026 * t1421 + t1027 * t1416;
t1441 = -pkin(2) * t987 - t1471;
t1440 = pkin(2) * t1194 - t1421 * t1021 - t1416 * t1038;
t1439 = pkin(2) * t1576 - t1421 * t1036 - t1416 * t1044;
t1438 = pkin(2) * t1309 - t1421 * t1115 - t1416 * t1121;
t1437 = pkin(2) * t1281 - t1421 * t1186 - t1416 * t1231;
t1436 = pkin(2) * t1573 - t1421 * t1187 - t1416 * t1244;
t1072 = t1140 * t1421 + t1141 * t1416;
t1434 = -pkin(2) * t1072 - t1457;
t1433 = -pkin(2) * t1300 + pkin(8) * t1556 - t1421 * t1149;
t977 = t1012 * t1421 + t1013 * t1416;
t1431 = -pkin(2) * t977 - t1454;
t1391 = -t1423 - t1534;
t1340 = t1391 * t1416 + t1537;
t1426 = -pkin(2) * t1340 - t1335;
t1392 = t1423 - t1533;
t1390 = -t1423 + t1534;
t1384 = (-t1411 + t1412) * t1424;
t1383 = t1528 * t1424;
t1374 = t1528 * t1562;
t1373 = t1478 - 0.2e1 * t1565;
t1366 = -t1388 + t1405 + 0.2e1 * t1410;
t1355 = -t1368 + t1407;
t1354 = t1367 - t1407;
t1353 = t1378 * t1416 + t1412 * t1562;
t1352 = t1377 * t1421 + t1411 * t1562;
t1347 = -t1393 * t1416 - t1539;
t1346 = -t1392 * t1416 + t1537;
t1345 = (t1378 - t1517) * t1421;
t1344 = t1391 * t1421 - t1538;
t1343 = t1390 * t1421 - t1540;
t1341 = t1392 * t1421 + t1538;
t1339 = t1390 * t1416 + t1539;
t1338 = (-t1377 + t1516) * t1416;
t1334 = -t1376 * t1421 - t1379 * t1416;
t1333 = -t1376 * t1416 + t1379 * t1421;
t1330 = t1368 - t1367;
t1317 = pkin(1) * t1361 - qJ(2) * t1359;
t1313 = -t1322 + t1501;
t1312 = t1321 - t1501;
t1311 = (t1369 * t1420 + t1370 * t1415) * t1409;
t1310 = (t1369 * t1415 - t1370 * t1420) * t1409;
t1294 = t1354 * t1420 - t1544;
t1293 = -t1355 * t1415 + t1577;
t1292 = t1354 * t1415 + t1543;
t1291 = t1355 * t1420 + t1580;
t1282 = -t1358 + t1453;
t1279 = t1308 * t1420 - t1370 * t1536;
t1278 = t1308 * t1415 + t1370 * t1535;
t1277 = -t1369 * t1535 + t1415 * t1453;
t1276 = -t1369 * t1536 - t1420 * t1453;
t1275 = pkin(2) * t1383 + t1290;
t1273 = t1322 - t1321;
t1268 = -qJ(2) * t1347 - t1463;
t1267 = -qJ(2) * t1344 - t1426;
t1260 = -t1344 * t1570 + t1475;
t1259 = -t1347 * t1570 + t1474;
t1258 = qJ(2) * t1379 - t1342 * t1570 - t1337;
t1257 = qJ(2) * t1376 - t1340 * t1570 - t1531;
t1256 = -t1303 + t1318;
t1255 = t1302 - t1318;
t1254 = -t1459 + t1460;
t1253 = -t1461 - t1458;
t1252 = -t1310 * t1416 + t1311 * t1421;
t1251 = t1310 * t1421 + t1311 * t1416;
t1250 = -qJ(2) * t1383 + t1380 * t1570 - t1289;
t1248 = t1303 - t1302;
t1240 = -qJ(2) * t1290 + t1569;
t1239 = -t1292 * t1416 + t1294 * t1421;
t1238 = -t1291 * t1416 + t1293 * t1421;
t1237 = t1292 * t1421 + t1294 * t1416;
t1236 = t1291 * t1421 + t1293 * t1416;
t1235 = t1312 * t1419 - t1550;
t1234 = -t1313 * t1414 + t1578;
t1233 = t1312 * t1414 + t1549;
t1232 = t1313 * t1419 + t1581;
t1227 = -t1287 * t1416 + t1288 * t1421;
t1222 = -t1281 * t1420 - t1415 * t1573;
t1220 = -t1281 * t1415 + t1420 * t1573;
t1213 = -t1290 * t1570 - t1568;
t1212 = -t1278 * t1416 + t1279 * t1421;
t1211 = -t1276 * t1416 + t1277 * t1421;
t1210 = t1278 * t1421 + t1279 * t1416;
t1209 = t1276 * t1421 + t1277 * t1416;
t1208 = -qJ(2) * t1351 - t1289 * t1570;
t1206 = -t1271 * t1416 + t1272 * t1421;
t1201 = (-t1304 * t1418 + t1306 * t1413) * t1319;
t1200 = (-t1304 * t1413 - t1306 * t1418) * t1319;
t1195 = -t1315 + t1452;
t1193 = -t1253 * t1415 + t1254 * t1420;
t1192 = t1253 * t1420 + t1254 * t1415;
t1191 = t1419 * t1219 - t1460;
t1190 = t1414 * t1219 + t1458;
t1189 = t1414 * t1452 + t1459;
t1188 = -t1419 * t1452 + t1461;
t1173 = -t1233 * t1415 + t1235 * t1420;
t1172 = -t1232 * t1415 + t1234 * t1420;
t1171 = t1233 * t1420 + t1235 * t1415;
t1170 = t1232 * t1420 + t1234 * t1415;
t1166 = -t1221 * t1416 + t1223 * t1421;
t1165 = -t1220 * t1416 + t1222 * t1421;
t1163 = t1220 * t1421 + t1222 * t1416;
t1160 = t1185 - t1261;
t1157 = -t1262 + t1435;
t1153 = t1185 * t1418 - t1306 * t1546;
t1152 = t1185 * t1413 + t1306 * t1545;
t1151 = t1304 * t1545 + t1413 * t1435;
t1150 = -t1304 * t1546 + t1418 * t1435;
t1147 = t1201 * t1419 + t1216 * t1414;
t1146 = t1201 * t1414 - t1216 * t1419;
t1145 = t1255 * t1418 - t1554;
t1144 = -t1256 * t1413 + t1579;
t1143 = t1255 * t1413 + t1553;
t1142 = t1256 * t1418 + t1582;
t1137 = -t1194 * t1419 - t1414 * t1576;
t1135 = -t1194 * t1414 + t1419 * t1576;
t1130 = -t1192 * t1416 + t1193 * t1421;
t1129 = t1192 * t1421 + t1193 * t1416;
t1128 = -t1190 * t1415 + t1191 * t1420;
t1127 = -t1188 * t1415 + t1189 * t1420;
t1126 = t1190 * t1420 + t1191 * t1415;
t1125 = t1188 * t1420 + t1189 * t1415;
t1119 = t1153 * t1419 + t1523;
t1118 = t1151 * t1419 - t1523;
t1117 = t1153 * t1414 - t1522;
t1116 = t1151 * t1414 + t1522;
t1111 = -qJ(2) * t1227 - t1465;
t1109 = t1176 * t1421 - t1556;
t1105 = -qJ(2) * t1206 - t1450;
t1103 = -t1171 * t1416 + t1173 * t1421;
t1102 = -t1170 * t1416 + t1172 * t1421;
t1101 = t1171 * t1421 + t1173 * t1416;
t1100 = t1170 * t1421 + t1172 * t1416;
t1099 = -t1168 * t1416 + t1169 * t1421;
t1091 = t1158 * t1418 - t1160 * t1413;
t1089 = t1158 * t1413 + t1160 * t1418;
t1087 = t1145 * t1419 - t1157 * t1414;
t1086 = t1144 * t1419 + t1161 * t1414;
t1085 = t1145 * t1414 + t1157 * t1419;
t1084 = t1144 * t1414 - t1161 * t1419;
t1083 = -t1146 * t1415 + t1147 * t1420;
t1082 = t1146 * t1420 + t1147 * t1415;
t1081 = -t1227 * t1570 + t1436;
t1080 = qJ(2) * t1573 - t1226 * t1570 + t1496;
t1073 = -t1140 * t1416 + t1141 * t1421;
t1071 = t1091 * t1419 + t1248 * t1414;
t1070 = t1091 * t1414 - t1248 * t1419;
t1069 = -qJ(2) * t1166 - t1509;
t1068 = -t1206 * t1570 + t1437;
t1067 = qJ(2) * t1281 - t1205 * t1570 + t1497;
t1062 = -t1135 * t1415 + t1137 * t1420;
t1060 = t1135 * t1420 + t1137 * t1415;
t1058 = -t1126 * t1416 + t1128 * t1421;
t1057 = -t1125 * t1416 + t1127 * t1421;
t1056 = t1126 * t1421 + t1128 * t1416;
t1055 = t1125 * t1421 + t1127 * t1416;
t1054 = -t1117 * t1415 + t1119 * t1420;
t1053 = -t1116 * t1415 + t1118 * t1420;
t1052 = t1117 * t1420 + t1119 * t1415;
t1051 = t1116 * t1420 + t1118 * t1415;
t1035 = -t1085 * t1415 + t1087 * t1420;
t1034 = -t1084 * t1415 + t1086 * t1420;
t1033 = t1085 * t1420 + t1087 * t1415;
t1032 = t1084 * t1420 + t1086 * t1415;
t1030 = -qJ(2) * t1109 - t1510;
t1029 = -t1082 * t1416 + t1083 * t1421;
t1028 = t1082 * t1421 + t1083 * t1416;
t1019 = -t1070 * t1415 + t1071 * t1420;
t1018 = t1070 * t1420 + t1071 * t1415;
t1017 = -t1166 * t1570 + t1438;
t1016 = qJ(2) * t1309 - t1164 * t1570 + t1498;
t1010 = -t1061 * t1416 + t1063 * t1421;
t1009 = -t1060 * t1416 + t1062 * t1421;
t1007 = t1060 * t1421 + t1062 * t1416;
t1006 = -t1052 * t1416 + t1054 * t1421;
t1005 = -t1051 * t1416 + t1053 * t1421;
t1004 = t1052 * t1421 + t1054 * t1416;
t1003 = t1051 * t1421 + t1053 * t1416;
t1002 = -t1109 * t1570 + t1433;
t1001 = -qJ(2) * t1300 - t1108 * t1570 + t1456;
t997 = -qJ(2) * t1099 - t1451;
t993 = -qJ(2) * t1073 - t1434;
t992 = -t1033 * t1416 + t1035 * t1421;
t991 = -t1032 * t1416 + t1034 * t1421;
t990 = t1033 * t1421 + t1035 * t1416;
t989 = t1032 * t1421 + t1034 * t1416;
t988 = -t1026 * t1416 + t1027 * t1421;
t986 = -t1023 * t1416 + t1024 * t1421;
t984 = -t1018 * t1416 + t1019 * t1421;
t983 = t1018 * t1421 + t1019 * t1416;
t978 = -t1012 * t1416 + t1013 * t1421;
t969 = t1000 * t1421 - t1416 * t999;
t967 = -t1099 * t1570 + t1439;
t966 = qJ(2) * t1576 - t1098 * t1570 + t1499;
t962 = -qJ(2) * t1010 - t1482;
t961 = -t1073 * t1570 + t1440;
t960 = qJ(2) * t1194 - t1072 * t1570 + t1500;
t947 = -qJ(2) * t988 - t1441;
t946 = -qJ(2) * t986 - t1442;
t944 = -qJ(2) * t969 - t1489;
t943 = -t1010 * t1570 + t1443;
t942 = qJ(2) * t1247 - t1008 * t1570 + t1503;
t938 = -qJ(2) * t978 - t1431;
t937 = -t1416 * t956 + t1421 * t957;
t935 = -t1570 * t969 + t1444;
t934 = -qJ(2) * t1207 - t1570 * t968 + t1504;
t933 = -t1570 * t988 + t1445;
t932 = qJ(2) * t1132 - t1570 * t987 + t1505;
t929 = -t1570 * t986 + t1446;
t928 = qJ(2) * t1123 - t1570 * t985 + t1506;
t926 = -t1570 * t978 + t1447;
t925 = qJ(2) * t1090 - t1570 * t977 + t1507;
t924 = -qJ(2) * t937 - t1455;
t923 = -t1570 * t937 + t1448;
t922 = qJ(2) * t995 - t1570 * t936 + t1508;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1381, 0, -t1382, 0, -t1480, -t1479, -t1466, -pkin(6) * t1466, 0, -t1381, t1382, 0, 0, 0, t1467, t1480, t1479, pkin(6) * t1467 + (-pkin(1) * t1417 + qJ(2) * t1422) * g(3), t1353 * t1417 + t1487, t1333 * t1417 + t1384 * t1422, t1341 * t1417 + t1403 * t1422, t1352 * t1417 - t1487, t1339 * t1417 - t1422 * t1527, qJDD(3) * t1422 - t1374 * t1417, t1422 * t1267 - t1417 * t1260 - pkin(6) * (-t1340 * t1422 + t1376 * t1417), t1422 * t1268 - t1417 * t1259 - pkin(6) * (-t1342 * t1422 + t1379 * t1417), -pkin(2) * t1541 + t1417 * t1275 - pkin(6) * (-t1383 * t1417 + t1541), t1422 * t1240 - t1417 * t1213 - pkin(6) * (-t1289 * t1422 - t1351 * t1417), t1210 * t1417 - t1518, t1163 * t1417 + t1330 * t1422, t1236 * t1417 + t1286 * t1422, t1209 * t1417 + t1518, t1237 * t1417 - t1282 * t1422, t1251 * t1417 + t1408 * t1422, t1422 * t1105 - t1417 * t1068 - pkin(6) * (-t1205 * t1422 + t1281 * t1417), t1422 * t1111 - t1417 * t1081 - pkin(6) * (-t1226 * t1422 + t1417 * t1573), t1422 * t1069 - t1417 * t1017 - pkin(6) * (-t1164 * t1422 + t1309 * t1417), t1422 * t1030 - t1417 * t1002 - pkin(6) * (-t1108 * t1422 - t1300 * t1417), t1056 * t1417 + t1520, t1007 * t1417 + t1273 * t1422, t1100 * t1417 + t1198 * t1422, t1055 * t1417 - t1520, t1101 * t1417 - t1195 * t1422, t1129 * t1417 + t1402 * t1422, t1422 * t993 - t1417 * t961 - pkin(6) * (-t1072 * t1422 + t1194 * t1417), t1422 * t997 - t1417 * t967 - pkin(6) * (-t1098 * t1422 + t1417 * t1576), t1422 * t962 - t1417 * t943 - pkin(6) * (-t1008 * t1422 + t1247 * t1417), t1422 * t944 - t1417 * t935 - pkin(6) * (-t1207 * t1417 - t1422 * t968), t1004 * t1417 + t1152 * t1422, t1089 * t1422 + t1417 * t983, t1142 * t1422 + t1417 * t989, t1003 * t1417 - t1150 * t1422, t1143 * t1422 + t1417 * t990, t1028 * t1417 + t1200 * t1422, t1422 * t946 - t1417 * t929 - pkin(6) * (t1123 * t1417 - t1422 * t985), t1422 * t947 - t1417 * t933 - pkin(6) * (t1132 * t1417 - t1422 * t987), t1422 * t938 - t1417 * t926 - pkin(6) * (t1090 * t1417 - t1422 * t977), t1422 * t924 - t1417 * t923 - pkin(6) * (t1417 * t995 - t1422 * t936); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1382, 0, t1381, 0, t1479, -t1480, t1491, pkin(6) * t1491, 0, -t1382, -t1381, 0, 0, 0, t1493, -t1479, t1480, pkin(6) * t1493 + (pkin(1) * t1422 + qJ(2) * t1417) * g(3), -t1353 * t1422 + t1488, -t1333 * t1422 + t1384 * t1417, -t1341 * t1422 + t1403 * t1417, -t1352 * t1422 - t1488, -t1339 * t1422 - t1417 * t1527, qJDD(3) * t1417 + t1374 * t1422, t1417 * t1267 + t1422 * t1260 + pkin(6) * (t1340 * t1417 + t1376 * t1422), t1417 * t1268 + t1422 * t1259 + pkin(6) * (t1342 * t1417 + t1379 * t1422), -pkin(2) * t1542 - t1422 * t1275 + pkin(6) * (-t1383 * t1422 - t1542), t1417 * t1240 + t1422 * t1213 + pkin(6) * (t1289 * t1417 - t1351 * t1422), -t1210 * t1422 - t1519, -t1163 * t1422 + t1330 * t1417, -t1236 * t1422 + t1286 * t1417, -t1209 * t1422 + t1519, -t1237 * t1422 - t1282 * t1417, -t1251 * t1422 + t1408 * t1417, t1417 * t1105 + t1422 * t1068 + pkin(6) * (t1205 * t1417 + t1281 * t1422), t1417 * t1111 + t1422 * t1081 + pkin(6) * (t1226 * t1417 + t1422 * t1573), t1417 * t1069 + t1422 * t1017 + pkin(6) * (t1164 * t1417 + t1309 * t1422), t1417 * t1030 + t1422 * t1002 + pkin(6) * (t1108 * t1417 - t1300 * t1422), -t1056 * t1422 + t1521, -t1007 * t1422 + t1273 * t1417, -t1100 * t1422 + t1198 * t1417, -t1055 * t1422 - t1521, -t1101 * t1422 - t1195 * t1417, -t1129 * t1422 + t1402 * t1417, t1417 * t993 + t1422 * t961 + pkin(6) * (t1072 * t1417 + t1194 * t1422), t1417 * t997 + t1422 * t967 + pkin(6) * (t1098 * t1417 + t1422 * t1576), t1417 * t962 + t1422 * t943 + pkin(6) * (t1008 * t1417 + t1247 * t1422), t1417 * t944 + t1422 * t935 + pkin(6) * (-t1207 * t1422 + t1417 * t968), -t1004 * t1422 + t1152 * t1417, t1089 * t1417 - t1422 * t983, t1142 * t1417 - t1422 * t989, -t1003 * t1422 - t1150 * t1417, t1143 * t1417 - t1422 * t990, -t1028 * t1422 + t1200 * t1417, t1417 * t946 + t1422 * t929 + pkin(6) * (t1123 * t1422 + t1417 * t985), t1417 * t947 + t1422 * t933 + pkin(6) * (t1132 * t1422 + t1417 * t987), t1417 * t938 + t1422 * t926 + pkin(6) * (t1090 * t1422 + t1417 * t977), t1417 * t924 + t1422 * t923 + pkin(6) * (t1417 * t936 + t1422 * t995); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1387, t1388, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1373, t1366, t1317, t1345, t1334, t1346, t1338, t1343, 0, t1257, t1258, t1250, t1208, t1212, t1165, t1238, t1211, t1239, t1252, t1067, t1080, t1016, t1001, t1058, t1009, t1102, t1057, t1103, t1130, t960, t966, t942, t934, t1006, t984, t991, t1005, t992, t1029, t928, t932, t925, t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1424, 0, 0, -g(3), -t1387, 0, 0, -qJDD(1), t1424, 0, 0, 0, -t1361, 0, g(3), qJ(2) * g(3), t1396, t1384, t1403, -t1396, -t1527, qJDD(3), t1267, t1268, -t1567, t1240, -t1332, t1330, t1286, t1332, -t1282, t1408, t1105, t1111, t1069, t1030, t1274, t1273, t1198, -t1274, -t1195, t1402, t993, t997, t962, t944, t1152, t1089, t1142, -t1150, t1143, t1200, t946, t947, t938, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1424, 0, qJDD(1), 0, g(3), 0, -t1388, 0, 0, -t1424, -qJDD(1), 0, 0, 0, -t1359, -g(3), 0, pkin(1) * g(3), -t1353, -t1333, -t1341, -t1352, -t1339, t1374, t1260, t1259, -t1275, t1213, -t1210, -t1163, -t1236, -t1209, -t1237, -t1251, t1068, t1081, t1017, t1002, -t1056, -t1007, -t1100, -t1055, -t1101, -t1129, t961, t967, t943, t935, -t1004, -t983, -t989, -t1003, -t990, -t1028, t929, t933, t926, t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1387, t1388, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1373, t1366, t1317, t1345, t1334, t1346, t1338, t1343, 0, t1257, t1258, t1250, t1208, t1212, t1165, t1238, t1211, t1239, t1252, t1067, t1080, t1016, t1001, t1058, t1009, t1102, t1057, t1103, t1130, t960, t966, t942, t934, t1006, t984, t991, t1005, t992, t1029, t928, t932, t925, t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1361, -t1359, 0, t1345, t1334, t1346, t1338, t1343, 0, -pkin(7) * t1340 - t1531, -pkin(7) * t1342 - t1337, pkin(7) * t1380 - t1289, -pkin(7) * t1289, t1212, t1165, t1238, t1211, t1239, t1252, -pkin(7) * t1205 + t1497, -pkin(7) * t1226 + t1496, -pkin(7) * t1164 + t1498, -pkin(7) * t1108 + t1456, t1058, t1009, t1102, t1057, t1103, t1130, -pkin(7) * t1072 + t1500, -pkin(7) * t1098 + t1499, -pkin(7) * t1008 + t1503, -pkin(7) * t968 + t1504, t1006, t984, t991, t1005, t992, t1029, -pkin(7) * t985 + t1506, -pkin(7) * t987 + t1505, -pkin(7) * t977 + t1507, -pkin(7) * t936 + t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1424, 0, 0, 0, t1361, 0, -g(3), 0, -t1396, -t1384, -t1403, t1396, t1527, -qJDD(3), t1426, t1463, t1567, -t1569, t1332, -t1330, -t1286, -t1332, t1282, -t1408, t1450, t1465, t1509, t1510, -t1274, -t1273, -t1198, t1274, t1195, -t1402, t1434, t1451, t1482, t1489, -t1152, -t1089, -t1142, t1150, -t1143, -t1200, t1442, t1441, t1431, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1424, qJDD(1), 0, 0, 0, t1359, g(3), 0, 0, t1353, t1333, t1341, t1352, t1339, -t1374, pkin(7) * t1344 - t1475, pkin(7) * t1347 - t1474, t1275, pkin(7) * t1290 + t1568, t1210, t1163, t1236, t1209, t1237, t1251, pkin(7) * t1206 - t1437, pkin(7) * t1227 - t1436, pkin(7) * t1166 - t1438, pkin(7) * t1109 - t1433, t1056, t1007, t1100, t1055, t1101, t1129, pkin(7) * t1073 - t1440, pkin(7) * t1099 - t1439, pkin(7) * t1010 - t1443, pkin(7) * t969 - t1444, t1004, t983, t989, t1003, t990, t1028, pkin(7) * t986 - t1446, pkin(7) * t988 - t1445, pkin(7) * t978 - t1447, pkin(7) * t937 - t1448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1378, -t1376, t1386, t1517, t1390, -t1517, 0, -t1351, -t1335, 0, t1279, t1222, t1293, t1277, t1294, t1311, t1231, t1244, t1121, -pkin(8) * t1175, t1128, t1062, t1172, t1127, t1173, t1193, t1038, t1044, t974, t965, t1054, t1019, t1034, t1053, t1035, t1083, t951, t953, t941, t931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1516, t1379, t1392, t1377, t1385, -t1516, t1351, 0, -t1336, 0, t1278, t1220, t1291, t1276, t1292, t1310, t1186, t1187, t1115, t1149, t1126, t1060, t1170, t1125, t1171, t1192, t1021, t1036, t970, t963, t1052, t1018, t1032, t1051, t1033, t1082, t948, t949, t939, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1396, t1384, t1403, -t1396, -t1527, qJDD(3), t1335, t1336, 0, 0, -t1332, t1330, t1286, t1332, -t1282, t1408, t1476, t1511, t1217, t1174, t1274, t1273, t1198, -t1274, -t1195, t1402, t1457, t1483, t1529, t1563, t1152, t1089, t1142, -t1150, t1143, t1200, t1472, t1471, t1454, t1490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1308, -t1281, t1572, -t1357, t1354, t1357, 0, -t1300, t1245, 0, t1191, t1137, t1234, t1189, t1235, t1254, t1148, t1154, t1031, -pkin(9) * t1049, t1119, t1071, t1086, t1118, t1087, t1147, t975, t976, t959, t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, t1573, t1355, -t1453, t1328, -t1358, t1300, 0, t1246, 0, t1190, t1135, t1232, t1188, t1233, t1253, t1107, t1110, t1020, t1045, t1117, t1070, t1084, t1116, t1085, t1146, t971, t972, t958, t945; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1332, t1330, t1286, t1332, -t1282, t1408, -t1245, -t1246, 0, 0, t1274, t1273, t1198, -t1274, -t1195, t1402, t1477, t1512, t1134, t1048, t1152, t1089, t1142, -t1150, t1143, t1200, t1484, t1485, t1470, t1525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1219, -t1194, t1574, t1314, t1312, -t1314, 0, -t1207, t1113, 0, t1153, t1091, t1144, t1151, t1145, t1201, t1046, t1047, t979, -pkin(10) * t995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1315, t1576, t1313, -t1452, t1265, -t1315, t1207, 0, t1114, 0, -t1249, -t1248, -t1161, t1249, t1157, -t1216, t1014, t1015, -pkin(5) * t1090, -pkin(5) * t995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1274, t1273, t1198, -t1274, -t1195, t1402, -t1113, -t1114, 0, 0, t1152, t1089, t1142, -t1150, t1143, t1200, t1513, t1514, t1486, t1564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1185, t1158, t1575, t1261, t1255, -t1261, 0, t1096, t1041, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1262, t1160, t1256, -t1435, t1178, -t1262, -t1096, 0, t1042, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1249, t1248, t1161, -t1249, -t1157, t1216, -t1041, -t1042, 0, 0;];
m_new_reg  = t1;
