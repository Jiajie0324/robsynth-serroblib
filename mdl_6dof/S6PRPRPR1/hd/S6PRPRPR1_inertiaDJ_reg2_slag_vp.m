% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRPR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR1_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:27:57
% EndTime: 2019-03-08 19:28:02
% DurationCPUTime: 1.58s
% Computational Cost: add. (2151->187), mult. (5506->340), div. (0->0), fcn. (5689->12), ass. (0->115)
t118 = cos(pkin(12));
t70 = sin(qJ(4));
t101 = t118 * t70;
t65 = sin(pkin(12));
t73 = cos(qJ(4));
t54 = t65 * t73 + t101;
t49 = t54 * qJD(4);
t100 = t118 * t73;
t114 = t70 * qJD(4);
t50 = qJD(4) * t100 - t65 * t114;
t127 = t65 * t70;
t53 = -t100 + t127;
t138 = -t54 * t49 - t50 * t53;
t69 = sin(qJ(6));
t63 = t69 ^ 2;
t72 = cos(qJ(6));
t64 = t72 ^ 2;
t99 = qJD(6) * (t63 - t64);
t116 = qJD(6) * t69;
t66 = sin(pkin(11));
t60 = t66 * pkin(2) + pkin(8);
t120 = qJ(5) + t60;
t51 = t120 * t73;
t28 = t118 * t51 - t120 * t127;
t98 = qJD(4) * t120;
t41 = t73 * qJD(5) - t70 * t98;
t82 = t70 * qJD(5) + t73 * t98;
t75 = t118 * t41 - t65 * t82;
t119 = cos(pkin(11));
t62 = -t119 * pkin(2) - pkin(3);
t56 = -t73 * pkin(4) + t62;
t79 = -t53 * pkin(5) + t54 * pkin(9) - t56;
t76 = t72 * t79;
t109 = pkin(4) * t114;
t81 = t49 * pkin(5) - t50 * pkin(9) + t109;
t3 = qJD(6) * t76 + t28 * t116 - t69 * t81 - t72 * t75;
t10 = t72 * t28 - t69 * t79;
t4 = -qJD(6) * t10 - t69 * t75 + t72 * t81;
t9 = -t69 * t28 - t76;
t92 = t10 * t72 - t69 * t9;
t137 = qJD(6) * t92 - t3 * t69 + t4 * t72;
t115 = qJD(6) * t72;
t67 = sin(pkin(6));
t71 = sin(qJ(2));
t74 = cos(qJ(2));
t47 = (t119 * t71 + t66 * t74) * t67;
t68 = cos(pkin(6));
t36 = -t47 * t70 + t68 * t73;
t37 = t47 * t73 + t68 * t70;
t12 = t118 * t37 + t65 * t36;
t43 = qJD(2) * t47;
t102 = t119 * t74;
t46 = (t66 * t71 - t102) * t67;
t117 = qJD(2) * t67;
t106 = t71 * t117;
t42 = -t102 * t117 + t66 * t106;
t15 = -qJD(4) * t37 + t42 * t70;
t16 = qJD(4) * t36 - t42 * t73;
t83 = t118 * t16 + t65 * t15;
t1 = -t46 * t115 + t12 * t116 - t43 * t69 - t72 * t83;
t8 = t72 * t12 + t46 * t69;
t2 = -qJD(6) * t8 + t43 * t72 - t69 * t83;
t7 = -t69 * t12 + t46 * t72;
t93 = t69 * t7 - t72 * t8;
t136 = qJD(6) * t93 + t1 * t69 - t2 * t72;
t135 = 0.2e1 * qJD(4);
t11 = -t118 * t36 + t65 * t37;
t6 = -t118 * t15 + t65 * t16;
t134 = t11 * t6;
t18 = t118 * t82 + t65 * t41;
t27 = t120 * t101 + t65 * t51;
t133 = t27 * t18;
t21 = t46 * t43;
t132 = t53 * t49;
t131 = t54 * t50;
t130 = t54 * t69;
t129 = t54 * t72;
t128 = t63 * t50;
t44 = t64 * t50;
t126 = t69 * t49;
t125 = t72 * t49;
t124 = t72 * t50;
t123 = t53 * t124 + t54 * t125;
t113 = t73 * qJD(4);
t112 = 0.2e1 * t132;
t111 = t62 * t135;
t61 = -t118 * pkin(4) - pkin(5);
t110 = 0.2e1 * qJD(6) * t61;
t108 = t54 * t116;
t107 = t46 * t114;
t105 = t69 * t115;
t104 = t70 * t113;
t103 = -0.4e1 * t69 * t129;
t52 = t54 ^ 2;
t97 = t52 * t105;
t94 = -t69 * t8 - t7 * t72;
t91 = -t10 * t69 - t72 * t9;
t90 = t11 * t18 + t6 * t27;
t89 = t11 * t49 + t6 * t53;
t88 = t18 * t53 + t27 * t49;
t59 = t65 * pkin(4) + pkin(9);
t86 = -t49 * t59 + t50 * t61;
t85 = t53 * t59 - t54 * t61;
t25 = t53 * t115 + t126;
t84 = t54 * t115 + t69 * t50;
t24 = t108 - t124;
t80 = qJD(6) * t94 - t1 * t72 - t2 * t69;
t78 = qJD(6) * t91 - t3 * t72 - t4 * t69;
t77 = -t15 * t70 + t16 * t73 + (-t36 * t73 - t37 * t70) * qJD(4);
t31 = t54 * t44;
t30 = t54 * t128;
t23 = t53 * t116 - t125;
t22 = -t44 - t128;
t14 = -t69 * t124 + t54 * t99;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t47 * t42 + 0.2e1 * t21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t15 * t36 + 0.2e1 * t16 * t37 + 0.2e1 * t21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t12 * t83 + 0.2e1 * t134 + 0.2e1 * t21, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t1 * t8 + 0.2e1 * t2 * t7 + 0.2e1 * t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, -t74 * t117, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t42, 0 (-t119 * t43 - t42 * t66) * pkin(2), 0, 0, 0, 0, 0, 0, -t43 * t73 + t107, t46 * t113 + t43 * t70, t77, t43 * t62 + t60 * t77, 0, 0, 0, 0, 0, 0, t43 * t53 + t46 * t49, t43 * t54 + t46 * t50, t11 * t50 - t12 * t49 - t53 * t83 + t6 * t54, pkin(4) * t107 + t12 * t75 + t28 * t83 + t43 * t56 + t90, 0, 0, 0, 0, 0, 0, t11 * t84 + t130 * t6 + t2 * t53 + t7 * t49, t1 * t53 - t11 * t24 + t129 * t6 - t8 * t49, t136 * t54 + t94 * t50, -t1 * t10 + t2 * t9 - t3 * t8 + t4 * t7 + t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t104 (-t70 ^ 2 + t73 ^ 2) * t135, 0, -0.2e1 * t104, 0, 0, t70 * t111, t73 * t111, 0, 0, 0.2e1 * t131, 0.2e1 * t138, 0, t112, 0, 0, 0.2e1 * t109 * t53 + 0.2e1 * t56 * t49, 0.2e1 * t109 * t54 + 0.2e1 * t56 * t50, 0.2e1 * t18 * t54 + 0.2e1 * t27 * t50 - 0.2e1 * t28 * t49 - 0.2e1 * t53 * t75, 0.2e1 * t109 * t56 + 0.2e1 * t28 * t75 + 0.2e1 * t133, 0.2e1 * t31 - 0.2e1 * t97, t50 * t103 + 0.2e1 * t52 * t99, -0.2e1 * t108 * t53 + 0.2e1 * t123, 0.2e1 * t30 + 0.2e1 * t97, -0.2e1 * t126 * t54 - 0.2e1 * t53 * t84, t112, 0.2e1 * t130 * t18 + 0.2e1 * t27 * t84 + 0.2e1 * t4 * t53 + 0.2e1 * t9 * t49, -0.2e1 * t10 * t49 + 0.2e1 * t129 * t18 - 0.2e1 * t24 * t27 + 0.2e1 * t3 * t53, -0.2e1 * t137 * t54 + 0.2e1 * t91 * t50, -0.2e1 * t10 * t3 + 0.2e1 * t4 * t9 + 0.2e1 * t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15 * t73 + t16 * t70 + (-t36 * t70 + t37 * t73) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, t12 * t50 + t54 * t83 + t89, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93 * t50 + t54 * t80 + t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28 * t50 + t54 * t75 + t88, 0, 0, 0, 0, 0, 0, 0, t138 * t72 + t123, 0, t50 * t92 + t54 * t78 + t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t131 + 0.2e1 * t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t30 + 0.2e1 * t31 + 0.2e1 * t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, -t16, 0, 0, 0, 0, 0, 0, 0, 0, -t6, -t83, 0 (-t118 * t6 + t65 * t83) * pkin(4), 0, 0, 0, 0, 0, 0, t11 * t116 - t6 * t72, t11 * t115 + t6 * t69, t80, t59 * t80 + t6 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, -t114, 0, -t60 * t113, t60 * t114, 0, 0, 0, 0, t50, 0, -t49, 0, -t18, -t75 (-t118 * t50 - t49 * t65) * pkin(4) (-t118 * t18 + t65 * t75) * pkin(4), -t14, qJD(6) * t103 - t128 + t44, t25, t14, -t23, 0, -t18 * t72 + t86 * t69 + (t27 * t69 - t72 * t85) * qJD(6), t18 * t69 + t86 * t72 + (t27 * t72 + t69 * t85) * qJD(6), t78, t18 * t61 + t59 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, -t113, 0, 0, 0, 0, 0, 0, 0, 0, -t49, -t50, 0 (-t118 * t49 + t50 * t65) * pkin(4), 0, 0, 0, 0, 0, 0, t23, t25, -t22, t49 * t61 + (t63 + t64) * t59 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t105, -0.2e1 * t99, 0, -0.2e1 * t105, 0, 0, t69 * t110, t72 * t110, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t50, 0, t109, 0, 0, 0, 0, 0, 0, -t23, -t25, t22, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, 0, -t84, t49, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, t24, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, 0, -t116, 0, -t59 * t115, t59 * t116, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, -t115, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
