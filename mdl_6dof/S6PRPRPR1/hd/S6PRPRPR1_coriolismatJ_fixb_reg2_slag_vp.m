% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRPR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:28:04
% EndTime: 2019-03-08 19:28:14
% DurationCPUTime: 6.97s
% Computational Cost: add. (8805->376), mult. (20721->569), div. (0->0), fcn. (24513->12), ass. (0->312)
t358 = sin(qJ(2));
t532 = sin(pkin(6));
t534 = cos(pkin(11));
t412 = t534 * t532;
t395 = t358 * t412;
t355 = sin(pkin(11));
t539 = cos(qJ(2));
t417 = t532 * t539;
t396 = t355 * t417;
t302 = t395 + t396;
t357 = sin(qJ(4));
t360 = cos(qJ(4));
t535 = cos(pkin(6));
t273 = t302 * t357 - t360 * t535;
t274 = t302 * t360 + t357 * t535;
t354 = sin(pkin(12));
t533 = cos(pkin(12));
t184 = t533 * t273 + t274 * t354;
t427 = t533 * t357;
t496 = t354 * t360;
t330 = t427 + t496;
t517 = t184 * t330;
t345 = pkin(2) * t355 + pkin(8);
t558 = qJ(5) + t345;
t425 = t558 * t357;
t484 = t558 * t360;
t236 = t354 * t484 + t533 * t425;
t356 = sin(qJ(6));
t561 = t236 * t356;
t359 = cos(qJ(6));
t560 = t236 * t359;
t352 = t359 ^ 2;
t350 = t356 ^ 2;
t544 = t350 / 0.2e1;
t430 = t352 / 0.2e1 + t544;
t559 = 0.1e1 / 0.2e1 - t430;
t553 = -t354 * t425 + t484 * t533;
t510 = t553 * t356;
t509 = t553 * t359;
t429 = t358 * t532;
t301 = t355 * t429 - t412 * t539;
t209 = t301 * t330;
t344 = pkin(4) * t354 + pkin(9);
t346 = -pkin(4) * t533 - pkin(5);
t426 = t533 * t360;
t497 = t354 * t357;
t328 = -t426 + t497;
t210 = t301 * t328;
t495 = t356 * t210;
t503 = t302 * t359;
t172 = -t495 + t503;
t491 = t359 * t210;
t504 = t302 * t356;
t173 = t491 + t504;
t540 = t359 / 0.2e1;
t543 = -t356 / 0.2e1;
t391 = t172 * t543 + t173 * t540;
t557 = t391 * t344 - t209 * t346 / 0.2e1;
t492 = t356 * t359;
t420 = 0.2e1 * t330 * t492;
t250 = t356 * t328;
t243 = t250 * qJD(6);
t324 = t330 * qJD(4);
t317 = t359 * t324;
t555 = -t317 + t243;
t326 = t328 ^ 2;
t327 = t330 ^ 2;
t554 = -t327 - t326;
t452 = t327 - t326;
t386 = -t354 * t273 + t274 * t533;
t552 = t386 / 0.2e1;
t551 = -t386 / 0.2e1;
t550 = t553 / 0.2e1;
t549 = t236 / 0.2e1;
t548 = -t553 / 0.2e1;
t547 = t328 / 0.2e1;
t546 = -t330 / 0.2e1;
t545 = t330 / 0.2e1;
t542 = t356 / 0.2e1;
t541 = -t359 / 0.2e1;
t538 = t357 * pkin(4);
t537 = qJD(4) * pkin(4);
t431 = -t236 / 0.2e1 + t549;
t46 = t431 * t330 + (t548 + t550) * t328;
t536 = t46 * qJD(4);
t435 = t209 * t547;
t37 = t330 * t391 - t435;
t531 = qJD(1) * t37;
t85 = t210 * t545 - t435;
t530 = qJD(1) * t85;
t123 = -t301 * t359 + t356 * t386;
t529 = t123 * t328;
t528 = t123 * t356;
t347 = -pkin(2) * t534 - pkin(3);
t334 = -t360 * pkin(4) + t347;
t367 = t328 * pkin(5) - t330 * pkin(9) + t334;
t149 = -t359 * t367 + t510;
t527 = t149 * t356;
t150 = t356 * t367 + t509;
t526 = t150 * t359;
t255 = pkin(5) * t330 + pkin(9) * t328 + t538;
t489 = t359 * t255;
t169 = t489 + t561;
t525 = t169 * t356;
t524 = t169 * t359;
t493 = t356 * t255;
t170 = -t560 + t493;
t523 = t170 * t356;
t522 = t170 * t359;
t521 = t172 * t359;
t520 = t173 * t356;
t518 = t184 * t209;
t516 = t386 * t328;
t515 = t209 * t236;
t513 = t209 * t356;
t512 = t209 * t359;
t508 = t236 * t330;
t27 = (t551 + t552) * t330;
t505 = t27 * qJD(2);
t215 = t301 * t357;
t502 = t328 * t330;
t501 = t328 * t354;
t500 = t330 * t346;
t499 = t330 * t359;
t498 = t344 * t328;
t252 = t356 * t330;
t368 = -t430 * t498 + t500 / 0.2e1;
t393 = -t524 / 0.2e1 - t523 / 0.2e1;
t40 = t368 + t393;
t488 = t40 * qJD(2);
t80 = (-t273 * t357 - t274 * t360 + t302) * t301;
t487 = t80 * qJD(1);
t162 = t517 / 0.2e1;
t486 = t162 - t516 / 0.2e1;
t485 = t301 * t356 + t359 * t386;
t483 = t350 + t352;
t339 = t352 - t350;
t211 = t452 * t356;
t481 = qJD(2) * t211;
t212 = t554 * t356;
t480 = qJD(2) * t212;
t213 = t452 * t359;
t479 = qJD(2) * t213;
t478 = qJD(2) * t360;
t254 = t359 * t328;
t477 = qJD(4) * t254;
t476 = qJD(4) * t356;
t475 = qJD(4) * t359;
t474 = qJD(5) * t359;
t473 = qJD(6) * t356;
t472 = qJD(6) * t359;
t125 = t559 * t502;
t471 = t125 * qJD(2);
t428 = t533 * t330;
t380 = -t501 / 0.2e1 - t428 / 0.2e1;
t223 = (-t357 / 0.2e1 + t380) * pkin(4);
t469 = t223 * qJD(2);
t468 = t452 * qJD(2);
t248 = (t544 - t352 / 0.2e1) * t330;
t467 = t248 * qJD(6);
t242 = t250 * qJD(2);
t466 = t252 * qJD(2);
t465 = t254 * qJD(2);
t319 = t350 * t328;
t320 = t352 * t328;
t262 = t319 + t320;
t464 = t262 * qJD(2);
t463 = t262 * qJD(4);
t264 = t554 * t359;
t462 = t264 * qJD(2);
t461 = t554 * qJD(2);
t460 = t302 * qJD(2);
t325 = t427 / 0.2e1 + t496 / 0.2e1;
t459 = t325 * qJD(2);
t458 = t328 * qJD(2);
t323 = t328 * qJD(4);
t457 = t330 * qJD(2);
t351 = t357 ^ 2;
t353 = t360 ^ 2;
t340 = t353 - t351;
t456 = t340 * qJD(2);
t455 = t357 * qJD(4);
t454 = t360 * qJD(4);
t394 = t526 / 0.2e1 + t527 / 0.2e1;
t10 = (t522 / 0.2e1 - t525 / 0.2e1 + t549) * t330 + (t550 - t394) * t328;
t453 = t10 * qJD(4) + t125 * qJD(5);
t451 = t538 / 0.2e1;
t449 = t356 * t475;
t448 = t330 * t473;
t447 = t330 * t472;
t446 = t328 * t457;
t445 = t328 * t324;
t444 = t347 * t357 * qJD(2);
t443 = t347 * t478;
t442 = t356 * t472;
t441 = t357 * t454;
t440 = t359 * t457;
t437 = -t517 / 0.2e1;
t436 = t184 * t540;
t434 = -t495 / 0.2e1;
t433 = -t491 / 0.2e1;
t424 = t485 * t328;
t423 = t485 * t359;
t422 = t483 * t184;
t421 = (-t351 - t353) * t301;
t419 = -qJD(6) - t458;
t418 = t327 * t442;
t414 = qJD(4) * t420;
t413 = t302 / 0.2e1 + t437;
t15 = (t386 - t423 - t528) * t184;
t377 = -t423 / 0.2e1 - t528 / 0.2e1;
t8 = t559 * t517 + (t552 + t377) * t328;
t411 = t15 * qJD(1) + t8 * qJD(3);
t372 = t386 * t545;
t364 = t123 * t546 + t356 * t372;
t16 = -t512 / 0.2e1 + t364;
t29 = (-t149 + t510) * t330 + (t169 - t561) * t328;
t410 = t16 * qJD(1) + t29 * qJD(2);
t21 = (t523 + t524) * t330 + (t149 * t359 - t150 * t356) * t328;
t369 = (t123 * t541 + t485 * t542) * t328;
t23 = t369 - t391;
t409 = t23 * qJD(1) - t21 * qJD(2);
t28 = -t184 * t545 + t386 * t547 + t486;
t408 = -t28 * qJD(1) - t46 * qJD(2);
t32 = t434 + t424 / 0.2e1 + t413 * t359;
t79 = -t150 * t328 + t236 * t499;
t407 = qJD(1) * t32 - qJD(2) * t79;
t33 = t433 - t529 / 0.2e1 - t413 * t356;
t78 = t149 * t328 - t236 * t252;
t406 = -qJD(1) * t33 + qJD(2) * t78;
t14 = -t123 * t172 + t173 * t485 - t518;
t405 = t14 * qJD(1) + t37 * qJD(3);
t404 = t28 * qJD(3);
t31 = t210 * t386 + t301 * t302 - t518;
t403 = t31 * qJD(1) + t85 * qJD(3);
t402 = t522 - t525;
t401 = -t328 * t346 - t330 * t344;
t107 = -t328 * t553 + t508;
t363 = t395 / 0.2e1 + t396 / 0.2e1;
t58 = t516 / 0.2e1 + t437 + t363;
t400 = -qJD(1) * t58 + qJD(2) * t107;
t399 = t419 * t359;
t134 = (t546 + t325) * t301;
t224 = t328 * t538 + t330 * t334;
t398 = -qJD(1) * t134 + qJD(2) * t224;
t379 = t426 / 0.2e1 - t497 / 0.2e1;
t135 = (t547 + t379) * t301;
t225 = -t328 * t334 + t330 * t538;
t397 = -qJD(1) * t135 + qJD(2) * t225;
t392 = -t521 / 0.2e1 - t520 / 0.2e1;
t390 = t184 * t550 + t386 * t549;
t389 = t498 / 0.2e1 - t500 / 0.2e1;
t388 = t330 * t399;
t219 = -qJD(2) * t248 + t449;
t387 = qJD(6) * t325 + t446;
t192 = qJD(2) * t327 * t492 + qJD(4) * t248;
t263 = t339 * t327;
t385 = qJD(2) * t263 + t414;
t384 = qJD(2) * t420 - qJD(4) * t339;
t361 = -t394 * t184 - t123 * t169 / 0.2e1 + t485 * t170 / 0.2e1 + t390;
t2 = t361 - t557;
t20 = -t149 * t169 + t150 * t170 + t553 * t236;
t383 = t2 * qJD(1) + t20 * qJD(2) + t10 * qJD(3);
t366 = -t184 * t548 - t236 * t551 - t390;
t381 = t210 * t354 / 0.2e1 + t209 * t533 / 0.2e1;
t6 = (-t215 / 0.2e1 + t381) * pkin(4) + t366;
t74 = t334 * t538;
t382 = -t6 * qJD(1) + t74 * qJD(2) + t46 * qJD(3);
t133 = (0.1e1 - t483) * t502;
t378 = t8 * qJD(1) + t10 * qJD(2) + t133 * qJD(3);
t376 = t255 / 0.2e1 + t389;
t362 = t359 * t372 + t485 * t546;
t19 = t513 / 0.2e1 + t362;
t30 = (-t150 + t509) * t330 + (-t170 - t560) * t328;
t375 = t19 * qJD(1) + t30 * qJD(2);
t365 = t328 * t377 + t162;
t12 = t365 + t392;
t38 = t508 + (-t526 - t527) * t328;
t374 = qJD(1) * t12 + qJD(2) * t38 + qJD(3) * t125;
t373 = t27 * qJD(1);
t72 = t356 * t431 - t359 * t376;
t371 = -qJD(2) * t72 - t346 * t476;
t70 = t356 * t376 + t359 * t431;
t370 = -qJD(2) * t70 - t346 * t475;
t341 = t357 * t478;
t318 = t325 * qJD(4);
t316 = t356 * t324;
t247 = t254 * qJD(6);
t241 = t250 * qJD(4);
t222 = pkin(4) * t380 + t451;
t221 = -t242 - t473;
t217 = t301 * t360;
t137 = (t325 + t545) * t301;
t136 = (-t328 / 0.2e1 + t379) * t301;
t84 = -t184 * t541 + t436;
t83 = (t542 - t543) * t184;
t73 = t561 + t489 / 0.2e1 - t389 * t359;
t71 = t560 - t493 / 0.2e1 + t389 * t356;
t59 = t363 + t486;
t39 = t368 - t393;
t35 = -t424 / 0.2e1 + t330 * t436 + t434 + t503 / 0.2e1;
t34 = t529 / 0.2e1 + t356 * t437 + t433 - t504 / 0.2e1;
t26 = t27 * qJD(4);
t22 = t369 + t391;
t18 = -t513 / 0.2e1 + t362;
t17 = t512 / 0.2e1 + t364;
t13 = qJD(2) * t85 + qJD(4) * t28;
t11 = t365 - t392;
t7 = pkin(4) * t381 + t301 * t451 - t366;
t3 = qJD(2) * t37 + qJD(4) * t8;
t1 = t361 + t557;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t31, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t14 + qJD(4) * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t429, -qJD(2) * t417, 0, 0, 0, 0, 0, 0, 0, 0, -t460, t301 * qJD(2), 0 (-t301 * t355 - t302 * t534) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, t215 * qJD(4) - t360 * t460, qJD(4) * t217 + t357 * t460, qJD(2) * t421, t487 + (t302 * t347 + t345 * t421) * qJD(2), 0, 0, 0, 0, 0, 0, qJD(4) * t137 + t302 * t458, qJD(4) * t136 + t302 * t457 (-t209 * t330 - t210 * t328) * qJD(2) + t26 (t210 * t553 + t302 * t334 - t515) * qJD(2) + t7 * qJD(4) + t59 * qJD(5) + t403, 0, 0, 0, 0, 0, 0 (t172 * t328 - t209 * t252) * qJD(2) + t17 * qJD(4) + t35 * qJD(6) (-t173 * t328 - t209 * t499) * qJD(2) + t18 * qJD(4) + t34 * qJD(6), t22 * qJD(4) + (-t520 - t521) * t457 (-t149 * t172 + t150 * t173 - t515) * qJD(2) + t1 * qJD(4) + t11 * qJD(5) + t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t215 - qJD(4) * t274, qJD(2) * t217 + qJD(4) * t273, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t137 - qJD(4) * t386, qJD(2) * t136 + qJD(4) * t184, t505, t7 * qJD(2) + (-t184 * t354 - t386 * t533) * t537 + t404, 0, 0, 0, 0, 0, 0, qJD(2) * t17 + qJD(6) * t83 - t386 * t475, qJD(2) * t18 + qJD(6) * t84 + t386 * t476, t22 * qJD(2) - qJD(4) * t422, t1 * qJD(2) + (-t344 * t422 + t346 * t386) * qJD(4) + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35 * qJD(2) + t83 * qJD(4) - qJD(6) * t485, qJD(2) * t34 + qJD(4) * t84 + qJD(6) * t123, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, 0, 0, 0, 0, 0, 0, -t134 * qJD(4), -t135 * qJD(4), t26, -qJD(4) * t6 - qJD(5) * t58 - t403, 0, 0, 0, 0, 0, 0, qJD(4) * t16 - qJD(6) * t32, qJD(4) * t19 - qJD(6) * t33, qJD(4) * t23, qJD(4) * t2 + qJD(5) * t12 - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, t340 * qJD(4), 0, -t441, 0, 0, t347 * t455, t347 * t454, 0, 0, -t445, -t452 * qJD(4), 0, t445, 0, 0, t224 * qJD(4), t225 * qJD(4), -qJD(5) * t554, qJD(4) * t74 + qJD(5) * t107, -t352 * t445 - t418, -qJD(6) * t263 + t328 * t414, qJD(4) * t213 - t328 * t448, -t350 * t445 + t418, -qJD(4) * t211 - t328 * t447, t445, qJD(4) * t29 - qJD(5) * t212 + qJD(6) * t79, qJD(4) * t30 - qJD(5) * t264 + qJD(6) * t78, -t21 * qJD(4), qJD(4) * t20 + qJD(5) * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530 + t536, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453 - t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341, t456, t454, -t341, -t455, 0, -t345 * t454 + t444, t345 * t455 + t443, 0, 0, -t446, -t468, -t323, t446, -t324, 0, -qJD(4) * t553 + t398, qJD(4) * t236 + t397 (t328 * t533 - t330 * t354) * t537 + t373 (-t236 * t354 - t533 * t553) * t537 + t222 * qJD(5) + t382, -t467 + (-t352 * t457 - t449) * t328 (t319 - t320) * qJD(4) + (-qJD(6) + t458) * t420, t316 + t479, t467 + (-t350 * t457 + t449) * t328, t317 - t481, t387 (t356 * t401 - t509) * qJD(4) + t73 * qJD(6) + t410 (t359 * t401 + t510) * qJD(4) + t71 * qJD(6) + t375, qJD(4) * t402 + t409 (t344 * t402 + t346 * t553) * qJD(4) + t39 * qJD(5) + t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461, qJD(4) * t222 + t400, 0, 0, 0, 0, 0, 0, -t480, -t462, 0, qJD(4) * t39 + t374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, -t385, t419 * t252, t192, t388, t318, qJD(4) * t73 - qJD(6) * t150 - t407, qJD(4) * t71 + qJD(6) * t149 + t406, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530 + t536, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453 + t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -t454, 0, 0, 0, 0, 0, 0, 0, 0, -t324, t323, 0 (-t428 - t501) * t537 - t408, 0, 0, 0, 0, 0, 0, t555, t247 + t316, -t463 (-t483 * t498 + t500) * qJD(4) + t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241 - t447, t448 + t477, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134 * qJD(2), t135 * qJD(2), -t505, qJD(2) * t6 - t404, 0, 0, 0, 0, 0, 0, -qJD(2) * t16, -qJD(2) * t19, -qJD(2) * t23, -qJD(2) * t2 - t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341, -t456, 0, t341, 0, 0, -t444, -t443, 0, 0, t446, t468, 0, -t446, 0, 0, -qJD(5) * t330 - t398, qJD(5) * t328 - t397, -t373, qJD(5) * t223 - t382, t352 * t446 - t467, 0.2e1 * t356 * t388, t247 - t479, t350 * t446 + t467, -t243 + t481, -t387, qJD(6) * t72 - t330 * t474 - t410, qJD(5) * t252 + qJD(6) * t70 - t375, -qJD(5) * t262 - t409, qJD(5) * t40 - t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t442, t339 * qJD(6), 0, -t442, 0, 0, t346 * t473, t346 * t472, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t457, t458, 0, t469, 0, 0, 0, 0, 0, 0, -t440, t466, -t464, t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, -t384, t465 + t472, -t219, t221, -t459, -t344 * t472 - t371, t344 * t473 - t370, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, -t323, t461, -qJD(4) * t223 - t400, 0, 0, 0, 0, 0, 0, t480 - t555, -qJD(4) * t252 - t328 * t472 + t462, t463, -qJD(4) * t40 - t374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t457, -t458, 0, -t469, 0, 0, 0, 0, 0, 0, t440, -t466, t464, -t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, t399, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32, qJD(2) * t33, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t385, t356 * t446 - t477, -t192, t328 * t440 + t241, t318, -qJD(4) * t72 + qJD(5) * t250 + t407, -qJD(4) * t70 + t328 * t474 - t406, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, t384, -t465, t219, t242, t459, t371, t370, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, t359 * t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
