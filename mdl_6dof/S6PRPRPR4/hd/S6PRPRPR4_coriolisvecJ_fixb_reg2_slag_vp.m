% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRPR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:41:18
% EndTime: 2019-03-08 19:41:30
% DurationCPUTime: 5.13s
% Computational Cost: add. (7070->394), mult. (18479->549), div. (0->0), fcn. (15115->12), ass. (0->201)
t172 = sin(pkin(12));
t175 = cos(pkin(12));
t173 = sin(pkin(11));
t176 = cos(pkin(11));
t179 = sin(qJ(4));
t269 = cos(qJ(4));
t149 = t269 * t173 + t179 * t176;
t221 = qJD(2) * t149;
t116 = t172 * qJD(4) + t175 * t221;
t178 = sin(qJ(6));
t181 = cos(qJ(6));
t235 = t172 * t221;
t290 = t175 * qJD(4) - t235;
t195 = t181 * t290;
t69 = -t178 * t116 + t195;
t295 = t69 ^ 2;
t215 = t269 * t176;
t160 = qJD(2) * t215;
t228 = t179 * t173;
t208 = qJD(2) * t228;
t135 = -t160 + t208;
t131 = qJD(6) + t135;
t294 = t69 * t131;
t68 = t181 * t116 + t178 * t290;
t293 = t68 ^ 2;
t191 = t215 - t228;
t174 = sin(pkin(6));
t182 = cos(qJ(2));
t233 = t174 * t182;
t186 = t191 * t233;
t265 = pkin(8) + qJ(3);
t153 = t265 * t173;
t155 = t265 * t176;
t279 = -t269 * t153 - t179 * t155;
t253 = qJD(1) * t186 - t191 * qJD(3) - t279 * qJD(4);
t207 = qJD(4) * t269;
t141 = qJD(4) * t228 - t176 * t207;
t142 = t149 * qJD(4);
t180 = sin(qJ(2));
t224 = qJD(1) * t174;
t210 = t180 * t224;
t292 = t142 * pkin(4) + t141 * qJ(5) - t149 * qJD(5) - t210;
t157 = qJD(4) * t160;
t128 = qJD(4) * t208 - t157;
t231 = t175 * t128;
t291 = t135 * t290 - t231;
t262 = t172 * t253 + t292 * t175;
t261 = t292 * t172 - t175 * t253;
t227 = t181 * t175;
t277 = -t178 * t172 + t227;
t240 = t141 * t175;
t289 = t142 * pkin(5) + pkin(9) * t240 + t262;
t241 = t141 * t172;
t288 = pkin(9) * t241 + t261;
t278 = t277 * qJD(6);
t250 = -t135 * t277 - t278;
t148 = t181 * t172 + t178 * t175;
t140 = t148 * qJD(6);
t249 = t148 * t135 + t140;
t237 = t172 * t128;
t285 = t116 * t135 - t237;
t112 = -t179 * t153 + t269 * t155;
t187 = t149 * t233;
t248 = -qJD(1) * t187 + qJD(3) * t149 + qJD(4) * t112;
t284 = t128 * t148;
t222 = qJD(1) * t182;
t209 = t174 * t222;
t145 = (qJD(3) + t209) * qJD(2);
t283 = t145 * t149;
t151 = qJD(2) * qJ(3) + t210;
t177 = cos(pkin(6));
t223 = qJD(1) * t177;
t120 = t176 * t151 + t173 * t223;
t159 = t176 * t223;
t197 = (-t173 * t151 + t159) * t173 - t120 * t176;
t282 = t197 * t182;
t281 = t290 * t221;
t129 = qJD(2) * t142;
t102 = t129 * t191;
t280 = t135 * t142 - t102;
t202 = qJD(3) - t209;
t34 = t178 * (qJD(6) * t116 - t237) - qJD(6) * t195 + t128 * t227;
t276 = -t249 * t68 - t277 * t34;
t275 = t148 * t129 - t250 * t131;
t132 = t135 ^ 2;
t274 = -t172 * t129 - t175 * t132;
t260 = pkin(8) * qJD(2);
t107 = t176 * t260 + t120;
t101 = t179 * t107;
t106 = t159 + (-t151 - t260) * t173;
t251 = t106 * t207 + t145 * t215;
t193 = -t145 * t228 + t251;
t31 = (qJD(5) - t101) * qJD(4) + t193;
t156 = qJD(2) * t210;
t61 = t129 * pkin(4) + t128 * qJ(5) - qJD(5) * t221 + t156;
t16 = -t172 * t31 + t175 * t61;
t12 = t129 * pkin(5) + pkin(9) * t231 + t16;
t17 = t172 * t61 + t175 * t31;
t13 = pkin(9) * t237 + t17;
t63 = t179 * t106 + t269 * t107;
t58 = qJD(4) * qJ(5) + t63;
t166 = -t176 * pkin(3) - pkin(2);
t220 = qJD(2) * t166;
t130 = t202 + t220;
t74 = t135 * pkin(4) - qJ(5) * t221 + t130;
t22 = -t172 * t58 + t175 * t74;
t18 = t135 * pkin(5) - t116 * pkin(9) + t22;
t23 = t172 * t74 + t175 * t58;
t19 = pkin(9) * t290 + t23;
t199 = t178 * t19 - t181 * t18;
t1 = -t199 * qJD(6) + t178 * t12 + t181 * t13;
t273 = t221 ^ 2;
t268 = pkin(9) * t175;
t97 = -pkin(4) * t191 - t149 * qJ(5) + t166;
t55 = -t172 * t112 + t175 * t97;
t40 = -pkin(5) * t191 - t149 * t268 + t55;
t238 = t149 * t172;
t56 = t175 * t112 + t172 * t97;
t44 = -pkin(9) * t238 + t56;
t14 = -t178 * t44 + t181 * t40;
t272 = t14 * qJD(6) + t178 * t289 + t288 * t181;
t15 = t178 * t40 + t181 * t44;
t271 = -t15 * qJD(6) - t288 * t178 + t181 * t289;
t264 = pkin(9) + qJ(5);
t152 = t264 * t172;
t154 = t264 * t175;
t111 = -t178 * t152 + t181 * t154;
t62 = t269 * t106 - t101;
t96 = pkin(4) * t221 + t135 * qJ(5);
t32 = -t172 * t62 + t175 * t96;
t20 = pkin(5) * t221 + t135 * t268 + t32;
t242 = t135 * t172;
t33 = t172 * t96 + t175 * t62;
t25 = pkin(9) * t242 + t33;
t270 = -qJD(5) * t148 - qJD(6) * t111 + t178 * t25 - t181 * t20;
t234 = t174 * t180;
t133 = -t173 * t234 + t177 * t176;
t134 = t177 * t173 + t176 * t234;
t192 = t269 * t133 - t179 * t134;
t37 = t63 * qJD(4) + t283;
t267 = t37 * t192;
t266 = t68 * t69;
t109 = -t181 * t152 - t178 * t154;
t263 = -qJD(5) * t277 - qJD(6) * t109 + t178 * t20 + t181 * t25;
t259 = qJD(2) * pkin(2);
t258 = t221 * t69;
t256 = t37 * t279;
t255 = t68 * t221;
t254 = -pkin(5) * t241 + t248;
t252 = t175 * t129 - t172 * t132;
t247 = t116 * t221;
t246 = t116 * t172;
t245 = t128 * t149;
t244 = t135 * t221;
t183 = qJD(2) ^ 2;
t232 = t174 * t183;
t225 = t173 ^ 2 + t176 ^ 2;
t219 = qJD(2) * t180;
t217 = t180 * t232;
t216 = t182 * t232;
t214 = t174 ^ 2 * t222;
t213 = t174 * t219;
t206 = t225 * t145;
t35 = qJD(6) * t68 - t284;
t204 = -t148 * t35 - t250 * t69;
t203 = t129 * t277 - t131 * t249;
t200 = -t172 * t22 + t175 * t23;
t6 = t178 * t18 + t181 * t19;
t89 = t179 * t133 + t269 * t134;
t75 = -t172 * t89 - t175 * t233;
t76 = -t172 * t233 + t175 * t89;
t29 = -t178 * t76 + t181 * t75;
t30 = t178 * t75 + t181 * t76;
t198 = t128 * t279 + t37 * t149;
t196 = t175 * t290;
t54 = -qJD(4) * pkin(4) + qJD(5) - t62;
t190 = -t54 * t141 + t198;
t189 = -t128 * t191 - t149 * t129 + t141 * t135;
t188 = t196 - t246;
t185 = pkin(4) * t128 - qJ(5) * t129 + (-qJD(5) + t54) * t135;
t2 = -t6 * qJD(6) + t181 * t12 - t178 * t13;
t24 = -pkin(5) * t237 + t37;
t170 = t175 ^ 2;
t167 = t172 ^ 2;
t165 = -t175 * pkin(5) - pkin(4);
t150 = t202 - t259;
t93 = t277 * t149;
t92 = t148 * t149;
t83 = pkin(5) * t238 - t279;
t60 = qJD(2) * t187 + qJD(4) * t89;
t59 = qJD(2) * t186 + qJD(4) * t192;
t49 = t172 * t213 + t175 * t59;
t48 = -t172 * t59 + t175 * t213;
t47 = -t141 * t148 + t278 * t149;
t46 = t140 * t149 + t277 * t141;
t45 = -pkin(5) * t242 + t63;
t41 = -pkin(5) * t290 + t54;
t36 = (-qJD(4) * t107 - t145 * t173) * t179 + t251;
t8 = -qJD(6) * t30 - t178 * t49 + t181 * t48;
t7 = t29 * qJD(6) + t178 * t48 + t181 * t49;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, -t216, 0, 0, 0, 0, 0, 0, 0, 0, -t176 * t217, t173 * t217, t225 * t216 (-t133 * t173 + t134 * t176) * t145 + (-t180 * t214 + (t150 * t180 - t282) * t174) * qJD(2), 0, 0, 0, 0, 0, 0, -t60 * qJD(4) + (-t129 * t182 + t135 * t219) * t174, -t59 * qJD(4) + (t128 * t182 + t219 * t221) * t174, t128 * t192 - t89 * t129 - t59 * t135 + t221 * t60, t36 * t89 - t267 + t63 * t59 - t62 * t60 + (t130 * t174 - t214) * t219, 0, 0, 0, 0, 0, 0, t75 * t129 + t48 * t135 + t192 * t237 - t290 * t60, t60 * t116 - t76 * t129 - t49 * t135 + t192 * t231, t49 * t290 - t48 * t116 + (t76 * t172 + t75 * t175) * t128, t16 * t75 + t17 * t76 + t22 * t48 + t23 * t49 + t54 * t60 - t267, 0, 0, 0, 0, 0, 0, t29 * t129 + t8 * t131 - t192 * t35 - t60 * t69, -t30 * t129 - t7 * t131 + t192 * t34 + t60 * t68, t29 * t34 - t30 * t35 - t8 * t68 + t69 * t7, t1 * t30 - t192 * t24 - t199 * t8 + t2 * t29 + t41 * t60 + t6 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202 * qJD(2) * t225 + t206, -t197 * qJD(3) + qJ(3) * t206 + (t282 + (-t150 - t259) * t180) * t224, -t141 * t221 - t245, -t142 * t221 + t189, -t141 * qJD(4), t280, -t142 * qJD(4), 0, t166 * t129 + t130 * t142 - t248 * qJD(4) + (-qJD(2) * t191 - t135) * t210, t253 * qJD(4) - t166 * t128 - t130 * t141, -t112 * t129 + t253 * t135 + t62 * t141 - t63 * t142 + t191 * t36 + t221 * t248 + t198, -t256 + t36 * t112 - t253 * t63 - t248 * t62 + (-t130 + t220) * t210, -t116 * t240 - t170 * t245, -t141 * t188 + 0.2e1 * t231 * t238, t116 * t142 - t189 * t175, -t167 * t245 + t241 * t290, t142 * t290 + t189 * t172, t280, t55 * t129 + t262 * t135 + t22 * t142 - t16 * t191 + t190 * t172 - t248 * t290, t248 * t116 - t56 * t129 - t261 * t135 - t23 * t142 + t17 * t191 + t190 * t175, -t261 * t235 - t262 * t116 + (t261 * qJD(4) + t55 * t128 + t22 * t141 - t16 * t149) * t175 + (t56 * t128 + t23 * t141 - t17 * t149) * t172, t16 * t55 + t17 * t56 + t262 * t22 + t261 * t23 + t248 * t54 - t256, -t34 * t93 - t68 * t46, t34 * t92 - t93 * t35 - t46 * t69 - t68 * t47, t93 * t129 - t46 * t131 + t68 * t142 + t191 * t34, t35 * t92 - t47 * t69, -t92 * t129 - t47 * t131 + t142 * t69 + t191 * t35, t131 * t142 - t102, t14 * t129 + t271 * t131 - t142 * t199 - t191 * t2 + t24 * t92 - t254 * t69 + t83 * t35 + t41 * t47, t1 * t191 - t15 * t129 - t272 * t131 - t6 * t142 + t24 * t93 + t254 * t68 - t83 * t34 - t41 * t46, -t1 * t92 + t14 * t34 - t15 * t35 - t199 * t46 - t2 * t93 - t271 * t68 + t272 * t69 - t6 * t47, t1 * t15 + t2 * t14 - t199 * t271 + t24 * t83 + t254 * t41 + t272 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t225 * t183, qJD(2) * t197 + t156, 0, 0, 0, 0, 0, 0, 0.2e1 * t221 * qJD(4), t157 + (-t135 - t208) * qJD(4), -t132 - t273, t63 * t135 + t221 * t62 + t156, 0, 0, 0, 0, 0, 0, t252 + t281, -t247 + t274 (t196 + t246) * t135 + (t167 + t170) * t128, t200 * t135 + t16 * t175 + t17 * t172 - t221 * t54, 0, 0, 0, 0, 0, 0, t203 + t258, -t255 - t275, t204 - t276, t1 * t148 + t199 * t249 + t2 * t277 - t221 * t41 - t250 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, -t132 + t273, t157 + (t135 - t208) * qJD(4), -t244, 0, 0, -t130 * t221 - t283, t130 * t135 + (t62 + t101) * qJD(4) - t193, 0, 0, t285 * t175, t188 * t135 + (t167 - t170) * t128, -t247 - t274, -t291 * t172, t252 - t281, -t244, -t32 * t135 + t185 * t172 - t37 * t175 - t22 * t221 + t290 * t63, -t63 * t116 + t33 * t135 + t37 * t172 + t185 * t175 + t221 * t23, t32 * t116 + t33 * t235 + (-qJD(5) * t235 - t22 * t135 + t17 + (t175 * qJD(5) - t33) * qJD(4)) * t175 + (qJD(5) * t116 - t23 * t135 - t16) * t172, -t37 * pkin(4) - t22 * t32 - t23 * t33 - t54 * t63 + t200 * qJD(5) + (-t16 * t172 + t17 * t175) * qJ(5), -t34 * t148 - t250 * t68, t204 + t276, -t255 + t275, -t249 * t69 - t277 * t35, t203 - t258, -t131 * t221, t109 * t129 + t270 * t131 + t165 * t35 + t199 * t221 - t24 * t277 + t249 * t41 + t45 * t69, -t111 * t129 + t263 * t131 + t24 * t148 - t165 * t34 + t221 * t6 - t250 * t41 - t45 * t68, t1 * t277 + t109 * t34 - t111 * t35 - t2 * t148 - t199 * t250 - t249 * t6 - t263 * t69 - t270 * t68, t1 * t111 + t2 * t109 + t24 * t165 - t199 * t270 - t263 * t6 - t41 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t291, -t116 ^ 2 - t290 ^ 2, t116 * t22 - t23 * t290 + t37, 0, 0, 0, 0, 0, 0, t68 * t131 + t35, -t34 + t294, -t293 - t295, -t199 * t68 - t6 * t69 + t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, t293 - t295, -t34 - t294, t266, t284 + (-qJD(6) + t131) * t68, t129, t6 * t131 - t41 * t68 + t2, -t131 * t199 - t41 * t69 - t1, 0, 0;];
tauc_reg  = t3;
