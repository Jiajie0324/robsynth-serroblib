% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRPR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:41:21
% EndTime: 2019-03-08 19:41:34
% DurationCPUTime: 6.62s
% Computational Cost: add. (5526->414), mult. (13365->614), div. (0->0), fcn. (16005->12), ass. (0->340)
t289 = sin(pkin(11));
t481 = cos(qJ(4));
t388 = t481 * t289;
t292 = cos(pkin(11));
t294 = sin(qJ(4));
t435 = t294 * t292;
t260 = t388 + t435;
t290 = sin(pkin(6));
t297 = cos(qJ(2));
t443 = t290 * t297;
t212 = t260 * t443;
t504 = -t212 / 0.2e1;
t375 = t443 / 0.2e1;
t427 = t260 * t375;
t387 = t481 * t292;
t436 = t294 * t289;
t323 = t387 - t436;
t213 = t323 * t443;
t288 = sin(pkin(12));
t291 = cos(pkin(12));
t295 = sin(qJ(2));
t444 = t290 * t295;
t184 = -t288 * t213 + t291 * t444;
t185 = t291 * t213 + t288 * t444;
t496 = t185 * t291 / 0.2e1 - t184 * t288 / 0.2e1;
t503 = pkin(4) * t504 + t496 * qJ(5);
t296 = cos(qJ(6));
t432 = t296 * t288;
t293 = sin(qJ(6));
t438 = t293 * t291;
t259 = t432 + t438;
t130 = t260 * t259;
t406 = t130 * qJD(2);
t431 = t296 * t291;
t371 = t431 / 0.2e1;
t439 = t293 * t288;
t324 = t371 - t439 / 0.2e1;
t501 = t323 * t324;
t318 = t259 * t323;
t395 = t323 * qJD(2);
t500 = t130 * t395;
t253 = t323 ^ 2;
t495 = t260 ^ 2;
t499 = t253 + t495;
t284 = t288 ^ 2;
t286 = t291 ^ 2;
t273 = t284 + t286;
t325 = t438 / 0.2e1 + t432 / 0.2e1;
t484 = t259 / 0.2e1;
t498 = t325 + t484;
t497 = qJD(6) * t130;
t252 = t388 / 0.2e1 + t435 / 0.2e1;
t285 = t289 ^ 2;
t470 = cos(pkin(6));
t315 = -t289 * t444 + t292 * t470;
t310 = t294 * t315;
t369 = t470 * t289;
t246 = t292 * t444 + t369;
t390 = t481 * t246;
t172 = t390 + t310;
t447 = t288 * t172;
t138 = -t291 * t443 - t447;
t494 = t138 / 0.2e1;
t442 = t291 * t172;
t139 = -t288 * t443 + t442;
t493 = -t139 / 0.2e1;
t492 = t139 / 0.2e1;
t490 = t172 / 0.2e1;
t235 = t260 * t439;
t179 = t260 * t431 - t235;
t489 = -t179 / 0.2e1;
t255 = -t431 + t439;
t488 = -t255 / 0.2e1;
t487 = t255 / 0.2e1;
t486 = t323 / 0.2e1;
t485 = -t323 / 0.2e1;
t483 = t260 / 0.2e1;
t282 = -t291 * pkin(5) - pkin(4);
t482 = t282 / 0.2e1;
t479 = t260 * pkin(4);
t478 = pkin(8) + qJ(3);
t477 = pkin(9) + qJ(5);
t469 = qJ(5) * t323;
t197 = -t469 + t479;
t270 = t478 * t289;
t272 = t478 * t292;
t208 = t481 * t270 + t294 * t272;
t446 = t288 * t208;
t113 = t291 * t197 + t446;
t72 = -pkin(9) * t291 * t323 + t260 * pkin(5) + t113;
t476 = t293 * t72;
t195 = t291 * t208;
t114 = t288 * t197 - t195;
t187 = t288 * t323;
t77 = -pkin(9) * t187 + t114;
t475 = t293 * t77;
t474 = t296 * t72;
t473 = t296 * t77;
t283 = -t292 * pkin(3) - pkin(2);
t360 = -pkin(4) * t323 - t260 * qJ(5);
t186 = t283 + t360;
t389 = t481 * t272;
t437 = t294 * t270;
t210 = t389 - t437;
t445 = t288 * t210;
t96 = t291 * t186 - t445;
t472 = t96 * t288;
t196 = t291 * t210;
t97 = t288 * t186 + t196;
t471 = t97 * t291;
t459 = t130 * t260;
t460 = t318 * t323;
t65 = -t459 + t460;
t468 = qJD(2) * t65;
t66 = t459 + t460;
t467 = qJD(2) * t66;
t457 = t179 * t260;
t178 = t255 * t323;
t458 = t178 * t323;
t67 = t457 + t458;
t466 = qJD(2) * t67;
t68 = t457 - t458;
t465 = qJD(2) * t68;
t464 = t113 * t291;
t463 = t114 * t288;
t462 = t138 * t288;
t461 = t139 * t291;
t455 = t184 * t291;
t454 = t185 * t288;
t452 = t212 * t288;
t451 = t212 * t291;
t171 = t294 * t246 - t315 * t481;
t23 = (t172 - t461 + t462) * t171;
t450 = t23 * qJD(1);
t449 = t260 * t255;
t448 = t260 * t291;
t189 = t288 * t260;
t441 = t293 * t184;
t440 = t293 * t185;
t434 = t296 * t184;
t433 = t296 * t185;
t30 = t138 * t184 + t139 * t185 + t171 * t212;
t430 = t30 * qJD(1);
t370 = -t284 / 0.2e1 - t286 / 0.2e1;
t309 = -t370 * t469 - t479 / 0.2e1;
t332 = t464 / 0.2e1 + t463 / 0.2e1;
t36 = t309 - t332;
t429 = t36 * qJD(2);
t45 = t130 * t178 - t179 * t318;
t428 = t45 * qJD(2);
t274 = t292 ^ 2 + t285;
t425 = qJD(2) * t179;
t192 = t499 * t291;
t424 = qJD(2) * t192;
t423 = qJD(2) * t290;
t313 = -t259 / 0.2e1 + t325;
t107 = t313 * t323;
t422 = qJD(4) * t107;
t108 = t498 * t323;
t421 = qJD(4) * t108;
t420 = qJD(4) * t172;
t419 = qJD(4) * t259;
t418 = qJD(4) * t282;
t417 = qJD(4) * t291;
t416 = qJD(5) * t323;
t415 = qJD(6) * t323;
t414 = qJD(6) * t259;
t413 = t107 * qJD(2);
t100 = t108 * qJD(2);
t109 = (t487 - t324) * t323;
t412 = t109 * qJD(2);
t312 = t487 + t324;
t110 = t312 * t323;
t411 = t110 * qJD(2);
t377 = t255 * t486;
t111 = t377 - t501;
t410 = t111 * qJD(2);
t115 = ((-0.1e1 + t285) * t444 + (-t369 + t246) * t292) * t443;
t409 = t115 * qJD(1);
t116 = t273 * t495;
t408 = t116 * qJD(2);
t407 = t449 * qJD(2);
t361 = t370 * t260;
t141 = t361 - t252;
t405 = t141 * qJD(2);
t150 = t499 * t288;
t404 = t150 * qJD(2);
t316 = -t387 / 0.2e1 + t436 / 0.2e1;
t152 = (t486 + t316) * t443;
t402 = t152 * qJD(1);
t170 = t253 - t495;
t401 = t170 * qJD(2);
t400 = t189 * qJD(2);
t191 = t273 * t323;
t399 = t191 * qJD(2);
t398 = t210 * qJD(4);
t397 = t252 * qJD(2);
t396 = t255 * qJD(4);
t248 = t255 * qJD(6);
t249 = t323 * qJD(4);
t394 = t260 * qJD(2);
t393 = t260 * qJD(4);
t392 = t273 * qJD(4);
t391 = t274 * qJD(2);
t386 = t449 * t395;
t384 = t260 * t416;
t383 = t323 * t394;
t382 = t323 * t393;
t381 = t295 * t423;
t380 = t291 * t394;
t379 = t212 * t487;
t378 = t212 * t484;
t376 = t444 / 0.2e1;
t368 = t273 * t171;
t367 = t274 * t297;
t366 = qJD(2) * t283 + qJD(3);
t365 = -qJD(6) + t395;
t364 = qJD(5) + t418;
t362 = t323 * t380;
t155 = pkin(5) * t189 + t208;
t156 = pkin(5) * t187 + t210;
t308 = -pkin(5) * t323 - pkin(9) * t448 + t96;
t73 = -pkin(9) * t189 + t97;
t34 = t293 * t73 - t296 * t308;
t3 = -(t474 - t475) * t323 - t34 * t260 + t156 * t130 + t155 * t318;
t343 = t296 * t138 - t293 * t139;
t303 = -t130 * t490 - t343 * t260 / 0.2e1;
t5 = t379 + t303;
t359 = -t5 * qJD(1) + t3 * qJD(2);
t35 = t293 * t308 + t296 * t73;
t4 = (t473 + t476) * t323 - t35 * t260 + t156 * t179 - t155 * t178;
t342 = t293 * t138 + t296 * t139;
t302 = t172 * t489 + t342 * t483;
t6 = t378 + t302;
t358 = -t6 * qJD(1) + t4 * qJD(2);
t357 = -t288 * t97 - t291 * t96;
t14 = t113 * t96 + t114 * t97 + t208 * t210;
t335 = t472 / 0.2e1 - t471 / 0.2e1;
t298 = (t210 / 0.2e1 + t335) * t171 + t113 * t494 + t114 * t492 + t208 * t490;
t2 = t298 - t503;
t356 = t2 * qJD(1) + t14 * qJD(2);
t331 = t288 * t492 + t291 * t494;
t314 = t331 * t323;
t32 = -t314 - t496;
t9 = (t463 + t464) * t260 - t357 * t323;
t355 = t32 * qJD(1) - t9 * qJD(2);
t269 = t477 * t288;
t271 = t477 * t291;
t209 = -t293 * t269 + t296 * t271;
t306 = t155 * t484 + t179 * t482 + t209 * t486;
t336 = -t475 / 0.2e1 + t474 / 0.2e1;
t10 = -t306 + t336;
t48 = t313 * t171;
t353 = t48 * qJD(1) + t10 * qJD(2);
t207 = t296 * t269 + t293 * t271;
t307 = -t130 * t482 + t155 * t488 + t207 * t485;
t337 = -t476 / 0.2e1 - t473 / 0.2e1;
t11 = -t307 + t337;
t49 = t312 * t171;
t352 = t49 * qJD(1) + t11 * qJD(2);
t15 = -t130 * t155 - t323 * t34;
t305 = t130 * t171 / 0.2e1 + t343 * t485;
t327 = -t441 / 0.2e1 - t433 / 0.2e1;
t18 = t305 + t327;
t351 = qJD(1) * t18 - qJD(2) * t15;
t16 = t155 * t179 + t323 * t35;
t304 = t171 * t489 + t342 * t485;
t326 = -t440 / 0.2e1 + t434 / 0.2e1;
t17 = t304 + t326;
t350 = qJD(1) * t17 - qJD(2) * t16;
t330 = -t461 / 0.2e1 + t462 / 0.2e1;
t301 = t171 * t483 - t323 * t330;
t329 = -t455 / 0.2e1 - t454 / 0.2e1;
t22 = t301 + t329;
t33 = t208 * t260 - (-t471 + t472) * t323;
t349 = qJD(1) * t22 + qJD(2) * t33;
t334 = (t494 + t447 / 0.2e1) * t260;
t24 = t451 / 0.2e1 + t334;
t28 = (t96 + t445) * t260 - (t113 - t446) * t323;
t348 = t24 * qJD(1) + t28 * qJD(2);
t333 = (t493 + t442 / 0.2e1) * t260;
t27 = -t452 / 0.2e1 + t333;
t29 = (-t97 + t196) * t260 - (-t114 - t195) * t323;
t347 = t27 * qJD(1) + t29 * qJD(2);
t40 = t357 * t260;
t41 = t260 * t331 + t427;
t346 = -qJD(1) * t41 + qJD(2) * t40;
t44 = t130 * t255 - t259 * t179;
t58 = t130 ^ 2 - t179 ^ 2;
t345 = qJD(2) * t58 + qJD(4) * t44;
t344 = -t113 * t288 + t114 * t291;
t169 = t255 ^ 2 - t259 ^ 2;
t341 = qJD(2) * t44 + qJD(4) * t169;
t340 = -t396 - t406;
t84 = t235 / 0.2e1 + (t439 / 0.2e1 - t431) * t260;
t339 = qJD(2) * t84 - t419;
t300 = t246 * t292 / 0.2e1 - t315 * t289 / 0.2e1;
t142 = t376 - t300;
t268 = t274 * qJ(3);
t338 = t142 * qJD(1) - t268 * qJD(2);
t62 = -t130 * t484 + t179 * t488;
t322 = qJD(4) * t62 - t130 * t425;
t321 = -qJD(2) * t62 + t259 * t396;
t320 = qJD(6) * t252 - t383;
t317 = -t437 / 0.2e1 + t389 / 0.2e1;
t267 = t273 * qJ(5);
t38 = t317 + t335;
t299 = t310 / 0.2e1 + t390 / 0.2e1;
t46 = t299 + t330;
t311 = t46 * qJD(1) + t38 * qJD(2) - t267 * qJD(4);
t245 = t252 * qJD(4);
t154 = t504 - t427;
t153 = t316 * t443 - t323 * t375;
t143 = t376 + t300;
t140 = t361 + t252;
t112 = t377 + t501;
t102 = t107 * qJD(6);
t101 = t108 * qJD(6);
t87 = -t235 / 0.2e1 + (t371 - t324) * t260;
t76 = t100 - t414;
t61 = t62 * qJD(6);
t51 = t498 * t171;
t50 = (t324 + t488) * t171;
t47 = t299 - t330;
t43 = t44 * qJD(6);
t42 = t189 * t493 - t138 * t448 / 0.2e1 + t427;
t39 = t317 - t335;
t37 = t309 + t332;
t31 = -t314 + t496;
t26 = t452 / 0.2e1 + t333;
t25 = -t451 / 0.2e1 + t334;
t21 = t301 - t329;
t20 = -t304 + t326;
t19 = -t305 + t327;
t13 = t306 + t336;
t12 = t307 + t337;
t8 = t378 - t302;
t7 = -t303 + t379;
t1 = t298 + t503;
t52 = [0, 0, 0, 0, 0, 0, 0, t115 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t30 + qJD(4) * t23, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t381, -t297 * t423, -t292 * t381, t289 * t381, t367 * t423, t409 + t143 * qJD(3) + (-pkin(2) * t295 + qJ(3) * t367) * t423, 0, 0, 0, 0, 0, t154 * qJD(4) - t323 * t381, t153 * qJD(4) + t260 * t381 (-t184 * t323 + t189 * t212) * qJD(2) + t25 * qJD(4) (t185 * t323 + t212 * t448) * qJD(2) + t26 * qJD(4), t31 * qJD(4) + (-t454 - t455) * t394, t430 + (t184 * t96 + t185 * t97 + t208 * t212) * qJD(2) + t21 * qJD(3) + t1 * qJD(4) + t42 * qJD(5), 0, 0, 0, 0, 0 (-(t434 - t440) * t323 + t212 * t130) * qJD(2) + t7 * qJD(4) + t20 * qJD(6) ((t433 + t441) * t323 + t212 * t179) * qJD(2) + t8 * qJD(4) + t19 * qJD(6); 0, 0, 0, 0, 0, 0, 0, t143 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t154 - t420, qJD(2) * t153 + qJD(4) * t171, t25 * qJD(2) - t172 * t417, t26 * qJD(2) + t288 * t420, t31 * qJD(2) - qJD(4) * t368, t450 + t1 * qJD(2) + (-t172 * pkin(4) - qJ(5) * t368) * qJD(4) + t47 * qJD(5), 0, 0, 0, 0, 0, qJD(2) * t7 + qJD(6) * t51 + t172 * t396, qJD(2) * t8 + qJD(6) * t50 + t172 * t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t42 + qJD(4) * t47, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20 * qJD(2) + t51 * qJD(4) - qJD(6) * t342, t19 * qJD(2) + t50 * qJD(4) - qJD(6) * t343; 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t142 - t409, 0, 0, 0, 0, 0, 0, -t152 * qJD(4), t24 * qJD(4), t27 * qJD(4), t32 * qJD(4), qJD(3) * t22 + qJD(4) * t2 - qJD(5) * t41 - t430, 0, 0, 0, 0, 0, -qJD(4) * t5 - qJD(6) * t17, -qJD(4) * t6 - qJD(6) * t18; 0, 0, 0, 0, 0, 0, t274 * qJD(3), t268 * qJD(3), t382, t170 * qJD(4), 0, 0, 0, t283 * t393, t283 * t249, t150 * qJD(3) + t28 * qJD(4) + t291 * t384, t192 * qJD(3) + t29 * qJD(4) - t288 * t384, -qJD(4) * t9 + qJD(5) * t116, qJD(3) * t33 + qJD(4) * t14 + qJD(5) * t40 (-qJD(4) * t178 - t497) * t179, qJD(4) * t45 + qJD(6) * t58, qJD(4) * t67 + t130 * t415, qJD(4) * t65 + t179 * t415, -t382, qJD(3) * t66 + qJD(4) * t3 + qJD(6) * t16 - t416 * t449, qJD(3) * t68 + qJD(4) * t4 + qJD(6) * t15 - t130 * t416; 0, 0, 0, 0, 0, 0, t391, -t338, 0, 0, 0, 0, 0, 0, 0, t404, t424, 0, qJD(4) * t37 + qJD(5) * t140 + t349, 0, 0, 0, 0, 0, -t102 + t467, -qJD(6) * t110 + t465; 0, 0, 0, 0, 0, 0, 0, 0, t383, t401, t249, -t393, 0, t283 * t394 - t398, t208 * qJD(4) + t283 * t395 - t402 (t288 * t360 - t196) * qJD(4) + t187 * qJD(5) + t348, t288 * t398 + (qJD(4) * t360 + t416) * t291 + t347, qJD(4) * t344 + t355, t37 * qJD(3) + (-t210 * pkin(4) + qJ(5) * t344) * qJD(4) + t39 * qJD(5) + t356, t61 - (t419 + t425) * t178, t428 + (t178 * t255 - t259 * t318) * qJD(4) + t43, qJD(6) * t112 + t259 * t393 + t466, -t255 * t393 - t102 + t468, t320 (t156 * t255 - t207 * t260 + t282 * t318) * qJD(4) + t108 * qJD(5) + t13 * qJD(6) + t359 (t156 * t259 - t282 * t178 - t209 * t260) * qJD(4) - t111 * qJD(5) + t12 * qJD(6) + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187 * qJD(4) + t362 -(t288 * t394 - t417) * t323, t408, qJD(3) * t140 + qJD(4) * t39 + t346, 0, 0, 0, 0, 0, qJD(6) * t87 - t386 + t421, -qJD(4) * t111 - t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322, t345, qJD(4) * t112 + t130 * t365, t179 * t365 - t422, t245, -qJD(3) * t107 + qJD(4) * t13 + qJD(5) * t87 - qJD(6) * t35 - t350, -qJD(3) * t110 + qJD(4) * t12 + qJD(6) * t34 - t351; 0, 0, 0, 0, 0, 0, 0, t142 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -t391, t338, 0, 0, 0, 0, 0, t393, t249, t291 * t393 - t404, -qJD(4) * t189 - t424, -t191 * qJD(4), -qJD(4) * t36 + qJD(5) * t141 - t349, 0, 0, 0, 0, 0, -qJD(4) * t449 + t101 - t467, -qJD(4) * t130 - qJD(6) * t111 - t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t394, t395, t380, -t400, -t399, -t429, 0, 0, 0, 0, 0, -t407, -t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, t248 - t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152 * qJD(2), -t24 * qJD(2), -t27 * qJD(2), -t32 * qJD(2), -qJD(2) * t2 - qJD(5) * t46 - t450, 0, 0, 0, 0, 0, qJD(2) * t5 - qJD(6) * t48, qJD(2) * t6 - qJD(6) * t49; 0, 0, 0, 0, 0, 0, 0, 0, -t383, -t401, 0, 0, 0, -t260 * t366, -t323 * t366 + t402, -qJD(3) * t448 - t348, qJD(3) * t189 - t347, qJD(3) * t191 - t355, qJD(3) * t36 - qJD(5) * t38 - t356, t178 * t425 + t61, t43 - t428, qJD(6) * t109 - t466, t101 - t468, -t320, qJD(3) * t449 - qJD(5) * t107 - qJD(6) * t10 - t359, qJD(3) * t130 - qJD(5) * t110 - qJD(6) * t11 - t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, -t395, -t380, t400, t399, t429, 0, 0, 0, 0, 0, t407, t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273 * qJD(5), t267 * qJD(5), -t259 * t248, t169 * qJD(6), 0, 0, 0, t282 * t414, -t282 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, -t311, 0, 0, 0, 0, 0, -t413, -t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, t341, -t248 + t412, t76, -t397, -t209 * qJD(6) + t259 * t418 - t353, t207 * qJD(6) - t282 * t396 - t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(4) * t46, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, t288 * t383, -t408, -qJD(3) * t141 + qJD(4) * t38 - t346, 0, 0, 0, 0, 0, -qJD(6) * t84 + t386 + t422, qJD(4) * t110 - t497 + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t392, t311, 0, 0, 0, 0, 0, t413 + t414, -t248 + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339, t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t17 + qJD(4) * t48, qJD(2) * t18 + qJD(4) * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, -t345, -qJD(4) * t109 - t500, -t179 * t395 - t421, t245, -qJD(3) * t108 + qJD(4) * t10 + qJD(5) * t84 + t350, qJD(3) * t111 + qJD(4) * t11 + qJD(5) * t130 + t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100, t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, -t341, -t412, -t100, t397, -t259 * t364 + t353, t255 * t364 + t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339, -t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t52;
