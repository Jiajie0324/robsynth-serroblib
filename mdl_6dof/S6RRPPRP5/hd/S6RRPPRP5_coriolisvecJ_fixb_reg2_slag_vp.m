% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:43:57
% EndTime: 2019-03-09 08:44:10
% DurationCPUTime: 4.45s
% Computational Cost: add. (5916->415), mult. (13613->541), div. (0->0), fcn. (8742->6), ass. (0->231)
t195 = sin(qJ(2));
t275 = qJD(1) * t195;
t172 = qJD(5) + t275;
t191 = sin(pkin(9));
t192 = cos(pkin(9));
t194 = sin(qJ(5));
t309 = cos(qJ(5));
t210 = -t309 * t191 - t194 * t192;
t123 = t210 * qJD(5);
t205 = t195 * t210;
t321 = qJD(1) * t205 + t123;
t326 = t172 * t321;
t196 = cos(qJ(2));
t274 = qJD(1) * t196;
t254 = t192 * t274;
t269 = t191 * qJD(2);
t133 = -t254 - t269;
t255 = t191 * t274;
t273 = qJD(2) * t192;
t134 = -t255 + t273;
t212 = t194 * t133 + t309 * t134;
t265 = qJD(1) * qJD(2);
t175 = t196 * t265;
t253 = qJD(5) * t309;
t270 = qJD(5) * t194;
t124 = -t191 * t270 + t192 * t253;
t259 = t192 * t275;
t260 = t191 * t275;
t278 = t194 * t260 - t309 * t259 - t124;
t249 = t278 * t172;
t234 = -t210 * t175 - t249;
t325 = qJD(2) * t212 + t234;
t272 = qJD(2) * t195;
t239 = t309 * t272;
t219 = qJD(1) * t239;
t252 = t195 * t265;
t236 = t194 * t252;
t50 = qJD(5) * t212 + t191 * t236 - t192 * t219;
t79 = -t309 * t133 + t134 * t194;
t209 = -t50 * t210 - t278 * t79;
t324 = t79 ^ 2;
t310 = pkin(3) + pkin(7);
t323 = t172 * t79;
t176 = pkin(7) * t275;
t320 = qJD(3) + t176;
t311 = t212 ^ 2;
t319 = -0.2e1 * t265;
t137 = -t194 * t191 + t309 * t192;
t286 = t191 * t195;
t218 = pkin(4) * t196 - pkin(8) * t286;
t180 = pkin(2) * t275;
t222 = -qJ(3) * t196 + qJ(4) * t195;
t116 = qJD(1) * t222 + t180;
t177 = pkin(7) * t274;
t178 = pkin(3) * t274;
t143 = t177 + t178;
t74 = -t191 * t116 + t192 * t143;
t56 = qJD(1) * t218 + t74;
t75 = t192 * t116 + t191 * t143;
t66 = pkin(8) * t259 + t75;
t193 = -pkin(2) - qJ(4);
t306 = -pkin(8) + t193;
t145 = t306 * t191;
t146 = t306 * t192;
t89 = t309 * t145 + t194 * t146;
t303 = t137 * qJD(4) + qJD(5) * t89 - t194 * t66 + t309 * t56;
t295 = t212 * t172;
t318 = t50 - t295;
t262 = -pkin(4) * t192 - pkin(3);
t267 = -t262 * t275 + t320;
t188 = qJD(2) * qJ(3);
t317 = qJD(4) + t188;
t121 = t143 + t317;
t271 = qJD(2) * t196;
t316 = t195 * (-t121 + t317) - t193 * t271;
t49 = -t133 * t253 + t134 * t270 - t191 * t219 - t192 * t236;
t10 = -t137 * t49 + t212 * t321;
t111 = t137 * t196;
t71 = -t194 * t195 * t269 - t123 * t196 + t192 * t239;
t315 = t71 * t172 - t195 * t50 + (-qJD(1) * t111 - t79) * t271;
t251 = -t195 * qJ(3) - pkin(1);
t132 = t193 * t196 + t251;
t160 = t310 * t195;
t139 = t192 * t160;
t68 = t195 * pkin(4) + t139 + (pkin(8) * t196 - t132) * t191;
t284 = t192 * t196;
t85 = t192 * t132 + t191 * t160;
t72 = -pkin(8) * t284 + t85;
t300 = t194 * t68 + t309 * t72;
t206 = t218 * qJD(2);
t144 = t310 * t271;
t179 = pkin(2) * t272;
t268 = t195 * qJD(3);
t201 = qJD(2) * t222 - t196 * qJD(4) - t268;
t91 = t179 + t201;
t64 = t192 * t144 - t191 * t91;
t46 = t206 + t64;
t242 = pkin(8) * t192 * t272;
t65 = t191 * t144 + t192 * t91;
t53 = t242 + t65;
t8 = -qJD(5) * t300 - t194 * t53 + t309 * t46;
t170 = pkin(7) * t175;
t115 = t170 + (-qJD(4) + t178) * qJD(2);
t171 = pkin(2) * t252;
t77 = qJD(1) * t201 + t171;
t47 = t192 * t115 - t191 * t77;
t33 = qJD(1) * t206 + t47;
t48 = t191 * t115 + t192 * t77;
t40 = qJD(1) * t242 + t48;
t102 = t132 * qJD(1);
t266 = pkin(3) * t275 + t320;
t108 = t193 * qJD(2) + t266;
t61 = -t102 * t191 + t192 * t108;
t41 = pkin(4) * t275 - pkin(8) * t134 + t61;
t62 = t192 * t102 + t191 * t108;
t45 = pkin(8) * t133 + t62;
t213 = -t194 * t33 - t41 * t253 + t270 * t45 - t309 * t40;
t237 = qJ(6) * t175;
t1 = qJD(6) * t172 - t213 + t237;
t15 = -t194 * t45 + t309 * t41;
t279 = qJD(6) - t15;
t13 = -t172 * pkin(5) + t279;
t16 = t194 * t41 + t309 * t45;
t14 = t172 * qJ(6) + t16;
t241 = pkin(5) * t175;
t250 = t194 * t40 + t45 * t253 + t41 * t270 - t309 * t33;
t2 = -t241 + t250;
t314 = -t1 * t210 - t13 * t321 - t137 * t2 - t278 * t14;
t313 = -t137 * t250 + t15 * t321 - t278 * t16 + t210 * t213;
t312 = -t137 * t50 - t210 * t49 + t212 * t278 - t321 * t79;
t86 = -pkin(4) * t133 + t121;
t23 = pkin(5) * t79 - qJ(6) * t212 + t86;
t308 = t23 * t212;
t307 = t212 * t79;
t22 = t194 * t56 + t309 * t66;
t18 = qJ(6) * t274 + t22;
t211 = -t194 * t145 + t309 * t146;
t59 = qJD(4) * t210 + qJD(5) * t211;
t305 = -t18 + t59;
t304 = -pkin(5) * t274 - t303;
t302 = t22 - t59;
t301 = pkin(5) * t278 + qJ(6) * t321 + qJD(6) * t137 - t267;
t299 = qJD(2) * pkin(2);
t297 = t196 * t61;
t296 = t196 * t62;
t293 = qJD(2) * t211;
t292 = qJD(2) * t89;
t142 = t310 * t272;
t187 = qJD(2) * qJD(3);
t114 = -qJD(1) * t142 + t187;
t291 = t114 * t191;
t290 = t133 * t192;
t289 = t134 * t191;
t288 = t134 * t192;
t189 = t195 ^ 2;
t198 = qJD(1) ^ 2;
t287 = t189 * t198;
t285 = t192 * t195;
t282 = t196 * t198;
t197 = qJD(2) ^ 2;
t281 = t197 * t195;
t280 = t197 * t196;
t173 = t191 * pkin(4) + qJ(3);
t161 = t310 * t196;
t190 = t196 ^ 2;
t276 = t189 - t190;
t152 = -pkin(2) * t196 + t251;
t130 = qJD(1) * t152;
t264 = -t311 + t324;
t263 = t192 * t287;
t122 = pkin(4) * t284 + t161;
t256 = t172 * t274;
t248 = pkin(1) * t319;
t247 = qJD(3) - t299;
t245 = qJD(1) * (0.2e1 * t189 - t190);
t244 = t133 + t269;
t243 = -t134 + t273;
t240 = t211 * t49 - t89 * t50 - t59 * t79;
t235 = t195 * t175;
t233 = t137 * t175 + t326;
t230 = t192 * t175 - t191 * t287;
t229 = -t311 - t324;
t228 = t111 * t50 - t71 * t79;
t225 = t191 * t48 + t192 * t47;
t224 = -t191 * t61 + t192 * t62;
t221 = qJD(1) * t244;
t220 = -0.2e1 * qJD(2) * t130;
t217 = t16 * t172 - t250;
t28 = -t194 * t72 + t309 * t68;
t208 = -qJ(3) * t271 - t268;
t103 = qJD(1) * t208 + t171;
t118 = t179 + t208;
t214 = pkin(7) * t197 + qJD(1) * t118 + t103;
t7 = t194 * t46 + t68 * t253 - t270 * t72 + t309 * t53;
t106 = (-pkin(7) + t262) * t272;
t90 = qJD(1) * t106 + t187;
t204 = t49 + t323;
t112 = t210 * t196;
t70 = -qJD(2) * t205 - t124 * t196;
t203 = -t111 * t49 + t112 * t50 - t212 * t71 + t70 * t79;
t202 = -t10 - t209;
t150 = pkin(7) * t252 - t187;
t151 = t176 + t247;
t157 = -t177 - t188;
t200 = -t150 * t196 + (t151 * t196 + (t157 + t177) * t195) * qJD(2);
t9 = pkin(5) * t50 + qJ(6) * t49 - qJD(6) * t212 + t90;
t199 = t50 + t295;
t186 = t192 ^ 2;
t185 = t191 ^ 2;
t168 = t195 * t282;
t159 = -0.2e1 * t235;
t158 = 0.2e1 * t235;
t156 = t276 * t198;
t140 = -qJ(3) * t274 + t180;
t129 = t276 * t319;
t107 = t130 * t275;
t104 = (t172 + t275) * t271;
t84 = -t132 * t191 + t139;
t76 = -pkin(5) * t210 - qJ(6) * t137 + t173;
t52 = pkin(5) * t111 - qJ(6) * t112 + t122;
t39 = pkin(5) * t212 + qJ(6) * t79;
t26 = -t195 * pkin(5) - t28;
t25 = qJ(6) * t195 + t300;
t24 = -t49 + t323;
t20 = -t212 * t274 + t233;
t17 = -pkin(5) * t71 - qJ(6) * t70 - qJD(6) * t112 + t106;
t12 = -t112 * t49 + t212 * t70;
t11 = t70 * t172 - t49 * t195 + (qJD(1) * t112 + t212) * t271;
t6 = -pkin(5) * t271 - t8;
t5 = qJ(6) * t271 + qJD(6) * t195 + t7;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t129, t280, t159, -t281, 0, -pkin(7) * t280 + t195 * t248, pkin(7) * t281 + t196 * t248, 0, 0, 0, -t280, t281, t158, t129, t159, t200, t195 * t220 + t196 * t214, -t195 * t214 + t196 * t220, pkin(7) * t200 + t103 * t152 + t118 * t130 (-t185 * t274 + t289) * t272 (t288 + (t133 - 0.2e1 * t254) * t191) * t272 (t134 * t196 + t191 * t245) * qJD(2) (-t186 * t274 + t290) * t272 (t133 * t196 + t192 * t245) * qJD(2), t158, t114 * t284 + t133 * t142 + (qJD(1) * t64 + t47) * t195 + (-t121 * t285 + t297 + (-t161 * t285 + t196 * t84) * qJD(1)) * qJD(2), -t196 * t291 - t134 * t142 + (-qJD(1) * t65 - t48) * t195 + (t121 * t286 - t296 + (t161 * t286 - t196 * t85) * qJD(1)) * qJD(2), t133 * t65 - t134 * t64 + (t191 * t47 - t192 * t48) * t196 + ((-t191 * t84 + t192 * t85) * qJD(1) + t224) * t272, t114 * t161 - t121 * t142 + t47 * t84 + t48 * t85 + t61 * t64 + t62 * t65, t12, -t203, t11, t228, t315, t104, t106 * t79 + t111 * t90 + t122 * t50 + t172 * t8 - t195 * t250 - t71 * t86 + (qJD(1) * t28 + t15) * t271, t106 * t212 + t112 * t90 - t122 * t49 - t172 * t7 + t195 * t213 + t70 * t86 + (-qJD(1) * t300 - t16) * t271, t111 * t213 + t112 * t250 - t15 * t70 + t16 * t71 - t212 * t8 + t28 * t49 - t300 * t50 - t7 * t79, t106 * t86 + t122 * t90 + t15 * t8 + t16 * t7 - t213 * t300 - t250 * t28, t12, t11, t203, t104, -t315, t228, t111 * t9 + t17 * t79 - t172 * t6 - t195 * t2 - t23 * t71 + t50 * t52 + (-qJD(1) * t26 - t13) * t271, -t1 * t111 + t112 * t2 + t13 * t70 + t14 * t71 + t212 * t6 - t25 * t50 - t26 * t49 - t5 * t79, t1 * t195 - t112 * t9 - t17 * t212 + t172 * t5 - t23 * t70 + t49 * t52 + (qJD(1) * t25 + t14) * t271, t1 * t25 + t13 * t6 + t14 * t5 + t17 * t23 + t2 * t26 + t52 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t168, t156, 0, t168, 0, 0, t198 * pkin(1) * t195, pkin(1) * t282, 0, 0, 0, 0, 0, -t168, t156, t168 ((-t157 - t188) * t195 + (-t151 + t247) * t196) * qJD(1), -t140 * t274 + t107, 0.2e1 * t187 + (t130 * t196 + t140 * t195) * qJD(1), -qJ(3) * t150 - qJD(3) * t157 - t130 * t140 + (-t157 * t195 + (-t151 - t299) * t196) * qJD(1) * pkin(7), t243 * t260 (-t133 * t191 - t288 + (-t185 + t186) * qJD(2)) * t275, -t134 * t274 + t230, -t221 * t285, -t196 * t221 - t263, -t168, t291 - t266 * t133 + (-t316 * t192 - t195 * t74 - t297) * qJD(1), t114 * t192 + t266 * t134 + (t316 * t191 + t195 * t75 + t296) * qJD(1), -t133 * t75 + t134 * t74 + (qJD(4) * t134 - t275 * t62 - t47) * t192 + (-qJD(4) * t133 + t275 * t61 - t48) * t191, qJ(3) * t114 - t61 * t74 - t62 * t75 + t225 * t193 + t266 * t121 + (-t191 * t62 - t192 * t61) * qJD(4), t10, t312, t20, t209, t249 + (qJD(2) * t210 + t79) * t274, -t256, -t210 * t90 + t173 * t50 - t278 * t86 + t267 * t79 - t303 * t172 + (-t15 + t293) * t274, t137 * t90 - t173 * t49 + t321 * t86 + t267 * t212 + t302 * t172 + (t16 - t292) * t274, t212 * t303 + t22 * t79 + t240 - t313, -t303 * t15 - t302 * t16 + t173 * t90 - t211 * t250 - t213 * t89 + t267 * t86, t10, t20, -t312, -t256, -t274 * t79 + t234, t209, -t210 * t9 + t50 * t76 - t301 * t79 - t278 * t23 + t304 * t172 + (t13 + t293) * t274, t18 * t79 - t212 * t304 + t240 - t314, -t137 * t9 + t49 * t76 + t301 * t212 - t321 * t23 + t305 * t172 + (-t14 + t292) * t274, t1 * t89 - t304 * t13 + t305 * t14 - t2 * t211 - t301 * t23 + t76 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, -t197 - t287, qJD(2) * t157 + t107 + t170, 0, 0, 0, 0, 0, 0, qJD(2) * t133 + t230, -t263 + (-t134 - t255) * qJD(2) (t289 + t290) * t275, -qJD(2) * t121 + t224 * t275 + t225, 0, 0, 0, 0, 0, 0, -qJD(2) * t79 + t233, -t325, t202, -qJD(2) * t86 + t313, 0, 0, 0, 0, 0, 0, t326 + (t137 * t274 - t79) * qJD(2), t202, t325, -qJD(2) * t23 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243 * t275, t244 * t275, -t133 ^ 2 - t134 ^ 2, -t62 * t133 + t61 * t134 + t114, 0, 0, 0, 0, 0, 0, t199, -t204, t229, t15 * t212 + t16 * t79 + t90, 0, 0, 0, 0, 0, 0, t199, t229, t204, -t13 * t212 + t14 * t79 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, -t264, t24, -t307, -t318, t175, -t212 * t86 + t217, t15 * t172 + t79 * t86 + t213, 0, 0, t307, t24, t264, t175, t318, -t307, -t39 * t79 + t217 + 0.2e1 * t241 - t308, pkin(5) * t49 - qJ(6) * t50 + (t14 - t16) * t212 + (t13 - t279) * t79, 0.2e1 * t237 - t23 * t79 + t39 * t212 + (0.2e1 * qJD(6) - t15) * t172 - t213, -pkin(5) * t2 + qJ(6) * t1 - t13 * t16 + t14 * t279 - t23 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175 + t307, t24, -t172 ^ 2 - t311, -t14 * t172 + t2 + t308;];
tauc_reg  = t3;
