% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPRP5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP5_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:43:57
% EndTime: 2019-03-09 08:44:04
% DurationCPUTime: 2.36s
% Computational Cost: add. (2590->221), mult. (5633->377), div. (0->0), fcn. (4807->6), ass. (0->124)
t161 = sin(qJ(5));
t127 = qJD(5) * t161;
t162 = cos(qJ(5));
t128 = qJD(5) * t162;
t90 = sin(pkin(9));
t91 = cos(pkin(9));
t57 = -t90 * t127 + t91 * t128;
t60 = t161 * t91 + t162 * t90;
t166 = 0.2e1 * t60 * t57;
t56 = t60 * qJD(5);
t61 = -t161 * t90 + t162 * t91;
t47 = -0.2e1 * t61 * t56;
t170 = t166 + t47;
t163 = pkin(3) + pkin(7);
t92 = sin(qJ(2));
t148 = t92 * qJD(2);
t93 = cos(qJ(2));
t37 = t61 * t148 + t93 * t56;
t50 = t61 * t93;
t118 = -t60 * t37 + t57 * t50;
t147 = t92 * qJD(3);
t115 = -t93 * qJD(4) - t147;
t103 = t90 * t115;
t110 = t90 * qJ(3) + t91 * t163;
t152 = pkin(2) + qJ(4);
t130 = t152 * t92;
t29 = -t103 + (t110 * t93 - t90 * t130) * qJD(2);
t102 = t91 * t115;
t137 = t90 * t163;
t30 = t102 + (t91 * t130 + (-t91 * qJ(3) + t137) * t93) * qJD(2);
t7 = t29 * t91 + t30 * t90;
t168 = qJD(2) * (t92 ^ 2 - t93 ^ 2);
t141 = pkin(8) + t152;
t125 = t141 * t91;
t109 = t162 * t125;
t66 = t141 * t90;
t26 = t60 * qJD(4) + qJD(5) * t109 - t66 * t127;
t108 = t161 * t125;
t27 = t61 * qJD(4) - qJD(5) * t108 - t66 * t128;
t45 = -t161 * t66 + t109;
t46 = -t162 * t66 - t108;
t105 = -t26 * t60 - t27 * t61 + t45 * t56 + t46 * t57;
t86 = t90 ^ 2;
t87 = t91 ^ 2;
t67 = (t86 + t87) * qJD(4);
t149 = t92 * qJ(3);
t107 = -t152 * t93 - t149;
t145 = t93 * qJD(3);
t167 = t107 * qJD(2) - qJD(4) * t92 + t145;
t165 = 0.2e1 * qJD(3);
t164 = 2 * qJD(6);
t65 = t163 * t148;
t155 = t65 * t90;
t72 = t163 * t93;
t154 = t72 * t92;
t153 = t91 * t93;
t59 = -pkin(1) + t107;
t71 = t163 * t92;
t63 = t91 * t71;
t34 = t92 * pkin(4) + t63 + (pkin(8) * t93 - t59) * t90;
t44 = t91 * t59 + t90 * t71;
t38 = -pkin(8) * t153 + t44;
t12 = t161 * t34 + t162 * t38;
t150 = qJ(3) * t93;
t80 = t90 * pkin(4) + qJ(3);
t146 = t92 * qJD(6);
t82 = t93 * qJD(2);
t144 = qJ(3) * qJD(3);
t143 = -0.2e1 * t50 * t37;
t142 = -0.2e1 * pkin(1) * qJD(2);
t55 = pkin(4) * t153 + t72;
t140 = pkin(5) * t82;
t139 = pkin(7) * t148;
t138 = pkin(7) * t82;
t136 = t90 * t82;
t135 = t91 * t148;
t134 = t92 * t82;
t131 = qJ(6) * t82;
t129 = -t46 * t26 + t45 * t27;
t75 = -0.2e1 * t134;
t126 = t90 * t135;
t124 = 0.2e1 * t168;
t121 = -t93 * pkin(2) - t149;
t36 = t60 * t148 - t57 * t93;
t51 = t60 * t93;
t119 = -t36 * t50 - t51 * t37;
t10 = t36 * t61 + t56 * t51;
t117 = t56 * t60 - t61 * t57;
t113 = t26 * t92 - t46 * t82;
t112 = -t27 * t92 - t45 * t82;
t111 = t37 * t92 - t50 * t82;
t40 = -t56 * t92 + t61 * t82;
t39 = t92 * t57 + t60 * t82;
t49 = (-pkin(4) * t91 - t163) * t148;
t106 = t26 * t50 - t27 * t51 + t45 * t36 + t46 * t37;
t104 = -t10 - t118;
t11 = -t161 * t38 + t162 * t34;
t101 = t56 * pkin(5) - t57 * qJ(6) - t60 * qJD(6);
t94 = -t103 + (-t92 * t66 + (pkin(4) + t110) * t93) * qJD(2);
t95 = t102 + (t93 * t137 + (t141 * t92 - t150) * t91) * qJD(2);
t3 = t38 * t127 - t34 * t128 - t161 * t94 - t162 * t95;
t100 = 0.2e1 * t105;
t1 = t131 - t3 + t146;
t4 = -t34 * t127 - t38 * t128 - t161 * t95 + t162 * t94;
t2 = -t4 - t140;
t8 = t92 * qJ(6) + t12;
t9 = -t92 * pkin(5) - t11;
t99 = t1 * t60 - t2 * t61 + t9 * t56 + t8 * t57;
t98 = -t11 * t56 + t12 * t57 - t3 * t60 + t4 * t61;
t97 = t36 * t60 - t61 * t37 - t56 * t50 - t51 * t57;
t96 = t121 * qJD(2) + t145;
t77 = t91 * t82;
t74 = 0.2e1 * t134;
t68 = -pkin(1) + t121;
t64 = -0.2e1 * t168;
t53 = -t147 + (pkin(2) * t92 - t150) * qJD(2);
t43 = -t90 * t59 + t63;
t41 = t60 * pkin(5) - t61 * qJ(6) + t80;
t25 = t57 * pkin(5) + t56 * qJ(6) - t61 * qJD(6) + qJD(3);
t23 = t50 * pkin(5) + t51 * qJ(6) + t55;
t21 = -0.2e1 * t51 * t36;
t15 = 0.2e1 * t36 * t92 - 0.2e1 * t51 * t82;
t5 = -t37 * pkin(5) - t36 * qJ(6) + t51 * qJD(6) + t49;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t64, 0, t75, 0, 0, t92 * t142, t93 * t142, 0, 0, 0, 0, 0, t74, t64, t75, 0, -0.2e1 * t68 * t148 + 0.2e1 * t53 * t93, -0.2e1 * t53 * t92 - 0.2e1 * t68 * t82, 0.2e1 * t68 * t53, t86 * t75, -0.4e1 * t93 * t126, t90 * t124, t87 * t75, t91 * t124, t74, -0.2e1 * t65 * t153 + 0.2e1 * t29 * t92 + 0.2e1 * (-t91 * t154 + t43 * t93) * qJD(2), 0.2e1 * t93 * t155 - 0.2e1 * t30 * t92 + 0.2e1 * (t90 * t154 - t44 * t93) * qJD(2), 0.2e1 * (t29 * t90 - t30 * t91) * t93 + 0.2e1 * (-t43 * t90 + t44 * t91) * t148, 0.2e1 * t43 * t29 + 0.2e1 * t44 * t30 - 0.2e1 * t72 * t65, t21, 0.2e1 * t119, t15, t143, 0.2e1 * t111, t74, 0.2e1 * t11 * t82 - 0.2e1 * t55 * t37 + 0.2e1 * t4 * t92 + 0.2e1 * t49 * t50, -0.2e1 * t12 * t82 + 0.2e1 * t3 * t92 + 0.2e1 * t55 * t36 - 0.2e1 * t49 * t51, -0.2e1 * t11 * t36 + 0.2e1 * t12 * t37 + 0.2e1 * t3 * t50 + 0.2e1 * t4 * t51, 0.2e1 * t11 * t4 - 0.2e1 * t12 * t3 + 0.2e1 * t55 * t49, t21, t15, -0.2e1 * t119, t74, -0.2e1 * t111, t143, -0.2e1 * t2 * t92 - 0.2e1 * t23 * t37 + 0.2e1 * t5 * t50 - 0.2e1 * t9 * t82, -0.2e1 * t1 * t50 - 0.2e1 * t2 * t51 + 0.2e1 * t9 * t36 + 0.2e1 * t8 * t37, 0.2e1 * t1 * t92 - 0.2e1 * t23 * t36 + 0.2e1 * t5 * t51 + 0.2e1 * t8 * t82, 0.2e1 * t8 * t1 + 0.2e1 * t9 * t2 + 0.2e1 * t23 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, -t148, 0, -t138, t139, 0, 0, 0, -t82, t148, 0, 0, 0, t96, t138, -t139, t96 * pkin(7), t126 (-t86 + t87) * t148, t77, -t126, -t136, 0, t167 * t91 - t155, -t167 * t90 - t65 * t91, -t7, -t65 * qJ(3) + t72 * qJD(3) + (-t43 * t91 - t44 * t90) * qJD(4) - t7 * t152, t10, -t97, t40, t118, -t39, 0, qJD(3) * t50 - t80 * t37 + t49 * t60 + t55 * t57 + t112, -qJD(3) * t51 + t80 * t36 + t49 * t61 - t55 * t56 + t113, t106 - t98, t55 * qJD(3) - t11 * t27 - t12 * t26 - t3 * t46 - t4 * t45 + t49 * t80, t10, t40, t97, 0, t39, t118, t23 * t57 + t25 * t50 - t41 * t37 + t5 * t60 + t112, t106 - t99, t23 * t56 + t25 * t51 - t41 * t36 - t5 * t61 - t113, t1 * t46 + t2 * t45 + t23 * t25 - t8 * t26 + t9 * t27 + t5 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, 0.2e1 * t144, 0, 0, 0, 0, 0, 0, t90 * t165, t91 * t165, 0.2e1 * t67, 0.2e1 * t152 * t67 + 0.2e1 * t144, t47, 0.2e1 * t117, 0, t166, 0, 0, 0.2e1 * qJD(3) * t60 + 0.2e1 * t80 * t57, 0.2e1 * qJD(3) * t61 - 0.2e1 * t80 * t56, -t100, 0.2e1 * t80 * qJD(3) + 0.2e1 * t129, t47, 0, -0.2e1 * t117, 0, 0, t166, 0.2e1 * t25 * t60 + 0.2e1 * t41 * t57, -t100, -0.2e1 * t25 * t61 + 0.2e1 * t41 * t56, 0.2e1 * t41 * t25 + 0.2e1 * t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, 0, t138, 0, 0, 0, 0, 0, 0, t77, -t136, 0, t7, 0, 0, 0, 0, 0, 0, t40, -t39, t104, t98, 0, 0, 0, 0, 0, 0, t40, t104, t39, t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, 0, 0, 0, 0, 0, 0, 0, 0, -t170, t105, 0, 0, 0, 0, 0, 0, 0, -t170, 0, t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t90 * t148, 0, -t65, 0, 0, 0, 0, 0, 0, -t37, t36, 0, t49, 0, 0, 0, 0, 0, 0, -t37, 0, -t36, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), 0, 0, 0, 0, 0, 0, t57, -t56, 0, qJD(3), 0, 0, 0, 0, 0, 0, t57, 0, t56, t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, t37, t82, t4, t3, 0, 0, 0, t36, 0, t82, -t37, 0, t4 + 0.2e1 * t140, -pkin(5) * t36 + t37 * qJ(6) - t50 * qJD(6), 0.2e1 * t131 - t3 + 0.2e1 * t146, -t2 * pkin(5) + t1 * qJ(6) + t8 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t57, 0, -t27, t26, 0, 0, 0, -t56, 0, 0, t57, 0, -t27, t101, -t26, -t27 * pkin(5) - t26 * qJ(6) + t46 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, -t57, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, t57, -t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, qJ(6) * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t36, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
