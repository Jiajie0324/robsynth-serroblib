% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPR11_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR11_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR11_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_invdynJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:44:37
% EndTime: 2019-03-09 05:45:09
% DurationCPUTime: 14.42s
% Computational Cost: add. (23017->700), mult. (73610->983), div. (0->0), fcn. (64514->18), ass. (0->305)
t321 = sin(pkin(12));
t324 = cos(pkin(12));
t461 = cos(pkin(6));
t478 = cos(qJ(1));
t399 = t461 * t478;
t476 = sin(qJ(1));
t262 = t321 * t399 + t324 * t476;
t327 = sin(qJ(3));
t477 = cos(qJ(3));
t351 = t476 * t321 - t324 * t399;
t322 = sin(pkin(6));
t459 = sin(pkin(7));
t417 = t322 * t459;
t460 = cos(pkin(7));
t498 = t351 * t460 + t478 * t417;
t174 = -t262 * t477 + t498 * t327;
t326 = sin(qJ(4));
t329 = cos(qJ(4));
t418 = t322 * t460;
t479 = t351 * t459 - t478 * t418;
t145 = t174 * t329 - t326 * t479;
t171 = t262 * t327 + t498 * t477;
t319 = pkin(13) + qJ(6);
t313 = sin(t319);
t314 = cos(t319);
t505 = t145 * t313 + t171 * t314;
t504 = t145 * t314 - t171 * t313;
t383 = t459 * t461;
t367 = t327 * t383;
t416 = t327 * t460;
t401 = t324 * t416;
t225 = t322 * (t321 * t477 + t401) + t367;
t214 = t225 * qJD(1);
t384 = t461 * t460;
t395 = qJD(1) * t417;
t432 = -t324 * t395 + qJD(3);
t347 = -qJD(1) * t384 - t432;
t245 = t329 * t347;
t165 = t214 * t326 + t245;
t164 = qJD(6) + t165;
t167 = t329 * t214 - t326 * t347;
t450 = t321 * t322;
t422 = qJD(1) * t450;
t352 = t477 * t383;
t397 = t460 * t477;
t375 = t324 * t397;
t499 = t322 * t375 + t352;
t486 = t499 * qJD(1) - t327 * t422;
t204 = qJD(4) - t486;
t320 = sin(pkin(13));
t323 = cos(pkin(13));
t134 = t167 * t320 - t323 * t204;
t328 = cos(qJ(6));
t136 = t167 * t323 + t204 * t320;
t325 = sin(qJ(6));
t458 = t136 * t325;
t496 = -t328 * t134 - t458;
t503 = t496 * t164;
t342 = t322 * (-t321 * t416 + t324 * t477);
t396 = t459 * t477;
t368 = qJD(3) * t396;
t500 = qJD(1) * t342 - t368;
t144 = t174 * t326 + t329 * t479;
t246 = (-pkin(9) * t321 * t459 - pkin(2) * t324 - pkin(1)) * t322;
t236 = qJD(1) * t246 + qJD(2);
t415 = t327 * t459;
t303 = t324 * t322 * qJ(2);
t411 = qJD(1) * t461;
t403 = pkin(1) * t411;
t257 = qJD(1) * t303 + t321 * t403;
t337 = (t324 * t418 + t383) * pkin(9);
t197 = qJD(1) * t337 + t257;
t300 = t324 * t403;
t338 = t461 * pkin(2) + (-pkin(9) * t460 - qJ(2)) * t450;
t205 = qJD(1) * t338 + t300;
t491 = -t477 * t197 - t205 * t416;
t130 = t236 * t415 - t491;
t497 = -qJD(5) * t326 - t130 + t204 * (pkin(4) * t326 - qJ(5) * t329);
t379 = t134 * t325 - t136 * t328;
t495 = t164 * t379;
t490 = t327 * t197 - t205 * t397;
t268 = t326 * t415 - t329 * t460;
t372 = t321 * t395;
t489 = qJD(4) * t268 + t326 * t372 + t500 * t329;
t341 = t322 * (t321 * t397 + t324 * t327);
t394 = qJD(3) * t415;
t365 = -qJD(1) * t341 + t394;
t425 = pkin(1) * t461;
t265 = t321 * t425 + t303;
t217 = t337 + t265;
t307 = t324 * t425;
t226 = t307 + t338;
t427 = t477 * t217 + (t460 * t226 + t459 * t246) * t327;
t436 = qJD(4) * t326;
t428 = pkin(10) * t436;
t129 = t236 * t396 - t490;
t162 = pkin(3) * t214 - pkin(10) * t486;
t444 = t329 * t129 + t326 * t162;
t76 = qJ(5) * t214 + t444;
t464 = t497 * t323 + (t428 + t76) * t320;
t485 = -t497 * t320 + t323 * t76;
t484 = t204 * t326;
t317 = t322 ^ 2;
t483 = t317 * (t321 ^ 2 + t324 ^ 2);
t334 = -t327 * t217 + t226 * t397 + t246 * t396;
t398 = t461 * t476;
t345 = t321 * t478 + t324 * t398;
t481 = t345 * t460 - t476 * t417;
t213 = t225 * qJD(3);
t430 = qJDD(1) * t322;
t420 = t321 * t430;
t353 = -qJDD(1) * t499 + t327 * t420;
t161 = qJD(1) * t213 + t353;
t157 = qJDD(4) + t161;
t480 = -pkin(4) * t157 + qJDD(5);
t263 = -t321 * t398 + t324 * t478;
t175 = t263 * t327 + t477 * t481;
t449 = t321 * t327;
t224 = t322 * t449 - t499;
t355 = g(1) * t175 + g(2) * t171 + g(3) * t224;
t160 = qJD(3) * t486 + qJDD(1) * t367 + t401 * t430 + t477 * t420;
t261 = t324 * t417 - t384;
t252 = qJDD(1) * t261 - qJDD(3);
t94 = qJD(4) * t167 + t326 * t160 + t329 * t252;
t93 = -qJD(4) * t245 + t329 * t160 - t214 * t436 - t326 * t252;
t71 = -t323 * t157 + t320 * t93;
t72 = t157 * t320 + t323 * t93;
t20 = -qJD(6) * t379 + t325 * t72 + t328 * t71;
t475 = pkin(1) * t317;
t473 = pkin(5) * t326;
t469 = pkin(11) + qJ(5);
t163 = -t205 * t459 + t460 * t236;
t101 = -pkin(3) * t486 - t214 * pkin(10) + t163;
t105 = -pkin(10) * t347 + t130;
t435 = qJD(4) * t329;
t402 = qJDD(1) * t425;
t431 = qJD(1) * qJD(2);
t421 = t322 * t431;
t238 = qJDD(1) * t303 + t321 * t402 + t324 * t421;
t181 = qJDD(1) * t337 + t238;
t298 = t324 * t402;
t182 = qJDD(1) * t338 - t321 * t421 + t298;
t229 = qJDD(1) * t246 + qJDD(2);
t346 = qJD(3) * t490 - t477 * t181 - t182 * t416 - t229 * t415 - t236 * t368;
t63 = -pkin(10) * t252 - t346;
t151 = -t182 * t459 + t460 * t229;
t81 = t161 * pkin(3) - t160 * pkin(10) + t151;
t362 = t101 * t435 - t105 * t436 + t326 * t81 + t329 * t63;
t16 = qJ(5) * t157 + qJD(5) * t204 + t362;
t366 = qJD(3) * t491 - t327 * t181 + t182 * t397 + t229 * t396 - t236 * t394;
t64 = pkin(3) * t252 - t366;
t24 = pkin(4) * t94 - qJ(5) * t93 - qJD(5) * t167 + t64;
t7 = t323 * t16 + t320 * t24;
t115 = qJD(2) * t342 + qJD(3) * t334;
t168 = -t226 * t459 + t460 * t246;
t121 = t224 * pkin(3) - t225 * pkin(10) + t168;
t128 = -pkin(10) * t261 + t427;
t212 = (t352 + (t375 - t449) * t322) * qJD(3);
t371 = t321 * qJD(2) * t417;
t149 = t213 * pkin(3) - t212 * pkin(10) + t371;
t359 = t329 * t115 + t121 * t435 - t128 * t436 + t326 * t149;
t33 = qJ(5) * t213 + qJD(5) * t224 + t359;
t116 = qJD(2) * t341 + qJD(3) * t427;
t170 = t225 * t329 - t261 * t326;
t138 = qJD(4) * t170 + t212 * t326;
t169 = t225 * t326 + t261 * t329;
t139 = -qJD(4) * t169 + t212 * t329;
t48 = t138 * pkin(4) - t139 * qJ(5) - t170 * qJD(5) + t116;
t15 = t320 * t48 + t323 * t33;
t57 = t326 * t101 + t329 * t105;
t53 = qJ(5) * t204 + t57;
t104 = pkin(3) * t347 - t129;
t67 = t165 * pkin(4) - t167 * qJ(5) + t104;
t29 = t320 * t67 + t323 * t53;
t445 = t326 * t121 + t329 * t128;
t61 = qJ(5) * t224 + t445;
t127 = t261 * pkin(3) - t334;
t80 = t169 * pkin(4) - t170 * qJ(5) + t127;
t35 = t320 * t80 + t323 * t61;
t468 = pkin(10) * qJD(4);
t467 = qJ(5) * t94;
t451 = t320 * t329;
t152 = -t323 * t214 + t451 * t486;
t447 = t323 * t329;
t153 = t214 * t320 + t447 * t486;
t452 = t320 * t325;
t277 = -t328 * t323 + t452;
t278 = t320 * t328 + t323 * t325;
t434 = qJD(6) * t326;
t466 = t152 * t325 - t153 * t328 - t277 * t435 - t278 * t434;
t433 = qJD(6) * t328;
t448 = t323 * t326;
t465 = -t328 * t152 - t153 * t325 + t278 * t435 + t433 * t448 - t434 * t452;
t463 = -t323 * t428 - t485;
t426 = pkin(5) * t320 + pkin(10);
t125 = t326 * t129;
t77 = -pkin(4) * t214 - t162 * t329 + t125;
t462 = -pkin(5) * t152 + t426 * t435 - t77;
t119 = pkin(4) * t167 + qJ(5) * t165;
t56 = t101 * t329 - t326 * t105;
t45 = t320 * t119 + t323 * t56;
t457 = t165 * t204;
t456 = t165 * t320;
t455 = t167 * t204;
t454 = t313 * t329;
t453 = t314 * t329;
t52 = -pkin(4) * t204 + qJD(5) - t56;
t446 = -qJD(5) + t52;
t443 = -t320 * t489 - t323 * t365;
t442 = -t320 * t365 + t323 * t489;
t269 = t326 * t460 + t329 * t415;
t441 = qJD(4) * t269 - t326 * t500 + t329 * t372;
t440 = t164 * t277;
t439 = t164 * t278;
t370 = pkin(4) * t329 + qJ(5) * t326 + pkin(3);
t251 = pkin(10) * t447 - t320 * t370;
t423 = t322 * t476;
t438 = pkin(1) * t478 + qJ(2) * t423;
t429 = g(1) * t476;
t424 = t322 * t478;
t6 = -t16 * t320 + t323 * t24;
t14 = -t320 * t33 + t323 * t48;
t28 = -t320 * t53 + t323 * t67;
t34 = -t320 * t61 + t323 * t80;
t330 = qJD(1) ^ 2;
t414 = t330 * t461;
t44 = t323 * t119 - t320 * t56;
t410 = t101 * t436 + t105 * t435 + t326 * t63 - t329 * t81;
t409 = t121 * t329 - t326 * t128;
t405 = t204 * t329;
t400 = -pkin(1) * t476 + qJ(2) * t424;
t176 = t263 * t477 - t327 * t481;
t331 = -t345 * t459 - t418 * t476;
t146 = t176 * t326 + t329 * t331;
t393 = g(1) * t144 + g(2) * t146;
t4 = pkin(5) * t94 - pkin(11) * t72 + t6;
t5 = -pkin(11) * t71 + t7;
t392 = t325 * t4 + t328 * t5;
t235 = -pkin(11) * t320 * t326 + t251;
t391 = -pkin(11) * t153 + qJD(6) * t235 + t486 * t473 - (-pkin(11) * t447 + t473) * qJD(4) - t464;
t273 = t323 * t370;
t218 = -pkin(11) * t448 - t273 + (-pkin(10) * t320 - pkin(5)) * t329;
t390 = -pkin(11) * t152 - qJD(6) * t218 - (-pkin(10) * t448 - pkin(11) * t451) * qJD(4) + t485;
t389 = qJD(2) * t411;
t387 = g(2) * t424 - g(3) * t461;
t231 = t323 * t269 - t320 * t396;
t386 = qJD(6) * t231 + t443;
t230 = -t320 * t269 - t323 * t396;
t385 = -qJD(6) * t230 + t442;
t18 = pkin(5) * t165 - pkin(11) * t136 + t28;
t21 = -pkin(11) * t134 + t29;
t8 = t18 * t328 - t21 * t325;
t9 = t18 * t325 + t21 * t328;
t141 = t170 * t323 + t224 * t320;
t25 = pkin(5) * t169 - pkin(11) * t141 + t34;
t140 = t170 * t320 - t224 * t323;
t27 = -pkin(11) * t140 + t35;
t381 = t25 * t328 - t27 * t325;
t380 = t25 * t325 + t27 * t328;
t88 = t328 * t140 + t141 * t325;
t89 = -t140 * t325 + t141 * t328;
t378 = (-qJ(2) * t422 + t300) * t321 - t257 * t324;
t369 = -t326 * t115 - t121 * t436 - t128 * t435 + t149 * t329;
t62 = -pkin(4) * t224 - t409;
t291 = t469 * t320;
t364 = pkin(11) * t456 - qJD(5) * t323 + qJD(6) * t291 + t45;
t292 = t469 * t323;
t363 = pkin(11) * t165 * t323 + pkin(5) * t167 + qJD(5) * t320 + qJD(6) * t292 + t44;
t19 = -qJD(6) * t458 - t134 * t433 - t325 * t71 + t328 * t72;
t360 = -pkin(10) * t157 + t104 * t204;
t358 = g(1) * t478 + g(2) * t476;
t357 = g(1) * t146 - g(2) * t144 + g(3) * t169;
t147 = t176 * t329 - t326 * t331;
t356 = -g(1) * t147 + g(2) * t145 - g(3) * t170;
t354 = g(1) * t176 - g(2) * t174 + g(3) * t225;
t17 = t410 + t480;
t350 = -t17 + t357;
t349 = t355 - t64;
t37 = -pkin(4) * t213 - t369;
t2 = -qJD(6) * t9 - t325 * t5 + t328 * t4;
t340 = t357 - t410;
t312 = -pkin(5) * t323 - pkin(4);
t302 = -pkin(1) * t430 + qJDD(2);
t280 = t426 * t326;
t264 = -qJ(2) * t450 + t307;
t259 = t277 * t326;
t258 = t278 * t326;
t250 = -pkin(10) * t451 - t273;
t237 = t298 + (-qJ(2) * qJDD(1) - t431) * t450;
t110 = t139 * t323 + t213 * t320;
t109 = t139 * t320 - t213 * t323;
t96 = t147 * t314 + t175 * t313;
t95 = -t147 * t313 + t175 * t314;
t90 = qJDD(6) + t94;
t50 = -pkin(5) * t456 + t57;
t49 = pkin(5) * t140 + t62;
t43 = pkin(5) * t134 + t52;
t40 = qJD(6) * t89 + t328 * t109 + t110 * t325;
t39 = -qJD(6) * t88 - t109 * t325 + t110 * t328;
t26 = pkin(5) * t109 + t37;
t12 = -pkin(11) * t109 + t15;
t11 = pkin(5) * t71 + t17;
t10 = pkin(5) * t138 - pkin(11) * t110 + t14;
t1 = t8 * qJD(6) + t392;
t3 = [qJDD(1), -g(2) * t478 + t429, t358, t237 * t461 + g(1) * t262 - g(2) * t263 + (-t302 * t324 - t321 * t389) * t322 + (t264 * t461 + t324 * t475) * qJDD(1), -t238 * t461 - g(1) * t351 + g(2) * t345 + (t302 * t321 - t324 * t389) * t322 + (-t265 * t461 - t321 * t475) * qJDD(1), t431 * t483 + (-t237 * t321 + t238 * t324 + (-t264 * t321 + t265 * t324) * qJDD(1) - t358) * t322, t238 * t265 + t237 * t264 - g(1) * t400 - g(2) * t438 + (-t302 * pkin(1) - qJD(2) * t378) * t322, t160 * t225 + t212 * t214, -t160 * t224 - t161 * t225 + t212 * t486 - t213 * t214, -t160 * t261 - t212 * t347 - t225 * t252, t161 * t261 + t213 * t347 + t224 * t252, t252 * t261, -g(1) * t174 - g(2) * t176 + t116 * t347 + t151 * t224 + t168 * t161 + t163 * t213 - t252 * t334 - t261 * t366 - t371 * t486, -g(1) * t171 + g(2) * t175 + t115 * t347 + t151 * t225 + t168 * t160 + t163 * t212 + t214 * t371 + t252 * t427 - t261 * t346, t139 * t167 + t170 * t93, -t138 * t167 - t139 * t165 - t169 * t93 - t170 * t94, t139 * t204 + t157 * t170 + t167 * t213 + t224 * t93, -t138 * t204 - t157 * t169 - t165 * t213 - t224 * t94, t157 * t224 + t204 * t213, -g(1) * t145 - g(2) * t147 + t104 * t138 + t116 * t165 + t127 * t94 + t157 * t409 + t64 * t169 + t204 * t369 + t56 * t213 - t224 * t410, t104 * t139 + t116 * t167 + t127 * t93 - t157 * t445 + t64 * t170 - t204 * t359 - t57 * t213 - t224 * t362 + t393, t14 * t165 + t34 * t94 + t6 * t169 + t28 * t138 + t37 * t134 + t62 * t71 + t17 * t140 + t52 * t109 - g(1) * (t145 * t323 - t171 * t320) - g(2) * (t147 * t323 + t175 * t320) -t15 * t165 - t35 * t94 - t7 * t169 - t29 * t138 + t37 * t136 + t62 * t72 + t17 * t141 + t52 * t110 - g(1) * (-t145 * t320 - t171 * t323) - g(2) * (-t147 * t320 + t175 * t323) -t109 * t29 - t110 * t28 - t134 * t15 - t136 * t14 - t140 * t7 - t141 * t6 - t34 * t72 - t35 * t71 - t393, t7 * t35 + t29 * t15 + t6 * t34 + t28 * t14 + t17 * t62 + t52 * t37 - g(1) * (-t262 * pkin(2) + t174 * pkin(3) + t145 * pkin(4) - pkin(10) * t171 + t144 * qJ(5) + t400) - g(2) * (t263 * pkin(2) + t176 * pkin(3) + t147 * pkin(4) + t175 * pkin(10) + t146 * qJ(5) + t438) + (g(1) * t479 + g(2) * t331) * pkin(9), t19 * t89 - t379 * t39, -t19 * t88 - t20 * t89 + t379 * t40 + t39 * t496, -t138 * t379 + t164 * t39 + t169 * t19 + t89 * t90, t138 * t496 - t164 * t40 - t169 * t20 - t88 * t90, t138 * t164 + t169 * t90 (-qJD(6) * t380 + t10 * t328 - t12 * t325) * t164 + t381 * t90 + t2 * t169 + t8 * t138 - t26 * t496 + t49 * t20 + t11 * t88 + t43 * t40 - g(1) * t504 - g(2) * t96 -(qJD(6) * t381 + t10 * t325 + t12 * t328) * t164 - t380 * t90 - t1 * t169 - t9 * t138 - t26 * t379 + t49 * t19 + t11 * t89 + t43 * t39 + g(1) * t505 - g(2) * t95; 0, 0, 0 (-qJDD(1) * t324 + t321 * t414) * t322 (qJDD(1) * t321 + t324 * t414) * t322, -t330 * t483, qJDD(2) + (-pkin(1) * qJDD(1) + qJD(1) * t378 - t429) * t322 + t387, 0, 0, 0, 0, 0, t161 * t460 - t252 * t396 + t347 * t365 + t372 * t486, t160 * t460 - t214 * t372 + t252 * t415 - t347 * t500, 0, 0, 0, 0, 0, -t268 * t157 + t165 * t365 - t204 * t441 - t396 * t94, -t269 * t157 + t365 * t167 + t204 * t489 - t93 * t396, t134 * t441 - t165 * t443 + t230 * t94 + t268 * t71, t136 * t441 + t165 * t442 - t231 * t94 + t268 * t72, t134 * t442 + t136 * t443 - t230 * t72 - t231 * t71, -g(1) * t423 + t17 * t268 + t6 * t230 + t7 * t231 - t28 * t443 - t29 * t442 + t441 * t52 + t387, 0, 0, 0, 0, 0 (t230 * t328 - t231 * t325) * t90 + t268 * t20 - t441 * t496 + (t325 * t385 - t328 * t386) * t164 -(t230 * t325 + t231 * t328) * t90 + t268 * t19 - t441 * t379 + (t325 * t386 + t328 * t385) * t164; 0, 0, 0, 0, 0, 0, 0, -t214 * t486, t214 ^ 2 - t486 ^ 2, t347 * t486 + t160, t214 * t432 + (t214 * t384 - t213) * qJD(1) - t353, -t252, -t130 * t347 - t163 * t214 + t355 + t366, -t129 * t347 - t163 * t486 + t346 + t354, t167 * t405 + t326 * t93 (t93 - t457) * t329 + (-t94 - t455) * t326, t326 * t157 - t167 * t214 + t204 * t405, t329 * t157 + t165 * t214 - t204 * t484, -t204 * t214, -pkin(3) * t94 + t125 * t204 - t130 * t165 - t56 * t214 + t360 * t326 + ((-t162 - t468) * t204 + t349) * t329, -pkin(3) * t93 + t444 * t204 + t57 * t214 - t130 * t167 + t360 * t329 + (t204 * t468 - t349) * t326, -t77 * t134 - t52 * t152 + t250 * t94 + t464 * t165 - t354 * t320 + (-t6 + (pkin(10) * t134 + t320 * t52) * qJD(4) + t355 * t323) * t329 + (pkin(10) * t71 + t17 * t320 + t204 * t28) * t326, -t77 * t136 - t52 * t153 - t251 * t94 - t463 * t165 - t354 * t323 + (t7 + (pkin(10) * t136 + t323 * t52) * qJD(4) - t355 * t320) * t329 + (pkin(10) * t72 + t17 * t323 - t204 * t29) * t326, t152 * t29 + t153 * t28 - t250 * t72 - t251 * t71 - t464 * t136 - t463 * t134 + (-t28 * t323 - t29 * t320) * t435 + (-t320 * t7 - t323 * t6 + t355) * t326, t6 * t250 + t7 * t251 - t52 * t77 + t463 * t29 + t464 * t28 + (t17 * t326 + t435 * t52 - t354) * pkin(10) + t355 * t370, -t19 * t259 - t379 * t466, -t19 * t258 + t20 * t259 + t379 * t465 + t466 * t496, t164 * t466 - t19 * t329 - t259 * t90 - t379 * t484, -t164 * t465 + t20 * t329 - t258 * t90 + t484 * t496, t164 * t484 - t329 * t90 (t218 * t328 - t235 * t325) * t90 - t2 * t329 + t280 * t20 + t11 * t258 - g(1) * (-t175 * t453 + t176 * t313) - g(2) * (-t171 * t453 - t174 * t313) - g(3) * (-t224 * t453 + t225 * t313) - t462 * t496 + t465 * t43 + t8 * t484 + (t325 * t390 - t328 * t391) * t164 -(t218 * t325 + t235 * t328) * t90 + t1 * t329 + t280 * t19 - t11 * t259 - g(1) * (t175 * t454 + t176 * t314) - g(2) * (t171 * t454 - t174 * t314) - g(3) * (t224 * t454 + t225 * t314) - t462 * t379 + t466 * t43 - t9 * t484 + (t325 * t391 + t328 * t390) * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167 * t165, -t165 ^ 2 + t167 ^ 2, t93 + t457, t455 - t94, t157, -t104 * t167 + t204 * t57 + t340, t104 * t165 + t204 * t56 - t356 - t362, -t320 * t467 - pkin(4) * t71 - t134 * t57 - t167 * t28 + (t320 * t446 - t44) * t165 + t350 * t323, -t323 * t467 - pkin(4) * t72 - t136 * t57 + t167 * t29 + (t323 * t446 + t45) * t165 - t350 * t320, t134 * t45 + t136 * t44 + (-qJ(5) * t71 - qJD(5) * t134 - t165 * t28 + t7) * t323 + (qJ(5) * t72 + qJD(5) * t136 - t165 * t29 - t6) * t320 + t356, -t28 * t44 - t29 * t45 - t52 * t57 + (-t28 * t320 + t29 * t323) * qJD(5) + t350 * pkin(4) + (-t6 * t320 + t7 * t323 + t356) * qJ(5), t19 * t278 + t379 * t440, -t19 * t277 - t20 * t278 + t379 * t439 - t440 * t496, -t164 * t440 + t167 * t379 + t278 * t90, -t164 * t439 - t167 * t496 - t277 * t90, -t164 * t167 (-t291 * t328 - t292 * t325) * t90 + t312 * t20 + t11 * t277 - t8 * t167 + t50 * t496 + t439 * t43 + (t325 * t364 - t328 * t363) * t164 + t357 * t314 -(-t291 * t325 + t292 * t328) * t90 + t312 * t19 + t11 * t278 + t9 * t167 + t50 * t379 - t440 * t43 + (t325 * t363 + t328 * t364) * t164 - t357 * t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136 * t165 + t71, -t134 * t165 + t72, -t134 ^ 2 - t136 ^ 2, t134 * t29 + t136 * t28 - t340 + t480, 0, 0, 0, 0, 0, t20 - t495, t19 + t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379 * t496, t379 ^ 2 - t496 ^ 2, t19 - t503, -t20 - t495, t90, t9 * t164 + t43 * t379 - g(1) * t95 - g(2) * t505 - g(3) * (-t170 * t313 + t224 * t314) + t2, -t43 * t496 + g(1) * t96 - g(2) * t504 - g(3) * (-t170 * t314 - t224 * t313) - t392 + (t164 - qJD(6)) * t8;];
tau_reg  = t3;
