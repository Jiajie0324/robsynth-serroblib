% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR11_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:44:32
% EndTime: 2019-03-09 05:44:45
% DurationCPUTime: 4.55s
% Computational Cost: add. (9431->382), mult. (28063->715), div. (0->0), fcn. (30020->14), ass. (0->164)
t145 = sin(pkin(12));
t147 = sin(pkin(6));
t149 = cos(pkin(12));
t151 = cos(pkin(6));
t154 = sin(qJ(3));
t150 = cos(pkin(7));
t157 = cos(qJ(3));
t198 = t150 * t157;
t146 = sin(pkin(7));
t203 = t146 * t157;
t218 = (-t145 * t154 + t149 * t198) * t147 + t151 * t203;
t199 = t149 * t154;
t204 = t146 * t154;
t89 = t151 * t204 + (t145 * t157 + t150 * t199) * t147;
t83 = t89 * qJD(3);
t216 = 0.2e1 * t83;
t148 = cos(pkin(13));
t139 = -t148 * pkin(5) - pkin(4);
t215 = 0.2e1 * t139;
t214 = pkin(1) * t151;
t213 = pkin(11) + qJ(5);
t153 = sin(qJ(4));
t156 = cos(qJ(4));
t190 = qJD(4) * t156;
t191 = qJD(4) * t153;
t102 = (-pkin(9) * t145 * t146 - pkin(2) * t149 - pkin(1)) * t147;
t192 = qJD(3) * t157;
t175 = t146 * t192;
t194 = qJD(2) * t147;
t178 = t145 * t194;
t136 = t149 * t214;
t206 = t145 * t147;
t90 = t151 * pkin(2) + t136 + (-pkin(9) * t150 - qJ(2)) * t206;
t211 = t150 * t90;
t202 = t147 * t149;
t195 = qJ(2) * t202 + t145 * t214;
t86 = (t146 * t151 + t150 * t202) * pkin(9) + t195;
t43 = -t157 * t149 * t194 - t192 * t211 - t102 * t175 + (qJD(3) * t86 + t150 * t178) * t154;
t65 = t150 * t102 - t146 * t90;
t48 = -pkin(3) * t218 - t89 * pkin(10) + t65;
t111 = t146 * t202 - t151 * t150;
t164 = t102 * t146 + t211;
t158 = t164 * t154 + t157 * t86;
t53 = -t111 * pkin(10) + t158;
t170 = t146 * t178;
t82 = t218 * qJD(3);
t60 = t83 * pkin(3) - t82 * pkin(10) + t170;
t20 = -t153 * t60 + t156 * t43 - t48 * t190 + t53 * t191;
t14 = t83 * qJ(5) - qJD(5) * t218 - t20;
t144 = sin(pkin(13));
t44 = (t145 * t198 + t199) * t194 + t158 * qJD(3);
t67 = -t111 * t153 + t89 * t156;
t55 = t67 * qJD(4) + t82 * t153;
t66 = t111 * t156 + t89 * t153;
t56 = -t66 * qJD(4) + t82 * t156;
t24 = t55 * pkin(4) - t56 * qJ(5) - t67 * qJD(5) + t44;
t8 = t148 * t14 + t144 * t24;
t212 = t153 * t48 + t156 * t53;
t27 = -qJ(5) * t218 + t212;
t52 = t111 * pkin(3) + t154 * t86 - t164 * t157;
t31 = t66 * pkin(4) - t67 * qJ(5) + t52;
t16 = t144 * t31 + t148 * t27;
t21 = t153 * t43 + t156 * t60 - t53 * t190 - t48 * t191;
t17 = -t83 * pkin(4) - t21;
t210 = t17 * t144;
t209 = t17 * t148;
t208 = t144 * t153;
t207 = t144 * t156;
t201 = t148 * t153;
t200 = t148 * t156;
t152 = sin(qJ(6));
t197 = t152 * t144;
t155 = cos(qJ(6));
t196 = t155 * t148;
t110 = -t153 * qJD(5) + (pkin(4) * t153 - qJ(5) * t156) * qJD(4);
t182 = pkin(10) * t191;
t92 = t148 * t110 + t144 * t182;
t168 = -t156 * pkin(4) - t153 * qJ(5);
t125 = -pkin(3) + t168;
t137 = pkin(10) * t200;
t104 = t144 * t125 + t137;
t193 = qJD(3) * t154;
t189 = qJD(4) * t157;
t188 = qJD(5) * t156;
t187 = qJD(6) * t152;
t186 = qJD(6) * t153;
t185 = qJD(6) * t155;
t184 = -0.2e1 * pkin(3) * qJD(4);
t183 = pkin(10) * t207;
t140 = pkin(10) * t190;
t179 = t153 * t204;
t177 = t144 * t190;
t176 = t146 * t193;
t174 = t153 * t190;
t7 = -t144 * t14 + t148 * t24;
t15 = -t144 * t27 + t148 * t31;
t173 = -t153 * t53 + t156 * t48;
t172 = -0.2e1 * t151 * t194;
t39 = t56 * t144 - t83 * t148;
t171 = t39 * pkin(11) - t8;
t169 = 0.2e1 * (t144 ^ 2 + t148 ^ 2) * qJD(5);
t58 = -t144 * t218 + t67 * t148;
t10 = t66 * pkin(5) - t58 * pkin(11) + t15;
t57 = t67 * t144 + t148 * t218;
t12 = -t57 * pkin(11) + t16;
t4 = t152 * t10 + t155 * t12;
t96 = qJD(4) * t179 - t150 * t190 - t156 * t175;
t73 = t144 * t96 + t148 * t176;
t74 = t144 * t176 - t148 * t96;
t167 = -t73 * t144 + t74 * t148;
t105 = t144 * t110;
t93 = -t148 * t182 + t105;
t166 = -t92 * t144 + t93 * t148;
t32 = t152 * t58 + t155 * t57;
t33 = -t152 * t57 + t155 * t58;
t119 = t148 * t125;
t87 = -pkin(11) * t201 + t119 + (-pkin(10) * t144 - pkin(5)) * t156;
t98 = -pkin(11) * t208 + t104;
t62 = t152 * t87 + t155 * t98;
t115 = t153 * t150 + t156 * t204;
t94 = -t144 * t115 - t148 * t203;
t95 = t148 * t115 - t144 * t203;
t64 = t152 * t94 + t155 * t95;
t165 = -qJ(5) * t55 - qJD(5) * t66;
t128 = t213 * t144;
t129 = t213 * t148;
t100 = -t152 * t128 + t155 * t129;
t121 = t155 * t144 + t152 * t148;
t120 = -t196 + t197;
t28 = pkin(4) * t218 - t173;
t163 = pkin(5) * t153 - pkin(11) * t200;
t162 = t153 * t83 - t190 * t218;
t161 = -t156 * t83 - t191 * t218;
t160 = -pkin(10) * t201 - pkin(11) * t207;
t40 = t83 * t144 + t56 * t148;
t159 = t55 * pkin(5) - t40 * pkin(11) + t7;
t123 = (pkin(5) * t144 + pkin(10)) * t153;
t116 = pkin(5) * t177 + t140;
t114 = -t156 * t150 + t179;
t113 = t121 * qJD(6);
t112 = t120 * qJD(6);
t109 = t120 * t153;
t108 = t121 * t153;
t103 = t119 - t183;
t99 = -t155 * t128 - t152 * t129;
t97 = t115 * qJD(4) + t153 * t175;
t76 = t121 * t190 + t185 * t201 - t186 * t197;
t75 = -t120 * t190 - t121 * t186;
t72 = -t121 * qJD(5) - t100 * qJD(6);
t71 = t128 * t185 - qJD(5) * t196 + (qJD(5) * t144 + qJD(6) * t129) * t152;
t63 = -t152 * t95 + t155 * t94;
t61 = -t152 * t98 + t155 * t87;
t37 = -t152 * t105 + t155 * t92 - t62 * qJD(6) + (-t152 * t160 + t155 * t163) * qJD(4);
t36 = t98 * t187 - t152 * (t163 * qJD(4) + t92) - t155 * (t160 * qJD(4) + t105) - t87 * t185;
t35 = -t64 * qJD(6) - t152 * t74 + t155 * t73;
t34 = -t152 * t73 - t155 * t74 - t94 * t185 + t95 * t187;
t25 = t57 * pkin(5) + t28;
t19 = t33 * qJD(6) + t152 * t40 + t155 * t39;
t18 = -t32 * qJD(6) - t152 * t39 + t155 * t40;
t11 = t39 * pkin(5) + t17;
t3 = t155 * t10 - t152 * t12;
t2 = -t4 * qJD(6) + t152 * t171 + t155 * t159;
t1 = -t10 * t185 + t12 * t187 - t152 * t159 + t155 * t171;
t5 = [0, 0, 0, t145 * t172, t149 * t172, 0.2e1 * (t145 ^ 2 + t149 ^ 2) * t147 ^ 2 * qJD(2), 0.2e1 * (t195 * t149 + (qJ(2) * t206 - t136) * t145) * t194, 0.2e1 * t89 * t82, 0.2e1 * t218 * t82 - 0.2e1 * t89 * t83, -0.2e1 * t82 * t111, t111 * t216, 0, 0.2e1 * t44 * t111 - 0.2e1 * t170 * t218 + 0.2e1 * t65 * t83, -0.2e1 * t43 * t111 + 0.2e1 * t89 * t170 + 0.2e1 * t65 * t82, 0.2e1 * t67 * t56, -0.2e1 * t67 * t55 - 0.2e1 * t56 * t66, -0.2e1 * t218 * t56 + 0.2e1 * t67 * t83, 0.2e1 * t218 * t55 - 0.2e1 * t66 * t83, -t218 * t216, 0.2e1 * t173 * t83 - 0.2e1 * t21 * t218 + 0.2e1 * t44 * t66 + 0.2e1 * t52 * t55, -0.2e1 * t20 * t218 - 0.2e1 * t212 * t83 + 0.2e1 * t44 * t67 + 0.2e1 * t52 * t56, 0.2e1 * t15 * t55 + 0.2e1 * t17 * t57 + 0.2e1 * t28 * t39 + 0.2e1 * t7 * t66, -0.2e1 * t16 * t55 + 0.2e1 * t17 * t58 + 0.2e1 * t28 * t40 - 0.2e1 * t8 * t66, -0.2e1 * t15 * t40 - 0.2e1 * t16 * t39 - 0.2e1 * t8 * t57 - 0.2e1 * t7 * t58, 0.2e1 * t15 * t7 + 0.2e1 * t16 * t8 + 0.2e1 * t28 * t17, 0.2e1 * t33 * t18, -0.2e1 * t18 * t32 - 0.2e1 * t33 * t19, 0.2e1 * t18 * t66 + 0.2e1 * t33 * t55, -0.2e1 * t19 * t66 - 0.2e1 * t32 * t55, 0.2e1 * t66 * t55, 0.2e1 * t11 * t32 + 0.2e1 * t25 * t19 + 0.2e1 * t2 * t66 + 0.2e1 * t3 * t55, 0.2e1 * t1 * t66 + 0.2e1 * t11 * t33 + 0.2e1 * t25 * t18 - 0.2e1 * t4 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111 * t176 + t150 * t83, t111 * t175 + t150 * t82, 0, 0, 0, 0, 0, -t114 * t83 + t97 * t218 + (-t157 * t55 + t66 * t193) * t146, -t115 * t83 - t96 * t218 + (-t157 * t56 + t67 * t193) * t146, t114 * t39 + t94 * t55 + t97 * t57 + t73 * t66, t114 * t40 - t95 * t55 + t97 * t58 - t74 * t66, -t95 * t39 - t94 * t40 - t74 * t57 - t73 * t58, t17 * t114 + t15 * t73 + t16 * t74 + t28 * t97 + t7 * t94 + t8 * t95, 0, 0, 0, 0, 0, t114 * t19 + t97 * t32 + t35 * t66 + t63 * t55, t114 * t18 + t97 * t33 + t34 * t66 - t64 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t114 * t97 + 0.2e1 * t94 * t73 + 0.2e1 * t95 * t74, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, -t83, 0, -t44, t43, t56 * t153 + t67 * t190, -t153 * t55 + t56 * t156 + (-t153 * t67 - t156 * t66) * qJD(4), t162, -t161, 0, -pkin(3) * t55 - t162 * pkin(10) - t44 * t156 + t52 * t191, -pkin(3) * t56 + t161 * pkin(10) + t44 * t153 + t52 * t190, t103 * t55 - t7 * t156 + t92 * t66 + (pkin(10) * t39 + t210) * t153 + (t15 * t153 + (pkin(10) * t57 + t144 * t28) * t156) * qJD(4), -t104 * t55 + t8 * t156 - t93 * t66 + (pkin(10) * t40 + t209) * t153 + (-t153 * t16 + (pkin(10) * t58 + t148 * t28) * t156) * qJD(4), -t103 * t40 - t104 * t39 - t93 * t57 - t92 * t58 + (-t144 * t8 - t148 * t7) * t153 + (-t144 * t16 - t148 * t15) * t190, t7 * t103 + t8 * t104 + t15 * t92 + t16 * t93 + (t153 * t17 + t190 * t28) * pkin(10), -t18 * t109 + t33 * t75, -t18 * t108 + t109 * t19 - t75 * t32 - t33 * t76, -t109 * t55 - t18 * t156 + t191 * t33 + t75 * t66, -t108 * t55 + t19 * t156 - t191 * t32 - t76 * t66, -t55 * t156 + t191 * t66, t11 * t108 + t116 * t32 + t123 * t19 - t2 * t156 + t191 * t3 + t25 * t76 + t37 * t66 + t61 * t55, -t1 * t156 - t11 * t109 + t116 * t33 + t123 * t18 - t191 * t4 + t25 * t75 + t36 * t66 - t62 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t175, 0, 0, 0, 0, 0 (-t153 * t189 - t156 * t193) * t146 (t153 * t193 - t156 * t189) * t146, t97 * t208 - t73 * t156 + (t114 * t207 + t153 * t94) * qJD(4), t97 * t201 + t74 * t156 + (t114 * t200 - t153 * t95) * qJD(4) (-t144 * t74 - t148 * t73) * t153 + (-t144 * t95 - t148 * t94) * t190, t73 * t103 + t74 * t104 + t94 * t92 + t95 * t93 + (t114 * t190 + t153 * t97) * pkin(10), 0, 0, 0, 0, 0, t97 * t108 + t114 * t76 - t35 * t156 + t191 * t63, -t97 * t109 + t114 * t75 - t34 * t156 - t191 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t174, 0.2e1 * (-t153 ^ 2 + t156 ^ 2) * qJD(4), 0, 0, 0, t153 * t184, t156 * t184, -0.2e1 * t92 * t156 + 0.2e1 * (t103 + 0.2e1 * t183) * t191, 0.2e1 * t93 * t156 + 0.2e1 * (-t104 + 0.2e1 * t137) * t191, 0.2e1 * (-t144 * t93 - t148 * t92) * t153 + 0.2e1 * (-t103 * t148 - t104 * t144) * t190, 0.2e1 * pkin(10) ^ 2 * t174 + 0.2e1 * t103 * t92 + 0.2e1 * t104 * t93, -0.2e1 * t109 * t75, -0.2e1 * t75 * t108 + 0.2e1 * t109 * t76, -0.2e1 * t109 * t191 - 0.2e1 * t75 * t156, -0.2e1 * t108 * t191 + 0.2e1 * t76 * t156, -0.2e1 * t174, 0.2e1 * t116 * t108 + 0.2e1 * t123 * t76 - 0.2e1 * t37 * t156 + 0.2e1 * t191 * t61, -0.2e1 * t116 * t109 + 0.2e1 * t123 * t75 - 0.2e1 * t36 * t156 - 0.2e1 * t191 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t55, t83, t21, t20, -pkin(4) * t39 + t144 * t165 - t209, -pkin(4) * t40 + t148 * t165 + t210 (-qJ(5) * t39 - qJD(5) * t57 + t8) * t148 + (qJ(5) * t40 + qJD(5) * t58 - t7) * t144, -t17 * pkin(4) + (-t144 * t15 + t148 * t16) * qJD(5) + (-t7 * t144 + t8 * t148) * qJ(5), -t33 * t112 + t18 * t121, t112 * t32 - t33 * t113 - t18 * t120 - t121 * t19, -t112 * t66 + t121 * t55, -t113 * t66 - t120 * t55, 0, t11 * t120 + t25 * t113 + t139 * t19 + t99 * t55 + t72 * t66, -t100 * t55 + t11 * t121 - t25 * t112 + t139 * t18 + t71 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, t96, -t97 * t148, t97 * t144, t167, -t97 * pkin(4) + (-t144 * t94 + t148 * t95) * qJD(5) + t167 * qJ(5), 0, 0, 0, 0, 0, t114 * t113 + t97 * t120, -t114 * t112 + t97 * t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, -t191, 0, -t140, t182, t144 * t188 + (t144 * t168 - t137) * qJD(4), t148 * t188 + (t148 * t168 + t183) * qJD(4), t166, -pkin(4) * t140 + (-t103 * t144 + t104 * t148) * qJD(5) + t166 * qJ(5), t109 * t112 + t75 * t121, t112 * t108 + t109 * t113 - t75 * t120 - t121 * t76, t112 * t156 + t121 * t191, t113 * t156 - t120 * t191, 0, t123 * t113 + t116 * t120 + t139 * t76 - t72 * t156 + t191 * t99, -t100 * t191 - t123 * t112 + t116 * t121 + t139 * t75 - t71 * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, qJ(5) * t169, -0.2e1 * t121 * t112, 0.2e1 * t112 * t120 - 0.2e1 * t121 * t113, 0, 0, 0, t113 * t215, -t112 * t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t40, 0, t17, 0, 0, 0, 0, 0, t19, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t148 * t190, 0, t140, 0, 0, 0, 0, 0, t76, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, -t19, t55, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t76, t191, t37, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112, -t113, 0, t72, t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
