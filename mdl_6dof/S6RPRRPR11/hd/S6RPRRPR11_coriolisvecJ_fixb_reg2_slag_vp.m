% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR11_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:44:33
% EndTime: 2019-03-09 05:45:09
% DurationCPUTime: 16.10s
% Computational Cost: add. (36436->683), mult. (120311->968), div. (0->0), fcn. (103507->14), ass. (0->284)
t298 = sin(qJ(3));
t292 = sin(pkin(12));
t293 = sin(pkin(6));
t379 = qJD(1) * t293;
t367 = t292 * t379;
t409 = sin(pkin(7));
t411 = cos(pkin(6));
t336 = t409 * t411;
t410 = cos(pkin(7));
t430 = cos(qJ(3));
t342 = t410 * t430;
t295 = cos(pkin(12));
t394 = t293 * t295;
t433 = -t430 * t336 - t342 * t394;
t441 = t433 * qJD(1);
t210 = t298 * t367 + t441;
t208 = qJD(4) + t210;
t361 = t298 * t410;
t313 = t292 * t361 - t295 * t430;
t309 = t293 * t313;
t236 = qJD(1) * t309;
t341 = t409 * t430;
t447 = qJD(3) * t341 + t236;
t220 = t293 * (t292 * t430 + t295 * t361) + t298 * t336;
t214 = t220 * qJD(1);
t297 = sin(qJ(4));
t299 = cos(qJ(4));
t337 = t411 * t410;
t354 = qJD(1) * t409;
t340 = t293 * t354;
t266 = t295 * t340;
t373 = qJD(3) - t266;
t310 = -qJD(1) * t337 - t373;
t184 = t299 * t214 - t297 * t310;
t291 = sin(pkin(13));
t294 = cos(pkin(13));
t154 = t184 * t294 + t208 * t291;
t296 = sin(qJ(6));
t429 = cos(qJ(6));
t178 = t291 * t184;
t435 = t208 * t294 - t178;
t322 = t429 * t435;
t87 = -t154 * t296 + t322;
t452 = t87 ^ 2;
t237 = t299 * t310;
t182 = t214 * t297 + t237;
t181 = qJD(6) + t182;
t451 = t181 * t87;
t279 = qJ(2) * t394;
t355 = qJD(1) * t411;
t345 = pkin(1) * t355;
t245 = qJD(1) * t279 + t292 * t345;
t304 = (t394 * t410 + t336) * pkin(9);
t201 = qJD(1) * t304 + t245;
t277 = t295 * t345;
t395 = t292 * t293;
t305 = t411 * pkin(2) + (-pkin(9) * t410 - qJ(2)) * t395;
t209 = qJD(1) * t305 + t277;
t238 = (-pkin(9) * t292 * t409 - pkin(2) * t295 - pkin(1)) * t293;
t230 = qJD(1) * t238 + qJD(2);
t146 = t298 * (t209 * t410 + t230 * t409) + t430 * t201;
t450 = -t297 * qJD(5) - t146 + t208 * (pkin(4) * t297 - qJ(5) * t299);
t88 = t154 * t429 + t296 * t435;
t449 = t88 ^ 2;
t360 = t298 * t409;
t252 = t297 * t360 - t299 * t410;
t329 = t292 * t340;
t383 = qJD(4) * t252 + t297 * t329 - t299 * t447;
t311 = t292 * t342 + t295 * t298;
t308 = t293 * t311;
t235 = qJD(1) * t308;
t323 = qJD(3) * t360 - t235;
t376 = qJD(4) * t297;
t372 = pkin(10) * t376;
t174 = pkin(3) * t214 + pkin(10) * t210;
t434 = -t298 * t201 + t209 * t342 + t230 * t341;
t92 = t297 * t174 + t299 * t434;
t81 = qJ(5) * t214 + t92;
t414 = t450 * t294 + (t372 + t81) * t291;
t448 = t291 * t450 - t294 * t81;
t391 = t294 * t299;
t170 = -t210 * t391 + t214 * t291;
t428 = pkin(5) * t297;
t446 = pkin(11) * t170 + t210 * t428 + (-pkin(11) * t391 + t428) * qJD(4) + t414;
t396 = t291 * t299;
t169 = -t210 * t396 - t294 * t214;
t392 = t294 * t297;
t445 = pkin(11) * t169 + (-pkin(10) * t392 - pkin(11) * t396) * qJD(4) + t448;
t375 = qJD(4) * t299;
t443 = -t291 * t375 + t169;
t442 = -t294 * t375 + t170;
t385 = t291 * t383 + t294 * t323;
t384 = -t291 * t323 + t294 * t383;
t369 = pkin(1) * t411;
t381 = t292 * t369 + t279;
t216 = t304 + t381;
t282 = t295 * t369;
t221 = t282 + t305;
t156 = t430 * t216 + (t410 * t221 + t409 * t238) * t298;
t413 = -t294 * t372 + t448;
t307 = qJD(2) * t309;
t111 = -qJD(1) * t307 + qJD(3) * t434;
t175 = -t209 * t409 + t410 * t230;
t116 = t210 * pkin(3) - t214 * pkin(10) + t175;
t119 = -pkin(10) * t310 + t146;
t371 = t298 * t395;
t346 = qJD(3) * t371;
t199 = qJD(1) * t346 + qJD(3) * t441;
t213 = t220 * qJD(3);
t200 = qJD(1) * t213;
t353 = qJD(2) * t409;
t328 = t353 * t395;
t163 = t200 * pkin(3) + t199 * pkin(10) + qJD(1) * t328;
t37 = t299 * t111 + t116 * t375 - t119 * t376 + t297 * t163;
t68 = t299 * t116 - t297 * t119;
t440 = -t208 * t68 + t37;
t38 = -t297 * t111 - t116 * t376 - t119 * t375 + t299 * t163;
t69 = t116 * t297 + t119 * t299;
t439 = -t208 * t69 - t38;
t249 = t394 * t409 - t337;
t187 = t220 * t299 - t249 * t297;
t212 = qJD(3) * t433 + t346;
t161 = qJD(4) * t187 - t212 * t297;
t377 = qJD(4) * t184;
t151 = -t297 * t199 + t377;
t186 = t220 * t297 + t249 * t299;
t98 = t151 * t186;
t438 = t161 * t182 + t98;
t437 = t208 * t297;
t436 = t293 ^ 2 * (t292 ^ 2 + t295 ^ 2);
t155 = -t298 * t216 + t221 * t342 + t238 * t341;
t253 = t297 * t410 + t299 * t360;
t382 = qJD(4) * t253 + t297 * t447 + t299 * t329;
t362 = qJD(6) * t429;
t374 = qJD(6) * t296;
t432 = -t291 * t374 + t294 * t362;
t331 = qJ(5) * t200 + qJD(5) * t208;
t28 = t331 + t37;
t306 = qJD(2) * t308;
t112 = qJD(1) * t306 + qJD(3) * t146;
t150 = qJD(4) * t237 + t299 * t199 + t214 * t376;
t55 = t151 * pkin(4) + t150 * qJ(5) - t184 * qJD(5) + t112;
t19 = t294 * t28 + t291 * t55;
t148 = t291 * t150;
t351 = t200 * t294 + t148;
t11 = pkin(11) * t351 + t19;
t65 = qJ(5) * t208 + t69;
t118 = pkin(3) * t310 - t434;
t75 = t182 * pkin(4) - t184 * qJ(5) + t118;
t30 = -t291 * t65 + t294 * t75;
t22 = pkin(5) * t182 - pkin(11) * t154 + t30;
t31 = t291 * t75 + t294 * t65;
t24 = pkin(11) * t435 + t31;
t324 = -t22 * t429 + t296 * t24;
t108 = -t150 * t294 + t200 * t291;
t18 = -t28 * t291 + t294 * t55;
t8 = pkin(5) * t151 - pkin(11) * t108 + t18;
t1 = -qJD(6) * t324 + t11 * t429 + t296 * t8;
t431 = t182 ^ 2;
t427 = t88 * t87;
t426 = pkin(11) + qJ(5);
t219 = t371 + t433;
t131 = qJD(3) * t155 - t307;
t185 = -t221 * t409 + t410 * t238;
t137 = t219 * pkin(3) - t220 * pkin(10) + t185;
t144 = -pkin(10) * t249 + t156;
t167 = t213 * pkin(3) + t212 * pkin(10) + t328;
t48 = t299 * t131 + t137 * t375 - t144 * t376 + t297 * t167;
t36 = qJ(5) * t213 + qJD(5) * t219 + t48;
t132 = qJD(3) * t156 + t306;
t162 = -qJD(4) * t186 - t212 * t299;
t60 = t161 * pkin(4) - t162 * qJ(5) - t187 * qJD(5) + t132;
t21 = t291 * t60 + t294 * t36;
t77 = t297 * t137 + t299 * t144;
t71 = qJ(5) * t219 + t77;
t143 = t249 * pkin(3) - t155;
t83 = t186 * pkin(4) - t187 * qJ(5) + t143;
t42 = t291 * t83 + t294 * t71;
t32 = -t200 * pkin(4) - t38;
t423 = t32 * t291;
t422 = t32 * t294;
t269 = -pkin(4) * t299 - qJ(5) * t297 - pkin(3);
t257 = t294 * t269;
t217 = -pkin(11) * t392 + t257 + (-pkin(10) * t291 - pkin(5)) * t299;
t240 = pkin(10) * t391 + t291 * t269;
t229 = -pkin(11) * t291 * t297 + t240;
t176 = t217 * t429 - t296 * t229;
t421 = qJD(6) * t176 + t296 * t446 + t445 * t429;
t177 = t296 * t217 + t229 * t429;
t420 = -qJD(6) * t177 - t445 * t296 + t429 * t446;
t224 = -t291 * t253 - t294 * t341;
t225 = t294 * t253 - t291 * t341;
t179 = t224 * t429 - t296 * t225;
t419 = -qJD(6) * t179 - t296 * t385 + t384 * t429;
t272 = t426 * t291;
t273 = t426 * t294;
t232 = -t296 * t272 + t273 * t429;
t262 = t291 * t429 + t296 * t294;
t402 = t182 * t294;
t135 = pkin(4) * t184 + qJ(5) * t182;
t56 = t294 * t135 - t291 * t68;
t34 = pkin(5) * t184 + pkin(11) * t402 + t56;
t403 = t182 * t291;
t57 = t291 * t135 + t294 * t68;
t45 = pkin(11) * t403 + t57;
t418 = qJD(5) * t262 + qJD(6) * t232 - t296 * t45 + t34 * t429;
t231 = -t272 * t429 - t296 * t273;
t320 = -t296 * t291 + t294 * t429;
t417 = -qJD(5) * t320 - qJD(6) * t231 + t296 * t34 + t429 * t45;
t251 = t262 * qJD(6);
t416 = t251 * t297 - t296 * t443 + t429 * t442;
t415 = -t169 * t429 - t170 * t296 + t262 * t375 + t297 * t432;
t370 = pkin(5) * t291 + pkin(10);
t91 = t174 * t299 - t297 * t434;
t82 = -pkin(4) * t214 - t91;
t412 = -pkin(5) * t169 + t370 * t375 - t82;
t408 = t108 * t291;
t407 = t151 * t299;
t405 = t182 * t184;
t404 = t182 * t208;
t401 = t184 * t208;
t400 = t200 * t219;
t398 = t214 * t210;
t397 = t291 * t151;
t393 = t294 * t151;
t64 = -t208 * pkin(4) + qJD(5) - t68;
t389 = -qJD(5) + t64;
t180 = t296 * t224 + t225 * t429;
t388 = -qJD(6) * t180 + t296 * t384 + t385 * t429;
t387 = -t262 * t182 - t251;
t386 = -t320 * t182 - t432;
t378 = qJD(2) * t293;
t366 = t292 * t378;
t20 = -t291 * t36 + t294 * t60;
t41 = -t291 * t71 + t294 * t83;
t358 = t409 * t175;
t357 = t409 * t214;
t352 = t296 * t108 - t429 * t351;
t76 = t137 * t299 - t297 * t144;
t347 = t208 * t299;
t300 = qJD(1) ^ 2;
t343 = t293 * t300 * t411;
t334 = t351 * t294;
t333 = (-qJ(2) * t367 + t277) * t292 - t245 * t295;
t332 = t435 * qJD(4);
t330 = t112 * t341;
t49 = -t297 * t131 - t137 * t376 - t144 * t375 + t167 * t299;
t72 = -pkin(4) * t219 - t76;
t165 = t187 * t294 + t219 * t291;
t25 = pkin(5) * t186 - pkin(11) * t165 + t41;
t164 = t187 * t291 - t219 * t294;
t29 = -pkin(11) * t164 + t42;
t9 = t25 * t429 - t296 * t29;
t6 = t296 * t22 + t24 * t429;
t10 = t296 * t25 + t29 * t429;
t321 = -0.2e1 * t355 * t378;
t95 = -t296 * t164 + t165 * t429;
t318 = -pkin(10) * t200 + t118 * t208;
t39 = -qJD(6) * t322 - t429 * t108 + t154 * t374 - t296 * t351;
t316 = t182 * t437 - t407;
t44 = -pkin(4) * t213 - t49;
t314 = -t154 * t291 + t294 * t435;
t2 = -qJD(6) * t6 - t296 * t11 + t429 * t8;
t23 = -pkin(5) * t351 + t32;
t40 = qJD(6) * t88 + t352;
t287 = -pkin(5) * t294 - pkin(4);
t264 = t370 * t297;
t247 = t320 * t297;
t246 = t262 * t297;
t239 = -pkin(10) * t396 + t257;
t126 = t162 * t294 + t213 * t291;
t125 = t162 * t291 - t213 * t294;
t94 = t164 * t429 + t165 * t296;
t62 = -pkin(5) * t403 + t69;
t61 = pkin(5) * t164 + t72;
t52 = -pkin(5) * t435 + t64;
t47 = qJD(6) * t95 + t125 * t429 + t296 * t126;
t46 = t296 * t125 - t126 * t429 + t164 * t362 + t165 * t374;
t26 = pkin(5) * t125 + t44;
t15 = -pkin(11) * t125 + t21;
t12 = pkin(5) * t161 - pkin(11) * t126 + t20;
t4 = -qJD(6) * t10 + t12 * t429 - t296 * t15;
t3 = qJD(6) * t9 + t296 * t12 + t15 * t429;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292 * t321, t295 * t321, 0.2e1 * qJD(2) * qJD(1) * t436 ((t295 * t381 + (qJ(2) * t395 - t282) * t292) * qJD(1) - t333) * t378, -t199 * t220 - t212 * t214, t199 * t219 - t200 * t220 + t210 * t212 - t213 * t214, t199 * t249 + t212 * t310, t210 * t213 + t400, t200 * t249 + t213 * t310, 0, t132 * t310 + t112 * t249 + t185 * t200 + t175 * t213 + (t210 * t409 + t219 * t354) * t366, t131 * t310 + t111 * t249 - t185 * t199 - t175 * t212 + (t220 * t354 + t357) * t366, -t111 * t219 + t112 * t220 - t131 * t210 + t132 * t214 - t146 * t213 + t155 * t199 - t156 * t200 + t212 * t434, t111 * t156 - t112 * t155 + t146 * t131 - t434 * t132 + (t185 * t354 + t358) * t366, -t150 * t187 + t162 * t184, t150 * t186 - t151 * t187 - t161 * t184 - t162 * t182, -t150 * t219 + t162 * t208 + t184 * t213 + t187 * t200, t438, -t151 * t219 - t161 * t208 - t182 * t213 - t186 * t200, t208 * t213 + t400, t112 * t186 + t118 * t161 + t132 * t182 + t143 * t151 + t200 * t76 + t208 * t49 + t213 * t68 + t219 * t38, t112 * t187 + t118 * t162 + t132 * t184 - t143 * t150 - t200 * t77 - t208 * t48 - t213 * t69 - t219 * t37, t150 * t76 - t151 * t77 - t161 * t69 - t162 * t68 - t182 * t48 - t184 * t49 - t186 * t37 - t187 * t38, t112 * t143 + t118 * t132 + t37 * t77 + t38 * t76 + t48 * t69 + t49 * t68, t108 * t165 + t126 * t154, -t108 * t164 - t154 * t125 + t126 * t435 + t165 * t351, t108 * t186 + t126 * t182 + t151 * t165 + t154 * t161, -t125 * t435 - t164 * t351, -t125 * t182 - t164 * t151 + t161 * t435 + t186 * t351, t438, t64 * t125 + t41 * t151 + t30 * t161 + t32 * t164 + t18 * t186 + t20 * t182 - t351 * t72 - t435 * t44, t108 * t72 + t126 * t64 - t151 * t42 + t154 * t44 - t161 * t31 + t165 * t32 - t182 * t21 - t186 * t19, -t41 * t108 - t31 * t125 - t30 * t126 - t20 * t154 - t19 * t164 - t18 * t165 + t21 * t435 + t351 * t42, t18 * t41 + t19 * t42 + t20 * t30 + t21 * t31 + t32 * t72 + t44 * t64, -t39 * t95 - t46 * t88, t39 * t94 - t40 * t95 - t46 * t87 - t47 * t88, t151 * t95 + t161 * t88 - t181 * t46 - t186 * t39, t40 * t94 - t47 * t87, -t151 * t94 + t161 * t87 - t181 * t47 - t186 * t40, t161 * t181 + t98, t151 * t9 - t161 * t324 + t181 * t4 + t186 * t2 + t23 * t94 - t26 * t87 + t40 * t61 + t47 * t52, -t1 * t186 - t10 * t151 - t161 * t6 - t181 * t3 + t23 * t95 + t26 * t88 - t39 * t61 - t46 * t52, -t1 * t94 - t10 * t40 - t2 * t95 + t3 * t87 - t324 * t46 + t39 * t9 - t4 * t88 - t47 * t6, t1 * t10 + t2 * t9 + t23 * t61 + t26 * t52 + t3 * t6 - t324 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292 * t343, t295 * t343, -t300 * t436, t333 * t379, 0, 0, 0, 0, 0, 0, t200 * t410 - t210 * t329 + t310 * t323, -t199 * t410 - t214 * t329 + t310 * t447, t199 * t341 - t200 * t360 - t236 * t210 - t235 * t214 + (-t210 * t341 + t298 * t357) * qJD(3), -t330 + t111 * t360 + t434 * t235 + t146 * t236 + (t146 * t341 - t360 * t434) * qJD(3) + (t353 * t410 - t358) * t367, 0, 0, 0, 0, 0, 0, -t151 * t341 + t182 * t323 - t252 * t200 - t208 * t382, t150 * t341 + t184 * t323 - t253 * t200 + t208 * t383, -t252 * t150 - t253 * t151 + t182 * t383 + t184 * t382, t118 * t323 - t38 * t252 + t37 * t253 - t382 * t68 - t383 * t69 - t330, 0, 0, 0, 0, 0, 0, t224 * t151 + t182 * t385 - t252 * t351 - t382 * t435, t252 * t108 - t225 * t151 + t154 * t382 + t182 * t384, -t224 * t108 - t154 * t385 + t225 * t351 - t384 * t435, t18 * t224 + t19 * t225 + t32 * t252 + t30 * t385 - t31 * t384 + t382 * t64, 0, 0, 0, 0, 0, 0, t179 * t151 + t181 * t388 + t252 * t40 - t382 * t87, -t180 * t151 + t181 * t419 - t252 * t39 + t382 * t88, t179 * t39 - t180 * t40 - t388 * t88 - t419 * t87, t1 * t180 + t2 * t179 + t23 * t252 - t324 * t388 + t382 * t52 - t419 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, -t210 ^ 2 + t214 ^ 2, -t210 * t310 - t199, -t398, t214 * t373 + (t214 * t337 - t213) * qJD(1), 0, -t146 * t266 - t175 * t214 + (t146 * t337 - t311 * t378) * qJD(1), -t434 * t266 + t175 * t210 + (t313 * t378 + t337 * t434) * qJD(1), 0, 0, -t150 * t297 + t184 * t347 (-t150 - t404) * t299 + (-t151 - t401) * t297, -t184 * t214 + t297 * t200 + t208 * t347, t316, t182 * t214 + t299 * t200 - t208 * t437, -t208 * t214, -pkin(3) * t151 - t112 * t299 - t146 * t182 - t68 * t214 + (-pkin(10) * t375 - t91) * t208 + t318 * t297, pkin(3) * t150 + t112 * t297 - t146 * t184 + t69 * t214 + (t92 + t372) * t208 + t318 * t299, t92 * t182 + t91 * t184 + ((-t151 + t377) * pkin(10) + t440) * t299 + ((qJD(4) * t182 - t150) * pkin(10) + t439) * t297, -t112 * pkin(3) - t118 * t146 - t68 * t91 - t69 * t92 + (-t38 * t297 + t37 * t299 + (-t297 * t69 - t299 * t68) * qJD(4)) * pkin(10), t108 * t392 - t154 * t442, -t170 * t435 + t154 * t169 + (t334 - t408) * t297 + t314 * t375, -t108 * t299 - t442 * t182 + (t154 * t208 + t393) * t297, t435 * t169 + (-t297 * t351 - t299 * t332) * t291, -t351 * t299 + t443 * t182 + (t210 * t435 + t332 - t397) * t297, t316, t239 * t151 + t82 * t435 - t64 * t169 + t414 * t182 + (-t18 + (-pkin(10) * t435 + t64 * t291) * qJD(4)) * t299 + (-pkin(10) * t351 + t208 * t30 + t423) * t297, -t240 * t151 - t82 * t154 - t64 * t170 - t413 * t182 + (t19 + (pkin(10) * t154 + t294 * t64) * qJD(4)) * t299 + (pkin(10) * t108 - t208 * t31 + t422) * t297, t240 * t351 - t239 * t108 + t31 * t169 + t30 * t170 + (-t18 * t294 - t19 * t291) * t297 - t414 * t154 + (-t291 * t31 - t294 * t30) * t375 + t413 * t435, t18 * t239 + t19 * t240 - t64 * t82 + t413 * t31 + t414 * t30 + (t297 * t32 + t375 * t64) * pkin(10), -t39 * t247 - t416 * t88, t39 * t246 - t247 * t40 - t415 * t88 - t416 * t87, t247 * t151 - t181 * t416 + t39 * t299 + t437 * t88, t40 * t246 - t415 * t87, -t246 * t151 - t181 * t415 + t40 * t299 + t437 * t87, t181 * t437 - t407, t176 * t151 + t181 * t420 - t2 * t299 + t23 * t246 + t264 * t40 - t324 * t437 - t412 * t87 + t415 * t52, t1 * t299 - t177 * t151 - t181 * t421 + t23 * t247 - t264 * t39 + t412 * t88 - t416 * t52 - t437 * t6, -t1 * t246 + t176 * t39 - t177 * t40 - t2 * t247 - t324 * t416 - t415 * t6 - t420 * t88 + t421 * t87, t1 * t177 + t2 * t176 + t23 * t264 - t324 * t420 + t412 * t52 + t421 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t184 ^ 2 - t431, -t150 + t404, -t405, t401 - t151, t200, -t118 * t184 - t439, t118 * t182 - t440, 0, 0, t154 * t402 + t408, t108 * t294 + t182 * t314 + t291 * t351, -t154 * t184 + t294 * t431 + t397, -t403 * t435 + t334, -t184 * t435 - t291 * t431 + t393, -t405, -qJ(5) * t397 + pkin(4) * t351 - t422 - t30 * t184 + t69 * t435 + (t291 * t389 - t56) * t182, -qJ(5) * t393 - pkin(4) * t108 - t69 * t154 + t31 * t184 + t423 + (t294 * t389 + t57) * t182, t56 * t154 + t57 * t178 + (qJ(5) * t148 - qJD(5) * t178 - t30 * t182 - t57 * t208 + t294 * t331 + t19) * t294 + (qJ(5) * t108 + qJD(5) * t154 - t182 * t31 - t18) * t291, -t32 * pkin(4) - t30 * t56 - t31 * t57 - t64 * t69 + (-t291 * t30 + t294 * t31) * qJD(5) + (-t18 * t291 + t19 * t294) * qJ(5), -t39 * t262 - t386 * t88, -t262 * t40 - t320 * t39 - t386 * t87 + t387 * t88, t262 * t151 - t181 * t386 - t88 * t184, -t320 * t40 + t387 * t87, t151 * t320 + t181 * t387 - t184 * t87, -t181 * t184, t231 * t151 - t181 * t418 + t184 * t324 - t23 * t320 + t287 * t40 - t387 * t52 + t62 * t87, -t232 * t151 + t181 * t417 + t6 * t184 + t23 * t262 - t287 * t39 - t386 * t52 - t62 * t88, t1 * t320 - t2 * t262 + t231 * t39 - t232 * t40 - t324 * t386 + t387 * t6 - t417 * t87 + t418 * t88, t1 * t232 + t2 * t231 + t23 * t287 + t324 * t418 - t417 * t6 - t52 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154 * t182 - t351, t182 * t435 + t108, -t154 ^ 2 - t435 ^ 2, t154 * t30 - t31 * t435 + t32, 0, 0, 0, 0, 0, 0, t88 * t181 + t40, -t39 + t451, -t449 - t452, -t324 * t88 - t6 * t87 + t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, t449 - t452, -t39 - t451, t427, -t352 + (-qJD(6) + t181) * t88, t151, t6 * t181 - t52 * t88 + t2, -t181 * t324 - t52 * t87 - t1, 0, 0;];
tauc_reg  = t5;
