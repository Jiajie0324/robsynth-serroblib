% Calculate time derivative of joint inertia matrix for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% MqD [6x6]
%   time derivative of inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S6RPRRPR11_inertiaDJ_slag_vp11(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_inertiaDJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_inertiaDJ_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_inertiaDJ_slag_vp1: pkin has to be [13x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRRPR11_inertiaDJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRRPR11_inertiaDJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRRPR11_inertiaDJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_time_derivative_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:39:14
% EndTime: 2019-03-09 05:40:12
% DurationCPUTime: 30.14s
% Computational Cost: add. (171277->1250), mult. (487251->1595), div. (0->0), fcn. (584157->16), ass. (0->507)
t477 = sin(pkin(6));
t481 = sin(qJ(3));
t621 = cos(pkin(12));
t622 = cos(pkin(7));
t525 = t622 * t621;
t620 = sin(pkin(7));
t623 = cos(pkin(6));
t527 = t623 * t620;
t619 = sin(pkin(12));
t632 = cos(qJ(3));
t440 = t481 * t527 + (t481 * t525 + t619 * t632) * t477;
t546 = t477 * t620;
t454 = -t546 * t621 + t622 * t623;
t480 = sin(qJ(4));
t631 = cos(qJ(4));
t424 = t440 * t631 + t454 * t480;
t659 = t477 * (-t619 * t481 + t632 * t525) + t632 * t527;
t432 = t659 * qJD(3);
t385 = qJD(4) * t424 + t432 * t480;
t516 = -t440 * t480 + t454 * t631;
t386 = qJD(4) * t516 + t432 * t631;
t433 = t440 * qJD(3);
t316 = Icges(5,5) * t386 - Icges(5,6) * t385 + Icges(5,3) * t433;
t317 = Icges(5,4) * t386 - Icges(5,2) * t385 + Icges(5,6) * t433;
t318 = Icges(5,1) * t386 - Icges(5,4) * t385 + Icges(5,5) * t433;
t345 = Icges(5,5) * t424 + Icges(5,6) * t516 - Icges(5,3) * t659;
t346 = Icges(5,4) * t424 + Icges(5,2) * t516 - Icges(5,6) * t659;
t347 = Icges(5,1) * t424 + Icges(5,4) * t516 - Icges(5,5) * t659;
t110 = -t316 * t659 + t317 * t516 + t424 * t318 + t433 * t345 - t385 * t346 + t386 * t347;
t476 = sin(pkin(13));
t478 = cos(pkin(13));
t360 = -t386 * t476 + t433 * t478;
t612 = t433 * t476;
t361 = t386 * t478 + t612;
t247 = Icges(6,5) * t361 + Icges(6,6) * t360 + Icges(6,3) * t385;
t248 = Icges(6,4) * t361 + Icges(6,2) * t360 + Icges(6,6) * t385;
t249 = Icges(6,1) * t361 + Icges(6,4) * t360 + Icges(6,5) * t385;
t389 = -t424 * t476 - t478 * t659;
t611 = t659 * t476;
t390 = t424 * t478 - t611;
t297 = Icges(6,5) * t390 + Icges(6,6) * t389 - Icges(6,3) * t516;
t298 = Icges(6,4) * t390 + Icges(6,2) * t389 - Icges(6,6) * t516;
t299 = Icges(6,1) * t390 + Icges(6,4) * t389 - Icges(6,5) * t516;
t84 = -t247 * t516 + t389 * t248 + t390 * t249 + t385 * t297 + t360 * t298 + t361 * t299;
t663 = -t110 - t84;
t654 = t298 * t389 + t299 * t390 - t345 * t659 + t347 * t424 + (-t297 + t346) * t516;
t662 = t433 * t654;
t483 = cos(qJ(1));
t482 = sin(qJ(1));
t528 = t623 * t621;
t505 = t482 * t619 - t483 * t528;
t547 = t477 * t622;
t441 = -t483 * t547 + t505 * t620;
t500 = t505 * t622;
t529 = t483 * t546;
t526 = t623 * t619;
t504 = -t482 * t621 - t483 * t526;
t553 = t504 * t632;
t426 = -t553 + (-t500 - t529) * t481;
t400 = t426 * t631 + t441 * t480;
t493 = t632 * t500;
t520 = t632 * t546;
t425 = -t481 * t504 + t483 * t520 + t493;
t340 = -t400 * t476 + t425 * t478;
t614 = t425 * t476;
t341 = t400 * t478 + t614;
t518 = -t426 * t480 + t441 * t631;
t235 = Icges(6,5) * t341 + Icges(6,6) * t340 - Icges(6,3) * t518;
t237 = Icges(6,4) * t341 + Icges(6,2) * t340 - Icges(6,6) * t518;
t239 = Icges(6,1) * t341 + Icges(6,4) * t340 - Icges(6,5) * t518;
t115 = -t235 * t516 + t237 * t389 + t239 * t390;
t305 = Icges(5,5) * t400 + Icges(5,6) * t518 + Icges(5,3) * t425;
t307 = Icges(5,4) * t400 + Icges(5,2) * t518 + Icges(5,6) * t425;
t309 = Icges(5,1) * t400 + Icges(5,4) * t518 + Icges(5,5) * t425;
t161 = -t305 * t659 + t307 * t516 + t309 * t424;
t657 = t115 + t161;
t456 = -t482 * t526 + t483 * t621;
t506 = t482 * t528 + t483 * t619;
t498 = t506 * t622;
t428 = t456 * t632 + (t482 * t546 - t498) * t481;
t497 = t506 * t620;
t531 = t482 * t547;
t442 = t497 + t531;
t402 = t428 * t631 + t442 * t480;
t492 = t632 * t498;
t427 = t456 * t481 - t482 * t520 + t492;
t342 = -t402 * t476 + t427 * t478;
t613 = t427 * t476;
t343 = t402 * t478 + t613;
t517 = -t428 * t480 + t442 * t631;
t236 = Icges(6,5) * t343 + Icges(6,6) * t342 - Icges(6,3) * t517;
t238 = Icges(6,4) * t343 + Icges(6,2) * t342 - Icges(6,6) * t517;
t240 = Icges(6,1) * t343 + Icges(6,4) * t342 - Icges(6,5) * t517;
t116 = -t236 * t516 + t238 * t389 + t240 * t390;
t306 = Icges(5,5) * t402 + Icges(5,6) * t517 + Icges(5,3) * t427;
t308 = Icges(5,4) * t402 + Icges(5,2) * t517 + Icges(5,6) * t427;
t310 = Icges(5,1) * t402 + Icges(5,4) * t517 + Icges(5,5) * t427;
t162 = -t306 * t659 + t308 * t516 + t310 * t424;
t656 = t116 + t162;
t661 = t659 * t663 + t662;
t660 = t441 * pkin(9);
t451 = t504 * qJD(1);
t501 = qJD(1) * t505;
t494 = t622 * t501;
t514 = qJD(3) * t520;
t581 = qJD(1) * t481;
t519 = t546 * t581;
t577 = qJD(3) * t481;
t372 = -qJD(3) * t492 + t451 * t632 - t456 * t577 + t481 * t494 + t482 * t514 + t483 * t519;
t434 = t441 * qJD(1);
t294 = qJD(4) * t517 + t372 * t631 - t434 * t480;
t475 = pkin(13) + qJ(6);
t472 = sin(t475);
t473 = cos(t475);
t337 = t402 * t473 + t427 * t472;
t515 = qJD(1) * t520;
t371 = qJD(3) * t428 + t451 * t481 - t483 * t515 - t494 * t632;
t207 = -qJD(6) * t337 - t294 * t472 + t371 * t473;
t336 = -t402 * t472 + t427 * t473;
t208 = qJD(6) * t336 + t294 * t473 + t371 * t472;
t293 = qJD(4) * t402 + t372 * t480 + t434 * t631;
t124 = t208 * rSges(7,1) + t207 * rSges(7,2) + t293 * rSges(7,3);
t471 = pkin(5) * t478 + pkin(4);
t479 = -pkin(11) - qJ(5);
t616 = t371 * t476;
t655 = pkin(5) * t616 - t293 * t479 + t294 * t471 + t124;
t234 = t337 * rSges(7,1) + t336 * rSges(7,2) - rSges(7,3) * t517;
t653 = pkin(5) * t613 + t402 * t471 + t479 * t517 + t234;
t452 = t456 * qJD(1);
t374 = -qJD(3) * t493 + t452 * t632 + t482 * t519 - t483 * t514 - t498 * t581 + t504 * t577;
t435 = t442 * qJD(1);
t295 = qJD(4) * t400 + t374 * t480 - t435 * t631;
t286 = t295 * qJ(5);
t296 = qJD(4) * t518 + t374 * t631 + t435 * t480;
t652 = t296 * pkin(4) + t286;
t103 = -t235 * t517 + t237 * t342 + t239 * t343;
t104 = -t236 * t517 + t238 * t342 + t240 * t343;
t133 = -t297 * t517 + t298 * t342 + t299 * t343;
t155 = t305 * t427 + t307 * t517 + t309 * t402;
t156 = t306 * t427 + t308 * t517 + t310 * t402;
t175 = t345 * t427 + t346 * t517 + t347 * t402;
t228 = Icges(7,5) * t337 + Icges(7,6) * t336 - Icges(7,3) * t517;
t230 = Icges(7,4) * t337 + Icges(7,2) * t336 - Icges(7,6) * t517;
t232 = Icges(7,1) * t337 + Icges(7,4) * t336 - Icges(7,5) * t517;
t100 = -t228 * t517 + t230 * t336 + t232 * t337;
t382 = -t424 * t472 - t473 * t659;
t383 = t424 * t473 - t472 * t659;
t281 = Icges(7,5) * t383 + Icges(7,6) * t382 - Icges(7,3) * t516;
t282 = Icges(7,4) * t383 + Icges(7,2) * t382 - Icges(7,6) * t516;
t283 = Icges(7,1) * t383 + Icges(7,4) * t382 - Icges(7,5) * t516;
t131 = -t281 * t517 + t282 * t336 + t283 * t337;
t335 = t400 * t473 + t425 * t472;
t373 = t452 * t481 + qJD(1) * t492 - t529 * t577 - t482 * t515 + (-t481 * t500 - t553) * qJD(3);
t209 = -qJD(6) * t335 - t296 * t472 + t373 * t473;
t334 = -t400 * t472 + t425 * t473;
t210 = qJD(6) * t334 + t296 * t473 + t373 * t472;
t119 = Icges(7,5) * t210 + Icges(7,6) * t209 + Icges(7,3) * t295;
t121 = Icges(7,4) * t210 + Icges(7,2) * t209 + Icges(7,6) * t295;
t123 = Icges(7,1) * t210 + Icges(7,4) * t209 + Icges(7,5) * t295;
t227 = Icges(7,5) * t335 + Icges(7,6) * t334 - Icges(7,3) * t518;
t229 = Icges(7,4) * t335 + Icges(7,2) * t334 - Icges(7,6) * t518;
t231 = Icges(7,1) * t335 + Icges(7,4) * t334 - Icges(7,5) * t518;
t24 = -t119 * t517 + t121 * t336 + t123 * t337 + t207 * t229 + t208 * t231 + t227 * t293;
t118 = Icges(7,5) * t208 + Icges(7,6) * t207 + Icges(7,3) * t293;
t120 = Icges(7,4) * t208 + Icges(7,2) * t207 + Icges(7,6) * t293;
t122 = Icges(7,1) * t208 + Icges(7,4) * t207 + Icges(7,5) * t293;
t25 = -t118 * t517 + t120 * t336 + t122 * t337 + t207 * t230 + t208 * t232 + t228 * t293;
t303 = -qJD(6) * t383 - t386 * t472 + t433 * t473;
t304 = qJD(6) * t382 + t386 * t473 + t433 * t472;
t195 = Icges(7,5) * t304 + Icges(7,6) * t303 + Icges(7,3) * t385;
t196 = Icges(7,4) * t304 + Icges(7,2) * t303 + Icges(7,6) * t385;
t197 = Icges(7,1) * t304 + Icges(7,4) * t303 + Icges(7,5) * t385;
t52 = -t195 * t517 + t196 * t336 + t197 * t337 + t207 * t282 + t208 * t283 + t281 * t293;
t99 = -t227 * t517 + t229 * t336 + t231 * t337;
t3 = t100 * t371 + t131 * t433 + t24 * t425 + t25 * t427 + t373 * t99 - t52 * t659;
t255 = -t296 * t476 + t373 * t478;
t615 = t373 * t476;
t256 = t296 * t478 + t615;
t143 = Icges(6,5) * t256 + Icges(6,6) * t255 + Icges(6,3) * t295;
t145 = Icges(6,4) * t256 + Icges(6,2) * t255 + Icges(6,6) * t295;
t147 = Icges(6,1) * t256 + Icges(6,4) * t255 + Icges(6,5) * t295;
t253 = -t294 * t476 + t371 * t478;
t254 = t294 * t478 + t616;
t34 = -t143 * t517 + t145 * t342 + t147 * t343 + t235 * t293 + t237 * t253 + t239 * t254;
t142 = Icges(6,5) * t254 + Icges(6,6) * t253 + Icges(6,3) * t293;
t144 = Icges(6,4) * t254 + Icges(6,2) * t253 + Icges(6,6) * t293;
t146 = Icges(6,1) * t254 + Icges(6,4) * t253 + Icges(6,5) * t293;
t35 = -t142 * t517 + t144 * t342 + t146 * t343 + t236 * t293 + t238 * t253 + t240 * t254;
t183 = Icges(5,5) * t296 - Icges(5,6) * t295 + Icges(5,3) * t373;
t185 = Icges(5,4) * t296 - Icges(5,2) * t295 + Icges(5,6) * t373;
t187 = Icges(5,1) * t296 - Icges(5,4) * t295 + Icges(5,5) * t373;
t60 = t183 * t427 + t185 * t517 + t187 * t402 - t293 * t307 + t294 * t309 + t305 * t371;
t182 = Icges(5,5) * t294 - Icges(5,6) * t293 + Icges(5,3) * t371;
t184 = Icges(5,4) * t294 - Icges(5,2) * t293 + Icges(5,6) * t371;
t186 = Icges(5,1) * t294 - Icges(5,4) * t293 + Icges(5,5) * t371;
t61 = t182 * t427 + t184 * t517 + t186 * t402 - t293 * t308 + t294 * t310 + t306 * t371;
t68 = -t247 * t517 + t248 * t342 + t249 * t343 + t253 * t298 + t254 * t299 + t293 * t297;
t91 = -t293 * t346 + t294 * t347 + t316 * t427 + t317 * t517 + t318 * t402 + t345 * t371;
t650 = t3 - (t68 + t91) * t659 + (t133 + t175) * t433 + (t35 + t61) * t427 + (t34 + t60) * t425 + (t103 + t155) * t373 + (t104 + t156) * t371;
t101 = -t235 * t518 + t237 * t340 + t239 * t341;
t102 = -t236 * t518 + t238 * t340 + t240 * t341;
t132 = -t297 * t518 + t298 * t340 + t299 * t341;
t153 = t305 * t425 + t307 * t518 + t309 * t400;
t154 = t306 * t425 + t308 * t518 + t310 * t400;
t174 = t345 * t425 + t346 * t518 + t347 * t400;
t36 = -t143 * t518 + t145 * t340 + t147 * t341 + t235 * t295 + t237 * t255 + t239 * t256;
t37 = -t142 * t518 + t144 * t340 + t146 * t341 + t236 * t295 + t238 * t255 + t240 * t256;
t130 = -t281 * t518 + t282 * t334 + t283 * t335;
t26 = -t119 * t518 + t121 * t334 + t123 * t335 + t209 * t229 + t210 * t231 + t227 * t295;
t27 = -t118 * t518 + t120 * t334 + t122 * t335 + t209 * t230 + t210 * t232 + t228 * t295;
t53 = -t195 * t518 + t196 * t334 + t197 * t335 + t209 * t282 + t210 * t283 + t281 * t295;
t97 = -t227 * t518 + t229 * t334 + t231 * t335;
t98 = -t228 * t518 + t230 * t334 + t232 * t335;
t4 = t130 * t433 + t26 * t425 + t27 * t427 + t371 * t98 + t373 * t97 - t53 * t659;
t62 = t183 * t425 + t185 * t518 + t187 * t400 - t295 * t307 + t296 * t309 + t305 * t373;
t63 = t182 * t425 + t184 * t518 + t186 * t400 - t295 * t308 + t296 * t310 + t306 * t373;
t69 = -t247 * t518 + t248 * t340 + t249 * t341 + t255 * t298 + t256 * t299 + t295 * t297;
t92 = -t295 * t346 + t296 * t347 + t316 * t425 + t317 * t518 + t318 * t400 + t345 * t373;
t649 = t4 - (t69 + t92) * t659 + (t132 + t174) * t433 + (t37 + t63) * t427 + (t36 + t62) * t425 + (t101 + t153) * t373 + (t102 + t154) * t371;
t40 = -t143 * t516 + t145 * t389 + t147 * t390 + t235 * t385 + t237 * t360 + t239 * t361;
t41 = -t142 * t516 + t144 * t389 + t146 * t390 + t236 * t385 + t238 * t360 + t240 * t361;
t74 = -t183 * t659 + t185 * t516 + t187 * t424 + t305 * t433 - t307 * t385 + t309 * t386;
t75 = -t182 * t659 + t184 * t516 + t186 * t424 + t306 * t433 - t308 * t385 + t310 * t386;
t113 = -t227 * t516 + t229 * t382 + t231 * t383;
t114 = -t228 * t516 + t230 * t382 + t232 * t383;
t30 = -t119 * t516 + t121 * t382 + t123 * t383 + t227 * t385 + t229 * t303 + t231 * t304;
t31 = -t118 * t516 + t120 * t382 + t122 * t383 + t228 * t385 + t230 * t303 + t232 * t304;
t141 = -t281 * t516 + t282 * t382 + t283 * t383;
t67 = -t195 * t516 + t382 * t196 + t383 * t197 + t385 * t281 + t303 * t282 + t304 * t283;
t625 = t141 * t433 - t659 * t67;
t8 = t113 * t373 + t114 * t371 + t30 * t425 + t31 * t427 + t625;
t648 = t661 + t8 + (t41 + t75) * t427 + (t40 + t74) * t425 + t657 * t373 + t656 * t371;
t647 = 0.2e1 * t482;
t646 = -0.2e1 * t483;
t645 = m(7) / 0.2e1;
t42 = -t130 * t516 - t517 * t98 - t518 * t97;
t644 = t42 / 0.2e1;
t43 = -t100 * t517 - t131 * t516 - t518 * t99;
t643 = t43 / 0.2e1;
t642 = t293 / 0.2e1;
t641 = t295 / 0.2e1;
t640 = t385 / 0.2e1;
t639 = -t518 / 0.2e1;
t638 = -t517 / 0.2e1;
t637 = -t516 / 0.2e1;
t636 = t433 / 0.2e1;
t635 = t441 / 0.2e1;
t634 = t442 / 0.2e1;
t633 = t454 / 0.2e1;
t274 = t372 * rSges(4,1) - t371 * rSges(4,2) - t434 * rSges(4,3);
t275 = t374 * rSges(4,1) - t373 * rSges(4,2) + t435 * rSges(4,3);
t357 = rSges(4,1) * t426 - rSges(4,2) * t425 + rSges(4,3) * t441;
t358 = t428 * rSges(4,1) - t427 * rSges(4,2) + t442 * rSges(4,3);
t630 = m(4) * (-t274 * t441 + t275 * t442 - t357 * t434 - t358 * t435);
t474 = t483 * pkin(1);
t628 = -pkin(4) + t471;
t627 = -rSges(7,3) + t479;
t626 = t141 * t385 - t516 * t67;
t351 = Icges(4,5) * t426 - Icges(4,6) * t425 + Icges(4,3) * t441;
t618 = t351 * t442;
t352 = Icges(4,5) * t428 - Icges(4,6) * t427 + Icges(4,3) * t442;
t617 = t352 * t441;
t610 = t477 * t482;
t609 = t477 * t483;
t608 = -qJ(5) - t479;
t536 = t294 * pkin(4) + t293 * qJ(5);
t606 = -t536 + t655;
t524 = -t210 * rSges(7,1) - t209 * rSges(7,2);
t125 = t295 * rSges(7,3) - t524;
t569 = pkin(5) * t615;
t605 = -t295 * t479 + t296 * t628 + t125 - t286 + t569;
t148 = t254 * rSges(6,1) + t253 * rSges(6,2) + t293 * rSges(6,3);
t576 = t517 * qJD(5);
t192 = t536 - t576;
t604 = -t148 - t192;
t149 = t256 * rSges(6,1) + t255 * rSges(6,2) + t295 * rSges(6,3);
t391 = t518 * qJD(5);
t193 = -t391 + t652;
t603 = -t149 - t193;
t392 = t518 * qJ(5);
t328 = pkin(4) * t400 - t392;
t602 = t427 * t193 + t371 * t328;
t329 = t402 * pkin(4) - qJ(5) * t517;
t601 = -t192 * t659 + t433 * t329;
t313 = t372 * pkin(3) + t371 * pkin(10);
t280 = t454 * t313;
t600 = t454 * t192 + t280;
t198 = rSges(7,1) * t304 + rSges(7,2) * t303 + rSges(7,3) * t385;
t599 = pkin(5) * t612 + t385 * t608 + t386 * t628 + t198;
t353 = Icges(4,4) * t426 - Icges(4,2) * t425 + Icges(4,6) * t441;
t354 = Icges(4,4) * t428 - Icges(4,2) * t427 + Icges(4,6) * t442;
t355 = Icges(4,1) * t426 - Icges(4,4) * t425 + Icges(4,5) * t441;
t356 = Icges(4,1) * t428 - Icges(4,4) * t427 + Icges(4,5) * t442;
t598 = -t353 * t427 - t354 * t425 + t355 * t428 + t356 * t426 + t617 + t618;
t523 = -rSges(7,1) * t335 - rSges(7,2) * t334;
t233 = -rSges(7,3) * t518 - t523;
t570 = pkin(5) * t614;
t597 = t400 * t628 + t479 * t518 + t233 + t392 + t570;
t596 = -t329 + t653;
t241 = rSges(6,1) * t341 + rSges(6,2) * t340 - rSges(6,3) * t518;
t595 = -t241 - t328;
t242 = t343 * rSges(6,1) + t342 * rSges(6,2) - rSges(6,3) * t517;
t594 = -t242 - t329;
t250 = rSges(6,1) * t361 + rSges(6,2) * t360 + rSges(6,3) * t385;
t287 = pkin(4) * t386 + qJ(5) * t385 - qJD(5) * t516;
t593 = -t250 - t287;
t375 = pkin(4) * t424 - qJ(5) * t516;
t592 = t425 * t287 + t373 * t375;
t314 = t374 * pkin(3) + t373 * pkin(10);
t376 = pkin(3) * t426 + t425 * pkin(10);
t591 = t442 * t314 - t434 * t376;
t284 = rSges(7,1) * t383 + rSges(7,2) * t382 - rSges(7,3) * t516;
t590 = -pkin(5) * t611 + t424 * t628 - t516 * t608 + t284;
t300 = rSges(6,1) * t390 + rSges(6,2) * t389 - rSges(6,3) * t516;
t589 = -t300 - t375;
t312 = t402 * rSges(5,1) + rSges(5,2) * t517 + t427 * rSges(5,3);
t377 = t428 * pkin(3) + t427 * pkin(10);
t588 = -t312 - t377;
t359 = t442 * t376;
t587 = t442 * t328 + t359;
t362 = t454 * t377;
t586 = t454 * t329 + t362;
t348 = rSges(5,1) * t424 + rSges(5,2) * t516 - rSges(5,3) * t659;
t414 = pkin(3) * t440 - pkin(10) * t659;
t585 = -t348 - t414;
t387 = t441 * t414;
t584 = t441 * t375 + t387;
t411 = pkin(3) * t432 + pkin(10) * t433;
t583 = t441 * t411 + t435 * t414;
t582 = qJ(2) * t610 + t474;
t580 = qJD(1) * t482;
t579 = qJD(1) * t483;
t578 = qJD(2) * t477;
t573 = 0.2e1 * t623;
t572 = m(6) / 0.2e1 + t645;
t571 = 0.2e1 * qJD(1);
t568 = t30 / 0.2e1 + t53 / 0.2e1;
t567 = t52 / 0.2e1 + t31 / 0.2e1;
t566 = -t192 - t606;
t565 = -t193 - t605;
t564 = -t287 - t599;
t563 = -t328 - t597;
t562 = -t329 - t596;
t561 = -t377 + t594;
t560 = -t375 - t590;
t188 = t294 * rSges(5,1) - t293 * rSges(5,2) + t371 * rSges(5,3);
t558 = -t414 + t589;
t556 = m(5) * t623;
t555 = m(6) * t623;
t554 = m(7) * t623;
t551 = t477 * t579;
t550 = t113 / 0.2e1 + t130 / 0.2e1;
t549 = t131 / 0.2e1 + t114 / 0.2e1;
t548 = -t482 * pkin(1) + qJ(2) * t609;
t543 = 0.2e1 * m(4);
t541 = 0.2e1 * m(5);
t539 = 0.2e1 * m(6);
t537 = 0.2e1 * m(7);
t535 = t442 * t193 - t434 * t328 + t591;
t534 = -t377 + t562;
t533 = t441 * t287 + t435 * t375 + t583;
t532 = -t414 + t560;
t404 = Icges(4,4) * t440 + Icges(4,2) * t659 + Icges(4,6) * t454;
t405 = Icges(4,1) * t440 + Icges(4,4) * t659 + Icges(4,5) * t454;
t407 = Icges(4,5) * t432 - Icges(4,6) * t433;
t408 = Icges(4,4) * t432 - Icges(4,2) * t433;
t409 = Icges(4,1) * t432 - Icges(4,4) * t433;
t522 = -t433 * t404 + t432 * t405 + t454 * t407 + t408 * t659 + t440 * t409;
t521 = -pkin(1) * t580 + qJ(2) * t551 + t482 * t578;
t189 = t296 * rSges(5,1) - t295 * rSges(5,2) + t373 * rSges(5,3);
t311 = rSges(5,1) * t400 + rSges(5,2) * t518 + rSges(5,3) * t425;
t511 = pkin(2) * t504 + t548 - t660;
t510 = t74 / 0.2e1 + t40 / 0.2e1 + t92 / 0.2e1 + t69 / 0.2e1 + t568;
t509 = t91 / 0.2e1 + t68 / 0.2e1 + t75 / 0.2e1 + t41 / 0.2e1 + t567;
t508 = t161 / 0.2e1 + t115 / 0.2e1 + t132 / 0.2e1 + t174 / 0.2e1 + t550;
t507 = t162 / 0.2e1 + t116 / 0.2e1 + t133 / 0.2e1 + t175 / 0.2e1 + t549;
t503 = -t376 + t511;
t502 = t506 * rSges(3,2);
t495 = pkin(9) * t497;
t468 = t483 * t578;
t491 = -t452 * pkin(2) + t468 + (-t495 - t474 + (-pkin(9) * t622 - qJ(2)) * t610) * qJD(1);
t490 = t456 * pkin(2) + pkin(9) * t531 + t495 + t582;
t489 = -t314 + t491;
t488 = t391 + t489;
t487 = t377 + t490;
t486 = t451 * pkin(2) - qJD(1) * t660 + t521;
t485 = t313 + t486;
t484 = t485 - t576;
t422 = t456 * rSges(3,1) + rSges(3,3) * t610 - t502 + t582;
t421 = rSges(3,1) * t504 + rSges(3,2) * t505 + rSges(3,3) * t609 + t548;
t413 = -t452 * rSges(3,1) - pkin(1) * t579 + qJD(1) * t502 + t468 + (-rSges(3,3) - qJ(2)) * t477 * t580;
t412 = t451 * rSges(3,1) + rSges(3,2) * t501 + rSges(3,3) * t551 + t521;
t410 = rSges(4,1) * t432 - rSges(4,2) * t433;
t406 = rSges(4,1) * t440 + rSges(4,2) * t659 + rSges(4,3) * t454;
t403 = Icges(4,5) * t440 + Icges(4,6) * t659 + Icges(4,3) * t454;
t331 = t425 * t375;
t326 = t490 + t358;
t325 = -t357 + t511;
t323 = t659 * t329;
t319 = rSges(5,1) * t386 - rSges(5,2) * t385 + rSges(5,3) * t433;
t315 = t427 * t328;
t273 = t358 * t454 - t406 * t442;
t272 = -t357 * t454 + t406 * t441;
t271 = Icges(4,1) * t374 - Icges(4,4) * t373 + Icges(4,5) * t435;
t270 = Icges(4,1) * t372 - Icges(4,4) * t371 - Icges(4,5) * t434;
t269 = Icges(4,4) * t374 - Icges(4,2) * t373 + Icges(4,6) * t435;
t268 = Icges(4,4) * t372 - Icges(4,2) * t371 - Icges(4,6) * t434;
t267 = Icges(4,5) * t374 - Icges(4,6) * t373 + Icges(4,3) * t435;
t266 = Icges(4,5) * t372 - Icges(4,6) * t371 - Icges(4,3) * t434;
t259 = -t275 + t491;
t258 = t486 + t274;
t244 = t403 * t442 - t404 * t427 + t405 * t428;
t243 = t403 * t441 - t404 * t425 + t405 * t426;
t226 = t487 + t312;
t225 = -t311 + t503;
t220 = -t312 * t659 - t348 * t427;
t219 = t311 * t659 + t348 * t425;
t214 = t352 * t454 + t354 * t659 + t356 * t440;
t213 = t351 * t454 + t353 * t659 + t355 * t440;
t212 = -t275 * t454 + t406 * t435 + t410 * t441;
t211 = t274 * t454 + t406 * t434 - t410 * t442;
t204 = t522 * t454;
t194 = t311 * t427 - t312 * t425;
t177 = t312 * t454 + t442 * t585 + t362;
t176 = t348 * t441 + t387 + (-t311 - t376) * t454;
t171 = t487 - t594;
t170 = t503 + t595;
t168 = -t234 * t516 + t284 * t517;
t167 = t233 * t516 - t284 * t518;
t166 = t311 * t442 + t441 * t588 + t359;
t165 = t487 + t653;
t164 = -t400 * t471 - t518 * t627 + t503 + t523 - t570;
t160 = -t373 * t404 + t374 * t405 + t403 * t435 + t407 * t441 - t408 * t425 + t409 * t426;
t159 = -t371 * t404 + t372 * t405 - t403 * t434 + t407 * t442 - t408 * t427 + t409 * t428;
t158 = -t189 + t489;
t157 = t485 + t188;
t150 = -t233 * t517 + t234 * t518;
t137 = -t242 * t659 + t427 * t589 - t323;
t136 = t300 * t425 - t595 * t659 + t331;
t129 = t266 * t454 + t268 * t659 + t270 * t440 - t354 * t433 + t356 * t432;
t128 = t267 * t454 + t269 * t659 + t271 * t440 - t353 * t433 + t355 * t432;
t127 = t242 * t454 + t442 * t558 + t586;
t126 = t300 * t441 + (-t376 + t595) * t454 + t584;
t117 = t241 * t427 + t425 * t594 + t315;
t112 = t189 * t659 - t311 * t433 + t319 * t425 + t348 * t373;
t111 = -t188 * t659 + t312 * t433 - t319 * t427 - t348 * t371;
t109 = t110 * t454;
t107 = t319 * t441 + t348 * t435 + (-t189 - t314) * t454 + t583;
t106 = t188 * t454 + t280 + (-t319 - t411) * t442 - t585 * t434;
t105 = t241 * t442 + t441 * t561 + t587;
t96 = t427 * t560 - t596 * t659 - t323;
t95 = t425 * t590 - t563 * t659 + t331;
t94 = -t149 + t488 - t652;
t93 = t484 + t536 + t148;
t90 = t442 * t532 + t454 * t596 + t586;
t89 = t590 * t441 + (-t376 + t563) * t454 + t584;
t88 = -t188 * t425 + t189 * t427 + t311 * t371 - t312 * t373;
t87 = t295 * t627 - t296 * t471 + t488 + t524 - t569;
t86 = t484 + t655;
t85 = t425 * t562 + t427 * t597 + t315;
t83 = t441 * t534 + t442 * t597 + t587;
t82 = t84 * t454;
t80 = t155 * t441 + t156 * t442 + t175 * t454;
t79 = t153 * t441 + t154 * t442 + t174 * t454;
t78 = t189 * t442 - t311 * t434 + (-t188 - t313) * t441 + t588 * t435 + t591;
t77 = t155 * t425 + t156 * t427 - t175 * t659;
t76 = t153 * t425 + t154 * t427 - t174 * t659;
t73 = t125 * t516 - t198 * t518 - t233 * t385 + t284 * t295;
t72 = -t124 * t516 + t198 * t517 + t234 * t385 - t284 * t293;
t71 = t250 * t441 + t300 * t435 + (-t314 + t603) * t454 + t533;
t70 = t148 * t454 + (-t411 + t593) * t442 - t558 * t434 + t600;
t66 = t67 * t454;
t59 = t250 * t425 + t300 * t373 + t433 * t595 - t603 * t659 + t592;
t58 = -t148 * t659 + t242 * t433 + t371 * t589 + t427 * t593 + t601;
t57 = t113 * t441 + t114 * t442 + t141 * t454;
t56 = t113 * t425 + t114 * t427 - t141 * t659;
t55 = t124 * t518 - t125 * t517 + t233 * t293 - t234 * t295;
t54 = -t113 * t518 - t114 * t517 - t141 * t516;
t51 = t103 * t441 + t104 * t442 + t133 * t454;
t50 = t101 * t441 + t102 * t442 + t132 * t454;
t49 = t103 * t425 + t104 * t427 - t133 * t659;
t48 = t101 * t425 + t102 * t427 - t132 * t659;
t47 = t100 * t442 + t131 * t454 + t441 * t99;
t46 = t130 * t454 + t441 * t97 + t442 * t98;
t45 = t100 * t427 - t131 * t659 + t425 * t99;
t44 = -t130 * t659 + t425 * t97 + t427 * t98;
t39 = t149 * t427 + t241 * t371 + t373 * t594 + t425 * t604 + t602;
t38 = t149 * t442 - t241 * t434 + (-t313 + t604) * t441 + t561 * t435 + t535;
t33 = t599 * t441 + t590 * t435 + (-t314 + t565) * t454 + t533;
t32 = t606 * t454 + (-t411 + t564) * t442 - t532 * t434 + t600;
t29 = t373 * t590 + t425 * t599 + t433 * t563 - t565 * t659 + t592;
t28 = t371 * t560 + t427 * t564 + t433 * t596 - t606 * t659 + t601;
t23 = t371 * t597 + t373 * t562 + t425 * t566 + t427 * t605 + t602;
t22 = t161 * t435 - t162 * t434 + t74 * t441 + t75 * t442 + t109;
t21 = t605 * t442 - t597 * t434 + (-t313 + t566) * t441 + t534 * t435 + t535;
t19 = t153 * t435 - t154 * t434 + t441 * t62 + t442 * t63 + t454 * t92;
t18 = t155 * t435 - t156 * t434 + t441 * t60 + t442 * t61 + t454 * t91;
t15 = t115 * t435 - t116 * t434 + t40 * t441 + t41 * t442 + t82;
t13 = t101 * t435 - t102 * t434 + t36 * t441 + t37 * t442 + t454 * t69;
t12 = t103 * t435 - t104 * t434 + t34 * t441 + t35 * t442 + t454 * t68;
t11 = t113 * t435 - t114 * t434 + t30 * t441 + t31 * t442 + t66;
t7 = t113 * t295 + t114 * t293 - t30 * t518 - t31 * t517 + t626;
t6 = t26 * t441 + t27 * t442 - t434 * t98 + t435 * t97 + t454 * t53;
t5 = -t100 * t434 + t24 * t441 + t25 * t442 + t435 * t99 + t454 * t52;
t2 = t130 * t385 - t26 * t518 - t27 * t517 + t293 * t98 + t295 * t97 - t516 * t53;
t1 = t100 * t293 + t131 * t385 - t24 * t518 - t25 * t517 + t295 * t99 - t516 * t52;
t9 = [(t157 * t226 + t158 * t225) * t541 + (t164 * t87 + t165 * t86) * t537 + (t170 * t94 + t171 * t93) * t539 + (t258 * t326 + t259 * t325) * t543 + 0.2e1 * m(3) * (t412 * t422 + t413 * t421) + t67 + t522 - t663; ((t164 * t579 + t165 * t580 + t482 * t87 - t483 * t86) * m(7) + (t170 * t579 + t171 * t580 + t482 * t94 - t483 * t93) * m(6) + (-t157 * t483 + t158 * t482 + t225 * t579 + t226 * t580) * m(5) + (-t258 * t483 + t259 * t482 + t325 * t579 + t326 * t580) * m(4) + m(3) * (-t412 * t483 + t413 * t482 + t421 * t579 + t422 * t580)) * t477; 0; t204 + t66 + t109 + t82 + (t211 * t326 + t212 * t325 + t258 * t273 + t259 * t272) * m(4) + (t164 * t33 + t165 * t32 + t86 * t90 + t87 * t89) * m(7) + (t126 * t94 + t127 * t93 + t170 * t71 + t171 * t70) * m(6) + (t106 * t226 + t107 * t225 + t157 * t177 + t158 * t176) * m(5) + (t129 / 0.2e1 + t159 / 0.2e1 + t509) * t442 + (t128 / 0.2e1 + t160 / 0.2e1 + t510) * t441 + (t213 / 0.2e1 + t243 / 0.2e1 + t508) * t435 - (t214 / 0.2e1 + t244 / 0.2e1 + t507) * t434; t623 * t630 + t78 * t556 + t38 * t555 + t21 * t554 + ((-t211 * t483 + t212 * t482 + t272 * t579 + t273 * t580) * m(4) + (-t106 * t483 + t107 * t482 + t176 * t579 + t177 * t580) * m(5) + (t126 * t579 + t127 * t580 + t482 * t71 - t483 * t70) * m(6) + (-t32 * t483 + t33 * t482 + t579 * t89 + t580 * t90) * m(7)) * t477; (t21 * t83 + t32 * t90 + t33 * t89) * t537 + (t105 * t38 + t126 * t71 + t127 * t70) * t539 + (t106 * t177 + t107 * t176 + t166 * t78) * t541 + (t273 * t211 + t272 * t212) * t543 + (0.2e1 * t357 * t630 + t12 + t18 + t5 + (t266 * t442 - t268 * t427 + t270 * t428 - t354 * t371 + t356 * t372) * t442) * t442 + (t6 + t19 + t13 - 0.2e1 * t358 * t630 + (t267 * t441 - t269 * t425 + t271 * t426 - t353 * t373 + t355 * t374) * t441 + (t266 * t441 + t267 * t442 - t268 * t425 - t269 * t427 + t270 * t426 + t271 * t428 - t353 * t371 - t354 * t373 + t355 * t372 + t356 * t374) * t442) * t441 + (t11 + t15 + t204 + t22 + (t129 + t159) * t442 + (t128 + t160) * t441) * t454 + (t46 + t79 + t50 + (0.3e1 * t351 * t441 - 0.2e1 * t353 * t425 + 0.2e1 * t355 * t426) * t441 + (t243 + t213) * t454 + (t598 + t617) * t442) * t435 - (t47 + t80 + t51 + (0.3e1 * t352 * t442 - 0.2e1 * t354 * t427 + 0.2e1 * t356 * t428) * t442 + (t214 + t244) * t454 + (t598 + t618) * t441) * t434; (t164 * t29 + t165 * t28 + t86 * t96 + t87 * t95) * m(7) + (t136 * t94 + t137 * t93 + t170 * t59 + t171 * t58) * m(6) + (t111 * t226 + t112 * t225 + t157 * t220 + t158 * t219) * m(5) + t509 * t427 + t510 * t425 + t508 * t373 + t507 * t371 + t625 + t661; t88 * t556 + t39 * t555 + t23 * t554 + ((-t111 * t483 + t112 * t482 + t219 * t579 + t220 * t580) * m(5) + (t136 * t579 + t137 * t580 + t482 * t59 - t483 * t58) * m(6) + (-t28 * t483 + t29 * t482 + t579 * t95 + t580 * t96) * m(7)) * t477; (t21 * t85 + t23 * t83 + t28 * t90 + t29 * t89 + t32 * t96 + t33 * t95) * m(7) + (t105 * t39 + t117 * t38 + t126 * t59 + t127 * t58 + t136 * t71 + t137 * t70) * m(6) + (t106 * t220 + t107 * t219 + t111 * t177 + t112 * t176 + t166 * t88 + t194 * t78) * m(5) - (t22 / 0.2e1 + t15 / 0.2e1 + t11 / 0.2e1) * t659 + (t76 / 0.2e1 + t48 / 0.2e1 + t44 / 0.2e1) * t435 - (t77 / 0.2e1 + t49 / 0.2e1 + t45 / 0.2e1) * t434 + (t18 / 0.2e1 + t12 / 0.2e1 + t5 / 0.2e1) * t427 + (t19 / 0.2e1 + t13 / 0.2e1 + t6 / 0.2e1) * t425 + (t79 / 0.2e1 + t50 / 0.2e1 + t46 / 0.2e1) * t373 + (t80 / 0.2e1 + t51 / 0.2e1 + t47 / 0.2e1) * t371 + (t441 * t657 + t442 * t656 + t454 * t654 + t57) * t636 + t649 * t635 + t650 * t634 + t648 * t633; (t23 * t85 + t28 * t96 + t29 * t95) * t537 + t433 * t56 + (t117 * t39 + t136 * t59 + t137 * t58) * t539 + (t111 * t220 + t112 * t219 + t194 * t88) * t541 - (t648 + t662) * t659 + (t433 * t656 + t650) * t427 + (t433 * t657 + t649) * t425 + (t44 + t48 + t76) * t373 + (t45 + t77 + t49) * t371; -(m(6) * t94 + m(7) * t87) * t517 - (m(6) * t93 + m(7) * t86) * t518 + (m(6) * t171 + m(7) * t165) * t295 + (m(6) * t170 + m(7) * t164) * t293; t572 * (t385 * t573 + (t293 * t647 + t295 * t646 + (-t482 * t518 - t483 * t517) * t571) * t477); -(m(6) * t38 + m(7) * t21) * t516 - (m(6) * t71 + m(7) * t33) * t517 - (m(6) * t70 + m(7) * t32) * t518 + (m(6) * t105 + m(7) * t83) * t385 + (m(6) * t127 + m(7) * t90) * t295 + (m(6) * t126 + m(7) * t89) * t293; -(m(6) * t39 + m(7) * t23) * t516 - (m(6) * t59 + m(7) * t29) * t517 - (m(6) * t58 + m(7) * t28) * t518 + (m(6) * t117 + m(7) * t85) * t385 + (m(6) * t137 + m(7) * t96) * t295 + (m(6) * t136 + m(7) * t95) * t293; 0.4e1 * t572 * (-t293 * t517 - t295 * t518 - t385 * t516); (t164 * t73 + t165 * t72 + t167 * t87 + t168 * t86) * m(7) - t567 * t517 - t568 * t518 + t550 * t295 + t549 * t293 + t626; (t55 * t573 + (t73 * t647 + t72 * t646 + (t167 * t483 + t168 * t482) * t571) * t477) * t645; (t150 * t21 + t167 * t33 + t168 * t32 + t55 * t83 + t72 * t90 + t73 * t89) * m(7) - t434 * t643 + t1 * t634 + t435 * t644 + t2 * t635 + t46 * t641 + t6 * t639 + t47 * t642 + t5 * t638 + t57 * t640 + t11 * t637 + t7 * t633; (t150 * t23 + t167 * t29 + t168 * t28 + t55 * t85 + t72 * t96 + t73 * t95) * m(7) + t45 * t642 + t3 * t638 + t44 * t641 + t4 * t639 + t373 * t644 + t425 * t2 / 0.2e1 + t371 * t643 + t427 * t1 / 0.2e1 + t56 * t640 + t8 * t637 + t54 * t636 - t659 * t7 / 0.2e1; (t150 * t385 + t167 * t293 + t168 * t295 - t516 * t55 - t517 * t73 - t518 * t72) * m(7); t293 * t43 - t517 * t1 + t295 * t42 - t518 * t2 + t385 * t54 - t516 * t7 + (t150 * t55 + t167 * t73 + t168 * t72) * t537;];
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [t9(1) t9(2) t9(4) t9(7) t9(11) t9(16); t9(2) t9(3) t9(5) t9(8) t9(12) t9(17); t9(4) t9(5) t9(6) t9(9) t9(13) t9(18); t9(7) t9(8) t9(9) t9(10) t9(14) t9(19); t9(11) t9(12) t9(13) t9(14) t9(15) t9(20); t9(16) t9(17) t9(18) t9(19) t9(20) t9(21);];
Mq  = res;
