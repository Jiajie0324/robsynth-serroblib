% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPR11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:44:42
% EndTime: 2019-03-09 05:45:27
% DurationCPUTime: 25.59s
% Computational Cost: add. (44734->907), mult. (142883->1228), div. (0->0), fcn. (124217->18), ass. (0->369)
t375 = sin(qJ(3));
t367 = sin(pkin(12));
t368 = sin(pkin(6));
t526 = t367 * t368;
t483 = qJD(1) * t526;
t371 = cos(pkin(6));
t540 = cos(pkin(7));
t559 = cos(qJ(3));
t450 = t540 * t559;
t370 = cos(pkin(12));
t525 = t368 * t370;
t418 = t450 * t525;
t539 = sin(pkin(7));
t449 = t539 * t559;
t571 = -t371 * t449 - t418;
t574 = t571 * qJD(1);
t245 = t375 * t483 + t574;
t239 = qJD(4) + t245;
t471 = t375 * t540;
t396 = t368 * (-t367 * t471 + t370 * t559);
t279 = qJD(1) * t396;
t426 = qJD(3) * t449;
t592 = t279 - t426;
t557 = sin(qJ(1));
t484 = t557 * t370;
t560 = cos(qJ(1));
t487 = t560 * t367;
t299 = t371 * t487 + t484;
t355 = t557 * t367;
t486 = t560 * t370;
t425 = -t371 * t486 + t355;
t473 = t368 * t539;
t583 = t425 * t540 + t560 * t473;
t210 = -t299 * t559 + t375 * t583;
t374 = sin(qJ(4));
t376 = cos(qJ(4));
t474 = t368 * t540;
t572 = t425 * t539 - t560 * t474;
t173 = t210 * t376 - t374 * t572;
t207 = t299 * t375 + t559 * t583;
t365 = pkin(13) + qJ(6);
t359 = sin(t365);
t360 = cos(t365);
t591 = t173 * t359 + t207 * t360;
t590 = t173 * t360 - t207 * t359;
t452 = t370 * t471;
t466 = t539 * t371;
t453 = t375 * t466;
t260 = t368 * (t367 * t559 + t452) + t453;
t249 = t260 * qJD(1);
t472 = t371 * t540;
t465 = qJD(1) * t539;
t448 = t368 * t465;
t502 = -t370 * t448 + qJD(3);
t410 = -qJD(1) * t472 - t502;
t199 = t376 * t249 - t374 * t410;
t366 = sin(pkin(13));
t369 = cos(pkin(13));
t161 = t199 * t369 + t239 * t366;
t373 = sin(qJ(6));
t558 = cos(qJ(6));
t193 = t366 * t199;
t566 = t239 * t369 - t193;
t420 = t558 * t566;
t100 = -t161 * t373 + t420;
t589 = t100 ^ 2;
t282 = t376 * t410;
t197 = t249 * t374 + t282;
t196 = qJD(6) + t197;
t588 = t100 * t196;
t283 = (-pkin(9) * t367 * t539 - pkin(2) * t370 - pkin(1)) * t368;
t271 = qJD(1) * t283 + qJD(2);
t556 = pkin(1) * t371;
t494 = qJD(1) * t556;
t344 = t370 * t494;
t397 = t371 * pkin(2) + (-pkin(9) * t540 - qJ(2)) * t526;
t240 = qJD(1) * t397 + t344;
t469 = t540 * t240;
t347 = qJ(2) * t525;
t293 = qJD(1) * t347 + t367 * t494;
t394 = (t370 * t474 + t466) * pkin(9);
t232 = qJD(1) * t394 + t293;
t485 = t559 * t232;
t156 = t485 + (t271 * t539 + t469) * t375;
t587 = -qJD(5) * t374 - t156 + t239 * (pkin(4) * t374 - qJ(5) * t376);
t101 = t161 * t558 + t373 * t566;
t586 = t101 ^ 2;
t470 = t375 * t539;
t305 = t374 * t470 - t376 * t540;
t428 = t367 * t448;
t513 = qJD(4) * t305 + t374 * t428 + t376 * t592;
t395 = t368 * (t367 * t450 + t370 * t375);
t278 = qJD(1) * t395;
t447 = qJD(3) * t470;
t422 = t447 - t278;
t172 = t210 * t374 + t376 * t572;
t505 = qJD(4) * t374;
t493 = pkin(10) * t505;
t432 = t240 * t450;
t155 = -t375 * t232 + t271 * t449 + t432;
t189 = pkin(3) * t249 + pkin(10) * t245;
t105 = t376 * t155 + t374 * t189;
t91 = qJ(5) * t249 + t105;
t543 = t587 * t369 + (t493 + t91) * t366;
t582 = t366 * t587 - t369 * t91;
t522 = t369 * t376;
t181 = -t245 * t522 + t249 * t366;
t554 = pkin(5) * t374;
t578 = pkin(11) * t181 + t245 * t554 + (-pkin(11) * t522 + t554) * qJD(4) + t543;
t527 = t366 * t376;
t180 = -t245 * t527 - t369 * t249;
t523 = t369 * t374;
t577 = pkin(11) * t180 + (-pkin(10) * t523 - pkin(11) * t527) * qJD(4) + t582;
t504 = qJD(4) * t376;
t575 = -t366 * t504 + t180;
t443 = t369 * t504 - t181;
t515 = t366 * t513 + t369 * t422;
t514 = -t366 * t422 + t369 * t513;
t404 = t371 * t484 + t487;
t573 = t404 * t539 + t557 * t474;
t398 = t370 * t473 - t472;
t302 = t367 * t556 + t347;
t251 = t394 + t302;
t352 = t370 * t556;
t261 = t352 + t397;
t163 = t559 * t251 + (t540 * t261 + t539 * t283) * t375;
t190 = -t240 * t539 + t540 * t271;
t126 = t245 * pkin(3) - t249 * pkin(10) + t190;
t129 = -pkin(10) * t410 + t156;
t501 = qJD(1) * qJD(2);
t478 = t368 * t501;
t497 = qJDD(1) * t371;
t492 = pkin(1) * t497;
t273 = qJDD(1) * t347 + t367 * t492 + t370 * t478;
t217 = qJDD(1) * t394 + t273;
t342 = t370 * t492;
t455 = t367 * t478;
t218 = qJDD(1) * t397 + t342 - t455;
t264 = qJDD(1) * t283 + qJDD(2);
t507 = qJD(3) * t375;
t399 = -qJD(3) * t432 - t559 * t217 - t218 * t471 + t232 * t507 - t264 * t470 - t271 * t426;
t409 = qJDD(1) * t398 - qJDD(3);
t75 = -pkin(10) * t409 - t399;
t179 = -t218 * t539 + t540 * t264;
t491 = t375 * t526;
t457 = qJD(3) * t491;
t499 = qJDD(1) * t368;
t477 = t367 * t499;
t187 = qJD(1) * t457 + qJD(3) * t574 - qJDD(1) * t453 - t452 * t499 - t559 * t477;
t248 = t260 * qJD(3);
t411 = qJDD(1) * t571 + t375 * t477;
t188 = qJD(1) * t248 + t411;
t96 = t188 * pkin(3) + t187 * pkin(10) + t179;
t26 = t126 * t504 - t129 * t505 + t374 * t96 + t376 * t75;
t68 = t376 * t126 - t374 * t129;
t570 = -t239 * t68 + t26;
t542 = -t369 * t493 + t582;
t569 = t239 * t374;
t362 = t367 ^ 2;
t363 = t368 ^ 2;
t364 = t370 ^ 2;
t568 = (t362 + t364) * t363;
t162 = -t375 * t251 + t261 * t450 + t283 * t449;
t306 = t374 * t540 + t376 * t470;
t510 = qJD(4) * t306 - t374 * t592 + t376 * t428;
t565 = t404 * t540 - t557 * t473;
t479 = qJD(6) * t558;
t503 = qJD(6) * t373;
t564 = -t366 * t503 + t369 * t479;
t506 = qJD(4) * t199;
t114 = -t374 * t187 + t376 * t409 + t506;
t563 = -pkin(4) * t376 - qJ(5) * t374;
t184 = qJDD(4) + t188;
t553 = t184 * pkin(4);
t562 = qJDD(5) - t553;
t69 = t126 * t374 + t129 * t376;
t65 = qJ(5) * t239 + t69;
t128 = pkin(3) * t410 - t155;
t79 = t197 * pkin(4) - t199 * qJ(5) + t128;
t38 = -t366 * t65 + t369 * t79;
t28 = pkin(5) * t197 - pkin(11) * t161 + t38;
t39 = t366 * t79 + t369 * t65;
t31 = pkin(11) * t566 + t39;
t423 = -t28 * t558 + t373 * t31;
t435 = qJ(5) * t184 + qJD(5) * t239;
t24 = t26 + t435;
t113 = qJD(4) * t282 + t376 * t187 + t249 * t505 + t374 * t409;
t81 = -qJD(3) * t485 - t375 * t217 + t218 * t450 + t264 * t449 - t271 * t447 - t469 * t507;
t76 = pkin(3) * t409 - t81;
t34 = t114 * pkin(4) + t113 * qJ(5) - t199 * qJD(5) + t76;
t8 = -t24 * t366 + t369 * t34;
t87 = -t113 * t369 + t184 * t366;
t6 = pkin(5) * t114 - pkin(11) * t87 + t8;
t109 = t366 * t113;
t464 = t184 * t369 + t109;
t9 = t369 * t24 + t366 * t34;
t7 = pkin(11) * t464 + t9;
t1 = -t423 * qJD(6) + t373 * t6 + t558 * t7;
t561 = t197 ^ 2;
t552 = pkin(11) + qJ(5);
t259 = t491 + t571;
t141 = qJD(2) * t396 + qJD(3) * t162;
t200 = -t261 * t539 + t540 * t283;
t257 = t259 * pkin(3);
t147 = -t260 * pkin(10) + t200 + t257;
t154 = -pkin(10) * t398 + t163;
t247 = -qJD(3) * t418 - t371 * t426 + t457;
t427 = t367 * qJD(2) * t473;
t177 = t248 * pkin(3) + t247 * pkin(10) + t427;
t51 = t376 * t141 + t147 * t504 - t154 * t505 + t374 * t177;
t43 = qJ(5) * t248 + qJD(5) * t259 + t51;
t142 = qJD(2) * t395 + qJD(3) * t163;
t206 = t260 * t376 - t374 * t398;
t166 = qJD(4) * t206 - t247 * t374;
t205 = t260 * t374 + t376 * t398;
t167 = -qJD(4) * t205 - t247 * t376;
t60 = t166 * pkin(4) - t167 * qJ(5) - t206 * qJD(5) + t142;
t23 = t366 * t60 + t369 * t43;
t83 = t374 * t147 + t376 * t154;
t73 = qJ(5) * t259 + t83;
t153 = pkin(3) * t398 - t162;
t95 = t205 * pkin(4) - t206 * qJ(5) + t153;
t45 = t366 * t95 + t369 * t73;
t551 = t101 * t100;
t549 = t239 * t69;
t548 = t87 * t366;
t330 = -pkin(3) + t563;
t310 = t369 * t330;
t252 = -pkin(11) * t523 + t310 + (-pkin(10) * t366 - pkin(5)) * t376;
t288 = pkin(10) * t522 + t366 * t330;
t270 = -pkin(11) * t366 * t374 + t288;
t191 = t252 * t558 - t373 * t270;
t547 = qJD(6) * t191 + t578 * t373 + t577 * t558;
t192 = t373 * t252 + t270 * t558;
t546 = -qJD(6) * t192 - t577 * t373 + t578 * t558;
t333 = t552 * t366;
t334 = t552 * t369;
t274 = -t333 * t558 - t373 * t334;
t534 = t197 * t369;
t145 = pkin(4) * t199 + qJ(5) * t197;
t56 = t369 * t145 - t366 * t68;
t41 = pkin(5) * t199 + pkin(11) * t534 + t56;
t419 = -t373 * t366 + t369 * t558;
t535 = t197 * t366;
t57 = t366 * t145 + t369 * t68;
t48 = pkin(11) * t535 + t57;
t545 = qJD(5) * t419 + qJD(6) * t274 - t373 * t41 - t48 * t558;
t275 = -t373 * t333 + t334 * t558;
t317 = t366 * t558 + t373 * t369;
t544 = -qJD(5) * t317 - qJD(6) * t275 + t373 * t48 - t41 * t558;
t490 = pkin(5) * t366 + pkin(10);
t104 = -t374 * t155 + t189 * t376;
t92 = -pkin(4) * t249 - t104;
t541 = -pkin(5) * t180 + t490 * t504 - t92;
t537 = t197 * t199;
t536 = t197 * t239;
t533 = t199 * t239;
t531 = t249 * t245;
t530 = t359 * t376;
t529 = t360 * t376;
t528 = t366 * t114;
t524 = t369 * t114;
t377 = qJD(1) ^ 2;
t521 = t371 * t377;
t64 = -t239 * pkin(4) + qJD(5) - t68;
t520 = -qJD(5) + t64;
t265 = -t366 * t306 - t369 * t449;
t266 = t369 * t306 - t366 * t449;
t194 = t265 * t558 - t373 * t266;
t519 = qJD(6) * t194 + t515 * t373 - t514 * t558;
t195 = t373 * t265 + t266 * t558;
t518 = -qJD(6) * t195 + t514 * t373 + t515 * t558;
t304 = t317 * qJD(6);
t517 = -t317 * t197 - t304;
t516 = -t419 * t197 - t564;
t512 = -t304 * t374 + t575 * t373 + t443 * t558;
t511 = -t558 * t180 - t181 * t373 + t317 * t504 + t374 * t564;
t488 = t368 * t557;
t509 = t560 * pkin(1) + qJ(2) * t488;
t500 = qJDD(1) * t363;
t498 = qJDD(1) * t370;
t496 = g(1) * t557;
t495 = g(2) * t560;
t489 = t368 * t560;
t476 = g(2) * t489 - g(3) * t371;
t22 = -t366 * t43 + t369 * t60;
t44 = -t366 * t73 + t369 * t95;
t475 = t373 * t87 - t558 * t464;
t82 = t147 * t376 - t374 * t154;
t459 = t239 * t376;
t27 = -t126 * t505 - t129 * t504 - t374 * t75 + t376 * t96;
t458 = 0.2e1 * t368 * t497;
t451 = -pkin(1) * t557 + qJ(2) * t489;
t300 = -t355 * t371 + t486;
t212 = t300 * t559 - t375 * t565;
t174 = t212 * t374 - t376 * t573;
t446 = -g(1) * t172 - g(2) * t174;
t211 = t300 * t375 + t559 * t565;
t445 = -g(1) * t207 + g(2) * t211;
t442 = t464 * pkin(5);
t440 = t464 * t369;
t439 = t114 * t205 + t166 * t197;
t438 = (-qJ(2) * t483 + t344) * t367 - t293 * t370;
t358 = pkin(5) * t369 + pkin(4);
t437 = -t358 * t376 - t374 * t552;
t436 = t566 * qJD(4);
t52 = -t374 * t141 - t147 * t505 - t154 * t504 + t177 * t376;
t74 = -pkin(4) * t259 - t82;
t169 = t206 * t369 + t259 * t366;
t35 = pkin(5) * t205 - pkin(11) * t169 + t44;
t168 = t206 * t366 - t259 * t369;
t37 = -pkin(11) * t168 + t45;
t12 = t35 * t558 - t373 * t37;
t11 = t373 * t28 + t31 * t558;
t13 = t373 * t35 + t37 * t558;
t346 = -pkin(1) * t499 + qJDD(2);
t421 = pkin(1) * t500 - t346 * t368;
t108 = -t373 * t168 + t169 * t558;
t29 = -qJD(6) * t420 + t161 * t503 - t373 * t464 - t558 * t87;
t417 = -pkin(10) * t184 + t128 * t239;
t416 = g(1) * t560 + g(2) * t557;
t415 = g(1) * t174 - g(2) * t172 + g(3) * t205;
t175 = t212 * t376 + t374 * t573;
t414 = -g(1) * t175 + g(2) * t173 - g(3) * t206;
t413 = g(1) * t211 + g(2) * t207 + g(3) * t259;
t412 = g(1) * t212 - g(2) * t210 + g(3) * t260;
t25 = -t27 + t562;
t408 = -g(1) * t488 + t476;
t407 = -t25 + t415;
t406 = -t114 * t376 + t197 * t569;
t47 = -pkin(4) * t248 - t52;
t405 = -t161 * t366 + t369 * t566;
t393 = t415 + t27;
t391 = pkin(10) * qJD(4) * t239 - t413 + t76;
t2 = -qJD(6) * t11 - t373 * t7 + t558 * t6;
t387 = -t393 + t562;
t30 = qJD(6) * t101 + t475;
t384 = -t299 * pkin(2) - pkin(9) * t572 + t451;
t383 = t300 * pkin(2) + pkin(9) * t573 + t509;
t382 = t210 * pkin(3) + t384;
t381 = t212 * pkin(3) + t383;
t379 = -pkin(10) * t207 + t382;
t378 = t211 * pkin(10) + t381;
t319 = t490 * t374;
t301 = -qJ(2) * t526 + t352;
t295 = t419 * t374;
t294 = t317 * t374;
t287 = -pkin(10) * t527 + t310;
t272 = t342 + (-qJ(2) * qJDD(1) - t501) * t526;
t203 = t211 * pkin(3);
t201 = t207 * pkin(3);
t136 = t167 * t369 + t248 * t366;
t135 = t167 * t366 - t248 * t369;
t122 = t175 * t360 + t211 * t359;
t121 = -t175 * t359 + t211 * t360;
t110 = qJDD(6) + t114;
t107 = t168 * t558 + t169 * t373;
t62 = -pkin(5) * t535 + t69;
t61 = pkin(5) * t168 + t74;
t55 = -pkin(5) * t566 + t64;
t50 = qJD(6) * t108 + t135 * t558 + t373 * t136;
t49 = t373 * t135 - t136 * t558 + t168 * t479 + t169 * t503;
t36 = pkin(5) * t135 + t47;
t18 = -pkin(11) * t135 + t23;
t15 = -t442 + t25;
t14 = pkin(5) * t166 - pkin(11) * t136 + t22;
t4 = -qJD(6) * t13 + t14 * t558 - t373 * t18;
t3 = qJD(6) * t12 + t373 * t14 + t18 * t558;
t5 = [0, 0, 0, 0, 0, qJDD(1), t496 - t495, t416, 0, 0, t362 * t500, 0.2e1 * t363 * t367 * t498, t367 * t458, t364 * t500, t370 * t458, t371 ^ 2 * qJDD(1), g(1) * t299 - g(2) * t300 + t421 * t370 + (qJDD(1) * t301 + t272 - t455) * t371, -g(1) * t355 + (t495 - t421) * t367 + (-t302 * qJDD(1) - t273 + (t416 - t478) * t370) * t371, t501 * t568 + (-t272 * t367 + t273 * t370 + (-t301 * t367 + t302 * t370) * qJDD(1) - t416) * t368, t273 * t302 + t272 * t301 - g(1) * t451 - g(2) * t509 + (-t346 * pkin(1) - qJD(2) * t438) * t368, -t187 * t260 - t247 * t249, t187 * t259 - t188 * t260 + t245 * t247 - t248 * t249, t187 * t398 + t247 * t410 - t260 * t409, t188 * t259 + t245 * t248, t188 * t398 + t248 * t410 + t259 * t409, t409 * t398, -g(1) * t210 - g(2) * t212 + t142 * t410 - t162 * t409 + t179 * t259 + t200 * t188 + t190 * t248 + t245 * t427 - t398 * t81, t141 * t410 + t163 * t409 + t179 * t260 - t200 * t187 - t190 * t247 + t249 * t427 - t398 * t399 + t445, g(1) * t572 - g(2) * t573 - t141 * t245 + t142 * t249 + t155 * t247 - t156 * t248 + t162 * t187 - t163 * t188 + t259 * t399 - t81 * t260, -g(1) * t384 - g(2) * t383 + t156 * t141 - t155 * t142 + t81 * t162 - t163 * t399 + t179 * t200 + t190 * t427, -t113 * t206 + t167 * t199, t113 * t205 - t114 * t206 - t166 * t199 - t167 * t197, -t113 * t259 + t167 * t239 + t184 * t206 + t199 * t248, t439, -t114 * t259 - t166 * t239 - t184 * t205 - t197 * t248, t184 * t259 + t239 * t248, -g(1) * t173 - g(2) * t175 + t114 * t153 + t128 * t166 + t142 * t197 + t184 * t82 + t205 * t76 + t239 * t52 + t248 * t68 + t259 * t27, -t113 * t153 + t128 * t167 + t142 * t199 - t184 * t83 + t206 * t76 - t239 * t51 - t248 * t69 - t259 * t26 - t446, t113 * t82 - t114 * t83 - t166 * t69 - t167 * t68 - t197 * t51 - t199 * t52 - t205 * t26 - t206 * t27 - t445, -g(1) * t379 - g(2) * t378 + t128 * t142 + t76 * t153 + t26 * t83 + t27 * t82 + t69 * t51 + t68 * t52, t136 * t161 + t169 * t87, -t161 * t135 + t136 * t566 - t87 * t168 + t169 * t464, t114 * t169 + t136 * t197 + t161 * t166 + t205 * t87, -t135 * t566 - t168 * t464, -t168 * t114 - t135 * t197 + t166 * t566 + t205 * t464, t439, t22 * t197 + t44 * t114 + t8 * t205 + t38 * t166 - t47 * t566 - t74 * t464 + t25 * t168 + t64 * t135 - g(1) * (t173 * t369 - t207 * t366) - g(2) * (t175 * t369 + t211 * t366) -t23 * t197 - t45 * t114 - t9 * t205 - t39 * t166 + t47 * t161 + t74 * t87 + t25 * t169 + t64 * t136 - g(1) * (-t173 * t366 - t207 * t369) - g(2) * (-t175 * t366 + t211 * t369) -t39 * t135 - t38 * t136 - t22 * t161 - t9 * t168 - t8 * t169 + t23 * t566 - t44 * t87 + t45 * t464 + t446, t9 * t45 + t39 * t23 + t8 * t44 + t38 * t22 + t25 * t74 + t64 * t47 - g(1) * (t173 * pkin(4) + t172 * qJ(5) + t379) - g(2) * (t175 * pkin(4) + t174 * qJ(5) + t378) -t101 * t49 - t108 * t29, -t100 * t49 - t101 * t50 + t107 * t29 - t108 * t30, t101 * t166 + t108 * t110 - t196 * t49 - t205 * t29, -t100 * t50 + t107 * t30, t100 * t166 - t107 * t110 - t196 * t50 - t205 * t30, t110 * t205 + t166 * t196, -g(1) * t590 - g(2) * t122 - t36 * t100 + t15 * t107 + t12 * t110 - t423 * t166 + t4 * t196 + t2 * t205 + t61 * t30 + t55 * t50, g(1) * t591 - g(2) * t121 - t1 * t205 + t36 * t101 + t15 * t108 - t11 * t166 - t13 * t110 - t3 * t196 - t61 * t29 - t55 * t49, -t1 * t107 + t100 * t3 - t101 * t4 - t108 * t2 - t11 * t50 + t12 * t29 - t13 * t30 - t423 * t49 + t446, t1 * t13 + t11 * t3 + t2 * t12 - t423 * t4 + t15 * t61 + t55 * t36 - g(1) * (t172 * t552 + t173 * t358 - t207 * t490 + t382) - g(2) * (t174 * t552 + t175 * t358 + t211 * t490 + t381); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t367 * t521 - t498) * t368 (qJDD(1) * t367 + t370 * t521) * t368, -t377 * t568, qJDD(2) + (-pkin(1) * qJDD(1) + qJD(1) * t438 - t496) * t368 + t476, 0, 0, 0, 0, 0, 0, t188 * t540 - t245 * t428 - t409 * t449 + t410 * t422, -t187 * t540 - t249 * t428 + t409 * t470 - t410 * t592, t187 * t449 - t188 * t470 + t279 * t245 - t278 * t249 + (-t245 * t449 + t249 * t470) * qJD(3), t81 * t449 - t399 * t470 + t179 * t540 + t155 * t278 - t156 * t279 + (-t190 * t367 * t465 - t496) * t368 + (-t155 * t470 + t156 * t449) * qJD(3) + t476, 0, 0, 0, 0, 0, 0, -t114 * t449 - t305 * t184 + t197 * t422 - t239 * t510, t113 * t449 - t306 * t184 + t199 * t422 + t239 * t513, -t113 * t305 - t114 * t306 + t197 * t513 + t199 * t510, t128 * t422 + t26 * t306 - t27 * t305 - t449 * t76 - t510 * t68 - t513 * t69 + t408, 0, 0, 0, 0, 0, 0, t265 * t114 + t197 * t515 - t305 * t464 - t510 * t566, -t114 * t266 + t161 * t510 + t197 * t514 + t305 * t87, -t161 * t515 - t265 * t87 + t266 * t464 - t514 * t566, t25 * t305 + t8 * t265 + t9 * t266 + t38 * t515 - t39 * t514 + t510 * t64 + t408, 0, 0, 0, 0, 0, 0, -t100 * t510 + t110 * t194 + t196 * t518 + t30 * t305, t101 * t510 - t110 * t195 - t196 * t519 - t29 * t305, t100 * t519 - t101 * t518 + t194 * t29 - t195 * t30, t1 * t195 + t11 * t519 + t15 * t305 + t2 * t194 - t423 * t518 + t510 * t55 + t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t531, -t245 ^ 2 + t249 ^ 2, -t245 * t410 - t187, -t531, t249 * t502 + (t249 * t472 - t248) * qJD(1) - t411, -t409, -t156 * t410 - t190 * t249 + t413 + t81, -t155 * t410 + t190 * t245 + t399 + t412, 0, 0, -t113 * t374 + t199 * t459 (-t113 - t536) * t376 + (-t114 - t533) * t374, t184 * t374 - t199 * t249 + t239 * t459, t406, t184 * t376 + t197 * t249 - t239 * t569, -t239 * t249, -pkin(3) * t114 - t104 * t239 - t156 * t197 - t249 * t68 + t374 * t417 - t376 * t391, pkin(3) * t113 + t105 * t239 - t156 * t199 + t249 * t69 + t374 * t391 + t376 * t417, t104 * t199 + t105 * t197 + ((-t114 + t506) * pkin(10) + t570) * t376 + (-t27 - t549 + (qJD(4) * t197 - t113) * pkin(10)) * t374 - t412, -t76 * pkin(3) + g(1) * t203 + g(2) * t201 + g(3) * t257 - t68 * t104 - t69 * t105 - t128 * t156 + (t26 * t376 - t27 * t374 + (-t374 * t69 - t376 * t68) * qJD(4) - t412) * pkin(10), t161 * t443 + t523 * t87, -t181 * t566 + t161 * t180 + (t440 - t548) * t374 + t405 * t504, -t376 * t87 + t443 * t197 + (t161 * t239 + t524) * t374, t566 * t180 + (-t374 * t464 - t376 * t436) * t366, -t464 * t376 + t575 * t197 + (t245 * t566 + t436 - t528) * t374, t406, t287 * t114 + t92 * t566 - t64 * t180 + t543 * t197 - t412 * t366 + (-t8 + t413 * t369 + (-pkin(10) * t566 + t64 * t366) * qJD(4)) * t376 + (-pkin(10) * t464 + t239 * t38 + t25 * t366) * t374, -t288 * t114 - t92 * t161 - t64 * t181 - t542 * t197 - t412 * t369 + (t9 + (pkin(10) * t161 + t369 * t64) * qJD(4) - t413 * t366) * t376 + (pkin(10) * t87 - t239 * t39 + t25 * t369) * t374, t288 * t464 - t287 * t87 + t39 * t180 + t38 * t181 - t543 * t161 + (-t366 * t39 - t369 * t38) * t504 + (-t366 * t9 - t369 * t8 + t413) * t374 + t542 * t566, t9 * t288 + t8 * t287 - t64 * t92 - g(1) * (t211 * t563 - t203) - g(2) * (t207 * t563 - t201) - g(3) * (t259 * t563 - t257) + t542 * t39 + t543 * t38 + (t25 * t374 + t504 * t64 - t412) * pkin(10), t101 * t512 - t29 * t295, t100 * t512 - t101 * t511 + t29 * t294 - t295 * t30, t101 * t569 + t110 * t295 + t196 * t512 + t29 * t376, -t100 * t511 + t294 * t30, t100 * t569 - t110 * t294 - t196 * t511 + t30 * t376, -t110 * t376 + t196 * t569, t191 * t110 - t2 * t376 + t319 * t30 + t15 * t294 - g(1) * (-t211 * t529 + t212 * t359) - g(2) * (-t207 * t529 - t210 * t359) - g(3) * (-t259 * t529 + t260 * t359) - t541 * t100 + t511 * t55 + t546 * t196 - t423 * t569, -t192 * t110 + t1 * t376 - t319 * t29 + t15 * t295 - g(1) * (t211 * t530 + t212 * t360) - g(2) * (t207 * t530 - t210 * t360) - g(3) * (t259 * t530 + t260 * t360) + t512 * t55 - t547 * t196 - t11 * t569 + t541 * t101, -t1 * t294 + t100 * t547 - t101 * t546 - t11 * t511 + t191 * t29 - t192 * t30 - t2 * t295 + t374 * t413 + t423 * t512, t1 * t192 + t2 * t191 + t15 * t319 - g(1) * (t211 * t437 + t212 * t490 - t203) - g(2) * (t207 * t437 - t210 * t490 - t201) - g(3) * (t259 * t437 + t260 * t490 - t257) + t541 * t55 + t547 * t11 - t546 * t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t537, t199 ^ 2 - t561, -t113 + t536, -t537, t533 - t114, t184, -t128 * t199 + t393 + t549, t128 * t197 - t414 - t570, 0, 0, t161 * t534 + t548, t197 * t405 + t366 * t464 + t87 * t369, -t161 * t199 + t369 * t561 + t528, -t535 * t566 + t440, -t199 * t566 - t366 * t561 + t524, -t537, -qJ(5) * t528 + pkin(4) * t109 - t69 * t193 - t38 * t199 + (t366 * t520 - t56) * t197 + (t407 + t549 + t553) * t369, -qJ(5) * t524 - pkin(4) * t87 - t161 * t69 + t199 * t39 + (t369 * t520 + t57) * t197 - t407 * t366, t56 * t161 + t57 * t193 + (qJ(5) * t109 - qJD(5) * t193 - t38 * t197 - t57 * t239 + t369 * t435 + t9) * t369 + (qJ(5) * t87 + qJD(5) * t161 - t197 * t39 - t8) * t366 + t414, -t38 * t56 - t39 * t57 - t64 * t69 + (-t366 * t38 + t369 * t39) * qJD(5) + t407 * pkin(4) + (-t8 * t366 + t9 * t369 + t414) * qJ(5), -t101 * t516 - t29 * t317, -t100 * t516 + t101 * t517 - t29 * t419 - t30 * t317, -t101 * t199 + t110 * t317 - t196 * t516, t100 * t517 - t30 * t419, -t100 * t199 + t110 * t419 + t196 * t517, -t196 * t199, t100 * t62 + t110 * t274 - t15 * t419 + t196 * t544 + t199 * t423 - t30 * t358 + t360 * t415 - t517 * t55, -t101 * t62 + t11 * t199 - t110 * t275 + t15 * t317 - t196 * t545 + t29 * t358 - t359 * t415 - t516 * t55, t1 * t419 + t100 * t545 - t101 * t544 + t11 * t517 - t2 * t317 + t274 * t29 - t275 * t30 - t423 * t516 + t414, t1 * t275 + t2 * t274 - t15 * t358 - t55 * t62 - g(1) * (-t174 * t358 + t175 * t552) - g(2) * (t172 * t358 - t173 * t552) - g(3) * (-t205 * t358 + t206 * t552) + t545 * t11 - t544 * t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161 * t197 - t464, t197 * t566 + t87, -t161 ^ 2 - t566 ^ 2, t161 * t38 - t39 * t566 + t387, 0, 0, 0, 0, 0, 0, t101 * t196 + t30, -t29 + t588, -t586 - t589, -t11 * t100 - t101 * t423 + t387 - t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t551, t586 - t589, -t29 - t588, t551, -t475 + (-qJD(6) + t196) * t101, t110, t11 * t196 - t55 * t101 - g(1) * t121 - g(2) * t591 - g(3) * (-t206 * t359 + t259 * t360) + t2, -t423 * t196 - t55 * t100 + g(1) * t122 - g(2) * t590 - g(3) * (-t206 * t360 - t259 * t359) - t1, 0, 0;];
tau_reg  = t5;
