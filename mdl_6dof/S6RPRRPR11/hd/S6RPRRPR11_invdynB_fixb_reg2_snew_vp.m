% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 00:22
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRPR11_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR11_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR11_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 00:15:28
% EndTime: 2019-05-06 00:18:07
% DurationCPUTime: 167.15s
% Computational Cost: add. (1778832->1280), mult. (5578796->2154), div. (0->0), fcn. (4823535->16), ass. (0->934)
t1371 = sin(pkin(12));
t1372 = sin(pkin(7));
t1373 = sin(pkin(6));
t1375 = cos(pkin(12));
t1376 = cos(pkin(7));
t1377 = cos(pkin(6));
t1381 = sin(qJ(1));
t1385 = cos(qJ(1));
t1359 = t1381 * g(1) - t1385 * g(2);
t1443 = qJDD(1) * pkin(1) + t1359;
t1537 = t1377 * g(3) - qJDD(2);
t1560 = qJDD(1) * t1375;
t1539 = t1373 * t1560;
t1390 = -pkin(2) * t1539 - t1373 * t1443 - t1537;
t1427 = t1377 * t1443;
t1559 = qJDD(1) * t1377;
t1557 = pkin(2) * t1559;
t1572 = t1373 * t1375;
t1391 = -g(3) * t1572 + t1375 * t1427 + t1557;
t1360 = t1385 * g(1) + t1381 * g(2);
t1561 = qJDD(1) * t1373;
t1402 = qJ(2) * t1561 - t1360;
t1369 = t1377 ^ 2;
t1622 = pkin(9) * t1372;
t1437 = (t1371 * pkin(1) + t1369 * t1622) * qJD(1);
t1579 = t1371 * t1372;
t1444 = -pkin(2) * t1375 - pkin(9) * t1579;
t1365 = t1371 ^ 2;
t1368 = t1375 ^ 2;
t1563 = t1365 + t1368;
t1612 = qJD(1) * t1373;
t1621 = pkin(9) * t1376;
t1626 = pkin(2) * t1371;
t1628 = -2 * qJD(2);
t1190 = qJD(1) * (t1372 * t1437 + t1373 * (qJD(1) * t1377 * ((qJ(2) + 0.2e1 * t1621) * t1372 * t1375 - t1376 * t1626) - (t1444 * t1579 + t1376 * (-t1563 * t1621 - qJ(2))) * t1612 + t1579 * t1628)) + t1372 * (-t1371 * t1402 + t1391) - t1376 * t1390;
t1370 = sin(pkin(13));
t1384 = cos(qJ(3));
t1380 = sin(qJ(3));
t1569 = t1376 * t1380;
t1575 = t1372 * t1380;
t1394 = t1377 * t1575 + (t1371 * t1384 + t1375 * t1569) * t1373;
t1320 = t1394 * qJD(1);
t1570 = t1376 * t1377;
t1636 = -t1372 * t1572 + t1570;
t1333 = qJD(1) * t1636 + qJD(3);
t1379 = sin(qJ(4));
t1383 = cos(qJ(4));
t1301 = t1320 * t1383 + t1333 * t1379;
t1578 = t1371 * t1380;
t1571 = t1373 * t1376;
t1545 = t1375 * t1571;
t1574 = t1372 * t1384;
t1646 = -t1377 * t1574 - t1384 * t1545;
t1318 = qJD(1) * t1646 + t1578 * t1612;
t1313 = qJD(4) + t1318;
t1374 = cos(pkin(13));
t1262 = t1301 * t1370 - t1374 * t1313;
t1264 = t1301 * t1374 + t1313 * t1370;
t1200 = t1264 * t1262;
t1393 = t1394 * qJDD(1);
t1283 = -qJD(3) * t1318 + t1393;
t1332 = -t1372 * t1539 + t1376 * t1559 + qJDD(3);
t1535 = t1283 * t1379 - t1383 * t1332;
t1226 = qJD(4) * t1301 + t1535;
t1638 = -t1200 + t1226;
t1652 = t1370 * t1638;
t1651 = t1374 * t1638;
t1378 = sin(qJ(6));
t1382 = cos(qJ(6));
t1196 = t1382 * t1262 + t1264 * t1378;
t1198 = -t1262 * t1378 + t1264 * t1382;
t1118 = t1198 * t1196;
t1409 = qJDD(6) + t1226;
t1640 = -t1118 + t1409;
t1650 = t1378 * t1640;
t1299 = t1320 * t1379 - t1383 * t1333;
t1250 = t1301 * t1299;
t1541 = t1371 * t1561;
t1438 = qJDD(1) * t1646 + t1380 * t1541;
t1399 = -qJD(3) * t1320 - t1438;
t1278 = qJDD(4) - t1399;
t1637 = -t1250 + t1278;
t1649 = t1379 * t1637;
t1648 = t1382 * t1640;
t1647 = t1383 * t1637;
t1576 = t1372 * t1377;
t1440 = t1545 + t1576;
t1644 = pkin(9) * t1440;
t1590 = t1318 * t1320;
t1398 = t1332 - t1590;
t1643 = t1380 * t1398;
t1642 = t1384 * t1398;
t1367 = t1373 ^ 2;
t1633 = qJD(1) ^ 2;
t1549 = t1371 * t1375 * t1633;
t1641 = (t1367 + t1369) * t1373 * t1549;
t1293 = qJD(6) + t1299;
t1171 = t1293 * t1196;
t1227 = -t1299 * qJD(4) + t1383 * t1283 + t1379 * t1332;
t1191 = -t1227 * t1370 + t1374 * t1278;
t1192 = t1374 * t1227 + t1370 * t1278;
t1405 = qJD(6) * t1196 - t1191 * t1378 - t1192 * t1382;
t1639 = -t1171 - t1405;
t1222 = t1299 * t1262;
t1129 = -t1222 - t1192;
t1127 = -t1222 + t1192;
t1268 = t1313 * t1299;
t1183 = -t1268 + t1227;
t1304 = t1333 * t1318;
t1244 = -t1304 + t1283;
t1536 = -t1382 * t1191 + t1192 * t1378;
t1026 = (qJD(6) - t1293) * t1198 + t1536;
t1180 = (qJD(4) - t1313) * t1301 + t1535;
t1194 = t1196 ^ 2;
t1195 = t1198 ^ 2;
t1632 = t1262 ^ 2;
t1261 = t1264 ^ 2;
t1292 = t1293 ^ 2;
t1631 = t1299 ^ 2;
t1298 = t1301 ^ 2;
t1630 = t1313 ^ 2;
t1316 = t1318 ^ 2;
t1317 = t1320 ^ 2;
t1629 = t1333 ^ 2;
t1627 = 2 * qJD(2);
t1625 = pkin(3) * t1380;
t1624 = pkin(3) * t1384;
t1623 = pkin(4) * t1379;
t1620 = t1373 * g(3);
t1362 = t1371 * t1620;
t1436 = t1444 * t1373;
t1543 = qJ(2) + t1621;
t1531 = t1377 * t1543;
t1235 = t1375 * t1402 + t1371 * t1427 - t1362 + qJDD(1) * t1644 + ((-t1375 * pkin(1) - pkin(2) * t1369) * qJD(1) + (t1375 * t1627 + (t1371 * t1531 + t1375 * t1436) * qJD(1)) * t1373) * qJD(1);
t1568 = t1376 * t1384;
t1573 = t1373 * t1633;
t1619 = qJ(2) * t1373;
t1132 = t1235 * t1380 - (t1557 + (t1427 - t1620) * t1375 + (-t1543 * t1561 + t1360) * t1371 + (t1437 + (t1371 * t1628 + (-t1371 * t1436 + t1375 * t1531) * qJD(1)) * t1373) * qJD(1)) * t1568 - (((-pkin(1) + t1444) * qJDD(1) - t1359) * t1373 + (t1377 * t1626 - t1619 + (-t1375 * t1576 - t1563 * t1571) * pkin(9)) * t1573 - t1537) * t1574;
t1279 = pkin(3) * t1318 - pkin(10) * t1320;
t1100 = -t1332 * pkin(3) - t1629 * pkin(10) + t1279 * t1320 + t1132;
t1005 = -t1183 * qJ(5) + (t1301 * t1313 + t1226) * pkin(4) + t1100;
t1133 = t1384 * t1235 + (t1376 * (t1633 * pkin(1) + t1360) + ((-pkin(9) * t1372 ^ 2 - t1376 * t1543) * qJDD(1) + (pkin(2) * qJD(1) * t1440 + t1376 * t1628) * qJD(1)) * t1373) * t1578 + (t1372 * t1390 + t1376 * t1391 + ((-t1372 * t1373 + t1375 * t1570) * t1619 + t1636 * t1644) * t1633) * t1380;
t1101 = -pkin(3) * t1629 + t1332 * pkin(10) - t1318 * t1279 + t1133;
t1566 = qJD(3) + t1333;
t1240 = t1320 * t1566 + t1438;
t1387 = t1240 * pkin(3) - t1244 * pkin(10) - t1190;
t1012 = t1383 * t1101 + t1379 * t1387;
t1239 = pkin(4) * t1299 - qJ(5) * t1301;
t977 = -pkin(4) * t1630 + qJ(5) * t1278 - t1239 * t1299 + t1012;
t907 = 0.2e1 * qJD(5) * t1264 - t1374 * t1005 + t1370 * t977;
t869 = pkin(5) * t1638 + pkin(11) * t1129 - t907;
t1217 = pkin(5) * t1299 - pkin(11) * t1264;
t908 = -0.2e1 * qJD(5) * t1262 + t1370 * t1005 + t1374 * t977;
t879 = -pkin(5) * t1632 + pkin(11) * t1191 - t1217 * t1299 + t908;
t805 = t1378 * t869 + t1382 * t879;
t804 = t1378 * t879 - t1382 * t869;
t749 = t1378 * t805 - t1382 * t804;
t1618 = t1370 * t749;
t1011 = t1101 * t1379 - t1383 * t1387;
t976 = -t1278 * pkin(4) - t1630 * qJ(5) + t1239 * t1301 + qJDD(5) + t1011;
t1617 = t1370 * t976;
t1616 = t1374 * t749;
t1615 = t1374 * t976;
t937 = -t1191 * pkin(5) - pkin(11) * t1632 + t1217 * t1264 + t976;
t1614 = t1378 * t937;
t1613 = t1382 * t937;
t1087 = t1118 + t1409;
t1610 = t1087 * t1378;
t1609 = t1087 * t1382;
t1608 = t1100 * t1379;
t1607 = t1100 * t1383;
t1137 = t1200 + t1226;
t1606 = t1137 * t1370;
t1605 = t1137 * t1374;
t1604 = t1190 * t1380;
t1603 = t1190 * t1384;
t1210 = t1250 + t1278;
t1602 = t1210 * t1379;
t1601 = t1210 * t1383;
t1600 = t1226 * t1379;
t1599 = t1264 * t1299;
t1270 = -t1332 - t1590;
t1598 = t1270 * t1380;
t1597 = t1270 * t1384;
t1596 = t1293 * t1378;
t1595 = t1293 * t1382;
t1594 = t1299 * t1370;
t1593 = t1299 * t1374;
t1592 = t1313 * t1379;
t1591 = t1313 * t1383;
t1589 = t1320 * t1380;
t1400 = qJ(2) * t1573 + t1443;
t1321 = t1373 * t1400 + t1537;
t1588 = t1321 * t1371;
t1587 = t1321 * t1375;
t1351 = t1367 * t1549;
t1338 = t1351 + t1559;
t1586 = t1338 * t1371;
t1585 = t1338 * t1375;
t1339 = -t1351 + t1559;
t1584 = t1339 * t1371;
t1583 = t1339 * t1375;
t1582 = t1365 * t1367;
t1581 = t1367 * t1633;
t1580 = t1367 * t1368;
t1567 = t1377 * t1633;
t1562 = qJDD(1) * t1367;
t1556 = -pkin(4) * t1383 - pkin(3);
t1555 = t1379 * t1118;
t1554 = t1383 * t1118;
t1553 = t1379 * t1200;
t1552 = t1383 * t1200;
t1551 = t1380 * t1250;
t1550 = t1384 * t1250;
t1544 = t1373 * t1567;
t1540 = t1371 * t1560;
t1538 = t1373 * t1559;
t750 = t1378 * t804 + t1382 * t805;
t924 = t1011 * t1379 + t1383 * t1012;
t1323 = -t1359 * t1381 - t1385 * t1360;
t1357 = qJDD(1) * t1385 - t1381 * t1633;
t1532 = -pkin(8) * t1357 - g(3) * t1381;
t1269 = -t1629 - t1316;
t1212 = t1269 * t1384 - t1643;
t1530 = pkin(9) * t1212 + t1603;
t1273 = -t1317 - t1629;
t1214 = -t1273 * t1380 + t1597;
t1529 = pkin(9) * t1214 - t1604;
t821 = t1370 * t908 - t1374 * t907;
t822 = t1370 * t907 + t1374 * t908;
t702 = t1374 * t750 - t1618;
t699 = t1379 * t937 + t1383 * t702;
t701 = t1370 * t750 + t1616;
t1510 = t1380 * t699 - t1384 * t701;
t698 = t1379 * t702 - t1383 * t937;
t658 = -t1372 * t698 + t1376 * t1510;
t674 = t1380 * t701 + t1384 * t699;
t1528 = t1371 * t674 + t1375 * t658;
t807 = t1379 * t976 + t1383 * t822;
t1509 = t1380 * t807 - t1384 * t821;
t806 = t1379 * t822 - t1383 * t976;
t729 = -t1372 * t806 + t1376 * t1509;
t760 = t1380 * t821 + t1384 * t807;
t1527 = t1371 * t760 + t1375 * t729;
t1075 = -t1194 - t1195;
t1030 = -t1171 + t1405;
t932 = -t1026 * t1378 + t1030 * t1382;
t934 = -t1026 * t1382 - t1030 * t1378;
t858 = -t1370 * t932 + t1374 * t934;
t833 = t1075 * t1379 + t1383 * t858;
t856 = t1370 * t934 + t1374 * t932;
t1508 = t1380 * t833 - t1384 * t856;
t832 = -t1075 * t1383 + t1379 * t858;
t746 = -t1372 * t832 + t1376 * t1508;
t775 = t1380 * t856 + t1384 * t833;
t1526 = t1371 * t775 + t1375 * t746;
t1117 = -t1195 + t1194;
t1025 = (qJD(6) + t1293) * t1198 + t1536;
t931 = -t1025 * t1378 + t1382 * t1639;
t933 = -t1025 * t1382 - t1378 * t1639;
t857 = -t1370 * t931 + t1374 * t933;
t844 = -t1117 * t1379 + t1383 * t857;
t855 = -t1370 * t933 - t1374 * t931;
t1507 = t1380 * t844 + t1384 * t855;
t843 = t1117 * t1383 + t1379 * t857;
t748 = -t1372 * t843 + t1376 * t1507;
t776 = -t1380 * t855 + t1384 * t844;
t1525 = t1371 * t776 + t1375 * t748;
t1111 = -t1292 - t1194;
t997 = t1111 * t1378 + t1648;
t998 = t1111 * t1382 - t1650;
t922 = -t1370 * t997 + t1374 * t998;
t873 = t1025 * t1379 + t1383 * t922;
t921 = t1370 * t998 + t1374 * t997;
t1506 = t1380 * t873 - t1384 * t921;
t872 = -t1025 * t1383 + t1379 * t922;
t774 = -t1372 * t872 + t1376 * t1506;
t815 = t1380 * t921 + t1384 * t873;
t1524 = t1371 * t815 + t1375 * t774;
t1144 = -t1195 - t1292;
t1038 = t1144 * t1382 - t1610;
t1039 = -t1144 * t1378 - t1609;
t940 = -t1038 * t1370 + t1039 * t1374;
t886 = t1379 * t1639 + t1383 * t940;
t939 = t1038 * t1374 + t1039 * t1370;
t1505 = t1380 * t886 - t1384 * t939;
t885 = t1379 * t940 - t1383 * t1639;
t784 = -t1372 * t885 + t1376 * t1505;
t827 = t1380 * t939 + t1384 * t886;
t1523 = t1371 * t827 + t1375 * t784;
t1169 = -t1195 + t1292;
t1042 = t1169 * t1382 + t1650;
t1044 = -t1169 * t1378 + t1648;
t948 = -t1042 * t1370 + t1044 * t1374;
t894 = -t1030 * t1379 + t1383 * t948;
t946 = -t1042 * t1374 - t1044 * t1370;
t1504 = t1380 * t894 + t1384 * t946;
t892 = t1030 * t1383 + t1379 * t948;
t790 = -t1372 * t892 + t1376 * t1504;
t835 = -t1380 * t946 + t1384 * t894;
t1522 = t1371 * t835 + t1375 * t790;
t1168 = t1194 - t1292;
t1043 = t1168 * t1378 + t1609;
t1045 = t1168 * t1382 - t1610;
t949 = -t1043 * t1370 + t1045 * t1374;
t895 = -t1026 * t1379 + t1383 * t949;
t947 = -t1043 * t1374 - t1045 * t1370;
t1503 = t1380 * t895 + t1384 * t947;
t893 = t1026 * t1383 + t1379 * t949;
t791 = -t1372 * t893 + t1376 * t1503;
t836 = -t1380 * t947 + t1384 * t895;
t1521 = t1371 * t836 + t1375 * t791;
t1066 = -qJD(6) * t1198 - t1536;
t1021 = t1066 * t1382 + t1196 * t1596;
t1022 = -t1066 * t1378 + t1196 * t1595;
t929 = -t1021 * t1370 + t1022 * t1374;
t916 = t1383 * t929 - t1555;
t927 = -t1021 * t1374 - t1022 * t1370;
t1502 = t1380 * t916 + t1384 * t927;
t914 = t1379 * t929 + t1554;
t798 = -t1372 * t914 + t1376 * t1502;
t840 = -t1380 * t927 + t1384 * t916;
t1520 = t1371 * t840 + t1375 * t798;
t1023 = t1198 * t1595 - t1378 * t1405;
t1024 = -t1198 * t1596 - t1382 * t1405;
t930 = -t1023 * t1370 + t1024 * t1374;
t917 = t1383 * t930 + t1555;
t928 = -t1023 * t1374 - t1024 * t1370;
t1501 = t1380 * t917 + t1384 * t928;
t915 = t1379 * t930 - t1554;
t799 = -t1372 * t915 + t1376 * t1501;
t841 = -t1380 * t928 + t1384 * t917;
t1519 = t1371 * t841 + t1375 * t799;
t1491 = -t1100 * t1384 + t1380 * t924;
t923 = -t1011 * t1383 + t1012 * t1379;
t829 = -t1372 * t923 + t1376 * t1491;
t902 = t1100 * t1380 + t1384 * t924;
t1518 = t1371 * t902 + t1375 * t829;
t1093 = (-t1196 * t1378 - t1198 * t1382) * t1293;
t1094 = (-t1196 * t1382 + t1198 * t1378) * t1293;
t994 = -t1093 * t1370 + t1094 * t1374;
t979 = t1379 * t1409 + t1383 * t994;
t993 = -t1093 * t1374 - t1094 * t1370;
t1500 = t1380 * t979 + t1384 * t993;
t978 = t1379 * t994 - t1383 * t1409;
t861 = -t1372 * t978 + t1376 * t1500;
t913 = -t1380 * t993 + t1384 * t979;
t1517 = t1371 * t913 + t1375 * t861;
t1124 = -t1191 - t1599;
t1056 = -t1124 * t1370 + t1129 * t1374;
t1058 = -t1124 * t1374 - t1129 * t1370;
t1153 = t1261 + t1632;
t991 = t1058 * t1383 - t1153 * t1379;
t1494 = -t1056 * t1384 + t1380 * t991;
t990 = t1058 * t1379 + t1153 * t1383;
t876 = -t1372 * t990 + t1376 * t1494;
t936 = t1056 * t1380 + t1384 * t991;
t1516 = t1371 * t936 + t1375 * t876;
t1125 = t1191 - t1599;
t1057 = t1125 * t1374 - t1127 * t1370;
t1199 = -t1261 + t1632;
t1009 = t1057 * t1379 + t1199 * t1383;
t1010 = t1057 * t1383 - t1199 * t1379;
t1055 = -t1125 * t1370 - t1127 * t1374;
t1489 = t1010 * t1380 + t1055 * t1384;
t883 = -t1009 * t1372 + t1376 * t1489;
t941 = t1010 * t1384 - t1055 * t1380;
t1515 = t1371 * t941 + t1375 * t883;
t1173 = -t1631 - t1632;
t1074 = t1173 * t1374 - t1652;
t1001 = t1074 * t1379 + t1125 * t1383;
t1002 = t1074 * t1383 - t1125 * t1379;
t1073 = t1173 * t1370 + t1651;
t1490 = t1002 * t1380 - t1073 * t1384;
t891 = -t1001 * t1372 + t1376 * t1490;
t952 = t1002 * t1384 + t1073 * t1380;
t1514 = t1371 * t952 + t1375 * t891;
t1193 = -t1261 - t1631;
t1083 = -t1193 * t1370 - t1605;
t1015 = t1083 * t1379 - t1127 * t1383;
t1016 = t1083 * t1383 + t1127 * t1379;
t1082 = t1193 * t1374 - t1606;
t1487 = t1016 * t1380 - t1082 * t1384;
t899 = -t1015 * t1372 + t1376 * t1487;
t959 = t1016 * t1384 + t1082 * t1380;
t1513 = t1371 * t959 + t1375 * t899;
t1221 = -t1261 + t1631;
t1097 = -t1221 * t1370 + t1651;
t1031 = t1097 * t1379 + t1129 * t1383;
t1033 = t1097 * t1383 - t1129 * t1379;
t1095 = -t1221 * t1374 - t1652;
t1485 = t1033 * t1380 + t1095 * t1384;
t911 = -t1031 * t1372 + t1376 * t1485;
t963 = t1033 * t1384 - t1095 * t1380;
t1512 = t1371 * t963 + t1375 * t911;
t1220 = -t1631 + t1632;
t1098 = t1220 * t1374 - t1606;
t1032 = t1098 * t1379 + t1124 * t1383;
t1034 = t1098 * t1383 - t1124 * t1379;
t1096 = -t1220 * t1370 - t1605;
t1484 = t1034 * t1380 + t1096 * t1384;
t912 = -t1032 * t1372 + t1376 * t1484;
t964 = t1034 * t1384 - t1096 * t1380;
t1511 = t1371 * t964 + t1375 * t912;
t1346 = (-t1369 - t1580) * t1633;
t1310 = t1346 * t1375 - t1586;
t1499 = qJ(2) * t1310 + t1587;
t1344 = (-t1369 - t1582) * t1633;
t1312 = -t1344 * t1371 - t1583;
t1498 = qJ(2) * t1312 - t1588;
t1121 = -t1191 * t1370 + t1262 * t1593;
t1079 = t1121 * t1383 - t1553;
t1120 = -t1191 * t1374 - t1262 * t1594;
t1006 = t1079 * t1384 - t1120 * t1380;
t1077 = t1121 * t1379 + t1552;
t1478 = t1079 * t1380 + t1120 * t1384;
t955 = -t1077 * t1372 + t1376 * t1478;
t1497 = t1006 * t1371 + t1375 * t955;
t1123 = t1192 * t1374 - t1264 * t1594;
t1080 = t1123 * t1383 + t1553;
t1122 = -t1192 * t1370 - t1264 * t1593;
t1007 = t1080 * t1384 - t1122 * t1380;
t1078 = t1123 * t1379 - t1552;
t1477 = t1080 * t1380 + t1122 * t1384;
t956 = -t1078 * t1372 + t1376 * t1477;
t1496 = t1007 * t1371 + t1375 * t956;
t1146 = (-t1262 * t1374 + t1264 * t1370) * t1299;
t1108 = t1146 * t1383 + t1600;
t1145 = (t1262 * t1370 + t1264 * t1374) * t1299;
t1052 = t1108 * t1384 - t1145 * t1380;
t1224 = t1383 * t1226;
t1107 = t1146 * t1379 - t1224;
t1474 = t1108 * t1380 + t1145 * t1384;
t972 = -t1107 * t1372 + t1376 * t1474;
t1495 = t1052 * t1371 + t1375 * t972;
t1184 = -t1268 - t1227;
t1105 = -t1180 * t1383 - t1184 * t1379;
t1213 = t1631 + t1298;
t1065 = t1105 * t1384 - t1213 * t1380;
t1103 = -t1180 * t1379 + t1184 * t1383;
t1475 = t1105 * t1380 + t1213 * t1384;
t984 = -t1103 * t1372 + t1376 * t1475;
t1493 = t1065 * t1371 + t1375 * t984;
t1181 = (-qJD(4) - t1313) * t1301 - t1535;
t1104 = t1181 * t1383 - t1183 * t1379;
t1246 = -t1298 + t1631;
t1072 = t1104 * t1384 - t1246 * t1380;
t1102 = t1181 * t1379 + t1183 * t1383;
t1476 = t1104 * t1380 + t1246 * t1384;
t986 = -t1102 * t1372 + t1376 * t1476;
t1492 = t1072 * t1371 + t1375 * t986;
t1472 = -t1132 * t1384 + t1133 * t1380;
t1014 = t1190 * t1372 + t1376 * t1472;
t1062 = t1132 * t1380 + t1133 * t1384;
t1488 = t1014 * t1375 + t1062 * t1371;
t1228 = -t1631 - t1630;
t1139 = t1228 * t1379 + t1647;
t1140 = t1228 * t1383 - t1649;
t1470 = t1140 * t1380 + t1181 * t1384;
t1020 = -t1139 * t1372 + t1376 * t1470;
t1081 = t1140 * t1384 - t1181 * t1380;
t1486 = t1020 * t1375 + t1081 * t1371;
t1234 = -t1298 - t1630;
t1149 = t1234 * t1383 - t1602;
t1150 = -t1234 * t1379 - t1601;
t1468 = t1150 * t1380 - t1183 * t1384;
t1037 = -t1149 * t1372 + t1376 * t1468;
t1085 = t1150 * t1384 + t1183 * t1380;
t1483 = t1037 * t1375 + t1085 * t1371;
t1267 = -t1298 + t1630;
t1159 = t1267 * t1383 + t1649;
t1161 = -t1267 * t1379 + t1647;
t1465 = t1161 * t1380 + t1184 * t1384;
t1048 = -t1159 * t1372 + t1376 * t1465;
t1091 = t1161 * t1384 - t1184 * t1380;
t1482 = t1048 * t1375 + t1091 * t1371;
t1266 = t1631 - t1630;
t1160 = t1266 * t1379 + t1601;
t1162 = t1266 * t1383 - t1602;
t1464 = t1162 * t1380 + t1180 * t1384;
t1049 = -t1160 * t1372 + t1376 * t1464;
t1092 = t1162 * t1384 - t1180 * t1380;
t1481 = t1049 * t1375 + t1092 * t1371;
t1175 = t1299 * t1592 - t1224;
t1176 = t1299 * t1591 + t1600;
t1442 = t1176 * t1380 + t1550;
t1070 = -t1175 * t1372 + t1376 * t1442;
t1130 = t1176 * t1384 - t1551;
t1480 = t1070 * t1375 + t1130 * t1371;
t1177 = t1227 * t1379 + t1301 * t1591;
t1178 = t1227 * t1383 - t1301 * t1592;
t1441 = t1178 * t1380 - t1550;
t1071 = -t1177 * t1372 + t1376 * t1441;
t1131 = t1178 * t1384 + t1551;
t1479 = t1071 * t1375 + t1131 * t1371;
t1207 = (-t1299 * t1379 - t1301 * t1383) * t1313;
t1208 = (-t1299 * t1383 + t1301 * t1379) * t1313;
t1459 = t1208 * t1380 - t1278 * t1384;
t1113 = -t1207 * t1372 + t1376 * t1459;
t1170 = t1208 * t1384 + t1278 * t1380;
t1473 = t1113 * t1375 + t1170 * t1371;
t1265 = -t1316 - t1317;
t1245 = t1304 + t1283;
t1395 = (-qJD(3) + t1333) * t1320 - t1438;
t1456 = -t1245 * t1384 + t1380 * t1395;
t1135 = -t1265 * t1372 + t1376 * t1456;
t1187 = t1245 * t1380 + t1384 * t1395;
t1471 = t1135 * t1375 + t1187 * t1371;
t1284 = t1317 - t1316;
t1457 = -t1240 * t1380 + t1244 * t1384;
t1148 = -t1284 * t1372 + t1376 * t1457;
t1186 = -t1240 * t1384 - t1244 * t1380;
t1469 = t1148 * t1375 + t1186 * t1371;
t1455 = t1269 * t1380 + t1642;
t1152 = -t1240 * t1372 + t1376 * t1455;
t1467 = t1152 * t1375 + t1212 * t1371;
t1243 = -t1318 * t1566 + t1393;
t1454 = t1273 * t1384 + t1598;
t1155 = -t1243 * t1372 + t1376 * t1454;
t1466 = t1155 * t1375 + t1214 * t1371;
t1303 = -t1317 + t1629;
t1452 = t1303 * t1384 + t1643;
t1165 = -t1245 * t1372 + t1376 * t1452;
t1229 = -t1303 * t1380 + t1642;
t1463 = t1165 * t1375 + t1229 * t1371;
t1302 = t1316 - t1629;
t1453 = t1302 * t1380 - t1597;
t1166 = -t1372 * t1395 + t1376 * t1453;
t1230 = t1302 * t1384 + t1598;
t1462 = t1166 * t1375 + t1230 * t1371;
t1396 = t1384 * t1399;
t1202 = t1376 * t1396 + (t1320 * t1372 + t1333 * t1569) * t1318;
t1236 = t1304 * t1384 - t1380 * t1399;
t1461 = t1202 * t1375 + t1236 * t1371;
t1204 = t1283 * t1569 + (-t1318 * t1372 + t1333 * t1568) * t1320;
t1238 = t1283 * t1384 - t1333 * t1589;
t1460 = t1204 * t1375 + t1238 * t1371;
t1439 = t1333 * (-t1318 * t1380 - t1320 * t1384);
t1232 = -t1332 * t1372 + t1376 * t1439;
t1251 = (-t1318 * t1384 + t1589) * t1333;
t1458 = t1232 * t1375 + t1251 * t1371;
t1392 = (-pkin(1) * qJD(1) + t1373 * t1627) * qJD(1) + t1402;
t1397 = t1377 * t1400;
t1294 = (-t1397 + t1620) * t1375 + t1392 * t1371;
t1295 = t1371 * t1397 + t1375 * t1392 - t1362;
t1451 = -t1294 * t1375 + t1295 * t1371;
t1237 = t1294 * t1371 + t1295 * t1375;
t1353 = t1375 * t1544;
t1334 = t1353 + t1541;
t1352 = t1371 * t1544;
t1337 = -t1352 + t1539;
t1450 = t1334 * t1375 + t1337 * t1371;
t1335 = -t1353 + t1541;
t1336 = t1352 + t1539;
t1449 = -t1335 * t1375 + t1336 * t1371;
t1343 = (t1369 - t1582) * t1633;
t1448 = t1343 * t1375 + t1586;
t1447 = t1346 * t1371 + t1585;
t1446 = t1344 * t1375 - t1584;
t1345 = (-t1369 + t1580) * t1633;
t1445 = t1345 * t1371 + t1583;
t1322 = t1359 * t1385 - t1381 * t1360;
t735 = -pkin(5) * t937 + pkin(11) * t750;
t675 = -pkin(11) * t1616 - qJ(5) * t701 - t1370 * t735;
t686 = -pkin(4) * t701 - pkin(5) * t749;
t653 = -pkin(10) * t698 - t1379 * t686 + t1383 * t675;
t656 = -pkin(3) * t698 + pkin(4) * t937 + pkin(11) * t1618 - qJ(5) * t702 - t1374 * t735;
t1435 = pkin(9) * t674 + t1380 * t653 + t1384 * t656;
t731 = -pkin(5) * t1075 + pkin(11) * t934 + t750;
t734 = -pkin(11) * t932 - t749;
t691 = -qJ(5) * t856 - t1370 * t731 + t1374 * t734;
t812 = -pkin(4) * t856 - pkin(5) * t932;
t684 = -pkin(10) * t832 - t1379 * t812 + t1383 * t691;
t685 = -pkin(3) * t832 + pkin(4) * t1075 - qJ(5) * t858 - t1370 * t734 - t1374 * t731;
t1434 = pkin(9) * t775 + t1380 * t684 + t1384 * t685;
t767 = -pkin(4) * t921 - pkin(5) * t997 + t804;
t852 = -pkin(5) * t1025 + pkin(11) * t998 - t1613;
t880 = -pkin(11) * t997 + t1614;
t769 = -qJ(5) * t921 - t1370 * t852 + t1374 * t880;
t707 = -pkin(10) * t872 - t1379 * t767 + t1383 * t769;
t742 = -pkin(3) * t872 + pkin(4) * t1025 - qJ(5) * t922 - t1370 * t880 - t1374 * t852;
t1433 = pkin(9) * t815 + t1380 * t707 + t1384 * t742;
t770 = -pkin(4) * t939 - pkin(5) * t1038 + t805;
t859 = -pkin(5) * t1639 + pkin(11) * t1039 + t1614;
t884 = -pkin(11) * t1038 + t1613;
t771 = -qJ(5) * t939 - t1370 * t859 + t1374 * t884;
t714 = -pkin(10) * t885 - t1379 * t770 + t1383 * t771;
t752 = -pkin(3) * t885 + pkin(4) * t1639 - qJ(5) * t940 - t1370 * t884 - t1374 * t859;
t1432 = pkin(9) * t827 + t1380 * t714 + t1384 * t752;
t730 = -pkin(10) * t806 + (-qJ(5) * t1383 + t1623) * t821;
t751 = -pkin(3) * t806 + pkin(4) * t976 - qJ(5) * t822;
t1431 = pkin(9) * t760 + t1380 * t730 + t1384 * t751;
t813 = -qJ(5) * t1056 - t821;
t781 = -pkin(10) * t990 + t1056 * t1623 + t1383 * t813;
t792 = -pkin(3) * t990 - pkin(4) * t1153 - qJ(5) * t1058 - t822;
t1430 = pkin(9) * t936 + t1380 * t781 + t1384 * t792;
t874 = -pkin(4) * t1073 + t907;
t926 = -qJ(5) * t1073 + t1617;
t808 = -pkin(10) * t1001 - t1379 * t874 + t1383 * t926;
t865 = -pkin(3) * t1001 - pkin(4) * t1125 - qJ(5) * t1074 + t1615;
t1429 = pkin(9) * t952 + t1380 * t808 + t1384 * t865;
t877 = -pkin(4) * t1082 + t908;
t938 = -qJ(5) * t1082 + t1615;
t810 = -pkin(10) * t1015 - t1379 * t877 + t1383 * t938;
t866 = -pkin(3) * t1015 + pkin(4) * t1127 - qJ(5) * t1083 - t1617;
t1428 = pkin(9) * t959 + t1380 * t810 + t1384 * t866;
t1040 = -pkin(10) * t1139 + t1608;
t969 = -pkin(3) * t1139 + t1011;
t1426 = pkin(9) * t1081 + t1040 * t1380 + t1384 * t969;
t1050 = -pkin(10) * t1149 + t1607;
t970 = -pkin(3) * t1149 + t1012;
t1425 = pkin(9) * t1085 + t1050 * t1380 + t1384 * t970;
t651 = -pkin(3) * t701 + pkin(10) * t699 + t1379 * t675 + t1383 * t686;
t657 = t1372 * t1510 + t1376 * t698;
t635 = -pkin(2) * t657 - t1372 * t651 + t1376 * t1435;
t637 = -t1380 * t656 + t1384 * t653 + (-t1372 * t657 - t1376 * t658) * pkin(9);
t652 = -t1371 * t658 + t1375 * t674;
t1424 = qJ(2) * t652 + t1371 * t637 + t1375 * t635;
t681 = -pkin(3) * t856 + pkin(10) * t833 + t1379 * t691 + t1383 * t812;
t745 = t1372 * t1508 + t1376 * t832;
t650 = -pkin(2) * t745 - t1372 * t681 + t1376 * t1434;
t654 = -t1380 * t685 + t1384 * t684 + (-t1372 * t745 - t1376 * t746) * pkin(9);
t708 = -t1371 * t746 + t1375 * t775;
t1423 = qJ(2) * t708 + t1371 * t654 + t1375 * t650;
t709 = pkin(10) * t807 + (-qJ(5) * t1379 + t1556) * t821;
t728 = t1372 * t1509 + t1376 * t806;
t660 = -pkin(2) * t728 - t1372 * t709 + t1376 * t1431;
t670 = -t1380 * t751 + t1384 * t730 + (-t1372 * t728 - t1376 * t729) * pkin(9);
t695 = -t1371 * t729 + t1375 * t760;
t1422 = qJ(2) * t695 + t1371 * t670 + t1375 * t660;
t703 = -pkin(3) * t921 + pkin(10) * t873 + t1379 * t769 + t1383 * t767;
t773 = t1372 * t1506 + t1376 * t872;
t664 = -pkin(2) * t773 - t1372 * t703 + t1376 * t1433;
t676 = -t1380 * t742 + t1384 * t707 + (-t1372 * t773 - t1376 * t774) * pkin(9);
t740 = -t1371 * t774 + t1375 * t815;
t1421 = qJ(2) * t740 + t1371 * t676 + t1375 * t664;
t704 = -pkin(3) * t939 + pkin(10) * t886 + t1379 * t771 + t1383 * t770;
t783 = t1372 * t1505 + t1376 * t885;
t667 = -pkin(2) * t783 - t1372 * t704 + t1376 * t1432;
t680 = -t1380 * t752 + t1384 * t714 + (-t1372 * t783 - t1376 * t784) * pkin(9);
t753 = -t1371 * t784 + t1375 * t827;
t1420 = qJ(2) * t753 + t1371 * t680 + t1375 * t667;
t772 = pkin(10) * t991 + t1056 * t1556 + t1379 * t813;
t875 = t1372 * t1494 + t1376 * t990;
t697 = -pkin(2) * t875 - t1372 * t772 + t1376 * t1430;
t710 = -t1380 * t792 + t1384 * t781 + (-t1372 * t875 - t1376 * t876) * pkin(9);
t820 = -t1371 * t876 + t1375 * t936;
t1419 = qJ(2) * t820 + t1371 * t710 + t1375 * t697;
t795 = -pkin(3) * t1073 + pkin(10) * t1002 + t1379 * t926 + t1383 * t874;
t890 = t1001 * t1376 + t1372 * t1490;
t713 = -pkin(2) * t890 - t1372 * t795 + t1376 * t1429;
t732 = -t1380 * t865 + t1384 * t808 + (-t1372 * t890 - t1376 * t891) * pkin(9);
t837 = -t1371 * t891 + t1375 * t952;
t1418 = qJ(2) * t837 + t1371 * t732 + t1375 * t713;
t800 = -pkin(3) * t1082 + pkin(10) * t1016 + t1379 * t938 + t1383 * t877;
t898 = t1015 * t1376 + t1372 * t1487;
t716 = -pkin(2) * t898 - t1372 * t800 + t1376 * t1428;
t733 = -t1380 * t866 + t1384 * t810 + (-t1372 * t898 - t1376 * t899) * pkin(9);
t846 = -t1371 * t899 + t1375 * t959;
t1417 = qJ(2) * t846 + t1371 * t733 + t1375 * t716;
t1401 = pkin(9) * t902 + (-pkin(10) * t1380 - t1624) * t923;
t828 = t1372 * t1491 + t1376 * t923;
t903 = -pkin(3) * t1100 + pkin(10) * t924;
t739 = -pkin(2) * t828 - t1372 * t903 + t1376 * t1401;
t741 = (-pkin(10) * t1384 + t1625) * t923 + (-t1372 * t828 - t1376 * t829) * pkin(9);
t785 = -t1371 * t829 + t1375 * t902;
t1416 = qJ(2) * t785 + t1371 * t741 + t1375 * t739;
t904 = -pkin(10) * t1103 - t923;
t1404 = pkin(9) * t1065 - t1103 * t1624 + t1380 * t904;
t889 = pkin(3) * t1213 + pkin(10) * t1105 + t924;
t983 = t1103 * t1376 + t1372 * t1475;
t780 = -pkin(2) * t983 - t1372 * t889 + t1376 * t1404;
t814 = t1103 * t1625 + t1384 * t904 + (-t1372 * t983 - t1376 * t984) * pkin(9);
t935 = t1065 * t1375 - t1371 * t984;
t1415 = qJ(2) * t935 + t1371 * t814 + t1375 * t780;
t1019 = t1139 * t1376 + t1372 * t1470;
t987 = pkin(3) * t1181 + pkin(10) * t1140 - t1607;
t819 = -pkin(2) * t1019 - t1372 * t987 + t1376 * t1426;
t845 = t1040 * t1384 - t1380 * t969 + (-t1019 * t1372 - t1020 * t1376) * pkin(9);
t960 = -t1020 * t1371 + t1081 * t1375;
t1414 = qJ(2) * t960 + t1371 * t845 + t1375 * t819;
t1036 = t1149 * t1376 + t1372 * t1468;
t992 = -pkin(3) * t1183 + pkin(10) * t1150 + t1608;
t825 = -pkin(2) * t1036 - t1372 * t992 + t1376 * t1425;
t849 = t1050 * t1384 - t1380 * t970 + (-t1036 * t1372 - t1037 * t1376) * pkin(9);
t961 = -t1037 * t1371 + t1085 * t1375;
t1413 = qJ(2) * t961 + t1371 * t849 + t1375 * t825;
t1013 = -t1190 * t1376 + t1372 * t1472;
t925 = (-t1013 * t1372 - t1014 * t1376) * pkin(9);
t943 = -t1014 * t1371 + t1062 * t1375;
t944 = -pkin(2) * t1013 + t1062 * t1621;
t1412 = qJ(2) * t943 + t1371 * t925 + t1375 * t944;
t1411 = pkin(9) * t1187 + t1062;
t1076 = -t1135 * t1371 + t1187 * t1375;
t1134 = t1265 * t1376 + t1372 * t1456;
t962 = (-t1134 * t1372 - t1135 * t1376) * pkin(9) - t1472;
t968 = -pkin(2) * t1134 + t1376 * t1411;
t1410 = qJ(2) * t1076 + t1371 * t962 + t1375 * t968;
t1151 = t1240 * t1376 + t1372 * t1455;
t1041 = -t1604 + (-t1151 * t1372 - t1152 * t1376) * pkin(9);
t1106 = -t1152 * t1371 + t1212 * t1375;
t989 = -pkin(2) * t1151 + t1132 * t1372 + t1376 * t1530;
t1408 = qJ(2) * t1106 + t1041 * t1371 + t1375 * t989;
t1154 = t1243 * t1376 + t1372 * t1454;
t1051 = -t1603 + (-t1154 * t1372 - t1155 * t1376) * pkin(9);
t1114 = -t1155 * t1371 + t1214 * t1375;
t996 = -pkin(2) * t1154 + t1133 * t1372 + t1376 * t1529;
t1407 = qJ(2) * t1114 + t1051 * t1371 + t1375 * t996;
t1305 = t1335 * t1371 + t1336 * t1375;
t1406 = qJ(2) * t1305 + t1237;
t1356 = t1381 * qJDD(1) + t1385 * t1633;
t1342 = -pkin(8) * t1356 + g(3) * t1385;
t1341 = t1563 * t1581;
t1340 = (t1365 - t1368) * t1581;
t1330 = t1563 * t1544;
t1329 = (-t1365 * t1567 + t1540) * t1373;
t1328 = (-t1368 * t1567 - t1540) * t1373;
t1315 = t1365 * t1538 + t1641;
t1314 = t1368 * t1538 - t1641;
t1311 = -t1343 * t1371 + t1585;
t1309 = t1345 * t1375 - t1584;
t1306 = -t1334 * t1371 + t1337 * t1375;
t1290 = -t1334 * t1373 + t1377 * t1446;
t1289 = -t1335 * t1373 + t1377 * t1448;
t1288 = t1337 * t1373 + t1377 * t1447;
t1287 = -t1336 * t1373 + t1377 * t1445;
t1286 = t1334 * t1377 + t1373 * t1446;
t1285 = -t1337 * t1377 + t1373 * t1447;
t1282 = -t1340 * t1373 + t1377 * t1450;
t1281 = t1341 * t1373 + t1377 * t1449;
t1280 = -t1341 * t1377 + t1373 * t1449;
t1255 = -t1381 * t1290 + t1312 * t1385;
t1254 = -t1381 * t1288 + t1310 * t1385;
t1253 = t1290 * t1385 + t1381 * t1312;
t1252 = t1288 * t1385 + t1381 * t1310;
t1248 = -t1381 * t1281 + t1305 * t1385;
t1247 = t1281 * t1385 + t1381 * t1305;
t1231 = t1332 * t1376 + t1372 * t1439;
t1219 = t1321 * t1373 + t1377 * t1451;
t1218 = -t1321 * t1377 + t1373 * t1451;
t1216 = -t1587 + (-t1286 * t1373 - t1290 * t1377) * qJ(2);
t1215 = -t1588 + (-t1285 * t1373 - t1288 * t1377) * qJ(2);
t1206 = -pkin(1) * t1285 + t1294 * t1373 + t1377 * t1499;
t1205 = -pkin(1) * t1286 + t1295 * t1373 + t1377 * t1498;
t1203 = t1283 * t1575 + (t1318 * t1376 + t1333 * t1574) * t1320;
t1201 = t1372 * t1396 + (-t1320 * t1376 + t1333 * t1575) * t1318;
t1179 = -pkin(1) * t1280 + t1377 * t1406;
t1174 = -t1232 * t1371 + t1251 * t1375;
t1167 = (-t1280 * t1373 - t1281 * t1377) * qJ(2) - t1451;
t1164 = t1372 * t1453 + t1376 * t1395;
t1163 = t1245 * t1376 + t1372 * t1452;
t1158 = qJ(2) * t1237 * t1377 - pkin(1) * t1218;
t1157 = -t1381 * t1219 + t1237 * t1385;
t1156 = t1219 * t1385 + t1381 * t1237;
t1147 = t1284 * t1376 + t1372 * t1457;
t1143 = (-t1218 * t1373 - t1219 * t1377) * qJ(2);
t1142 = -t1204 * t1371 + t1238 * t1375;
t1141 = -t1202 * t1371 + t1236 * t1375;
t1119 = -t1231 * t1373 + t1377 * t1458;
t1116 = -t1166 * t1371 + t1230 * t1375;
t1115 = -t1165 * t1371 + t1229 * t1375;
t1112 = t1207 * t1376 + t1372 * t1459;
t1090 = -t1203 * t1373 + t1377 * t1460;
t1089 = -t1201 * t1373 + t1377 * t1461;
t1084 = -t1148 * t1371 + t1186 * t1375;
t1069 = t1177 * t1376 + t1372 * t1441;
t1068 = t1175 * t1376 + t1372 * t1442;
t1064 = -t1164 * t1373 + t1377 * t1462;
t1063 = -t1163 * t1373 + t1377 * t1463;
t1061 = -t1113 * t1371 + t1170 * t1375;
t1060 = -t1154 * t1373 + t1377 * t1466;
t1059 = t1154 * t1377 + t1373 * t1466;
t1054 = -t1151 * t1373 + t1377 * t1467;
t1053 = t1151 * t1377 + t1373 * t1467;
t1047 = t1160 * t1376 + t1372 * t1464;
t1046 = t1159 * t1376 + t1372 * t1465;
t1035 = -t1147 * t1373 + t1377 * t1469;
t1018 = -t1134 * t1373 + t1377 * t1471;
t1017 = t1134 * t1377 + t1373 * t1471;
t1000 = -t1071 * t1371 + t1131 * t1375;
t999 = -t1070 * t1371 + t1130 * t1375;
t995 = pkin(2) * t1155 - t1133 * t1376 + t1372 * t1529;
t988 = pkin(2) * t1152 - t1132 * t1376 + t1372 * t1530;
t985 = t1102 * t1376 + t1372 * t1476;
t982 = -t1112 * t1373 + t1377 * t1473;
t981 = -t1381 * t1060 + t1114 * t1385;
t980 = t1060 * t1385 + t1381 * t1114;
t974 = -t1381 * t1054 + t1106 * t1385;
t973 = t1054 * t1385 + t1381 * t1106;
t971 = t1107 * t1376 + t1372 * t1474;
t967 = pkin(2) * t1135 + t1372 * t1411;
t966 = -t1049 * t1371 + t1092 * t1375;
t965 = -t1048 * t1371 + t1091 * t1375;
t958 = -t1381 * t1018 + t1076 * t1385;
t957 = t1018 * t1385 + t1381 * t1076;
t954 = t1078 * t1376 + t1372 * t1477;
t953 = t1077 * t1376 + t1372 * t1478;
t951 = -t1069 * t1373 + t1377 * t1479;
t950 = -t1068 * t1373 + t1377 * t1480;
t945 = pkin(2) * t1014 + t1062 * t1622;
t942 = t1072 * t1375 - t1371 * t986;
t920 = t1052 * t1375 - t1371 * t972;
t919 = -t1047 * t1373 + t1377 * t1481;
t918 = -t1046 * t1373 + t1377 * t1482;
t910 = t1032 * t1376 + t1372 * t1484;
t909 = t1031 * t1376 + t1372 * t1485;
t906 = -t1036 * t1373 + t1377 * t1483;
t905 = t1036 * t1377 + t1373 * t1483;
t901 = -t1019 * t1373 + t1377 * t1486;
t900 = t1019 * t1377 + t1373 * t1486;
t897 = t1007 * t1375 - t1371 * t956;
t896 = t1006 * t1375 - t1371 * t955;
t888 = -t1013 * t1373 + t1377 * t1488;
t887 = t1013 * t1377 + t1373 * t1488;
t882 = t1009 * t1376 + t1372 * t1489;
t881 = -t1373 * t985 + t1377 * t1492;
t871 = -t1373 * t983 + t1377 * t1493;
t870 = t1373 * t1493 + t1377 * t983;
t864 = -t1373 * t971 + t1377 * t1495;
t863 = t1051 * t1375 - t1371 * t996 + (-t1059 * t1373 - t1060 * t1377) * qJ(2);
t862 = t1041 * t1375 - t1371 * t989 + (-t1053 * t1373 - t1054 * t1377) * qJ(2);
t860 = t1372 * t1500 + t1376 * t978;
t854 = -t1371 * t912 + t1375 * t964;
t853 = -t1371 * t911 + t1375 * t963;
t851 = -t1381 * t906 + t1385 * t961;
t850 = t1381 * t961 + t1385 * t906;
t848 = -t1381 * t901 + t1385 * t960;
t847 = t1381 * t960 + t1385 * t901;
t842 = -pkin(1) * t1059 - t1373 * t995 + t1377 * t1407;
t839 = -t1373 * t954 + t1377 * t1496;
t838 = -t1373 * t953 + t1377 * t1497;
t834 = -pkin(1) * t1053 - t1373 * t988 + t1377 * t1408;
t831 = -t1381 * t888 + t1385 * t943;
t830 = t1381 * t943 + t1385 * t888;
t826 = -t1371 * t883 + t1375 * t941;
t824 = pkin(2) * t1037 + t1372 * t1425 + t1376 * t992;
t823 = -t1371 * t968 + t1375 * t962 + (-t1017 * t1373 - t1018 * t1377) * qJ(2);
t818 = pkin(2) * t1020 + t1372 * t1426 + t1376 * t987;
t817 = -t1381 * t871 + t1385 * t935;
t816 = t1381 * t935 + t1385 * t871;
t811 = -pkin(1) * t1017 - t1373 * t967 + t1377 * t1410;
t809 = -t1371 * t861 + t1375 * t913;
t802 = -t1373 * t910 + t1377 * t1511;
t801 = -t1373 * t909 + t1377 * t1512;
t797 = t1372 * t1501 + t1376 * t915;
t796 = t1372 * t1502 + t1376 * t914;
t794 = -t1373 * t898 + t1377 * t1513;
t793 = t1373 * t1513 + t1377 * t898;
t789 = t1372 * t1503 + t1376 * t893;
t788 = t1372 * t1504 + t1376 * t892;
t787 = -t1373 * t890 + t1377 * t1514;
t786 = t1373 * t1514 + t1377 * t890;
t782 = -t1373 * t882 + t1377 * t1515;
t779 = pkin(2) * t984 + t1372 * t1404 + t1376 * t889;
t778 = -t1373 * t875 + t1377 * t1516;
t777 = t1373 * t1516 + t1377 * t875;
t768 = -t1371 * t944 + t1375 * t925 + (-t1373 * t887 - t1377 * t888) * qJ(2);
t766 = -t1373 * t860 + t1377 * t1517;
t765 = -pkin(1) * t887 - t1373 * t945 + t1377 * t1412;
t764 = -t1381 * t794 + t1385 * t846;
t763 = t1381 * t846 + t1385 * t794;
t762 = -t1371 * t799 + t1375 * t841;
t761 = -t1371 * t798 + t1375 * t840;
t759 = -t1381 * t787 + t1385 * t837;
t758 = t1381 * t837 + t1385 * t787;
t757 = -t1371 * t791 + t1375 * t836;
t756 = -t1371 * t790 + t1375 * t835;
t755 = -t1373 * t828 + t1377 * t1518;
t754 = t1373 * t1518 + t1377 * t828;
t747 = t1372 * t1507 + t1376 * t843;
t744 = -t1381 * t778 + t1385 * t820;
t743 = t1381 * t820 + t1385 * t778;
t738 = pkin(2) * t829 + t1372 * t1401 + t1376 * t903;
t737 = -t1371 * t825 + t1375 * t849 + (-t1373 * t905 - t1377 * t906) * qJ(2);
t736 = -t1371 * t819 + t1375 * t845 + (-t1373 * t900 - t1377 * t901) * qJ(2);
t727 = -pkin(1) * t905 - t1373 * t824 + t1377 * t1413;
t726 = -t1373 * t797 + t1377 * t1519;
t725 = -t1373 * t796 + t1377 * t1520;
t724 = -pkin(1) * t900 - t1373 * t818 + t1377 * t1414;
t723 = -t1373 * t789 + t1377 * t1521;
t722 = -t1373 * t788 + t1377 * t1522;
t721 = -t1381 * t755 + t1385 * t785;
t720 = t1381 * t785 + t1385 * t755;
t719 = -t1371 * t780 + t1375 * t814 + (-t1373 * t870 - t1377 * t871) * qJ(2);
t718 = -t1373 * t783 + t1377 * t1523;
t717 = t1373 * t1523 + t1377 * t783;
t715 = pkin(2) * t899 + t1372 * t1428 + t1376 * t800;
t712 = pkin(2) * t891 + t1372 * t1429 + t1376 * t795;
t711 = -t1371 * t748 + t1375 * t776;
t706 = -t1373 * t773 + t1377 * t1524;
t705 = t1373 * t1524 + t1377 * t773;
t700 = -pkin(1) * t870 - t1373 * t779 + t1377 * t1415;
t696 = pkin(2) * t876 + t1372 * t1430 + t1376 * t772;
t694 = -t1381 * t718 + t1385 * t753;
t693 = t1381 * t753 + t1385 * t718;
t692 = -t1373 * t747 + t1377 * t1525;
t690 = -t1373 * t745 + t1377 * t1526;
t689 = t1373 * t1526 + t1377 * t745;
t688 = -t1381 * t706 + t1385 * t740;
t687 = t1381 * t740 + t1385 * t706;
t683 = -t1373 * t728 + t1377 * t1527;
t682 = t1373 * t1527 + t1377 * t728;
t679 = -t1371 * t716 + t1375 * t733 + (-t1373 * t793 - t1377 * t794) * qJ(2);
t678 = -t1371 * t713 + t1375 * t732 + (-t1373 * t786 - t1377 * t787) * qJ(2);
t677 = -t1371 * t739 + t1375 * t741 + (-t1373 * t754 - t1377 * t755) * qJ(2);
t673 = -t1381 * t690 + t1385 * t708;
t672 = t1381 * t708 + t1385 * t690;
t671 = -pkin(1) * t754 - t1373 * t738 + t1377 * t1416;
t669 = -t1371 * t697 + t1375 * t710 + (-t1373 * t777 - t1377 * t778) * qJ(2);
t668 = -pkin(1) * t793 - t1373 * t715 + t1377 * t1417;
t666 = pkin(2) * t784 + t1372 * t1432 + t1376 * t704;
t665 = -pkin(1) * t786 - t1373 * t712 + t1377 * t1418;
t663 = pkin(2) * t774 + t1372 * t1433 + t1376 * t703;
t662 = -t1381 * t683 + t1385 * t695;
t661 = t1381 * t695 + t1385 * t683;
t659 = pkin(2) * t729 + t1372 * t1431 + t1376 * t709;
t655 = -pkin(1) * t777 - t1373 * t696 + t1377 * t1419;
t649 = pkin(2) * t746 + t1372 * t1434 + t1376 * t681;
t648 = -t1371 * t667 + t1375 * t680 + (-t1373 * t717 - t1377 * t718) * qJ(2);
t647 = -t1371 * t664 + t1375 * t676 + (-t1373 * t705 - t1377 * t706) * qJ(2);
t646 = -t1373 * t657 + t1377 * t1528;
t645 = t1373 * t1528 + t1377 * t657;
t644 = -pkin(1) * t717 - t1373 * t666 + t1377 * t1420;
t643 = -pkin(1) * t705 - t1373 * t663 + t1377 * t1421;
t642 = -t1371 * t660 + t1375 * t670 + (-t1373 * t682 - t1377 * t683) * qJ(2);
t641 = -pkin(1) * t682 - t1373 * t659 + t1377 * t1422;
t640 = -t1371 * t650 + t1375 * t654 + (-t1373 * t689 - t1377 * t690) * qJ(2);
t639 = -t1381 * t646 + t1385 * t652;
t638 = t1381 * t652 + t1385 * t646;
t636 = -pkin(1) * t689 - t1373 * t649 + t1377 * t1423;
t634 = pkin(2) * t658 + t1372 * t1435 + t1376 * t651;
t633 = -t1371 * t635 + t1375 * t637 + (-t1373 * t645 - t1377 * t646) * qJ(2);
t632 = -pkin(1) * t645 - t1373 * t634 + t1377 * t1424;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1356, -t1357, 0, t1323, 0, 0, 0, 0, 0, 0, t1254, t1255, t1248, t1157, 0, 0, 0, 0, 0, 0, t974, t981, t958, t831, 0, 0, 0, 0, 0, 0, t848, t851, t817, t721, 0, 0, 0, 0, 0, 0, t759, t764, t744, t662, 0, 0, 0, 0, 0, 0, t688, t694, t673, t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1357, -t1356, 0, t1322, 0, 0, 0, 0, 0, 0, t1252, t1253, t1247, t1156, 0, 0, 0, 0, 0, 0, t973, t980, t957, t830, 0, 0, 0, 0, 0, 0, t847, t850, t816, t720, 0, 0, 0, 0, 0, 0, t758, t763, t743, t661, 0, 0, 0, 0, 0, 0, t687, t693, t672, t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1285, t1286, t1280, t1218, 0, 0, 0, 0, 0, 0, t1053, t1059, t1017, t887, 0, 0, 0, 0, 0, 0, t900, t905, t870, t754, 0, 0, 0, 0, 0, 0, t786, t793, t777, t682, 0, 0, 0, 0, 0, 0, t705, t717, t689, t645; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1357, 0, -t1356, 0, t1532, -t1342, -t1322, -pkin(8) * t1322, -t1381 * t1315 + t1329 * t1385, -t1381 * t1282 + t1306 * t1385, -t1381 * t1289 + t1311 * t1385, -t1381 * t1314 + t1328 * t1385, -t1381 * t1287 + t1309 * t1385, t1330 * t1385 + t1381 * t1538, -pkin(8) * t1252 - t1381 * t1206 + t1215 * t1385, -pkin(8) * t1253 - t1381 * t1205 + t1216 * t1385, -pkin(8) * t1247 + t1167 * t1385 - t1381 * t1179, -pkin(8) * t1156 + t1143 * t1385 - t1381 * t1158, -t1381 * t1090 + t1142 * t1385, -t1381 * t1035 + t1084 * t1385, -t1381 * t1063 + t1115 * t1385, -t1381 * t1089 + t1141 * t1385, -t1381 * t1064 + t1116 * t1385, -t1381 * t1119 + t1174 * t1385, -pkin(8) * t973 - t1381 * t834 + t1385 * t862, -pkin(8) * t980 - t1381 * t842 + t1385 * t863, -pkin(8) * t957 - t1381 * t811 + t1385 * t823, -pkin(8) * t830 - t1381 * t765 + t1385 * t768, t1000 * t1385 - t1381 * t951, -t1381 * t881 + t1385 * t942, -t1381 * t918 + t1385 * t965, -t1381 * t950 + t1385 * t999, -t1381 * t919 + t1385 * t966, t1061 * t1385 - t1381 * t982, -pkin(8) * t847 - t1381 * t724 + t1385 * t736, -pkin(8) * t850 - t1381 * t727 + t1385 * t737, -pkin(8) * t816 - t1381 * t700 + t1385 * t719, -pkin(8) * t720 - t1381 * t671 + t1385 * t677, -t1381 * t839 + t1385 * t897, -t1381 * t782 + t1385 * t826, -t1381 * t801 + t1385 * t853, -t1381 * t838 + t1385 * t896, -t1381 * t802 + t1385 * t854, -t1381 * t864 + t1385 * t920, -pkin(8) * t758 - t1381 * t665 + t1385 * t678, -pkin(8) * t763 - t1381 * t668 + t1385 * t679, -pkin(8) * t743 - t1381 * t655 + t1385 * t669, -pkin(8) * t661 - t1381 * t641 + t1385 * t642, -t1381 * t726 + t1385 * t762, -t1381 * t692 + t1385 * t711, -t1381 * t722 + t1385 * t756, -t1381 * t725 + t1385 * t761, -t1381 * t723 + t1385 * t757, -t1381 * t766 + t1385 * t809, -pkin(8) * t687 - t1381 * t643 + t1385 * t647, -pkin(8) * t693 - t1381 * t644 + t1385 * t648, -pkin(8) * t672 - t1381 * t636 + t1385 * t640, -pkin(8) * t638 - t1381 * t632 + t1385 * t633; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1356, 0, t1357, 0, t1342, t1532, t1323, pkin(8) * t1323, t1315 * t1385 + t1381 * t1329, t1282 * t1385 + t1381 * t1306, t1289 * t1385 + t1381 * t1311, t1314 * t1385 + t1381 * t1328, t1287 * t1385 + t1381 * t1309, t1381 * t1330 - t1385 * t1538, pkin(8) * t1254 + t1206 * t1385 + t1381 * t1215, pkin(8) * t1255 + t1205 * t1385 + t1381 * t1216, pkin(8) * t1248 + t1381 * t1167 + t1179 * t1385, pkin(8) * t1157 + t1381 * t1143 + t1158 * t1385, t1090 * t1385 + t1381 * t1142, t1035 * t1385 + t1381 * t1084, t1063 * t1385 + t1381 * t1115, t1089 * t1385 + t1381 * t1141, t1064 * t1385 + t1381 * t1116, t1119 * t1385 + t1381 * t1174, pkin(8) * t974 + t1381 * t862 + t1385 * t834, pkin(8) * t981 + t1381 * t863 + t1385 * t842, pkin(8) * t958 + t1381 * t823 + t1385 * t811, pkin(8) * t831 + t1381 * t768 + t1385 * t765, t1381 * t1000 + t1385 * t951, t1381 * t942 + t1385 * t881, t1381 * t965 + t1385 * t918, t1381 * t999 + t1385 * t950, t1381 * t966 + t1385 * t919, t1381 * t1061 + t1385 * t982, pkin(8) * t848 + t1381 * t736 + t1385 * t724, pkin(8) * t851 + t1381 * t737 + t1385 * t727, pkin(8) * t817 + t1381 * t719 + t1385 * t700, pkin(8) * t721 + t1381 * t677 + t1385 * t671, t1381 * t897 + t1385 * t839, t1381 * t826 + t1385 * t782, t1381 * t853 + t1385 * t801, t1381 * t896 + t1385 * t838, t1381 * t854 + t1385 * t802, t1381 * t920 + t1385 * t864, pkin(8) * t759 + t1381 * t678 + t1385 * t665, pkin(8) * t764 + t1381 * t679 + t1385 * t668, pkin(8) * t744 + t1381 * t669 + t1385 * t655, pkin(8) * t662 + t1381 * t642 + t1385 * t641, t1381 * t762 + t1385 * t726, t1381 * t711 + t1385 * t692, t1381 * t756 + t1385 * t722, t1381 * t761 + t1385 * t725, t1381 * t757 + t1385 * t723, t1381 * t809 + t1385 * t766, pkin(8) * t688 + t1381 * t647 + t1385 * t643, pkin(8) * t694 + t1381 * t648 + t1385 * t644, pkin(8) * t673 + t1381 * t640 + t1385 * t636, pkin(8) * t639 + t1381 * t633 + t1385 * t632; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1359, t1360, 0, 0, t1365 * t1562, t1340 * t1377 + t1373 * t1450, t1335 * t1377 + t1373 * t1448, t1368 * t1562, t1336 * t1377 + t1373 * t1445, t1369 * qJDD(1), pkin(1) * t1288 - t1294 * t1377 + t1373 * t1499, pkin(1) * t1290 - t1295 * t1377 + t1373 * t1498, pkin(1) * t1281 + t1373 * t1406, pkin(1) * t1219 + t1237 * t1619, t1203 * t1377 + t1373 * t1460, t1147 * t1377 + t1373 * t1469, t1163 * t1377 + t1373 * t1463, t1201 * t1377 + t1373 * t1461, t1164 * t1377 + t1373 * t1462, t1231 * t1377 + t1373 * t1458, pkin(1) * t1054 + t1373 * t1408 + t1377 * t988, pkin(1) * t1060 + t1373 * t1407 + t1377 * t995, pkin(1) * t1018 + t1373 * t1410 + t1377 * t967, pkin(1) * t888 + t1373 * t1412 + t1377 * t945, t1069 * t1377 + t1373 * t1479, t1373 * t1492 + t1377 * t985, t1046 * t1377 + t1373 * t1482, t1068 * t1377 + t1373 * t1480, t1047 * t1377 + t1373 * t1481, t1112 * t1377 + t1373 * t1473, pkin(1) * t901 + t1373 * t1414 + t1377 * t818, pkin(1) * t906 + t1373 * t1413 + t1377 * t824, pkin(1) * t871 + t1373 * t1415 + t1377 * t779, pkin(1) * t755 + t1373 * t1416 + t1377 * t738, t1373 * t1496 + t1377 * t954, t1373 * t1515 + t1377 * t882, t1373 * t1512 + t1377 * t909, t1373 * t1497 + t1377 * t953, t1373 * t1511 + t1377 * t910, t1373 * t1495 + t1377 * t971, pkin(1) * t787 + t1373 * t1418 + t1377 * t712, pkin(1) * t794 + t1373 * t1417 + t1377 * t715, pkin(1) * t778 + t1373 * t1419 + t1377 * t696, pkin(1) * t683 + t1373 * t1422 + t1377 * t659, t1373 * t1519 + t1377 * t797, t1373 * t1525 + t1377 * t747, t1373 * t1522 + t1377 * t788, t1373 * t1520 + t1377 * t796, t1373 * t1521 + t1377 * t789, t1373 * t1517 + t1377 * t860, pkin(1) * t706 + t1373 * t1421 + t1377 * t663, pkin(1) * t718 + t1373 * t1420 + t1377 * t666, pkin(1) * t690 + t1373 * t1423 + t1377 * t649, pkin(1) * t646 + t1373 * t1424 + t1377 * t634;];
tauB_reg  = t1;
