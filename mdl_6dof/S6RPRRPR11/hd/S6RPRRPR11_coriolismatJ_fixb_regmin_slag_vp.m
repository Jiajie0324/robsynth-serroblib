% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR11_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR11_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR11_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR11_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:44:36
% EndTime: 2019-03-09 05:46:03
% DurationCPUTime: 59.35s
% Computational Cost: add. (46441->1217), mult. (129644->1746), div. (0->0), fcn. (151439->14), ass. (0->815)
t772 = sin(pkin(13));
t780 = cos(qJ(6));
t1098 = t780 * t772;
t775 = cos(pkin(13));
t777 = sin(qJ(6));
t1115 = t777 * t775;
t726 = t1098 + t1115;
t778 = sin(qJ(4));
t703 = t726 * t778;
t1237 = -t703 / 0.2e1;
t781 = cos(qJ(4));
t1214 = -t781 / 0.2e1;
t774 = sin(pkin(6));
t776 = cos(pkin(12));
t1136 = t774 * t776;
t773 = sin(pkin(12));
t1137 = t773 * t774;
t1212 = cos(qJ(3));
t779 = sin(qJ(3));
t1196 = sin(pkin(7));
t1198 = cos(pkin(6));
t951 = t1196 * t1198;
t1197 = cos(pkin(7));
t962 = t1197 * t1212;
t634 = -t1136 * t962 + t1137 * t779 - t1212 * t951;
t1156 = t634 * t775;
t1012 = t1212 * t773;
t911 = t779 * t951;
t979 = t779 * t1197;
t636 = t911 + (t776 * t979 + t1012) * t774;
t1154 = t636 * t781;
t981 = t774 * t1196;
t867 = -t1197 * t1198 + t776 * t981;
t849 = t867 * t778;
t549 = -t849 + t1154;
t537 = t549 * t772;
t1267 = -t537 + t1156;
t1273 = t780 * t1267;
t1157 = t634 * t772;
t417 = t549 * t775 + t1157;
t267 = -t777 * t417 + t1273;
t547 = t636 * t778 + t781 * t867;
t1287 = t1214 * t267 + t1237 * t547;
t1155 = t636 * t772;
t493 = t781 * t634;
t482 = -t493 * t775 + t1155;
t1105 = t780 * t482;
t616 = t636 * t775;
t481 = -t493 * t772 - t616;
t1124 = t777 * t481;
t878 = -t1124 / 0.2e1 + t1105 / 0.2e1;
t1283 = t878 + t1287;
t1288 = qJD(3) * t1283;
t1027 = t547 * qJD(1);
t1009 = t267 * t1027;
t1282 = t878 - t1287;
t1286 = qJD(3) * t1282 - t1009;
t264 = -t1267 * t777 - t780 * t417;
t1285 = t264 * t1214;
t1010 = t264 * t1027;
t1225 = t726 / 0.2e1;
t871 = t1115 / 0.2e1 + t1098 / 0.2e1;
t854 = t1225 + t871;
t270 = t854 * t547;
t1284 = qJD(4) * t270 - t1010;
t1123 = t777 * t482;
t460 = t780 * t481;
t1091 = t1123 / 0.2e1 + t460 / 0.2e1;
t1281 = -t1091 + t1285;
t1280 = t1091 + t1285;
t764 = -pkin(5) * t775 - pkin(4);
t1221 = t764 / 0.2e1;
t1261 = t1273 / 0.2e1;
t1260 = t417 / 0.2e1;
t1220 = -t772 / 0.2e1;
t1275 = t1220 * t417;
t1272 = t264 / 0.2e1;
t1097 = t780 * t775;
t1116 = t777 * t772;
t1266 = t1097 - t1116;
t1271 = t1266 * t781;
t1023 = t703 * qJD(6);
t1227 = -t1266 / 0.2e1;
t869 = t1097 / 0.2e1 - t1116 / 0.2e1;
t853 = t1227 + t869;
t590 = t853 * t781;
t1270 = qJD(4) * t590 - t1023;
t1168 = t547 * t778;
t1213 = t781 / 0.2e1;
t890 = t549 * t1213 - t1168 / 0.2e1;
t1269 = t890 * qJD(4);
t1013 = pkin(1) * t1198;
t755 = t776 * t1013;
t642 = t1198 * pkin(2) + t755 + (-pkin(9) * t1197 - qJ(2)) * t1137;
t685 = (-pkin(9) * t1196 * t773 - pkin(2) * t776 - pkin(1)) * t774;
t527 = -t1196 * t642 + t1197 * t685;
t955 = pkin(3) * t634 - pkin(10) * t636;
t324 = t527 + t955;
t1086 = qJ(2) * t1136 + t1013 * t773;
t622 = (t1136 * t1197 + t951) * pkin(9) + t1086;
t381 = t1212 * t622 + (t1196 * t685 + t1197 * t642) * t779;
t345 = -pkin(10) * t867 + t381;
t210 = -t324 * t781 + t778 * t345;
t199 = -t634 * pkin(4) + t210;
t1189 = t199 * t781;
t1000 = t1189 / 0.2e1;
t490 = t778 * t634;
t988 = t490 / 0.2e1;
t1268 = qJ(5) * t988 + t1000;
t1019 = t781 * qJD(3);
t757 = t778 * t1019;
t972 = qJD(1) * t890 + t757;
t866 = -qJD(3) * t890 + t1027 * t549;
t1265 = t634 ^ 2;
t1264 = -pkin(4) / 0.2e1;
t1263 = qJ(5) / 0.2e1;
t1096 = t781 * t345;
t1114 = t778 * t324;
t211 = t1096 + t1114;
t1262 = -t211 / 0.2e1;
t1259 = t1267 / 0.2e1;
t1258 = -t481 / 0.2e1;
t1257 = -t547 / 0.2e1;
t1256 = t547 / 0.2e1;
t1255 = -t549 / 0.2e1;
t1254 = t549 / 0.2e1;
t1011 = t1212 * t776;
t964 = t773 * t979;
t689 = (-t964 + t1011) * t774;
t1113 = t778 * t689;
t965 = t773 * t981;
t933 = t781 * t965;
t584 = -t933 + t1113;
t1253 = -t584 / 0.2e1;
t1252 = t634 / 0.2e1;
t978 = t779 * t1196;
t980 = t778 * t1197;
t711 = t781 * t978 + t980;
t1140 = t772 * t711;
t961 = t1196 * t1212;
t922 = t775 * t961;
t643 = -t922 - t1140;
t1251 = -t643 / 0.2e1;
t1250 = t643 / 0.2e1;
t1135 = t775 * t711;
t923 = t772 * t961;
t644 = -t923 + t1135;
t1249 = -t644 / 0.2e1;
t1248 = t644 / 0.2e1;
t1206 = pkin(11) + qJ(5);
t746 = t1206 * t775;
t983 = t1206 * t772;
t650 = t746 * t777 + t780 * t983;
t1247 = t650 / 0.2e1;
t921 = t781 * t961;
t690 = -t772 * t921 + t775 * t978;
t1246 = t690 / 0.2e1;
t691 = t772 * t978 + t775 * t921;
t1245 = -t691 / 0.2e1;
t1138 = t772 * t781;
t949 = -pkin(4) * t781 - qJ(5) * t778;
t741 = -pkin(3) + t949;
t715 = t775 * t741;
t692 = -pkin(10) * t1138 + t715;
t1244 = -t692 / 0.2e1;
t1133 = t775 * t781;
t759 = pkin(10) * t1133;
t693 = t741 * t772 + t759;
t1243 = -t693 / 0.2e1;
t1242 = t693 / 0.2e1;
t748 = pkin(4) * t778 - qJ(5) * t781;
t1139 = t772 * t778;
t758 = pkin(10) * t1139;
t699 = t748 * t775 + t758;
t1241 = -t699 / 0.2e1;
t1134 = t775 * t778;
t700 = -pkin(10) * t1134 + t748 * t772;
t1240 = -t700 / 0.2e1;
t1239 = t700 / 0.2e1;
t1238 = t703 / 0.2e1;
t705 = t726 * t781;
t1236 = -t705 / 0.2e1;
t706 = t1266 * t778;
t1235 = -t706 / 0.2e1;
t1234 = t706 / 0.2e1;
t1233 = -t1271 / 0.2e1;
t710 = -t1197 * t781 + t778 * t978;
t1232 = -t710 / 0.2e1;
t1231 = t710 / 0.2e1;
t1230 = -t711 / 0.2e1;
t1229 = t711 / 0.2e1;
t1228 = t1266 / 0.2e1;
t1226 = -t726 / 0.2e1;
t1014 = pkin(5) * t772 + pkin(10);
t732 = t1014 * t778;
t1224 = -t732 / 0.2e1;
t1223 = t732 / 0.2e1;
t733 = t1014 * t781;
t1222 = -t733 / 0.2e1;
t1219 = t772 / 0.2e1;
t1218 = -t775 / 0.2e1;
t1217 = t775 / 0.2e1;
t1216 = -t778 / 0.2e1;
t1215 = t778 / 0.2e1;
t1211 = pkin(10) * t547;
t1210 = pkin(10) * t778;
t1209 = t634 * pkin(10);
t1208 = t636 * pkin(4);
t1207 = t781 * pkin(10);
t178 = -pkin(5) * t1267 + t199;
t510 = pkin(3) * t636 + t1209;
t1095 = t781 * t510;
t380 = t622 * t779 - t642 * t962 - t685 * t961;
t374 = t778 * t380;
t976 = t374 + t1095;
t247 = -t976 - t1208;
t202 = pkin(5) * t481 + t247;
t295 = t460 + t1123;
t1158 = t634 * qJ(5);
t198 = t211 + t1158;
t344 = pkin(3) * t867 + t380;
t950 = pkin(4) * t547 - qJ(5) * t549;
t213 = t344 + t950;
t95 = t198 * t775 + t213 * t772;
t74 = pkin(11) * t1267 + t95;
t94 = -t198 * t772 + t213 * t775;
t813 = pkin(5) * t547 - pkin(11) * t417 + t94;
t48 = t74 * t777 - t780 * t813;
t375 = t781 * t380;
t503 = t778 * t510;
t1089 = t503 - t375;
t246 = qJ(5) * t636 + t1089;
t280 = -t634 * t748 + t381;
t170 = -t246 * t772 + t280 * t775;
t104 = -pkin(5) * t490 - pkin(11) * t482 + t170;
t1112 = t780 * t104;
t171 = t246 * t775 + t280 * t772;
t114 = -pkin(11) * t481 + t171;
t1129 = t777 * t114;
t53 = t1112 - t1129;
t7 = t178 * t295 - t202 * t267 + t48 * t490 + t53 * t547;
t1205 = t7 * qJD(1);
t296 = t1105 - t1124;
t49 = t74 * t780 + t777 * t813;
t1110 = t780 * t114;
t1131 = t777 * t104;
t54 = t1110 + t1131;
t8 = t178 * t296 - t202 * t264 + t49 * t490 - t54 * t547;
t1204 = t8 * qJD(1);
t348 = t772 * t547;
t187 = -pkin(5) * t348 + t211;
t338 = t726 * t547;
t362 = pkin(4) * t549 + qJ(5) * t547;
t181 = t210 * t772 + t362 * t775;
t107 = pkin(11) * t547 * t775 + pkin(5) * t549 + t181;
t1111 = t780 * t107;
t182 = -t210 * t775 + t362 * t772;
t125 = pkin(11) * t348 + t182;
t1128 = t777 * t125;
t947 = t1111 - t1128;
t9 = -t178 * t338 - t187 * t267 - t48 * t549 + t547 * t947;
t1203 = t9 * qJD(1);
t1202 = t94 * t772;
t1201 = t94 * t775;
t1200 = t95 * t772;
t1199 = t95 * t775;
t29 = t178 * t267 + t48 * t547;
t1195 = qJD(1) * t29;
t30 = -t178 * t264 - t49 * t547;
t1194 = qJD(1) * t30;
t50 = t1267 * t95 - t417 * t94;
t1193 = qJD(1) * t50;
t1165 = t584 * t1266;
t511 = -t643 * t780 + t644 * t777;
t787 = (t547 * t1225 - t338 / 0.2e1) * t710 + t511 * t1255 - t267 * t1229;
t71 = t1165 / 0.2e1 + t787;
t1192 = qJD(1) * t71;
t1164 = t584 * t726;
t512 = t643 * t777 + t644 * t780;
t786 = -t1229 * t264 + t1255 * t512;
t73 = -t1164 / 0.2e1 + t786;
t1191 = qJD(1) * t73;
t339 = t1266 * t547;
t1109 = t780 * t125;
t1130 = t777 * t107;
t946 = t1109 + t1130;
t10 = -t178 * t339 - t187 * t264 - t49 * t549 - t547 * t946;
t1190 = t10 * qJD(1);
t21 = t181 * t94 + t182 * t95 + t199 * t211;
t1188 = t21 * qJD(1);
t22 = t170 * t94 + t171 * t95 + t199 * t247;
t1187 = t22 * qJD(1);
t23 = t1267 * t171 - t170 * t417 - t481 * t95 - t482 * t94;
t1186 = t23 * qJD(1);
t24 = t182 * t1267 - t181 * t417 + (t1200 + t1201) * t547;
t1185 = t24 * qJD(1);
t1184 = t247 * t772;
t1183 = t247 * t775;
t1178 = t296 * t726;
t31 = t94 * t549 - t211 * t1267 + (-t199 * t772 + t181) * t547;
t1177 = t31 * qJD(1);
t32 = t211 * t417 - t95 * t549 + (-t199 * t775 - t182) * t547;
t1176 = t32 * qJD(1);
t33 = -t1267 * t247 + t170 * t547 + t199 * t481 - t490 * t94;
t1175 = t33 * qJD(1);
t34 = -t171 * t547 + t199 * t482 + t247 * t417 + t490 * t95;
t1174 = t34 * qJD(1);
t1173 = t344 * t778;
t1172 = t344 * t781;
t1094 = t781 * t689;
t585 = t778 * t965 + t1094;
t1132 = t776 * t779;
t920 = t773 * t962;
t688 = (t920 + t1132) * t774;
t507 = -t585 * t772 + t688 * t775;
t508 = t585 * t775 + t688 * t772;
t41 = t199 * t584 + t507 * t94 + t508 * t95;
t1171 = t41 * qJD(1);
t1170 = t507 * t781;
t1169 = t508 * t781;
t57 = -t210 * t636 + t381 * t547 + (t976 - t1173) * t634;
t1167 = t57 * qJD(1);
t58 = -t211 * t636 + t381 * t549 + (-t1089 - t1172) * t634;
t1166 = t58 * qJD(1);
t1163 = t584 * t772;
t1162 = t584 * t775;
t1100 = t780 * t690;
t1117 = t777 * t691;
t554 = t1100 - t1117;
t912 = t961 / 0.2e1;
t785 = (t1252 * t511 - t267 * t912) * t778 + t554 * t1256 + t295 * t1231;
t1104 = t780 * t507;
t1121 = t777 * t508;
t944 = t1104 - t1121;
t804 = t1214 * t944 + t1238 * t584;
t59 = t785 - t804;
t1161 = t59 * qJD(1);
t1099 = t780 * t691;
t1118 = t777 * t690;
t555 = t1099 + t1118;
t784 = (t1252 * t512 - t264 * t912) * t778 + t555 * t1257 + t296 * t1231;
t1103 = t780 * t508;
t1122 = t777 * t507;
t943 = t1103 + t1122;
t803 = t1214 * t943 + t1235 * t584;
t62 = t784 + t803;
t1160 = t62 * qJD(1);
t63 = t264 * t295 + t267 * t296;
t1159 = t63 * qJD(1);
t1153 = t643 * t772;
t1152 = t644 * t775;
t67 = -t264 * t338 - t267 * t339;
t1151 = t67 * qJD(1);
t1150 = t688 * t781;
t1149 = t690 * t772;
t1148 = t691 * t775;
t1147 = t692 * t775;
t1146 = t699 * t417;
t1144 = t706 * t547;
t1143 = t711 * t703;
t1142 = t711 * t706;
t791 = t1245 * t1267 + t1246 * t417 + t1248 * t481 + t1250 * t482;
t857 = (t1218 * t507 + t1220 * t508) * t778;
t75 = t857 + t791;
t1141 = t75 * qJD(1);
t631 = pkin(5) * t778 - pkin(11) * t1133 + t699;
t1120 = t777 * t631;
t647 = -pkin(11) * t1138 + t700;
t1119 = t777 * t647;
t1102 = t780 * t631;
t1101 = t780 * t647;
t997 = t1156 / 0.2e1;
t953 = t997 - t537 / 0.2e1;
t85 = (t547 * t1250 - t508 / 0.2e1 - t953 * t710) * t775 + (t547 * t1248 + t417 * t1232 + t507 / 0.2e1) * t772;
t1093 = t85 * qJD(1);
t900 = -t1234 * t339 - t1271 * t1272;
t97 = -t1178 / 0.2e1 + t900;
t1092 = t97 * qJD(1);
t916 = -t965 / 0.2e1;
t1088 = t1113 / 0.2e1 + t781 * t916;
t1087 = -t1113 / 0.2e1 + t933 / 0.2e1;
t751 = t772 ^ 2 + t775 ^ 2;
t770 = t778 ^ 2;
t756 = t781 ^ 2 - t770;
t876 = -t1121 / 0.2e1 + t1104 / 0.2e1;
t892 = -t1231 * t264 + t1257 * t512;
t108 = t876 - t892;
t1085 = qJD(1) * t108;
t877 = -t1122 / 0.2e1 - t1103 / 0.2e1;
t894 = -t1232 * t267 + t1256 * t511;
t109 = t877 - t894;
t1084 = qJD(1) * t109;
t115 = t210 * t634 - t344 * t547;
t1083 = qJD(1) * t115;
t116 = -t211 * t634 + t344 * t549;
t1082 = qJD(1) * t116;
t126 = -t267 * t584 + t547 * t944;
t1081 = qJD(1) * t126;
t127 = -t264 * t584 - t547 * t943;
t1080 = qJD(1) * t127;
t129 = t267 * t549 + t338 * t547;
t1079 = qJD(1) * t129;
t131 = -t264 * t549 - t339 * t547;
t1078 = qJD(1) * t131;
t995 = t1144 / 0.2e1;
t132 = t995 - t1281;
t1077 = qJD(1) * t132;
t133 = t995 - t1280;
t1076 = qJD(1) * t133;
t825 = t1230 * t1267 + t1250 * t549;
t172 = t1162 / 0.2e1 + t825;
t1075 = qJD(1) * t172;
t888 = t1229 * t417 + t1249 * t549;
t999 = -t1163 / 0.2e1;
t175 = t999 + t888;
t1074 = qJD(1) * t175;
t186 = t1267 * t508 - t417 * t507;
t1073 = qJD(1) * t186;
t898 = t1249 * t1267 - t1251 * t417;
t200 = t898 + t1088;
t1072 = qJD(1) * t200;
t208 = -t1267 * t584 + t507 * t547;
t1071 = qJD(1) * t208;
t209 = t417 * t584 - t508 * t547;
t1070 = qJD(1) * t209;
t228 = -t380 * t867 - t527 * t634;
t1069 = qJD(1) * t228;
t229 = t381 * t867 + t527 * t636;
t1068 = qJD(1) * t229;
t1067 = qJD(1) * t264;
t294 = -t1265 * t781 + t549 * t636;
t1066 = qJD(1) * t294;
t305 = t547 * t688 - t584 * t634;
t1065 = qJD(1) * t305;
t306 = t549 * t688 - t585 * t634;
t1064 = qJD(1) * t306;
t440 = t634 * t965 + t688 * t867;
t1063 = qJD(1) * t440;
t441 = t636 * t965 + t689 * t867;
t1062 = qJD(1) * t441;
t1061 = qJD(1) * t634;
t1060 = qJD(3) * t706;
t855 = t1226 + t871;
t269 = t855 * t547;
t1059 = qJD(4) * t269;
t1057 = qJD(4) * t634;
t1056 = qJD(4) * t1266;
t1055 = qJD(4) * t726;
t1054 = qJD(4) * t764;
t1053 = qJD(4) * t772;
t1052 = qJD(4) * t775;
t1051 = qJD(4) * t778;
t1050 = qJD(4) * t781;
t1049 = qJD(5) * t547;
t1048 = qJD(5) * t781;
t1047 = qJD(6) * t547;
t1046 = qJD(6) * t706;
t1045 = qJD(6) * t726;
t794 = t1251 * t634 - t1267 * t912;
t886 = t1231 * t481 + t1246 * t547;
t117 = t1170 / 0.2e1 + (t999 + t794) * t778 + t886;
t1044 = t117 * qJD(1);
t812 = t1248 * t634 + t417 * t912;
t885 = t1231 * t482 + t1245 * t547;
t998 = -t1162 / 0.2e1;
t120 = -t1169 / 0.2e1 + (t998 + t812) * t778 + t885;
t1043 = t120 * qJD(1);
t123 = -t267 * t490 - t295 * t547;
t1042 = t123 * qJD(1);
t124 = t264 * t490 + t296 * t547;
t1041 = t124 * qJD(1);
t215 = (t1259 + t997) * t781 + (t1168 / 0.2e1 - t636 / 0.2e1) * t772;
t1040 = t215 * qJD(1);
t992 = -t1134 / 0.2e1;
t966 = t547 * t992;
t217 = t966 + t616 / 0.2e1 + (t1260 + t1157 / 0.2e1) * t781;
t1039 = t217 * qJD(1);
t956 = t978 / 0.2e1;
t833 = t1232 * t636 + t547 * t956;
t219 = t1150 / 0.2e1 + t833;
t1038 = t219 * qJD(1);
t942 = t547 * t781 + t549 * t778;
t275 = t942 * t634;
t1037 = t275 * qJD(1);
t293 = -t1265 * t778 + t547 * t636;
t1036 = t293 * qJD(1);
t810 = t1229 * t634 + t549 * t912;
t301 = t810 + t1087;
t1035 = t301 * qJD(1);
t811 = t1231 * t634 + t547 * t912;
t814 = -t1094 / 0.2e1 + t778 * t916;
t302 = -t811 + t814;
t1034 = t302 * qJD(1);
t832 = t1229 * t636 + t1255 * t978;
t996 = t688 * t1215;
t316 = t996 + t832;
t1033 = t316 * qJD(1);
t414 = -t636 ^ 2 + t1265;
t1032 = t414 * qJD(1);
t790 = t1197 * t636 / 0.2e1 + t867 * t956;
t800 = (-t1132 / 0.2e1 - t920 / 0.2e1) * t774;
t432 = t800 - t790;
t1031 = t432 * qJD(1);
t789 = -t1197 * t634 / 0.2e1 + t867 * t912;
t434 = (t1011 / 0.2e1 - t964 / 0.2e1) * t774 + t789;
t1030 = t434 * qJD(1);
t1029 = t490 * qJD(1);
t1028 = t493 * qJD(1);
t564 = (t1086 * t776 + (qJ(2) * t1137 - t755) * t773) * t774;
t1026 = t564 * qJD(1);
t957 = t979 / 0.2e1;
t627 = t911 / 0.2e1 + (t1012 / 0.2e1 + t776 * t957) * t774;
t1025 = t627 * qJD(1);
t1024 = t634 * qJD(3);
t1022 = t711 * qJD(4);
t713 = (t773 ^ 2 + t776 ^ 2) * t774 ^ 2;
t1021 = t713 * qJD(1);
t712 = t1266 * qJD(6);
t1020 = t778 * qJD(3);
t1018 = pkin(10) * t1050;
t1017 = t1210 / 0.2e1;
t1016 = pkin(10) * t1229;
t1015 = t1207 / 0.2e1;
t1008 = t417 * t1027;
t1006 = t549 * t1061;
t1005 = t778 * t1048;
t1004 = t636 * t1061;
t1003 = t636 * t1024;
t1002 = t778 * t1050;
t1001 = -t1189 / 0.2e1;
t994 = -t1139 / 0.2e1;
t993 = t1139 / 0.2e1;
t991 = t1134 / 0.2e1;
t989 = -t490 / 0.2e1;
t986 = -t493 / 0.2e1;
t985 = -t375 / 0.2e1 + t503 / 0.2e1;
t984 = 0.2e1 * t1260;
t982 = t774 * t1198;
t977 = t751 * t710;
t686 = t703 * t1019;
t974 = qJD(1) * t1282 - t686;
t973 = -qJD(1) * t1283 - t686;
t588 = t854 * t781;
t687 = t706 * t1019;
t971 = qJD(4) * t588 + t687;
t970 = -qJD(4) - t1061;
t969 = -qJD(6) - t1027;
t968 = qJD(5) + t1054;
t963 = t1027 + qJD(6) / 0.2e1;
t960 = qJD(1) * t982;
t959 = qJD(2) * t982;
t958 = qJD(3) * t978;
t954 = t374 / 0.2e1 + t1095 / 0.2e1;
t952 = pkin(10) * t1267;
t945 = -t181 * t772 + t182 * t775;
t941 = t1102 - t1119;
t940 = t1101 + t1120;
t939 = -t699 * t772 + t700 * t775;
t792 = t170 * t1250 + t171 * t1248 + t247 * t1231 + t94 * t1246 + t95 * t691 / 0.2e1;
t896 = t1243 * t508 + t1244 * t507;
t18 = (pkin(10) * t1253 + t199 * t912) * t778 + t792 + t896;
t919 = t778 * t961;
t321 = t643 * t690 + t644 * t691 + t710 * t919;
t938 = qJD(1) * t18 + qJD(2) * t321;
t895 = t1217 * t508 + t1220 * t507;
t801 = pkin(4) * t1253 + qJ(5) * t895;
t822 = t1230 * t199 + t1249 * t182 + t1251 * t181;
t906 = -t1202 / 0.2e1 + t1199 / 0.2e1;
t19 = (t1262 + t906) * t710 + t801 + t822;
t320 = (-t1152 + t711 + t1153) * t710;
t937 = -t19 * qJD(1) + t320 * qJD(2);
t476 = -t1271 * t703 - t705 * t706;
t796 = -t1233 * t267 - t1235 * t338 - t1236 * t264 - t1237 * t339;
t899 = t1226 * t295 + t1228 * t296;
t52 = t796 - t899;
t936 = qJD(1) * t52 + qJD(3) * t476;
t567 = t703 * t778 - t705 * t781;
t821 = -t1214 * t338 + t1238 * t549 + t1256 * t705;
t98 = (t634 * t1227 - t267 / 0.2e1) * t778 + t821;
t935 = qJD(1) * t98 + qJD(3) * t567;
t568 = t1271 * t781 - t706 * t778;
t820 = -t1213 * t339 + t1233 * t547 + t1235 * t549;
t99 = (t1226 * t634 + t1272) * t778 + t820;
t934 = qJD(1) * t99 + qJD(3) * t568;
t151 = (0.2e1 * t1219 * t1267 + (-t1217 + t1218) * t417) * t778;
t723 = t751 * t770;
t932 = qJD(1) * t151 - qJD(3) * t723;
t587 = t855 * t781;
t931 = qJD(1) * t269 - qJD(3) * t587;
t930 = qJD(1) * t270 - qJD(3) * t588;
t271 = (t1227 - t869) * t547;
t589 = -t1214 * t1266 + t781 * t869;
t929 = qJD(1) * t271 + qJD(3) * t589;
t272 = t853 * t547;
t928 = qJD(1) * t272 - qJD(3) * t590;
t286 = t547 ^ 2 - t549 ^ 2;
t927 = qJD(1) * t286 - qJD(3) * t942;
t926 = -qJD(1) * t942 + qJD(3) * t756;
t868 = t1259 + t953;
t165 = t772 * t984 + t775 * t868;
t925 = qJD(1) * t165 + qJD(4) * t751;
t924 = t1055 + t1060;
t918 = t773 * t960;
t917 = t776 * t960;
t915 = qJD(4) * t961;
t914 = qJD(3) * t961;
t913 = -t961 / 0.2e1;
t910 = pkin(3) * t1255 + t1173 / 0.2e1;
t909 = pkin(4) * t1258 - t1183 / 0.2e1;
t908 = t482 * t1264 + t1184 / 0.2e1;
t545 = t1154 / 0.2e1 - t849 / 0.2e1;
t907 = t545 * qJD(1) + t1020 / 0.2e1;
t807 = pkin(3) * t1256 + t1172 / 0.2e1 + pkin(10) * t988;
t158 = t807 + t985;
t905 = pkin(3) * t1019 - qJD(1) * t158;
t160 = -t374 / 0.2e1 + (-t1209 / 0.2e1 - t510 / 0.2e1) * t781 + t910;
t904 = pkin(3) * t1020 - qJD(1) * t160;
t903 = t1217 * t171 + t1220 * t170;
t902 = t1221 * t295 + t1227 * t202;
t901 = t1221 * t296 + t1225 * t202;
t897 = t1243 * t1267 - t1244 * t417;
t893 = t1214 * t511 - t1231 * t703;
t891 = t1213 * t512 + t1231 * t706;
t889 = -t1153 / 0.2e1 + t1152 / 0.2e1;
t887 = t1217 * t643 + t1219 * t644;
t884 = -t1148 / 0.2e1 + t1149 / 0.2e1;
t883 = t1217 * t693 + t1220 * t692;
t882 = -t1131 / 0.2e1 - t1110 / 0.2e1;
t881 = -t1130 / 0.2e1 - t1109 / 0.2e1;
t880 = -t1129 / 0.2e1 + t1112 / 0.2e1;
t879 = -t1128 / 0.2e1 + t1111 / 0.2e1;
t875 = -t1120 / 0.2e1 - t1101 / 0.2e1;
t874 = -t1119 / 0.2e1 + t1102 / 0.2e1;
t873 = -t1118 / 0.2e1 - t1099 / 0.2e1;
t872 = -t1117 / 0.2e1 + t1100 / 0.2e1;
t870 = -t1114 / 0.2e1 - t1096 / 0.2e1;
t865 = qJD(4) * t627 + t1004;
t864 = qJD(4) * t587 + t1046 - t687;
t862 = t778 * t913;
t861 = t778 * t912;
t860 = qJD(6) * t1216 + t972;
t859 = -t1208 / 0.2e1 - t954;
t66 = t264 * t706 - t267 * t703;
t69 = t1266 * t267 + t264 * t726;
t77 = -t264 ^ 2 + t267 ^ 2;
t858 = qJD(1) * t77 + qJD(3) * t66 + qJD(4) * t69;
t856 = t869 * t547;
t646 = -pkin(11) * t1139 + t693;
t815 = -pkin(11) * t1134 + t715 + (-pkin(10) * t772 - pkin(5)) * t781;
t504 = t646 * t777 - t780 * t815;
t783 = t1213 * t947 - t1222 * t267 - t1224 * t338 + t1236 * t178 + t1237 * t187 + t1254 * t504 + t1257 * t941;
t1 = (t634 * t1247 + t48 / 0.2e1) * t778 + t783 + t902;
t238 = -t1143 / 0.2e1 + (-t1266 * t912 + t511 / 0.2e1) * t778;
t254 = t504 * t778 - t703 * t733 - t705 * t732 + t781 * t941;
t852 = -qJD(1) * t1 - qJD(2) * t238 - qJD(3) * t254;
t542 = t1015 - t883;
t788 = t1239 * t644 + t1250 * t699 + t542 * t710;
t197 = (pkin(4) * t912 + t1016) * t778 + t884 * qJ(5) + t788;
t418 = pkin(10) ^ 2 * t778 * t781 + t692 * t699 + t693 * t700;
t799 = t1240 * t95 + t1241 * t94 + t1243 * t182 + t1244 * t181;
t802 = qJ(5) * t903 + t1264 * t247;
t5 = (t1216 * t211 + t1001) * pkin(10) + t799 + t802;
t851 = -t5 * qJD(1) + t197 * qJD(2) + t418 * qJD(3);
t651 = t780 * t746 - t777 * t983;
t505 = t780 * t646 + t777 * t815;
t782 = t1214 * t946 - t1222 * t264 - t1224 * t339 + t1233 * t178 + t1235 * t187 + t1254 * t505 + t1256 * t940;
t2 = (t651 * t1252 + t49 / 0.2e1) * t778 + t782 + t901;
t239 = -t1142 / 0.2e1 + (t726 * t912 + t512 / 0.2e1) * t778 + (t1271 / 0.2e1 + t1233) * t710;
t255 = t1271 * t732 - t505 * t778 + t706 * t733 + t781 * t940;
t850 = -qJD(1) * t2 - qJD(2) * t239 + qJD(3) * t255;
t11 = t537 * t1239 + t1146 / 0.2e1 + (qJ(5) * t1258 + t171 / 0.2e1 + t634 * t1240 + t547 * t1244 + t181 * t1215 + t94 * t1213) * t775 + (t482 * t1263 - t170 / 0.2e1 + t547 * t1243 + t182 * t1215 + t95 * t1213) * t772;
t335 = (t1214 * t643 + t1245) * t775 + (t1214 * t644 + t1246) * t772;
t369 = (t692 * t781 + t699 * t778) * t775 + (t693 * t781 + t700 * t778) * t772;
t848 = qJD(1) * t11 - qJD(2) * t335 + qJD(3) * t369;
t797 = t1213 * t49 - t1223 * t264 + t1234 * t178 + t1257 * t505;
t13 = -t797 + t880;
t289 = t872 - t891;
t383 = -t505 * t781 - t706 * t732;
t847 = qJD(1) * t13 + qJD(2) * t289 + qJD(3) * t383;
t798 = t1214 * t48 - t1224 * t267 + t1237 * t178 + t1256 * t504;
t14 = -t798 + t882;
t290 = t873 - t893;
t382 = -t504 * t781 - t703 * t732;
t846 = qJD(1) * t14 + qJD(2) * t290 - qJD(3) * t382;
t795 = t1001 + (t1158 / 0.2e1 + t1211 / 0.2e1 + t1262) * t778;
t827 = t1216 * t94 + t1241 * t547 + t1244 * t549;
t25 = (t181 / 0.2e1 + t952 / 0.2e1) * t781 + t795 * t772 + t827 + t909;
t364 = (t775 * t913 + t1251 - t1140 / 0.2e1) * t778;
t535 = -t692 * t778 + (t699 - 0.2e1 * t758) * t781;
t845 = t25 * qJD(1) + t364 * qJD(2) + t535 * qJD(3);
t826 = t1215 * t95 + t1239 * t547 + t1242 * t549;
t26 = (-t182 / 0.2e1 - pkin(10) * t417 / 0.2e1) * t781 + t795 * t775 + t826 + t908;
t363 = (t772 * t912 + t1248 - t1135 / 0.2e1) * t778;
t536 = t700 * t781 + (-t693 + 0.2e1 * t759) * t778;
t844 = t26 * qJD(1) + t363 * qJD(2) - t536 * qJD(3);
t818 = t1213 * t651 + t1221 * t706 + t1223 * t726;
t297 = -t818 + t874;
t823 = -t1221 * t264 + t1225 * t178 + t1257 * t651;
t35 = -t823 + t879;
t456 = t855 * t710;
t843 = t35 * qJD(1) + t456 * qJD(2) + t297 * qJD(3);
t819 = t1214 * t650 - t1221 * t703 - t1224 * t1266;
t298 = -t819 + t875;
t824 = t1221 * t267 + t1228 * t178 + t1247 * t547;
t36 = -t824 + t881;
t457 = t853 * t710;
t842 = t36 * qJD(1) + t457 * qJD(2) + t298 * qJD(3);
t42 = (t1200 / 0.2e1 + t1201 / 0.2e1) * t778 + t859 + t897;
t436 = (t912 + t887) * t778;
t546 = (t693 * t772 + t1147) * t778;
t841 = qJD(1) * t42 + qJD(2) * t436 + qJD(3) * t546;
t411 = -t1266 * t703 - t706 * t726;
t544 = t703 ^ 2 - t706 ^ 2;
t840 = qJD(1) * t66 + qJD(3) * t544 + qJD(4) * t411;
t574 = t1266 ^ 2 - t726 ^ 2;
t839 = qJD(1) * t69 + qJD(3) * t411 + qJD(4) * t574;
t838 = qJD(3) * t867;
t837 = t867 * qJD(1);
t183 = t1267 ^ 2 + t417 ^ 2;
t836 = qJD(1) * t183 - qJD(3) * t151 + qJD(4) * t165;
t166 = -t777 * t868 - t780 * t984;
t835 = qJD(1) * t166 - t924;
t167 = -t777 * t984 + 0.2e1 * t1261;
t834 = qJD(1) * t167 - qJD(3) * t703 + t1056;
t130 = -t1235 * t267 - t1237 * t264;
t143 = -t1226 * t267 - t1228 * t264;
t831 = -qJD(3) * t130 - qJD(4) * t143 + t1067 * t267;
t509 = -t1225 * t703 + t1228 * t706;
t830 = qJD(1) * t130 + qJD(4) * t509 - t1060 * t703;
t829 = -qJD(1) * t143 - qJD(3) * t509 - t1055 * t1266;
t828 = qJD(6) * t545 + t866;
t809 = t837 - qJD(3);
t808 = qJD(4) * t949 + t1048;
t806 = t980 / 0.2e1 + t781 * t956;
t793 = (t1217 * t1267 - t1275) * qJ(5) + t906;
t40 = t793 + t870;
t430 = t806 - t889;
t739 = t751 * qJ(5);
t805 = qJD(1) * t40 - qJD(2) * t430 - qJD(3) * t542 + qJD(4) * t739;
t765 = t1051 / 0.2e1;
t615 = t627 * qJD(3);
t580 = t589 * qJD(4);
t543 = t1015 + t883;
t506 = t509 * qJD(6);
t474 = -t1144 / 0.2e1;
t459 = t854 * t710;
t458 = (t1228 + t869) * t710;
t437 = t643 * t992 + t644 * t994 + t861;
t435 = -t774 * t1011 / 0.2e1 + t957 * t1137 + t789;
t433 = t800 + t790;
t431 = t806 + t889;
t413 = qJD(3) * t989 + qJD(4) * t545;
t392 = t411 * qJD(6);
t366 = t1216 * t644 + t711 * t991 + t772 * t861;
t365 = t1215 * t643 + t711 * t993 + t775 * t862;
t334 = -t781 * t887 - t884;
t317 = t996 - t832;
t304 = -t810 + t1087;
t303 = t811 + t814;
t300 = t818 + t874;
t299 = t819 + t875;
t292 = t872 + t891;
t291 = t873 + t893;
t276 = t942 * qJD(4);
t274 = -t339 / 0.2e1 - t856;
t273 = t339 / 0.2e1 - t856;
t241 = t512 * t1216 + t1142 / 0.2e1 + t726 * t861;
t240 = t511 * t1216 + t1143 / 0.2e1 - t1266 * t861;
t220 = -t1150 / 0.2e1 + t833;
t216 = t966 - t417 * t1214 + t772 * t986 - t616 / 0.2e1;
t214 = t547 * t993 + t1267 * t1213 + t775 * t986 + t1155 / 0.2e1;
t201 = -t898 + t1088;
t196 = t778 * t1016 + t1148 * t1263 - qJ(5) * t1149 / 0.2e1 + pkin(4) * t862 + t788;
t174 = t1163 / 0.2e1 + t888;
t173 = t998 + t825;
t168 = t1261 - t1273 / 0.2e1;
t164 = t165 * qJD(5);
t161 = pkin(10) * t986 + t910 + t954;
t159 = t807 - t985;
t146 = t151 * qJD(5);
t142 = t143 * qJD(6);
t139 = t474 + t1281;
t138 = t474 + t1280;
t128 = t130 * qJD(6);
t119 = t1169 / 0.2e1 + t584 * t991 + t812 * t778 + t885;
t118 = -t1170 / 0.2e1 + t584 * t993 + t794 * t778 + t886;
t111 = t876 + t892;
t110 = t877 + t894;
t101 = -t1215 * t264 + t726 * t989 - t820;
t100 = -t1216 * t267 - t1266 * t988 - t821;
t96 = t1178 / 0.2e1 + t900;
t84 = (t1218 * t1267 + t1275) * t710 + t887 * t547 + t895;
t76 = t857 - t791;
t72 = t1164 / 0.2e1 + t786;
t70 = -t1165 / 0.2e1 + t787;
t68 = t69 * qJD(6);
t65 = t66 * qJD(6);
t61 = t784 - t803;
t60 = t785 + t804;
t51 = t796 + t899;
t43 = t94 * t992 + t95 * t994 + t859 - t897;
t39 = t793 - t870;
t38 = t823 + t879;
t37 = t824 + t881;
t28 = pkin(10) * t966 + t1015 * t417 + t1213 * t182 + t1268 * t775 + t211 * t991 - t826 + t908;
t27 = t1211 * t994 - t1213 * t952 + t1214 * t181 + t1268 * t772 + t211 * t993 - t827 + t909;
t20 = t1199 * t1232 + t801 - t822 + (t1202 + t211) * t1231;
t17 = t1017 * t584 + t199 * t861 + t792 - t896;
t16 = t797 + t880;
t15 = t798 + t882;
t12 = t1267 * t1239 + t348 * t1242 + t182 * t994 - t95 * t1138 / 0.2e1 - t1146 / 0.2e1 + t1147 * t1256 + t181 * t992 - t94 * t1133 / 0.2e1 + (t1218 * t481 + t1219 * t482) * qJ(5) + t903;
t6 = pkin(10) * t1000 + t1017 * t211 - t799 + t802;
t4 = t1216 * t49 + t651 * t988 - t782 + t901;
t3 = t1216 * t48 + t650 * t988 - t783 + t902;
t44 = [0, 0, 0, -t773 * t959, -t776 * t959, t713 * qJD(2), t564 * qJD(2), -t1003, t414 * qJD(3), t634 * t838, t636 * t838, 0, qJD(2) * t440 + qJD(3) * t229, qJD(2) * t441 + qJD(3) * t228 (-qJD(4) * t547 - t1019 * t634) * t549, qJD(3) * t275 + qJD(4) * t286, qJD(3) * t294 - t1057 * t547, -qJD(3) * t293 - t1057 * t549, t1003, qJD(2) * t305 + qJD(3) * t57 + qJD(4) * t116, qJD(2) * t306 + qJD(3) * t58 + qJD(4) * t115, qJD(2) * t208 + qJD(3) * t33 + qJD(4) * t31 - t1049 * t417, qJD(2) * t209 + qJD(3) * t34 + qJD(4) * t32 - t1049 * t1267, qJD(2) * t186 + qJD(3) * t23 + qJD(4) * t24 + qJD(5) * t183, qJD(2) * t41 + qJD(3) * t22 + qJD(4) * t21 + qJD(5) * t50 -(qJD(3) * t296 - qJD(4) * t339 + qJD(6) * t267) * t264, qJD(3) * t63 + qJD(4) * t67 + qJD(6) * t77, qJD(3) * t124 + qJD(4) * t131 + t1047 * t267, qJD(3) * t123 + qJD(4) * t129 + t1047 * t264 (qJD(4) * t549 - t1020 * t634) * t547, qJD(2) * t126 + qJD(3) * t7 + qJD(4) * t9 + qJD(6) * t30 + t1049 * t264, qJD(2) * t127 + qJD(3) * t8 + qJD(4) * t10 + qJD(6) * t29 - t1049 * t267; 0, 0, 0, -t918, -t917, t1021, t1026, 0, 0, 0, 0, 0, qJD(3) * t433 + t1063, qJD(3) * t435 + t1062, 0, 0, 0, 0, 0, qJD(3) * t220 + qJD(4) * t304 + t1065, qJD(3) * t317 + qJD(4) * t303 + t1064, qJD(3) * t118 + qJD(4) * t173 + t1071, qJD(3) * t119 + qJD(4) * t174 + t1070, qJD(3) * t76 + qJD(4) * t84 + t1073, t1171 + (t507 * t643 + t508 * t644 + t584 * t710) * qJD(2) + t17 * qJD(3) + t20 * qJD(4) + t201 * qJD(5), 0, 0, 0, 0, 0, qJD(3) * t60 + qJD(4) * t70 + qJD(6) * t111 + t1081, qJD(3) * t61 + qJD(4) * t72 + qJD(6) * t110 + t1080; 0, 0, 0, 0, 0, 0, 0, -t1004, t1032, t809 * t634, t809 * t636, 0, qJD(2) * t433 - qJD(3) * t381 + t1068, qJD(2) * t435 + qJD(3) * t380 + t1069, t1269 + (-qJD(1) * t549 - t1020) * t493, -t1024 * t756 + t1037 - t276, t1020 * t636 + t1066, t1019 * t636 - t1036, t865, t1167 + t220 * qJD(2) + (-t381 * t781 + t778 * t955) * qJD(3) + t161 * qJD(4), t1166 + t317 * qJD(2) + (t381 * t778 + t781 * t955) * qJD(3) + t159 * qJD(4), -t170 * t1019 + t1175 + t118 * qJD(2) + t27 * qJD(4) + t216 * qJD(5) + (pkin(10) * t481 - t634 * t692 + t1184) * t1020, t171 * t1019 + t1174 + t119 * qJD(2) + t28 * qJD(4) + t214 * qJD(5) + (pkin(10) * t482 + t634 * t693 + t1183) * t1020, t1186 + t76 * qJD(2) + (-t693 * t481 - t692 * t482 + (-t170 * t775 - t171 * t772) * t778) * qJD(3) + t12 * qJD(4) - t146, t1187 + t17 * qJD(2) + (t1210 * t247 + t170 * t692 + t171 * t693) * qJD(3) + t6 * qJD(4) + t43 * qJD(5), t96 * qJD(4) + t128 + (t1060 - t1067) * t296, t1159 + (-t295 * t706 - t296 * t703) * qJD(3) + t51 * qJD(4) + t65, t1041 + (-t296 * t781 - t490 * t706) * qJD(3) + t101 * qJD(4) + t1283 * qJD(6), t1042 + (t295 * t781 + t490 * t703) * qJD(3) + t100 * qJD(4) + t139 * qJD(6), -t1269 + (-t963 + t1019) * t490, t1205 + t60 * qJD(2) + (t202 * t703 + t295 * t732 + t490 * t504 - t53 * t781) * qJD(3) + t3 * qJD(4) + t138 * qJD(5) + t16 * qJD(6), t1204 + t61 * qJD(2) + (t202 * t706 + t296 * t732 + t490 * t505 + t54 * t781) * qJD(3) + t4 * qJD(4) + t1282 * qJD(5) + t15 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t866, t927, t970 * t547, t970 * t549, t615, qJD(2) * t304 + qJD(3) * t161 - qJD(4) * t211 + t1082, qJD(2) * t303 + qJD(3) * t159 + qJD(4) * t210 + t1083, t1177 + t173 * qJD(2) + t27 * qJD(3) + (-t211 * t775 + t772 * t950) * qJD(4) - t348 * qJD(5), t211 * t1053 + t1176 + t174 * qJD(2) + t28 * qJD(3) + (qJD(4) * t950 - t1049) * t775, qJD(2) * t84 + qJD(3) * t12 + qJD(4) * t945 + t1185 + t164, t1188 + t20 * qJD(2) + t6 * qJD(3) + (-t211 * pkin(4) + qJ(5) * t945) * qJD(4) + t39 * qJD(5), t96 * qJD(3) + t142 - (t1055 - t1067) * t339, t1151 + t51 * qJD(3) + (-t1266 * t339 + t338 * t726) * qJD(4) + t68, qJD(3) * t101 + qJD(6) * t273 + t1055 * t549 + t1078, qJD(3) * t100 + qJD(6) * t269 + t1056 * t549 + t1079, t828, t1203 + t70 * qJD(2) + t3 * qJD(3) + (-t1266 * t187 - t338 * t764 - t549 * t650) * qJD(4) - t270 * qJD(5) + t38 * qJD(6), t1190 + t72 * qJD(2) + t4 * qJD(3) + (t187 * t726 - t339 * t764 - t549 * t651) * qJD(4) + t274 * qJD(5) + t37 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t216 - qJD(4) * t348 - t1008, t214 * qJD(3) + (-qJD(1) * t1267 - t1052) * t547, t836, qJD(2) * t201 + qJD(3) * t43 + qJD(4) * t39 + t1193, 0, 0, 0, 0, 0, qJD(3) * t138 - t1284, qJD(4) * t274 + qJD(6) * t168 + t1286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t831, t858, qJD(4) * t273 - t267 * t969 + t1288, qJD(3) * t139 - t264 * t969 + t1059, t413, qJD(2) * t111 + qJD(3) * t16 + qJD(4) * t38 - qJD(6) * t49 + t1194, qJD(2) * t110 + qJD(3) * t15 + qJD(4) * t37 + qJD(5) * t168 + qJD(6) * t48 + t1195; 0, 0, 0, t918, t917, -t1021, -t1026, 0, 0, 0, 0, 0, -qJD(3) * t432 - t1063, qJD(3) * t434 - t1062, 0, 0, 0, 0, 0, qJD(3) * t219 - qJD(4) * t301 - t1065, -qJD(3) * t316 - qJD(4) * t302 - t1064, qJD(3) * t117 + qJD(4) * t172 - t1071, qJD(3) * t120 + qJD(4) * t175 - t1070, -qJD(3) * t75 + qJD(4) * t85 - t1073, qJD(3) * t18 - qJD(4) * t19 - qJD(5) * t200 - t1171, 0, 0, 0, 0, 0, qJD(3) * t59 + qJD(4) * t71 - qJD(6) * t108 - t1081, qJD(3) * t62 + qJD(4) * t73 - qJD(6) * t109 - t1080; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t321 + qJD(4) * t320, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t958 - t1031, -t914 + t1030, 0, 0, 0, 0, 0, -t778 * t915 - t781 * t958 + t1038, t778 * t958 - t781 * t915 - t1033, t1044 + (-t690 * t781 + t770 * t923) * qJD(3) + t365 * qJD(4), t1043 + (t691 * t781 + t770 * t922) * qJD(3) + t366 * qJD(4), -t1141 + t334 * qJD(4) + (-t690 * t775 - t691 * t772) * t1020 (pkin(10) * t770 * t961 + t690 * t692 + t691 * t693) * qJD(3) + t196 * qJD(4) + t437 * qJD(5) + t938, 0, 0, 0, 0, 0, t1161 + (-t554 * t781 + t703 * t919) * qJD(3) + t240 * qJD(4) + t292 * qJD(6), t1160 + (t555 * t781 + t706 * t919) * qJD(3) + t241 * qJD(4) + t291 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t778 * t914 - t1022 - t1035, qJD(4) * t710 - t781 * t914 - t1034, qJD(3) * t365 - t1022 * t775 + t1075, qJD(3) * t366 + t1022 * t772 + t1074, t334 * qJD(3) - qJD(4) * t977 + t1093, t196 * qJD(3) + (-t711 * pkin(4) - qJ(5) * t977) * qJD(4) + t431 * qJD(5) + t937, 0, 0, 0, 0, 0, qJD(3) * t240 + qJD(6) * t459 - t1022 * t1266 + t1192, qJD(3) * t241 + qJD(6) * t458 + t1022 * t726 + t1191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t437 + qJD(4) * t431 - t1072, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t292 + qJD(4) * t459 - qJD(6) * t512 - t1085, qJD(3) * t291 + qJD(4) * t458 + qJD(6) * t511 - t1084; 0, 0, 0, 0, 0, 0, 0, t1004, -t1032, -t634 * t837, -t636 * t837, 0, qJD(2) * t432 - t1068, -qJD(2) * t434 - t1069, t1006 * t781 + t1269, -t276 - t1037, qJD(4) * t493 - t1066, -qJD(4) * t490 + t1036, -t865, -qJD(2) * t219 + qJD(4) * t160 - t1167, qJD(2) * t316 + qJD(4) * t158 - t1166, -qJD(2) * t117 - qJD(4) * t25 + qJD(5) * t217 - t1175, -qJD(2) * t120 - qJD(4) * t26 + qJD(5) * t215 - t1174, qJD(2) * t75 - qJD(4) * t11 - t1186 - t146, -qJD(2) * t18 - qJD(4) * t5 - qJD(5) * t42 - t1187, qJD(4) * t97 + t1067 * t296 + t128, qJD(4) * t52 - t1159 + t65, -qJD(4) * t99 - qJD(6) * t1282 - t1041, -qJD(4) * t98 - qJD(6) * t133 - t1042, t490 * t963 - t1269, -qJD(2) * t59 - qJD(4) * t1 - qJD(5) * t132 - qJD(6) * t13 - t1205, -qJD(2) * t62 - qJD(4) * t2 - qJD(5) * t1283 - qJD(6) * t14 - t1204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1031, -t1030, 0, 0, 0, 0, 0, -t1038, t1033, -qJD(4) * t364 - t1044, -qJD(4) * t363 - t1043, qJD(4) * t335 + t1141, qJD(4) * t197 - qJD(5) * t436 - t938, 0, 0, 0, 0, 0, -qJD(4) * t238 - qJD(6) * t289 - t1161, -qJD(4) * t239 - qJD(6) * t290 - t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1002, t756 * qJD(4), 0, 0, 0, -pkin(3) * t1051, -pkin(3) * t1050, -qJD(4) * t535 + t1005 * t775, qJD(4) * t536 - t1005 * t772, -qJD(4) * t369 + qJD(5) * t723, qJD(4) * t418 - qJD(5) * t546 (qJD(4) * t1271 - t1023) * t706, qJD(4) * t476 + qJD(6) * t544, -qJD(4) * t568 + t1023 * t781, -qJD(4) * t567 + t1046 * t781, -t1002, -qJD(4) * t254 - qJD(6) * t383 + t1048 * t706, qJD(4) * t255 + qJD(6) * t382 - t1048 * t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t972, t926, t1028 + t1050, -t1029 - t1051, -t1025, -t904 - t1018, pkin(10) * t1051 - t905, -t759 * qJD(4) + t772 * t808 - t845, t1018 * t772 + t775 * t808 - t844, qJD(4) * t939 - t848 (-pkin(4) * t1207 + qJ(5) * t939) * qJD(4) + t543 * qJD(5) + t851, t1271 * t924 + t1092 + t506 (t1266 * t1271 - t705 * t726) * qJD(4) + t392 + t936, qJD(6) * t590 + t1051 * t726 - t934, -qJD(6) * t587 + t1051 * t1266 - t935, -t860 (-t1266 * t733 - t650 * t778 + t705 * t764) * qJD(4) + t588 * qJD(5) + t300 * qJD(6) + t852 (t1271 * t764 - t651 * t778 + t726 * t733) * qJD(4) + t589 * qJD(5) + t299 * qJD(6) + t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1039 + (t1020 * t775 + t1053) * t781, t1040 + (-t1020 * t772 + t1052) * t781, -t932, qJD(4) * t543 - t841, 0, 0, 0, 0, 0, t971 - t1077, t580 + t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, t840, -t974 + t1270, -t864 - t1076, qJD(1) * t988 + t765, qJD(4) * t300 - qJD(6) * t505 - t847, qJD(4) * t299 + qJD(6) * t504 - t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t866, -t927, -qJD(3) * t493 + t1027 * t634, qJD(3) * t490 + t1006, t615, qJD(2) * t301 - qJD(3) * t160 - t1082, qJD(2) * t302 - qJD(3) * t158 - t1083, -qJD(2) * t172 + qJD(3) * t25 - t1177, -qJD(2) * t175 + qJD(3) * t26 - t1176, -qJD(2) * t85 + qJD(3) * t11 - t1185 + t164, qJD(2) * t19 + qJD(3) * t5 + qJD(5) * t40 - t1188, -qJD(3) * t97 - t1067 * t339 + t142, -qJD(3) * t52 - t1151 + t68, qJD(3) * t99 - qJD(6) * t271 - t1078, qJD(3) * t98 - qJD(6) * t270 - t1079, -t828, -qJD(2) * t71 + qJD(3) * t1 + qJD(5) * t269 - qJD(6) * t35 - t1203, -qJD(2) * t73 + qJD(3) * t2 + qJD(5) * t272 - qJD(6) * t36 - t1190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1035, t1034, qJD(3) * t364 - t1075, qJD(3) * t363 - t1074, -qJD(3) * t335 - t1093, -qJD(3) * t197 - qJD(5) * t430 - t937, 0, 0, 0, 0, 0, qJD(3) * t238 - qJD(6) * t456 - t1192, qJD(3) * t239 - qJD(6) * t457 - t1191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t972, -t926, -t1028, t1029, t1025, t904, t905, t845, t844, t848, -qJD(5) * t542 - t851, -t1060 * t1271 - t1092 + t506, t392 - t936, -qJD(6) * t589 + t934, qJD(6) * t588 + t935, t860, -qJD(5) * t587 - qJD(6) * t297 - t852, -qJD(5) * t590 - qJD(6) * t298 - t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t751 * qJD(5), t739 * qJD(5), t726 * t712, t574 * qJD(6), 0, 0, 0, t764 * t1045, t764 * t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, t805, 0, 0, 0, 0, 0, t931, t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t829, t839, t712 - t929, -t930 - t1045, -t907, -qJD(6) * t651 + t1054 * t726 - t843, qJD(6) * t650 + t1054 * t1266 - t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t217 + t1008, -qJD(3) * t215 + t1027 * t1267, -t836, qJD(2) * t200 + qJD(3) * t42 - qJD(4) * t40 - t1193, 0, 0, 0, 0, 0, qJD(3) * t132 - qJD(6) * t166 - t1010 - t1059, -qJD(4) * t272 + qJD(6) * t167 + t1009 + t1288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t436 + qJD(4) * t430 + t1072, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t757 * t775 - t1039, t757 * t772 - t1040, t932, qJD(4) * t542 + t841, 0, 0, 0, 0, 0, t864 + t1077, -t973 + t1270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t925, -t805, 0, 0, 0, 0, 0, -t931 + t1045, t712 - t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t835, t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t831, -t858, qJD(4) * t271 + t1286, qJD(3) * t133 + t1284, t413, qJD(2) * t108 + qJD(3) * t13 + qJD(4) * t35 + qJD(5) * t166 - t1194, qJD(2) * t109 + qJD(3) * t14 + qJD(4) * t36 - qJD(5) * t167 - t1195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t289 + qJD(4) * t456 + t1085, qJD(3) * t290 + qJD(4) * t457 + t1084; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t830, -t840, t580 + t974, -t971 + t1076, qJD(1) * t989 + t765, qJD(4) * t297 - qJD(5) * t706 + t847, qJD(4) * t298 + qJD(5) * t703 + t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t829, -t839, t929, t930, t907, -t726 * t968 + t843, -t1266 * t968 + t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t835, -t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t44;
