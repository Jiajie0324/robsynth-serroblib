% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP3_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP3_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP3_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP3_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:56:29
% EndTime: 2019-03-09 20:56:44
% DurationCPUTime: 4.73s
% Computational Cost: add. (7905->474), mult. (18943->565), div. (0->0), fcn. (13108->6), ass. (0->250)
t197 = sin(qJ(2));
t199 = cos(qJ(2));
t330 = sin(qJ(3));
t263 = qJD(1) * t330;
t331 = cos(qJ(3));
t264 = qJD(1) * t331;
t149 = -t197 * t264 - t199 * t263;
t196 = sin(qJ(4));
t198 = cos(qJ(4));
t273 = qJD(2) + qJD(3);
t250 = t198 * t273;
t119 = -t196 * t149 - t250;
t220 = t198 * t149 - t196 * t273;
t295 = t220 * t119;
t219 = -t331 * t197 - t330 * t199;
t114 = t273 * t219;
t349 = t114 * qJD(1);
t352 = t349 - t295;
t275 = qJD(4) * t198;
t147 = t197 * t263 - t199 * t264;
t290 = t147 * t198;
t351 = t275 + t290;
t276 = qJD(4) * t196;
t291 = t147 * t196;
t350 = t276 + t291;
t324 = pkin(4) + qJ(6);
t348 = t324 * t349;
t332 = -pkin(8) - pkin(7);
t177 = t332 * t199;
t168 = qJD(1) * t177;
t153 = t331 * t168;
t175 = t332 * t197;
t166 = qJD(1) * t175;
t110 = t330 * t166 - t153;
t261 = qJD(3) * t330;
t235 = pkin(2) * t261 - t110;
t163 = t330 * t197 - t331 * t199;
t216 = t163 * qJD(3);
t113 = -t163 * qJD(2) - t216;
t300 = t113 * t196;
t224 = t219 * t275 - t300;
t347 = t220 * qJD(4);
t187 = -pkin(2) * t199 - pkin(1);
t173 = t187 * qJD(1);
t88 = t147 * pkin(3) + t149 * pkin(9) + t173;
t322 = qJD(2) * pkin(2);
t155 = t166 + t322;
t108 = t330 * t155 - t153;
t92 = t273 * pkin(9) + t108;
t50 = t196 * t92 - t198 * t88;
t234 = -pkin(5) * t220 + t50;
t281 = qJD(5) + t234;
t274 = qJD(1) * qJD(2);
t346 = -0.2e1 * t274;
t262 = qJD(3) * t331;
t249 = pkin(2) * t262;
t142 = qJD(4) + t147;
t285 = t198 * t349;
t345 = pkin(9) * (t142 * t276 + t285);
t286 = t196 * t349;
t344 = pkin(9) * (t142 * t275 - t286);
t268 = qJD(2) * t332;
t246 = qJD(1) * t268;
t156 = t197 * t246;
t157 = t199 * t246;
t64 = t155 * t261 + t330 * t156 - t331 * t157 - t168 * t262;
t152 = t330 * t168;
t107 = t331 * t155 + t152;
t91 = -t273 * pkin(3) - t107;
t343 = t64 * t196 + t91 * t275;
t133 = t142 * qJD(5);
t97 = t349 * qJ(5);
t342 = t133 - t97;
t244 = -pkin(4) * t291 + qJ(5) * t290;
t341 = -t244 + t235;
t208 = qJ(5) * t220 + t91;
t29 = t324 * t119 + t208;
t205 = t113 * qJD(1);
t68 = -qJD(4) * t250 - t149 * t276 - t198 * t205;
t214 = t68 * qJ(5) + qJD(5) * t220 + t64;
t69 = t196 * t205 - t347;
t5 = t119 * qJD(6) + t324 * t69 + t214;
t340 = -t5 * t198 + t29 * t276;
t51 = t196 * t88 + t198 * t92;
t41 = -qJ(5) * t142 - t51;
t45 = t119 * pkin(4) + t208;
t339 = -t41 * t149 - t45 * t290;
t338 = t64 * t198 - t91 * t276;
t251 = pkin(4) * t276 - t196 * qJD(5);
t337 = (-qJ(5) * qJD(4) - qJD(6)) * t198 + t251 + t350 * qJ(6);
t118 = t220 ^ 2;
t139 = t142 ^ 2;
t336 = -t118 - t139;
t123 = -t331 * t175 - t330 * t177;
t335 = pkin(5) * t351 - t324 * t149;
t280 = qJD(5) + t50;
t40 = -pkin(4) * t142 + t280;
t334 = -t196 * t40 + t198 * t41;
t333 = t119 ^ 2;
t329 = pkin(4) * t149;
t328 = pkin(5) * t119;
t327 = t349 * pkin(4);
t55 = -t349 * pkin(3) + (pkin(9) * t216 + (t197 * pkin(2) + t163 * pkin(9)) * qJD(2)) * qJD(1);
t63 = t155 * t262 + t331 * t156 + t330 * t157 + t168 * t261;
t258 = -t196 * t55 - t198 * t63 - t88 * t275 + t92 * t276;
t7 = t258 - t342;
t325 = t7 * t198;
t323 = qJ(5) * t69;
t257 = t196 * t63 - t198 * t55 + t92 * t275 + t88 * t276;
t11 = t257 + t327;
t10 = t11 * t196;
t321 = t220 * t45;
t15 = pkin(4) * t69 + t214;
t320 = t15 * t196;
t14 = t15 * t198;
t317 = t198 * t69;
t316 = t29 * t220;
t313 = t68 * t196;
t102 = -pkin(3) * t149 + pkin(9) * t147;
t312 = t196 * t102 + t198 * t107;
t111 = t331 * t166 + t152;
t277 = qJD(1) * t197;
t90 = pkin(2) * t277 + t102;
t311 = t198 * t111 + t196 * t90;
t310 = t337 + t341;
t106 = pkin(3) * t163 + pkin(9) * t219 + t187;
t124 = t330 * t175 - t331 * t177;
t309 = t196 * t106 + t198 * t124;
t62 = t244 + t108;
t308 = -t62 + t337;
t185 = t330 * pkin(2) + pkin(9);
t240 = t198 * t249;
t140 = t149 * qJ(5);
t245 = pkin(5) * t291 - t140;
t307 = t240 + (-pkin(5) - t185) * t276 - t245 - t311;
t241 = t196 * t249;
t213 = t185 * t275 + t241;
t103 = t196 * t111;
t255 = -t198 * t90 + t103;
t306 = t213 - t255 + t335;
t141 = -qJ(5) * t275 + t251;
t305 = t141 + t341;
t304 = t141 - t62;
t303 = (-pkin(5) - pkin(9)) * t276 - t245 - t312;
t256 = t198 * t102 - t196 * t107;
t302 = pkin(9) * t275 + t256 + t335;
t301 = t349 * t185;
t299 = t113 * t198;
t298 = t119 * qJ(5);
t297 = t119 * t142;
t296 = t119 * t196;
t294 = t220 * t142;
t293 = t220 * t198;
t292 = t142 * t149;
t289 = t149 * t147;
t288 = t219 * t196;
t287 = t219 * t198;
t201 = qJD(1) ^ 2;
t284 = t199 * t201;
t200 = qJD(2) ^ 2;
t283 = t200 * t197;
t282 = t200 * t199;
t31 = t51 - t328;
t279 = -qJD(6) - t31;
t278 = t197 ^ 2 - t199 ^ 2;
t272 = t40 * t275 + t41 * t276 + t10;
t271 = t331 * pkin(2);
t270 = t197 * t322;
t269 = t45 * t276;
t266 = t219 * t276;
t260 = t197 * t274;
t259 = -t196 * qJ(5) - pkin(3);
t254 = pkin(1) * t346;
t115 = t196 * t124;
t253 = t198 * t106 - t115;
t252 = t142 * t198;
t248 = t40 * t149 - t45 * t291 + t14;
t247 = -t51 * t149 + t343;
t56 = -qJ(5) * t163 - t309;
t242 = t196 * t41 + t198 * t40;
t239 = t147 * t91 + t301;
t238 = -qJ(5) * t198 + qJ(6) * t196;
t237 = -qJD(4) * t45 - t301;
t67 = -pkin(3) * t114 - pkin(9) * t113 + t270;
t167 = t197 * t268;
t169 = t199 * t268;
t73 = -t123 * qJD(3) + t331 * t167 + t330 * t169;
t236 = -t106 * t276 - t124 * t275 - t196 * t73 + t198 * t67;
t172 = -t198 * pkin(4) + t259;
t233 = -pkin(5) * t69 - t258;
t232 = -t68 * pkin(5) + t257;
t231 = -pkin(4) * t288 + t123;
t230 = -t50 * t149 - t338;
t229 = t5 * t196 + t29 * t275;
t228 = t142 * t51 - t257;
t227 = -t45 * t275 - t320;
t223 = t266 + t299;
t222 = t106 * t275 - t124 * t276 + t196 * t67 + t198 * t73;
t221 = t173 * t149 - t64;
t74 = t330 * t167 - t331 * t169 + t175 * t261 - t177 * t262;
t154 = -t324 * t198 + t259;
t218 = -t119 * t29 + t233;
t39 = -t68 + t297;
t20 = -t324 * t142 + t281;
t217 = -t20 * t149 + t29 * t291 + t340;
t25 = qJD(6) - t41 - t328;
t215 = t25 * t149 - t29 * t290 - t229;
t212 = -t185 * t276 + t240;
t211 = t232 + t348;
t210 = -pkin(4) * t224 - qJ(5) * t266 + t74;
t2 = -t142 * qJD(6) + t211;
t4 = t233 + t342;
t209 = t2 * t196 + t4 * t198 + t20 * t351 - t350 * t25;
t13 = t114 * qJ(5) - t163 * qJD(5) - t222;
t207 = t242 * qJD(4) + t10 - t325;
t206 = t173 * t147 - t63;
t202 = -t69 - t294;
t192 = t198 * pkin(5);
t191 = t196 * pkin(5);
t186 = -t271 - pkin(3);
t176 = pkin(9) * t198 + t192;
t174 = pkin(9) * t196 + t191;
t160 = t185 * t198 + t192;
t159 = t185 * t196 + t191;
t158 = -t271 + t172;
t132 = -t271 + t154;
t78 = -t147 ^ 2 + t149 ^ 2;
t77 = -t149 * t273 + t349;
t76 = t147 * t273 + t205;
t75 = -pkin(4) * t220 + t298;
t72 = qJ(5) * t287 + t231;
t58 = -t219 * t238 + t231;
t57 = -t163 * pkin(4) - t253;
t54 = -t220 * t324 + t298;
t48 = -t256 + t329;
t47 = t140 - t312;
t44 = t255 + t329;
t43 = t140 - t311;
t42 = pkin(5) * t288 - t56;
t38 = t115 + (-pkin(5) * t219 - t106) * t198 - t324 * t163;
t24 = t142 * t252 - t149 * t220 - t286;
t23 = -t119 * t149 - t139 * t196 - t285;
t21 = -t220 * t252 - t313;
t17 = (-qJ(5) * t113 + qJD(5) * t219) * t198 + t210;
t16 = t114 * pkin(4) - t236;
t12 = t238 * t113 - (qJD(6) * t196 + (qJ(6) * qJD(4) - qJD(5)) * t198) * t219 + t210;
t9 = (-t68 - t297) * t198 + (-t69 + t294) * t196;
t8 = t224 * pkin(5) - t13;
t6 = t223 * pkin(5) - t163 * qJD(6) + t324 * t114 - t236;
t1 = [0, 0, 0, 0.2e1 * t199 * t260, t278 * t346, t282, -t283, 0, -pkin(7) * t282 + t197 * t254, pkin(7) * t283 + t199 * t254, -t149 * t113 - t205 * t219, -t113 * t147 - t149 * t114 - t163 * t205 - t219 * t349, t113 * t273, t114 * t273, 0, -t187 * t349 - t173 * t114 - t74 * t273 + (qJD(1) * t163 + t147) * t270, -pkin(2) * t219 * t260 + t173 * t113 - t149 * t270 + t187 * t205 - t73 * t273, -t220 * t223 + t68 * t287 (-t119 * t198 + t196 * t220) * t113 - (t313 - t317 + (t293 + t296) * qJD(4)) * t219, t114 * t220 + t142 * t223 - t68 * t163 + t219 * t285, t119 * t114 + t142 * t224 - t69 * t163 - t219 * t286, -t114 * t142 - t163 * t349, t50 * t114 + t74 * t119 + t123 * t69 + t236 * t142 - t257 * t163 - t219 * t343 - t253 * t349 + t91 * t300, t51 * t114 - t123 * t68 - t222 * t142 + t258 * t163 - t219 * t338 - t220 * t74 + t91 * t299 + t309 * t349, t13 * t119 - t16 * t220 + t56 * t69 - t57 * t68 + t242 * t113 - (t334 * qJD(4) + t11 * t198 + t196 * t7) * t219, t11 * t163 - t40 * t114 - t17 * t119 + t16 * t142 - t219 * t227 - t300 * t45 - t349 * t57 - t72 * t69, -t45 * t299 + t56 * t349 + t41 * t114 + t17 * t220 - t13 * t142 - t7 * t163 + t72 * t68 - (t269 - t14) * t219, t11 * t57 + t13 * t41 + t15 * t72 + t16 * t40 + t17 * t45 + t56 * t7, -t8 * t119 - t6 * t220 - t38 * t68 - t42 * t69 + (-t196 * t25 + t198 * t20) * t113 - (-t196 * t4 + t198 * t2 + (-t196 * t20 - t198 * t25) * qJD(4)) * t219, -t25 * t114 + t12 * t220 + t8 * t142 + t4 * t163 - t219 * t340 - t29 * t299 - t349 * t42 + t58 * t68, t20 * t114 + t12 * t119 - t6 * t142 - t2 * t163 - t219 * t229 + t29 * t300 + t349 * t38 + t58 * t69, t12 * t29 + t2 * t38 + t20 * t6 + t25 * t8 + t4 * t42 + t5 * t58; 0, 0, 0, -t197 * t284, t278 * t201, 0, 0, 0, t201 * pkin(1) * t197, pkin(1) * t284, -t289, t78, t76, t77, 0, t110 * t273 + (-t147 * t277 - t273 * t261) * pkin(2) + t221, t111 * t273 + (t149 * t277 - t273 * t262) * pkin(2) + t206, t21, t9, t24, t23, t292, t186 * t69 + t239 * t196 + t235 * t119 + (-t241 + t103 + (-qJD(4) * t185 - t90) * t198) * t142 + t230, -t186 * t68 + t239 * t198 - t235 * t220 + (-t212 + t311) * t142 + t247, -t43 * t119 + t44 * t220 + (-t220 * t249 + t147 * t41 + (qJD(4) * t119 - t68) * t185) * t196 + (-t119 * t249 + t147 * t40 - t7 + (-t69 - t347) * t185) * t198 + t272, -t158 * t69 + t237 * t196 - t305 * t119 + (-t44 + t213) * t142 + t248, -t320 + t158 * t68 + t237 * t198 + t305 * t220 + (t43 + t212) * t142 + t339, t15 * t158 + t207 * t185 - t334 * t249 + t305 * t45 - t40 * t44 - t41 * t43, -t119 * t307 - t159 * t68 - t160 * t69 - t220 * t306 + t209, t132 * t68 + t142 * t307 - t160 * t349 + t220 * t310 + t215, t119 * t310 + t132 * t69 - t142 * t306 + t159 * t349 + t217, t5 * t132 + t2 * t159 + t4 * t160 + t20 * t306 + t25 * t307 + t29 * t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, t78, t76, t77, 0, t108 * t273 + t221, t107 * t273 + t206, t21, t9, t24, t23, t292, -pkin(3) * t69 - t108 * t119 - t142 * t256 + t291 * t91 + t230 - t344, pkin(3) * t68 + t108 * t220 + t142 * t312 + t290 * t91 + t247 + t345, -t47 * t119 + t48 * t220 - t325 + t242 * t147 + (-t313 - t317 + (-t293 + t296) * qJD(4)) * pkin(9) + t272, -t119 * t304 - t48 * t142 - t172 * t69 + t248 - t269 + t344, t47 * t142 + t172 * t68 + t220 * t304 + t227 + t339 - t345, pkin(9) * t207 + t15 * t172 + t304 * t45 - t40 * t48 - t41 * t47, -t119 * t303 - t174 * t68 - t176 * t69 - t220 * t302 + t209, t142 * t303 + t154 * t68 - t176 * t349 + t220 * t308 + t215, t119 * t308 - t142 * t302 + t154 * t69 + t174 * t349 + t217, t5 * t154 + t2 * t174 + t4 * t176 + t20 * t302 + t25 * t303 + t29 * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, t118 - t333, t39, t202, -t349, t220 * t91 + t228, t119 * t91 - t142 * t50 + t258, pkin(4) * t68 - t323 - (-t41 - t51) * t220 + (t40 - t280) * t119, t119 * t75 - t228 - t321 + 0.2e1 * t327, -t45 * t119 + t142 * t280 - t220 * t75 - t7 - t97, -t11 * pkin(4) - t7 * qJ(5) - t280 * t41 - t40 * t51 - t45 * t75, -t323 + t324 * t68 - (t25 + t279) * t220 + (t20 - t281) * t119, t142 * t234 - t220 * t54 + 0.2e1 * t133 + t218 - 0.2e1 * t97, -t54 * t119 + t316 + (0.2e1 * qJD(6) + t31) * t142 - 0.2e1 * t348 - t232, t4 * qJ(5) - t2 * t324 + t20 * t279 + t25 * t281 - t29 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, -t352, t336, t142 * t41 + t11 - t321, t39, t336, t352, -t316 + (-qJD(6) - t25) * t142 + t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202, -t349 - t295, -t139 - t333, t142 * t20 + t218 + t342;];
tauc_reg  = t1;
