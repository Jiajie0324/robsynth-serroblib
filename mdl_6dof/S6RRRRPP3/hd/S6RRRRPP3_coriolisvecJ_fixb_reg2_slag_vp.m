% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:56:30
% EndTime: 2019-03-09 20:56:45
% DurationCPUTime: 5.69s
% Computational Cost: add. (10204->574), mult. (24824->651), div. (0->0), fcn. (17288->6), ass. (0->280)
t218 = cos(qJ(4));
t316 = qJD(4) * t218;
t216 = sin(qJ(3));
t217 = sin(qJ(2));
t320 = qJD(1) * t217;
t302 = t216 * t320;
t219 = cos(qJ(2));
t375 = cos(qJ(3));
t303 = t375 * t219;
t167 = -qJD(1) * t303 + t302;
t337 = t167 * t218;
t399 = t316 + t337;
t215 = sin(qJ(4));
t317 = qJD(4) * t215;
t338 = t167 * t215;
t398 = t317 + t338;
t181 = t216 * t219 + t217 * t375;
t169 = t181 * qJD(1);
t206 = -pkin(2) * t219 - pkin(1);
t190 = qJD(1) * t206;
t237 = t167 * pkin(3) - t169 * pkin(9) + t190;
t376 = -pkin(8) - pkin(7);
t192 = t376 * t217;
t183 = qJD(1) * t192;
t365 = qJD(2) * pkin(2);
t174 = t183 + t365;
t306 = qJD(2) * t376;
t283 = qJD(1) * t306;
t175 = t217 * t283;
t176 = t219 * t283;
t194 = t376 * t219;
t185 = qJD(1) * t194;
t297 = t375 * qJD(3);
t319 = qJD(3) * t216;
t87 = t174 * t297 + t175 * t375 + t216 * t176 + t185 * t319;
t397 = qJD(4) * t237 + t87;
t314 = qJD(2) + qJD(3);
t137 = t314 * t181;
t124 = t137 * qJD(1);
t368 = pkin(4) + qJ(6);
t396 = t124 * t368;
t171 = t375 * t185;
t133 = t183 * t216 - t171;
t279 = pkin(2) * t319 - t133;
t242 = t219 * (t375 * qJD(2) + t297);
t330 = t216 * t217;
t136 = t314 * t330 - t242;
t346 = t136 * t215;
t253 = t181 * t316 - t346;
t145 = t218 * t169 + t215 * t314;
t131 = t216 * t174 - t171;
t115 = pkin(9) * t314 + t131;
t70 = t215 * t115 - t218 * t237;
t261 = t145 * pkin(5) + t70;
t325 = qJD(5) + t261;
t143 = t215 * t169 - t218 * t314;
t340 = t145 * t218;
t342 = t143 * t215;
t315 = qJD(1) * qJD(2);
t296 = t217 * t315;
t322 = qJD(3) * t302 + t216 * t296;
t395 = -qJD(1) * t242 + t322;
t228 = t215 * t395;
t318 = qJD(4) * t145;
t93 = -t228 + t318;
t358 = t93 * t218;
t286 = qJD(4) * t314;
t92 = t169 * t317 + (t395 - t286) * t218;
t359 = t92 * t215;
t222 = t181 * (qJD(4) * (-t340 + t342) - t358 + t359) + (t143 * t218 + t145 * t215) * t136;
t163 = qJD(4) + t167;
t341 = t145 * t163;
t343 = t143 * t163;
t11 = t215 * (t93 + t341) + t218 * (t92 + t343);
t394 = -0.2e1 * t315;
t329 = t218 * t124;
t393 = pkin(9) * (t163 * t317 - t329);
t332 = t215 * t124;
t392 = pkin(9) * (t163 * t316 + t332);
t278 = -pkin(4) * t338 + qJ(5) * t337;
t391 = -t278 + t279;
t71 = t218 * t115 + t215 * t237;
t58 = -t163 * qJ(5) - t71;
t170 = t216 * t185;
t130 = t174 * t375 + t170;
t114 = -pkin(3) * t314 - t130;
t235 = -t145 * qJ(5) + t114;
t65 = t143 * pkin(4) + t235;
t390 = t58 * t169 - t65 * t337;
t45 = t143 * t368 + t235;
t159 = t375 * t176;
t293 = t216 * t175 - t159;
t88 = qJD(3) * t131 + t293;
t224 = t92 * qJ(5) - t145 * qJD(5) + t88;
t5 = t143 * qJD(6) + t368 * t93 + t224;
t389 = -t5 * t218 + t45 * t317;
t374 = pkin(2) * t216;
t204 = pkin(9) + t374;
t285 = pkin(2) * t297;
t240 = t204 * t316 + t215 * t285;
t125 = pkin(3) * t169 + pkin(9) * t167;
t310 = pkin(2) * t320;
t113 = t125 + t310;
t134 = t183 * t375 + t170;
t78 = t218 * t113 - t215 * t134;
t388 = -t78 - t240;
t120 = t124 * qJ(5);
t156 = t163 * qJD(5);
t383 = t120 + t156;
t287 = pkin(4) * t317 - t215 * qJD(5);
t382 = (-qJ(5) * qJD(4) - qJD(6)) * t218 + t287 + t398 * qJ(6);
t141 = t143 ^ 2;
t142 = t145 ^ 2;
t299 = -t142 + t141;
t160 = t163 ^ 2;
t381 = -t142 - t160;
t380 = t375 * t192 + t216 * t194;
t379 = pkin(5) * t399 + t169 * t368;
t180 = -t303 + t330;
t301 = t181 * t317;
t345 = t136 * t218;
t252 = t301 + t345;
t378 = -t145 * t137 + t163 * t252 + t180 * t92 - t181 * t329;
t15 = t137 * t143 + t163 * t253 + t180 * t93 + t181 * t332;
t373 = pkin(4) * t169;
t372 = t124 * pkin(4);
t371 = t143 * pkin(5);
t309 = t217 * t365;
t75 = t322 * pkin(9) + t124 * pkin(3) + (-pkin(9) * t242 + t309) * qJD(1);
t289 = t115 * t317 - t215 * t75 - t218 * t397;
t7 = t289 - t383;
t369 = t7 * t218;
t367 = pkin(2) * qJD(3);
t366 = qJ(5) * t93;
t288 = t115 * t316 + t215 * t397 - t218 * t75;
t13 = t288 - t372;
t12 = t13 * t215;
t364 = t145 * t65;
t16 = t289 * t218;
t22 = t93 * pkin(4) + t224;
t363 = t22 * t215;
t21 = t22 * t218;
t362 = t45 * t145;
t360 = t88 * t380;
t357 = t382 + t391;
t86 = t131 + t278;
t356 = -t86 + t382;
t272 = t218 * t285;
t161 = t169 * qJ(5);
t281 = pkin(5) * t338 + t161;
t79 = t215 * t113 + t218 * t134;
t355 = t272 + (-pkin(5) - t204) * t317 - t281 - t79;
t354 = t379 - t388;
t162 = -qJ(5) * t316 + t287;
t353 = t162 + t391;
t352 = t162 - t86;
t85 = t215 * t125 + t218 * t130;
t351 = (-pkin(5) - pkin(9)) * t317 - t281 - t85;
t84 = t218 * t125 - t215 * t130;
t350 = pkin(9) * t316 + t379 + t84;
t349 = qJ(5) * t143;
t348 = t124 * t180;
t347 = t124 * t204;
t344 = t143 * t145;
t339 = t163 * t169;
t336 = t169 * t167;
t335 = t181 * t215;
t334 = t181 * t218;
t333 = t190 * t169;
t221 = qJD(1) ^ 2;
t328 = t219 * t221;
t220 = qJD(2) ^ 2;
t327 = t220 * t217;
t326 = t220 * t219;
t324 = qJD(5) + t70;
t47 = t71 - t371;
t323 = -qJD(6) - t47;
t129 = pkin(3) * t180 - pkin(9) * t181 + t206;
t148 = t216 * t192 - t194 * t375;
t95 = t215 * t129 + t218 * t148;
t321 = t217 ^ 2 - t219 ^ 2;
t57 = -pkin(4) * t163 + t324;
t313 = t57 * t316 + t58 * t317 + t12;
t312 = t70 * t337 - t71 * t338 - t16;
t311 = t375 * pkin(2);
t308 = t217 * t328;
t307 = t65 * t317;
t305 = t215 * t375;
t304 = t218 * t375;
t295 = -t215 * qJ(5) - pkin(3);
t294 = pkin(1) * t394;
t138 = t215 * t148;
t94 = t218 * t129 - t138;
t291 = t163 * t215;
t290 = t163 * t218;
t284 = -t57 * t169 - t65 * t338 + t21;
t282 = t219 * t296;
t280 = t114 * t316 + t71 * t169 + t88 * t215;
t76 = -qJ(5) * t180 - t95;
t277 = pkin(4) * t335 - t380;
t275 = t215 * t58 + t218 * t57;
t274 = t215 * t71 - t218 * t70;
t271 = t143 * t285;
t270 = t145 * t285;
t269 = qJ(5) * t218 - qJ(6) * t215;
t268 = -qJD(4) * t65 + t347;
t267 = t114 * t167 - t347;
t266 = -t169 * t143 - t329;
t265 = t145 * t169 - t332;
t91 = pkin(3) * t137 + pkin(9) * t136 + t309;
t184 = t217 * t306;
t186 = t219 * t306;
t99 = qJD(3) * t380 + t375 * t184 + t216 * t186;
t25 = -t129 * t317 - t148 * t316 - t215 * t99 + t218 * t91;
t189 = -t218 * pkin(4) + t295;
t262 = t5 * t215 + t316 * t45;
t260 = t114 * t317 + t70 * t169 - t88 * t218;
t259 = -t92 * pkin(5) + t288;
t258 = -pkin(5) * t93 - t289;
t257 = -t316 * t65 - t363;
t256 = t163 * t71 - t288;
t24 = t129 * t316 - t148 * t317 + t215 * t91 + t218 * t99;
t173 = -t218 * t368 + t295;
t251 = t145 * t290 - t359;
t250 = t143 * t291 - t358;
t248 = t92 - t343;
t247 = -t143 * t45 + t258;
t31 = -t163 * t368 + t325;
t244 = t31 * t169 + t338 * t45 + t389;
t41 = qJD(6) - t58 - t371;
t243 = -t41 * t169 - t45 * t337 - t262;
t241 = t204 * t317 - t272;
t239 = -qJD(4) * t274 + t215 * t288;
t238 = t259 - t396;
t2 = -t163 * qJD(6) + t238;
t4 = t258 + t383;
t236 = t2 * t215 + t4 * t218 + t31 * t399 - t398 * t41;
t20 = -t137 * qJ(5) - t180 * qJD(5) - t24;
t26 = -t145 * t252 - t334 * t92;
t27 = t143 * t253 + t335 * t93;
t233 = qJD(4) * t275 + t12 - t369;
t232 = t239 - t16;
t100 = qJD(3) * t148 + t216 * t184 - t375 * t186;
t229 = (-t359 - t358 + (t340 + t342) * qJD(4)) * pkin(9);
t226 = t190 * t167 - t87;
t225 = pkin(4) * t253 + qJ(5) * t301 + t100;
t56 = t169 * t316 + t215 * t286 - t228 - t341;
t211 = t218 * pkin(5);
t210 = t215 * pkin(5);
t205 = -t311 - pkin(3);
t193 = pkin(9) * t218 + t211;
t191 = pkin(9) * t215 + t210;
t179 = t204 * t218 + t211;
t178 = t204 * t215 + t210;
t177 = -t311 + t189;
t155 = -t311 + t173;
t104 = -t167 ^ 2 + t169 ^ 2;
t102 = t167 * t314 - t395;
t101 = pkin(4) * t145 + t349;
t98 = -qJ(5) * t334 + t277;
t80 = -t181 * t269 + t277;
t77 = -t180 * pkin(4) - t94;
t74 = t145 * t368 + t349;
t68 = -t84 - t373;
t67 = -t161 - t85;
t64 = -t78 - t373;
t63 = -t161 - t79;
t62 = t137 * t163 + t348;
t61 = -pkin(5) * t335 - t76;
t54 = t138 + (pkin(5) * t181 - t129) * t218 - t368 * t180;
t40 = -t160 * t218 + t265;
t39 = t163 * t290 - t265;
t38 = -t160 * t215 - t266;
t37 = t163 * t291 + t266;
t28 = (qJ(5) * t136 - qJD(5) * t181) * t218 + t225;
t23 = -t137 * pkin(4) - t25;
t19 = t269 * t136 + (qJD(6) * t215 + (qJ(6) * qJD(4) - qJD(5)) * t218) * t181 + t225;
t8 = -pkin(5) * t253 - t20;
t6 = -pkin(5) * t252 - t180 * qJD(6) - t137 * t368 - t25;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t282, t321 * t394, t326, -0.2e1 * t282, -t327, 0, -pkin(7) * t326 + t217 * t294, pkin(7) * t327 + t219 * t294, 0, 0, -t169 * t136 - t181 * t395, -t181 * t124 + t136 * t167 - t169 * t137 + t180 * t395, -t136 * t314, t137 * t167 + t348, -t137 * t314, 0, t206 * t124 + t190 * t137 - t100 * t314 + (qJD(1) * t180 + t167) * t309, pkin(2) * t181 * t296 - t190 * t136 + t169 * t309 - t206 * t395 - t314 * t99, t100 * t169 - t148 * t124 + t130 * t136 - t131 * t137 - t99 * t167 - t87 * t180 + t88 * t181 + t380 * t395, -t130 * t100 + t131 * t99 + t87 * t148 + 0.2e1 * t190 * t309 - t360, t26, t222, -t378, t27, -t15, t62, t100 * t143 + t114 * t253 + t94 * t124 - t70 * t137 + t25 * t163 - t180 * t288 + t335 * t88 - t380 * t93, t100 * t145 - t114 * t252 - t95 * t124 - t71 * t137 - t24 * t163 + t180 * t289 + t334 * t88 + t380 * t92, -t24 * t143 - t25 * t145 + t94 * t92 - t95 * t93 + t274 * t136 + (t289 * t215 + t288 * t218 + (-t215 * t70 - t218 * t71) * qJD(4)) * t181, t100 * t114 + t24 * t71 - t25 * t70 - t288 * t94 - t289 * t95 - t360, t62, t378, t15, t26, t222, t27, t20 * t143 + t23 * t145 + t76 * t93 - t77 * t92 - t275 * t136 + (t13 * t218 + t215 * t7 + (-t215 * t57 + t218 * t58) * qJD(4)) * t181, t77 * t124 + t13 * t180 + t57 * t137 - t28 * t143 + t23 * t163 + t181 * t257 + t346 * t65 - t98 * t93, t65 * t345 - t76 * t124 - t58 * t137 - t28 * t145 - t20 * t163 - t7 * t180 + t98 * t92 + (t307 - t21) * t181, t13 * t77 + t20 * t58 + t22 * t98 + t23 * t57 + t28 * t65 + t7 * t76, t62, t15, -t378, t27, -t222, t26, -t8 * t143 + t6 * t145 - t54 * t92 - t61 * t93 + (t215 * t41 - t218 * t31) * t136 + (t2 * t218 - t215 * t4 + (-t215 * t31 - t218 * t41) * qJD(4)) * t181, t61 * t124 + t41 * t137 - t19 * t145 + t8 * t163 + t4 * t180 + t181 * t389 + t45 * t345 + t80 * t92, -t54 * t124 - t31 * t137 + t19 * t143 - t6 * t163 - t2 * t180 + t181 * t262 - t346 * t45 + t80 * t93, t19 * t45 + t2 * t54 + t31 * t6 + t4 * t61 + t41 * t8 + t5 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, t321 * t221, 0, t308, 0, 0, t221 * pkin(1) * t217, pkin(1) * t328, 0, 0, t336, t104, t102, -t336, 0, 0, t185 * t297 + t159 - t167 * t310 - t333 + t133 * t314 + (-qJD(3) * t174 - t314 * t367 - t175) * t216, t134 * t314 + (-t169 * t320 - t297 * t314) * pkin(2) + t226, -t124 * t374 + t395 * t311 + (t131 + t279) * t169 + (-t130 + t134 - t285) * t167, t130 * t133 - t131 * t134 + (-t190 * t320 - t375 * t88 + t216 * t87 + (-t130 * t216 + t131 * t375) * qJD(3)) * pkin(2), t251, -t11, t39, t250, t38, -t339, t279 * t143 + t163 * t388 + t205 * t93 + t267 * t215 + t260, -t205 * t92 + t267 * t218 + t279 * t145 + (t79 + t241) * t163 + t280, t79 * t143 + t78 * t145 + (-t271 - t204 * t93 + (t145 * t204 + t70) * qJD(4)) * t218 + (t270 - t204 * t92 + t288 + (t143 * t204 - t71) * qJD(4)) * t215 + t312, -t114 * t133 + t88 * t205 + t70 * t78 - t71 * t79 + (t114 * t216 + t304 * t71 + t305 * t70) * t367 + t232 * t204, -t339, t40, t37, t251, -t11, t250, -t63 * t143 - t64 * t145 + (t270 + t167 * t58 + (qJD(4) * t143 - t92) * t204) * t215 + (-t271 + t167 * t57 - t7 + (-t93 + t318) * t204) * t218 + t313, -t177 * t93 + t268 * t215 - t353 * t143 + (-t64 + t240) * t163 + t284, t177 * t92 - t363 + t268 * t218 - t353 * t145 + (t63 - t241) * t163 + t390, t22 * t177 - t57 * t64 - t58 * t63 + t353 * t65 + (-t304 * t58 + t305 * t57) * t367 + t233 * t204, -t339, t37, t39, t250, t11, t251, -t143 * t355 + t145 * t354 - t178 * t92 - t179 * t93 + t236, t179 * t124 - t145 * t357 + t155 * t92 + t163 * t355 + t243, -t178 * t124 + t143 * t357 + t155 * t93 - t163 * t354 + t244, t5 * t155 + t2 * t178 + t4 * t179 + t31 * t354 + t355 * t41 + t357 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t104, t102, -t336, 0, 0, t131 * qJD(2) - t293 - t333, t130 * t314 + t226, 0, 0, t251, -t11, t39, t250, t38, -t339, -pkin(3) * t93 + t114 * t338 - t131 * t143 - t84 * t163 + t260 - t392, pkin(3) * t92 + t114 * t337 - t131 * t145 + t85 * t163 + t280 + t393, t85 * t143 + t84 * t145 + t229 + t239 + t312, -t88 * pkin(3) + pkin(9) * t232 - t114 * t131 + t70 * t84 - t71 * t85, -t339, t40, t37, t251, -t11, t250, -t67 * t143 - t68 * t145 + t167 * t275 + t229 + t313 - t369, -t143 * t352 - t68 * t163 - t189 * t93 + t284 - t307 + t392, -t145 * t352 + t67 * t163 + t189 * t92 + t257 + t390 - t393, pkin(9) * t233 + t22 * t189 + t352 * t65 - t57 * t68 - t58 * t67, -t339, t37, t39, t250, t11, t251, -t143 * t351 + t145 * t350 - t191 * t92 - t193 * t93 + t236, t193 * t124 - t145 * t356 + t163 * t351 + t173 * t92 + t243, -t191 * t124 + t143 * t356 - t163 * t350 + t173 * t93 + t244, t5 * t173 + t2 * t191 + t4 * t193 + t31 * t350 + t351 * t41 + t356 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t299, -t248, -t344, -t56, t124, -t114 * t145 + t256, t114 * t143 - t163 * t70 + t289, 0, 0, t124, t248, t56, t344, -t299, -t344, pkin(4) * t92 - t366 + (-t58 - t71) * t145 + (t57 - t324) * t143, t101 * t143 - t256 + t364 - 0.2e1 * t372, t101 * t145 - t65 * t143 + t163 * t324 + t120 - t7, -pkin(4) * t13 - qJ(5) * t7 - t101 * t65 - t324 * t58 - t57 * t71, t124, t56, -t248, -t344, t299, t344, -t366 + t368 * t92 + (t41 + t323) * t145 + (t31 - t325) * t143, t145 * t74 + t163 * t261 + 0.2e1 * t120 + 0.2e1 * t156 + t247, -t74 * t143 - t362 + (0.2e1 * qJD(6) + t47) * t163 + 0.2e1 * t396 - t259, t4 * qJ(5) - t2 * t368 + t31 * t323 + t325 * t41 - t45 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, t124 - t344, t381, t163 * t58 + t13 + t364, 0, 0, 0, 0, 0, 0, -t248, t381, -t169 * t314 + t344, t362 + (-qJD(6) - t41) * t163 + t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, t124 + t344, -t141 - t160, t163 * t31 + t247 + t383;];
tauc_reg  = t1;
