% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:31:57
% EndTime: 2019-03-09 08:32:07
% DurationCPUTime: 3.90s
% Computational Cost: add. (5907->396), mult. (14763->499), div. (0->0), fcn. (10444->6), ass. (0->226)
t164 = sin(pkin(9));
t165 = cos(pkin(9));
t169 = cos(qJ(2));
t230 = t165 * t169;
t209 = qJD(1) * t230;
t167 = sin(qJ(2));
t221 = qJD(1) * t167;
t127 = t164 * t221 - t209;
t166 = sin(qJ(5));
t168 = cos(qJ(5));
t102 = qJD(2) * t166 - t168 * t127;
t140 = t164 * t169 + t165 * t167;
t180 = qJD(1) * t140;
t280 = qJD(5) + t180;
t283 = t102 * t280;
t129 = t140 * qJD(2);
t176 = qJD(1) * t129;
t217 = qJD(5) * t168;
t218 = qJD(5) * t166;
t79 = qJD(2) * t218 - t127 * t217 - t166 * t176;
t286 = -t79 + t283;
t285 = t79 + t283;
t104 = qJD(2) * t168 + t127 * t166;
t282 = t104 * t280;
t80 = t104 * qJD(5) - t168 * t176;
t41 = -t80 + t282;
t157 = -pkin(2) * t169 - pkin(1);
t222 = qJD(1) * t157;
t145 = qJD(3) + t222;
t175 = -qJ(4) * t180 + t145;
t264 = pkin(3) + pkin(8);
t57 = t264 * t127 + t175;
t258 = -qJ(3) - pkin(7);
t147 = t258 * t169;
t143 = qJD(1) * t147;
t133 = t164 * t143;
t146 = t258 * t167;
t142 = qJD(1) * t146;
t138 = qJD(2) * pkin(2) + t142;
t94 = t138 * t165 + t133;
t192 = qJD(4) - t94;
t261 = pkin(4) * t180;
t62 = -t264 * qJD(2) + t192 + t261;
t24 = t166 * t62 + t168 * t57;
t17 = -qJ(6) * t102 + t24;
t284 = t280 * t17;
t212 = qJD(1) * qJD(2);
t208 = t167 * t212;
t148 = t164 * t208;
t207 = t169 * t212;
t119 = t165 * t207 - t148;
t153 = pkin(2) * t208;
t201 = -t119 * qJ(4) + t153;
t215 = t180 * qJD(4);
t43 = t140 * t212 * t264 + t201 - t215;
t206 = qJD(2) * t258;
t122 = qJD(3) * t169 + t167 * t206;
t114 = t122 * qJD(1);
t123 = -qJD(3) * t167 + t169 * t206;
t115 = t123 * qJD(1);
t75 = t114 * t164 - t165 * t115;
t51 = pkin(4) * t119 + t75;
t7 = -qJD(5) * t24 - t166 * t43 + t168 * t51;
t269 = t24 * t280 + t7;
t205 = -t166 * t51 - t168 * t43 - t62 * t217 + t57 * t218;
t23 = -t166 * t57 + t168 * t62;
t189 = -t23 * t280 - t205;
t16 = -qJ(6) * t104 + t23;
t15 = pkin(5) * t280 + t16;
t186 = qJ(6) * t80 + t205;
t2 = -qJD(6) * t102 - t186;
t270 = t15 * t280 - t2;
t172 = qJ(6) * t79 + t7;
t260 = pkin(5) * t119;
t1 = -qJD(6) * t104 + t172 + t260;
t271 = t1 + t284;
t281 = -t166 * t270 + t168 * t271;
t113 = t168 * t119;
t199 = t166 * t280;
t184 = -t199 * t280 + t113;
t279 = -0.2e1 * t212;
t219 = qJD(2) * t167;
t132 = qJD(2) * t230 - t164 * t219;
t96 = t119 * t140;
t277 = t132 * t180 + t96;
t198 = t168 * t280;
t98 = t142 * t165 + t133;
t275 = qJD(4) - t98;
t274 = 0.2e1 * t180;
t126 = t180 ^ 2;
t265 = t127 ^ 2;
t273 = -t265 - t126;
t272 = -t265 + t126;
t177 = qJD(2) * t180;
t156 = -pkin(2) * t165 - pkin(3);
t152 = -pkin(8) + t156;
t262 = pkin(4) * t127;
t231 = t165 * t143;
t95 = t164 * t138 - t231;
t91 = -qJD(2) * qJ(4) - t95;
t68 = -t91 - t262;
t268 = t119 * t152 + t280 * t68;
t267 = qJD(2) * (-t127 + t209) - t148;
t266 = t104 ^ 2;
t263 = pkin(2) * t167;
t99 = -t165 * t146 - t147 * t164;
t259 = t75 * t99;
t257 = t15 - t16;
t158 = pkin(2) * t221;
t200 = qJ(4) * t127 + t158;
t63 = t180 * t264 + t200;
t97 = t142 * t164 - t231;
t77 = t97 - t262;
t34 = t166 * t77 + t168 * t63;
t139 = t164 * t167 - t230;
t187 = -qJ(4) * t140 + t157;
t74 = t264 * t139 + t187;
t88 = pkin(4) * t140 + t99;
t38 = t166 * t88 + t168 * t74;
t82 = pkin(3) * t127 + t175;
t256 = t180 * t82;
t160 = qJD(2) * qJD(4);
t76 = t165 * t114 + t164 * t115;
t70 = -t160 - t76;
t48 = -pkin(4) * t176 - t70;
t27 = t80 * pkin(5) + t48;
t255 = t166 * t27;
t254 = t166 * t48;
t253 = t166 * t80;
t252 = t168 * t27;
t251 = t168 * t48;
t250 = t168 * t79;
t216 = qJD(6) * t168;
t226 = qJ(6) - t152;
t246 = qJ(6) * t180;
t72 = t168 * t77;
t249 = t226 * t218 - t216 + pkin(5) * t127 - t72 - (-t63 - t246) * t166;
t137 = t226 * t168;
t248 = -qJD(5) * t137 - qJD(6) * t166 - t168 * t246 - t34;
t210 = -pkin(5) * t168 - pkin(4);
t247 = pkin(5) * t217 - t180 * t210 + t275;
t244 = t102 * t127;
t243 = t104 * t102;
t241 = t104 * t127;
t239 = t280 * t127;
t238 = t127 * t129;
t237 = t127 * t180;
t236 = t129 * t166;
t235 = t129 * t168;
t233 = t139 * t166;
t232 = t139 * t168;
t171 = qJD(1) ^ 2;
t229 = t169 * t171;
t170 = qJD(2) ^ 2;
t228 = t170 * t167;
t227 = t170 * t169;
t224 = t261 + t275;
t223 = t167 ^ 2 - t169 ^ 2;
t220 = qJD(2) * t129;
t214 = t132 * qJD(2);
t159 = pkin(2) * t219;
t211 = t167 * t229;
t154 = pkin(2) * t164 + qJ(4);
t204 = -pkin(5) * t102 - qJD(6);
t203 = -qJ(6) * t139 - t74;
t202 = pkin(1) * t279;
t86 = t122 * t164 - t165 * t123;
t195 = t167 * t207;
t194 = qJD(2) * t98 - t76;
t188 = -t166 * t23 + t168 * t24;
t87 = t122 * t165 + t123 * t164;
t100 = t146 * t164 - t147 * t165;
t185 = -qJD(2) * t97 + t75;
t181 = -qJ(4) * t132 - qJD(4) * t140 + t159;
t47 = t264 * t129 + t181;
t64 = pkin(4) * t132 + t86;
t11 = t166 * t64 + t168 * t47 + t88 * t217 - t74 * t218;
t183 = t139 * t217 + t236;
t182 = t139 * t218 - t235;
t65 = -pkin(4) * t129 + t87;
t179 = -t119 * t139 - t132 * t127 - t129 * t180;
t178 = -t119 * t166 - t198 * t280;
t92 = -t148 + (t127 + t209) * qJD(2);
t174 = t99 * t119 - t87 * t127 + t75 * t140 + t180 * t86;
t173 = pkin(3) * t177 + t201;
t144 = pkin(5) * t166 + t154;
t136 = t226 * t166;
t101 = t102 ^ 2;
t93 = pkin(3) * t139 + t187;
t90 = -qJD(2) * pkin(3) + t192;
t89 = -pkin(4) * t139 + t100;
t85 = pkin(3) * t180 + t200;
t84 = t168 * t88;
t73 = t168 * t80;
t67 = pkin(3) * t129 + t181;
t66 = t210 * t139 + t100;
t61 = t168 * t64;
t55 = t173 - t215;
t54 = t132 * t280 + t96;
t46 = -t101 + t266;
t44 = -t204 + t68;
t39 = pkin(5) * t182 + t65;
t37 = -t166 * t74 + t84;
t36 = -qJD(2) * t104 + t178;
t35 = -qJD(2) * t102 + t184;
t33 = -t166 * t63 + t72;
t32 = qJ(6) * t232 + t38;
t31 = t178 - t244;
t30 = t178 + t244;
t29 = t241 - t184;
t28 = t184 + t241;
t26 = t168 * t283 + t253;
t25 = -t104 * t199 - t250;
t22 = pkin(5) * t140 + t203 * t166 + t84;
t20 = t102 * t182 - t80 * t232;
t19 = t104 * t183 - t79 * t233;
t14 = t104 * t132 + t119 * t233 - t140 * t79 + t183 * t280;
t13 = -t102 * t132 + t139 * t113 - t140 * t80 - t182 * t280;
t12 = -t38 * qJD(5) - t166 * t47 + t61;
t10 = t166 * t41 - t168 * t286;
t9 = -t104 * t198 + t166 * t285 - t73;
t8 = t166 * t286 + t168 * t282 - t73;
t5 = -qJ(6) * t182 + t139 * t216 + t11;
t4 = (-t102 * t166 + t104 * t168) * t129 + (-t253 - t250 + (-t102 * t168 - t104 * t166) * qJD(5)) * t139;
t3 = pkin(5) * t132 + t61 + t203 * t217 + (-qJ(6) * t129 - qJD(5) * t88 - qJD(6) * t139 - t47) * t166;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t195, t223 * t279, t227, -0.2e1 * t195, -t228, 0, -pkin(7) * t227 + t167 * t202, pkin(7) * t228 + t169 * t202, 0, 0, t277, -t140 * t177 + t179, t214, t139 * t177 + t238, -t220, 0, t145 * t129 + (t127 * t263 - t86 + (t139 * t263 + t157 * t140) * qJD(1)) * qJD(2), t119 * t157 + t132 * t145 + (t263 * t274 - t87) * qJD(2), -t100 * t177 - t95 * t129 - t94 * t132 - t76 * t139 + t174, t100 * t76 + t259 - t86 * t94 + t87 * t95 + (t145 + t222) * t159, 0, -t214, t220, t277, -t140 * t176 + t179, t139 * t176 + t238, -t100 * t176 + t91 * t129 + t90 * t132 + t70 * t139 + t174, -t67 * t127 - t82 * t129 - t55 * t139 + (-t180 * t93 + t86) * qJD(2), qJD(2) * t87 - t119 * t93 - t132 * t82 - t140 * t55 - t180 * t67, -t100 * t70 + t55 * t93 + t67 * t82 + t86 * t90 - t87 * t91 + t259, t19, t4, t14, t20, t13, t54, -t68 * t235 + t102 * t65 + t119 * t37 + t12 * t280 + t132 * t23 + t140 * t7 + t80 * t89 + (t68 * t218 - t251) * t139, t68 * t236 + t104 * t65 - t11 * t280 - t119 * t38 - t132 * t24 + t140 * t205 - t79 * t89 + (t68 * t217 + t254) * t139, -t102 * t11 - t104 * t12 + t37 * t79 - t38 * t80 + t188 * t129 + (-t166 * t7 - t168 * t205 + (-t166 * t24 - t168 * t23) * qJD(5)) * t139, t11 * t24 + t12 * t23 - t205 * t38 + t37 * t7 + t48 * t89 + t65 * t68, t19, t4, t14, t20, t13, t54, -t44 * t235 + t1 * t140 + t102 * t39 + t119 * t22 + t280 * t3 + t132 * t15 + t66 * t80 + (t44 * t218 - t252) * t139, t44 * t236 + t104 * t39 - t119 * t32 - t280 * t5 - t132 * t17 - t140 * t2 - t66 * t79 + (t44 * t217 + t255) * t139, -t102 * t5 - t104 * t3 + t22 * t79 - t32 * t80 + (-t15 * t166 + t168 * t17) * t129 + (-t1 * t166 + t168 * t2 + (-t15 * t168 - t166 * t17) * qJD(5)) * t139, t1 * t22 + t15 * t3 + t17 * t5 + t2 * t32 + t27 * t66 + t39 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t223 * t171, 0, t211, 0, 0, t171 * pkin(1) * t167, pkin(1) * t229, 0, 0, t237, t272, t92, -t237, 0, 0, -t127 * t158 - t145 * t180 - t185, t127 * t145 - t158 * t180 + t194 (t95 - t97) * t180 + (t98 - t94) * t127 + (-t165 * t119 - t164 * t177) * pkin(2), t94 * t97 - t95 * t98 + (-t145 * t221 + t164 * t76 - t165 * t75) * pkin(2), 0, -t92, 0, t237, t272, -t237, t156 * t119 + (-t91 - t97) * t180 - t154 * t176 + (t90 - t275) * t127, t127 * t85 + t185 + t256, -t127 * t82 + t180 * t85 + 0.2e1 * t160 - t194, -t154 * t70 + t156 * t75 - t275 * t91 - t82 * t85 - t90 * t97, t25, t9, t28, t26, t31, t239, t127 * t23 + t154 * t80 + t254 + (-t152 * t218 - t33) * t280 + t224 * t102 + t268 * t168, -t127 * t24 - t154 * t79 + t251 + (-t152 * t217 + t34) * t280 + t224 * t104 - t268 * t166, t102 * t34 + t104 * t33 + (-t180 * t24 + t152 * t79 - t7 + (-t102 * t152 - t24) * qJD(5)) * t168 + (t180 * t23 - t152 * t80 + t205 + (t104 * t152 + t23) * qJD(5)) * t166, t154 * t48 - t23 * t33 - t24 * t34 + t224 * t68 + (qJD(5) * t188 - t166 * t205 + t168 * t7) * t152, t25, t9, t28, t26, t31, t239, t247 * t102 - t119 * t137 + t127 * t15 + t144 * t80 + t198 * t44 + t249 * t280 + t255, t247 * t104 + t119 * t136 - t127 * t17 - t144 * t79 - t44 * t199 - t248 * t280 + t252, -t248 * t102 - t249 * t104 + t136 * t80 - t137 * t79 - t281, -t1 * t137 - t136 * t2 + t144 * t27 + t249 * t15 + t248 * t17 + t247 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274 * qJD(2), t267, t273, t127 * t95 + t180 * t94 + t153, 0, 0, 0, 0, 0, 0, t273, -0.2e1 * t177, -t267, -t91 * t127 + (-qJD(4) - t90) * t180 + t173, 0, 0, 0, 0, 0, 0, t30, t29, t8, t127 * t68 - t166 * t269 + t189 * t168, 0, 0, 0, 0, 0, 0, t30, t29, t8, t127 * t44 - t166 * t271 - t168 * t270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t237, -t126 - t170, qJD(2) * t91 + t256 + t75, 0, 0, 0, 0, 0, 0, t35, t36, t10, -qJD(2) * t68 + t189 * t166 + t168 * t269, 0, 0, 0, 0, 0, 0, t35, t36, t10, -qJD(2) * t44 + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, t46, t286, -t243, t41, t119, -t104 * t68 + t269, t102 * t68 - t189, 0, 0, t243, t46, t286, -t243, t41, t119, 0.2e1 * t260 + t284 + (t204 - t44) * t104 + t172, -pkin(5) * t266 + t280 * t16 + (qJD(6) + t44) * t102 + t186, t79 * pkin(5) - t257 * t102, t257 * t17 + (-t104 * t44 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80 + t282, -t285, -t101 - t266, t17 * t102 + t15 * t104 + t27;];
tauc_reg  = t6;
