% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPPRP2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP2_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP2_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRP2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRP2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP2_invdynJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:32:04
% EndTime: 2019-03-09 08:32:14
% DurationCPUTime: 6.04s
% Computational Cost: add. (7568->557), mult. (17274->648), div. (0->0), fcn. (12432->10), ass. (0->287)
t191 = sin(pkin(9));
t192 = cos(pkin(9));
t199 = cos(qJ(2));
t296 = t192 * t199;
t265 = qJD(1) * t296;
t196 = sin(qJ(2));
t284 = qJD(1) * t196;
t134 = t191 * t284 - t265;
t195 = sin(qJ(5));
t198 = cos(qJ(5));
t113 = qJD(2) * t195 - t198 * t134;
t147 = t191 * t199 + t192 * t196;
t354 = t147 * qJD(1);
t364 = qJD(5) + t354;
t369 = t113 * t364;
t136 = t147 * qJD(2);
t271 = t199 * qJDD(1);
t165 = t192 * t271;
t272 = t196 * qJDD(1);
t237 = t191 * t272 - t165;
t207 = qJD(1) * t136 + t237;
t281 = qJD(5) * t198;
t282 = qJD(5) * t195;
t59 = qJD(2) * t282 - t198 * qJDD(2) - t134 * t281 - t195 * t207;
t374 = -t59 + t369;
t373 = t59 + t369;
t115 = qJD(2) * t198 + t134 * t195;
t368 = t115 * t364;
t60 = qJD(5) * t115 + t195 * qJDD(2) - t198 * t207;
t44 = -t60 + t368;
t329 = t199 * pkin(2);
t178 = pkin(1) + t329;
t152 = -qJD(1) * t178 + qJD(3);
t215 = -qJ(4) * t354 + t152;
t343 = pkin(3) + pkin(8);
t64 = t343 * t134 + t215;
t327 = qJ(3) + pkin(7);
t154 = t327 * t199;
t150 = qJD(1) * t154;
t140 = t191 * t150;
t153 = t327 * t196;
t149 = qJD(1) * t153;
t145 = qJD(2) * pkin(2) - t149;
t104 = t192 * t145 - t140;
t241 = qJD(4) - t104;
t330 = t354 * pkin(4);
t69 = -t343 * qJD(2) + t241 + t330;
t33 = t195 * t69 + t198 * t64;
t20 = -qJ(6) * t113 + t33;
t372 = t20 * t364;
t32 = -t195 * t64 + t198 * t69;
t371 = t32 * t364;
t370 = t33 * t364;
t185 = qJ(2) + pkin(9);
t182 = cos(t185);
t174 = g(3) * t182;
t181 = sin(t185);
t200 = cos(qJ(1));
t302 = t181 * t200;
t197 = sin(qJ(1));
t334 = g(2) * t197;
t266 = -g(1) * t302 - t181 * t334 + t174;
t19 = -qJ(6) * t115 + t32;
t16 = pkin(5) * t364 + t19;
t274 = qJD(1) * qJD(2);
t264 = t196 * t274;
t217 = qJDD(1) * t147 - t191 * t264;
t263 = t199 * t274;
t106 = t192 * t263 + t217;
t270 = pkin(2) * t264 + qJDD(3);
t235 = -t106 * qJ(4) + t270;
t278 = t354 * qJD(4);
t298 = t191 * t196;
t363 = qJDD(1) * t178;
t25 = -t363 + t235 - t278 + (t298 * qJDD(1) + t274 * t147 - t165) * t343;
t261 = qJD(2) * t327;
t130 = -t196 * qJD(3) - t199 * t261;
t101 = qJDD(2) * pkin(2) + qJD(1) * t130 - qJDD(1) * t153;
t129 = t199 * qJD(3) - t196 * t261;
t107 = qJD(1) * t129 + qJDD(1) * t154;
t325 = -t192 * t101 + t191 * t107;
t267 = qJDD(4) + t325;
t38 = t106 * pkin(4) - t343 * qJDD(2) + t267;
t3 = t195 * t38 + t198 * t25 + t69 * t281 - t64 * t282;
t322 = t60 * qJ(6);
t2 = -qJD(6) * t113 + t3 - t322;
t350 = t16 * t364 - t2;
t323 = t59 * qJ(6);
t102 = qJDD(5) + t106;
t331 = t102 * pkin(5);
t4 = -qJD(5) * t33 - t195 * t25 + t198 * t38;
t1 = -t115 * qJD(6) + t323 + t331 + t4;
t351 = t1 + t372;
t367 = -t195 * t350 + t198 * t351 + t266;
t257 = t195 * t364;
t95 = t198 * t102;
t227 = -t257 * t364 + t95;
t355 = t354 * qJD(2);
t366 = -t237 - 0.2e1 * t355;
t109 = -t192 * t149 - t140;
t358 = -g(1) * t200 - t334;
t216 = -g(3) * t181 + t182 * t358;
t365 = t109 * qJD(2) - t216;
t256 = t198 * t364;
t360 = -t182 * pkin(3) - t181 * qJ(4);
t359 = g(1) * t197 - g(2) * t200;
t133 = t354 ^ 2;
t344 = t134 ^ 2;
t357 = -t344 - t133;
t356 = -t344 + t133;
t353 = qJD(4) - t109;
t291 = t198 * t200;
t294 = t195 * t197;
t125 = t181 * t291 - t294;
t292 = t197 * t198;
t293 = t195 * t200;
t127 = t181 * t292 + t293;
t352 = -g(1) * t125 - g(2) * t127 + t198 * t174;
t349 = t4 + t370;
t176 = -pkin(2) * t192 - pkin(3);
t169 = -pkin(8) + t176;
t341 = pkin(4) * t134;
t297 = t192 * t150;
t105 = t191 * t145 + t297;
t96 = -qJD(2) * qJ(4) - t105;
t75 = -t96 - t341;
t348 = t102 * t169 + t364 * t75;
t111 = -t191 * t153 + t192 * t154;
t347 = -t111 * qJDD(2) - t181 * t359;
t346 = qJD(2) * (-t134 + t265) + t217;
t345 = t115 ^ 2;
t342 = pkin(2) * t196;
t340 = pkin(5) * t195;
t339 = pkin(8) * t182;
t332 = g(3) * t199;
t328 = pkin(4) + t327;
t326 = -t19 + t16;
t258 = pkin(2) * t284 + t134 * qJ(4);
t70 = t343 * t354 + t258;
t108 = -t149 * t191 + t297;
t81 = t108 - t341;
t42 = t195 * t81 + t198 * t70;
t146 = -t296 + t298;
t231 = -t147 * qJ(4) - t178;
t80 = t343 * t146 + t231;
t110 = t192 * t153 + t154 * t191;
t90 = pkin(4) * t147 + t110;
t47 = t195 * t90 + t198 * t80;
t324 = t198 * t59;
t321 = t60 * t195;
t55 = t191 * t101 + t192 * t107;
t277 = t198 * qJD(6);
t289 = qJ(6) - t169;
t316 = qJ(6) * t354;
t78 = t198 * t81;
t320 = t282 * t289 - t277 + t134 * pkin(5) - t78 - (-t70 - t316) * t195;
t144 = t289 * t198;
t319 = -qJD(5) * t144 - t195 * qJD(6) - t198 * t316 - t42;
t177 = pkin(5) * t198 + pkin(4);
t318 = pkin(5) * t281 + t177 * t354 + t353;
t317 = pkin(7) * qJDD(1);
t315 = qJDD(2) * pkin(3);
t312 = t115 * t113;
t310 = t115 * t134;
t309 = t364 * t134;
t308 = t134 * t113;
t307 = t134 * t136;
t306 = t134 * t354;
t305 = t136 * t195;
t304 = t136 * t198;
t303 = t146 * t198;
t301 = t182 * t195;
t300 = t182 * t197;
t299 = t182 * t200;
t295 = t195 * t102;
t290 = t200 * t327;
t288 = t330 + t353;
t287 = t177 + t327;
t189 = t196 ^ 2;
t190 = t199 ^ 2;
t286 = t189 - t190;
t285 = t189 + t190;
t283 = qJD(2) * t196;
t280 = t108 * qJD(2);
t180 = pkin(2) * t283;
t269 = qJDD(2) * qJ(4) + t55;
t202 = qJD(1) ^ 2;
t268 = t196 * t202 * t199;
t172 = pkin(2) * t191 + qJ(4);
t260 = -pkin(5) * t113 - qJD(6);
t259 = -qJ(6) * t146 - t80;
t88 = t129 * t191 - t192 * t130;
t187 = qJD(2) * qJD(4);
t51 = -t187 - t269;
t164 = t200 * t178;
t252 = g(2) * (pkin(3) * t299 + qJ(4) * t302 + t164);
t251 = t196 * t263;
t250 = -g(1) * t300 + g(2) * t299;
t249 = t329 - t360;
t248 = -pkin(3) * t181 - t342;
t247 = g(1) * t127 - g(2) * t125;
t126 = t181 * t293 + t292;
t128 = -t181 * t294 + t291;
t246 = -g(1) * t128 - g(2) * t126;
t243 = -t266 - t325;
t238 = t3 - t371;
t236 = -t195 * t32 + t198 * t33;
t139 = qJD(2) * t296 - t191 * t283;
t234 = t106 * t147 + t139 * t354;
t89 = t192 * t129 + t191 * t130;
t233 = qJD(2) * t136 + qJDD(2) * t146;
t232 = qJD(2) * t139 + qJDD(2) * t147;
t193 = -qJ(6) - pkin(8);
t230 = t181 * t340 - t182 * t193;
t229 = -t192 * t264 + t165;
t228 = -t178 + t360;
t226 = -0.2e1 * pkin(1) * t274 - pkin(7) * qJDD(2);
t223 = -t139 * qJ(4) - t147 * qJD(4) + t180;
t57 = t343 * t136 + t223;
t71 = pkin(4) * t139 + t88;
t13 = t195 * t71 + t198 * t57 + t90 * t281 - t282 * t80;
t225 = t146 * t281 + t305;
t224 = t146 * t282 - t304;
t221 = -t110 * qJDD(2) - t250;
t72 = -t136 * pkin(4) + t89;
t123 = t270 - t363;
t220 = -t106 * t146 - t139 * t134 - t136 * t354;
t219 = -t256 * t364 - t295;
t84 = t134 * pkin(3) + t215;
t218 = t354 * t84 + qJDD(4) - t243;
t201 = qJD(2) ^ 2;
t213 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t201 + t359;
t212 = pkin(1) * t202 - t317 - t358;
t39 = -pkin(4) * t207 - t51;
t15 = t60 * pkin(5) + qJDD(6) + t39;
t211 = t15 + t216;
t210 = g(1) * t126 - g(2) * t128 - g(3) * t301 - t3;
t209 = t110 * t106 - t89 * t134 + t354 * t88 + t358;
t208 = -t237 - t355;
t206 = -qJD(5) * t169 * t364 + t216 + t39;
t79 = (t134 + t265) * qJD(2) + t217;
t205 = t4 + t352;
t204 = (pkin(3) * t298 - t178) * qJDD(1) - (-t191 * t263 + t229) * pkin(3) + t235;
t157 = qJ(4) * t299;
t155 = qJ(4) * t300;
t151 = t172 + t340;
t143 = t289 * t195;
t112 = t113 ^ 2;
t103 = pkin(3) * t146 + t231;
t92 = -qJD(2) * pkin(3) + t241;
t91 = -pkin(4) * t146 + t111;
t87 = pkin(3) * t354 + t258;
t86 = t198 * t90;
t74 = pkin(3) * t136 + t223;
t73 = -t146 * t177 + t111;
t68 = t198 * t71;
t58 = t198 * t60;
t56 = -t112 + t345;
t52 = t267 - t315;
t50 = -t260 + t75;
t49 = t102 * t147 + t139 * t364;
t48 = pkin(5) * t224 + t72;
t46 = -t195 * t80 + t86;
t45 = t204 - t278;
t41 = -t195 * t70 + t78;
t40 = qJ(6) * t303 + t47;
t35 = -qJD(2) * t115 + t219;
t34 = -qJD(2) * t113 + t227;
t31 = t147 * pkin(5) + t195 * t259 + t86;
t29 = t219 - t308;
t28 = t219 + t308;
t27 = t310 - t227;
t26 = t227 + t310;
t24 = t198 * t369 + t321;
t23 = -t115 * t257 - t324;
t18 = t113 * t224 - t303 * t60;
t17 = -t59 * t195 * t146 + t115 * t225;
t14 = -qJD(5) * t47 - t195 * t57 + t68;
t12 = t115 * t139 + t146 * t295 - t59 * t147 + t225 * t364;
t11 = -t113 * t139 + t146 * t95 - t60 * t147 - t224 * t364;
t10 = t44 * t195 - t198 * t374;
t9 = -t115 * t256 + t373 * t195 - t58;
t8 = t195 * t374 + t198 * t368 - t58;
t7 = -qJ(6) * t224 + t146 * t277 + t13;
t6 = t139 * pkin(5) + t68 + t259 * t281 + (-qJ(6) * t136 - qJD(5) * t90 - qJD(6) * t146 - t57) * t195;
t5 = (-t113 * t195 + t115 * t198) * t136 + (-t321 - t324 + (-t113 * t198 - t115 * t195) * qJD(5)) * t146;
t21 = [0, 0, 0, 0, 0, qJDD(1), t359, -t358, 0, 0, qJDD(1) * t189 + 0.2e1 * t251, 0.2e1 * t196 * t271 - 0.2e1 * t274 * t286, qJDD(2) * t196 + t199 * t201, qJDD(1) * t190 - 0.2e1 * t251, qJDD(2) * t199 - t196 * t201, 0, t196 * t226 + t199 * t213, -t196 * t213 + t199 * t226, 0.2e1 * t285 * t317 + t358, -g(1) * (-pkin(1) * t197 + pkin(7) * t200) - g(2) * (pkin(1) * t200 + pkin(7) * t197) + (pkin(7) ^ 2 * t285 + pkin(1) ^ 2) * qJDD(1), t234, t147 * t208 + t220, t232, -t146 * t208 + t307, -t233, 0, -t178 * t237 + t123 * t146 + t152 * t136 + (t134 * t342 - t178 * t354 - t88) * qJD(2) + t221, -t178 * t106 + t123 * t147 + t152 * t139 + (t342 * t354 - t89) * qJD(2) + t347, -t104 * t139 - t105 * t136 + t111 * t208 - t55 * t146 + t147 * t325 + t209, t55 * t111 + t105 * t89 + t325 * t110 - t104 * t88 - t123 * t178 + t152 * t180 - g(1) * (-t197 * t178 + t290) - g(2) * (t197 * t327 + t164) 0, -t232, t233, t234, -t147 * t207 + t220, t146 * t207 + t307, -t111 * t207 + t96 * t136 + t92 * t139 + t51 * t146 + t52 * t147 + t209, -t74 * t134 - t103 * t237 - t45 * t146 - t84 * t136 + (-t103 * t354 + t88) * qJD(2) - t221, t89 * qJD(2) - t103 * t106 - t84 * t139 - t45 * t147 - t354 * t74 - t347, t45 * t103 + t84 * t74 - t51 * t111 - t96 * t89 + t52 * t110 + t92 * t88 - g(1) * t290 - t252 + (-g(1) * t228 - g(2) * t327) * t197, t17, t5, t12, t18, t11, t49, -t75 * t304 + t46 * t102 + t72 * t113 + t14 * t364 + t32 * t139 + t4 * t147 + t91 * t60 + (-t39 * t198 + t282 * t75) * t146 + t246, t75 * t305 - t47 * t102 + t72 * t115 - t13 * t364 - t33 * t139 - t3 * t147 - t91 * t59 + (t39 * t195 + t281 * t75) * t146 + t247, -t13 * t113 - t14 * t115 + t46 * t59 - t47 * t60 + t236 * t136 + (-t4 * t195 + t3 * t198 + (-t195 * t33 - t198 * t32) * qJD(5)) * t146 - t250, t3 * t47 + t33 * t13 + t4 * t46 + t32 * t14 + t39 * t91 + t75 * t72 - t252 + (-g(1) * t328 - g(2) * t339) * t200 + (-g(1) * (t228 - t339) - g(2) * t328) * t197, t17, t5, t12, t18, t11, t49, -t50 * t304 + t1 * t147 + t31 * t102 + t48 * t113 + t6 * t364 + t16 * t139 + t73 * t60 + (-t15 * t198 + t282 * t50) * t146 + t246, t50 * t305 - t40 * t102 + t48 * t115 - t7 * t364 - t20 * t139 - t2 * t147 - t73 * t59 + (t15 * t195 + t281 * t50) * t146 + t247, -t7 * t113 - t6 * t115 + t31 * t59 - t40 * t60 + (-t16 * t195 + t198 * t20) * t136 + (-t1 * t195 + t2 * t198 + (-t16 * t198 - t195 * t20) * qJD(5)) * t146 - t250, t2 * t40 + t20 * t7 + t1 * t31 + t16 * t6 + t15 * t73 + t50 * t48 - t252 + (-g(1) * t287 - g(2) * t230) * t200 + (-g(1) * (t228 - t230) - g(2) * t287) * t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t286 * t202, t272, t268, t271, qJDD(2), t196 * t212 - t332, g(3) * t196 + t199 * t212, 0, 0, t306, t356, t79, -t306, -t237, qJDD(2), t280 - t152 * t354 + (qJDD(2) * t192 - t134 * t284) * pkin(2) + t243, t152 * t134 + (-qJDD(2) * t191 - t284 * t354) * pkin(2) - t55 + t365 (t105 - t108) * t354 + (t109 - t104) * t134 + (-t192 * t106 + ((-t263 - t272) * t191 + t229) * t191) * pkin(2), t104 * t108 - t105 * t109 + (-t332 + t191 * t55 - t192 * t325 + (-qJD(1) * t152 - t358) * t196) * pkin(2), qJDD(2), -t79, t237, t306, t356, -t306, -t172 * t207 + t176 * t106 + (-t96 - t108) * t354 + (t92 - t353) * t134, -t280 + t87 * t134 + (-pkin(3) + t176) * qJDD(2) + t218, t172 * qJDD(2) - t84 * t134 + t354 * t87 + 0.2e1 * t187 + t269 - t365, -t51 * t172 + t52 * t176 - t84 * t87 - t92 * t108 - g(1) * (t200 * t248 + t157) - g(2) * (t197 * t248 + t155) - g(3) * t249 - t353 * t96, t23, t9, t26, t24, t29, t309, t288 * t113 + t32 * t134 + t172 * t60 + t206 * t195 + t198 * t348 - t364 * t41, t288 * t115 - t33 * t134 - t172 * t59 - t195 * t348 + t206 * t198 + t364 * t42, t42 * t113 + t41 * t115 + (-t354 * t33 + t169 * t59 - t4 + (-t113 * t169 - t33) * qJD(5)) * t198 + (t354 * t32 - t169 * t60 - t3 + (t115 * t169 + t32) * qJD(5)) * t195 - t266, t39 * t172 - t33 * t42 - t32 * t41 - g(1) * (-t200 * t342 + t157) - g(2) * (-t197 * t342 + t155) - g(3) * (t249 + t339) + t288 * t75 + (qJD(5) * t236 + t3 * t195 + t4 * t198) * t169 - t358 * t181 * t343, t23, t9, t26, t24, t29, t309, -t144 * t102 + t113 * t318 + t16 * t134 + t151 * t60 + t195 * t211 + t256 * t50 + t320 * t364, t143 * t102 + t115 * t318 - t20 * t134 - t151 * t59 + t198 * t211 - t257 * t50 - t319 * t364, -t319 * t113 - t320 * t115 + t143 * t60 - t144 * t59 - t367, -t2 * t143 - t1 * t144 + t15 * t151 - g(1) * t157 - g(2) * t155 - g(3) * (t230 + t249) + t318 * t50 + t319 * t20 + t320 * t16 + t358 * (pkin(5) * t301 - t342 + (-pkin(3) + t193) * t181); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, t346, t357, t104 * t354 + t105 * t134 + t123 - t359, 0, 0, 0, 0, 0, 0, t357, t366, -t346, -t96 * t134 + (-qJD(4) - t92) * t354 + t204 - t359, 0, 0, 0, 0, 0, 0, t28, t27, t8, t75 * t134 - t195 * t349 + t238 * t198 - t359, 0, 0, 0, 0, 0, 0, t28, t27, t8, t50 * t134 - t195 * t351 - t198 * t350 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, qJDD(2) - t306, -t133 - t201, qJD(2) * t96 + t218 - t315, 0, 0, 0, 0, 0, 0, t34, t35, t10, -t75 * qJD(2) + t238 * t195 + t198 * t349 + t266, 0, 0, 0, 0, 0, 0, t34, t35, t10, -t50 * qJD(2) + t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t56, t374, -t312, t44, t102, -t75 * t115 + t205 + t370, t113 * t75 + t210 + t371, 0, 0, t312, t56, t374, -t312, t44, t102, 0.2e1 * t331 + t323 + t372 + (t260 - t50) * t115 + t205, -t345 * pkin(5) + t322 + t19 * t364 + (qJD(6) + t50) * t113 + t210, t59 * pkin(5) - t326 * t113, t326 * t20 + (-t50 * t115 + t1 + t352) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60 + t368, -t373, -t112 - t345, t20 * t113 + t16 * t115 + t211;];
tau_reg  = t21;
