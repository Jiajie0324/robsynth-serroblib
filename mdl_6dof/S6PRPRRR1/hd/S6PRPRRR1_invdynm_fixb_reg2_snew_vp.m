% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRPRRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 00:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRPRRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 00:08:34
% EndTime: 2019-05-05 00:09:14
% DurationCPUTime: 42.95s
% Computational Cost: add. (328957->966), mult. (628881->1481), div. (0->0), fcn. (468082->14), ass. (0->683)
t1617 = cos(qJ(2));
t1613 = sin(qJ(2));
t1604 = sin(pkin(11));
t1607 = cos(pkin(11));
t1574 = g(1) * t1604 - t1607 * g(2);
t1605 = sin(pkin(6));
t1608 = cos(pkin(6));
t1750 = g(3) - qJDD(1);
t1639 = t1608 * t1574 - t1605 * t1750;
t1725 = t1607 * g(1) + t1604 * g(2);
t1484 = t1613 * t1639 - t1617 * t1725;
t1619 = qJD(2) ^ 2;
t1478 = -t1619 * pkin(2) + t1484;
t1603 = sin(pkin(12));
t1606 = cos(pkin(12));
t1483 = -t1613 * t1725 - t1617 * t1639;
t1622 = qJDD(2) * pkin(2) - t1483;
t1411 = t1603 * t1478 - t1606 * t1622;
t1412 = t1606 * t1478 + t1603 * t1622;
t1706 = t1411 * t1603 + t1606 * t1412;
t1307 = t1411 * t1606 - t1412 * t1603;
t1744 = t1307 * t1613;
t1776 = t1617 * t1706 + t1744;
t1743 = t1307 * t1617;
t1216 = -t1613 * t1706 + t1743;
t1610 = sin(qJ(6));
t1611 = sin(qJ(5));
t1612 = sin(qJ(4));
t1615 = cos(qJ(5));
t1616 = cos(qJ(4));
t1554 = (t1611 * t1616 + t1612 * t1615) * qJD(2);
t1614 = cos(qJ(6));
t1728 = qJD(4) + qJD(5);
t1517 = t1554 * t1610 - t1614 * t1728;
t1519 = t1614 * t1554 + t1610 * t1728;
t1458 = t1519 * t1517;
t1747 = qJD(2) * t1616;
t1589 = qJD(4) * t1747;
t1723 = t1612 * qJDD(2);
t1564 = t1589 + t1723;
t1748 = qJD(2) * t1612;
t1714 = qJD(4) * t1748;
t1722 = t1616 * qJDD(2);
t1642 = -t1714 + t1722;
t1704 = t1611 * t1564 - t1615 * t1642;
t1464 = -t1554 * qJD(5) - t1704;
t1460 = qJDD(6) - t1464;
t1758 = -t1458 + t1460;
t1775 = t1610 * t1758;
t1552 = t1611 * t1748 - t1615 * t1747;
t1507 = t1554 * t1552;
t1600 = qJDD(4) + qJDD(5);
t1757 = -t1507 + t1600;
t1774 = t1611 * t1757;
t1773 = t1614 * t1758;
t1772 = t1615 * t1757;
t1465 = -t1552 * qJD(5) + t1615 * t1564 + t1611 * t1642;
t1543 = t1728 * t1552;
t1771 = -t1543 + t1465;
t1539 = t1574 * t1605 + t1608 * t1750;
t1534 = -qJDD(3) + t1539;
t1567 = qJDD(2) * t1603 + t1606 * t1619;
t1482 = qJ(3) * t1567 - t1534 * t1606;
t1568 = qJDD(2) * t1606 - t1603 * t1619;
t1683 = -qJ(3) * t1568 - t1534 * t1603;
t1770 = t1482 * t1613 + t1617 * t1683;
t1769 = t1617 * t1482 - t1613 * t1683;
t1511 = t1567 * t1613 - t1568 * t1617;
t1647 = t1567 * t1617 + t1568 * t1613;
t1759 = t1647 * t1608;
t1768 = t1511 * t1607 + t1604 * t1759;
t1767 = t1511 * t1604 - t1607 * t1759;
t1721 = t1728 ^ 2;
t1766 = t1604 * t1750;
t1765 = t1607 * t1750;
t1760 = t1647 * t1605;
t1621 = -t1619 * pkin(3) + qJDD(2) * pkin(8) + t1412;
t1376 = -t1612 * t1534 + t1616 * t1621;
t1577 = qJD(4) * pkin(4) - pkin(9) * t1748;
t1756 = t1616 ^ 2;
t1596 = t1756 * t1619;
t1327 = -pkin(4) * t1596 + pkin(9) * t1642 - qJD(4) * t1577 + t1376;
t1375 = t1616 * t1534 + t1612 * t1621;
t1583 = t1612 * t1619 * t1616;
t1575 = qJDD(4) + t1583;
t1620 = -t1375 + (-t1564 + t1589) * pkin(9) + t1575 * pkin(4);
t1241 = t1615 * t1327 + t1611 * t1620;
t1505 = pkin(5) * t1552 - pkin(10) * t1554;
t1222 = -pkin(5) * t1721 + t1600 * pkin(10) - t1552 * t1505 + t1241;
t1403 = -qJDD(2) * pkin(3) - t1619 * pkin(8) + t1411;
t1362 = -t1642 * pkin(4) - pkin(9) * t1596 + t1577 * t1748 + t1403;
t1708 = t1554 * t1728;
t1269 = -t1771 * pkin(10) + (-t1464 + t1708) * pkin(5) + t1362;
t1164 = t1222 * t1610 - t1614 * t1269;
t1165 = t1222 * t1614 + t1269 * t1610;
t1103 = t1610 * t1164 + t1614 * t1165;
t1279 = t1612 * t1375 + t1616 * t1376;
t1515 = t1517 ^ 2;
t1516 = t1519 ^ 2;
t1545 = qJD(6) + t1552;
t1544 = t1545 ^ 2;
t1550 = t1552 ^ 2;
t1551 = t1554 ^ 2;
t1755 = pkin(2) * t1307;
t1240 = t1327 * t1611 - t1615 * t1620;
t1168 = -t1240 * t1615 + t1241 * t1611;
t1754 = pkin(4) * t1168;
t1441 = qJD(4) * t1554 - t1704;
t1444 = t1543 + t1465;
t1344 = t1441 * t1611 - t1444 * t1615;
t1753 = pkin(4) * t1344;
t1752 = pkin(5) * t1611;
t1419 = t1483 * t1613 + t1484 * t1617;
t1751 = pkin(7) * t1419;
t1749 = qJD(2) * qJD(4);
t1746 = t1168 * t1612;
t1745 = t1168 * t1616;
t1742 = t1362 * t1611;
t1741 = t1362 * t1615;
t1397 = t1458 + t1460;
t1740 = t1397 * t1610;
t1739 = t1397 * t1614;
t1495 = t1507 + t1600;
t1738 = t1495 * t1611;
t1737 = t1495 * t1615;
t1736 = t1545 * t1610;
t1735 = t1545 * t1614;
t1565 = -0.2e1 * t1714 + t1722;
t1523 = t1565 * t1616;
t1734 = t1575 * t1612;
t1576 = qJDD(4) - t1583;
t1733 = t1576 * t1612;
t1732 = t1576 * t1616;
t1601 = t1612 ^ 2;
t1731 = t1601 * t1619;
t1221 = -t1600 * pkin(5) - pkin(10) * t1721 + t1505 * t1554 + t1240;
t1218 = t1610 * t1221;
t1399 = t1612 * t1403;
t1730 = t1613 * t1539;
t1219 = t1614 * t1221;
t1400 = t1616 * t1403;
t1729 = t1617 * t1539;
t1727 = -pkin(5) * t1221 + pkin(10) * t1103;
t1726 = -pkin(3) * t1403 + pkin(8) * t1279;
t1724 = t1605 * qJDD(2);
t1720 = t1601 + t1756;
t1719 = -pkin(5) * t1615 - pkin(4);
t1718 = t1611 * t1458;
t1717 = t1615 * t1458;
t1716 = t1603 * t1507;
t1715 = t1606 * t1507;
t1454 = -t1516 - t1544;
t1318 = -t1454 * t1610 - t1739;
t1658 = -t1614 * t1465 - t1610 * t1600;
t1368 = (qJD(6) + t1545) * t1517 + t1658;
t1713 = pkin(5) * t1368 + pkin(10) * t1318 + t1218;
t1434 = -t1544 - t1515;
t1314 = t1434 * t1614 - t1775;
t1705 = -t1610 * t1465 + t1614 * t1600;
t1416 = -qJD(6) * t1519 + t1705;
t1477 = t1519 * t1545;
t1365 = t1416 - t1477;
t1712 = pkin(5) * t1365 + pkin(10) * t1314 - t1219;
t1618 = qJD(4) ^ 2;
t1580 = -t1618 - t1731;
t1532 = -t1580 * t1612 - t1732;
t1563 = 0.2e1 * t1589 + t1723;
t1711 = -pkin(3) * t1563 + pkin(8) * t1532 + t1399;
t1582 = -t1596 - t1618;
t1530 = t1582 * t1616 - t1734;
t1710 = pkin(3) * t1565 + pkin(8) * t1530 - t1400;
t1709 = t1607 * t1724;
t1169 = t1240 * t1611 + t1615 * t1241;
t1703 = -t1574 * t1604 - t1607 * t1725;
t1702 = t1603 * t1583;
t1701 = t1606 * t1583;
t1078 = t1103 * t1615 + t1221 * t1611;
t1102 = -t1164 * t1614 + t1165 * t1610;
t1020 = pkin(9) * t1078 + (-pkin(10) * t1611 + t1719) * t1102;
t1077 = t1103 * t1611 - t1221 * t1615;
t1034 = -pkin(9) * t1077 + (-pkin(10) * t1615 + t1752) * t1102;
t1044 = -t1077 * t1612 + t1078 * t1616;
t1700 = -pkin(3) * t1102 + pkin(8) * t1044 + t1616 * t1020 + t1612 * t1034;
t1364 = (-qJD(6) + t1545) * t1519 + t1705;
t1417 = -qJD(6) * t1517 - t1658;
t1476 = t1545 * t1517;
t1367 = t1417 + t1476;
t1272 = t1364 * t1610 - t1367 * t1614;
t1086 = -pkin(10) * t1272 - t1102;
t1274 = t1364 * t1614 + t1367 * t1610;
t1423 = t1515 + t1516;
t1228 = t1274 * t1615 - t1423 * t1611;
t1055 = pkin(9) * t1228 + t1611 * t1086 + t1272 * t1719;
t1227 = t1274 * t1611 + t1423 * t1615;
t1062 = -pkin(9) * t1227 + t1086 * t1615 + t1272 * t1752;
t1156 = -t1227 * t1612 + t1228 * t1616;
t1699 = -pkin(3) * t1272 + pkin(8) * t1156 + t1616 * t1055 + t1612 * t1062;
t1313 = t1434 * t1610 + t1773;
t1136 = -pkin(5) * t1313 + t1164;
t1183 = -pkin(10) * t1313 + t1218;
t1243 = t1314 * t1615 - t1365 * t1611;
t1071 = -pkin(4) * t1313 + pkin(9) * t1243 + t1136 * t1615 + t1183 * t1611;
t1242 = t1314 * t1611 + t1365 * t1615;
t1076 = -pkin(9) * t1242 - t1136 * t1611 + t1183 * t1615;
t1172 = -t1242 * t1612 + t1243 * t1616;
t1698 = -pkin(3) * t1313 + pkin(8) * t1172 + t1616 * t1071 + t1612 * t1076;
t1317 = t1454 * t1614 - t1740;
t1137 = -pkin(5) * t1317 + t1165;
t1189 = -pkin(10) * t1317 + t1219;
t1246 = t1318 * t1615 - t1368 * t1611;
t1074 = -pkin(4) * t1317 + pkin(9) * t1246 + t1137 * t1615 + t1189 * t1611;
t1245 = t1318 * t1611 + t1368 * t1615;
t1080 = -pkin(9) * t1245 - t1137 * t1611 + t1189 * t1615;
t1175 = -t1245 * t1612 + t1246 * t1616;
t1697 = -pkin(3) * t1317 + pkin(8) * t1175 + t1616 * t1074 + t1612 * t1080;
t1346 = t1441 * t1615 + t1444 * t1611;
t1466 = -t1550 - t1551;
t1135 = -pkin(4) * t1466 + pkin(9) * t1346 + t1169;
t1144 = -pkin(9) * t1344 - t1168;
t1259 = -t1344 * t1612 + t1346 * t1616;
t1696 = -pkin(3) * t1466 + pkin(8) * t1259 + t1616 * t1135 + t1612 * t1144;
t1695 = pkin(5) * t1423 + pkin(10) * t1274 + t1103;
t1493 = -t1721 - t1550;
t1427 = t1493 * t1615 - t1774;
t1439 = (0.2e1 * qJD(5) + qJD(4)) * t1554 + t1704;
t1261 = -pkin(4) * t1439 + pkin(9) * t1427 - t1741;
t1426 = t1493 * t1611 + t1772;
t1288 = -pkin(9) * t1426 + t1742;
t1323 = -t1426 * t1612 + t1427 * t1616;
t1694 = -pkin(3) * t1439 + pkin(8) * t1323 + t1616 * t1261 + t1612 * t1288;
t1533 = -t1551 - t1721;
t1446 = -t1533 * t1611 - t1737;
t1264 = -pkin(4) * t1771 + pkin(9) * t1446 + t1742;
t1445 = t1533 * t1615 - t1738;
t1296 = -pkin(9) * t1445 + t1741;
t1348 = -t1445 * t1612 + t1446 * t1616;
t1693 = -pkin(3) * t1771 + pkin(8) * t1348 + t1616 * t1264 + t1612 * t1296;
t1569 = t1720 * qJDD(2);
t1572 = t1596 + t1731;
t1692 = pkin(3) * t1572 + pkin(8) * t1569 + t1279;
t1691 = pkin(4) * t1077 + t1727;
t1690 = pkin(4) * t1445 - t1241;
t1689 = t1611 * t1708;
t1688 = t1611 * t1543;
t1687 = t1615 * t1708;
t1686 = t1615 * t1543;
t1570 = qJDD(2) * t1617 - t1613 * t1619;
t1685 = -pkin(7) * t1570 - t1730;
t1646 = qJDD(2) * t1613 + t1617 * t1619;
t1684 = -pkin(7) * t1646 + t1729;
t1028 = t1044 * t1603 - t1102 * t1606;
t1029 = t1044 * t1606 + t1102 * t1603;
t1682 = t1028 * t1617 + t1029 * t1613;
t1106 = t1169 * t1616 - t1746;
t1095 = t1106 * t1603 - t1362 * t1606;
t1096 = t1106 * t1606 + t1362 * t1603;
t1681 = t1095 * t1617 + t1096 * t1613;
t1123 = t1156 * t1603 - t1272 * t1606;
t1124 = t1156 * t1606 + t1272 * t1603;
t1680 = t1123 * t1617 + t1124 * t1613;
t1366 = t1417 - t1476;
t1275 = t1365 * t1614 - t1366 * t1610;
t1457 = t1516 - t1515;
t1237 = t1275 * t1611 - t1457 * t1615;
t1238 = t1275 * t1615 + t1457 * t1611;
t1161 = -t1237 * t1612 + t1238 * t1616;
t1273 = t1365 * t1610 + t1366 * t1614;
t1130 = t1161 * t1603 - t1273 * t1606;
t1131 = t1161 * t1606 + t1273 * t1603;
t1679 = t1130 * t1617 + t1131 * t1613;
t1138 = t1172 * t1603 - t1313 * t1606;
t1139 = t1172 * t1606 + t1313 * t1603;
t1678 = t1138 * t1617 + t1139 * t1613;
t1141 = t1175 * t1603 - t1317 * t1606;
t1142 = t1175 * t1606 + t1317 * t1603;
t1677 = t1141 * t1617 + t1142 * t1613;
t1471 = -t1516 + t1544;
t1334 = -t1471 * t1610 + t1773;
t1252 = t1334 * t1611 - t1367 * t1615;
t1254 = t1334 * t1615 + t1367 * t1611;
t1179 = -t1252 * t1612 + t1254 * t1616;
t1332 = t1471 * t1614 + t1775;
t1147 = t1179 * t1603 - t1332 * t1606;
t1149 = t1179 * t1606 + t1332 * t1603;
t1676 = t1147 * t1617 + t1149 * t1613;
t1470 = t1515 - t1544;
t1335 = t1470 * t1614 - t1740;
t1363 = -t1416 - t1477;
t1253 = t1335 * t1611 + t1363 * t1615;
t1255 = t1335 * t1615 - t1363 * t1611;
t1180 = -t1253 * t1612 + t1255 * t1616;
t1333 = t1470 * t1610 + t1739;
t1148 = t1180 * t1603 - t1333 * t1606;
t1150 = t1180 * t1606 + t1333 * t1603;
t1675 = t1148 * t1617 + t1150 * t1613;
t1350 = -t1416 * t1610 + t1517 * t1735;
t1297 = t1350 * t1611 + t1717;
t1299 = t1350 * t1615 - t1718;
t1210 = -t1297 * t1612 + t1299 * t1616;
t1349 = -t1614 * t1416 - t1517 * t1736;
t1194 = t1210 * t1603 + t1349 * t1606;
t1196 = t1210 * t1606 - t1349 * t1603;
t1674 = t1194 * t1617 + t1196 * t1613;
t1352 = t1417 * t1614 - t1519 * t1736;
t1298 = t1352 * t1611 - t1717;
t1300 = t1352 * t1615 + t1718;
t1211 = -t1298 * t1612 + t1300 * t1616;
t1351 = t1417 * t1610 + t1519 * t1735;
t1195 = t1211 * t1603 - t1351 * t1606;
t1197 = t1211 * t1606 + t1351 * t1603;
t1673 = t1195 * t1617 + t1197 * t1613;
t1410 = (-t1517 * t1614 + t1519 * t1610) * t1545;
t1338 = t1410 * t1611 - t1460 * t1615;
t1339 = t1410 * t1615 + t1460 * t1611;
t1248 = -t1338 * t1612 + t1339 * t1616;
t1409 = (-t1517 * t1610 - t1519 * t1614) * t1545;
t1206 = t1248 * t1603 - t1409 * t1606;
t1207 = t1248 * t1606 + t1409 * t1603;
t1672 = t1206 * t1617 + t1207 * t1613;
t1223 = t1279 * t1603 - t1403 * t1606;
t1224 = t1279 * t1606 + t1403 * t1603;
t1671 = t1223 * t1617 + t1224 * t1613;
t1229 = t1259 * t1603 - t1466 * t1606;
t1230 = t1259 * t1606 + t1466 * t1603;
t1670 = t1229 * t1617 + t1230 * t1613;
t1343 = -t1439 * t1611 + t1615 * t1771;
t1345 = -t1439 * t1615 - t1611 * t1771;
t1258 = -t1343 * t1612 + t1345 * t1616;
t1506 = t1551 - t1550;
t1233 = t1258 * t1603 - t1506 * t1606;
t1234 = t1258 * t1606 + t1506 * t1603;
t1669 = t1233 * t1617 + t1234 * t1613;
t1281 = t1323 * t1603 - t1439 * t1606;
t1282 = t1323 * t1606 + t1439 * t1603;
t1668 = t1281 * t1617 + t1282 * t1613;
t1286 = t1348 * t1603 - t1606 * t1771;
t1287 = t1348 * t1606 + t1603 * t1771;
t1667 = t1286 * t1617 + t1287 * t1613;
t1541 = -t1551 + t1721;
t1450 = t1541 * t1615 + t1774;
t1452 = -t1541 * t1611 + t1772;
t1355 = -t1450 * t1612 + t1452 * t1616;
t1289 = t1355 * t1603 - t1444 * t1606;
t1291 = t1355 * t1606 + t1444 * t1603;
t1666 = t1289 * t1617 + t1291 * t1613;
t1540 = t1550 - t1721;
t1451 = t1540 * t1611 + t1737;
t1453 = t1540 * t1615 - t1738;
t1356 = -t1451 * t1612 + t1453 * t1616;
t1290 = t1356 * t1603 - t1441 * t1606;
t1292 = t1356 * t1606 + t1441 * t1603;
t1665 = t1290 * t1617 + t1292 * t1613;
t1428 = t1615 * t1464 + t1688;
t1429 = -t1611 * t1464 + t1686;
t1330 = -t1428 * t1612 + t1429 * t1616;
t1301 = t1330 * t1603 + t1715;
t1303 = t1330 * t1606 - t1716;
t1664 = t1301 * t1617 + t1303 * t1613;
t1430 = t1611 * t1465 + t1687;
t1431 = t1615 * t1465 - t1689;
t1331 = -t1430 * t1612 + t1431 * t1616;
t1302 = t1331 * t1603 - t1715;
t1304 = t1331 * t1606 + t1716;
t1663 = t1302 * t1617 + t1304 * t1613;
t1278 = t1375 * t1616 - t1376 * t1612;
t1468 = -t1688 - t1687;
t1469 = -t1686 + t1689;
t1405 = -t1468 * t1612 + t1469 * t1616;
t1387 = t1405 * t1603 - t1600 * t1606;
t1388 = t1405 * t1606 + t1600 * t1603;
t1660 = t1387 * t1617 + t1388 * t1613;
t1509 = -t1563 * t1612 + t1523;
t1573 = -t1596 + t1731;
t1462 = t1509 * t1603 - t1573 * t1606;
t1463 = t1509 * t1606 + t1573 * t1603;
t1659 = t1462 * t1617 + t1463 * t1613;
t1472 = t1530 * t1603 + t1565 * t1606;
t1474 = t1530 * t1606 - t1565 * t1603;
t1657 = t1472 * t1617 + t1474 * t1613;
t1473 = t1532 * t1603 - t1563 * t1606;
t1475 = t1532 * t1606 + t1563 * t1603;
t1656 = t1473 * t1617 + t1475 * t1613;
t1418 = t1483 * t1617 - t1484 * t1613;
t1581 = t1596 - t1618;
t1529 = t1581 * t1616 - t1733;
t1485 = t1529 * t1603 - t1606 * t1722;
t1487 = t1529 * t1606 + t1603 * t1722;
t1655 = t1485 * t1617 + t1487 * t1613;
t1561 = t1616 * t1575;
t1579 = t1618 - t1731;
t1531 = -t1579 * t1612 + t1561;
t1486 = t1531 * t1603 - t1606 * t1723;
t1488 = t1531 * t1606 + t1603 * t1723;
t1654 = t1486 * t1617 + t1488 * t1613;
t1537 = -t1612 * t1642 - t1749 * t1756;
t1489 = t1537 * t1603 - t1701;
t1491 = t1537 * t1606 + t1702;
t1653 = t1489 * t1617 + t1491 * t1613;
t1538 = t1564 * t1616 - t1601 * t1749;
t1490 = t1538 * t1603 + t1701;
t1492 = t1538 * t1606 - t1702;
t1652 = t1490 * t1617 + t1492 * t1613;
t1513 = t1569 * t1603 + t1572 * t1606;
t1514 = t1569 * t1606 - t1572 * t1603;
t1651 = t1513 * t1617 + t1514 * t1613;
t1560 = t1720 * t1749;
t1535 = -qJDD(4) * t1606 + t1560 * t1603;
t1536 = qJDD(4) * t1603 + t1560 * t1606;
t1650 = t1535 * t1617 + t1536 * t1613;
t1548 = t1646 * t1608;
t1649 = t1548 * t1607 + t1570 * t1604;
t1648 = t1548 * t1604 - t1570 * t1607;
t1645 = pkin(4) * t1245 + t1713;
t1644 = pkin(4) * t1242 + t1712;
t1643 = pkin(4) * t1426 - t1240;
t1146 = -pkin(4) * t1362 + pkin(9) * t1169;
t1641 = -pkin(3) * t1362 + pkin(8) * t1106 - pkin(9) * t1746 + t1616 * t1146;
t1640 = pkin(4) * t1227 + t1695;
t1638 = -t1607 * t1574 + t1604 * t1725;
t1008 = -t1028 * t1613 + t1029 * t1617;
t1043 = t1077 * t1616 + t1078 * t1612;
t1002 = -pkin(8) * t1043 - t1020 * t1612 + t1034 * t1616;
t1014 = -pkin(3) * t1043 - t1691;
t989 = -pkin(2) * t1043 + qJ(3) * t1029 + t1002 * t1603 + t1014 * t1606;
t992 = -qJ(3) * t1028 + t1002 * t1606 - t1014 * t1603;
t1637 = pkin(7) * t1008 + t1613 * t992 + t1617 * t989;
t1155 = t1227 * t1616 + t1228 * t1612;
t1021 = -pkin(8) * t1155 - t1055 * t1612 + t1062 * t1616;
t1048 = -pkin(3) * t1155 - t1640;
t1005 = -pkin(2) * t1155 + qJ(3) * t1124 + t1021 * t1603 + t1048 * t1606;
t1009 = -qJ(3) * t1123 + t1021 * t1606 - t1048 * t1603;
t1067 = -t1123 * t1613 + t1124 * t1617;
t1636 = pkin(7) * t1067 + t1005 * t1617 + t1009 * t1613;
t1105 = t1169 * t1612 + t1745;
t1047 = -pkin(8) * t1105 - pkin(9) * t1745 - t1146 * t1612;
t1068 = -pkin(3) * t1105 - t1754;
t1011 = -pkin(2) * t1105 + qJ(3) * t1096 + t1047 * t1603 + t1068 * t1606;
t1018 = -qJ(3) * t1095 + t1047 * t1606 - t1068 * t1603;
t1046 = -t1095 * t1613 + t1096 * t1617;
t1635 = pkin(7) * t1046 + t1011 * t1617 + t1018 * t1613;
t1171 = t1242 * t1616 + t1243 * t1612;
t1036 = -pkin(8) * t1171 - t1071 * t1612 + t1076 * t1616;
t1082 = -pkin(3) * t1171 - t1644;
t1012 = -pkin(2) * t1171 + qJ(3) * t1139 + t1036 * t1603 + t1082 * t1606;
t1015 = -qJ(3) * t1138 + t1036 * t1606 - t1082 * t1603;
t1081 = -t1138 * t1613 + t1139 * t1617;
t1634 = pkin(7) * t1081 + t1012 * t1617 + t1015 * t1613;
t1174 = t1245 * t1616 + t1246 * t1612;
t1039 = -pkin(8) * t1174 - t1074 * t1612 + t1080 * t1616;
t1084 = -pkin(3) * t1174 - t1645;
t1013 = -pkin(2) * t1174 + qJ(3) * t1142 + t1039 * t1603 + t1084 * t1606;
t1017 = -qJ(3) * t1141 + t1039 * t1606 - t1084 * t1603;
t1085 = -t1141 * t1613 + t1142 * t1617;
t1633 = pkin(7) * t1085 + t1013 * t1617 + t1017 * t1613;
t1257 = t1344 * t1616 + t1346 * t1612;
t1069 = -pkin(8) * t1257 - t1135 * t1612 + t1144 * t1616;
t1201 = -pkin(3) * t1257 - t1753;
t1045 = -pkin(2) * t1257 + qJ(3) * t1230 + t1069 * t1603 + t1201 * t1606;
t1049 = -qJ(3) * t1229 + t1069 * t1606 - t1201 * t1603;
t1157 = -t1229 * t1613 + t1230 * t1617;
t1632 = pkin(7) * t1157 + t1045 * t1617 + t1049 * t1613;
t1322 = t1426 * t1616 + t1427 * t1612;
t1158 = -pkin(8) * t1322 - t1261 * t1612 + t1288 * t1616;
t1184 = -pkin(3) * t1322 - t1643;
t1083 = -pkin(2) * t1322 + qJ(3) * t1282 + t1158 * t1603 + t1184 * t1606;
t1094 = -qJ(3) * t1281 + t1158 * t1606 - t1184 * t1603;
t1199 = -t1281 * t1613 + t1282 * t1617;
t1631 = pkin(7) * t1199 + t1083 * t1617 + t1094 * t1613;
t1347 = t1445 * t1616 + t1446 * t1612;
t1176 = -pkin(8) * t1347 - t1264 * t1612 + t1296 * t1616;
t1198 = -pkin(3) * t1347 - t1690;
t1087 = -pkin(2) * t1347 + qJ(3) * t1287 + t1176 * t1603 + t1198 * t1606;
t1099 = -qJ(3) * t1286 + t1176 * t1606 - t1198 * t1603;
t1200 = -t1286 * t1613 + t1287 * t1617;
t1630 = pkin(7) * t1200 + t1087 * t1617 + t1099 * t1613;
t1108 = qJ(3) * t1224 - (-pkin(3) * t1606 - pkin(8) * t1603 - pkin(2)) * t1278;
t1133 = -qJ(3) * t1223 - (pkin(3) * t1603 - pkin(8) * t1606) * t1278;
t1152 = -t1223 * t1613 + t1224 * t1617;
t1629 = pkin(7) * t1152 + t1108 * t1617 + t1133 * t1613;
t1526 = t1582 * t1612 + t1561;
t1336 = -pkin(3) * t1526 + t1375;
t1373 = -pkin(8) * t1526 + t1399;
t1225 = -pkin(2) * t1526 + qJ(3) * t1474 + t1336 * t1606 + t1373 * t1603;
t1231 = -qJ(3) * t1472 - t1336 * t1603 + t1373 * t1606;
t1407 = -t1472 * t1613 + t1474 * t1617;
t1628 = pkin(7) * t1407 + t1225 * t1617 + t1231 * t1613;
t1528 = t1580 * t1616 - t1733;
t1337 = -pkin(3) * t1528 + t1376;
t1374 = -pkin(8) * t1528 + t1400;
t1226 = -pkin(2) * t1528 + qJ(3) * t1475 + t1337 * t1606 + t1374 * t1603;
t1232 = -qJ(3) * t1473 - t1337 * t1603 + t1374 * t1606;
t1408 = -t1473 * t1613 + t1475 * t1617;
t1627 = pkin(7) * t1408 + t1226 * t1617 + t1232 * t1613;
t1249 = qJ(3) * t1514 + t1278 * t1603;
t1250 = -qJ(3) * t1513 + t1278 * t1606;
t1449 = -t1513 * t1613 + t1514 * t1617;
t1626 = pkin(7) * t1449 + t1249 * t1617 + t1250 * t1613;
t1625 = -pkin(7) * t1647 - t1769;
t1624 = pkin(7) * t1511 + t1770;
t1284 = pkin(2) * t1534 + qJ(3) * t1706;
t1623 = pkin(7) * t1776 + qJ(3) * t1744 + t1284 * t1617;
t1592 = t1608 * qJDD(2);
t1578 = t1604 * t1724;
t1549 = t1570 * t1608;
t1547 = t1570 * t1605;
t1546 = t1646 * t1605;
t1527 = t1579 * t1616 + t1734;
t1525 = t1581 * t1612 + t1732;
t1524 = (t1564 + t1589) * t1612;
t1508 = t1563 * t1616 + t1565 * t1612;
t1504 = -t1549 * t1604 - t1607 * t1646;
t1503 = t1549 * t1607 - t1604 * t1646;
t1502 = t1511 * t1608;
t1499 = t1511 * t1605;
t1459 = -t1535 * t1613 + t1536 * t1617;
t1456 = t1650 * t1608;
t1455 = t1650 * t1605;
t1448 = -t1729 + (t1546 * t1605 + t1548 * t1608) * pkin(7);
t1447 = -t1730 + (-t1547 * t1605 - t1549 * t1608) * pkin(7);
t1436 = t1651 * t1608;
t1435 = t1651 * t1605;
t1433 = t1502 * t1604 - t1607 * t1647;
t1432 = -t1502 * t1607 - t1604 * t1647;
t1425 = -t1490 * t1613 + t1492 * t1617;
t1424 = -t1489 * t1613 + t1491 * t1617;
t1422 = -t1486 * t1613 + t1488 * t1617;
t1421 = -t1485 * t1613 + t1487 * t1617;
t1414 = t1419 * t1608;
t1413 = t1419 * t1605;
t1404 = t1468 * t1616 + t1469 * t1612;
t1395 = -pkin(1) * t1547 + t1605 * t1483 + t1608 * t1684;
t1394 = pkin(1) * t1546 + t1605 * t1484 + t1608 * t1685;
t1393 = pkin(1) * t1549 - t1608 * t1483 + t1605 * t1684;
t1392 = -pkin(1) * t1548 - t1608 * t1484 + t1605 * t1685;
t1391 = -t1462 * t1613 + t1463 * t1617;
t1390 = -pkin(2) * t1567 - t1412;
t1389 = pkin(2) * t1568 - t1411;
t1386 = -t1605 * t1524 + t1608 * t1652;
t1385 = -t1605 * t1523 + t1608 * t1653;
t1384 = t1608 * t1524 + t1605 * t1652;
t1383 = t1608 * t1523 + t1605 * t1653;
t1382 = -t1605 * t1527 + t1608 * t1654;
t1381 = -t1605 * t1525 + t1608 * t1655;
t1380 = t1608 * t1527 + t1605 * t1654;
t1379 = t1608 * t1525 + t1605 * t1655;
t1378 = -t1418 * t1608 + t1605 * t1539;
t1377 = -t1418 * t1605 - t1608 * t1539;
t1372 = -t1605 * t1528 + t1608 * t1656;
t1371 = -t1605 * t1526 + t1608 * t1657;
t1370 = t1608 * t1528 + t1605 * t1656;
t1369 = t1608 * t1526 + t1605 * t1657;
t1354 = t1451 * t1616 + t1453 * t1612;
t1353 = t1450 * t1616 + t1452 * t1612;
t1341 = -t1605 * t1508 + t1608 * t1659;
t1340 = t1608 * t1508 + t1605 * t1659;
t1329 = t1430 * t1616 + t1431 * t1612;
t1328 = t1428 * t1616 + t1429 * t1612;
t1321 = (t1605 * t1760 + t1608 * t1759) * pkin(7) + t1769;
t1320 = (t1499 * t1605 + t1502 * t1608) * pkin(7) + t1770;
t1310 = pkin(2) * t1472 + t1710;
t1309 = pkin(2) * t1473 + t1711;
t1294 = pkin(1) * t1378 + t1605 * t1751;
t1293 = -pkin(1) * t1377 + t1608 * t1751;
t1283 = -t1387 * t1613 + t1388 * t1617;
t1280 = (-t1377 * t1605 - t1378 * t1608) * pkin(7);
t1268 = pkin(1) * t1760 - t1605 * t1390 + t1608 * t1624;
t1267 = pkin(1) * t1499 - t1605 * t1389 + t1608 * t1625;
t1266 = -pkin(1) * t1759 + t1608 * t1390 + t1605 * t1624;
t1265 = -pkin(1) * t1502 + t1608 * t1389 + t1605 * t1625;
t1256 = t1343 * t1616 + t1345 * t1612;
t1247 = t1338 * t1616 + t1339 * t1612;
t1244 = pkin(2) * t1513 + t1692;
t1236 = -t1605 * t1404 + t1608 * t1660;
t1235 = t1608 * t1404 + t1605 * t1660;
t1215 = -t1302 * t1613 + t1304 * t1617;
t1214 = -t1301 * t1613 + t1303 * t1617;
t1213 = t1776 * t1608;
t1212 = t1776 * t1605;
t1209 = t1298 * t1616 + t1300 * t1612;
t1208 = t1297 * t1616 + t1299 * t1612;
t1205 = -t1216 * t1608 + t1605 * t1534;
t1204 = -t1216 * t1605 - t1608 * t1534;
t1203 = -t1290 * t1613 + t1292 * t1617;
t1202 = -t1289 * t1613 + t1291 * t1617;
t1193 = -t1605 * t1329 + t1608 * t1663;
t1192 = -t1605 * t1328 + t1608 * t1664;
t1191 = t1608 * t1329 + t1605 * t1663;
t1190 = t1608 * t1328 + t1605 * t1664;
t1188 = -t1605 * t1354 + t1608 * t1665;
t1187 = -t1605 * t1353 + t1608 * t1666;
t1186 = t1608 * t1354 + t1605 * t1665;
t1185 = t1608 * t1353 + t1605 * t1666;
t1182 = -t1605 * t1347 + t1608 * t1667;
t1181 = t1608 * t1347 + t1605 * t1667;
t1178 = t1253 * t1616 + t1255 * t1612;
t1177 = t1252 * t1616 + t1254 * t1612;
t1167 = -t1605 * t1322 + t1608 * t1668;
t1166 = t1608 * t1322 + t1605 * t1668;
t1160 = t1237 * t1616 + t1238 * t1612;
t1159 = -t1233 * t1613 + t1234 * t1617;
t1153 = pkin(2) * t1223 + t1726;
t1151 = -t1613 * t1249 + t1617 * t1250 + (-t1435 * t1605 - t1436 * t1608) * pkin(7);
t1140 = -t1206 * t1613 + t1207 * t1617;
t1132 = pkin(2) * t1286 + t1693;
t1129 = -t1613 * t1226 + t1617 * t1232 + (-t1370 * t1605 - t1372 * t1608) * pkin(7);
t1128 = -t1613 * t1225 + t1617 * t1231 + (-t1369 * t1605 - t1371 * t1608) * pkin(7);
t1127 = -t1605 * t1256 + t1608 * t1669;
t1126 = t1608 * t1256 + t1605 * t1669;
t1125 = pkin(2) * t1281 + t1694;
t1122 = -t1605 * t1257 + t1608 * t1670;
t1121 = t1608 * t1257 + t1605 * t1670;
t1120 = t1278 * t1605 + t1608 * t1671;
t1119 = -t1278 * t1608 + t1605 * t1671;
t1118 = -pkin(1) * t1435 - t1605 * t1244 + t1608 * t1626;
t1117 = pkin(1) * t1436 + t1608 * t1244 + t1605 * t1626;
t1116 = -t1195 * t1613 + t1197 * t1617;
t1115 = -t1194 * t1613 + t1196 * t1617;
t1114 = -pkin(1) * t1370 - t1605 * t1309 + t1608 * t1627;
t1113 = -pkin(1) * t1369 - t1605 * t1310 + t1608 * t1628;
t1112 = pkin(1) * t1372 + t1608 * t1309 + t1605 * t1627;
t1111 = pkin(1) * t1371 + t1608 * t1310 + t1605 * t1628;
t1110 = -t1605 * t1247 + t1608 * t1672;
t1109 = t1608 * t1247 + t1605 * t1672;
t1107 = qJ(3) * t1743 - t1613 * t1284 + (-t1204 * t1605 - t1205 * t1608) * pkin(7);
t1098 = -pkin(1) * t1204 + t1605 * t1755 + t1608 * t1623;
t1097 = pkin(1) * t1205 + t1605 * t1623 - t1608 * t1755;
t1093 = -t1605 * t1209 + t1608 * t1673;
t1092 = -t1605 * t1208 + t1608 * t1674;
t1091 = t1608 * t1209 + t1605 * t1673;
t1090 = t1608 * t1208 + t1605 * t1674;
t1089 = -t1148 * t1613 + t1150 * t1617;
t1088 = -t1147 * t1613 + t1149 * t1617;
t1072 = -t1130 * t1613 + t1131 * t1617;
t1066 = -t1605 * t1178 + t1608 * t1675;
t1065 = -t1605 * t1177 + t1608 * t1676;
t1064 = t1608 * t1178 + t1605 * t1675;
t1063 = t1608 * t1177 + t1605 * t1676;
t1060 = -t1605 * t1174 + t1608 * t1677;
t1059 = t1608 * t1174 + t1605 * t1677;
t1058 = -t1605 * t1171 + t1608 * t1678;
t1057 = t1608 * t1171 + t1605 * t1678;
t1056 = pkin(2) * t1229 + t1696;
t1053 = -t1605 * t1160 + t1608 * t1679;
t1052 = t1608 * t1160 + t1605 * t1679;
t1051 = -t1605 * t1155 + t1608 * t1680;
t1050 = t1608 * t1155 + t1605 * t1680;
t1041 = -t1613 * t1087 + t1617 * t1099 + (-t1181 * t1605 - t1182 * t1608) * pkin(7);
t1040 = -t1613 * t1108 + t1617 * t1133 + (-t1119 * t1605 - t1120 * t1608) * pkin(7);
t1038 = -t1605 * t1105 + t1608 * t1681;
t1037 = t1608 * t1105 + t1605 * t1681;
t1035 = pkin(2) * t1095 + t1641;
t1032 = -t1613 * t1083 + t1617 * t1094 + (-t1166 * t1605 - t1167 * t1608) * pkin(7);
t1031 = -pkin(1) * t1119 - t1605 * t1153 + t1608 * t1629;
t1030 = pkin(1) * t1120 + t1608 * t1153 + t1605 * t1629;
t1027 = -pkin(1) * t1181 - t1605 * t1132 + t1608 * t1630;
t1026 = pkin(1) * t1182 + t1608 * t1132 + t1605 * t1630;
t1025 = pkin(2) * t1141 + t1697;
t1024 = -pkin(1) * t1166 - t1605 * t1125 + t1608 * t1631;
t1023 = pkin(1) * t1167 + t1608 * t1125 + t1605 * t1631;
t1022 = pkin(2) * t1138 + t1698;
t1016 = pkin(2) * t1123 + t1699;
t1010 = -t1613 * t1045 + t1617 * t1049 + (-t1121 * t1605 - t1122 * t1608) * pkin(7);
t1007 = -pkin(1) * t1121 - t1605 * t1056 + t1608 * t1632;
t1006 = pkin(1) * t1122 + t1608 * t1056 + t1605 * t1632;
t1004 = -t1605 * t1043 + t1608 * t1682;
t1003 = t1608 * t1043 + t1605 * t1682;
t1001 = -t1613 * t1013 + t1617 * t1017 + (-t1059 * t1605 - t1060 * t1608) * pkin(7);
t1000 = -t1613 * t1012 + t1617 * t1015 + (-t1057 * t1605 - t1058 * t1608) * pkin(7);
t999 = pkin(2) * t1028 + t1700;
t998 = -t1613 * t1011 + t1617 * t1018 + (-t1037 * t1605 - t1038 * t1608) * pkin(7);
t997 = -pkin(1) * t1059 - t1605 * t1025 + t1608 * t1633;
t996 = pkin(1) * t1060 + t1608 * t1025 + t1605 * t1633;
t995 = -pkin(1) * t1057 - t1605 * t1022 + t1608 * t1634;
t994 = pkin(1) * t1058 + t1608 * t1022 + t1605 * t1634;
t993 = -t1613 * t1005 + t1617 * t1009 + (-t1050 * t1605 - t1051 * t1608) * pkin(7);
t991 = -pkin(1) * t1037 - t1605 * t1035 + t1608 * t1635;
t990 = pkin(1) * t1038 + t1608 * t1035 + t1605 * t1635;
t988 = -pkin(1) * t1050 - t1605 * t1016 + t1608 * t1636;
t987 = pkin(1) * t1051 + t1608 * t1016 + t1605 * t1636;
t986 = -t1613 * t989 + t1617 * t992 + (-t1003 * t1605 - t1004 * t1608) * pkin(7);
t985 = -pkin(1) * t1003 - t1605 * t999 + t1608 * t1637;
t984 = pkin(1) * t1004 + t1605 * t1637 + t1608 * t999;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1766, -t1765, t1638, qJ(1) * t1638, 0, 0, -t1648, 0, t1504, t1578, -qJ(1) * t1503 - t1395 * t1604 + t1447 * t1607, qJ(1) * t1649 - t1604 * t1394 + t1607 * t1448, -t1414 * t1604 + t1418 * t1607, t1607 * t1280 - t1604 * t1293 - qJ(1) * (t1378 * t1607 + t1419 * t1604), 0, 0, -t1768, 0, t1433, t1578, -qJ(1) * t1432 - t1267 * t1604 + t1320 * t1607, -qJ(1) * t1767 - t1604 * t1268 + t1607 * t1321, -t1213 * t1604 + t1216 * t1607, t1607 * t1107 - t1604 * t1098 - qJ(1) * (t1205 * t1607 + t1604 * t1776), -t1386 * t1604 + t1425 * t1607, -t1341 * t1604 + t1391 * t1607, -t1382 * t1604 + t1422 * t1607, -t1385 * t1604 + t1424 * t1607, -t1381 * t1604 + t1421 * t1607, -t1456 * t1604 + t1459 * t1607, t1607 * t1128 - t1604 * t1113 - qJ(1) * (t1371 * t1607 + t1407 * t1604), t1607 * t1129 - t1604 * t1114 - qJ(1) * (t1372 * t1607 + t1408 * t1604), t1607 * t1151 - t1604 * t1118 - qJ(1) * (t1436 * t1607 + t1449 * t1604), t1607 * t1040 - t1604 * t1031 - qJ(1) * (t1120 * t1607 + t1152 * t1604), -t1193 * t1604 + t1215 * t1607, -t1127 * t1604 + t1159 * t1607, -t1187 * t1604 + t1202 * t1607, -t1192 * t1604 + t1214 * t1607, -t1188 * t1604 + t1203 * t1607, -t1236 * t1604 + t1283 * t1607, t1607 * t1032 - t1604 * t1024 - qJ(1) * (t1167 * t1607 + t1199 * t1604), t1607 * t1041 - t1604 * t1027 - qJ(1) * (t1182 * t1607 + t1200 * t1604), t1607 * t1010 - t1604 * t1007 - qJ(1) * (t1122 * t1607 + t1157 * t1604), t1607 * t998 - t1604 * t991 - qJ(1) * (t1038 * t1607 + t1046 * t1604), -t1093 * t1604 + t1116 * t1607, -t1053 * t1604 + t1072 * t1607, -t1065 * t1604 + t1088 * t1607, -t1092 * t1604 + t1115 * t1607, -t1066 * t1604 + t1089 * t1607, -t1110 * t1604 + t1140 * t1607, t1607 * t1000 - t1604 * t995 - qJ(1) * (t1058 * t1607 + t1081 * t1604), t1607 * t1001 - t1604 * t997 - qJ(1) * (t1060 * t1607 + t1085 * t1604), t1607 * t993 - t1604 * t988 - qJ(1) * (t1051 * t1607 + t1067 * t1604), t1607 * t986 - t1604 * t985 - qJ(1) * (t1004 * t1607 + t1008 * t1604); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1765, -t1766, t1703, qJ(1) * t1703, 0, 0, t1649, 0, t1503, -t1709, qJ(1) * t1504 + t1395 * t1607 + t1447 * t1604, qJ(1) * t1648 + t1607 * t1394 + t1604 * t1448, t1414 * t1607 + t1418 * t1604, t1604 * t1280 + t1607 * t1293 + qJ(1) * (-t1378 * t1604 + t1419 * t1607), 0, 0, -t1767, 0, t1432, -t1709, qJ(1) * t1433 + t1267 * t1607 + t1320 * t1604, qJ(1) * t1768 + t1607 * t1268 + t1604 * t1321, t1213 * t1607 + t1216 * t1604, t1604 * t1107 + t1607 * t1098 + qJ(1) * (-t1205 * t1604 + t1607 * t1776), t1386 * t1607 + t1425 * t1604, t1341 * t1607 + t1391 * t1604, t1382 * t1607 + t1422 * t1604, t1385 * t1607 + t1424 * t1604, t1381 * t1607 + t1421 * t1604, t1456 * t1607 + t1459 * t1604, t1604 * t1128 + t1607 * t1113 + qJ(1) * (-t1371 * t1604 + t1407 * t1607), t1604 * t1129 + t1607 * t1114 + qJ(1) * (-t1372 * t1604 + t1408 * t1607), t1604 * t1151 + t1607 * t1118 + qJ(1) * (-t1436 * t1604 + t1449 * t1607), t1604 * t1040 + t1607 * t1031 + qJ(1) * (-t1120 * t1604 + t1152 * t1607), t1193 * t1607 + t1215 * t1604, t1127 * t1607 + t1159 * t1604, t1187 * t1607 + t1202 * t1604, t1192 * t1607 + t1214 * t1604, t1188 * t1607 + t1203 * t1604, t1236 * t1607 + t1283 * t1604, t1604 * t1032 + t1607 * t1024 + qJ(1) * (-t1167 * t1604 + t1199 * t1607), t1604 * t1041 + t1607 * t1027 + qJ(1) * (-t1182 * t1604 + t1200 * t1607), t1604 * t1010 + t1607 * t1007 + qJ(1) * (-t1122 * t1604 + t1157 * t1607), t1604 * t998 + t1607 * t991 + qJ(1) * (-t1038 * t1604 + t1046 * t1607), t1093 * t1607 + t1116 * t1604, t1053 * t1607 + t1072 * t1604, t1065 * t1607 + t1088 * t1604, t1092 * t1607 + t1115 * t1604, t1066 * t1607 + t1089 * t1604, t1110 * t1607 + t1140 * t1604, t1604 * t1000 + t1607 * t995 + qJ(1) * (-t1058 * t1604 + t1081 * t1607), t1604 * t1001 + t1607 * t997 + qJ(1) * (-t1060 * t1604 + t1085 * t1607), t1604 * t993 + t1607 * t988 + qJ(1) * (-t1051 * t1604 + t1067 * t1607), t1604 * t986 + t1607 * t985 + qJ(1) * (-t1004 * t1604 + t1008 * t1607); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1574, t1725, 0, 0, 0, 0, t1546, 0, t1547, t1592, t1393, t1392, t1413, t1294, 0, 0, t1760, 0, -t1499, t1592, t1265, t1266, t1212, t1097, t1384, t1340, t1380, t1383, t1379, t1455, t1111, t1112, t1117, t1030, t1191, t1126, t1185, t1190, t1186, t1235, t1023, t1026, t1006, t990, t1091, t1052, t1063, t1090, t1064, t1109, t994, t996, t987, t984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1750, -t1574, 0, 0, 0, t1570, 0, -t1646, 0, t1447, t1448, t1418, t1280, 0, 0, -t1511, 0, -t1647, 0, t1320, t1321, t1216, t1107, t1425, t1391, t1422, t1424, t1421, t1459, t1128, t1129, t1151, t1040, t1215, t1159, t1202, t1214, t1203, t1283, t1032, t1041, t1010, t998, t1116, t1072, t1088, t1115, t1089, t1140, t1000, t1001, t993, t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1750, 0, -t1725, 0, 0, 0, t1548, 0, t1549, -t1724, t1395, t1394, t1414, t1293, 0, 0, t1759, 0, -t1502, -t1724, t1267, t1268, t1213, t1098, t1386, t1341, t1382, t1385, t1381, t1456, t1113, t1114, t1118, t1031, t1193, t1127, t1187, t1192, t1188, t1236, t1024, t1027, t1007, t991, t1093, t1053, t1065, t1092, t1066, t1110, t995, t997, t988, t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1574, t1725, 0, 0, 0, 0, t1546, 0, t1547, t1592, t1393, t1392, t1413, t1294, 0, 0, t1760, 0, -t1499, t1592, t1265, t1266, t1212, t1097, t1384, t1340, t1380, t1383, t1379, t1455, t1111, t1112, t1117, t1030, t1191, t1126, t1185, t1190, t1186, t1235, t1023, t1026, t1006, t990, t1091, t1052, t1063, t1090, t1064, t1109, t994, t996, t987, t984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1619, 0, 0, -t1539, t1483, 0, 0, 0, t1568, 0, -t1567, 0, t1683, t1482, t1307, qJ(3) * t1307, t1492, t1463, t1488, t1491, t1487, t1536, t1231, t1232, t1250, t1133, t1304, t1234, t1291, t1303, t1292, t1388, t1094, t1099, t1049, t1018, t1197, t1131, t1149, t1196, t1150, t1207, t1015, t1017, t1009, t992; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1619, 0, qJDD(2), 0, t1539, 0, t1484, 0, 0, 0, t1567, 0, t1568, 0, -t1482, t1683, t1706, t1284, t1490, t1462, t1486, t1489, t1485, t1535, t1225, t1226, t1249, t1108, t1302, t1233, t1289, t1301, t1290, t1387, t1083, t1087, t1045, t1011, t1195, t1130, t1147, t1194, t1148, t1206, t1012, t1013, t1005, t989; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1483, -t1484, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t1389, t1390, 0, -t1755, t1524, t1508, t1527, t1523, t1525, 0, t1310, t1309, t1244, t1153, t1329, t1256, t1353, t1328, t1354, t1404, t1125, t1132, t1056, t1035, t1209, t1160, t1177, t1208, t1178, t1247, t1022, t1025, t1016, t999; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1619, 0, 0, -t1534, t1411, 0, t1538, t1509, t1531, t1537, t1529, t1560, t1373, t1374, t1278, pkin(8) * t1278, t1331, t1258, t1355, t1330, t1356, t1405, t1158, t1176, t1069, t1047, t1211, t1161, t1179, t1210, t1180, t1248, t1036, t1039, t1021, t1002; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1619, 0, qJDD(2), 0, t1534, 0, t1412, 0, t1583, -t1573, -t1723, -t1583, -t1722, -qJDD(4), t1336, t1337, 0, pkin(3) * t1278, -t1507, -t1506, -t1444, t1507, -t1441, -t1600, t1184, t1198, t1201, t1068, -t1351, -t1273, -t1332, t1349, -t1333, -t1409, t1082, t1084, t1048, t1014; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1411, -t1412, 0, 0, t1524, t1508, t1527, t1523, t1525, 0, t1710, t1711, t1692, t1726, t1329, t1256, t1353, t1328, t1354, t1404, t1694, t1693, t1696, t1641, t1209, t1160, t1177, t1208, t1178, t1247, t1698, t1697, t1699, t1700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1564, t1565, t1575, -t1589, t1581, t1589, 0, t1403, t1375, 0, t1431, t1345, t1452, t1429, t1453, t1469, t1288, t1296, t1144, -pkin(9) * t1168, t1300, t1238, t1254, t1299, t1255, t1339, t1076, t1080, t1062, t1034; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1714, t1563, t1579, t1642, t1576, -t1714, -t1403, 0, t1376, 0, t1430, t1343, t1450, t1428, t1451, t1468, t1261, t1264, t1135, t1146, t1298, t1237, t1252, t1297, t1253, t1338, t1071, t1074, t1055, t1020; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1583, t1573, t1723, t1583, t1722, qJDD(4), -t1375, -t1376, 0, 0, t1507, t1506, t1444, -t1507, t1441, t1600, t1643, t1690, t1753, t1754, t1351, t1273, t1332, -t1349, t1333, t1409, t1644, t1645, t1640, t1691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1465, -t1439, t1757, t1543, t1540, -t1543, 0, t1362, t1240, 0, t1352, t1275, t1334, t1350, t1335, t1410, t1183, t1189, t1086, -pkin(10) * t1102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1708, t1771, t1541, t1464, t1495, -t1708, -t1362, 0, t1241, 0, -t1458, -t1457, -t1367, t1458, t1363, -t1460, t1136, t1137, -pkin(5) * t1272, -pkin(5) * t1102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1507, t1506, t1444, -t1507, t1441, t1600, -t1240, -t1241, 0, 0, t1351, t1273, t1332, -t1349, t1333, t1409, t1712, t1713, t1695, t1727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1417, t1365, t1758, t1476, t1470, -t1476, 0, t1221, t1164, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1477, t1366, t1471, t1416, t1397, -t1477, -t1221, 0, t1165, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1458, t1457, t1367, -t1458, -t1363, t1460, -t1164, -t1165, 0, 0;];
m_new_reg  = t1;
