% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:25:13
% EndTime: 2019-03-08 20:25:31
% DurationCPUTime: 14.66s
% Computational Cost: add. (15144->565), mult. (35258->799), div. (0->0), fcn. (40940->12), ass. (0->451)
t718 = qJD(4) + qJD(5);
t565 = sin(pkin(12));
t569 = sin(qJ(2));
t804 = sin(pkin(6));
t805 = cos(pkin(12));
t646 = t805 * t804;
t824 = cos(qJ(2));
t656 = t804 * t824;
t494 = t565 * t656 + t569 * t646;
t568 = sin(qJ(4));
t571 = cos(qJ(4));
t806 = cos(pkin(6));
t453 = t494 * t571 + t568 * t806;
t567 = sin(qJ(5));
t608 = t494 * t568 - t571 * t806;
t823 = cos(qJ(5));
t668 = t567 * t453 + t823 * t608;
t570 = cos(qJ(6));
t674 = t569 * t804;
t493 = t565 * t674 - t646 * t824;
t566 = sin(qJ(6));
t442 = t823 * t453;
t592 = t567 * t608;
t858 = -t592 + t442;
t876 = t858 * t570;
t756 = t493 * t566 + t876;
t672 = t756 * t570;
t769 = t566 * t858;
t194 = -t493 * t570 + t769;
t801 = t194 * t566;
t892 = (t858 - t672 - t801) * t668;
t895 = qJD(1) * t892;
t821 = t858 * pkin(5);
t563 = t570 ^ 2;
t561 = t566 ^ 2;
t831 = t561 / 0.2e1;
t677 = t563 / 0.2e1 + t831;
t879 = t677 * t668;
t894 = -t821 / 0.2e1 - pkin(10) * t879;
t704 = t823 * t568;
t761 = t567 * t571;
t538 = t704 + t761;
t535 = t538 ^ 2;
t548 = t563 - t561;
t444 = t548 * t535;
t867 = 0.2e1 * t538;
t861 = t718 * t570;
t882 = t566 * t861;
t603 = t882 * t867;
t893 = qJD(2) * t444 + t603;
t891 = -pkin(5) / 0.2e1;
t714 = t823 * pkin(4);
t557 = -t714 - pkin(5);
t890 = -t557 / 0.2e1;
t708 = pkin(2) * t565 + pkin(8);
t865 = pkin(9) + t708;
t533 = t865 * t571;
t515 = t823 * t533;
t626 = t568 * t865;
t616 = t567 * t626;
t860 = t515 - t616;
t874 = t860 * t570;
t839 = -t874 / 0.2e1;
t842 = -t876 / 0.2e1;
t703 = t823 * t571;
t762 = t567 * t568;
t536 = -t703 + t762;
t554 = -pkin(2) * t805 - pkin(3);
t541 = -t571 * pkin(4) + t554;
t818 = t536 * pkin(5);
t654 = -t538 * pkin(10) + t818;
t581 = t541 + t654;
t875 = t860 * t566;
t258 = -t570 * t581 + t875;
t259 = t566 * t581 + t874;
t825 = t570 / 0.2e1;
t828 = t566 / 0.2e1;
t615 = t258 * t828 + t259 * t825;
t884 = t860 / 0.2e1;
t596 = t884 - t615;
t889 = t596 * t536;
t888 = t668 * t884;
t430 = (t831 - t563 / 0.2e1) * t538;
t345 = -qJD(2) * t430 + t882;
t887 = (-t258 + t875) * t538;
t886 = (-t259 + t874) * t538;
t840 = t858 / 0.2e1;
t885 = (t840 - t801 / 0.2e1 - t672 / 0.2e1) * t536;
t819 = t860 * pkin(5);
t883 = t538 * t861;
t667 = t567 * t533 + t823 * t626;
t881 = t667 * t566;
t880 = t667 * t570;
t752 = t561 + t563;
t878 = t752 * t668;
t837 = t667 / 0.2e1;
t877 = t837 * t858;
t788 = t860 * t667;
t816 = t538 * pkin(5);
t817 = t536 * pkin(10);
t454 = t816 + t817;
t757 = t570 * t454;
t289 = t757 + t881;
t764 = t566 * t454;
t290 = t764 - t880;
t607 = (t258 * t570 - t259 * t566) * t536;
t44 = (t289 * t570 + t290 * t566) * t538 + t607;
t826 = -t570 / 0.2e1;
t584 = (t194 * t826 + t756 * t828) * t536;
t347 = t493 * t536;
t768 = t566 * t347;
t779 = t494 * t570;
t280 = -t768 + t779;
t760 = t570 * t347;
t780 = t494 * t566;
t281 = t760 + t780;
t829 = -t566 / 0.2e1;
t614 = t280 * t829 + t281 * t825;
t41 = t584 - t614;
t783 = t41 * qJD(1);
t873 = t44 * qJD(2) - t783;
t822 = pkin(4) * t568;
t439 = t454 + t822;
t758 = t570 * t439;
t286 = t758 + t881;
t765 = t566 * t439;
t287 = -t880 + t765;
t42 = (t286 * t570 + t287 * t566) * t538 + t607;
t872 = t42 * qJD(2) - t783;
t346 = t493 * t538;
t871 = -t614 * pkin(10) + t346 * t891;
t815 = t567 * pkin(4);
t556 = pkin(10) + t815;
t870 = t346 * t890 + t614 * t556;
t600 = t703 / 0.2e1 - t762 / 0.2e1;
t835 = t536 / 0.2e1;
t219 = (t835 + t600) * t493;
t728 = t219 * qJD(1);
t869 = t667 * t718 - t728;
t220 = (-t536 / 0.2e1 + t600) * t493;
t868 = t220 * qJD(2) + t668 * t718;
t715 = t823 / 0.2e1;
t434 = t570 * t536;
t864 = t434 * t718;
t862 = t718 * t536;
t716 = -t536 ^ 2 + t535;
t562 = t568 ^ 2;
t564 = t571 ^ 2;
t859 = -t562 - t564;
t841 = t668 / 0.2e1;
t16 = (t841 - t879) * t538 + t885;
t799 = t287 * t570;
t800 = t286 * t566;
t613 = -t799 / 0.2e1 + t800 / 0.2e1;
t18 = (t837 - t613) * t538 + t889;
t247 = (0.1e1 - t752) * t538 * t536;
t727 = t247 * qJD(3);
t857 = t16 * qJD(1) + t18 * qJD(2) + t727;
t793 = t668 * t538;
t15 = t885 + (0.1e1 / 0.2e1 - t677) * t793;
t797 = t290 * t570;
t798 = t289 * t566;
t612 = t797 / 0.2e1 - t798 / 0.2e1;
t20 = (t837 + t612) * t538 + t889;
t856 = t15 * qJD(1) + t20 * qJD(2) + t727;
t707 = t823 * t536;
t772 = t538 * t567;
t775 = t538 * t556;
t777 = t536 * t557;
t854 = t818 / 0.2e1 - t775 / 0.2e1 - t777 / 0.2e1 + (-t707 / 0.2e1 + t772 / 0.2e1) * pkin(4);
t534 = t704 / 0.2e1 + t761 / 0.2e1;
t834 = -t538 / 0.2e1;
t218 = (t834 + t534) * t493;
t729 = t218 * qJD(1);
t741 = qJD(2) * t541;
t853 = -t538 * t741 + t729;
t375 = t536 * t822 + t538 * t541;
t852 = -qJD(2) * t375 + t729;
t763 = t566 * t570;
t700 = qJD(2) * t763;
t195 = t430 * t718 + t535 * t700;
t391 = -0.2e1 * t538 * t700 + t548 * t718;
t848 = pkin(5) / 0.2e1;
t847 = -pkin(10) / 0.2e1;
t846 = pkin(10) / 0.2e1;
t845 = -t194 / 0.2e1;
t844 = -t289 / 0.2e1;
t843 = t290 / 0.2e1;
t658 = -t442 / 0.2e1;
t657 = -t515 / 0.2e1;
t833 = t538 / 0.2e1;
t832 = t557 / 0.2e1;
t827 = t567 / 0.2e1;
t40 = t584 + t614;
t814 = t40 * qJD(2);
t681 = -t668 / 0.2e1 + t841;
t652 = t681 * t536;
t680 = t840 - t858 / 0.2e1;
t52 = -t538 * t680 - t652;
t813 = t52 * qJD(4);
t678 = t884 - t860 / 0.2e1;
t679 = -t667 / 0.2e1 + t837;
t83 = -t536 * t678 + t538 * t679;
t812 = t83 * qJD(4);
t811 = t41 * qJD(2);
t810 = pkin(4) * qJD(5);
t809 = qJD(4) * pkin(4);
t691 = t346 * t835;
t69 = t538 * t614 - t691;
t803 = qJD(1) * t69;
t802 = t194 * t536;
t794 = t668 * t346;
t792 = t346 * t667;
t790 = t346 * t566;
t789 = t346 * t570;
t358 = t493 * t568;
t778 = t52 * qJD(2);
t776 = t536 * t567;
t774 = t538 * t557;
t773 = t538 * t566;
t771 = t538 * t570;
t770 = t561 * t536;
t432 = t566 * t536;
t755 = t718 * t432;
t736 = qJD(5) * t566;
t739 = qJD(4) * t566;
t753 = (t736 + t739) * t538;
t143 = t347 * t833 - t691;
t751 = qJD(1) * t143;
t361 = t716 * t566;
t749 = qJD(2) * t361;
t362 = t716 * t570;
t748 = qJD(2) * t362;
t376 = -t536 * t541 + t538 * t822;
t746 = qJD(2) * t376;
t743 = qJD(2) * t536;
t742 = qJD(2) * t538;
t740 = qJD(2) * t571;
t738 = qJD(4) * t570;
t737 = qJD(5) * t541;
t735 = qJD(5) * t570;
t734 = qJD(6) * t432;
t733 = qJD(6) * t566;
t732 = qJD(6) * t570;
t128 = (-t453 * t571 - t568 * t608 + t494) * t493;
t731 = t128 * qJD(1);
t726 = t716 * qJD(2);
t725 = t430 * qJD(6);
t410 = t432 * qJD(2);
t417 = t434 * qJD(2);
t724 = t493 * qJD(2);
t723 = t494 * qJD(2);
t722 = t534 * qJD(2);
t549 = t564 - t562;
t721 = t549 * qJD(2);
t720 = t568 * qJD(4);
t719 = t571 * qJD(4);
t717 = t18 * qJD(4) + t20 * qJD(5);
t713 = t567 * t809;
t712 = t567 * t810;
t709 = t815 / 0.2e1;
t706 = t823 * t561;
t705 = t823 * t563;
t702 = t536 * t741;
t699 = t538 * t733;
t698 = t538 * t732;
t697 = t536 * t742;
t696 = t554 * t568 * qJD(2);
t695 = t554 * t740;
t552 = t566 * t732;
t694 = t568 * t719;
t309 = t668 * t828;
t310 = t668 * t825;
t690 = t790 / 0.2e1;
t689 = -t789 / 0.2e1;
t688 = -t773 / 0.2e1;
t687 = t771 / 0.2e1;
t684 = t769 / 0.2e1;
t683 = -t768 / 0.2e1;
t682 = -t760 / 0.2e1;
t676 = t823 * qJD(4);
t675 = t823 * qJD(5);
t673 = t756 * t536;
t670 = t752 * t536;
t448 = t718 * t538;
t664 = -t714 / 0.2e1;
t661 = t535 * t552;
t660 = t566 * t715;
t659 = t570 * t715;
t655 = t718 * t815;
t653 = qJD(4) * t708;
t649 = t677 * t556;
t648 = t756 * t834;
t647 = t494 / 0.2e1 - t793 / 0.2e1;
t645 = t536 * t448;
t643 = t538 * t862;
t617 = (t845 + t684) * t538;
t26 = t689 + t617;
t58 = t887 + (t289 - t881) * t536;
t639 = t26 * qJD(1) + t58 * qJD(2);
t591 = t833 * t858 - t652;
t579 = t194 * t834 + t566 * t591;
t28 = t689 + t579;
t56 = t887 + (t286 - t881) * t536;
t638 = t28 * qJD(1) + t56 * qJD(2);
t589 = t687 * t858 + t648;
t31 = t690 + t589;
t59 = t886 + (-t290 - t880) * t536;
t637 = t31 * qJD(1) + t59 * qJD(2);
t578 = t570 * t591 + t648;
t33 = t690 + t578;
t57 = t886 + (-t287 - t880) * t536;
t636 = t33 * qJD(1) + t57 * qJD(2);
t635 = t52 * qJD(1);
t53 = -t536 * t680 + t538 * t681;
t634 = t53 * qJD(1) + t83 * qJD(2);
t633 = t15 * qJD(3) + t895;
t632 = t16 * qJD(3) + t895;
t21 = -t194 * t280 + t281 * t756 - t794;
t631 = t21 * qJD(1) + t69 * qJD(3);
t630 = t53 * qJD(3);
t629 = t799 - t800;
t628 = t797 - t798;
t627 = -t775 - t777;
t124 = t258 * t536 - t667 * t773;
t64 = t682 - t802 / 0.2e1 - t647 * t566;
t625 = qJD(1) * t64 - qJD(2) * t124;
t125 = -t259 * t536 + t667 * t771;
t63 = t683 + t673 / 0.2e1 + t647 * t570;
t624 = qJD(1) * t63 - qJD(2) * t125;
t136 = t842 + t876 / 0.2e1;
t619 = t890 + t664;
t576 = (-t556 / 0.2e1 + t709 + t846) * t538 + (t891 + t619) * t536;
t78 = t839 + t874 / 0.2e1 + t576 * t566;
t623 = qJD(1) * t136 + qJD(2) * t78;
t62 = t347 * t858 + t493 * t494 - t794;
t622 = t62 * qJD(1) + t143 * qJD(3);
t621 = t538 * (-qJD(6) - t743);
t317 = t658 + t442 / 0.2e1;
t399 = t657 + t515 / 0.2e1;
t620 = qJD(1) * t317 + qJD(2) * t399;
t618 = t817 / 0.2e1 + t816 / 0.2e1;
t611 = t877 + t888;
t610 = t556 * t835 - t774 / 0.2e1;
t609 = t570 * t621;
t363 = qJD(6) * t534 + t697;
t605 = t848 + t619;
t604 = t454 / 0.2e1 + t618;
t602 = t346 * t715 + t347 * t827;
t601 = t706 + t705;
t574 = -t615 * t668 + t286 * t845 + t756 * t287 / 0.2e1 + t611;
t3 = t574 - t870;
t34 = -t258 * t286 + t259 * t287 + t788;
t599 = t3 * qJD(1) + t34 * qJD(2) + t18 * qJD(3);
t39 = -t258 * t289 + t259 * t290 + t788;
t575 = t194 * t844 + t596 * t668 + t756 * t843 + t877;
t5 = t575 + t871;
t598 = t5 * qJD(1) + t39 * qJD(2) + t20 * qJD(3);
t595 = t439 / 0.2e1 + t610;
t115 = t541 * t822;
t580 = t667 * t840 - t611 + t888;
t13 = (-t358 / 0.2e1 + t602) * pkin(4) + t580;
t594 = -t13 * qJD(1) + t115 * qJD(2) + t83 * qJD(3);
t532 = t601 * pkin(4);
t55 = (t843 - t287 / 0.2e1) * t570 + (t844 + t286 / 0.2e1) * t566;
t593 = -qJD(2) * t55 - qJD(4) * t532;
t590 = t705 / 0.2e1 + t706 / 0.2e1;
t120 = t604 * t566;
t481 = t605 * t570;
t588 = pkin(5) * t735 - qJD(2) * t120 + qJD(4) * t481;
t122 = t604 * t570;
t480 = t605 * t566;
t587 = pkin(5) * t736 + qJD(2) * t122 + qJD(4) * t480;
t111 = t566 * t595 + t570 * t679;
t135 = t681 * t570;
t586 = -qJD(1) * t135 - qJD(2) * t111 - t557 * t738;
t113 = t566 * t679 - t570 * t595;
t131 = t681 * t566;
t585 = -qJD(1) * t131 - qJD(2) * t113 - t557 * t739;
t133 = t680 * t566;
t81 = t566 * t678 + t570 * t576;
t583 = -qJD(1) * t133 - qJD(2) * t81 - t566 * t713;
t103 = (pkin(4) * t590 + t832 + t848) * t538 + (pkin(10) * t677 - t649 + t709) * t536;
t572 = t612 * t556 + (t258 * t660 + t259 * t659 + t667 * t827) * pkin(4) + t860 * t832;
t12 = t819 / 0.2e1 + t613 * pkin(10) + t572;
t419 = (t556 * t601 + t557 * t567) * pkin(4);
t573 = (t194 * t660 + t659 * t756 + t668 * t827) * pkin(4) - t668 * t649 + t858 * t832;
t8 = t573 - t894;
t582 = t8 * qJD(1) + t12 * qJD(2) + t103 * qJD(3) + t419 * qJD(4);
t553 = t568 * t740;
t547 = t566 * t712;
t543 = t548 * qJD(6);
t528 = t563 * t536;
t525 = t532 * qJD(5);
t483 = pkin(5) * t826 + t557 * t825 + t570 * t664;
t482 = pkin(5) * t829 + t557 * t828 + t566 * t664;
t440 = t718 * t534;
t416 = t434 * qJD(6);
t374 = t417 + t732;
t373 = -t410 - t733;
t360 = t493 * t571;
t339 = 0.2e1 * t657 + t616;
t337 = 0.2e1 * t566 * t609;
t336 = t789 / 0.2e1;
t335 = -t790 / 0.2e1;
t321 = t563 * t697 - t725;
t320 = t561 * t697 + t725;
t311 = t718 * (-t528 - t770);
t296 = t734 - t883;
t226 = t416 - t748;
t225 = -t734 + t749;
t221 = (t534 + t833) * t493;
t213 = t221 * qJD(2);
t208 = t219 * qJD(2);
t206 = t218 * qJD(2);
t179 = 0.2e1 * t658 + t592;
t161 = -t725 + (-t563 * t742 - t882) * t536;
t160 = t725 + (-t561 * t742 + t882) * t536;
t147 = t748 + t753;
t146 = -t749 + t883;
t144 = (-qJD(6) + t743) * t763 * t867 + t718 * (-t528 + t770);
t141 = -t668 * t826 + t310;
t140 = 0.2e1 * t310;
t139 = -t668 * t829 + t309;
t138 = 0.2e1 * t309;
t137 = 0.2e1 * t842;
t132 = t828 * t858 + t684;
t123 = t881 + t757 / 0.2e1 - t618 * t570;
t121 = t880 - t764 / 0.2e1 + t618 * t566;
t114 = t881 + t758 / 0.2e1 - t610 * t570;
t112 = t880 - t765 / 0.2e1 + t610 * t566;
t110 = t416 + t753;
t102 = t774 / 0.2e1 - t816 / 0.2e1 - t536 * t649 + (t776 / 0.2e1 + t590 * t538) * pkin(4) - t752 * t817 / 0.2e1;
t80 = t854 * t570 + t771 * t847 + t875;
t79 = pkin(10) * t688 + t854 * t566 + 0.2e1 * t839;
t66 = -t673 / 0.2e1 + t668 * t687 + t683 + t779 / 0.2e1;
t65 = t802 / 0.2e1 + t668 * t688 + t682 - t780 / 0.2e1;
t60 = -0.2e1 * t879;
t54 = t612 - t613;
t32 = t335 + t578;
t30 = t335 + t589;
t29 = t336 + t579;
t27 = t336 + t617;
t14 = -t580 + (t358 / 0.2e1 + t602) * pkin(4);
t11 = t799 * t846 + t800 * t847 - t819 / 0.2e1 + t572;
t7 = t573 + t894;
t6 = qJD(2) * t143 + qJD(4) * t53;
t4 = t575 - t871;
t2 = t574 + t870;
t1 = qJD(2) * t69 + qJD(4) * t16 + qJD(5) * t15;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t128, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t62, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t21 + t718 * t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t674, -qJD(2) * t656, 0, 0, 0, 0, 0, 0, 0, 0, -t723, t724, 0 (-t493 * t565 - t494 * t805) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, t358 * qJD(4) - t571 * t723, qJD(4) * t360 + t568 * t723, t859 * t724, t731 + (t493 * t708 * t859 + t494 * t554) * qJD(2), 0, 0, 0, 0, 0, 0, t221 * t718 + t536 * t723, t220 * t718 + t538 * t723 (-t346 * t538 - t347 * t536) * qJD(2) + t813 (t347 * t860 + t494 * t541 - t792) * qJD(2) + t14 * qJD(4) + t622, 0, 0, 0, 0, 0, 0 (t280 * t536 - t346 * t773) * qJD(2) + t29 * qJD(4) + t27 * qJD(5) + t66 * qJD(6) (-t281 * t536 - t346 * t771) * qJD(2) + t32 * qJD(4) + t30 * qJD(5) + t65 * qJD(6) (-t280 * t570 - t281 * t566) * t742 + t718 * t40 (-t258 * t280 + t259 * t281 - t792) * qJD(2) + t2 * qJD(4) + t4 * qJD(5) + t631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t358 - qJD(4) * t453, t360 * qJD(2) + qJD(4) * t608, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t858 + qJD(5) * t179 + t213, t868, t778, t14 * qJD(2) + (-t567 * t668 - t823 * t858) * t809 + t630, 0, 0, 0, 0, 0, 0, qJD(2) * t29 + qJD(5) * t137 + qJD(6) * t139 - t738 * t858, qJD(2) * t32 + qJD(5) * t132 + qJD(6) * t141 + t739 * t858, -qJD(4) * t878 + t60 * qJD(5) + t814, t2 * qJD(2) + (-t556 * t878 + t557 * t858) * qJD(4) + t7 * qJD(5) + t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t179 - qJD(5) * t858 + t213, t868, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t27 + qJD(4) * t137 + qJD(6) * t138 - t735 * t858, qJD(2) * t30 + qJD(4) * t132 + qJD(6) * t140 + t736 * t858, t60 * qJD(4) - qJD(5) * t878 + t814, t4 * qJD(2) + t7 * qJD(4) + (-pkin(10) * t878 - t821) * qJD(5) + t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66 * qJD(2) + t139 * qJD(4) + t138 * qJD(5) - qJD(6) * t756, qJD(2) * t65 + qJD(4) * t141 + qJD(5) * t140 + qJD(6) * t194, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t731, 0, 0, 0, 0, 0, 0, -t718 * t218, -t718 * t219, t813, -qJD(4) * t13 - t622, 0, 0, 0, 0, 0, 0, qJD(4) * t28 + qJD(5) * t26 - qJD(6) * t63, qJD(4) * t33 + qJD(5) * t31 - qJD(6) * t64, t41 * t718, qJD(4) * t3 + qJD(5) * t5 - t631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t694, t549 * qJD(4), 0, -t694, 0, 0, t554 * t720, t554 * t719, 0, 0, -t645, -t718 * t716, 0, t643, 0, 0, qJD(4) * t375 + t538 * t737, qJD(4) * t376 - t536 * t737, 0, qJD(4) * t115, -t563 * t645 - t661, -qJD(6) * t444 + t536 * t603, t362 * t718 - t536 * t699, -t561 * t645 + t661, -t361 * t718 - t536 * t698, t643, qJD(4) * t56 + qJD(5) * t58 + qJD(6) * t125, qJD(4) * t57 + qJD(5) * t59 + qJD(6) * t124, -qJD(4) * t42 - qJD(5) * t44, qJD(4) * t34 + qJD(5) * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t751 + t812, 0, 0, 0, 0, 0, 0, 0, 0, 0, t717 - t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553, t721, t719, -t553, -t720, 0, -t571 * t653 + t696, t568 * t653 + t695, 0, 0, -t697, -t726, -t862, t697, -t448, 0, -qJD(4) * t860 + qJD(5) * t339 - t852, t746 + t869 (t707 - t772) * t809 + t635 (-t567 * t667 - t823 * t860) * t809 + t594, t161, t144, t147, t160, t146, t363 (t566 * t627 - t874) * qJD(4) + t79 * qJD(5) + t114 * qJD(6) + t638 (t570 * t627 + t875) * qJD(4) + t80 * qJD(5) + t112 * qJD(6) + t636, qJD(4) * t629 + t54 * qJD(5) - t872 (t556 * t629 + t557 * t860) * qJD(4) + t11 * qJD(5) + t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t697, -t726, -t862, t697, -t448, 0, qJD(4) * t339 - qJD(5) * t860 - t853, -t702 + t869, 0, 0, t161, t144, t147, t160, t146, t363, t79 * qJD(4) + (t566 * t654 - t874) * qJD(5) + t123 * qJD(6) + t639, t80 * qJD(4) + (t570 * t654 + t875) * qJD(5) + t121 * qJD(6) + t637, t54 * qJD(4) + qJD(5) * t628 - t873, t11 * qJD(4) + (pkin(10) * t628 - t819) * qJD(5) + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, -t893, t566 * t621, t195, t609, t440, qJD(4) * t114 + qJD(5) * t123 - qJD(6) * t259 - t624, qJD(4) * t112 + qJD(5) * t121 + qJD(6) * t258 - t625, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t751 + t812, 0, 0, 0, 0, 0, 0, 0, 0, 0, t717 + t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t718 * t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, -t719, 0, 0, 0, 0, 0, 0, 0, 0, -t448, t862, 0 (-t538 * t823 - t776) * t809 + t634, 0, 0, 0, 0, 0, 0, t296, t110, t311 (-t556 * t670 + t774) * qJD(4) + t102 * qJD(5) + t857; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, t862, 0, 0, 0, 0, 0, 0, 0, 0, t296, t110, t311, t102 * qJD(4) + (-pkin(10) * t670 - t816) * qJD(5) + t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t698 + t755, t699 + t864, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t317 + t206, t208, -t778, qJD(2) * t13 - t630, 0, 0, 0, 0, 0, 0, -qJD(2) * t28 + qJD(5) * t136 + qJD(6) * t131, -qJD(2) * t33 + qJD(5) * t133 + qJD(6) * t135, -t811, -qJD(2) * t3 + qJD(5) * t8 - t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t553, -t721, 0, t553, 0, 0, -t696, -t695, 0, 0, t697, t726, 0, -t697, 0, 0, qJD(5) * t399 + t852, t728 - t746, -t635, -t594, t321, t337, t226, t320, t225, -t363, qJD(5) * t78 + qJD(6) * t113 - t638, qJD(5) * t81 + qJD(6) * t111 - t636, qJD(5) * t55 + t872, qJD(5) * t12 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t634, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t103 - t857; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, -pkin(4) * t675, 0, 0, t552, t543, 0, -t552, 0, 0, t557 * t733 - t570 * t712, t557 * t732 + t547, t525, t419 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t655 + t620 (-t676 - t675) * pkin(4), 0, 0, t552, t543, 0, -t552, 0, 0, qJD(6) * t482 - t570 * t655 + t623, qJD(6) * t483 + t547 - t583, t525 - t593 (-pkin(5) * t567 + pkin(10) * t601) * t810 + t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t391, t374, -t345, t373, -t722, qJD(5) * t482 - t556 * t732 - t585, qJD(5) * t483 + t556 * t733 - t586, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t317 + t206, t208, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t26 - qJD(4) * t136, -qJD(2) * t31 - qJD(4) * t133, -t811, -qJD(2) * t5 - qJD(4) * t8 - t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t697, t726, 0, -t697, 0, 0, -qJD(4) * t399 + t853, t728 + t702, 0, 0, t321, t337, t226, t320, t225, -t363, -qJD(4) * t78 - qJD(6) * t122 - t639, -qJD(4) * t81 + qJD(6) * t120 - t637, -qJD(4) * t55 + t873, -qJD(4) * t12 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t103 - t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620 + t713, pkin(4) * t676, 0, 0, t552, t543, 0, -t552, 0, 0, -qJD(6) * t480 + t570 * t713 - t623, -qJD(6) * t481 + t583, t593, -t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, t543, 0, -t552, 0, 0, -pkin(5) * t733, -pkin(5) * t732, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t391, t374, -t345, t373, -t722, -pkin(10) * t732 - t587, pkin(10) * t733 - t588, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t63 - qJD(4) * t131, qJD(2) * t64 - qJD(4) * t135, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t893, t566 * t697 - t864, -t195, t570 * t697 + t755, t440, -qJD(4) * t113 + qJD(5) * t122 + t624, -qJD(4) * t111 - qJD(5) * t120 + t625, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, -t391, -t417, t345, t410, t722, qJD(5) * t480 + t585, qJD(5) * t481 + t586, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, -t391, -t417, t345, t410, t722, t587, t588, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
