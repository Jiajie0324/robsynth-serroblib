% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRRP5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:23:07
% EndTime: 2019-03-10 01:24:16
% DurationCPUTime: 47.80s
% Computational Cost: add. (31008->984), mult. (64822->1273), div. (0->0), fcn. (70913->8), ass. (0->732)
t696 = sin(qJ(3));
t698 = cos(qJ(4));
t980 = t698 * t696;
t695 = sin(qJ(4));
t699 = cos(qJ(3));
t985 = t695 * t699;
t792 = t980 + t985;
t1123 = pkin(8) + pkin(9);
t641 = t1123 * t696;
t642 = t1123 * t699;
t842 = t698 * t641 + t695 * t642;
t1136 = -pkin(10) * t792 - t842;
t694 = sin(qJ(5));
t1146 = t694 * t1136;
t1076 = cos(qJ(5));
t630 = t698 * t642;
t987 = t695 * t641;
t545 = t630 - t987;
t979 = t698 * t699;
t986 = t695 * t696;
t622 = -t979 + t986;
t466 = -pkin(10) * t622 + t545;
t1185 = t1076 * t466;
t308 = t1185 + t1146;
t843 = -t1076 * t622 - t694 * t792;
t253 = qJ(6) * t843 + t308;
t1115 = t253 / 0.2e1;
t1099 = -t843 / 0.2e1;
t416 = -t1076 * t792 + t694 * t622;
t1166 = t416 / 0.2e1;
t697 = sin(qJ(2));
t589 = t792 * t697;
t1070 = pkin(10) * t589;
t1071 = pkin(7) * t696;
t700 = cos(qJ(2));
t819 = -pkin(2) * t700 - t697 * pkin(8);
t636 = -pkin(1) + t819;
t621 = t699 * t636;
t982 = t697 * t699;
t825 = -pkin(9) * t982 + t621;
t515 = (-pkin(3) - t1071) * t700 + t825;
t975 = t699 * t700;
t909 = pkin(7) * t975;
t575 = t696 * t636 + t909;
t984 = t696 * t697;
t536 = -pkin(9) * t984 + t575;
t522 = t698 * t536;
t357 = t695 * t515 + t522;
t314 = t357 - t1070;
t1005 = t694 * t314;
t1075 = pkin(4) * t700;
t492 = t698 * t515;
t989 = t695 * t536;
t356 = -t492 + t989;
t588 = t695 * t984 - t697 * t979;
t581 = t588 * pkin(10);
t313 = -t356 + t581;
t300 = -t1075 + t313;
t281 = t1076 * t300;
t163 = -t281 + t1005;
t365 = t1076 * t588 + t694 * t589;
t429 = t365 * qJ(6);
t139 = -t163 + t429;
t133 = -pkin(5) * t700 + t139;
t844 = -t1076 * t589 + t694 * t588;
t1052 = qJ(6) * t844;
t1007 = t694 * t300;
t301 = t1076 * t314;
t164 = t301 + t1007;
t140 = t164 + t1052;
t1207 = -t1099 * t133 - t1166 * t140;
t442 = -t1185 / 0.2e1;
t1197 = t442 - t1146 / 0.2e1;
t1205 = 0.2e1 * t1197;
t1077 = t700 / 0.2e1;
t1204 = t1077 * t308;
t828 = t1185 / 0.2e1;
t1199 = t828 + t442;
t1203 = qJD(2) * t1199;
t1202 = qJD(4) * t1199;
t1120 = t140 / 0.2e1;
t1145 = t1076 * t1136;
t1187 = t694 * t466;
t1188 = t1145 - t1187;
t1196 = t416 * qJ(6) + t1188;
t1201 = t1120 * t1196;
t1122 = -t133 / 0.2e1;
t1198 = t253 * t1122;
t911 = qJD(3) + qJD(4);
t1195 = qJD(4) + qJD(5);
t1165 = -t1145 / 0.2e1;
t1174 = t1165 + t1187 / 0.2e1;
t1194 = 0.2e1 * t1174;
t1078 = -t700 / 0.2e1;
t829 = t1145 / 0.2e1;
t173 = t1165 + t829;
t1193 = qJD(5) * t173;
t1191 = t173 * qJD(2);
t1184 = qJD(5) + t911;
t1190 = qJD(3) * t1194;
t1189 = qJD(3) * t1205;
t1162 = t416 * t700;
t591 = t792 * t700;
t571 = t1076 * t591;
t592 = t622 * t700;
t994 = t694 * t592;
t808 = -t571 / 0.2e1 + t994 / 0.2e1;
t1167 = t1162 / 0.2e1 + t808;
t1181 = qJD(1) * t1167;
t926 = qJD(5) * t416;
t152 = t416 * t911 - t1181 + t926;
t1126 = t365 ^ 2;
t444 = t844 ^ 2;
t1172 = t444 - t1126;
t1180 = qJD(1) * t1172;
t1168 = -t1162 / 0.2e1 + t808;
t1179 = qJD(2) * t1168;
t1125 = t416 ^ 2;
t498 = t843 ^ 2;
t1171 = t498 - t1125;
t1178 = qJD(2) * t1171;
t927 = qJD(5) * t843;
t1147 = t911 * t843 + t927;
t1152 = t843 * t700;
t884 = t1076 * t592;
t995 = t694 * t591;
t734 = -t995 / 0.2e1 - t884 / 0.2e1;
t1158 = t1152 / 0.2e1 + t734;
t1170 = qJD(1) * t1158;
t153 = -t1170 + t1147;
t1084 = -t792 / 0.2e1;
t682 = -pkin(3) * t699 - pkin(2);
t1156 = t682 / 0.2e1;
t958 = pkin(3) * t984 + t697 * pkin(7);
t1177 = t1078 * t545 + t1084 * t958 + t1156 * t588;
t912 = t700 * qJD(1);
t167 = qJD(2) * t1167 + t365 * t912;
t1176 = -t622 / 0.2e1;
t1159 = -t1152 / 0.2e1 + t734;
t1169 = t1159 * qJD(2);
t1058 = t697 * pkin(3);
t1057 = t700 * pkin(8);
t1059 = t697 * pkin(2);
t643 = -t1057 + t1059;
t631 = t699 * t643;
t670 = pkin(7) * t984;
t521 = -pkin(9) * t975 + t1058 + t631 + t670;
t495 = t698 * t521;
t628 = t696 * t643;
t908 = pkin(7) * t982;
t983 = t696 * t700;
t539 = -pkin(9) * t983 + t628 - t908;
t988 = t695 * t539;
t809 = t495 / 0.2e1 - t988 / 0.2e1;
t210 = t809 + t1177;
t213 = t809 - t1177;
t168 = qJD(2) * t1158 + t844 * t912;
t1066 = t365 * pkin(5);
t1064 = t416 * pkin(5);
t1164 = t365 * t911;
t824 = -pkin(4) * t589 - t958;
t344 = t824 * t365;
t917 = t365 * qJD(5);
t1157 = t842 * t1078 - t589 * t1156 + t1176 * t958;
t1072 = pkin(5) * t843;
t1074 = pkin(5) * t844;
t771 = t824 * t844;
t939 = qJD(2) * t416;
t1151 = t843 * t939;
t945 = qJD(1) * t365;
t1149 = t844 * t945;
t1100 = t843 / 0.2e1;
t1006 = t694 * t313;
t165 = -t301 - t1006;
t143 = t165 - t1052;
t888 = t1076 * t313;
t166 = t888 - t1005;
t144 = t429 + t166;
t1148 = -t1100 * t144 - t1166 * t143 + t1207;
t494 = t695 * t521;
t530 = t698 * t539;
t860 = -t494 / 0.2e1 - t530 / 0.2e1;
t212 = t860 + t1157;
t211 = t860 - t1157;
t1143 = t1196 / 0.2e1;
t1140 = t844 * t911;
t862 = t1143 - t1196 / 0.2e1;
t1139 = t862 * t140;
t580 = pkin(4) * t622 + t682;
t1021 = t580 * t365;
t770 = t824 * t416;
t1138 = t770 / 0.2e1 - t1021 / 0.2e1;
t1020 = t580 * t844;
t769 = t824 * t843;
t1137 = -t769 / 0.2e1 + t1020 / 0.2e1;
t553 = t694 * pkin(4);
t1135 = qJD(4) * t553;
t902 = qJD(5) * t553;
t889 = t698 * pkin(3) + pkin(4);
t644 = t1076 * t889;
t992 = t694 * t695;
t602 = pkin(3) * t992 - t644;
t593 = pkin(5) - t602;
t1091 = -t593 / 0.2e1;
t1133 = -t602 / 0.2e1 + t1091;
t910 = pkin(7) * t983;
t535 = t825 - t910;
t990 = t695 * t535;
t374 = -t522 - t990;
t322 = t374 + t1070;
t315 = t1076 * t322;
t1111 = t315 / 0.2e1;
t1113 = t301 / 0.2e1;
t1132 = t1111 + t1113;
t918 = qJD(5) * t844;
t1129 = -t918 - t1140;
t690 = t696 ^ 2;
t692 = t699 ^ 2;
t662 = t692 - t690;
t913 = t697 * qJD(1);
t881 = t699 * t913;
t1128 = qJD(2) * t662 - 0.2e1 * t696 * t881;
t1127 = t911 * t842;
t1124 = pkin(5) / 0.2e1;
t452 = -t884 - t995;
t959 = t530 + t494;
t316 = -pkin(10) * t591 + t959;
t1004 = t694 * t316;
t845 = t495 - t988;
t304 = pkin(4) * t697 + pkin(10) * t592 + t845;
t287 = t1076 * t304;
t848 = t287 - t1004;
t138 = pkin(5) * t697 - qJ(6) * t452 + t848;
t1121 = t138 / 0.2e1;
t1119 = -t253 / 0.2e1;
t1114 = -t301 / 0.2e1;
t1112 = t313 / 0.2e1;
t981 = t698 * t535;
t375 = t981 - t989;
t323 = t375 + t581;
t1110 = -t323 / 0.2e1;
t342 = -t824 - t1074;
t1109 = t342 / 0.2e1;
t397 = t580 - t1072;
t1108 = t397 / 0.2e1;
t1105 = -t365 / 0.2e1;
t1102 = -t492 / 0.2e1;
t1097 = -t416 / 0.2e1;
t1096 = -t515 / 0.2e1;
t865 = -t522 / 0.2e1;
t1095 = t580 / 0.2e1;
t1060 = t792 * pkin(4);
t687 = t696 * pkin(3);
t582 = t687 + t1060;
t1094 = -t582 / 0.2e1;
t1093 = t588 / 0.2e1;
t1092 = -t589 / 0.2e1;
t1090 = t593 / 0.2e1;
t820 = t694 * t889;
t883 = t1076 * t695;
t603 = pkin(3) * t883 + t820;
t1088 = -t603 / 0.2e1;
t1087 = t603 / 0.2e1;
t991 = t694 * t698;
t610 = (t883 + t991) * pkin(3);
t1086 = -t610 / 0.2e1;
t882 = t1076 * t698;
t611 = (t882 - t992) * pkin(3);
t1085 = t611 / 0.2e1;
t864 = -t630 / 0.2e1;
t905 = t1076 * pkin(4);
t681 = t905 + pkin(5);
t1083 = -t681 / 0.2e1;
t1082 = t681 / 0.2e1;
t1081 = -t694 / 0.2e1;
t1080 = t696 / 0.2e1;
t1079 = -t697 / 0.2e1;
t1073 = pkin(5) * t452;
t1068 = t143 * pkin(5);
t1067 = t253 * pkin(5);
t448 = t571 - t994;
t1065 = t448 * pkin(5);
t1063 = t588 * pkin(4);
t1062 = t591 * pkin(4);
t1061 = t610 * pkin(5);
t1056 = pkin(3) * qJD(3);
t1055 = pkin(3) * qJD(4);
t1054 = pkin(5) * qJD(5);
t1053 = pkin(5) * qJD(6);
t974 = t133 - t139;
t19 = t974 * t844;
t1050 = qJD(1) * t19;
t26 = -t1066 * t342 - t140 * t974;
t1049 = qJD(1) * t26;
t41 = t133 * t365 + t140 * t844;
t1048 = qJD(1) * t41;
t86 = -t1063 * t844 + t165 * t700 - t344;
t1047 = qJD(1) * t86;
t87 = t1063 * t365 + t166 * t700 - t771;
t1046 = qJD(1) * t87;
t1002 = t694 * t323;
t183 = t315 - t1002;
t671 = pkin(3) * t982;
t855 = t671 - t1063;
t88 = t183 * t700 + t844 * t855 - t344;
t1045 = qJD(1) * t88;
t1003 = t694 * t322;
t887 = t1076 * t323;
t184 = t887 + t1003;
t89 = t184 * t700 - t365 * t855 - t771;
t1044 = qJD(1) * t89;
t286 = t694 * t304;
t306 = t1076 * t316;
t967 = t306 + t286;
t142 = -qJ(6) * t448 + t967;
t20 = -t133 * t452 + t138 * t365 - t140 * t448 + t142 * t844;
t1041 = t20 * qJD(1);
t794 = -t133 * t844 + t140 * t365;
t21 = t143 * t365 + t144 * t844 + t794;
t1040 = t21 * qJD(1);
t668 = pkin(3) * t983;
t689 = t700 * pkin(7);
t632 = t689 + t668;
t520 = t632 + t1062;
t343 = t520 + t1065;
t22 = t133 * t138 + t140 * t142 + t342 * t343;
t1039 = t22 * qJD(1);
t150 = t183 - t1052;
t151 = t429 + t184;
t23 = t150 * t365 + t151 * t844 + t794;
t1038 = t23 * qJD(1);
t818 = -t1063 - t1066;
t24 = t133 * t143 + t140 * t144 + t342 * t818;
t1037 = t24 * qJD(1);
t349 = t671 + t818;
t25 = t133 * t150 + t140 * t151 + t342 * t349;
t1035 = t25 * qJD(1);
t1033 = t342 * t416;
t1032 = t844 * t843;
t1031 = t365 * t397;
t46 = t163 * t697 + t448 * t824 + t520 * t844 + t700 * t848;
t1030 = t46 * qJD(1);
t47 = -t164 * t697 - t365 * t520 - t452 * t824 + t700 * t967;
t1029 = t47 * qJD(1);
t1025 = t416 * t365;
t1019 = t593 * t844;
t1018 = t593 * t843;
t1017 = t602 * t700;
t1016 = t603 * t365;
t1015 = t603 * t416;
t1014 = t603 * t700;
t1013 = t610 * t700;
t1012 = t611 * t700;
t1011 = t681 * t844;
t1010 = t681 * t843;
t978 = t699 * t622;
t977 = t699 * t792;
t691 = t697 ^ 2;
t976 = t699 * t691;
t276 = t588 * t792 + t589 * t622;
t972 = t911 * t276;
t971 = -t1007 / 0.2e1 + t1114;
t869 = t1005 / 0.2e1;
t970 = -t281 / 0.2e1 + t869;
t969 = -t1006 / 0.2e1 + t1114;
t968 = t869 - t888 / 0.2e1;
t371 = t1084 * t589 + t622 * t1093;
t966 = t911 * t371;
t578 = -t1063 / 0.2e1;
t965 = -t1066 / 0.2e1 + t578;
t609 = t1060 / 0.2e1;
t960 = -t1064 / 0.2e1 + t609;
t693 = t700 ^ 2;
t663 = t693 - t691;
t108 = -t163 * t700 - t771;
t957 = qJD(1) * t108;
t109 = -t164 * t700 - t344;
t956 = qJD(1) * t109;
t891 = pkin(3) * t1077;
t822 = t891 + t535 / 0.2e1;
t226 = t698 * t822 + t1102;
t955 = qJD(1) * t226;
t528 = t958 * t588;
t245 = t374 * t700 - t589 * t671 + t528;
t954 = qJD(1) * t245;
t853 = t958 * t589;
t246 = t375 * t700 - t588 * t671 - t853;
t953 = qJD(1) * t246;
t268 = -t356 * t700 - t853;
t952 = qJD(1) * t268;
t269 = -t357 * t700 + t528;
t951 = qJD(1) * t269;
t282 = -t448 * t700 - t697 * t844;
t950 = qJD(1) * t282;
t283 = t365 * t697 + t452 * t700;
t949 = qJD(1) * t283;
t453 = t589 * t697 - t591 * t700;
t944 = qJD(1) * t453;
t454 = t588 * t697 - t592 * t700;
t943 = qJD(1) * t454;
t574 = -t621 + t910;
t516 = -t1071 * t691 - t574 * t700;
t942 = qJD(1) * t516;
t517 = -pkin(7) * t976 - t575 * t700;
t941 = qJD(1) * t517;
t940 = qJD(1) * t588;
t938 = qJD(2) * t580;
t937 = qJD(2) * t792;
t936 = qJD(2) * t682;
t935 = qJD(2) * t696;
t934 = qJD(2) * t697;
t933 = qJD(2) * t699;
t932 = qJD(2) * t700;
t931 = qJD(3) * t696;
t930 = qJD(3) * t699;
t929 = qJD(3) * t700;
t928 = qJD(4) * t682;
t925 = qJD(5) * t580;
t154 = t356 * t697 - t632 * t589 - t591 * t958 + t700 * t845;
t924 = t154 * qJD(1);
t155 = -t357 * t697 - t632 * t588 - t592 * t958 + t700 * t959;
t923 = t155 * qJD(1);
t182 = t365 * t448 + t452 * t844;
t922 = t182 * qJD(1);
t348 = t588 * t591 + t589 * t592;
t921 = t348 * qJD(1);
t394 = t574 * t697 + (-t670 + t631) * t700;
t920 = t394 * qJD(1);
t395 = t628 * t700 + (-t575 + t909) * t697;
t919 = t395 * qJD(1);
t758 = -t985 / 0.2e1 - t980 / 0.2e1;
t482 = (t1084 + t758) * t700;
t472 = t482 * qJD(1);
t757 = t979 / 0.2e1 - t986 / 0.2e1;
t483 = (t1176 + t757) * t700;
t473 = t483 * qJD(1);
t587 = t603 * qJD(5);
t626 = t663 * t696;
t916 = t626 * qJD(1);
t627 = t693 * t699 - t976;
t915 = t627 * qJD(1);
t914 = t663 * qJD(1);
t907 = t1076 / 0.2e1;
t137 = -t1025 + t1032;
t93 = (-t1099 + t1100) * t844 - 0.2e1 * t1166 * t365;
t906 = t137 * qJD(5) + t911 * t93;
t904 = pkin(1) * t913;
t903 = pkin(1) * t912;
t901 = t1075 / 0.2e1;
t900 = t1074 / 0.2e1;
t899 = t1072 / 0.2e1;
t898 = t150 * t1124;
t897 = pkin(5) * t1119;
t896 = -t553 / 0.2e1;
t895 = t553 / 0.2e1;
t894 = -t687 / 0.2e1;
t207 = t1097 * t844 + t1105 * t843;
t208 = -t1100 * t365 - t1166 * t844;
t890 = t208 * qJD(5) + t207 * t911;
t880 = t696 * t933;
t879 = t697 * t933;
t878 = t696 * t929;
t877 = t699 * t929;
t876 = t696 * t930;
t875 = t697 * t932;
t874 = t697 * t912;
t873 = t1021 / 0.2e1;
t872 = -t1020 / 0.2e1;
t871 = t365 * t1083;
t870 = t416 * t1083;
t868 = t844 * t1081;
t867 = t843 * t1081;
t866 = t694 * t1079;
t863 = t139 / 0.2e1 + t1122;
t861 = -t286 / 0.2e1 - t306 / 0.2e1;
t859 = t602 / 0.2e1 + t1090;
t858 = t1083 + t1090;
t857 = t1076 * qJD(4);
t856 = t1076 * qJD(5);
t854 = pkin(3) * t911;
t850 = t671 / 0.2e1 + t965;
t849 = t687 / 0.2e1 + t960;
t839 = t911 * t589;
t838 = t911 * t792;
t837 = -qJD(3) + t912;
t836 = -qJD(5) + t912;
t835 = -t905 / 0.2e1;
t833 = t696 * t879;
t831 = t888 / 0.2e1;
t830 = -t887 / 0.2e1;
t827 = t697 * t907;
t826 = -t882 / 0.2e1;
t823 = t896 + t1087;
t821 = t912 - qJD(3) / 0.2e1;
t817 = t1060 - t1064;
t815 = t859 * t844;
t814 = t859 * t843;
t813 = t287 / 0.2e1 - t1004 / 0.2e1;
t812 = t1111 - t1002 / 0.2e1;
t400 = t687 + t817;
t702 = t1108 * t349 + t1109 * t400 + t1115 * t151 + t1119 * t133 + t1143 * t150 + t1201;
t764 = t1088 * t142 + t1091 * t138;
t2 = t702 + t764;
t38 = t397 * t400;
t807 = t2 * qJD(1) + t38 * qJD(2);
t701 = t818 * t1108 + t817 * t1109 + t144 * t1115 + t143 * t1143 + t1198 + t1201;
t744 = t1082 * t138 + t142 * t895;
t3 = -t701 + t744;
t39 = t397 * t817;
t806 = -t3 * qJD(1) + t39 * qJD(2);
t741 = t1083 * t452 + t448 * t896;
t9 = t741 + t1148;
t805 = t9 * qJD(1);
t704 = t1100 * t151 + t1166 * t150 - t1207;
t762 = t1088 * t448 + t1091 * t452;
t8 = t704 - t762;
t804 = t8 * qJD(1);
t40 = t397 * t1064;
t5 = -t863 * t253 - t1139 + (t1121 + t1031 / 0.2e1 + t1033 / 0.2e1) * pkin(5);
t803 = -qJD(1) * t5 - qJD(2) * t40;
t802 = -qJD(4) + t837;
t801 = t308 * t700;
t718 = t843 * t863 + t844 * t862;
t12 = t1073 / 0.2e1 + t718;
t797 = qJD(1) * t12;
t714 = t1097 * t133 + t1105 * t1196 - t1115 * t844 - t1120 * t843;
t720 = t668 / 0.2e1 + t689 / 0.2e1 + t1065 / 0.2e1 + t1062 / 0.2e1;
t27 = t714 + t720;
t92 = t1196 * t416 + t253 * t843;
t796 = -qJD(1) * t27 + qJD(2) * t92;
t760 = -t1085 * t844 - t1086 * t365;
t84 = -t365 * t823 + t844 * t858 + t760;
t759 = -t1085 * t843 - t1086 * t416;
t98 = -t416 * t823 + t843 * t858 + t759;
t795 = qJD(1) * t84 + qJD(2) * t98;
t128 = t899 - t814;
t95 = t900 - t815;
t791 = qJD(1) * t95 + qJD(2) * t128;
t52 = qJD(2) * t93 + t1180;
t54 = qJD(1) * t93 + t1178;
t401 = t580 * t416;
t262 = -t582 * t843 - t401;
t705 = -t1094 * t844 + t1100 * t855 - t1204;
t729 = t1079 * t602 + t813;
t42 = t873 - t770 / 0.2e1 + t705 + t729;
t790 = -t42 * qJD(1) + t262 * qJD(2);
t402 = t580 * t843;
t263 = -t416 * t582 + t402;
t703 = t1078 * t1188 - t1094 * t365 + t1166 * t855;
t754 = t1079 * t603 + t861;
t43 = t872 + t769 / 0.2e1 + t703 + t754;
t789 = -t43 * qJD(1) + t263 * qJD(2);
t270 = t1060 * t843 + t401;
t49 = -t801 / 0.2e1 + t873 + t958 * t1166 + (-t1084 * t844 - t1092 * t416 - t1093 * t843 + t827) * pkin(4) + t813;
t788 = -t49 * qJD(1) - t270 * qJD(2);
t271 = t1060 * t416 - t402;
t730 = t1188 * t700;
t48 = -t730 / 0.2e1 + t872 + t958 * t1099 + (-t1084 * t365 + t1092 * t843 - t1093 * t416 + t866) * pkin(4) + t861;
t787 = -t48 * qJD(1) - t271 * qJD(2);
t786 = t837 * t697;
t785 = qJD(2) * t137 + t1180;
t784 = qJD(1) * t137 + t1178;
t156 = (t588 * t1080 + (-t695 / 0.2e1 - t977 / 0.2e1) * t697) * pkin(3) + t211;
t479 = -t622 * t682 + t687 * t792;
t783 = t156 * qJD(1) - t479 * qJD(2);
t157 = (-t589 * t1080 + (t698 / 0.2e1 - t978 / 0.2e1) * t697) * pkin(3) + t210;
t478 = t622 * t687 + t682 * t792;
t782 = -t157 * qJD(1) + t478 * qJD(2);
t763 = -t1087 * t844 - t1090 * t365;
t160 = t763 + t850;
t761 = -t1087 * t843 - t1090 * t416;
t199 = t761 + t849;
t781 = qJD(1) * t160 + qJD(2) * t199;
t197 = -t871 + t1066 / 0.2e1 + (-t868 + t1093) * pkin(4);
t236 = -t870 + t1064 / 0.2e1 + (-t867 + t1084) * pkin(4);
t780 = qJD(1) * t197 + qJD(2) * t236;
t209 = t1025 + t1032;
t305 = t444 + t1126;
t779 = qJD(1) * t305 + qJD(2) * t209;
t355 = t498 + t1125;
t778 = qJD(1) * t209 + qJD(2) * t355;
t773 = t835 + t1082;
t739 = t773 * t844;
t215 = t900 - t739;
t738 = t773 * t843;
t258 = t899 - t738;
t777 = qJD(1) * t215 + qJD(2) * t258;
t224 = t865 + t522 / 0.2e1 + (t1096 + t822) * t695;
t538 = t864 + t630 / 0.2e1;
t776 = qJD(1) * t224 + qJD(2) * t538;
t396 = -t588 ^ 2 + t589 ^ 2;
t204 = qJD(1) * t396 + qJD(2) * t276;
t461 = t622 ^ 2 - t792 ^ 2;
t218 = qJD(1) * t276 + qJD(2) * t461;
t775 = -t939 - t945;
t774 = -t644 / 0.2e1 + t835;
t772 = t1057 / 0.2e1 - t1059 / 0.2e1;
t768 = -qJD(4) / 0.2e1 + t821;
t737 = t772 * t696;
t533 = t628 / 0.2e1 - t737;
t767 = pkin(2) * t933 - qJD(1) * t533;
t736 = t772 * t699;
t534 = -t631 / 0.2e1 + t736;
t766 = pkin(2) * t935 - qJD(1) * t534;
t710 = -t1077 * t1188 - t1095 * t844 + t1100 * t824;
t57 = t710 + t861;
t753 = qJD(1) * t57 - t843 * t938;
t709 = -t1095 * t365 + t1166 * t824 + t1204;
t56 = -t709 + t813;
t752 = qJD(1) * t56 + t416 * t938;
t751 = t699 * t786;
t120 = qJD(2) * t207 - t1149;
t145 = qJD(1) * t207 - t1151;
t750 = -qJD(2) * t208 + t1149;
t749 = -qJD(1) * t208 + t1151;
t748 = qJD(1) * t210 - t792 * t936;
t747 = qJD(1) * t211 + t622 * t936;
t265 = -qJD(2) * t371 - t589 * t940;
t279 = qJD(1) * t371 - t622 * t937;
t613 = (t690 / 0.2e1 - t692 / 0.2e1) * t697;
t746 = -qJD(1) * t613 + t880;
t743 = t1082 * t150 + t151 * t895;
t742 = -t1082 * t253 + t1196 * t895;
t740 = t1076 * t901 + t970;
t735 = -t1003 / 0.2e1 + t830;
t733 = qJD(1) * t696 * t976 + qJD(2) * t613;
t625 = t662 * t691;
t732 = qJD(1) * t625 + 0.2e1 * t833;
t713 = t1085 * t140 + t1086 * t133 + t1087 * t144 + t1090 * t143;
t13 = -t713 + t743;
t711 = (t1086 + t1087) * t1196 + (t1085 - t1090) * t253;
t29 = -t711 + t742;
t370 = -t593 * t610 + t603 * t611;
t728 = -t13 * qJD(1) - t29 * qJD(2) + t370 * qJD(3);
t15 = t140 * t859 - t603 * t863 + t898;
t31 = t253 * t859 - t603 * t862 + t897;
t352 = (-t593 - t602) * t603;
t727 = qJD(1) * t15 + qJD(2) * t31 - qJD(3) * t352;
t68 = -t1013 / 0.2e1 + (t1110 + t1112) * t694 + t1132;
t726 = qJD(1) * t68 + qJD(3) * t610 - t1203;
t64 = t1113 + (t901 + t1112) * t694 + t971;
t725 = qJD(1) * t64 - qJD(3) * t553 - t1203;
t172 = t828 + t1146 / 0.2e1 + t1197;
t60 = -t1014 / 0.2e1 + (t1110 + t300 / 0.2e1) * t694 + t1132;
t724 = qJD(1) * t60 + qJD(2) * t172 + qJD(3) * t603;
t554 = pkin(3) * t826 - t774;
t66 = t831 - t1005 / 0.2e1 + t740;
t723 = -t66 * qJD(1) + t554 * qJD(3) - t1191;
t719 = (-t322 / 0.2e1 - t314 / 0.2e1) * t694 + t830;
t61 = t1017 / 0.2e1 + t281 / 0.2e1 + t719;
t722 = qJD(1) * t61 - qJD(3) * t602 - t1191;
t177 = t829 - t1187 / 0.2e1 + t1174;
t69 = -t1012 / 0.2e1 + t831 + t719;
t721 = qJD(1) * t69 - qJD(2) * t177 + qJD(3) * t611;
t708 = (t140 * t907 + t694 * t863) * pkin(4) + t140 * t1083;
t18 = -t1068 / 0.2e1 + t708;
t706 = (t603 * t907 - t694 * t859) * pkin(4) + t603 * t1083;
t261 = t1061 / 0.2e1 + t706;
t707 = (t253 * t907 + t694 * t862) * pkin(4) + t253 * t1083;
t34 = t1067 / 0.2e1 + t707;
t594 = (t905 - t681) * t553;
t717 = -qJD(1) * t18 - qJD(2) * t34 - qJD(3) * t261 - qJD(4) * t594;
t676 = t934 / 0.2e1;
t675 = -t913 / 0.2e1;
t674 = t913 / 0.2e1;
t620 = t821 * t697;
t606 = t613 * qJD(3);
t605 = t611 * qJD(4);
t604 = t610 * qJD(4);
t586 = t602 * qJD(5);
t585 = t768 * t697;
t548 = (-qJD(5) / 0.2e1 + t768) * t697;
t532 = (t826 + t992) * pkin(3) + t774;
t531 = t896 - t820 / 0.2e1 + (-t883 - t991 / 0.2e1) * pkin(3);
t491 = -t1072 / 0.2e1;
t487 = t670 + t631 / 0.2e1 + t736;
t486 = t908 - t628 / 0.2e1 - t737;
t485 = -t1078 * t792 + t700 * t758;
t484 = t1077 * t622 + t700 * t757;
t468 = 0.2e1 * t864 + t987;
t427 = -t1074 / 0.2e1;
t389 = t483 * qJD(2) - t589 * t912;
t388 = t482 * qJD(2) + t588 * t912;
t354 = -t838 - t472;
t353 = -t622 * t911 - t473;
t321 = t775 * pkin(5);
t267 = t484 * qJD(2) + t589 * t802;
t266 = t485 * qJD(2) - t588 * t802;
t260 = -t1061 / 0.2e1 + t706;
t257 = t491 - t738;
t237 = -pkin(4) * t867 - t870 + t960;
t227 = t698 * t891 + t989 + t1102 - t981 / 0.2e1;
t225 = 0.2e1 * t865 - t990 / 0.2e1 + (t891 + t1096) * t695;
t214 = t427 - t739;
t206 = t209 * qJD(6);
t200 = -t761 + t849;
t198 = -pkin(4) * t868 - t871 + t965;
t161 = -t763 + t850;
t159 = t588 * t894 - (-t977 + t695) * t1058 / 0.2e1 + t212;
t158 = -t589 * t894 + (t978 + t698) * t1058 / 0.2e1 + t213;
t127 = t491 - t814;
t99 = t1015 / 0.2e1 - t1018 / 0.2e1 - t416 * t896 - t1010 / 0.2e1 - t759;
t97 = t1169 + (qJD(5) - t802) * t844;
t96 = -t365 * t802 + t1179 + t917;
t94 = t427 - t815;
t85 = t1016 / 0.2e1 - t1019 / 0.2e1 - t365 * t896 - t1011 / 0.2e1 - t760;
t71 = t1012 / 0.2e1 + t735 + t968;
t70 = t1013 / 0.2e1 + t812 + t969;
t67 = t740 + t968;
t65 = t700 * t895 + t969 + t971;
t63 = t1014 / 0.2e1 + t812 + t971;
t62 = -t1017 / 0.2e1 + t735 + t970;
t59 = t709 + t813;
t58 = -t710 + t861;
t51 = t730 / 0.2e1 - t365 * t609 - t416 * t578 + pkin(4) * t866 + t861 + t1137;
t50 = t801 / 0.2e1 - t844 * t609 - t843 * t578 + pkin(4) * t827 + t813 + t1138;
t45 = -t703 + t754 + t1137;
t44 = -t705 + t729 + t1138;
t33 = -t1067 / 0.2e1 + t707;
t32 = t1133 * t253 + t897 + (t1087 + t1088) * t1196;
t30 = t711 + t742;
t28 = -t714 + t720;
t17 = t1068 / 0.2e1 + t708;
t16 = t139 * t1087 + t133 * t1088 + t1133 * t140 + t898;
t14 = t713 + t743;
t11 = -t1073 / 0.2e1 + t718;
t10 = t741 - t1148;
t7 = t704 + t762;
t6 = pkin(5) * t1121 + t139 * t1115 + t1198 + t1139 + (-t1031 - t1033) * t1124;
t4 = t701 + t744;
t1 = t702 - t764;
t35 = [0, 0, 0, t875, t663 * qJD(2), 0, 0, 0, -pkin(1) * t934, -pkin(1) * t932, -t691 * t876 + t692 * t875, -t625 * qJD(3) - 0.2e1 * t700 * t833, -t627 * qJD(2) + t697 * t878, t626 * qJD(2) + t697 * t877, -t875, -qJD(2) * t394 - qJD(3) * t517, qJD(2) * t395 + qJD(3) * t516 (qJD(2) * t592 + t839) * t588, qJD(2) * t348 + t396 * t911, -t454 * qJD(2) + t700 * t839, -t588 * t700 * t911 - t453 * qJD(2), -t875, -qJD(2) * t154 - qJD(3) * t245 - qJD(4) * t269, qJD(2) * t155 + qJD(3) * t246 + qJD(4) * t268 -(qJD(2) * t452 - t1129) * t365, qJD(2) * t182 + t1172 * t1184, -t283 * qJD(2) + t1129 * t700, -t282 * qJD(2) + (-t917 - t1164) * t700, -t875, -qJD(2) * t46 - qJD(3) * t88 - qJD(4) * t86 - qJD(5) * t109, qJD(2) * t47 + qJD(3) * t89 + qJD(4) * t87 + qJD(5) * t108, qJD(2) * t20 + qJD(3) * t23 + qJD(4) * t21 - qJD(5) * t19 + qJD(6) * t305, qJD(2) * t22 + qJD(3) * t25 + qJD(4) * t24 + qJD(5) * t26 + qJD(6) * t41; 0, 0, 0, t874, t914, t932, -t934, 0, -pkin(7) * t932 - t904, pkin(7) * t934 - t903, -t606 + (t692 * t913 + t880) * t700, t1128 * t700 - 0.2e1 * t697 * t876, t696 * t934 - t915, t879 + t916, -t620, -t920 + (t696 * t819 - t909) * qJD(2) + t487 * qJD(3), t919 + (t699 * t819 + t910) * qJD(2) + t486 * qJD(3) -(t937 - t940) * t592 + t966, t921 + (-t591 * t792 + t592 * t622) * qJD(2) + t972, t484 * t911 + t792 * t934 - t943, t485 * t911 - t622 * t934 - t944, -t585, -t924 + (t591 * t682 + t622 * t632 - t697 * t842) * qJD(2) + t158 * qJD(3) + t213 * qJD(4), t923 + (-t545 * t697 - t592 * t682 + t632 * t792) * qJD(2) + t159 * qJD(3) + t212 * qJD(4), t452 * t775 + t890, t922 + (t416 * t448 + t452 * t843) * qJD(2) + t906, t1159 * t1184 - t416 * t934 - t949, t1168 * t1184 + t843 * t934 - t950, -t548, -t1030 + (t1188 * t697 + t448 * t580 - t520 * t843) * qJD(2) + t44 * qJD(3) + t50 * qJD(4) + t59 * qJD(5), t1029 + (-t308 * t697 - t416 * t520 + t452 * t580) * qJD(2) + t45 * qJD(3) + t51 * qJD(4) + t58 * qJD(5), t1041 + (-t1196 * t452 + t138 * t416 + t142 * t843 - t253 * t448) * qJD(2) + t7 * qJD(3) + t10 * qJD(4) + t11 * qJD(5) + t206, t1039 + (t1196 * t138 + t142 * t253 + t343 * t397) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t6 * qJD(5) + t28 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t733, -t732, t696 * t786, t751, t676, qJD(2) * t487 - qJD(3) * t575 - t941, qJD(2) * t486 + qJD(3) * t574 + t942, -t265, t204, t267, t266, t676, qJD(2) * t158 + qJD(3) * t374 + qJD(4) * t225 - t954, qJD(2) * t159 - qJD(3) * t375 + qJD(4) * t227 + t953, t120, t52, t97, t96, t676, qJD(2) * t44 + qJD(3) * t183 + qJD(4) * t70 + qJD(5) * t63 - t1045, qJD(2) * t45 - qJD(3) * t184 + qJD(4) * t71 + qJD(5) * t62 + t1044, t1038 + t7 * qJD(2) + (t1016 - t1019) * qJD(3) + t85 * qJD(4) + t94 * qJD(5), t1035 + t1 * qJD(2) + (t150 * t593 + t151 * t603) * qJD(3) + t14 * qJD(4) + t16 * qJD(5) + t161 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265, t204, t267, t266, t676, qJD(2) * t213 + qJD(3) * t225 - qJD(4) * t357 - t951, qJD(2) * t212 + qJD(3) * t227 + qJD(4) * t356 + t952, t120, t52, t97, t96, t676, qJD(2) * t50 + qJD(3) * t70 + qJD(4) * t165 + qJD(5) * t65 - t1047, qJD(2) * t51 + qJD(3) * t71 - qJD(4) * t166 + qJD(5) * t67 + t1046, t1040 + t10 * qJD(2) + t85 * qJD(3) + (t365 * t553 - t1011) * qJD(4) + t214 * qJD(5), t1037 + t4 * qJD(2) + t14 * qJD(3) + (t143 * t681 + t144 * t553) * qJD(4) + t17 * qJD(5) + t198 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t750, t785, -t836 * t844 + t1140 + t1169, -t365 * t836 + t1164 + t1179, t676, qJD(2) * t59 + qJD(3) * t63 + qJD(4) * t65 - qJD(5) * t164 - t956, qJD(2) * t58 + qJD(3) * t62 + qJD(4) * t67 + qJD(5) * t163 + t957, -pkin(5) * t918 + qJD(2) * t11 + qJD(3) * t94 + qJD(4) * t214 - t1050, qJD(2) * t6 + qJD(3) * t16 + qJD(4) * t17 - t1054 * t140 + t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t779, qJD(2) * t28 + qJD(3) * t161 + qJD(4) * t198 + t1048; 0, 0, 0, -t874, -t914, 0, 0, 0, t904, t903, -t692 * t874 - t606, 0.2e1 * t696 * t751, -t877 + t915, t878 - t916, t620, qJD(3) * t534 + t920, qJD(3) * t533 - t919, -t592 * t940 + t966, -t921 + t972, -t483 * t911 + t943, -t482 * t911 + t944, t585, -qJD(3) * t157 - qJD(4) * t210 + t924, -qJD(3) * t156 - qJD(4) * t211 - t923, t452 * t945 + t890, t906 - t922, -t1158 * t1184 + t949, -t1167 * t1184 + t950, t548, -qJD(3) * t42 - qJD(4) * t49 - qJD(5) * t56 + t1030, -qJD(3) * t43 - qJD(4) * t48 - qJD(5) * t57 - t1029, qJD(3) * t8 - qJD(4) * t9 + qJD(5) * t12 - t1041 + t206, qJD(3) * t2 - qJD(4) * t3 - qJD(5) * t5 - qJD(6) * t27 - t1039; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t876, t662 * qJD(3), 0, 0, 0, -pkin(2) * t931, -pkin(2) * t930, -t622 * t838, t911 * t461, 0, 0, 0, qJD(3) * t478 + t792 * t928, qJD(3) * t479 - t622 * t928, -t1147 * t416, t1184 * t1171, 0, 0, 0, qJD(3) * t262 - qJD(4) * t270 - t416 * t925, qJD(3) * t263 - qJD(4) * t271 + t843 * t925, qJD(6) * t355, qJD(3) * t38 + qJD(4) * t39 - qJD(5) * t40 + qJD(6) * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t746, t1128, -t837 * t699, t837 * t696, t675, -pkin(8) * t930 - t766, pkin(8) * t931 - t767, t279, t218, t353, t354, t675, -qJD(3) * t545 + t468 * qJD(4) + t782, t1127 - t783, t145, t54, t153, t152, t675, -qJD(3) * t308 + t1195 * t1205 + t790, -qJD(3) * t1188 + t1194 * t1195 + t789 (t1015 - t1018) * qJD(3) + t99 * qJD(4) + t127 * qJD(5) + t804 (t1196 * t603 - t253 * t593) * qJD(3) + t30 * qJD(4) + t32 * qJD(5) + t200 * qJD(6) + t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, t218, t353, t354, t675, qJD(3) * t468 - qJD(4) * t545 - t748, t1127 - t747, t145, t54, t153, t152, t675, -qJD(4) * t308 + qJD(5) * t1205 + t1189 + t788, -qJD(4) * t1188 + qJD(5) * t1194 + t1190 + t787, t99 * qJD(3) + (t416 * t553 - t1010) * qJD(4) + t257 * qJD(5) - t805, t30 * qJD(3) + (t1196 * t553 - t253 * t681) * qJD(4) + t33 * qJD(5) + t237 * qJD(6) + t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t749, t784, t153, t152, t675, qJD(4) * t1205 - qJD(5) * t308 + t1189 - t752, qJD(4) * t1194 - qJD(5) * t1188 + t1190 - t753, -pkin(5) * t927 + qJD(3) * t127 + qJD(4) * t257 + t797, qJD(3) * t32 + qJD(4) * t33 - t1054 * t253 + t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t778, qJD(3) * t200 + qJD(4) * t237 + t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t733, t732 (-t696 * t913 + t933) * t700 (-t881 - t935) * t700, t676, -qJD(2) * t534 + t941, -qJD(2) * t533 - t942, t265, -t204, t389, t388, t676, qJD(2) * t157 + qJD(4) * t224 + t954, qJD(2) * t156 + qJD(4) * t226 - t953, -t120, -t52, t168, t167, t676, qJD(2) * t42 - qJD(4) * t68 - qJD(5) * t60 + t1045, qJD(2) * t43 - qJD(4) * t69 - qJD(5) * t61 - t1044, -qJD(2) * t8 - qJD(4) * t84 + qJD(5) * t95 - t1038, -qJD(2) * t2 - qJD(4) * t13 - qJD(5) * t15 - qJD(6) * t160 - t1035; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t746, -t1128, t699 * t912, -t696 * t912, t674, t766, t767, -t279, -t218, t473, t472, t674, qJD(4) * t538 - t782, t783, -t145, -t54, t1170, t1181, t674, -qJD(5) * t172 + t1202 - t790, qJD(4) * t177 + t1193 - t789, -qJD(4) * t98 + qJD(5) * t128 - t804, -qJD(4) * t29 - qJD(5) * t31 - qJD(6) * t199 - t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695 * t1055, -t698 * t1055, 0, 0, 0, 0, 0, -t604 - t587, -t605 + t586, 0, qJD(4) * t370 + qJD(5) * t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695 * t854 + t776, -t698 * t854 + t955, 0, 0, 0, 0, 0, qJD(5) * t531 - t604 - t726, qJD(5) * t532 - t605 - t721, -t795 (t553 * t611 - t610 * t681) * qJD(4) + t260 * qJD(5) + t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t531 - t587 - t724, qJD(4) * t532 + t586 - t722, t791, -pkin(5) * t587 + qJD(4) * t260 - t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265, -t204, t389, t388, t676, qJD(2) * t210 - qJD(3) * t224 + t951, qJD(2) * t211 - qJD(3) * t226 - t952, -t120, -t52, t168, t167, t676, qJD(2) * t49 + qJD(3) * t68 + qJD(5) * t64 + t1047, qJD(2) * t48 + qJD(3) * t69 + qJD(5) * t66 - t1046, qJD(2) * t9 + qJD(3) * t84 + qJD(5) * t215 - t1040, qJD(2) * t3 + qJD(3) * t13 + qJD(5) * t18 + qJD(6) * t197 - t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279, -t218, t473, t472, t674, -qJD(3) * t538 + t748, t747, -t145, -t54, t1170, t1181, t674, -t788 + (-qJD(3) - qJD(5)) * t1199, -qJD(3) * t177 + t1193 - t787, qJD(3) * t98 + qJD(5) * t258 + t805, qJD(3) * t29 + qJD(5) * t34 + qJD(6) * t236 - t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1056 * t695 - t776, t1056 * t698 - t955, 0, 0, 0, 0, 0, t726 - t902, -qJD(5) * t554 + t721, t795, qJD(5) * t261 - t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t902, -pkin(4) * t856, 0, t594 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1195 * t553 + t725 (-t857 - t856) * pkin(4) - t723, t777, -pkin(5) * t902 - t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t750, -t785, t168, t167, t676, qJD(2) * t56 + qJD(3) * t60 - qJD(4) * t64 + t956, qJD(2) * t57 + qJD(3) * t61 - qJD(4) * t66 - t957, -qJD(2) * t12 - qJD(3) * t95 - qJD(4) * t215 + t1050, qJD(2) * t5 + qJD(3) * t15 - qJD(4) * t18 + t1053 * t365 - t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t749, -t784, t1170, t1181, t674, qJD(3) * t172 + t1202 + t752, -t173 * t911 + t753, -qJD(3) * t128 - qJD(4) * t258 - t797, qJD(3) * t31 - qJD(4) * t34 + t1053 * t416 - t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t724 + t1135, qJD(4) * t554 + t722, -t791, -qJD(4) * t261 + t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t725 + t1135, pkin(4) * t857 + t723, -t777, t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t779, -pkin(5) * t917 + qJD(2) * t27 + qJD(3) * t160 - qJD(4) * t197 - t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t778, -pkin(5) * t926 + qJD(3) * t199 - qJD(4) * t236 - t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t35;
