% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:23:04
% EndTime: 2019-03-10 01:23:32
% DurationCPUTime: 13.13s
% Computational Cost: add. (21826->684), mult. (53154->872), div. (0->0), fcn. (38368->8), ass. (0->318)
t319 = sin(qJ(2));
t322 = cos(qJ(2));
t357 = pkin(2) * t319 - pkin(8) * t322;
t276 = t357 * qJD(1);
t321 = cos(qJ(3));
t318 = sin(qJ(3));
t409 = qJD(1) * t319;
t381 = t318 * t409;
t226 = pkin(7) * t381 + t321 * t276;
t422 = t321 * t322;
t352 = pkin(3) * t319 - pkin(9) * t422;
t460 = -pkin(9) - pkin(8);
t383 = qJD(3) * t460;
t500 = qJD(1) * t352 - t321 * t383 + t226;
t256 = t318 * t276;
t423 = t319 * t321;
t424 = t318 * t322;
t499 = t256 + (-pkin(7) * t423 - pkin(9) * t424) * qJD(1) - t318 * t383;
t320 = cos(qJ(4));
t398 = qJD(4) * t320;
t401 = qJD(3) * t321;
t342 = -t320 * t401 - t321 * t398;
t317 = sin(qJ(4));
t426 = t317 * t318;
t354 = -t320 * t321 + t426;
t389 = qJD(3) + qJD(4);
t408 = qJD(1) * t322;
t412 = -t354 * t408 + t389 * t426 + t342;
t287 = t460 * t318;
t498 = -t287 * t398 + t317 * t500 + t499 * t320;
t316 = sin(qJ(5));
t391 = t321 * qJD(2);
t269 = t381 - t391;
t380 = t321 * t409;
t406 = qJD(2) * t318;
t271 = t380 + t406;
t355 = -t269 * t317 + t320 * t271;
t356 = -t269 * t320 - t317 * t271;
t459 = cos(qJ(5));
t140 = t316 * t355 - t356 * t459;
t137 = t140 ^ 2;
t462 = t316 * t356 + t355 * t459;
t461 = t462 ^ 2;
t497 = -t137 + t461;
t288 = t460 * t321;
t224 = t317 * t287 - t320 * t288;
t414 = qJD(4) * t224 - t499 * t317 + t320 * t500;
t272 = t317 * t321 + t318 * t320;
t236 = t272 * t408;
t343 = t272 * qJD(4);
t344 = t272 * qJD(3);
t331 = -t344 - t343;
t327 = t236 + t331;
t308 = pkin(7) * t409;
t449 = qJD(2) * pkin(2);
t285 = t308 - t449;
t230 = pkin(3) * t269 + t285;
t162 = -pkin(4) * t356 + t230;
t369 = -pkin(5) * t140 - qJD(6);
t88 = t162 - t369;
t496 = t140 * t88;
t301 = -qJD(3) + t408;
t291 = -qJD(4) + t301;
t283 = -qJD(5) + t291;
t442 = t140 * t283;
t376 = t319 * t401;
t404 = qJD(2) * t322;
t379 = t318 * t404;
t340 = t376 + t379;
t402 = qJD(3) * t318;
t225 = qJD(1) * t340 + qJD(2) * t402;
t377 = t319 * t402;
t290 = qJD(1) * t377;
t364 = qJD(3) + t408;
t353 = qJD(2) * t364;
t337 = t321 * t353 - t290;
t400 = qJD(4) * t317;
t122 = t317 * t225 + t269 * t398 + t271 * t400 - t320 * t337;
t351 = t320 * t225 - t269 * t400 + t271 * t398 + t317 * t337;
t374 = qJD(5) * t459;
t397 = qJD(5) * t316;
t60 = t459 * t122 + t316 * t351 + t355 * t397 - t356 * t374;
t495 = -t60 - t442;
t438 = t462 * t283;
t61 = qJD(5) * t462 - t316 * t122 + t459 * t351;
t494 = -t61 - t438;
t483 = t140 * qJ(6);
t493 = t140 * t162;
t492 = t140 * t462;
t491 = -pkin(4) * t409 + pkin(10) * t412 - t414;
t427 = t317 * t288;
t456 = pkin(10) * t272;
t490 = -(t427 - t456) * qJD(4) + t498 + (-t236 + t344) * pkin(10);
t488 = pkin(4) * t397;
t487 = pkin(4) * t459;
t486 = pkin(5) * t462;
t448 = t60 * qJ(6);
t390 = qJD(1) * qJD(2);
t304 = t319 * t390;
t281 = -pkin(2) * t322 - pkin(8) * t319 - pkin(1);
t262 = t281 * qJD(1);
t309 = pkin(7) * t408;
t286 = qJD(2) * pkin(8) + t309;
t214 = t321 * t262 - t286 * t318;
t177 = -pkin(9) * t271 + t214;
t164 = -pkin(3) * t301 + t177;
t215 = t262 * t318 + t286 * t321;
t178 = -pkin(9) * t269 + t215;
t170 = t320 * t178;
t101 = t164 * t317 + t170;
t279 = t357 * qJD(2);
t263 = qJD(1) * t279;
t362 = pkin(7) * t304;
t157 = -qJD(3) * t215 + t321 * t263 + t318 * t362;
t112 = t290 * pkin(9) + (-pkin(9) * t321 * t364 + pkin(3) * t409) * qJD(2) + t157;
t156 = t262 * t401 + t318 * t263 - t286 * t402 - t321 * t362;
t127 = -pkin(9) * t225 + t156;
t41 = -qJD(4) * t101 + t320 * t112 - t317 * t127;
t21 = pkin(4) * t304 + pkin(10) * t122 + t41;
t361 = -t317 * t112 - t320 * t127 - t164 * t398 + t178 * t400;
t24 = -pkin(10) * t351 - t361;
t372 = t459 * t21 - t316 * t24;
t168 = t317 * t178;
t100 = t320 * t164 - t168;
t477 = pkin(10) * t355;
t82 = t100 - t477;
t77 = -pkin(4) * t291 + t82;
t476 = pkin(10) * t356;
t83 = t101 + t476;
t81 = t459 * t83;
t39 = t316 * t77 + t81;
t6 = -qJD(5) * t39 + t372;
t332 = t6 + t448;
t300 = pkin(5) * t304;
t469 = -qJD(6) * t462 + t300;
t1 = t332 + t469;
t475 = t88 * t462;
t485 = t1 - t475;
t474 = qJ(6) * t462;
t339 = t459 * t354;
t417 = qJD(5) * t339 + t272 * t397 - t316 * t327 + t412 * t459;
t211 = t272 * t459 - t316 * t354;
t416 = qJD(5) * t211 - t316 * t412 - t327 * t459;
t458 = pkin(3) * t318;
t265 = t408 * t458 + t309;
t358 = pkin(3) * t402 - t265;
t467 = -t162 * t462 + t6;
t371 = -t316 * t21 - t459 * t24 - t77 * t374 + t83 * t397;
t480 = t371 + t493;
t479 = -0.2e1 * t390;
t478 = pkin(4) * t355;
t223 = t320 * t287 + t427;
t187 = t223 - t456;
t188 = -pkin(10) * t354 + t224;
t452 = t187 * t374 - t188 * t397 + t316 * t491 - t459 * t490;
t130 = t316 * t187 + t459 * t188;
t451 = -qJD(5) * t130 + t316 * t490 + t459 * t491;
t472 = t272 * t351;
t436 = t356 * t355;
t268 = t321 * t281;
t457 = pkin(7) * t318;
t213 = -pkin(9) * t423 + t268 + (-pkin(3) - t457) * t322;
t303 = pkin(7) * t422;
t235 = t318 * t281 + t303;
t425 = t318 * t319;
t219 = -pkin(9) * t425 + t235;
t149 = t320 * t213 - t219 * t317;
t243 = t354 * t319;
t125 = -pkin(4) * t322 + pkin(10) * t243 + t149;
t150 = t317 * t213 + t320 * t219;
t346 = t272 * t319;
t131 = -pkin(10) * t346 + t150;
t72 = t316 * t125 + t459 * t131;
t471 = t214 * t301 + t156;
t470 = t215 * t301 - t157;
t413 = -pkin(4) * t327 + t358;
t329 = t389 * t354;
t407 = qJD(2) * t272;
t338 = t322 * t407;
t325 = t329 * t319 - t338;
t468 = t355 ^ 2 - t356 ^ 2;
t466 = -t355 * t230 + t41;
t465 = t291 * t356 - t122;
t464 = -t356 * t230 + t361;
t463 = -t291 * t355 - t351;
t210 = t272 * t316 + t339;
t455 = -qJ(6) * t416 - qJD(6) * t210 + t452;
t454 = -pkin(5) * t409 + qJ(6) * t417 - t211 * qJD(6) + t451;
t79 = t316 * t83;
t38 = t459 * t77 - t79;
t26 = t38 - t474;
t25 = -pkin(5) * t283 + t26;
t453 = t25 - t26;
t45 = t459 * t82 - t79;
t107 = -t177 * t317 - t170;
t89 = t107 - t476;
t108 = t320 * t177 - t168;
t90 = t108 - t477;
t55 = t316 * t89 + t459 * t90;
t450 = qJ(6) * t61;
t447 = pkin(5) * t416 + t413;
t363 = pkin(4) * t374;
t446 = -t316 * pkin(4) * t61 - t140 * t363;
t445 = t122 * t272;
t202 = t225 * pkin(3) + qJD(2) * t309;
t437 = t202 * t272;
t433 = t269 * t301;
t432 = t271 * t269;
t431 = t271 * t301;
t430 = t285 * t318;
t429 = t301 * t318;
t428 = t316 * t317;
t421 = t322 * t301;
t324 = qJD(1) ^ 2;
t420 = t322 * t324;
t323 = qJD(2) ^ 2;
t419 = t323 * t319;
t418 = t323 * t322;
t415 = t288 * t400 - t498;
t405 = qJD(2) * t319;
t411 = t321 * t279 + t405 * t457;
t280 = pkin(3) * t425 + t319 * pkin(7);
t314 = t319 ^ 2;
t410 = -t322 ^ 2 + t314;
t403 = qJD(3) * t269;
t399 = qJD(4) * t318;
t396 = qJD(6) * t140;
t394 = t271 * qJD(3);
t393 = t285 * qJD(3);
t392 = t314 * qJD(1);
t306 = pkin(3) * t320 + pkin(4);
t197 = t306 * t374 + (-t317 * t397 + (t320 * t459 - t428) * qJD(4)) * pkin(3);
t382 = t459 * t317;
t198 = -t306 * t397 + (-t317 * t374 + (-t316 * t320 - t382) * qJD(4)) * pkin(3);
t250 = pkin(3) * t382 + t316 * t306;
t388 = -t197 * t140 - t198 * t462 - t250 * t61;
t387 = pkin(7) * t424;
t310 = pkin(7) * t404;
t386 = t319 * t420;
t148 = t352 * qJD(2) + (-t303 + (pkin(9) * t319 - t281) * t318) * qJD(3) + t411;
t173 = t318 * t279 + t281 * t401 + (-t319 * t391 - t322 * t402) * pkin(7);
t155 = -pkin(9) * t340 + t173;
t385 = t317 * t148 + t320 * t155 + t213 * t398;
t231 = pkin(3) * t340 + t310;
t307 = -t321 * pkin(3) - pkin(2);
t378 = t322 * t391;
t375 = t283 * t409;
t44 = -t316 * t82 - t81;
t54 = -t316 * t90 + t459 * t89;
t370 = -t285 - t449;
t368 = pkin(1) * t479;
t71 = t459 * t125 - t131 * t316;
t129 = t459 * t187 - t188 * t316;
t366 = t269 + t391;
t365 = -t271 + t406;
t360 = t316 * t304;
t359 = t322 * t304;
t249 = -pkin(3) * t428 + t459 * t306;
t167 = pkin(3) * t271 + t478;
t350 = t371 + t450;
t158 = t317 * t379 - t319 * t331 - t320 * t378;
t70 = -qJD(4) * t150 + t320 * t148 - t317 * t155;
t53 = pkin(4) * t405 + pkin(10) * t158 + t70;
t341 = -t377 + t378;
t57 = (-t389 * t423 - t379) * pkin(10) * t320 + (-qJD(4) * t219 + (t319 * t399 - t341) * pkin(10)) * t317 + t385;
t9 = t125 * t374 - t131 * t397 + t316 * t53 + t459 * t57;
t348 = t318 * t353;
t347 = t230 * t272;
t336 = t350 + t396;
t335 = t459 * t346;
t334 = t197 * t283 - t250 * t304 + t371;
t238 = pkin(4) * t354 + t307;
t216 = pkin(4) * t346 + t280;
t91 = pkin(4) * t351 + t202;
t10 = -qJD(5) * t72 - t316 * t57 + t459 * t53;
t181 = -t243 * t459 - t316 * t346;
t23 = t61 * pkin(5) + t91;
t328 = t342 + (t399 + t402) * t317;
t132 = -pkin(4) * t325 + t231;
t305 = pkin(5) + t487;
t254 = t283 * t363;
t244 = pkin(5) + t249;
t234 = t268 - t387;
t229 = (-t283 - t408) * t405;
t227 = -pkin(7) * t380 + t256;
t180 = -t243 * t316 + t335;
t176 = t198 * t283;
t174 = -qJD(3) * t235 + t411;
t165 = t210 * pkin(5) + t238;
t136 = t180 * pkin(5) + t216;
t95 = t478 + t486;
t94 = -qJ(6) * t210 + t130;
t93 = -qJ(6) * t211 + t129;
t92 = t167 + t486;
t74 = qJD(5) * t181 - t316 * t158 - t325 * t459;
t73 = qJD(5) * t335 + t158 * t459 - t243 * t397 - t316 * t325;
t69 = -t219 * t400 + t385;
t65 = -qJ(6) * t180 + t72;
t64 = -pkin(5) * t322 - qJ(6) * t181 + t71;
t63 = t74 * pkin(5) + t132;
t47 = t416 * t283 + (-qJD(2) * t210 + t140) * t409;
t46 = t417 * t283 + (qJD(2) * t211 - t462) * t409;
t31 = t55 - t474;
t30 = t54 + t483;
t29 = t45 - t474;
t28 = t44 + t483;
t27 = t39 - t483;
t16 = t140 * t74 + t180 * t61;
t15 = -t181 * t60 - t462 * t73;
t14 = t283 * t74 + t322 * t61 + (-qJD(1) * t180 - t140) * t405;
t13 = t283 * t73 + t322 * t60 + (qJD(1) * t181 + t462) * t405;
t12 = t140 * t416 + t61 * t210;
t11 = -t60 * t211 - t417 * t462;
t8 = -qJ(6) * t74 - qJD(6) * t180 + t9;
t7 = pkin(5) * t405 + t73 * qJ(6) - t181 * qJD(6) + t10;
t4 = t140 * t73 + t180 * t60 - t181 * t61 - t462 * t74;
t3 = t140 * t417 + t210 * t60 - t211 * t61 - t416 * t462;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t359, t410 * t479, t418, -0.2e1 * t359, -t419, 0, -pkin(7) * t418 + t319 * t368, pkin(7) * t419 + t322 * t368, 0, 0, t271 * t341 + t337 * t423 (-t269 * t321 - t271 * t318) * t404 + ((t290 + t403) * t318 + (-t225 - t348 - t394) * t321) * t319, t301 * t377 + t290 * t322 + (t271 * t319 + (t392 + (-t301 - t364) * t322) * t321) * qJD(2), t225 * t425 + t269 * t340, t301 * t376 + t225 * t322 + (-t269 * t319 + (-t392 + t421) * t318) * qJD(2) (-t301 - t408) * t405, -t157 * t322 - t174 * t301 + (pkin(7) * t225 + t321 * t393) * t319 + ((pkin(7) * t269 + t430) * t322 + (t214 + (t234 + t387) * qJD(1)) * t319) * qJD(2), t173 * t301 + (-t318 * t393 - pkin(7) * t290 + (pkin(7) * t401 - qJD(1) * t235 - t215) * qJD(2)) * t319 + (t156 + (t285 * t321 + (t271 + 0.2e1 * t380) * pkin(7)) * qJD(2)) * t322, -t173 * t269 - t174 * t271 - t235 * t225 + t234 * t290 + (-t215 * t424 + (-t214 * t322 - t234 * t364) * t321) * qJD(2) + (-t156 * t318 - t157 * t321 + (t214 * t318 - t215 * t321) * qJD(3)) * t319, t156 * t235 + t157 * t234 + t173 * t215 + t174 * t214 + (t285 + t308) * t310, t122 * t243 - t158 * t355, -t158 * t356 + t243 * t351 - t355 * t338 + (t328 * t355 + t445) * t319, t122 * t322 + t158 * t291 + (-qJD(1) * t243 + t355) * t405, -t356 * t338 + (t328 * t356 + t472) * t319 (t291 * t407 + t351) * t322 + (-t329 * t291 + (-qJD(1) * t346 + t356) * qJD(2)) * t319 (-t291 - t408) * t405, -t70 * t291 - t231 * t356 + t280 * t351 + (qJD(2) * t347 - t41) * t322 + (t437 - t230 * t328 + (qJD(1) * t149 + t100) * qJD(2)) * t319, -t122 * t280 - t158 * t230 - t202 * t243 + t355 * t231 + t291 * t69 - t322 * t361 + (-qJD(1) * t150 - t101) * t405, t69 * t356 - t150 * t351 - t70 * t355 + t149 * t122 + t41 * t243 + t100 * t158 - t101 * t338 + (t101 * t328 + t272 * t361) * t319, t100 * t70 + t101 * t69 + t149 * t41 - t150 * t361 + t202 * t280 + t230 * t231, t15, t4, t13, t16, t14, t229, -t10 * t283 + t132 * t140 + t162 * t74 + t180 * t91 + t216 * t61 - t322 * t6 + (qJD(1) * t71 + t38) * t405, t132 * t462 - t162 * t73 + t181 * t91 - t216 * t60 + t283 * t9 - t322 * t371 + (-qJD(1) * t72 - t39) * t405, -t10 * t462 - t140 * t9 + t180 * t371 - t181 * t6 + t38 * t73 - t39 * t74 + t60 * t71 - t61 * t72, t10 * t38 + t132 * t162 + t216 * t91 - t371 * t72 + t39 * t9 + t6 * t71, t15, t4, t13, t16, t14, t229, -t1 * t322 + t136 * t61 + t140 * t63 + t180 * t23 - t283 * t7 + t74 * t88 + (qJD(1) * t64 + t25) * t405, -t136 * t60 + t462 * t63 + t181 * t23 - t336 * t322 + t283 * t8 - t73 * t88 + (-qJD(1) * t65 - t27) * t405, -t1 * t181 - t140 * t8 + t180 * t336 + t25 * t73 - t27 * t74 - t462 * t7 + t60 * t64 - t61 * t65, t1 * t64 + t136 * t23 + t25 * t7 + t27 * t8 - t336 * t65 + t63 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t410 * t324, 0, t386, 0, 0, t324 * pkin(1) * t319, pkin(1) * t420, 0, 0, -t290 * t318 + (t348 - t431) * t321 (-t225 + t431) * t318 + (t337 + t433) * t321, -t301 * t401 + (t319 * t365 + t321 * t421) * qJD(1), -t225 * t321 - t269 * t429, t301 * t402 + (-t318 * t421 + t319 * t366) * qJD(1), t301 * t409, -pkin(2) * t225 + t226 * t301 + (pkin(8) * t301 * t321 + t430) * qJD(3) + ((-pkin(8) * t406 - t214) * t319 + (-pkin(7) * t366 - t430) * t322) * qJD(1), pkin(2) * t290 - t227 * t301 + (-pkin(8) * t429 + (t285 - t449) * t321) * qJD(3) + ((-pkin(8) * t391 + t215) * t319 + (pkin(7) * t365 + t321 * t370) * t322) * qJD(1), t226 * t271 + t227 * t269 + ((-t225 + t394) * pkin(8) + t471) * t321 + ((t337 + t403) * pkin(8) + t470) * t318, -t214 * t226 - t215 * t227 + t370 * t309 + (t156 * t321 - t157 * t318 + (-t214 * t321 - t215 * t318) * qJD(3)) * pkin(8), -t355 * t412 - t445, t122 * t354 + t327 * t355 - t356 * t412 - t472, t412 * t291 + (-t355 + t407) * t409, t327 * t356 + t351 * t354, -t327 * t291 + (-qJD(2) * t354 - t356) * t409, t291 * t409, t307 * t351 + t202 * t354 + t265 * t356 + t414 * t291 + (-t356 * t458 + t347) * qJD(3) + (qJD(2) * t223 - t100) * t409 + (-t236 + t343) * t230, -t122 * t307 + t437 + t415 * t291 - t412 * t230 + t358 * t355 + (-qJD(2) * t224 + t101) * t409, t100 * t412 + t101 * t327 + t223 * t122 - t224 * t351 - t41 * t272 + t354 * t361 + t355 * t414 + t356 * t415, -t100 * t414 + t101 * t415 + t202 * t307 + t223 * t41 - t224 * t361 + t230 * t358, t11, t3, t46, t12, t47, t375, t210 * t91 + t238 * t61 - t451 * t283 + t416 * t162 + t413 * t140 + (qJD(2) * t129 - t38) * t409, t211 * t91 - t238 * t60 + t452 * t283 - t417 * t162 + t413 * t462 + (-qJD(2) * t130 + t39) * t409, t129 * t60 - t130 * t61 - t140 * t452 + t210 * t371 - t211 * t6 + t38 * t417 - t39 * t416 - t451 * t462, t129 * t6 - t130 * t371 + t162 * t413 + t238 * t91 + t38 * t451 + t39 * t452, t11, t3, t46, t12, t47, t375, t165 * t61 + t210 * t23 + t416 * t88 - t454 * t283 + t447 * t140 + (qJD(2) * t93 - t25) * t409, -t165 * t60 + t211 * t23 - t417 * t88 + t455 * t283 + t447 * t462 + (-qJD(2) * t94 + t27) * t409, -t1 * t211 - t140 * t455 + t210 * t336 + t25 * t417 - t27 * t416 - t454 * t462 + t60 * t93 - t61 * t94, t1 * t93 + t165 * t23 + t25 * t454 + t27 * t455 - t336 * t94 + t447 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432, -t269 ^ 2 + t271 ^ 2, t337 - t433, -t432, -t225 - t431, t304, -t271 * t285 - t470, t269 * t285 - t471, 0, 0, -t436, t468, t465, t436, t463, t304, t107 * t291 + (t271 * t356 + t291 * t400 + t304 * t320) * pkin(3) + t466, -t108 * t291 + (-t271 * t355 + t291 * t398 - t304 * t317) * pkin(3) + t464, t100 * t356 + t101 * t355 + t107 * t355 - t108 * t356 + (-t351 * t317 + t122 * t320 + (t317 * t355 + t320 * t356) * qJD(4)) * pkin(3), -t100 * t107 - t101 * t108 + (-t230 * t271 - t361 * t317 + t320 * t41 + (-t100 * t317 + t101 * t320) * qJD(4)) * pkin(3), t492, t497, t495, -t492, t494, t304, -t167 * t140 + t249 * t304 + t54 * t283 - t176 + t467, -t167 * t462 - t283 * t55 + t334 + t493, t249 * t60 + t388 + (t39 + t54) * t462 + (t55 - t38) * t140, -t162 * t167 + t249 * t6 - t250 * t371 + (t197 - t55) * t39 + (t198 - t54) * t38, t492, t497, t495, -t492, t494, t304, -t92 * t140 + t244 * t304 + t30 * t283 - t176 + t485, -t283 * t31 - t462 * t92 + t334 + t396 + t450 + t496, t244 * t60 + t388 + (t27 + t30) * t462 + (t31 - t25) * t140, t1 * t244 - t336 * t250 - t88 * t92 + (t197 - t31) * t27 + (t198 - t30) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t436, t468, t465, t436, t463, t304, -t101 * t291 + t466, -t100 * t291 + t464, 0, 0, t492, t497, t495, -t492, t494, t304, t44 * t283 + (-t140 * t355 + t283 * t397 + t304 * t459) * pkin(4) + t467, -t283 * t45 + t254 + (-t355 * t462 - t360) * pkin(4) + t480, t60 * t487 + t446 + (t39 + t44 + t488) * t462 + (t45 - t38) * t140, -t38 * t44 - t39 * t45 + (t459 * t6 - t162 * t355 - t316 * t371 + (-t316 * t38 + t39 * t459) * qJD(5)) * pkin(4), t492, t497, t495, -t492, t494, t304, t305 * t304 + t448 - t475 - t95 * t140 + t28 * t283 + (-t81 + (pkin(4) * t283 - t77) * t316) * qJD(5) + t372 + t469, -pkin(4) * t360 - t283 * t29 - t462 * t95 + t254 + t336 + t496, t305 * t60 + t446 + (t27 + t28 + t488) * t462 + (t29 - t25) * t140, t1 * t305 - t25 * t28 - t27 * t29 - t88 * t95 + (-t336 * t316 + (-t25 * t316 + t27 * t459) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, t497, t495, -t492, t494, t304, -t39 * t283 + t467, -t283 * t38 + t480, 0, 0, t492, t497, t495, -t492, t494, t304, -t27 * t283 + 0.2e1 * t300 + (t369 - t88) * t462 + t332, -pkin(5) * t461 - t26 * t283 + (qJD(6) + t88) * t140 + t350, t60 * pkin(5) - t140 * t453, pkin(5) * t485 + t453 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61 - t438, -t60 + t442, -t137 - t461, t27 * t140 + t25 * t462 + t23;];
tauc_reg  = t2;
