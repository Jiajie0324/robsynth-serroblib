% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP5_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:23:12
% EndTime: 2019-03-10 01:23:43
% DurationCPUTime: 18.82s
% Computational Cost: add. (25781->872), mult. (58249->1060), div. (0->0), fcn. (42362->14), ass. (0->399)
t370 = sin(qJ(2));
t374 = cos(qJ(2));
t438 = pkin(2) * t370 - pkin(8) * t374;
t305 = t438 * qJD(1);
t373 = cos(qJ(3));
t369 = sin(qJ(3));
t491 = qJD(1) * t370;
t462 = t369 * t491;
t231 = pkin(7) * t462 + t373 * t305;
t504 = t373 * t374;
t422 = pkin(3) * t370 - pkin(9) * t504;
t376 = -pkin(9) - pkin(8);
t464 = qJD(3) * t376;
t608 = qJD(1) * t422 - t373 * t464 + t231;
t279 = t369 * t305;
t508 = t370 * t373;
t511 = t369 * t374;
t607 = t279 + (-pkin(7) * t508 - pkin(9) * t511) * qJD(1) - t369 * t464;
t372 = cos(qJ(4));
t480 = qJD(4) * t372;
t483 = qJD(3) * t373;
t407 = -t372 * t483 - t373 * t480;
t368 = sin(qJ(4));
t513 = t368 * t369;
t425 = -t372 * t373 + t513;
t470 = qJD(3) + qJD(4);
t490 = qJD(1) * t374;
t496 = -t425 * t490 + t470 * t513 + t407;
t320 = t376 * t369;
t606 = -t320 * t480 + t368 * t608 + t607 * t372;
t367 = sin(qJ(5));
t473 = t373 * qJD(2);
t295 = t462 - t473;
t461 = t373 * t491;
t489 = qJD(2) * t369;
t297 = t461 + t489;
t430 = -t295 * t368 + t372 * t297;
t431 = -t295 * t372 - t368 * t297;
t562 = cos(qJ(5));
t142 = t367 * t430 - t431 * t562;
t139 = t142 ^ 2;
t566 = t367 * t431 + t430 * t562;
t563 = t566 ^ 2;
t605 = -t139 + t563;
t321 = t376 * t373;
t230 = t368 * t320 - t372 * t321;
t498 = -qJD(4) * t230 + t607 * t368 - t372 * t608;
t298 = t368 * t373 + t369 * t372;
t244 = t298 * t490;
t410 = t298 * qJD(4);
t411 = t298 * qJD(3);
t389 = -t411 - t410;
t385 = t244 + t389;
t336 = -qJD(3) + t490;
t471 = t370 * qJDD(1);
t346 = pkin(7) * t471;
t472 = qJD(1) * qJD(2);
t451 = t374 * t472;
t532 = qJDD(2) * pkin(2);
t266 = pkin(7) * t451 + t346 - t532;
t371 = sin(qJ(1));
t375 = cos(qJ(1));
t435 = g(1) * t375 + g(2) * t371;
t543 = g(3) * t374;
t402 = t370 * t435 - t543;
t395 = -t266 + t402;
t604 = qJD(3) * pkin(8) * t336 + t395;
t445 = qJD(3) + t490;
t400 = t445 * qJD(2) + t471;
t394 = t400 * t369;
t484 = qJD(3) * t370;
t450 = qJD(1) * t484;
t196 = t394 + (-qJDD(2) + t450) * t373;
t323 = t369 * t450;
t444 = t369 * qJDD(2) - t323;
t386 = t373 * t400 + t444;
t482 = qJD(4) * t368;
t103 = t368 * t196 + t295 * t480 + t297 * t482 - t372 * t386;
t421 = t372 * t196 - t295 * t482 + t297 * t480 + t368 * t386;
t453 = qJD(5) * t562;
t479 = qJD(5) * t367;
t42 = t562 * t103 + t367 * t421 + t430 * t479 - t431 * t453;
t326 = -qJD(4) + t336;
t317 = -qJD(5) + t326;
t528 = t142 * t317;
t603 = -t42 - t528;
t43 = qJD(5) * t566 - t367 * t103 + t562 * t421;
t524 = t566 * t317;
t602 = -t43 - t524;
t591 = t142 * qJ(6);
t601 = t142 * t566;
t600 = -pkin(4) * t491 + pkin(10) * t496 + t498;
t514 = t368 * t321;
t555 = pkin(10) * t298;
t599 = -(t514 - t555) * qJD(4) + t606 + (-t244 + t411) * pkin(10);
t366 = qJ(3) + qJ(4);
t357 = qJ(5) + t366;
t341 = sin(t357);
t342 = cos(t357);
t505 = t371 * t374;
t238 = t341 * t375 - t342 * t505;
t502 = t374 * t375;
t240 = t341 * t371 + t342 * t502;
t352 = t374 * qJDD(1);
t577 = -t370 * t472 + t352;
t292 = qJDD(3) - t577;
t285 = qJDD(4) + t292;
t439 = pkin(2) * t374 + pkin(8) * t370;
t312 = -pkin(1) - t439;
t286 = t312 * qJD(1);
t348 = pkin(7) * t490;
t319 = qJD(2) * pkin(8) + t348;
t222 = t373 * t286 - t319 * t369;
t178 = -pkin(9) * t297 + t222;
t165 = -pkin(3) * t336 + t178;
t223 = t286 * t369 + t319 * t373;
t179 = -pkin(9) * t295 + t223;
t171 = t372 * t179;
t110 = t165 * t368 + t171;
t308 = t438 * qJD(2);
t227 = qJD(1) * t308 + qJDD(1) * t312;
t217 = t373 * t227;
t396 = qJD(2) * qJD(3) + t451 + t471;
t265 = pkin(7) * t577 + qJDD(2) * pkin(8);
t446 = -qJD(3) * t286 - t265;
t88 = t292 * pkin(3) + t323 * pkin(9) + t217 + (-pkin(9) * qJDD(2) + t446) * t369 + (-pkin(9) * t396 - qJD(3) * t319) * t373;
t485 = qJD(3) * t369;
t129 = t369 * t227 + t373 * t265 + t286 * t483 - t319 * t485;
t96 = -pkin(9) * t196 + t129;
t33 = -qJD(4) * t110 - t368 * t96 + t372 * t88;
t19 = pkin(4) * t285 + pkin(10) * t103 + t33;
t32 = t165 * t480 - t179 * t482 + t368 * t88 + t372 * t96;
t21 = -pkin(10) * t421 + t32;
t169 = t368 * t179;
t109 = t372 * t165 - t169;
t587 = pkin(10) * t430;
t85 = t109 - t587;
t78 = -pkin(4) * t326 + t85;
t586 = pkin(10) * t431;
t86 = t110 + t586;
t3 = t367 * t19 + t562 * t21 + t78 * t453 - t86 * t479;
t544 = g(3) * t370;
t398 = g(1) * t240 - g(2) * t238 + t342 * t544 - t3;
t537 = qJ(6) * t43;
t392 = t398 + t537;
t478 = qJD(6) * t142;
t318 = -qJD(2) * pkin(2) + pkin(7) * t491;
t234 = pkin(3) * t295 + t318;
t162 = -pkin(4) * t431 + t234;
t448 = -pkin(5) * t142 - qJD(6);
t92 = t162 - t448;
t597 = t142 * t92 + t392 + t478;
t588 = t142 * t162 + t398;
t596 = pkin(4) * t479;
t595 = pkin(4) * t562;
t594 = pkin(5) * t566;
t593 = t566 * t92;
t585 = qJ(6) * t566;
t405 = t562 * t425;
t501 = qJD(5) * t405 + t298 * t479 - t367 * t385 + t496 * t562;
t219 = t298 * t562 - t367 * t425;
t500 = qJD(5) * t219 - t367 * t496 - t385 * t562;
t561 = pkin(3) * t369;
t288 = t490 * t561 + t348;
t440 = pkin(3) * t485 - t288;
t487 = qJD(2) * t374;
t460 = t369 * t487;
t406 = t370 * t483 + t460;
t449 = t562 * t19 - t367 * t21;
t82 = t562 * t86;
t45 = t367 * t78 + t82;
t4 = -qJD(5) * t45 + t449;
t237 = t341 * t505 + t342 * t375;
t239 = -t341 * t502 + t342 * t371;
t574 = -g(1) * t239 + g(2) * t237 + t341 * t544;
t382 = t4 + t574;
t570 = -t162 * t566 + t382;
t560 = pkin(4) * t430;
t229 = t372 * t320 + t514;
t191 = t229 - t555;
t192 = -pkin(10) * t425 + t230;
t539 = t191 * t453 - t192 * t479 + t367 * t600 - t599 * t562;
t132 = t367 * t191 + t562 * t192;
t538 = -qJD(5) * t132 + t599 * t367 + t562 * t600;
t583 = t298 * t421;
t259 = t425 * t370;
t522 = t431 * t430;
t294 = t373 * t312;
t557 = pkin(7) * t369;
t221 = -pkin(9) * t508 + t294 + (-pkin(3) - t557) * t374;
t338 = pkin(7) * t504;
t243 = t369 * t312 + t338;
t512 = t369 * t370;
t228 = -pkin(9) * t512 + t243;
t151 = t372 * t221 - t228 * t368;
t126 = -pkin(4) * t374 + pkin(10) * t259 + t151;
t152 = t368 * t221 + t372 * t228;
t413 = t298 * t370;
t133 = -pkin(10) * t413 + t152;
t72 = t367 * t126 + t562 * t133;
t582 = t222 * t336 + t129;
t344 = pkin(3) * t372 + pkin(4);
t515 = t367 * t368;
t202 = t344 * t453 + (-t368 * t479 + (t372 * t562 - t515) * qJD(4)) * pkin(3);
t463 = t562 * t368;
t268 = pkin(3) * t463 + t367 * t344;
t269 = qJDD(5) + t285;
t581 = t202 * t317 - t268 * t269;
t497 = -pkin(4) * t385 + t440;
t258 = t269 * pkin(5);
t580 = -qJD(6) * t566 + t258;
t443 = pkin(4) * t453;
t558 = pkin(4) * t367;
t579 = -t269 * t558 + t317 * t443;
t578 = t396 * t373 + t444;
t412 = qJD(2) * t298;
t404 = t374 * t412;
t380 = t470 * t259 - t404;
t273 = t369 * t505 + t373 * t375;
t275 = -t369 * t502 + t371 * t373;
t576 = -g(1) * t275 + g(2) * t273;
t536 = t42 * qJ(6);
t575 = t536 + t580;
t354 = sin(t366);
t355 = cos(t366);
t251 = t354 * t505 + t355 * t375;
t253 = -t354 * t502 + t355 * t371;
t573 = -g(1) * t253 + g(2) * t251 + t354 * t544;
t572 = t430 ^ 2 - t431 ^ 2;
t571 = t326 * t431 - t103;
t569 = -t430 * t234 + t33 + t573;
t252 = t354 * t375 - t355 * t505;
t254 = t354 * t371 + t355 * t502;
t568 = g(1) * t254 - g(2) * t252 - t431 * t234 + t355 * t544 - t32;
t567 = -t326 * t430 - t421;
t565 = t574 - t593;
t564 = -0.2e1 * pkin(1);
t559 = pkin(4) * t354;
t556 = pkin(8) * t292;
t551 = g(1) * t371;
t545 = g(2) * t375;
t358 = t370 * pkin(7);
t218 = t298 * t367 + t405;
t542 = -qJ(6) * t500 - qJD(6) * t218 + t539;
t541 = -pkin(5) * t491 + qJ(6) * t501 - t219 * qJD(6) + t538;
t80 = t367 * t86;
t44 = t562 * t78 - t80;
t34 = t44 - t585;
t31 = -pkin(5) * t317 + t34;
t540 = -t34 + t31;
t360 = t373 * pkin(3);
t345 = t360 + pkin(2);
t51 = t562 * t85 - t80;
t116 = -t178 * t368 - t171;
t93 = t116 - t586;
t117 = t372 * t178 - t169;
t94 = t117 - t587;
t58 = t367 * t93 + t562 * t94;
t535 = -t142 * t443 - t43 * t558;
t534 = pkin(5) * t500 + t497;
t533 = pkin(7) * qJDD(1);
t531 = t103 * t298;
t164 = t196 * pkin(3) + t266;
t523 = t164 * t298;
t520 = t223 * t336;
t519 = t285 * t298;
t518 = t295 * t336;
t517 = t297 * t295;
t516 = t297 * t336;
t510 = t369 * t375;
t509 = t370 * t371;
t507 = t370 * t375;
t506 = t370 * t376;
t503 = t374 * t336;
t499 = t321 * t482 - t606;
t488 = qJD(2) * t370;
t495 = t373 * t308 + t488 * t557;
t340 = pkin(4) * t355;
t311 = t340 + t360;
t309 = pkin(3) * t512 + t358;
t494 = t375 * pkin(1) + t371 * pkin(7);
t364 = t370 ^ 2;
t365 = t374 ^ 2;
t493 = t364 - t365;
t492 = t364 + t365;
t486 = qJD(3) * t295;
t481 = qJD(4) * t369;
t476 = t223 * qJD(3);
t475 = t297 * qJD(3);
t474 = t318 * qJD(3);
t363 = -pkin(10) + t376;
t203 = -t344 * t479 + (-t368 * t453 + (-t367 * t372 - t463) * qJD(4)) * pkin(3);
t468 = -t202 * t142 - t203 * t566 - t268 * t43;
t378 = qJD(1) ^ 2;
t467 = t370 * t378 * t374;
t150 = t422 * qJD(2) + (-t338 + (pkin(9) * t370 - t312) * t369) * qJD(3) + t495;
t174 = t369 * t308 + t312 * t483 + (-t370 * t473 - t374 * t485) * pkin(7);
t157 = -pkin(9) * t406 + t174;
t466 = t368 * t150 + t372 * t157 + t221 * t480;
t334 = pkin(5) * t342;
t256 = t334 + t311;
t235 = pkin(3) * t406 + pkin(7) * t487;
t459 = t374 * t473;
t458 = t336 * t485;
t457 = t369 * t484;
t455 = t297 * t487;
t454 = t317 * t491;
t50 = -t367 * t85 - t82;
t57 = -t367 * t94 + t562 * t93;
t71 = t562 * t126 - t133 * t367;
t131 = t562 * t191 - t192 * t367;
t442 = t370 * t451;
t267 = -pkin(3) * t515 + t562 * t344;
t339 = g(1) * t509;
t441 = -g(2) * t507 + t339;
t168 = pkin(3) * t297 + t560;
t289 = -pkin(5) * t341 - t559;
t437 = -g(1) * t237 - g(2) * t239;
t436 = -g(1) * t238 - g(2) * t240;
t434 = pkin(7) * t295 + t318 * t369;
t250 = pkin(2) + t256;
t356 = -qJ(6) + t363;
t433 = t250 * t374 - t356 * t370;
t304 = pkin(2) + t311;
t429 = t304 * t374 - t363 * t370;
t427 = t345 * t374 - t506;
t424 = (g(1) * t507 + g(2) * t509 - t543) * t342;
t420 = -t374 * pkin(7) * t297 + t223 * t370;
t418 = t435 * t341;
t417 = -pkin(7) * qJDD(2) + t472 * t564;
t415 = t292 * t369 - t336 * t483;
t158 = t368 * t460 - t370 * t389 - t372 * t459;
t70 = -qJD(4) * t152 + t372 * t150 - t157 * t368;
t56 = pkin(4) * t488 + pkin(10) * t158 + t70;
t60 = (-t470 * t508 - t460) * pkin(10) * t372 + (-qJD(4) * t228 + (t370 * t481 + t457 - t459) * pkin(10)) * t368 + t466;
t9 = t126 * t453 - t133 * t479 + t367 * t56 + t562 * t60;
t414 = t234 * t298;
t409 = pkin(1) * t378 + t435;
t377 = qJD(2) ^ 2;
t408 = pkin(7) * t377 + qJDD(1) * t564 + t545;
t247 = pkin(4) * t425 - t345;
t403 = t562 * t413;
t399 = -t374 * t435 - t544;
t224 = pkin(4) * t413 + t309;
t10 = -qJD(5) * t72 - t367 * t60 + t562 * t56;
t182 = -t259 * t562 - t367 * t413;
t75 = pkin(4) * t421 + t164;
t387 = t407 + (t481 + t485) * t368;
t22 = t43 * pkin(5) + qJDD(6) + t75;
t381 = t382 + t536;
t134 = -pkin(4) * t380 + t235;
t361 = t375 * pkin(7);
t343 = pkin(5) + t595;
t316 = t341 * t543;
t310 = t559 + t561;
t290 = t334 + t340;
t276 = t369 * t371 + t373 * t502;
t274 = -t371 * t504 + t510;
t260 = pkin(5) + t267;
t255 = -t289 + t561;
t242 = -pkin(7) * t511 + t294;
t232 = -pkin(7) * t461 + t279;
t207 = -t269 * t374 - t317 * t488;
t181 = -t259 * t367 + t403;
t177 = t203 * t317;
t175 = -qJD(3) * t243 + t495;
t166 = t218 * pkin(5) + t247;
t138 = t181 * pkin(5) + t224;
t130 = -t369 * t265 + t217 - t476;
t104 = t560 + t594;
t99 = -qJ(6) * t218 + t132;
t98 = -qJ(6) * t219 + t131;
t97 = t168 + t594;
t74 = qJD(5) * t182 - t367 * t158 - t380 * t562;
t73 = qJD(5) * t403 + t158 * t562 - t259 * t479 - t367 * t380;
t69 = -t228 * t482 + t466;
t65 = -qJ(6) * t181 + t72;
t64 = -pkin(5) * t374 - qJ(6) * t182 + t71;
t63 = t74 * pkin(5) + t134;
t47 = t142 * t491 - t218 * t269 + t317 * t500;
t46 = t219 * t269 + t317 * t501 - t491 * t566;
t39 = t58 - t585;
t38 = t57 + t591;
t37 = t51 - t585;
t36 = t50 + t591;
t35 = t45 - t591;
t16 = t142 * t74 + t181 * t43;
t15 = -t182 * t42 - t566 * t73;
t14 = -t142 * t488 - t181 * t269 + t317 * t74 + t374 * t43;
t13 = t182 * t269 + t317 * t73 + t374 * t42 + t488 * t566;
t12 = t142 * t500 + t218 * t43;
t11 = -t219 * t42 - t501 * t566;
t8 = -qJ(6) * t74 - qJD(6) * t181 + t9;
t7 = pkin(5) * t488 + t73 * qJ(6) - t182 * qJD(6) + t10;
t6 = t142 * t73 + t181 * t42 - t182 * t43 - t566 * t74;
t5 = t142 * t501 + t218 * t42 - t219 * t43 - t500 * t566;
t2 = t3 - t478 - t537;
t1 = t4 + t575;
t17 = [0, 0, 0, 0, 0, qJDD(1), -t545 + t551, t435, 0, 0, qJDD(1) * t364 + 0.2e1 * t442, 0.2e1 * t352 * t370 - 0.2e1 * t472 * t493, qJDD(2) * t370 + t374 * t377, qJDD(1) * t365 - 0.2e1 * t442, qJDD(2) * t374 - t370 * t377, 0, t417 * t370 + (-t408 + t551) * t374, t370 * t408 + t374 * t417 - t339, 0.2e1 * t492 * t533 - t435, -g(1) * (-pkin(1) * t371 + t361) - g(2) * t494 + (pkin(7) ^ 2 * t492 + pkin(1) ^ 2) * qJDD(1), -t297 * t457 + (t370 * t578 + t455) * t373 (-t455 + (-t444 + t486) * t370) * t369 + (-t295 * t487 + (-t196 - t475 - t394) * t370) * t373, -t444 * t374 + (qJD(2) * t297 + t458) * t370 + ((t292 - t352) * t370 + (-t336 - t445) * t487) * t373, t196 * t512 + t295 * t406 (t336 * t489 + t196) * t374 + (-qJD(2) * t295 - t415) * t370, -t292 * t374 - t336 * t488, -g(1) * t274 - g(2) * t276 - t175 * t336 + t242 * t292 + (qJD(2) * t434 - t130) * t374 + (pkin(7) * t196 + qJD(2) * t222 + t266 * t369 + t373 * t474) * t370, -g(1) * t273 - g(2) * t275 + t129 * t374 + t174 * t336 - t243 * t292 + (-t369 * t474 + t266 * t373 + (t373 * t471 + t444) * pkin(7)) * t370 + ((t318 * t374 + t358 * t445) * t373 - t420) * qJD(2), -t174 * t295 - t243 * t196 - t175 * t297 - t242 * t444 + t339 + (-t223 * t511 + (-t222 * t374 - t242 * t445) * t373) * qJD(2) + (-t545 + (t222 * qJD(3) - t129) * t369 + (-qJDD(1) * t242 - t130 - t476) * t373) * t370, t129 * t243 + t223 * t174 + t130 * t242 + t222 * t175 - g(1) * t361 - g(2) * (t375 * t439 + t494) - t312 * t551 + (t266 * t370 + t318 * t487) * pkin(7), t103 * t259 - t158 * t430, -t158 * t431 + t259 * t421 - t430 * t404 + (t387 * t430 + t531) * t370, t103 * t374 + t158 * t326 - t259 * t285 + t430 * t488, -t431 * t404 + (t387 * t431 + t583) * t370 (t326 * t412 + t421) * t374 + (qJD(2) * t431 - t326 * t387 - t519) * t370, -t285 * t374 - t326 * t488, -t70 * t326 + t151 * t285 - t235 * t431 + t309 * t421 - g(1) * t252 - g(2) * t254 + (qJD(2) * t414 - t33) * t374 + (t109 * qJD(2) - t234 * t387 + t523) * t370, -g(1) * t251 - g(2) * t253 - t103 * t309 - t110 * t488 - t152 * t285 - t158 * t234 - t164 * t259 + t235 * t430 + t32 * t374 + t326 * t69, t69 * t431 - t152 * t421 - t70 * t430 + t151 * t103 + t33 * t259 + t109 * t158 + t339 - t110 * t404 + (t110 * t387 - t298 * t32 - t545) * t370, t32 * t152 + t110 * t69 + t33 * t151 + t109 * t70 + t164 * t309 + t234 * t235 - g(1) * (pkin(3) * t510 + t361) - g(2) * (t345 * t502 - t375 * t506 + t494) + (-g(1) * (-pkin(1) - t427) - g(2) * t561) * t371, t15, t6, t13, t16, t14, t207, -t10 * t317 + t134 * t142 + t162 * t74 + t181 * t75 + t224 * t43 + t269 * t71 - t374 * t4 + t44 * t488 + t436, t134 * t566 - t162 * t73 + t182 * t75 - t224 * t42 - t269 * t72 + t3 * t374 + t317 * t9 - t45 * t488 + t437, -t10 * t566 - t142 * t9 - t181 * t3 - t182 * t4 + t42 * t71 - t43 * t72 + t44 * t73 - t45 * t74 + t441, t3 * t72 + t45 * t9 + t4 * t71 + t44 * t10 + t75 * t224 + t162 * t134 - g(1) * (t310 * t375 + t361) - g(2) * (t304 * t502 - t363 * t507 + t494) + (-g(1) * (-pkin(1) - t429) - g(2) * t310) * t371, t15, t6, t13, t16, t14, t207, -t1 * t374 + t138 * t43 + t142 * t63 + t181 * t22 + t269 * t64 + t31 * t488 - t317 * t7 + t74 * t92 + t436, -t138 * t42 + t182 * t22 + t2 * t374 - t269 * t65 + t317 * t8 - t35 * t488 + t566 * t63 - t73 * t92 + t437, -t1 * t182 - t142 * t8 - t181 * t2 + t31 * t73 - t35 * t74 + t42 * t64 - t43 * t65 - t566 * t7 + t441, t2 * t65 + t35 * t8 + t1 * t64 + t31 * t7 + t22 * t138 + t92 * t63 - g(1) * (t255 * t375 + t361) - g(2) * (t250 * t502 - t356 * t507 + t494) + (-g(1) * (-pkin(1) - t433) - g(2) * t255) * t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t467, t493 * t378, t471, t467, t352, qJDD(2), t370 * t409 - t346 - t543, t544 + (t409 - t533) * t374, 0, 0, t444 * t369 + (t394 - t516) * t373 (-t196 + t516) * t369 + (t518 + t578) * t373 (-t297 * t370 + t373 * t503) * qJD(1) + t415, -t196 * t373 - t369 * t518, t458 + t292 * t373 + (t295 * t370 - t369 * t503) * qJD(1), t336 * t491, -pkin(2) * t196 + t231 * t336 + (t474 - t556) * t369 + (-t222 * t370 - t374 * t434) * qJD(1) + t604 * t373, pkin(2) * t323 - t232 * t336 + t420 * qJD(1) + (-pkin(2) * t396 - t318 * t336 - t556) * t373 + (-t532 - t604) * t369, t231 * t297 + t232 * t295 + (-t130 + t520 + (t444 + t486) * pkin(8)) * t369 + ((t369 * t396 - t196 + t475) * pkin(8) + t582) * t373 + t399, -t318 * t348 - t222 * t231 - t223 * t232 + t395 * pkin(2) + (t129 * t373 - t130 * t369 + (-t222 * t373 - t223 * t369) * qJD(3) + t399) * pkin(8), -t430 * t496 - t531, t103 * t425 + t385 * t430 - t431 * t496 - t583, t326 * t496 - t430 * t491 + t519, t385 * t431 + t421 * t425, -t425 * t285 - t326 * t385 - t431 * t491, t326 * t491, t229 * t285 - t345 * t421 + t164 * t425 - t109 * t491 + t288 * t431 - t498 * t326 + (-t431 * t561 + t414) * qJD(3) + t402 * t355 + (-t244 + t410) * t234, t103 * t345 + t110 * t491 - t230 * t285 - t234 * t496 + t326 * t499 - t354 * t402 + t430 * t440 + t523, t229 * t103 + t109 * t496 + t110 * t385 - t230 * t421 - t33 * t298 - t32 * t425 - t430 * t498 + t431 * t499 + t399, -g(3) * t427 + t109 * t498 + t110 * t499 - t164 * t345 + t33 * t229 + t32 * t230 + t234 * t440 + t435 * (t345 * t370 + t374 * t376) t11, t5, t46, t12, t47, t454, t131 * t269 + t142 * t497 + t162 * t500 + t218 * t75 + t247 * t43 - t317 * t538 - t44 * t491 + t424, -t132 * t269 + t219 * t75 - t247 * t42 + t316 + t539 * t317 - t501 * t162 + t497 * t566 + (qJD(1) * t45 - t418) * t370, t131 * t42 - t132 * t43 - t142 * t539 - t218 * t3 - t219 * t4 + t44 * t501 - t45 * t500 - t538 * t566 + t399, -g(3) * t429 + t4 * t131 + t3 * t132 + t497 * t162 + t75 * t247 + t538 * t44 + t539 * t45 + t435 * (t304 * t370 + t363 * t374) t11, t5, t46, t12, t47, t454, t142 * t534 + t166 * t43 + t218 * t22 + t269 * t98 - t31 * t491 - t317 * t541 + t500 * t92 + t424, -t166 * t42 + t219 * t22 - t269 * t99 + t316 - t501 * t92 + t542 * t317 + t534 * t566 + (qJD(1) * t35 - t418) * t370, -t1 * t219 - t142 * t542 - t2 * t218 + t31 * t501 - t35 * t500 + t42 * t98 - t43 * t99 - t541 * t566 + t399, -g(3) * t433 + t1 * t98 + t22 * t166 + t2 * t99 + t541 * t31 + t542 * t35 + t534 * t92 + t435 * (t250 * t370 + t356 * t374); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t517, -t295 ^ 2 + t297 ^ 2, t386 - t518, -t517, -t516 - t196, t292, -t319 * t483 - t520 - t297 * t318 + t217 + (t446 + t544) * t369 + t576, g(1) * t276 - g(2) * t274 + g(3) * t508 + t295 * t318 - t582, 0, 0, -t522, t572, t571, t522, t567, t285, t116 * t326 + (t285 * t372 + t297 * t431 + t326 * t482) * pkin(3) + t569, -t117 * t326 + (-t285 * t368 - t297 * t430 + t326 * t480) * pkin(3) + t568, t109 * t431 + t110 * t430 + t116 * t430 - t117 * t431 + (-t421 * t368 + t103 * t372 + (t368 * t430 + t372 * t431) * qJD(4)) * pkin(3), -t109 * t116 - t110 * t117 + (t32 * t368 + t33 * t372 - t234 * t297 + g(3) * t512 + (-t109 * t368 + t110 * t372) * qJD(4) + t576) * pkin(3), t601, t605, t603, -t601, t602, t269, -t168 * t142 + t267 * t269 + t57 * t317 - t177 + t570, -t168 * t566 - t317 * t58 + t581 + t588, t267 * t42 + t468 + (t45 + t57) * t566 + (t58 - t44) * t142, t3 * t268 + t4 * t267 - t162 * t168 - g(1) * (-t310 * t502 + t311 * t371) - g(2) * (-t310 * t505 - t311 * t375) + t310 * t544 + (t202 - t58) * t45 + (t203 - t57) * t44, t601, t605, t603, -t601, t602, t269, -t97 * t142 + t260 * t269 + t38 * t317 - t177 + t381 + t580 - t593, -t317 * t39 - t566 * t97 + t581 + t597, t260 * t42 + t468 + (t35 + t38) * t566 + (t39 - t31) * t142, t2 * t268 + t1 * t260 - t92 * t97 - g(1) * (-t255 * t502 + t256 * t371) - g(2) * (-t255 * t505 - t256 * t375) + t255 * t544 + (t202 - t39) * t35 + (t203 - t38) * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t522, t572, t571, t522, t567, t285, -t110 * t326 + t569, -t109 * t326 + t568, 0, 0, t601, t605, t603, -t601, t602, t269, t50 * t317 + (-t142 * t430 + t269 * t562 + t317 * t479) * pkin(4) + t570, -t317 * t51 - t560 * t566 + t579 + t588, t42 * t595 + t535 + (t45 + t50 + t596) * t566 + (t51 - t44) * t142, -t44 * t50 - t45 * t51 + (t3 * t367 + t4 * t562 - t162 * t430 + (-t44 * t367 + t45 * t562) * qJD(5) + t573) * pkin(4), t601, t605, t603, -t601, t602, t269, -t104 * t142 + t343 * t269 + t36 * t317 + (-t82 + (pkin(4) * t317 - t78) * t367) * qJD(5) + t449 + t565 + t575, -t104 * t566 - t317 * t37 + t579 + t597, t343 * t42 + t535 + (t35 + t36 + t596) * t566 + (t37 - t31) * t142, t1 * t343 - t35 * t37 - t31 * t36 - t92 * t104 - g(1) * (t289 * t502 + t290 * t371) - g(2) * (t289 * t505 - t290 * t375) - t289 * t544 + (t2 * t367 + (-t31 * t367 + t35 * t562) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t601, t605, t603, -t601, t602, t269, -t45 * t317 + t570, -t317 * t44 + t588, 0, 0, t601, t605, t603, -t601, t602, t269, -t35 * t317 + 0.2e1 * t258 + (t448 - t92) * t566 + t381, -pkin(5) * t563 - t317 * t34 + (qJD(6) + t92) * t142 + t392, pkin(5) * t42 - t142 * t540, t540 * t35 + (t1 + t565) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43 - t524, -t42 + t528, -t139 - t563, t35 * t142 + t31 * t566 + t22 - t402;];
tau_reg  = t17;
