% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 19:23
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPRR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR8_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 19:22:51
% EndTime: 2019-05-05 19:22:56
% DurationCPUTime: 5.09s
% Computational Cost: add. (30852->298), mult. (68446->365), div. (0->0), fcn. (47827->10), ass. (0->209)
t1742 = sin(pkin(10));
t1743 = cos(pkin(10));
t1747 = sin(qJ(3));
t1751 = cos(qJ(3));
t1713 = (t1742 * t1751 + t1743 * t1747) * qJD(1);
t1711 = qJD(5) + t1713;
t1708 = qJD(6) + t1711;
t1802 = qJD(6) + t1708;
t1790 = qJD(1) * t1751;
t1774 = qJD(3) * t1790;
t1777 = t1747 * qJDD(1);
t1720 = -t1774 - t1777;
t1739 = t1747 ^ 2;
t1754 = qJD(1) ^ 2;
t1748 = sin(qJ(1));
t1752 = cos(qJ(1));
t1730 = -t1752 * g(1) - t1748 * g(2);
t1760 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1730;
t1763 = qJD(3) * pkin(3) - qJ(4) * t1790;
t1792 = pkin(7) + pkin(1);
t1677 = t1720 * pkin(3) + t1754 * (qJ(4) * t1739 + t1792) - t1763 * t1790 - qJDD(4) + t1760;
t1791 = qJD(1) * t1747;
t1715 = -t1742 * t1791 + t1743 * t1790;
t1746 = sin(qJ(5));
t1750 = cos(qJ(5));
t1697 = -t1750 * qJD(3) + t1715 * t1746;
t1699 = qJD(3) * t1746 + t1715 * t1750;
t1745 = sin(qJ(6));
t1749 = cos(qJ(6));
t1678 = t1749 * t1697 + t1699 * t1745;
t1801 = t1678 ^ 2;
t1680 = -t1697 * t1745 + t1699 * t1749;
t1800 = t1680 ^ 2;
t1799 = t1697 ^ 2;
t1798 = t1699 ^ 2;
t1797 = t1708 ^ 2;
t1796 = t1711 ^ 2;
t1795 = t1713 ^ 2;
t1794 = t1715 ^ 2;
t1793 = 2 * qJD(4);
t1789 = qJD(3) * t1713;
t1788 = qJD(3) * t1715;
t1787 = t1678 * t1680;
t1786 = t1697 * t1699;
t1785 = t1711 * t1697;
t1784 = t1713 * t1715;
t1783 = t1739 * t1754;
t1782 = t1751 * t1754;
t1781 = qJD(5) - t1711;
t1780 = qJD(6) - t1708;
t1729 = t1748 * g(1) - t1752 * g(2);
t1761 = -t1754 * qJ(2) + qJDD(2) - t1729;
t1758 = -qJDD(1) * t1792 + t1761;
t1694 = -t1751 * g(3) + t1747 * t1758;
t1676 = -pkin(3) * t1783 + t1720 * qJ(4) - qJD(3) * t1763 + t1694;
t1775 = qJD(3) * t1791;
t1776 = t1751 * qJDD(1);
t1721 = -t1775 + t1776;
t1756 = t1751 * t1758;
t1755 = t1756 - t1721 * qJ(4) + qJDD(3) * pkin(3) + (-qJ(4) * qJD(1) * qJD(3) - pkin(3) * t1782 + g(3)) * t1747;
t1647 = t1743 * t1676 - t1713 * t1793 + t1742 * t1755;
t1688 = pkin(4) * t1713 - pkin(8) * t1715;
t1753 = qJD(3) ^ 2;
t1633 = -pkin(4) * t1753 + qJDD(3) * pkin(8) - t1688 * t1713 + t1647;
t1779 = -t1743 * t1720 + t1742 * t1721;
t1682 = t1779 + t1788;
t1692 = t1720 * t1742 + t1721 * t1743;
t1771 = -t1692 + t1789;
t1639 = pkin(4) * t1682 + pkin(8) * t1771 - t1677;
t1609 = t1750 * t1633 + t1746 * t1639;
t1740 = t1751 ^ 2;
t1778 = t1739 + t1740;
t1773 = t1747 * t1782;
t1772 = -qJDD(5) - t1779;
t1608 = -t1746 * t1633 + t1750 * t1639;
t1764 = -t1746 * qJDD(3) - t1750 * t1692;
t1667 = -qJD(5) * t1697 - t1764;
t1768 = -t1750 * qJDD(3) + t1746 * t1692;
t1762 = qJD(5) * t1699 + t1768;
t1770 = -t1745 * t1667 - t1749 * t1762;
t1769 = t1742 * t1676 - t1743 * t1755;
t1766 = -qJDD(6) + t1772;
t1658 = -t1772 - t1786;
t1632 = -qJDD(3) * pkin(4) - t1753 * pkin(8) + (t1793 + t1688) * t1715 + t1769;
t1759 = -t1749 * t1667 + t1745 * t1762;
t1733 = -t1740 * t1754 - t1753;
t1732 = -t1753 - t1783;
t1728 = -qJDD(3) - t1773;
t1727 = qJDD(3) - t1773;
t1726 = t1778 * t1754;
t1725 = qJDD(1) * t1748 + t1752 * t1754;
t1724 = qJDD(1) * t1752 - t1748 * t1754;
t1723 = t1778 * qJDD(1);
t1722 = -0.2e1 * t1775 + t1776;
t1719 = 0.2e1 * t1774 + t1777;
t1712 = qJDD(1) * pkin(1) - t1761;
t1707 = t1754 * pkin(1) + t1760;
t1706 = -t1753 - t1794;
t1705 = t1754 * t1792 + t1760;
t1703 = t1728 * t1751 - t1733 * t1747;
t1702 = -t1727 * t1747 + t1732 * t1751;
t1701 = t1728 * t1747 + t1733 * t1751;
t1700 = t1727 * t1751 + t1732 * t1747;
t1693 = t1747 * g(3) + t1756;
t1691 = -qJDD(3) - t1784;
t1690 = qJDD(3) - t1784;
t1689 = -t1753 - t1795;
t1686 = pkin(5) * t1711 - pkin(9) * t1699;
t1685 = -t1692 - t1789;
t1683 = -t1779 + t1788;
t1681 = -t1794 - t1795;
t1675 = -t1796 - t1798;
t1674 = t1691 * t1743 - t1706 * t1742;
t1673 = t1691 * t1742 + t1706 * t1743;
t1671 = -t1693 * t1747 + t1694 * t1751;
t1670 = t1693 * t1751 + t1694 * t1747;
t1665 = -t1796 - t1799;
t1662 = -t1798 - t1799;
t1661 = t1689 * t1743 - t1690 * t1742;
t1660 = t1689 * t1742 + t1690 * t1743;
t1659 = t1772 - t1786;
t1657 = -t1797 - t1800;
t1656 = t1683 * t1743 - t1685 * t1742;
t1655 = t1683 * t1742 + t1685 * t1743;
t1654 = t1697 * t1781 + t1764;
t1653 = t1667 - t1785;
t1652 = -t1699 * t1781 - t1768;
t1651 = (qJD(5) + t1711) * t1699 + t1768;
t1650 = -t1673 * t1747 + t1674 * t1751;
t1649 = t1673 * t1751 + t1674 * t1747;
t1648 = -t1797 - t1801;
t1646 = -0.2e1 * qJD(4) * t1715 - t1769;
t1645 = t1766 - t1787;
t1644 = -t1766 - t1787;
t1643 = t1659 * t1750 - t1675 * t1746;
t1642 = t1659 * t1746 + t1675 * t1750;
t1641 = -t1658 * t1746 + t1665 * t1750;
t1640 = t1658 * t1750 + t1665 * t1746;
t1636 = -t1660 * t1747 + t1661 * t1751;
t1635 = t1660 * t1751 + t1661 * t1747;
t1634 = -t1800 - t1801;
t1630 = -t1655 * t1747 + t1656 * t1751;
t1629 = t1655 * t1751 + t1656 * t1747;
t1628 = t1652 * t1750 - t1654 * t1746;
t1627 = t1652 * t1746 + t1654 * t1750;
t1626 = t1645 * t1749 - t1657 * t1745;
t1625 = t1645 * t1745 + t1657 * t1749;
t1624 = t1643 * t1743 + t1653 * t1742;
t1623 = t1643 * t1742 - t1653 * t1743;
t1622 = t1678 * t1780 + t1759;
t1621 = -t1678 * t1802 - t1759;
t1620 = -t1680 * t1780 + t1770;
t1619 = t1680 * t1802 - t1770;
t1618 = t1641 * t1743 + t1651 * t1742;
t1617 = t1641 * t1742 - t1651 * t1743;
t1616 = -t1644 * t1745 + t1648 * t1749;
t1615 = t1644 * t1749 + t1648 * t1745;
t1614 = -t1646 * t1742 + t1647 * t1743;
t1613 = t1646 * t1743 + t1647 * t1742;
t1612 = t1628 * t1743 + t1662 * t1742;
t1611 = t1628 * t1742 - t1662 * t1743;
t1610 = pkin(5) * t1762 - pkin(9) * t1799 + t1699 * t1686 + t1632;
t1607 = -t1625 * t1746 + t1626 * t1750;
t1606 = t1625 * t1750 + t1626 * t1746;
t1605 = -pkin(5) * t1799 - pkin(9) * t1762 - t1711 * t1686 + t1609;
t1604 = -t1623 * t1747 + t1624 * t1751;
t1603 = t1623 * t1751 + t1624 * t1747;
t1602 = t1620 * t1749 - t1622 * t1745;
t1601 = t1620 * t1745 + t1622 * t1749;
t1600 = -t1617 * t1747 + t1618 * t1751;
t1599 = t1617 * t1751 + t1618 * t1747;
t1598 = (-t1667 - t1785) * pkin(9) + t1658 * pkin(5) + t1608;
t1597 = -t1615 * t1746 + t1616 * t1750;
t1596 = t1615 * t1750 + t1616 * t1746;
t1595 = -t1613 * t1747 + t1614 * t1751;
t1594 = t1613 * t1751 + t1614 * t1747;
t1593 = -t1611 * t1747 + t1612 * t1751;
t1592 = t1611 * t1751 + t1612 * t1747;
t1591 = -t1608 * t1746 + t1609 * t1750;
t1590 = t1608 * t1750 + t1609 * t1746;
t1589 = t1607 * t1743 + t1621 * t1742;
t1588 = t1607 * t1742 - t1621 * t1743;
t1587 = t1597 * t1743 + t1619 * t1742;
t1586 = t1597 * t1742 - t1619 * t1743;
t1585 = t1591 * t1743 + t1632 * t1742;
t1584 = t1591 * t1742 - t1632 * t1743;
t1583 = t1598 * t1745 + t1605 * t1749;
t1582 = t1598 * t1749 - t1605 * t1745;
t1581 = -t1601 * t1746 + t1602 * t1750;
t1580 = t1601 * t1750 + t1602 * t1746;
t1579 = t1581 * t1743 + t1634 * t1742;
t1578 = t1581 * t1742 - t1634 * t1743;
t1577 = -t1588 * t1747 + t1589 * t1751;
t1576 = t1588 * t1751 + t1589 * t1747;
t1575 = -t1586 * t1747 + t1587 * t1751;
t1574 = t1586 * t1751 + t1587 * t1747;
t1573 = -t1584 * t1747 + t1585 * t1751;
t1572 = t1584 * t1751 + t1585 * t1747;
t1571 = -t1582 * t1745 + t1583 * t1749;
t1570 = t1582 * t1749 + t1583 * t1745;
t1569 = -t1578 * t1747 + t1579 * t1751;
t1568 = t1578 * t1751 + t1579 * t1747;
t1567 = -t1570 * t1746 + t1571 * t1750;
t1566 = t1570 * t1750 + t1571 * t1746;
t1565 = t1567 * t1743 + t1610 * t1742;
t1564 = t1567 * t1742 - t1610 * t1743;
t1563 = -t1564 * t1747 + t1565 * t1751;
t1562 = t1564 * t1751 + t1565 * t1747;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1725, -t1724, 0, -t1729 * t1748 + t1730 * t1752, 0, 0, 0, 0, 0, 0, 0, t1725, t1724, -t1707 * t1752 - t1712 * t1748, 0, 0, 0, 0, 0, 0, t1700 * t1748 + t1719 * t1752, t1701 * t1748 + t1722 * t1752, -t1723 * t1748 - t1726 * t1752, t1670 * t1748 - t1705 * t1752, 0, 0, 0, 0, 0, 0, t1635 * t1748 + t1682 * t1752, t1649 * t1748 - t1752 * t1771, t1629 * t1748 + t1681 * t1752, t1594 * t1748 - t1677 * t1752, 0, 0, 0, 0, 0, 0, t1599 * t1748 + t1640 * t1752, t1603 * t1748 + t1642 * t1752, t1592 * t1748 + t1627 * t1752, t1572 * t1748 + t1590 * t1752, 0, 0, 0, 0, 0, 0, t1574 * t1748 + t1596 * t1752, t1576 * t1748 + t1606 * t1752, t1568 * t1748 + t1580 * t1752, t1562 * t1748 + t1566 * t1752; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1724, -t1725, 0, t1729 * t1752 + t1730 * t1748, 0, 0, 0, 0, 0, 0, 0, -t1724, t1725, -t1707 * t1748 + t1712 * t1752, 0, 0, 0, 0, 0, 0, -t1700 * t1752 + t1719 * t1748, -t1701 * t1752 + t1722 * t1748, t1723 * t1752 - t1726 * t1748, -t1670 * t1752 - t1705 * t1748, 0, 0, 0, 0, 0, 0, -t1635 * t1752 + t1682 * t1748, -t1649 * t1752 - t1748 * t1771, -t1629 * t1752 + t1681 * t1748, -t1594 * t1752 - t1677 * t1748, 0, 0, 0, 0, 0, 0, -t1599 * t1752 + t1640 * t1748, -t1603 * t1752 + t1642 * t1748, -t1592 * t1752 + t1627 * t1748, -t1572 * t1752 + t1590 * t1748, 0, 0, 0, 0, 0, 0, -t1574 * t1752 + t1596 * t1748, -t1576 * t1752 + t1606 * t1748, -t1568 * t1752 + t1580 * t1748, -t1562 * t1752 + t1566 * t1748; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1702, t1703, 0, t1671, 0, 0, 0, 0, 0, 0, t1636, t1650, t1630, t1595, 0, 0, 0, 0, 0, 0, t1600, t1604, t1593, t1573, 0, 0, 0, 0, 0, 0, t1575, t1577, t1569, t1563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1754, -qJDD(1), 0, t1730, 0, 0, 0, 0, 0, 0, 0, t1754, qJDD(1), -t1707, 0, 0, 0, 0, 0, 0, t1719, t1722, -t1726, -t1705, 0, 0, 0, 0, 0, 0, t1682, -t1771, t1681, -t1677, 0, 0, 0, 0, 0, 0, t1640, t1642, t1627, t1590, 0, 0, 0, 0, 0, 0, t1596, t1606, t1580, t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1754, 0, t1729, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1754, t1712, 0, 0, 0, 0, 0, 0, -t1700, -t1701, t1723, -t1670, 0, 0, 0, 0, 0, 0, -t1635, -t1649, -t1629, -t1594, 0, 0, 0, 0, 0, 0, -t1599, -t1603, -t1592, -t1572, 0, 0, 0, 0, 0, 0, -t1574, -t1576, -t1568, -t1562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1702, t1703, 0, t1671, 0, 0, 0, 0, 0, 0, t1636, t1650, t1630, t1595, 0, 0, 0, 0, 0, 0, t1600, t1604, t1593, t1573, 0, 0, 0, 0, 0, 0, t1575, t1577, t1569, t1563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1702, t1703, 0, t1671, 0, 0, 0, 0, 0, 0, t1636, t1650, t1630, t1595, 0, 0, 0, 0, 0, 0, t1600, t1604, t1593, t1573, 0, 0, 0, 0, 0, 0, t1575, t1577, t1569, t1563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1754, -qJDD(1), t1707, 0, 0, 0, 0, 0, 0, -t1719, -t1722, t1726, t1705, 0, 0, 0, 0, 0, 0, -t1682, t1771, -t1681, t1677, 0, 0, 0, 0, 0, 0, -t1640, -t1642, -t1627, -t1590, 0, 0, 0, 0, 0, 0, -t1596, -t1606, -t1580, -t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1754, -t1712, 0, 0, 0, 0, 0, 0, t1700, t1701, -t1723, t1670, 0, 0, 0, 0, 0, 0, t1635, t1649, t1629, t1594, 0, 0, 0, 0, 0, 0, t1599, t1603, t1592, t1572, 0, 0, 0, 0, 0, 0, t1574, t1576, t1568, t1562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1732, t1728, -t1777, t1694, 0, 0, 0, 0, 0, 0, t1661, t1674, t1656, t1614, 0, 0, 0, 0, 0, 0, t1618, t1624, t1612, t1585, 0, 0, 0, 0, 0, 0, t1587, t1589, t1579, t1565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1727, t1733, -t1776, t1693, 0, 0, 0, 0, 0, 0, t1660, t1673, t1655, t1613, 0, 0, 0, 0, 0, 0, t1617, t1623, t1611, t1584, 0, 0, 0, 0, 0, 0, t1586, t1588, t1578, t1564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1719, t1722, -t1726, -t1705, 0, 0, 0, 0, 0, 0, t1682, -t1771, t1681, -t1677, 0, 0, 0, 0, 0, 0, t1640, t1642, t1627, t1590, 0, 0, 0, 0, 0, 0, t1596, t1606, t1580, t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1689, t1691, t1683, t1647, 0, 0, 0, 0, 0, 0, t1641, t1643, t1628, t1591, 0, 0, 0, 0, 0, 0, t1597, t1607, t1581, t1567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1690, t1706, t1685, t1646, 0, 0, 0, 0, 0, 0, -t1651, -t1653, -t1662, -t1632, 0, 0, 0, 0, 0, 0, -t1619, -t1621, -t1634, -t1610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1682, -t1771, t1681, -t1677, 0, 0, 0, 0, 0, 0, t1640, t1642, t1627, t1590, 0, 0, 0, 0, 0, 0, t1596, t1606, t1580, t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1665, t1659, t1652, t1609, 0, 0, 0, 0, 0, 0, t1616, t1626, t1602, t1571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1658, t1675, t1654, t1608, 0, 0, 0, 0, 0, 0, t1615, t1625, t1601, t1570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1651, t1653, t1662, t1632, 0, 0, 0, 0, 0, 0, t1619, t1621, t1634, t1610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1648, t1645, t1620, t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1644, t1657, t1622, t1582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1619, t1621, t1634, t1610;];
f_new_reg  = t1;
