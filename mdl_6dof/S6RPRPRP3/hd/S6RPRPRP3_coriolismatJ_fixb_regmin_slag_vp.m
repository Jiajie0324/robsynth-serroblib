% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:09:39
% EndTime: 2019-03-09 03:09:54
% DurationCPUTime: 7.26s
% Computational Cost: add. (7560->475), mult. (15677->618), div. (0->0), fcn. (16076->8), ass. (0->356)
t355 = cos(qJ(3));
t350 = sin(pkin(10));
t353 = sin(qJ(5));
t351 = cos(pkin(10));
t530 = cos(qJ(5));
t428 = t530 * t351;
t374 = -t353 * t350 + t428;
t553 = t374 * t355;
t557 = -t553 / 0.2e1;
t525 = pkin(8) + qJ(4);
t323 = t525 * t351;
t413 = t525 * t350;
t237 = t353 * t323 + t530 * t413;
t238 = t530 * t323 - t353 * t413;
t429 = t530 * t350;
t487 = t353 * t351;
t307 = t429 + t487;
t534 = t307 / 0.2e1;
t537 = t374 / 0.2e1;
t354 = sin(qJ(3));
t280 = t374 * t354;
t538 = t280 / 0.2e1;
t277 = t307 * t354;
t541 = -t277 / 0.2e1;
t339 = -cos(pkin(9)) * pkin(1) - pkin(2);
t369 = -t525 * t354 + t339;
t338 = sin(pkin(9)) * pkin(1) + pkin(7);
t412 = -t338 * t350 - pkin(4);
t327 = t355 * t338;
t312 = t351 * t327;
t526 = t355 * pkin(3);
t405 = -t354 * qJ(4) - t526;
t363 = t339 + t405;
t233 = t350 * t363 + t312;
t491 = t350 * t354;
t182 = -pkin(8) * t491 + t233;
t431 = t530 * t182;
t72 = t431 + t369 * t487 + (t353 * (-pkin(3) * t351 + t412) - qJ(6)) * t355;
t356 = t412 * t355 + (t369 - t526) * t351;
t79 = t353 * t182 - t530 * t356;
t73 = pkin(5) * t355 + t79;
t556 = t237 * t538 + t238 * t541 + t73 * t534 + t537 * t72;
t414 = t553 / 0.2e1;
t409 = t355 * t530 / 0.2e1;
t486 = t353 * t355;
t466 = -t350 * t486 / 0.2e1 + t351 * t409;
t399 = t414 + t466;
t166 = t399 * qJD(3);
t445 = t277 * qJD(5);
t555 = -t445 + t166;
t415 = t486 / 0.2e1;
t531 = -t355 / 0.2e1;
t193 = t350 * t415 + t428 * t531 + t414;
t161 = t193 * qJD(3);
t435 = t355 * qJD(1);
t258 = t277 * t435;
t554 = t445 + t161 - t258;
t326 = t354 * t338;
t292 = pkin(4) * t491 + t326;
t404 = pkin(5) * t277 - qJ(6) * t280;
t117 = t404 + t292;
t154 = pkin(5) * t280 + qJ(6) * t277;
t340 = -pkin(4) * t351 - pkin(3);
t403 = -pkin(5) * t374 - qJ(6) * t307;
t206 = t340 + t403;
t234 = pkin(5) * t307 - qJ(6) * t374;
t432 = t79 / 0.2e1 - t73 / 0.2e1;
t552 = t117 * t234 / 0.2e1 + t154 * t206 / 0.2e1 - t238 * t432;
t442 = t280 * qJD(6);
t551 = qJD(5) * t154 - t442;
t165 = t399 * qJD(5);
t436 = t354 * qJD(3);
t290 = t307 * t436;
t548 = t290 - t165;
t346 = t350 ^ 2;
t347 = t351 ^ 2;
t330 = t347 + t346;
t257 = t280 * t435;
t443 = t280 * qJD(5);
t547 = t443 - t257;
t297 = t374 * qJD(5);
t449 = t193 * qJD(1);
t546 = t449 - t297;
t465 = t350 * t409 + t351 * t415;
t279 = t307 * t355;
t540 = -t279 / 0.2e1;
t188 = t540 + t465;
t158 = t188 * qJD(3);
t545 = -t158 - t547;
t311 = t350 * t326;
t528 = t354 * pkin(3);
t325 = -qJ(4) * t355 + t528;
t241 = t351 * t325 + t311;
t187 = -pkin(8) * t351 * t355 + t354 * pkin(4) + t241;
t155 = t353 * t187;
t242 = t350 * t325 - t351 * t326;
t490 = t350 * t355;
t222 = -pkin(8) * t490 + t242;
t202 = t530 * t222;
t475 = -t155 / 0.2e1 - t202 / 0.2e1;
t430 = t530 * t187;
t489 = t353 * t222;
t474 = t430 / 0.2e1 - t489 / 0.2e1;
t493 = t553 * qJ(6);
t529 = t279 * pkin(5);
t410 = t493 / 0.2e1 - t529 / 0.2e1;
t276 = t277 ^ 2;
t544 = t280 ^ 2;
t301 = t307 ^ 2;
t543 = t72 / 0.2e1;
t375 = t430 - t489;
t527 = t354 * pkin(5);
t88 = -t375 - t527;
t542 = -t88 / 0.2e1;
t539 = t279 / 0.2e1;
t536 = -t374 / 0.2e1;
t535 = -t307 / 0.2e1;
t533 = t327 / 0.2e1;
t532 = -t340 / 0.2e1;
t344 = t354 / 0.2e1;
t524 = t355 * t79;
t80 = t353 * t356 + t431;
t523 = t355 * t80;
t383 = pkin(5) * t557 + qJ(6) * t540;
t433 = t543 - t80 / 0.2e1;
t4 = t307 * t433 + t374 * t432 + t383;
t522 = t4 * qJD(1);
t7 = t154 * t531 - t433 * t277 - t432 * t280;
t521 = t7 * qJD(1);
t512 = t117 * t280;
t28 = t154 * t277 + t512 + t523;
t520 = qJD(1) * t28;
t29 = -t72 * t277 + t73 * t280;
t519 = qJD(1) * t29;
t46 = -t292 * t277 - t524;
t518 = qJD(1) * t46;
t47 = -t292 * t280 - t523;
t517 = qJD(1) * t47;
t232 = -t350 * t327 + t351 * t363;
t98 = (t232 * t351 + t233 * t350) * t354;
t514 = qJD(1) * t98;
t470 = t202 + t155;
t485 = t354 * qJ(6);
t85 = t470 + t485;
t11 = -t277 * t85 - t279 * t72 + t280 * t88 + t553 * t73;
t513 = t11 * qJD(1);
t335 = pkin(4) * t490;
t293 = t327 + t335;
t118 = t293 - t493 + t529;
t19 = t117 * t279 + t118 * t277 - t73 * t354 + t355 * t88;
t511 = t19 * qJD(1);
t510 = t232 * t355;
t509 = t233 * t355;
t507 = t237 * t354;
t506 = t237 * t355;
t505 = t238 * t354;
t504 = t238 * t355;
t24 = t293 * t280 + t292 * t553 - t80 * t354 + t470 * t355;
t503 = t24 * qJD(1);
t502 = t241 * t354;
t501 = t242 * t354;
t27 = -t117 * t277 + t154 * t280 - t524;
t500 = t27 * qJD(1);
t498 = t277 * t374;
t497 = t277 * t307;
t496 = t279 * t307;
t495 = t280 * t374;
t494 = t280 * t307;
t31 = t355 * t72 + t512;
t492 = t31 * qJD(1);
t342 = t354 * t355;
t483 = t355 * t234;
t40 = (t502 + t510) * t351 + (t501 + t509) * t350;
t481 = t40 * qJD(1);
t479 = t79 * qJD(5);
t90 = -t232 * t354 + (t241 - 0.2e1 * t311) * t355;
t478 = t90 * qJD(1);
t91 = t242 * t355 + (-t233 + 0.2e1 * t312) * t354;
t477 = t91 * qJD(1);
t367 = -t487 / 0.2e1 - t429 / 0.2e1;
t195 = (t534 + t367) * t355;
t447 = t195 * qJD(2);
t473 = -t307 * qJD(4) + t447;
t235 = t238 * qJD(5);
t472 = -t447 - t235;
t194 = t539 + t465;
t172 = t194 * qJD(3);
t471 = -t172 - t443;
t189 = (t535 + t367) * t355;
t159 = t189 * qJD(3);
t469 = t257 - t159;
t468 = t258 - t166;
t291 = t374 * t436;
t467 = -t194 * qJD(5) - t291;
t146 = t354 * t277 - t279 * t355;
t464 = qJD(1) * t146;
t147 = -t280 * t354 + t355 * t553;
t463 = qJD(1) * t147;
t462 = qJD(1) * t280;
t461 = qJD(3) * t307;
t460 = qJD(3) * t340;
t459 = qJD(4) * t193;
t458 = qJD(4) * t355;
t457 = qJD(5) * t237;
t456 = qJD(5) * t355;
t455 = qJD(6) * t307;
t454 = qJD(6) * t355;
t100 = -t277 * t553 - t279 * t280;
t453 = t100 * qJD(1);
t452 = t188 * qJD(1);
t451 = t189 * qJD(1);
t160 = t399 * qJD(1);
t450 = t399 * qJD(4);
t448 = t195 * qJD(1);
t167 = t195 * qJD(3);
t446 = t277 * qJD(4);
t444 = t277 * qJD(6);
t275 = t280 * qJD(4);
t348 = t354 ^ 2;
t304 = t330 * t348;
t441 = t304 * qJD(1);
t440 = t374 * qJD(6);
t298 = t307 * qJD(5);
t439 = t330 * qJD(3);
t349 = t355 ^ 2;
t333 = t349 - t348;
t438 = t333 * qJD(1);
t437 = t354 * qJD(1);
t434 = t355 * qJD(3);
t427 = t277 * t462;
t426 = t374 * t461;
t425 = t338 * t434;
t424 = t355 * t446;
t423 = t354 * t458;
t422 = t339 * t437;
t421 = t339 * t435;
t420 = t354 * t434;
t419 = t354 * t435;
t229 = -t504 / 0.2e1;
t418 = t497 / 0.2e1;
t417 = -t497 / 0.2e1;
t416 = -t495 / 0.2e1;
t411 = t330 * t355;
t336 = -qJD(5) + t435;
t408 = t474 + t527;
t407 = t485 - t475;
t406 = -t527 / 0.2e1 - t474;
t6 = t117 * t344 + t118 * t531 - t277 * t542 + t538 * t85 + t539 * t73 + t543 * t553;
t8 = t117 * t118 + t72 * t85 + t73 * t88;
t402 = t8 * qJD(1) + t6 * qJD(2);
t9 = t117 * t154 - t72 * t79 + t73 * t80;
t401 = t9 * qJD(1) + t7 * qJD(2);
t89 = t277 * t279 + t280 * t553 - t342;
t400 = t6 * qJD(1) + t89 * qJD(2);
t10 = (-t72 + t80) * t280 + (-t73 + t79) * t277;
t398 = t10 * qJD(1);
t18 = t117 * t553 + t118 * t280 - t72 * t354 + t355 * t85;
t397 = t18 * qJD(1);
t23 = -t293 * t277 - t292 * t279 + t79 * t354 + t355 * t375;
t396 = t23 * qJD(1);
t38 = (t501 / 0.2e1 + t509 / 0.2e1) * t351 + (-t502 / 0.2e1 - t510 / 0.2e1) * t350 + (-t349 / 0.2e1 + t348 / 0.2e1) * t338;
t45 = t338 ^ 2 * t342 + t232 * t241 + t233 * t242;
t395 = t45 * qJD(1) + t38 * qJD(2);
t380 = t117 * t534 + t206 * t538;
t357 = t154 * t537 + t234 * t541 - t380;
t16 = t229 + t357 + t408;
t70 = t206 * t307 - t234 * t374;
t394 = qJD(1) * t16 - qJD(3) * t70;
t393 = -t241 * t350 + t242 * t351;
t228 = t504 / 0.2e1;
t25 = t228 + t380 + t406;
t392 = t25 * qJD(1) + t188 * qJD(2);
t227 = t506 / 0.2e1;
t376 = -t277 * t532 + t292 * t536;
t33 = t227 + t376 + t475;
t391 = t33 * qJD(1) + t193 * qJD(2);
t243 = t354 * t411 - t342;
t390 = t38 * qJD(1) + t243 * qJD(2);
t119 = t276 - t544;
t68 = -t494 - t498;
t389 = qJD(1) * t119 + qJD(3) * t68;
t300 = t374 ^ 2;
t153 = t300 - t301;
t388 = qJD(1) * t68 + qJD(3) * t153;
t111 = t494 - t498;
t173 = t276 + t544;
t387 = qJD(1) * t173 + qJD(3) * t111;
t236 = t300 + t301;
t386 = qJD(1) * t111 + qJD(3) * t236;
t385 = -qJD(1) * t154 - qJD(3) * t234;
t197 = -qJD(1) * t277 + qJD(3) * t374;
t198 = t461 + t462;
t384 = t85 * qJ(6) / 0.2e1 + pkin(5) * t542;
t379 = t232 * t350 / 0.2e1 - t233 * t351 / 0.2e1;
t377 = t418 + t416;
t360 = t280 * t532 + t292 * t535 + t229;
t32 = t360 + t474;
t373 = qJD(1) * t32 - t307 * t460;
t345 = -t354 / 0.2e1;
t105 = t345 + t377;
t372 = qJD(1) * t105 - t426;
t213 = t495 / 0.2e1;
t110 = t417 + t213;
t371 = qJD(3) * t110 - t427;
t370 = -qJD(1) * t110 - t426;
t368 = t533 + t335 / 0.2e1 - t410;
t2 = t237 * t433 + t384 - t552;
t21 = t483 / 0.2e1 + t410;
t30 = t206 * t234;
t366 = -t2 * qJD(1) - t21 * qJD(2) + t30 * qJD(3);
t104 = t344 + t416 + t417;
t12 = t368 - t556;
t84 = t237 * t307 + t238 * t374;
t365 = -qJD(1) * t12 - qJD(2) * t104 + qJD(3) * t84;
t226 = -t506 / 0.2e1;
t358 = t117 * t537 + t154 * t534 + t206 * t541 + t234 * t538;
t14 = t226 + t358 + t407;
t190 = t557 + t466;
t71 = -t206 * t374 - t234 * t307;
t364 = qJD(1) * t14 + qJD(2) * t190 - qJD(3) * t71;
t284 = t344 + (-t347 / 0.2e1 - t346 / 0.2e1) * t354;
t316 = t330 * qJ(4);
t86 = t533 + t379;
t362 = qJD(1) * t86 + qJD(2) * t284 - qJD(3) * t316;
t244 = t349 + t544;
t361 = t244 * qJD(1) + t280 * t461 - t456;
t359 = qJD(3) * t405 + t458;
t341 = t436 / 0.2e1;
t324 = t336 * qJ(6);
t302 = (t435 - qJD(5) / 0.2e1) * t354;
t285 = (0.1e1 + t330) * t344;
t225 = t553 * t374;
t221 = t307 * t442;
t169 = t195 * qJD(5);
t163 = t193 * qJD(5);
t128 = qJD(3) * t301 + t307 * t462;
t125 = t297 - t160;
t109 = t111 * qJD(4);
t108 = t110 * qJD(5);
t107 = t345 - t377;
t106 = t213 + t418 + t344;
t87 = t533 - t379;
t75 = t80 * qJD(5);
t67 = t68 * qJD(5);
t37 = t38 * qJD(3);
t35 = -t360 + t474;
t34 = t226 - t376 + t475;
t26 = t229 - t380 + t406;
t22 = -t483 / 0.2e1 + t410;
t17 = t228 - t357 + t408;
t15 = t227 - t358 + t407;
t13 = t368 + t556;
t5 = t80 * t534 + t72 * t535 + t79 * t536 + t537 * t73 + t383;
t3 = t384 + (-t72 / 0.2e1 + t80 / 0.2e1) * t237 + t552;
t1 = qJD(3) * t6 + qJD(5) * t7;
t20 = [0, 0, 0, 0, t420, t333 * qJD(3), 0, 0, 0, t339 * t436, t339 * t434, -t90 * qJD(3) + t351 * t423, t91 * qJD(3) - t350 * t423, -qJD(3) * t40 + qJD(4) * t304, qJD(3) * t45 - qJD(4) * t98 (qJD(3) * t553 - t445) * t280, qJD(3) * t100 + qJD(5) * t119, -t147 * qJD(3) + t355 * t445, -t146 * qJD(3) + t355 * t443, -t420, -t23 * qJD(3) - t47 * qJD(5) + t275 * t355, t24 * qJD(3) + t46 * qJD(5) - t424, t19 * qJD(3) + t28 * qJD(5) + (-t444 + t458) * t280, t11 * qJD(3) + t173 * qJD(4) + t10 * qJD(5) + t355 * t444, -t18 * qJD(3) - t27 * qJD(5) + t244 * qJD(6) + t424, qJD(3) * t8 + qJD(4) * t29 + qJD(5) * t9 - qJD(6) * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, t419, t438, t434, -t436, 0, t422 - t425, t338 * t436 + t421, -t312 * qJD(3) + t350 * t359 - t478, t350 * t425 + t351 * t359 + t477, qJD(3) * t393 - t481 (-pkin(3) * t327 + qJ(4) * t393) * qJD(3) + t87 * qJD(4) + t395, t198 * t553 + t108, t453 + (t225 - t496) * qJD(3) + t67, -t163 + t290 - t463, -qJD(5) * t188 + t291 - t464, -t302 (t279 * t340 - t293 * t374 - t507) * qJD(3) - t189 * qJD(4) + t35 * qJD(5) - t396, t503 + (t293 * t307 + t340 * t553 - t505) * qJD(3) + t450 + t34 * qJD(5), t511 + (-t118 * t374 + t206 * t279 - t507) * qJD(3) + t194 * qJD(4) + t17 * qJD(5) + t107 * qJD(6), t513 + (t237 * t553 - t238 * t279 + t307 * t88 + t374 * t85) * qJD(3) + t109 + t5 * qJD(5) - t193 * qJD(6) (-t118 * t307 - t206 * t553 + t505) * qJD(3) - t450 + t15 * qJD(5) + t221 - t397 (t118 * t206 + t237 * t88 + t238 * t85) * qJD(3) + t13 * qJD(4) + t3 * qJD(5) + t26 * qJD(6) + t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(3) * t350 + t351 * t437) * t355 (qJD(3) * t351 - t350 * t437) * t355, t441, qJD(3) * t87 - t514, 0, 0, 0, 0, 0, t469, -t468, t257 + t172, t387, t468, qJD(3) * t13 + t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t371, t389, -t554, t545, t341, qJD(3) * t35 - t517 - t75, qJD(3) * t34 + t479 + t518, qJD(3) * t17 + t520 - t75, t5 * qJD(3) + qJD(5) * t404 + t398 - t444, t15 * qJD(3) - t454 - t479 - t500, t3 * qJD(3) + (-pkin(5) * t80 - qJ(6) * t79) * qJD(5) + t72 * qJD(6) + t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t107 - t427, -t554, t361, qJD(3) * t26 + qJD(5) * t72 - t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t436, -t434, -t351 * t436, t350 * t436, qJD(3) * t411 (qJ(4) * t411 - t528) * qJD(3) + t285 * qJD(4) + t390, 0, 0, 0, 0, 0, t467, t548, t467 (t225 + t496) * qJD(3), -t548 (t206 * t354 + t237 * t279 + t238 * t553) * qJD(3) + t106 * qJD(4) + t22 * qJD(5) - t189 * qJD(6) + t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, -t555, t471, 0, t555, t22 * qJD(3) + t521 - t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t159 + t443; 0, 0, 0, 0, -t419, -t438, 0, 0, 0, -t422, -t421, t478, -t477, t481, -qJD(4) * t86 - t395, -t462 * t553 + t108, t67 - t453, -t165 + t463, -qJD(5) * t189 + t464, t302, -qJD(4) * t188 - qJD(5) * t32 + t396, -qJD(5) * t33 + t459 - t503, qJD(4) * t195 - qJD(5) * t16 - qJD(6) * t105 - t511, -qJD(5) * t4 - qJD(6) * t399 + t109 - t513, -qJD(5) * t14 + t221 + t397 - t459, -qJD(4) * t12 - qJD(5) * t2 - qJD(6) * t25 - t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t284 - t390, 0, 0, 0, 0, 0, -t169, -t163, -t169, 0, -qJD(5) * t190, -qJD(4) * t104 - qJD(5) * t21 - qJD(6) * t188 - t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330 * qJD(4), t316 * qJD(4), t374 * t298, t153 * qJD(5), 0, 0, 0, t340 * t298, t340 * t297, qJD(5) * t70 + t307 * t440, t236 * qJD(4), qJD(5) * t71 + qJD(6) * t301, qJD(4) * t84 + qJD(5) * t30 - t206 * t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t439, -t362, 0, 0, 0, 0, 0, -t452, t449, t448, t386, -t449, t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, t388, t125, -t298 - t451, -t437 / 0.2e1, -t373 + t472, t374 * t460 - t391 + t457, -t394 + t472, qJD(5) * t403 + t440 - t522, -t364 - t457 (-pkin(5) * t238 - qJ(6) * t237) * qJD(5) + t238 * qJD(6) + t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, t125, t128, -t206 * t461 + t235 - t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351 * t419, t350 * t419, -t441, qJD(3) * t86 + t514, 0, 0, 0, 0, 0, -t545, -t554, -t167 + t547, -t387, t554, qJD(3) * t12 - t519 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t439, t362, 0, 0, 0, 0, 0, t298 + t452, -t546, t298 - t448, -t386, t546, qJD(5) * t234 - t365 - t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, t197, t198, 0, -t197, -t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t371, -t389, -t468, -t469, t341, qJD(3) * t32 - t275 + t517, qJD(3) * t33 + t446 - t518, qJD(3) * t16 - t275 - t520, qJD(3) * t4 - t398, t14 * qJD(3) - t446 - t454 + t500, -qJ(6) * t454 + t2 * qJD(3) - qJD(4) * t154 - t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, t161, t167, 0, t190 * qJD(3), qJD(3) * t21 - t521; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, -t388, t160, t451, t437 / 0.2e1, t373 + t473 -(qJD(4) + t460) * t374 + t391, t394 + t473, t522, qJD(4) * t374 + t364, -qJD(4) * t234 - t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, -t197, -t198, 0, t197, t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336, -t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t105 + t427, -t468, -t361, qJ(6) * t456 + t25 * qJD(3) + t275 + t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, t160, -t128 (qJD(3) * t206 + qJD(4)) * t307 + t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t20;
