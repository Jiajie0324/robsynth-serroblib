% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:19:40
% EndTime: 2019-03-09 17:19:58
% DurationCPUTime: 7.22s
% Computational Cost: add. (8496->587), mult. (19918->716), div. (0->0), fcn. (13067->6), ass. (0->278)
t267 = cos(qJ(3));
t401 = pkin(8) - pkin(9);
t226 = t401 * t267;
t266 = sin(qJ(2));
t265 = sin(qJ(3));
t399 = pkin(7) * t265;
t332 = -pkin(3) - t399;
t268 = cos(qJ(2));
t366 = t267 * t268;
t276 = -pkin(9) * t366 + (-pkin(4) + t332) * t266;
t299 = pkin(2) * t266 - pkin(8) * t268;
t208 = t299 * qJD(1);
t367 = t267 * t208;
t430 = qJD(1) * t276 - qJD(3) * t226 - t367;
t179 = t265 * t208;
t353 = qJD(1) * t266;
t248 = qJ(4) * t353;
t348 = qJD(3) * t265;
t368 = t266 * t267;
t369 = t265 * t268;
t429 = t179 + t248 + (-pkin(7) * t368 + pkin(9) * t369) * qJD(1) + t401 * t348;
t330 = t265 * t353;
t344 = t267 * qJD(2);
t197 = t330 - t344;
t328 = t267 * t353;
t351 = qJD(2) * t265;
t199 = t328 + t351;
t264 = sin(qJ(5));
t400 = cos(qJ(5));
t285 = -t197 * t400 + t264 * t199;
t122 = t285 ^ 2;
t127 = t264 * t197 + t199 * t400;
t404 = t127 ^ 2;
t24 = t122 - t404;
t342 = qJD(1) * qJD(2);
t316 = t268 * t342;
t347 = qJD(3) * t266;
t324 = t265 * t347;
t341 = qJD(2) * qJD(3);
t152 = qJD(1) * t324 + (-t316 - t341) * t267;
t346 = qJD(3) * t267;
t349 = qJD(2) * t268;
t282 = t265 * t349 + t266 * t346;
t153 = qJD(1) * t282 + t265 * t341;
t352 = qJD(1) * t268;
t242 = -qJD(3) + t352;
t375 = t199 * t242;
t378 = t197 * t242;
t428 = t265 * (t153 - t375) + t267 * (t152 - t378);
t313 = -pkin(5) * t285 - qJD(6);
t253 = pkin(7) * t353;
t263 = qJD(2) * pkin(2);
t223 = t253 - t263;
t118 = t197 * pkin(3) - t199 * qJ(4) + t223;
t91 = -pkin(4) * t197 - t118;
t56 = -t313 + t91;
t427 = t127 * t56;
t233 = qJD(5) + t242;
t372 = t233 * t127;
t53 = qJD(5) * t127 - t264 * t152 - t400 * t153;
t28 = -t53 + t372;
t426 = qJ(6) * t127;
t425 = t127 * t285;
t201 = t264 * t265 + t267 * t400;
t318 = qJD(3) * t400;
t133 = t201 * qJD(5) - t264 * t348 - t267 * t318;
t280 = t268 * t201;
t361 = qJD(1) * t280 + t133;
t317 = qJD(5) * t400;
t345 = qJD(5) * t264;
t134 = t264 * t346 - t267 * t345 + (t317 - t318) * t265;
t331 = t400 * t265;
t305 = t268 * t331;
t327 = t267 * t352;
t360 = qJD(1) * t305 - t264 * t327 + t134;
t215 = -pkin(2) * t268 - pkin(8) * t266 - pkin(1);
t183 = t215 * qJD(1);
t254 = pkin(7) * t352;
t224 = qJD(2) * pkin(8) + t254;
t130 = t267 * t183 - t265 * t224;
t103 = t199 * pkin(9) + t130;
t402 = pkin(3) + pkin(4);
t76 = t242 * t402 + qJD(4) - t103;
t131 = t183 * t265 + t224 * t267;
t104 = pkin(9) * t197 + t131;
t229 = t242 * qJ(4);
t87 = t104 - t229;
t29 = -t264 * t87 + t400 * t76;
t227 = t242 * qJD(4);
t246 = t266 * t342;
t235 = qJ(4) * t246;
t211 = t299 * qJD(2);
t185 = qJD(1) * t211;
t306 = pkin(7) * t246;
t274 = -t183 * t346 - t265 * t185 + t224 * t348 + t267 * t306;
t61 = -t227 + t235 - t274;
t42 = pkin(9) * t153 + t61;
t79 = -t183 * t348 + t267 * t185 - t224 * t346 + t265 * t306;
t44 = t152 * pkin(9) - t246 * t402 - t79;
t314 = -t264 * t44 - t76 * t317 + t87 * t345 - t400 * t42;
t422 = -t233 * t29 - t314;
t421 = t265 * qJD(4) + t254 + (-t327 + t346) * qJ(4);
t7 = -t264 * t42 - t87 * t317 - t76 * t345 + t400 * t44;
t420 = -t127 * t91 + t7;
t379 = t153 * t267;
t380 = t152 * t265;
t419 = t266 * ((t197 * t265 - t199 * t267) * qJD(3) - t379 + t380) - (t197 * t267 + t199 * t265) * t349;
t310 = t197 + t344;
t418 = qJD(1) * (-t242 * t369 + t266 * t310) + t242 * t348;
t261 = t266 ^ 2;
t290 = qJD(1) * t261 - t242 * t268;
t323 = t242 * t346;
t417 = qJD(2) * (t197 * t266 + t265 * t290) - t268 * t153 - t266 * t323;
t416 = -0.2e1 * t342;
t225 = t401 * t265;
t149 = t264 * t225 + t400 * t226;
t393 = qJD(5) * t149 - t429 * t264 + t400 * t430;
t392 = -t225 * t317 + t226 * t345 + t264 * t430 + t429 * t400;
t415 = t285 * t56;
t414 = t285 * t91;
t413 = t53 * qJ(6) + t285 * qJD(6);
t112 = t131 - t229;
t308 = pkin(3) * t246;
t71 = -t79 - t308;
t412 = t112 * t242 + t71;
t384 = t285 * t233;
t52 = t400 * t152 - t264 * t153 - t197 * t317 + t199 * t345;
t26 = -t52 + t384;
t284 = -t131 * t242 + t79;
t411 = qJ(6) * t285;
t244 = pkin(7) * t369;
t260 = t268 * pkin(3);
t119 = t268 * pkin(4) + t244 + t260 + (-pkin(9) * t266 - t215) * t267;
t245 = pkin(7) * t366;
t161 = t265 * t215 + t245;
t150 = -qJ(4) * t268 + t161;
t370 = t265 * t266;
t129 = pkin(9) * t370 + t150;
t66 = t264 * t119 + t400 * t129;
t329 = t265 * t352;
t335 = t402 * t265;
t362 = -qJD(3) * t335 + t329 * t402 + t421;
t408 = t153 + t375;
t212 = -t264 * qJ(4) - t400 * t402;
t343 = qJD(4) - t130;
t403 = t199 ^ 2;
t398 = pkin(8) * t199;
t397 = pkin(8) * t242;
t20 = t29 - t426;
t19 = pkin(5) * t233 + t20;
t396 = t19 - t20;
t202 = -t264 * t267 + t331;
t395 = -pkin(5) * t353 - qJ(6) * t361 + t202 * qJD(6) + t393;
t394 = qJ(6) * t360 + qJD(6) * t201 + t392;
t391 = pkin(5) * t360 + t362;
t49 = t400 * t103 + t264 * t104;
t68 = t153 * pkin(3) + pkin(7) * t316 + t152 * qJ(4) - t199 * qJD(4);
t389 = t265 * t68;
t388 = t267 * t68;
t386 = t118 * t199;
t376 = t199 * t197;
t374 = t223 * t265;
t373 = t223 * t267;
t257 = t265 * qJ(4);
t271 = qJD(1) ^ 2;
t365 = t268 * t271;
t270 = qJD(2) ^ 2;
t364 = t270 * t266;
t363 = t270 * t268;
t359 = (t329 - t348) * pkin(3) + t421;
t358 = t265 * t211 + t215 * t346;
t137 = t199 * pkin(3) + t197 * qJ(4);
t326 = t268 * t344;
t356 = qJ(4) * t326 + qJD(4) * t368;
t354 = -t268 ^ 2 + t261;
t350 = qJD(2) * t266;
t167 = t400 * qJD(4) + qJD(5) * t212;
t213 = qJ(4) * t400 - t264 * t402;
t168 = -t264 * qJD(4) - qJD(5) * t213;
t340 = -t168 * t127 - t167 * t285 - t213 * t53;
t339 = t265 * t397;
t338 = t267 * t397;
t214 = -t267 * pkin(3) - pkin(2) - t257;
t337 = pkin(8) * t344;
t336 = pkin(7) * t349;
t333 = t266 * t365;
t321 = t242 * t353;
t319 = t197 ^ 2 - t403;
t48 = -t103 * t264 + t400 * t104;
t312 = pkin(1) * t416;
t65 = t400 * t119 - t129 * t264;
t148 = t400 * t225 - t226 * t264;
t160 = t215 * t267 - t244;
t190 = t267 * pkin(4) - t214;
t309 = -t199 + t351;
t307 = pkin(5) * t246;
t302 = t268 * t246;
t301 = -pkin(7) - t335;
t107 = -pkin(4) * t199 - t137;
t300 = t332 * t266;
t298 = qJD(3) * t245 - t267 * t211 + t215 * t348;
t297 = (qJD(3) * t197 - t152) * pkin(8);
t110 = pkin(3) * t242 + t343;
t296 = t110 * t267 - t112 * t265;
t295 = -t130 * t267 - t131 * t265;
t291 = t314 + t413;
t287 = -t167 * t233 + t213 * t246 - t314;
t155 = -pkin(7) * t328 + t179;
t286 = qJ(6) * t52 + t7;
t30 = t264 * t76 + t400 * t87;
t67 = pkin(9) * t324 + qJD(2) * t276 + t298;
t250 = qJ(4) * t350;
t69 = t250 + (-pkin(7) * qJD(2) + pkin(9) * qJD(3)) * t368 + (-qJD(4) + (-pkin(7) * qJD(3) + pkin(9) * qJD(2)) * t265) * t268 + t358;
t10 = t119 * t317 - t129 * t345 + t264 * t67 + t400 * t69;
t241 = qJ(4) * t368;
t147 = t266 * t301 + t241;
t281 = t242 * t400 + t317;
t277 = qJD(6) * t127 - t286;
t275 = -t265 * t378 - t379;
t46 = -t153 * pkin(4) - t68;
t99 = (-t266 * t344 - t268 * t348) * pkin(7) + t358;
t11 = -qJD(5) * t66 - t264 * t69 + t400 * t67;
t18 = pkin(5) * t53 + t46;
t273 = t153 * t370 + t197 * t282;
t272 = -t130 * t242 + t274;
t77 = (-t267 * t402 - t257) * t347 + t301 * t349 + t356;
t207 = -pkin(5) + t212;
t196 = t233 * t353;
t173 = t201 * t266;
t172 = t264 * t368 - t266 * t331;
t166 = -t241 + (pkin(3) * t265 + pkin(7)) * t266;
t159 = (-t242 - t352) * t350;
t158 = (-t233 - t352) * t350;
t154 = pkin(7) * t330 + t367;
t151 = -t160 + t260;
t144 = t168 * t233;
t139 = pkin(8) * t379;
t138 = pkin(5) * t201 + t190;
t136 = qJD(1) * t300 - t367;
t135 = t155 + t248;
t114 = -qJ(6) * t201 + t149;
t113 = -qJ(6) * t202 + t148;
t106 = -t152 - t378;
t105 = t172 * pkin(5) + t147;
t100 = t350 * t399 - t298;
t98 = pkin(3) * t282 + qJ(4) * t324 + t336 - t356;
t92 = -t323 + (t242 * t366 + t266 * t309) * qJD(1);
t90 = qJD(2) * t300 + t298;
t86 = -t268 * qJD(4) + t250 + t99;
t81 = qJD(2) * t280 + t134 * t266;
t80 = -qJD(2) * t305 + t133 * t266 + t264 * t326;
t75 = -t267 * t375 - t380;
t70 = -t152 * t368 + (-t324 + t326) * t199;
t60 = -pkin(5) * t127 + t107;
t59 = t242 * t324 + t152 * t268 + (t199 * t266 + t267 * t290) * qJD(2);
t58 = -t199 * t127 - t233 * t281 + t246 * t264;
t57 = -t233 ^ 2 * t264 - t199 * t285 - t246 * t400;
t50 = -qJ(6) * t172 + t66;
t47 = pkin(5) * t268 - qJ(6) * t173 + t65;
t33 = -t361 * t233 + (-qJD(2) * t202 + t127) * t353;
t32 = -t360 * t233 + (qJD(2) * t201 - t285) * t353;
t31 = t80 * pkin(5) + t77;
t23 = t49 + t426;
t22 = t48 - t411;
t21 = t30 - t411;
t17 = t172 * t53 + t285 * t80;
t16 = t127 * t81 - t173 * t52;
t15 = t53 * t201 + t285 * t360;
t14 = -t127 * t361 - t52 * t202;
t13 = t233 * t81 - t268 * t52 + (-qJD(1) * t173 - t127) * t350;
t12 = -t233 * t80 - t268 * t53 + (qJD(1) * t172 + t285) * t350;
t9 = -qJ(6) * t80 - qJD(6) * t172 + t10;
t8 = -pkin(5) * t350 - t81 * qJ(6) - t173 * qJD(6) + t11;
t5 = t264 * t28 - t281 * t285 + t400 * t52;
t4 = -t127 * t80 + t172 * t52 - t173 * t53 - t285 * t81;
t3 = -t127 * t360 + t52 * t201 - t202 * t53 + t285 * t361;
t1 = -t277 - t307;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t302, t354 * t416, t363, -0.2e1 * t302, -t364, 0, -pkin(7) * t363 + t266 * t312, pkin(7) * t364 + t268 * t312, 0, 0, t70, t419, t59, t273, -t417, t159, -t100 * t242 - t268 * t79 + (pkin(7) * t153 + t223 * t346) * t266 + ((pkin(7) * t197 + t374) * t268 + (t130 + (t160 + t244) * qJD(1)) * t266) * qJD(2), t242 * t99 - t268 * t274 + (-pkin(7) * t152 - t223 * t348) * t266 + ((pkin(7) * t199 + t373) * t268 + (-t131 + (-t161 + t245) * qJD(1)) * t266) * qJD(2), -t100 * t199 + t152 * t160 - t153 * t161 - t197 * t99 + t295 * t349 + (t265 * t274 - t267 * t79 + (t130 * t265 - t131 * t267) * qJD(3)) * t266, t130 * t100 + t131 * t99 + t79 * t160 - t274 * t161 + (t223 + t253) * t336, t70, t59, -t419, t159, t417, t273, t153 * t166 + t197 * t98 + t242 * t90 + (t118 * t351 + t71) * t268 + (t118 * t346 + t389 + (-qJD(1) * t151 - t110) * qJD(2)) * t266, -t150 * t153 - t151 * t152 - t197 * t86 + t199 * t90 + t296 * t349 + (-t265 * t61 + t267 * t71 + (-t110 * t265 - t112 * t267) * qJD(3)) * t266, t152 * t166 - t199 * t98 - t242 * t86 + (-t118 * t344 - t61) * t268 + (t118 * t348 - t388 + (qJD(1) * t150 + t112) * qJD(2)) * t266, t110 * t90 + t112 * t86 + t118 * t98 + t150 * t61 + t151 * t71 + t166 * t68, t16, t4, t13, t17, t12, t158, t11 * t233 + t77 * t285 + t147 * t53 + t46 * t172 + t7 * t268 + t91 * t80 + (-qJD(1) * t65 - t29) * t350, -t10 * t233 + t77 * t127 - t147 * t52 + t46 * t173 + t314 * t268 + t91 * t81 + (qJD(1) * t66 + t30) * t350, -t10 * t285 - t11 * t127 + t172 * t314 - t173 * t7 - t29 * t81 - t30 * t80 + t52 * t65 - t53 * t66, t10 * t30 + t11 * t29 + t147 * t46 - t314 * t66 + t65 * t7 + t77 * t91, t16, t4, t13, t17, t12, t158, t1 * t268 + t105 * t53 + t31 * t285 + t18 * t172 + t8 * t233 + t56 * t80 + (-qJD(1) * t47 - t19) * t350, -t105 * t52 + t31 * t127 + t18 * t173 + t291 * t268 - t9 * t233 + t56 * t81 + (qJD(1) * t50 + t21) * t350, -t1 * t173 - t127 * t8 + t172 * t291 - t19 * t81 - t21 * t80 - t285 * t9 + t47 * t52 - t50 * t53, t1 * t47 + t105 * t18 + t19 * t8 + t21 * t9 - t291 * t50 + t31 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, t354 * t271, 0, t333, 0, 0, t271 * pkin(1) * t266, pkin(1) * t365, 0, 0, t75, -t428, t92, t275, t418, t321, -pkin(2) * t153 + t154 * t242 + (t338 + t374) * qJD(3) + ((-pkin(8) * t351 - t130) * t266 + (-pkin(7) * t310 - t374) * t268) * qJD(1), pkin(2) * t152 - t155 * t242 + (-t339 + t373) * qJD(3) + ((t131 - t337) * t266 + (pkin(7) * t309 - t373) * t268) * qJD(1), t154 * t199 + t155 * t197 - t139 + (t130 * t352 - t274 + (-t130 + t398) * qJD(3)) * t267 + (t297 - t284) * t265, -t130 * t154 - t131 * t155 + (-t223 - t263) * t254 + (qJD(3) * t295 - t79 * t265 - t267 * t274) * pkin(8), t75, t92, t428, t321, -t418, t275, -t136 * t242 + t153 * t214 - t388 - t359 * t197 + (t118 * t265 + t338) * qJD(3) + (t110 * t266 + (-pkin(8) * t350 - t118 * t268) * t265) * qJD(1), t135 * t197 - t136 * t199 - t139 + (-t110 * t352 + t61 + (t110 + t398) * qJD(3)) * t267 + (t297 + t412) * t265, t135 * t242 + t152 * t214 - t389 + t359 * t199 + (-t118 * t267 + t339) * qJD(3) + (t118 * t366 + (-t112 + t337) * t266) * qJD(1), -t110 * t136 - t112 * t135 + t68 * t214 - t359 * t118 + (qJD(3) * t296 + t71 * t265 + t61 * t267) * pkin(8), t14, t3, t33, t15, t32, t196, t190 * t53 + t201 * t46 + t360 * t91 - t393 * t233 + t362 * t285 + (-qJD(2) * t148 + t29) * t353, -t190 * t52 + t202 * t46 - t361 * t91 + t392 * t233 + t362 * t127 + (qJD(2) * t149 - t30) * t353, t127 * t393 + t148 * t52 - t149 * t53 + t201 * t314 - t202 * t7 + t285 * t392 + t29 * t361 - t30 * t360, t7 * t148 - t149 * t314 + t46 * t190 - t29 * t393 - t30 * t392 + t362 * t91, t14, t3, t33, t15, t32, t196, t138 * t53 + t18 * t201 + t360 * t56 - t395 * t233 + t391 * t285 + (-qJD(2) * t113 + t19) * t353, -t138 * t52 + t18 * t202 - t361 * t56 + t394 * t233 + t391 * t127 + (qJD(2) * t114 - t21) * t353, -t1 * t202 + t113 * t52 - t114 * t53 + t127 * t395 + t19 * t361 + t201 * t291 - t21 * t360 + t285 * t394, t1 * t113 - t114 * t291 + t18 * t138 - t19 * t395 - t21 * t394 + t391 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, -t319, t106, -t376, -t408, t246, -t199 * t223 + t284, t197 * t223 + t272, 0, 0, t376, t106, t319, t246, t408, -t376, -t137 * t197 + t284 + 0.2e1 * t308 - t386, pkin(3) * t152 - t153 * qJ(4) + (t112 - t131) * t199 + (t110 - t343) * t197, -t118 * t197 + t137 * t199 - 0.2e1 * t227 + 0.2e1 * t235 - t272, -t71 * pkin(3) + t61 * qJ(4) - t110 * t131 + t112 * t343 - t118 * t137, -t425, t24, -t26, t425, -t28, t246, -t107 * t285 - t212 * t246 - t233 * t48 + t144 - t420, -t107 * t127 + t233 * t49 + t287 - t414, t212 * t52 + t340 + (t29 + t49) * t285 + (-t30 + t48) * t127, -t91 * t107 + t7 * t212 - t314 * t213 + (t167 - t49) * t30 + (t168 - t48) * t29, -t425, t24, -t26, t425, -t28, t246, t427 - t285 * t60 - t22 * t233 + t144 + (pkin(5) - t207) * t246 + t277, -t127 * t60 + t23 * t233 + t287 - t413 - t415, t207 * t52 + t340 + (t19 + t23) * t285 + (-t21 + t22) * t127, t1 * t207 - t291 * t213 - t56 * t60 + (t167 - t23) * t21 + (t168 - t22) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246 + t376, t106, -t242 ^ 2 - t403, t386 + t412, 0, 0, 0, 0, 0, 0, t57, t58, t5, -t91 * t199 + t264 * t422 + t281 * t30 + t7 * t400, 0, 0, 0, 0, 0, 0, t57, t58, t5, t1 * t400 - t56 * t199 + t281 * t21 + (-t19 * t233 - t291) * t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, -t24, t26, -t425, t28, -t246, t233 * t30 + t420, t414 - t422, 0, 0, t425, -t24, t26, -t425, t28, -t246, -0.2e1 * t307 + t21 * t233 + (t313 - t56) * t127 + t286, -pkin(5) * t404 + t20 * t233 + t291 + t415, t52 * pkin(5) - t285 * t396, t396 * t21 + (t1 - t427) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53 + t372, -t52 - t384, -t122 - t404, t127 * t19 + t21 * t285 + t18;];
tauc_reg  = t2;
