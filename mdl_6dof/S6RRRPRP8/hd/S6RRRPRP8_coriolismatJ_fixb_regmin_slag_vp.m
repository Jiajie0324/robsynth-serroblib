% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRP8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:19:43
% EndTime: 2019-03-09 17:20:18
% DurationCPUTime: 19.09s
% Computational Cost: add. (11227->796), mult. (22117->1053), div. (0->0), fcn. (21696->6), ass. (0->579)
t522 = sin(qJ(5));
t523 = sin(qJ(3));
t524 = sin(qJ(2));
t526 = cos(qJ(3));
t747 = t526 * t524;
t525 = cos(qJ(5));
t751 = t525 * t524;
t370 = t522 * t747 - t523 * t751;
t429 = -t522 * t526 + t523 * t525;
t866 = pkin(8) - pkin(9);
t455 = t866 * t526;
t432 = t522 * t455;
t454 = t866 * t523;
t752 = t525 * t454;
t860 = t432 - t752;
t609 = -qJ(6) * t429 - t860;
t846 = -t609 / 0.2e1;
t877 = t846 + t609 / 0.2e1;
t878 = t877 * t370;
t679 = qJD(3) - qJD(5);
t825 = t522 / 0.2e1;
t876 = t609 * t825;
t527 = cos(qJ(2));
t515 = t527 * pkin(3);
t806 = t524 * pkin(8);
t610 = -pkin(2) * t527 - t806;
t589 = -pkin(1) + t610;
t420 = t526 * t589;
t613 = -pkin(9) * t747 - t420;
t814 = pkin(7) * t523;
t230 = t515 + (pkin(4) + t814) * t527 + t613;
t219 = t525 * t230;
t746 = t526 * t527;
t491 = pkin(7) * t746;
t351 = t523 * t589 + t491;
t745 = t527 * qJ(4);
t327 = t351 - t745;
t756 = t523 * t524;
t487 = pkin(9) * t756;
t267 = t327 + t487;
t762 = t522 * t267;
t127 = -t219 + t762;
t425 = t522 * t523 + t525 * t526;
t372 = t425 * t524;
t778 = t372 * qJ(6);
t114 = -t127 - t778;
t805 = t527 * pkin(5);
t105 = t114 + t805;
t754 = t525 * t267;
t763 = t522 * t230;
t128 = t754 + t763;
t800 = qJ(6) * t370;
t115 = t128 - t800;
t850 = t115 / 0.2e1;
t596 = t522 * t454 + t525 * t455;
t546 = -qJ(6) * t425 + t596;
t865 = -t546 / 0.2e1;
t875 = t105 * t865 + t609 * t850;
t773 = t425 * t370;
t776 = t372 * t429;
t113 = t773 - t776;
t366 = t370 ^ 2;
t857 = t372 ^ 2;
t160 = t857 - t366;
t587 = qJD(1) * t160 - qJD(2) * t113;
t421 = t425 ^ 2;
t856 = t429 ^ 2;
t213 = t856 - t421;
t586 = -qJD(1) * t113 + qJD(2) * t213;
t508 = t523 * qJ(4);
t514 = t526 * pkin(3);
t606 = t508 + t514;
t682 = t526 * qJD(4);
t874 = -qJD(3) * t606 + t682;
t722 = -pkin(3) * t756 + qJ(4) * t747;
t315 = (-t523 * pkin(4) - pkin(7)) * t524 + t722;
t439 = -pkin(2) - t606;
t407 = t526 * pkin(4) - t439;
t818 = -t527 / 0.2e1;
t835 = t429 / 0.2e1;
t838 = t372 / 0.2e1;
t538 = t315 * t835 + t407 * t838 + t596 * t818;
t836 = t425 / 0.2e1;
t839 = t370 / 0.2e1;
t539 = t315 * t836 + t407 * t839 + t818 * t860;
t142 = t370 * t835 + t425 * t838;
t712 = qJD(2) * t429;
t869 = qJD(1) * t142 + t425 * t712;
t713 = qJD(1) * t372;
t868 = -qJD(2) * t142 - t370 * t713;
t867 = t679 * t596;
t834 = t752 / 0.2e1;
t853 = -pkin(3) - pkin(4);
t437 = qJ(4) * t522 - t525 * t853;
t864 = t437 + pkin(5);
t681 = t527 * qJD(1);
t617 = qJD(5) + t681;
t601 = -qJD(3) + t617;
t863 = t370 * t601;
t862 = t372 * t601;
t861 = t425 * t679;
t619 = t679 * t429;
t518 = t523 ^ 2;
t520 = t526 ^ 2;
t475 = t520 - t518;
t684 = t524 * qJD(1);
t661 = t526 * t684;
t615 = t523 * t661;
t858 = qJD(2) * t475 - 0.2e1 * t615;
t855 = -pkin(5) / 0.2e1;
t854 = pkin(5) / 0.2e1;
t852 = -t105 / 0.2e1;
t375 = t527 * t425;
t804 = t527 * pkin(8);
t807 = t524 * pkin(2);
t456 = -t804 + t807;
t490 = pkin(7) * t756;
t512 = t524 * pkin(3);
t245 = -t524 * pkin(4) - t490 - t512 + (-pkin(9) * t527 - t456) * t526;
t221 = t525 * t245;
t433 = t523 * t456;
t509 = t524 * qJ(4);
t330 = -pkin(7) * t747 + t433 + t509;
t755 = t523 * t527;
t273 = pkin(9) * t755 + t330;
t761 = t522 * t273;
t624 = t221 - t761;
t107 = -pkin(5) * t524 - qJ(6) * t375 + t624;
t851 = t107 / 0.2e1;
t302 = t487 + t351;
t283 = t525 * t302;
t675 = pkin(7) * t755;
t301 = -t613 - t675;
t760 = t522 * t301;
t145 = -t283 + t760;
t122 = -t145 - t800;
t849 = -t122 / 0.2e1;
t281 = t522 * t302;
t282 = t525 * t301;
t146 = t282 + t281;
t123 = t146 + t778;
t848 = -t123 / 0.2e1;
t843 = t546 / 0.2e1;
t842 = t283 / 0.2e1;
t841 = -t327 / 0.2e1;
t364 = t524 * pkin(7) - t722;
t840 = t364 / 0.2e1;
t640 = -t375 / 0.2e1;
t639 = t375 / 0.2e1;
t406 = t606 * t524;
t837 = -t406 / 0.2e1;
t833 = t864 / 0.2e1;
t832 = -t864 / 0.2e1;
t831 = t437 / 0.2e1;
t438 = t525 * qJ(4) + t522 * t853;
t830 = -t438 / 0.2e1;
t829 = t438 / 0.2e1;
t828 = -t456 / 0.2e1;
t827 = -t490 / 0.2e1;
t826 = -t522 / 0.2e1;
t824 = t523 / 0.2e1;
t823 = -t524 / 0.2e1;
t822 = t524 / 0.2e1;
t821 = t525 / 0.2e1;
t820 = -t526 / 0.2e1;
t819 = t526 / 0.2e1;
t817 = t527 / 0.2e1;
t816 = pkin(3) * t523;
t815 = pkin(5) * t375;
t813 = t122 * pkin(5);
t812 = t370 * pkin(5);
t811 = t372 * pkin(5);
t750 = t525 * t527;
t461 = t523 * t750;
t374 = t522 * t746 - t461;
t810 = t374 * pkin(5);
t809 = t425 * pkin(5);
t808 = t429 * pkin(5);
t803 = pkin(5) * qJD(5);
t802 = pkin(5) * qJD(6);
t794 = t115 * t525;
t801 = t105 * t826 + t794 / 0.2e1;
t732 = t105 - t114;
t13 = t732 * t370;
t799 = qJD(1) * t13;
t184 = t315 + t812;
t676 = t184 * t811;
t14 = -t115 * t732 + t676;
t798 = qJD(1) * t14;
t758 = t522 * t527;
t29 = -t105 * t758 + t115 * t750 - t184 * t747;
t797 = qJD(1) * t29;
t34 = -t105 * t372 - t115 * t370;
t796 = qJD(1) * t34;
t220 = t522 * t245;
t246 = t525 * t273;
t727 = t246 + t220;
t116 = -qJ(6) * t374 + t727;
t485 = t526 * t745;
t665 = t853 * t523;
t316 = t485 + (-pkin(7) + t665) * t527;
t185 = t316 + t810;
t11 = t105 * t107 + t115 * t116 + t184 * t185;
t795 = t11 * qJD(1);
t12 = -t105 * t375 - t107 * t372 - t115 * t374 - t116 * t370;
t793 = t12 * qJD(1);
t347 = (t526 * t853 - t508) * t524;
t15 = t105 * t122 + t115 * t123 + t184 * t347 - t676;
t792 = t15 * qJD(1);
t16 = (t115 - t122) * t372 + (-t105 - t123) * t370;
t791 = t16 * qJD(1);
t790 = t184 * t429;
t789 = t609 * t522;
t788 = t546 * t525;
t787 = t315 * t370;
t786 = t315 * t372;
t32 = t127 * t524 + t315 * t374 + t316 * t370 + t527 * t624;
t785 = t32 * qJD(1);
t784 = t327 * t527;
t33 = -t128 * t524 - t315 * t375 - t316 * t372 + t527 * t727;
t783 = t33 * qJD(1);
t350 = -t420 + t675;
t782 = t350 * t527;
t781 = t351 * t527;
t780 = t364 * t523;
t779 = t364 * t526;
t298 = t407 + t809;
t777 = t372 * t298;
t775 = t406 * t523;
t774 = t407 * t425;
t772 = t864 * t370;
t771 = t864 * t425;
t770 = t864 * t522;
t769 = t438 * t370;
t768 = t438 * t425;
t767 = t438 * t525;
t766 = t438 * t527;
t765 = t439 * t523;
t569 = t766 / 0.2e1 - t754 / 0.2e1;
t49 = t842 + (-t301 / 0.2e1 - t230 / 0.2e1) * t522 + t569;
t764 = t49 * qJD(1);
t759 = t522 * t429;
t757 = t523 * t372;
t753 = t525 * t425;
t749 = t526 * t456;
t519 = t524 ^ 2;
t748 = t526 * t519;
t744 = t527 * t429;
t53 = -t145 * t527 + t347 * t370 - t786;
t743 = t53 * qJD(1);
t54 = t146 * t527 - t347 * t372 - t787;
t742 = t54 * qJD(1);
t328 = t350 + t515;
t623 = -t490 - t749;
t331 = -t512 + t623;
t365 = -t485 + (pkin(7) + t816) * t527;
t59 = t327 * t330 + t328 * t331 + t364 * t365;
t741 = t59 * qJD(1);
t64 = -t327 * t350 + t328 * t351 + t364 * t406;
t740 = t64 * qJD(1);
t629 = -t350 / 0.2e1 + t328 / 0.2e1;
t630 = t841 + t351 / 0.2e1;
t67 = (-t515 / 0.2e1 - t629) * t526 + (-t745 / 0.2e1 - t630) * t523;
t739 = t67 * qJD(1);
t69 = -t127 * t527 + t787;
t738 = t69 * qJD(1);
t70 = -t128 * t527 + t786;
t737 = t70 * qJD(1);
t71 = -t328 * t746 - t331 * t747 + (t330 * t524 + t784) * t523;
t736 = t71 * qJD(1);
t74 = -t351 * t747 + (t327 * t526 + (t328 - t350) * t523) * t524;
t735 = t74 * qJD(1);
t597 = t364 * t527 + t365 * t524;
t93 = -t327 * t524 + t330 * t527 + t526 * t597;
t734 = t93 * qJD(1);
t95 = -t328 * t524 + t331 * t527 + t523 * t597;
t733 = t95 * qJD(1);
t731 = t679 * t113;
t730 = t679 * t142;
t729 = -t789 / 0.2e1 + t788 / 0.2e1;
t641 = t746 / 0.2e1;
t645 = t755 / 0.2e1;
t726 = t522 * t645 + t525 * t641;
t642 = -t746 / 0.2e1;
t646 = -t755 / 0.2e1;
t725 = t522 * t646 + t525 * t642;
t724 = t461 / 0.2e1 + t522 * t642;
t723 = -t461 / 0.2e1 + t522 * t641;
t521 = t527 ^ 2;
t476 = t521 - t519;
t638 = -t744 / 0.2e1;
t121 = 0.2e1 * t639 * t525 + (t638 + t374 / 0.2e1) * t522;
t720 = qJD(1) * t121;
t134 = t781 + (t775 + t779) * t524;
t719 = qJD(1) * t134;
t179 = -t370 * t750 + t372 * t758;
t718 = qJD(1) * t179;
t198 = -t370 * t524 + t374 * t527;
t717 = qJD(1) * t198;
t199 = t372 * t524 - t375 * t527;
t716 = qJD(1) * t199;
t271 = -t519 * t814 - t782;
t715 = qJD(1) * t271;
t272 = -pkin(7) * t748 - t781;
t714 = qJD(1) * t272;
t711 = qJD(2) * t523;
t710 = qJD(2) * t526;
t709 = qJD(3) * t523;
t708 = qJD(3) * t526;
t707 = qJD(3) * t527;
t706 = qJD(4) * t522;
t705 = qJD(4) * t523;
t704 = qJD(4) * t525;
t703 = qJD(4) * t527;
t702 = qJD(5) * t425;
t701 = qJD(5) * t429;
t700 = qJD(5) * t438;
t132 = -t370 * t375 - t372 * t374;
t699 = t132 * qJD(1);
t135 = -t364 * t756 + t406 * t747 - t782;
t698 = t135 * qJD(1);
t158 = t350 * t524 + (-t623 - 0.2e1 * t490) * t527;
t697 = t158 * qJD(1);
t159 = t433 * t527 + (-t351 + t491) * t524;
t696 = t159 * qJD(1);
t164 = t364 * t747 + t784;
t695 = t164 * qJD(1);
t235 = t638 + t723;
t694 = t235 * qJD(1);
t637 = t744 / 0.2e1;
t236 = t637 + t724;
t693 = t236 * qJD(1);
t237 = t639 + t726;
t692 = t237 * qJD(1);
t238 = t640 + t725;
t691 = t238 * qJD(1);
t285 = t370 * t747 + t521 * t522;
t690 = t285 * qJD(1);
t286 = t372 * t747 + t521 * t525;
t689 = t286 * qJD(1);
t688 = t350 * qJD(3);
t428 = t476 * t523;
t687 = t428 * qJD(1);
t431 = t521 * t526 - t748;
t686 = t431 * qJD(1);
t685 = t476 * qJD(1);
t506 = t522 * qJD(3);
t683 = t524 * qJD(2);
t507 = t525 * qJD(3);
t680 = t527 * qJD(2);
t678 = -pkin(3) / 0.2e1 - pkin(4) / 0.2e1;
t677 = t827 - t512;
t674 = pkin(1) * t684;
t673 = pkin(1) * t681;
t672 = pkin(8) * t709;
t671 = pkin(8) * t708;
t670 = pkin(2) * t824;
t669 = t546 * t854;
t668 = t805 / 0.2e1;
t667 = t804 / 0.2e1;
t666 = t855 + t832;
t663 = t370 * t681;
t662 = t372 * t681;
t659 = t523 * t707;
t658 = t526 * t707;
t657 = t522 * t703;
t656 = t523 * t682;
t655 = t525 * t703;
t654 = t523 * t708;
t482 = t523 * t710;
t653 = t524 * t680;
t652 = t524 * t705;
t651 = t524 * t681;
t650 = -t788 / 0.2e1;
t649 = t439 * t822;
t648 = -t508 / 0.2e1;
t647 = t370 * t824;
t644 = -t747 / 0.2e1;
t643 = t747 / 0.2e1;
t636 = t114 / 0.2e1 + t852;
t633 = t843 + t865;
t632 = -t220 / 0.2e1 - t246 / 0.2e1;
t631 = -t281 / 0.2e1 - t282 / 0.2e1;
t628 = t831 + t832;
t627 = t827 - t512 / 0.2e1;
t626 = t518 / 0.2e1 - t520 / 0.2e1;
t380 = (-0.1e1 / 0.2e1 + t626) * t524;
t622 = qJD(1) * t380 - t482;
t408 = t626 * t524;
t621 = qJD(1) * t408 - t482;
t451 = t523 * qJD(1) * t748;
t620 = qJD(2) * t408 + t451;
t618 = t679 * t527;
t486 = -qJD(3) + t681;
t616 = t678 * t523;
t614 = t524 * t482;
t612 = t681 - qJD(3) / 0.2e1;
t611 = t855 - t628;
t510 = t526 * qJ(4);
t416 = t510 + t665;
t608 = t221 / 0.2e1 - t761 / 0.2e1;
t453 = -t510 + t816;
t607 = t453 * t822 + t840;
t605 = -t439 * t527 + t806;
t552 = t416 - t808;
t528 = t122 * t846 + t123 * t865 - t184 * t552 / 0.2e1 - (t347 - t811) * t298 / 0.2e1 + t875;
t573 = t107 * t832 + t116 * t829;
t1 = t528 + t573;
t37 = t298 * t552;
t604 = -t1 * qJD(1) + t37 * qJD(2);
t536 = -t425 * t636 + t878;
t8 = t815 / 0.2e1 + t536;
t603 = qJD(1) * t8;
t529 = (t850 + t849) * t429 + (t848 + t852) * t425 - t878 + t633 * t372;
t570 = t374 * t830 + t375 * t833;
t6 = t529 - t570;
t602 = t6 * qJD(1);
t533 = t105 * t835 + t115 * t836 + t546 * t839 + t609 * t838;
t534 = (-pkin(7) / 0.2e1 + t616) * t527 + t485 / 0.2e1 + t810 / 0.2e1;
t21 = t533 + t534;
t92 = -t425 * t546 - t429 * t609;
t600 = -qJD(1) * t21 + qJD(2) * t92;
t55 = t611 * t370;
t72 = t611 * t425;
t599 = qJD(1) * t55 + qJD(2) * t72;
t598 = t330 * t526 + t331 * t523;
t566 = t616 + t510 / 0.2e1;
t124 = t768 / 0.2e1 + t666 * t429 + t566;
t540 = (t526 * t678 + t648) * t524;
t97 = t769 / 0.2e1 + t666 * t372 + t540;
t595 = qJD(1) * t97 + qJD(2) * t124;
t162 = -t407 * t429 + t416 * t425;
t531 = t347 * t836 + t416 * t839 - t538;
t544 = t437 * t823 + t608;
t25 = t531 + t544;
t594 = -qJD(1) * t25 - qJD(2) * t162;
t163 = t416 * t429 + t774;
t532 = t347 * t835 + t416 * t838 + t539;
t565 = t438 * t823 + t632;
t28 = t532 + t565;
t593 = -qJD(1) * t28 - qJD(2) * t163;
t304 = t439 * t526 + t453 * t523;
t412 = -t433 / 0.2e1;
t465 = pkin(8) * t645;
t89 = t465 - t775 / 0.2e1 - t779 / 0.2e1 - t509 + t412 + (t765 / 0.2e1 + (-t453 / 0.2e1 + pkin(7) / 0.2e1) * t526) * t524;
t592 = -qJD(1) * t89 + qJD(2) * t304;
t305 = t453 * t526 - t765;
t577 = t649 + t667;
t548 = t837 + t577;
t574 = t607 * t523;
t91 = t574 + (t828 + t548) * t526 + t677;
t591 = -qJD(1) * t91 + qJD(2) * t305;
t309 = t834 - t752 / 0.2e1;
t545 = -t219 / 0.2e1 + t437 * t818 + t762 / 0.2e1;
t50 = t545 + t631;
t590 = -t50 * qJD(1) + t309 * qJD(2);
t588 = t486 * t524;
t144 = t773 + t776;
t222 = t366 + t857;
t583 = qJD(1) * t222 + qJD(2) * t144;
t303 = t421 + t856;
t582 = qJD(1) * t144 + qJD(2) * t303;
t568 = t370 * t826 - t372 * t821;
t170 = t644 + t568;
t567 = t425 * t825 + t429 * t821;
t223 = t824 + t567;
t581 = qJD(1) * t170 - qJD(2) * t223;
t580 = -t712 - t713;
t579 = t667 - t807 / 0.2e1;
t578 = -t330 * qJ(4) / 0.2e1 + t331 * pkin(3) / 0.2e1;
t411 = t433 / 0.2e1;
t466 = pkin(8) * t646;
t296 = t524 * t670 + t411 + t466;
t576 = pkin(2) * t710 - qJD(1) * t296;
t297 = (t828 + t579) * t526;
t575 = pkin(2) * t711 - qJD(1) * t297;
t551 = t184 * t824 + t298 * t643;
t24 = (t546 * t818 - t107 / 0.2e1) * t525 + (t609 * t817 - t116 / 0.2e1) * t522 + t551;
t564 = -qJD(1) * t24 - t298 * t711;
t530 = (t523 * t630 + t526 * t629) * pkin(8) + t453 * t840 + t406 * t439 / 0.2e1;
t36 = t530 + t578;
t563 = -t439 * t453 * qJD(2) - t36 * qJD(1);
t42 = -t538 + t608;
t562 = qJD(1) * t42 - t407 * t712;
t43 = t539 + t632;
t561 = qJD(1) * t43 + qJD(2) * t774;
t560 = t526 * t588;
t130 = t780 / 0.2e1 + (t828 + t577) * t526 + t627;
t559 = qJD(1) * t130 + t439 * t711;
t175 = -t757 / 0.2e1 + (t429 * t820 + t825) * t524;
t554 = -qJD(1) * t175 + t429 * t711;
t176 = t647 + (t425 * t819 + t821) * t524;
t553 = qJD(1) * t176 + t425 * t711;
t427 = t475 * t519;
t550 = qJD(1) * t427 + 0.2e1 * t614;
t3 = -t636 * t546 + t877 * t115 + (t851 - t777 / 0.2e1 - t790 / 0.2e1) * pkin(5);
t40 = t298 * t808;
t46 = t650 + t729 + t876;
t547 = -qJD(1) * t3 + qJD(2) * t40 + qJD(4) * t46;
t535 = -t115 * t628 + t438 * t636;
t10 = -t813 / 0.2e1 + t535;
t182 = (t864 - t437) * t438;
t30 = t438 * t877 + t546 * t628 + t669;
t543 = -qJD(1) * t10 + qJD(2) * t30 - qJD(3) * t182;
t136 = (t855 + t628) * t522;
t19 = (t668 - t636) * t522;
t542 = qJD(1) * t19 - qJD(2) * t46 + qJD(3) * t136;
t18 = (-t766 / 0.2e1 + t849) * t525 + (-t817 * t864 + t848) * t522 + t801;
t288 = t767 + t770;
t47 = t522 * t877 - t525 * t633;
t541 = -qJD(1) * t18 + qJD(2) * t47 - qJD(3) * t288;
t442 = t519 * t520 + t521;
t537 = t442 * qJD(1) + t614 - t707;
t496 = -t684 / 0.2e1;
t495 = t684 / 0.2e1;
t494 = -t683 / 0.2e1;
t493 = t683 / 0.2e1;
t483 = t526 * t681;
t452 = t526 * t652;
t441 = t486 * qJ(4);
t424 = -t483 + t708;
t423 = t525 * t681 - t507;
t422 = t522 * t681 - t506;
t418 = t612 * t524;
t415 = t749 / 0.2e1;
t405 = qJD(2) * t518 + t615;
t395 = t408 * qJD(3);
t381 = t518 * t823 + t520 * t822 + t823;
t379 = t525 * t617 - t507;
t378 = t522 * t617 - t506;
t369 = (-t523 * t684 + t710) * t527;
t368 = t523 * t588;
t363 = (qJD(5) / 0.2e1 + t612) * t524;
t336 = t351 * qJD(3);
t244 = t526 * t579 + t415 + t490;
t243 = t466 + t412 + (pkin(7) * t526 + t670) * t524;
t242 = t638 + t724;
t241 = t637 + t723;
t240 = t640 + t726;
t239 = t639 + t725;
t225 = t580 * pkin(5);
t224 = t824 - t567;
t217 = -t432 + 0.2e1 * t834;
t178 = t757 / 0.2e1 + t429 * t643 + t522 * t822;
t177 = t647 + t425 * t643 - t751 / 0.2e1;
t172 = -t753 + t759;
t169 = t643 + t568;
t141 = t144 * qJD(6);
t140 = -t525 * t370 + t522 * t372;
t137 = t770 / 0.2e1 + t864 * t826;
t131 = pkin(8) * t642 + t439 * t644 - t780 / 0.2e1 - t749 / 0.2e1 + t627;
t125 = -t768 / 0.2e1 + t429 * t833 - t808 / 0.2e1 + t566;
t120 = t374 * t826 + t525 * t640 + (t753 / 0.2e1 - t759 / 0.2e1) * t527;
t98 = -t769 / 0.2e1 - t372 * t832 - t811 / 0.2e1 + t540;
t90 = t526 * t548 + t415 + t574 - t677;
t88 = t465 + t509 + pkin(7) * t644 + t411 - t607 * t526 + (t649 + t837) * t523;
t73 = t425 * t831 - t771 / 0.2e1 - t809 / 0.2e1;
t68 = t350 * t820 + t523 * t841 + t351 * t824 + t328 * t819 + (t648 - t514 / 0.2e1) * t527;
t56 = t370 * t831 - t772 / 0.2e1 - t812 / 0.2e1;
t52 = t763 / 0.2e1 - t760 / 0.2e1 + t842 - t569;
t51 = -t545 + t631;
t48 = t546 * t821 + t729 - t876;
t45 = t538 + t608;
t44 = -t539 + t632;
t41 = t46 * qJD(5);
t35 = t530 - t578;
t31 = t437 * t865 + t546 * t833 + t669 + (t829 + t830) * t609;
t27 = t532 - t565;
t26 = t531 - t544;
t23 = t116 * t825 + t107 * t821 + (t650 + t789 / 0.2e1) * t527 + t551;
t22 = -t533 + t534;
t20 = t114 * t825 - t794 / 0.2e1 + t522 * t668 + t801;
t17 = t123 * t825 + t122 * t821 + (-t767 / 0.2e1 - t770 / 0.2e1) * t527 + t801;
t9 = t813 / 0.2e1 + t535;
t7 = -t815 / 0.2e1 + t536;
t5 = t529 + t570;
t4 = pkin(5) * t851 + t114 * t843 + t115 * t846 - t777 * t855 + t790 * t854 + t875;
t2 = -t528 + t573;
t38 = [0, 0, 0, t653, t476 * qJD(2), 0, 0, 0, -pkin(1) * t683, -pkin(1) * t680, -t519 * t654 + t520 * t653, -t427 * qJD(3) - 0.2e1 * t527 * t614, -t431 * qJD(2) + t524 * t659, t428 * qJD(2) + t524 * t658, -t653, -qJD(2) * t158 - qJD(3) * t272, qJD(2) * t159 + qJD(3) * t271, qJD(2) * t95 + qJD(3) * t134 - t519 * t656, -t71 * qJD(2) - t74 * qJD(3) + t527 * t652, -qJD(2) * t93 - qJD(3) * t135 + qJD(4) * t442, qJD(2) * t59 + qJD(3) * t64 - qJD(4) * t164 (qJD(2) * t375 + t370 * t679) * t372, qJD(2) * t132 + t160 * t679, -t199 * qJD(2) + t370 * t618, -t198 * qJD(2) + t372 * t618, -t653, qJD(2) * t32 + qJD(3) * t53 + qJD(4) * t285 + qJD(5) * t70, -qJD(2) * t33 - qJD(3) * t54 + qJD(4) * t286 - qJD(5) * t69, qJD(2) * t12 + qJD(3) * t16 - qJD(4) * t179 + qJD(5) * t13 + qJD(6) * t222, qJD(2) * t11 + qJD(3) * t15 - qJD(4) * t29 + qJD(5) * t14 + qJD(6) * t34; 0, 0, 0, t651, t685, t680, -t683, 0, -pkin(7) * t680 - t674, pkin(7) * t683 - t673, -t395 + (t520 * t684 + t482) * t527, -0.2e1 * t524 * t654 + t527 * t858, t523 * t683 - t686, t526 * t683 + t687, -t418, -t697 + (t523 * t610 - t491) * qJD(2) + t244 * qJD(3), t696 + (t526 * t610 + t675) * qJD(2) + t243 * qJD(3), t733 + (-t365 * t526 - t523 * t605) * qJD(2) + t90 * qJD(3) + t381 * qJD(4), qJD(2) * t598 + t68 * qJD(3) - t736, -t734 + (-t365 * t523 + t526 * t605) * qJD(2) + t88 * qJD(3) + t452, t741 + (pkin(8) * t598 + t365 * t439) * qJD(2) + t35 * qJD(3) + t131 * qJD(4), -t375 * t580 + t730, t699 + (-t374 * t429 - t375 * t425) * qJD(2) - t731, qJD(3) * t239 + qJD(5) * t240 - t429 * t683 - t716, qJD(3) * t241 + qJD(5) * t242 + t425 * t683 - t717, -t363, t785 + (t316 * t425 + t374 * t407 + t524 * t860) * qJD(2) + t26 * qJD(3) + t177 * qJD(4) + t45 * qJD(5), -t783 + (t316 * t429 + t375 * t407 + t524 * t596) * qJD(2) + t27 * qJD(3) + t178 * qJD(4) + t44 * qJD(5), t793 + (-t107 * t429 - t116 * t425 - t374 * t546 - t375 * t609) * qJD(2) + t5 * qJD(3) + t120 * qJD(4) + t7 * qJD(5) + t141, t795 + (t107 * t609 + t116 * t546 + t185 * t298) * qJD(2) + t2 * qJD(3) + t23 * qJD(4) + t4 * qJD(5) + t22 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620, -t550, t368, t560, t493, qJD(2) * t244 - t336 - t714, qJD(2) * t243 + t688 + t715, qJD(2) * t90 - t336 + t719, t68 * qJD(2) - qJD(3) * t722 - t652 - t735, t88 * qJD(2) - t688 - t698 - t703, t740 + t35 * qJD(2) + (-pkin(3) * t351 - qJ(4) * t350) * qJD(3) + t327 * qJD(4), -t868, t587, t239 * qJD(2) + t863, t241 * qJD(2) + t862, t493, t26 * qJD(2) + t145 * qJD(3) + t52 * qJD(5) - t657 + t743, t27 * qJD(2) + t146 * qJD(3) + t51 * qJD(5) - t655 - t742, t791 + t5 * qJD(2) + (t438 * t372 + t772) * qJD(3) + t140 * qJD(4) + t56 * qJD(5), t792 + t2 * qJD(2) + (-t122 * t864 + t123 * t438) * qJD(3) + t17 * qJD(4) + t9 * qJD(5) + t98 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t381 - t451, t368, t537, qJD(2) * t131 + qJD(3) * t327 - t695, 0, 0, 0, 0, 0, t177 * qJD(2) - t506 * t527 + t690, t178 * qJD(2) - t507 * t527 + t689, qJD(2) * t120 + qJD(3) * t140 - t718, qJD(2) * t23 + qJD(3) * t17 + qJD(5) * t20 + qJD(6) * t169 - t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, -t587, t240 * qJD(2) - t863, t242 * qJD(2) - t862, t494, qJD(2) * t45 + qJD(3) * t52 - qJD(5) * t128 + t737, qJD(2) * t44 + qJD(3) * t51 + qJD(5) * t127 - t738, qJD(2) * t7 + qJD(3) * t56 + t370 * t803 + t799, qJD(2) * t4 + qJD(3) * t9 + qJD(4) * t20 - t115 * t803 + t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t583, qJD(2) * t22 + qJD(3) * t98 + qJD(4) * t169 + t796; 0, 0, 0, -t651, -t685, 0, 0, 0, t674, t673, -t520 * t651 - t395, 0.2e1 * t523 * t560, -t658 + t686, t659 - t687, t418, qJD(3) * t297 + t697, qJD(3) * t296 - t696, qJD(3) * t91 - qJD(4) * t380 - t733, -t67 * qJD(3) - t527 * t682 + t736, qJD(3) * t89 + t452 + t734, qJD(3) * t36 - qJD(4) * t130 - t741, -t375 * t713 + t730, -t699 - t731, -qJD(3) * t238 - qJD(5) * t237 + t716, -qJD(3) * t235 - qJD(5) * t236 + t717, t363, qJD(3) * t25 + qJD(4) * t176 - qJD(5) * t42 - t785, qJD(3) * t28 - qJD(4) * t175 - qJD(5) * t43 + t783, qJD(3) * t6 + qJD(4) * t121 + qJD(5) * t8 + t141 - t793, -qJD(3) * t1 + qJD(4) * t24 - qJD(5) * t3 - qJD(6) * t21 - t795; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t654, t475 * qJD(3), 0, 0, 0, -pkin(2) * t709, -pkin(2) * t708, -qJD(3) * t305 + t656, 0, -qJD(3) * t304 + qJD(4) * t518 (qJD(3) * t453 - t705) * t439, t425 * t619, t679 * t213, 0, 0, 0, qJD(3) * t162 + t407 * t701 + t425 * t705, qJD(3) * t163 - t407 * t702 + t429 * t705, qJD(6) * t303, qJD(3) * t37 + qJD(5) * t40 + qJD(6) * t92 + t298 * t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t621, t858, t424, t486 * t523, t496, -t575 - t671, -t576 + t672, -t591 - t671, -t739 + t874, -t592 - t672, pkin(8) * t874 - t563, t869, t586, -t691 - t861, -t694 - t619, t496, -t594 - t867, qJD(3) * t860 + qJD(5) * t217 - t593 (t438 * t429 + t771) * qJD(3) + t172 * qJD(4) + t73 * qJD(5) + t602 (-t438 * t609 - t546 * t864) * qJD(3) + t48 * qJD(4) + t31 * qJD(5) + t125 * qJD(6) + t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t622, t424, t405, -t559 + t671, 0, 0, 0, 0, 0, t553, t554, qJD(3) * t172 + t720, qJD(3) * t48 + qJD(6) * t224 + t41 - t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t869, -t586, -t692 + t861, t619 - t693, t495, -t562 + t867, qJD(3) * t217 + qJD(5) * t860 - t561, pkin(5) * t702 + qJD(3) * t73 + t603, qJD(3) * t31 - t546 * t803 + t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, qJD(3) * t125 + qJD(4) * t224 + t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, t550, t369 (-t661 - t711) * t527, t493, -qJD(2) * t297 + t714, -qJD(2) * t296 - t715, -qJD(2) * t91 - t719, qJD(2) * t67 + t735, -t89 * qJD(2) + t698 - t703, -qJ(4) * t703 - t36 * qJD(2) - t740, t868, -t587, t238 * qJD(2) - t663, t235 * qJD(2) - t662, t493, -t25 * qJD(2) - t49 * qJD(5) - t657 - t743, -t28 * qJD(2) - t50 * qJD(5) - t655 + t742, -qJD(2) * t6 - qJD(5) * t55 - t791, qJD(2) * t1 + qJD(4) * t18 + qJD(5) * t10 - qJD(6) * t97 - t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t621, -t858, t483, -t523 * t681, t495, t575, t576, t591, t739, t592, t563, -t869, -t586, t691, t694, t495, t594, qJD(5) * t309 + t593, -qJD(5) * t72 - t602, -qJD(4) * t47 - qJD(5) * t30 - qJD(6) * t124 - t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), 0, 0, 0, 0, 0, t700 + t706, -qJD(5) * t437 + t704, 0, qJD(4) * t288 + qJD(5) * t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t486, -t441, 0, 0, 0, 0, 0, -t422, -t423, 0, qJD(5) * t137 - t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438 * t679 - t764, -t437 * t679 + t590, -t599, -pkin(5) * t700 + qJD(4) * t137 - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t380 + t451, t369, -t537, qJ(4) * t707 + t130 * qJD(2) + t695, 0, 0, 0, 0, 0, -t176 * qJD(2) + t522 * t618 - t690, t175 * qJD(2) + t525 * t618 - t689, -qJD(2) * t121 + t718, -qJD(2) * t24 - qJD(3) * t18 - qJD(5) * t19 + qJD(6) * t170 + t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t622, t483, -t405, t559, 0, 0, 0, 0, 0, -t553, -t554, -t720, qJD(3) * t47 - qJD(6) * t223 + t41 + t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, t441, 0, 0, 0, 0, 0, t378, t379, 0, -qJD(5) * t136 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -t379, 0, -t522 * t803 - t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t868, t587, t237 * qJD(2) + t663, t236 * qJD(2) + t662, t494, t42 * qJD(2) + t49 * qJD(3) + t657 - t737, t43 * qJD(2) + t50 * qJD(3) + t655 + t738, -qJD(2) * t8 + qJD(3) * t55 - t799, qJD(2) * t3 - qJD(3) * t10 + qJD(4) * t19 - t372 * t802 - t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t869, t586, t692, t693, t496, t562, -qJD(3) * t309 + t561, qJD(3) * t72 - t603, qJD(3) * t30 - t429 * t802 - t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t438 - t706 + t764, qJD(3) * t437 - t590 - t704, t599, qJD(4) * t136 + t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, t423, 0, t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t583, qJD(2) * t21 + qJD(3) * t97 - qJD(4) * t170 + t372 * t803 - t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, pkin(5) * t701 + qJD(3) * t124 + qJD(4) * t223 - t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t38;
