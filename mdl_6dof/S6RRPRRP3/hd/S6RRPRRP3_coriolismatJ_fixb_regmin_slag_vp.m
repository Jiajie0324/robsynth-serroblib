% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:50:38
% EndTime: 2019-03-09 11:51:03
% DurationCPUTime: 13.76s
% Computational Cost: add. (18675->600), mult. (36207->821), div. (0->0), fcn. (41738->8), ass. (0->480)
t444 = sin(pkin(10));
t447 = sin(qJ(2));
t450 = cos(qJ(2));
t679 = cos(pkin(10));
t417 = t444 * t447 - t450 * t679;
t713 = -t417 / 0.2e1;
t449 = cos(qJ(4));
t436 = pkin(2) * t444 + pkin(8);
t692 = pkin(9) + t436;
t414 = t692 * t449;
t448 = cos(qJ(5));
t394 = t448 * t414;
t446 = sin(qJ(4));
t413 = t692 * t446;
t445 = sin(qJ(5));
t629 = t445 * t413;
t316 = t394 - t629;
t424 = t445 * t446 - t448 * t449;
t269 = -qJ(6) * t424 + t316;
t523 = t679 * t447;
t633 = t444 * t450;
t419 = t523 + t633;
t322 = t446 * t419;
t622 = t449 * t419;
t304 = -t322 * t445 + t448 * t622;
t716 = -t304 / 0.2e1;
t755 = t269 * t716;
t691 = -qJ(3) - pkin(7);
t429 = t691 * t447;
t430 = t691 * t450;
t351 = -t679 * t429 - t430 * t444;
t284 = pkin(4) * t322 + t351;
t623 = t448 * t446;
t627 = t445 * t449;
t426 = t623 + t627;
t710 = -t426 / 0.2e1;
t437 = -pkin(2) * t679 - pkin(3);
t428 = -t449 * pkin(4) + t437;
t749 = -t428 / 0.2e1;
t754 = -t284 * t710 - t304 * t749 + t316 * t713;
t694 = t447 * pkin(2);
t325 = pkin(3) * t419 + pkin(8) * t417 + t694;
t308 = t449 * t325;
t324 = t449 * t417;
t625 = t351 * t446;
t158 = pkin(4) * t419 + pkin(9) * t324 + t308 + t625;
t156 = t448 * t158;
t319 = t446 * t417;
t307 = t446 * t325;
t748 = t351 * t449;
t612 = -t307 + t748;
t185 = pkin(9) * t319 - t612;
t630 = t445 * t185;
t505 = t156 / 0.2e1 - t630 / 0.2e1;
t40 = t505 + t754;
t37 = t505 - t754;
t753 = t748 / 0.2e1;
t519 = t448 * t413 + t445 * t414;
t740 = -t426 * qJ(6) - t519;
t721 = -t740 / 0.2e1;
t745 = t740 / 0.2e1;
t747 = t745 + t721;
t64 = t747 * t426;
t235 = t426 * t419;
t711 = -t424 / 0.2e1;
t750 = -t235 * t749 - t284 * t711 + t519 * t713;
t423 = t679 * t430;
t634 = t444 * t429;
t738 = -t423 + t634;
t645 = t738 * t446;
t644 = t738 * t449;
t592 = qJD(1) * t419;
t337 = t417 * t592;
t407 = t523 / 0.2e1 + t633 / 0.2e1;
t741 = t407 * qJD(4) + t337;
t563 = qJD(4) + qJD(5);
t155 = t445 * t158;
t182 = t448 * t185;
t528 = -t155 / 0.2e1 - t182 / 0.2e1;
t38 = t528 + t750;
t39 = t528 - t750;
t746 = 0.2e1 * t446;
t543 = -pkin(2) * t450 - pkin(1);
t317 = t417 * pkin(3) - t419 * pkin(8) + t543;
t207 = -t449 * t317 + t645;
t183 = -pkin(9) * t622 - t207;
t697 = t417 * pkin(4);
t157 = t183 + t697;
t208 = t317 * t446 + t644;
t184 = -pkin(9) * t322 + t208;
t181 = t448 * t184;
t110 = t445 * t157 + t181;
t678 = qJ(6) * t235;
t89 = t110 - t678;
t744 = t747 * t89;
t743 = t424 * t563;
t154 = t448 * t157;
t631 = t445 * t184;
t109 = -t154 + t631;
t294 = t304 * qJ(6);
t88 = -t109 - t294;
t415 = t417 ^ 2;
t416 = t419 ^ 2;
t739 = -t416 - t415;
t737 = qJD(5) * t407 + t741;
t734 = t89 * t710 + t755;
t717 = -t235 / 0.2e1;
t73 = pkin(5) * t417 + t88;
t733 = t740 * t717 - t235 * t721 + t73 * t424 / 0.2e1 + t734;
t442 = t446 ^ 2;
t443 = t449 ^ 2;
t433 = t443 - t442;
t521 = t622 * t746;
t466 = qJD(1) * t521 - qJD(2) * t433;
t732 = t563 * t519;
t731 = t304 ^ 2;
t421 = t424 ^ 2;
t730 = t426 ^ 2;
t729 = -pkin(5) / 0.2e1;
t728 = -t73 / 0.2e1;
t369 = t445 * t319;
t545 = t448 * t324;
t303 = t369 - t545;
t520 = t156 - t630;
t80 = pkin(5) * t419 - qJ(6) * t303 + t520;
t727 = t80 / 0.2e1;
t632 = t445 * t183;
t113 = -t181 - t632;
t96 = t113 + t678;
t726 = t96 / 0.2e1;
t725 = t96 * pkin(5);
t724 = -t154 / 0.2e1;
t723 = -t157 / 0.2e1;
t530 = -t181 / 0.2e1;
t722 = -t269 / 0.2e1;
t718 = t269 / 0.2e1;
t715 = t351 / 0.2e1;
t701 = pkin(5) * t424;
t354 = t428 + t701;
t714 = t354 / 0.2e1;
t529 = -t394 / 0.2e1;
t712 = -t419 / 0.2e1;
t709 = t426 / 0.2e1;
t693 = t448 * pkin(4);
t439 = pkin(5) + t693;
t708 = -t439 / 0.2e1;
t707 = -t446 / 0.2e1;
t706 = t448 / 0.2e1;
t705 = -t449 / 0.2e1;
t704 = pkin(5) * t235;
t703 = pkin(5) * t303;
t702 = pkin(5) * t304;
t700 = pkin(5) * t426;
t699 = t269 * pkin(5);
t300 = t426 * t417;
t698 = t300 * pkin(5);
t696 = t445 * pkin(4);
t695 = t446 * pkin(4);
t681 = t89 * t424;
t682 = t73 * t426;
t690 = -t682 / 0.2e1 - t681 / 0.2e1;
t689 = t73 - t88;
t687 = pkin(4) * qJD(4);
t686 = pkin(4) * qJD(5);
t685 = pkin(5) * qJD(5);
t684 = pkin(5) * qJD(6);
t683 = qJD(2) * pkin(2);
t13 = t689 * t235;
t676 = qJD(1) * t13;
t188 = t284 + t704;
t15 = t188 * t702 - t689 * t89;
t675 = qJD(1) * t15;
t459 = -t300 * t721 + t303 * t718 + t419 * t714;
t617 = t182 + t155;
t94 = qJ(6) * t300 + t617;
t482 = t709 * t94 + t711 * t80;
t23 = -t459 + t482;
t674 = qJD(1) * t23;
t28 = -t235 * t89 - t304 * t73;
t673 = qJD(1) * t28;
t553 = -t697 / 0.2e1;
t511 = t553 + t183 / 0.2e1;
t35 = t448 * t511 + t724;
t672 = qJD(1) * t35;
t561 = pkin(4) * t622;
t658 = t284 * t304;
t41 = t113 * t417 + t235 * t561 + t658;
t671 = qJD(1) * t41;
t624 = t448 * t183;
t114 = t624 - t631;
t659 = t284 * t235;
t42 = -t114 * t417 + t304 * t561 - t659;
t670 = qJD(1) * t42;
t47 = t109 * t417 - t659;
t669 = qJD(1) * t47;
t48 = -t110 * t417 + t658;
t668 = qJD(1) * t48;
t396 = pkin(4) * t319;
t283 = t738 - t396;
t187 = t283 - t698;
t11 = t187 * t188 + t73 * t80 + t89 * t94;
t667 = t11 * qJD(1);
t12 = -t235 * t94 + t300 * t89 - t303 * t73 - t304 * t80;
t666 = t12 * qJD(1);
t97 = t114 - t294;
t14 = (-t89 - t96) * t304 + (t73 - t97) * t235;
t665 = t14 * qJD(1);
t485 = t561 + t702;
t18 = t188 * t485 + t73 * t96 + t89 * t97;
t664 = t18 * qJD(1);
t25 = t188 * t419 + t300 * t73 + t303 * t89;
t663 = t25 * qJD(1);
t26 = -t109 * t419 + t235 * t283 - t284 * t300 + t417 * t520;
t662 = t26 * qJD(1);
t27 = -t110 * t419 + t283 * t304 + t284 * t303 - t417 * t617;
t660 = t27 * qJD(1);
t655 = t300 * t304;
t654 = t300 * t417;
t653 = t235 * t303;
t652 = t235 * t419;
t651 = t303 * t417;
t650 = t303 * t424;
t649 = t304 * t419;
t648 = t304 * t424;
t642 = t424 * t235;
t641 = t424 * t417;
t640 = t426 * t300;
t639 = t426 * t235;
t638 = t426 * t304;
t635 = t439 * t426;
t628 = t445 * t424;
t626 = t446 * t235;
t70 = (-t207 + t645) * t419 + t308 * t417;
t621 = t70 * qJD(1);
t71 = (-t208 + t644) * t419 + (t612 - t748) * t417;
t620 = t71 * qJD(1);
t118 = -t638 + t642;
t619 = t563 * t118;
t250 = -t639 / 0.2e1;
t537 = -t648 / 0.2e1;
t147 = t250 + t537;
t618 = t563 * t147;
t479 = t627 / 0.2e1 + t623 / 0.2e1;
t209 = (t709 + t479) * t417;
t615 = t563 * t209;
t214 = (t479 + t710) * t417;
t614 = t563 * t214;
t610 = -t369 / 0.2e1 + t545 / 0.2e1;
t536 = t448 * t713;
t609 = t369 / 0.2e1 + t449 * t536;
t103 = -t640 - t650;
t608 = qJD(1) * t103;
t119 = -t653 - t655;
t607 = qJD(1) * t119;
t132 = t207 * t417 - t322 * t351;
t606 = qJD(1) * t132;
t133 = -t208 * t417 + t351 * t622;
t605 = qJD(1) * t133;
t136 = t639 / 0.2e1 + t537 + t407;
t604 = qJD(1) * t136;
t143 = -t652 + t654;
t603 = qJD(1) * t143;
t144 = t652 + t654;
t602 = qJD(1) * t144;
t145 = t649 + t651;
t601 = qJD(1) * t145;
t146 = t649 - t651;
t600 = qJD(1) * t146;
t193 = t351 * t419 - t417 * t738;
t599 = qJD(1) * t193;
t562 = t416 - t415;
t270 = t562 * t446;
t598 = qJD(1) * t270;
t271 = t739 * t446;
t597 = qJD(1) * t271;
t272 = t562 * t449;
t596 = qJD(1) * t272;
t595 = qJD(1) * t304;
t327 = t739 * t449;
t594 = qJD(1) * t327;
t593 = qJD(1) * t417;
t591 = qJD(1) * t449;
t590 = qJD(1) * t450;
t588 = qJD(2) * t419;
t587 = qJD(2) * t426;
t586 = qJD(2) * t428;
t585 = qJD(2) * t446;
t584 = qJD(2) * t447;
t583 = qJD(2) * t449;
t582 = qJD(2) * t450;
t581 = qJD(3) * t449;
t580 = qJD(4) * t446;
t579 = qJD(4) * t449;
t578 = qJD(5) * t428;
t120 = -t653 + t655;
t576 = t120 * qJD(1);
t138 = t543 * t694;
t575 = t138 * qJD(1);
t197 = t209 * qJD(1);
t534 = t641 / 0.2e1;
t210 = t534 + t609;
t198 = t210 * qJD(1);
t535 = -t641 / 0.2e1;
t211 = t535 + t610;
t200 = t211 * qJD(1);
t232 = t419 * t424;
t573 = t232 * qJD(1);
t572 = t235 * qJD(1);
t463 = t444 * t713 + t679 * t712;
t287 = (-t447 / 0.2e1 + t463) * pkin(2);
t571 = t287 * qJD(1);
t570 = t319 * qJD(1);
t569 = t322 * qJD(1);
t568 = t324 * qJD(1);
t567 = t739 * qJD(1);
t566 = t407 * qJD(1);
t434 = -t447 ^ 2 + t450 ^ 2;
t564 = t434 * qJD(1);
t525 = t718 + t722;
t65 = -t424 * t525 + t64;
t560 = t65 * qJD(4) + t64 * qJD(5);
t559 = pkin(1) * t447 * qJD(1);
t558 = pkin(1) * t590;
t557 = t426 * t685;
t556 = t445 * t686;
t555 = t702 / 0.2e1;
t406 = t700 / 0.2e1;
t554 = -t698 / 0.2e1;
t552 = -t696 / 0.2e1;
t551 = t696 / 0.2e1;
t550 = t695 / 0.2e1;
t549 = t693 / 0.2e1;
t548 = t88 / 0.2e1 + t728;
t547 = t89 / 0.2e1 + t726;
t546 = t97 / 0.2e1 + t728;
t544 = t681 / 0.2e1;
t542 = t446 * t583;
t541 = t417 * t579;
t336 = t417 * t588;
t540 = t446 * t579;
t539 = t447 * t590;
t538 = t419 * t591;
t533 = -t635 / 0.2e1;
t532 = t445 * t717;
t531 = -t628 / 0.2e1;
t524 = -t307 / 0.2e1 + t753;
t522 = pkin(4) * t563;
t515 = t563 * t417;
t514 = t563 * t426;
t513 = t561 / 0.2e1;
t512 = -qJD(4) - t593;
t510 = t549 + t708;
t509 = t695 + t700;
t507 = qJD(2) * t521;
t469 = -t300 * t552 + t303 * t708;
t5 = t235 * t747 + t304 * t525 + t424 * t546 + t426 * t547 + t469;
t504 = t5 * qJD(1);
t452 = t88 * t711 + t733 - t734;
t8 = t703 / 0.2e1 + t452;
t503 = qJD(1) * t8;
t502 = -qJD(5) + t512;
t470 = -t300 * t708 + t303 * t551;
t16 = t424 * t547 - t426 * t546 + t470;
t498 = -t16 * qJD(1) + t65 * qJD(2);
t462 = t709 * t88 + t544 + t690;
t20 = t554 + t462;
t497 = -qJD(1) * t20 - qJD(2) * t64;
t496 = -t417 * t437 - t419 * t436;
t131 = -t269 * t424 - t426 * t740;
t460 = -t396 / 0.2e1 - t423 / 0.2e1 + t554 + t634 / 0.2e1;
t481 = t269 * t717 + t716 * t740;
t21 = t544 + t682 / 0.2e1 + t460 - t481;
t495 = -qJD(1) * t21 + qJD(2) * t131;
t29 = (t304 * t707 + (-t445 / 0.2e1 + t426 * t705) * t419) * pkin(4) + t38;
t293 = -t424 * t428 + t426 * t695;
t494 = t29 * qJD(1) - t293 * qJD(2);
t292 = t424 * t695 + t426 * t428;
t30 = (-t626 / 0.2e1 + (t424 * t705 + t706) * t419) * pkin(4) + t37;
t493 = -t30 * qJD(1) + t292 * qJD(2);
t310 = t529 + t394 / 0.2e1;
t33 = t530 + t181 / 0.2e1 + (t723 + t511) * t445;
t492 = qJD(1) * t33 + qJD(2) * t310;
t491 = t512 * t449;
t297 = t235 ^ 2;
t139 = t297 - t731;
t53 = qJD(1) * t139 + qJD(2) * t118;
t295 = t421 - t730;
t107 = qJD(1) * t118 + qJD(2) * t295;
t122 = (t708 + t729) * t304 + (t532 - t622 / 0.2e1) * pkin(4);
t405 = -t700 / 0.2e1;
t227 = t533 + t405 + (t531 + t707) * pkin(4);
t490 = qJD(1) * t122 + qJD(2) * t227;
t484 = t729 - t510;
t130 = t484 * t235;
t255 = t484 * t424;
t489 = qJD(1) * t130 + qJD(2) * t255;
t153 = t638 + t642;
t195 = t297 + t731;
t488 = qJD(1) * t195 + qJD(2) * t153;
t345 = t421 + t730;
t487 = qJD(1) * t153 + qJD(2) * t345;
t486 = t587 + t595;
t483 = t510 * t426;
t480 = t436 * t417 / 0.2e1 + t437 * t712;
t478 = qJD(1) * t37 - t426 * t586;
t477 = qJD(1) * t38 + t424 * t586;
t476 = t419 * t491;
t455 = t480 * t446 + t753;
t123 = t455 - t524;
t475 = -qJD(1) * t123 - t437 * t583;
t461 = t480 * t449;
t125 = -t308 / 0.2e1 - t461 + (t715 - t351 / 0.2e1) * t446;
t474 = -qJD(1) * t125 - t437 * t585;
t111 = qJD(2) * t147 - t235 * t595;
t128 = -qJD(1) * t147 + t424 * t587;
t318 = (t442 / 0.2e1 - t443 / 0.2e1) * t419;
t473 = -qJD(1) * t318 + t542;
t472 = t439 * t727 + t551 * t94;
t468 = t416 * t446 * t591 + qJD(2) * t318;
t326 = t433 * t416;
t467 = qJD(1) * t326 + t507;
t451 = t188 * t509 / 0.2e1 + t73 * t722 + t89 * t745 + t740 * t726 + t97 * t718 + t485 * t714;
t1 = -t451 + t472;
t82 = t354 * t509;
t465 = -t1 * qJD(1) + t82 * qJD(2) + t65 * qJD(3);
t3 = -t744 - t548 * t269 + (t188 * t710 + t354 * t716 + t727) * pkin(5);
t86 = t354 * t700;
t464 = -qJD(1) * t3 + qJD(2) * t86 + qJD(3) * t64;
t454 = (t445 * t548 + t706 * t89) * pkin(4) + t89 * t708;
t10 = -t725 / 0.2e1 + t454;
t257 = t406 + t483;
t395 = (-t439 + t693) * t696;
t453 = (t269 * t706 + t445 * t747) * pkin(4) + t269 * t708;
t56 = t699 / 0.2e1 + t453;
t457 = -qJD(1) * t10 - qJD(2) * t56 - qJD(3) * t257 - qJD(4) * t395;
t400 = t407 * qJD(2);
t392 = t419 * t583;
t312 = t319 * qJD(4);
t311 = t318 * qJD(4);
t286 = t694 / 0.2e1 + t463 * pkin(2);
t285 = -t570 - t580;
t256 = t405 + t483;
t254 = t701 / 0.2e1 - t510 * t424;
t237 = 0.2e1 * t529 + t629;
t226 = pkin(4) * t531 + t406 + t533 + t550;
t224 = t486 * pkin(5);
t213 = t534 + t610;
t212 = t535 + t609;
t206 = t214 * qJD(3);
t201 = t213 * qJD(3);
t199 = t211 * qJD(3);
t196 = t209 * qJD(3);
t162 = -t514 - t197;
t161 = -t200 + t743;
t160 = -t198 - t743;
t142 = t153 * qJD(6);
t137 = t250 + t648 / 0.2e1 + t407;
t135 = qJD(2) * t209 + t304 * t593;
t134 = qJD(2) * t210 + t235 * t593;
t129 = t704 / 0.2e1 - t510 * t235;
t126 = t446 * t715 + t625 / 0.2e1 + t308 / 0.2e1 - t461;
t124 = t455 + t524;
t121 = pkin(4) * t532 + t304 * t708 + t513 + t555;
t106 = qJD(2) * t214 + t304 * t502;
t105 = qJD(2) * t212 + t235 * t502;
t55 = -t699 / 0.2e1 + t453;
t36 = pkin(4) * t536 + t631 + t724 - t624 / 0.2e1;
t34 = 0.2e1 * t530 - t632 / 0.2e1 + (t553 + t723) * t445;
t32 = t304 * t550 + t419 * t552 + t426 * t513 + t39;
t31 = pkin(4) * t626 / 0.2e1 + t424 * t513 + t419 * t549 + t40;
t24 = t459 + t482;
t22 = t460 + t481 + t690;
t19 = t698 / 0.2e1 + t462;
t17 = t709 * t97 + t711 * t96 + t470 + t690;
t9 = t725 / 0.2e1 + t454;
t7 = -t703 / 0.2e1 + t452;
t6 = t710 * t96 + t711 * t97 + t469 + t733 - t755;
t4 = pkin(5) * t727 + t188 * t406 + t269 * t728 + t354 * t555 + t88 * t718 + t744;
t2 = t451 + t472;
t43 = [0, 0, 0, t447 * t582, t434 * qJD(2), 0, 0, 0, -pkin(1) * t584, -pkin(1) * t582, -qJD(3) * t739, qJD(2) * t138 + qJD(3) * t193, -t336 * t443 - t416 * t540, -qJD(4) * t326 + t417 * t507, -t417 * t419 * t580 + qJD(2) * t272, -qJD(2) * t270 - t419 * t541, t336, qJD(2) * t70 - qJD(3) * t271 + qJD(4) * t133, qJD(2) * t71 - qJD(3) * t327 + qJD(4) * t132 (qJD(2) * t303 - t235 * t563) * t304, qJD(2) * t120 + t139 * t563, qJD(2) * t145 - t235 * t515, qJD(2) * t143 - t304 * t515, t336, qJD(2) * t26 + qJD(3) * t144 + qJD(4) * t41 + qJD(5) * t48, qJD(2) * t27 + qJD(3) * t146 + qJD(4) * t42 + qJD(5) * t47, qJD(2) * t12 + qJD(3) * t119 + qJD(4) * t14 + qJD(5) * t13 + qJD(6) * t195, qJD(2) * t11 + qJD(3) * t25 + qJD(4) * t18 + qJD(5) * t15 + qJD(6) * t28; 0, 0, 0, t539, t564, t582, -t584, 0, -pkin(7) * t582 - t559, pkin(7) * t584 - t558 (t417 * t679 - t419 * t444) * t683, t575 + (-t351 * t444 - t679 * t738) * t683 + t286 * qJD(3), -t311 + (-t443 * t592 - t542) * t417, t417 * t466 - 0.2e1 * t419 * t540, t419 * t585 + t596, t392 - t598, t741, t621 + (t446 * t496 - t644) * qJD(2) + t126 * qJD(4), t620 + (t449 * t496 + t645) * qJD(2) + t124 * qJD(4), t303 * t486 + t618, t576 + (t640 - t650) * qJD(2) + t619, t212 * t563 + t419 * t587 + t601, -t424 * t588 + t603 + t614, t737, t662 + (t283 * t424 - t300 * t428 - t419 * t519) * qJD(2) + t31 * qJD(4) + t40 * qJD(5), t660 + (t283 * t426 + t303 * t428 - t316 * t419) * qJD(2) + t32 * qJD(4) + t39 * qJD(5), t666 + (t269 * t300 - t303 * t740 - t424 * t94 - t426 * t80) * qJD(2) + t6 * qJD(4) + t7 * qJD(5) + t142, t667 + (t187 * t354 + t269 * t94 + t740 * t80) * qJD(2) + t24 * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t22 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t567, qJD(2) * t286 + t599, 0, 0, 0, 0, 0, -t597, -t594, 0, 0, 0, 0, 0, t602 + t614, t213 * t563 + t600, t607, t663 + t24 * qJD(2) + (-t300 * t424 + t303 * t426) * qJD(3) + t17 * qJD(4) + t19 * qJD(5) + t137 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, -t467, t512 * t322, t476, t400, qJD(2) * t126 - qJD(4) * t208 + t605, qJD(2) * t124 + qJD(4) * t207 + t606, t111, t53, t105, t106, t400, qJD(2) * t31 + qJD(4) * t113 + qJD(5) * t34 + t206 + t671, qJD(2) * t32 - qJD(4) * t114 + qJD(5) * t36 + t201 + t670, t665 + t6 * qJD(2) + (t235 * t439 - t304 * t696) * qJD(4) + t129 * qJD(5), t664 + t2 * qJD(2) + t17 * qJD(3) + (t439 * t96 + t696 * t97) * qJD(4) + t9 * qJD(5) + t121 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, t53, t105, t106, t400, qJD(2) * t40 + qJD(4) * t34 - qJD(5) * t110 + t206 + t668, qJD(2) * t39 + qJD(4) * t36 + qJD(5) * t109 + t201 + t669, qJD(2) * t7 + qJD(4) * t129 + t235 * t685 + t676, qJD(2) * t4 + qJD(3) * t19 + qJD(4) * t9 - t685 * t89 + t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, qJD(2) * t22 + qJD(3) * t137 + qJD(4) * t121 + t673; 0, 0, 0, -t539, -t564, 0, 0, 0, t559, t558, 0, qJD(3) * t287 - t575, t337 * t443 - t311, t476 * t746, qJD(4) * t324 - t596, -t312 + t598, -t741, qJD(4) * t125 - t419 * t581 - t621, qJD(3) * t322 + qJD(4) * t123 - t620, -t303 * t595 + t618, -t576 + t619, -t210 * t563 - t601, -t603 - t615, -t737, qJD(3) * t232 - qJD(4) * t30 - qJD(5) * t37 - t662, qJD(3) * t235 - qJD(4) * t29 - qJD(5) * t38 - t660, qJD(3) * t103 - qJD(4) * t5 + qJD(5) * t8 + t142 - t666, -qJD(3) * t23 - qJD(4) * t1 - qJD(5) * t3 - qJD(6) * t21 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t540, t433 * qJD(4), 0, 0, 0, t437 * t580, t437 * t579, -t424 * t514, t563 * t295, 0, 0, 0, qJD(4) * t292 + t426 * t578, qJD(4) * t293 - t424 * t578, qJD(6) * t345, qJD(4) * t82 + qJD(5) * t86 + qJD(6) * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t571, 0, 0, 0, 0, 0, -t538, t569, 0, 0, 0, 0, 0, t573, t572, t608, t560 - t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t473, -t466, t568 + t579, t285, -t566, -t436 * t579 - t474, t436 * t580 - t475, -t128, t107, t160, t162, -t566, -qJD(4) * t316 + t237 * qJD(5) + t493, -t494 + t732 (t439 * t424 - t426 * t696) * qJD(4) + t254 * qJD(5) - t504 (-t269 * t439 + t696 * t740) * qJD(4) + t55 * qJD(5) + t226 * qJD(6) + t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, t107, t160, t162, -t566, qJD(4) * t237 - qJD(5) * t316 - t478, -t477 + t732, qJD(4) * t254 + t424 * t685 + t503, qJD(4) * t55 - t269 * t685 + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, qJD(4) * t226 + t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t567, -qJD(2) * t287 - t599, 0, 0, 0, 0, 0, -t312 + t392 + t597, -qJD(2) * t322 - t541 + t594, 0, 0, 0, 0, 0, -qJD(2) * t232 - t602 - t615, -qJD(2) * t235 - t211 * t563 - t600, -qJD(2) * t103 - t607, qJD(2) * t23 - qJD(4) * t16 + qJD(5) * t20 - qJD(6) * t136 - t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t571, 0, 0, 0, 0, 0, t538, -t569, 0, 0, 0, 0, 0, -t573, -t572, -t608, t560 + t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t491, 0, 0, 0, 0, 0, t162, t161, 0 (-pkin(4) * t628 - t635) * qJD(4) + t256 * qJD(5) + t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t161, 0, qJD(4) * t256 - t497 - t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468, t467, -qJD(2) * t324 + t337 * t446, qJD(2) * t319 + t417 * t538, t400, -qJD(2) * t125 + qJD(3) * t319 - t605, -qJD(2) * t123 + t417 * t581 - t606, -t111, -t53, t134, t135, t400, qJD(2) * t30 + qJD(5) * t33 + t196 - t671, qJD(2) * t29 + qJD(5) * t35 + t199 - t670, qJD(2) * t5 + qJD(5) * t130 - t665, qJD(2) * t1 + qJD(3) * t16 + qJD(5) * t10 + qJD(6) * t122 - t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t473, t466, -t568, t570, t566, t474, t475, t128, -t107, t198, t197, t566, qJD(5) * t310 - t493, t494, qJD(5) * t255 + t504, qJD(5) * t56 + qJD(6) * t227 - t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, t417 * t591, 0, 0, 0, 0, 0, t197, t200, 0, qJD(5) * t257 - t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t556, -t448 * t686, 0, t395 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t445 * t522 + t492, -t448 * t522 + t672, t489, -pkin(5) * t556 - t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, -t53, t134, t135, t400, qJD(2) * t37 - qJD(4) * t33 + t196 - t668, qJD(2) * t38 - qJD(4) * t35 + t199 - t669, -qJD(2) * t8 - qJD(4) * t130 - t676, qJD(2) * t3 - qJD(3) * t20 - qJD(4) * t10 - t304 * t684 - t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, -t107, t198, t197, t566, -qJD(4) * t310 + t478, t477, -qJD(4) * t255 - t503, -qJD(4) * t56 - t426 * t684 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, t200, 0, -qJD(4) * t257 + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t445 * t687 - t492, t448 * t687 - t672, -t489, t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t488, qJD(2) * t21 + qJD(3) * t136 - qJD(4) * t122 + t304 * t685 - t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, -qJD(4) * t227 - t495 + t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
