% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP3_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:50:35
% EndTime: 2019-03-09 11:50:47
% DurationCPUTime: 4.32s
% Computational Cost: add. (7002->318), mult. (15508->547), div. (0->0), fcn. (15176->8), ass. (0->161)
t122 = sin(qJ(2));
t124 = cos(qJ(2));
t207 = -qJ(3) - pkin(7);
t170 = qJD(2) * t207;
t144 = -t122 * qJD(3) + t124 * t170;
t145 = qJD(3) * t124 + t122 * t170;
t197 = sin(pkin(10));
t198 = cos(pkin(10));
t129 = t197 * t144 + t198 * t145;
t103 = t197 * t122 - t198 * t124;
t104 = t198 * t122 + t197 * t124;
t117 = -t124 * pkin(2) - pkin(1);
t150 = t103 * pkin(3) - t104 * pkin(8) + t117;
t219 = -qJD(4) * t150 - t129;
t133 = t103 * t207;
t153 = t103 * qJD(2);
t192 = qJD(2) * t122;
t183 = pkin(2) * t192;
t99 = t104 * qJD(2);
t218 = -t99 * pkin(3) - t153 * pkin(8) + qJD(4) * t133 - t183;
t121 = sin(qJ(4));
t147 = t121 * t153;
t123 = cos(qJ(4));
t189 = qJD(4) * t123;
t217 = t104 * t189 - t147;
t216 = -0.4e1 * t104;
t120 = sin(qJ(5));
t210 = cos(qJ(5));
t139 = t153 * t210;
t190 = qJD(4) * t121;
t178 = t104 * t190;
t194 = t120 * t121;
t180 = t104 * t194;
t171 = t210 * qJD(5);
t214 = t210 * qJD(4) + t171;
t29 = -t120 * t178 - qJD(5) * t180 - t121 * t139 + (t214 * t104 - t120 * t153) * t123;
t107 = t120 * t123 + t210 * t121;
t63 = t107 * t104;
t215 = t29 * qJ(6) + t63 * qJD(6);
t146 = t123 * t153;
t135 = -t146 - t178;
t118 = t121 ^ 2;
t119 = t123 ^ 2;
t165 = qJD(4) * (t118 - t119);
t213 = qJD(4) + qJD(5);
t23 = t218 * t121 + t219 * t123;
t24 = t219 * t121 - t218 * t123;
t47 = -t121 * t133 + t123 * t150;
t48 = t121 * t150 + t123 * t133;
t212 = (t121 * t47 - t123 * t48) * qJD(4) + t23 * t121 - t24 * t123;
t76 = t213 * t107;
t211 = t76 * pkin(5);
t209 = t120 * pkin(4);
t60 = -t198 * t144 + t197 * t145;
t77 = t104 * t207;
t208 = t77 * t60;
t163 = pkin(4) * t171;
t206 = -t63 * t163 - t29 * t209;
t195 = t104 * t123;
t128 = t103 * pkin(4) - pkin(9) * t195 + t47;
t33 = t120 * t128;
t196 = t104 * t121;
t38 = -pkin(9) * t196 + t48;
t19 = t210 * t38 + t33;
t75 = -t214 * t123 + t213 * t194;
t205 = -t107 * t29 + t75 * t63;
t179 = t210 * t123;
t106 = -t179 + t194;
t204 = -t106 * t163 - t76 * t209;
t203 = t107 * t163 - t75 * t209;
t161 = t197 * pkin(2) + pkin(8);
t157 = pkin(9) + t161;
t101 = t157 * t123;
t151 = t120 * t157;
t94 = t121 * t151;
t69 = t210 * t101 - t94;
t202 = t106 * t76;
t201 = t107 * t75;
t200 = t60 * t121;
t199 = t60 * t123;
t191 = qJD(2) * t124;
t188 = qJD(5) * t120;
t187 = -0.2e1 * pkin(1) * qJD(2);
t73 = 0.2e1 * t103 * t99;
t114 = -t198 * pkin(2) - pkin(3);
t186 = 0.2e1 * qJD(4) * t114;
t185 = t210 * pkin(4);
t184 = pkin(4) * t190;
t182 = pkin(4) * t188;
t64 = t104 * t179 - t180;
t181 = t64 * t188;
t176 = t106 * t188;
t175 = t107 * t188;
t174 = t121 * t189;
t173 = t122 * t191;
t34 = t210 * t128;
t18 = -t120 * t38 + t34;
t143 = t157 * t210;
t95 = t121 * t143;
t68 = -t101 * t120 - t95;
t164 = t103 * t182;
t102 = t104 ^ 2;
t162 = t102 * t174;
t28 = t104 * t76 - t120 * t147 + t123 * t139;
t160 = -t106 * t28 + t64 * t76;
t44 = t103 * t75 - t107 * t99;
t156 = t121 * t161;
t155 = t123 * t161;
t154 = qJD(4) * t161;
t152 = t103 * t189 + t121 * t99;
t125 = t99 * pkin(4) - t135 * pkin(9) + t24;
t127 = -pkin(9) * t217 - t23;
t3 = -qJD(5) * t34 - t120 * t125 - t210 * t127 + t38 * t188;
t138 = qJD(4) * t143;
t142 = qJD(4) * t151;
t41 = qJD(5) * t95 + t101 * t188 + t121 * t138 + t123 * t142;
t108 = -t123 * pkin(4) + t114;
t149 = t118 * t153;
t148 = t119 * t153;
t141 = -t103 * t163 - t99 * t209 + t3;
t55 = pkin(4) * t196 - t77;
t140 = t121 * t146;
t137 = t161 * t103 - t114 * t104;
t40 = t217 * pkin(4) + t60;
t130 = -t114 * t153 - t161 * t99;
t42 = qJD(5) * t94 - t101 * t171 + t121 * t142 - t123 * t138;
t4 = -qJD(5) * t33 - t120 * t127 + t210 * t125 - t38 * t171;
t126 = t28 * qJ(6) - t64 * qJD(6) + t4;
t97 = t99 * pkin(5);
t1 = t97 + t126;
t116 = t185 + pkin(5);
t113 = -0.2e1 * t163;
t112 = -0.2e1 * t182;
t78 = t106 * pkin(5) + t108;
t67 = t184 + t211;
t66 = -t103 * t190 + t123 * t99;
t57 = -0.2e1 * t201;
t56 = 0.2e1 * t202;
t51 = -qJ(6) * t106 + t69;
t50 = -qJ(6) * t107 + t68;
t49 = t104 * t165 + t140;
t45 = -t103 * t76 - t106 * t99;
t39 = t63 * pkin(5) + t55;
t37 = -0.2e1 * t201 + 0.2e1 * t202;
t36 = 0.2e1 * t106 * t75 - 0.2e1 * t107 * t76;
t31 = t75 * qJ(6) - t107 * qJD(6) + t42;
t30 = t76 * qJ(6) + t106 * qJD(6) + t41;
t22 = -0.2e1 * t64 * t28;
t21 = 0.2e1 * t63 * t29;
t17 = -0.2e1 * t103 * t29 - 0.2e1 * t63 * t99;
t16 = -0.2e1 * t103 * t28 + 0.2e1 * t64 * t99;
t14 = t29 * pkin(5) + t40;
t13 = t106 * t29 + t63 * t76;
t12 = -t107 * t28 - t64 * t75;
t9 = -qJ(6) * t63 + t19;
t8 = pkin(5) * t103 - qJ(6) * t64 + t18;
t7 = 0.2e1 * t28 * t63 - 0.2e1 * t29 * t64;
t6 = t160 + t205;
t5 = -t160 + t205;
t2 = t3 + t215;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t173, 0.2e1 * (-t122 ^ 2 + t124 ^ 2) * qJD(2), 0, -0.2e1 * t173, 0, 0, t122 * t187, t124 * t187, 0, 0, -0.2e1 * t104 * t153, 0.2e1 * t153 * t103 - 0.2e1 * t104 * t99, 0, t73, 0, 0, 0.2e1 * t103 * t183 + 0.2e1 * t117 * t99, 0.2e1 * t104 * t183 - 0.2e1 * t117 * t153, -0.2e1 * t129 * t103 + 0.2e1 * t60 * t104 - 0.2e1 * t133 * t99 + 0.2e1 * t77 * t153, 0.2e1 * t117 * t183 + 0.2e1 * t129 * t133 - 0.2e1 * t208, -0.2e1 * t104 * t148 - 0.2e1 * t162, 0.2e1 * t102 * t165 - t140 * t216, 0.2e1 * t103 * t135 + 0.2e1 * t99 * t195, -0.2e1 * t104 * t149 + 0.2e1 * t162, -0.2e1 * t103 * t217 - 0.2e1 * t99 * t196, t73, 0.2e1 * t24 * t103 + 0.2e1 * t47 * t99 + 0.2e1 * t77 * t147 + 0.2e1 * (-t77 * t189 + t200) * t104, 0.2e1 * t23 * t103 - 0.2e1 * t48 * t99 + 0.2e1 * t77 * t146 + 0.2e1 * (t77 * t190 + t199) * t104, 0.2e1 * t212 * t104 + 0.2e1 * t47 * t146 + 0.2e1 * t48 * t147, -0.2e1 * t23 * t48 + 0.2e1 * t24 * t47 - 0.2e1 * t208, t22, t7, t16, t21, t17, t73, 0.2e1 * t103 * t4 + 0.2e1 * t18 * t99 + 0.2e1 * t29 * t55 + 0.2e1 * t40 * t63, 0.2e1 * t103 * t3 - 0.2e1 * t19 * t99 - 0.2e1 * t28 * t55 + 0.2e1 * t40 * t64, 0.2e1 * t18 * t28 - 0.2e1 * t19 * t29 + 0.2e1 * t3 * t63 - 0.2e1 * t4 * t64, 0.2e1 * t18 * t4 - 0.2e1 * t19 * t3 + 0.2e1 * t40 * t55, t22, t7, t16, t21, t17, t73, 0.2e1 * t1 * t103 + 0.2e1 * t14 * t63 + 0.2e1 * t29 * t39 + 0.2e1 * t8 * t99, 0.2e1 * t103 * t2 + 0.2e1 * t14 * t64 - 0.2e1 * t28 * t39 - 0.2e1 * t9 * t99, -0.2e1 * t1 * t64 + 0.2e1 * t2 * t63 + 0.2e1 * t28 * t8 - 0.2e1 * t29 * t9, 0.2e1 * t1 * t8 + 0.2e1 * t14 * t39 - 0.2e1 * t2 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, 0, -t192, 0, -pkin(7) * t191, pkin(7) * t192, 0, 0, 0, 0, -t153, 0, -t99, 0, -t60, -t129 (t198 * t153 - t197 * t99) * pkin(2) (t129 * t197 - t60 * t198) * pkin(2), -t49, t174 * t216 - t148 + t149, t152, t49, t66, 0, -t199 + t130 * t121 + (-t77 * t121 - t123 * t137) * qJD(4), t200 + t130 * t123 + (t121 * t137 - t77 * t123) * qJD(4), -t121 * t24 - t123 * t23 + (-t121 * t48 - t123 * t47) * qJD(4), -t23 * t155 - t24 * t156 + t60 * t114 + (-t47 * t155 - t48 * t156) * qJD(4), t12, t5, -t44, t13, t45, 0, t103 * t42 + t106 * t40 + t108 * t29 + t63 * t184 + t55 * t76 + t68 * t99, t103 * t41 + t107 * t40 - t108 * t28 + t64 * t184 - t55 * t75 - t69 * t99, t106 * t3 - t107 * t4 + t18 * t75 - t19 * t76 + t28 * t68 - t29 * t69 + t41 * t63 - t42 * t64, t108 * t40 + t18 * t42 + t55 * t184 - t19 * t41 - t3 * t69 + t4 * t68, t12, t5, -t44, t13, t45, 0, t103 * t31 + t106 * t14 + t29 * t78 + t39 * t76 + t50 * t99 + t63 * t67, t103 * t30 + t107 * t14 - t28 * t78 - t39 * t75 - t51 * t99 + t64 * t67, -t1 * t107 + t106 * t2 + t28 * t50 - t29 * t51 + t30 * t63 - t31 * t64 + t75 * t8 - t76 * t9, t1 * t50 + t14 * t78 - t2 * t51 - t30 * t9 + t31 * t8 + t39 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t174, -0.2e1 * t165, 0, -0.2e1 * t174, 0, 0, t121 * t186, t123 * t186, 0, 0, t57, t36, 0, t56, 0, 0, 0.2e1 * t106 * t184 + 0.2e1 * t108 * t76, 0.2e1 * t107 * t184 - 0.2e1 * t108 * t75, 0.2e1 * t106 * t41 - 0.2e1 * t107 * t42 + 0.2e1 * t68 * t75 - 0.2e1 * t69 * t76, 0.2e1 * t108 * t184 - 0.2e1 * t41 * t69 + 0.2e1 * t42 * t68, t57, t36, 0, t56, 0, 0, 0.2e1 * t106 * t67 + 0.2e1 * t76 * t78, 0.2e1 * t107 * t67 - 0.2e1 * t75 * t78, 0.2e1 * t106 * t30 - 0.2e1 * t107 * t31 + 0.2e1 * t50 * t75 - 0.2e1 * t51 * t76, -0.2e1 * t30 * t51 + 0.2e1 * t31 * t50 + 0.2e1 * t67 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, -t153, 0, t183, 0, 0, 0, 0, 0, 0, t66, -t152, t149 + t148, -t212, 0, 0, 0, 0, 0, 0, t45, t44, t6, -t106 * t4 - t107 * t3 - t18 * t76 - t19 * t75, 0, 0, 0, 0, 0, 0, t45, t44, t6, -t1 * t106 - t107 * t2 - t75 * t9 - t76 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106 * t42 - t107 * t41 - t68 * t76 - t69 * t75, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106 * t31 - t107 * t30 - t50 * t76 - t51 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, 0, -t217, t99, t24, t23, 0, 0, 0, 0, -t28, 0, -t29, t99, t99 * t185 - t164 + t4, t141 (t210 * t28 + t181) * pkin(4) + t206 (t210 * t4 - t120 * t3 + (-t120 * t18 + t210 * t19) * qJD(5)) * pkin(4), 0, 0, -t28, 0, -t29, t99, t116 * t99 + t1 - t164, t141 + t215, pkin(4) * t181 + t116 * t28 + t206, t1 * t116 + (-t120 * t2 + (-t120 * t8 + t210 * t9) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, 0, -t190, 0, -t123 * t154, t121 * t154, 0, 0, 0, 0, -t75, 0, -t76, 0, t42, t41 (t210 * t75 + t175) * pkin(4) + t204 (t210 * t42 - t120 * t41 + (-t120 * t68 + t210 * t69) * qJD(5)) * pkin(4), 0, 0, -t75, 0, -t76, 0, t31, t30, pkin(4) * t175 + t116 * t75 + t204, t31 * t116 + (-t120 * t30 + (-t120 * t50 + t210 * t51) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t190, -t189, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t75, 0 (-t210 * t76 + t176) * pkin(4) + t203, 0, 0, 0, 0, 0, 0, -t76, t75, 0, pkin(4) * t176 - t116 * t76 + t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t113, 0, 0, 0, 0, 0, 0, 0, 0, t112, t113, 0, 0.2e1 * (t185 - t116) * t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, 0, -t29, t99, t4, t3, 0, 0, 0, 0, -t28, 0, -t29, t99, 0.2e1 * t97 + t126, t2, t28 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, 0, -t76, 0, t42, t41, 0, 0, 0, 0, -t75, 0, -t76, 0, t31, t30, t75 * pkin(5), t31 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t75, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t75, 0, -t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t163, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t163, 0, -pkin(5) * t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, -t28, 0, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t75, 0, t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
