% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:50:35
% EndTime: 2019-03-09 11:50:51
% DurationCPUTime: 6.34s
% Computational Cost: add. (14282->526), mult. (35907->670), div. (0->0), fcn. (26903->8), ass. (0->256)
t252 = sin(qJ(4));
t250 = sin(pkin(10));
t241 = pkin(2) * t250 + pkin(8);
t355 = pkin(9) + t241;
t285 = qJD(4) * t355;
t255 = cos(qJ(2));
t341 = cos(pkin(10));
t283 = t341 * t255;
t236 = qJD(1) * t283;
t253 = sin(qJ(2));
t307 = qJD(1) * t253;
t212 = t250 * t307 - t236;
t325 = t212 * t252;
t300 = pkin(2) * t307;
t225 = t250 * t255 + t253 * t341;
t309 = qJD(1) * t225;
t142 = pkin(3) * t309 + pkin(8) * t212 + t300;
t354 = -qJ(3) - pkin(7);
t234 = t354 * t255;
t230 = qJD(1) * t234;
t218 = t250 * t230;
t233 = t354 * t253;
t229 = qJD(1) * t233;
t161 = t229 * t341 + t218;
t254 = cos(qJ(4));
t98 = t252 * t142 + t254 * t161;
t388 = pkin(9) * t325 + t252 * t285 + t98;
t97 = t254 * t142 - t161 * t252;
t387 = -pkin(4) * t309 - t97 + (-pkin(9) * t212 - t285) * t254;
t172 = qJD(2) * t254 - t252 * t309;
t173 = qJD(2) * t252 + t254 * t309;
t251 = sin(qJ(5));
t359 = cos(qJ(5));
t109 = -t359 * t172 + t173 * t251;
t107 = t109 ^ 2;
t265 = t251 * t172 + t359 * t173;
t361 = t265 ^ 2;
t386 = -t107 + t361;
t306 = qJD(4) * t252;
t385 = t306 + t325;
t304 = qJD(5) * t251;
t384 = pkin(4) * t304;
t383 = t359 * pkin(4);
t205 = qJD(4) + t212;
t198 = qJD(5) + t205;
t339 = t109 * t198;
t302 = qJD(1) * qJD(2);
t288 = t253 * t302;
t235 = t250 * t288;
t260 = qJD(2) * t236 - t235;
t376 = qJD(2) * qJD(4) + t260;
t127 = -t376 * t254 + t309 * t306;
t289 = t359 * qJD(5);
t305 = qJD(4) * t254;
t295 = t376 * t252 + t309 * t305;
t61 = t359 * t127 - t172 * t289 + t173 * t304 + t251 * t295;
t382 = -t61 + t339;
t381 = t109 * qJ(6);
t380 = t109 * t265;
t326 = t205 * t252;
t379 = t173 * t326;
t294 = t359 * t252;
t228 = t251 * t254 + t294;
t365 = qJD(4) + qJD(5);
t165 = t365 * t228;
t378 = t228 * t212 + t165;
t293 = t359 * t254;
t318 = t251 * t252;
t227 = -t293 + t318;
t366 = t359 * qJD(4) + t289;
t311 = t227 * t212 - t254 * t366 + t318 * t365;
t335 = t265 * t198;
t62 = qJD(5) * t265 - t251 * t127 + t359 * t295;
t377 = -t62 + t335;
t262 = -t250 * t253 + t283;
t217 = t262 * qJD(2);
t264 = t217 * t252 + t225 * t305;
t350 = qJD(2) * pkin(2);
t221 = t229 + t350;
t157 = t221 * t341 + t218;
t149 = -qJD(2) * pkin(3) - t157;
t105 = -t172 * pkin(4) + t149;
t214 = t225 * qJD(2);
t199 = qJD(1) * t214;
t356 = t199 * pkin(4);
t286 = qJD(2) * t354;
t209 = t255 * qJD(3) + t253 * t286;
t183 = t209 * qJD(1);
t210 = -t253 * qJD(3) + t255 * t286;
t184 = t210 * qJD(1);
t126 = t183 * t341 + t250 * t184;
t239 = pkin(2) * t288;
t130 = t199 * pkin(3) - pkin(8) * t260 + t239;
t247 = -pkin(2) * t255 - pkin(1);
t308 = qJD(1) * t247;
t231 = qJD(3) + t308;
t131 = t212 * pkin(3) - pkin(8) * t309 + t231;
t284 = t341 * t230;
t158 = t250 * t221 - t284;
t150 = qJD(2) * pkin(8) + t158;
t91 = t131 * t252 + t150 * t254;
t55 = -qJD(4) * t91 - t252 * t126 + t254 * t130;
t27 = t127 * pkin(9) + t356 + t55;
t54 = t254 * t126 + t252 * t130 + t131 * t305 - t150 * t306;
t33 = -t295 * pkin(9) + t54;
t90 = t254 * t131 - t150 * t252;
t80 = -pkin(9) * t173 + t90;
t67 = pkin(4) * t205 + t80;
t81 = pkin(9) * t172 + t91;
t282 = -t251 * t27 - t67 * t289 + t81 * t304 - t359 * t33;
t375 = t105 * t109 + t282;
t374 = -0.2e1 * t302;
t281 = t109 * pkin(5) + qJD(6);
t72 = t105 + t281;
t373 = t72 * t265;
t222 = t355 * t252;
t223 = t355 * t254;
t345 = -t222 * t289 - t223 * t304 + t387 * t251 - t388 * t359;
t154 = -t251 * t222 + t359 * t223;
t344 = -qJD(5) * t154 + t388 * t251 + t387 * t359;
t372 = -t205 * t90 + t54;
t371 = t91 * t205 + t55;
t370 = qJ(6) * t265;
t160 = t229 * t250 - t284;
t271 = t385 * pkin(4) - t160;
t156 = -pkin(3) * t262 - pkin(8) * t225 + t247;
t171 = t250 * t233 - t234 * t341;
t163 = t254 * t171;
t103 = t252 * t156 + t163;
t274 = pkin(4) * t289;
t368 = -t198 * t274 - t251 * t356;
t192 = t199 * pkin(5);
t367 = -t265 * qJD(6) + t192;
t287 = -t251 * t33 + t359 * t27;
t78 = t359 * t81;
t30 = t251 * t67 + t78;
t6 = -qJD(5) * t30 + t287;
t364 = -t105 * t265 + t6;
t363 = -t311 * t198 + t228 * t199;
t362 = -t227 * t61 + t265 * t378;
t360 = t309 ^ 2;
t358 = pkin(2) * t253;
t357 = pkin(4) * t173;
t76 = t251 * t81;
t29 = t359 * t67 - t76;
t19 = t29 - t370;
t18 = pkin(5) * t198 + t19;
t353 = t18 - t19;
t352 = pkin(5) * t309 - t311 * qJ(6) + t228 * qJD(6) - t344;
t351 = t378 * qJ(6) + qJD(6) * t227 - t345;
t35 = t359 * t80 - t76;
t102 = t254 * t156 - t171 * t252;
t320 = t225 * t254;
t86 = -pkin(4) * t262 - pkin(9) * t320 + t102;
t321 = t225 * t252;
t94 = -pkin(9) * t321 + t103;
t57 = t251 * t86 + t359 * t94;
t347 = t61 * qJ(6);
t343 = -t251 * pkin(4) * t62 - t109 * t274;
t342 = t378 * pkin(5) + t271;
t338 = t109 * t309;
t334 = t265 * t309;
t125 = t250 * t183 - t341 * t184;
t170 = -t341 * t233 - t234 * t250;
t333 = t125 * t170;
t332 = t127 * t252;
t331 = t172 * t212;
t330 = t172 * t309;
t329 = t173 * t172;
t328 = t173 * t309;
t327 = t198 * t309;
t159 = t199 * t262;
t324 = t309 * t212;
t322 = t217 * t254;
t317 = t252 * t199;
t179 = t254 * t199;
t257 = qJD(1) ^ 2;
t316 = t255 * t257;
t256 = qJD(2) ^ 2;
t315 = t256 * t253;
t314 = t256 * t255;
t116 = t252 * t295;
t313 = t172 * t305 - t116;
t310 = t253 ^ 2 - t255 ^ 2;
t299 = t253 * t350;
t297 = t225 * t318;
t296 = t253 * t316;
t292 = t225 * t306;
t34 = -t251 * t80 - t78;
t56 = -t251 * t94 + t359 * t86;
t280 = pkin(1) * t374;
t141 = t209 * t341 + t250 * t210;
t143 = pkin(3) * t214 - pkin(8) * t217 + t299;
t278 = -t252 * t141 + t254 * t143;
t140 = t209 * t250 - t341 * t210;
t153 = -t359 * t222 - t223 * t251;
t276 = t205 * t254;
t275 = 0.2e1 * t309;
t273 = t255 * t288;
t272 = t311 * t109 - t228 * t62;
t242 = -pkin(2) * t341 - pkin(3);
t270 = t295 * t254;
t269 = -t378 * t198 - t227 * t199;
t139 = pkin(4) * t321 + t170;
t268 = -t252 * t91 - t254 * t90;
t99 = t264 * pkin(4) + t140;
t267 = -t385 * t205 + t179;
t266 = t62 * qJ(6) + t282;
t50 = -pkin(9) * t322 + t214 * pkin(4) + (-t163 + (pkin(9) * t225 - t156) * t252) * qJD(4) + t278;
t63 = t254 * t141 + t252 * t143 + t156 * t305 - t171 * t306;
t53 = -pkin(9) * t264 + t63;
t10 = t251 * t50 + t86 * t289 - t94 * t304 + t359 * t53;
t263 = -t292 + t322;
t232 = -t254 * pkin(4) + t242;
t261 = t205 * t149 - t241 * t199;
t87 = t295 * pkin(4) + t125;
t2 = -qJD(6) * t109 - t266;
t28 = t62 * pkin(5) + t87;
t11 = -t57 * qJD(5) - t251 * t53 + t359 * t50;
t258 = t6 + t347;
t246 = pkin(5) + t383;
t211 = t212 ^ 2;
t175 = t227 * pkin(5) + t232;
t146 = t225 * t293 - t297;
t145 = t228 * t225;
t124 = -qJ(6) * t227 + t154;
t123 = -qJ(6) * t228 + t153;
t104 = t198 * t214 - t159;
t96 = pkin(5) * t145 + t139;
t95 = pkin(5) * t265 + t357;
t69 = t217 * t294 - t251 * t292 - qJD(5) * t297 + (t217 * t251 + t225 * t366) * t254;
t68 = t165 * t225 + t217 * t227;
t64 = -qJD(4) * t103 + t278;
t51 = pkin(5) * t69 + t99;
t49 = t269 + t338;
t48 = t269 - t338;
t47 = -t334 - t363;
t46 = -t334 + t363;
t40 = -qJ(6) * t145 + t57;
t32 = -pkin(5) * t262 - qJ(6) * t146 + t56;
t22 = t35 - t370;
t21 = t34 + t381;
t20 = t30 - t381;
t17 = t109 * t378 + t62 * t227;
t16 = -t61 * t228 - t265 * t311;
t15 = t109 * t69 + t145 * t62;
t14 = -t146 * t61 - t265 * t68;
t13 = -t109 * t214 - t145 * t199 - t198 * t69 + t262 * t62;
t12 = t146 * t199 - t198 * t68 + t214 * t265 + t262 * t61;
t9 = t272 + t362;
t8 = t272 - t362;
t7 = t109 * t68 + t145 * t61 - t146 * t62 - t265 * t69;
t4 = -qJ(6) * t69 - qJD(6) * t145 + t10;
t3 = t214 * pkin(5) + t68 * qJ(6) - t146 * qJD(6) + t11;
t1 = t258 + t367;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t273, t310 * t374, t314, -0.2e1 * t273, -t315, 0, -pkin(7) * t314 + t253 * t280, pkin(7) * t315 + t255 * t280, 0, 0, t217 * t309 + t225 * t260, -t225 * t199 - t217 * t212 - t214 * t309 + t260 * t262, t217 * qJD(2), t212 * t214 - t159, -t214 * qJD(2), 0, t247 * t199 + t231 * t214 + (-t140 + (-qJD(1) * t262 + t212) * t358) * qJD(2), t231 * t217 - t247 * t235 + (t236 * t247 + t275 * t358 - t141) * qJD(2), t125 * t225 + t126 * t262 + t140 * t309 - t141 * t212 - t157 * t217 - t158 * t214 + t170 * t260 - t171 * t199, t333 + t126 * t171 - t157 * t140 + t158 * t141 + (t231 + t308) * t299, -t127 * t320 + t173 * t263 (t172 * t254 - t173 * t252) * t217 + (-t270 + t332 + (-t172 * t252 - t173 * t254) * qJD(4)) * t225, t127 * t262 + t173 * t214 + t179 * t225 + t205 * t263, t116 * t225 - t172 * t264, t172 * t214 - t205 * t264 - t225 * t317 + t262 * t295, t205 * t214 - t159, t102 * t199 + t125 * t321 - t140 * t172 + t149 * t264 + t170 * t295 + t64 * t205 + t90 * t214 - t262 * t55, -t103 * t199 + t125 * t320 - t170 * t127 + t140 * t173 + t149 * t263 - t63 * t205 - t91 * t214 + t262 * t54, t63 * t172 - t103 * t295 - t64 * t173 + t102 * t127 + t268 * t217 + (-t54 * t252 - t55 * t254 + (t252 * t90 - t254 * t91) * qJD(4)) * t225, t102 * t55 + t103 * t54 + t140 * t149 + t63 * t91 + t64 * t90 + t333, t14, t7, t12, t15, t13, t104, t105 * t69 + t109 * t99 + t11 * t198 + t139 * t62 + t145 * t87 + t199 * t56 + t214 * t29 - t262 * t6, -t10 * t198 - t105 * t68 - t139 * t61 + t146 * t87 - t199 * t57 - t214 * t30 - t262 * t282 + t265 * t99, -t10 * t109 - t11 * t265 + t145 * t282 - t146 * t6 + t29 * t68 - t30 * t69 + t56 * t61 - t57 * t62, t10 * t30 + t105 * t99 + t11 * t29 + t139 * t87 - t282 * t57 + t56 * t6, t14, t7, t12, t15, t13, t104, -t1 * t262 + t109 * t51 + t145 * t28 + t18 * t214 + t198 * t3 + t199 * t32 + t62 * t96 + t69 * t72, t146 * t28 - t198 * t4 - t199 * t40 + t2 * t262 - t20 * t214 + t265 * t51 - t61 * t96 - t68 * t72, -t1 * t146 - t109 * t4 - t145 * t2 + t18 * t68 - t20 * t69 - t265 * t3 + t32 * t61 - t40 * t62, t1 * t32 + t18 * t3 + t2 * t40 + t20 * t4 + t28 * t96 + t51 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, t310 * t257, 0, t296, 0, 0, t257 * pkin(1) * t253, pkin(1) * t316, 0, 0, t324, -t211 + t360, -t235 + (t236 + t212) * qJD(2), -t324, 0, 0, qJD(2) * t160 - t212 * t300 - t231 * t309 - t125, t161 * qJD(2) + t231 * t212 - t300 * t309 - t126 (t158 - t160) * t309 + (t161 - t157) * t212 + (-t250 * t199 - t260 * t341) * pkin(2), t157 * t160 - t158 * t161 + (-t125 * t341 + t126 * t250 - t231 * t307) * pkin(2), t173 * t276 - t332 (-t127 + t331) * t254 - t379 + t313, t205 * t276 + t317 - t328, -t172 * t326 - t270, t267 - t330, -t205 * t309, t242 * t295 - t125 * t254 - t90 * t309 + t160 * t172 + (-t241 * t305 - t97) * t205 + t261 * t252, t125 * t252 - t242 * t127 - t160 * t173 + t91 * t309 + (t241 * t306 + t98) * t205 + t261 * t254, -t98 * t172 + t97 * t173 + (-t241 * t295 + t54 - t90 * t212 + (t173 * t241 - t90) * qJD(4)) * t254 + (-t241 * t127 - t91 * t212 - t55 + (-t172 * t241 - t91) * qJD(4)) * t252, t125 * t242 - t149 * t160 - t90 * t97 - t91 * t98 + (qJD(4) * t268 - t55 * t252 + t54 * t254) * t241, t16, t8, t46, t17, t49, -t327, t105 * t378 + t109 * t271 + t153 * t199 + t198 * t344 + t87 * t227 + t232 * t62 - t29 * t309, -t105 * t311 - t154 * t199 - t198 * t345 + t87 * t228 - t232 * t61 + t265 * t271 + t30 * t309, -t109 * t345 + t153 * t61 - t154 * t62 + t227 * t282 - t6 * t228 - t265 * t344 + t29 * t311 - t30 * t378, t105 * t271 + t6 * t153 - t154 * t282 + t87 * t232 + t29 * t344 + t30 * t345, t16, t8, t46, t17, t49, -t327, t109 * t342 + t123 * t199 + t175 * t62 - t18 * t309 - t198 * t352 + t28 * t227 + t378 * t72, -t124 * t199 - t175 * t61 + t198 * t351 + t20 * t309 + t28 * t228 + t265 * t342 - t311 * t72, -t1 * t228 + t109 * t351 + t123 * t61 - t124 * t62 + t18 * t311 - t2 * t227 - t20 * t378 + t265 * t352, t1 * t123 + t2 * t124 + t28 * t175 - t18 * t352 - t20 * t351 + t342 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275 * qJD(2), -t235 + (t236 - t212) * qJD(2), -t211 - t360, t157 * t309 + t158 * t212 + t239, 0, 0, 0, 0, 0, 0, t267 + t330, -t205 ^ 2 * t254 - t317 - t328 (t127 + t331) * t254 + t379 + t313, -t149 * t309 + t252 * t372 + t254 * t371, 0, 0, 0, 0, 0, 0, t48, t47, t9, -t105 * t309 - t6 * t227 - t228 * t282 - t29 * t378 - t30 * t311, 0, 0, 0, 0, 0, 0, t48, t47, t9, -t1 * t227 - t18 * t378 + t2 * t228 - t20 * t311 - t309 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t329, -t172 ^ 2 + t173 ^ 2, -t172 * t205 - t127, t329, t173 * t205 - t295, t199, -t149 * t173 + t371, -t149 * t172 - t372, 0, 0, t380, t386, t382, -t380, t377, t199, -t34 * t198 + (-t109 * t173 - t198 * t304 + t359 * t199) * pkin(4) + t364, t198 * t35 - t265 * t357 + t368 + t375, t61 * t383 + t343 + (t30 + t34 + t384) * t265 + (t35 - t29) * t109, -t29 * t34 - t30 * t35 + (t359 * t6 - t105 * t173 - t251 * t282 + (-t251 * t29 + t359 * t30) * qJD(5)) * pkin(4), t380, t386, t382, -t380, t377, t199, t347 - t373 - t95 * t109 - t21 * t198 + t246 * t199 + (-t78 + (-pkin(4) * t198 - t67) * t251) * qJD(5) + t287 + t367, t109 * t72 + t198 * t22 - t265 * t95 - t2 + t368, t246 * t61 + t343 + (t20 + t21 + t384) * t265 + (t22 - t18) * t109, t1 * t246 - t18 * t21 - t20 * t22 - t72 * t95 + (t2 * t251 + (-t18 * t251 + t359 * t20) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, t386, t382, -t380, t377, t199, t30 * t198 + t364, t198 * t29 + t375, 0, 0, t380, t386, t382, -t380, t377, t199, t20 * t198 + 0.2e1 * t192 + (-t281 - t72) * t265 + t258, -t361 * pkin(5) + t19 * t198 + (qJD(6) + t72) * t109 + t266, t61 * pkin(5) - t109 * t353, t353 * t20 + (t1 - t373) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62 + t335, -t61 - t339, -t107 - t361, t20 * t109 + t18 * t265 + t28;];
tauc_reg  = t5;
