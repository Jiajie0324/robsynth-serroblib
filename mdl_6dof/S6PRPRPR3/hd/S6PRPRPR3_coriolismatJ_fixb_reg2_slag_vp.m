% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:37:45
% EndTime: 2019-03-08 19:37:53
% DurationCPUTime: 4.67s
% Computational Cost: add. (4062->305), mult. (9910->453), div. (0->0), fcn. (10743->10), ass. (0->247)
t252 = sin(qJ(6));
t416 = 0.2e1 * t252;
t256 = cos(qJ(4));
t251 = sin(pkin(11));
t236 = pkin(2) * t251 + pkin(8);
t397 = pkin(5) + t236;
t413 = t397 * t256;
t372 = t413 * t252;
t255 = cos(qJ(6));
t195 = t413 * t255;
t253 = sin(qJ(4));
t248 = t253 ^ 2;
t250 = t256 ^ 2;
t415 = -t248 - t250;
t257 = -pkin(4) - pkin(9);
t361 = t256 * t257;
t394 = cos(pkin(11));
t237 = -t394 * pkin(2) - pkin(3);
t367 = t253 * qJ(5);
t271 = t237 - t367;
t188 = t271 + t361;
t414 = t397 * t253;
t137 = t188 * t252 - t255 * t414;
t138 = t255 * t188 + t252 * t414;
t59 = (t137 * t252 + t138 * t255) * t253;
t247 = t252 ^ 2;
t249 = t255 ^ 2;
t355 = t247 + t249;
t243 = pkin(4) * t253;
t392 = qJ(5) * t256;
t214 = -t243 + t392;
t203 = pkin(9) * t253 - t214;
t370 = t252 * t203;
t151 = t195 - t370;
t363 = t255 * t203;
t152 = t363 + t372;
t362 = t255 * t256;
t368 = t252 * t256;
t19 = -t151 * t368 + t152 * t362 - t59;
t393 = sin(pkin(6));
t294 = t394 * t393;
t254 = sin(qJ(2));
t309 = t254 * t393;
t399 = cos(qJ(2));
t186 = t251 * t309 - t399 * t294;
t378 = t186 * t252;
t297 = t393 * t399;
t187 = t251 * t297 + t254 * t294;
t395 = cos(pkin(6));
t162 = t187 * t253 - t395 * t256;
t381 = t162 * t255;
t103 = t378 - t381;
t377 = t186 * t255;
t286 = t162 * t252 + t377;
t401 = t255 / 0.2e1;
t404 = t252 / 0.2e1;
t260 = (t103 * t404 + t286 * t401) * t253;
t329 = t253 * t377;
t376 = t187 * t252;
t117 = -t329 - t376;
t369 = t252 * t253;
t375 = t187 * t255;
t118 = -t186 * t369 + t375;
t280 = t117 * t401 + t118 * t404;
t11 = t260 + t280;
t388 = t11 * qJD(1);
t412 = t19 * qJD(2) - t388;
t411 = -qJD(2) * t59 - t388;
t308 = t395 * t253;
t374 = t187 * t256;
t163 = t308 + t374;
t380 = t163 * t256;
t382 = t162 * t253;
t267 = (t187 - t380 - t382) * t186;
t410 = qJD(2) * t267;
t409 = t267 * qJD(1);
t222 = t247 - t249;
t332 = t256 * qJD(2);
t325 = t255 * t332;
t269 = qJD(4) * t222 + t325 * t416;
t408 = t162 / 0.2e1;
t407 = t163 / 0.2e1;
t406 = -t247 / 0.2e1;
t405 = t249 / 0.2e1;
t403 = -t253 / 0.2e1;
t402 = t253 / 0.2e1;
t400 = -t256 / 0.2e1;
t398 = t256 * pkin(4);
t330 = t236 / 0.2e1 + pkin(5) / 0.2e1;
t364 = t255 * t137;
t386 = t138 * t252;
t261 = -t386 / 0.2e1 + t364 / 0.2e1 + t330 * t253;
t384 = t152 * t252;
t385 = t151 * t255;
t279 = t385 / 0.2e1 + t384 / 0.2e1;
t15 = (-t413 / 0.2e1 + t279) * t256 + t261 * t253;
t396 = t15 * qJD(4);
t127 = t186 * t253;
t316 = t127 / 0.2e1;
t29 = (t316 + t280) * t256;
t391 = qJD(1) * t29;
t390 = qJD(2) * t11;
t12 = t260 - t280;
t387 = t12 * qJD(2);
t383 = t162 * qJ(5);
t129 = t186 * t256;
t371 = t250 * t252;
t366 = t253 * t256;
t365 = t255 * t103;
t36 = t138 * t256 - t413 * t369 + (t152 - t372) * t253;
t358 = t36 * qJD(2);
t356 = t415 * t186 * t236;
t223 = t250 - t248;
t200 = t271 - t398;
t159 = t200 * t256 - t214 * t253;
t354 = qJD(2) * t159;
t160 = -t200 * t253 - t214 * t256;
t353 = qJD(2) * t160;
t207 = t223 * t252;
t352 = qJD(2) * t207;
t209 = t223 * t255;
t351 = qJD(2) * t209;
t350 = qJD(2) * t253;
t349 = qJD(2) * t255;
t241 = qJD(4) * t253;
t242 = qJD(4) * t256;
t348 = qJD(5) * t252;
t347 = qJD(5) * t253;
t346 = qJD(5) * t255;
t345 = qJD(5) * t256;
t344 = qJD(6) * t252;
t343 = qJD(6) * t253;
t342 = qJD(6) * t255;
t341 = qJD(6) * t257;
t340 = t186 * qJD(2);
t339 = t187 * qJD(2);
t193 = t355 * t366;
t338 = t193 * qJD(2);
t202 = (t405 + t406) * t256;
t337 = t202 * qJD(6);
t336 = t223 * qJD(2);
t335 = t248 * qJD(2);
t334 = t252 * qJD(4);
t333 = t255 * qJD(4);
t331 = t256 * qJD(6);
t328 = t200 * t350;
t327 = t237 * t350;
t326 = t237 * t332;
t324 = t236 * t241;
t323 = t252 * t333;
t322 = t256 * t334;
t321 = t252 * t343;
t234 = t252 * t331;
t320 = t253 * t342;
t319 = t255 * t331;
t230 = t253 * t242;
t229 = t253 * t332;
t233 = t256 * t333;
t318 = t252 * t342;
t317 = -t392 / 0.2e1;
t315 = -t368 / 0.2e1;
t314 = -t362 / 0.2e1;
t313 = t406 - t249 / 0.2e1;
t307 = t355 * t257;
t306 = t362 * t416;
t305 = qJD(4) * t355;
t304 = qJD(6) + t350;
t303 = t252 * t229;
t302 = t252 * t233;
t301 = t250 * t318;
t299 = -0.1e1 / 0.2e1 - t313;
t298 = t330 * t256;
t296 = -t187 / 0.2e1 + t380 / 0.2e1;
t295 = t378 / 0.2e1 - t103 / 0.2e1;
t272 = t286 * t252;
t6 = (-t272 / 0.2e1 + t365 / 0.2e1 + t408) * t253 + t299 * t380;
t8 = (-t162 + t272 - t365) * t163;
t293 = t8 * qJD(1) - t6 * qJD(3);
t7 = -t103 * t117 + t286 * t118 - t163 * t129;
t292 = t7 * qJD(1) - t29 * qJD(3);
t23 = (t382 / 0.2e1 + t296) * t252;
t86 = -t138 * t253 - t368 * t413;
t291 = -qJD(1) * t23 + qJD(2) * t86;
t24 = t295 * t253 + t296 * t255;
t85 = -t137 * t253 + t362 * t413;
t290 = -qJD(1) * t24 - qJD(2) * t85;
t35 = -t137 * t256 + (t151 - 0.2e1 * t195) * t253;
t39 = (t381 / 0.2e1 - t295) * t256;
t289 = -t39 * qJD(1) + t35 * qJD(2);
t287 = t384 + t385;
t285 = qJD(2) * t127 - qJD(4) * t163;
t284 = qJD(2) * t129 + qJD(4) * t162;
t283 = -t335 - t343;
t282 = -qJD(4) * t214 - t347;
t281 = t317 + t243 / 0.2e1;
t278 = t257 * t403 + t317;
t21 = (t214 / 0.2e1 + t281) * t186;
t277 = t200 * t214 * qJD(2) + t21 * qJD(1);
t264 = t203 / 0.2e1 + t278;
t149 = t264 * t252;
t276 = -qJ(5) * t333 - t149 * qJD(2);
t150 = t264 * t255;
t275 = qJ(5) * t334 - t150 * qJD(2);
t274 = -qJD(4) * t127 + t187 * t332;
t273 = qJD(4) * t129 + t253 * t339;
t175 = qJD(2) * t202 + t323;
t166 = -qJD(4) * t202 + t349 * t371;
t208 = t222 * t250;
t270 = -qJD(2) * t208 + 0.2e1 * t302;
t258 = t103 * t151 / 0.2e1 + t413 * t408 - t286 * t152 / 0.2e1;
t259 = t186 * t317 + t280 * t257;
t1 = t163 * t261 + t258 + t259;
t18 = -t137 * t151 + t138 * t152 - t413 * t414;
t268 = -t1 * qJD(1) + t18 * qJD(2) - t15 * qJD(3);
t266 = t374 / 0.2e1 + t308 / 0.2e1;
t184 = t193 - t366;
t265 = -t6 * qJD(1) - t15 * qJD(2) - t184 * qJD(3);
t197 = t299 * t253;
t245 = qJD(4) * qJ(5);
t51 = t313 * t163 + t266;
t57 = t298 - t279;
t263 = qJD(1) * t51 + qJD(2) * t57 - qJD(3) * t197 + t245;
t262 = (-t367 - t398) * qJD(4) + t345;
t246 = qJ(5) * qJD(5);
t238 = t242 / 0.2e1;
t232 = t253 * t333;
t231 = t253 * t349;
t228 = t252 * t350;
t215 = t223 * qJD(4);
t211 = t236 * t242;
t206 = -t231 - t342;
t205 = -t228 - t344;
t204 = t229 + t331 / 0.2e1;
t196 = (0.1e1 + t355) * t402;
t125 = t415 * t340;
t111 = -t372 - t363 / 0.2e1 + t278 * t255;
t110 = t195 - t370 / 0.2e1 + t278 * t252;
t56 = t298 + t279;
t50 = t163 * t405 + t247 * t407 + t266;
t42 = t186 * t314 + t286 * t400 + t368 * t408;
t41 = t103 * t400 + t162 * t314 + t186 * t315;
t26 = t286 * t403 + t163 * t315 - t376 / 0.2e1 - t329 / 0.2e1;
t25 = t103 * t402 + t163 * t314 - t375 / 0.2e1 + t252 * t316;
t22 = (-t214 / 0.2e1 + t281) * t186;
t3 = -qJD(2) * t29 - qJD(4) * t6;
t2 = -t163 * t364 / 0.2e1 - t258 + t259 + (t386 - t414) * t407;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t7 + qJD(4) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t309, -qJD(2) * t297, 0, 0, 0, 0, 0, 0, 0, 0, -t339, t340, 0 (-t186 * t251 - t394 * t187) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, -t274, t273, t125, t409 + (t187 * t237 + t356) * qJD(2), 0, 0, 0, 0, 0, 0, t125, t274, -t273, t409 + (t187 * t200 + t356) * qJD(2) + t22 * qJD(4) - t127 * qJD(5), 0, 0, 0, 0, 0, 0 (t117 * t253 - t250 * t377) * qJD(2) + t41 * qJD(4) + t26 * qJD(6) (-t118 * t253 + t186 * t371) * qJD(2) + t42 * qJD(4) + t25 * qJD(6), t12 * qJD(4) + (t117 * t252 - t118 * t255) * t332 (-t117 * t137 + t118 * t138 - t129 * t413) * qJD(2) + t2 * qJD(4) - t12 * qJD(5) + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t284, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t285, -t284, t22 * qJD(2) + (-pkin(4) * t163 - t383) * qJD(4) + t163 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(2) * t41 - t162 * t334 + t163 * t342, qJD(2) * t42 - t162 * t333 - t163 * t344, -t163 * t305 + t387, t2 * qJD(2) + (t163 * t307 - t383) * qJD(4) + t50 * qJD(5) + t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t285, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t50 - t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26 * qJD(2) - qJD(6) * t286 + t163 * t333, qJD(2) * t25 + qJD(6) * t103 - t163 * t334, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t21 - t409, 0, 0, 0, 0, 0, 0, -qJD(4) * t39 - qJD(6) * t23, -qJD(6) * t24, qJD(4) * t11, -qJD(4) * t1 - qJD(5) * t11 - t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230, t215, 0, -t230, 0, 0, t237 * t241, t237 * t242, 0, 0, 0, 0, 0, t230, t215, -t230, 0, qJD(4) * t160 - t253 * t345, -qJD(4) * t159 + qJD(5) * t248, t282 * t200, -t230 * t247 + t301, -qJD(6) * t208 - 0.2e1 * t253 * t302, -qJD(4) * t207 - t253 * t319, -t230 * t249 - t301, -qJD(4) * t209 + t234 * t253, t230, qJD(4) * t35 + qJD(6) * t86 + t248 * t348, -qJD(4) * t36 - qJD(6) * t85 + t248 * t346, -qJD(4) * t19 + qJD(5) * t193, qJD(4) * t18 - qJD(5) * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t391 - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t336, t242, -t229, -t241, 0, -t211 + t327, t324 + t326, 0, 0, 0, -t242, t241, t229, t336, -t229, t262, t353 + t211, -t324 - t354, t236 * t262 - t277, -t337 + (-t247 * t332 + t323) * t253, qJD(6) * t306 - t253 * t269, t233 - t352, t337 + (-t249 * t332 - t323) * t253, -t322 - t351, t204 (t255 * t361 + (-qJ(5) * t255 - t252 * t397) * t253) * qJD(4) + t255 * t345 + t110 * qJD(6) + t289, -t358 + (-t252 * t361 + (qJ(5) * t252 - t255 * t397) * t253) * qJD(4) - t252 * t345 + t111 * qJD(6), -qJD(4) * t287 - t412 (-qJ(5) * t414 + t257 * t287) * qJD(4) + t56 * qJD(5) + t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, -t229, t335, -t328 + t211, 0, 0, 0, 0, 0, 0, t252 * t335 + t233, t255 * t335 - t322, t338, qJD(4) * t56 + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t270, -t304 * t362, -t166, t234 + t303, t238, qJD(4) * t110 - qJD(6) * t138 + t291, qJD(4) * t111 + qJD(6) * t137 + t290, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t391 - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, -t242, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, t242, -t282, 0, 0, 0, 0, 0, 0, t320 + t322, t233 - t321, -t253 * t305 (t253 * t307 + t392) * qJD(4) + t196 * qJD(5) + t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t234 + t232, -t253 * t334 + t319, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t21, 0, 0, 0, 0, 0, 0, t39 * qJD(2), 0, -t390, qJD(2) * t1 + qJD(5) * t51 - t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t229, -t336, 0, t229, 0, 0, -t327, -t326, 0, 0, 0, 0, 0, -t229, -t336, t229, 0, -t353, t354, t277, t229 * t247 - t337, t304 * t306, -t321 + t352, t229 * t249 + t337, -t320 + t351, -t204, qJD(6) * t149 - t289, qJD(6) * t150 + t358, t412, qJD(5) * t57 - t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t197 - t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t246, -t318, t222 * qJD(6), 0, t318, 0, 0, qJ(5) * t342 + t348, -qJ(5) * t344 + t346, 0, t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t245, 0, 0, 0, 0, 0, 0, t334, t333, 0, t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, t269, t205, t175, t206, -t332 / 0.2e1, -t252 * t341 - t276, -t255 * t341 - t275, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t51 + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, -t335, t328, 0, 0, 0, 0, 0, 0, t283 * t252, t283 * t255, -t338, -qJD(4) * t57 - t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t245, 0, 0, 0, 0, 0, 0, -t334, -t333, 0, -t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, t206, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 * qJD(2), t24 * qJD(2), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t270 (t325 + t334) * t253, t166, t232 - t303, t238, -qJD(4) * t149 + t252 * t347 - t291, -qJD(4) * t150 + t253 * t346 - t290, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, -t269, t228, -t175, t231, t332 / 0.2e1, t276, t275, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, t231, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
