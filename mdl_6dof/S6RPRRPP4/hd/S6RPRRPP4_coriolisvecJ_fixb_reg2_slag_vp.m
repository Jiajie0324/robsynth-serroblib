% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPP4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPP4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:40:47
% EndTime: 2019-03-09 04:41:01
% DurationCPUTime: 5.93s
% Computational Cost: add. (10137->467), mult. (26646->586), div. (0->0), fcn. (20388->8), ass. (0->220)
t201 = sin(pkin(9));
t202 = cos(pkin(9));
t204 = sin(qJ(3));
t264 = t204 * t202;
t307 = cos(qJ(3));
t177 = t201 * t307 + t264;
t169 = t177 * qJD(1);
t203 = sin(qJ(4));
t205 = cos(qJ(4));
t141 = -qJD(3) * t205 + t169 * t203;
t143 = qJD(3) * t203 + t169 * t205;
t200 = sin(pkin(10));
t283 = cos(pkin(10));
t83 = t141 * t283 + t143 * t200;
t297 = t169 * t83;
t172 = t177 * qJD(3);
t156 = qJD(1) * t172;
t248 = qJD(1) * t307;
t265 = t204 * t201;
t166 = qJD(1) * t265 - t202 * t248;
t160 = qJD(4) + t166;
t244 = t283 * t205;
t269 = t200 * t203;
t314 = t244 - t269;
t245 = t283 * t203;
t176 = t200 * t205 + t245;
t165 = t176 * qJD(4);
t322 = t166 * t176 + t165;
t310 = -t156 * t314 + t160 * t322;
t330 = -t297 - t310;
t329 = -t310 + t297;
t258 = qJD(4) * t203;
t168 = qJD(4) * t244 - t200 * t258;
t321 = t166 * t314 + t168;
t220 = t202 * t307 - t265;
t312 = t220 * qJD(1);
t209 = qJD(3) * t312;
t320 = qJD(3) * qJD(4) + t209;
t95 = t169 * t258 - t205 * t320;
t257 = qJD(4) * t205;
t96 = t169 * t257 + t203 * t320;
t59 = -t200 * t95 + t283 * t96;
t238 = -t176 * t59 - t321 * t83;
t215 = -t141 * t200 + t143 * t283;
t60 = -t200 * t96 - t283 * t95;
t325 = t215 * t322 - t314 * t60;
t328 = t238 - t325;
t327 = t238 + t325;
t230 = t176 * t156 + t160 * t321;
t292 = t215 * t169;
t326 = t230 + t292;
t293 = t83 * t160;
t41 = t60 + t293;
t275 = t166 * t203;
t324 = t258 + t275;
t323 = t83 * t215;
t247 = qJD(3) * t307;
t259 = qJD(3) * t204;
t171 = t201 * t259 - t202 * t247;
t250 = t177 * t257;
t219 = -t171 * t203 + t250;
t303 = t215 ^ 2;
t301 = pkin(7) + qJ(2);
t182 = t301 * t201;
t179 = qJD(1) * t182;
t183 = t301 * t202;
t180 = qJD(1) * t183;
t316 = -t179 * t307 - t180 * t204;
t121 = -qJD(3) * pkin(3) - t316;
t81 = pkin(4) * t141 + qJD(5) + t121;
t42 = pkin(5) * t83 - qJ(6) * t215 + t81;
t319 = t42 * t215;
t300 = -qJ(5) - pkin(8);
t246 = qJD(4) * t300;
t162 = t205 * qJD(5) + t203 * t246;
t214 = -t203 * qJD(5) + t205 * t246;
t123 = pkin(3) * t169 + pkin(8) * t166;
t74 = t123 * t205 - t203 * t316;
t58 = qJ(5) * t166 * t205 + pkin(4) * t169 + t74;
t75 = t123 * t203 + t205 * t316;
t66 = qJ(5) * t275 + t75;
t287 = (-t214 + t58) * t283 + (t162 - t66) * t200;
t109 = t156 * pkin(3) - pkin(8) * t209;
t130 = -t179 * t204 + t180 * t307;
t122 = qJD(3) * pkin(8) + t130;
t211 = t220 * qJD(2);
t89 = qJD(1) * t211 + qJD(3) * t316;
t194 = -pkin(2) * t202 - pkin(1);
t181 = qJD(1) * t194 + qJD(2);
t99 = t166 * pkin(3) - t169 * pkin(8) + t181;
t39 = t109 * t203 - t122 * t258 + t205 * t89 + t257 * t99;
t68 = -t122 * t203 + t205 * t99;
t227 = -t160 * t68 + t39;
t69 = t122 * t205 + t203 * t99;
t40 = -qJD(4) * t69 + t109 * t205 - t203 * t89;
t318 = t69 * t160 + t40;
t235 = pkin(4) * t324 - t130;
t241 = t160 * t203;
t317 = t143 * t241;
t126 = -pkin(3) * t220 - pkin(8) * t177 + t194;
t138 = -t182 * t204 + t183 * t307;
t133 = t205 * t138;
t79 = t126 * t203 + t133;
t315 = -t182 * t307 - t183 * t204;
t313 = t169 * qJD(3);
t309 = t160 ^ 2;
t308 = t169 ^ 2;
t57 = -qJ(5) * t141 + t69;
t53 = t283 * t57;
t56 = -qJ(5) * t143 + t68;
t24 = t200 * t56 + t53;
t306 = t24 * t215;
t304 = t83 ^ 2;
t16 = t156 * pkin(4) + t95 * qJ(5) - t143 * qJD(5) + t40;
t21 = -qJ(5) * t96 - qJD(5) * t141 + t39;
t3 = t16 * t283 - t200 * t21;
t4 = t16 * t200 + t21 * t283;
t226 = qJ(5) * t171 - qJD(5) * t177;
t100 = qJD(3) * t315 + t211;
t124 = pkin(3) * t172 + pkin(8) * t171;
t242 = -t203 * t100 + t124 * t205;
t29 = t172 * pkin(4) + t226 * t205 + (-t133 + (qJ(5) * t177 - t126) * t203) * qJD(4) + t242;
t252 = t100 * t205 + t124 * t203 + t126 * t257;
t33 = -qJ(5) * t250 + (-qJD(4) * t138 + t226) * t203 + t252;
t8 = t200 * t29 + t283 * t33;
t299 = -pkin(5) * t322 + qJ(6) * t321 + t176 * qJD(6) - t235;
t48 = pkin(4) * t160 + t56;
t23 = t200 * t48 + t53;
t32 = t200 * t58 + t283 * t66;
t270 = t177 * t205;
t78 = t126 * t205 - t138 * t203;
t63 = -pkin(4) * t220 - qJ(5) * t270 + t78;
t271 = t177 * t203;
t70 = -qJ(5) * t271 + t79;
t38 = t200 * t63 + t283 * t70;
t298 = t160 * t215;
t296 = t200 * t57;
t256 = qJD(1) * qJD(2);
t90 = qJD(2) * t201 * t248 - t179 * t259 + t180 * t247 + t256 * t264;
t291 = t90 * t315;
t290 = t95 * t203;
t289 = t96 * t205;
t288 = pkin(5) * t169 + t287;
t108 = t162 * t283 + t200 * t214;
t27 = qJ(6) * t169 + t32;
t286 = t108 - t27;
t285 = t108 - t32;
t284 = -t141 * t257 - t203 * t96;
t184 = t300 * t205;
t139 = -t184 * t200 - t245 * t300;
t282 = t139 * t156;
t140 = -t184 * t283 + t269 * t300;
t281 = t140 * t156;
t280 = t141 * t166;
t279 = t143 * t141;
t278 = t143 * t169;
t277 = t156 * t220;
t276 = t160 * t169;
t274 = t169 * t141;
t273 = t169 * t166;
t267 = t203 * t156;
t149 = t205 * t156;
t25 = t283 * t56 - t296;
t263 = qJD(6) - t25;
t260 = t201 ^ 2 + t202 ^ 2;
t254 = qJ(6) * t156 + t4;
t196 = -pkin(4) * t205 - pkin(3);
t243 = t260 * qJD(1) ^ 2;
t240 = t160 * t205;
t2 = -pkin(5) * t156 - t3;
t237 = -t108 * t83 + t139 * t60 - t140 * t59;
t236 = t24 * t160 + t3;
t233 = -t303 - t304;
t232 = t303 - t304;
t104 = pkin(4) * t271 - t315;
t111 = t176 * t177;
t71 = -t168 * t177 + t171 * t176;
t229 = t111 * t59 - t71 * t83;
t228 = t203 * t69 + t205 * t68;
t225 = 0.2e1 * t260 * t256;
t224 = -t160 * t324 + t149;
t223 = t59 + t298;
t222 = -t59 + t298;
t62 = pkin(4) * t96 + t90;
t7 = -t200 * t33 + t283 * t29;
t22 = t283 * t48 - t296;
t37 = -t200 * t70 + t283 * t63;
t218 = -t171 * t205 - t177 * t258;
t217 = -t314 * t59 + t322 * t83;
t216 = -pkin(8) * t156 + t121 * t160;
t210 = -t60 + t293;
t112 = t314 * t177;
t72 = t177 * t165 + t171 * t314;
t208 = t111 * t60 + t112 * t59 - t215 * t71 - t72 * t83;
t207 = t111 * t156 - t160 * t71 + t172 * t83 - t220 * t59;
t9 = pkin(5) * t59 - qJ(6) * t60 - qJD(6) * t215 + t62;
t101 = qJD(2) * t177 + qJD(3) * t138;
t73 = pkin(4) * t219 + t101;
t193 = -pkin(4) * t283 - pkin(5);
t190 = pkin(4) * t200 + qJ(6);
t163 = t166 ^ 2;
t125 = -pkin(5) * t314 - qJ(6) * t176 + t196;
t80 = t160 * t172 - t277;
t50 = pkin(5) * t111 - qJ(6) * t112 + t104;
t46 = pkin(4) * t143 + pkin(5) * t215 + qJ(6) * t83;
t44 = -qJD(4) * t79 + t242;
t43 = -t138 * t258 + t252;
t36 = t230 - t292;
t35 = pkin(5) * t220 - t37;
t34 = -qJ(6) * t220 + t38;
t18 = qJ(6) * t160 + t23;
t17 = -pkin(5) * t160 + qJD(6) - t22;
t15 = t112 * t60 - t215 * t72;
t12 = t60 * t176 + t215 * t321;
t11 = -t71 * pkin(5) + t72 * qJ(6) - t112 * qJD(6) + t73;
t10 = t112 * t156 - t160 * t72 + t172 * t215 - t220 * t60;
t6 = -pkin(5) * t172 - t7;
t5 = qJ(6) * t172 - qJD(6) * t220 + t8;
t1 = qJD(6) * t160 + t254;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225, qJ(2) * t225, -t169 * t171 + t177 * t209, -t177 * t156 + t171 * t166 - t169 * t172 + t209 * t220, -t171 * qJD(3), t166 * t172 - t277, -t172 * qJD(3), 0, -qJD(3) * t101 + t156 * t194 + t172 * t181, -t100 * qJD(3) - t181 * t171 + t194 * t209, -t100 * t166 + t101 * t169 - t130 * t172 - t138 * t156 + t171 * t316 + t90 * t177 - t209 * t315 + t220 * t89, t100 * t130 - t101 * t316 + t138 * t89 - t291, t143 * t218 - t270 * t95 (t141 * t205 + t143 * t203) * t171 + (t290 - t289 + (t141 * t203 - t143 * t205) * qJD(4)) * t177, t143 * t172 + t149 * t177 + t160 * t218 + t220 * t95, t141 * t219 + t271 * t96, -t141 * t172 - t160 * t219 - t177 * t267 + t220 * t96, t80, t101 * t141 + t121 * t219 + t78 * t156 + t44 * t160 + t68 * t172 - t220 * t40 + t271 * t90 - t315 * t96, t101 * t143 + t121 * t218 - t79 * t156 - t43 * t160 - t69 * t172 + t220 * t39 + t270 * t90 + t315 * t95, -t43 * t141 - t44 * t143 + t78 * t95 - t79 * t96 + t228 * t171 + (-t39 * t203 - t40 * t205 + (t203 * t68 - t205 * t69) * qJD(4)) * t177, t101 * t121 + t39 * t79 + t40 * t78 + t43 * t69 + t44 * t68 - t291, t15, -t208, t10, t229, -t207, t80, t104 * t59 + t111 * t62 + t156 * t37 + t160 * t7 + t172 * t22 - t220 * t3 - t71 * t81 + t73 * t83, t104 * t60 + t112 * t62 - t156 * t38 - t160 * t8 - t172 * t23 + t215 * t73 + t220 * t4 - t72 * t81, -t4 * t111 - t112 * t3 - t215 * t7 + t22 * t72 + t23 * t71 - t37 * t60 - t38 * t59 - t8 * t83, t104 * t62 + t22 * t7 + t23 * t8 + t3 * t37 + t38 * t4 + t73 * t81, t15, t10, t208, t80, t207, t229, t11 * t83 + t111 * t9 - t156 * t35 - t160 * t6 - t17 * t172 + t2 * t220 - t42 * t71 + t50 * t59, -t1 * t111 + t112 * t2 - t17 * t72 + t18 * t71 + t215 * t6 - t34 * t59 + t35 * t60 - t5 * t83, -t1 * t220 - t11 * t215 - t112 * t9 + t156 * t34 + t160 * t5 + t172 * t18 + t42 * t72 - t50 * t60, t1 * t34 + t11 * t42 + t17 * t6 + t18 * t5 + t2 * t35 + t50 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, -qJ(2) * t243, 0, 0, 0, 0, 0, 0, 0.2e1 * t313 (-t166 + t312) * qJD(3), -t163 - t308, t130 * t166 + t169 * t316, 0, 0, 0, 0, 0, 0, t224 - t274, -t205 * t309 - t267 - t278 (t95 - t280) * t205 + t317 + t284, -t121 * t169 + t203 * t227 + t205 * t318, 0, 0, 0, 0, 0, 0, t330, -t326, t327, -t81 * t169 + t4 * t176 - t22 * t322 + t23 * t321 + t3 * t314, 0, 0, 0, 0, 0, 0, t330, t327, t326, t1 * t176 - t42 * t169 + t17 * t322 + t18 * t321 - t2 * t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, -t163 + t308 (t166 + t312) * qJD(3), -t273, 0, 0, qJD(3) * t130 - t169 * t181 - t90, -qJD(2) * t312 + t181 * t166, 0, 0, t143 * t240 - t290 (-t95 - t280) * t205 - t317 + t284, t160 * t240 + t267 - t278, t141 * t241 - t289, t224 + t274, -t276, -pkin(3) * t96 - t130 * t141 - t68 * t169 - t90 * t205 + (-pkin(8) * t257 - t74) * t160 + t216 * t203, pkin(3) * t95 - t130 * t143 + t69 * t169 + t90 * t203 + (pkin(8) * t258 + t75) * t160 + t216 * t205, t75 * t141 + t74 * t143 + ((qJD(4) * t143 - t96) * pkin(8) + t227) * t205 + ((qJD(4) * t141 - t95) * pkin(8) - t318) * t203, -t90 * pkin(3) - t121 * t130 - t68 * t74 - t69 * t75 + (-qJD(4) * t228 - t40 * t203 + t39 * t205) * pkin(8), t12, t328, t36, t217, t329, -t276, -t160 * t287 - t22 * t169 + t196 * t59 + t235 * t83 - t314 * t62 + t322 * t81 - t282, -t160 * t285 + t23 * t169 + t62 * t176 + t196 * t60 + t215 * t235 + t321 * t81 - t281, -t3 * t176 + t215 * t287 - t22 * t321 - t23 * t322 + t314 * t4 + t32 * t83 + t237, -t3 * t139 + t4 * t140 + t62 * t196 - t22 * t287 + t23 * t285 + t235 * t81, t12, t36, -t328, -t276, -t329, t217, t125 * t59 - t160 * t288 + t17 * t169 - t299 * t83 - t314 * t9 + t322 * t42 - t282, t1 * t314 + t17 * t321 + t2 * t176 - t18 * t322 + t215 * t288 + t27 * t83 + t237, -t125 * t60 + t160 * t286 - t18 * t169 - t9 * t176 + t215 * t299 - t321 * t42 + t281, t1 * t140 + t9 * t125 + t2 * t139 + t17 * t288 + t18 * t286 - t299 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, -t141 ^ 2 + t143 ^ 2, t141 * t160 - t95, -t279, t143 * t160 - t96, t156, -t121 * t143 + t318, t121 * t141 - t227, 0, 0, t323, t232, t41, -t323, t222, t156, -t81 * t215 + (-t143 * t83 + t156 * t283) * pkin(4) + t236, t25 * t160 + t81 * t83 + (-t143 * t215 - t156 * t200) * pkin(4) - t4, t23 * t215 - t306 + (-t200 * t59 - t283 * t60) * pkin(4) + (-t22 + t25) * t83, t22 * t24 - t23 * t25 + (-t143 * t81 + t200 * t4 + t283 * t3) * pkin(4), t323, t41, -t232, t156, -t222, -t323, -t319 - t46 * t83 + (pkin(5) - t193) * t156 + t236, t18 * t215 - t190 * t59 + t193 * t60 - t306 + (t17 - t263) * t83, t190 * t156 - t42 * t83 + t46 * t215 + (0.2e1 * qJD(6) - t25) * t160 + t254, t1 * t190 - t17 * t24 + t18 * t263 + t2 * t193 - t42 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, -t210, t233, t215 * t22 + t23 * t83 + t62, 0, 0, 0, 0, 0, 0, t223, t233, t210, -t17 * t215 + t18 * t83 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313 + t323, t41, -t309 - t303, -t160 * t18 + t2 + t319;];
tauc_reg  = t13;
