% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPP4_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP4_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP4_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPP4_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPP4_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPP4_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:40:54
% EndTime: 2019-03-09 04:41:10
% DurationCPUTime: 9.13s
% Computational Cost: add. (12752->619), mult. (30590->737), div. (0->0), fcn. (23628->14), ass. (0->292)
t243 = sin(pkin(9));
t244 = cos(pkin(9));
t248 = sin(qJ(3));
t401 = cos(qJ(3));
t198 = t243 * t401 + t248 * t244;
t187 = t198 * qJD(1);
t247 = sin(qJ(4));
t250 = cos(qJ(4));
t148 = -t250 * qJD(3) + t187 * t247;
t337 = qJD(3) * t247;
t150 = t187 * t250 + t337;
t242 = sin(pkin(10));
t371 = cos(pkin(10));
t95 = t371 * t148 + t150 * t242;
t382 = t187 * t95;
t190 = t198 * qJD(3);
t324 = t401 * t244;
t331 = t243 * qJDD(1);
t293 = -qJDD(1) * t324 + t248 * t331;
t135 = qJD(1) * t190 + t293;
t128 = qJDD(4) + t135;
t281 = -t248 * t243 + t324;
t423 = t281 * qJD(1);
t174 = qJD(4) - t423;
t317 = t371 * t250;
t352 = t242 * t247;
t413 = t317 - t352;
t318 = t371 * t247;
t197 = t242 * t250 + t318;
t183 = t197 * qJD(4);
t421 = -t197 * t423 + t183;
t407 = -t128 * t413 + t174 * t421;
t433 = -t382 - t407;
t432 = -t407 + t382;
t240 = pkin(9) + qJ(3);
t230 = sin(t240);
t232 = cos(t240);
t249 = sin(qJ(1));
t251 = cos(qJ(1));
t302 = g(1) * t251 + g(2) * t249;
t267 = -g(3) * t232 + t302 * t230;
t333 = qJD(1) * qJD(2);
t389 = pkin(7) + qJ(2);
t405 = qJDD(1) * t389 + t333;
t167 = t405 * t243;
t168 = t405 * t244;
t207 = t389 * t243;
t200 = qJD(1) * t207;
t208 = t389 * t244;
t201 = qJD(1) * t208;
t321 = qJD(3) * t401;
t336 = qJD(3) * t248;
t82 = -t401 * t167 - t248 * t168 + t200 * t336 - t201 * t321;
t77 = -qJDD(3) * pkin(3) - t82;
t260 = -t77 + t267;
t431 = -pkin(8) * qJD(4) * t174 + t260;
t335 = qJD(4) * t247;
t186 = qJD(4) * t317 - t242 * t335;
t420 = -t413 * t423 + t186;
t271 = t198 * qJDD(1);
t427 = t423 * qJD(3);
t254 = t271 + t427;
t419 = -qJD(3) * qJD(4) - t254;
t91 = -t247 * qJDD(3) + t187 * t335 + t250 * t419;
t334 = qJD(4) * t250;
t296 = -t250 * qJDD(3) + t187 * t334;
t92 = t247 * t271 + (qJD(4) + t423) * t337 + t296;
t49 = -t242 * t91 + t371 * t92;
t309 = -t197 * t49 - t420 * t95;
t276 = -t242 * t148 + t150 * t371;
t50 = -t242 * t92 - t371 * t91;
t426 = t276 * t421 - t50 * t413;
t430 = t309 - t426;
t429 = t309 + t426;
t297 = t197 * t128 + t174 * t420;
t381 = t187 * t276;
t428 = t297 + t381;
t388 = qJ(5) + pkin(8);
t209 = t388 * t250;
t147 = t209 * t371 - t352 * t388;
t241 = qJ(4) + pkin(10);
t231 = sin(t241);
t425 = t128 * t147 + t231 * t267;
t377 = t95 * t174;
t32 = t50 + t377;
t361 = t423 * t247;
t424 = t335 - t361;
t422 = t95 * t276;
t369 = qJDD(1) * pkin(1);
t229 = qJDD(2) - t369;
t414 = g(1) * t249 - g(2) * t251;
t288 = -t229 + t414;
t189 = t243 * t336 - t244 * t321;
t323 = t198 * t334;
t280 = -t189 * t247 + t323;
t393 = t276 ^ 2;
t319 = qJD(4) * t388;
t180 = qJD(5) * t250 - t247 * t319;
t274 = -qJD(5) * t247 - t250 * t319;
t131 = pkin(3) * t187 - pkin(8) * t423;
t182 = t248 * t201;
t138 = -t200 * t401 - t182;
t83 = t250 * t131 - t138 * t247;
t61 = -qJ(5) * t250 * t423 + pkin(4) * t187 + t83;
t84 = t247 * t131 + t250 * t138;
t66 = -qJ(5) * t361 + t84;
t375 = (-t274 + t61) * t371 + (t180 - t66) * t242;
t226 = t244 * pkin(2) + pkin(1);
t205 = -qJD(1) * t226 + qJD(2);
t106 = -pkin(3) * t423 - pkin(8) * t187 + t205;
t139 = -t248 * t200 + t201 * t401;
t130 = qJD(3) * pkin(8) + t139;
t325 = t248 * t167 - t401 * t168 + t200 * t321;
t81 = -t201 * t336 - t325;
t76 = qJDD(3) * pkin(8) + t81;
t330 = t244 * qJDD(1);
t80 = -pkin(2) * t330 + t135 * pkin(3) - pkin(8) * t254 + t229;
t22 = t106 * t334 - t130 * t335 + t247 * t80 + t250 * t76;
t68 = t250 * t106 - t130 * t247;
t291 = -t174 * t68 + t22;
t69 = t106 * t247 + t130 * t250;
t75 = t250 * t80;
t23 = -qJD(4) * t69 - t247 * t76 + t75;
t384 = t174 * t69;
t418 = t23 + t384;
t313 = t174 * t247;
t417 = t150 * t313;
t307 = pkin(4) * t424 - t139;
t134 = -pkin(3) * t281 - pkin(8) * t198 - t226;
t145 = -t248 * t207 + t208 * t401;
t140 = t250 * t145;
t90 = t247 * t134 + t140;
t415 = -t401 * t207 - t248 * t208;
t411 = t187 * qJD(3);
t410 = qJ(2) * qJDD(1);
t409 = pkin(5) * t49 - qJ(6) * t50 - qJD(6) * t276;
t396 = g(3) * t230;
t268 = t232 * t302 + t396;
t129 = -qJD(3) * pkin(3) - t138;
t93 = t148 * pkin(4) + qJD(5) + t129;
t42 = t95 * pkin(5) - qJ(6) * t276 + t93;
t406 = -t42 * t276 - qJDD(6);
t404 = t174 ^ 2;
t403 = t187 ^ 2;
t400 = pkin(5) * t128;
t233 = cos(t241);
t395 = g(3) * t233;
t60 = -qJ(5) * t148 + t69;
t56 = t371 * t60;
t59 = -qJ(5) * t150 + t68;
t26 = t242 * t59 + t56;
t394 = t26 * t276;
t391 = t95 ^ 2;
t13 = pkin(4) * t128 + qJ(5) * t91 - qJD(5) * t150 + t23;
t16 = -qJ(5) * t92 - qJD(5) * t148 + t22;
t3 = t371 * t13 - t242 * t16;
t4 = t242 * t13 + t371 * t16;
t289 = qJ(5) * t189 - qJD(5) * t198;
t107 = t281 * qJD(2) + qJD(3) * t415;
t132 = pkin(3) * t190 + pkin(8) * t189;
t315 = -t107 * t247 + t250 * t132;
t31 = pkin(4) * t190 + t289 * t250 + (-t140 + (qJ(5) * t198 - t134) * t247) * qJD(4) + t315;
t326 = t250 * t107 + t247 * t132 + t134 * t334;
t37 = -qJ(5) * t323 + (-qJD(4) * t145 + t289) * t247 + t326;
t9 = t242 * t31 + t371 * t37;
t54 = pkin(4) * t174 + t59;
t25 = t242 * t54 + t56;
t36 = t242 * t61 + t371 * t66;
t357 = t198 * t250;
t89 = t250 * t134 - t145 * t247;
t63 = -pkin(4) * t281 - qJ(5) * t357 + t89;
t358 = t198 * t247;
t70 = -qJ(5) * t358 + t90;
t41 = t242 * t63 + t371 * t70;
t387 = pkin(5) * t421 - qJ(6) * t420 - qJD(6) * t197 + t307;
t383 = t174 * t276;
t380 = t242 * t60;
t379 = t247 * t91;
t378 = t250 * t92;
t376 = t187 * pkin(5) + t375;
t113 = t180 * t371 + t242 * t274;
t29 = qJ(6) * t187 + t36;
t374 = t113 - t29;
t373 = t113 - t36;
t372 = -t148 * t334 - t247 * t92;
t367 = t128 * t247;
t366 = t148 * t423;
t365 = t148 * t187;
t364 = t150 * t148;
t363 = t150 * t187;
t362 = t174 * t187;
t360 = t187 * t423;
t356 = t230 * t249;
t355 = t230 * t251;
t354 = t231 * t249;
t228 = pkin(4) * t250 + pkin(3);
t204 = t232 * t228;
t353 = t233 * t251;
t350 = t389 * t251;
t349 = t247 * t249;
t348 = t247 * t251;
t345 = t249 * t233;
t344 = t249 * t250;
t117 = t250 * t128;
t343 = t250 * t251;
t342 = t251 * t231;
t27 = t371 * t59 - t380;
t341 = qJD(6) - t27;
t238 = t243 ^ 2;
t239 = t244 ^ 2;
t338 = t238 + t239;
t327 = t232 * t348;
t316 = t338 * qJD(1) ^ 2;
t210 = t251 * t226;
t314 = t249 * t389 + t210;
t312 = t174 * t250;
t311 = 0.2e1 * t338;
t308 = -g(1) * t356 + g(2) * t355;
t305 = pkin(3) * t232 + pkin(8) * t230;
t159 = t232 * t354 + t353;
t161 = t232 * t342 - t345;
t304 = g(1) * t159 - g(2) * t161;
t160 = t232 * t345 - t342;
t162 = t232 * t353 + t354;
t303 = g(1) * t160 - g(2) * t162;
t300 = -t391 - t393;
t299 = -t391 + t393;
t111 = pkin(4) * t358 - t415;
t115 = t197 * t198;
t72 = -t186 * t198 + t189 * t197;
t295 = t115 * t49 - t72 * t95;
t294 = pkin(5) * t233 + qJ(6) * t231;
t292 = t247 * t69 + t250 * t68;
t287 = -t174 * t424 + t117;
t286 = t49 + t383;
t285 = -t49 + t383;
t175 = t232 * t349 + t343;
t8 = -t242 * t37 + t31 * t371;
t24 = t371 * t54 - t380;
t40 = -t242 * t70 + t371 * t63;
t279 = -t189 * t250 - t198 * t335;
t278 = -t413 * t49 + t421 * t95;
t277 = -pkin(8) * t128 + t129 * t174;
t202 = -qJDD(1) * t226 + qJDD(2);
t275 = g(1) * t161 + g(2) * t159 + t231 * t396 + t3;
t146 = t209 * t242 + t318 * t388;
t273 = -t128 * t146 - t232 * t395 + (g(1) * t353 + g(2) * t345) * t230;
t270 = t288 + t369;
t269 = -t50 + t377;
t264 = pkin(4) * t349 + t251 * t204 + t355 * t388 + t314;
t116 = t413 * t198;
t73 = t198 * t183 + t189 * t413;
t263 = t115 * t50 + t116 * t49 - t276 * t72 - t73 * t95;
t262 = g(1) * t162 + g(2) * t160 + t230 * t395 - t4;
t261 = t26 * t174 + t275;
t259 = t115 * t128 - t174 * t72 + t190 * t95 - t281 * t49;
t48 = pkin(4) * t92 + qJDD(5) + t77;
t258 = t350 - t388 * t356 + pkin(4) * t348 + (-t226 - t204) * t249;
t257 = t311 * t333 - t302;
t256 = -t113 * t95 + t146 * t50 - t147 * t49 - t268;
t108 = qJD(2) * t198 + qJD(3) * t145;
t255 = t48 - t267;
t79 = pkin(4) * t280 + t108;
t225 = -pkin(4) * t371 - pkin(5);
t221 = pkin(4) * t242 + qJ(6);
t219 = pkin(4) * t344;
t181 = t423 ^ 2;
t178 = t232 * t343 + t349;
t177 = -t327 + t344;
t176 = -t232 * t344 + t348;
t133 = -pkin(5) * t413 - qJ(6) * t197 - t228;
t124 = t128 * qJ(6);
t78 = -t128 * t281 + t174 * t190;
t55 = pkin(5) * t115 - qJ(6) * t116 + t111;
t52 = pkin(4) * t150 + pkin(5) * t276 + qJ(6) * t95;
t47 = -qJD(4) * t90 + t315;
t46 = -t145 * t335 + t326;
t39 = pkin(5) * t281 - t40;
t38 = -qJ(6) * t281 + t41;
t34 = t297 - t381;
t21 = qJ(6) * t174 + t25;
t20 = -t174 * pkin(5) + qJD(6) - t24;
t19 = -t72 * pkin(5) + t73 * qJ(6) - t116 * qJD(6) + t79;
t18 = t116 * t50 - t276 * t73;
t17 = t197 * t50 + t276 * t420;
t10 = t116 * t128 - t174 * t73 + t190 * t276 - t281 * t50;
t7 = -t190 * pkin(5) - t8;
t6 = qJ(6) * t190 - qJD(6) * t281 + t9;
t5 = t48 + t409;
t2 = qJDD(6) - t3 - t400;
t1 = qJD(6) * t174 + t124 + t4;
t11 = [0, 0, 0, 0, 0, qJDD(1), t414, t302, 0, 0, t238 * qJDD(1), 0.2e1 * t243 * t330, 0, t239 * qJDD(1), 0, 0, t270 * t244, -t270 * t243, t311 * t410 + t257, pkin(1) * t288 + (t338 * t410 + t257) * qJ(2), -t187 * t189 + t198 * t254, -t198 * t135 - t187 * t190 - t189 * t423 + t254 * t281, -qJD(3) * t189 + qJDD(3) * t198, -t135 * t281 - t190 * t423, -qJD(3) * t190 + qJDD(3) * t281, 0, -qJD(3) * t108 + qJDD(3) * t415 - t135 * t226 + t190 * t205 - t202 * t281 + t232 * t414, -t107 * qJD(3) - t145 * qJDD(3) - t205 * t189 + t202 * t198 - t226 * t254 + t308, t107 * t423 + t108 * t187 - t145 * t135 + t138 * t189 - t139 * t190 - t82 * t198 - t254 * t415 + t81 * t281 - t302, t81 * t145 + t139 * t107 + t82 * t415 - t138 * t108 - t202 * t226 - g(1) * (-t226 * t249 + t350) - g(2) * t314, t150 * t279 - t357 * t91 (t148 * t250 + t150 * t247) * t189 + (t379 - t378 + (t148 * t247 - t150 * t250) * qJD(4)) * t198, t117 * t198 + t150 * t190 + t174 * t279 + t281 * t91, t148 * t280 + t358 * t92, -t128 * t358 - t148 * t190 - t174 * t280 + t281 * t92, t78, -g(1) * t176 - g(2) * t178 + t108 * t148 + t128 * t89 + t129 * t280 + t174 * t47 + t190 * t68 - t23 * t281 + t358 * t77 - t415 * t92, -g(1) * t175 - g(2) * t177 + t108 * t150 - t128 * t90 + t129 * t279 - t174 * t46 - t190 * t69 + t22 * t281 + t357 * t77 + t415 * t91, -t148 * t46 - t150 * t47 + t89 * t91 - t90 * t92 + t292 * t189 + (-t22 * t247 - t23 * t250 + (t247 * t68 - t250 * t69) * qJD(4)) * t198 - t308, -g(2) * t210 + t129 * t108 - t77 * t415 + t22 * t90 + t23 * t89 + t69 * t46 + t68 * t47 + (-g(1) * t389 - g(2) * t305) * t251 + (-g(1) * (-t226 - t305) - g(2) * t389) * t249, t18, -t263, t10, t295, -t259, t78, t111 * t49 + t115 * t48 + t128 * t40 + t174 * t8 + t190 * t24 - t281 * t3 - t72 * t93 + t79 * t95 + t303, t111 * t50 + t116 * t48 - t128 * t41 - t174 * t9 - t190 * t25 + t276 * t79 + t281 * t4 - t73 * t93 - t304, -t115 * t4 - t116 * t3 + t24 * t73 + t25 * t72 - t276 * t8 - t40 * t50 - t41 * t49 - t9 * t95 - t308, -g(1) * t258 - g(2) * t264 + t48 * t111 + t24 * t8 + t25 * t9 + t3 * t40 + t4 * t41 + t93 * t79, t18, t10, t263, t78, t259, t295, t115 * t5 - t128 * t39 - t174 * t7 + t19 * t95 - t190 * t20 + t2 * t281 - t42 * t72 + t49 * t55 + t303, -t1 * t115 + t116 * t2 - t20 * t73 + t21 * t72 + t276 * t7 - t38 * t49 + t39 * t50 - t6 * t95 - t308, -t1 * t281 - t116 * t5 + t128 * t38 + t174 * t6 - t19 * t276 + t190 * t21 + t42 * t73 - t50 * t55 + t304, t1 * t38 + t21 * t6 + t5 * t55 + t42 * t19 + t2 * t39 + t20 * t7 - g(1) * (-pkin(5) * t160 - qJ(6) * t159 + t258) - g(2) * (pkin(5) * t162 + qJ(6) * t161 + t264); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330, t331, -t316, -qJ(2) * t316 - t288, 0, 0, 0, 0, 0, 0, t293 + 0.2e1 * t411, t271 + 0.2e1 * t427, -t181 - t403, t138 * t187 - t139 * t423 + t202 - t414, 0, 0, 0, 0, 0, 0, t287 - t365, -t250 * t404 - t363 - t367 (t91 + t366) * t250 + t417 + t372, -t129 * t187 + t291 * t247 + t250 * t418 - t414, 0, 0, 0, 0, 0, 0, t433, -t428, t429, -t187 * t93 + t197 * t4 - t24 * t421 + t25 * t420 + t3 * t413 - t414, 0, 0, 0, 0, 0, 0, t433, t429, t428, t1 * t197 - t187 * t42 - t2 * t413 + t20 * t421 + t21 * t420 - t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360, -t181 + t403, t271, t360, -t293, qJDD(3), qJD(3) * t139 - t187 * t205 + t267 + t82, -t423 * t205 + (t138 + t182) * qJD(3) + t268 + t325, 0, 0, t150 * t312 - t379 (-t91 + t366) * t250 - t417 + t372, t174 * t312 - t363 + t367, t148 * t313 - t378, t287 + t365, -t362, -pkin(3) * t92 - t139 * t148 - t174 * t83 - t187 * t68 + t277 * t247 + t250 * t431, pkin(3) * t91 - t139 * t150 + t174 * t84 + t187 * t69 - t247 * t431 + t277 * t250, t148 * t84 + t150 * t83 + ((qJD(4) * t150 - t92) * pkin(8) + t291) * t250 + ((qJD(4) * t148 - t91) * pkin(8) - t418) * t247 - t268, -t129 * t139 - t68 * t83 - t69 * t84 + t260 * pkin(3) + (-qJD(4) * t292 + t22 * t250 - t23 * t247 - t268) * pkin(8), t17, t430, t34, t278, t432, -t362, -t174 * t375 - t187 * t24 - t228 * t49 + t307 * t95 - t413 * t48 + t421 * t93 + t273, -t174 * t373 + t187 * t25 + t197 * t48 - t228 * t50 + t276 * t307 + t420 * t93 - t425, -t197 * t3 - t24 * t420 - t25 * t421 + t276 * t375 + t36 * t95 + t4 * t413 + t256, t4 * t147 - t3 * t146 - t48 * t228 - g(3) * (t230 * t388 + t204) + t307 * t93 + t373 * t25 - t375 * t24 + t302 * (t228 * t230 - t232 * t388) t17, t34, -t430, -t362, -t432, t278, t133 * t49 - t174 * t376 + t187 * t20 + t387 * t95 - t413 * t5 + t42 * t421 + t273, t1 * t413 + t197 * t2 + t20 * t420 - t21 * t421 + t276 * t376 + t29 * t95 + t256, -t133 * t50 + t174 * t374 - t187 * t21 - t197 * t5 - t276 * t387 - t42 * t420 + t425, -g(3) * t204 + t1 * t147 + t5 * t133 + t2 * t146 + t387 * t42 + t374 * t21 + t376 * t20 + (-g(3) * t294 - t302 * t388) * t232 + (-g(3) * t388 + t302 * (t228 + t294)) * t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, -t148 ^ 2 + t150 ^ 2, t148 * t174 - t91, -t364, t150 * t174 + t247 * t419 - t296, t128, -t130 * t334 - g(1) * t177 + g(2) * t175 - t129 * t150 + t384 + t75 + (-qJD(4) * t106 + t396 - t76) * t247, g(1) * t178 - g(2) * t176 + t129 * t148 + t250 * t396 - t291, 0, 0, t422, t299, t32, -t422, t285, t128, -t93 * t276 + (t128 * t371 - t150 * t95) * pkin(4) + t261, t174 * t27 + t93 * t95 + (-t128 * t242 - t150 * t276) * pkin(4) + t262, t25 * t276 - t394 + (-t242 * t49 - t371 * t50) * pkin(4) + (-t24 + t27) * t95, -g(1) * t219 + t24 * t26 - t25 * t27 + (g(2) * t343 - t93 * t150 + t4 * t242 + t247 * t268 + t3 * t371) * pkin(4), t422, t32, -t299, t128, -t285, -t422, -t52 * t95 + (pkin(5) - t225) * t128 + t261 + t406, t21 * t276 - t221 * t49 + t225 * t50 - t394 + (t20 - t341) * t95, t128 * t221 - t42 * t95 + t52 * t276 + t124 + (0.2e1 * qJD(6) - t27) * t174 - t262, t1 * t221 + t2 * t225 - t42 * t52 - t20 * t26 - g(1) * (-pkin(4) * t327 - pkin(5) * t161 + qJ(6) * t162 + t219) - g(2) * (-pkin(4) * t175 - pkin(5) * t159 + qJ(6) * t160) + t341 * t21 - (-pkin(4) * t247 - pkin(5) * t231 + qJ(6) * t233) * t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, -t269, t300, t24 * t276 + t25 * t95 + t255, 0, 0, 0, 0, 0, 0, t286, t300, t269, -t20 * t276 + t21 * t95 + t255 + t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(4) - t293 - t411 + t422, t32, -t404 - t393, -t174 * t21 - t275 - t400 - t406;];
tau_reg  = t11;
