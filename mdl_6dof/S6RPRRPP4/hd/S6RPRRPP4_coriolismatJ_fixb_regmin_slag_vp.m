% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:40:50
% EndTime: 2019-03-09 04:41:09
% DurationCPUTime: 10.32s
% Computational Cost: add. (17100->604), mult. (33797->780), div. (0->0), fcn. (38982->8), ass. (0->428)
t411 = cos(pkin(10));
t413 = sin(qJ(4));
t579 = t411 * t413;
t409 = sin(pkin(10));
t415 = cos(qJ(4));
t584 = t409 * t415;
t383 = t579 + t584;
t374 = t383 ^ 2;
t578 = t411 * t415;
t379 = t409 * t413 - t578;
t301 = t379 ^ 2 + t374;
t701 = qJD(5) * t301;
t410 = sin(pkin(9));
t643 = cos(qJ(3));
t519 = t643 * t410;
t412 = cos(pkin(9));
t414 = sin(qJ(3));
t576 = t414 * t412;
t385 = t519 + t576;
t205 = t383 * t385;
t284 = t413 * t385;
t574 = t415 * t385;
t272 = -t284 * t409 + t411 * t574;
t482 = t205 * t379 + t383 * t272;
t700 = qJD(1) * t482 + qJD(3) * t301;
t692 = -qJ(5) - pkin(8);
t391 = t692 * t415;
t499 = t692 * t413;
t319 = -t391 * t409 - t411 * t499;
t659 = t319 / 0.2e1;
t657 = -t379 / 0.2e1;
t653 = -t383 / 0.2e1;
t652 = t383 / 0.2e1;
t387 = t411 * t391;
t491 = t409 * t499;
t689 = -t387 + t491;
t699 = -t689 / 0.2e1;
t658 = -t319 / 0.2e1;
t502 = t658 + t659;
t424 = t205 * t502;
t381 = t414 * t410 - t412 * t643;
t268 = t383 * t381;
t282 = t413 * t381;
t333 = t409 * t282;
t287 = t415 * t381;
t521 = t411 * t287;
t271 = t333 - t521;
t483 = -t268 * t383 - t379 * t271;
t669 = t482 * qJD(5);
t698 = qJD(2) * t483 + t669;
t484 = -t205 * t271 - t268 * t272;
t684 = qJD(1) * t484;
t697 = -qJD(3) * t483 - t684;
t542 = t205 * qJD(1);
t267 = t272 ^ 2;
t691 = t205 ^ 2 + t267;
t696 = qJD(1) * t691 + qJD(3) * t482;
t695 = qJD(2) * t484 + qJD(5) * t691;
t694 = 0.2e1 * t413;
t400 = -pkin(2) * t412 - pkin(1);
t490 = pkin(3) * t381 - pkin(8) * t385;
t280 = t400 + t490;
t635 = pkin(7) + qJ(2);
t389 = t635 * t410;
t376 = t414 * t389;
t390 = t635 * t412;
t378 = t643 * t390;
t317 = t378 - t376;
t577 = t413 * t317;
t175 = -t415 * t280 + t577;
t151 = -qJ(5) * t574 - t175;
t138 = t381 * pkin(4) + t151;
t137 = t409 * t138;
t575 = t415 * t317;
t152 = t575 + (-qJ(5) * t385 + t280) * t413;
t581 = t411 * t152;
t88 = t581 + t137;
t693 = t88 / 0.2e1;
t593 = t379 * qJ(6);
t636 = t413 * pkin(4);
t639 = t383 * pkin(5);
t290 = t593 + t636 + t639;
t661 = t290 / 0.2e1;
t647 = t409 / 0.2e1;
t373 = t381 ^ 2;
t375 = t385 ^ 2;
t690 = -t375 - t373;
t529 = t375 - t373;
t600 = t271 * qJ(6);
t642 = t268 * pkin(5);
t688 = -t600 / 0.2e1 - t642 / 0.2e1;
t590 = t383 * t205;
t508 = t590 / 0.2e1;
t570 = -t576 / 0.2e1 - t519 / 0.2e1;
t592 = t379 * t272;
t419 = t508 - t592 / 0.2e1 - t570;
t687 = qJD(1) * t419;
t685 = qJD(1) * t483;
t683 = qJD(2) * t419;
t509 = t592 / 0.2e1;
t421 = -t590 / 0.2e1 + t509 - t570;
t682 = qJD(2) * t421;
t425 = t383 * t502;
t681 = qJD(2) * t425;
t678 = qJD(3) * t425;
t480 = t319 * t383 - t379 * t689;
t676 = qJD(3) * t480;
t672 = qJD(5) * t419;
t671 = qJD(5) * t480;
t670 = t425 * qJD(4);
t535 = t381 * qJD(1);
t668 = -t535 - qJD(4);
t667 = t205 * t699 + t272 * t659;
t608 = t152 * t409;
t87 = t138 * t411 - t608;
t633 = t653 * t87 + t657 * t88;
t591 = t381 * qJ(6);
t70 = t88 + t591;
t71 = -pkin(5) * t381 - t87;
t634 = t652 * t71 + t657 * t70;
t407 = t413 ^ 2;
t408 = t415 ^ 2;
t395 = t408 - t407;
t498 = t574 * t694;
t439 = qJD(1) * t498 - t395 * qJD(3);
t666 = qJD(5) * t421 + (-t268 * t379 + t271 * t383) * qJD(2);
t587 = t409 * t151;
t95 = t581 + t587;
t664 = -t95 / 0.2e1;
t96 = t151 * t411 - t608;
t663 = t96 / 0.2e1;
t401 = -pkin(4) * t415 - pkin(3);
t279 = t379 * pkin(5) - t383 * qJ(6) + t401;
t662 = t279 / 0.2e1;
t660 = t689 / 0.2e1;
t656 = t379 / 0.2e1;
t655 = -t381 / 0.2e1;
t654 = t381 / 0.2e1;
t651 = t385 / 0.2e1;
t506 = -t387 / 0.2e1;
t396 = pkin(4) * t409 + qJ(6);
t650 = -t396 / 0.2e1;
t649 = t396 / 0.2e1;
t399 = -pkin(4) * t411 - pkin(5);
t648 = t399 / 0.2e1;
t646 = -t411 / 0.2e1;
t645 = t411 / 0.2e1;
t644 = -t413 / 0.2e1;
t641 = t272 * pkin(5);
t640 = t381 * pkin(8);
t638 = t385 * pkin(3);
t637 = t385 * pkin(5);
t632 = pkin(4) * qJD(4);
t316 = t643 * t389 + t390 * t414;
t246 = pkin(4) * t284 + t316;
t117 = pkin(5) * t205 - qJ(6) * t272 + t246;
t352 = pkin(4) * t282;
t247 = -t352 + t317;
t118 = t247 - t600 - t642;
t300 = t638 + t640;
t294 = t415 * t300;
t597 = t316 * t413;
t145 = t385 * pkin(4) + qJ(5) * t287 + t294 + t597;
t141 = t409 * t145;
t293 = t413 * t300;
t299 = t316 * t415;
t571 = t299 - t293;
t161 = qJ(5) * t282 - t571;
t158 = t411 * t161;
t94 = t158 + t141;
t79 = t385 * qJ(6) + t94;
t582 = t411 * t145;
t586 = t409 * t161;
t93 = t582 - t586;
t80 = -t93 - t637;
t9 = t117 * t118 + t70 * t79 + t71 * t80;
t627 = t9 * qJD(1);
t626 = t95 * t319;
t625 = t96 * t689;
t511 = t268 * t659;
t456 = t279 * t651 - t511;
t463 = t652 * t79 + t656 * t80;
t599 = t271 * t689;
t31 = -t599 / 0.2e1 - t456 + t463;
t622 = qJD(1) * t31;
t185 = t599 / 0.2e1;
t442 = t401 * t651 + t185 - t511;
t461 = t653 * t94 + t656 * t93;
t34 = t442 + t461;
t621 = qJD(1) * t34;
t37 = -t205 * t70 + t272 * t71;
t620 = qJD(1) * t37;
t528 = pkin(4) * t574;
t601 = t205 * qJ(6);
t142 = t528 + t601 + t641;
t611 = t117 * t272;
t38 = t142 * t205 - t381 * t95 + t611;
t619 = qJD(1) * t38;
t39 = t117 * t205 - t142 * t272 + t381 * t96;
t618 = qJD(1) * t39;
t40 = -t205 * t88 - t272 * t87;
t617 = qJD(1) * t40;
t45 = t381 * t70 - t611;
t616 = qJD(1) * t45;
t10 = t117 * t142 + t70 * t96 + t71 * t95;
t613 = t10 * qJD(1);
t11 = -t205 * t79 + t268 * t70 + t271 * t71 + t272 * t80;
t612 = t11 * qJD(1);
t12 = (-t70 + t95) * t272 + (-t71 - t96) * t205;
t610 = t12 * qJD(1);
t15 = -t205 * t94 + t268 * t88 - t271 * t87 - t272 * t93;
t609 = t15 * qJD(1);
t16 = (-t88 + t95) * t272 + (t87 - t96) * t205;
t607 = t16 * qJD(1);
t19 = t246 * t247 + t87 * t93 + t88 * t94;
t606 = t19 * qJD(1);
t20 = t246 * t528 - t87 * t95 + t88 * t96;
t605 = t20 * qJD(1);
t21 = -t117 * t271 - t118 * t272 + t381 * t79 + t385 * t70;
t604 = t21 * qJD(1);
t22 = -t117 * t268 + t118 * t205 - t381 * t80 - t385 * t71;
t603 = t22 * qJD(1);
t29 = t117 * t385 - t268 * t71 + t271 * t70;
t598 = t29 * qJD(1);
t36 = t246 * t385 + t268 * t87 + t271 * t88;
t594 = t36 * qJD(1);
t589 = t396 * t379;
t588 = t399 * t383;
t585 = t409 * t379;
t457 = t117 * t652 + t272 * t662;
t426 = t654 * t689 - t457;
t452 = t586 / 0.2e1 - t582 / 0.2e1;
t428 = -t637 / 0.2e1 + t452;
t41 = -t426 + t428;
t583 = t41 * qJD(1);
t580 = t411 * t383;
t46 = t294 * t381 + (-t175 + t577) * t385;
t573 = t46 * qJD(1);
t176 = t413 * t280 + t575;
t47 = (-t176 + t575) * t385 + (t571 - t299) * t381;
t572 = t47 * qJD(1);
t392 = t410 ^ 2 + t412 ^ 2;
t116 = -t176 * t381 + t316 * t574;
t567 = qJD(1) * t116;
t133 = t271 * t381 - t272 * t385;
t564 = qJD(1) * t133;
t136 = t205 * t385 + t268 * t381;
t563 = qJD(1) * t136;
t237 = t529 * t413;
t562 = qJD(1) * t237;
t238 = t690 * t413;
t561 = qJD(1) * t238;
t239 = t529 * t415;
t560 = qJD(1) * t239;
t559 = qJD(1) * t272;
t558 = qJD(2) * t415;
t557 = qJD(3) * t383;
t556 = qJD(3) * t415;
t555 = qJD(4) * t379;
t554 = qJD(4) * t413;
t553 = qJD(4) * t415;
t552 = qJD(5) * t272;
t551 = qJD(5) * t381;
t550 = qJD(6) * t205;
t115 = t175 * t381 - t284 * t316;
t549 = t115 * qJD(1);
t449 = -t584 / 0.2e1 - t579 / 0.2e1;
t177 = (t653 + t449) * t381;
t547 = t177 * qJD(1);
t178 = (t652 + t449) * t381;
t546 = t178 * qJD(1);
t507 = t381 * t652;
t179 = t282 * t645 + t287 * t647 + t507;
t545 = t179 * qJD(1);
t180 = -t521 / 0.2e1 + t333 / 0.2e1 + t379 * t654;
t174 = t180 * qJD(1);
t181 = -t333 / 0.2e1 + (t578 / 0.2e1 + t656) * t381;
t544 = t181 * qJD(1);
t201 = t385 * t379;
t543 = t201 * qJD(1);
t541 = t529 * qJD(1);
t540 = t282 * qJD(1);
t539 = t284 * qJD(1);
t538 = t287 * qJD(1);
t292 = t690 * t415;
t537 = t292 * qJD(1);
t536 = t570 * qJD(1);
t365 = t381 * qJD(3);
t363 = t381 * qJD(6);
t367 = t383 * qJD(4);
t534 = t383 * qJD(6);
t533 = t385 * qJD(1);
t532 = t385 * qJD(3);
t388 = t392 * qJ(2);
t531 = t388 * qJD(1);
t530 = t392 * qJD(1);
t402 = t636 / 0.2e1;
t526 = t648 - pkin(5) / 0.2e1;
t525 = t70 / 0.2e1 + t664;
t524 = t693 + t664;
t523 = t663 + t71 / 0.2e1;
t522 = t663 - t87 / 0.2e1;
t520 = -t625 / 0.2e1;
t518 = t205 * t559;
t517 = t413 * t556;
t516 = t381 * t553;
t515 = t381 * t533;
t514 = t381 * t532;
t513 = t413 * t553;
t512 = t415 * t533;
t505 = -t574 / 0.2e1;
t504 = -t137 / 0.2e1 - t581 / 0.2e1;
t503 = t293 / 0.2e1 - t299 / 0.2e1;
t500 = t650 - qJ(6) / 0.2e1;
t497 = t268 * t689 + t271 * t319;
t226 = t205 * t535;
t496 = qJD(3) * t180 + t226;
t339 = t528 / 0.2e1;
t495 = t96 * t652 + t656 * t95;
t494 = qJD(1) * t400 + qJD(2);
t489 = qJD(3) * t498;
t487 = t581 / 0.2e1 + t587 / 0.2e1;
t486 = -t352 / 0.2e1 - t376 / 0.2e1 + t378 / 0.2e1;
t453 = -t268 * t650 + t271 * t648;
t5 = t379 * t523 + t383 * t525 + t424 + t453;
t485 = t5 * qJD(1);
t455 = -t268 * t648 + t271 * t649;
t13 = t379 * t525 - t383 * t523 + t455;
t478 = t13 * qJD(1) - t678;
t438 = (-t268 * t646 + t271 * t647) * pkin(4);
t17 = t379 * t524 - t383 * t522 + t438;
t477 = t17 * qJD(1) - t678;
t143 = t279 * t383 + t290 * t379;
t416 = t142 * t656 + t205 * t661 + t655 * t689 + t457;
t28 = t385 * t526 + t416 + t452;
t476 = qJD(1) * t28 + qJD(3) * t143;
t144 = t279 * t379 - t290 * t383;
t417 = t117 * t657 + t142 * t652 - t205 * t662 + t272 * t661 - t319 * t655;
t431 = -t500 * t385 + t141 / 0.2e1 + t158 / 0.2e1;
t25 = t417 + t431;
t475 = -qJD(1) * t25 + qJD(3) * t144;
t422 = t486 - t667;
t23 = t422 - t634 + t688;
t474 = -qJD(1) * t23 + t676;
t32 = t422 - t633;
t473 = -qJD(1) * t32 + t676;
t166 = -t379 * t500 - t383 * t526 + t402;
t89 = -t205 * t500 - t272 * t526 + t339;
t472 = qJD(1) * t89 + qJD(3) * t166;
t471 = t668 * t415;
t451 = -t205 * t647 + t272 * t646;
t131 = (t505 + t451) * pkin(4);
t450 = -t585 / 0.2e1 - t580 / 0.2e1;
t254 = (t644 + t450) * pkin(4);
t470 = qJD(1) * t131 + qJD(3) * t254;
t465 = -qJD(3) * t379 - t542;
t198 = t557 + t559;
t464 = t640 / 0.2e1 + t638 / 0.2e1;
t462 = t648 * t80 + t649 * t79;
t460 = t645 * t93 + t647 * t94;
t423 = t464 * t413 + t299 / 0.2e1;
t111 = t423 + t503;
t459 = pkin(3) * t556 - t111 * qJD(1);
t443 = t464 * t415;
t113 = -t294 / 0.2e1 - t443;
t458 = pkin(3) * t413 * qJD(3) - t113 * qJD(1);
t454 = t509 + t508;
t448 = t385 * t471;
t121 = t454 + t570;
t447 = qJD(1) * t121 + t379 * t557;
t281 = (t407 / 0.2e1 - t408 / 0.2e1) * t385;
t446 = -t281 * qJD(1) + t517;
t445 = -qJD(4) * t570 + t515;
t444 = qJD(3) * t181 + qJD(4) * t205 + t226;
t441 = qJD(1) * t375 * t413 * t415 + t281 * qJD(3);
t291 = t395 * t375;
t440 = t291 * qJD(1) + t489;
t437 = (t268 * t647 + t271 * t646) * pkin(4);
t418 = t117 * t661 + t142 * t662 + t70 * t658 + t71 * t660 + t626 / 0.2e1;
t1 = t520 - t418 + t462;
t97 = t279 * t290;
t436 = -t1 * qJD(1) + t97 * qJD(3) + t681;
t125 = t401 * t636;
t429 = t87 * t660 + t319 * t693 - t626 / 0.2e1;
t3 = t520 + (t246 * t644 + t401 * t505 + t460) * pkin(4) + t429;
t435 = -t3 * qJD(1) + t125 * qJD(3) + t681;
t7 = t379 * t522 + t383 * t524 + t424 + t437;
t434 = t7 * qJD(1);
t315 = t506 + t387 / 0.2e1;
t43 = t381 * t500 + t487 + t504;
t433 = qJD(1) * t43 - qJD(3) * t315 - qJD(4) * t396;
t430 = t486 + t667;
t208 = t267 + t373;
t427 = qJD(1) * t208 + qJD(4) * t381 + t272 * t557;
t420 = t95 * t652 + t96 * t657 + (t660 + t699) * t272 - t424;
t354 = t570 * qJD(3);
t351 = t415 * t532;
t276 = t282 * qJD(4);
t275 = t281 * qJD(4);
t265 = 0.2e1 * t506 + t491;
t253 = pkin(4) * t450 + t402;
t250 = -t540 - t554;
t227 = t272 * t534;
t182 = t381 * t449 + t507;
t173 = qJD(3) * t374 + t383 * t559;
t167 = -t589 / 0.2e1 + t588 / 0.2e1 + t402 + t593 / 0.2e1 + t639 / 0.2e1;
t157 = -t174 - t555;
t130 = pkin(4) * t451 + t339;
t124 = -t454 + t570;
t114 = t597 + t294 / 0.2e1 - t443;
t112 = t423 - t503;
t90 = -t205 * t649 + t272 * t648 + t339 + t601 / 0.2e1 + t641 / 0.2e1;
t74 = t625 / 0.2e1;
t44 = t381 * t649 + t591 / 0.2e1 + t487 - t504;
t42 = t426 + t428;
t35 = t442 - t461;
t33 = t430 + t633;
t30 = t185 + t456 + t463;
t27 = -t399 * t385 / 0.2e1 + t416 - t428;
t26 = -t417 + t431;
t24 = t430 + t634 + t688;
t18 = t438 + t495 + t633;
t14 = t455 + t495 + t634;
t8 = t653 * t88 + t656 * t87 + t420 + t437;
t6 = t653 * t70 + t657 * t71 + t420 + t453;
t4 = pkin(4) * t460 + t246 * t402 + t339 * t401 - t429 + t74;
t2 = t74 + t418 + t462;
t48 = [0, 0, 0, 0, 0, t392 * qJD(2), t388 * qJD(2), -t514, -t529 * qJD(3), 0, 0, 0, t400 * t532, -t400 * t365, -t375 * t513 - t408 * t514, -t291 * qJD(4) + t381 * t489, -t381 * t385 * t554 + qJD(3) * t239, -t237 * qJD(3) - t385 * t516, t514, -qJD(2) * t238 + qJD(3) * t46 + qJD(4) * t116, -qJD(2) * t292 + qJD(3) * t47 + qJD(4) * t115, qJD(3) * t15 + qJD(4) * t16 + t695, qJD(2) * t36 + qJD(3) * t19 + qJD(4) * t20 + qJD(5) * t40, t136 * qJD(2) + t22 * qJD(3) + t38 * qJD(4) + (-t550 - t551) * t272, qJD(3) * t11 + qJD(4) * t12 - t205 * t363 + t695, qJD(2) * t133 + qJD(3) * t21 + qJD(4) * t39 + qJD(6) * t208 - t205 * t551, qJD(2) * t29 + qJD(3) * t9 + qJD(4) * t10 + qJD(5) * t37 + qJD(6) * t45; 0, 0, 0, 0, 0, t530, t531, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t561, -t537, t684, t35 * qJD(3) + t18 * qJD(4) + t594 + t666, -qJD(4) * t178 + t563, t684, -qJD(4) * t181 + t564, t30 * qJD(3) + t14 * qJD(4) + t182 * qJD(6) + t598 + t666; 0, 0, 0, 0, 0, 0, 0, -t515, -t541, -t365, -t532, 0, -qJD(3) * t317 + t400 * t533, qJD(3) * t316 - t400 * t535, -t275 + (-t408 * t533 - t517) * t381, t381 * t439 - 0.2e1 * t385 * t513, t413 * t532 + t560, t351 - t562, t445, t573 + (t413 * t490 - t575) * qJD(3) + t114 * qJD(4), t572 + (t415 * t490 + t577) * qJD(3) + t112 * qJD(4), t609 + (-t379 * t94 - t383 * t93 + t497) * qJD(3) + t8 * qJD(4) + t669, t606 + t35 * qJD(2) + (t247 * t401 - t319 * t93 + t689 * t94) * qJD(3) + t4 * qJD(4) + t33 * qJD(5), t603 + (t118 * t379 - t268 * t279 - t319 * t385) * qJD(3) + t27 * qJD(4) - t179 * qJD(5) + t124 * qJD(6), t612 + (-t379 * t79 + t383 * t80 + t497) * qJD(3) + t6 * qJD(4) + t669 - t181 * qJD(6), t604 + (-t118 * t383 - t271 * t279 + t385 * t689) * qJD(3) + t26 * qJD(4) - t180 * qJD(5) + t227, t627 + t30 * qJD(2) + (t118 * t279 + t319 * t80 + t689 * t79) * qJD(3) + t2 * qJD(4) + t24 * qJD(5) + t42 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441, -t440, t668 * t284, t448, -t354, qJD(3) * t114 - qJD(4) * t176 + t567, qJD(3) * t112 + qJD(4) * t175 + t549, t607 + t8 * qJD(3) + (t205 * t411 - t272 * t409) * t632, t605 + t18 * qJD(2) + t4 * qJD(3) + t130 * qJD(5) + (t409 * t96 - t411 * t95) * t632, -qJD(2) * t178 + qJD(3) * t27 - qJD(4) * t95 + t619, t610 + t6 * qJD(3) + (-t205 * t399 - t272 * t396) * qJD(4) - t550, -qJD(2) * t181 + qJD(3) * t26 + qJD(4) * t96 + t363 + t618, t613 + t14 * qJD(2) + t2 * qJD(3) + (t396 * t96 + t399 * t95) * qJD(4) + t90 * qJD(5) + t44 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t696, qJD(3) * t33 + qJD(4) * t130 + t617 + t682, -qJD(3) * t179 - t272 * t535, t696, -t496, qJD(3) * t24 + qJD(4) * t90 + t620 + t682; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t124 - t518, -t444, t427, qJD(2) * t182 + qJD(3) * t42 + qJD(4) * t44 + t616; 0, 0, 0, 0, 0, -t530, -t531, 0, 0, 0, 0, 0, t532, -t365, 0, 0, 0, 0, 0, -t276 + t351 + t561, -t284 * qJD(3) - t516 + t537, t697, -qJD(3) * t34 - qJD(4) * t17 - t594 - t672, -qJD(3) * t201 - qJD(4) * t179 - t563, t697, qJD(3) * t205 - qJD(4) * t180 - t564, qJD(3) * t31 - qJD(4) * t13 - qJD(6) * t177 - t598 - t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533, -t535, 0, 0, 0, 0, 0, t512, -t539, -t685, -t621 + t670, -t543, -t685, t542, t622 + t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, t471, 0 (-t580 - t585) * t632 - t477, -t367 - t545, 0, t157 (t588 - t589) * qJD(4) + t534 - t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t687, 0, 0, 0, -t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367 - t547; 0, 0, 0, 0, 0, 0, 0, t515, t541, 0, 0, 0, -t494 * t385, t494 * t381, t408 * t515 - t275, t448 * t694, qJD(4) * t287 - t560, -t276 + t562, -t445, t113 * qJD(4) - t385 * t558 - t573, qJD(2) * t284 + qJD(4) * t111 - t572, -qJD(4) * t7 - t609 + t698, qJD(2) * t34 - qJD(4) * t3 - qJD(5) * t32 - t606, qJD(2) * t201 + qJD(4) * t28 - qJD(5) * t178 - qJD(6) * t121 - t603, -qJD(4) * t5 - qJD(6) * t180 - t612 + t698, -qJD(2) * t205 - qJD(4) * t25 - qJD(5) * t181 + t227 - t604, -qJD(2) * t31 - qJD(4) * t1 - qJD(5) * t23 - qJD(6) * t41 - t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t533, t535, 0, 0, 0, 0, 0, -t512, t539, t685, t621 + t670, t543, t685, -t542, -t622 + t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, t395 * qJD(4), 0, 0, 0, -pkin(3) * t554, -pkin(3) * t553, t701, qJD(4) * t125 + t671, qJD(4) * t143 - t379 * t534, t701, qJD(4) * t144 + qJD(6) * t374, qJD(4) * t97 - t279 * t534 + t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, -t439, t538 + t553, t250, t536, -pkin(8) * t553 - t458, pkin(8) * t554 - t459 (t379 * t411 - t383 * t409) * t632 - t434, t253 * qJD(5) + (-t319 * t409 - t411 * t689) * t632 + t435, -qJD(4) * t689 + t476 (-t379 * t399 - t383 * t396) * qJD(4) - qJD(6) * t379 - t485, -qJD(4) * t319 + t475 (-t319 * t396 + t399 * t689) * qJD(4) + t167 * qJD(5) + t265 * qJD(6) + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t700, qJD(4) * t253 + t473, -t546, t700, -t544, qJD(4) * t167 + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t447, t157, t173, qJD(4) * t265 - t279 * t557 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, t440, -qJD(3) * t287 + t413 * t515, t282 * qJD(3) + t381 * t512, -t354, qJD(2) * t282 - qJD(3) * t113 - t567, -t111 * qJD(3) + t381 * t558 - t549, qJD(3) * t7 - t607, qJD(2) * t17 + qJD(3) * t3 + qJD(5) * t131 - t605, qJD(2) * t179 - qJD(3) * t28 - t552 - t619, qJD(3) * t5 - t610, qJD(2) * t180 + qJD(3) * t25 - qJD(5) * t205 + t363 - t618, qJD(2) * t13 + qJD(3) * t1 - qJD(5) * t89 - qJD(6) * t43 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t540, t415 * t535, 0, t477, t545, 0, t174, t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, t439, -t538, t540, -t536, t458, t459, t434, qJD(5) * t254 - t435, -qJD(5) * t383 - t476, t485, -qJD(5) * t379 - t475, -qJD(5) * t166 + qJD(6) * t315 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t396 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, -t198, 0, t465, -t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t668, -t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t696, qJD(3) * t32 - qJD(4) * t131 - t617 + t683, t178 * qJD(3) - t272 * t668, -t696, t444, qJD(3) * t23 + qJD(4) * t89 - qJD(6) * t272 - t620 + t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t687, 0, 0, 0, t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t700, -qJD(4) * t254 - t473, t367 + t546, -t700, t544 + t555, qJD(4) * t166 - t474 - t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, t198, 0, -t465, t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t121 + t518, t496, -t427, qJD(2) * t177 + qJD(3) * t41 + qJD(4) * t43 + t552 - t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, t174, -t173, t583 - t315 * qJD(4) + (qJD(3) * t279 + qJD(5)) * t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t668, t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t48;
