% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPP4_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:40:47
% EndTime: 2019-03-09 04:40:55
% DurationCPUTime: 3.06s
% Computational Cost: add. (4648->258), mult. (10795->447), div. (0->0), fcn. (10581->8), ass. (0->136)
t110 = sin(qJ(4));
t105 = t110 ^ 2;
t112 = cos(qJ(4));
t106 = t112 ^ 2;
t198 = (t105 - t106) * qJD(4);
t108 = sin(pkin(9));
t109 = cos(pkin(9));
t111 = sin(qJ(3));
t193 = cos(qJ(3));
t130 = -t111 * t108 + t109 * t193;
t187 = pkin(7) + qJ(2);
t92 = t187 * t108;
t93 = t187 * t109;
t132 = -t111 * t93 - t193 * t92;
t113 = qJD(2) * t130 + qJD(3) * t132;
t100 = -t109 * pkin(2) - pkin(1);
t90 = t108 * t193 + t111 * t109;
t127 = -pkin(3) * t130 - pkin(8) * t90 + t100;
t209 = -qJD(4) * t127 - t113;
t125 = t130 * qJD(3);
t119 = t110 * t125;
t165 = qJD(4) * t112;
t203 = t90 * t165 + t119;
t107 = sin(pkin(10));
t172 = cos(pkin(10));
t116 = t172 * t125;
t118 = t112 * t125;
t144 = qJD(4) * t172;
t166 = qJD(4) * t110;
t83 = -t107 * t166 + t112 * t144;
t28 = -t107 * t118 - t110 * t116 - t83 * t90;
t146 = t172 * t110;
t89 = t107 * t112 + t146;
t51 = t89 * t90;
t185 = t89 * t28 - t83 * t51;
t169 = t107 * t110;
t202 = t172 * t112 - t169;
t180 = t110 * t90;
t29 = t203 * t107 - t112 * t116 + t144 * t180;
t52 = t202 * t90;
t82 = t89 * qJD(4);
t205 = t202 * t29 + t52 * t82;
t208 = t205 - t185;
t207 = t205 + t185;
t206 = -0.4e1 * t90;
t204 = -t90 * t166 + t118;
t68 = -t111 * t92 + t193 * t93;
t44 = qJD(2) * t90 + qJD(3) * t68;
t201 = t44 * t110 - t132 * t165;
t200 = t44 * t112 + t132 * t166;
t84 = t90 * qJD(3);
t199 = -t110 * t84 + t130 * t165;
t57 = t112 * t84 + t130 * t166;
t115 = t84 * pkin(3) - pkin(8) * t125;
t15 = -t110 * t115 + t112 * t209 + t68 * t166;
t16 = t110 * t209 + t112 * t115 - t68 * t165;
t197 = t15 * t110 - t16 * t112;
t183 = -t202 * t83 + t82 * t89;
t195 = 0.2e1 * t84;
t194 = 2 * qJD(6);
t154 = qJD(4) * t90 * qJ(5);
t164 = t110 * qJD(5);
t10 = -qJ(5) * t119 - t112 * t154 - t90 * t164 - t15;
t163 = t112 * qJD(5);
t8 = t84 * pkin(4) - qJ(5) * t118 + t110 * t154 - t90 * t163 + t16;
t4 = t172 * t10 + t107 * t8;
t192 = pkin(4) * t107;
t191 = t132 * t44;
t189 = t202 * t82;
t186 = -qJ(5) - pkin(8);
t177 = t112 * t90;
t32 = -t110 * t68 + t112 * t127;
t23 = -pkin(4) * t130 - qJ(5) * t177 + t32;
t33 = t110 * t127 + t112 * t68;
t27 = -qJ(5) * t180 + t33;
t14 = t107 * t23 + t172 * t27;
t171 = qJD(6) * t130;
t170 = qJD(6) * t89;
t162 = -0.2e1 * t51 * t28;
t161 = -0.2e1 * t189;
t60 = t130 * t195;
t160 = t84 * qJ(6) + t4;
t159 = -0.2e1 * pkin(3) * qJD(4);
t102 = pkin(4) * t166;
t101 = -pkin(4) * t112 - pkin(3);
t151 = t172 * pkin(4);
t149 = t110 * t165;
t3 = -t107 * t10 + t172 * t8;
t147 = qJD(4) * t186;
t126 = t112 * t147 - t164;
t81 = t110 * t147 + t163;
t48 = t107 * t81 - t172 * t126;
t49 = t107 * t126 + t172 * t81;
t94 = t186 * t112;
t69 = -t107 * t94 - t186 * t146;
t70 = t186 * t169 - t172 * t94;
t148 = t48 * t69 + t70 * t49;
t85 = t90 ^ 2;
t143 = t85 * t149;
t45 = pkin(4) * t180 - t132;
t142 = 0.2e1 * (t108 ^ 2 + t109 ^ 2) * qJD(2);
t140 = t28 * t52 + t29 * t51;
t139 = t202 * t28 + t51 * t82;
t138 = -t130 * t28 - t51 * t84;
t136 = t130 * t48 - t69 * t84;
t135 = -t130 * t49 + t70 * t84;
t134 = -t130 * t82 - t202 * t84;
t36 = -t130 * t83 + t84 * t89;
t66 = t89 * t83;
t133 = 0.2e1 * t66 - 0.2e1 * t189;
t13 = -t107 * t27 + t172 * t23;
t129 = t70 * t28 - t29 * t69 + t48 * t52 - t49 * t51;
t128 = -t202 * t48 + t89 * t49 + t69 * t82 + t83 * t70;
t124 = 0.2e1 * t202 * t49 + 0.2e1 * t48 * t89 + 0.2e1 * t69 * t83 - 0.2e1 * t70 * t82;
t123 = 0.2e1 * t125;
t121 = t105 * t125;
t120 = t106 * t125;
t117 = t110 * t118;
t114 = -t16 * t110 - t15 * t112 + (-t110 * t33 - t112 * t32) * qJD(4);
t30 = pkin(4) * t203 + t44;
t99 = -t151 - pkin(5);
t96 = qJ(6) + t192;
t61 = 0.2e1 * t66;
t58 = -pkin(5) * t202 - t89 * qJ(6) + t101;
t38 = pkin(5) * t82 - qJ(6) * t83 + t102 - t170;
t37 = t198 * t90 - t117;
t20 = pkin(5) * t51 - qJ(6) * t52 + t45;
t19 = -0.2e1 * t52 * t29;
t18 = -t29 * t89 + t52 * t83;
t17 = 0.2e1 * t130 * t29 + 0.2e1 * t52 * t84;
t12 = pkin(5) * t130 - t13;
t11 = -qJ(6) * t130 + t14;
t5 = -t28 * pkin(5) + t29 * qJ(6) - t52 * qJD(6) + t30;
t2 = -pkin(5) * t84 - t3;
t1 = t160 - t171;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, qJ(2) * t142, t90 * t123, 0.2e1 * t125 * t130 - 0.2e1 * t90 * t84, 0, -t60, 0, 0, t100 * t195, t100 * t123, 0.2e1 * t113 * t130 - 0.2e1 * t125 * t132 + 0.2e1 * t44 * t90 - 0.2e1 * t68 * t84, 0.2e1 * t113 * t68 - 0.2e1 * t191, 0.2e1 * t120 * t90 - 0.2e1 * t143, t117 * t206 + 0.2e1 * t198 * t85, -0.2e1 * t130 * t204 + 0.2e1 * t84 * t177, 0.2e1 * t121 * t90 + 0.2e1 * t143, 0.2e1 * t130 * t203 - 0.2e1 * t84 * t180, -t60, -0.2e1 * t119 * t132 - 0.2e1 * t130 * t16 + 0.2e1 * t201 * t90 + 0.2e1 * t32 * t84, -0.2e1 * t118 * t132 - 0.2e1 * t130 * t15 + 0.2e1 * t200 * t90 - 0.2e1 * t33 * t84, 0.2e1 * t197 * t90 - 0.2e1 * t203 * t33 - 0.2e1 * t204 * t32, -0.2e1 * t15 * t33 + 0.2e1 * t16 * t32 - 0.2e1 * t191, t19, 0.2e1 * t140, t17, t162, 0.2e1 * t138, -t60, 0.2e1 * t13 * t84 - 0.2e1 * t130 * t3 - 0.2e1 * t28 * t45 + 0.2e1 * t30 * t51, 0.2e1 * t130 * t4 - 0.2e1 * t14 * t84 - 0.2e1 * t29 * t45 + 0.2e1 * t30 * t52, 0.2e1 * t13 * t29 + 0.2e1 * t14 * t28 - 0.2e1 * t3 * t52 - 0.2e1 * t4 * t51, 0.2e1 * t13 * t3 + 0.2e1 * t14 * t4 + 0.2e1 * t30 * t45, t19, t17, -0.2e1 * t140, -t60, -0.2e1 * t138, t162, -0.2e1 * t12 * t84 + 0.2e1 * t130 * t2 - 0.2e1 * t20 * t28 + 0.2e1 * t5 * t51, -0.2e1 * t1 * t51 + 0.2e1 * t11 * t28 - 0.2e1 * t12 * t29 + 0.2e1 * t2 * t52, -0.2e1 * t1 * t130 + 0.2e1 * t11 * t84 + 0.2e1 * t20 * t29 - 0.2e1 * t5 * t52, 0.2e1 * t1 * t11 + 0.2e1 * t12 * t2 + 0.2e1 * t20 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, t125, 0, 0, 0, 0, 0, 0, 0, 0, t57, t199 (-t105 - t106) * t125 (-t110 * t32 + t112 * t33) * qJD(4) - t197, 0, 0, 0, 0, 0, 0, -t134, -t36, t207, -t13 * t82 + t14 * t83 + t202 * t3 + t4 * t89, 0, 0, 0, 0, 0, 0, -t134, t207, t36, t1 * t89 + t11 * t83 + t12 * t82 - t2 * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, -t84, 0, -t44, -t113, 0, 0, -t37, t149 * t206 + t120 - t121, -t199, t37, t57, 0, -t203 * pkin(3) + t199 * pkin(8) - t200, -t204 * pkin(3) - t57 * pkin(8) + t201, t114, -t44 * pkin(3) + pkin(8) * t114, t18, -t208, t36, t139, -t134, 0, -t101 * t28 + t51 * t102 - t202 * t30 + t45 * t82 + t136, -t101 * t29 + t102 * t52 + t30 * t89 + t45 * t83 - t135, -t13 * t83 - t14 * t82 + t202 * t4 - t3 * t89 + t129, t101 * t30 + t102 * t45 - t13 * t48 + t14 * t49 - t3 * t69 + t4 * t70, t18, t36, t208, 0, t134, t139, t20 * t82 - t202 * t5 - t28 * t58 + t38 * t51 + t136, t1 * t202 - t11 * t82 + t12 * t83 + t2 * t89 + t129, -t20 * t83 + t29 * t58 - t38 * t52 - t5 * t89 + t135, t1 * t70 + t11 * t49 + t12 * t48 + t2 * t69 + t20 * t38 + t5 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t149, -0.2e1 * t198, 0, -0.2e1 * t149, 0, 0, t110 * t159, t112 * t159, 0, 0, t61, -0.2e1 * t183, 0, t161, 0, 0, 0.2e1 * t101 * t82 - 0.2e1 * t102 * t202, 0.2e1 * t101 * t83 + 0.2e1 * t102 * t89, t124, 0.2e1 * t101 * t102 + 0.2e1 * t148, t61, 0, 0.2e1 * t183, 0, 0, t161, -0.2e1 * t202 * t38 + 0.2e1 * t58 * t82, t124, -0.2e1 * t38 * t89 - 0.2e1 * t58 * t83, 0.2e1 * t38 * t58 + 0.2e1 * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, 0, -t203, t84, t16, t15, 0, 0, 0, 0, -t29, 0, t28, t84, t84 * t151 + t3, -t84 * t192 - t4 (t107 * t28 + t172 * t29) * pkin(4) (t107 * t4 + t172 * t3) * pkin(4), 0, -t29, 0, t84, -t28, 0 (pkin(5) - t99) * t84 + t3, -qJD(6) * t51 + t28 * t96 - t29 * t99, t84 * t96 + t160 - 0.2e1 * t171, qJD(6) * t11 + t1 * t96 + t2 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t165, 0, 0, 0, 0, 0, 0, 0, 0, -t82, -t83, 0 (t107 * t83 - t172 * t82) * pkin(4), 0, 0, 0, 0, 0, 0, -t82, 0, t83, t82 * t99 + t83 * t96 + t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, 0, -t166, 0, -pkin(8) * t165, pkin(8) * t166, 0, 0, 0, 0, t83, 0, -t82, 0, -t48, -t49 (-t107 * t82 - t172 * t83) * pkin(4) (t107 * t49 - t172 * t48) * pkin(4), 0, t83, 0, 0, t82, 0, -t48, qJD(6) * t202 - t82 * t96 + t83 * t99, t49, qJD(6) * t70 + t48 * t99 + t49 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t96 * t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, -t29, 0, t30, 0, 0, 0, 0, 0, 0, -t28, 0, t29, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t83, 0, t102, 0, 0, 0, 0, 0, 0, t82, 0, -t83, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, -t29, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
