% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR3_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:07:15
% EndTime: 2019-03-09 05:07:23
% DurationCPUTime: 3.28s
% Computational Cost: add. (2822->317), mult. (6257->524), div. (0->0), fcn. (5105->8), ass. (0->168)
t108 = sin(qJ(4));
t104 = t108 ^ 2;
t111 = cos(qJ(3));
t181 = t111 * qJD(3);
t166 = t104 * t181;
t110 = cos(qJ(4));
t106 = t110 ^ 2;
t93 = t106 * t181;
t51 = t93 + t166;
t209 = sin(qJ(6));
t158 = qJD(4) * t209;
t210 = cos(qJ(6));
t159 = qJD(4) * t210;
t219 = t108 * t159 - t110 * t158;
t109 = sin(qJ(3));
t212 = pkin(8) - pkin(9);
t218 = t212 * t109;
t189 = t104 - t106;
t171 = t210 * t108;
t65 = -t209 * t110 + t171;
t70 = t189 * qJD(4);
t148 = t110 * t159;
t64 = t209 * t108 + t210 * t110;
t31 = t64 * qJD(6) - t108 * t158 - t148;
t156 = qJD(6) * t209;
t157 = qJD(6) * t210;
t32 = t108 * t157 - t110 * t156 - t219;
t185 = qJD(4) * t109;
t169 = t108 * t185;
t162 = t110 * t181;
t182 = t110 * qJD(5);
t199 = qJ(5) * t162 + t109 * t182;
t103 = qJD(4) * t110;
t54 = t109 * t103 + t108 * t181;
t217 = -t54 * pkin(4) - qJ(5) * t169 + t199;
t193 = t108 * qJ(5);
t213 = pkin(4) + pkin(5);
t216 = -t213 * t110 - t193;
t207 = t109 * pkin(8);
t195 = qJ(5) * t110;
t139 = pkin(4) * t108 - t195;
t98 = sin(pkin(10)) * pkin(1) + pkin(7);
t40 = (t139 + t98) * t109;
t183 = t108 * qJD(5);
t50 = t139 * qJD(4) - t183;
t140 = -t110 * pkin(4) - t193;
t69 = -pkin(3) + t140;
t215 = (-t111 * t69 + t207) * qJD(3) - qJD(4) * t40 - t109 * t50;
t145 = cos(pkin(10)) * pkin(1) + pkin(2);
t205 = t111 * pkin(3);
t126 = -t145 - t205;
t125 = t126 - t207;
t190 = t110 * t111;
t66 = t98 * t190;
t200 = t108 * t125 + t66;
t208 = pkin(8) * t111;
t143 = pkin(3) * t109 - t208;
t128 = t143 * qJD(3);
t101 = t109 * qJD(3);
t165 = t108 * t101;
t201 = t110 * t128 + t98 * t165;
t15 = -qJD(4) * t200 + t201;
t214 = 0.2e1 * qJD(5);
t17 = t32 * t109 + t64 * t181;
t48 = t64 * t109;
t211 = -t17 * t64 - t48 * t32;
t206 = t110 * pkin(3);
t160 = qJD(3) * t209;
t161 = qJD(3) * t210;
t192 = t108 * t111;
t16 = t31 * t109 + t160 * t190 - t161 * t192;
t47 = t65 * t109;
t204 = t47 * t16;
t203 = t48 * t17;
t121 = t110 * t125;
t202 = qJD(4) * t121 + t108 * t128;
t198 = t51 * pkin(8);
t197 = t108 * t98;
t196 = t110 * t98;
t194 = qJD(3) * t40;
t191 = t110 * t109;
t105 = t109 ^ 2;
t188 = -t111 ^ 2 + t105;
t187 = qJD(3) * t110;
t186 = qJD(4) * t108;
t184 = qJD(4) * t111;
t180 = -0.2e1 * pkin(3) * qJD(4);
t179 = -0.2e1 * qJD(3) * t145;
t178 = pkin(4) * t101;
t177 = pkin(8) * t186;
t176 = pkin(8) * t103;
t175 = t98 * t192;
t174 = t213 * t108;
t173 = t98 * t186;
t172 = t98 * t181;
t168 = t108 * t184;
t167 = t110 * t184;
t164 = t108 * t103;
t163 = t109 * t181;
t155 = t188 * qJD(3);
t154 = t212 * t209;
t153 = t210 * t213;
t152 = t108 * t162;
t151 = t105 * t164;
t25 = -t111 * qJ(5) + t200;
t144 = -t205 - t207;
t142 = -t65 * t16 - t47 * t31;
t131 = pkin(4) + t197 + t206;
t26 = -t110 * (-t145 - t207) + t131 * t111;
t138 = t108 * t26 + t110 * t25;
t137 = -t108 * t25 + t110 * t26;
t28 = t121 - t175;
t136 = -t108 * t200 - t110 * t28;
t135 = t108 * t28 - t110 * t200;
t134 = (qJ(5) - t196) * t109;
t132 = t212 * t171;
t130 = t64 * t101 - t111 * t32;
t129 = -t174 + t195;
t113 = (t66 + (t126 - t218) * t108) * qJD(4) + (-pkin(9) * t190 - t213 * t109) * qJD(3) - t201;
t114 = -t111 * qJD(5) + (pkin(9) * t191 - t175) * qJD(4) + (pkin(9) * t192 + t134) * qJD(3) + t202;
t117 = (t145 + t218) * t110 + (pkin(5) + t131) * t111;
t116 = t210 * t117;
t24 = t108 * t109 * pkin(9) + t25;
t1 = -qJD(6) * t116 - t209 * t113 - t210 * t114 + t24 * t156;
t53 = t110 * t101 + t168;
t68 = t210 * qJ(5) - t209 * t213;
t122 = t140 * qJD(4) + t182;
t10 = (-qJD(5) - t173) * t111 + qJD(3) * t134 + t202;
t12 = -t15 - t178;
t120 = t137 * qJD(4) + t10 * t110 + t12 * t108;
t14 = t53 * t98 - t202;
t119 = t136 * qJD(4) - t15 * t108 - t14 * t110;
t115 = t209 * t117;
t4 = t210 * t24 + t115;
t112 = t210 * t113 - t209 * t114;
t87 = -0.2e1 * t163;
t86 = -0.2e1 * t164;
t85 = 0.2e1 * t164;
t84 = pkin(8) * t167;
t79 = t212 * t110;
t76 = t106 * t163;
t71 = t104 * t163;
t67 = -t209 * qJ(5) - t153;
t61 = pkin(3) - t216;
t55 = -t165 + t167;
t52 = -t162 + t169;
t46 = t209 * qJD(5) + t68 * qJD(6);
t45 = qJ(5) * t156 - t210 * qJD(5) + qJD(6) * t153;
t43 = t129 * qJD(4) + t183;
t42 = 0.2e1 * t76 - 0.2e1 * t151;
t41 = 0.2e1 * t71 + 0.2e1 * t151;
t39 = t189 * t185 - t152;
t38 = -t108 * t155 + t109 * t167;
t37 = 0.4e1 * t109 * t164 + t166 - t93;
t36 = t108 * t154 + t210 * t79;
t35 = -t209 * t79 + t132;
t34 = 0.2e1 * t109 * t168 + 0.2e1 * t188 * t187;
t33 = t105 * t70 - 0.2e1 * t109 * t152;
t30 = 0.2e1 * t71 + 0.2e1 * t76 - 0.2e1 * t163;
t27 = (-t98 + t129) * t109;
t21 = -t65 * t101 - t31 * t111;
t20 = t172 - t217;
t19 = t79 * t157 - t212 * t148 + (qJD(6) * t154 - t212 * t158) * t108;
t18 = -qJD(6) * t132 + t79 * t156 + t219 * t212;
t11 = t216 * t185 + (-t98 - t174) * t181 + t199;
t3 = -t209 * t24 + t116;
t2 = -t4 * qJD(6) + t112;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t163, -0.2e1 * t155, 0, t87, 0, 0, t109 * t179, t111 * t179, 0, 0, t42, 0.2e1 * t33, t34, t41, 0.2e1 * t38, t87, 0.2e1 * t105 * t98 * t103 - 0.2e1 * t15 * t111 + 0.2e1 * (t28 + 0.2e1 * t175) * t101, -0.2e1 * t105 * t173 - 0.2e1 * t14 * t111 + 0.2e1 * (-t200 + 0.2e1 * t66) * t101, 0.2e1 * t136 * t181 + 0.2e1 * (t135 * qJD(4) + t108 * t14 - t110 * t15) * t109, 0.2e1 * t98 ^ 2 * t163 - 0.2e1 * t14 * t200 + 0.2e1 * t28 * t15, t42, t34, -0.2e1 * t33, t87, -0.2e1 * t38, t41, 0.2e1 * (t108 * t194 + t12) * t111 + 0.2e1 * (-qJD(3) * t26 + t40 * t103 + t20 * t108) * t109, 0.2e1 * t137 * t181 + 0.2e1 * (-t138 * qJD(4) - t10 * t108 + t110 * t12) * t109, 0.2e1 * (-t40 * t187 - t10) * t111 + 0.2e1 * (qJD(3) * t25 - t20 * t110 + t40 * t186) * t109, 0.2e1 * t25 * t10 + 0.2e1 * t26 * t12 + 0.2e1 * t40 * t20, 0.2e1 * t203, -0.2e1 * t48 * t16 + 0.2e1 * t17 * t47, -0.2e1 * t48 * t101 + 0.2e1 * t17 * t111, -0.2e1 * t204, -0.2e1 * t101 * t47 - 0.2e1 * t111 * t16, t87, -0.2e1 * t101 * t3 - 0.2e1 * t11 * t47 + 0.2e1 * t2 * t111 + 0.2e1 * t27 * t16, 0.2e1 * t1 * t111 + 0.2e1 * t101 * t4 + 0.2e1 * t11 * t48 + 0.2e1 * t27 * t17, -0.2e1 * t1 * t47 - 0.2e1 * t4 * t16 - 0.2e1 * t3 * t17 - 0.2e1 * t2 * t48, -0.2e1 * t4 * t1 + 0.2e1 * t27 * t11 + 0.2e1 * t3 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119 * t109 + (-t135 * t111 + t188 * t98) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0 (t138 * qJD(3) - t20) * t111 + (t120 + t194) * t109, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t48 - t101 * t27 + t11 * t111 - t3 * t16 + t4 * t17 + t2 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t163 + 0.2e1 * t203 - 0.2e1 * t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, 0, -t101, 0, -t172, t98 * t101, 0, 0, -t39, -t37, -t55, t39, t53, 0, t84 + (t197 - t206) * t185 + (t144 * t108 - t66) * qJD(3) (t143 * t108 + t98 * t191) * qJD(4) + (t144 * t110 + t175) * qJD(3), t119, -pkin(3) * t172 + t119 * pkin(8), -t39, -t55, t37, 0, -t53, t39, t84 + (t69 * t185 - t20) * t110 - t215 * t108, t120 (-t20 + (t109 * t69 + t208) * qJD(4)) * t108 + t215 * t110, t120 * pkin(8) + t20 * t69 + t40 * t50, t17 * t65 - t48 * t31, t142 + t211, t21, t16 * t64 - t47 * t32, t130, 0, -t101 * t35 + t11 * t64 - t19 * t111 + t61 * t16 + t27 * t32 - t43 * t47, t101 * t36 + t11 * t65 + t18 * t111 + t61 * t17 - t27 * t31 + t43 * t48, t1 * t64 - t36 * t16 - t35 * t17 - t18 * t47 + t19 * t48 - t2 * t65 + t3 * t31 - t4 * t32, -t1 * t36 + t11 * t61 - t4 * t18 - t3 * t19 + t2 * t35 + t27 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t181, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t55, t51, -pkin(3) * t101 + t198, 0, 0, 0, 0, 0, 0, -t53, t51, t55, t69 * t101 - t111 * t50 + t198, 0, 0, 0, 0, 0, 0, -t130, t21, -t142 + t211, -t101 * t61 + t111 * t43 - t16 * t35 + t17 * t36 - t48 * t18 - t47 * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, -0.2e1 * t70, 0, t86, 0, 0, t108 * t180, t110 * t180, 0, 0, t85, 0, 0.2e1 * t70, 0, 0, t86, -0.2e1 * t50 * t110 + 0.2e1 * t69 * t186, 0, -0.2e1 * t69 * t103 - 0.2e1 * t50 * t108, 0.2e1 * t69 * t50, -0.2e1 * t65 * t31, 0.2e1 * t31 * t64 - 0.2e1 * t65 * t32, 0, 0.2e1 * t64 * t32, 0, 0, 0.2e1 * t61 * t32 + 0.2e1 * t43 * t64, -0.2e1 * t61 * t31 + 0.2e1 * t43 * t65, 0.2e1 * t18 * t64 + 0.2e1 * t19 * t65 + 0.2e1 * t35 * t31 - 0.2e1 * t36 * t32, -0.2e1 * t36 * t18 - 0.2e1 * t35 * t19 + 0.2e1 * t61 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, 0, -t54, t101, t15, t14, 0, 0, 0, -t52, 0, t101, t54, 0, t15 + 0.2e1 * t178 (-pkin(4) * t181 - qJ(5) * t185) * t110 + (-qJ(5) * t181 + (pkin(4) * qJD(4) - qJD(5)) * t109) * t108 (-0.2e1 * qJD(5) - t173) * t111 + (0.2e1 * qJ(5) - t196) * t101 + t202, -t12 * pkin(4) + t10 * qJ(5) + t25 * qJD(5), 0, 0, -t17, 0, t16, t101, qJD(6) * t115 - t101 * t67 - t46 * t111 + t157 * t24 - t112, t101 * t68 + t45 * t111 - t1, -t68 * t16 - t67 * t17 - t45 * t47 + t46 * t48, -t1 * t68 + t2 * t67 - t3 * t46 - t4 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, t52, 0, 0, 0, 0, 0, 0, 0, 0, -t54, 0, -t52, t217, 0, 0, 0, 0, 0, 0, t16, t17, 0, -t16 * t67 + t17 * t68 - t48 * t45 - t47 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, -t186, 0, -t176, t177, 0, 0, 0, t103, 0, 0, t186, 0, -t176, t122, -t177, t122 * pkin(8), 0, 0, t31, 0, t32, 0, t19, -t18, t67 * t31 - t68 * t32 + t45 * t64 + t46 * t65, -t18 * t68 - t19 * t67 - t35 * t46 - t36 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, qJ(5) * t214, 0, 0, 0, 0, 0, 0, 0.2e1 * t46, -0.2e1 * t45, 0, -0.2e1 * t68 * t45 - 0.2e1 * t67 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t52, 0, t12, 0, 0, 0, 0, 0, 0, -t109 * t161 - t111 * t156, t109 * t160 - t111 * t157, -t210 * t17 - t209 * t16 + (t209 * t48 + t210 * t47) * qJD(6), t2 * t210 - t1 * t209 + (-t209 * t3 + t210 * t4) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16 * t210 + t17 * t209 + (-t209 * t47 + t210 * t48) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, t176, 0, 0, 0, 0, 0, 0, 0, 0, t210 * t31 - t209 * t32 + (t209 * t65 - t210 * t64) * qJD(6), -t19 * t210 - t18 * t209 + (-t209 * t35 + t210 * t36) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, t157, 0, -t46 * t210 - t45 * t209 + (-t209 * t67 + t210 * t68) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, -t16, -t101, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, -t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, 0, -t32, 0, -t19, t18, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, t45, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, -t157, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
