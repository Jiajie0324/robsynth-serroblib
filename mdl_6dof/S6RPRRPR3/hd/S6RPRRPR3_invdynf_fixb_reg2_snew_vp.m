% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRPR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 22:19
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRPR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR3_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 22:19:30
% EndTime: 2019-05-05 22:19:37
% DurationCPUTime: 6.87s
% Computational Cost: add. (19585->289), mult. (37873->352), div. (0->0), fcn. (24953->10), ass. (0->204)
t2144 = sin(qJ(3));
t2183 = qJD(1) * t2144;
t2130 = qJD(3) * t2183;
t2148 = cos(qJ(3));
t2170 = t2148 * qJDD(1);
t2165 = t2130 - t2170;
t2163 = -qJDD(4) - t2165;
t2143 = sin(qJ(4));
t2147 = cos(qJ(4));
t2100 = -qJD(3) * t2147 + t2143 * t2183;
t2102 = qJD(3) * t2143 + t2147 * t2183;
t2176 = t2100 * t2102;
t2057 = t2163 - t2176;
t2098 = t2102 ^ 2;
t2182 = qJD(1) * t2148;
t2126 = qJD(4) - t2182;
t2185 = t2126 ^ 2;
t2194 = -t2098 - t2185;
t2031 = t2057 * t2147 - t2143 * t2194;
t2169 = qJD(3) * t2182;
t2171 = t2144 * qJDD(1);
t2106 = t2169 + t2171;
t2161 = -t2143 * qJDD(3) - t2147 * t2106;
t2156 = qJD(4) * t2100 + t2161;
t2175 = t2100 * t2126;
t2200 = t2156 + t2175;
t2011 = t2031 * t2148 - t2144 * t2200;
t2029 = t2057 * t2143 + t2147 * t2194;
t2138 = sin(pkin(10));
t2139 = cos(pkin(10));
t1984 = t2011 * t2138 - t2029 * t2139;
t1986 = t2011 * t2139 + t2029 * t2138;
t2145 = sin(qJ(1));
t2149 = cos(qJ(1));
t2218 = t1984 * t2149 + t1986 * t2145;
t2217 = t1984 * t2145 - t1986 * t2149;
t2044 = -t2156 + t2175;
t2166 = -t2147 * qJDD(3) + t2143 * t2106;
t2174 = qJD(4) - t2126;
t2157 = -t2102 * t2174 - t2166;
t2192 = -t2044 * t2147 + t2143 * t2157;
t2187 = t2100 ^ 2;
t2056 = t2098 + t2187;
t2191 = t2044 * t2143 + t2147 * t2157;
t2206 = -t2056 * t2144 + t2148 * t2191;
t2211 = t2138 * t2192 + t2139 * t2206;
t2212 = t2138 * t2206 - t2139 * t2192;
t2216 = -t2145 * t2212 + t2149 * t2211;
t2215 = t2145 * t2211 + t2149 * t2212;
t2009 = t2031 * t2144 + t2148 * t2200;
t2058 = t2163 + t2176;
t2193 = -t2185 - t2187;
t2199 = -t2058 * t2147 + t2143 * t2193;
t2210 = t2138 * t2199;
t2209 = t2139 * t2199;
t2198 = t2058 * t2143 + t2147 * t2193;
t2208 = t2144 * t2198;
t2207 = t2148 * t2198;
t2205 = t2056 * t2148 + t2144 * t2191;
t2120 = qJD(6) - t2126;
t2195 = qJD(6) + t2120;
t2190 = qJD(3) ^ 2;
t2142 = sin(qJ(6));
t2146 = cos(qJ(6));
t2068 = -t2146 * t2100 + t2102 * t2142;
t2189 = t2068 ^ 2;
t2070 = t2100 * t2142 + t2102 * t2146;
t2188 = t2070 ^ 2;
t2186 = t2120 ^ 2;
t2184 = -g(3) + qJDD(2);
t2177 = t2068 * t2070;
t2173 = qJD(6) - t2120;
t2118 = -g(1) * t2149 - g(2) * t2145;
t2150 = qJD(1) ^ 2;
t2103 = -pkin(1) * t2150 + t2118;
t2117 = t2145 * g(1) - g(2) * t2149;
t2160 = qJDD(1) * pkin(1) + t2117;
t2072 = t2139 * t2103 + t2138 * t2160;
t2062 = -pkin(2) * t2150 + qJDD(1) * pkin(7) + t2072;
t2047 = t2148 * t2062 + t2144 * t2184;
t2104 = (-pkin(3) * t2148 - pkin(8) * t2144) * qJD(1);
t2037 = -pkin(3) * t2190 + qJDD(3) * pkin(8) + t2104 * t2182 + t2047;
t2071 = -t2138 * t2103 + t2139 * t2160;
t2061 = -qJDD(1) * pkin(2) - t2150 * pkin(7) - t2071;
t2151 = (-t2106 - t2169) * pkin(8) + (t2165 + t2130) * pkin(3) + t2061;
t1996 = t2147 * t2037 + t2143 * t2151;
t2134 = t2144 ^ 2;
t2135 = t2148 ^ 2;
t2172 = t2134 + t2135;
t2168 = pkin(4) * t2126 - (2 * qJD(5));
t1995 = -t2143 * t2037 + t2147 * t2151;
t2108 = -qJDD(1) * t2138 - t2139 * t2150;
t2109 = qJDD(1) * t2139 - t2138 * t2150;
t2167 = t2149 * t2108 - t2109 * t2145;
t2164 = -pkin(5) * t2126 - pkin(9) * t2102;
t2162 = t2108 * t2145 + t2109 * t2149;
t2159 = -qJDD(6) - t2163;
t2158 = qJD(4) * t2102 + t2166;
t2073 = pkin(4) * t2100 - qJ(5) * t2102;
t1978 = -pkin(4) * t2185 - qJ(5) * t2163 + 0.2e1 * qJD(5) * t2126 - t2100 * t2073 + t1996;
t2129 = t2148 * t2184;
t2036 = -t2129 - qJDD(3) * pkin(3) - t2190 * pkin(8) + (qJD(1) * t2104 + t2062) * t2144;
t1983 = pkin(4) * t2163 - qJ(5) * t2185 + t2102 * t2073 + qJDD(5) - t1995;
t2154 = t2142 * t2156 + t2146 * t2158;
t2153 = t2158 * pkin(4) + qJ(5) * t2200 + t2036;
t2152 = -t2142 * t2158 + t2146 * t2156;
t2125 = t2148 * t2150 * t2144;
t2122 = -t2135 * t2150 - t2190;
t2121 = -t2134 * t2150 - t2190;
t2115 = -qJDD(3) + t2125;
t2114 = qJDD(3) + t2125;
t2113 = t2172 * t2150;
t2112 = -qJDD(1) * t2145 - t2149 * t2150;
t2111 = qJDD(1) * t2149 - t2145 * t2150;
t2110 = t2172 * qJDD(1);
t2107 = -0.2e1 * t2130 + t2170;
t2105 = 0.2e1 * t2169 + t2171;
t2082 = t2115 * t2148 - t2121 * t2144;
t2081 = -t2114 * t2144 + t2122 * t2148;
t2080 = t2115 * t2144 + t2121 * t2148;
t2079 = t2114 * t2148 + t2122 * t2144;
t2075 = t2110 * t2139 - t2113 * t2138;
t2074 = t2110 * t2138 + t2113 * t2139;
t2051 = t2082 * t2139 + t2105 * t2138;
t2050 = t2081 * t2139 - t2107 * t2138;
t2049 = t2082 * t2138 - t2105 * t2139;
t2048 = t2081 * t2138 + t2107 * t2139;
t2046 = -t2144 * t2062 + t2129;
t2045 = -t2186 - t2188;
t2039 = (qJD(4) + t2126) * t2102 + t2166;
t2038 = t2126 * t2102 + t2158;
t2035 = -t2071 * t2138 + t2072 * t2139;
t2034 = t2071 * t2139 + t2072 * t2138;
t2028 = -t2186 - t2189;
t2023 = t2159 - t2177;
t2022 = -t2159 - t2177;
t2019 = -t2188 - t2189;
t2018 = -t2046 * t2144 + t2047 * t2148;
t2017 = t2046 * t2148 + t2047 * t2144;
t2012 = t2038 * t2144 + t2207;
t2010 = -t2038 * t2148 + t2208;
t2008 = t2023 * t2146 - t2045 * t2142;
t2007 = t2023 * t2142 + t2045 * t2146;
t2006 = t2039 * t2144 + t2207;
t2004 = -t2039 * t2148 + t2208;
t2002 = t2018 * t2139 + t2061 * t2138;
t2001 = t2018 * t2138 - t2061 * t2139;
t2000 = t2068 * t2173 + t2152;
t1999 = -t2068 * t2195 - t2152;
t1998 = -t2070 * t2173 + t2154;
t1997 = t2070 * t2195 - t2154;
t1994 = -t2022 * t2142 + t2028 * t2146;
t1993 = t2022 * t2146 + t2028 * t2142;
t1988 = t2168 * t2102 + t2153;
t1987 = t2012 * t2139 + t2210;
t1985 = t2012 * t2138 - t2209;
t1982 = t2006 * t2139 + t2210;
t1980 = t2006 * t2138 - t2209;
t1977 = t2007 * t2143 + t2008 * t2147;
t1976 = -t2007 * t2147 + t2008 * t2143;
t1975 = t2166 * pkin(5) + t2187 * pkin(9) + t2153 + (pkin(5) * qJD(4) - t2164 + t2168) * t2102;
t1970 = -pkin(5) * t2187 + pkin(9) * t2158 + t2126 * t2164 + t1978;
t1969 = t1998 * t2146 - t2000 * t2142;
t1968 = t1998 * t2142 + t2000 * t2146;
t1967 = -t1995 * t2143 + t1996 * t2147;
t1966 = t1995 * t2147 + t1996 * t2143;
t1965 = (t2100 * t2174 + t2161) * pkin(9) + t2058 * pkin(5) + t1983;
t1964 = t1993 * t2143 + t1994 * t2147;
t1963 = -t1993 * t2147 + t1994 * t2143;
t1962 = t1967 * t2148 + t2036 * t2144;
t1961 = t1967 * t2144 - t2036 * t2148;
t1960 = t1977 * t2148 - t1999 * t2144;
t1959 = t1977 * t2144 + t1999 * t2148;
t1958 = t1978 * t2147 + t1983 * t2143;
t1957 = t1978 * t2143 - t1983 * t2147;
t1956 = t1964 * t2148 - t1997 * t2144;
t1955 = t1964 * t2144 + t1997 * t2148;
t1954 = t1968 * t2143 + t1969 * t2147;
t1953 = -t1968 * t2147 + t1969 * t2143;
t1952 = t1965 * t2142 + t1970 * t2146;
t1951 = t1965 * t2146 - t1970 * t2142;
t1950 = t1958 * t2148 + t1988 * t2144;
t1949 = t1958 * t2144 - t1988 * t2148;
t1948 = t1962 * t2139 + t1966 * t2138;
t1947 = t1962 * t2138 - t1966 * t2139;
t1946 = t1960 * t2139 + t1976 * t2138;
t1945 = t1960 * t2138 - t1976 * t2139;
t1944 = t1954 * t2148 - t2019 * t2144;
t1943 = t1954 * t2144 + t2019 * t2148;
t1942 = t1956 * t2139 + t1963 * t2138;
t1941 = t1956 * t2138 - t1963 * t2139;
t1940 = t1950 * t2139 + t1957 * t2138;
t1939 = t1950 * t2138 - t1957 * t2139;
t1938 = -t1951 * t2142 + t1952 * t2146;
t1937 = t1951 * t2146 + t1952 * t2142;
t1936 = t1944 * t2139 + t1953 * t2138;
t1935 = t1944 * t2138 - t1953 * t2139;
t1934 = t1937 * t2143 + t1938 * t2147;
t1933 = -t1937 * t2147 + t1938 * t2143;
t1932 = t1934 * t2148 + t1975 * t2144;
t1931 = t1934 * t2144 - t1975 * t2148;
t1930 = t1932 * t2139 + t1933 * t2138;
t1929 = t1932 * t2138 - t1933 * t2139;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2112, -t2111, 0, -t2117 * t2145 + t2118 * t2149, 0, 0, 0, 0, 0, 0, t2167, -t2162, 0, -t2034 * t2145 + t2035 * t2149, 0, 0, 0, 0, 0, 0, -t2048 * t2145 + t2050 * t2149, -t2049 * t2145 + t2051 * t2149, -t2074 * t2145 + t2075 * t2149, -t2001 * t2145 + t2002 * t2149, 0, 0, 0, 0, 0, 0, -t1980 * t2145 + t1982 * t2149, -t2217, t2216, -t1947 * t2145 + t1948 * t2149, 0, 0, 0, 0, 0, 0, -t1985 * t2145 + t1987 * t2149, t2216, t2217, -t1939 * t2145 + t1940 * t2149, 0, 0, 0, 0, 0, 0, -t1941 * t2145 + t1942 * t2149, -t1945 * t2145 + t1946 * t2149, -t1935 * t2145 + t1936 * t2149, -t1929 * t2145 + t1930 * t2149; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2111, t2112, 0, t2117 * t2149 + t2118 * t2145, 0, 0, 0, 0, 0, 0, t2162, t2167, 0, t2034 * t2149 + t2035 * t2145, 0, 0, 0, 0, 0, 0, t2048 * t2149 + t2050 * t2145, t2049 * t2149 + t2051 * t2145, t2074 * t2149 + t2075 * t2145, t2001 * t2149 + t2002 * t2145, 0, 0, 0, 0, 0, 0, t1980 * t2149 + t1982 * t2145, t2218, t2215, t1947 * t2149 + t1948 * t2145, 0, 0, 0, 0, 0, 0, t1985 * t2149 + t1987 * t2145, t2215, -t2218, t1939 * t2149 + t1940 * t2145, 0, 0, 0, 0, 0, 0, t1941 * t2149 + t1942 * t2145, t1945 * t2149 + t1946 * t2145, t1935 * t2149 + t1936 * t2145, t1929 * t2149 + t1930 * t2145; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2184, 0, 0, 0, 0, 0, 0, t2079, t2080, 0, t2017, 0, 0, 0, 0, 0, 0, t2004, t2009, t2205, t1961, 0, 0, 0, 0, 0, 0, t2010, t2205, -t2009, t1949, 0, 0, 0, 0, 0, 0, t1955, t1959, t1943, t1931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2150, -qJDD(1), 0, t2118, 0, 0, 0, 0, 0, 0, t2108, -t2109, 0, t2035, 0, 0, 0, 0, 0, 0, t2050, t2051, t2075, t2002, 0, 0, 0, 0, 0, 0, t1982, t1986, t2211, t1948, 0, 0, 0, 0, 0, 0, t1987, t2211, -t1986, t1940, 0, 0, 0, 0, 0, 0, t1942, t1946, t1936, t1930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2150, 0, t2117, 0, 0, 0, 0, 0, 0, t2109, t2108, 0, t2034, 0, 0, 0, 0, 0, 0, t2048, t2049, t2074, t2001, 0, 0, 0, 0, 0, 0, t1980, t1984, t2212, t1947, 0, 0, 0, 0, 0, 0, t1985, t2212, -t1984, t1939, 0, 0, 0, 0, 0, 0, t1941, t1945, t1935, t1929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2184, 0, 0, 0, 0, 0, 0, t2079, t2080, 0, t2017, 0, 0, 0, 0, 0, 0, t2004, t2009, t2205, t1961, 0, 0, 0, 0, 0, 0, t2010, t2205, -t2009, t1949, 0, 0, 0, 0, 0, 0, t1955, t1959, t1943, t1931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2150, -qJDD(1), 0, t2072, 0, 0, 0, 0, 0, 0, t2081, t2082, t2110, t2018, 0, 0, 0, 0, 0, 0, t2006, t2011, t2206, t1962, 0, 0, 0, 0, 0, 0, t2012, t2206, -t2011, t1950, 0, 0, 0, 0, 0, 0, t1956, t1960, t1944, t1932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2150, 0, t2071, 0, 0, 0, 0, 0, 0, t2107, -t2105, t2113, -t2061, 0, 0, 0, 0, 0, 0, -t2199, -t2029, -t2192, -t1966, 0, 0, 0, 0, 0, 0, -t2199, -t2192, t2029, -t1957, 0, 0, 0, 0, 0, 0, -t1963, -t1976, -t1953, -t1933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2184, 0, 0, 0, 0, 0, 0, t2079, t2080, 0, t2017, 0, 0, 0, 0, 0, 0, t2004, t2009, t2205, t1961, 0, 0, 0, 0, 0, 0, t2010, t2205, -t2009, t1949, 0, 0, 0, 0, 0, 0, t1955, t1959, t1943, t1931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2122, t2115, t2170, t2047, 0, 0, 0, 0, 0, 0, t2198, t2031, t2191, t1967, 0, 0, 0, 0, 0, 0, t2198, t2191, -t2031, t1958, 0, 0, 0, 0, 0, 0, t1964, t1977, t1954, t1934; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2114, t2121, -t2171, t2046, 0, 0, 0, 0, 0, 0, -t2039, t2200, t2056, -t2036, 0, 0, 0, 0, 0, 0, -t2038, t2056, -t2200, -t1988, 0, 0, 0, 0, 0, 0, t1997, t1999, t2019, -t1975; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2107, t2105, -t2113, t2061, 0, 0, 0, 0, 0, 0, t2199, t2029, t2192, t1966, 0, 0, 0, 0, 0, 0, t2199, t2192, -t2029, t1957, 0, 0, 0, 0, 0, 0, t1963, t1976, t1953, t1933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2193, t2057, t2157, t1996, 0, 0, 0, 0, 0, 0, t2193, t2157, -t2057, t1978, 0, 0, 0, 0, 0, 0, t1994, t2008, t1969, t1938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2058, t2194, -t2044, t1995, 0, 0, 0, 0, 0, 0, -t2058, -t2044, -t2194, -t1983, 0, 0, 0, 0, 0, 0, -t1993, -t2007, -t1968, -t1937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2039, -t2200, -t2056, t2036, 0, 0, 0, 0, 0, 0, t2038, -t2056, t2200, t1988, 0, 0, 0, 0, 0, 0, -t1997, -t1999, -t2019, t1975; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2193, t2157, -t2057, t1978, 0, 0, 0, 0, 0, 0, t1994, t2008, t1969, t1938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2038, -t2056, t2200, t1988, 0, 0, 0, 0, 0, 0, -t1997, -t1999, -t2019, t1975; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2058, t2044, t2194, t1983, 0, 0, 0, 0, 0, 0, t1993, t2007, t1968, t1937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2028, t2023, t1998, t1952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2022, t2045, t2000, t1951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1997, t1999, t2019, -t1975;];
f_new_reg  = t1;
