% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:49:17
% EndTime: 2019-03-08 21:49:25
% DurationCPUTime: 3.21s
% Computational Cost: add. (3485->403), mult. (8335->512), div. (0->0), fcn. (5485->8), ass. (0->224)
t285 = pkin(4) + pkin(8);
t144 = sin(qJ(2));
t140 = sin(pkin(6));
t246 = qJD(1) * t140;
t215 = t144 * t246;
t105 = qJD(2) * pkin(8) + t215;
t141 = cos(pkin(6));
t146 = cos(qJ(3));
t256 = t141 * t146;
t124 = qJD(1) * t256;
t143 = sin(qJ(3));
t73 = t143 * t105 - t124;
t305 = -qJD(4) - t73;
t234 = t143 * qJD(2);
t128 = qJD(5) + t234;
t142 = sin(qJ(5));
t145 = cos(qJ(5));
t148 = -pkin(3) - pkin(9);
t206 = pkin(4) * qJD(2) + t105;
t293 = t124 - qJD(4);
t250 = t206 * t143 - t293;
t44 = t148 * qJD(3) + t250;
t147 = cos(qJ(2));
t214 = t147 * t246;
t208 = -t143 * qJ(4) - pkin(2);
t91 = t148 * t146 + t208;
t62 = qJD(2) * t91 - t214;
t16 = -t142 * t62 + t145 * t44;
t237 = qJD(5) * t145;
t238 = qJD(5) * t142;
t243 = qJD(2) * t140;
t210 = qJD(1) * t243;
t195 = t147 * t210;
t178 = t143 * t195;
t245 = qJD(1) * t143;
t212 = t141 * t245;
t33 = t178 + (t206 * t146 + t212) * qJD(3);
t187 = pkin(9) * t143 - qJ(4) * t146;
t233 = t143 * qJD(4);
t158 = t187 * qJD(3) - t233;
t231 = qJD(2) * qJD(3);
t209 = t143 * t231;
t248 = pkin(3) * t209 + t144 * t210;
t43 = qJD(2) * t158 + t248;
t170 = -t142 * t33 - t145 * t43 - t44 * t237 + t62 * t238;
t304 = -t16 * t128 - t170;
t17 = t142 * t44 + t145 * t62;
t207 = t142 * t43 - t145 * t33 + t62 * t237 + t44 * t238;
t303 = t17 * t128 - t207;
t232 = t145 * qJD(3);
t241 = qJD(2) * t146;
t97 = -t142 * t241 + t232;
t240 = qJD(3) * t143;
t235 = t142 * qJD(3);
t95 = t145 * t241 + t235;
t68 = qJD(5) * t95 - t142 * t209;
t270 = t145 * t68;
t69 = t97 * qJD(5) - t145 * t209;
t64 = t69 * t142;
t302 = t146 * ((t142 * t97 + t145 * t95) * qJD(5) + t64 + t270) - (t142 * t95 - t145 * t97) * t240;
t139 = t146 ^ 2;
t259 = t128 * t143;
t177 = qJD(2) * t139 - t259;
t236 = qJD(5) * t146;
t218 = t142 * t236;
t301 = qJD(3) * (t145 * t177 + t146 * t95) - t128 * t218 + t143 * t69;
t179 = t97 * t128;
t180 = t95 * t128;
t300 = t142 * (t68 + t180) - t145 * (t69 + t179);
t239 = qJD(3) * t146;
t102 = t285 * t239;
t115 = t285 * t143;
t255 = t142 * t147;
t132 = pkin(3) * t240;
t76 = t132 + t158;
t277 = t142 * t102 + t115 * t237 + t145 * t76 - t91 * t238 - (t143 * t255 + t144 * t145) * t246;
t10 = t128 * qJ(6) + t17;
t130 = t146 * t231;
t199 = pkin(5) * t130;
t2 = -t199 + t207;
t299 = -t10 * t128 + t2;
t220 = t145 * t234;
t297 = (t220 + t237) * t128;
t74 = t146 * t105 + t212;
t66 = -qJD(3) * qJ(4) - t74;
t65 = -qJD(3) * pkin(3) - t305;
t149 = qJD(3) ^ 2;
t168 = -qJ(4) * t239 - t233;
t53 = qJD(2) * t168 + t248;
t85 = t132 + t168;
t291 = qJD(2) * (-t85 + t215) - pkin(8) * t149 - t53;
t221 = t147 * t243;
t150 = qJD(2) ^ 2;
t257 = t140 * t150;
t223 = t144 * t257;
t167 = qJD(3) * t141 + t221;
t258 = t140 * t144;
t225 = t143 * t258;
t56 = -qJD(3) * t225 + t146 * t167;
t290 = qJD(3) * (t146 * t221 + t56) - t143 * t223;
t196 = t143 * t221;
t88 = t141 * t143 + t146 * t258;
t57 = qJD(3) * t88 + t196;
t289 = qJD(3) * (t57 + t196) + t146 * t223;
t198 = t143 * t214;
t273 = t142 * t115 + t145 * t91;
t276 = -qJD(5) * t273 + (t102 - t198) * t145 + (t215 - t76) * t142;
t287 = t97 ^ 2;
t286 = t128 ^ 2;
t284 = qJ(6) * t239 + t143 * qJD(6) + t277;
t131 = pkin(4) * t241;
t49 = t131 - t66;
t20 = t95 * pkin(5) - t97 * qJ(6) + t49;
t283 = t20 * t97;
t42 = t105 * t239 + t167 * t245;
t87 = t225 - t256;
t282 = t42 * t87;
t136 = qJD(3) * qJD(4);
t229 = -qJD(3) * t124 + t105 * t240 - t146 * t195;
t35 = -t136 + t229;
t28 = -pkin(4) * t209 - t35;
t5 = t69 * pkin(5) + t68 * qJ(6) - t97 * qJD(6) + t28;
t281 = t5 * t142;
t280 = t5 * t145;
t279 = t97 * t95;
t278 = -pkin(5) * t239 - t276;
t189 = pkin(5) * t145 + qJ(6) * t142;
t172 = -pkin(4) - t189;
t275 = (t172 * qJD(2) - t105) * t143 - t189 * qJD(5) + t145 * qJD(6) + t293;
t254 = t142 * t148;
t84 = t95 * t237;
t274 = -t148 * t84 - t69 * t254;
t61 = t131 + t74;
t133 = pkin(3) * t234;
t82 = t187 * qJD(2) + t133;
t24 = t142 * t61 + t145 * t82;
t272 = qJD(2) * pkin(2);
t268 = t146 * t97;
t267 = t148 * t68;
t266 = t148 * t97;
t263 = t28 * t142;
t262 = t28 * t145;
t261 = t42 * t143;
t253 = t143 * t145;
t252 = t149 * t143;
t251 = t149 * t146;
t249 = qJD(6) - t16;
t116 = t285 * t146;
t138 = t143 ^ 2;
t247 = t138 - t139;
t109 = -t146 * pkin(3) + t208;
t244 = qJD(2) * t109;
t242 = qJD(2) * t144;
t230 = t95 * t220 + t64 + t84;
t228 = t95 ^ 2 - t287;
t227 = t128 * t254;
t226 = t128 * t145 * t148;
t224 = t140 * t147 * t145;
t222 = t140 * t242;
t219 = t148 * t239;
t217 = t145 * t236;
t216 = t128 * t241;
t119 = t142 * t130;
t204 = -qJD(3) * t97 - t119;
t203 = t95 * t214;
t202 = t97 * t214;
t197 = t146 * t214;
t194 = t143 * t130;
t121 = t145 * t130;
t193 = qJ(6) * t130;
t106 = -t214 - t272;
t191 = -t106 - t214;
t9 = -t128 * pkin(5) + t249;
t190 = t10 * t145 + t142 * t9;
t188 = -t142 * pkin(5) + t145 * qJ(6);
t186 = -t142 * t16 + t145 * t17;
t23 = -t142 * t82 + t145 * t61;
t51 = t145 * t115 - t142 * t91;
t176 = t128 * t142;
t175 = t73 * qJD(3) - t229;
t58 = t140 * t255 + t87 * t145;
t14 = -qJD(5) * t224 - t57 * t145 + (qJD(5) * t87 + t222) * t142;
t15 = t58 * qJD(5) + t57 * t142 + t145 * t222;
t59 = t87 * t142 - t224;
t169 = t14 * t97 - t15 * t95 + t58 * t68 - t59 * t69;
t166 = t95 * t241 - t119 - t297;
t165 = (-t138 - t139) * t195;
t162 = t69 - t179;
t161 = qJD(3) * (-t191 - t272);
t160 = -t14 * t128 + t58 * t130 + t56 * t95 + t88 * t69;
t75 = -t214 + t244;
t159 = qJD(3) * (-t214 - t75 - t244);
t157 = -qJD(3) * t95 - t128 * t176 + t121;
t156 = t15 * t128 + t59 * t130 - t56 * t97 + t88 * t68;
t155 = t142 * t179 - t230 + t270;
t154 = t261 - t35 * t146 + (t143 * t66 + t146 * t65) * qJD(3);
t153 = t261 - t229 * t146 + (-t143 * t74 + t146 * t73) * qJD(3);
t152 = -t95 * t218 + (t146 * t69 - t95 * t240) * t145;
t151 = (t143 * t57 + t146 * t56 + (-t143 * t88 + t146 * t87) * qJD(3)) * qJD(2);
t126 = t143 * t150 * t146;
t114 = -0.2e1 * t194;
t113 = 0.2e1 * t194;
t112 = t247 * t150;
t108 = qJ(4) - t188;
t107 = t148 * t121;
t101 = t285 * t240;
t100 = -qJ(4) * t241 + t133;
t89 = -0.2e1 * t247 * t231;
t78 = (t128 + t234) * t239;
t72 = t189 * t146 + t116;
t63 = t75 * t234;
t55 = t97 * pkin(5) + t95 * qJ(6);
t46 = -t143 * pkin(5) - t51;
t45 = t143 * qJ(6) + t273;
t32 = t180 - t68;
t27 = -t128 * t238 + t121 + (-t142 * t259 - t268) * qJD(2);
t26 = (t188 * qJD(5) + qJD(6) * t142) * t146 + (-pkin(8) + t172) * t240;
t22 = -pkin(5) * t241 - t23;
t21 = qJ(6) * t241 + t24;
t19 = -t97 * t176 - t270;
t18 = -t97 * t217 + (t146 * t68 + t97 * t240) * t142;
t8 = -t128 * t217 - t68 * t143 + (-t177 * t142 + t268) * qJD(3);
t1 = t128 * qJD(6) - t170 + t193;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t147 * t257, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t290, t151, -t229 * t88 + t282 + t74 * t56 + t73 * t57 + (t106 - t214) * t222, 0, 0, 0, 0, 0, 0, t151, t289, t290, -t35 * t88 + t282 - t66 * t56 + t65 * t57 + (-t147 * t53 + t242 * t75) * t140, 0, 0, 0, 0, 0, 0, t160, -t156, t169, -t16 * t14 + t17 * t15 - t170 * t59 - t207 * t58 + t28 * t88 + t49 * t56, 0, 0, 0, 0, 0, 0, t160, t169, t156, t1 * t59 + t10 * t15 + t9 * t14 - t2 * t58 + t20 * t56 + t5 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t89, t251, t114, -t252, 0, -pkin(8) * t251 + t143 * t161, pkin(8) * t252 + t146 * t161, t165 + t153 ((-t143 * t73 - t146 * t74) * t147 + (-t106 - t272) * t144) * t246 + t153 * pkin(8), 0, -t251, t252, t113, t89, t114, t165 + t154, t143 * t159 - t146 * t291, t143 * t291 + t146 * t159, t53 * t109 + t75 * t85 + (-t144 * t75 + (-t143 * t65 + t146 * t66) * t147) * t246 + t154 * pkin(8), t18, t302, t8, t152, -t301, t78, -t101 * t95 + t116 * t69 + (-t232 * t49 - t207) * t143 + t276 * t128 + (-t203 - t49 * t238 + t262 + (qJD(2) * t51 + t16) * qJD(3)) * t146, -t101 * t97 - t116 * t68 + (t235 * t49 + t170) * t143 - t277 * t128 + (-t202 - t49 * t237 - t263 + (-qJD(2) * t273 - t17) * qJD(3)) * t146, t51 * t68 - t273 * t69 - t276 * t97 - t277 * t95 + t186 * t240 + (-t142 * t207 + t145 * t170 + (t142 * t17 + t145 * t16) * qJD(5)) * t146, t28 * t116 - t170 * t273 - t207 * t51 + (-t101 - t197) * t49 + t277 * t17 + t276 * t16, t18, t8, -t302, t78, t301, t152, t26 * t95 + t72 * t69 + (-t20 * t232 - t2) * t143 - t278 * t128 + (-t203 - t20 * t238 + t280 + (-qJD(2) * t46 - t9) * qJD(3)) * t146, -t45 * t69 - t46 * t68 + t278 * t97 - t284 * t95 + t190 * t240 + (-t1 * t145 - t142 * t2 + (t10 * t142 - t145 * t9) * qJD(5)) * t146, -t26 * t97 + t72 * t68 + (-t20 * t235 + t1) * t143 + t284 * t128 + (t202 + t20 * t237 + t281 + (qJD(2) * t45 + t10) * qJD(3)) * t146, t1 * t45 + t2 * t46 + t5 * t72 + t278 * t9 + (t26 - t197) * t20 + t284 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, t112, 0, t126, 0, 0, t191 * t234, -t106 * t241 - t175, 0, 0, 0, 0, 0, -t126, t112, t126, 0, t63 + (-t100 * t146 + t198) * qJD(2), 0.2e1 * t136 + (t100 * t143 + t146 * t75) * qJD(2) + t175, -t42 * pkin(3) - t35 * qJ(4) - t75 * t100 + t305 * t66 - t65 * t74, t19, t300, t27, t230, t166, -t216, qJ(4) * t69 - t23 * t128 + t263 + t107 + t250 * t95 + (t145 * t49 - t227) * qJD(5) + (-t146 * t16 + t253 * t49) * qJD(2), -qJ(4) * t68 + t24 * t128 + t262 + t250 * t97 + (-t142 * t49 - t226) * qJD(5) + (t146 * t17 + (-t143 * t49 - t219) * t142) * qJD(2), t23 * t97 + t24 * t95 + (t267 - t303) * t145 + (t16 * t234 + t170 + (t16 + t266) * qJD(5)) * t142 + t274, t28 * qJ(4) - t16 * t23 - t17 * t24 + t250 * t49 + (qJD(5) * t186 - t142 * t170 - t145 * t207) * t148, t19, t27, -t300, -t216, -t166, t145 * t180 + t64, t108 * t69 + t22 * t128 + t281 + t107 - t275 * t95 + (t145 * t20 - t227) * qJD(5) + (t146 * t9 + t20 * t253) * qJD(2), t21 * t95 - t22 * t97 + (t267 + t299) * t145 + (-t9 * t234 - t1 + (-t9 + t266) * qJD(5)) * t142 + t274, t108 * t68 - t21 * t128 - t280 + t275 * t97 + (t142 * t20 + t226) * qJD(5) + (-t10 * t146 + (t143 * t20 + t219) * t142) * qJD(2), -t10 * t21 + t5 * t108 - t9 * t22 - t275 * t20 + (qJD(5) * t190 + t1 * t142 - t2 * t145) * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, -t138 * t150 - t149, t178 + t63 + (t66 + t74) * qJD(3), 0, 0, 0, 0, 0, 0, t157, -t286 * t145 + t204, t155, -t49 * qJD(3) + t304 * t142 + t145 * t303, 0, 0, 0, 0, 0, 0, t157, t155, -t204 + t297, -t20 * qJD(3) - t299 * t145 + (t128 * t9 + t1) * t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, -t228, t32, -t279, -t162, t130, -t49 * t97 + t303, t49 * t95 - t304, 0, 0, t279, t32, t228, t130, t162, -t279, -t55 * t95 + 0.2e1 * t199 - t283 + t303, pkin(5) * t68 - t69 * qJ(6) + (t10 - t17) * t97 + (t9 - t249) * t95, 0.2e1 * t193 - t20 * t95 + t55 * t97 + (0.2e1 * qJD(6) - t16) * t128 - t170, -t2 * pkin(5) + t1 * qJ(6) + t10 * t249 - t9 * t17 - t20 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130 + t279, t32, -t286 - t287, t283 + t299;];
tauc_reg  = t3;
