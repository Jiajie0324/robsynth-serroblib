% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRPRP5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP5_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:49:16
% EndTime: 2019-03-08 21:49:23
% DurationCPUTime: 2.19s
% Computational Cost: add. (1393->217), mult. (3532->363), div. (0->0), fcn. (3010->8), ass. (0->143)
t87 = sin(qJ(3));
t151 = t87 * qJ(4);
t168 = pkin(3) + pkin(9);
t90 = cos(qJ(3));
t155 = t168 * t90;
t174 = t151 + t155;
t152 = qJ(4) * t90;
t156 = t168 * t87;
t106 = -t152 + t156;
t167 = pkin(4) + pkin(8);
t143 = qJD(5) * t90;
t86 = sin(qJ(5));
t128 = t86 * t143;
t140 = t87 * qJD(3);
t89 = cos(qJ(5));
t130 = t89 * t140;
t49 = t128 + t130;
t88 = sin(qJ(2));
t150 = qJD(2) * t88;
t84 = sin(pkin(6));
t124 = t84 * t150;
t91 = cos(qJ(2));
t157 = t84 * t91;
t134 = t89 * t157;
t149 = qJD(2) * t91;
t123 = t84 * t149;
t158 = t84 * t88;
t85 = cos(pkin(6));
t47 = t90 * t158 + t85 * t87;
t28 = t47 * qJD(3) + t87 * t123;
t135 = t87 * t158;
t46 = -t85 * t90 + t135;
t12 = -t28 * t89 - qJD(5) * t134 + (qJD(5) * t46 + t124) * t86;
t29 = t86 * t157 + t46 * t89;
t145 = qJD(5) * t29;
t13 = t89 * t124 + t28 * t86 + t145;
t173 = -t12 * t89 + t13 * t86;
t54 = -pkin(2) - t174;
t66 = t167 * t87;
t172 = t89 * t54 + t86 * t66;
t80 = t86 ^ 2;
t82 = t89 ^ 2;
t154 = t80 - t82;
t83 = t90 ^ 2;
t119 = qJD(3) * (t87 ^ 2 - t83);
t63 = t154 * qJD(5);
t74 = t90 * qJD(3);
t116 = t167 * t74;
t139 = t87 * qJD(4);
t98 = -qJD(5) * t172 + t89 * t116 + t86 * t139;
t27 = -qJD(3) * t135 + (qJD(3) * t85 + t123) * t90;
t17 = t47 * t27;
t171 = -0.2e1 * t84 ^ 2 * t88 * t149 + 0.2e1 * t28 * t46 + 0.2e1 * t17;
t170 = 0.2e1 * qJD(4);
t169 = 2 * qJD(6);
t166 = t90 * pkin(5);
t112 = pkin(5) * t89 + qJ(6) * t86;
t111 = -pkin(5) * t86 + qJ(6) * t89;
t44 = t111 * qJD(5) + t86 * qJD(6);
t16 = t44 * t90 + (-t112 - t167) * t140;
t163 = t16 * t86;
t162 = t27 * t90;
t42 = t112 * qJD(5) - t89 * qJD(6) + qJD(4);
t161 = t42 * t90;
t160 = t47 * t87;
t58 = t167 * t140;
t159 = t58 * t86;
t67 = t167 * t90;
t148 = qJD(3) * t86;
t147 = qJD(3) * t89;
t146 = qJD(4) * t90;
t144 = qJD(5) * t86;
t75 = qJD(5) * t89;
t142 = qJD(5) * t168;
t141 = qJD(6) * t87;
t138 = qJ(4) * qJD(5);
t137 = qJ(6) * qJD(3);
t136 = -0.2e1 * pkin(2) * qJD(3);
t133 = pkin(8) * t140;
t132 = pkin(8) * t74;
t131 = t86 * t140;
t129 = t89 * t74;
t127 = t86 * t142;
t126 = t89 * t143;
t125 = t89 * t142;
t122 = t87 * t74;
t121 = t86 * t75;
t120 = t90 * t137;
t118 = t83 * t121;
t117 = t86 * t130;
t114 = -pkin(3) * t90 - t151;
t113 = pkin(3) * t87 - t152;
t21 = qJ(6) * t87 + t172;
t25 = -t54 * t86 + t66 * t89;
t22 = -pkin(5) * t87 - t25;
t110 = t21 * t89 + t22 * t86;
t109 = t172 * t89 - t25 * t86;
t59 = qJ(4) - t111;
t107 = t59 * t90 - t156;
t105 = t27 * qJ(4) + t47 * qJD(4);
t14 = t27 * t86 + t47 * t75;
t30 = t46 * t86 - t134;
t104 = -0.2e1 * t12 * t29 + 0.2e1 * t30 * t13 + 0.2e1 * t17;
t102 = t106 * qJD(3);
t10 = t54 * t144 - t89 * (t102 - t139) - t86 * t116 - t66 * t75;
t101 = t86 * (pkin(9) * t87 + t113);
t100 = -t30 * t125 + (t29 * t144 - t173) * t168;
t99 = t114 * qJD(3) + t146;
t7 = -t10 + t120 + t141;
t8 = (t101 - t166) * qJD(3) - t98;
t1 = t110 * qJD(5) + t7 * t86 - t8 * t89;
t11 = -t86 * t102 + t98;
t2 = t109 * qJD(5) - t10 * t86 + t11 * t89;
t97 = (-t29 * t86 + t30 * t89) * qJD(5) + t173;
t96 = t162 + t28 * t87 + (t46 * t90 - t160) * qJD(3);
t95 = t96 * pkin(8);
t94 = -t47 * t128 - t12 * t87 + t89 * t162 + (-t89 * t160 + t29 * t90) * qJD(3);
t93 = -t29 * t131 + (-t12 * t86 + (-t13 + t145) * t89) * t90 + t49 * t30;
t78 = qJ(4) * t170;
t71 = -0.2e1 * t121;
t70 = 0.2e1 * t121;
t69 = -0.2e1 * t122;
t68 = 0.2e1 * t122;
t65 = t168 * t129;
t60 = -pkin(2) + t114;
t56 = -0.2e1 * t119;
t51 = -t126 + t131;
t50 = t86 * t74 + t87 * t75;
t48 = -t87 * t144 + t129;
t45 = t113 * qJD(3) - t139;
t41 = (t91 * t140 + t90 * t150) * t84;
t40 = (t87 * t150 - t91 * t74) * t84;
t39 = t112 * t90 + t67;
t38 = -0.2e1 * t82 * t122 - 0.2e1 * t118;
t37 = -0.2e1 * t80 * t122 + 0.2e1 * t118;
t36 = -t154 * t143 - t117;
t35 = t89 * t119 + t87 * t128;
t34 = 0.4e1 * t90 * t121 - t154 * t140;
t32 = 0.2e1 * t86 * t119 - 0.2e1 * t87 * t126;
t31 = -0.2e1 * t90 * t117 - t83 * t63;
t15 = -t47 * t144 + t27 * t89;
t5 = (-t47 * t148 + t13) * t87 + (qJD(3) * t30 + t14) * t90;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, -t123, 0, 0, 0, 0, 0, 0, 0, 0, -t41, t40, t96, -pkin(2) * t124 + t95, 0, 0, 0, 0, 0, 0, t96, t41, -t40 (t60 * t150 - t45 * t91) * t84 + t95, 0, 0, 0, 0, 0, 0, t94, -t5, t93, -t10 * t30 + t11 * t29 - t12 * t25 + t13 * t172 + t27 * t67 - t47 * t58, 0, 0, 0, 0, 0, 0, t94, t93, t5, t12 * t22 + t13 * t21 + t16 * t47 + t27 * t39 - t29 * t8 + t30 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t56, 0, t69, 0, 0, t87 * t136, t90 * t136, 0, 0, 0, 0, 0, t68, t56, t69, 0, -0.2e1 * t60 * t140 + 0.2e1 * t45 * t90, -0.2e1 * t45 * t87 - 0.2e1 * t60 * t74, 0.2e1 * t60 * t45, t37, 0.2e1 * t31, t32, t38, 0.2e1 * t35, t68, 0.2e1 * (-t67 * t147 + t11) * t87 + 0.2e1 * (qJD(3) * t25 - t67 * t144 - t58 * t89) * t90, 0.2e1 * (t67 * t148 + t10) * t87 + 0.2e1 * (-qJD(3) * t172 - t67 * t75 + t159) * t90, 0.2e1 * t109 * t140 + 0.2e1 * (t10 * t89 + t11 * t86 + (t172 * t86 + t25 * t89) * qJD(5)) * t90, -0.2e1 * t10 * t172 + 0.2e1 * t11 * t25 - 0.2e1 * t58 * t67, t37, t32, -0.2e1 * t31, t68, -0.2e1 * t35, t38, 0.2e1 * (-t39 * t147 - t8) * t87 + 0.2e1 * (-qJD(3) * t22 - t39 * t144 + t16 * t89) * t90, 0.2e1 * t110 * t140 + 0.2e1 * (-t7 * t89 - t8 * t86 + (t21 * t86 - t22 * t89) * qJD(5)) * t90, 0.2e1 * (-t39 * t148 + t7) * t87 + 0.2e1 * (qJD(3) * t21 + t39 * t75 + t163) * t90, 0.2e1 * t16 * t39 + 0.2e1 * t21 * t7 + 0.2e1 * t22 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, -t27, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, t27, -pkin(3) * t28 + t105, 0, 0, 0, 0, 0, 0, t14, t15, -t97, t100 + t105, 0, 0, 0, 0, 0, 0, t14, -t97, -t15, t27 * t59 + t47 * t42 + t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, -t140, 0, -t132, t133, 0, 0, 0, -t74, t140, 0, 0, 0, t99, t132, -t133, t99 * pkin(8), -t36, t34, t48, t36, -t50, 0, -t159 - t65 + (-qJ(4) * t140 + t146) * t89 + (t106 * t86 + t67 * t89) * qJD(5) (t106 * qJD(5) - t58) * t89 + (qJD(3) * t174 - qJD(5) * t67 - t146) * t86, -t2, -t58 * qJ(4) + t67 * qJD(4) - t168 * t2, -t36, t48, -t34, 0, t50, t36, t163 - t65 + (-t59 * t140 + t161) * t89 + (-t107 * t86 + t39 * t89) * qJD(5), -t1 (t107 * qJD(5) - t16) * t89 + (qJD(5) * t39 + t161 + (-t59 * t87 - t155) * qJD(3)) * t86, -t1 * t168 + t16 * t59 + t39 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t78, t71, 0.2e1 * t63, 0, t70, 0, 0, 0.2e1 * qJD(4) * t86 + 0.2e1 * t89 * t138, 0.2e1 * qJD(4) * t89 - 0.2e1 * t86 * t138, 0, t78, t71, 0, -0.2e1 * t63, 0, 0, t70, 0.2e1 * t42 * t86 + 0.2e1 * t59 * t75, 0, 0.2e1 * t144 * t59 - 0.2e1 * t42 * t89, 0.2e1 * t59 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, 0, t132, 0, 0, 0, 0, 0, 0, t48, -t50, 0, t2, 0, 0, 0, 0, 0, 0, t48, 0, t50, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, -t13, 0, 0, 0, 0, 0, 0, 0, 0, -t12, 0, t13, -pkin(5) * t12 + qJ(6) * t13 + qJD(6) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, 0, t49, t74, t11, t10, 0, 0, 0, t51, 0, t74, -t49, 0 (-t101 + 0.2e1 * t166) * qJD(3) + t98 (-pkin(5) * t140 + qJ(6) * t143) * t86 + (t87 * t137 + (pkin(5) * qJD(5) - qJD(6)) * t90) * t89, -t10 + 0.2e1 * t120 + 0.2e1 * t141, -pkin(5) * t8 + qJ(6) * t7 + qJD(6) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, 0, -t75, 0, t127, t125, 0, 0, 0, -t144, 0, 0, t75, 0, t127, -t44, -t125, -t44 * t168; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t75, 0, 0, 0, 0, 0, 0, 0, 0, -t144, 0, t75, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, qJ(6) * t169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t51, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, 0, -t127; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
