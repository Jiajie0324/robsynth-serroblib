% Calculate vector of inverse dynamics joint torques for
% S6PRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRPRP5_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRPRP5_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:45:33
% EndTime: 2019-03-08 21:49:15
% DurationCPUTime: 216.69s
% Computational Cost: add. (63877->1811), mult. (175656->2455), div. (0->0), fcn. (202536->10), ass. (0->665)
t1253 = Icges(6,4) - Icges(7,5);
t1263 = Icges(4,1) + Icges(5,2);
t1262 = Icges(5,1) + Icges(4,3);
t1196 = Icges(6,1) + Icges(7,1);
t1226 = Icges(4,4) + Icges(5,6);
t1225 = Icges(5,4) - Icges(4,5);
t1193 = Icges(7,4) + Icges(6,5);
t1192 = Icges(5,5) - Icges(4,6);
t1224 = Icges(4,2) + Icges(5,3);
t1191 = Icges(6,2) + Icges(7,3);
t1190 = Icges(7,2) + Icges(6,3);
t1189 = Icges(6,6) - Icges(7,6);
t1039 = cos(qJ(5));
t1038 = sin(qJ(3));
t743 = cos(pkin(10));
t747 = cos(qJ(2));
t744 = cos(pkin(6));
t746 = sin(qJ(2));
t1001 = t744 * t746;
t741 = sin(pkin(10));
t913 = t741 * t1001;
t701 = t743 * t747 - t913;
t1040 = cos(qJ(3));
t742 = sin(pkin(6));
t896 = t742 * t1040;
t605 = t1038 * t701 - t741 * t896;
t1000 = t744 * t747;
t700 = t1000 * t741 + t743 * t746;
t745 = sin(qJ(5));
t455 = -t1039 * t605 + t700 * t745;
t1261 = t1253 * t455;
t699 = t1001 * t743 + t741 * t747;
t603 = t1038 * t699 + t743 * t896;
t812 = t1000 * t743 - t741 * t746;
t453 = -t1039 * t603 - t745 * t812;
t1260 = t1253 * t453;
t456 = t1039 * t700 + t605 * t745;
t1259 = t1253 * t456;
t454 = -t1039 * t812 + t603 * t745;
t1258 = t1253 * t454;
t895 = t742 * t1038;
t702 = -t1040 * t744 + t746 * t895;
t1002 = t742 * t747;
t847 = t1039 * t1002;
t610 = -t702 * t745 + t847;
t1257 = t1253 * t610;
t609 = t1002 * t745 + t1039 * t702;
t1256 = t1253 * t609;
t662 = t812 * qJD(2);
t882 = qJD(3) * t1038;
t843 = t742 * t882;
t883 = qJD(3) * t1040;
t445 = t1038 * t662 + t699 * t883 - t743 * t843;
t663 = t699 * qJD(2);
t191 = qJD(5) * t454 - t1039 * t445 + t663 * t745;
t192 = -qJD(5) * t453 + t1039 * t663 + t445 * t745;
t844 = t742 * t883;
t446 = t1040 * t662 - t699 * t882 - t743 * t844;
t1255 = t1189 * t446 - t1191 * t191 + t1253 * t192;
t606 = t1040 * t701 + t741 * t895;
t664 = t700 * qJD(2);
t447 = qJD(3) * t606 - t1038 * t664;
t936 = qJD(2) * t743;
t665 = -qJD(2) * t913 + t747 * t936;
t193 = qJD(5) * t456 - t1039 * t447 + t665 * t745;
t194 = -qJD(5) * t455 + t1039 * t665 + t447 * t745;
t448 = -t1040 * t664 - t701 * t882 + t741 * t844;
t1254 = t1189 * t448 - t1191 * t193 + t1253 * t194;
t1252 = t1189 * t191 - t1190 * t446 - t1193 * t192;
t1251 = -t1189 * t193 + t1190 * t448 + t1193 * t194;
t1250 = t1193 * t446 + t1196 * t192 - t1253 * t191;
t1249 = t1193 * t448 + t1196 * t194 - t1253 * t193;
t703 = t1038 * t744 + t746 * t896;
t893 = t747 * t1038;
t846 = t742 * t893;
t607 = qJD(2) * t846 + qJD(3) * t703;
t935 = qJD(2) * t746;
t890 = t742 * t935;
t931 = qJD(5) * t702;
t331 = -t607 * t1039 - qJD(5) * t847 + (t890 + t931) * t745;
t332 = qJD(5) * t609 + t1039 * t890 + t607 * t745;
t848 = t747 * t896;
t608 = qJD(2) * t848 + t744 * t883 - t746 * t843;
t1248 = -t1189 * t608 + t1191 * t331 - t1253 * t332;
t1247 = -t1189 * t331 + t1190 * t608 + t1193 * t332;
t1246 = t1193 * t608 + t1196 * t332 - t1253 * t331;
t604 = t1040 * t699 - t743 * t895;
t1122 = -t1189 * t604 + t1191 * t453 - t1258;
t1121 = -t1189 * t606 + t1191 * t455 - t1259;
t1120 = -t1189 * t453 + t1190 * t604 + t1193 * t454;
t1119 = -t1189 * t455 + t1190 * t606 + t1193 * t456;
t1118 = t1193 * t604 + t1196 * t454 - t1260;
t1117 = t1193 * t606 + t1196 * t456 - t1261;
t1245 = t1192 * t663 + t1224 * t445 - t1226 * t446;
t1244 = t1192 * t445 - t1225 * t446 + t1262 * t663;
t1243 = t1192 * t447 - t1225 * t448 + t1262 * t665;
t1242 = -t1225 * t663 - t1226 * t445 + t1263 * t446;
t1241 = t1192 * t665 + t1224 * t447 - t1226 * t448;
t1240 = -t1225 * t665 - t1226 * t447 + t1263 * t448;
t1021 = Icges(5,6) * t604;
t293 = -Icges(5,5) * t812 + Icges(5,3) * t603 - t1021;
t1030 = Icges(4,4) * t604;
t299 = -Icges(4,2) * t603 - Icges(4,6) * t812 + t1030;
t1239 = t293 - t299;
t295 = Icges(4,5) * t604 - Icges(4,6) * t603 - Icges(4,3) * t812;
t301 = -Icges(5,1) * t812 - Icges(5,4) * t604 + Icges(5,5) * t603;
t1107 = t295 + t301;
t296 = Icges(4,5) * t606 - Icges(4,6) * t605 + Icges(4,3) * t700;
t302 = Icges(5,1) * t700 - Icges(5,4) * t606 + Icges(5,5) * t605;
t1106 = t296 + t302;
t583 = Icges(5,6) * t603;
t297 = -Icges(5,4) * t812 - Icges(5,2) * t604 + t583;
t585 = Icges(4,4) * t603;
t303 = Icges(4,1) * t604 - Icges(4,5) * t812 - t585;
t1238 = -t297 + t303;
t1020 = Icges(5,6) * t606;
t294 = Icges(5,5) * t700 + Icges(5,3) * t605 - t1020;
t1029 = Icges(4,4) * t606;
t300 = -Icges(4,2) * t605 + Icges(4,6) * t700 + t1029;
t1237 = -t300 + t294;
t584 = Icges(5,6) * t605;
t298 = Icges(5,4) * t700 - Icges(5,2) * t606 + t584;
t586 = Icges(4,4) * t605;
t304 = Icges(4,1) * t606 + Icges(4,5) * t700 - t586;
t1236 = t304 - t298;
t1105 = -t1189 * t703 - t1191 * t609 + t1257;
t1104 = t1189 * t609 + t1190 * t703 - t1193 * t610;
t1103 = t1193 * t703 - t1196 * t610 + t1256;
t1235 = t1192 * t607 - t1225 * t608 + t1262 * t890;
t1234 = t1192 * t890 + t1224 * t607 - t1226 * t608;
t1233 = -t1225 * t890 - t1226 * t607 + t1263 * t608;
t506 = -Icges(5,1) * t1002 - Icges(5,4) * t703 + Icges(5,5) * t702;
t507 = Icges(4,5) * t703 - Icges(4,6) * t702 - Icges(4,3) * t1002;
t1094 = t506 + t507;
t1019 = Icges(5,6) * t703;
t504 = -Icges(5,5) * t1002 + Icges(5,3) * t702 - t1019;
t1028 = Icges(4,4) * t703;
t508 = -Icges(4,2) * t702 - Icges(4,6) * t1002 + t1028;
t1232 = -t508 + t504;
t690 = Icges(5,6) * t702;
t505 = -Icges(5,4) * t1002 - Icges(5,2) * t703 + t690;
t691 = Icges(4,4) * t702;
t509 = Icges(4,1) * t703 - Icges(4,5) * t1002 - t691;
t1231 = t509 - t505;
t1149 = t1117 * t192 + t1119 * t446 + t1121 * t191 + t1249 * t454 + t1251 * t604 - t1254 * t453;
t1211 = -t1118 * t192 - t1120 * t446 - t1122 * t191 - t1250 * t454 + t1252 * t604 + t1255 * t453;
t1147 = t1117 * t194 + t1119 * t448 + t1121 * t193 + t1249 * t456 + t1251 * t606 - t1254 * t455;
t1210 = -t1118 * t194 - t1120 * t448 - t1122 * t193 - t1250 * t456 + t1252 * t606 + t1255 * t455;
t1145 = t1117 * t332 + t1119 * t608 + t1121 * t331 - t1249 * t610 + t1251 * t703 + t1254 * t609;
t1209 = -t1118 * t332 - t1120 * t608 - t1122 * t331 + t1250 * t610 + t1252 * t703 - t1255 * t609;
t1141 = t1103 * t192 + t1104 * t446 + t1105 * t191 + t1246 * t454 + t1247 * t604 + t1248 * t453;
t1140 = t1103 * t194 + t1104 * t448 + t1105 * t193 + t1246 * t456 + t1247 * t606 + t1248 * t455;
t1139 = t1103 * t332 + t1104 * t608 + t1105 * t331 - t1246 * t610 + t1247 * t703 - t1248 * t609;
t1230 = t1107 * t663 + t1238 * t446 + t1239 * t445 + t1242 * t604 - t1244 * t812 + t1245 * t603;
t1205 = t1106 * t663 + t1236 * t446 + t1237 * t445 + t1240 * t604 + t1241 * t603 - t1243 * t812;
t1229 = t1107 * t665 + t1238 * t448 + t1239 * t447 + t1242 * t606 + t1244 * t700 + t1245 * t605;
t1203 = t1106 * t665 + t1236 * t448 + t1237 * t447 + t1240 * t606 + t1241 * t605 + t1243 * t700;
t1228 = (t1107 * t935 - t1244 * t747) * t742 + t1242 * t703 + t1245 * t702 + t1238 * t608 + t1239 * t607;
t1200 = (t1106 * t935 - t1243 * t747) * t742 + t1240 * t703 + t1241 * t702 + t1236 * t608 + t1237 * t607;
t1138 = t1118 * t454 + t1120 * t604 + t1122 * t453;
t1137 = t1117 * t454 + t1119 * t604 + t1121 * t453;
t1136 = t1118 * t456 + t1120 * t606 + t1122 * t455;
t1135 = t1117 * t456 + t1119 * t606 + t1121 * t455;
t1199 = t1094 * t663 + t1231 * t446 + t1232 * t445 + t1233 * t604 + t1234 * t603 - t1235 * t812;
t1198 = t1094 * t665 + t1231 * t448 + t1232 * t447 + t1233 * t606 + t1234 * t605 + t1235 * t700;
t1134 = -t1118 * t610 + t1120 * t703 - t1122 * t609;
t1133 = -t1117 * t610 + t1119 * t703 - t1121 * t609;
t1197 = (t1094 * t935 - t1235 * t747) * t742 + t1233 * t703 + t1234 * t702 + t1231 * t608 + t1232 * t607;
t1132 = t1103 * t454 + t1104 * t604 + t1105 * t453;
t1131 = t1103 * t456 + t1104 * t606 + t1105 * t455;
t117 = t294 * t603 - t298 * t604 - t302 * t812;
t121 = -t296 * t812 - t300 * t603 + t304 * t604;
t1188 = t117 + t121;
t119 = t294 * t605 - t298 * t606 + t302 * t700;
t123 = t296 * t700 - t300 * t605 + t304 * t606;
t1187 = t119 + t123;
t116 = t293 * t603 - t297 * t604 - t301 * t812;
t120 = -t295 * t812 - t299 * t603 + t303 * t604;
t1186 = t120 + t116;
t118 = t293 * t605 - t297 * t606 + t301 * t700;
t122 = t295 * t700 - t299 * t605 + t303 * t606;
t1185 = t122 + t118;
t1126 = -t1103 * t610 + t1104 * t703 - t1105 * t609;
t1125 = -t1002 * t1107 + t1238 * t703 + t1239 * t702;
t1124 = -t1002 * t1106 + t1236 * t703 + t1237 * t702;
t139 = t504 * t603 - t505 * t604 - t506 * t812;
t141 = -t507 * t812 - t508 * t603 + t509 * t604;
t1184 = t139 + t141;
t140 = t504 * t605 - t505 * t606 + t506 * t700;
t142 = t507 * t700 - t508 * t605 + t509 * t606;
t1183 = t140 + t142;
t1123 = -t1002 * t1094 + t1231 * t703 + t1232 * t702;
t1223 = -t1039 * t1191 - t1253 * t745;
t1222 = t1039 * t1189 + t1193 * t745;
t1221 = t1039 * t1253 + t1196 * t745;
t1164 = rSges(7,1) + pkin(5);
t937 = qJD(2) * t742;
t731 = t741 * t937;
t619 = qJD(3) * t700 + t731;
t414 = qJD(5) * t606 + t619;
t891 = t742 * t936;
t620 = -qJD(3) * t812 - t891;
t415 = qJD(5) * t604 + t620;
t740 = qJD(2) * t744;
t710 = -qJD(3) * t1002 + t740;
t582 = qJD(5) * t703 + t710;
t1142 = t1126 * t582 + t1133 * t414 + t1134 * t415;
t1220 = t1142 / 0.2e1;
t921 = qJDD(2) * t742;
t730 = t741 * t921;
t466 = qJD(3) * t665 + qJDD(3) * t700 + t730;
t189 = qJD(5) * t448 + qJDD(5) * t606 + t466;
t878 = t743 * t921;
t467 = qJD(3) * t663 - qJDD(3) * t812 - t878;
t190 = qJD(5) * t446 + qJDD(5) * t604 + t467;
t739 = qJDD(2) * t744;
t932 = qJD(3) * t746;
t888 = t742 * t932;
t622 = qJD(2) * t888 - qJDD(3) * t1002 + t739;
t334 = qJD(5) * t608 + qJDD(5) * t703 + t622;
t1151 = t1126 * t334 + t1133 * t189 + t1134 * t190 + t1139 * t582 + t1145 * t414 - t1209 * t415;
t1219 = t1123 * t622 + t1124 * t466 + t1125 * t467 + t1197 * t710 + t1200 * t619 + t1228 * t620 + t1151;
t1152 = t1131 * t334 + t1135 * t189 + t1136 * t190 + t1140 * t582 + t1147 * t414 - t1210 * t415;
t1218 = t1183 * t622 + t1185 * t467 + t1187 * t466 + t1198 * t710 + t1203 * t619 + t1229 * t620 + t1152;
t1153 = t1132 * t334 + t1137 * t189 + t1138 * t190 + t1141 * t582 + t1149 * t414 - t1211 * t415;
t1217 = t1184 * t622 + t1186 * t467 + t1188 * t466 + t1199 * t710 + t1205 * t619 + t1230 * t620 + t1153;
t1216 = (t1196 * t453 - t1122 + t1258) * t415 + (t1196 * t455 - t1121 + t1259) * t414 + (-t1196 * t609 - t1105 - t1257) * t582;
t1215 = (-t1191 * t454 + t1118 - t1260) * t415 + (-t1191 * t456 + t1117 - t1261) * t414 + (t1191 * t610 + t1103 + t1256) * t582;
t1144 = t1132 * t582 + t1137 * t414 + t1138 * t415;
t1143 = t1131 * t582 + t1135 * t414 + t1136 * t415;
t1208 = t1184 * t710 + t1186 * t620 + t1188 * t619;
t1207 = t1183 * t710 + t1185 * t620 + t1187 * t619;
t1202 = t1123 * t710 + t1124 * t619 + t1125 * t620;
t1163 = rSges(7,3) + qJ(6);
t1182 = t1189 * t603 + t1223 * t604;
t1181 = t1189 * t605 + t1223 * t606;
t1180 = -t1193 * t603 + t1221 * t604;
t1179 = -t1193 * t605 + t1221 * t606;
t1178 = t1189 * t702 + t1223 * t703;
t1177 = -t1193 * t702 + t1221 * t703;
t1176 = (-t1039 * t1105 + t1103 * t745 - t1190 * t702 + t1222 * t703) * t582 + (-t1039 * t1122 + t1118 * t745 - t1190 * t603 + t1222 * t604) * t415 + (-t1039 * t1121 + t1117 * t745 - t1190 * t605 + t1222 * t606) * t414;
t1175 = (t1224 * t703 - t1231 + t690 + t691) * t710 + (t1224 * t604 - t1238 + t583 + t585) * t620 + (t1224 * t606 - t1236 + t584 + t586) * t619;
t1174 = (-t1263 * t702 - t1019 - t1028 + t1232) * t710 + (-t1263 * t603 - t1021 - t1030 + t1239) * t620 + (-t1263 * t605 - t1020 - t1029 + t1237) * t619;
t1173 = (t1192 * t703 + t1225 * t702) * t710 + (t1192 * t604 + t1225 * t603) * t620 + (t1192 * t606 + t1225 * t605) * t619;
t1172 = t1038 * t1224 - t1040 * t1226;
t1171 = t1038 * t1226 - t1040 * t1263;
t914 = 0.2e1 * qJD(2);
t188 = rSges(6,1) * t456 - rSges(6,2) * t455 + rSges(6,3) * t606;
t379 = pkin(3) * t606 + qJ(4) * t605;
t465 = pkin(4) * t700 + pkin(9) * t606;
t954 = -t465 - t379;
t1116 = -t188 + t954;
t1012 = t604 * t745;
t1162 = -t603 * rSges(7,2) + t1012 * t1164;
t1009 = t606 * t745;
t1161 = -t605 * rSges(7,2) + t1009 * t1164;
t1006 = t703 * t745;
t1160 = -t702 * rSges(7,2) + t1006 * t1164;
t1159 = t603 * t710 - t620 * t702;
t1158 = -t605 * t710 + t619 * t702;
t1157 = -t603 * t619 + t605 * t620;
t186 = rSges(6,1) * t454 - rSges(6,2) * t453 + rSges(6,3) * t604;
t321 = -rSges(6,1) * t610 + rSges(6,2) * t609 + rSges(6,3) * t703;
t621 = -pkin(4) * t1002 + pkin(9) * t703;
t563 = pkin(3) * t703 + qJ(4) * t702;
t580 = qJD(4) * t605;
t1004 = t742 * t743;
t551 = pkin(2) * t699 - pkin(8) * t812;
t708 = (pkin(2) * t746 - pkin(8) * t747) * t742;
t813 = -t1004 * t708 - t551 * t744;
t790 = t813 * qJD(2);
t775 = t620 * t563 + t580 + t790;
t375 = pkin(3) * t604 + qJ(4) * t603;
t464 = -pkin(4) * t812 + pkin(9) * t604;
t957 = -t375 - t464;
t761 = t620 * t621 + t710 * t957 + t775;
t70 = -t186 * t582 + t321 * t415 + t761;
t1156 = 0.2e1 * t70;
t961 = t375 * t1002 - t563 * t812;
t1155 = 0.2e1 * t464 * t1002 - 0.2e1 * t621 * t812 + 0.2e1 * t961;
t553 = pkin(2) * t701 + pkin(8) * t700;
t538 = t744 * t553;
t960 = t744 * t379 + t538;
t1154 = 0.2e1 * t744 * t465 + 0.2e1 * t960;
t683 = qJD(4) * t702;
t884 = t551 * t731 + t553 * t891 + qJD(1);
t835 = t619 * t375 + t683 + t884;
t776 = t619 * t464 + t620 * t954 + t835;
t927 = qJD(6) * t609;
t983 = rSges(7,2) * t606 + t1163 * t455 + t1164 * t456;
t984 = rSges(7,2) * t604 + t1163 * t453 + t1164 * t454;
t42 = t414 * t984 - t415 * t983 + t776 - t927;
t1130 = t42 * t984;
t578 = qJD(4) * t603;
t822 = t553 * t740 - t708 * t731;
t791 = t710 * t379 + t578 + t822;
t943 = -t563 - t621;
t764 = t710 * t465 + t619 * t943 + t791;
t929 = qJD(6) * t453;
t965 = rSges(7,2) * t703 - t1163 * t609 - t1164 * t610;
t47 = -t414 * t965 + t582 * t983 + t764 + t929;
t1129 = t47 * t983;
t928 = qJD(6) * t455;
t48 = t415 * t965 - t582 * t984 + t761 + t928;
t1128 = t48 * t965;
t113 = rSges(6,1) * t194 - rSges(6,2) * t193 + rSges(6,3) * t448;
t172 = pkin(3) * t448 + qJ(4) * t447 + t580;
t326 = pkin(4) * t665 + pkin(9) * t448;
t964 = -t326 - t172;
t1127 = -t113 + t964;
t845 = t1039 * t1038;
t521 = t699 * t745 - t812 * t845;
t894 = t745 * t1038;
t522 = t1039 * t699 + t812 * t894;
t901 = t812 * t1040;
t1115 = -t1189 * t901 + t1191 * t521 - t1253 * t522;
t523 = t700 * t845 + t701 * t745;
t524 = t1039 * t701 - t700 * t894;
t899 = t700 * t1040;
t1114 = t1189 * t899 + t1191 * t523 - t1253 * t524;
t1113 = -t1189 * t521 + t1190 * t901 + t1193 * t522;
t1112 = -t1189 * t523 - t1190 * t899 + t1193 * t524;
t1111 = t1193 * t901 + t1196 * t522 - t1253 * t521;
t1110 = -t1193 * t899 + t1196 * t524 - t1253 * t523;
t892 = t1039 * qJ(6);
t903 = t604 * t1039;
t1109 = -rSges(7,3) * t903 - t604 * t892 + t1162;
t902 = t606 * t1039;
t1108 = -rSges(7,3) * t902 - t606 * t892 + t1161;
t306 = -rSges(5,1) * t812 - rSges(5,2) * t604 + rSges(5,3) * t603;
t974 = -t306 - t375;
t307 = rSges(5,1) * t700 - rSges(5,2) * t606 + rSges(5,3) * t605;
t973 = -t307 - t379;
t906 = -t321 + t943;
t1102 = t1172 * t812 + t1192 * t699;
t1101 = -t1172 * t700 + t1192 * t701;
t1100 = -t1171 * t812 - t1225 * t699;
t1099 = t1171 * t700 - t1225 * t701;
t897 = t703 * t1039;
t1098 = -rSges(7,3) * t897 - t703 * t892 + t1160;
t1003 = t742 * t746;
t630 = -t1002 * t845 + t1003 * t745;
t631 = (t1039 * t746 + t745 * t893) * t742;
t1097 = -t1189 * t848 + t1191 * t630 - t1253 * t631;
t1096 = -t1189 * t630 + t1190 * t848 + t1193 * t631;
t1095 = t1193 * t848 + t1196 * t631 - t1253 * t630;
t511 = -rSges(5,1) * t1002 - rSges(5,2) * t703 + rSges(5,3) * t702;
t946 = -t511 - t563;
t1093 = (t1172 * t747 + t1192 * t746) * t742;
t1092 = (-t1171 * t747 - t1225 * t746) * t742;
t1089 = (t1189 * t610 + t1193 * t609) * t582 + (-t1189 * t454 - t1193 * t453) * t415 + (-t1189 * t456 - t1193 * t455) * t414;
t704 = (Icges(3,5) * t747 - Icges(3,6) * t746) * t742;
t668 = qJD(2) * t704;
t998 = rSges(7,2) * t448 + t1163 * t193 + t1164 * t194 + t928;
t999 = rSges(7,2) * t446 + t1163 * t191 + t1164 * t192 + t929;
t1088 = t984 * t189 - t983 * t190 + t999 * t414 - t998 * t415;
t478 = Icges(3,5) * t699 + Icges(3,6) * t812 - Icges(3,3) * t1004;
t1005 = t741 * t742;
t479 = Icges(3,5) * t701 - Icges(3,6) * t700 + Icges(3,3) * t1005;
t1033 = Icges(3,4) * t699;
t480 = Icges(3,2) * t812 - Icges(3,6) * t1004 + t1033;
t1032 = Icges(3,4) * t701;
t481 = -Icges(3,2) * t700 + Icges(3,6) * t1005 + t1032;
t677 = Icges(3,4) * t812;
t482 = Icges(3,1) * t699 - Icges(3,5) * t1004 + t677;
t678 = Icges(3,4) * t700;
t483 = Icges(3,1) * t701 + Icges(3,5) * t1005 - t678;
t640 = Icges(3,3) * t744 + (Icges(3,5) * t746 + Icges(3,6) * t747) * t742;
t1031 = Icges(3,4) * t746;
t641 = Icges(3,6) * t744 + (Icges(3,2) * t747 + t1031) * t742;
t732 = Icges(3,4) * t1002;
t642 = Icges(3,1) * t1003 + Icges(3,5) * t744 + t732;
t1087 = (-t1004 * t640 + t641 * t812 + t642 * t699) * t744 + t742 * (-(-t1004 * t478 + t480 * t812 + t482 * t699) * t743 + (-t1004 * t479 + t481 * t812 + t483 * t699) * t741);
t325 = pkin(4) * t663 + pkin(9) * t446;
t256 = t619 * t325;
t277 = t466 * t464;
t171 = pkin(3) * t446 + qJ(4) * t445 + t578;
t160 = t619 * t171;
t215 = t466 * t375;
t597 = qJD(4) * t607;
t676 = qJDD(4) * t702;
t530 = pkin(2) * t662 + pkin(8) * t663;
t462 = t530 * t731;
t531 = -pkin(2) * t664 + pkin(8) * t665;
t463 = t531 * t891;
t484 = t551 * t730;
t485 = t553 * t878;
t826 = qJDD(1) + t462 + t463 + t484 + t485;
t777 = t160 + t215 + t597 + t676 + t826;
t757 = t467 * t954 + t620 * t964 + t256 + t277 + t777;
t920 = qJDD(6) * t609;
t930 = qJD(6) * t331;
t7 = t757 - t920 + t930 + t1088;
t1086 = 0.2e1 * t7;
t1015 = t188 * t190;
t1016 = t186 * t189;
t1017 = t113 * t415;
t111 = rSges(6,1) * t192 - rSges(6,2) * t191 + rSges(6,3) * t446;
t1018 = t111 * t414;
t16 = -t1015 + t1016 - t1017 + t757 + t1018;
t1085 = 0.2e1 * t16;
t1084 = 0.2e1 * t42;
t1083 = 0.2e1 * t47;
t1082 = 0.2e1 * t48;
t61 = t186 * t414 - t188 * t415 + t776;
t1081 = 0.2e1 * t61;
t69 = t188 * t582 - t321 * t414 + t764;
t1080 = 0.2e1 * t69;
t85 = t306 * t619 + t620 * t973 + t835;
t1079 = 0.2e1 * t85;
t92 = t307 * t710 + t619 * t946 + t791;
t1078 = 0.2e1 * t92;
t1077 = -0.2e1 * t467;
t1076 = -0.2e1 * t620;
t1075 = m(5) / 0.2e1;
t1074 = m(6) / 0.2e1;
t1073 = m(7) / 0.2e1;
t1072 = t189 / 0.2e1;
t1071 = t190 / 0.2e1;
t1070 = t334 / 0.2e1;
t1069 = -t414 / 0.2e1;
t1068 = t414 / 0.2e1;
t1067 = -t415 / 0.2e1;
t1066 = t415 / 0.2e1;
t1063 = t466 / 0.2e1;
t1062 = t467 / 0.2e1;
t1059 = -t582 / 0.2e1;
t1058 = t582 / 0.2e1;
t1054 = -t619 / 0.2e1;
t1053 = t619 / 0.2e1;
t1052 = -t620 / 0.2e1;
t1051 = t620 / 0.2e1;
t1050 = t622 / 0.2e1;
t1043 = -t710 / 0.2e1;
t1042 = t710 / 0.2e1;
t1037 = t603 * pkin(9);
t1036 = t605 * pkin(9);
t1035 = t702 * pkin(9);
t997 = rSges(7,2) * t608 + t1163 * t331 + t1164 * t332 - t927;
t996 = t700 * t171 + t665 * t375;
t473 = t744 * t531;
t995 = t744 * t172 + t473;
t994 = -t171 - t530;
t210 = rSges(5,1) * t665 - rSges(5,2) * t448 + rSges(5,3) * t447;
t993 = -t172 - t210;
t982 = t607 + t1157;
t981 = t1163 * t454 - t1164 * t453;
t980 = t1163 * t456 - t1164 * t455;
t595 = t603 * pkin(3);
t373 = t604 * qJ(4) - t595;
t979 = qJD(4) * t703 + t619 * t373;
t978 = -rSges(7,2) * t901 - t1163 * t521 - t1164 * t522;
t977 = -rSges(7,2) * t899 + t1163 * t523 + t1164 * t524;
t976 = t445 + t1158;
t975 = t447 + t1159;
t312 = pkin(3) * t608 + qJ(4) * t607 + t683;
t341 = rSges(5,1) * t890 - rSges(5,2) * t608 + rSges(5,3) * t607;
t972 = -t312 - t341;
t539 = pkin(4) * t890 + pkin(9) * t608;
t971 = -t312 - t539;
t313 = t700 * t375;
t970 = t700 * t464 + t313;
t596 = t605 * pkin(3);
t377 = t606 * qJ(4) - t596;
t963 = qJD(4) * t604 + t710 * t377;
t343 = t379 * t890;
t962 = t465 * t890 + t343;
t697 = t702 * pkin(3);
t561 = t703 * qJ(4) - t697;
t959 = qJD(4) * t606 + t620 * t561;
t372 = t603 * rSges(5,2) + t604 * rSges(5,3);
t958 = -t372 - t373;
t376 = t605 * rSges(5,2) + t606 * rSges(5,3);
t956 = -t376 - t377;
t955 = -t1163 * t610 + t1164 * t609;
t953 = t531 * t1004 + t530 * t1005;
t952 = rSges(7,2) * t848 + t1163 * t630 + t1164 * t631;
t951 = Icges(3,1) * t812 - t1033 - t480;
t950 = -Icges(3,1) * t700 - t1032 - t481;
t949 = -Icges(3,2) * t699 + t482 + t677;
t948 = -Icges(3,2) * t701 + t483 - t678;
t550 = pkin(2) * t812 + t699 * pkin(8);
t552 = -t700 * pkin(2) + t701 * pkin(8);
t947 = t550 * t731 + t552 * t891;
t945 = t553 * t1004 + t551 * t1005;
t560 = t702 * rSges(5,2) + t703 * rSges(5,3);
t944 = -t560 - t561;
t706 = (Icges(3,1) * t747 - t1031) * t742;
t940 = -t641 + t706;
t939 = -Icges(3,2) * t1003 + t642 + t732;
t900 = t812 * t1038;
t528 = pkin(3) * t901 + qJ(4) * t900;
t898 = t700 * t1038;
t529 = -pkin(3) * t899 - qJ(4) * t898;
t540 = t699 * pkin(4) + pkin(9) * t901;
t541 = t701 * pkin(4) - pkin(9) * t899;
t643 = pkin(3) * t848 + qJ(4) * t846;
t692 = pkin(4) * t1003 + pkin(9) * t848;
t709 = pkin(2) * t1002 + pkin(8) * t1003;
t934 = qJD(3) * t699;
t933 = qJD(3) * t701;
t925 = 2 * m(4);
t924 = 0.2e1 * m(5);
t923 = 0.2e1 * m(6);
t922 = 0.2e1 * m(7);
t919 = 0.2e1 * t700;
t918 = 0.2e1 * t741;
t917 = 0.2e1 * t743;
t916 = 0.2e1 * t744;
t915 = 0.2e1 * t747;
t151 = rSges(6,1) * t332 - rSges(6,2) * t331 + rSges(6,3) * t608;
t912 = -t151 + t971;
t911 = t171 * t1002 - t312 * t812 + t663 * t563;
t910 = t744 * t326 + t995;
t909 = -t325 + t994;
t908 = -t186 + t957;
t685 = (pkin(2) * t747 + pkin(8) * t746) * t937;
t907 = -t685 + t972;
t249 = t522 * rSges(6,1) - t521 * rSges(6,2) + rSges(6,3) * t901;
t251 = t524 * rSges(6,1) - t523 * rSges(6,2) - rSges(6,3) * t899;
t904 = -t708 + t946;
t272 = rSges(6,1) * t1012 + rSges(6,2) * t903 - t603 * rSges(6,3);
t274 = rSges(6,1) * t1009 + rSges(6,2) * t902 - t605 * rSges(6,3);
t431 = t631 * rSges(6,1) - t630 * rSges(6,2) + rSges(6,3) * t848;
t413 = rSges(6,1) * t1006 + rSges(6,2) * t897 - t702 * rSges(6,3);
t889 = t709 * t936;
t881 = qJD(4) * t1038;
t880 = qJD(5) * t1040;
t879 = qJD(6) * t1039;
t877 = t937 / 0.2e1;
t871 = -t925 / 0.2e1;
t870 = t925 / 0.2e1;
t869 = -t923 / 0.2e1;
t868 = -t922 / 0.2e1;
t342 = rSges(4,1) * t608 - rSges(4,2) * t607 + rSges(4,3) * t890;
t867 = t742 * (-t342 - t685);
t512 = rSges(4,1) * t703 - rSges(4,2) * t702 - rSges(4,3) * t1002;
t866 = t742 * (-t512 - t708);
t861 = t746 * t914;
t860 = t964 - t998;
t859 = t971 - t997;
t858 = -t685 + t912;
t857 = t700 * t325 + t665 * t464 + t996;
t856 = t172 * t1004 + t171 * t1005 + t953;
t855 = t957 - t984;
t854 = t954 - t983;
t853 = t943 - t965;
t852 = -t708 + t906;
t851 = t379 * t1004 + t375 * t1005 + t945;
t849 = t709 + t643;
t840 = t61 * t111 + t16 * t186;
t839 = -t685 + t859;
t838 = qJD(4) * t846 + t375 * t933 + t619 * t528 + t947;
t837 = -t708 + t853;
t748 = 0.2e1 * qJDD(1);
t836 = 0.2e1 * t462 + 0.2e1 * t463 + 0.2e1 * t484 + 0.2e1 * t485 + t748;
t515 = Icges(3,5) * t662 - Icges(3,6) * t663;
t516 = -Icges(3,5) * t664 - Icges(3,6) * t665;
t517 = Icges(3,4) * t662 - Icges(3,2) * t663;
t518 = -Icges(3,4) * t664 - Icges(3,2) * t665;
t519 = Icges(3,1) * t662 - Icges(3,4) * t663;
t520 = -Icges(3,1) * t664 - Icges(3,4) * t665;
t833 = -(t1005 * t515 - t480 * t665 - t482 * t664 - t517 * t700 + t519 * t701) * t743 + (t1005 * t516 - t481 * t665 - t483 * t664 - t518 * t700 + t520 * t701) * t741;
t832 = -(t515 * t744 + (t517 * t747 + t519 * t746 + (-t480 * t746 + t482 * t747) * qJD(2)) * t742) * t743 + (t516 * t744 + (t518 * t747 + t520 * t746 + (-t481 * t746 + t483 * t747) * qJD(2)) * t742) * t741;
t830 = -(t1005 * t478 - t480 * t700 + t482 * t701) * t743 + (t1005 * t479 - t481 * t700 + t483 * t701) * t741;
t829 = -(t478 * t744 + (t480 * t747 + t482 * t746) * t742) * t743 + (t479 * t744 + (t481 * t747 + t483 * t746) * t742) * t741;
t488 = rSges(3,1) * t699 + rSges(3,2) * t812 - rSges(3,3) * t1004;
t489 = rSges(3,1) * t701 - rSges(3,2) * t700 + rSges(3,3) * t1005;
t828 = t488 * t741 + t489 * t743;
t525 = rSges(3,1) * t662 - rSges(3,2) * t663;
t526 = -rSges(3,1) * t664 - rSges(3,2) * t665;
t827 = t525 * t741 + t526 * t743;
t825 = t550 + t528;
t824 = t552 + t529;
t823 = t552 * t740 - t709 * t731;
t821 = t326 * t1004 + t325 * t1005 + t856;
t820 = t325 * t1002 - t539 * t812 + t663 * t621 + t911;
t819 = t465 * t1004 + t464 * t1005 + t851;
t818 = t849 + t692;
t659 = rSges(3,3) * t744 + (rSges(3,1) * t746 + rSges(3,2) * t747) * t742;
t817 = -t1004 * t659 - t488 * t744;
t816 = -t1005 * t659 + t489 * t744;
t707 = (rSges(3,1) * t747 - rSges(3,2) * t746) * t742;
t675 = qJD(2) * t707;
t815 = -t1004 * t675 - t525 * t744;
t814 = -t1005 * t675 + t526 * t744;
t402 = rSges(4,1) * t901 - rSges(4,2) * t900 + t699 * rSges(4,3);
t403 = -rSges(4,1) * t899 + rSges(4,2) * t898 + t701 * rSges(4,3);
t404 = t699 * rSges(5,1) - rSges(5,2) * t901 + rSges(5,3) * t900;
t405 = t701 * rSges(5,1) + rSges(5,2) * t899 - rSges(5,3) * t898;
t805 = t742 * t828;
t804 = -t550 * t740 + t563 * t934 + t620 * t643 - t700 * t881;
t803 = t825 + t540;
t802 = t824 + t541;
t800 = -Icges(5,4) * t1040 + Icges(5,5) * t1038;
t798 = -Icges(4,5) * t1040 + Icges(4,6) * t1038;
t617 = rSges(4,1) * t848 - rSges(4,2) * t846 + rSges(4,3) * t1003;
t618 = rSges(5,1) * t1003 - rSges(5,2) * t848 + rSges(5,3) * t846;
t789 = t42 * t999 + t7 * t984;
t787 = -Icges(5,1) * t699 + t1038 * t293 - t1040 * t297 - t800 * t812;
t786 = -Icges(5,1) * t701 + t1038 * t294 - t1040 * t298 + t700 * t800;
t785 = Icges(4,3) * t699 + t1038 * t299 - t1040 * t303 - t798 * t812;
t784 = Icges(4,3) * t701 + t1038 * t300 - t1040 * t304 + t700 * t798;
t783 = t1038 * t504 - t1040 * t505 - (Icges(5,1) * t746 + t747 * t800) * t742;
t782 = t1038 * t508 - t1040 * t509 + (Icges(4,3) * t746 - t747 * t798) * t742;
t781 = t379 * t888 + t710 * t529 + t812 * t881 + t823;
t780 = pkin(9) * t1157 - t620 * t377 + t979;
t779 = pkin(9) * t1158 - t619 * t561 + t963;
t778 = pkin(9) * t1159 - t710 * t373 + t959;
t774 = t531 * t740 + t553 * t739 + (-qJD(2) * t685 - qJDD(2) * t708) * t1005;
t773 = t172 * t1076 + t379 * t1077 + 0.2e1 * t160 + 0.2e1 * t215 + 0.2e1 * t597 + 0.2e1 * t676 + t836;
t763 = qJD(4) * t445 + qJDD(4) * t603 + t710 * t172 + t622 * t379 + t774;
t762 = t326 * t1076 + t465 * t1077 + 0.2e1 * t256 + 0.2e1 * t277 + t773;
t760 = t464 * t933 + t619 * t540 + (-t529 - t541) * t620 + t954 * t934 + t838;
t759 = (qJD(2) * t827 + qJDD(2) * t828) * t742;
t758 = (-t1004 * t685 - t530 * t744) * qJD(2) + t813 * qJDD(2);
t756 = t465 * t888 + t710 * t541 + (-t643 - t692) * t619 + t943 * t933 + t781;
t755 = qJD(4) * t447 + qJDD(4) * t605 + t620 * t312 + t467 * t563 + t758;
t754 = t620 * t692 + t621 * t934 + (-t528 - t540) * t710 + (t932 * t957 - t889) * t742 + t804;
t753 = t710 * t326 + t622 * t465 + t466 * t943 + t619 * t971 + t763;
t750 = t467 * t621 + t620 * t539 + (-t171 - t325) * t710 + t957 * t622 + t755;
t749 = t619 * t784 + t620 * t785 + t710 * t782;
t670 = qJD(2) * t706;
t669 = (Icges(3,4) * t747 - Icges(3,2) * t746) * t937;
t667 = (t747 * t880 + t932) * t742;
t562 = -rSges(4,1) * t702 - rSges(4,2) * t703;
t549 = -rSges(3,1) * t700 - rSges(3,2) * t701;
t548 = rSges(3,1) * t812 - rSges(3,2) * t699;
t543 = -Icges(3,5) * t700 - Icges(3,6) * t701;
t542 = Icges(3,5) * t812 - Icges(3,6) * t699;
t537 = -t700 * t880 + t933;
t536 = t812 * t880 + t934;
t388 = rSges(6,1) * t609 + rSges(6,2) * t610;
t378 = -rSges(4,1) * t605 - rSges(4,2) * t606;
t374 = -rSges(4,1) * t603 - rSges(4,2) * t604;
t324 = t817 * qJD(2);
t323 = t816 * qJD(2);
t322 = t640 * t744 + (t641 * t747 + t642 * t746) * t742;
t311 = g(1) * t605 + g(2) * t603 + g(3) * t702;
t309 = rSges(4,1) * t606 - rSges(4,2) * t605 + rSges(4,3) * t700;
t308 = rSges(4,1) * t604 - rSges(4,2) * t603 - rSges(4,3) * t812;
t258 = t1005 * t640 - t641 * t700 + t642 * t701;
t253 = qJD(2) * t805 + qJD(1);
t234 = -rSges(6,1) * t455 - rSges(6,2) * t456;
t230 = -rSges(6,1) * t453 - rSges(6,2) * t454;
t211 = t668 * t744 + (t669 * t747 + t670 * t746 + (-t641 * t746 + t642 * t747) * qJD(2)) * t742;
t209 = rSges(5,1) * t663 - rSges(5,2) * t446 + rSges(5,3) * t445;
t208 = rSges(4,1) * t448 - rSges(4,2) * t447 + rSges(4,3) * t665;
t207 = rSges(4,1) * t446 - rSges(4,2) * t445 + rSges(4,3) * t663;
t153 = t1005 * t668 - t641 * t665 - t642 * t664 - t669 * t700 + t670 * t701;
t138 = -t308 * t710 + t512 * t620 + t790;
t137 = t309 * t710 - t512 * t619 + t822;
t126 = t308 * t619 - t309 * t620 + t884;
t93 = t511 * t620 + t710 * t974 + t775;
t72 = -t207 * t710 - t308 * t622 + t342 * t620 + t467 * t512 + t758;
t71 = t208 * t710 + t309 * t622 - t342 * t619 - t466 * t512 + t774;
t64 = t207 * t619 - t208 * t620 + t308 * t466 - t309 * t467 + t826;
t44 = t341 * t620 + t467 * t511 + (-t171 - t209) * t710 + t974 * t622 + t755;
t43 = t210 * t710 + t307 * t622 + t466 * t946 + t619 * t972 + t763;
t37 = t209 * t619 + t306 * t466 + t467 * t973 + t620 * t993 + t777;
t18 = -t111 * t582 + t151 * t415 - t186 * t334 + t190 * t321 + t750;
t17 = t113 * t582 - t151 * t414 + t188 * t334 - t189 * t321 + t753;
t13 = qJD(6) * t191 + qJDD(6) * t453 - t189 * t965 + t334 * t983 - t414 * t997 + t582 * t998 + t753;
t12 = qJD(6) * t193 + qJDD(6) * t455 + t190 * t965 - t334 * t984 + t415 * t997 - t582 * t999 + t750;
t1 = [m(2) * qJDD(1) + m(4) * t836 / 0.2e1 + t773 * t1075 + (-0.2e1 * t1015 + 0.2e1 * t1016 - 0.2e1 * t1017 + t762 + 0.2e1 * t1018) * t1074 + (-m(4) * t208 - m(5) * t210) * t620 + (m(4) * t207 + m(5) * t209) * t619 + (-m(4) * t309 - m(5) * t307) * t467 + (m(4) * t308 + m(5) * t306) * t466 + (-m(2) - m(4) - m(5) - m(6) - m(7)) * g(3) + (t748 / 0.2e1 - g(3) + t759) * m(3) + (t762 - 0.2e1 * t920 + 0.2e1 * t930 + 0.2e1 * t1088) * t1073; (t1126 * t667 + (-t1095 * t610 + t1096 * t703 - t1097 * t609 + t1103 * t631 + t1104 * t848 + t1105 * t630) * t582 + t1133 * t537 + t1134 * t536 + (-t1111 * t610 + t1113 * t703 - t1115 * t609 + t1118 * t631 + t1120 * t848 + t1122 * t630) * t415 + (-t1110 * t610 + t1112 * t703 - t1114 * t609 + t1117 * t631 + t1119 * t848 + t1121 * t630) * t414) * t1059 + (t1126 * t744 + (t1133 * t741 - t1134 * t743) * t742) * t1070 + (t1131 * t667 + (t1095 * t456 + t1096 * t606 + t1097 * t455 + t1103 * t524 - t1104 * t899 + t1105 * t523) * t582 + t1135 * t537 + t1136 * t536 + (t1111 * t456 + t1113 * t606 + t1115 * t455 + t1118 * t524 - t1120 * t899 + t1122 * t523) * t415 + (t1110 * t456 + t1112 * t606 + t1114 * t455 + t1117 * t524 - t1119 * t899 + t1121 * t523) * t414) * t1069 + (t138 * (-t402 * t710 + t617 * t620 + (-t1003 * t308 + t512 * t699) * qJD(3) + (-t1004 * t709 - t550 * t744) * qJD(2)) + t137 * (t403 * t710 - t617 * t619 + (t1003 * t309 - t512 * t701) * qJD(3) + t823) + t126 * (t402 * t619 - t403 * t620 + (t308 * t701 - t309 * t699) * qJD(3) + t947)) * t871 + (-t93 * (t618 * t620 - t742 * t889 + t804 + (-t404 - t528) * t710) - (t405 * t710 + t781 + (-t618 - t643) * t619) * t1078 / 0.2e1 - (t404 * t619 + t838 + (-t405 - t529) * t620) * t1079 / 0.2e1 - (t93 * (t1003 * t974 + t511 * t699) + t92 * (t1003 * t307 + t701 * t946) + t85 * (t306 * t701 + t699 * t973)) * qJD(3) - g(1) * (t405 + t824) - g(2) * (t404 + t825) - g(3) * (t618 + t849)) * m(5) + (t258 * t744 + t742 * t830) * t730 / 0.2e1 + (t322 * t744 + t742 * t829) * t739 / 0.2e1 + (t119 * t933 + t118 * t934 + t140 * t888 + (t1003 * t142 + t122 * t699 + t123 * t701) * qJD(3) + t749 * t700 + (t1092 * t606 + t1093 * t605 + t1094 * t701 - t700 * t783) * t710 + (t1100 * t606 + t1102 * t605 + t1107 * t701 - t700 * t787) * t620 + (t1099 * t606 + t1101 * t605 + t1106 * t701 - t700 * t786) * t619) * t1054 + (t743 * ((-t1004 * t543 + t699 * t950 + t812 * t948) * t1005 - (-t1004 * t542 + t699 * t951 + t812 * t949) * t1004 + (-t1004 * t704 + t699 * t940 + t812 * t939) * t744) / 0.2e1 - t741 * ((t1005 * t543 - t700 * t948 + t701 * t950) * t1005 - (t1005 * t542 - t700 * t949 + t701 * t951) * t1004 + (t1005 * t704 - t700 * t939 + t701 * t940) * t744) / 0.2e1) * t742 * qJD(2) ^ 2 - t1142 * t667 / 0.2e1 - t1143 * t537 / 0.2e1 - t1144 * t536 / 0.2e1 + (t48 * (qJD(6) * t523 + t415 * t952 + t536 * t965 + t582 * t978 - t667 * t984 + t754) + t47 * (qJD(6) * t521 - t414 * t952 - t537 * t965 + t582 * t977 + t667 * t983 + t756) + t42 * (qJD(6) * t630 - t414 * t978 - t415 * t977 - t536 * t983 + t537 * t984 + t760)) * t868 - m(6) * (g(1) * (t802 + t251) + g(2) * (t803 + t249) + g(3) * (t818 + t431)) + (0.2e1 * t43 * t960 + t995 * t1078 + 0.2e1 * t37 * t851 + t856 * t1079 + (t44 * (-t551 + t974) + t93 * (-t209 + t994) + t43 * t307 + t92 * t210) * t916 + ((t85 * t210 + t37 * t307 + t44 * t904 + t907 * t93) * t917 + (t85 * t209 + t37 * t306 + t43 * t904 + t907 * t92) * t918) * t742) * t1075 - m(7) * (g(1) * (t802 + t977) + g(2) * (t803 - t978) + g(3) * (t818 + t952)) + (t1197 * t744 + (t1200 * t741 - t1228 * t743) * t742) * t1042 + (t1198 * t744 + (t1203 * t741 - t1229 * t743) * t742) * t1053 + (t1199 * t744 + (t1205 * t741 - t1230 * t743) * t742) * t1051 + (t17 * t1154 + t910 * t1080 + t819 * t1085 + t821 * t1081 + (t18 * (-t551 + t908) + t70 * (-t111 + t909) + t17 * t188 + t69 * t113) * t916 + ((t61 * t113 + t16 * t188 + t18 * t852 + t70 * t858) * t917 + (t17 * t852 + t69 * t858 + t840) * t918) * t742) * t1074 + (t13 * t1154 + t910 * t1083 + t819 * t1086 + t821 * t1084 + (t12 * (-t551 + t855) + t48 * (t909 - t999) + t13 * t983 + t47 * t998) * t916 + ((t12 * t837 + t42 * t998 + t48 * t839 + t7 * t983) * t917 + (t13 * t837 + t47 * t839 + t789) * t918) * t742) * t1073 - t1087 * t878 / 0.2e1 + (t70 * (-t186 * t667 - t249 * t582 + t321 * t536 + t415 * t431 + t754) + t69 * (t188 * t667 + t251 * t582 - t321 * t537 - t414 * t431 + t756) + t61 * (t186 * t537 - t188 * t536 + t249 * t414 - t251 * t415 + t760)) * t869 + (t1183 * t744 + (-t1185 * t743 + t1187 * t741) * t742) * t1063 + (t1184 * t744 + (-t1186 * t743 + t1188 * t741) * t742) * t1062 + ((t1092 * t703 + t1093 * t702) * t710 + (t1100 * t703 + t1102 * t702) * t620 + (t1099 * t703 + t1101 * t702) * t619 + (t1124 * t701 + t1125 * t699) * qJD(3) + (((-t782 + t783) * t710 + (-t785 + t787) * t620 + (-t784 + t786) * t619) * t747 + (qJD(3) * t1123 + t1094 * t710 + t1106 * t619 + t1107 * t620) * t746) * t742) * t1043 + (t1123 * t744 + (t1124 * t741 - t1125 * t743) * t742) * t1050 - (t744 ^ 2 * t668 + (((t741 * t948 - t743 * t949) * t747 + (t741 * t950 - t743 * t951) * t746) * t742 + (-t542 * t743 + t543 * t741 + t746 * t940 + t747 * t939) * t744) * t937) * t740 / 0.2e1 + (t211 * t744 + t742 * t832) * t740 / 0.2e1 - m(4) * (g(1) * (t403 + t552) + g(2) * (t402 + t550) + g(3) * (t617 + t709)) + (t72 * ((-t308 - t551) * t744 + t743 * t866) + t138 * ((-t207 - t530) * t744 + t743 * t867) + t71 * (t309 * t744 + t741 * t866 + t538) + t137 * (t208 * t744 + t741 * t867 + t473) + t64 * ((t308 * t741 + t309 * t743) * t742 + t945) + t126 * ((t207 * t741 + t208 * t743) * t742 + t953)) * t870 - (t1087 * qJDD(2) + ((-t1004 * t668 - t641 * t663 + t642 * t662 + t669 * t812 + t670 * t699) * t744 + t742 * (-(-t1004 * t515 - t480 * t663 + t482 * t662 + t517 * t812 + t519 * t699) * t743 + (-t1004 * t516 - t481 * t663 + t483 * t662 + t518 * t812 + t520 * t699) * t741)) * t914 + t1217) * t1004 / 0.2e1 + ((qJD(2) * t153 + qJDD(2) * t258) * t744 + (qJD(2) * t833 + qJDD(2) * t830) * t742 + t1218) * t1005 / 0.2e1 + ((qJD(2) * t211 + qJDD(2) * t322) * t744 + (qJD(2) * t832 + qJDD(2) * t829) * t742 + t1219) * t744 / 0.2e1 + (t1131 * t744 + (t1135 * t741 - t1136 * t743) * t742) * t1072 + (t1132 * t667 + (t1095 * t454 + t1096 * t604 + t1097 * t453 + t1103 * t522 + t1104 * t901 + t1105 * t521) * t582 + t1137 * t537 + t1138 * t536 + (t1111 * t454 + t1113 * t604 + t1115 * t453 + t1118 * t522 + t1120 * t901 + t1122 * t521) * t415 + (t1110 * t454 + t1112 * t604 + t1114 * t453 + t1117 * t522 + t1119 * t901 + t1121 * t521) * t414) * t1067 + (t1132 * t744 + (t1137 * t741 - t1138 * t743) * t742) * t1071 + (t117 * t933 + t116 * t934 + t139 * t888 + (t1003 * t141 + t120 * t699 + t121 * t701) * qJD(3) - t749 * t812 + (t1092 * t604 + t1093 * t603 + t1094 * t699 + t783 * t812) * t710 + (t1100 * t604 + t1102 * t603 + t1107 * t699 + t787 * t812) * t620 + (t1099 * t604 + t1101 * t603 + t1106 * t699 + t786 * t812) * t619) * t1052 + (t1139 * t744 + (t1145 * t741 + t1209 * t743) * t742) * t1058 + (t1140 * t744 + (t1147 * t741 + t1210 * t743) * t742) * t1068 + (t1141 * t744 + (t1149 * t741 + t1211 * t743) * t742) * t1066 - t1202 * t888 / 0.2e1 - t1207 * t933 / 0.2e1 - t1208 * t934 / 0.2e1 + t741 * (t153 * t744 + t742 * t833) * t877 + (-(t324 * (-t1004 * t707 - t548 * t744) + t323 * (-t1005 * t707 + t549 * t744) + t253 * (t1004 * t549 + t1005 * t548)) * t914 / 0.2e1 + (qJD(2) * t815 + qJDD(2) * t817) * t817 + t324 * t815 + (qJD(2) * t814 + qJDD(2) * t816) * t816 + t323 * t814 + (qJDD(1) + t759) * t805 + t253 * t827 * t742 - g(1) * t549 - g(2) * t548 - g(3) * t707) * m(3); t931 * t1220 + (t12 * t1155 + t820 * t1082 + t962 * t1083 + t970 * t1086 + t857 * t1084 + (t13 * t853 + t47 * t859 + t789) * t919 + ((t48 * t855 + t1129) * t861 + (t12 * t984 + t13 * t854 + t47 * t860 + t48 * t999) * t915) * t742 + 0.2e1 * (t47 * t853 + t1130) * t665 + 0.2e1 * (t42 * t854 + t1128) * t663 - 0.2e1 * (t12 * t965 + t42 * t860 + t48 * t997 + t7 * t854) * t812) * t1073 + (t72 * (t1002 * t308 - t512 * t812) + t138 * (-t342 * t812 + t512 * t663 + (t207 * t747 - t308 * t935) * t742) + t71 * (-t1002 * t309 - t512 * t700) + t137 * (-t342 * t700 - t512 * t665 + (-t208 * t747 + t309 * t935) * t742) + t64 * (t308 * t700 + t309 * t812) + t126 * (t207 * t700 + t208 * t812 + t308 * t665 - t309 * t663)) * t870 + (t44 * (t1002 * t306 - t511 * t812 + t961) + t93 * (-t341 * t812 + t511 * t663 + (t209 * t747 + t935 * t974) * t742 + t911) + t43 * (t1002 * t973 + t700 * t946) + t92 * (t343 + t972 * t700 + t946 * t665 + (t307 * t935 + t747 * t993) * t742) + t37 * (t306 * t700 - t812 * t973 + t313) + t85 * (t209 * t700 + t306 * t665 + t663 * t973 - t812 * t993 + t996)) * t924 / 0.2e1 + (t1173 * t700 + t1174 * t606 + t1175 * t605) * t1054 + (-t1173 * t812 + t1174 * t604 + t1175 * t603) * t1052 + (-t1002 * t1173 + t1174 * t703 + t1175 * t702) * t1043 + (t1143 * t605 + t1144 * t603) * qJD(5) / 0.2e1 - m(5) * (-g(1) * t956 - g(2) * t958 - g(3) * t944) - (t93 * (t560 * t620 + t710 * t958 + t959) + t92 * (t376 * t710 + t619 * t944 + t963) + t85 * (t372 * t619 + t620 * t956 + t979)) * t924 / 0.2e1 + (-t1002 * t1123 + t1124 * t700 - t1125 * t812) * t1050 + (-t1228 * t812 + (t1123 * t935 - t1197 * t747) * t742 + t1200 * t700 + t1124 * t665 + t1125 * t663) * t1042 + (-t1229 * t812 + (t1183 * t935 - t1198 * t747) * t742 + t1203 * t700 + t1187 * t665 + t1185 * t663) * t1053 + (-t1230 * t812 + (t1184 * t935 - t1199 * t747) * t742 + t1205 * t700 + t1188 * t665 + t1186 * t663) * t1051 + (t138 * (-t374 * t710 + t562 * t620) + t137 * (t378 * t710 - t562 * t619) + t126 * (t374 * t619 - t378 * t620)) * t871 + (t70 * (-t272 * t582 + t413 * t415 + (t186 * t702 - t321 * t603) * qJD(5) + t778) + t69 * (t274 * t582 - t413 * t414 + (-t188 * t702 + t321 * t605) * qJD(5) + t779) + t61 * (t272 * t414 - t274 * t415 + (-t186 * t605 + t188 * t603) * qJD(5) + t780)) * t869 + (-t1002 * t1183 - t1185 * t812 + t1187 * t700) * t1063 + (-t1002 * t1184 - t1186 * t812 + t1188 * t700) * t1062 - m(6) * (g(1) * (t274 + t377 - t1036) + g(2) * (t272 + t373 - t1037) + g(3) * (t413 + t561 - t1035)) - m(7) * ((t1098 * t415 - t1109 * t582 - t606 * t879 + t778) * t1082 + (-t1098 * t414 + t1108 * t582 - t604 * t879 + t779) * t1083 + (-t1108 * t415 + t1109 * t414 - t703 * t879 + t780) * t1084 + 0.2e1 * ((t48 * t984 - t1129) * t702 + (t47 * t965 - t1130) * t605 + (t42 * t983 - t1128) * t603) * qJD(5)) / 0.2e1 - t1217 * t812 / 0.2e1 + t1218 * t700 / 0.2e1 - t1219 * t1002 / 0.2e1 - m(4) * (g(1) * t378 + g(2) * t374 + g(3) * t562) - m(7) * (g(1) * (-t596 - t1036 + t1161) + g(2) * (-t595 - t1037 + t1162) + g(3) * (-t697 - t1035 + t1160) + (g(1) * t606 + g(2) * t604 + g(3) * t703) * (-rSges(7,3) * t1039 + qJ(4) - t892)) + (-t1002 * t1126 + t1133 * t700 - t1134 * t812) * t1070 + (t1176 * t703 + (-t1104 * t702 - t1177 * t610 - t1178 * t609) * t582 + (-t1120 * t702 - t1180 * t610 - t1182 * t609) * t415 + (-t1119 * t702 - t1179 * t610 - t1181 * t609) * t414 + (-t1126 * t702 - t1133 * t605 - t1134 * t603) * qJD(5)) * t1059 + (-t1002 * t1131 + t1135 * t700 - t1136 * t812) * t1072 + (t1176 * t606 + (-t1104 * t605 + t1177 * t456 + t1178 * t455) * t582 + (-t1120 * t605 + t1180 * t456 + t1182 * t455) * t415 + (-t1119 * t605 + t1179 * t456 + t1181 * t455) * t414 + (-t1131 * t702 - t1135 * t605 - t1136 * t603) * qJD(5)) * t1069 + (t18 * t1155 + t820 * t1156 + t962 * t1080 + t970 * t1085 + t857 * t1081 + (t17 * t906 + t69 * t912 + t840) * t919 + ((t69 * t188 + t70 * t908) * t861 + (t70 * t111 + t1116 * t17 + t1127 * t69 + t18 * t186) * t915) * t742 - (t1081 * t1127 + t1085 * t1116 + t1156 * t151 + 0.2e1 * t18 * t321) * t812 + (t1080 * t906 + t186 * t1081) * t665 + (t1081 * t1116 + t321 * t1156) * t663) * t1074 + (t1202 + t1142) * t746 * t877 + (-t1002 * t1132 + t1137 * t700 - t1138 * t812) * t1071 + (t1176 * t604 + (-t1104 * t603 + t1177 * t454 + t1178 * t453) * t582 + (-t1120 * t603 + t1180 * t454 + t1182 * t453) * t415 + (-t1119 * t603 + t1179 * t454 + t1181 * t453) * t414 + (-t1132 * t702 - t1137 * t605 - t1138 * t603) * qJD(5)) * t1067 + (t1207 + t1143) * t665 / 0.2e1 + (t1208 + t1144) * t663 / 0.2e1 + (t1209 * t812 + (t1126 * t935 - t1139 * t747) * t742 + t1145 * t700 + t1133 * t665 + t1134 * t663) * t1058 + (t1210 * t812 + (t1131 * t935 - t1140 * t747) * t742 + t1147 * t700 + t1135 * t665 + t1136 * t663) * t1068 + (t1211 * t812 + (t1132 * t935 - t1141 * t747) * t742 + t1149 * t700 + t1137 * t665 + t1138 * t663) * t1066; (t12 * t605 + t13 * t603 + t42 * t982 + t47 * t976 + t48 * t975 + t7 * t702 - t311) * m(7) + (t16 * t702 + t17 * t603 + t18 * t605 + t61 * t982 + t69 * t976 + t70 * t975 - t311) * m(6) + (t37 * t702 + t43 * t603 + t44 * t605 + t85 * t982 + t92 * t976 + t93 * t975 - t311) * m(5); (t12 * (t604 * t965 - t703 * t984) + t48 * (t446 * t965 + t604 * t997 - t608 * t984 - t703 * t999) + t13 * (-t606 * t965 + t703 * t983) + t47 * (-t448 * t965 - t606 * t997 + t608 * t983 + t703 * t998) + t7 * (-t604 * t983 + t606 * t984) + t42 * (-t446 * t983 + t448 * t984 - t604 * t998 + t606 * t999)) * t922 / 0.2e1 + (t18 * (-t186 * t703 + t321 * t604) + t70 * (-t111 * t703 + t151 * t604 - t186 * t608 + t321 * t446) + t17 * (t188 * t703 - t321 * t606) + t69 * (t113 * t703 - t151 * t606 + t188 * t608 - t321 * t448) + t16 * (t186 * t606 - t188 * t604) + t61 * (t111 * t606 - t113 * t604 + t186 * t448 - t188 * t446)) * t923 / 0.2e1 - m(7) * (g(1) * t980 + g(2) * t981 + g(3) * t955) + (t48 * (qJD(6) * t456 + t415 * t955 - t582 * t981) + t47 * (qJD(6) * t454 - t414 * t955 + t582 * t980) + t42 * (-qJD(6) * t610 + t414 * t981 - t415 * t980)) * t868 + (t70 * (-t230 * t582 + t388 * t415) + t69 * (t234 * t582 - t388 * t414) + t61 * (t230 * t414 - t234 * t415)) * t869 - m(6) * (g(1) * t234 + g(2) * t230 + g(3) * t388) + (t1131 * t703 + t1135 * t606 + t1136 * t604) * t1072 + (t1132 * t703 + t1137 * t606 + t1138 * t604) * t1071 + (t1126 * t703 + t1133 * t606 + t1134 * t604) * t1070 + (t1089 * t606 - t1215 * t455 - t1216 * t456) * t1069 + (t1131 * t608 + t1135 * t448 + t1136 * t446 + t1140 * t703 + t1147 * t606 - t1210 * t604) * t1068 + (t1089 * t604 - t1215 * t453 - t1216 * t454) * t1067 + (t1132 * t608 + t1137 * t448 + t1138 * t446 + t1141 * t703 + t1149 * t606 - t1211 * t604) * t1066 + t1144 * t446 / 0.2e1 + t1143 * t448 / 0.2e1 + (t1089 * t703 + t1215 * t609 + t1216 * t610) * t1059 + (t1126 * t608 + t1133 * t448 + t1134 * t446 + t1139 * t703 + t1145 * t606 - t1209 * t604) * t1058 + t1153 * t604 / 0.2e1 + t1152 * t606 / 0.2e1 + t608 * t1220 + t1151 * t703 / 0.2e1; (t191 * t47 + t193 * t48 + (-t47 * t582 - g(1) + t12) * t455 + (-t414 * t47 + t415 * t48 + g(3) - t7) * t609 + (t48 * t582 - g(2) + t13) * t453 + (-t414 * t453 + t415 * t455 + t331) * t42) * m(7);];
tau  = t1;
