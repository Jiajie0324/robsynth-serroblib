% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:21:51
% EndTime: 2019-03-09 11:22:30
% DurationCPUTime: 22.94s
% Computational Cost: add. (17035->841), mult. (39480->1166), div. (0->0), fcn. (43675->10), ass. (0->613)
t559 = cos(pkin(6));
t561 = sin(qJ(4));
t564 = cos(qJ(4));
t558 = sin(pkin(6));
t565 = cos(qJ(2));
t833 = t558 * t565;
t483 = t559 * t561 + t564 * t833;
t485 = t559 * t564 - t561 * t833;
t874 = sin(pkin(11));
t875 = cos(pkin(11));
t348 = t875 * t483 + t485 * t874;
t563 = cos(qJ(6));
t915 = t563 * t348;
t919 = t915 / 0.2e1;
t920 = -t915 / 0.2e1;
t921 = t919 + t920;
t922 = qJD(6) * t921;
t566 = -pkin(2) - pkin(9);
t802 = -qJ(5) + t566;
t509 = t802 * t561;
t684 = t802 * t564;
t580 = t509 * t875 + t684 * t874;
t899 = t580 / 0.2e1;
t913 = -t580 / 0.2e1;
t918 = t899 + t913;
t917 = t348 / 0.2e1;
t404 = t509 * t874 - t875 * t684;
t898 = t404 / 0.2e1;
t460 = t875 * t485;
t685 = t874 * t483;
t910 = -t685 + t460;
t906 = t910 / 0.2e1;
t497 = -t561 * t875 - t564 * t874;
t893 = t497 / 0.2e1;
t916 = t348 * t893;
t560 = sin(qJ(6));
t196 = t560 * t910;
t832 = t559 * t565;
t538 = pkin(1) * t832;
t562 = sin(qJ(2));
t835 = t558 * t562;
t908 = pkin(3) + pkin(8);
t447 = -t835 * t908 + t538;
t390 = t559 * t566 - t447;
t873 = qJ(3) * t562;
t660 = -t565 * t566 + t873;
t428 = (-pkin(1) - t660) * t558;
t244 = -t564 * t390 + t428 * t561;
t210 = -qJ(5) * t485 - t244;
t189 = pkin(4) * t835 + t210;
t245 = t390 * t561 + t428 * t564;
t211 = -qJ(5) * t483 + t245;
t203 = t875 * t211;
t100 = t874 * t189 + t203;
t110 = t210 * t874 + t203;
t686 = t874 * t211;
t111 = t210 * t875 - t686;
t894 = -t497 / 0.2e1;
t540 = t874 * t561;
t687 = t875 * t564;
t496 = t687 - t540;
t895 = t496 / 0.2e1;
t896 = -t496 / 0.2e1;
t506 = t540 * t835;
t638 = t687 * t835;
t440 = -t506 + t638;
t441 = t497 * t835;
t735 = t874 / 0.2e1;
t736 = -t875 / 0.2e1;
t912 = (t440 * t735 - t441 * t736) * pkin(4);
t99 = t189 * t875 - t686;
t19 = t100 * t895 + t110 * t896 + t111 * t894 + t893 * t99 - t912;
t907 = t111 / 0.2e1;
t18 = -t912 - (t100 / 0.2e1 - t110 / 0.2e1) * t496 + t497 * (t907 - t99 / 0.2e1);
t654 = t440 * t497 - t441 * t496;
t914 = qJD(3) * t654;
t847 = t580 * t560;
t846 = t580 * t563;
t878 = pkin(4) * qJD(4);
t911 = (t496 * t874 + t497 * t875) * t878;
t690 = 0.2e1 * t917;
t672 = t690 * t497;
t494 = t496 ^ 2;
t495 = t497 ^ 2;
t418 = t494 + t495;
t675 = t494 / 0.2e1 + t495 / 0.2e1;
t553 = t560 ^ 2;
t556 = t563 ^ 2;
t532 = t556 - t553;
t682 = qJD(4) * t532;
t905 = -t348 / 0.2e1;
t902 = -t404 / 0.2e1;
t897 = -t485 / 0.2e1;
t543 = pkin(4) * t874 + pkin(10);
t892 = t543 / 0.2e1;
t544 = -pkin(4) * t875 - pkin(5);
t891 = t544 / 0.2e1;
t890 = -t559 / 0.2e1;
t889 = t559 / 0.2e1;
t888 = -t560 / 0.2e1;
t887 = t560 / 0.2e1;
t886 = -t561 / 0.2e1;
t885 = -t563 / 0.2e1;
t884 = t563 / 0.2e1;
t883 = -t564 / 0.2e1;
t882 = pkin(1) * t562;
t881 = t483 * pkin(4);
t880 = t485 * pkin(4);
t879 = t564 * pkin(4);
t297 = -t563 * t835 + t196;
t536 = pkin(8) * t833;
t537 = t559 * t882;
t490 = t536 + t537;
t535 = pkin(3) * t833;
t448 = t535 + t490;
t548 = t559 * qJ(3);
t427 = t548 + t448;
t323 = t427 + t881;
t579 = pkin(5) * t348 - pkin(10) * t910 + t323;
t97 = pkin(10) * t835 + t100;
t39 = t560 * t97 - t563 * t579;
t184 = pkin(5) * t910 + pkin(10) * t348 + t880;
t816 = t563 * t184;
t831 = t560 * t111;
t656 = t816 - t831;
t826 = t560 * t348;
t96 = -pkin(5) * t835 - t99;
t7 = t110 * t297 + t348 * t656 - t39 * t910 - t826 * t96;
t877 = t7 * qJD(1);
t299 = t560 * t835 + t563 * t910;
t40 = t560 * t579 + t563 * t97;
t818 = t563 * t111;
t829 = t560 * t184;
t657 = t818 + t829;
t8 = t110 * t299 - t348 * t657 - t40 * t910 - t915 * t96;
t876 = t8 * qJD(1);
t23 = -t297 * t96 + t348 * t39;
t872 = qJD(1) * t23;
t24 = t299 * t96 - t348 * t40;
t871 = qJD(1) * t24;
t34 = -t100 * t348 - t910 * t99;
t870 = qJD(1) * t34;
t673 = (t905 + t917) * t496;
t850 = t910 * t497;
t604 = t850 / 0.2e1 + t673;
t838 = t497 * t297;
t571 = t604 * t560 - t838 / 0.2e1;
t808 = t563 * t441;
t697 = t808 / 0.2e1;
t45 = t697 + t571;
t869 = qJD(1) * t45;
t855 = t299 * t497;
t570 = t604 * t563 - t855 / 0.2e1;
t822 = t560 * t441;
t704 = -t822 / 0.2e1;
t52 = t704 + t570;
t868 = qJD(1) * t52;
t67 = (t906 - t910 / 0.2e1) * t497 + t673;
t867 = qJD(1) * t67;
t438 = t564 * t448;
t534 = pkin(2) * t835;
t446 = t534 + (pkin(9) * t562 - qJ(3) * t565) * t558;
t820 = t561 * t446;
t683 = t438 - t820;
t819 = t561 * t562;
t231 = (pkin(4) * t565 - qJ(5) * t819) * t558 + t683;
t436 = t564 * t446;
t437 = t561 * t448;
t800 = t436 + t437;
t834 = t558 * t564;
t250 = qJ(5) * t562 * t834 + t800;
t148 = t231 * t875 - t250 * t874;
t142 = -pkin(5) * t833 - t148;
t520 = t563 * t833;
t359 = -t520 - t822;
t385 = t538 + (-t879 - t908) * t835;
t209 = -t440 * pkin(5) + t441 * pkin(10) + t385;
t815 = t563 * t209;
t149 = t874 * t231 + t875 * t250;
t143 = pkin(10) * t833 + t149;
t830 = t560 * t143;
t59 = t815 - t830;
t11 = t142 * t297 + t348 * t59 + t359 * t96 + t39 * t440;
t866 = t11 * qJD(1);
t865 = t110 * t560;
t864 = t110 * t563;
t360 = t560 * t833 - t808;
t817 = t563 * t143;
t828 = t560 * t209;
t60 = t817 + t828;
t12 = t142 * t299 - t348 * t60 + t360 * t96 + t40 * t440;
t863 = t12 * qJD(1);
t862 = t148 * t496;
t861 = t149 * t497;
t20 = t100 * t111 - t110 * t99 + t323 * t880;
t860 = t20 * qJD(1);
t661 = -t100 * t440 - t441 * t99;
t21 = -t148 * t910 - t149 * t348 - t661;
t859 = t21 * qJD(1);
t22 = t100 * t149 + t148 * t99 + t323 * t385;
t858 = t22 * qJD(1);
t857 = t299 * t910;
t856 = t299 * t496;
t854 = t299 * t560;
t853 = t299 * t563;
t33 = t323 * t559 + t661;
t852 = t33 * qJD(1);
t851 = t910 * t297;
t849 = t348 * t496;
t848 = t360 * t560;
t845 = t580 * t440;
t844 = t427 * t564;
t374 = t563 * t496;
t814 = t563 * t297;
t621 = -t814 / 0.2e1 - t854 / 0.2e1;
t591 = t374 * t826 + t497 * t621;
t623 = t359 * t888 + t360 * t884;
t44 = t591 - t623;
t843 = t44 * qJD(1);
t842 = t441 * t404;
t489 = pkin(8) * t835 - t538;
t841 = t489 * t559;
t840 = t490 * t559;
t839 = t496 * t297;
t552 = t558 ^ 2;
t555 = t562 ^ 2;
t837 = t552 * t555;
t836 = t552 * t565;
t827 = t560 * t297;
t381 = pkin(5) * t496 - pkin(10) * t497 + t879;
t825 = t560 * t381;
t824 = t404 * t560;
t823 = t560 * t440;
t368 = t560 * t496;
t369 = t560 * t497;
t821 = t560 * t559;
t811 = t563 * t381;
t810 = t404 * t563;
t809 = t563 * t440;
t372 = t563 * t497;
t807 = t563 * t559;
t79 = t447 * t483 + (-t244 * t565 + (t683 - t844) * t562) * t558;
t806 = t79 * qJD(1);
t80 = -t447 * t485 + (t245 * t565 - t427 * t819 + t562 * t800) * t558;
t805 = t80 * qJD(1);
t113 = -t814 - t854;
t91 = t113 * t348;
t804 = t91 * qJD(1);
t98 = -t297 * t360 - t299 * t359;
t803 = t98 * qJD(1);
t531 = t561 ^ 2 - t564 ^ 2;
t742 = t348 * t826;
t105 = -t742 - t851;
t799 = qJD(1) * t105;
t106 = -t742 + t851;
t798 = qJD(1) * t106;
t741 = t348 * t915;
t107 = -t741 + t857;
t797 = qJD(1) * t107;
t108 = t741 + t857;
t796 = qJD(1) * t108;
t652 = t807 + t823;
t136 = t441 * t297 + t348 * t652;
t795 = qJD(1) * t136;
t653 = -t809 + t821;
t137 = t441 * t299 - t348 * t653;
t794 = qJD(1) * t137;
t154 = t348 * t440 + t441 * t910;
t793 = qJD(1) * t154;
t159 = -t244 * t835 + t427 * t483;
t792 = qJD(1) * t159;
t160 = -t245 * t835 + t427 * t485;
t791 = qJD(1) * t160;
t665 = -pkin(2) * t565 - t873;
t458 = (-pkin(1) + t665) * t558;
t488 = -qJ(3) * t833 + t534;
t241 = t841 + (t458 * t565 + t488 * t562) * t558;
t790 = qJD(1) * t241;
t789 = qJD(1) * t299;
t457 = -t548 - t490;
t306 = t457 * t559 + t458 * t835;
t788 = qJD(1) * t306;
t787 = qJD(1) * t348;
t740 = t561 * t837;
t386 = t485 * t833 + t740;
t786 = qJD(1) * t386;
t739 = t564 * t837;
t387 = -t483 * t833 + t739;
t785 = qJD(1) * t387;
t434 = t638 / 0.2e1 - t506 / 0.2e1;
t784 = qJD(1) * t434;
t783 = qJD(1) * t485;
t782 = qJD(2) * t489;
t781 = qJD(2) * t490;
t780 = qJD(2) * t496;
t779 = qJD(2) * t497;
t778 = qJD(2) * t558;
t777 = qJD(2) * t559;
t776 = qJD(2) * t561;
t775 = qJD(2) * t563;
t774 = qJD(2) * t564;
t773 = qJD(3) * t497;
t772 = qJD(4) * t560;
t771 = qJD(4) * t561;
t770 = qJD(4) * t563;
t769 = qJD(4) * t564;
t768 = qJD(4) * t566;
t767 = qJD(5) * t563;
t766 = qJD(6) * t348;
t765 = qJD(6) * t560;
t764 = qJD(6) * t563;
t692 = t372 / 0.2e1;
t605 = -t348 * t556 * t895 + t299 * t692;
t115 = -t848 / 0.2e1 + t605;
t763 = t115 * qJD(1);
t710 = -t833 / 0.2e1;
t714 = t838 / 0.2e1;
t117 = t714 + t697 + (-t849 / 0.2e1 + t710) * t560;
t762 = t117 * qJD(1);
t695 = -t374 / 0.2e1;
t612 = t855 / 0.2e1 + t348 * t695;
t705 = t822 / 0.2e1;
t669 = t520 / 0.2e1 + t705;
t118 = t612 - t669;
t761 = t118 * qJD(1);
t128 = t297 * t440 - t348 * t359;
t760 = t128 * qJD(1);
t129 = -t299 * t440 + t348 * t360;
t759 = t129 * qJD(1);
t613 = -t559 * pkin(2) + t489;
t181 = t457 * t489 + t458 * t488 + t490 * t613;
t758 = t181 * qJD(1);
t185 = (-t457 - t490) * t835 + (t489 - t613) * t833;
t757 = t185 * qJD(1);
t201 = 0.2e1 * t920;
t756 = t201 * qJD(1);
t242 = t840 + (-t458 * t562 + t488 * t565) * t558;
t755 = t242 * qJD(1);
t255 = -t483 * t561 + t485 * t564;
t307 = t255 * t835;
t754 = t307 * qJD(1);
t408 = t483 * t559 + t740;
t753 = t408 * qJD(1);
t409 = t485 * t559 + t739;
t752 = t409 * qJD(1);
t431 = t552 * t882 + t840;
t751 = t431 * qJD(1);
t432 = pkin(1) * t836 - t841;
t750 = t432 * qJD(1);
t749 = t434 * qJD(6);
t498 = (t565 ^ 2 - t555) * t552;
t748 = t498 * qJD(1);
t547 = t559 * qJD(3);
t745 = t494 - t495;
t744 = t880 / 0.2e1;
t743 = t879 / 0.2e1;
t738 = t562 * t836;
t737 = t558 * t832;
t733 = t96 / 0.2e1 + t907;
t732 = qJD(1) * t835;
t731 = t556 * t780;
t730 = t560 * t779;
t729 = t497 * t775;
t728 = t562 * t778;
t727 = t560 * t775;
t726 = qJD(3) * t835;
t725 = qJD(4) * t835;
t724 = t560 * t770;
t723 = t497 * t765;
t722 = t497 * t764;
t721 = t497 * t496 * qJD(4);
t720 = t565 * t778;
t719 = t560 * t764;
t481 = t496 * t770;
t718 = -t856 / 0.2e1;
t717 = t856 / 0.2e1;
t716 = t910 * t895;
t715 = t839 / 0.2e1;
t713 = t348 * t892;
t712 = -t544 * t297 / 0.2e1;
t711 = t299 * t891;
t709 = t833 / 0.2e1;
t708 = -t830 / 0.2e1;
t707 = t348 * t888;
t706 = t826 / 0.2e1;
t412 = -t823 / 0.2e1;
t413 = t823 / 0.2e1;
t703 = -t368 / 0.2e1;
t702 = t368 / 0.2e1;
t701 = -t369 / 0.2e1;
t700 = -t817 / 0.2e1;
t698 = t809 / 0.2e1;
t696 = -t808 / 0.2e1;
t694 = t374 / 0.2e1;
t693 = -t372 / 0.2e1;
t689 = t898 + t902;
t688 = -t436 / 0.2e1 - t437 / 0.2e1;
t545 = pkin(4) * t561 + qJ(3);
t533 = qJD(1) * t559 + qJD(2);
t681 = -qJD(6) - t787;
t680 = -qJD(6) + t779;
t679 = t560 * t481;
t516 = t561 * t732;
t678 = qJD(1) * t737;
t677 = t496 * t727;
t676 = -t566 * t835 / 0.2e1;
t674 = t209 / 0.2e1 + t96 * t896;
t197 = t690 * t560;
t671 = 0.2e1 * t677;
t670 = t497 * t890 + t917;
t668 = t890 + t916;
t667 = t713 + t184 / 0.2e1;
t666 = -t368 * qJD(4) + t722;
t664 = -qJD(4) - t732;
t609 = -pkin(5) * t497 - pkin(10) * t496 + t545;
t214 = -t563 * t609 + t847;
t568 = t214 * t906 + t297 * t913 + t656 * t893 + (t811 + t824) * t905 + t404 * t706 + t96 * t701;
t581 = t142 * t885 + t359 * t891 + t413 * t543;
t1 = (t39 / 0.2e1 - t865 / 0.2e1) * t496 + t568 + t581;
t57 = -t811 * t497 + (-t214 + t847) * t496;
t663 = -t1 * qJD(1) + t57 * qJD(2);
t215 = t560 * t609 + t846;
t567 = t215 * t906 + t299 * t913 + t657 * t894 + (-t810 + t825) * t917 + t404 * t919 + t96 * t693;
t582 = t142 * t887 + t360 * t891 + t543 * t698;
t2 = (t40 / 0.2e1 - t864 / 0.2e1) * t496 + t567 + t582;
t58 = t825 * t497 + (-t215 + t846) * t496;
t662 = -t2 * qJD(1) + t58 * qJD(2);
t574 = -t348 * t902 - t404 * t917 + t910 * t918;
t9 = t574 - t18;
t659 = t9 * qJD(1);
t17 = (-t100 + t110) * t910 + (-t111 + t99) * t348;
t658 = t17 * qJD(1) + t67 * qJD(3);
t655 = -t348 * t544 - t543 * t910;
t651 = -t496 * t543 + t497 * t544;
t104 = t496 * t918 + t689 * t497;
t650 = t18 * qJD(1) - t104 * qJD(2);
t120 = t348 ^ 2 + t910 ^ 2;
t68 = 0.2e1 * t496 * t906 - t672;
t649 = qJD(1) * t120 + qJD(2) * t68;
t592 = t215 * t917 + t299 * t902 + t40 * t894;
t13 = t563 * t674 + t592 + t708;
t151 = t215 * t497 + t374 * t404;
t648 = qJD(1) * t13 - qJD(2) * t151;
t593 = t214 * t905 + t297 * t898 + t39 * t893;
t14 = -t560 * t674 + t593 + t700;
t150 = -t214 * t497 - t368 * t404;
t647 = -qJD(1) * t14 + qJD(2) * t150;
t192 = t404 * t496 + t497 * t580;
t575 = t100 * t894 - t348 * t913 + t895 * t99 + t902 * t910;
t589 = (-pkin(8) / 0.2e1 - pkin(3) / 0.2e1 - t879 / 0.2e1) * t835 + t538 / 0.2e1;
t29 = t575 + t589;
t646 = -qJD(1) * t29 + qJD(2) * t192;
t312 = t745 * t560;
t627 = t497 * t197;
t583 = t910 * t703 - t627 - t839 / 0.2e1;
t48 = t698 + t583;
t645 = -qJD(1) * t48 + qJD(2) * t312;
t313 = t418 * t560;
t584 = t702 * t910 - t627 + t715;
t50 = t698 + t584;
t644 = qJD(1) * t50 + qJD(2) * t313;
t314 = t745 * t563;
t572 = (t716 + t672) * t563 + t717;
t54 = t413 + t572;
t643 = -qJD(1) * t54 - qJD(2) * t314;
t569 = t535 / 0.2e1 + t536 / 0.2e1 + t537 / 0.2e1 + t548 / 0.2e1 - t845 / 0.2e1 + t842 / 0.2e1 + t881 / 0.2e1 + t545 * t889;
t625 = t862 / 0.2e1 - t861 / 0.2e1;
t32 = t569 - t625;
t642 = qJD(1) * t32 + qJD(2) * t545;
t384 = t418 * t563;
t573 = (t716 - t672) * t563 + t717;
t56 = t412 + t573;
t641 = qJD(1) * t56 + qJD(2) * t384;
t640 = qJD(1) * t68 + qJD(2) * t418;
t639 = t680 * t563;
t258 = -0.1e1 / 0.2e1 - t675;
t415 = -t809 / 0.2e1;
t121 = -t560 * t668 + t415 + t715;
t246 = t258 * t560;
t637 = -qJD(1) * t121 + qJD(2) * t246;
t123 = t563 * t668 + t412 + t718;
t302 = t258 * t563;
t636 = -qJD(1) * t123 - qJD(2) * t302;
t624 = t716 - t916;
t174 = t889 + t624;
t635 = qJD(1) * t174 - qJD(2) * t258;
t600 = -t348 * t735 + t736 * t910;
t179 = (t897 + t600) * pkin(4);
t598 = t496 * t736 + t497 * t735;
t336 = (t883 + t598) * pkin(4);
t634 = qJD(1) * t179 + qJD(2) * t336;
t633 = qJD(1) * t196 + qJD(2) * t368;
t156 = qJD(1) * t197 - qJD(2) * t369;
t200 = 0.2e1 * t919;
t632 = -qJD(1) * t200 + qJD(2) * t372;
t311 = t483 ^ 2 - t485 ^ 2;
t631 = qJD(1) * t311 - qJD(2) * t255;
t630 = qJD(1) * t255 - qJD(2) * t531;
t345 = -t685 / 0.2e1 + t460 / 0.2e1;
t491 = t540 / 0.2e1 - t687 / 0.2e1;
t629 = qJD(1) * t345 - qJD(2) * t491;
t510 = t559 ^ 2 + t837;
t628 = qJD(1) * t510 + t777;
t626 = qJ(3) * t485 / 0.2e1 + t844 / 0.2e1;
t622 = t496 * t891 + t497 * t892;
t62 = (-t360 / 0.2e1 + t696) * t496 + t670 * t560;
t620 = qJD(1) * t62 - t730;
t61 = (-t359 / 0.2e1 + t704) * t496 - t670 * t563;
t619 = qJD(1) * t61 + t729;
t162 = -t438 / 0.2e1 + (t676 + t446 / 0.2e1) * t561 + t626;
t618 = -qJ(3) * t774 - t162 * qJD(1);
t578 = -qJ(3) * t483 / 0.2e1 + t427 * t886 + t564 * t676;
t164 = t578 - t688;
t617 = qJ(3) * t776 - t164 * qJD(1);
t346 = t483 * t883 + t485 * t886;
t616 = -qJD(2) * t346 + t483 * t783;
t615 = -qJD(1) * t346 + t561 * t774;
t614 = -t725 - t777;
t611 = -t381 / 0.2e1 + t622;
t153 = t545 * t879;
t577 = t100 * t898 + t110 * t902 + t111 * t913 + t899 * t99;
t601 = t149 * t735 + t148 * t875 / 0.2e1;
t5 = (t323 * t883 + t545 * t897 + t601) * pkin(4) + t577;
t610 = -t5 * qJD(1) + t153 * qJD(2) + t104 * qJD(3);
t608 = (t774 + t783) * t835;
t125 = t297 ^ 2 - t299 ^ 2;
t72 = (-t827 + t853) * t496;
t606 = qJD(1) * t125 - qJD(2) * t72 + qJD(4) * t113;
t132 = -t560 * t611 - t563 * t689;
t25 = t560 * t667 + t563 * t733 + t712;
t603 = -qJD(1) * t25 - qJD(2) * t132 - t544 * t770;
t134 = -t560 * t689 + t563 * t611;
t27 = t560 * t733 - t563 * t667 + t711;
t602 = -qJD(1) * t27 - qJD(2) * t134 - t544 * t772;
t147 = t621 * t496;
t171 = -t827 / 0.2e1 + t853 / 0.2e1;
t597 = -qJD(2) * t147 - qJD(4) * t171 + t297 * t789;
t366 = (t553 / 0.2e1 - t556 / 0.2e1) * t496;
t596 = qJD(1) * t171 - qJD(2) * t366 + t724;
t178 = -t850 / 0.2e1 + t849 / 0.2e1;
t595 = qJD(2) * t178 + qJD(6) * t345 + t787 * t910;
t594 = -qJD(1) * t178 + qJD(6) * t491 + t496 * t779;
t383 = t532 * t494;
t590 = qJD(1) * t72 + qJD(2) * t383 + 0.2e1 * t679;
t588 = -qJD(1) * t113 + t671 - t682;
t587 = -qJD(1) * t147 + qJD(4) * t366 + t494 * t727;
t518 = qJD(2) * t709;
t517 = t564 * t732;
t515 = qJD(2) * t738;
t514 = qJD(1) * t738;
t511 = t533 * qJ(3);
t503 = t533 * t564;
t502 = t533 * t561;
t487 = -t517 - t769;
t486 = -t516 - t771;
t482 = t491 * qJD(4);
t466 = t533 * t833;
t461 = qJD(4) * t709 + t514;
t449 = -0.2e1 * t496 * t719;
t362 = t369 * qJD(6);
t361 = t366 * qJD(6);
t337 = t346 * qJD(4);
t335 = pkin(4) * t598 + t743;
t333 = t910 * t770;
t303 = t418 * t885 + t884;
t257 = 0.1e1 / 0.2e1 - t675;
t252 = t255 * qJD(4);
t249 = (qJD(1) * t910 + t780) * t563;
t247 = t560 * t675 + t888;
t217 = -qJD(2) * t434 + qJD(4) * t345;
t198 = t707 + t706;
t191 = t198 * qJD(6);
t190 = t197 * qJD(6);
t180 = pkin(4) * t600 + t744;
t177 = t178 * qJD(4);
t175 = t889 - t624;
t165 = t578 + t688;
t163 = t561 * t676 - t820 / 0.2e1 + t438 / 0.2e1 + t626;
t161 = t171 * qJD(6);
t152 = -t156 - t765;
t146 = t147 * qJD(6);
t135 = t404 * t887 + t824 / 0.2e1 + t811 / 0.2e1 + t622 * t563;
t133 = t404 * t884 + t810 / 0.2e1 - t825 / 0.2e1 - t622 * t560;
t124 = t348 * t692 + t718 + t413 + t807 / 0.2e1;
t122 = t348 * t701 + t715 + t698 - t821 / 0.2e1;
t119 = t612 + t669;
t116 = t348 * t703 + t560 * t709 + t696 + t714;
t114 = t848 / 0.2e1 + t605;
t112 = t113 * qJD(6);
t101 = t104 * qJD(4);
t71 = t72 * qJD(6);
t66 = t68 * qJD(5);
t65 = t67 * qJD(4);
t64 = t359 * t896 + t440 * t701 - t441 * t703 + t652 * t894 + t919;
t63 = t360 * t896 + t440 * t693 - t441 * t695 + t653 * t893 + t707;
t55 = t413 + t573;
t53 = t412 + t572;
t51 = t705 + t570;
t49 = t415 + t584;
t47 = t415 + t583;
t46 = t696 + t571;
t43 = t591 + t623;
t31 = t569 + t625;
t30 = -t575 + t589;
t28 = t543 * t920 + t711 + t96 * t887 - t831 / 0.2e1 + t816 / 0.2e1;
t26 = t560 * t713 + t712 + t96 * t884 - t818 / 0.2e1 - t829 / 0.2e1;
t16 = t96 * t694 + t708 + t815 / 0.2e1 - t592;
t15 = t96 * t703 + t700 - t828 / 0.2e1 - t593;
t10 = -t574 - t19;
t6 = pkin(4) * t601 + t323 * t743 + t545 * t744 - t577;
t4 = t110 * t694 + t40 * t896 - t567 + t582;
t3 = t110 * t702 + t39 * t896 - t568 + t581;
t35 = [0, 0, 0, t515, t498 * qJD(2), t559 * t720, -t559 * t728, 0, -t431 * qJD(2), -t432 * qJD(2), -qJD(2) * t185 + qJD(3) * t737, qJD(2) * t242 - qJD(3) * t738, -qJD(2) * t241 + qJD(3) * t510, qJD(2) * t181 - qJD(3) * t306 (-qJD(4) * t483 + t561 * t728) * t485, qJD(2) * t307 + qJD(4) * t311, qJD(2) * t386 - t483 * t725, qJD(2) * t387 - t485 * t725, t515, qJD(2) * t79 + qJD(3) * t408 + qJD(4) * t160, -qJD(2) * t80 + qJD(3) * t409 - qJD(4) * t159, qJD(2) * t21 + qJD(3) * t154 + qJD(4) * t17 + qJD(5) * t120, qJD(2) * t22 + qJD(3) * t33 + qJD(4) * t20 + qJD(5) * t34 (qJD(2) * t360 - qJD(6) * t297 - t348 * t770) * t299, qJD(2) * t98 - qJD(4) * t91 + qJD(6) * t125, qJD(2) * t129 + qJD(4) * t107 - t297 * t766, qJD(2) * t128 - qJD(4) * t106 - t299 * t766 (-qJD(2) * t440 + qJD(4) * t910) * t348, qJD(2) * t11 + qJD(3) * t136 + qJD(4) * t7 - qJD(5) * t105 + qJD(6) * t24, qJD(2) * t12 + qJD(3) * t137 + qJD(4) * t8 + qJD(5) * t108 + qJD(6) * t23; 0, 0, 0, t514, t748, t466, -t533 * t835, 0, -t751 - t781, -t750 + t782, -t757 + (qJD(2) * t665 + t565 * qJD(3)) * t558, t755 + t781, t547 - t782 - t790, t758 + (-pkin(2) * t490 - qJ(3) * t489) * qJD(2) - t457 * qJD(3), t561 * t608 + t337, -t531 * t728 - t252 + t754, t564 * t720 + t786, -t561 * t720 + t785, t461, t806 + (t447 * t561 - t660 * t834) * qJD(2) + qJD(3) * t483 + t163 * qJD(4), -t805 + (t558 * t561 * t660 + t447 * t564) * qJD(2) + qJD(3) * t485 + t165 * qJD(4), t859 + (-t842 + t845 + t861 - t862) * qJD(2) - t914 + t10 * qJD(4) + t66, t858 + (-t148 * t404 + t149 * t580 + t385 * t545) * qJD(2) + t31 * qJD(3) + t6 * qJD(4) + t30 * qJD(5), t114 * qJD(4) + t146 + (t496 * t775 + t789) * t360, t803 + t43 * qJD(4) - t71 + (-t359 * t563 - t848) * t780, t759 + (-t360 * t497 - t374 * t440) * qJD(2) + t53 * qJD(4) + t116 * qJD(6), t760 + (t359 * t497 + t368 * t440) * qJD(2) + t47 * qJD(4) + t119 * qJD(6), -t749 + t177 + (t779 - t787) * t440, t866 + (t142 * t368 + t214 * t440 + t359 * t404 - t497 * t59) * qJD(2) + t64 * qJD(3) + t3 * qJD(4) + t49 * qJD(5) + t16 * qJD(6), t863 + (t142 * t374 + t215 * t440 + t360 * t404 + t497 * t60) * qJD(2) + t63 * qJD(3) + t4 * qJD(4) + t55 * qJD(5) + t15 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, -t514, t628, -qJD(2) * t457 - t788, 0, 0, 0, 0, 0, qJD(2) * t483 + t753, qJD(2) * t485 + t752, -qJD(2) * t654 + t65 + t793, t31 * qJD(2) + t19 * qJD(4) + t175 * qJD(5) + t852 + t914, 0, 0, 0, 0, 0, qJD(2) * t64 + qJD(4) * t46 + qJD(6) * t124 + t795, qJD(2) * t63 + qJD(4) * t51 + qJD(6) * t122 + t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t616, t631, t664 * t483, t664 * t485, t518, qJD(2) * t163 - qJD(4) * t245 + t791, qJD(2) * t165 + qJD(4) * t244 - t792, t10 * qJD(2) + (t348 * t875 - t874 * t910) * t878 + t658, t860 + t6 * qJD(2) + t19 * qJD(3) + (-t110 * t875 + t111 * t874) * t878 + t180 * qJD(5), t114 * qJD(2) + t161 - (t772 + t789) * t915, t43 * qJD(2) - t348 * t682 + t112 - t804, qJD(2) * t53 + t772 * t910 + t797 + t922, qJD(2) * t47 + t191 + t333 - t798, t595, t877 + t3 * qJD(2) + t46 * qJD(3) + (t560 * t655 - t864) * qJD(4) + t28 * qJD(6), t876 + t4 * qJD(2) + t51 * qJD(3) + (t563 * t655 + t865) * qJD(4) + t26 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, qJD(2) * t30 + qJD(3) * t175 + qJD(4) * t180 + t870, 0, 0, 0, 0, 0, qJD(2) * t49 + t191 - t799, qJD(2) * t55 + t796 + t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t597, t606, t116 * qJD(2) + qJD(4) * t921 + t297 * t681, t119 * qJD(2) + t198 * qJD(4) + t299 * t681, t217, qJD(2) * t16 + qJD(3) * t124 + qJD(4) * t28 + qJD(5) * t198 - qJD(6) * t40 + t871, qJD(2) * t15 + qJD(3) * t122 + qJD(4) * t26 + qJD(5) * t921 + qJD(6) * t39 + t872; 0, 0, 0, -t514, -t748, -t678, t559 * t732, 0, t751, t750, t757, -t755, t547 + t790, qJ(3) * t547 - t758, -t485 * t516 + t337, -t252 - t754, -t561 * t725 - t786, -t564 * t725 - t785, -t461, qJD(4) * t162 + t547 * t561 - t806, qJD(4) * t164 + t547 * t564 + t805, -qJD(4) * t9 + t66 - t859, qJD(3) * t32 - qJD(4) * t5 - qJD(5) * t29 - t858, qJD(4) * t115 - t360 * t789 + t146, qJD(4) * t44 - t71 - t803, qJD(4) * t54 + qJD(6) * t117 - t759, qJD(4) * t48 + qJD(6) * t118 - t760, t440 * t787 + t177 + t749, -qJD(3) * t61 - qJD(4) * t1 + qJD(5) * t50 - qJD(6) * t13 - t866, -qJD(3) * t62 - qJD(4) * t2 + qJD(5) * t56 - qJD(6) * t14 - t863; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t561 * t769, t531 * qJD(4), 0, 0, 0, qJ(3) * t769 + qJD(3) * t561, -qJ(3) * t771 + qJD(3) * t564, qJD(5) * t418, qJD(3) * t545 + qJD(4) * t153 + qJD(5) * t192, -t494 * t719 + t556 * t721, -qJD(6) * t383 - 0.2e1 * t497 * t679, qJD(4) * t314 + t496 * t723, -qJD(4) * t312 + t496 * t722, -t721, qJD(4) * t57 + qJD(5) * t313 + qJD(6) * t151 - t563 * t773, qJD(4) * t58 + qJD(5) * t384 + qJD(6) * t150 + t560 * t773; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533, t511, 0, 0, 0, 0, 0, t502, t503, 0, qJD(5) * t257 + t101 + t642, 0, 0, 0, 0, 0, qJD(6) * t303 - t619, qJD(6) * t247 - t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t615, -t630, t486, t487, qJD(1) * t710, -t561 * t768 - t618, -t564 * t768 - t617, -t659 - t911 (-t404 * t874 - t580 * t875) * t878 + t335 * qJD(5) + t610, t763 - t361 + (t724 + t731) * t497, t843 + t449 + (-0.2e1 * t677 + t682) * t497, t496 * t772 - t643, t481 - t645, -t594 (t560 * t651 - t846) * qJD(4) + t135 * qJD(6) + t663 (t563 * t651 + t847) * qJD(4) + t133 * qJD(6) + t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t640, qJD(3) * t257 + qJD(4) * t335 + t646, 0, 0, 0, 0, 0, t644, t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, -t590, t368 * t680 + t762, t496 * t639 + t761, -t482 + t784, qJD(3) * t303 + qJD(4) * t135 - qJD(6) * t215 - t648, qJD(3) * t247 + qJD(4) * t133 + qJD(6) * t214 + t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t678, t514, -t628, -qJ(3) * t777 + t788, 0, 0, 0, 0, 0, t561 * t614 - t753, t564 * t614 - t752, t65 - t793, -qJD(2) * t32 - qJD(4) * t18 - qJD(5) * t174 - t852, 0, 0, 0, 0, 0, qJD(2) * t61 + qJD(4) * t45 + qJD(6) * t123 - t795, qJD(2) * t62 + qJD(4) * t52 + qJD(6) * t121 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t533, -t511, 0, 0, 0, 0, 0, -t502, -t503, 0, qJD(5) * t258 + t101 - t642, 0, 0, 0, 0, 0, qJD(6) * t302 + t619, -qJD(6) * t246 + t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, t487, t867, -t650 + t911, 0, 0, 0, 0, 0, -qJD(6) * t368 + t497 * t770 + t869, -qJD(6) * t374 - t497 * t772 + t868; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t635, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t636 + t666, -qJD(4) * t374 - t637 - t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t616, -t631 (qJD(1) * t483 + t776) * t835, t608, t518, -qJD(2) * t162 + t561 * t726 - t791, -qJD(2) * t164 + t564 * t726 + t792, qJD(2) * t9 - t658, qJD(2) * t5 + qJD(3) * t18 + qJD(5) * t179 - t860, -qJD(2) * t115 + t789 * t915 + t161, -qJD(2) * t44 + t112 + t804, -qJD(2) * t54 + qJD(6) * t200 - t797, -qJD(2) * t48 - t190 + t798, -t595, qJD(2) * t1 - qJD(3) * t45 + qJD(6) * t27 - t767 * t910 - t877, qJD(2) * t2 - qJD(3) * t52 + qJD(5) * t196 + qJD(6) * t25 - t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t615, t630, t516, t517, qJD(1) * t709, t618, t617, t659, qJD(5) * t336 - t610, -t497 * t731 - t361 - t763, t497 * t671 + t449 - t843, -qJD(6) * t372 + t643, t362 + t645, t594, qJD(6) * t134 - t496 * t767 - t663, qJD(5) * t368 + qJD(6) * t132 - t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516, t517, -t867, t650, 0, 0, 0, 0, 0, -t869, -t868; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t719, t532 * qJD(6), 0, 0, 0, t544 * t765, t544 * t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t634, 0, 0, 0, 0, 0, -t249, t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t596, -t588, -t632 + t764, t152, -t629, -t543 * t764 - t602, t543 * t765 - t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t649, qJD(2) * t29 + qJD(3) * t174 - qJD(4) * t179 - t870, 0, 0, 0, 0, 0, -qJD(2) * t50 - t190 + t333 + t799, -qJD(2) * t56 - qJD(4) * t196 + qJD(6) * t201 - t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t640, -qJD(3) * t258 - qJD(4) * t336 - t646, 0, 0, 0, 0, 0, t362 + t481 - t644, -t641 + t666; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t635, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t634, 0, 0, 0, 0, 0, t249, -t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, t639 + t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t597, -t606, -qJD(2) * t117 - qJD(4) * t200 + t297 * t787, -qJD(2) * t118 + qJD(4) * t197 + t299 * t787, t217, qJD(2) * t13 - qJD(3) * t123 - qJD(4) * t27 + qJD(5) * t197 - t871, qJD(2) * t14 - qJD(3) * t121 - qJD(4) * t25 - qJD(5) * t201 - t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, t590, qJD(4) * t372 - t496 * t730 - t762, -qJD(4) * t369 - t496 * t729 - t761, -t482 - t784, -qJD(3) * t302 - qJD(4) * t134 - qJD(5) * t369 + t648, qJD(3) * t246 - qJD(4) * t132 - t497 * t767 - t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t636, t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t596, t588, t632, t156, t629, t602, t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, -t729 - t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t35;
