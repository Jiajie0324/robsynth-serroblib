% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR12_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:21:47
% EndTime: 2019-03-09 11:21:54
% DurationCPUTime: 2.18s
% Computational Cost: add. (3498->282), mult. (8961->525), div. (0->0), fcn. (8526->10), ass. (0->157)
t120 = sin(qJ(4));
t123 = cos(qJ(4));
t183 = sin(pkin(11));
t152 = qJD(4) * t183;
t184 = cos(pkin(11));
t153 = qJD(4) * t184;
t81 = -t120 * t153 - t123 * t152;
t86 = -t120 * t183 + t123 * t184;
t188 = t86 * t81;
t80 = t120 * t152 - t123 * t153;
t87 = -t120 * t184 - t123 * t183;
t189 = t80 * t87;
t131 = 0.2e1 * t188 + 0.2e1 * t189;
t197 = (-t183 * t80 + t184 * t81) * pkin(4);
t121 = sin(qJ(2));
t118 = cos(pkin(6));
t191 = pkin(1) * t118;
t103 = t121 * t191;
t117 = sin(pkin(6));
t124 = cos(qJ(2));
t178 = t117 * t124;
t196 = pkin(8) * t178 + t103;
t85 = t86 ^ 2;
t195 = 0.2e1 * t117;
t194 = 2 * qJD(3);
t193 = 2 * qJD(6);
t125 = -pkin(2) - pkin(9);
t192 = pkin(3) + pkin(8);
t122 = cos(qJ(6));
t179 = t117 * t121;
t100 = pkin(8) * t179;
t159 = -pkin(1) * t124 - pkin(2);
t56 = pkin(3) * t179 + t100 + (-pkin(9) + t159) * t118;
t182 = qJ(3) * t121;
t65 = (t124 * t125 - pkin(1) - t182) * t117;
t187 = t120 * t56 + t123 * t65;
t172 = qJD(3) * t121;
t174 = qJD(2) * t121;
t157 = t117 * t174;
t93 = pkin(2) * t157;
t53 = t93 + (-t172 + (pkin(9) * t121 - qJ(3) * t124) * qJD(2)) * t117;
t66 = (t178 * t192 + t103) * qJD(2);
t21 = -qJD(4) * t187 - t120 * t53 + t123 * t66;
t82 = t118 * t120 + t123 * t178;
t62 = -qJD(4) * t82 + t120 * t157;
t83 = t118 * t123 - t120 * t178;
t173 = qJD(2) * t124;
t97 = t117 * t173;
t11 = pkin(4) * t97 - t62 * qJ(5) - t83 * qJD(5) + t21;
t170 = qJD(4) * t123;
t171 = qJD(4) * t120;
t20 = -t120 * t66 - t123 * t53 - t170 * t56 + t171 * t65;
t63 = qJD(4) * t83 - t123 * t157;
t15 = -qJ(5) * t63 - qJD(5) * t82 - t20;
t5 = t11 * t184 - t15 * t183;
t4 = -pkin(5) * t97 - t5;
t190 = t4 * t122;
t6 = t11 * t183 + t15 * t184;
t155 = -t120 * t65 + t123 * t56;
t28 = pkin(4) * t179 - qJ(5) * t83 + t155;
t30 = -qJ(5) * t82 + t187;
t17 = t183 * t28 + t184 * t30;
t119 = sin(qJ(6));
t45 = -t183 * t82 + t184 * t83;
t134 = -t119 * t45 + t122 * t179;
t34 = -t183 * t63 + t184 * t62;
t22 = qJD(6) * t134 + t119 * t97 + t122 * t34;
t186 = t22 * t119;
t79 = t196 * qJD(2);
t185 = t79 * t118;
t107 = pkin(4) * t183 + pkin(10);
t181 = t107 * t119;
t180 = t107 * t122;
t177 = t119 * t122;
t109 = pkin(4) * t120 + qJ(3);
t176 = qJ(5) - t125;
t116 = t122 ^ 2;
t175 = t119 ^ 2 - t116;
t169 = qJD(4) * t125;
t168 = qJD(6) * t119;
t167 = qJD(6) * t122;
t95 = pkin(4) * t170 + qJD(3);
t108 = -pkin(4) * t184 - pkin(5);
t166 = t108 * t193;
t165 = t87 ^ 2 + t85;
t164 = t86 * t168;
t163 = t87 * t168;
t162 = t86 * t167;
t161 = t87 * t167;
t160 = t125 * t179;
t72 = -qJ(3) * t118 - t196;
t114 = t117 ^ 2;
t158 = t114 * t173;
t156 = t119 * t167;
t154 = -0.4e1 * t86 * t177;
t151 = t176 * t123;
t150 = t175 * qJD(6);
t64 = pkin(3) * t178 - t72;
t149 = t125 * t97;
t37 = t119 * t179 + t122 * t45;
t148 = t86 * t22 + t81 * t37;
t33 = t183 * t62 + t184 * t63;
t44 = t183 * t83 + t184 * t82;
t147 = t33 * t87 + t44 * t80;
t146 = t33 * t86 + t44 * t81;
t129 = -t123 * qJD(5) + t171 * t176;
t77 = -qJD(4) * t151 - t120 * qJD(5);
t40 = -t129 * t184 + t183 * t77;
t89 = t176 * t120;
t58 = t151 * t184 - t183 * t89;
t145 = t40 * t86 + t58 * t81;
t143 = t80 * t86 + t81 * t87;
t142 = -pkin(2) * t124 - t182;
t141 = t107 * t80 + t108 * t81;
t140 = t107 * t87 + t108 * t86;
t13 = pkin(10) * t179 + t17;
t42 = pkin(4) * t82 + t64;
t25 = pkin(5) * t44 - pkin(10) * t45 + t42;
t8 = t119 * t25 + t122 * t13;
t139 = -t119 * t37 + t122 * t134;
t50 = -pkin(5) * t87 - pkin(10) * t86 + t109;
t59 = -t151 * t183 - t184 * t89;
t32 = t119 * t50 + t122 * t59;
t94 = t173 * t191;
t78 = pkin(8) * t157 - t94;
t138 = t119 * t33 + t167 * t44;
t137 = t119 * t80 + t161;
t136 = -t119 * t81 - t162;
t135 = t122 * t81 - t164;
t133 = pkin(10) * t97 + t6;
t132 = -pkin(5) * t80 - pkin(10) * t81 + t95;
t111 = t118 * qJD(3);
t55 = -t157 * t192 + t111 + t94;
t16 = -t183 * t30 + t184 * t28;
t128 = t16 * t81 - t17 * t80 + t5 * t86 - t6 * t87;
t41 = t129 * t183 + t184 * t77;
t127 = t41 * t87 + t59 * t80 + t145;
t35 = t63 * pkin(4) + t55;
t126 = t33 * pkin(5) - t34 * pkin(10) + t35;
t90 = 0.2e1 * t121 * t158;
t74 = t118 * t159 + t100;
t73 = (-pkin(1) + t142) * t117;
t71 = (-t121 * t171 + t123 * t173) * t117;
t70 = (-t120 * t173 - t121 * t170) * t117;
t68 = -t111 + t78;
t67 = t93 + (-qJ(3) * t173 - t172) * t117;
t46 = t122 * t80 - t163;
t31 = -t119 * t59 + t122 * t50;
t26 = t122 * t33 - t168 * t44;
t23 = qJD(6) * t37 + t119 * t34 - t122 * t97;
t19 = -qJD(6) * t32 - t119 * t41 + t122 * t132;
t18 = -t119 * t132 - t122 * t41 - t167 * t50 + t168 * t59;
t12 = -pkin(5) * t179 - t16;
t7 = -t119 * t13 + t122 * t25;
t2 = -qJD(6) * t8 - t119 * t133 + t122 * t126;
t1 = -t119 * t126 - t122 * t133 + t13 * t168 - t167 * t25;
t3 = [0, 0, 0, t90, 0.2e1 * (-t121 ^ 2 + t124 ^ 2) * t114 * qJD(2), 0.2e1 * t118 * t97, -0.2e1 * t118 * t157, 0, -0.2e1 * pkin(1) * t114 * t174 - 0.2e1 * t185, -0.2e1 * pkin(1) * t158 + 0.2e1 * t118 * t78 (t121 * t79 - t124 * t68 + (t121 * t72 + t124 * t74) * qJD(2)) * t195, 0.2e1 * t185 + 0.2e1 * (t124 * t67 - t174 * t73) * t117, -0.2e1 * t68 * t118 + 0.2e1 * (-t121 * t67 - t173 * t73) * t117, 0.2e1 * t67 * t73 + 0.2e1 * t68 * t72 + 0.2e1 * t74 * t79, 0.2e1 * t83 * t62, -0.2e1 * t62 * t82 - 0.2e1 * t63 * t83 (t121 * t62 + t173 * t83) * t195 (-t121 * t63 - t173 * t82) * t195, t90, 0.2e1 * t55 * t82 + 0.2e1 * t64 * t63 + 0.2e1 * (t21 * t121 + t155 * t173) * t117, 0.2e1 * t55 * t83 + 0.2e1 * t64 * t62 + 0.2e1 * (t20 * t121 - t173 * t187) * t117, -0.2e1 * t16 * t34 - 0.2e1 * t17 * t33 - 0.2e1 * t44 * t6 - 0.2e1 * t45 * t5, 0.2e1 * t16 * t5 + 0.2e1 * t17 * t6 + 0.2e1 * t35 * t42, 0.2e1 * t37 * t22, 0.2e1 * t134 * t22 - 0.2e1 * t23 * t37, 0.2e1 * t22 * t44 + 0.2e1 * t33 * t37, 0.2e1 * t134 * t33 - 0.2e1 * t23 * t44, 0.2e1 * t44 * t33, 0.2e1 * t12 * t23 - 0.2e1 * t134 * t4 + 0.2e1 * t2 * t44 + 0.2e1 * t33 * t7, 0.2e1 * t1 * t44 + 0.2e1 * t12 * t22 - 0.2e1 * t33 * t8 + 0.2e1 * t37 * t4; 0, 0, 0, 0, 0, t97, -t157, 0, -t79, t78 (qJD(2) * t142 + qJD(3) * t124) * t117, t79, 0.2e1 * t111 - t78, -pkin(2) * t79 - qJ(3) * t68 - qJD(3) * t72, t123 * t62 - t171 * t83, -t62 * t120 - t123 * t63 + (t120 * t82 - t123 * t83) * qJD(4), t71, t70, 0, t123 * t149 + qJ(3) * t63 + qJD(3) * t82 + t55 * t120 + (-t120 * t160 + t123 * t64) * qJD(4), -t120 * t149 + qJ(3) * t62 + qJD(3) * t83 + t55 * t123 + (-t120 * t64 - t123 * t160) * qJD(4), -t33 * t59 + t34 * t58 + t40 * t45 - t41 * t44 - t128, t109 * t35 - t16 * t40 + t17 * t41 + t42 * t95 - t5 * t58 + t59 * t6, t122 * t148 - t164 * t37, t139 * t81 + (-t186 - t122 * t23 + (-t119 * t134 - t122 * t37) * qJD(6)) * t86, t122 * t146 - t164 * t44 - t22 * t87 - t37 * t80, -t119 * t146 - t134 * t80 - t162 * t44 + t23 * t87, -t147, t12 * t162 + t19 * t44 - t2 * t87 + t58 * t23 + t31 * t33 - t40 * t134 - t7 * t80 + (t12 * t81 + t4 * t86) * t119, -t1 * t87 + t12 * t135 + t18 * t44 + t190 * t86 + t58 * t22 - t32 * t33 + t40 * t37 + t8 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, qJ(3) * t194, -0.2e1 * t120 * t170, 0.2e1 * (t120 ^ 2 - t123 ^ 2) * qJD(4), 0, 0, 0, 0.2e1 * qJ(3) * t170 + 0.2e1 * qJD(3) * t120, -0.2e1 * qJ(3) * t171 + 0.2e1 * qJD(3) * t123, 0.2e1 * t127, 0.2e1 * t109 * t95 + 0.2e1 * t40 * t58 + 0.2e1 * t41 * t59, 0.2e1 * t116 * t188 - 0.2e1 * t156 * t85, t175 * t193 * t85 + t154 * t81, -0.2e1 * t122 * t143 + 0.2e1 * t163 * t86, 0.2e1 * t119 * t143 + 0.2e1 * t161 * t86, 0.2e1 * t189, 0.2e1 * t119 * t145 + 0.2e1 * t162 * t58 - 0.2e1 * t19 * t87 - 0.2e1 * t31 * t80, 0.2e1 * t122 * t145 - 0.2e1 * t164 * t58 - 0.2e1 * t18 * t87 + 0.2e1 * t32 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0, t79, 0, 0, 0, 0, 0, t71, t70, -t34 * t86 - t45 * t81 + t147, t128, 0, 0, 0, 0, 0, t119 * t147 + t134 * t81 + t161 * t44 - t86 * t23, t122 * t147 - t163 * t44 - t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t131, -t127, 0, 0, 0, 0, 0, -t119 * t131 - t165 * t167, -t122 * t131 + t165 * t168; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, -t63, t97, t21, t20 (-t183 * t33 - t184 * t34) * pkin(4) (t183 * t6 + t184 * t5) * pkin(4), t167 * t37 + t186, qJD(6) * t139 - t119 * t23 + t22 * t122, t138, t26, 0, -t33 * t181 + t108 * t23 - t190 + (t119 * t12 - t180 * t44) * qJD(6), -t33 * t180 + t108 * t22 + t4 * t119 + (t12 * t122 + t181 * t44) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, -t170, 0, -t120 * t169, -t123 * t169, -t197 (t183 * t41 - t184 * t40) * pkin(4), -t150 * t86 + t177 * t81, qJD(6) * t154 - t175 * t81, -t137, -t46, 0, -t40 * t122 + t141 * t119 + (t119 * t58 + t122 * t140) * qJD(6), t40 * t119 + t141 * t122 + (-t119 * t140 + t122 * t58) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, -t170, 0, t197, 0, 0, 0, 0, 0, t135, t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t156, -0.2e1 * t150, 0, 0, 0, t119 * t166, t122 * t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, 0, 0, 0, 0, 0, t26, -t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, 0, 0, 0, 0, 0, -t46, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t23, t33, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t136, -t80, t19, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, -t168, 0, -t107 * t167, t107 * t168; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t168, -t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
