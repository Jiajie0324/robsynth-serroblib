% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP8_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP8_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP8_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP8_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP8_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP8_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:55:55
% EndTime: 2019-03-10 01:56:31
% DurationCPUTime: 17.58s
% Computational Cost: add. (23563->785), mult. (56435->1028), div. (0->0), fcn. (45674->14), ass. (0->370)
t331 = sin(qJ(2));
t335 = cos(qJ(2));
t390 = pkin(2) * t331 - pkin(9) * t335;
t326 = sin(pkin(6));
t469 = qJD(1) * t326;
t250 = t390 * t469;
t334 = cos(qJ(3));
t234 = t334 * t250;
t422 = t331 * t469;
t327 = cos(pkin(6));
t468 = qJD(1) * t327;
t445 = pkin(1) * t468;
t249 = -pkin(8) * t422 + t335 * t445;
t330 = sin(qJ(3));
t336 = -pkin(10) - pkin(9);
t432 = qJD(3) * t336;
t479 = t334 * t335;
t580 = -t249 * t330 + t234 + (pkin(3) * t331 - pkin(10) * t479) * t469 - t334 * t432;
t467 = qJD(1) * t335;
t421 = t326 * t467;
t395 = t330 * t421;
t472 = t334 * t249 + t330 * t250;
t579 = pkin(10) * t395 + t330 * t432 - t472;
t329 = sin(qJ(4));
t333 = cos(qJ(4));
t265 = t329 * t330 - t333 * t334;
t450 = qJD(3) + qJD(4);
t197 = t450 * t265;
t210 = t265 * t421;
t546 = -t197 + t210;
t266 = t329 * t334 + t330 * t333;
t475 = (-t421 + t450) * t266;
t332 = cos(qJ(5));
t458 = qJD(5) * t332;
t309 = qJD(2) + t468;
t228 = t309 * t334 - t330 * t422;
t229 = t309 * t330 + t334 * t422;
t378 = t333 * t228 - t229 * t329;
t564 = t378 * t332;
t578 = t458 - t564;
t291 = t336 * t330;
t292 = t336 * t334;
t376 = t291 * t333 + t292 * t329;
t577 = qJD(4) * t376 - t580 * t329 + t579 * t333;
t252 = pkin(8) * t421 + t331 * t445;
t464 = qJD(3) * t330;
t545 = -t252 + (-t395 + t464) * pkin(3);
t454 = qJD(1) * qJD(2);
t416 = t335 * t454;
t452 = qJDD(1) * t331;
t576 = t416 + t452;
t328 = sin(qJ(5));
t290 = -qJD(3) + t421;
t371 = -qJD(4) + t290;
t377 = t228 * t329 + t333 * t229;
t124 = t328 * t377 + t332 * t371;
t126 = -t328 * t371 + t332 * t377;
t417 = t331 * t454;
t394 = t326 * t417;
t451 = qJDD(1) * t335;
t307 = t326 * t451;
t449 = qJDD(3) - t307;
t242 = t394 + t449;
t351 = qJDD(4) + t242;
t459 = qJD(5) * t328;
t453 = qJDD(1) * t327;
t308 = qJDD(2) + t453;
t392 = qJD(3) * t422;
t463 = qJD(3) * t334;
t559 = t576 * t326;
t143 = t309 * t463 + t559 * t334 + (t308 - t392) * t330;
t397 = t309 * t464 + t559 * t330 + t334 * t392;
t367 = t334 * t308 - t397;
t342 = t333 * t143 + t329 * t367;
t338 = qJD(4) * t378 + t342;
t560 = -qJD(5) * t371 + t338;
t41 = -t328 * t351 - t560 * t332 + t377 * t459;
t42 = t560 * t328 - t332 * t351 + t377 * t458;
t558 = -qJD(5) + t378;
t572 = t328 * t558;
t575 = -t124 * t578 + t126 * t572 - t328 * t42 - t41 * t332;
t411 = t329 * t143 - t333 * t367;
t72 = qJD(4) * t377 + t411;
t69 = qJDD(5) + t72;
t67 = t332 * t69;
t574 = t124 * t377 - t558 * t572 + t67;
t208 = pkin(9) * t309 + t252;
t375 = -pkin(2) * t335 - pkin(9) * t331 - pkin(1);
t241 = t375 * t326;
t221 = qJD(1) * t241;
t139 = -t208 * t330 + t334 * t221;
t114 = -pkin(10) * t229 + t139;
t105 = -pkin(3) * t290 + t114;
t140 = t208 * t334 + t221 * t330;
t115 = pkin(10) * t228 + t140;
t110 = t329 * t115;
t64 = t333 * t105 - t110;
t60 = pkin(4) * t371 - t64;
t33 = t124 * pkin(5) - t126 * qJ(6) + t60;
t573 = t33 * t558;
t565 = -pkin(11) * t422 + t577;
t562 = -t475 * pkin(4) + t546 * pkin(11) - t545;
t39 = t41 * t328;
t570 = t126 * t578 - t39;
t569 = -t126 * t377 + t328 * t69 - t558 * t578;
t523 = pkin(5) * t332;
t568 = pkin(4) + t523;
t567 = t378 * t33;
t566 = t378 * t60;
t462 = qJD(4) * t329;
t111 = t333 * t115;
t74 = t114 * t329 + t111;
t391 = pkin(3) * t462 - t74;
t563 = t377 * t378;
t212 = t291 * t329 - t292 * t333;
t561 = qJD(4) * t212 + t579 * t329 + t580 * t333;
t557 = t377 ^ 2 - t378 ^ 2;
t101 = pkin(4) * t377 - pkin(11) * t378;
t207 = -pkin(2) * t309 - t249;
t161 = -pkin(3) * t228 + t207;
t527 = sin(qJ(1));
t423 = t527 * t335;
t528 = cos(qJ(1));
t426 = t528 * t331;
t260 = t327 * t426 + t423;
t325 = qJ(3) + qJ(4);
t320 = sin(t325);
t321 = cos(t325);
t431 = t326 * t528;
t191 = t260 * t321 - t320 * t431;
t424 = t527 * t331;
t425 = t528 * t335;
t262 = -t327 * t424 + t425;
t430 = t326 * t527;
t195 = t262 * t321 + t320 * t430;
t483 = t326 * t331;
t238 = t320 * t327 + t321 * t483;
t359 = g(1) * t195 + g(2) * t191 + g(3) * t238;
t461 = qJD(4) * t333;
t444 = pkin(1) * qJD(2) * t327;
t398 = qJD(1) * t444;
t440 = pkin(1) * t453;
t433 = -pkin(8) * t307 - t331 * t440 - t335 * t398;
t350 = -pkin(8) * t394 - t433;
t165 = pkin(9) * t308 + t350;
t369 = t390 * qJD(2);
t167 = (qJD(1) * t369 + qJDD(1) * t375) * t326;
t343 = -qJD(3) * t140 - t330 * t165 + t334 * t167;
t51 = pkin(3) * t242 - pkin(10) * t143 + t343;
t366 = -t334 * t165 - t330 * t167 + t208 * t464 - t221 * t463;
t56 = pkin(10) * t367 - t366;
t403 = t105 * t461 - t115 * t462 + t329 * t51 + t333 * t56;
t556 = -t161 * t378 + t359 - t403;
t384 = pkin(5) * t328 - qJ(6) * t332;
t555 = pkin(5) * t459 - qJ(6) * t458 - qJD(6) * t328 - t378 * t384;
t259 = -t327 * t425 + t424;
t145 = t191 * t328 - t259 * t332;
t146 = t191 * t332 + t259 * t328;
t554 = t378 * t290 + t342;
t322 = t326 ^ 2;
t448 = 0.2e1 * t322;
t14 = pkin(11) * t351 + t403;
t396 = t559 * pkin(8) + t331 * t398 - t335 * t440;
t520 = t308 * pkin(2);
t166 = t396 - t520;
t100 = -pkin(3) * t367 + t166;
t18 = t72 * pkin(4) - pkin(11) * t338 + t100;
t65 = t329 * t105 + t111;
t61 = -pkin(11) * t371 + t65;
t78 = -pkin(4) * t378 - pkin(11) * t377 + t161;
t5 = t332 * t14 + t328 * t18 + t78 * t458 - t459 * t61;
t513 = qJ(6) * t69;
t2 = -qJD(6) * t558 + t5 + t513;
t530 = pkin(5) * t69;
t6 = -t328 * t14 + t332 * t18 - t61 * t458 - t78 * t459;
t4 = qJDD(6) - t6 - t530;
t552 = t2 * t332 + t4 * t328;
t550 = pkin(5) * t377;
t507 = pkin(4) * t422 + t561;
t505 = t555 + t391;
t549 = qJ(6) * t377;
t548 = t558 * t377;
t482 = t326 * t335;
t261 = t327 * t423 + t426;
t542 = g(1) * t261 + g(2) * t259;
t352 = g(3) * t482 - t542;
t547 = t352 * t320;
t318 = pkin(3) * t334 + pkin(2);
t185 = pkin(4) * t265 - pkin(11) * t266 - t318;
t474 = t328 * t185 + t332 * t212;
t526 = pkin(1) * t331;
t471 = pkin(8) * t482 + t327 * t526;
t240 = pkin(9) * t327 + t471;
t473 = t334 * t240 + t330 * t241;
t544 = -t185 * t458 + t212 * t459 + t562 * t328 - t565 * t332;
t316 = pkin(3) * t329 + pkin(11);
t418 = t316 * t459;
t441 = pkin(3) * t461;
t543 = -t332 * t441 + t418;
t541 = -t359 + t552;
t28 = -t328 * t61 + t332 * t78;
t478 = qJD(6) - t28;
t23 = pkin(5) * t558 + t478;
t540 = t377 * t23 + t33 * t459;
t539 = -t28 * t377 + t60 * t459;
t29 = t328 * t78 + t332 * t61;
t24 = -qJ(6) * t558 + t29;
t237 = -t320 * t483 + t321 * t327;
t492 = t237 * t328;
t194 = t262 * t320 - t321 * t430;
t496 = t194 * t328;
t407 = -t260 * t320 - t321 * t431;
t497 = t407 * t328;
t435 = g(1) * t496 - g(2) * t497 - g(3) * t492;
t402 = t105 * t462 + t115 * t461 + t329 * t56 - t333 * t51;
t15 = -pkin(4) * t351 + t402;
t7 = t42 * pkin(5) + t41 * qJ(6) - t126 * qJD(6) + t15;
t537 = -t377 * t24 - t328 * t7 + t435;
t536 = t15 * t328 + t29 * t377 + t60 * t458 - t435;
t360 = g(1) * t194 - g(2) * t407 - g(3) * t237;
t534 = -t161 * t377 + t360 - t402;
t533 = -t377 * t290 - t411;
t257 = t327 * t330 + t334 * t483;
t408 = -t240 * t330 + t334 * t241;
t122 = -pkin(3) * t482 - pkin(10) * t257 + t408;
t256 = -t327 * t334 + t330 * t483;
t132 = -pkin(10) * t256 + t473;
t465 = qJD(2) * t335;
t419 = t326 * t465;
t200 = -qJD(3) * t256 + t334 * t419;
t251 = t326 * t369;
t310 = pkin(8) * t483;
t481 = t327 * t335;
t253 = (pkin(1) * t481 - t310) * qJD(2);
t344 = -qJD(3) * t473 + t334 * t251 - t253 * t330;
t466 = qJD(2) * t331;
t420 = t326 * t466;
t88 = pkin(3) * t420 - pkin(10) * t200 + t344;
t199 = qJD(3) * t257 + t330 * t419;
t365 = -t240 * t464 + t241 * t463 + t330 * t251 + t334 * t253;
t93 = -pkin(10) * t199 + t365;
t368 = t122 * t461 - t132 * t462 + t329 * t88 + t333 * t93;
t20 = pkin(11) * t420 + t368;
t477 = t329 * t122 + t333 * t132;
t81 = -pkin(11) * t482 + t477;
t174 = t333 * t256 + t257 * t329;
t175 = -t256 * t329 + t257 * t333;
t239 = t310 + (-pkin(1) * t335 - pkin(2)) * t327;
t525 = pkin(3) * t256;
t178 = t239 + t525;
t95 = pkin(4) * t174 - pkin(11) * t175 + t178;
t380 = t328 * t95 + t332 * t81;
t254 = pkin(8) * t419 + t331 * t444;
t162 = pkin(3) * t199 + t254;
t98 = -qJD(4) * t174 - t199 * t329 + t200 * t333;
t99 = qJD(4) * t175 + t333 * t199 + t200 * t329;
t44 = pkin(4) * t99 - pkin(11) * t98 + t162;
t532 = -qJD(5) * t380 - t20 * t328 + t332 * t44;
t531 = t126 ^ 2;
t529 = pkin(11) * t69;
t524 = pkin(3) * t333;
t519 = t475 * qJ(6) + qJD(6) * t265 - t544;
t518 = -t475 * pkin(5) + t474 * qJD(5) + t565 * t328 + t562 * t332;
t517 = t328 * t101 + t332 * t64;
t172 = -t210 * t328 - t332 * t422;
t173 = -t210 * t332 + t328 * t422;
t385 = qJ(6) * t328 + t523;
t516 = -pkin(5) * t172 + qJ(6) * t173 - t384 * t197 + (qJD(5) * t385 - qJD(6) * t332) * t266 + t507;
t75 = t114 * t333 - t110;
t89 = pkin(3) * t229 + t101;
t515 = t328 * t89 + t332 * t75;
t514 = pkin(11) * qJD(5);
t512 = t558 * t29;
t511 = t23 * t328;
t510 = t316 * t69;
t509 = t332 * t42;
t504 = t555 - t65;
t502 = t124 * t328;
t501 = t126 * t124;
t500 = t126 * t332;
t495 = t228 * t290;
t494 = t229 * t290;
t489 = t260 * t330;
t488 = t266 * t328;
t487 = t266 * t332;
t486 = t321 * t328;
t485 = t321 * t332;
t484 = t322 * qJD(1) ^ 2;
t480 = t332 * t335;
t323 = t331 ^ 2;
t470 = -t335 ^ 2 + t323;
t460 = qJD(5) * t316;
t457 = qJD(2) - t309;
t22 = t23 * t458;
t439 = t335 * t484;
t438 = t326 * t480;
t295 = t328 * t482;
t437 = qJ(6) * t497 + t568 * t407;
t436 = -qJ(6) * t496 - t568 * t194;
t434 = qJ(6) * t492 + t568 * t237;
t429 = t330 * t528;
t428 = t330 * t527;
t427 = t334 * t528;
t414 = qJDD(4) + t449;
t413 = t122 * t333 - t329 * t132;
t410 = t197 * t328 + t172;
t409 = t197 * t332 + t173;
t406 = t260 * t334 - t326 * t429;
t401 = t309 + t468;
t399 = t308 + t453;
t149 = t195 * t328 - t261 * t332;
t389 = -g(1) * t145 + g(2) * t149;
t150 = t195 * t332 + t261 * t328;
t388 = g(1) * t146 - g(2) * t150;
t387 = g(1) * t407 + g(2) * t194;
t80 = pkin(4) * t482 - t413;
t383 = -t510 - t566;
t381 = t23 * t332 - t24 * t328;
t379 = -t328 * t81 + t332 * t95;
t374 = -t122 * t462 - t132 * t461 - t329 * t93 + t333 * t88;
t281 = -pkin(4) - t385;
t372 = pkin(4) * t321 + pkin(11) * t320 + t318;
t152 = t175 * t328 + t438;
t370 = t332 * t20 + t328 * t44 + t95 * t458 - t459 * t81;
t363 = -t441 * t558 + t510;
t168 = -t259 * t486 - t260 * t332;
t170 = -t261 * t486 - t262 * t332;
t222 = t295 * t321 - t332 * t483;
t362 = g(1) * t170 + g(2) * t168 + g(3) * t222;
t169 = -t259 * t485 + t260 * t328;
t171 = -t261 * t485 + t262 * t328;
t223 = (t321 * t480 + t328 * t331) * t326;
t361 = -g(1) * t171 - g(2) * t169 - g(3) * t223;
t358 = -t326 * t427 - t489;
t203 = -t262 * t330 + t334 * t430;
t357 = t266 * t458 - t410;
t356 = t266 * t459 + t409;
t355 = t360 - t7;
t353 = -t15 + t360;
t349 = t22 + t541;
t348 = -pkin(9) * t242 - t207 * t290;
t21 = -pkin(4) * t420 - t374;
t188 = t238 * t328 + t438;
t347 = g(1) * t149 + g(2) * t145 + g(3) * t188 + t6;
t341 = -pkin(9) * qJD(3) * t290 + t166 + t352;
t189 = t238 * t332 - t295;
t340 = -g(1) * t150 - g(2) * t146 - g(3) * t189 + t5;
t339 = t126 * t33 + qJDD(6) - t347;
t317 = -pkin(4) - t524;
t263 = t281 - t524;
t204 = t262 * t334 + t326 * t428;
t153 = t175 * t332 - t295;
t136 = t266 * t384 - t376;
t113 = -pkin(5) * t265 - t185 * t332 + t212 * t328;
t112 = qJ(6) * t265 + t474;
t82 = pkin(5) * t126 + qJ(6) * t124;
t71 = -qJD(5) * t295 + t175 * t458 + t328 * t98 - t332 * t420;
t70 = qJD(5) * t152 - t328 * t420 - t332 * t98;
t45 = pkin(5) * t152 - qJ(6) * t153 + t80;
t35 = -pkin(5) * t174 - t379;
t34 = qJ(6) * t174 + t380;
t31 = -t101 * t332 + t328 * t64 - t550;
t30 = t517 + t549;
t27 = t328 * t75 - t332 * t89 - t550;
t26 = t515 + t549;
t25 = -t124 * t558 - t41;
t10 = pkin(5) * t71 + qJ(6) * t70 - qJD(6) * t153 + t21;
t9 = -pkin(5) * t99 - t532;
t8 = qJ(6) * t99 + qJD(6) * t174 + t370;
t1 = [qJDD(1), g(1) * t527 - g(2) * t528, g(1) * t528 + g(2) * t527 (qJDD(1) * t323 + 0.2e1 * t331 * t416) * t322 (t331 * t451 - t454 * t470) * t448 (t331 * t399 + t401 * t465) * t326 (t335 * t399 - t401 * t466) * t326, t308 * t327, -t254 * t309 - t310 * t308 - t396 * t327 + g(1) * t260 - g(2) * t262 + (t308 * t481 + (-t417 + t451) * t448) * pkin(1), -t576 * pkin(1) * t448 - g(1) * t259 + g(2) * t261 - t253 * t309 - t471 * t308 - t350 * t327, t143 * t257 + t200 * t229, -t143 * t256 - t229 * t199 + t200 * t228 + t257 * t367, -t200 * t290 + t242 * t257 + (-t143 * t335 + t229 * t466) * t326, t199 * t290 - t256 * t242 + (t228 * t466 - t335 * t367) * t326 (-t242 * t335 - t290 * t466) * t326, -t344 * t290 + t408 * t242 - t254 * t228 - t239 * t367 + t166 * t256 + t207 * t199 + g(1) * t406 - g(2) * t204 + (t139 * t466 - t335 * t343) * t326, t365 * t290 - t473 * t242 + t254 * t229 + t239 * t143 + t166 * t257 + t207 * t200 - g(1) * t489 - g(2) * t203 + (-g(1) * t427 - t140 * t466 - t335 * t366) * t326, t175 * t338 + t377 * t98, -t174 * t338 - t175 * t72 - t377 * t99 + t378 * t98, t98 * t450 + t175 * t414 + (-t338 * t335 + t377 * t466 + (t175 * t466 - t335 * t98) * qJD(1)) * t326, -t99 * t450 - t174 * t414 + (t378 * t466 + t72 * t335 + (-t174 * t466 + t335 * t99) * qJD(1)) * t326 (-t414 * t335 + (-0.2e1 * t421 + t450) * t466) * t326, g(1) * t191 - g(2) * t195 + t100 * t174 + t161 * t99 - t162 * t378 + t178 * t72 + t351 * t413 - t371 * t374 + t402 * t482 + t420 * t64, t100 * t175 + t161 * t98 + t162 * t377 + t178 * t338 - t351 * t477 + t368 * t371 + t403 * t482 - t420 * t65 + t387, -t126 * t70 - t153 * t41, t124 * t70 - t126 * t71 + t152 * t41 - t153 * t42, t126 * t99 + t153 * t69 - t174 * t41 + t558 * t70, -t124 * t99 - t152 * t69 - t174 * t42 + t558 * t71, t174 * t69 - t558 * t99, t21 * t124 + t15 * t152 + t6 * t174 + t28 * t99 + t379 * t69 + t80 * t42 - t532 * t558 + t60 * t71 + t388, t21 * t126 + t15 * t153 - t5 * t174 - t29 * t99 + t370 * t558 - t380 * t69 - t80 * t41 - t60 * t70 + t389, t10 * t124 + t152 * t7 - t174 * t4 - t23 * t99 + t33 * t71 - t35 * t69 + t42 * t45 + t558 * t9 + t388, -t124 * t8 + t126 * t9 - t152 * t2 + t153 * t4 - t23 * t70 - t24 * t71 - t34 * t42 - t35 * t41 - t387, -t10 * t126 - t153 * t7 + t174 * t2 + t24 * t99 + t33 * t70 + t34 * t69 + t41 * t45 - t558 * t8 - t389, t2 * t34 + t24 * t8 + t7 * t45 + t33 * t10 + t4 * t35 + t23 * t9 - g(1) * (-pkin(1) * t527 - pkin(4) * t191 - pkin(5) * t146 + pkin(11) * t407 - qJ(6) * t145 + t259 * t336 - t260 * t318) - g(2) * (pkin(1) * t528 + t195 * pkin(4) + t150 * pkin(5) + t194 * pkin(11) + t149 * qJ(6) - t261 * t336 + t262 * t318) + (-g(1) * (pkin(3) * t429 + pkin(8) * t528) - g(2) * (pkin(3) * t428 + pkin(8) * t527)) * t326; 0, 0, 0, -t331 * t439, t470 * t484 (t457 * t467 + t452) * t326, -t422 * t457 + t307, t308, t252 * t309 + t484 * t526 - t352 - t396, pkin(1) * t439 + g(1) * t262 + g(2) * t260 + t249 * t309 + (pkin(8) * t454 + g(3)) * t483 + t433, t143 * t330 - t334 * t494 (t143 - t495) * t334 + (t367 + t494) * t330, -t290 * t463 + t330 * t242 + (-t229 * t331 + t290 * t479) * t469, t290 * t464 + t334 * t242 + (-t290 * t330 * t335 - t228 * t331) * t469, t290 * t422, -pkin(2) * t397 + t234 * t290 - t139 * t422 + t252 * t228 + (-t249 * t290 + t348) * t330 + (-t341 + t520) * t334, -pkin(2) * t143 + t140 * t422 - t252 * t229 - t290 * t472 + t330 * t341 + t334 * t348, t338 * t266 + t546 * t377, -t265 * t338 - t266 * t72 - t475 * t377 + t378 * t546, t266 * t351 - t546 * t371 - t377 * t422, -t265 * t351 + t475 * t371 - t378 * t422, t371 * t422, t100 * t265 + t475 * t161 - t318 * t72 - t352 * t321 + t376 * t351 + t561 * t371 - t378 * t545 - t64 * t422, t100 * t266 + t546 * t161 - t212 * t351 - t318 * t338 + t577 * t371 + t545 * t377 + t422 * t65 + t547, -t126 * t356 - t41 * t487, t410 * t126 + t409 * t124 + (t39 - t509 + (-t500 + t502) * qJD(5)) * t266, t126 * t475 - t265 * t41 + t356 * t558 + t487 * t69, -t124 * t475 - t265 * t42 + t357 * t558 - t488 * t69, t265 * t69 - t475 * t558, -t60 * t172 - t376 * t42 + t6 * t265 + t475 * t28 + t507 * t124 + (t60 * qJD(5) * t266 + t185 * t69 - (-qJD(5) * t212 - t562) * t558) * t332 + (t15 * t266 - t60 * t197 - t212 * t69 - (-qJD(5) * t185 - t565) * t558) * t328 + t361, t507 * t126 + t15 * t487 - t5 * t265 - t475 * t29 - t356 * t60 + t376 * t41 - t474 * t69 - t544 * t558 + t362, -t113 * t69 + t516 * t124 + t136 * t42 - t475 * t23 - t265 * t4 + t357 * t33 + t7 * t488 + t518 * t558 + t361, -t112 * t42 - t113 * t41 + t172 * t24 - t173 * t23 - t381 * t197 + t518 * t126 - t519 * t124 - t547 + (-t2 * t328 + t332 * t4 + (-t24 * t332 - t511) * qJD(5)) * t266, t112 * t69 - t516 * t126 + t136 * t41 + t2 * t265 + t475 * t24 + t356 * t33 - t7 * t487 - t519 * t558 - t362, t2 * t112 + t7 * t136 + t4 * t113 - g(1) * (pkin(5) * t171 + qJ(6) * t170 - t262 * t336) - g(2) * (pkin(5) * t169 + qJ(6) * t168 - t260 * t336) + t516 * t33 + t519 * t24 + t518 * t23 + t542 * t372 + (-pkin(5) * t223 - qJ(6) * t222 - (-t331 * t336 + t335 * t372) * t326) * g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t229 * t228, -t228 ^ 2 + t229 ^ 2, t143 + t495, t367 - t494, t242, -g(1) * t203 - g(2) * t358 + g(3) * t256 - t140 * t290 - t207 * t229 + t343, g(1) * t204 + g(2) * t406 + g(3) * t257 - t139 * t290 - t207 * t228 + t366, -t563, t557, t554, t533, t351, -t74 * t371 + (t229 * t378 + t333 * t351 + t371 * t462) * pkin(3) + t534, -t75 * t371 + (-t229 * t377 - t329 * t351 + t371 * t461) * pkin(3) + t556, t570, t575, t569, t574, t548, t317 * t42 + t391 * t124 + (-(t75 - t441) * t558 + t383) * t328 + (-(-t89 - t460) * t558 + t353) * t332 + t539, -t317 * t41 + t383 * t332 + t391 * t126 - (t515 + t543) * t558 + t536, -t558 * t27 + t263 * t42 + t505 * t124 + (-t363 - t567) * t328 + (t460 * t558 + t355) * t332 + t540, t124 * t26 - t126 * t27 + (-t124 * t441 - t378 * t23 + (qJD(5) * t126 - t42) * t316) * t332 + (t126 * t441 + t378 * t24 - t316 * t41 + (t124 * t316 - t24) * qJD(5)) * t328 + t349, t263 * t41 - (-t26 - t418) * t558 - t505 * t126 + (t363 + t573) * t332 + t537, t7 * t263 + t441 * t511 - t23 * t27 - g(1) * (pkin(3) * t203 + t195 * pkin(11) + t436) - g(2) * (pkin(3) * t358 + t191 * pkin(11) + t437) - g(3) * (pkin(11) * t238 + t434 - t525) + t505 * t33 + (t22 + t552) * t316 + (-t26 - t543) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t563, t557, t554, t533, t351, -t371 * t65 + t534, -t371 * t64 + t556, t570, t575, t569, t574, t548, -pkin(4) * t42 - t65 * t124 + (-t558 * t64 - t529 - t566) * t328 + (-(-t101 - t514) * t558 + t353) * t332 + t539, pkin(4) * t41 - t517 * t558 - t65 * t126 - t60 * t564 + (-t459 * t558 - t67) * pkin(11) + t536, -t558 * t31 + t281 * t42 + (-t529 - t567) * t328 + t504 * t124 + (t514 * t558 + t355) * t332 + t540, -t24 * t459 + t124 * t30 - t126 * t31 - t381 * t378 + (-t39 - t509 + (t500 + t502) * qJD(5)) * pkin(11) + t349, t281 * t41 - (-pkin(11) * t459 - t30) * t558 - t504 * t126 + (t529 + t573) * t332 + t537, t7 * t281 - t24 * t30 - t23 * t31 - g(1) * t436 - g(2) * t437 - g(3) * t434 + t504 * t33 + (qJD(5) * t381 + t541) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, -t124 ^ 2 + t531, t25, -t126 * t558 - t42, t69, -t126 * t60 + t347 - t512, t124 * t60 - t28 * t558 - t340, -t124 * t82 - t339 - t512 + 0.2e1 * t530, pkin(5) * t41 - qJ(6) * t42 + (t24 - t29) * t126 + (t23 - t478) * t124, 0.2e1 * t513 - t124 * t33 + t126 * t82 - (0.2e1 * qJD(6) - t28) * t558 + t340, t2 * qJ(6) - t4 * pkin(5) - t33 * t82 - t23 * t29 - g(1) * (-pkin(5) * t149 + qJ(6) * t150) - g(2) * (-pkin(5) * t145 + qJ(6) * t146) - g(3) * (-pkin(5) * t188 + qJ(6) * t189) + t478 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501 - t69, t25, -t558 ^ 2 - t531, t24 * t558 + t339 - t530;];
tau_reg  = t1;
