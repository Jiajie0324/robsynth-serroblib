% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:55:50
% EndTime: 2019-03-10 01:56:27
% DurationCPUTime: 16.67s
% Computational Cost: add. (29284->767), mult. (75208->1004), div. (0->0), fcn. (59423->10), ass. (0->325)
t308 = sin(pkin(6));
t313 = sin(qJ(2));
t424 = qJD(1) * t313;
t399 = t308 * t424;
t309 = cos(pkin(6));
t315 = cos(qJ(2));
t438 = t309 * t315;
t412 = pkin(1) * t438;
t254 = -pkin(8) * t399 + qJD(1) * t412;
t341 = t308 * (pkin(2) * t313 - pkin(9) * t315);
t255 = qJD(1) * t341;
t312 = sin(qJ(3));
t483 = cos(qJ(3));
t200 = -t312 * t254 + t483 * t255;
t411 = t483 * pkin(9);
t289 = pkin(10) * t483 + t411;
t401 = t315 * t483;
t426 = qJD(1) * t308;
t535 = (pkin(3) * t313 - pkin(10) * t401) * t426 + t200 + qJD(3) * t289;
t201 = t483 * t254 + t312 * t255;
t288 = (-pkin(10) - pkin(9)) * t312;
t423 = qJD(1) * t315;
t398 = t308 * t423;
t372 = t312 * t398;
t534 = -pkin(10) * t372 - qJD(3) * t288 + t201;
t311 = sin(qJ(4));
t482 = cos(qJ(4));
t335 = -t311 * t312 + t482 * t483;
t414 = qJD(3) + qJD(4);
t213 = t335 * t414;
t224 = t335 * t398;
t533 = t213 - t224;
t270 = t311 * t483 + t312 * t482;
t429 = (-t398 + t414) * t270;
t314 = cos(qJ(5));
t417 = qJD(5) * t314;
t404 = t308 * t483;
t369 = qJD(1) * t404;
t425 = qJD(1) * t309;
t376 = qJD(2) + t425;
t240 = t312 * t376 + t313 * t369;
t239 = -t312 * t399 + t483 * t376;
t500 = t482 * t239;
t192 = t240 * t311 - t500;
t519 = t192 * t314;
t532 = t417 + t519;
t389 = qJD(4) * t482;
t420 = qJD(4) * t311;
t433 = -t288 * t389 + t289 * t420 + t311 * t535 + t534 * t482;
t439 = t308 * t315;
t297 = pkin(8) * t439;
t481 = pkin(1) * t313;
t428 = t309 * t481 + t297;
t257 = t428 * qJD(1);
t421 = qJD(3) * t312;
t366 = -t257 + (-t372 + t421) * pkin(3);
t310 = sin(qJ(5));
t287 = -qJD(3) + t398;
t342 = -qJD(4) + t287;
t334 = t314 * t342;
t340 = t311 * t239 + t240 * t482;
t164 = t310 * t340 + t334;
t166 = -t310 * t342 + t314 * t340;
t222 = qJD(2) * pkin(9) + (t297 + (pkin(9) + t481) * t309) * qJD(1);
t252 = (-pkin(2) * t315 - pkin(9) * t313 - pkin(1)) * t308;
t234 = qJD(1) * t252;
t181 = -t222 * t312 + t483 * t234;
t150 = -pkin(10) * t240 + t181;
t139 = -pkin(3) * t287 + t150;
t182 = t222 * t483 + t312 * t234;
t151 = t239 * pkin(10) + t182;
t146 = t311 * t151;
t89 = t139 * t482 - t146;
t85 = pkin(4) * t342 - t89;
t45 = t164 * pkin(5) - t166 * qJ(6) + t85;
t517 = qJD(5) + t192;
t531 = t45 * t517;
t530 = pkin(11) * t399 + t433;
t529 = -t429 * pkin(4) + pkin(11) * t533 - t366;
t418 = qJD(5) * t310;
t415 = qJD(1) * qJD(2);
t386 = t308 * t415;
t290 = t313 * t386;
t349 = t315 * t369;
t527 = qJD(3) * t239;
t210 = -qJD(2) * t349 - t527;
t368 = t315 * t386;
t406 = qJD(3) * t240 + t312 * t368;
t323 = t210 * t482 + t240 * t420 + t311 * t406;
t318 = -t239 * t389 + t323;
t77 = qJD(5) * t334 - t310 * t290 + t314 * t318 + t340 * t418;
t78 = qJD(5) * t166 - t314 * t290 - t310 * t318;
t528 = t164 * t417 + t166 * t418 + t310 * t78 + t77 * t314 + (t164 * t314 + t166 * t310) * t192;
t221 = -pkin(2) * t376 - t254;
t196 = -t239 * pkin(3) + t221;
t101 = t192 * pkin(4) - pkin(11) * t340 + t196;
t147 = t482 * t151;
t90 = t311 * t139 + t147;
t86 = -pkin(11) * t342 + t90;
t39 = t101 * t314 - t310 * t86;
t436 = qJD(6) - t39;
t33 = -pkin(5) * t517 + t436;
t380 = t311 * t210 - t482 * t406;
t118 = qJD(4) * t340 - t380;
t462 = qJ(6) * t118;
t256 = qJD(2) * t341;
t247 = qJD(1) * t256;
t440 = t308 * t313;
t295 = pkin(8) * t440;
t265 = -t295 + t412;
t258 = t265 * qJD(2);
t248 = qJD(1) * t258;
t132 = -t182 * qJD(3) + t483 * t247 - t312 * t248;
t100 = pkin(3) * t290 + t210 * pkin(10) + t132;
t390 = qJD(3) * t483;
t131 = -t222 * t421 + t234 * t390 + t312 * t247 + t483 * t248;
t107 = -pkin(10) * t406 + t131;
t377 = -t311 * t100 - t482 * t107 - t139 * t389 + t151 * t420;
t21 = pkin(11) * t290 - t377;
t259 = t428 * qJD(2);
t249 = qJD(1) * t259;
t180 = pkin(3) * t406 + t249;
t49 = t118 * pkin(4) + pkin(11) * t318 + t180;
t6 = t101 * t417 + t314 * t21 + t310 * t49 - t418 * t86;
t2 = qJD(6) * t517 + t462 + t6;
t480 = pkin(5) * t118;
t7 = -t101 * t418 - t310 * t21 + t314 * t49 - t86 * t417;
t4 = -t7 - t480;
t509 = t2 * t314 + t4 * t310;
t526 = t33 * t532 + t509;
t457 = t164 * t310;
t76 = t78 * t314;
t525 = t457 * t517 - t76;
t520 = t192 * t310;
t524 = -t76 + (t418 + t520) * t164;
t74 = t77 * t310;
t523 = t166 * t532 - t74;
t112 = t310 * t118;
t497 = -t417 * t517 - t112;
t522 = -t166 * t340 + t517 * t519 - t497;
t114 = t314 * t118;
t431 = t418 * t517 - t114;
t328 = -t164 * t340 + t517 * t520 + t431;
t521 = t192 * t39;
t447 = t192 * t340;
t227 = t311 * t288 + t289 * t482;
t432 = -qJD(4) * t227 + t534 * t311 - t482 * t535;
t516 = -t192 ^ 2 + t340 ^ 2;
t136 = pkin(4) * t340 + pkin(11) * t192;
t515 = t196 * t192 + t377;
t362 = pkin(5) * t310 - qJ(6) * t314;
t514 = pkin(5) * t418 - qJ(6) * t417 - qJD(6) * t310 + t192 * t362;
t513 = -t192 * t342 - t318;
t203 = t224 * t314 + t310 * t399;
t381 = -t213 * t314 + t203;
t202 = t224 * t310 - t314 * t399;
t382 = -t213 * t310 + t202;
t512 = t381 * t164 + t382 * t166 + t270 * (qJD(5) * (-t166 * t314 + t457) - t76 + t74);
t305 = t308 ^ 2;
t387 = t305 * t415;
t510 = -0.2e1 * t387;
t507 = pkin(5) * t340;
t40 = t101 * t310 + t314 * t86;
t344 = t40 * t517 + t7;
t303 = -pkin(3) * t483 - pkin(2);
t211 = -pkin(4) * t335 - t270 * pkin(11) + t303;
t475 = -t211 * t417 + t227 * t418 + t310 * t529 + t314 * t530;
t506 = -t166 * t517 + t78;
t94 = t150 * t311 + t147;
t367 = pkin(3) * t420 - t94;
t505 = qJ(6) * t340;
t504 = t517 * t340;
t501 = t313 * t315;
t251 = pkin(9) * t309 + t428;
t198 = -t251 * t312 + t483 * t252;
t262 = t309 * t312 + t313 * t404;
t162 = -pkin(3) * t439 - pkin(10) * t262 + t198;
t199 = t483 * t251 + t312 * t252;
t261 = -t309 * t483 + t312 * t440;
t174 = -pkin(10) * t261 + t199;
t109 = t311 * t162 + t482 * t174;
t104 = -pkin(11) * t439 + t109;
t205 = t261 * t482 + t311 * t262;
t206 = -t311 * t261 + t262 * t482;
t250 = t295 + (-pkin(1) * t315 - pkin(2)) * t309;
t209 = pkin(3) * t261 + t250;
t129 = pkin(4) * t205 - pkin(11) * t206 + t209;
t499 = t314 * t104 + t310 * t129;
t434 = pkin(4) * t399 - t432;
t498 = t182 * t287 - t132;
t496 = t310 * t211 + t314 * t227;
t24 = t482 * t100 - t311 * t107 - t139 * t420 - t151 * t389;
t495 = -t196 * t340 + t24;
t22 = -pkin(4) * t290 - t24;
t10 = pkin(5) * t78 + qJ(6) * t77 - qJD(6) * t166 + t22;
t494 = -t10 * t314 + t33 * t340 + t45 * t418;
t34 = qJ(6) * t517 + t40;
t493 = -t10 * t310 - t34 * t340;
t492 = -t22 * t314 - t39 * t340 + t85 * t418;
t491 = t22 * t310 + t40 * t340 + t85 * t417;
t488 = -t287 * t340 + t380;
t141 = -qJD(3) * t199 + t483 * t256 - t312 * t258;
t388 = t483 * qJD(2);
t216 = -qJD(3) * t261 + t388 * t439;
t422 = qJD(2) * t313;
t397 = t308 * t422;
t120 = pkin(3) * t397 - t216 * pkin(10) + t141;
t140 = -t251 * t421 + t252 * t390 + t312 * t256 + t483 * t258;
t396 = qJD(2) * t439;
t215 = qJD(3) * t262 + t312 * t396;
t127 = -pkin(10) * t215 + t140;
t35 = t311 * t120 + t482 * t127 + t162 * t389 - t174 * t420;
t30 = pkin(11) * t397 + t35;
t134 = qJD(4) * t205 + t311 * t215 - t216 * t482;
t135 = qJD(4) * t206 + t215 * t482 + t311 * t216;
t197 = pkin(3) * t215 + t259;
t62 = pkin(4) * t135 + pkin(11) * t134 + t197;
t12 = -qJD(5) * t499 - t30 * t310 + t314 * t62;
t476 = qJD(5) * t496 - t310 * t530 + t314 * t529;
t337 = t270 * t417 - t382;
t485 = t112 * t270 + t164 * t429 - t335 * t78 + t337 * t517;
t484 = t166 ^ 2;
t316 = qJD(1) ^ 2;
t5 = t6 * t314;
t478 = -qJ(6) * t429 + qJD(6) * t335 + t475;
t477 = pkin(5) * t429 - t476;
t363 = t314 * pkin(5) + t310 * qJ(6);
t474 = t202 * pkin(5) - t203 * qJ(6) - t362 * t213 - (qJD(5) * t363 - qJD(6) * t314) * t270 - t434;
t473 = pkin(3) * qJD(4);
t471 = t166 * t45;
t470 = t517 * t34;
t301 = pkin(3) * t311 + pkin(11);
t374 = pkin(3) * t389;
t356 = t314 * t374;
t467 = -t164 * t356 - t301 * t76;
t464 = t367 + t514;
t463 = t514 - t90;
t56 = t310 * t136 + t314 * t89;
t121 = pkin(3) * t240 + t136;
t95 = t150 * t482 - t146;
t54 = t310 * t121 + t314 * t95;
t461 = t118 * t205;
t460 = t118 * t335;
t459 = t118 * t301;
t458 = t164 * t301;
t456 = t166 * t164;
t446 = t240 * t239;
t445 = t240 * t287;
t444 = t270 * t310;
t443 = t270 * t314;
t442 = t287 * t312;
t441 = t305 * t316;
t427 = t313 ^ 2 - t315 ^ 2;
t410 = t482 * pkin(3);
t407 = t310 * t439;
t405 = t131 * t483;
t403 = t310 * t482;
t402 = t314 * t482;
t400 = t483 * t221;
t395 = t301 * t418;
t394 = t301 * t417;
t392 = t305 * t423;
t391 = t164 ^ 2 - t484;
t226 = -t482 * t288 + t289 * t311;
t375 = qJD(2) + 0.2e1 * t425;
t373 = t441 * t501;
t365 = pkin(1) * t510;
t108 = t162 * t482 - t311 * t174;
t364 = (qJD(5) * t164 - t77) * pkin(11);
t188 = t206 * t310 + t314 * t439;
t92 = -qJD(5) * t407 - t134 * t310 + t206 * t417 - t314 * t397;
t361 = t164 * t92 + t188 * t78;
t359 = t310 * t34 - t314 * t33;
t358 = t310 * t40 + t314 * t39;
t355 = t192 * t85 - t459;
t53 = t121 * t314 - t310 * t95;
t55 = t136 * t314 - t310 * t89;
t59 = -t104 * t310 + t129 * t314;
t171 = t211 * t314 - t227 * t310;
t347 = t387 * t501;
t281 = -pkin(4) - t363;
t345 = t406 * t483;
t103 = pkin(4) * t439 - t108;
t11 = -t104 * t418 + t129 * t417 + t314 * t30 + t310 * t62;
t36 = t120 * t482 - t311 * t127 - t162 * t420 - t174 * t389;
t336 = t270 * t418 + t381;
t333 = t497 * pkin(11);
t332 = t342 * t308;
t331 = pkin(1) * (-t309 * t415 + t441);
t330 = t166 * t374 - t301 * t77;
t326 = -t310 * t374 - t394;
t325 = t349 - t390;
t189 = t206 * t314 - t407;
t91 = qJD(5) * t188 + t314 * t134 - t310 * t397;
t324 = t164 * t91 - t166 * t92 + t188 * t77 - t189 * t78;
t322 = t118 * t188 + t135 * t164 + t205 * t78 + t517 * t92;
t31 = -pkin(4) * t397 - t36;
t321 = -qJD(5) * t359 + t509;
t320 = -qJD(5) * t358 - t7 * t310 + t5;
t319 = t164 * t337 + t444 * t78;
t302 = -t410 - pkin(4);
t267 = -t410 + t281;
t177 = t270 * t362 + t226;
t149 = pkin(5) * t335 - t171;
t148 = -qJ(6) * t335 + t496;
t110 = pkin(5) * t166 + qJ(6) * t164;
t71 = pkin(11) * t76;
t63 = t188 * pkin(5) - t189 * qJ(6) + t103;
t52 = t429 * t517 - t460;
t51 = -pkin(5) * t205 - t59;
t50 = qJ(6) * t205 + t499;
t46 = t135 * t517 + t461;
t43 = t164 * t517 - t77;
t42 = -t55 - t507;
t41 = t56 + t505;
t38 = -t53 - t507;
t37 = t54 + t505;
t17 = -t166 * t91 - t189 * t77;
t16 = -t166 * t336 - t443 * t77;
t15 = t92 * pkin(5) + t91 * qJ(6) - t189 * qJD(6) + t31;
t14 = t114 * t270 + t166 * t429 + t335 * t77 - t336 * t517;
t13 = t118 * t189 + t135 * t166 - t205 * t77 - t517 * t91;
t9 = -pkin(5) * t135 - t12;
t8 = qJ(6) * t135 + qJD(6) * t205 + t11;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t347, t427 * t510, t375 * t396, -0.2e1 * t347, -t375 * t397, 0, -t249 * t309 - t259 * t376 + t313 * t365, -t248 * t309 - t258 * t376 + t315 * t365 (t248 * t315 + t249 * t313 + (-t254 * t315 - t257 * t313) * qJD(2) + (t258 * t315 + t259 * t313 + (-t265 * t315 - t313 * t428) * qJD(2)) * qJD(1)) * t308, t248 * t428 - t249 * t265 - t254 * t259 + t257 * t258, -t210 * t262 + t216 * t240, t210 * t261 - t240 * t215 + t216 * t239 - t262 * t406, -t216 * t287 + (t210 * t315 + (qJD(1) * t262 + t240) * t422) * t308, -t239 * t215 + t261 * t406, t215 * t287 + (t406 * t315 + (-qJD(1) * t261 + t239) * t422) * t308 (-t287 * t308 - t392) * t422, -t141 * t287 - t259 * t239 + t250 * t406 + t249 * t261 + t221 * t215 + (-t132 * t315 + (qJD(1) * t198 + t181) * t422) * t308, t140 * t287 - t210 * t250 + t216 * t221 + t240 * t259 + t249 * t262 + (t131 * t315 + (-qJD(1) * t199 - t182) * t422) * t308, -t131 * t261 - t132 * t262 + t140 * t239 - t141 * t240 - t181 * t216 - t182 * t215 + t198 * t210 - t199 * t406, t131 * t199 + t132 * t198 + t140 * t182 + t141 * t181 + t221 * t259 + t249 * t250, -t134 * t340 - t206 * t318, -t206 * t118 + t134 * t192 - t135 * t340 + t205 * t318, -t134 * t414 + (t318 * t315 + t340 * t422 + (t134 * t315 + t206 * t422) * qJD(1)) * t308, t135 * t192 + t461, -t135 * t414 + (-t192 * t422 + t118 * t315 + (t135 * t315 - t205 * t422) * qJD(1)) * t308 (-t332 - t392) * t422, t36 * t414 + t197 * t192 + t209 * t118 + t180 * t205 + t196 * t135 + (t89 * t422 - t24 * t315 + (t108 * t422 - t315 * t36) * qJD(1)) * t308, -t35 * t414 + t197 * t340 - t209 * t318 + t180 * t206 - t196 * t134 + (-t90 * t422 - t377 * t315 + (-t109 * t422 + t315 * t35) * qJD(1)) * t308, t108 * t318 - t109 * t118 + t89 * t134 - t90 * t135 - t35 * t192 + t205 * t377 - t24 * t206 - t340 * t36, t108 * t24 - t109 * t377 + t180 * t209 + t196 * t197 + t35 * t90 + t36 * t89, t17, t324, t13, t361, -t322, t46, t103 * t78 + t118 * t59 + t12 * t517 + t135 * t39 + t164 * t31 + t188 * t22 + t205 * t7 + t85 * t92, -t103 * t77 - t11 * t517 - t118 * t499 - t135 * t40 + t166 * t31 + t189 * t22 - t205 * t6 - t85 * t91, -t11 * t164 - t12 * t166 - t188 * t6 - t189 * t7 + t39 * t91 - t40 * t92 - t499 * t78 + t59 * t77, t103 * t22 + t11 * t40 + t12 * t39 + t31 * t85 + t499 * t6 + t59 * t7, t17, t13, -t324, t46, t322, t361, t10 * t188 - t118 * t51 - t135 * t33 + t15 * t164 - t205 * t4 + t45 * t92 - t517 * t9 + t63 * t78, -t164 * t8 + t166 * t9 - t188 * t2 + t189 * t4 - t33 * t91 - t34 * t92 - t50 * t78 - t51 * t77, -t10 * t189 + t118 * t50 + t135 * t34 - t15 * t166 + t2 * t205 + t45 * t91 + t517 * t8 + t63 * t77, t10 * t63 + t15 * t45 + t2 * t50 + t33 * t9 + t34 * t8 + t4 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373, t427 * t441, -t308 * t316 * t438, t373, t376 * t399 - t290, 0, -pkin(8) * t368 + t257 * t376 + t313 * t331, pkin(8) * t290 + t254 * t376 + t315 * t331, 0, 0, -t210 * t312 - t240 * t325, -t210 * t483 - t325 * t239 + (-t406 + t445) * t312, -t287 * t390 + (t287 * t401 + (qJD(2) * t312 - t240) * t313) * t426, t239 * t442 - t345, t287 * t421 + (-t315 * t442 + (t388 - t239) * t313) * t426, t287 * t399, -pkin(2) * t406 - t249 * t483 + t200 * t287 + t257 * t239 + (t221 * t312 + t287 * t411) * qJD(3) + (-t181 * t313 + (-pkin(9) * t422 - t221 * t315) * t312) * t426, pkin(2) * t210 - t201 * t287 - t257 * t240 + t249 * t312 + (-pkin(9) * t442 + t400) * qJD(3) + (-t315 * t400 + (-pkin(9) * t388 + t182) * t313) * t426, t405 + t200 * t240 - t201 * t239 + t325 * t181 + (t240 * t390 - t345) * pkin(9) + ((-t210 - t527) * pkin(9) + t498) * t312, -t249 * pkin(2) - t181 * t200 - t182 * t201 - t221 * t257 + (t405 - t132 * t312 + (-t181 * t483 - t182 * t312) * qJD(3)) * pkin(9), -t270 * t318 + t340 * t533, -t270 * t118 - t192 * t533 - t318 * t335 - t340 * t429 (-t533 * t315 + (qJD(2) * t270 - t340) * t313) * t426 + t533 * t414, t192 * t429 - t460 (t429 * t315 + (qJD(2) * t335 + t192) * t313) * t426 - t429 * t414, t332 * t424, t303 * t118 - t180 * t335 + t429 * t196 + t366 * t192 + (-t432 * t315 + (-qJD(2) * t226 - t89) * t313) * t426 + t432 * t414, -t303 * t318 + t180 * t270 + t533 * t196 + t366 * t340 + (-t433 * t315 + (-qJD(2) * t227 + t90) * t313) * t426 + t433 * t414, -t227 * t118 + t192 * t433 - t226 * t318 - t24 * t270 - t335 * t377 - t340 * t432 - t429 * t90 - t533 * t89, t180 * t303 + t196 * t366 - t226 * t24 - t227 * t377 + t432 * t89 - t433 * t90, t16, t512, t14, t319, -t485, t52, t118 * t171 + t164 * t434 + t22 * t444 + t226 * t78 - t335 * t7 + t337 * t85 + t39 * t429 - t476 * t517, -t118 * t496 + t166 * t434 + t22 * t443 - t226 * t77 + t335 * t6 - t336 * t85 - t40 * t429 + t475 * t517, t171 * t77 - t496 * t78 + t202 * t40 + t203 * t39 - t358 * t213 + t476 * t166 + t475 * t164 + (-t310 * t6 - t314 * t7 + (t310 * t39 - t314 * t40) * qJD(5)) * t270, t171 * t7 + t22 * t226 - t39 * t476 - t40 * t475 + t434 * t85 + t496 * t6, t16, t14, -t512, t52, t485, t319, t10 * t444 - t118 * t149 - t164 * t474 + t177 * t78 - t33 * t429 + t335 * t4 + t337 * t45 + t477 * t517, -t148 * t78 - t149 * t77 + t202 * t34 - t203 * t33 - t359 * t213 - t477 * t166 + t478 * t164 + (-t2 * t310 + t314 * t4 + (-t310 * t33 - t314 * t34) * qJD(5)) * t270, -t10 * t443 + t118 * t148 + t166 * t474 + t177 * t77 - t2 * t335 + t336 * t45 + t34 * t429 - t478 * t517, t10 * t177 + t148 * t2 + t149 * t4 - t33 * t477 - t34 * t478 - t45 * t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, -t239 ^ 2 + t240 ^ 2, t239 * t287 - t210, t446, -t406 - t445, t290, -t221 * t240 - t498, -t181 * t287 - t221 * t239 - t131, 0, 0, t447, t516, t513, -t447, t488, t290, -t94 * t342 + (-t240 * t192 + t290 * t482 + t342 * t420) * pkin(3) + t495, -t95 * t342 + (-t240 * t340 - t290 * t311 + t342 * t389) * pkin(3) + t515, t90 * t340 + t95 * t192 - t89 * t192 - t94 * t340 + (-t311 * t118 + t482 * t323 + (t311 * t340 + (-t192 - t500) * t482) * qJD(4)) * pkin(3), t89 * t94 - t90 * t95 + (t482 * t24 - t196 * t240 - t377 * t311 + (-t311 * t89 + t482 * t90) * qJD(4)) * pkin(3), t523, -t528, t522, t525, -t328, -t504, t302 * t78 + t355 * t310 + t367 * t164 + (-t53 + t326) * t517 + t492, -t302 * t77 + t355 * t314 + t367 * t166 + (-t356 + t54 + t395) * t517 + t491, t54 * t164 + t53 * t166 + t5 + (-t521 + (t166 * t301 - t39) * qJD(5)) * t314 + (-t192 * t40 - t7 + (-t40 + t458) * qJD(5) + t330) * t310 + t467, t22 * t302 - t39 * t53 - t40 * t54 - t85 * t94 + (t311 * t85 - t39 * t403 + t40 * t402) * t473 + t320 * t301, t523, t522, t528, -t504, t328, t524, t267 * t78 + (t192 * t45 - t459) * t310 + t464 * t164 + (t38 + t326) * t517 + t494, t37 * t164 + (-t38 + t394) * t166 + (-t192 * t34 + (-t34 + t458) * qJD(5) + t330) * t310 + t467 + t526, t267 * t77 + (-t37 - t395) * t517 - t464 * t166 + (t374 * t517 + t459 - t531) * t314 + t493, t10 * t267 - t33 * t38 - t34 * t37 + t464 * t45 + (t33 * t403 + t34 * t402) * t473 + t321 * t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, t516, t513, -t447, t488, t290, -t342 * t90 + t495, -t342 * t89 + t515, 0, 0, t523, -t528, t522, t525, -t328, -t504, -pkin(4) * t78 - t164 * t90 - t517 * t55 + t520 * t85 + t333 + t492, pkin(4) * t77 + pkin(11) * t431 - t166 * t90 + t517 * t56 + t519 * t85 + t491, t164 * t56 + t166 * t55 + t5 - t71 + (-t521 + (pkin(11) * t166 - t39) * qJD(5)) * t314 + (t364 - t344) * t310, -pkin(4) * t22 + pkin(11) * t320 - t39 * t55 - t40 * t56 - t85 * t90, t523, t522, t528, -t504, t328, t524, t164 * t463 + t281 * t78 + t42 * t517 + t45 * t520 + t333 + t494, t164 * t41 - t71 + (pkin(11) * t417 - t42) * t166 + (t364 - t470) * t310 + t526, t281 * t77 + (-pkin(11) * t418 - t41) * t517 - t463 * t166 + (pkin(11) * t118 - t531) * t314 + t493, pkin(11) * t321 + t10 * t281 - t33 * t42 - t34 * t41 + t45 * t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456, -t391, t43, -t456, -t506, t118, -t166 * t85 + t344, t164 * t85 + t39 * t517 - t6, 0, 0, t456, t43, t391, t118, t506, -t456, -t110 * t164 + t344 - t471 + 0.2e1 * t480, pkin(5) * t77 - qJ(6) * t78 + (t34 - t40) * t166 + (t33 - t436) * t164, 0.2e1 * t462 + t110 * t166 - t164 * t45 + (0.2e1 * qJD(6) - t39) * t517 + t6, -pkin(5) * t4 + qJ(6) * t2 - t110 * t45 - t33 * t40 + t34 * t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118 + t456, t43, -t517 ^ 2 - t484, t4 - t470 + t471;];
tauc_reg  = t1;
