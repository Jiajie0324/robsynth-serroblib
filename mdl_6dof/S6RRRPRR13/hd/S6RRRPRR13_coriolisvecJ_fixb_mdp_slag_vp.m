% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPRR13_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRR13_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:05:50
% EndTime: 2019-03-09 20:06:35
% DurationCPUTime: 26.74s
% Computational Cost: add. (26555->788), mult. (79893->1093), div. (0->0), fcn. (67526->14), ass. (0->312)
t843 = cos(qJ(5));
t840 = sin(qJ(3));
t835 = sin(pkin(6));
t837 = cos(pkin(7));
t841 = sin(qJ(2));
t844 = cos(qJ(3));
t969 = t841 * t844;
t845 = cos(qJ(2));
t970 = t840 * t845;
t866 = t837 * t970 + t969;
t857 = t866 * t835;
t834 = sin(pkin(7));
t989 = cos(pkin(6));
t919 = t989 * qJD(1);
t872 = t919 + qJD(2);
t861 = t834 * t872;
t725 = qJD(1) * t857 + t840 * t861;
t833 = sin(pkin(13));
t713 = t833 * t725;
t949 = qJD(1) * t835;
t929 = t845 * t949;
t779 = t834 * t929 - t837 * t872 - qJD(3);
t836 = cos(pkin(13));
t912 = t779 * t836 + t713;
t668 = t843 * t912;
t677 = t725 * t836 - t779 * t833;
t839 = sin(qJ(5));
t618 = t677 * t839 + t668;
t616 = qJD(6) + t618;
t1016 = t616 ^ 2;
t1009 = t843 * t677 - t839 * t912;
t901 = t837 * t929;
t806 = t844 * t901;
t856 = qJD(3) * t861;
t938 = qJD(1) * qJD(2);
t922 = t835 * t938;
t899 = t845 * t922;
t930 = t841 * t949;
t904 = t840 * t930;
t946 = qJD(2) * t837;
t679 = qJD(3) * t806 + (-qJD(3) - t946) * t904 + (t856 + t899) * t844;
t900 = t841 * t922;
t874 = t834 * t900;
t653 = t833 * t679 - t836 * t874;
t654 = t679 * t836 + t833 * t874;
t913 = t843 * t653 + t839 * t654;
t559 = qJD(5) * t1009 + t913;
t842 = cos(qJ(6));
t557 = t842 * t559;
t838 = sin(qJ(6));
t1018 = -t1016 * t838 + t557;
t931 = pkin(1) * t989;
t906 = t845 * t931;
t819 = qJD(1) * t906;
t898 = t835 * (-pkin(10) * t837 - pkin(9));
t869 = t841 * t898;
t759 = qJD(1) * t869 + t819;
t907 = t841 * t931;
t849 = t845 * t898 - t907;
t760 = t849 * qJD(1);
t991 = pkin(10) * t834;
t860 = (pkin(2) * t841 - t845 * t991) * t835;
t786 = qJD(1) * t860;
t944 = qJD(3) * t844;
t924 = t837 * t944;
t973 = t837 * t840;
t977 = t834 * t840;
t1017 = pkin(2) * t924 - t844 * t759 - t760 * t973 - t786 * t977;
t723 = -t844 * t861 - t806 + t904;
t720 = qJD(5) + t723;
t1015 = t618 * t720;
t689 = -t760 * t834 + t837 * t786;
t867 = t837 * t969 + t970;
t777 = t867 * t949;
t968 = t844 * t845;
t971 = t840 * t841;
t865 = -t837 * t971 + t968;
t778 = t865 * t949;
t1014 = pkin(3) * t777 - qJ(4) * t778 + t689 - (-qJD(4) * t840 + (pkin(3) * t840 - qJ(4) * t844) * qJD(3)) * t834;
t905 = t834 * t930;
t945 = qJD(3) * t840;
t927 = t834 * t945;
t1013 = pkin(10) * t927 + qJ(4) * t905 - qJD(4) * t837 - t1017;
t710 = t778 * t833 - t836 * t905;
t926 = t834 * t944;
t1012 = t833 * t926 - t710;
t957 = t1013 * t833 - t1014 * t836;
t956 = t1013 * t836 + t1014 * t833;
t711 = t778 * t836 + t833 * t905;
t974 = t836 * t844;
t1006 = pkin(4) * t777 - pkin(11) * t711 - (pkin(4) * t840 - pkin(11) * t974) * t834 * qJD(3) - t957;
t1011 = pkin(11) * t1012 + t956;
t925 = t837 * t945;
t972 = t837 * t844;
t1010 = pkin(2) * t925 + pkin(10) * t926 - t840 * t759 + t760 * t972;
t961 = -(-pkin(3) * t930 - t786 * t844) * t834 + t1010;
t794 = t833 * t977 - t836 * t837;
t796 = t833 * t837 + t836 * t977;
t716 = t843 * t794 + t796 * t839;
t804 = t833 * t839 - t843 * t836;
t960 = -qJD(5) * t716 + t710 * t839 - t711 * t843 - t804 * t926;
t717 = -t794 * t839 + t796 * t843;
t805 = t833 * t843 + t836 * t839;
t959 = qJD(5) * t717 - t843 * t710 - t711 * t839 + t805 * t926;
t1004 = t777 - t927;
t953 = t720 * t804;
t952 = t720 * t805;
t830 = t835 ^ 2;
t1003 = -0.2e1 * t830 * t938;
t1002 = MDP(5) * (t841 ^ 2 - t845 ^ 2);
t1001 = MDP(6) * t845;
t850 = pkin(2) * t989 + t869;
t756 = t906 + t850;
t785 = (-pkin(2) * t845 - t841 * t991 - pkin(1)) * t835;
t685 = -t756 * t834 + t837 * t785;
t921 = t989 * t834;
t996 = t837 * t968 - t971;
t749 = -t835 * t996 - t844 * t921;
t750 = t840 * t921 + t857;
t629 = pkin(3) * t749 - qJ(4) * t750 + t685;
t975 = t835 * t845;
t795 = t834 * t975 - t837 * t989;
t855 = pkin(9) * t975 + t907;
t744 = (t837 * t975 + t921) * pkin(10) + t855;
t933 = t844 * t744 + t756 * t973 + t785 * t977;
t636 = -qJ(4) * t795 + t933;
t579 = t836 * t629 - t636 * t833;
t694 = t750 * t836 - t795 * t833;
t553 = pkin(4) * t749 - pkin(11) * t694 + t579;
t580 = t833 * t629 + t836 * t636;
t693 = t750 * t833 + t795 * t836;
t561 = -pkin(11) * t693 + t580;
t1000 = t839 * t553 + t843 * t561;
t976 = t834 * t844;
t951 = pkin(2) * t973 + pkin(10) * t976;
t789 = qJ(4) * t837 + t951;
t790 = (-pkin(3) * t844 - qJ(4) * t840 - pkin(2)) * t834;
t697 = -t789 * t833 + t836 * t790;
t666 = -pkin(4) * t976 - pkin(11) * t796 + t697;
t698 = t836 * t789 + t833 * t790;
t682 = -pkin(11) * t794 + t698;
t958 = t839 * t666 + t843 * t682;
t714 = t855 * qJD(1) + (t861 + t901) * pkin(10);
t721 = qJD(2) * pkin(2) + qJD(1) * t850 + t819;
t771 = qJD(1) * t785;
t633 = -t840 * t714 + t844 * (t721 * t837 + t771 * t834);
t659 = pkin(3) * t725 + qJ(4) * t723;
t597 = -t633 * t833 + t836 * t659;
t570 = pkin(11) * t723 * t836 + pkin(4) * t725 + t597;
t598 = t836 * t633 + t833 * t659;
t982 = t723 * t833;
t581 = pkin(11) * t982 + t598;
t990 = pkin(11) + qJ(4);
t813 = t990 * t833;
t814 = t990 * t836;
t875 = -t813 * t843 - t814 * t839;
t999 = qJD(4) * t804 - qJD(5) * t875 + t839 * t570 + t843 * t581;
t766 = -t813 * t839 + t814 * t843;
t998 = -qJD(4) * t805 - qJD(5) * t766 - t570 * t843 + t581 * t839;
t954 = pkin(4) * t1012 + t961;
t942 = qJD(5) * t843;
t943 = qJD(5) * t839;
t997 = t1006 * t839 + t1011 * t843 - t666 * t942 + t682 * t943;
t667 = -t721 * t834 + t837 * t771;
t611 = pkin(3) * t723 - qJ(4) * t725 + t667;
t634 = t844 * t714 + t721 * t973 + t771 * t977;
t615 = -qJ(4) * t779 + t634;
t564 = t836 * t611 - t615 * t833;
t547 = pkin(4) * t723 - pkin(11) * t677 + t564;
t565 = t833 * t611 + t836 * t615;
t549 = -pkin(11) * t912 + t565;
t521 = t547 * t839 + t549 * t843;
t893 = qJD(2) * t919;
t870 = pkin(1) * t893;
t815 = t845 * t870;
t864 = qJD(2) * t869;
t741 = qJD(1) * t864 + t815;
t763 = t849 * qJD(2);
t742 = qJD(1) * t763;
t787 = qJD(2) * t860;
t780 = qJD(1) * t787;
t854 = t714 * t945 - t721 * t924 - t844 * t741 - t742 * t973 - t771 * t926 - t780 * t977;
t576 = qJ(4) * t874 - qJD(4) * t779 - t854;
t992 = qJD(2) * t867 + qJD(3) * t866;
t847 = t992 * t835;
t852 = t840 * t856;
t680 = qJD(1) * t847 + t852;
t683 = -t742 * t834 + t837 * t780;
t585 = pkin(3) * t680 - qJ(4) * t679 - qJD(4) * t725 + t683;
t539 = -t576 * t833 + t836 * t585;
t526 = pkin(4) * t680 - pkin(11) * t654 + t539;
t540 = t836 * t576 + t833 * t585;
t528 = -pkin(11) * t653 + t540;
t510 = -qJD(5) * t521 + t843 * t526 - t528 * t839;
t508 = -pkin(5) * t680 - t510;
t995 = t616 * (pkin(5) * t1009 + pkin(12) * t616) + t508;
t994 = -t840 * t744 + t844 * (t756 * t837 + t785 * t834);
t820 = qJD(2) * t906;
t762 = t820 + t864;
t853 = -t744 * t945 + t756 * t924 + t844 * t762 + t763 * t973 + t785 * t926 + t787 * t977;
t947 = qJD(2) * t835;
t928 = t841 * t947;
t903 = t834 * t928;
t589 = qJ(4) * t903 - qJD(4) * t795 + t853;
t897 = qJD(3) * t921;
t687 = t840 * t897 + t847;
t688 = t844 * t897 + (t865 * qJD(2) + qJD(3) * t996) * t835;
t690 = -t763 * t834 + t837 * t787;
t596 = pkin(3) * t687 - qJ(4) * t688 - qJD(4) * t750 + t690;
t544 = -t589 * t833 + t836 * t596;
t663 = t688 * t836 + t833 * t903;
t536 = pkin(4) * t687 - pkin(11) * t663 + t544;
t545 = t836 * t589 + t833 * t596;
t662 = t688 * t833 - t836 * t903;
t538 = -pkin(11) * t662 + t545;
t993 = -qJD(5) * t1000 + t536 * t843 - t538 * t839;
t846 = qJD(1) ^ 2;
t988 = qJ(4) * t680;
t558 = -qJD(5) * t668 - t839 * t653 + t843 * t654 - t677 * t943;
t940 = qJD(6) * t842;
t934 = t842 * t558 + t838 * t680 + t720 * t940;
t941 = qJD(6) * t838;
t529 = -t1009 * t941 + t934;
t987 = t529 * t838;
t986 = t559 * t838;
t983 = t1009 * t838;
t599 = -t842 * t720 + t983;
t985 = t599 * t616;
t601 = t1009 * t842 + t720 * t838;
t984 = t601 * t616;
t980 = t805 * t838;
t979 = t805 * t842;
t978 = t830 * t846;
t966 = pkin(5) * t1004 + qJD(5) * t958 + t1006 * t843 - t1011 * t839;
t695 = t717 * t838 + t842 * t976;
t963 = -qJD(6) * t695 - t1004 * t838 + t842 * t960;
t936 = t838 * t976;
t962 = -qJD(6) * t936 + t1004 * t842 + t717 * t940 + t838 * t960;
t955 = pkin(5) * t725 - t998;
t948 = qJD(2) * t834 ^ 2;
t614 = t779 * pkin(3) + qJD(4) - t633;
t939 = -qJD(4) + t614;
t937 = pkin(1) * t978;
t828 = -pkin(4) * t836 - pkin(3);
t509 = t839 * t526 + t843 * t528 + t547 * t942 - t549 * t943;
t507 = pkin(12) * t680 + t509;
t868 = t714 * t944 + t721 * t925 + t840 * t741 - t742 * t972 + t771 * t927 - t780 * t976;
t584 = -pkin(3) * t874 + t868;
t555 = pkin(4) * t653 + t584;
t516 = pkin(5) * t559 - pkin(12) * t558 + t555;
t918 = -t507 * t838 + t842 * t516;
t916 = t558 * t838 - t842 * t680;
t915 = -t842 * t725 + t838 * t953;
t914 = t725 * t838 + t842 * t953;
t910 = t616 * t842;
t909 = t830 * t841 * t845 * MDP(4);
t604 = -pkin(4) * t982 + t634;
t908 = -t744 * t944 - t756 * t925 - t840 * t762 - t785 * t927;
t895 = pkin(1) * t1003;
t891 = -t778 + t926;
t822 = pkin(10) * t977;
t792 = t822 + (-pkin(2) * t844 - pkin(3)) * t837;
t722 = pkin(4) * t794 + t792;
t635 = pkin(5) * t716 - pkin(12) * t717 + t722;
t890 = pkin(12) * t1004 - qJD(6) * t635 + t997;
t735 = pkin(5) * t804 - pkin(12) * t805 + t828;
t889 = pkin(12) * t725 - qJD(6) * t735 + t999;
t888 = -pkin(5) * t952 - pkin(12) * t953 + qJD(6) * t766 + t604;
t610 = -pkin(12) * t976 + t958;
t887 = -pkin(5) * t959 + pkin(12) * t960 + qJD(6) * t610 - t954;
t886 = t507 * t842 + t516 * t838;
t519 = pkin(12) * t720 + t521;
t592 = pkin(4) * t912 + t614;
t541 = t618 * pkin(5) - pkin(12) * t1009 + t592;
t514 = t519 * t842 + t541 * t838;
t885 = t519 * t838 - t541 * t842;
t523 = pkin(12) * t749 + t1000;
t637 = pkin(3) * t795 - t994;
t602 = pkin(4) * t693 + t637;
t638 = t843 * t693 + t694 * t839;
t639 = -t693 * t839 + t694 * t843;
t548 = pkin(5) * t638 - pkin(12) * t639 + t602;
t884 = t523 * t842 + t548 * t838;
t883 = -t523 * t838 + t548 * t842;
t520 = t547 * t843 - t549 * t839;
t881 = t553 * t843 - t561 * t839;
t606 = t639 * t842 + t749 * t838;
t605 = t639 * t838 - t749 * t842;
t878 = t666 * t843 - t682 * t839;
t873 = MDP(15) * t903;
t863 = t839 * t536 + t843 * t538 + t553 * t942 - t561 * t943;
t859 = t805 * t940 - t915;
t858 = -t805 * t941 - t914;
t518 = -pkin(5) * t720 - t520;
t851 = -pkin(12) * t559 + (t518 + t520) * t616;
t848 = t872 * t855;
t595 = -t763 * t972 + (-pkin(3) * t928 - t787 * t844) * t834 - t908;
t571 = pkin(4) * t662 + t595;
t696 = t717 * t842 - t936;
t609 = pkin(5) * t976 - t878;
t573 = qJD(5) * t639 + t843 * t662 + t663 * t839;
t572 = -qJD(5) * t638 - t662 * t839 + t663 * t843;
t543 = qJD(6) * t606 + t572 * t838 - t687 * t842;
t542 = -qJD(6) * t605 + t572 * t842 + t687 * t838;
t530 = qJD(6) * t601 + t916;
t522 = -pkin(5) * t749 - t881;
t517 = pkin(5) * t573 - pkin(12) * t572 + t571;
t512 = -pkin(5) * t687 - t993;
t511 = pkin(12) * t687 + t863;
t506 = -qJD(6) * t514 + t918;
t505 = -qJD(6) * t885 + t886;
t1 = [(t1009 * t687 + t558 * t749 + t572 * t720 + t639 * t680) * MDP(24) + (-t1009 * t573 - t558 * t638 - t559 * t639 - t572 * t618) * MDP(23) + (t1009 * t572 + t558 * t639) * MDP(22) + (-t1000 * t680 + t1009 * t571 - t509 * t749 - t521 * t687 + t555 * t639 + t602 * t558 + t592 * t572 - t720 * t863) * MDP(28) + (t510 * t749 + t520 * t687 + t555 * t638 + t602 * t559 + t571 * t618 + t592 * t573 + t881 * t680 + t720 * t993) * MDP(27) + (-qJD(2) * t848 + t841 * t895 - t855 * t893) * MDP(9) + (-qJD(1) * t795 - t779) * t873 + (-t559 * t749 - t573 * t720 - t618 * t687 - t638 * t680) * MDP(25) + (t680 * t749 + t687 * t720) * MDP(26) + (-t540 * t749 - t545 * t723 - t565 * t687 - t580 * t680 + t584 * t694 + t595 * t677 + t614 * t663 + t637 * t654) * MDP(19) + (t679 * t750 + t688 * t725) * MDP(11) + (-t679 * t749 - t680 * t750 - t687 * t725 - t688 * t723) * MDP(12) + (t539 * t579 + t540 * t580 + t544 * t564 + t545 * t565 + t584 * t637 + t595 * t614) * MDP(21) + (-t530 * t638 - t543 * t616 - t559 * t605 - t573 * t599) * MDP(32) + (t529 * t638 + t542 * t616 + t559 * t606 + t573 * t601) * MDP(31) + (t559 * t638 + t573 * t616) * MDP(33) + (-t529 * t605 - t530 * t606 - t542 * t599 - t543 * t601) * MDP(30) + (t529 * t606 + t542 * t601) * MDP(29) + (-(qJD(6) * t883 + t511 * t842 + t517 * t838) * t616 - t884 * t559 - t505 * t638 - t514 * t573 + t512 * t601 + t522 * t529 + t508 * t606 + t518 * t542) * MDP(35) + (-t679 * t795 - t688 * t779 + (qJD(1) * t750 + t725) * t903) * MDP(13) + (t680 * t795 + t687 * t779 + (-qJD(1) * t749 - t723) * t903) * MDP(14) + (-t539 * t694 - t540 * t693 - t544 * t677 - t545 * t912 - t564 * t663 - t565 * t662 - t579 * t654 - t580 * t653) * MDP(20) + ((-qJD(6) * t884 - t511 * t838 + t517 * t842) * t616 + t883 * t559 + t506 * t638 - t885 * t573 + t512 * t599 + t522 * t530 + t508 * t605 + t518 * t543) * MDP(34) + (t853 * t779 - t854 * t795 + t690 * t725 + t685 * t679 + t683 * t750 + t667 * t688 + (-qJD(1) * t933 - t634) * t903) * MDP(17) + (-((t763 * t837 + t787 * t834) * t844 + t908) * t779 + t868 * t795 + t690 * t723 + t685 * t680 + t683 * t749 + t667 * t687 + (qJD(1) * t994 + t633) * t903) * MDP(16) + t1002 * t1003 + (t539 * t749 + t544 * t723 + t564 * t687 + t579 * t680 + t584 * t693 + t595 * t912 + t614 * t662 + t637 * t653) * MDP(18) + 0.2e1 * t909 * t938 + (-MDP(7) * t928 + t1001 * t947) * (0.2e1 * t919 + qJD(2)) + (t845 * t895 - (-pkin(9) * t928 + t820) * t872 - (-pkin(9) * t900 + t815) * t989) * MDP(10); (t1009 * t960 + t558 * t717) * MDP(22) + (-t1009 * t959 - t558 * t716 - t559 * t717 - t618 * t960) * MDP(23) + (-t1004 * t1009 - t558 * t976 + t680 * t717 + t720 * t960) * MDP(24) + (t1004 * t521 + t1009 * t954 + t509 * t976 + t555 * t717 + t722 * t558 + t960 * t592 - t958 * t680 + t720 * t997) * MDP(28) + (-t1004 * t720 - t680 * t976) * MDP(26) + (t1004 * t618 + t559 * t976 - t680 * t716 - t720 * t959) * MDP(25) + (-t680 * t837 - t1004 * t779 + (t723 * t834 + t844 * t948) * t930) * MDP(14) + (t878 * t680 - t510 * t976 + t722 * t559 + t555 * t716 + ((-qJD(5) * t682 - t1006) * t843 + (-qJD(5) * t666 + t1011) * t839) * t720 + t954 * t618 + t959 * t592 - t1004 * t520) * MDP(27) + (t723 * t778 + t725 * t777 + (t679 * t844 - t680 * t840 + (-t723 * t844 - t725 * t840) * qJD(3)) * t834) * MDP(12) + (-pkin(9) * t899 + qJD(1) * t848 + (-t870 + t937) * t841) * MDP(9) + (t854 * t837 - t667 * t778 - t689 * t725 + t1017 * t779 + (-pkin(2) * t679 + t683 * t840 + (-pkin(10) * t779 * t840 + t667 * t844) * qJD(3) + (-qJD(2) * t951 + t634) * t930) * t834) * MDP(17) + (-t868 * t837 - t667 * t777 - t689 * t723 + t1010 * t779 + (t667 * t945 - pkin(2) * t680 + (t779 * t786 - t683) * t844 + ((pkin(2) * t972 - t822) * qJD(2) - t633) * t930) * t834) * MDP(16) + (t679 * t977 + t725 * t891) * MDP(11) + (t565 * t777 + t584 * t796 - t614 * t711 + t654 * t792 - t680 * t698 + t956 * t723 + t961 * t677 + (t540 * t844 + (-t565 * t840 + t614 * t974) * qJD(3)) * t834) * MDP(19) + (t529 * t716 + t559 * t696 + t601 * t959 + t616 * t963) * MDP(31) + (t529 * t696 + t601 * t963) * MDP(29) + (-t529 * t695 - t530 * t696 - t599 * t963 - t601 * t962) * MDP(30) + (-(t610 * t842 + t635 * t838) * t559 - t505 * t716 + t609 * t529 + t508 * t696 + (t838 * t887 + t842 * t890) * t616 + t966 * t601 + t963 * t518 - t959 * t514) * MDP(35) + (t559 * t716 + t616 * t959) * MDP(33) + (t539 * t697 + t540 * t698 + t564 * t957 - t565 * t956 + t584 * t792 + t614 * t961) * MDP(21) + (-t530 * t716 - t559 * t695 - t599 * t959 - t616 * t962) * MDP(32) + ((MDP(7) * t841 - t1001) * t835 * t989 - t909) * t846 + (t679 * t837 - t891 * t779 + (-t725 * t834 + t840 * t948) * t930) * MDP(13) + (t779 + t946) * MDP(15) * t905 + ((-t610 * t838 + t635 * t842) * t559 + t506 * t716 + t609 * t530 + t508 * t695 + (t838 * t890 - t842 * t887) * t616 + t966 * t599 + t962 * t518 - t959 * t885) * MDP(34) + t978 * t1002 + (-t815 + t845 * t937 + (-pkin(9) * t930 + t819) * t919 + t819 * qJD(2)) * MDP(10) + (-t698 * t653 - t540 * t794 - t697 * t654 - t539 * t796 + t565 * t710 + t564 * t711 - t957 * t677 + (-t564 * t836 - t565 * t833) * t926 + t956 * t912) * MDP(20) + (t697 * t680 + t792 * t653 + t584 * t794 - t564 * t777 - t614 * t710 + t957 * t723 + (-t539 * t844 + (t614 * t833 * t844 + t564 * t840) * qJD(3)) * t834 + t961 * t912) * MDP(18); (-pkin(3) * t584 - t564 * t597 - t565 * t598 - t614 * t634 + (-t564 * t833 + t565 * t836) * qJD(4) + (-t539 * t833 + t540 * t836) * qJ(4)) * MDP(21) + qJD(1) * t873 - t723 ^ 2 * MDP(12) + (t529 * t979 + t601 * t858) * MDP(29) + (-(t735 * t838 + t766 * t842) * t559 - t505 * t804 - t875 * t529 + t508 * t979 + (t838 * t888 + t842 * t889) * t616 + t955 * t601 - t952 * t514 + t858 * t518) * MDP(35) + (-t530 * t804 - t559 * t980 - t599 * t952 - t616 * t859) * MDP(32) + ((t735 * t842 - t766 * t838) * t559 + t506 * t804 - t875 * t530 + t508 * t980 + (t838 * t889 - t842 * t888) * t616 + t955 * t599 - t952 * t885 + t859 * t518) * MDP(34) + (t529 * t804 + t557 * t805 + t601 * t952 + t616 * t858) * MDP(31) + (-t1009 * t604 + t555 * t805 + t828 * t558 - t953 * t592 - t766 * t680 + t720 * t999) * MDP(28) + (-t634 * t779 - t868) * MDP(16) + (-t633 * t779 + t667 * t723 + t854) * MDP(17) + (-t680 * t804 - t720 * t952) * MDP(25) + (-t1009 * t953 + t558 * t805) * MDP(22) + (t680 * t805 - t720 * t953) * MDP(24) + (-t1009 * t952 - t558 * t804 - t559 * t805 + t618 * t953) * MDP(23) + (-t949 * t992 - t852) * MDP(14) + (t559 * t804 + t616 * t952) * MDP(33) + (t555 * t804 + t828 * t559 + t952 * t592 - t604 * t618 + t680 * t875 + t720 * t998) * MDP(27) + (-t723 * t779 + t679) * MDP(13) + (t597 * t677 + t598 * t713 + (-qJ(4) * t653 - qJD(4) * t912 - t564 * t723 + t598 * t779 + t540) * t836 + (qJ(4) * t654 + qJD(4) * t677 - t565 * t723 - t539) * t833) * MDP(20) + (t915 * t601 + t914 * t599 + (-t987 - t530 * t842 + (t599 * t838 - t601 * t842) * qJD(6)) * t805) * MDP(30) + (-t833 * t988 - pkin(3) * t653 - t584 * t836 - t634 * t912 + (t833 * t939 - t597) * t723) * MDP(18) + (-t836 * t988 - pkin(3) * t654 + t584 * t833 - t634 * t677 + (t836 * t939 + t598) * t723) * MDP(19) + (MDP(11) * t723 + MDP(12) * t725 - MDP(14) * t779 - MDP(16) * t667 - MDP(18) * t564 + MDP(19) * t565 - MDP(24) * t1009 + MDP(25) * t618 - MDP(26) * t720 - MDP(27) * t520 + MDP(28) * t521) * t725; (t677 * t723 + t653) * MDP(18) + (-t723 * t912 + t654) * MDP(19) + (-t677 ^ 2 - t912 ^ 2) * MDP(20) + (t564 * t677 + t565 * t912 + t584) * MDP(21) + (t1009 * t720 + t559) * MDP(27) + (t558 - t1015) * MDP(28) + (-t1009 * t599 + t1018) * MDP(34) + (-t1009 * t601 - t1016 * t842 - t986) * MDP(35); -t618 ^ 2 * MDP(23) + (t558 + t1015) * MDP(24) - t913 * MDP(25) + t680 * MDP(26) + (t521 * t720 + t510) * MDP(27) + (t520 * t720 + t592 * t618 - t509) * MDP(28) + (t601 * t910 + t987) * MDP(29) + ((t529 - t985) * t842 + (-t530 - t984) * t838) * MDP(30) + (t616 * t910 + t986) * MDP(31) + t1018 * MDP(32) + (-pkin(5) * t530 - t521 * t599 + t851 * t838 - t842 * t995) * MDP(34) + (-pkin(5) * t529 - t521 * t601 + t838 * t995 + t851 * t842) * MDP(35) + (t618 * MDP(22) + (-qJD(5) + t720) * MDP(25) - t592 * MDP(27) - t601 * MDP(31) + t599 * MDP(32) - t616 * MDP(33) + t885 * MDP(34) + t514 * MDP(35) + MDP(23) * t1009) * t1009; t601 * t599 * MDP(29) + (-t599 ^ 2 + t601 ^ 2) * MDP(30) + (t934 + t985) * MDP(31) + (-t916 + t984) * MDP(32) + t559 * MDP(33) + (t514 * t616 - t518 * t601 + t918) * MDP(34) + (t518 * t599 - t616 * t885 - t886) * MDP(35) + (-MDP(31) * t983 - MDP(32) * t601 - MDP(34) * t514 + MDP(35) * t885) * qJD(6);];
tauc  = t1;
