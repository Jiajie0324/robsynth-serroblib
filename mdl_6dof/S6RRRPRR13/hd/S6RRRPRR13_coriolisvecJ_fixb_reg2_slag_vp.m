% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR13_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR13_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:05:10
% EndTime: 2019-03-09 20:06:15
% DurationCPUTime: 30.28s
% Computational Cost: add. (56772->868), mult. (169713->1218), div. (0->0), fcn. (142478->14), ass. (0->361)
t396 = cos(qJ(2));
t540 = cos(pkin(6));
t492 = pkin(1) * t540;
t379 = t396 * t492;
t371 = qJD(1) * t379;
t395 = sin(qJ(2));
t390 = sin(pkin(6));
t539 = cos(pkin(7));
t433 = t390 * (-pkin(10) * t539 - pkin(9));
t420 = t395 * t433;
t297 = qJD(1) * t420 + t371;
t378 = t395 * t492;
t399 = t396 * t433 - t378;
t298 = t399 * qJD(1);
t389 = sin(pkin(7));
t560 = pkin(10) * t389;
t419 = (pkin(2) * t395 - t396 * t560) * t390;
t325 = qJD(1) * t419;
t563 = cos(qJ(3));
t451 = t539 * t563;
t436 = qJD(3) * t451;
t394 = sin(qJ(3));
t471 = t394 * t539;
t505 = qJD(3) * t394;
t478 = t389 * t505;
t527 = t389 * t394;
t519 = -pkin(2) * t436 + pkin(10) * t478 + t563 * t297 + t298 * t471 + t325 * t527;
t470 = t396 * t539;
t408 = t394 * t470 + t395 * t563;
t403 = t408 * t390;
t467 = t540 * qJD(1);
t441 = t467 + qJD(2);
t421 = t389 * t441;
t415 = t394 * t421;
t263 = qJD(1) * t403 + t415;
t388 = sin(pkin(13));
t252 = t388 * t263;
t526 = t390 * t396;
t494 = t389 * t526;
t317 = qJD(1) * t494 - t441 * t539 - qJD(3);
t391 = cos(pkin(13));
t463 = t317 * t391 + t252;
t562 = cos(qJ(5));
t206 = t562 * t463;
t216 = t263 * t391 - t317 * t388;
t393 = sin(qJ(5));
t147 = t216 * t393 + t206;
t561 = cos(qJ(6));
t475 = qJD(6) * t561;
t596 = t561 * t147 + t475;
t230 = -t298 * t389 + t539 * t325;
t407 = t394 * t396 + t395 * t451;
t509 = qJD(1) * t390;
t315 = t407 * t509;
t409 = -t395 * t471 + t396 * t563;
t316 = t409 * t509;
t602 = pkin(3) * t315 - qJ(4) * t316 + t230 - (-qJD(4) * t394 + (pkin(3) * t394 - qJ(4) * t563) * qJD(3)) * t389;
t480 = t395 * t509;
t459 = t389 * t480;
t601 = qJ(4) * t459 - qJD(4) * t539 + t519;
t392 = sin(qJ(6));
t458 = t394 * t480;
t437 = t396 * t451;
t422 = t390 * t437;
t570 = -qJD(1) * t422 - t563 * t421;
t261 = t458 + t570;
t414 = qJD(5) + t261;
t578 = t216 * t562 - t393 * t463;
t126 = t392 * t414 + t561 * t578;
t565 = qJD(2) * t407 + qJD(3) * t408;
t398 = t565 * t390;
t405 = qJD(3) * t415;
t219 = qJD(1) * t398 + t405;
t402 = t561 * t414;
t503 = qJD(6) * t392;
t500 = qJD(1) * qJD(2);
t473 = t396 * t500;
t454 = t390 * t473;
t466 = t539 * qJD(2);
t218 = (t466 + qJD(3)) * t458 - t563 * t454 + t570 * qJD(3);
t507 = qJD(2) * t390;
t479 = t395 * t507;
t455 = qJD(1) * t479;
t442 = t389 * t455;
t187 = -t218 * t388 - t391 * t442;
t188 = -t218 * t391 + t388 * t442;
t504 = qJD(5) * t393;
t75 = qJD(5) * t206 + t393 * t187 - t562 * t188 + t216 * t504;
t42 = -qJD(6) * t402 - t392 * t219 + t503 * t578 + t561 * t75;
t587 = qJD(6) + t147;
t537 = t587 * t392;
t600 = -t126 * t537 - t561 * t42;
t464 = t562 * t187 + t393 * t188;
t579 = t578 * qJD(5);
t76 = t464 + t579;
t599 = -t392 * t76 - t587 * t596;
t249 = t316 * t388 - t391 * t459;
t477 = qJD(3) * t563;
t456 = t389 * t477;
t597 = -t388 * t456 + t249;
t511 = pkin(9) * t526 + t378;
t335 = t511 * qJD(1);
t452 = t390 * t470;
t253 = t335 + (qJD(1) * t452 + t421) * pkin(10);
t401 = pkin(2) * t540 + t420;
t259 = qJD(2) * pkin(2) + qJD(1) * t401 + t371;
t368 = qJD(2) * t371;
t412 = qJD(2) * t420;
t280 = qJD(1) * t412 + t368;
t301 = t399 * qJD(2);
t281 = qJD(1) * t301;
t323 = (-pkin(2) * t396 - t395 * t560 - pkin(1)) * t390;
t309 = qJD(1) * t323;
t326 = qJD(2) * t419;
t318 = qJD(1) * t326;
t450 = qJD(3) * t471;
t489 = t389 * t563;
t429 = t253 * t477 + t259 * t450 + t394 * t280 - t281 * t451 + t309 * t478 - t318 * t489;
t106 = -pkin(3) * t442 + t429;
t72 = pkin(4) * t187 + t106;
t20 = pkin(5) * t76 + pkin(12) * t75 + t72;
t204 = -t259 * t389 + t539 * t309;
t138 = pkin(3) * t261 - qJ(4) * t263 + t204;
t163 = t563 * t253 + (t259 * t539 + t309 * t389) * t394;
t142 = -t317 * qJ(4) + t163;
t81 = t391 * t138 - t142 * t388;
t64 = pkin(4) * t261 - pkin(11) * t216 + t81;
t82 = t388 * t138 + t391 * t142;
t66 = -pkin(11) * t463 + t82;
t29 = t393 * t64 + t562 * t66;
t27 = pkin(12) * t414 + t29;
t162 = -t394 * t253 + t259 * t451 + t309 * t489;
t141 = t317 * pkin(3) + qJD(4) - t162;
t114 = pkin(4) * t463 + t141;
t58 = t147 * pkin(5) - pkin(12) * t578 + t114;
t430 = t392 * t27 - t561 * t58;
t222 = -t281 * t389 + t539 * t318;
t107 = pkin(3) * t219 + qJ(4) * t218 - qJD(4) * t263 + t222;
t406 = t253 * t505 - t259 * t436 - t563 * t280 - t281 * t471 - t309 * t456 - t318 * t527;
t98 = qJ(4) * t442 - qJD(4) * t317 - t406;
t56 = t391 * t107 - t388 * t98;
t36 = pkin(4) * t219 - pkin(11) * t188 + t56;
t57 = t388 * t107 + t391 * t98;
t40 = -pkin(11) * t187 + t57;
t476 = qJD(5) * t562;
t428 = -t393 * t36 - t562 * t40 - t64 * t476 + t504 * t66;
t5 = pkin(12) * t219 - t428;
t1 = -qJD(6) * t430 + t392 * t20 + t5 * t561;
t595 = t430 * t587 + t1;
t74 = t561 * t76;
t594 = -t537 * t587 + t74;
t124 = t392 * t578 - t402;
t468 = -t561 * t219 - t392 * t75;
t43 = qJD(6) * t126 + t468;
t593 = -t124 * t596 - t392 * t43;
t592 = t147 ^ 2;
t591 = t147 * t414;
t523 = t388 * t602 + t601 * t391;
t516 = t601 * t388 - t391 * t602;
t250 = t316 * t391 + t388 * t459;
t588 = t391 * t456 - t250;
t488 = t391 * t563;
t506 = qJD(3) * t389;
t586 = -pkin(4) * t315 + pkin(11) * t250 + (pkin(4) * t394 - pkin(11) * t488) * t506 + t516;
t585 = t597 * pkin(11) - t523;
t347 = pkin(2) * t471 + pkin(10) * t489;
t584 = t347 * qJD(3) - t394 * t297 + t298 * t451;
t583 = t578 ^ 2;
t582 = t124 * t578;
t581 = t126 * t578;
t580 = t578 * t261;
t340 = t388 * t527 - t391 * t539;
t342 = t388 * t539 + t391 * t527;
t518 = t340 * t476 - t588 * t562 + (qJD(5) * t342 - t597) * t393;
t256 = -t393 * t340 + t342 * t562;
t483 = t562 * t388;
t517 = -t249 * t562 - t250 * t393 + t256 * qJD(5) + (t393 * t488 + t483 * t563) * t506;
t571 = t315 - t478;
t485 = t563 * t325;
t514 = -(-pkin(3) * t480 - t485) * t389 + t584;
t423 = -t393 * t388 + t391 * t562;
t513 = -t423 * t261 + t388 * t504 - t391 * t476;
t356 = t393 * t391 + t483;
t512 = t414 * t356;
t330 = qJ(4) * t539 + t347;
t331 = (-pkin(3) * t563 - qJ(4) * t394 - pkin(2)) * t389;
t238 = -t388 * t330 + t391 * t331;
t202 = -pkin(4) * t489 - t342 * pkin(11) + t238;
t239 = t391 * t330 + t388 * t331;
t221 = -pkin(11) * t340 + t239;
t554 = t202 * t476 - t221 * t504 + t586 * t393 + t585 * t562;
t195 = pkin(3) * t263 + qJ(4) * t261;
t120 = t391 * t162 + t388 * t195;
t532 = t261 * t388;
t103 = pkin(11) * t532 + t120;
t559 = pkin(11) + qJ(4);
t366 = t559 * t388;
t367 = t559 * t391;
t424 = -t366 * t562 - t393 * t367;
t119 = -t162 * t388 + t391 * t195;
t531 = t261 * t391;
t89 = pkin(4) * t263 + pkin(11) * t531 + t119;
t543 = qJD(4) * t423 + qJD(5) * t424 - t562 * t103 - t393 * t89;
t515 = -pkin(4) * t597 + t514;
t577 = pkin(12) * t571 - t554;
t576 = -pkin(5) * t517 - pkin(12) * t518 - t515;
t575 = -pkin(12) * t263 + t543;
t129 = -pkin(4) * t532 + t163;
t574 = pkin(5) * t512 + pkin(12) * t513 - t129;
t385 = t390 ^ 2;
t569 = -0.2e1 * t385 * t500;
t14 = t27 * t561 + t392 * t58;
t2 = -qJD(6) * t14 + t561 * t20 - t392 * t5;
t568 = -t14 * t587 - t2;
t566 = t393 * t202 + t562 * t221;
t553 = -qJD(5) * t566 - t585 * t393 + t586 * t562;
t304 = -t393 * t366 + t367 * t562;
t541 = qJD(4) * t356 + qJD(5) * t304 - t393 * t103 + t562 * t89;
t469 = t540 * t389;
t438 = t563 * t469;
t524 = t394 * t395;
t287 = t390 * t524 - t422 - t438;
t177 = t219 * t287;
t453 = t394 * t469;
t228 = qJD(3) * t453 + t398;
t567 = t228 * t261 + t177;
t472 = -t562 * t36 + t393 * t40;
t8 = -qJD(5) * t29 - t472;
t229 = qJD(3) * t438 + ((t437 - t524) * qJD(3) + t409 * qJD(2)) * t390;
t457 = t389 * t479;
t199 = t229 * t391 + t388 * t457;
t282 = (t452 + t469) * pkin(10) + t511;
t294 = t379 + t401;
t372 = qJD(2) * t379;
t300 = t372 + t412;
t121 = -t282 * t505 + t294 * t436 + t563 * t300 + t301 * t471 + t323 * t456 + t326 * t527;
t341 = -t539 * t540 + t494;
t111 = qJ(4) * t457 - qJD(4) * t341 + t121;
t231 = -t301 * t389 + t539 * t326;
t288 = t453 + t403;
t118 = pkin(3) * t228 - qJ(4) * t229 - qJD(4) * t288 + t231;
t61 = -t111 * t388 + t391 * t118;
t49 = pkin(4) * t228 - pkin(11) * t199 + t61;
t198 = t229 * t388 - t391 * t457;
t62 = t391 * t111 + t388 * t118;
t55 = -pkin(11) * t198 + t62;
t225 = -t294 * t389 + t539 * t323;
t158 = pkin(3) * t287 - qJ(4) * t288 + t225;
t176 = t563 * t282 + t294 * t471 + t323 * t527;
t165 = -qJ(4) * t341 + t176;
t101 = t391 * t158 - t165 * t388;
t235 = t288 * t391 - t341 * t388;
t70 = pkin(4) * t287 - pkin(11) * t235 + t101;
t102 = t388 * t158 + t391 * t165;
t234 = t288 * t388 + t341 * t391;
t78 = -pkin(11) * t234 + t102;
t555 = t393 * t70 + t562 * t78;
t12 = -qJD(5) * t555 - t393 * t55 + t49 * t562;
t564 = t261 ^ 2;
t397 = qJD(1) ^ 2;
t137 = -pkin(12) * t489 + t566;
t255 = t340 * t562 + t342 * t393;
t345 = pkin(2) * t451 - pkin(10) * t527;
t333 = -pkin(3) * t539 - t345;
t260 = t340 * pkin(4) + t333;
t164 = t255 * pkin(5) - t256 * pkin(12) + t260;
t93 = t137 * t561 + t392 * t164;
t558 = qJD(6) * t93 - t577 * t392 + t576 * t561;
t92 = -t392 * t137 + t164 * t561;
t557 = -qJD(6) * t92 + t576 * t392 + t577 * t561;
t556 = pkin(5) * t571 - t553;
t167 = t234 * t562 + t235 * t393;
t551 = t167 * t76;
t550 = t255 * t76;
t549 = t423 * t76;
t547 = t42 * t392;
t383 = -pkin(4) * t391 - pkin(3);
t273 = -pkin(5) * t423 - pkin(12) * t356 + t383;
t210 = t273 * t561 - t392 * t304;
t545 = qJD(6) * t210 + t574 * t392 + t575 * t561;
t211 = t392 * t273 + t304 * t561;
t544 = -qJD(6) * t211 - t575 * t392 + t574 * t561;
t542 = t263 * pkin(5) + t541;
t538 = t126 * t124;
t536 = t578 * t147;
t535 = t219 * t388;
t533 = t261 * t263;
t529 = t356 * t392;
t528 = t385 * t397;
t525 = t391 * t219;
t236 = t392 * t256 + t489 * t561;
t522 = qJD(6) * t236 + t392 * t571 + t518 * t561;
t460 = t392 * t489;
t521 = -qJD(6) * t460 + t256 * t475 - t392 * t518 + t561 * t571;
t520 = t389 * t485 + t584;
t510 = t395 ^ 2 - t396 ^ 2;
t508 = qJD(2) * t389 ^ 2;
t502 = -qJD(4) + t141;
t499 = t1 * t561;
t498 = t2 * t561;
t497 = t43 * t561;
t495 = t396 * t528;
t491 = t356 * t561;
t490 = t388 * t563;
t487 = t563 * t219;
t486 = t563 * t261;
t484 = t563 * t326;
t465 = -t263 * t561 + t392 * t513;
t461 = t395 * t495;
t449 = t390 * t397 * t540;
t448 = pkin(1) * t569;
t447 = t392 * t263 + t513 * t561;
t443 = t385 * t395 * t473;
t440 = 0.2e1 * t467 + qJD(2);
t434 = t456 - t316;
t33 = pkin(12) * t287 + t555;
t175 = -t394 * t282 + t294 * t451 + t323 * t489;
t166 = t341 * pkin(3) - t175;
t127 = t234 * pkin(4) + t166;
t168 = -t393 * t234 + t235 * t562;
t65 = t167 * pkin(5) - t168 * pkin(12) + t127;
t15 = -t392 * t33 + t561 * t65;
t28 = -t393 * t66 + t562 * t64;
t37 = -t393 * t78 + t562 * t70;
t16 = t33 * t561 + t392 * t65;
t11 = t393 * t49 + t70 * t476 - t504 * t78 + t562 * t55;
t427 = t463 * t563;
t144 = t202 * t562 - t393 * t221;
t133 = t168 * t561 + t287 * t392;
t327 = -pkin(9) * t455 + t368;
t411 = -t356 * t503 - t447;
t410 = t356 * t475 - t465;
t339 = t511 * qJD(2);
t404 = -t282 * t477 - t294 * t450 - t394 * t300 + t301 * t451 - t323 * t478;
t400 = -t261 * t571 - t389 * t487;
t117 = (-pkin(3) * t479 - t484) * t389 - t404;
t90 = t198 * pkin(4) + t117;
t346 = -t395 * t390 * pkin(9) + t379;
t338 = -pkin(9) * t479 + t372;
t334 = -pkin(9) * t480 + t371;
t328 = qJD(1) * t339;
t237 = t256 * t561 - t460;
t136 = pkin(5) * t489 - t144;
t132 = t168 * t392 - t287 * t561;
t122 = t389 * t484 + t404;
t95 = qJD(5) * t168 + t198 * t562 + t393 * t199;
t94 = t393 * t198 - t199 * t562 + t234 * t476 + t235 * t504;
t87 = pkin(5) * t578 + pkin(12) * t147;
t60 = qJD(6) * t133 - t228 * t561 - t392 * t94;
t59 = t168 * t503 - t228 * t392 - t287 * t475 + t561 * t94;
t32 = -t287 * pkin(5) - t37;
t26 = -pkin(5) * t414 - t28;
t25 = t95 * pkin(5) + t94 * pkin(12) + t90;
t18 = t28 * t561 + t392 * t87;
t17 = -t392 * t28 + t561 * t87;
t10 = -t228 * pkin(5) - t12;
t9 = pkin(12) * t228 + t11;
t6 = -t219 * pkin(5) - t8;
t4 = -qJD(6) * t16 + t25 * t561 - t392 * t9;
t3 = qJD(6) * t15 + t392 * t25 + t561 * t9;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t443, t510 * t569, t440 * t396 * t507, -0.2e1 * t443, -t440 * t479, 0, -t328 * t540 - t339 * t441 + t395 * t448, -t327 * t540 - t338 * t441 + t396 * t448 (t327 * t396 + t328 * t395 + (-t334 * t396 - t335 * t395) * qJD(2) + (t338 * t396 + t339 * t395 + (-t346 * t396 - t395 * t511) * qJD(2)) * qJD(1)) * t390, t327 * t511 - t328 * t346 - t334 * t339 + t335 * t338, -t218 * t288 + t229 * t263, t218 * t287 - t219 * t288 - t228 * t263 - t229 * t261, t218 * t341 - t229 * t317 + (qJD(1) * t288 + t263) * t457, t567, t219 * t341 + t228 * t317 + (-qJD(1) * t287 - t261) * t457 (-qJD(1) * t341 - t317) * t457, t429 * t341 - t122 * t317 + t204 * t228 + t219 * t225 + t222 * t287 + t231 * t261 + (qJD(1) * t175 + t162) * t457, -t406 * t341 + t121 * t317 + t204 * t229 - t218 * t225 + t222 * t288 + t231 * t263 + (-qJD(1) * t176 - t163) * t457, -t121 * t261 - t122 * t263 - t162 * t229 - t163 * t228 + t175 * t218 - t176 * t219 + t287 * t406 + t288 * t429, t121 * t163 + t122 * t162 - t175 * t429 - t176 * t406 + t204 * t231 + t222 * t225, t188 * t235 + t199 * t216, -t235 * t187 - t188 * t234 - t216 * t198 - t199 * t463, t188 * t287 + t199 * t261 + t216 * t228 + t219 * t235, t187 * t234 + t198 * t463, -t187 * t287 - t198 * t261 - t234 * t219 - t228 * t463, t567, t101 * t219 + t106 * t234 + t117 * t463 + t141 * t198 + t166 * t187 + t81 * t228 + t61 * t261 + t56 * t287, -t102 * t219 + t106 * t235 + t117 * t216 + t141 * t199 + t166 * t188 - t228 * t82 - t261 * t62 - t287 * t57, -t101 * t188 - t102 * t187 - t82 * t198 - t81 * t199 - t61 * t216 - t57 * t234 - t56 * t235 - t463 * t62, t101 * t56 + t102 * t57 + t106 * t166 + t117 * t141 + t61 * t81 + t62 * t82, -t168 * t75 - t578 * t94, t147 * t94 + t167 * t75 - t168 * t76 - t578 * t95, t168 * t219 + t228 * t578 - t75 * t287 - t414 * t94, t147 * t95 + t551, -t147 * t228 - t167 * t219 - t76 * t287 - t414 * t95, t228 * t414 + t177, t114 * t95 + t12 * t414 + t127 * t76 + t90 * t147 + t72 * t167 + t37 * t219 + t28 * t228 + t8 * t287, -t11 * t414 - t114 * t94 - t127 * t75 + t72 * t168 - t219 * t555 - t29 * t228 + t287 * t428 + t578 * t90, -t11 * t147 - t12 * t578 + t167 * t428 - t168 * t8 + t28 * t94 - t29 * t95 + t37 * t75 - t555 * t76, t11 * t29 + t114 * t90 + t12 * t28 + t127 * t72 + t37 * t8 - t428 * t555, -t126 * t59 - t133 * t42, t124 * t59 - t126 * t60 + t132 * t42 - t133 * t43, t126 * t95 + t133 * t76 - t167 * t42 - t587 * t59, t124 * t60 + t132 * t43, -t124 * t95 - t132 * t76 - t167 * t43 - t587 * t60, t587 * t95 + t551, t10 * t124 + t132 * t6 + t15 * t76 + t167 * t2 + t26 * t60 + t32 * t43 + t4 * t587 - t430 * t95, -t1 * t167 + t10 * t126 + t133 * t6 - t14 * t95 - t16 * t76 - t26 * t59 - t3 * t587 - t32 * t42, -t1 * t132 - t124 * t3 - t126 * t4 - t133 * t2 - t14 * t60 + t15 * t42 - t16 * t43 - t430 * t59, t1 * t16 + t10 * t26 + t14 * t3 + t15 * t2 + t32 * t6 - t4 * t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461, t510 * t528, -t396 * t449, t461, t395 * t449, 0, -pkin(9) * t454 + t335 * t441 + (-qJD(2) * t467 + t528) * t395 * pkin(1), pkin(1) * t495 + t334 * t441 - t327, 0, 0, -t218 * t527 + t263 * t434, t316 * t261 + t263 * t315 + (-t563 * t218 - t219 * t394 + (-t263 * t394 - t486) * qJD(3)) * t389, -t218 * t539 - t434 * t317 + (-t263 * t389 + t394 * t508) * t480, t400, -t219 * t539 - t571 * t317 + (t261 * t389 + t508 * t563) * t480 (t466 + t317) * t459, -t429 * t539 - t204 * t315 - t230 * t261 + t520 * t317 + (t204 * t505 - t563 * t222 - pkin(2) * t219 + (qJD(2) * t345 - t162) * t480) * t389, t406 * t539 - t204 * t316 - t230 * t263 - t519 * t317 + (t204 * t477 + pkin(2) * t218 + t222 * t394 + (-qJD(2) * t347 + t163) * t480) * t389, t162 * t316 + t163 * t315 + t345 * t218 - t347 * t219 + t520 * t263 + t519 * t261 + (-t563 * t406 + t429 * t394 + (-t162 * t563 - t163 * t394) * qJD(3)) * t389, -pkin(2) * t222 * t389 - t162 * t520 - t163 * t519 - t204 * t230 - t345 * t429 - t347 * t406, t188 * t342 + t216 * t588, -t342 * t187 - t188 * t340 + t250 * t463 + t216 * t249 + (-t216 * t490 - t391 * t427) * t506, -t216 * t315 + t342 * t219 - t250 * t261 + (-t563 * t188 + (t216 * t394 + t391 * t486) * qJD(3)) * t389, t388 * t427 * t506 + t187 * t340 - t249 * t463, -t340 * t219 + t249 * t261 + t463 * t315 + (t187 * t563 + (-t388 * t486 - t394 * t463) * qJD(3)) * t389, t400, t238 * t219 + t333 * t187 + t106 * t340 - t81 * t315 - t141 * t249 + t516 * t261 + (-t56 * t563 + (t141 * t490 + t394 * t81) * qJD(3)) * t389 + t514 * t463, t106 * t342 - t141 * t250 + t333 * t188 - t239 * t219 + t82 * t315 + t523 * t261 + t514 * t216 + (t563 * t57 + (t141 * t488 - t394 * t82) * qJD(3)) * t389, -t239 * t187 - t57 * t340 - t238 * t188 - t56 * t342 + t82 * t249 + t81 * t250 - t516 * t216 + (-t488 * t81 - t490 * t82) * t506 + t523 * t463, t106 * t333 + t141 * t514 + t238 * t56 + t239 * t57 + t516 * t81 - t523 * t82, -t256 * t75 - t518 * t578, t147 * t518 + t255 * t75 - t256 * t76 - t517 * t578, t256 * t219 - t414 * t518 + t489 * t75 - t571 * t578, t147 * t517 + t550, t147 * t571 - t255 * t219 - t414 * t517 + t489 * t76, -t414 * t315 + (t414 * t505 - t487) * t389, t114 * t517 + t144 * t219 + t147 * t515 + t72 * t255 + t260 * t76 - t28 * t571 + t553 * t414 - t489 * t8, -t114 * t518 - t219 * t566 + t72 * t256 - t260 * t75 + t29 * t571 - t554 * t414 - t428 * t489 + t515 * t578, t144 * t75 - t147 * t554 + t255 * t428 - t256 * t8 + t28 * t518 - t29 * t517 - t553 * t578 - t566 * t76, t114 * t515 + t144 * t8 + t260 * t72 + t28 * t553 + t29 * t554 - t428 * t566, -t126 * t522 - t237 * t42, t124 * t522 - t126 * t521 + t236 * t42 - t237 * t43, t126 * t517 + t237 * t76 - t255 * t42 - t522 * t587, t124 * t521 + t236 * t43, -t124 * t517 - t236 * t76 - t255 * t43 - t521 * t587, t517 * t587 + t550, t124 * t556 + t136 * t43 + t2 * t255 + t236 * t6 + t26 * t521 - t430 * t517 - t558 * t587 + t76 * t92, -t1 * t255 + t126 * t556 - t136 * t42 - t14 * t517 + t237 * t6 - t26 * t522 + t557 * t587 - t76 * t93, -t1 * t236 + t124 * t557 + t126 * t558 - t14 * t521 - t2 * t237 + t42 * t92 - t43 * t93 - t430 * t522, t1 * t93 + t136 * t6 - t14 * t557 + t2 * t92 + t26 * t556 + t430 * t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533, t263 ^ 2 - t564, -t261 * t317 - t218, -t533, -t263 * t317 - t509 * t565 - t405, t442, -t163 * t317 - t204 * t263 - t429, -t162 * t317 + t204 * t261 + t406, 0, 0, t188 * t388 + t216 * t531, -t388 * t187 + t188 * t391 + (-t216 * t388 - t391 * t463) * t261, -t216 * t263 + t391 * t564 + t535, -t187 * t391 + t463 * t532, t263 * t463 - t388 * t564 + t525, -t533, -qJ(4) * t535 - pkin(3) * t187 - t106 * t391 - t81 * t263 - t163 * t463 + (t388 * t502 - t119) * t261, -qJ(4) * t525 - pkin(3) * t188 + t106 * t388 - t163 * t216 + t263 * t82 + (t391 * t502 + t120) * t261, t119 * t216 + t120 * t252 + (-qJ(4) * t187 - qJD(4) * t463 + t120 * t317 - t81 * t261 + t57) * t391 + (qJ(4) * t188 + qJD(4) * t216 - t261 * t82 - t56) * t388, -pkin(3) * t106 - t119 * t81 - t120 * t82 - t141 * t163 + (-t388 * t81 + t391 * t82) * qJD(4) + (-t56 * t388 + t57 * t391) * qJ(4), -t356 * t75 - t513 * t578, t147 * t513 - t356 * t76 - t423 * t75 - t512 * t578, t356 * t219 - t263 * t578 - t414 * t513, t147 * t512 - t549, t147 * t263 + t219 * t423 - t414 * t512, -t414 * t263, t114 * t512 - t129 * t147 + t219 * t424 - t28 * t263 + t383 * t76 - t541 * t414 - t423 * t72, -t114 * t513 - t129 * t578 - t304 * t219 + t29 * t263 + t72 * t356 - t383 * t75 - t543 * t414, -t147 * t543 + t28 * t513 - t29 * t512 - t304 * t76 - t356 * t8 - t423 * t428 + t424 * t75 + t541 * t578, -t114 * t129 - t28 * t541 + t29 * t543 - t304 * t428 + t383 * t72 + t424 * t8, t126 * t411 - t42 * t491, t465 * t126 + t447 * t124 + (-t497 + t547 + (t124 * t392 - t126 * t561) * qJD(6)) * t356, t126 * t512 + t411 * t587 + t42 * t423 + t491 * t76, t124 * t410 + t43 * t529, -t124 * t512 - t410 * t587 + t423 * t43 - t529 * t76, t512 * t587 - t549, t124 * t542 - t2 * t423 + t210 * t76 + t26 * t410 - t424 * t43 - t430 * t512 + t529 * t6 + t544 * t587, t1 * t423 + t126 * t542 - t14 * t512 - t211 * t76 + t26 * t411 + t42 * t424 + t491 * t6 - t545 * t587, t210 * t42 - t211 * t43 + t465 * t14 - t447 * t430 - t544 * t126 - t545 * t124 + (-t498 - t1 * t392 + (-t14 * t561 - t392 * t430) * qJD(6)) * t356, t1 * t211 + t14 * t545 + t2 * t210 + t26 * t542 - t424 * t6 - t430 * t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216 * t261 + t187, -t261 * t463 + t188, -t216 ^ 2 - t463 ^ 2, t216 * t81 + t463 * t82 + t106, 0, 0, 0, 0, 0, 0, t464 + 0.2e1 * t579 + t580, -t75 - t591, -t583 - t592, t147 * t29 + t28 * t578 + t72, 0, 0, 0, 0, 0, 0, -t582 + t594, -t581 + t599, t593 - t600, t14 * t596 - t26 * t578 + t392 * t595 + t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536, t583 - t592, -t75 + t591, -t536, -t464 + t580, t219, -t114 * t578 + t261 * t29 - t472, t114 * t147 + t28 * t414 + t428, 0, 0, t126 * t596 - t547, t593 + t600, -t581 - t599, t124 * t537 - t497, t582 + t594, -t587 * t578, -t6 * t561 - pkin(5) * t43 - t29 * t124 + t430 * t578 + (-pkin(12) * t475 - t17) * t587 + (-pkin(12) * t76 + t26 * t587) * t392, pkin(5) * t42 - t29 * t126 + t14 * t578 + t18 * t587 + t6 * t392 + t596 * t26 + (t503 * t587 - t74) * pkin(12), t499 + t18 * t124 + t17 * t126 + t596 * t430 + (t126 * t475 - t497) * pkin(12) + ((qJD(6) * t124 - t42) * pkin(12) + t568) * t392, -t6 * pkin(5) + t430 * t17 - t14 * t18 - t26 * t29 + (t499 - t2 * t392 + (-t14 * t392 + t430 * t561) * qJD(6)) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, -t124 ^ 2 + t126 ^ 2, t124 * t587 - t42, -t538, -t468 + (-qJD(6) + t587) * t126, t76, -t26 * t126 - t568, t26 * t124 - t595, 0, 0;];
tauc_reg  = t7;
