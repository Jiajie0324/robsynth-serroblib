% Calculate vector of inverse dynamics joint torques for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRRRR5_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRRR5_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR5_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_invdynJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6PRRRRR5_invdynJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:10:35
% EndTime: 2019-03-09 01:11:04
% DurationCPUTime: 21.61s
% Computational Cost: add. (10946->791), mult. (27084->1114), div. (0->0), fcn. (23515->18), ass. (0->329)
t792 = sin(pkin(7));
t800 = sin(qJ(3));
t805 = cos(qJ(3));
t839 = (pkin(3) * t800 - pkin(10) * t805) * t792;
t793 = sin(pkin(6));
t801 = sin(qJ(2));
t957 = t793 * t801;
t895 = qJD(1) * t957;
t1013 = qJD(3) * t839 - t792 * t895;
t795 = cos(pkin(7));
t806 = cos(qJ(2));
t942 = t805 * t806;
t948 = t800 * t801;
t836 = -t795 * t948 + t942;
t705 = t836 * t793;
t960 = t792 * t800;
t778 = pkin(9) * t960;
t952 = t795 * t805;
t992 = pkin(2) * t952 - t778;
t1011 = -qJD(1) * t705 + t992 * qJD(3);
t919 = qJD(2) * t792;
t893 = t805 * t919;
t767 = -qJD(4) + t893;
t953 = t795 * t800;
t959 = t792 * t805;
t925 = pkin(2) * t953 + pkin(9) * t959;
t713 = pkin(10) * t795 + t925;
t855 = -pkin(3) * t805 - pkin(10) * t800;
t714 = (-pkin(2) + t855) * t792;
t799 = sin(qJ(4));
t804 = cos(qJ(4));
t913 = qJD(4) * t804;
t915 = qJD(4) * t799;
t1012 = t1011 * t804 + t1013 * t799 - t713 * t915 + t714 * t913;
t946 = t801 * t805;
t947 = t800 * t806;
t838 = t795 * t946 + t947;
t704 = t838 * t793;
t928 = -qJD(1) * t704 + t925 * qJD(3);
t920 = qJD(1) * t806;
t753 = qJD(2) * pkin(2) + t793 * t920;
t796 = cos(pkin(6));
t921 = qJD(1) * t796;
t896 = t792 * t921;
t1010 = t753 * t795 + t896;
t917 = qJD(3) * t800;
t890 = t792 * t917;
t1009 = -pkin(11) * t890 - t1012;
t731 = -t804 * t795 + t799 * t960;
t916 = qJD(3) * t805;
t889 = t792 * t916;
t860 = t804 * t889;
t672 = -qJD(4) * t731 + t860;
t732 = t795 * t799 + t804 * t960;
t888 = t799 * t916;
t673 = qJD(4) * t732 + t792 * t888;
t1008 = pkin(4) * t673 - pkin(11) * t672 + t928;
t737 = pkin(9) * t919 + t895;
t645 = t805 * t737 + t753 * t953 + t800 * t896;
t1007 = t645 + t767 * (pkin(4) * t799 - pkin(11) * t804);
t798 = sin(qJ(5));
t803 = cos(qJ(5));
t894 = t800 * t919;
t688 = t798 * t804 * t893 - t803 * t894;
t1001 = -t798 * t913 + t688;
t943 = t804 * t805;
t689 = (t798 * t800 + t803 * t943) * t919;
t852 = t803 * t913 - t689;
t911 = qJD(5) * t798;
t1006 = -t799 * t911 + t852;
t918 = qJD(2) * t795;
t868 = qJD(3) + t918;
t703 = t799 * t868 + t804 * t894;
t659 = t703 * t798 + t803 * t767;
t802 = cos(qJ(6));
t661 = t703 * t803 - t767 * t798;
t797 = sin(qJ(6));
t971 = t661 * t797;
t579 = t802 * t659 + t971;
t861 = t799 * t894;
t701 = -t804 * t868 + t861;
t692 = qJD(5) + t701;
t682 = qJD(6) + t692;
t1005 = t579 * t682;
t843 = t659 * t797 - t802 * t661;
t1004 = t682 * t843;
t1003 = t1011 * t799 - t1013 * t804 + t713 * t913 + t714 * t915;
t910 = qJD(5) * t803;
t1002 = t799 * t910 - t1001;
t989 = qJD(5) + qJD(6);
t1000 = t701 + t989;
t999 = -pkin(9) * qJDD(2) * t792 - (qJD(2) * t920 + qJDD(1) * t801) * t793 - t1010 * qJD(3);
t627 = pkin(10) * t868 + t645;
t774 = t795 * t921;
t658 = t774 + (qJD(2) * t855 - t753) * t792;
t565 = t804 * t627 + t799 * t658;
t559 = -pkin(11) * t767 + t565;
t644 = t1010 * t805 - t800 * t737;
t626 = -pkin(3) * t868 - t644;
t567 = t701 * pkin(4) - t703 * pkin(11) + t626;
t531 = t559 * t803 + t567 * t798;
t526 = -pkin(12) * t659 + t531;
t909 = qJD(6) * t797;
t524 = t526 * t909;
t564 = -t799 * t627 + t658 * t804;
t558 = pkin(4) * t767 - t564;
t544 = pkin(5) * t659 + t558;
t979 = sin(pkin(13));
t876 = t979 * t806;
t794 = cos(pkin(13));
t955 = t794 * t801;
t729 = t796 * t955 + t876;
t877 = t979 * t801;
t954 = t794 * t806;
t818 = -t796 * t954 + t877;
t958 = t793 * t794;
t900 = t792 * t958;
t631 = t729 * t805 + (-t795 * t818 - t900) * t800;
t668 = t792 * t818 - t795 * t958;
t575 = t631 * t804 + t668 * t799;
t730 = -t796 * t877 + t954;
t819 = t796 * t876 + t955;
t878 = t793 * t979;
t857 = t792 * t878;
t633 = t730 * t805 + (-t795 * t819 + t857) * t800;
t669 = t792 * t819 + t795 * t878;
t577 = t633 * t804 + t669 * t799;
t812 = t818 * t805;
t630 = t729 * t800 + t795 * t812 + t805 * t900;
t813 = t819 * t805;
t632 = t730 * t800 + t795 * t813 - t805 * t857;
t837 = t795 * t947 + t946;
t667 = t793 * t837 + t796 * t960;
t956 = t793 * t806;
t728 = -t792 * t956 + t795 * t796;
t635 = t667 * t804 + t728 * t799;
t991 = t795 * t942 - t948;
t666 = -t793 * t991 - t796 * t959;
t791 = qJ(5) + qJ(6);
t786 = sin(t791);
t787 = cos(t791);
t998 = t544 * t579 - g(1) * (-t577 * t787 - t632 * t786) - g(2) * (-t575 * t787 - t630 * t786) - g(3) * (-t635 * t787 - t666 * t786) + t524;
t997 = t544 * t843 - g(3) * (-t635 * t786 + t666 * t787) - g(2) * (-t575 * t786 + t630 * t787) - g(1) * (-t577 * t786 + t632 * t787);
t905 = qJDD(2) * t795;
t777 = qJDD(3) + t905;
t842 = qJD(4) * t868;
t904 = qJDD(2) * t800;
t622 = -t804 * t777 + t792 * (qJD(2) * (t800 * t913 + t888) + t799 * t904) + t799 * t842;
t614 = qJDD(5) + t622;
t609 = qJDD(6) + t614;
t996 = t609 * MDP(30) + (-t579 ^ 2 + t843 ^ 2) * MDP(27) - t579 * MDP(26) * t843;
t742 = t797 * t803 + t798 * t802;
t723 = t742 * t799;
t938 = -pkin(4) * t890 + t1003;
t712 = t778 + (-pkin(2) * t805 - pkin(3)) * t795;
t636 = pkin(4) * t731 - pkin(11) * t732 + t712;
t930 = t804 * t713 + t799 * t714;
t638 = -pkin(11) * t959 + t930;
t934 = t798 * t636 + t803 * t638;
t995 = -qJD(5) * t934 + t1008 * t803 + t1009 * t798;
t994 = -t1008 * t798 + t1009 * t803 - t636 * t910 + t638 * t911;
t984 = pkin(10) * t798;
t993 = -t1007 * t803 + t915 * t984;
t719 = qJD(2) * t839;
t933 = t804 * t644 + t799 * t719;
t588 = pkin(11) * t894 + t933;
t764 = -pkin(4) * t804 - pkin(11) * t799 - pkin(3);
t990 = t1007 * t798 + t803 * t588 - t764 * t910;
t880 = t792 * t904;
t621 = qJD(2) * t860 - qJD(4) * t861 + t799 * t777 + (t842 + t880) * t804;
t903 = qJDD(2) * t805;
t775 = t792 * t903;
t907 = qJD(2) * qJD(3);
t883 = t800 * t907;
t715 = t792 * t883 + qJDD(4) - t775;
t557 = qJD(5) * t661 + t621 * t798 - t803 * t715;
t556 = t803 * t621 - t703 * t911 + t798 * t715 - t767 * t910;
t874 = t556 * t797 + t802 * t557;
t517 = -qJD(6) * t843 + t874;
t807 = qJD(2) ^ 2;
t986 = pkin(11) + pkin(12);
t985 = pkin(5) * t799;
t980 = pkin(10) * qJD(4);
t530 = -t559 * t798 + t803 * t567;
t525 = -pkin(12) * t661 + t530;
t523 = pkin(5) * t692 + t525;
t978 = t523 * t802;
t977 = t526 * t802;
t976 = t556 * t798;
t975 = t614 * t798;
t974 = t614 * t803;
t973 = t659 * t692;
t972 = t661 * t692;
t970 = t701 * t767;
t969 = t701 * t798;
t968 = t703 * t767;
t967 = t728 * t792;
t833 = t767 * t799;
t965 = t777 * MDP(9);
t964 = t786 * t804;
t963 = t787 * t804;
t961 = t792 * t799;
t776 = qJDD(1) * t956;
t892 = qJD(2) * t957;
t859 = qJD(1) * t892;
t710 = qJDD(2) * pkin(2) + t776 - t859;
t906 = qJDD(1) * t796;
t881 = t792 * t906;
t814 = -t710 * t953 + t737 * t917 - t800 * t881 + t805 * t999;
t554 = pkin(10) * t777 - t814;
t773 = t795 * t906;
t830 = t883 - t903;
t882 = t805 * t907;
t831 = t882 + t904;
t599 = t773 + (pkin(3) * t830 - pkin(10) * t831 - t710) * t792;
t829 = t804 * t554 + t799 * t599 - t627 * t915 + t658 * t913;
t519 = pkin(11) * t715 + t829;
t840 = t710 * t952 - t737 * t916 + t800 * t999 + t805 * t881;
t555 = -pkin(3) * t777 - t840;
t529 = pkin(4) * t622 - pkin(11) * t621 + t555;
t510 = -qJD(5) * t531 - t798 * t519 + t803 * t529;
t507 = pkin(5) * t614 - pkin(12) * t556 + t510;
t951 = t797 * t507;
t950 = t798 * t799;
t949 = t799 * t803;
t945 = t801 * t807;
t944 = t803 * t804;
t941 = qJDD(1) - g(3);
t901 = t798 * t959;
t592 = -qJD(5) * t901 + t672 * t798 + t732 * t910 - t803 * t890;
t940 = pkin(5) * t592 + t938;
t643 = pkin(4) * t703 + pkin(11) * t701;
t939 = t803 * t564 + t798 * t643;
t741 = t797 * t798 - t802 * t803;
t936 = t688 * t797 - t689 * t802 - t723 * t989 - t741 * t913;
t935 = -t909 * t950 + (t949 * t989 - t1001) * t802 + t1006 * t797;
t932 = t1000 * t741;
t931 = t1000 * t742;
t641 = t799 * t644;
t587 = -pkin(4) * t894 - t719 * t804 + t641;
t929 = pkin(5) * t1002 + pkin(10) * t913 - t587;
t782 = pkin(10) * t944;
t924 = t798 * t764 + t782;
t789 = t800 ^ 2;
t923 = -t805 ^ 2 + t789;
t914 = qJD(4) * t803;
t912 = qJD(5) * t692;
t908 = qJD(6) * t802;
t898 = t802 * t556 - t797 * t557 - t659 * t908;
t897 = qJD(5) * t986;
t884 = t792 * t795 * t807;
t827 = -t803 * t519 - t798 * t529 + t559 * t911 - t567 * t910;
t508 = -pkin(12) * t557 - t827;
t875 = t802 * t507 - t797 * t508;
t873 = t803 * t636 - t638 * t798;
t871 = -t799 * t713 + t714 * t804;
t870 = t692 * t803;
t869 = qJD(6) * t523 + t508;
t867 = qJD(3) + 0.2e1 * t918;
t866 = t777 + t905;
t788 = t792 ^ 2;
t865 = t788 * t793 * t945;
t864 = t799 * t554 - t804 * t599 + t627 * t913 + t658 * t915;
t862 = t792 * t892;
t856 = -t565 + (t911 + t969) * pkin(5);
t853 = g(1) * t730 + g(2) * t729;
t637 = pkin(4) * t959 - t871;
t674 = t732 * t798 + t803 * t959;
t545 = -pkin(12) * t674 + t934;
t591 = -qJD(5) * t674 + t672 * t803 + t798 * t890;
t851 = -pkin(5) * t673 + pkin(12) * t591 + qJD(6) * t545 - t995;
t675 = t732 * t803 - t901;
t539 = pkin(5) * t731 - pkin(12) * t675 + t873;
t850 = pkin(12) * t592 - qJD(6) * t539 + t994;
t640 = t803 * t643;
t771 = t986 * t803;
t849 = pkin(5) * t703 + qJD(6) * t771 - t564 * t798 + t640 + (pkin(12) * t701 + t897) * t803;
t676 = -pkin(12) * t950 + t924;
t848 = -pkin(12) * t689 + qJD(6) * t676 - t588 * t798 + t893 * t985 - (-pkin(12) * t944 + t985) * qJD(4) - (-t782 + (pkin(12) * t799 - t764) * t798) * qJD(5) - t993;
t770 = t986 * t798;
t847 = pkin(12) * t969 + qJD(6) * t770 + t798 * t897 + t939;
t739 = t803 * t764;
t665 = -pkin(12) * t949 + t739 + (-pkin(5) - t984) * t804;
t846 = -qJD(6) * t665 - (-t799 * t914 - t804 * t911) * pkin(10) + t990 + t1002 * pkin(12);
t512 = t523 * t797 + t977;
t572 = -t635 * t798 + t666 * t803;
t573 = t635 * t803 + t666 * t798;
t845 = t572 * t802 - t573 * t797;
t844 = t572 * t797 + t573 * t802;
t634 = t667 * t799 - t728 * t804;
t604 = t802 * t674 + t675 * t797;
t605 = -t674 * t797 + t675 * t802;
t520 = -pkin(4) * t715 + t864;
t832 = -pkin(11) * t614 + t558 * t692;
t516 = -t661 * t909 + t898;
t825 = g(1) * (-t633 * t799 + t669 * t804) + g(2) * (-t631 * t799 + t668 * t804) - g(3) * t634;
t824 = g(1) * t632 + g(2) * t630 + g(3) * t666;
t823 = g(1) * t633 + g(2) * t631 + g(3) * t667;
t651 = -t729 * t953 - t812;
t653 = -t730 * t953 - t813;
t822 = g(1) * t653 + g(2) * t651 + g(3) * t705;
t816 = -t555 + t824;
t811 = -pkin(10) * t715 - t626 * t767;
t810 = pkin(10) * t912 - t824;
t505 = -qJD(6) * t512 + t875;
t808 = pkin(11) * t912 + t520 + t825;
t785 = -pkin(5) * t803 - pkin(4);
t751 = (pkin(5) * t798 + pkin(10)) * t799;
t724 = t741 * t799;
t691 = -t753 * t792 + t774;
t663 = -t710 * t792 + t773;
t662 = t705 * t804 + t957 * t961;
t652 = t730 * t952 - t800 * t819;
t650 = t729 * t952 - t800 * t818;
t618 = t796 * t889 + (t836 * qJD(2) + qJD(3) * t991) * t793;
t617 = t796 * t890 + (qJD(2) * t838 + qJD(3) * t837) * t793;
t601 = t653 * t804 + t730 * t961;
t600 = t651 * t804 + t729 * t961;
t583 = pkin(5) * t674 + t637;
t547 = -qJD(4) * t634 + t618 * t804 + t799 * t862;
t546 = qJD(4) * t635 + t618 * t799 - t804 * t862;
t533 = qJD(6) * t605 + t591 * t797 + t802 * t592;
t532 = -qJD(6) * t604 + t591 * t802 - t592 * t797;
t522 = qJD(5) * t572 + t547 * t803 + t617 * t798;
t521 = -qJD(5) * t573 - t547 * t798 + t617 * t803;
t513 = pkin(5) * t557 + t520;
t511 = -t526 * t797 + t978;
t504 = t869 * t802 - t524 + t951;
t1 = [t941 * MDP(1) + (-t617 * t868 - t666 * t777 - t805 * t865 + t830 * t967) * MDP(10) + (-t618 * t868 - t667 * t777 + t800 * t865 + t831 * t967) * MDP(11) + (t546 * t767 + t617 * t701 + t622 * t666 - t634 * t715) * MDP(17) + (t547 * t767 + t617 * t703 + t621 * t666 - t635 * t715) * MDP(18) + (t521 * t692 + t546 * t659 + t557 * t634 + t572 * t614) * MDP(24) + (-t522 * t692 + t546 * t661 + t556 * t634 - t573 * t614) * MDP(25) + ((-qJD(6) * t844 + t521 * t802 - t522 * t797) * t682 + t845 * t609 + t546 * t579 + t634 * t517) * MDP(31) + (-(qJD(6) * t845 + t521 * t797 + t522 * t802) * t682 - t844 * t609 - t546 * t843 + t634 * t516) * MDP(32) + ((qJDD(2) * t806 - t945) * MDP(3) + (-qJDD(2) * t801 - t806 * t807) * MDP(4)) * t793; (-(t539 * t797 + t545 * t802) * t609 - t504 * t731 - t512 * t673 + t583 * t516 + t513 * t605 + t544 * t532 - g(1) * (-t601 * t786 + t652 * t787) - g(2) * (-t600 * t786 + t650 * t787) - g(3) * (-t662 * t786 + t704 * t787) + (t797 * t851 + t802 * t850) * t682 - t940 * t843) * MDP(32) + (t516 * t605 - t532 * t843) * MDP(26) + (-t516 * t604 - t517 * t605 - t532 * t579 + t533 * t843) * MDP(27) + (t516 * t731 + t532 * t682 + t605 * t609 - t673 * t843) * MDP(28) + (-t934 * t614 + t827 * t731 - t531 * t673 + t637 * t556 + t520 * t675 + t558 * t591 - g(1) * (-t601 * t798 + t652 * t803) - g(2) * (-t600 * t798 + t650 * t803) - g(3) * (-t662 * t798 + t704 * t803) + t994 * t692 + t938 * t661) * MDP(25) + ((t829 * t805 - t565 * t917 + (-g(3) * t957 - t853) * t804) * MDP(18) + (t622 * t805 - t701 * t917) * MDP(15) + (-t621 * t805 + t703 * t917) * MDP(14) + (-t663 * t805 + t691 * t917) * MDP(10) + (t663 * t800 + t691 * t916) * MDP(11) + (t564 * t917 + t805 * t864) * MDP(17) + (t800 * t866 + t867 * t916) * MDP(7) + (t805 * t866 - t867 * t917) * MDP(8) + (-t715 * t805 - t767 * t917) * MDP(16)) * t792 + ((-pkin(2) * t830 + t805 * t859) * MDP(10) + (-pkin(2) * t831 - t800 * t859) * MDP(11) + (qJDD(2) * t789 + 0.2e1 * t800 * t882) * MDP(5) + 0.2e1 * (t800 * t903 - t907 * t923) * MDP(6)) * t788 + (t992 * t777 + t840 * t795 - t928 * t868 - t822) * MDP(10) + (g(1) * t819 + g(2) * t818 - g(3) * t956 + t776) * MDP(3) + (-t941 * t957 + t853) * MDP(4) + ((t539 * t802 - t545 * t797) * t609 + t505 * t731 + t511 * t673 + t583 * t517 + t513 * t604 + t544 * t533 - g(1) * (t601 * t787 + t652 * t786) - g(2) * (t600 * t787 + t650 * t786) - g(3) * (t662 * t787 + t704 * t786) + (t797 * t850 - t802 * t851) * t682 + t940 * t579) * MDP(31) + (-t672 * t767 + t715 * t732) * MDP(14) + (t673 * t767 - t715 * t731) * MDP(15) + (-g(1) * t601 - g(2) * t600 - g(3) * t662 + t1003 * t767 + t555 * t731 + t712 * t622 + t626 * t673 + t928 * t701 + t871 * t715) * MDP(17) + (t614 * t731 + t673 * t692) * MDP(23) + (-t557 * t731 - t592 * t692 - t614 * t674 - t659 * t673) * MDP(22) + (t556 * t731 + t591 * t692 + t614 * t675 + t661 * t673) * MDP(21) + (-t517 * t731 - t533 * t682 - t579 * t673 - t604 * t609) * MDP(29) + (t609 * t731 + t673 * t682) * MDP(30) + (-t621 * t731 - t622 * t732 - t672 * t701 - t673 * t703) * MDP(13) + (t621 * t732 + t672 * t703) * MDP(12) + t795 * t965 + (t556 * t675 + t591 * t661) * MDP(19) + (-t556 * t674 - t557 * t675 - t591 * t659 - t592 * t661) * MDP(20) + (g(1) * t652 + g(2) * t650 + g(3) * t704 - t1011 * t868 - t925 * t777 + t814 * t795) * MDP(11) + (t1012 * t767 + t555 * t732 + t712 * t621 + t626 * t672 + t928 * t703 - t930 * t715 + t822 * t799) * MDP(18) + (t873 * t614 + t510 * t731 + t530 * t673 + t637 * t557 + t520 * t674 + t558 * t592 - g(1) * (t601 * t803 + t652 * t798) - g(2) * (t600 * t803 + t650 * t798) - g(3) * (t662 * t803 + t704 * t798) + t995 * t692 + t938 * t659) * MDP(24) + qJDD(2) * MDP(2); (-MDP(5) * t800 * t805 + MDP(6) * t923) * t788 * t807 + (-(t665 * t797 + t676 * t802) * t609 + t504 * t804 + t751 * t516 - t513 * t724 - g(1) * (t632 * t964 + t633 * t787) - g(2) * (t630 * t964 + t631 * t787) - g(3) * (t666 * t964 + t667 * t787) + (t797 * t848 + t802 * t846) * t682 - t929 * t843 + t936 * t544 + t512 * t833) * MDP(32) + (-t516 * t724 - t843 * t936) * MDP(26) + (-t516 * t723 + t517 * t724 - t579 * t936 + t843 * t935) * MDP(27) + (-t516 * t804 - t609 * t724 + t682 * t936 + t833 * t843) * MDP(28) + ((t665 * t802 - t676 * t797) * t609 - t505 * t804 + t751 * t517 + t513 * t723 - g(1) * (-t632 * t963 + t633 * t786) - g(2) * (-t630 * t963 + t631 * t786) - g(3) * (-t666 * t963 + t667 * t786) + (t797 * t846 - t802 * t848) * t682 + t929 * t579 + t935 * t544 - t511 * t833) * MDP(31) + (-t614 * t804 - t692 * t833) * MDP(23) + (-t609 * t804 - t682 * t833) * MDP(30) + (-t924 * t614 - t587 * t661 - t558 * t689 + t990 * t692 - t823 * t803 + (-t827 + (pkin(10) * t661 + t558 * t803) * qJD(4) + t810 * t798) * t804 + (-t558 * t911 + t520 * t803 + t767 * t531 + (t692 * t914 + t556) * pkin(10)) * t799) * MDP(25) + (t1006 * t661 + t556 * t949) * MDP(19) + t965 + (t767 * t915 + t715 * t804 + (t701 * t800 - t805 * t833) * t919) * MDP(15) + (t621 * t799 - t804 * t968) * MDP(12) + (-t767 * t913 + t715 * t799 + (-t703 * t800 + t767 * t943) * t919) * MDP(14) + (t517 * t804 + t579 * t833 - t609 * t723 - t682 * t935) * MDP(29) + t767 * MDP(16) * t894 + (t644 * t868 - t691 * t893 + t814 + t823) * MDP(11) + (t645 * t868 - t691 * t894 + t824 + t840) * MDP(10) + (-t805 * t884 + t880) * MDP(7) + (t800 * t884 + t775) * MDP(8) + (t659 * t689 + t661 * t688 + (-t659 * t803 - t661 * t798) * t913 + (-t976 - t557 * t803 + (t659 * t798 - t661 * t803) * qJD(5)) * t799) * MDP(20) + (-t556 * t804 + t852 * t692 + (-t661 * t767 - t692 * t911 + t974) * t799) * MDP(21) + ((t621 + t970) * t804 + (-t622 + t968) * t799) * MDP(13) + (-pkin(3) * t621 - t645 * t703 - t933 * t767 + t565 * t894 + t811 * t804 + (-t767 * t980 - t816) * t799) * MDP(18) + (-t564 * t894 - pkin(3) * t622 - t641 * t767 - t645 * t701 + t811 * t799 + ((t719 + t980) * t767 + t816) * t804) * MDP(17) + (t557 * t804 + t1001 * t692 + (t659 * t767 - t692 * t910 - t975) * t799) * MDP(22) + (-t558 * t688 - t587 * t659 + t739 * t614 + t993 * t692 + ((-qJD(5) * t764 + t588) * t692 - t823) * t798 + (t558 * t798 * qJD(4) - t510 + (qJD(4) * t659 - t975) * pkin(10) - t810 * t803) * t804 + (pkin(10) * t557 + t520 * t798 - t530 * t767 + t558 * t910) * t799) * MDP(24); -t701 ^ 2 * MDP(13) + (t621 - t970) * MDP(14) + (-t622 - t968) * MDP(15) + t715 * MDP(16) + (-t565 * t767 - t825 - t864) * MDP(17) + (g(1) * t577 + g(2) * t575 + g(3) * t635 - t564 * t767 + t626 * t701 - t829) * MDP(18) + (t661 * t870 + t976) * MDP(19) + ((t556 - t973) * t803 + (-t557 - t972) * t798) * MDP(20) + (t692 * t870 + t975) * MDP(21) + (-t692 ^ 2 * t798 + t974) * MDP(22) + (-pkin(4) * t557 - t565 * t659 - t640 * t692 + (t564 * t692 + t832) * t798 - t808 * t803) * MDP(24) + (-pkin(4) * t556 - t565 * t661 + t692 * t939 + t798 * t808 + t803 * t832) * MDP(25) + (t516 * t742 + t843 * t932) * MDP(26) + (-t516 * t741 - t517 * t742 + t579 * t932 + t843 * t931) * MDP(27) + (t609 * t742 - t682 * t932) * MDP(28) + (-t609 * t741 - t682 * t931) * MDP(29) + ((-t770 * t802 - t771 * t797) * t609 + t785 * t517 + t513 * t741 + (t797 * t847 - t802 * t849) * t682 + t856 * t579 + t931 * t544 - t825 * t787) * MDP(31) + (-(-t770 * t797 + t771 * t802) * t609 + t785 * t516 + t513 * t742 + (t797 * t849 + t802 * t847) * t682 - t856 * t843 - t932 * t544 + t825 * t786) * MDP(32) + (MDP(12) * t701 + MDP(13) * t703 - MDP(17) * t626 - MDP(21) * t661 + MDP(22) * t659 - MDP(23) * t692 - MDP(24) * t530 + MDP(25) * t531 + MDP(28) * t843 + MDP(29) * t579 - MDP(30) * t682 - MDP(31) * t511 + MDP(32) * t512) * t703; t661 * t659 * MDP(19) + (-t659 ^ 2 + t661 ^ 2) * MDP(20) + (t556 + t973) * MDP(21) + (-t557 + t972) * MDP(22) + t614 * MDP(23) + (t531 * t692 - t558 * t661 - g(1) * (-t577 * t798 + t632 * t803) - g(2) * (-t575 * t798 + t630 * t803) - g(3) * t572 + t510) * MDP(24) + (t530 * t692 + t558 * t659 - g(1) * (-t577 * t803 - t632 * t798) - g(2) * (-t575 * t803 - t630 * t798) + g(3) * t573 + t827) * MDP(25) + (t516 + t1005) * MDP(28) + (-t517 - t1004) * MDP(29) + (-(-t525 * t797 - t977) * t682 + (-t579 * t661 + t609 * t802 - t682 * t909) * pkin(5) + t505 + t997) * MDP(31) + ((-t526 * t682 - t507) * t797 + (t525 * t682 - t869) * t802 + (-t609 * t797 + t661 * t843 - t682 * t908) * pkin(5) + t998) * MDP(32) + t996; (t898 + t1005) * MDP(28) + (-t874 - t1004) * MDP(29) + (t512 * t682 + t875 + t997) * MDP(31) + (-t802 * t508 + t511 * t682 - t951 + t998) * MDP(32) + (-MDP(28) * t971 + MDP(29) * t843 - MDP(31) * t512 - MDP(32) * t978) * qJD(6) + t996;];
tau  = t1;
