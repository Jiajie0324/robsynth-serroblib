% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRR5_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR5_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_invdynJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:10:06
% EndTime: 2019-03-09 01:10:35
% DurationCPUTime: 14.02s
% Computational Cost: add. (10848->684), mult. (26972->1007), div. (0->0), fcn. (23515->18), ass. (0->325)
t288 = sin(pkin(7));
t296 = sin(qJ(3));
t301 = cos(qJ(3));
t337 = (pkin(3) * t296 - pkin(10) * t301) * t288;
t289 = sin(pkin(6));
t297 = sin(qJ(2));
t446 = t289 * t297;
t392 = qJD(1) * t446;
t503 = qJD(3) * t337 - t288 * t392;
t291 = cos(pkin(7));
t302 = cos(qJ(2));
t432 = t301 * t302;
t438 = t296 * t297;
t334 = -t291 * t438 + t432;
t201 = t334 * t289;
t449 = t288 * t296;
t274 = pkin(9) * t449;
t441 = t291 * t301;
t481 = pkin(2) * t441 - t274;
t501 = qJD(1) * t201 - t481 * qJD(3);
t415 = qJD(2) * t288;
t390 = t301 * t415;
t263 = -qJD(4) + t390;
t442 = t291 * t296;
t448 = t288 * t301;
t420 = pkin(2) * t442 + pkin(9) * t448;
t209 = pkin(10) * t291 + t420;
t350 = -pkin(3) * t301 - pkin(10) * t296;
t210 = (-pkin(2) + t350) * t288;
t295 = sin(qJ(4));
t300 = cos(qJ(4));
t409 = qJD(4) * t300;
t411 = qJD(4) * t295;
t502 = -t209 * t411 + t210 * t409 + t295 * t503 - t501 * t300;
t436 = t297 * t301;
t437 = t296 * t302;
t336 = t291 * t436 + t437;
t200 = t336 * t289;
t423 = -qJD(1) * t200 + t420 * qJD(3);
t416 = qJD(1) * t302;
t249 = qJD(2) * pkin(2) + t289 * t416;
t292 = cos(pkin(6));
t417 = qJD(1) * t292;
t393 = t288 * t417;
t500 = t249 * t291 + t393;
t413 = qJD(3) * t296;
t387 = t288 * t413;
t499 = -pkin(11) * t387 - t502;
t227 = -t300 * t291 + t295 * t449;
t412 = qJD(3) * t301;
t386 = t288 * t412;
t358 = t300 * t386;
t168 = -qJD(4) * t227 + t358;
t228 = t291 * t295 + t300 * t449;
t385 = t295 * t412;
t169 = qJD(4) * t228 + t288 * t385;
t498 = -pkin(4) * t169 + pkin(11) * t168 - t423;
t233 = pkin(9) * t415 + t392;
t141 = t301 * t233 + t249 * t442 + t296 * t393;
t497 = t141 + t263 * (pkin(4) * t295 - pkin(11) * t300);
t294 = sin(qJ(5));
t299 = cos(qJ(5));
t391 = t296 * t415;
t184 = t294 * t300 * t390 - t299 * t391;
t492 = -t294 * t409 + t184;
t433 = t300 * t301;
t185 = (t294 * t296 + t299 * t433) * t415;
t344 = t299 * t409 - t185;
t407 = qJD(5) * t294;
t496 = -t295 * t407 + t344;
t414 = qJD(2) * t291;
t365 = qJD(3) + t414;
t199 = t295 * t365 + t300 * t391;
t155 = t199 * t294 + t299 * t263;
t157 = t199 * t299 - t263 * t294;
t293 = sin(qJ(6));
t298 = cos(qJ(6));
t341 = t155 * t293 - t298 * t157;
t76 = t298 * t155 + t157 * t293;
t495 = t341 * t76;
t494 = t209 * t409 + t210 * t411 - t501 * t295 - t300 * t503;
t406 = qJD(5) * t299;
t493 = t295 * t406 - t492;
t359 = t295 * t391;
t197 = -t300 * t365 + t359;
t478 = qJD(5) + qJD(6);
t491 = t197 + t478;
t490 = -pkin(9) * qJDD(2) * t288 - (qJD(2) * t416 + qJDD(1) * t297) * t289 - t500 * qJD(3);
t489 = t341 ^ 2 - t76 ^ 2;
t404 = qJD(6) * t298;
t405 = qJD(6) * t293;
t401 = qJDD(2) * t291;
t273 = qJDD(3) + t401;
t340 = qJD(4) * t365;
t399 = t296 * qJDD(2);
t377 = t288 * t399;
t117 = qJD(2) * t358 - qJD(4) * t359 + t295 * t273 + (t340 + t377) * t300;
t400 = qJDD(2) * t301;
t271 = t288 * t400;
t403 = qJD(2) * qJD(3);
t380 = t296 * t403;
t211 = t288 * t380 + qJDD(4) - t271;
t53 = t299 * t117 - t199 * t407 + t294 * t211 - t263 * t406;
t54 = qJD(5) * t157 + t117 * t294 - t299 * t211;
t13 = -t155 * t404 - t157 * t405 - t293 * t54 + t298 * t53;
t188 = qJD(5) + t197;
t178 = qJD(6) + t188;
t488 = t178 * t76 + t13;
t463 = sin(pkin(13));
t371 = t463 * t302;
t290 = cos(pkin(13));
t444 = t290 * t297;
t225 = t292 * t444 + t371;
t372 = t463 * t297;
t443 = t290 * t302;
t315 = -t292 * t443 + t372;
t310 = t315 * t301;
t447 = t289 * t290;
t396 = t288 * t447;
t126 = t225 * t296 + t291 * t310 + t301 * t396;
t226 = -t292 * t372 + t443;
t316 = t292 * t371 + t444;
t311 = t316 * t301;
t373 = t289 * t463;
t352 = t288 * t373;
t128 = t226 * t296 + t291 * t311 - t301 * t352;
t335 = t291 * t437 + t436;
t163 = t289 * t335 + t292 * t449;
t445 = t289 * t302;
t224 = -t288 * t445 + t291 * t292;
t131 = t163 * t300 + t224 * t295;
t480 = t291 * t432 - t438;
t162 = -t289 * t480 - t292 * t448;
t123 = pkin(10) * t365 + t141;
t270 = t291 * t417;
t154 = t270 + (qJD(2) * t350 - t249) * t288;
t62 = t300 * t123 + t295 * t154;
t56 = -pkin(11) * t263 + t62;
t140 = -t296 * t233 + t301 * t500;
t122 = -pkin(3) * t365 - t140;
t64 = t197 * pkin(4) - t199 * pkin(11) + t122;
t28 = t294 * t64 + t299 * t56;
t23 = -pkin(12) * t155 + t28;
t21 = t23 * t405;
t287 = qJ(5) + qJ(6);
t282 = sin(t287);
t283 = cos(t287);
t61 = -t295 * t123 + t154 * t300;
t55 = pkin(4) * t263 - t61;
t41 = pkin(5) * t155 + t55;
t127 = t225 * t301 + (-t291 * t315 - t396) * t296;
t164 = t288 * t315 - t291 * t447;
t72 = t127 * t300 + t164 * t295;
t129 = t226 * t301 + (-t291 * t316 + t352) * t296;
t165 = t288 * t316 + t291 * t373;
t74 = t129 * t300 + t165 * t295;
t487 = t41 * t76 - g(1) * (-t128 * t282 - t283 * t74) - g(2) * (-t126 * t282 - t283 * t72) - g(3) * (-t131 * t283 - t162 * t282) + t21;
t118 = -t300 * t273 + t288 * (qJD(2) * (t296 * t409 + t385) + t295 * t399) + t295 * t340;
t110 = qJDD(5) + t118;
t272 = qJDD(1) * t445;
t389 = qJD(2) * t446;
t357 = qJD(1) * t389;
t206 = qJDD(2) * pkin(2) + t272 - t357;
t402 = qJDD(1) * t292;
t378 = t288 * t402;
t312 = -t206 * t442 + t233 * t413 - t296 * t378 + t301 * t490;
t51 = pkin(10) * t273 - t312;
t269 = t291 * t402;
t324 = t380 - t400;
t379 = t301 * t403;
t325 = t379 + t399;
t96 = t269 + (pkin(3) * t324 - pkin(10) * t325 - t206) * t288;
t328 = -t123 * t411 + t154 * t409 + t295 * t96 + t300 * t51;
t16 = pkin(11) * t211 + t328;
t338 = t206 * t441 - t233 * t412 + t296 * t490 + t301 * t378;
t52 = -pkin(3) * t273 - t338;
t26 = pkin(4) * t118 - pkin(11) * t117 + t52;
t7 = -qJD(5) * t28 - t294 * t16 + t299 * t26;
t4 = pkin(5) * t110 - pkin(12) * t53 + t7;
t333 = -t299 * t16 - t294 * t26 - t64 * t406 + t407 * t56;
t5 = -pkin(12) * t54 - t333;
t27 = -t294 * t56 + t299 * t64;
t22 = -pkin(12) * t157 + t27;
t20 = pkin(5) * t188 + t22;
t469 = t23 * t298;
t9 = t20 * t293 + t469;
t2 = -qJD(6) * t9 - t293 * t5 + t298 * t4;
t486 = t41 * t341 - g(1) * (t128 * t283 - t282 * t74) - g(2) * (t126 * t283 - t282 * t72) - g(3) * (-t131 * t282 + t162 * t283) + t2;
t306 = qJD(6) * t341 - t293 * t53 - t298 * t54;
t485 = -t178 * t341 + t306;
t208 = t274 + (-pkin(2) * t301 - pkin(3)) * t291;
t132 = pkin(4) * t227 - pkin(11) * t228 + t208;
t424 = t300 * t209 + t295 * t210;
t134 = -pkin(11) * t448 + t424;
t484 = -t132 * t406 + t134 * t407 + t498 * t294 + t299 * t499;
t464 = -pkin(4) * t387 + t494;
t428 = t294 * t132 + t299 * t134;
t483 = -qJD(5) * t428 + t294 * t499 - t498 * t299;
t473 = pkin(10) * t294;
t482 = -t299 * t497 + t411 * t473;
t238 = t293 * t299 + t294 * t298;
t219 = t238 * t295;
t260 = -pkin(4) * t300 - pkin(11) * t295 - pkin(3);
t215 = qJD(2) * t337;
t427 = t300 * t140 + t295 * t215;
t85 = pkin(11) * t391 + t427;
t479 = -t260 * t406 + t294 * t497 + t299 * t85;
t375 = qJD(6) * t20 + t5;
t477 = t293 * t4 + t298 * t375;
t303 = qJD(2) ^ 2;
t475 = pkin(11) + pkin(12);
t474 = pkin(5) * t295;
t470 = pkin(10) * qJD(4);
t468 = t294 * t53;
t137 = t295 * t140;
t84 = -pkin(4) * t391 - t215 * t300 + t137;
t467 = pkin(5) * t493 + pkin(10) * t409 - t84;
t397 = t294 * t448;
t89 = -qJD(5) * t397 + t168 * t294 + t228 * t406 - t299 * t387;
t466 = pkin(5) * t89 + t464;
t139 = pkin(4) * t199 + pkin(11) * t197;
t465 = t294 * t139 + t299 * t61;
t462 = t110 * t294;
t461 = t110 * t299;
t460 = t155 * t188;
t459 = t157 * t188;
t458 = t197 * t263;
t457 = t197 * t294;
t456 = t199 * t263;
t455 = t224 * t288;
t330 = t263 * t295;
t453 = t282 * t300;
t452 = t283 * t300;
t284 = t288 ^ 2;
t451 = t284 * t303;
t450 = t288 * t295;
t440 = t294 * t295;
t439 = t295 * t299;
t435 = t297 * t303;
t434 = t299 * t300;
t431 = qJDD(1) - g(3);
t237 = t293 * t294 - t298 * t299;
t430 = t184 * t293 - t185 * t298 - t219 * t478 - t237 * t409;
t429 = -t405 * t440 + (t439 * t478 - t492) * t298 + t496 * t293;
t426 = t491 * t237;
t425 = t491 * t238;
t278 = pkin(10) * t434;
t419 = t294 * t260 + t278;
t285 = t296 ^ 2;
t418 = -t301 ^ 2 + t285;
t410 = qJD(4) * t299;
t408 = qJD(5) * t188;
t394 = qJD(5) * t475;
t381 = t288 * t291 * t303;
t370 = t299 * t132 - t134 * t294;
t368 = -t295 * t209 + t210 * t300;
t367 = t188 * t299;
t366 = t123 * t409 + t154 * t411 + t295 * t51 - t300 * t96;
t364 = qJD(3) + 0.2e1 * t414;
t363 = t273 + t401;
t362 = t284 * t289 * t435;
t360 = t288 * t389;
t355 = -t62 + (t407 + t457) * pkin(5);
t170 = t228 * t294 + t299 * t448;
t42 = -pkin(12) * t170 + t428;
t88 = -qJD(5) * t170 + t168 * t299 + t294 * t387;
t354 = -pkin(5) * t169 + pkin(12) * t88 + qJD(6) * t42 - t483;
t171 = t228 * t299 - t397;
t36 = pkin(5) * t227 - pkin(12) * t171 + t370;
t353 = pkin(12) * t89 - qJD(6) * t36 + t484;
t172 = -pkin(12) * t440 + t419;
t351 = -pkin(12) * t185 + qJD(6) * t172 - t294 * t85 + t390 * t474 - (-pkin(12) * t434 + t474) * qJD(4) - (-t278 + (pkin(12) * t295 - t260) * t294) * qJD(5) - t482;
t348 = g(1) * t226 + g(2) * t225;
t235 = t299 * t260;
t161 = -pkin(12) * t439 + t235 + (-pkin(5) - t473) * t300;
t347 = -qJD(6) * t161 - (-t295 * t410 - t300 * t407) * pkin(10) + t479 + t493 * pkin(12);
t266 = t475 * t294;
t346 = pkin(12) * t457 + qJD(6) * t266 + t294 * t394 + t465;
t136 = t299 * t139;
t267 = t475 * t299;
t345 = pkin(5) * t199 + qJD(6) * t267 - t294 * t61 + t136 + (pkin(12) * t197 + t394) * t299;
t133 = pkin(4) * t448 - t368;
t69 = -t131 * t294 + t162 * t299;
t70 = t131 * t299 + t162 * t294;
t343 = -t293 * t70 + t298 * t69;
t342 = t293 * t69 + t298 * t70;
t130 = t163 * t295 - t224 * t300;
t101 = t298 * t170 + t171 * t293;
t102 = -t170 * t293 + t171 * t298;
t17 = -pkin(4) * t211 + t366;
t329 = -pkin(11) * t110 + t188 * t55;
t326 = g(1) * (-t129 * t295 + t165 * t300) + g(2) * (-t127 * t295 + t164 * t300) - g(3) * t130;
t322 = g(1) * t128 + g(2) * t126 + g(3) * t162;
t321 = g(1) * t129 + g(2) * t127 + g(3) * t163;
t147 = -t225 * t442 - t310;
t149 = -t226 * t442 - t311;
t320 = g(1) * t149 + g(2) * t147 + g(3) * t201;
t314 = t322 - t52;
t309 = -pkin(10) * t211 - t122 * t263;
t308 = pkin(10) * t408 - t322;
t305 = pkin(11) * t408 + t17 + t326;
t281 = -pkin(5) * t299 - pkin(4);
t247 = (pkin(5) * t294 + pkin(10)) * t295;
t220 = t237 * t295;
t187 = -t249 * t288 + t270;
t159 = -t206 * t288 + t269;
t158 = t201 * t300 + t446 * t450;
t148 = t226 * t441 - t296 * t316;
t146 = t225 * t441 - t296 * t315;
t114 = t292 * t386 + (t334 * qJD(2) + qJD(3) * t480) * t289;
t113 = t292 * t387 + (qJD(2) * t336 + qJD(3) * t335) * t289;
t105 = qJDD(6) + t110;
t98 = t149 * t300 + t226 * t450;
t97 = t147 * t300 + t225 * t450;
t80 = pkin(5) * t170 + t133;
t44 = -qJD(4) * t130 + t114 * t300 + t295 * t360;
t43 = qJD(4) * t131 + t114 * t295 - t300 * t360;
t30 = qJD(6) * t102 + t293 * t88 + t298 * t89;
t29 = -qJD(6) * t101 - t293 * t89 + t298 * t88;
t19 = qJD(5) * t69 + t113 * t294 + t299 * t44;
t18 = -qJD(5) * t70 + t113 * t299 - t294 * t44;
t10 = pkin(5) * t54 + t17;
t8 = t20 * t298 - t23 * t293;
t1 = -t21 + t477;
t3 = [t431, 0 (qJDD(2) * t302 - t435) * t289 (-qJDD(2) * t297 - t302 * t303) * t289, 0, 0, 0, 0, 0, -t113 * t365 - t162 * t273 - t301 * t362 + t324 * t455, -t114 * t365 - t163 * t273 + t296 * t362 + t325 * t455, 0, 0, 0, 0, 0, t113 * t197 + t118 * t162 - t130 * t211 + t263 * t43, t113 * t199 + t117 * t162 - t131 * t211 + t263 * t44, 0, 0, 0, 0, 0, t110 * t69 + t130 * t54 + t155 * t43 + t18 * t188, -t110 * t70 + t130 * t53 + t157 * t43 - t188 * t19, 0, 0, 0, 0, 0 (-qJD(6) * t342 + t18 * t298 - t19 * t293) * t178 + t343 * t105 + t43 * t76 - t130 * t306 -(qJD(6) * t343 + t18 * t293 + t19 * t298) * t178 - t342 * t105 - t43 * t341 + t130 * t13; 0, qJDD(2), g(1) * t316 + g(2) * t315 - g(3) * t445 + t272, -t431 * t446 + t348 (qJDD(2) * t285 + 0.2e1 * t296 * t379) * t284, 0.2e1 * (t301 * t399 - t403 * t418) * t284 (t296 * t363 + t364 * t412) * t288 (t301 * t363 - t364 * t413) * t288, t273 * t291, t481 * t273 + t338 * t291 + (-t159 * t301 + t187 * t413) * t288 + (-pkin(2) * t324 + t301 * t357) * t284 - t320 - t423 * t365, -t420 * t273 + t312 * t291 + g(1) * t148 + g(2) * t146 + g(3) * t200 + (t159 * t296 + t187 * t412) * t288 + (-pkin(2) * t325 - t296 * t357) * t284 + t501 * t365, t117 * t228 + t168 * t199, -t117 * t227 - t118 * t228 - t168 * t197 - t169 * t199, -t168 * t263 + t211 * t228 + (-t117 * t301 + t199 * t413) * t288, t169 * t263 - t211 * t227 + (t118 * t301 - t197 * t413) * t288 (-t211 * t301 - t263 * t413) * t288, t368 * t211 + t208 * t118 + t52 * t227 + t122 * t169 - g(1) * t98 - g(2) * t97 - g(3) * t158 + (t301 * t366 + t413 * t61) * t288 + t494 * t263 + t423 * t197, t208 * t117 + t52 * t228 + t122 * t168 - t424 * t211 + t320 * t295 + (t328 * t301 - t62 * t413 + (-g(3) * t446 - t348) * t300) * t288 + t502 * t263 + t423 * t199, t157 * t88 + t171 * t53, -t155 * t88 - t157 * t89 - t170 * t53 - t171 * t54, t110 * t171 + t157 * t169 + t188 * t88 + t227 * t53, -t110 * t170 - t155 * t169 - t188 * t89 - t227 * t54, t110 * t227 + t169 * t188, t370 * t110 + t7 * t227 + t27 * t169 + t133 * t54 + t17 * t170 + t55 * t89 - g(1) * (t148 * t294 + t299 * t98) - g(2) * (t146 * t294 + t299 * t97) - g(3) * (t158 * t299 + t200 * t294) + t483 * t188 + t464 * t155, -t428 * t110 + t333 * t227 - t28 * t169 + t133 * t53 + t17 * t171 + t55 * t88 - g(1) * (t148 * t299 - t294 * t98) - g(2) * (t146 * t299 - t294 * t97) - g(3) * (-t158 * t294 + t200 * t299) + t484 * t188 + t464 * t157, t102 * t13 - t29 * t341, -t101 * t13 + t102 * t306 - t29 * t76 + t30 * t341, t102 * t105 + t13 * t227 - t169 * t341 + t178 * t29, -t101 * t105 - t169 * t76 - t178 * t30 + t227 * t306, t105 * t227 + t169 * t178 (-t293 * t42 + t298 * t36) * t105 + t2 * t227 + t8 * t169 - t80 * t306 + t10 * t101 + t41 * t30 - g(1) * (t148 * t282 + t283 * t98) - g(2) * (t146 * t282 + t283 * t97) - g(3) * (t158 * t283 + t200 * t282) + t466 * t76 + (t293 * t353 - t298 * t354) * t178 -(t293 * t36 + t298 * t42) * t105 - t1 * t227 - t9 * t169 + t80 * t13 + t10 * t102 + t41 * t29 - g(1) * (t148 * t283 - t282 * t98) - g(2) * (t146 * t283 - t282 * t97) - g(3) * (-t158 * t282 + t200 * t283) - t466 * t341 + (t293 * t354 + t298 * t353) * t178; 0, 0, 0, 0, -t296 * t301 * t451, t418 * t451, -t301 * t381 + t377, t296 * t381 + t271, t273, t141 * t365 - t187 * t391 + t322 + t338, t140 * t365 - t187 * t390 + t312 + t321, t117 * t295 - t300 * t456 (t117 + t458) * t300 + (-t118 + t456) * t295, -t263 * t409 + t211 * t295 + (-t199 * t296 + t263 * t433) * t415, t263 * t411 + t211 * t300 + (t197 * t296 - t301 * t330) * t415, t263 * t391, -t61 * t391 - pkin(3) * t118 - t137 * t263 - t141 * t197 + t309 * t295 + ((t215 + t470) * t263 + t314) * t300, -pkin(3) * t117 - t141 * t199 - t427 * t263 + t62 * t391 + t309 * t300 + (-t263 * t470 - t314) * t295, t157 * t496 + t53 * t439, t155 * t185 + t157 * t184 + (-t155 * t299 - t157 * t294) * t409 + (-t468 - t299 * t54 + (t155 * t294 - t157 * t299) * qJD(5)) * t295, -t300 * t53 + t344 * t188 + (-t157 * t263 - t188 * t407 + t461) * t295, t300 * t54 + t492 * t188 + (t155 * t263 - t188 * t406 - t462) * t295, -t110 * t300 - t188 * t330, t235 * t110 - t84 * t155 - t55 * t184 + t482 * t188 + ((-qJD(5) * t260 + t85) * t188 - t321) * t294 + (t55 * t294 * qJD(4) - t7 + (qJD(4) * t155 - t462) * pkin(10) - t308 * t299) * t300 + (pkin(10) * t54 + t17 * t294 - t263 * t27 + t406 * t55) * t295, -t419 * t110 - t84 * t157 - t55 * t185 + t479 * t188 - t321 * t299 + (-t333 + (pkin(10) * t157 + t299 * t55) * qJD(4) + t308 * t294) * t300 + (-t55 * t407 + t17 * t299 + t263 * t28 + (t188 * t410 + t53) * pkin(10)) * t295, -t13 * t220 - t341 * t430, -t13 * t219 - t220 * t306 + t341 * t429 - t430 * t76, -t105 * t220 - t13 * t300 + t178 * t430 + t330 * t341, -t105 * t219 - t178 * t429 - t300 * t306 + t330 * t76, -t105 * t300 - t178 * t330 (t161 * t298 - t172 * t293) * t105 - t2 * t300 - t247 * t306 + t10 * t219 - g(1) * (-t128 * t452 + t129 * t282) - g(2) * (-t126 * t452 + t127 * t282) - g(3) * (-t162 * t452 + t163 * t282) + t467 * t76 + t429 * t41 - t8 * t330 + (t293 * t347 - t298 * t351) * t178 -(t161 * t293 + t172 * t298) * t105 + t1 * t300 + t247 * t13 - t10 * t220 - g(1) * (t128 * t453 + t129 * t283) - g(2) * (t126 * t453 + t127 * t283) - g(3) * (t162 * t453 + t163 * t283) - t467 * t341 + t430 * t41 + t9 * t330 + (t293 * t351 + t298 * t347) * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199 * t197, -t197 ^ 2 + t199 ^ 2, t117 - t458, -t118 - t456, t211, -t122 * t199 - t263 * t62 - t326 - t366, g(1) * t74 + g(2) * t72 + g(3) * t131 + t122 * t197 - t263 * t61 - t328, t157 * t367 + t468 (t53 - t460) * t299 + (-t54 - t459) * t294, -t157 * t199 + t188 * t367 + t462, -t188 ^ 2 * t294 + t155 * t199 + t461, -t188 * t199, -pkin(4) * t54 - t136 * t188 - t62 * t155 - t27 * t199 + (t61 * t188 + t329) * t294 - t305 * t299, -pkin(4) * t53 - t62 * t157 + t188 * t465 + t28 * t199 + t294 * t305 + t299 * t329, t13 * t238 + t341 * t426, -t13 * t237 + t238 * t306 + t341 * t425 + t426 * t76, t105 * t238 - t178 * t426 + t199 * t341, -t105 * t237 - t178 * t425 + t199 * t76, -t178 * t199 (-t266 * t298 - t267 * t293) * t105 - t281 * t306 + t10 * t237 - t8 * t199 + t355 * t76 + t425 * t41 + (t293 * t346 - t298 * t345) * t178 - t326 * t283 -(-t266 * t293 + t267 * t298) * t105 + t281 * t13 + t10 * t238 + t9 * t199 - t355 * t341 - t426 * t41 + (t293 * t345 + t298 * t346) * t178 + t326 * t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157 * t155, -t155 ^ 2 + t157 ^ 2, t53 + t460, t459 - t54, t110, t28 * t188 - t55 * t157 - g(1) * (t128 * t299 - t294 * t74) - g(2) * (t126 * t299 - t294 * t72) - g(3) * t69 + t7, t27 * t188 + t55 * t155 - g(1) * (-t128 * t294 - t299 * t74) - g(2) * (-t126 * t294 - t299 * t72) + g(3) * t70 + t333, -t495, t489, t488, t485, t105 -(-t22 * t293 - t469) * t178 + (t105 * t298 - t157 * t76 - t178 * t405) * pkin(5) + t486 (-t178 * t23 - t4) * t293 + (t178 * t22 - t375) * t298 + (-t105 * t293 + t157 * t341 - t178 * t404) * pkin(5) + t487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, t489, t488, t485, t105, t178 * t9 + t486, t178 * t8 - t477 + t487;];
tau_reg  = t3;
