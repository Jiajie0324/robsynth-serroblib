% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 12:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRRRR5_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR5_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR5_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_invdynJ_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 12:02:05
% EndTime: 2019-05-05 12:02:27
% DurationCPUTime: 10.70s
% Computational Cost: add. (89337->591), mult. (184598->915), div. (0->0), fcn. (151835->16), ass. (0->397)
t312 = sin(qJ(6));
t311 = cos(pkin(7));
t390 = qJD(2) * t311;
t305 = qJD(3) + t390;
t314 = sin(qJ(4));
t319 = cos(qJ(4));
t309 = sin(pkin(7));
t315 = sin(qJ(3));
t389 = qJD(2) * t315;
t373 = t309 * t389;
t284 = t305 * t314 + t319 * t373;
t320 = cos(qJ(3));
t388 = qJD(2) * t320;
t372 = t309 * t388;
t300 = -qJD(4) + t372;
t313 = sin(qJ(5));
t318 = cos(qJ(5));
t265 = t284 * t313 + t318 * t300;
t266 = t284 * t318 - t300 * t313;
t317 = cos(qJ(6));
t231 = t317 * t265 + t266 * t312;
t233 = -t265 * t312 + t266 * t317;
t192 = t233 * t231;
t380 = qJDD(2) * t315;
t289 = (qJD(3) * t388 + t380) * t309;
t304 = qJDD(2) * t311 + qJDD(3);
t367 = t289 * t314 - t319 * t304;
t250 = -qJD(4) * t284 - t367;
t249 = qJDD(5) - t250;
t248 = qJDD(6) + t249;
t433 = -t192 + t248;
t441 = t312 * t433;
t236 = t266 * t265;
t431 = -t236 + t249;
t440 = t313 * t431;
t439 = t317 * t433;
t438 = t318 * t431;
t316 = sin(qJ(2));
t413 = sin(pkin(13));
t414 = cos(pkin(13));
t339 = -g(1) * t414 - g(2) * t413;
t423 = cos(qJ(2));
t310 = sin(pkin(6));
t338 = g(1) * t413 - g(2) * t414;
t415 = cos(pkin(6));
t331 = t415 * t338;
t393 = -g(3) + qJDD(1);
t430 = t310 * t393 + t331;
t262 = -t316 * t339 + t423 * t430;
t421 = pkin(9) * t309;
t426 = qJD(2) ^ 2;
t324 = qJDD(2) * pkin(2) + t421 * t426 + t262;
t327 = -t310 * t338 + t393 * t415;
t437 = t309 * t327 + t311 * t324;
t306 = t309 ^ 2;
t436 = t306 * (-t305 + t390);
t301 = qJD(3) * t373;
t381 = qJDD(2) * t309;
t361 = t320 * t381 - t301;
t343 = -qJDD(4) + t361;
t282 = -t319 * t305 + t314 * t373;
t398 = t284 * t282;
t336 = -t343 - t398;
t435 = t314 * t336;
t434 = t319 * t336;
t345 = -t289 * t319 - t304 * t314;
t251 = -qJD(4) * t282 - t345;
t330 = -t318 * t251 + t313 * t343;
t207 = -t265 * qJD(5) - t330;
t329 = -t313 * t251 - t318 * t343;
t328 = t266 * qJD(5) - t329;
t148 = -t231 * qJD(6) + t317 * t207 - t312 * t328;
t279 = qJD(5) + t282;
t276 = qJD(6) + t279;
t213 = t276 * t231;
t432 = -t213 + t148;
t247 = t279 * t265;
t183 = t247 + t207;
t273 = t282 * t300;
t225 = t251 + t273;
t368 = t207 * t312 + t317 * t328;
t114 = (qJD(6) - t276) * t233 + t368;
t179 = (qJD(5) - t279) * t266 - t329;
t222 = (qJD(4) + t300) * t284 + t367;
t229 = t231 ^ 2;
t230 = t233 ^ 2;
t429 = t265 ^ 2;
t264 = t266 ^ 2;
t275 = t276 ^ 2;
t277 = t279 ^ 2;
t280 = t282 ^ 2;
t281 = t284 ^ 2;
t428 = t300 ^ 2;
t427 = t305 ^ 2;
t322 = t437 * t315;
t263 = t316 * t430 + t423 * t339;
t255 = -pkin(2) * t426 + pkin(9) * t381 + t263;
t420 = t320 * pkin(3);
t364 = -pkin(10) * t315 - t420;
t391 = qJD(2) * t309;
t363 = t364 * t391 ^ 2 + t255;
t190 = -pkin(3) * t427 + t304 * pkin(10) + t320 * t363 + t322;
t325 = t311 * t327;
t321 = t325 - t289 * pkin(10) + t301 * pkin(3) + ((-pkin(2) - t420) * qJDD(2) + (-pkin(9) * t391 + (pkin(3) * t315 - pkin(10) * t320) * t305) * qJD(2) - t262) * t309;
t151 = t319 * t190 + t314 * t321;
t256 = pkin(4) * t282 - pkin(11) * t284;
t123 = -pkin(4) * t428 - pkin(11) * t343 - t282 * t256 + t151;
t392 = t437 * t320;
t189 = -t304 * pkin(3) - t427 * pkin(10) + t315 * t363 - t392;
t141 = -t225 * pkin(11) + (-t284 * t300 - t250) * pkin(4) + t189;
t87 = t123 * t313 - t318 * t141;
t64 = pkin(5) * t431 - pkin(12) * t183 - t87;
t241 = pkin(5) * t279 - pkin(12) * t266;
t88 = t318 * t123 + t313 * t141;
t69 = -pkin(5) * t429 - pkin(12) * t328 - t279 * t241 + t88;
t36 = t312 * t69 - t317 * t64;
t37 = t312 * t64 + t317 * t69;
t20 = t312 * t37 - t317 * t36;
t425 = pkin(5) * t20;
t117 = t213 + t148;
t77 = -t114 * t312 - t117 * t317;
t424 = pkin(5) * t77;
t422 = pkin(4) * t314;
t419 = t20 * t313;
t418 = t20 * t318;
t150 = t190 * t314 - t319 * t321;
t122 = t343 * pkin(4) - t428 * pkin(11) + t256 * t284 + t150;
t91 = pkin(5) * t328 - pkin(12) * t429 + t241 * t266 + t122;
t417 = t312 * t91;
t416 = t317 * t91;
t412 = t122 * t313;
t411 = t122 * t318;
t163 = t192 + t248;
t410 = t163 * t312;
t409 = t163 * t317;
t408 = t189 * t314;
t407 = t189 * t319;
t196 = t236 + t249;
t406 = t196 * t313;
t405 = t196 * t318;
t244 = t343 - t398;
t404 = t244 * t314;
t403 = t244 * t319;
t402 = t276 * t312;
t401 = t276 * t317;
t400 = t279 * t313;
t399 = t279 * t318;
t397 = t300 * t314;
t396 = t300 * t319;
t387 = t306 * t426;
t299 = t315 * t320 * t387;
t286 = t299 + t304;
t395 = t315 * t286;
t287 = -t299 + t304;
t394 = t320 * t287;
t386 = qJD(4) - t300;
t383 = qJD(5) + t279;
t379 = t314 * t192;
t378 = t319 * t192;
t377 = t314 * t236;
t376 = t319 * t236;
t375 = t320 * t398;
t374 = -pkin(4) * t319 - pkin(3);
t307 = t315 ^ 2;
t371 = t307 * t387;
t308 = t320 ^ 2;
t370 = t308 * t387;
t21 = t312 * t36 + t317 * t37;
t50 = t313 * t87 + t318 * t88;
t99 = t150 * t314 + t319 * t151;
t365 = -pkin(4) * t122 + pkin(11) * t50;
t11 = t21 * t313 + t418;
t12 = t21 * t318 - t419;
t9 = t12 * t319 + t314 * t91;
t362 = -t11 * t320 + t315 * t9;
t49 = t313 * t88 - t318 * t87;
t157 = -t229 - t230;
t79 = -t114 * t317 + t117 * t312;
t47 = -t313 * t77 + t318 * t79;
t39 = t157 * t314 + t319 * t47;
t45 = t313 * t79 + t318 * t77;
t360 = t315 * t39 - t320 * t45;
t41 = t122 * t314 + t319 * t50;
t359 = t315 * t41 - t320 * t49;
t113 = (qJD(6) + t276) * t233 + t368;
t173 = -t275 - t229;
t124 = t173 * t312 + t439;
t125 = t173 * t317 - t441;
t83 = -t124 * t313 + t125 * t318;
t56 = t113 * t314 + t319 * t83;
t82 = t124 * t318 + t125 * t313;
t358 = t315 * t56 - t320 * t82;
t198 = -t230 - t275;
t136 = t198 * t317 - t410;
t137 = -t198 * t312 - t409;
t90 = -t136 * t313 + t137 * t318;
t58 = t314 * t432 + t319 * t90;
t89 = t136 * t318 + t137 * t313;
t357 = t315 * t58 - t320 * t89;
t356 = -t189 * t320 + t315 * t99;
t134 = -t179 * t318 + t183 * t313;
t208 = t264 + t429;
t104 = t134 * t319 - t208 * t314;
t132 = -t179 * t313 - t183 * t318;
t355 = t104 * t315 - t132 * t320;
t217 = -t277 - t429;
t159 = t217 * t318 - t440;
t181 = -t266 * t383 + t329;
t120 = t159 * t319 - t181 * t314;
t158 = t217 * t313 + t438;
t354 = t120 * t315 - t158 * t320;
t228 = -t264 - t277;
t161 = -t228 * t313 - t405;
t184 = t265 * t383 + t330;
t127 = t161 * t319 - t184 * t314;
t160 = t228 * t318 - t406;
t353 = t127 * t315 - t160 * t320;
t98 = -t150 * t319 + t151 * t314;
t226 = t251 - t273;
t187 = -t222 * t319 + t226 * t314;
t240 = t280 + t281;
t352 = t187 * t315 + t240 * t320;
t199 = t255 * t315 - t392;
t200 = t320 * t255 + t322;
t351 = -t199 * t320 + t200 * t315;
t155 = t315 * t199 + t200 * t320;
t252 = -t428 - t280;
t205 = t252 * t319 - t435;
t223 = -t284 * t386 - t367;
t350 = t205 * t315 + t223 * t320;
t258 = -t281 - t428;
t210 = -t258 * t314 + t403;
t227 = t282 * t386 + t345;
t349 = t210 * t315 + t227 * t320;
t294 = t305 * t372;
t270 = -t294 + t289;
t293 = t305 * t373;
t271 = t293 + t361;
t348 = -t270 * t320 + t271 * t315;
t278 = -t371 - t427;
t347 = t278 * t320 - t287 * t315;
t290 = -t370 - t427;
t346 = t286 * t320 + t290 * t315;
t344 = pkin(5) * t124 - t36;
t342 = pkin(4) * t181 + pkin(11) * t159 - t411;
t341 = pkin(4) * t184 + pkin(11) * t161 + t412;
t340 = pkin(5) * t136 - t37;
t337 = pkin(4) * t208 + pkin(11) * t134 + t50;
t51 = -pkin(5) * t113 + pkin(12) * t125 - t416;
t61 = -pkin(12) * t124 + t417;
t335 = -pkin(4) * t113 + pkin(11) * t83 + t313 * t61 + t318 * t51;
t53 = -pkin(5) * t432 + pkin(12) * t137 + t417;
t68 = -pkin(12) * t136 + t416;
t334 = -pkin(4) * t432 + pkin(11) * t90 + t313 * t68 + t318 * t53;
t17 = -pkin(5) * t157 + pkin(12) * t79 + t21;
t18 = -pkin(12) * t77 - t20;
t333 = -pkin(4) * t157 + pkin(11) * t47 + t17 * t318 + t18 * t313;
t19 = -pkin(5) * t91 + pkin(12) * t21;
t332 = -pkin(4) * t91 + pkin(11) * t12 - pkin(12) * t419 + t19 * t318;
t292 = (-t307 - t308) * t387;
t291 = (t307 - t308) * t387;
t272 = -t293 + t361;
t269 = (t380 + (qJD(3) + t305) * t388) * t309;
t268 = -t281 + t428;
t267 = t280 - t428;
t260 = t290 * t320 - t395;
t257 = t281 - t280;
t254 = -t315 * t278 - t394;
t243 = -t264 + t277;
t242 = -t277 + t429;
t239 = (t282 * t314 + t284 * t319) * t300;
t238 = t315 * t270 + t271 * t320;
t237 = t309 * t324 - t325;
t235 = t264 - t429;
t234 = t309 * t272 + t311 * t346;
t221 = -t309 * t269 + t311 * t347;
t220 = t251 * t314 - t284 * t396;
t219 = t250 * t319 - t282 * t397;
t218 = -t309 * t292 + t311 * t348;
t216 = t267 * t314 - t403;
t215 = t268 * t319 + t435;
t212 = -t230 + t275;
t211 = t229 - t275;
t209 = t258 * t319 + t404;
t204 = t252 * t314 + t434;
t202 = (-t265 * t318 + t266 * t313) * t279;
t201 = (-t265 * t313 - t266 * t318) * t279;
t191 = t230 - t229;
t186 = -t222 * t314 - t226 * t319;
t185 = t223 * t314 + t225 * t319;
t182 = -t247 + t207;
t178 = t207 * t318 - t266 * t400;
t177 = t207 * t313 + t266 * t399;
t176 = t265 * t399 + t313 * t328;
t175 = -t265 * t400 + t318 * t328;
t174 = t202 * t314 - t249 * t319;
t172 = t242 * t318 - t406;
t171 = -t243 * t313 + t438;
t170 = t242 * t313 + t405;
t169 = t243 * t318 + t440;
t168 = t210 * t320 - t315 * t227;
t167 = t205 * t320 - t315 * t223;
t166 = (-t231 * t317 + t233 * t312) * t276;
t165 = (-t231 * t312 - t233 * t317) * t276;
t156 = t187 * t320 - t315 * t240;
t154 = t178 * t314 - t376;
t153 = t176 * t314 + t376;
t152 = -t309 * t209 + t311 * t349;
t147 = -qJD(6) * t233 - t368;
t146 = t211 * t317 - t410;
t145 = -t212 * t312 + t439;
t144 = t211 * t312 + t409;
t143 = t212 * t317 + t441;
t142 = -t309 * t204 + t311 * t350;
t138 = t309 * t237 + t311 * t351;
t135 = t181 * t318 - t182 * t313;
t133 = t181 * t313 + t182 * t318;
t131 = pkin(3) * t227 + pkin(10) * t210 + t408;
t130 = pkin(3) * t223 + pkin(10) * t205 - t407;
t129 = t172 * t314 + t179 * t319;
t128 = t171 * t314 - t183 * t319;
t126 = t161 * t314 + t184 * t319;
t119 = t159 * t314 + t181 * t319;
t112 = -t309 * t186 + t311 * t352;
t111 = t148 * t317 - t233 * t402;
t110 = t148 * t312 + t233 * t401;
t109 = -t147 * t312 + t231 * t401;
t108 = t147 * t317 + t231 * t402;
t107 = -t165 * t313 + t166 * t318;
t106 = t165 * t318 + t166 * t313;
t105 = t135 * t314 - t235 * t319;
t103 = t134 * t314 + t208 * t319;
t102 = t107 * t314 - t248 * t319;
t101 = t127 * t320 + t315 * t160;
t100 = -pkin(11) * t160 + t411;
t97 = -pkin(11) * t158 + t412;
t96 = t120 * t320 + t315 * t158;
t95 = -t144 * t313 + t146 * t318;
t94 = -t143 * t313 + t145 * t318;
t93 = t144 * t318 + t146 * t313;
t92 = t143 * t318 + t145 * t313;
t85 = -pkin(3) * t189 + pkin(10) * t99;
t84 = t315 * t189 + t320 * t99;
t81 = t104 * t320 + t315 * t132;
t80 = -t113 * t317 - t312 * t432;
t78 = -t113 * t312 + t317 * t432;
t76 = -t110 * t313 + t111 * t318;
t75 = -t108 * t313 + t109 * t318;
t74 = t110 * t318 + t111 * t313;
t73 = t108 * t318 + t109 * t313;
t72 = pkin(3) * t240 + pkin(10) * t187 + t99;
t71 = -pkin(4) * t160 + t88;
t70 = -pkin(4) * t158 + t87;
t67 = -t309 * t126 + t311 * t353;
t66 = t314 * t76 - t378;
t65 = t314 * t75 + t378;
t62 = -t309 * t119 + t311 * t354;
t60 = t114 * t319 + t314 * t95;
t59 = -t117 * t319 + t314 * t94;
t57 = t314 * t90 - t319 * t432;
t55 = -t113 * t319 + t314 * t83;
t54 = -t309 * t103 + t311 * t355;
t52 = -t309 * t98 + t311 * t356;
t48 = -t313 * t78 + t318 * t80;
t46 = t313 * t80 + t318 * t78;
t44 = t315 * t89 + t320 * t58;
t43 = -pkin(11) * t132 - t49;
t42 = -t191 * t319 + t314 * t48;
t40 = -t122 * t319 + t314 * t50;
t38 = -t157 * t319 + t314 * t47;
t34 = t315 * t82 + t320 * t56;
t33 = -pkin(3) * t160 + pkin(10) * t127 + t100 * t314 + t319 * t71;
t32 = -pkin(3) * t158 + pkin(10) * t120 + t314 * t97 + t319 * t70;
t31 = -pkin(4) * t45 - t424;
t30 = -t309 * t57 + t311 * t357;
t29 = pkin(10) * t104 + t132 * t374 + t314 * t43;
t28 = -pkin(4) * t89 - t340;
t27 = -pkin(11) * t89 - t313 * t53 + t318 * t68;
t26 = -pkin(4) * t82 - t344;
t25 = -t309 * t55 + t311 * t358;
t24 = -pkin(11) * t82 - t313 * t51 + t318 * t61;
t23 = t315 * t49 + t320 * t41;
t22 = t315 * t45 + t320 * t39;
t16 = -t309 * t40 + t311 * t359;
t15 = -t309 * t38 + t311 * t360;
t14 = pkin(10) * t41 + (-pkin(11) * t314 + t374) * t49;
t13 = -pkin(3) * t89 + pkin(10) * t58 + t27 * t314 + t28 * t319;
t10 = -pkin(3) * t82 + pkin(10) * t56 + t24 * t314 + t26 * t319;
t8 = t12 * t314 - t319 * t91;
t7 = -pkin(11) * t45 - t17 * t313 + t18 * t318;
t6 = -pkin(4) * t11 - t425;
t5 = -pkin(11) * t11 - pkin(12) * t418 - t19 * t313;
t4 = t315 * t11 + t320 * t9;
t3 = -pkin(3) * t45 + pkin(10) * t39 + t31 * t319 + t314 * t7;
t2 = -t309 * t8 + t311 * t362;
t1 = -pkin(3) * t11 + pkin(10) * t9 + t314 * t5 + t319 * t6;
t35 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t393, 0, 0, 0, 0, 0, 0, (qJDD(2) * t423 - t316 * t426) * t310, (-qJDD(2) * t316 - t423 * t426) * t310, 0, t415 ^ 2 * t393 + (t262 * t423 + t316 * t263 - t331) * t310, 0, 0, 0, 0, 0, 0, t415 * (-t311 * t272 + t309 * t346) + (t234 * t423 + t316 * t260) * t310, t415 * (t311 * t269 + t309 * t347) + (t221 * t423 + t316 * t254) * t310, t415 * (t311 * t292 + t309 * t348) + (t218 * t423 + t316 * t238) * t310, t415 * (-t311 * t237 + t309 * t351) + (t138 * t423 + t316 * t155) * t310, 0, 0, 0, 0, 0, 0, t415 * (t311 * t204 + t309 * t350) + (t142 * t423 + t316 * t167) * t310, t415 * (t311 * t209 + t309 * t349) + (t152 * t423 + t316 * t168) * t310, t415 * (t311 * t186 + t309 * t352) + (t112 * t423 + t316 * t156) * t310, t415 * (t309 * t356 + t311 * t98) + (t316 * t84 + t423 * t52) * t310, 0, 0, 0, 0, 0, 0, t415 * (t311 * t119 + t309 * t354) + (t316 * t96 + t423 * t62) * t310, t415 * (t311 * t126 + t309 * t353) + (t316 * t101 + t423 * t67) * t310, t415 * (t311 * t103 + t309 * t355) + (t316 * t81 + t423 * t54) * t310, t415 * (t309 * t359 + t311 * t40) + (t16 * t423 + t316 * t23) * t310, 0, 0, 0, 0, 0, 0, t415 * (t309 * t358 + t311 * t55) + (t25 * t423 + t316 * t34) * t310, t415 * (t309 * t357 + t311 * t57) + (t30 * t423 + t316 * t44) * t310, t415 * (t309 * t360 + t311 * t38) + (t15 * t423 + t316 * t22) * t310, t415 * (t309 * t362 + t311 * t8) + (t2 * t423 + t316 * t4) * t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t262, -t263, 0, 0, (t289 * t309 - t388 * t436) * t315, t311 * t291 + (t315 * t272 + (t289 + t294) * t320) * t309, t311 * t270 + (t395 + t320 * (-t371 + t427)) * t309, (t309 * t361 + t389 * t436) * t320, t311 * t271 + (t315 * (t370 - t427) + t394) * t309, t311 * t304, pkin(2) * t234 - t311 * t199 + (pkin(9) * t260 + t237 * t320) * t309, pkin(2) * t221 - t200 * t311 + (pkin(9) * t254 - t237 * t315) * t309, pkin(2) * t218 + (pkin(9) * t238 + t155) * t309, pkin(2) * t138 + t155 * t421, t311 * t220 + (t315 * (t251 * t319 + t284 * t397) - t375) * t309, t311 * t185 + (t315 * (t223 * t319 - t225 * t314) - t320 * t257) * t309, t311 * t215 + (t315 * (-t268 * t314 + t434) - t320 * t226) * t309, t311 * t219 + (t315 * (-t250 * t314 - t282 * t396) + t375) * t309, t311 * t216 + (t315 * (t267 * t319 + t404) + t320 * t222) * t309, t311 * t239 + (t320 * t343 + t315 * (t282 * t319 - t284 * t314) * t300) * t309, pkin(2) * t142 + t311 * t130 + (t315 * (-pkin(10) * t204 + t408) + t320 * (-pkin(3) * t204 + t150) + pkin(9) * t167) * t309, pkin(2) * t152 + t311 * t131 + (t315 * (-pkin(10) * t209 + t407) + t320 * (-pkin(3) * t209 + t151) + pkin(9) * t168) * t309, pkin(2) * t112 + t311 * t72 + (t315 * (-pkin(10) * t186 - t98) - t186 * t420 + pkin(9) * t156) * t309, pkin(2) * t52 + t311 * t85 + (pkin(9) * t84 + t364 * t98) * t309, t311 * t154 + (t315 * (t178 * t319 + t377) - t320 * t177) * t309, t311 * t105 + (t315 * (t135 * t319 + t235 * t314) - t320 * t133) * t309, t311 * t128 + (t315 * (t171 * t319 + t183 * t314) - t320 * t169) * t309, t311 * t153 + (t315 * (t176 * t319 - t377) + t320 * t175) * t309, t311 * t129 + (t315 * (t172 * t319 - t179 * t314) - t320 * t170) * t309, t311 * t174 + (t315 * (t202 * t319 + t249 * t314) - t320 * t201) * t309, pkin(2) * t62 + t311 * t32 + (t315 * (-pkin(10) * t119 - t314 * t70 + t319 * t97) + t320 * (-pkin(3) * t119 - t342) + pkin(9) * t96) * t309, pkin(2) * t67 + t311 * t33 + (t315 * (-pkin(10) * t126 + t100 * t319 - t314 * t71) + t320 * (-pkin(3) * t126 - t341) + pkin(9) * t101) * t309, pkin(2) * t54 + t311 * t29 + (t315 * (-pkin(10) * t103 + t132 * t422 + t319 * t43) + t320 * (-pkin(3) * t103 - t337) + pkin(9) * t81) * t309, pkin(2) * t16 + t311 * t14 + (t315 * (-pkin(10) * t40 + (-pkin(11) * t319 + t422) * t49) + t320 * (-pkin(3) * t40 - t365) + pkin(9) * t23) * t309, t311 * t66 + (t315 * (t319 * t76 + t379) - t320 * t74) * t309, t311 * t42 + (t315 * (t191 * t314 + t319 * t48) - t320 * t46) * t309, t311 * t59 + (t315 * (t117 * t314 + t319 * t94) - t320 * t92) * t309, t311 * t65 + (t315 * (t319 * t75 - t379) - t320 * t73) * t309, t311 * t60 + (t315 * (-t114 * t314 + t319 * t95) - t320 * t93) * t309, t311 * t102 + (t315 * (t107 * t319 + t248 * t314) - t320 * t106) * t309, pkin(2) * t25 + t311 * t10 + (t315 * (-pkin(10) * t55 + t24 * t319 - t26 * t314) + t320 * (-pkin(3) * t55 - t335) + pkin(9) * t34) * t309, pkin(2) * t30 + t311 * t13 + (t315 * (-pkin(10) * t57 + t27 * t319 - t28 * t314) + t320 * (-pkin(3) * t57 - t334) + pkin(9) * t44) * t309, pkin(2) * t15 + t311 * t3 + (t315 * (-pkin(10) * t38 - t31 * t314 + t319 * t7) + t320 * (-pkin(3) * t38 - t333) + pkin(9) * t22) * t309, pkin(2) * t2 + t311 * t1 + (t315 * (-pkin(10) * t8 - t314 * t6 + t319 * t5) + t320 * (-pkin(3) * t8 - t332) + pkin(9) * t4) * t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, t291, t270, t299, t271, t304, -t199, -t200, 0, 0, t220, t185, t215, t219, t216, t239, t130, t131, t72, t85, t154, t105, t128, t153, t129, t174, t32, t33, t29, t14, t66, t42, t59, t65, t60, t102, t10, t13, t3, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, t257, t226, -t398, -t222, -t343, -t150, -t151, 0, 0, t177, t133, t169, -t175, t170, t201, t342, t341, t337, t365, t74, t46, t92, t73, t93, t106, t335, t334, t333, t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t235, t183, -t236, -t179, t249, -t87, -t88, 0, 0, t192, t191, t117, -t192, -t114, t248, t344, t340, t424, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t191, t117, -t192, -t114, t248, -t36, -t37, 0, 0;];
tauJ_reg  = t35;
