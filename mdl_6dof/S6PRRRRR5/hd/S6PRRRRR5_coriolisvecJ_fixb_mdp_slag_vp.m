% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRRRR5_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6PRRRRR5_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6PRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:10:25
% EndTime: 2019-03-09 01:10:48
% DurationCPUTime: 14.64s
% Computational Cost: add. (8590->631), mult. (22678->889), div. (0->0), fcn. (18884->14), ass. (0->266)
t633 = sin(pkin(7));
t640 = sin(qJ(3));
t770 = t633 * t640;
t624 = pkin(9) * t770;
t635 = cos(pkin(7));
t645 = cos(qJ(3));
t646 = cos(qJ(2));
t758 = t645 * t646;
t641 = sin(qJ(2));
t763 = t640 * t641;
t663 = -t635 * t763 + t758;
t634 = sin(pkin(6));
t738 = qJD(1) * t634;
t767 = t635 * t645;
t747 = t663 * t738 - (pkin(2) * t767 - t624) * qJD(3);
t681 = pkin(3) * t640 - pkin(10) * t645;
t662 = t681 * qJD(3);
t716 = t641 * t738;
t813 = (t662 - t716) * t633;
t733 = qJD(2) * t645;
t714 = t633 * t733;
t619 = -qJD(4) + t714;
t769 = t633 * t645;
t721 = pkin(9) * t769;
t578 = t721 + (pkin(2) * t640 + pkin(10)) * t635;
t682 = -pkin(3) * t645 - pkin(10) * t640;
t579 = (-pkin(2) + t682) * t633;
t639 = sin(qJ(4));
t644 = cos(qJ(4));
t727 = qJD(4) * t644;
t729 = qJD(4) * t639;
t812 = -t578 * t729 + t579 * t727 + t813 * t639 - t644 * t747;
t761 = t641 * t645;
t762 = t640 * t646;
t665 = t635 * t761 + t762;
t768 = t635 * t640;
t744 = -t665 * t738 + (pkin(2) * t768 + t721) * qJD(3);
t731 = qJD(3) * t640;
t712 = t633 * t731;
t811 = -pkin(11) * t712 - t812;
t590 = -t644 * t635 + t639 * t770;
t732 = qJD(3) * t633;
t711 = t645 * t732;
t550 = -qJD(4) * t590 + t644 * t711;
t591 = t635 * t639 + t644 * t770;
t551 = qJD(4) * t591 + t639 * t711;
t810 = pkin(4) * t551 - pkin(11) * t550 + t744;
t636 = cos(pkin(6));
t737 = qJD(1) * t636;
t717 = t633 * t737;
t736 = qJD(2) * t633;
t596 = pkin(9) * t736 + t716;
t787 = qJD(2) * pkin(2);
t610 = t646 * t738 + t787;
t794 = t645 * t596 + t610 * t768;
t524 = t640 * t717 + t794;
t809 = t524 + t619 * (pkin(4) * t639 - pkin(11) * t644);
t638 = sin(qJ(5));
t643 = cos(qJ(5));
t715 = t640 * t736;
t562 = t638 * t644 * t714 - t643 * t715;
t801 = -t638 * t727 + t562;
t759 = t644 * t645;
t563 = (t638 * t640 + t643 * t759) * t736;
t679 = t643 * t727 - t563;
t726 = qJD(5) * t638;
t808 = -t639 * t726 + t679;
t734 = qJD(2) * t635;
t695 = qJD(3) + t734;
t509 = pkin(10) * t695 + t524;
t623 = t635 * t737;
t533 = t623 + (qJD(2) * t682 - t610) * t633;
t454 = -t639 * t509 + t533 * t644;
t448 = pkin(4) * t619 - t454;
t572 = t639 * t695 + t644 * t715;
t535 = t572 * t638 + t643 * t619;
t442 = pkin(5) * t535 + t448;
t642 = cos(qJ(6));
t537 = t572 * t643 - t619 * t638;
t637 = sin(qJ(6));
t778 = t537 * t637;
t468 = t642 * t535 + t778;
t807 = t442 * t468;
t670 = t535 * t637 - t642 * t537;
t806 = t442 * t670;
t799 = -t639 * t715 + t644 * t695;
t565 = qJD(5) - t799;
t556 = qJD(6) + t565;
t805 = t468 * t556;
t804 = t556 * t670;
t803 = t578 * t727 + t579 * t729 - t747 * t639 - t644 * t813;
t725 = qJD(5) * t643;
t802 = t639 * t725 - t801;
t792 = qJD(5) + qJD(6);
t800 = -t799 + t792;
t722 = qJD(2) * qJD(3);
t705 = t633 * t722;
t685 = t645 * t705;
t669 = t639 * t685;
t540 = qJD(4) * t572 + t669;
t798 = t540 * MDP(30) + (-t468 ^ 2 + t670 ^ 2) * MDP(27) - t468 * MDP(26) * t670;
t601 = t637 * t643 + t638 * t642;
t584 = t601 * t639;
t755 = -pkin(4) * t712 + t803;
t577 = t624 + (-pkin(2) * t645 - pkin(3)) * t635;
t514 = pkin(4) * t590 - pkin(11) * t591 + t577;
t746 = t644 * t578 + t639 * t579;
t516 = -pkin(11) * t769 + t746;
t751 = t638 * t514 + t643 * t516;
t797 = -qJD(5) * t751 + t638 * t811 + t810 * t643;
t796 = -t514 * t725 + t516 * t726 - t810 * t638 + t643 * t811;
t788 = pkin(10) * t638;
t795 = -t643 * t809 + t729 * t788;
t587 = t640 * t596;
t772 = t610 * t635;
t523 = t645 * (t717 + t772) - t587;
t580 = t681 * t736;
t750 = t644 * t523 + t639 * t580;
t479 = pkin(11) * t715 + t750;
t616 = -pkin(4) * t644 - pkin(11) * t639 - pkin(3);
t793 = t643 * t479 - t616 * t725 + t638 * t809;
t630 = t633 ^ 2;
t791 = (-MDP(5) * t640 * t645 + (t640 ^ 2 - t645 ^ 2) * MDP(6)) * t630;
t539 = qJD(4) * t799 + t644 * t685;
t686 = t640 * t705;
t466 = qJD(5) * t537 + t539 * t638 - t643 * t686;
t465 = t643 * t539 - t572 * t726 - t619 * t725 + t638 * t686;
t702 = t465 * t637 + t642 * t466;
t423 = -qJD(6) * t670 + t702;
t647 = qJD(2) ^ 2;
t790 = pkin(11) + pkin(12);
t789 = pkin(5) * t639;
t455 = t644 * t509 + t639 * t533;
t449 = -pkin(11) * t619 + t455;
t508 = -pkin(3) * t695 - t523;
t457 = -pkin(4) * t799 - t572 * pkin(11) + t508;
t430 = -t449 * t638 + t643 * t457;
t425 = -pkin(12) * t537 + t430;
t421 = pkin(5) * t565 + t425;
t785 = t421 * t642;
t431 = t449 * t643 + t457 * t638;
t426 = -pkin(12) * t535 + t431;
t784 = t426 * t642;
t651 = t663 * qJD(2);
t687 = t636 * t711;
t482 = (t610 * t767 - t587) * qJD(3) + (t634 * t651 + t687) * qJD(1);
t543 = (t662 + t716) * t736;
t692 = t639 * t482 + t509 * t727 + t533 * t729 - t644 * t543;
t429 = -pkin(4) * t686 + t692;
t783 = t429 * t638;
t782 = t429 * t643;
t781 = t465 * t638;
t780 = t535 * t565;
t779 = t537 * t565;
t777 = t540 * t643;
t776 = t540 * t644;
t775 = t799 * t619;
t774 = t799 * t638;
t773 = t572 * t619;
t658 = t619 * t639;
t771 = t619 * t644;
t766 = t638 * t540;
t765 = t638 * t639;
t764 = t639 * t643;
t760 = t643 * t644;
t720 = t638 * t769;
t485 = -qJD(5) * t720 + t550 * t638 + t591 * t725 - t643 * t712;
t757 = pkin(5) * t485 + t755;
t522 = pkin(4) * t572 - pkin(11) * t799;
t756 = t643 * t454 + t638 * t522;
t600 = t637 * t638 - t642 * t643;
t753 = t562 * t637 - t563 * t642 - t584 * t792 - t600 * t727;
t724 = qJD(6) * t637;
t752 = -t724 * t765 + (t764 * t792 - t801) * t642 + t808 * t637;
t749 = t800 * t600;
t748 = t800 * t601;
t700 = -t639 * t523 + t580 * t644;
t478 = -pkin(4) * t715 - t700;
t745 = pkin(5) * t802 + pkin(10) * t727 - t478;
t626 = pkin(10) * t760;
t741 = t638 * t616 + t626;
t735 = qJD(2) * t634;
t730 = qJD(3) * t644;
t728 = qJD(4) * t643;
t723 = qJD(6) * t642;
t719 = t642 * t465 - t637 * t466 - t535 * t723;
t718 = qJD(5) * t790;
t713 = t641 * t735;
t708 = t565 * t726;
t656 = t644 * t482 - t509 * t729 + t533 * t727 + t639 * t543;
t428 = pkin(11) * t686 + t656;
t652 = t665 * qJD(2);
t688 = t636 * t712;
t483 = t794 * qJD(3) + (t634 * t652 + t688) * qJD(1);
t443 = pkin(4) * t540 - pkin(11) * t539 + t483;
t413 = -qJD(5) * t431 - t428 * t638 + t643 * t443;
t410 = pkin(5) * t540 - pkin(12) * t465 + t413;
t412 = t643 * t428 + t638 * t443 - t449 * t726 + t457 * t725;
t411 = -pkin(12) * t466 + t412;
t704 = t642 * t410 - t637 * t411;
t424 = t426 * t724;
t703 = t637 * t410 - t424;
t701 = t643 * t514 - t516 * t638;
t698 = -t639 * t578 + t579 * t644;
t697 = t565 * t643;
t696 = qJD(6) * t421 + t411;
t690 = t633 * t713;
t684 = MDP(16) * t715;
t683 = -t455 + (t726 - t774) * pkin(5);
t515 = pkin(4) * t769 - t698;
t552 = t591 * t638 + t643 * t769;
t444 = -pkin(12) * t552 + t751;
t484 = -qJD(5) * t552 + t550 * t643 + t638 * t712;
t678 = -pkin(5) * t551 + pkin(12) * t484 + qJD(6) * t444 - t797;
t553 = t591 * t643 - t720;
t439 = pkin(5) * t590 - pkin(12) * t553 + t701;
t677 = pkin(12) * t485 - qJD(6) * t439 + t796;
t519 = t643 * t522;
t621 = t790 * t643;
t676 = pkin(5) * t572 + qJD(6) * t621 - t454 * t638 + t519 + (-pkin(12) * t799 + t718) * t643;
t554 = -pkin(12) * t765 + t741;
t675 = -pkin(12) * t563 + qJD(6) * t554 - t479 * t638 + t714 * t789 - (-pkin(12) * t760 + t789) * qJD(4) - (-t626 + (pkin(12) * t639 - t616) * t638) * qJD(5) - t795;
t620 = t790 * t638;
t674 = -pkin(12) * t774 + qJD(6) * t620 + t638 * t718 + t756;
t598 = t643 * t616;
t545 = -pkin(12) * t764 + t598 + (-pkin(5) - t788) * t644;
t673 = -qJD(6) * t545 - (-t639 * t728 - t644 * t726) * pkin(10) + t793 + t802 * pkin(12);
t415 = t421 * t637 + t784;
t664 = t635 * t762 + t761;
t547 = t634 * t664 + t636 * t770;
t589 = -t633 * t634 * t646 + t635 * t636;
t513 = t547 * t644 + t589 * t639;
t666 = t635 * t758 - t763;
t546 = -t634 * t666 - t636 * t769;
t463 = -t513 * t638 + t546 * t643;
t464 = t513 * t643 + t546 * t638;
t672 = t463 * t642 - t464 * t637;
t671 = t463 * t637 + t464 * t642;
t512 = t547 * t639 - t589 * t644;
t492 = t642 * t552 + t553 * t637;
t493 = -t552 * t637 + t553 * t642;
t564 = -t610 * t633 + t623;
t667 = t564 * t633 - t630 * t787;
t660 = -t565 * t725 - t766;
t657 = -pkin(11) * t540 + t448 * t565;
t422 = -t537 * t724 + t719;
t650 = qJD(1) * t635 * t713 + qJD(3) * t596;
t408 = -qJD(6) * t415 + t704;
t648 = -t564 * t736 - qJD(3) * t772 + (-t636 * t732 - t646 * t735) * qJD(1);
t629 = -pkin(5) * t643 - pkin(4);
t606 = (pkin(5) * t638 + pkin(10)) * t639;
t585 = t600 * t639;
t517 = t540 * t590;
t502 = t687 + (qJD(3) * t666 + t651) * t634;
t501 = t688 + (qJD(3) * t664 + t652) * t634;
t472 = pkin(5) * t552 + t515;
t446 = -qJD(4) * t512 + t502 * t644 + t639 * t690;
t445 = qJD(4) * t513 + t502 * t639 - t644 * t690;
t433 = qJD(6) * t493 + t484 * t637 + t642 * t485;
t432 = -qJD(6) * t492 + t484 * t642 - t485 * t637;
t420 = qJD(5) * t463 + t446 * t643 + t501 * t638;
t419 = -qJD(5) * t464 - t446 * t638 + t501 * t643;
t418 = pkin(5) * t466 + t429;
t414 = -t426 * t637 + t785;
t407 = t696 * t642 + t703;
t1 = [(-t501 * t695 + t589 * t686) * MDP(10) + (-t502 * t695 + t589 * t685) * MDP(11) + (t445 * t619 - t501 * t799 - t512 * t686 + t540 * t546) * MDP(17) + (t446 * t619 + t501 * t572 - t513 * t686 + t539 * t546) * MDP(18) + (t419 * t565 + t445 * t535 + t463 * t540 + t466 * t512) * MDP(24) + (-t420 * t565 + t445 * t537 - t464 * t540 + t465 * t512) * MDP(25) + ((-qJD(6) * t671 + t419 * t642 - t420 * t637) * t556 + t672 * t540 + t445 * t468 + t512 * t423) * MDP(31) + (-(qJD(6) * t672 + t419 * t637 + t420 * t642) * t556 - t671 * t540 - t445 * t670 + t512 * t422) * MDP(32) + (-MDP(4) * t646 + (-MDP(3) + (-MDP(10) * t645 + MDP(11) * t640) * t630) * t641) * t647 * t634; (-(t439 * t637 + t444 * t642) * t540 - t407 * t590 - t415 * t551 + t472 * t422 + t418 * t493 + t442 * t432 + (t637 * t678 + t642 * t677) * t556 - t757 * t670) * MDP(32) + (t422 * t590 + t432 * t556 + t493 * t540 - t551 * t670) * MDP(28) + (-t422 * t492 - t423 * t493 - t432 * t468 + t433 * t670) * MDP(27) + (t422 * t493 - t432 * t670) * MDP(26) + (t483 * t591 + t508 * t550 + t577 * t539 + t812 * t619 + t744 * t572 + (t656 * t645 + (-qJD(2) * t746 - t455) * t731) * t633) * MDP(18) + (t551 * t619 + (t540 * t645 + (-qJD(2) * t590 + t799) * t731) * t633) * MDP(15) + (t483 * t590 + t508 * t551 + t577 * t540 + t803 * t619 - t744 * t799 + (t692 * t645 + (qJD(2) * t698 + t454) * t731) * t633) * MDP(17) + (-t539 * t590 - t540 * t591 + t550 * t799 - t551 * t572) * MDP(13) + (-t412 * t590 + t429 * t553 - t431 * t551 + t448 * t484 + t515 * t465 + t755 * t537 - t751 * t540 + t565 * t796) * MDP(25) + (t413 * t590 + t429 * t552 + t430 * t551 + t448 * t485 + t515 * t466 + t755 * t535 + t701 * t540 + t565 * t797) * MDP(24) - 0.2e1 * t791 * t722 + (MDP(7) * t711 - MDP(8) * t712) * (qJD(3) + 0.2e1 * t734) + ((t439 * t642 - t444 * t637) * t540 + t408 * t590 + t414 * t551 + t472 * t423 + t418 * t492 + t442 * t433 + (t637 * t677 - t642 * t678) * t556 + t757 * t468) * MDP(31) + ((qJD(2) * t747 - t482) * t635 + (t645 * t667 + t747) * qJD(3)) * MDP(11) + (-t619 * t633 - t630 * t733) * MDP(16) * t731 + ((-qJD(2) * t744 - t483) * t635 + (t640 * t667 - t744) * qJD(3)) * MDP(10) + (t539 * t591 + t550 * t572) * MDP(12) + (-t466 * t590 - t485 * t565 - t535 * t551 - t540 * t552) * MDP(22) + (t465 * t590 + t484 * t565 + t537 * t551 + t540 * t553) * MDP(21) + (-t423 * t590 - t433 * t556 - t468 * t551 - t492 * t540) * MDP(29) + (t551 * t565 + t517) * MDP(23) + (t551 * t556 + t517) * MDP(30) + (-t465 * t552 - t466 * t553 - t484 * t535 - t485 * t537) * MDP(20) + (t465 * t553 + t484 * t537) * MDP(19) + (-t550 * t619 + (-t539 * t645 + (qJD(2) * t591 + t572) * t731) * t633) * MDP(14); (t535 * t563 + t537 * t562 + (-t535 * t643 - t537 * t638) * t727 + (-t781 - t466 * t643 + (t535 * t638 - t537 * t643) * qJD(5)) * t639) * MDP(20) + ((t539 - t775) * t644 + (-t540 + t773) * t639) * MDP(13) + (-t465 * t644 + t679 * t565 + (-t537 * t619 - t708 + t777) * t639) * MDP(21) + (t539 * t639 - t572 * t771) * MDP(12) + (-pkin(3) * t540 - t483 * t644 + t700 * t619 + t524 * t799 + (pkin(10) * t771 + t508 * t639) * qJD(4) + (-t454 * t640 + (-pkin(10) * t731 - t508 * t645) * t639) * t736) * MDP(17) + (t619 * t729 + (-t645 * t658 + (-t799 + t730) * t640) * t736) * MDP(15) + (-pkin(3) * t539 + t483 * t639 - t524 * t572 - t750 * t619 + (-pkin(10) * t658 + t508 * t644) * qJD(4) + (-t508 * t759 + (-pkin(10) * t730 + t455) * t640) * t736) * MDP(18) + (t465 * t764 + t537 * t808) * MDP(19) + (-t619 * t727 + (t619 * t759 + (qJD(3) * t639 - t572) * t640) * t736) * MDP(14) + (t524 * t695 + t640 * t648 - t645 * t650) * MDP(10) + (t523 * t695 + t640 * t650 + t645 * t648) * MDP(11) + (-t448 * t562 - t478 * t535 + t598 * t540 + ((-qJD(5) * t616 + t479) * t638 + t795) * t565 + (t448 * t638 * qJD(4) - t413 + (qJD(4) * t535 + t660) * pkin(10)) * t644 + (pkin(10) * t466 - t430 * t619 + t448 * t725 + t783) * t639) * MDP(24) + t619 * t684 + (t466 * t644 + t801 * t565 + (t535 * t619 + t660) * t639) * MDP(22) + (t423 * t644 + t468 * t658 - t540 * t584 - t556 * t752) * MDP(29) + (-t422 * t585 - t670 * t753) * MDP(26) + (-(t545 * t637 + t554 * t642) * t540 + t407 * t644 + t606 * t422 - t418 * t585 + (t637 * t675 + t642 * t673) * t556 - t745 * t670 + t753 * t442 + t415 * t658) * MDP(32) + (-t422 * t584 + t423 * t585 - t468 * t753 + t670 * t752) * MDP(27) + (-t565 * t658 - t776) * MDP(23) + (-t556 * t658 - t776) * MDP(30) + ((t545 * t642 - t554 * t637) * t540 - t408 * t644 + t606 * t423 + t418 * t584 + (t637 * t673 - t642 * t675) * t556 + t745 * t468 + t752 * t442 - t414 * t658) * MDP(31) + (-t422 * t644 - t540 * t585 + t556 * t753 + t658 * t670) * MDP(28) + (-t741 * t540 - t478 * t537 - t448 * t563 + t793 * t565 + (t448 * t728 + t412 + (qJD(4) * t537 + t708) * pkin(10)) * t644 + (-t448 * t726 + t782 + t619 * t431 + (t565 * t728 + t465) * pkin(10)) * t639) * MDP(25) + (t791 + (-MDP(7) * t645 + MDP(8) * t640) * t633 * t635) * t647; -t799 ^ 2 * MDP(13) + (t539 + t775) * MDP(14) + (-t669 - t773) * MDP(15) + qJD(3) * t684 + (-t455 * t619 - t692) * MDP(17) + (-t454 * t619 - t508 * t799 - t656) * MDP(18) + (t537 * t697 + t781) * MDP(19) + ((t465 - t780) * t643 + (-t466 - t779) * t638) * MDP(20) + (t565 * t697 + t766) * MDP(21) + (-t565 ^ 2 * t638 + t777) * MDP(22) + (-pkin(4) * t466 - t782 - t455 * t535 + (-pkin(11) * t725 - t519) * t565 + (t454 * t565 + t657) * t638) * MDP(24) + (-pkin(4) * t465 + t783 - t455 * t537 + (pkin(11) * t726 + t756) * t565 + t657 * t643) * MDP(25) + (t422 * t601 + t670 * t749) * MDP(26) + (-t422 * t600 - t423 * t601 + t468 * t749 + t670 * t748) * MDP(27) + (t540 * t601 - t556 * t749) * MDP(28) + (-t540 * t600 - t556 * t748) * MDP(29) + ((-t620 * t642 - t621 * t637) * t540 + t629 * t423 + t418 * t600 + (t637 * t674 - t642 * t676) * t556 + t683 * t468 + t748 * t442) * MDP(31) + (-(-t620 * t637 + t621 * t642) * t540 + t629 * t422 + t418 * t601 + (t637 * t676 + t642 * t674) * t556 - t683 * t670 - t749 * t442) * MDP(32) + (-MDP(12) * t799 + t572 * MDP(13) - MDP(15) * qJD(4) - t508 * MDP(17) - t537 * MDP(21) + t535 * MDP(22) - t565 * MDP(23) - t430 * MDP(24) + MDP(25) * t431 + MDP(28) * t670 + t468 * MDP(29) - t556 * MDP(30) - t414 * MDP(31) + t415 * MDP(32)) * t572; t537 * t535 * MDP(19) + (-t535 ^ 2 + t537 ^ 2) * MDP(20) + (t465 + t780) * MDP(21) + (-t466 + t779) * MDP(22) + t540 * MDP(23) + (t431 * t565 - t448 * t537 + t413) * MDP(24) + (t430 * t565 + t448 * t535 - t412) * MDP(25) + (t422 + t805) * MDP(28) + (-t423 - t804) * MDP(29) + (-(-t425 * t637 - t784) * t556 + t806 + (-t468 * t537 + t540 * t642 - t556 * t724) * pkin(5) + t408) * MDP(31) + (t807 + t424 + (-t426 * t556 - t410) * t637 + (t425 * t556 - t696) * t642 + (t537 * t670 - t540 * t637 - t556 * t723) * pkin(5)) * MDP(32) + t798; (t719 + t805) * MDP(28) + (-t702 - t804) * MDP(29) + (t415 * t556 + t704 + t806) * MDP(31) + (-t642 * t411 + t414 * t556 - t703 + t807) * MDP(32) + (-MDP(28) * t778 + MDP(29) * t670 - MDP(31) * t415 - MDP(32) * t785) * qJD(6) + t798;];
tauc  = t1;
