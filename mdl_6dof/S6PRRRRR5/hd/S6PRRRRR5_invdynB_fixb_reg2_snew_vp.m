% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 12:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRRRR5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR5_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR5_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 12:02:27
% EndTime: 2019-05-05 12:04:07
% DurationCPUTime: 85.94s
% Computational Cost: add. (850339->1156), mult. (1757788->1951), div. (0->0), fcn. (1446896->16), ass. (0->850)
t1135 = sin(qJ(6));
t1133 = cos(pkin(7));
t1122 = qJD(2) * t1133 + qJD(3);
t1137 = sin(qJ(4));
t1142 = cos(qJ(4));
t1130 = sin(pkin(7));
t1138 = sin(qJ(3));
t1320 = qJD(2) * t1138;
t1287 = t1130 * t1320;
t1087 = t1122 * t1137 + t1142 * t1287;
t1291 = qJDD(2) * t1138;
t1143 = cos(qJ(3));
t1319 = qJD(2) * t1143;
t1095 = (qJD(3) * t1319 + t1291) * t1130;
t1121 = qJDD(2) * t1133 + qJDD(3);
t1276 = t1087 * qJD(4) + t1137 * t1095 - t1142 * t1121;
t1029 = qJDD(5) + t1276;
t1187 = qJDD(6) + t1029;
t1286 = t1130 * t1319;
t1117 = -qJD(4) + t1286;
t1136 = sin(qJ(5));
t1141 = cos(qJ(5));
t1053 = t1087 * t1136 + t1141 * t1117;
t1055 = t1087 * t1141 - t1117 * t1136;
t1140 = cos(qJ(6));
t1000 = t1140 * t1053 + t1055 * t1135;
t1002 = -t1053 * t1135 + t1055 * t1140;
t934 = t1002 * t1000;
t1349 = -t934 + t1187;
t1357 = t1135 * t1349;
t1010 = t1055 * t1053;
t1344 = -t1010 + t1029;
t1356 = t1136 * t1344;
t1355 = t1140 * t1349;
t1354 = t1141 * t1344;
t1085 = -t1142 * t1122 + t1137 * t1287;
t1080 = qJD(5) + t1085;
t1026 = t1080 * t1053;
t1031 = -t1085 * qJD(4) + t1142 * t1095 + t1137 * t1121;
t1118 = qJD(3) * t1287;
t1290 = qJDD(2) * t1143;
t1266 = t1130 * t1290 - t1118;
t1091 = -qJDD(4) + t1266;
t1277 = t1053 * qJD(5) - t1141 * t1031 + t1136 * t1091;
t920 = -t1026 + t1277;
t1139 = sin(qJ(2));
t1144 = cos(qJ(2));
t1134 = cos(pkin(6));
t1131 = sin(pkin(6));
t1334 = g(3) - qJDD(1);
t1274 = t1131 * t1334;
t1132 = cos(pkin(13));
t1124 = t1132 * g(2);
t1129 = sin(pkin(13));
t1275 = g(1) * t1129 - t1124;
t1150 = t1134 * t1275 - t1274;
t1270 = g(1) * t1132 + g(2) * t1129;
t1050 = -t1139 * t1270 - t1144 * t1150;
t1145 = qJD(2) ^ 2;
t1335 = pkin(9) * t1130;
t1149 = qJDD(2) * pkin(2) + t1145 * t1335 - t1050;
t1107 = t1131 * t1275;
t1265 = t1134 * t1334 + t1107;
t1353 = -t1130 * t1265 + t1133 * t1149;
t1310 = t1087 * t1117;
t1352 = t1276 - t1310;
t1272 = t1136 * t1031 + t1141 * t1091;
t957 = -qJD(5) * t1055 - t1272;
t851 = -qJD(6) * t1000 + t1135 * t957 - t1140 * t1277;
t1075 = qJD(6) + t1080;
t966 = t1075 * t1000;
t1351 = t851 - t966;
t1051 = t1139 * t1150 - t1144 * t1270;
t997 = t1050 * t1139 + t1051 * t1144;
t1350 = t997 * t1131;
t1348 = t1129 * t1334;
t1347 = t1132 * t1334;
t1311 = t1085 * t1087;
t1151 = -t1091 - t1311;
t1346 = t1137 * t1151;
t1182 = t1139 * t1265;
t1345 = t1142 * t1151;
t1181 = t1144 * t1265;
t1069 = t1085 * t1117;
t992 = t1069 + t1031;
t1105 = t1122 * t1287;
t1343 = t1105 - t1266;
t1106 = t1122 * t1286;
t1065 = t1106 + t1095;
t921 = t1277 + t1026;
t1273 = -t1135 * t1277 - t1140 * t957;
t800 = (qJD(6) - t1075) * t1002 + t1273;
t916 = (qJD(5) - t1080) * t1055 + t1272;
t1072 = -t1129 * t1275 - t1132 * t1270;
t1039 = -t1145 * pkin(2) + qJDD(2) * t1335 + t1051;
t947 = t1143 * t1039 + t1138 * t1353;
t998 = t1000 ^ 2;
t999 = t1002 ^ 2;
t1342 = t1053 ^ 2;
t1052 = t1055 ^ 2;
t1074 = t1075 ^ 2;
t1078 = t1080 ^ 2;
t1083 = t1085 ^ 2;
t1084 = t1087 ^ 2;
t1341 = t1117 ^ 2;
t1340 = t1122 ^ 2;
t1339 = pkin(3) * t1138;
t1338 = pkin(3) * t1143;
t1337 = pkin(4) * t1137;
t1336 = pkin(8) * t1134;
t1041 = pkin(4) * t1085 - pkin(11) * t1087;
t1011 = t1130 * t1149 + t1133 * t1265;
t1147 = pkin(3) * t1343 - pkin(10) * t1065 - t1011;
t1271 = -pkin(10) * t1138 - t1338;
t1321 = qJD(2) * t1130;
t1094 = t1271 * t1321;
t928 = -t1340 * pkin(3) + t1121 * pkin(10) + t1094 * t1286 + t947;
t855 = t1137 * t1147 + t1142 * t928;
t810 = -pkin(4) * t1341 - pkin(11) * t1091 - t1041 * t1085 + t855;
t1294 = t1353 * t1143;
t927 = -t1121 * pkin(3) - t1340 * pkin(10) + (t1094 * t1321 + t1039) * t1138 - t1294;
t841 = pkin(4) * t1352 - t992 * pkin(11) + t927;
t741 = t1136 * t810 - t1141 * t841;
t697 = t1344 * pkin(5) + pkin(12) * t920 - t741;
t1020 = pkin(5) * t1080 - pkin(12) * t1055;
t742 = t1136 * t841 + t1141 * t810;
t708 = -pkin(5) * t1342 + pkin(12) * t957 - t1020 * t1080 + t742;
t619 = t1135 * t697 + t1140 * t708;
t854 = t1137 * t928 - t1142 * t1147;
t809 = t1091 * pkin(4) - t1341 * pkin(11) + t1041 * t1087 + t854;
t751 = -t957 * pkin(5) - pkin(12) * t1342 + t1020 * t1055 + t809;
t1333 = t1135 * t751;
t890 = t934 + t1187;
t1332 = t1135 * t890;
t618 = t1135 * t708 - t1140 * t697;
t569 = t1135 * t619 - t1140 * t618;
t1331 = t1136 * t569;
t1330 = t1136 * t809;
t943 = t1010 + t1029;
t1329 = t1136 * t943;
t1328 = t1137 * t927;
t1327 = t1140 * t751;
t1326 = t1140 * t890;
t1325 = t1141 * t569;
t1324 = t1141 * t809;
t1323 = t1141 * t943;
t1322 = t1142 * t927;
t1023 = t1091 - t1311;
t1318 = t1023 * t1137;
t1317 = t1023 * t1142;
t1288 = t1122 * t1321;
t1127 = t1138 ^ 2;
t1128 = t1143 ^ 2;
t1293 = t1127 + t1128;
t1070 = t1293 * t1288;
t1316 = t1070 * t1139;
t1315 = t1075 * t1135;
t1314 = t1075 * t1140;
t1313 = t1080 * t1136;
t1312 = t1080 * t1141;
t1297 = t1143 * t1145;
t1126 = t1130 ^ 2;
t1303 = t1126 * t1138;
t1116 = t1297 * t1303;
t1092 = t1116 + t1121;
t1309 = t1092 * t1138;
t1308 = t1092 * t1143;
t1093 = -t1116 + t1121;
t1307 = t1093 * t1138;
t1306 = t1093 * t1143;
t1305 = t1117 * t1137;
t1304 = t1117 * t1142;
t1302 = t1126 * t1145;
t1301 = t1130 * t1144;
t1300 = t1138 * t1011;
t1299 = t1143 * t1011;
t1292 = qJDD(2) * t1131;
t1289 = -pkin(4) * t1142 - pkin(3);
t1285 = t1137 * t934;
t1284 = t1142 * t934;
t1283 = t1137 * t1010;
t1282 = t1142 * t1010;
t1281 = t1138 * t1311;
t1280 = t1143 * t1311;
t1279 = t1127 * t1302;
t1278 = t1128 * t1302;
t570 = t1135 * t618 + t1140 * t619;
t760 = t1137 * t854 + t1142 * t855;
t1079 = -t1279 - t1340;
t1038 = -t1079 * t1138 - t1306;
t1269 = pkin(9) * t1038 - t1300;
t1098 = -t1278 - t1340;
t1047 = t1098 * t1143 - t1309;
t1268 = pkin(9) * t1047 + t1299;
t1267 = g(2) * t1129 ^ 2 + t1124 * t1132;
t655 = t1136 * t742 - t1141 * t741;
t656 = t1136 * t741 + t1141 * t742;
t759 = t1137 * t855 - t1142 * t854;
t517 = t1141 * t570 - t1331;
t510 = t1137 * t751 + t1142 * t517;
t516 = t1136 * t570 + t1325;
t1264 = t1138 * t510 - t1143 * t516;
t804 = -t851 - t966;
t725 = -t1135 * t800 + t1140 * t804;
t727 = -t1135 * t804 - t1140 * t800;
t644 = -t1136 * t725 + t1141 * t727;
t876 = -t998 - t999;
t624 = t1137 * t876 + t1142 * t644;
t642 = t1136 * t727 + t1141 * t725;
t1263 = t1138 * t624 - t1143 * t642;
t626 = t1137 * t809 + t1142 * t656;
t1262 = t1138 * t626 - t1143 * t655;
t799 = (qJD(6) + t1075) * t1002 + t1273;
t726 = -t1135 * t799 + t1140 * t1351;
t728 = -t1135 * t1351 - t1140 * t799;
t645 = -t1136 * t726 + t1141 * t728;
t933 = -t999 + t998;
t632 = -t1137 * t933 + t1142 * t645;
t643 = -t1136 * t728 - t1141 * t726;
t1261 = t1138 * t632 + t1143 * t643;
t909 = -t1074 - t998;
t811 = t1135 * t909 + t1355;
t812 = t1140 * t909 - t1357;
t734 = -t1136 * t811 + t1141 * t812;
t676 = t1137 * t799 + t1142 * t734;
t733 = t1136 * t812 + t1141 * t811;
t1260 = t1138 * t676 - t1143 * t733;
t945 = -t999 - t1074;
t831 = t1140 * t945 - t1332;
t832 = -t1135 * t945 - t1326;
t748 = -t1136 * t831 + t1141 * t832;
t684 = t1137 * t1351 + t1142 * t748;
t747 = t1136 * t832 + t1141 * t831;
t1259 = t1138 * t684 - t1143 * t747;
t965 = -t999 + t1074;
t846 = t1140 * t965 + t1357;
t848 = -t1135 * t965 + t1355;
t754 = -t1136 * t846 + t1141 * t848;
t689 = -t1137 * t804 + t1142 * t754;
t752 = -t1136 * t848 - t1141 * t846;
t1258 = t1138 * t689 + t1143 * t752;
t964 = t998 - t1074;
t847 = t1135 * t964 + t1326;
t849 = t1140 * t964 - t1332;
t755 = -t1136 * t847 + t1141 * t849;
t690 = -t1137 * t800 + t1142 * t755;
t753 = -t1136 * t849 - t1141 * t847;
t1257 = t1138 * t690 + t1143 * t753;
t850 = -qJD(6) * t1002 - t1273;
t793 = t1000 * t1315 + t1140 * t850;
t794 = t1000 * t1314 - t1135 * t850;
t723 = -t1136 * t793 + t1141 * t794;
t701 = t1142 * t723 - t1285;
t721 = -t1136 * t794 - t1141 * t793;
t1256 = t1138 * t701 + t1143 * t721;
t795 = t1002 * t1314 + t1135 * t851;
t796 = -t1002 * t1315 + t1140 * t851;
t724 = -t1136 * t795 + t1141 * t796;
t702 = t1142 * t724 + t1285;
t722 = -t1136 * t796 - t1141 * t795;
t1255 = t1138 * t702 + t1143 * t722;
t1254 = t1138 * t760 - t1143 * t927;
t896 = (-t1000 * t1135 - t1002 * t1140) * t1075;
t897 = (-t1000 * t1140 + t1002 * t1135) * t1075;
t792 = -t1136 * t896 + t1141 * t897;
t775 = t1137 * t1187 + t1142 * t792;
t791 = -t1136 * t897 - t1141 * t896;
t1253 = t1138 * t775 + t1143 * t791;
t829 = -t1136 * t920 - t1141 * t916;
t959 = t1052 + t1342;
t779 = -t1137 * t959 + t1142 * t829;
t827 = -t1136 * t916 + t1141 * t920;
t1252 = t1138 * t779 - t1143 * t827;
t1009 = -t1052 + t1342;
t918 = (-qJD(5) - t1080) * t1055 - t1272;
t830 = t1136 * t921 + t1141 * t918;
t787 = -t1009 * t1137 + t1142 * t830;
t828 = -t1136 * t918 + t1141 * t921;
t1251 = t1138 * t787 + t1143 * t828;
t974 = -t1078 - t1342;
t884 = t1141 * t974 - t1356;
t807 = -t1137 * t918 + t1142 * t884;
t883 = t1136 * t974 + t1354;
t1250 = t1138 * t807 - t1143 * t883;
t995 = -t1052 - t1078;
t888 = -t1136 * t995 - t1323;
t816 = -t1137 * t921 + t1142 * t888;
t887 = t1141 * t995 - t1329;
t1249 = t1138 * t816 - t1143 * t887;
t1022 = -t1052 + t1078;
t905 = -t1022 * t1136 + t1354;
t823 = -t1137 * t920 + t1142 * t905;
t903 = -t1022 * t1141 - t1356;
t1248 = t1138 * t823 + t1143 * t903;
t1021 = -t1078 + t1342;
t906 = t1021 * t1141 - t1329;
t824 = -t1137 * t916 + t1142 * t906;
t904 = -t1021 * t1136 - t1323;
t1247 = t1138 * t824 + t1143 * t904;
t913 = t1053 * t1312 - t1136 * t957;
t870 = t1142 * t913 - t1283;
t912 = -t1053 * t1313 - t1141 * t957;
t1246 = t1138 * t870 + t1143 * t912;
t915 = -t1055 * t1313 - t1141 * t1277;
t871 = t1142 * t915 + t1283;
t914 = -t1055 * t1312 + t1136 * t1277;
t1245 = t1138 * t871 + t1143 * t914;
t952 = (-t1053 * t1141 + t1055 * t1136) * t1080;
t911 = t1029 * t1137 + t1142 * t952;
t951 = (t1053 * t1136 + t1055 * t1141) * t1080;
t1244 = t1138 * t911 + t1143 * t951;
t946 = t1138 * t1039 - t1294;
t1243 = t1138 * t947 - t1143 * t946;
t872 = t1138 * t946 + t1143 * t947;
t1036 = -t1341 - t1083;
t955 = t1036 * t1142 - t1346;
t1242 = t1138 * t955 - t1143 * t1352;
t1043 = -t1084 - t1341;
t963 = -t1043 * t1137 + t1317;
t1241 = t1138 * t963 - t1143 * t992;
t1063 = -t1084 + t1341;
t972 = -t1063 * t1137 + t1345;
t994 = t1069 - t1031;
t1240 = t1138 * t972 + t1143 * t994;
t1062 = t1083 - t1341;
t973 = t1062 * t1142 + t1318;
t989 = t1276 + t1310;
t1239 = t1138 * t973 + t1143 * t989;
t509 = t1137 * t517 - t1142 * t751;
t470 = -t1130 * t509 + t1133 * t1264;
t489 = t1138 * t516 + t1143 * t510;
t1238 = t1139 * t489 + t1144 * t470;
t623 = t1137 * t644 - t1142 * t876;
t541 = -t1130 * t623 + t1133 * t1263;
t575 = t1138 * t642 + t1143 * t624;
t1237 = t1139 * t575 + t1144 * t541;
t631 = t1137 * t645 + t1142 * t933;
t543 = -t1130 * t631 + t1133 * t1261;
t576 = -t1138 * t643 + t1143 * t632;
t1236 = t1139 * t576 + t1144 * t543;
t625 = t1137 * t656 - t1142 * t809;
t547 = -t1130 * t625 + t1133 * t1262;
t580 = t1138 * t655 + t1143 * t626;
t1235 = t1139 * t580 + t1144 * t547;
t675 = t1137 * t734 - t1142 * t799;
t583 = -t1130 * t675 + t1133 * t1260;
t616 = t1138 * t733 + t1143 * t676;
t1234 = t1139 * t616 + t1144 * t583;
t683 = t1137 * t748 - t1142 * t1351;
t591 = -t1130 * t683 + t1133 * t1259;
t634 = t1138 * t747 + t1143 * t684;
t1233 = t1139 * t634 + t1144 * t591;
t699 = t1137 * t723 + t1284;
t594 = -t1130 * t699 + t1133 * t1256;
t627 = -t1138 * t721 + t1143 * t701;
t1232 = t1139 * t627 + t1144 * t594;
t700 = t1137 * t724 - t1284;
t595 = -t1130 * t700 + t1133 * t1255;
t628 = -t1138 * t722 + t1143 * t702;
t1231 = t1139 * t628 + t1144 * t595;
t687 = t1137 * t754 + t1142 * t804;
t598 = -t1130 * t687 + t1133 * t1258;
t639 = -t1138 * t752 + t1143 * t689;
t1230 = t1139 * t639 + t1144 * t598;
t688 = t1137 * t755 + t1142 * t800;
t599 = -t1130 * t688 + t1133 * t1257;
t640 = -t1138 * t753 + t1143 * t690;
t1229 = t1139 * t640 + t1144 * t599;
t661 = -t1130 * t759 + t1133 * t1254;
t736 = t1138 * t927 + t1143 * t760;
t1228 = t1139 * t736 + t1144 * t661;
t774 = t1137 * t792 - t1142 * t1187;
t665 = -t1130 * t774 + t1133 * t1253;
t717 = -t1138 * t791 + t1143 * t775;
t1227 = t1139 * t717 + t1144 * t665;
t778 = t1137 * t829 + t1142 * t959;
t673 = -t1130 * t778 + t1133 * t1252;
t729 = t1138 * t827 + t1143 * t779;
t1226 = t1139 * t729 + t1144 * t673;
t786 = t1009 * t1142 + t1137 * t830;
t678 = -t1130 * t786 + t1133 * t1251;
t738 = -t1138 * t828 + t1143 * t787;
t1225 = t1139 * t738 + t1144 * t678;
t806 = t1137 * t884 + t1142 * t918;
t694 = -t1130 * t806 + t1133 * t1250;
t756 = t1138 * t883 + t1143 * t807;
t1224 = t1139 * t756 + t1144 * t694;
t815 = t1137 * t888 + t1142 * t921;
t704 = -t1130 * t815 + t1133 * t1249;
t764 = t1138 * t887 + t1143 * t816;
t1223 = t1139 * t764 + t1144 * t704;
t821 = t1137 * t905 + t1142 * t920;
t713 = -t1130 * t821 + t1133 * t1248;
t768 = -t1138 * t903 + t1143 * t823;
t1222 = t1139 * t768 + t1144 * t713;
t822 = t1137 * t906 + t1142 * t916;
t714 = -t1130 * t822 + t1133 * t1247;
t769 = -t1138 * t904 + t1143 * t824;
t1221 = t1139 * t769 + t1144 * t714;
t868 = t1137 * t913 + t1282;
t745 = -t1130 * t868 + t1133 * t1246;
t781 = -t1138 * t912 + t1143 * t870;
t1220 = t1139 * t781 + t1144 * t745;
t869 = t1137 * t915 - t1282;
t746 = -t1130 * t869 + t1133 * t1245;
t782 = -t1138 * t914 + t1143 * t871;
t1219 = t1139 * t782 + t1144 * t746;
t910 = -t1029 * t1142 + t1137 * t952;
t773 = -t1130 * t910 + t1133 * t1244;
t853 = -t1138 * t951 + t1143 * t911;
t1218 = t1139 * t853 + t1144 * t773;
t1019 = t1083 + t1084;
t925 = -t1137 * t994 - t1142 * t989;
t1205 = t1019 * t1143 + t1138 * t925;
t923 = -t1137 * t989 + t1142 * t994;
t798 = -t1130 * t923 + t1133 * t1205;
t875 = -t1019 * t1138 + t1143 * t925;
t1217 = t1139 * t875 + t1144 * t798;
t1042 = -t1084 + t1083;
t924 = -t1137 * t992 - t1142 * t1352;
t1203 = t1042 * t1143 + t1138 * t924;
t922 = -t1137 * t1352 + t1142 * t992;
t814 = -t1130 * t922 + t1133 * t1203;
t886 = -t1042 * t1138 + t1143 * t924;
t1216 = t1139 * t886 + t1144 * t814;
t838 = t1130 * t1011 + t1133 * t1243;
t1215 = t1139 * t872 + t1144 * t838;
t954 = t1036 * t1137 + t1345;
t843 = -t1130 * t954 + t1133 * t1242;
t898 = t1138 * t1352 + t1143 * t955;
t1214 = t1139 * t898 + t1144 * t843;
t962 = t1043 * t1142 + t1318;
t857 = -t1130 * t962 + t1133 * t1241;
t902 = t1138 * t992 + t1143 * t963;
t1213 = t1139 * t902 + t1144 * t857;
t970 = t1063 * t1142 + t1346;
t860 = -t1130 * t970 + t1133 * t1240;
t907 = -t1138 * t994 + t1143 * t972;
t1212 = t1139 * t907 + t1144 * t860;
t971 = t1062 * t1137 - t1317;
t861 = -t1130 * t971 + t1133 * t1239;
t908 = -t1138 * t989 + t1143 * t973;
t1211 = t1139 * t908 + t1144 * t861;
t983 = -t1085 * t1304 + t1137 * t1276;
t1185 = t1138 * t983 + t1280;
t982 = -t1085 * t1305 - t1142 * t1276;
t879 = -t1130 * t982 + t1133 * t1185;
t940 = t1143 * t983 - t1281;
t1210 = t1139 * t940 + t1144 * t879;
t985 = t1031 * t1142 + t1087 * t1305;
t1184 = t1138 * t985 - t1280;
t984 = t1031 * t1137 - t1087 * t1304;
t880 = -t1130 * t984 + t1133 * t1184;
t941 = t1143 * t985 + t1281;
t1209 = t1139 * t941 + t1144 * t880;
t1014 = (t1085 * t1137 + t1087 * t1142) * t1117;
t1015 = (t1085 * t1142 - t1087 * t1137) * t1117;
t1198 = t1015 * t1138 + t1091 * t1143;
t932 = -t1130 * t1014 + t1133 * t1198;
t981 = t1015 * t1143 - t1091 * t1138;
t1208 = t1139 * t981 + t1144 * t932;
t1066 = -t1106 + t1095;
t1067 = t1105 + t1266;
t1012 = t1066 * t1138 + t1067 * t1143;
t1104 = t1293 * t1302;
t1194 = -t1066 * t1143 + t1067 * t1138;
t979 = t1130 * t1104 + t1133 * t1194;
t1207 = t1012 * t1139 + t1144 * t979;
t1013 = -t1065 * t1138 - t1143 * t1343;
t1103 = (t1127 - t1128) * t1302;
t1195 = t1065 * t1143 - t1138 * t1343;
t980 = -t1130 * t1103 + t1133 * t1195;
t1206 = t1013 * t1139 + t1144 * t980;
t1064 = (t1291 + (qJD(3) + t1122) * t1319) * t1130;
t1193 = t1079 * t1143 - t1307;
t988 = -t1130 * t1064 + t1133 * t1193;
t1204 = t1038 * t1139 + t1144 * t988;
t1202 = qJD(2) * t1122 - t1133 * t1145;
t1096 = -t1279 + t1340;
t1192 = t1096 * t1143 + t1309;
t1006 = -t1130 * t1066 + t1133 * t1192;
t1045 = -t1096 * t1138 + t1308;
t1201 = t1006 * t1144 + t1045 * t1139;
t1097 = t1278 - t1340;
t1190 = t1097 * t1138 + t1306;
t1007 = -t1130 * t1067 + t1133 * t1190;
t1046 = t1097 * t1143 - t1307;
t1200 = t1007 * t1144 + t1046 * t1139;
t1191 = t1098 * t1138 + t1308;
t1008 = -t1130 * t1343 + t1133 * t1191;
t1199 = t1008 * t1144 + t1047 * t1139;
t1125 = t1130 * t1126;
t1032 = (-t1125 * t1138 * t1145 + (-t1118 + (-t1122 * t1320 + t1290) * t1130) * t1133) * t1143;
t1056 = -t1128 * t1288 - t1138 * t1266;
t1197 = t1032 * t1144 + t1056 * t1139;
t1035 = (t1065 * t1133 + t1125 * t1297) * t1138;
t1057 = t1095 * t1143 - t1127 * t1288;
t1196 = t1035 * t1144 + t1057 * t1139;
t996 = t1144 * t1050 - t1139 * t1051;
t1188 = qJDD(2) * t1139 + t1144 * t1145;
t1101 = t1188 * t1134;
t1114 = qJDD(2) * t1144 - t1139 * t1145;
t1189 = t1101 * t1132 + t1114 * t1129;
t1060 = t1101 * t1129 - t1114 * t1132;
t557 = -pkin(5) * t751 + pkin(12) * t570;
t490 = -pkin(11) * t516 - pkin(12) * t1325 - t1136 * t557;
t503 = -pkin(4) * t516 - pkin(5) * t569;
t464 = -pkin(10) * t509 - t1137 * t503 + t1142 * t490;
t468 = -pkin(3) * t509 + pkin(4) * t751 - pkin(11) * t517 + pkin(12) * t1331 - t1141 * t557;
t1164 = pkin(9) * t489 + t1138 * t464 + t1143 * t468;
t461 = -pkin(3) * t516 + pkin(10) * t510 + t1137 * t490 + t1142 * t503;
t469 = t1130 * t1264 + t1133 * t509;
t446 = -pkin(2) * t469 - t1130 * t461 + t1133 * t1164;
t448 = -t1138 * t468 + t1143 * t464 + (-t1130 * t469 - t1133 * t470) * pkin(9);
t462 = -t1139 * t470 + t1144 * t489;
t1180 = pkin(8) * t462 + t1139 * t448 + t1144 * t446;
t549 = -pkin(5) * t876 + pkin(12) * t727 + t570;
t551 = -pkin(12) * t725 - t569;
t504 = -pkin(11) * t642 - t1136 * t549 + t1141 * t551;
t605 = -pkin(4) * t642 - pkin(5) * t725;
t491 = -pkin(10) * t623 - t1137 * t605 + t1142 * t504;
t500 = -pkin(3) * t623 + pkin(4) * t876 - pkin(11) * t644 - t1136 * t551 - t1141 * t549;
t1163 = pkin(9) * t575 + t1138 * t491 + t1143 * t500;
t486 = -pkin(3) * t642 + pkin(10) * t624 + t1137 * t504 + t1142 * t605;
t540 = t1130 * t1263 + t1133 * t623;
t460 = -pkin(2) * t540 - t1130 * t486 + t1133 * t1163;
t463 = -t1138 * t500 + t1143 * t491 + (-t1130 * t540 - t1133 * t541) * pkin(9);
t507 = -t1139 * t541 + t1144 * t575;
t1179 = pkin(8) * t507 + t1139 * t463 + t1144 * t460;
t657 = -pkin(5) * t799 + pkin(12) * t812 - t1327;
t692 = -pkin(12) * t811 + t1333;
t581 = -pkin(11) * t733 - t1136 * t657 + t1141 * t692;
t585 = -pkin(4) * t733 - pkin(5) * t811 + t618;
t519 = -pkin(10) * t675 - t1137 * t585 + t1142 * t581;
t550 = -pkin(3) * t675 + pkin(4) * t799 - pkin(11) * t734 - t1136 * t692 - t1141 * t657;
t1162 = pkin(9) * t616 + t1138 * t519 + t1143 * t550;
t512 = -pkin(3) * t733 + pkin(10) * t676 + t1137 * t581 + t1142 * t585;
t582 = t1130 * t1260 + t1133 * t675;
t467 = -pkin(2) * t582 - t1130 * t512 + t1133 * t1162;
t482 = -t1138 * t550 + t1143 * t519 + (-t1130 * t582 - t1133 * t583) * pkin(9);
t545 = -t1139 * t583 + t1144 * t616;
t1178 = pkin(8) * t545 + t1139 * t482 + t1144 * t467;
t662 = -pkin(5) * t1351 + pkin(12) * t832 + t1333;
t705 = -pkin(12) * t831 + t1327;
t587 = -pkin(11) * t747 - t1136 * t662 + t1141 * t705;
t588 = -pkin(4) * t747 - pkin(5) * t831 + t619;
t527 = -pkin(10) * t683 - t1137 * t588 + t1142 * t587;
t558 = -pkin(3) * t683 + pkin(4) * t1351 - pkin(11) * t748 - t1136 * t705 - t1141 * t662;
t1161 = pkin(9) * t634 + t1138 * t527 + t1143 * t558;
t518 = -pkin(3) * t747 + pkin(10) * t684 + t1137 * t587 + t1142 * t588;
t590 = t1130 * t1259 + t1133 * t683;
t473 = -pkin(2) * t590 - t1130 * t518 + t1133 * t1161;
t487 = -t1138 * t558 + t1143 * t527 + (-t1130 * t590 - t1133 * t591) * pkin(9);
t556 = -t1139 * t591 + t1144 * t634;
t1177 = pkin(8) * t556 + t1139 * t487 + t1144 * t473;
t552 = -pkin(10) * t625 + (-pkin(11) * t1142 + t1337) * t655;
t571 = -pkin(3) * t625 + pkin(4) * t809 - pkin(11) * t656;
t1160 = pkin(9) * t580 + t1138 * t552 + t1143 * t571;
t533 = pkin(10) * t626 + (-pkin(11) * t1137 + t1289) * t655;
t546 = t1130 * t1262 + t1133 * t625;
t478 = -pkin(2) * t546 - t1130 * t533 + t1133 * t1160;
t483 = -t1138 * t571 + t1143 * t552 + (-t1130 * t546 - t1133 * t547) * pkin(9);
t511 = -t1139 * t547 + t1144 * t580;
t1176 = pkin(8) * t511 + t1139 * t483 + t1144 * t478;
t633 = -pkin(11) * t827 - t655;
t602 = -pkin(10) * t778 + t1142 * t633 + t1337 * t827;
t610 = -pkin(3) * t778 - pkin(4) * t959 - pkin(11) * t829 - t656;
t1159 = pkin(9) * t729 + t1138 * t602 + t1143 * t610;
t589 = pkin(10) * t779 + t1137 * t633 + t1289 * t827;
t672 = t1130 * t1252 + t1133 * t778;
t506 = -pkin(2) * t672 - t1130 * t589 + t1133 * t1159;
t522 = -t1138 * t610 + t1143 * t602 + (-t1130 * t672 - t1133 * t673) * pkin(9);
t615 = -t1139 * t673 + t1144 * t729;
t1175 = pkin(8) * t615 + t1139 * t522 + t1144 * t506;
t709 = -pkin(4) * t883 + t741;
t757 = -pkin(11) * t883 + t1330;
t621 = -pkin(10) * t806 - t1137 * t709 + t1142 * t757;
t679 = -pkin(3) * t806 - pkin(4) * t918 - pkin(11) * t884 + t1324;
t1158 = pkin(9) * t756 + t1138 * t621 + t1143 * t679;
t612 = -pkin(3) * t883 + pkin(10) * t807 + t1137 * t757 + t1142 * t709;
t693 = t1130 * t1250 + t1133 * t806;
t529 = -pkin(2) * t693 - t1130 * t612 + t1133 * t1158;
t544 = -t1138 * t679 + t1143 * t621 + (-t1130 * t693 - t1133 * t694) * pkin(9);
t641 = -t1139 * t694 + t1144 * t756;
t1174 = pkin(8) * t641 + t1139 * t544 + t1144 * t529;
t710 = -pkin(4) * t887 + t742;
t761 = -pkin(11) * t887 + t1324;
t622 = -pkin(10) * t815 - t1137 * t710 + t1142 * t761;
t680 = -pkin(3) * t815 - pkin(4) * t921 - pkin(11) * t888 - t1330;
t1157 = pkin(9) * t764 + t1138 * t622 + t1143 * t680;
t614 = -pkin(3) * t887 + pkin(10) * t816 + t1137 * t761 + t1142 * t710;
t703 = t1130 * t1249 + t1133 * t815;
t531 = -pkin(2) * t703 - t1130 * t614 + t1133 * t1157;
t548 = -t1138 * t680 + t1143 * t622 + (-t1130 * t703 - t1133 * t704) * pkin(9);
t648 = -t1139 * t704 + t1144 * t764;
t1173 = pkin(8) * t648 + t1139 * t548 + t1144 * t531;
t1152 = pkin(9) * t736 + t1271 * t759;
t660 = t1130 * t1254 + t1133 * t759;
t737 = -pkin(3) * t927 + pkin(10) * t760;
t567 = -pkin(2) * t660 - t1130 * t737 + t1133 * t1152;
t568 = (-pkin(10) * t1143 + t1339) * t759 + (-t1130 * t660 - t1133 * t661) * pkin(9);
t613 = -t1139 * t661 + t1144 * t736;
t1172 = pkin(8) * t613 + t1139 * t568 + t1144 * t567;
t735 = -pkin(10) * t923 - t759;
t1153 = pkin(9) * t875 + t1138 * t735 - t1338 * t923;
t720 = pkin(3) * t1019 + pkin(10) * t925 + t760;
t797 = t1130 * t1205 + t1133 * t923;
t607 = -pkin(2) * t797 - t1130 * t720 + t1133 * t1153;
t635 = t923 * t1339 + t1143 * t735 + (-t1130 * t797 - t1133 * t798) * pkin(9);
t750 = -t1139 * t798 + t1144 * t875;
t1171 = pkin(8) * t750 + t1139 * t635 + t1144 * t607;
t788 = -pkin(3) * t954 + t854;
t862 = -pkin(10) * t954 + t1328;
t1156 = pkin(9) * t898 + t1138 * t862 + t1143 * t788;
t825 = -pkin(3) * t1352 + pkin(10) * t955 - t1322;
t842 = t1130 * t1242 + t1133 * t954;
t647 = -pkin(2) * t842 - t1130 * t825 + t1133 * t1156;
t666 = -t1138 * t788 + t1143 * t862 + (-t1130 * t842 - t1133 * t843) * pkin(9);
t770 = -t1139 * t843 + t1144 * t898;
t1170 = pkin(8) * t770 + t1139 * t666 + t1144 * t647;
t805 = -pkin(3) * t962 + t855;
t863 = -pkin(10) * t962 + t1322;
t1155 = pkin(9) * t902 + t1138 * t863 + t1143 * t805;
t826 = -pkin(3) * t992 + pkin(10) * t963 + t1328;
t856 = t1130 * t1241 + t1133 * t962;
t650 = -pkin(2) * t856 - t1130 * t826 + t1133 * t1155;
t671 = -t1138 * t805 + t1143 * t863 + (-t1130 * t856 - t1133 * t857) * pkin(9);
t771 = -t1139 * t857 + t1144 * t902;
t1169 = pkin(8) * t771 + t1139 * t671 + t1144 * t650;
t837 = -t1133 * t1011 + t1130 * t1243;
t749 = (-t1130 * t837 - t1133 * t838) * pkin(9);
t765 = -t1139 * t838 + t1144 * t872;
t766 = pkin(9) * t1133 * t872 - pkin(2) * t837;
t1168 = pkin(8) * t765 + t1139 * t749 + t1144 * t766;
t977 = -t1133 * t1104 + t1130 * t1194;
t780 = (-t1130 * t977 - t1133 * t979) * pkin(9) - t1243;
t1154 = pkin(9) * t1012 + t872;
t790 = -pkin(2) * t977 + t1133 * t1154;
t929 = t1012 * t1144 - t1139 * t979;
t1167 = pkin(8) * t929 + t1139 * t780 + t1144 * t790;
t987 = t1133 * t1064 + t1130 * t1193;
t834 = -pkin(2) * t987 + t1130 * t947 + t1133 * t1269;
t873 = -t1299 + (-t1130 * t987 - t1133 * t988) * pkin(9);
t939 = t1038 * t1144 - t1139 * t988;
t1166 = pkin(8) * t939 + t1139 * t873 + t1144 * t834;
t1005 = t1130 * t1191 + t1133 * t1343;
t845 = -pkin(2) * t1005 + t1130 * t946 + t1133 * t1268;
t874 = -t1300 + (-t1005 * t1130 - t1008 * t1133) * pkin(9);
t950 = -t1008 * t1139 + t1047 * t1144;
t1165 = pkin(8) * t950 + t1139 * t874 + t1144 * t845;
t1102 = t1114 * t1134;
t1100 = t1114 * t1131;
t1099 = t1188 * t1131;
t1061 = -t1102 * t1129 - t1132 * t1188;
t1059 = t1102 * t1132 - t1129 * t1188;
t1040 = t1121 * t1130 * t1139 + t1070 * t1144;
t1034 = (t1126 * t1143 * t1202 + t1095 * t1130) * t1138;
t1033 = (t1130 * t1266 - t1202 * t1303) * t1143;
t1018 = -t1181 + (t1099 * t1131 + t1101 * t1134) * pkin(8);
t1017 = -t1182 + (-t1100 * t1131 - t1102 * t1134) * pkin(8);
t1016 = t1134 * t1316 + (-t1131 * t1133 - t1134 * t1301) * t1121;
t1004 = t1133 * t1067 + t1130 * t1190;
t1003 = t1133 * t1066 + t1130 * t1192;
t986 = t997 * t1134;
t978 = t1133 * t1103 + t1130 * t1195;
t976 = -t1035 * t1139 + t1057 * t1144;
t975 = -t1032 * t1139 + t1056 * t1144;
t969 = -pkin(1) * t1100 + t1131 * t1050 + t1134 * t1181 - t1188 * t1336;
t968 = pkin(1) * t1099 + t1131 * t1051 - t1114 * t1336 - t1134 * t1182;
t961 = t1131 * t1107 + (t1274 - t996) * t1134;
t960 = -t1131 * t996 - t1134 * t1265;
t949 = -t1007 * t1139 + t1046 * t1144;
t948 = -t1006 * t1139 + t1045 * t1144;
t936 = -t1131 * t1034 + t1134 * t1196;
t935 = -t1131 * t1033 + t1134 * t1197;
t931 = t1133 * t1014 + t1130 * t1198;
t930 = t1013 * t1144 - t1139 * t980;
t901 = -pkin(1) * t960 + t1336 * t997;
t900 = -t1129 * t961 + t1132 * t997;
t899 = t1129 * t997 + t1132 * t961;
t895 = -t1131 * t1005 + t1134 * t1199;
t894 = -t1131 * t1004 + t1134 * t1200;
t893 = -t1131 * t1003 + t1134 * t1201;
t892 = t1134 * t1005 + t1131 * t1199;
t885 = (-t1131 * t960 - t1134 * t961) * pkin(8);
t882 = -t1131 * t987 + t1134 * t1204;
t881 = t1131 * t1204 + t1134 * t987;
t878 = t1130 * t1184 + t1133 * t984;
t877 = t1130 * t1185 + t1133 * t982;
t867 = -t1139 * t932 + t1144 * t981;
t866 = -t1131 * t978 + t1134 * t1206;
t865 = -t1131 * t977 + t1134 * t1207;
t864 = t1131 * t1207 + t1134 * t977;
t859 = t1130 * t1239 + t1133 * t971;
t858 = t1130 * t1240 + t1133 * t970;
t844 = pkin(2) * t1008 + t1130 * t1268 - t1133 * t946;
t836 = -t1129 * t895 + t1132 * t950;
t835 = t1129 * t950 + t1132 * t895;
t833 = pkin(2) * t988 + t1130 * t1269 - t1133 * t947;
t820 = -t1129 * t882 + t1132 * t939;
t819 = t1129 * t939 + t1132 * t882;
t818 = -t1139 * t880 + t1144 * t941;
t817 = -t1139 * t879 + t1144 * t940;
t813 = t1130 * t1203 + t1133 * t922;
t789 = pkin(2) * t979 + t1130 * t1154;
t785 = -t1131 * t931 + t1134 * t1208;
t784 = -t1129 * t865 + t1132 * t929;
t783 = t1129 * t929 + t1132 * t865;
t777 = -t1139 * t861 + t1144 * t908;
t776 = -t1139 * t860 + t1144 * t907;
t772 = t1130 * t1244 + t1133 * t910;
t767 = pkin(2) * t838 + t1335 * t872;
t763 = -t1131 * t878 + t1134 * t1209;
t762 = -t1131 * t877 + t1134 * t1210;
t758 = -t1139 * t814 + t1144 * t886;
t744 = t1130 * t1245 + t1133 * t869;
t743 = t1130 * t1246 + t1133 * t868;
t740 = -t1131 * t859 + t1134 * t1211;
t739 = -t1131 * t858 + t1134 * t1212;
t732 = -t1139 * t773 + t1144 * t853;
t731 = -t1131 * t856 + t1134 * t1213;
t730 = t1131 * t1213 + t1134 * t856;
t719 = -t1131 * t842 + t1134 * t1214;
t718 = t1131 * t1214 + t1134 * t842;
t716 = -t1131 * t837 + t1134 * t1215;
t715 = t1131 * t1215 + t1134 * t837;
t712 = t1130 * t1247 + t1133 * t822;
t711 = t1130 * t1248 + t1133 * t821;
t706 = -t1139 * t845 + t1144 * t874 + (-t1131 * t892 - t1134 * t895) * pkin(8);
t698 = -t1131 * t813 + t1134 * t1216;
t691 = -t1139 * t834 + t1144 * t873 + (-t1131 * t881 - t1134 * t882) * pkin(8);
t686 = -t1131 * t797 + t1134 * t1217;
t685 = t1131 * t1217 + t1134 * t797;
t682 = -t1139 * t746 + t1144 * t782;
t681 = -t1139 * t745 + t1144 * t781;
t677 = t1130 * t1251 + t1133 * t786;
t674 = -pkin(1) * t892 - t1131 * t844 + t1134 * t1165;
t670 = -pkin(1) * t881 - t1131 * t833 + t1134 * t1166;
t669 = -t1131 * t772 + t1134 * t1218;
t668 = -t1129 * t731 + t1132 * t771;
t667 = t1129 * t771 + t1132 * t731;
t664 = t1130 * t1253 + t1133 * t774;
t663 = -t1139 * t790 + t1144 * t780 + (-t1131 * t864 - t1134 * t865) * pkin(8);
t659 = -t1129 * t719 + t1132 * t770;
t658 = t1129 * t770 + t1132 * t719;
t654 = -t1139 * t714 + t1144 * t769;
t653 = -t1139 * t713 + t1144 * t768;
t652 = -t1129 * t716 + t1132 * t765;
t651 = t1129 * t765 + t1132 * t716;
t649 = pkin(2) * t857 + t1130 * t1155 + t1133 * t826;
t646 = pkin(2) * t843 + t1130 * t1156 + t1133 * t825;
t638 = -pkin(1) * t864 - t1131 * t789 + t1134 * t1167;
t637 = -t1129 * t686 + t1132 * t750;
t636 = t1129 * t750 + t1132 * t686;
t630 = -t1131 * t744 + t1134 * t1219;
t629 = -t1131 * t743 + t1134 * t1220;
t620 = -t1139 * t678 + t1144 * t738;
t611 = -t1139 * t665 + t1144 * t717;
t609 = -t1131 * t712 + t1134 * t1221;
t608 = -t1131 * t711 + t1134 * t1222;
t606 = pkin(2) * t798 + t1130 * t1153 + t1133 * t720;
t604 = -t1131 * t703 + t1134 * t1223;
t603 = t1131 * t1223 + t1134 * t703;
t601 = -t1131 * t693 + t1134 * t1224;
t600 = t1131 * t1224 + t1134 * t693;
t597 = t1130 * t1257 + t1133 * t688;
t596 = t1130 * t1258 + t1133 * t687;
t593 = t1130 * t1255 + t1133 * t700;
t592 = t1130 * t1256 + t1133 * t699;
t586 = -t1139 * t766 + t1144 * t749 + (-t1131 * t715 - t1134 * t716) * pkin(8);
t584 = -t1131 * t677 + t1134 * t1225;
t579 = -t1131 * t672 + t1134 * t1226;
t578 = t1131 * t1226 + t1134 * t672;
t577 = -pkin(1) * t715 - t1131 * t767 + t1134 * t1168;
t574 = -t1131 * t660 + t1134 * t1228;
t573 = t1131 * t1228 + t1134 * t660;
t572 = -t1131 * t664 + t1134 * t1227;
t566 = pkin(2) * t661 + t1130 * t1152 + t1133 * t737;
t565 = -t1129 * t604 + t1132 * t648;
t564 = t1129 * t648 + t1132 * t604;
t563 = -t1129 * t601 + t1132 * t641;
t562 = t1129 * t641 + t1132 * t601;
t561 = -t1139 * t650 + t1144 * t671 + (-t1131 * t730 - t1134 * t731) * pkin(8);
t560 = -t1139 * t599 + t1144 * t640;
t559 = -t1139 * t598 + t1144 * t639;
t555 = -t1139 * t595 + t1144 * t628;
t554 = -t1139 * t594 + t1144 * t627;
t553 = -t1139 * t647 + t1144 * t666 + (-t1131 * t718 - t1134 * t719) * pkin(8);
t542 = t1130 * t1261 + t1133 * t631;
t539 = -t1129 * t579 + t1132 * t615;
t538 = t1129 * t615 + t1132 * t579;
t537 = -pkin(1) * t730 - t1131 * t649 + t1134 * t1169;
t536 = -t1129 * t574 + t1132 * t613;
t535 = t1129 * t613 + t1132 * t574;
t534 = -pkin(1) * t718 - t1131 * t646 + t1134 * t1170;
t532 = -t1139 * t607 + t1144 * t635 + (-t1131 * t685 - t1134 * t686) * pkin(8);
t530 = pkin(2) * t704 + t1130 * t1157 + t1133 * t614;
t528 = pkin(2) * t694 + t1130 * t1158 + t1133 * t612;
t526 = -t1131 * t597 + t1134 * t1229;
t525 = -t1131 * t596 + t1134 * t1230;
t524 = -t1131 * t593 + t1134 * t1231;
t523 = -t1131 * t592 + t1134 * t1232;
t521 = -t1131 * t590 + t1134 * t1233;
t520 = t1131 * t1233 + t1134 * t590;
t515 = -pkin(1) * t685 - t1131 * t606 + t1134 * t1171;
t514 = -t1131 * t582 + t1134 * t1234;
t513 = t1131 * t1234 + t1134 * t582;
t508 = -t1139 * t543 + t1144 * t576;
t505 = pkin(2) * t673 + t1130 * t1159 + t1133 * t589;
t502 = -t1129 * t521 + t1132 * t556;
t501 = t1129 * t556 + t1132 * t521;
t499 = -t1129 * t514 + t1132 * t545;
t498 = t1129 * t545 + t1132 * t514;
t497 = -t1131 * t546 + t1134 * t1235;
t496 = t1131 * t1235 + t1134 * t546;
t495 = -t1131 * t542 + t1134 * t1236;
t494 = -t1131 * t540 + t1134 * t1237;
t493 = t1131 * t1237 + t1134 * t540;
t492 = -t1139 * t567 + t1144 * t568 + (-t1131 * t573 - t1134 * t574) * pkin(8);
t488 = -t1139 * t531 + t1144 * t548 + (-t1131 * t603 - t1134 * t604) * pkin(8);
t485 = -t1139 * t529 + t1144 * t544 + (-t1131 * t600 - t1134 * t601) * pkin(8);
t484 = -pkin(1) * t573 - t1131 * t566 + t1134 * t1172;
t481 = -t1129 * t497 + t1132 * t511;
t480 = t1129 * t511 + t1132 * t497;
t479 = -pkin(1) * t603 - t1131 * t530 + t1134 * t1173;
t477 = pkin(2) * t547 + t1130 * t1160 + t1133 * t533;
t476 = -t1129 * t494 + t1132 * t507;
t475 = t1129 * t507 + t1132 * t494;
t474 = -pkin(1) * t600 - t1131 * t528 + t1134 * t1174;
t472 = pkin(2) * t591 + t1130 * t1161 + t1133 * t518;
t471 = -t1139 * t506 + t1144 * t522 + (-t1131 * t578 - t1134 * t579) * pkin(8);
t466 = pkin(2) * t583 + t1130 * t1162 + t1133 * t512;
t465 = -pkin(1) * t578 - t1131 * t505 + t1134 * t1175;
t459 = pkin(2) * t541 + t1130 * t1163 + t1133 * t486;
t458 = -t1139 * t473 + t1144 * t487 + (-t1131 * t520 - t1134 * t521) * pkin(8);
t457 = -t1139 * t467 + t1144 * t482 + (-t1131 * t513 - t1134 * t514) * pkin(8);
t456 = -t1131 * t469 + t1134 * t1238;
t455 = t1131 * t1238 + t1134 * t469;
t454 = -t1139 * t478 + t1144 * t483 + (-t1131 * t496 - t1134 * t497) * pkin(8);
t453 = -pkin(1) * t520 - t1131 * t472 + t1134 * t1177;
t452 = -pkin(1) * t513 - t1131 * t466 + t1134 * t1178;
t451 = -pkin(1) * t496 - t1131 * t477 + t1134 * t1176;
t450 = -t1129 * t456 + t1132 * t462;
t449 = t1129 * t462 + t1132 * t456;
t447 = -t1139 * t460 + t1144 * t463 + (-t1131 * t493 - t1134 * t494) * pkin(8);
t445 = pkin(2) * t470 + t1130 * t1164 + t1133 * t461;
t444 = -pkin(1) * t493 - t1131 * t459 + t1134 * t1179;
t443 = -t1139 * t446 + t1144 * t448 + (-t1131 * t455 - t1134 * t456) * pkin(8);
t442 = -pkin(1) * t455 - t1131 * t445 + t1134 * t1180;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1072, 0, 0, 0, 0, 0, 0, t1061, t1060, 0, t900, 0, 0, 0, 0, 0, 0, t836, t820, t784, t652, 0, 0, 0, 0, 0, 0, t659, t668, t637, t536, 0, 0, 0, 0, 0, 0, t563, t565, t539, t481, 0, 0, 0, 0, 0, 0, t499, t502, t476, t450; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1267, 0, 0, 0, 0, 0, 0, t1059, -t1189, 0, t899, 0, 0, 0, 0, 0, 0, t835, t819, t783, t651, 0, 0, 0, 0, 0, 0, t658, t667, t636, t535, 0, 0, 0, 0, 0, 0, t562, t564, t538, t480, 0, 0, 0, 0, 0, 0, t498, t501, t475, t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1334, 0, 0, 0, 0, 0, 0, t1100, -t1099, 0, t960, 0, 0, 0, 0, 0, 0, t892, t881, t864, t715, 0, 0, 0, 0, 0, 0, t718, t730, t685, t573, 0, 0, 0, 0, 0, 0, t600, t603, t578, t496, 0, 0, 0, 0, 0, 0, t513, t520, t493, t455; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1348, -t1347, t1267, qJ(1) * t1267, 0, 0, -t1060, 0, t1061, t1129 * t1292, -qJ(1) * t1059 + t1017 * t1132 - t1129 * t969, qJ(1) * t1189 + t1018 * t1132 - t1129 * t968, -t1129 * t986 + t1132 * t996, -qJ(1) * t899 - t1129 * t901 + t1132 * t885, -t1129 * t936 + t1132 * t976, -t1129 * t866 + t1132 * t930, -t1129 * t893 + t1132 * t948, -t1129 * t935 + t1132 * t975, -t1129 * t894 + t1132 * t949, -t1016 * t1129 + t1040 * t1132, -qJ(1) * t835 - t1129 * t674 + t1132 * t706, -qJ(1) * t819 - t1129 * t670 + t1132 * t691, -qJ(1) * t783 - t1129 * t638 + t1132 * t663, -qJ(1) * t651 - t1129 * t577 + t1132 * t586, -t1129 * t763 + t1132 * t818, -t1129 * t698 + t1132 * t758, -t1129 * t739 + t1132 * t776, -t1129 * t762 + t1132 * t817, -t1129 * t740 + t1132 * t777, -t1129 * t785 + t1132 * t867, -qJ(1) * t658 - t1129 * t534 + t1132 * t553, -qJ(1) * t667 - t1129 * t537 + t1132 * t561, -qJ(1) * t636 - t1129 * t515 + t1132 * t532, -qJ(1) * t535 - t1129 * t484 + t1132 * t492, -t1129 * t630 + t1132 * t682, -t1129 * t584 + t1132 * t620, -t1129 * t608 + t1132 * t653, -t1129 * t629 + t1132 * t681, -t1129 * t609 + t1132 * t654, -t1129 * t669 + t1132 * t732, -qJ(1) * t562 - t1129 * t474 + t1132 * t485, -qJ(1) * t564 - t1129 * t479 + t1132 * t488, -qJ(1) * t538 - t1129 * t465 + t1132 * t471, -qJ(1) * t480 - t1129 * t451 + t1132 * t454, -t1129 * t524 + t1132 * t555, -t1129 * t495 + t1132 * t508, -t1129 * t525 + t1132 * t559, -t1129 * t523 + t1132 * t554, -t1129 * t526 + t1132 * t560, -t1129 * t572 + t1132 * t611, -qJ(1) * t498 - t1129 * t452 + t1132 * t457, -qJ(1) * t501 - t1129 * t453 + t1132 * t458, -qJ(1) * t475 - t1129 * t444 + t1132 * t447, -qJ(1) * t449 - t1129 * t442 + t1132 * t443; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1347, -t1348, t1072, qJ(1) * t1072, 0, 0, t1189, 0, t1059, -t1132 * t1292, qJ(1) * t1061 + t1017 * t1129 + t1132 * t969, qJ(1) * t1060 + t1018 * t1129 + t1132 * t968, t1129 * t996 + t1132 * t986, qJ(1) * t900 + t1129 * t885 + t1132 * t901, t1129 * t976 + t1132 * t936, t1129 * t930 + t1132 * t866, t1129 * t948 + t1132 * t893, t1129 * t975 + t1132 * t935, t1129 * t949 + t1132 * t894, t1016 * t1132 + t1040 * t1129, qJ(1) * t836 + t1129 * t706 + t1132 * t674, qJ(1) * t820 + t1129 * t691 + t1132 * t670, qJ(1) * t784 + t1129 * t663 + t1132 * t638, qJ(1) * t652 + t1129 * t586 + t1132 * t577, t1129 * t818 + t1132 * t763, t1129 * t758 + t1132 * t698, t1129 * t776 + t1132 * t739, t1129 * t817 + t1132 * t762, t1129 * t777 + t1132 * t740, t1129 * t867 + t1132 * t785, qJ(1) * t659 + t1129 * t553 + t1132 * t534, qJ(1) * t668 + t1129 * t561 + t1132 * t537, qJ(1) * t637 + t1129 * t532 + t1132 * t515, qJ(1) * t536 + t1129 * t492 + t1132 * t484, t1129 * t682 + t1132 * t630, t1129 * t620 + t1132 * t584, t1129 * t653 + t1132 * t608, t1129 * t681 + t1132 * t629, t1129 * t654 + t1132 * t609, t1129 * t732 + t1132 * t669, qJ(1) * t563 + t1129 * t485 + t1132 * t474, qJ(1) * t565 + t1129 * t488 + t1132 * t479, qJ(1) * t539 + t1129 * t471 + t1132 * t465, qJ(1) * t481 + t1129 * t454 + t1132 * t451, t1129 * t555 + t1132 * t524, t1129 * t508 + t1132 * t495, t1129 * t559 + t1132 * t525, t1129 * t554 + t1132 * t523, t1129 * t560 + t1132 * t526, t1129 * t611 + t1132 * t572, qJ(1) * t499 + t1129 * t457 + t1132 * t452, qJ(1) * t502 + t1129 * t458 + t1132 * t453, qJ(1) * t476 + t1129 * t447 + t1132 * t444, qJ(1) * t450 + t1129 * t443 + t1132 * t442; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1275, t1270, 0, 0, 0, 0, t1099, 0, t1100, t1134 * qJDD(2), pkin(1) * t1102 - t1134 * t1050 + (-pkin(8) * t1188 + t1181) * t1131, -pkin(1) * t1101 - t1134 * t1051 + (-pkin(8) * t1114 - t1182) * t1131, t1350, pkin(1) * t961 + pkin(8) * t1350, t1134 * t1034 + t1131 * t1196, t1131 * t1206 + t1134 * t978, t1134 * t1003 + t1131 * t1201, t1134 * t1033 + t1131 * t1197, t1134 * t1004 + t1131 * t1200, t1131 * t1316 + (-t1131 * t1301 + t1133 * t1134) * t1121, pkin(1) * t895 + t1131 * t1165 + t1134 * t844, pkin(1) * t882 + t1131 * t1166 + t1134 * t833, pkin(1) * t865 + t1131 * t1167 + t1134 * t789, pkin(1) * t716 + t1131 * t1168 + t1134 * t767, t1131 * t1209 + t1134 * t878, t1131 * t1216 + t1134 * t813, t1131 * t1212 + t1134 * t858, t1131 * t1210 + t1134 * t877, t1131 * t1211 + t1134 * t859, t1131 * t1208 + t1134 * t931, pkin(1) * t719 + t1131 * t1170 + t1134 * t646, pkin(1) * t731 + t1131 * t1169 + t1134 * t649, pkin(1) * t686 + t1131 * t1171 + t1134 * t606, pkin(1) * t574 + t1131 * t1172 + t1134 * t566, t1131 * t1219 + t1134 * t744, t1131 * t1225 + t1134 * t677, t1131 * t1222 + t1134 * t711, t1131 * t1220 + t1134 * t743, t1131 * t1221 + t1134 * t712, t1131 * t1218 + t1134 * t772, pkin(1) * t601 + t1131 * t1174 + t1134 * t528, pkin(1) * t604 + t1131 * t1173 + t1134 * t530, pkin(1) * t579 + t1131 * t1175 + t1134 * t505, pkin(1) * t497 + t1131 * t1176 + t1134 * t477, t1131 * t1231 + t1134 * t593, t1131 * t1236 + t1134 * t542, t1131 * t1230 + t1134 * t596, t1131 * t1232 + t1134 * t592, t1131 * t1229 + t1134 * t597, t1131 * t1227 + t1134 * t664, pkin(1) * t514 + t1131 * t1178 + t1134 * t466, pkin(1) * t521 + t1131 * t1177 + t1134 * t472, pkin(1) * t494 + t1131 * t1179 + t1134 * t459, pkin(1) * t456 + t1131 * t1180 + t1134 * t445;];
tauB_reg  = t1;
