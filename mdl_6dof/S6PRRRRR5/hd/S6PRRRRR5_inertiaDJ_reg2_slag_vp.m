% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_inertiaDJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:10:02
% EndTime: 2019-03-09 01:10:28
% DurationCPUTime: 10.74s
% Computational Cost: add. (11592->625), mult. (32695->1106), div. (0->0), fcn. (33145->14), ass. (0->257)
t136 = sin(pkin(7));
t140 = sin(qJ(4));
t301 = cos(pkin(7));
t243 = t140 * t301;
t141 = sin(qJ(3));
t144 = cos(qJ(4));
t295 = t141 * t144;
t189 = t136 * t295 + t243;
t300 = t136 * t141;
t97 = t140 * t300 - t144 * t301;
t317 = t97 * pkin(4);
t145 = cos(qJ(3));
t241 = t145 * t301;
t227 = pkin(2) * t241;
t184 = -pkin(3) * t301 - t227;
t276 = pkin(9) * t300;
t91 = t184 + t276;
t159 = -pkin(11) * t189 + t317 + t91;
t288 = qJD(3) * t141;
t254 = t136 * t288;
t242 = t141 * t301;
t228 = pkin(2) * t242;
t183 = pkin(10) * t301 + t228;
t299 = t136 * t145;
t275 = pkin(9) * t299;
t173 = t183 + t275;
t168 = qJD(4) * t173;
t212 = pkin(3) * t141 - pkin(10) * t145;
t289 = qJD(3) * t136;
t194 = t212 * t289;
t185 = -t227 + t276;
t180 = t185 * qJD(3);
t268 = -pkin(10) * t141 - pkin(2);
t203 = -pkin(3) * t145 + t268;
t195 = t203 * t136;
t330 = -qJD(4) * t195 + t180;
t35 = t330 * t144 + (t168 - t194) * t140;
t333 = -pkin(11) * t254 - qJD(5) * t159 + t35;
t179 = t144 * t183;
t156 = t179 + (t140 * t268 + (-t140 * pkin(3) + t144 * pkin(9) - pkin(11)) * t145) * t136;
t239 = qJD(3) * t301;
t215 = t141 * t239;
t253 = t145 * t289;
t262 = qJD(4) * t300;
t113 = t140 * t262;
t236 = t301 * qJD(4);
t323 = -t144 * (t236 + t253) + t113;
t181 = t189 * qJD(4);
t75 = t140 * t253 + t181;
t332 = -pkin(2) * t215 - t75 * pkin(4) - pkin(9) * t253 - pkin(11) * t323 + qJD(5) * t156;
t139 = sin(qJ(5));
t143 = cos(qJ(5));
t120 = t143 * t299;
t182 = qJD(5) * t189;
t163 = qJD(5) * t120 + t143 * t323 + (t182 - t254) * t139;
t161 = t163 * t139;
t282 = qJD(5) * t143;
t76 = -t139 * t299 + t143 * t189;
t331 = t76 * t282 - t161;
t302 = t139 * t189 + t120;
t237 = t302 * qJD(5);
t283 = qJD(5) * t139;
t257 = t145 * t283;
t307 = t139 * t323 - t143 * t182;
t322 = -t136 * (t143 * t288 + t257) - t307;
t329 = t139 * t237 - t143 * t322;
t142 = sin(qJ(2));
t146 = cos(qJ(2));
t240 = t146 * t301;
t328 = -t141 * t142 + t145 * t240;
t316 = cos(qJ(6));
t244 = t316 * qJD(6);
t327 = t316 * qJD(5) + t244;
t285 = qJD(4) * t144;
t251 = t139 * t285;
t190 = t140 * t282 + t251;
t326 = t140 * t283 - t143 * t285;
t325 = -t143 * t75 + t97 * t283;
t130 = qJD(4) * t140;
t61 = t97 * t130 - t144 * t75;
t132 = t139 ^ 2;
t134 = t143 ^ 2;
t292 = t132 - t134;
t235 = qJD(5) * t292;
t324 = qJD(5) + qJD(6);
t281 = qJD(5) * t144;
t258 = t139 * t281;
t286 = qJD(4) * t143;
t191 = t140 * t286 + t258;
t310 = t144 * pkin(4);
t211 = -pkin(11) * t140 - t310;
t202 = -pkin(3) + t211;
t196 = t143 * t202;
t210 = pkin(4) * t140 - pkin(11) * t144;
t197 = t210 * t139;
t62 = pkin(10) * t191 - qJD(4) * t197 - qJD(5) * t196;
t319 = -pkin(12) - pkin(11);
t321 = t140 * t319 - pkin(3) - t310;
t135 = t144 ^ 2;
t320 = 0.2e1 * qJD(3);
t318 = t75 * pkin(5);
t315 = sin(qJ(6));
t314 = pkin(10) * t136;
t313 = pkin(10) * t140;
t312 = t139 * pkin(10);
t311 = t143 * pkin(4);
t137 = sin(pkin(6));
t138 = cos(pkin(6));
t188 = t141 * t240 + t142 * t145;
t54 = t138 * t254 + (t188 * qJD(3) + (t141 * t146 + t142 * t241) * qJD(2)) * t137;
t71 = -t137 * t328 - t138 * t299;
t309 = t54 * t71;
t290 = qJD(2) * t137;
t252 = t142 * t290;
t224 = t136 * t252;
t55 = t138 * t253 + (t328 * qJD(3) + (-t142 * t242 + t145 * t146) * qJD(2)) * t137;
t72 = t137 * t188 + t138 * t300;
t96 = -t137 * t146 * t136 + t138 * t301;
t59 = t140 * t96 + t144 * t72;
t26 = qJD(4) * t59 + t140 * t55 - t144 * t224;
t58 = t140 * t72 - t96 * t144;
t22 = t58 * t26;
t102 = t228 + t275;
t93 = qJD(3) * t102;
t308 = t71 * t93;
t29 = t139 * t159 + t143 * t156;
t306 = t140 * t26;
t298 = t139 * t140;
t297 = t140 * t143;
t294 = t143 * t144;
t293 = t144 * t145;
t126 = pkin(10) * t294;
t87 = t139 * t202 + t126;
t133 = t140 ^ 2;
t291 = t133 - t135;
t287 = qJD(4) * t139;
t284 = qJD(4) * t145;
t66 = 0.2e1 * t97 * t75;
t280 = -0.2e1 * pkin(3) * qJD(4);
t279 = -0.2e1 * pkin(4) * qJD(5);
t278 = -t140 * t330 + t144 * t168;
t277 = t144 * t312;
t274 = pkin(5) * t283;
t273 = pkin(10) * t285;
t271 = t58 * t283;
t129 = -pkin(5) * t143 - pkin(4);
t266 = -pkin(5) - t312;
t265 = t316 * t143;
t264 = t315 * t139;
t131 = t136 ^ 2;
t263 = t131 * t288;
t261 = t140 * t284;
t255 = t143 * t281;
t250 = t139 * t282;
t249 = t140 * t285;
t248 = qJD(4) * t316;
t247 = qJD(4) * t315;
t246 = qJD(6) * t315;
t238 = t302 * qJD(4);
t234 = t291 * qJD(4);
t233 = 0.2e1 * t249;
t232 = pkin(5) * t244;
t231 = pkin(5) * t246;
t230 = t319 * t316;
t229 = t319 * t315;
t226 = t140 * t264;
t225 = t131 * t252;
t223 = t143 * t249;
t222 = t133 * t250;
t221 = t145 * t263;
t220 = t144 * t248;
t219 = t144 * t247;
t217 = t316 * t302;
t216 = t315 * t302;
t214 = t144 * t238;
t10 = t332 * t139 + t143 * t333;
t11 = t139 * t333 - t332 * t143;
t209 = -t10 * t143 - t11 * t139;
t33 = -t139 * t59 + t143 * t71;
t34 = t139 * t71 + t143 * t59;
t208 = -t139 * t34 - t143 * t33;
t86 = t196 - t277;
t207 = -t139 * t87 - t86 * t143;
t36 = t144 * t194 - t278;
t206 = -t36 * t140 - t35 * t144;
t205 = t139 * t230;
t204 = t139 * t229;
t201 = t139 * t26 + t58 * t282;
t200 = -t143 * t26 + t271;
t31 = (-t141 * pkin(4) - t144 * t212) * t289 + t278;
t64 = -t140 * t173 + t144 * t195;
t60 = pkin(4) * t299 - t64;
t199 = t31 * t139 + t60 * t282;
t198 = t139 * t75 + t97 * t282;
t147 = pkin(12) * t163 + t11 + t318;
t150 = t97 * pkin(5) - t76 * pkin(12) - t139 * t156 + t143 * t159;
t149 = t316 * t150;
t152 = -pkin(12) * t322 - t10;
t25 = -pkin(12) * t302 + t29;
t1 = -qJD(6) * t149 - t315 * t147 - t316 * t152 + t25 * t246;
t21 = t315 * t33 + t316 * t34;
t153 = (-t139 * t321 - t126) * qJD(5) + (t319 * t294 + (-t266 + t311) * t140) * qJD(4);
t162 = -pkin(12) * t190 - t62;
t167 = t143 * t321 + t266 * t144;
t166 = t316 * t167;
t77 = -pkin(12) * t298 + t87;
t18 = -qJD(6) * t166 - t315 * t153 - t316 * t162 + t77 * t246;
t108 = t139 * t316 + t143 * t315;
t193 = t140 * t288 - t144 * t284;
t118 = t319 * t143;
t79 = -t118 * t316 + t204;
t178 = pkin(9) * t293 + t140 * t203;
t27 = -qJD(4) * t58 + t140 * t224 + t144 * t55;
t14 = -qJD(5) * t34 - t139 * t27 + t143 * t54;
t15 = qJD(5) * t33 + t139 * t54 + t143 * t27;
t172 = qJD(5) * t208 - t139 * t14 + t143 * t15;
t63 = -t87 * qJD(5) + (pkin(10) * t298 + t143 * t210) * qJD(4);
t171 = qJD(5) * t207 - t139 * t63 - t143 * t62;
t170 = t306 + t144 * t27 + (-t140 * t59 + t144 * t58) * qJD(4);
t165 = t315 * t167;
t164 = t139 * t322 + t143 * t237;
t74 = t324 * t108;
t45 = t316 * t77 + t165;
t160 = t163 * t143;
t158 = t316 * t153 - t162 * t315;
t148 = t315 * t150;
t2 = -qJD(6) * t148 + t316 * t147 - t152 * t315 - t244 * t25;
t122 = -0.2e1 * t249;
t111 = -0.2e1 * t221;
t110 = (pkin(5) * t139 + pkin(10)) * t140;
t107 = t264 - t265;
t95 = t140 * t265 - t226;
t94 = t108 * t140;
t84 = pkin(5) * t190 + t273;
t80 = t140 * t235 - t143 * t251;
t78 = t118 * t315 + t205;
t73 = (qJD(5) * t315 + t246) * t139 - t327 * t143;
t65 = t136 * t178 + t179;
t53 = -t79 * qJD(6) + (t143 * t230 - t204) * qJD(5);
t52 = -t118 * t246 - t205 * t324 - t229 * t282;
t50 = t139 * t220 + (t140 * t327 + t219) * t143 - t324 * t226;
t49 = t139 * t219 + t140 * t74 - t143 * t220;
t48 = t316 * t76 - t216;
t47 = t315 * t76 + t217;
t44 = -t315 * t77 + t166;
t37 = pkin(5) * t302 + t60;
t28 = -t139 * t179 + t143 * (-pkin(11) * t243 + t184 + t317) + (-t139 * (-t145 * pkin(11) + t178) + t143 * (t141 * pkin(9) - pkin(11) * t295)) * t136;
t23 = -t307 * pkin(5) + (-pkin(5) * t257 + (pkin(10) * t293 + (-pkin(3) * t144 + t129) * t141) * qJD(3)) * t136 + t278;
t20 = -t315 * t34 + t316 * t33;
t19 = -qJD(6) * t45 + t158;
t17 = -qJD(6) * t216 - t163 * t315 + t244 * t76 + t316 * t322;
t16 = qJD(6) * t217 + t163 * t316 + t246 * t76 + t315 * t322;
t9 = t25 * t316 + t148;
t8 = -t25 * t315 + t149;
t4 = -qJD(6) * t21 + t14 * t316 - t15 * t315;
t3 = -t14 * t315 - t15 * t316 - t244 * t33 + t246 * t34;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t224 * t96 + 0.2e1 * t55 * t72 + 0.2e1 * t309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t27 * t59 + 0.2e1 * t22 + 0.2e1 * t309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t14 * t33 + 0.2e1 * t15 * t34 + 0.2e1 * t22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t20 * t4 - 0.2e1 * t21 * t3 + 0.2e1 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t146 * t290, 0, 0, 0, 0, 0, 0, 0, 0, -t145 * t225 + t254 * t96 - t301 * t54, t141 * t225 + t253 * t96 - t301 * t55 (t141 * t54 + t145 * t55 + (-t141 * t72 + t145 * t71) * qJD(3)) * t136, -pkin(2) * t225 + t55 * t102 - t180 * t72 + t185 * t54 + t308, 0, 0, 0, 0, 0, 0, t54 * t97 + t71 * t75 + (t145 * t26 - t288 * t58) * t136, t189 * t54 - t254 * t59 + t27 * t299 - t323 * t71, t189 * t26 - t27 * t97 - t323 * t58 - t59 * t75, -t26 * t64 + t27 * t65 - t35 * t59 - t36 * t58 + t54 * t91 + t308, 0, 0, 0, 0, 0, 0, t14 * t97 + t26 * t302 + t322 * t58 + t33 * t75, -t15 * t97 - t163 * t58 + t26 * t76 - t34 * t75, -t14 * t76 - t15 * t302 + t163 * t33 - t322 * t34, -t10 * t34 + t11 * t33 + t14 * t28 + t15 * t29 + t26 * t60 + t31 * t58, 0, 0, 0, 0, 0, 0, t17 * t58 + t20 * t75 + t26 * t47 + t4 * t97, -t16 * t58 - t21 * t75 + t26 * t48 + t3 * t97, t16 * t20 - t17 * t21 + t3 * t47 - t4 * t48, -t1 * t21 + t2 * t20 + t23 * t58 + t26 * t37 - t3 * t9 + t4 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t221 (-t141 ^ 2 + t145 ^ 2) * t131 * t320, 0.2e1 * t239 * t299, t111, -0.2e1 * t136 * t215, 0, -0.2e1 * pkin(2) * t263 - 0.2e1 * t301 * t93 (-t131 * pkin(2) * t145 + t185 * t301) * t320, -0.2e1 * t102 * t254 - 0.2e1 * t180 * t299 + 0.2e1 * t185 * t253 + 0.2e1 * t300 * t93, -0.2e1 * t102 * t180 + 0.2e1 * t185 * t93, -0.2e1 * t189 * t323, -0.2e1 * t189 * t75 + 0.2e1 * t323 * t97, 0.2e1 * t189 * t254 + 0.2e1 * t299 * t323, t66, 0.2e1 * (t145 * t75 - t288 * t97) * t136, t111, 0.2e1 * t75 * t91 + 0.2e1 * t93 * t97 + 0.2e1 * (-t145 * t36 + t288 * t64) * t136, 0.2e1 * t189 * t93 - 0.2e1 * t254 * t65 - 0.2e1 * t299 * t35 - 0.2e1 * t323 * t91, -0.2e1 * t189 * t36 + 0.2e1 * t323 * t64 + 0.2e1 * t35 * t97 - 0.2e1 * t65 * t75, -0.2e1 * t35 * t65 + 0.2e1 * t36 * t64 + 0.2e1 * t91 * t93, -0.2e1 * t76 * t163, 0.2e1 * t163 * t302 - 0.2e1 * t322 * t76, -0.2e1 * t163 * t97 + 0.2e1 * t76 * t75, 0.2e1 * t302 * t322, -0.2e1 * t302 * t75 - 0.2e1 * t322 * t97, t66, 0.2e1 * t11 * t97 + 0.2e1 * t28 * t75 + 0.2e1 * t302 * t31 + 0.2e1 * t322 * t60, 0.2e1 * t10 * t97 - 0.2e1 * t163 * t60 - 0.2e1 * t29 * t75 + 0.2e1 * t31 * t76, 0.2e1 * t10 * t302 - 0.2e1 * t11 * t76 + 0.2e1 * t163 * t28 - 0.2e1 * t29 * t322, -0.2e1 * t10 * t29 + 0.2e1 * t11 * t28 + 0.2e1 * t31 * t60, -0.2e1 * t48 * t16, 0.2e1 * t16 * t47 - 0.2e1 * t17 * t48, -0.2e1 * t16 * t97 + 0.2e1 * t48 * t75, 0.2e1 * t47 * t17, -0.2e1 * t17 * t97 - 0.2e1 * t47 * t75, t66, 0.2e1 * t17 * t37 + 0.2e1 * t2 * t97 + 0.2e1 * t23 * t47 + 0.2e1 * t75 * t8, 0.2e1 * t1 * t97 - 0.2e1 * t16 * t37 + 0.2e1 * t23 * t48 - 0.2e1 * t75 * t9, 0.2e1 * t1 * t47 + 0.2e1 * t16 * t8 - 0.2e1 * t17 * t9 - 0.2e1 * t2 * t48, -0.2e1 * t1 * t9 + 0.2e1 * t2 * t8 + 0.2e1 * t23 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, -t55, 0, 0, 0, 0, 0, 0, 0, 0, t130 * t71 - t144 * t54, t140 * t54 + t285 * t71, t170, -pkin(3) * t54 + pkin(10) * t170, 0, 0, 0, 0, 0, 0 (t287 * t58 - t14) * t144 + (qJD(4) * t33 + t201) * t140 (t286 * t58 + t15) * t144 + (-qJD(4) * t34 - t200) * t140, t208 * t285 + (-t139 * t15 - t14 * t143 + (t139 * t33 - t143 * t34) * qJD(5)) * t140, t14 * t86 + t15 * t87 + t33 * t63 - t34 * t62 + (t285 * t58 + t306) * pkin(10), 0, 0, 0, 0, 0, 0, t130 * t20 - t144 * t4 + t26 * t94 + t50 * t58, -t130 * t21 - t144 * t3 + t26 * t95 - t49 * t58, t20 * t49 - t21 * t50 + t3 * t94 - t4 * t95, t110 * t26 - t18 * t21 + t19 * t20 - t3 * t45 + t4 * t44 + t58 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t253, 0, -t254, 0, -t93, t180, 0, 0, t135 * t262 + (-t113 + (0.2e1 * t236 + t253) * t144) * t140, -t144 * t323 - t97 * t285 + (-t181 - t75) * t140, t193 * t136, t61 (t144 * t288 + t261) * t136, 0, -pkin(3) * t75 + t130 * t91 - t144 * t93 - t193 * t314, -pkin(10) * t144 * t254 + pkin(3) * t323 + t93 * t140 - t261 * t314 + t285 * t91, pkin(10) * t61 - t130 * t65 + t189 * t273 - t285 * t64 - t313 * t323 + t206, -pkin(3) * t93 + ((-t65 * t140 - t64 * t144) * qJD(4) + t206) * pkin(10), -t140 * t160 - t326 * t76, -t143 * t214 - t190 * t76 + (t161 + t329) * t140, t130 * t76 + t144 * t163 + t297 * t75 - t326 * t97, t139 * t214 + t140 * t164 (-t287 * t97 + t322) * t144 + (-t238 - t198) * t140, t61, t63 * t97 + t86 * t75 + (-t11 + (pkin(10) * t302 + t60 * t139) * qJD(4)) * t144 + (pkin(10) * t322 + t28 * qJD(4) + t199) * t140, -t10 * t144 - t130 * t29 - t163 * t313 + t273 * t76 + t297 * t31 - t326 * t60 + t62 * t97 - t87 * t75, t10 * t298 - t11 * t297 + t163 * t86 - t190 * t29 + t28 * t326 + t302 * t62 - t322 * t87 - t63 * t76, -t10 * t87 + t11 * t86 + t28 * t63 - t29 * t62 + (t31 * t140 + t285 * t60) * pkin(10), -t16 * t95 - t48 * t49, t16 * t94 - t17 * t95 + t47 * t49 - t48 * t50, t130 * t48 + t144 * t16 - t49 * t97 + t75 * t95, t17 * t94 + t47 * t50, -t130 * t47 + t144 * t17 - t50 * t97 - t75 * t94, t61, t110 * t17 + t130 * t8 - t144 * t2 + t19 * t97 + t23 * t94 + t37 * t50 + t44 * t75 + t47 * t84, -t1 * t144 - t110 * t16 - t130 * t9 + t18 * t97 + t23 * t95 - t37 * t49 - t45 * t75 + t48 * t84, t1 * t94 + t16 * t44 - t17 * t45 + t18 * t47 - t19 * t48 - t2 * t95 + t49 * t8 - t50 * t9, -t1 * t45 + t110 * t23 - t18 * t9 + t19 * t8 + t2 * t44 + t37 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, -0.2e1 * t234, 0, t122, 0, 0, t140 * t280, t144 * t280, 0, 0, 0.2e1 * t134 * t249 - 0.2e1 * t222, 0.2e1 * t133 * t235 - 0.4e1 * t139 * t223, 0.2e1 * t140 * t258 + 0.2e1 * t286 * t291, 0.2e1 * t132 * t249 + 0.2e1 * t222, -0.2e1 * t139 * t234 + 0.2e1 * t140 * t255, t122, 0.2e1 * t86 * t130 - 0.2e1 * t144 * t63 + 0.2e1 * (t133 * t282 + t139 * t233) * pkin(10), -0.2e1 * t87 * t130 - 0.2e1 * t144 * t62 + 0.2e1 * (-t133 * t283 + 0.2e1 * t223) * pkin(10), 0.2e1 * t207 * t285 + 0.2e1 * (t139 * t62 - t143 * t63 + (t139 * t86 - t143 * t87) * qJD(5)) * t140, 0.2e1 * pkin(10) ^ 2 * t249 - 0.2e1 * t62 * t87 + 0.2e1 * t63 * t86, -0.2e1 * t95 * t49, 0.2e1 * t49 * t94 - 0.2e1 * t50 * t95, 0.2e1 * t130 * t95 + 0.2e1 * t144 * t49, 0.2e1 * t94 * t50, -0.2e1 * t130 * t94 + 0.2e1 * t144 * t50, t122, 0.2e1 * t110 * t50 + 0.2e1 * t130 * t44 - 0.2e1 * t144 * t19 + 0.2e1 * t84 * t94, -0.2e1 * t110 * t49 - 0.2e1 * t130 * t45 - 0.2e1 * t144 * t18 + 0.2e1 * t84 * t95, 0.2e1 * t18 * t94 - 0.2e1 * t19 * t95 + 0.2e1 * t44 * t49 - 0.2e1 * t45 * t50, 0.2e1 * t110 * t84 - 0.2e1 * t18 * t45 + 0.2e1 * t19 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, -t27, 0, 0, 0, 0, 0, 0, 0, 0, t200, t201, t172, -pkin(4) * t26 + pkin(11) * t172, 0, 0, 0, 0, 0, 0, t107 * t26 + t58 * t74, t108 * t26 - t58 * t73, t107 * t3 - t108 * t4 + t20 * t73 - t21 * t74, pkin(5) * t271 + t129 * t26 + t20 * t53 - t21 * t52 - t3 * t79 + t4 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323, 0, -t75, t254, t36, t35, 0, 0, t331, -t283 * t76 - t160 - t164, t198, t329, -t325, 0, -pkin(4) * t322 - pkin(11) * t198 - t31 * t143 + t283 * t60, pkin(4) * t163 + pkin(11) * t325 + t199, -t28 * t282 - t283 * t29 + t209 + (t329 + t331) * pkin(11), -pkin(4) * t31 + ((-t139 * t29 - t143 * t28) * qJD(5) + t209) * pkin(11), -t108 * t16 - t48 * t73, t107 * t16 - t108 * t17 + t47 * t73 - t48 * t74, t108 * t75 - t73 * t97, t107 * t17 + t47 * t74, -t107 * t75 - t74 * t97, 0, t107 * t23 + t129 * t17 + t274 * t47 + t37 * t74 + t53 * t97 + t75 * t78, t108 * t23 - t129 * t16 + t274 * t48 - t37 * t73 + t52 * t97 - t75 * t79, t1 * t107 - t108 * t2 + t16 * t78 - t17 * t79 + t47 * t52 - t48 * t53 + t73 * t8 - t74 * t9, -t1 * t79 + t129 * t23 + t2 * t78 + t274 * t37 - t52 * t9 + t53 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, 0, -t130, 0, -t273, pkin(10) * t130, 0, 0, -t80, -0.4e1 * t140 * t250 - t285 * t292, t130 * t139 - t255, t80, t191, 0 (pkin(11) * t294 + (-t311 + t312) * t140) * qJD(5) + (t139 * t211 - t126) * qJD(4) (pkin(10) * t297 + t197) * qJD(5) + (t143 * t211 + t277) * qJD(4), t171, -pkin(4) * t273 + pkin(11) * t171, -t108 * t49 - t73 * t95, t107 * t49 - t108 * t50 + t73 * t94 - t74 * t95, t108 * t130 + t144 * t73, t107 * t50 + t74 * t94, -t107 * t130 + t144 * t74, 0, t107 * t84 + t110 * t74 + t129 * t50 + t130 * t78 - t144 * t53 + t274 * t94, t108 * t84 - t110 * t73 - t129 * t49 - t130 * t79 - t144 * t52 + t274 * t95, t107 * t18 - t108 * t19 + t44 * t73 - t45 * t74 + t49 * t78 - t50 * t79 + t52 * t94 - t53 * t95, t110 * t274 + t129 * t84 - t18 * t79 + t19 * t78 + t44 * t53 - t45 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t250, -0.2e1 * t235, 0, -0.2e1 * t250, 0, 0, t139 * t279, t143 * t279, 0, 0, -0.2e1 * t108 * t73, 0.2e1 * t107 * t73 - 0.2e1 * t108 * t74, 0, 0.2e1 * t107 * t74, 0, 0, 0.2e1 * t107 * t274 + 0.2e1 * t129 * t74, 0.2e1 * t108 * t274 - 0.2e1 * t129 * t73, 0.2e1 * t107 * t52 - 0.2e1 * t108 * t53 + 0.2e1 * t73 * t78 - 0.2e1 * t74 * t79, 0.2e1 * t129 * t274 - 0.2e1 * t52 * t79 + 0.2e1 * t53 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t15, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0 (t316 * t4 - t315 * t3 + (-t20 * t315 + t21 * t316) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, 0, -t322, t75, t11, t10, 0, 0, 0, 0, -t16, 0, -t17, t75, -t231 * t97 + t316 * t318 + t2 (-t244 * t97 - t315 * t75) * pkin(5) + t1 (t316 * t16 - t315 * t17 + (t315 * t48 - t316 * t47) * qJD(6)) * pkin(5) (t316 * t2 - t315 * t1 + (-t315 * t8 + t316 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326, 0, -t190, t130, t63, t62, 0, 0, 0, 0, -t49, 0, -t50, t130, pkin(5) * t140 * t248 - qJD(6) * t165 + t144 * t231 - t244 * t77 + t158 (-t140 * t247 + t144 * t244) * pkin(5) + t18 (t316 * t49 - t315 * t50 + (t315 * t95 - t316 * t94) * qJD(6)) * pkin(5) (t316 * t19 - t315 * t18 + (-t315 * t44 + t316 * t45) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, 0, -t283, 0, -pkin(11) * t282, pkin(11) * t283, 0, 0, 0, 0, -t73, 0, -t74, 0, t53, t52 (t316 * t73 - t315 * t74 + (-t107 * t316 + t108 * t315) * qJD(6)) * pkin(5) (t316 * t53 - t315 * t52 + (-t315 * t78 + t316 * t79) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t231, -0.2e1 * t232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, 0, -t17, t75, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, 0, -t50, t130, t19, t18, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, 0, -t74, 0, t53, t52, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, -t232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
