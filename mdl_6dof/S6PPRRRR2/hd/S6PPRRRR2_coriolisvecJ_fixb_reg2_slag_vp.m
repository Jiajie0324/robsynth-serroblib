% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PPRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,d6,theta1,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PPRRRR2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRRR2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:05:24
% EndTime: 2019-03-08 19:05:38
% DurationCPUTime: 6.23s
% Computational Cost: add. (8621->463), mult. (22673->686), div. (0->0), fcn. (19528->14), ass. (0->222)
t172 = sin(qJ(4));
t176 = cos(qJ(4));
t200 = pkin(4) * t172 - pkin(10) * t176;
t137 = t200 * qJD(4);
t166 = sin(pkin(6));
t164 = sin(pkin(13));
t173 = sin(qJ(3));
t177 = cos(qJ(3));
t167 = cos(pkin(13));
t168 = cos(pkin(7));
t250 = t167 * t168;
t189 = t164 * t177 + t173 * t250;
t184 = t189 * t166;
t169 = cos(pkin(6));
t153 = qJD(1) * t169 + qJD(2);
t165 = sin(pkin(7));
t253 = t165 * t173;
t225 = t153 * t253;
t83 = qJD(1) * t184 + t225;
t307 = t83 - t137;
t140 = -pkin(4) * t176 - pkin(10) * t172 - pkin(3);
t171 = sin(qJ(5));
t175 = cos(qJ(5));
t231 = qJD(5) * t175;
t233 = qJD(5) * t171;
t235 = qJD(4) * t175;
t244 = t175 * t176;
t241 = qJD(1) * t166;
t218 = t167 * t241;
t254 = t164 * t173;
t82 = t177 * (t153 * t165 + t168 * t218) - t241 * t254;
t278 = t82 * t244 - t140 * t231 - (-t172 * t235 - t176 * t233) * pkin(9) + t307 * t171;
t236 = qJD(4) * t172;
t247 = t171 * t176;
t286 = pkin(9) * t171;
t306 = -t307 * t175 + t236 * t286 + t82 * t247;
t155 = pkin(9) * t244;
t194 = pkin(5) * t172 - pkin(11) * t244;
t305 = t194 * qJD(4) + (-t155 + (pkin(11) * t172 - t140) * t171) * qJD(5) + t306;
t234 = qJD(4) * t176;
t215 = t171 * t234;
t187 = t172 * t231 + t215;
t304 = pkin(11) * t187 + t278;
t240 = qJD(3) * t172;
t129 = t171 * t240 - t235;
t237 = qJD(4) * t171;
t131 = t175 * t240 + t237;
t170 = sin(qJ(6));
t174 = cos(qJ(6));
t196 = t129 * t170 - t174 * t131;
t87 = t174 * t129 + t131 * t170;
t283 = t87 * t196;
t288 = -pkin(11) - pkin(10);
t219 = qJD(5) * t288;
t238 = qJD(3) * t176;
t134 = t200 * qJD(3);
t108 = t153 * t168 - t165 * t218;
t81 = qJD(3) * pkin(9) + t83;
t291 = t108 * t176 - t172 * t81;
t45 = t171 * t134 + t175 * t291;
t303 = -t45 + (pkin(11) * t238 + t219) * t171;
t44 = t175 * t134 - t171 * t291;
t302 = qJD(3) * t194 - t175 * t219 + t44;
t228 = qJD(3) * qJD(4);
t301 = qJD(4) * qJD(5) + t176 * t228;
t252 = t165 * t177;
t290 = (t177 * t250 - t254) * t166;
t300 = t169 * t252 + t290;
t299 = t196 ^ 2 - t87 ^ 2;
t154 = -qJD(5) + t238;
t246 = t172 * t108;
t56 = t176 * t81 + t246;
t54 = qJD(4) * pkin(10) + t56;
t74 = qJD(3) * t140 - t82;
t31 = -t171 * t54 + t175 * t74;
t28 = -pkin(11) * t131 + t31;
t26 = -pkin(5) * t154 + t28;
t32 = t171 * t74 + t175 * t54;
t29 = -pkin(11) * t129 + t32;
t268 = t174 * t29;
t11 = t170 * t26 + t268;
t232 = qJD(5) * t172;
t209 = qJD(3) * t232;
t106 = t171 * t209 - t301 * t175;
t157 = t172 * t228;
t294 = qJD(1) * t290 + t153 * t252;
t78 = t294 * qJD(3);
t34 = qJD(4) * t291 + t176 * t78;
t70 = (t137 + t83) * qJD(3);
t9 = -qJD(5) * t32 - t171 * t34 + t175 * t70;
t6 = pkin(5) * t157 + pkin(11) * t106 + t9;
t220 = t301 * t171 + t175 * t209;
t8 = t171 * t70 + t175 * t34 + t74 * t231 - t54 * t233;
t7 = -t220 * pkin(11) + t8;
t2 = -qJD(6) * t11 - t170 * t7 + t174 * t6;
t53 = -qJD(4) * pkin(4) - t291;
t46 = pkin(5) * t129 + t53;
t298 = t46 * t196 + t2;
t149 = -qJD(6) + t154;
t229 = qJD(6) * t174;
t230 = qJD(6) * t170;
t42 = t174 * t106 + t129 * t229 + t131 * t230 + t170 * t220;
t297 = -t149 * t87 - t42;
t1 = (qJD(6) * t26 + t7) * t174 + t170 * t6 - t29 * t230;
t296 = t46 * t87 - t1;
t181 = qJD(6) * t196 + t170 * t106 - t174 * t220;
t295 = t149 * t196 + t181;
t293 = t154 * t31 + t8;
t292 = t154 * t32 - t9;
t110 = t171 * t140 + t155;
t213 = t171 * t232;
t214 = t175 * t234;
t289 = -t213 + t214;
t226 = qJD(5) + qJD(6);
t287 = pkin(5) * t171;
t117 = -t165 * t166 * t167 + t168 * t169;
t93 = t169 * t253 + t184;
t197 = t117 * t176 - t172 * t93;
t35 = qJD(4) * t56 + t172 * t78;
t285 = t35 * t197;
t79 = t83 * qJD(3);
t284 = t79 * t300;
t144 = t288 * t171;
t145 = t288 * t175;
t105 = t144 * t170 - t145 * t174;
t282 = qJD(6) * t105 + t303 * t170 + t302 * t174;
t104 = t144 * t174 + t145 * t170;
t281 = -qJD(6) * t104 + t302 * t170 - t303 * t174;
t248 = t171 * t172;
t100 = -pkin(11) * t248 + t110;
t128 = t175 * t140;
t245 = t172 * t175;
t91 = -pkin(11) * t245 + t128 + (-pkin(5) - t286) * t176;
t58 = -t100 * t170 + t174 * t91;
t280 = qJD(6) * t58 + t305 * t170 - t304 * t174;
t59 = t100 * t174 + t170 * t91;
t279 = -qJD(6) * t59 + t304 * t170 + t305 * t174;
t277 = t110 * qJD(5) - t306;
t276 = qJD(3) * pkin(3);
t120 = -t176 * t168 + t172 * t253;
t275 = t120 * t35;
t272 = t170 * t29;
t271 = t171 * t53;
t270 = t172 * t35;
t269 = t172 * t82;
t267 = t175 * t53;
t266 = t177 * t79;
t265 = t35 * t171;
t264 = t35 * t175;
t133 = t170 * t175 + t171 * t174;
t95 = t226 * t133;
t263 = t133 * t238 - t95;
t249 = t170 * t171;
t132 = -t174 * t175 + t249;
t262 = -t132 * t238 - t174 * t231 - t175 * t229 + t226 * t249;
t261 = t106 * t171;
t259 = t129 * t154;
t258 = t131 * t129;
t257 = t131 * t154;
t256 = t154 * t171;
t255 = t154 * t175;
t179 = qJD(3) ^ 2;
t251 = t165 * t179;
t162 = t172 ^ 2;
t163 = t176 ^ 2;
t242 = t162 - t163;
t239 = qJD(3) * t173;
t223 = t173 * t251;
t221 = t176 * t179 * t172;
t217 = t165 * t239;
t216 = qJD(3) * t252;
t212 = t154 * t231;
t80 = -t82 - t276;
t207 = -qJD(3) * t80 - t78;
t205 = t176 * t216;
t204 = t172 * t216;
t203 = t176 * t157;
t202 = pkin(5) * t233 - t246 - (qJD(3) * t287 + t81) * t176;
t201 = t220 * t175;
t73 = t117 * t172 + t176 * t93;
t40 = -t171 * t73 - t175 * t300;
t41 = -t171 * t300 + t175 * t73;
t22 = -t170 * t41 + t174 * t40;
t23 = t170 * t40 + t174 * t41;
t121 = t168 * t172 + t176 * t253;
t191 = -t121 * t175 + t171 * t252;
t98 = -t121 * t171 - t175 * t252;
t60 = t170 * t191 + t174 * t98;
t61 = t170 * t98 - t174 * t191;
t199 = -t171 * t32 - t175 * t31;
t195 = qJD(3) * t162 - t154 * t176;
t178 = qJD(4) ^ 2;
t193 = pkin(9) * t178;
t192 = qJD(4) * (t80 + t82 - t276);
t180 = t270 + t176 * t34 + (-t172 * t56 - t176 * t291) * qJD(4);
t161 = -pkin(5) * t175 - pkin(4);
t138 = (pkin(9) + t287) * t172;
t115 = t132 * t172;
t114 = t133 * t172;
t109 = -pkin(9) * t247 + t128;
t107 = pkin(5) * t187 + pkin(9) * t234;
t97 = qJD(4) * t121 + t204;
t96 = -qJD(4) * t120 + t205;
t85 = t93 * qJD(3);
t84 = t300 * qJD(3);
t64 = -t230 * t248 + (t226 * t245 + t215) * t174 + t289 * t170;
t63 = t170 * t215 + t172 * t95 - t174 * t214;
t52 = qJD(5) * t191 - t171 * t96 + t175 * t217;
t51 = qJD(5) * t98 + t171 * t217 + t175 * t96;
t39 = qJD(4) * t197 + t84 * t176;
t38 = qJD(4) * t73 + t84 * t172;
t30 = t220 * pkin(5) + t35;
t17 = -qJD(6) * t61 - t170 * t51 + t174 * t52;
t16 = qJD(6) * t60 + t170 * t52 + t174 * t51;
t15 = qJD(5) * t40 + t85 * t171 + t39 * t175;
t14 = -qJD(5) * t41 - t39 * t171 + t85 * t175;
t13 = t174 * t28 - t272;
t12 = -t170 * t28 - t268;
t10 = t174 * t26 - t272;
t4 = -qJD(6) * t23 + t174 * t14 - t170 * t15;
t3 = qJD(6) * t22 + t170 * t14 + t174 * t15;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85 * qJD(3), -t84 * qJD(3), 0, t78 * t93 - t82 * t85 + t83 * t84 - t284, 0, 0, 0, 0, 0, 0, -t38 * qJD(4) + (-t176 * t85 - t236 * t300) * qJD(3), -t39 * qJD(4) + (t172 * t85 - t234 * t300) * qJD(3) (t172 * t38 + t176 * t39 + (-t172 * t73 - t176 * t197) * qJD(4)) * qJD(3), -t291 * t38 + t34 * t73 + t39 * t56 + t80 * t85 - t284 - t285, 0, 0, 0, 0, 0, 0, t38 * t129 - t14 * t154 + t157 * t40 - t197 * t220, t106 * t197 + t131 * t38 + t15 * t154 - t157 * t41, t40 * t106 - t15 * t129 - t14 * t131 - t220 * t41, t14 * t31 + t15 * t32 + t38 * t53 + t40 * t9 + t41 * t8 - t285, 0, 0, 0, 0, 0, 0, -t149 * t4 + t157 * t22 + t181 * t197 + t38 * t87, t149 * t3 - t157 * t23 - t196 * t38 + t197 * t42, t181 * t23 + t196 * t4 + t22 * t42 - t3 * t87, t1 * t23 + t10 * t4 + t11 * t3 - t197 * t30 + t2 * t22 + t38 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t177 * t251, 0 (t173 * t78 - t266 + (-t173 * t82 + t177 * t83) * qJD(3)) * t165, 0, 0, 0, 0, 0, 0, -t176 * t223 + (-t97 - t204) * qJD(4), t172 * t223 + (-t96 - t205) * qJD(4) (t172 * t97 + t176 * t96 + (t120 * t176 - t121 * t172) * qJD(4)) * qJD(3), t275 + t121 * t34 - t291 * t97 + t56 * t96 + (t239 * t80 - t266) * t165, 0, 0, 0, 0, 0, 0, t120 * t220 + t97 * t129 - t52 * t154 + t157 * t98, -t106 * t120 + t131 * t97 + t154 * t51 + t157 * t191, t98 * t106 - t51 * t129 - t52 * t131 + t191 * t220, -t191 * t8 + t31 * t52 + t32 * t51 + t53 * t97 + t9 * t98 + t275, 0, 0, 0, 0, 0, 0, -t120 * t181 - t149 * t17 + t157 * t60 + t87 * t97, -t120 * t42 + t149 * t16 - t157 * t61 - t196 * t97, -t16 * t87 + t17 * t196 + t181 * t61 + t42 * t60, t1 * t61 + t10 * t17 + t11 * t16 + t120 * t30 + t2 * t60 + t46 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t189 * t241 - t225 + t83) * qJD(3) (-t294 + t82) * qJD(3), 0, 0, 0.2e1 * t203, -0.2e1 * t242 * t228, t178 * t176, -0.2e1 * t203, -t178 * t172, 0, t172 * t192 - t176 * t193, t172 * t193 + t176 * t192 (-t162 - t163) * t82 * qJD(3) + t180, -pkin(3) * t79 - t80 * t83 + (t172 * t291 - t176 * t56) * t82 + t180 * pkin(9), -t106 * t245 + t289 * t131 (-t129 * t175 - t131 * t171) * t234 + (-t201 + t261 + (t129 * t171 - t131 * t175) * qJD(5)) * t172, t154 * t213 + t106 * t176 + (t131 * t172 + t175 * t195) * qJD(4), t129 * t187 + t220 * t248, t172 * t212 + t220 * t176 + (-t129 * t172 - t171 * t195) * qJD(4) (-t154 - t238) * t236, t277 * t154 + (-t9 + (pkin(9) * t129 + t271) * qJD(4)) * t176 + (pkin(9) * t220 + t265 + t53 * t231 - t82 * t129 + (qJD(3) * t109 + t31) * qJD(4)) * t172, -t278 * t154 + (t8 + (pkin(9) * t131 + t267) * qJD(4)) * t176 + (-t53 * t233 - pkin(9) * t106 - t131 * t82 + t264 + (-qJD(3) * t110 - t32) * qJD(4)) * t172, -t110 * t220 + t109 * t106 + t277 * t131 + t278 * t129 + t199 * t234 + (-t8 * t171 - t9 * t175 + (t171 * t31 - t175 * t32) * qJD(5)) * t172, -t53 * t269 + t109 * t9 + t110 * t8 - t278 * t32 - t277 * t31 + (t234 * t53 + t270) * pkin(9), t115 * t42 + t196 * t63, t114 * t42 - t115 * t181 + t196 * t64 + t63 * t87, t63 * t149 + t42 * t176 + (-qJD(3) * t115 - t196) * t236, -t114 * t181 + t64 * t87, t64 * t149 - t181 * t176 + (-qJD(3) * t114 - t87) * t236 (-t149 - t238) * t236, t107 * t87 + t114 * t30 - t138 * t181 - t176 * t2 + t46 * t64 - t279 * t149 + (-t82 * t87 + (qJD(3) * t58 + t10) * qJD(4)) * t172, t1 * t176 - t107 * t196 - t115 * t30 - t138 * t42 - t46 * t63 + t280 * t149 + (t82 * t196 + (-qJD(3) * t59 - t11) * qJD(4)) * t172, -t1 * t114 + t10 * t63 - t11 * t64 + t115 * t2 + t181 * t59 + t196 * t279 - t280 * t87 + t42 * t58, t1 * t59 + t138 * t30 + t2 * t58 + (t107 - t269) * t46 + t280 * t11 + t279 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221, t242 * t179, 0, t221, 0, 0, t207 * t172, t207 * t176, 0, 0, -t131 * t255 - t261 (-t106 + t259) * t175 + (-t220 + t257) * t171, -t212 + (t154 * t244 + (-t131 + t237) * t172) * qJD(3), -t129 * t256 - t201, t154 * t233 + (-t154 * t247 + (t129 + t235) * t172) * qJD(3), t154 * t240, -pkin(4) * t220 - t264 + t44 * t154 - t56 * t129 + (pkin(10) * t255 + t271) * qJD(5) + (-t31 * t172 + (-pkin(10) * t236 - t176 * t53) * t171) * qJD(3), pkin(4) * t106 - t131 * t56 - t154 * t45 + t265 + (-pkin(10) * t256 + t267) * qJD(5) + (-t53 * t244 + (-pkin(10) * t235 + t32) * t172) * qJD(3), t45 * t129 + t44 * t131 + ((qJD(5) * t131 - t220) * pkin(10) + t293) * t175 + ((qJD(5) * t129 - t106) * pkin(10) + t292) * t171, -pkin(4) * t35 - t31 * t44 - t32 * t45 - t53 * t56 + (qJD(5) * t199 - t9 * t171 + t8 * t175) * pkin(10), -t42 * t133 + t196 * t262, t132 * t42 + t133 * t181 - t196 * t263 + t262 * t87, t262 * t149 + (qJD(4) * t133 + t196) * t240, -t132 * t181 - t263 * t87, -t263 * t149 + (-qJD(4) * t132 + t87) * t240, t149 * t240, t132 * t30 - t161 * t181 + t202 * t87 - t263 * t46 + t282 * t149 + (qJD(4) * t104 - t10) * t240, t133 * t30 - t161 * t42 - t202 * t196 - t262 * t46 - t281 * t149 + (-qJD(4) * t105 + t11) * t240, -t1 * t132 + t262 * t10 + t104 * t42 + t105 * t181 + t263 * t11 - t133 * t2 - t196 * t282 + t281 * t87, t1 * t105 - t10 * t282 + t104 * t2 - t281 * t11 + t161 * t30 + t202 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, -t129 ^ 2 + t131 ^ 2, -t106 - t259, -t258, -t220 - t257, t157, -t131 * t53 - t292, t129 * t53 - t293, 0, 0, -t283, t299, t297, t283, t295, t157, t12 * t149 + (-t131 * t87 + t149 * t230 + t157 * t174) * pkin(5) + t298, -t13 * t149 + (t131 * t196 + t149 * t229 - t157 * t170) * pkin(5) + t296, -t10 * t87 - t11 * t196 - t12 * t196 + t13 * t87 + (t170 * t181 + t174 * t42 + (-t170 * t196 - t174 * t87) * qJD(6)) * pkin(5), -t10 * t12 - t11 * t13 + (t1 * t170 - t131 * t46 + t174 * t2 + (-t10 * t170 + t11 * t174) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, t299, t297, t283, t295, t157, -t11 * t149 + t298, -t10 * t149 + t296, 0, 0;];
tauc_reg  = t5;
