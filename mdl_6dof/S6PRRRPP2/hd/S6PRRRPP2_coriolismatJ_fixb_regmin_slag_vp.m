% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:52:43
% EndTime: 2019-03-08 22:53:07
% DurationCPUTime: 12.58s
% Computational Cost: add. (5767->702), mult. (13816->893), div. (0->0), fcn. (13376->8), ass. (0->491)
t430 = cos(qJ(3));
t427 = sin(qJ(3));
t688 = cos(pkin(6));
t532 = t688 * t427;
t425 = sin(pkin(6));
t428 = sin(qJ(2));
t651 = t425 * t428;
t322 = t430 * t651 + t532;
t429 = cos(qJ(4));
t431 = cos(qJ(2));
t650 = t425 * t431;
t557 = -t650 / 0.2e1;
t520 = t429 * t557;
t426 = sin(qJ(4));
t648 = t426 * t427;
t555 = t648 / 0.2e1;
t368 = t429 * t650;
t623 = t322 * t426 + t368;
t708 = -t427 / 0.2e1;
t106 = t322 * t555 + t427 * t520 + t623 * t708;
t580 = t426 * t650;
t665 = t322 * t429;
t224 = -t580 + t665;
t321 = t427 * t651 - t430 * t688;
t646 = t427 * t429;
t551 = t646 / 0.2e1;
t730 = t224 / 0.2e1;
t562 = t430 * t730;
t463 = t321 * t551 + t562;
t523 = t426 * t557;
t644 = t428 * t429;
t621 = t430 * t523 + t425 * t644 / 0.2e1;
t445 = t463 + t621;
t777 = qJD(2) * t445 - t224 * qJD(4);
t146 = t321 * t426;
t610 = qJD(3) * t429;
t574 = t322 * t610;
t647 = t426 * t430;
t553 = t647 / 0.2e1;
t554 = -t647 / 0.2e1;
t772 = (t553 + t554) * t321 + t106;
t776 = qJD(2) * t772 + t146 * qJD(4) - t574;
t635 = t430 * t431;
t287 = (t426 * t635 - t644) * t425;
t422 = t427 ^ 2;
t739 = qJD(4) * t445 + (t287 * t430 + t422 * t580) * qJD(2);
t775 = qJD(3) * t772 + t739;
t414 = t426 * qJ(5);
t507 = t429 * pkin(4) + t414;
t593 = t429 * qJD(5);
t774 = -qJD(4) * t507 + t593;
t773 = -t623 / 0.2e1;
t757 = t146 * qJD(3) + t777;
t544 = t635 / 0.2e1;
t558 = -t651 / 0.2e1;
t446 = t425 * t426 * t544 + t429 * t558 + t463;
t645 = t428 * t426;
t288 = (t429 * t635 + t645) * t425;
t579 = t427 * t650;
t441 = t224 * t288 + t287 * t623 + t321 * t579;
t745 = t441 * qJD(1);
t771 = -qJD(5) * t446 - t745;
t770 = -t445 * qJD(5) + t745;
t734 = pkin(4) + pkin(5);
t769 = t429 * t734 + t414;
t690 = pkin(9) - qJ(6);
t694 = t429 * pkin(8);
t533 = -qJ(5) + t694;
t698 = t426 * pkin(3);
t699 = pkin(9) * t427;
t255 = t426 * (-pkin(2) - t699) + (t533 - t698) * t430;
t693 = t430 * pkin(3);
t517 = -t693 - t699;
t482 = -pkin(2) + t517;
t639 = t429 * t430;
t588 = pkin(8) * t639;
t292 = t426 * t482 + t588;
t538 = t255 / 0.2e1 - t292 / 0.2e1;
t768 = t538 * t426;
t767 = t430 * t773;
t417 = t430 * pkin(4);
t335 = t429 * t482;
t516 = -qJ(6) * t646 - t335;
t700 = pkin(8) * t426;
t166 = t417 + (pkin(5) + t700) * t430 + t516;
t589 = pkin(8) * t647;
t226 = -t516 - t589;
t766 = t166 + t226;
t148 = t321 * t429;
t208 = t623 * qJD(4);
t556 = -t648 / 0.2e1;
t450 = t321 * t556 + t767;
t83 = t426 * t558 + t430 * t520 + t450;
t765 = -t83 * qJD(2) - t148 * qJD(3) - t208;
t159 = (t288 * t430 + t368 * t422) * qJD(2);
t731 = -t224 / 0.2e1;
t513 = t731 + t665 / 0.2e1;
t521 = t579 / 0.2e1;
t56 = t426 * t521 + t427 * t513;
t763 = qJD(3) * t56 + qJD(4) * t83 + t159;
t611 = qJD(3) * t426;
t762 = -t321 * t611 - t777;
t691 = t430 * pkin(9);
t697 = t427 * pkin(3);
t367 = -t691 + t697;
t348 = t426 * t367;
t117 = t348 * t430 + (-t292 + t588) * t427;
t443 = (t523 + t513) * t427;
t631 = t443 * qJD(1);
t761 = t117 * qJD(2) + t631;
t291 = -t335 + t589;
t669 = t291 * t430;
t200 = -t422 * t700 - t669;
t451 = (t429 * t544 + t645 / 0.2e1) * t425;
t435 = t451 + t450;
t628 = t435 * qJD(1);
t760 = -qJD(2) * t200 - t628;
t643 = t429 * qJ(5);
t397 = t427 * t643;
t620 = -pkin(4) * t648 + t397;
t303 = pkin(8) * t427 - t620;
t670 = t255 * t430;
t124 = t303 * t646 + t670;
t743 = t446 * qJD(1);
t759 = qJD(2) * t124 + t743;
t250 = (-t426 * pkin(5) - pkin(8)) * t427 + t620;
t203 = t250 * t646;
t453 = (-t427 * t690 - pkin(2) - t693) * t426;
t197 = t430 * t533 + t453;
t674 = t197 * t430;
t108 = -t203 + t674;
t758 = -qJD(2) * t108 - t743;
t227 = t453 + t588;
t285 = t769 * t427;
t68 = t227 * t430 + t285 * t648 - t203;
t756 = -qJD(2) * t68 - t743;
t324 = t507 * t427;
t664 = t324 * t426;
t666 = t303 * t429;
t668 = t292 * t430;
t97 = t668 + (t664 + t666) * t427;
t755 = -qJD(2) * t97 - t743;
t98 = -t303 * t648 + t324 * t646 - t669;
t754 = qJD(2) * t98 + t628;
t415 = t427 * qJ(5);
t260 = -pkin(8) * t646 + t348 + t415;
t701 = pkin(4) * t426;
t365 = -t643 + t701;
t304 = (pkin(8) + t365) * t430;
t494 = t303 * t430 + t304 * t427;
t63 = -t255 * t427 + t260 * t430 + t429 * t494;
t753 = -t63 * qJD(2) - t631;
t256 = t291 + t417;
t416 = t427 * pkin(4);
t401 = pkin(8) * t648;
t641 = t429 * t367;
t529 = -t401 - t641;
t262 = -t416 + t529;
t43 = -t256 * t639 - t262 * t646 + (t260 * t427 + t670) * t426;
t724 = t288 / 0.2e1;
t44 = (t724 + t767) * t429 + (t562 + t287 / 0.2e1) * t426;
t633 = t44 * qJD(1);
t752 = t43 * qJD(2) + t633;
t636 = t430 * qJ(6);
t696 = t427 * pkin(5);
t176 = -t696 - t401 - t416 + (-t367 - t636) * t429;
t199 = t426 * t636 + t260;
t19 = (-t166 * t430 - t176 * t427) * t429 + (t199 * t427 + t674) * t426;
t751 = t19 * qJD(2) + t633;
t540 = t197 / 0.2e1 - t227 / 0.2e1;
t439 = (t520 + t368 / 0.2e1) * t427;
t750 = qJD(1) * t439;
t686 = qJD(2) * t443;
t749 = qJD(2) * t446;
t748 = qJD(3) * t439;
t595 = t427 * qJD(2);
t684 = t435 * qJD(2);
t746 = t439 * qJD(2);
t531 = t623 * t426;
t672 = t224 * t429;
t447 = (t322 - t531 - t672) * t321;
t742 = t447 * qJD(1);
t592 = t430 * qJD(2);
t398 = -qJD(4) + t592;
t421 = t426 ^ 2;
t423 = t429 ^ 2;
t388 = t423 - t421;
t576 = t429 * t595;
t524 = t426 * t576;
t740 = qJD(3) * t388 - 0.2e1 * t524;
t738 = qJD(2) * t441 + qJD(3) * t447;
t496 = qJD(3) * t443 + qJD(4) * t435;
t737 = qJD(4) * t446 - t748;
t736 = pkin(4) / 0.2e1;
t735 = pkin(5) / 0.2e1;
t733 = -t166 / 0.2e1;
t727 = -t260 / 0.2e1;
t726 = t285 / 0.2e1;
t725 = -t285 / 0.2e1;
t721 = t321 / 0.2e1;
t720 = -t322 / 0.2e1;
t719 = -t324 / 0.2e1;
t332 = -t426 * t734 + t643;
t718 = -t332 / 0.2e1;
t364 = t690 * t426;
t717 = -t364 / 0.2e1;
t716 = -t365 / 0.2e1;
t715 = t365 / 0.2e1;
t713 = -t367 / 0.2e1;
t712 = -t401 / 0.2e1;
t711 = -t416 / 0.2e1;
t710 = -t426 / 0.2e1;
t709 = t426 / 0.2e1;
t707 = t427 / 0.2e1;
t706 = -t429 / 0.2e1;
t705 = t429 / 0.2e1;
t703 = t734 / 0.2e1;
t702 = -t734 / 0.2e1;
t692 = t430 * pkin(8);
t689 = t224 * qJD(5);
t687 = qJD(2) * t44;
t679 = qJD(3) * t44;
t637 = t430 * qJ(5);
t547 = t637 / 0.2e1;
t370 = t426 * t547;
t539 = -t226 / 0.2e1 + t733;
t541 = t430 * t703;
t15 = t370 - t540 * t426 + (t541 - t539) * t429;
t678 = t15 * qJD(2);
t677 = t166 * t429;
t675 = t197 * t426;
t22 = ((t197 - t227) * t429 + t766 * t426) * t427;
t673 = t22 * qJD(2);
t671 = t250 * t426;
t667 = t303 * t426;
t325 = pkin(3) + t769;
t663 = t325 * t429;
t662 = t332 * t426;
t351 = -pkin(3) - t507;
t659 = t351 * t426;
t658 = t364 * t427;
t657 = t364 * t430;
t366 = t690 * t429;
t656 = t366 * t427;
t655 = t366 * t430;
t548 = -t637 / 0.2e1;
t371 = t426 * t548;
t537 = t291 / 0.2e1 - t256 / 0.2e1;
t39 = t371 + t768 + (-t417 / 0.2e1 + t537) * t429;
t652 = t39 * qJD(2);
t649 = t426 * t256;
t642 = t429 * t255;
t640 = t429 * t422;
t634 = t734 * t427;
t50 = -t292 * t646 + (t642 + (t256 - t291) * t426) * t427;
t632 = t50 * qJD(2);
t536 = t712 + t711;
t444 = -t671 / 0.2e1 + t655 / 0.2e1 + t536;
t546 = -t636 / 0.2e1;
t560 = t325 * t708;
t467 = t560 + t546;
t583 = -t696 / 0.2e1;
t65 = t583 + (t713 + t467) * t429 + t444;
t629 = t65 * qJD(2);
t331 = t641 / 0.2e1;
t622 = t331 + t401 / 0.2e1;
t387 = t423 + t421;
t424 = t430 ^ 2;
t389 = t424 - t422;
t346 = t389 * t426;
t616 = qJD(2) * t346;
t347 = t424 * t429 - t640;
t615 = qJD(2) * t347;
t614 = qJD(2) * t425;
t245 = t364 * t426 + t366 * t429;
t613 = qJD(3) * t245;
t612 = qJD(3) * t325;
t609 = qJD(4) * t291;
t608 = qJD(4) * t366;
t607 = qJD(4) * t426;
t412 = qJD(4) * t429;
t606 = qJD(4) * t430;
t605 = qJD(5) * t430;
t604 = qJD(6) * t426;
t603 = qJD(6) * t429;
t602 = qJD(6) * t430;
t344 = t387 * t422;
t599 = t344 * qJD(2);
t598 = t387 * qJD(3);
t597 = t389 * qJD(2);
t596 = t426 * qJD(5);
t594 = t427 * qJD(3);
t591 = t430 * qJD(3);
t590 = t736 + t735;
t587 = pkin(2) * t595;
t586 = pkin(2) * t592;
t585 = pkin(9) * t607;
t584 = pkin(9) * t412;
t582 = t691 / 0.2e1;
t581 = t735 + t703;
t329 = t348 / 0.2e1;
t552 = -t646 / 0.2e1;
t578 = pkin(8) * t552 + t329 + t415;
t577 = qJ(5) * t605;
t575 = t322 * t611;
t573 = t426 * t606;
t572 = t429 * t606;
t571 = t430 * t593;
t570 = t427 * t603;
t569 = t431 * t614;
t568 = t426 * t412;
t567 = t427 * t596;
t393 = t426 * t610;
t392 = t426 * t593;
t566 = t426 * t602;
t565 = t427 * t591;
t564 = t427 * t592;
t563 = t429 * t592;
t561 = qJ(5) * t724;
t559 = t351 * t707;
t550 = -t643 / 0.2e1;
t549 = -t639 / 0.2e1;
t545 = t636 / 0.2e1;
t543 = t426 * t703;
t542 = t634 / 0.2e1;
t535 = t421 / 0.2e1 - t423 / 0.2e1;
t530 = t623 * t429;
t157 = t387 * t321;
t311 = (-0.1e1 / 0.2e1 + t535) * t427;
t231 = qJD(2) * t311 - t393;
t328 = t535 * t427;
t528 = qJD(2) * t328 - t393;
t360 = t426 * qJD(2) * t640;
t527 = qJD(3) * t328 + t360;
t526 = t427 * t393;
t525 = t430 * t567;
t522 = t427 * t557;
t519 = t736 + t581;
t515 = -t530 / 0.2e1;
t514 = -t197 / 0.2e1 - t658 / 0.2e1;
t512 = t713 + t546;
t511 = t332 * t708 - t250 / 0.2e1;
t510 = t365 * t707 + t303 / 0.2e1;
t509 = t656 / 0.2e1 + t733;
t506 = -t351 * t430 + t699;
t251 = (-pkin(8) + t332) * t430;
t17 = t166 * t176 + t197 * t199 + t250 * t251;
t433 = (t197 * t706 + t166 * t710 - t251 / 0.2e1) * t321 + t199 * t730 + t250 * t720 + t623 * t176 / 0.2e1;
t440 = t287 * t717 - t288 * t366 / 0.2e1 + t325 * t521;
t2 = t433 + t440;
t505 = t2 * qJD(1) + t17 * qJD(2);
t18 = t166 * t227 + t197 * t226 - t250 * t285;
t438 = -t285 * t721 + t540 * t623;
t469 = t287 * t702 + t561;
t5 = t224 * t539 + t438 + t469;
t504 = -t5 * qJD(1) + t18 * qJD(2);
t28 = t255 * t260 + t256 * t262 + t303 * t304;
t468 = t287 * t709 + t288 * t705;
t436 = pkin(9) * t468 + t351 * t521;
t442 = t224 * t727 + t262 * t773 + t303 * t720;
t3 = (t642 / 0.2e1 - t304 / 0.2e1 + t649 / 0.2e1) * t321 + t436 + t442;
t503 = -t3 * qJD(1) + t28 * qJD(2);
t36 = -t255 * t291 + t256 * t292 + t303 * t324;
t437 = t321 * t719 + t538 * t623;
t477 = -t287 * pkin(4) / 0.2e1 + t561;
t9 = t224 * t537 + t437 + t477;
t502 = -t9 * qJD(1) + t36 * qJD(2);
t64 = -t256 * t427 + t262 * t430 + t426 * t494;
t500 = t64 * qJD(2) - t750;
t67 = t226 * t430 + t250 * t648 + t285 * t646;
t499 = -qJD(2) * t67 - t628;
t71 = (t675 - t677) * t427;
t457 = t224 * t709 + t515;
t72 = (t557 - t457) * t427;
t498 = -qJD(1) * t72 + qJD(2) * t71;
t495 = t260 * t429 + t262 * t426;
t33 = -t197 * t427 + t199 * t430 - t250 * t639 - t251 * t646;
t493 = -t33 * qJD(2) - t631;
t27 = -t166 * t427 + t176 * t430 + (-t250 * t430 - t251 * t427) * t426;
t492 = t27 * qJD(2) - t750;
t116 = t291 * t427 + (-t529 - 0.2e1 * t401) * t430;
t491 = -t116 * qJD(2) - t750;
t201 = -pkin(8) * t640 - t668;
t80 = -t463 + t621;
t490 = qJD(1) * t80 + qJD(2) * t201;
t45 = t430 * t457 - t468;
t489 = (-t287 * t429 + t288 * t426) * t595 + qJD(3) * t45;
t487 = -qJD(2) * t45 - qJD(3) * t157;
t177 = t662 + t663;
t23 = -t657 / 0.2e1 + t511 * t429 + (t726 - t467) * t426 + t578;
t486 = -qJD(2) * t23 + qJD(3) * t177;
t178 = -t325 * t426 + t332 * t429;
t20 = (t725 + t512) * t429 + (-t662 / 0.2e1 - t663 / 0.2e1 - t581) * t427 + t444;
t485 = qJD(2) * t20 + qJD(3) * t178;
t235 = t351 * t429 + t365 * t426;
t330 = -t348 / 0.2e1;
t376 = pkin(9) * t553;
t60 = t376 - t664 / 0.2e1 - t666 / 0.2e1 - t415 + t330 + (t659 / 0.2e1 + (t716 + pkin(8) / 0.2e1) * t429) * t427;
t484 = -qJD(2) * t60 + qJD(3) * t235;
t236 = t365 * t429 - t659;
t476 = t559 + t582;
t459 = t719 + t476;
t472 = t510 * t426;
t62 = -t416 + t712 + t472 + (t713 + t459) * t429;
t483 = -qJD(2) * t62 + qJD(3) * t236;
t481 = t398 * t427;
t198 = (t429 * t519 + t414) * t427;
t284 = -t426 * t519 + t643;
t480 = qJD(2) * t198 - qJD(3) * t284;
t479 = t582 - t697 / 0.2e1;
t478 = qJ(5) * t727 + t262 * t736;
t475 = t550 + t701 / 0.2e1;
t377 = pkin(9) * t554;
t222 = pkin(3) * t555 + t329 + t377;
t474 = pkin(3) * t610 - qJD(2) * t222;
t223 = (t713 + t479) * t429;
t473 = pkin(3) * t611 - qJD(2) * t223;
t471 = t176 * t702 + t199 * qJ(5) / 0.2e1;
t470 = t250 * t718 + t325 * t726;
t466 = t550 + t543;
t94 = t667 / 0.2e1 + (t713 + t476) * t429 + t536;
t464 = qJD(2) * t94 + t351 * t611;
t307 = t429 * t481;
t342 = t576 + t611;
t345 = t388 * t422;
t462 = qJD(2) * t345 + 0.2e1 * t526;
t460 = t711 - t655 / 0.2e1 + t583;
t11 = (t332 / 0.2e1 + t466) * t321;
t7 = t364 * t540 + t366 * t539 + t470 + t471;
t99 = t325 * t332;
t458 = -t11 * qJD(1) - t7 * qJD(2) + t99 * qJD(3);
t456 = -t672 / 0.2e1 - t531 / 0.2e1;
t29 = t692 / 0.2e1 + (t548 + t514) * t429 + (t430 * t590 + t509) * t426;
t452 = -t532 / 0.2e1 + t430 * t558;
t69 = t452 - t456;
t455 = -qJD(1) * t69 + qJD(2) * t29 - t613;
t434 = (-t429 * t537 - t768) * pkin(9) + t303 * t715 + t324 * t351 / 0.2e1;
t14 = t434 + t478;
t31 = (t716 + t475) * t321;
t449 = t351 * t365 * qJD(3) - t31 * qJD(1) + t14 * qJD(2);
t448 = qJD(2) * t56 + qJD(4) * t148 + t575;
t359 = t422 * t423 + t424;
t229 = qJD(2) * t359 + t526 - t606;
t419 = qJ(5) * qJD(5);
t411 = t421 * qJD(5);
t404 = qJ(5) * t606;
t403 = t594 / 0.2e1;
t361 = t427 * t392;
t358 = t398 * qJ(5);
t349 = t359 * qJD(5);
t343 = -t412 + t563;
t341 = t426 * t595 - t610;
t334 = (t592 - qJD(4) / 0.2e1) * t427;
t323 = qJD(3) * t421 + t524;
t320 = t328 * qJD(4);
t313 = -t426 * t590 + t543;
t312 = t421 * t708 + t423 * t707 + t708;
t308 = t342 * t430;
t306 = t426 * t481;
t305 = t426 * t564 - t429 * t591;
t301 = t312 * qJD(5);
t300 = t311 * qJD(5);
t280 = t292 * qJD(4);
t257 = t429 * t542 + t552 * t734;
t218 = qJD(3) * t312 - t360;
t217 = qJD(3) * t311 + t360;
t212 = t623 * qJ(5);
t175 = t429 * t479 + t331 + t401;
t174 = t377 + t330 + (t698 / 0.2e1 + t694) * t427;
t107 = t224 * t707 + t322 * t552 + t426 * t522;
t95 = pkin(9) * t549 + t351 * t552 - t667 / 0.2e1 - t641 / 0.2e1 + t536;
t84 = t451 - t450;
t73 = t224 * t555 + t427 * t515 + t522;
t70 = t452 + t456;
t66 = t325 * t551 + t671 / 0.2e1 + t712 + t512 * t429 + t460;
t61 = t429 * t459 + t416 + t472 + t622;
t59 = t376 - t510 * t429 + (t559 + t719) * t426 + t578;
t40 = pkin(4) * t549 + t255 * t710 + t256 * t705 + t291 * t706 + t292 * t709 + t371;
t32 = (t715 + t475) * t321 + (t623 * t706 + t530 / 0.2e1) * pkin(9);
t30 = -t692 / 0.2e1 + t509 * t426 + t734 * t554 + (t547 + t514) * t429;
t24 = t657 / 0.2e1 + t332 * t551 + t325 * t556 - t285 * t709 + t250 * t705 + t426 * t545 + t578;
t21 = t511 * t426 - t460 + t542 + t622 + (t545 + t560 + t725) * t429;
t16 = t226 * t706 + t675 / 0.2e1 + t227 * t710 - t677 / 0.2e1 + t370 + t429 * t541;
t13 = t434 - t478;
t12 = (t466 + t718) * t321;
t10 = t256 * t730 + t291 * t731 - t437 + t477;
t8 = t197 * t717 + t227 * t364 / 0.2e1 - t470 + t471 + t766 * t366 / 0.2e1;
t6 = t730 * t766 - t438 + t469;
t4 = t304 * t721 + t436 - t442 - (t642 + t649) * t321 / 0.2e1;
t1 = t433 - t440;
t25 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t738, 0, 0, 0, t738; 0, 0, -t428 * t614, -t569, 0, 0, 0, 0, 0 (-t428 * t592 - t431 * t594) * t425 (t428 * t595 - t431 * t591) * t425, 0, 0, 0, 0, 0, t775, t763, t775, -t489, -t763 (t255 * t288 + t256 * t287 + t303 * t579) * qJD(2) + t4 * qJD(3) + t10 * qJD(4) + t770, qJD(3) * t106 + t739, qJD(3) * t107 + qJD(4) * t84 - t159, t489 (t166 * t287 + t197 * t288 - t250 * t579) * qJD(2) + t1 * qJD(3) + t6 * qJD(4) + t73 * qJD(6) + t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t322 - t427 * t569, qJD(3) * t321 - t430 * t569, 0, 0, 0, 0, 0, t776, t448, t776, t487, -t448, t742 + t4 * qJD(2) + (-pkin(9) * t157 + t322 * t351) * qJD(3) + t32 * qJD(4) - t146 * qJD(5), qJD(2) * t106 + t321 * t607 - t574, qJD(2) * t107 - t321 * t412 - t575, -t487, -t322 * t612 + t742 + t1 * qJD(2) + t12 * qJD(4) + t70 * qJD(6) + (-t596 - t613) * t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t757, -t765, t757, 0, t765, t10 * qJD(2) + t32 * qJD(3) + (-pkin(4) * t224 - t212) * qJD(4) + t689, -t762, qJD(2) * t84 - t321 * t610 - t208, 0, t6 * qJD(2) + t12 * qJD(3) + (-t224 * t734 - t212) * qJD(4) + t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t757, 0, 0, 0, t762; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t73 + qJD(3) * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t80 - t748, t496, t737, -t679, -t496, -qJD(3) * t3 - qJD(4) * t9 + t771, t737, -t496, t679, qJD(3) * t2 - qJD(4) * t5 - qJD(6) * t72 + t771; 0, 0, 0, 0, t565, t389 * qJD(3), 0, 0, 0, -pkin(2) * t594, -pkin(2) * t591, -t422 * t568 + t423 * t565, -qJD(4) * t345 - 0.2e1 * t430 * t526, -qJD(3) * t347 + t427 * t573, qJD(3) * t346 + t427 * t572, -t565, -qJD(3) * t116 - qJD(4) * t201, qJD(3) * t117 + qJD(4) * t200, qJD(3) * t64 + qJD(4) * t97 - t392 * t422, -qJD(3) * t43 - qJD(4) * t50 + t525, -qJD(3) * t63 - qJD(4) * t98 + t349, qJD(3) * t28 + qJD(4) * t36 - qJD(5) * t124, t27 * qJD(3) + t68 * qJD(4) + (-t422 * t596 - t427 * t602) * t429, -qJD(3) * t33 - qJD(4) * t67 - t427 * t566 + t349, qJD(3) * t19 + qJD(4) * t22 + qJD(6) * t344 - t525, qJD(3) * t17 + qJD(4) * t18 - qJD(5) * t108 + qJD(6) * t71; 0, 0, 0, 0, t564, t597, t591, -t594, 0, -pkin(8) * t591 - t587, pkin(8) * t594 - t586, -t320 + (t423 * t595 + t393) * t430, -0.2e1 * t427 * t568 + t430 * t740, t426 * t594 - t615, t429 * t594 + t616, -t334 (t426 * t517 - t588) * qJD(3) + t175 * qJD(4) + t491 (t429 * t517 + t589) * qJD(3) + t174 * qJD(4) + t761 (-t304 * t429 - t426 * t506) * qJD(3) + t61 * qJD(4) + t301 + t500, qJD(3) * t495 + t40 * qJD(4) - t752 (-t304 * t426 + t429 * t506) * qJD(3) + t59 * qJD(4) + t361 + t753 (pkin(9) * t495 + t304 * t351) * qJD(3) + t13 * qJD(4) + t95 * qJD(5) + t503 (t251 * t429 - t325 * t647 - t658) * qJD(3) + t21 * qJD(4) + t301 - t566 + t492 (t251 * t426 + t325 * t639 + t656) * qJD(3) + t24 * qJD(4) + t361 + t429 * t602 + t493 ((-t199 - t657) * t429 + (-t176 + t655) * t426) * qJD(3) + t16 * qJD(4) + t751 (t176 * t364 + t199 * t366 + t251 * t325) * qJD(3) + t8 * qJD(4) + t66 * qJD(5) + t30 * qJD(6) + t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t527, -t462, t306, t307, t403, qJD(3) * t175 - t280 - t490, qJD(3) * t174 + t609 - t760, qJD(3) * t61 - t280 - t755, t40 * qJD(3) - qJD(4) * t620 - t567 - t632, qJD(3) * t59 - t605 - t609 - t754, t13 * qJD(3) + (-pkin(4) * t292 - qJ(5) * t291) * qJD(4) + t255 * qJD(5) + t502, qJD(3) * t21 - qJD(4) * t227 - t756, qJD(3) * t24 + qJD(4) * t226 + t499 - t605, t673 + t16 * qJD(3) + (-t426 * t634 + t397) * qJD(4) + t567, t8 * qJD(3) + (t226 * qJ(5) - t227 * t734) * qJD(4) + t197 * qJD(5) + t257 * qJD(6) + t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, t306, t229, qJD(3) * t95 + qJD(4) * t255 - t759, t218, t229, -t306, qJD(3) * t66 + qJD(4) * t197 + t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, -t305, t599, qJD(3) * t30 + qJD(4) * t257 + t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t746, -t686, t746, t687, t686, qJD(2) * t3 - qJD(4) * t31 - t742, t746, t686, -t687, -qJD(2) * t2 - qJD(4) * t11 - qJD(6) * t69 - t742; 0, 0, 0, 0, -t564, -t597, 0, 0, 0, t587, t586, -t423 * t564 - t320, 0.2e1 * t426 * t307, -t572 + t615, t573 - t616, t334, qJD(4) * t223 - t491, qJD(4) * t222 - t761, qJD(4) * t62 - t300 - t500, -qJD(4) * t39 - t571 + t752, qJD(4) * t60 + t361 - t753, qJD(4) * t14 - qJD(5) * t94 - t503, qJD(4) * t20 - t300 - t492, -qJD(4) * t23 + t361 - t493, -qJD(4) * t15 + t571 - t751, -qJD(4) * t7 - qJD(5) * t65 + qJD(6) * t29 - t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t568, t388 * qJD(4), 0, 0, 0, -pkin(3) * t607, -pkin(3) * t412, -qJD(4) * t236 + t392, 0, -qJD(4) * t235 + t411 (qJD(4) * t365 - t596) * t351, qJD(4) * t178 + t392, qJD(4) * t177 + t411, qJD(6) * t387, qJD(4) * t99 - qJD(6) * t245 + t325 * t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t528, t740, -t343, t398 * t426, -t595 / 0.2e1, -t473 - t584, -t474 + t585, -t483 - t584, -t652 + t774, -t484 - t585, pkin(9) * t774 + t449, t485 - t608, -qJD(4) * t364 + t486, qJD(4) * t769 - t593 - t678 (-t364 * qJ(5) - t366 * t734) * qJD(4) + t366 * qJD(5) + t313 * qJD(6) + t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, -t343, t323, -t464 + t584, -t231, t323, t343, t325 * t611 + t608 - t629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t598, qJD(4) * t313 + t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t80, -t684, -t749, 0, t684, qJD(2) * t9 + qJD(3) * t31, -t749, t684, 0, qJD(2) * t5 + qJD(3) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, t462, -t305, -t308, t403, -qJD(3) * t223 + t490, -qJD(3) * t222 + t760, -qJD(3) * t62 + t755, qJD(3) * t39 + t632, -qJD(3) * t60 - t605 + t754, -qJD(3) * t14 - t502 - t577, -qJD(3) * t20 + t570 + t756, qJD(3) * t23 + t427 * t604 - t499 - t605, qJD(3) * t15 - t673, qJD(3) * t7 + qJD(6) * t198 - t504 - t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t528, -t740, t563, -t426 * t592, t595 / 0.2e1, t473, t474, t483, t652, t484, -t449, -t485 + t604, -t486 - t603, t678, -qJD(6) * t284 - t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t419, 0, qJD(5), 0, t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, -t358, 0, -t398, 0, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, t341, 0, t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t749, 0, 0, 0, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t305, -t229, qJD(3) * t94 + t404 + t759, t217, -t229, t305, qJD(3) * t65 + t404 - t570 - t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t563, -t323, t464, t231, -t323, -t563, t629 + (-qJD(6) - t612) * t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, t358, 0, t398, 0, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t72 + qJD(3) * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, t306, -t599, -qJD(3) * t29 - qJD(4) * t198 + t427 * t593 - t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t607, t412, -t598, qJD(4) * t284 - t455 + t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342, -t341, 0, -t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t25;
