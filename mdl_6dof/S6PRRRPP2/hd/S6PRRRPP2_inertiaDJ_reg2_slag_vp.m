% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPP2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:52:40
% EndTime: 2019-03-08 22:52:50
% DurationCPUTime: 3.35s
% Computational Cost: add. (1641->288), mult. (4595->451), div. (0->0), fcn. (3877->8), ass. (0->159)
t105 = cos(qJ(4));
t167 = t105 * qJD(5);
t102 = sin(qJ(4));
t178 = t102 * qJ(5);
t197 = pkin(4) + pkin(5);
t208 = t197 * t105 + t178;
t211 = t208 * qJD(4) - t167;
t103 = sin(qJ(3));
t94 = qJD(4) * t105;
t151 = t103 * t94;
t106 = cos(qJ(3));
t165 = t106 * qJD(3);
t153 = t102 * t165;
t58 = t151 + t153;
t101 = sin(pkin(6));
t104 = sin(qJ(2));
t176 = qJD(2) * t104;
t149 = t101 * t176;
t107 = cos(qJ(2));
t179 = t101 * t107;
t156 = t102 * t179;
t175 = qJD(2) * t107;
t148 = t101 * t175;
t180 = t101 * t104;
t182 = cos(pkin(6));
t54 = t103 * t180 - t182 * t106;
t29 = -qJD(3) * t54 + t106 * t148;
t55 = t182 * t103 + t106 * t180;
t11 = -qJD(4) * t156 + t102 * t29 - t105 * t149 + t55 * t94;
t210 = t11 * t106 + t54 * t153;
t31 = t102 * t55 + t105 * t179;
t12 = -qJD(4) * t31 + t102 * t149 + t29 * t105;
t32 = t105 * t55 - t156;
t131 = t102 * t32 - t105 * t31;
t2 = -qJD(4) * t131 + t11 * t102 + t12 * t105;
t170 = qJD(4) * t106;
t150 = t105 * t170;
t93 = t103 * qJD(3);
t59 = -t102 * t93 + t150;
t209 = t197 * qJD(3);
t1 = (t102 * t12 - t105 * t11 + (t102 * t31 + t105 * t32) * qJD(4)) * t103 + t131 * t165;
t30 = qJD(3) * t55 + t103 * t148;
t192 = t54 * t30;
t199 = 0.2e1 * t31 * t11 + 0.2e1 * t32 * t12 + 0.2e1 * t192;
t177 = t102 * t103;
t207 = t54 * t151 + t30 * t177 - t31 * t93 + t210;
t97 = t102 ^ 2;
t99 = t105 ^ 2;
t188 = t97 - t99;
t205 = t188 * qJD(4);
t168 = t102 * qJD(6);
t204 = t58 * qJ(6) + t103 * t168;
t193 = pkin(9) * t106;
t136 = pkin(3) * t103 - t193;
t121 = t136 * qJD(3);
t152 = t102 * t170;
t57 = t105 * t93 + t152;
t194 = pkin(9) * t103;
t137 = -pkin(3) * t106 - t194;
t71 = -pkin(2) + t137;
t19 = pkin(8) * t57 - t102 * t121 - t71 * t94;
t181 = qJ(5) * t105;
t133 = pkin(4) * t102 - t181;
t126 = pkin(8) + t133;
t50 = t126 * t103;
t169 = t102 * qJD(5);
t52 = t133 * qJD(4) - t169;
t134 = pkin(4) * t105 + t178;
t67 = -pkin(3) - t134;
t202 = qJD(3) * (-t106 * t67 + t194) - qJD(4) * t50 - t103 * t52;
t200 = t134 * qJD(4) - t167;
t172 = qJD(4) * t102;
t16 = -t105 * t30 + t54 * t172;
t173 = qJD(3) * t105;
t198 = t16 * t103 - (t54 * t173 + t12) * t106 + t32 * t93;
t144 = t105 * t165;
t139 = t102 * t144;
t98 = t103 ^ 2;
t28 = -0.4e1 * t103 * t139 + 0.2e1 * t98 * t205;
t66 = -0.2e1 * t205;
t109 = 0.2e1 * qJD(5);
t195 = pkin(8) * t106;
t191 = pkin(9) - qJ(6);
t190 = t12 * qJ(5) + t32 * qJD(5);
t88 = t105 * t195;
t49 = t102 * t71 + t88;
t124 = -t197 * t102 + t181;
t119 = -pkin(8) + t124;
t13 = -t211 * t103 + t119 * t165;
t187 = t102 * t13;
t186 = t105 * t13;
t184 = t30 * t103;
t183 = t106 ^ 2 - t98;
t174 = qJD(3) * t102;
t171 = qJD(4) * t103;
t166 = t105 * qJD(6);
t164 = t106 * qJD(5);
t163 = -0.2e1 * pkin(2) * qJD(3);
t162 = -0.2e1 * pkin(3) * qJD(4);
t87 = t102 * t195;
t161 = pkin(4) * t93;
t160 = pkin(9) * t172;
t159 = pkin(9) * t94;
t158 = pkin(8) * t165;
t64 = pkin(3) + t208;
t157 = t64 * t94;
t155 = qJ(5) * t165;
t154 = qJ(5) * t171;
t146 = t102 * t94;
t145 = t103 * t165;
t74 = t191 * t105;
t48 = t105 * t71 - t87;
t143 = t59 * pkin(8) - t105 * t121 + t71 * t172;
t142 = t183 * qJD(3);
t141 = 0.2e1 * t145;
t140 = t98 * t146;
t40 = -qJ(5) * t106 + t49;
t95 = t106 * pkin(4);
t42 = -t48 + t95;
t129 = -t102 * t40 + t105 * t42;
t128 = -t102 * t49 - t105 * t48;
t15 = t102 * t30 + t54 * t94;
t47 = qJD(4) * t124 + t169;
t125 = t105 * t47 - t64 * t172;
t36 = t119 * t103;
t123 = qJD(4) * t36 + t64 * t165;
t120 = -qJ(6) * t172 + t166;
t118 = -qJ(6) * t144 + t143;
t91 = qJ(5) * t93;
t14 = -t19 + t91 - t164;
t17 = t143 - t161;
t114 = qJD(4) * t129 + t17 * t102 + t14 * t105;
t113 = qJD(4) * t128 + t102 * t143 - t19 * t105;
t112 = t184 + t29 * t106 + (-t103 * t55 + t106 * t54) * qJD(3);
t111 = t2 * pkin(9);
t110 = 0.2e1 * t91 - 0.2e1 * t164 - t19;
t96 = qJ(5) * t109;
t82 = -0.2e1 * t145;
t81 = -0.2e1 * t146;
t80 = 0.2e1 * t146;
t79 = pkin(9) * t150;
t73 = t191 * t102;
t56 = t102 * t171 - t144;
t53 = qJD(4) * t74 - t168;
t51 = -t191 * t172 - t166;
t46 = 0.2e1 * t99 * t145 - 0.2e1 * t140;
t45 = 0.2e1 * t97 * t145 + 0.2e1 * t140;
t41 = t188 * t171 - t139;
t39 = t102 * t142 + t103 * t150;
t38 = t103 * t152 - t183 * t173;
t37 = 0.4e1 * t103 * t146 + t188 * t165;
t35 = 0.2e1 * t39;
t34 = 0.2e1 * t38;
t26 = qJ(6) * t177 + t40;
t23 = pkin(5) * t106 + t87 + t95 + (-qJ(6) * t103 - t71) * t105;
t18 = t200 * t103 + t126 * t165;
t7 = t14 + t204;
t6 = (-t120 - t209) * t103 + t118;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t101 ^ 2 * t104 * t175 + 0.2e1 * t29 * t55 + 0.2e1 * t192, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t149, -t148, 0, 0, 0, 0, 0, 0, 0, 0 (-t106 * t176 - t107 * t93) * t101 (t103 * t176 - t107 * t165) * t101, t112, -pkin(2) * t149 + pkin(8) * t112, 0, 0, 0, 0, 0, 0, t207, -t198, -t1, -t11 * t48 + t12 * t49 - t19 * t32 + t143 * t31 + (t54 * t165 + t184) * pkin(8), 0, 0, 0, 0, 0, 0, t207, -t1, t198, t11 * t42 + t12 * t40 + t14 * t32 + t17 * t31 + t18 * t54 + t30 * t50, 0, 0, 0, 0, 0, 0 (-qJD(3) * t31 + t15) * t103 + t210, t198, t1, t11 * t23 + t12 * t26 - t13 * t54 - t30 * t36 + t31 * t6 + t32 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, 0.2e1 * t142, 0, t82, 0, 0, t103 * t163, t106 * t163, 0, 0, t46, t28, t34, t45, t35, t82, 0.2e1 * t48 * t93 + 0.2e1 * t106 * t143 + 0.2e1 * (t102 * t141 + t98 * t94) * pkin(8), -0.2e1 * t49 * t93 - 0.2e1 * t19 * t106 + 0.2e1 * (t105 * t141 - t98 * t172) * pkin(8), 0.2e1 * t128 * t165 + 0.2e1 * (t102 * t19 + t105 * t143 + (t102 * t48 - t105 * t49) * qJD(4)) * t103, 0.2e1 * pkin(8) ^ 2 * t145 - 0.2e1 * t143 * t48 - 0.2e1 * t19 * t49, t46, t34, -t28, t82, -0.2e1 * t39, t45, 0.2e1 * (t50 * t174 + t17) * t106 + 0.2e1 * (-qJD(3) * t42 + t102 * t18 + t50 * t94) * t103, 0.2e1 * t129 * t165 + 0.2e1 * (-t102 * t14 + t105 * t17 + (-t102 * t42 - t105 * t40) * qJD(4)) * t103, 0.2e1 * (-t50 * t173 - t14) * t106 + 0.2e1 * (qJD(3) * t40 - t105 * t18 + t50 * t172) * t103, 0.2e1 * t14 * t40 + 0.2e1 * t17 * t42 + 0.2e1 * t18 * t50, t46, -t28, -0.2e1 * t38, t45, t35, t82, 0.2e1 * (-t36 * t174 + t6) * t106 + 0.2e1 * (-qJD(3) * t23 - t36 * t94 - t187) * t103, 0.2e1 * (t36 * t173 - t7) * t106 + 0.2e1 * (qJD(3) * t26 - t36 * t172 + t186) * t103, 0.2e1 * (t102 * t26 - t105 * t23) * t165 + 0.2e1 * (t102 * t7 - t105 * t6 + (t102 * t23 + t105 * t26) * qJD(4)) * t103, 0.2e1 * t13 * t36 + 0.2e1 * t23 * t6 + 0.2e1 * t26 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30, -t29, 0, 0, 0, 0, 0, 0, 0, 0, t16, t15, t2, -pkin(3) * t30 + t111, 0, 0, 0, 0, 0, 0, t16, t2, -t15, t30 * t67 + t52 * t54 + t111, 0, 0, 0, 0, 0, 0, t16, -t15, -t2, t11 * t73 + t12 * t74 - t30 * t64 + t31 * t53 + t32 * t51 - t54 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, 0, -t93, 0, -t158, pkin(8) * t93, 0, 0, -t41, -t37, -t59, t41, t57, 0, t79 + (-pkin(3) * t105 + pkin(8) * t102) * t171 + (t137 * t102 - t88) * qJD(3) (pkin(8) * t103 * t105 + t136 * t102) * qJD(4) + (t137 * t105 + t87) * qJD(3), t113, -pkin(3) * t158 + pkin(9) * t113, -t41, -t59, t37, 0, -t57, t41, t79 + (t67 * t171 - t18) * t105 - t202 * t102, t114 (-t18 + (t103 * t67 + t193) * qJD(4)) * t102 + t202 * t105, pkin(9) * t114 + t18 * t67 + t50 * t52, -t41, t37, t59, t41, t57, 0, t186 + t106 * t53 + (-qJD(3) * t73 - t157) * t103 + (-t103 * t47 - t123) * t102, t187 - t106 * t51 + t123 * t105 + (qJD(3) * t74 + t125) * t103 (-t73 * t165 - t103 * t53 - t7 + (t103 * t74 - t23) * qJD(4)) * t105 + (t74 * t165 + t103 * t51 - t6 + (t103 * t73 + t26) * qJD(4)) * t102, t13 * t64 + t23 * t53 + t26 * t51 + t36 * t47 + t6 * t73 + t7 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t66, 0, t81, 0, 0, t102 * t162, t105 * t162, 0, 0, t80, 0, -t66, 0, 0, t81, -0.2e1 * t105 * t52 + 0.2e1 * t67 * t172, 0, -0.2e1 * t102 * t52 - 0.2e1 * t67 * t94, 0.2e1 * t67 * t52, t80, -t66, 0, t81, 0, 0, 0.2e1 * t125, 0.2e1 * t102 * t47 + 0.2e1 * t157, -0.2e1 * t53 * t102 - 0.2e1 * t51 * t105 + 0.2e1 * (t102 * t74 - t105 * t73) * qJD(4), 0.2e1 * t47 * t64 + 0.2e1 * t51 * t74 + 0.2e1 * t53 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, -t12, 0, 0, 0, 0, 0, 0, 0, 0, -t11, 0, t12, -pkin(4) * t11 + t190, 0, 0, 0, 0, 0, 0, -t11, t12, 0, -t11 * t197 + t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t58, t93, -t143, t19, 0, 0, 0, -t56, 0, t93, t58, 0, -t143 + 0.2e1 * t161 (-pkin(4) * t165 - t154) * t105 + (-t155 + (pkin(4) * qJD(4) - qJD(5)) * t103) * t102, t110, -pkin(4) * t17 + qJ(5) * t14 + qJD(5) * t40, 0, 0, t56, 0, -t58, t93 (t120 + 0.2e1 * t209) * t103 - t118, t110 + t204 (t165 * t197 + t154) * t105 + (t155 + (-qJD(4) * t197 + qJD(5)) * t103) * t102, qJ(5) * t7 + qJD(5) * t26 - t197 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, -t172, 0, -t159, t160, 0, 0, 0, t94, 0, 0, t172, 0, -t159, -t200, -t160, -t200 * pkin(9), 0, 0, -t94, 0, -t172, 0, -t53, t51, t211, qJ(5) * t51 + qJD(5) * t74 - t197 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t96, 0, 0, 0, 0, 0, 0, 0, t109, 0, t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, -t56, 0, t17, 0, 0, 0, 0, 0, 0, -t93, 0, t56, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, t159, 0, 0, 0, 0, 0, 0, 0, 0, -t94, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, -t56, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, t94, 0, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
