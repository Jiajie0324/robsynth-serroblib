% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRPP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 06:48
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRPP2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPP2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPP2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP2_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 06:47:20
% EndTime: 2019-05-05 06:48:16
% DurationCPUTime: 62.07s
% Computational Cost: add. (103101->922), mult. (200505->1129), div. (0->0), fcn. (139196->10), ass. (0->615)
t1892 = sin(qJ(4));
t1895 = cos(qJ(4));
t1893 = sin(qJ(3));
t2068 = qJD(2) * t1893;
t1843 = t1892 * qJD(3) + t1895 * t2068;
t1896 = cos(qJ(3));
t2067 = qJD(2) * t1896;
t1870 = -qJD(4) + t2067;
t1874 = qJD(3) * t2067;
t2011 = t1893 * qJDD(2);
t1846 = t1874 + t2011;
t2003 = -t1895 * qJDD(3) + t1892 * t1846;
t1721 = (qJD(4) + t1870) * t1843 + t2003;
t2087 = t1870 ^ 2;
t1841 = -t1895 * qJD(3) + t1892 * t2068;
t2088 = t1841 ^ 2;
t2110 = t2088 - t2087;
t1873 = qJD(3) * t2068;
t2010 = t1896 * qJDD(2);
t1847 = -t1873 + t2010;
t1838 = -qJDD(4) + t1847;
t2031 = t1843 * t1841;
t2113 = -t2031 + t1838;
t2138 = t2113 * t1892;
t2176 = t1895 * t2110 + t2138;
t2217 = t1893 * t2176;
t1594 = t1721 * t1896 + t2217;
t1887 = sin(pkin(6));
t1889 = cos(pkin(6));
t2215 = t1896 * t2176;
t1601 = t1721 * t1893 - t2215;
t1894 = sin(qJ(2));
t2137 = t2113 * t1895;
t1688 = -t1892 * t2110 + t2137;
t1897 = cos(qJ(2));
t2214 = t1688 * t1897;
t1968 = t1601 * t1894 - t2214;
t1493 = t1887 * t1594 + t1889 * t1968;
t2216 = t1688 * t1894;
t1542 = t1601 * t1897 + t2216;
t1886 = sin(pkin(10));
t1888 = cos(pkin(10));
t2317 = t1493 * t1886 - t1542 * t1888;
t2316 = t1493 * t1888 + t1542 * t1886;
t1951 = -t1892 * qJDD(3) - t1895 * t1846;
t1922 = -qJD(4) * t1841 - t1951;
t2027 = t1870 * t1841;
t2115 = -t2027 + t1922;
t1613 = t1721 * t1895 - t1892 * t2115;
t1837 = t1843 ^ 2;
t1745 = -t2088 - t1837;
t1556 = t1613 * t1893 + t1745 * t1896;
t1559 = t1613 * t1896 - t1745 * t1893;
t1607 = t1721 * t1892 + t1895 * t2115;
t1986 = t1559 * t1894 - t1607 * t1897;
t1439 = t1889 * t1556 + t1887 * t1986;
t1442 = -t1887 * t1556 + t1889 * t1986;
t2250 = (t1439 * t1887 + t1442 * t1889) * pkin(7);
t1500 = t1559 * t1897 + t1607 * t1894;
t2251 = qJ(1) * (t1442 * t1888 + t1500 * t1886);
t2252 = qJ(1) * (t1442 * t1886 - t1500 * t1888);
t2260 = pkin(1) * t1439;
t2261 = pkin(1) * t1442;
t2020 = qJD(4) - t1870;
t1720 = t1843 * t2020 + t2003;
t2114 = t2027 + t1922;
t2053 = t2114 * t1892;
t1615 = -t1720 * t1895 - t2053;
t2116 = t1837 - t2088;
t1774 = t1896 * t2116;
t1574 = t1615 * t1893 - t1774;
t2036 = t2116 * t1893;
t1577 = t1615 * t1896 + t2036;
t2051 = t2114 * t1895;
t1609 = -t1720 * t1892 + t2051;
t1980 = t1577 * t1894 - t1609 * t1897;
t1450 = -t1887 * t1574 + t1889 * t1980;
t1507 = t1577 * t1897 + t1609 * t1894;
t2311 = t1450 * t1886 - t1507 * t1888;
t2310 = t1450 * t1888 + t1507 * t1886;
t2118 = t1837 - t2087;
t2112 = t2031 + t1838;
t2139 = t2112 * t1895;
t1689 = -t2118 * t1892 + t2139;
t1590 = t1689 * t1893 + t1896 * t2115;
t1596 = t1689 * t1896 - t1893 * t2115;
t2140 = t2112 * t1892;
t1683 = t2118 * t1895 + t2140;
t1973 = t1596 * t1894 - t1683 * t1897;
t1488 = -t1887 * t1590 + t1889 * t1973;
t1537 = t1596 * t1897 + t1683 * t1894;
t2309 = t1488 * t1886 - t1537 * t1888;
t2308 = t1488 * t1888 + t1537 * t1886;
t1487 = -t1889 * t1594 + t1887 * t1968;
t2117 = t1837 + t2087;
t1668 = t2117 * t1892 + t2137;
t2239 = t1668 * t1893;
t2266 = t1896 * t2114 - t2239;
t2213 = t2117 * t1895 - t2138;
t2232 = t1897 * t2213;
t2238 = t1668 * t1896;
t2264 = -t2114 * t1893 - t2238;
t2280 = t1894 * t2264 - t2232;
t2289 = -t1887 * t2266 + t1889 * t2280;
t2306 = pkin(1) * t2289;
t2290 = t1887 * t2280 + t1889 * t2266;
t2305 = pkin(1) * t2290;
t2233 = t1894 * t2213;
t2279 = t1897 * t2264 + t2233;
t2304 = qJ(1) * (-t1886 * t2289 + t1888 * t2279);
t2303 = qJ(1) * (t1886 * t2279 + t1888 * t2289);
t2302 = (-t1887 * t2290 - t1889 * t2289) * pkin(7);
t2246 = pkin(7) * t1500;
t2301 = pkin(7) * t2279;
t1482 = t1889 * t1590 + t1887 * t1973;
t1447 = t1889 * t1574 + t1887 * t1980;
t1765 = qJD(4) * t1843 + t2003;
t1815 = t1843 * t1870;
t1719 = t1765 - t1815;
t2111 = -t2087 - t2088;
t2174 = t1895 * t2111 + t2140;
t2186 = t1893 * t2174;
t2231 = -t1896 * t1719 + t2186;
t2175 = t1892 * t2111 - t2139;
t2183 = t1897 * t2175;
t2184 = t1896 * t2174;
t2230 = t1719 * t1893 + t2184;
t2254 = t1894 * t2230 - t2183;
t2262 = -t1887 * t2231 + t1889 * t2254;
t2288 = pkin(1) * t2262;
t2263 = t1887 * t2254 + t1889 * t2231;
t2287 = pkin(1) * t2263;
t2286 = pkin(2) * t2266;
t2285 = pkin(8) * t2266;
t2222 = pkin(8) * t1559;
t2282 = -pkin(2) * t1607 + t2222;
t2248 = pkin(2) * t2213;
t2281 = pkin(8) * t2264 - t2248;
t2185 = t1894 * t2175;
t2253 = t1897 * t2230 + t2185;
t2278 = qJ(1) * (-t1886 * t2262 + t1888 * t2253);
t2277 = qJ(1) * (t1886 * t2253 + t1888 * t2262);
t2276 = (-t1887 * t2263 - t1889 * t2262) * pkin(7);
t2224 = pkin(2) * t1556;
t2275 = pkin(7) * t2253;
t2223 = pkin(8) * t1556;
t2245 = pkin(9) * t1668;
t2265 = pkin(3) * t2114 - t2245;
t2259 = pkin(2) * t2231;
t2258 = pkin(8) * t2231;
t2202 = pkin(2) * t2175;
t2255 = pkin(8) * t2230 - t2202;
t2168 = pkin(3) * t1607;
t2247 = pkin(3) * t2213;
t2165 = pkin(9) * t1607;
t2244 = pkin(9) * t2213;
t2199 = pkin(9) * t2174;
t2229 = -pkin(3) * t1719 + t2199;
t2173 = -pkin(3) * t1745 - pkin(9) * t1613;
t2025 = t1870 * t1895;
t1905 = -t1843 * t2025 + t1892 * t1922;
t1778 = t1893 * t2031;
t2026 = t1870 * t1892;
t1803 = t1843 * t2026;
t2015 = t1895 * t1922 + t1803;
t2103 = t1896 * t2015 + t1778;
t2131 = t1905 * t1894 + t1897 * t2103;
t1964 = t1894 * t2103 - t1905 * t1897;
t1779 = t1896 * t2031;
t2101 = t1893 * t2015 - t1779;
t2211 = -t1887 * t2101 + t1889 * t1964;
t2128 = -t1886 * t2211 + t1888 * t2131;
t1948 = t1765 * t1895 + t1841 * t2026;
t2009 = t1841 * t2025;
t1949 = t1765 * t1892 - t2009;
t2104 = t1896 * t1949 - t1778;
t2179 = -t1894 * t1948 + t1897 * t2104;
t2102 = t1893 * t1949 + t1779;
t2181 = t1894 * t2104 + t1897 * t1948;
t2206 = -t1887 * t2102 + t1889 * t2181;
t2210 = -t1886 * t2206 + t1888 * t2179;
t1994 = -t1803 + t2009;
t2033 = t1838 * t1893;
t2094 = t1896 * t1994 - t2033;
t2121 = (t1841 * t1892 + t1843 * t1895) * t1870;
t2125 = t1894 * t2121;
t2178 = t1897 * t2094 + t2125;
t1818 = t1896 * t1838;
t2099 = t1893 * t1994 + t1818;
t2123 = t1897 * t2121;
t2180 = t1894 * t2094 - t2123;
t2205 = -t1887 * t2099 + t1889 * t2180;
t2228 = -t1886 * t2205 + t1888 * t2178;
t2129 = t1886 * t2131 + t1888 * t2211;
t2207 = t1886 * t2179 + t1888 * t2206;
t2226 = t1886 * t2178 + t1888 * t2205;
t2200 = pkin(3) * t2175;
t2198 = pkin(9) * t2175;
t2212 = t1887 * t1964 + t1889 * t2101;
t2209 = t1887 * t2181 + t1889 * t2102;
t2208 = t1887 * t2180 + t1889 * t2099;
t2197 = qJ(5) * t1721;
t2196 = qJ(5) * t1745;
t2195 = qJ(5) * t2113;
t2075 = qJ(5) * t2114;
t2074 = qJ(5) * t2111;
t2182 = -pkin(4) * t2112 + t2074;
t2164 = qJ(6) * t2115;
t1854 = g(1) * t1888 + g(2) * t1886;
t2079 = g(3) - qJDD(1);
t2005 = t1887 * t2079;
t2006 = g(1) * t1886 - t1888 * g(2);
t2135 = t1889 * t2006 - t2005;
t1754 = -t1897 * t1854 + t1894 * t2135;
t1898 = qJD(2) ^ 2;
t1741 = -t1898 * pkin(2) + qJDD(2) * pkin(8) + t1754;
t1833 = t1887 * t2006;
t1991 = t1889 * t2079 + t1833;
t1801 = t1896 * t1991;
t2083 = pkin(3) * t1896;
t1999 = -pkin(9) * t1893 - t2083;
t1844 = t1999 * qJD(2);
t2089 = qJD(3) ^ 2;
t1627 = (qJD(2) * t1844 + t1741) * t1893 - qJDD(3) * pkin(3) - pkin(9) * t2089 + t1801;
t2136 = t1765 * pkin(4) + t1627 - t2075;
t1753 = -t1894 * t1854 - t1897 * t2135;
t1651 = t1753 * t1894 + t1754 * t1897;
t1641 = t1651 * t1887;
t2127 = t1886 * t2079;
t2126 = t1888 * t2079;
t1945 = t1894 * t1991;
t1944 = t1897 * t1991;
t2066 = qJD(5) * t1870;
t1857 = -0.2e1 * t2066;
t2065 = qJD(6) * t1841;
t2120 = 0.2e1 * t2065 + t1857;
t1858 = 0.2e1 * t2066;
t2119 = -0.2e1 * t2065 + t1858;
t1802 = pkin(5) * t1870 - qJ(6) * t1843;
t2109 = t1843 * t1802 + qJDD(6);
t1672 = t1896 * t1741 - t1893 * t1991;
t1628 = -pkin(3) * t2089 + qJDD(3) * pkin(9) + t1844 * t2067 + t1672;
t1740 = -qJDD(2) * pkin(2) - t1898 * pkin(8) + t1753;
t1995 = -t1847 + t1873;
t1996 = t1846 + t1874;
t1649 = pkin(3) * t1995 - pkin(9) * t1996 + t1740;
t1551 = t1892 * t1628 - t1895 * t1649;
t1942 = t1838 * pkin(4) - qJ(5) * t2087 + qJDD(5) + t1551;
t1910 = t1838 * pkin(5) + t1942 - t2164;
t1777 = pkin(4) * t1841 - qJ(5) * t1843;
t2007 = -pkin(5) * t1841 - t1777;
t1472 = (-0.2e1 * qJD(6) - t2007) * t1843 + t1910;
t1552 = t1895 * t1628 + t1892 * t1649;
t1990 = pkin(4) * t2087 + t1838 * qJ(5) + t1841 * t1777 - t1552;
t1920 = pkin(5) * t2088 - t1765 * qJ(6) + t1870 * t1802 + t1990;
t1481 = -t1920 + t2120;
t2085 = pkin(4) + pkin(5);
t2107 = qJ(5) * t1481 - t1472 * t2085;
t1522 = t1857 - t1990;
t2032 = t1843 * t1777;
t1523 = t1942 + t2032;
t1432 = t1522 * t1895 + t1523 * t1892;
t1530 = (-pkin(4) * t1870 - 0.2e1 * qJD(5)) * t1843 + t2136;
t2106 = -(pkin(4) * t1895 + qJ(5) * t1892 + pkin(3)) * t1530 + pkin(9) * t1432;
t2105 = t2085 * t2115 + t2197;
t2100 = t2085 * t2117 - t1920 - t2195;
t2098 = -t1888 * t1854 - t1886 * t2006;
t2097 = -t1886 * t1854 + t1888 * t2006;
t2092 = (t1719 + t1765) * pkin(5) + qJ(6) * (t2111 + t2088);
t2086 = 0.2e1 * t1843;
t2084 = pkin(3) * t1893;
t2082 = pkin(7) * t1889;
t2080 = t1765 * pkin(5);
t2077 = qJ(5) * t1719;
t2073 = qJ(6) * t1472;
t2072 = qJ(6) * t1481;
t2071 = qJ(6) * t2112;
t2070 = qJ(6) * t2113;
t2069 = qJD(2) * qJD(3);
t2064 = t1627 * t1892;
t2063 = t1627 * t1895;
t2060 = t1719 * t1892;
t2058 = t1719 * t1895;
t2048 = t1740 * t1893;
t2047 = t1740 * t1896;
t1868 = t1893 * t1898 * t1896;
t1855 = -t1868 + qJDD(3);
t2030 = t1855 * t1893;
t2029 = t1855 * t1896;
t1856 = qJDD(3) + t1868;
t2028 = t1856 * t1893;
t1882 = t1893 ^ 2;
t2024 = t1882 * t1898;
t1883 = t1896 ^ 2;
t2013 = t1882 + t1883;
t2012 = t1887 * qJDD(2);
t1469 = t1551 * t1892 + t1895 * t1552;
t1671 = t1893 * t1741 + t1801;
t1571 = t1671 * t1893 + t1896 * t1672;
t2002 = t1894 * t1868;
t2001 = t1897 * t1868;
t2000 = -pkin(3) * t1627 + pkin(9) * t1469;
t1998 = -pkin(4) * t1523 + qJ(5) * t1522;
t1997 = -pkin(4) * t2115 - t2197;
t1570 = t1671 * t1896 - t1672 * t1893;
t1849 = t2013 * qJDD(2);
t1880 = t1883 * t1898;
t1852 = t1880 + t2024;
t1782 = t1849 * t1897 - t1852 * t1894;
t1992 = pkin(7) * t1782 + t1570 * t1894;
t1417 = t1472 * t1892 + t1481 * t1895;
t1900 = t1530 - t2109;
t1496 = qJ(6) * t2088 + t1900 + t2080;
t1400 = t1417 * t1896 + t1496 * t1893;
t1416 = -t1472 * t1895 + t1481 * t1892;
t1989 = t1400 * t1894 - t1416 * t1897;
t1415 = t1432 * t1896 + t1530 * t1893;
t1431 = t1522 * t1892 - t1523 * t1895;
t1988 = t1415 * t1894 - t1431 * t1897;
t1436 = t1469 * t1896 + t1627 * t1893;
t1468 = -t1551 * t1895 + t1552 * t1892;
t1987 = t1436 * t1894 - t1468 * t1897;
t1983 = t1571 * t1894 - t1740 * t1897;
t1611 = t2058 + t2053;
t1575 = t1611 * t1896 - t2036;
t1605 = t2060 - t2051;
t1982 = t1575 * t1894 - t1605 * t1897;
t1583 = t1720 * t1893 + t2184;
t1977 = t1583 * t1894 - t2183;
t1731 = t1841 * t2020 + t1951;
t1587 = -t1731 * t1893 + t2238;
t1976 = t1587 * t1894 + t2232;
t1722 = -t1765 - t1815;
t1599 = t1722 * t1893 + t2215;
t1970 = t1599 * t1894 + t2214;
t1738 = (t1841 * t1895 - t1843 * t1892) * t1870;
t1699 = t1738 * t1896 - t2033;
t1962 = t1699 * t1894 - t2123;
t1650 = t1897 * t1753 - t1894 * t1754;
t1845 = 0.2e1 * t1874 + t2011;
t1848 = -0.2e1 * t1873 + t2010;
t1776 = -t1845 * t1893 + t1848 * t1896;
t1853 = -t1880 + t2024;
t1960 = t1776 * t1894 - t1853 * t1897;
t1865 = -t1880 - t2089;
t1797 = t1865 * t1896 - t2028;
t1959 = t1797 * t1894 + t1848 * t1897;
t1863 = -t2024 - t2089;
t1799 = -t1863 * t1893 - t2029;
t1958 = t1799 * t1894 - t1845 * t1897;
t1953 = qJDD(2) * t1894 + t1897 * t1898;
t1821 = t1953 * t1889;
t1850 = qJDD(2) * t1897 - t1894 * t1898;
t1957 = t1821 * t1888 + t1850 * t1886;
t1956 = t1821 * t1886 - t1850 * t1888;
t1954 = t1849 * t1894 + t1852 * t1897;
t1839 = t2013 * t2069;
t1952 = -qJDD(3) * t1897 + t1839 * t1894;
t1864 = t1880 - t2089;
t1796 = t1864 * t1896 - t2030;
t1947 = t1796 * t1894 - t1897 * t2010;
t1840 = t1896 * t1856;
t1862 = -t2024 + t2089;
t1798 = -t1862 * t1893 + t1840;
t1946 = t1798 * t1894 - t1897 * t2011;
t1941 = -pkin(3) * t1720 - t2063 + t2199;
t1940 = pkin(3) * t1731 + t2064 + t2245;
t1804 = -t1847 * t1893 - t1883 * t2069;
t1939 = t1804 * t1894 - t2001;
t1805 = t1846 * t1896 - t1882 * t2069;
t1938 = t1805 * t1894 + t2001;
t1404 = -t1496 * t2085 - t2072;
t1420 = -qJ(5) * t1496 - t2073;
t1366 = -pkin(9) * t1416 - t1404 * t1892 + t1420 * t1895;
t1376 = -pkin(3) * t1416 - t2107;
t1399 = t1417 * t1893 - t1496 * t1896;
t1340 = -pkin(8) * t1399 + t1366 * t1896 - t1376 * t1893;
t1914 = -pkin(3) * t1496 + pkin(9) * t1417 + t1404 * t1895 + t1420 * t1892;
t1350 = -pkin(2) * t1399 - t1914;
t1377 = t1400 * t1897 + t1416 * t1894;
t1937 = pkin(7) * t1377 + t1340 * t1894 + t1350 * t1897;
t1401 = -pkin(3) * t1431 - t1998;
t1405 = -pkin(9) * t1431 + (pkin(4) * t1892 - qJ(5) * t1895) * t1530;
t1414 = t1432 * t1893 - t1530 * t1896;
t1364 = -pkin(8) * t1414 - t1401 * t1893 + t1405 * t1896;
t1375 = -pkin(2) * t1414 - t2106;
t1390 = t1415 * t1897 + t1431 * t1894;
t1936 = pkin(7) * t1390 + t1364 * t1894 + t1375 * t1897;
t1908 = -qJ(6) * t1721 + t1920;
t1434 = t1745 * t2085 + t1908 + t2119;
t1907 = qJD(6) * t2086 - t1910;
t1902 = t1843 * t2007 + t1907 + t2164;
t1437 = t1902 + t2196;
t1396 = -t1434 * t1892 + t1437 * t1895 - t2165;
t1499 = -t2105 - t2168;
t1382 = t1396 * t1896 - t1499 * t1893 - t2223;
t1913 = t1434 * t1895 + t1437 * t1892 - t2173;
t1389 = -t1913 - t2224;
t1935 = t1382 * t1894 + t1389 * t1897 + t2246;
t1906 = qJD(5) * t2086 - t2136;
t1504 = (-t1719 + t1815) * pkin(4) + t1906;
t1438 = t1504 - t2092 + t2109;
t1625 = -t2071 - t2077;
t1423 = -t1438 * t1892 + t1625 * t1895 - t2198;
t1429 = t2085 * t2112 + t1472 - t2074 - t2200;
t1385 = t1423 * t1896 - t1429 * t1893 - t2258;
t1919 = t1438 * t1895 + t1625 * t1892 + t2229;
t1411 = -t1919 - t2259;
t1934 = t1385 * t1894 + t1411 * t1897 + t2275;
t1903 = pkin(4) * t1815 + t1906;
t1899 = -t2080 + (t2117 - t2088) * qJ(6) + t1903 + t2109;
t1460 = t1899 + t2075;
t1568 = t2085 * t2114 + t2070;
t1424 = t1460 * t1895 - t1568 * t1892 - t2244;
t1430 = -t2100 + t2119 - t2247;
t1388 = t1424 * t1896 - t1430 * t1893 - t2285;
t1918 = t1460 * t1892 + t1568 * t1895 + t2265;
t1412 = -t1918 - t2286;
t1933 = t1388 * t1894 + t1412 * t1897 + t2301;
t1435 = t1469 * t1893 - t1627 * t1896;
t1391 = -pkin(8) * t1435 + (-pkin(9) * t1896 + t2084) * t1468;
t1407 = -pkin(2) * t1435 - t2000;
t1410 = t1436 * t1897 + t1468 * t1894;
t1932 = pkin(7) * t1410 + t1391 * t1894 + t1407 * t1897;
t1497 = -pkin(4) * t1745 + t1522;
t1498 = t1523 - t2196;
t1418 = -t1497 * t1892 + t1498 * t1895 + t2165;
t1525 = -t1997 + t2168;
t1393 = t1418 * t1896 - t1525 * t1893 + t2223;
t1912 = t1497 * t1895 + t1498 * t1892 + t2173;
t1408 = -t1912 + t2224;
t1931 = t1393 * t1894 + t1408 * t1897 - t2246;
t1503 = t1903 + t2075;
t1451 = -pkin(4) * t2053 + t1503 * t1895 - t2244;
t1911 = pkin(4) * t2117 - t1990 - t2195;
t1453 = t1858 - t1911 - t2247;
t1403 = t1451 * t1896 - t1453 * t1893 - t2285;
t1916 = pkin(4) * t2051 + t1503 * t1892 + t2265;
t1425 = -t1916 - t2286;
t1930 = t1403 * t1894 + t1425 * t1897 + t2301;
t1452 = -qJ(5) * t2058 - t1504 * t1892 - t2198;
t1904 = -t1523 + t2182;
t1461 = -t1904 - t2200;
t1406 = t1452 * t1896 - t1461 * t1893 - t2258;
t1915 = -qJ(5) * t2060 + t1504 * t1895 + t2229;
t1426 = -t1915 - t2259;
t1929 = t1406 * t1894 + t1426 * t1897 + t2275;
t1433 = -t1468 + t2165;
t1413 = t1433 * t1896 - t1607 * t2084 + t2223;
t1921 = t1469 + t2173;
t1419 = -t1921 + t2224;
t1928 = t1413 * t1894 + t1419 * t1897 - t2246;
t1508 = t1551 - t2200;
t1553 = t2064 - t2198;
t1580 = -t1720 * t1896 + t2186;
t1427 = -pkin(8) * t1580 - t1508 * t1893 + t1553 * t1896;
t1470 = -pkin(2) * t1580 - t1941;
t1529 = t1583 * t1897 + t2185;
t1927 = pkin(7) * t1529 + t1427 * t1894 + t1470 * t1897;
t1521 = t1552 + t2247;
t1555 = t2063 + t2244;
t1584 = t1731 * t1896 + t2239;
t1428 = -pkin(8) * t1584 - t1521 * t1893 + t1555 * t1896;
t1471 = -pkin(2) * t1584 - t1940;
t1531 = t1587 * t1897 - t2233;
t1926 = pkin(7) * t1531 + t1428 * t1894 + t1471 * t1897;
t1793 = t1865 * t1893 + t1840;
t1623 = -pkin(2) * t1793 + t1671;
t1663 = -pkin(8) * t1793 + t2048;
t1742 = t1797 * t1897 - t1848 * t1894;
t1925 = pkin(7) * t1742 + t1623 * t1897 + t1663 * t1894;
t1795 = t1863 * t1896 - t2030;
t1624 = -pkin(2) * t1795 + t1672;
t1664 = -pkin(8) * t1795 + t2047;
t1743 = t1799 * t1897 + t1845 * t1894;
t1924 = pkin(7) * t1743 + t1624 * t1897 + t1664 * t1894;
t1536 = t1571 * t1897 + t1740 * t1894;
t1917 = pkin(7) * t1536 - (-pkin(2) * t1897 - pkin(8) * t1894) * t1570;
t1901 = -t2032 + (-t2112 - t2031) * pkin(5) + t1907;
t1875 = t1889 * qJDD(2);
t1822 = t1850 * t1889;
t1820 = t1850 * t1887;
t1819 = t1953 * t1887;
t1806 = qJDD(3) * t1894 + t1839 * t1897;
t1794 = t1862 * t1896 + t2028;
t1792 = t1864 * t1893 + t2029;
t1791 = t1996 * t1893;
t1790 = t1995 * t1896;
t1784 = t1952 * t1889;
t1783 = t1952 * t1887;
t1775 = t1845 * t1896 + t1848 * t1893;
t1772 = t1954 * t1889;
t1771 = t1954 * t1887;
t1767 = -t1822 * t1886 - t1888 * t1953;
t1766 = t1822 * t1888 - t1886 * t1953;
t1764 = t1805 * t1897 - t2002;
t1763 = t1804 * t1897 + t2002;
t1762 = t1798 * t1897 + t1894 * t2011;
t1761 = t1796 * t1897 + t1894 * t2010;
t1733 = t1776 * t1897 + t1853 * t1894;
t1702 = -t1944 + (t1819 * t1887 + t1821 * t1889) * pkin(7);
t1701 = -t1945 + (-t1820 * t1887 - t1822 * t1889) * pkin(7);
t1696 = t1738 * t1893 + t1818;
t1680 = -t1887 * t1791 + t1889 * t1938;
t1679 = t1887 * t1790 + t1889 * t1939;
t1678 = t1889 * t1791 + t1887 * t1938;
t1677 = -t1889 * t1790 + t1887 * t1939;
t1676 = -t1887 * t1794 + t1889 * t1946;
t1675 = -t1887 * t1792 + t1889 * t1947;
t1674 = t1889 * t1794 + t1887 * t1946;
t1673 = t1889 * t1792 + t1887 * t1947;
t1661 = -t1887 * t1795 + t1889 * t1958;
t1660 = -t1887 * t1793 + t1889 * t1959;
t1659 = t1889 * t1795 + t1887 * t1958;
t1658 = t1889 * t1793 + t1887 * t1959;
t1648 = -t1887 * t1775 + t1889 * t1960;
t1647 = t1889 * t1775 + t1887 * t1960;
t1646 = pkin(2) * t1848 + pkin(8) * t1797 - t2047;
t1645 = -pkin(2) * t1845 + pkin(8) * t1799 + t2048;
t1642 = t1651 * t1889;
t1622 = -pkin(1) * t1820 + t1887 * t1753 + t1889 * t1944 - t1953 * t2082;
t1621 = pkin(1) * t1819 + t1887 * t1754 - t1850 * t2082 - t1889 * t1945;
t1620 = pkin(1) * t1822 - t1889 * t1753 + (-pkin(7) * t1953 + t1944) * t1887;
t1619 = -pkin(1) * t1821 - t1889 * t1754 + (-pkin(7) * t1850 - t1945) * t1887;
t1618 = t1887 * t1833 + (t2005 - t1650) * t1889;
t1617 = -t1650 * t1887 - t1889 * t1991;
t1603 = t1699 * t1897 + t2125;
t1593 = -t1722 * t1896 + t2217;
t1572 = t1611 * t1893 + t1774;
t1554 = pkin(2) * t1852 + pkin(8) * t1849 + t1571;
t1548 = -t1887 * t1696 + t1889 * t1962;
t1545 = t1889 * t1696 + t1887 * t1962;
t1543 = -pkin(2) * t1740 + pkin(8) * t1571;
t1540 = t1599 * t1897 - t2216;
t1535 = pkin(1) * t1618 + pkin(7) * t1641;
t1534 = -pkin(1) * t1617 + t1651 * t2082;
t1526 = t1897 * t1570 + (-t1771 * t1887 - t1772 * t1889) * pkin(7);
t1524 = (-t1617 * t1887 - t1618 * t1889) * pkin(7);
t1505 = t1575 * t1897 + t1605 * t1894;
t1495 = -t1894 * t1624 + t1897 * t1664 + (-t1659 * t1887 - t1661 * t1889) * pkin(7);
t1494 = -t1894 * t1623 + t1897 * t1663 + (-t1658 * t1887 - t1660 * t1889) * pkin(7);
t1491 = -t1887 * t1593 + t1889 * t1970;
t1485 = t1889 * t1593 + t1887 * t1970;
t1478 = -t1887 * t1584 + t1889 * t1976;
t1475 = t1889 * t1584 + t1887 * t1976;
t1474 = t1570 * t1887 + t1889 * t1983;
t1473 = -t1570 * t1889 + t1887 * t1983;
t1467 = -t1887 * t1580 + t1889 * t1977;
t1464 = t1889 * t1580 + t1887 * t1977;
t1459 = -pkin(1) * t1659 - t1887 * t1645 + t1889 * t1924;
t1458 = -pkin(1) * t1658 - t1887 * t1646 + t1889 * t1925;
t1457 = pkin(1) * t1661 + t1889 * t1645 + t1887 * t1924;
t1456 = pkin(1) * t1660 + t1889 * t1646 + t1887 * t1925;
t1455 = -pkin(1) * t1771 - t1887 * t1554 + t1889 * t1992;
t1454 = pkin(1) * t1772 + t1889 * t1554 + t1887 * t1992;
t1448 = -t1887 * t1572 + t1889 * t1982;
t1445 = t1889 * t1572 + t1887 * t1982;
t1422 = pkin(8) * t1587 + t1521 * t1896 + t1555 * t1893 + t2248;
t1421 = pkin(8) * t1583 + t1508 * t1896 + t1553 * t1893 - t2202;
t1409 = -t2222 + t1893 * t1433 - (-pkin(2) - t2083) * t1607;
t1402 = t1452 * t1893 + t1461 * t1896 + t2255;
t1398 = -(pkin(2) * t1894 - pkin(8) * t1897) * t1570 + (-t1473 * t1887 - t1474 * t1889) * pkin(7);
t1397 = t1451 * t1893 + t1453 * t1896 + t2281;
t1395 = -pkin(1) * t1473 - t1887 * t1543 + t1889 * t1917;
t1394 = pkin(1) * t1474 + t1889 * t1543 + t1887 * t1917;
t1392 = t1418 * t1893 + t1525 * t1896 - t2282;
t1387 = -t1887 * t1435 + t1889 * t1987;
t1386 = t1889 * t1435 + t1887 * t1987;
t1384 = t1424 * t1893 + t1430 * t1896 + t2281;
t1383 = t1423 * t1893 + t1429 * t1896 + t2255;
t1381 = pkin(8) * t1436 + (-pkin(2) + t1999) * t1468;
t1380 = t1396 * t1893 + t1499 * t1896 + t2282;
t1379 = t1897 * t1428 - t1894 * t1471 + (-t1475 * t1887 - t1478 * t1889) * pkin(7);
t1378 = t1897 * t1427 - t1894 * t1470 + (-t1464 * t1887 - t1467 * t1889) * pkin(7);
t1374 = -t1887 * t1414 + t1889 * t1988;
t1373 = t1889 * t1414 + t1887 * t1988;
t1372 = -pkin(1) * t1475 - t1887 * t1422 + t1889 * t1926;
t1371 = pkin(1) * t1478 + t1889 * t1422 + t1887 * t1926;
t1370 = -pkin(1) * t1464 - t1887 * t1421 + t1889 * t1927;
t1369 = pkin(1) * t1467 + t1889 * t1421 + t1887 * t1927;
t1368 = t1897 * t1406 - t1894 * t1426 + t2276;
t1367 = t1897 * t1403 - t1894 * t1425 + t2302;
t1365 = t1897 * t1413 - t1894 * t1419 + t2250;
t1363 = -t1887 * t1399 + t1889 * t1989;
t1362 = t1889 * t1399 + t1887 * t1989;
t1361 = t1897 * t1388 - t1894 * t1412 + t2302;
t1360 = t1897 * t1385 - t1894 * t1411 + t2276;
t1359 = t1897 * t1393 - t1894 * t1408 + t2250;
t1358 = -t1887 * t1409 + t1889 * t1928 + t2260;
t1357 = t1889 * t1409 + t1887 * t1928 - t2261;
t1356 = -t1887 * t1402 + t1889 * t1929 - t2287;
t1355 = t1889 * t1402 + t1887 * t1929 + t2288;
t1354 = -pkin(2) * t1431 + pkin(8) * t1415 + t1401 * t1896 + t1405 * t1893;
t1353 = -t1887 * t1397 + t1889 * t1930 - t2305;
t1352 = t1889 * t1397 + t1887 * t1930 + t2306;
t1351 = t1897 * t1382 - t1894 * t1389 - t2250;
t1349 = -t1887 * t1392 + t1889 * t1931 + t2260;
t1348 = t1889 * t1392 + t1887 * t1931 - t2261;
t1347 = -t1887 * t1384 + t1889 * t1933 - t2305;
t1346 = t1889 * t1384 + t1887 * t1933 + t2306;
t1345 = -t1887 * t1383 + t1889 * t1934 - t2287;
t1344 = t1889 * t1383 + t1887 * t1934 + t2288;
t1343 = t1897 * t1391 - t1894 * t1407 + (-t1386 * t1887 - t1387 * t1889) * pkin(7);
t1342 = -t1887 * t1380 + t1889 * t1935 - t2260;
t1341 = t1889 * t1380 + t1887 * t1935 + t2261;
t1339 = -pkin(2) * t1416 + pkin(8) * t1400 + t1366 * t1893 + t1376 * t1896;
t1338 = -pkin(1) * t1386 - t1887 * t1381 + t1889 * t1932;
t1337 = pkin(1) * t1387 + t1889 * t1381 + t1887 * t1932;
t1336 = t1897 * t1364 - t1894 * t1375 + (-t1373 * t1887 - t1374 * t1889) * pkin(7);
t1335 = -pkin(1) * t1373 - t1887 * t1354 + t1889 * t1936;
t1334 = pkin(1) * t1374 + t1889 * t1354 + t1887 * t1936;
t1333 = t1897 * t1340 - t1894 * t1350 + (-t1362 * t1887 - t1363 * t1889) * pkin(7);
t1332 = -pkin(1) * t1362 - t1887 * t1339 + t1889 * t1937;
t1331 = pkin(1) * t1363 + t1889 * t1339 + t1887 * t1937;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t2127, -t2126, -t2097, -qJ(1) * t2097, 0, 0, -t1956, 0, t1767, t1886 * t2012, -qJ(1) * t1766 - t1622 * t1886 + t1701 * t1888, qJ(1) * t1957 - t1886 * t1621 + t1888 * t1702, -t1642 * t1886 + t1650 * t1888, t1888 * t1524 - t1886 * t1534 - qJ(1) * (t1618 * t1888 + t1651 * t1886), -t1680 * t1886 + t1764 * t1888, -t1648 * t1886 + t1733 * t1888, -t1676 * t1886 + t1762 * t1888, -t1679 * t1886 + t1763 * t1888, -t1675 * t1886 + t1761 * t1888, -t1784 * t1886 + t1806 * t1888, t1888 * t1494 - t1886 * t1458 - qJ(1) * (t1660 * t1888 + t1742 * t1886), t1888 * t1495 - t1886 * t1459 - qJ(1) * (t1661 * t1888 + t1743 * t1886), t1888 * t1526 - t1886 * t1455 - qJ(1) * (t1772 * t1888 + t1782 * t1886), t1888 * t1398 - t1886 * t1395 - qJ(1) * (t1474 * t1888 + t1536 * t1886), t2128, -t2311, t2309, t2210, t2317, t2228, t1888 * t1378 - t1886 * t1370 - qJ(1) * (t1467 * t1888 + t1529 * t1886), t1888 * t1379 - t1886 * t1372 - qJ(1) * (t1478 * t1888 + t1531 * t1886), -t1886 * t1358 + t1888 * t1365 + t2251, t1888 * t1343 - t1886 * t1338 - qJ(1) * (t1387 * t1888 + t1410 * t1886), t2128, t2309, t2311, t2228, -t2317, t2210, -t1886 * t1356 + t1888 * t1368 - t2277, -t1886 * t1349 + t1888 * t1359 + t2251, -t1886 * t1353 + t1888 * t1367 - t2303, t1888 * t1336 - t1886 * t1335 - qJ(1) * (t1374 * t1888 + t1390 * t1886), t2128, -t1448 * t1886 + t1505 * t1888, -t2309, t2210, -t1491 * t1886 + t1540 * t1888, -t1548 * t1886 + t1603 * t1888, -t1886 * t1345 + t1888 * t1360 - t2277, -t1886 * t1347 + t1888 * t1361 - t2303, -t1886 * t1342 + t1888 * t1351 - t2251, t1888 * t1333 - t1886 * t1332 - qJ(1) * (t1363 * t1888 + t1377 * t1886); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t2126, -t2127, t2098, qJ(1) * t2098, 0, 0, t1957, 0, t1766, -t1888 * t2012, qJ(1) * t1767 + t1622 * t1888 + t1701 * t1886, qJ(1) * t1956 + t1888 * t1621 + t1886 * t1702, t1642 * t1888 + t1650 * t1886, t1886 * t1524 + t1888 * t1534 + qJ(1) * (-t1618 * t1886 + t1651 * t1888), t1680 * t1888 + t1764 * t1886, t1648 * t1888 + t1733 * t1886, t1676 * t1888 + t1762 * t1886, t1679 * t1888 + t1763 * t1886, t1675 * t1888 + t1761 * t1886, t1784 * t1888 + t1806 * t1886, t1886 * t1494 + t1888 * t1458 + qJ(1) * (-t1660 * t1886 + t1742 * t1888), t1886 * t1495 + t1888 * t1459 + qJ(1) * (-t1661 * t1886 + t1743 * t1888), t1886 * t1526 + t1888 * t1455 + qJ(1) * (-t1772 * t1886 + t1782 * t1888), t1886 * t1398 + t1888 * t1395 + qJ(1) * (-t1474 * t1886 + t1536 * t1888), t2129, t2310, -t2308, t2207, -t2316, t2226, t1886 * t1378 + t1888 * t1370 + qJ(1) * (-t1467 * t1886 + t1529 * t1888), t1886 * t1379 + t1888 * t1372 + qJ(1) * (-t1478 * t1886 + t1531 * t1888), t1888 * t1358 + t1886 * t1365 + t2252, t1886 * t1343 + t1888 * t1338 + qJ(1) * (-t1387 * t1886 + t1410 * t1888), t2129, -t2308, -t2310, t2226, t2316, t2207, t1888 * t1356 + t1886 * t1368 + t2278, t1888 * t1349 + t1886 * t1359 + t2252, t1888 * t1353 + t1886 * t1367 + t2304, t1886 * t1336 + t1888 * t1335 + qJ(1) * (-t1374 * t1886 + t1390 * t1888), t2129, t1448 * t1888 + t1505 * t1886, t2308, t2207, t1491 * t1888 + t1540 * t1886, t1548 * t1888 + t1603 * t1886, t1888 * t1345 + t1886 * t1360 + t2278, t1888 * t1347 + t1886 * t1361 + t2304, t1888 * t1342 + t1886 * t1351 - t2252, t1886 * t1333 + t1888 * t1332 + qJ(1) * (-t1363 * t1886 + t1377 * t1888); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t2006, t1854, 0, 0, 0, 0, t1819, 0, t1820, t1875, t1620, t1619, t1641, t1535, t1678, t1647, t1674, t1677, t1673, t1783, t1456, t1457, t1454, t1394, t2212, t1447, -t1482, t2209, -t1487, t2208, t1369, t1371, t1357, t1337, t2212, -t1482, -t1447, t2208, t1487, t2209, t1355, t1348, t1352, t1334, t2212, t1445, t1482, t2209, t1485, t1545, t1344, t1346, t1341, t1331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2079, -t2006, 0, 0, 0, t1850, 0, -t1953, 0, t1701, t1702, t1650, t1524, t1764, t1733, t1762, t1763, t1761, t1806, t1494, t1495, t1526, t1398, t2131, t1507, -t1537, t2179, -t1542, t2178, t1378, t1379, t1365, t1343, t2131, -t1537, -t1507, t2178, t1542, t2179, t1368, t1359, t1367, t1336, t2131, t1505, t1537, t2179, t1540, t1603, t1360, t1361, t1351, t1333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2079, 0, -t1854, 0, 0, 0, t1821, 0, t1822, -t2012, t1622, t1621, t1642, t1534, t1680, t1648, t1676, t1679, t1675, t1784, t1458, t1459, t1455, t1395, t2211, t1450, -t1488, t2206, -t1493, t2205, t1370, t1372, t1358, t1338, t2211, -t1488, -t1450, t2205, t1493, t2206, t1356, t1349, t1353, t1335, t2211, t1448, t1488, t2206, t1491, t1548, t1345, t1347, t1342, t1332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2006, t1854, 0, 0, 0, 0, t1819, 0, t1820, t1875, t1620, t1619, t1641, t1535, t1678, t1647, t1674, t1677, t1673, t1783, t1456, t1457, t1454, t1394, t2212, t1447, -t1482, t2209, -t1487, t2208, t1369, t1371, t1357, t1337, t2212, -t1482, -t1447, t2208, t1487, t2209, t1355, t1348, t1352, t1334, t2212, t1445, t1482, t2209, t1485, t1545, t1344, t1346, t1341, t1331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1898, 0, 0, -t1991, t1753, 0, t1805, t1776, t1798, t1804, t1796, t1839, t1663, t1664, t1570, pkin(8) * t1570, t2103, t1577, -t1596, t2104, -t1601, t2094, t1427, t1428, t1413, t1391, t2103, -t1596, -t1577, t2094, t1601, t2104, t1406, t1393, t1403, t1364, t2103, t1575, t1596, t2104, t1599, t1699, t1385, t1388, t1382, t1340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1898, 0, qJDD(2), 0, t1991, 0, t1754, 0, t1868, -t1853, -t2011, -t1868, -t2010, -qJDD(3), t1623, t1624, 0, pkin(2) * t1570, -t1905, -t1609, t1683, t1948, t1688, -t2121, t1470, t1471, t1419, t1407, -t1905, t1683, t1609, -t2121, -t1688, t1948, t1426, t1408, t1425, t1375, -t1905, -t1605, -t1683, t1948, t1688, -t2121, t1411, t1412, t1389, t1350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1753, -t1754, 0, 0, t1791, t1775, t1794, -t1790, t1792, 0, t1646, t1645, t1554, t1543, t2101, t1574, -t1590, t2102, t1594, t2099, t1421, t1422, t1409, t1381, t2101, -t1590, -t1574, t2099, -t1594, t2102, t1402, t1392, t1397, t1354, t2101, t1572, t1590, t2102, t1593, t1696, t1383, t1384, t1380, t1339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1846, t1848, t1856, -t1874, t1864, t1874, 0, t1740, t1671, 0, t2015, t1615, -t1689, t1949, t2176, t1994, t1553, t1555, t1433, -pkin(9) * t1468, t2015, -t1689, -t1615, t1994, -t2176, t1949, t1452, t1418, t1451, t1405, t2015, t1611, t1689, t1949, t2176, t1738, t1423, t1424, t1396, t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1873, t1845, t1862, t1847, t1855, -t1873, -t1740, 0, t1672, 0, -t2031, -t2116, -t2115, t2031, t1721, t1838, t1508, t1521, t2168, -pkin(3) * t1468, -t2031, -t2115, t2116, t1838, -t1721, t2031, t1461, t1525, t1453, t1401, -t2031, t2116, t2115, t2031, -t1722, t1838, t1429, t1430, t1499, t1376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1868, t1853, t2011, t1868, t2010, qJDD(3), -t1671, -t1672, 0, 0, t1905, t1609, -t1683, -t1948, -t1688, t2121, t1941, t1940, t1921, t2000, t1905, -t1683, -t1609, t2121, t1688, -t1948, t1915, t1912, t1916, t2106, t1905, t1605, t1683, -t1948, -t1688, t2121, t1919, t1918, t1913, t1914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1922, -t1720, -t2112, -t2027, t2110, t2027, 0, t1627, t1551, 0, t1922, -t2112, t1720, t2027, -t2110, -t2027, -t2077, t1498, t1503, -qJ(5) * t1530, t1922, t1719, t2112, -t2027, t2110, t2027, t1625, t1460, t1437, t1420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1815, t2114, -t2118, -t1765, -t2113, t1815, -t1627, 0, t1552, 0, -t1815, -t2118, -t2114, t1815, t2113, -t1765, t1504, t1497, pkin(4) * t2114, -pkin(4) * t1530, -t1815, -t2114, t2118, -t1765, -t2113, t1815, t1438, t1568, t1434, t1404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2031, t2116, t2115, -t2031, -t1721, -t1838, -t1551, -t1552, 0, 0, t2031, t2115, -t2116, -t1838, t1721, -t2031, t1904, t1997, t1857 + t1911, t1998, t2031, -t2116, -t2115, -t2031, t1722, -t1838, t1901 + t2182, t2100 + t2120, t2105, t2107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1922, -t2112, t1720, t2027, -t2110, -t2027, 0, t1523, -t1530, 0, t1922, t1719, t2112, -t2027, t2110, t2027, -t2071, t1899, t1902, -t2073; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2031, t2115, -t2116, -t1838, t1721, -t2031, -t1523, 0, t1522, 0, t2031, -t2116, -t2115, -t2031, t1722, -t1838, t1901, pkin(5) * t2117 + t1481, pkin(5) * t2115, -pkin(5) * t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1815, t2118, t2114, -t1815, -t2113, t1765, t1530, -t1522, 0, 0, t1815, t2114, -t2118, t1765, t2113, -t1815, t1900 + t2092, -pkin(5) * t2114 - t2070, -pkin(5) * t1745 - t1908 + t2120, pkin(5) * t1496 + t2072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1922, t1719, t2112, -t2027, t2110, t2027, 0, -t1496, -t1472, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1815, t2114, -t2118, t1765, t2113, -t1815, t1496, 0, t1481, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2031, t2116, t2115, t2031, -t1722, t1838, t1472, -t1481, 0, 0;];
m_new_reg  = t1;
