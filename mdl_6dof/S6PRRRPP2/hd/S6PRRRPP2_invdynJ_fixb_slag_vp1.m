% Calculate vector of inverse dynamics joint torques for
% S6PRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRPP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRPP2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:48:47
% EndTime: 2019-03-08 22:52:39
% DurationCPUTime: 224.35s
% Computational Cost: add. (79830->1809), mult. (219103->2464), div. (0->0), fcn. (255546->10), ass. (0->654)
t1221 = Icges(5,4) - Icges(7,4) - Icges(6,5);
t1222 = Icges(5,1) + Icges(6,1) + Icges(7,1);
t1220 = Icges(6,4) + Icges(5,5) - Icges(7,5);
t1219 = -Icges(5,2) - Icges(7,2) - Icges(6,3);
t1218 = Icges(6,2) + Icges(5,3) + Icges(7,3);
t1217 = Icges(5,6) - Icges(6,6) + Icges(7,6);
t1087 = cos(qJ(4));
t783 = sin(pkin(6));
t786 = sin(qJ(3));
t1049 = t783 * t786;
t1088 = cos(qJ(3));
t782 = sin(pkin(10));
t784 = cos(pkin(10));
t788 = cos(qJ(2));
t1081 = cos(pkin(6));
t787 = sin(qJ(2));
t926 = t787 * t1081;
t745 = t782 * t788 + t784 * t926;
t662 = -t784 * t1049 + t745 * t1088;
t785 = sin(qJ(4));
t925 = t788 * t1081;
t842 = -t782 * t787 + t784 * t925;
t520 = t1087 * t662 - t785 * t842;
t1243 = t1221 * t520;
t894 = t782 * t926;
t747 = t784 * t788 - t894;
t664 = t1049 * t782 + t1088 * t747;
t846 = -t782 * t925 - t784 * t787;
t522 = t1087 * t664 - t785 * t846;
t1242 = t1221 * t522;
t1047 = t783 * t788;
t944 = t783 * t1088;
t749 = t1081 * t786 + t787 * t944;
t668 = -t785 * t1047 + t749 * t1087;
t1241 = t1221 * t668;
t870 = -t1087 * t842 - t662 * t785;
t1240 = t1221 * t870;
t869 = -t1087 * t846 - t664 * t785;
t1239 = t1221 * t869;
t943 = t783 * t1087;
t853 = -t749 * t785 - t788 * t943;
t1238 = t1221 * t853;
t719 = t842 * qJD(2);
t852 = -t745 * t786 - t784 * t944;
t513 = qJD(3) * t852 + t1088 * t719;
t720 = t745 * qJD(2);
t240 = qJD(4) * t520 - t1087 * t720 + t513 * t785;
t241 = qJD(4) * t870 + t1087 * t513 + t720 * t785;
t512 = qJD(3) * t662 + t719 * t786;
t1237 = t1217 * t240 - t1218 * t512 - t1220 * t241;
t721 = t846 * qJD(2);
t854 = -t747 * t786 + t782 * t944;
t515 = qJD(3) * t854 + t1088 * t721;
t996 = qJD(2) * t784;
t722 = -qJD(2) * t894 + t788 * t996;
t242 = qJD(4) * t522 - t1087 * t722 + t515 * t785;
t243 = qJD(4) * t869 + t1087 * t515 + t722 * t785;
t514 = qJD(3) * t664 + t721 * t786;
t1236 = t1217 * t242 - t1218 * t514 - t1220 * t243;
t1235 = t1217 * t512 + t1219 * t240 + t1221 * t241;
t1234 = t1217 * t514 + t1219 * t242 + t1221 * t243;
t1233 = t1220 * t512 - t1221 * t240 + t1222 * t241;
t1232 = t1220 * t514 - t1221 * t242 + t1222 * t243;
t1048 = t783 * t787;
t748 = t1048 * t786 - t1081 * t1088;
t897 = t788 * t944;
t666 = qJD(2) * t897 - qJD(3) * t748;
t898 = t787 * t943;
t407 = -qJD(2) * t898 + qJD(4) * t668 + t666 * t785;
t995 = qJD(2) * t787;
t940 = t783 * t995;
t408 = qJD(4) * t853 + t1087 * t666 + t785 * t940;
t968 = t786 * t1047;
t665 = qJD(2) * t968 + qJD(3) * t749;
t1231 = t1217 * t407 - t1218 * t665 - t1220 * t408;
t1230 = t1217 * t665 + t1219 * t407 + t1221 * t408;
t1229 = t1220 * t665 - t1221 * t407 + t1222 * t408;
t1228 = -t1217 * t870 + t1218 * t852 - t1220 * t520;
t1227 = -t1217 * t869 + t1218 * t854 - t1220 * t522;
t1177 = t1217 * t852 + t1219 * t870 - t1243;
t1176 = t1217 * t854 + t1219 * t869 - t1242;
t1175 = -t1220 * t852 + t1222 * t520 + t1240;
t1174 = -t1220 * t854 + t1222 * t522 + t1239;
t1226 = -t1217 * t853 - t1218 * t748 - t1220 * t668;
t1162 = -t1217 * t748 + t1219 * t853 - t1241;
t1161 = t1220 * t748 + t1222 * t668 + t1238;
t1212 = rSges(7,1) + pkin(5);
t1225 = t1175 * t241 + t1177 * t240 - t1228 * t512 + t1233 * t520 + t1235 * t870 + t1237 * t852;
t1199 = t1174 * t241 + t1176 * t240 - t1227 * t512 + t1232 * t520 + t1234 * t870 + t1236 * t852;
t1224 = t1175 * t243 + t1177 * t242 - t1228 * t514 + t1233 * t522 + t1235 * t869 + t1237 * t854;
t1197 = t1174 * t243 + t1176 * t242 - t1227 * t514 + t1232 * t522 + t1234 * t869 + t1236 * t854;
t1223 = t1175 * t408 + t1177 * t407 - t1228 * t665 + t1233 * t668 + t1235 * t853 - t1237 * t748;
t1195 = t1174 * t408 + t1176 * t407 - t1227 * t665 + t1232 * t668 + t1234 * t853 - t1236 * t748;
t1191 = t1161 * t241 + t1162 * t240 - t1226 * t512 + t1229 * t520 + t1230 * t870 + t1231 * t852;
t1190 = t1161 * t243 + t1162 * t242 - t1226 * t514 + t1229 * t522 + t1230 * t869 + t1231 * t854;
t1189 = t1161 * t408 + t1162 * t407 - t1226 * t665 + t1229 * t668 + t1230 * t853 - t1231 * t748;
t1188 = t1175 * t520 - t1177 * t870 + t1228 * t852;
t1187 = t1174 * t520 - t1176 * t870 + t1227 * t852;
t1186 = t1175 * t522 - t1177 * t869 + t1228 * t854;
t1185 = t1174 * t522 - t1176 * t869 + t1227 * t854;
t1184 = t1175 * t668 - t1177 * t853 - t1228 * t748;
t1183 = t1174 * t668 - t1176 * t853 - t1227 * t748;
t1182 = t1161 * t520 - t1162 * t870 + t1226 * t852;
t1181 = t1161 * t522 - t1162 * t869 + t1226 * t854;
t1180 = t1161 * t668 - t1162 * t853 - t1226 * t748;
t1216 = t1087 * t1220 - t1217 * t785;
t1215 = t1087 * t1221 + t1219 * t785;
t1214 = -t1087 * t1222 + t1221 * t785;
t997 = qJD(2) * t783;
t774 = t782 * t997;
t673 = -qJD(3) * t846 + t774;
t476 = -qJD(4) * t854 + t673;
t941 = t783 * t996;
t674 = -qJD(3) * t842 - t941;
t477 = -qJD(4) * t852 + t674;
t781 = qJD(2) * t1081;
t756 = -qJD(3) * t1047 + t781;
t639 = qJD(4) * t748 + t756;
t1192 = t1180 * t639 + t1183 * t476 + t1184 * t477;
t1211 = -t1192 / 0.2e1;
t1193 = t1181 * t639 + t1185 * t476 + t1186 * t477;
t1210 = -t1193 / 0.2e1;
t1194 = t1182 * t639 + t1187 * t476 + t1188 * t477;
t1209 = -t1194 / 0.2e1;
t1208 = rSges(7,3) + qJ(6);
t1057 = t852 * t785;
t951 = t852 * t1087;
t1207 = rSges(7,2) * t1057 - t662 * rSges(7,3) + t1212 * t951;
t1056 = t854 * t785;
t950 = t854 * t1087;
t1206 = rSges(7,2) * t1056 - t664 * rSges(7,3) + t1212 * t950;
t1052 = t748 * t785;
t946 = t748 * t1087;
t1205 = -rSges(7,2) * t1052 - t749 * rSges(7,3) - t1212 * t946;
t139 = rSges(6,1) * t243 + rSges(6,2) * t514 + rSges(6,3) * t242;
t496 = qJD(5) * t869;
t142 = pkin(4) * t243 + qJ(5) * t242 - t496;
t1041 = -t139 - t142;
t276 = pkin(3) * t515 + pkin(9) * t514;
t1204 = -t276 + t1041;
t1030 = -rSges(7,2) * t870 + t1208 * t852 + t1212 * t520;
t302 = pkin(4) * t520 - qJ(5) * t870;
t955 = -t302 - t1030;
t1018 = -rSges(7,2) * t869 + t1208 * t854 + t1212 * t522;
t307 = pkin(4) * t522 - qJ(5) * t869;
t958 = -t307 - t1018;
t228 = rSges(6,1) * t522 - rSges(6,2) * t854 - rSges(6,3) * t869;
t1028 = -t228 - t307;
t440 = pkin(3) * t664 - pkin(9) * t854;
t1136 = -t440 + t1028;
t1011 = -rSges(7,2) * t853 - t1208 * t748 + t1212 * t668;
t455 = pkin(4) * t668 - qJ(5) * t853;
t952 = -t455 - t1011;
t396 = rSges(6,1) * t668 + rSges(6,2) * t748 - rSges(6,3) * t853;
t1017 = -t396 - t455;
t618 = pkin(3) * t749 + pkin(9) * t748;
t954 = -t618 + t1017;
t975 = qJDD(2) * t783;
t773 = t782 * t975;
t529 = qJD(3) * t722 - qJDD(3) * t846 + t773;
t238 = qJD(4) * t514 - qJDD(4) * t854 + t529;
t934 = t784 * t975;
t530 = qJD(3) * t720 - qJDD(3) * t842 - t934;
t239 = qJD(4) * t512 - qJDD(4) * t852 + t530;
t780 = qJDD(2) * t1081;
t992 = qJD(3) * t787;
t939 = t783 * t992;
t676 = qJD(2) * t939 - qJDD(3) * t1047 + t780;
t409 = qJD(4) * t665 + qJDD(4) * t748 + t676;
t1203 = t1182 * t409 + t1187 * t238 + t1188 * t239 + t1191 * t639 + t1199 * t476 + t1225 * t477;
t1202 = t1181 * t409 + t1185 * t238 + t1186 * t239 + t1190 * t639 + t1197 * t476 + t1224 * t477;
t1201 = t1180 * t409 + t1183 * t238 + t1184 * t239 + t1189 * t639 + t1195 * t476 + t1223 * t477;
t1054 = t842 * t786;
t942 = t785 * t1088;
t583 = -t1087 * t745 + t842 * t942;
t896 = t1088 * t1087;
t584 = t745 * t785 + t842 * t896;
t1173 = -t1054 * t1218 + t1217 * t583 - t1220 * t584;
t1053 = t846 * t786;
t585 = -t1087 * t747 + t846 * t942;
t586 = t747 * t785 + t846 * t896;
t1172 = -t1053 * t1218 + t1217 * t585 - t1220 * t586;
t1171 = t1054 * t1217 + t1219 * t583 + t1221 * t584;
t1170 = t1053 * t1217 + t1219 * t585 + t1221 * t586;
t1169 = t1054 * t1220 - t1221 * t583 + t1222 * t584;
t1168 = t1053 * t1220 - t1221 * t585 + t1222 * t586;
t1167 = t1215 * t852 + t1217 * t662;
t1166 = t1215 * t854 + t1217 * t664;
t1165 = -t1214 * t852 + t1220 * t662;
t1164 = -t1214 * t854 + t1220 * t664;
t1160 = -t1215 * t748 + t1217 * t749;
t1159 = t1214 * t748 + t1220 * t749;
t687 = t785 * t897 - t898;
t688 = (t785 * t787 + t788 * t896) * t783;
t1158 = t1217 * t687 - t1218 * t968 - t1220 * t688;
t1157 = t1217 * t968 + t1219 * t687 + t1221 * t688;
t1156 = t1220 * t968 - t1221 * t687 + t1222 * t688;
t1155 = (-t1087 * t1161 - t1162 * t785 - t1216 * t748 + t1218 * t749) * t639 + (-t1087 * t1175 - t1177 * t785 + t1216 * t852 + t1218 * t662) * t477 + (-t1087 * t1174 - t1176 * t785 + t1216 * t854 + t1218 * t664) * t476;
t1154 = (t1219 * t668 + t1161 + t1238) * t639 + (t1219 * t520 + t1175 + t1240) * t477 + (t1219 * t522 + t1174 + t1239) * t476;
t1153 = (t1222 * t853 + t1162 - t1241) * t639 + (t1222 * t870 + t1177 - t1243) * t477 + (t1222 * t869 + t1176 - t1242) * t476;
t1152 = (-t1217 * t668 + t1220 * t853) * t639 + (-t1217 * t520 + t1220 * t870) * t477 + (-t1217 * t522 + t1220 * t869) * t476;
t375 = Icges(4,5) * t662 + Icges(4,6) * t852 - Icges(4,3) * t842;
t1077 = Icges(4,4) * t662;
t377 = Icges(4,2) * t852 - Icges(4,6) * t842 + t1077;
t640 = Icges(4,4) * t852;
t379 = Icges(4,1) * t662 - Icges(4,5) * t842 + t640;
t143 = -t375 * t842 + t377 * t852 + t379 * t662;
t376 = Icges(4,5) * t664 + Icges(4,6) * t854 - Icges(4,3) * t846;
t1076 = Icges(4,4) * t664;
t378 = Icges(4,2) * t854 - Icges(4,6) * t846 + t1076;
t641 = Icges(4,4) * t854;
t380 = Icges(4,1) * t664 - Icges(4,5) * t846 + t641;
t144 = -t376 * t842 + t378 * t852 + t380 * t662;
t571 = Icges(4,5) * t749 - Icges(4,6) * t748 - Icges(4,3) * t1047;
t1075 = Icges(4,4) * t749;
t572 = -Icges(4,2) * t748 - Icges(4,6) * t1047 + t1075;
t739 = Icges(4,4) * t748;
t573 = Icges(4,1) * t749 - Icges(4,5) * t1047 - t739;
t169 = -t571 * t842 + t572 * t852 + t573 * t662;
t244 = Icges(4,5) * t513 - Icges(4,6) * t512 + Icges(4,3) * t720;
t246 = Icges(4,4) * t513 - Icges(4,2) * t512 + Icges(4,6) * t720;
t248 = Icges(4,1) * t513 - Icges(4,4) * t512 + Icges(4,5) * t720;
t64 = -t244 * t842 + t246 * t852 + t248 * t662 + t375 * t720 - t377 * t512 + t379 * t513;
t245 = Icges(4,5) * t515 - Icges(4,6) * t514 + Icges(4,3) * t722;
t247 = Icges(4,4) * t515 - Icges(4,2) * t514 + Icges(4,6) * t722;
t249 = Icges(4,1) * t515 - Icges(4,4) * t514 + Icges(4,5) * t722;
t65 = -t245 * t842 + t247 * t852 + t249 * t662 + t376 * t720 - t378 * t512 + t380 * t513;
t410 = Icges(4,5) * t666 - Icges(4,6) * t665 + Icges(4,3) * t940;
t411 = Icges(4,4) * t666 - Icges(4,2) * t665 + Icges(4,6) * t940;
t412 = Icges(4,1) * t666 - Icges(4,4) * t665 + Icges(4,5) * t940;
t89 = -t410 * t842 + t411 * t852 + t412 * t662 - t512 * t572 + t513 * t573 + t571 * t720;
t1151 = t530 * t143 + t144 * t529 + t169 * t676 + t674 * t64 + t65 * t673 + t756 * t89 + t1203;
t145 = -t375 * t846 + t377 * t854 + t379 * t664;
t146 = -t376 * t846 + t378 * t854 + t380 * t664;
t170 = -t571 * t846 + t572 * t854 + t573 * t664;
t66 = -t244 * t846 + t246 * t854 + t248 * t664 + t375 * t722 - t377 * t514 + t379 * t515;
t67 = -t245 * t846 + t247 * t854 + t249 * t664 + t376 * t722 - t378 * t514 + t380 * t515;
t90 = -t410 * t846 + t411 * t854 + t412 * t664 - t514 * t572 + t515 * t573 + t571 * t722;
t1150 = t145 * t530 + t529 * t146 + t170 * t676 + t66 * t674 + t673 * t67 + t756 * t90 + t1202;
t155 = -t1047 * t375 - t377 * t748 + t379 * t749;
t156 = -t1047 * t376 - t378 * t748 + t380 * t749;
t195 = -t1047 * t571 - t572 * t748 + t573 * t749;
t72 = -t246 * t748 + t248 * t749 - t377 * t665 + t379 * t666 + (-t244 * t788 + t375 * t995) * t783;
t73 = -t247 * t748 + t249 * t749 - t378 * t665 + t380 * t666 + (-t245 * t788 + t376 * t995) * t783;
t99 = -t411 * t748 + t412 * t749 - t572 * t665 + t573 * t666 + (-t410 * t788 + t571 * t995) * t783;
t1149 = t155 * t530 + t156 * t529 + t195 * t676 + t673 * t73 + t674 * t72 + t756 * t99 + t1201;
t438 = pkin(3) * t662 - pkin(9) * t852;
t1050 = t783 * t784;
t754 = (pkin(2) * t787 - pkin(8) * t788) * t783;
t610 = pkin(2) * t745 - pkin(8) * t842;
t923 = t1081 * t610;
t843 = -t1050 * t754 - t923;
t824 = t843 * qJD(2);
t807 = -t756 * t438 + t674 * t618 + t824;
t804 = t477 * t455 - t496 + t807;
t982 = t854 * qJD(6);
t57 = t1011 * t477 + t639 * t955 + t804 + t982;
t1148 = t1011 * t57;
t651 = qJD(5) * t853;
t612 = pkin(2) * t747 - pkin(8) * t846;
t935 = t610 * t774 + t612 * t941 + qJD(1);
t855 = t673 * t438 - t440 * t674 + t935;
t832 = t476 * t302 - t651 + t855;
t984 = qJD(6) * t748;
t49 = t1030 * t476 + t477 * t958 + t832 - t984;
t1147 = t1030 * t49;
t494 = qJD(5) * t870;
t874 = t612 * t781 - t754 * t774;
t823 = t756 * t440 - t618 * t673 + t874;
t820 = t639 * t307 - t494 + t823;
t986 = qJD(6) * t852;
t56 = t1018 * t639 + t476 * t952 + t820 + t986;
t1146 = t56 * t1018;
t1044 = rSges(7,2) * t240 - t1208 * t512 + t1212 * t241 + t986;
t1042 = rSges(7,2) * t242 - t1208 * t514 + t1212 * t243 + t982;
t298 = pkin(4) * t870 + qJ(5) * t520;
t929 = t520 * rSges(7,2) + t1212 * t870;
t1145 = -t298 - t929;
t303 = pkin(4) * t869 + qJ(5) * t522;
t928 = t522 * rSges(7,2) + t1212 * t869;
t1144 = -t303 - t928;
t1143 = -qJ(6) * t662 + t1207;
t1142 = -qJ(6) * t664 + t1206;
t451 = pkin(4) * t853 + qJ(5) * t668;
t927 = t668 * rSges(7,2) + t1212 * t853;
t1141 = -t451 - t927;
t1140 = -qJ(6) * t749 + t1205;
t1139 = t583 * rSges(7,2) + t1212 * t584;
t1138 = t585 * rSges(7,2) + t1212 * t586;
t1137 = t687 * rSges(7,2) + t1212 * t688;
t250 = rSges(4,1) * t513 - rSges(4,2) * t512 + rSges(4,3) * t720;
t251 = rSges(4,1) * t515 - rSges(4,2) * t514 + rSges(4,3) * t722;
t382 = rSges(4,1) * t662 + rSges(4,2) * t852 - rSges(4,3) * t842;
t383 = rSges(4,1) * t664 + rSges(4,2) * t854 - rSges(4,3) * t846;
t1135 = t250 * t673 - t251 * t674 + t382 * t529 - t383 * t530;
t866 = Icges(4,5) * t1088 - Icges(4,6) * t786;
t1134 = t673 * (-Icges(4,3) * t747 + t1088 * t380 - t378 * t786 - t846 * t866) + t674 * (-Icges(4,3) * t745 + t1088 * t379 - t377 * t786 - t842 * t866) + t756 * (t1088 * t573 - t572 * t786 - (Icges(4,3) * t787 + t788 * t866) * t783);
t141 = pkin(4) * t241 + qJ(5) * t240 - t494;
t102 = t476 * t141;
t161 = t238 * t302;
t406 = qJD(5) * t407;
t650 = qJDD(5) * t853;
t1055 = t674 * t276;
t1058 = t530 * t440;
t275 = pkin(3) * t513 + pkin(9) * t512;
t232 = t673 * t275;
t279 = t529 * t438;
t589 = pkin(2) * t719 + pkin(8) * t720;
t526 = t589 * t774;
t590 = pkin(2) * t721 + pkin(8) * t722;
t527 = t590 * t941;
t545 = t610 * t773;
t546 = t612 * t934;
t878 = qJDD(1) + t526 + t527 + t545 + t546;
t809 = -t1055 + t232 + t279 + t878 - t1058;
t803 = t102 + t161 + t406 - t650 + t809;
t962 = -t142 - t1042;
t974 = qJDD(6) * t748;
t985 = qJD(6) * t665;
t10 = t1030 * t238 + t1044 * t476 + t239 * t958 + t477 * t962 + t803 - t974 - t985;
t1133 = 0.2e1 * t10;
t1036 = rSges(7,2) * t407 - t1208 * t665 + t1212 * t408 - t984;
t182 = pkin(4) * t408 + qJ(5) * t407 - t651;
t450 = pkin(3) * t666 + pkin(9) * t665;
t736 = (pkin(2) * t788 + pkin(8) * t787) * t997;
t924 = t1081 * t589;
t798 = (-t1050 * t736 - t924) * qJD(2) + t843 * qJDD(2);
t795 = -t756 * t275 - t676 * t438 + t674 * t450 + t530 * t618 + t798;
t790 = qJD(5) * t242 - qJDD(5) * t869 + t477 * t182 + t239 * t455 + t795;
t963 = -t141 - t1044;
t11 = -qJD(6) * t514 + qJDD(6) * t854 + t1011 * t239 + t1036 * t477 + t409 * t955 + t639 * t963 + t790;
t1132 = 0.2e1 * t11;
t1051 = t782 * t783;
t821 = t590 * t781 + t612 * t780 + (-qJD(2) * t736 - qJDD(2) * t754) * t1051;
t800 = t756 * t276 + t676 * t440 - t673 * t450 - t529 * t618 + t821;
t797 = qJD(5) * t240 - qJDD(5) * t870 + t639 * t142 + t409 * t307 + t800;
t961 = -t182 - t1036;
t12 = -qJD(6) * t512 + qJDD(6) * t852 + t1018 * t409 + t1042 * t639 + t238 * t952 + t476 * t961 + t797;
t1131 = 0.2e1 * t12;
t136 = rSges(6,1) * t241 + rSges(6,2) * t512 + rSges(6,3) * t240;
t225 = rSges(6,1) * t520 - rSges(6,2) * t852 - rSges(6,3) * t870;
t13 = t1028 * t239 + t1041 * t477 + t136 * t476 + t225 * t238 + t803;
t1130 = 0.2e1 * t13;
t1029 = -t225 - t302;
t1043 = -t136 - t141;
t184 = rSges(6,1) * t408 + rSges(6,2) * t665 + rSges(6,3) * t407;
t18 = t1029 * t409 + t1043 * t639 + t477 * t184 + t239 * t396 + t790;
t1129 = 0.2e1 * t18;
t1128 = 0.2e1 * t49;
t1127 = 0.2e1 * t56;
t1126 = 0.2e1 * t57;
t61 = t1028 * t477 + t225 * t476 + t832;
t1125 = 0.2e1 * t61;
t68 = t1017 * t476 + t228 * t639 + t820;
t1124 = 0.2e1 * t68;
t69 = t1029 * t639 + t477 * t396 + t804;
t1123 = 0.2e1 * t69;
t1122 = m(5) / 0.2e1;
t1121 = m(6) / 0.2e1;
t1120 = m(7) / 0.2e1;
t1119 = t238 / 0.2e1;
t1118 = t239 / 0.2e1;
t1117 = t409 / 0.2e1;
t1116 = -t476 / 0.2e1;
t1115 = t476 / 0.2e1;
t1114 = -t477 / 0.2e1;
t1113 = t477 / 0.2e1;
t1110 = t529 / 0.2e1;
t1109 = t530 / 0.2e1;
t1106 = -t639 / 0.2e1;
t1105 = t639 / 0.2e1;
t1101 = -t673 / 0.2e1;
t1100 = t673 / 0.2e1;
t1099 = -t674 / 0.2e1;
t1098 = t674 / 0.2e1;
t1097 = t676 / 0.2e1;
t1090 = -t756 / 0.2e1;
t1089 = t756 / 0.2e1;
t1083 = pkin(9) - qJ(6);
t1080 = Icges(3,4) * t745;
t1079 = Icges(3,4) * t747;
t1078 = Icges(3,4) * t787;
t1063 = t302 * t749;
t1062 = t307 * t662;
t1059 = t455 * t664;
t1046 = -t141 * t854 + t514 * t302;
t1045 = t748 * t142 + t665 * t307;
t140 = rSges(5,1) * t243 - rSges(5,2) * t242 + rSges(5,3) * t514;
t1040 = -t140 - t276;
t1039 = t476 * t870 - t477 * t869 + t407;
t1038 = -t182 * t852 + t512 * t455;
t1037 = -t182 - t184;
t185 = rSges(5,1) * t408 - rSges(5,2) * t407 + rSges(5,3) * t665;
t1035 = -t185 - t450;
t1034 = -t476 * t853 + t639 * t869 + t240;
t1033 = t477 * t853 - t639 * t870 + t242;
t1032 = qJD(5) * t668 + t476 * t298;
t1031 = qJD(5) * t520 + t639 * t303;
t229 = rSges(5,1) * t522 + rSges(5,2) * t869 - rSges(5,3) * t854;
t1027 = -t229 - t440;
t1026 = -t275 * t846 + t722 * t438;
t394 = t846 * t438;
t1025 = -t302 * t846 - t394;
t1024 = qJD(5) * t522 + t477 * t451;
t414 = t440 * t940;
t1023 = t307 * t940 + t414;
t536 = t1081 * t590;
t1022 = t1081 * t276 + t536;
t300 = rSges(6,1) * t870 + t520 * rSges(6,3);
t1021 = -t298 - t300;
t305 = rSges(6,1) * t869 + t522 * rSges(6,3);
t1020 = -t303 - t305;
t1019 = -t1054 * t1208 + t1139;
t397 = rSges(5,1) * t668 + rSges(5,2) * t853 + rSges(5,3) * t748;
t1016 = -t397 - t618;
t1015 = t438 * t1047 - t618 * t842;
t599 = t1081 * t612;
t1014 = t1081 * t440 + t599;
t1013 = -t1053 * t1208 + t1138;
t453 = rSges(6,1) * t853 + t668 * rSges(6,3);
t1012 = -t451 - t453;
t1010 = t590 * t1050 + t589 * t1051;
t541 = Icges(3,2) * t842 - Icges(3,6) * t1050 + t1080;
t605 = Icges(3,1) * t842 - t1080;
t1009 = -t541 + t605;
t542 = Icges(3,2) * t846 + Icges(3,6) * t1051 + t1079;
t606 = Icges(3,1) * t846 - t1079;
t1008 = -t542 + t606;
t732 = Icges(3,4) * t842;
t543 = Icges(3,1) * t745 - Icges(3,5) * t1050 + t732;
t603 = -Icges(3,2) * t745 + t732;
t1007 = -t543 - t603;
t733 = Icges(3,4) * t846;
t544 = Icges(3,1) * t747 + Icges(3,5) * t1051 + t733;
t604 = -Icges(3,2) * t747 + t733;
t1006 = -t544 - t604;
t609 = pkin(2) * t842 + pkin(8) * t745;
t611 = pkin(2) * t846 + pkin(8) * t747;
t1005 = t609 * t774 + t611 * t941;
t1002 = t612 * t1050 + t610 * t1051;
t420 = pkin(4) * t951 + qJ(5) * t1057;
t421 = pkin(4) * t950 + qJ(5) * t1056;
t1001 = -t1208 * t968 + t1137;
t692 = Icges(3,6) * t1081 + (Icges(3,2) * t788 + t1078) * t783;
t752 = (Icges(3,1) * t788 - t1078) * t783;
t999 = -t692 + t752;
t775 = Icges(3,4) * t1047;
t693 = Icges(3,1) * t1048 + Icges(3,5) * t1081 + t775;
t751 = -Icges(3,2) * t1048 + t775;
t998 = -t693 - t751;
t949 = t842 * t1088;
t591 = pkin(3) * t949 + pkin(9) * t1054;
t947 = t846 * t1088;
t592 = pkin(3) * t947 + pkin(9) * t1053;
t596 = -pkin(4) * t946 - qJ(5) * t1052;
t706 = pkin(3) * t897 + pkin(9) * t968;
t755 = pkin(2) * t1047 + pkin(8) * t1048;
t994 = qJD(3) * t745;
t993 = qJD(3) * t747;
t991 = qJD(4) * t662;
t990 = qJD(4) * t664;
t989 = qJD(4) * t749;
t988 = qJD(4) * t786;
t987 = qJD(5) * t785;
t983 = qJD(6) * t786;
t980 = 2 * m(3);
t979 = 2 * m(4);
t978 = 0.2e1 * m(5);
t977 = 0.2e1 * m(6);
t976 = 0.2e1 * m(7);
t973 = 0.2e1 * t846;
t972 = 0.2e1 * t782;
t971 = 0.2e1 * t784;
t970 = 0.2e1 * t788;
t969 = 0.2e1 * qJD(4);
t964 = t1081 * t142 + t1022;
t960 = -t450 + t1037;
t959 = -t736 + t1035;
t957 = t275 * t1047 - t450 * t842 + t720 * t618;
t956 = t1081 * t307 + t1014;
t953 = -t754 + t1016;
t327 = t584 * rSges(6,1) + rSges(6,2) * t1054 + t583 * rSges(6,3);
t328 = t584 * rSges(5,1) - t583 * rSges(5,2) + rSges(5,3) * t1054;
t330 = t586 * rSges(6,1) + rSges(6,2) * t1053 + t585 * rSges(6,3);
t331 = t586 * rSges(5,1) - t585 * rSges(5,2) + rSges(5,3) * t1053;
t358 = rSges(6,1) * t951 + t662 * rSges(6,2) + rSges(6,3) * t1057;
t361 = rSges(6,1) * t950 + t664 * rSges(6,2) + rSges(6,3) * t1056;
t488 = t688 * rSges(6,1) + rSges(6,2) * t968 + t687 * rSges(6,3);
t489 = t688 * rSges(5,1) - t687 * rSges(5,2) + rSges(5,3) * t968;
t474 = -rSges(6,1) * t946 + t749 * rSges(6,2) - rSges(6,3) * t1052;
t933 = t997 / 0.2e1;
t648 = t852 * pkin(3);
t437 = pkin(9) * t662 + t648;
t649 = t854 * pkin(3);
t439 = pkin(9) * t664 + t649;
t743 = t748 * pkin(3);
t617 = pkin(9) * t749 - t743;
t922 = -t979 / 0.2e1;
t921 = t979 / 0.2e1;
t920 = -t978 / 0.2e1;
t919 = t978 / 0.2e1;
t918 = -t977 / 0.2e1;
t917 = -t976 / 0.2e1;
t916 = t976 / 0.2e1;
t413 = rSges(4,1) * t666 - rSges(4,2) * t665 + rSges(4,3) * t940;
t915 = t783 * (-t413 - t736);
t574 = rSges(4,1) * t749 - rSges(4,2) * t748 - rSges(4,3) * t1047;
t914 = t783 * (-t574 - t754);
t368 = t584 * pkin(4) + qJ(5) * t583;
t369 = t586 * pkin(4) + qJ(5) * t585;
t535 = t688 * pkin(4) + qJ(5) * t687;
t913 = t673 * t437 - t439 * t674;
t912 = t756 * t439 - t617 * t673;
t911 = -t437 * t756 + t674 * t617;
t910 = 0.2e1 * t995;
t909 = -t141 * t846 + t722 * t302 + t1026;
t908 = -t276 + t962;
t907 = -t450 + t961;
t906 = -t736 + t960;
t905 = -t440 + t958;
t904 = t276 * t1050 + t275 * t1051 + t1010;
t903 = t302 * t1047 - t455 * t842 + t1015;
t902 = -t618 + t952;
t901 = -t754 + t954;
t900 = t440 * t1050 + t438 * t1051 + t1002;
t899 = t755 + t706;
t893 = t13 * t225 + t61 * t136;
t892 = -t736 + t907;
t891 = -t754 + t902;
t789 = 0.2e1 * qJDD(1);
t890 = 0.2e1 * t526 + 0.2e1 * t527 + 0.2e1 * t545 + 0.2e1 * t546 + t789;
t577 = Icges(3,5) * t719 - Icges(3,6) * t720;
t578 = Icges(3,5) * t721 - Icges(3,6) * t722;
t579 = Icges(3,4) * t719 - Icges(3,2) * t720;
t580 = Icges(3,4) * t721 - Icges(3,2) * t722;
t581 = Icges(3,1) * t719 - Icges(3,4) * t720;
t582 = Icges(3,1) * t721 - Icges(3,4) * t722;
t888 = -(t1051 * t577 - t541 * t722 + t543 * t721 + t579 * t846 + t581 * t747) * t784 + (t1051 * t578 - t542 * t722 + t544 * t721 + t580 * t846 + t582 * t747) * t782;
t882 = -t542 * t787 + t544 * t788;
t883 = -t541 * t787 + t543 * t788;
t887 = -(t1081 * t577 + (qJD(2) * t883 + t579 * t788 + t581 * t787) * t783) * t784 + (t1081 * t578 + (qJD(2) * t882 + t580 * t788 + t582 * t787) * t783) * t782;
t539 = Icges(3,5) * t745 + Icges(3,6) * t842 - Icges(3,3) * t1050;
t540 = Icges(3,5) * t747 + Icges(3,6) * t846 + Icges(3,3) * t1051;
t886 = -(-t1050 * t539 + t541 * t842 + t543 * t745) * t784 + (-t1050 * t540 + t542 * t842 + t544 * t745) * t782;
t885 = -(t1051 * t539 + t541 * t846 + t543 * t747) * t784 + (t1051 * t540 + t542 * t846 + t544 * t747) * t782;
t884 = -(t1081 * t539 + (t541 * t788 + t543 * t787) * t783) * t784 + (t1081 * t540 + (t542 * t788 + t544 * t787) * t783) * t782;
t549 = rSges(3,1) * t745 + rSges(3,2) * t842 - rSges(3,3) * t1050;
t550 = rSges(3,1) * t747 + rSges(3,2) * t846 + rSges(3,3) * t1051;
t881 = t549 * t782 + t550 * t784;
t587 = rSges(3,1) * t719 - rSges(3,2) * t720;
t588 = rSges(3,1) * t721 - rSges(3,2) * t722;
t880 = t587 * t782 + t588 * t784;
t879 = -t692 * t787 + t693 * t788;
t877 = t609 + t591;
t876 = t611 + t592;
t462 = rSges(4,1) * t949 - rSges(4,2) * t1054 + t745 * rSges(4,3);
t463 = rSges(4,1) * t947 - rSges(4,2) * t1053 + t747 * rSges(4,3);
t359 = rSges(5,1) * t951 - rSges(5,2) * t1057 + t662 * rSges(5,3);
t362 = rSges(5,1) * t950 - rSges(5,2) * t1056 + t664 * rSges(5,3);
t475 = -rSges(5,1) * t946 + rSges(5,2) * t1052 + t749 * rSges(5,3);
t875 = t611 * t781 - t755 * t774;
t873 = t142 * t1050 + t141 * t1051 + t904;
t872 = t141 * t1047 - t182 * t842 + t720 * t455 + t957;
t871 = t307 * t1050 + t302 * t1051 + t900;
t868 = Icges(4,1) * t1088 - Icges(4,4) * t786;
t867 = Icges(4,4) * t1088 - Icges(4,2) * t786;
t753 = (rSges(3,1) * t788 - rSges(3,2) * t787) * t783;
t672 = rSges(4,1) * t897 - rSges(4,2) * t968 + rSges(4,3) * t1048;
t856 = t783 * t881;
t750 = (Icges(3,5) * t788 - Icges(3,6) * t787) * t783;
t712 = t1081 * rSges(3,3) + (rSges(3,1) * t787 + rSges(3,2) * t788) * t783;
t848 = -t1051 * t712 + t1081 * t550;
t731 = qJD(2) * t753;
t847 = -t1051 * t731 + t1081 * t588;
t845 = -t1050 * t712 - t1081 * t549;
t844 = -t1050 * t731 - t1081 * t587;
t841 = t535 + t899;
t837 = (Icges(4,5) * t852 - Icges(4,6) * t662) * t674 + (Icges(4,5) * t854 - Icges(4,6) * t664) * t673 + (-Icges(4,5) * t748 - Icges(4,6) * t749) * t756;
t836 = t10 * t1030 + t1044 * t49;
t835 = t1011 * t11 + t1036 * t57;
t834 = -t1081 * t275 - t924;
t833 = -t1081 * t438 - t923;
t831 = t368 + t877;
t830 = t369 + t876;
t829 = 0.2e1 * t232 - 0.2e1 * t1055 + 0.2e1 * t279 - 0.2e1 * t1058 + t890;
t828 = t302 * t990 + t476 * t420 - t421 * t477 - t748 * t987 + t913;
t827 = t307 * t989 + t639 * t421 - t476 * t596 + t852 * t987 + t912;
t826 = -t420 * t639 + t455 * t991 + t477 * t596 + t854 * t987 + t911;
t825 = (-t1050 * t755 - t1081 * t609) * qJD(2);
t822 = t438 * t993 - t440 * t994 + t673 * t591 - t592 * t674 + t1005;
t819 = -t1081 * t141 + t834;
t818 = -t1081 * t302 + t833;
t811 = (Icges(4,1) * t854 - t1076 - t378) * t673 + (Icges(4,1) * t852 - t1077 - t377) * t674 + (-Icges(4,1) * t748 - t1075 - t572) * t756;
t810 = (Icges(4,2) * t664 - t380 - t641) * t673 + (Icges(4,2) * t662 - t379 - t640) * t674 + (Icges(4,2) * t749 - t573 + t739) * t756;
t598 = t846 * t988 + t993;
t808 = qJD(5) * t687 + t598 * t302 + t476 * t368 + t822;
t806 = t440 * t939 + t756 * t592 - t618 * t993 - t673 * t706 + t875;
t805 = -0.2e1 * t477 * t142 - 0.2e1 * t239 * t307 + 0.2e1 * t102 + 0.2e1 * t161 + 0.2e1 * t406 - 0.2e1 * t650 + t829;
t802 = (qJD(2) * t880 + qJDD(2) * t881) * t783;
t723 = (t788 * t988 + t992) * t783;
t801 = qJD(5) * t583 + t723 * t307 + t639 * t369 + t806;
t799 = -t438 * t939 - t756 * t591 + t618 * t994 + t674 * t706 + t825;
t597 = t842 * t988 + t994;
t796 = qJD(5) * t585 + t597 * t455 + t477 * t535 + t799;
t726 = qJD(2) * t752;
t725 = (Icges(3,4) * t788 - Icges(3,2) * t787) * t997;
t724 = qJD(2) * t750;
t691 = Icges(3,3) * t1081 + (Icges(3,5) * t787 + Icges(3,6) * t788) * t783;
t671 = (Icges(4,5) * t787 + t788 * t868) * t783;
t670 = (Icges(4,6) * t787 + t788 * t867) * t783;
t616 = -rSges(4,1) * t748 - rSges(4,2) * t749;
t608 = rSges(3,1) * t846 - rSges(3,2) * t747;
t607 = rSges(3,1) * t842 - rSges(3,2) * t745;
t602 = Icges(3,5) * t846 - Icges(3,6) * t747;
t601 = Icges(3,5) * t842 - Icges(3,6) * t745;
t461 = Icges(4,5) * t747 + t846 * t868;
t460 = Icges(4,5) * t745 + t842 * t868;
t459 = Icges(4,6) * t747 + t846 * t867;
t458 = Icges(4,6) * t745 + t842 * t867;
t454 = rSges(5,1) * t853 - rSges(5,2) * t668;
t436 = rSges(4,1) * t854 - rSges(4,2) * t664;
t435 = rSges(4,1) * t852 - rSges(4,2) * t662;
t402 = t845 * qJD(2);
t401 = t848 * qJD(2);
t364 = t852 * t455;
t335 = t1051 * t691 + t692 * t846 + t693 * t747;
t334 = -t1050 * t691 + t692 * t842 + t693 * t745;
t332 = qJD(2) * t856 + qJD(1);
t306 = rSges(5,1) * t869 - rSges(5,2) * t522;
t301 = rSges(5,1) * t870 - rSges(5,2) * t520;
t260 = t748 * t307;
t234 = -g(1) * t869 - g(2) * t870 - g(3) * t853;
t233 = t854 * t302;
t226 = rSges(5,1) * t520 + rSges(5,2) * t870 - rSges(5,3) * t852;
t188 = t1051 * t724 - t692 * t722 + t693 * t721 + t725 * t846 + t726 * t747;
t187 = -t1050 * t724 - t692 * t720 + t693 * t719 + t725 * t842 + t726 * t745;
t164 = -t756 * t382 + t674 * t574 + t824;
t163 = t383 * t756 - t574 * t673 + t874;
t150 = t382 * t673 - t383 * t674 + t935;
t137 = rSges(5,1) * t241 - rSges(5,2) * t240 + rSges(5,3) * t512;
t92 = -t639 * t226 + t477 * t397 + t807;
t91 = t229 * t639 - t397 * t476 + t823;
t76 = -t756 * t250 - t676 * t382 + t674 * t413 + t530 * t574 + t798;
t75 = t251 * t756 + t383 * t676 - t413 * t673 - t529 * t574 + t821;
t74 = t226 * t476 - t229 * t477 + t855;
t71 = t878 + t1135;
t70 = t155 * t674 + t156 * t673 + t756 * t195;
t63 = t145 * t674 + t146 * t673 + t170 * t756;
t62 = t143 * t674 + t144 * t673 + t169 * t756;
t45 = -t639 * t137 + t477 * t185 - t409 * t226 + t239 * t397 + t795;
t44 = t140 * t639 - t185 * t476 + t229 * t409 - t238 * t397 + t800;
t19 = t137 * t476 - t140 * t477 + t226 * t238 - t229 * t239 + t809;
t17 = t1017 * t238 + t1037 * t476 + t139 * t639 + t228 * t409 + t797;
t1 = [t805 * t1121 + (t805 - 0.2e1 * t974 - 0.2e1 * t985) * t1120 + m(2) * qJDD(1) + t829 * t1122 + (-m(5) * t140 - m(6) * t139 - t1042 * t916) * t477 + (m(5) * t137 + m(6) * t136 + t1044 * t916) * t476 + (-m(5) * t229 - m(6) * t228 - t1018 * t916) * t239 + (m(5) * t226 + m(6) * t225 + t1030 * t916) * t238 + (-m(2) - m(5) - m(6) - m(7)) * g(3) + (t789 / 0.2e1 - g(3) + t802) * m(3) + (t890 / 0.2e1 - g(3) + t1135) * m(4); (t57 * (-t846 * t983 + t1011 * t597 + t1001 * t477 + t955 * t723 + (-t368 - t1019) * t639 + t796) + t56 * (-t842 * t983 + t1018 * t723 + t1013 * t639 + t952 * t598 + (-t535 - t1001) * t476 + t801) + t49 * (-qJD(6) * t968 + t1030 * t598 + t1019 * t476 + t958 * t597 + (-t369 - t1013) * t477 + t808)) * t917 + (-t782 * ((-t1006 * t846 + t1008 * t747 + t1051 * t602) * t1051 - (-t1007 * t846 + t1009 * t747 + t1051 * t601) * t1050 + (t1051 * t750 + t747 * t999 - t846 * t998) * t1081) / 0.2e1 + t784 * ((-t1006 * t842 + t1008 * t745 - t1050 * t602) * t1051 - (-t1007 * t842 + t1009 * t745 - t1050 * t601) * t1050 + (-t1050 * t750 + t745 * t999 - t842 * t998) * t1081) / 0.2e1) * t783 * qJD(2) ^ 2 + ((t1195 * t782 - t1223 * t784) * t783 + t1189 * t1081) * t1105 + ((t1197 * t782 - t1224 * t784) * t783 + t1190 * t1081) * t1115 + ((t1199 * t782 - t1225 * t784) * t783 + t1191 * t1081) * t1113 - m(7) * (g(1) * (t830 + t1138) + g(2) * (t831 + t1139) + g(3) * (t841 + t1137) + (-g(1) * t846 - g(2) * t842 - g(3) * t1047) * t786 * t1208) + ((t747 * t376 + t459 * t854 + t664 * t461) * t673 + (t747 * t375 + t458 * t854 + t664 * t460) * t674 + (t747 * t571 + t664 * t671 + t670 * t854) * t756 + (t1048 * t170 + t145 * t745 + t146 * t747) * qJD(3) + t1134 * t846) * t1101 + ((t745 * t376 + t459 * t852 + t662 * t461) * t673 + (t745 * t375 + t458 * t852 + t662 * t460) * t674 + (t745 * t571 + t662 * t671 + t670 * t852) * t756 + (t1048 * t169 + t143 * t745 + t144 * t747) * qJD(3) + t1134 * t842) * t1099 + t781 * t1081 * (t1081 * t724 + (qJD(2) * t879 + t725 * t788 + t726 * t787) * t783) - (t332 * (t607 * t782 + t608 * t784) * t997 + (t402 * (-t1050 * t753 - t1081 * t607) + t401 * (-t1051 * t753 + t1081 * t608)) * qJD(2)) * t980 / 0.2e1 + (t92 * (-t723 * t226 - t639 * t328 + t597 * t397 + t477 * t489 + t799) + t91 * (t229 * t723 + t331 * t639 - t397 * t598 - t476 * t489 + t806) + t74 * (t226 * t598 - t229 * t597 + t328 * t476 - t331 * t477 + t822)) * t920 + (t1180 * t723 + (t1156 * t668 + t1157 * t853 - t1158 * t748 + t1161 * t688 + t1162 * t687 - t1226 * t968) * t639 + t1183 * t598 + t1184 * t597 + (t1169 * t668 + t1171 * t853 - t1173 * t748 + t1175 * t688 + t1177 * t687 - t1228 * t968) * t477 + (t1168 * t668 + t1170 * t853 - t1172 * t748 + t1174 * t688 + t1176 * t687 - t1227 * t968) * t476) * t1106 + (t1181 * t723 + (-t1053 * t1226 + t1156 * t522 + t1157 * t869 + t1158 * t854 + t1161 * t586 + t1162 * t585) * t639 + t1185 * t598 + t1186 * t597 + (-t1053 * t1228 + t1169 * t522 + t1171 * t869 + t1173 * t854 + t1175 * t586 + t1177 * t585) * t477 + (-t1053 * t1227 + t1168 * t522 + t1170 * t869 + t1172 * t854 + t1174 * t586 + t1176 * t585) * t476) * t1116 + (t1182 * t723 + (-t1054 * t1226 + t1156 * t520 + t1157 * t870 + t1158 * t852 + t1161 * t584 + t1162 * t583) * t639 + t1187 * t598 + t1188 * t597 + (-t1054 * t1228 + t1169 * t520 + t1171 * t870 + t1173 * t852 + t1175 * t584 + t1177 * t583) * t477 + (-t1054 * t1227 + t1168 * t520 + t1170 * t870 + t1172 * t852 + t1174 * t584 + t1176 * t583) * t476) * t1114 - (t886 * t975 + t187 * t781 + t334 * t780 + (t1081 * t187 + 0.2e1 * t783 * (-(-t1050 * t577 - t541 * t720 + t543 * t719 + t579 * t842 + t581 * t745) * t784 + (-t1050 * t578 - t542 * t720 + t544 * t719 + t580 * t842 + t582 * t745) * t782)) * qJD(2) + t1151) * t1050 / 0.2e1 - t63 * t993 / 0.2e1 - t62 * t994 / 0.2e1 + (t164 * (-t756 * t462 + t674 * t672 + (-t1048 * t382 + t574 * t745) * qJD(3) + t825) + t163 * (t463 * t756 - t672 * t673 + (t1048 * t383 - t574 * t747) * qJD(3) + t875) + t150 * (t462 * t673 - t463 * t674 + (t382 * t747 - t383 * t745) * qJD(3) + t1005)) * t922 + t782 * (t1081 * t188 + t783 * t888) * t933 + (t188 * t781 + t335 * t780 + (qJD(2) * t888 + qJDD(2) * t885) * t783 + t1150) * t1051 / 0.2e1 + ((-t748 * t459 + t749 * t461) * t673 + (-t748 * t458 + t749 * t460) * t674 + (-t748 * t670 + t749 * t671) * t756 + (t155 * t745 + t156 * t747) * qJD(3) + ((qJD(3) * t195 + t375 * t674 + t376 * t673 + t571 * t756) * t787 + t1134 * t788) * t783) * t1090 - (((t604 * t788 + t606 * t787 + t882) * t782 - (t603 * t788 + t605 * t787 + t883) * t784) * t783 * t997 + ((-t601 * t784 + t602 * t782 + t751 * t788 + t752 * t787 + t879) * t997 + t750 * t781) * t1081) * t781 / 0.2e1 + ((t1183 * t782 - t1184 * t784) * t783 + t1180 * t1081) * t1117 + ((t1185 * t782 - t1186 * t784) * t783 + t1181 * t1081) * t1119 + ((t1187 * t782 - t1188 * t784) * t783 + t1182 * t1081) * t1118 + (t69 * (t597 * t396 + t477 * t488 + t1029 * t723 + (-t327 - t368) * t639 + t796) + t68 * (t228 * t723 + t330 * t639 + t1017 * t598 + (-t488 - t535) * t476 + t801) + t61 * (t225 * t598 + t327 * t476 + t1028 * t597 + (-t330 - t369) * t477 + t808)) * t918 + ((-t1081 * t225 + t818) * t1129 + (-t1081 * t136 + t819) * t1123 + 0.2e1 * t17 * (t1081 * t228 + t956) + (t1081 * t139 + t964) * t1124 + t871 * t1130 + t873 * t1125 + ((t13 * t228 + t61 * t139 + t18 * t901 + t69 * t906) * t971 + (t17 * t901 + t68 * t906 + t893) * t972) * t783) * t1121 + (t169 * t1081 + (-t143 * t784 + t144 * t782) * t783) * t1109 + (t170 * t1081 + (-t145 * t784 + t146 * t782) * t783) * t1110 - t70 * t939 / 0.2e1 + ((qJD(2) * t844 + qJDD(2) * t845) * t845 + t402 * t844 + (qJD(2) * t847 + qJDD(2) * t848) * t848 + t401 * t847 + (qJDD(1) + t802) * t856 + t332 * t880 * t783) * t980 / 0.2e1 + (t99 * t1081 + (-t72 * t784 + t73 * t782) * t783) * t1089 - (t1081 * t334 + t783 * t886) * t934 / 0.2e1 + (t1081 * t335 + t783 * t885) * t773 / 0.2e1 + t597 * t1209 + t598 * t1210 + t723 * t1211 + (t76 * (-t1081 * t382 + t784 * t914 - t923) + t164 * (-t1081 * t250 + t784 * t915 - t924) + t75 * (t1081 * t383 + t782 * t914 + t599) + t163 * (t1081 * t251 + t782 * t915 + t536) + t71 * ((t382 * t782 + t383 * t784) * t783 + t1002) + t150 * ((t250 * t782 + t251 * t784) * t783 + t1010)) * t921 + (t195 * t1081 + (-t155 * t784 + t156 * t782) * t783) * t1097 + (t89 * t1081 + (-t64 * t784 + t65 * t782) * t783) * t1098 + (t90 * t1081 + (-t66 * t784 + t67 * t782) * t783) * t1100 - m(4) * (g(1) * (t463 + t611) + g(2) * (t462 + t609) + g(3) * (t672 + t755)) + (t780 * t884 + t781 * t887) * t783 / 0.2e1 + t780 * t1081 * (t1081 * t691 + (t692 * t788 + t693 * t787) * t783) + (t818 * t1132 + t819 * t1126 + t956 * t1131 + t964 * t1127 + t871 * t1133 + t873 * t1128 + ((t10 * t1018 + t1042 * t49 + t11 * t891 + t57 * t892) * t971 + (t12 * t891 + t56 * t892 + t836) * t972) * t783 + (t1018 * t1131 - t1030 * t1132 + t1042 * t1127 - t1044 * t1126) * t1081) * t1120 + (0.2e1 * t45 * (-t1081 * t226 + t833) + 0.2e1 * t92 * (-t1081 * t137 + t834) + 0.2e1 * t44 * (t1081 * t229 + t1014) + 0.2e1 * t91 * (t1081 * t140 + t1022) + 0.2e1 * t19 * t900 + 0.2e1 * t74 * t904 + ((t74 * t140 + t19 * t229 + t45 * t953 + t92 * t959) * t971 + (t74 * t137 + t19 * t226 + t44 * t953 + t91 * t959) * t972) * t783) * t1122 - m(3) * (g(1) * t608 + g(2) * t607 + g(3) * t753) - m(5) * (g(1) * (t876 + t331) + g(2) * (t877 + t328) + g(3) * (t899 + t489)) - m(6) * (g(1) * (t830 + t330) + g(2) * (t831 + t327) + g(3) * (t841 + t488)) + ((qJD(2) * t887 + qJDD(2) * t884) * t783 + t1149) * t1081 / 0.2e1; (t45 * (t1047 * t226 - t397 * t842 + t1015) + t92 * (-t185 * t842 + t397 * t720 + (t137 * t788 + (-t226 - t438) * t995) * t783 + t957) + t44 * (-t1016 * t846 + t1027 * t1047) + t91 * (t414 - t1035 * t846 + t1016 * t722 + (t1040 * t788 + t229 * t995) * t783) + t19 * (-t1027 * t842 - t226 * t846 - t394) + t74 * (t1027 * t720 - t1040 * t842 - t137 * t846 + t226 * t722 + t1026)) * t919 + ((t1180 * t995 - t1189 * t788) * t783 - t1195 * t846 - t1223 * t842 + t1183 * t722 + t1184 * t720) * t1105 + ((t1181 * t995 - t1190 * t788) * t783 - t1197 * t846 - t1224 * t842 + t1185 * t722 + t1186 * t720) * t1115 + ((t1182 * t995 - t1191 * t788) * t783 - t1199 * t846 - t1225 * t842 + t1187 * t722 + t1188 * t720) * t1113 - m(7) * (g(1) * (t1083 * t664 + t1206 + t421 + t649) + g(2) * (t1083 * t662 + t1207 + t420 + t648) + g(3) * (t1083 * t749 + t1205 + t596 - t743)) + (t662 * t811 - t810 * t852 - t837 * t842) * t1099 + (t903 * t1132 + t872 * t1126 + t1023 * t1127 + t1025 * t1133 + t909 * t1128 - (t12 * t902 + t56 * t907 + t836) * t973 + ((t57 * (-t438 + t955) + t1146) * t910 + (t1030 * t11 + t1044 * t57 + t12 * t905 + t56 * t908) * t970) * t783 + 0.2e1 * (t56 * t902 + t1147) * t722 + 0.2e1 * (t49 * t905 + t1148) * t720 - 0.2e1 * (t10 * t905 + t49 * t908 + t835) * t842) * t1120 + (t164 * (-t435 * t756 + t616 * t674) + t163 * (t436 * t756 - t616 * t673) + t150 * (t435 * t673 - t436 * t674)) * t922 + (t903 * t1129 + t872 * t1123 + t1023 * t1124 + t1025 * t1130 + t909 * t1125 - (t17 * t954 + t68 * t960 + t893) * t973 + ((t69 * (-t438 + t1029) + t68 * t228) * t910 + (t1136 * t17 + t1204 * t68 + t69 * t136 + t18 * t225) * t970) * t783 + (t1124 * t954 + t225 * t1125) * t722 + (t396 * t1123 + t1125 * t1136) * t720 - (t184 * t1123 + t1125 * t1204 + t396 * t1129 + t1136 * t1130) * t842) * t1121 + (-t1155 * t854 + (t1159 * t522 + t1160 * t869 - t1226 * t664) * t639 + (t1165 * t522 + t1167 * t869 - t1228 * t664) * t477 + (t1164 * t522 + t1166 * t869 - t1227 * t664) * t476 + (t1181 * t749 + t1185 * t664 + t1186 * t662) * qJD(4)) * t1116 + (-t1155 * t852 + (t1159 * t520 + t1160 * t870 - t1226 * t662) * t639 + (t1165 * t520 + t1167 * t870 - t1228 * t662) * t477 + (t1164 * t520 + t1166 * t870 - t1227 * t662) * t476 + (t1182 * t749 + t1187 * t664 + t1188 * t662) * qJD(4)) * t1114 + (t1155 * t748 + (t1159 * t668 + t1160 * t853 - t1226 * t749) * t639 + (t1165 * t668 + t1167 * t853 - t1228 * t749) * t477 + (t1164 * t668 + t1166 * t853 - t1227 * t749) * t476 + (t1180 * t749 + t1183 * t664 + t1184 * t662) * qJD(4)) * t1106 - m(5) * (g(1) * (t362 + t439) + g(2) * (t359 + t437) + g(3) * (t475 + t617)) + (t664 * t811 - t810 * t854 - t837 * t846) * t1101 + (-t1047 * t169 - t143 * t842 - t144 * t846) * t1109 + (-t1047 * t170 - t145 * t842 - t146 * t846) * t1110 + (t155 * t720 + t156 * t722 - t72 * t842 - t73 * t846 + (t195 * t995 - t788 * t99) * t783) * t1089 + (t76 * (t1047 * t382 - t574 * t842) + t164 * (-t413 * t842 + t574 * t720 + (t250 * t788 - t382 * t995) * t783) + t75 * (-t1047 * t383 + t574 * t846) + t163 * (t413 * t846 - t574 * t722 + (-t251 * t788 + t383 * t995) * t783) + t71 * (-t382 * t846 + t383 * t842) + t150 * (-t250 * t846 + t251 * t842 + t382 * t722 - t383 * t720)) * t921 + (-t1047 * t195 - t155 * t842 - t156 * t846) * t1097 + (t143 * t720 + t144 * t722 - t64 * t842 - t65 * t846 + (t169 * t995 - t788 * t89) * t783) * t1098 + (t145 * t720 + t146 * t722 - t66 * t842 - t67 * t846 + (t170 * t995 - t788 * t90) * t783) * t1100 + (t92 * (-t359 * t639 + t475 * t477 + (-t226 * t749 + t397 * t662) * qJD(4) + t911) + t91 * (t362 * t639 - t475 * t476 + (t229 * t749 - t397 * t664) * qJD(4) + t912) + t74 * (t359 * t476 - t362 * t477 + (t226 * t664 - t229 * t662) * qJD(4) + t913)) * t920 - t1150 * t846 / 0.2e1 - t1151 * t842 / 0.2e1 + (t70 + t1192) * t787 * t933 + (-t1047 * t1180 - t1183 * t846 - t1184 * t842) * t1117 + (-t1047 * t1181 - t1185 * t846 - t1186 * t842) * t1119 + (-t1047 * t1182 - t1187 * t846 - t1188 * t842) * t1118 - t1149 * t1047 / 0.2e1 - m(6) * ((-t358 * t639 + t474 * t477 + t826) * t1123 + (t361 * t639 - t474 * t476 + t827) * t1124 + (t358 * t476 - t361 * t477 + t828) * t1125 + (t69 * (-t225 * t749 + t396 * t662 - t1063) + t68 * (t228 * t749 - t396 * t664 - t1059) + t61 * (t225 * t664 - t228 * t662 - t1062)) * t969) / 0.2e1 + (t63 + t1193) * t722 / 0.2e1 + (t62 + t1194) * t720 / 0.2e1 - m(4) * (g(1) * t436 + g(2) * t435 + g(3) * t616) + (-t1047 * t837 + t748 * t810 + t749 * t811) * t1090 - m(6) * (g(1) * (t439 + t361 + t421) + g(2) * (t437 + t358 + t420) + g(3) * (t617 + t474 + t596)) + t991 * t1209 + t990 * t1210 + t989 * t1211 - m(7) * ((-qJD(6) * t664 + t1140 * t477 - t1143 * t639 + t826) * t1126 + (-qJD(6) * t662 - t1140 * t476 + t1142 * t639 + t827) * t1127 + (-qJD(6) * t749 - t1142 * t477 + t1143 * t476 + t828) * t1128 + (-t56 * t1059 - t49 * t1062 - t57 * t1063 + (-t1030 * t57 + t1146) * t749 + (-t1011 * t56 + t1147) * t664 + (-t1018 * t49 + t1148) * t662) * t969) / 0.2e1; (t92 * (-t301 * t639 + t454 * t477) + t91 * (t306 * t639 - t454 * t476) + t74 * (t301 * t476 - t306 * t477)) * t920 - m(6) * (-g(1) * t1020 - g(2) * t1021 - g(3) * t1012) + (t18 * (t1029 * t748 - t396 * t852 - t364) + t69 * (t1029 * t665 + t1043 * t748 - t184 * t852 + t396 * t512 + t1038) + t17 * (-t1017 * t854 + t228 * t748 + t260) + t68 * (t1017 * t514 - t1037 * t854 + t139 * t748 + t228 * t665 + t1045) + t13 * (-t1028 * t852 - t225 * t854 - t233) + t61 * (t1028 * t512 - t1041 * t852 - t136 * t854 + t225 * t514 + t1046)) * t977 / 0.2e1 + (t45 * (-t226 * t748 - t397 * t852) + t92 * (-t137 * t748 - t185 * t852 - t226 * t665 + t397 * t512) + t44 * (t229 * t748 + t397 * t854) + t91 * (t140 * t748 + t185 * t854 + t229 * t665 - t397 * t514) + t19 * (-t226 * t854 + t229 * t852) + t74 * (-t137 * t854 + t140 * t852 + t226 * t514 - t229 * t512)) * t919 + (t69 * (t1021 * t639 + t453 * t477 + t1024) + t68 * (t1012 * t476 + t305 * t639 + t1031) + t61 * (t1020 * t477 + t300 * t476 + t1032)) * t918 - m(5) * (g(1) * t306 + g(2) * t301 + g(3) * t454) - m(7) * (-g(1) * t1144 - g(2) * t1145 - g(3) * t1141) + (t57 * (t1145 * t639 + t927 * t477 + t1024) + t56 * (t1141 * t476 + t928 * t639 + t1031) + t49 * (t1144 * t477 + t929 * t476 + t1032)) * t917 + (t1038 * t1126 + t1045 * t1127 + t1046 * t1128 + t260 * t1131 - t364 * t1132 - t233 * t1133 + (t1018 * t1127 + t1126 * t955) * t665 + (t1030 * t1128 + t1127 * t952) * t514 + (t1011 * t1126 + t1128 * t958) * t512 + 0.2e1 * (t1018 * t12 + t1042 * t56 + t11 * t955 + t57 * t963) * t748 - 0.2e1 * (t12 * t952 + t56 * t961 + t836) * t854 - 0.2e1 * (t10 * t958 + t49 * t962 + t835) * t852) * t1120 + (t1181 * t748 - t1185 * t854 - t1186 * t852) * t1119 + (t1182 * t748 - t1187 * t854 - t1188 * t852) * t1118 + (t1180 * t748 - t1183 * t854 - t1184 * t852) * t1117 + (-t1152 * t854 + t1153 * t522 + t1154 * t869) * t1116 + (t1181 * t665 + t1185 * t514 + t1186 * t512 + t1190 * t748 - t1197 * t854 - t1224 * t852) * t1115 + (-t1152 * t852 + t1153 * t520 + t1154 * t870) * t1114 + (t1182 * t665 + t1187 * t514 + t1188 * t512 + t1191 * t748 - t1199 * t854 - t1225 * t852) * t1113 + t1194 * t512 / 0.2e1 + t1193 * t514 / 0.2e1 + (t1152 * t748 + t1153 * t668 + t1154 * t853) * t1106 + (t1180 * t665 + t1183 * t514 + t1184 * t512 + t1189 * t748 - t1195 * t854 - t1223 * t852) * t1105 - t1203 * t852 / 0.2e1 - t1202 * t854 / 0.2e1 + t1192 * t665 / 0.2e1 + t1201 * t748 / 0.2e1; (-t10 * t853 + t1033 * t57 + t1034 * t56 + t1039 * t49 - t11 * t869 - t12 * t870 - t234) * m(7) + (t1033 * t69 + t1034 * t68 + t1039 * t61 - t13 * t853 - t17 * t870 - t18 * t869 - t234) * m(6); ((g(3) - t10) * t748 - (-t11 + g(1)) * t854 - (g(2) - t12) * t852 + (t477 * t748 + t639 * t852 - t514) * t57 + (-t476 * t748 - t639 * t854 - t512) * t56 + (-t476 * t852 + t477 * t854 - t665) * t49) * m(7);];
tau  = t1;
