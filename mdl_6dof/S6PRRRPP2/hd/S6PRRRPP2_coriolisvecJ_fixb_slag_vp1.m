% Calculate vector of centrifugal and Coriolis load on the joints for
% S6PRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6PRRRPP2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:48:47
% EndTime: 2019-03-08 22:52:17
% DurationCPUTime: 200.12s
% Computational Cost: add. (76654->1629), mult. (211958->2282), div. (0->0), fcn. (247131->10), ass. (0->607)
t1056 = Icges(5,4) - Icges(7,4) - Icges(6,5);
t1057 = Icges(5,1) + Icges(6,1) + Icges(7,1);
t1055 = Icges(6,4) + Icges(5,5) - Icges(7,5);
t1054 = -Icges(5,2) - Icges(7,2) - Icges(6,3);
t1053 = Icges(6,2) + Icges(5,3) + Icges(7,3);
t1052 = Icges(5,6) - Icges(6,6) + Icges(7,6);
t653 = sin(pkin(10));
t655 = cos(pkin(10));
t659 = cos(qJ(2));
t658 = sin(qJ(2));
t931 = cos(pkin(6));
t788 = t658 * t931;
t627 = t653 * t659 + t655 * t788;
t654 = sin(pkin(6));
t657 = sin(qJ(3));
t904 = t654 * t657;
t933 = cos(qJ(3));
t584 = t627 * t933 - t655 * t904;
t656 = sin(qJ(4));
t787 = t659 * t931;
t705 = -t653 * t658 + t655 * t787;
t932 = cos(qJ(4));
t497 = t584 * t932 - t656 * t705;
t1079 = t1056 * t497;
t755 = t653 * t788;
t629 = t655 * t659 - t755;
t586 = t629 * t933 + t653 * t904;
t706 = -t653 * t787 - t655 * t658;
t499 = t586 * t932 - t656 * t706;
t1078 = t1056 * t499;
t729 = -t584 * t656 - t705 * t932;
t1077 = t1056 * t729;
t728 = -t586 * t656 - t706 * t932;
t1076 = t1056 * t728;
t807 = t654 * t933;
t631 = t657 * t931 + t658 * t807;
t902 = t654 * t659;
t590 = t631 * t932 - t656 * t902;
t1075 = t1056 * t590;
t806 = t654 * t932;
t711 = -t631 * t656 - t659 * t806;
t1074 = t1056 * t711;
t611 = t705 * qJD(2);
t710 = -t627 * t657 - t655 * t807;
t492 = qJD(3) * t710 + t611 * t933;
t612 = t627 * qJD(2);
t231 = qJD(4) * t497 + t492 * t656 - t612 * t932;
t232 = qJD(4) * t729 + t492 * t932 + t612 * t656;
t491 = qJD(3) * t584 + t611 * t657;
t1073 = t1052 * t231 - t1053 * t491 - t1055 * t232;
t613 = t706 * qJD(2);
t712 = -t629 * t657 + t653 * t807;
t494 = qJD(3) * t712 + t613 * t933;
t855 = qJD(2) * t655;
t614 = -qJD(2) * t755 + t659 * t855;
t233 = qJD(4) * t499 + t494 * t656 - t614 * t932;
t234 = qJD(4) * t728 + t494 * t932 + t614 * t656;
t493 = qJD(3) * t586 + t613 * t657;
t1072 = t1052 * t233 - t1053 * t493 - t1055 * t234;
t1071 = t1052 * t491 + t1054 * t231 + t1056 * t232;
t1070 = t1052 * t493 + t1054 * t233 + t1056 * t234;
t1069 = t1055 * t491 - t1056 * t231 + t1057 * t232;
t1068 = t1055 * t493 - t1056 * t233 + t1057 * t234;
t903 = t654 * t658;
t630 = t657 * t903 - t931 * t933;
t759 = t659 * t807;
t588 = qJD(2) * t759 - qJD(3) * t630;
t760 = t658 * t806;
t395 = -qJD(2) * t760 + qJD(4) * t590 + t588 * t656;
t854 = qJD(2) * t658;
t803 = t654 * t854;
t396 = qJD(4) * t711 + t588 * t932 + t656 * t803;
t826 = t657 * t902;
t587 = qJD(2) * t826 + qJD(3) * t631;
t1067 = t1052 * t395 - t1053 * t587 - t1055 * t396;
t1066 = t1052 * t587 + t1054 * t395 + t1056 * t396;
t1065 = t1055 * t587 - t1056 * t395 + t1057 * t396;
t1064 = -t1052 * t729 + t1053 * t710 - t1055 * t497;
t1063 = -t1052 * t728 + t1053 * t712 - t1055 * t499;
t1013 = t1052 * t710 + t1054 * t729 - t1079;
t1012 = t1052 * t712 + t1054 * t728 - t1078;
t1011 = -t1055 * t710 + t1057 * t497 + t1077;
t1010 = -t1055 * t712 + t1057 * t499 + t1076;
t1062 = -t1052 * t711 - t1053 * t630 - t1055 * t590;
t998 = -t1052 * t630 + t1054 * t711 - t1075;
t997 = t1055 * t630 + t1057 * t590 + t1074;
t856 = qJD(2) * t654;
t649 = t653 * t856;
t595 = -qJD(3) * t706 + t649;
t464 = -qJD(4) * t712 + t595;
t959 = -t464 / 0.2e1;
t804 = t654 * t855;
t596 = -qJD(3) * t705 - t804;
t465 = -qJD(4) * t710 + t596;
t957 = -t465 / 0.2e1;
t652 = qJD(2) * t931;
t638 = -qJD(3) * t902 + t652;
t575 = qJD(4) * t630 + t638;
t950 = -t575 / 0.2e1;
t1042 = rSges(7,1) + pkin(5);
t945 = -t595 / 0.2e1;
t943 = -t596 / 0.2e1;
t935 = -t638 / 0.2e1;
t1018 = t1062 * t710 + t497 * t997 - t729 * t998;
t1023 = t1010 * t497 - t1012 * t729 + t1063 * t710;
t1024 = t1011 * t497 - t1013 * t729 + t1064 * t710;
t1027 = -t1062 * t491 + t1065 * t497 + t1066 * t729 + t1067 * t710 + t231 * t998 + t232 * t997;
t1035 = t1010 * t232 + t1012 * t231 - t1063 * t491 + t1068 * t497 + t1070 * t729 + t1072 * t710;
t1060 = t1011 * t232 + t1013 * t231 - t1064 * t491 + t1069 * t497 + t1071 * t729 + t1073 * t710;
t853 = qJD(3) * t612;
t387 = qJD(4) * t491 + t853;
t852 = qJD(3) * t614;
t388 = qJD(4) * t493 + t852;
t849 = qJD(3) * t658;
t801 = t654 * t849;
t757 = qJD(2) * t801;
t549 = qJD(4) * t587 + t757;
t1061 = -t1018 * t549 / 0.2e1 - t1023 * t388 / 0.2e1 - t1024 * t387 / 0.2e1 + t1027 * t950 + t1035 * t959 + t1060 * t957;
t1059 = t1011 * t234 + t1013 * t233 - t1064 * t493 + t1069 * t499 + t1071 * t728 + t1073 * t712;
t1033 = t1010 * t234 + t1012 * t233 - t1063 * t493 + t1068 * t499 + t1070 * t728 + t1072 * t712;
t1058 = t1011 * t396 + t1013 * t395 - t1064 * t587 + t1069 * t590 + t1071 * t711 - t1073 * t630;
t1031 = t1010 * t396 + t1012 * t395 - t1063 * t587 + t1068 * t590 + t1070 * t711 - t1072 * t630;
t1026 = -t1062 * t493 + t1065 * t499 + t1066 * t728 + t1067 * t712 + t233 * t998 + t234 * t997;
t1025 = -t1062 * t587 + t1065 * t590 + t1066 * t711 - t1067 * t630 + t395 * t998 + t396 * t997;
t1022 = t1011 * t499 - t1013 * t728 + t1064 * t712;
t1021 = t1010 * t499 - t1012 * t728 + t1063 * t712;
t1020 = t1011 * t590 - t1013 * t711 - t1064 * t630;
t1019 = t1010 * t590 - t1012 * t711 - t1063 * t630;
t1017 = t1062 * t712 + t499 * t997 - t728 * t998;
t1016 = -t1062 * t630 + t590 * t997 - t711 * t998;
t1051 = -t1052 * t656 + t1055 * t932;
t1050 = t1054 * t656 + t1056 * t932;
t1049 = t1056 * t656 - t1057 * t932;
t524 = Icges(4,5) * t631 - Icges(4,6) * t630 - Icges(4,3) * t902;
t925 = Icges(4,4) * t631;
t525 = -Icges(4,2) * t630 - Icges(4,6) * t902 + t925;
t625 = Icges(4,4) * t630;
t526 = Icges(4,1) * t631 - Icges(4,5) * t902 - t625;
t166 = -t524 * t705 + t525 * t710 + t526 * t584;
t235 = Icges(4,5) * t492 - Icges(4,6) * t491 + Icges(4,3) * t612;
t237 = Icges(4,4) * t492 - Icges(4,2) * t491 + Icges(4,6) * t612;
t239 = Icges(4,1) * t492 - Icges(4,4) * t491 + Icges(4,5) * t612;
t362 = Icges(4,5) * t584 + Icges(4,6) * t710 - Icges(4,3) * t705;
t927 = Icges(4,4) * t584;
t364 = Icges(4,2) * t710 - Icges(4,6) * t705 + t927;
t576 = Icges(4,4) * t710;
t366 = Icges(4,1) * t584 - Icges(4,5) * t705 + t576;
t64 = -t235 * t705 + t237 * t710 + t239 * t584 + t362 * t612 - t364 * t491 + t366 * t492;
t236 = Icges(4,5) * t494 - Icges(4,6) * t493 + Icges(4,3) * t614;
t238 = Icges(4,4) * t494 - Icges(4,2) * t493 + Icges(4,6) * t614;
t240 = Icges(4,1) * t494 - Icges(4,4) * t493 + Icges(4,5) * t614;
t363 = Icges(4,5) * t586 + Icges(4,6) * t712 - Icges(4,3) * t706;
t926 = Icges(4,4) * t586;
t365 = Icges(4,2) * t712 - Icges(4,6) * t706 + t926;
t577 = Icges(4,4) * t712;
t367 = Icges(4,1) * t586 - Icges(4,5) * t706 + t577;
t65 = -t236 * t705 + t238 * t710 + t240 * t584 + t363 * t612 - t365 * t491 + t367 * t492;
t143 = -t362 * t705 + t364 * t710 + t366 * t584;
t144 = -t363 * t705 + t365 * t710 + t367 * t584;
t751 = t143 * t612 + t144 * t614;
t398 = Icges(4,5) * t588 - Icges(4,6) * t587 + Icges(4,3) * t803;
t399 = Icges(4,4) * t588 - Icges(4,2) * t587 + Icges(4,6) * t803;
t400 = Icges(4,1) * t588 - Icges(4,4) * t587 + Icges(4,5) * t803;
t87 = -t398 * t705 + t399 * t710 + t400 * t584 - t491 * t525 + t492 * t526 + t524 * t612;
t1048 = t65 * t945 + t64 * t943 + t87 * t935 - (t166 * t803 + t751) * qJD(3) / 0.2e1 + t1061;
t1028 = t1016 * t575 + t1019 * t464 + t1020 * t465;
t1047 = -t1028 / 0.2e1;
t1029 = t1017 * t575 + t1021 * t464 + t1022 * t465;
t1046 = -t1029 / 0.2e1;
t1030 = t1018 * t575 + t1023 * t464 + t1024 * t465;
t1045 = -t1030 / 0.2e1;
t1044 = rSges(7,3) + qJ(6);
t1043 = -rSges(7,2) * t656 - t1042 * t932;
t267 = pkin(3) * t494 + pkin(9) * t493;
t139 = rSges(6,1) * t234 + rSges(6,2) * t493 + rSges(6,3) * t233;
t483 = qJD(5) * t728;
t142 = pkin(4) * t234 + qJ(5) * t233 - t483;
t896 = -t139 - t142;
t1040 = -t267 + t896;
t290 = pkin(4) * t497 - qJ(5) * t729;
t885 = -rSges(7,2) * t729 + t1042 * t497 + t1044 * t710;
t813 = -t290 - t885;
t428 = pkin(3) * t586 - pkin(9) * t712;
t221 = rSges(6,1) * t499 - rSges(6,2) * t712 - rSges(6,3) * t728;
t295 = pkin(4) * t499 - qJ(5) * t728;
t883 = -t221 - t295;
t977 = -t428 + t883;
t571 = pkin(3) * t631 + pkin(9) * t630;
t383 = rSges(6,1) * t590 + rSges(6,2) * t630 - rSges(6,3) * t711;
t443 = pkin(4) * t590 - qJ(5) * t711;
t874 = -t383 - t443;
t812 = -t571 + t874;
t1038 = t1017 * t549 + t1021 * t388 + t1022 * t387 + t1026 * t575 + t1033 * t464 + t1059 * t465;
t1037 = t1016 * t549 + t1019 * t388 + t1020 * t387 + t1025 * t575 + t1031 * t464 + t1058 * t465;
t805 = t656 * t933;
t536 = -t627 * t932 + t705 * t805;
t758 = t933 * t932;
t537 = t627 * t656 + t705 * t758;
t908 = t705 * t657;
t1009 = t1052 * t536 - t1053 * t908 - t1055 * t537;
t538 = -t629 * t932 + t706 * t805;
t539 = t629 * t656 + t706 * t758;
t907 = t706 * t657;
t1008 = t1052 * t538 - t1053 * t907 - t1055 * t539;
t1007 = t1052 * t908 + t1054 * t536 + t1056 * t537;
t1006 = t1052 * t907 + t1054 * t538 + t1056 * t539;
t1005 = t1055 * t908 - t1056 * t536 + t1057 * t537;
t1004 = t1055 * t907 - t1056 * t538 + t1057 * t539;
t1003 = t1050 * t710 + t1052 * t584;
t1002 = t1050 * t712 + t1052 * t586;
t1001 = -t1049 * t710 + t1055 * t584;
t1000 = -t1049 * t712 + t1055 * t586;
t996 = -t1050 * t630 + t1052 * t631;
t995 = t1049 * t630 + t1055 * t631;
t600 = t656 * t759 - t760;
t601 = (t656 * t658 + t659 * t758) * t654;
t994 = t1052 * t600 - t1053 * t826 - t1055 * t601;
t993 = t1052 * t826 + t1054 * t600 + t1056 * t601;
t992 = t1055 * t826 - t1056 * t600 + t1057 * t601;
t991 = (-t1051 * t630 + t1053 * t631 - t656 * t998 - t932 * t997) * t575 + (-t1011 * t932 - t1013 * t656 + t1051 * t710 + t1053 * t584) * t465 + (-t1010 * t932 - t1012 * t656 + t1051 * t712 + t1053 * t586) * t464;
t990 = (t1054 * t590 + t1074 + t997) * t575 + (t1054 * t497 + t1011 + t1077) * t465 + (t1054 * t499 + t1010 + t1076) * t464;
t989 = (t1057 * t711 - t1075 + t998) * t575 + (t1057 * t729 + t1013 - t1079) * t465 + (t1057 * t728 + t1012 - t1078) * t464;
t988 = (-t1052 * t590 + t1055 * t711) * t575 + (-t1052 * t497 + t1055 * t729) * t465 + (-t1052 * t499 + t1055 * t728) * t464;
t167 = -t524 * t706 + t525 * t712 + t526 * t586;
t66 = -t235 * t706 + t237 * t712 + t239 * t586 + t362 * t614 - t364 * t493 + t366 * t494;
t67 = -t236 * t706 + t238 * t712 + t240 * t586 + t363 * t614 - t365 * t493 + t367 * t494;
t145 = -t362 * t706 + t364 * t712 + t366 * t586;
t146 = -t363 * t706 + t365 * t712 + t367 * t586;
t750 = t145 * t612 + t146 * t614;
t88 = -t398 * t706 + t399 * t712 + t400 * t586 - t493 * t525 + t494 * t526 + t524 * t614;
t986 = t595 * t67 + t596 * t66 + t638 * t88 + (t167 * t803 + t750) * qJD(3) + t1038;
t189 = -t524 * t902 - t630 * t525 + t631 * t526;
t71 = -t630 * t237 + t631 * t239 - t587 * t364 + t588 * t366 + (-t235 * t659 + t362 * t854) * t654;
t72 = -t630 * t238 + t631 * t240 - t587 * t365 + t588 * t367 + (-t236 * t659 + t363 * t854) * t654;
t155 = -t362 * t902 - t630 * t364 + t631 * t366;
t156 = -t363 * t902 - t630 * t365 + t631 * t367;
t749 = t155 * t612 + t156 * t614;
t99 = -t630 * t399 + t631 * t400 - t587 * t525 + t588 * t526 + (-t398 * t659 + t524 * t854) * t654;
t985 = t595 * t72 + t596 * t71 + t638 * t99 + (t189 * t803 + t749) * qJD(3) + t1037;
t578 = qJD(5) * t711;
t426 = pkin(3) * t584 - pkin(9) * t710;
t563 = pkin(2) * t627 - pkin(8) * t705;
t565 = pkin(2) * t629 - pkin(8) * t706;
t797 = t563 * t649 + t565 * t804 + qJD(1);
t715 = t595 * t426 - t428 * t596 + t797;
t696 = t464 * t290 - t578 + t715;
t875 = -rSges(7,2) * t728 + t1042 * t499 + t1044 * t712;
t816 = -t295 - t875;
t841 = qJD(6) * t630;
t49 = t464 * t885 + t465 * t816 + t696 - t841;
t984 = t49 * t885;
t481 = qJD(5) * t729;
t636 = (pkin(2) * t658 - pkin(8) * t659) * t654;
t739 = t565 * t652 - t636 * t649;
t690 = t638 * t428 - t571 * t595 + t739;
t686 = t575 * t295 - t481 + t690;
t867 = -rSges(7,2) * t711 + t1042 * t590 - t1044 * t630;
t810 = -t443 - t867;
t843 = qJD(6) * t710;
t56 = t464 * t810 + t575 * t875 + t686 + t843;
t983 = t56 * t875;
t785 = t931 * t563;
t905 = t654 * t655;
t691 = (-t636 * t905 - t785) * qJD(2);
t673 = -t638 * t426 + t596 * t571 + t691;
t670 = t465 * t443 - t483 + t673;
t839 = t712 * qJD(6);
t57 = t465 * t867 + t575 * t813 + t670 + t839;
t982 = t57 * t867;
t540 = rSges(3,1) * t611 - rSges(3,2) * t612;
t541 = rSges(3,1) * t613 - rSges(3,2) * t614;
t744 = t540 * t653 + t541 * t655;
t981 = t744 * t856;
t899 = rSges(7,2) * t231 + t1042 * t232 - t1044 * t491 + t843;
t897 = rSges(7,2) * t233 + t1042 * t234 - t1044 * t493 + t839;
t980 = -t1043 * t710 - t1044 * t584;
t979 = -t1043 * t712 - t1044 * t586;
t978 = t1043 * t630 - t1044 * t631;
t542 = pkin(2) * t611 + pkin(8) * t612;
t543 = pkin(2) * t613 + pkin(8) * t614;
t868 = t542 * t649 + t543 * t804;
t725 = Icges(4,5) * t933 - Icges(4,6) * t657;
t976 = t595 * (-Icges(4,3) * t629 - t365 * t657 + t367 * t933 - t706 * t725) + t596 * (-Icges(4,3) * t627 - t364 * t657 + t366 * t933 - t705 * t725) + t638 * (-t525 * t657 + t526 * t933 - (Icges(4,3) * t658 + t659 * t725) * t654);
t141 = pkin(4) * t232 + qJ(5) * t231 - t481;
t102 = t464 * t141;
t171 = t388 * t290;
t394 = qJD(5) * t395;
t266 = pkin(3) * t492 + pkin(9) * t491;
t226 = t595 * t266;
t360 = t426 * t852;
t802 = t428 * t853;
t910 = t596 * t267;
t689 = t226 + t360 - t802 + t868 - t910;
t675 = t102 + t171 + t394 + t689;
t820 = -t142 - t897;
t842 = qJD(6) * t587;
t10 = t387 * t816 + t388 * t885 + t464 * t899 + t465 * t820 + t675 - t842;
t975 = 0.2e1 * t10;
t438 = pkin(3) * t588 + pkin(9) * t587;
t509 = t543 * t652;
t637 = (pkin(2) * t659 + pkin(8) * t658) * t654;
t624 = qJD(2) * t637;
t672 = t638 * t267 + t428 * t757 - t595 * t438 - t571 * t852 - t624 * t649 + t509;
t669 = qJD(5) * t231 + t575 * t142 + t549 * t295 + t672;
t181 = pkin(4) * t396 + qJ(5) * t395 - t578;
t891 = rSges(7,2) * t395 + t1042 * t396 - t1044 * t587 - t841;
t819 = -t181 - t891;
t13 = -qJD(6) * t491 + t388 * t810 + t464 * t819 + t549 * t875 + t575 * t897 + t669;
t974 = 0.2e1 * t13;
t786 = t931 * t542;
t909 = t624 * t655;
t666 = t596 * t438 + t571 * t853 + (-t786 + (-t426 * t849 - t909) * t654) * qJD(2) - t638 * t266;
t664 = qJD(5) * t233 + t465 * t181 + t387 * t443 + t666;
t821 = -t141 - t899;
t14 = -qJD(6) * t493 + t387 * t867 + t465 * t891 + t549 * t813 + t575 * t821 + t664;
t973 = 0.2e1 * t14;
t136 = rSges(6,1) * t232 + rSges(6,2) * t491 + rSges(6,3) * t231;
t218 = rSges(6,1) * t497 - rSges(6,2) * t710 - rSges(6,3) * t729;
t15 = t136 * t464 + t218 * t388 + t387 * t883 + t465 * t896 + t675;
t972 = 0.2e1 * t15;
t183 = rSges(6,1) * t396 + rSges(6,2) * t587 + rSges(6,3) * t395;
t884 = -t218 - t290;
t898 = -t136 - t141;
t18 = t465 * t183 + t387 * t383 + t549 * t884 + t575 * t898 + t664;
t971 = 0.2e1 * t18;
t970 = 0.2e1 * t49;
t969 = 0.2e1 * t56;
t968 = 0.2e1 * t57;
t61 = t218 * t464 + t465 * t883 + t696;
t967 = 0.2e1 * t61;
t68 = t221 * t575 + t464 * t874 + t686;
t966 = 0.2e1 * t68;
t69 = t465 * t383 + t575 * t884 + t670;
t965 = 0.2e1 * t69;
t964 = m(5) / 0.2e1;
t963 = m(6) / 0.2e1;
t962 = m(7) / 0.2e1;
t961 = t387 / 0.2e1;
t960 = t388 / 0.2e1;
t958 = t464 / 0.2e1;
t956 = t465 / 0.2e1;
t953 = t549 / 0.2e1;
t949 = t575 / 0.2e1;
t944 = t595 / 0.2e1;
t942 = t596 / 0.2e1;
t934 = t638 / 0.2e1;
t930 = Icges(3,4) * t627;
t929 = Icges(3,4) * t629;
t928 = Icges(3,4) * t658;
t241 = rSges(4,1) * t492 - rSges(4,2) * t491 + rSges(4,3) * t612;
t915 = t241 * t595;
t242 = rSges(4,1) * t494 - rSges(4,2) * t493 + rSges(4,3) * t614;
t914 = t242 * t596;
t913 = t290 * t631;
t912 = t295 * t584;
t911 = t443 * t586;
t906 = t653 * t654;
t901 = -t141 * t712 + t493 * t290;
t900 = t630 * t142 + t587 * t295;
t140 = rSges(5,1) * t234 - rSges(5,2) * t233 + rSges(5,3) * t493;
t895 = -t140 - t267;
t894 = t464 * t729 - t465 * t728 + t395;
t893 = -t181 * t710 + t491 * t443;
t892 = -t181 - t183;
t184 = rSges(5,1) * t396 - rSges(5,2) * t395 + rSges(5,3) * t587;
t890 = -t184 - t438;
t889 = -t464 * t711 + t575 * t728 + t231;
t888 = t465 * t711 - t575 * t729 + t233;
t286 = pkin(4) * t729 + qJ(5) * t497;
t887 = qJD(5) * t590 + t464 * t286;
t291 = pkin(4) * t728 + qJ(5) * t499;
t886 = qJD(5) * t497 + t575 * t291;
t222 = rSges(5,1) * t499 + rSges(5,2) * t728 - rSges(5,3) * t712;
t882 = -t222 - t428;
t881 = -t266 * t706 + t614 * t426;
t381 = t706 * t426;
t880 = -t290 * t706 - t381;
t439 = pkin(4) * t711 + qJ(5) * t590;
t879 = qJD(5) * t499 + t465 * t439;
t402 = t428 * t803;
t878 = t295 * t803 + t402;
t511 = t931 * t543;
t877 = t931 * t267 + t511;
t876 = rSges(7,2) * t536 + t1042 * t537 - t1044 * t908;
t384 = rSges(5,1) * t590 + rSges(5,2) * t711 + rSges(5,3) * t630;
t873 = -t384 - t571;
t872 = t426 * t902 - t571 * t705;
t552 = t931 * t565;
t871 = t931 * t428 + t552;
t870 = rSges(7,2) * t538 + t1042 * t539 - t1044 * t907;
t869 = 0.2e1 * t868;
t866 = t542 * t906 + t543 * t905;
t512 = Icges(3,2) * t705 - Icges(3,6) * t905 + t930;
t558 = Icges(3,1) * t705 - t930;
t865 = -t512 + t558;
t513 = Icges(3,2) * t706 + Icges(3,6) * t906 + t929;
t559 = Icges(3,1) * t706 - t929;
t864 = -t513 + t559;
t622 = Icges(3,4) * t705;
t514 = Icges(3,1) * t627 - Icges(3,5) * t905 + t622;
t556 = -Icges(3,2) * t627 + t622;
t863 = -t514 - t556;
t623 = Icges(3,4) * t706;
t515 = Icges(3,1) * t629 + Icges(3,5) * t906 + t623;
t557 = -Icges(3,2) * t629 + t623;
t862 = -t515 - t557;
t562 = pkin(2) * t705 + pkin(8) * t627;
t564 = pkin(2) * t706 + pkin(8) * t629;
t861 = t562 * t649 + t564 * t804;
t860 = t563 * t906 + t565 * t905;
t859 = t600 * rSges(7,2) + t1042 * t601 - t1044 * t826;
t602 = Icges(3,6) * t931 + (Icges(3,2) * t659 + t928) * t654;
t634 = (Icges(3,1) * t659 - t928) * t654;
t858 = -t602 + t634;
t650 = Icges(3,4) * t902;
t603 = Icges(3,1) * t903 + Icges(3,5) * t931 + t650;
t633 = -Icges(3,2) * t903 + t650;
t857 = -t603 - t633;
t851 = qJD(3) * t627;
t850 = qJD(3) * t629;
t848 = qJD(4) * t584;
t847 = qJD(4) * t586;
t846 = qJD(4) * t631;
t845 = qJD(4) * t657;
t844 = qJD(5) * t656;
t840 = qJD(6) * t657;
t837 = 2 * m(3);
t836 = 2 * m(4);
t835 = 0.2e1 * m(5);
t834 = 0.2e1 * m(6);
t833 = 0.2e1 * m(7);
t832 = 0.2e1 * t706;
t831 = 0.2e1 * t653;
t830 = 0.2e1 * t655;
t829 = 0.2e1 * t659;
t828 = 0.2e1 * qJD(4);
t822 = t931 * t142 + t877;
t818 = -t438 + t892;
t817 = -t624 + t890;
t815 = t266 * t902 - t438 * t705 + t612 * t571;
t814 = t931 * t295 + t871;
t811 = -t636 + t873;
t796 = t853 / 0.2e1;
t795 = t852 / 0.2e1;
t791 = rSges(7,2) * t497 + t1042 * t729;
t790 = rSges(7,2) * t499 + t1042 * t728;
t789 = rSges(7,2) * t590 + t1042 * t711;
t784 = t837 / 0.2e1;
t783 = -t836 / 0.2e1;
t782 = t836 / 0.2e1;
t781 = -t835 / 0.2e1;
t780 = t835 / 0.2e1;
t779 = -t834 / 0.2e1;
t778 = -t833 / 0.2e1;
t777 = t833 / 0.2e1;
t401 = rSges(4,1) * t588 - rSges(4,2) * t587 + rSges(4,3) * t803;
t776 = t654 * (-t401 - t624);
t527 = t631 * rSges(4,1) - t630 * rSges(4,2) - rSges(4,3) * t902;
t775 = t654 * (-t527 - t636);
t425 = pkin(3) * t710 + pkin(9) * t584;
t427 = pkin(3) * t712 + pkin(9) * t586;
t774 = t595 * t425 - t427 * t596;
t570 = -pkin(3) * t630 + pkin(9) * t631;
t773 = t638 * t427 - t570 * t595;
t772 = -t425 * t638 + t596 * t570;
t771 = 0.2e1 * t854;
t770 = -t141 * t706 + t614 * t290 + t881;
t769 = -t267 + t820;
t768 = -t438 + t819;
t767 = -t624 + t818;
t766 = -t428 + t816;
t765 = t266 * t906 + t267 * t905 + t866;
t764 = t290 * t902 - t443 * t705 + t872;
t763 = -t571 + t810;
t762 = -t636 + t812;
t761 = t426 * t906 + t428 * t905 + t860;
t756 = t803 / 0.2e1;
t754 = t61 * t136 + t15 * t218;
t753 = -t624 + t768;
t752 = -t636 + t763;
t369 = rSges(4,1) * t584 + rSges(4,2) * t710 - rSges(4,3) * t705;
t370 = rSges(4,1) * t586 + rSges(4,2) * t712 - rSges(4,3) * t706;
t748 = t369 * t614 - t370 * t612;
t747 = -t512 * t658 + t514 * t659;
t746 = -t513 * t658 + t515 * t659;
t518 = rSges(3,1) * t627 + rSges(3,2) * t705 - rSges(3,3) * t905;
t519 = rSges(3,1) * t629 + rSges(3,2) * t706 + rSges(3,3) * t906;
t745 = t518 * t653 + t519 * t655;
t743 = -t602 * t658 + t603 * t659;
t742 = qJD(3) * t756;
t741 = pkin(3) * t933 + pkin(9) * t657;
t740 = t564 * t652 - t637 * t649;
t738 = rSges(4,1) * t933 - rSges(4,2) * t657;
t737 = -rSges(5,1) * t932 + rSges(5,2) * t656;
t736 = -rSges(6,1) * t932 - rSges(6,3) * t656;
t734 = -pkin(4) * t932 - qJ(5) * t656;
t733 = t141 * t906 + t142 * t905 + t765;
t732 = t141 * t902 - t181 * t705 + t612 * t443 + t815;
t731 = 0.2e1 * t226 - 0.2e1 * t910 - 0.2e1 * t802 + 0.2e1 * t360 + t869;
t730 = t290 * t906 + t295 * t905 + t761;
t727 = Icges(4,1) * t933 - Icges(4,4) * t657;
t726 = Icges(4,4) * t933 - Icges(4,2) * t657;
t635 = (rSges(3,1) * t659 - rSges(3,2) * t658) * t654;
t632 = (Icges(3,5) * t659 - Icges(3,6) * t658) * t654;
t713 = t748 * qJD(3);
t701 = (Icges(4,5) * t710 - Icges(4,6) * t584) * t596 + (Icges(4,5) * t712 - Icges(4,6) * t586) * t595 + (-Icges(4,5) * t630 - Icges(4,6) * t631) * t638;
t700 = t10 * t885 + t49 * t899;
t699 = t14 * t867 + t57 * t891;
t698 = -t266 * t931 - t786;
t697 = -t426 * t931 - t785;
t408 = t734 * t710;
t409 = t734 * t712;
t695 = t290 * t847 - t464 * t408 + t409 * t465 - t630 * t844 + t774;
t548 = t734 * t630;
t694 = t295 * t846 - t575 * t409 - t464 * t548 + t710 * t844 + t773;
t693 = t408 * t575 + t443 * t848 + t465 * t548 + t712 * t844 + t772;
t692 = (-t562 * t931 - t637 * t905) * qJD(2);
t606 = t931 * rSges(3,3) + (rSges(3,1) * t658 + rSges(3,2) * t659) * t654;
t389 = (t519 * t931 - t606 * t906) * qJD(2);
t390 = (-t518 * t931 - t606 * t905) * qJD(2);
t544 = t741 * t705;
t545 = t741 * t706;
t688 = t426 * t850 - t428 * t851 + t595 * t544 - t596 * t545 + t861;
t687 = -0.2e1 * t465 * t142 - 0.2e1 * t387 * t295 + 0.2e1 * t102 + 0.2e1 * t171 + 0.2e1 * t394 + t731;
t685 = -t141 * t931 + t698;
t684 = -t290 * t931 + t697;
t677 = (Icges(4,1) * t712 - t365 - t926) * t595 + (Icges(4,1) * t710 - t364 - t927) * t596 + (-Icges(4,1) * t630 - t525 - t925) * t638;
t676 = (Icges(4,2) * t586 - t367 - t577) * t595 + (Icges(4,2) * t584 - t366 - t576) * t596 + (Icges(4,2) * t631 - t526 + t625) * t638;
t354 = pkin(4) * t537 + qJ(5) * t536;
t551 = t706 * t845 + t850;
t674 = qJD(5) * t600 + t551 * t290 + t464 * t354 + t688;
t605 = t741 * t902;
t671 = t428 * t801 + t638 * t545 - t571 * t850 - t595 * t605 + t740;
t355 = pkin(4) * t539 + qJ(5) * t538;
t615 = (t659 * t845 + t849) * t654;
t668 = qJD(5) * t536 + t615 * t295 + t575 * t355 + t671;
t667 = -t426 * t801 - t638 * t544 + t571 * t851 + t596 * t605 + t692;
t510 = pkin(4) * t601 + qJ(5) * t600;
t550 = t705 * t845 + t851;
t665 = qJD(5) * t538 + t550 * t443 + t465 * t510 + t667;
t621 = qJD(2) * t635;
t618 = qJD(2) * t634;
t617 = (Icges(3,4) * t659 - Icges(3,2) * t658) * t856;
t616 = qJD(2) * t632;
t594 = (rSges(4,3) * t658 + t659 * t738) * t654;
t593 = (Icges(4,5) * t658 + t659 * t727) * t654;
t592 = (Icges(4,6) * t658 + t659 * t726) * t654;
t569 = -rSges(4,1) * t630 - rSges(4,2) * t631;
t561 = rSges(3,1) * t706 - rSges(3,2) * t629;
t560 = rSges(3,1) * t705 - rSges(3,2) * t627;
t555 = Icges(3,5) * t706 - Icges(3,6) * t629;
t554 = Icges(3,5) * t705 - Icges(3,6) * t627;
t535 = Icges(3,1) * t613 - Icges(3,4) * t614;
t534 = Icges(3,1) * t611 - Icges(3,4) * t612;
t533 = Icges(3,4) * t613 - Icges(3,2) * t614;
t532 = Icges(3,4) * t611 - Icges(3,2) * t612;
t531 = Icges(3,5) * t613 - Icges(3,6) * t614;
t530 = Icges(3,5) * t611 - Icges(3,6) * t612;
t478 = t601 * rSges(5,1) - t600 * rSges(5,2) + rSges(5,3) * t826;
t477 = t601 * rSges(6,1) + rSges(6,2) * t826 + t600 * rSges(6,3);
t463 = t631 * rSges(5,3) + t630 * t737;
t462 = t631 * rSges(6,2) + t630 * t736;
t451 = t629 * rSges(4,3) + t706 * t738;
t450 = t627 * rSges(4,3) + t705 * t738;
t449 = Icges(4,5) * t629 + t706 * t727;
t448 = Icges(4,5) * t627 + t705 * t727;
t447 = Icges(4,6) * t629 + t706 * t726;
t446 = Icges(4,6) * t627 + t705 * t726;
t442 = rSges(5,1) * t711 - rSges(5,2) * t590;
t441 = rSges(6,1) * t711 + rSges(6,3) * t590;
t424 = rSges(4,1) * t712 - rSges(4,2) * t586;
t423 = rSges(4,1) * t710 - rSges(4,2) * t584;
t350 = t710 * t443;
t348 = t586 * rSges(5,3) - t712 * t737;
t347 = t586 * rSges(6,2) - t712 * t736;
t345 = t584 * rSges(5,3) - t710 * t737;
t344 = t584 * rSges(6,2) - t710 * t736;
t320 = t745 * t856 + qJD(1);
t319 = rSges(5,1) * t539 - rSges(5,2) * t538 + rSges(5,3) * t907;
t318 = rSges(6,1) * t539 + rSges(6,2) * t907 + rSges(6,3) * t538;
t316 = rSges(5,1) * t537 - rSges(5,2) * t536 + rSges(5,3) * t908;
t315 = rSges(6,1) * t537 + rSges(6,2) * t908 + rSges(6,3) * t536;
t294 = rSges(5,1) * t728 - rSges(5,2) * t499;
t293 = rSges(6,1) * t728 + rSges(6,3) * t499;
t289 = rSges(5,1) * t729 - rSges(5,2) * t497;
t288 = rSges(6,1) * t729 + rSges(6,3) * t497;
t251 = t630 * t295;
t227 = t712 * t290;
t219 = rSges(5,1) * t497 + rSges(5,2) * t729 - rSges(5,3) * t710;
t161 = -t638 * t369 + t596 * t527 + t691;
t160 = t370 * t638 - t527 * t595 + t739;
t150 = t369 * t595 - t370 * t596 + t797;
t137 = rSges(5,1) * t232 - rSges(5,2) * t231 + rSges(5,3) * t491;
t98 = t527 * t853 - t638 * t241 + t596 * t401 + (-t786 + (-t369 * t849 - t909) * t654) * qJD(2);
t97 = -t527 * t852 + t242 * t638 - t401 * t595 + t509 + (t370 * t849 - t624 * t653) * t856;
t90 = -t575 * t219 + t465 * t384 + t673;
t89 = t222 * t575 - t384 * t464 + t690;
t74 = t713 + t868 - t914 + t915;
t73 = t219 * t464 - t222 * t465 + t715;
t70 = t155 * t596 + t156 * t595 + t638 * t189;
t63 = t145 * t596 + t146 * t595 + t167 * t638;
t62 = t143 * t596 + t144 * t595 + t166 * t638;
t48 = -t575 * t137 + t465 * t184 - t549 * t219 + t387 * t384 + t666;
t47 = t140 * t575 - t184 * t464 + t222 * t549 - t384 * t388 + t672;
t31 = t137 * t464 - t140 * t465 + t219 * t388 - t222 * t387 + t689;
t17 = t139 * t575 + t221 * t549 + t388 * t874 + t464 * t892 + t669;
t1 = [t687 * t963 + (t687 - 0.2e1 * t842) * t962 + m(4) * (0.2e1 * t713 + t869 - 0.2e1 * t914 + 0.2e1 * t915) / 0.2e1 + t731 * t964 + (-m(5) * t140 - m(6) * t139 - t777 * t897) * t465 + (m(5) * t137 + m(6) * t136 + t777 * t899) * t464 + (m(5) * t219 + m(6) * t218 + t777 * t885) * t388 + (-m(5) * t222 - m(6) * t221 - t777 * t875) * t387 + t784 * t981; (t69 * (t550 * t383 + t465 * t477 + t884 * t615 + (-t315 - t354) * t575 + t665) + t68 * (t221 * t615 + t318 * t575 + t874 * t551 + (-t477 - t510) * t464 + t668) + t61 * (t218 * t551 + t315 * t464 + t883 * t550 + (-t318 - t355) * t465 + t674)) * t779 + ((-t218 * t931 + t684) * t971 + (-t136 * t931 + t685) * t965 + 0.2e1 * t17 * (t221 * t931 + t814) + (t139 * t931 + t822) * t966 + t730 * t972 + t733 * t967 + ((t61 * t139 + t15 * t221 + t18 * t762 + t69 * t767) * t830 + (t17 * t762 + t68 * t767 + t754) * t831) * t654) * t963 + (t166 * t931 + (-t143 * t655 + t144 * t653) * t654) * t796 + (t189 * t931 + (-t155 * t655 + t156 * t653) * t654) * t742 - t70 * t801 / 0.2e1 + ((-t630 * t447 + t631 * t449) * t595 + (-t630 * t446 + t631 * t448) * t596 + (-t630 * t592 + t631 * t593) * t638 + (t155 * t627 + t156 * t629) * qJD(3) + ((qJD(3) * t189 + t362 * t596 + t363 * t595 + t524 * t638) * t658 + t976 * t659) * t654) * t935 + (t655 * ((-t555 * t905 + t627 * t864 - t705 * t862) * t906 - (-t554 * t905 + t627 * t865 - t705 * t863) * t905 + (t627 * t858 - t632 * t905 - t705 * t857) * t931) / 0.2e1 - t653 * ((t555 * t906 + t629 * t864 - t706 * t862) * t906 - (t554 * t906 + t629 * t865 - t706 * t863) * t905 + (t629 * t858 + t632 * t906 - t706 * t857) * t931) / 0.2e1) * t654 * qJD(2) ^ 2 + (t161 * (-t638 * t450 + t596 * t594 + (-t369 * t903 + t527 * t627) * qJD(3) + t692) + t160 * (t451 * t638 - t594 * t595 + (t370 * t903 - t527 * t629) * qJD(3) + t740) + t150 * (t450 * t595 - t451 * t596 + (t369 * t629 - t370 * t627) * qJD(3) + t861)) * t783 + ((t629 * t363 + t447 * t712 + t586 * t449) * t595 + (t629 * t362 + t446 * t712 + t586 * t448) * t596 + (t629 * t524 + t586 * t593 + t592 * t712) * t638 + (t145 * t627 + t146 * t629 + t167 * t903) * qJD(3) + t976 * t706) * t945 + ((t627 * t363 + t447 * t710 + t584 * t449) * t595 + (t627 * t362 + t446 * t710 + t584 * t448) * t596 + (t627 * t524 + t584 * t593 + t592 * t710) * t638 + (t143 * t627 + t144 * t629 + t166 * t903) * qJD(3) + t976 * t705) * t943 + (t90 * (-t615 * t219 - t575 * t316 + t550 * t384 + t465 * t478 + t667) + t89 * (t222 * t615 + t319 * t575 - t384 * t551 - t464 * t478 + t671) + t73 * (t219 * t551 - t222 * t550 + t316 * t464 - t319 * t465 + t688)) * t781 + (t1018 * t615 + (-t1062 * t908 + t497 * t992 + t536 * t998 + t537 * t997 + t710 * t994 + t729 * t993) * t575 + t1023 * t551 + t1024 * t550 + (t1005 * t497 + t1007 * t729 + t1009 * t710 + t1011 * t537 + t1013 * t536 - t1064 * t908) * t465 + (t1004 * t497 + t1006 * t729 + t1008 * t710 + t1010 * t537 + t1012 * t536 - t1063 * t908) * t464) * t957 + (t1016 * t615 + (-t1062 * t826 + t590 * t992 + t600 * t998 + t601 * t997 - t630 * t994 + t711 * t993) * t575 + t1019 * t551 + t1020 * t550 + (t1005 * t590 + t1007 * t711 - t1009 * t630 + t1011 * t601 + t1013 * t600 - t1064 * t826) * t465 + (t1004 * t590 + t1006 * t711 - t1008 * t630 + t1010 * t601 + t1012 * t600 - t1063 * t826) * t464) * t950 + (t1017 * t615 + (-t1062 * t907 + t499 * t992 + t538 * t998 + t539 * t997 + t712 * t994 + t728 * t993) * t575 + t1021 * t551 + t1022 * t550 + (t1005 * t499 + t1007 * t728 + t1009 * t712 + t1011 * t539 + t1013 * t538 - t1064 * t907) * t465 + (t1004 * t499 + t1006 * t728 + t1008 * t712 + t1010 * t539 + t1012 * t538 - t1063 * t907) * t464) * t959 + (t1025 * t931 + (t1031 * t653 - t1058 * t655) * t654) * t949 + (t1026 * t931 + (t1033 * t653 - t1059 * t655) * t654) * t958 + (t1027 * t931 + (t1035 * t653 - t1060 * t655) * t654) * t956 + t985 * t931 / 0.2e1 + t986 * t906 / 0.2e1 + (t1018 * t931 + (t1023 * t653 - t1024 * t655) * t654) * t961 + (t1016 * t931 + (t1019 * t653 - t1020 * t655) * t654) * t953 + (t1017 * t931 + (t1021 * t653 - t1022 * t655) * t654) * t960 - t63 * t850 / 0.2e1 - t62 * t851 / 0.2e1 - (t320 * (t560 * t653 + t561 * t655) * t856 + (t390 * (-t560 * t931 - t635 * t905) + t389 * (t561 * t931 - t635 * t906)) * qJD(2)) * t837 / 0.2e1 + (t57 * (-t706 * t840 + t867 * t550 + t859 * t465 + t813 * t615 + (-t354 - t876) * t575 + t665) + t56 * (-t705 * t840 + t875 * t615 + t870 * t575 + t810 * t551 + (-t510 - t859) * t464 + t668) + t49 * (-qJD(6) * t826 + t885 * t551 + t876 * t464 + t816 * t550 + (-t355 - t870) * t465 + t674)) * t778 + ((-t602 * t614 + t603 * t613 + t616 * t906 + t617 * t706 + t618 * t629) * t931 + (-(-t512 * t614 + t514 * t613 + t530 * t906 + t532 * t706 + t534 * t629) * t655 + (-t513 * t614 + t515 * t613 + t531 * t906 + t533 * t706 + t535 * t629) * t653) * t654) * t649 + ((t931 * t616 + (qJD(2) * t743 + t617 * t659 + t618 * t658) * t654) * t931 + (-(t931 * t530 + (qJD(2) * t747 + t532 * t659 + t534 * t658) * t654) * t655 + (t931 * t531 + (qJD(2) * t746 + t533 * t659 + t535 * t658) * t654) * t653) * t654) * t652 + (t98 * (-t369 * t931 + t655 * t775 - t785) + t161 * (-t241 * t931 + t655 * t776 - t786) + t97 * (t370 * t931 + t653 * t775 + t552) + t160 * (t242 * t931 + t653 * t776 + t511) + t74 * ((t369 * t653 + t370 * t655) * t654 + t860) + t150 * ((t241 * t653 + t242 * t655) * t654 + t866)) * t782 + (t167 * t931 + (-t145 * t655 + t146 * t653) * t654) * t795 - ((-t602 * t612 + t603 * t611 - t616 * t905 + t617 * t705 + t618 * t627) * t931 + (-(-t512 * t612 + t514 * t611 - t530 * t905 + t532 * t705 + t534 * t627) * t655 + (-t513 * t612 + t515 * t611 - t531 * t905 + t533 * t705 + t535 * t627) * t653) * t654) * t804 + (0.2e1 * t48 * (-t219 * t931 + t697) + 0.2e1 * t90 * (-t137 * t931 + t698) + 0.2e1 * t47 * (t222 * t931 + t871) + 0.2e1 * t89 * (t140 * t931 + t877) + 0.2e1 * t31 * t761 + 0.2e1 * t73 * t765 + ((t73 * t140 + t31 * t222 + t48 * t811 + t817 * t90) * t830 + (t73 * t137 + t31 * t219 + t47 * t811 + t817 * t89) * t831) * t654) * t964 + t905 * t1048 + t550 * t1045 + t551 * t1046 + t615 * t1047 + (t87 * t931 + (-t64 * t655 + t65 * t653) * t654) * t942 + (t88 * t931 + (t653 * t67 - t655 * t66) * t654) * t944 - (((t557 * t659 + t559 * t658 + t746) * t653 - (t556 * t659 + t558 * t658 + t747) * t655) * t654 * t856 + ((-t554 * t655 + t555 * t653 + t633 * t659 + t634 * t658 + t743) * t856 + t632 * t652) * t931) * t652 / 0.2e1 + (t99 * t931 + (t653 * t72 - t655 * t71) * t654) * t934 + (t684 * t973 + t685 * t968 + t814 * t974 + t822 * t969 + t730 * t975 + t733 * t970 + ((t10 * t875 + t14 * t752 + t49 * t897 + t57 * t753) * t830 + (t13 * t752 + t56 * t753 + t700) * t831) * t654 + (t875 * t974 - t885 * t973 + t897 * t969 - t899 * t968) * t931) * t962 + (0.2e1 * t390 * (-t540 * t931 - t621 * t905) + 0.2e1 * t389 * (t541 * t931 - t621 * t906) + (t320 * t744 + t745 * t981) * t654) * t784; -m(6) * ((-t344 * t575 + t462 * t465 + t693) * t965 + (t347 * t575 - t462 * t464 + t694) * t966 + (t344 * t464 - t347 * t465 + t695) * t967 + (t69 * (-t218 * t631 + t383 * t584 - t913) + t68 * (t221 * t631 - t383 * t586 - t911) + t61 * (t218 * t586 - t221 * t584 - t912)) * t828) / 0.2e1 + (t90 * (-t345 * t575 + t463 * t465 + (-t219 * t631 + t384 * t584) * qJD(4) + t772) + t89 * (t348 * t575 - t463 * t464 + (t222 * t631 - t384 * t586) * qJD(4) + t773) + t73 * (t345 * t464 - t348 * t465 + (t219 * t586 - t222 * t584) * qJD(4) + t774)) * t781 + (t161 * (-t423 * t638 + t569 * t596) + t160 * (t424 * t638 - t569 * t595) + t150 * (t423 * t595 - t424 * t596)) * t783 + (-t991 * t710 + (-t1062 * t584 + t497 * t995 + t729 * t996) * t575 + (t1001 * t497 + t1003 * t729 - t1064 * t584) * t465 + (t1000 * t497 + t1002 * t729 - t1063 * t584) * t464 + (t1018 * t631 + t1023 * t586 + t1024 * t584) * qJD(4)) * t957 + (t991 * t630 + (-t1062 * t631 + t590 * t995 + t711 * t996) * t575 + (t1001 * t590 + t1003 * t711 - t1064 * t631) * t465 + (t1000 * t590 + t1002 * t711 - t1063 * t631) * t464 + (t1016 * t631 + t1019 * t586 + t1020 * t584) * qJD(4)) * t950 + (-t991 * t712 + (-t1062 * t586 + t499 * t995 + t728 * t996) * t575 + (t1001 * t499 + t1003 * t728 - t1064 * t586) * t465 + (t1000 * t499 + t1002 * t728 - t1063 * t586) * t464 + (t1017 * t631 + t1021 * t586 + t1022 * t584) * qJD(4)) * t959 + ((t1016 * t854 - t1025 * t659) * t654 - t1031 * t706 - t1058 * t705 + t1019 * t614 + t1020 * t612) * t949 + ((t1017 * t854 - t1026 * t659) * t654 - t1033 * t706 - t1059 * t705 + t1021 * t614 + t1022 * t612) * t958 + ((t1018 * t854 - t1027 * t659) * t654 - t1035 * t706 - t1060 * t705 + t1023 * t614 + t1024 * t612) * t956 - t985 * t902 / 0.2e1 - t986 * t706 / 0.2e1 + (-t1018 * t902 - t1023 * t706 - t1024 * t705) * t961 + (t70 + t1028) * t756 + (t63 + t1029) * t614 / 0.2e1 + (t62 + t1030) * t612 / 0.2e1 + (-t1016 * t902 - t1019 * t706 - t1020 * t705) * t953 + (-t1017 * t902 - t1021 * t706 - t1022 * t705) * t960 + (t584 * t677 - t676 * t710 - t701 * t705) * t943 + (t764 * t973 + t732 * t968 + t878 * t969 + t880 * t975 + t770 * t970 - (t13 * t763 + t56 * t768 + t700) * t832 + ((t57 * (-t426 + t813) + t983) * t771 + (t13 * t766 + t14 * t885 + t56 * t769 + t57 * t899) * t829) * t654 + 0.2e1 * (t56 * t763 + t984) * t614 + 0.2e1 * (t49 * t766 + t982) * t612 - 0.2e1 * (t10 * t766 + t49 * t769 + t699) * t705) * t962 + (-t64 * t705 - t65 * t706 + (t166 * t854 - t659 * t87) * t654 + t751) * t942 + (-t66 * t705 - t67 * t706 + (t167 * t854 - t659 * t88) * t654 + t750) * t944 + (-t71 * t705 - t72 * t706 + (t189 * t854 - t659 * t99) * t654 + t749) * t934 + (t48 * (t219 * t902 - t384 * t705 + t872) + t90 * (-t705 * t184 + t612 * t384 + (t137 * t659 + (-t219 - t426) * t854) * t654 + t815) + t47 * (-t706 * t873 + t882 * t902) + t89 * (t402 - t890 * t706 + t873 * t614 + (t222 * t854 + t659 * t895) * t654) + t31 * (-t219 * t706 - t705 * t882 - t381) + t73 * (-t137 * t706 + t219 * t614 + t612 * t882 - t705 * t895 + t881)) * t780 + (t586 * t677 - t676 * t712 - t701 * t706) * t945 + (-t155 * t705 - t156 * t706 - t189 * t902) * t742 + (-t145 * t705 - t146 * t706 - t167 * t902) * t795 + (-t143 * t705 - t144 * t706 - t166 * t902) * t796 + (t98 * (t369 * t902 - t527 * t705) + t161 * (-t705 * t401 + t612 * t527 + (t241 * t659 - t369 * t854) * t654) + t97 * (-t370 * t902 + t527 * t706) + t160 * (t706 * t401 - t614 * t527 + (-t242 * t659 + t370 * t854) * t654) + t74 * (-t369 * t706 + t370 * t705) + t150 * (-t241 * t706 + t242 * t705 + t748)) * t782 + (t764 * t971 + t732 * t965 + t878 * t966 + t880 * t972 + t770 * t967 - (t17 * t812 + t68 * t818 + t754) * t832 + ((t69 * (-t426 + t884) + t68 * t221) * t771 + (t1040 * t68 + t69 * t136 + t17 * t977 + t18 * t218) * t829) * t654 + (t218 * t967 + t812 * t966) * t614 + (t383 * t965 + t967 * t977) * t612 - (t1040 * t967 + t183 * t965 + t383 * t971 + t977 * t972) * t705) * t963 - m(7) * ((-qJD(6) * t586 + t465 * t978 - t575 * t980 + t693) * t968 + (-qJD(6) * t584 - t464 * t978 + t575 * t979 + t694) * t969 + (-qJD(6) * t631 + t464 * t980 - t465 * t979 + t695) * t970 + (-t49 * t912 - t56 * t911 - t57 * t913 + (-t57 * t885 + t983) * t631 + (-t56 * t867 + t984) * t586 + (-t49 * t875 + t982) * t584) * t828) / 0.2e1 + t705 * t1048 + t847 * t1046 + t846 * t1047 + t848 * t1045 + (t630 * t676 + t631 * t677 - t701 * t902) * t935; (t69 * (t441 * t465 + (-t286 - t288) * t575 + t879) + t68 * (t293 * t575 + (-t439 - t441) * t464 + t886) + t61 * (t288 * t464 + (-t291 - t293) * t465 + t887)) * t779 + (t57 * (t789 * t465 + (-t286 - t791) * t575 + t879) + t56 * (t790 * t575 + (-t439 - t789) * t464 + t886) + t49 * (t791 * t464 + (-t291 - t790) * t465 + t887)) * t778 + (t18 * (-t383 * t710 + t630 * t884 - t350) + t69 * (-t183 * t710 + t383 * t491 + t587 * t884 + t630 * t898 + t893) + t17 * (t221 * t630 - t712 * t874 + t251) + t68 * (t139 * t630 + t221 * t587 + t493 * t874 - t712 * t892 + t900) + t15 * (-t218 * t712 - t710 * t883 - t227) + t61 * (-t136 * t712 + t218 * t493 + t491 * t883 - t710 * t896 + t901)) * t834 / 0.2e1 + (t48 * (-t219 * t630 - t384 * t710) + t90 * (-t137 * t630 - t184 * t710 - t219 * t587 + t384 * t491) + t47 * (t222 * t630 + t384 * t712) + t89 * (t140 * t630 + t184 * t712 + t222 * t587 - t384 * t493) + t31 * (-t219 * t712 + t222 * t710) + t73 * (-t137 * t712 + t140 * t710 + t219 * t493 - t222 * t491)) * t780 + (t90 * (-t289 * t575 + t442 * t465) + t89 * (t294 * t575 - t442 * t464) + t73 * (t289 * t464 - t294 * t465)) * t781 + (-t227 * t975 + t251 * t974 - t350 * t973 + t893 * t968 + t900 * t969 + t901 * t970 + (t813 * t968 + t875 * t969) * t587 + (t810 * t969 + t885 * t970) * t493 + (t816 * t970 + t867 * t968) * t491 + 0.2e1 * (t13 * t875 + t14 * t813 + t56 * t897 + t57 * t821) * t630 - 0.2e1 * (t13 * t810 + t56 * t819 + t700) * t712 - 0.2e1 * (t10 * t816 + t49 * t820 + t699) * t710) * t962 + (t1018 * t630 - t1023 * t712 - t1024 * t710) * t961 + (t1017 * t630 - t1021 * t712 - t1022 * t710) * t960 + (t499 * t989 - t712 * t988 + t728 * t990) * t959 + (t1017 * t587 + t1021 * t493 + t1022 * t491 + t1026 * t630 - t1033 * t712 - t1059 * t710) * t958 + (t497 * t989 - t710 * t988 + t729 * t990) * t957 + (t1018 * t587 + t1023 * t493 + t1024 * t491 + t1027 * t630 - t1035 * t712 - t1060 * t710) * t956 + t1030 * t491 / 0.2e1 + t1029 * t493 / 0.2e1 + (t1016 * t630 - t1019 * t712 - t1020 * t710) * t953 + (t590 * t989 + t630 * t988 + t711 * t990) * t950 + (t1016 * t587 + t1019 * t493 + t1020 * t491 + t1025 * t630 - t1031 * t712 - t1058 * t710) * t949 + t710 * t1061 - t1038 * t712 / 0.2e1 + t1028 * t587 / 0.2e1 + t1037 * t630 / 0.2e1; (-t10 * t711 - t13 * t729 - t14 * t728 + t49 * t894 + t56 * t889 + t57 * t888) * m(7) + (-t15 * t711 - t17 * t729 - t18 * t728 + t61 * t894 + t68 * t889 + t69 * t888) * m(6); (-t10 * t630 + t13 * t710 + t14 * t712 + (t465 * t630 + t575 * t710 - t493) * t57 + (-t464 * t630 - t575 * t712 - t491) * t56 + (-t464 * t710 + t465 * t712 - t587) * t49) * m(7);];
tauc  = t1(:);
