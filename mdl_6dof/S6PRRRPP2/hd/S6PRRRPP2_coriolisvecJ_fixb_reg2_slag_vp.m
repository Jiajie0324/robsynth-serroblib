% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:52:41
% EndTime: 2019-03-08 22:52:53
% DurationCPUTime: 4.75s
% Computational Cost: add. (3979->475), mult. (10090->574), div. (0->0), fcn. (7002->8), ass. (0->234)
t153 = sin(qJ(4));
t156 = cos(qJ(4));
t250 = qJD(3) * t153;
t154 = sin(qJ(3));
t252 = qJD(2) * t154;
t115 = t156 * t252 + t250;
t157 = cos(qJ(3));
t251 = qJD(2) * t157;
t138 = -qJD(4) + t251;
t274 = t115 * t138;
t246 = qJD(4) * t156;
t248 = qJD(3) * t157;
t172 = t153 * t248 + t154 * t246;
t239 = qJD(3) * qJD(4);
t85 = qJD(2) * t172 + t153 * t239;
t339 = t85 - t274;
t243 = t156 * qJD(3);
t113 = t153 * t252 - t243;
t277 = t113 * t138;
t247 = qJD(4) * t153;
t225 = t154 * t247;
t336 = -t157 * t243 + t225;
t84 = t336 * qJD(2) - t156 * t239;
t340 = t84 - t277;
t6 = t339 * t153 + t340 * t156;
t343 = t85 + t274;
t125 = -pkin(3) * t157 - pkin(9) * t154 - pkin(2);
t265 = t156 * t157;
t141 = pkin(8) * t265;
t158 = cos(qJ(2));
t151 = sin(pkin(6));
t255 = qJD(1) * t151;
t221 = t158 * t255;
t155 = sin(qJ(2));
t222 = t155 * t255;
t267 = t153 * t157;
t341 = qJD(4) * t141 + t125 * t247 + t156 * t222 - t221 * t267;
t240 = qJD(2) * qJD(3);
t143 = t154 * t240;
t310 = pkin(4) + pkin(5);
t338 = t310 * t143;
t337 = qJ(5) * t143 - t138 * qJD(5);
t119 = qJD(2) * pkin(8) + t222;
t152 = cos(pkin(6));
t253 = qJD(2) * t151;
t228 = t158 * t253;
t180 = qJD(3) * t152 + t228;
t171 = qJD(1) * t180;
t249 = qJD(3) * t154;
t56 = -t119 * t249 + t157 * t171;
t254 = qJD(1) * t154;
t220 = t152 * t254;
t90 = t157 * t119 + t220;
t78 = qJD(3) * pkin(9) + t90;
t206 = pkin(3) * t154 - pkin(9) * t157;
t118 = t206 * qJD(3);
t88 = (t118 + t222) * qJD(2);
t91 = qJD(2) * t125 - t221;
t218 = t153 * t56 - t156 * t88 + t78 * t246 + t91 * t247;
t35 = t153 * t91 + t156 * t78;
t185 = -t138 * t35 - t218;
t280 = t85 * t156;
t281 = t84 * t153;
t335 = (qJD(4) * (t113 * t153 - t115 * t156) - t280 + t281) * t154 - (t113 * t156 + t115 * t153) * t248;
t224 = t138 * t246;
t39 = (t154 * (-t115 + t250) + t138 * t265) * qJD(2) - t224;
t149 = t154 ^ 2;
t193 = qJD(2) * t149 - t138 * t157;
t276 = t113 * t154;
t334 = (t153 * t193 + t276) * qJD(3) - t154 * t224 - t157 * t85;
t13 = (t115 * t154 + t156 * t193) * qJD(3) + t138 * t225 + t84 * t157;
t132 = t138 * qJ(5);
t29 = -t132 + t35;
t215 = pkin(4) * t143;
t5 = -t215 + t218;
t333 = t138 * t29 + t5;
t332 = t85 * qJ(6) + t113 * qJD(6);
t270 = t152 * t157;
t272 = t151 * t155;
t100 = t154 * t272 - t270;
t101 = t152 * t154 + t157 * t272;
t229 = t155 * t253;
t233 = t151 * t153 * t158;
t209 = t157 * t228;
t64 = -qJD(3) * t100 + t209;
t19 = -qJD(4) * t233 + t101 * t246 + t153 * t64 - t156 * t229;
t210 = t154 * t228;
t65 = qJD(3) * t101 + t210;
t264 = t156 * t158;
t66 = t101 * t153 + t151 * t264;
t331 = t100 * t85 + t65 * t113 + t19 * t138 - t66 * t143;
t20 = -qJD(4) * t66 + t153 * t229 + t64 * t156;
t67 = t101 * t156 - t233;
t330 = -t100 * t84 + t115 * t65 + t20 * t138 - t67 * t143;
t329 = -t156 * t118 + t341;
t89 = qJD(1) * t270 - t154 * t119;
t207 = qJD(3) * pkin(3) + t89;
t175 = t115 * qJ(5) + t207;
t23 = -t310 * t113 + qJD(6) + t175;
t326 = (qJD(6) + t23) * t115;
t34 = -t153 * t78 + t156 * t91;
t260 = qJD(5) - t34;
t325 = 0.2e1 * t337;
t311 = t115 ^ 2;
t324 = -t138 ^ 2 - t311;
t323 = -t153 * qJD(5) - t220;
t312 = t113 ^ 2;
t322 = t311 - t312;
t321 = t20 * t113 - t115 * t19 + t66 * t84 + t67 * t85;
t320 = t85 * pkin(4) + t84 * qJ(5) - t115 * qJD(5);
t87 = (t153 * t155 + t157 * t264) * t255;
t319 = qJ(5) * t249 - t157 * qJD(5) - t87;
t269 = t153 * qJ(5);
t315 = -t310 * t156 - t269;
t314 = qJD(2) * (t138 * t267 - t276) - t138 * t247 - t156 * t143;
t309 = pkin(8) * t153;
t308 = pkin(9) * t115;
t307 = pkin(9) * t138;
t306 = pkin(9) - qJ(6);
t230 = -pkin(4) - t309;
t242 = t156 * qJD(6);
t305 = (-qJ(6) * t248 - t118) * t156 + (qJ(6) * t247 - t242 + (-pkin(5) + t230) * qJD(3)) * t154 + t341;
t258 = t153 * t118 + t125 * t246;
t266 = t154 * t156;
t304 = (-pkin(8) * qJD(3) + qJ(6) * qJD(4)) * t266 + (qJD(6) * t154 + (-pkin(8) * qJD(4) + qJ(6) * qJD(3)) * t157) * t153 + t258 + t319;
t128 = t306 * t156;
t117 = t206 * qJD(2);
t49 = t156 * t117 - t153 * t89;
t303 = (-qJ(6) * t265 - t310 * t154) * qJD(2) - t49 - qJD(4) * t128 + t153 * qJD(6);
t44 = (-t154 * t243 - t157 * t247) * pkin(8) + t258;
t302 = t44 + t319;
t50 = t153 * t117 + t156 * t89;
t40 = qJ(5) * t252 + t50;
t301 = qJ(6) * t153 * t251 + t306 * t247 + t242 + t40;
t300 = t230 * t249 + t329;
t279 = qJ(5) * t156;
t184 = -t310 * t153 + t279;
t299 = (qJD(2) * t184 - t119) * t157 - qJD(4) * t184 + t323;
t298 = t44 - t87;
t297 = t249 * t309 - t329;
t199 = pkin(4) * t153 - t279;
t296 = (qJD(2) * t199 + t119) * t157 - qJD(4) * t199 - t323;
t295 = qJ(5) * t85;
t294 = qJD(2) * pkin(2);
t226 = t119 * t248;
t57 = t154 * t171 + t226;
t10 = t57 + t320;
t293 = t10 * t153;
t292 = t10 * t156;
t36 = pkin(4) * t113 - t175;
t291 = t115 * t36;
t288 = t153 * t207;
t287 = t156 * t207;
t25 = qJ(6) * t113 + t35;
t18 = -t132 + t25;
t286 = t18 * t138;
t285 = t57 * t100;
t284 = t57 * t153;
t283 = t57 * t154;
t282 = t57 * t156;
t278 = t113 * qJ(5);
t275 = t115 * t113;
t161 = qJD(2) ^ 2;
t271 = t151 * t161;
t268 = t153 * t154;
t160 = qJD(3) ^ 2;
t263 = t160 * t154;
t262 = t160 * t157;
t24 = t115 * qJ(6) + t34;
t261 = qJD(5) - t24;
t95 = t153 * t125 + t141;
t150 = t157 ^ 2;
t256 = t149 - t150;
t245 = qJD(5) * t156;
t238 = t153 * t307;
t237 = t156 * t307;
t236 = pkin(9) * t249;
t235 = pkin(9) * t243;
t232 = t155 * t271;
t231 = t154 * t161 * t157;
t223 = t138 * t252;
t217 = -t143 + t275;
t140 = pkin(8) * t267;
t94 = t125 * t156 - t140;
t214 = t113 * t221;
t213 = t115 * t221;
t212 = t154 * t221;
t208 = t157 * t143;
t82 = -qJ(5) * t157 + t95;
t120 = -t221 - t294;
t204 = -t120 - t221;
t201 = (qJD(4) * t113 - t84) * pkin(9);
t200 = pkin(4) * t156 + t269;
t28 = pkin(4) * t138 + t260;
t198 = -t153 * t29 + t156 * t28;
t197 = -t153 * t35 - t156 * t34;
t190 = pkin(8) + t199;
t7 = -t85 * pkin(5) - t180 * t254 - t226 - t320;
t188 = -t7 * t153 - t23 * t246;
t187 = t7 * t156 - t23 * t247;
t186 = t84 * qJ(6) + t218;
t182 = -t153 * t88 - t156 * t56 - t91 * t246 + t247 * t78;
t181 = qJD(2) * t204;
t93 = (-t138 - t251) * t249;
t176 = -pkin(8) + t184;
t3 = -t182 + t337;
t170 = -t138 * t34 + t182;
t169 = qJD(3) * (-t204 - t294);
t27 = -t153 * t277 - t280;
t168 = t84 + t277;
t167 = t186 - t338;
t166 = t283 + t56 * t157 + (-t154 * t90 - t157 * t89) * qJD(3);
t22 = t113 * t172 + t268 * t85;
t148 = t157 * pkin(4);
t127 = t306 * t153;
t121 = -pkin(3) - t200;
t109 = pkin(3) - t315;
t96 = t190 * t154;
t83 = t148 - t94;
t81 = t176 * t154;
t68 = pkin(9) * t280;
t62 = pkin(4) * t115 + t278;
t60 = qJ(6) * t268 + t82;
t58 = t157 * pkin(5) + t140 + t148 + (-qJ(6) * t154 - t125) * t156;
t47 = -t310 * t115 - t278;
t43 = (qJD(4) * t200 - t245) * t154 + t190 * t248;
t42 = -pkin(4) * t252 - t49;
t30 = (t315 * qJD(4) + t245) * t154 + t176 * t248;
t26 = -t156 * t274 - t281;
t21 = -t336 * t115 - t84 * t266;
t11 = t310 * t138 + t261;
t2 = -t115 * qJD(6) + t167;
t1 = t3 + t332;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, -t158 * t271, 0, 0, 0, 0, 0, 0, 0, 0, -t157 * t232 + (-t65 - t210) * qJD(3), t154 * t232 + (-t64 - t209) * qJD(3) (t154 * t65 + t157 * t64 + (t100 * t157 - t101 * t154) * qJD(3)) * qJD(2), t285 + t56 * t101 + t90 * t64 - t89 * t65 + (t120 - t221) * t229, 0, 0, 0, 0, 0, 0, t331, t330, -t321, -t182 * t67 - t19 * t34 + t20 * t35 - t207 * t65 + t218 * t66 + t285, 0, 0, 0, 0, 0, 0, t331, -t321, -t330, t10 * t100 + t19 * t28 + t20 * t29 + t3 * t67 + t36 * t65 + t5 * t66, 0, 0, 0, 0, 0, 0, t331, -t330, t321, t1 * t67 - t100 * t7 + t11 * t19 + t18 * t20 + t2 * t66 - t23 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t208, -0.2e1 * t256 * t240, t262, -0.2e1 * t208, -t263, 0, -pkin(8) * t262 + t154 * t169, pkin(8) * t263 + t157 * t169 (-t149 - t150) * qJD(2) * t221 + t166 ((t154 * t89 - t157 * t90) * t158 + (-t120 - t294) * t155) * t255 + t166 * pkin(8), t21, t335, t13, t22, -t334, t93, -t297 * t138 + (t218 + (pkin(8) * t113 - t288) * qJD(3)) * t157 + (-t214 - t207 * t246 + pkin(8) * t85 + t284 + (qJD(2) * t94 + t34) * qJD(3)) * t154, t298 * t138 + (-t182 + (pkin(8) * t115 - t287) * qJD(3)) * t157 + (-t213 + t207 * t247 - pkin(8) * t84 + t282 + (-qJD(2) * t95 - t35) * qJD(3)) * t154, t84 * t94 - t85 * t95 - t297 * t115 - t298 * t113 + t197 * t248 + (t153 * t182 + t156 * t218 + (t153 * t34 - t156 * t35) * qJD(4)) * t154, t207 * t212 - t182 * t95 - t218 * t94 + t298 * t35 + t297 * t34 + (-t207 * t248 + t283) * pkin(8), t21, t13, -t335, t93, t334, t22, t43 * t113 + t96 * t85 + (t250 * t36 + t5) * t157 + t300 * t138 + (-t214 + t36 * t246 + t293 + (-qJD(2) * t83 - t28) * qJD(3)) * t154, -t82 * t85 - t83 * t84 + t300 * t115 - t302 * t113 + t198 * t248 + (-t153 * t3 + t156 * t5 + (-t153 * t28 - t156 * t29) * qJD(4)) * t154, -t43 * t115 + t96 * t84 + (-t243 * t36 - t3) * t157 - t302 * t138 + (t213 + t36 * t247 - t292 + (qJD(2) * t82 + t29) * qJD(3)) * t154, t10 * t96 + t3 * t82 + t5 * t83 + (t43 - t212) * t36 + t302 * t29 + t300 * t28, t21, -t335, -t13, t22, -t334, t93, -t30 * t113 - t81 * t85 + (-t23 * t250 + t2) * t157 + t305 * t138 + (-t214 + (-qJD(2) * t58 - t11) * qJD(3) + t188) * t154, t30 * t115 - t81 * t84 + (t23 * t243 - t1) * t157 - t304 * t138 + (t213 + (qJD(2) * t60 + t18) * qJD(3) + t187) * t154, t58 * t84 + t60 * t85 - t305 * t115 + t304 * t113 + (-t11 * t156 + t153 * t18) * t248 + (t1 * t153 - t156 * t2 + (t11 * t153 + t156 * t18) * qJD(4)) * t154, t1 * t60 + t2 * t58 + t7 * t81 + (t30 + t212) * t23 + t304 * t18 + t305 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, t256 * t161, 0, t231, 0, 0, t154 * t181, t157 * t181, 0, 0, t26, -t6, t39, t27, -t314, t223, -pkin(3) * t85 - t90 * t113 + t49 * t138 - t282 + (t237 - t288) * qJD(4) + (-t154 * t34 + (t157 * t207 - t236) * t153) * qJD(2), pkin(3) * t84 - t90 * t115 - t50 * t138 + t284 + (-t238 - t287) * qJD(4) + (t207 * t265 + (t35 - t235) * t154) * qJD(2), t113 * t50 + t115 * t49 - t68 + (t34 * t251 - t182 + (-t34 + t308) * qJD(4)) * t156 + (t201 - t185) * t153, -t57 * pkin(3) - t34 * t49 - t35 * t50 + t207 * t90 + (qJD(4) * t197 + t153 * t218 - t156 * t182) * pkin(9), t26, t39, t6, t223, t314, t27, -t292 + t121 * t85 - t42 * t138 - t296 * t113 + (t153 * t36 + t237) * qJD(4) + (t154 * t28 + (-t157 * t36 - t236) * t153) * qJD(2), t40 * t113 - t42 * t115 - t68 + (-t28 * t251 + t3 + (t28 + t308) * qJD(4)) * t156 + (t201 + t333) * t153, -t293 + t121 * t84 + t40 * t138 + t296 * t115 + (-t156 * t36 + t238) * qJD(4) + (t36 * t265 + (-t29 + t235) * t154) * qJD(2), t10 * t121 - t28 * t42 - t29 * t40 - t296 * t36 + (qJD(4) * t198 + t5 * t153 + t3 * t156) * pkin(9), t26, t6, -t39, t27, -t314, t223, -t109 * t85 - t303 * t138 + t299 * t113 + (t23 * t267 + (-qJD(3) * t127 + t11) * t154) * qJD(2) + t187, -t109 * t84 + t301 * t138 - t299 * t115 + (-t23 * t265 + (qJD(3) * t128 - t18) * t154) * qJD(2) - t188, t127 * t84 + t128 * t85 + t303 * t115 - t301 * t113 + (t11 * t138 - t1) * t156 + (-t2 - t286) * t153, t1 * t128 + t7 * t109 - t303 * t11 + t2 * t127 - t301 * t18 - t299 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, t322, -t168, -t275, -t343, t143, t115 * t207 + t185, -t113 * t207 + t170, 0, 0, t275, -t168, -t322, t143, t343, -t275, -t113 * t62 + t185 + 0.2e1 * t215 - t291, pkin(4) * t84 - t295 + (t29 - t35) * t115 + (t28 - t260) * t113, -t113 * t36 + t115 * t62 - t170 + t325, -t5 * pkin(4) + t3 * qJ(5) + t260 * t29 - t28 * t35 - t36 * t62, t275, -t322, t168, -t275, -t343, t143, t113 * t47 - t138 * t25 - t186 + t326 + 0.2e1 * t338, t113 * t23 - t115 * t47 + t138 * t24 - t182 + t325 + t332, t295 - t310 * t84 + (-t18 + t25) * t115 + (-t11 + t261) * t113, t1 * qJ(5) - t11 * t25 + t18 * t261 - t2 * t310 - t23 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t168, t324, t291 + t333, 0, 0, 0, 0, 0, 0, t217, t324, t168, t167 + t286 - t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339, -t340, -t311 - t312, t11 * t115 - t18 * t113 + t7;];
tauc_reg  = t4;
