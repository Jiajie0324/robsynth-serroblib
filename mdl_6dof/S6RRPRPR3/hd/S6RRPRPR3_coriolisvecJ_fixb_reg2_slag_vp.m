% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:19:08
% EndTime: 2019-03-09 10:19:29
% DurationCPUTime: 9.24s
% Computational Cost: add. (18952->564), mult. (47813->750), div. (0->0), fcn. (36586->10), ass. (0->266)
t277 = cos(qJ(2));
t358 = cos(pkin(10));
t306 = t358 * t277;
t258 = qJD(1) * t306;
t271 = sin(pkin(10));
t275 = sin(qJ(2));
t322 = qJD(1) * t275;
t233 = t271 * t322 - t258;
t316 = pkin(2) * t322;
t249 = t271 * t277 + t275 * t358;
t324 = qJD(1) * t249;
t163 = pkin(3) * t324 + pkin(8) * t233 + t316;
t376 = -qJ(3) - pkin(7);
t256 = t376 * t277;
t252 = qJD(1) * t256;
t240 = t271 * t252;
t255 = t376 * t275;
t251 = qJD(1) * t255;
t185 = t251 * t358 + t240;
t274 = sin(qJ(4));
t276 = cos(qJ(4));
t113 = t274 * t163 + t276 * t185;
t262 = pkin(2) * t271 + pkin(8);
t329 = qJ(5) + t262;
t303 = qJD(4) * t329;
t341 = t233 * t274;
t407 = -qJ(5) * t341 + t276 * qJD(5) - t274 * t303 - t113;
t112 = t276 * t163 - t185 * t274;
t406 = -pkin(4) * t324 - t274 * qJD(5) - t112 + (-qJ(5) * t233 - t303) * t276;
t318 = t276 * qJD(2);
t196 = t274 * t324 - t318;
t198 = qJD(2) * t274 + t276 * t324;
t270 = sin(pkin(11));
t272 = cos(pkin(11));
t128 = t196 * t272 + t270 * t198;
t273 = sin(qJ(6));
t292 = -t196 * t270 + t272 * t198;
t383 = cos(qJ(6));
t311 = qJD(6) * t383;
t319 = qJD(6) * t273;
t317 = qJD(1) * qJD(2);
t310 = t275 * t317;
t257 = t271 * t310;
t284 = qJD(2) * t258 - t257;
t321 = qJD(4) * t274;
t145 = -qJD(4) * t318 - t276 * t284 + t321 * t324;
t283 = t274 * t284;
t146 = qJD(4) * t198 + t283;
t87 = -t145 * t270 + t272 * t146;
t88 = -t145 * t272 - t146 * t270;
t23 = t128 * t311 + t273 * t87 + t292 * t319 - t383 * t88;
t225 = qJD(4) + t233;
t217 = qJD(6) + t225;
t70 = t128 * t383 + t273 * t292;
t371 = t217 * t70;
t405 = -t23 + t371;
t378 = t70 ^ 2;
t396 = -t273 * t128 + t292 * t383;
t379 = t396 ^ 2;
t404 = -t378 + t379;
t377 = t70 * t396;
t248 = t270 * t276 + t272 * t274;
t151 = t248 * t233;
t388 = t248 * qJD(4) + t151;
t246 = t270 * t274 - t272 * t276;
t236 = t246 * qJD(4);
t326 = -t246 * t233 - t236;
t266 = -pkin(2) * t277 - pkin(1);
t323 = qJD(1) * t266;
t253 = qJD(3) + t323;
t150 = t233 * pkin(3) - pkin(8) * t324 + t253;
t373 = qJD(2) * pkin(2);
t243 = t251 + t373;
t307 = t358 * t252;
t178 = t271 * t243 - t307;
t171 = qJD(2) * pkin(8) + t178;
t99 = t276 * t150 - t171 * t274;
t80 = -qJ(5) * t198 + t99;
t65 = pkin(4) * t225 + t80;
t100 = t150 * t274 + t171 * t276;
t81 = -qJ(5) * t196 + t100;
t74 = t270 * t81;
t39 = t272 * t65 - t74;
t394 = pkin(9) * t292;
t25 = pkin(5) * t225 + t39 - t394;
t368 = t272 * t81;
t40 = t270 * t65 + t368;
t400 = pkin(9) * t128;
t27 = t40 - t400;
t235 = t249 * qJD(2);
t218 = qJD(1) * t235;
t308 = qJD(2) * t376;
t229 = t277 * qJD(3) + t275 * t308;
t207 = t229 * qJD(1);
t230 = -t275 * qJD(3) + t277 * t308;
t208 = t230 * qJD(1);
t144 = t207 * t358 + t271 * t208;
t259 = pkin(2) * t310;
t149 = t218 * pkin(3) - pkin(8) * t284 + t259;
t56 = -qJD(4) * t100 - t274 * t144 + t276 * t149;
t32 = t218 * pkin(4) + t145 * qJ(5) - t198 * qJD(5) + t56;
t320 = qJD(4) * t276;
t55 = t276 * t144 + t274 * t149 + t150 * t320 - t171 * t321;
t35 = -qJ(5) * t146 - qJD(5) * t196 + t55;
t12 = -t270 * t35 + t272 * t32;
t6 = pkin(5) * t218 - pkin(9) * t88 + t12;
t13 = t270 * t32 + t272 * t35;
t7 = -pkin(9) * t87 + t13;
t282 = -t25 * t311 + t27 * t319 - t273 * t6 - t383 * t7;
t177 = t243 * t358 + t240;
t170 = -qJD(2) * pkin(3) - t177;
t123 = t196 * pkin(4) + qJD(5) + t170;
t66 = t128 * pkin(5) + t123;
t403 = t66 * t70 + t282;
t361 = -t270 * t407 + t406 * t272;
t360 = t406 * t270 + t272 * t407;
t24 = qJD(6) * t396 + t273 * t88 + t383 * t87;
t367 = t396 * t217;
t402 = -t24 + t367;
t9 = t273 * t25 + t27 * t383;
t2 = -qJD(6) * t9 - t273 * t7 + t383 * t6;
t401 = -t396 * t66 + t2;
t363 = t246 * t311 + t248 * t319 + t388 * t273 - t326 * t383;
t181 = -t273 * t246 + t248 * t383;
t362 = qJD(6) * t181 + t326 * t273 + t388 * t383;
t399 = pkin(5) * t324 + t326 * pkin(9) - t361;
t398 = -t388 * pkin(9) + t360;
t397 = t128 * t292;
t287 = -t271 * t275 + t306;
t239 = t287 * qJD(2);
t312 = t249 * t320;
t289 = t239 * t274 + t312;
t395 = -0.2e1 * t317;
t393 = -t225 * t99 + t55;
t392 = t100 * t225 + t56;
t302 = t225 * t274;
t391 = t198 * t302;
t176 = -pkin(3) * t287 - pkin(8) * t249 + t266;
t191 = t271 * t255 - t256 * t358;
t186 = t276 * t191;
t121 = t274 * t176 + t186;
t180 = t246 * t383 + t248 * t273;
t387 = t180 * t23 - t362 * t396;
t386 = t181 * t218 - t217 * t363;
t385 = -t248 * t218 - t225 * t326;
t384 = t324 ^ 2;
t382 = pkin(2) * t275;
t381 = pkin(4) * t270;
t380 = t274 * pkin(4);
t244 = t329 * t274;
t245 = t329 * t276;
t172 = -t272 * t244 - t245 * t270;
t138 = -pkin(9) * t248 + t172;
t173 = -t270 * t244 + t272 * t245;
t139 = -pkin(9) * t246 + t173;
t83 = t273 * t138 + t139 * t383;
t375 = qJD(6) * t83 + t273 * t398 + t383 * t399;
t82 = t138 * t383 - t273 * t139;
t374 = -qJD(6) * t82 + t273 * t399 - t383 * t398;
t291 = -qJ(5) * t239 - qJD(5) * t249;
t162 = t229 * t358 + t271 * t230;
t315 = t275 * t373;
t164 = pkin(3) * t235 - pkin(8) * t239 + t315;
t304 = -t274 * t162 + t276 * t164;
t49 = t235 * pkin(4) + t291 * t276 + (-t186 + (qJ(5) * t249 - t176) * t274) * qJD(4) + t304;
t313 = t276 * t162 + t274 * t164 + t176 * t320;
t53 = -qJ(5) * t312 + (-qJD(4) * t191 + t291) * t274 + t313;
t21 = t270 * t49 + t272 * t53;
t45 = t272 * t80 - t74;
t369 = t324 * t70;
t366 = t396 * t324;
t263 = pkin(4) * t272 + pkin(5);
t228 = t273 * t263 + t381 * t383;
t44 = -t270 * t80 - t368;
t28 = t44 + t400;
t29 = t45 - t394;
t365 = t228 * qJD(6) - t273 * t29 + t28 * t383;
t337 = t249 * t274;
t105 = -qJ(5) * t337 + t121;
t120 = t276 * t176 - t191 * t274;
t336 = t249 * t276;
t92 = -pkin(4) * t287 - qJ(5) * t336 + t120;
t59 = t272 * t105 + t270 * t92;
t227 = t263 * t383 - t273 * t381;
t364 = -t227 * qJD(6) + t273 * t28 + t29 * t383;
t184 = t251 * t271 - t307;
t135 = -pkin(4) * t341 + t184;
t359 = pkin(5) * t151 - t135 + (pkin(5) * t248 + t380) * qJD(4);
t356 = t292 ^ 2;
t355 = t292 * t225;
t354 = t128 ^ 2;
t353 = t128 * t324;
t352 = t128 * t225;
t351 = t292 * t324;
t190 = -t358 * t255 - t256 * t271;
t327 = -t271 * t207 + t358 * t208;
t350 = t327 * t190;
t349 = t145 * t274;
t348 = t146 * t276;
t346 = t196 * t233;
t345 = t196 * t324;
t344 = t198 * t196;
t343 = t198 * t324;
t182 = t218 * t287;
t342 = t225 * t324;
t340 = t324 * t233;
t134 = t274 * t146;
t333 = t274 * t218;
t205 = t276 * t218;
t279 = qJD(1) ^ 2;
t332 = t277 * t279;
t278 = qJD(2) ^ 2;
t331 = t278 * t275;
t330 = t278 * t277;
t328 = -t196 * t320 - t134;
t325 = t275 ^ 2 - t277 ^ 2;
t314 = t275 * t332;
t20 = -t270 * t53 + t272 * t49;
t58 = -t105 * t270 + t272 * t92;
t305 = pkin(1) * t395;
t161 = t229 * t271 - t358 * t230;
t301 = t225 * t276;
t300 = 0.2e1 * t324;
t299 = -t181 * t24 + t363 * t70;
t298 = t277 * t310;
t94 = pkin(4) * t146 - t327;
t297 = -t180 * t218 - t217 * t362;
t264 = -pkin(2) * t358 - pkin(3);
t296 = pkin(4) * t321 - t135;
t295 = -t128 * t326 - t248 * t87;
t294 = -t246 * t218 - t225 * t388;
t159 = pkin(4) * t337 + t190;
t293 = -t100 * t274 - t276 * t99;
t114 = pkin(4) * t289 + t161;
t290 = t205 + (-t321 - t341) * t225;
t167 = t246 * t249;
t43 = -pkin(5) * t287 + pkin(9) * t167 + t58;
t166 = t248 * t249;
t48 = -pkin(9) * t166 + t59;
t18 = -t273 * t48 + t383 * t43;
t19 = t273 * t43 + t383 * t48;
t109 = -t273 * t166 - t167 * t383;
t288 = t239 * t276 - t249 * t321;
t54 = pkin(5) * t87 + t94;
t254 = -t276 * pkin(4) + t264;
t285 = t170 * t225 - t218 * t262;
t280 = t88 * t246 + t292 * t388;
t231 = t233 ^ 2;
t195 = t246 * pkin(5) + t254;
t122 = t225 * t235 - t182;
t111 = pkin(5) * t166 + t159;
t110 = pkin(4) * t198 + pkin(5) * t292;
t108 = t166 * t383 - t167 * t273;
t107 = qJD(4) * t166 + t239 * t246;
t106 = t236 * t249 - t239 * t248;
t62 = -qJD(4) * t121 + t304;
t61 = -t191 * t321 + t313;
t60 = -pkin(5) * t106 + t114;
t38 = qJD(6) * t109 - t106 * t383 - t273 * t107;
t37 = -t273 * t106 + t107 * t383 + t166 * t311 - t167 * t319;
t17 = pkin(9) * t106 + t21;
t16 = pkin(5) * t235 + pkin(9) * t107 + t20;
t8 = t25 * t383 - t273 * t27;
t4 = -qJD(6) * t19 + t16 * t383 - t273 * t17;
t3 = qJD(6) * t18 + t273 * t16 + t17 * t383;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t298, t325 * t395, t330, -0.2e1 * t298, -t331, 0, -pkin(7) * t330 + t275 * t305, pkin(7) * t331 + t277 * t305, 0, 0, t239 * t324 + t249 * t284, -t249 * t218 - t239 * t233 - t235 * t324 + t284 * t287, t239 * qJD(2), t233 * t235 - t182, -t235 * qJD(2), 0, t266 * t218 + t253 * t235 + (-t161 + (-qJD(1) * t287 + t233) * t382) * qJD(2), t253 * t239 - t266 * t257 + (t258 * t266 + t300 * t382 - t162) * qJD(2), t144 * t287 + t161 * t324 - t162 * t233 - t177 * t239 - t178 * t235 + t190 * t284 - t191 * t218 - t249 * t327, -t350 + t144 * t191 - t177 * t161 + t178 * t162 + (t253 + t323) * t315, -t145 * t336 + t198 * t288 (-t196 * t276 - t198 * t274) * t239 + (t349 - t348 + (t196 * t274 - t198 * t276) * qJD(4)) * t249, t145 * t287 + t198 * t235 + t205 * t249 + t225 * t288, t134 * t249 + t196 * t289, t146 * t287 - t196 * t235 - t225 * t289 - t249 * t333, t122, t120 * t218 + t190 * t146 + t161 * t196 + t170 * t289 + t62 * t225 + t99 * t235 - t287 * t56 - t327 * t337, -t100 * t235 - t121 * t218 - t190 * t145 + t161 * t198 + t170 * t288 - t61 * t225 + t287 * t55 - t327 * t336, t120 * t145 - t121 * t146 - t61 * t196 - t62 * t198 + t293 * t239 + (-t55 * t274 - t56 * t276 + (-t100 * t276 + t274 * t99) * qJD(4)) * t249, t100 * t61 + t120 * t56 + t121 * t55 + t161 * t170 + t62 * t99 - t350, -t107 * t292 - t167 * t88, t106 * t292 + t107 * t128 - t166 * t88 + t167 * t87, -t107 * t225 - t167 * t218 + t235 * t292 - t287 * t88, -t106 * t128 + t166 * t87, t106 * t225 - t128 * t235 - t166 * t218 + t287 * t87, t122, -t106 * t123 + t114 * t128 - t12 * t287 + t159 * t87 + t166 * t94 + t20 * t225 + t218 * t58 + t235 * t39, -t107 * t123 + t114 * t292 + t13 * t287 + t159 * t88 - t167 * t94 - t21 * t225 - t218 * t59 - t235 * t40, t106 * t40 + t107 * t39 + t12 * t167 - t128 * t21 - t13 * t166 - t20 * t292 - t58 * t88 - t59 * t87, t114 * t123 + t12 * t58 + t13 * t59 + t159 * t94 + t20 * t39 + t21 * t40, -t109 * t23 - t37 * t396, t108 * t23 - t109 * t24 + t37 * t70 - t38 * t396, t109 * t218 - t217 * t37 + t23 * t287 + t235 * t396, t108 * t24 + t38 * t70, -t108 * t218 - t217 * t38 - t235 * t70 + t24 * t287, t217 * t235 - t182, t108 * t54 + t111 * t24 + t18 * t218 - t2 * t287 + t217 * t4 + t235 * t8 + t38 * t66 + t60 * t70, t109 * t54 - t111 * t23 - t19 * t218 - t217 * t3 - t235 * t9 - t282 * t287 - t37 * t66 + t396 * t60, t108 * t282 - t109 * t2 + t18 * t23 - t19 * t24 - t3 * t70 + t37 * t8 - t38 * t9 - t396 * t4, t111 * t54 + t18 * t2 - t19 * t282 + t3 * t9 + t4 * t8 + t60 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314, t325 * t279, 0, t314, 0, 0, t279 * pkin(1) * t275, pkin(1) * t332, 0, 0, t340, -t231 + t384, -t257 + (t258 + t233) * qJD(2), -t340, 0, 0, qJD(2) * t184 - t233 * t316 - t253 * t324 + t327, t185 * qJD(2) + t253 * t233 - t316 * t324 - t144 (t178 - t184) * t324 + (t185 - t177) * t233 + (-t271 * t218 - t284 * t358) * pkin(2), t177 * t184 - t178 * t185 + (t144 * t271 - t253 * t322 + t327 * t358) * pkin(2), t198 * t301 - t349 (-t145 - t346) * t276 - t391 + t328, t225 * t301 + t333 - t343, t196 * t302 - t348, t290 + t345, -t342, t327 * t276 + t264 * t146 - t184 * t196 - t99 * t324 + (-t262 * t320 - t112) * t225 + t285 * t274, t100 * t324 - t327 * t274 - t264 * t145 - t184 * t198 + (t262 * t321 + t113) * t225 + t285 * t276, t112 * t198 + t113 * t196 + (-t146 * t262 - t233 * t99 + t55 + (t198 * t262 - t99) * qJD(4)) * t276 + (-t100 * t233 - t145 * t262 - t56 + (t196 * t262 - t100) * qJD(4)) * t274, -t100 * t113 - t99 * t112 - t327 * t264 - t170 * t184 + (qJD(4) * t293 - t56 * t274 + t55 * t276) * t262, t88 * t248 + t292 * t326, -t280 + t295, -t351 - t385, t128 * t388 + t87 * t246, t294 + t353, -t342, t123 * t151 - t135 * t128 + t172 * t218 - t39 * t324 + t94 * t246 + t254 * t87 + t361 * t225 + (t123 * t248 + t128 * t380) * qJD(4), t123 * t326 - t173 * t218 - t225 * t360 + t94 * t248 + t254 * t88 + t292 * t296 + t324 * t40, -t12 * t248 - t128 * t360 - t13 * t246 - t172 * t88 - t173 * t87 - t292 * t361 - t326 * t39 - t388 * t40, t12 * t172 + t123 * t296 + t13 * t173 + t94 * t254 + t360 * t40 + t361 * t39, -t23 * t181 - t363 * t396, t299 + t387, -t366 + t386, t24 * t180 + t362 * t70, t297 + t369, -t217 * t324, t54 * t180 + t195 * t24 - t217 * t375 + t82 * t218 - t324 * t8 + t359 * t70 + t362 * t66, t54 * t181 - t195 * t23 + t217 * t374 - t83 * t218 + t324 * t9 + t359 * t396 - t363 * t66, t180 * t282 - t2 * t181 + t82 * t23 - t83 * t24 - t362 * t9 + t363 * t8 + t374 * t70 + t375 * t396, t54 * t195 + t2 * t82 - t282 * t83 + t359 * t66 - t374 * t9 - t375 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300 * qJD(2), -t257 + (t258 - t233) * qJD(2), -t231 - t384, t177 * t324 + t178 * t233 + t259, 0, 0, 0, 0, 0, 0, t290 - t345, -t225 ^ 2 * t276 - t333 - t343 (t145 - t346) * t276 + t391 + t328, -t170 * t324 + t274 * t393 + t276 * t392, 0, 0, 0, 0, 0, 0, t294 - t353, -t351 + t385, t280 + t295, -t12 * t246 - t123 * t324 + t13 * t248 + t326 * t40 - t388 * t39, 0, 0, 0, 0, 0, 0, t297 - t369, -t366 - t386, t299 - t387, -t2 * t180 - t181 * t282 - t324 * t66 - t362 * t8 - t363 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t196 ^ 2 + t198 ^ 2, t196 * t225 - t145, -t344, -t283 + (-qJD(4) + t225) * t198, t218, -t170 * t198 + t392, t170 * t196 - t393, 0, 0, t397, -t354 + t356, t88 + t352, -t397, -t87 + t355, t218, -t123 * t292 - t44 * t225 + (-t128 * t198 + t218 * t272) * pkin(4) + t12, t123 * t128 + t45 * t225 + (-t198 * t292 - t218 * t270) * pkin(4) - t13 (-t270 * t87 - t272 * t88) * pkin(4) + (t40 + t44) * t292 + (t45 - t39) * t128, -t39 * t44 - t40 * t45 + (t12 * t272 - t123 * t198 + t13 * t270) * pkin(4), t377, t404, t405, -t377, t402, t218, -t110 * t70 - t217 * t365 + t227 * t218 + t401, -t110 * t396 + t217 * t364 - t228 * t218 + t403, t227 * t23 - t228 * t24 + (t365 + t9) * t396 + (t364 - t8) * t70, -t66 * t110 + t2 * t227 - t228 * t282 - t364 * t9 - t365 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87 + t355, t88 - t352, -t354 - t356, t128 * t40 + t292 * t39 + t94, 0, 0, 0, 0, 0, 0, t24 + t367, -t23 - t371, -t378 - t379, t396 * t8 + t70 * t9 + t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, t404, t405, -t377, t402, t218, t9 * t217 + t401, t8 * t217 + t403, 0, 0;];
tauc_reg  = t1;
