% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 13:20
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRPR3_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR3_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR3_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR3_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR3_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR3_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 13:18:10
% EndTime: 2019-05-06 13:18:37
% DurationCPUTime: 15.12s
% Computational Cost: add. (129316->670), mult. (302185->977), div. (0->0), fcn. (224441->12), ass. (0->397)
t350 = sin(pkin(10));
t352 = cos(pkin(10));
t359 = cos(qJ(2));
t403 = qJD(1) * t359;
t356 = sin(qJ(2));
t404 = qJD(1) * t356;
t324 = t350 * t404 - t352 * t403;
t321 = qJD(4) + t324;
t451 = t321 ^ 2;
t326 = t350 * t403 + t352 * t404;
t355 = sin(qJ(4));
t358 = cos(qJ(4));
t308 = -t358 * qJD(2) + t326 * t355;
t309 = qJD(2) * t355 + t326 * t358;
t349 = sin(pkin(11));
t351 = cos(pkin(11));
t276 = t351 * t308 + t309 * t349;
t453 = t276 ^ 2;
t230 = -t451 - t453;
t278 = -t308 * t349 + t309 * t351;
t239 = t278 * t276;
t340 = t356 * qJDD(1);
t393 = qJD(1) * qJD(2);
t384 = t359 * t393;
t331 = t340 + t384;
t341 = t359 * qJDD(1);
t385 = t356 * t393;
t332 = t341 - t385;
t377 = t331 * t350 - t352 * t332;
t300 = qJDD(4) + t377;
t457 = -t239 + t300;
t465 = t351 * t457;
t166 = t230 * t349 + t465;
t347 = t359 ^ 2;
t445 = sin(qJ(1));
t446 = cos(qJ(1));
t368 = g(1) * t446 + g(2) * t445;
t435 = qJDD(1) * pkin(7);
t363 = -t368 + t435;
t405 = qJ(3) * qJD(2);
t441 = t356 * g(3);
t449 = qJD(2) ^ 2;
t279 = t359 * t363 - t441 - t449 * pkin(2) + t332 * qJ(3) + (t356 * t405 + (-pkin(1) * t359 - pkin(2) * t347) * qJD(1)) * qJD(1);
t440 = t359 * g(3);
t360 = -t356 * t363 - t440 - t331 * qJ(3) + qJDD(2) * pkin(2) + (t359 * t405 + (t359 * pkin(2) + pkin(1)) * t404) * qJD(1);
t227 = -0.2e1 * qJD(3) * t324 + t352 * t279 + t350 * t360;
t293 = pkin(3) * t324 - pkin(8) * t326;
t203 = -pkin(3) * t449 + qJDD(2) * pkin(8) - t293 * t324 + t227;
t373 = g(1) * t445 - t446 * g(2);
t367 = qJDD(1) * pkin(1) + t373;
t450 = qJD(1) ^ 2;
t281 = (qJ(3) * t347 + pkin(7)) * t450 + t332 * pkin(2) - qJDD(3) - (qJD(2) * pkin(2) - qJ(3) * t404) * t404 + t367;
t402 = qJD(2) * t326;
t284 = t377 + t402;
t303 = t331 * t352 + t332 * t350;
t319 = qJD(2) * t324;
t286 = t303 - t319;
t212 = pkin(3) * t284 - t286 * pkin(8) - t281;
t160 = t203 * t355 - t358 * t212;
t369 = -qJDD(2) * t355 - t303 * t358;
t264 = -qJD(4) * t308 - t369;
t291 = t321 * t308;
t244 = t264 + t291;
t283 = t309 * t308;
t455 = -t283 + t300;
t131 = pkin(4) * t455 - qJ(5) * t244 - t160;
t161 = t358 * t203 + t355 * t212;
t288 = pkin(4) * t321 - qJ(5) * t309;
t370 = qJDD(2) * t358 - t303 * t355;
t365 = -qJD(4) * t309 + t370;
t452 = t308 ^ 2;
t136 = -pkin(4) * t452 + qJ(5) * t365 - t321 * t288 + t161;
t372 = -0.2e1 * qJD(5) * t278 + t351 * t131 - t136 * t349;
t468 = pkin(4) * t166 + t372;
t467 = t349 * t457;
t301 = t326 * t324;
t454 = qJDD(2) - t301;
t466 = t350 * t454;
t464 = t352 * t454;
t354 = sin(qJ(6));
t357 = cos(qJ(6));
t233 = t357 * t276 + t278 * t354;
t235 = -t276 * t354 + t278 * t357;
t183 = t235 * t233;
t299 = qJDD(6) + t300;
t459 = -t183 + t299;
t463 = t354 * t459;
t462 = t355 * t455;
t461 = t357 * t459;
t460 = t358 * t455;
t222 = t351 * t264 + t349 * t365;
t380 = t264 * t349 - t351 * t365;
t155 = -t233 * qJD(6) + t357 * t222 - t354 * t380;
t316 = qJD(6) + t321;
t223 = t316 * t233;
t458 = -t223 + t155;
t259 = t321 * t276;
t456 = -t259 + t222;
t199 = t259 + t222;
t381 = t222 * t354 + t357 * t380;
t126 = (qJD(6) - t316) * t235 + t381;
t240 = (qJD(4) - t321) * t309 - t370;
t231 = t233 ^ 2;
t232 = t235 ^ 2;
t274 = t278 ^ 2;
t307 = t309 ^ 2;
t315 = t316 ^ 2;
t322 = t324 ^ 2;
t323 = t326 ^ 2;
t448 = 0.2e1 * qJD(3);
t398 = qJD(5) * t276;
t269 = -0.2e1 * t398;
t407 = t349 * t131 + t351 * t136;
t79 = t269 + t407;
t50 = t349 * t79 + t351 * t372;
t447 = pkin(4) * t50;
t444 = pkin(3) * t350;
t422 = t278 * t321;
t196 = t380 - t422;
t147 = -t196 * t349 - t199 * t351;
t443 = pkin(4) * t147;
t71 = pkin(5) * t457 - pkin(9) * t199 + t372;
t253 = pkin(5) * t321 - pkin(9) * t278;
t72 = -pkin(5) * t453 - pkin(9) * t380 - t321 * t253 + t79;
t41 = t354 * t72 - t357 * t71;
t42 = t354 * t71 + t357 * t72;
t25 = t354 * t42 - t357 * t41;
t439 = t25 * t349;
t438 = t25 * t351;
t437 = t355 * t50;
t436 = t358 * t50;
t379 = t279 * t350 - t352 * t360;
t202 = -qJDD(2) * pkin(3) - t449 * pkin(8) + (t448 + t293) * t326 + t379;
t157 = -t365 * pkin(4) - t452 * qJ(5) + t288 * t309 + qJDD(5) + t202;
t112 = pkin(5) * t380 - pkin(9) * t453 + t253 * t278 + t157;
t434 = t112 * t354;
t433 = t112 * t357;
t432 = t157 * t349;
t431 = t157 * t351;
t171 = t183 + t299;
t430 = t171 * t354;
t429 = t171 * t357;
t428 = t202 * t355;
t427 = t202 * t358;
t216 = t239 + t300;
t426 = t216 * t349;
t425 = t216 * t351;
t251 = t283 + t300;
t424 = t251 * t355;
t423 = t251 * t358;
t421 = t281 * t350;
t420 = t281 * t352;
t297 = qJDD(2) + t301;
t419 = t297 * t350;
t418 = t297 * t352;
t417 = t300 * t350;
t416 = t316 * t354;
t415 = t316 * t357;
t414 = t321 * t349;
t413 = t321 * t351;
t412 = t321 * t355;
t411 = t321 * t358;
t226 = t326 * t448 + t379;
t173 = -t226 * t352 + t227 * t350;
t410 = t356 * t173;
t339 = t359 * t450 * t356;
t409 = t356 * (qJDD(2) + t339);
t408 = t359 * (qJDD(2) - t339);
t401 = qJD(2) * t350;
t400 = qJD(2) * t352;
t395 = qJD(4) + t321;
t392 = t350 * t183;
t391 = t352 * t183;
t390 = t350 * t239;
t389 = t352 * t239;
t388 = t350 * t283;
t387 = t352 * t283;
t386 = -pkin(3) * t352 - pkin(2);
t51 = -t349 * t372 + t351 * t79;
t26 = t354 * t41 + t357 * t42;
t111 = t160 * t355 + t358 * t161;
t174 = t226 * t350 + t352 * t227;
t361 = -pkin(1) * t450 + t363;
t310 = t356 * t361 + t440;
t311 = t359 * t361 - t441;
t378 = t356 * t310 + t359 * t311;
t12 = t26 * t349 + t438;
t376 = pkin(4) * t12 + pkin(5) * t25;
t129 = t223 + t155;
t85 = -t126 * t354 - t129 * t357;
t87 = -t126 * t357 + t129 * t354;
t55 = t349 * t87 + t351 * t85;
t375 = pkin(4) * t55 + pkin(5) * t85;
t248 = -t274 - t451;
t180 = t248 * t351 - t426;
t374 = pkin(4) * t180 - t407;
t110 = -t160 * t358 + t161 * t355;
t285 = -t377 + t402;
t179 = -t315 - t231;
t132 = t179 * t354 + t461;
t133 = t179 * t357 - t463;
t88 = t132 * t351 + t133 * t349;
t366 = pkin(4) * t88 + pkin(5) * t132 - t41;
t205 = -t232 - t315;
t144 = t205 * t357 - t430;
t145 = -t205 * t354 - t429;
t95 = t144 * t351 + t145 * t349;
t364 = pkin(4) * t95 + pkin(5) * t144 - t42;
t346 = t356 ^ 2;
t344 = t347 * t450;
t342 = t346 * t450;
t333 = t341 - 0.2e1 * t385;
t330 = t340 + 0.2e1 * t384;
t328 = pkin(7) * t450 + t367;
t314 = -t323 - t449;
t313 = -t323 + t449;
t312 = t322 - t449;
t294 = -t449 - t322;
t292 = t352 * t300;
t290 = -t307 + t451;
t289 = -t451 + t452;
t287 = t303 + t319;
t282 = -t322 - t323;
t280 = t307 - t452;
t267 = -t307 - t451;
t266 = -t314 * t350 - t418;
t265 = t314 * t352 - t419;
t262 = -t451 - t452;
t258 = t307 + t452;
t257 = -t274 + t451;
t256 = -t451 + t453;
t255 = t294 * t352 - t466;
t254 = t294 * t350 + t464;
t249 = (-t308 * t358 + t309 * t355) * t321;
t247 = t285 * t352 + t287 * t350;
t246 = t285 * t350 - t287 * t352;
t245 = t308 * t395 + t369;
t243 = t264 - t291;
t241 = -t309 * t395 + t370;
t238 = t264 * t358 - t309 * t412;
t237 = t308 * t411 - t355 * t365;
t236 = -t274 + t453;
t229 = t289 * t358 - t424;
t228 = -t290 * t355 + t460;
t221 = -t232 + t315;
t220 = t231 - t315;
t214 = -t267 * t355 - t423;
t213 = t267 * t358 - t424;
t209 = (-t276 * t351 + t278 * t349) * t321;
t208 = (-t276 * t349 - t278 * t351) * t321;
t207 = t262 * t358 - t462;
t206 = t262 * t355 + t460;
t204 = -t274 - t453;
t195 = t380 + t422;
t194 = t222 * t351 - t278 * t414;
t193 = t222 * t349 + t278 * t413;
t192 = t276 * t413 + t349 * t380;
t191 = t276 * t414 - t351 * t380;
t190 = -t240 * t358 + t244 * t355;
t189 = t241 * t358 - t243 * t355;
t188 = -t240 * t355 - t244 * t358;
t187 = t256 * t351 - t426;
t186 = -t257 * t349 + t465;
t185 = t256 * t349 + t425;
t184 = t257 * t351 + t467;
t182 = t232 - t231;
t181 = -t248 * t349 - t425;
t178 = t214 * t352 - t245 * t350;
t177 = t214 * t350 + t245 * t352;
t176 = t207 * t352 - t241 * t350;
t175 = t207 * t350 + t241 * t352;
t169 = (-t233 * t357 + t235 * t354) * t316;
t168 = (-t233 * t354 - t235 * t357) * t316;
t167 = t230 * t351 - t467;
t165 = t190 * t352 - t258 * t350;
t164 = t190 * t350 + t258 * t352;
t163 = -t208 * t355 + t209 * t358;
t162 = -pkin(8) * t213 + t427;
t158 = -pkin(8) * t206 + t428;
t156 = -t231 - t232;
t154 = -qJD(6) * t235 - t381;
t153 = t220 * t357 - t430;
t152 = -t221 * t354 + t461;
t151 = t220 * t354 + t429;
t150 = t221 * t357 + t463;
t149 = -t196 * t351 + t199 * t349;
t148 = -t195 * t351 - t349 * t456;
t146 = -t195 * t349 + t351 * t456;
t143 = -t193 * t355 + t194 * t358;
t142 = -t191 * t355 + t192 * t358;
t141 = -t185 * t355 + t187 * t358;
t140 = -t184 * t355 + t186 * t358;
t139 = -t180 * t355 + t181 * t358;
t138 = t180 * t358 + t181 * t355;
t137 = -pkin(3) * t213 + t161;
t135 = -pkin(3) * t206 + t160;
t125 = (qJD(6) + t316) * t235 + t381;
t122 = t155 * t357 - t235 * t416;
t121 = t155 * t354 + t235 * t415;
t120 = -t154 * t354 + t233 * t415;
t119 = t154 * t357 + t233 * t416;
t118 = -t168 * t349 + t169 * t351;
t117 = t168 * t351 + t169 * t349;
t116 = -t166 * t355 + t167 * t358;
t115 = t166 * t358 + t167 * t355;
t114 = -qJ(5) * t180 + t431;
t113 = -qJ(5) * t166 + t432;
t109 = t139 * t352 + t350 * t456;
t108 = t139 * t350 - t352 * t456;
t107 = t116 * t352 + t195 * t350;
t106 = t116 * t350 - t195 * t352;
t105 = -pkin(4) * t456 + qJ(5) * t181 + t432;
t104 = -t151 * t349 + t153 * t351;
t103 = -t150 * t349 + t152 * t351;
t102 = t151 * t351 + t153 * t349;
t101 = t150 * t351 + t152 * t349;
t100 = -pkin(4) * t195 + qJ(5) * t167 - t431;
t99 = -t147 * t355 + t149 * t358;
t98 = -t146 * t355 + t148 * t358;
t97 = t147 * t358 + t149 * t355;
t96 = -t144 * t349 + t145 * t351;
t93 = t111 * t350 - t202 * t352;
t92 = -pkin(8) * t188 - t110;
t91 = t204 * t350 + t352 * t99;
t90 = -t204 * t352 + t350 * t99;
t89 = -t132 * t349 + t133 * t351;
t86 = -t125 * t357 - t354 * t458;
t84 = -t125 * t354 + t357 * t458;
t83 = -t121 * t349 + t122 * t351;
t82 = -t119 * t349 + t120 * t351;
t81 = t121 * t351 + t122 * t349;
t80 = t119 * t351 + t120 * t349;
t76 = -pkin(9) * t144 + t433;
t75 = -t117 * t355 + t118 * t358;
t74 = -pkin(9) * t132 + t434;
t73 = -pkin(3) * t97 - t443;
t69 = -pkin(5) * t458 + pkin(9) * t145 + t434;
t68 = -t102 * t355 + t104 * t358;
t67 = -t101 * t355 + t103 * t358;
t66 = -t355 * t95 + t358 * t96;
t65 = t355 * t96 + t358 * t95;
t64 = -pkin(5) * t125 + pkin(9) * t133 - t433;
t63 = -pkin(3) * t138 + t269 - t374;
t62 = -pkin(8) * t138 - t105 * t355 + t114 * t358;
t61 = -pkin(3) * t115 - t468;
t60 = -pkin(8) * t115 - t100 * t355 + t113 * t358;
t59 = -t355 * t88 + t358 * t89;
t58 = t355 * t89 + t358 * t88;
t57 = -t349 * t85 + t351 * t87;
t56 = -t349 * t84 + t351 * t86;
t54 = t349 * t86 + t351 * t84;
t53 = -t355 * t81 + t358 * t83;
t52 = -t355 * t80 + t358 * t82;
t49 = t350 * t458 + t352 * t66;
t48 = t350 * t66 - t352 * t458;
t47 = -pkin(4) * t157 + qJ(5) * t51;
t46 = -qJ(5) * t147 - t50;
t45 = t125 * t350 + t352 * t59;
t44 = -t125 * t352 + t350 * t59;
t43 = -pkin(4) * t204 + qJ(5) * t149 + t51;
t39 = -qJ(5) * t95 - t349 * t69 + t351 * t76;
t38 = -qJ(5) * t88 - t349 * t64 + t351 * t74;
t37 = -pkin(4) * t458 + qJ(5) * t96 + t349 * t76 + t351 * t69;
t36 = -t355 * t55 + t358 * t57;
t35 = -t355 * t54 + t358 * t56;
t34 = t355 * t57 + t358 * t55;
t33 = t358 * t51 - t437;
t32 = t355 * t51 + t436;
t31 = -pkin(4) * t125 + qJ(5) * t89 + t349 * t74 + t351 * t64;
t30 = t156 * t350 + t352 * t36;
t29 = -t156 * t352 + t350 * t36;
t28 = t157 * t350 + t33 * t352;
t27 = -t157 * t352 + t33 * t350;
t24 = -pkin(3) * t65 - t364;
t23 = -pkin(8) * t97 - t355 * t43 + t358 * t46;
t22 = -pkin(5) * t112 + pkin(9) * t26;
t21 = -pkin(3) * t58 - t366;
t20 = -pkin(3) * t32 - t447;
t19 = -pkin(9) * t85 - t25;
t18 = -pkin(5) * t156 + pkin(9) * t87 + t26;
t17 = -pkin(3) * t34 - t375;
t16 = -pkin(8) * t32 - qJ(5) * t436 - t355 * t47;
t15 = -pkin(8) * t65 - t355 * t37 + t358 * t39;
t14 = -pkin(8) * t58 - t31 * t355 + t358 * t38;
t13 = t26 * t351 - t439;
t11 = -qJ(5) * t55 - t18 * t349 + t19 * t351;
t10 = -pkin(4) * t156 + qJ(5) * t57 + t18 * t351 + t19 * t349;
t9 = -t12 * t355 + t13 * t358;
t8 = t12 * t358 + t13 * t355;
t7 = -pkin(9) * t438 - qJ(5) * t12 - t22 * t349;
t6 = t112 * t350 + t352 * t9;
t5 = -t112 * t352 + t350 * t9;
t4 = -pkin(4) * t112 - pkin(9) * t439 + qJ(5) * t13 + t22 * t351;
t3 = -pkin(8) * t34 - t10 * t355 + t11 * t358;
t2 = -pkin(3) * t8 - t376;
t1 = -pkin(8) * t8 - t355 * t4 + t358 * t7;
t40 = [0, 0, 0, 0, 0, qJDD(1), t373, t368, 0, 0, (t331 + t384) * t356, t330 * t359 + t356 * t333, t409 + t359 * (-t342 + t449), (t332 - t385) * t359, t356 * (t344 - t449) + t408, 0, t359 * t328 + pkin(1) * t333 + pkin(7) * (t359 * (-t344 - t449) - t409), -t356 * t328 - pkin(1) * t330 + pkin(7) * (-t408 - t356 * (-t342 - t449)), pkin(1) * (t342 + t344) + (t346 + t347) * t435 + t378, pkin(1) * t328 + pkin(7) * t378, t356 * (t303 * t352 - t326 * t401) + t359 * (t303 * t350 + t326 * t400), t356 * (-t284 * t352 - t286 * t350) + t359 * (-t284 * t350 + t286 * t352), t356 * (-t313 * t350 + t464) + t359 * (t313 * t352 + t466), t356 * (t324 * t400 + t350 * t377) + t359 * (t324 * t401 - t352 * t377), t356 * (t312 * t352 - t419) + t359 * (t312 * t350 + t418), (t356 * (-t324 * t352 + t326 * t350) + t359 * (-t324 * t350 - t326 * t352)) * qJD(2), t356 * (-qJ(3) * t254 - t421) + t359 * (-pkin(2) * t284 + qJ(3) * t255 + t420) - pkin(1) * t284 + pkin(7) * (-t356 * t254 + t255 * t359), t356 * (-qJ(3) * t265 - t420) + t359 * (-pkin(2) * t286 + qJ(3) * t266 - t421) - pkin(1) * t286 + pkin(7) * (-t356 * t265 + t266 * t359), t356 * (-qJ(3) * t246 - t173) + t359 * (-pkin(2) * t282 + qJ(3) * t247 + t174) - pkin(1) * t282 + pkin(7) * (-t356 * t246 + t247 * t359), -qJ(3) * t410 + t359 * (pkin(2) * t281 + qJ(3) * t174) + pkin(1) * t281 + pkin(7) * (t174 * t359 - t410), t356 * (t238 * t352 + t388) + t359 * (t238 * t350 - t387), t356 * (t189 * t352 + t280 * t350) + t359 * (t189 * t350 - t280 * t352), t356 * (t228 * t352 + t244 * t350) + t359 * (t228 * t350 - t244 * t352), t356 * (t237 * t352 - t388) + t359 * (t237 * t350 + t387), t356 * (t229 * t352 - t240 * t350) + t359 * (t229 * t350 + t240 * t352), t356 * (t249 * t352 + t417) + t359 * (t249 * t350 - t292), t356 * (-qJ(3) * t175 - t135 * t350 + t158 * t352) + t359 * (-pkin(2) * t206 + qJ(3) * t176 + t135 * t352 + t158 * t350) - pkin(1) * t206 + pkin(7) * (-t356 * t175 + t176 * t359), t356 * (-qJ(3) * t177 - t137 * t350 + t162 * t352) + t359 * (-pkin(2) * t213 + qJ(3) * t178 + t137 * t352 + t162 * t350) - pkin(1) * t213 + pkin(7) * (-t356 * t177 + t178 * t359), t356 * (-qJ(3) * t164 + t352 * t92) + t359 * (qJ(3) * t165 + t350 * t92) + pkin(7) * (-t356 * t164 + t165 * t359) + (t356 * t444 + t359 * t386 - pkin(1)) * t188, (t356 * (-pkin(8) * t352 + t444) + t359 * (-pkin(8) * t350 + t386) - pkin(1)) * t110 + (pkin(7) + qJ(3)) * (-t356 * t93 + t359 * (t111 * t352 + t202 * t350)), t356 * (t143 * t352 + t390) + t359 * (t143 * t350 - t389), t356 * (-t236 * t350 + t352 * t98) + t359 * (t236 * t352 + t350 * t98), t356 * (t140 * t352 + t199 * t350) + t359 * (t140 * t350 - t199 * t352), t356 * (t142 * t352 - t390) + t359 * (t142 * t350 + t389), t356 * (t141 * t352 - t196 * t350) + t359 * (t141 * t350 + t196 * t352), t356 * (t163 * t352 + t417) + t359 * (t163 * t350 - t292), t356 * (-qJ(3) * t106 - t350 * t61 + t352 * t60) + t359 * (-pkin(2) * t115 + qJ(3) * t107 + t350 * t60 + t352 * t61) - pkin(1) * t115 + pkin(7) * (-t356 * t106 + t107 * t359), t356 * (-qJ(3) * t108 - t350 * t63 + t352 * t62) + t359 * (-pkin(2) * t138 + qJ(3) * t109 + t350 * t62 + t352 * t63) - pkin(1) * t138 + pkin(7) * (-t356 * t108 + t109 * t359), t356 * (-qJ(3) * t90 + t23 * t352 - t350 * t73) + t359 * (-pkin(2) * t97 + qJ(3) * t91 + t23 * t350 + t352 * t73) - pkin(1) * t97 + pkin(7) * (-t356 * t90 + t359 * t91), t356 * (-qJ(3) * t27 + t16 * t352 - t20 * t350) + t359 * (-pkin(2) * t32 + qJ(3) * t28 + t16 * t350 + t20 * t352) - pkin(1) * t32 + pkin(7) * (-t356 * t27 + t28 * t359), t356 * (t352 * t53 + t392) + t359 * (t350 * t53 - t391), t356 * (t182 * t350 + t35 * t352) + t359 * (-t182 * t352 + t35 * t350), t356 * (t129 * t350 + t352 * t67) + t359 * (-t129 * t352 + t350 * t67), t356 * (t352 * t52 - t392) + t359 * (t350 * t52 + t391), t356 * (-t126 * t350 + t352 * t68) + t359 * (t126 * t352 + t350 * t68), t356 * (t299 * t350 + t352 * t75) + t359 * (-t299 * t352 + t350 * t75), t356 * (-qJ(3) * t44 + t14 * t352 - t21 * t350) + t359 * (-pkin(2) * t58 + qJ(3) * t45 + t14 * t350 + t21 * t352) - pkin(1) * t58 + pkin(7) * (-t356 * t44 + t359 * t45), t356 * (-qJ(3) * t48 + t15 * t352 - t24 * t350) + t359 * (-pkin(2) * t65 + qJ(3) * t49 + t15 * t350 + t24 * t352) - pkin(1) * t65 + pkin(7) * (-t356 * t48 + t359 * t49), t356 * (-qJ(3) * t29 - t17 * t350 + t3 * t352) + t359 * (-pkin(2) * t34 + qJ(3) * t30 + t17 * t352 + t3 * t350) - pkin(1) * t34 + pkin(7) * (-t356 * t29 + t30 * t359), t356 * (-qJ(3) * t5 + t1 * t352 - t2 * t350) + t359 * (-pkin(2) * t8 + qJ(3) * t6 + t1 * t350 + t2 * t352) - pkin(1) * t8 + pkin(7) * (-t356 * t5 + t359 * t6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339, t342 - t344, t340, t339, t341, qJDD(2), -t310, -t311, 0, 0, t301, t323 - t322, t287, -t301, t285, qJDD(2), pkin(2) * t254 - t226, pkin(2) * t265 - t227, pkin(2) * t246, pkin(2) * t173, t264 * t355 + t309 * t411, t241 * t355 + t243 * t358, t290 * t358 + t462, t308 * t412 + t358 * t365, t289 * t355 + t423, (-t308 * t355 - t309 * t358) * t321, pkin(2) * t175 + pkin(3) * t241 + pkin(8) * t207 - t427, pkin(2) * t177 + pkin(3) * t245 + pkin(8) * t214 + t428, pkin(2) * t164 + pkin(3) * t258 + pkin(8) * t190 + t111, pkin(2) * t93 - pkin(3) * t202 + pkin(8) * t111, t193 * t358 + t194 * t355, t146 * t358 + t148 * t355, t184 * t358 + t186 * t355, t191 * t358 + t192 * t355, t185 * t358 + t187 * t355, t208 * t358 + t209 * t355, pkin(2) * t106 - pkin(3) * t195 + pkin(8) * t116 + t100 * t358 + t113 * t355, pkin(2) * t108 - pkin(3) * t456 + pkin(8) * t139 + t105 * t358 + t114 * t355, pkin(2) * t90 - pkin(3) * t204 + pkin(8) * t99 + t355 * t46 + t358 * t43, pkin(2) * t27 - pkin(3) * t157 + pkin(8) * t33 - qJ(5) * t437 + t358 * t47, t355 * t83 + t358 * t81, t355 * t56 + t358 * t54, t101 * t358 + t103 * t355, t355 * t82 + t358 * t80, t102 * t358 + t104 * t355, t117 * t358 + t118 * t355, pkin(2) * t44 - pkin(3) * t125 + pkin(8) * t59 + t31 * t358 + t355 * t38, pkin(2) * t48 - pkin(3) * t458 + pkin(8) * t66 + t355 * t39 + t358 * t37, pkin(2) * t29 - pkin(3) * t156 + pkin(8) * t36 + t10 * t358 + t11 * t355, pkin(2) * t5 - pkin(3) * t112 + pkin(8) * t9 + t355 * t7 + t358 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, t286, t282, -t281, 0, 0, 0, 0, 0, 0, t206, t213, t188, t110, 0, 0, 0, 0, 0, 0, t115, t138, t97, t32, 0, 0, 0, 0, 0, 0, t58, t65, t34, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, t280, t244, -t283, -t240, t300, -t160, -t161, 0, 0, t239, -t236, t199, -t239, -t196, t300, t468, t374 + 0.2e1 * t398, t443, t447, t183, t182, t129, -t183, -t126, t299, t366, t364, t375, t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t456, t204, t157, 0, 0, 0, 0, 0, 0, t125, t458, t156, t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, t182, t129, -t183, -t126, t299, -t41, -t42, 0, 0;];
tauJ_reg  = t40;
