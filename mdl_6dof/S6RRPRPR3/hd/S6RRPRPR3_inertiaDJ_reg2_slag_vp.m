% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR3_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:19:07
% EndTime: 2019-03-09 10:19:21
% DurationCPUTime: 4.80s
% Computational Cost: add. (9317->344), mult. (20555->626), div. (0->0), fcn. (20610->10), ass. (0->170)
t127 = sin(qJ(4));
t129 = cos(qJ(4));
t222 = sin(pkin(11));
t188 = qJD(4) * t222;
t223 = cos(pkin(11));
t189 = qJD(4) * t223;
t103 = -t127 * t188 + t129 * t189;
t107 = t127 * t223 + t129 * t222;
t125 = sin(pkin(10));
t126 = cos(pkin(10));
t128 = sin(qJ(2));
t130 = cos(qJ(2));
t108 = t125 * t130 + t126 * t128;
t208 = qJD(4) * t129;
t198 = t108 * t208;
t210 = qJD(2) * t130;
t211 = qJD(2) * t128;
t104 = -t125 * t211 + t126 * t210;
t221 = t104 * t127;
t240 = t198 + t221;
t213 = t127 * t189 + t129 * t188;
t171 = t127 * t222 - t129 * t223;
t200 = t223 * pkin(4);
t182 = t200 + pkin(5);
t199 = t222 * pkin(4);
t235 = sin(qJ(6));
t236 = cos(qJ(6));
t98 = t182 * t236 - t199 * t235;
t209 = qJD(4) * t127;
t214 = t129 * t104;
t239 = t108 * t209 - t214;
t201 = pkin(2) * t125 + pkin(8);
t185 = qJ(5) + t201;
t165 = t185 * t129;
t166 = t185 * t127;
t65 = -t165 * t222 - t166 * t223;
t142 = -t107 * pkin(9) + t65;
t66 = t165 * t223 - t166 * t222;
t53 = -pkin(9) * t171 + t66;
t25 = t142 * t235 + t236 * t53;
t123 = t127 ^ 2;
t124 = t129 ^ 2;
t212 = t123 - t124;
t186 = qJD(4) * t212;
t231 = -qJ(3) - pkin(7);
t193 = qJD(2) * t231;
t100 = qJD(3) * t130 + t128 * t193;
t156 = -t128 * qJD(3) + t130 * t193;
t145 = t126 * t100 + t125 * t156;
t106 = t125 * t128 - t126 * t130;
t121 = -t130 * pkin(2) - pkin(1);
t167 = -t106 * pkin(3) - t121;
t158 = -pkin(8) * t108 - t167;
t150 = qJD(4) * t158;
t102 = t108 * qJD(2);
t203 = pkin(2) * t211;
t163 = t102 * pkin(3) + t203;
t153 = -pkin(8) * t104 + t163;
t205 = t127 * t153 + (t145 + t150) * t129;
t112 = t231 * t128;
t113 = t231 * t130;
t74 = t112 * t125 - t113 * t126;
t21 = t209 * t74 - t205;
t137 = -t127 * t145 + t129 * t153;
t46 = t127 * t158 + t129 * t74;
t22 = -qJD(4) * t46 + t137;
t45 = -t127 * t74 + t129 * t158;
t238 = t127 * t21 - t129 * t22 + (t127 * t45 - t129 * t46) * qJD(4);
t237 = 0.2e1 * t102;
t68 = t107 * t236 - t171 * t235;
t42 = qJD(6) * t68 + t103 * t235 + t213 * t236;
t157 = t236 * t171;
t67 = t107 * t235 + t157;
t234 = t67 * t42;
t194 = qJD(6) * t235;
t41 = qJD(6) * t157 - t103 * t236 + t107 * t194 + t213 * t235;
t233 = t68 * t41;
t59 = t100 * t125 - t126 * t156;
t73 = -t112 * t126 - t113 * t125;
t232 = t73 * t59;
t230 = -qJ(5) - pkin(8);
t151 = -t103 * t108 - t104 * t107;
t36 = t104 * t171 + t108 * t213;
t226 = t107 * t108;
t61 = t171 * t108;
t38 = -t226 * t235 - t236 * t61;
t12 = qJD(6) * t38 - t151 * t236 - t235 * t36;
t183 = t236 * t226;
t37 = -t235 * t61 + t183;
t229 = -t12 * t68 + t37 * t41;
t227 = -t103 * t226 + t107 * t151;
t217 = t108 * t129;
t29 = pkin(4) * t106 - qJ(5) * t217 + t45;
t218 = t108 * t127;
t35 = -qJ(5) * t218 + t46;
t18 = t222 * t29 + t223 * t35;
t225 = t59 * t127;
t224 = t59 * t129;
t220 = t107 * t103;
t219 = t108 * t104;
t216 = t127 * t102;
t215 = t129 * t102;
t207 = t129 * qJD(5);
t206 = -0.2e1 * pkin(1) * qJD(2);
t69 = t106 * t237;
t120 = -t126 * pkin(2) - pkin(3);
t204 = 0.2e1 * qJD(4) * t120;
t122 = pkin(4) * t209;
t196 = t127 * t208;
t195 = t128 * t210;
t187 = -0.4e1 * t127 * t217;
t105 = t108 ^ 2;
t184 = t105 * t196;
t57 = pkin(4) * t218 + t73;
t181 = t127 * t201;
t180 = t129 * t201;
t11 = qJD(6) * t183 - t151 * t235 - t194 * t61 + t236 * t36;
t177 = -t11 * t67 + t38 * t42;
t176 = qJD(4) * t201;
t175 = t102 * t68 - t106 * t41;
t173 = -t127 * t46 - t129 * t45;
t170 = t102 * t107 + t103 * t106;
t40 = pkin(4) * t240 + t59;
t168 = -qJD(4) * t74 - qJD(5) * t108;
t111 = -t129 * pkin(4) + t120;
t164 = qJD(4) * t185;
t162 = t106 * t208 + t216;
t134 = t102 * pkin(4) + ((-t108 * t230 + t167) * qJD(4) - t145) * t127 + (t104 * t230 + t163 + t168) * t129;
t143 = qJ(5) * t198 - (-qJ(5) * t104 + t168) * t127 - t205;
t141 = t223 * t143;
t9 = t134 * t222 - t141;
t131 = pkin(9) * t151 + t9;
t140 = t222 * t143;
t8 = t134 * t223 + t140;
t132 = t102 * pkin(5) + t36 * pkin(9) + t8;
t17 = -t222 * t35 + t223 * t29;
t146 = pkin(5) * t106 + pkin(9) * t61 + t17;
t144 = t236 * t146;
t16 = -pkin(9) * t226 + t18;
t1 = -qJD(6) * t144 - t131 * t236 - t132 * t235 + t16 * t194;
t155 = -t102 * t201 + t120 * t104;
t154 = t106 * t201 - t120 * t108;
t152 = t171 * t213;
t149 = -t127 * qJD(5) - t129 * t164;
t148 = -t127 * t164 + t207;
t147 = -t171 * t36 - t213 * t61;
t99 = t182 * t235 + t199 * t236;
t7 = t146 * t235 + t16 * t236;
t139 = t236 * t142;
t52 = t148 * t223 + t149 * t222;
t51 = -t148 * t222 + t149 * t223;
t136 = -t103 * pkin(9) + t51;
t135 = -pkin(9) * t213 + t52;
t133 = qJ(5) * t239 - t108 * t207 - t127 * t150 - t74 * t208 + t137;
t2 = -qJD(6) * t7 - t131 * t235 + t132 * t236;
t86 = t99 * qJD(6);
t85 = t98 * qJD(6);
t76 = pkin(5) * t213 + t122;
t75 = pkin(5) * t171 + t111;
t64 = -t106 * t209 + t215;
t48 = t108 * t186 - t127 * t214;
t47 = -t102 * t171 - t106 * t213;
t39 = pkin(5) * t226 + t57;
t24 = -t235 * t53 + t139;
t23 = -t102 * t67 - t106 * t42;
t19 = -pkin(5) * t151 + t40;
t14 = -qJD(6) * t25 - t235 * t135 + t236 * t136;
t13 = -qJD(6) * t139 - t135 * t236 - t136 * t235 + t194 * t53;
t6 = -t16 * t235 + t144;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t195, 0.2e1 * (-t128 ^ 2 + t130 ^ 2) * qJD(2), 0, -0.2e1 * t195, 0, 0, t128 * t206, t130 * t206, 0, 0, 0.2e1 * t219, -0.2e1 * t102 * t108 - 0.2e1 * t104 * t106, 0, t69, 0, 0, 0.2e1 * t102 * t121 + 0.2e1 * t106 * t203, 0.2e1 * t104 * t121 + 0.2e1 * t108 * t203, -0.2e1 * t74 * t102 + 0.2e1 * t73 * t104 - 0.2e1 * t106 * t145 + 0.2e1 * t59 * t108, 0.2e1 * t121 * t203 + 0.2e1 * t145 * t74 + 0.2e1 * t232, 0.2e1 * t124 * t219 - 0.2e1 * t184, t104 * t187 + 0.2e1 * t105 * t186, -0.2e1 * t106 * t239 + 0.2e1 * t108 * t215, 0.2e1 * t123 * t219 + 0.2e1 * t184, -0.2e1 * t106 * t240 - 0.2e1 * t108 * t216, t69, 0.2e1 * t73 * t221 + 0.2e1 * t102 * t45 + 0.2e1 * t106 * t22 + 0.2e1 * (t208 * t73 + t225) * t108, 0.2e1 * t73 * t214 - 0.2e1 * t102 * t46 + 0.2e1 * t106 * t21 + 0.2e1 * (-t209 * t73 + t224) * t108, 0.2e1 * t104 * t173 + 0.2e1 * t108 * t238, -0.2e1 * t21 * t46 + 0.2e1 * t22 * t45 + 0.2e1 * t232, 0.2e1 * t61 * t36, -0.2e1 * t151 * t61 + 0.2e1 * t226 * t36, -0.2e1 * t102 * t61 - 0.2e1 * t106 * t36, -0.2e1 * t226 * t151, -0.2e1 * t102 * t226 + 0.2e1 * t106 * t151, t69, 0.2e1 * t102 * t17 + 0.2e1 * t106 * t8 - 0.2e1 * t151 * t57 + 0.2e1 * t226 * t40, -0.2e1 * t102 * t18 - 0.2e1 * t106 * t9 - 0.2e1 * t36 * t57 - 0.2e1 * t40 * t61, 0.2e1 * t151 * t18 + 0.2e1 * t17 * t36 - 0.2e1 * t226 * t9 + 0.2e1 * t61 * t8, 0.2e1 * t17 * t8 + 0.2e1 * t18 * t9 + 0.2e1 * t40 * t57, -0.2e1 * t38 * t11, 0.2e1 * t11 * t37 - 0.2e1 * t12 * t38, 0.2e1 * t102 * t38 - 0.2e1 * t106 * t11, 0.2e1 * t37 * t12, -0.2e1 * t102 * t37 - 0.2e1 * t106 * t12, t69, 0.2e1 * t102 * t6 + 0.2e1 * t106 * t2 + 0.2e1 * t12 * t39 + 0.2e1 * t19 * t37, 0.2e1 * t1 * t106 - 0.2e1 * t102 * t7 - 0.2e1 * t11 * t39 + 0.2e1 * t19 * t38, 0.2e1 * t1 * t37 + 0.2e1 * t11 * t6 - 0.2e1 * t12 * t7 - 0.2e1 * t2 * t38, -0.2e1 * t1 * t7 + 0.2e1 * t19 * t39 + 0.2e1 * t2 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, 0, -t211, 0, -pkin(7) * t210, pkin(7) * t211, 0, 0, 0, 0, t104, 0, -t102, 0, -t59, -t145 (-t102 * t125 - t104 * t126) * pkin(2) (t125 * t145 - t59 * t126) * pkin(2), -t48, qJD(4) * t187 - t104 * t212, t162, t48, t64, 0, -t224 + t155 * t127 + (t73 * t127 - t129 * t154) * qJD(4), t225 + t155 * t129 + (t127 * t154 + t73 * t129) * qJD(4), qJD(4) * t173 - t22 * t127 - t21 * t129, -t21 * t180 - t22 * t181 + t59 * t120 + (-t180 * t45 - t181 * t46) * qJD(4), -t103 * t61 - t107 * t36, -t147 + t227, t170, -t151 * t171 + t213 * t226, t47, 0, t65 * t102 + t51 * t106 - t111 * t151 + t122 * t226 + t171 * t40 + t213 * t57, -t102 * t66 + t103 * t57 - t106 * t52 + t107 * t40 - t111 * t36 - t122 * t61, -t103 * t17 - t107 * t8 + t151 * t66 - t171 * t9 - t18 * t213 - t226 * t52 + t36 * t65 + t51 * t61, t111 * t40 + t122 * t57 + t17 * t51 + t18 * t52 + t65 * t8 + t66 * t9, -t11 * t68 - t38 * t41, -t177 + t229, t175, t12 * t67 + t37 * t42, t23, 0, t102 * t24 + t106 * t14 + t12 * t75 + t19 * t67 + t37 * t76 + t39 * t42, -t102 * t25 + t106 * t13 - t11 * t75 + t19 * t68 + t38 * t76 - t39 * t41, t1 * t67 + t11 * t24 - t12 * t25 + t13 * t37 - t14 * t38 - t2 * t68 + t41 * t6 - t42 * t7, -t1 * t25 - t13 * t7 + t14 * t6 + t19 * t75 + t2 * t24 + t39 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t196, -0.2e1 * t186, 0, -0.2e1 * t196, 0, 0, t127 * t204, t129 * t204, 0, 0, 0.2e1 * t220, -0.2e1 * t103 * t171 - 0.2e1 * t107 * t213, 0, 0.2e1 * t152, 0, 0, 0.2e1 * t111 * t213 + 0.2e1 * t122 * t171, 0.2e1 * t103 * t111 + 0.2e1 * t107 * t122, -0.2e1 * t103 * t65 - 0.2e1 * t107 * t51 - 0.2e1 * t171 * t52 - 0.2e1 * t213 * t66, 0.2e1 * t111 * t122 + 0.2e1 * t51 * t65 + 0.2e1 * t52 * t66, -0.2e1 * t233, 0.2e1 * t41 * t67 - 0.2e1 * t42 * t68, 0, 0.2e1 * t234, 0, 0, 0.2e1 * t42 * t75 + 0.2e1 * t67 * t76, -0.2e1 * t41 * t75 + 0.2e1 * t68 * t76, 0.2e1 * t13 * t67 - 0.2e1 * t14 * t68 + 0.2e1 * t24 * t41 - 0.2e1 * t25 * t42, -0.2e1 * t13 * t25 + 0.2e1 * t14 * t24 + 0.2e1 * t75 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, t104, 0, t203, 0, 0, 0, 0, 0, 0, t64, -t162 (-t123 - t124) * t104, -t238, 0, 0, 0, 0, 0, 0, t47, -t170, t147 + t227, t103 * t18 + t107 * t9 - t17 * t213 - t171 * t8, 0, 0, 0, 0, 0, 0, t23, -t175, t177 + t229, -t1 * t68 - t2 * t67 - t41 * t7 - t42 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103 * t66 + t107 * t52 - t171 * t51 - t213 * t65, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13 * t68 - t14 * t67 - t24 * t42 - t25 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t152 + 0.2e1 * t220, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t233 + 0.2e1 * t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, 0, -t240, t102, t22, t21, 0, 0, 0, 0, -t36, 0, t151, t102, t133 * t223 + t200 * t237 + t140, -0.2e1 * t102 * t199 - t133 * t222 + t141 (t151 * t222 + t223 * t36) * pkin(4) (t222 * t9 + t223 * t8) * pkin(4), 0, 0, -t11, 0, -t12, t102, t98 * t102 - t86 * t106 + t2, -t102 * t99 - t106 * t85 + t1, t11 * t98 - t12 * t99 - t37 * t85 + t38 * t86, -t1 * t99 + t2 * t98 - t6 * t86 + t7 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, 0, -t209, 0, -t129 * t176, t127 * t176, 0, 0, 0, 0, t103, 0, -t213, 0, t51, -t52 (-t103 * t223 - t213 * t222) * pkin(4) (t222 * t52 + t223 * t51) * pkin(4), 0, 0, -t41, 0, -t42, 0, t14, t13, t41 * t98 - t42 * t99 - t67 * t85 + t68 * t86, -t13 * t99 + t14 * t98 - t24 * t86 + t25 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, -t208, 0, 0, 0, 0, 0, 0, 0, 0, -t213, -t103, 0 (t103 * t222 - t213 * t223) * pkin(4), 0, 0, 0, 0, 0, 0, -t42, t41, 0, -t41 * t99 - t42 * t98 + t67 * t86 + t68 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t86, -0.2e1 * t85, 0, 0.2e1 * t85 * t99 - 0.2e1 * t86 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t36, 0, t40, 0, 0, 0, 0, 0, 0, t12, -t11, 0, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, t103, 0, t122, 0, 0, 0, 0, 0, 0, t42, -t41, 0, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, 0, -t12, t102, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, 0, -t42, 0, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, -t85, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
