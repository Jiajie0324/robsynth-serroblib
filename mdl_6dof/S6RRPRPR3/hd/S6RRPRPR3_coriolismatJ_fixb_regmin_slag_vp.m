% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:19:11
% EndTime: 2019-03-09 10:19:38
% DurationCPUTime: 14.00s
% Computational Cost: add. (17448->580), mult. (35022->792), div. (0->0), fcn. (41590->10), ass. (0->464)
t444 = sin(qJ(4));
t441 = sin(pkin(10));
t434 = pkin(2) * t441 + pkin(8);
t623 = qJ(5) + t434;
t408 = t623 * t444;
t446 = cos(qJ(4));
t410 = t623 * t446;
t440 = sin(pkin(11));
t442 = cos(pkin(11));
t312 = -t440 * t408 + t442 * t410;
t415 = -t440 * t444 + t442 * t446;
t255 = pkin(9) * t415 + t312;
t691 = cos(qJ(6));
t753 = t691 * t255;
t443 = sin(qJ(6));
t418 = t440 * t446 + t442 * t444;
t725 = -t442 * t408 - t440 * t410;
t740 = -pkin(9) * t418 + t725;
t754 = t443 * t740;
t168 = t753 + t754;
t445 = sin(qJ(2));
t447 = cos(qJ(2));
t670 = cos(pkin(10));
t416 = t441 * t445 - t447 * t670;
t700 = -t416 / 0.2e1;
t773 = t168 * t700;
t530 = -t691 * t415 + t443 * t418;
t759 = qJD(4) + qJD(6);
t734 = t759 * t530;
t743 = t530 * t416;
t541 = t743 / 0.2e1;
t322 = t444 * t416;
t328 = t446 * t416;
t301 = t322 * t440 - t328 * t442;
t549 = t691 * t301;
t299 = t418 * t416;
t630 = t443 * t299;
t620 = t630 / 0.2e1 + t549 / 0.2e1;
t762 = t541 + t620;
t767 = qJD(1) * t762;
t772 = -t767 - t734;
t757 = -t743 / 0.2e1;
t761 = t757 - t620;
t768 = qJD(1) * t761;
t771 = -t768 + t734;
t532 = t670 * t445;
t638 = t441 * t447;
t420 = t532 + t638;
t325 = t444 * t420;
t626 = t446 * t420;
t300 = -t325 * t442 - t440 * t626;
t302 = -t325 * t440 + t442 * t626;
t204 = -t691 * t300 + t443 * t302;
t752 = t691 * t740;
t755 = t443 * t255;
t488 = t752 - t755;
t699 = t416 / 0.2e1;
t435 = -pkin(2) * t670 - pkin(3);
t424 = -t446 * pkin(4) + t435;
t359 = -t415 * pkin(5) + t424;
t704 = -t359 / 0.2e1;
t770 = t204 * t704 - t488 * t699;
t711 = -t312 / 0.2e1;
t758 = t312 / 0.2e1;
t534 = t758 + t711;
t694 = -t442 / 0.2e1;
t695 = t440 / 0.2e1;
t769 = (t299 * t695 + t301 * t694) * pkin(4) + t302 * t534;
t760 = t757 + t620;
t766 = qJD(2) * t760;
t598 = qJD(1) * t416;
t548 = t204 * t598;
t765 = qJD(2) * t762 + t548;
t764 = qJD(3) * t761 + qJD(5) * t204;
t523 = -t752 / 0.2e1;
t524 = -t753 / 0.2e1;
t684 = -qJ(3) - pkin(7);
t425 = t684 * t445;
t426 = t684 * t447;
t355 = -t670 * t425 - t426 * t441;
t744 = t355 * t446;
t756 = t744 / 0.2e1;
t555 = -pkin(2) * t447 - pkin(1);
t319 = t416 * pkin(3) - t420 * pkin(8) + t555;
t423 = t670 * t426;
t639 = t441 * t425;
t723 = -t423 + t639;
t644 = t723 * t444;
t223 = -t446 * t319 + t644;
t200 = -qJ(5) * t626 - t223;
t181 = pkin(4) * t416 + t200;
t643 = t723 * t446;
t224 = t319 * t444 + t643;
t201 = -qJ(5) * t325 + t224;
t637 = t442 * t201;
t104 = t440 * t181 + t637;
t107 = -t200 * t440 - t637;
t728 = t104 + t107;
t487 = t443 * t415 + t418 * t691;
t594 = qJD(2) * t487;
t293 = t691 * t302;
t629 = t443 * t300;
t727 = t293 + t629;
t737 = t727 * qJD(1);
t718 = t737 + t594;
t735 = t204 ^ 2 - t727 ^ 2;
t751 = qJD(1) * t735;
t736 = -t487 ^ 2 + t530 ^ 2;
t750 = qJD(2) * t736;
t701 = t415 / 0.2e1;
t698 = -t418 / 0.2e1;
t713 = -t725 / 0.2e1;
t749 = t725 / 0.2e1;
t290 = pkin(4) * t325 + t355;
t212 = -pkin(5) * t300 + t290;
t748 = t204 * t212;
t747 = t204 * t737;
t745 = t212 * t727;
t742 = t530 * t594;
t597 = qJD(1) * t420;
t353 = t416 * t597;
t409 = t532 / 0.2e1 + t638 / 0.2e1;
t726 = t409 * qJD(4) + t353;
t190 = t440 * t201;
t103 = t442 * t181 - t190;
t681 = t103 * t698 + t104 * t701;
t741 = -t300 * t758 - t302 * t713 - t681;
t716 = t759 * t487;
t738 = qJD(5) * t530;
t196 = t204 * qJD(4);
t499 = -qJD(6) * t204 - t196;
t733 = -qJD(1) * t204 - qJD(2) * t530;
t731 = 0.2e1 * t444;
t707 = -t487 / 0.2e1;
t730 = t727 * t487;
t535 = t749 + t713;
t729 = t300 * t535;
t413 = t416 ^ 2;
t414 = t420 ^ 2;
t724 = -t414 - t413;
t722 = qJD(6) * t409 + t726;
t720 = qJD(4) * t760;
t719 = qJD(5) * t487;
t291 = t691 * t299;
t628 = t443 * t301;
t618 = -t628 / 0.2e1 + t291 / 0.2e1;
t438 = t444 ^ 2;
t439 = t446 ^ 2;
t430 = t439 - t438;
t531 = t626 * t731;
t469 = qJD(1) * t531 - qJD(2) * t430;
t717 = t499 - t548 + t766;
t715 = t727 / 0.2e1;
t522 = t293 / 0.2e1;
t709 = -t530 / 0.2e1;
t708 = t530 / 0.2e1;
t706 = t487 / 0.2e1;
t705 = t355 / 0.2e1;
t686 = t444 * pkin(4);
t364 = pkin(5) * t418 + t686;
t703 = -t364 / 0.2e1;
t702 = -t415 / 0.2e1;
t697 = t418 / 0.2e1;
t696 = -t420 / 0.2e1;
t693 = t442 / 0.2e1;
t692 = -t444 / 0.2e1;
t690 = pkin(4) * t440;
t689 = pkin(9) * t300;
t687 = t302 * pkin(9);
t685 = t445 * pkin(2);
t37 = t727 * t707 - t730 / 0.2e1 + (t708 - t709) * t204;
t42 = t204 * t530 - t730;
t683 = t37 * qJD(4) + t42 * qJD(6);
t56 = -t204 * t706 - t530 * t715;
t57 = t204 * t707 + t709 * t727;
t682 = t56 * qJD(4) + t57 * qJD(6);
t680 = pkin(4) * qJD(4);
t679 = qJD(2) * pkin(2);
t203 = -t291 + t628;
t396 = pkin(4) * t322;
t289 = t723 - t396;
t211 = -pkin(5) * t299 + t289;
t461 = t416 * pkin(5) + t103 - t687;
t48 = t691 * t461;
t62 = t104 + t689;
t675 = t443 * t62;
t34 = -t48 + t675;
t329 = pkin(3) * t420 + pkin(8) * t416 + t685;
t308 = t446 * t329;
t627 = t355 * t444;
t183 = pkin(4) * t420 + qJ(5) * t328 + t308 + t627;
t307 = t444 * t329;
t617 = -t307 + t744;
t209 = qJ(5) * t322 - t617;
t105 = t442 * t183 - t209 * t440;
t53 = pkin(5) * t420 - pkin(9) * t301 + t105;
t560 = t691 * t53;
t106 = t440 * t183 + t442 * t209;
t63 = pkin(9) * t299 + t106;
t674 = t443 * t63;
t3 = (t560 - t674) * t416 - t34 * t420 + t211 * t204 + t212 * t203;
t678 = t3 * qJD(1);
t207 = t549 + t630;
t455 = t443 * t461;
t559 = t691 * t62;
t35 = t559 + t455;
t558 = t691 * t63;
t676 = t443 * t53;
t4 = -(t558 + t676) * t416 - t35 * t420 + t211 * t727 + t212 * t207;
t677 = t4 * qJD(1);
t76 = t107 - t689;
t673 = t443 * t76;
t108 = t442 * t200 - t190;
t77 = t108 - t687;
t672 = t443 * t77;
t91 = t415 * t534 + t418 * t535;
t671 = t91 * qJD(4);
t564 = pkin(4) * t626;
t225 = pkin(5) * t302 + t564;
t557 = t691 * t76;
t39 = t557 - t672;
t25 = t204 * t225 + t39 * t416 + t745;
t669 = qJD(1) * t25;
t556 = t691 * t77;
t40 = t556 + t673;
t26 = t225 * t727 - t40 * t416 - t748;
t668 = qJD(1) * t26;
t27 = t34 * t416 - t748;
t667 = qJD(1) * t27;
t28 = -t35 * t416 + t745;
t666 = qJD(1) * t28;
t456 = t299 * t749 + t301 * t758 + t420 * t424 / 0.2e1;
t496 = t105 * t702 + t106 * t698;
t32 = t456 + t496;
t665 = qJD(1) * t32;
t38 = -t103 * t302 + t104 * t300;
t664 = qJD(1) * t38;
t82 = -t418 * t299 + t301 * t415;
t663 = qJD(1) * t82;
t652 = t204 * t420;
t653 = t203 * t416;
t93 = -t652 - t653;
t662 = qJD(1) * t93;
t94 = t652 - t653;
t661 = qJD(1) * t94;
t650 = t727 * t420;
t651 = t207 * t416;
t95 = t650 + t651;
t660 = qJD(1) * t95;
t96 = t650 - t651;
t659 = qJD(1) * t96;
t15 = -t103 * t301 + t104 * t299 - t105 * t302 + t106 * t300;
t656 = t15 * qJD(1);
t16 = -t728 * t302 + (-t103 + t108) * t300;
t655 = t16 * qJD(1);
t19 = t103 * t105 + t104 * t106 + t289 * t290;
t654 = t19 * qJD(1);
t24 = t103 * t107 + t104 * t108 + t290 * t564;
t649 = t24 * qJD(1);
t33 = t103 * t299 + t104 * t301 + t290 * t420;
t648 = t33 * qJD(1);
t645 = t487 * t416;
t44 = -t203 * t727 - t204 * t207;
t641 = t44 * qJD(1);
t640 = t440 * t415;
t635 = t442 * t418;
t51 = (-t223 + t644) * t420 + t308 * t416;
t625 = t51 * qJD(1);
t52 = (-t224 + t643) * t420 + (t617 - t744) * t416;
t624 = t52 * qJD(1);
t460 = t487 * t699;
t124 = t460 + t618;
t125 = t645 / 0.2e1 + t618;
t622 = -t124 * qJD(4) - t125 * qJD(6);
t123 = t460 - t618;
t134 = -t645 / 0.2e1 + t618;
t621 = -t123 * qJD(4) + t134 * qJD(6);
t113 = -t299 * t302 + t300 * t301;
t614 = qJD(1) * t113;
t110 = qJD(1) * t125;
t611 = qJD(1) * t760;
t138 = t223 * t416 - t325 * t355;
t608 = qJD(1) * t138;
t139 = -t224 * t416 + t355 * t626;
t607 = qJD(1) * t139;
t493 = t300 * t697 + t302 * t702;
t144 = t409 - t493;
t606 = qJD(1) * t144;
t198 = t522 - t293 / 0.2e1;
t605 = qJD(1) * t198;
t213 = t355 * t420 - t416 * t723;
t603 = qJD(1) * t213;
t565 = t414 - t413;
t269 = t565 * t444;
t602 = qJD(1) * t269;
t270 = t724 * t444;
t601 = qJD(1) * t270;
t271 = t565 * t446;
t600 = qJD(1) * t271;
t335 = t724 * t446;
t599 = qJD(1) * t335;
t596 = qJD(1) * t446;
t595 = qJD(1) * t447;
t593 = qJD(2) * t359;
t592 = qJD(2) * t420;
t591 = qJD(2) * t444;
t590 = qJD(2) * t445;
t589 = qJD(2) * t446;
t588 = qJD(2) * t447;
t587 = qJD(3) * t446;
t586 = qJD(4) * t727;
t585 = qJD(4) * t444;
t584 = qJD(4) * t446;
t583 = qJD(5) * t416;
t581 = qJD(6) * t359;
t579 = t123 * qJD(1);
t109 = t124 * qJD(1);
t160 = t555 * t685;
t578 = t160 * qJD(1);
t184 = t420 * t530;
t577 = t184 * qJD(1);
t187 = t487 * t420;
t576 = t187 * qJD(1);
t466 = t441 * t700 + t670 * t696;
t298 = (-t445 / 0.2e1 + t466) * pkin(2);
t573 = t298 * qJD(1);
t572 = t322 * qJD(1);
t571 = t325 * qJD(1);
t570 = t328 * qJD(1);
t569 = t724 * qJD(1);
t568 = t409 * qJD(1);
t431 = -t445 ^ 2 + t447 ^ 2;
t566 = t431 * qJD(1);
t563 = pkin(1) * t445 * qJD(1);
t562 = pkin(1) * t595;
t561 = t686 / 0.2e1;
t554 = pkin(4) * t442 + pkin(5);
t547 = t444 * t589;
t546 = t416 * t584;
t352 = t416 * t592;
t545 = t444 * t584;
t544 = t445 * t595;
t543 = t420 * t596;
t539 = -t626 / 0.2e1;
t538 = t104 / 0.2e1 + t107 / 0.2e1;
t537 = -t108 / 0.2e1 + t103 / 0.2e1;
t536 = -t307 / 0.2e1 + t756;
t528 = t564 / 0.2e1;
t527 = -qJD(4) - t598;
t526 = -qJD(6) - t598;
t525 = -t556 / 0.2e1;
t398 = t443 * t690 - t554 * t691;
t521 = t48 / 0.2e1 + t398 * t700;
t520 = qJD(2) * t531;
t5 = t415 * t537 + t418 * t538 - t729 + t769;
t517 = t5 * qJD(1);
t161 = t359 * t487 + t364 * t530;
t448 = t204 * t703 + t212 * t707 + t225 * t709 + t704 * t727 - t773;
t473 = -t674 / 0.2e1 + t560 / 0.2e1;
t454 = t398 * t696 + t473;
t7 = t448 + t454;
t515 = -t7 * qJD(1) + t161 * qJD(2);
t162 = -t359 * t530 + t364 * t487;
t449 = t212 * t708 + t225 * t707 + t703 * t727 - t770;
t399 = t443 * t554 + t690 * t691;
t474 = -t676 / 0.2e1 - t558 / 0.2e1;
t453 = t399 * t696 + t474;
t8 = t449 + t453;
t514 = -t8 * qJD(1) + t162 * qJD(2);
t468 = (t299 * t693 + t301 * t695) * pkin(4);
t17 = -t415 * t538 + t418 * t537 + t468;
t513 = t17 * qJD(1) - t91 * qJD(2);
t512 = qJD(2) * t37 + t751;
t511 = qJD(2) * t42 + t751;
t510 = -t416 * t435 - t420 * t434;
t509 = qJD(1) * t37 + t750;
t508 = qJD(1) * t42 + t750;
t180 = t312 * t415 - t418 * t725;
t486 = -t396 / 0.2e1 - t423 / 0.2e1 + t639 / 0.2e1;
t29 = t486 + t741;
t507 = -qJD(1) * t29 + qJD(2) * t180;
t506 = t527 * t446;
t137 = 0.2e1 * t522 + t629;
t504 = qJD(1) * t137 + t594;
t491 = t300 * t695 + t302 * t694;
t171 = (t539 + t491) * pkin(4);
t490 = t640 / 0.2e1 - t635 / 0.2e1;
t296 = (t692 + t490) * pkin(4);
t503 = qJD(1) * t171 + qJD(2) * t296;
t174 = t415 * t300 + t418 * t302;
t214 = t300 ^ 2 + t302 ^ 2;
t502 = qJD(1) * t214 + qJD(2) * t174;
t346 = t415 ^ 2 + t418 ^ 2;
t501 = qJD(1) * t174 + qJD(2) * t346;
t495 = t105 * t693 + t106 * t695;
t492 = t434 * t699 + t435 * t696;
t457 = t212 * t706 + t359 * t715 + t773;
t20 = -t457 + t473;
t485 = qJD(1) * t20 - t487 * t593;
t484 = -qJD(2) * t57 + t747;
t483 = qJD(2) * t56 - t747;
t458 = t212 * t709 + t770;
t21 = -t458 + t474;
t482 = qJD(1) * t21 + t530 * t593;
t481 = -qJD(1) * t57 + t742;
t480 = qJD(1) * t56 - t742;
t479 = t420 * t506;
t452 = t492 * t444 + t756;
t114 = t452 - t536;
t478 = -qJD(1) * t114 - t435 * t589;
t464 = t492 * t446;
t116 = -t308 / 0.2e1 - t464 + (t705 - t355 / 0.2e1) * t444;
t477 = -qJD(1) * t116 - t435 * t591;
t321 = (t438 / 0.2e1 - t439 / 0.2e1) * t420;
t476 = -qJD(1) * t321 + t547;
t182 = t416 * t737;
t475 = qJD(2) * t124 - qJD(6) * t198 + t182;
t472 = -t672 / 0.2e1 + t557 / 0.2e1;
t471 = t414 * t444 * t596 + qJD(2) * t321;
t332 = t430 * t414;
t470 = qJD(1) * t332 + t520;
t451 = t103 * t758 + t108 * t711 + t713 * t728;
t1 = (t290 * t692 + t424 * t539 + t495) * pkin(4) + t451;
t111 = t424 * t686;
t465 = -t1 * qJD(1) + t111 * qJD(2) + t91 * qJD(3);
t450 = t399 * t700 - t455 / 0.2e1 - t559 / 0.2e1;
t11 = -t450 + t472;
t72 = t524 + t753 / 0.2e1;
t463 = qJD(1) * t11 + qJD(2) * t72 + qJD(4) * t399;
t12 = t525 + (-t76 / 0.2e1 - t62 / 0.2e1) * t443 + t521;
t73 = t523 + t752 / 0.2e1;
t462 = qJD(1) * t12 - qJD(2) * t73 - qJD(4) * t398;
t459 = qJD(2) * t123 + qJD(6) * t137 + t182 + t586;
t401 = t409 * qJD(2);
t394 = t420 * t589;
t370 = t399 * qJD(6);
t369 = t398 * qJD(6);
t315 = t322 * qJD(4);
t314 = t321 * qJD(4);
t297 = t685 / 0.2e1 + t466 * pkin(2);
t295 = pkin(4) * t490 + t561;
t294 = -t572 - t585;
t170 = pkin(4) * t491 + t528;
t169 = t174 * qJD(5);
t145 = t409 + t493;
t132 = t541 - t620;
t117 = t444 * t705 + t627 / 0.2e1 + t308 / 0.2e1 - t464;
t115 = t452 + t536;
t75 = 0.2e1 * t524 - t754;
t74 = t755 + 0.2e1 * t523;
t67 = -t110 - t716;
t66 = -t109 - t716;
t31 = t456 - t496;
t30 = t486 - t741;
t23 = t457 + t473;
t22 = t458 + t474;
t18 = t107 * t701 + t108 * t697 + t468 + t681;
t14 = t450 + t472;
t13 = t675 / 0.2e1 + t525 - t673 / 0.2e1 - t521;
t10 = -t449 + t453;
t9 = -t448 + t454;
t6 = t103 * t702 + t108 * t701 + t728 * t698 + t729 + t769;
t2 = pkin(4) * t495 + t290 * t561 + t424 * t528 - t451;
t36 = [0, 0, 0, t445 * t588, t431 * qJD(2), 0, 0, 0, -pkin(1) * t590, -pkin(1) * t588, -qJD(3) * t724, qJD(2) * t160 + qJD(3) * t213, -t352 * t439 - t414 * t545, -qJD(4) * t332 + t416 * t520, -t416 * t420 * t585 + qJD(2) * t271, -qJD(2) * t269 - t420 * t546, t352, qJD(2) * t51 - qJD(3) * t270 + qJD(4) * t139, qJD(2) * t52 - qJD(3) * t335 + qJD(4) * t138, qJD(2) * t15 + qJD(3) * t113 + qJD(4) * t16 + qJD(5) * t214, qJD(2) * t19 + qJD(3) * t33 + qJD(4) * t24 + qJD(5) * t38 (qJD(2) * t207 + t499) * t727, qJD(2) * t44 + t735 * t759, t95 * qJD(2) + t416 * t499, t93 * qJD(2) + (-qJD(6) * t727 - t586) * t416, t352, qJD(2) * t3 + qJD(3) * t94 + qJD(4) * t25 + qJD(6) * t28 - t583 * t727, qJD(2) * t4 + qJD(3) * t96 + qJD(4) * t26 + qJD(6) * t27 + t204 * t583; 0, 0, 0, t544, t566, t588, -t590, 0, -pkin(7) * t588 - t563, pkin(7) * t590 - t562 (t416 * t670 - t420 * t441) * t679, t578 + (-t355 * t441 - t670 * t723) * t679 + t297 * qJD(3), -t314 + (-t439 * t597 - t547) * t416, t416 * t469 - 0.2e1 * t420 * t545, t420 * t591 + t600, t394 - t602, t726, t625 + (t444 * t510 - t643) * qJD(2) + t117 * qJD(4), t624 + (t446 * t510 + t644) * qJD(2) + t115 * qJD(4), t656 + (-t105 * t418 + t106 * t415 + t299 * t312 - t301 * t725) * qJD(2) + t6 * qJD(4) + t169, t654 + (t105 * t725 + t106 * t312 + t289 * t424) * qJD(2) + t31 * qJD(3) + t2 * qJD(4) + t30 * qJD(5), t207 * t718 + t682, t641 + (-t203 * t487 - t207 * t530) * qJD(2) + t683, qJD(6) * t760 + t487 * t592 + t660 + t720, -t530 * t592 + t621 + t662, t722, t678 + (t203 * t359 + t211 * t530 + t420 * t488) * qJD(2) + t9 * qJD(4) - t124 * qJD(5) + t23 * qJD(6), t677 + (-t168 * t420 + t207 * t359 + t211 * t487) * qJD(2) + t10 * qJD(4) - t761 * qJD(5) + t22 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, qJD(2) * t297 + t603, 0, 0, 0, 0, 0, -t601, -t599, t614, t648 + t31 * qJD(2) + (t299 * t415 + t301 * t418) * qJD(3) + t18 * qJD(4) + t145 * qJD(5), 0, 0, 0, 0, 0, t621 + t661, qJD(6) * t132 + t659 - t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, -t470, t527 * t325, t479, t401, qJD(2) * t117 - qJD(4) * t224 + t607, qJD(2) * t115 + qJD(4) * t223 + t608, t655 + t6 * qJD(2) + (-t300 * t442 - t302 * t440) * t680, t649 + t2 * qJD(2) + t18 * qJD(3) + t170 * qJD(5) + (t107 * t442 + t108 * t440) * t680, t483, t512, t717, -t459, t401, qJD(2) * t9 - qJD(3) * t123 + qJD(4) * t39 + qJD(6) * t14 + t669, qJD(2) * t10 - qJD(3) * t760 - qJD(4) * t40 + qJD(6) * t13 + t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, qJD(2) * t30 + qJD(3) * t145 + qJD(4) * t170 + t664, 0, 0, 0, 0, 0, -t475, -qJD(2) * t761 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t484, t511, t204 * t526 - t196 + t766, qJD(2) * t134 - qJD(4) * t137 + t526 * t727, t401, qJD(2) * t23 + qJD(3) * t134 + qJD(4) * t14 + qJD(5) * t198 - qJD(6) * t35 + t666, qJD(2) * t22 + qJD(3) * t132 + qJD(4) * t13 + qJD(6) * t34 + t667; 0, 0, 0, -t544, -t566, 0, 0, 0, t563, t562, 0, qJD(3) * t298 - t578, t353 * t439 - t314, t479 * t731, qJD(4) * t328 - t600, -t315 + t602, -t726, qJD(4) * t116 - t420 * t587 - t625, qJD(3) * t325 + qJD(4) * t114 - t624, qJD(3) * t82 - qJD(4) * t5 + t169 - t656, qJD(3) * t32 - qJD(4) * t1 - qJD(5) * t29 - t654, -t207 * t737 + t682, -t641 + t683, -t759 * t762 - t660, t622 - t662, -t722, qJD(3) * t184 - qJD(4) * t7 - qJD(5) * t123 - qJD(6) * t20 - t678, qJD(3) * t187 - qJD(4) * t8 - qJD(5) * t760 - qJD(6) * t21 - t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, t430 * qJD(4), 0, 0, 0, t435 * t585, t435 * t584, qJD(5) * t346, qJD(4) * t111 + qJD(5) * t180, -t734 * t487, t759 * t736, 0, 0, 0, qJD(4) * t161 + t487 * t581, qJD(4) * t162 - t530 * t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t573, 0, 0, 0, 0, 0, -t543, t571, t663, t665 + t671, 0, 0, 0, 0, 0, t577, t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, -t469, t570 + t584, t294, -t568, -t434 * t584 - t477, t434 * t585 - t478 (-t415 * t442 - t418 * t440) * t680 - t517, t295 * qJD(5) + (-t312 * t442 + t440 * t725) * t680 + t465, t480, t509, t772, t66, -t568, -qJD(4) * t168 + t75 * qJD(6) + t515, -qJD(4) * t488 + t74 * qJD(6) + t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, qJD(4) * t295 + t507, 0, 0, 0, 0, 0, -t579, -t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t481, t508, t772, t67, -t568, qJD(4) * t75 - qJD(6) * t168 - t485, qJD(4) * t74 - qJD(6) * t488 - t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, -qJD(2) * t298 - t603, 0, 0, 0, 0, 0, -t315 + t394 + t601, -qJD(2) * t325 - t546 + t599, -qJD(2) * t82 - t614, -qJD(2) * t32 - qJD(4) * t17 - qJD(5) * t144 - t648, 0, 0, 0, 0, 0, -qJD(2) * t184 + t622 - t661, -qJD(2) * t187 - t759 * t761 - t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t573, 0, 0, 0, 0, 0, t543, -t571, -t663, -t665 + t671, 0, 0, 0, 0, 0, -t577, -t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, t506, 0 (-t635 + t640) * t680 - t513, 0, 0, 0, 0, 0, t66, t771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t606, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t470, -qJD(2) * t328 + t353 * t444, qJD(2) * t322 + t416 * t543, t401, -qJD(2) * t116 + qJD(3) * t322 - t607, -qJD(2) * t114 + t416 * t587 - t608, qJD(2) * t5 - t655, qJD(2) * t1 + qJD(3) * t17 + qJD(5) * t171 - t649, -t483, -t512, t765, t475, t401, qJD(2) * t7 + qJD(3) * t124 - qJD(5) * t727 - qJD(6) * t11 - t669, qJD(2) * t8 - qJD(6) * t12 - t668 + t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, t469, -t570, t572, t568, t477, t478, t517, qJD(5) * t296 - t465, -t480, -t509, t767, t109, t568, -t72 * qJD(6) - t515 - t719, qJD(6) * t73 - t514 + t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, t416 * t596, 0, t513, 0, 0, 0, 0, 0, t109, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, 0, 0, 0, 0, 0, -t718, -t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t605, 0, -t370 - t463, t369 - t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, qJD(2) * t29 + qJD(3) * t144 - qJD(4) * t171 - t664, 0, 0, 0, 0, 0, t459, t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t501, -qJD(4) * t296 - t507, 0, 0, 0, 0, 0, t579 + t716, t611 - t734; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t606, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, 0, 0, 0, 0, 0, t718, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t504, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, -t511, t765, qJD(2) * t125 + qJD(4) * t198 + t598 * t727, t401, qJD(2) * t20 + qJD(3) * t125 + qJD(4) * t11 - qJD(5) * t137 - t666, qJD(2) * t21 + qJD(4) * t12 - t667 + t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481, -t508, t767, t110, t568, qJD(4) * t72 + t485 - t719, -qJD(4) * t73 + t482 + t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t605, 0, t463, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504, -t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t36;
