% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPPRRP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRP4_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:06:19
% EndTime: 2019-03-09 02:06:25
% DurationCPUTime: 2.28s
% Computational Cost: add. (1560->209), mult. (3037->355), div. (0->0), fcn. (2476->6), ass. (0->141)
t83 = sin(qJ(4));
t77 = t83 ^ 2;
t85 = cos(qJ(4));
t79 = t85 ^ 2;
t156 = t77 - t79;
t117 = t156 * qJD(4);
t74 = t83 * qJD(4);
t80 = sin(pkin(9));
t123 = t80 * t74;
t82 = sin(qJ(5));
t164 = t82 * t85;
t81 = cos(pkin(9));
t84 = cos(qJ(5));
t40 = t80 * t164 + t81 * t84;
t18 = t40 * qJD(5) + t84 * t123;
t149 = qJD(5) * t85;
t126 = t84 * t149;
t151 = qJD(5) * t82;
t19 = -t82 * t123 + t80 * t126 - t81 * t151;
t162 = t84 * t85;
t143 = t80 * t162;
t41 = -t81 * t82 + t143;
t94 = -t18 * t84 + t19 * t82 + (t40 * t84 - t41 * t82) * qJD(5);
t145 = t85 * qJD(4);
t76 = t82 ^ 2;
t135 = t76 * t145;
t78 = t84 ^ 2;
t69 = t78 * t145;
t42 = t69 + t135;
t75 = qJD(5) * t84;
t127 = t83 * t75;
t45 = t82 * t145 + t127;
t157 = t76 - t78;
t147 = t81 * qJD(2);
t86 = -pkin(1) - pkin(2);
t158 = t81 * qJ(2) + t80 * t86;
t49 = -pkin(7) + t158;
t100 = -t49 * t145 - t83 * t147;
t170 = pkin(8) * t85;
t113 = pkin(4) * t83 - t170;
t174 = t113 * qJD(5) + t100;
t121 = t85 * t147;
t134 = t82 * t74;
t38 = t49 * t162;
t168 = t83 * pkin(8);
t118 = -t80 * qJ(2) + t81 * t86;
t48 = pkin(3) - t118;
t102 = t48 + t168;
t167 = t85 * pkin(4);
t99 = t102 + t167;
t161 = t82 * t99 + t38;
t148 = t80 * qJD(2);
t97 = -t113 * qJD(4) + t148;
t4 = -qJD(5) * t161 - t82 * t121 + t49 * t134 + t84 * t97;
t173 = 0.2e1 * qJD(2);
t172 = 2 * qJD(6);
t171 = pkin(5) * t82;
t109 = -pkin(5) * t84 - qJ(6) * t82;
t101 = t109 * qJD(5);
t120 = qJ(6) * t145;
t146 = t84 * qJD(6);
t160 = t84 * t120 + t83 * t146;
t6 = (t49 - t171) * t145 + (t101 + t147) * t83 + t160;
t169 = t6 * t84;
t108 = -qJ(6) * t84 + t171;
t39 = t108 * qJD(5) - t82 * qJD(6);
t166 = t39 * t83;
t165 = t49 * t84;
t163 = t83 * t84;
t159 = t42 * pkin(8);
t16 = (-t108 + t49) * t83;
t155 = qJD(4) * t16;
t153 = qJD(4) * t84;
t152 = qJD(5) * t77;
t150 = qJD(5) * t83;
t144 = -0.2e1 * pkin(4) * qJD(5);
t142 = t49 * t164;
t141 = 0.2e1 * t147;
t95 = t84 * t99;
t140 = qJD(5) * t95 + t84 * t121 + t82 * t97;
t139 = pkin(5) * t74;
t138 = pkin(8) * t151;
t137 = pkin(8) * t75;
t136 = t80 * t147;
t132 = t84 * t145;
t131 = t49 * t151;
t130 = t49 * t150;
t129 = t80 * t152;
t128 = t82 * t149;
t125 = t82 * t75;
t124 = t83 * t145;
t122 = t80 * t145;
t119 = qJ(6) * t150;
t65 = -0.2e1 * t124;
t116 = 0.2e1 * t124;
t115 = t77 * t125;
t114 = t82 * t65;
t7 = qJ(6) * t85 + t161;
t8 = -t84 * t102 + (-pkin(4) * t84 + t49 * t82 - pkin(5)) * t85;
t112 = t7 * t84 + t8 * t82;
t111 = t7 * t82 - t8 * t84;
t51 = -pkin(4) + t109;
t110 = -t51 * t83 - t170;
t10 = t95 - t142;
t107 = t10 * t84 + t161 * t82;
t106 = -t10 * t82 + t161 * t84;
t105 = t51 * t145 + t166;
t104 = 0.2e1 * t80 ^ 2 * t124 - 0.2e1 * t41 * t18 + 0.2e1 * t19 * t40;
t43 = t82 * t150 - t132;
t44 = t84 * t74 + t128;
t96 = t101 + t146;
t1 = (qJD(6) - t131) * t85 + (-qJ(6) - t165) * t74 + t140;
t2 = t139 - t4;
t93 = -t111 * qJD(5) + t1 * t84 + t2 * t82;
t92 = t80 * t114 - t84 * t129 - t19 * t85 + t40 * t74;
t3 = t44 * t49 - t140;
t91 = -t107 * qJD(5) - t3 * t84 - t4 * t82;
t90 = t94 * pkin(8);
t88 = -t18 * t82 * t83 - t19 * t163 + t43 * t40 + t45 * t41;
t87 = t40 * t127 - t18 * t163 + t41 * t132 + (t40 * t145 + (-qJD(5) * t41 + t19) * t83) * t82 + t80 * t117;
t64 = -0.2e1 * t125;
t63 = 0.2e1 * t125;
t61 = pkin(8) * t134;
t57 = t78 * t124;
t56 = t76 * t124;
t55 = t157 * qJD(5);
t50 = t77 * t136;
t46 = t126 - t134;
t34 = t77 * t49 * t147;
t33 = t43 * t80;
t32 = t45 * t80;
t31 = 0.2e1 * t57 - 0.2e1 * t115;
t30 = 0.2e1 * t56 + 0.2e1 * t115;
t25 = -t82 * t132 + t157 * t150;
t24 = -t82 * t117 + t83 * t126;
t23 = 0.4e1 * t83 * t125 + t135 - t69;
t21 = 0.2e1 * t83 * t128 + 0.2e1 * t156 * t153;
t20 = t84 * t114 + t157 * t152;
t17 = 0.2e1 * t56 + 0.2e1 * t57 - 0.2e1 * t124;
t5 = -t82 * t129 - t18 * t85 + (-t41 + 0.2e1 * t143) * t74;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, qJ(2) * t173, 0, 0, 0, 0, 0, 0, 0.2e1 * t148, t141, 0 (-t118 * t80 + t158 * t81) * t173, t116, -0.2e1 * t117, 0, t65, 0, 0, 0.2e1 * t85 * t148 - 0.2e1 * t48 * t74, -0.2e1 * t48 * t145 - 0.2e1 * t83 * t148 (-t77 - t79) * t141, 0.2e1 * t34 + 0.2e1 * (t49 * t79 * t81 + t48 * t80) * qJD(2), t31, 0.2e1 * t20, t21, t30, 0.2e1 * t24, t65, 0.2e1 * t4 * t85 + 0.2e1 * (-t82 * t147 - t49 * t75) * t77 + 0.2e1 * (-t10 - 0.2e1 * t142) * t74, 0.2e1 * t3 * t85 + 0.2e1 * (-t84 * t147 + t131) * t77 + 0.2e1 * (t161 - 0.2e1 * t38) * t74, 0.2e1 * t107 * t145 + 0.2e1 * (t106 * qJD(5) - t3 * t82 + t4 * t84) * t83, 0.2e1 * t49 ^ 2 * t124 + 0.2e1 * t10 * t4 - 0.2e1 * t161 * t3 + 0.2e1 * t34, t31, t21, -0.2e1 * t20, t65, -0.2e1 * t24, t30, 0.2e1 * (-t82 * t155 - t2) * t85 + 0.2e1 * (qJD(4) * t8 - t16 * t75 - t6 * t82) * t83, 0.2e1 * t111 * t145 + 0.2e1 * (t112 * qJD(5) + t1 * t82 - t2 * t84) * t83, 0.2e1 * (t16 * t153 + t1) * t85 + 0.2e1 * (-qJD(4) * t7 - t16 * t151 + t169) * t83, 0.2e1 * t1 * t7 + 0.2e1 * t16 * t6 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81 * t74, t81 * t145, 0, t50 + (t79 - 0.1e1) * t136, 0, 0, 0, 0, 0, 0, t92, -t5, t88, t49 * t80 * t116 - t10 * t19 - t161 * t18 - t3 * t41 - t4 * t40 + t50, 0, 0, 0, 0, 0, 0, t92, t88, t5, t1 * t41 - t7 * t18 + t8 * t19 + t2 * t40 + (t16 * t145 + t6 * t83) * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t106 * t85 + t156 * t49) * qJD(4) + (t91 - t121) * t83, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(4) * t112 - t6) * t85 + (t93 + t155) * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, 0, t74, 0, t100, t49 * t74 - t121, 0, 0, t25, t23, t46, -t25, -t44, 0, t61 + (pkin(4) * t145 + t130) * t82 + t174 * t84 (t130 + (t167 + t168) * qJD(4)) * t84 - t174 * t82, t91, t100 * pkin(4) + t91 * pkin(8), t25, t46, -t23, 0, t44, -t25, -t169 + t61 - t105 * t82 + (t110 * t84 + t16 * t82) * qJD(5), t93 (t110 * qJD(5) - t6) * t82 + (-qJD(5) * t16 + t166 + (t51 * t85 - t168) * qJD(4)) * t84, pkin(8) * t93 + t16 * t39 + t6 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, t123, 0, 0, 0, 0, 0, 0, 0, 0, t33, t32, t94, -pkin(4) * t122 + t90, 0, 0, 0, 0, 0, 0, t33, t94, -t32, t105 * t80 + t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, -t145, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t46, t42, -pkin(4) * t74 + t159, 0, 0, 0, 0, 0, 0, -t44, t42, t46, -t39 * t85 + t51 * t74 + t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, -0.2e1 * t55, 0, t64, 0, 0, t82 * t144, t84 * t144, 0, 0, t63, 0, 0.2e1 * t55, 0, 0, t64, 0.2e1 * t51 * t151 - 0.2e1 * t39 * t84, 0, -0.2e1 * t39 * t82 - 0.2e1 * t51 * t75, 0.2e1 * t51 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, t45, -t74, t4, t3, 0, 0, 0, t43, 0, -t74, -t45, 0, t4 - 0.2e1 * t139 (pkin(5) * t145 + t119) * t84 + (t120 + (-pkin(5) * qJD(5) + qJD(6)) * t83) * t82 (t172 - t131) * t85 + (-0.2e1 * qJ(6) - t165) * t74 + t140, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19, t18, 0, 0, 0, 0, 0, 0, 0, 0, -t19, 0, -t18, -pkin(5) * t19 - qJ(6) * t18 + qJD(6) * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, t43, 0, 0, 0, 0, 0, 0, 0, 0, -t45, 0, -t43, -pkin(5) * t45 - t119 * t82 + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t151, 0, -t137, t138, 0, 0, 0, t75, 0, 0, t151, 0, -t137, t96, -t138, t96 * pkin(8); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, qJ(6) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t43, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
