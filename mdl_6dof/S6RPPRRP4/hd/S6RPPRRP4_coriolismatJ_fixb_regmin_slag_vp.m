% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:06:22
% EndTime: 2019-03-09 02:06:34
% DurationCPUTime: 5.85s
% Computational Cost: add. (4387->452), mult. (7632->604), div. (0->0), fcn. (6930->6), ass. (0->341)
t254 = cos(pkin(9));
t253 = sin(pkin(9));
t257 = cos(qJ(5));
t403 = t257 * t253;
t316 = -t403 / 0.2e1;
t255 = sin(qJ(5));
t258 = cos(qJ(4));
t411 = t255 * t258;
t318 = t411 / 0.2e1;
t401 = t257 * t258;
t413 = t255 * t254;
t176 = t253 * t401 - t413;
t454 = t258 / 0.2e1;
t323 = t176 * t454;
t256 = sin(qJ(4));
t250 = t256 ^ 2;
t462 = t250 / 0.2e1;
t77 = t254 * t318 + t403 * t462 + t316 + t323;
t391 = t77 * qJD(2);
t471 = -pkin(1) - pkin(2);
t381 = t254 * qJ(2) + t253 * t471;
t195 = -pkin(7) + t381;
t286 = -t253 * qJ(2) + t254 * t471;
t194 = pkin(3) - t286;
t449 = t256 * pkin(8);
t269 = t194 + t449;
t447 = t258 * pkin(4);
t264 = t269 + t447;
t88 = t195 * t401 + t255 * t264;
t494 = -t88 * qJD(5) - t391;
t402 = t257 * t254;
t174 = t253 * t411 + t402;
t319 = -t411 / 0.2e1;
t292 = t253 * t319 + t174 / 0.2e1;
t315 = -t402 / 0.2e1;
t270 = (t292 + t315) * t256;
t175 = t254 * t411 - t403;
t119 = t175 * t258 + t250 * t413;
t489 = t119 * qJD(1);
t493 = qJD(4) * t270 - t77 * qJD(5) - t489;
t353 = t462 + 0.1e1 / 0.2e1;
t261 = (t176 / 0.2e1 - t413 / 0.2e1) * t258 + t353 * t403;
t265 = (t402 / 0.2e1 + t292) * t256;
t492 = qJD(4) * t265 - qJD(5) * t261 + t489;
t356 = t258 * qJD(4);
t326 = t253 * t356;
t359 = t256 * qJD(5);
t343 = t255 * t359;
t477 = t265 * qJD(1);
t491 = t253 * t343 - t257 * t326 + t477;
t249 = t255 ^ 2;
t251 = t257 ^ 2;
t380 = t249 + t251;
t311 = qJD(4) * t380;
t362 = t255 * qJD(6);
t490 = pkin(8) * t311 + t362;
t360 = t256 * qJD(4);
t334 = t253 * t360;
t478 = t261 * qJD(1);
t481 = t176 * qJD(5) - t255 * t334 + t478;
t488 = t119 * qJD(2);
t486 = 0.2e1 * t255;
t330 = t257 * t360;
t414 = t255 * t253;
t468 = -t174 / 0.2e1;
t76 = (t468 + t315) * t258 - t353 * t414;
t393 = t76 * qJD(1);
t484 = -t174 * qJD(5) - t253 * t330 + t393;
t177 = t254 * t401 + t414;
t121 = t177 * t258 + t250 * t402;
t371 = t121 * qJD(1);
t314 = t401 / 0.2e1;
t467 = -t176 / 0.2e1;
t291 = t253 * t314 + t467;
t96 = (t413 / 0.2e1 + t291) * t256;
t483 = -t96 * qJD(4) - t76 * qJD(5) + t371;
t455 = -t258 / 0.2e1;
t324 = t174 * t455;
t75 = t254 * t314 + t324 + (-t250 / 0.2e1 + 0.1e1 / 0.2e1) * t414;
t412 = t255 * t256;
t320 = -t412 / 0.2e1;
t97 = t254 * t320 + t256 * t291;
t482 = t97 * qJD(4) + t75 * qJD(5) + t371;
t480 = qJD(2) * t265;
t389 = t261 * qJD(2);
t476 = t270 * qJD(2);
t181 = t255 * t356 + t257 * t359;
t385 = t96 * qJD(1);
t475 = t181 * t253 - t385;
t473 = pkin(5) / 0.2e1;
t406 = t257 * t195;
t313 = -qJ(6) - t406;
t452 = t255 * pkin(4);
t68 = t255 * t269 + (-t313 + t452) * t258;
t472 = -t68 / 0.2e1;
t407 = t257 * qJ(6);
t238 = t256 * t407;
t453 = pkin(5) * t255;
t113 = t238 + (t195 - t453) * t256;
t470 = t113 / 0.2e1;
t161 = t195 * t412;
t469 = -t161 / 0.2e1;
t466 = -t177 / 0.2e1;
t415 = t255 * qJ(6);
t448 = t257 * pkin(5);
t304 = -t415 - t448;
t183 = t304 * t256;
t465 = -t183 / 0.2e1;
t217 = -t407 + t453;
t464 = t217 / 0.2e1;
t446 = t258 * pkin(8);
t451 = t256 * pkin(4);
t218 = t446 - t451;
t463 = -t218 / 0.2e1;
t461 = t251 / 0.2e1;
t460 = t255 / 0.2e1;
t459 = -t256 / 0.2e1;
t458 = t256 / 0.2e1;
t457 = -t257 / 0.2e1;
t456 = t257 / 0.2e1;
t450 = t256 * pkin(5);
t252 = t258 ^ 2;
t354 = 0.1e1 / 0.2e1 - t249 / 0.2e1;
t428 = t176 * t257;
t429 = t174 * t255;
t35 = (-t428 / 0.2e1 - t429 / 0.2e1) * t258 + (t252 / 0.2e1 + (t461 - t354) * t250) * t253;
t445 = t35 * qJD(4);
t444 = t68 * t258;
t416 = t253 * t256;
t321 = t416 / 0.2e1;
t125 = t257 * t264;
t425 = t195 * t255;
t71 = -t125 + (-pkin(5) + t425) * t258;
t346 = t195 * t411;
t87 = -t125 + t346;
t347 = -t87 / 0.2e1 + t71 / 0.2e1;
t348 = t472 + t88 / 0.2e1;
t260 = t174 * t348 + t176 * t347 + t183 * t321;
t288 = qJ(6) * t466 + t175 * t473;
t7 = t260 + t288;
t443 = t7 * qJD(1);
t442 = t87 * t258;
t441 = t88 * t258;
t199 = t255 * t218;
t104 = t256 * t313 + t199;
t440 = t104 * t257;
t405 = t257 * t218;
t312 = t161 + t405;
t105 = -t312 + t450;
t439 = t105 * t255;
t267 = t348 * t255 + t347 * t257;
t11 = t183 * t455 + t256 * t267;
t438 = t11 * qJD(1);
t437 = t113 * t255;
t436 = t113 * t257;
t435 = t113 * t258;
t114 = (t195 - t217) * t258;
t434 = t114 * t257;
t12 = (pkin(5) * t454 - t347) * t257 + (qJ(6) * t454 - t348) * t255;
t433 = t12 * qJD(1);
t14 = ((t68 - t88) * t257 + (t71 - t87) * t255) * t256;
t432 = t14 * qJD(1);
t15 = (-t105 * t256 - t71 * t258) * t257 + (t104 * t256 + t444) * t255;
t431 = t15 * qJD(1);
t17 = (t104 + t436) * t258 + (-t68 + t434) * t256;
t430 = t17 * qJD(1);
t18 = t105 * t258 - t71 * t256 + (t114 * t256 + t435) * t255;
t427 = t18 * qJD(1);
t426 = t183 * t255;
t202 = -pkin(4) + t304;
t424 = t202 * t255;
t423 = t202 * t257;
t422 = t217 * t255;
t421 = t217 * t257;
t23 = t441 + (t426 + t436) * t256;
t420 = t23 * qJD(1);
t24 = -t442 + (t183 * t257 - t437) * t256;
t419 = t24 * qJD(1);
t25 = t312 * t258 + (t87 - 0.2e1 * t346) * t256;
t418 = t25 * qJD(1);
t417 = t251 * t258;
t410 = t256 * t202;
t409 = t256 * t257;
t408 = t256 * t258;
t404 = t257 * t250;
t345 = t256 * t406;
t26 = -t88 * t256 + (t199 + t345) * t258;
t400 = t26 * qJD(1);
t29 = t113 * t409 + t444;
t399 = t29 * qJD(1);
t31 = (t324 + t466) * t257 + (t323 - t175 / 0.2e1) * t255;
t398 = t31 * qJD(1);
t36 = -t250 * t425 - t442;
t397 = t36 * qJD(1);
t37 = -t195 * t404 - t441;
t396 = t37 * qJD(1);
t282 = t175 * t460 + t177 * t456;
t46 = (t254 * t455 + t282) * t256;
t395 = t46 * qJD(1);
t392 = t76 * qJD(2);
t86 = (-t175 * t257 + t177 * t255) * t256;
t388 = t86 * qJD(1);
t384 = t96 * qJD(2);
t383 = t97 * qJD(2);
t185 = t249 * t458 + t251 * t459;
t233 = t251 - t249;
t234 = t252 - t250;
t379 = qJ(2) * qJD(1);
t378 = qJD(4) * t255;
t377 = qJD(4) * t257;
t376 = qJD(5) * t255;
t375 = qJD(5) * t257;
t110 = -t253 * t286 + t254 * t381;
t374 = t110 * qJD(1);
t370 = t121 * qJD(2);
t197 = t234 * t255;
t369 = t197 * qJD(1);
t198 = t257 * t252 - t404;
t368 = t198 * qJD(1);
t367 = t234 * qJD(1);
t366 = t253 * qJD(1);
t365 = t253 * qJD(2);
t364 = t254 * qJD(1);
t363 = t254 * qJD(2);
t361 = t256 * qJD(1);
t358 = t257 * qJD(6);
t357 = t258 * qJD(1);
t355 = t258 * qJD(5);
t247 = t258 * qJD(6);
t352 = pkin(8) * t376;
t351 = pkin(8) * t375;
t350 = t450 / 0.2e1;
t349 = -t446 / 0.2e1;
t344 = t257 * t361;
t342 = t255 * t355;
t341 = t257 * t355;
t340 = t254 * t357;
t339 = t255 * t360;
t338 = t255 * t375;
t237 = t255 * t377;
t337 = t255 * t358;
t336 = t256 * t356;
t335 = t253 * t361;
t333 = t254 * t361;
t332 = t256 * t362;
t331 = t256 * t357;
t329 = t256 * t358;
t328 = t257 * t357;
t327 = t253 * t357;
t325 = t437 / 0.2e1;
t322 = -t424 / 0.2e1;
t317 = t410 / 0.2e1;
t168 = (t461 + t354) * t256;
t310 = t168 * qJD(1) - t237;
t309 = t185 * qJD(1) + t237;
t216 = t255 * qJD(1) * t404;
t308 = t185 * qJD(4) - t216;
t239 = qJD(5) + t357;
t307 = t255 * t344;
t306 = t255 * t330;
t305 = t161 / 0.2e1 + t325;
t273 = t68 * t456 - t114 / 0.2e1 + t71 * t460;
t8 = t273 * t258 + (t440 / 0.2e1 + t470 + t439 / 0.2e1) * t256;
t9 = t68 * t104 + t71 * t105 + t113 * t114;
t303 = t9 * qJD(1) + t8 * qJD(3);
t10 = t113 * t183 - t68 * t87 + t71 * t88;
t302 = t10 * qJD(1) + t11 * qJD(3);
t16 = t113 * t256 * t254 + t71 * t175 + t68 * t177;
t301 = t16 * qJD(1) + t46 * qJD(3);
t300 = -t75 * qJD(2) + t87 * qJD(5);
t297 = t439 + t440;
t122 = t422 + t423;
t187 = -t199 / 0.2e1;
t279 = pkin(8) * t319 - t436 / 0.2e1 - t426 / 0.2e1;
t19 = t187 + (t322 + qJ(6) + (t464 + t195 / 0.2e1) * t257) * t256 + t279;
t296 = -t19 * qJD(1) + t122 * qJD(4);
t123 = t421 - t424;
t275 = t463 + t349 - t410 / 0.2e1;
t21 = t450 + t469 + (t217 * t459 + t470) * t255 + (t465 + t275) * t257;
t295 = -t21 * qJD(1) + t123 * qJD(4);
t193 = t239 * t257;
t294 = qJD(1) * t194 - t363;
t293 = t349 + t451 / 0.2e1;
t289 = -t104 * qJ(6) / 0.2e1 + t105 * t473;
t287 = t407 / 0.2e1 - t453 / 0.2e1;
t186 = t199 / 0.2e1;
t223 = pkin(8) * t318;
t117 = pkin(4) * t320 + t186 + t223;
t285 = pkin(4) * t377 - t117 * qJD(1);
t118 = (t463 + t293) * t257;
t284 = pkin(4) * t378 - t118 * qJD(1);
t283 = t104 * t467 + t105 * t468;
t27 = t257 * t275 + t325 + t350 + t469;
t281 = t27 * qJD(1) + t202 * t378;
t280 = t256 * t193;
t196 = t233 * t250;
t278 = -t196 * qJD(1) + 0.2e1 * t306;
t277 = t233 * qJD(4) + 0.2e1 * t307;
t274 = t464 + t287;
t262 = pkin(8) * t282 + t254 * t317;
t2 = (-t435 / 0.2e1 + t273 * t256) * t253 + t262 + t283;
t43 = -t253 ^ 2 * t408 + (t428 + t429) * t416;
t272 = -t2 * qJD(1) - t43 * qJD(2) - t35 * qJD(3);
t126 = (-0.1e1 + t380) * t408;
t271 = t8 * qJD(1) - t35 * qJD(2) + t126 * qJD(3);
t268 = qJD(5) * t304 + t358;
t215 = t251 * t250 + t252;
t266 = -t215 * qJD(1) + t306 - t355;
t115 = t274 * t258;
t33 = t274 * t416;
t259 = t267 * pkin(8) + t113 * t464 + t183 * t202 / 0.2e1;
t5 = t259 + t289;
t263 = t202 * t217 * qJD(4) + t5 * qJD(1) + t33 * qJD(2) - t115 * qJD(3);
t243 = t249 * t258;
t241 = -t360 / 0.2e1;
t240 = pkin(8) * t412;
t214 = t239 * qJ(6);
t190 = (t357 + qJD(5) / 0.2e1) * t256;
t188 = t405 / 0.2e1;
t182 = -t339 + t341;
t180 = -t330 - t342;
t179 = -t257 * t356 + t343;
t178 = -t249 * qJD(4) + t307;
t173 = t185 * qJD(5);
t169 = t458 + t185;
t163 = (-t255 * t361 - t377) * t258;
t162 = t239 * t412;
t116 = t217 * t455 + t258 * t287;
t73 = t257 * t293 + t161 + t188;
t72 = t223 + t187 + (-t452 / 0.2e1 + t406) * t256;
t34 = t217 * t321 - t287 * t416;
t30 = (t174 * t457 + t176 * t460) * t258 + t282;
t28 = pkin(8) * t314 + t257 * t317 - t405 / 0.2e1 + t350 - t305;
t22 = t188 + (t465 + t349) * t257 + (-t422 / 0.2e1 - t423 / 0.2e1 - pkin(5)) * t256 + t305;
t20 = -t345 / 0.2e1 + t186 + (t421 / 0.2e1 + t322 - qJ(6)) * t256 + t279;
t13 = t87 * t457 + t255 * t472 + t88 * t460 + t71 * t456 + (t415 / 0.2e1 + t448 / 0.2e1) * t258;
t6 = t260 - t288;
t4 = t259 - t289;
t3 = t68 * t256 * t316 + t114 * t321 + t262 - t283 + (t435 / 0.2e1 + t71 * t320) * t253;
t1 = t46 * qJD(2) + t8 * qJD(4) + t11 * qJD(5);
t32 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), t365, t363, t110 * qJD(2), t336, t234 * qJD(4), 0, 0, 0, -t194 * t360 + t258 * t365, -t194 * t356 - t256 * t365, -t250 * t338 + t251 * t336, -t196 * qJD(5) - 0.2e1 * t258 * t306, -t198 * qJD(4) + t256 * t342, t197 * qJD(4) + t256 * t341, -t336, t25 * qJD(4) + t37 * qJD(5) - t488, -t26 * qJD(4) - t36 * qJD(5) - t370, -t18 * qJD(4) - t23 * qJD(5) - t250 * t337 - t488, t86 * qJD(2) + t15 * qJD(4) + t14 * qJD(5) + t258 * t332, t17 * qJD(4) + t24 * qJD(5) + t215 * qJD(6) + t370, t16 * qJD(2) + t9 * qJD(4) + t10 * qJD(5) + t29 * qJD(6); 0, 0, 0, 0, qJD(1), t379, t366, t364, t374, 0, 0, 0, 0, 0, t327, -t335, 0, 0, 0, 0, 0, t493, -t482, t493, t30 * qJD(4) + t388, t482 (t250 * t254 * t253 + t175 * t174 + t177 * t176) * qJD(2) + t3 * qJD(4) + t6 * qJD(5) + t77 * qJD(6) + t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, t367, -t356, t360, 0, -t194 * t361 - t195 * t356, -t194 * t357 + t195 * t360, t173 + (t251 * t361 - t237) * t258 (t243 - t417) * qJD(4) + (qJD(5) - t357) * t409 * t486, -t339 - t368, -t330 + t369, -t190, t418 + t476 + (t240 + (-t406 + t452) * t258) * qJD(4) + t73 * qJD(5), -t400 - t383 + (t346 + (t447 + t449) * t257) * qJD(4) + t72 * qJD(5), -t427 + t476 + (-t202 * t411 + t240 - t434) * qJD(4) + t22 * qJD(5) + t169 * qJD(6), t30 * qJD(2) + qJD(4) * t297 + t13 * qJD(5) + t431, -t114 * t378 + t430 + t383 + t20 * qJD(5) + ((t202 * t258 - t449) * qJD(4) - t332) * t257, t3 * qJD(2) + (pkin(8) * t297 + t114 * t202) * qJD(4) + t4 * qJD(5) + t28 * qJD(6) + t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, t278, t162, t280, t241, t73 * qJD(4) + t396 + t494, t72 * qJD(4) + t300 - t397, t22 * qJD(4) - t420 + t494, t432 + t13 * qJD(4) + (-pkin(5) * t412 + t238) * qJD(5) + t332, t20 * qJD(4) + t247 - t300 + t419, t6 * qJD(2) + t4 * qJD(4) + (-t88 * pkin(5) - t87 * qJ(6)) * qJD(5) + t68 * qJD(6) + t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169 * qJD(4) - t216, t162, -t266, t28 * qJD(4) + t68 * qJD(5) + t391 + t399; 0, 0, 0, 0, -qJD(1), -t379, -t366, -t364, -t374, 0, 0, 0, 0, 0, t254 * t360 - t327, t254 * t356 + t335, 0, 0, 0, 0, 0, t492, t483, t492, t31 * qJD(4) - t388, -t483, -t2 * qJD(4) + t7 * qJD(5) + qJD(6) * t261 - t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395 - t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326 + t333, t334 + t340, 0, 0, 0, 0, 0, t491, t475, t491, -t311 * t416 + t398, -t475, t34 * qJD(5) + (t202 * t356 - t256 * t490) * t253 + t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t481, -t484, -t481, 0, t484, t443 + t34 * qJD(4) + (-t176 * pkin(5) - t174 * qJ(6)) * qJD(5) + t176 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395 - t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360, -t356, 0, 0, 0, 0, 0, t180, -t182, t180 (t243 + t417) * qJD(4), t182, t116 * qJD(5) + t202 * t360 + t258 * t490 + t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, t179, -t181, 0, -t179, t116 * qJD(4) + t183 * qJD(5) + t329 + t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t331, -t367, 0, 0, 0, t294 * t256, t294 * t258, -t251 * t331 + t173, t280 * t486, t341 + t368, -t342 - t369, t190, t118 * qJD(5) - t418 - t480, t117 * qJD(5) + t384 + t400, t21 * qJD(5) - t168 * qJD(6) + t427 - t480, -t31 * qJD(2) - t12 * qJD(5) + t247 * t257 - t431, t19 * qJD(5) - t255 * t329 - t384 - t430, t2 * qJD(2) + t5 * qJD(5) - t27 * qJD(6) - t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, -t340, 0, 0, 0, 0, 0, -t477, t385, -t477, -t398, -t385, t33 * qJD(5) - t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115 * qJD(5) - t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t233 * qJD(5), 0, 0, 0, -pkin(4) * t376, -pkin(4) * t375, -t123 * qJD(5) + t337, 0, -t122 * qJD(5) + t249 * qJD(6) (qJD(5) * t217 - t362) * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t277, t193, -t239 * t255, t361 / 0.2e1, -t284 - t351, -t285 + t352, -t295 - t351, t268 - t433, -t296 - t352, pkin(8) * t268 + t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310, t193, -t178, -t281 + t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, -t278, t163 (-t344 + t378) * t258, t241, -t118 * qJD(4) + t389 - t396, -t117 * qJD(4) + t392 + t397, -t21 * qJD(4) + t389 + t420, t12 * qJD(4) - t432, -t19 * qJD(4) + t247 - t392 - t419, qJ(6) * t247 - t7 * qJD(2) - t5 * qJD(4) - t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, t393, t478, 0, -t393, -t33 * qJD(4) - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 * qJD(4) - t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, -t277, -t328, t255 * t357, -t361 / 0.2e1, t284, t285, t295, t433, t296, -t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168 * qJD(4) + t216, t163, t266, -qJ(6) * t355 + t27 * qJD(4) - t389 - t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310, -t328, t178, t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t32;
