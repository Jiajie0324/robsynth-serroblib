% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:01:16
% EndTime: 2019-03-09 06:01:25
% DurationCPUTime: 3.59s
% Computational Cost: add. (3962->308), mult. (9267->512), div. (0->0), fcn. (8048->8), ass. (0->164)
t123 = sin(qJ(4));
t124 = sin(qJ(3));
t126 = cos(qJ(3));
t182 = t126 * qJD(3);
t125 = cos(qJ(4));
t184 = qJD(4) * t125;
t214 = t123 * t182 + t124 * t184;
t213 = -0.4e1 * t124;
t205 = sin(qJ(5));
t164 = qJD(3) * t205;
t146 = t126 * t164;
t206 = cos(qJ(5));
t165 = qJD(3) * t206;
t147 = t126 * t165;
t175 = t205 * t123;
t150 = t124 * t175;
t210 = qJD(4) + qJD(5);
t162 = t206 * qJD(5);
t211 = t206 * qJD(4) + t162;
t37 = t123 * t147 + (t211 * t124 + t146) * t125 - t210 * t150;
t87 = t206 * t123 + t205 * t125;
t72 = t87 * t124;
t212 = t37 * qJ(6) + t72 * qJD(6);
t119 = t123 ^ 2;
t121 = t125 ^ 2;
t159 = qJD(4) * (t119 - t121);
t120 = t124 ^ 2;
t186 = -t126 ^ 2 + t120;
t158 = t186 * qJD(3);
t112 = sin(pkin(10)) * pkin(1) + pkin(7);
t113 = -cos(pkin(10)) * pkin(1) - pkin(2);
t199 = t126 * pkin(3);
t137 = t113 - t199;
t201 = t124 * pkin(8);
t136 = t137 - t201;
t135 = t125 * t136;
t203 = pkin(8) * t126;
t204 = pkin(3) * t124;
t144 = -t203 + t204;
t138 = t144 * t123;
t118 = t124 * qJD(3);
t183 = qJD(4) * t126;
t173 = t123 * t183;
t77 = t125 * t118 + t173;
t34 = -qJD(3) * t138 - qJD(4) * t135 + t112 * t77;
t208 = -pkin(9) - pkin(8);
t209 = t208 * t124 + t137;
t207 = t37 * pkin(5);
t202 = t124 * pkin(4);
t200 = t125 * pkin(3);
t198 = t72 * t37;
t60 = t210 * t87;
t36 = t123 * t146 + t60 * t124 - t125 * t147;
t176 = t206 * t125;
t73 = t124 * t176 - t150;
t197 = t73 * t36;
t86 = t175 - t176;
t195 = t36 * t86 - t73 * t60;
t157 = pkin(4) * t162;
t179 = t205 * pkin(4);
t194 = -t72 * t157 - t37 * t179;
t190 = t123 * t112;
t160 = -pkin(4) - t190;
t132 = t209 * t125 + t160 * t126;
t45 = t205 * t132;
t189 = t123 * t124;
t188 = t125 * t126;
t91 = t112 * t188;
t58 = t123 * t136 + t91;
t53 = -pkin(9) * t189 + t58;
t24 = t206 * t53 + t45;
t193 = -t86 * t157 - t60 * t179;
t192 = t73 * t157 - t36 * t179;
t154 = t208 * t205;
t99 = t208 * t125;
t63 = t123 * t154 - t206 * t99;
t98 = t124 * t112;
t75 = pkin(4) * t189 + t98;
t185 = qJD(4) * t123;
t181 = -0.2e1 * pkin(3) * qJD(4);
t180 = 0.2e1 * qJD(3) * t113;
t178 = pkin(4) * t185;
t92 = t112 * t182;
t61 = t214 * pkin(4) + t92;
t177 = t126 * t190;
t116 = -t125 * pkin(4) - pkin(3);
t174 = qJD(4) * t112 * t120;
t171 = t125 * t183;
t170 = t119 * t182;
t168 = t123 * t184;
t167 = t124 * t182;
t166 = t125 * t182;
t161 = t205 * qJD(5);
t156 = pkin(4) * t161;
t155 = t208 * t206;
t153 = t72 * t161;
t152 = t73 * t161;
t151 = t87 * t161;
t149 = t123 * t166;
t148 = t120 * t168;
t46 = t206 * t132;
t23 = -t205 * t53 + t46;
t89 = t123 * t155;
t62 = t205 * t99 + t89;
t145 = -t199 - t201;
t59 = (t205 * qJD(4) + t161) * t123 - t211 * t125;
t143 = -t87 * t37 + t72 * t59;
t57 = t135 - t177;
t142 = -t123 * t58 - t125 * t57;
t141 = t123 * t57 - t125 * t58;
t140 = qJD(4) * t155;
t139 = qJD(4) * t154;
t40 = t86 * t118 - t126 * t60;
t129 = (-t209 * t123 - t91) * qJD(4) + (t208 * t188 + (-t160 + t200) * t124) * qJD(3);
t131 = -pkin(9) * t214 - t34;
t4 = -qJD(5) * t46 - t205 * t129 - t206 * t131 + t53 * t161;
t38 = -qJD(5) * t89 - t123 * t140 - t125 * t139 - t99 * t161;
t35 = -t58 * qJD(4) + (t123 * t98 + t125 * t144) * qJD(3);
t134 = t142 * qJD(4) - t35 * t123 - t34 * t125;
t133 = t126 * t157 - t164 * t202 + t4;
t39 = t99 * t162 + t125 * t140 + (-qJD(5) * t154 - t139) * t123;
t130 = t206 * t129 - t205 * t131;
t128 = -qJD(5) * t45 - t53 * t162 + t130;
t127 = t36 * qJ(6) - t73 * qJD(6) + t128;
t117 = pkin(5) * t118;
t1 = t117 + t127;
t115 = t206 * pkin(4) + pkin(5);
t111 = -0.2e1 * t157;
t110 = -0.2e1 * t156;
t107 = t121 * t182;
t105 = -0.2e1 * t167;
t102 = t126 * t156;
t96 = t121 * t167;
t94 = t119 * t167;
t79 = t123 * t118 - t171;
t76 = t124 * t185 - t166;
t68 = t86 * pkin(5) + t116;
t64 = t124 * t159 - t149;
t54 = t72 * pkin(5) + t75;
t52 = t60 * pkin(5) + t178;
t51 = -t86 * qJ(6) + t63;
t50 = -t87 * qJ(6) + t62;
t48 = -0.2e1 * t87 * t59;
t47 = 0.2e1 * t86 * t60;
t41 = t87 * t118 + t59 * t126;
t27 = -0.2e1 * t197;
t26 = 0.2e1 * t198;
t20 = -0.2e1 * t72 * t118 + 0.2e1 * t126 * t37;
t19 = 0.2e1 * t73 * t118 + 0.2e1 * t36 * t126;
t18 = 0.2e1 * t59 * t86 - 0.2e1 * t87 * t60;
t17 = t61 + t207;
t16 = t59 * qJ(6) - t87 * qJD(6) + t39;
t15 = t60 * qJ(6) + t86 * qJD(6) + t38;
t14 = -t72 * qJ(6) + t24;
t13 = -t126 * pkin(5) - t73 * qJ(6) + t23;
t12 = t37 * t86 + t72 * t60;
t11 = -t36 * t87 - t73 * t59;
t10 = 0.2e1 * t72 * t36 - 0.2e1 * t73 * t37;
t9 = -0.2e1 * t167 - 0.2e1 * t197 + 0.2e1 * t198;
t7 = t143 + t195;
t6 = -t143 + t195;
t5 = -t24 * qJD(5) + t130;
t2 = t4 + t212;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t167, -0.2e1 * t158, 0, t105, 0, 0, t124 * t180, t126 * t180, 0, 0, 0.2e1 * t96 - 0.2e1 * t148, 0.2e1 * t120 * t159 + t149 * t213, 0.2e1 * t124 * t173 + 0.2e1 * t125 * t158, 0.2e1 * t94 + 0.2e1 * t148, -0.2e1 * t123 * t158 + 0.2e1 * t124 * t171, t105, 0.2e1 * t125 * t174 - 0.2e1 * t35 * t126 + 0.2e1 * (t57 + 0.2e1 * t177) * t118, -0.2e1 * t123 * t174 - 0.2e1 * t34 * t126 + 0.2e1 * (-t58 + 0.2e1 * t91) * t118, 0.2e1 * t142 * t182 + 0.2e1 * (qJD(4) * t141 + t123 * t34 - t125 * t35) * t124, 0.2e1 * t112 ^ 2 * t167 - 0.2e1 * t58 * t34 + 0.2e1 * t57 * t35, t27, t10, t19, t26, t20, t105, 0.2e1 * t118 * t23 - 0.2e1 * t5 * t126 + 0.2e1 * t75 * t37 + 0.2e1 * t61 * t72, -0.2e1 * t118 * t24 - 0.2e1 * t4 * t126 - 0.2e1 * t75 * t36 + 0.2e1 * t61 * t73, 0.2e1 * t23 * t36 - 0.2e1 * t24 * t37 + 0.2e1 * t4 * t72 - 0.2e1 * t5 * t73, 0.2e1 * t23 * t5 - 0.2e1 * t24 * t4 + 0.2e1 * t75 * t61, t27, t10, t19, t26, t20, t105, -0.2e1 * t1 * t126 + 0.2e1 * t118 * t13 + 0.2e1 * t17 * t72 + 0.2e1 * t54 * t37, -0.2e1 * t118 * t14 - 0.2e1 * t2 * t126 + 0.2e1 * t17 * t73 - 0.2e1 * t54 * t36, -0.2e1 * t1 * t73 + 0.2e1 * t13 * t36 - 0.2e1 * t14 * t37 + 0.2e1 * t2 * t72, 0.2e1 * t13 * t1 - 0.2e1 * t14 * t2 + 0.2e1 * t54 * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134 * t124 + (t112 * t186 - t126 * t141) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t118 * t75 - t61 * t126 - t23 * t37 - t24 * t36 - t4 * t73 - t5 * t72, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t72 + t118 * t54 - t17 * t126 - t13 * t37 - t14 * t36 - t2 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t94 + 0.2e1 * t96 - 0.2e1 * t167, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, -t118, 0, -t92, t112 * t118, 0, 0, -t64, t168 * t213 + t107 - t170, t79, t64, t77, 0 (pkin(8) * t188 + (t190 - t200) * t124) * qJD(4) + (t145 * t123 - t91) * qJD(3) (t125 * t98 + t138) * qJD(4) + (t125 * t145 + t177) * qJD(3), t134, -pkin(3) * t92 + pkin(8) * t134, t11, t7, t41, t12, -t40, 0, t116 * t37 + t118 * t62 - t39 * t126 + t178 * t72 + t75 * t60 + t61 * t86, -t116 * t36 - t118 * t63 - t38 * t126 + t178 * t73 - t75 * t59 + t61 * t87, t23 * t59 - t24 * t60 + t62 * t36 - t63 * t37 + t38 * t72 - t39 * t73 + t4 * t86 - t5 * t87, t61 * t116 + t178 * t75 + t23 * t39 - t24 * t38 - t4 * t63 + t5 * t62, t11, t7, t41, t12, -t40, 0, t118 * t50 - t16 * t126 + t17 * t86 + t68 * t37 + t52 * t72 + t54 * t60, -t118 * t51 - t15 * t126 + t17 * t87 - t68 * t36 + t52 * t73 - t54 * t59, -t1 * t87 + t13 * t59 - t14 * t60 + t15 * t72 - t16 * t73 + t2 * t86 + t50 * t36 - t51 * t37, t1 * t50 + t13 * t16 - t14 * t15 + t17 * t68 - t2 * t51 + t54 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, -t182, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t79, t107 + t170 (-t204 + (t119 + t121) * t203) * qJD(3), 0, 0, 0, 0, 0, 0, t40, t41, t6, -pkin(4) * t173 + t116 * t118 - t36 * t63 - t37 * t62 - t73 * t38 - t72 * t39, 0, 0, 0, 0, 0, 0, t40, t41, t6, t118 * t68 - t126 * t52 - t73 * t15 - t72 * t16 - t36 * t51 - t37 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t168, -0.2e1 * t159, 0, -0.2e1 * t168, 0, 0, t123 * t181, t125 * t181, 0, 0, t48, t18, 0, t47, 0, 0, 0.2e1 * t116 * t60 + 0.2e1 * t178 * t86, -0.2e1 * t116 * t59 + 0.2e1 * t178 * t87, 0.2e1 * t38 * t86 - 0.2e1 * t39 * t87 + 0.2e1 * t62 * t59 - 0.2e1 * t63 * t60, 0.2e1 * t116 * t178 - 0.2e1 * t63 * t38 + 0.2e1 * t62 * t39, t48, t18, 0, t47, 0, 0, 0.2e1 * t52 * t86 + 0.2e1 * t68 * t60, 0.2e1 * t52 * t87 - 0.2e1 * t68 * t59, 0.2e1 * t15 * t86 - 0.2e1 * t16 * t87 + 0.2e1 * t50 * t59 - 0.2e1 * t51 * t60, -0.2e1 * t51 * t15 + 0.2e1 * t50 * t16 + 0.2e1 * t68 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, 0, -t214, t118, t35, t34, 0, 0, 0, 0, -t36, 0, -t37, t118, t165 * t202 + t102 + t128, t133 (t206 * t36 + t152) * pkin(4) + t194 (-t205 * t4 + t206 * t5 + (-t205 * t23 + t206 * t24) * qJD(5)) * pkin(4), 0, 0, -t36, 0, -t37, t118, t115 * t118 + t1 + t102, t133 + t212, pkin(4) * t152 + t115 * t36 + t194, t1 * t115 + (-t205 * t2 + (-t205 * t13 + t206 * t14) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, t76, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t36, 0 (-t206 * t37 + t153) * pkin(4) + t192, 0, 0, 0, 0, 0, 0, -t37, t36, 0, pkin(4) * t153 - t37 * t115 + t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, 0, -t185, 0, -pkin(8) * t184, pkin(8) * t185, 0, 0, 0, 0, -t59, 0, -t60, 0, t39, t38 (t206 * t59 + t151) * pkin(4) + t193 (-t205 * t38 + t206 * t39 + (-t205 * t62 + t206 * t63) * qJD(5)) * pkin(4), 0, 0, -t59, 0, -t60, 0, t16, t15, pkin(4) * t151 + t115 * t59 + t193, t16 * t115 + (-t205 * t15 + (-t205 * t50 + t206 * t51) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t111, 0, 0, 0, 0, 0, 0, 0, 0, t110, t111, 0, 0.2e1 * (-t205 * t115 + t206 * t179) * qJD(5) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, 0, -t37, t118, t5, t4, 0, 0, 0, 0, -t36, 0, -t37, t118, 0.2e1 * t117 + t127, t2, t36 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t36, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t36, 0, -t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, -t60, 0, t39, t38, 0, 0, 0, 0, -t59, 0, -t60, 0, t16, t15, t59 * pkin(5), t16 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, -t157, 0, 0, 0, 0, 0, 0, 0, 0, -t156, -t157, 0, -pkin(5) * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t36, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, -t59, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
