% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:01:20
% EndTime: 2019-03-09 06:01:40
% DurationCPUTime: 10.82s
% Computational Cost: add. (10648->558), mult. (21584->769), div. (0->0), fcn. (21968->8), ass. (0->436)
t413 = cos(qJ(4));
t659 = pkin(8) + pkin(9);
t371 = t659 * t413;
t412 = cos(qJ(5));
t362 = t412 * t371;
t410 = sin(qJ(4));
t370 = t659 * t410;
t409 = sin(qJ(5));
t582 = t409 * t370;
t286 = t362 - t582;
t575 = t412 * t413;
t353 = t409 * t410 - t575;
t208 = -qJ(6) * t353 + t286;
t411 = sin(qJ(3));
t580 = t410 * t411;
t328 = -t409 * t580 + t411 * t575;
t645 = -t328 / 0.2e1;
t676 = t208 * t645;
t576 = t412 * t410;
t581 = t409 * t413;
t357 = t576 + t581;
t641 = -t357 / 0.2e1;
t487 = t412 * t370 + t409 * t371;
t670 = -t357 * qJ(6) - t487;
t651 = -t670 / 0.2e1;
t673 = t670 / 0.2e1;
t674 = t673 + t651;
t531 = qJD(4) + qJD(5);
t325 = t357 * t411;
t672 = t325 * t531;
t393 = -cos(pkin(10)) * pkin(1) - pkin(2);
t414 = cos(qJ(3));
t475 = -pkin(3) * t414 - t411 * pkin(8);
t342 = t393 + t475;
t331 = t413 * t342;
t578 = t411 * t413;
t529 = pkin(9) * t578;
t392 = sin(pkin(10)) * pkin(1) + pkin(7);
t590 = t392 * t410;
t195 = -t529 + t331 + (-pkin(4) - t590) * t414;
t369 = t414 * t392;
t517 = t413 * t369;
t269 = t410 * t342 + t517;
t235 = -pkin(9) * t580 + t269;
t203 = t412 * t235;
t124 = t409 * t195 + t203;
t615 = qJ(6) * t325;
t104 = t124 - t615;
t671 = t674 * t104;
t184 = t412 * t195;
t585 = t409 * t235;
t123 = -t184 + t585;
t319 = t328 * qJ(6);
t103 = -t123 - t319;
t621 = t414 * pkin(8);
t624 = t411 * pkin(3);
t372 = -t621 + t624;
t363 = t413 * t372;
t365 = t392 * t580;
t573 = t413 * t414;
t243 = t411 * pkin(4) - pkin(9) * t573 + t363 + t365;
t211 = t412 * t243;
t360 = t410 * t372;
t518 = t392 * t578;
t572 = t414 * t410;
t263 = -pkin(9) * t572 + t360 - t518;
t584 = t409 * t263;
t472 = t211 / 0.2e1 - t584 / 0.2e1;
t635 = pkin(4) * t413;
t401 = -pkin(3) - t635;
t587 = t401 * t328;
t424 = -t587 / 0.2e1 + t472;
t625 = t410 * pkin(4);
t490 = t392 + t625;
t471 = t490 * t411;
t449 = -t471 / 0.2e1;
t597 = t286 * t414;
t48 = -t597 / 0.2e1 + t357 * t449 + t424;
t442 = -t581 / 0.2e1 - t576 / 0.2e1;
t244 = (t357 / 0.2e1 + t442) * t414;
t542 = t244 * qJD(2);
t554 = qJD(3) * t401;
t669 = qJD(1) * t48 - t357 * t554 + t542;
t239 = t353 * t625 + t357 * t401;
t522 = t625 / 0.2e1;
t636 = t414 / 0.2e1;
t420 = -t286 * t636 - t325 * t522;
t623 = t412 * pkin(4);
t521 = t623 / 0.2e1;
t526 = -t635 / 0.2e1;
t38 = (t353 * t526 + t490 * t641 + t521) * t411 + t420 + t424;
t668 = t38 * qJD(1) - t239 * qJD(3) + t542;
t667 = t104 * t641 + t676;
t622 = t414 * pkin(5);
t100 = -t622 + t103;
t642 = t353 / 0.2e1;
t647 = -t325 / 0.2e1;
t666 = t100 * t642 - t325 * t651 + t647 * t670 + t667;
t600 = t208 * t325;
t601 = t670 * t328;
t565 = -t601 / 0.2e1 - t600 / 0.2e1;
t644 = t328 / 0.2e1;
t665 = t644 * t670 + t565;
t404 = t410 ^ 2;
t406 = t413 ^ 2;
t386 = t406 - t404;
t536 = t411 * qJD(1);
t515 = t413 * t536;
t664 = qJD(3) * t386 - 0.2e1 * t410 * t515;
t374 = t409 * t572;
t643 = -t353 / 0.2e1;
t247 = t374 / 0.2e1 + (-t575 / 0.2e1 + t643) * t414;
t540 = t247 * qJD(2);
t663 = t487 * t531 - t540;
t321 = t325 ^ 2;
t662 = t328 ^ 2;
t661 = t357 ^ 2;
t660 = -pkin(5) / 0.2e1;
t658 = -t100 / 0.2e1;
t657 = t104 / 0.2e1;
t519 = t392 * t572;
t268 = -t331 + t519;
t234 = -t268 - t529;
t586 = t409 * t234;
t126 = -t203 - t586;
t109 = t126 + t615;
t656 = t109 / 0.2e1;
t330 = t412 * t573 - t374;
t488 = t211 - t584;
t114 = pkin(5) * t411 - qJ(6) * t330 + t488;
t655 = t114 / 0.2e1;
t654 = -t184 / 0.2e1;
t653 = -t195 / 0.2e1;
t498 = -t203 / 0.2e1;
t652 = -t208 / 0.2e1;
t648 = t208 / 0.2e1;
t327 = t357 * t414;
t502 = -t327 / 0.2e1;
t646 = t327 / 0.2e1;
t497 = -t362 / 0.2e1;
t400 = pkin(5) + t623;
t640 = -t400 / 0.2e1;
t639 = t411 / 0.2e1;
t638 = t412 / 0.2e1;
t637 = -t414 / 0.2e1;
t634 = pkin(5) * t325;
t633 = pkin(5) * t328;
t632 = pkin(5) * t330;
t631 = pkin(5) * t353;
t630 = pkin(5) * t357;
t629 = t109 * pkin(5);
t628 = t208 * pkin(5);
t627 = t327 * pkin(5);
t626 = t409 * pkin(4);
t619 = pkin(4) * qJD(4);
t618 = pkin(4) * qJD(5);
t617 = pkin(5) * qJD(5);
t616 = pkin(5) * qJD(6);
t496 = t103 / 0.2e1 + t658;
t13 = (-t622 / 0.2e1 + t496) * t328;
t613 = qJD(1) * t13;
t568 = t100 - t103;
t15 = t568 * t325;
t612 = qJD(1) * t15;
t606 = t100 * t328;
t28 = -t104 * t325 - t606;
t611 = qJD(1) * t28;
t251 = t328 * t471;
t530 = pkin(4) * t578;
t61 = t126 * t414 - t325 * t530 - t251;
t610 = qJD(1) * t61;
t577 = t412 * t234;
t127 = t577 - t585;
t62 = t127 * t414 + (-t325 * t490 + t328 * t635) * t411;
t609 = qJD(1) * t62;
t78 = -t123 * t414 - t325 * t471;
t608 = qJD(1) * t78;
t79 = -t124 * t414 - t251;
t607 = qJD(1) * t79;
t110 = t127 - t319;
t453 = t530 + t633;
t495 = t657 + t656;
t14 = t110 * t644 - t606 / 0.2e1 + t453 * t637 - t495 * t325;
t604 = t14 * qJD(1);
t16 = (-t104 - t109) * t328 + (t100 - t110) * t325;
t603 = t16 * qJD(1);
t210 = t409 * t243;
t253 = t412 * t263;
t561 = t253 + t210;
t118 = -qJ(6) * t327 + t561;
t20 = -t100 * t330 - t104 * t327 - t114 * t328 - t118 * t325;
t602 = t20 * qJD(1);
t598 = t487 * t414;
t391 = pkin(4) * t572;
t337 = t369 + t391;
t32 = t561 * t414 + t337 * t328 + (t330 * t490 - t124) * t411;
t596 = t32 * qJD(1);
t595 = t325 * t353;
t594 = t327 * t357;
t593 = t328 * t353;
t592 = t357 * t325;
t591 = t357 * t328;
t589 = t400 * t328;
t588 = t401 * t325;
t583 = t409 * t325;
t405 = t411 ^ 2;
t574 = t413 * t405;
t520 = pkin(4) * t636;
t477 = t520 + t234 / 0.2e1;
t46 = t412 * t477 + t654;
t571 = t46 * qJD(1);
t117 = -t591 + t595;
t567 = t531 * t117;
t257 = -t593 / 0.2e1;
t503 = -t592 / 0.2e1;
t150 = t503 + t257;
t566 = t531 * t150;
t563 = t531 * t247;
t246 = -t374 / 0.2e1 + (t575 / 0.2e1 + t643) * t414;
t562 = t531 * t246;
t317 = t328 * qJD(5);
t560 = -t328 * qJD(4) - t317;
t407 = t414 ^ 2;
t385 = t405 - t407;
t175 = -t268 * t414 - t405 * t590;
t559 = qJD(1) * t175;
t176 = -t269 * t414 - t392 * t574;
t558 = qJD(1) * t176;
t187 = -t328 * t411 + t330 * t414;
t557 = qJD(1) * t187;
t556 = qJD(1) * t328;
t555 = qJD(3) * t357;
t553 = qJD(3) * t410;
t552 = qJD(3) * t413;
t551 = qJD(4) * t410;
t550 = qJD(4) * t413;
t549 = qJD(4) * t414;
t548 = qJD(5) * t401;
t130 = t268 * t411 + (-t365 + t363) * t414;
t546 = t130 * qJD(1);
t131 = t360 * t414 + (-t269 + t517) * t411;
t545 = t131 * qJD(1);
t138 = -t330 * t325 - t328 * t327;
t544 = t138 * qJD(1);
t186 = t411 * t325 - t327 * t414;
t543 = t186 * qJD(1);
t245 = (t641 + t442) * t414;
t215 = t245 * qJD(1);
t216 = t246 * qJD(1);
t541 = t246 * qJD(3);
t217 = t247 * qJD(3);
t356 = t385 * t410;
t539 = t356 * qJD(1);
t359 = t407 * t413 - t574;
t538 = t359 * qJD(1);
t537 = t385 * qJD(1);
t535 = t411 * qJD(3);
t534 = t411 * qJD(4);
t533 = t414 * qJD(1);
t532 = t414 * qJD(3);
t528 = pkin(5) * t317;
t527 = t409 * t618;
t310 = t633 / 0.2e1;
t525 = t630 / 0.2e1;
t524 = -t626 / 0.2e1;
t523 = t626 / 0.2e1;
t516 = t328 * t533;
t514 = t410 * t552;
t513 = t353 * t535;
t512 = t410 * t549;
t511 = t413 * t549;
t510 = t393 * t536;
t509 = t393 * t533;
t508 = t410 * t550;
t507 = t411 * t532;
t506 = t413 * t535;
t505 = t411 * t533;
t504 = t600 / 0.2e1;
t501 = -t589 / 0.2e1;
t500 = -t583 / 0.2e1;
t499 = t409 * t643;
t492 = t648 + t652;
t491 = -t210 / 0.2e1 - t253 / 0.2e1;
t489 = pkin(4) * t531;
t484 = t531 * t357;
t483 = t531 * t414;
t482 = t530 / 0.2e1;
t481 = -qJD(4) + t533;
t480 = t410 * t506;
t478 = t521 + t640;
t476 = t533 - qJD(4) / 0.2e1;
t474 = t625 + t630;
t416 = t103 * t643 + t666 - t667;
t9 = t632 / 0.2e1 + t416;
t470 = qJD(1) * t9;
t433 = t327 * t524 + t330 * t640;
t6 = t495 * t357 + (t110 / 0.2e1 + t658) * t353 + t492 * t328 + t674 * t325 + t433;
t469 = t6 * qJD(1);
t468 = t353 * t449 - t588 / 0.2e1 + t491;
t241 = t471 + t634;
t242 = t337 + t627;
t10 = t100 * t502 + t114 * t647 + t118 * t644 + t241 * t639 + t242 * t637 + t330 * t657;
t17 = t100 * t114 + t104 * t118 + t241 * t242;
t467 = t17 * qJD(1) + t10 * qJD(2);
t18 = -t104 * t568 + t241 * t633;
t466 = qJD(1) * t18 + qJD(2) * t13;
t19 = t100 * t109 + t104 * t110 + t241 * t453;
t465 = t19 * qJD(1) + t14 * qJD(2);
t128 = t325 * t327 + t328 * t330 - t411 * t414;
t464 = t10 * qJD(1) + t128 * qJD(2);
t31 = t123 * t411 - t337 * t325 - t327 * t471 + t414 * t488;
t463 = t31 * qJD(1);
t240 = -t353 * t401 + t357 * t625;
t421 = t487 * t636 + t625 * t645;
t441 = t588 / 0.2e1 + t491;
t37 = (t357 * t526 + t490 * t642 + t524) * t411 + t421 + t441;
t461 = -t37 * qJD(1) + t240 * qJD(3);
t278 = t497 + t362 / 0.2e1;
t44 = t498 + t203 / 0.2e1 + (t653 + t477) * t409;
t460 = t44 * qJD(1) + t278 * qJD(3);
t459 = t481 * t411;
t169 = t321 - t662;
t52 = qJD(1) * t169 + qJD(3) * t117;
t352 = t353 ^ 2;
t209 = t352 - t661;
t65 = qJD(1) * t117 + qJD(3) * t209;
t309 = -t633 / 0.2e1;
t133 = t501 + t309 + (t500 - t578 / 0.2e1) * pkin(4);
t167 = (t640 + t660) * t357 + (t499 - t410 / 0.2e1) * pkin(4);
t458 = qJD(1) * t133 + qJD(3) * t167;
t451 = t660 - t478;
t140 = t451 * t325;
t171 = t451 * t353;
t457 = qJD(1) * t140 + qJD(3) * t171;
t151 = t591 + t595;
t225 = t321 + t662;
t456 = qJD(1) * t225 + qJD(3) * t151;
t276 = t352 + t661;
t455 = qJD(1) * t151 + qJD(3) * t276;
t454 = t555 + t556;
t452 = t621 / 0.2e1 - t624 / 0.2e1;
t450 = t478 * t328;
t448 = t471 / 0.2e1;
t447 = t369 / 0.2e1 + t391 / 0.2e1 + t627 / 0.2e1;
t446 = t414 * t474;
t432 = t452 * t410;
t274 = t360 / 0.2e1 - t432;
t445 = pkin(3) * t552 - qJD(1) * t274;
t431 = t452 * t413;
t275 = -t363 / 0.2e1 + t431;
t444 = pkin(3) * t553 - qJD(1) * t275;
t443 = t100 * t641 + t104 * t643;
t49 = t598 / 0.2e1 + t353 * t448 + t441;
t440 = qJD(1) * t49 + t353 * t554;
t438 = t413 * t459;
t105 = qJD(3) * t150 - t325 * t556;
t120 = -qJD(1) * t150 + t353 * t555;
t344 = (t404 / 0.2e1 - t406 / 0.2e1) * t411;
t437 = -qJD(1) * t344 + t514;
t436 = t357 * t448 + t587 / 0.2e1 + t472;
t435 = t118 * t523 + t400 * t655;
t434 = t327 * t640 + t330 * t523;
t430 = qJD(1) * t410 * t574 + qJD(3) * t344;
t355 = t386 * t405;
t429 = qJD(1) * t355 + 0.2e1 * t480;
t314 = t401 + t631;
t415 = t100 * t652 + t104 * t673 + t670 * t656 + t110 * t648 + t241 * t474 / 0.2e1 + t453 * t314 / 0.2e1;
t2 = -t415 + t435;
t24 = t446 / 0.2e1 - t674 * t328 + t492 * t325 + t434;
t41 = t314 * t474;
t427 = -t2 * qJD(1) - t24 * qJD(2) + t41 * qJD(3);
t422 = t504 + t665;
t27 = (t502 + t646) * pkin(5) + t422;
t4 = -t496 * t208 - t671 + (t241 * t641 + t314 * t645 + t655) * pkin(5);
t42 = t314 * t630;
t426 = -qJD(1) * t4 + qJD(2) * t27 + qJD(3) * t42;
t425 = t442 * t414;
t101 = -t208 * t353 - t357 * t670;
t145 = t639 + t593 / 0.2e1 + t503;
t21 = t504 + t601 / 0.2e1 - t443 + t447;
t423 = -qJD(1) * t21 - qJD(2) * t145 + qJD(3) * t101;
t418 = (t104 * t638 + t409 * t496) * pkin(4) + t104 * t640;
t12 = -t629 / 0.2e1 + t418;
t142 = t310 + t450;
t332 = (-t400 + t623) * t626;
t417 = (t208 * t638 + t409 * t674) * pkin(4) + t208 * t640;
t34 = t628 / 0.2e1 + t417;
t419 = -qJD(1) * t12 - qJD(2) * t142 - qJD(3) * t34 - qJD(4) * t332;
t397 = -t536 / 0.2e1;
t396 = t536 / 0.2e1;
t395 = t535 / 0.2e1;
t389 = t410 * t535;
t351 = t476 * t411;
t338 = t344 * qJD(4);
t336 = t357 * t535;
t320 = (-qJD(5) / 0.2e1 + t476) * t411;
t267 = t330 * t353;
t249 = t646 + t425;
t248 = t502 + t425;
t236 = t454 * pkin(5);
t213 = 0.2e1 * t497 + t582;
t199 = t365 + t363 / 0.2e1 + t431;
t198 = t518 - t360 / 0.2e1 - t432;
t170 = t631 / 0.2e1 - t478 * t353;
t166 = pkin(4) * t499 + t357 * t640 + t522 + t525;
t153 = t245 * qJD(3) - t516;
t152 = -t325 * t533 + t541;
t149 = t151 * qJD(6);
t146 = t257 + t592 / 0.2e1 + t639;
t144 = -t484 - t215;
t143 = -t353 * t531 - t216;
t141 = t309 + t450;
t139 = t634 / 0.2e1 - t478 * t325;
t132 = pkin(4) * t500 + t310 + t482 + t501;
t129 = -t541 + t672;
t125 = qJD(3) * t244;
t112 = t249 * qJD(3) + t516 + t560;
t111 = -t217 + (-qJD(5) + t481) * t325;
t80 = qJD(3) * t248 + t560;
t51 = t597 / 0.2e1 + t436;
t50 = -t598 / 0.2e1 + t468;
t47 = t412 * t520 + t585 + t654 - t577 / 0.2e1;
t45 = 0.2e1 * t498 - t586 / 0.2e1 + (t520 + t653) * t409;
t40 = t357 * t482 + t411 * t524 - t421 + t468;
t39 = t353 * t482 + t411 * t521 - t420 + t436;
t33 = -t628 / 0.2e1 + t417;
t26 = pkin(5) * t502 - t627 / 0.2e1 + t422;
t25 = -t208 * t647 - t446 / 0.2e1 + t434 + t665;
t22 = t443 + t447 + t565;
t11 = t629 / 0.2e1 + t418;
t8 = -t632 / 0.2e1 + t416;
t7 = t109 * t641 + t110 * t643 + t433 + t666 - t676;
t5 = pkin(5) * t655 + t103 * t648 + t208 * t658 + t241 * t525 + t314 * t310 + t671;
t3 = t415 + t435;
t1 = qJD(3) * t10 + qJD(4) * t14 + qJD(5) * t13;
t23 = [0, 0, 0, 0, t507, -t385 * qJD(3), 0, 0, 0, t393 * t535, t393 * t532, -t405 * t508 + t406 * t507, -t355 * qJD(4) - 0.2e1 * t414 * t480, -t359 * qJD(3) + t411 * t512, -t356 * qJD(3) + t411 * t511, -t507, -qJD(3) * t130 - qJD(4) * t176, qJD(3) * t131 + qJD(4) * t175 (qJD(3) * t330 - t672) * t328, t138 * qJD(3) + t169 * t531, -t187 * qJD(3) + t325 * t483, -t186 * qJD(3) + t328 * t483, -t507, -qJD(3) * t31 - qJD(4) * t61 - qJD(5) * t79, qJD(3) * t32 + qJD(4) * t62 + qJD(5) * t78, qJD(3) * t20 + qJD(4) * t16 + qJD(5) * t15 + qJD(6) * t225, qJD(3) * t17 + qJD(4) * t19 + qJD(5) * t18 + qJD(6) * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, t505, -t537, t532, -t535, 0, -t392 * t532 + t510, t392 * t535 + t509, -t338 + (t406 * t536 + t514) * t414, -0.2e1 * t411 * t508 + t414 * t664, t389 - t538, t506 - t539, -t351, -t546 + (t410 * t475 - t517) * qJD(3) + t199 * qJD(4), t545 + (t413 * t475 + t519) * qJD(3) + t198 * qJD(4), t330 * t454 + t566, t544 + (-t267 - t594) * qJD(3) + t567, t336 - t557 - t563, t249 * t531 - t513 - t543, -t320 (t327 * t401 + t337 * t353 - t411 * t487) * qJD(3) + t39 * qJD(4) + t51 * qJD(5) - t463, t596 + (-t286 * t411 + t330 * t401 + t337 * t357) * qJD(3) + t40 * qJD(4) + t50 * qJD(5), t602 + (-t114 * t357 - t118 * t353 - t208 * t327 - t330 * t670) * qJD(3) + t7 * qJD(4) + t8 * qJD(5) + t149 (t114 * t670 + t118 * t208 + t242 * t314) * qJD(3) + t3 * qJD(4) + t5 * qJD(5) + t22 * qJD(6) + t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t430, -t429, t410 * t459, t438, t395, qJD(3) * t199 - qJD(4) * t269 - t558, qJD(3) * t198 + qJD(4) * t268 + t559, t105, t52, t111, t112, t395, qJD(3) * t39 + qJD(4) * t126 + qJD(5) * t45 - t610, qJD(3) * t40 - qJD(4) * t127 + qJD(5) * t47 + t609, t603 + t7 * qJD(3) + (t400 * t325 - t328 * t626) * qJD(4) + t139 * qJD(5), t3 * qJD(3) + (t109 * t400 + t110 * t626) * qJD(4) + t11 * qJD(5) + t132 * qJD(6) + t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, t52, t111, t112, t395, qJD(3) * t51 + qJD(4) * t45 - qJD(5) * t124 - t607, qJD(3) * t50 + qJD(4) * t47 + qJD(5) * t123 + t608, qJD(3) * t8 + qJD(4) * t139 + t325 * t617 + t612, qJD(3) * t5 + qJD(4) * t11 - t104 * t617 + t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456, qJD(3) * t22 + qJD(4) * t132 + t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t535, -t532, 0, 0, 0, 0, 0, -t506 - t512, t389 - t511, 0, 0, 0, 0, 0, t248 * t531 + t513, t336 - t562 (-t267 + t594) * qJD(3) (t208 * t330 + t314 * t411 - t327 * t670) * qJD(3) + t25 * qJD(4) + t26 * qJD(5) + t146 * qJD(6) + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t410 * t532 - t413 * t534, t410 * t534 - t413 * t532, 0, 0, 0, 0, 0, t80, t129, 0, t604 + t25 * qJD(3) + (-pkin(4) * t583 - t589) * qJD(4) + t141 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t129, 0, qJD(3) * t26 + qJD(4) * t141 - t528 + t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t146; 0, 0, 0, 0, -t505, t537, 0, 0, 0, -t510, -t509, -t406 * t505 - t338, 0.2e1 * t410 * t438, -t511 + t538, t512 + t539, t351, qJD(4) * t275 + t546, qJD(4) * t274 - t545, -t330 * t556 + t566, -t544 + t567, t557 - t562, -t245 * t531 + t543, t320, -qJD(4) * t38 - qJD(5) * t48 + t463, -qJD(4) * t37 - qJD(5) * t49 - t596, -qJD(4) * t6 + qJD(5) * t9 + t149 - t602, -qJD(4) * t2 - qJD(5) * t4 - qJD(6) * t21 - t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244 * t531, -t563, 0, -qJD(4) * t24 + qJD(5) * t27 - qJD(6) * t145 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t508, t386 * qJD(4), 0, 0, 0, -pkin(3) * t551, -pkin(3) * t550, -t353 * t484, t531 * t209, 0, 0, 0, qJD(4) * t239 + t357 * t548, qJD(4) * t240 - t353 * t548, qJD(6) * t276, qJD(4) * t41 + qJD(5) * t42 + qJD(6) * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t437, t664, -t481 * t413, t481 * t410, t397, -pkin(8) * t550 - t444, pkin(8) * t551 - t445, -t120, t65, t143, t144, t397, -qJD(4) * t286 + t213 * qJD(5) - t668, t461 + t663 (t400 * t353 - t357 * t626) * qJD(4) + t170 * qJD(5) - t469 (-t208 * t400 + t626 * t670) * qJD(4) + t33 * qJD(5) + t166 * qJD(6) + t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, t65, t143, t144, t397, qJD(4) * t213 - qJD(5) * t286 - t669, -t440 + t663, qJD(4) * t170 + t353 * t617 + t470, qJD(4) * t33 - t208 * t617 + t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, qJD(4) * t166 + t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t430, t429 (-t410 * t536 + t552) * t414 (-t515 - t553) * t414, t395, -qJD(3) * t275 + t558, -qJD(3) * t274 - t559, -t105, -t52, t152, t153, t395, qJD(3) * t38 + qJD(5) * t44 + t610, qJD(3) * t37 + qJD(5) * t46 - t609, qJD(3) * t6 + qJD(5) * t140 - t603, qJD(3) * t2 + qJD(5) * t12 + qJD(6) * t133 - t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t217, 0, qJD(3) * t24 + qJD(5) * t142 - t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t437, -t664, t413 * t533, -t410 * t533, t396, t444, t445, t120, -t65, t216, t215, t396, qJD(5) * t278 + t668, t540 - t461, qJD(5) * t171 + t469, qJD(5) * t34 + qJD(6) * t167 - t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t527, -t412 * t618, 0, t332 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409 * t489 + t460, -t412 * t489 + t571, t457, -pkin(5) * t527 - t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, -t52, t152, t153, t395, qJD(3) * t48 - qJD(4) * t44 + t607, qJD(3) * t49 - qJD(4) * t46 - t608, -qJD(3) * t9 - qJD(4) * t140 - t612, qJD(3) * t4 - qJD(4) * t12 - t328 * t616 - t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t217, 0, -qJD(3) * t27 - qJD(4) * t142 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, -t65, t216, t215, t396, -qJD(4) * t278 + t669, t540 + t440, -qJD(4) * t171 - t470, -qJD(4) * t34 - t357 * t616 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409 * t619 - t460, t412 * t619 - t571, -t457, t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t456, qJD(3) * t21 - qJD(4) * t133 + t528 - t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -qJD(4) * t167 + t357 * t617 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
