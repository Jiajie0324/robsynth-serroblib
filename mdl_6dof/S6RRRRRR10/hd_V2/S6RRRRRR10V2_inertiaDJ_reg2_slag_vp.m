% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRR10V2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d4,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-11 14:56
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR10V2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10V2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10V2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S6RRRRRR10V2_inertiaDJ_reg2_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-11 14:51:49
% EndTime: 2019-04-11 14:52:51
% DurationCPUTime: 18.38s
% Computational Cost: add. (9539->587), mult. (23260->1019), div. (0->0), fcn. (23024->10), ass. (0->351)
t213 = cos(qJ(2));
t196 = -t213 * pkin(2) - pkin(1);
t209 = sin(qJ(2));
t477 = sin(qJ(3));
t478 = cos(qJ(3));
t269 = -t209 * t478 - t213 * t477;
t491 = t477 * t209 - t478 * t213;
t108 = pkin(3) * t491 + pkin(5) * t269 + t196;
t212 = cos(qJ(4));
t199 = qJD(4) * t212;
t207 = sin(qJ(5));
t208 = sin(qJ(4));
t211 = cos(qJ(5));
t423 = qJD(5) * t211;
t372 = t208 * t423;
t150 = t207 * t199 + t372;
t440 = t207 * t208;
t241 = -pkin(3) * t269 + pkin(5) * t491;
t474 = t209 * pkin(2);
t63 = t241 * qJD(3) + (t241 + t474) * qJD(2);
t401 = t63 * t440;
t510 = t108 * t150 + t401;
t257 = t491 * qJD(3);
t237 = -qJD(2) * t491 - t257;
t230 = t212 * t237;
t277 = qJD(5) * t491;
t222 = t230 + t277;
t198 = qJD(4) * t208;
t422 = qJD(5) * t212;
t373 = t207 * t422;
t149 = t211 * t198 + t373;
t258 = t269 * qJD(3);
t238 = -qJD(2) * t269 - t258;
t225 = t149 * t269 + t207 * t238;
t513 = t211 * t222 + t225;
t519 = t208 * t513;
t437 = t208 * t211;
t425 = qJD(5) * t208;
t375 = t207 * t425;
t382 = t211 * t199;
t493 = t375 - t382;
t485 = t108 * t493 - t63 * t437;
t201 = t207 ^ 2;
t359 = t207 * t423;
t335 = t208 * t359;
t518 = t201 * t199 + 0.2e1 * t335;
t490 = qJD(4) * t491;
t515 = t208 * t490;
t514 = t212 * t490;
t512 = t518 * pkin(6);
t358 = t208 * t199;
t186 = 0.2e1 * t358;
t202 = t208 ^ 2;
t376 = t202 * t423;
t511 = t207 * t186 + t376;
t205 = t212 ^ 2;
t429 = t202 - t205;
t489 = qJD(4) * t429;
t206 = sin(qJ(6));
t210 = cos(qJ(6));
t417 = qJD(6) * t211;
t363 = t210 * t417;
t204 = t211 ^ 2;
t431 = t201 - t204;
t487 = qJD(5) * t431;
t509 = t206 * t487 - t207 * t363;
t366 = t206 * t417;
t508 = t207 * t366 + t210 * t487;
t223 = t237 * t491;
t411 = t478 * pkin(2);
t322 = t411 + pkin(3);
t291 = qJD(4) * t322;
t410 = t477 * pkin(2);
t344 = qJD(3) * t410;
t433 = t208 * t344 - t212 * t291;
t436 = t211 * t212;
t104 = t207 * t491 - t269 * t436;
t506 = t104 * t198 - t212 * t513;
t446 = t108 * t212;
t310 = -pkin(6) * t104 - t446;
t232 = t208 * t237;
t88 = -t199 * t269 + t232;
t505 = -pkin(6) * t88 - qJD(6) * t310 + t485;
t195 = t410 + pkin(5);
t476 = pkin(6) * t211;
t313 = t208 * (t195 - t476);
t406 = pkin(6) * t198;
t345 = qJD(3) * t411;
t302 = t212 * t345;
t498 = -t195 * t198 + t302;
t84 = -t207 * (-t195 * t422 + t344) + t211 * (qJD(5) * t322 - t498);
t504 = -qJD(6) * t313 - t406 + t84;
t231 = t211 * t237;
t426 = qJD(5) * t207;
t377 = t202 * t426;
t503 = -t202 * t231 - t269 * t377;
t486 = qJD(2) + qJD(3);
t236 = t486 * t269;
t502 = t212 * t236 + t515;
t501 = t198 * t269 + t230;
t439 = t207 * t212;
t103 = -t211 * t491 - t269 * t439;
t407 = pkin(6) * qJD(6) * t103;
t500 = -t510 - t407;
t87 = t208 * t238 + t514;
t326 = t269 * t358;
t315 = 0.2e1 * t326;
t464 = t202 * t63;
t402 = t269 * t464;
t499 = t108 * t315 + t402;
t303 = t208 * t345;
t497 = t195 * t199 + t303;
t274 = -t208 * t291 - t212 * t344;
t496 = t150 * t104;
t235 = t202 * t237;
t495 = -t207 * t235 + t269 * t376;
t370 = t211 * t422;
t494 = -t207 * t198 + t370;
t456 = t208 * t63;
t492 = t108 * t199 + t456;
t130 = t195 * t436 - t207 * t322;
t488 = qJD(5) * t130;
t200 = t206 ^ 2;
t203 = t210 ^ 2;
t432 = t200 - t203;
t350 = qJD(6) * t432;
t127 = pkin(3) * t423 + pkin(5) * t149;
t418 = qJD(6) * t210;
t364 = t208 * t418;
t112 = t150 * t206 + t207 * t364;
t419 = qJD(6) * t208;
t367 = t206 * t419;
t15 = t104 * t418 + t206 * t513 - t210 * t88 - t269 * t367;
t438 = t208 * t210;
t73 = t104 * t206 + t269 * t438;
t484 = t207 * (t15 * t208 + t199 * t73) + t73 * t372;
t483 = t486 * t491;
t482 = 0.2e1 * pkin(6);
t481 = -0.4e1 * t207;
t424 = qJD(5) * t210;
t374 = t207 * t424;
t396 = t206 * t437;
t152 = t210 * t212 + t396;
t421 = qJD(6) * t152;
t92 = -t198 * t206 + t208 * t374 - t210 * t382 + t421;
t480 = pkin(6) * t92;
t267 = t199 * t206 + t364;
t420 = qJD(6) * t206;
t93 = -t198 * t210 - t206 * t375 + t211 * t267 - t212 * t420;
t479 = pkin(6) * t93;
t475 = pkin(6) * t212;
t107 = t108 ^ 2;
t340 = t201 * t358;
t403 = t108 * t464;
t473 = t107 * t340 + t201 * t403;
t129 = t195 * t439 + t211 * t322;
t395 = t210 * t437;
t153 = -t206 * t212 + t395;
t85 = t207 * t498 - t211 * t344 + t488;
t472 = -t129 * t92 + t85 * t153;
t128 = -pkin(3) * t426 + pkin(5) * t494;
t162 = pkin(3) * t211 + pkin(5) * t439;
t471 = t128 * t153 - t162 * t92;
t470 = pkin(2) * qJD(3);
t469 = t129 * t85;
t14 = t104 * t420 - t206 * t88 - t210 * t513 + t269 * t364;
t468 = t14 * t206;
t467 = t14 * t210;
t466 = t15 * t206;
t465 = t15 * t210;
t463 = t205 * t63;
t462 = t206 * t73;
t441 = t269 * t208;
t74 = t104 * t210 - t206 * t441;
t461 = t206 * t74;
t460 = t206 * t85;
t459 = t206 * t92;
t458 = t206 * t93;
t35 = -t269 * t370 - t211 * t238 + (t277 + t501) * t207;
t457 = t208 * t35;
t120 = t130 - t475;
t260 = t493 * pkin(6);
t240 = t260 + t497;
t27 = t120 * t420 - t206 * t240 + t210 * t504;
t455 = t210 * t27;
t163 = -pkin(3) * t207 + pkin(5) * t436;
t146 = t163 - t475;
t392 = pkin(5) - t476;
t318 = t210 * t392;
t294 = t208 * t318;
t405 = pkin(5) * t199;
t50 = t146 * t420 - t210 * (-t127 + t406) - t206 * (t260 + t405) - qJD(6) * t294;
t454 = t210 * t50;
t453 = t210 * t73;
t452 = t210 * t74;
t451 = t210 * t92;
t450 = t210 * t93;
t449 = t212 * t63;
t319 = t206 * t392;
t106 = t210 * t146 + t208 * t319;
t90 = t210 * t120 + t206 * t313;
t448 = -t106 - t90;
t447 = t128 + t85;
t445 = t128 * t162;
t444 = t128 * t206;
t443 = t152 * t206;
t442 = t153 * t210;
t435 = -t130 - t163;
t316 = t211 * t186;
t434 = pkin(5) * t316 - t127 * t212;
t427 = qJD(5) * t206;
t416 = t104 * qJD(5);
t415 = t209 * qJD(2);
t414 = t213 * qJD(2);
t413 = -0.2e1 * pkin(1) * qJD(2);
t412 = 0.2e1 * t103 * t35;
t409 = pkin(3) * t198;
t408 = pkin(3) * t199;
t400 = t35 * t437;
t304 = t202 * t345;
t398 = t195 * t316 + t211 * t304 - t84 * t212;
t397 = t108 * t440;
t394 = t201 * pkin(6) * t364 + t206 * t512;
t393 = pkin(5) * t511 - t162 * t198;
t391 = t478 * t205;
t379 = t103 * t427;
t378 = t162 * t427;
t371 = t210 * t423;
t369 = t108 * t419;
t368 = t207 * t420;
t365 = t207 * t418;
t362 = t103 * t198;
t360 = t206 * t418;
t357 = t209 * t414;
t77 = (-pkin(6) * t269 + t108 * t211) * t208;
t31 = -t206 * t77 + t210 * t310;
t32 = t206 * t310 + t210 * t77;
t286 = -t108 * t198 + t449;
t215 = -pkin(6) * t513 - t286;
t7 = -t206 * t215 + t210 * t505 + t77 * t420;
t8 = t206 * t505 + t210 * t215 - t77 * t418;
t356 = t7 * t152 - t8 * t153 + t31 * t92 - t32 * t93;
t28 = -t120 * t418 + t206 * t504 + t210 * t240;
t89 = -t206 * t120 + t210 * t313;
t355 = t27 * t152 - t28 * t153 + t89 * t92 - t90 * t93;
t105 = -t206 * t146 + t294;
t51 = -t146 * t418 + t378 + t318 * t199 + (-qJD(6) * t319 + pkin(6) * t374 - t206 * (-pkin(5) * t211 + pkin(6)) * qJD(4)) * t208;
t354 = t105 * t92 - t106 * t93 + t50 * t152 - t51 * t153;
t353 = 0.2e1 * t395;
t346 = pkin(6) * t367;
t342 = -t129 * t198 + t195 * t511 + t207 * t304;
t339 = t202 * t359;
t338 = t206 * t371;
t332 = t201 * t360;
t324 = t207 * t382;
t157 = t269 ^ 2;
t323 = t157 * t358;
t321 = t129 * t93 + t150 * t89 + t85 * t152 + t28 * t440;
t320 = t105 * t150 + t128 * t152 + t162 * t93 + t51 * t440;
t312 = (-t92 + t421) * pkin(6);
t309 = -t206 * t32 - t210 * t31;
t308 = -t453 - t461;
t307 = t452 + t462;
t306 = -t206 * t90 - t210 * t89;
t301 = t128 * t129 + t162 * t85;
t300 = -t105 * t210 - t106 * t206;
t299 = t129 * t211 - t130 * t207;
t298 = t129 * t207 + t130 * t211;
t297 = -t152 * t210 - t153 * t206;
t296 = t162 * t211 - t163 * t207;
t295 = t162 * t207 + t163 * t211;
t293 = (t200 + t203) * t359;
t290 = t150 * t31 + t152 * t510 + t93 * t397 + t8 * t440;
t289 = pkin(2) * t491;
t285 = -t103 * t423 - t207 * t35;
t284 = t103 * t426 - t211 * t35;
t283 = t103 * t418 + t206 * t35;
t282 = -t103 * t420 + t210 * t35;
t281 = t129 * t420 - t210 * t85;
t280 = -t128 * t210 + t162 * t420;
t276 = (t442 + t443) * pkin(6);
t273 = -pkin(6) * t35 + t207 * t369;
t268 = t199 * t210 - t367;
t266 = -t368 + t371;
t265 = t366 + t374;
t264 = t206 * t423 + t365;
t263 = t206 * t426 - t363;
t262 = t201 * t346 - t210 * t512;
t259 = t150 * pkin(6);
t256 = t491 * t345;
t253 = t206 * t7 - t210 * t8 + (t206 * t31 - t210 * t32) * qJD(6);
t252 = qJD(6) * t309 - t206 * t8 - t210 * t7;
t251 = t276 + t306;
t250 = t276 + t300;
t249 = qJD(5) * t299 + t207 * t85 - t211 * t84;
t248 = qJD(5) * t296 - t127 * t211 + t128 * t207;
t247 = t74 * t372 + (-t14 * t208 + t199 * t74) * t207;
t246 = t103 * t150 + t35 * t440;
t244 = t112 * pkin(6);
t242 = (-t199 * t32 + t208 * t7) * t207 - t92 * t397 - t32 * t372 + t510 * t153;
t234 = t205 * t237;
t226 = t208 * t230;
t224 = t237 * t322;
t86 = t212 * t238 - t515;
t187 = -0.2e1 * t358;
t185 = -0.2e1 * t359;
t178 = pkin(5) * t304;
t171 = t207 * t346;
t160 = -0.2e1 * t489;
t156 = t195 * t304;
t141 = (t202 * t478 + t391) * t470;
t138 = t162 * t375;
t126 = 0.2e1 * t204 * t358 - 0.2e1 * t339;
t125 = 0.2e1 * t339 + 0.2e1 * t340;
t124 = pkin(6) * t153 * t368;
t123 = t425 * t431 - t324;
t122 = t207 * t350 - t338;
t121 = -t199 * t431 - 0.4e1 * t335;
t116 = -0.2e1 * t207 * t489 + 0.2e1 * t208 * t370;
t115 = 0.2e1 * t208 * t373 + 0.2e1 * t211 * t489;
t114 = t129 * t375;
t113 = 0.2e1 * t202 * t487 - 0.4e1 * t208 * t324;
t111 = t207 * t268 + t208 * t371;
t91 = pkin(6) * t450;
t71 = -0.2e1 * t153 * t92;
t70 = 0.2e1 * t152 * t93;
t66 = -0.2e1 * t235 * t269 + 0.2e1 * t323;
t65 = t152 * t420 - t450;
t64 = t153 * t418 - t459;
t62 = -t269 * t489 - t226;
t54 = t429 * t483 + 0.4e1 * t326;
t47 = t152 * t264 + t207 * t458;
t46 = t153 * t266 - t207 * t451;
t45 = -0.2e1 * t150 * t152 - 0.2e1 * t440 * t93;
t44 = 0.2e1 * t150 * t153 - 0.2e1 * t440 * t92;
t42 = t211 * t93 - t267 * t201 + (-t152 - 0.2e1 * t396) * t426;
t41 = t211 * t92 + t268 * t201 + (t153 + t353) * t426;
t40 = t108 * t463;
t36 = 0.2e1 * t152 * t92 - 0.2e1 * t153 * t93;
t33 = qJD(6) * t297 - t451 - t458;
t21 = t297 * t423 + (t459 - t450 + (-t442 + t443) * qJD(6)) * t207;
t17 = -t104 * t493 + t211 * t519;
t13 = t207 * t315 + t35 * t212 - t362 + t495;
t12 = -t269 * t316 - t503 + t506;
t11 = t15 * t152 + t73 * t93;
t10 = -t14 * t153 - t74 * t92;
t9 = t103 * t493 - t207 * t519 - t400 - t496;
t5 = -t103 * t93 - t152 * t35 - t484;
t4 = -t103 * t92 + t153 * t35 + t247;
t1 = t14 * t152 - t15 * t153 + t73 * t92 - t74 * t93;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t357, 0.2e1 * (-t209 ^ 2 + t213 ^ 2) * qJD(2), 0, -0.2e1 * t357, 0, 0, t209 * t413, t213 * t413, 0, 0, -0.2e1 * t269 * t237, -0.2e1 * t236 * t269 - 0.2e1 * t223, 0, -0.2e1 * t491 * t236, 0, 0, -0.2e1 * t196 * t258 + 0.2e1 * (-t196 * t269 + t209 * t289) * qJD(2), -0.2e1 * t196 * t257 + 0.2e1 * (-t196 * t491 - t269 * t474) * qJD(2), 0, 0.2e1 * t196 * pkin(2) * t415, -0.2e1 * t234 * t269 - 0.2e1 * t323, 0.2e1 * t157 * t489 + 0.4e1 * t226 * t269, 0.2e1 * t212 * t223 - 0.2e1 * t269 * t86, t66, -0.2e1 * t208 * t223 + 0.2e1 * t269 * t87, 0.2e1 * t491 * t238, 0.2e1 * t108 * t86 + 0.2e1 * t449 * t491, -0.2e1 * t491 * t456 + 0.2e1 * (t208 * t236 - t514) * t108, 0.2e1 * t269 * t463 + 0.2e1 * t402 + 0.2e1 * (-t234 - t235) * t108, 0.2e1 * t40 + 0.2e1 * t403, 0.2e1 * t104 * t513, -0.2e1 * t103 * t513 - 0.2e1 * t104 * t35, 0.2e1 * t104 * t88 - 0.2e1 * t269 * t519, t412, -0.2e1 * t103 * t88 + 0.2e1 * t35 * t441, t66, -0.2e1 * t103 * t449 - 0.2e1 * t35 * t446 + 0.2e1 * t499 * t207 + 0.2e1 * (t362 + t495) * t108, -0.2e1 * t104 * t449 + 0.2e1 * t499 * t211 + 0.2e1 * (t503 + t506) * t108, 0.2e1 * t104 * t401 + 0.2e1 * t513 * t397 + 0.2e1 * (-t400 + t496) * t108 + 0.2e1 * t485 * t103, 0.2e1 * t204 * t403 + 0.2e1 * t40 + 0.2e1 * (t204 - 0.1e1) * t107 * t358 + 0.2e1 * t473, -0.2e1 * t74 * t14, 0.2e1 * t14 * t73 - 0.2e1 * t15 * t74, -0.2e1 * t103 * t14 + 0.2e1 * t35 * t74, 0.2e1 * t73 * t15, -0.2e1 * t103 * t15 - 0.2e1 * t35 * t73, t412, 0.2e1 * t103 * t8 + 0.2e1 * t108 * t484 + 0.2e1 * t31 * t35 + 0.2e1 * t73 * t401, 0.2e1 * t103 * t7 + 0.2e1 * t108 * t247 - 0.2e1 * t32 * t35 + 0.2e1 * t401 * t74, 0.2e1 * t14 * t31 - 0.2e1 * t15 * t32 + 0.2e1 * t7 * t73 - 0.2e1 * t74 * t8, 0.2e1 * t107 * t339 + 0.2e1 * t31 * t8 - 0.2e1 * t32 * t7 + 0.2e1 * t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t414, 0, -t415, 0, 0, 0, 0, 0, 0, 0, t237, 0, t236, 0, 0, 0, t236 * t410 - t269 * t344 + t411 * t483 - t256, 0, -t62, t54, t87, t62, t86, 0 (-qJD(3) * t289 * t478 - t224) * t208 - t87 * t195 - t433 * t269 (-t224 - t256) * t212 + t502 * t195 + t274 * t269, 0, 0, t17, t9, t12, t246, t13, t62, t103 * t497 - t129 * t88 + t195 * t457 + t441 * t85, t104 * t497 - t130 * t88 + t195 * t519 - t441 * t84, t84 * t103 + t85 * t104 + t129 * t513 - t130 * t35 (-t195 * t212 + t298) * t456 + ((t195 * t429 + t212 * t298) * qJD(4) + (-t302 + t249) * t208) * t108, t10, t1, t4, t11, t5, t246, t103 * t28 + t129 * t15 + t35 * t89 + t73 * t85 + t290, t103 * t27 - t129 * t14 - t35 * t90 + t74 * t85 + t242, t14 * t89 - t15 * t90 + t27 * t73 - t28 * t74 + t356, t129 * t401 - t27 * t32 + t28 * t31 - t7 * t90 + t8 * t89 + (t129 * t150 + t440 * t85) * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t344, -0.2e1 * t345, 0, 0, t186, t160, 0, t187, 0, 0, 0.2e1 * t274, 0.2e1 * t433, 0.2e1 * t141, 0.2e1 * t156 + 0.2e1 * (pkin(2) * t195 * t391 - t322 * t410) * qJD(3), t126, t113, t115, t125, t116, t187, 0.2e1 * t212 * t85 + 0.2e1 * t342, -0.2e1 * t130 * t198 - 0.2e1 * t195 * t377 + 0.2e1 * t398, -0.2e1 * t114 + 0.2e1 * t299 * t199 + 0.2e1 * (t207 * t84 + (t85 - t488) * t211) * t208, 0.2e1 * t195 ^ 2 * t358 - 0.2e1 * t130 * t84 + 0.2e1 * t156 + 0.2e1 * t469, t71, t36, t44, t70, t45, t125, 0.2e1 * t321, -0.2e1 * t90 * t372 + 0.2e1 * (-t199 * t90 + t208 * t27) * t207 + 0.2e1 * t472, 0.2e1 * t355, -0.2e1 * t27 * t90 + 0.2e1 * t28 * t89 + 0.2e1 * t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, 0, t236, 0, 0, 0, 0, 0, -t62, t54, t87, t62, t86, 0, -pkin(3) * t88 - pkin(5) * t87, -pkin(3) * t501 + pkin(5) * t502, 0, 0, t17, t9, t12, t246, t13, t62, pkin(5) * t457 + t103 * t405 + t128 * t441 - t162 * t88, pkin(5) * t519 + t104 * t405 - t127 * t441 - t163 * t88, t127 * t103 + t128 * t104 + t162 * t513 - t163 * t35 (-pkin(5) * t212 + t295) * t456 + (t248 * t208 + (pkin(5) * t429 + t212 * t295) * qJD(4)) * t108, t10, t1, t4, t11, t5, t246, t103 * t51 + t105 * t35 + t128 * t73 + t15 * t162 + t290, t103 * t50 - t106 * t35 + t128 * t74 - t14 * t162 + t242, t105 * t14 - t106 * t15 + t50 * t73 - t51 * t74 + t356, t162 * t401 + t105 * t8 - t106 * t7 + t31 * t51 - t32 * t50 + (t128 * t440 + t150 * t162) * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, -t345, 0, 0, t186, t160, 0, t187, 0, 0, t274 - t409, -t408 + t433, t141, t178 + (-pkin(3) * t477 + pkin(5) * t391) * t470, t126, t113, t115, t125, t116, t187, t212 * t447 + t342 + t393 (-pkin(5) - t195) * t377 + t435 * t198 + t398 + t434, -t114 - t138 + ((t129 + t162) * t211 + t435 * t207) * t199 + ((t127 + t84) * t207 + (qJD(5) * t435 + t447) * t211) * t208, pkin(5) * t186 * t195 - t127 * t130 - t163 * t84 + t178 + t301, t71, t36, t44, t70, t45, t125, t320 + t321, t448 * t372 + ((t27 + t50) * t208 + t448 * t199) * t207 + t471 + t472, t354 + t355, t105 * t28 - t106 * t27 - t50 * t90 + t51 * t89 + t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, t160, 0, t187, 0, 0, -0.2e1 * t409, -0.2e1 * t408, 0, 0, t126, t113, t115, t125, t116, t187, 0.2e1 * t128 * t212 + 0.2e1 * t393, -0.2e1 * pkin(5) * t377 - 0.2e1 * t163 * t198 + 0.2e1 * t434, -0.2e1 * t138 + 0.2e1 * t296 * t199 + 0.2e1 * (t127 * t207 + (-qJD(5) * t163 + t128) * t211) * t208, 0.2e1 * pkin(5) ^ 2 * t358 - 0.2e1 * t127 * t163 + 0.2e1 * t445, t71, t36, t44, t70, t45, t125, 0.2e1 * t320, -0.2e1 * t106 * t150 + 0.2e1 * t440 * t50 + 0.2e1 * t471, 0.2e1 * t354, 0.2e1 * t105 * t51 - 0.2e1 * t106 * t50 + 0.2e1 * t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, 0, -t88, t238, t286, -t492, 0, 0, t225 * t207 + (t207 * t222 + t416) * t211, -t207 * t416 + t211 * t513 + t285, -t150 * t269 + t207 * t232, t284, t208 * t231 + t269 * t493, 0, -t108 * t149 + t436 * t63, -t108 * t494 - t439 * t63, t492 * (t201 + t204) 0, t74 * t371 + (-t420 * t74 - t467) * t207, t308 * t423 + (t468 - t465 + (-t452 + t462) * qJD(6)) * t207 (t103 * t424 + t14) * t211 + (qJD(5) * t74 + t282) * t207, t73 * t365 + (t15 * t207 + t423 * t73) * t206 (t15 - t379) * t211 + (-qJD(5) * t73 - t283) * t207, t284, t31 * t426 - t211 * t8 + (pkin(6) * t285 + t201 * t369) * t210 + (t108 * t518 + t201 * t456 + t207 * t407) * t206 (pkin(6) * t379 - t7) * t211 + (t108 * t268 + t438 * t63) * t201 + ((t108 * t353 - t32) * qJD(5) + t283 * pkin(6)) * t207 (pkin(6) * t307 + t309) * t423 + ((-t467 + t466 + (t453 - t461) * qJD(6)) * pkin(6) + t253) * t207 (t207 * t253 + t309 * t423) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, 0, -t198, 0, -t497, -t498, 0, 0, -t123, t121, -t494, t123, t149, 0, t195 * t493 - t211 * t303, t150 * t195 + t207 * t303, t249, 0, t46, t21, t41, t47, t42, t123 (t129 * t427 - t28) * t211 + (qJD(5) * t89 + t129 * t418 + t460) * t207 + t262 (t129 * t424 - t27) * t211 + (-qJD(5) * t90 - t281) * t207 + t394, -t124 + t251 * t423 + ((qJD(6) * t89 + t27 + t479) * t206 + (-qJD(6) * t90 - t28 + t312) * t210) * t207 (t306 * t423 + (t206 * t27 - t210 * t28 + (t206 * t89 - t210 * t90) * qJD(6)) * t207) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, 0, -t198, 0, -t405, pkin(5) * t198, 0, 0, -t123, t121, -t494, t123, t149, 0, t493 * pkin(5), t150 * pkin(5), t248, 0, t46, t21, t41, t47, t42, t123 (-t51 + t378) * t211 + (qJD(5) * t105 + t162 * t418 + t444) * t207 + t262 (t162 * t424 - t50) * t211 + (-qJD(5) * t106 - t280) * t207 + t394, -t124 + t250 * t423 + ((qJD(6) * t105 + t479 + t50) * t206 + (-qJD(6) * t106 + t312 - t51) * t210) * t207 (t300 * t423 + (t206 * t50 - t210 * t51 + (t105 * t206 - t106 * t210) * qJD(6)) * t207) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t359, -0.2e1 * t487, 0, t185, 0, 0, 0, 0, 0, 0, 0.2e1 * t203 * t359 - 0.2e1 * t332, 0.2e1 * t201 * t350 + t338 * t481, 0.2e1 * t508, 0.2e1 * t200 * t359 + 0.2e1 * t332, -0.2e1 * t509, t185, -t508 * t482, t509 * t482, 0.4e1 * pkin(6) * t293, 0.2e1 * pkin(6) ^ 2 * t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, 0, -t35, t88, -t510, t485, 0, 0, t418 * t74 - t468, qJD(6) * t308 - t466 - t467, t283, t420 * t73 - t465, t282, 0, t273 * t206 + t210 * t500, -t206 * t500 + t273 * t210 (qJD(6) * t307 - t465 - t468) * pkin(6) + t252, t252 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t493, 0, -t150, t198, -t85, t84, 0, 0, t64, t33, t112, t65, t111, 0, -t244 + t281, t460 + t171 + (qJD(6) * t129 - t259) * t210, -t455 - t91 + (-t28 - t480) * t206 + t251 * qJD(6) (qJD(6) * t306 - t206 * t28 - t455) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t493, 0, -t150, t198, -t128, t127, 0, 0, t64, t33, t112, t65, t111, 0, -t244 + t280, t444 + t171 + (qJD(6) * t162 - t259) * t210, -t454 - t91 + (-t51 - t480) * t206 + t250 * qJD(6) (qJD(6) * t300 - t206 * t51 - t454) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, 0, -t426, 0, 0, 0, 0, 0, -t122, t360 * t481 - t423 * t432, t263, t122, t265, 0, -t263 * pkin(6), -t265 * pkin(6), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t360, -0.2e1 * t350, 0, -0.2e1 * t360, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, 0, -t15, t35, t8, t7, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, 0, -t93, t150, t28, t27, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, 0, -t93, t150, t51, t50, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, 0, -t264, t426, -t266 * pkin(6), t264 * pkin(6), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, 0, -t420, 0, -pkin(6) * t418, pkin(6) * t420, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
