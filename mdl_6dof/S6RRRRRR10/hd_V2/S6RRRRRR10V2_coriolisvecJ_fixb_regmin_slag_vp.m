% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRRR10V2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d4,d6]';
% 
% Output:
% tauc_reg [6x38]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-11 14:56
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRR10V2_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-11 14:51:49
% EndTime: 2019-04-11 14:52:21
% DurationCPUTime: 7.89s
% Computational Cost: add. (9884->500), mult. (23262->744), div. (0->0), fcn. (18491->10), ass. (0->246)
t272 = qJD(2) + qJD(3);
t187 = sin(qJ(3));
t192 = cos(qJ(2));
t333 = cos(qJ(3));
t256 = qJD(1) * t333;
t188 = sin(qJ(2));
t285 = qJD(1) * t188;
t346 = -t187 * t285 + t192 * t256;
t108 = t346 * t272;
t186 = sin(qJ(4));
t190 = cos(qJ(5));
t294 = t186 * t190;
t293 = t187 * t192;
t145 = -qJD(1) * t293 - t188 * t256;
t185 = sin(qJ(5));
t191 = cos(qJ(4));
t290 = t190 * t191;
t101 = -t145 * t185 + t290 * t346;
t280 = qJD(4) * t191;
t233 = t190 * t280 - t101;
t279 = qJD(5) * t185;
t258 = t186 * t279;
t347 = t233 - t258;
t184 = sin(qJ(6));
t189 = cos(qJ(6));
t274 = qJD(6) * t189;
t275 = qJD(6) * t184;
t282 = qJD(4) * t186;
t295 = t186 * t189;
t326 = -t347 * t184 + t189 * t282 + t191 * t275 - t274 * t294 - t295 * t346;
t278 = qJD(5) * t189;
t281 = qJD(4) * t190;
t291 = t189 * t191;
t300 = t184 * t186;
t325 = t101 * t189 + t346 * t300 - (-qJD(6) + t281) * t291 - (-t185 * t278 + (-qJD(6) * t190 + qJD(4)) * t184) * t186;
t298 = t185 * t191;
t100 = t190 * t145 + t298 * t346;
t261 = t185 * t280;
t345 = t100 - t261;
t277 = qJD(5) * t190;
t257 = t186 * t277;
t344 = -t257 + t345;
t284 = qJD(2) * t187;
t267 = pkin(2) * t284;
t241 = qJD(3) * t267;
t255 = t333 * qJD(2);
t242 = pkin(2) * t255;
t225 = qJD(3) * t242;
t150 = t333 * t188 + t293;
t118 = t272 * t150;
t109 = t118 * qJD(1);
t273 = qJD(1) * qJD(2);
t253 = t188 * t273;
t60 = pkin(2) * t253 + pkin(3) * t109 - pkin(5) * t108;
t199 = t186 * t60 + t191 * t225;
t154 = pkin(5) * t272 + t267;
t180 = -pkin(2) * t192 - pkin(1);
t162 = t180 * qJD(1);
t198 = -pkin(3) * t346 + pkin(5) * t145 + t162;
t80 = t186 * t154 - t191 * t198;
t38 = -qJD(4) * t80 + t199;
t247 = t185 * t38 - t190 * t241;
t155 = -pkin(3) * t272 - t242;
t81 = t191 * t154 + t186 * t198;
t62 = t155 * t185 + t190 * t81;
t23 = qJD(5) * t62 + t247;
t124 = -t191 * t145 + t186 * t272;
t224 = qJD(4) - t346;
t131 = t190 * t224;
t90 = t124 * t185 - t131;
t89 = qJD(6) + t90;
t249 = t89 ^ 2;
t343 = pkin(6) * t249 + t23;
t216 = -t187 * t188 + t333 * t192;
t113 = -pkin(3) * t216 - pkin(5) * t150 + t180;
t117 = t272 * t216;
t335 = qJD(4) * t224;
t342 = -t113 * t335 + t155 * t117 + t150 * t241;
t289 = t191 * t109;
t341 = t186 * t335 - t289;
t340 = -0.2e1 * t273;
t176 = t191 * t272;
t122 = -t145 * t186 - t176;
t339 = t122 * t224;
t209 = t186 * t224;
t306 = t346 * t186;
t338 = (-t282 + t306) * pkin(6);
t337 = (-t101 - t258) * pkin(6);
t336 = qJD(1) * t150;
t270 = pkin(2) * qJD(2) * t188;
t68 = pkin(3) * t118 - pkin(5) * t117 + t270;
t334 = t155 * qJD(4) * t150 + t113 * t109 + t224 * t68;
t72 = qJD(4) * t176 + t191 * t108 + t145 * t282;
t92 = t190 * t124 + t185 * t224;
t36 = qJD(5) * t92 - t190 * t109 + t185 * t72;
t35 = qJD(5) * t131 + t185 * t109 - t124 * t279 + t190 * t72;
t121 = qJD(5) + t122;
t58 = t121 * t184 + t189 * t92;
t297 = t186 * t108;
t73 = qJD(4) * t124 + t297;
t15 = qJD(6) * t58 + t184 * t35 - t189 * t73;
t22 = t155 * t277 + t185 * t241 + t190 * t38 - t279 * t81;
t16 = pkin(6) * t73 + t22;
t203 = t186 * t225 - t191 * t60;
t39 = qJD(4) * t81 + t203;
t17 = -t35 * pkin(6) + t39;
t48 = -pkin(6) * t92 + t80;
t49 = pkin(6) * t121 + t62;
t229 = t184 * t49 - t189 * t48;
t5 = -qJD(6) * t229 + t16 * t189 + t17 * t184;
t193 = qJD(2) ^ 2;
t332 = pkin(2) * t187;
t331 = pkin(6) * t190;
t330 = pkin(6) * t191;
t56 = -t189 * t121 + t184 * t92;
t328 = t56 * t89;
t327 = t58 * t89;
t324 = t121 * t90;
t14 = t121 * t274 + t184 * t73 + t189 * t35 - t275 * t92;
t323 = t14 * t184;
t322 = t184 * t36;
t321 = t184 * t89;
t320 = t185 * t35;
t319 = t185 * t73;
t318 = t186 * t72;
t317 = t189 * t36;
t246 = t189 * t89;
t316 = t190 * t36;
t315 = t190 * t73;
t314 = t191 * t73;
t313 = t92 * t121;
t262 = t185 * t282;
t276 = qJD(5) * t191;
t112 = -pkin(3) * t145 - pkin(5) * t346;
t96 = t186 * t112 + t191 * t242;
t312 = -t185 * t96 + t190 * t267 - pkin(3) * t279 + (t190 * t276 - t262) * pkin(5);
t311 = t185 * t267 + t190 * t96;
t310 = t117 * t186;
t309 = t121 * t185;
t244 = t121 * t190;
t308 = t122 * t190;
t307 = t124 * t191;
t305 = t145 * t346;
t304 = t150 * t186;
t303 = t155 * t346;
t302 = t162 * t346;
t301 = t162 * t145;
t299 = t185 * t186;
t296 = t186 * t109;
t292 = t189 * t190;
t194 = qJD(1) ^ 2;
t288 = t192 * t194;
t178 = pkin(5) + t332;
t271 = t333 * pkin(2);
t179 = -t271 - pkin(3);
t287 = t178 * t290 + t185 * t179;
t286 = t188 ^ 2 - t192 ^ 2;
t283 = qJD(3) * t187;
t269 = pkin(2) * t283;
t268 = t68 * t299;
t254 = t333 * qJD(3);
t243 = pkin(2) * t254;
t226 = t191 * t243;
t266 = t179 * t277 + t185 * t269 + t190 * t226;
t265 = pkin(5) - t331;
t263 = t150 * t280;
t259 = t121 * t279;
t252 = -pkin(3) * t185 + pkin(5) * t290;
t251 = t178 - t331;
t245 = pkin(1) * t340;
t147 = -t184 * t191 + t186 * t292;
t61 = -t190 * t155 + t185 * t81;
t240 = t23 * t147 - t325 * t61;
t102 = pkin(2) * t285 + t112;
t137 = t251 * t186;
t206 = -t185 * t276 - t186 * t281;
t239 = -qJD(6) * t137 + t102 * t294 - t178 * t206 - t266 + t338;
t238 = -t81 * t145 + t155 * t280 + t186 * t241;
t125 = t287 - t330;
t236 = qJD(6) * t125 - t102 * t191 - t186 * t243 - t251 * t280 + t337;
t152 = t265 * t186;
t235 = pkin(3) * t277 - pkin(5) * t206 - qJD(6) * t152 + t311 + t338;
t141 = t252 - t330;
t95 = -t191 * t112 + t186 * t242;
t234 = qJD(6) * t141 - t265 * t280 + t337 + t95;
t232 = t100 - t257;
t231 = pkin(6) * t150 + t113 * t190;
t30 = t184 * t48 + t189 * t49;
t111 = t150 * t290 - t185 * t216;
t64 = -pkin(6) * t111 - t113 * t191;
t85 = t231 * t186;
t228 = -t184 * t85 + t189 * t64;
t227 = t184 * t64 + t189 * t85;
t223 = -t61 * t282 + t39 * t299 - t344 * t80;
t222 = t22 * t191 + t233 * t80 + t39 * t294 + t62 * t306;
t221 = t186 * t35 + t280 * t92;
t220 = t186 * t36 + t280 * t90;
t219 = t274 * t89 + t322;
t218 = t275 * t89 - t317;
t217 = -t121 * t277 - t319;
t84 = t111 * t189 + t150 * t300;
t215 = qJD(4) * t92 + t259;
t213 = t263 + t310;
t212 = t117 * t191 - t150 * t282;
t211 = pkin(6) * t36;
t210 = -t80 * t145 + t155 * t282 - t186 * t303;
t208 = t191 * t224;
t207 = t224 * t145;
t201 = -t232 + t261;
t146 = t184 * t294 + t291;
t6 = -qJD(6) * t30 - t16 * t184 + t189 * t17;
t200 = t23 * t146 + t344 * t229 + t6 * t299 - t326 * t61;
t197 = -t191 * t335 - t296;
t195 = -t224 * t346 + t335;
t151 = pkin(3) * t190 + pkin(5) * t298;
t128 = t178 * t298 - t179 * t190;
t110 = t150 * t298 + t190 * t216;
t94 = t145 ^ 2 - t346 ^ 2;
t88 = (-t145 - t336) * t272;
t86 = (t178 * t276 - t269) * t190 + (qJD(5) * t179 - t178 * t282 + t226) * t185;
t83 = t111 * t184 - t150 * t295;
t78 = -t122 * t292 + t124 * t184;
t77 = -t189 * t124 - t184 * t308;
t52 = pkin(6) * t308 + t81;
t51 = pkin(6) * t124 - t190 * t80;
t45 = qJD(5) * t111 + t117 * t298 - t190 * t118 - t150 * t262;
t44 = (-t150 * t276 + t118) * t185 + (-qJD(5) * t216 + t212) * t190;
t43 = t124 * t145 + t191 * t195 + t296;
t42 = -t122 * t145 - t186 * t195 + t289;
t41 = t224 * t307 + t318;
t40 = t121 * t209 - t314;
t31 = t231 * t280 + (pkin(6) * t117 - t113 * t279 + t190 * t68) * t186;
t26 = -pkin(6) * t44 + t113 * t282 - t191 * t68;
t25 = qJD(6) * t84 - t117 * t295 + t184 * t44 - t189 * t263;
t24 = (qJD(6) * t304 + t44) * t189 + (-qJD(6) * t111 + t213) * t184;
t18 = (t72 - t339) * t191 + (-t124 * t224 - t73) * t186;
t12 = t35 * t294 + t347 * t92;
t11 = t201 * t89 + t36 * t299;
t10 = t191 * t36 + t345 * t121 + (-t224 * t90 + t217) * t186;
t9 = -t191 * t35 + t233 * t121 + (t224 * t92 - t259 + t315) * t186;
t8 = t14 * t147 - t325 * t58;
t7 = t100 * t92 + t101 * t90 + (-t185 * t92 - t190 * t90) * t280 + (-t320 - t316 + (t185 * t90 - t190 * t92) * qJD(5)) * t186;
t3 = -t146 * t36 - t15 * t299 - t201 * t56 + t326 * t89;
t2 = t14 * t299 + t147 * t36 + t201 * t58 - t325 * t89;
t1 = -t14 * t146 - t147 * t15 + t325 * t56 + t326 * t58;
t4 = [0, 0, 0, 0.2e1 * t192 * t253, t286 * t340, t193 * t192, -t193 * t188, 0, t188 * t245, t192 * t245, t108 * t150 - t117 * t145, t108 * t216 - t150 * t109 + t117 * t346 + t118 * t145, t117 * t272, -t118 * t272, 0, t109 * t180 + t118 * t162 + (-qJD(1) * t216 - t346) * t270, t108 * t180 + t117 * t162 + (-t145 + t336) * t270, t150 * t191 * t72 + t124 * t212 (-t122 * t191 - t124 * t186) * t117 + (-t318 - t314 + (t122 * t186 - t307) * qJD(4)) * t150, t117 * t208 + t124 * t118 - t150 * t341 - t72 * t216, -t117 * t209 - t122 * t118 + t150 * t197 + t216 * t73, -t109 * t216 + t118 * t224, -t80 * t118 + t186 * t342 + t334 * t191 + t39 * t216, -t81 * t118 - t334 * t186 + t191 * t342 + t38 * t216, t111 * t35 + t44 * t92, -t110 * t35 - t111 * t36 - t44 * t90 - t45 * t92, t111 * t73 + t121 * t44 + t150 * t221 + t310 * t92, -t110 * t73 - t121 * t45 - t150 * t220 - t310 * t90, t121 * t213 + t304 * t73, t110 * t39 + t45 * t80 + (-t113 * t36 - t68 * t90 + (-t113 * t309 - t150 * t61) * qJD(4)) * t191 + (-t68 * t309 - t117 * t61 - t150 * t23 + (qJD(4) * t90 + t217) * t113) * t186, t111 * t39 + t44 * t80 + (-t113 * t35 - t68 * t92 + (-t113 * t244 - t150 * t62) * qJD(4)) * t191 + (-t68 * t244 - t117 * t62 - t150 * t22 + (t215 - t315) * t113) * t186, t14 * t84 + t24 * t58, -t14 * t83 - t15 * t84 - t24 * t56 - t25 * t58, t110 * t14 + t24 * t89 + t36 * t84 + t45 * t58, -t110 * t15 - t25 * t89 - t36 * t83 - t45 * t56, t110 * t36 + t45 * t89 (-qJD(6) * t227 - t184 * t31 + t189 * t26) * t89 + t228 * t36 + t6 * t110 - t229 * t45 + t56 * t268 + t23 * t83 + t61 * t25 + (t56 * t257 + (t15 * t186 + t280 * t56) * t185) * t113 -(qJD(6) * t228 + t184 * t26 + t189 * t31) * t89 - t227 * t36 - t5 * t110 - t30 * t45 + t58 * t268 + t23 * t84 + t61 * t24 + (t58 * t257 + (t14 * t186 + t280 * t58) * t185) * t113; 0, 0, 0, -t188 * t288, t286 * t194, 0, 0, 0, t194 * pkin(1) * t188, pkin(1) * t288, t305, t94, 0, t88, 0, t301 + (t346 * t285 + (-0.2e1 * qJD(2) - qJD(3)) * t283) * pkin(2), -t302 + (t145 * t285 + (-0.2e1 * t255 - t254) * qJD(3)) * pkin(2), t41, t18, t43, t42, t207, t179 * t73 - t102 * t208 + t197 * t178 + (t122 * t187 - t191 * t284 - t209 * t333) * qJD(3) * pkin(2) + t210, t124 * t269 + t179 * t72 + (t102 * t224 + t178 * t335) * t186 + (-t178 * t109 - t224 * t243 - t303) * t191 + t238, t12, t7, t9, t10, t40, -t86 * t121 - t128 * t73 + (t23 + (qJD(4) * t178 + t102) * t90) * t191 + (t102 * t309 + t178 * t36 + t243 * t90 + t346 * t61) * t186 + t223, -t266 * t121 - t287 * t73 + (t102 * t92 + t178 * t215) * t191 + (t92 * t243 - t80 * t279 + t102 * t244 + t178 * t35 + (t178 * t244 - t62) * qJD(4)) * t186 + t222, t8, t1, t2, t3, t11 (-t125 * t184 + t137 * t189) * t36 + t128 * t15 + (t184 * t239 - t189 * t236) * t89 + (-t102 * t299 + t86) * t56 + t200 -(t125 * t189 + t137 * t184) * t36 + t86 * t58 + t128 * t14 + (t184 * t236 + t189 * t239) * t89 + t232 * t30 + (-t30 * t280 + (-t102 * t58 - t5) * t186) * t185 + t240; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, t94, 0, t88, 0, t193 * t332 + t301, t193 * t271 - t302, t41, t18, t43, t42, t207, -pkin(3) * t73 + t95 * t224 + t197 * pkin(5) + (-qJD(3) * t191 - t122) * t267 + t210, -pkin(3) * t72 + pkin(5) * t341 - t124 * t267 - t191 * t303 + t96 * t224 + t238, t12, t7, t9, t10, t40, pkin(5) * t220 - t121 * t312 - t151 * t73 + t23 * t191 + t306 * t61 - t90 * t95 + t223, -t252 * t73 - t62 * t282 + t311 * t121 - t95 * t92 + (pkin(3) * t244 - t299 * t80) * qJD(5) + (-t121 * t206 + t221) * pkin(5) + t222, t8, t1, t2, t3, t11 (-t141 * t184 + t152 * t189) * t36 + t151 * t15 + (t184 * t235 - t189 * t234) * t89 + t312 * t56 + t200 -(t141 * t189 + t152 * t184) * t36 - t5 * t299 + t151 * t14 + (t184 * t234 + t189 * t235) * t89 + t312 * t58 - t201 * t30 + t240; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124 * t122, -t122 ^ 2 + t124 ^ 2, t72 + t339, -t124 * t346 - t297, t109, -t155 * t124 - t346 * t81 - t203, t155 * t122 + t346 * t80 - t199, t244 * t92 + t320 (t35 - t324) * t190 + (-t36 - t313) * t185, t121 * t244 - t124 * t92 + t319, -t121 ^ 2 * t185 + t124 * t90 + t315, -t121 * t124, t124 * t61 - t190 * t39 - t81 * t90, t124 * t62 + t185 * t39 - t81 * t92, t14 * t185 * t189 + (-t185 * t275 + t189 * t277 - t78) * t58, t56 * t78 + t58 * t77 + (-t184 * t58 - t189 * t56) * t277 + (-t323 - t15 * t189 + (t184 * t56 - t189 * t58) * qJD(6)) * t185, -t78 * t89 + (t278 * t89 - t14) * t190 + (t121 * t58 - t218) * t185, t77 * t89 + (-qJD(5) * t321 + t15) * t190 + (-t121 * t56 - t219) * t185, t309 * t89 - t316 -(-t184 * t51 + t189 * t52) * t89 - t61 * t77 + (-t6 + (-pkin(6) * t246 + t184 * t61) * qJD(5)) * t190 + (pkin(6) * t218 - t121 * t229 + t23 * t184 + t274 * t61 + t80 * t56) * t185 (t184 * t52 + t189 * t51) * t89 - t61 * t78 + (t5 + (pkin(6) * t321 + t189 * t61) * qJD(5)) * t190 + (pkin(6) * t219 - t121 * t30 + t23 * t189 - t275 * t61 + t80 * t58) * t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92 * t90, -t90 ^ 2 + t92 ^ 2, t35 + t324, t313 - t36, t73, -t80 * t92 - t247 + (-qJD(5) + t121) * t62, -t121 * t61 + t80 * t90 - t22, t246 * t58 + t323 (t14 - t328) * t189 + (-t15 - t327) * t184, t246 * t89 - t58 * t92 + t322, -t184 * t249 + t56 * t92 + t317, -t89 * t92, -t211 * t184 - t189 * t343 + t229 * t92 - t62 * t56, t184 * t343 - t211 * t189 + t30 * t92 - t62 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58 * t56, -t56 ^ 2 + t58 ^ 2, t14 + t328, -t15 + t327, t36, t30 * t89 - t58 * t61 + t6, -t229 * t89 + t56 * t61 - t5;];
tauc_reg  = t4;
