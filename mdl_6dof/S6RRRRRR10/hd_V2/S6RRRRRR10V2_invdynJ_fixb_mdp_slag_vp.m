% Calculate vector of inverse dynamics joint torques for
% S6RRRRRR10V2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d4,d6]';
% MDP [38x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRR10V2_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-11 14:56
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(6,1),zeros(38,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp: pkin has to be [6x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [38 1]), ...
  'S6RRRRRR10V2_invdynJ_fixb_mdp_slag_vp: MDP has to be [38x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-11 14:52:35
% EndTime: 2019-04-11 14:53:09
% DurationCPUTime: 15.55s
% Computational Cost: add. (12094->724), mult. (26128->996), div. (0->0), fcn. (21060->14), ass. (0->285)
t776 = qJD(2) + qJD(3);
t669 = sin(qJ(3));
t675 = cos(qJ(2));
t847 = cos(qJ(3));
t755 = qJD(1) * t847;
t670 = sin(qJ(2));
t792 = qJD(1) * t670;
t858 = -t669 * t792 + t675 * t755;
t860 = t776 * t858;
t668 = sin(qJ(4));
t673 = cos(qJ(5));
t806 = t668 * t673;
t805 = t669 * t675;
t608 = -qJD(1) * t805 - t670 * t755;
t667 = sin(qJ(5));
t674 = cos(qJ(4));
t801 = t673 * t674;
t543 = -t608 * t667 + t801 * t858;
t787 = qJD(4) * t674;
t728 = t673 * t787 - t543;
t786 = qJD(5) * t667;
t758 = t668 * t786;
t859 = t728 - t758;
t666 = sin(qJ(6));
t672 = cos(qJ(6));
t781 = qJD(6) * t672;
t782 = qJD(6) * t666;
t789 = qJD(4) * t668;
t807 = t668 * t672;
t798 = -t666 * t859 + t672 * t789 + t674 * t782 - t781 * t806 - t807 * t858;
t785 = qJD(5) * t672;
t788 = qJD(4) * t673;
t802 = t672 * t674;
t812 = t666 * t668;
t797 = t543 * t672 + t858 * t812 - (-qJD(6) + t788) * t802 - (-t667 * t785 + (-qJD(6) * t673 + qJD(4)) * t666) * t668;
t810 = t667 * t674;
t542 = t673 * t608 + t810 * t858;
t760 = t667 * t787;
t784 = qJD(5) * t673;
t698 = t668 * t784 + t760;
t857 = -t542 + t698;
t665 = qJ(2) + qJ(3);
t660 = sin(t665);
t676 = cos(qJ(1));
t813 = t660 * t676;
t671 = sin(qJ(1));
t815 = t660 * t671;
t856 = g(1) * t813 + g(2) * t815;
t855 = -g(1) * t676 - g(2) * t671;
t748 = qJDD(1) * t847;
t778 = qJDD(1) * t675;
t526 = t669 * t778 + t670 * t748 + t860;
t613 = t670 * t847 + t805;
t562 = t776 * t613;
t779 = qJDD(1) * t670;
t720 = t669 * t779 - t675 * t748;
t527 = qJD(1) * t562 + t720;
t657 = -pkin(2) * t675 - pkin(1);
t780 = qJD(1) * qJD(2);
t752 = t670 * t780;
t599 = pkin(2) * t752 + qJDD(1) * t657;
t478 = pkin(3) * t527 - pkin(5) * t526 + t599;
t838 = pkin(2) * qJD(2);
t771 = t669 * t838;
t617 = pkin(5) * t776 + t771;
t624 = t657 * qJD(1);
t689 = -pkin(3) * t858 + pkin(5) * t608 + t624;
t512 = t668 * t617 - t674 * t689;
t662 = qJDD(2) + qJDD(3);
t753 = t847 * qJD(3);
t777 = qJDD(2) * t669;
t591 = t662 * pkin(5) + (qJD(2) * t753 + t777) * pkin(2);
t463 = -qJD(4) * t512 + t668 * t478 + t674 * t591;
t513 = t674 * t617 + t668 * t689;
t754 = t847 * qJD(2);
t735 = pkin(2) * t754;
t618 = -pkin(3) * t776 - t735;
t497 = t513 * t673 + t618 * t667;
t775 = t847 * pkin(2);
t658 = qJDD(2) * t775;
t590 = -pkin(3) * t662 + qJD(3) * t771 - t658;
t451 = qJD(5) * t497 + t463 * t667 - t673 * t590;
t661 = cos(t665);
t799 = t676 * t668;
t804 = t671 * t674;
t595 = t661 * t804 - t799;
t814 = t660 * t673;
t555 = -t595 * t667 + t671 * t814;
t800 = t674 * t676;
t808 = t668 * t671;
t597 = t661 * t800 + t808;
t558 = -t597 * t667 + t673 * t813;
t711 = t660 * t810 + t661 * t673;
t695 = -g(1) * t558 - g(2) * t555 + g(3) * t711 - t451;
t598 = qJD(4) - t858;
t701 = t674 * t608 - t668 * t776;
t528 = -t673 * t598 - t667 * t701;
t525 = qJD(6) + t528;
t741 = t525 ^ 2;
t853 = pkin(6) * t741 - t695;
t556 = t595 * t673 + t667 * t815;
t594 = t661 * t808 + t800;
t852 = t556 * t666 - t594 * t672;
t851 = t556 * t672 + t594 * t666;
t549 = -pkin(3) * t608 - pkin(5) * t858;
t544 = pkin(2) * t792 + t549;
t846 = pkin(2) * t669;
t655 = pkin(5) + t846;
t737 = qJD(4) * t655 + t544;
t850 = t598 * t737;
t818 = t858 * t668;
t849 = (-t789 + t818) * pkin(6);
t848 = (-t543 - t758) * pkin(6);
t489 = -qJD(4) * t701 + t668 * t526 - t674 * t662;
t677 = qJD(2) ^ 2;
t845 = pkin(6) * t673;
t844 = pkin(6) * t674;
t650 = g(3) * t660;
t841 = g(3) * t661;
t840 = g(3) * t668;
t530 = t598 * t667 - t673 * t701;
t649 = t674 * t776;
t488 = qJD(4) * t649 + t674 * t526 + t608 * t789 + t668 * t662;
t524 = qJDD(4) + t527;
t467 = t673 * t488 + t667 * t524 + t598 * t784 + t701 * t786;
t487 = qJDD(5) + t489;
t566 = -t608 * t668 - t649;
t565 = qJD(5) + t566;
t766 = t672 * t467 + t666 * t487 + t565 * t781;
t444 = -t530 * t782 + t766;
t837 = t444 * t666;
t743 = t488 * t667 - t673 * t524;
t468 = qJD(5) * t530 + t743;
t466 = qJDD(6) + t468;
t836 = t466 * t666;
t835 = t466 * t672;
t834 = t467 * t667;
t833 = t487 * t667;
t832 = t487 * t673;
t831 = t488 * t668;
t826 = t530 * t666;
t492 = -t672 * t565 + t826;
t830 = t492 * t525;
t494 = t530 * t672 + t565 * t666;
t829 = t494 * t525;
t740 = t525 * t672;
t828 = t528 * t565;
t827 = t530 * t565;
t825 = t565 * t667;
t739 = t565 * t673;
t824 = t566 * t598;
t823 = t566 * t673;
t822 = t701 * t598;
t819 = t858 * t618;
t817 = t613 * t668;
t816 = t613 * t674;
t811 = t667 * t668;
t809 = t668 * t467;
t803 = t672 * t673;
t534 = t668 * t549 + t674 * t735;
t796 = t673 * t534 + t667 * t771;
t761 = t667 * t789;
t783 = qJD(5) * t674;
t795 = -t534 * t667 + t673 * t771 - pkin(3) * t786 + (t673 * t783 - t761) * pkin(5);
t656 = -t775 - pkin(3);
t794 = t655 * t801 + t667 * t656;
t663 = t670 ^ 2;
t793 = -t675 ^ 2 + t663;
t791 = qJD(3) * t669;
t790 = qJD(4) * t598;
t774 = t670 * t838;
t773 = pkin(2) * t791;
t772 = pkin(5) * t790;
t710 = -t669 * t670 + t675 * t847;
t550 = -pkin(3) * t710 - pkin(5) * t613 + t657;
t770 = t550 * t811;
t769 = t660 * t812;
t768 = t660 * t807;
t767 = t660 * t799;
t736 = pkin(2) * t753;
t719 = t674 * t736;
t765 = t656 * t784 + t667 * t773 + t673 * t719;
t764 = pkin(5) - t845;
t762 = t613 * t787;
t757 = t667 * t783;
t751 = -pkin(3) * t667 + pkin(5) * t801;
t750 = t655 - t845;
t749 = -t590 - t841;
t747 = -0.2e1 * pkin(1) * t780;
t477 = t674 * t478;
t464 = qJD(4) * t513 + t668 * t591 - t477;
t442 = -t467 * pkin(6) + t464;
t450 = t673 * t463 - t513 * t786 + t667 * t590 + t618 * t784;
t443 = pkin(6) * t487 + t450;
t746 = t672 * t442 - t666 * t443;
t744 = t467 * t666 - t672 * t487;
t738 = t598 * t674;
t596 = t661 * t799 - t804;
t734 = g(1) * t596 + g(2) * t594;
t733 = g(1) * t597 + g(2) * t595;
t731 = g(1) * t671 - g(2) * t676;
t518 = (t655 * t783 - t773) * t673 + (qJD(5) * t656 - t655 * t789 + t719) * t667;
t730 = -t544 * t811 + t518;
t510 = -t566 * t803 - t666 * t701;
t727 = t672 * t784 - t510;
t533 = -t674 * t549 + t668 * t735;
t604 = t751 - t844;
t726 = qJD(6) * t604 - t764 * t787 + t533 + t848;
t569 = t794 - t844;
t725 = qJD(6) * t569 - t544 * t674 - t668 * t736 - t750 * t787 + t848;
t615 = t764 * t668;
t699 = -t668 * t788 - t757;
t724 = pkin(3) * t784 - pkin(5) * t699 - qJD(6) * t615 + t796 + t849;
t600 = t750 * t668;
t723 = -qJD(6) * t600 + t544 * t806 - t655 * t699 - t765 + t849;
t722 = -pkin(5) * t524 - t819;
t721 = pkin(6) * t613 + t550 * t673;
t718 = t666 * t442 + t672 * t443;
t479 = -pkin(6) * t530 + t512;
t480 = pkin(6) * t565 + t497;
t457 = t479 * t672 - t480 * t666;
t458 = t479 * t666 + t480 * t672;
t548 = t613 * t801 - t667 * t710;
t499 = -pkin(6) * t548 - t550 * t674;
t517 = t721 * t668;
t717 = t499 * t672 - t517 * t666;
t716 = t499 * t666 + t517 * t672;
t715 = -t512 * t608 + t618 * t789 + t674 * t856;
t714 = -t513 * t608 + t590 * t668 + t618 * t787 + t661 * t840;
t713 = -t624 * t858 - t661 * t855 + t650;
t712 = t855 * t660;
t516 = t548 * t672 + t613 * t812;
t587 = t660 * t801 - t661 * t667;
t561 = t776 * t710;
t709 = t561 * t668 + t762;
t708 = t561 * t674 - t613 * t789;
t707 = -t565 * t784 - t833;
t706 = -t565 * t786 + t832;
t705 = t525 * t781 + t836;
t704 = t525 * t782 - t835;
t678 = qJD(1) ^ 2;
t703 = pkin(1) * t678 - t855;
t700 = 0.2e1 * qJDD(1) * pkin(1) + t731;
t697 = pkin(6) * t466;
t696 = t660 * t840 + t734;
t694 = t624 * t608 + t658 - t841 + t856;
t502 = pkin(3) * t562 - pkin(5) * t561 + t774;
t692 = qJD(4) * t613 * t618 + t502 * t598 + t524 * t550;
t691 = -t550 * t790 + t561 * t618 + t590 * t613;
t690 = -t464 + t696;
t688 = (-pkin(6) * t701 - t512 * t673) * t525 - t650 * t674 - t733;
t687 = -t524 * t655 - t598 * t736 - t819;
t686 = pkin(6) * qJD(5) * t525 - t696;
t685 = t502 * t811 + t550 * t698;
t684 = -g(3) * (-t661 * t810 + t814) + t450 * t674 + t464 * t806 + t497 * t818 + t855 * t711 + t728 * t512;
t496 = t513 * t667 - t673 * t618;
t571 = t587 * t671;
t573 = t587 * t676;
t589 = t660 * t667 + t661 * t801;
t683 = g(1) * t573 + g(2) * t571 - g(3) * t589 + t464 * t811 - t496 * t789 + t512 * t857;
t682 = -qJD(4) * t689 - t591 + t650;
t434 = -t458 * qJD(6) + t746;
t609 = t666 * t806 + t802;
t681 = -g(1) * (-t573 * t672 - t666 * t767) - g(2) * (-t571 * t672 - t671 * t769) - g(3) * (t589 * t672 + t661 * t812) + t434 * t811 + t451 * t609 - t798 * t496 + t857 * t457;
t445 = qJD(6) * t494 + t744;
t610 = -t666 * t674 + t668 * t803;
t680 = (-t444 * t609 - t445 * t610 + t492 * t797 + t494 * t798) * MDP(33) + (t444 * t811 + t466 * t610 + t494 * t857 - t525 * t797) * MDP(34) + (-t445 * t811 - t466 * t609 - t492 * t857 + t525 * t798) * MDP(35) + (t528 * t543 + t530 * t542 + (-t528 * t673 - t530 * t667) * t787 + (-t834 - t468 * t673 + (t528 * t667 - t530 * t673) * qJD(5)) * t668) * MDP(26) + (t444 * t610 - t494 * t797) * MDP(32) + (-t467 * t674 + t728 * t565 + (t530 * t598 + t706) * t668) * MDP(27) + (t468 * t674 + (t542 - t760) * t565 + (-t528 * t598 + t707) * t668) * MDP(28) + (t466 * t811 + t525 * t857) * MDP(36) + (t467 * t806 + t530 * t859) * MDP(25) + ((t488 - t824) * t674 + (-t489 + t822) * t668) * MDP(19) + (t565 * t598 * t668 - t487 * t674) * MDP(29) + (-t701 * t738 + t831) * MDP(18) + (-t598 ^ 2 * t668 + t524 * t674 - t566 * t608) * MDP(21) + (t524 * t668 + t598 * t738 - t608 * t701) * MDP(20) + (t526 - t860) * MDP(13) + (-t720 + (-qJD(1) * t613 - t608) * t776) * MDP(14) + (t608 ^ 2 - t858 ^ 2) * MDP(12) + t662 * MDP(15) + (MDP(11) * t858 + t598 * MDP(22)) * t608;
t433 = t457 * qJD(6) + t718;
t679 = -g(1) * (t573 * t666 - t672 * t767) - g(2) * (t571 * t666 - t671 * t768) - g(3) * (-t589 * t666 + t661 * t807) - t433 * t811 + t451 * t610 - t458 * t857 - t797 * t496;
t614 = pkin(3) * t673 + pkin(5) * t810;
t579 = t655 * t810 - t656 * t673;
t559 = t597 * t673 + t667 * t813;
t547 = t613 * t810 + t673 * t710;
t520 = t559 * t672 + t596 * t666;
t519 = -t559 * t666 + t596 * t672;
t515 = t548 * t666 - t613 * t807;
t509 = -t666 * t823 + t672 * t701;
t486 = pkin(6) * t823 + t513;
t474 = qJD(5) * t548 + t561 * t810 - t673 * t562 - t613 * t761;
t473 = (-t613 * t783 + t562) * t667 + (-qJD(5) * t710 + t708) * t673;
t462 = t721 * t787 + (pkin(6) * t561 + t502 * t673 - t550 * t786) * t668;
t454 = -pkin(6) * t473 - t502 * t674 + t550 * t789;
t453 = qJD(6) * t516 + t473 * t666 - t561 * t807 - t672 * t762;
t452 = (qJD(6) * t817 + t473) * t672 + (-qJD(6) * t548 + t709) * t666;
t1 = [t731 * MDP(2) + (-t488 * t710 + t524 * t816 - t562 * t701 + t598 * t708) * MDP(20) + (-t562 * t776 + t662 * t710) * MDP(14) + (t489 * t710 - t524 * t817 - t562 * t566 - t598 * t709) * MDP(21) + (-t524 * t710 + t562 * t598) * MDP(22) + (g(1) * t595 - g(2) * t597 + t464 * t710 - t512 * t562 + t668 * t691 + t674 * t692) * MDP(23) + (-g(1) * t594 + g(2) * t596 + t463 * t710 - t513 * t562 - t668 * t692 + t674 * t691) * MDP(24) + (g(1) * t556 - g(2) * t559 + t464 * t547 + t474 * t512 + (-t468 * t550 - t502 * t528 + (-t496 * t613 - t550 * t825) * qJD(4)) * t674 + (-t502 * t825 - t451 * t613 - t496 * t561 + (qJD(4) * t528 + t707) * t550) * t668) * MDP(30) + (t488 * t816 - t701 * t708) * MDP(18) + ((-t566 * t674 + t668 * t701) * t561 + (-t831 - t489 * t674 + (t566 * t668 + t674 * t701) * qJD(4)) * t613) * MDP(19) - t855 * MDP(3) + (t444 * t516 + t452 * t494) * MDP(32) + (-t444 * t515 - t445 * t516 - t452 * t492 - t453 * t494) * MDP(33) + (t527 * t657 + t562 * t624 - t599 * t710 + t661 * t731 - t774 * t858) * MDP(16) + (t526 * t710 - t527 * t613 + t561 * t858 + t562 * t608) * MDP(12) + (t526 * t613 - t561 * t608) * MDP(11) + (t444 * t547 + t452 * t525 + t466 * t516 + t474 * t494) * MDP(34) + (-t445 * t547 - t453 * t525 - t466 * t515 - t474 * t492) * MDP(35) + (t466 * t547 + t474 * t525) * MDP(36) + (t467 * t548 + t473 * t530) * MDP(25) + (-t467 * t547 - t468 * t548 - t473 * t528 - t474 * t530) * MDP(26) + ((-qJD(6) * t716 + t454 * t672 - t462 * t666) * t525 + t717 * t466 + t434 * t547 + t457 * t474 + t445 * t770 + t451 * t515 + t496 * t453 + g(1) * t851 - g(2) * t520 + t685 * t492) * MDP(37) + (-(qJD(6) * t717 + t454 * t666 + t462 * t672) * t525 - t716 * t466 - t433 * t547 - t458 * t474 + t444 * t770 + t451 * t516 + t496 * t452 - g(1) * t852 - g(2) * t519 + t685 * t494) * MDP(38) + (qJDD(2) * t670 + t675 * t677) * MDP(6) + (qJDD(2) * t675 - t670 * t677) * MDP(7) + (-t670 * t700 + t675 * t747) * MDP(10) + (t670 * t747 + t675 * t700) * MDP(9) + (qJDD(1) * t663 + 0.2e1 * t675 * t752) * MDP(4) + (t526 * t657 + t561 * t624 + t599 * t613 - t608 * t774 - t660 * t731) * MDP(17) + (t561 * t776 + t613 * t662) * MDP(13) + 0.2e1 * (t670 * t778 - t780 * t793) * MDP(5) + (t473 * t565 + t487 * t548 + t530 * t709 + t613 * t809) * MDP(27) + (-t468 * t817 - t474 * t565 - t487 * t547 - t528 * t709) * MDP(28) + (t487 * t817 + t565 * t709) * MDP(29) + (t464 * t548 + t512 * t473 + g(1) * t555 - g(2) * t558 + (-t550 * t467 - t502 * t530 + (-t497 * t613 - t550 * t739) * qJD(4)) * t674 + (-t502 * t739 - t450 * t613 - t497 * t561 + (qJD(4) * t530 - t706) * t550) * t668) * MDP(31) + qJDD(1) * MDP(1); (-(t569 * t672 + t600 * t666) * t466 + t579 * t444 + (t666 * t725 + t672 * t723) * t525 + t730 * t494 + t679) * MDP(38) + t680 + (g(3) * t670 + t675 * t703) * MDP(10) + ((t666 * t723 - t672 * t725) * t525 + t681 + t730 * t492 + (-t569 * t666 + t600 * t672) * t466 + t579 * t445) * MDP(37) + (-(-t655 * t757 + t765) * t565 - t794 * t487 + t737 * t674 * t530 + (t530 * t736 - t512 * t786 + t544 * t739 + t655 * t467 + (t655 * t739 - t497) * qJD(4)) * t668 + t684) * MDP(31) + (-t579 * t487 - t518 * t565 + (t528 * t737 + t451) * t674 + (t468 * t655 + t496 * t858 + t528 * t736 + t544 * t825) * t668 + t683) * MDP(30) + (t566 * t773 + t656 * t489 + t687 * t668 + (t749 - t850) * t674 + t715) * MDP(23) + (-t701 * t773 + t656 * t488 + t687 * t674 + (t712 + t850) * t668 + t714) * MDP(24) + (-g(3) * t675 + t670 * t703) * MDP(9) + MDP(6) * t779 + MDP(7) * t778 + ((t858 * t792 + t847 * t662 + (-0.2e1 * qJD(2) - qJD(3)) * t791) * pkin(2) + t694) * MDP(16) + ((t608 * t792 + (-0.2e1 * t754 - t753) * qJD(3) + (-t662 - qJDD(2)) * t669) * pkin(2) + t713) * MDP(17) + qJDD(2) * MDP(8) + (-MDP(4) * t670 * t675 + MDP(5) * t793) * t678; (t701 * t771 - pkin(3) * t488 + t534 * t598 + t722 * t674 + (t712 + t772) * t668 + t714) * MDP(24) + (-(t604 * t672 + t615 * t666) * t466 + t614 * t444 + (t666 * t726 + t672 * t724) * t525 + t795 * t494 + t679) * MDP(38) + (-t566 * t771 - pkin(3) * t489 + t533 * t598 + t722 * t668 + (t749 - t772) * t674 + t715) * MDP(23) + t680 + (t681 + (t666 * t724 - t672 * t726) * t525 + t614 * t445 + (-t604 * t666 + t615 * t672) * t466 + t795 * t492) * MDP(37) + (-t751 * t487 - t497 * t789 + t796 * t565 - t533 * t530 + (pkin(3) * t739 - t512 * t811) * qJD(5) + (t530 * t787 - t565 * t699 + t809) * pkin(5) + t684) * MDP(31) + (t496 * t818 + t451 * t674 - t487 * t614 - t528 * t533 - t795 * t565 + (t468 * t668 + t528 * t787) * pkin(5) + t683) * MDP(30) + (t677 * t846 + t694) * MDP(16) + (-pkin(2) * t777 + t677 * t775 + t713) * MDP(17); -t566 ^ 2 * MDP(19) + (t488 + t824) * MDP(20) + (-t489 - t822) * MDP(21) + t524 * MDP(22) + (t513 * t598 - t617 * t787 + t668 * t682 + t477 + t734) * MDP(23) + (-t512 * t598 + t618 * t566 + (qJD(4) * t617 - t478) * t668 + t682 * t674 + t733) * MDP(24) + (t530 * t739 + t834) * MDP(25) + ((t467 - t828) * t673 + (-t468 - t827) * t667) * MDP(26) + (t565 * t739 + t833) * MDP(27) + (-t565 ^ 2 * t667 + t832) * MDP(28) + (-t513 * t528 + t673 * t690) * MDP(30) + (-t513 * t530 - t667 * t690) * MDP(31) + (t444 * t667 * t672 + (-t667 * t782 + t727) * t494) * MDP(32) + (t492 * t510 + t494 * t509 + (-t492 * t672 - t494 * t666) * t784 + (-t837 - t445 * t672 + (t492 * t666 - t494 * t672) * qJD(6)) * t667) * MDP(33) + (-t444 * t673 + t727 * t525 + (t494 * t565 - t704) * t667) * MDP(34) + (t445 * t673 + (-t666 * t784 + t509) * t525 + (-t492 * t565 - t705) * t667) * MDP(35) + (-t466 * t673 + t525 * t825) * MDP(36) + (-t486 * t740 - t496 * t509 + t688 * t666 + (t496 * t666 * qJD(5) - t672 * t686 - t434) * t673 + (pkin(6) * t704 + t451 * t666 + t457 * t565 + t512 * t492 + t496 * t781) * t667) * MDP(37) + (t486 * t666 * t525 - t496 * t510 + t688 * t672 + (t496 * t785 + t666 * t686 + t433) * t673 + (pkin(6) * t705 + t451 * t672 - t458 * t565 + t512 * t494 - t496 * t782) * t667) * MDP(38) - (MDP(18) * t566 - MDP(19) * t701 - MDP(23) * t618 - MDP(27) * t530 + MDP(28) * t528 - MDP(29) * t565 + MDP(30) * t496 + MDP(31) * t497) * t701; -t528 ^ 2 * MDP(26) + (t467 + t828) * MDP(27) + (-t743 + t827) * MDP(28) + t487 * MDP(29) + (t497 * t565 + t695) * MDP(30) + (g(1) * t559 + g(2) * t556 + g(3) * t587 - t496 * t565 + t512 * t528 - t450) * MDP(31) + (t494 * t740 + t837) * MDP(32) + ((t444 - t830) * t672 + (-t445 - t829) * t666) * MDP(33) + (t525 * t740 + t836) * MDP(34) + (-t666 * t741 + t835) * MDP(35) + (-t497 * t492 - t697 * t666 - t672 * t853) * MDP(37) + (-t497 * t494 + t666 * t853 - t697 * t672) * MDP(38) + (MDP(25) * t528 + MDP(26) * t530 - MDP(28) * qJD(5) - MDP(30) * t512 - MDP(34) * t494 + MDP(35) * t492 - MDP(36) * t525 - MDP(37) * t457 + MDP(38) * t458) * t530; t494 * t492 * MDP(32) + (-t492 ^ 2 + t494 ^ 2) * MDP(33) + (t766 + t830) * MDP(34) + (-t744 + t829) * MDP(35) + t466 * MDP(36) + (t458 * t525 - t496 * t494 - g(1) * t519 + g(2) * t852 - g(3) * (-t587 * t666 + t768) + t746) * MDP(37) + (t457 * t525 + t496 * t492 + g(1) * t520 + g(2) * t851 - g(3) * (-t587 * t672 - t769) - t718) * MDP(38) + (-MDP(34) * t826 - MDP(35) * t494 - MDP(37) * t458 - MDP(38) * t457) * qJD(6);];
tau  = t1;
