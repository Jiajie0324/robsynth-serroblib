% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRR10V2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d4,d6]';
% MDP [38x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRR10V2_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-11 14:56
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRR10V2_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(38,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [6x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [38 1]), ...
  'S6RRRRRR10V2_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [38x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-11 14:52:21
% EndTime: 2019-04-11 14:52:49
% DurationCPUTime: 10.85s
% Computational Cost: add. (10000->599), mult. (23395->843), div. (0->0), fcn. (18491->10), ass. (0->231)
t533 = sin(qJ(4));
t537 = cos(qJ(5));
t648 = t533 * t537;
t535 = sin(qJ(2));
t681 = cos(qJ(3));
t605 = qJD(1) * t681;
t534 = sin(qJ(3));
t539 = cos(qJ(2));
t647 = t534 * t539;
t492 = -qJD(1) * t647 - t535 * t605;
t532 = sin(qJ(5));
t538 = cos(qJ(4));
t643 = t537 * t538;
t634 = qJD(1) * t535;
t695 = -t534 * t634 + t539 * t605;
t448 = -t492 * t532 + t643 * t695;
t629 = qJD(4) * t538;
t584 = t537 * t629 - t448;
t628 = qJD(5) * t532;
t608 = t533 * t628;
t696 = t584 - t608;
t531 = sin(qJ(6));
t536 = cos(qJ(6));
t624 = qJD(6) * t536;
t625 = qJD(6) * t531;
t631 = qJD(4) * t533;
t649 = t533 * t536;
t640 = -t696 * t531 + t536 * t631 + t538 * t625 - t624 * t648 - t649 * t695;
t630 = qJD(4) * t537;
t644 = t536 * t538;
t655 = t531 * t533;
t639 = t448 * t536 + t695 * t655 - (-qJD(6) + t630) * t644 - (-t536 * t628 + (-qJD(6) * t537 + qJD(4)) * t531) * t533;
t653 = t532 * t538;
t447 = t537 * t492 + t653 * t695;
t610 = t532 * t629;
t627 = qJD(5) * t537;
t557 = t533 * t627 + t610;
t694 = -t447 + t557;
t622 = qJD(2) + qJD(3);
t633 = qJD(2) * t534;
t618 = pkin(2) * t633;
t501 = pkin(5) * t622 + t618;
t527 = -pkin(2) * t539 - pkin(1);
t509 = t527 * qJD(1);
t549 = -pkin(3) * t695 + pkin(5) * t492 + t509;
t427 = t533 * t501 - t538 * t549;
t455 = t695 * t622;
t497 = t535 * t681 + t647;
t465 = t622 * t497;
t456 = t465 * qJD(1);
t623 = qJD(1) * qJD(2);
t602 = t535 * t623;
t407 = pkin(2) * t602 + pkin(3) * t456 - pkin(5) * t455;
t604 = t681 * qJD(2);
t589 = pkin(2) * t604;
t576 = qJD(3) * t589;
t550 = t533 * t407 + t538 * t576;
t385 = -qJD(4) * t427 + t550;
t428 = t538 * t501 + t533 * t549;
t502 = -pkin(3) * t622 - t589;
t409 = t428 * t537 + t502 * t532;
t588 = qJD(3) * t618;
t370 = qJD(5) * t409 + t385 * t532 - t537 * t588;
t471 = -t538 * t492 + t533 * t622;
t572 = qJD(4) - t695;
t478 = t537 * t572;
t437 = t471 * t532 - t478;
t436 = qJD(6) + t437;
t594 = t436 ^ 2;
t692 = pkin(6) * t594 + t370;
t571 = -t534 * t535 + t539 * t681;
t460 = -pkin(3) * t571 - pkin(5) * t497 + t527;
t464 = t622 * t571;
t683 = qJD(4) * t572;
t691 = -t460 * t683 + t502 * t464 + t497 * t588;
t642 = t538 * t456;
t690 = t533 * t683 - t642;
t689 = -0.2e1 * t623;
t688 = MDP(5) * (t535 ^ 2 - t539 ^ 2);
t523 = t538 * t622;
t469 = -t492 * t533 - t523;
t687 = t469 * t572;
t560 = t533 * t572;
t661 = t695 * t533;
t686 = (-t631 + t661) * pkin(6);
t685 = (-t448 - t608) * pkin(6);
t684 = qJD(1) * t497;
t620 = pkin(2) * qJD(2) * t535;
t415 = pkin(3) * t465 - pkin(5) * t464 + t620;
t682 = t502 * qJD(4) * t497 + t415 * t572 + t460 * t456;
t540 = qJD(2) ^ 2;
t680 = pkin(2) * t534;
t679 = pkin(6) * t537;
t678 = pkin(6) * t538;
t439 = t537 * t471 + t532 * t572;
t419 = qJD(4) * t523 + t538 * t455 + t492 * t631;
t382 = qJD(5) * t478 + t537 * t419 + t532 * t456 - t471 * t628;
t651 = t533 * t455;
t420 = qJD(4) * t471 + t651;
t468 = qJD(5) + t469;
t616 = t536 * t382 + t531 * t420 + t468 * t624;
t361 = -t439 * t625 + t616;
t676 = t361 * t531;
t675 = t382 * t532;
t595 = t532 * t419 - t537 * t456;
t383 = qJD(5) * t439 + t595;
t674 = t383 * t537;
t665 = t439 * t531;
t403 = -t536 * t468 + t665;
t673 = t403 * t436;
t405 = t439 * t536 + t468 * t531;
t672 = t405 * t436;
t671 = t419 * t533;
t670 = t420 * t532;
t669 = t420 * t537;
t668 = t420 * t538;
t592 = t436 * t536;
t667 = t437 * t468;
t666 = t439 * t468;
t664 = t468 * t532;
t593 = t468 * t537;
t663 = t469 * t537;
t662 = t471 * t538;
t660 = t497 * t533;
t659 = t502 * t695;
t658 = t509 * t695;
t657 = t509 * t492;
t656 = t531 * t383;
t654 = t532 * t533;
t652 = t533 * t382;
t650 = t533 * t456;
t646 = t536 * t383;
t645 = t536 * t537;
t541 = qJD(1) ^ 2;
t641 = t539 * t541;
t459 = -pkin(3) * t492 - pkin(5) * t695;
t443 = t533 * t459 + t538 * t589;
t638 = t537 * t443 + t532 * t618;
t611 = t532 * t631;
t626 = qJD(5) * t538;
t637 = -t443 * t532 + t537 * t618 - pkin(3) * t628 + (t537 * t626 - t611) * pkin(5);
t525 = pkin(5) + t680;
t621 = t681 * pkin(2);
t526 = -t621 - pkin(3);
t636 = t525 * t643 + t532 * t526;
t632 = qJD(3) * t534;
t619 = pkin(2) * t632;
t617 = t460 * t654;
t603 = t681 * qJD(3);
t590 = pkin(2) * t603;
t577 = t538 * t590;
t615 = t526 * t627 + t532 * t619 + t537 * t577;
t614 = pkin(5) - t679;
t612 = t497 * t629;
t607 = t532 * t626;
t601 = -pkin(3) * t532 + pkin(5) * t643;
t600 = t525 - t679;
t599 = pkin(1) * t689;
t369 = t537 * t385 - t428 * t628 + t502 * t627 + t532 * t588;
t363 = pkin(6) * t420 + t369;
t553 = -t538 * t407 + t533 * t576;
t386 = qJD(4) * t428 + t553;
t364 = -t382 * pkin(6) + t386;
t598 = -t363 * t531 + t536 * t364;
t597 = t382 * t531 - t536 * t420;
t449 = pkin(2) * t634 + t459;
t591 = qJD(4) * t525 + t449;
t435 = (t525 * t626 - t619) * t537 + (qJD(5) * t526 - t525 * t631 + t577) * t532;
t587 = -t449 * t654 + t435;
t586 = -t428 * t492 + t502 * t629 + t533 * t588;
t425 = -t469 * t645 + t471 * t531;
t583 = t536 * t627 - t425;
t442 = -t538 * t459 + t533 * t589;
t488 = t601 - t678;
t582 = qJD(6) * t488 - t614 * t629 + t442 + t685;
t472 = t636 - t678;
t581 = qJD(6) * t472 - t449 * t538 - t533 * t590 - t600 * t629 + t685;
t499 = t614 * t533;
t558 = -t533 * t630 - t607;
t580 = pkin(3) * t627 - pkin(5) * t558 - qJD(6) * t499 + t638 + t686;
t484 = t600 * t533;
t579 = -qJD(6) * t484 + t449 * t648 - t525 * t558 - t615 + t686;
t578 = pkin(6) * t497 + t460 * t537;
t575 = t363 * t536 + t364 * t531;
t395 = -pkin(6) * t439 + t427;
t396 = pkin(6) * t468 + t409;
t376 = t395 * t536 - t396 * t531;
t377 = t395 * t531 + t396 * t536;
t458 = t497 * t643 - t532 * t571;
t411 = -pkin(6) * t458 - t460 * t538;
t432 = t578 * t533;
t574 = t411 * t536 - t432 * t531;
t573 = t411 * t531 + t432 * t536;
t431 = t458 * t536 + t497 * t655;
t569 = t464 * t533 + t612;
t568 = t464 * t538 - t497 * t631;
t567 = -t468 * t627 - t670;
t566 = -t468 * t628 + t669;
t565 = t436 * t624 + t656;
t564 = t436 * t625 - t646;
t563 = t369 * t538 + t386 * t648 + t409 * t661 + t427 * t584;
t408 = t428 * t532 - t537 * t502;
t562 = t386 * t654 - t408 * t631 + t427 * t694;
t561 = -t427 * t492 + t502 * t631 - t533 * t659;
t559 = t538 * t572;
t554 = pkin(6) * t383;
t353 = -qJD(6) * t377 + t598;
t493 = t531 * t648 + t644;
t548 = t353 * t654 + t370 * t493 + t376 * t694 - t408 * t640;
t547 = -t538 * t683 - t650;
t546 = t415 * t654 + t460 * t557;
t544 = -t572 * t695 + t683;
t352 = qJD(6) * t376 + t575;
t494 = -t531 * t538 + t533 * t645;
t543 = -t352 * t654 + t370 * t494 - t377 * t694 - t408 * t639;
t362 = qJD(6) * t405 + t597;
t542 = (-t361 * t493 - t362 * t494 + t403 * t639 + t405 * t640) * MDP(33) + (t361 * t654 + t383 * t494 + t405 * t694 - t436 * t639) * MDP(34) + (-t362 * t654 - t383 * t493 - t403 * t694 + t436 * t640) * MDP(35) + (t437 * t448 + t439 * t447 + (-t437 * t537 - t439 * t532) * t629 + (-t675 - t674 + (t437 * t532 - t439 * t537) * qJD(5)) * t533) * MDP(26) + (t361 * t494 - t405 * t639) * MDP(32) + (-t382 * t538 + t584 * t468 + (t439 * t572 + t566) * t533) * MDP(27) + (t383 * t538 + (t447 - t610) * t468 + (-t437 * t572 + t567) * t533) * MDP(28) + (t383 * t654 + t436 * t694) * MDP(36) + (t382 * t648 + t696 * t439) * MDP(25) + ((t419 - t687) * t538 + (-t471 * t572 - t420) * t533) * MDP(19) + (t468 * t560 - t668) * MDP(29) + (t572 * t662 + t671) * MDP(18) + (-t469 * t492 - t533 * t544 + t642) * MDP(21) + (t471 * t492 + t538 * t544 + t650) * MDP(20) + t455 * MDP(13) + (t492 ^ 2 - t695 ^ 2) * MDP(12) + (MDP(11) * t695 + t572 * MDP(22)) * t492 + (-t695 * MDP(13) + (-t492 - t684) * MDP(14)) * t622;
t498 = pkin(3) * t537 + pkin(5) * t653;
t475 = t525 * t653 - t526 * t537;
t457 = t497 * t653 + t537 * t571;
t430 = t458 * t531 - t497 * t649;
t424 = -t536 * t471 - t531 * t663;
t399 = pkin(6) * t663 + t428;
t398 = pkin(6) * t471 - t427 * t537;
t392 = qJD(5) * t458 + t464 * t653 - t537 * t465 - t497 * t611;
t391 = (-t497 * t626 + t465) * t532 + (-qJD(5) * t571 + t568) * t537;
t378 = t578 * t629 + (pkin(6) * t464 + t415 * t537 - t460 * t628) * t533;
t373 = -pkin(6) * t391 - t415 * t538 + t460 * t631;
t372 = qJD(6) * t431 + t391 * t531 - t464 * t649 - t536 * t612;
t371 = (qJD(6) * t660 + t391) * t536 + (-qJD(6) * t458 + t569) * t531;
t1 = [(MDP(10) * t599 + 0.2e1 * MDP(4) * t602 + MDP(6) * t540) * t539 + (-t540 * MDP(7) + MDP(9) * t599) * t535 + (-t419 * t571 + t464 * t559 + t471 * t465 - t497 * t690) * MDP(20) + (t420 * t571 - t464 * t560 - t469 * t465 + t497 * t547) * MDP(21) + (-t456 * t571 + t465 * t572) * MDP(22) + (t456 * t527 + t465 * t509 + (-qJD(1) * t571 - t695) * t620) * MDP(16) + (t455 * t571 - t456 * t497 + t464 * t695 + t465 * t492) * MDP(12) + (t386 * t457 + t392 * t427 + (-t383 * t460 - t415 * t437 + (-t408 * t497 - t460 * t664) * qJD(4)) * t538 + (-t415 * t664 - t370 * t497 - t408 * t464 + (qJD(4) * t437 + t567) * t460) * t533) * MDP(30) + (t386 * t458 + t391 * t427 + (-t382 * t460 - t415 * t439 + (-t409 * t497 - t460 * t593) * qJD(4)) * t538 + (-t415 * t593 - t369 * t497 - t409 * t464 + (qJD(4) * t439 - t566) * t460) * t533) * MDP(31) + (-t383 * t660 - t392 * t468 - t420 * t457 - t437 * t569) * MDP(28) + (t420 * t660 + t468 * t569) * MDP(29) + (t391 * t468 + t420 * t458 + t439 * t569 + t497 * t652) * MDP(27) + (t419 * t497 * t538 + t471 * t568) * MDP(18) + (t455 * t527 + t464 * t509 + (-t492 + t684) * t620) * MDP(17) + ((-qJD(6) * t573 + t373 * t536 - t378 * t531) * t436 + t574 * t383 + t353 * t457 + t376 * t392 + t362 * t617 + t370 * t430 + t408 * t372 + t546 * t403) * MDP(37) + (-(qJD(6) * t574 + t373 * t531 + t378 * t536) * t436 - t573 * t383 - t352 * t457 - t377 * t392 + t361 * t617 + t370 * t431 + t408 * t371 + t546 * t405) * MDP(38) + ((-t469 * t538 - t471 * t533) * t464 + (-t671 - t668 + (t469 * t533 - t662) * qJD(4)) * t497) * MDP(19) + (t386 * t571 - t427 * t465 + t533 * t691 + t682 * t538) * MDP(23) + (t385 * t571 - t428 * t465 - t682 * t533 + t538 * t691) * MDP(24) + (t464 * MDP(13) - t465 * MDP(14)) * t622 + (t455 * t497 - t464 * t492) * MDP(11) + (-t362 * t457 - t372 * t436 - t383 * t430 - t392 * t403) * MDP(35) + (t361 * t457 + t371 * t436 + t383 * t431 + t392 * t405) * MDP(34) + (t383 * t457 + t392 * t436) * MDP(36) + (-t382 * t457 - t383 * t458 - t391 * t437 - t392 * t439) * MDP(26) + (t382 * t458 + t391 * t439) * MDP(25) + (-t361 * t430 - t362 * t431 - t371 * t403 - t372 * t405) * MDP(33) + (t361 * t431 + t371 * t405) * MDP(32) + t688 * t689; (t471 * t619 + t526 * t419 + (t449 * t572 + t525 * t683) * t533 + (-t525 * t456 - t572 * t590 - t659) * t538 + t586) * MDP(24) + t542 + (-(t472 * t536 + t484 * t531) * t383 + t475 * t361 + (t531 * t581 + t536 * t579) * t436 + t587 * t405 + t543) * MDP(38) + (-t658 + (t492 * t634 + (-0.2e1 * t604 - t603) * qJD(3)) * pkin(2)) * MDP(17) + (t657 + (t695 * t634 + (-0.2e1 * qJD(2) - qJD(3)) * t632) * pkin(2)) * MDP(16) + (t526 * t420 - t449 * t559 + t547 * t525 + (t469 * t534 - t538 * t633 - t560 * t681) * qJD(3) * pkin(2) + t561) * MDP(23) + (-(-t525 * t607 + t615) * t468 - t636 * t420 + t591 * t538 * t439 + (t439 * t590 - t427 * t628 + t449 * t593 + t525 * t382 + (t525 * t593 - t409) * qJD(4)) * t533 + t563) * MDP(31) + (-t475 * t420 - t435 * t468 + (t437 * t591 + t370) * t538 + (t383 * t525 + t408 * t695 + t437 * t590 + t449 * t664) * t533 + t562) * MDP(30) + ((-t472 * t531 + t484 * t536) * t383 + t475 * t362 + (t531 * t579 - t536 * t581) * t436 + t587 * t403 + t548) * MDP(37) - t535 * MDP(4) * t641 + t541 * t688 + (MDP(9) * t535 * t541 + MDP(10) * t641) * pkin(1); (-(t488 * t536 + t499 * t531) * t383 + t498 * t361 + (t531 * t582 + t536 * t580) * t436 + t637 * t405 + t543) * MDP(38) + (-pkin(3) * t419 + t690 * pkin(5) + t443 * t572 - t471 * t618 - t538 * t659 + t586) * MDP(24) + t542 + ((-t488 * t531 + t499 * t536) * t383 + t498 * t362 + (t531 * t580 - t536 * t582) * t436 + t637 * t403 + t548) * MDP(37) + (-pkin(3) * t420 + t442 * t572 + t547 * pkin(5) + (-qJD(3) * t538 - t469) * t618 + t561) * MDP(23) + (-t601 * t420 - t409 * t631 + t638 * t468 - t442 * t439 + (pkin(3) * t593 - t427 * t654) * qJD(5) + (t439 * t629 - t468 * t558 + t652) * pkin(5) + t563) * MDP(31) + (t408 * t661 + t370 * t538 - t420 * t498 - t437 * t442 - t637 * t468 + (t383 * t533 + t437 * t629) * pkin(5) + t562) * MDP(30) + (t540 * t621 - t658) * MDP(17) + (t540 * t680 + t657) * MDP(16); -t469 ^ 2 * MDP(19) + (t419 + t687) * MDP(20) - t651 * MDP(21) + t456 * MDP(22) + (-t428 * t695 - t553) * MDP(23) + (t427 * t695 + t502 * t469 - t550) * MDP(24) + (t439 * t593 + t675) * MDP(25) + ((t382 - t667) * t537 + (-t383 - t666) * t532) * MDP(26) + (t468 * t593 + t670) * MDP(27) + (-t468 ^ 2 * t532 + t669) * MDP(28) + (-t386 * t537 - t428 * t437) * MDP(30) + (t386 * t532 - t428 * t439) * MDP(31) + (t361 * t532 * t536 + (-t532 * t625 + t583) * t405) * MDP(32) + (t403 * t425 + t405 * t424 + (-t403 * t536 - t405 * t531) * t627 + (-t676 - t362 * t536 + (t403 * t531 - t405 * t536) * qJD(6)) * t532) * MDP(33) + (-t361 * t537 + t583 * t436 + (t405 * t468 - t564) * t532) * MDP(34) + (t362 * t537 + (-t531 * t627 + t424) * t436 + (-t403 * t468 - t565) * t532) * MDP(35) + (t436 * t664 - t674) * MDP(36) + (-(-t398 * t531 + t399 * t536) * t436 - t408 * t424 + (-t353 + (-pkin(6) * t592 + t408 * t531) * qJD(5)) * t537 + (pkin(6) * t564 + t370 * t531 + t376 * t468 + t427 * t403 + t408 * t624) * t532) * MDP(37) + ((t398 * t536 + t399 * t531) * t436 - t408 * t425 + (t352 + (pkin(6) * t436 * t531 + t408 * t536) * qJD(5)) * t537 + (pkin(6) * t565 + t370 * t536 - t377 * t468 + t427 * t405 - t408 * t625) * t532) * MDP(38) + (MDP(18) * t469 + t471 * MDP(19) - MDP(21) * t695 - t502 * MDP(23) - t439 * MDP(27) + t437 * MDP(28) - t468 * MDP(29) + t408 * MDP(30) + t409 * MDP(31)) * t471; -t437 ^ 2 * MDP(26) + (t382 + t667) * MDP(27) + (-t595 + t666) * MDP(28) + t420 * MDP(29) + (t409 * t468 - t370) * MDP(30) + (-t408 * t468 + t427 * t437 - t369) * MDP(31) + (t405 * t592 + t676) * MDP(32) + ((t361 - t673) * t536 + (-t362 - t672) * t531) * MDP(33) + (t436 * t592 + t656) * MDP(34) + (-t531 * t594 + t646) * MDP(35) + (-t409 * t403 - t554 * t531 - t536 * t692) * MDP(37) + (-t409 * t405 + t531 * t692 - t554 * t536) * MDP(38) + (MDP(25) * t437 + t439 * MDP(26) - MDP(28) * qJD(5) - t427 * MDP(30) - t405 * MDP(34) + t403 * MDP(35) - t436 * MDP(36) - t376 * MDP(37) + t377 * MDP(38)) * t439; t405 * t403 * MDP(32) + (-t403 ^ 2 + t405 ^ 2) * MDP(33) + (t616 + t673) * MDP(34) + (-t597 + t672) * MDP(35) + t383 * MDP(36) + (t377 * t436 - t405 * t408 + t598) * MDP(37) + (t376 * t436 + t403 * t408 - t575) * MDP(38) + (-MDP(34) * t665 - MDP(35) * t405 - MDP(37) * t377 - MDP(38) * t376) * qJD(6);];
tauc  = t1;
