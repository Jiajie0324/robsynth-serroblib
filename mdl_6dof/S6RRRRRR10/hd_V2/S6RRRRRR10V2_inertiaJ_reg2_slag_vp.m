% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRR10V2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d4,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-11 14:56
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRR10V2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10V2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S6RRRRRR10V2_inertiaJ_reg2_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
t122 = sin(qJ(4));
t116 = t122 ^ 2;
t127 = cos(qJ(4));
t119 = t127 ^ 2;
t230 = t116 + t119;
t229 = 2 * pkin(6);
t126 = cos(qJ(5));
t121 = sin(qJ(5));
t175 = t121 * t127;
t123 = sin(qJ(3));
t124 = sin(qJ(2));
t128 = cos(qJ(3));
t129 = cos(qJ(2));
t77 = t123 * t124 - t128 * t129;
t79 = t123 * t129 + t128 * t124;
t37 = -t126 * t77 + t79 * t175;
t228 = t37 ^ 2;
t211 = t128 * pkin(2);
t109 = -pkin(3) - t211;
t213 = t123 * pkin(2);
t108 = pkin(5) + t213;
t168 = t127 * t108;
t54 = -t126 * t109 + t121 * t168;
t227 = t54 ^ 2;
t226 = t77 ^ 2;
t80 = t126 * pkin(3) + pkin(5) * t175;
t225 = t80 ^ 2;
t224 = -0.2e1 * t37;
t110 = -t129 * pkin(2) - pkin(1);
t43 = t77 * pkin(3) - t79 * pkin(5) + t110;
t223 = 0.2e1 * t43;
t222 = 0.2e1 * t110;
t221 = 0.2e1 * t122;
t220 = 0.2e1 * t129;
t194 = t127 * t43;
t169 = t126 * t127;
t39 = t121 * t77 + t79 * t169;
t10 = -t39 * pkin(6) - t194;
t120 = sin(qJ(6));
t125 = cos(qJ(6));
t20 = (pkin(6) * t79 + t126 * t43) * t122;
t5 = t125 * t10 - t120 * t20;
t6 = t120 * t10 + t125 * t20;
t106 = t126 * t122;
t71 = t120 * t106 + t125 * t127;
t73 = t125 * t106 - t120 * t127;
t219 = -t5 * t73 - t6 * t71;
t218 = pkin(6) * t73;
t104 = t121 * t122;
t154 = t71 * t104;
t217 = t5 * t104 + t43 * t154;
t216 = pkin(6) * t121;
t215 = pkin(6) * t126;
t214 = t121 * pkin(3);
t212 = t127 * pkin(5);
t210 = t54 * t80;
t209 = pkin(3) - t109;
t177 = t121 * t109;
t50 = t177 + (t108 * t126 - pkin(6)) * t127;
t63 = (t108 - t215) * t122;
t26 = -t120 * t50 + t125 * t63;
t27 = t120 * t63 + t125 * t50;
t208 = -t26 * t73 - t27 * t71;
t207 = t26 * t104 + t54 * t71;
t64 = -t214 + (pkin(5) * t126 - pkin(6)) * t127;
t83 = (pkin(5) - t215) * t122;
t40 = -t120 * t64 + t125 * t83;
t41 = t120 * t83 + t125 * t64;
t206 = -t40 * t73 - t41 * t71;
t205 = t40 * t104 + t80 * t71;
t182 = t116 * t126;
t56 = t126 * t168 + t177;
t204 = t108 * t182 + t56 * t127;
t203 = t54 + t80;
t82 = pkin(5) * t169 - t214;
t202 = pkin(5) * t182 + t82 * t127;
t92 = t116 * t108;
t94 = t119 * t108;
t201 = t94 + t92;
t173 = t122 * t125;
t17 = t120 * t39 - t79 * t173;
t200 = t120 * t17;
t199 = t120 * t37;
t198 = t120 * t71;
t197 = t122 * t43;
t66 = t122 * t77;
t196 = t122 * t79;
t195 = t125 * t37;
t68 = t127 * t77;
t193 = t17 * t125;
t180 = t120 * t122;
t19 = t125 * t39 + t79 * t180;
t192 = t19 * t120;
t191 = t19 * t125;
t190 = t27 * t125;
t189 = t37 * t126;
t188 = t37 * t127;
t187 = t39 * t121;
t186 = t39 * t127;
t185 = t41 * t125;
t61 = t71 * t125;
t62 = t73 * t120;
t184 = t73 * t125;
t115 = t121 ^ 2;
t103 = t115 * t116;
t183 = t116 * t121;
t118 = t126 ^ 2;
t105 = t118 * t116;
t181 = t120 * t121;
t179 = t120 * t125;
t178 = t120 * t126;
t176 = t121 * t126;
t174 = t122 * t108;
t172 = t122 * t127;
t171 = t125 * t121;
t170 = t125 * t126;
t167 = t230 * pkin(5);
t114 = t120 ^ 2;
t117 = t125 ^ 2;
t166 = t114 + t117;
t165 = -0.2e1 * t196;
t164 = 0.2e1 * t68;
t163 = -0.2e1 * t172;
t100 = 0.2e1 * t172;
t162 = t37 * t181;
t161 = t79 * t183;
t160 = t43 * t104;
t159 = t37 * t171;
t158 = t79 * t182;
t157 = t17 * t104;
t156 = t19 * t104;
t29 = t37 * t104;
t155 = t71 * t181;
t153 = t73 * t104;
t152 = t115 * t180;
t95 = t120 * t104;
t151 = t120 * t176;
t150 = t115 * t173;
t149 = t120 * t171;
t96 = t122 * t171;
t148 = t121 * t170;
t147 = t166 * (pkin(6) ^ 2);
t146 = pkin(6) * t95;
t145 = pkin(6) * t96;
t144 = pkin(6) * t150;
t143 = t166 * t229;
t142 = -t6 * t104 + t43 * t153;
t141 = -pkin(3) * t79 - pkin(5) * t77;
t140 = -t120 * t6 - t125 * t5;
t139 = -t5 * t120 + t6 * t125;
t138 = -t108 * t77 + t109 * t79;
t137 = -t120 * t27 - t125 * t26;
t136 = -t120 * t41 - t125 * t40;
t135 = t54 * t121 + t56 * t126;
t134 = t80 * t121 + t82 * t126;
t133 = (t184 + t198) * pkin(6);
t131 = pkin(5) ^ 2;
t111 = t116 * t131;
t101 = t108 ^ 2;
t98 = pkin(5) * t183;
t97 = t121 * t106;
t91 = t116 * t101;
t90 = t126 * t163;
t89 = -0.2e1 * t116 * t176;
t88 = t121 * t100;
t87 = pkin(6) * t152;
t86 = pkin(5) * t92;
t84 = t108 * t183;
t76 = (-t115 + t118) * t122;
t75 = t79 ^ 2;
t70 = t73 ^ 2;
t69 = t71 ^ 2;
t65 = t116 * t75;
t60 = t79 * t172;
t58 = pkin(6) * t61;
t57 = t73 * t171;
t53 = 0.2e1 * t153;
t52 = -0.2e1 * t154;
t49 = t80 * t73;
t47 = -t73 * t126 + t150;
t46 = t71 * t126 - t152;
t45 = -0.2e1 * t73 * t71;
t44 = (-t116 + t119) * t79;
t42 = t43 ^ 2;
t36 = t54 * t73;
t34 = t119 * t42;
t33 = t184 - t198;
t32 = t42 * t103;
t30 = t39 * t106;
t28 = (-t62 - t61) * t121;
t16 = t158 - t186;
t15 = -t161 + t188;
t12 = t19 * t73;
t11 = t17 * t71;
t9 = (-t187 - t189) * t122;
t8 = t73 * t37 + t156;
t7 = -t71 * t37 - t157;
t3 = -t73 * t17 - t19 * t71;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t124 ^ 2, t124 * t220, 0, t129 ^ 2, 0, 0, pkin(1) * t220, -0.2e1 * pkin(1) * t124, 0, pkin(1) ^ 2, t75, -0.2e1 * t79 * t77, 0, t226, 0, 0, t77 * t222, t79 * t222, 0, t110 ^ 2, t119 * t75, t75 * t163, t79 * t164, t65, t77 * t165, t226, t43 * t164, -0.2e1 * t43 * t66, -t230 * t79 * t223, t116 * t42 + t34, t39 ^ 2, t39 * t224, 0.2e1 * t39 * t196, t228, t37 * t165, t65 (-t161 - t188) * t223 (-t158 - t186) * t223, 0.2e1 * (t187 - t189) * t197, t105 * t42 + t32 + t34, t19 ^ 2, -0.2e1 * t19 * t17, 0.2e1 * t19 * t37, t17 ^ 2, t17 * t224, t228, 0.2e1 * t157 * t43 + 0.2e1 * t5 * t37, 0.2e1 * t156 * t43 - 0.2e1 * t6 * t37, -0.2e1 * t6 * t17 - 0.2e1 * t5 * t19, t5 ^ 2 + t6 ^ 2 + t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, t129, 0, 0, 0, 0, 0, 0, 0, t79, 0, -t77, 0, 0, 0 (-t123 * t77 - t128 * t79) * pkin(2), 0, t60, t44, t66, -t60, t68, 0, t138 * t122, t138 * t127, 0, 0, t30, t9, t16, t29, t15, -t60 (t108 * t37 - t54 * t79) * t122 (t108 * t39 - t56 * t79) * t122, -t56 * t37 + t54 * t39 (t135 - t168) * t197, t12, t3, t8, t11, t7, t29, t54 * t17 + t26 * t37 + t217, t54 * t19 - t27 * t37 + t142, -t27 * t17 - t26 * t19 + t219, t160 * t54 + t5 * t26 + t6 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t211, -0.2e1 * t213, 0 (t123 ^ 2 + t128 ^ 2) * pkin(2) ^ 2, t116, t100, 0, t119, 0, 0, -0.2e1 * t109 * t127, t109 * t221, 0.2e1 * t201, t119 * t101 + t109 ^ 2 + t91, t105, t89, t90, t103, t88, t119, 0.2e1 * t54 * t127 + 0.2e1 * t84, 0.2e1 * t204 (-t121 * t56 + t126 * t54) * t221, t56 ^ 2 + t227 + t91, t70, t45, t53, t69, t52, t103, 0.2e1 * t207, -0.2e1 * t104 * t27 + 0.2e1 * t36, 0.2e1 * t208, t26 ^ 2 + t27 ^ 2 + t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, -t77, 0, 0, 0, 0, 0, t60, t44, t66, -t60, t68, 0, t141 * t122, t141 * t127, 0, 0, t30, t9, t16, t29, t15, -t60 (pkin(5) * t37 - t79 * t80) * t122 (pkin(5) * t39 - t79 * t82) * t122, -t82 * t37 + t80 * t39 (t134 - t212) * t197, t12, t3, t8, t11, t7, t29, t80 * t17 + t40 * t37 + t217, t80 * t19 - t41 * t37 + t142, -t41 * t17 - t40 * t19 + t219, t160 * t80 + t5 * t40 + t6 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t211, -t213, 0, 0, t116, t100, 0, t119, 0, 0, t209 * t127, -t209 * t122, t167 + t201, -t109 * pkin(3) + pkin(5) * t94 + t86, t105, t89, t90, t103, t88, t119, t127 * t203 + t84 + t98, t202 + t204 (t203 * t126 + (-t56 - t82) * t121) * t122, t56 * t82 + t210 + t86, t70, t45, t53, t69, t52, t103, t205 + t207, t36 + t49 + (-t27 - t41) * t104, t206 + t208, t26 * t40 + t27 * t41 + t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t116, t100, 0, t119, 0, 0, 0.2e1 * pkin(3) * t127, -0.2e1 * pkin(3) * t122, 0.2e1 * t167, pkin(3) ^ 2 + t119 * t131 + t111, t105, t89, t90, t103, t88, t119, 0.2e1 * t80 * t127 + 0.2e1 * t98, 0.2e1 * t202 (-t121 * t82 + t126 * t80) * t221, t82 ^ 2 + t111 + t225, t70, t45, t53, t69, t52, t103, 0.2e1 * t205, -0.2e1 * t104 * t41 + 0.2e1 * t49, 0.2e1 * t206, t40 ^ 2 + t41 ^ 2 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127 * t79, 0, -t196, t77, t194, -t197, 0, 0, t187, -t121 * t37 + t39 * t126, t79 * t104, -t189, t79 * t106, 0, t43 * t169, -t43 * t175 (t115 + t118) * t197, 0, t19 * t171 (-t192 - t193) * t121, -t19 * t126 + t159, t17 * t181, t17 * t126 - t162, -t189, -pkin(6) * t159 - t5 * t126 + t152 * t43, pkin(6) * t162 + t6 * t126 + t150 * t43 ((t191 + t200) * pkin(6) + t140) * t121, t140 * t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, t127, 0, -t174, -t168, 0, 0, t97, t76, -t175, -t97, -t169, 0, -t108 * t106, t121 * t174, t135, 0, t57, t28, t47, t155, t46, -t97, -t26 * t126 + t181 * t54 - t144, t27 * t126 + t171 * t54 + t87 (t133 + t137) * t121, t137 * t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, t127, 0, -t122 * pkin(5), -t212, 0, 0, t97, t76, -t175, -t97, -t169, 0, -pkin(5) * t106, pkin(5) * t104, t134, 0, t57, t28, t47, t155, t46, -t97, -t40 * t126 + t181 * t80 - t144, t41 * t126 + t171 * t80 + t87 (t133 + t136) * t121, t136 * t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t115, 0.2e1 * t176, 0, t118, 0, 0, 0, 0, 0, 0, t117 * t115, -0.2e1 * t115 * t179, -0.2e1 * t148, t114 * t115, 0.2e1 * t151, t118, t148 * t229, -0.2e1 * pkin(6) * t151, t115 * t143, t115 * t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, -t37, t196, -t160, -t43 * t106, 0, 0, t192, t191 - t200, t199, -t193, t195, 0, -pkin(6) * t199 - t43 * t96, -pkin(6) * t195 + t43 * t95 (t192 - t193) * pkin(6) + t139, t139 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t104, -t127, -t54, -t56, 0, 0, t62, t33, t95, -t61, t96, 0, -t54 * t125 - t146, t54 * t120 - t145, t190 - t58 + (-t26 + t218) * t120 (-t26 * t120 + t190) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t104, -t127, -t80, -t82, 0, 0, t62, t33, t95, -t61, t96, 0, -t80 * t125 - t146, t80 * t120 - t145, t185 - t58 + (-t40 + t218) * t120 (-t40 * t120 + t185) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, 0, t126, 0, 0, 0, 0, 0, t149 (-t114 + t117) * t121, -t178, -t149, -t170, 0, pkin(6) * t178, pkin(6) * t170, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t114, 0.2e1 * t179, 0, t117, 0, 0, 0, 0, t143, t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t17, t37, t5, -t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, -t71, t104, t26, -t27, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, -t71, t104, t40, -t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, -t181, -t126, -pkin(6) * t171, pkin(6) * t181, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, 0, t125, 0, -t120 * pkin(6), -t125 * pkin(6), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
