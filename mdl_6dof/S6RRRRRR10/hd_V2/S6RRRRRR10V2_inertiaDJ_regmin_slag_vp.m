% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRR10V2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d4,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x38]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-11 14:56
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR10V2_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10V2_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10V2_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S6RRRRRR10V2_inertiaDJ_regmin_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-11 14:51:48
% EndTime: 2019-04-11 14:52:21
% DurationCPUTime: 7.87s
% Computational Cost: add. (5027->435), mult. (12790->760), div. (0->0), fcn. (12910->10), ass. (0->272)
t357 = 2 * pkin(6);
t178 = cos(qJ(4));
t164 = qJD(4) * t178;
t173 = sin(qJ(4));
t172 = sin(qJ(5));
t177 = cos(qJ(5));
t307 = qJD(5) * t177;
t260 = t172 * t307;
t236 = t173 * t260;
t166 = t172 ^ 2;
t354 = pkin(6) * t166;
t368 = t164 * t354 + t236 * t357;
t259 = t173 * t164;
t152 = 0.2e1 * t259;
t167 = t173 ^ 2;
t367 = t172 * t152 + t167 * t307;
t269 = t173 * t307;
t275 = t172 * t164;
t119 = t269 + t275;
t170 = t178 ^ 2;
t316 = t167 - t170;
t360 = qJD(4) * t316;
t174 = sin(qJ(3));
t175 = sin(qJ(2));
t179 = cos(qJ(3));
t180 = cos(qJ(2));
t129 = t174 * t175 - t179 * t180;
t130 = t174 * t180 + t179 * t175;
t161 = -pkin(2) * t180 - pkin(1);
t84 = t129 * pkin(3) - t130 * pkin(5) + t161;
t240 = t84 * t269;
t326 = t172 * t173;
t301 = t175 * qJD(2);
t297 = pkin(2) * t301;
t358 = qJD(2) + qJD(3);
t90 = t358 * t129;
t91 = t358 * t130;
t46 = pkin(3) * t91 + pkin(5) * t90 + t297;
t366 = t84 * t275 + t46 * t326 + t240;
t171 = sin(qJ(6));
t176 = cos(qJ(6));
t302 = qJD(6) * t177;
t263 = t176 * t302;
t169 = t177 ^ 2;
t317 = t166 - t169;
t359 = qJD(5) * t317;
t365 = t171 * t359 - t172 * t263;
t265 = t171 * t302;
t364 = t172 * t265 + t176 * t359;
t310 = qJD(5) * t172;
t363 = (t130 * t310 + t177 * t90) * t167;
t159 = pkin(2) * t174 + pkin(5);
t160 = -pkin(2) * t179 - pkin(3);
t320 = t177 * t178;
t105 = t159 * t320 + t172 * t160;
t286 = t84 * t164;
t212 = t173 * t46 + t286;
t184 = -t172 * t212 - t240;
t325 = t172 * t178;
t283 = t130 * t325;
t80 = -t177 * t129 + t283;
t298 = pkin(6) * qJD(6) * t80;
t362 = t184 - t298;
t306 = qJD(5) * t178;
t267 = t177 * t306;
t163 = qJD(4) * t173;
t276 = t172 * t163;
t361 = t267 - t276;
t168 = t176 ^ 2;
t318 = t171 ^ 2 - t168;
t250 = t318 * qJD(6);
t270 = t172 * t306;
t312 = qJD(4) * t177;
t118 = t173 * t312 + t270;
t102 = pkin(3) * t307 + pkin(5) * t118;
t303 = qJD(6) * t176;
t264 = t173 * t303;
t88 = t119 * t171 + t172 * t264;
t348 = pkin(2) * qJD(3);
t293 = t179 * t348;
t245 = t178 * t293;
t190 = t159 * t163 - t245;
t294 = t174 * t348;
t64 = -t172 * (-t159 * t306 + t294) - t177 * (qJD(5) * t160 - t190);
t356 = -0.4e1 * t172;
t205 = t130 * t163 + t178 * t90;
t26 = (-t130 * t306 + t91) * t172 + (qJD(5) * t129 - t205) * t177;
t355 = pkin(6) * t26;
t353 = pkin(6) * t177;
t352 = pkin(6) * t178;
t104 = t159 * t325 - t177 * t160;
t323 = t173 * t177;
t280 = t176 * t323;
t122 = -t171 * t178 + t280;
t65 = qJD(5) * t105 - t159 * t276 + t172 * t245 - t177 * t294;
t308 = qJD(5) * t176;
t257 = t172 * t308;
t321 = t176 * t178;
t71 = (-qJD(6) + t312) * t321 + (-t257 + (qJD(4) - t302) * t171) * t173;
t351 = t104 * t71 + t65 * t122;
t103 = -pkin(3) * t310 + pkin(5) * t361;
t131 = pkin(3) * t177 + pkin(5) * t325;
t350 = t103 * t122 + t131 * t71;
t256 = t159 - t353;
t224 = t171 * t256;
t97 = t105 - t352;
t70 = t173 * t224 + t176 * t97;
t132 = -pkin(3) * t172 + pkin(5) * t320;
t115 = t132 - t352;
t277 = pkin(5) - t353;
t229 = t277 * t173;
t83 = t176 * t115 + t171 * t229;
t349 = -t70 - t83;
t304 = qJD(6) * t173;
t340 = t173 * t90;
t68 = t130 * t164 - t340;
t282 = t130 * t320;
t81 = t129 * t172 + t282;
t11 = (t130 * t304 + t26) * t176 + (-qJD(6) * t81 + t68) * t171;
t347 = t11 * t171;
t346 = t11 * t176;
t345 = t130 * t90;
t344 = t171 * t65;
t343 = t171 * t71;
t342 = t172 * t26;
t27 = qJD(5) * t81 - t130 * t276 - t177 * t91 - t90 * t325;
t341 = t172 * t27;
t339 = t173 * t91;
t338 = t176 * t71;
t337 = t177 * t26;
t336 = t177 * t27;
t335 = t178 * t26;
t334 = t178 * t27;
t333 = t178 * t46;
t332 = t178 * t91;
t226 = t177 * t152;
t331 = pkin(5) * t226 - t102 * t178;
t330 = t103 * t171;
t329 = t130 * t167;
t328 = t130 * t173;
t327 = t167 * t172;
t324 = t173 * t176;
t322 = t173 * t178;
t319 = t160 * t164 + t173 * t294;
t314 = qJD(4) * t171;
t313 = qJD(4) * t176;
t311 = qJD(5) * t171;
t309 = qJD(5) * t173;
t305 = qJD(6) * t171;
t300 = t180 * qJD(2);
t299 = -0.2e1 * pkin(1) * qJD(2);
t296 = pkin(3) * t163;
t295 = pkin(3) * t164;
t292 = pkin(6) * t163;
t291 = pkin(5) * t164;
t288 = t84 * t326;
t246 = t177 * t293;
t287 = t159 * t226 + t167 * t246 - t64 * t178;
t285 = t80 * t311;
t284 = t84 * t304;
t281 = t171 * t323;
t279 = t171 * t368 + t264 * t354;
t278 = pkin(5) * t367 - t131 * t163;
t274 = t177 * t164;
t273 = t131 * t311;
t272 = t167 * t310;
t268 = t176 * t307;
t266 = t171 * t304;
t262 = t171 * t310;
t261 = t171 * t303;
t258 = t176 * t164;
t255 = -0.2e1 * t283;
t254 = -0.4e1 * t130 * t322;
t253 = 0.2e1 * t280;
t247 = t173 * t293;
t243 = pkin(6) * t266;
t242 = -t104 * t163 + t159 * t367 + t293 * t327;
t125 = t130 ^ 2;
t239 = t125 * t259;
t238 = t167 * t260;
t237 = t171 * t268;
t232 = t172 * t274;
t121 = t281 + t321;
t223 = t176 * t256;
t20 = -t97 * t303 - t171 * (t160 * t307 + t172 * t294) + (-t171 * (-t159 * t310 + t246) + qJD(4) * t223) * t178 + (-qJD(6) * t224 + t176 * (pkin(6) * t310 + t293) - (-t159 * t177 + pkin(6)) * t314) * t173;
t215 = t173 * t223;
t69 = -t171 * t97 + t215;
t197 = t171 * t164 + t264;
t72 = t177 * t197 - t178 * t305 + (-t262 - t313) * t173;
t231 = t104 * t72 + t119 * t69 + t65 * t121 + t20 * t326;
t36 = -t115 * t303 + t273 + t277 * t258 + (-t277 * t305 + pkin(6) * t257 - (-pkin(5) * t177 + pkin(6)) * t314) * t173;
t216 = t176 * t229;
t82 = -t171 * t115 + t216;
t230 = t103 * t121 + t119 * t82 + t131 * t72 + t36 * t326;
t228 = t81 * pkin(6) + t178 * t84;
t225 = pkin(6) * t130 + t177 * t84;
t53 = -t130 * t324 + t171 * t81;
t54 = t171 * t328 + t176 * t81;
t221 = -t171 * t54 - t176 * t53;
t220 = -t172 * t81 - t177 * t80;
t219 = -t121 * t176 - t122 * t171;
t218 = t129 * t159 - t130 * t160;
t217 = t160 * t163 - t178 * t294;
t207 = t176 * t228;
t57 = t225 * t173;
t23 = -t171 * t57 - t207;
t210 = -t177 * t46 + t84 * t310;
t188 = -pkin(6) * t90 - t210;
t199 = t225 * t164;
t24 = -t171 * t228 + t176 * t57;
t6 = t176 * (-t333 - t355) - t171 * t199 + (-t171 * t188 + t84 * t313) * t173 - t24 * qJD(6);
t214 = t119 * t23 + t121 * t366 + t72 * t288 + t6 * t326;
t213 = t80 * t164 + t173 * t27;
t211 = t84 * t163 - t333;
t209 = t171 * t27 + t80 * t303;
t208 = t176 * t27 - t80 * t305;
t67 = t129 * t164 + t339;
t206 = t129 * t163 - t332;
t203 = t104 * t305 - t176 * t65;
t202 = -t103 * t176 + t131 * t305;
t201 = -pkin(6) * t27 + t172 * t284;
t117 = -t172 * t309 + t274;
t198 = t258 - t266;
t196 = -t172 * t305 + t268;
t195 = t257 + t265;
t194 = t171 * t307 + t172 * t303;
t193 = t262 - t263;
t192 = t166 * t243 - t176 * t368;
t191 = (-t130 * t307 + t172 * t90) * t167;
t189 = -t159 * t164 - t247;
t187 = t117 * pkin(6);
t186 = t119 * pkin(6);
t183 = -t159 * t91 - t160 * t90 + (-t129 * t179 + t130 * t174) * t348;
t182 = t88 * pkin(6);
t5 = t57 * t305 - t171 * (t211 - t355) - t176 * (t173 * t188 + t199) + qJD(6) * t207;
t181 = t71 * t288 + (-t24 * t164 + t173 * t5) * t172 - t24 * t269 + t366 * t122;
t153 = -0.2e1 * t259;
t140 = t172 * t243;
t128 = -0.2e1 * t360;
t101 = 0.2e1 * t169 * t259 - 0.2e1 * t238;
t100 = 0.2e1 * t166 * t259 + 0.2e1 * t238;
t99 = t309 * t317 - t232;
t98 = -t317 * t164 - 0.4e1 * t236;
t93 = -0.2e1 * t172 * t360 + 0.2e1 * t173 * t267;
t92 = 0.2e1 * t173 * t270 + 0.2e1 * t177 * t360;
t89 = 0.2e1 * t167 * t359 - 0.4e1 * t173 * t232;
t87 = t172 * t198 + t173 * t268;
t51 = 0.2e1 * t122 * t71;
t47 = t122 * t303 + t343;
t45 = t130 * t360 + t90 * t322;
t39 = qJD(4) * t254 + t316 * t90;
t35 = t115 * t305 - qJD(6) * t216 - t176 * (-t102 + t292) - t171 * (-t187 + t291);
t34 = t122 * t196 + t172 * t338;
t33 = -0.2e1 * t119 * t121 - 0.2e1 * t72 * t326;
t32 = 0.2e1 * t119 * t122 + 0.2e1 * t71 * t326;
t30 = t177 * t72 - t197 * t166 + (-t121 - 0.2e1 * t281) * t310;
t29 = -t177 * t71 + t198 * t166 + (t122 + t253) * t310;
t28 = -0.2e1 * t121 * t71 - 0.2e1 * t122 * t72;
t25 = qJD(6) * t219 - t171 * t72 + t338;
t19 = t97 * t305 - qJD(6) * t215 - t176 * (t292 - t64) - t171 * (-t187 - t189);
t17 = t219 * t307 + (-t343 - t176 * t72 + (t121 * t171 - t122 * t176) * qJD(6)) * t172;
t15 = t172 * t213 + t269 * t80;
t14 = t81 * t274 + (-t81 * t310 + t337) * t173;
t12 = qJD(6) * t54 - t130 * t258 + t171 * t26 + t90 * t324;
t10 = t334 + t191 + (-t80 + t255) * t163;
t9 = -t335 - t363 + (t81 + 0.2e1 * t282) * t163;
t8 = t11 * t122 + t54 * t71;
t7 = t220 * t164 + (-t342 - t336 + (t172 * t80 - t177 * t81) * qJD(5)) * t173;
t3 = -t53 * t269 - t121 * t27 - t72 * t80 + (-t12 * t173 - t53 * t164) * t172;
t2 = t54 * t269 + t122 * t27 + t71 * t80 + (t11 * t173 + t54 * t164) * t172;
t1 = -t11 * t121 - t12 * t122 - t53 * t71 - t54 * t72;
t4 = [0, 0, 0, 0.2e1 * t175 * t300, 0.2e1 * (-t175 ^ 2 + t180 ^ 2) * qJD(2), 0, 0, 0, t175 * t299, t180 * t299, -0.2e1 * t345, 0.2e1 * t129 * t90 - 0.2e1 * t130 * t91, 0, 0, 0, 0.2e1 * t129 * t297 + 0.2e1 * t161 * t91, 0.2e1 * t130 * t297 - 0.2e1 * t161 * t90, -0.2e1 * t170 * t345 - 0.2e1 * t239, 0.2e1 * t125 * t360 - t254 * t90, -0.2e1 * t129 * t205 + 0.2e1 * t130 * t332, -0.2e1 * t129 * t68 - 0.2e1 * t91 * t328, 0.2e1 * t129 * t91, -0.2e1 * t129 * t211 + 0.2e1 * t84 * t332, -0.2e1 * t129 * t212 - 0.2e1 * t84 * t339, 0.2e1 * t81 * t26, -0.2e1 * t26 * t80 - 0.2e1 * t27 * t81, -0.2e1 * t81 * t340 + 0.2e1 * (t81 * t164 + t173 * t26) * t130, -0.2e1 * t130 * t213 + 0.2e1 * t80 * t340, -0.2e1 * t329 * t90 + 0.2e1 * t239, 0.2e1 * (-t130 * t327 - t178 * t80) * t46 + 0.2e1 * (-t334 + t191 + (t80 + t255) * t163) * t84, 0.2e1 * (-t177 * t329 - t178 * t81) * t46 + 0.2e1 * (-t335 + t363 + (t81 - 0.2e1 * t282) * t163) * t84, 0.2e1 * t54 * t11, -0.2e1 * t11 * t53 - 0.2e1 * t12 * t54, 0.2e1 * t11 * t80 + 0.2e1 * t27 * t54, -0.2e1 * t12 * t80 - 0.2e1 * t27 * t53, 0.2e1 * t80 * t27, 0.2e1 * t53 * t240 + 0.2e1 * t23 * t27 + 0.2e1 * t6 * t80 + 0.2e1 * (t53 * t286 + (t12 * t84 + t46 * t53) * t173) * t172, 0.2e1 * t54 * t240 - 0.2e1 * t24 * t27 + 0.2e1 * t5 * t80 + 0.2e1 * (t54 * t286 + (t11 * t84 + t46 * t54) * t173) * t172; 0, 0, 0, 0, 0, t300, -t301, 0, 0, 0, 0, 0, -t90, -t91, 0, 0, 0, -t45, t39, t67, -t206, 0, -t218 * t164 + t173 * t183, t218 * t163 + t178 * t183, t14, t7, t9, t10, t45 (-t104 * t130 + t159 * t80) * t164 + (t104 * t90 - t130 * t65 + t159 * t27 + t293 * t80) * t173 (-t105 * t130 + t159 * t81) * t164 + (t105 * t90 + t130 * t64 + t159 * t26 + t293 * t81) * t173, t8, t1, t2, t3, t15, t104 * t12 + t20 * t80 + t27 * t69 + t53 * t65 + t214, t104 * t11 + t19 * t80 - t27 * t70 + t54 * t65 + t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t294, -0.2e1 * t293, t152, t128, 0, 0, 0, 0.2e1 * t217, 0.2e1 * t319, t101, t89, t92, t93, t153, 0.2e1 * t178 * t65 + 0.2e1 * t242, -0.2e1 * t105 * t163 - 0.2e1 * t159 * t272 + 0.2e1 * t287, t51, t28, t32, t33, t100, 0.2e1 * t231, -0.2e1 * t70 * t269 + 0.2e1 * (-t164 * t70 + t173 * t19) * t172 + 0.2e1 * t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, -t91, 0, 0, 0, -t45, t39, t67, -t206, 0, -pkin(3) * t68 - pkin(5) * t67, pkin(3) * t205 + pkin(5) * t206, t14, t7, t9, t10, t45 (pkin(5) * t80 - t130 * t131) * t164 + (pkin(5) * t27 - t103 * t130 + t131 * t90) * t173 (pkin(5) * t81 - t130 * t132) * t164 + (pkin(5) * t26 + t102 * t130 + t132 * t90) * t173, t8, t1, t2, t3, t15, t103 * t53 + t12 * t131 + t27 * t82 + t36 * t80 + t214, t103 * t54 + t11 * t131 - t27 * t83 + t35 * t80 + t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t294, -t293, t152, t128, 0, 0, 0, t217 - t296, -t295 + t319, t101, t89, t92, t93, t153 (t103 + t65) * t178 + t242 + t278 (-pkin(5) - t159) * t272 + (-t105 - t132) * t163 + t287 + t331, t51, t28, t32, t33, t100, t230 + t231, t349 * t269 + ((t19 + t35) * t173 + t349 * t164) * t172 + t350 + t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, t128, 0, 0, 0, -0.2e1 * t296, -0.2e1 * t295, t101, t89, t92, t93, t153, 0.2e1 * t103 * t178 + 0.2e1 * t278, -0.2e1 * pkin(5) * t272 - 0.2e1 * t132 * t163 + 0.2e1 * t331, t51, t28, t32, t33, t100, 0.2e1 * t230, -0.2e1 * t83 * t269 + 0.2e1 * (-t164 * t83 + t173 * t35) * t172 + 0.2e1 * t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, -t68, t91, -t211, -t212, t81 * t307 + t342, qJD(5) * t220 + t337 - t341, t119 * t130 - t90 * t326, t117 * t130 - t90 * t323, 0, -t177 * t211 - t270 * t84, t172 * t211 - t267 * t84, t54 * t268 + (-t305 * t54 + t346) * t172, t221 * t307 + (-t347 - t12 * t176 + (t171 * t53 - t176 * t54) * qJD(6)) * t172 (t308 * t80 - t11) * t177 + (qJD(5) * t54 + t208) * t172 (t12 - t285) * t177 + (-qJD(5) * t53 - t209) * t172, t310 * t80 - t336, t23 * t310 - t177 * t6 + (t166 * t284 + (-t307 * t80 - t341) * pkin(6)) * t176 + ((0.2e1 * t240 + t298) * t172 + t212 * t166) * t171 (pkin(6) * t285 - t5) * t177 + (t84 * t258 + (t176 * t46 - t305 * t84) * t173) * t166 + ((t253 * t84 - t24) * qJD(5) + t209 * pkin(6)) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t163, 0, t189, t190, -t99, t98, -t361, t118, 0, -t117 * t159 - t173 * t246, t119 * t159 + t172 * t247, t34, t17, t29, t30, t99 (t104 * t311 - t20) * t177 + (qJD(5) * t69 + t104 * t303 + t344) * t172 + t192 (t104 * t308 - t19) * t177 + (-qJD(5) * t70 - t203) * t172 + t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t163, 0, -t291, pkin(5) * t163, -t99, t98, -t361, t118, 0, -t117 * pkin(5), t119 * pkin(5), t34, t17, t29, t30, t99 (-t36 + t273) * t177 + (qJD(5) * t82 + t131 * t303 + t330) * t172 + t192 (t131 * t308 - t35) * t177 + (-qJD(5) * t83 - t202) * t172 + t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t260, -0.2e1 * t359, 0, 0, 0, 0, 0, -0.2e1 * t166 * t261 + 0.2e1 * t168 * t260, 0.2e1 * t166 * t250 + t237 * t356, 0.2e1 * t364, -0.2e1 * t365, -0.2e1 * t260, -t364 * t357, t365 * t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, -t27, t68, t184, t173 * t210 - t274 * t84, t303 * t54 + t347, qJD(6) * t221 - t12 * t171 + t346, t209, t208, 0, t201 * t171 + t176 * t362, -t171 * t362 + t201 * t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, -t119, t163, -t65, t64, t47, t25, t88, t87, 0, -t182 + t203, t344 + t140 + (qJD(6) * t104 - t186) * t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, -t119, t163, -t103, t102, t47, t25, t88, t87, 0, -t182 + t202, t330 + t140 + (qJD(6) * t131 - t186) * t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, -t310, 0, 0, 0, -t172 * t250 + t237, t261 * t356 - t307 * t318, t193, t195, 0, -t193 * pkin(6), -t195 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t261, -0.2e1 * t250, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, -t12, t27, t6, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, -t72, t119, t20, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, -t72, t119, t36, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196, -t194, t310, -t196 * pkin(6), t194 * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, -t305, 0, -pkin(6) * t303, pkin(6) * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
