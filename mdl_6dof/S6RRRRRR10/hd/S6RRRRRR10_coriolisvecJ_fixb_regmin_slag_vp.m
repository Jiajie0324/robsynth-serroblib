% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x38]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 06:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRR10_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRRRRR10_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 06:16:50
% EndTime: 2019-03-10 06:17:55
% DurationCPUTime: 25.58s
% Computational Cost: add. (55321->852), mult. (169440->1236), div. (0->0), fcn. (145876->16), ass. (0->374)
t411 = cos(pkin(6));
t421 = cos(qJ(2));
t615 = pkin(1) * t421;
t536 = t411 * t615;
t391 = qJD(1) * t536;
t416 = sin(qJ(2));
t408 = sin(pkin(6));
t410 = cos(pkin(7));
t523 = pkin(11) * t410 + pkin(10);
t489 = t408 * t523;
t458 = t416 * t489;
t312 = -qJD(1) * t458 + t391;
t616 = pkin(1) * t416;
t537 = t411 * t616;
t425 = -t421 * t489 - t537;
t313 = t425 * qJD(1);
t407 = sin(pkin(7));
t614 = pkin(11) * t407;
t437 = t408 * (pkin(2) * t416 - t421 * t614);
t349 = qJD(1) * t437;
t420 = cos(qJ(3));
t548 = qJD(3) * t420;
t517 = t410 * t548;
t415 = sin(qJ(3));
t579 = t410 * t415;
t585 = t407 * t415;
t640 = -pkin(2) * t517 + t420 * t312 + t313 * t579 + t349 * t585;
t572 = t416 * t420;
t573 = t415 * t421;
t451 = t410 * t572 + t573;
t553 = qJD(1) * t408;
t337 = t451 * t553;
t409 = cos(pkin(8));
t406 = sin(pkin(8));
t522 = t416 * t553;
t500 = t407 * t522;
t470 = t406 * t500;
t433 = -t337 * t409 + t470;
t612 = pkin(12) * t409;
t490 = t407 * (-pkin(11) - t612);
t457 = t415 * t490;
t639 = -pkin(12) * t433 + qJD(3) * t457 - t640;
t568 = t420 * t421;
t575 = t415 * t416;
t449 = -t410 * t575 + t568;
t338 = t449 * t553;
t578 = t410 * t420;
t584 = t407 * t420;
t482 = -t312 * t415 + t313 * t578 + t349 * t584;
t173 = pkin(3) * t500 - t338 * t612 + t482;
t398 = pkin(2) * t579;
t315 = (t420 * t490 - t398) * qJD(3);
t638 = t173 - t315;
t246 = -t313 * t407 + t410 * t349;
t613 = pkin(12) * t406;
t202 = pkin(3) * t337 - t338 * t613 + t246;
t348 = (pkin(3) * t415 - t420 * t613) * t407 * qJD(3);
t637 = t202 - t348;
t414 = sin(qJ(4));
t419 = cos(qJ(4));
t546 = qJD(4) * t419;
t515 = t406 * t546;
t570 = t419 * t420;
t577 = t414 * t415;
t620 = t409 * t570 - t577;
t562 = -t338 * t419 - t414 * t433 + t410 * t515 + (t620 * qJD(4) + (-t409 * t577 + t570) * qJD(3)) * t407;
t574 = t415 * t419;
t576 = t414 * t420;
t452 = t409 * t576 + t574;
t547 = qJD(4) * t414;
t516 = t406 * t547;
t580 = t409 * t419;
t561 = -t337 * t580 - t338 * t414 + t419 * t470 + t410 * t516 + (t452 * qJD(4) + (t409 * t574 + t576) * qJD(3)) * t407;
t260 = -t337 * t406 - t409 * t500;
t549 = qJD(3) * t415;
t519 = t407 * t549;
t455 = t406 * t519 + t260;
t496 = t415 * t522;
t521 = t421 * t553;
t499 = t410 * t521;
t552 = qJD(1) * t411;
t393 = qJD(2) + t552;
t591 = t393 * t407;
t267 = -t496 + (t499 + t591) * t420;
t450 = t410 * t573 + t572;
t435 = t450 * t408;
t268 = qJD(1) * t435 + t393 * t585;
t581 = t409 * t414;
t217 = t267 * t419 - t268 * t581;
t636 = -t217 + t515;
t560 = t406 * t638 - t409 * t637;
t583 = t408 * t421;
t263 = pkin(11) * t591 + (t523 * t583 + t537) * qJD(1);
t266 = pkin(2) * t393 + t312;
t345 = (-pkin(2) * t421 - t416 * t614 - pkin(1)) * t408;
t331 = qJD(1) * t345;
t189 = -t415 * t263 + t266 * t578 + t331 * t584;
t152 = -t268 * t612 + t189;
t190 = t415 * (t266 * t410 + t331 * t407) + t420 * t263;
t582 = t409 * t267;
t153 = -pkin(12) * t582 - t190;
t589 = t406 * t267;
t218 = pkin(3) * t268 - pkin(12) * t589;
t588 = t406 * t414;
t394 = pkin(12) * t588;
t624 = pkin(3) * t580 - t394;
t635 = t624 * qJD(4) - t419 * t152 - t153 * t581 - t218 * t588;
t555 = pkin(11) * t584 + t398;
t291 = (t406 * t410 + t409 * t584) * pkin(12) + t555;
t399 = pkin(2) * t578;
t310 = pkin(3) * t410 + t399 + t457;
t344 = (-pkin(3) * t420 - t415 * t613 - pkin(2)) * t407;
t513 = t409 * t546;
t634 = -t291 * t547 + t310 * t513 + t344 * t515 + t419 * t639 - t638 * t581 - t637 * t588;
t633 = pkin(13) * t455 + t634;
t632 = -t561 * pkin(4) + pkin(13) * t562 - t560;
t110 = -t153 * t406 + t409 * t218;
t571 = t419 * t268;
t216 = t267 * t414 + t409 * t571;
t631 = pkin(4) * t216 - pkin(13) * t217 + t110 - (pkin(4) * t414 - pkin(13) * t419) * t406 * qJD(4);
t593 = t268 * t406;
t630 = -pkin(13) * t593 + t635;
t514 = t409 * t547;
t629 = t291 * t546 + t310 * t514 + t344 * t516 + t414 * t639;
t301 = t407 * t452 + t410 * t588;
t361 = t406 * t584 - t409 * t410;
t413 = sin(qJ(5));
t418 = cos(qJ(5));
t249 = t301 * t413 + t418 * t361;
t567 = -qJD(5) * t249 + t413 * t455 + t418 * t562;
t250 = t301 * t418 - t361 * t413;
t566 = qJD(5) * t250 + t413 * t562 - t418 * t455;
t628 = t216 - t516;
t365 = -t418 * t409 + t413 * t588;
t559 = -qJD(5) * t365 - t413 * t593 + t418 * t636;
t587 = t406 * t418;
t366 = t409 * t413 + t414 * t587;
t558 = qJD(5) * t366 + t268 * t587 + t413 * t636;
t586 = t406 * t419;
t556 = pkin(3) * t581 + pkin(12) * t586;
t627 = t556 * qJD(4) - t414 * t152;
t550 = qJD(2) * t408;
t520 = t416 * t550;
t494 = qJD(1) * t520;
t459 = t407 * t494;
t538 = qJD(1) * qJD(2);
t512 = t421 * t538;
t625 = qJD(3) * t499 + t408 * t512;
t471 = t393 * t519 + t415 * t625 + t494 * t578 + t522 * t548;
t626 = -t406 * t459 + t471 * t409;
t382 = t407 * t521;
t506 = t393 * t410 - t382;
t478 = qJD(3) + t506;
t447 = t406 * t478;
t426 = t447 + t582;
t201 = t414 * t426 + t571;
t518 = t407 * t548;
t234 = t393 * t518 + (-qJD(2) * t410 - qJD(3)) * t496 + t625 * t420;
t101 = qJD(4) * t201 + t414 * t234 + t419 * t626;
t307 = t419 * t447;
t199 = -t267 * t580 + t268 * t414 - t307;
t197 = qJD(5) + t199;
t233 = -t409 * t478 - qJD(4) + t589;
t139 = t201 * t413 + t418 * t233;
t138 = qJD(6) + t139;
t603 = -t315 * t580 + (-pkin(4) * t519 - t348 * t419) * t406 - pkin(4) * t260 - (-t173 * t409 - t202 * t406) * t419 + t629;
t601 = pkin(4) * t593 - (-t153 * t409 - t218 * t406) * t419 + t627;
t238 = -t310 * t406 + t409 * t344;
t298 = -t407 * t620 - t410 * t586;
t185 = pkin(4) * t298 - pkin(13) * t301 + t238;
t526 = t419 * t291 + t310 * t581 + t344 * t588;
t194 = -pkin(13) * t361 + t526;
t565 = t413 * t185 + t418 * t194;
t354 = pkin(13) * t409 + t556;
t355 = (-pkin(4) * t419 - pkin(13) * t414 - pkin(3)) * t406;
t557 = t418 * t354 + t413 * t355;
t542 = qJD(5) * t418;
t544 = qJD(5) * t413;
t623 = t354 * t544 - t355 * t542 + t413 * t631 - t418 * t630;
t622 = -t185 * t542 + t194 * t544 + t632 * t413 - t418 * t633;
t621 = t410 * t568 - t575;
t445 = qJD(3) * t478;
t141 = t201 * t418 - t233 * t413;
t317 = t425 * qJD(2);
t289 = qJD(1) * t317;
t350 = qJD(2) * t437;
t340 = qJD(1) * t350;
t235 = -t407 * t289 + t410 * t340;
t129 = pkin(3) * t471 - t234 * t613 + t235;
t142 = pkin(12) * t426 + t190;
t143 = pkin(3) * t478 + t152;
t231 = -t266 * t407 + t410 * t331;
t168 = -pkin(3) * t267 - pkin(12) * t593 + t231;
t387 = qJD(2) * t391;
t440 = qJD(2) * t458;
t288 = -qJD(1) * t440 + t387;
t430 = t263 * t549 - t266 * t517 - t420 * t288 - t289 * t579 - t331 * t518 - t340 * t585;
t87 = -pkin(12) * t626 - t430;
t484 = -t415 * t288 + t289 * t578 + t340 * t584;
t119 = -qJD(3) * t190 + t484;
t88 = pkin(3) * t459 - t234 * t612 + t119;
t17 = t129 * t588 - t142 * t547 + t143 * t513 + t168 * t515 + t419 * t87 + t88 * t581;
t214 = -t406 * t471 - t409 * t459;
t15 = -pkin(13) * t214 + t17;
t59 = t419 * t142 + t143 * t581 + t168 * t588;
t51 = -pkin(13) * t233 + t59;
t82 = -t143 * t406 + t409 * t168;
t53 = pkin(4) * t199 - pkin(13) * t201 + t82;
t25 = t413 * t53 + t418 * t51;
t100 = qJD(4) * t307 + t419 * t234 + t267 * t513 - t268 * t547 - t414 * t626;
t60 = t409 * t129 - t406 * t88;
t30 = pkin(4) * t101 - pkin(13) * t100 + t60;
t6 = -qJD(5) * t25 - t15 * t413 + t418 * t30;
t4 = -pkin(5) * t101 - t6;
t618 = t138 * (pkin(5) * t141 + pkin(14) * t138) + t4;
t412 = sin(qJ(6));
t417 = cos(qJ(6));
t55 = t418 * t100 - t201 * t544 - t413 * t214 - t233 * t542;
t91 = t141 * t417 + t197 * t412;
t27 = qJD(6) * t91 - t417 * t101 + t412 * t55;
t58 = -t414 * t142 + (t143 * t409 + t168 * t406) * t419;
t56 = qJD(5) * t141 + t100 * t413 + t418 * t214;
t241 = t411 * t519 + (qJD(2) * t451 + qJD(3) * t450) * t408;
t498 = t407 * t520;
t222 = -t241 * t406 - t409 * t498;
t442 = -pkin(10) * t583 - t537;
t292 = (t407 * t411 + t410 * t583) * pkin(11) - t442;
t311 = (pkin(2) + t615) * t411 - t458;
t392 = qJD(2) * t536;
t316 = t392 - t440;
t429 = -t292 * t549 + t311 * t517 + t420 * t316 + t317 * t579 + t345 * t518 + t350 * t585;
t469 = t406 * t498;
t432 = -t241 * t409 + t469;
t105 = pkin(12) * t432 + t429;
t242 = t411 * t518 + (t449 * qJD(2) + qJD(3) * t621) * t408;
t280 = t420 * t292;
t423 = -t316 * t415 + t317 * t578 + t350 * t584 + (-t280 + (-t311 * t410 - t345 * t407) * t415) * qJD(3);
t106 = pkin(3) * t498 - t242 * t612 + t423;
t247 = -t317 * t407 + t410 * t350;
t147 = pkin(3) * t241 - t242 * t613 + t247;
t299 = -t408 * t621 - t411 * t584;
t362 = t407 * t583 - t410 * t411;
t463 = -t299 * t409 - t362 * t406;
t525 = t311 * t579 + t345 * t585 + t280;
t164 = pkin(12) * t463 + t525;
t300 = t411 * t585 + t435;
t483 = -t292 * t415 + t311 * t578 + t345 * t584;
t167 = -pkin(3) * t362 - t300 * t612 + t483;
t239 = -t311 * t407 + t410 * t345;
t184 = pkin(3) * t299 - t300 * t613 + t239;
t428 = t419 * t105 + t106 * t581 + t147 * t588 - t164 * t547 + t167 * t513 + t184 * t515;
t22 = -pkin(13) * t222 + t428;
t207 = t300 * t419 + t414 * t463;
t112 = qJD(4) * t207 + t241 * t580 + t242 * t414 - t419 * t469;
t592 = t300 * t414;
t113 = t242 * t419 + t432 * t414 + (t419 * t463 - t592) * qJD(4);
t73 = -t106 * t406 + t409 * t147;
t39 = pkin(4) * t112 - pkin(13) * t113 + t73;
t248 = -t299 * t406 + t362 * t409;
t528 = t419 * t164 + t167 * t581 + t184 * t588;
t63 = -pkin(13) * t248 + t528;
t206 = t299 * t580 + t362 * t586 + t592;
t94 = -t167 * t406 + t409 * t184;
t68 = pkin(4) * t206 - pkin(13) * t207 + t94;
t473 = t413 * t68 + t418 * t63;
t617 = -qJD(5) * t473 - t22 * t413 + t39 * t418;
t456 = -t129 * t586 + t142 * t546 + t143 * t514 + t168 * t516 + t414 * t87 - t88 * t580;
t16 = pkin(4) * t214 + t456;
t10 = pkin(5) * t56 - pkin(14) * t55 + t16;
t5 = t418 * t15 + t413 * t30 - t51 * t544 + t53 * t542;
t3 = pkin(14) * t101 + t5;
t20 = pkin(14) * t197 + t25;
t50 = pkin(4) * t233 - t58;
t33 = pkin(5) * t139 - pkin(14) * t141 + t50;
t477 = t20 * t412 - t33 * t417;
t1 = -qJD(6) * t477 + t10 * t412 + t3 * t417;
t611 = -t561 * pkin(5) + t565 * qJD(5) + t633 * t413 + t632 * t418;
t89 = t141 * t412 - t417 * t197;
t608 = t138 * t89;
t607 = t138 * t91;
t540 = qJD(6) * t417;
t541 = qJD(6) * t412;
t26 = t412 * t101 - t141 * t541 + t197 * t540 + t417 * t55;
t606 = t26 * t412;
t605 = t412 * t56;
t604 = t417 * t56;
t602 = pkin(5) * t628 + qJD(5) * t557 + t630 * t413 + t631 * t418;
t600 = -t59 + t197 * (pkin(5) * t413 - pkin(14) * t418);
t117 = pkin(4) * t201 + pkin(13) * t199;
t599 = t413 * t117 + t418 * t58;
t208 = t250 * t412 - t417 * t298;
t598 = -qJD(6) * t208 + t412 * t561 + t417 * t567;
t209 = t250 * t417 + t298 * t412;
t597 = qJD(6) * t209 + t412 * t567 - t417 * t561;
t596 = t139 * t197;
t595 = t141 * t197;
t594 = t199 * t418;
t403 = t408 ^ 2;
t422 = qJD(1) ^ 2;
t590 = t403 * t422;
t320 = t366 * t412 + t417 * t586;
t564 = -qJD(6) * t320 - t412 * t628 + t417 * t559;
t532 = t412 * t586;
t563 = -qJD(6) * t532 + t366 * t540 + t412 * t559 + t417 * t628;
t554 = t416 ^ 2 - t421 ^ 2;
t551 = qJD(2) * t407 ^ 2;
t545 = qJD(5) * t412;
t543 = qJD(5) * t417;
t539 = qJD(2) - t393;
t534 = t403 * t616;
t533 = t421 * t590;
t386 = -pkin(5) * t418 - pkin(14) * t413 - pkin(4);
t508 = pkin(14) * t201 - qJD(6) * t386 + t599;
t505 = t138 * t417;
t504 = t197 * t418;
t503 = t393 + t552;
t502 = -t414 * t105 - t164 * t546 - t167 * t514 - t184 * t516;
t495 = t403 * t512;
t99 = pkin(14) * t298 + t565;
t492 = -pkin(5) * t566 + pkin(14) * t567 + qJD(6) * t99 - t603;
t278 = t414 * t291;
t462 = t310 * t409 + t344 * t406;
t193 = pkin(4) * t361 - t419 * t462 + t278;
t120 = pkin(5) * t249 - pkin(14) * t250 + t193;
t491 = -pkin(14) * t561 - qJD(6) * t120 + t622;
t353 = t394 + (-pkin(3) * t419 - pkin(4)) * t409;
t251 = pkin(5) * t365 - pkin(14) * t366 + t353;
t487 = pkin(14) * t628 - qJD(6) * t251 + t623;
t253 = -pkin(14) * t586 + t557;
t486 = -pkin(5) * t558 + pkin(14) * t559 + qJD(6) * t253 - t601;
t115 = t201 * t412 - t417 * t594;
t480 = t417 * t542 - t115;
t12 = t20 * t417 + t33 * t412;
t32 = pkin(14) * t206 + t473;
t165 = t207 * t413 + t248 * t418;
t166 = t207 * t418 - t248 * t413;
t160 = t414 * t164;
t466 = t167 * t409 + t184 * t406;
t62 = pkin(4) * t248 - t419 * t466 + t160;
t44 = pkin(5) * t165 - pkin(14) * t166 + t62;
t475 = t32 * t417 + t412 * t44;
t474 = -t32 * t412 + t417 * t44;
t24 = -t413 * t51 + t418 * t53;
t472 = -t413 * t63 + t418 * t68;
t468 = t106 * t409 + t147 * t406;
t108 = t166 * t417 + t206 * t412;
t107 = t166 * t412 - t206 * t417;
t465 = t185 * t418 - t194 * t413;
t461 = -t354 * t413 + t355 * t418;
t454 = -t138 * t540 - t605;
t453 = -t138 * t541 + t604;
t448 = t418 * t22 + t413 * t39 + t68 * t542 - t544 * t63;
t444 = -pkin(13) * t101 + t197 * t50;
t441 = -pkin(10) * t494 + t387;
t436 = t407 * t445;
t434 = t442 * t393;
t19 = -pkin(5) * t197 - t24;
t431 = -pkin(14) * t56 + (t19 + t24) * t138;
t2 = -qJD(6) * t12 + t417 * t10 - t3 * t412;
t23 = pkin(4) * t222 - t419 * t468 - t502;
t321 = t366 * t417 - t532;
t252 = pkin(5) * t586 - t461;
t114 = -t417 * t201 - t412 * t594;
t98 = -pkin(5) * t298 - t465;
t67 = -qJD(5) * t165 + t113 * t418 - t222 * t413;
t66 = qJD(5) * t166 + t113 * t413 + t222 * t418;
t42 = -pkin(5) * t201 - t117 * t418 + t413 * t58;
t35 = -qJD(6) * t107 + t112 * t412 + t417 * t67;
t34 = qJD(6) * t108 - t112 * t417 + t412 * t67;
t31 = -pkin(5) * t206 - t472;
t13 = pkin(5) * t66 - pkin(14) * t67 + t23;
t8 = -pkin(5) * t112 - t617;
t7 = pkin(14) * t112 + t448;
t9 = [0, 0, 0, 0.2e1 * t416 * t495, -0.2e1 * t554 * t403 * t538, t503 * t421 * t550, -t503 * t520, 0 (t434 + (t411 * t442 - 0.2e1 * t534) * qJD(1)) * qJD(2) -(-pkin(10) * t520 + t392) * t393 - t441 * t411 - 0.2e1 * pkin(1) * t495, t234 * t300 + t242 * t268, -t299 * t234 - t241 * t268 + t267 * t242 - t300 * t471, -t362 * t234 + t478 * t242 + (qJD(1) * t300 + t268) * t498, t362 * t471 - t478 * t241 + (-qJD(1) * t299 + t267) * t498 (-qJD(1) * t362 + t478) * t498, t423 * t478 - t119 * t362 - t247 * t267 + t239 * t471 + t235 * t299 + t231 * t241 + (qJD(1) * t483 + t189) * t498, -t429 * t478 - t430 * t362 + t247 * t268 + t239 * t234 + t235 * t300 + t231 * t242 + (-qJD(1) * t525 - t190) * t498, t100 * t207 + t113 * t201, -t100 * t206 - t101 * t207 - t112 * t201 - t113 * t199, -t100 * t248 - t113 * t233 - t201 * t222 - t207 * t214, t101 * t248 + t112 * t233 + t199 * t222 + t206 * t214, t214 * t248 + t222 * t233, t73 * t199 + t94 * t101 + t60 * t206 + t82 * t112 - t502 * t233 + t160 * t214 + t456 * t248 - t58 * t222 + (-t214 * t466 - t233 * t468) * t419, t94 * t100 + t82 * t113 + t17 * t248 + t73 * t201 + t60 * t207 + t214 * t528 + t59 * t222 + t233 * t428, t141 * t67 + t166 * t55, -t139 * t67 - t141 * t66 - t165 * t55 - t166 * t56, t101 * t166 + t112 * t141 + t197 * t67 + t206 * t55, -t101 * t165 - t112 * t139 - t197 * t66 - t206 * t56, t101 * t206 + t112 * t197, t472 * t101 + t24 * t112 + t23 * t139 + t16 * t165 + t197 * t617 + t6 * t206 + t50 * t66 + t62 * t56, -t101 * t473 - t25 * t112 + t23 * t141 + t16 * t166 - t197 * t448 - t5 * t206 + t50 * t67 + t62 * t55, t108 * t26 + t35 * t91, -t107 * t26 - t108 * t27 - t34 * t91 - t35 * t89, t108 * t56 + t138 * t35 + t165 * t26 + t66 * t91, -t107 * t56 - t138 * t34 - t165 * t27 - t66 * t89, t138 * t66 + t165 * t56 (-qJD(6) * t475 + t13 * t417 - t412 * t7) * t138 + t474 * t56 + t2 * t165 - t477 * t66 + t8 * t89 + t31 * t27 + t4 * t107 + t19 * t34 -(qJD(6) * t474 + t13 * t412 + t417 * t7) * t138 - t475 * t56 - t1 * t165 - t12 * t66 + t8 * t91 + t31 * t26 + t4 * t108 + t19 * t35; 0, 0, 0, -t416 * t533, t554 * t590, t539 * t521, -t539 * t522, 0, t422 * t534 + (qJD(2) * t442 - t434) * qJD(1) (-pkin(10) * t522 + t391) * t393 + pkin(1) * t533 - t441, t234 * t585 + (-t338 + t518) * t268, -t267 * t338 + t337 * t268 + (t420 * t234 - t471 * t415 + (t267 * t420 - t268 * t415) * qJD(3)) * t407, t410 * t234 + t420 * t436 - t478 * t338 + (-t268 * t407 + t415 * t551) * t522, -t410 * t471 - t415 * t436 + t478 * t337 + (-t267 * t407 + t420 * t551) * t522 (t410 * t539 - qJD(3) + t382) * t500, -t555 * t445 + t119 * t410 - t407 * pkin(2) * t471 - t235 * t584 - t482 * t478 + t246 * t267 + (-t337 + t519) * t231 + (-t189 + (-pkin(11) * t585 + t399) * qJD(2)) * t500, t430 * t410 - t246 * t268 - t231 * t338 + (t231 * t548 - pkin(2) * t234 + (pkin(11) * t445 + t235) * t415 + (-qJD(2) * t555 + t190) * t522) * t407 + t640 * t478, t100 * t301 + t201 * t562, -t100 * t298 - t101 * t301 - t199 * t562 - t201 * t561, -t100 * t361 + t201 * t455 - t214 * t301 - t233 * t562, t101 * t361 - t199 * t455 + t214 * t298 + t233 * t561, t214 * t361 - t233 * t455, t238 * t101 + t456 * t361 + t278 * t214 + t60 * t298 + t561 * t82 + t455 * t58 + t629 * t233 + t560 * t199 + (-t462 * t214 + (t406 * t637 + t409 * t638) * t233) * t419, t238 * t100 + t17 * t361 + t560 * t201 + t526 * t214 + t233 * t634 + t60 * t301 - t455 * t59 + t562 * t82, t141 * t567 + t250 * t55, -t139 * t567 - t141 * t566 - t249 * t55 - t250 * t56, t101 * t250 + t141 * t561 + t197 * t567 + t298 * t55, -t101 * t249 - t139 * t561 - t197 * t566 - t298 * t56, t101 * t298 + t197 * t561, t465 * t101 + t6 * t298 + t193 * t56 + t16 * t249 + t566 * t50 + t561 * t24 + ((-qJD(5) * t194 - t632) * t418 + (-qJD(5) * t185 - t633) * t413) * t197 + t603 * t139, -t565 * t101 + t603 * t141 + t16 * t250 + t193 * t55 + t197 * t622 - t561 * t25 - t5 * t298 + t567 * t50, t209 * t26 + t598 * t91, -t208 * t26 - t209 * t27 - t597 * t91 - t598 * t89, t138 * t598 + t209 * t56 + t249 * t26 + t566 * t91, -t138 * t597 - t208 * t56 - t249 * t27 - t566 * t89, t138 * t566 + t249 * t56 (t120 * t417 - t412 * t99) * t56 + t2 * t249 + t98 * t27 + t4 * t208 + t611 * t89 + t597 * t19 + (t412 * t491 - t417 * t492) * t138 - t566 * t477 -(t120 * t412 + t417 * t99) * t56 - t1 * t249 + t98 * t26 + t4 * t209 + t611 * t91 + t598 * t19 + (t412 * t492 + t417 * t491) * t138 - t566 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267 * t268, -t267 ^ 2 + t268 ^ 2, -t267 * t478 + t234, t268 * t478 - t471, t459, t190 * t506 - t231 * t268 + t484, t189 * t478 - t231 * t267 + t430, t100 * t588 + t201 * t636, t199 * t217 + t201 * t216 + (t100 * t419 - t101 * t414 + (-t199 * t419 - t201 * t414) * qJD(4)) * t406, t100 * t409 + t217 * t233 + (-t201 * t268 - t214 * t414 - t233 * t546) * t406, -t101 * t409 - t216 * t233 + (t199 * t268 - t214 * t419 + t233 * t547) * t406, -t214 * t409 + t233 * t593, -t624 * t214 - t456 * t409 - t110 * t199 - t82 * t216 + (t153 * t580 + t627) * t233 + (t82 * t547 - pkin(3) * t101 - t58 * t268 + (t218 * t233 - t60) * t419) * t406, t556 * t214 - t17 * t409 - t110 * t201 - t82 * t217 + t635 * t233 + (-pkin(3) * t100 + t268 * t59 + t414 * t60 + t546 * t82) * t406, t141 * t559 + t366 * t55, -t139 * t559 - t141 * t558 - t365 * t55 - t366 * t56, t101 * t366 - t141 * t628 + t197 * t559 - t55 * t586, -t101 * t365 + t139 * t628 - t197 * t558 + t56 * t586, -t101 * t586 - t197 * t628, t461 * t101 - t6 * t586 + t353 * t56 + t16 * t365 + t558 * t50 - t628 * t24 + ((-qJD(5) * t354 - t631) * t418 + (-qJD(5) * t355 - t630) * t413) * t197 + t601 * t139, -t557 * t101 + t601 * t141 + t16 * t366 + t197 * t623 + t25 * t628 + t353 * t55 + t5 * t586 + t559 * t50, t26 * t321 + t564 * t91, -t26 * t320 - t27 * t321 - t563 * t91 - t564 * t89, t138 * t564 + t26 * t365 + t321 * t56 + t558 * t91, -t138 * t563 - t27 * t365 - t320 * t56 - t558 * t89, t138 * t558 + t365 * t56 (t251 * t417 - t253 * t412) * t56 + t2 * t365 + t252 * t27 + t4 * t320 + t602 * t89 + t563 * t19 + (t412 * t487 - t417 * t486) * t138 - t558 * t477 -(t251 * t412 + t253 * t417) * t56 - t1 * t365 + t252 * t26 + t4 * t321 + t602 * t91 + t564 * t19 + (t412 * t486 + t417 * t487) * t138 - t558 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199 * t201, -t199 ^ 2 + t201 ^ 2, -t199 * t233 + t100, -t233 * t201 - t101, -t214, -t201 * t82 - t233 * t59 - t456, t199 * t82 - t233 * t58 - t17, t141 * t504 + t413 * t55 (t55 - t596) * t418 + (-t56 - t595) * t413, t413 * t101 - t141 * t201 + t197 * t504, -t197 ^ 2 * t413 + t418 * t101 + t139 * t201, -t197 * t201, -pkin(4) * t56 - t59 * t139 - t24 * t201 + (-t16 + (-pkin(13) * qJD(5) - t117) * t197) * t418 + (t197 * t58 + t444) * t413, -pkin(4) * t55 - t59 * t141 + t16 * t413 + t25 * t201 + (pkin(13) * t544 + t599) * t197 + t444 * t418, t26 * t413 * t417 + (-t413 * t541 + t480) * t91, t114 * t91 + t115 * t89 + (-t412 * t91 - t417 * t89) * t542 + (-t606 - t27 * t417 + (t412 * t89 - t417 * t91) * qJD(6)) * t413, -t26 * t418 + t480 * t138 + (t197 * t91 + t453) * t413, t27 * t418 + (-t412 * t542 + t114) * t138 + (-t197 * t89 + t454) * t413, t138 * t197 * t413 - t418 * t56, t386 * t604 - t19 * t114 - t42 * t89 + (t412 * t508 + t417 * t600) * t138 + (t19 * t545 - t2 + (qJD(5) * t89 + t454) * pkin(13)) * t418 + (t19 * t540 + t4 * t412 - t197 * t477 + (t138 * t545 + t27) * pkin(13)) * t413, -t386 * t605 - t19 * t115 - t42 * t91 + (-t412 * t600 + t417 * t508) * t138 + (t19 * t543 + t1 + (qJD(5) * t91 - t453) * pkin(13)) * t418 + (-t19 * t541 + t4 * t417 - t197 * t12 + (t138 * t543 + t26) * pkin(13)) * t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141 * t139, -t139 ^ 2 + t141 ^ 2, t55 + t596, -t56 + t595, t101, -t141 * t50 + t197 * t25 + t6, t139 * t50 + t197 * t24 - t5, t505 * t91 + t606 (t26 - t608) * t417 + (-t27 - t607) * t412, t138 * t505 - t141 * t91 + t605, -t138 ^ 2 * t412 + t141 * t89 + t604, -t138 * t141, -pkin(5) * t27 + t141 * t477 - t25 * t89 + t431 * t412 - t417 * t618, -pkin(5) * t26 + t12 * t141 - t25 * t91 + t412 * t618 + t431 * t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91 * t89, -t89 ^ 2 + t91 ^ 2, t26 + t608, -t27 + t607, t56, t12 * t138 - t19 * t91 + t2, -t138 * t477 + t19 * t89 - t1;];
tauc_reg  = t9;
