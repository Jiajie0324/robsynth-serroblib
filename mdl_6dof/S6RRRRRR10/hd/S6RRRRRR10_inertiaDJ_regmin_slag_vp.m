% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x38]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-11-23 11:28
% Revision: 76f9d5e39f14dc242b53c0d9d3d9db48bd8f37c0
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR10_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRRRRR10_inertiaDJ_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2018-11-23 11:16:25
% EndTime: 2018-11-23 11:17:15
% DurationCPUTime: 19.49s
% Computational Cost: add. (33427->780), mult. (105932->1424), div. (0->0), fcn. (111643->16), ass. (0->305)
t241 = cos(qJ(4));
t229 = sin(pkin(8));
t231 = sin(pkin(6));
t232 = cos(pkin(7));
t233 = cos(pkin(6));
t242 = cos(qJ(3));
t243 = cos(qJ(2));
t380 = t242 * t243;
t237 = sin(qJ(3));
t238 = sin(qJ(2));
t382 = t237 * t238;
t290 = t232 * t380 - t382;
t230 = sin(pkin(7));
t373 = qJD(3) * t242;
t342 = t230 * t373;
t115 = t233 * t342 + (t290 * qJD(3) + (-t232 * t382 + t380) * qJD(2)) * t231;
t321 = t231 * (-pkin(11) * t232 - pkin(10));
t407 = pkin(1) * t233;
t359 = t238 * t407;
t154 = (t243 * t321 - t359) * qJD(2);
t406 = pkin(11) * t230;
t177 = (pkin(2) * t238 - t243 * t406) * t231 * qJD(2);
t117 = -t230 * t154 + t232 * t177;
t376 = qJD(2) * t238;
t341 = t231 * t376;
t328 = t242 * t341;
t375 = qJD(2) * t243;
t340 = t231 * t375;
t374 = qJD(3) * t237;
t343 = t230 * t374;
t387 = t232 * t243;
t355 = t237 * t387;
t310 = t232 * t328 + t233 * t343 + t237 * t340 + (qJD(3) * t355 + t238 * t373) * t231;
t405 = pkin(12) * t229;
t262 = pkin(3) * t310 - t115 * t405 + t117;
t257 = t229 * t262;
t236 = sin(qJ(4));
t396 = cos(pkin(8));
t392 = t230 * t237;
t147 = t233 * t392 + (t238 * t242 + t355) * t231;
t390 = t231 * t243;
t192 = t230 * t390 - t233 * t232;
t282 = -pkin(10) * t390 - t359;
t141 = (t230 * t233 + t231 * t387) * pkin(11) - t282;
t305 = t238 * t321;
t151 = (pkin(1) * t243 + pkin(2)) * t233 + t305;
t174 = (-pkin(2) * t243 - t238 * t406 - pkin(1)) * t231;
t388 = t232 * t242;
t391 = t230 * t242;
t315 = -t237 * t141 + t151 * t388 + t174 * t391;
t353 = t396 * pkin(12);
t76 = -t192 * pkin(3) - t147 * t353 + t315;
t110 = -t151 * t230 + t232 * t174;
t145 = -t231 * t290 - t233 * t391;
t84 = pkin(3) * t145 - t147 * t405 + t110;
t289 = t229 * t84 + t396 * t76;
t334 = t396 * t145;
t284 = -t192 * t229 - t334;
t135 = t242 * t141;
t389 = t232 * t237;
t354 = t151 * t389 + t174 * t392 + t135;
t73 = pkin(12) * t284 + t354;
t72 = t241 * t73;
t263 = (t236 * t289 + t72) * qJD(4);
t323 = t230 * t341;
t213 = t375 * t407;
t153 = qJD(2) * t305 + t213;
t65 = -t237 * t153 + t154 * t388 + t177 * t391 + (-t135 + (-t151 * t232 - t174 * t230) * t237) * qJD(3);
t51 = pkin(3) * t323 - t115 * t353 + t65;
t416 = t263 - (t396 * t51 + t257) * t241;
t337 = t236 * t396;
t393 = t229 * t241;
t198 = pkin(3) * t337 + pkin(12) * t393;
t183 = pkin(13) * t396 + t198;
t184 = (-pkin(4) * t241 - pkin(13) * t236 - pkin(3)) * t229;
t235 = sin(qJ(5));
t240 = cos(qJ(5));
t414 = t240 * t183 + t235 * t184;
t335 = t242 * t396;
t274 = t236 * t335 + t237 * t241;
t336 = t241 * t396;
t371 = qJD(4) * t236;
t345 = t229 * t371;
t114 = t232 * t345 + (t274 * qJD(4) + (t236 * t242 + t237 * t336) * qJD(3)) * t230;
t394 = t229 * t236;
t146 = t230 * t274 + t232 * t394;
t191 = t229 * t391 - t232 * t396;
t119 = t146 * t235 + t240 * t191;
t120 = t146 * t240 - t191 * t235;
t218 = pkin(2) * t389;
t379 = pkin(11) * t391 + t218;
t140 = (t229 * t232 + t230 * t335) * pkin(12) + t379;
t173 = (-pkin(3) * t242 - t237 * t405 - pkin(2)) * t230;
t219 = pkin(2) * t388;
t302 = t230 * (-t353 - pkin(11));
t280 = t237 * t302;
t150 = t232 * pkin(3) + t219 + t280;
t333 = t396 * t150;
t92 = -t236 * t140 + t241 * (t173 * t229 + t333);
t87 = t191 * pkin(4) - t92;
t254 = t119 * pkin(5) - t120 * pkin(14) + t87;
t324 = t229 * t343;
t152 = (t242 * t302 - t218) * qJD(3);
t350 = t232 * t373;
t212 = pkin(2) * t350;
t266 = qJD(3) * t280 + t212;
t270 = qJD(3) * t230 * (pkin(3) * t237 - t242 * t405);
t267 = t229 * t270;
t332 = qJD(4) * t396;
t319 = t241 * t332;
t370 = qJD(4) * t241;
t344 = t229 * t370;
t62 = t140 * t371 - t150 * t319 - t152 * t337 - t173 * t344 - t236 * t267 - t241 * t266;
t260 = pkin(13) * t324 - t62;
t411 = -t236 * t237 + t241 * t335;
t113 = t232 * t344 + (t411 * qJD(4) + (-t237 * t337 + t241 * t242) * qJD(3)) * t230;
t116 = -t152 * t229 + t396 * t270;
t271 = pkin(4) * t114 - pkin(13) * t113 + t116;
t366 = qJD(5) * t240;
t368 = qJD(5) * t235;
t109 = -t150 * t229 + t396 * t173;
t144 = -t230 * t411 - t232 * t393;
t85 = pkin(4) * t144 - pkin(13) * t146 + t109;
t93 = t241 * t140 + t173 * t394 + t236 * t333;
t88 = -pkin(13) * t191 + t93;
t26 = -t235 * t271 - t240 * t260 - t85 * t366 + t368 * t88;
t413 = -t114 * pkin(14) - qJD(6) * t254 + t26;
t412 = -t229 * t323 + t310 * t396;
t239 = cos(qJ(6));
t227 = t239 ^ 2;
t234 = sin(qJ(6));
t378 = t234 ^ 2 - t227;
t331 = t378 * qJD(6);
t40 = -t236 * t73 + t241 * t289;
t401 = t235 * t85 + t240 * t88;
t27 = -qJD(5) * t401 - t235 * t260 + t240 * t271;
t104 = -t229 * t310 - t323 * t396;
t64 = t141 * t374 - t151 * t350 - t242 * t153 - t154 * t389 - t174 * t342 - t177 * t392;
t249 = -pkin(12) * t412 - t64;
t14 = -t236 * t257 - t241 * t249 - t76 * t319 - t51 * t337 - t84 * t344 + t371 * t73;
t265 = -pkin(13) * t104 - t14;
t39 = -t229 * t51 + t396 * t262;
t384 = t236 * t147;
t57 = t241 * t115 - t236 * t412 + (t241 * t284 - t384) * qJD(4);
t97 = t241 * t147 + t236 * t284;
t58 = qJD(4) * t97 + t236 * t115 + t241 * t412;
t273 = pkin(4) * t58 - pkin(13) * t57 + t39;
t118 = -t145 * t229 + t192 * t396;
t41 = t76 * t337 + t84 * t394 + t72;
t32 = -pkin(13) * t118 + t41;
t46 = -t229 * t76 + t396 * t84;
t96 = t192 * t393 + t241 * t334 + t384;
t38 = pkin(4) * t96 - pkin(13) * t97 + t46;
t402 = t235 * t38 + t240 * t32;
t6 = -qJD(5) * t402 - t235 * t265 + t240 * t273;
t185 = -pkin(3) * t319 + pkin(12) * t345;
t409 = qJD(5) * t414 - t235 * t185;
t408 = 0.2e1 * t229;
t404 = pkin(13) * t229;
t403 = pkin(13) * t234;
t74 = t240 * t118 + t235 * t97;
t35 = -qJD(5) * t74 - t104 * t235 + t240 * t57;
t75 = -t118 * t235 + t240 * t97;
t52 = t234 * t75 - t239 * t96;
t20 = -qJD(6) * t52 + t234 * t58 + t239 * t35;
t400 = t20 * t234;
t399 = t20 * t239;
t79 = -qJD(5) * t119 + t113 * t240 + t235 * t324;
t98 = t120 * t234 - t239 * t144;
t44 = -qJD(6) * t98 + t114 * t234 + t239 * t79;
t398 = t234 * t44;
t397 = t239 * t44;
t194 = t235 * t394 - t240 * t396;
t155 = -qJD(5) * t194 + t240 * t344;
t195 = t235 * t396 + t240 * t394;
t157 = t195 * t234 + t239 * t393;
t105 = -qJD(6) * t157 + t155 * t239 + t234 * t345;
t395 = t105 * t234;
t385 = t235 * t239;
t381 = t239 * t240;
t226 = t235 ^ 2;
t377 = -t240 ^ 2 + t226;
t372 = qJD(4) * t229;
t369 = qJD(5) * t234;
t367 = qJD(5) * t239;
t365 = qJD(5) * t241;
t364 = qJD(6) * t234;
t363 = qJD(6) * t239;
t362 = qJD(6) * t240;
t361 = -0.2e1 * pkin(4) * qJD(5);
t360 = -0.2e1 * pkin(5) * qJD(6);
t358 = t240 * t403;
t357 = pkin(13) * t381;
t356 = t234 * t393;
t224 = t231 ^ 2;
t352 = t224 * t375;
t223 = t230 ^ 2;
t351 = t223 * t373;
t222 = t229 ^ 2;
t349 = t222 * t370;
t348 = t239 * t366;
t347 = t234 * t362;
t346 = t239 * t362;
t339 = t234 * t363;
t338 = t235 * t366;
t330 = t377 * qJD(5);
t329 = 0.2e1 * t338;
t327 = t222 * t343;
t326 = t239 * t338;
t325 = t236 * t349;
t320 = t236 * t332;
t318 = pkin(4) * t236 - pkin(13) * t241;
t317 = -pkin(5) * t240 - pkin(14) * t235;
t316 = pkin(5) * t235 - pkin(14) * t240;
t53 = t234 * t96 + t239 * t75;
t314 = -t234 * t53 - t239 * t52;
t99 = t120 * t239 + t144 * t234;
t313 = -t234 * t99 - t239 * t98;
t18 = -t235 * t32 + t240 * t38;
t54 = -t235 * t88 + t240 * t85;
t158 = t195 * t239 - t356;
t308 = -t157 * t239 - t158 * t234;
t125 = -t183 * t235 + t184 * t240;
t306 = pkin(4) - t317;
t197 = pkin(3) * t336 - pkin(12) * t394;
t16 = -pkin(5) * t96 - t18;
t4 = -t58 * pkin(5) - t6;
t304 = t16 * t363 + t234 * t4;
t303 = t16 * t364 - t239 * t4;
t301 = t235 * t58 + t366 * t96;
t300 = -t240 * t58 + t368 * t96;
t25 = -t114 * pkin(5) - t27;
t47 = -pkin(5) * t144 - t54;
t299 = t234 * t25 + t363 * t47;
t298 = -t239 * t25 + t364 * t47;
t36 = qJD(5) * t75 + t240 * t104 + t235 * t57;
t297 = t234 * t36 + t363 * t74;
t296 = -t239 * t36 + t364 * t74;
t295 = t316 * t234;
t80 = qJD(5) * t120 + t113 * t235 - t240 * t324;
t294 = t119 * t363 + t234 * t80;
t293 = t119 * t364 - t239 * t80;
t121 = pkin(5) * t393 - t125;
t94 = (-t236 * pkin(5) - t240 * t318) * t372 + t409;
t292 = t121 * t363 + t234 * t94;
t291 = t121 * t364 - t239 * t94;
t5 = -t235 * t273 - t240 * t265 + t32 * t368 - t38 * t366;
t288 = t114 * t235 + t144 * t366;
t287 = -t114 * t240 + t144 * t368;
t156 = qJD(5) * t195 + t235 * t344;
t286 = t156 * t234 + t194 * t363;
t285 = -t156 * t239 + t194 * t364;
t279 = t318 * t372;
t100 = t183 * t368 - t184 * t366 + t240 * t185 - t235 * t279;
t281 = t239 * t306;
t278 = t235 * t365 + t240 * t371;
t277 = t235 * t371 - t240 * t365;
t276 = -t235 * t364 + t348;
t275 = t235 * t367 + t347;
t269 = -t58 * pkin(14) + t5;
t182 = -pkin(4) * t396 - t197;
t186 = t198 * qJD(4);
t179 = -t234 * t306 + t357;
t264 = pkin(14) * t345 - t100;
t31 = t118 * pkin(4) - t40;
t261 = t194 * pkin(5) - t195 * pkin(14) + t182;
t258 = t156 * pkin(5) - t155 * pkin(14) + t186;
t256 = t239 * t261;
t255 = t74 * pkin(5) - t75 * pkin(14) + t31;
t253 = t239 * t255;
t122 = -pkin(14) * t393 + t414;
t90 = t239 * t122 + t234 * t261;
t17 = pkin(14) * t96 + t402;
t9 = t239 * t17 + t234 * t255;
t248 = t236 * t249;
t246 = t104 * pkin(4) + t248;
t63 = -t140 * t370 - t150 * t320 + t152 * t336 - t173 * t345 - t236 * t266 + t241 * t267;
t61 = -pkin(4) * t324 - t63;
t245 = t80 * pkin(5) - t79 * pkin(14) + t61;
t244 = t36 * pkin(5) - t35 * pkin(14) - t241 * t257 - t336 * t51 + t246;
t190 = t282 * qJD(2);
t189 = pkin(10) * t341 - t213;
t188 = t379 * qJD(3);
t187 = pkin(11) * t343 - t212;
t178 = -t281 - t358;
t124 = -t179 * qJD(6) + (t235 * t403 + t239 * t316) * qJD(5);
t123 = pkin(13) * t275 - qJD(5) * t295 + qJD(6) * t281;
t106 = -qJD(6) * t356 + t155 * t234 + t195 * t363 - t239 * t345;
t101 = t240 * t279 - t409;
t89 = -t234 * t122 + t256;
t48 = pkin(14) * t144 + t401;
t45 = qJD(6) * t99 - t239 * t114 + t234 * t79;
t43 = -qJD(6) * t90 - t234 * t264 + t239 * t258;
t42 = -qJD(6) * t256 + t122 * t364 - t234 * t258 - t239 * t264;
t29 = t234 * t254 + t239 * t48;
t28 = -t234 * t48 + t239 * t254;
t21 = qJD(6) * t53 + t234 * t35 - t239 * t58;
t15 = -t248 - t416;
t13 = t246 + t416;
t11 = t234 * t413 + t239 * t245 - t48 * t363;
t10 = -t234 * t245 + t239 * t413 + t48 * t364;
t8 = -t234 * t17 + t253;
t2 = -qJD(6) * t9 + t234 * t269 + (t244 + t263) * t239;
t1 = t17 * t364 - qJD(6) * t253 + t239 * t269 - t234 * (t320 * t76 + t345 * t84 + t370 * t73 + t244);
t3 = [0, 0, 0, 0.2e1 * t238 * t352, 0.2e1 * (-t238 ^ 2 + t243 ^ 2) * t224 * qJD(2), 0.2e1 * t233 * t340, -0.2e1 * t233 * t341, 0, -0.2e1 * pkin(1) * t224 * t376 + 0.2e1 * t190 * t233, -0.2e1 * pkin(1) * t352 + 0.2e1 * t189 * t233, 0.2e1 * t147 * t115, -0.2e1 * t145 * t115 - 0.2e1 * t147 * t310, -0.2e1 * t115 * t192 + 0.2e1 * t147 * t323, -0.2e1 * t145 * t323 + 0.2e1 * t192 * t310, -0.2e1 * t192 * t323, 0.2e1 * t110 * t310 + 0.2e1 * t117 * t145 - 0.2e1 * t65 * t192 + 0.2e1 * t315 * t323, 0.2e1 * t110 * t115 + 0.2e1 * t117 * t147 - 0.2e1 * t64 * t192 - 0.2e1 * t323 * t354, 0.2e1 * t97 * t57, -0.2e1 * t57 * t96 - 0.2e1 * t58 * t97, -0.2e1 * t104 * t97 - 0.2e1 * t118 * t57, 0.2e1 * t104 * t96 + 0.2e1 * t118 * t58, 0.2e1 * t118 * t104, -0.2e1 * t104 * t40 - 0.2e1 * t118 * t15 + 0.2e1 * t39 * t96 + 0.2e1 * t46 * t58, 0.2e1 * t104 * t41 - 0.2e1 * t118 * t14 + 0.2e1 * t39 * t97 + 0.2e1 * t46 * t57, 0.2e1 * t75 * t35, -0.2e1 * t35 * t74 - 0.2e1 * t36 * t75, 0.2e1 * t35 * t96 + 0.2e1 * t58 * t75, -0.2e1 * t36 * t96 - 0.2e1 * t58 * t74, 0.2e1 * t96 * t58, 0.2e1 * t13 * t74 + 0.2e1 * t18 * t58 + 0.2e1 * t31 * t36 + 0.2e1 * t6 * t96, 0.2e1 * t13 * t75 + 0.2e1 * t31 * t35 - 0.2e1 * t402 * t58 + 0.2e1 * t5 * t96, 0.2e1 * t53 * t20, -0.2e1 * t20 * t52 - 0.2e1 * t21 * t53, 0.2e1 * t20 * t74 + 0.2e1 * t36 * t53, -0.2e1 * t21 * t74 - 0.2e1 * t36 * t52, 0.2e1 * t74 * t36, 0.2e1 * t16 * t21 + 0.2e1 * t2 * t74 + 0.2e1 * t36 * t8 + 0.2e1 * t4 * t52, 0.2e1 * t1 * t74 + 0.2e1 * t16 * t20 - 0.2e1 * t36 * t9 + 0.2e1 * t4 * t53; 0, 0, 0, 0, 0, t340, -t341, 0, t190, t189 (t115 * t237 + t147 * t373) * t230 (t242 * t115 - t310 * t237 + (-t145 * t242 - t147 * t237) * qJD(3)) * t230, t223 * t237 * t341 + t115 * t232 - t192 * t342, t192 * t343 + t223 * t328 - t232 * t310, t232 * t323, -t230 * pkin(2) * t310 - t117 * t391 + t110 * t343 + t188 * t192 + (-pkin(11) * t392 + t219) * t323 + t65 * t232, -t187 * t192 + t64 * t232 + (-pkin(2) * t115 + t110 * t373 + t117 * t237 - t341 * t379) * t230, t113 * t97 + t146 * t57, -t113 * t96 - t114 * t97 - t144 * t57 - t146 * t58, -t104 * t146 - t113 * t118 - t191 * t57 + t324 * t97, t104 * t144 + t114 * t118 + t191 * t58 - t324 * t96, t104 * t191 - t118 * t324, -t104 * t92 + t109 * t58 + t114 * t46 + t116 * t96 - t118 * t63 + t144 * t39 - t15 * t191 + t324 * t40, t104 * t93 + t109 * t57 + t113 * t46 + t116 * t97 - t118 * t62 - t14 * t191 + t146 * t39 - t324 * t41, t120 * t35 + t75 * t79, -t119 * t35 - t120 * t36 - t74 * t79 - t75 * t80, t114 * t75 + t120 * t58 + t144 * t35 + t79 * t96, -t114 * t74 - t119 * t58 - t144 * t36 - t80 * t96, t114 * t96 + t144 * t58, t114 * t18 + t119 * t13 + t144 * t6 + t27 * t96 + t31 * t80 + t36 * t87 + t54 * t58 + t61 * t74, -t114 * t402 + t120 * t13 + t144 * t5 + t26 * t96 + t31 * t79 + t35 * t87 - t401 * t58 + t61 * t75, t20 * t99 + t44 * t53, -t20 * t98 - t21 * t99 - t44 * t52 - t45 * t53, t119 * t20 + t36 * t99 + t44 * t74 + t53 * t80, -t119 * t21 - t36 * t98 - t45 * t74 - t52 * t80, t119 * t36 + t74 * t80, t11 * t74 + t119 * t2 + t16 * t45 + t21 * t47 + t25 * t52 + t28 * t36 + t4 * t98 + t8 * t80, t1 * t119 + t10 * t74 + t16 * t44 + t20 * t47 + t25 * t53 - t29 * t36 + t4 * t99 - t80 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t237 * t351, 0.2e1 * (-t237 ^ 2 + t242 ^ 2) * t223 * qJD(3), 0.2e1 * t232 * t342, -0.2e1 * t232 * t343, 0, -0.2e1 * pkin(2) * t223 * t374 - 0.2e1 * t188 * t232, -0.2e1 * pkin(2) * t351 + 0.2e1 * t187 * t232, 0.2e1 * t146 * t113, -0.2e1 * t113 * t144 - 0.2e1 * t114 * t146, -0.2e1 * t113 * t191 + 0.2e1 * t146 * t324, 0.2e1 * t114 * t191 - 0.2e1 * t144 * t324, -0.2e1 * t191 * t324, 0.2e1 * t109 * t114 + 0.2e1 * t116 * t144 - 0.2e1 * t191 * t63 + 0.2e1 * t324 * t92, 0.2e1 * t109 * t113 + 0.2e1 * t116 * t146 - 0.2e1 * t191 * t62 - 0.2e1 * t324 * t93, 0.2e1 * t120 * t79, -0.2e1 * t119 * t79 - 0.2e1 * t120 * t80, 0.2e1 * t114 * t120 + 0.2e1 * t144 * t79, -0.2e1 * t114 * t119 - 0.2e1 * t144 * t80, 0.2e1 * t144 * t114, 0.2e1 * t114 * t54 + 0.2e1 * t119 * t61 + 0.2e1 * t144 * t27 + 0.2e1 * t80 * t87, -0.2e1 * t114 * t401 + 0.2e1 * t120 * t61 + 0.2e1 * t144 * t26 + 0.2e1 * t79 * t87, 0.2e1 * t99 * t44, -0.2e1 * t44 * t98 - 0.2e1 * t45 * t99, 0.2e1 * t119 * t44 + 0.2e1 * t80 * t99, -0.2e1 * t119 * t45 - 0.2e1 * t80 * t98, 0.2e1 * t119 * t80, 0.2e1 * t11 * t119 + 0.2e1 * t25 * t98 + 0.2e1 * t28 * t80 + 0.2e1 * t45 * t47, 0.2e1 * t10 * t119 + 0.2e1 * t25 * t99 - 0.2e1 * t29 * t80 + 0.2e1 * t44 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, -t310, t323, t65, t64 (t236 * t57 + t370 * t97) * t229 (-t236 * t58 + t241 * t57 + (-t236 * t97 - t241 * t96) * qJD(4)) * t229, t396 * t57 + (-t104 * t236 - t118 * t370) * t229, -t396 * t58 + (-t104 * t241 + t118 * t371) * t229, -t104 * t396, t15 * t396 - t197 * t104 + t186 * t118 + (-pkin(3) * t58 - t241 * t39 + t371 * t46) * t229, t14 * t396 + t198 * t104 - t185 * t118 + (-pkin(3) * t57 + t236 * t39 + t370 * t46) * t229, t155 * t75 + t195 * t35, -t155 * t74 - t156 * t75 - t194 * t35 - t195 * t36, t155 * t96 + t195 * t58 + (-t241 * t35 + t371 * t75) * t229, -t156 * t96 - t194 * t58 + (t241 * t36 - t371 * t74) * t229 (-t241 * t58 + t371 * t96) * t229, t101 * t96 + t125 * t58 + t13 * t194 + t156 * t31 + t182 * t36 + t186 * t74 + (t18 * t371 - t241 * t6) * t229, t100 * t96 - t414 * t58 + t13 * t195 + t155 * t31 + t182 * t35 + t186 * t75 + (-t241 * t5 - t371 * t402) * t229, t105 * t53 + t158 * t20, -t105 * t52 - t106 * t53 - t157 * t20 - t158 * t21, t105 * t74 + t156 * t53 + t158 * t36 + t194 * t20, -t106 * t74 - t156 * t52 - t157 * t36 - t194 * t21, t156 * t74 + t194 * t36, t106 * t16 + t121 * t21 + t156 * t8 + t157 * t4 + t194 * t2 + t36 * t89 + t43 * t74 + t52 * t94, t1 * t194 + t105 * t16 + t121 * t20 - t156 * t9 + t158 * t4 - t36 * t90 + t42 * t74 + t53 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, -t343, 0, -t188, t187 (t113 * t236 + t146 * t370) * t229 (t113 * t241 - t114 * t236 + (-t144 * t241 - t146 * t236) * qJD(4)) * t229, t113 * t396 - t191 * t344 + t236 * t327, -t114 * t396 + t191 * t345 + t241 * t327, t396 * t324, t63 * t396 + t186 * t191 + (-pkin(3) * t114 + t109 * t371 - t116 * t241 + t197 * t343) * t229, t62 * t396 - t185 * t191 + (-pkin(3) * t113 + t109 * t370 + t116 * t236 - t198 * t343) * t229, t120 * t155 + t195 * t79, -t119 * t155 - t120 * t156 - t194 * t79 - t195 * t80, t114 * t195 + t144 * t155 + (t120 * t371 - t241 * t79) * t229, -t114 * t194 - t144 * t156 + (-t119 * t371 + t241 * t80) * t229 (-t114 * t241 + t144 * t371) * t229, t101 * t144 + t114 * t125 + t119 * t186 + t156 * t87 + t182 * t80 + t194 * t61 + (-t241 * t27 + t371 * t54) * t229, t100 * t144 - t114 * t414 + t120 * t186 + t155 * t87 + t182 * t79 + t195 * t61 + (-t241 * t26 - t371 * t401) * t229, t105 * t99 + t158 * t44, -t105 * t98 - t106 * t99 - t157 * t44 - t158 * t45, t105 * t119 + t156 * t99 + t158 * t80 + t194 * t44, -t106 * t119 - t156 * t98 - t157 * t80 - t194 * t45, t119 * t156 + t194 * t80, t106 * t47 + t11 * t194 + t119 * t43 + t121 * t45 + t156 * t28 + t157 * t25 + t80 * t89 + t94 * t98, t10 * t194 + t105 * t47 + t119 * t42 + t121 * t44 - t156 * t29 + t158 * t25 - t80 * t90 + t94 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t325, 0.2e1 * (-t236 ^ 2 + t241 ^ 2) * t222 * qJD(4), t319 * t408, -0.2e1 * t229 * t320, 0, -0.2e1 * pkin(3) * t222 * t371 - 0.2e1 * t186 * t396, -0.2e1 * pkin(3) * t349 + 0.2e1 * t185 * t396, 0.2e1 * t195 * t155, -0.2e1 * t155 * t194 - 0.2e1 * t156 * t195 (-t155 * t241 + t195 * t371) * t408 (t156 * t241 - t194 * t371) * t408, -0.2e1 * t325, 0.2e1 * t156 * t182 + 0.2e1 * t186 * t194 + 0.2e1 * (-t101 * t241 + t125 * t371) * t229, 0.2e1 * t155 * t182 + 0.2e1 * t186 * t195 + 0.2e1 * (-t100 * t241 - t371 * t414) * t229, 0.2e1 * t158 * t105, -0.2e1 * t105 * t157 - 0.2e1 * t106 * t158, 0.2e1 * t105 * t194 + 0.2e1 * t156 * t158, -0.2e1 * t106 * t194 - 0.2e1 * t156 * t157, 0.2e1 * t194 * t156, 0.2e1 * t106 * t121 + 0.2e1 * t156 * t89 + 0.2e1 * t157 * t94 + 0.2e1 * t194 * t43, 0.2e1 * t105 * t121 - 0.2e1 * t156 * t90 + 0.2e1 * t158 * t94 + 0.2e1 * t194 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, -t58, -t104, t15, t14, t235 * t35 + t366 * t75, -t235 * t36 + t240 * t35 + (-t235 * t75 - t240 * t74) * qJD(5), t301, -t300, 0, -pkin(4) * t36 - pkin(13) * t301 - t13 * t240 + t31 * t368, -pkin(4) * t35 + pkin(13) * t300 + t13 * t235 + t31 * t366, t53 * t348 + (-t364 * t53 + t399) * t235, t314 * t366 + (-t400 - t21 * t239 + (t234 * t52 - t239 * t53) * qJD(6)) * t235 (t367 * t74 - t20) * t240 + (qJD(5) * t53 - t296) * t235 (-t369 * t74 + t21) * t240 + (-qJD(5) * t52 - t297) * t235, -t240 * t36 + t368 * t74, t124 * t74 + t178 * t36 + (-t2 + (pkin(13) * t52 + t16 * t234) * qJD(5)) * t240 + (pkin(13) * t21 + qJD(5) * t8 + t304) * t235, t123 * t74 - t179 * t36 + (-t1 + (pkin(13) * t53 + t16 * t239) * qJD(5)) * t240 + (pkin(13) * t20 - qJD(5) * t9 - t303) * t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t114, t324, t63, t62, t120 * t366 + t235 * t79, -t235 * t80 + t240 * t79 + (-t119 * t240 - t120 * t235) * qJD(5), t288, -t287, 0, -pkin(4) * t80 - pkin(13) * t288 - t240 * t61 + t368 * t87, -pkin(4) * t79 + pkin(13) * t287 + t235 * t61 + t366 * t87, t99 * t348 + (-t364 * t99 + t397) * t235, t313 * t366 + (-t398 - t239 * t45 + (t234 * t98 - t239 * t99) * qJD(6)) * t235 (t119 * t367 - t44) * t240 + (qJD(5) * t99 - t293) * t235 (-t119 * t369 + t45) * t240 + (-qJD(5) * t98 - t294) * t235, t119 * t368 - t240 * t80, t119 * t124 + t178 * t80 + (-t11 + (pkin(13) * t98 + t234 * t47) * qJD(5)) * t240 + (pkin(13) * t45 + qJD(5) * t28 + t299) * t235, t119 * t123 - t179 * t80 + (-t10 + (pkin(13) * t99 + t239 * t47) * qJD(5)) * t240 + (pkin(13) * t44 - qJD(5) * t29 - t298) * t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t345, 0, -t186, t185, t155 * t235 + t195 * t366, t155 * t240 - t156 * t235 + (-t194 * t240 - t195 * t235) * qJD(5), t277 * t229, t278 * t229, 0, -pkin(4) * t156 + t182 * t368 - t186 * t240 - t277 * t404, -pkin(4) * t155 + t182 * t366 + t186 * t235 - t278 * t404, t105 * t385 + t158 * t276, t308 * t366 + (-t395 - t106 * t239 + (t157 * t234 - t158 * t239) * qJD(6)) * t235 (t194 * t367 - t105) * t240 + (qJD(5) * t158 - t285) * t235 (-t194 * t369 + t106) * t240 + (-qJD(5) * t157 - t286) * t235, -t156 * t240 + t194 * t368, t124 * t194 + t156 * t178 + (-t43 + (pkin(13) * t157 + t121 * t234) * qJD(5)) * t240 + (pkin(13) * t106 + qJD(5) * t89 + t292) * t235, t123 * t194 - t156 * t179 + (-t42 + (pkin(13) * t158 + t121 * t239) * qJD(5)) * t240 + (pkin(13) * t105 - qJD(5) * t90 - t291) * t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329, -0.2e1 * t330, 0, 0, 0, t235 * t361, t240 * t361, -0.2e1 * t226 * t339 + 0.2e1 * t227 * t338, 0.2e1 * t226 * t331 - 0.4e1 * t234 * t326, 0.2e1 * t235 * t347 + 0.2e1 * t367 * t377, -0.2e1 * t234 * t330 + 0.2e1 * t235 * t346, -0.2e1 * t338, 0.2e1 * t178 * t368 - 0.2e1 * t124 * t240 + 0.2e1 * (t226 * t363 + t234 * t329) * pkin(13), -0.2e1 * t179 * t368 - 0.2e1 * t123 * t240 + 0.2e1 * (-t226 * t364 + 0.2e1 * t326) * pkin(13); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, -t36, t58, t6, t5, t363 * t53 + t400, qJD(6) * t314 - t21 * t234 + t399, t297, -t296, 0, -pkin(5) * t21 - pkin(14) * t297 + t303, -pkin(5) * t20 + pkin(14) * t296 + t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, -t80, t114, t27, t26, t363 * t99 + t398, qJD(6) * t313 - t234 * t45 + t397, t294, -t293, 0, -pkin(5) * t45 - pkin(14) * t294 + t298, -pkin(5) * t44 + pkin(14) * t293 + t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, -t156, t345, t101, t100, t158 * t363 + t395, qJD(6) * t308 + t105 * t239 - t106 * t234, t286, -t285, 0, -pkin(5) * t106 - pkin(14) * t286 + t291, -pkin(5) * t105 + pkin(14) * t285 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, -t368, 0, -pkin(13) * t366, pkin(13) * t368, t234 * t348 - t235 * t331, -0.4e1 * t235 * t339 - t366 * t378, t234 * t368 - t346, t275, 0 (pkin(14) * t381 + (-pkin(5) * t239 + t403) * t235) * qJD(6) + (t234 * t317 - t357) * qJD(5) (pkin(13) * t385 + t295) * qJD(6) + (t239 * t317 + t358) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t339, -0.2e1 * t331, 0, 0, 0, t234 * t360, t239 * t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, -t21, t36, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t45, t80, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, -t106, t156, t43, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, -t234 * t366 - t235 * t363, t368, t124, t123; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, -t364, 0, -pkin(14) * t363, pkin(14) * t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
