% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 19:15
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRRR10_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR10_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR10_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR10_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRRRRR10_invdynB_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 18:54:11
% EndTime: 2019-05-08 19:03:09
% DurationCPUTime: 454.51s
% Computational Cost: add. (6118624->1437), mult. (15689920->2436), div. (0->0), fcn. (13664041->18), ass. (0->1057)
t1591 = cos(pkin(6));
t1919 = qJD(1) * t1591;
t1578 = qJD(2) + t1919;
t1577 = t1578 ^ 2;
t1602 = cos(qJ(2));
t1585 = t1602 ^ 2;
t1588 = sin(pkin(6));
t1583 = t1588 ^ 2;
t1937 = qJD(1) ^ 2;
t1883 = t1583 * t1937;
t1957 = t1585 * t1883;
t1561 = -t1957 - t1577;
t1592 = sin(qJ(6));
t1595 = sin(qJ(3));
t1596 = sin(qJ(2));
t1601 = cos(qJ(3));
t1590 = cos(pkin(7));
t1869 = t1590 * t1602;
t1587 = sin(pkin(7));
t1880 = t1587 * t1595;
t1920 = qJD(1) * t1588;
t1539 = t1578 * t1880 + (t1595 * t1869 + t1596 * t1601) * t1920;
t1600 = cos(qJ(4));
t1594 = sin(qJ(4));
t1875 = t1588 * t1602;
t1852 = qJD(1) * t1875;
t1838 = t1590 * t1852;
t1674 = t1578 * t1587 + t1838;
t1876 = t1588 * t1596;
t1853 = qJD(1) * t1876;
t1538 = -t1595 * t1853 + t1601 * t1674;
t1837 = t1587 * t1852;
t1885 = t1578 * t1590;
t1554 = qJD(3) - t1837 + t1885;
t1586 = sin(pkin(8));
t1589 = cos(pkin(8));
t1722 = t1538 * t1589 + t1554 * t1586;
t1698 = t1722 * t1594;
t1496 = t1539 * t1600 + t1698;
t1520 = -t1586 * t1538 + t1554 * t1589 + qJD(4);
t1593 = sin(qJ(5));
t1599 = cos(qJ(5));
t1460 = t1496 * t1599 + t1520 * t1593;
t1872 = t1589 * t1600;
t1881 = t1586 * t1600;
t1494 = -t1538 * t1872 + t1539 * t1594 - t1554 * t1881;
t1491 = qJD(5) + t1494;
t1598 = cos(qJ(6));
t1425 = t1460 * t1592 - t1598 * t1491;
t1427 = t1460 * t1598 + t1491 * t1592;
t1362 = t1427 * t1425;
t1576 = qJD(2) * t1853;
t1859 = qJDD(1) * t1602;
t1827 = t1588 * t1859 - t1576;
t1839 = qJDD(1) * t1591 + qJDD(2);
t1640 = t1839 * t1587 + t1827 * t1590;
t1638 = t1595 * t1640;
t1860 = qJDD(1) * t1596;
t1918 = qJD(1) * t1602;
t1704 = qJD(2) * t1918 + t1860;
t1653 = t1704 * t1588;
t1648 = t1601 * t1653;
t1630 = t1638 + t1648;
t1894 = t1538 * qJD(3);
t1628 = t1630 + t1894;
t1624 = -t1494 * qJD(4) + t1600 * t1628;
t1637 = t1601 * t1640;
t1642 = t1595 * t1653 - t1637;
t1504 = -t1539 * qJD(3) - t1642;
t1647 = -t1587 * t1827 + t1590 * t1839 + qJDD(3);
t1643 = t1586 * t1647;
t1939 = t1589 * t1504 + t1643;
t1413 = t1594 * t1939 + t1624;
t1485 = -t1504 * t1586 + t1589 * t1647 + qJDD(4);
t1843 = t1460 * qJD(5) + t1593 * t1413 - t1599 * t1485;
t1836 = qJDD(6) + t1843;
t1944 = -t1362 + t1836;
t1956 = t1592 * t1944;
t1458 = t1496 * t1593 - t1599 * t1520;
t1400 = t1460 * t1458;
t1623 = t1496 * qJD(4) - t1504 * t1872 + t1594 * t1628 - t1600 * t1643;
t1412 = qJDD(5) + t1623;
t1943 = -t1400 + t1412;
t1955 = t1593 * t1943;
t1954 = t1598 * t1944;
t1953 = t1599 * t1943;
t1579 = g(3) * t1876;
t1597 = sin(qJ(1));
t1603 = cos(qJ(1));
t1575 = g(1) * t1603 + t1597 * g(2);
t1861 = qJDD(1) * t1588;
t1654 = pkin(10) * t1861 - t1575;
t1574 = t1597 * g(1) - t1603 * g(2);
t1709 = qJDD(1) * pkin(1) + t1574;
t1685 = t1591 * t1709;
t1879 = t1587 * t1596;
t1934 = pkin(2) * t1602;
t1712 = -pkin(11) * t1879 - t1934;
t1697 = t1712 * t1588;
t1868 = t1591 * t1596;
t1884 = t1578 * t1596;
t1923 = t1577 * pkin(2);
t1927 = pkin(11) * t1590;
t1612 = t1602 * t1654 + t1596 * t1685 - t1579 - t1923 + t1640 * pkin(11) + (-pkin(1) * t1918 + (t1884 * t1927 + (pkin(10) * t1868 + t1602 * t1697) * qJD(1)) * t1588) * qJD(1);
t1645 = t1647 * pkin(3);
t1820 = t1839 * pkin(2);
t1924 = t1937 * pkin(1);
t1928 = pkin(11) * t1587;
t1629 = -t1596 * (-t1575 - t1924) + t1602 * t1685 + t1820 + t1577 * t1928;
t1855 = -pkin(10) - t1927;
t1929 = pkin(10) * t1591;
t1857 = t1602 * t1929;
t1921 = t1602 * g(3);
t1614 = (-t1921 + t1855 * t1860 + ((-t1596 * t1697 + t1857) * qJD(1) + (-qJD(2) + t1578) * pkin(11) * t1869) * qJD(1)) * t1588 + t1629;
t1922 = t1591 * g(3);
t1835 = t1576 * pkin(2) - t1922;
t1584 = t1596 ^ 2;
t1862 = t1584 + t1585;
t1865 = qJD(2) + t1578;
t1877 = t1587 * t1602;
t1618 = ((-pkin(1) + t1712) * qJDD(1) + (pkin(2) * t1884 - pkin(10) * t1920 + (-t1590 * t1862 * t1920 - t1865 * t1877) * pkin(11)) * qJD(1) - t1574) * t1588 + t1835;
t1941 = t1587 * t1618 + t1590 * t1614;
t1608 = -t1595 * t1612 + t1601 * t1941 + t1645;
t1620 = t1554 * t1722 - t1628 * t1589;
t1926 = pkin(12) * t1586;
t1711 = -pkin(3) * t1538 - t1539 * t1926;
t1607 = pkin(12) * t1620 - t1539 * t1711 + t1608;
t1611 = -t1504 * pkin(3) - t1587 * t1614 + t1590 * t1618;
t1925 = pkin(12) * t1589;
t1710 = pkin(3) * t1554 - t1539 * t1925;
t1940 = -t1538 * t1722 - t1628 * t1586;
t1610 = pkin(12) * t1940 + t1539 * t1710 + t1611;
t1952 = t1586 * t1610 + t1589 * t1607;
t1901 = t1460 * t1491;
t1951 = t1843 + t1901;
t1858 = pkin(11) * t1877;
t1655 = -t1583 * t1858 + t1588 * t1929;
t1714 = t1590 * (t1583 * t1934 + pkin(1));
t1871 = t1590 * t1595;
t1878 = t1587 * t1601;
t1886 = t1578 * t1588;
t1950 = -qJD(1) * (qJD(1) * (t1595 * t1655 - t1601 * t1714) - (pkin(2) * t1878 - pkin(11) * t1871) * t1886) - t1595 * t1685;
t1949 = t1583 * t1596;
t1898 = t1494 * t1496;
t1656 = t1485 - t1898;
t1948 = t1594 * t1656;
t1893 = t1538 * t1539;
t1641 = t1647 + t1893;
t1947 = t1595 * t1641;
t1946 = t1600 * t1656;
t1945 = t1601 * t1641;
t1353 = -t1458 * qJD(5) + t1599 * t1413 + t1593 * t1485;
t1432 = t1491 * t1458;
t1325 = -t1432 + t1353;
t1463 = t1520 * t1494;
t1873 = t1589 * t1594;
t1615 = t1504 * t1873 + t1594 * t1643 + t1624;
t1942 = -t1463 + t1615;
t1895 = t1520 * t1496;
t1372 = t1623 + t1895;
t1930 = pkin(10) * t1588;
t1649 = t1930 * t1937 + t1709;
t1549 = t1588 * t1649 + t1922;
t1644 = t1591 * t1649;
t1616 = t1590 * (-g(3) * t1875 + t1602 * t1644 + t1820) + t1587 * (-pkin(2) * t1827 - t1549);
t1455 = qJD(6) + t1458;
t1384 = t1455 * t1425;
t1842 = t1425 * qJD(6) - t1598 * t1353 - t1592 * t1412;
t1252 = t1842 + t1384;
t1840 = t1353 * t1592 - t1598 * t1412;
t1247 = (qJD(6) - t1455) * t1427 + t1840;
t1634 = (-t1587 ^ 2 * pkin(11) + t1590 * t1855) * t1861 + t1590 * t1575;
t1423 = t1425 ^ 2;
t1424 = t1427 ^ 2;
t1454 = t1455 ^ 2;
t1456 = t1458 ^ 2;
t1457 = t1460 ^ 2;
t1936 = t1491 ^ 2;
t1492 = t1494 ^ 2;
t1493 = t1496 ^ 2;
t1935 = t1520 ^ 2;
t1536 = t1538 ^ 2;
t1537 = t1539 ^ 2;
t1552 = t1554 ^ 2;
t1933 = pkin(4) * t1594;
t1932 = pkin(4) * t1600;
t1931 = pkin(5) * t1593;
t1445 = pkin(4) * t1494 - pkin(13) * t1496;
t1344 = pkin(12) * t1939 + t1538 * t1711 - t1554 * t1710 + t1595 * t1941 + t1601 * t1612;
t1866 = t1600 * t1344;
t1196 = -t1935 * pkin(4) + t1485 * pkin(13) - t1494 * t1445 + t1594 * t1952 + t1866;
t1356 = t1589 * t1610;
t1605 = -t1586 * t1607 + t1356 + (-t1413 + t1463) * pkin(13) + t1372 * pkin(4);
t1121 = t1196 * t1593 - t1599 * t1605;
t1396 = pkin(5) * t1458 - pkin(14) * t1460;
t1098 = -t1412 * pkin(5) - pkin(14) * t1936 + t1396 * t1460 + t1121;
t1917 = t1098 * t1592;
t1916 = t1098 * t1598;
t1220 = t1344 * t1594 - t1600 * t1952;
t1195 = -t1485 * pkin(4) - t1935 * pkin(13) + t1445 * t1496 + t1220;
t1915 = t1195 * t1593;
t1914 = t1195 * t1599;
t1621 = t1590 * (-qJD(2) * t1838 + t1578 * t1674) + t1587 * (-qJD(2) * t1837 - t1674 * t1852);
t1646 = t1654 - t1924;
t1639 = t1602 * t1646 - t1579;
t1271 = t1620 * t1926 - t1356 + (-t1595 * (-pkin(2) * t1957 + t1639 - t1923) + t1645 + pkin(3) * t1893 - t1638 * pkin(11) + t1950 * t1596 + t1537 * t1926 + (t1621 * pkin(11) + t1596 * t1634 + t1616) * t1601) * t1586;
t1913 = t1271 * t1594;
t1912 = t1271 * t1600;
t1285 = t1362 + t1836;
t1911 = t1285 * t1592;
t1910 = t1285 * t1598;
t1347 = t1400 + t1412;
t1909 = t1347 * t1593;
t1908 = t1347 * t1599;
t1404 = -t1485 - t1898;
t1907 = t1404 * t1594;
t1906 = t1404 * t1600;
t1435 = t1587 * t1629 - t1590 * t1835 + (t1587 * (-pkin(10) * t1860 - t1921) - t1590 * (-pkin(2) * t1859 - t1709) + ((t1587 * t1857 + (-t1712 * t1879 - t1590 * (-t1862 * t1927 - pkin(10))) * t1588) * qJD(1) + (-pkin(2) * t1596 + 0.2e1 * t1858) * t1885) * qJD(1)) * t1588;
t1905 = t1435 * t1595;
t1904 = t1435 * t1601;
t1903 = t1455 * t1592;
t1902 = t1455 * t1598;
t1900 = t1491 * t1593;
t1899 = t1491 * t1599;
t1499 = -t1647 + t1893;
t1897 = t1499 * t1595;
t1896 = t1499 * t1601;
t1892 = t1549 * t1596;
t1891 = t1549 * t1602;
t1523 = t1554 * t1538;
t1867 = t1596 * t1937;
t1844 = t1602 * t1867;
t1573 = t1583 * t1844;
t1556 = t1573 + t1839;
t1890 = t1556 * t1596;
t1889 = t1556 * t1602;
t1557 = -t1573 + t1839;
t1888 = t1557 * t1596;
t1887 = t1557 * t1602;
t1882 = t1586 * t1594;
t1870 = t1590 * t1601;
t1864 = qJD(3) + t1554;
t1122 = t1599 * t1196 + t1593 * t1605;
t1099 = -pkin(5) * t1936 + pkin(14) * t1412 - t1396 * t1458 + t1122;
t1135 = pkin(5) * t1951 - t1325 * pkin(14) + t1195;
t1043 = t1598 * t1099 + t1592 * t1135;
t1856 = -pkin(5) * t1599 - pkin(4);
t1854 = qJD(1) * t1886;
t1851 = t1584 * t1883;
t1848 = t1593 * t1362;
t1847 = t1599 * t1362;
t1846 = t1594 * t1400;
t1845 = t1600 * t1400;
t1841 = -t1578 + t1919;
t1042 = t1099 * t1592 - t1598 * t1135;
t1046 = t1121 * t1593 + t1599 * t1122;
t1551 = -t1574 * t1597 - t1603 * t1575;
t1571 = qJDD(1) * t1603 - t1597 * t1937;
t1834 = -pkin(9) * t1571 - g(3) * t1597;
t1555 = -t1851 - t1577;
t1528 = -t1555 * t1596 - t1887;
t1833 = pkin(10) * t1528 - t1892;
t1532 = t1561 * t1602 - t1890;
t1832 = pkin(10) * t1532 + t1891;
t1503 = -t1552 - t1536;
t1449 = t1503 * t1601 - t1947;
t1831 = pkin(11) * t1449 + t1904;
t1510 = -t1537 - t1552;
t1451 = -t1510 * t1595 + t1896;
t1830 = pkin(11) * t1451 - t1905;
t1433 = -t1935 - t1492;
t1359 = t1433 * t1600 - t1948;
t1829 = pkin(12) * t1359 + t1912;
t1439 = -t1493 - t1935;
t1360 = -t1439 * t1594 + t1906;
t1828 = pkin(12) * t1360 - t1913;
t977 = t1042 * t1592 + t1043 * t1598;
t952 = t1098 * t1593 + t1599 * t977;
t976 = -t1042 * t1598 + t1043 * t1592;
t1826 = t1594 * t952 - t1600 * t976;
t951 = -t1098 * t1599 + t1593 * t977;
t886 = -t1586 * t951 + t1589 * t1826;
t919 = t1594 * t976 + t1600 * t952;
t1825 = t1595 * t919 + t1601 * t886;
t885 = t1586 * t1826 + t1589 * t951;
t854 = -t1587 * t885 + t1590 * t1825;
t864 = -t1595 * t886 + t1601 * t919;
t1824 = t1596 * t864 + t1602 * t854;
t1016 = t1046 * t1600 + t1195 * t1594;
t1045 = -t1121 * t1599 + t1122 * t1593;
t1806 = t1046 * t1594 - t1195 * t1600;
t968 = -t1045 * t1586 + t1589 * t1806;
t1815 = t1016 * t1595 + t1601 * t968;
t967 = t1045 * t1589 + t1586 * t1806;
t907 = -t1587 * t967 + t1590 * t1815;
t934 = t1016 * t1601 - t1595 * t968;
t1823 = t1596 * t934 + t1602 * t907;
t1251 = -t1384 + t1842;
t1171 = -t1247 * t1598 - t1251 * t1592;
t1333 = t1423 + t1424;
t1136 = t1171 * t1593 + t1333 * t1599;
t1137 = t1171 * t1599 - t1333 * t1593;
t1169 = -t1247 * t1592 + t1251 * t1598;
t1792 = t1137 * t1594 - t1169 * t1600;
t1025 = t1136 * t1589 + t1586 * t1792;
t1026 = -t1136 * t1586 + t1589 * t1792;
t1069 = t1137 * t1600 + t1169 * t1594;
t1811 = t1026 * t1601 + t1069 * t1595;
t940 = -t1025 * t1587 + t1590 * t1811;
t981 = -t1026 * t1595 + t1069 * t1601;
t1822 = t1596 * t981 + t1602 * t940;
t1248 = (-qJD(6) - t1455) * t1427 - t1840;
t1170 = t1248 * t1598 + t1252 * t1592;
t1361 = -t1424 + t1423;
t1149 = t1170 * t1593 + t1361 * t1599;
t1150 = t1170 * t1599 - t1361 * t1593;
t1168 = -t1248 * t1592 + t1252 * t1598;
t1788 = t1150 * t1594 + t1168 * t1600;
t1030 = t1149 * t1589 + t1586 * t1788;
t1031 = -t1149 * t1586 + t1589 * t1788;
t1077 = t1150 * t1600 - t1168 * t1594;
t1810 = t1031 * t1601 + t1077 * t1595;
t943 = -t1030 * t1587 + t1590 * t1810;
t986 = -t1031 * t1595 + t1077 * t1601;
t1821 = t1596 * t986 + t1602 * t943;
t1338 = -t1454 - t1423;
t1224 = t1338 * t1598 - t1956;
t1156 = t1224 * t1593 + t1248 * t1599;
t1157 = t1224 * t1599 - t1248 * t1593;
t1223 = t1338 * t1592 + t1954;
t1786 = t1157 * t1594 - t1223 * t1600;
t1054 = -t1156 * t1586 + t1589 * t1786;
t1105 = t1157 * t1600 + t1223 * t1594;
t1004 = -t1054 * t1595 + t1105 * t1601;
t1053 = t1156 * t1589 + t1586 * t1786;
t1805 = t1054 * t1601 + t1105 * t1595;
t959 = -t1053 * t1587 + t1590 * t1805;
t1819 = t1004 * t1596 + t1602 * t959;
t1354 = -t1424 - t1454;
t1232 = -t1354 * t1592 - t1910;
t1162 = t1232 * t1593 + t1252 * t1599;
t1163 = t1232 * t1599 - t1252 * t1593;
t1231 = t1354 * t1598 - t1911;
t1784 = t1163 * t1594 - t1231 * t1600;
t1059 = -t1162 * t1586 + t1589 * t1784;
t1108 = t1163 * t1600 + t1231 * t1594;
t1008 = -t1059 * t1595 + t1108 * t1601;
t1058 = t1162 * t1589 + t1586 * t1784;
t1804 = t1059 * t1601 + t1108 * t1595;
t963 = -t1058 * t1587 + t1590 * t1804;
t1818 = t1008 * t1596 + t1602 * t963;
t1383 = -t1424 + t1454;
t1255 = -t1383 * t1592 + t1954;
t1174 = t1251 * t1599 + t1255 * t1593;
t1176 = -t1251 * t1593 + t1255 * t1599;
t1253 = -t1383 * t1598 - t1956;
t1782 = t1176 * t1594 + t1253 * t1600;
t1062 = -t1174 * t1586 + t1589 * t1782;
t1115 = t1176 * t1600 - t1253 * t1594;
t1011 = -t1062 * t1595 + t1115 * t1601;
t1060 = t1174 * t1589 + t1586 * t1782;
t1803 = t1062 * t1601 + t1115 * t1595;
t971 = -t1060 * t1587 + t1590 * t1803;
t1817 = t1011 * t1596 + t1602 * t971;
t1382 = t1423 - t1454;
t1256 = t1382 * t1598 - t1911;
t1175 = t1247 * t1599 + t1256 * t1593;
t1177 = -t1247 * t1593 + t1256 * t1599;
t1254 = -t1382 * t1592 - t1910;
t1781 = t1177 * t1594 + t1254 * t1600;
t1063 = -t1175 * t1586 + t1589 * t1781;
t1116 = t1177 * t1600 - t1254 * t1594;
t1012 = -t1063 * t1595 + t1116 * t1601;
t1061 = t1175 * t1589 + t1586 * t1781;
t1802 = t1063 * t1601 + t1116 * t1595;
t972 = -t1061 * t1587 + t1590 * t1802;
t1816 = t1012 * t1596 + t1602 * t972;
t1278 = -qJD(6) * t1427 - t1840;
t1244 = -t1278 * t1592 + t1425 * t1902;
t1207 = t1244 * t1593 + t1847;
t1209 = t1244 * t1599 - t1848;
t1243 = -t1278 * t1598 - t1425 * t1903;
t1772 = t1209 * t1594 + t1243 * t1600;
t1090 = -t1207 * t1586 + t1589 * t1772;
t1147 = t1209 * t1600 - t1243 * t1594;
t1038 = -t1090 * t1595 + t1147 * t1601;
t1088 = t1207 * t1589 + t1586 * t1772;
t1797 = t1090 * t1601 + t1147 * t1595;
t995 = -t1088 * t1587 + t1590 * t1797;
t1814 = t1038 * t1596 + t1602 * t995;
t1246 = -t1427 * t1903 - t1598 * t1842;
t1208 = t1246 * t1593 - t1847;
t1210 = t1246 * t1599 + t1848;
t1245 = -t1427 * t1902 + t1592 * t1842;
t1771 = t1210 * t1594 + t1245 * t1600;
t1091 = -t1208 * t1586 + t1589 * t1771;
t1148 = t1210 * t1600 - t1245 * t1594;
t1039 = -t1091 * t1595 + t1148 * t1601;
t1089 = t1208 * t1589 + t1586 * t1771;
t1796 = t1091 * t1601 + t1148 * t1595;
t996 = -t1089 * t1587 + t1590 * t1796;
t1813 = t1039 * t1596 + t1602 * t996;
t1221 = pkin(3) * t1539 * t1698 + t1866 + (t1586 * t1611 + t1589 * t1608 + (t1586 * t1940 + t1589 * t1620) * pkin(12)) * t1594;
t1768 = -t1220 * t1600 + t1221 * t1594;
t1106 = -t1271 * t1589 + t1586 * t1768;
t1107 = t1271 * t1586 + t1589 * t1768;
t1140 = t1220 * t1594 + t1221 * t1600;
t1793 = t1107 * t1601 + t1140 * t1595;
t1003 = -t1106 * t1587 + t1590 * t1793;
t1050 = -t1107 * t1595 + t1140 * t1601;
t1812 = t1003 * t1602 + t1050 * t1596;
t1324 = -t1843 + t1901;
t1326 = -t1432 - t1353;
t1234 = t1324 * t1593 + t1326 * t1599;
t1236 = t1324 * t1599 - t1326 * t1593;
t1367 = t1456 + t1457;
t1764 = t1236 * t1594 + t1367 * t1600;
t1138 = t1234 * t1589 + t1586 * t1764;
t1139 = -t1234 * t1586 + t1589 * t1764;
t1203 = t1236 * t1600 - t1367 * t1594;
t1791 = t1139 * t1601 + t1203 * t1595;
t1034 = -t1138 * t1587 + t1590 * t1791;
t1083 = -t1139 * t1595 + t1203 * t1601;
t1809 = t1034 * t1602 + t1083 * t1596;
t1317 = (-t1425 * t1598 + t1427 * t1592) * t1455;
t1259 = t1317 * t1593 - t1599 * t1836;
t1260 = t1317 * t1599 + t1593 * t1836;
t1316 = (t1425 * t1592 + t1427 * t1598) * t1455;
t1763 = t1260 * t1594 + t1316 * t1600;
t1143 = t1259 * t1589 + t1586 * t1763;
t1144 = -t1259 * t1586 + t1589 * t1763;
t1201 = t1260 * t1600 - t1316 * t1594;
t1790 = t1144 * t1601 + t1201 * t1595;
t1036 = -t1143 * t1587 + t1590 * t1790;
t1084 = -t1144 * t1595 + t1201 * t1601;
t1808 = t1036 * t1602 + t1084 * t1596;
t1233 = t1325 * t1599 - t1593 * t1951;
t1235 = -t1325 * t1593 - t1599 * t1951;
t1399 = -t1457 + t1456;
t1765 = t1235 * t1594 + t1399 * t1600;
t1145 = t1233 * t1589 + t1586 * t1765;
t1146 = -t1233 * t1586 + t1589 * t1765;
t1216 = t1235 * t1600 - t1399 * t1594;
t1789 = t1146 * t1601 + t1216 * t1595;
t1041 = -t1145 * t1587 + t1590 * t1789;
t1092 = -t1146 * t1595 + t1216 * t1601;
t1807 = t1041 * t1602 + t1092 * t1596;
t1385 = -t1936 - t1456;
t1291 = t1385 * t1593 + t1953;
t1292 = t1385 * t1599 - t1955;
t1758 = t1292 * t1594 - t1600 * t1951;
t1178 = t1291 * t1589 + t1586 * t1758;
t1179 = -t1291 * t1586 + t1589 * t1758;
t1219 = t1292 * t1600 + t1594 * t1951;
t1780 = t1179 * t1601 + t1219 * t1595;
t1065 = -t1178 * t1587 + t1590 * t1780;
t1110 = -t1179 * t1595 + t1219 * t1601;
t1801 = t1065 * t1602 + t1110 * t1596;
t1391 = -t1457 - t1936;
t1299 = t1391 * t1599 - t1909;
t1300 = -t1391 * t1593 - t1908;
t1755 = t1300 * t1594 - t1325 * t1600;
t1182 = t1299 * t1589 + t1586 * t1755;
t1183 = -t1299 * t1586 + t1589 * t1755;
t1222 = t1300 * t1600 + t1325 * t1594;
t1779 = t1183 * t1601 + t1222 * t1595;
t1067 = -t1182 * t1587 + t1590 * t1779;
t1119 = -t1183 * t1595 + t1222 * t1601;
t1800 = t1067 * t1602 + t1119 * t1596;
t1430 = -t1457 + t1936;
t1310 = t1430 * t1599 + t1955;
t1312 = -t1430 * t1593 + t1953;
t1751 = t1312 * t1594 + t1326 * t1600;
t1188 = t1310 * t1589 + t1586 * t1751;
t1190 = -t1310 * t1586 + t1589 * t1751;
t1229 = t1312 * t1600 - t1326 * t1594;
t1777 = t1190 * t1601 + t1229 * t1595;
t1073 = -t1188 * t1587 + t1590 * t1777;
t1124 = -t1190 * t1595 + t1229 * t1601;
t1799 = t1073 * t1602 + t1124 * t1596;
t1429 = t1456 - t1936;
t1311 = t1429 * t1593 + t1908;
t1313 = t1429 * t1599 - t1909;
t1750 = t1313 * t1594 - t1324 * t1600;
t1189 = t1311 * t1589 + t1586 * t1750;
t1191 = -t1311 * t1586 + t1589 * t1750;
t1230 = t1313 * t1600 + t1324 * t1594;
t1776 = t1191 * t1601 + t1230 * t1595;
t1074 = -t1189 * t1587 + t1590 * t1776;
t1125 = -t1191 * t1595 + t1230 * t1601;
t1798 = t1074 * t1602 + t1125 * t1596;
t1318 = t1458 * t1900 - t1599 * t1843;
t1319 = t1458 * t1899 + t1593 * t1843;
t1707 = t1319 * t1594 + t1845;
t1212 = t1318 * t1589 + t1586 * t1707;
t1214 = -t1318 * t1586 + t1589 * t1707;
t1276 = t1319 * t1600 - t1846;
t1770 = t1214 * t1601 + t1276 * t1595;
t1102 = -t1212 * t1587 + t1590 * t1770;
t1165 = -t1214 * t1595 + t1276 * t1601;
t1795 = t1102 * t1602 + t1165 * t1596;
t1320 = t1353 * t1593 + t1460 * t1899;
t1321 = t1353 * t1599 - t1460 * t1900;
t1706 = t1321 * t1594 - t1845;
t1213 = t1320 * t1589 + t1586 * t1706;
t1215 = -t1320 * t1586 + t1589 * t1706;
t1277 = t1321 * t1600 + t1846;
t1769 = t1215 * t1601 + t1277 * t1595;
t1103 = -t1213 * t1587 + t1590 * t1769;
t1166 = -t1215 * t1595 + t1277 * t1601;
t1794 = t1103 * t1602 + t1166 * t1596;
t1363 = (-t1458 * t1593 - t1460 * t1599) * t1491;
t1364 = (-t1458 * t1599 + t1460 * t1593) * t1491;
t1747 = t1364 * t1594 - t1412 * t1600;
t1265 = t1363 * t1589 + t1586 * t1747;
t1266 = -t1363 * t1586 + t1589 * t1747;
t1330 = t1364 * t1600 + t1412 * t1594;
t1762 = t1266 * t1601 + t1330 * t1595;
t1154 = -t1265 * t1587 + t1590 * t1762;
t1202 = -t1266 * t1595 + t1330 * t1601;
t1787 = t1154 * t1602 + t1202 * t1596;
t1418 = -t1492 - t1493;
t1377 = t1463 + t1615;
t1619 = -t1623 + t1895;
t1745 = -t1377 * t1600 + t1594 * t1619;
t1272 = t1418 * t1589 + t1586 * t1745;
t1273 = -t1418 * t1586 + t1589 * t1745;
t1309 = t1377 * t1594 + t1600 * t1619;
t1761 = t1273 * t1601 + t1309 * t1595;
t1159 = -t1272 * t1587 + t1590 * t1761;
t1206 = -t1273 * t1595 + t1309 * t1601;
t1785 = t1159 * t1602 + t1206 * t1596;
t1446 = t1493 - t1492;
t1746 = -t1372 * t1594 + t1600 * t1942;
t1282 = t1446 * t1589 + t1586 * t1746;
t1283 = -t1446 * t1586 + t1589 * t1746;
t1308 = -t1372 * t1600 - t1594 * t1942;
t1759 = t1283 * t1601 + t1308 * t1595;
t1173 = -t1282 * t1587 + t1590 * t1759;
t1211 = -t1283 * t1595 + t1308 * t1601;
t1783 = t1173 * t1602 + t1211 * t1596;
t1735 = t1433 * t1594 + t1946;
t1295 = t1372 * t1589 + t1586 * t1735;
t1296 = -t1372 * t1586 + t1589 * t1735;
t1757 = t1296 * t1601 + t1359 * t1595;
t1187 = -t1295 * t1587 + t1590 * t1757;
t1242 = -t1296 * t1595 + t1359 * t1601;
t1778 = t1187 * t1602 + t1242 * t1596;
t1738 = t1439 * t1600 + t1907;
t1297 = t1586 * t1738 + t1589 * t1942;
t1298 = -t1586 * t1942 + t1589 * t1738;
t1756 = t1298 * t1601 + t1360 * t1595;
t1193 = -t1297 * t1587 + t1590 * t1756;
t1257 = -t1298 * t1595 + t1360 * t1601;
t1775 = t1193 * t1602 + t1257 * t1596;
t1462 = -t1493 + t1935;
t1736 = t1462 * t1600 + t1948;
t1304 = t1377 * t1589 + t1586 * t1736;
t1306 = -t1377 * t1586 + t1589 * t1736;
t1368 = -t1462 * t1594 + t1946;
t1753 = t1306 * t1601 + t1368 * t1595;
t1199 = -t1304 * t1587 + t1590 * t1753;
t1261 = -t1306 * t1595 + t1368 * t1601;
t1774 = t1199 * t1602 + t1261 * t1596;
t1461 = t1492 - t1935;
t1737 = t1461 * t1594 - t1906;
t1305 = t1586 * t1737 + t1589 * t1619;
t1307 = -t1586 * t1619 + t1589 * t1737;
t1369 = t1461 * t1600 + t1907;
t1752 = t1307 * t1601 + t1369 * t1595;
t1200 = -t1305 * t1587 + t1590 * t1752;
t1262 = -t1307 * t1595 + t1369 * t1601;
t1773 = t1200 * t1602 + t1262 * t1596;
t1622 = t1600 * t1623;
t1339 = -t1586 * t1622 + (-t1496 * t1589 + t1520 * t1882) * t1494;
t1340 = -t1589 * t1622 + (t1496 * t1586 + t1520 * t1873) * t1494;
t1370 = t1463 * t1600 + t1594 * t1623;
t1749 = t1340 * t1601 + t1370 * t1595;
t1227 = -t1339 * t1587 + t1590 * t1749;
t1280 = -t1340 * t1595 + t1370 * t1601;
t1767 = t1227 * t1602 + t1280 * t1596;
t1341 = t1413 * t1882 + (t1494 * t1589 + t1520 * t1881) * t1496;
t1342 = t1413 * t1873 + (-t1494 * t1586 + t1520 * t1872) * t1496;
t1371 = t1413 * t1600 - t1594 * t1895;
t1748 = t1342 * t1601 + t1371 * t1595;
t1228 = -t1341 * t1587 + t1590 * t1748;
t1281 = -t1342 * t1595 + t1371 * t1601;
t1766 = t1228 * t1602 + t1281 * t1596;
t1702 = t1520 * (-t1494 * t1594 - t1496 * t1600);
t1380 = t1485 * t1589 + t1586 * t1702;
t1381 = -t1485 * t1586 + t1589 * t1702;
t1401 = (-t1494 * t1600 + t1496 * t1594) * t1520;
t1744 = t1381 * t1601 + t1401 * t1595;
t1275 = -t1380 * t1587 + t1590 * t1744;
t1334 = -t1381 * t1595 + t1401 * t1601;
t1760 = t1275 * t1602 + t1334 * t1596;
t1633 = pkin(2) * t1561 + t1639;
t1389 = t1595 * t1633 - t1616 * t1601 + (-t1601 * t1621 + t1638) * pkin(11) + (-t1634 * t1601 - t1950) * t1596;
t1390 = t1601 * t1633 + t1616 * t1595 + (t1595 * t1621 + t1637) * pkin(11) + (t1601 * t1685 + t1634 * t1595 + ((t1595 * t1714 + t1601 * t1655) * qJD(1) + (pkin(2) * t1880 + pkin(11) * t1870) * t1886) * qJD(1)) * t1596;
t1742 = -t1389 * t1601 + t1390 * t1595;
t1303 = t1435 * t1587 + t1590 * t1742;
t1337 = t1389 * t1595 + t1390 * t1601;
t1754 = t1303 * t1602 + t1337 * t1596;
t1497 = -t1536 - t1537;
t1477 = -t1523 + t1628;
t1636 = (-qJD(3) + t1554) * t1539 - t1642;
t1728 = -t1477 * t1601 + t1595 * t1636;
t1388 = -t1497 * t1587 + t1590 * t1728;
t1420 = t1477 * t1595 + t1601 * t1636;
t1743 = t1388 * t1602 + t1420 * t1596;
t1515 = t1537 - t1536;
t1472 = t1539 * t1864 + t1642;
t1476 = t1523 + t1628;
t1729 = -t1472 * t1595 + t1476 * t1601;
t1395 = -t1515 * t1587 + t1590 * t1729;
t1419 = -t1472 * t1601 - t1476 * t1595;
t1741 = t1395 * t1602 + t1419 * t1596;
t1724 = t1503 * t1595 + t1945;
t1398 = -t1472 * t1587 + t1590 * t1724;
t1740 = t1398 * t1602 + t1449 * t1596;
t1475 = t1538 * t1864 + t1630;
t1727 = t1510 * t1601 + t1897;
t1403 = -t1475 * t1587 + t1590 * t1727;
t1739 = t1403 * t1602 + t1451 * t1596;
t1522 = -t1537 + t1552;
t1725 = t1522 * t1601 + t1947;
t1416 = -t1477 * t1587 + t1590 * t1725;
t1464 = -t1522 * t1595 + t1945;
t1734 = t1416 * t1602 + t1464 * t1596;
t1521 = t1536 - t1552;
t1726 = t1521 * t1595 - t1896;
t1417 = -t1587 * t1636 + t1590 * t1726;
t1465 = t1521 * t1601 + t1897;
t1733 = t1417 * t1602 + t1465 * t1596;
t1441 = t1504 * t1870 + (-t1539 * t1587 - t1554 * t1871) * t1538;
t1470 = -t1504 * t1595 - t1523 * t1601;
t1732 = t1441 * t1602 + t1470 * t1596;
t1627 = t1595 * t1628;
t1443 = t1590 * t1627 + (t1538 * t1587 + t1554 * t1870) * t1539;
t1471 = t1601 * (t1648 + t1894) + (-t1554 * t1539 + t1637) * t1595;
t1731 = t1443 * t1602 + t1471 * t1596;
t1700 = t1554 * (t1538 * t1595 - t1539 * t1601);
t1469 = -t1587 * t1647 + t1590 * t1700;
t1488 = (t1538 * t1601 + t1539 * t1595) * t1554;
t1730 = t1469 * t1602 + t1488 * t1596;
t1526 = t1596 * t1646 + (t1588 * g(3) - t1644) * t1602;
t1527 = t1596 * t1644 + t1639;
t1723 = -t1526 * t1602 + t1527 * t1596;
t1498 = t1526 * t1596 + t1527 * t1602;
t1565 = t1578 * t1852;
t1543 = t1565 + t1653;
t1564 = t1578 * t1853;
t1546 = -t1564 + t1827;
t1721 = t1543 * t1602 + t1546 * t1596;
t1544 = -t1565 + t1653;
t1545 = t1564 + t1827;
t1720 = -t1544 * t1602 + t1545 * t1596;
t1719 = t1555 * t1602 - t1888;
t1559 = t1577 - t1851;
t1718 = t1559 * t1602 + t1890;
t1717 = t1561 * t1596 + t1889;
t1560 = -t1577 + t1957;
t1716 = t1560 * t1596 + t1887;
t1550 = t1574 * t1603 - t1597 * t1575;
t1715 = t1588 * t1839;
t889 = -pkin(13) * t951 + (-pkin(14) * t1599 + t1931) * t976;
t912 = -pkin(4) * t951 + pkin(5) * t1098 - pkin(14) * t977;
t1686 = pkin(12) * t919 + t1594 * t889 + t1600 * t912;
t874 = pkin(13) * t952 + (-pkin(14) * t1593 + t1856) * t976;
t836 = -pkin(3) * t885 - t1586 * t874 + t1589 * t1686;
t840 = -t1594 * t912 + t1600 * t889 + (-t1586 * t885 - t1589 * t886) * pkin(12);
t1689 = pkin(11) * t864 + t1595 * t840 + t1601 * t836;
t835 = pkin(3) * t886 + t1586 * t1686 + t1589 * t874;
t853 = t1587 * t1825 + t1590 * t885;
t818 = -pkin(2) * t853 - t1587 * t835 + t1590 * t1689;
t821 = -t1595 * t836 + t1601 * t840 + (-t1587 * t853 - t1590 * t854) * pkin(11);
t837 = -t1596 * t854 + t1602 * t864;
t1696 = pkin(10) * t837 + t1596 * t821 + t1602 * t818;
t960 = -pkin(14) * t1169 - t976;
t941 = -pkin(13) * t1136 + t1169 * t1931 + t1599 * t960;
t944 = -pkin(4) * t1136 - pkin(5) * t1333 - pkin(14) * t1171 - t977;
t1675 = pkin(12) * t1069 + t1594 * t941 + t1600 * t944;
t933 = pkin(13) * t1137 + t1169 * t1856 + t1593 * t960;
t866 = -pkin(3) * t1025 - t1586 * t933 + t1589 * t1675;
t876 = -t1594 * t944 + t1600 * t941 + (-t1025 * t1586 - t1026 * t1589) * pkin(12);
t1688 = pkin(11) * t981 + t1595 * t876 + t1601 * t866;
t865 = pkin(3) * t1026 + t1586 * t1675 + t1589 * t933;
t939 = t1025 * t1590 + t1587 * t1811;
t833 = -pkin(2) * t939 - t1587 * t865 + t1590 * t1688;
t841 = -t1595 * t866 + t1601 * t876 + (-t1587 * t939 - t1590 * t940) * pkin(11);
t914 = -t1596 * t940 + t1602 * t981;
t1695 = pkin(10) * t914 + t1596 * t841 + t1602 * t833;
t1017 = -pkin(4) * t1195 + pkin(13) * t1046;
t1650 = pkin(12) * t1016 + (-pkin(13) * t1594 - t1932) * t1045;
t893 = -pkin(3) * t967 - t1017 * t1586 + t1589 * t1650;
t897 = (-pkin(13) * t1600 + t1933) * t1045 + (-t1586 * t967 - t1589 * t968) * pkin(12);
t1687 = pkin(11) * t934 + t1595 * t897 + t1601 * t893;
t892 = pkin(3) * t968 + t1017 * t1589 + t1586 * t1650;
t906 = t1587 * t1815 + t1590 * t967;
t839 = -pkin(2) * t906 - t1587 * t892 + t1590 * t1687;
t846 = -t1595 * t893 + t1601 * t897 + (-t1587 * t906 - t1590 * t907) * pkin(11);
t873 = -t1596 * t907 + t1602 * t934;
t1694 = pkin(10) * t873 + t1596 * t846 + t1602 * t839;
t1013 = -pkin(4) * t1156 - pkin(5) * t1248 - pkin(14) * t1224 + t1916;
t1020 = -pkin(5) * t1223 + t1042;
t1068 = -pkin(14) * t1223 + t1917;
t961 = -pkin(13) * t1156 - t1020 * t1593 + t1068 * t1599;
t1671 = pkin(12) * t1105 + t1013 * t1600 + t1594 * t961;
t953 = -pkin(4) * t1223 + pkin(13) * t1157 + t1020 * t1599 + t1068 * t1593;
t881 = -pkin(3) * t1053 - t1586 * t953 + t1589 * t1671;
t908 = -t1013 * t1594 + t1600 * t961 + (-t1053 * t1586 - t1054 * t1589) * pkin(12);
t1680 = pkin(11) * t1004 + t1595 * t908 + t1601 * t881;
t880 = pkin(3) * t1054 + t1586 * t1671 + t1589 * t953;
t958 = t1053 * t1590 + t1587 * t1805;
t843 = -pkin(2) * t958 - t1587 * t880 + t1590 * t1680;
t856 = -t1595 * t881 + t1601 * t908 + (-t1587 * t958 - t1590 * t959) * pkin(11);
t927 = t1004 * t1602 - t1596 * t959;
t1693 = pkin(10) * t927 + t1596 * t856 + t1602 * t843;
t1015 = -pkin(4) * t1162 - pkin(5) * t1252 - pkin(14) * t1232 - t1917;
t1022 = -pkin(5) * t1231 + t1043;
t1070 = -pkin(14) * t1231 + t1916;
t964 = -pkin(13) * t1162 - t1022 * t1593 + t1070 * t1599;
t1670 = pkin(12) * t1108 + t1015 * t1600 + t1594 * t964;
t956 = -pkin(4) * t1231 + pkin(13) * t1163 + t1022 * t1599 + t1070 * t1593;
t883 = -pkin(3) * t1058 - t1586 * t956 + t1589 * t1670;
t911 = -t1015 * t1594 + t1600 * t964 + (-t1058 * t1586 - t1059 * t1589) * pkin(12);
t1679 = pkin(11) * t1008 + t1595 * t911 + t1601 * t883;
t882 = pkin(3) * t1059 + t1586 * t1670 + t1589 * t956;
t962 = t1058 * t1590 + t1587 * t1804;
t845 = -pkin(2) * t962 - t1587 * t882 + t1590 * t1679;
t857 = -t1595 * t883 + t1601 * t911 + (-t1587 * t962 - t1590 * t963) * pkin(11);
t928 = t1008 * t1602 - t1596 * t963;
t1692 = pkin(10) * t928 + t1596 * t857 + t1602 * t845;
t1033 = t1138 * t1590 + t1587 * t1791;
t1021 = pkin(4) * t1367 + pkin(13) * t1236 + t1046;
t1027 = -pkin(13) * t1234 - t1045;
t1652 = pkin(12) * t1203 + t1027 * t1594 - t1234 * t1932;
t938 = -pkin(3) * t1138 - t1021 * t1586 + t1589 * t1652;
t973 = t1234 * t1933 + t1027 * t1600 + (-t1138 * t1586 - t1139 * t1589) * pkin(12);
t1678 = pkin(11) * t1083 + t1595 * t973 + t1601 * t938;
t937 = pkin(3) * t1139 + t1021 * t1589 + t1586 * t1652;
t868 = -pkin(2) * t1033 - t1587 * t937 + t1590 * t1678;
t884 = -t1595 * t938 + t1601 * t973 + (-t1033 * t1587 - t1034 * t1590) * pkin(11);
t991 = -t1034 * t1596 + t1083 * t1602;
t1691 = pkin(10) * t991 + t1596 * t884 + t1602 * t868;
t1002 = t1106 * t1590 + t1587 * t1793;
t1052 = pkin(3) * t1107 + t1140 * t1926;
t1032 = (-t1106 * t1586 - t1107 * t1589) * pkin(12);
t1051 = -pkin(3) * t1106 + t1140 * t1925;
t1664 = pkin(11) * t1050 + t1032 * t1595 + t1051 * t1601;
t910 = -pkin(2) * t1002 - t1052 * t1587 + t1590 * t1664;
t916 = t1032 * t1601 - t1051 * t1595 + (-t1002 * t1587 - t1003 * t1590) * pkin(11);
t957 = -t1003 * t1596 + t1050 * t1602;
t1690 = pkin(10) * t957 + t1596 * t916 + t1602 * t910;
t1010 = -t1065 * t1596 + t1110 * t1602;
t1064 = t1178 * t1590 + t1587 * t1780;
t1129 = -pkin(4) * t1951 + pkin(13) * t1292 - t1914;
t1094 = -pkin(4) * t1291 + t1121;
t1155 = -pkin(13) * t1291 + t1915;
t1659 = pkin(12) * t1219 + t1094 * t1600 + t1155 * t1594;
t983 = -pkin(3) * t1178 - t1129 * t1586 + t1589 * t1659;
t998 = -t1094 * t1594 + t1155 * t1600 + (-t1178 * t1586 - t1179 * t1589) * pkin(12);
t1677 = pkin(11) * t1110 + t1595 * t998 + t1601 * t983;
t982 = pkin(3) * t1179 + t1129 * t1589 + t1586 * t1659;
t888 = -pkin(2) * t1064 - t1587 * t982 + t1590 * t1677;
t913 = -t1595 * t983 + t1601 * t998 + (-t1064 * t1587 - t1065 * t1590) * pkin(11);
t1683 = pkin(10) * t1010 + t1596 * t913 + t1602 * t888;
t1014 = -t1067 * t1596 + t1119 * t1602;
t1066 = t1182 * t1590 + t1587 * t1779;
t1131 = -pkin(4) * t1325 + pkin(13) * t1300 + t1915;
t1095 = -pkin(4) * t1299 + t1122;
t1160 = -pkin(13) * t1299 + t1914;
t1658 = pkin(12) * t1222 + t1095 * t1600 + t1160 * t1594;
t985 = -pkin(3) * t1182 - t1131 * t1586 + t1589 * t1658;
t999 = -t1095 * t1594 + t1160 * t1600 + (-t1182 * t1586 - t1183 * t1589) * pkin(12);
t1676 = pkin(11) * t1119 + t1595 * t999 + t1601 * t985;
t984 = pkin(3) * t1183 + t1131 * t1589 + t1586 * t1658;
t891 = -pkin(2) * t1066 - t1587 * t984 + t1590 * t1676;
t915 = -t1595 * t985 + t1601 * t999 + (-t1066 * t1587 - t1067 * t1590) * pkin(11);
t1682 = pkin(10) * t1014 + t1596 * t915 + t1602 * t891;
t1096 = -t1159 * t1596 + t1206 * t1602;
t1657 = pkin(12) * t1309 + t1140;
t1086 = pkin(3) * t1273 + t1586 * t1657;
t1158 = t1272 * t1590 + t1587 * t1761;
t1080 = (-t1272 * t1586 - t1273 * t1589) * pkin(12) - t1768;
t1087 = -pkin(3) * t1272 + t1589 * t1657;
t1663 = pkin(11) * t1206 + t1080 * t1595 + t1087 * t1601;
t955 = -pkin(2) * t1158 - t1086 * t1587 + t1590 * t1663;
t978 = t1080 * t1601 - t1087 * t1595 + (-t1158 * t1587 - t1159 * t1590) * pkin(11);
t1681 = pkin(10) * t1096 + t1596 * t978 + t1602 * t955;
t1112 = -pkin(3) * t1295 + t1220 * t1586 + t1589 * t1829;
t1161 = -t1913 + (-t1295 * t1586 - t1296 * t1589) * pkin(12);
t1186 = t1295 * t1590 + t1587 * t1757;
t1007 = -t1112 * t1595 + t1161 * t1601 + (-t1186 * t1587 - t1187 * t1590) * pkin(11);
t1130 = -t1187 * t1596 + t1242 * t1602;
t1111 = pkin(3) * t1296 - t1220 * t1589 + t1586 * t1829;
t1662 = pkin(11) * t1242 + t1112 * t1601 + t1161 * t1595;
t988 = -pkin(2) * t1186 - t1111 * t1587 + t1590 * t1662;
t1673 = pkin(10) * t1130 + t1007 * t1596 + t1602 * t988;
t1118 = -pkin(3) * t1297 + t1221 * t1586 + t1589 * t1828;
t1164 = -t1912 + (-t1297 * t1586 - t1298 * t1589) * pkin(12);
t1192 = t1297 * t1590 + t1587 * t1756;
t1009 = -t1118 * t1595 + t1164 * t1601 + (-t1192 * t1587 - t1193 * t1590) * pkin(11);
t1132 = -t1193 * t1596 + t1257 * t1602;
t1117 = pkin(3) * t1298 - t1221 * t1589 + t1586 * t1828;
t1661 = pkin(11) * t1257 + t1118 * t1601 + t1164 * t1595;
t990 = -pkin(2) * t1192 - t1117 * t1587 + t1590 * t1661;
t1672 = pkin(10) * t1132 + t1009 * t1596 + t1602 * t990;
t1302 = -t1435 * t1590 + t1587 * t1742;
t1218 = (-t1302 * t1587 - t1303 * t1590) * pkin(11);
t1237 = -t1303 * t1596 + t1337 * t1602;
t1238 = -pkin(2) * t1302 + t1337 * t1927;
t1669 = pkin(10) * t1237 + t1218 * t1596 + t1238 * t1602;
t1387 = t1497 * t1590 + t1587 * t1728;
t1258 = (-t1387 * t1587 - t1388 * t1590) * pkin(11) - t1742;
t1660 = pkin(11) * t1420 + t1337;
t1264 = -pkin(2) * t1387 + t1590 * t1660;
t1345 = -t1388 * t1596 + t1420 * t1602;
t1668 = pkin(10) * t1345 + t1258 * t1596 + t1264 * t1602;
t1397 = t1472 * t1590 + t1587 * t1724;
t1288 = -pkin(2) * t1397 + t1389 * t1587 + t1590 * t1831;
t1314 = -t1905 + (-t1397 * t1587 - t1398 * t1590) * pkin(11);
t1365 = -t1398 * t1596 + t1449 * t1602;
t1667 = pkin(10) * t1365 + t1288 * t1602 + t1314 * t1596;
t1402 = t1475 * t1590 + t1587 * t1727;
t1290 = -pkin(2) * t1402 + t1390 * t1587 + t1590 * t1830;
t1315 = -t1904 + (-t1402 * t1587 - t1403 * t1590) * pkin(11);
t1366 = -t1403 * t1596 + t1451 * t1602;
t1666 = pkin(10) * t1366 + t1290 * t1602 + t1315 * t1596;
t1517 = t1544 * t1596 + t1545 * t1602;
t1665 = pkin(10) * t1517 + t1498;
t1542 = (t1865 * t1918 + t1860) * t1588;
t1582 = t1588 * t1583;
t1570 = t1597 * qJDD(1) + t1603 * t1937;
t1563 = t1862 * t1883;
t1562 = (t1584 - t1585) * t1883;
t1558 = -pkin(9) * t1570 + g(3) * t1603;
t1547 = t1862 * t1854;
t1541 = (-t1584 * t1578 * qJD(1) + t1602 * t1704) * t1588;
t1540 = -t1585 * t1854 - t1596 * t1827;
t1531 = t1560 * t1602 - t1888;
t1530 = -t1559 * t1596 + t1889;
t1525 = t1542 * t1868 + t1582 * t1844;
t1524 = (-t1582 * t1867 + (-t1576 + (-qJD(1) * t1884 + t1859) * t1588) * t1591) * t1602;
t1518 = -t1543 * t1596 + t1546 * t1602;
t1514 = t1546 * t1588 + t1591 * t1717;
t1513 = -t1545 * t1588 + t1591 * t1716;
t1512 = -t1544 * t1588 + t1591 * t1718;
t1511 = -t1546 * t1591 + t1588 * t1717;
t1509 = -t1542 * t1588 + t1591 * t1719;
t1508 = t1542 * t1591 + t1588 * t1719;
t1507 = -t1562 * t1588 + t1591 * t1721;
t1506 = t1563 * t1588 + t1591 * t1720;
t1505 = -t1563 * t1591 + t1588 * t1720;
t1487 = -t1597 * t1514 + t1532 * t1603;
t1486 = t1514 * t1603 + t1597 * t1532;
t1483 = -t1597 * t1509 + t1528 * t1603;
t1482 = t1509 * t1603 + t1597 * t1528;
t1479 = t1549 * t1588 + t1591 * t1723;
t1478 = -t1549 * t1591 + t1588 * t1723;
t1468 = t1587 * t1700 + t1590 * t1647;
t1467 = -t1597 * t1506 + t1517 * t1603;
t1466 = t1506 * t1603 + t1597 * t1517;
t1450 = -t1892 + (-t1511 * t1588 - t1514 * t1591) * pkin(10);
t1448 = -t1891 + (-t1508 * t1588 - t1509 * t1591) * pkin(10);
t1447 = -pkin(1) * t1511 + t1526 * t1588 + t1591 * t1832;
t1444 = -pkin(1) * t1508 + t1527 * t1588 + t1591 * t1833;
t1442 = t1587 * t1627 + (-t1538 * t1590 + t1554 * t1878) * t1539;
t1440 = t1504 * t1878 + (t1539 * t1590 - t1554 * t1880) * t1538;
t1438 = -pkin(1) * t1478 + t1498 * t1929;
t1437 = -t1597 * t1479 + t1498 * t1603;
t1436 = t1479 * t1603 + t1597 * t1498;
t1434 = -pkin(1) * t1505 + t1591 * t1665;
t1431 = -t1469 * t1596 + t1488 * t1602;
t1428 = (-t1478 * t1588 - t1479 * t1591) * pkin(10);
t1422 = (-t1505 * t1588 - t1506 * t1591) * pkin(10) - t1723;
t1415 = t1587 * t1726 + t1590 * t1636;
t1414 = t1477 * t1590 + t1587 * t1725;
t1394 = t1515 * t1590 + t1587 * t1729;
t1393 = -t1443 * t1596 + t1471 * t1602;
t1392 = -t1441 * t1596 + t1470 * t1602;
t1386 = -t1468 * t1588 + t1591 * t1730;
t1379 = -t1417 * t1596 + t1465 * t1602;
t1378 = -t1416 * t1596 + t1464 * t1602;
t1358 = -t1442 * t1588 + t1591 * t1731;
t1357 = -t1440 * t1588 + t1591 * t1732;
t1349 = -t1395 * t1596 + t1419 * t1602;
t1336 = -t1415 * t1588 + t1591 * t1733;
t1335 = -t1414 * t1588 + t1591 * t1734;
t1332 = -t1402 * t1588 + t1591 * t1739;
t1331 = t1402 * t1591 + t1588 * t1739;
t1329 = -t1397 * t1588 + t1591 * t1740;
t1328 = t1397 * t1591 + t1588 * t1740;
t1301 = -t1394 * t1588 + t1591 * t1741;
t1294 = -t1387 * t1588 + t1591 * t1743;
t1293 = t1387 * t1591 + t1588 * t1743;
t1289 = pkin(2) * t1403 - t1390 * t1590 + t1587 * t1830;
t1287 = pkin(2) * t1398 - t1389 * t1590 + t1587 * t1831;
t1274 = t1380 * t1590 + t1587 * t1744;
t1270 = -t1597 * t1332 + t1366 * t1603;
t1269 = t1332 * t1603 + t1597 * t1366;
t1268 = -t1597 * t1329 + t1365 * t1603;
t1267 = t1329 * t1603 + t1597 * t1365;
t1263 = pkin(2) * t1388 + t1587 * t1660;
t1241 = -t1597 * t1294 + t1345 * t1603;
t1240 = t1294 * t1603 + t1597 * t1345;
t1239 = pkin(2) * t1303 + t1337 * t1928;
t1226 = t1341 * t1590 + t1587 * t1748;
t1225 = t1339 * t1590 + t1587 * t1749;
t1217 = -t1275 * t1596 + t1334 * t1602;
t1198 = t1305 * t1590 + t1587 * t1752;
t1197 = t1304 * t1590 + t1587 * t1753;
t1185 = -t1302 * t1588 + t1591 * t1754;
t1184 = t1302 * t1591 + t1588 * t1754;
t1181 = -t1228 * t1596 + t1281 * t1602;
t1180 = -t1227 * t1596 + t1280 * t1602;
t1172 = t1282 * t1590 + t1587 * t1759;
t1167 = -t1274 * t1588 + t1591 * t1760;
t1153 = t1265 * t1590 + t1587 * t1762;
t1152 = -t1290 * t1596 + t1315 * t1602 + (-t1331 * t1588 - t1332 * t1591) * pkin(10);
t1151 = -t1288 * t1596 + t1314 * t1602 + (-t1328 * t1588 - t1329 * t1591) * pkin(10);
t1142 = -t1200 * t1596 + t1262 * t1602;
t1141 = -t1199 * t1596 + t1261 * t1602;
t1128 = -pkin(1) * t1331 - t1289 * t1588 + t1591 * t1666;
t1127 = -t1597 * t1185 + t1237 * t1603;
t1126 = t1185 * t1603 + t1597 * t1237;
t1123 = -pkin(1) * t1328 - t1287 * t1588 + t1591 * t1667;
t1114 = -t1226 * t1588 + t1591 * t1766;
t1113 = -t1225 * t1588 + t1591 * t1767;
t1109 = t1258 * t1602 - t1264 * t1596 + (-t1293 * t1588 - t1294 * t1591) * pkin(10);
t1104 = -t1173 * t1596 + t1211 * t1602;
t1101 = t1213 * t1590 + t1587 * t1769;
t1100 = t1212 * t1590 + t1587 * t1770;
t1093 = -t1154 * t1596 + t1202 * t1602;
t1085 = -pkin(1) * t1293 - t1263 * t1588 + t1591 * t1668;
t1082 = -t1198 * t1588 + t1591 * t1773;
t1081 = -t1197 * t1588 + t1591 * t1774;
t1079 = -t1192 * t1588 + t1591 * t1775;
t1078 = t1192 * t1591 + t1588 * t1775;
t1076 = -t1186 * t1588 + t1591 * t1778;
t1075 = t1186 * t1591 + t1588 * t1778;
t1072 = t1189 * t1590 + t1587 * t1776;
t1071 = t1188 * t1590 + t1587 * t1777;
t1057 = -t1172 * t1588 + t1591 * t1783;
t1056 = -t1103 * t1596 + t1166 * t1602;
t1055 = -t1102 * t1596 + t1165 * t1602;
t1049 = -t1158 * t1588 + t1591 * t1785;
t1048 = t1158 * t1591 + t1588 * t1785;
t1047 = t1218 * t1602 - t1238 * t1596 + (-t1184 * t1588 - t1185 * t1591) * pkin(10);
t1044 = -t1153 * t1588 + t1591 * t1787;
t1040 = t1145 * t1590 + t1587 * t1789;
t1037 = -pkin(1) * t1184 - t1239 * t1588 + t1591 * t1669;
t1035 = t1143 * t1590 + t1587 * t1790;
t1029 = -t1597 * t1079 + t1132 * t1603;
t1028 = t1079 * t1603 + t1597 * t1132;
t1024 = -t1597 * t1076 + t1130 * t1603;
t1023 = t1076 * t1603 + t1597 * t1130;
t1019 = -t1074 * t1596 + t1125 * t1602;
t1018 = -t1073 * t1596 + t1124 * t1602;
t1006 = -t1101 * t1588 + t1591 * t1794;
t1005 = -t1100 * t1588 + t1591 * t1795;
t1001 = -t1597 * t1049 + t1096 * t1603;
t1000 = t1049 * t1603 + t1597 * t1096;
t997 = -t1041 * t1596 + t1092 * t1602;
t994 = t1089 * t1590 + t1587 * t1796;
t993 = t1088 * t1590 + t1587 * t1797;
t992 = -t1036 * t1596 + t1084 * t1602;
t989 = pkin(2) * t1193 + t1117 * t1590 + t1587 * t1661;
t987 = pkin(2) * t1187 + t1111 * t1590 + t1587 * t1662;
t980 = -t1072 * t1588 + t1591 * t1798;
t979 = -t1071 * t1588 + t1591 * t1799;
t975 = -t1066 * t1588 + t1591 * t1800;
t974 = t1066 * t1591 + t1588 * t1800;
t970 = t1061 * t1590 + t1587 * t1802;
t969 = t1060 * t1590 + t1587 * t1803;
t966 = -t1064 * t1588 + t1591 * t1801;
t965 = t1064 * t1591 + t1588 * t1801;
t954 = pkin(2) * t1159 + t1086 * t1590 + t1587 * t1663;
t950 = -t1040 * t1588 + t1591 * t1807;
t949 = t1039 * t1602 - t1596 * t996;
t948 = t1038 * t1602 - t1596 * t995;
t947 = -t1035 * t1588 + t1591 * t1808;
t946 = -t1033 * t1588 + t1591 * t1809;
t945 = t1033 * t1591 + t1588 * t1809;
t942 = t1030 * t1590 + t1587 * t1810;
t936 = t1014 * t1603 - t1597 * t975;
t935 = t1597 * t1014 + t1603 * t975;
t932 = t1012 * t1602 - t1596 * t972;
t931 = t1011 * t1602 - t1596 * t971;
t930 = t1010 * t1603 - t1597 * t966;
t929 = t1597 * t1010 + t1603 * t966;
t926 = -t1002 * t1588 + t1591 * t1812;
t925 = t1002 * t1591 + t1588 * t1812;
t924 = -t1588 * t994 + t1591 * t1813;
t923 = -t1588 * t993 + t1591 * t1814;
t922 = -t1597 * t946 + t1603 * t991;
t921 = t1597 * t991 + t1603 * t946;
t920 = t1009 * t1602 - t1596 * t990 + (-t1078 * t1588 - t1079 * t1591) * pkin(10);
t918 = t1007 * t1602 - t1596 * t988 + (-t1075 * t1588 - t1076 * t1591) * pkin(10);
t917 = -t1596 * t943 + t1602 * t986;
t909 = pkin(2) * t1003 + t1052 * t1590 + t1587 * t1664;
t905 = -t1588 * t970 + t1591 * t1816;
t904 = -t1588 * t969 + t1591 * t1817;
t903 = -t1588 * t962 + t1591 * t1818;
t902 = t1588 * t1818 + t1591 * t962;
t901 = -pkin(1) * t1078 - t1588 * t989 + t1591 * t1672;
t900 = -pkin(1) * t1075 - t1588 * t987 + t1591 * t1673;
t899 = -t1588 * t958 + t1591 * t1819;
t898 = t1588 * t1819 + t1591 * t958;
t896 = -t1597 * t926 + t1603 * t957;
t895 = t1597 * t957 + t1603 * t926;
t894 = -t1596 * t955 + t1602 * t978 + (-t1048 * t1588 - t1049 * t1591) * pkin(10);
t890 = pkin(2) * t1067 + t1587 * t1676 + t1590 * t984;
t887 = pkin(2) * t1065 + t1587 * t1677 + t1590 * t982;
t879 = -t1588 * t942 + t1591 * t1821;
t878 = -t1588 * t939 + t1591 * t1822;
t877 = t1588 * t1822 + t1591 * t939;
t875 = -pkin(1) * t1048 - t1588 * t954 + t1591 * t1681;
t872 = -t1597 * t903 + t1603 * t928;
t871 = t1597 * t928 + t1603 * t903;
t870 = -t1597 * t899 + t1603 * t927;
t869 = t1597 * t927 + t1603 * t899;
t867 = pkin(2) * t1034 + t1587 * t1678 + t1590 * t937;
t863 = -t1597 * t878 + t1603 * t914;
t862 = t1597 * t914 + t1603 * t878;
t861 = -t1588 * t906 + t1591 * t1823;
t860 = t1588 * t1823 + t1591 * t906;
t859 = -t1596 * t891 + t1602 * t915 + (-t1588 * t974 - t1591 * t975) * pkin(10);
t858 = -t1596 * t888 + t1602 * t913 + (-t1588 * t965 - t1591 * t966) * pkin(10);
t855 = -t1596 * t910 + t1602 * t916 + (-t1588 * t925 - t1591 * t926) * pkin(10);
t852 = -pkin(1) * t974 - t1588 * t890 + t1591 * t1682;
t851 = -pkin(1) * t925 - t1588 * t909 + t1591 * t1690;
t850 = -pkin(1) * t965 - t1588 * t887 + t1591 * t1683;
t849 = -t1596 * t868 + t1602 * t884 + (-t1588 * t945 - t1591 * t946) * pkin(10);
t848 = -t1597 * t861 + t1603 * t873;
t847 = t1597 * t873 + t1603 * t861;
t844 = pkin(2) * t963 + t1587 * t1679 + t1590 * t882;
t842 = pkin(2) * t959 + t1587 * t1680 + t1590 * t880;
t838 = pkin(2) * t907 + t1587 * t1687 + t1590 * t892;
t834 = -pkin(1) * t945 - t1588 * t867 + t1591 * t1691;
t832 = pkin(2) * t940 + t1587 * t1688 + t1590 * t865;
t831 = -t1588 * t853 + t1591 * t1824;
t830 = t1588 * t1824 + t1591 * t853;
t829 = -t1596 * t845 + t1602 * t857 + (-t1588 * t902 - t1591 * t903) * pkin(10);
t828 = -t1596 * t843 + t1602 * t856 + (-t1588 * t898 - t1591 * t899) * pkin(10);
t827 = -pkin(1) * t902 - t1588 * t844 + t1591 * t1692;
t826 = -pkin(1) * t898 - t1588 * t842 + t1591 * t1693;
t825 = -t1596 * t833 + t1602 * t841 + (-t1588 * t877 - t1591 * t878) * pkin(10);
t824 = -t1597 * t831 + t1603 * t837;
t823 = t1597 * t837 + t1603 * t831;
t822 = -t1596 * t839 + t1602 * t846 + (-t1588 * t860 - t1591 * t861) * pkin(10);
t820 = -pkin(1) * t860 - t1588 * t838 + t1591 * t1694;
t819 = -pkin(1) * t877 - t1588 * t832 + t1591 * t1695;
t817 = pkin(2) * t854 + t1587 * t1689 + t1590 * t835;
t816 = -t1596 * t818 + t1602 * t821 + (-t1588 * t830 - t1591 * t831) * pkin(10);
t815 = -pkin(1) * t830 - t1588 * t817 + t1591 * t1696;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1570, -t1571, 0, t1551, 0, 0, 0, 0, 0, 0, t1487, t1483, t1467, t1437, 0, 0, 0, 0, 0, 0, t1268, t1270, t1241, t1127, 0, 0, 0, 0, 0, 0, t1024, t1029, t1001, t896, 0, 0, 0, 0, 0, 0, t930, t936, t922, t848, 0, 0, 0, 0, 0, 0, t870, t872, t863, t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1571, -t1570, 0, t1550, 0, 0, 0, 0, 0, 0, t1486, t1482, t1466, t1436, 0, 0, 0, 0, 0, 0, t1267, t1269, t1240, t1126, 0, 0, 0, 0, 0, 0, t1023, t1028, t1000, t895, 0, 0, 0, 0, 0, 0, t929, t935, t921, t847, 0, 0, 0, 0, 0, 0, t869, t871, t862, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1511, t1508, t1505, t1478, 0, 0, 0, 0, 0, 0, t1328, t1331, t1293, t1184, 0, 0, 0, 0, 0, 0, t1075, t1078, t1048, t925, 0, 0, 0, 0, 0, 0, t965, t974, t945, t860, 0, 0, 0, 0, 0, 0, t898, t902, t877, t830; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1571, 0, -t1570, 0, t1834, -t1558, -t1550, -pkin(9) * t1550, -t1597 * t1525 + t1541 * t1603, -t1597 * t1507 + t1518 * t1603, -t1597 * t1512 + t1530 * t1603, -t1597 * t1524 + t1540 * t1603, -t1597 * t1513 + t1531 * t1603, t1603 * t1547 + t1597 * t1715, -pkin(9) * t1486 - t1597 * t1447 + t1450 * t1603, -pkin(9) * t1482 - t1597 * t1444 + t1448 * t1603, -pkin(9) * t1466 + t1422 * t1603 - t1597 * t1434, -pkin(9) * t1436 + t1428 * t1603 - t1597 * t1438, -t1597 * t1358 + t1393 * t1603, -t1597 * t1301 + t1349 * t1603, -t1597 * t1335 + t1378 * t1603, -t1597 * t1357 + t1392 * t1603, -t1597 * t1336 + t1379 * t1603, -t1597 * t1386 + t1431 * t1603, -pkin(9) * t1267 - t1597 * t1123 + t1151 * t1603, -pkin(9) * t1269 - t1597 * t1128 + t1152 * t1603, -pkin(9) * t1240 - t1597 * t1085 + t1109 * t1603, -pkin(9) * t1126 - t1597 * t1037 + t1047 * t1603, -t1597 * t1114 + t1181 * t1603, -t1597 * t1057 + t1104 * t1603, -t1597 * t1081 + t1141 * t1603, -t1597 * t1113 + t1180 * t1603, -t1597 * t1082 + t1142 * t1603, -t1597 * t1167 + t1217 * t1603, -pkin(9) * t1023 - t1597 * t900 + t1603 * t918, -pkin(9) * t1028 - t1597 * t901 + t1603 * t920, -pkin(9) * t1000 - t1597 * t875 + t1603 * t894, -pkin(9) * t895 - t1597 * t851 + t1603 * t855, -t1597 * t1006 + t1056 * t1603, -t1597 * t950 + t1603 * t997, t1018 * t1603 - t1597 * t979, -t1597 * t1005 + t1055 * t1603, t1019 * t1603 - t1597 * t980, -t1597 * t1044 + t1093 * t1603, -pkin(9) * t929 - t1597 * t850 + t1603 * t858, -pkin(9) * t935 - t1597 * t852 + t1603 * t859, -pkin(9) * t921 - t1597 * t834 + t1603 * t849, -pkin(9) * t847 - t1597 * t820 + t1603 * t822, -t1597 * t924 + t1603 * t949, -t1597 * t879 + t1603 * t917, -t1597 * t904 + t1603 * t931, -t1597 * t923 + t1603 * t948, -t1597 * t905 + t1603 * t932, -t1597 * t947 + t1603 * t992, -pkin(9) * t869 - t1597 * t826 + t1603 * t828, -pkin(9) * t871 - t1597 * t827 + t1603 * t829, -pkin(9) * t862 - t1597 * t819 + t1603 * t825, -pkin(9) * t823 - t1597 * t815 + t1603 * t816; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1570, 0, t1571, 0, t1558, t1834, t1551, pkin(9) * t1551, t1525 * t1603 + t1597 * t1541, t1507 * t1603 + t1597 * t1518, t1512 * t1603 + t1597 * t1530, t1524 * t1603 + t1597 * t1540, t1513 * t1603 + t1597 * t1531, t1597 * t1547 - t1603 * t1715, pkin(9) * t1487 + t1447 * t1603 + t1597 * t1450, pkin(9) * t1483 + t1444 * t1603 + t1597 * t1448, pkin(9) * t1467 + t1597 * t1422 + t1434 * t1603, pkin(9) * t1437 + t1597 * t1428 + t1438 * t1603, t1358 * t1603 + t1597 * t1393, t1301 * t1603 + t1597 * t1349, t1335 * t1603 + t1597 * t1378, t1357 * t1603 + t1597 * t1392, t1336 * t1603 + t1597 * t1379, t1386 * t1603 + t1597 * t1431, pkin(9) * t1268 + t1123 * t1603 + t1597 * t1151, pkin(9) * t1270 + t1128 * t1603 + t1597 * t1152, pkin(9) * t1241 + t1085 * t1603 + t1597 * t1109, pkin(9) * t1127 + t1037 * t1603 + t1597 * t1047, t1114 * t1603 + t1597 * t1181, t1057 * t1603 + t1597 * t1104, t1081 * t1603 + t1597 * t1141, t1113 * t1603 + t1597 * t1180, t1082 * t1603 + t1597 * t1142, t1167 * t1603 + t1597 * t1217, pkin(9) * t1024 + t1597 * t918 + t1603 * t900, pkin(9) * t1029 + t1597 * t920 + t1603 * t901, pkin(9) * t1001 + t1597 * t894 + t1603 * t875, pkin(9) * t896 + t1597 * t855 + t1603 * t851, t1006 * t1603 + t1597 * t1056, t1597 * t997 + t1603 * t950, t1597 * t1018 + t1603 * t979, t1005 * t1603 + t1597 * t1055, t1597 * t1019 + t1603 * t980, t1044 * t1603 + t1597 * t1093, pkin(9) * t930 + t1597 * t858 + t1603 * t850, pkin(9) * t936 + t1597 * t859 + t1603 * t852, pkin(9) * t922 + t1597 * t849 + t1603 * t834, pkin(9) * t848 + t1597 * t822 + t1603 * t820, t1597 * t949 + t1603 * t924, t1597 * t917 + t1603 * t879, t1597 * t931 + t1603 * t904, t1597 * t948 + t1603 * t923, t1597 * t932 + t1603 * t905, t1597 * t992 + t1603 * t947, pkin(9) * t870 + t1597 * t828 + t1603 * t826, pkin(9) * t872 + t1597 * t829 + t1603 * t827, pkin(9) * t863 + t1597 * t825 + t1603 * t819, pkin(9) * t824 + t1597 * t816 + t1603 * t815; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1574, t1575, 0, 0, (t1860 + (qJD(2) - t1841) * t1918) * t1949, t1562 * t1591 + t1588 * t1721, t1544 * t1591 + t1588 * t1718, (qJD(1) * t1841 * t1949 + t1588 * t1827) * t1602, t1545 * t1591 + t1588 * t1716, t1591 * t1839, pkin(1) * t1514 - t1526 * t1591 + t1588 * t1832, pkin(1) * t1509 - t1527 * t1591 + t1588 * t1833, pkin(1) * t1506 + t1588 * t1665, pkin(1) * t1479 + t1498 * t1930, t1442 * t1591 + t1588 * t1731, t1394 * t1591 + t1588 * t1741, t1414 * t1591 + t1588 * t1734, t1440 * t1591 + t1588 * t1732, t1415 * t1591 + t1588 * t1733, t1468 * t1591 + t1588 * t1730, pkin(1) * t1329 + t1287 * t1591 + t1588 * t1667, pkin(1) * t1332 + t1289 * t1591 + t1588 * t1666, pkin(1) * t1294 + t1263 * t1591 + t1588 * t1668, pkin(1) * t1185 + t1239 * t1591 + t1588 * t1669, t1226 * t1591 + t1588 * t1766, t1172 * t1591 + t1588 * t1783, t1197 * t1591 + t1588 * t1774, t1225 * t1591 + t1588 * t1767, t1198 * t1591 + t1588 * t1773, t1274 * t1591 + t1588 * t1760, pkin(1) * t1076 + t1588 * t1673 + t1591 * t987, pkin(1) * t1079 + t1588 * t1672 + t1591 * t989, pkin(1) * t1049 + t1588 * t1681 + t1591 * t954, pkin(1) * t926 + t1588 * t1690 + t1591 * t909, t1101 * t1591 + t1588 * t1794, t1040 * t1591 + t1588 * t1807, t1071 * t1591 + t1588 * t1799, t1100 * t1591 + t1588 * t1795, t1072 * t1591 + t1588 * t1798, t1153 * t1591 + t1588 * t1787, pkin(1) * t966 + t1588 * t1683 + t1591 * t887, pkin(1) * t975 + t1588 * t1682 + t1591 * t890, pkin(1) * t946 + t1588 * t1691 + t1591 * t867, pkin(1) * t861 + t1588 * t1694 + t1591 * t838, t1588 * t1813 + t1591 * t994, t1588 * t1821 + t1591 * t942, t1588 * t1817 + t1591 * t969, t1588 * t1814 + t1591 * t993, t1588 * t1816 + t1591 * t970, t1035 * t1591 + t1588 * t1808, pkin(1) * t899 + t1588 * t1693 + t1591 * t842, pkin(1) * t903 + t1588 * t1692 + t1591 * t844, pkin(1) * t878 + t1588 * t1695 + t1591 * t832, pkin(1) * t831 + t1588 * t1696 + t1591 * t817;];
tauB_reg  = t1;
