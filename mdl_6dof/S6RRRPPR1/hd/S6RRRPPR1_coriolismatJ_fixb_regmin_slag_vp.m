% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6,theta4,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:23:10
% EndTime: 2019-03-09 15:23:37
% DurationCPUTime: 15.59s
% Computational Cost: add. (18925->585), mult. (37145->777), div. (0->0), fcn. (44897->10), ass. (0->490)
t569 = qJD(2) + qJD(3);
t446 = sin(qJ(3));
t447 = sin(qJ(2));
t449 = cos(qJ(2));
t725 = cos(qJ(3));
t411 = t446 * t447 - t449 * t725;
t413 = -t446 * t449 - t447 * t725;
t443 = sin(pkin(10));
t706 = cos(pkin(10));
t361 = -t706 * t411 + t413 * t443;
t436 = -pkin(2) * t449 - pkin(1);
t386 = t411 * pkin(3) + t436;
t394 = t706 * t413;
t635 = t443 * t411;
t753 = -t394 - t635;
t214 = -pkin(4) * t361 - qJ(5) * t753 + t386;
t444 = cos(pkin(11));
t442 = sin(pkin(11));
t747 = pkin(7) + pkin(8);
t420 = t747 * t447;
t421 = t747 * t449;
t478 = -t420 * t725 - t446 * t421;
t752 = t413 * qJ(4) + t478;
t759 = t443 * t752;
t414 = t725 * t421;
t630 = t446 * t420;
t751 = -t414 + t630;
t492 = t411 * qJ(4) + t751;
t777 = t706 * t492;
t780 = -t777 + t759;
t788 = t780 * t442;
t105 = t214 * t444 - t788;
t775 = t443 * t492 + t752 * t706;
t795 = -t775 * t361 + t780 * t753;
t799 = t105 * t753 + t442 * t795;
t787 = t780 * t444;
t106 = t442 * t214 + t787;
t798 = -t106 * t753 + t444 * t795;
t448 = cos(qJ(6));
t628 = t448 * t444;
t445 = sin(qJ(6));
t632 = t445 * t442;
t408 = -t628 + t632;
t639 = t442 * t361;
t783 = pkin(5) * t639 + t780;
t797 = t783 * t408;
t629 = t448 * t442;
t631 = t445 * t444;
t410 = t629 + t631;
t796 = t783 * t410;
t696 = t106 * t444;
t698 = t105 * t442;
t491 = -t698 / 0.2e1 + t696 / 0.2e1;
t779 = -t777 / 0.2e1 + t759 / 0.2e1;
t785 = -t491 + t779;
t794 = qJD(1) * t785;
t793 = qJD(5) * t785;
t784 = t779 + t491;
t792 = t784 * qJD(5);
t766 = t753 * t442;
t151 = pkin(5) * t766 - t775;
t329 = t753 * t632;
t233 = t628 * t753 - t329;
t456 = -t361 * pkin(5) - t788 + (-pkin(9) * t753 + t214) * t444;
t85 = -pkin(9) * t766 + t106;
t46 = t445 * t456 + t448 * t85;
t769 = t408 * t361;
t791 = -t151 * t769 + t783 * t233 - t46 * t753;
t228 = t410 * t361;
t45 = t445 * t85 - t448 * t456;
t768 = t410 * t753;
t790 = t151 * t228 - t45 * t753 + t783 * t768;
t789 = t775 * t780;
t431 = -pkin(3) * t706 - pkin(4);
t675 = t780 * t431;
t782 = t442 * t775;
t781 = t444 * t775;
t566 = t725 * pkin(2);
t435 = t566 + pkin(3);
t527 = t706 * t446;
t392 = pkin(2) * t527 + t443 * t435;
t387 = qJ(5) + t392;
t427 = t443 * pkin(3) + qJ(5);
t440 = t442 ^ 2;
t441 = t444 ^ 2;
t532 = t441 / 0.2e1 + t440 / 0.2e1;
t774 = (t387 + t427) * t532;
t582 = t768 * qJD(1);
t772 = t753 ^ 2;
t771 = -t361 / 0.2e1;
t767 = t753 * t408;
t606 = qJD(1) * t361;
t561 = t753 * t606;
t524 = t569 * t408;
t764 = t524 + t582;
t542 = t632 / 0.2e1;
t115 = t329 / 0.2e1 + (t542 - t628) * t753;
t755 = t569 * t410;
t763 = -t115 * qJD(1) + t755;
t733 = t410 / 0.2e1;
t734 = -t408 / 0.2e1;
t103 = t233 * t734 - t733 * t768;
t76 = -t103 * qJD(1) + t408 * t755;
t762 = t569 * t478;
t562 = t725 * t443;
t401 = (t527 + t562) * pkin(2);
t736 = t401 / 0.2e1;
t479 = t631 / 0.2e1 + t629 / 0.2e1;
t547 = t361 * t733;
t143 = t361 * t479 - t547;
t761 = t143 * t569;
t546 = -t639 / 0.2e1;
t144 = t448 * t546 + t631 * t771 - t547;
t760 = t144 * t569;
t757 = t768 * t606;
t549 = t769 / 0.2e1;
t538 = t628 / 0.2e1;
t609 = t361 * t538 + t445 * t546;
t509 = t549 + t609;
t756 = t509 * t569;
t424 = t440 + t441;
t754 = t569 * t424;
t480 = t542 - t628 / 0.2e1;
t750 = qJD(6) * t509;
t580 = t768 * qJD(6);
t358 = -t635 / 0.2e1 - t394 / 0.2e1;
t65 = -t410 * t233 + t408 * t768;
t78 = -t233 ^ 2 + t768 ^ 2;
t749 = t78 * qJD(1) + t569 * t65;
t607 = qJD(1) * t233;
t748 = t103 * t569 - t607 * t768;
t306 = t408 ^ 2 - t410 ^ 2;
t58 = t65 * qJD(1) + t306 * t569;
t723 = t413 * pkin(3);
t224 = pkin(4) * t753 - qJ(5) * t361 - t723;
t439 = t447 * pkin(2);
t215 = t224 + t439;
t112 = t442 * t215 + t781;
t746 = -t112 / 0.2e1;
t114 = t442 * t224 + t781;
t745 = t114 / 0.2e1;
t744 = t361 / 0.2e1;
t724 = pkin(2) * t446;
t426 = t443 * t724;
t391 = t435 * t706 - t426;
t388 = -pkin(4) - t391;
t722 = t444 * pkin(5);
t377 = t388 - t722;
t741 = t377 / 0.2e1;
t740 = -t387 / 0.2e1;
t739 = t388 / 0.2e1;
t738 = t391 / 0.2e1;
t737 = -t392 / 0.2e1;
t402 = t566 * t706 - t426;
t735 = -t402 / 0.2e1;
t518 = -t414 / 0.2e1;
t417 = t431 - t722;
t732 = -t417 / 0.2e1;
t731 = t417 / 0.2e1;
t730 = t427 / 0.2e1;
t727 = -t442 / 0.2e1;
t726 = t443 / 0.2e1;
t721 = pkin(3) * qJD(3);
t111 = t444 * t215 - t782;
t634 = t444 * t361;
t517 = pkin(5) * t753 - pkin(9) * t634;
t73 = t111 + t517;
t714 = t448 * t73;
t567 = pkin(9) * t639;
t88 = -t567 + t112;
t716 = t445 * t88;
t3 = -(t714 - t716) * t361 + t790;
t720 = t3 * qJD(1);
t712 = t448 * t88;
t718 = t445 * t73;
t4 = (t712 + t718) * t361 + t791;
t719 = t4 * qJD(1);
t113 = t444 * t224 - t782;
t74 = t113 + t517;
t717 = t445 * t74;
t89 = -t567 + t114;
t715 = t445 * t89;
t713 = t448 * t74;
t711 = t448 * t89;
t5 = -(t713 - t715) * t361 + t790;
t710 = t5 * qJD(1);
t6 = (t711 + t717) * t361 + t791;
t709 = t6 * qJD(1);
t8 = t105 * t111 + t106 * t112 - t789;
t708 = t8 * qJD(1);
t9 = t105 * t113 + t106 * t114 - t789;
t707 = t9 * qJD(1);
t26 = -t151 * t768 - t361 * t45;
t705 = qJD(1) * t26;
t27 = t151 * t233 + t361 * t46;
t704 = qJD(1) * t27;
t671 = t775 * t753;
t35 = -t671 + (t696 - t698) * t361;
t703 = qJD(1) * t35;
t507 = t105 * t444 + t106 * t442;
t55 = t507 * t753;
t702 = qJD(1) * t55;
t77 = t361 * t780 - t671;
t701 = qJD(1) * t77;
t471 = t507 * t361;
t692 = t112 * t442;
t693 = t111 * t444;
t10 = (t692 + t693) * t753 + t471;
t700 = t10 * qJD(1);
t688 = t114 * t442;
t689 = t113 * t444;
t11 = (t688 + t689) * t753 + t471;
t695 = t11 * qJD(1);
t694 = t111 * t442;
t691 = t112 * t444;
t690 = t113 * t442;
t687 = t114 * t444;
t682 = t151 * t408;
t681 = t151 * t410;
t669 = t775 * t401;
t668 = t228 * t361;
t667 = t768 * t753;
t666 = t769 * t361;
t665 = t233 * t753;
t438 = t444 * pkin(9);
t369 = t444 * t387 + t438;
t531 = (-pkin(9) - t387) * t442;
t265 = t369 * t445 - t448 * t531;
t664 = t265 * t753;
t266 = t448 * t369 + t445 * t531;
t663 = t266 * t753;
t28 = -t111 * t361 + t799;
t662 = t28 * qJD(1);
t29 = t112 * t361 + t798;
t661 = t29 * qJD(1);
t30 = -t113 * t361 + t799;
t660 = t30 * qJD(1);
t31 = t114 * t361 + t798;
t659 = t31 * qJD(1);
t396 = (-pkin(9) - t427) * t442;
t633 = t444 * t427;
t397 = t438 + t633;
t345 = -t396 * t448 + t397 * t445;
t658 = t345 * t753;
t347 = t396 * t445 + t397 * t448;
t657 = t347 * t753;
t656 = t753 * t387;
t655 = t753 * t443;
t654 = t753 * t444;
t653 = t361 * t388;
t516 = t361 * t532;
t459 = t387 * t516 + t739 * t753;
t490 = -t693 / 0.2e1 - t692 / 0.2e1;
t37 = t459 + t490;
t651 = t37 * qJD(1);
t650 = t377 * t228;
t649 = t377 * t769;
t648 = t391 * t361;
t647 = t392 * t753;
t458 = t427 * t516 + t753 * t431 / 0.2e1;
t489 = -t689 / 0.2e1 - t688 / 0.2e1;
t40 = t458 + t489;
t646 = t40 * qJD(1);
t550 = t361 * t735;
t481 = t736 * t753 - t550;
t450 = (t739 - t431 / 0.2e1) * t361 + (t740 + t730) * t753 + t481;
t41 = t442 * t450;
t644 = t41 * qJD(1);
t642 = t417 * t228;
t641 = t417 * t769;
t56 = t386 * (t439 - t723);
t625 = t56 * qJD(1);
t57 = t386 * t723;
t624 = t57 * qJD(1);
t63 = -t228 * t233 + t768 * t769;
t623 = t63 * qJD(1);
t452 = -t648 / 0.2e1 - t647 / 0.2e1 + t481;
t528 = t706 * t361;
t462 = (-t655 / 0.2e1 - t528 / 0.2e1) * pkin(3);
t66 = t462 - t452;
t621 = t66 * qJD(1);
t79 = -t667 + t668;
t619 = t79 * qJD(1);
t80 = t667 + t668;
t618 = t80 * qJD(1);
t81 = t665 + t666;
t617 = t81 * qJD(1);
t82 = t665 - t666;
t616 = t82 * qJD(1);
t615 = t144 * qJD(5);
t614 = qJD(4) * t767 - t143 * qJD(5);
t147 = t361 * t480 + t549;
t613 = t147 * qJD(5);
t612 = qJD(4) * t768 - qJD(5) * t509;
t543 = t634 / 0.2e1;
t254 = t444 * t744 + t543;
t611 = t254 * qJD(5);
t535 = t744 + t771;
t255 = t535 * t444;
t610 = qJD(4) * t766 + t255 * qJD(5);
t346 = t424 * t402;
t418 = t424 * qJD(5);
t608 = t346 * qJD(3) + t418;
t605 = qJD(1) * t436;
t604 = qJD(1) * t449;
t603 = qJD(2) * t401;
t602 = qJD(2) * t408;
t601 = qJD(2) * t410;
t600 = qJD(2) * t447;
t599 = qJD(2) * t449;
t598 = qJD(3) * t401;
t597 = qJD(3) * t417;
t596 = qJD(3) * t436;
t595 = qJD(5) * t361;
t594 = qJD(6) * t410;
t129 = t424 * t772;
t590 = t129 * qJD(1);
t130 = -t361 * t639 - t753 * t766;
t589 = t130 * qJD(1);
t132 = t361 ^ 2 + t772;
t131 = t132 * t444;
t588 = t131 * qJD(1);
t587 = t132 * qJD(1);
t142 = t143 * qJD(1);
t133 = t144 * qJD(1);
t548 = -t769 / 0.2e1;
t145 = t548 + t609;
t134 = t145 * qJD(1);
t137 = t509 * qJD(1);
t586 = t147 * qJD(1);
t482 = t361 * t737 + t738 * t753;
t395 = -t723 / 0.2e1;
t568 = t395 + t439 / 0.2e1;
t152 = t482 + t568;
t585 = t152 * qJD(1);
t515 = t532 * t753;
t155 = -t515 - t358;
t584 = t155 * qJD(1);
t583 = t767 * qJD(1);
t563 = -t706 / 0.2e1;
t468 = t361 * t726 + t563 * t753;
t205 = (t413 / 0.2e1 + t468) * pkin(3);
t581 = t205 * qJD(1);
t579 = t766 * qJD(1);
t253 = t535 * t442;
t578 = t253 * qJD(1);
t577 = t255 * qJD(1);
t257 = t424 * t361;
t576 = t257 * qJD(1);
t328 = t411 ^ 2 - t413 ^ 2;
t575 = t328 * qJD(1);
t355 = t411 * t439 - t413 * t436;
t574 = t355 * qJD(1);
t356 = -t411 * t436 - t413 * t439;
t573 = t356 * qJD(1);
t572 = t358 * qJD(1);
t372 = t518 + t414 / 0.2e1;
t571 = t372 * qJD(1);
t399 = t408 * qJD(6);
t425 = -t447 ^ 2 + t449 ^ 2;
t570 = t425 * qJD(1);
t565 = pkin(1) * t447 * qJD(1);
t564 = pkin(1) * t604;
t560 = t753 * t595;
t559 = t767 * t606;
t556 = t411 * t605;
t555 = t413 * t605;
t554 = t447 * t604;
t553 = t691 / 0.2e1;
t552 = t682 / 0.2e1;
t551 = -t681 / 0.2e1;
t545 = t639 / 0.2e1;
t544 = t427 * t727;
t534 = t741 + t732;
t533 = t731 + t741;
t530 = t725 * qJD(2);
t529 = t725 * qJD(3);
t382 = t424 * t427;
t525 = t753 * t569;
t367 = t569 * t413;
t521 = -qJD(6) + t606;
t520 = t442 * t561;
t519 = t444 * t561;
t512 = -qJD(4) * t654 + t253 * qJD(5);
t156 = t346 * t387 + t388 * t401;
t487 = t780 * t739 - t669 / 0.2e1;
t2 = -t675 / 0.2e1 + (t387 * t745 + t106 * t402 / 0.2e1 + t427 * t746) * t444 + (t105 * t735 + t111 * t730 + t113 * t740) * t442 + t487;
t508 = t2 * qJD(1) + t156 * qJD(2);
t506 = t691 - t694;
t505 = t687 - t690;
t501 = t653 - t656;
t500 = t361 * t431 - t427 * t753;
t25 = (t745 + t746) * t444 + (-t113 / 0.2e1 + t111 / 0.2e1) * t442;
t499 = -qJD(1) * t25 - qJD(2) * t346;
t264 = -t391 * t401 + t392 * t402;
t453 = t669 / 0.2e1 + t775 * t737 + (t738 + t735) * t780;
t463 = (t563 * t780 + t726 * t775) * pkin(3);
t32 = t463 + t453;
t498 = t32 * qJD(1) - t264 * qJD(2);
t291 = t424 * t387;
t497 = -qJD(2) * t291 + t794;
t496 = -t718 / 0.2e1 - t712 / 0.2e1;
t495 = -t717 / 0.2e1 - t711 / 0.2e1;
t494 = -t716 / 0.2e1 + t714 / 0.2e1;
t493 = -t715 / 0.2e1 + t713 / 0.2e1;
t488 = t687 / 0.2e1 - t690 / 0.2e1;
t486 = t265 * t771 - t741 * t768;
t485 = t233 * t741 + t266 * t744;
t484 = t345 * t771 - t731 * t768;
t483 = t233 * t731 + t347 * t744;
t12 = t551 - t485 + t494;
t476 = qJD(1) * t12 - t377 * t601;
t13 = t552 - t486 + t496;
t475 = qJD(1) * t13 + t377 * t602;
t455 = -t410 * t550 + t736 * t768;
t17 = (-t265 / 0.2e1 + t345 / 0.2e1) * t753 + t534 * t228 + t455;
t474 = -qJD(1) * t17 - t401 * t602;
t454 = t233 * t736 + t402 * t548;
t19 = (-t266 / 0.2e1 + t347 / 0.2e1) * t753 - t534 * t769 + t454;
t473 = -qJD(1) * t19 - t401 * t601;
t44 = t444 * t450;
t472 = -qJD(1) * t44 - t442 * t603;
t164 = qJD(6) * t358 - t561;
t467 = t480 * t402;
t466 = t479 * t402;
t457 = (t562 / 0.2e1 + t527 / 0.2e1) * pkin(2);
t225 = t457 - t774;
t465 = qJD(2) * t225 - qJD(3) * t382 + t794;
t158 = -t410 * t533 - t466;
t20 = t551 - t483 + t493;
t461 = qJD(1) * t20 + qJD(2) * t158 - t410 * t597;
t159 = t408 * t533 + t467;
t21 = t552 - t484 + t495;
t460 = qJD(1) * t21 + qJD(2) * t159 + t408 * t597;
t451 = -t656 / 0.2e1 + t653 / 0.2e1 + t481;
t400 = t410 * qJD(5);
t398 = t408 * qJD(5);
t385 = t442 * t598;
t370 = t413 * t411 * qJD(1);
t368 = t410 * t399;
t366 = t569 * t411;
t365 = t410 * t598;
t364 = t408 * t598;
t344 = qJD(1) * t654;
t331 = 0.2e1 * t518 + t630;
t302 = t306 * qJD(6);
t258 = t569 * t358;
t252 = -t361 * t727 + t545;
t249 = t257 * qJD(4);
t237 = t252 * qJD(5);
t226 = t457 + t774;
t206 = pkin(3) * t468 + t395;
t161 = t377 * t733 + t410 * t731 - t466;
t160 = t377 * t734 + t408 * t732 + t467;
t154 = -t515 + t358;
t153 = -t482 + t568;
t140 = t143 * qJD(6);
t138 = t144 * qJD(6);
t128 = t681 / 0.2e1;
t127 = -t682 / 0.2e1;
t122 = -t133 - t594;
t121 = -t399 - t134;
t120 = -t399 + t137;
t119 = t142 + t594;
t118 = -t329 / 0.2e1 + (t538 + t480) * t753;
t96 = t103 * qJD(6);
t67 = t462 + t452;
t64 = t65 * qJD(6);
t62 = t607 * t769 + t96;
t61 = -qJD(6) * t145 - t617;
t60 = -t138 - t619;
t54 = t753 * t755 + t617 + t750;
t53 = -t524 * t753 - t140 + t619;
t43 = t788 - t753 * t633 / 0.2e1 + t431 * t543 + t451 * t444;
t42 = t431 * t545 + t451 * t442 + t753 * t544 - t787;
t39 = t458 - t489;
t38 = t96 - (t755 + t607) * t769;
t36 = t459 - t490;
t34 = t64 - t623;
t33 = t463 - t453;
t24 = t553 - t694 / 0.2e1 + t488;
t23 = t128 + t483 + t493;
t22 = t127 + t484 + t495;
t18 = -t663 / 0.2e1 - t649 / 0.2e1 + t796 - t657 / 0.2e1 - t641 / 0.2e1 + t454;
t16 = -t664 / 0.2e1 + t650 / 0.2e1 + t797 - t658 / 0.2e1 + t642 / 0.2e1 + t455;
t15 = t128 + t485 + t494;
t14 = t127 + t486 + t496;
t7 = t623 + t64 + t569 * (-t228 * t410 + t408 * t769);
t1 = t427 * t553 + t111 * t544 + t675 / 0.2e1 + t491 * t402 + t488 * t387 + t487;
t47 = [0, 0, 0, t447 * t599, t425 * qJD(2), 0, 0, 0, -pkin(1) * t600, -pkin(1) * t599, t411 * t367, t569 * t328, 0, 0, 0, qJD(2) * t355 - t413 * t596, qJD(2) * t356 - t411 * t596, qJD(4) * t132, qJD(2) * t56 - qJD(3) * t57 + qJD(4) * t77, qJD(2) * t28 + qJD(3) * t30 - qJD(4) * t130 + t444 * t560, qJD(2) * t29 + qJD(3) * t31 + qJD(4) * t131 - t442 * t560, -qJD(2) * t10 - qJD(3) * t11 + qJD(5) * t129, qJD(2) * t8 + qJD(3) * t9 + qJD(4) * t35 - qJD(5) * t55 (-t569 * t769 - t580) * t233, t78 * qJD(6) + t569 * t63, t361 * t580 + t569 * t81, qJD(6) * t233 * t361 + t569 * t79, -t361 * t525, qJD(2) * t3 + qJD(3) * t5 + qJD(4) * t80 + qJD(6) * t27 - t595 * t767, qJD(2) * t4 + qJD(3) * t6 + qJD(4) * t82 + qJD(6) * t26 - t595 * t768; 0, 0, 0, t554, t570, t599, -t600, 0, -pkin(7) * t599 - t565, pkin(7) * t600 - t564, t370, t575, -t366, t367, 0, qJD(2) * t751 + t331 * qJD(3) + t574, t573 - t762 (-t647 - t648) * qJD(2) + t67 * qJD(3), t625 + (-t391 * t780 + t392 * t775) * qJD(2) + t33 * qJD(3) + t153 * qJD(4), t662 + (t442 * t501 - t787) * qJD(2) + t42 * qJD(3) + t237, t661 + (t444 * t501 + t788) * qJD(2) + t43 * qJD(3) + t611, qJD(2) * t506 + t24 * qJD(3) - t700, t708 + (t387 * t506 + t388 * t780) * qJD(2) + t1 * qJD(3) + t36 * qJD(4) + t792, t38, t7, t54, t53, t164, t720 + (t650 - t664 + t797) * qJD(2) + t16 * qJD(3) + t15 * qJD(6) - t615, t719 + (-t649 - t663 + t796) * qJD(2) + t18 * qJD(3) + t14 * qJD(6) - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, t575, -t366, t367, 0, t331 * qJD(2) + qJD(3) * t751 - t555, -t556 - t762, t67 * qJD(2) + (-t528 - t655) * t721, -t624 + t33 * qJD(2) + (t443 * t775 - t706 * t780) * t721 + t206 * qJD(4), t660 + t42 * qJD(2) + (t442 * t500 - t787) * qJD(3) + t237, t659 + t43 * qJD(2) + (t444 * t500 + t788) * qJD(3) + t611, t24 * qJD(2) + qJD(3) * t505 - t695, t707 + t1 * qJD(2) + (t427 * t505 + t675) * qJD(3) + t39 * qJD(4) + t792, t38, t7, t54, t53, t164, t710 + t16 * qJD(2) + (t642 - t658 + t797) * qJD(3) + t23 * qJD(6) - t615, t709 + t18 * qJD(2) + (-t641 - t657 + t796) * qJD(3) + t22 * qJD(6) - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, qJD(2) * t153 + qJD(3) * t206 + t701, -t589, t588, 0, qJD(2) * t36 + qJD(3) * t39 + qJD(5) * t154 + t703, 0, 0, 0, 0, 0, -t140 + t618, t616 - t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252 * t569 + t519, t254 * t569 - t520, t590, qJD(4) * t154 + t569 * t784 - t702, 0, 0, 0, 0, 0, t118 * qJD(6) - t559 - t760, -t147 * t569 - t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t748, t749, t521 * t768 + t756, t233 * t521 - t761, t258, qJD(2) * t15 + qJD(3) * t23 - qJD(4) * t143 + qJD(5) * t118 - qJD(6) * t46 + t704, qJD(2) * t14 + qJD(3) * t22 - qJD(4) * t509 + qJD(6) * t45 + t705; 0, 0, 0, -t554, -t570, 0, 0, 0, t565, t564, -t370, -t575, 0, 0, 0, qJD(3) * t372 - t574, -t573, -qJD(3) * t66, -qJD(3) * t32 - qJD(4) * t152 - t625, qJD(3) * t41 + t512 - t662, qJD(3) * t44 + t610 - t661, qJD(3) * t25 + t249 + t700, qJD(3) * t2 + qJD(4) * t37 - t708 - t793, t62, t34, t61, t60, -t164, qJD(3) * t17 - qJD(6) * t12 + t614 - t720, qJD(3) * t19 - qJD(6) * t13 + t612 - t719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t724, -pkin(2) * t529, 0, t264 * qJD(3), -t444 * t598, t385, t608, qJD(3) * t156 + qJD(5) * t291, -t368, t302, 0, 0, 0, t377 * t594 + t364, -t377 * t399 + t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569 * t724 + t571 (-t530 - t529) * pkin(2), -t621 (-t401 * t706 + t402 * t443) * t721 - t498, -t401 * t444 * t569 + t644, t385 - t472, -t499 + t608 (t382 * t402 + t401 * t431) * qJD(3) + t226 * qJD(5) + t508, -t368, t302, 0, 0, 0, qJD(6) * t161 + t364 - t474, qJD(6) * t160 + t365 - t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t585, -t344, t579, t576, t651, 0, 0, 0, 0, 0, t583, t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, t577, t754, qJD(3) * t226 - t497, 0, 0, 0, 0, 0, -t142, -t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t58, t121, t122, -t572, qJD(3) * t161 - qJD(6) * t266 - t476, qJD(3) * t160 + qJD(6) * t265 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, -t575, 0, 0, 0, -qJD(2) * t372 + t555, t556, qJD(2) * t66, qJD(2) * t32 + qJD(4) * t205 + t624, -qJD(2) * t41 + t512 - t660, -qJD(2) * t44 + t610 - t659, -qJD(2) * t25 + t249 + t695, -qJD(2) * t2 + qJD(4) * t40 - t707 - t793, t62, t34, t61, t60, -t164, -qJD(2) * t17 - qJD(6) * t20 + t614 - t710, -qJD(2) * t19 - qJD(6) * t21 + t612 - t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t724 - t571, pkin(2) * t530, t621, t498, t444 * t603 - t644, t472, t418 + t499, -qJD(5) * t225 - t508, -t368, t302, 0, 0, 0, -qJD(6) * t158 + t474, -qJD(6) * t159 + t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t382 * qJD(5), -t368, t302, 0, 0, 0, t417 * t594, -t417 * t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t581, -t344, t579, t576, t646, 0, 0, 0, 0, 0, t583, t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, t577, t754, -t465, 0, 0, 0, 0, 0, -t142, -t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t58, t121, t122, -t572, -qJD(6) * t347 - t461, qJD(6) * t345 - t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, qJD(2) * t152 - qJD(3) * t205 - t701, t444 * t525 + t589, -t569 * t766 - t588, -t569 * t257, -qJD(2) * t37 - qJD(3) * t40 + qJD(5) * t155 - t703, 0, 0, 0, 0, 0, -t569 * t767 - t138 - t618, -t147 * qJD(6) - t569 * t768 - t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t585, t344, -t579, -t576, -t651, 0, 0, 0, 0, 0, -t583, -t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t581, t344, -t579, -t576, -t646, 0, 0, 0, 0, 0, -t583, -t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t584, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, t399 - t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253 * t569 - t519, -t255 * t569 + t520, -t590, -qJD(4) * t155 + t569 * t785 + t702, 0, 0, 0, 0, 0, -t115 * qJD(6) + t559 + t761, t757 - t580 + t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t578, -t577, -t754, qJD(3) * t225 + t497, 0, 0, 0, 0, 0, t119, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t578, -t577, -t754, t465, 0, 0, 0, 0, 0, t119, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t584, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t763, -t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t748, -t749, t145 * t569 - t757, -t233 * t606 + t760, t258, qJD(2) * t12 + qJD(3) * t20 + qJD(4) * t144 + qJD(5) * t115 - t704, qJD(2) * t13 + qJD(3) * t21 + qJD(4) * t147 + qJD(5) * t768 - t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t58, t134, t133, t572, qJD(3) * t158 - t400 + t476, qJD(3) * t159 + t398 + t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t58, t134, t133, t572, -t400 + t461, t398 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t763, t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t47;
