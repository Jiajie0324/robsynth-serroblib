% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRP8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRRP8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:24:34
% EndTime: 2019-03-09 06:24:43
% DurationCPUTime: 4.40s
% Computational Cost: add. (8432->445), mult. (17457->541), div. (0->0), fcn. (11453->6), ass. (0->232)
t307 = sin(qJ(4));
t238 = qJD(4) * t307;
t335 = qJD(3) * t307 + t238;
t168 = sin(qJ(3));
t170 = cos(qJ(4));
t171 = cos(qJ(3));
t132 = t170 * t168 + t307 * t171;
t126 = t132 * qJD(1);
t332 = qJD(5) + t126;
t234 = t332 ^ 2;
t258 = qJD(1) * t171;
t241 = t170 * t258;
t244 = t307 * t168;
t128 = -qJD(1) * t244 + t241;
t167 = sin(qJ(5));
t169 = cos(qJ(5));
t251 = qJD(3) + qJD(4);
t230 = t169 * t251;
t107 = t167 * t128 - t230;
t233 = t332 * t107;
t109 = t169 * t128 + t167 * t251;
t232 = t332 * t109;
t254 = qJD(5) * t169;
t273 = t126 * t169;
t334 = t254 + t273;
t333 = t335 * qJD(1);
t103 = t251 * t132;
t267 = t170 * t171;
t217 = t251 * t267;
t104 = -t168 * t335 + t217;
t133 = -t244 + t267;
t228 = qJD(5) * t132 + qJD(1);
t270 = t132 * t169;
t259 = qJD(1) * t168;
t226 = t251 * t170 * t259 + t171 * t333;
t255 = qJD(5) * t167;
t66 = -qJD(5) * t230 + t128 * t255 + t169 * t226;
t262 = t333 * t168;
t97 = qJD(1) * t217 - t262;
t331 = t103 * t109 + t332 * (-t104 * t169 + t167 * t228) + t133 * t66 - t97 * t270;
t276 = t109 * t169;
t279 = t107 * t169;
t280 = t107 * t167;
t67 = qJD(5) * t109 - t167 * t226;
t290 = t67 * t169;
t291 = t66 * t167;
t330 = t133 * (qJD(5) * (-t276 + t280) - t290 + t291) + (t109 * t167 + t279) * t103;
t295 = t169 * t97;
t21 = -t128 * t107 + t167 * t234 - t295;
t6 = (t67 + t232) * t167 + t169 * (t66 + t233);
t289 = t97 * qJ(6);
t172 = -pkin(1) - pkin(7);
t147 = t172 * qJD(1) + qJD(2);
t235 = pkin(8) * qJD(1) - t147;
t257 = qJD(3) * t168;
t117 = t235 * t257;
t120 = t235 * t168;
t219 = t307 * t117 + t120 * t238;
t121 = -pkin(8) * t258 + t171 * t147;
t116 = qJD(3) * pkin(3) + t121;
t256 = qJD(3) * t171;
t118 = t235 * t256;
t231 = qJD(4) * t116 - t118;
t317 = t231 * t170;
t44 = t219 + t317;
t163 = qJD(1) * qJD(2);
t252 = qJD(1) * qJD(3);
t237 = t171 * t252;
t135 = pkin(3) * t237 + t163;
t52 = t97 * pkin(4) + t226 * pkin(9) + t135;
t115 = t170 * t120;
t87 = t307 * t116 - t115;
t80 = t251 * pkin(9) + t87;
t139 = pkin(3) * t259 + qJD(1) * qJ(2);
t88 = pkin(4) * t126 - pkin(9) * t128 + t139;
t8 = t167 * t52 + t169 * t44 + t88 * t254 - t80 * t255;
t2 = qJD(6) * t332 + t289 + t8;
t236 = t167 * t44 - t169 * t52 + t80 * t254 + t88 * t255;
t308 = pkin(5) * t97;
t4 = t236 - t308;
t329 = t4 * t167 + t2 * t169;
t328 = (t255 * t332 - t295) * pkin(9);
t218 = -t170 * t117 - t307 * t118;
t45 = qJD(4) * t87 + t218;
t114 = t307 * t120;
t86 = t170 * t116 + t114;
t79 = -t251 * pkin(4) - t86;
t327 = t45 * t167 + t79 * t254;
t304 = pkin(8) - t172;
t136 = t304 * t168;
t137 = t304 * t171;
t106 = -t170 * t136 - t307 * t137;
t154 = t168 * pkin(3) + qJ(2);
t99 = pkin(4) * t132 - pkin(9) * t133 + t154;
t326 = t169 * t106 + t167 * t99;
t90 = t307 * t121 - t115;
t200 = pkin(3) * t238 - t90;
t39 = t167 * t88 + t169 * t80;
t28 = qJ(6) * t332 + t39;
t35 = t107 * pkin(5) - t109 * qJ(6) + t79;
t325 = -t28 * t128 - t35 * t273;
t11 = t67 * pkin(5) + t66 * qJ(6) - t109 * qJD(6) + t45;
t324 = -t11 * t169 + t35 * t255;
t321 = t67 - t232;
t320 = t45 * t169 - t79 * t255;
t319 = t104 * t251;
t274 = t126 * t167;
t316 = -t167 * qJD(6) - t334 * qJ(6) + (t255 + t274) * pkin(5);
t315 = t307 * t136 - t170 * t137;
t284 = t103 * t167;
t193 = t133 * t254 - t284;
t269 = t133 * t167;
t314 = t104 * t107 + t132 * t67 + t193 * t332 + t97 * t269;
t313 = -t128 * t103 - t133 * t226;
t148 = pkin(3) * t256 + qJD(2);
t62 = pkin(4) * t104 + pkin(9) * t103 + t148;
t131 = qJD(3) * t137;
t221 = t304 * t257;
t68 = qJD(4) * t315 - t170 * t131 + t307 * t221;
t15 = -qJD(5) * t326 - t167 * t68 + t169 * t62;
t310 = t109 ^ 2;
t309 = 0.2e1 * t163;
t306 = pkin(5) * t128;
t305 = t170 * pkin(3);
t5 = t8 * t169;
t98 = pkin(4) * t128 + pkin(9) * t126;
t51 = t167 * t98 + t169 * t86;
t91 = t170 * t121 + t114;
t248 = pkin(3) * t258;
t92 = t98 + t248;
t47 = t167 * t92 + t169 * t91;
t303 = t87 - t90;
t302 = pkin(3) * qJD(4);
t301 = t315 * t45;
t300 = t109 * t35;
t299 = t11 * t167;
t156 = t307 * pkin(3) + pkin(9);
t297 = t156 * t97;
t296 = t167 * t97;
t293 = t45 * t133;
t288 = t97 * t132;
t247 = t170 * t302;
t229 = t169 * t247;
t287 = -t107 * t229 - t156 * t290;
t286 = t316 + t200;
t285 = -t87 + t316;
t283 = t103 * t169;
t281 = t107 * t156;
t278 = t109 * t107;
t275 = t332 * t128;
t271 = t128 * t126;
t268 = t133 * t169;
t173 = qJD(3) ^ 2;
t266 = t173 * t168;
t265 = t173 * t171;
t174 = qJD(1) ^ 2;
t264 = t174 * qJ(2);
t38 = -t167 * t80 + t169 * t88;
t263 = qJD(6) - t38;
t261 = t168 ^ 2 - t171 ^ 2;
t260 = -t173 - t174;
t250 = -t38 * t273 - t39 * t274 + t5;
t249 = 0.2e1 * qJD(1);
t246 = t171 * t174 * t168;
t243 = t156 * t254;
t240 = t107 ^ 2 - t310;
t225 = t39 * t128 + t327;
t224 = t168 * t237;
t216 = pkin(5) * t169 + qJ(6) * t167;
t215 = pkin(5) * t167 - qJ(6) * t169;
t214 = t126 * t79 - t297;
t27 = -pkin(5) * t332 + t263;
t213 = t167 * t28 - t169 * t27;
t212 = t167 * t27 + t169 * t28;
t211 = t167 * t39 + t169 * t38;
t210 = t167 * t38 - t169 * t39;
t50 = -t167 * t86 + t169 * t98;
t46 = -t167 * t91 + t169 * t92;
t207 = t109 * t104 - t66 * t132;
t206 = t104 * t126 + t288;
t63 = -t106 * t167 + t169 * t99;
t201 = t276 + t280;
t138 = -pkin(4) - t216;
t198 = t27 * t128 + t324;
t197 = -t38 * t128 - t320;
t196 = t332 * t39 - t236;
t195 = t35 * t254 + t299;
t192 = -t133 * t255 - t283;
t14 = -t106 * t255 + t167 * t62 + t169 * t68 + t99 * t254;
t191 = t334 * t27 - t28 * t274 + t329;
t190 = t109 * t247 - t156 * t66;
t189 = -t139 * t128 - t218;
t188 = t139 * t126 - t219;
t187 = (-t254 * t332 - t296) * pkin(9);
t186 = t167 * t233 - t290;
t185 = -t156 * t255 + t229;
t184 = -t167 * t247 - t243;
t181 = -t251 * t241 + t262;
t180 = t86 * t103 - t87 * t104 - t44 * t132 + t293;
t179 = -qJD(5) * t213 + t329;
t178 = -qJD(5) * t211 + t167 * t236 + t5;
t177 = t107 * t193 + t67 * t269;
t69 = t106 * qJD(4) - t307 * t131 - t170 * t221;
t176 = -t167 * t288 - t133 * t67 + t103 * t107 + (-t104 * t167 - t228 * t169) * t332;
t175 = -t67 * t270 - t104 * t279 + t228 * t276 + (t228 * t107 + t207) * t167;
t161 = qJ(2) * t309;
t157 = -pkin(4) - t305;
t129 = t138 - t305;
t122 = t128 * qJ(6);
t101 = t103 * t251;
t82 = -t126 ^ 2 + t128 ^ 2;
t78 = t128 * t251 + t181;
t77 = t126 * t251 - t226;
t73 = pkin(5) * t109 + qJ(6) * t107;
t70 = t133 * t215 - t315;
t61 = pkin(9) * t290;
t55 = -pkin(5) * t132 - t63;
t54 = qJ(6) * t132 + t326;
t43 = t104 * t332 + t288;
t37 = -t50 - t306;
t36 = t122 + t51;
t34 = -t46 - t306;
t33 = t122 + t47;
t31 = -t66 + t233;
t23 = -t109 * t128 + t169 * t234 + t296;
t18 = t169 * t232 - t291;
t17 = t109 * t192 - t66 * t268;
t16 = -t215 * t103 + (qJD(5) * t216 - qJD(6) * t169) * t133 + t69;
t13 = -t104 * pkin(5) - t15;
t12 = qJ(6) * t104 + qJD(6) * t132 + t14;
t10 = t192 * t332 + t97 * t268 + t207;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t161, -0.2e1 * t224, 0.2e1 * t261 * t252, -t266, 0.2e1 * t224, -t265, 0, -t172 * t266 + (qJ(2) * t256 + qJD(2) * t168) * t249, -t172 * t265 + (-qJ(2) * t257 + qJD(2) * t171) * t249, 0, t161, t313, t103 * t126 - t128 * t104 + t132 * t226 - t133 * t97, -t101, t206, -t319, 0, t139 * t104 + t148 * t126 + t135 * t132 + t154 * t97 - t251 * t69, -t139 * t103 + t148 * t128 + t135 * t133 - t154 * t226 - t251 * t68, -t106 * t97 - t68 * t126 + t69 * t128 + t226 * t315 + t180, t106 * t44 + t135 * t154 + t139 * t148 + t68 * t87 - t69 * t86 - t301, t17, t330, t10, t177, -t314, t43, t38 * t104 + t69 * t107 - t132 * t236 + t327 * t133 + t15 * t332 - t79 * t284 - t315 * t67 + t63 * t97, -t39 * t104 + t69 * t109 - t8 * t132 + t133 * t320 - t14 * t332 - t79 * t283 + t315 * t66 - t326 * t97, -t14 * t107 - t15 * t109 + t63 * t66 - t326 * t67 + t211 * t103 + (qJD(5) * t210 - t167 * t8 + t169 * t236) * t133, t14 * t39 + t15 * t38 - t236 * t63 + t326 * t8 + t69 * t79 - t301, t17, t10, -t330, t43, t314, t177, -t27 * t104 + t16 * t107 - t13 * t332 - t4 * t132 + t133 * t195 - t35 * t284 - t55 * t97 + t70 * t67, -t12 * t107 + t13 * t109 - t54 * t67 - t55 * t66 + t213 * t103 + (-qJD(5) * t212 - t167 * t2 + t169 * t4) * t133, t28 * t104 - t16 * t109 + t12 * t332 + t2 * t132 + t324 * t133 + t35 * t283 + t54 * t97 + t70 * t66, t11 * t70 + t12 * t28 + t13 * t27 + t16 * t35 + t2 * t54 + t4 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, -t264, 0, 0, 0, 0, 0, 0, t260 * t168, t260 * t171, 0, -t264, 0, 0, 0, 0, 0, 0, -qJD(1) * t126 - t101, -qJD(1) * t128 - t319, -t206 - t313, -qJD(1) * t139 - t180, 0, 0, 0, 0, 0, 0, t176, t331, t175, -qJD(1) * t211 + t79 * t103 - t104 * t210 + t132 * t178 - t293, 0, 0, 0, 0, 0, 0, t176, t175, -t331, -qJD(1) * t213 + t35 * t103 + t104 * t212 - t11 * t133 + t132 * t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, -t261 * t174, 0, -t246, 0, 0, -t171 * t264, t168 * t264, 0, 0, t271, t82, t77, -t271, t78, 0, t90 * qJD(3) - t303 * qJD(4) + (-t126 * t258 - t238 * t251) * pkin(3) + t189, -t128 * t248 + t91 * t251 + (-t251 * t302 - t231) * t170 + t188, t303 * t128 + (-t86 + t91) * t126 + (-t307 * t97 + t170 * t226 + (-t170 * t126 + t307 * t128) * qJD(4)) * pkin(3), t86 * t90 - t87 * t91 + (-t139 * t258 + t307 * t44 - t170 * t45 + (t170 * t87 - t307 * t86) * qJD(4)) * pkin(3), t18, -t6, t23, t186, -t21, -t275, t157 * t67 + t214 * t167 + t200 * t107 + (t184 - t46) * t332 + t197, -t157 * t66 + t214 * t169 + t200 * t109 + (-t185 + t47) * t332 + t225, t47 * t107 + t46 * t109 + (t109 * t156 - t38) * t254 + (t236 + (-t39 + t281) * qJD(5) + t190) * t167 + t250 + t287, t45 * t157 - t38 * t46 - t39 * t47 - t79 * t90 + (-t210 * t170 + t307 * t79) * t302 + t178 * t156, t18, t23, t6, -t275, t21, t186, t129 * t67 + (t126 * t35 - t297) * t167 + t286 * t107 + (t184 + t34) * t332 + t198, t33 * t107 + (-t34 + t243) * t109 + ((-t28 + t281) * qJD(5) + t190) * t167 + t191 + t287, -t299 + t129 * t66 + (-qJD(5) * t35 + t297) * t169 - t286 * t109 + (t185 - t33) * t332 + t325, t11 * t129 + t156 * t179 + t212 * t247 - t27 * t34 - t28 * t33 + t286 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, t82, t77, -t271, t78, 0, t87 * qJD(3) + t189, t251 * t86 + t188 - t317, 0, 0, t18, -t6, t23, t186, -t21, -t275, -pkin(4) * t67 - t87 * t107 + t79 * t274 - t332 * t50 + t187 + t197, pkin(4) * t66 - t87 * t109 + t79 * t273 + t332 * t51 + t225 + t328, t51 * t107 + t50 * t109 - t61 + (-pkin(9) * t66 + t236) * t167 + (pkin(9) * t201 - t211) * qJD(5) + t250, -t45 * pkin(4) + pkin(9) * t178 - t38 * t50 - t39 * t51 - t79 * t87, t18, t23, t6, -t275, t21, t186, t285 * t107 + t138 * t67 + t35 * t274 + t332 * t37 + t187 + t198, -t28 * t255 + t36 * t107 - t37 * t109 - t61 + (qJD(5) * t201 - t291) * pkin(9) + t191, -t285 * t109 + t138 * t66 - t332 * t36 - t195 + t325 - t328, pkin(9) * t179 + t11 * t138 - t27 * t37 - t28 * t36 + t285 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, -t240, t31, -t278, -t321, t97, -t109 * t79 + t196, t107 * t79 + t332 * t38 - t8, 0, 0, t278, t31, t240, t97, t321, -t278, -t107 * t73 + t196 - t300 + 0.2e1 * t308, pkin(5) * t66 - t67 * qJ(6) + (t28 - t39) * t109 + (t27 - t263) * t107, 0.2e1 * t289 - t35 * t107 + t73 * t109 + (0.2e1 * qJD(6) - t38) * t332 + t8, -t4 * pkin(5) + t2 * qJ(6) + t263 * t28 - t27 * t39 - t35 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181 + t278, t31, -t310 - t234, -t28 * t332 + t300 + t4;];
tauc_reg  = t1;
