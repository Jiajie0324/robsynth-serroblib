% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRRP8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 01:49
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRRP8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRP8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRP8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRRP8_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 01:48:52
% EndTime: 2019-05-06 01:49:25
% DurationCPUTime: 35.21s
% Computational Cost: add. (114594->802), mult. (227023->914), div. (0->0), fcn. (155324->8), ass. (0->515)
t1519 = cos(qJ(5));
t1515 = sin(qJ(5));
t1516 = sin(qJ(4));
t1520 = cos(qJ(4));
t1521 = cos(qJ(3));
t1679 = qJD(1) * t1521;
t1517 = sin(qJ(3));
t1680 = qJD(1) * t1517;
t1479 = -t1516 * t1680 + t1520 * t1679;
t1640 = qJD(3) + qJD(4);
t1437 = t1479 * t1515 - t1519 * t1640;
t1477 = (t1516 * t1521 + t1517 * t1520) * qJD(1);
t1509 = t1521 * qJDD(1);
t1627 = qJD(3) * t1680;
t1486 = t1509 - t1627;
t1625 = qJD(3) * t1679;
t1636 = t1517 * qJDD(1);
t1564 = -t1625 - t1636;
t1406 = -t1477 * qJD(4) + t1520 * t1486 + t1516 * t1564;
t1635 = qJDD(3) + qJDD(4);
t1558 = -t1519 * t1406 - t1515 * t1635;
t1356 = -t1437 * qJD(5) - t1558;
t1469 = qJD(5) + t1477;
t1655 = t1437 * t1469;
t1702 = -t1655 + t1356;
t1668 = t1702 * t1515;
t1439 = t1519 * t1479 + t1515 * t1640;
t1416 = t1469 * t1439;
t1605 = -t1515 * t1406 + t1519 * t1635;
t1565 = qJD(5) * t1439 - t1605;
t1705 = t1416 + t1565;
t1239 = -t1705 * t1519 - t1668;
t1436 = t1439 ^ 2;
t1692 = t1437 ^ 2;
t1704 = t1436 - t1692;
t1199 = t1239 * t1516 - t1520 * t1704;
t1201 = t1239 * t1520 + t1516 * t1704;
t1137 = t1199 * t1521 + t1201 * t1517;
t1667 = t1702 * t1519;
t1235 = -t1705 * t1515 + t1667;
t1518 = sin(qJ(1));
t1522 = cos(qJ(1));
t1795 = t1137 * t1518 + t1235 * t1522;
t1794 = t1137 * t1522 - t1235 * t1518;
t1691 = t1469 ^ 2;
t1412 = t1692 - t1691;
t1401 = t1439 * t1437;
t1602 = -t1516 * t1486 + t1520 * t1564;
t1566 = t1479 * qJD(4) - t1602;
t1404 = qJDD(5) + t1566;
t1706 = t1401 + t1404;
t1721 = t1706 * t1515;
t1290 = t1412 * t1519 - t1721;
t1324 = -t1416 + t1565;
t1222 = t1290 * t1516 + t1324 * t1520;
t1226 = t1290 * t1520 - t1324 * t1516;
t1159 = t1222 * t1521 + t1226 * t1517;
t1720 = t1706 * t1519;
t1286 = t1412 * t1515 + t1720;
t1793 = t1159 * t1518 + t1286 * t1522;
t1792 = t1159 * t1522 - t1286 * t1518;
t1138 = t1199 * t1517 - t1201 * t1521;
t1162 = t1222 * t1517 - t1226 * t1521;
t1413 = t1436 - t1691;
t1707 = -t1401 + t1404;
t1664 = t1707 * t1515;
t1743 = -t1413 * t1519 + t1664;
t1701 = t1655 + t1356;
t1663 = t1707 * t1519;
t1742 = t1413 * t1515 + t1663;
t1757 = t1516 * t1701 + t1520 * t1742;
t1758 = t1516 * t1742 - t1520 * t1701;
t1766 = t1517 * t1757 + t1521 * t1758;
t1791 = t1518 * t1766 + t1522 * t1743;
t1790 = t1518 * t1743 - t1522 * t1766;
t1373 = t1691 + t1436;
t1265 = t1373 * t1519 + t1721;
t1789 = pkin(2) * t1265;
t1700 = -t1691 - t1692;
t1715 = t1519 * t1700 - t1664;
t1738 = t1516 * t1705 + t1520 * t1715;
t1741 = t1516 * t1715 - t1520 * t1705;
t1755 = t1517 * t1738 + t1521 * t1741;
t1788 = pkin(2) * t1755;
t1787 = pkin(3) * t1265;
t1786 = pkin(4) * t1265;
t1785 = pkin(7) * t1755;
t1756 = -t1517 * t1741 + t1521 * t1738;
t1784 = pkin(7) * t1756;
t1783 = pkin(9) * t1265;
t1273 = t1373 * t1515 - t1720;
t1782 = pkin(9) * t1273;
t1781 = qJ(2) * t1265;
t1780 = qJ(2) * t1756;
t1777 = t1265 * t1518;
t1776 = t1265 * t1522;
t1775 = t1273 * t1516;
t1774 = t1273 * t1520;
t1690 = pkin(7) + pkin(1);
t1771 = t1690 * t1756;
t1716 = t1515 * t1700 + t1663;
t1770 = qJ(2) * t1716 - t1690 * t1755;
t1769 = pkin(6) * (t1518 * t1755 + t1522 * t1716);
t1768 = pkin(6) * (t1518 * t1716 - t1522 * t1755);
t1767 = -t1517 * t1758 + t1521 * t1757;
t1765 = pkin(3) * t1741;
t1764 = pkin(8) * t1741;
t1652 = t1479 * t1477;
t1744 = t1635 - t1652;
t1763 = t1516 * t1744;
t1761 = t1520 * t1744;
t1759 = -pkin(3) * t1716 + pkin(8) * t1738;
t1754 = pkin(2) * t1716;
t1752 = pkin(4) * t1716;
t1751 = pkin(9) * t1715;
t1750 = pkin(9) * t1716;
t1749 = -qJ(6) * t1515 - pkin(4);
t1617 = t1640 * t1477;
t1745 = t1406 - t1617;
t1654 = t1469 * t1515;
t1309 = t1437 * t1654 - t1519 * t1565;
t1653 = t1469 * t1519;
t1626 = t1437 * t1653;
t1531 = t1515 * t1565 + t1626;
t1631 = t1516 * t1401;
t1697 = t1520 * t1531 - t1631;
t1630 = t1520 * t1401;
t1698 = t1516 * t1531 + t1630;
t1711 = t1517 * t1697 + t1521 * t1698;
t1740 = t1309 * t1522 + t1518 * t1711;
t1708 = (t1437 * t1515 + t1439 * t1519) * t1469;
t1408 = t1439 * t1654;
t1583 = t1408 - t1626;
t1696 = t1404 * t1516 + t1520 * t1583;
t1699 = -t1520 * t1404 + t1516 * t1583;
t1713 = t1517 * t1696 + t1521 * t1699;
t1739 = t1518 * t1713 - t1522 * t1708;
t1737 = t1309 * t1518 - t1522 * t1711;
t1736 = -t1518 * t1708 - t1522 * t1713;
t1703 = t1436 + t1692;
t1735 = pkin(4) * t1703;
t1734 = qJ(6) * t1702;
t1730 = t1516 * t1703;
t1725 = t1520 * t1703;
t1463 = t1640 * t1479;
t1375 = t1463 + t1566;
t1677 = qJD(6) * t1469;
t1459 = 0.2e1 * t1677;
t1678 = qJD(2) * qJD(1);
t1511 = 0.2e1 * t1678;
t1513 = t1517 ^ 2;
t1524 = qJD(1) ^ 2;
t1496 = t1522 * g(1) + t1518 * g(2);
t1512 = qJDD(1) * qJ(2);
t1569 = t1496 - t1512;
t1695 = -(pkin(8) * t1513 + t1690) * t1524 - pkin(3) * t1564 + (qJD(3) * pkin(3) - pkin(8) * t1679) * t1679 - t1569;
t1256 = pkin(4) * t1375 - pkin(9) * t1745 + t1511 + t1695;
t1495 = t1518 * g(1) - t1522 * g(2);
t1568 = qJDD(2) - t1495;
t1541 = -t1524 * qJ(2) + t1568;
t1532 = -qJDD(1) * t1690 + t1541;
t1433 = t1521 * g(3) - t1517 * t1532;
t1523 = qJD(3) ^ 2;
t1645 = t1513 * t1524;
t1498 = -t1523 - t1645;
t1394 = pkin(3) * t1498 - pkin(8) * t1636 - t1433;
t1529 = t1521 * t1532;
t1641 = t1521 * t1524;
t1681 = qJD(1) * qJD(3);
t1525 = t1529 - t1486 * pkin(8) + qJDD(3) * pkin(3) + (-pkin(3) * t1641 - pkin(8) * t1681 + g(3)) * t1517;
t1336 = t1520 * t1394 + t1516 * t1525;
t1424 = pkin(4) * t1477 - pkin(9) * t1479;
t1634 = t1640 ^ 2;
t1262 = -pkin(4) * t1634 + pkin(9) * t1635 - t1477 * t1424 + t1336;
t1189 = t1515 * t1256 + t1519 * t1262;
t1395 = pkin(5) * t1437 - qJ(6) * t1439;
t1577 = -pkin(5) * t1691 + t1404 * qJ(6) - t1437 * t1395 + t1189;
t1166 = t1459 + t1577;
t1188 = -t1519 * t1256 + t1262 * t1515;
t1167 = -t1404 * pkin(5) - qJ(6) * t1691 + t1395 * t1439 + qJDD(6) + t1188;
t1115 = t1166 * t1519 + t1167 * t1515;
t1335 = t1516 * t1394 - t1520 * t1525;
t1261 = -t1635 * pkin(4) - t1634 * pkin(9) + t1479 * t1424 + t1335;
t1533 = t1565 * pkin(5) + t1261 - t1734;
t1173 = (pkin(5) * t1469 - 0.2e1 * qJD(6)) * t1439 + t1533;
t1101 = t1115 * t1516 - t1173 * t1520;
t1102 = t1115 * t1520 + t1173 * t1516;
t1073 = t1101 * t1521 + t1102 * t1517;
t1539 = pkin(9) * t1115 + (-pkin(5) * t1519 + t1749) * t1173;
t1537 = pkin(3) * t1101 + t1539;
t1719 = -pkin(2) * t1073 - t1537;
t1312 = t1356 * t1515 + t1439 * t1653;
t1313 = t1356 * t1519 - t1408;
t1584 = t1520 * t1313 + t1631;
t1585 = t1516 * t1313 - t1630;
t1693 = t1517 * t1584 + t1521 * t1585;
t1718 = t1518 * t1312 - t1522 * t1693;
t1717 = t1522 * t1312 + t1518 * t1693;
t1714 = -t1517 * t1699 + t1521 * t1696;
t1712 = -t1517 * t1698 + t1521 * t1697;
t1126 = t1515 * t1188 + t1519 * t1189;
t1432 = t1517 * g(3) + t1529;
t1383 = t1521 * t1432 - t1517 * t1433;
t1694 = -t1517 * t1585 + t1521 * t1584;
t1475 = t1477 ^ 2;
t1476 = t1479 ^ 2;
t1688 = pkin(2) * t1383;
t1633 = -0.2e1 * t1678;
t1540 = t1569 + t1633;
t1454 = t1524 * t1690 + t1540;
t1687 = pkin(2) * t1454;
t1514 = t1521 ^ 2;
t1637 = t1513 + t1514;
t1488 = t1637 * qJDD(1);
t1686 = pkin(2) * t1488;
t1685 = pkin(4) * t1516;
t1684 = qJDD(1) * pkin(1);
t1682 = qJ(6) * t1519;
t1242 = -t1335 * t1520 + t1336 * t1516;
t1676 = t1242 * t1517;
t1675 = t1242 * t1521;
t1670 = t1701 * t1515;
t1669 = t1701 * t1519;
t1396 = t1633 - t1695;
t1662 = t1396 * t1516;
t1661 = t1396 * t1520;
t1422 = t1652 + t1635;
t1657 = t1422 * t1516;
t1656 = t1422 * t1520;
t1485 = 0.2e1 * t1625 + t1636;
t1441 = t1485 * t1517;
t1651 = t1488 * t1518;
t1650 = t1488 * t1522;
t1502 = t1517 * t1641;
t1493 = qJDD(3) + t1502;
t1649 = t1493 * t1517;
t1648 = t1493 * t1521;
t1494 = qJDD(3) - t1502;
t1647 = t1494 * t1517;
t1646 = t1494 * t1521;
t1644 = t1514 * t1524;
t1257 = t1515 * t1261;
t1642 = t1517 * t1454;
t1258 = t1519 * t1261;
t1440 = t1521 * t1454;
t1638 = -pkin(4) * t1261 + pkin(9) * t1126;
t1632 = -pkin(4) * t1520 - pkin(3);
t1629 = t1518 * t1652;
t1628 = t1522 * t1652;
t1331 = (qJD(5) + t1469) * t1437 + t1558;
t1624 = pkin(4) * t1331 + t1257 + t1782;
t1623 = -pkin(4) * t1705 - t1258 + t1751;
t1118 = t1126 * t1516 - t1261 * t1520;
t1622 = pkin(3) * t1118 + t1638;
t1451 = -t1476 - t1634;
t1381 = t1451 * t1520 - t1657;
t1621 = pkin(3) * t1381 - t1336;
t1243 = t1335 * t1516 + t1520 * t1336;
t1170 = t1243 * t1517 + t1675;
t1241 = pkin(3) * t1242;
t1620 = -pkin(2) * t1170 - t1241;
t1377 = qJD(3) * t1479 + t1602;
t1380 = t1617 + t1406;
t1297 = t1377 * t1516 - t1380 * t1520;
t1299 = t1377 * t1520 + t1380 * t1516;
t1228 = t1297 * t1521 + t1299 * t1517;
t1295 = pkin(3) * t1297;
t1619 = -pkin(2) * t1228 - t1295;
t1114 = t1166 * t1515 - t1167 * t1519;
t1588 = -pkin(5) * t1167 + qJ(6) * t1166;
t1085 = -pkin(4) * t1114 - t1588;
t1091 = -pkin(9) * t1114 + (pkin(5) * t1515 - t1682) * t1173;
t1055 = -pkin(3) * t1114 + pkin(8) * t1102 + t1085 * t1520 + t1091 * t1516;
t1061 = -pkin(8) * t1101 - t1085 * t1516 + t1091 * t1520;
t1616 = -t1517 * t1055 + t1521 * t1061;
t1119 = t1126 * t1520 + t1261 * t1516;
t1125 = -t1188 * t1519 + t1189 * t1515;
t1072 = pkin(8) * t1119 + (-pkin(9) * t1516 + t1632) * t1125;
t1080 = -pkin(8) * t1118 + (-pkin(9) * t1520 + t1685) * t1125;
t1615 = -t1517 * t1072 + t1521 * t1080;
t1145 = pkin(5) * t1703 + t1166;
t1151 = qJ(6) * t1703 + t1167;
t1234 = -t1324 * t1515 - t1669;
t1103 = -pkin(9) * t1234 - t1145 * t1515 + t1151 * t1519;
t1587 = -pkin(5) * t1701 - qJ(6) * t1324;
t1169 = -pkin(4) * t1234 - t1587;
t1238 = -t1324 * t1519 + t1670;
t1196 = t1238 * t1520 - t1730;
t1076 = -pkin(3) * t1234 + pkin(8) * t1196 + t1103 * t1516 + t1169 * t1520;
t1194 = t1238 * t1516 + t1725;
t1082 = -pkin(8) * t1194 + t1103 * t1520 - t1169 * t1516;
t1614 = -t1517 * t1076 + t1521 * t1082;
t1530 = 0.2e1 * qJD(6) * t1439 - t1533;
t1154 = -pkin(5) * t1416 + t1530 + t1734;
t1120 = -pkin(5) * t1668 + t1154 * t1519 - t1783;
t1535 = pkin(5) * t1373 + qJ(6) * t1706 + t1577;
t1122 = -t1535 - 0.2e1 * t1677 - t1786;
t1206 = -t1516 * t1702 - t1774;
t1083 = pkin(8) * t1206 + t1120 * t1516 + t1122 * t1520 - t1787;
t1204 = t1520 * t1702 - t1775;
t1087 = -pkin(8) * t1204 + t1120 * t1520 - t1122 * t1516;
t1613 = -t1517 * t1083 + t1521 * t1087;
t1155 = (-t1705 - t1416) * pkin(5) + t1530;
t1121 = -t1155 * t1515 - t1682 * t1705 - t1750;
t1528 = pkin(5) * t1707 + qJ(6) * t1700 - t1167;
t1123 = -t1528 - t1752;
t1084 = t1121 * t1516 + t1123 * t1520 + t1759;
t1089 = t1121 * t1520 - t1123 * t1516 - t1764;
t1612 = -t1517 * t1084 + t1521 * t1089;
t1326 = (-qJD(5) + t1469) * t1439 + t1605;
t1236 = t1326 * t1515 - t1669;
t1116 = -pkin(9) * t1236 - t1125;
t1240 = t1326 * t1519 + t1670;
t1197 = t1240 * t1520 - t1730;
t1095 = pkin(8) * t1197 + t1516 * t1116 + t1236 * t1632;
t1195 = t1240 * t1516 + t1725;
t1099 = -pkin(8) * t1195 + t1116 * t1520 + t1236 * t1685;
t1611 = -t1517 * t1095 + t1521 * t1099;
t1164 = t1188 - t1752;
t1190 = t1257 - t1750;
t1106 = t1164 * t1520 + t1190 * t1516 + t1759;
t1110 = -t1164 * t1516 + t1190 * t1520 - t1764;
t1610 = -t1517 * t1106 + t1521 * t1110;
t1165 = t1189 + t1786;
t1191 = t1258 + t1783;
t1213 = -t1331 * t1516 + t1774;
t1107 = pkin(8) * t1213 + t1165 * t1520 + t1191 * t1516 + t1787;
t1211 = t1331 * t1520 + t1775;
t1112 = -pkin(8) * t1211 - t1165 * t1516 + t1191 * t1520;
t1609 = -t1517 * t1107 + t1521 * t1112;
t1407 = -t1475 - t1476;
t1175 = -pkin(3) * t1407 + pkin(8) * t1299 + t1243;
t1177 = -pkin(8) * t1297 - t1242;
t1608 = -t1517 * t1175 + t1521 * t1177;
t1420 = -t1634 - t1475;
t1366 = t1420 * t1520 - t1763;
t1244 = -pkin(3) * t1375 + pkin(8) * t1366 + t1661;
t1365 = t1420 * t1516 + t1761;
t1307 = -pkin(8) * t1365 - t1662;
t1607 = -t1517 * t1244 + t1521 * t1307;
t1382 = -t1451 * t1516 - t1656;
t1255 = -pkin(3) * t1745 + pkin(8) * t1382 - t1662;
t1334 = -pkin(8) * t1381 - t1661;
t1606 = -t1517 * t1255 + t1521 * t1334;
t1464 = t1524 * pkin(1) + t1540;
t1468 = -t1541 + t1684;
t1603 = -t1522 * t1464 - t1468 * t1518;
t1601 = -t1495 * t1518 - t1522 * t1496;
t1600 = t1518 * t1502;
t1599 = t1522 * t1502;
t1598 = pkin(9) * t1238 + t1519 * t1145 + t1515 * t1151 + t1735;
t1597 = pkin(9) * t1240 + t1126 + t1735;
t1596 = pkin(3) * t1211 + t1624;
t1595 = t1623 + t1765;
t1489 = qJDD(1) * t1522 - t1518 * t1524;
t1594 = pkin(6) * t1489 + g(3) * t1518;
t1490 = qJDD(1) * t1518 + t1522 * t1524;
t1593 = -pkin(6) * t1490 + g(3) * t1522;
t1592 = t1516 * t1617;
t1591 = t1516 * t1463;
t1590 = t1520 * t1617;
t1589 = t1520 * t1463;
t1582 = pkin(3) * t1365 - t1335;
t1581 = pkin(2) * t1485 - t1440;
t1487 = t1509 - 0.2e1 * t1627;
t1580 = pkin(2) * t1487 + t1642;
t1579 = pkin(3) * t1194 + t1598;
t1578 = pkin(3) * t1195 + t1597;
t1384 = -t1432 * t1517 - t1433 * t1521;
t1575 = t1464 * t1518 - t1468 * t1522;
t1574 = t1495 * t1522 - t1496 * t1518;
t1093 = t1118 * t1521 + t1119 * t1517;
t1572 = -pkin(2) * t1093 - t1622;
t1301 = t1381 * t1521 + t1382 * t1517;
t1571 = -pkin(2) * t1301 - t1621;
t1500 = -t1523 - t1644;
t1445 = t1500 * t1521 - t1649;
t1570 = -pkin(2) * t1445 - t1433;
t1208 = pkin(3) * t1396 + pkin(8) * t1243;
t1567 = -pkin(8) * t1675 - t1517 * t1208;
t1563 = pkin(4) * t1702 + pkin(5) * t1667 + t1515 * t1154 - t1782;
t1562 = -t1595 - t1788;
t1147 = t1211 * t1521 + t1213 * t1517;
t1561 = -pkin(2) * t1147 - t1596;
t1560 = t1519 * t1155 + t1705 * t1749 + t1751;
t1275 = t1365 * t1521 + t1366 * t1517;
t1559 = -pkin(2) * t1275 - t1582;
t1557 = pkin(2) * t1114 - t1521 * t1055 - t1517 * t1061;
t1556 = pkin(2) * t1125 - t1521 * t1072 - t1517 * t1080;
t1555 = pkin(2) * t1234 - t1521 * t1076 - t1517 * t1082;
t1554 = -t1521 * t1083 - t1517 * t1087 + t1789;
t1553 = -t1521 * t1084 - t1517 * t1089 + t1754;
t1552 = pkin(2) * t1236 - t1521 * t1095 - t1517 * t1099;
t1551 = -t1521 * t1106 - t1517 * t1110 + t1754;
t1550 = -t1521 * t1107 - t1517 * t1112 - t1789;
t1549 = pkin(2) * t1407 - t1521 * t1175 - t1517 * t1177;
t1548 = pkin(2) * t1375 - t1521 * t1244 - t1517 * t1307;
t1547 = pkin(2) * t1745 - t1521 * t1255 - t1517 * t1334;
t1546 = pkin(3) * t1204 + t1563;
t1130 = t1194 * t1521 + t1196 * t1517;
t1545 = -pkin(2) * t1130 - t1579;
t1131 = t1195 * t1521 + t1197 * t1517;
t1544 = -pkin(2) * t1131 - t1578;
t1543 = t1560 + t1765;
t1542 = -pkin(2) * t1396 + pkin(8) * t1676 - t1521 * t1208;
t1141 = t1204 * t1521 + t1206 * t1517;
t1538 = -pkin(2) * t1141 - t1546;
t1536 = -t1543 - t1788;
t1443 = t1498 * t1517 + t1646;
t1526 = -pkin(2) * t1443 - t1432;
t1499 = t1523 - t1644;
t1497 = -t1523 + t1645;
t1492 = (-t1513 + t1514) * t1524;
t1491 = t1637 * t1524;
t1483 = t1637 * t1681;
t1482 = t1568 - 0.2e1 * t1684;
t1474 = -t1496 + t1511 + 0.2e1 * t1512;
t1458 = -t1476 + t1634;
t1457 = t1475 - t1634;
t1456 = t1486 * t1517 + t1514 * t1681;
t1455 = t1513 * t1681 + t1521 * t1564;
t1450 = -t1500 * t1517 - t1648;
t1449 = -t1499 * t1517 + t1646;
t1448 = (t1486 - t1627) * t1521;
t1447 = t1498 * t1521 - t1647;
t1446 = t1497 * t1521 - t1649;
t1444 = t1499 * t1521 + t1647;
t1442 = t1497 * t1517 + t1648;
t1430 = -t1485 * t1521 - t1487 * t1517;
t1429 = t1487 * t1521 - t1441;
t1426 = t1476 - t1475;
t1419 = pkin(1) * t1468 - qJ(2) * t1464;
t1410 = -t1590 + t1591;
t1409 = -t1592 - t1589;
t1388 = t1457 * t1520 - t1657;
t1387 = -t1458 * t1516 + t1761;
t1386 = t1457 * t1516 + t1656;
t1385 = t1458 * t1520 + t1763;
t1376 = -t1463 + t1566;
t1371 = t1520 * t1406 - t1591;
t1370 = t1516 * t1406 + t1589;
t1369 = t1516 * t1566 + t1590;
t1368 = -t1520 * t1566 + t1592;
t1367 = pkin(2) * t1491 + t1384;
t1361 = -qJ(2) * t1450 - t1570;
t1360 = -qJ(2) * t1447 - t1526;
t1352 = -t1447 * t1690 + t1581;
t1351 = -t1450 * t1690 + t1580;
t1350 = qJ(2) * t1487 - t1445 * t1690 - t1440;
t1349 = qJ(2) * t1485 - t1443 * t1690 - t1642;
t1344 = -t1409 * t1517 + t1410 * t1521;
t1343 = t1409 * t1521 + t1410 * t1517;
t1342 = -qJ(2) * t1491 + t1488 * t1690 - t1383;
t1322 = -qJ(2) * t1384 + t1688;
t1317 = -t1386 * t1517 + t1388 * t1521;
t1316 = -t1385 * t1517 + t1387 * t1521;
t1315 = t1386 * t1521 + t1388 * t1517;
t1314 = t1385 * t1521 + t1387 * t1517;
t1302 = -t1381 * t1517 + t1382 * t1521;
t1298 = -t1375 * t1520 - t1516 * t1745;
t1296 = -t1375 * t1516 + t1520 * t1745;
t1282 = -t1384 * t1690 - t1687;
t1281 = -t1370 * t1517 + t1371 * t1521;
t1280 = -t1368 * t1517 + t1369 * t1521;
t1279 = t1370 * t1521 + t1371 * t1517;
t1278 = t1368 * t1521 + t1369 * t1517;
t1277 = -qJ(2) * t1454 - t1383 * t1690;
t1276 = -t1365 * t1517 + t1366 * t1521;
t1230 = -t1297 * t1517 + t1299 * t1521;
t1229 = -t1296 * t1517 + t1298 * t1521;
t1227 = t1296 * t1521 + t1298 * t1517;
t1174 = -qJ(2) * t1302 - t1571;
t1171 = t1243 * t1521 - t1676;
t1168 = -qJ(2) * t1276 - t1559;
t1149 = -t1211 * t1517 + t1213 * t1521;
t1143 = -t1204 * t1517 + t1206 * t1521;
t1135 = -t1302 * t1690 + t1547;
t1134 = qJ(2) * t1745 - t1301 * t1690 + t1606;
t1133 = -t1195 * t1517 + t1197 * t1521;
t1132 = -t1194 * t1517 + t1196 * t1521;
t1129 = -qJ(2) * t1230 - t1619;
t1128 = -t1276 * t1690 + t1548;
t1127 = qJ(2) * t1375 - t1275 * t1690 + t1607;
t1108 = -qJ(2) * t1171 - t1620;
t1105 = -t1230 * t1690 + t1549;
t1104 = qJ(2) * t1407 - t1228 * t1690 + t1608;
t1098 = -t1171 * t1690 + t1542;
t1097 = -qJ(2) * t1396 - t1170 * t1690 + t1567;
t1094 = -t1118 * t1517 + t1119 * t1521;
t1092 = -qJ(2) * t1149 - t1561;
t1090 = -t1562 - t1780;
t1078 = -t1536 - t1780;
t1077 = -qJ(2) * t1143 - t1538;
t1075 = -qJ(2) * t1133 - t1544;
t1074 = -t1101 * t1517 + t1102 * t1521;
t1071 = -qJ(2) * t1132 - t1545;
t1070 = -t1149 * t1690 + t1550;
t1069 = -t1147 * t1690 + t1609 - t1781;
t1068 = t1551 - t1771;
t1067 = t1610 + t1770;
t1066 = -t1133 * t1690 + t1552;
t1065 = qJ(2) * t1236 - t1131 * t1690 + t1611;
t1064 = t1553 - t1771;
t1063 = t1612 + t1770;
t1062 = -qJ(2) * t1094 - t1572;
t1059 = -t1143 * t1690 + t1554;
t1058 = -t1141 * t1690 + t1613 + t1781;
t1057 = -t1132 * t1690 + t1555;
t1056 = qJ(2) * t1234 - t1130 * t1690 + t1614;
t1054 = -qJ(2) * t1074 - t1719;
t1053 = -t1094 * t1690 + t1556;
t1052 = qJ(2) * t1125 - t1093 * t1690 + t1615;
t1051 = -t1074 * t1690 + t1557;
t1050 = qJ(2) * t1114 - t1073 * t1690 + t1616;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1489, 0, -t1490, 0, -t1594, -t1593, -t1574, -pkin(6) * t1574, 0, -t1489, t1490, 0, 0, 0, t1575, t1594, t1593, pkin(6) * t1575 + (-pkin(1) * t1518 + qJ(2) * t1522) * g(3), t1456 * t1518 + t1599, t1429 * t1518 + t1492 * t1522, t1444 * t1518 + t1509 * t1522, t1455 * t1518 - t1599, t1442 * t1518 - t1522 * t1636, qJDD(3) * t1522 - t1483 * t1518, t1522 * t1360 - t1518 * t1352 - pkin(6) * (-t1443 * t1522 + t1485 * t1518), t1522 * t1361 - t1518 * t1351 - pkin(6) * (-t1445 * t1522 + t1487 * t1518), -pkin(2) * t1650 + t1518 * t1367 - pkin(6) * (-t1491 * t1518 + t1650), t1522 * t1322 - t1518 * t1282 - pkin(6) * (-t1383 * t1522 - t1454 * t1518), t1279 * t1518 + t1628, t1227 * t1518 + t1426 * t1522, t1314 * t1518 + t1380 * t1522, t1278 * t1518 - t1628, t1315 * t1518 - t1376 * t1522, t1518 * t1343 + t1522 * t1635, t1522 * t1168 - t1518 * t1128 - pkin(6) * (-t1275 * t1522 + t1375 * t1518), t1522 * t1174 - t1518 * t1135 - pkin(6) * (-t1301 * t1522 + t1518 * t1745), t1522 * t1129 - t1518 * t1105 - pkin(6) * (-t1228 * t1522 + t1407 * t1518), t1522 * t1108 - t1518 * t1098 - pkin(6) * (-t1170 * t1522 - t1396 * t1518), t1717, t1795, t1791, t1740, t1793, t1739, -t1518 * t1068 + t1522 * t1090 - t1768, t1522 * t1092 - t1518 * t1070 - pkin(6) * (-t1147 * t1522 - t1777), t1522 * t1075 - t1518 * t1066 - pkin(6) * (-t1131 * t1522 + t1236 * t1518), t1522 * t1062 - t1518 * t1053 - pkin(6) * (-t1093 * t1522 + t1125 * t1518), t1717, t1791, -t1795, t1739, -t1793, t1740, -t1518 * t1064 + t1522 * t1078 - t1768, t1522 * t1071 - t1518 * t1057 - pkin(6) * (-t1130 * t1522 + t1234 * t1518), t1522 * t1077 - t1518 * t1059 - pkin(6) * (-t1141 * t1522 + t1777), t1522 * t1054 - t1518 * t1051 - pkin(6) * (-t1073 * t1522 + t1114 * t1518); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1490, 0, t1489, 0, t1593, -t1594, t1601, pkin(6) * t1601, 0, -t1490, -t1489, 0, 0, 0, t1603, -t1593, t1594, pkin(6) * t1603 + (pkin(1) * t1522 + qJ(2) * t1518) * g(3), -t1456 * t1522 + t1600, -t1429 * t1522 + t1492 * t1518, -t1444 * t1522 + t1509 * t1518, -t1455 * t1522 - t1600, -t1442 * t1522 - t1518 * t1636, qJDD(3) * t1518 + t1483 * t1522, t1518 * t1360 + t1522 * t1352 + pkin(6) * (t1443 * t1518 + t1485 * t1522), t1518 * t1361 + t1522 * t1351 + pkin(6) * (t1445 * t1518 + t1487 * t1522), -pkin(2) * t1651 - t1522 * t1367 + pkin(6) * (-t1491 * t1522 - t1651), t1518 * t1322 + t1522 * t1282 + pkin(6) * (t1383 * t1518 - t1454 * t1522), -t1279 * t1522 + t1629, -t1227 * t1522 + t1426 * t1518, -t1314 * t1522 + t1380 * t1518, -t1278 * t1522 - t1629, -t1315 * t1522 - t1376 * t1518, -t1522 * t1343 + t1518 * t1635, t1518 * t1168 + t1522 * t1128 + pkin(6) * (t1275 * t1518 + t1375 * t1522), t1518 * t1174 + t1522 * t1135 + pkin(6) * (t1301 * t1518 + t1522 * t1745), t1518 * t1129 + t1522 * t1105 + pkin(6) * (t1228 * t1518 + t1407 * t1522), t1518 * t1108 + t1522 * t1098 + pkin(6) * (t1170 * t1518 - t1396 * t1522), t1718, -t1794, t1790, t1737, -t1792, t1736, t1522 * t1068 + t1518 * t1090 + t1769, t1518 * t1092 + t1522 * t1070 + pkin(6) * (t1147 * t1518 - t1776), t1518 * t1075 + t1522 * t1066 + pkin(6) * (t1131 * t1518 + t1236 * t1522), t1518 * t1062 + t1522 * t1053 + pkin(6) * (t1093 * t1518 + t1125 * t1522), t1718, t1790, t1794, t1736, t1792, t1737, t1522 * t1064 + t1518 * t1078 + t1769, t1518 * t1071 + t1522 * t1057 + pkin(6) * (t1130 * t1518 + t1234 * t1522), t1518 * t1077 + t1522 * t1059 + pkin(6) * (t1141 * t1518 + t1776), t1518 * t1054 + t1522 * t1051 + pkin(6) * (t1073 * t1518 + t1114 * t1522); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1495, t1496, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1482, t1474, t1419, t1448, t1430, t1449, t1441, t1446, 0, t1349, t1350, t1342, t1277, t1281, t1229, t1316, t1280, t1317, t1344, t1127, t1134, t1104, t1097, t1694, -t1138, t1767, t1712, -t1162, t1714, t1067, t1069, t1065, t1052, t1694, t1767, t1138, t1714, t1162, t1712, t1063, t1056, t1058, t1050; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1524, 0, 0, -g(3), -t1495, 0, 0, -qJDD(1), t1524, 0, 0, 0, -t1468, 0, g(3), qJ(2) * g(3), t1502, t1492, t1509, -t1502, -t1636, qJDD(3), t1360, t1361, -t1686, t1322, t1652, t1426, t1380, -t1652, -t1376, t1635, t1168, t1174, t1129, t1108, t1312, t1235, t1743, t1309, t1286, -t1708, t1090, t1092, t1075, t1062, t1312, t1743, -t1235, -t1708, -t1286, t1309, t1078, t1071, t1077, t1054; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, 0, qJDD(1), 0, g(3), 0, -t1496, 0, 0, -t1524, -qJDD(1), 0, 0, 0, -t1464, -g(3), 0, pkin(1) * g(3), -t1456, -t1429, -t1444, -t1455, -t1442, t1483, t1352, t1351, -t1367, t1282, -t1279, -t1227, -t1314, -t1278, -t1315, -t1343, t1128, t1135, t1105, t1098, -t1693, -t1137, -t1766, -t1711, -t1159, -t1713, t1068, t1070, t1066, t1053, -t1693, -t1766, t1137, -t1713, t1159, -t1711, t1064, t1057, t1059, t1051; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1495, t1496, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1482, t1474, t1419, t1448, t1430, t1449, t1441, t1446, 0, t1349, t1350, t1342, t1277, t1281, t1229, t1316, t1280, t1317, t1344, t1127, t1134, t1104, t1097, t1694, -t1138, t1767, t1712, -t1162, t1714, t1067, t1069, t1065, t1052, t1694, t1767, t1138, t1714, t1162, t1712, t1063, t1056, t1058, t1050; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1468, -t1464, 0, t1448, t1430, t1449, t1441, t1446, 0, -pkin(7) * t1443 - t1642, -pkin(7) * t1445 - t1440, pkin(7) * t1488 - t1383, -pkin(7) * t1383, t1281, t1229, t1316, t1280, t1317, t1344, -pkin(7) * t1275 + t1607, -pkin(7) * t1301 + t1606, -pkin(7) * t1228 + t1608, -pkin(7) * t1170 + t1567, t1694, -t1138, t1767, t1712, -t1162, t1714, t1610 - t1785, -pkin(7) * t1147 + t1609, -pkin(7) * t1131 + t1611, -pkin(7) * t1093 + t1615, t1694, t1767, t1138, t1714, t1162, t1712, t1612 - t1785, -pkin(7) * t1130 + t1614, -pkin(7) * t1141 + t1613, -pkin(7) * t1073 + t1616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1524, 0, 0, 0, t1468, 0, -g(3), 0, -t1502, -t1492, -t1509, t1502, t1636, -qJDD(3), t1526, t1570, t1686, -t1688, -t1652, -t1426, -t1380, t1652, t1376, -t1635, t1559, t1571, t1619, t1620, -t1312, -t1235, -t1743, -t1309, -t1286, t1708, t1562, t1561, t1544, t1572, -t1312, -t1743, t1235, t1708, t1286, -t1309, t1536, t1545, t1538, t1719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, qJDD(1), 0, 0, 0, t1464, g(3), 0, 0, t1456, t1429, t1444, t1455, t1442, -t1483, pkin(7) * t1447 - t1581, pkin(7) * t1450 - t1580, t1367, pkin(7) * t1384 + t1687, t1279, t1227, t1314, t1278, t1315, t1343, pkin(7) * t1276 - t1548, pkin(7) * t1302 - t1547, pkin(7) * t1230 - t1549, pkin(7) * t1171 - t1542, t1693, t1137, t1766, t1711, t1159, t1713, -t1551 + t1784, pkin(7) * t1149 - t1550, pkin(7) * t1133 - t1552, pkin(7) * t1094 - t1556, t1693, t1766, -t1137, t1713, -t1159, t1711, -t1553 + t1784, pkin(7) * t1132 - t1555, pkin(7) * t1143 - t1554, pkin(7) * t1074 - t1557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1486, -t1485, t1494, t1627, t1497, -t1627, 0, -t1454, -t1432, 0, t1371, t1298, t1387, t1369, t1388, t1410, t1307, t1334, t1177, -pkin(8) * t1242, t1584, t1201, t1757, t1697, t1226, t1696, t1110, t1112, t1099, t1080, t1584, t1757, -t1201, t1696, -t1226, t1697, t1089, t1082, t1087, t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1625, t1487, t1499, t1564, t1493, -t1625, t1454, 0, -t1433, 0, t1370, t1296, t1385, t1368, t1386, t1409, t1244, t1255, t1175, t1208, t1585, t1199, t1758, t1698, t1222, t1699, t1106, t1107, t1095, t1072, t1585, t1758, -t1199, t1699, -t1222, t1698, t1084, t1076, t1083, t1055; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1502, t1492, t1509, -t1502, -t1636, qJDD(3), t1432, t1433, 0, 0, t1652, t1426, t1380, -t1652, -t1376, t1635, t1582, t1621, t1295, t1241, t1312, t1235, t1743, t1309, t1286, -t1708, t1595, t1596, t1578, t1622, t1312, t1743, -t1235, -t1708, -t1286, t1309, t1543, t1579, t1546, t1537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1406, -t1375, t1744, t1617, t1457, -t1617, 0, -t1396, t1335, 0, t1313, t1239, t1742, t1531, t1290, t1583, t1190, t1191, t1116, -pkin(9) * t1125, t1313, t1742, -t1239, t1583, -t1290, t1531, t1121, t1103, t1120, t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1463, t1745, t1458, -t1566, t1422, -t1463, t1396, 0, t1336, 0, -t1401, -t1704, -t1701, t1401, t1324, -t1404, t1164, t1165, -pkin(4) * t1236, -pkin(4) * t1125, -t1401, -t1701, t1704, -t1404, -t1324, t1401, t1123, t1169, t1122, t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1652, t1426, t1380, -t1652, -t1376, t1635, -t1335, -t1336, 0, 0, t1312, t1235, t1743, t1309, t1286, -t1708, t1623, t1624, t1597, t1638, t1312, t1743, -t1235, -t1708, -t1286, t1309, t1560, t1598, t1563, t1539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, -t1705, t1707, t1655, t1412, -t1655, 0, t1261, t1188, 0, t1356, t1707, t1705, -t1655, -t1412, t1655, -qJ(6) * t1705, t1151, t1154, -qJ(6) * t1173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1416, t1702, -t1413, -t1565, t1706, -t1416, -t1261, 0, t1189, 0, t1416, -t1413, -t1702, -t1416, -t1706, -t1565, t1155, t1145, pkin(5) * t1702, -pkin(5) * t1173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1401, t1704, t1701, -t1401, -t1324, t1404, -t1188, -t1189, 0, 0, t1401, t1701, -t1704, t1404, t1324, -t1401, t1528, t1587, t1459 + t1535, t1588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, t1707, t1705, -t1655, -t1412, t1655, 0, t1167, -t1173, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1401, t1701, -t1704, t1404, t1324, -t1401, -t1167, 0, t1166, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1416, t1413, t1702, t1416, t1706, t1565, t1173, -t1166, 0, 0;];
m_new_reg  = t1;
