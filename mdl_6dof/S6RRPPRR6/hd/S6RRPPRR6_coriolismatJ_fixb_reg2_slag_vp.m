% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:15:23
% EndTime: 2019-03-09 09:15:58
% DurationCPUTime: 27.71s
% Computational Cost: add. (20056->678), mult. (36453->898), div. (0->0), fcn. (42156->8), ass. (0->548)
t667 = qJD(2) - qJD(5);
t506 = sin(qJ(5));
t509 = cos(qJ(2));
t843 = sin(pkin(10));
t601 = t509 * t843;
t507 = sin(qJ(2));
t847 = pkin(7) - qJ(4);
t603 = t847 * t507;
t844 = cos(pkin(10));
t424 = -t847 * t601 + t844 * t603;
t465 = t507 * t844 - t601;
t518 = -t465 * pkin(8) + t424;
t855 = cos(qJ(5));
t602 = t509 * t844;
t426 = t847 * t602 + t843 * t603;
t464 = -t507 * t843 - t602;
t915 = t464 * pkin(8) + t426;
t114 = -t506 * t915 + t855 * t518;
t970 = t667 * t114;
t966 = t506 * t518 + t855 * t915;
t969 = t667 * t966;
t508 = cos(qJ(6));
t963 = t508 * t966;
t879 = t963 / 0.2e1;
t505 = sin(qJ(6));
t960 = t114 * t505;
t185 = -t960 / 0.2e1;
t186 = t960 / 0.2e1;
t968 = t185 + t186;
t959 = t114 * t508;
t187 = -t959 / 0.2e1;
t188 = t959 / 0.2e1;
t967 = t187 + t188;
t854 = t966 * pkin(5);
t965 = t966 * t114;
t964 = t505 * t966;
t451 = t855 * t465;
t780 = t506 * t464;
t901 = t451 + t780;
t450 = t855 * t464;
t779 = t506 * t465;
t902 = -t450 + t779;
t565 = -t114 * t902 - t901 * t966;
t729 = qJD(6) * t505;
t910 = t505 * t902;
t919 = -t910 / 0.2e1;
t935 = 0.2e1 * t919;
t936 = t935 * qJD(1);
t958 = t936 - t729;
t728 = qJD(6) * t508;
t909 = t508 * t902;
t921 = -t909 / 0.2e1;
t934 = 0.2e1 * t921;
t937 = t934 * qJD(1);
t957 = t937 - t728;
t398 = t901 ^ 2;
t914 = t902 ^ 2;
t564 = t914 - t398;
t948 = t564 * t508;
t955 = qJD(1) * t948;
t949 = t564 * t505;
t954 = qJD(1) * t949;
t953 = qJD(2) + qJD(5);
t906 = t901 * t508;
t925 = -t906 / 0.2e1;
t932 = 0.2e1 * t925;
t946 = qJD(2) * t932;
t907 = t901 * t505;
t923 = -t907 / 0.2e1;
t933 = 0.2e1 * t923;
t945 = qJD(5) * t933;
t920 = t909 / 0.2e1;
t928 = t921 + t920;
t944 = qJD(6) * t928;
t918 = t910 / 0.2e1;
t929 = t919 + t918;
t943 = qJD(6) * t929;
t942 = qJD(6) * t934;
t941 = qJD(6) * t935;
t940 = t564 * qJD(1);
t924 = t906 / 0.2e1;
t926 = t924 + t925;
t939 = t926 * qJD(4);
t922 = t907 / 0.2e1;
t927 = t923 + t922;
t938 = t927 * qJD(4);
t463 = t506 * t843 - t844 * t855;
t283 = t463 * t918;
t502 = t505 ^ 2;
t752 = qJD(1) * t901;
t905 = t902 * t752;
t917 = t502 * t905;
t504 = t508 ^ 2;
t916 = t504 * t905;
t852 = t901 * pkin(5);
t853 = t902 * pkin(9);
t241 = t852 + t853;
t794 = t504 * t902;
t913 = t794 / 0.2e1;
t796 = t502 * t902;
t912 = t796 / 0.2e1;
t911 = pkin(5) * t902;
t778 = t507 * qJ(3);
t882 = pkin(2) + pkin(3);
t460 = t509 * t882 + pkin(1) + t778;
t416 = -t464 * pkin(4) + t460;
t583 = -pkin(9) * t901 + t911;
t513 = t416 + t583;
t100 = -t508 * t513 + t964;
t101 = t505 * t513 + t963;
t568 = t100 * t508 - t101 * t505;
t908 = t568 * t902;
t766 = t502 + t504;
t831 = t101 * t508;
t832 = t100 * t505;
t554 = -t831 / 0.2e1 - t832 / 0.2e1;
t904 = 0.2e1 * t901;
t473 = qJ(3) * t844 - t843 * t882;
t472 = -qJ(3) * t843 - t844 * t882;
t520 = -pkin(4) + t472;
t413 = t473 * t506 - t855 * t520;
t407 = pkin(5) + t413;
t480 = t504 - t502;
t903 = t480 * t667;
t444 = t451 / 0.2e1;
t618 = t780 / 0.2e1;
t392 = t444 + t618;
t467 = t506 * t844 + t843 * t855;
t199 = (0.1e1 - t766) * t467 * t463;
t198 = t199 * qJD(3);
t789 = t505 * t241;
t121 = t789 + t959;
t823 = t121 * t508;
t775 = t508 * t241;
t120 = t775 - t960;
t826 = t120 * t505;
t550 = t823 / 0.2e1 - t826 / 0.2e1;
t809 = t966 * t463;
t628 = t809 / 0.2e1;
t812 = t114 * t467;
t629 = -t812 / 0.2e1;
t665 = t463 * t554 + t629;
t6 = t467 * t550 + t628 + t665;
t414 = t473 * t855 + t506 * t520;
t408 = -pkin(9) + t414;
t860 = t504 / 0.2e1;
t861 = t502 / 0.2e1;
t604 = t860 + t861;
t580 = t604 * t408;
t585 = t604 * pkin(9);
t870 = -t414 / 0.2e1;
t875 = -t407 / 0.2e1;
t883 = -pkin(5) / 0.2e1;
t62 = (t413 * t604 + t875 + t883) * t467 + (t870 + t580 - t585) * t463;
t900 = -t6 * qJD(1) + t62 * qJD(2) - t198;
t616 = t779 / 0.2e1;
t617 = -t779 / 0.2e1;
t390 = t617 + t616;
t500 = t509 * qJ(3);
t461 = -t507 * t882 + t500;
t850 = t465 * pkin(4);
t418 = t461 - t850;
t176 = t418 - t241;
t792 = t505 * t176;
t103 = -t959 + t792;
t827 = t103 * t508;
t777 = t508 * t176;
t102 = t777 + t960;
t830 = t102 * t505;
t552 = t827 / 0.2e1 - t830 / 0.2e1;
t674 = t467 * qJD(2);
t898 = -qJD(5) * t467 + t674;
t678 = t463 * qJD(2);
t897 = -qJD(5) * t463 + t678;
t403 = t766 * t463;
t682 = t403 * qJD(2);
t896 = -qJD(5) * t403 + t682;
t204 = t934 * t505;
t605 = t861 - t504 / 0.2e1;
t212 = t605 * t901;
t707 = t212 * qJD(6);
t895 = -t204 * qJD(2) - t707;
t876 = -t902 / 0.2e1;
t607 = t902 / 0.2e1 + t876;
t783 = t505 * t508;
t203 = t607 * t783;
t894 = -qJD(5) * t203 - t707;
t893 = -t204 * qJD(5) + t707;
t892 = qJD(2) * t203 + t707;
t486 = t505 * t728;
t712 = t203 * qJD(1);
t891 = t712 - t486;
t890 = t712 + t486;
t586 = -t451 / 0.2e1;
t530 = -t780 + 0.2e1 * t586;
t889 = qJD(4) * t530;
t888 = t530 * qJD(1);
t887 = 0.2e1 * t407;
t767 = t913 + t912;
t650 = qJD(1) * t783;
t99 = t212 * t667 - t398 * t650;
t885 = t464 ^ 2;
t884 = t465 ^ 2;
t881 = t102 / 0.2e1;
t880 = -t103 / 0.2e1;
t878 = t114 / 0.2e1;
t877 = -t901 / 0.2e1;
t874 = t407 / 0.2e1;
t873 = -t408 / 0.2e1;
t872 = t408 / 0.2e1;
t871 = -t413 / 0.2e1;
t869 = t414 / 0.2e1;
t868 = -t450 / 0.2e1;
t867 = -t463 / 0.2e1;
t866 = t463 / 0.2e1;
t865 = -t464 / 0.2e1;
t864 = t465 / 0.2e1;
t863 = -t467 / 0.2e1;
t862 = t467 / 0.2e1;
t858 = t507 / 0.2e1;
t857 = t508 / 0.2e1;
t856 = t6 * qJD(5);
t848 = t467 * pkin(5);
t7 = -t100 * t102 + t101 * t103 + t965;
t846 = t7 * qJD(1);
t828 = t103 * t505;
t829 = t102 * t508;
t8 = (t828 + t829) * t901 - t908;
t845 = t8 * qJD(1);
t813 = t114 * t901;
t20 = -t813 - (t831 + t832) * t902;
t842 = qJD(1) * t20;
t769 = t629 - t809 / 0.2e1;
t42 = t812 / 0.2e1 + t628 + t769;
t841 = qJD(1) * t42;
t45 = t568 * t507;
t840 = qJD(1) * t45;
t56 = t100 * t902 + t114 * t907;
t839 = qJD(1) * t56;
t57 = -t101 * t902 - t114 * t906;
t838 = qJD(1) * t57;
t66 = -t902 * t966 - t813;
t837 = qJD(1) * t66;
t608 = t877 + t901 / 0.2e1;
t582 = t608 * t467;
t797 = t463 * t902;
t80 = t283 + (-t797 / 0.2e1 + t582) * t505;
t836 = qJD(1) * t80;
t107 = t463 * t607 + t582;
t84 = t107 * t508;
t835 = qJD(1) * t84;
t834 = qJD(3) * t42;
t824 = t121 * t505;
t825 = t120 * t508;
t10 = (t824 + t825) * t901 + t908;
t833 = t10 * qJD(1);
t13 = (-t121 / 0.2e1 + t880) * t508 + (t120 / 0.2e1 + t881) * t505;
t822 = t13 * qJD(1);
t14 = t100 * t901 + t102 * t902 + t505 * t565;
t821 = t14 * qJD(1);
t15 = t101 * t901 - t103 * t902 + t508 * t565;
t820 = t15 * qJD(1);
t16 = (-t100 + t964) * t901 + (t120 + t960) * t902;
t819 = t16 * qJD(1);
t17 = (-t101 + t963) * t901 + (-t121 + t959) * t902;
t818 = t17 * qJD(1);
t522 = -t580 * t902 + t874 * t901;
t553 = -t829 / 0.2e1 - t828 / 0.2e1;
t19 = t522 + t553;
t817 = t19 * qJD(1);
t606 = t413 / 0.2e1 + t875;
t516 = (t873 + t869) * t901 + t606 * t902;
t512 = pkin(9) * t877 + t911 / 0.2e1 + t516;
t21 = t879 - t963 / 0.2e1 + t512 * t505;
t808 = t21 * qJD(1);
t24 = t508 * t512;
t807 = t24 * qJD(1);
t581 = t604 * t902;
t527 = -pkin(9) * t581 + t883 * t901;
t551 = t825 / 0.2e1 + t824 / 0.2e1;
t32 = t527 - t551;
t805 = t32 * qJD(1);
t804 = t901 * t463;
t801 = t407 * t467;
t41 = t416 * t418;
t800 = t41 * qJD(1);
t799 = t413 * t467;
t798 = t414 * t463;
t624 = t902 * t860;
t590 = -t796 / 0.2e1 + t624;
t127 = t605 * t902 + t590;
t765 = qJD(1) * t127;
t135 = -t901 * t907 - t902 * t910;
t763 = qJD(1) * t135;
t140 = t914 + t398;
t137 = t140 * t508;
t761 = qJD(1) * t137;
t142 = -t416 * t901 + t418 * t902;
t760 = qJD(1) * t142;
t143 = t416 * t902 + t418 * t901;
t759 = qJD(1) * t143;
t202 = -t424 * t465 + t426 * t464;
t756 = qJD(1) * t202;
t274 = -t460 * t465 - t461 * t464;
t755 = qJD(1) * t274;
t275 = -t460 * t464 + t461 * t465;
t754 = qJD(1) * t275;
t753 = qJD(1) * t902;
t751 = qJD(1) * t416;
t750 = qJD(1) * t507;
t749 = qJD(1) * t509;
t748 = qJD(2) * qJ(3);
t746 = qJD(2) * t901;
t745 = qJD(2) * t902;
t744 = qJD(2) * t505;
t743 = qJD(2) * t508;
t742 = qJD(3) * t403;
t741 = qJD(3) * t463;
t740 = qJD(3) * t467;
t739 = qJD(3) * t507;
t737 = qJD(5) * t902;
t735 = qJD(5) * t901;
t734 = qJD(5) * t416;
t731 = qJD(5) * t505;
t730 = qJD(5) * t508;
t727 = t107 * qJD(1);
t542 = (-pkin(2) / 0.2e1 - pkin(3) / 0.2e1) * t507 + t500 / 0.2e1;
t523 = -t850 / 0.2e1 + t542;
t548 = -t870 * t902 + t871 * t901;
t122 = t523 + t548;
t724 = t122 * qJD(1);
t521 = -t467 * t581 + t804 / 0.2e1;
t125 = -t507 * t604 + t521;
t723 = t125 * qJD(1);
t589 = t912 + t624;
t130 = t589 + t767;
t721 = t130 * qJD(1);
t349 = t502 * t876;
t588 = t349 - t794 / 0.2e1;
t131 = t588 - t767;
t720 = t131 * qJD(1);
t138 = t460 * t461;
t719 = t138 * qJD(1);
t717 = t140 * qJD(1);
t544 = t862 * t902 + t867 * t901;
t531 = t858 + t544;
t152 = t531 * t505;
t716 = t152 * qJD(1);
t155 = t531 * t508;
t715 = t155 * qJD(1);
t547 = -t804 / 0.2e1 - t902 * t863;
t174 = t858 + t547;
t713 = t174 * qJD(1);
t205 = t766 * t507 * t901;
t709 = t205 * qJD(1);
t708 = t212 * qJD(1);
t213 = t608 * t505;
t706 = t213 * qJD(1);
t214 = 0.2e1 * t922;
t705 = t214 * qJD(1);
t215 = 0.2e1 * t918;
t704 = t215 * qJD(1);
t701 = t933 * qJD(1);
t224 = t608 * t508;
t700 = t224 * qJD(1);
t699 = t932 * qJD(1);
t227 = 0.2e1 * t920;
t698 = t227 * qJD(1);
t232 = 0.2e1 * t924;
t695 = t232 * qJD(1);
t240 = t480 * t398;
t694 = t240 * qJD(1);
t562 = 0.2e1 * t868;
t260 = 0.2e1 * t616 + t562;
t692 = t260 * qJD(1);
t543 = t472 * t864 + t473 * t865;
t262 = t542 + t543;
t691 = t262 * qJD(1);
t279 = 0.2e1 * t617 + t450;
t689 = t279 * qJD(1);
t328 = t884 - t885;
t688 = t328 * qJD(1);
t524 = t843 * t865 + t844 * t864;
t345 = t858 + t524;
t687 = t345 * qJD(1);
t619 = -t780 / 0.2e1;
t388 = t619 + t586;
t686 = t388 * qJD(1);
t389 = t618 + t619;
t685 = t389 * qJD(1);
t391 = t868 + t450 / 0.2e1;
t684 = t391 * qJD(1);
t683 = t392 * qJD(1);
t417 = t884 + t885;
t681 = t417 * qJD(1);
t573 = -pkin(2) * t509 - t778;
t474 = -pkin(1) + t573;
t475 = t507 * pkin(2) - t500;
t419 = t474 * t509 + t475 * t507;
t680 = t419 * qJD(1);
t420 = -t474 * t507 + t475 * t509;
t679 = t420 * qJD(1);
t677 = t464 * qJD(1);
t676 = t464 * qJD(2);
t675 = t465 * qJD(1);
t457 = t465 * qJD(2);
t673 = t480 * qJD(6);
t503 = t507 ^ 2;
t481 = t509 ^ 2 - t503;
t672 = t481 * qJD(1);
t671 = t481 * qJD(2);
t670 = t503 * qJD(1);
t669 = t507 * qJD(2);
t498 = t509 * qJD(2);
t668 = t509 * qJD(3);
t664 = pkin(1) * t750;
t663 = pkin(1) * t749;
t662 = pkin(7) * t498;
t661 = pkin(7) * t669;
t656 = t902 * t751;
t655 = t901 * t751;
t654 = t502 * t752;
t653 = t504 * t752;
t652 = t416 * t750;
t651 = t460 * t750;
t649 = t505 * t743;
t648 = t902 * t739;
t647 = t505 * t730;
t646 = qJD(6) * t902 * t901;
t645 = t901 * t753;
t642 = t464 * t675;
t641 = t464 * t457;
t640 = t474 * t475 * qJD(1);
t639 = t474 * t750;
t638 = t902 * t750;
t637 = t901 * t750;
t636 = t507 * t677;
t635 = t507 * t675;
t630 = t966 * t866;
t625 = t901 * t862;
t253 = t766 * t413;
t600 = t844 * qJD(2);
t599 = t843 * qJD(2);
t598 = t667 * t505;
t597 = t667 * t508;
t596 = t505 * t638;
t595 = t508 * t638;
t594 = t901 * t486;
t593 = t398 * t486;
t591 = t901 * t650;
t584 = t883 + t606;
t579 = -0.2e1 * t591;
t578 = 0.2e1 * t591;
t575 = t508 * t598;
t574 = t505 * t597;
t9 = -t100 * t120 + t101 * t121 - t965;
t572 = t9 * qJD(1) + t6 * qJD(3);
t549 = -t114 * t869 + t874 * t966;
t2 = -t854 / 0.2e1 + (pkin(9) * t880 + t101 * t871 + t121 * t872) * t508 + (pkin(9) * t881 + t100 * t871 + t120 * t873) * t505 + t549;
t97 = -t253 * t408 + t407 * t414;
t571 = t2 * qJD(1) + t97 * qJD(2);
t133 = -t403 * t408 + t801;
t3 = (t878 + t552) * t467 + (-t966 / 0.2e1 - t554) * t463;
t569 = qJD(1) * t3 - qJD(2) * t133;
t567 = -t827 + t830;
t566 = t823 - t826;
t563 = t407 * t902 + t408 * t901;
t193 = -t798 + t799;
t43 = (-t114 / 0.2e1 + t878) * t467;
t561 = qJD(1) * t43 - qJD(2) * t193;
t560 = t901 * (-qJD(6) - t753);
t415 = -t472 * t843 + t473 * t844;
t559 = qJD(2) * t415;
t558 = qJD(2) * t414 + t740;
t557 = -t737 + t745;
t556 = qJD(5) * t414 + t740;
t555 = t853 / 0.2e1 + t852 / 0.2e1;
t546 = t872 * t902 + t875 * t901;
t545 = t866 * t902 + t625;
t532 = t176 / 0.2e1 + t546;
t34 = t532 * t505 + t967;
t541 = -qJD(1) * t34 + t407 * t743;
t36 = -t532 * t508 + t968;
t540 = -qJD(1) * t36 + t407 * t744;
t539 = qJD(6) * t388 - t645;
t538 = qJD(6) * t392 + t905;
t537 = (t735 - t746) * t902;
t536 = t557 * t901;
t535 = t241 / 0.2e1 + t555;
t395 = t463 * t505;
t449 = t508 * t674;
t534 = qJD(6) * t395 - t467 * t730 + t449;
t397 = t463 * t508;
t448 = t505 * t674;
t533 = qJD(6) * t397 + t467 * t731 - t448;
t208 = t584 * t505;
t60 = -t508 * t535 + t968;
t529 = pkin(5) * t731 - qJD(1) * t60 + qJD(2) * t208;
t209 = t584 * t508;
t58 = t505 * t535 + t967;
t528 = pkin(5) * t730 - qJD(1) * t58 + qJD(2) * t209;
t519 = qJD(2) * t573 + t668;
t488 = t507 * t498;
t487 = t507 * t749;
t393 = t444 + t586;
t346 = t858 - t524;
t330 = -0.2e1 * t594;
t329 = 0.2e1 * t594;
t281 = t451 + 0.2e1 * t618;
t280 = t562 + t779;
t277 = t464 * t844 + t465 * t843;
t272 = t579 - t903;
t271 = t578 + t903;
t263 = t542 - t543;
t261 = t391 + t390;
t259 = t388 + t392;
t239 = qJD(2) * t388 + qJD(5) * t392;
t211 = t887 * t857;
t210 = t887 * t505 / 0.2e1;
t191 = -t575 - t708;
t190 = t574 + t708;
t175 = t858 - t547;
t154 = t507 * t857 - t508 * t544;
t153 = (-t507 / 0.2e1 + t544) * t505;
t145 = -t424 * t843 + t426 * t844;
t132 = t588 + t767;
t129 = t589 - t767;
t128 = t349 + t913 + t590;
t124 = t766 * t858 + t521;
t123 = t523 - t548;
t106 = -t901 * t863 + t797 / 0.2e1 + t545;
t83 = t463 * t920 + t467 * t924 + t508 * t545;
t81 = t467 * t922 + t505 * t625 + 0.2e1 * t283;
t63 = t798 / 0.2e1 + t801 / 0.2e1 - t848 / 0.2e1 - t463 * t585 + t766 * (-t799 / 0.2e1 + t408 * t867);
t61 = 0.2e1 * t185 + t775 / 0.2e1 - t555 * t508;
t59 = 0.2e1 * t187 - t789 / 0.2e1 + t555 * t505;
t44 = -t114 * t862 - t630 + t769;
t40 = t42 * qJD(5);
t37 = 0.2e1 * t186 + t777 / 0.2e1 - t546 * t508;
t35 = 0.2e1 * t188 - t792 / 0.2e1 + t546 * t505;
t33 = t527 + t551;
t23 = pkin(5) * t921 + pkin(9) * t924 + t516 * t508 - t964;
t22 = pkin(5) * t919 + pkin(9) * t922 + t516 * t505 + 0.2e1 * t879;
t18 = t522 - t553;
t12 = -t550 + t552;
t4 = t467 * t552 - t630 + t665;
t1 = t854 / 0.2e1 + t554 * t413 + t550 * t408 + t549 + t552 * pkin(9);
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, t671, 0, -t488, 0, 0, -pkin(1) * t669, -pkin(1) * t498, 0, 0, t488, 0, -t671, 0, 0, -t488, -t420 * qJD(2) + t507 * t668, 0, -qJD(2) * t419 + qJD(3) * t503 (qJD(2) * t475 - t739) * t474, -t641, t328 * qJD(2), 0, t641, 0, 0, qJD(2) * t274 - t464 * t739, qJD(2) * t275 + t465 * t739, qJD(4) * t417, qJD(2) * t138 + qJD(4) * t202 + t460 * t739, t536, -t667 * t564, 0, t537, 0, 0, qJD(2) * t142 + t734 * t901 + t648, qJD(2) * t143 - t734 * t902 + t739 * t901, qJD(4) * t140, qJD(2) * t41 + qJD(4) * t66 + t416 * t739, t504 * t536 - t593, -0.2e1 * t505 * t557 * t906 - t240 * qJD(6), -t505 * t646 + t667 * t948, t502 * t536 + t593, -t508 * t646 - t667 * t949, t537, qJD(2) * t14 - qJD(4) * t135 + qJD(5) * t16 + qJD(6) * t57 + t508 * t648, qJD(2) * t15 + qJD(4) * t137 + qJD(5) * t17 + qJD(6) * t56 - t505 * t648, -qJD(2) * t8 - qJD(3) * t205 - qJD(5) * t10, qJD(2) * t7 - qJD(3) * t45 + qJD(4) * t20 + qJD(5) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, t672, t498, -t487, -t669, 0, -t662 - t664, t661 - t663, 0, 0, t487, t498, -t672, 0, t669, -t487, -t662 - t679, t519, -t661 - t680, pkin(7) * t519 + t640, -t642, t688, t676, t642, -t457, 0, -qJD(2) * t426 + t755, -qJD(2) * t424 + t754 (t464 * t472 + t465 * t473) * qJD(2) + t277 * qJD(3), t719 + (-t424 * t473 + t426 * t472) * qJD(2) + t145 * qJD(3) + t263 * qJD(4), t905, -t940, qJD(5) * t280 - t745, -t645, qJD(5) * t281 - t746, 0, qJD(4) * t259 + t760 - t969, qJD(4) * t261 + t759 - t970 (t413 * t902 + t414 * t901) * qJD(2) + t106 * qJD(3), t800 + (-t114 * t414 - t413 * t966) * qJD(2) + t44 * qJD(3) + t123 * qJD(4) (-t649 + t653) * t902 + t893, t128 * qJD(5) + t329 + (-qJD(2) * t480 + t579) * t902, t744 * t901 + t944 + t945 + t955 (t649 + t654) * t902 - t893, qJD(5) * t932 + t743 * t901 + t943 - t954, t539, t821 + (t505 * t563 - t963) * qJD(2) + t81 * qJD(3) + t939 + t22 * qJD(5) + t37 * qJD(6), t820 + (t508 * t563 + t964) * qJD(2) + t83 * qJD(3) + t938 + t23 * qJD(5) + t35 * qJD(6), qJD(2) * t567 + t132 * qJD(4) + t12 * qJD(5) - t845, t846 + (-t407 * t966 - t408 * t567) * qJD(2) + t4 * qJD(3) + t18 * qJD(4) + t1 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, t498, t670, -t639 + t662, 0, 0, 0, 0, 0, 0, -t636, t635, t277 * qJD(2), qJD(2) * t145 + qJD(4) * t346 + t651, 0, 0, 0, 0, 0, 0, t638, t637, qJD(2) * t106, qJD(2) * t44 + qJD(4) * t175 + t40 + t652, 0, 0, 0, 0, 0, 0, qJD(2) * t81 + qJD(6) * t154 + t595, qJD(2) * t83 + qJD(6) * t153 - t596, -t709, qJD(2) * t4 + qJD(4) * t124 - t840 + t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t681, qJD(2) * t263 + qJD(3) * t346 + t756, 0, 0, 0, 0, 0, 0, qJD(2) * t259 + qJD(5) * t393, qJD(2) * t261 + qJD(5) * t390, t717, qJD(2) * t123 + qJD(3) * t175 + t837, 0, 0, 0, 0, 0, 0, t926 * t953 - t763 + t943, t927 * t953 + t761 + t944, qJD(2) * t132 + qJD(5) * t129, qJD(2) * t18 + qJD(3) * t124 + qJD(5) * t33 + t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t905, t940, qJD(2) * t280 - t737, t905, qJD(2) * t281 - t735, 0, qJD(4) * t393 + t655 + t969, qJD(4) * t390 - t656 + t970, 0, t834 (-t647 - t653) * t902 + t895, t128 * qJD(2) + t330 + (-qJD(5) * t480 + t578) * t902, qJD(2) * t933 + t731 * t901 + t944 - t955 (t647 - t654) * t902 - t895, t730 * t901 + t943 + t946 + t954, t538, t819 + t22 * qJD(2) + t939 + (t505 * t583 - t963) * qJD(5) + t61 * qJD(6), t818 + t23 * qJD(2) + t938 + (t508 * t583 + t964) * qJD(5) + t59 * qJD(6), t12 * qJD(2) + t129 * qJD(4) + qJD(5) * t566 - t833, t1 * qJD(2) + t33 * qJD(4) + (pkin(9) * t566 - t854) * qJD(5) + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t574 * t904 - t694, t505 * t560 + t928 * t953, -t99, t508 * t560 + t929 * t953, t239, qJD(2) * t37 + qJD(3) * t154 + qJD(4) * t929 + qJD(5) * t61 - qJD(6) * t101 + t838, qJD(2) * t35 + qJD(3) * t153 + qJD(4) * t928 + qJD(5) * t59 + qJD(6) * t100 + t839, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, -t672, 0, t487, 0, 0, t664, t663, 0, 0, -t487, 0, t672, 0, 0, t487, t679, 0, t680, -t640, t642, -t688, 0, -t642, 0, 0, qJD(4) * t465 - t755, qJD(4) * t464 - t754, 0, -qJD(4) * t262 - t719, -t905, t940, -t391 * qJD(5), t645, -t389 * qJD(5), 0, -t760 - t889, -qJD(4) * t260 - t759, qJD(3) * t107, -qJD(3) * t43 - qJD(4) * t122 - t800, -t894 - t916, qJD(5) * t127 + t578 * t902 + t329, -qJD(5) * t213 + t942 - t955, t894 - t917, -qJD(5) * t224 + qJD(6) * t215 + t954, -t539, qJD(3) * t80 - qJD(4) * t932 + qJD(5) * t21 + qJD(6) * t36 - t821, qJD(3) * t84 - qJD(4) * t214 + qJD(5) * t24 + qJD(6) * t34 - t820, -qJD(4) * t131 + qJD(5) * t13 + t845, -qJD(3) * t3 + qJD(4) * t19 + qJD(5) * t2 - t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), 0, 0, 0, 0, 0, 0, t843 * qJD(3), t844 * qJD(3), 0, t415 * qJD(3), 0, 0, 0, 0, 0, 0, t556, -qJD(5) * t413 - t741, 0, qJD(3) * t193, t486, t673, 0, -t486, 0, 0, -t407 * t729 + t508 * t556, -t407 * t728 - t505 * t556, qJD(5) * t253 + t742, qJD(3) * t133 + qJD(5) * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t748, 0, 0, 0, 0, 0, 0, t599, t600, 0, t559, 0, 0, 0, 0, 0, 0, t674, -t678, t727, -t561, 0, 0, 0, 0, 0, 0, t449 + t836, -t448 + t835, t682, qJD(5) * t63 + t198 - t569; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t675, t677, 0, -t691, 0, 0, 0, 0, 0, 0, -t888, -t692, 0, -t724, 0, 0, 0, 0, 0, 0, -t699, -t705, -t720, t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t684, 0, -t685, 0, t414 * t667, -t413 * t667, 0, 0, t891, -t673 + t765, -t706, -t891, -t700, 0, t210 * qJD(6) + t414 * t597 + t808, t211 * qJD(6) - t414 * t598 + t807, t253 * t667 + t822, t63 * qJD(3) + (-t414 * pkin(5) - pkin(9) * t253) * qJD(5) + t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t271, t957, t191, t704 + t729, -t686, qJD(5) * t210 - t408 * t728 - t540, qJD(5) * t211 + t408 * t729 - t541, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, 0, -t670, t639, 0, 0, 0, 0, 0, 0, t636, -t635, 0, -qJD(4) * t345 - t651, 0, 0, 0, 0, 0, 0, -t638, -t637, -qJD(2) * t107, qJD(2) * t43 - qJD(4) * t174 + t40 - t652, 0, 0, 0, 0, 0, 0, -qJD(2) * t80 - qJD(6) * t155 - t595, -qJD(2) * t84 + qJD(6) * t152 + t596, t709, qJD(2) * t3 + qJD(4) * t125 + t840 + t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t748, 0, 0, 0, 0, 0, 0, -t599, -t600, 0, -t559, 0, 0, 0, 0, 0, 0, -t898, t897, -t727, t561, 0, 0, 0, 0, 0, 0, -t534 - t836, -t533 - t835, -t896, -qJD(5) * t62 + t569; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t687, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t713, 0, 0, 0, 0, 0, 0, 0, 0, 0, t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t898, -t897, 0, t841, 0, 0, 0, 0, 0, 0, t534, t533, t896 (-pkin(9) * t403 - t848) * qJD(5) - t900; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395 * t667 - t467 * t728 - t715, -t397 * t667 + t467 * t729 + t716, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t457, -t676, -t681, qJD(2) * t262 + qJD(3) * t345 - t756, 0, 0, 0, 0, 0, 0, t667 * t530, qJD(2) * t260 + qJD(5) * t279, -t717, qJD(2) * t122 + qJD(3) * t174 - t837, 0, 0, 0, 0, 0, 0, qJD(5) * t232 + t763 + t941 + t946, qJD(2) * t214 - t761 + t942 + t945, qJD(2) * t131 + qJD(5) * t130, -qJD(2) * t19 - qJD(3) * t125 - qJD(5) * t32 - t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t675, -t677, 0, t691, 0, 0, 0, 0, 0, 0, t888, t692, 0, t724, 0, 0, 0, 0, 0, 0, t699, t705, t720, -t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t687, 0, 0, 0, 0, 0, 0, 0, 0, 0, t713, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t888, t689, 0, 0, 0, 0, 0, 0, 0, 0, t695, t701, t721, -t805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t958, t957, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t905, -t940, t391 * qJD(2), -t905, t389 * qJD(2), 0, -t655 + t889, -qJD(4) * t279 + t656, 0, -t834, -t892 + t916, -qJD(2) * t127 + t579 * t902 + t330, qJD(2) * t213 + qJD(6) * t227 + t955, t892 + t917, qJD(2) * t224 + t941 - t954, -t538, -qJD(2) * t21 - qJD(4) * t232 + qJD(6) * t60 - t819, -qJD(2) * t24 - qJD(4) * t933 + qJD(6) * t58 - t818, -qJD(2) * t13 - qJD(4) * t130 + t833, -qJD(2) * t2 + qJD(4) * t32 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t684, 0, t685, 0, -t558, qJD(2) * t413 + t741, 0, 0, -t890, -t673 - t765, t706, t890, t700, 0, -t208 * qJD(6) - t508 * t558 - t808, -t209 * qJD(6) + t505 * t558 - t807, -qJD(2) * t253 - t742 - t822, qJD(3) * t62 - t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t674, t678, 0, -t841, 0, 0, 0, 0, 0, 0, -t449, t448, -t682, t900; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t888, -t689, 0, 0, 0, 0, 0, 0, 0, 0, -t695, -t701, -t721, t805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, t673, 0, -t486, 0, 0, -pkin(5) * t729, -pkin(5) * t728, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t272, t698 + t728, t190, t958, -t683, -pkin(9) * t728 - t529, pkin(9) * t729 - t528, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, -t575 * t904 + t694, -qJD(2) * t934 - qJD(5) * t227 + t505 * t905, t99, -qJD(2) * t215 - qJD(5) * t935 + t508 * t905, t239, -qJD(2) * t36 + qJD(3) * t155 - qJD(4) * t935 - qJD(5) * t60 - t838, -qJD(2) * t34 - qJD(3) * t152 - qJD(4) * t934 - qJD(5) * t58 - t839, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t272, -t937, t190, -t704, t686, qJD(3) * t395 + qJD(5) * t208 + t540, qJD(3) * t397 + qJD(5) * t209 + t541, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t395 + t715, qJD(2) * t397 - t716, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t936, -t937, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t271, -t698, t191, -t936, t683, t529, t528, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
