% Calculate vector of inverse dynamics joint torques for
% S6RRPRRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRRR13_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRRR13_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR13_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR13_invdynJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRPRRR13_invdynJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:53:52
% EndTime: 2019-03-09 14:54:16
% DurationCPUTime: 17.57s
% Computational Cost: add. (10230->808), mult. (24162->1074), div. (0->0), fcn. (19026->14), ass. (0->345)
t784 = cos(qJ(2));
t774 = sin(pkin(6));
t779 = sin(qJ(2));
t910 = qJD(1) * t779;
t876 = t774 * t910;
t775 = cos(pkin(6));
t911 = qJD(1) * t775;
t885 = pkin(1) * t911;
t918 = -pkin(8) * t876 + t784 * t885;
t892 = qJD(3) - t918;
t778 = sin(qJ(4));
t783 = cos(qJ(4));
t844 = pkin(4) * t783 + pkin(10) * t778;
t1001 = (-pkin(3) - t844) * t876 - qJD(4) * t844 - t892;
t782 = cos(qJ(5));
t909 = qJD(1) * t784;
t875 = t774 * t909;
t777 = sin(qJ(5));
t940 = t777 * t778;
t673 = -t782 * t875 + t876 * t940;
t904 = qJD(4) * t778;
t996 = t777 * t904 + t673;
t912 = qJD(1) * t774;
t934 = t779 * t782;
t674 = (t777 * t784 + t778 * t934) * t912;
t838 = -t782 * t904 - t674;
t899 = qJD(5) * t783;
t1000 = -t777 * t899 + t838;
t891 = qJD(1) * qJD(2);
t866 = t779 * t891;
t846 = t774 * t866;
t888 = qJDD(1) * t784;
t994 = -t774 * t888 + t846;
t757 = qJD(2) + t911;
t847 = t778 * t875;
t682 = t757 * t783 - t847;
t732 = qJD(4) + t876;
t618 = t682 * t777 - t782 * t732;
t781 = cos(qJ(6));
t620 = t682 * t782 + t732 * t777;
t776 = sin(qJ(6));
t959 = t620 * t776;
t555 = t781 * t618 + t959;
t680 = t757 * t778 + t783 * t875;
t676 = qJD(5) + t680;
t668 = qJD(6) + t676;
t999 = t555 * t668;
t829 = t618 * t776 - t781 * t620;
t998 = t668 * t829;
t997 = t782 * t899 - t996;
t986 = qJD(5) + qJD(6);
t995 = t680 + t986;
t786 = -pkin(2) - pkin(9);
t893 = pkin(3) * t876 + t892;
t614 = t757 * t786 + t893;
t970 = qJ(3) * t779;
t804 = t784 * t786 - pkin(1) - t970;
t661 = t804 * t774;
t632 = qJD(1) * t661;
t552 = t778 * t614 + t783 * t632;
t544 = pkin(10) * t732 + t552;
t750 = pkin(8) * t875;
t690 = t779 * t885 + t750;
t665 = pkin(3) * t875 + t690;
t738 = t757 * qJ(3);
t628 = t738 + t665;
t559 = pkin(4) * t680 - pkin(10) * t682 + t628;
t527 = t544 * t782 + t559 * t777;
t517 = -pkin(11) * t618 + t527;
t897 = qJD(6) * t776;
t515 = t517 * t897;
t551 = t614 * t783 - t778 * t632;
t543 = -pkin(4) * t732 - t551;
t535 = pkin(5) * t618 + t543;
t780 = sin(qJ(1));
t932 = t780 * t784;
t785 = cos(qJ(1));
t933 = t779 * t785;
t700 = t775 * t932 + t933;
t944 = t774 * t780;
t654 = t700 * t778 + t783 * t944;
t930 = t784 * t785;
t935 = t779 * t780;
t701 = -t775 * t935 + t930;
t773 = qJ(5) + qJ(6);
t768 = sin(t773);
t769 = cos(t773);
t598 = t654 * t769 + t701 * t768;
t943 = t774 * t784;
t881 = t778 * t943;
t697 = t775 * t783 - t881;
t945 = t774 * t779;
t699 = t775 * t933 + t932;
t698 = -t775 * t930 + t935;
t942 = t774 * t785;
t822 = -t698 * t778 + t783 * t942;
t982 = -t699 * t768 + t769 * t822;
t993 = t535 * t555 + g(1) * t598 - g(2) * t982 - g(3) * (-t697 * t769 - t768 * t945) + t515;
t597 = -t654 * t768 + t701 * t769;
t983 = t699 * t769 + t768 * t822;
t992 = t535 * t829 - g(3) * (-t697 * t768 + t769 * t945) - g(2) * t983 - g(1) * t597;
t890 = qJDD(1) * t775;
t756 = qJDD(2) + t890;
t591 = -qJD(4) * t847 + t756 * t778 + (qJD(4) * t757 - t994) * t783;
t589 = qJDD(5) + t591;
t586 = qJDD(6) + t589;
t991 = t586 * MDP(33) + (-t555 ^ 2 + t829 ^ 2) * MDP(30) - t555 * MDP(29) * t829;
t990 = t618 * t732;
t710 = t776 * t782 + t777 * t781;
t692 = t710 * t783;
t759 = pkin(8) * t945;
t878 = -pkin(1) * t784 - pkin(2);
t639 = pkin(3) * t945 + t759 + (-pkin(9) + t878) * t775;
t923 = t778 * t639 + t783 * t661;
t572 = pkin(10) * t945 + t923;
t977 = pkin(1) * t779;
t762 = t775 * t977;
t916 = pkin(8) * t943 + t762;
t683 = -t775 * qJ(3) - t916;
t660 = pkin(3) * t943 - t683;
t696 = t775 * t778 + t783 * t943;
t584 = pkin(4) * t696 - pkin(10) * t697 + t660;
t927 = t782 * t572 + t777 * t584;
t989 = t1001 * t782;
t800 = g(1) * t700 + g(2) * t698 - g(3) * t943;
t754 = pkin(2) * t876;
t969 = qJ(3) * t784;
t832 = pkin(9) * t779 - t969;
t663 = t832 * t912 + t754;
t920 = t783 * t663 + t778 * t665;
t576 = pkin(10) * t875 + t920;
t717 = pkin(4) * t778 - pkin(10) * t783 + qJ(3);
t903 = qJD(4) * t783;
t869 = t782 * t903;
t900 = qJD(5) * t782;
t988 = t1001 * t777 + t782 * t576 - t717 * t900 - t786 * t869;
t987 = -qJD(6) * t782 - t900;
t833 = pkin(2) * t784 + t970;
t825 = -pkin(1) - t833;
t684 = t825 * t774;
t670 = qJD(1) * t684;
t985 = t670 * t876 + qJDD(3);
t981 = t699 * t782 + t777 * t822;
t980 = -t699 * t777 + t782 * t822;
t590 = -qJD(4) * t680 + t783 * t756 + t778 * t994;
t865 = t784 * t891;
t889 = qJDD(1) * t779;
t809 = t865 + t889;
t797 = t809 * t774;
t686 = qJDD(4) + t797;
t540 = qJD(5) * t620 + t590 * t777 - t782 * t686;
t901 = qJD(5) * t777;
t539 = t782 * t590 - t682 * t901 + t777 * t686 + t732 * t900;
t861 = t539 * t776 + t781 * t540;
t510 = -qJD(6) * t829 + t861;
t979 = pkin(3) + pkin(8);
t978 = pkin(10) + pkin(11);
t976 = pkin(2) * t756;
t975 = pkin(11) * t783;
t971 = MDP(7) * t774;
t526 = -t544 * t777 + t782 * t559;
t516 = -pkin(11) * t620 + t526;
t514 = pkin(5) * t676 + t516;
t968 = t514 * t781;
t967 = t517 * t781;
t966 = t539 * t777;
t709 = t776 * t777 - t781 * t782;
t965 = t586 * t709;
t964 = t586 * t710;
t963 = t589 * t777;
t962 = t589 * t782;
t961 = t618 * t676;
t960 = t620 * t676;
t958 = t680 * t732;
t957 = t680 * t777;
t956 = t682 * t732;
t955 = t686 * t778;
t954 = t698 * t783;
t818 = t732 * t783;
t734 = t756 * qJ(3);
t949 = t756 * t775;
t948 = t768 * t778;
t947 = t769 * t778;
t770 = t774 ^ 2;
t946 = t770 * qJD(1) ^ 2;
t884 = pkin(1) * qJD(2) * t775;
t853 = qJD(1) * t884;
t883 = pkin(1) * t890;
t849 = qJD(2) * t750 + qJDD(1) * t759 + t779 * t853 - t784 * t883;
t828 = qJDD(3) + t849;
t563 = pkin(3) * t797 + t756 * t786 + t828;
t723 = pkin(2) * t846;
t906 = qJD(3) * t779;
t793 = qJD(2) * t832 - t906;
t573 = t723 + (qJD(1) * t793 + qJDD(1) * t804) * t774;
t808 = t778 * t563 + t783 * t573 + t614 * t903 - t632 * t904;
t512 = pkin(10) * t686 + t808;
t735 = t757 * qJD(3);
t850 = pkin(8) * t994 - t779 * t883 - t784 * t853;
t592 = -t734 - t735 + t850;
t567 = -pkin(3) * t994 - t592;
t523 = pkin(4) * t591 - pkin(10) * t590 + t567;
t503 = -qJD(5) * t527 - t777 * t512 + t782 * t523;
t500 = pkin(5) * t589 - pkin(11) * t539 + t503;
t941 = t776 * t500;
t939 = t777 * t786;
t938 = t778 * t779;
t937 = t778 * t782;
t936 = t778 * t785;
t931 = t782 * t783;
t929 = t786 * t686;
t613 = pkin(4) * t682 + pkin(10) * t680;
t928 = t782 * t551 + t777 * t613;
t925 = t673 * t776 - t674 * t781 - t692 * t986 + t709 * t904;
t867 = t777 * t897;
t924 = -t783 * t867 + (t931 * t986 - t996) * t781 + t1000 * t776;
t922 = t995 * t709;
t921 = t995 * t710;
t644 = t778 * t663;
t575 = -pkin(4) * t875 - t665 * t783 + t644;
t902 = qJD(4) * t786;
t919 = pkin(5) * t997 + t778 * t902 - t575;
t755 = t786 * t937;
t917 = t777 * t717 + t755;
t771 = t779 ^ 2;
t915 = -t784 ^ 2 + t771;
t914 = MDP(11) * t774;
t908 = qJD(2) * t779;
t907 = qJD(2) * t784;
t905 = qJD(4) * t668;
t898 = qJD(5) * t786;
t896 = qJD(6) * t781;
t894 = qJD(2) - t757;
t887 = 0.2e1 * t770;
t886 = g(3) * t945;
t882 = t784 * t946;
t880 = t781 * t539 - t776 * t540 - t618 * t896;
t877 = qJD(5) * t978;
t874 = t783 * t910;
t873 = t774 * t908;
t872 = t774 * t907;
t863 = pkin(5) - t939;
t806 = -t782 * t512 - t777 * t523 + t544 * t901 - t559 * t900;
t501 = -pkin(11) * t540 - t806;
t862 = t781 * t500 - t776 * t501;
t860 = -t572 * t777 + t782 * t584;
t858 = t639 * t783 - t778 * t661;
t857 = t676 * t782;
t856 = t757 + t911;
t855 = qJD(6) * t514 + t501;
t854 = t756 + t890;
t852 = t779 * t882;
t851 = t783 * t563 - t778 * t573 - t614 * t904 - t632 * t903;
t848 = t774 * t874;
t845 = -t552 + (t901 + t957) * pkin(5);
t842 = g(1) * t698 - g(2) * t700;
t841 = -g(1) * t701 - g(2) * t699;
t840 = g(1) * t785 + g(2) * t780;
t607 = t782 * t613;
t737 = t978 * t782;
t837 = pkin(5) * t682 + qJD(6) * t737 - t551 * t777 + t607 + (pkin(11) * t680 + t877) * t782;
t736 = t978 * t777;
t836 = pkin(11) * t957 + qJD(6) * t736 + t777 * t877 + t928;
t648 = -t777 * t975 + t917;
t835 = -pkin(5) * t848 - pkin(11) * t674 + qJD(6) * t648 - t576 * t777 - (-t755 + (-t717 + t975) * t777) * qJD(5) - (pkin(11) * t937 + t783 * t863) * qJD(4) + t989;
t705 = t782 * t717;
t631 = -pkin(11) * t931 + t778 * t863 + t705;
t834 = pkin(11) * t997 - qJD(6) * t631 + t898 * t940 + t988;
t506 = t514 * t776 + t967;
t652 = t697 * t782 + t777 * t945;
t524 = pkin(5) * t696 - pkin(11) * t652 + t860;
t823 = -t697 * t777 + t774 * t934;
t528 = pkin(11) * t823 + t927;
t831 = t524 * t781 - t528 * t776;
t830 = t524 * t776 + t528 * t781;
t581 = t652 * t776 - t781 * t823;
t582 = t652 * t781 + t776 * t823;
t827 = -0.2e1 * qJD(2) * t670;
t753 = t784 * t884;
t826 = -pkin(8) * t873 + t753;
t749 = pkin(2) * t873;
t630 = t774 * t793 + t749;
t666 = (t943 * t979 + t762) * qJD(2);
t824 = -t778 * t630 - t639 * t904 - t661 * t903 + t666 * t783;
t821 = -t676 * t900 - t963;
t820 = -t676 * t901 + t962;
t513 = -pkin(4) * t686 - t851;
t816 = t732 * t829;
t815 = t732 * t620;
t814 = -qJ(3) * t907 - t906;
t812 = -pkin(10) * t589 + t543 * t676;
t601 = t723 + (qJD(1) * t814 + qJDD(1) * t825) * t774;
t667 = t774 * t814 + t749;
t810 = qJD(1) * t667 + qJDD(1) * t684 + t601;
t807 = t783 * t630 + t639 * t903 - t661 * t904 + t778 * t666;
t533 = pkin(10) * t872 + t807;
t766 = t775 * qJD(3);
t638 = -t873 * t979 + t753 + t766;
t649 = -qJD(4) * t696 + t778 * t873;
t650 = -qJD(4) * t881 + t775 * t903 - t783 * t873;
t548 = pkin(4) * t650 - pkin(10) * t649 + t638;
t805 = t782 * t533 + t777 * t548 - t572 * t901 + t584 * t900;
t509 = -t620 * t897 + t880;
t571 = -pkin(4) * t945 - t858;
t653 = t700 * t783 - t778 * t944;
t803 = g(1) * t653 + g(2) * (t774 * t936 + t954) - g(3) * t696;
t691 = t916 * qJD(2);
t802 = -g(1) * t699 + g(2) * t701 + t691 * t757;
t799 = -t841 + t886;
t796 = t841 - t850;
t795 = -t849 + t800;
t794 = t774 * (t894 * t909 + t889);
t534 = -pkin(4) * t872 - t824;
t792 = -qJD(5) * t927 - t533 * t777 + t782 * t548;
t498 = -qJD(6) * t506 + t862;
t791 = pkin(10) * qJD(5) * t676 + t513 + t803;
t790 = t676 * t898 + t799;
t789 = t690 * t757 + t795;
t788 = -t732 * t902 + t567 - t799;
t765 = -pkin(5) * t782 - pkin(4);
t707 = (pkin(5) * t777 - t786) * t783;
t693 = t709 * t783;
t688 = -qJ(3) * t875 + t754;
t685 = t775 * t878 + t759;
t679 = t783 * t686;
t675 = -t766 - t826;
t672 = t757 * t777 - t782 * t848;
t671 = t757 * t782 + t777 * t848;
t662 = -t738 - t690;
t658 = -pkin(2) * t757 + t892;
t610 = t828 - t976;
t605 = t654 * t782 + t701 * t777;
t604 = -t654 * t777 + t701 * t782;
t569 = qJD(5) * t823 + t649 * t782 + t777 * t872;
t568 = qJD(5) * t652 + t649 * t777 - t782 * t872;
t542 = -pkin(5) * t823 + t571;
t520 = pkin(5) * t568 + t534;
t519 = qJD(6) * t582 + t781 * t568 + t569 * t776;
t518 = -qJD(6) * t581 - t568 * t776 + t569 * t781;
t508 = pkin(5) * t540 + t513;
t507 = -pkin(11) * t568 + t805;
t505 = -t517 * t776 + t968;
t504 = pkin(5) * t650 - pkin(11) * t569 + t792;
t497 = t855 * t781 - t515 + t941;
t1 = [(g(1) * t981 - g(2) * t604 + t513 * t652 - t527 * t650 + t534 * t620 + t571 * t539 + t543 * t569 - t927 * t589 - t805 * t676 + t696 * t806) * MDP(28) + (-t509 * t581 - t510 * t582 - t518 * t555 + t519 * t829) * MDP(30) + (t509 * t582 - t518 * t829) * MDP(29) + (t509 * t696 + t518 * t668 + t582 * t586 - t650 * t829) * MDP(31) + (-(qJD(6) * t831 + t504 * t776 + t507 * t781) * t668 - t830 * t586 - t497 * t696 - t506 * t650 - t520 * t829 + t542 * t509 + t508 * t582 + t535 * t518 + g(1) * t983 - g(2) * t597) * MDP(35) + (t539 * t823 - t540 * t652 - t568 * t620 - t569 * t618) * MDP(23) + (-t540 * t696 - t568 * t676 + t589 * t823 - t618 * t650) * MDP(25) + (-g(1) * t980 - g(2) * t605 + t503 * t696 - t513 * t823 + t526 * t650 + t534 * t618 + t571 * t540 + t543 * t568 + t860 * t589 + t792 * t676) * MDP(27) + (t601 * t684 + t670 * t667 + t592 * t683 + t662 * t675 + t610 * t685 + t658 * t691 - g(1) * (-pkin(1) * t780 - pkin(2) * t699 + pkin(8) * t942 - qJ(3) * t698) - g(2) * (pkin(1) * t785 + pkin(2) * t701 + pkin(8) * t944 + qJ(3) * t700)) * MDP(14) + t840 * MDP(3) + ((qJDD(1) * t771 + 0.2e1 * t779 * t865) * MDP(4) + 0.2e1 * (t779 * t888 - t891 * t915) * MDP(5)) * t770 + (t649 * t732 + t686 * t697) * MDP(17) + (-t650 * t732 - t686 * t696) * MDP(18) + ((-qJD(6) * t830 + t504 * t781 - t507 * t776) * t668 + t831 * t586 + t498 * t696 + t505 * t650 + t520 * t555 + t542 * t510 + t508 * t581 + t535 * t519 - g(1) * t982 - g(2) * t598) * MDP(34) + (-t759 * t756 - t849 * t775 + (t784 * t949 + (-t866 + t888) * t887) * pkin(1) - t802) * MDP(9) + (-t592 * t775 - t675 * t757 - t683 * t756 + t842) * MDP(13) + (t610 * t775 + t685 * t756 + t802) * MDP(12) + (g(1) * t954 - g(2) * t653 + t567 * t697 + t660 * t590 + t628 * t649 + t638 * t682 - t923 * t686 - t807 * t732) * MDP(21) + ((t779 * t854 + t856 * t907) * MDP(6) + (t686 * t779 + t732 * t907) * MDP(19) + (-t779 * t810 + t784 * t827) * MDP(13) + (-t591 * t779 - t680 * t907) * MDP(18) + (t551 * t907 + t779 * t851) * MDP(20) + (t590 * t779 + t682 * t907) * MDP(17) + (t779 * t827 + t784 * t810) * MDP(12) + (g(1) * t936 - t552 * t907 - t779 * t808) * MDP(21)) * t774 + (t590 * t697 + t649 * t682) * MDP(15) + (-t590 * t696 - t591 * t697 - t649 * t680 - t650 * t682) * MDP(16) + (t539 * t652 + t569 * t620) * MDP(22) + (t539 * t696 + t569 * t676 + t589 * t652 + t620 * t650) * MDP(24) + (t589 * t696 + t650 * t676) * MDP(26) + (-t510 * t696 - t519 * t668 - t555 * t650 - t581 * t586) * MDP(32) + (t586 * t696 + t650 * t668) * MDP(33) + (-g(1) * t822 - g(2) * t654 + t567 * t696 + t660 * t591 + t628 * t650 + t638 * t680 + t858 * t686 + t824 * t732) * MDP(20) + (-pkin(1) * t809 * t887 - t756 * t916 - t757 * t826 + t775 * t850 - t842) * MDP(10) + (t784 * t854 - t856 * t908) * t971 + MDP(8) * t949 + ((qJD(2) * t658 - qJDD(1) * t683 - t592 + (qJD(2) * t685 - t675) * qJD(1)) * t784 + (qJD(2) * t662 + qJDD(1) * t685 + t610 + (qJD(2) * t683 + t691) * qJD(1)) * t779 - t840) * t914 + (g(1) * t780 - g(2) * t785) * MDP(2) + qJDD(1) * MDP(1); (-t917 * t589 - t575 * t620 - t543 * t674 + t988 * t676 + t800 * t782 + (t806 + (-t543 * t782 + t620 * t786) * qJD(4) + t790 * t777) * t778 + (t513 * t782 - t527 * t732 - t786 * t539 - t543 * t901) * t783) * MDP(28) + (-(t631 * t776 + t648 * t781) * t586 - t497 * t778 - t506 * t903 + t707 * t509 - t508 * t693 - g(1) * (-t700 * t769 - t701 * t948) - g(2) * (-t698 * t769 - t699 * t948) + (t776 * t835 + t781 * t834) * t668 - t919 * t829 + t925 * t535 + (-t506 * t874 - g(3) * (-t768 * t938 + t769 * t784)) * t774) * MDP(35) + (-t509 * t693 - t829 * t925) * MDP(29) + (-t509 * t692 + t510 * t693 - t555 * t925 + t829 * t924) * MDP(30) + (pkin(1) * t882 + t757 * t918 - t796 + t886) * MDP(10) + (t590 * t783 - t778 * t956) * MDP(15) + ((-t591 - t956) * t783 + (-t590 + t958) * t778) * MDP(16) + (-t510 * t778 - t555 * t818 - t586 * t692 - t668 * t924) * MDP(32) + (t946 * t977 + t789) * MDP(9) + (t589 * t778 + t676 * t818) * MDP(26) + (t586 * t778 + t668 * t818) * MDP(33) + (t509 * t778 - t586 * t693 + t668 * t925 - t783 * t816) * MDP(31) + (-t543 * t673 - t575 * t618 + t705 * t589 - t989 * t676 + ((-qJD(5) * t717 + t576) * t676 + t800) * t777 + (-t589 * t939 + t503 + (-t543 * t777 + t618 * t786) * qJD(4) - t790 * t782) * t778 + (t526 * t876 + t543 * t900 + t513 * t777 - t786 * t540 + (-t676 * t939 + t526) * qJD(4)) * t783) * MDP(27) + (-t592 * qJ(3) - t610 * pkin(2) - t670 * t688 - t658 * t690 - g(1) * (-pkin(2) * t700 + qJ(3) * t701) - g(2) * (-pkin(2) * t698 + qJ(3) * t699) - g(3) * t833 * t774 - t892 * t662) * MDP(14) + (qJ(3) * t590 + t920 * t732 + t552 * t875 + t893 * t682 + (-t628 * t732 - t929) * t778 + t788 * t783) * MDP(21) + (-t732 * t904 + t679 + (-t682 * t784 - t732 * t938) * t912) * MDP(17) + (t618 * t674 + t620 * t673 + (t618 * t782 + t620 * t777) * t904 + (-t966 - t540 * t782 + (t618 * t777 - t620 * t782) * qJD(5)) * t783) * MDP(23) + (t539 * t778 + t838 * t676 + (t815 + t820) * t783) * MDP(24) + ((-pkin(2) * t779 + t969) * qJDD(1) + ((-qJ(3) * qJD(2) - t662 - t690) * t779 + (-pkin(2) * qJD(2) - t658 + t892) * t784) * qJD(1)) * t914 + (-t688 * t875 - t789 - 0.2e1 * t976 + t985) * MDP(12) - MDP(4) * t852 + ((t631 * t781 - t648 * t776) * t586 + t498 * t778 + t505 * t903 + t707 * t510 + t508 * t692 - g(1) * (-t700 * t768 + t701 * t947) - g(2) * (-t698 * t768 + t699 * t947) + (t776 * t834 - t781 * t835) * t668 + t919 * t555 + t924 * t535 + (t505 * t874 - g(3) * (t768 * t784 + t769 * t938)) * t774) * MDP(34) + (0.2e1 * t734 + t735 + t892 * t757 + (-g(3) * t779 + (t670 * t784 + t688 * t779) * qJD(1)) * t774 + t796) * MDP(13) + t756 * MDP(8) + (-t540 * t778 + t996 * t676 + (t821 - t990) * t783) * MDP(25) + t915 * MDP(5) * t946 + (-t732 * t903 - t955 + (t680 * t784 - t779 * t818) * t912) * MDP(18) - t732 * MDP(19) * t875 + (-t894 * t910 + t888) * t971 + MDP(6) * t794 + (qJ(3) * t591 - t551 * t875 + t893 * t680 + t788 * t778 + t929 * t783 + (t644 + (t628 - t665) * t783) * t732) * MDP(20) + (t1000 * t620 + t539 * t931) * MDP(22); MDP(11) * t794 + (t756 + t852) * MDP(12) + (-t757 ^ 2 - t771 * t946) * MDP(13) + (t662 * t757 - t795 - t976 + t985) * MDP(14) + (-t732 ^ 2 * t778 - t680 * t757 + t679) * MDP(20) + (-t682 * t757 - t732 * t818 - t955) * MDP(21) + (-t540 * t783 + (-t777 * t903 - t671) * t676 + (t821 + t990) * t778) * MDP(27) + (-t539 * t783 + (t672 - t869) * t676 + (t815 - t820) * t778) * MDP(28) + (-(t671 * t781 - t672 * t776) * t668 + (-t710 * t905 - t510) * t783 + ((t776 * t901 + t781 * t987 + t867) * t668 - t964 + t732 * t555) * t778) * MDP(34) + ((t671 * t776 + t672 * t781) * t668 + (t709 * t905 - t509) * t783 + (-(t776 * t987 - t777 * t896 - t781 * t901) * t668 + t965 - t816) * t778) * MDP(35); -t680 ^ 2 * MDP(16) + (t590 + t958) * MDP(17) + (-t591 + t956) * MDP(18) + t686 * MDP(19) + (t552 * t732 - t803 + t851) * MDP(20) + (g(1) * t654 - g(2) * t822 + g(3) * t697 + t551 * t732 + t628 * t680 - t808) * MDP(21) + (t620 * t857 + t966) * MDP(22) + ((t539 - t961) * t782 + (-t540 - t960) * t777) * MDP(23) + (t676 * t857 + t963) * MDP(24) + (-t676 ^ 2 * t777 + t962) * MDP(25) + (-pkin(4) * t540 - t552 * t618 - t607 * t676 + (t551 * t676 + t812) * t777 - t791 * t782) * MDP(27) + (-pkin(4) * t539 - t552 * t620 + t676 * t928 + t777 * t791 + t782 * t812) * MDP(28) + (t509 * t710 + t829 * t922) * MDP(29) + (-t509 * t709 - t510 * t710 + t555 * t922 + t829 * t921) * MDP(30) + (-t668 * t922 + t964) * MDP(31) + (-t668 * t921 - t965) * MDP(32) + ((-t736 * t781 - t737 * t776) * t586 + t765 * t510 + t508 * t709 + (t776 * t836 - t781 * t837) * t668 + t845 * t555 + t921 * t535 - t803 * t769) * MDP(34) + (-(-t736 * t776 + t737 * t781) * t586 + t765 * t509 + t508 * t710 + (t776 * t837 + t781 * t836) * t668 - t845 * t829 - t922 * t535 + t803 * t768) * MDP(35) + (MDP(15) * t680 + t682 * MDP(16) - t628 * MDP(20) - t620 * MDP(24) + t618 * MDP(25) - t676 * MDP(26) - MDP(27) * t526 + t527 * MDP(28) + MDP(31) * t829 + t555 * MDP(32) - t668 * MDP(33) - t505 * MDP(34) + t506 * MDP(35)) * t682; t620 * t618 * MDP(22) + (-t618 ^ 2 + t620 ^ 2) * MDP(23) + (t539 + t961) * MDP(24) + (-t540 + t960) * MDP(25) + t589 * MDP(26) + (-g(1) * t604 - g(2) * t981 - g(3) * t823 + t527 * t676 - t543 * t620 + t503) * MDP(27) + (g(1) * t605 - g(2) * t980 + g(3) * t652 + t526 * t676 + t543 * t618 + t806) * MDP(28) + (t509 + t999) * MDP(31) + (-t510 - t998) * MDP(32) + (-(-t516 * t776 - t967) * t668 + (-t555 * t620 + t586 * t781 - t668 * t897) * pkin(5) + t498 + t992) * MDP(34) + ((-t517 * t668 - t500) * t776 + (t516 * t668 - t855) * t781 + (-t586 * t776 + t620 * t829 - t668 * t896) * pkin(5) + t993) * MDP(35) + t991; (t880 + t999) * MDP(31) + (-t861 - t998) * MDP(32) + (t506 * t668 + t862 + t992) * MDP(34) + (-t781 * t501 + t505 * t668 - t941 + t993) * MDP(35) + (-MDP(31) * t959 + MDP(32) * t829 - MDP(34) * t506 - MDP(35) * t968) * qJD(6) + t991;];
tau  = t1;
