% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRPRRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR13_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR13_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR13_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR13_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:53:20
% EndTime: 2019-03-09 14:53:38
% DurationCPUTime: 7.57s
% Computational Cost: add. (8139->561), mult. (20632->787), div. (0->0), fcn. (15949->10), ass. (0->272)
t254 = cos(qJ(2));
t245 = sin(pkin(6));
t250 = sin(qJ(2));
t346 = qJD(1) * t250;
t322 = t245 * t346;
t246 = cos(pkin(6));
t347 = qJD(1) * t246;
t330 = pkin(1) * t347;
t174 = pkin(8) * t322 - t254 * t330;
t332 = qJD(3) + t174;
t249 = sin(qJ(4));
t253 = cos(qJ(4));
t287 = pkin(4) * t253 + pkin(10) * t249;
t404 = qJD(4) * t287 - (-pkin(3) - t287) * t322 + t332;
t248 = sin(qJ(5));
t252 = cos(qJ(5));
t348 = qJD(1) * t245;
t321 = t254 * t348;
t162 = t248 * t249 * t322 - t252 * t321;
t341 = qJD(4) * t249;
t400 = t248 * t341 + t162;
t232 = qJD(2) + t347;
t293 = t249 * t321;
t168 = t232 * t253 - t293;
t215 = qJD(4) + t322;
t107 = t168 * t248 - t215 * t252;
t255 = -pkin(2) - pkin(9);
t308 = -qJ(3) * t250 - pkin(1);
t150 = (t254 * t255 + t308) * t245;
t125 = qJD(1) * t150;
t333 = pkin(3) * t322 + t332;
t97 = t232 * t255 + t333;
t55 = -t125 * t249 + t253 * t97;
t42 = -pkin(4) * t215 - t55;
t36 = pkin(5) * t107 + t42;
t109 = t168 * t252 + t215 * t248;
t247 = sin(qJ(6));
t251 = cos(qJ(6));
t59 = t107 * t251 + t109 * t247;
t403 = t36 * t59;
t279 = t107 * t247 - t109 * t251;
t402 = t279 * t59;
t337 = qJD(5) * t253;
t401 = t252 * t337 - t400;
t356 = t250 * t252;
t163 = (t248 * t254 + t249 * t356) * t348;
t283 = -t252 * t341 - t163;
t166 = t232 * t249 + t253 * t321;
t388 = qJD(5) + qJD(6);
t399 = t166 + t388;
t398 = t279 ^ 2 - t59 ^ 2;
t165 = qJD(5) + t166;
t56 = t125 * t253 + t249 * t97;
t43 = pkin(10) * t215 + t56;
t175 = pkin(8) * t321 + t250 * t330;
t154 = pkin(3) * t321 + t175;
t221 = t232 * qJ(3);
t119 = t221 + t154;
t63 = pkin(4) * t166 - pkin(10) * t168 + t119;
t24 = -t248 * t43 + t252 * t63;
t17 = -pkin(11) * t109 + t24;
t15 = pkin(5) * t165 + t17;
t25 = t248 * t63 + t252 * t43;
t18 = -pkin(11) * t107 + t25;
t377 = t18 * t251;
t10 = t15 * t247 + t377;
t331 = qJD(1) * qJD(2);
t309 = t245 * t331;
t292 = t250 * t309;
t340 = qJD(4) * t253;
t114 = -qJD(4) * t293 + t232 * t340 - t253 * t292;
t113 = -qJD(4) * t166 + t249 * t292;
t220 = t254 * t309;
t338 = qJD(5) * t252;
t339 = qJD(5) * t248;
t51 = t113 * t252 - t168 * t339 + t215 * t338 + t220 * t248;
t206 = pkin(2) * t292;
t282 = pkin(9) * t250 - qJ(3) * t254;
t343 = qJD(3) * t250;
t257 = (qJD(2) * t282 - t343) * t245;
t103 = qJD(1) * t257 + t206;
t329 = pkin(1) * qJD(2) * t246;
t296 = qJD(1) * t329;
t169 = pkin(8) * t220 + t250 * t296;
t131 = pkin(3) * t220 + t169;
t263 = t103 * t253 - t125 * t341 + t131 * t249 + t340 * t97;
t27 = pkin(10) * t220 + t263;
t351 = pkin(8) * t292 - t254 * t296;
t139 = -t232 * qJD(3) + t351;
t104 = -pkin(3) * t292 - t139;
t39 = pkin(4) * t114 - pkin(10) * t113 + t104;
t8 = -qJD(5) * t25 - t248 * t27 + t252 * t39;
t4 = pkin(5) * t114 - pkin(11) * t51 + t8;
t52 = qJD(5) * t109 + t113 * t248 - t220 * t252;
t7 = t248 * t39 + t252 * t27 + t338 * t63 - t339 * t43;
t5 = -pkin(11) * t52 + t7;
t2 = -qJD(6) * t10 - t247 * t5 + t251 * t4;
t397 = t279 * t36 + t2;
t335 = qJD(6) * t251;
t336 = qJD(6) * t247;
t12 = -t107 * t335 - t109 * t336 - t247 * t52 + t251 * t51;
t157 = qJD(6) + t165;
t396 = t157 * t59 + t12;
t258 = qJD(6) * t279 - t247 * t51 - t251 * t52;
t395 = -t157 * t279 + t258;
t394 = t404 * t252;
t393 = t107 * t215;
t191 = t247 * t252 + t248 * t251;
t177 = t191 * t253;
t385 = pkin(1) * t250;
t237 = t246 * t385;
t360 = t245 * t254;
t392 = pkin(8) * t360 + t237;
t391 = -t247 * t339 - t248 * t336;
t200 = pkin(4) * t249 - pkin(10) * t253 + qJ(3);
t315 = t252 * t340;
t230 = pkin(2) * t322;
t152 = t282 * t348 + t230;
t352 = t152 * t253 + t154 * t249;
t73 = pkin(10) * t321 + t352;
t390 = -t200 * t338 - t248 * t404 + t252 * t73 - t255 * t315;
t389 = -qJD(6) * t252 - t338;
t16 = t18 * t336;
t306 = qJD(6) * t15 + t5;
t1 = t247 * t4 + t251 * t306 - t16;
t387 = pkin(3) + pkin(8);
t386 = pkin(10) + pkin(11);
t384 = pkin(11) * t252;
t383 = pkin(11) * t253;
t96 = pkin(4) * t168 + pkin(10) * t166;
t382 = t248 * t96 + t252 * t55;
t361 = t245 * t250;
t234 = pkin(8) * t361;
t324 = -pkin(1) * t254 - pkin(2);
t130 = pkin(3) * t361 + t234 + (-pkin(9) + t324) * t246;
t353 = t130 * t249 + t150 * t253;
t70 = pkin(10) * t361 + t353;
t170 = -qJ(3) * t246 - t392;
t149 = pkin(3) * t360 - t170;
t181 = t246 * t249 + t253 * t360;
t326 = t249 * t360;
t182 = t246 * t253 - t326;
t80 = pkin(4) * t181 - pkin(10) * t182 + t149;
t381 = t248 * t80 + t252 * t70;
t190 = t247 * t248 - t251 * t252;
t379 = t162 * t247 - t163 * t251 - t177 * t388 + t190 * t341;
t354 = t252 * t253;
t378 = t391 * t253 + (t354 * t388 - t400) * t251 + t283 * t247;
t299 = t103 * t249 + t125 * t340 - t131 * t253 + t341 * t97;
t28 = -pkin(4) * t220 + t299;
t376 = t28 * t248;
t375 = t28 * t252;
t374 = t51 * t248;
t373 = t399 * t190;
t372 = t399 * t191;
t301 = -t152 * t249 + t154 * t253;
t72 = -pkin(4) * t321 - t301;
t371 = pkin(5) * t401 + t255 * t341 - t72;
t370 = t107 * t165;
t369 = t109 * t165;
t368 = t114 * t190;
t367 = t114 * t191;
t366 = t166 * t215;
t365 = t166 * t248;
t364 = t168 * t215;
t363 = t215 * t249;
t268 = t215 * t253;
t242 = t245 ^ 2;
t362 = t242 * qJD(1) ^ 2;
t359 = t248 * t114;
t358 = t248 * t255;
t357 = t249 * t255;
t355 = t252 * t114;
t231 = t252 * t357;
t350 = t200 * t248 + t231;
t243 = t250 ^ 2;
t349 = -t254 ^ 2 + t243;
t345 = qJD(2) * t250;
t344 = qJD(2) * t254;
t342 = qJD(4) * t157;
t328 = t250 * t268;
t327 = t254 * t362;
t323 = qJD(5) * t386;
t320 = t245 * t345;
t319 = t245 * t344;
t318 = t215 * t340;
t314 = t255 * t339;
t310 = t242 * t331;
t307 = pkin(5) - t358;
t304 = -t248 * t70 + t252 * t80;
t302 = t130 * t253 - t150 * t249;
t300 = t165 * t252;
t298 = t232 + t347;
t297 = 0.2e1 * t310;
t295 = t250 * t327;
t294 = t253 * t322;
t291 = -t56 + (t339 + t365) * pkin(5);
t186 = t252 * t200;
t124 = -pkin(11) * t354 + t249 * t307 + t186;
t290 = pkin(11) * t401 - qJD(6) * t124 + t249 * t314 + t390;
t142 = -t248 * t383 + t350;
t289 = -pkin(5) * t294 - pkin(11) * t163 + qJD(6) * t142 - t248 * t73 - (-t231 + (-t200 + t383) * t248) * qJD(5) - (t249 * t384 + t253 * t307) * qJD(4) - t394;
t288 = -0.2e1 * pkin(1) * t310;
t218 = t386 * t248;
t286 = pkin(11) * t365 + qJD(6) * t218 + t248 * t323 + t382;
t219 = t386 * t252;
t91 = t252 * t96;
t285 = pkin(5) * t168 + qJD(6) * t219 + t166 * t384 - t248 * t55 + t252 * t323 + t91;
t284 = t175 * t232 - t169;
t146 = t182 * t252 + t248 * t361;
t22 = pkin(5) * t181 - pkin(11) * t146 + t304;
t274 = -t182 * t248 + t245 * t356;
t29 = pkin(11) * t274 + t381;
t281 = t22 * t251 - t247 * t29;
t280 = t22 * t247 + t251 * t29;
t78 = t146 * t247 - t251 * t274;
t79 = t146 * t251 + t247 * t274;
t176 = t392 * qJD(2);
t278 = t169 * t246 + t176 * t232;
t229 = t254 * t329;
t277 = -pkin(8) * t320 + t229;
t225 = pkin(2) * t320;
t121 = t225 + t257;
t155 = (t360 * t387 + t237) * qJD(2);
t276 = -t121 * t249 - t130 * t341 - t150 * t340 + t155 * t253;
t275 = -t232 * t321 + t220;
t262 = t121 * t253 + t130 * t340 - t150 * t341 + t155 * t249;
t34 = pkin(10) * t319 + t262;
t240 = t246 * qJD(3);
t129 = -t320 * t387 + t229 + t240;
t143 = -qJD(4) * t181 + t249 * t320;
t144 = -qJD(4) * t326 + t246 * t340 - t253 * t320;
t50 = pkin(4) * t144 - pkin(10) * t143 + t129;
t273 = t248 * t50 + t252 * t34 + t338 * t80 - t339 * t70;
t272 = t119 * t250 + t255 * t344;
t271 = -t165 * t338 - t359;
t270 = -t165 * t339 + t355;
t266 = t215 * t109;
t265 = -pkin(10) * t114 + t165 * t42;
t69 = -pkin(4) * t361 - t302;
t171 = (-pkin(2) * t254 + t308) * t245;
t260 = (-qJ(3) * t344 - t343) * t245;
t35 = -pkin(4) * t319 - t276;
t259 = -qJD(5) * t381 - t248 * t34 + t252 * t50;
t239 = -pkin(5) * t252 - pkin(4);
t198 = t253 * t220;
t188 = (pkin(5) * t248 - t255) * t253;
t178 = t190 * t253;
t173 = -qJ(3) * t321 + t230;
t172 = t246 * t324 + t234;
t164 = -t240 - t277;
t161 = t232 * t248 - t252 * t294;
t160 = t232 * t252 + t248 * t294;
t159 = qJD(1) * t171;
t156 = t225 + t260;
t151 = -t221 - t175;
t147 = -pkin(2) * t232 + t332;
t136 = qJD(1) * t260 + t206;
t127 = t159 * t322;
t106 = t114 * t249;
t87 = t114 * t181;
t67 = qJD(5) * t274 + t143 * t252 + t248 * t319;
t66 = qJD(5) * t146 + t143 * t248 - t252 * t319;
t41 = -pkin(5) * t274 + t69;
t21 = pkin(5) * t66 + t35;
t20 = qJD(6) * t79 + t247 * t67 + t251 * t66;
t19 = -qJD(6) * t78 - t247 * t66 + t251 * t67;
t14 = pkin(5) * t52 + t28;
t11 = -pkin(11) * t66 + t273;
t9 = t15 * t251 - t18 * t247;
t6 = pkin(5) * t144 - pkin(11) * t67 + t259;
t3 = [0, 0, 0, t250 * t254 * t297, -t349 * t297, t298 * t319, -t298 * t320, 0, t250 * t288 - t278, -t232 * t277 + t246 * t351 + t254 * t288 (-t139 * t254 + t169 * t250 + (t147 * t254 + t151 * t250) * qJD(2) + (-t164 * t254 + t176 * t250 + (t170 * t250 + t172 * t254) * qJD(2)) * qJD(1)) * t245 (-t159 * t345 + t136 * t254 + (t156 * t254 - t171 * t345) * qJD(1)) * t245 + t278, -t139 * t246 - t164 * t232 + (-t159 * t344 - t136 * t250 + (-t156 * t250 - t171 * t344) * qJD(1)) * t245, t136 * t171 + t139 * t170 + t147 * t176 + t151 * t164 + t156 * t159 + t169 * t172, t113 * t182 + t143 * t168, -t113 * t181 - t114 * t182 - t143 * t166 - t144 * t168, t143 * t215 + (t113 * t250 + (qJD(1) * t182 + t168) * t344) * t245, -t144 * t215 + (-t114 * t250 + (-qJD(1) * t181 - t166) * t344) * t245 (t215 * t245 + t242 * t346) * t344, t276 * t215 + t129 * t166 + t149 * t114 + t104 * t181 + t119 * t144 + (-t299 * t250 + (qJD(1) * t302 + t55) * t344) * t245, -t262 * t215 + t129 * t168 + t149 * t113 + t104 * t182 + t119 * t143 + (-t263 * t250 + (-qJD(1) * t353 - t56) * t344) * t245, t109 * t67 + t146 * t51, -t107 * t67 - t109 * t66 - t146 * t52 + t274 * t51, t109 * t144 + t114 * t146 + t165 * t67 + t181 * t51, -t107 * t144 + t114 * t274 - t165 * t66 - t181 * t52, t144 * t165 + t87, t35 * t107 + t114 * t304 + t24 * t144 + t165 * t259 + t8 * t181 - t274 * t28 + t42 * t66 + t69 * t52, t109 * t35 - t114 * t381 - t144 * t25 + t146 * t28 - t165 * t273 - t181 * t7 + t42 * t67 + t51 * t69, t12 * t79 - t19 * t279, -t12 * t78 - t19 * t59 + t20 * t279 + t258 * t79, t114 * t79 + t12 * t181 - t144 * t279 + t157 * t19, -t114 * t78 - t144 * t59 - t157 * t20 + t181 * t258, t144 * t157 + t87 (-qJD(6) * t280 - t11 * t247 + t251 * t6) * t157 + t281 * t114 + t2 * t181 + t9 * t144 + t21 * t59 - t41 * t258 + t14 * t78 + t36 * t20 -(qJD(6) * t281 + t11 * t251 + t247 * t6) * t157 - t280 * t114 - t1 * t181 - t10 * t144 - t21 * t279 + t41 * t12 + t14 * t79 + t36 * t19; 0, 0, 0, -t295, t349 * t362, t275 (-qJD(2) + t232) * t322, 0, t362 * t385 + t284, pkin(1) * t327 - t174 * t232 + t351 ((-qJ(3) * qJD(2) - t151 - t175) * t250 + (-pkin(2) * qJD(2) - t147 + t332) * t254) * t348, -t173 * t321 + t127 - t284, t332 * t232 + (t159 * t254 + t173 * t250) * t348 - t139, -pkin(2) * t169 - qJ(3) * t139 - t147 * t175 - t151 * t332 - t159 * t173, t113 * t253 - t168 * t363 (-t114 - t364) * t253 + (-t113 + t366) * t249, -t215 * t341 + t198 + (-t168 * t254 - t250 * t363) * t348, -t318 + (-t328 + (-qJD(2) * t249 + t166) * t254) * t348, -t215 * t321, qJ(3) * t114 + t104 * t249 - t301 * t215 + t333 * t166 + (t119 * t253 - t215 * t357) * qJD(4) + (t253 * t272 - t254 * t55) * t348, qJ(3) * t113 + t104 * t253 + t352 * t215 + t333 * t168 + (-t119 * t249 - t255 * t268) * qJD(4) + (-t249 * t272 + t56 * t254) * t348, t51 * t354 + (-t248 * t337 + t283) * t109, t107 * t163 + t109 * t162 + (t107 * t252 + t109 * t248) * t341 + (-t374 - t252 * t52 + (t107 * t248 - t109 * t252) * qJD(5)) * t253, t249 * t51 + t283 * t165 + (t266 + t270) * t253, -t249 * t52 + t400 * t165 + (t271 - t393) * t253, t165 * t268 + t106, -t72 * t107 + t186 * t114 - t42 * t162 + ((-qJD(5) * t200 + t73) * t248 + t394) * t165 + (-t42 * t248 * qJD(4) + t8 + (qJD(4) * t107 + t271) * t255) * t249 + (t24 * t322 + t42 * t338 + t376 - t255 * t52 + (-t165 * t358 + t24) * qJD(4)) * t253, -t350 * t114 - t72 * t109 - t42 * t163 + t390 * t165 + (t165 * t314 - t7 + (t109 * t255 - t252 * t42) * qJD(4)) * t249 + (-t215 * t25 - t255 * t51 - t339 * t42 + t375) * t253, -t12 * t178 - t279 * t379, -t12 * t177 - t178 * t258 + t279 * t378 - t379 * t59, -t114 * t178 + t12 * t249 + t157 * t379 - t268 * t279, -t114 * t177 - t157 * t378 + t249 * t258 - t268 * t59, t157 * t268 + t106 (t124 * t251 - t142 * t247) * t114 + t2 * t249 - t188 * t258 + t14 * t177 + t371 * t59 + t378 * t36 + t9 * t268 + (t247 * t290 - t251 * t289) * t157 -(t124 * t247 + t142 * t251) * t114 - t1 * t249 + t188 * t12 - t14 * t178 - t371 * t279 + t379 * t36 + (t247 * t289 + t251 * t290) * t157 - t10 * t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, t295, -t232 ^ 2 - t243 * t362, t151 * t232 + t127 + t169, 0, 0, 0, 0, 0, -t166 * t232 - t215 * t363 + t198, -t318 - t168 * t232 + (-t249 * t344 - t328) * t348, 0, 0, 0, 0, 0, -t253 * t52 + (-t248 * t340 - t160) * t165 + (t271 + t393) * t249, -t253 * t51 + (t161 - t315) * t165 + (t266 - t270) * t249, 0, 0, 0, 0, 0 -(t160 * t251 - t161 * t247) * t157 + (-t191 * t342 + t258) * t253 + ((t251 * t389 - t391) * t157 - t367 + t215 * t59) * t249 (t160 * t247 + t161 * t251) * t157 + (t190 * t342 - t12) * t253 + (-(t247 * t389 - t248 * t335 - t251 * t339) * t157 + t368 - t215 * t279) * t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168 * t166, -t166 ^ 2 + t168 ^ 2, t113 + t366, -t114 + t364, t220, -t119 * t168 + t215 * t56 - t299, t119 * t166 + t215 * t55 - t263, t109 * t300 + t374 (t51 - t370) * t252 + (-t52 - t369) * t248, -t109 * t168 + t165 * t300 + t359, -t165 ^ 2 * t248 + t107 * t168 + t355, -t165 * t168, -pkin(4) * t52 - t56 * t107 - t24 * t168 - t375 + (-pkin(10) * t338 - t91) * t165 + (t165 * t55 + t265) * t248, -pkin(4) * t51 - t56 * t109 + t25 * t168 + t376 + (pkin(10) * t339 + t382) * t165 + t265 * t252, t12 * t191 + t279 * t373, -t12 * t190 + t191 * t258 + t279 * t372 + t373 * t59, -t157 * t373 + t168 * t279 + t367, -t157 * t372 + t168 * t59 - t368, -t157 * t168 (-t218 * t251 - t219 * t247) * t114 - t239 * t258 + t14 * t190 - t9 * t168 + t291 * t59 + t372 * t36 + (t247 * t286 - t251 * t285) * t157 -(-t218 * t247 + t219 * t251) * t114 + t239 * t12 + t14 * t191 + t10 * t168 - t291 * t279 - t373 * t36 + (t247 * t285 + t251 * t286) * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109 * t107, -t107 ^ 2 + t109 ^ 2, t51 + t370, t369 - t52, t114, -t109 * t42 + t165 * t25 + t8, t107 * t42 + t165 * t24 - t7, -t402, t398, t396, t395, t114 -(-t17 * t247 - t377) * t157 + (-t109 * t59 + t251 * t114 - t157 * t336) * pkin(5) + t397, t403 + t16 + (-t157 * t18 - t4) * t247 + (t157 * t17 - t306) * t251 + (t109 * t279 - t114 * t247 - t157 * t335) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, t398, t396, t395, t114, t10 * t157 + t397, t157 * t9 - t1 + t403;];
tauc_reg  = t3;
