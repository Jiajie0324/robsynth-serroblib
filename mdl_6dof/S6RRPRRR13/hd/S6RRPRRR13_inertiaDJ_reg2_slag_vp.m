% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR13_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR13_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR13_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR13_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:53:19
% EndTime: 2019-03-09 14:53:46
% DurationCPUTime: 11.62s
% Computational Cost: add. (10748->592), mult. (26742->1039), div. (0->0), fcn. (25233->10), ass. (0->271)
t137 = sin(qJ(5));
t138 = sin(qJ(4));
t136 = sin(pkin(6));
t139 = sin(qJ(2));
t292 = qJD(2) * t139;
t256 = t136 * t292;
t141 = cos(qJ(4));
t308 = cos(pkin(6));
t239 = qJD(4) * t308;
t142 = cos(qJ(2));
t304 = t136 * t142;
t264 = qJD(4) * t304;
t297 = t138 * t239 + t141 * t264;
t193 = t138 * t256 - t297;
t305 = t136 * t139;
t345 = (qJD(5) * t305 + t193) * t137;
t291 = qJD(2) * t142;
t123 = t136 * t291;
t269 = pkin(1) * t308;
t229 = t139 * t269;
t240 = t308 * qJ(3);
t180 = t240 + t229;
t207 = -t138 * t304 + t308 * t141;
t90 = t308 * t138 + t141 * t304;
t162 = t90 * pkin(4) - pkin(10) * t207 + t180;
t324 = pkin(3) + pkin(8);
t276 = t136 * t324;
t232 = t142 * t276;
t155 = t232 + t162;
t177 = t229 + t232;
t325 = pkin(2) + pkin(9);
t218 = -t325 * t142 - pkin(1);
t307 = qJ(3) * t139;
t183 = t136 * (t218 - t307);
t341 = qJD(2) * t177 - qJD(4) * t183;
t228 = t142 * t269;
t181 = -t308 * pkin(2) - t228;
t171 = t308 * pkin(9) - t181;
t166 = t139 * t276 - t171;
t290 = qJD(3) * t139;
t306 = qJ(3) * t142;
t342 = -qJD(4) * t166 - t136 * (-t290 + (t325 * t139 - t306) * qJD(2));
t21 = -t138 * t341 + t141 * t342;
t344 = -pkin(10) * t123 - qJD(5) * t155 + t21;
t169 = t138 * t171;
t196 = -t141 * qJ(3) + t138 * t324;
t182 = (pkin(10) + t196) * t139;
t201 = t141 * t218;
t152 = -t169 + (t201 + t182) * t136;
t237 = t308 * qJD(3);
t316 = pkin(10) * t138;
t63 = -t138 * t264 + (t239 - t256) * t141;
t343 = qJD(5) * t152 - t237 - t297 * pkin(10) - t63 * pkin(4) - (t228 + (-t316 - t324) * t305) * qJD(2);
t140 = cos(qJ(5));
t194 = qJD(5) * t207;
t76 = t137 * t194;
t208 = -t297 * t140 - t76;
t285 = qJD(5) * t140;
t300 = t139 * t140;
t159 = t136 * (qJD(2) * (t137 * t142 + t138 * t300) + t139 * t285) + t208;
t317 = pkin(4) * t141;
t214 = t316 + t317;
t339 = t140 * t214;
t320 = sin(qJ(6));
t267 = t320 * t137;
t321 = cos(qJ(6));
t268 = t321 * t140;
t186 = t268 - t267;
t87 = t186 * t138;
t338 = t193 * t141;
t185 = (t123 - t194) * t140 - t345;
t81 = t207 * t137;
t216 = t136 * t300 - t81;
t198 = t216 * qJD(4);
t337 = -t138 * t198 + t185 * t141;
t197 = t216 * qJD(5);
t187 = t137 * t197;
t336 = t185 * t140 - t187;
t242 = t321 * qJD(6);
t335 = t321 * qJD(5) + t242;
t129 = qJD(4) * t141;
t249 = t140 * t129;
t286 = qJD(5) * t137;
t91 = t138 * t286 - t249;
t288 = qJD(4) * t140;
t250 = t138 * t288;
t284 = qJD(5) * t141;
t260 = t137 * t284;
t334 = t250 + t260;
t93 = t137 * t129 + t138 * t285;
t257 = t140 * t284;
t289 = qJD(4) * t138;
t94 = t137 * t289 - t257;
t333 = -t140 * t63 + t90 * t286;
t132 = t137 ^ 2;
t134 = t140 ^ 2;
t296 = t132 - t134;
t236 = qJD(5) * t296;
t280 = pkin(8) * t305;
t184 = -t228 + t280;
t83 = t184 * qJD(2);
t332 = qJD(5) + qJD(6);
t331 = t137 * t159 + t336;
t323 = -pkin(11) - pkin(10);
t330 = t323 * t141 + qJ(3);
t328 = t139 ^ 2;
t327 = 0.2e1 * t136;
t326 = 0.2e1 * qJD(3);
t322 = t63 * pkin(5);
t319 = pkin(4) * t138;
t318 = pkin(4) * t140;
t315 = t140 * pkin(5);
t20 = t137 * t155 + t140 * t152;
t104 = t321 * t137 + t320 * t140;
t61 = t332 * t104;
t314 = t138 * t61;
t279 = pkin(8) * t304;
t98 = t229 + t279;
t84 = t98 * qJD(2);
t313 = t139 * t84;
t311 = t141 * t61;
t310 = t63 * t138;
t65 = t240 + t177;
t309 = t65 * t138;
t303 = t137 * t141;
t302 = t137 * t325;
t301 = t138 * t325;
t299 = t140 * t141;
t298 = t141 * t325;
t121 = t140 * t301;
t213 = -pkin(10) * t141 + t319;
t202 = qJ(3) + t213;
t73 = t137 * t202 - t121;
t295 = t132 + t134;
t133 = t138 ^ 2;
t135 = t141 ^ 2;
t294 = t133 - t135;
t293 = t133 + t135;
t287 = qJD(4) * t325;
t283 = qJD(5) * t325;
t282 = t140 * qJD(3);
t50 = 0.2e1 * t90 * t63;
t281 = -0.2e1 * pkin(4) * qJD(5);
t278 = pkin(5) * t286;
t277 = pkin(10) * t285;
t275 = qJD(4) * t137 * t90;
t64 = t137 * t305 + t140 * t207;
t274 = t64 * t289;
t272 = t325 * t305;
t271 = t137 * t301;
t270 = t137 * t298;
t131 = t136 ^ 2;
t266 = t131 * t291;
t265 = t104 * t129;
t263 = t138 * t287;
t262 = t141 * t287;
t259 = t137 * t283;
t252 = t137 * t285;
t248 = t138 * t129;
t247 = qJD(4) * t321;
t246 = qJD(4) * t320;
t245 = qJD(6) * t320;
t244 = t84 * t308;
t241 = pkin(5) + t302;
t238 = t295 * t141;
t235 = t294 * qJD(4);
t122 = 0.2e1 * t248;
t234 = pkin(5) * t242;
t233 = pkin(5) * t245;
t231 = t323 * t321;
t230 = t323 * t320;
t227 = t141 * t267;
t226 = t325 * t123;
t225 = t137 * t250;
t224 = t135 * t252;
t223 = t139 * t266;
t222 = t138 * t247;
t221 = t138 * t246;
t220 = t141 * t247;
t219 = t141 * t246;
t217 = -t141 * t324 - pkin(4);
t215 = qJD(2) * t136 * t308;
t6 = t343 * t137 + t140 * t344;
t7 = t137 * t344 - t343 * t140;
t212 = -t7 * t137 - t6 * t140;
t211 = -pkin(2) * t142 - t307;
t192 = t140 * t202;
t72 = t192 + t271;
t210 = t137 * t73 + t140 * t72;
t209 = t137 * t72 - t140 * t73;
t206 = t137 * t231;
t205 = t137 * t230;
t204 = t139 * t215;
t203 = t142 * t215;
t47 = t129 * t90 + t310;
t22 = t138 * t342 + t141 * t341;
t18 = -pkin(4) * t123 - t22;
t59 = t138 * t183;
t167 = t141 * t171 + t59;
t31 = t217 * t305 + t167;
t200 = t18 * t137 + t285 * t31;
t199 = t137 * t63 + t285 * t90;
t144 = -pkin(11) * t159 + t322 + t7;
t147 = t90 * pkin(5) - t64 * pkin(11) - t137 * t152 + t140 * t155;
t146 = t321 * t147;
t149 = pkin(11) * t185 - t6;
t16 = pkin(11) * t216 + t20;
t1 = -qJD(6) * t146 - t320 * t144 - t321 * t149 + t16 * t245;
t191 = t321 * t216;
t190 = t320 * t216;
t189 = t140 * t197;
t151 = t282 + (t121 + (-t319 - t330) * t137) * qJD(5) + (t241 * t141 + (-t323 * t138 + t317) * t140) * qJD(4);
t168 = t330 * t140 + (t241 + t318) * t138;
t164 = t321 * t168;
t48 = -t138 * t259 + t325 * t249 - t137 * (qJD(4) * t214 + qJD(3)) - qJD(5) * t192;
t165 = pkin(11) * t94 - t48;
t62 = -pkin(11) * t303 + t73;
t12 = -qJD(6) * t164 - t320 * t151 - t321 * t165 + t245 * t62;
t118 = t323 * t140;
t68 = -t321 * t118 + t205;
t19 = t137 * t169 + t140 * t162 + (pkin(1) * t303 + (t140 * t324 + t325 * t303) * t142 - t137 * t182) * t136;
t174 = (-t20 * t137 - t19 * t140) * qJD(5) + t212;
t49 = t282 - t73 * qJD(5) + (t270 + t339) * qJD(4);
t173 = -qJD(5) * t210 - t137 * t49 - t140 * t48;
t36 = t141 * t166 - t59;
t37 = -t169 + (t139 * t196 + t201) * t136;
t172 = -t21 * t138 + t22 * t141 + (-t36 * t138 + t37 * t141) * qJD(4);
t163 = t320 * t168;
t157 = t141 * t159;
t156 = t321 * t151 - t320 * t165;
t34 = t321 * t62 + t163;
t145 = t320 * t147;
t2 = -qJD(6) * t145 + t321 * t144 - t320 * t149 - t16 * t242;
t130 = qJ(3) * t326;
t128 = -pkin(4) - t315;
t106 = -0.2e1 * t223;
t105 = 0.2e1 * t223;
t102 = (pkin(5) * t137 + t325) * t141;
t88 = t141 * t268 - t227;
t86 = t104 * t141;
t85 = t104 * t138;
t82 = 0.2e1 * (t142 ^ 2 - t328) * t131 * qJD(2);
t80 = t181 + t280;
t79 = (-pkin(1) + t211) * t136;
t78 = -t180 - t279;
t75 = (-t139 * t289 + t141 * t291) * t136;
t74 = (-t129 * t139 - t138 * t291) * t136;
t71 = -t237 + t83;
t70 = -pkin(5) * t94 - t263;
t69 = t141 * t236 + t225;
t67 = t320 * t118 + t206;
t66 = (-t290 + (pkin(2) * t139 - t306) * qJD(2)) * t136;
t60 = (t320 * qJD(5) + t245) * t137 - t335 * t140;
t58 = t237 + (-t324 * t305 + t228) * qJD(2);
t46 = -t68 * qJD(6) + (t140 * t231 - t205) * qJD(5);
t45 = -t118 * t245 - t206 * t332 - t230 * t285;
t44 = -t137 * t222 - t140 * t221 - t332 * t227 + t335 * t299;
t43 = -t332 * t87 - t265;
t42 = -t137 * t221 + t140 * t222 + t311;
t41 = t137 * t219 - t140 * t220 + t314;
t40 = t321 * t64 + t190;
t39 = t320 * t64 - t191;
t33 = -t320 * t62 + t164;
t23 = t81 * pkin(5) + (t217 - t315) * t305 + t167;
t14 = -pkin(5) * t185 + t18;
t13 = -qJD(6) * t34 + t156;
t11 = qJD(6) * t190 + t320 * t159 - t321 * t185 + t64 * t242;
t10 = -qJD(6) * t191 - t321 * t159 - t320 * t185 + t64 * t245;
t9 = t321 * t16 + t145;
t8 = -t320 * t16 + t146;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, t82, 0.2e1 * t203, t106, -0.2e1 * t204, 0, -0.2e1 * pkin(1) * t131 * t292 - 0.2e1 * t244, -0.2e1 * pkin(1) * t266 + 0.2e1 * t83 * t308 (t313 - t142 * t83 + (-t139 * t98 + t142 * t184) * qJD(2)) * t327, 0.2e1 * t184 * t84 - 0.2e1 * t83 * t98, 0, -0.2e1 * t203, 0.2e1 * t204, t105, t82, t106 (t313 - t142 * t71 + (t139 * t78 + t142 * t80) * qJD(2)) * t327, 0.2e1 * t244 + 0.2e1 * (t142 * t66 - t292 * t79) * t136, -0.2e1 * t71 * t308 + 0.2e1 * (-t139 * t66 - t291 * t79) * t136, 0.2e1 * t66 * t79 + 0.2e1 * t71 * t78 + 0.2e1 * t80 * t84, 0.2e1 * t207 * t193, -0.2e1 * t193 * t90 - 0.2e1 * t207 * t63 (-t297 * t139 + (t138 * t328 * t136 + t142 * t207) * qJD(2)) * t327, t50 (-t139 * t63 - t291 * t90) * t327, t105, 0.2e1 * t58 * t90 + 0.2e1 * t63 * t65 + 0.2e1 * (t139 * t22 + t291 * t36) * t136, 0.2e1 * t58 * t207 - 0.2e1 * t65 * t297 + 0.2e1 * (t21 * t139 + (t139 * t309 - t142 * t37) * qJD(2)) * t136, -0.2e1 * t193 * t36 - 0.2e1 * t207 * t22 + 0.2e1 * t21 * t90 - 0.2e1 * t37 * t63, -0.2e1 * t21 * t37 + 0.2e1 * t22 * t36 + 0.2e1 * t58 * t65, 0.2e1 * t64 * t159, 0.2e1 * t159 * t216 + 0.2e1 * t185 * t64, 0.2e1 * t159 * t90 + 0.2e1 * t64 * t63, 0.2e1 * t216 * t185, 0.2e1 * t185 * t90 + 0.2e1 * t216 * t63, t50, -0.2e1 * t18 * t216 - 0.2e1 * t185 * t31 + 0.2e1 * t19 * t63 + 0.2e1 * t7 * t90, 0.2e1 * t159 * t31 + 0.2e1 * t18 * t64 - 0.2e1 * t20 * t63 + 0.2e1 * t6 * t90, -0.2e1 * t159 * t19 + 0.2e1 * t185 * t20 - 0.2e1 * t216 * t6 - 0.2e1 * t7 * t64, 0.2e1 * t18 * t31 + 0.2e1 * t19 * t7 - 0.2e1 * t20 * t6, -0.2e1 * t40 * t10, 0.2e1 * t10 * t39 - 0.2e1 * t11 * t40, -0.2e1 * t10 * t90 + 0.2e1 * t40 * t63, 0.2e1 * t39 * t11, -0.2e1 * t11 * t90 - 0.2e1 * t39 * t63, t50, 0.2e1 * t11 * t23 + 0.2e1 * t14 * t39 + 0.2e1 * t2 * t90 + 0.2e1 * t63 * t8, 0.2e1 * t1 * t90 - 0.2e1 * t10 * t23 + 0.2e1 * t14 * t40 - 0.2e1 * t63 * t9, 0.2e1 * t1 * t39 + 0.2e1 * t10 * t8 - 0.2e1 * t11 * t9 - 0.2e1 * t2 * t40, -0.2e1 * t1 * t9 + 0.2e1 * t14 * t23 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, -t256, 0, -t84, t83, 0, 0, 0, -t123, t256, 0, 0, 0 (qJD(2) * t211 + qJD(3) * t142) * t136, t84, 0.2e1 * t237 - t83, -pkin(2) * t84 - qJ(3) * t71 - qJD(3) * t78, -t207 * t289 + t338, -t141 * t63 - t193 * t138 + (t138 * t90 - t141 * t207) * qJD(4), t75, t47, t74, 0, -t141 * t226 + qJ(3) * t63 + qJD(3) * t90 + t58 * t138 + (t138 * t272 + t141 * t65) * qJD(4), t138 * t226 + qJD(3) * t207 + qJ(3) * t193 + t58 * t141 + (t141 * t272 - t309) * qJD(4) (t325 * t63 + t21) * t138 + (t193 * t325 - t22) * t141 + ((t325 * t90 - t37) * t141 + (-t207 * t325 + t36) * t138) * qJD(4), t58 * qJ(3) + t65 * qJD(3) - t172 * t325, -t64 * t260 + (-t274 + ((t137 * t291 + (qJD(2) * t138 + qJD(5)) * t300) * t136 + t208) * t141) * t140, -t137 * t157 + t337 * t140 - t141 * t187 + t94 * t64, t129 * t64 + t138 * t159 + t63 * t299 - t334 * t90, -t337 * t137 - t141 * t189 (t185 + t275) * t138 + (t198 - t199) * t141, t47, t49 * t90 + t72 * t63 + (t7 + (-t31 * t137 + t216 * t325) * qJD(4)) * t138 + (t19 * qJD(4) - t185 * t325 + t200) * t141, -t129 * t20 + t6 * t138 + t157 * t325 + t18 * t299 - t263 * t64 - t31 * t334 + t48 * t90 - t73 * t63, -t159 * t72 + t185 * t73 + t19 * t334 + t94 * t20 - t216 * t48 - t7 * t299 + t6 * t303 - t49 * t64, t19 * t49 - t20 * t48 - t6 * t73 + t7 * t72 - (-t18 * t141 + t289 * t31) * t325, -t10 * t88 - t40 * t42, t10 * t86 - t11 * t88 + t39 * t42 - t40 * t44, -t10 * t138 + t129 * t40 - t42 * t90 + t63 * t88, t11 * t86 + t39 * t44, -t11 * t138 - t129 * t39 - t44 * t90 - t63 * t86, t47, t102 * t11 + t129 * t8 + t13 * t90 + t138 * t2 + t14 * t86 + t23 * t44 + t33 * t63 + t39 * t70, t1 * t138 - t10 * t102 + t12 * t90 - t129 * t9 + t14 * t88 - t23 * t42 - t34 * t63 + t40 * t70, t1 * t86 + t10 * t33 - t11 * t34 + t12 * t39 - t13 * t40 - t2 * t88 + t42 * t8 - t44 * t9, -t1 * t34 + t102 * t14 - t12 * t9 + t13 * t8 + t2 * t33 + t23 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, t130, -0.2e1 * t248, 0.2e1 * t235, 0, t122, 0, 0, 0.2e1 * qJ(3) * t129 + 0.2e1 * qJD(3) * t138, -0.2e1 * qJ(3) * t289 + 0.2e1 * qJD(3) * t141, 0, t130, -0.2e1 * t134 * t248 - 0.2e1 * t224, 0.2e1 * t135 * t236 + 0.4e1 * t141 * t225, -0.2e1 * t138 * t260 - 0.2e1 * t288 * t294, -0.2e1 * t132 * t248 + 0.2e1 * t224, 0.2e1 * t137 * t235 - 0.2e1 * t138 * t257, t122, 0.2e1 * t135 * t140 * t283 + 0.2e1 * t49 * t138 + 0.2e1 * (t72 - 0.2e1 * t271) * t129, -0.2e1 * t135 * t259 + 0.2e1 * t48 * t138 + 0.2e1 * (-t73 - 0.2e1 * t121) * t129, 0.2e1 * t210 * t289 + 0.2e1 * (qJD(5) * t209 + t137 * t48 - t140 * t49) * t141, -0.2e1 * t248 * t325 ^ 2 - 0.2e1 * t73 * t48 + 0.2e1 * t72 * t49, -0.2e1 * t88 * t42, 0.2e1 * t42 * t86 - 0.2e1 * t44 * t88, 0.2e1 * t129 * t88 - 0.2e1 * t138 * t42, 0.2e1 * t86 * t44, -0.2e1 * t129 * t86 - 0.2e1 * t138 * t44, t122, 0.2e1 * t102 * t44 + 0.2e1 * t129 * t33 + 0.2e1 * t13 * t138 + 0.2e1 * t70 * t86, -0.2e1 * t102 * t42 + 0.2e1 * t12 * t138 - 0.2e1 * t129 * t34 + 0.2e1 * t70 * t88, 0.2e1 * t12 * t86 - 0.2e1 * t13 * t88 + 0.2e1 * t33 * t42 - 0.2e1 * t34 * t44, 0.2e1 * t102 * t70 - 0.2e1 * t12 * t34 + 0.2e1 * t13 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, 0, t84, 0, 0, 0, 0, 0, 0, t75, t74, -t310 - t338 + (t138 * t207 - t90 * t141) * qJD(4), t172, 0, 0, 0, 0, 0, 0 (t185 - t275) * t141 + (-t199 - t198) * t138, -t140 * t310 + t91 * t90 - t157 + t274, t138 * t331 + t198 * t299 + t64 * t93 (-t18 + (-t137 * t19 + t140 * t20) * qJD(4)) * t141 + (qJD(4) * t31 + t174) * t138, 0, 0, 0, 0, 0, 0, -t11 * t141 + t289 * t39 + t43 * t90 - t63 * t85, t10 * t141 + t289 * t40 + t41 * t90 - t63 * t87, -t10 * t85 - t11 * t87 + t39 * t41 - t40 * t43, -t1 * t87 - t14 * t141 - t2 * t85 + t23 * t289 - t41 * t9 + t43 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293 * t285, t293 * t286, 0, -t209 * t129 + (t173 + 0.2e1 * t262) * t138, 0, 0, 0, 0, 0, 0, t138 * t43 - t141 * t44 + (t138 * t86 - t141 * t85) * qJD(4), t138 * t41 + t141 * t42 + (t138 * t88 - t141 * t87) * qJD(4), t41 * t86 - t42 * t85 - t43 * t88 - t44 * t87, t102 * t289 - t12 * t87 - t13 * t85 - t141 * t70 + t33 * t43 - t34 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t295) * t122, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t41 * t87 - 0.2e1 * t43 * t85 - 0.2e1 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, 0, -t63, t123, t22, t21, 0, 0 (t123 * t137 - t76) * t137 + (t64 * qJD(5) + t345) * t140, t137 * t185 + t140 * t159 - t286 * t64 + t189, t199, t336, -t333, 0, pkin(4) * t185 - pkin(10) * t199 - t18 * t140 + t286 * t31, -pkin(4) * t159 + pkin(10) * t333 + t200, pkin(10) * t331 - t19 * t285 - t20 * t286 + t277 * t64 + t212, -pkin(4) * t18 + pkin(10) * t174, -t10 * t104 - t40 * t60, -t10 * t186 - t104 * t11 + t39 * t60 - t40 * t61, t104 * t63 - t60 * t90, -t11 * t186 + t39 * t61, t186 * t63 - t61 * t90, 0, t11 * t128 - t14 * t186 + t23 * t61 + t278 * t39 + t46 * t90 + t63 * t67, -t10 * t128 + t104 * t14 - t23 * t60 + t278 * t40 + t45 * t90 - t63 * t68, -t1 * t186 + t10 * t67 - t104 * t2 - t11 * t68 + t39 * t45 - t40 * t46 + t60 * t8 - t61 * t9, -t1 * t68 + t128 * t14 + t2 * t67 + t23 * t278 - t45 * t9 + t46 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, 0, -t129, 0, t263, t262, 0, 0, -t69, -0.4e1 * t141 * t252 + t289 * t296, t93, t69, -t91, 0 (t270 - t339) * qJD(5) + (t137 * t213 + t121) * qJD(4) (t137 * t214 + t140 * t298) * qJD(5) + (-pkin(10) * t299 + (-t302 + t318) * t138) * qJD(4), t173, pkin(4) * t263 + pkin(10) * t173, -t104 * t42 - t60 * t88, -t104 * t44 - t186 * t42 + t60 * t86 - t61 * t88, -t138 * t60 + t265, -t186 * t44 + t61 * t86, t129 * t186 - t314, 0, t102 * t61 + t128 * t44 + t129 * t67 + t138 * t46 - t186 * t70 + t278 * t86, -t102 * t60 + t104 * t70 - t128 * t42 - t129 * t68 + t138 * t45 + t278 * t88, -t104 * t13 - t12 * t186 + t33 * t60 - t34 * t61 + t42 * t67 - t44 * t68 + t45 * t86 - t46 * t88, t102 * t278 - t12 * t68 + t128 * t70 + t13 * t67 + t33 * t46 - t34 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t129, 0, 0, 0, 0, 0, 0, 0, 0, -t334, t94, qJD(4) * t238 (pkin(10) * t238 - t319) * qJD(4), 0, 0, 0, 0, 0, 0, -t186 * t289 - t311, t104 * t289 + t141 * t60, -t104 * t43 - t186 * t41 - t60 * t85 - t61 * t87, -pkin(5) * t260 + t128 * t289 - t41 * t68 + t43 * t67 - t45 * t87 - t46 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t252, -0.2e1 * t236, 0, -0.2e1 * t252, 0, 0, t137 * t281, t140 * t281, 0, 0, -0.2e1 * t104 * t60, -0.2e1 * t104 * t61 - 0.2e1 * t186 * t60, 0, -0.2e1 * t186 * t61, 0, 0, 0.2e1 * t128 * t61 - 0.2e1 * t186 * t278, 0.2e1 * t104 * t278 - 0.2e1 * t128 * t60, -0.2e1 * t104 * t46 - 0.2e1 * t186 * t45 + 0.2e1 * t60 * t67 - 0.2e1 * t61 * t68, 0.2e1 * t128 * t278 - 0.2e1 * t45 * t68 + 0.2e1 * t46 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, 0, t185, t63, t7, t6, 0, 0, 0, 0, -t10, 0, -t11, t63, -t233 * t90 + t321 * t322 + t2 (-t242 * t90 - t320 * t63) * pkin(5) + t1 (t321 * t10 - t320 * t11 + (t320 * t40 - t321 * t39) * qJD(6)) * pkin(5) (t321 * t2 - t320 * t1 + (-t320 * t8 + t321 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, 0, t94, t129, t49, t48, 0, 0, 0, 0, -t42, 0, -t44, t129, pkin(5) * t220 - qJD(6) * t163 - t138 * t233 - t242 * t62 + t156 (-t138 * t242 - t219) * pkin(5) + t12 (t321 * t42 - t320 * t44 + (t320 * t88 - t321 * t86) * qJD(6)) * pkin(5) (t321 * t13 - t320 * t12 + (-t320 * t33 + t321 * t34) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, t91, 0, 0, 0, 0, 0, 0, 0, 0, t43, t41, 0 (t321 * t43 - t320 * t41 + (t320 * t85 + t321 * t87) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, 0, -t286, 0, -t277, pkin(10) * t286, 0, 0, 0, 0, -t60, 0, -t61, 0, t46, t45 (t321 * t60 - t320 * t61 + (t104 * t320 + t186 * t321) * qJD(6)) * pkin(5) (t321 * t46 - t320 * t45 + (-t320 * t67 + t321 * t68) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t233, -0.2e1 * t234, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t10, 0, -t11, t63, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, -t44, t129, t13, t12, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, 0, -t61, 0, t46, t45, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t233, -t234, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
