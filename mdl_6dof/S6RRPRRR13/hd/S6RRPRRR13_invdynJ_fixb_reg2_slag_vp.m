% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR13_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:53:36
% EndTime: 2019-03-09 14:54:12
% DurationCPUTime: 22.39s
% Computational Cost: add. (24072->931), mult. (57013->1219), div. (0->0), fcn. (43626->14), ass. (0->410)
t360 = cos(pkin(6));
t368 = cos(qJ(2));
t580 = pkin(1) * t368;
t490 = t360 * t580;
t327 = qJD(1) * t490;
t594 = qJD(3) - t327;
t363 = sin(qJ(4));
t367 = cos(qJ(4));
t438 = pkin(4) * t367 + pkin(10) * t363;
t359 = sin(pkin(6));
t364 = sin(qJ(2));
t506 = qJD(1) * t364;
t477 = t359 * t506;
t583 = pkin(3) + pkin(8);
t622 = -(-t438 - t583) * t477 + qJD(4) * t438 + t594;
t362 = sin(qJ(5));
t366 = cos(qJ(5));
t508 = qJD(1) * t359;
t476 = t368 * t508;
t227 = t362 * t363 * t477 - t366 * t476;
t503 = qJD(4) * t363;
t613 = t362 * t503 + t227;
t498 = qJD(5) * t367;
t621 = -t366 * t498 + t613;
t329 = pkin(2) * t477;
t556 = qJ(3) * t368;
t428 = pkin(9) * t364 - t556;
t213 = t428 * t508 + t329;
t581 = pkin(1) * t364;
t346 = t360 * t581;
t532 = t359 * t368;
t511 = pkin(8) * t532 + t346;
t251 = t511 * qJD(1);
t215 = pkin(3) * t476 + t251;
t125 = t367 * t213 + t363 * t215;
t107 = pkin(10) * t476 + t125;
t437 = pkin(4) * t363 - pkin(10) * t367;
t290 = qJ(3) + t437;
t371 = -pkin(2) - pkin(9);
t501 = qJD(4) * t371;
t469 = t367 * t501;
t525 = t363 * t371;
t484 = t362 * t525;
t499 = qJD(5) * t366;
t559 = -qJD(5) * t484 + t290 * t499 + (-t107 + t469) * t366 + t622 * t362;
t620 = t107 * t362 + t366 * t622;
t523 = t364 * t366;
t527 = t362 * t368;
t228 = (t363 * t523 + t527) * t508;
t429 = -t366 * t503 - t228;
t619 = -t362 * t498 + t429;
t494 = qJD(1) * qJD(2);
t464 = t364 * t494;
t442 = t359 * t464;
t491 = qJDD(1) * t368;
t610 = -t359 * t491 + t442;
t330 = t366 * t525;
t475 = t367 * t506;
t445 = t359 * t475;
t459 = -t362 * t371 + pkin(5);
t575 = pkin(11) * t366;
t618 = pkin(5) * t445 + pkin(11) * t228 + (-t330 + (pkin(11) * t367 - t290) * t362) * qJD(5) + (t363 * t575 + t367 * t459) * qJD(4) + t620;
t507 = qJD(1) * t360;
t335 = qJD(2) + t507;
t237 = t335 * t367 - t363 * t476;
t308 = qJD(4) + t477;
t162 = t362 * t237 - t308 * t366;
t164 = t237 * t366 + t308 * t362;
t361 = sin(qJ(6));
t582 = cos(qJ(6));
t412 = -t361 * t162 + t582 * t164;
t82 = t582 * t162 + t164 * t361;
t570 = t82 * t412;
t617 = t621 * pkin(11) + t559;
t370 = -pkin(11) - pkin(10);
t478 = qJD(5) * t370;
t235 = t335 * t363 + t367 * t476;
t546 = t235 * t362;
t157 = pkin(4) * t237 + pkin(10) * t235;
t158 = t371 * t335 + t583 * t477 + t594;
t461 = -qJ(3) * t364 - pkin(1);
t395 = t371 * t368 + t461;
t178 = t395 * t508;
t78 = t158 * t367 - t363 * t178;
t58 = t362 * t157 + t366 * t78;
t616 = -pkin(11) * t546 + t362 * t478 - t58;
t57 = t366 * t157 - t362 * t78;
t615 = -pkin(5) * t237 - t235 * t575 + t366 * t478 - t57;
t493 = qJDD(1) * t360;
t331 = qJDD(2) + t493;
t472 = qJD(4) * t532;
t612 = -qJD(1) * t472 + t331;
t230 = qJD(5) + t235;
t463 = t368 * t494;
t492 = qJDD(1) * t364;
t396 = t463 + t492;
t384 = t396 * t359;
t245 = qJDD(4) + t384;
t298 = pkin(2) * t442;
t504 = qJD(3) * t364;
t380 = qJD(2) * t428 - t504;
t102 = t298 + (qJD(1) * t380 + qJDD(1) * t395) * t359;
t502 = qJD(4) * t367;
t534 = t359 * t364;
t337 = pkin(8) * t534;
t488 = pkin(1) * qJD(2) * t360;
t448 = qJD(1) * t488;
t486 = pkin(1) * t493;
t446 = t359 * pkin(8) * t463 + qJDD(1) * t337 + t364 * t448 - t368 * t486;
t424 = qJDD(3) + t446;
t92 = pkin(3) * t384 + t371 * t331 + t424;
t31 = t367 * t102 + t158 * t502 - t178 * t503 + t363 * t92;
t28 = pkin(10) * t245 + t31;
t129 = t335 * t503 - t610 * t363 - t612 * t367;
t130 = t612 * t363 + (qJD(4) * t335 - t610) * t367;
t311 = t331 * qJ(3);
t312 = t335 * qJD(3);
t447 = t610 * pkin(8) - t364 * t486 - t368 * t448;
t131 = -t311 - t312 + t447;
t96 = -t610 * pkin(3) - t131;
t43 = pkin(4) * t130 + pkin(10) * t129 + t96;
t500 = qJD(5) * t362;
t79 = t158 * t363 + t178 * t367;
t71 = pkin(10) * t308 + t79;
t315 = t335 * qJ(3);
t173 = t315 + t215;
t86 = pkin(4) * t235 - pkin(10) * t237 + t173;
t413 = -t366 * t28 - t362 * t43 - t86 * t499 + t500 * t71;
t46 = -t362 * t71 + t366 * t86;
t611 = -t46 * t230 - t413;
t365 = sin(qJ(1));
t521 = t365 * t368;
t369 = cos(qJ(1));
t522 = t364 * t369;
t268 = t360 * t522 + t521;
t519 = t368 * t369;
t524 = t364 * t365;
t270 = -t360 * t524 + t519;
t433 = -g(1) * t270 - g(2) * t268;
t489 = g(3) * t534;
t386 = -t433 + t489;
t452 = t363 * t102 + t158 * t503 + t178 * t502 - t367 * t92;
t609 = t308 * t79 - t452;
t608 = t412 ^ 2 - t82 ^ 2;
t269 = t360 * t521 + t522;
t533 = t359 * t365;
t203 = t269 * t363 + t367 * t533;
t149 = -t203 * t362 + t270 * t366;
t266 = t360 * t367 - t363 * t532;
t417 = -t266 * t362 + t359 * t523;
t267 = -t360 * t519 + t524;
t531 = t359 * t369;
t416 = -t267 * t363 + t367 * t531;
t586 = t268 * t366 + t362 * t416;
t607 = -g(1) * t149 - g(2) * t586 - g(3) * t417;
t222 = qJD(6) + t230;
t483 = -t362 * t129 + t237 * t499 + t308 * t500;
t418 = t366 * t245 - t483;
t466 = t582 * qJD(6);
t497 = qJD(6) * t361;
t67 = t366 * t129 + t237 * t500 - t362 * t245 - t308 * t499;
t23 = t162 * t466 + t164 * t497 - t361 * t418 + t582 * t67;
t606 = t222 * t82 - t23;
t34 = -pkin(11) * t164 + t46;
t30 = pkin(5) * t230 + t34;
t47 = t362 * t86 + t366 * t71;
t35 = -pkin(11) * t162 + t47;
t126 = qJDD(5) + t130;
t9 = -qJD(5) * t47 - t362 * t28 + t366 * t43;
t6 = pkin(5) * t126 + pkin(11) * t67 + t9;
t7 = pkin(11) * t418 - t413;
t1 = t30 * t466 - t35 * t497 + t361 * t6 + t582 * t7;
t358 = qJ(5) + qJ(6);
t352 = sin(t358);
t353 = cos(t358);
t139 = t203 * t353 + t270 * t352;
t587 = -t268 * t352 + t353 * t416;
t70 = -pkin(4) * t308 - t78;
t59 = pkin(5) * t162 + t70;
t605 = t59 * t82 + g(1) * t139 - g(2) * t587 - g(3) * (-t266 * t353 - t352 * t534) - t1;
t355 = t359 ^ 2;
t603 = 0.2e1 * t355;
t602 = -t47 * t230 - t9;
t601 = -t308 * t78 + t31;
t600 = t162 * t308;
t547 = t235 * t308;
t599 = t129 - t547;
t544 = t237 * t308;
t598 = -t130 + t544;
t232 = t362 * t290 + t330;
t597 = g(1) * t269 + g(2) * t267 - g(3) * t532;
t595 = t582 * qJD(5) + t466;
t253 = t511 * qJD(2);
t593 = qJD(5) + qJD(6);
t421 = -pkin(2) * t368 + t461;
t224 = t421 * t508;
t592 = t224 * t477 + qJDD(3);
t138 = -t203 * t352 + t270 * t353;
t487 = t582 * t35;
t12 = t361 * t30 + t487;
t2 = -qJD(6) * t12 - t361 * t7 + t582 * t6;
t588 = t268 * t353 + t352 * t416;
t591 = -t59 * t412 - g(1) * t138 - g(2) * t588 - g(3) * (-t266 * t352 + t353 * t534) + t2;
t590 = t173 * t308 + t245 * t371;
t24 = qJD(6) * t412 - t361 * t67 - t582 * t418;
t589 = t222 * t412 - t24;
t585 = -t268 * t362 + t366 * t416;
t584 = t363 * t593;
t579 = pkin(2) * t331;
t578 = pkin(5) * t362;
t577 = pkin(9) * t267;
t576 = pkin(9) * t269;
t571 = t245 * pkin(4);
t277 = t366 * t290;
t520 = t366 * t367;
t176 = -pkin(11) * t520 + t363 * t459 + t277;
t528 = t362 * t367;
t197 = -pkin(11) * t528 + t232;
t104 = t582 * t176 - t361 * t197;
t569 = t104 * qJD(6) + t618 * t361 + t617 * t582;
t105 = t361 * t176 + t582 * t197;
t568 = -t105 * qJD(6) - t617 * t361 + t618 * t582;
t565 = t361 * t35;
t564 = t362 * t67;
t313 = t370 * t362;
t314 = t370 * t366;
t219 = t582 * t313 + t361 * t314;
t561 = t219 * qJD(6) + t615 * t361 + t616 * t582;
t220 = t361 * t313 - t582 * t314;
t560 = -t220 * qJD(6) - t616 * t361 + t615 * t582;
t558 = -qJD(5) * t232 - t362 * t469 + t620;
t124 = -t363 * t213 + t215 * t367;
t106 = -pkin(4) * t476 - t124;
t557 = -pkin(5) * t621 + t363 * t501 - t106;
t480 = -pkin(2) - t580;
t188 = pkin(3) * t534 + t337 + (-pkin(9) + t480) * t360;
t512 = pkin(2) * t532 + qJ(3) * t534;
t241 = -pkin(1) * t359 - t512;
t340 = pkin(9) * t532;
t211 = t241 - t340;
t111 = t363 * t188 + t367 * t211;
t101 = pkin(10) * t534 + t111;
t240 = -t360 * qJ(3) - t511;
t210 = pkin(3) * t532 - t240;
t265 = t360 * t363 + t367 * t532;
t116 = pkin(4) * t265 - pkin(10) * t266 + t210;
t56 = t366 * t101 + t362 * t116;
t555 = t126 * t366;
t554 = t162 * t230;
t553 = t162 * t362;
t552 = t162 * t366;
t551 = t164 * t162;
t550 = t164 * t230;
t549 = t164 * t362;
t548 = t164 * t366;
t545 = t237 * t235;
t543 = t245 * t363;
t403 = t308 * t367;
t537 = t352 * t363;
t536 = t353 * t363;
t535 = t355 * qJD(1) ^ 2;
t530 = t361 * t362;
t529 = t362 * t126;
t526 = t363 * t364;
t225 = t335 * t366 + t362 * t445;
t226 = t335 * t362 - t366 * t445;
t411 = t582 * t366 - t530;
t257 = t411 * t367;
t281 = t361 * t366 + t582 * t362;
t518 = qJD(4) * t257 - t361 * t225 - t582 * t226 - t281 * t584;
t192 = t593 * t281;
t443 = t582 * t503;
t517 = t192 * t367 + t582 * t228 - t613 * t361 + t366 * t443;
t516 = -t582 * t225 + t361 * t226 - t281 * t502 - t411 * t584;
t515 = -t582 * t227 + t361 * t619 - t362 * t443 - t497 * t528 + t595 * t520;
t514 = -t281 * t235 - t192;
t513 = -t411 * t235 - t366 * t595 + t530 * t593;
t510 = t369 * pkin(1) + pkin(8) * t533;
t356 = t364 ^ 2;
t357 = t368 ^ 2;
t509 = t356 - t357;
t505 = qJD(2) * t368;
t449 = t583 * t534;
t496 = qJD(1) * t449 + t594;
t250 = pkin(8) * t477 - t327;
t495 = qJD(3) + t250;
t485 = t368 * t535;
t482 = t386 * t367;
t481 = t340 + t512;
t479 = pkin(9) + t578;
t474 = qJD(2) * t534;
t473 = t359 * t505;
t465 = pkin(1) * t603;
t460 = -pkin(1) * t365 + pkin(8) * t531;
t258 = t267 * pkin(2);
t458 = -t258 - t577;
t260 = t269 * pkin(2);
t457 = -t260 - t576;
t455 = qJ(3) * t268 - t258;
t454 = qJ(3) * t270 - t260;
t55 = -t101 * t362 + t366 * t116;
t110 = t188 * t367 - t363 * t211;
t453 = t230 * t366;
t451 = qJD(1) * (qJD(2) - t335);
t450 = t331 + t493;
t444 = g(3) * t481;
t441 = t364 * t463;
t439 = -t79 + (t500 + t546) * pkin(5);
t202 = -t269 * t367 + t363 * t533;
t415 = t267 * t367 + t363 * t531;
t436 = g(1) * t415 + g(2) * t202;
t434 = -g(1) * t267 + g(2) * t269;
t432 = g(1) * t268 - g(2) * t270;
t431 = g(1) * t369 + g(2) * t365;
t427 = t362 * t47 + t366 * t46;
t426 = t362 * t46 - t366 * t47;
t349 = pkin(5) * t366 + pkin(4);
t425 = t349 * t363 + t367 * t370;
t423 = qJD(2) * (-qJD(1) * t241 - t224);
t422 = qJD(2) * (t335 + t507);
t328 = t368 * t488;
t252 = -pkin(8) * t474 + t328;
t419 = t270 * pkin(2) + qJ(3) * t269 + t510;
t326 = pkin(2) * t474;
t175 = t359 * t380 + t326;
t216 = (t583 * t532 + t346) * qJD(2);
t61 = -t363 * t175 - t188 * t503 - t211 * t502 + t216 * t367;
t201 = t266 * t366 + t362 * t534;
t44 = pkin(5) * t265 - pkin(11) * t201 + t55;
t48 = pkin(11) * t417 + t56;
t19 = -t361 * t48 + t582 * t44;
t20 = t361 * t44 + t582 * t48;
t29 = t452 - t571;
t115 = t582 * t201 + t361 * t417;
t410 = -t230 * t499 - t529;
t409 = -t230 * t500 + t555;
t407 = t308 * t363;
t404 = t308 * t164;
t402 = -pkin(10) * t126 + t230 * t70;
t401 = -qJ(3) * t505 - t504;
t60 = t367 * t175 + t188 * t502 - t211 * t503 + t363 * t216;
t53 = pkin(10) * t473 + t60;
t350 = t360 * qJD(3);
t187 = -qJD(2) * t449 + t328 + t350;
t198 = qJD(4) * t265 - t363 * t474;
t199 = t360 * t502 - t363 * t472 - t367 * t474;
t75 = pkin(4) * t199 + pkin(10) * t198 + t187;
t17 = -t101 * t500 + t116 * t499 + t362 * t75 + t366 * t53;
t142 = t298 + (qJD(1) * t401 + qJDD(1) * t421) * t359;
t218 = t359 * t401 + t326;
t398 = qJD(1) * t218 + qJDD(1) * t241 + t142;
t397 = pkin(3) * t533 + t419;
t100 = -pkin(4) * t534 - t110;
t394 = g(1) * t202 - g(2) * t415 + g(3) * t265;
t393 = -g(1) * t203 + g(2) * t416 - g(3) * t266;
t392 = -t268 * pkin(2) - qJ(3) * t267 + t460;
t391 = t418 * t366;
t390 = t253 * t335 - t432;
t388 = -t29 + t394;
t385 = pkin(3) * t531 + t392;
t383 = t433 - t447;
t382 = pkin(9) * t270 + t397;
t381 = t597 - t446;
t182 = (t368 * t451 + t492) * t359;
t54 = -pkin(4) * t473 - t61;
t379 = -pkin(9) * t268 + t385;
t18 = -qJD(5) * t56 - t362 * t53 + t366 * t75;
t378 = pkin(10) * qJD(5) * t230 - t388;
t377 = -qJD(5) * t427 - t9 * t362 - t366 * t413;
t375 = t251 * t335 + t381;
t292 = t364 * t485;
t288 = t331 * t360;
t279 = (-t371 + t578) * t367;
t271 = -t337 + t490;
t264 = t509 * t535;
t256 = t411 * t363;
t255 = t281 * t367;
t254 = t281 * t363;
t249 = -qJ(3) * t476 + t329;
t244 = t360 * t480 + t337;
t239 = (qJDD(1) * t357 - 0.2e1 * t441) * t355;
t238 = (qJDD(1) * t356 + 0.2e1 * t441) * t355;
t234 = t367 * t245;
t231 = t277 - t484;
t229 = -t252 - t350;
t212 = -t315 - t251;
t208 = -pkin(2) * t335 + t495;
t184 = (t364 * t491 - t494 * t509) * t603;
t181 = (t364 * t451 - t491) * t359;
t155 = t424 - t579;
t150 = t203 * t366 + t270 * t362;
t144 = (t364 * t450 + t368 * t422) * t359;
t143 = (t364 * t422 - t368 * t450) * t359;
t119 = qJDD(6) + t126;
t114 = t201 * t361 - t417 * t582;
t98 = qJD(5) * t417 - t198 * t366 + t362 * t473;
t97 = qJD(5) * t201 - t198 * t362 - t366 * t473;
t69 = -pkin(5) * t417 + t100;
t40 = pkin(5) * t97 + t54;
t37 = t115 * qJD(6) + t361 * t98 + t582 * t97;
t36 = t201 * t497 + t361 * t97 - t417 * t466 - t582 * t98;
t16 = -pkin(5) * t418 + t29;
t15 = t582 * t34 - t565;
t14 = -t361 * t34 - t487;
t13 = -pkin(11) * t97 + t17;
t11 = t582 * t30 - t565;
t10 = pkin(5) * t199 - pkin(11) * t98 + t18;
t4 = -t20 * qJD(6) + t582 * t10 - t361 * t13;
t3 = t19 * qJD(6) + t361 * t10 + t582 * t13;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t365 - g(2) * t369, t431, 0, 0, t238, t184, t144, t239, -t143, t288, -t446 * t360 + t271 * t331 + (-t464 + t491) * t465 - t390, -t252 * t335 - t331 * t511 + t360 * t447 - t396 * t465 + t434 ((qJD(2) * t250 + qJDD(1) * t511 - t447 + (-qJD(2) * t271 + t252) * qJD(1)) * t368 + (-qJD(2) * t251 - qJDD(1) * t271 + t446) * t364 - t431) * t359, t355 * qJDD(1) * pkin(1) ^ 2 - g(1) * t460 - g(2) * t510 + t250 * t253 + t251 * t252 - t271 * t446 - t447 * t511, t288, -t144, t143, t238, t184, t239 ((qJD(2) * t208 - qJDD(1) * t240 - t131 + (qJD(2) * t244 - t229) * qJD(1)) * t368 + (qJD(2) * t212 + qJDD(1) * t244 + t155 + (qJD(2) * t240 + t253) * qJD(1)) * t364 - t431) * t359, t155 * t360 + t244 * t331 + (t364 * t423 + t368 * t398) * t359 + t390, -t131 * t360 - t229 * t335 - t240 * t331 + (-t364 * t398 + t368 * t423) * t359 - t434, -g(1) * t392 - g(2) * t419 + t131 * t240 + t142 * t241 + t155 * t244 + t208 * t253 + t212 * t229 + t224 * t218, -t129 * t266 - t198 * t237, t129 * t265 - t130 * t266 + t198 * t235 - t199 * t237, -t198 * t308 + t245 * t266 + (-t129 * t364 + t237 * t505) * t359, t130 * t265 + t199 * t235, -t199 * t308 - t245 * t265 + (-t130 * t364 - t235 * t505) * t359 (t245 * t364 + t308 * t505) * t359, -g(1) * t416 - g(2) * t203 + t110 * t245 + t130 * t210 + t173 * t199 + t187 * t235 + t265 * t96 + t308 * t61 + (-t364 * t452 + t505 * t78) * t359, -t111 * t245 - t129 * t210 - t173 * t198 + t187 * t237 + t266 * t96 - t308 * t60 + (-t31 * t364 - t505 * t79) * t359 + t436, t110 * t129 - t111 * t130 + t198 * t78 - t199 * t79 - t235 * t60 - t237 * t61 - t265 * t31 + t266 * t452 + t432, -g(1) * t379 - g(2) * t382 - t110 * t452 + t31 * t111 + t173 * t187 + t96 * t210 + t79 * t60 + t78 * t61, t164 * t98 - t201 * t67, -t98 * t162 - t164 * t97 + t201 * t418 - t417 * t67, t126 * t201 + t164 * t199 + t230 * t98 - t265 * t67, t162 * t97 + t417 * t418, t126 * t417 - t162 * t199 - t97 * t230 + t265 * t418, t126 * t265 + t199 * t230, -g(1) * t585 - g(2) * t150 - t100 * t418 + t55 * t126 + t54 * t162 + t18 * t230 + t46 * t199 + t9 * t265 - t29 * t417 + t70 * t97, g(1) * t586 - g(2) * t149 - t100 * t67 - t56 * t126 + t54 * t164 - t17 * t230 - t47 * t199 + t29 * t201 + t265 * t413 + t70 * t98, -t17 * t162 - t18 * t164 - t9 * t201 - t413 * t417 + t418 * t56 - t46 * t98 - t47 * t97 + t55 * t67 - t436, -t413 * t56 + t47 * t17 + t9 * t55 + t46 * t18 + t29 * t100 + t70 * t54 - g(1) * (pkin(4) * t416 + pkin(10) * t415 + t379) - g(2) * (pkin(4) * t203 + pkin(10) * t202 + t382) -t115 * t23 - t36 * t412, t114 * t23 - t115 * t24 + t36 * t82 - t37 * t412, t115 * t119 + t199 * t412 - t222 * t36 - t23 * t265, t114 * t24 + t37 * t82, -t114 * t119 - t199 * t82 - t222 * t37 - t24 * t265, t119 * t265 + t199 * t222, -g(1) * t587 - g(2) * t139 + t11 * t199 + t16 * t114 + t19 * t119 + t2 * t265 + t4 * t222 + t69 * t24 + t59 * t37 + t40 * t82, g(1) * t588 - g(2) * t138 - t1 * t265 + t16 * t115 - t20 * t119 - t12 * t199 - t3 * t222 - t69 * t23 - t59 * t36 + t40 * t412, -t1 * t114 + t11 * t36 - t115 * t2 - t12 * t37 + t19 * t23 - t20 * t24 - t3 * t82 - t4 * t412 - t436, t1 * t20 + t12 * t3 + t2 * t19 + t11 * t4 + t16 * t69 + t59 * t40 - g(1) * (-t268 * t479 + t349 * t416 - t370 * t415 + t385) - g(2) * (-t202 * t370 + t203 * t349 + t270 * t479 + t397); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292, t264, t182, t292, -t181, t331, t535 * t581 + t375, pkin(1) * t485 - t250 * t335 - t383 + t489, 0, 0, t331, -t182, t181, -t292, t264, t292 ((-pkin(2) * t364 + t556) * qJDD(1) + ((-qJ(3) * qJD(2) - t212 - t251) * t364 + (-pkin(2) * qJD(2) - t208 + t495) * t368) * qJD(1)) * t359, -t249 * t476 - t375 - 0.2e1 * t579 + t592, 0.2e1 * t311 + t312 + t495 * t335 + (-g(3) * t364 + (t224 * t368 + t249 * t364) * qJD(1)) * t359 + t383, -t155 * pkin(2) - g(1) * t454 - g(2) * t455 - g(3) * t512 - t131 * qJ(3) - t208 * t251 - t212 * t495 - t224 * t249, -t129 * t367 - t363 * t544 (-t130 - t544) * t367 + (t129 + t547) * t363, -t308 * t503 + t234 + (-t237 * t368 - t308 * t526) * t508, t130 * t363 + t235 * t403, -t308 * t502 - t543 + (t235 * t368 - t364 * t403) * t508, -t308 * t476, -t78 * t476 + qJ(3) * t130 - t124 * t308 + t496 * t235 + t590 * t367 + (-t308 * t501 - t386 + t96) * t363, t79 * t476 - qJ(3) * t129 + t367 * t96 + (t125 - t469) * t308 + t496 * t237 - t590 * t363 - t482, t124 * t237 + t125 * t235 + (-t79 * t477 + t129 * t371 + t452 + (-t235 * t371 - t79) * qJD(4)) * t367 + (t78 * t477 - t130 * t371 - t31 + (t237 * t371 + t78) * qJD(4)) * t363 + t597, t96 * qJ(3) - t79 * t125 - t78 * t124 - g(1) * (t454 - t576) - g(2) * (t455 - t577) - t444 + t496 * t173 + (t31 * t363 - t452 * t367 + (-t363 * t78 + t367 * t79) * qJD(4)) * t371, t164 * t619 - t67 * t520, t228 * t162 + t164 * t227 + (t549 + t552) * t503 + (t391 + t564 + (-t548 + t553) * qJD(5)) * t367, -t363 * t67 + t429 * t230 + (t404 + t409) * t367, -t162 * t621 - t418 * t528, t418 * t363 + t613 * t230 + (t410 - t600) * t367, t363 * t126 + t230 * t403, -t106 * t162 + t231 * t126 - t70 * t227 + t558 * t230 + t597 * t362 + (t9 + (t162 * t371 - t362 * t70) * qJD(4) - t386 * t366) * t363 + (t29 * t362 + t308 * t46 + t371 * t418 + t499 * t70) * t367, -t106 * t164 - t232 * t126 - t70 * t228 - t559 * t230 + t597 * t366 + (t413 + (t164 * t371 - t366 * t70) * qJD(4) + t386 * t362) * t363 + (t29 * t366 - t308 * t47 + t371 * t67 - t500 * t70) * t367, t232 * t418 + t231 * t67 + t47 * t227 + t46 * t228 - t558 * t164 - t559 * t162 + t427 * t503 + (qJD(5) * t426 + t362 * t413 - t9 * t366) * t367 + t482, -t413 * t232 + t9 * t231 - t70 * t106 - g(1) * t457 - g(2) * t458 - g(3) * (t437 * t534 + t481) + t559 * t47 + t558 * t46 + (-t29 * t367 + t503 * t70) * t371 + t433 * t290, -t23 * t257 - t412 * t517, t23 * t255 - t24 * t257 - t412 * t515 + t517 * t82, t119 * t257 - t222 * t517 - t23 * t363 + t403 * t412, t24 * t255 + t515 * t82, -t119 * t255 - t222 * t515 - t24 * t363 - t403 * t82, t119 * t363 + t222 * t403, t104 * t119 + t2 * t363 + t11 * t502 + t279 * t24 + t16 * t255 - g(1) * (-t269 * t352 + t270 * t536) - g(2) * (-t267 * t352 + t268 * t536) + t557 * t82 + t515 * t59 + t568 * t222 + (t11 * t475 - g(3) * (t352 * t368 + t353 * t526)) * t359, -t105 * t119 - t1 * t363 - t12 * t502 - t279 * t23 + t16 * t257 - g(1) * (-t269 * t353 - t270 * t537) - g(2) * (-t267 * t353 - t268 * t537) + t557 * t412 - t517 * t59 - t569 * t222 + (-t12 * t475 - g(3) * (-t352 * t526 + t353 * t368)) * t359, -t1 * t255 + t104 * t23 - t105 * t24 + t11 * t517 - t12 * t515 - t2 * t257 - t412 * t568 - t569 * t82 + t482, t1 * t105 + t2 * t104 + t16 * t279 - g(1) * (-t269 * t578 + t457) - g(2) * (-t267 * t578 + t458) - t444 + t557 * t59 - g(3) * (pkin(5) * t527 + t364 * t425) * t359 + t569 * t12 + t568 * t11 + t433 * (qJ(3) + t425); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, t292 + t331, -t335 ^ 2 - t356 * t535, t212 * t335 - t381 - t579 + t592, 0, 0, 0, 0, 0, 0, -t308 ^ 2 * t363 - t235 * t335 + t234, -t237 * t335 - t308 * t403 - t543, t363 * t598 + t367 * t599, -t173 * t335 + t601 * t363 + t367 * t609 - t597, 0, 0, 0, 0, 0, 0, t367 * t418 + (-t362 * t502 - t225) * t230 + (t410 + t600) * t363, t367 * t67 + (-t366 * t502 + t226) * t230 + (t404 - t409) * t363, t226 * t162 + t225 * t164 + (t549 - t552) * t502 + (t391 - t564 + (t548 + t553) * qJD(5)) * t363, -t225 * t46 - t226 * t47 + (-qJD(4) * t426 - t29) * t367 + (t308 * t70 + t377) * t363 - t597, 0, 0, 0, 0, 0, 0, -t119 * t254 + t222 * t516 - t24 * t367 + t407 * t82, -t119 * t256 - t222 * t518 + t23 * t367 + t407 * t412, -t23 * t254 - t24 * t256 - t412 * t516 - t518 * t82, t1 * t256 + t11 * t516 + t12 * t518 - t16 * t367 - t2 * t254 + t407 * t59 - t597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, -t235 ^ 2 + t237 ^ 2, -t599, -t545, t598, t245, -t173 * t237 + t394 + t609, t173 * t235 - t393 - t601, 0, 0, t164 * t453 - t564 (-t67 - t554) * t366 + (t418 - t550) * t362, -t164 * t237 + t230 * t453 + t529, t230 * t553 + t391, -t230 ^ 2 * t362 + t162 * t237 + t555, -t230 * t237, -pkin(4) * t483 - t57 * t230 - t46 * t237 - t79 * t162 + t402 * t362 + (-t378 + t571) * t366, pkin(4) * t67 - t164 * t79 + t230 * t58 + t237 * t47 + t362 * t378 + t366 * t402, t58 * t162 + t57 * t164 + ((qJD(5) * t164 + t418) * pkin(10) + t611) * t366 + ((qJD(5) * t162 - t67) * pkin(10) + t602) * t362 + t393, -t46 * t57 - t47 * t58 - t70 * t79 + t388 * pkin(4) + (t377 + t393) * pkin(10), -t23 * t281 - t412 * t513, -t23 * t411 - t24 * t281 + t412 * t514 + t513 * t82, t119 * t281 - t222 * t513 - t237 * t412, -t24 * t411 - t514 * t82, t119 * t411 + t222 * t514 + t237 * t82, -t222 * t237, -t11 * t237 + t119 * t219 - t16 * t411 + t222 * t560 - t24 * t349 + t353 * t394 + t439 * t82 - t514 * t59, -t119 * t220 + t12 * t237 + t16 * t281 - t222 * t561 + t23 * t349 - t352 * t394 + t412 * t439 - t513 * t59, t1 * t411 + t11 * t513 + t12 * t514 - t2 * t281 + t219 * t23 - t220 * t24 - t412 * t560 - t561 * t82 + t393, t1 * t220 + t2 * t219 - t16 * t349 - g(1) * (-t202 * t349 - t203 * t370) - g(2) * (t349 * t415 + t370 * t416) - g(3) * (-t265 * t349 - t266 * t370) + t439 * t59 + t561 * t12 + t560 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t551, -t162 ^ 2 + t164 ^ 2, -t67 + t554, -t551, t418 + t550, t126, -t70 * t164 - t602 + t607, g(1) * t150 - g(2) * t585 + g(3) * t201 + t70 * t162 - t611, 0, 0, t570, t608, t606, -t570, t589, t119, -t14 * t222 + (t582 * t119 - t164 * t82 - t222 * t497) * pkin(5) + t591, t15 * t222 + (-t119 * t361 - t164 * t412 - t222 * t466) * pkin(5) + t605, -t11 * t82 + t12 * t412 + t14 * t412 + t15 * t82 + (t582 * t23 - t24 * t361 + (t361 * t412 - t582 * t82) * qJD(6)) * pkin(5), -t11 * t14 - t12 * t15 + (t1 * t361 + t2 * t582 - t59 * t164 + (-t11 * t361 + t12 * t582) * qJD(6) + t607) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, t608, t606, -t570, t589, t119, t12 * t222 + t591, t11 * t222 + t605, 0, 0;];
tau_reg  = t5;
