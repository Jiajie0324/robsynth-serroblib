% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRPRRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR13_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR13_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR13_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:53:28
% EndTime: 2019-03-09 14:53:52
% DurationCPUTime: 10.93s
% Computational Cost: add. (10125->695), mult. (24043->957), div. (0->0), fcn. (19026->14), ass. (0->338)
t287 = cos(qJ(2));
t277 = sin(pkin(6));
t282 = sin(qJ(2));
t412 = qJD(1) * t282;
t379 = t277 * t412;
t278 = cos(pkin(6));
t413 = qJD(1) * t278;
t387 = pkin(1) * t413;
t418 = -pkin(8) * t379 + t287 * t387;
t394 = qJD(3) - t418;
t281 = sin(qJ(4));
t286 = cos(qJ(4));
t346 = pkin(4) * t286 + pkin(10) * t281;
t496 = (-pkin(3) - t346) * t379 - qJD(4) * t346 - t394;
t285 = cos(qJ(5));
t411 = qJD(1) * t287;
t378 = t277 * t411;
t280 = sin(qJ(5));
t432 = t280 * t281;
t176 = -t285 * t378 + t379 * t432;
t406 = qJD(4) * t281;
t492 = t280 * t406 + t176;
t414 = qJD(1) * t277;
t426 = t282 * t285;
t177 = (t280 * t287 + t281 * t426) * t414;
t338 = -t285 * t406 - t177;
t401 = qJD(5) * t286;
t495 = -t280 * t401 + t338;
t393 = qJD(1) * qJD(2);
t369 = t282 * t393;
t350 = t277 * t369;
t390 = qJDD(1) * t287;
t490 = -t277 * t390 + t350;
t260 = qJD(2) + t413;
t351 = t281 * t378;
t185 = t260 * t286 - t351;
t235 = qJD(4) + t379;
t121 = t185 * t280 - t285 * t235;
t123 = t185 * t285 + t235 * t280;
t279 = sin(qJ(6));
t284 = cos(qJ(6));
t333 = t121 * t279 - t284 * t123;
t59 = t284 * t121 + t123 * t279;
t494 = t333 * t59;
t493 = t285 * t401 - t492;
t183 = t260 * t281 + t286 * t378;
t480 = qJD(5) + qJD(6);
t491 = t183 + t480;
t489 = t333 ^ 2 - t59 ^ 2;
t398 = qJD(6) * t284;
t399 = qJD(6) * t279;
t368 = t287 * t393;
t391 = qJDD(1) * t282;
t311 = t368 + t391;
t302 = t311 * t277;
t189 = qJDD(4) + t302;
t402 = qJD(5) * t285;
t403 = qJD(5) * t280;
t392 = qJDD(1) * t278;
t259 = qJDD(2) + t392;
t93 = -qJD(4) * t183 + t286 * t259 + t490 * t281;
t43 = -t185 * t403 + t280 * t189 + t235 * t402 + t285 * t93;
t44 = qJD(5) * t123 - t285 * t189 + t280 * t93;
t13 = -t121 * t398 - t123 * t399 - t279 * t44 + t284 * t43;
t179 = qJD(5) + t183;
t171 = qJD(6) + t179;
t488 = t171 * t59 + t13;
t283 = sin(qJ(1));
t424 = t283 * t287;
t288 = cos(qJ(1));
t425 = t282 * t288;
t203 = t278 * t424 + t425;
t435 = t277 * t283;
t157 = t203 * t281 + t286 * t435;
t422 = t287 * t288;
t427 = t282 * t283;
t204 = -t278 * t427 + t422;
t276 = qJ(5) + qJ(6);
t271 = sin(t276);
t272 = cos(t276);
t101 = t157 * t272 + t204 * t271;
t289 = -pkin(2) - pkin(9);
t395 = pkin(3) * t379 + t394;
t117 = t260 * t289 + t395;
t453 = qJ(3) * t282;
t309 = t287 * t289 - pkin(1) - t453;
t164 = t309 * t277;
t135 = qJD(1) * t164;
t56 = t281 * t117 + t286 * t135;
t48 = pkin(10) * t235 + t56;
t253 = pkin(8) * t378;
t193 = t282 * t387 + t253;
t168 = pkin(3) * t378 + t193;
t241 = t260 * qJ(3);
t131 = t241 + t168;
t63 = pkin(4) * t183 - pkin(10) * t185 + t131;
t31 = t280 * t63 + t285 * t48;
t21 = -pkin(11) * t121 + t31;
t19 = t21 * t399;
t434 = t277 * t287;
t383 = t281 * t434;
t200 = t278 * t286 - t383;
t55 = t117 * t286 - t281 * t135;
t47 = -pkin(4) * t235 - t55;
t39 = pkin(5) * t121 + t47;
t436 = t277 * t282;
t202 = t278 * t425 + t424;
t201 = -t278 * t422 + t427;
t433 = t277 * t288;
t324 = -t201 * t281 + t286 * t433;
t477 = -t202 * t271 + t272 * t324;
t487 = t39 * t59 + g(1) * t101 - g(2) * t477 - g(3) * (-t200 * t272 - t271 * t436) + t19;
t100 = -t157 * t271 + t204 * t272;
t30 = -t280 * t48 + t285 * t63;
t20 = -pkin(11) * t123 + t30;
t18 = pkin(5) * t179 + t20;
t464 = t21 * t284;
t10 = t18 * t279 + t464;
t405 = qJD(4) * t286;
t262 = pkin(8) * t436;
t386 = pkin(1) * qJD(2) * t278;
t356 = qJD(1) * t386;
t385 = pkin(1) * t392;
t353 = qJD(2) * t253 + qJDD(1) * t262 + t282 * t356 - t287 * t385;
t332 = qJDD(3) + t353;
t67 = pkin(3) * t302 + t259 * t289 + t332;
t226 = pkin(2) * t350;
t452 = qJ(3) * t287;
t336 = pkin(9) * t282 - t452;
t408 = qJD(3) * t282;
t298 = qJD(2) * t336 - t408;
t77 = t226 + (qJD(1) * t298 + qJDD(1) * t309) * t277;
t314 = t117 * t405 - t135 * t406 + t281 * t67 + t286 * t77;
t16 = pkin(10) * t189 + t314;
t237 = t259 * qJ(3);
t238 = t260 * qJD(3);
t354 = t490 * pkin(8) - t282 * t385 - t287 * t356;
t95 = -t237 - t238 + t354;
t71 = -t490 * pkin(3) - t95;
t94 = -qJD(4) * t351 + t259 * t281 + (qJD(4) * t260 - t490) * t286;
t27 = pkin(4) * t94 - pkin(10) * t93 + t71;
t7 = -qJD(5) * t31 - t280 * t16 + t285 * t27;
t92 = qJDD(5) + t94;
t4 = pkin(5) * t92 - pkin(11) * t43 + t7;
t323 = -t285 * t16 - t280 * t27 - t63 * t402 + t403 * t48;
t5 = -pkin(11) * t44 - t323;
t2 = -qJD(6) * t10 - t279 * t5 + t284 * t4;
t478 = t202 * t272 + t271 * t324;
t486 = t39 * t333 - g(1) * t100 - g(2) * t478 - g(3) * (-t200 * t271 + t272 * t436) + t2;
t296 = qJD(6) * t333 - t279 * t43 - t284 * t44;
t485 = -t171 * t333 + t296;
t273 = t277 ^ 2;
t389 = 0.2e1 * t273;
t484 = t121 * t235;
t213 = t279 * t285 + t280 * t284;
t195 = t213 * t286;
t483 = t496 * t285;
t304 = g(1) * t203 + g(2) * t201 - g(3) * t434;
t220 = pkin(4) * t281 - pkin(10) * t286 + qJ(3);
t372 = t285 * t405;
t257 = pkin(2) * t379;
t166 = t336 * t414 + t257;
t419 = t286 * t166 + t281 * t168;
t80 = pkin(10) * t378 + t419;
t482 = -t220 * t402 + t496 * t280 + t285 * t80 - t289 * t372;
t481 = -qJD(6) * t285 - t402;
t337 = pkin(2) * t287 + t453;
t329 = -pkin(1) - t337;
t187 = t329 * t277;
t173 = qJD(1) * t187;
t479 = t173 * t379 + qJDD(3);
t476 = t202 * t285 + t280 * t324;
t365 = qJD(6) * t18 + t5;
t475 = t279 * t4 + t284 * t365;
t474 = -t202 * t280 + t285 * t324;
t473 = pkin(3) + pkin(8);
t472 = pkin(10) + pkin(11);
t471 = pkin(1) * t282;
t470 = pkin(2) * t259;
t469 = pkin(11) * t286;
t381 = -pkin(1) * t287 - pkin(2);
t142 = pkin(3) * t436 + t262 + (-pkin(9) + t381) * t278;
t420 = t281 * t142 + t286 * t164;
t76 = pkin(10) * t436 + t420;
t265 = t278 * t471;
t416 = pkin(8) * t434 + t265;
t186 = -t278 * qJ(3) - t416;
t163 = pkin(3) * t434 - t186;
t199 = t278 * t281 + t286 * t434;
t87 = pkin(4) * t199 - pkin(10) * t200 + t163;
t467 = t280 * t87 + t285 * t76;
t212 = t279 * t280 - t284 * t285;
t466 = t176 * t279 - t177 * t284 - t480 * t195 + t212 * t406;
t370 = t280 * t399;
t423 = t285 * t286;
t465 = -t286 * t370 + (t480 * t423 - t492) * t284 + t495 * t279;
t89 = qJDD(6) + t92;
t463 = t212 * t89;
t462 = t213 * t89;
t461 = t280 * t43;
t460 = t280 * t92;
t459 = t285 * t92;
t458 = t491 * t212;
t457 = t491 * t213;
t404 = qJD(4) * t289;
t147 = t281 * t166;
t79 = -pkin(4) * t378 - t168 * t286 + t147;
t456 = t493 * pkin(5) + t281 * t404 - t79;
t116 = pkin(4) * t185 + pkin(10) * t183;
t455 = t280 * t116 + t285 * t55;
t451 = t121 * t179;
t450 = t123 * t179;
t449 = t183 * t235;
t448 = t183 * t280;
t447 = t185 * t235;
t446 = t189 * t281;
t445 = t201 * t286;
t317 = t235 * t286;
t440 = t259 * t278;
t439 = t271 * t281;
t438 = t272 * t281;
t437 = t273 * qJD(1) ^ 2;
t431 = t280 * t289;
t430 = t281 * t282;
t429 = t281 * t285;
t428 = t281 * t288;
t421 = t289 * t189;
t258 = t289 * t429;
t417 = t280 * t220 + t258;
t274 = t282 ^ 2;
t415 = -t287 ^ 2 + t274;
t410 = qJD(2) * t282;
t409 = qJD(2) * t287;
t407 = qJD(4) * t171;
t400 = qJD(5) * t289;
t396 = qJD(2) - t260;
t388 = g(3) * t436;
t384 = t287 * t437;
t380 = qJD(5) * t472;
t377 = t286 * t412;
t376 = t277 * t410;
t375 = t277 * t409;
t366 = pkin(5) - t431;
t363 = -t280 * t76 + t285 * t87;
t361 = t142 * t286 - t281 * t164;
t360 = t179 * t285;
t359 = t117 * t406 + t135 * t405 + t281 * t77 - t286 * t67;
t358 = t260 + t413;
t357 = t259 + t392;
t355 = t282 * t384;
t352 = t277 * t377;
t349 = -t56 + (t403 + t448) * pkin(5);
t208 = t285 * t220;
t134 = -pkin(11) * t423 + t281 * t366 + t208;
t348 = t493 * pkin(11) - qJD(6) * t134 + t400 * t432 + t482;
t151 = -t280 * t469 + t417;
t347 = -pkin(5) * t352 - pkin(11) * t177 + qJD(6) * t151 - t280 * t80 - (-t258 + (-t220 + t469) * t280) * qJD(5) - (pkin(11) * t429 + t286 * t366) * qJD(4) + t483;
t344 = g(1) * t201 - g(2) * t203;
t343 = -g(1) * t204 - g(2) * t202;
t342 = g(1) * t288 + g(2) * t283;
t239 = t472 * t280;
t341 = pkin(11) * t448 + qJD(6) * t239 + t280 * t380 + t455;
t110 = t285 * t116;
t240 = t472 * t285;
t340 = pkin(5) * t185 + qJD(6) * t240 - t280 * t55 + t110 + (pkin(11) * t183 + t380) * t285;
t155 = t200 * t285 + t280 * t436;
t28 = pkin(5) * t199 - pkin(11) * t155 + t363;
t325 = -t200 * t280 + t277 * t426;
t32 = pkin(11) * t325 + t467;
t335 = -t279 * t32 + t28 * t284;
t334 = t279 * t28 + t284 * t32;
t85 = t155 * t279 - t284 * t325;
t86 = t155 * t284 + t279 * t325;
t331 = -0.2e1 * qJD(2) * t173;
t256 = t287 * t386;
t330 = -pkin(8) * t376 + t256;
t252 = pkin(2) * t376;
t133 = t277 * t298 + t252;
t169 = (t434 * t473 + t265) * qJD(2);
t328 = -t281 * t133 - t142 * t406 - t164 * t405 + t169 * t286;
t17 = -pkin(4) * t189 + t359;
t327 = -t179 * t402 - t460;
t326 = -t179 * t403 + t459;
t310 = t286 * t133 + t142 * t405 - t164 * t406 + t281 * t169;
t37 = pkin(10) * t375 + t310;
t269 = t278 * qJD(3);
t141 = -t376 * t473 + t256 + t269;
t152 = -qJD(4) * t199 + t281 * t376;
t153 = -qJD(4) * t383 + t278 * t405 - t286 * t376;
t52 = pkin(4) * t153 - pkin(10) * t152 + t141;
t322 = t280 * t52 + t285 * t37 + t87 * t402 - t403 * t76;
t321 = -pkin(10) * t92 + t179 * t47;
t318 = t235 * t123;
t316 = -qJ(3) * t409 - t408;
t104 = t226 + (qJD(1) * t316 + qJDD(1) * t329) * t277;
t170 = t277 * t316 + t252;
t312 = qJD(1) * t170 + qJDD(1) * t187 + t104;
t75 = -pkin(4) * t436 - t361;
t156 = t203 * t286 - t281 * t435;
t308 = g(1) * t156 + g(2) * (t277 * t428 + t445) - g(3) * t199;
t194 = t416 * qJD(2);
t307 = -g(1) * t202 + g(2) * t204 + t194 * t260;
t303 = -t343 + t388;
t301 = t343 - t354;
t300 = -t353 + t304;
t299 = (t396 * t411 + t391) * t277;
t38 = -pkin(4) * t375 - t328;
t297 = -qJD(5) * t467 - t280 * t37 + t285 * t52;
t295 = pkin(10) * qJD(5) * t179 + t17 + t308;
t294 = t179 * t400 + t303;
t293 = t193 * t260 + t300;
t292 = -t235 * t404 - t303 + t71;
t268 = -pkin(5) * t285 - pkin(4);
t210 = (pkin(5) * t280 - t289) * t286;
t196 = t212 * t286;
t191 = -qJ(3) * t378 + t257;
t188 = t278 * t381 + t262;
t182 = t286 * t189;
t178 = -t269 - t330;
t175 = t260 * t280 - t285 * t352;
t174 = t260 * t285 + t280 * t352;
t165 = -t241 - t193;
t161 = -pkin(2) * t260 + t394;
t113 = t332 - t470;
t108 = t157 * t285 + t204 * t280;
t107 = -t157 * t280 + t204 * t285;
t73 = qJD(5) * t325 + t152 * t285 + t280 * t375;
t72 = qJD(5) * t155 + t152 * t280 - t285 * t375;
t46 = -pkin(5) * t325 + t75;
t24 = pkin(5) * t72 + t38;
t23 = qJD(6) * t86 + t279 * t73 + t284 * t72;
t22 = -qJD(6) * t85 - t279 * t72 + t284 * t73;
t12 = pkin(5) * t44 + t17;
t11 = -pkin(11) * t72 + t322;
t9 = t18 * t284 - t21 * t279;
t8 = pkin(5) * t153 - pkin(11) * t73 + t297;
t1 = -t19 + t475;
t3 = [qJDD(1), g(1) * t283 - g(2) * t288, t342 (qJDD(1) * t274 + 0.2e1 * t282 * t368) * t273 (t282 * t390 - t393 * t415) * t389 (t282 * t357 + t358 * t409) * t277 (t287 * t357 - t358 * t410) * t277, t440, -t262 * t259 - t353 * t278 + (t287 * t440 + (-t369 + t390) * t389) * pkin(1) - t307, -pkin(1) * t311 * t389 - t259 * t416 - t260 * t330 + t278 * t354 - t344 ((qJD(2) * t161 - qJDD(1) * t186 - t95 + (qJD(2) * t188 - t178) * qJD(1)) * t287 + (qJD(2) * t165 + qJDD(1) * t188 + t113 + (qJD(2) * t186 + t194) * qJD(1)) * t282 - t342) * t277, t113 * t278 + t188 * t259 + (t282 * t331 + t287 * t312) * t277 + t307, -t178 * t260 - t186 * t259 - t278 * t95 + (-t282 * t312 + t287 * t331) * t277 + t344, t104 * t187 + t173 * t170 + t95 * t186 + t165 * t178 + t113 * t188 + t161 * t194 - g(1) * (-pkin(1) * t283 - pkin(2) * t202 + pkin(8) * t433 - qJ(3) * t201) - g(2) * (pkin(1) * t288 + pkin(2) * t204 + pkin(8) * t435 + qJ(3) * t203) t152 * t185 + t200 * t93, -t152 * t183 - t153 * t185 - t199 * t93 - t200 * t94, t152 * t235 + t189 * t200 + (t185 * t409 + t282 * t93) * t277, -t153 * t235 - t189 * t199 + (-t183 * t409 - t282 * t94) * t277 (t189 * t282 + t235 * t409) * t277, t328 * t235 + t361 * t189 + t141 * t183 + t163 * t94 + t71 * t199 + t131 * t153 - g(1) * t324 - g(2) * t157 + (-t282 * t359 + t409 * t55) * t277, -t310 * t235 - t420 * t189 + t141 * t185 + t163 * t93 + t71 * t200 + t131 * t152 + g(1) * t445 - g(2) * t156 + (g(1) * t428 - t282 * t314 - t409 * t56) * t277, t123 * t73 + t155 * t43, -t121 * t73 - t123 * t72 - t155 * t44 + t325 * t43, t123 * t153 + t155 * t92 + t179 * t73 + t199 * t43, -t121 * t153 - t179 * t72 - t199 * t44 + t325 * t92, t153 * t179 + t199 * t92, -g(1) * t474 - g(2) * t108 + t38 * t121 + t30 * t153 - t17 * t325 + t297 * t179 + t7 * t199 + t363 * t92 + t75 * t44 + t47 * t72, g(1) * t476 - g(2) * t107 + t38 * t123 - t31 * t153 + t17 * t155 - t322 * t179 + t199 * t323 + t75 * t43 - t467 * t92 + t47 * t73, t13 * t86 - t22 * t333, -t13 * t85 - t22 * t59 + t23 * t333 + t296 * t86, t13 * t199 - t153 * t333 + t171 * t22 + t86 * t89, -t153 * t59 - t171 * t23 + t199 * t296 - t85 * t89, t153 * t171 + t199 * t89 (-qJD(6) * t334 - t11 * t279 + t284 * t8) * t171 + t335 * t89 + t2 * t199 + t9 * t153 + t24 * t59 - t46 * t296 + t12 * t85 + t39 * t23 - g(1) * t477 - g(2) * t101 -(qJD(6) * t335 + t11 * t284 + t279 * t8) * t171 - t334 * t89 - t1 * t199 - t10 * t153 - t24 * t333 + t46 * t13 + t12 * t86 + t39 * t22 + g(1) * t478 - g(2) * t100; 0, 0, 0, -t355, t415 * t437, t299 (-t396 * t412 + t390) * t277, t259, t437 * t471 + t293, pkin(1) * t384 + t260 * t418 - t301 + t388 ((-pkin(2) * t282 + t452) * qJDD(1) + ((-qJ(3) * qJD(2) - t165 - t193) * t282 + (-pkin(2) * qJD(2) - t161 + t394) * t287) * qJD(1)) * t277, -t191 * t378 - t293 - 0.2e1 * t470 + t479, 0.2e1 * t237 + t238 + t394 * t260 + (-g(3) * t282 + (t173 * t287 + t191 * t282) * qJD(1)) * t277 + t301, -t95 * qJ(3) - t113 * pkin(2) - t173 * t191 - t161 * t193 - g(1) * (-pkin(2) * t203 + qJ(3) * t204) - g(2) * (-pkin(2) * t201 + qJ(3) * t202) - g(3) * t337 * t277 - t394 * t165, -t281 * t447 + t286 * t93 (-t94 - t447) * t286 + (-t93 + t449) * t281, -t235 * t406 + t182 + (-t185 * t287 - t235 * t430) * t414, -t235 * t405 - t446 + (t183 * t287 - t282 * t317) * t414, -t235 * t378, qJ(3) * t94 + t395 * t183 + t292 * t281 + t421 * t286 - t55 * t378 + (t147 + (t131 - t168) * t286) * t235, qJ(3) * t93 + t419 * t235 + t56 * t378 + t395 * t185 + (-t131 * t235 - t421) * t281 + t292 * t286, t495 * t123 + t43 * t423, t121 * t177 + t123 * t176 + (t121 * t285 + t123 * t280) * t406 + (-t461 - t285 * t44 + (t121 * t280 - t123 * t285) * qJD(5)) * t286, t281 * t43 + t338 * t179 + (t318 + t326) * t286, -t281 * t44 + t492 * t179 + (t327 - t484) * t286, t179 * t317 + t281 * t92, -t79 * t121 - t47 * t176 + t208 * t92 - t483 * t179 + ((-qJD(5) * t220 + t80) * t179 + t304) * t280 + (-t92 * t431 + t7 + (t121 * t289 - t280 * t47) * qJD(4) - t294 * t285) * t281 + (t30 * t379 + t47 * t402 + t17 * t280 - t289 * t44 + (-t179 * t431 + t30) * qJD(4)) * t286, -t417 * t92 - t79 * t123 - t47 * t177 + t482 * t179 + t304 * t285 + (t323 + (t123 * t289 - t285 * t47) * qJD(4) + t294 * t280) * t281 + (t17 * t285 - t235 * t31 - t289 * t43 - t403 * t47) * t286, -t13 * t196 - t333 * t466, -t13 * t195 - t196 * t296 + t333 * t465 - t466 * t59, t13 * t281 + t171 * t466 - t196 * t89 - t317 * t333, -t171 * t465 - t195 * t89 + t281 * t296 - t317 * t59, t171 * t317 + t281 * t89 (t134 * t284 - t151 * t279) * t89 + t2 * t281 + t9 * t405 - t210 * t296 + t12 * t195 - g(1) * (-t203 * t271 + t204 * t438) - g(2) * (-t201 * t271 + t202 * t438) + t456 * t59 + t465 * t39 + (t279 * t348 - t284 * t347) * t171 + (t9 * t377 - g(3) * (t271 * t287 + t272 * t430)) * t277 -(t134 * t279 + t151 * t284) * t89 - t1 * t281 - t10 * t405 + t210 * t13 - t12 * t196 - g(1) * (-t203 * t272 - t204 * t439) - g(2) * (-t201 * t272 - t202 * t439) - t456 * t333 + t466 * t39 + (t279 * t347 + t284 * t348) * t171 + (-t10 * t377 - g(3) * (-t271 * t430 + t272 * t287)) * t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, t259 + t355, -t260 ^ 2 - t274 * t437, t165 * t260 - t300 - t470 + t479, 0, 0, 0, 0, 0, -t235 ^ 2 * t281 - t183 * t260 + t182, -t185 * t260 - t235 * t317 - t446, 0, 0, 0, 0, 0, -t286 * t44 + (-t280 * t405 - t174) * t179 + (t327 + t484) * t281, -t286 * t43 + (t175 - t372) * t179 + (t318 - t326) * t281, 0, 0, 0, 0, 0 -(t174 * t284 - t175 * t279) * t171 + (-t213 * t407 + t296) * t286 + ((t279 * t403 + t284 * t481 + t370) * t171 - t462 + t235 * t59) * t281 (t174 * t279 + t175 * t284) * t171 + (t212 * t407 - t13) * t286 + (-(t279 * t481 - t280 * t398 - t284 * t403) * t171 + t463 - t235 * t333) * t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185 * t183, -t183 ^ 2 + t185 ^ 2, t93 + t449, t447 - t94, t189, -t131 * t185 + t235 * t56 - t308 - t359, g(1) * t157 - g(2) * t324 + g(3) * t200 + t131 * t183 + t235 * t55 - t314, t123 * t360 + t461 (t43 - t451) * t285 + (-t44 - t450) * t280, -t123 * t185 + t179 * t360 + t460, -t179 ^ 2 * t280 + t121 * t185 + t459, -t179 * t185, -pkin(4) * t44 - t110 * t179 - t56 * t121 - t30 * t185 + (t55 * t179 + t321) * t280 - t295 * t285, -pkin(4) * t43 - t56 * t123 + t179 * t455 + t31 * t185 + t280 * t295 + t285 * t321, t13 * t213 + t333 * t458, -t13 * t212 + t213 * t296 + t333 * t457 + t458 * t59, -t171 * t458 + t185 * t333 + t462, -t171 * t457 + t185 * t59 - t463, -t171 * t185 (-t239 * t284 - t240 * t279) * t89 - t268 * t296 + t12 * t212 - t9 * t185 + t349 * t59 + t457 * t39 + (t279 * t341 - t284 * t340) * t171 - t308 * t272 -(-t239 * t279 + t240 * t284) * t89 + t268 * t13 + t12 * t213 + t10 * t185 - t349 * t333 - t458 * t39 + (t279 * t340 + t284 * t341) * t171 + t308 * t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 * t121, -t121 ^ 2 + t123 ^ 2, t43 + t451, -t44 + t450, t92, -g(1) * t107 - g(2) * t476 - g(3) * t325 - t47 * t123 + t31 * t179 + t7, g(1) * t108 - g(2) * t474 + g(3) * t155 + t47 * t121 + t30 * t179 + t323, -t494, t489, t488, t485, t89 -(-t20 * t279 - t464) * t171 + (-t123 * t59 - t171 * t399 + t284 * t89) * pkin(5) + t486 (-t171 * t21 - t4) * t279 + (t171 * t20 - t365) * t284 + (t123 * t333 - t171 * t398 - t279 * t89) * pkin(5) + t487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, t489, t488, t485, t89, t10 * t171 + t486, t171 * t9 - t475 + t487;];
tau_reg  = t3;
