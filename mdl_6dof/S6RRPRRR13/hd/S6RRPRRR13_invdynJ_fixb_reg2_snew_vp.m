% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 01:21
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR13_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR13_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 01:18:27
% EndTime: 2019-05-07 01:18:53
% DurationCPUTime: 11.78s
% Computational Cost: add. (83333->592), mult. (185274->850), div. (0->0), fcn. (140052->12), ass. (0->369)
t332 = sin(qJ(6));
t331 = cos(pkin(6));
t325 = qJD(1) * t331 + qJD(2);
t334 = sin(qJ(4));
t339 = cos(qJ(4));
t330 = sin(pkin(6));
t340 = cos(qJ(2));
t404 = qJD(1) * t340;
t386 = t330 * t404;
t287 = t325 * t339 - t334 * t386;
t335 = sin(qJ(2));
t405 = qJD(1) * t335;
t387 = t330 * t405;
t312 = qJD(4) + t387;
t333 = sin(qJ(5));
t338 = cos(qJ(5));
t264 = t287 * t333 - t338 * t312;
t266 = t287 * t338 + t312 * t333;
t337 = cos(qJ(6));
t232 = t337 * t264 + t266 * t332;
t234 = -t264 * t332 + t266 * t337;
t188 = t234 * t232;
t406 = qJD(1) * t330;
t384 = qJD(2) * t406;
t315 = t335 * t384;
t398 = qJDD(1) * t340;
t296 = t330 * t398 - t315;
t324 = qJDD(1) * t331 + qJDD(2);
t373 = t339 * t296 + t324 * t334;
t250 = -qJD(4) * t287 - t373;
t249 = qJDD(5) - t250;
t248 = qJDD(6) + t249;
t461 = -t188 + t248;
t472 = t332 * t461;
t236 = t266 * t264;
t459 = -t236 + t249;
t471 = t333 * t459;
t285 = t325 * t334 + t339 * t386;
t259 = t287 * t285;
t399 = qJDD(1) * t330;
t407 = t335 * t399 + t340 * t384;
t382 = qJDD(4) + t407;
t458 = -t259 + t382;
t470 = t334 * t458;
t469 = t337 * t461;
t468 = t338 * t459;
t467 = t339 * t458;
t448 = pkin(3) + pkin(8);
t328 = t330 ^ 2;
t342 = qJD(1) ^ 2;
t413 = t328 * t342;
t323 = t340 ^ 2 * t413;
t451 = t325 ^ 2;
t299 = -t323 - t451;
t410 = t335 * t340;
t309 = t410 * t413;
t457 = -t324 - t309;
t466 = pkin(1) * (t299 * t335 - t340 * t457);
t450 = t335 ^ 2;
t322 = t450 * t413;
t280 = -t322 - t451;
t295 = -t309 + t324;
t465 = pkin(1) * (t280 * t340 - t295 * t335);
t418 = t457 * t335;
t464 = pkin(8) * (-t299 * t340 - t418);
t417 = t295 * t340;
t463 = pkin(8) * (t280 * t335 + t417);
t336 = sin(qJ(1));
t341 = cos(qJ(1));
t380 = t336 * g(1) - g(2) * t341;
t444 = pkin(8) * t330;
t291 = qJDD(1) * pkin(1) + t342 * t444 + t380;
t293 = pkin(3) * t387 - pkin(9) * t325;
t383 = qJD(3) * t405;
t313 = -0.2e1 * t330 * t383;
t302 = t325 * pkin(2) * t387;
t442 = t331 * g(3);
t349 = qJ(3) * t407 - t302 + t442;
t414 = t325 * t340;
t396 = qJ(3) * t414;
t449 = -pkin(2) - pkin(9);
t190 = t313 - pkin(3) * t323 + t449 * t296 + (-t291 + (-t293 * t335 - t396) * qJD(1)) * t330 - t349;
t409 = t339 * t190;
t371 = g(1) * t341 + g(2) * t336;
t292 = -pkin(1) * t342 + pkin(8) * t399 - t371;
t419 = t291 * t331;
t374 = t335 * t292 - t340 * t419;
t351 = -t324 * pkin(2) - t451 * qJ(3) + qJDD(3) + t374;
t344 = pkin(9) * t457 + t351;
t435 = qJ(3) * t335;
t370 = -pkin(2) * t340 - t435;
t441 = t340 * g(3);
t456 = t407 * pkin(3) + t344 + (t441 + (-pkin(3) * t414 + t370 * t387) * qJD(1)) * t330;
t149 = t334 * t456 + t409;
t257 = pkin(4) * t285 - pkin(10) * t287;
t452 = t312 ^ 2;
t127 = -pkin(4) * t452 + pkin(10) * t382 - t285 * t257 + t149;
t412 = t330 * t335;
t256 = -g(3) * t412 + t292 * t340 + t335 * t419;
t354 = t342 * t370;
t213 = t328 * t340 * t354 - t451 * pkin(2) + t324 * qJ(3) + 0.2e1 * qJD(3) * t325 + t256;
t189 = t296 * pkin(3) - pkin(9) * t323 + t293 * t325 + t213;
t361 = -t296 * t334 + t324 * t339;
t251 = -qJD(4) * t285 + t361;
t273 = t312 * t285;
t226 = t251 - t273;
t145 = -t226 * pkin(10) + (t287 * t312 - t250) * pkin(4) + t189;
t83 = t127 * t333 - t338 * t145;
t84 = t338 * t127 + t333 * t145;
t48 = t333 * t83 + t338 * t84;
t462 = t328 * (qJD(1) * t325 - t331 * t342);
t346 = -t338 * t251 - t333 * t382;
t204 = -t264 * qJD(5) - t346;
t375 = t251 * t333 - t338 * t382;
t355 = qJD(5) * t266 + t375;
t147 = -t232 * qJD(6) + t337 * t204 - t332 * t355;
t281 = qJD(5) + t285;
t278 = qJD(6) + t281;
t211 = t278 * t232;
t460 = -t211 + t147;
t247 = t281 * t264;
t182 = t247 + t204;
t376 = t204 * t332 + t337 * t355;
t113 = (qJD(6) - t278) * t234 + t376;
t178 = (qJD(5) - t281) * t266 + t375;
t388 = t325 * t405;
t271 = -t315 + (t388 + t398) * t330;
t455 = t330 * ((t323 - t451) * t335 + t417) + t271 * t331;
t304 = t325 * t386;
t270 = -t304 + t407;
t454 = t330 * ((-t322 + t451) * t340 - t418) + t270 * t331;
t230 = t232 ^ 2;
t231 = t234 ^ 2;
t453 = t264 ^ 2;
t263 = t266 ^ 2;
t276 = t278 ^ 2;
t279 = t281 ^ 2;
t283 = t285 ^ 2;
t284 = t287 ^ 2;
t61 = pkin(5) * t459 - pkin(11) * t182 - t83;
t241 = pkin(5) * t281 - pkin(11) * t266;
t67 = -pkin(5) * t453 - pkin(11) * t355 - t281 * t241 + t84;
t31 = t332 * t67 - t337 * t61;
t32 = t332 * t61 + t337 * t67;
t20 = -t31 * t337 + t32 * t332;
t447 = pkin(5) * t20;
t116 = t211 + t147;
t75 = -t113 * t332 - t116 * t337;
t446 = pkin(5) * t75;
t445 = pkin(4) * t339;
t443 = t296 * pkin(2);
t440 = t20 * t333;
t439 = t20 * t338;
t148 = t190 * t334 - t339 * t456;
t126 = -t382 * pkin(4) - t452 * pkin(10) + t257 * t287 + t148;
t93 = pkin(5) * t355 - pkin(11) * t453 + t241 * t266 + t126;
t438 = t332 * t93;
t437 = t337 * t93;
t436 = -pkin(4) * t126 + pkin(10) * t48;
t161 = t188 + t248;
t434 = t161 * t332;
t433 = t161 * t337;
t227 = t251 + t273;
t347 = (-qJD(4) + t312) * t287 - t373;
t184 = -t227 * t339 + t334 * t347;
t432 = t184 * t335;
t431 = t189 * t334;
t430 = t189 * t339;
t195 = t236 + t249;
t429 = t195 * t333;
t428 = t195 * t338;
t245 = t259 + t382;
t427 = t245 * t334;
t426 = t245 * t339;
t423 = t278 * t332;
t422 = t278 * t337;
t421 = t281 * t333;
t420 = t281 * t338;
t416 = t312 * t334;
t415 = t312 * t339;
t411 = t330 * t340;
t122 = t333 * t126;
t123 = t338 * t126;
t301 = -t322 - t323;
t408 = pkin(1) * (-t301 * t330 + (-t270 * t340 + t271 * t335) * t331) + (t270 * t335 + t271 * t340) * t444;
t403 = qJD(4) + t312;
t401 = qJD(5) + t281;
t397 = g(3) * t411;
t395 = t334 * t188;
t394 = t339 * t188;
t393 = t334 * t236;
t392 = t339 * t236;
t391 = t335 * t259;
t229 = -t263 - t279;
t159 = -t229 * t333 - t428;
t183 = t264 * t401 + t346;
t390 = pkin(4) * t183 + pkin(10) * t159 + t122;
t217 = -t279 - t453;
t156 = t217 * t338 - t471;
t179 = -t266 * t401 - t375;
t389 = pkin(4) * t179 + pkin(10) * t156 - t123;
t269 = t304 + t407;
t381 = pkin(4) * t334 + qJ(3);
t21 = t31 * t332 + t337 * t32;
t153 = -t230 - t231;
t77 = -t113 * t337 + t116 * t332;
t15 = -pkin(5) * t153 + pkin(11) * t77 + t21;
t17 = -pkin(11) * t75 - t20;
t43 = -t333 * t75 + t338 * t77;
t379 = -pkin(4) * t153 + pkin(10) * t43 + t338 * t15 + t333 * t17;
t112 = (qJD(6) + t278) * t234 + t376;
t170 = -t276 - t230;
t121 = t170 * t337 - t472;
t45 = -pkin(5) * t112 + pkin(11) * t121 - t437;
t120 = t170 * t332 + t469;
t59 = -pkin(11) * t120 + t438;
t80 = -t120 * t333 + t121 * t338;
t378 = -pkin(4) * t112 + pkin(10) * t80 + t333 * t59 + t338 * t45;
t197 = -t231 - t276;
t138 = -t197 * t332 - t433;
t50 = -pkin(5) * t460 + pkin(11) * t138 + t438;
t137 = t197 * t337 - t434;
t66 = -pkin(11) * t137 + t437;
t87 = -t137 * t333 + t138 * t338;
t377 = -pkin(4) * t460 + pkin(10) * t87 + t333 * t66 + t338 * t50;
t136 = -t178 * t338 + t182 * t333;
t206 = t263 + t453;
t372 = pkin(4) * t206 + pkin(10) * t136 + t48;
t274 = t330 * t291 + t442;
t47 = t333 * t84 - t338 * t83;
t96 = -t148 * t339 + t149 * t334;
t368 = t148 * t334 + t149 * t339;
t359 = pkin(1) - t370;
t358 = pkin(5) * t120 - t31;
t357 = -qJD(1) * t396 - t291;
t13 = t21 * t338 - t440;
t19 = -pkin(5) * t93 + pkin(11) * t21;
t356 = -pkin(4) * t93 + pkin(10) * t13 - pkin(11) * t440 + t338 * t19;
t255 = t374 + t397;
t353 = (t255 * t335 + t256 * t340) * t330;
t352 = t340 * t449 - pkin(1) - t435;
t350 = pkin(5) * t137 - t32;
t348 = t335 * t354;
t345 = t349 + t443;
t219 = (t330 * t348 + t441) * t330 + t351;
t307 = t331 * t324;
t300 = t322 - t323;
t272 = -t315 + (-t388 + t398) * t330;
t268 = -t284 + t452;
t267 = t283 - t452;
t260 = -t284 - t452;
t258 = t284 - t283;
t254 = -t452 - t283;
t253 = (t330 * t407 + t340 * t462) * t335;
t252 = (t296 * t330 - t335 * t462) * t340;
t243 = -t263 + t279;
t242 = -t279 + t453;
t240 = -t283 - t284;
t239 = -pkin(2) * t270 + qJ(3) * t271;
t238 = (-t285 * t339 + t287 * t334) * t312;
t235 = t263 - t453;
t228 = -t285 * t403 + t361;
t223 = t287 * t403 + t373;
t222 = t251 * t339 - t287 * t416;
t221 = -t250 * t334 + t285 * t415;
t220 = t331 * t300 + (t269 * t340 + t335 * t272) * t330;
t216 = t267 * t339 - t427;
t215 = -t268 * t334 + t467;
t210 = -t231 + t276;
t209 = t230 - t276;
t208 = -t260 * t334 - t426;
t207 = t260 * t339 - t427;
t201 = t254 * t334 + t467;
t199 = (-t264 * t338 + t266 * t333) * t281;
t198 = (-t264 * t333 - t266 * t338) * t281;
t193 = pkin(2) * t457 - qJ(3) * t299 + t219;
t192 = -pkin(2) * t280 + qJ(3) * t295 + t213;
t187 = t231 - t230;
t185 = -t223 * t339 - t226 * t334;
t181 = -t247 + t204;
t175 = t204 * t338 - t266 * t421;
t174 = t204 * t333 + t266 * t420;
t173 = t264 * t420 + t333 * t355;
t172 = t264 * t421 - t338 * t355;
t171 = t199 * t339 + t249 * t334;
t169 = t242 * t338 - t429;
t168 = -t243 * t333 + t468;
t167 = t242 * t333 + t428;
t166 = t243 * t338 + t471;
t165 = -pkin(2) * t219 + qJ(3) * t213;
t164 = (-t232 * t337 + t234 * t332) * t278;
t163 = (-t232 * t332 - t234 * t337) * t278;
t158 = t229 * t338 - t429;
t155 = t217 * t333 + t468;
t151 = t175 * t339 + t393;
t150 = t173 * t339 - t393;
t146 = -qJD(6) * t234 - t376;
t142 = t209 * t337 - t434;
t141 = -t210 * t332 + t469;
t140 = t209 * t332 + t433;
t139 = t210 * t337 + t472;
t135 = t179 * t338 - t181 * t333;
t134 = -t178 * t333 - t182 * t338;
t133 = t179 * t333 + t181 * t338;
t131 = t169 * t339 - t178 * t334;
t130 = t168 * t339 + t182 * t334;
t128 = t159 * t334 + t183 * t339;
t118 = t156 * t334 + t179 * t339;
t109 = t147 * t337 - t234 * t423;
t108 = t147 * t332 + t234 * t422;
t107 = -t146 * t332 + t232 * t422;
t106 = t146 * t337 + t232 * t423;
t105 = -t163 * t333 + t164 * t338;
t104 = t163 * t338 + t164 * t333;
t103 = t135 * t339 + t235 * t334;
t102 = qJ(3) * t228 + t207 * t449 + t430;
t100 = t136 * t334 + t206 * t339;
t99 = qJ(3) * t223 + t201 * t449 + t431;
t98 = t105 * t339 + t248 * t334;
t95 = -pkin(10) * t158 + t123;
t94 = -pkin(10) * t155 + t122;
t91 = -t140 * t333 + t142 * t338;
t90 = -t139 * t333 + t141 * t338;
t89 = t140 * t338 + t142 * t333;
t88 = t139 * t338 + t141 * t333;
t86 = t137 * t338 + t138 * t333;
t79 = t120 * t338 + t121 * t333;
t76 = -t112 * t337 - t332 * t460;
t74 = -t112 * t332 + t337 * t460;
t73 = -t108 * t333 + t109 * t338;
t72 = -t106 * t333 + t107 * t338;
t71 = t108 * t338 + t109 * t333;
t70 = t106 * t338 + t107 * t333;
t69 = -pkin(4) * t158 + t84;
t68 = -pkin(4) * t155 + t83;
t64 = qJ(3) * t240 + t184 * t449 - t96;
t63 = t339 * t73 + t395;
t62 = t339 * t72 - t395;
t57 = -t113 * t334 + t339 * t91;
t56 = t116 * t334 + t339 * t90;
t54 = t334 * t87 - t339 * t460;
t52 = -t112 * t339 + t334 * t80;
t51 = qJ(3) * t189 + t449 * t96;
t42 = -t333 * t74 + t338 * t76;
t41 = t333 * t77 + t338 * t75;
t40 = t333 * t76 + t338 * t74;
t38 = -pkin(10) * t134 - t47;
t36 = -t126 * t339 + t334 * t48;
t35 = t187 * t334 + t339 * t42;
t33 = -t153 * t339 + t334 * t43;
t29 = -pkin(4) * t41 - t446;
t28 = qJ(3) * t158 + t128 * t449 - t334 * t69 + t339 * t95;
t27 = qJ(3) * t155 + t118 * t449 - t334 * t68 + t339 * t94;
t26 = -pkin(4) * t86 - t350;
t25 = -pkin(10) * t86 - t333 * t50 + t338 * t66;
t24 = -pkin(4) * t79 - t358;
t23 = -pkin(10) * t79 - t333 * t45 + t338 * t59;
t22 = t100 * t449 + t134 * t381 + t339 * t38;
t12 = t21 * t333 + t439;
t10 = t449 * t36 + (-pkin(10) * t339 + t381) * t47;
t8 = t13 * t334 - t339 * t93;
t7 = qJ(3) * t86 + t25 * t339 - t26 * t334 + t449 * t54;
t6 = qJ(3) * t79 + t23 * t339 - t24 * t334 + t449 * t52;
t5 = -pkin(10) * t41 - t15 * t333 + t17 * t338;
t4 = -pkin(4) * t12 - t447;
t3 = -pkin(10) * t12 - pkin(11) * t439 - t19 * t333;
t2 = qJ(3) * t41 - t29 * t334 + t33 * t449 + t339 * t5;
t1 = qJ(3) * t12 + t3 * t339 - t334 * t4 + t449 * t8;
t9 = [0, 0, 0, 0, 0, qJDD(1), t380, t371, 0, 0, t253, t220, t454, t252, t455, t307, (-t255 + t466) * t331 + (pkin(1) * t272 + t340 * t274 - t464) * t330, (-t256 + t465) * t331 + (-pkin(1) * t269 - t335 * t274 - t463) * t330, t353 + t408, pkin(1) * (t330 * t274 + (-t255 * t340 + t256 * t335) * t331) + pkin(8) * t353, t307, -t454, -t455, t253, t220, t252, t331 * t239 + (t335 * (-qJ(3) * t301 + t351) + t340 * (-pkin(2) * t301 + t213) + (g(3) * t410 + t450 * (-pkin(2) * t404 - qJ(3) * t405) * t406) * t330) * t330 + t408, (t193 - t466) * t331 + (t340 * (t313 - t345) + t464 + t357 * t411 - t359 * t272) * t330, (t192 - t465) * t331 + (t335 * t345 + t463 + (-t357 + 0.2e1 * t383) * t412 + t359 * t269) * t330, (t165 + pkin(1) * (t213 * t335 - t219 * t340)) * t331 + (pkin(8) * (t213 * t340 + t219 * t335) - t359 * (-qJ(3) * t269 - t274 + t302 + t313 - t443)) * t330, t331 * t222 + (t391 + t340 * (-t251 * t334 - t287 * t415)) * t330, t331 * t185 + (t335 * t258 + t340 * (t223 * t334 - t226 * t339)) * t330, t331 * t215 + (t335 * t227 + t340 * (-t268 * t339 - t470)) * t330, t331 * t221 + (-t391 + t340 * (-t250 * t339 - t285 * t416)) * t330, t331 * t216 + (t335 * t347 + t340 * (-t267 * t334 - t426)) * t330, t382 * t412 + t331 * t238 + (t285 * t334 + t287 * t339) * t312 * t411, (t99 + pkin(1) * (-t201 * t340 + t223 * t335)) * t331 + (t335 * (pkin(3) * t201 - t148) + t340 * (pkin(3) * t223 + t430) + pkin(8) * (t201 * t335 + t223 * t340) + t352 * (t254 * t339 - t470)) * t330, (-qJ(3) * t208 - t409 - t334 * (t328 * t348 + t344 + t397) + (-t270 * t334 + t207) * pkin(3)) * t412 + (pkin(3) * t228 + t208 * t449 - t431) * t411 + t331 * t102 + pkin(1) * (-t208 * t330 + (-t207 * t340 + t228 * t335) * t331) + (t207 * t335 + t228 * t340) * t444, (t64 + pkin(1) * (-t184 * t340 + t240 * t335)) * t331 + (pkin(3) * t432 + t340 * (pkin(3) * t240 - t368) + pkin(8) * (t240 * t340 + t432) + t352 * (t227 * t334 + t339 * t347)) * t330, (t51 + pkin(1) * (t189 * t335 - t340 * t96)) * t331 + (t352 * t368 + t448 * (t340 * t189 + t335 * t96)) * t330, t331 * t151 + (t335 * t174 + t340 * (-t175 * t334 + t392)) * t330, t331 * t103 + (t335 * t133 + t340 * (-t135 * t334 + t235 * t339)) * t330, t331 * t130 + (t335 * t166 + t340 * (-t168 * t334 + t182 * t339)) * t330, t331 * t150 + (t335 * t172 + t340 * (-t173 * t334 - t392)) * t330, t331 * t131 + (t335 * t167 + t340 * (-t169 * t334 - t178 * t339)) * t330, t331 * t171 + (t335 * t198 + t340 * (-t199 * t334 + t249 * t339)) * t330, (t27 + pkin(1) * (-t118 * t340 + t155 * t335)) * t331 + (t335 * (pkin(3) * t118 + t389) + t340 * (pkin(3) * t155 - t334 * t94 - t339 * t68) + pkin(8) * (t118 * t335 + t155 * t340) + t352 * (t156 * t339 - t179 * t334)) * t330, (t28 + pkin(1) * (-t128 * t340 + t158 * t335)) * t331 + (t335 * (pkin(3) * t128 + t390) + t340 * (pkin(3) * t158 - t334 * t95 - t339 * t69) + pkin(8) * (t128 * t335 + t158 * t340) + t352 * (t159 * t339 - t183 * t334)) * t330, (t22 + pkin(1) * (-t100 * t340 + t134 * t335)) * t331 + (t335 * (pkin(3) * t100 + t372) + t340 * (-t334 * t38 + (pkin(3) + t445) * t134) + pkin(8) * (t100 * t335 + t134 * t340) + t352 * (t136 * t339 - t206 * t334)) * t330, (t10 + pkin(1) * (t335 * t47 - t340 * t36)) * t331 + ((t36 * t448 + t436) * t335 + (pkin(10) * t334 + t445 + t448) * t340 * t47 + t352 * (t126 * t334 + t339 * t48)) * t330, t331 * t63 + (t335 * t71 + t340 * (-t334 * t73 + t394)) * t330, t331 * t35 + (t335 * t40 + t340 * (t187 * t339 - t334 * t42)) * t330, t331 * t56 + (t335 * t88 + t340 * (t116 * t339 - t334 * t90)) * t330, t331 * t62 + (t335 * t70 + t340 * (-t334 * t72 - t394)) * t330, t331 * t57 + (t335 * t89 + t340 * (-t113 * t339 - t334 * t91)) * t330, t331 * t98 + (t335 * t104 + t340 * (-t105 * t334 + t248 * t339)) * t330, (t6 + pkin(1) * (t335 * t79 - t340 * t52)) * t331 + (t335 * (pkin(3) * t52 + t378) + t340 * (pkin(3) * t79 - t23 * t334 - t24 * t339) + pkin(8) * (t335 * t52 + t340 * t79) + t352 * (t112 * t334 + t339 * t80)) * t330, (t7 + pkin(1) * (t335 * t86 - t340 * t54)) * t331 + (t335 * (pkin(3) * t54 + t377) + t340 * (pkin(3) * t86 - t25 * t334 - t26 * t339) + pkin(8) * (t335 * t54 + t340 * t86) + t352 * (t334 * t460 + t339 * t87)) * t330, (t2 + pkin(1) * (-t33 * t340 + t335 * t41)) * t331 + (t335 * (pkin(3) * t33 + t379) + t340 * (pkin(3) * t41 - t29 * t339 - t334 * t5) + pkin(8) * (t33 * t335 + t340 * t41) + t352 * (t153 * t334 + t339 * t43)) * t330, (t1 + pkin(1) * (t12 * t335 - t340 * t8)) * t331 + (t335 * (pkin(3) * t8 + t356) + t340 * (pkin(3) * t12 - t3 * t334 - t339 * t4) + pkin(8) * (t12 * t340 + t335 * t8) + t352 * (t13 * t339 + t334 * t93)) * t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t300, t270, t309, t271, t324, -t255, -t256, 0, 0, t324, -t270, -t271, -t309, t300, t309, t239, t193, t192, t165, t222, t185, t215, t221, t216, t238, t99, t102, t64, t51, t151, t103, t130, t150, t131, t171, t27, t28, t22, t10, t63, t35, t56, t62, t57, t98, t6, t7, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270, -t457, t280, t219, 0, 0, 0, 0, 0, 0, t201, t207, t184, t96, 0, 0, 0, 0, 0, 0, t118, t128, t100, t36, 0, 0, 0, 0, 0, 0, t52, t54, t33, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, t258, t227, -t259, t347, t382, -t148, -t149, 0, 0, t174, t133, t166, t172, t167, t198, t389, t390, t372, t436, t71, t40, t88, t70, t89, t104, t378, t377, t379, t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t235, t182, -t236, -t178, t249, -t83, -t84, 0, 0, t188, t187, t116, -t188, -t113, t248, t358, t350, t446, t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t187, t116, -t188, -t113, t248, -t31, -t32, 0, 0;];
tauJ_reg  = t9;
