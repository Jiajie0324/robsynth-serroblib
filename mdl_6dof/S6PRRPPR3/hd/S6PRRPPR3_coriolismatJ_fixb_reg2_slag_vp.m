% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:11:04
% EndTime: 2019-03-08 21:11:14
% DurationCPUTime: 6.37s
% Computational Cost: add. (3436->376), mult. (7433->520), div. (0->0), fcn. (7318->8), ass. (0->288)
t270 = qJ(4) + pkin(5);
t272 = sin(qJ(3));
t275 = cos(qJ(3));
t451 = pkin(3) + pkin(4);
t361 = pkin(9) + t451;
t322 = t361 * t275;
t459 = t270 * t272 + t322;
t414 = t272 * t361;
t396 = t272 * t451;
t458 = t275 * t451;
t383 = qJD(4) * t272;
t269 = sin(pkin(6));
t276 = cos(qJ(2));
t411 = t269 * t276;
t273 = sin(qJ(2));
t438 = cos(pkin(6));
t325 = t438 * t272;
t412 = t269 * t273;
t354 = t275 * t412;
t185 = t325 + t354;
t421 = t185 * t275;
t184 = t272 * t412 - t275 * t438;
t422 = t184 * t272;
t285 = -t269 ^ 2 * t273 * t276 + (t421 + t422) * t411;
t453 = t285 * qJD(1);
t457 = t383 * t411 + t453;
t266 = t272 ^ 2;
t268 = t275 ^ 2;
t238 = t266 + t268;
t397 = t275 * t270;
t227 = (pkin(8) - qJ(5)) * t272;
t271 = sin(qJ(6));
t274 = cos(qJ(6));
t102 = t271 * t227 - t274 * (pkin(2) + t459);
t407 = t272 * qJ(4);
t326 = pkin(2) + t407;
t401 = t274 * t227;
t103 = t401 + (t272 * pkin(5) + t322 + t326) * t271;
t30 = (-t102 * t274 + t103 * t271) * t272;
t399 = t274 * t276;
t351 = t269 * t399;
t423 = t184 * t271;
t129 = -t351 + t423;
t352 = t271 * t411;
t304 = t184 * t274 + t352;
t443 = -t274 / 0.2e1;
t281 = (t304 * t271 / 0.2e1 + t129 * t443) * t272;
t403 = t273 * t274;
t405 = t272 * t276;
t164 = (-t271 * t405 - t403) * t269;
t404 = t273 * t271;
t165 = (t272 * t399 - t404) * t269;
t445 = -t271 / 0.2e1;
t300 = t165 * t274 / 0.2e1 + t164 * t445;
t19 = t281 - t300;
t420 = t19 * qJD(1);
t455 = qJD(2) * t30 + t420;
t155 = t397 - t414;
t402 = t274 * t155;
t261 = t275 * qJ(5);
t440 = t275 * pkin(8);
t229 = -t261 + t440;
t418 = t229 * t271;
t104 = t402 - t418;
t409 = t271 * t155;
t417 = t229 * t274;
t105 = t409 + t417;
t434 = t103 * t272;
t435 = t102 * t272;
t5 = (t104 * t275 + t435) * t274 + (t105 * t275 - t434) * t271;
t454 = -t5 * qJD(2) + t420;
t368 = t238 * qJD(2);
t452 = t285 * qJD(2);
t265 = t271 ^ 2;
t267 = t274 ^ 2;
t239 = t267 - t265;
t400 = t274 * t275;
t350 = t271 * t400;
t323 = 0.2e1 * t350;
t291 = qJD(2) * t323 - qJD(3) * t239;
t450 = t129 / 0.2e1;
t449 = t184 / 0.2e1;
t448 = t185 / 0.2e1;
t447 = t265 / 0.2e1;
t446 = -t267 / 0.2e1;
t444 = -t272 / 0.2e1;
t442 = -t275 / 0.2e1;
t441 = t272 * pkin(3);
t437 = qJD(2) * t19;
t433 = t103 * t274;
t432 = t104 * t271;
t431 = t105 * t274;
t430 = t129 * t271;
t290 = t304 * t274;
t14 = (-t184 + t290 + t430) * t185;
t429 = t14 * qJD(1);
t353 = t275 * t411;
t15 = -t129 * t164 + t165 * t304 + t185 * t353;
t428 = t15 * qJD(1);
t427 = t164 * t274;
t426 = t165 * t271;
t18 = t281 + t300;
t425 = t18 * qJD(2);
t424 = t184 * qJ(4);
t406 = t272 * t274;
t22 = t105 * t272 - t229 * t406 + (t103 - t401) * t275;
t419 = t22 * qJD(2);
t416 = t229 * t275;
t327 = t446 - t265 / 0.2e1;
t284 = -t327 * t414 - t397 / 0.2e1;
t302 = t104 * t443 + t105 * t445;
t24 = t284 + t302;
t415 = t24 * qJD(2);
t413 = t266 * t271;
t410 = t271 * t102;
t251 = t271 * t268;
t408 = t271 * t275;
t398 = t275 * qJ(4);
t392 = t238 * pkin(8) * t411;
t391 = t265 + t267;
t240 = t268 - t266;
t190 = t326 + t458;
t192 = t398 - t396;
t114 = t190 * t275 + t192 * t272;
t390 = qJD(2) * t114;
t115 = -t190 * t272 + t192 * t275;
t389 = qJD(2) * t115;
t207 = -t251 + t413;
t388 = qJD(2) * t207;
t209 = t240 * t274;
t387 = qJD(2) * t209;
t386 = qJD(2) * t269;
t385 = qJD(3) * t185;
t384 = qJD(4) * t271;
t382 = qJD(4) * t274;
t204 = t391 * t272;
t381 = qJD(5) * t204;
t380 = qJD(5) * t275;
t379 = qJD(6) * t271;
t378 = qJD(6) * t272;
t377 = qJD(6) * t274;
t315 = -t275 * pkin(3) - t407;
t217 = -pkin(2) + t315;
t228 = -t398 + t441;
t136 = t217 * t275 + t228 * t272;
t376 = t136 * qJD(2);
t137 = -t217 * t272 + t228 * t275;
t375 = t137 * qJD(2);
t360 = -pkin(3) / 0.2e1 - pkin(4) / 0.2e1;
t156 = t398 + (-t451 / 0.2e1 + t360) * t272;
t374 = t156 * qJD(2);
t175 = t411 * t368;
t178 = t275 * t204;
t373 = t178 * qJD(2);
t191 = (t447 + t446) * t275;
t372 = t191 * qJD(6);
t371 = t204 * qJD(2);
t206 = t251 + t413;
t370 = t206 * qJD(2);
t208 = t238 * t274;
t369 = t208 * qJD(2);
t367 = t240 * qJD(2);
t230 = t240 * qJD(3);
t256 = t266 * qJD(2);
t255 = t266 * qJD(4);
t366 = t271 * qJD(3);
t258 = t272 * qJD(2);
t257 = t272 * qJD(3);
t365 = t274 * qJD(3);
t364 = t275 * qJD(2);
t259 = t275 * qJD(3);
t363 = t275 * qJD(4);
t362 = t275 * qJD(6);
t358 = pkin(2) * t258;
t357 = pkin(2) * t364;
t356 = pkin(8) * t257;
t355 = pkin(8) * t259;
t349 = t271 * t256;
t348 = t271 * t365;
t347 = t271 * t259;
t346 = t274 * t259;
t345 = t272 * t363;
t344 = t272 * t377;
t343 = t272 * t362;
t342 = t217 * t258;
t341 = t273 * t386;
t340 = t276 * t386;
t339 = t271 * t377;
t338 = t271 * t258;
t337 = t271 * t364;
t244 = t272 * t259;
t243 = t272 * t364;
t336 = t274 * t364;
t335 = t275 * t449;
t334 = -t421 / 0.2e1;
t333 = -t412 / 0.2e1;
t332 = t411 / 0.2e1;
t331 = -t408 / 0.2e1;
t330 = -t405 / 0.2e1;
t329 = t398 / 0.2e1;
t328 = t397 / 0.2e1;
t324 = -0.2e1 * t350;
t321 = qJD(6) + t258;
t320 = t268 * t339;
t319 = t274 * t332;
t318 = -t261 / 0.2e1 + t440 / 0.2e1;
t317 = qJD(3) * t323;
t279 = t104 * t450 + t229 * t449 - t304 * t105 / 0.2e1;
t280 = -t300 * t361 + t328 * t411;
t1 = (-t433 / 0.2e1 - t410 / 0.2e1 + t227 / 0.2e1) * t185 + t279 + t280;
t6 = -t102 * t104 + t103 * t105 - t227 * t229;
t314 = -t1 * qJD(1) + t6 * qJD(2);
t297 = -t396 / 0.2e1 + t329;
t10 = (-t192 / 0.2e1 + t297) * t411;
t53 = t190 * t192;
t313 = -t10 * qJD(1) + t53 * qJD(2);
t278 = (-t290 / 0.2e1 - t430 / 0.2e1) * t272 + t334;
t301 = -t427 / 0.2e1 - t426 / 0.2e1;
t13 = t278 + t301;
t25 = t103 * t406 + t272 * t410 + t416;
t312 = qJD(1) * t13 - qJD(2) * t25;
t21 = -t102 * t275 + t104 * t272 + (t227 * t275 + t229 * t272) * t271;
t58 = (t319 + t450 - t423 / 0.2e1) * t275;
t311 = -t58 * qJD(1) + t21 * qJD(2);
t299 = -t422 / 0.2e1 + t334;
t79 = t333 - t299;
t39 = t79 * t274;
t72 = -t229 * t400 - t434;
t310 = t39 * qJD(1) - t72 * qJD(2);
t286 = (t274 * t330 + t404 / 0.2e1) * t269;
t293 = t129 * t444 + t185 * t331;
t40 = t286 + t293;
t71 = -t229 * t408 - t435;
t309 = t40 * qJD(1) + t71 * qJD(2);
t308 = -t431 + t432;
t142 = t227 * t272 + t416;
t307 = -qJD(1) * t79 - qJD(2) * t142;
t306 = t321 * t275;
t305 = t329 - t441 / 0.2e1;
t303 = t432 / 0.2e1 - t431 / 0.2e1;
t298 = -t414 / 0.2e1 + t328;
t37 = (t228 / 0.2e1 + t305) * t411;
t296 = -t217 * t228 * qJD(2) + t37 * qJD(1);
t289 = t155 / 0.2e1 + t298;
t82 = t289 * t274;
t295 = qJD(2) * t82 + t270 * t366;
t81 = t289 * t271;
t294 = -qJD(2) * t81 + t270 * t365;
t150 = -qJD(2) * t191 + t348;
t126 = -qJD(3) * t184 + t275 * t340;
t127 = t272 * t340 + t385;
t138 = qJD(2) * t251 * t274 + qJD(3) * t191;
t205 = t239 * t268;
t292 = qJD(2) * t205 + t317;
t28 = t303 + t318;
t287 = t325 / 0.2e1 + t354 / 0.2e1;
t76 = t185 * t327 + t287;
t288 = qJD(1) * t76 + qJD(2) * t28 + qJD(3) * t270;
t283 = qJD(3) * t315 + t363;
t282 = qJD(3) * t459 - t363;
t264 = qJ(4) * qJD(4);
t263 = qJD(3) * qJ(4);
t249 = t259 / 0.2e1;
t246 = t271 * t378;
t245 = t274 * t258;
t211 = t229 * qJD(3);
t201 = -t245 - t377;
t200 = t321 * t271;
t194 = t243 + t362 / 0.2e1;
t181 = t396 / 0.2e1 + t360 * t272;
t177 = t185 * qJD(4);
t162 = (t257 * t276 + t273 * t364) * t269;
t161 = -qJD(3) * t353 + t272 * t341;
t80 = t333 + t299;
t75 = t185 * t447 + t267 * t448 + t287;
t74 = -t418 + t402 / 0.2e1 - t298 * t274;
t73 = -t417 - t409 / 0.2e1 + t298 * t271;
t60 = t274 * t335 + t304 * t442 + t331 * t411;
t59 = t129 * t442 + t271 * t335 + t275 * t319;
t42 = t304 * t444 + t274 * t334 + (t271 * t330 - t403 / 0.2e1) * t269;
t41 = t286 - t293;
t38 = (-t228 / 0.2e1 + t305) * t411;
t27 = -t303 + t318;
t23 = t284 - t302;
t12 = t278 - t301;
t11 = t192 * t332 + t297 * t411;
t2 = -t185 * t227 / 0.2e1 - t279 + t280 + (t433 + t410) * t448;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t15 + qJD(3) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341, -t340, 0, 0, 0, 0, 0, 0, 0, 0, -t162, t161, t175, t453 + (-pkin(2) * t412 + t392) * qJD(2), 0, 0, 0, 0, 0, 0, -t162, t175, -t161 (t217 * t412 + t392) * qJD(2) + t38 * qJD(3) + t457, 0, 0, 0, 0, 0, 0, -t161, t162, -t175, t11 * qJD(3) + t80 * qJD(5) + (t142 * t276 - t190 * t273) * t386 + t457, 0, 0, 0, 0, 0, 0 (t164 * t272 - t268 * t352) * qJD(2) + t59 * qJD(3) + t42 * qJD(6) (-t165 * t272 - t268 * t351) * qJD(2) + t60 * qJD(3) + t41 * qJD(6), -t18 * qJD(3) + (t426 + t427) * t364, t428 + (-t102 * t164 + t103 * t165 + t229 * t353) * qJD(2) + t2 * qJD(3) + t18 * qJD(4) + t12 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t127, -t126, 0, 0, 0, 0, 0, 0, 0, 0, -t127, 0, t126, t38 * qJD(2) + (-pkin(3) * t185 - t424) * qJD(3) + t177, 0, 0, 0, 0, 0, 0, t126, t127, 0, t11 * qJD(2) + (-t185 * t451 - t424) * qJD(3) + t177, 0, 0, 0, 0, 0, 0, qJD(2) * t59 - t184 * t365 - t185 * t379, qJD(2) * t60 + t184 * t366 - t185 * t377, -t385 * t391 - t425, t429 + t2 * qJD(2) + (-t185 * t361 * t391 - t184 * t270) * qJD(3) + t75 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t75 + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42 * qJD(2) - qJD(6) * t304 - t185 * t366, qJD(2) * t41 + qJD(6) * t129 - t185 * t365, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t453, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t37 - t453, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t10 - qJD(5) * t79 - t453, 0, 0, 0, 0, 0, 0, -qJD(3) * t58 - qJD(6) * t39, -t40 * qJD(6), -qJD(3) * t19, -qJD(3) * t1 + qJD(4) * t19 + qJD(5) * t13 - t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t230, 0, -t244, 0, 0, -pkin(2) * t257, -pkin(2) * t259, 0, 0, t244, 0, -t230, 0, 0, -t244, -qJD(3) * t137 + t345, 0, -qJD(3) * t136 + t255 (qJD(3) * t228 - t383) * t217, -t244, t230, 0, t244, 0, 0, qJD(3) * t114 + t255, -qJD(3) * t115 - t345, t238 * qJD(5), qJD(3) * t53 - qJD(5) * t142 + t190 * t383, -t244 * t267 - t320, -qJD(6) * t205 + t272 * t317, -qJD(3) * t209 + t271 * t343, -t244 * t265 + t320, -qJD(3) * t207 + t274 * t343, t244, qJD(3) * t21 + qJD(5) * t206 + qJD(6) * t72 + t255 * t274, -qJD(3) * t22 + qJD(5) * t208 - qJD(6) * t71 - t255 * t271, qJD(3) * t5 + qJD(4) * t178, qJD(3) * t6 + qJD(4) * t30 - qJD(5) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, t367, t259, -t243, -t257, 0, -t355 - t358, t356 - t357, 0, 0, t243, t259, -t367, 0, t257, -t243, -t355 - t375, t283, -t356 - t376, pkin(8) * t283 - t296, -t243, t367, -t257, t243, t259, 0, -qJD(3) * t227 + t390, t211 - t389 (t407 + t458) * qJD(3) - t363 (-t227 * qJ(4) - t229 * t451) * qJD(3) + t229 * qJD(4) + t181 * qJD(5) + t313, -t372 + (-t267 * t364 - t348) * t272, qJD(6) * t324 + t272 * t291, -t347 - t387, t372 + (-t265 * t364 + t348) * t272, -t346 - t388, t194, t74 * qJD(6) - t227 * t365 + t271 * t282 + t311, t73 * qJD(6) + t227 * t366 + t274 * t282 - t419, qJD(3) * t308 - t454 (-t227 * t270 + t308 * t361) * qJD(3) + t27 * qJD(4) + t23 * qJD(5) + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, t259, t256, -t342 + t355, 0, 0, 0, 0, 0, 0, t256, -t243, -t259, t190 * t258 + t211, 0, 0, 0, 0, 0, 0, t256 * t274 - t347, -t346 - t349, t373, qJD(3) * t27 + t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, qJD(3) * t181 + t307, 0, 0, 0, 0, 0, 0, t370, t369, 0, qJD(3) * t23 + t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, -t292, t271 * t306, t138, t274 * t306, t249, qJD(3) * t74 - qJD(6) * t103 - t310, qJD(3) * t73 + qJD(6) * t102 - t309, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 * qJD(2), 0, 0, 0, 0, 0, 0, t58 * qJD(2), 0, t437, qJD(2) * t1 + qJD(4) * t76 - t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, -t367, 0, t243, 0, 0, t358, t357, 0, 0, -t243, 0, t367, 0, 0, t243, t375, 0, t376, t296, t243, -t367, 0, -t243, 0, 0, -t380 - t390, -qJD(5) * t272 + t389, 0, -qJD(5) * t156 - t313, t243 * t267 - t372, t321 * t324, -t344 + t387, t243 * t265 + t372, t246 + t388, -t194, -qJD(6) * t82 - t274 * t380 - t311, qJD(6) * t81 + t271 * t380 + t419, t381 + t454, qJD(4) * t28 + qJD(5) * t24 - t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t264, 0, 0, 0, 0, 0, 0, qJD(4), 0, 0, t264, t339, t239 * qJD(6), 0, -t339, 0, 0, -t270 * t379 + t382, -t270 * t377 - t384, 0, t270 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t263, 0, 0, 0, 0, 0, 0, qJD(3), 0, 0, t263, 0, 0, 0, 0, 0, 0, t365, -t366, 0, t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, -t258, 0, -t374, 0, 0, 0, 0, 0, 0, -t336, t337, t371, t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, -t291, t201, -t150, t200, -t364 / 0.2e1, t361 * t377 - t295, -t361 * t379 - t294, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t76 - t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, 0, -t256, t342, 0, 0, 0, 0, 0, 0, -t256, t243, 0 (-qJD(2) * t190 - qJD(5)) * t272, 0, 0, 0, 0, 0, 0 (-t256 - t378) * t274, t246 + t349, -t373, -qJD(3) * t28 - t381 - t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t263, 0, 0, 0, 0, 0, 0, -qJD(3), 0, 0, -t263, 0, 0, 0, 0, 0, 0, -t365, t366, 0, -t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, t200, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, t257, -t368, qJD(3) * t156 - t307 + t383, 0, 0, 0, 0, 0, 0, -t246 + t346 - t370, -t344 - t347 - t369, -t204 * qJD(3), -qJD(3) * t24 + qJD(4) * t204 - t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, t258, 0, t374, 0, 0, 0, 0, 0, 0, t336, -t337, -t371, -t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, 0, 0, 0, 0, 0, 0, 0, 0, 0, t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, t201, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39 * qJD(2), t40 * qJD(2), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t292 (-t337 + t365) * t272, -t138 (-t336 - t366) * t272, t249, t82 * qJD(3) + (qJD(5) * t271 + t382) * t272 + t310, -t81 * qJD(3) + (qJD(5) * t274 - t384) * t272 + t309, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150, t291, t245, t150, -t338, t364 / 0.2e1, t295, t294, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, -t338, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t245, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t3;
