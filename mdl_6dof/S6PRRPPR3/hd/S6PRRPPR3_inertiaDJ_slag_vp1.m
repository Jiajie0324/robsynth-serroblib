% Calculate time derivative of joint inertia matrix for
% S6PRRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% MqD [6x6]
%   time derivative of inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S6PRRPPR3_inertiaDJ_slag_vp11(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR3_inertiaDJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR3_inertiaDJ_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPPR3_inertiaDJ_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRPPR3_inertiaDJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRPPR3_inertiaDJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRPPR3_inertiaDJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_time_derivative_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:08:12
% EndTime: 2019-03-08 21:08:44
% DurationCPUTime: 22.97s
% Computational Cost: add. (39788->1131), mult. (113545->1560), div. (0->0), fcn. (127134->10), ass. (0->430)
t386 = sin(pkin(10));
t388 = cos(pkin(10));
t393 = cos(qJ(2));
t389 = cos(pkin(6));
t391 = sin(qJ(2));
t464 = t389 * t391;
t372 = t386 * t393 + t388 * t464;
t387 = sin(pkin(6));
t471 = cos(qJ(3));
t423 = t387 * t471;
t470 = sin(qJ(3));
t348 = t372 * t470 + t388 * t423;
t422 = t387 * t470;
t349 = t372 * t471 - t388 * t422;
t463 = t389 * t393;
t396 = -t386 * t391 + t388 * t463;
t233 = Icges(6,5) * t348 - Icges(6,6) * t349 + Icges(6,3) * t396;
t237 = Icges(4,5) * t349 - Icges(4,6) * t348 - Icges(4,3) * t396;
t241 = Icges(5,4) * t349 - Icges(5,2) * t396 + Icges(5,6) * t348;
t499 = t233 - t237 - t241;
t433 = t386 * t464;
t374 = t388 * t393 - t433;
t350 = t374 * t470 - t386 * t423;
t351 = t374 * t471 + t386 * t422;
t373 = t386 * t463 + t388 * t391;
t234 = Icges(6,5) * t350 - Icges(6,6) * t351 - Icges(6,3) * t373;
t238 = Icges(4,5) * t351 - Icges(4,6) * t350 + Icges(4,3) * t373;
t242 = Icges(5,4) * t351 + Icges(5,2) * t373 + Icges(5,6) * t350;
t498 = t234 - t238 - t242;
t235 = Icges(5,5) * t349 - Icges(5,6) * t396 + Icges(5,3) * t348;
t243 = Icges(4,4) * t349 - Icges(4,2) * t348 - Icges(4,6) * t396;
t245 = Icges(6,1) * t348 - Icges(6,4) * t349 + Icges(6,5) * t396;
t497 = t235 - t243 + t245;
t236 = Icges(5,5) * t351 + Icges(5,6) * t373 + Icges(5,3) * t350;
t244 = Icges(4,4) * t351 - Icges(4,2) * t350 + Icges(4,6) * t373;
t246 = Icges(6,1) * t350 - Icges(6,4) * t351 - Icges(6,5) * t373;
t496 = t236 - t244 + t246;
t239 = Icges(6,4) * t348 - Icges(6,2) * t349 + Icges(6,6) * t396;
t247 = Icges(5,1) * t349 - Icges(5,4) * t396 + Icges(5,5) * t348;
t249 = Icges(4,1) * t349 - Icges(4,4) * t348 - Icges(4,5) * t396;
t495 = -t239 + t247 + t249;
t240 = Icges(6,4) * t350 - Icges(6,2) * t351 - Icges(6,6) * t373;
t248 = Icges(5,1) * t351 + Icges(5,4) * t373 + Icges(5,5) * t350;
t250 = Icges(4,1) * t351 - Icges(4,4) * t350 + Icges(4,5) * t373;
t494 = -t240 + t248 + t250;
t491 = t497 * t348 + t495 * t349 + t396 * t499;
t490 = t348 * t496 + t349 * t494 + t396 * t498;
t489 = t497 * t350 + t495 * t351 - t373 * t499;
t488 = t350 * t496 + t351 * t494 - t373 * t498;
t375 = -t389 * t471 + t391 * t422;
t376 = t389 * t470 + t391 * t423;
t465 = t387 * t393;
t318 = Icges(6,5) * t375 - Icges(6,6) * t376 + Icges(6,3) * t465;
t321 = Icges(6,4) * t375 - Icges(6,2) * t376 + Icges(6,6) * t465;
t324 = Icges(6,1) * t375 - Icges(6,4) * t376 + Icges(6,5) * t465;
t159 = t318 * t396 - t321 * t349 + t324 * t348;
t319 = Icges(5,5) * t376 - Icges(5,6) * t465 + Icges(5,3) * t375;
t322 = Icges(5,4) * t376 - Icges(5,2) * t465 + Icges(5,6) * t375;
t325 = Icges(5,1) * t376 - Icges(5,4) * t465 + Icges(5,5) * t375;
t160 = t319 * t348 - t322 * t396 + t325 * t349;
t320 = Icges(4,5) * t376 - Icges(4,6) * t375 - Icges(4,3) * t465;
t323 = Icges(4,4) * t376 - Icges(4,2) * t375 - Icges(4,6) * t465;
t326 = Icges(4,1) * t376 - Icges(4,4) * t375 - Icges(4,5) * t465;
t161 = -t320 * t396 - t323 * t348 + t326 * t349;
t493 = t159 + t160 + t161;
t162 = -t318 * t373 - t321 * t351 + t324 * t350;
t163 = t319 * t350 + t322 * t373 + t325 * t351;
t164 = t320 * t373 - t323 * t350 + t326 * t351;
t492 = t162 + t163 + t164;
t467 = t386 * t387;
t466 = t387 * t388;
t390 = sin(qJ(6));
t392 = cos(qJ(6));
t354 = -t375 * t390 + t392 * t465;
t355 = t375 * t392 + t390 * t465;
t259 = Icges(7,5) * t355 + Icges(7,6) * t354 + Icges(7,3) * t376;
t260 = Icges(7,4) * t355 + Icges(7,2) * t354 + Icges(7,6) * t376;
t261 = Icges(7,1) * t355 + Icges(7,4) * t354 + Icges(7,5) * t376;
t300 = -t348 * t390 + t392 * t396;
t301 = t348 * t392 + t390 * t396;
t115 = t259 * t349 + t260 * t300 + t261 * t301;
t362 = t396 * qJD(2);
t418 = qJD(3) * t470;
t404 = t387 * t418;
t419 = qJD(3) * t471;
t295 = t362 * t470 + t372 * t419 - t388 * t404;
t363 = t372 * qJD(2);
t192 = -qJD(6) * t301 - t295 * t390 - t363 * t392;
t193 = qJD(6) * t300 + t295 * t392 - t363 * t390;
t405 = t387 * t419;
t296 = t362 * t471 - t372 * t418 - t388 * t405;
t121 = Icges(7,5) * t193 + Icges(7,6) * t192 + Icges(7,3) * t296;
t123 = Icges(7,4) * t193 + Icges(7,2) * t192 + Icges(7,6) * t296;
t125 = Icges(7,1) * t193 + Icges(7,4) * t192 + Icges(7,5) * t296;
t184 = Icges(7,5) * t301 + Icges(7,6) * t300 + Icges(7,3) * t349;
t186 = Icges(7,4) * t301 + Icges(7,2) * t300 + Icges(7,6) * t349;
t188 = Icges(7,1) * t301 + Icges(7,4) * t300 + Icges(7,5) * t349;
t29 = t121 * t349 + t123 * t300 + t125 * t301 + t184 * t296 + t186 * t192 + t188 * t193;
t364 = t373 * qJD(2);
t297 = qJD(3) * t351 - t364 * t470;
t303 = t350 * t392 - t373 * t390;
t435 = qJD(2) * t393;
t365 = -qJD(2) * t433 + t388 * t435;
t194 = -qJD(6) * t303 - t297 * t390 - t365 * t392;
t302 = -t350 * t390 - t373 * t392;
t195 = qJD(6) * t302 + t297 * t392 - t365 * t390;
t298 = -t364 * t471 - t374 * t418 + t386 * t405;
t122 = Icges(7,5) * t195 + Icges(7,6) * t194 + Icges(7,3) * t298;
t124 = Icges(7,4) * t195 + Icges(7,2) * t194 + Icges(7,6) * t298;
t126 = Icges(7,1) * t195 + Icges(7,4) * t194 + Icges(7,5) * t298;
t185 = Icges(7,5) * t303 + Icges(7,6) * t302 + Icges(7,3) * t351;
t187 = Icges(7,4) * t303 + Icges(7,2) * t302 + Icges(7,6) * t351;
t189 = Icges(7,1) * t303 + Icges(7,4) * t302 + Icges(7,5) * t351;
t30 = t122 * t349 + t124 * t300 + t126 * t301 + t185 * t296 + t187 * t192 + t189 * t193;
t436 = qJD(2) * t391;
t420 = t387 * t435;
t352 = qJD(3) * t376 + t420 * t470;
t421 = t387 * t436;
t263 = -qJD(6) * t355 - t352 * t390 - t392 * t421;
t264 = qJD(6) * t354 + t352 * t392 - t390 * t421;
t353 = t389 * t419 - t391 * t404 + t420 * t471;
t168 = Icges(7,5) * t264 + Icges(7,6) * t263 + Icges(7,3) * t353;
t169 = Icges(7,4) * t264 + Icges(7,2) * t263 + Icges(7,6) * t353;
t170 = Icges(7,1) * t264 + Icges(7,4) * t263 + Icges(7,5) * t353;
t48 = t168 * t349 + t169 * t300 + t170 * t301 + t192 * t260 + t193 * t261 + t259 * t296;
t89 = t184 * t349 + t186 * t300 + t188 * t301;
t90 = t185 * t349 + t187 * t300 + t189 * t301;
t3 = -t29 * t396 + t30 * t373 + t89 * t363 + t90 * t365 + (t115 * t436 - t393 * t48) * t387;
t196 = Icges(6,5) * t295 - Icges(6,6) * t296 - Icges(6,3) * t363;
t202 = Icges(6,4) * t295 - Icges(6,2) * t296 - Icges(6,6) * t363;
t208 = Icges(6,1) * t295 - Icges(6,4) * t296 - Icges(6,5) * t363;
t60 = t196 * t396 - t202 * t349 + t208 * t348 - t233 * t363 - t239 * t296 + t245 * t295;
t197 = Icges(6,5) * t297 - Icges(6,6) * t298 - Icges(6,3) * t365;
t203 = Icges(6,4) * t297 - Icges(6,2) * t298 - Icges(6,6) * t365;
t209 = Icges(6,1) * t297 - Icges(6,4) * t298 - Icges(6,5) * t365;
t61 = t197 * t396 - t203 * t349 + t209 * t348 - t234 * t363 - t240 * t296 + t246 * t295;
t198 = Icges(5,5) * t296 + Icges(5,6) * t363 + Icges(5,3) * t295;
t204 = Icges(5,4) * t296 + Icges(5,2) * t363 + Icges(5,6) * t295;
t210 = Icges(5,1) * t296 + Icges(5,4) * t363 + Icges(5,5) * t295;
t62 = t198 * t348 - t204 * t396 + t210 * t349 + t235 * t295 + t241 * t363 + t247 * t296;
t199 = Icges(5,5) * t298 + Icges(5,6) * t365 + Icges(5,3) * t297;
t205 = Icges(5,4) * t298 + Icges(5,2) * t365 + Icges(5,6) * t297;
t211 = Icges(5,1) * t298 + Icges(5,4) * t365 + Icges(5,5) * t297;
t63 = t199 * t348 - t205 * t396 + t211 * t349 + t236 * t295 + t242 * t363 + t248 * t296;
t200 = Icges(4,5) * t296 - Icges(4,6) * t295 + Icges(4,3) * t363;
t206 = Icges(4,4) * t296 - Icges(4,2) * t295 + Icges(4,6) * t363;
t212 = Icges(4,1) * t296 - Icges(4,4) * t295 + Icges(4,5) * t363;
t64 = -t200 * t396 - t206 * t348 + t212 * t349 + t237 * t363 - t243 * t295 + t249 * t296;
t201 = Icges(4,5) * t298 - Icges(4,6) * t297 + Icges(4,3) * t365;
t207 = Icges(4,4) * t298 - Icges(4,2) * t297 + Icges(4,6) * t365;
t213 = Icges(4,1) * t298 - Icges(4,4) * t297 + Icges(4,5) * t365;
t65 = -t201 * t396 - t207 * t348 + t213 * t349 + t238 * t363 - t244 * t295 + t250 * t296;
t265 = Icges(6,5) * t352 - Icges(6,6) * t353 - Icges(6,3) * t421;
t268 = Icges(6,4) * t352 - Icges(6,2) * t353 - Icges(6,6) * t421;
t271 = Icges(6,1) * t352 - Icges(6,4) * t353 - Icges(6,5) * t421;
t93 = t265 * t396 - t268 * t349 + t271 * t348 + t295 * t324 - t296 * t321 - t318 * t363;
t266 = Icges(5,5) * t353 + Icges(5,6) * t421 + Icges(5,3) * t352;
t269 = Icges(5,4) * t353 + Icges(5,2) * t421 + Icges(5,6) * t352;
t272 = Icges(5,1) * t353 + Icges(5,4) * t421 + Icges(5,5) * t352;
t94 = t266 * t348 - t269 * t396 + t272 * t349 + t295 * t319 + t296 * t325 + t322 * t363;
t267 = Icges(4,5) * t353 - Icges(4,6) * t352 + Icges(4,3) * t421;
t270 = Icges(4,4) * t353 - Icges(4,2) * t352 + Icges(4,6) * t421;
t273 = Icges(4,1) * t353 - Icges(4,4) * t352 + Icges(4,5) * t421;
t95 = -t267 * t396 - t270 * t348 + t273 * t349 - t295 * t323 + t296 * t326 + t320 * t363;
t487 = t3 + (-t60 - t62 - t64) * t396 + (t493 * t436 + (-t93 - t94 - t95) * t393) * t387 + (t61 + t63 + t65) * t373 + t490 * t365 + t491 * t363;
t116 = t259 * t351 + t260 * t302 + t261 * t303;
t31 = t121 * t351 + t123 * t302 + t125 * t303 + t184 * t298 + t186 * t194 + t188 * t195;
t32 = t122 * t351 + t124 * t302 + t126 * t303 + t185 * t298 + t187 * t194 + t189 * t195;
t49 = t168 * t351 + t169 * t302 + t170 * t303 + t194 * t260 + t195 * t261 + t259 * t298;
t91 = t184 * t351 + t186 * t302 + t188 * t303;
t92 = t185 * t351 + t187 * t302 + t189 * t303;
t4 = -t31 * t396 + t32 * t373 + t91 * t363 + t92 * t365 + (t116 * t436 - t393 * t49) * t387;
t66 = -t196 * t373 - t202 * t351 + t208 * t350 - t233 * t365 - t239 * t298 + t245 * t297;
t67 = -t197 * t373 - t203 * t351 + t209 * t350 - t234 * t365 - t240 * t298 + t246 * t297;
t68 = t198 * t350 + t204 * t373 + t210 * t351 + t235 * t297 + t241 * t365 + t247 * t298;
t69 = t199 * t350 + t205 * t373 + t211 * t351 + t236 * t297 + t242 * t365 + t248 * t298;
t70 = t200 * t373 - t206 * t350 + t212 * t351 + t237 * t365 - t243 * t297 + t249 * t298;
t71 = t201 * t373 - t207 * t350 + t213 * t351 + t238 * t365 - t244 * t297 + t250 * t298;
t96 = -t265 * t373 - t268 * t351 + t271 * t350 + t297 * t324 - t298 * t321 - t318 * t365;
t97 = t266 * t350 + t269 * t373 + t272 * t351 + t297 * t319 + t298 * t325 + t322 * t365;
t98 = t267 * t373 - t270 * t350 + t273 * t351 - t297 * t323 + t298 * t326 + t320 * t365;
t486 = t4 + (-t66 - t68 - t70) * t396 + (t492 * t436 + (-t96 - t97 - t98) * t393) * t387 + (t67 + t69 + t71) * t373 + t488 * t365 + t489 * t363;
t485 = 2 * m(4);
t484 = 2 * m(5);
t483 = 2 * m(6);
t482 = 2 * m(7);
t481 = t296 / 0.2e1;
t480 = t298 / 0.2e1;
t479 = t349 / 0.2e1;
t478 = t351 / 0.2e1;
t477 = t353 / 0.2e1;
t476 = t363 / 0.2e1;
t475 = t365 / 0.2e1;
t474 = t376 / 0.2e1;
t473 = t386 / 0.2e1;
t472 = -t388 / 0.2e1;
t469 = Icges(3,4) * t391;
t468 = Icges(3,4) * t393;
t127 = rSges(7,1) * t193 + rSges(7,2) * t192 + rSges(7,3) * t296;
t462 = pkin(5) * t295 + pkin(9) * t296 + t127;
t128 = rSges(7,1) * t195 + rSges(7,2) * t194 + rSges(7,3) * t298;
t461 = pkin(5) * t297 + pkin(9) * t298 + t128;
t171 = rSges(7,1) * t264 + rSges(7,2) * t263 + rSges(7,3) * t353;
t460 = pkin(5) * t352 + pkin(9) * t353 + t171;
t182 = pkin(3) * t296 + qJ(4) * t295 + qJD(4) * t348;
t285 = pkin(3) * t349 + qJ(4) * t348;
t459 = t373 * t182 + t365 * t285;
t183 = pkin(3) * t298 + qJ(4) * t297 + qJD(4) * t350;
t342 = -pkin(2) * t364 + pkin(8) * t365;
t310 = t389 * t342;
t458 = t389 * t183 + t310;
t341 = pkin(2) * t362 + pkin(8) * t363;
t457 = -t182 - t341;
t218 = rSges(5,1) * t298 + rSges(5,2) * t365 + rSges(5,3) * t297;
t456 = -t183 - t218;
t230 = pkin(4) * t298 - qJ(5) * t365 - qJD(5) * t373;
t455 = -t183 - t230;
t190 = rSges(7,1) * t301 + rSges(7,2) * t300 + rSges(7,3) * t349;
t454 = pkin(5) * t348 + pkin(9) * t349 + t190;
t191 = rSges(7,1) * t303 + rSges(7,2) * t302 + rSges(7,3) * t351;
t453 = pkin(5) * t350 + pkin(9) * t351 + t191;
t252 = rSges(5,1) * t349 - rSges(5,2) * t396 + rSges(5,3) * t348;
t452 = -t252 - t285;
t255 = rSges(5,1) * t351 + rSges(5,2) * t373 + rSges(5,3) * t350;
t286 = pkin(3) * t351 + qJ(4) * t350;
t451 = -t255 - t286;
t257 = pkin(3) * t353 + qJ(4) * t352 + qJD(4) * t375;
t275 = rSges(5,1) * t353 + rSges(5,2) * t421 + rSges(5,3) * t352;
t450 = -t257 - t275;
t309 = t353 * pkin(4) + (-qJ(5) * t436 + qJD(5) * t393) * t387;
t449 = -t257 - t309;
t258 = t373 * t285;
t305 = pkin(4) * t349 + qJ(5) * t396;
t448 = t373 * t305 + t258;
t262 = rSges(7,1) * t355 + rSges(7,2) * t354 + rSges(7,3) * t376;
t447 = pkin(5) * t375 + pkin(9) * t376 + t262;
t277 = t286 * t421;
t306 = pkin(4) * t351 - qJ(5) * t373;
t446 = t306 * t421 + t277;
t346 = pkin(3) * t376 + qJ(4) * t375;
t445 = t285 * t465 - t346 * t396;
t345 = pkin(2) * t374 + pkin(8) * t373;
t343 = t389 * t345;
t444 = t389 * t286 + t343;
t443 = -t285 - t305;
t442 = -t286 - t306;
t441 = t341 * t467 + t342 * t466;
t328 = t376 * rSges(5,1) - rSges(5,2) * t465 + t375 * rSges(5,3);
t440 = -t328 - t346;
t344 = pkin(2) * t372 - pkin(8) * t396;
t439 = t344 * t467 + t345 * t466;
t356 = t376 * pkin(4) + qJ(5) * t465;
t438 = -t346 - t356;
t437 = qJD(2) * t387;
t434 = m(6) / 0.2e1 + m(7) / 0.2e1;
t432 = t182 * t465 - t257 * t396 + t363 * t346;
t431 = t389 * t230 + t458;
t229 = pkin(4) * t296 - qJ(5) * t363 + qJD(5) * t396;
t430 = -t229 + t457;
t217 = rSges(6,1) * t297 - rSges(6,2) * t298 - rSges(6,3) * t365;
t429 = -t217 + t455;
t251 = rSges(6,1) * t348 - rSges(6,2) * t349 + rSges(6,3) * t396;
t428 = -t251 + t443;
t254 = rSges(6,1) * t350 - rSges(6,2) * t351 - rSges(6,3) * t373;
t427 = -t254 + t442;
t274 = rSges(6,1) * t352 - rSges(6,2) * t353 - rSges(6,3) * t421;
t426 = -t274 + t449;
t425 = t389 * t306 + t444;
t327 = t375 * rSges(6,1) - t376 * rSges(6,2) + rSges(6,3) * t465;
t424 = -t327 + t438;
t276 = rSges(4,1) * t353 - rSges(4,2) * t352 + rSges(4,3) * t421;
t370 = (pkin(2) * t393 + pkin(8) * t391) * t437;
t417 = (-t276 - t370) * t387;
t329 = t376 * rSges(4,1) - t375 * rSges(4,2) - rSges(4,3) * t465;
t377 = (pkin(2) * t391 - pkin(8) * t393) * t387;
t416 = (-t329 - t377) * t387;
t415 = m(5) / 0.2e1 + t434;
t414 = t455 - t461;
t413 = t449 - t460;
t412 = t373 * t229 + t365 * t305 + t459;
t411 = t182 * t467 + t183 * t466 + t441;
t410 = t443 - t454;
t409 = t442 - t453;
t408 = t438 - t447;
t407 = t285 * t467 + t286 * t466 + t439;
t406 = t305 * t465 - t356 * t396 + t445;
t403 = t387 * (-t370 + t450);
t402 = (-t377 + t440) * t387;
t401 = (-t370 + t426) * t387;
t400 = (-t377 + t424) * t387;
t399 = t229 * t467 + t230 * t466 + t411;
t398 = t229 * t465 - t309 * t396 + t363 * t356 + t432;
t397 = t305 * t467 + t306 * t466 + t407;
t395 = (-t370 + t413) * t387;
t394 = (-t377 + t408) * t387;
t369 = (rSges(3,1) * t393 - rSges(3,2) * t391) * t437;
t368 = (Icges(3,1) * t393 - t469) * t437;
t367 = (-Icges(3,2) * t391 + t468) * t437;
t366 = (Icges(3,5) * t393 - Icges(3,6) * t391) * t437;
t361 = t389 * rSges(3,3) + (rSges(3,1) * t391 + rSges(3,2) * t393) * t387;
t360 = Icges(3,5) * t389 + (Icges(3,1) * t391 + t468) * t387;
t359 = Icges(3,6) * t389 + (Icges(3,2) * t393 + t469) * t387;
t340 = -rSges(3,1) * t364 - rSges(3,2) * t365;
t339 = rSges(3,1) * t362 - rSges(3,2) * t363;
t337 = -Icges(3,1) * t364 - Icges(3,4) * t365;
t336 = Icges(3,1) * t362 - Icges(3,4) * t363;
t335 = -Icges(3,4) * t364 - Icges(3,2) * t365;
t334 = Icges(3,4) * t362 - Icges(3,2) * t363;
t333 = -Icges(3,5) * t364 - Icges(3,6) * t365;
t332 = Icges(3,5) * t362 - Icges(3,6) * t363;
t317 = rSges(3,1) * t374 - rSges(3,2) * t373 + rSges(3,3) * t467;
t316 = rSges(3,1) * t372 + rSges(3,2) * t396 - rSges(3,3) * t466;
t315 = Icges(3,1) * t374 - Icges(3,4) * t373 + Icges(3,5) * t467;
t314 = Icges(3,1) * t372 + Icges(3,4) * t396 - Icges(3,5) * t466;
t313 = Icges(3,4) * t374 - Icges(3,2) * t373 + Icges(3,6) * t467;
t312 = Icges(3,4) * t372 + Icges(3,2) * t396 - Icges(3,6) * t466;
t256 = rSges(4,1) * t351 - rSges(4,2) * t350 + rSges(4,3) * t373;
t253 = rSges(4,1) * t349 - rSges(4,2) * t348 - rSges(4,3) * t396;
t227 = (t339 * t386 + t340 * t388) * t387;
t219 = rSges(4,1) * t298 - rSges(4,2) * t297 + rSges(4,3) * t365;
t216 = rSges(4,1) * t296 - rSges(4,2) * t295 + rSges(4,3) * t363;
t215 = rSges(5,1) * t296 + rSges(5,2) * t363 + rSges(5,3) * t295;
t214 = rSges(6,1) * t295 - rSges(6,2) * t296 - rSges(6,3) * t363;
t181 = -t256 * t465 - t373 * t329;
t180 = t253 * t465 - t329 * t396;
t174 = -t320 * t465 - t375 * t323 + t376 * t326;
t173 = t375 * t319 - t322 * t465 + t376 * t325;
t172 = t318 * t465 - t376 * t321 + t375 * t324;
t167 = t253 * t373 + t256 * t396;
t166 = (-t253 - t344) * t389 + t388 * t416;
t165 = t256 * t389 + t386 * t416 + t343;
t157 = (t253 * t386 + t256 * t388) * t387 + t439;
t156 = t191 * t376 - t262 * t351;
t155 = -t190 * t376 + t262 * t349;
t154 = t373 * t440 + t451 * t465;
t153 = t252 * t465 - t328 * t396 + t445;
t152 = -t238 * t465 - t375 * t244 + t376 * t250;
t151 = -t237 * t465 - t375 * t243 + t376 * t249;
t150 = t375 * t236 - t242 * t465 + t376 * t248;
t149 = t375 * t235 - t241 * t465 + t376 * t247;
t148 = t234 * t465 - t376 * t240 + t375 * t246;
t147 = t233 * t465 - t376 * t239 + t375 * t245;
t146 = (-t216 - t341) * t389 + t388 * t417;
t145 = t219 * t389 + t386 * t417 + t310;
t143 = (-t344 + t452) * t389 + t388 * t402;
t142 = t255 * t389 + t386 * t402 + t444;
t141 = t259 * t376 + t260 * t354 + t261 * t355;
t120 = t190 * t351 - t191 * t349;
t119 = t252 * t373 - t396 * t451 + t258;
t118 = t373 * t424 + t427 * t465;
t117 = t251 * t465 - t327 * t396 + t406;
t114 = (t216 * t386 + t219 * t388) * t387 + t441;
t113 = -t373 * t276 - t365 * t329 + (-t219 * t393 + t256 * t436) * t387;
t112 = -t396 * t276 + t363 * t329 + (t216 * t393 - t253 * t436) * t387;
t111 = (-t344 + t428) * t389 + t388 * t400;
t110 = t254 * t389 + t386 * t400 + t425;
t109 = (t252 * t386 + t255 * t388) * t387 + t407;
t108 = -t375 * t270 + t376 * t273 - t352 * t323 + t353 * t326 + (-t267 * t393 + t320 * t436) * t387;
t107 = t375 * t266 + t376 * t272 + t352 * t319 + t353 * t325 + (-t269 * t393 + t322 * t436) * t387;
t106 = -t376 * t268 + t375 * t271 - t353 * t321 + t352 * t324 + (t265 * t393 - t318 * t436) * t387;
t105 = t251 * t373 - t396 * t427 + t448;
t104 = t185 * t376 + t187 * t354 + t189 * t355;
t103 = t184 * t376 + t186 * t354 + t188 * t355;
t102 = t216 * t373 + t219 * t396 + t253 * t365 - t256 * t363;
t101 = (t251 * t386 + t254 * t388) * t387 + t397;
t100 = (-t215 + t457) * t389 + t388 * t403;
t99 = t218 * t389 + t386 * t403 + t458;
t88 = t373 * t408 + t409 * t465;
t87 = -t396 * t447 + t454 * t465 + t406;
t86 = (-t344 + t410) * t389 + t388 * t394;
t85 = t386 * t394 + t389 * t453 + t425;
t84 = (-t214 + t430) * t389 + t388 * t401;
t83 = t217 * t389 + t386 * t401 + t431;
t82 = (t215 * t386 + t218 * t388) * t387 + t411;
t81 = t277 + t450 * t373 + t440 * t365 + (t255 * t436 + t393 * t456) * t387;
t80 = -t396 * t275 + t363 * t328 + (t215 * t393 + t436 * t452) * t387 + t432;
t79 = -t375 * t207 + t376 * t213 - t352 * t244 + t353 * t250 + (-t201 * t393 + t238 * t436) * t387;
t78 = -t375 * t206 + t376 * t212 - t352 * t243 + t353 * t249 + (-t200 * t393 + t237 * t436) * t387;
t77 = t375 * t199 + t376 * t211 + t352 * t236 + t353 * t248 + (-t205 * t393 + t242 * t436) * t387;
t76 = t375 * t198 + t376 * t210 + t352 * t235 + t353 * t247 + (-t204 * t393 + t241 * t436) * t387;
t75 = -t376 * t203 + t375 * t209 - t353 * t240 + t352 * t246 + (t197 * t393 - t234 * t436) * t387;
t74 = -t376 * t202 + t375 * t208 - t353 * t239 + t352 * t245 + (t196 * t393 - t233 * t436) * t387;
t73 = t373 * t454 - t396 * t409 + t448;
t72 = (t386 * t454 + t388 * t453) * t387 + t397;
t59 = t128 * t376 - t171 * t351 + t191 * t353 - t262 * t298;
t58 = -t127 * t376 + t171 * t349 - t190 * t353 + t262 * t296;
t57 = (t214 * t386 + t217 * t388) * t387 + t399;
t56 = t215 * t373 + t252 * t365 + t363 * t451 - t396 * t456 + t459;
t55 = t426 * t373 + t424 * t365 + (t254 * t436 + t393 * t429) * t387 + t446;
t54 = -t396 * t274 + t363 * t327 + (t214 * t393 + t428 * t436) * t387 + t398;
t53 = t168 * t376 + t169 * t354 + t170 * t355 + t259 * t353 + t260 * t263 + t261 * t264;
t52 = t127 * t351 - t128 * t349 + t190 * t298 - t191 * t296;
t51 = (t430 - t462) * t389 + t388 * t395;
t50 = t386 * t395 + t389 * t461 + t431;
t47 = t141 * t389 + (-t103 * t388 + t104 * t386) * t387;
t46 = t214 * t373 + t251 * t365 + t363 * t427 - t396 * t429 + t412;
t45 = -t103 * t396 + t104 * t373 - t141 * t465;
t44 = t103 * t349 + t104 * t351 + t141 * t376;
t43 = t116 * t389 + (t386 * t92 - t388 * t91) * t387;
t42 = t115 * t389 + (t386 * t90 - t388 * t89) * t387;
t41 = (t386 * t462 + t388 * t461) * t387 + t399;
t40 = -t116 * t465 + t92 * t373 - t396 * t91;
t39 = -t115 * t465 + t90 * t373 - t396 * t89;
t38 = t116 * t376 + t349 * t91 + t351 * t92;
t37 = t115 * t376 + t349 * t89 + t351 * t90;
t36 = t122 * t376 + t124 * t354 + t126 * t355 + t185 * t353 + t187 * t263 + t189 * t264;
t35 = t121 * t376 + t123 * t354 + t125 * t355 + t184 * t353 + t186 * t263 + t188 * t264;
t34 = t413 * t373 + t408 * t365 + (t393 * t414 + t436 * t453) * t387 + t446;
t33 = -t460 * t396 + t447 * t363 + (t393 * t462 + t410 * t436) * t387 + t398;
t28 = t108 * t389 + (t386 * t79 - t388 * t78) * t387;
t27 = t107 * t389 + (t386 * t77 - t388 * t76) * t387;
t26 = t106 * t389 + (t386 * t75 - t388 * t74) * t387;
t25 = t389 * t98 + (t386 * t71 - t388 * t70) * t387;
t24 = t389 * t97 + (t386 * t69 - t388 * t68) * t387;
t23 = t389 * t96 + (t386 * t67 - t388 * t66) * t387;
t22 = t389 * t95 + (t386 * t65 - t388 * t64) * t387;
t21 = t389 * t94 + (t386 * t63 - t388 * t62) * t387;
t20 = t389 * t93 + (t386 * t61 - t388 * t60) * t387;
t19 = t363 * t409 + t365 * t454 + t373 * t462 - t396 * t414 + t412;
t18 = t151 * t363 + t152 * t365 - t78 * t396 + t79 * t373 + (-t108 * t393 + t174 * t436) * t387;
t17 = t149 * t363 + t150 * t365 - t76 * t396 + t77 * t373 + (-t107 * t393 + t173 * t436) * t387;
t16 = t147 * t363 + t148 * t365 - t74 * t396 + t75 * t373 + (-t106 * t393 + t172 * t436) * t387;
t9 = t389 * t53 + (-t35 * t388 + t36 * t386) * t387;
t8 = t389 * t49 + (-t31 * t388 + t32 * t386) * t387;
t7 = t389 * t48 + (-t29 * t388 + t30 * t386) * t387;
t6 = t103 * t363 + t104 * t365 - t35 * t396 + t36 * t373 + (t141 * t436 - t393 * t53) * t387;
t5 = t103 * t296 + t104 * t298 + t141 * t353 + t349 * t35 + t351 * t36 + t376 * t53;
t2 = t116 * t353 + t296 * t91 + t298 * t92 + t31 * t349 + t32 * t351 + t376 * t49;
t1 = t115 * t353 + t29 * t349 + t296 * t89 + t298 * t90 + t30 * t351 + t376 * t48;
t10 = [0; m(3) * t227 + m(4) * t114 + m(5) * t82 + m(6) * t57 + m(7) * t41; t8 * t467 - t7 * t466 - t20 * t466 - t22 * t466 + t25 * t467 + t24 * t467 - t21 * t466 + t23 * t467 + ((-t313 * t365 - t315 * t364 + t333 * t467 - t335 * t373 + t337 * t374) * t467 - (-t312 * t365 - t314 * t364 + t332 * t467 - t334 * t373 + t336 * t374) * t466 + (-t359 * t365 - t360 * t364 + t366 * t467 - t367 * t373 + t368 * t374) * t389) * t467 - ((-t313 * t363 + t315 * t362 - t333 * t466 + t335 * t396 + t337 * t372) * t467 - (-t312 * t363 + t314 * t362 - t332 * t466 + t334 * t396 + t336 * t372) * t466 + (-t359 * t363 + t360 * t362 - t366 * t466 + t367 * t396 + t368 * t372) * t389) * t466 + (t41 * t72 + t50 * t85 + t51 * t86) * t482 + t389 * t9 + (t101 * t57 + t110 * t83 + t111 * t84) * t483 + (t100 * t143 + t109 * t82 + t142 * t99) * t484 + (t114 * t157 + t145 * t165 + t146 * t166) * t485 + t389 * t28 + t389 * t27 + t389 * t26 + t389 * (t389 ^ 2 * t366 + (((t335 * t393 + t337 * t391) * t386 - (t334 * t393 + t336 * t391) * t388 + ((-t313 * t391 + t315 * t393) * t386 - (-t312 * t391 + t314 * t393) * t388) * qJD(2)) * t387 + (-t332 * t388 + t333 * t386 + t367 * t393 + t368 * t391 + (-t359 * t391 + t360 * t393) * qJD(2)) * t389) * t387) + 0.2e1 * m(3) * ((-t316 * t389 - t361 * t466) * (-t339 * t389 - t369 * t466) + (t317 * t389 - t361 * t467) * (t340 * t389 - t369 * t467) + (t316 * t386 + t317 * t388) * t387 * t227); m(4) * t102 + m(5) * t56 + m(6) * t46 + m(7) * t19; (t25 / 0.2e1 + t24 / 0.2e1 + t23 / 0.2e1 + t8 / 0.2e1) * t373 - (t21 / 0.2e1 + t22 / 0.2e1 + t20 / 0.2e1 + t7 / 0.2e1) * t396 + m(4) * (t102 * t157 + t112 * t166 + t113 * t165 + t114 * t167 + t145 * t181 + t146 * t180) + m(5) * (t100 * t153 + t109 * t56 + t119 * t82 + t142 * t81 + t143 * t80 + t154 * t99) + m(6) * (t101 * t46 + t105 * t57 + t110 * t55 + t111 * t54 + t117 * t84 + t118 * t83) + m(7) * (t19 * t72 + t33 * t86 + t34 * t85 + t41 * t73 + t50 * t88 + t51 * t87) + (t18 / 0.2e1 + t17 / 0.2e1 + t16 / 0.2e1 + t6 / 0.2e1 + (t164 / 0.2e1 + t162 / 0.2e1 + t163 / 0.2e1) * t365 + (t159 / 0.2e1 + t160 / 0.2e1 + t161 / 0.2e1) * t363) * t389 + (-t466 * t491 + t467 * t490 + t42) * t476 + (-t466 * t489 + t467 * t488 + t43) * t475 + ((-t26 / 0.2e1 - t27 / 0.2e1 - t28 / 0.2e1 - t9 / 0.2e1) * t393 + (t47 / 0.2e1 + (-t147 / 0.2e1 - t149 / 0.2e1 - t151 / 0.2e1) * t466 + (t148 / 0.2e1 + t150 / 0.2e1 + t152 / 0.2e1) * t467 + (t172 / 0.2e1 + t173 / 0.2e1 + t174 / 0.2e1) * t389) * t436 + t486 * t473 + t487 * t472) * t387; (-t16 - t17 - t18 - t6) * t465 + t486 * t373 - t487 * t396 + (t488 * t373 - t489 * t396 - t465 * t492 + t40) * t365 + (t490 * t373 - t491 * t396 - t465 * t493 + t39) * t363 + (t45 + (-t172 - t173 - t174) * t465 + (t148 + t150 + t152) * t373 - (t147 + t149 + t151) * t396) * t421 + (t102 * t167 + t112 * t180 + t113 * t181) * t485 + (t119 * t56 + t153 * t80 + t154 * t81) * t484 + (t105 * t46 + t117 * t54 + t118 * t55) * t483 + (t19 * t73 + t33 * t87 + t34 * t88) * t482; 0.2e1 * t415 * t352; m(7) * (t295 * t85 + t297 * t86 + t348 * t50 + t350 * t51 + t352 * t72 + t375 * t41) + m(6) * (t101 * t352 + t110 * t295 + t111 * t297 + t348 * t83 + t350 * t84 + t375 * t57) + m(5) * (t100 * t350 + t109 * t352 + t142 * t295 + t143 * t297 + t348 * t99 + t375 * t82); m(7) * (t19 * t375 + t295 * t88 + t297 * t87 + t33 * t350 + t34 * t348 + t352 * t73) + m(6) * (t105 * t352 + t117 * t297 + t118 * t295 + t348 * t55 + t350 * t54 + t375 * t46) + m(5) * (t119 * t352 + t153 * t297 + t154 * t295 + t348 * t81 + t350 * t80 + t375 * t56); 0.4e1 * t415 * (t295 * t348 + t297 * t350 + t352 * t375); (-m(6) - m(7)) * t421; m(7) * (-t363 * t85 - t365 * t86 + t396 * t50 - t373 * t51 + (t393 * t41 - t436 * t72) * t387) + m(6) * (-t363 * t110 - t365 * t111 + t396 * t83 - t373 * t84 + (-t101 * t436 + t393 * t57) * t387); m(7) * (-t373 * t33 + t396 * t34 - t363 * t88 - t365 * t87 + (t19 * t393 - t436 * t73) * t387) + m(6) * (-t365 * t117 - t363 * t118 + t396 * t55 - t373 * t54 + (-t105 * t436 + t393 * t46) * t387); 0.2e1 * t434 * (t396 * t295 - t373 * t297 - t363 * t348 - t365 * t350 + (t352 * t393 - t375 * t436) * t387); 0.4e1 * t434 * (-t387 ^ 2 * t391 * t435 - t363 * t396 + t373 * t365); m(7) * t52; t43 * t480 + t8 * t478 + t42 * t481 + t7 * t479 + m(7) * (t120 * t41 + t155 * t51 + t156 * t50 + t52 * t72 + t58 * t86 + t59 * t85) + t47 * t477 + t9 * t474 + t389 * t5 / 0.2e1 + (t1 * t472 + t2 * t473) * t387; m(7) * (t120 * t19 + t155 * t33 + t156 * t34 + t52 * t73 + t58 * t87 + t59 * t88) + t45 * t477 + t6 * t474 + t38 * t475 + t373 * t2 / 0.2e1 + t40 * t480 + t4 * t478 + t37 * t476 - t396 * t1 / 0.2e1 + t39 * t481 + t3 * t479 + (t44 * t436 / 0.2e1 - t393 * t5 / 0.2e1) * t387; m(7) * (t120 * t352 + t155 * t297 + t156 * t295 + t348 * t59 + t350 * t58 + t375 * t52); m(7) * (-t155 * t365 - t156 * t363 + t59 * t396 - t58 * t373 + (-t120 * t436 + t393 * t52) * t387); t298 * t38 + t351 * t2 + t296 * t37 + t349 * t1 + t353 * t44 + t376 * t5 + (t120 * t52 + t155 * t58 + t156 * t59) * t482;];
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [t10(1) t10(2) t10(4) t10(7) t10(11) t10(16); t10(2) t10(3) t10(5) t10(8) t10(12) t10(17); t10(4) t10(5) t10(6) t10(9) t10(13) t10(18); t10(7) t10(8) t10(9) t10(10) t10(14) t10(19); t10(11) t10(12) t10(13) t10(14) t10(15) t10(20); t10(16) t10(17) t10(18) t10(19) t10(20) t10(21);];
Mq  = res;
