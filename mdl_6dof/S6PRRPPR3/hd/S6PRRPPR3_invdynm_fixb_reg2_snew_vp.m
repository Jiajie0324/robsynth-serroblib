% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRPPR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 03:01
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRPPR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR3_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR3_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPPR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPPR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPPR3_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 03:01:07
% EndTime: 2019-05-05 03:01:37
% DurationCPUTime: 31.96s
% Computational Cost: add. (64937->861), mult. (134007->1043), div. (0->0), fcn. (79367->10), ass. (0->544)
t1322 = sin(qJ(3));
t1309 = t1322 ^ 2;
t1327 = qJD(2) ^ 2;
t1465 = t1309 * t1327;
t1524 = qJD(3) ^ 2;
t1283 = t1465 + t1524;
t1325 = cos(qJ(3));
t1544 = t1325 * t1327;
t1289 = t1322 * t1544;
t1279 = qJDD(3) - t1289;
t1472 = t1279 * t1322;
t1222 = t1283 * t1325 + t1472;
t1315 = sin(pkin(6));
t1317 = cos(pkin(6));
t1455 = t1325 * t1279;
t1229 = -t1283 * t1322 + t1455;
t1489 = qJD(3) * t1325;
t1298 = qJD(2) * t1489;
t1442 = t1322 * qJDD(2);
t1265 = 0.2e1 * t1298 + t1442;
t1323 = sin(qJ(2));
t1326 = cos(qJ(2));
t1379 = t1229 * t1323 + t1265 * t1326;
t1110 = t1317 * t1222 + t1315 * t1379;
t1114 = -t1315 * t1222 + t1317 * t1379;
t1363 = (t1110 * t1315 + t1114 * t1317) * pkin(7);
t1172 = t1229 * t1326 - t1265 * t1323;
t1314 = sin(pkin(10));
t1316 = cos(pkin(10));
t1510 = qJ(1) * (t1114 * t1316 + t1172 * t1314);
t1054 = qJ(1) * (t1114 * t1314 - t1172 * t1316);
t1590 = pkin(1) * t1110;
t1589 = pkin(1) * t1114;
t1278 = qJDD(3) + t1289;
t1256 = t1325 * t1278;
t1310 = t1325 ^ 2;
t1464 = t1310 * t1327;
t1285 = t1464 + t1524;
t1220 = -t1285 * t1322 + t1256;
t1473 = t1278 * t1322;
t1224 = t1285 * t1325 + t1473;
t1461 = t1322 * qJD(2);
t1297 = qJD(3) * t1461;
t1441 = t1325 * qJDD(2);
t1268 = -0.2e1 * t1297 + t1441;
t1381 = t1224 * t1323 - t1268 * t1326;
t1108 = -t1317 * t1220 + t1315 * t1381;
t1112 = t1315 * t1220 + t1317 * t1381;
t1364 = (t1108 * t1315 + t1112 * t1317) * pkin(7);
t1170 = t1224 * t1326 + t1268 * t1323;
t1511 = qJ(1) * (t1112 * t1316 + t1170 * t1314);
t1053 = qJ(1) * (t1112 * t1314 - t1170 * t1316);
t1585 = pkin(1) * t1108;
t1584 = pkin(1) * t1112;
t1479 = t1268 * t1322;
t1481 = t1265 * t1325;
t1201 = t1479 + t1481;
t1477 = t1268 * t1325;
t1483 = t1265 * t1322;
t1204 = -t1477 + t1483;
t1275 = (t1309 - t1310) * t1327;
t1382 = t1204 * t1323 + t1275 * t1326;
t1099 = t1315 * t1201 + t1317 * t1382;
t1161 = t1204 * t1326 - t1275 * t1323;
t1042 = t1099 * t1314 - t1161 * t1316;
t1583 = t1099 * t1316 + t1161 * t1314;
t1286 = t1464 - t1524;
t1218 = t1286 * t1322 + t1455;
t1226 = -t1286 * t1325 + t1472;
t1360 = t1226 * t1323 + t1326 * t1441;
t1130 = t1315 * t1218 + t1317 * t1360;
t1185 = t1226 * t1326 - t1323 * t1441;
t1069 = t1130 * t1314 - t1185 * t1316;
t1580 = t1130 * t1316 + t1185 * t1314;
t1127 = -t1317 * t1218 + t1315 * t1360;
t1097 = -t1317 * t1201 + t1315 * t1382;
t1520 = pkin(2) * t1220;
t1515 = pkin(8) * t1220;
t1444 = t1309 + t1310;
t1271 = t1444 * qJDD(2);
t1274 = t1444 * t1327;
t1375 = t1271 * t1323 + t1274 * t1326;
t1541 = t1375 * t1317;
t1542 = t1375 * t1315;
t1362 = (t1315 * t1542 + t1317 * t1541) * pkin(7);
t1205 = t1271 * t1326 - t1274 * t1323;
t1509 = qJ(1) * (t1205 * t1314 + t1316 * t1541);
t1125 = qJ(1) * (t1205 * t1316 - t1314 * t1541);
t1447 = pkin(2) * t1265 + pkin(8) * t1229;
t1566 = -2 * qJD(4);
t1565 = pkin(1) * t1541;
t1564 = pkin(1) * t1542;
t1563 = pkin(2) * t1222;
t1562 = pkin(4) * t1278;
t1514 = pkin(8) * t1222;
t1321 = sin(qJ(6));
t1324 = cos(qJ(6));
t1491 = qJD(2) * t1325;
t1259 = -qJD(3) * t1324 + t1321 * t1491;
t1260 = qJD(3) * t1321 + t1324 * t1491;
t1210 = t1259 * t1260;
t1266 = t1298 + t1442;
t1251 = qJDD(6) + t1266;
t1539 = -t1210 + t1251;
t1557 = t1321 * t1539;
t1556 = t1324 * t1539;
t1424 = g(1) * t1314 - t1316 * g(2);
t1512 = g(3) - qJDD(1);
t1236 = t1315 * t1424 + t1317 * t1512;
t1459 = t1322 * t1236;
t1417 = t1524 * pkin(3) + t1459;
t1487 = qJDD(3) * qJ(4);
t1347 = qJD(3) * t1566 + t1417 - t1487;
t1276 = g(1) * t1316 + g(2) * t1314;
t1552 = -t1315 * t1512 + t1317 * t1424;
t1181 = -t1326 * t1276 + t1323 * t1552;
t1169 = -t1327 * pkin(2) + qJDD(2) * pkin(8) + t1181;
t1409 = -pkin(3) * t1325 - qJ(4) * t1322;
t1263 = t1409 * qJD(2);
t1418 = qJD(2) * t1263 + t1169;
t1083 = t1325 * t1418 - t1347;
t1538 = pkin(3) * t1283 + qJ(4) * t1279;
t1555 = t1083 + t1538;
t1231 = t1325 * t1236;
t1413 = qJDD(3) * pkin(3) + t1524 * qJ(4) - qJDD(4) - t1231;
t1086 = t1322 * t1418 - t1413;
t1504 = qJ(4) * t1285;
t1554 = pkin(3) * t1278 - t1086 - t1504;
t1553 = t1266 + t1298;
t1448 = pkin(2) * t1268 - pkin(8) * t1224;
t1548 = pkin(3) * (-t1268 + t1297);
t1267 = -t1297 + t1441;
t1436 = qJD(4) * t1461;
t1295 = 0.2e1 * t1436;
t1407 = t1323 * t1276 + t1326 * t1552;
t1358 = qJDD(2) * pkin(2) + t1327 * pkin(8) + t1407;
t1339 = t1267 * pkin(3) + qJ(4) * t1553 + t1358;
t1277 = -qJD(3) * pkin(4) - qJ(5) * t1461;
t1535 = t1277 * t1461 + qJDD(5);
t1335 = -t1339 - t1535;
t1437 = qJ(5) * t1464;
t1492 = qJD(2) * qJD(3);
t1521 = pkin(4) + pkin(9);
t1014 = t1266 * pkin(5) + (pkin(5) * t1325 + (-pkin(3) - pkin(9)) * t1322) * t1492 + t1295 + t1521 * t1267 - t1437 - t1335;
t1460 = t1322 * t1169;
t1338 = -t1266 * qJ(5) - t1413 + t1460 - t1562;
t1412 = pkin(5) * t1322 + pkin(9) * t1325;
t1438 = qJ(5) * t1489;
t1453 = -(2 * qJD(5)) + t1263;
t1029 = -t1524 * pkin(5) - qJDD(3) * pkin(9) + (t1438 + (-qJD(2) * t1412 + t1453) * t1322) * qJD(2) + t1338;
t976 = -t1324 * t1014 + t1321 * t1029;
t977 = t1014 * t1321 + t1029 * t1324;
t924 = t1321 * t976 + t1324 * t977;
t1547 = t1321 * t977 - t1324 * t976;
t1546 = t1314 * t1512;
t1545 = t1316 * t1512;
t1189 = qJD(6) * t1259 - t1321 * qJDD(3) - t1267 * t1324;
t1290 = qJD(6) + t1461;
t1238 = t1290 * t1259;
t1540 = t1189 + t1238;
t1446 = pkin(2) * t1274 + pkin(8) * t1271;
t1537 = -pkin(4) * t1464 - t1267 * qJ(5);
t1336 = ((2 * qJD(4)) + t1277) * qJD(3) - t1417 + t1537;
t1398 = qJD(2) * t1453 + t1169;
t1332 = t1325 * t1398 + t1336;
t1028 = -t1412 * t1544 - t1524 * pkin(9) + (pkin(5) + qJ(4)) * qJDD(3) + t1332;
t1495 = pkin(5) * t1028 - pkin(9) * t924;
t1522 = pkin(3) + pkin(4);
t1534 = qJ(4) * t1028 - t1522 * t924 + t1495;
t1047 = t1332 + t1487;
t1048 = (t1322 * t1453 + t1438) * qJD(2) + t1338;
t1533 = qJ(4) * t1047 - t1048 * t1522;
t1372 = t1324 * qJDD(3) - t1321 * t1267;
t1157 = (qJD(6) - t1290) * t1260 - t1372;
t1159 = t1189 - t1238;
t1064 = t1157 * t1324 + t1321 * t1159;
t1250 = t1259 ^ 2;
t1523 = t1260 ^ 2;
t1177 = -t1250 - t1523;
t1371 = -pkin(5) * t1177 + pkin(9) * t1064 + t924;
t1532 = qJ(4) * t1177 - t1064 * t1522 - t1371;
t1287 = t1290 ^ 2;
t1193 = -t1287 - t1250;
t1105 = t1324 * t1193 - t1557;
t1155 = (-qJD(6) - t1290) * t1260 + t1372;
t1457 = t1324 * t1028;
t1432 = pkin(5) * t1155 - pkin(9) * t1105 + t1457;
t1531 = qJ(4) * t1155 - t1105 * t1522 + t1432;
t1430 = -t1287 - t1523;
t1179 = t1210 + t1251;
t1456 = t1324 * t1179;
t1122 = -t1321 * t1430 - t1456;
t1023 = t1321 * t1028;
t1433 = -pkin(5) * t1540 + pkin(9) * t1122 + t1023;
t1530 = qJ(4) * t1540 - t1122 * t1522 - t1433;
t1529 = -t1316 * t1276 - t1314 * t1424;
t1528 = -t1278 * t1522 + t1504;
t1527 = -t1314 * t1276 + t1316 * t1424;
t1440 = 0.2e1 * qJD(5) * qJD(2);
t1526 = -qJD(3) * t1277 + t1325 * t1440 - t1537;
t1525 = (t1267 + t1268) * pkin(4) - qJ(5) * (-t1285 + t1464);
t1518 = pkin(4) * t1283;
t1517 = pkin(7) * t1315;
t1516 = pkin(7) * t1317;
t1513 = t1267 * pkin(4);
t1507 = qJ(4) * t1265;
t1506 = qJ(4) * t1268;
t1505 = qJ(4) * t1274;
t1503 = qJ(5) * t1028;
t1502 = qJ(5) * t1047;
t1501 = qJ(5) * t1048;
t1500 = qJ(5) * t1278;
t1499 = qJ(5) * t1279;
t1494 = pkin(3) + t1521;
t1493 = qJ(5) * qJDD(2);
t1123 = t1231 + t1460;
t1124 = t1325 * t1169 - t1459;
t1032 = t1123 * t1325 - t1124 * t1322;
t1486 = t1032 * t1323;
t1485 = t1358 * t1322;
t1484 = t1358 * t1325;
t1468 = t1290 * t1260;
t1467 = t1290 * t1321;
t1466 = t1290 * t1324;
t1462 = t1321 * t1179;
t1458 = t1323 * t1236;
t1454 = t1326 * t1236;
t1451 = -t1170 * t1517 - t1584;
t1450 = t1172 * t1517 + t1589;
t1449 = t1205 * t1517 + t1565;
t1443 = t1315 * qJDD(2);
t1439 = t1287 - t1523;
t1435 = t1322 * t1210;
t1434 = t1325 * t1210;
t1104 = t1321 * t1193 + t1556;
t1431 = -pkin(5) * t1104 + t976;
t1427 = -t1170 * t1516 + t1585;
t1426 = t1172 * t1516 - t1590;
t1425 = t1205 * t1516 - t1564;
t922 = pkin(5) * t1547;
t1423 = -qJ(5) * t924 + t922;
t1420 = -qJ(5) * t1540 - t1457;
t1062 = t1157 * t1321 - t1159 * t1324;
t1060 = pkin(5) * t1062;
t1419 = -qJ(5) * t1064 + t1060;
t1033 = t1123 * t1322 + t1325 * t1124;
t1415 = t1323 * t1289;
t1414 = t1326 * t1289;
t1410 = -pkin(3) * t1086 + qJ(4) * t1083;
t1272 = qJDD(2) * t1326 - t1323 * t1327;
t1405 = -pkin(7) * t1272 - t1458;
t1374 = qJDD(2) * t1323 + t1326 * t1327;
t1404 = -pkin(7) * t1374 + t1454;
t911 = t1028 * t1325 + t1322 * t924;
t1403 = t1323 * t911 + t1326 * t1547;
t1402 = -qJ(5) * t1155 - t1023;
t1039 = -t1555 - t1563;
t1011 = t1039 - t1518 + t1526;
t1337 = t1295 + t1339;
t1334 = -pkin(3) * t1297 + t1337;
t1333 = t1334 + t1535;
t1328 = (t1283 - t1464) * qJ(5) + t1333 + t1513;
t1038 = t1328 + t1507;
t1182 = t1265 * t1522 - t1499;
t997 = t1038 * t1325 - t1182 * t1322 - t1514;
t1401 = t1011 * t1326 + t1323 * t997;
t1091 = (pkin(3) * qJD(3) + t1566) * t1461 - t1339;
t1057 = t1091 + t1437 - t1513 - t1535;
t983 = t1047 * t1325 + t1048 * t1322;
t1400 = -t1057 * t1326 + t1323 * t983;
t1300 = qJ(4) * t1441;
t1262 = pkin(3) * t1442 - t1300;
t1075 = pkin(3) * t1274 + t1083;
t1076 = t1086 + t1505;
t996 = -t1075 * t1322 + t1076 * t1325;
t1399 = t1262 * t1326 + t1323 * t996;
t1006 = t1083 * t1325 + t1086 * t1322;
t1397 = t1006 * t1323 - t1091 * t1326;
t1017 = t1064 * t1322 + t1177 * t1325;
t1396 = t1017 * t1323 + t1062 * t1326;
t1395 = t1033 * t1323 + t1326 * t1358;
t1063 = -t1324 * t1155 - t1321 * t1540;
t1209 = -t1250 + t1523;
t1035 = t1063 * t1322 + t1209 * t1325;
t1061 = -t1321 * t1155 + t1324 * t1540;
t1394 = t1035 * t1323 + t1061 * t1326;
t1078 = t1337 - t1548;
t1036 = qJ(4) * t1477 - t1078 * t1322 - t1515;
t1040 = -t1520 - t1554;
t1393 = t1036 * t1323 + t1040 * t1326;
t1077 = t1334 + t1507;
t1037 = -pkin(3) * t1483 + t1077 * t1325 - t1514;
t1392 = t1037 * t1323 + t1039 * t1326;
t1044 = t1105 * t1322 + t1155 * t1325;
t1391 = t1044 * t1323 + t1104 * t1326;
t1046 = t1122 * t1322 + t1325 * t1540;
t1121 = t1324 * t1430 - t1462;
t1390 = t1046 * t1323 + t1121 * t1326;
t1235 = t1250 - t1287;
t1140 = t1235 * t1324 - t1462;
t1051 = t1140 * t1322 + t1157 * t1325;
t1138 = t1235 * t1321 + t1456;
t1389 = t1051 * t1323 + t1138 * t1326;
t1139 = -t1321 * t1439 + t1556;
t1052 = t1139 * t1322 + t1159 * t1325;
t1137 = t1324 * t1439 + t1557;
t1388 = t1052 * t1323 + t1137 * t1326;
t1084 = t1123 - t1520;
t1119 = -t1485 - t1515;
t1387 = t1084 * t1326 + t1119 * t1323;
t1343 = qJD(6) * t1260 - t1372;
t1146 = t1259 * t1466 + t1321 * t1343;
t1089 = -t1146 * t1322 - t1434;
t1145 = t1259 * t1467 - t1324 * t1343;
t1386 = t1089 * t1323 - t1145 * t1326;
t1148 = t1189 * t1324 + t1260 * t1467;
t1090 = t1148 * t1322 + t1434;
t1147 = t1189 * t1321 - t1260 * t1466;
t1385 = t1090 * t1323 + t1147 * t1326;
t1167 = (t1259 * t1324 - t1260 * t1321) * t1290;
t1142 = t1167 * t1322 + t1251 * t1325;
t1166 = (t1259 * t1321 + t1260 * t1324) * t1290;
t1384 = t1142 * t1323 + t1166 * t1326;
t1100 = -t1181 * t1323 - t1326 * t1407;
t1101 = t1181 * t1326 - t1323 * t1407;
t1243 = t1374 * t1317;
t1377 = t1243 * t1316 + t1272 * t1314;
t1376 = t1243 * t1314 - t1272 * t1316;
t1255 = t1444 * t1492;
t1373 = -qJDD(3) * t1326 + t1255 * t1323;
t1368 = -qJ(5) * t1105 - t1431;
t1367 = -qJ(5) * t1177 + t1547;
t1365 = -pkin(5) * t1121 + t977;
t1284 = t1465 - t1524;
t1228 = t1284 * t1322 + t1256;
t1359 = t1228 * t1323 - t1326 * t1442;
t891 = t1494 * t1547 - t1503;
t894 = qJ(4) * t1547 + t1423;
t910 = t1028 * t1322 - t1325 * t924;
t877 = -pkin(8) * t910 - t1322 * t891 + t1325 * t894;
t885 = -pkin(2) * t910 - t1534;
t898 = -t1323 * t1547 + t1326 * t911;
t1357 = pkin(7) * t898 + t1323 * t877 + t1326 * t885;
t1016 = -t1064 * t1325 + t1177 * t1322;
t907 = t1062 * t1494 + t1367;
t965 = qJ(4) * t1062 + t1419;
t897 = -pkin(8) * t1016 - t1322 * t907 + t1325 * t965;
t899 = -pkin(2) * t1016 - t1532;
t981 = t1017 * t1326 - t1062 * t1323;
t1356 = pkin(7) * t981 + t1323 * t897 + t1326 * t899;
t1043 = -t1105 * t1325 + t1155 * t1322;
t933 = qJ(4) * t1104 + t1368;
t941 = t1104 * t1494 + t1402;
t902 = -pkin(8) * t1043 - t1322 * t941 + t1325 * t933;
t925 = -pkin(2) * t1043 - t1531;
t995 = t1044 * t1326 - t1104 * t1323;
t1355 = pkin(7) * t995 + t1323 * t902 + t1326 * t925;
t1045 = -t1122 * t1325 + t1322 * t1540;
t1340 = -qJ(5) * t1122 - t1365;
t936 = qJ(4) * t1121 + t1340;
t945 = t1121 * t1494 + t1420;
t903 = -pkin(8) * t1045 - t1322 * t945 + t1325 * t936;
t926 = -pkin(2) * t1045 - t1530;
t999 = t1046 * t1326 - t1121 * t1323;
t1354 = pkin(7) * t999 + t1323 * t903 + t1326 * t926;
t958 = -t1057 * t1522 - t1502;
t982 = t1047 * t1322 - t1048 * t1325;
t989 = -qJ(4) * t1057 - t1501;
t909 = -pkin(8) * t982 - t1322 * t958 + t1325 * t989;
t920 = -pkin(2) * t982 - t1533;
t949 = t1057 * t1323 + t1326 * t983;
t1353 = pkin(7) * t949 + t1323 * t909 + t1326 * t920;
t1005 = t1083 * t1322 - t1086 * t1325;
t952 = -pkin(2) * t1005 - t1410;
t957 = -pkin(8) * t1005 + (pkin(3) * t1322 - qJ(4) * t1325) * t1091;
t980 = t1006 * t1326 + t1091 * t1323;
t1352 = pkin(7) * t980 + t1323 * t957 + t1326 * t952;
t1232 = -t1267 * t1322 - t1310 * t1492;
t1351 = t1232 * t1323 - t1414;
t1233 = t1266 * t1325 - t1309 * t1492;
t1350 = t1233 * t1323 + t1414;
t1331 = t1322 * t1440 + (-t1322 * t1263 - t1438) * qJD(2) - t1338;
t1010 = t1331 - t1528 + t1520;
t1022 = t1335 - 0.2e1 * t1436 - t1525 + t1548;
t1213 = -t1500 - t1506;
t998 = -t1022 * t1322 + t1213 * t1325 + t1515;
t1349 = pkin(7) * t1170 + t1010 * t1326 + t1323 * t998;
t1239 = t1442 * t1522 - t1300;
t1015 = -t1522 * t1274 + (-t1418 + t1493) * t1325 + t1347 + t1526;
t1330 = qJ(5) * t1442 + t1331;
t1030 = t1330 - t1505;
t978 = -t1015 * t1322 + t1030 * t1325;
t1348 = -pkin(7) * t1205 - t1239 * t1326 + t1323 * t978;
t1085 = t1124 + t1563;
t1120 = -t1484 + t1514;
t1345 = -pkin(7) * t1172 + t1085 * t1326 + t1120 * t1323;
t1002 = t1033 * t1326 - t1323 * t1358;
t1341 = pkin(7) * t1002 - (-pkin(2) * t1326 - pkin(8) * t1323) * t1032;
t1329 = t1047 + t1518;
t1302 = t1317 * qJDD(2);
t1244 = t1272 * t1317;
t1242 = t1272 * t1315;
t1241 = t1374 * t1315;
t1234 = qJDD(3) * t1323 + t1255 * t1326;
t1221 = -t1284 * t1325 + t1473;
t1216 = t1553 * t1322;
t1215 = (t1267 - t1297) * t1325;
t1208 = t1373 * t1317;
t1207 = t1373 * t1315;
t1192 = -t1244 * t1314 - t1316 * t1374;
t1191 = t1244 * t1316 - t1314 * t1374;
t1188 = t1233 * t1326 - t1415;
t1187 = t1232 * t1326 + t1415;
t1186 = t1228 * t1326 + t1323 * t1442;
t1152 = -t1208 * t1314 + t1234 * t1316;
t1151 = t1208 * t1316 + t1234 * t1314;
t1144 = -t1454 + (t1241 * t1315 + t1243 * t1317) * pkin(7);
t1143 = -t1458 + (-t1242 * t1315 - t1244 * t1317) * pkin(7);
t1141 = -t1167 * t1325 + t1251 * t1322;
t1135 = -t1315 * t1216 + t1317 * t1350;
t1134 = -t1315 * t1215 + t1317 * t1351;
t1133 = t1317 * t1216 + t1315 * t1350;
t1132 = t1317 * t1215 + t1315 * t1351;
t1131 = -t1315 * t1221 + t1317 * t1359;
t1128 = t1317 * t1221 + t1315 * t1359;
t1095 = t1448 + t1484;
t1094 = -t1447 - t1485;
t1093 = t1101 * t1317;
t1092 = t1101 * t1315;
t1088 = -t1148 * t1325 + t1435;
t1087 = t1146 * t1325 - t1435;
t1082 = -pkin(1) * t1242 - t1315 * t1407 + t1317 * t1404;
t1081 = pkin(1) * t1241 + t1315 * t1181 + t1317 * t1405;
t1080 = pkin(1) * t1244 + t1315 * t1404 + t1317 * t1407;
t1079 = -pkin(1) * t1243 - t1317 * t1181 + t1315 * t1405;
t1074 = -t1135 * t1314 + t1188 * t1316;
t1073 = -t1134 * t1314 + t1187 * t1316;
t1072 = t1135 * t1316 + t1188 * t1314;
t1071 = t1134 * t1316 + t1187 * t1314;
t1070 = -t1131 * t1314 + t1186 * t1316;
t1068 = t1131 * t1316 + t1186 * t1314;
t1066 = -t1100 * t1317 + t1315 * t1236;
t1065 = -t1100 * t1315 - t1317 * t1236;
t1058 = t1142 * t1326 - t1166 * t1323;
t1050 = -t1139 * t1325 + t1159 * t1322;
t1049 = -t1140 * t1325 + t1157 * t1322;
t1034 = -t1063 * t1325 + t1209 * t1322;
t1021 = t1090 * t1326 - t1147 * t1323;
t1020 = t1089 * t1326 + t1145 * t1323;
t1019 = pkin(3) * t1481 + t1077 * t1322 + t1447;
t1018 = qJ(4) * t1479 + t1078 * t1325 + t1448;
t1012 = t1033 + t1446;
t1009 = -t1315 * t1141 + t1317 * t1384;
t1008 = t1317 * t1141 + t1315 * t1384;
t1007 = pkin(2) * t1358 + pkin(8) * t1033;
t1004 = t1052 * t1326 - t1137 * t1323;
t1003 = t1051 * t1326 - t1138 * t1323;
t1001 = pkin(1) * t1066 + t1101 * t1517;
t1000 = -pkin(1) * t1065 + t1101 * t1516;
t994 = t1326 * t1032 - t1362;
t993 = t1022 * t1325 + t1213 * t1322 - t1448;
t992 = t1038 * t1322 + t1182 * t1325 + t1447;
t991 = (-t1065 * t1315 - t1066 * t1317) * pkin(7);
t990 = t1075 * t1325 + t1076 * t1322 + t1446;
t988 = -t1315 * t1088 + t1317 * t1385;
t987 = -t1315 * t1087 + t1317 * t1386;
t986 = t1317 * t1088 + t1315 * t1385;
t985 = t1317 * t1087 + t1315 * t1386;
t984 = t1035 * t1326 - t1061 * t1323;
t979 = -t1323 * t1262 + t1326 * t996 - t1362;
t972 = -t1323 * t1085 + t1326 * t1120 + t1363;
t971 = -t1323 * t1084 + t1326 * t1119 + t1364;
t970 = -t1315 * t1050 + t1317 * t1388;
t969 = -t1315 * t1049 + t1317 * t1389;
t968 = t1317 * t1050 + t1315 * t1388;
t967 = t1317 * t1049 + t1315 * t1389;
t966 = t1015 * t1325 + t1030 * t1322 - t1446;
t964 = -t1315 * t1045 + t1317 * t1390;
t963 = t1317 * t1045 + t1315 * t1390;
t962 = t1032 * t1315 + t1317 * t1395;
t961 = -t1032 * t1317 + t1315 * t1395;
t960 = -t1315 * t1043 + t1317 * t1391;
t959 = t1317 * t1043 + t1315 * t1391;
t956 = -t1315 * t1094 + t1317 * t1345 + t1590;
t955 = -t1315 * t1095 + t1317 * t1387 + t1427;
t954 = t1317 * t1094 + t1315 * t1345 - t1589;
t953 = t1317 * t1095 + t1315 * t1387 + t1451;
t951 = -t1012 * t1315 + t1317 * t1486 + t1425;
t950 = t1012 * t1317 + t1315 * t1486 + t1449;
t948 = t1323 * t1239 + t1326 * t978 + t1362;
t947 = -t1315 * t1034 + t1317 * t1394;
t946 = t1317 * t1034 + t1315 * t1394;
t944 = -t1315 * t1016 + t1317 * t1396;
t943 = t1317 * t1016 + t1315 * t1396;
t942 = t1326 * t1036 - t1323 * t1040 + t1364;
t940 = t1326 * t1037 - t1323 * t1039 - t1363;
t939 = pkin(8) * t1006 + (-pkin(2) + t1409) * t1091;
t938 = -t1315 * t1005 + t1317 * t1397;
t937 = t1317 * t1005 + t1315 * t1397;
t935 = -t1315 * t990 + t1317 * t1399 + t1425;
t934 = t1315 * t1399 + t1317 * t990 + t1449;
t932 = -t1323 * t1011 + t1326 * t997 - t1363;
t931 = -t1323 * t1010 + t1326 * t998 - t1364;
t930 = -t1315 * t1018 + t1317 * t1393 + t1427;
t929 = t1317 * t1018 + t1315 * t1393 + t1451;
t928 = -t1315 * t1019 + t1317 * t1392 + t1426;
t927 = t1317 * t1019 + t1315 * t1392 + t1450;
t919 = -t1315 * t982 + t1317 * t1400;
t918 = t1315 * t1400 + t1317 * t982;
t917 = -t1315 * t966 + t1317 * t1348 + t1564;
t916 = t1315 * t1348 + t1317 * t966 - t1565;
t915 = -t1315 * t992 + t1317 * t1401 + t1426;
t914 = t1315 * t1401 + t1317 * t992 + t1450;
t913 = -t1315 * t993 + t1317 * t1349 - t1585;
t912 = t1315 * t1349 + t1317 * t993 + t1584;
t908 = -(pkin(2) * t1323 - pkin(8) * t1326) * t1032 + (-t1315 * t961 - t1317 * t962) * pkin(7);
t906 = -pkin(2) * t1057 + pkin(8) * t983 + t1322 * t989 + t1325 * t958;
t905 = -pkin(1) * t961 - t1315 * t1007 + t1317 * t1341;
t904 = pkin(1) * t962 + t1317 * t1007 + t1315 * t1341;
t901 = pkin(2) * t1121 + pkin(8) * t1046 + t1322 * t936 + t1325 * t945;
t900 = pkin(2) * t1104 + pkin(8) * t1044 + t1322 * t933 + t1325 * t941;
t896 = pkin(2) * t1062 + pkin(8) * t1017 + t1322 * t965 + t1325 * t907;
t895 = -t1323 * t952 + t1326 * t957 + (-t1315 * t937 - t1317 * t938) * pkin(7);
t893 = -pkin(1) * t937 - t1315 * t939 + t1317 * t1352;
t892 = pkin(1) * t938 + t1315 * t1352 + t1317 * t939;
t890 = -t1315 * t910 + t1317 * t1403;
t889 = t1315 * t1403 + t1317 * t910;
t888 = -t1323 * t926 + t1326 * t903 + (-t1315 * t963 - t1317 * t964) * pkin(7);
t887 = -t1323 * t925 + t1326 * t902 + (-t1315 * t959 - t1317 * t960) * pkin(7);
t886 = -t1323 * t920 + t1326 * t909 + (-t1315 * t918 - t1317 * t919) * pkin(7);
t884 = -pkin(1) * t963 - t1315 * t901 + t1317 * t1354;
t883 = pkin(1) * t964 + t1315 * t1354 + t1317 * t901;
t882 = -pkin(1) * t959 - t1315 * t900 + t1317 * t1355;
t881 = pkin(1) * t960 + t1315 * t1355 + t1317 * t900;
t880 = -t1323 * t899 + t1326 * t897 + (-t1315 * t943 - t1317 * t944) * pkin(7);
t879 = -pkin(1) * t918 - t1315 * t906 + t1317 * t1353;
t878 = pkin(1) * t919 + t1315 * t1353 + t1317 * t906;
t876 = -pkin(1) * t943 - t1315 * t896 + t1317 * t1356;
t875 = pkin(1) * t944 + t1315 * t1356 + t1317 * t896;
t874 = pkin(2) * t1547 + pkin(8) * t911 + t1322 * t894 + t1325 * t891;
t873 = -t1323 * t885 + t1326 * t877 + (-t1315 * t889 - t1317 * t890) * pkin(7);
t872 = -pkin(1) * t889 - t1315 * t874 + t1317 * t1357;
t871 = pkin(1) * t890 + t1315 * t1357 + t1317 * t874;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1546, -t1545, -t1527, -qJ(1) * t1527, 0, 0, -t1376, 0, t1192, t1314 * t1443, -qJ(1) * t1191 - t1082 * t1314 + t1143 * t1316, qJ(1) * t1377 - t1314 * t1081 + t1316 * t1144, -t1093 * t1314 + t1100 * t1316, t1316 * t991 - t1314 * t1000 - qJ(1) * (t1066 * t1316 + t1101 * t1314), t1074, t1042, t1070, t1073, t1069, t1152, -t1314 * t955 + t1316 * t971 + t1511, -t1314 * t956 + t1316 * t972 + t1510, -t1314 * t951 + t1316 * t994 - t1509, t1316 * t908 - t1314 * t905 - qJ(1) * (t1002 * t1314 + t1316 * t962), t1074, t1070, -t1042, t1152, -t1069, t1073, -t1314 * t930 + t1316 * t942 + t1511, -t1314 * t935 + t1316 * t979 - t1509, -t1314 * t928 + t1316 * t940 - t1510, t1316 * t895 - t1314 * t893 - qJ(1) * (t1314 * t980 + t1316 * t938), t1073, t1042, t1069, t1074, t1070, t1152, -t1314 * t915 + t1316 * t932 - t1510, -t1314 * t913 + t1316 * t931 - t1511, -t1314 * t917 + t1316 * t948 + t1509, t1316 * t886 - t1314 * t879 - qJ(1) * (t1314 * t949 + t1316 * t919), t1021 * t1316 - t1314 * t988, -t1314 * t947 + t1316 * t984, t1004 * t1316 - t1314 * t970, t1020 * t1316 - t1314 * t987, t1003 * t1316 - t1314 * t969, -t1009 * t1314 + t1058 * t1316, t1316 * t887 - t1314 * t882 - qJ(1) * (t1314 * t995 + t1316 * t960), t1316 * t888 - t1314 * t884 - qJ(1) * (t1314 * t999 + t1316 * t964), t1316 * t880 - t1314 * t876 - qJ(1) * (t1314 * t981 + t1316 * t944), t1316 * t873 - t1314 * t872 - qJ(1) * (t1314 * t898 + t1316 * t890); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1545, -t1546, t1529, qJ(1) * t1529, 0, 0, t1377, 0, t1191, -t1316 * t1443, qJ(1) * t1192 + t1082 * t1316 + t1143 * t1314, qJ(1) * t1376 + t1316 * t1081 + t1314 * t1144, t1093 * t1316 + t1100 * t1314, t1314 * t991 + t1316 * t1000 + qJ(1) * (-t1066 * t1314 + t1101 * t1316), t1072, -t1583, t1068, t1071, -t1580, t1151, t1314 * t971 + t1316 * t955 + t1053, t1314 * t972 + t1316 * t956 + t1054, t1314 * t994 + t1316 * t951 + t1125, t1314 * t908 + t1316 * t905 + qJ(1) * (t1002 * t1316 - t1314 * t962), t1072, t1068, t1583, t1151, t1580, t1071, t1314 * t942 + t1316 * t930 + t1053, t1314 * t979 + t1316 * t935 + t1125, t1314 * t940 + t1316 * t928 - t1054, t1314 * t895 + t1316 * t893 + qJ(1) * (-t1314 * t938 + t1316 * t980), t1071, -t1583, -t1580, t1072, t1068, t1151, t1314 * t932 + t1316 * t915 - t1054, t1314 * t931 + t1316 * t913 - t1053, t1314 * t948 + t1316 * t917 - t1125, t1314 * t886 + t1316 * t879 + qJ(1) * (-t1314 * t919 + t1316 * t949), t1021 * t1314 + t1316 * t988, t1314 * t984 + t1316 * t947, t1004 * t1314 + t1316 * t970, t1020 * t1314 + t1316 * t987, t1003 * t1314 + t1316 * t969, t1009 * t1316 + t1058 * t1314, t1314 * t887 + t1316 * t882 + qJ(1) * (-t1314 * t960 + t1316 * t995), t1314 * t888 + t1316 * t884 + qJ(1) * (-t1314 * t964 + t1316 * t999), t1314 * t880 + t1316 * t876 + qJ(1) * (-t1314 * t944 + t1316 * t981), t1314 * t873 + t1316 * t872 + qJ(1) * (-t1314 * t890 + t1316 * t898); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1424, t1276, 0, 0, 0, 0, t1241, 0, t1242, t1302, t1080, t1079, t1092, t1001, t1133, -t1097, t1128, t1132, -t1127, t1207, t953, t954, t950, t904, t1133, t1128, t1097, t1207, t1127, t1132, t929, t934, t927, t892, t1132, -t1097, -t1127, t1133, t1128, t1207, t914, t912, t916, t878, t986, t946, t968, t985, t967, t1008, t881, t883, t875, t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1512, -t1424, 0, 0, 0, t1272, 0, -t1374, 0, t1143, t1144, t1100, t991, t1188, -t1161, t1186, t1187, -t1185, t1234, t971, t972, t994, t908, t1188, t1186, t1161, t1234, t1185, t1187, t942, t979, t940, t895, t1187, -t1161, -t1185, t1188, t1186, t1234, t932, t931, t948, t886, t1021, t984, t1004, t1020, t1003, t1058, t887, t888, t880, t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1512, 0, -t1276, 0, 0, 0, t1243, 0, t1244, -t1443, t1082, t1081, t1093, t1000, t1135, -t1099, t1131, t1134, -t1130, t1208, t955, t956, t951, t905, t1135, t1131, t1099, t1208, t1130, t1134, t930, t935, t928, t893, t1134, -t1099, -t1130, t1135, t1131, t1208, t915, t913, t917, t879, t988, t947, t970, t987, t969, t1009, t882, t884, t876, t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1424, t1276, 0, 0, 0, 0, t1241, 0, t1242, t1302, t1080, t1079, t1092, t1001, t1133, -t1097, t1128, t1132, -t1127, t1207, t953, t954, t950, t904, t1133, t1128, t1097, t1207, t1127, t1132, t929, t934, t927, t892, t1132, -t1097, -t1127, t1133, t1128, t1207, t914, t912, t916, t878, t986, t946, t968, t985, t967, t1008, t881, t883, t875, t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1327, 0, 0, -t1236, -t1407, 0, t1233, -t1204, t1228, t1232, -t1226, t1255, t1119, t1120, t1032, pkin(8) * t1032, t1233, t1228, t1204, t1255, t1226, t1232, t1036, t996, t1037, t957, t1232, -t1204, -t1226, t1233, t1228, t1255, t997, t998, t978, t909, t1090, t1035, t1052, t1089, t1051, t1142, t902, t903, t897, t877; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1327, 0, qJDD(2), 0, t1236, 0, t1181, 0, t1289, -t1275, -t1442, -t1289, -t1441, -qJDD(3), t1084, t1085, 0, pkin(2) * t1032, t1289, -t1442, t1275, -qJDD(3), t1441, -t1289, t1040, t1262, t1039, t952, -t1289, -t1275, -t1441, t1289, -t1442, -qJDD(3), t1011, t1010, -t1239, t920, t1147, t1061, t1137, -t1145, t1138, t1166, t925, t926, t899, t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t1407, -t1181, 0, 0, t1216, t1201, t1221, t1215, t1218, 0, t1095, t1094, t1012, t1007, t1216, t1221, -t1201, 0, -t1218, t1215, t1018, t990, t1019, t939, t1215, t1201, t1218, t1216, t1221, 0, t992, t993, t966, t906, t1088, t1034, t1050, t1087, t1049, t1141, t900, t901, t896, t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1268, t1278, -t1298, t1286, t1298, 0, -t1358, t1123, 0, t1266, t1278, -t1268, t1298, -t1286, -t1298, t1506, t1076, t1077, -qJ(4) * t1091, -t1298, t1268, t1286, t1266, t1278, t1298, t1038, t1213, t1030, t989, t1210, t1209, t1159, -t1210, t1157, t1251, t933, t936, t965, t894; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1297, t1265, -t1284, t1267, t1279, -t1297, t1358, 0, t1124, 0, t1297, -t1284, -t1265, -t1297, -t1279, t1267, t1078, t1075, pkin(3) * t1265, -pkin(3) * t1091, t1267, t1265, t1279, t1297, -t1284, -t1297, t1182, t1022, t1015, t958, -t1148, -t1063, -t1139, t1146, -t1140, -t1167, t941, t945, t907, t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1289, t1275, t1442, t1289, t1441, qJDD(3), -t1123, -t1124, 0, 0, -t1289, t1442, -t1275, qJDD(3), -t1441, t1289, t1554, -t1262, t1555, t1410, t1289, t1275, t1441, -t1289, t1442, qJDD(3), t1329 + t1538, t1048 + t1528, t1239, t1533, -t1147, -t1061, -t1137, t1145, -t1138, -t1166, t1531, t1530, t1532, t1534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1278, -t1268, t1298, -t1286, -t1298, 0, t1086, -t1091, 0, -t1298, t1268, t1286, t1266, t1278, t1298, t1328, -t1500, t1330, -t1501, t1210, t1209, t1159, -t1210, t1157, t1251, t1368, t1340, t1419, t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1289, t1442, -t1275, qJDD(3), -t1441, t1289, -t1086, 0, t1083, 0, t1289, t1275, t1441, -t1289, t1442, qJDD(3), t1329, t1048 - t1562, pkin(4) * t1442, -pkin(4) * t1048, -t1147, -t1061, -t1137, t1145, -t1138, -t1166, -pkin(4) * t1105 + t1432, -pkin(4) * t1122 - t1433, -pkin(4) * t1064 - t1371, -pkin(4) * t924 + t1495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1297, t1284, t1265, t1297, t1279, -t1267, t1091, -t1083, 0, 0, -t1267, -t1265, -t1279, -t1297, t1284, t1297, -pkin(4) * t1265 + t1499, t1333 + t1525, pkin(4) * t1274 + t1487 + (t1398 - t1493) * t1325 + t1336, pkin(4) * t1057 + t1502, t1148, t1063, t1139, -t1146, t1140, t1167, -t1104 * t1521 - t1402, -t1121 * t1521 - t1420, -t1062 * t1521 - t1367, -t1521 * t1547 + t1503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1267, -t1265, -t1279, -t1297, t1284, t1297, 0, -t1057, t1047, 0, t1148, t1063, t1139, -t1146, t1140, t1167, -pkin(9) * t1104 + t1023, -pkin(9) * t1121 + t1457, -pkin(9) * t1062 - t1547, -pkin(9) * t1547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1298, -t1268, -t1286, -t1266, -t1278, -t1298, t1057, 0, t1048, 0, -t1210, -t1209, -t1159, t1210, -t1157, -t1251, t1431, t1365, -t1060, -t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1289, -t1275, -t1441, t1289, -t1442, -qJDD(3), -t1047, -t1048, 0, 0, t1147, t1061, t1137, -t1145, t1138, t1166, -t1432, t1433, t1371, -t1495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1189, -t1155, t1539, -t1238, t1235, t1238, 0, t1028, t976, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1468, t1540, t1439, t1343, t1179, t1468, -t1028, 0, t977, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1210, t1209, t1159, -t1210, t1157, t1251, -t976, -t977, 0, 0;];
m_new_reg  = t1;
