% Calculate inertial parameters regressor of coriolis matrix for
% S6RRRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPPR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:36:08
% EndTime: 2019-03-09 15:37:14
% DurationCPUTime: 52.59s
% Computational Cost: add. (27465->1182), mult. (56642->1442), div. (0->0), fcn. (60608->8), ass. (0->827)
t1034 = qJD(3) - qJD(6);
t1209 = cos(qJ(6));
t1192 = sin(pkin(10));
t768 = cos(qJ(3));
t965 = t1192 * t768;
t1193 = cos(pkin(10));
t766 = sin(qJ(3));
t969 = t1193 * t766;
t691 = t965 + t969;
t767 = sin(qJ(2));
t655 = t691 * t767;
t1003 = t1209 * t655;
t966 = t1192 * t766;
t715 = t767 * t966;
t968 = t1193 * t768;
t658 = t767 * t968 - t715;
t765 = sin(qJ(6));
t1134 = t765 * t658;
t1307 = -t1003 + t1134;
t1171 = t1307 ^ 2;
t471 = -t1209 * t658 - t765 * t655;
t1172 = t471 ^ 2;
t191 = -t1172 + t1171;
t1322 = qJD(1) * t191;
t689 = t966 - t968;
t1262 = -t1209 * t689 + t765 * t691;
t1167 = t1262 ^ 2;
t856 = t1209 * t691 + t765 * t689;
t1168 = t856 ^ 2;
t223 = t1167 - t1168;
t1321 = qJD(2) * t223;
t1087 = qJD(2) * t1262;
t1097 = qJD(1) * t1307;
t881 = t1087 + t1097;
t1246 = t1307 / 0.2e1;
t1207 = t655 * pkin(9);
t769 = cos(qJ(2));
t1125 = t769 * qJ(5);
t1126 = t768 * t769;
t1029 = pkin(7) * t1126;
t1196 = -qJ(4) - pkin(8);
t1198 = t769 * pkin(2);
t834 = t1196 * t767 - pkin(1) - t1198;
t786 = t766 * t834 + t1029;
t1314 = t1193 * t786;
t1208 = pkin(7) * t766;
t815 = t834 * t768;
t782 = (-pkin(3) - t1208) * t769 + t815;
t525 = t1192 * t782;
t368 = t1314 + t525;
t344 = t368 - t1125;
t273 = t344 + t1207;
t1011 = t1209 * t273;
t1204 = t658 * pkin(9);
t1315 = t1192 * t786;
t367 = t1193 * t782 - t1315;
t347 = t769 * pkin(4) - t367;
t772 = t769 * pkin(5) - t1204 + t347;
t771 = t765 * t772;
t135 = t1011 + t771;
t1129 = t766 * t769;
t1032 = pkin(7) * t1129;
t580 = t815 - t1032;
t394 = t1193 * t580 - t1315;
t298 = t394 + t1204;
t1139 = t765 * t298;
t967 = t1192 * t580;
t393 = t967 + t1314;
t828 = t393 + t1207;
t293 = t1209 * t828;
t156 = -t293 + t1139;
t1320 = t135 + t156;
t1202 = t691 * pkin(9);
t940 = t1196 * t1193;
t693 = t766 * t940;
t939 = t1196 * t1192;
t588 = t768 * t939 + t693;
t485 = t588 + t1202;
t1138 = t765 * t485;
t695 = t768 * t940;
t876 = t766 * t939;
t814 = t689 * pkin(9) + t876;
t798 = -t695 + t814;
t469 = t1209 * t798;
t276 = -t469 + t1138;
t694 = t1196 * t968;
t486 = -t694 + t814;
t1005 = t1209 * t486;
t587 = -t1196 * t965 - t693;
t797 = t587 - t1202;
t788 = t765 * t797;
t279 = t1005 + t788;
t1319 = t276 + t279;
t1253 = -pkin(4) - pkin(5);
t1130 = t766 * t767;
t703 = pkin(3) * t1130 + t767 * pkin(7);
t942 = qJ(5) * t658 - t703;
t345 = t1253 * t655 + t942;
t1318 = t1307 * t345;
t1036 = t769 * qJD(1);
t1317 = t1036 * t1307;
t1095 = qJD(1) * t471;
t1316 = t1095 * t1307;
t1234 = -t1003 / 0.2e1;
t1298 = t1262 / 0.2e1;
t1313 = t1298 * t471;
t1301 = -t856 / 0.2e1;
t1312 = t1301 * t1307;
t1254 = t691 ^ 2;
t683 = t689 ^ 2;
t484 = t683 - t1254;
t1311 = t484 * qJD(3);
t1224 = t691 / 0.2e1;
t1227 = -t689 / 0.2e1;
t387 = -t1224 * t655 + t1227 * t658;
t1287 = t387 * qJD(3);
t1090 = qJD(1) * t655;
t517 = -qJD(2) * t689 - t1090;
t657 = t691 * t769;
t1310 = -t517 * t657 - t1287;
t1309 = -t657 * t1090 - t1287;
t1051 = t471 * qJD(4);
t1067 = qJD(5) * t769;
t986 = t765 * t1067;
t1308 = t986 - t1051;
t1065 = qJD(6) * t856;
t880 = -qJD(3) * t856 + t1065;
t1086 = qJD(2) * t856;
t889 = t1086 - t1095;
t716 = t769 * t966;
t660 = t769 * t968 - t716;
t342 = -t655 * t660 - t657 * t658;
t1288 = t342 * qJD(1);
t1150 = t658 * t691;
t1151 = t655 * t689;
t235 = t1150 - t1151;
t1289 = t235 * qJD(3);
t1306 = t1289 + t1288;
t1128 = t767 * t768;
t1031 = pkin(7) * t1128;
t1197 = t769 * pkin(8);
t1200 = t767 * pkin(2);
t714 = -t1197 + t1200;
t701 = t766 * t714;
t648 = t701 - t1031;
t581 = -qJ(4) * t1129 + t648;
t569 = t1192 * t581;
t702 = t768 * t714;
t738 = pkin(7) * t1130;
t647 = t738 + t702;
t565 = t767 * pkin(3) - qJ(4) * t1126 + t647;
t970 = t1193 * t565;
t1116 = t970 / 0.2e1 - t569 / 0.2e1;
t1199 = t767 * pkin(4);
t810 = -t1199 / 0.2e1 - t1116;
t1305 = t1288 - t1289 - qJD(2) * (t657 * t691 + t660 * t689);
t1255 = t658 ^ 2;
t651 = t655 ^ 2;
t402 = t651 - t1255;
t895 = qJD(1) * t402 - qJD(2) * t235;
t894 = -qJD(1) * t235 + qJD(2) * t484;
t1304 = qJD(2) * t342 + qJD(3) * t402;
t1303 = -t471 / 0.2e1;
t1302 = t471 / 0.2e1;
t1230 = -t655 / 0.2e1;
t1228 = t658 / 0.2e1;
t1225 = -t691 / 0.2e1;
t1300 = t856 / 0.2e1;
t1299 = -t1262 / 0.2e1;
t1297 = t345 * t471;
t1296 = t587 + t588;
t625 = t658 * t1036;
t645 = t658 * qJD(3);
t1295 = t625 - t645;
t1082 = qJD(3) * t471;
t1291 = qJD(4) * t856;
t172 = -t1299 * t471 + t1312;
t1290 = t172 * qJD(6);
t446 = t471 * t1036;
t1037 = t767 * qJD(2);
t924 = t767 * t655 - t657 * t769;
t1273 = qJD(1) * t924;
t1286 = -t689 * t1037 - t1273;
t1066 = qJD(6) * t1262;
t1285 = t1262 * qJD(3) - t1066;
t1284 = qJD(4) * t1262;
t1263 = t651 + t1255;
t1283 = qJD(4) * t1263;
t995 = t1262 * t1086;
t1282 = -qJD(1) * t172 + t995;
t1085 = qJD(2) * t691;
t994 = t689 * t1085;
t1281 = -qJD(1) * t387 + t994;
t1280 = -qJD(2) * t172 - t1316;
t1089 = qJD(1) * t658;
t997 = t655 * t1089;
t1279 = qJD(2) * t387 - t997;
t879 = qJD(6) * t471 - t1082;
t923 = t1150 + t1151;
t1278 = qJD(1) * t1263 + qJD(2) * t923;
t1261 = t683 + t1254;
t1277 = qJD(1) * t923 + qJD(2) * t1261;
t586 = -t695 + t876;
t589 = -t694 + t876;
t816 = (t586 - t589) * t691 - t1296 * t689;
t1276 = qJD(3) * t816 + qJD(4) * t1261;
t1211 = t769 / 0.2e1;
t1115 = t691 * t1211;
t509 = -t657 / 0.2e1 + t1115;
t1275 = -qJD(2) * t509 + t1295;
t1272 = qJD(2) * t816;
t926 = t587 * t691 - t589 * t689;
t1269 = qJD(2) * t926;
t1267 = qJD(4) * t926;
t1266 = t923 * qJD(4);
t1206 = t657 * pkin(4);
t1148 = t660 * qJ(5);
t978 = -t1148 / 0.2e1;
t1265 = t1206 / 0.2e1 + t978;
t944 = -t968 / 0.2e1;
t512 = t716 / 0.2e1 + (t1227 + t944) * t769;
t1046 = t512 * qJD(1);
t676 = t689 * qJD(3);
t1264 = t1046 + t676;
t531 = t1192 * t565;
t570 = t1193 * t581;
t1117 = -t531 / 0.2e1 - t570 / 0.2e1;
t1260 = t1228 * t587 + t1230 * t589;
t1259 = t1225 * t367 + t1227 * t368;
t1258 = t1224 * t347 + t1227 * t344;
t761 = t766 ^ 2;
t763 = t768 ^ 2;
t728 = t763 - t761;
t1038 = t767 * qJD(1);
t996 = t768 * t1038;
t1257 = qJD(2) * t728 - 0.2e1 * t766 * t996;
t1256 = qJD(2) * t924 - t769 * t645;
t1137 = t765 * t486;
t470 = t1209 * t797;
t277 = -t470 + t1137;
t1252 = -t277 / 0.2e1;
t1251 = -t279 / 0.2e1;
t1250 = -t393 / 0.2e1;
t1249 = t394 / 0.2e1;
t1247 = -t1307 / 0.2e1;
t1236 = t586 / 0.2e1;
t1235 = t588 / 0.2e1;
t1000 = t1192 * pkin(3);
t739 = t1000 + qJ(5);
t1001 = t1193 * pkin(3);
t741 = -t1001 - pkin(4);
t929 = -pkin(5) + t741;
t643 = -t1209 * t929 + t739 * t765;
t1233 = -t643 / 0.2e1;
t644 = t1209 * t739 + t765 * t929;
t1232 = -t644 / 0.2e1;
t1231 = t655 / 0.2e1;
t1229 = -t658 / 0.2e1;
t1226 = t689 / 0.2e1;
t1223 = -t694 / 0.2e1;
t1222 = -t739 / 0.2e1;
t1221 = t739 / 0.2e1;
t1220 = t741 / 0.2e1;
t750 = -pkin(3) * t768 - pkin(2);
t1219 = -t750 / 0.2e1;
t1218 = -t765 / 0.2e1;
t1217 = t765 / 0.2e1;
t1216 = -t766 / 0.2e1;
t1215 = -t767 / 0.2e1;
t1214 = t767 / 0.2e1;
t1213 = -t768 / 0.2e1;
t1212 = -t769 / 0.2e1;
t863 = (t1300 - t1301) * t471;
t864 = 0.2e1 * t1307 * t1299;
t73 = t863 + t864;
t1210 = t73 * qJD(4);
t1205 = t658 * pkin(4);
t1203 = t691 * pkin(4);
t1201 = t766 * pkin(3);
t759 = t769 * pkin(7);
t74 = -t863 + t864;
t96 = t1262 * t1307 + t471 * t856;
t1195 = t74 * qJD(3) + t96 * qJD(6);
t1194 = pkin(3) * qJD(3);
t1013 = t769 * t1209;
t1131 = t765 * t769;
t1141 = t765 * t273;
t233 = t1209 * t772;
t134 = -t233 + t1141;
t39 = t1013 * t135 + t1131 * t134 - t345 * t658;
t1191 = qJD(1) * t39;
t44 = t1307 * t135 + t134 * t471;
t1190 = qJD(1) * t44;
t932 = t569 - t970;
t269 = -t660 * pkin(9) + t1253 * t767 + t932;
t1012 = t1209 * t269;
t389 = t570 + t531;
t757 = t767 * qJ(5);
t356 = t757 + t389;
t275 = pkin(9) * t657 + t356;
t1140 = t765 * t275;
t138 = t1012 - t1140;
t1010 = t1209 * t275;
t1142 = t765 * t269;
t139 = t1010 + t1142;
t1133 = t765 * t660;
t630 = t1209 * t657;
t474 = -t630 + t1133;
t1002 = t1209 * t660;
t1135 = t765 * t657;
t478 = t1002 + t1135;
t10 = -t1307 * t139 + t134 * t478 - t135 * t474 + t138 * t471;
t1189 = t10 * qJD(1);
t736 = pkin(3) * t1129;
t704 = t759 + t736;
t941 = -t704 + t1148;
t346 = t1253 * t657 + t941;
t11 = -t134 * t138 + t135 * t139 + t345 * t346;
t1188 = t11 * qJD(1);
t1009 = t1209 * t298;
t813 = t765 * t828;
t157 = t1009 + t813;
t12 = -t1320 * t471 + (t134 - t157) * t1307;
t1187 = t12 * qJD(1);
t1030 = pkin(3) * t1128;
t1152 = t655 * qJ(5);
t874 = -t1030 - t1152;
t366 = t1253 * t658 + t874;
t13 = t134 * t156 + t135 * t157 + t345 * t366;
t1186 = t13 * qJD(1);
t1185 = t277 * t765;
t1184 = t277 * t769;
t29 = t1307 * t346 + t134 * t767 + t138 * t769 + t345 * t474;
t1183 = t29 * qJD(1);
t30 = -t135 * t767 + t139 * t769 - t345 * t478 + t346 * t471;
t1182 = t30 * qJD(1);
t1177 = t393 * t587;
t1176 = t393 * t769;
t1175 = t394 * t589;
t1174 = t394 * t769;
t426 = pkin(4) * t655 - t942;
t1173 = t426 * t658;
t48 = t1307 * t366 - t156 * t769 + t1297;
t1170 = t48 * qJD(1);
t49 = t157 * t769 + t366 * t471 - t1318;
t1169 = t49 * qJD(1);
t1166 = t1262 * t769;
t1165 = t856 * t769;
t357 = t932 - t1199;
t427 = -t941 + t1206;
t56 = t344 * t356 + t347 * t357 + t426 * t427;
t1164 = t56 * qJD(1);
t1163 = t586 * t769;
t1161 = t587 * t767;
t1160 = t588 * t769;
t1158 = t589 * t767;
t448 = -t874 + t1205;
t59 = t344 * t394 + t347 * t393 + t426 * t448;
t1157 = t59 * qJD(1);
t61 = -t344 * t657 + t347 * t660 - t356 * t655 + t357 * t658;
t1156 = t61 * qJD(1);
t943 = -t767 * pkin(8) - t1198;
t903 = -pkin(1) + t943;
t641 = -t768 * t903 + t1032;
t1155 = t641 * t769;
t642 = t766 * t903 + t1029;
t1154 = t642 * t769;
t1153 = t643 * t769;
t66 = (-t344 + t393) * t658 + (-t347 - t394) * t655;
t1149 = t66 * qJD(1);
t67 = -t367 * t660 - t368 * t657 - t389 * t655 + t658 * t932;
t1147 = t67 * qJD(1);
t68 = (-t368 + t393) * t658 + (t367 - t394) * t655;
t1146 = t68 * qJD(1);
t1145 = t689 * qJ(5);
t75 = -t134 * t769 + t1318;
t1144 = t75 * qJD(1);
t76 = -t135 * t769 - t1297;
t1143 = t76 * qJD(1);
t1136 = t765 * t856;
t762 = t767 ^ 2;
t1127 = t768 * t762;
t77 = -t367 * t932 + t368 * t389 + t703 * t704;
t1124 = t77 * qJD(1);
t78 = -t344 * t767 + t356 * t769 + t426 * t660 + t427 * t658;
t1123 = t78 * qJD(1);
t79 = -t347 * t767 + t357 * t769 + t426 * t657 + t427 * t655;
t1122 = t79 * qJD(1);
t86 = t1030 * t703 - t367 * t393 + t368 * t394;
t1121 = t86 * qJD(1);
t169 = t1312 + t1313;
t1120 = t169 * qJD(3) - t1290;
t170 = t1300 * t1307 - t1313;
t1119 = t170 * qJD(3) + t1290;
t764 = t769 ^ 2;
t729 = t764 - t762;
t877 = qJ(5) * t691 - t750;
t524 = pkin(4) * t689 - t877;
t866 = t1224 * t426 + t1228 * t524;
t802 = t1211 * t589 + t866;
t106 = t802 + t810;
t1114 = qJD(1) * t106;
t117 = t448 * t655 + t1173 + t1176;
t1113 = qJD(1) * t117;
t142 = -t344 * t655 + t347 * t658;
t1112 = qJD(1) * t142;
t1007 = t1209 * t478;
t1004 = t1209 * t1262;
t948 = t1004 / 0.2e1;
t979 = -t1165 / 0.2e1;
t155 = t769 * t948 + t1007 / 0.2e1 + (t979 + t474 / 0.2e1) * t765;
t1111 = qJD(1) * t155;
t158 = -t367 * t658 - t368 * t655;
t1110 = qJD(1) * t158;
t177 = t344 * t769 + t1173;
t1109 = qJD(1) * t177;
t192 = -t1030 * t655 - t703 * t658 - t1176;
t1108 = qJD(1) * t192;
t193 = t1030 * t658 - t703 * t655 + t1174;
t1107 = qJD(1) * t193;
t1008 = t1209 * t1307;
t229 = -t1008 * t769 - t1131 * t471;
t1106 = qJD(1) * t229;
t256 = t1307 * t767 - t474 * t769;
t1105 = qJD(1) * t256;
t257 = t471 * t767 + t478 * t769;
t1104 = qJD(1) * t257;
t935 = t630 / 0.2e1 - t1133 / 0.2e1;
t981 = t856 * t1211;
t301 = -t981 - t935;
t1103 = qJD(1) * t301;
t302 = -t981 + t935;
t1102 = qJD(1) * t302;
t303 = t1165 / 0.2e1 + t935;
t1101 = qJD(1) * t303;
t822 = t1135 / 0.2e1 + t1002 / 0.2e1;
t304 = t1166 / 0.2e1 + t822;
t1100 = qJD(1) * t304;
t980 = t1262 * t1211;
t306 = t980 + t822;
t1099 = qJD(1) * t306;
t307 = t980 - t822;
t1098 = qJD(1) * t307;
t480 = -t658 * t767 + t660 * t769;
t1093 = qJD(1) * t480;
t556 = -t1208 * t762 - t1155;
t1092 = qJD(1) * t556;
t557 = -pkin(7) * t1127 - t1154;
t1091 = qJD(1) * t557;
t1014 = t279 * t1209;
t266 = t1014 / 0.2e1;
t952 = -t1014 / 0.2e1;
t141 = t266 + t952;
t1088 = qJD(2) * t141;
t1084 = qJD(2) * t766;
t1083 = qJD(2) * t768;
t1080 = qJD(3) * t588;
t1079 = qJD(3) * t655;
t1078 = qJD(3) * t766;
t1077 = qJD(3) * t768;
t1076 = qJD(3) * t769;
t1075 = qJD(4) * t512;
t1074 = qJD(4) * t689;
t1073 = qJD(5) * t141;
t441 = -t1008 / 0.2e1;
t950 = t1008 / 0.2e1;
t245 = t441 + t950;
t1072 = qJD(5) * t245;
t498 = -t1004 / 0.2e1;
t340 = t498 + t948;
t1071 = qJD(5) * t340;
t1070 = qJD(5) * t655;
t1069 = qJD(5) * t691;
t1068 = qJD(5) * t765;
t118 = -t426 * t655 + t448 * t658 + t1174;
t1064 = t118 * qJD(1);
t121 = -t367 * t767 - t704 * t655 - t703 * t657 - t769 * t932;
t1063 = t121 * qJD(1);
t122 = -t368 * t767 + t389 * t769 + t704 * t658 + t703 * t660;
t1062 = t122 * qJD(1);
t153 = -t1307 * t478 + t471 * t474;
t1061 = t153 * qJD(1);
t219 = (t647 * t767 - t1155) * t768 + (t648 * t767 + t1154) * t766;
t1060 = t219 * qJD(1);
t282 = pkin(7) ^ 2 * t767 * t769 - t641 * t647 + t642 * t648;
t1059 = t282 * qJD(1);
t361 = t1307 * t658 + t764 * t765;
t1056 = t361 * qJD(1);
t362 = t1209 * t764 - t471 * t658;
t1055 = t362 * qJD(1);
t1054 = t394 * qJD(3);
t403 = t641 * t767 + (t647 - 0.2e1 * t738) * t769;
t1053 = t403 * qJD(1);
t404 = t648 * t769 + (-t642 + 0.2e1 * t1029) * t767;
t1052 = t404 * qJD(1);
t1050 = t1307 * qJD(4);
t1049 = t509 * qJD(1);
t808 = -t969 / 0.2e1 - t965 / 0.2e1;
t510 = (t1225 + t808) * t769;
t1048 = t510 * qJD(1);
t511 = -t716 / 0.2e1 + (t1227 + t968 / 0.2e1) * t769;
t490 = t511 * qJD(1);
t1047 = t511 * qJD(4);
t513 = t657 / 0.2e1 + t1115;
t1045 = t513 * qJD(1);
t514 = (t1224 + t808) * t769;
t1044 = t514 * qJD(1);
t1043 = t655 * qJD(4);
t646 = t658 * qJD(4);
t681 = (t761 / 0.2e1 - t763 / 0.2e1) * t767;
t1042 = t681 * qJD(3);
t677 = t691 * qJD(3);
t699 = t729 * t766;
t1041 = t699 * qJD(1);
t700 = t764 * t768 - t1127;
t1040 = t700 * qJD(1);
t1039 = t729 * qJD(1);
t755 = t765 * qJD(3);
t1035 = t769 * qJD(2);
t1033 = pkin(4) / 0.2e1 + pkin(5) / 0.2e1;
t1028 = -t1209 / 0.2e1;
t1027 = t1209 / 0.2e1;
t1026 = pkin(1) * t1038;
t1025 = pkin(1) * t1036;
t1023 = -t1201 / 0.2e1;
t751 = t1201 / 0.2e1;
t1022 = t1220 - pkin(4) / 0.2e1;
t1021 = -t1193 / 0.2e1;
t1020 = t1193 / 0.2e1;
t1019 = -t1192 / 0.2e1;
t1018 = t1192 / 0.2e1;
t1016 = t138 * t1209;
t1015 = t156 * t1209;
t1006 = t1209 * t485;
t992 = t766 * t1083;
t991 = t768 * t1037;
t989 = t766 * t1076;
t988 = t768 * t1076;
t987 = t769 * t1043;
t576 = t689 * t677;
t985 = t766 * t1077;
t984 = t767 * t1035;
t983 = t767 * t1036;
t982 = -t1175 / 0.2e1;
t977 = t765 * t1214;
t976 = -t1128 / 0.2e1;
t975 = qJ(5) / 0.2e1 + t1221;
t974 = -t525 / 0.2e1 - t1314 / 0.2e1;
t973 = t736 / 0.2e1 + t759 / 0.2e1;
t972 = qJD(6) * t1209;
t756 = t1209 * qJD(3);
t971 = t1209 * qJD(5);
t964 = t587 * t660 - t589 * t657;
t963 = qJD(2) * t301 + t446;
t961 = qJD(2) * t510 - t625;
t624 = t655 * t1036;
t397 = qJD(2) * t511 - t624;
t721 = t1030 / 0.2e1;
t734 = -qJD(3) + t1036;
t960 = qJD(6) + t1036;
t959 = t766 * t991;
t958 = t762 * t985;
t956 = t721 + t1152 / 0.2e1;
t955 = t751 + t1145 / 0.2e1;
t954 = t769 * t971;
t953 = t276 * t1028;
t951 = -t1013 / 0.2e1;
t949 = t1307 * t1028;
t947 = t1262 * t1028;
t946 = t767 * t1028;
t945 = t1036 - qJD(3) / 0.2e1;
t938 = t293 / 0.2e1 - t1139 / 0.2e1;
t937 = t469 / 0.2e1 - t1138 / 0.2e1;
t936 = t470 / 0.2e1 - t1137 / 0.2e1;
t934 = -t1153 / 0.2e1 + t134 / 0.2e1;
t933 = -t1145 - t1201;
t789 = t765 * t798;
t278 = t1006 + t789;
t431 = t1253 * t689 + t877;
t436 = t1253 * t691 + t933;
t774 = -t134 * t276 / 0.2e1 - t135 * t278 / 0.2e1 + t156 * t1252 + t157 * t1251 - t345 * t436 / 0.2e1 - t366 * t431 / 0.2e1;
t869 = t138 * t1233 + t139 * t644 / 0.2e1;
t1 = t774 + t869;
t45 = t276 * t277 + t278 * t279 + t431 * t436;
t931 = -t1 * qJD(1) + t45 * qJD(2);
t38 = t1319 * t856 + (t277 - t278) * t1262;
t773 = t1246 * t277 + t1247 * t278 + t1298 * t134 + t1299 * t157 + t1300 * t1320 + t1303 * t1319;
t861 = t643 * t478 / 0.2e1 + t474 * t1232;
t4 = t773 - t861;
t930 = t4 * qJD(1) + t38 * qJD(2);
t784 = t1251 * t1307 + t1299 * t135 + t1300 * t134 + t1303 * t277;
t790 = t1033 * t657 + t973 + t978;
t18 = t784 + t790;
t94 = t1262 * t279 - t277 * t856;
t928 = qJD(1) * t18 - qJD(2) * t94;
t927 = t586 * t587 + t588 * t589;
t925 = -t647 * t766 + t648 * t768;
t775 = -t788 / 0.2e1 - t1005 / 0.2e1;
t143 = t775 + t937;
t770 = t644 * t1212 + t771 / 0.2e1 + t1011 / 0.2e1;
t52 = -t770 + t938;
t921 = -qJD(1) * t52 - qJD(2) * t143;
t776 = -t789 / 0.2e1 - t1006 / 0.2e1;
t144 = -t776 + t936;
t781 = -t813 / 0.2e1 - t1009 / 0.2e1;
t819 = t233 / 0.2e1 + t1153 / 0.2e1 - t1141 / 0.2e1;
t53 = t781 - t819;
t920 = -t53 * qJD(1) + t144 * qJD(2);
t530 = -t933 + t1203;
t148 = t524 * t530 + t927;
t778 = t344 * t1235 + t347 * t1236 + t1177 / 0.2e1 + t426 * t530 / 0.2e1 + t448 * t524 / 0.2e1;
t867 = t1220 * t357 + t1221 * t356;
t23 = t982 - t778 + t867;
t919 = -t23 * qJD(1) + t148 * qJD(2);
t151 = -t1171 - t1172;
t918 = qJD(1) * t151 + qJD(2) * t73;
t917 = qJD(2) * t74 - t1322;
t159 = t1262 * t436 - t431 * t856;
t780 = t276 * t1212 + t1246 * t436 + t366 * t1298 + t345 * t1301 + t431 * t1302;
t823 = -t1140 / 0.2e1 + t1012 / 0.2e1;
t792 = t1215 * t643 + t823;
t25 = t780 + t792;
t916 = qJD(1) * t25 + qJD(2) * t159;
t160 = t1262 * t431 + t436 * t856;
t779 = t1212 * t278 + t1246 * t431 + t1298 * t345 + t1300 * t366 + t1303 * t436;
t824 = -t1142 / 0.2e1 - t1010 / 0.2e1;
t791 = t1215 * t644 + t824;
t28 = t779 + t791;
t915 = qJD(1) * t28 + qJD(2) * t160;
t793 = (t589 / 0.2e1 - t586 / 0.2e1) * t658 + (t1235 + t587 / 0.2e1) * t655;
t857 = t1220 * t660 + t1222 * t657;
t31 = (t344 / 0.2e1 + t1250) * t691 + (t1249 + t347 / 0.2e1) * t689 + t793 + t857;
t914 = t31 * qJD(1) - t1272;
t795 = (t1019 * t657 + t1021 * t660) * pkin(3);
t33 = (t368 / 0.2e1 + t1250) * t691 + (t1249 - t367 / 0.2e1) * t689 + t795 + t793;
t913 = t33 * qJD(1) - t1272;
t179 = -t1167 - t1168;
t912 = qJD(1) * t73 + qJD(2) * t179;
t911 = qJD(1) * t74 - t1321;
t910 = qJD(2) * t96 + t1322;
t200 = t1201 * t750 + t927;
t803 = t367 * t1236 - t368 * t588 / 0.2e1 - t1177 / 0.2e1;
t809 = t1018 * t389 - t1020 * t932;
t35 = t982 + (t1216 * t703 + t750 * t976 + t809) * pkin(3) + t803;
t909 = -t35 * qJD(1) + t200 * qJD(2);
t908 = qJD(1) * t96 + t1321;
t239 = t524 * t691 + t530 * t689;
t777 = t448 * t1226 + t530 * t1231 + t1163 / 0.2e1 + t866;
t64 = t1022 * t767 - t1116 + t777;
t907 = qJD(1) * t64 + qJD(2) * t239;
t240 = t524 * t689 - t530 * t691;
t560 = t1160 / 0.2e1;
t783 = t1225 * t448 + t1226 * t426 + t1229 * t530 + t1231 * t524;
t835 = t757 / 0.2e1 + t739 * t1214 - t1117;
t62 = t560 - t783 + t835;
t906 = -qJD(1) * t62 + qJD(2) * t240;
t800 = t973 - t1260;
t69 = t800 - t1258 + t1265;
t905 = -qJD(1) * t69 + t1269;
t87 = t800 - t1259;
t904 = -qJD(1) * t87 + t1269;
t902 = t734 * t767;
t812 = t1033 * t658 + t956;
t865 = t1232 * t1307 + t1233 * t471;
t119 = t812 + t865;
t811 = t1033 * t691 + t955;
t862 = t1232 * t1262 - t1233 * t856;
t161 = t811 + t862;
t901 = qJD(1) * t119 + qJD(2) * t161;
t561 = -t1160 / 0.2e1;
t858 = -t1219 * t655 + t1226 * t703;
t123 = t561 + (t658 * t1216 + (t1213 * t691 + t1019) * t767) * pkin(3) + t858 + t1117;
t507 = t1201 * t691 - t689 * t750;
t900 = -qJD(1) * t123 + qJD(2) * t507;
t801 = -t1163 / 0.2e1 + t703 * t1225 + t658 * t1219;
t124 = (t766 * t1230 + (t1213 * t689 + t1020) * t767) * pkin(3) + t801 + t1116;
t506 = t1201 * t689 + t691 * t750;
t899 = -qJD(1) * t124 + qJD(2) * t506;
t136 = t949 + t950 + (t1303 + t1302) * t765;
t173 = t947 + t948 + (t1300 + t1301) * t765;
t898 = qJD(1) * t136 + qJD(2) * t173;
t826 = t1027 * t471 + t1218 * t1307;
t831 = t715 / 0.2e1 + t767 * t944;
t206 = t826 + t831;
t825 = -t1027 * t856 + t1218 * t1262;
t281 = t808 + t825;
t897 = qJD(1) * t206 + qJD(2) * t281;
t224 = -t1022 * t658 + t655 * t975 + t721;
t335 = -t1022 * t691 + t689 * t975 + t751;
t896 = qJD(1) * t224 + qJD(2) * t335;
t891 = qJD(1) * t245 + qJD(2) * t340;
t371 = t1134 + 0.2e1 * t1234;
t890 = qJD(1) * t371 + t1087;
t796 = (-t1018 * t655 + t1021 * t658) * pkin(3);
t415 = pkin(3) * t976 + t796;
t794 = (t1019 * t689 + t1021 * t691) * pkin(3);
t482 = t1023 + t794;
t884 = qJD(1) * t415 + qJD(2) * t482;
t468 = t1234 + t1003 / 0.2e1;
t883 = qJD(1) * t468;
t518 = t1085 + t1089;
t878 = t1034 * t1307;
t875 = t1197 / 0.2e1 - t1200 / 0.2e1;
t697 = qJD(1) * t1013 - t756;
t873 = t1314 / 0.2e1 + t967 / 0.2e1;
t830 = t875 * t766;
t572 = t701 / 0.2e1 - t830;
t871 = pkin(2) * t1083 - qJD(1) * t572;
t829 = t875 * t768;
t573 = -t702 / 0.2e1 + t829;
t870 = pkin(2) * t1084 - qJD(1) * t573;
t868 = t1224 * t345 + t1228 * t431;
t860 = t1224 * t1307 + t1228 * t1262;
t859 = -t1224 * t471 + t1228 * t856;
t22 = t279 * t951 - t1016 / 0.2e1 + (-t1184 / 0.2e1 - t139 / 0.2e1) * t765 + t868;
t855 = qJD(1) * t22 + t1085 * t431;
t804 = t1212 * t279 + t1300 * t345 + t1303 * t431;
t40 = -t804 + t823;
t854 = qJD(1) * t40 - t1086 * t431;
t805 = t1184 / 0.2e1 + t345 * t1299 + t431 * t1247;
t41 = -t805 + t824;
t853 = qJD(1) * t41 + t1087 * t431;
t852 = t768 * t902;
t851 = qJD(2) * t169 + t1097 * t471;
t850 = qJD(1) * t169 - t1087 * t856;
t849 = qJD(2) * t170 - t1316;
t848 = qJD(1) * t170 + t995;
t196 = t977 - t859;
t843 = -qJD(1) * t196 + t1085 * t856;
t197 = t946 - t860;
t842 = -qJD(1) * t197 + t1085 * t1262;
t358 = t1215 - t387;
t841 = qJD(1) * t358 + t994;
t612 = -qJD(1) * t681 + t992;
t836 = qJD(2) * t512 + t1079 - t624;
t832 = (qJD(2) * t657 + t645) * t655;
t827 = t973 + t1260;
t590 = qJD(1) * t1127 * t766 + qJD(2) * t681;
t698 = t728 * t762;
t821 = qJD(1) * t698 + 0.2e1 * t959;
t799 = t1027 * t135 + t644 * t951;
t17 = t1015 / 0.2e1 + (-t157 / 0.2e1 + t934) * t765 + t799;
t447 = t1209 * t644 + t643 * t765;
t57 = t953 + t952 + (t278 / 0.2e1 + t1252) * t765;
t818 = -qJD(1) * t17 + qJD(2) * t57 - qJD(3) * t447;
t175 = t769 * t975 + t873 + t974;
t577 = t1223 + t695 / 0.2e1;
t817 = qJD(1) * t175 - qJD(2) * t577 - qJD(3) * t739;
t616 = t764 + t1255;
t807 = t616 * qJD(1) + t1085 * t658 - t1076;
t806 = qJD(2) * t302 + t446 + t879;
t785 = t1224 * t393 + t394 * t1227 + t1228 * t586 + t589 * t1229 + t1230 * t1296;
t746 = -t1038 / 0.2e1;
t745 = t1038 / 0.2e1;
t744 = -t1037 / 0.2e1;
t743 = t1037 / 0.2e1;
t696 = t1036 * t765 - t755;
t688 = t945 * t767;
t678 = t691 * qJD(4);
t668 = t972 + t697;
t667 = t765 * t960 - t755;
t654 = (qJD(6) / 0.2e1 + t945) * t767;
t571 = t586 * qJD(3);
t549 = t658 * t1069;
t527 = t738 + t702 / 0.2e1 + t829;
t526 = t1031 - t701 / 0.2e1 - t830;
t487 = t1223 - t695 / 0.2e1 + t876;
t481 = t751 + t794;
t435 = qJD(2) * t1254 + t1089 * t691;
t418 = -t676 - t490;
t414 = t721 + t796;
t398 = t513 * qJD(2) + t625;
t390 = t393 * qJD(3);
t360 = -t480 * qJD(2) + t1076 * t655;
t359 = t1215 + t387;
t339 = t340 * qJD(6);
t337 = (qJD(2) * t660 - t1079) * t658;
t336 = t689 * t1222 + t691 * t1220 + t1203 / 0.2e1 + t955;
t308 = t979 + t935;
t305 = -t1166 / 0.2e1 + t822;
t300 = -t514 * qJD(2) - t1295;
t294 = -qJD(3) * t511 + t1093;
t280 = t808 - t825;
t272 = t1175 / 0.2e1;
t238 = t245 * qJD(6);
t225 = -t655 * t1221 + t658 * t1220 + t1205 / 0.2e1 + t956;
t220 = -qJD(3) * t512 + t1037 * t691 - t1093;
t214 = -t1089 * t660 + t1287;
t205 = -t826 + t831;
t199 = t977 + t859;
t198 = t946 + t860;
t178 = t518 * t660 + t1287;
t176 = t739 * t1212 - t1125 / 0.2e1 + t873 - t974;
t174 = t498 + t1136 / 0.2e1 - t856 * t1218 + t947;
t162 = t811 - t862;
t154 = t474 * t1218 - t1007 / 0.2e1 + (t948 - t1136 / 0.2e1) * t769;
t147 = -t306 * qJD(2) + t468 * qJD(6) - t1317;
t146 = -t775 + t937;
t145 = t776 + t936;
t140 = t141 * qJD(6);
t137 = t441 + t949 + (-t1217 + t1218) * t471;
t126 = t1000 * t1215 + t658 * t751 + t691 * t721 + t1117 + t560 - t858;
t125 = t1001 * t1214 - t1023 * t655 + t689 * t721 + t1116 - t801;
t120 = t812 - t865;
t107 = -t802 + t810;
t93 = t307 * qJD(2) + t371 * qJD(6) + t1307 * t734;
t88 = t827 + t1259;
t70 = t827 + t1258 + t1265;
t65 = t741 * t1215 + t777 - t810;
t63 = t561 + t783 + t835;
t58 = t266 + t1185 / 0.2e1 + t278 * t1217 + t953;
t55 = t770 + t938;
t54 = t781 + t819;
t43 = t804 + t823;
t42 = t805 + t824;
t36 = pkin(3) * t809 + t703 * t751 + t721 * t750 + t272 - t803;
t34 = t1225 * t368 + t1226 * t367 + t785 + t795;
t32 = t1225 * t344 + t1227 * t347 + t785 + t857;
t27 = t779 - t791;
t26 = t780 - t792;
t24 = t272 + t778 + t867;
t21 = t139 * t1217 + t1016 / 0.2e1 + (t952 - t1185 / 0.2e1) * t769 + t868;
t19 = -t784 + t790;
t16 = t157 * t1217 - t1015 / 0.2e1 + t934 * t765 + t799;
t3 = t773 + t861;
t2 = -t774 + t869;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t984, t729 * qJD(2), 0, -t984, 0, 0, -pkin(1) * t1037, -pkin(1) * t1035, 0, 0, t763 * t984 - t958, -t698 * qJD(3) - 0.2e1 * t769 * t959, -t700 * qJD(2) + t767 * t989, t761 * t984 + t958, t699 * qJD(2) + t767 * t988, -t984, -qJD(2) * t403 - qJD(3) * t557, qJD(2) * t404 + qJD(3) * t556, -qJD(2) * t219, qJD(2) * t282, t337, t1304, t360, t832, -t1256, -t984, -t121 * qJD(2) - t192 * qJD(3) + t646 * t769, t122 * qJD(2) + t193 * qJD(3) - t987, qJD(2) * t67 + qJD(3) * t68 + t1283, qJD(2) * t77 + qJD(3) * t86 + qJD(4) * t158, t337, t360, -t1304, -t984, t1256, t832, t79 * qJD(2) + t117 * qJD(3) + (qJD(4) * t769 - t1070) * t658, t61 * qJD(2) + t66 * qJD(3) + t1067 * t655 + t1283, -t78 * qJD(2) - t118 * qJD(3) + t616 * qJD(5) + t987, qJD(2) * t56 + qJD(3) * t59 + qJD(4) * t142 - qJD(5) * t177 -(qJD(2) * t478 + t878) * t471, qJD(2) * t153 - t1034 * t191, t257 * qJD(2) + t769 * t878 (qJD(2) * t474 - t879) * t1307, t256 * qJD(2) + t769 * t879, -t984, t29 * qJD(2) + t48 * qJD(3) + t361 * qJD(5) + t76 * qJD(6) - t1051 * t769, -t30 * qJD(2) - t49 * qJD(3) + t362 * qJD(5) - t75 * qJD(6) - t1050 * t769, qJD(2) * t10 + qJD(3) * t12 + qJD(4) * t151 - qJD(5) * t229, qJD(2) * t11 + qJD(3) * t13 + qJD(4) * t44 - qJD(5) * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t983, t1039, t1035, -t983, -t1037, 0, -pkin(7) * t1035 - t1026, pkin(7) * t1037 - t1025, 0, 0, -t1042 + (t1038 * t763 + t992) * t769, t1257 * t769 - 0.2e1 * t767 * t985, t1037 * t766 - t1040, t1042 + (t1038 * t761 - t992) * t769, t991 + t1041, -t688, -t1053 + (t766 * t943 - t1029) * qJD(2) + t527 * qJD(3), t1052 + (t768 * t943 + t1032) * qJD(2) + t526 * qJD(3), qJD(2) * t925 - t1060, t1059 + (-pkin(2) * t759 + pkin(8) * t925) * qJD(2), t178, t1305, t220, t1310, -qJD(3) * t509 + t1286, -t688, -t1063 + (t657 * t750 + t689 * t704 - t1161) * qJD(2) + t125 * qJD(3) - t510 * qJD(4), t1062 + (t660 * t750 + t691 * t704 - t1158) * qJD(2) + t126 * qJD(3) + t1047, t1147 + (-t389 * t689 + t691 * t932 + t964) * qJD(2) + t34 * qJD(3) + t1266, t1124 + (t389 * t589 + t587 * t932 + t704 * t750) * qJD(2) + t36 * qJD(3) + t88 * qJD(4), t178, t220, -t1305, -t688, -qJD(3) * t514 - t1286, t1310, t1122 + (t427 * t689 + t524 * t657 - t1161) * qJD(2) + t65 * qJD(3) + t513 * qJD(4) + t359 * qJD(5), t1156 + (-t356 * t689 + t357 * t691 + t964) * qJD(2) + t32 * qJD(3) + t1266 - t512 * qJD(5), -t1123 + (-t427 * t691 - t524 * t660 + t1158) * qJD(2) + t63 * qJD(3) - t1047 + t549, t1164 + (t356 * t589 + t357 * t587 + t427 * t524) * qJD(2) + t24 * qJD(3) + t70 * qJD(4) + t107 * qJD(5), t478 * t889 + t1119, t1061 + (-t1262 * t478 - t474 * t856) * qJD(2) + t1195, qJD(3) * t307 + qJD(6) * t305 - t1037 * t856 + t1104, t474 * t881 + t1120, -qJD(3) * t302 + qJD(6) * t308 + t1037 * t1262 + t1105, -t654, t1183 + (t1262 * t346 + t277 * t767 + t431 * t474) * qJD(2) + t26 * qJD(3) - t301 * qJD(4) + t198 * qJD(5) + t43 * qJD(6), -t1182 + (t279 * t767 + t346 * t856 + t431 * t478) * qJD(2) + t27 * qJD(3) - t306 * qJD(4) + t199 * qJD(5) + t42 * qJD(6), t1189 + (-t1262 * t139 - t138 * t856 + t277 * t478 - t279 * t474) * qJD(2) + t3 * qJD(3) + t154 * qJD(5) + t1210, t1188 + (-t138 * t277 + t139 * t279 + t346 * t431) * qJD(2) + t2 * qJD(3) + t19 * qJD(4) + t21 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t590, -t821, t766 * t902, t590, t852, t743, qJD(2) * t527 - qJD(3) * t642 - t1091, qJD(2) * t526 + qJD(3) * t641 + t1092, 0, 0, t1279, t895, -t836, -t1279, t1275, t743, qJD(2) * t125 - t1108 - t390, qJD(2) * t126 - t1054 + t1107, t1146 + t34 * qJD(2) + (-t1192 * t658 + t1193 * t655) * t1194, t1121 + t36 * qJD(2) + (t1192 * t394 - t1193 * t393) * t1194 + t414 * qJD(4), t1279, -t836, -t895, t743, t300, -t1279, qJD(2) * t65 + t1113 - t390, t1149 + t32 * qJD(2) + (-t655 * t741 - t658 * t739) * qJD(3) - t1070, t63 * qJD(2) + t1054 - t1064 - t1067, t1157 + t24 * qJD(2) + (t393 * t741 + t394 * t739) * qJD(3) + t225 * qJD(4) + t176 * qJD(5), t849, t917, t93, t851, -t806, t743, t26 * qJD(2) + t156 * qJD(3) + t55 * qJD(6) + t1170 - t986, t27 * qJD(2) + t157 * qJD(3) + t54 * qJD(6) - t1169 - t954, t1187 + t3 * qJD(2) + (t1307 * t643 - t471 * t644) * qJD(3) + t137 * qJD(5), t1186 + t2 * qJD(2) + (t156 * t643 + t157 * t644) * qJD(3) + t120 * qJD(4) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t961, t397, t1278, qJD(2) * t88 + qJD(3) * t414 + t1110, 0, 0, 0, 0, 0, 0, t398, t1278, -t397, qJD(2) * t70 + qJD(3) * t225 + t1112, 0, 0, 0, 0, 0, 0, -t963, t147, t918, qJD(2) * t19 + qJD(3) * t120 + qJD(5) * t205 + t1190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t359 - t997, -t836, t807, qJD(2) * t107 + qJD(3) * t176 - t1109, 0, 0, 0, 0, 0, 0, t198 * qJD(2) - t755 * t769 + t1056, t199 * qJD(2) - t756 * t769 + t1055, qJD(2) * t154 + qJD(3) * t137 - t1106 + t238, qJD(2) * t21 + qJD(3) * t16 + qJD(4) * t205 - t1191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1280, t910, t305 * qJD(2) + t371 * qJD(3) - t1307 * t960, t1280, t308 * qJD(2) + t471 * t960 - t1082, t744, qJD(2) * t43 + qJD(3) * t55 - qJD(6) * t135 + t1143, qJD(2) * t42 + qJD(3) * t54 + qJD(4) * t468 + qJD(6) * t134 - t1144, t1072, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t983, -t1039, 0, t983, 0, 0, t1026, t1025, 0, 0, -t763 * t983 - t1042, 0.2e1 * t766 * t852, -t988 + t1040, -t761 * t983 + t1042, t989 - t1041, t688, qJD(3) * t573 + t1053, qJD(3) * t572 - t1052, t1060, -t1059, t214, -t1306, t294, t1309, -qJD(3) * t510 + t1273, t688, -qJD(3) * t124 - qJD(4) * t509 + t1063, -qJD(3) * t123 - t1062 + t1075, -qJD(3) * t33 - t1147 + t1266, -qJD(3) * t35 - qJD(4) * t87 - t1124, t214, t294, t1306, t688, -qJD(3) * t513 - t1273, t1309, qJD(3) * t64 + qJD(4) * t514 - qJD(5) * t358 - t1122, -qJD(3) * t31 - qJD(5) * t511 - t1156 + t1266, -qJD(3) * t62 - t1075 + t1123 + t549, -qJD(3) * t23 - qJD(4) * t69 - qJD(5) * t106 - t1164, t1095 * t478 + t1119, -t1061 + t1195, qJD(3) * t306 - qJD(6) * t304 - t1104, -t1097 * t474 + t1120, -qJD(3) * t301 - qJD(6) * t303 - t1105, t654, qJD(3) * t25 - qJD(4) * t302 - qJD(5) * t197 - qJD(6) * t40 - t1183, qJD(3) * t28 - qJD(4) * t307 - qJD(5) * t196 - qJD(6) * t41 + t1182, qJD(3) * t4 + qJD(5) * t155 - t1189 + t1210, -qJD(3) * t1 - qJD(4) * t18 + qJD(5) * t22 - t1188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t985, t728 * qJD(3), 0, -t985, 0, 0, -pkin(2) * t1078, -pkin(2) * t1077, 0, 0, -t576, t1311, 0, t576, 0, 0, t506 * qJD(3), t507 * qJD(3), t1276, qJD(3) * t200 + t1267, -t576, 0, -t1311, 0, 0, t576, qJD(3) * t239 - t1069 * t689, t1276, qJD(3) * t240 + qJD(5) * t1254, qJD(3) * t148 - t1069 * t524 + t1267, t1285 * t856, -t1034 * t223, 0, t880 * t1262, 0, 0, qJD(3) * t159 + t1065 * t431 + t1069 * t1262, qJD(3) * t160 - t1066 * t431 + t1069 * t856, qJD(3) * t38 + qJD(4) * t179, qJD(3) * t45 + qJD(4) * t94 + t1069 * t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t612, t1257, -t734 * t768, -t612, t734 * t766, t746, -pkin(8) * t1077 - t870, pkin(8) * t1078 - t871, 0, 0, -t1281, t894, t418, t1281, -t677 - t1048, t746, -t571 + t899, t900 - t1080 (-t1192 * t691 + t1193 * t689) * t1194 - t913 (t1192 * t588 - t1193 * t586) * t1194 + t481 * qJD(4) + t909, -t1281, t418, -t894, t746, t677 - t1045, t1281, -t571 + t907 (-t689 * t741 - t691 * t739) * qJD(3) - qJD(5) * t689 - t914, t906 + t1080 (t586 * t741 + t588 * t739) * qJD(3) + t336 * qJD(4) + t487 * qJD(5) + t919, t848, t911, t1099 - t1285, t850, t880 - t1103, t746, qJD(3) * t276 + qJD(6) * t146 + t916, qJD(3) * t278 + qJD(6) * t145 + t915 (t1262 * t643 + t644 * t856) * qJD(3) + t174 * qJD(5) + t930 (t276 * t643 + t278 * t644) * qJD(3) + t162 * qJD(4) + t58 * qJD(5) + t931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1049, t1046, t1277, qJD(3) * t481 + t904, 0, 0, 0, 0, 0, 0, t1044, t1277, -t1046, qJD(3) * t336 + t905, 0, 0, 0, 0, 0, 0, -t1102, -t1098, t912, qJD(3) * t162 + qJD(5) * t280 - t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t841, t418, t435, qJD(3) * t487 - t1085 * t524 - t1114, 0, 0, 0, 0, 0, 0, t842, t843, qJD(3) * t174 + t1111 + t339, qJD(3) * t58 + qJD(4) * t280 + t140 + t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1282, t908, -t1100 + t1285, t1282, -t1101 - t880, t745, qJD(3) * t146 - qJD(6) * t279 - t854, qJD(3) * t145 + qJD(6) * t277 - t853, t1071, t1073; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590, t821 (-t1038 * t766 + t1083) * t769, -t590 (-t996 - t1084) * t769, t743, -qJD(2) * t573 + t1091, -qJD(2) * t572 - t1092, 0, 0, -t1279, -t895, t397, t1279, t961, t743, qJD(2) * t124 + t1108 - t646, qJD(2) * t123 + t1043 - t1107, qJD(2) * t33 - t1146, qJD(2) * t35 + qJD(4) * t415 - t1121, -t1279, t397, t895, t743, t398, t1279, -qJD(2) * t64 - t1113 - t646, qJD(2) * t31 - t1149, t62 * qJD(2) - t1043 + t1064 - t1067, qJD(2) * t23 - qJD(4) * t224 - qJD(5) * t175 - t1157, -t849, -t917, t147, -t851, t963, t743, -t25 * qJD(2) - t52 * qJD(6) - t1170 - t1308, -t28 * qJD(2) - t53 * qJD(6) + t1050 + t1169 - t954, -qJD(2) * t4 - qJD(5) * t136 - t1187, qJD(2) * t1 - qJD(4) * t119 + qJD(5) * t17 - t1186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t612, -t1257, t768 * t1036, t612, -t766 * t1036, t745, t870, t871, 0, 0, t1281, -t894, t490, -t1281, t1048, t745, -t678 - t899, -t900 + t1074, t913, qJD(4) * t482 - t909, t1281, t490, t894, t745, t1045, -t1281, -t678 - t907, t914, -t906 - t1074, -qJD(4) * t335 + qJD(5) * t577 - t919, -t848, -t911, -t1099, -t850, t1103, t745, -qJD(6) * t143 - t1291 - t916, qJD(6) * t144 + t1284 - t915, -qJD(5) * t173 - t930, -qJD(4) * t161 - qJD(5) * t57 - t931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t739 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(6) * t644 + t1068, -t643 * qJD(6) + t971, 0, qJD(5) * t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518, -t517, 0, t884, 0, 0, 0, 0, 0, 0, -t518, 0, t517, -t896, 0, 0, 0, 0, 0, 0, -t889, t881, 0, -t901; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t734, -t817, 0, 0, 0, 0, 0, 0, -t696, -t697, -t898, -t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t883, 0, 0, 0, t1034 * t644 + t921, -t1034 * t643 + t920, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1275, -t836, -t1278, qJD(2) * t87 - qJD(3) * t415 - t1110, 0, 0, 0, 0, 0, 0, t300, -t1278, t836, qJD(2) * t69 + qJD(3) * t224 - qJD(5) * t658 - t1112, 0, 0, 0, 0, 0, 0, t806, t93, -t918, qJD(2) * t18 + qJD(3) * t119 + qJD(5) * t206 - t1190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t677 + t1049, -t1264, -t1277, -qJD(3) * t482 - t904, 0, 0, 0, 0, 0, 0, t677 - t1044, -t1277, t1264, qJD(3) * t335 - t1069 - t905, 0, 0, 0, 0, 0, 0, -t880 + t1102, t1098 - t1285, -t912, qJD(3) * t161 + qJD(5) * t281 + t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, t517, 0, -t884, 0, 0, 0, 0, 0, 0, t518, 0, -t517, t896, 0, 0, 0, 0, 0, 0, t889, -t881, 0, t901; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518, 0, 0, 0, 0, 0, 0, 0, 0, 0, t897; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t889, t890, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t358 + t997, t397, -t807, qJD(2) * t106 + qJD(3) * t175 + t1109 + t646, 0, 0, 0, 0, 0, 0, t197 * qJD(2) + t1034 * t1131 - t1056, -t1055 + t196 * qJD(2) + (t756 - t972) * t769, -qJD(2) * t155 + qJD(3) * t136 + t1106 + t238, -qJD(2) * t22 - qJD(3) * t17 - qJD(4) * t206 + t1191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t841, t490, -t435, t1114 - qJD(3) * t577 + (qJD(2) * t524 + qJD(4)) * t691, 0, 0, 0, 0, 0, 0, -t842, -t843, qJD(3) * t173 - t1111 + t339, qJD(3) * t57 - qJD(4) * t281 + t140 - t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t734, t817, 0, 0, 0, 0, 0, 0, t667, t668, t898, t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t897; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t667, -t668, t891, t1088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, -t910, t304 * qJD(2) - t468 * qJD(3) + t1317, -t1280, t303 * qJD(2) - t446, t744, t40 * qJD(2) + t52 * qJD(3) - t1143 + t1308, t41 * qJD(2) + t53 * qJD(3) - t371 * qJD(4) + t1144 + t954, -t1072, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, -t908, t1100, -t1282, t1101, t746, qJD(3) * t143 + t1291 + t854, -qJD(3) * t144 - t1284 + t853, -t1071, -t1073; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t883, 0, 0, 0, -qJD(3) * t644 - t1068 - t921, t643 * qJD(3) - t920 - t971, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t889, -t890, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t696, t697, -t891, -t1088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
