% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPPR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:36:09
% EndTime: 2019-03-09 15:36:46
% DurationCPUTime: 25.28s
% Computational Cost: add. (12011->773), mult. (25816->1000), div. (0->0), fcn. (27485->8), ass. (0->557)
t636 = qJD(3) - qJD(6);
t487 = cos(qJ(2));
t779 = -t487 / 0.2e1;
t483 = sin(qJ(3));
t766 = -qJ(4) - pkin(8);
t432 = t766 * t483;
t486 = cos(qJ(3));
t433 = t766 * t486;
t480 = sin(pkin(10));
t481 = cos(pkin(10));
t338 = t481 * t432 + t480 * t433;
t721 = t481 * t483;
t725 = t480 * t486;
t408 = t721 + t725;
t271 = pkin(9) * t408 + t338;
t482 = sin(qJ(6));
t485 = cos(qJ(6));
t720 = t481 * t486;
t406 = t480 * t483 - t720;
t722 = t481 * t433;
t726 = t480 * t432;
t822 = -t722 + t726;
t823 = pkin(9) * t406 + t822;
t856 = -t482 * t271 + t485 * t823;
t861 = t779 * t856;
t860 = t636 * t856;
t855 = t485 * t271 + t482 * t823;
t859 = t636 * t855;
t484 = sin(qJ(2));
t378 = t408 * t484;
t704 = t484 * t486;
t706 = t483 * t484;
t381 = -t480 * t706 + t481 * t704;
t260 = -t482 * t378 - t485 * t381;
t694 = t485 * t378;
t709 = t482 * t381;
t844 = -t694 + t709;
t81 = -t260 ^ 2 + t844 ^ 2;
t857 = qJD(1) * t81;
t393 = t482 * t406;
t692 = t485 * t408;
t303 = t692 + t393;
t826 = -t485 * t406 + t482 * t408;
t80 = t303 ^ 2 - t826 ^ 2;
t854 = qJD(2) * t80;
t422 = pkin(3) * t706 + t484 * pkin(7);
t589 = t381 * qJ(5) - t422;
t810 = -pkin(4) - pkin(5);
t183 = t378 * t810 + t589;
t851 = t183 * t844;
t638 = t487 * qJD(1);
t850 = t638 * t844;
t676 = qJD(1) * t260;
t849 = t676 * t844;
t848 = -t303 / 0.2e1;
t847 = -t338 / 0.2e1;
t798 = -t694 / 0.2e1;
t657 = qJD(5) * t487;
t621 = t482 * t657;
t649 = t260 * qJD(4);
t846 = t621 - t649;
t671 = qJD(2) * t303;
t845 = t671 - t676;
t797 = t378 / 0.2e1;
t795 = -t381 / 0.2e1;
t793 = -t406 / 0.2e1;
t792 = t406 / 0.2e1;
t791 = -t408 / 0.2e1;
t803 = t826 / 0.2e1;
t841 = t183 * t260;
t238 = t260 * t638;
t838 = t671 * t826;
t655 = qJD(6) * t826;
t837 = t826 * qJD(3) - t655;
t835 = qJD(2) * t826;
t667 = qJD(3) * t260;
t834 = qJD(4) * t826;
t376 = t381 ^ 2;
t827 = t378 ^ 2 + t376;
t833 = qJD(4) * t827;
t231 = pkin(4) * t378 - t589;
t465 = -t486 * pkin(3) - pkin(2);
t547 = t408 * qJ(5) - t465;
t291 = pkin(4) * t406 - t547;
t778 = t487 / 0.2e1;
t790 = t408 / 0.2e1;
t794 = t381 / 0.2e1;
t500 = t231 * t790 + t291 * t794 + t778 * t822;
t567 = t378 * t406 + t381 * t408;
t832 = qJD(1) * t827 + qJD(2) * t567;
t402 = t408 ^ 2;
t825 = t406 ^ 2 + t402;
t831 = qJD(1) * t567 + qJD(2) * t825;
t830 = qJD(4) * t825;
t829 = qJD(6) * t260 - t667;
t789 = -t722 / 0.2e1;
t705 = t483 * t487;
t436 = t480 * t705;
t690 = t486 * t487;
t383 = t481 * t690 - t436;
t736 = t383 * qJ(5);
t380 = t408 * t487;
t774 = t380 * pkin(4);
t824 = -t736 / 0.2e1 + t774 / 0.2e1;
t568 = -t338 * t408 - t406 * t822;
t818 = qJD(2) * t568;
t816 = qJD(4) * t568;
t815 = t567 * qJD(4);
t814 = -t822 * t378 / 0.2e1 + t338 * t795;
t591 = -pkin(2) * t487 - t484 * pkin(8);
t431 = -pkin(1) + t591;
t410 = t486 * t431;
t590 = -qJ(4) * t704 + t410;
t777 = pkin(7) * t483;
t310 = (-pkin(3) - t777) * t487 + t590;
t632 = pkin(7) * t690;
t332 = t632 + (-qJ(4) * t484 + t431) * t483;
t727 = t480 * t332;
t199 = t481 * t310 - t727;
t292 = t480 * t310;
t723 = t481 * t332;
t200 = t723 + t292;
t813 = t199 * t791 + t200 * t793;
t689 = t487 * qJ(5);
t182 = t200 - t689;
t185 = t487 * pkin(4) - t199;
t812 = t182 * t792 + t185 * t791;
t476 = t483 ^ 2;
t478 = t486 ^ 2;
t443 = t478 - t476;
t640 = t484 * qJD(1);
t626 = t486 * t640;
t811 = qJD(2) * t443 - 0.2e1 * t483 * t626;
t635 = pkin(7) * t705;
t331 = t590 - t635;
t728 = t480 * t331;
t213 = t723 + t728;
t809 = -t213 / 0.2e1;
t214 = t481 * t331 - t727;
t808 = t214 / 0.2e1;
t235 = t406 * t810 + t547;
t807 = t235 / 0.2e1;
t806 = -t844 / 0.2e1;
t805 = -t260 / 0.2e1;
t804 = -t826 / 0.2e1;
t801 = t303 / 0.2e1;
t800 = t822 / 0.2e1;
t799 = t338 / 0.2e1;
t611 = t393 / 0.2e1;
t454 = pkin(3) * t480 + qJ(5);
t788 = -t454 / 0.2e1;
t787 = t454 / 0.2e1;
t456 = -pkin(3) * t481 - pkin(4);
t786 = t456 / 0.2e1;
t785 = -t480 / 0.2e1;
t784 = t480 / 0.2e1;
t783 = -t481 / 0.2e1;
t782 = -t483 / 0.2e1;
t781 = -t484 / 0.2e1;
t780 = t484 / 0.2e1;
t775 = t378 * pkin(9);
t773 = t381 * pkin(4);
t772 = t381 * pkin(9);
t771 = t408 * pkin(4);
t770 = t483 * pkin(3);
t769 = t484 * pkin(2);
t768 = t484 * pkin(4);
t767 = t487 * pkin(8);
t38 = 0.2e1 * t260 * t848 + t804 * t844 + t806 * t826;
t49 = t260 * t303 + t826 * t844;
t765 = t38 * qJD(3) + t49 * qJD(6);
t75 = -t260 * t803 + t801 * t844;
t76 = -t260 * t804 + t844 * t848;
t764 = t75 * qJD(3) + t76 * qJD(6);
t763 = pkin(3) * qJD(3);
t451 = pkin(3) * t705;
t473 = t487 * pkin(7);
t423 = t473 + t451;
t588 = -t423 + t736;
t184 = t380 * t810 + t588;
t364 = t485 * t380;
t708 = t482 * t383;
t263 = -t364 + t708;
t504 = t487 * pkin(5) + t185 - t772;
t105 = t485 * t504;
t132 = t182 + t775;
t718 = t482 * t132;
t55 = -t105 + t718;
t434 = -t767 + t769;
t420 = t483 * t434;
t634 = pkin(7) * t704;
t333 = -qJ(4) * t705 + t420 - t634;
t324 = t480 * t333;
t421 = t486 * t434;
t453 = pkin(7) * t706;
t323 = t484 * pkin(3) - qJ(4) * t690 + t421 + t453;
t724 = t481 * t323;
t209 = -t324 + t724;
t128 = -t383 * pkin(9) + t484 * t810 - t209;
t703 = t485 * t128;
t298 = t480 * t323;
t325 = t481 * t333;
t210 = t325 + t298;
t471 = t484 * qJ(5);
t192 = t471 + t210;
t133 = pkin(9) * t380 + t192;
t717 = t482 * t133;
t7 = (t703 - t717) * t487 + t55 * t484 + t184 * t844 + t183 * t263;
t762 = t7 * qJD(1);
t693 = t485 * t383;
t710 = t482 * t380;
t266 = t693 + t710;
t495 = t482 * t504;
t702 = t485 * t132;
t56 = t495 + t702;
t701 = t485 * t133;
t719 = t482 * t128;
t8 = (t701 + t719) * t487 - t56 * t484 + t184 * t260 - t183 * t266;
t761 = t8 * qJD(1);
t633 = pkin(3) * t704;
t737 = t378 * qJ(5);
t545 = -t633 - t737;
t239 = -t545 + t773;
t748 = t231 * t381;
t52 = t213 * t487 + t239 * t378 + t748;
t760 = qJD(1) * t52;
t57 = -t182 * t378 + t185 * t381;
t759 = qJD(1) * t57;
t68 = -t199 * t381 - t200 * t378;
t758 = qJD(1) * t68;
t79 = t182 * t487 + t748;
t757 = qJD(1) * t79;
t198 = t381 * t810 + t545;
t148 = t213 + t775;
t700 = t485 * t148;
t149 = t214 + t772;
t715 = t482 * t149;
t66 = -t700 + t715;
t19 = t198 * t844 - t487 * t66 + t841;
t754 = t19 * qJD(1);
t699 = t485 * t149;
t716 = t482 * t148;
t67 = t699 + t716;
t20 = t198 * t260 + t487 * t67 - t851;
t752 = t20 * qJD(1);
t750 = t213 * t338;
t749 = t214 * t822;
t193 = -t209 - t768;
t232 = -t588 + t774;
t25 = t182 * t192 + t185 * t193 + t231 * t232;
t747 = t25 * qJD(1);
t26 = t182 * t214 + t185 * t213 + t231 * t239;
t746 = t26 * qJD(1);
t27 = -t182 * t380 + t185 * t383 - t192 * t378 + t193 * t381;
t745 = t27 * qJD(1);
t744 = t826 * t487;
t743 = t303 * t487;
t32 = (-t182 + t213) * t381 + (-t185 - t214) * t378;
t742 = t32 * qJD(1);
t33 = -t199 * t383 - t200 * t380 - t209 * t381 - t210 * t378;
t741 = t33 * qJD(1);
t34 = (-t200 + t213) * t381 + (t199 - t214) * t378;
t738 = t34 * qJD(1);
t39 = -t487 * t55 + t851;
t735 = t39 * qJD(1);
t40 = -t487 * t56 - t841;
t734 = t40 * qJD(1);
t733 = t406 * qJ(5);
t41 = t199 * t209 + t200 * t210 + t422 * t423;
t732 = t41 * qJD(1);
t42 = -t182 * t484 + t192 * t487 + t231 * t383 + t232 * t381;
t731 = t42 * qJD(1);
t43 = -t185 * t484 + t193 * t487 + t231 * t380 + t232 * t378;
t730 = t43 * qJD(1);
t44 = -t199 * t213 + t200 * t214 + t422 * t633;
t729 = t44 * qJD(1);
t477 = t484 ^ 2;
t691 = t486 * t477;
t585 = t324 / 0.2e1 - t724 / 0.2e1;
t510 = -t768 / 0.2e1 + t585;
t50 = t500 + t510;
t688 = t50 * qJD(1);
t53 = t214 * t487 - t231 * t378 + t239 * t381;
t687 = t53 * qJD(1);
t65 = t260 * t263 - t266 * t844;
t686 = t65 * qJD(1);
t479 = t487 ^ 2;
t444 = t479 - t477;
t120 = -t263 * t487 + t484 * t844;
t684 = qJD(1) * t120;
t121 = t260 * t484 + t266 * t487;
t683 = qJD(1) * t121;
t584 = t364 / 0.2e1 - t708 / 0.2e1;
t615 = t303 * t778;
t150 = -t615 - t584;
t682 = qJD(1) * t150;
t151 = -t615 + t584;
t681 = qJD(1) * t151;
t152 = t743 / 0.2e1 + t584;
t680 = qJD(1) * t152;
t530 = t710 / 0.2e1 + t693 / 0.2e1;
t153 = t744 / 0.2e1 + t530;
t679 = qJD(1) * t153;
t614 = t826 * t778;
t155 = t614 + t530;
t678 = qJD(1) * t155;
t156 = t614 - t530;
t677 = qJD(1) * t156;
t369 = -t410 + t635;
t313 = -t369 * t487 - t477 * t777;
t675 = qJD(1) * t313;
t370 = t483 * t431 + t632;
t314 = -pkin(7) * t691 - t370 * t487;
t674 = qJD(1) * t314;
t673 = qJD(1) * t381;
t295 = t611 - t393 / 0.2e1;
t672 = qJD(2) * t295;
t670 = qJD(2) * t408;
t669 = qJD(2) * t483;
t668 = qJD(2) * t486;
t666 = qJD(3) * t406;
t665 = qJD(3) * t483;
t664 = qJD(3) * t486;
t663 = qJD(3) * t487;
t662 = qJD(4) * t381;
t661 = qJD(5) * t378;
t660 = qJD(5) * t408;
t659 = qJD(5) * t482;
t658 = qJD(5) * t485;
t656 = qJD(6) * t295;
t654 = qJD(6) * t303;
t196 = t381 * t844 + t479 * t482;
t653 = t196 * qJD(1);
t197 = -t260 * t381 + t479 * t485;
t652 = t197 * qJD(1);
t219 = t369 * t484 + (-t453 + t421) * t487;
t651 = t219 * qJD(1);
t220 = t420 * t487 + (-t370 + t632) * t484;
t650 = t220 * qJD(1);
t648 = t844 * qJD(4);
t533 = t725 / 0.2e1 + t721 / 0.2e1;
t281 = (t791 + t533) * t487;
t647 = t281 * qJD(1);
t282 = -t436 / 0.2e1 + (t720 / 0.2e1 + t793) * t487;
t646 = t282 * qJD(1);
t283 = t436 / 0.2e1 + (-t720 / 0.2e1 + t793) * t487;
t645 = t283 * qJD(1);
t644 = t378 * qJD(4);
t418 = t444 * t483;
t643 = t418 * qJD(1);
t419 = t479 * t486 - t691;
t642 = t419 * qJD(1);
t641 = t444 * qJD(1);
t469 = t482 * qJD(3);
t639 = t484 * qJD(2);
t470 = t485 * qJD(3);
t637 = t487 * qJD(2);
t631 = pkin(1) * t640;
t630 = pkin(1) * t638;
t466 = t770 / 0.2e1;
t628 = t786 - pkin(4) / 0.2e1;
t627 = t378 * t673;
t625 = t483 * t668;
t624 = t486 * t639;
t623 = t483 * t663;
t622 = t486 * t663;
t620 = t485 * t657;
t619 = t483 * t664;
t618 = t484 * t637;
t617 = t484 * t638;
t616 = -t749 / 0.2e1;
t612 = -t715 / 0.2e1;
t610 = t482 * t780;
t609 = -t704 / 0.2e1;
t608 = -t699 / 0.2e1;
t607 = t485 * t781;
t606 = qJ(5) / 0.2e1 + t787;
t605 = t148 / 0.2e1 - t132 / 0.2e1;
t602 = -t292 / 0.2e1 - t723 / 0.2e1;
t601 = t451 / 0.2e1 + t473 / 0.2e1;
t600 = -t338 * t383 - t380 * t822;
t599 = qJD(2) * t150 + t238;
t359 = t378 * t638;
t598 = qJD(2) * t282 - t359;
t597 = -pkin(5) + t456;
t596 = t636 * t487;
t439 = t633 / 0.2e1;
t449 = -qJD(3) + t638;
t595 = qJD(6) + t638;
t594 = t483 * t624;
t592 = t638 - qJD(3) / 0.2e1;
t371 = t454 * t482 - t485 * t597;
t587 = -t105 / 0.2e1 + t371 * t779;
t586 = t723 / 0.2e1 + t728 / 0.2e1;
t583 = -t733 - t770;
t297 = -t583 + t771;
t490 = t182 * t799 + t185 * t800 - t750 / 0.2e1 + t231 * t297 / 0.2e1 + t239 * t291 / 0.2e1;
t542 = t192 * t787 + t193 * t786;
t1 = t616 - t490 + t542;
t63 = t291 * t297;
t581 = -t1 * qJD(1) + t63 * qJD(2);
t237 = t408 * t810 + t583;
t492 = -t861 + t183 * t848 + t198 * t803 + t260 * t807 + t237 * t844 / 0.2e1;
t531 = -t717 / 0.2e1 + t703 / 0.2e1;
t499 = t371 * t781 + t531;
t3 = t492 + t499;
t69 = -t235 * t303 + t237 * t826;
t580 = qJD(1) * t3 + qJD(2) * t69;
t491 = t183 * t803 + t198 * t801 + t237 * t805 + t779 * t855 + t807 * t844;
t372 = t485 * t454 + t482 * t597;
t532 = -t719 / 0.2e1 - t701 / 0.2e1;
t498 = t372 * t781 + t532;
t6 = t491 + t498;
t70 = t235 * t826 + t237 * t303;
t579 = qJD(1) * t6 + qJD(2) * t70;
t496 = (t799 + t847) * t378;
t536 = t380 * t788 + t383 * t786;
t9 = (t182 / 0.2e1 + t809) * t408 + (t808 + t185 / 0.2e1) * t406 + t496 + t536;
t578 = t9 * qJD(1);
t511 = (t380 * t785 + t383 * t783) * pkin(3);
t11 = (t200 / 0.2e1 + t809) * t408 + (t808 - t199 / 0.2e1) * t406 + t511 + t496;
t577 = t11 * qJD(1);
t501 = t199 * t800 + t200 * t847 + t750 / 0.2e1;
t541 = t210 * t784 + t209 * t481 / 0.2e1;
t13 = t616 + (t422 * t782 + t465 * t609 + t541) * pkin(3) + t501;
t86 = t465 * t770;
t576 = -t13 * qJD(1) + t86 * qJD(2);
t493 = t372 * t778 - t495 / 0.2e1;
t21 = t485 * t605 + t493 + t612;
t575 = t21 * qJD(1);
t22 = -t482 * t605 + t587 + t608;
t574 = t22 * qJD(1);
t573 = qJD(2) * t38 - t857;
t572 = qJD(1) * t38 + t854;
t571 = qJD(2) * t49 + t857;
t570 = qJD(1) * t49 - t854;
t108 = t291 * t408 + t297 * t406;
t488 = t239 * t792 + t297 * t797 + t500;
t30 = t484 * t628 + t488 + t585;
t566 = qJD(1) * t30 + qJD(2) * t108;
t109 = t291 * t406 - t297 * t408;
t489 = t231 * t792 + t239 * t791 + t291 * t797 + t297 * t795 + t338 * t779;
t509 = t298 / 0.2e1 + t325 / 0.2e1 + t471 / 0.2e1 + t454 * t780;
t28 = -t489 + t509;
t565 = -qJD(1) * t28 + qJD(2) * t109;
t497 = t601 - t814;
t35 = t497 + t812 + t824;
t564 = -qJD(1) * t35 + t818;
t45 = t497 - t813;
t563 = -qJD(1) * t45 + t818;
t178 = t406 * t606 - t408 * t628 + t466;
t99 = t378 * t606 - t381 * t628 + t439;
t562 = qJD(1) * t99 + qJD(2) * t178;
t561 = t449 * t484;
t203 = t709 + 0.2e1 * t798;
t560 = qJD(1) * t203 + t835;
t234 = t692 + 0.2e1 * t611;
t559 = qJD(2) * t234 - t676;
t535 = -t378 * t784 + t381 * t783;
t225 = (t609 + t535) * pkin(3);
t534 = t406 * t785 + t408 * t783;
t268 = (t782 + t534) * pkin(3);
t554 = qJD(1) * t225 + qJD(2) * t268;
t259 = t798 + t694 / 0.2e1;
t553 = qJD(1) * t259;
t551 = qJD(1) * t844 + t835;
t550 = -qJD(1) * t378 - qJD(2) * t406;
t286 = t670 + t673;
t549 = -qJD(3) * t303 + qJD(6) * t234;
t548 = t636 * t844;
t546 = t767 / 0.2e1 - t769 / 0.2e1;
t517 = t546 * t483;
t326 = t420 / 0.2e1 - t517;
t544 = pkin(2) * t668 - qJD(1) * t326;
t516 = t546 * t486;
t327 = -t421 / 0.2e1 + t516;
t543 = pkin(2) * t669 - qJD(1) * t327;
t539 = t790 * t844 + t794 * t826;
t538 = -t260 * t790 + t303 * t794;
t537 = -t378 * t791 + t381 * t792;
t502 = t183 * t801 + t235 * t805 + t861;
t15 = -t502 + t531;
t529 = qJD(1) * t15 - t235 * t671;
t503 = t183 * t804 + t235 * t806 + t778 * t855;
t16 = -t503 + t532;
t528 = qJD(1) * t16 + t235 * t835;
t527 = -qJD(2) * t76 - t849;
t526 = qJD(2) * t75 - t849;
t525 = -qJD(1) * t76 + t838;
t83 = t607 - t539;
t524 = -qJD(1) * t83 + t670 * t826;
t523 = qJD(1) * t75 + t838;
t82 = t610 - t538;
t522 = -qJD(1) * t82 + t303 * t670;
t521 = t486 * t561;
t194 = t781 + t537;
t520 = qJD(1) * t194 + t406 * t670;
t399 = (t476 / 0.2e1 - t478 / 0.2e1) * t484;
t519 = -qJD(1) * t399 + t625;
t518 = qJD(2) * t283 + qJD(3) * t378 - t359;
t515 = t601 + t814;
t514 = qJD(1) * t483 * t691 + qJD(2) * t399;
t417 = t443 * t477;
t513 = qJD(1) * t417 + 0.2e1 * t594;
t330 = t789 + t722 / 0.2e1;
t77 = t487 * t606 + t586 + t602;
t508 = qJD(1) * t77 - qJD(2) * t330 - qJD(3) * t454;
t351 = t479 + t376;
t506 = t351 * qJD(1) + t381 * t670 - t663;
t505 = qJD(2) * t151 + t238 + t829;
t494 = t213 * t790 + t214 * t793 + (t794 + t795) * t822;
t461 = -t640 / 0.2e1;
t460 = t640 / 0.2e1;
t459 = -t639 / 0.2e1;
t458 = t639 / 0.2e1;
t416 = t485 * t638 - t470;
t415 = t482 * t638 - t469;
t405 = t592 * t484;
t396 = t399 * qJD(3);
t390 = t485 * t595 - t470;
t389 = t482 * t595 - t469;
t377 = (qJD(6) / 0.2e1 + t592) * t484;
t306 = t381 * t660;
t294 = t453 + t421 / 0.2e1 + t516;
t293 = t634 - t420 / 0.2e1 - t517;
t284 = t408 * t778 + t487 * t533;
t273 = 0.2e1 * t789 + t726;
t267 = pkin(3) * t534 + t466;
t236 = qJD(2) * t402 + t408 * t673;
t224 = pkin(3) * t535 + t439;
t195 = t781 - t537;
t179 = t406 * t788 + t408 * t786 + t466 + t733 / 0.2e1 + t771 / 0.2e1;
t157 = -t743 / 0.2e1 + t584;
t154 = -t744 / 0.2e1 + t530;
t131 = t749 / 0.2e1;
t100 = -t378 * t787 + t381 * t786 + t439 + t737 / 0.2e1 + t773 / 0.2e1;
t85 = t610 + t538;
t84 = t607 + t539;
t78 = t454 * t779 - t689 / 0.2e1 + t586 - t602;
t62 = -t155 * qJD(2) + t259 * qJD(6) - t850;
t51 = -t500 + t510;
t47 = t156 * qJD(2) + t203 * qJD(6) + t449 * t844;
t46 = t515 + t813;
t36 = t515 - t812 + t824;
t31 = t456 * t781 + t488 - t510;
t29 = t489 + t509;
t24 = t702 / 0.2e1 + t612 + t700 / 0.2e1 - t493;
t23 = -t718 / 0.2e1 + t608 - t716 / 0.2e1 - t587;
t18 = t502 + t531;
t17 = t503 + t532;
t14 = pkin(3) * t541 + t422 * t466 + t439 * t465 + t131 - t501;
t12 = t199 * t792 + t200 * t791 + t494 + t511;
t10 = t182 * t791 + t185 * t793 + t494 + t536;
t5 = t491 - t498;
t4 = t492 - t499;
t2 = t131 + t490 + t542;
t37 = [0, 0, 0, t618, t444 * qJD(2), 0, 0, 0, -pkin(1) * t639, -pkin(1) * t637, -t477 * t619 + t478 * t618, -t417 * qJD(3) - 0.2e1 * t487 * t594, -t419 * qJD(2) + t484 * t623, t418 * qJD(2) + t484 * t622, -t618, -qJD(2) * t219 - qJD(3) * t314, qJD(2) * t220 + qJD(3) * t313, qJD(2) * t33 + qJD(3) * t34 + t833, qJD(2) * t41 + qJD(3) * t44 + qJD(4) * t68, t43 * qJD(2) + t52 * qJD(3) + (qJD(4) * t487 - t661) * t381, t27 * qJD(2) + t32 * qJD(3) + t378 * t657 + t833, -t42 * qJD(2) - t53 * qJD(3) + t351 * qJD(5) + t487 * t644, qJD(2) * t25 + qJD(3) * t26 + qJD(4) * t57 - qJD(5) * t79 -(qJD(2) * t266 + t548) * t260, qJD(2) * t65 - t636 * t81, t121 * qJD(2) + t487 * t548, t120 * qJD(2) + t487 * t829, -t618, t7 * qJD(2) + t19 * qJD(3) + t196 * qJD(5) + t40 * qJD(6) - t487 * t649, -t8 * qJD(2) - t20 * qJD(3) + t197 * qJD(5) - t39 * qJD(6) - t487 * t648; 0, 0, 0, t617, t641, t637, -t639, 0, -pkin(7) * t637 - t631, pkin(7) * t639 - t630, -t396 + (t478 * t640 + t625) * t487, -0.2e1 * t484 * t619 + t487 * t811, t483 * t639 - t642, t624 + t643, -t405, -t651 + (t483 * t591 - t632) * qJD(2) + t294 * qJD(3), t650 + (t486 * t591 + t635) * qJD(2) + t293 * qJD(3), t741 + (-t209 * t408 - t210 * t406 + t600) * qJD(2) + t12 * qJD(3) + t815, t732 + (t209 * t338 + t210 * t822 + t423 * t465) * qJD(2) + t14 * qJD(3) + t46 * qJD(4), t730 + (t232 * t406 + t291 * t380 + t338 * t484) * qJD(2) + t31 * qJD(3) + t284 * qJD(4) + t195 * qJD(5), t745 + (-t192 * t406 + t193 * t408 + t600) * qJD(2) + t10 * qJD(3) + t815 - t283 * qJD(5), -t731 + (-t232 * t408 - t291 * t383 + t484 * t822) * qJD(2) + t29 * qJD(3) - t282 * qJD(4) + t306, t747 + (t192 * t822 - t193 * t338 + t232 * t291) * qJD(2) + t2 * qJD(3) + t36 * qJD(4) + t51 * qJD(5), t266 * t845 + t764, t686 + (-t263 * t303 - t266 * t826) * qJD(2) + t765, qJD(3) * t156 + qJD(6) * t154 - t303 * t639 + t683, -qJD(3) * t151 + qJD(6) * t157 + t639 * t826 + t684, -t377, t762 + (t184 * t826 + t235 * t263 + t484 * t855) * qJD(2) + t4 * qJD(3) - t150 * qJD(4) + t84 * qJD(5) + t18 * qJD(6), -t761 + (t184 * t303 + t235 * t266 + t484 * t856) * qJD(2) + t5 * qJD(3) - t155 * qJD(4) + t85 * qJD(5) + t17 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t513, t483 * t561, t521, t458, qJD(2) * t294 - qJD(3) * t370 - t674, qJD(2) * t293 + qJD(3) * t369 + t675, t738 + t12 * qJD(2) + (t378 * t481 - t381 * t480) * t763, t729 + t14 * qJD(2) + t224 * qJD(4) + (-t213 * t481 + t214 * t480) * t763, qJD(2) * t31 - qJD(3) * t213 + t760, t742 + t10 * qJD(2) + (-t378 * t456 - t381 * t454) * qJD(3) - t661, t29 * qJD(2) + t214 * qJD(3) - t657 - t687, t746 + t2 * qJD(2) + (t213 * t456 + t214 * t454) * qJD(3) + t100 * qJD(4) + t78 * qJD(5), t526, t573, t47, -t505, t458, t4 * qJD(2) + t66 * qJD(3) + t24 * qJD(6) - t621 + t754, t5 * qJD(2) + t67 * qJD(3) + t23 * qJD(6) - t620 - t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t832, qJD(2) * t46 + qJD(3) * t224 + t758, t284 * qJD(2) + t381 * t638, t832, -t598, qJD(2) * t36 + qJD(3) * t100 + t759, 0, 0, 0, 0, 0, -t599, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t195 - t627, -t518, t506, qJD(2) * t51 + qJD(3) * t78 - t757, 0, 0, 0, 0, 0, t84 * qJD(2) - t469 * t487 + t653, t85 * qJD(2) - t470 * t487 + t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t527, t571, t154 * qJD(2) + t203 * qJD(3) - t595 * t844, t157 * qJD(2) + t260 * t595 - t667, t459, qJD(2) * t18 + qJD(3) * t24 - qJD(6) * t56 + t734, qJD(2) * t17 + qJD(3) * t23 + qJD(4) * t259 + qJD(6) * t55 - t735; 0, 0, 0, -t617, -t641, 0, 0, 0, t631, t630, -t478 * t617 - t396, 0.2e1 * t483 * t521, -t622 + t642, t623 - t643, t405, qJD(3) * t327 + t651, qJD(3) * t326 - t650, -qJD(3) * t11 - t741 + t815, -qJD(3) * t13 - qJD(4) * t45 - t732, qJD(3) * t30 - qJD(4) * t281 - qJD(5) * t194 - t730, -qJD(3) * t9 - qJD(5) * t282 - t745 + t815, -qJD(3) * t28 - qJD(4) * t283 + t306 + t731, -qJD(3) * t1 - qJD(4) * t35 - qJD(5) * t50 - t747, t266 * t676 + t764, -t686 + t765, qJD(3) * t155 - qJD(6) * t153 - t683, -qJD(3) * t150 - qJD(6) * t152 - t684, t377, qJD(3) * t3 - qJD(4) * t151 - qJD(5) * t83 - qJD(6) * t15 - t762, qJD(3) * t6 - qJD(4) * t156 - qJD(5) * t82 - qJD(6) * t16 + t761; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, t443 * qJD(3), 0, 0, 0, -pkin(2) * t665, -pkin(2) * t664, t830, qJD(3) * t86 + t816, qJD(3) * t108 - t406 * t660, t830, qJD(3) * t109 + qJD(5) * t402, qJD(3) * t63 - t291 * t660 + t816, t837 * t303, t636 * t80, 0, 0, 0, qJD(3) * t69 + t235 * t654 + t660 * t826, qJD(3) * t70 - t235 * t655 + t303 * t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t519, t811, -t449 * t486, t449 * t483, t461, -pkin(8) * t664 - t543, pkin(8) * t665 - t544 (t406 * t481 - t408 * t480) * t763 - t577, t267 * qJD(4) + (t338 * t480 - t481 * t822) * t763 + t576, -qJD(3) * t822 + t566 (-t406 * t456 - t408 * t454) * qJD(3) - qJD(5) * t406 - t578, qJD(3) * t338 + t565 (t338 * t454 + t456 * t822) * qJD(3) + t179 * qJD(4) + t273 * qJD(5) + t581, t523, t572, t678 - t837, t549 - t682, t461, t580 - t860, t579 + t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t831, qJD(3) * t267 + t563, -t647, t831, -t645, qJD(3) * t179 + t564, 0, 0, 0, 0, 0, -t656 - t681, -t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t520, -t646 - t666, t236, qJD(3) * t273 - t291 * t670 - t688, 0, 0, 0, 0, 0, t524, t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t525, t570, -t679 + t837, qJD(3) * t234 - t654 - t680, t460, -qJD(4) * t295 - t529 + t860, -t528 - t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, t513 (-t483 * t640 + t668) * t487 (-t626 - t669) * t487, t458, -qJD(2) * t327 + t674, -qJD(2) * t326 - t675, qJD(2) * t11 - t738, qJD(2) * t13 + qJD(4) * t225 - t729, -qJD(2) * t30 - t662 - t760, qJD(2) * t9 - t742, t28 * qJD(2) - t644 - t657 + t687, qJD(2) * t1 - qJD(4) * t99 - qJD(5) * t77 - t746, -t526, -t573, t62, t599, t458, -t3 * qJD(2) - t21 * qJD(6) - t754 - t846, -t6 * qJD(2) - t22 * qJD(6) - t620 + t648 + t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t519, -t811, t486 * t638, -t483 * t638, t460, t543, t544, t577, qJD(4) * t268 - t576, -qJD(4) * t408 - t566, t578, -qJD(4) * t406 - t565, -qJD(4) * t178 + qJD(5) * t330 - t581, -t523, -t572, -t678, t656 + t682, t460, -qJD(4) * t303 - t580, -t579 + t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t454 * qJD(5), 0, 0, 0, 0, 0, qJD(6) * t372 + t659, -qJD(6) * t371 + t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, -t286, 0, t550, -t562, 0, 0, 0, 0, 0, -t845, t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t449, -t508, 0, 0, 0, 0, 0, -t415, -t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553, t672, 0, t372 * t636 - t575, -t371 * t636 - t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t832, qJD(2) * t45 - qJD(3) * t225 - t758, t281 * qJD(2) - t381 * t449, -t832, t518, qJD(2) * t35 + qJD(3) * t99 - qJD(5) * t381 - t759, 0, 0, 0, 0, 0, t505, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t831, -qJD(3) * t268 - t563, qJD(3) * t408 + t647, -t831, t645 + t666, qJD(3) * t178 - t564 - t660, 0, 0, 0, 0, 0, -t549 + t681, t677 - t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t554, t286, 0, -t550, t562, 0, 0, 0, 0, 0, t845, -t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t286, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t194 + t627, t598, -t506, qJD(2) * t50 + qJD(3) * t77 + t662 + t757, 0, 0, 0, 0, 0, t83 * qJD(2) + t482 * t596 - t653, t82 * qJD(2) + t485 * t596 - t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t520, t646, -t236, t688 - t330 * qJD(3) + (qJD(2) * t291 + qJD(4)) * t408, 0, 0, 0, 0, 0, -t524, -t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, t508, 0, 0, 0, 0, 0, t389, t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, -t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, -t571, t153 * qJD(2) - t259 * qJD(3) + t850, t152 * qJD(2) - t238, t459, t15 * qJD(2) + t21 * qJD(3) - t734 + t846, t16 * qJD(2) + t22 * qJD(3) - t203 * qJD(4) + t620 + t735; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t525, -t570, t679, -qJD(3) * t295 + t680, t461, qJD(4) * t234 + t529, t528 - t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t553, -t672, 0, -qJD(3) * t372 + t575 - t659, qJD(3) * t371 + t574 - t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, -t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t37;
