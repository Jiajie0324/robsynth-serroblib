% Calculate vector of inverse dynamics joint torques for
% S6RRRPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPRP1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:30:45
% EndTime: 2019-03-09 16:32:59
% DurationCPUTime: 122.06s
% Computational Cost: add. (66364->1614), mult. (66764->1974), div. (0->0), fcn. (60517->10), ass. (0->792)
t1544 = -Icges(6,4) - Icges(7,4);
t1474 = Icges(6,1) + Icges(7,1);
t1501 = Icges(6,5) + Icges(7,5);
t1500 = -Icges(6,2) - Icges(7,2);
t1499 = Icges(6,6) + Icges(7,6);
t780 = cos(qJ(5));
t1543 = t1544 * t780;
t777 = sin(qJ(5));
t1542 = t1544 * t777;
t1541 = Icges(4,3) + Icges(5,3);
t1540 = -t1499 * t777 + t1501 * t780;
t1539 = t1500 * t777 - t1543;
t1538 = t1474 * t780 + t1542;
t1537 = Icges(6,3) + Icges(7,3);
t775 = qJ(2) + qJ(3);
t744 = pkin(10) + t775;
t724 = sin(t744);
t725 = cos(t744);
t749 = sin(t775);
t750 = cos(t775);
t1508 = Icges(4,5) * t750 + Icges(5,5) * t725 - Icges(4,6) * t749 - Icges(5,6) * t724;
t1510 = -t1499 * t725 + t1539 * t724;
t1486 = -t1501 * t725 + t1538 * t724;
t1536 = Icges(4,5) * t749 + Icges(5,5) * t724 + Icges(4,6) * t750 + Icges(5,6) * t725;
t1535 = t1540 * t725;
t1534 = t1539 * t725;
t1533 = t1538 * t725;
t1532 = -t1499 * t780 - t1501 * t777;
t1531 = t1500 * t780 + t1542;
t1530 = -t1474 * t777 + t1543;
t782 = cos(qJ(1));
t1529 = t1541 * t782;
t1212 = t724 * t782;
t1488 = -t1537 * t725 + t1540 * t724;
t1190 = t782 * t777;
t779 = sin(qJ(1));
t1195 = t779 * t780;
t588 = -t725 * t1190 + t1195;
t1193 = t780 * t782;
t1198 = t777 * t779;
t589 = t1193 * t725 + t1198;
t1380 = t1212 * t1488 + t1486 * t589 + t1510 * t588;
t311 = Icges(7,5) * t589 + Icges(7,6) * t588 + Icges(7,3) * t1212;
t314 = Icges(6,5) * t589 + Icges(6,6) * t588 + Icges(6,3) * t1212;
t1489 = t311 + t314;
t550 = Icges(7,4) * t588;
t323 = Icges(7,1) * t589 + Icges(7,5) * t1212 + t550;
t553 = Icges(6,4) * t588;
t326 = Icges(6,1) * t589 + Icges(6,5) * t1212 + t553;
t1512 = t323 + t326;
t1272 = Icges(7,4) * t589;
t317 = Icges(7,2) * t588 + Icges(7,6) * t1212 + t1272;
t1275 = Icges(6,4) * t589;
t320 = Icges(6,2) * t588 + Icges(6,6) * t1212 + t1275;
t1513 = t317 + t320;
t1436 = t1212 * t1489 + t1512 * t589 + t1513 * t588;
t1213 = t724 * t779;
t586 = t1198 * t725 + t1193;
t548 = Icges(7,4) * t586;
t587 = t1195 * t725 - t1190;
t322 = -Icges(7,1) * t587 - Icges(7,5) * t1213 + t548;
t551 = Icges(6,4) * t586;
t325 = -Icges(6,1) * t587 - Icges(6,5) * t1213 + t551;
t1376 = t322 + t325;
t549 = Icges(7,4) * t587;
t315 = -Icges(7,2) * t586 + Icges(7,6) * t1213 + t549;
t552 = Icges(6,4) * t587;
t318 = -Icges(6,2) * t586 + Icges(6,6) * t1213 + t552;
t1514 = t315 + t318;
t309 = Icges(7,5) * t587 - Icges(7,6) * t586 + Icges(7,3) * t1213;
t312 = Icges(6,5) * t587 - Icges(6,6) * t586 + Icges(6,3) * t1213;
t1515 = t309 + t312;
t1437 = t1212 * t1515 - t1376 * t589 + t1514 * t588;
t1111 = qJD(5) * t782;
t748 = qJD(2) * t779;
t677 = qJD(3) * t779 + t748;
t541 = t1111 * t724 + t677;
t1112 = qJD(5) * t779;
t772 = qJD(2) + qJD(3);
t678 = t772 * t782;
t542 = -t1112 * t724 + t678;
t1114 = qJD(5) * t725;
t671 = qJD(1) - t1114;
t1449 = t1380 * t671 + t1436 * t541 - t1437 * t542;
t1381 = t1213 * t1488 + t1486 * t587 - t1510 * t586;
t1438 = t1213 * t1489 + t1512 * t587 - t1513 * t586;
t1439 = t1213 * t1515 - t1376 * t587 - t1514 * t586;
t1450 = t1381 * t671 + t1438 * t541 - t1439 * t542;
t1202 = t750 * t779;
t1205 = t749 * t779;
t1208 = t725 * t779;
t1509 = -Icges(4,5) * t1202 - Icges(5,5) * t1208 + Icges(4,6) * t1205 + Icges(5,6) * t1213 + t1529;
t1528 = t1508 * t782 + t1541 * t779;
t1276 = Icges(5,4) * t724;
t594 = Icges(5,2) * t725 + t1276;
t707 = Icges(5,4) * t725;
t596 = Icges(5,1) * t724 + t707;
t1277 = Icges(4,4) * t749;
t628 = Icges(4,2) * t750 + t1277;
t722 = Icges(4,4) * t750;
t630 = Icges(4,1) * t749 + t722;
t1527 = t594 * t724 - t596 * t725 + t628 * t749 - t630 * t750;
t1259 = Icges(5,6) * t782;
t476 = Icges(5,4) * t1208 - Icges(5,2) * t1213 - t1259;
t1267 = Icges(5,5) * t782;
t660 = Icges(5,4) * t1213;
t478 = Icges(5,1) * t1208 - t1267 - t660;
t1260 = Icges(4,6) * t782;
t503 = Icges(4,4) * t1202 - Icges(4,2) * t1205 - t1260;
t1268 = Icges(4,5) * t782;
t695 = Icges(4,4) * t1205;
t505 = Icges(4,1) * t1202 - t1268 - t695;
t1507 = t476 * t724 - t478 * t725 + t503 * t749 - t505 * t750;
t1311 = pkin(3) * t749;
t603 = pkin(4) * t724 - pkin(9) * t725;
t1038 = -t603 - t1311;
t1526 = t1038 * t678;
t1003 = qJD(1) * t725 - qJD(5);
t1087 = t724 * t678;
t1341 = t1003 * t779 + t1087;
t902 = t780 * t671;
t286 = t1341 * t777 + t782 * t902;
t901 = t671 * t777;
t287 = -t1341 * t780 + t782 * t901;
t1118 = qJD(1) * t779;
t1064 = t724 * t1118;
t1082 = t725 * t678;
t858 = -t1064 + t1082;
t162 = Icges(7,5) * t287 + Icges(7,6) * t286 + Icges(7,3) * t858;
t164 = Icges(6,5) * t287 + Icges(6,6) * t286 + Icges(6,3) * t858;
t1524 = t162 + t164;
t1200 = t772 * t779;
t1088 = t724 * t1200;
t288 = t779 * t902 + (-t1003 * t782 + t1088) * t777;
t1215 = t724 * t772;
t289 = t1003 * t1193 + (-t1215 * t780 + t901) * t779;
t1117 = qJD(1) * t782;
t859 = t1117 * t724 + t1200 * t725;
t163 = Icges(7,5) * t289 + Icges(7,6) * t288 + Icges(7,3) * t859;
t165 = Icges(6,5) * t289 + Icges(6,6) * t288 + Icges(6,3) * t859;
t1523 = t163 + t165;
t166 = Icges(7,4) * t287 + Icges(7,2) * t286 + Icges(7,6) * t858;
t168 = Icges(6,4) * t287 + Icges(6,2) * t286 + Icges(6,6) * t858;
t1522 = t166 + t168;
t167 = Icges(7,4) * t289 + Icges(7,2) * t288 + Icges(7,6) * t859;
t169 = Icges(6,4) * t289 + Icges(6,2) * t288 + Icges(6,6) * t859;
t1521 = t167 + t169;
t170 = Icges(7,1) * t287 + Icges(7,4) * t286 + Icges(7,5) * t858;
t172 = Icges(6,1) * t287 + Icges(6,4) * t286 + Icges(6,5) * t858;
t1520 = t170 + t172;
t171 = Icges(7,1) * t289 + Icges(7,4) * t288 + Icges(7,5) * t859;
t173 = Icges(6,1) * t289 + Icges(6,4) * t288 + Icges(6,5) * t859;
t1519 = t171 + t173;
t1518 = t1535 * t772 + (qJD(5) * t1532 + t1537 * t772) * t724;
t1517 = t1534 * t772 + (qJD(5) * t1531 + t1499 * t772) * t724;
t1516 = t1533 * t772 + (t1530 * qJD(5) + t1501 * t772) * t724;
t597 = Icges(5,1) * t725 - t1276;
t479 = Icges(5,5) * t779 + t597 * t782;
t631 = Icges(4,1) * t750 - t1277;
t506 = Icges(4,5) * t779 + t631 * t782;
t1511 = -t506 * t1202 - t479 * t1208;
t1506 = t1486 * t780 - t1510 * t777;
t1505 = t1536 * t782;
t1504 = t1536 * t779;
t953 = -Icges(5,2) * t724 + t707;
t477 = Icges(5,6) * t779 + t782 * t953;
t954 = -Icges(4,2) * t749 + t722;
t504 = Icges(4,6) * t779 + t782 * t954;
t1503 = t477 * t724 + t504 * t749;
t776 = -qJ(6) - pkin(9);
t1302 = pkin(9) + t776;
t1365 = t1302 * t724;
t712 = t725 * pkin(4);
t967 = t587 * rSges(7,1) - t586 * rSges(7,2);
t734 = pkin(5) * t780 + pkin(4);
t607 = t734 * t1208;
t982 = pkin(5) * t1190 - t607;
t1186 = (t712 + t1365) * t779 + t982 - rSges(7,3) * t1213 - t967;
t1107 = qJD(6) * t782;
t655 = t724 * t1107;
t1502 = t1186 * t671 + t655;
t1429 = -t1527 * t779 - t1505;
t1428 = -t1527 * t782 + t1504;
t1498 = t1507 * t779;
t1497 = t1528 * t782 + t1511;
t1496 = t1528 * qJD(1);
t1201 = t750 * t782;
t1206 = t725 * t782;
t1357 = -t506 * t1201 - t479 * t1206 - t1528 * t779;
t1495 = -t505 * t1201 - t478 * t1206 + t1509 * t779;
t1494 = t1509 * t782;
t971 = t587 * rSges(6,1) - t586 * rSges(6,2);
t328 = rSges(6,3) * t1213 + t971;
t1300 = rSges(6,1) * t780;
t970 = -rSges(6,2) * t777 + t1300;
t450 = -rSges(6,3) * t725 + t724 * t970;
t1493 = -t328 * t671 - t542 * t450;
t1456 = t1212 * t1523 - t1376 * t287 + t1514 * t286 + t1515 * t858 + t1519 * t589 + t1521 * t588;
t1455 = t1212 * t1524 + t1489 * t858 + t1512 * t287 + t1513 * t286 + t1520 * t589 + t1522 * t588;
t1454 = t1213 * t1523 - t1376 * t289 + t1514 * t288 + t1515 * t859 + t1519 * t587 - t1521 * t586;
t1453 = t1213 * t1524 + t1489 * t859 + t1512 * t289 + t1513 * t288 + t1520 * t587 - t1522 * t586;
t1388 = t1212 * t1518 + t1486 * t287 + t1488 * t858 + t1510 * t286 + t1516 * t589 + t1517 * t588;
t1492 = t1213 * t1518 + t1486 * t289 + t1488 * t859 + t1510 * t288 + t1516 * t587 - t1517 * t586;
t926 = -t315 * t777 - t322 * t780;
t142 = -t309 * t725 + t724 * t926;
t924 = -t318 * t777 - t325 * t780;
t144 = -t312 * t725 + t724 * t924;
t1491 = t142 + t144;
t925 = -t317 * t777 + t323 * t780;
t143 = -t311 * t725 + t724 * t925;
t923 = -t320 * t777 + t326 * t780;
t145 = -t314 * t725 + t724 * t923;
t1490 = t143 + t145;
t1379 = -t1488 * t725 + t1506 * t724;
t1433 = t1494 - t1498;
t1432 = -t1205 * t504 - t1213 * t477 - t1497;
t1204 = t749 * t782;
t1431 = -t1204 * t503 - t1212 * t476 - t1495;
t1430 = -t1204 * t504 - t1212 * t477 - t1357;
t1485 = -t724 * rSges(7,3) - t725 * t734;
t1408 = -t628 + t631;
t1011 = t1408 * t772;
t1407 = t630 + t954;
t1012 = t1407 * t772;
t1410 = -t594 + t597;
t1016 = t1410 * t772;
t1409 = t596 + t953;
t1017 = t1409 * t772;
t1484 = qJD(1) * t1536 + t1011 * t750 - t1012 * t749 + t1016 * t725 - t1017 * t724;
t1412 = -t630 * t782 - t504;
t1026 = (-t631 * t779 + t1268) * qJD(1) + t1412 * t772;
t1411 = -t628 * t782 + t506;
t1028 = (-t779 * t954 + t1260) * qJD(1) + t1411 * t772;
t1415 = -t596 * t782 - t477;
t1030 = (-t597 * t779 + t1267) * qJD(1) + t1415 * t772;
t1414 = -t594 * t782 + t479;
t1032 = (-t779 * t953 + t1259) * qJD(1) + t1414 * t772;
t1483 = t1026 * t750 - t1028 * t749 + t1030 * t725 - t1032 * t724 + t1496;
t1413 = -t630 * t779 - t503;
t1025 = qJD(1) * t506 + t1413 * t772;
t1027 = qJD(1) * t504 - t1200 * t628 + t505 * t772;
t1416 = -t596 * t779 - t476;
t1029 = qJD(1) * t479 + t1416 * t772;
t1031 = qJD(1) * t477 - t1200 * t594 + t478 * t772;
t1482 = qJD(1) * t1509 - t1025 * t750 + t1027 * t749 - t1029 * t725 + t1031 * t724;
t1056 = t725 * t1112;
t1481 = -t1056 + t1118;
t1480 = (t1537 * t724 - t1506 + t1535) * t671 + (t1488 * t779 + t924 + t926) * t542 + (-t1488 * t782 - t923 - t925) * t541;
t1479 = qJD(1) * t1527 + t1508 * t772;
t1478 = qJD(1) * t1507 - t1504 * t772 + t1496;
t1477 = -t1505 * t772 + (-t1508 * t779 - t479 * t725 - t506 * t750 + t1503 + t1529) * qJD(1);
t1373 = (t1500 * t587 - t1376 - t548 - t551) * t542 - (t1500 * t589 + t1512 + t550 + t553) * t541 - (t1531 * t724 + t1486) * t671;
t1476 = rSges(7,1) + pkin(5);
t1475 = (t1506 * t772 - t1518) * t725 + (t1516 * t780 - t1517 * t777 + t1488 * t772 + (-t1486 * t777 - t1510 * t780) * qJD(5)) * t724;
t1473 = t1428 * qJD(1);
t1207 = t725 * t780;
t1209 = t725 * t777;
t1472 = rSges(7,1) * t1207 - rSges(7,2) * t1209 - t1485;
t1471 = (-t1499 * t587 - t1501 * t586) * t542 + (t1499 * t589 - t1501 * t588) * t541 - t1532 * t671 * t724;
t1199 = t776 * t782;
t1470 = t589 * rSges(7,1) + t588 * rSges(7,2) + rSges(7,3) * t1212 + pkin(5) * t1198 - t1199 * t724 + t734 * t1206;
t732 = pkin(3) * t750;
t781 = cos(qJ(2));
t768 = t781 * pkin(2);
t735 = t768 + pkin(1);
t646 = t732 + t735;
t783 = -pkin(8) - pkin(7);
t771 = -qJ(4) + t783;
t1145 = -t779 * t646 - t782 * t771;
t1469 = t1145 - t967;
t1374 = t724 * pkin(9) + t712;
t673 = pkin(9) * t1208;
t536 = -pkin(4) * t1213 + t673;
t602 = t678 * t732;
t1063 = t749 * t1118;
t679 = pkin(3) * t1063;
t1468 = qJD(1) * t536 + t603 * t1118 + t1374 * t678 + t602 + t679;
t1292 = pkin(5) * qJD(5);
t1089 = t780 * t1292;
t1310 = pkin(5) * t777;
t1091 = qJD(1) * t1310;
t1466 = t287 * rSges(7,1) + t286 * rSges(7,2) + rSges(7,3) * t1082 + t776 * t1064 + t779 * t1089 + t782 * t1091 + t655;
t1465 = t1429 * qJD(1);
t1100 = qJDD(5) * t724;
t1102 = qJD(1) * qJD(3);
t1103 = qJD(1) * qJD(2);
t649 = qJDD(2) * t779 + t782 * t1103;
t515 = qJDD(3) * t779 + t782 * t1102 + t649;
t261 = qJD(5) * t858 + t1100 * t782 + t515;
t1099 = -qJDD(2) - qJDD(3);
t1113 = qJD(5) * t772;
t1115 = qJD(5) * t724;
t730 = t779 * t1103;
t1128 = t779 * t1102 + t730;
t262 = (t1113 * t725 + t1100) * t779 + (qJD(1) * t1115 + t1099) * t782 + t1128;
t517 = -qJDD(5) * t725 + t1113 * t724 + qJDD(1);
t1459 = t1380 * t517 + t1388 * t671 + t1436 * t261 + t1437 * t262 + t1455 * t541 - t1456 * t542;
t1458 = t1381 * t517 + t1438 * t261 + t1439 * t262 + t1453 * t541 - t1454 * t542 + t1492 * t671;
t43 = (t772 * t926 - t163) * t725 + (-t167 * t777 + t171 * t780 + t309 * t772 + (-t315 * t780 + t322 * t777) * qJD(5)) * t724;
t45 = (t772 * t924 - t165) * t725 + (-t169 * t777 + t173 * t780 + t312 * t772 + (-t318 * t780 + t325 * t777) * qJD(5)) * t724;
t1452 = t43 + t45;
t44 = (t772 * t925 - t162) * t725 + (-t166 * t777 + t170 * t780 + t311 * t772 + (-t317 * t780 - t323 * t777) * qJD(5)) * t724;
t46 = (t772 * t923 - t164) * t725 + (-t168 * t777 + t172 * t780 + t314 * t772 + (-t320 * t780 - t326 * t777) * qJD(5)) * t724;
t1451 = t44 + t46;
t1448 = t1379 * t671 + t1490 * t541 - t1491 * t542;
t1447 = -t1478 * t779 + t1482 * t782;
t1446 = t1477 * t779 + t1483 * t782;
t1445 = t1478 * t782 + t1482 * t779;
t1444 = -t1477 * t782 + t1483 * t779;
t1443 = t1432 * t677 - t1433 * t678 + t1465;
t1442 = t1430 * t677 - t1431 * t678 + t1473;
t1441 = t1479 * t779 + t1484 * t782;
t1440 = -t1479 * t782 + t1484 * t779;
t1435 = -t1025 * t749 - t1027 * t750 - t1029 * t724 - t1031 * t725;
t1434 = t1026 * t749 + t1028 * t750 + t1030 * t724 + t1032 * t725;
t1005 = t734 * t772 - qJD(6);
t1090 = t777 * t1292;
t624 = pkin(4) * t1088;
t1303 = pkin(4) - t734;
t852 = -t1303 * t725 - t1365;
t968 = rSges(7,1) * t289 + rSges(7,2) * t288;
t1189 = t624 + (qJD(1) * t852 - t1089) * t782 + (t1091 - t1005 * t724 + (-t1302 * t772 - t1090) * t725) * t779 + rSges(7,3) * t859 + t968;
t625 = pkin(9) * t1082;
t1188 = -rSges(7,3) * t1064 - t625 + (pkin(9) * t1118 + t1303 * t678) * t724 + ((-t772 * t776 - t1090) * t782 + t1303 * t1118) * t725 + t1466;
t1427 = t476 * t725 + t478 * t724 + t503 * t750 + t505 * t749;
t1426 = t477 * t725 + t479 * t724 + t504 * t750 + t506 * t749;
t676 = pkin(4) * t1206;
t539 = pkin(9) * t1212 + t676;
t1185 = -t539 + t1470;
t1084 = t724 * t1195;
t1086 = t724 * t1198;
t1142 = rSges(7,2) * t1086 + rSges(7,3) * t1208;
t1210 = t725 * t776;
t1364 = t1303 * t724;
t879 = -t1210 + t1364;
t1425 = -rSges(7,1) * t1084 + t779 * t879 + t1142 - t673;
t1083 = t724 * t1193;
t1085 = t724 * t1190;
t1140 = rSges(7,2) * t1085 + rSges(7,3) * t1206;
t675 = pkin(9) * t1206;
t1424 = -rSges(7,1) * t1083 + t782 * t879 + t1140 - t675;
t1299 = rSges(7,1) * t780;
t966 = -rSges(7,2) * t777 + t1299;
t1177 = t724 * t966 - t1364 + (-rSges(7,3) + t1302) * t725;
t1214 = t724 * t776;
t1423 = t1374 + t1214 - t1472;
t1422 = t1510 * t779;
t1421 = t1510 * t782;
t1420 = t1486 * t779;
t1419 = t1486 * t782;
t1418 = t1499 * t724 + t1534;
t1417 = t1501 * t724 + t1533;
t1334 = qJD(1) * t1409 + t1414 * t677 - (-Icges(5,2) * t1208 + t478 - t660) * t678;
t1335 = qJD(1) * t1407 + t1411 * t677 - (-Icges(4,2) * t1202 + t505 - t695) * t678;
t813 = qJD(1) * t1408 + t1412 * t677 - t1413 * t678;
t814 = qJD(1) * t1410 + t1415 * t677 - t1416 * t678;
t1406 = -t1334 * t724 - t1335 * t749 + t814 * t725 + t813 * t750;
t1405 = t1480 * t724;
t1404 = qJD(1) * t1508 + t1504 * t678 - t1505 * t677;
t1403 = t1488 * t671 + t1489 * t541 - t1515 * t542;
t1370 = t1490 * t782 + t1491 * t779;
t1402 = -t1490 * t779 + t1491 * t782;
t1369 = t1436 * t782 + t1437 * t779;
t1401 = -t1436 * t779 + t1437 * t782;
t1368 = t1438 * t782 + t1439 * t779;
t1400 = -t1438 * t779 + t1439 * t782;
t1399 = -t725 * t1107 + t1177 * t1481 - t1423 * t542 + t1425 * t671 + t1468;
t1293 = pkin(2) * qJD(2);
t778 = sin(qJ(2));
t1093 = t778 * t1293;
t703 = t779 * t1093;
t1130 = t783 * t1118 + t703;
t1304 = pkin(1) - t735;
t767 = t779 * pkin(7);
t410 = (-t1304 * t782 - t767) * qJD(1) - t1130;
t691 = t782 * pkin(1) + t767;
t647 = t691 * qJD(1);
t1176 = -t410 - t647;
t1138 = t646 - t735;
t746 = qJD(4) * t782;
t1131 = t771 * t1118 + t746;
t605 = -t1311 * t772 - t1093;
t977 = t605 * t779 - t1131;
t212 = t1117 * t1138 + t1130 + t977;
t1079 = -t212 + t1176;
t336 = pkin(9) * t859 + qJD(1) * t676 - t624;
t1002 = -t336 + t1079;
t1108 = qJD(6) * t779;
t1054 = t724 * t1108;
t1110 = qJD(6) * t725;
t1211 = t725 * t772;
t1294 = rSges(7,2) * t780;
t965 = -rSges(7,1) * t777 - t1294;
t1187 = t966 * t1211 + t772 * t852 - t1110 + (rSges(7,3) * t772 + qJD(5) * t965 - t1090) * t724;
t1101 = qJD(1) * qJD(4);
t516 = t1099 * t782 + t1128;
t1340 = qJDD(4) * t779 + t782 * t1101 + t516 * t1311 - t772 * t602;
t510 = t1374 * t772;
t1312 = pkin(2) * t778;
t650 = -qJDD(2) * t782 + t730;
t606 = t650 * t1312;
t739 = t782 * t783;
t1133 = t779 * t735 + t739;
t769 = t782 * pkin(7);
t690 = pkin(1) * t779 - t769;
t493 = t690 - t1133;
t1158 = t493 - t690;
t413 = t1133 + t1145;
t1073 = t413 + t1158;
t537 = t1374 * t779;
t994 = -t537 + t1073;
t810 = qJDD(1) * t994 - t678 * t510 + t516 * t603 + t1340 + t606;
t1191 = t781 * qJD(2) ^ 2;
t1098 = pkin(2) * t1191;
t1109 = qJD(6) * t772;
t824 = qJDD(6) * t724 + t1109 * t725 - t1098;
t25 = -t1189 * t671 - t1187 * t542 + t1186 * t517 + t1177 * t262 + t824 * t782 + (t1002 - t1054) * qJD(1) + t810;
t600 = t677 * t1311;
t1067 = -t600 - t703 - t746;
t697 = t782 * t735;
t1008 = -t779 * t783 + t697;
t494 = t1008 - t691;
t1157 = t494 + t691;
t1127 = -t771 + t783;
t610 = t782 * t646;
t414 = t1127 * t779 + t610 - t697;
t1072 = t414 + t1157;
t822 = (t539 + t1072) * qJD(1) - t677 * t603 + t1067;
t88 = -t1177 * t541 + t1185 * t671 + t1054 + t822;
t1398 = (qJD(1) * t88 + t25) * t782;
t332 = t589 * rSges(6,1) + t588 * rSges(6,2) + rSges(6,3) * t1212;
t110 = t332 * t671 - t450 * t541 + t822;
t1007 = t782 * t1098;
t972 = rSges(6,1) * t289 + rSges(6,2) * t288;
t178 = rSges(6,3) * t859 + t972;
t969 = -rSges(6,1) * t777 - rSges(6,2) * t780;
t244 = t970 * t1211 + (rSges(6,3) * t772 + qJD(5) * t969) * t724;
t33 = qJD(1) * t1002 - t178 * t671 - t244 * t542 + t262 * t450 - t328 * t517 - t1007 + t810;
t1397 = (qJD(1) * t110 + t33) * t782;
t1141 = rSges(6,2) * t1086 + rSges(6,3) * t1208;
t416 = -rSges(6,1) * t1084 + t1141;
t709 = t724 * rSges(6,3);
t452 = rSges(6,1) * t1207 - rSges(6,2) * t1209 + t709;
t1396 = t1115 * t328 + t1481 * t450 + t416 * t671 + t542 * t452 + t1468;
t1197 = t778 * t779;
t653 = -t1311 - t1312;
t619 = t779 * t653;
t530 = pkin(2) * t1197 + t619;
t1061 = t778 * t1118;
t704 = pkin(2) * t1061;
t1361 = -qJD(1) * t530 + t704;
t1395 = t704 - t1361;
t1035 = t88 * t1177;
t1116 = qJD(2) * t782;
t1165 = t494 * t1116 - t493 * t748;
t1069 = -t677 * t413 + t1165;
t1173 = t414 + t539;
t841 = t1173 * t678 + t677 * t537 + t1069;
t65 = t1185 * t542 - t1186 * t541 - t1110 + t841;
t1394 = t1186 * t65 + t1035;
t723 = t750 * rSges(4,1);
t1359 = -rSges(4,2) * t749 + t723;
t511 = rSges(4,1) * t1202 - rSges(4,2) * t1205 - t782 * rSges(4,3);
t762 = t779 * rSges(4,3);
t512 = rSges(4,1) * t1201 - rSges(4,2) * t1204 + t762;
t192 = t511 * t677 + t512 * t678 + t1165;
t1068 = -t511 + t1158;
t1058 = t778 * t1116;
t1004 = pkin(2) * t1058;
t1296 = rSges(4,2) * t750;
t633 = rSges(4,1) * t749 + t1296;
t864 = -t633 * t678 - t1004;
t200 = qJD(1) * t1068 + t864;
t201 = -t633 * t677 - t703 + (t512 + t1157) * qJD(1);
t590 = t633 * t779;
t591 = t633 * t782;
t1393 = -(qJD(1) * t590 - t1359 * t678) * t200 - t192 * (-t677 * t590 - t591 * t678) - t201 * (-qJD(1) * t591 - t1359 * t677);
t1318 = t677 / 0.2e1;
t1317 = -t678 / 0.2e1;
t1389 = -rSges(6,3) - pkin(9);
t598 = rSges(5,1) * t724 + rSges(5,2) * t725;
t534 = t598 * t779;
t761 = t779 * rSges(5,3);
t484 = rSges(5,1) * t1206 - rSges(5,2) * t1212 + t761;
t151 = -t598 * t677 + (t484 + t1072) * qJD(1) + t1067;
t710 = t725 * rSges(5,1);
t1360 = -rSges(5,2) * t724 + t710;
t283 = -t772 * t534 + (t1360 * t782 + t761) * qJD(1);
t507 = t1360 * t772;
t906 = t606 - t1007;
t483 = rSges(5,1) * t1208 - rSges(5,2) * t1213 - t782 * rSges(5,3);
t995 = -t483 + t1073;
t77 = -t507 * t678 + t516 * t598 + t995 * qJDD(1) + (-t283 + t1079) * qJD(1) + t906 + t1340;
t1384 = qJD(1) * t151 + t77;
t652 = qJD(1) * t690;
t1375 = qJD(1) * t493 - t652;
t1372 = (t1530 * t724 - t1510) * t671 + (t1474 * t586 + t1514 + t549 + t552) * t542 + (t1474 * t588 - t1272 - t1275 - t1513) * t541;
t1371 = t1471 * t724;
t760 = Icges(3,4) * t781;
t955 = -Icges(3,2) * t778 + t760;
t684 = Icges(3,1) * t778 + t760;
t1358 = t1503 + t1509;
t1354 = t1379 * t517 + t1475 * t671;
t860 = -t1118 * t725 - t1087;
t335 = pkin(4) * t860 - pkin(9) * t1064 + t625;
t1339 = qJD(1) * t335 + qJDD(1) * t539 - t677 * t510 - t515 * t603;
t1077 = t287 * rSges(6,1) + t286 * rSges(6,2) + rSges(6,3) * t1082;
t176 = -rSges(6,3) * t1064 + t1077;
t1203 = t750 * t772;
t745 = qJD(4) * t779;
t1148 = t782 * t605 + t745;
t211 = t1004 + (t1127 * t782 - t1138 * t779) * qJD(1) + t1148;
t740 = pkin(7) * t1117;
t1144 = qJD(1) * (-pkin(1) * t1118 + t740) + qJDD(1) * t691;
t409 = -t1004 - t740 + (t1304 * t779 - t739) * qJD(1);
t996 = qJD(1) * t409 + qJDD(1) * t494 + t1144;
t799 = qJD(1) * t211 + qJDD(1) * t414 + t779 * t1101 + (-t1203 * t677 - t515 * t749) * pkin(3) + t996;
t1220 = t649 * t778;
t857 = (-t1191 * t779 - t1220) * pkin(2);
t791 = -qJDD(4) * t782 + t799 + t857;
t34 = t671 * t176 - t541 * t244 - t261 * t450 + t517 * t332 + t1339 + t791;
t1353 = t33 * t779 - t34 * t782;
t1352 = g(1) * t782 + g(2) * t779;
t1309 = g(1) * t779;
t1351 = -g(2) * t782 + t1309;
t1256 = Icges(3,3) * t782;
t681 = Icges(3,5) * t781 - Icges(3,6) * t778;
t680 = Icges(3,5) * t778 + Icges(3,6) * t781;
t865 = qJD(2) * t680;
t573 = Icges(3,6) * t779 + t782 * t955;
t1225 = t573 * t778;
t1278 = Icges(3,4) * t778;
t685 = Icges(3,1) * t781 - t1278;
t575 = Icges(3,5) * t779 + t685 * t782;
t912 = -t575 * t781 + t1225;
t1346 = -t782 * t865 + (-t681 * t779 + t1256 + t912) * qJD(1);
t571 = Icges(3,3) * t779 + t681 * t782;
t1120 = qJD(1) * t571;
t1194 = t779 * t781;
t1261 = Icges(3,6) * t782;
t572 = Icges(3,4) * t1194 - Icges(3,2) * t1197 - t1261;
t1226 = t572 * t778;
t1269 = Icges(3,5) * t782;
t716 = Icges(3,4) * t1197;
t574 = Icges(3,1) * t1194 - t1269 - t716;
t913 = -t574 * t781 + t1226;
t1345 = qJD(1) * t913 - t779 * t865 + t1120;
t682 = Icges(3,2) * t781 + t1278;
t907 = t682 * t778 - t684 * t781;
t1342 = t907 * qJD(1) + t681 * qJD(2);
t570 = Icges(3,5) * t1194 - Icges(3,6) * t1197 - t1256;
t214 = -t570 * t782 - t779 * t913;
t1338 = (-t682 * t782 + t575) * t779 - (-Icges(3,2) * t1194 + t574 - t716) * t782;
t1333 = t261 / 0.2e1;
t1332 = t262 / 0.2e1;
t1331 = t1317 * t779 + t1318 * t782;
t1330 = t515 / 0.2e1;
t1329 = t516 / 0.2e1;
t1327 = -t541 / 0.2e1;
t1326 = t541 / 0.2e1;
t1325 = -t542 / 0.2e1;
t1324 = t542 / 0.2e1;
t1323 = t649 / 0.2e1;
t1322 = t650 / 0.2e1;
t1321 = -t671 / 0.2e1;
t1320 = t671 / 0.2e1;
t1319 = -t677 / 0.2e1;
t1316 = t678 / 0.2e1;
t1314 = t779 / 0.2e1;
t1313 = -t782 / 0.2e1;
t1306 = -qJD(1) / 0.2e1;
t1305 = qJD(1) / 0.2e1;
t1301 = rSges(3,1) * t781;
t1298 = rSges(3,2) * t781;
t1289 = t43 * t542;
t1288 = t44 * t541;
t1287 = t45 * t542;
t1286 = t46 * t541;
t763 = t779 * rSges(3,3);
t1285 = qJDD(1) / 0.2e1;
t1284 = -rSges(7,3) + t776;
t1251 = qJD(1) * t65;
t97 = t328 * t541 + t332 * t542 + t841;
t1249 = qJD(1) * t97;
t1248 = t110 * t779;
t1243 = t142 * t262;
t1242 = t143 * t261;
t1241 = t144 * t262;
t1240 = t145 * t261;
t1237 = t200 * t779;
t686 = rSges(3,1) * t778 + t1298;
t1059 = t686 * t1116;
t1129 = rSges(3,2) * t1197 + t782 * rSges(3,3);
t577 = rSges(3,1) * t1194 - t1129;
t1147 = -t577 - t690;
t350 = qJD(1) * t1147 - t1059;
t1236 = t350 * t779;
t1235 = t350 * t782;
t1192 = t781 * t782;
t1196 = t778 * t782;
t578 = rSges(3,1) * t1192 - rSges(3,2) * t1196 + t763;
t465 = t578 + t691;
t351 = qJD(1) * t465 - t686 * t748;
t618 = t686 * t782;
t1234 = t351 * t618;
t1218 = t677 * t750;
t1217 = t680 * t779;
t1216 = t680 * t782;
t1180 = -t587 * rSges(7,2) - t1476 * t586;
t1179 = -t589 * rSges(7,2) + t1476 * t588;
t1178 = -t779 * t413 + t782 * t414;
t1174 = t414 + t484;
t1164 = -t779 * t493 + t782 * t494;
t1161 = t779 * t511 + t782 * t512;
t1160 = -t574 * t1192 - t779 * t570;
t1159 = t575 * t1192 + t779 * t571;
t1154 = t598 * t1118 + t679;
t1139 = rSges(6,2) * t1085 + rSges(6,3) * t1206;
t1137 = rSges(5,2) * t1064 + rSges(5,3) * t1117;
t1136 = rSges(4,2) * t1063 + rSges(4,3) * t1117;
t1135 = -t682 + t685;
t1134 = t684 + t955;
t1132 = rSges(3,2) * t1061 + rSges(3,3) * t1117;
t125 = t1174 * t678 + t483 * t677 + t1069;
t1125 = qJD(1) * t125;
t1119 = qJD(1) * t681;
t706 = qJD(6) * t724;
t354 = -t779 * t907 - t1216;
t1104 = t354 * qJD(1);
t1097 = pkin(3) * t1218;
t1096 = pkin(3) * t1203;
t601 = t678 * t1311;
t1092 = t781 * t1293;
t1080 = -t413 * t1117 + t782 * t211 + t779 * t212;
t333 = -t678 * t1296 + (-t1118 * t750 - t678 * t749) * rSges(4,1) + t1136;
t334 = -t772 * t590 + (t1359 * t782 + t762) * qJD(1);
t1076 = t511 * t1117 + t782 * t333 + t779 * t334;
t1075 = -t332 - t1173;
t1074 = -t493 * t1117 + t782 * t409 + t779 * t410;
t1066 = t673 + t1141;
t1065 = t675 + t1139;
t1062 = t749 * t1117;
t1060 = t778 * t1117;
t1055 = t725 * t1111;
t1049 = t1211 / 0.2e1;
t1048 = -pkin(1) - t1301;
t1046 = t1118 / 0.2e1;
t1045 = t1117 / 0.2e1;
t1044 = -t748 / 0.2e1;
t1043 = t748 / 0.2e1;
t1042 = -t1116 / 0.2e1;
t1041 = t1116 / 0.2e1;
t862 = -t633 - t1312;
t861 = -t598 - t1311;
t1037 = t65 * t1185;
t900 = t745 - t1004;
t878 = -t601 + t900;
t808 = qJD(1) * t994 - t678 * t603 + t878;
t87 = -t1177 * t542 + t1502 + t808;
t1036 = t87 * t1186;
t1034 = -t734 - t1299;
t1033 = (-t779 ^ 2 - t782 ^ 2) * t778;
t620 = t782 * t653;
t531 = pkin(2) * t1196 + t620;
t1023 = t677 * t530 + t531 * t678;
t535 = t598 * t782;
t1022 = -t677 * t534 - t535 * t678;
t538 = -pkin(4) * t1212 + t675;
t1021 = t677 * t536 + t538 * t678;
t487 = t575 * t1194;
t1018 = t571 * t782 - t487;
t1015 = -qJD(1) * t535 - t1360 * t677;
t1013 = qJD(1) * t538 - t1374 * t677;
t1010 = -t570 + t1225;
t1009 = -t771 * t779 + t610;
t1001 = -t1173 - t1185;
t998 = t779 * t483 + t782 * t484 + t1178;
t997 = t779 * t537 + t782 * t539 + t1178;
t495 = qJD(1) * t531;
t986 = t495 - t1097;
t985 = -t507 - t1096;
t984 = -t510 - t1096;
t983 = (t1310 - t965) * t724;
t981 = t1038 - t450;
t568 = t1359 * t772;
t980 = -t568 - t1092;
t979 = t1360 + t732;
t976 = qJD(1) * t534 - t1360 * t678 - t602;
t689 = rSges(2,1) * t782 - rSges(2,2) * t779;
t687 = rSges(2,1) * t779 + rSges(2,2) * t782;
t688 = -rSges(3,2) * t778 + t1301;
t964 = t779 * t88 + t782 * t87;
t109 = t1493 + t808;
t944 = t109 * t782 + t1248;
t353 = t573 * t781 + t575 * t778;
t866 = qJD(2) * t682;
t383 = -t782 * t866 + (-t779 * t955 + t1261) * qJD(1);
t867 = qJD(2) * t684;
t385 = -t782 * t867 + (-t685 * t779 + t1269) * qJD(1);
t797 = -qJD(2) * t353 - t383 * t778 + t385 * t781 + t1120;
t352 = t572 * t781 + t574 * t778;
t384 = qJD(1) * t573 - t779 * t866;
t386 = qJD(1) * t575 - t779 * t867;
t798 = qJD(1) * t570 - qJD(2) * t352 - t384 * t778 + t386 * t781;
t943 = -(t1345 * t779 + t798 * t782) * t782 + (t1346 * t779 + t797 * t782) * t779;
t942 = -(-t1345 * t782 + t798 * t779) * t782 + (-t1346 * t782 + t797 * t779) * t779;
t929 = -t200 * t782 - t201 * t779;
t215 = -t1197 * t573 - t1018;
t928 = -t214 * t782 + t215 * t779;
t216 = -t1196 * t572 - t1160;
t217 = -t1196 * t573 + t1159;
t927 = -t216 * t782 + t217 * t779;
t922 = t328 * t782 - t332 * t779;
t921 = -t351 * t779 - t1235;
t389 = -t1116 * t1298 + (-t1118 * t781 - t1058) * rSges(3,1) + t1132;
t617 = t686 * t779;
t390 = -qJD(2) * t617 + (t688 * t782 + t763) * qJD(1);
t920 = t389 * t782 + t390 * t779;
t911 = t577 * t779 + t578 * t782;
t908 = t682 * t781 + t684 * t778;
t585 = t782 * t601;
t905 = -t600 * t779 - t585;
t904 = -t244 + t984;
t903 = t1038 - t1177;
t899 = -t598 + t653;
t898 = -t603 + t653;
t896 = t409 * t1116 + t410 * t748 - t649 * t493 - t650 * t494;
t895 = t1389 * t724 - t712;
t282 = rSges(5,1) * t860 - rSges(5,2) * t1082 + t1137;
t894 = t483 * t1117 + t782 * t282 + t779 * t283 + t1080;
t893 = t537 * t1117 + t782 * t335 + t779 * t336 + t1080;
t892 = t779 * t328 + t782 * t332 + t997;
t891 = -t646 + t1485;
t880 = t984 - t1187;
t877 = -t450 + t898;
t868 = -t1092 - t1096;
t863 = -t1374 - t709;
t856 = t732 + t1472;
t855 = (-t1062 - t1218) * pkin(3);
t854 = t898 - t1177;
t853 = t677 * t212 - t515 * t413 + t896;
t847 = -t507 + t868;
t846 = -t510 + t868;
t843 = t1177 * t87 - t1037;
t842 = t1185 * t782 - t1186 * t779 + t997;
t418 = -rSges(6,1) * t1083 + t1139;
t840 = t328 * t1055 + t541 * t416 + t418 * t542 + t1021;
t839 = t572 * t782 - t573 * t779;
t838 = qJD(1) * t413 + t1375 + t900;
t837 = t452 + t732 + t1374;
t836 = -t244 + t846;
t835 = t328 * t1117 + t782 * t176 + t779 * t178 + t893;
t832 = -qJD(1) * t537 + t838;
t831 = t846 - t1187;
t823 = (-t1134 * t778 + t1135 * t781) * qJD(1);
t819 = -t1117 * t1186 + t1188 * t782 + t1189 * t779 + t893;
t812 = -t1055 * t450 + t332 * t1115 + t671 * t418 - t452 * t541 + t1013;
t809 = t1352 * (-pkin(4) - t1300) * t724;
t807 = -t1055 * t1186 + t1424 * t542 + t1425 * t541 + t1021 + t706;
t640 = t955 * qJD(2);
t641 = t685 * qJD(2);
t796 = qJD(1) * t680 - qJD(2) * t908 - t640 * t778 + t641 * t781;
t795 = t725 * t1108 + t1115 * t1185 + t1423 * t541 + t1424 * t671 + t1013 - t1097;
t794 = t677 * t336 + t515 * t537 + (t211 + t335) * t678 - t1173 * t516 + t853;
t793 = (t724 * t1036 + (-t1035 * t782 - t1037 * t779) * t725) * qJD(5);
t792 = -t1338 * t778 + t839 * t781;
t786 = (t1334 * t725 + t1335 * t750 + t814 * t724 + t813 * t749) * t1306 + (t1447 * t782 + t1446 * t779 + (t1430 * t782 + t1431 * t779) * qJD(1)) * t1318 - t1448 * t1115 / 0.2e1 + (t1442 + t1449) * t1045 + (t1443 + t1450) * t1046 + (qJD(1) * t1370 + t1451 * t779 - t1452 * t782) * t1320 + (qJD(1) * t1368 + t1453 * t779 - t1454 * t782) * t1325 + (qJD(1) * t1369 + t1455 * t779 - t1456 * t782) * t1326 + ((t1206 * t1438 + t1381 * t724) * qJD(5) + ((qJD(5) * t1439 + t1403) * t725 + t1405) * t779 + (t1417 * t587 - t1418 * t586) * t671 + (t1420 * t587 - t1422 * t586) * t542 + (-t1419 * t587 + t1421 * t586) * t541) * t1324 + (t1404 * t779 + t1406 * t782) * t1319 + (-t1404 * t782 + t1406 * t779) * t1316 + (qJD(1) * t1440 + qJDD(1) * t1429 + t1432 * t515 + t1433 * t516 + t1444 * t677 + t1445 * t678 + t1458) * t1313 + (qJD(1) * t1441 + qJDD(1) * t1428 + t1430 * t515 + t1431 * t516 + t1446 * t677 + t1447 * t678 + t1459) * t1314 + (t1445 * t782 + t1444 * t779 + (t1432 * t782 + t1433 * t779) * qJD(1)) * t1317 + (t1432 * t779 - t1433 * t782) * t1329 + ((qJD(5) * t1370 - t1480) * t725 + ((t1417 * t780 - t1418 * t777 + t1488) * t671 + (t1420 * t780 - t1422 * t777 - t1515) * t542 + (-t1419 * t780 + t1421 * t777 + t1489) * t541 + t1379 * qJD(5)) * t724) * t1321 + (t1435 * t782 + t1434 * t779 + (t1426 * t782 + t1427 * t779) * qJD(1)) * t1305 + ((t1208 * t1437 + t1380 * t724) * qJD(5) + ((qJD(5) * t1436 + t1403) * t725 + t1405) * t782 + (t1417 * t589 + t1418 * t588) * t671 + (t1420 * t589 + t1422 * t588) * t542 + (-t1419 * t589 - t1421 * t588) * t541) * t1327 + (t1426 * t779 - t1427 * t782) * t1285 + (t1430 * t779 - t1431 * t782) * t1330 - t1400 * t262 / 0.2e1 - t1401 * t261 / 0.2e1 - t1402 * t517 / 0.2e1 - (t1449 * t782 + t1450 * t779) * t1114 / 0.2e1;
t643 = t688 * qJD(2);
t533 = t969 * t724;
t376 = rSges(6,1) * t588 - rSges(6,2) * t589;
t374 = -rSges(6,1) * t586 - rSges(6,2) * t587;
t355 = -t782 * t907 + t1217;
t349 = t355 * qJD(1);
t348 = t911 * qJD(2);
t190 = qJD(1) * t389 + qJDD(1) * t578 - t643 * t748 - t649 * t686 + t1144;
t189 = -t643 * t1116 + t650 * t686 + t1147 * qJDD(1) + (-t390 - t647) * qJD(1);
t188 = -t1342 * t782 + t796 * t779;
t187 = t1342 * t779 + t796 * t782;
t186 = -qJD(2) * t912 + t383 * t781 + t385 * t778;
t185 = -qJD(2) * t913 + t384 * t781 + t386 * t778;
t150 = qJD(1) * t995 - t598 * t678 + t878;
t129 = qJD(2) * t927 + t349;
t128 = qJD(2) * t928 + t1104;
t120 = qJD(1) * t333 + qJDD(1) * t512 - t515 * t633 - t568 * t677 + t857 + t996;
t119 = t516 * t633 - t568 * t678 + t1068 * qJDD(1) + (-t334 + t1176) * qJD(1) + t906;
t95 = t333 * t678 + t334 * t677 + t511 * t515 - t512 * t516 + t896;
t78 = qJD(1) * t282 + qJDD(1) * t484 - t507 * t677 - t515 * t598 + t791;
t47 = t283 * t677 + t483 * t515 + (t211 + t282) * t678 - t1174 * t516 + t853;
t26 = t176 * t542 + t178 * t541 + t261 * t328 - t262 * t332 + t794;
t24 = (qJD(1) * t706 - qJDD(4)) * t782 - t1177 * t261 + t824 * t779 + t799 - t1187 * t541 + t1188 * t671 + t1185 * t517 - pkin(2) * t1220 + t1339;
t15 = -qJDD(6) * t725 + t1109 * t724 - t1185 * t262 - t1186 * t261 + t1188 * t542 + t1189 * t541 + t794;
t1 = [(t1515 * t725 + (t1376 * t780 + t1514 * t777) * t724 + t1491) * t541 * t1321 + (t186 + t187) * t1043 + (t185 + t188 + t129) * t1042 + (t354 + t352) * t1322 + t1449 * t1324 + ((t1358 * t782 + t1357 + t1430 - t1498) * t678 + ((t1507 + t1528) * t782 + t1358 * t779 + t1431 + t1511) * t677 + t1443 - t1465) * t1319 + t1354 + (m(2) * (t687 ^ 2 + t689 ^ 2) + t628 * t750 + t630 * t749 + t908 + t594 * t725 + t596 * t724 + Icges(2,3)) * qJDD(1) + (t200 * t1130 + t201 * (-t1004 + t1136) + (t1237 * t633 - t201 * t591) * t772 + ((-t200 * rSges(4,3) + t201 * (-t735 - t723)) * t779 + (t200 * (-t735 - t1359) - t201 * t783) * t782) * qJD(1) - (-qJD(1) * t511 + t1375 - t200 + t864) * t201 + (t120 - g(2)) * (t1008 + t512) + (t119 - g(1)) * (-t511 - t1133)) * m(4) + (-t150 * t977 + t151 * (t1137 + t1148) + (t150 * t534 - t151 * t535) * t772 + ((-t150 * rSges(5,3) + t151 * (-t646 - t710)) * t779 + (t150 * (-t646 - t1360) - t151 * t771) * t782) * qJD(1) - (-qJD(1) * t483 + t678 * t861 - t150 + t838) * t151 + (t78 - g(2)) * (t1009 + t484) + (t77 - g(1)) * (-t483 + t1145)) * m(5) + (t349 + ((t215 - t487 + (t571 + t1226) * t782 + t1160) * t782 + t1159 * t779) * qJD(2)) * t1041 + (t128 - t1104 + ((t1010 * t782 - t1159 + t217) * t782 + (t1010 * t779 + t1018 + t216) * t779) * qJD(2)) * t1044 + (-qJD(2) * t907 + t1011 * t749 + t1012 * t750 + t1016 * t724 + t1017 * t725 + t640 * t781 + t641 * t778) * qJD(1) + (t355 + t353) * t1323 + (t25 * (-t607 + t1469) + t87 * (-t968 + t1131) + t88 * (t1148 + t1466) + (t88 * (-t724 * t734 - t1210) * t772 + (t25 * t777 + (-t1209 * t88 + t780 * t87) * qJD(5)) * pkin(5) + (t87 * (t891 + t1214) - t88 * t771) * qJD(1)) * t782 + (t87 * (-t605 + (t1284 * t772 + t1090) * t725) + (t1005 * t87 + t1284 * t25) * t724 + (-t1310 * t87 + t88 * t891) * qJD(1)) * t779 - g(1) * (t1213 * t1284 + t1469 + t982) - (t1502 + t832 - t87) * t88 - t88 * t1526 + t1035 * t542 + (t24 - g(2)) * (t1009 + t1470)) * m(7) + (t109 * (t624 - t972 + t1131) + t110 * (-pkin(4) * t1087 + t1077 + t1148 + t625) + (t33 * t863 + t109 * (t1211 * t1389 - t605)) * t779 + ((-t646 + t895) * t1248 + (t109 * (-t646 + t863) - t110 * t771) * t782) * qJD(1) - t895 * t1309 - (-t109 + t1493 + t832 + t1526) * t110 + (t34 - g(2)) * (t1009 + t332 + t539) + (t33 - g(1)) * (-t971 + t1145)) * m(6) + t1380 * t1333 + t1381 * t1332 - m(2) * (-g(1) * t687 + g(2) * t689) + (((t503 * t782 + t504 * t779) * t749 + (t476 * t782 + t477 * t779) * t724 + t1432 + t1495 + t1497) * t678 + (-t505 * t1202 + (t503 * t779 - t504 * t782) * t749 - t478 * t1208 + (t476 * t779 - t477 * t782) * t724 - t1357 + t1433 - t1494) * t677 + t1473) * t1316 + (t1434 + t1441) * t1318 + (-t1435 + t1440 + t1442) * t1317 + t1242 / 0.2e1 + t1243 / 0.2e1 - t1289 / 0.2e1 + t1286 / 0.2e1 - t1287 / 0.2e1 + t1288 / 0.2e1 + t1388 * t1326 + (t1426 + t1428) * t1330 + (t1427 + t1429) * t1329 + (t351 * (t740 + t1132) + (t1236 * t686 - t1234) * qJD(2) + ((-pkin(1) - t688) * t1235 + (t350 * (-rSges(3,3) - pkin(7)) + t351 * t1048) * t779) * qJD(1) - (-qJD(1) * t577 - t1059 - t350 - t652) * t351 + (t190 - g(2)) * t465 + (t189 - g(1)) * (t1048 * t779 + t1129 + t769)) * m(3) + t1240 / 0.2e1 + t1241 / 0.2e1 + (t1492 + t1449) * t1325; t786 + ((t1134 * t781 + t1135 * t778) * qJD(1) + (t1338 * t781 + t839 * t778) * qJD(2)) * t1306 + ((t214 * t779 + t215 * t782) * qJD(1) + t942) * t1042 + ((t216 * t779 + t217 * t782) * qJD(1) + t943) * t1043 + t928 * t1322 + t927 * t1323 + (-t185 * t782 + t186 * t779 + (t352 * t779 + t353 * t782) * qJD(1)) * t1305 + (-t352 * t782 + t353 * t779) * t1285 + (qJD(1) * t188 + qJD(2) * t942 + qJDD(1) * t354 + t214 * t650 + t215 * t649) * t1313 + (qJD(1) * t187 + qJD(2) * t943 + qJDD(1) * t355 + t216 * t650 + t217 * t649) * t1314 + t129 * t1045 + ((-t1116 * t1217 - t1119) * t782 + (t823 + (t1216 * t782 + t792) * qJD(2)) * t779) * t1041 + ((-t1216 * t748 + t1119) * t779 + (t823 + (t1217 * t779 + t792) * qJD(2)) * t782) * t1044 + t128 * t1046 + (-g(1) * (-t1199 * t725 + t1140 + t620) - g(2) * (-t1208 * t776 + t1142 + t619) - g(3) * (t768 + t856) - (-g(3) * t776 + t1034 * t1352) * t724 + t15 * (t842 + t1164) + t65 * (t819 + t1074) + t854 * t1398 + (t24 * t854 + t88 * t831 + (-t494 + t1001) * t1251) * t779 - t88 * (t495 + t795) - t65 * (t1023 + t807) - (-t88 * t1060 + (t1033 * t65 - t781 * t964) * qJD(2)) * pkin(2) - t793 + (t782 * t831 + t1395 + t1399) * t87) * m(7) + (-g(1) * (t620 + t1065) - g(2) * (t619 + t1066) - g(3) * (t768 + t837) - t809 + t26 * (t892 + t1164) + t97 * (t835 + t1074) + t877 * t1397 + (t34 * t877 + t110 * t836 + (-t494 + t1075) * t1249) * t779 - t110 * (t812 + t986) - t97 * (-t1056 * t332 + t1023 + t840) - (-t110 * t1060 + (t1033 * t97 - t781 * t944) * qJD(2)) * pkin(2) + (t782 * t836 + t1395 + t1396) * t109) * m(6) + (t150 * (t704 + t1154) + t47 * (t998 + t1164) + t125 * (t894 + t1074) + (t1384 * t899 + t150 * t847) * t782 + (t78 * t899 + t151 * t847 + (-t494 - t1174) * t1125) * t779 - t150 * (t976 + t1361) - t151 * (t1015 + t986) - t125 * (t1022 + t1023) - (-t151 * t1060 + ((-t150 * t782 - t151 * t779) * t781 + t125 * t1033) * qJD(2)) * pkin(2) - g(1) * (t620 - t535) - g(2) * (t619 - t534) - g(3) * (t768 + t979)) * m(5) + (-g(3) * (t1359 + t768) - t1352 * t862 - (-t201 * t1060 + (t1033 * t192 + t781 * t929) * qJD(2)) * pkin(2) + t95 * (t1161 + t1164) + t192 * (t1074 + t1076) + (t200 * t980 + (qJD(1) * t201 + t119) * t862) * t782 + (t120 * t862 + t201 * t980 + (t200 * t633 + t192 * (-t494 - t512)) * qJD(1)) * t779 + t1393) * m(4) + ((qJD(2) * t920 + t577 * t649 - t578 * t650) * t911 + t348 * ((t577 * t782 - t578 * t779) * qJD(1) + t920) + t921 * t643 + (-t189 * t782 - t190 * t779 + (-t351 * t782 + t1236) * qJD(1)) * t686 + g(1) * t618 + g(2) * t617 - g(3) * t688 - (t350 * t617 - t1234) * qJD(1) - (t348 * (-t617 * t779 - t618 * t782) + t921 * t688) * qJD(2)) * m(3); t786 + (-t88 * (-pkin(3) * t1062 + t795) - t793 + t15 * t842 + t903 * t1398 + (t1001 * t1251 + t24 * t903 + t88 * t880) * t779 - g(1) * t1140 - g(2) * t1142 - g(3) * (t856 - t1214) - t1352 * (t1034 * t724 - t1210 - t1311) + (t782 * t880 + t1399 - t679) * t87 + (-t807 - t905 + t819) * t65) * m(7) + (-t110 * (t855 + t812) + t26 * t892 + t981 * t1397 + (t1075 * t1249 + t110 * t904 + t34 * t981) * t779 - g(1) * (-pkin(3) * t1204 + t1065) - g(2) * (-pkin(3) * t1205 + t1066) - g(3) * t837 - t809 + (t585 - (-t1114 * t332 - t600) * t779 - t840 + t835) * t97 + (t782 * t904 + t1396 - t679) * t109) * m(6) + (-t151 * (t1015 + t855) + t47 * t998 + (-t1125 * t1174 + t151 * t985) * t779 - g(3) * t979 + (t1384 * t782 + t779 * t78 - t1352) * t861 + (t782 * t985 + t1154 - t679 - t976) * t150 + (-t1022 - t905 + t894) * t125) * m(5) + (t95 * t1161 + t192 * (-t1118 * t512 + t1076) + t929 * t568 + (-t119 * t782 - t120 * t779 + (-t201 * t782 + t1237) * qJD(1)) * t633 + g(1) * t591 + g(2) * t590 - g(3) * t1359 + t1393) * m(4); (-m(5) - m(7)) * t1351 + 0.2e1 * (t1313 * t24 + t1314 * t25 + t1331 * t65) * m(7) + 0.2e1 * (t125 * t1331 + t1313 * t78 + t1314 * t77) * m(5) + (0.2e1 * t97 * t1331 - t1351 + t1353) * m(6); (t1369 * t724 - t1380 * t725) * t1333 + (t1368 * t724 - t1381 * t725) * t1332 + (t1370 * t724 - t1379 * t725) * t517 / 0.2e1 + (-t1371 * t782 + t1372 * t589 - t1373 * t588) * t1327 + ((t1369 * t772 - t1388) * t725 + (qJD(1) * t1401 + t1380 * t772 + t1455 * t782 + t1456 * t779) * t724) * t1326 + ((t1368 * t772 - t1492) * t725 + (qJD(1) * t1400 + t1381 * t772 + t1453 * t782 + t1454 * t779) * t724) * t1325 + (-t1371 * t779 + t1372 * t587 + t1373 * t586) * t1324 + (t1471 * t725 + (t1372 * t780 + t1373 * t777) * t724) * t1321 + ((t1370 * t772 - t1475) * t725 + (qJD(1) * t1402 + t1379 * t772 + t1451 * t782 + t1452 * t779) * t724) * t1320 - (t1242 + t1243 + t1288 - t1289 + t1240 + t1241 + t1286 - t1287 + t1354) * t725 / 0.2e1 + t1448 * t1215 / 0.2e1 + t1458 * t1213 / 0.2e1 + t1459 * t1212 / 0.2e1 + ((-t25 * t1186 + t87 * t1189 - t24 * t1185 - t88 * t1188 + (-t1394 * t782 + t843 * t779) * t772) * t725 - g(1) * t1179 - g(2) * t1180 - (t1179 * t88 - t1180 * t87) * t671 - (t1179 * t65 + t87 * t983) * t542 - (t1180 * t65 + t88 * t983) * t541 + ((t1185 * t88 + t1036) * t772 + (qJD(1) * t843 - t1177 * t24 - t1186 * t15 - t1187 * t88 + t1189 * t65) * t782 + (qJD(1) * t1394 + t25 * t1177 - t15 * t1185 + t87 * t1187 - t65 * t1188) * t779 - g(3) * (-t1476 * t777 - t1294)) * t724) * m(7) + (-t109 * (-t374 * t671 - t533 * t542) - t110 * (t376 * t671 - t533 * t541) - t97 * (t374 * t541 + t376 * t542) - g(1) * t376 - g(2) * t374 - g(3) * t533 + (t109 * t178 - t110 * t176 + t33 * t328 - t34 * t332 + (t97 * t922 + (t109 * t779 - t110 * t782) * t450) * t772) * t725 + (t109 * (t244 * t779 - t328 * t772) + t110 * (-t244 * t782 + t332 * t772) + t26 * t922 + t97 * (-t1117 * t332 - t1118 * t328 - t176 * t779 + t178 * t782) + (qJD(1) * t944 + t1353) * t450) * t724) * m(6) + t1450 * (t724 * t1045 + t779 * t1049) + t1449 * (-t1064 / 0.2e1 + t782 * t1049); ((-t541 * t88 - t542 * t87 + t772 * t964 + g(3) - t15) * t725 + (t24 * t779 + t25 * t782 + (qJD(1) - t671) * (-t779 * t87 + t782 * t88) + (-t541 * t779 - t542 * t782 + t772) * t65 - t1352) * t724) * m(7);];
tau  = t1;
