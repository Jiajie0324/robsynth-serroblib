% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:33:01
% EndTime: 2019-03-09 16:33:17
% DurationCPUTime: 5.90s
% Computational Cost: add. (15535->517), mult. (40141->653), div. (0->0), fcn. (29965->8), ass. (0->286)
t242 = sin(qJ(5));
t245 = cos(qJ(5));
t243 = sin(qJ(3));
t244 = sin(qJ(2));
t316 = qJD(1) * t244;
t299 = t243 * t316;
t246 = cos(qJ(3));
t247 = cos(qJ(2));
t324 = t246 * t247;
t191 = -qJD(1) * t324 + t299;
t207 = t243 * t247 + t244 * t246;
t193 = qJD(1) * t207;
t241 = sin(pkin(10));
t352 = cos(pkin(10));
t262 = -t241 * t191 + t193 * t352;
t309 = qJD(2) + qJD(3);
t135 = t242 * t262 - t245 * t309;
t374 = -pkin(8) - pkin(7);
t219 = t374 * t247;
t213 = qJD(1) * t219;
t194 = t243 * t213;
t218 = t374 * t244;
t211 = qJD(1) * t218;
t366 = qJD(2) * pkin(2);
t200 = t211 + t366;
t155 = t246 * t200 + t194;
t188 = t193 * qJ(4);
t132 = t155 - t188;
t122 = pkin(3) * t309 + t132;
t198 = t246 * t213;
t156 = t200 * t243 - t198;
t351 = qJ(4) * t191;
t133 = t156 - t351;
t296 = t352 * t133;
t86 = t241 * t122 + t296;
t84 = pkin(9) * t309 + t86;
t150 = t352 * t191 + t193 * t241;
t234 = -pkin(2) * t247 - pkin(1);
t217 = qJD(1) * t234;
t164 = t191 * pkin(3) + qJD(4) + t217;
t93 = t150 * pkin(4) - pkin(9) * t262 + t164;
t44 = t242 * t93 + t245 * t84;
t31 = -qJ(6) * t135 + t44;
t389 = qJD(5) + t150;
t396 = t389 * t31;
t313 = qJD(5) * t242;
t334 = t150 * t242;
t395 = t313 + t334;
t303 = qJD(2) * t374;
t281 = qJD(1) * t303;
t201 = t244 * t281;
t202 = t247 * t281;
t314 = qJD(3) * t246;
t315 = qJD(3) * t243;
t283 = -t200 * t314 - t246 * t201 - t243 * t202 - t213 * t315;
t378 = t193 * t309;
t75 = -qJ(4) * t378 - t191 * qJD(4) - t283;
t183 = t246 * t202;
t290 = -t243 * t201 + t183;
t116 = -qJD(3) * t156 + t290;
t326 = t243 * t244;
t277 = t309 * t326;
t310 = qJD(1) * qJD(2);
t298 = t247 * t310;
t301 = t247 * t314;
t318 = -qJD(1) * t301 - t246 * t298;
t154 = qJD(1) * t277 + t318;
t76 = t154 * qJ(4) - t193 * qJD(4) + t116;
t39 = t241 * t76 + t352 * t75;
t114 = -t241 * t154 + t352 * t378;
t235 = pkin(2) * t316;
t141 = pkin(3) * t378 + qJD(2) * t235;
t250 = t352 * t154 + t241 * t378;
t58 = t114 * pkin(4) + pkin(9) * t250 + t141;
t9 = -qJD(5) * t44 - t242 * t39 + t245 * t58;
t394 = t389 * t44 + t9;
t312 = qJD(5) * t245;
t293 = -t242 * t58 - t245 * t39 - t93 * t312 + t84 * t313;
t43 = -t242 * t84 + t245 * t93;
t393 = -t389 * t43 - t293;
t392 = t150 * t262;
t391 = -qJD(5) * t309 + t250;
t286 = t389 * t245;
t327 = t242 * t114;
t390 = -t286 * t389 - t327;
t236 = t244 * t366;
t388 = 0.2e1 * t236;
t387 = -0.2e1 * t310;
t38 = t241 * t75 - t352 * t76;
t73 = -t242 * t391 + t262 * t312;
t17 = pkin(5) * t73 + t38;
t292 = t135 * pkin(5) + qJD(6);
t127 = t241 * t133;
t85 = t122 * t352 - t127;
t83 = -pkin(4) * t309 - t85;
t66 = t292 + t83;
t386 = t17 * t242 + t66 * t312;
t385 = t38 * t242 + t83 * t312;
t161 = t246 * t211 + t194;
t139 = -t188 + t161;
t160 = -t211 * t243 + t198;
t265 = t160 + t351;
t294 = t352 * t243;
t367 = pkin(2) * qJD(3);
t353 = -t139 * t241 + t352 * t265 + (t241 * t246 + t294) * t367;
t328 = t241 * t243;
t185 = (t246 * t352 - t328) * t367;
t99 = t139 * t352 + t241 * t265;
t384 = t185 - t99;
t373 = pkin(3) * t193;
t103 = pkin(4) * t262 + pkin(9) * t150 + t373;
t100 = t103 + t235;
t55 = t242 * t100 + t245 * t99;
t383 = -t245 * t185 + t55;
t382 = t17 * t245 - t66 * t313;
t381 = t245 * t38 - t83 * t313;
t379 = t150 * t309;
t167 = t246 * t218 + t219 * t243;
t146 = -qJ(4) * t207 + t167;
t168 = t243 * t218 - t246 * t219;
t206 = -t324 + t326;
t147 = -qJ(4) * t206 + t168;
t110 = t241 * t146 + t147 * t352;
t107 = t245 * t110;
t158 = t206 * t352 + t207 * t241;
t159 = -t241 * t206 + t207 * t352;
t174 = pkin(3) * t206 + t234;
t108 = pkin(4) * t158 - pkin(9) * t159 + t174;
t60 = t242 * t108 + t107;
t377 = -qJ(6) * t334 + t245 * qJD(6);
t376 = t395 * pkin(5);
t137 = t242 * t309 + t245 * t262;
t375 = t137 ^ 2;
t372 = pkin(3) * t241;
t371 = pkin(5) * t114;
t370 = t242 * t9;
t369 = t245 * pkin(5);
t7 = t293 * t245;
t30 = -qJ(6) * t137 + t43;
t23 = pkin(5) * t389 + t30;
t368 = t23 - t30;
t109 = -t352 * t146 + t147 * t241;
t365 = t109 * t38;
t364 = t150 * t83;
t72 = t245 * t391 + t262 * t313;
t361 = t72 * t242;
t360 = t73 * t245;
t233 = pkin(2) * t246 + pkin(3);
t187 = pkin(2) * t294 + t241 * t233;
t179 = pkin(9) + t187;
t320 = -qJ(6) - t179;
t289 = qJD(5) * t320;
t359 = t242 * t289 + t377 - t383;
t238 = t245 * qJ(6);
t278 = pkin(5) * t262 + t150 * t238;
t54 = t245 * t100 - t242 * t99;
t358 = (-qJD(6) - t185) * t242 + t245 * t289 - t278 - t54;
t357 = -t135 * t312 - t242 * t73;
t356 = t376 + t353;
t230 = pkin(9) + t372;
t319 = -qJ(6) - t230;
t288 = qJD(5) * t319;
t91 = t132 * t352 - t127;
t53 = t242 * t103 + t245 * t91;
t355 = t242 * t288 + t377 - t53;
t52 = t245 * t103 - t242 * t91;
t354 = -t242 * qJD(6) + t245 * t288 - t278 - t52;
t350 = t114 * t158;
t162 = -qJD(2) * t324 + t277 - t301;
t260 = t207 * qJD(3);
t163 = qJD(2) * t207 + t260;
t118 = -t162 * t352 - t241 * t163;
t349 = t118 * t242;
t348 = t118 * t245;
t347 = t135 * t389;
t346 = t135 * t262;
t345 = t135 * t150;
t344 = t135 * t242;
t343 = t137 * t135;
t342 = t137 * t389;
t341 = t137 * t262;
t340 = t137 * t242;
t339 = t137 * t245;
t338 = t389 * t262;
t337 = t262 ^ 2;
t335 = t150 ^ 2;
t333 = t150 * t245;
t331 = t159 * t242;
t330 = t193 * t191;
t329 = t217 * t193;
t111 = t245 * t114;
t249 = qJD(1) ^ 2;
t323 = t247 * t249;
t248 = qJD(2) ^ 2;
t322 = t248 * t244;
t321 = t248 * t247;
t317 = t244 ^ 2 - t247 ^ 2;
t308 = -t43 * t333 - t44 * t334 - t7;
t212 = t244 * t303;
t214 = t247 * t303;
t121 = -qJD(3) * t168 - t243 * t212 + t246 * t214;
t253 = t162 * qJ(4) - t207 * qJD(4) + t121;
t120 = t246 * t212 + t243 * t214 + t218 * t314 + t219 * t315;
t97 = -qJ(4) * t163 - qJD(4) * t206 + t120;
t51 = t241 * t253 + t352 * t97;
t117 = -t162 * t241 + t163 * t352;
t153 = pkin(3) * t163 + t236;
t65 = pkin(4) * t117 - pkin(9) * t118 + t153;
t307 = t108 * t312 + t242 * t65 + t245 * t51;
t304 = t244 * t323;
t302 = t352 * pkin(3);
t300 = t159 * t312;
t50 = t241 * t97 - t352 * t253;
t297 = -t242 * t51 + t245 * t65;
t291 = pkin(1) * t387;
t59 = t245 * t108 - t110 * t242;
t90 = t132 * t241 + t296;
t287 = t389 * t242;
t285 = t262 * t309;
t282 = t262 * t44 + t385;
t280 = t244 * t298;
t279 = -t90 + t376;
t231 = -t302 - pkin(4);
t276 = -t150 * t85 + t262 * t86;
t275 = -t23 * t245 - t242 * t31;
t274 = -t242 * t44 - t245 * t43;
t273 = t242 * t43 - t245 * t44;
t186 = -pkin(2) * t328 + t233 * t352;
t272 = -t114 * t179 + t364;
t271 = -t114 * t230 + t364;
t270 = -qJ(6) * t118 - qJD(6) * t159;
t178 = -pkin(4) - t186;
t269 = -t389 * t395 + t111;
t268 = -t262 * t43 - t381;
t267 = -t164 * t262 - t38;
t266 = qJ(6) * t73 + t293;
t264 = t300 + t349;
t263 = -t159 * t313 + t348;
t261 = t217 * t191 + t283;
t259 = t262 * t31 + t333 * t66 + t386;
t258 = t150 * t164 - t39;
t257 = -t23 * t262 + t334 * t66 - t382;
t256 = t274 * qJD(5) - t370 - t7;
t254 = qJ(6) * t72 + t9;
t1 = -qJD(6) * t137 + t254 + t371;
t3 = -qJD(6) * t135 - t266;
t255 = qJD(5) * t275 - t1 * t242 - t23 * t333 + t3 * t245 - t31 * t334;
t215 = t231 - t369;
t204 = t230 * t245 + t238;
t203 = t319 * t242;
t171 = t178 - t369;
t170 = t235 + t373;
t166 = t179 * t245 + t238;
t165 = t320 * t242;
t140 = -t191 ^ 2 + t193 ^ 2;
t134 = t135 ^ 2;
t125 = -t318 + (t191 - t299) * t309;
t82 = -t250 + t379;
t81 = -t114 + t285;
t80 = pkin(5) * t331 + t109;
t69 = -t134 + t375;
t67 = -t335 + t337;
t48 = -qJ(6) * t331 + t60;
t47 = t117 * t389 + t350;
t46 = -t73 + t342;
t45 = -t72 + t347;
t42 = pkin(5) * t158 - t159 * t238 + t59;
t33 = t135 * t287 - t360;
t32 = t137 * t286 - t361;
t29 = -t341 + t390;
t28 = -t341 - t390;
t27 = t269 + t346;
t26 = t269 - t346;
t22 = pkin(5) * t264 + t50;
t19 = t135 * t264 + t331 * t73;
t18 = -t72 * t245 * t159 + t137 * t263;
t15 = (-t72 - t345) * t245 - t389 * t340 + t357;
t14 = (t72 - t345) * t245 + t137 * t287 + t357;
t13 = -qJD(5) * t60 + t297;
t12 = -t110 * t313 + t307;
t11 = -t135 * t117 - t73 * t158 - t159 * t327 - t264 * t389;
t10 = t111 * t159 + t137 * t117 - t72 * t158 + t263 * t389;
t6 = -qJ(6) * t300 + (-qJD(5) * t110 + t270) * t242 + t307;
t5 = (-t135 * t245 - t340) * t118 + (t361 - t360 + (-t339 + t344) * qJD(5)) * t159;
t4 = pkin(5) * t117 + t270 * t245 + (-t107 + (qJ(6) * t159 - t108) * t242) * qJD(5) + t297;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t280, t317 * t387, t321, -0.2e1 * t280, -t322, 0, -pkin(7) * t321 + t244 * t291, pkin(7) * t322 + t247 * t291, 0, 0, -t154 * t207 - t162 * t193, t154 * t206 + t162 * t191 - t193 * t163 - t207 * t378, -t162 * t309, t191 * t163 + t206 * t378, -t163 * t309, 0, t191 * t236 + t217 * t163 + t121 * t309 + (t234 * t260 + (t244 * pkin(2) * t206 + t207 * t234) * qJD(2)) * qJD(1), -t120 * t309 - t234 * t154 - t217 * t162 + t193 * t388, -t116 * t207 - t120 * t191 - t121 * t193 + t167 * t154 + t155 * t162 - t156 * t163 - t168 * t378 + t206 * t283, t116 * t167 + t156 * t120 + t155 * t121 - t168 * t283 + t217 * t388, t262 * t118 - t159 * t250, -t159 * t114 - t117 * t262 - t118 * t150 + t158 * t250, t118 * t309, t117 * t150 + t350, -t117 * t309, 0, t174 * t114 + t164 * t117 + t141 * t158 + t153 * t150 - t309 * t50, t164 * t118 + t141 * t159 + t153 * t262 - t174 * t250 - t309 * t51, -t109 * t250 - t110 * t114 - t86 * t117 - t85 * t118 - t51 * t150 - t39 * t158 + t38 * t159 + t262 * t50, t110 * t39 + t141 * t174 + t153 * t164 - t50 * t85 + t51 * t86 + t365, t18, t5, t10, t19, t11, t47, t109 * t73 + t114 * t59 + t117 * t43 + t13 * t389 + t135 * t50 + t158 * t9 + t159 * t385 + t83 * t349, -t109 * t72 - t114 * t60 - t117 * t44 - t12 * t389 + t137 * t50 + t158 * t293 + t159 * t381 + t83 * t348, -t12 * t135 - t13 * t137 + t59 * t72 - t60 * t73 + t274 * t118 + (qJD(5) * t273 + t242 * t293 - t9 * t245) * t159, t12 * t44 + t13 * t43 - t293 * t60 + t50 * t83 + t59 * t9 + t365, t18, t5, t10, t19, t11, t47, t1 * t158 + t114 * t42 + t117 * t23 + t135 * t22 + t159 * t386 + t66 * t349 + t389 * t4 + t73 * t80, -t114 * t48 - t117 * t31 + t137 * t22 - t158 * t3 + t159 * t382 + t66 * t348 - t389 * t6 - t72 * t80, -t135 * t6 - t137 * t4 + t42 * t72 - t48 * t73 + t275 * t118 + (-t1 * t245 - t3 * t242 + (t23 * t242 - t245 * t31) * qJD(5)) * t159, t1 * t42 + t17 * t80 + t22 * t66 + t23 * t4 + t3 * t48 + t31 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t304, t317 * t249, 0, t304, 0, 0, t249 * pkin(1) * t244, pkin(1) * t323, 0, 0, t330, t140, t125, -t330, 0, 0, t213 * t314 + t183 - t191 * t235 - t329 - t160 * t309 + (-qJD(3) * t200 - t309 * t367 - t201) * t243, t161 * t309 + (-t193 * t316 - t309 * t314) * pkin(2) + t261 (t156 + t160) * t193 + (-t155 + t161) * t191 + (t246 * t154 + (-t246 * t191 + t243 * t193) * qJD(3) - t243 * t378) * pkin(2), -t155 * t160 - t156 * t161 + (-t217 * t316 - t283 * t243 + t116 * t246 + (-t155 * t243 + t156 * t246) * qJD(3)) * pkin(2), t392, t67, t82, -t392, t81, 0, -t170 * t150 - t309 * t353 + t267, -t170 * t262 - t309 * t384 + t258, -t187 * t114 - t150 * t384 + t186 * t250 + t262 * t353 + t276, -t164 * t170 - t38 * t186 + t39 * t187 - t353 * t85 + t384 * t86, t32, t15, t28, t33, t27, -t338, t178 * t73 + t272 * t242 + t353 * t135 + (-t179 * t312 - t242 * t185 - t54) * t389 + t268, -t178 * t72 + t272 * t245 + t353 * t137 + (t179 * t313 + t383) * t389 + t282, t135 * t55 + t137 * t54 + (-t135 * t185 - t179 * t73 + (t137 * t179 - t43) * qJD(5)) * t245 + (t137 * t185 - t179 * t72 - t9 + (t135 * t179 - t44) * qJD(5)) * t242 + t308, t178 * t38 + t179 * t256 - t185 * t273 + t353 * t83 - t43 * t54 - t44 * t55, t32, t15, t28, t33, t27, -t338, t114 * t165 + t135 * t356 + t171 * t73 + t358 * t389 + t257, -t114 * t166 + t137 * t356 - t171 * t72 - t359 * t389 + t259, -t135 * t359 - t137 * t358 + t165 * t72 - t166 * t73 + t255, t1 * t165 + t166 * t3 + t17 * t171 + t23 * t358 + t31 * t359 + t356 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330, t140, t125, -t330, 0, 0, t156 * qJD(2) + t290 - t329, t155 * t309 + t261, 0, 0, t392, t67, t82, -t392, t81, 0, -t150 * t373 + t309 * t90 + t267, -t262 * t373 + t309 * t91 + t258, -t114 * t372 + t91 * t150 + t250 * t302 - t262 * t90 + t276, t85 * t90 - t86 * t91 + (-t164 * t193 + t241 * t39 - t352 * t38) * pkin(3), t32, t15, t28, t33, t27, -t338, -t135 * t90 + t231 * t73 + t271 * t242 + (-t230 * t312 - t52) * t389 + t268, -t137 * t90 - t231 * t72 + t271 * t245 + (t230 * t313 + t53) * t389 + t282, t135 * t53 + t137 * t52 - t370 + (-t360 - t361) * t230 + ((t339 + t344) * t230 + t274) * qJD(5) + t308, t230 * t256 + t231 * t38 - t43 * t52 - t44 * t53 - t83 * t90, t32, t15, t28, t33, t27, -t338, t114 * t203 + t135 * t279 + t215 * t73 + t354 * t389 + t257, -t114 * t204 + t137 * t279 - t215 * t72 - t355 * t389 + t259, -t135 * t355 - t137 * t354 + t203 * t72 - t204 * t73 + t255, t1 * t203 + t17 * t215 + t204 * t3 + t23 * t354 + t279 * t66 + t31 * t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114 + t285, -t250 - t379, -t335 - t337, t150 * t86 + t262 * t85 + t141, 0, 0, 0, 0, 0, 0, t26, t29, t14, t242 * t393 + t245 * t394 - t83 * t262, 0, 0, 0, 0, 0, 0, t26, t29, t14, -t66 * t262 + (t1 + t396) * t245 + (-t23 * t389 + t3) * t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, t69, t45, -t343, t46, t114, -t83 * t137 + t394, t135 * t83 - t393, 0, 0, t343, t69, t45, -t343, t46, t114, 0.2e1 * t371 + t396 + (-t292 - t66) * t137 + t254, -pkin(5) * t375 + t389 * t30 + (qJD(6) + t66) * t135 + t266, t72 * pkin(5) - t135 * t368, t368 * t31 + (-t137 * t66 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73 + t342, -t72 - t347, -t134 - t375, t135 * t31 + t137 * t23 + t17;];
tauc_reg  = t2;
