% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:29:35
% EndTime: 2019-03-09 18:30:45
% DurationCPUTime: 47.14s
% Computational Cost: add. (27992->915), mult. (61775->1169), div. (0->0), fcn. (71370->10), ass. (0->690)
t652 = sin(pkin(11));
t653 = cos(pkin(11));
t656 = sin(qJ(3));
t659 = cos(qJ(3));
t588 = t652 * t659 + t653 * t656;
t658 = cos(qJ(5));
t580 = t658 * t588;
t587 = -t652 * t656 + t653 * t659;
t655 = sin(qJ(5));
t954 = t655 * t587;
t1096 = t580 + t954;
t1019 = -qJ(4) - pkin(8);
t605 = t1019 * t656;
t606 = t1019 * t659;
t1095 = t653 * t605 + t652 * t606;
t1124 = -pkin(9) * t588 + t1095;
t1171 = t658 * t1124;
t527 = t652 * t605 - t653 * t606;
t469 = -pkin(9) * t587 - t527;
t1176 = t655 * t469;
t775 = t1171 + t1176;
t1210 = -pkin(10) * t1096 + t775;
t654 = sin(qJ(6));
t1216 = t654 * t1210;
t1031 = cos(qJ(6));
t1097 = t658 * t587 - t655 * t588;
t1172 = t655 * t1124;
t1175 = t658 * t469;
t812 = t1175 - t1172;
t256 = -pkin(10) * t1097 + t812;
t1217 = t1031 * t256;
t254 = t1217 / 0.2e1;
t1227 = -t1216 / 0.2e1 + t254;
t1229 = 0.2e1 * t1227;
t660 = cos(qJ(2));
t1033 = -t660 / 0.2e1;
t110 = t1217 - t1216;
t1228 = t1033 * t110;
t1185 = qJD(3) + qJD(5);
t1214 = t1031 * t1210;
t800 = t1214 / 0.2e1;
t801 = -t1214 / 0.2e1;
t1221 = t801 + t800;
t1226 = qJD(2) * t1221;
t1207 = t1031 * t1097 - t654 * t1096;
t1083 = qJD(4) * t1207;
t1225 = qJD(6) * t1221 - t1083;
t1032 = t660 / 0.2e1;
t640 = -pkin(3) * t659 - pkin(2);
t559 = -pkin(4) * t587 + t640;
t397 = -pkin(5) * t1097 + t559;
t1054 = t397 / 0.2e1;
t657 = sin(qJ(2));
t951 = t657 * t659;
t953 = t656 * t657;
t569 = -t652 * t953 + t653 * t951;
t556 = t658 * t569;
t567 = -t652 * t951 - t653 * t953;
t957 = t655 * t567;
t1098 = t556 + t957;
t774 = t567 * t658 - t655 * t569;
t1208 = t1031 * t774 - t654 * t1098;
t1218 = t654 * t256;
t1220 = t1214 + t1218;
t1224 = -t1032 * t1220 - t1054 * t1208;
t1174 = -t1218 / 0.2e1 + t801;
t1223 = 0.2e1 * t1174;
t1222 = -t1217 / 0.2e1;
t1125 = qJD(5) + qJD(6);
t1213 = qJD(3) + t1125;
t856 = t1213 * t1207;
t1215 = qJD(3) * t1208;
t1081 = qJD(4) * t1208;
t1212 = qJD(1) * t1208 + qJD(2) * t1207;
t1211 = t1032 * t812;
t1105 = t654 * t774;
t1127 = t1031 * t1098;
t1165 = t1127 + t1105;
t1196 = -t1165 ^ 2 + t1208 ^ 2;
t1169 = qJD(1) * t1196;
t1129 = t1031 * t1096;
t1139 = t654 * t1097;
t1164 = t1139 + t1129;
t1195 = -t1164 ^ 2 + t1207 ^ 2;
t1166 = qJD(2) * t1195;
t1206 = t1207 / 0.2e1;
t1209 = t1165 * t1206;
t869 = t660 * qJD(1);
t1205 = t1208 * t869;
t908 = qJD(1) * t1165;
t1151 = t1208 * t908;
t601 = pkin(3) * t953 + t657 * pkin(7);
t508 = -pkin(4) * t567 + t601;
t353 = -pkin(5) * t774 + t508;
t1150 = t353 * t1208;
t1204 = t1207 * t397;
t896 = qJD(2) * t1164;
t1148 = t1207 * t896;
t1202 = t1164 * t1208 / 0.2e1;
t418 = -t1127 / 0.2e1;
t799 = t1127 / 0.2e1;
t1191 = t418 + t799;
t1201 = qJD(1) * t1191;
t484 = -t1129 / 0.2e1;
t1074 = -t1139 / 0.2e1 + t484;
t798 = t1129 / 0.2e1;
t1147 = t798 + t1139 / 0.2e1;
t1094 = -t1074 + t1147;
t1143 = t1164 * t660;
t568 = t588 * t660;
t555 = t658 * t568;
t943 = t659 * t660;
t952 = t656 * t660;
t571 = -t652 * t952 + t653 * t943;
t955 = t655 * t571;
t457 = t555 + t955;
t425 = t1031 * t457;
t946 = t658 * t571;
t956 = t655 * t568;
t460 = t946 - t956;
t973 = t654 * t460;
t789 = -t425 / 0.2e1 - t973 / 0.2e1;
t1163 = -t1143 / 0.2e1 + t789;
t1187 = qJD(1) * t1163;
t1200 = -qJD(3) * t1094 - t1187;
t1093 = t1074 + t1147;
t1199 = qJD(3) * t1093 + t1187;
t1149 = t1207 * t660;
t842 = t1031 * t460;
t976 = t654 * t457;
t923 = -t976 / 0.2e1 + t842 / 0.2e1;
t1161 = t1149 / 0.2e1 + t923;
t1188 = qJD(1) * t1161;
t1198 = -t1188 + t856;
t1194 = qJD(3) * t1223;
t1051 = -t1171 / 0.2e1;
t1052 = t1175 / 0.2e1;
t753 = t896 + t908;
t1190 = t1164 * t397;
t1142 = t1165 * t353;
t269 = t1165 * t869;
t1155 = -t1164 / 0.2e1;
t1186 = t1165 * t1155;
t1027 = pkin(7) * t656;
t794 = -pkin(2) * t660 - t657 * pkin(8);
t604 = -pkin(1) + t794;
t590 = t659 * t604;
t793 = -qJ(4) * t951 + t590;
t507 = (-pkin(3) - t1027) * t660 + t793;
t863 = pkin(7) * t943;
t558 = t656 * t604 + t863;
t522 = -qJ(4) * t953 + t558;
t512 = t652 * t522;
t373 = t653 * t507 - t512;
t1057 = t373 / 0.2e1;
t865 = pkin(7) * t952;
t521 = t793 - t865;
t392 = t653 * t521 - t512;
t1184 = -t392 / 0.2e1 + t1057;
t1045 = t1096 / 0.2e1;
t1156 = t1097 / 0.2e1;
t1157 = t1045 * t774 + t1098 * t1156;
t893 = qJD(2) * t1096;
t1183 = qJD(1) * t1157 + t1097 * t893;
t1160 = -t1149 / 0.2e1 + t923;
t1182 = qJD(2) * t1160 + t1215;
t899 = qJD(1) * t1098;
t1181 = qJD(2) * t1157 + t774 * t899;
t1180 = qJD(2) * t1163 + qJD(3) * t1191 - t269;
t1179 = qJD(2) * t1161 + t1205;
t1050 = t774 / 0.2e1;
t1092 = 0.2e1 * t1050 * t654 + 0.2e1 * t799;
t1162 = t1143 / 0.2e1 + t789;
t1178 = qJD(2) * t1162 - qJD(3) * t1092;
t1177 = qJD(3) * t1229 + qJD(4) * t1093;
t1034 = -t657 / 0.2e1;
t991 = t653 * t522;
t374 = t652 * t507 + t991;
t391 = -t521 * t652 - t991;
t1102 = t374 + t391;
t1120 = -t1098 ^ 2 + t774 ^ 2;
t1168 = qJD(1) * t1120;
t1117 = -t1096 ^ 2 + t1097 ^ 2;
t1167 = qJD(2) * t1117;
t1055 = -t397 / 0.2e1;
t1158 = t1055 * t1165 + t1155 * t353;
t1042 = -t1095 / 0.2e1;
t1043 = t1095 / 0.2e1;
t1028 = pkin(5) * t1096;
t1029 = pkin(5) * t1098;
t1152 = pkin(10) * t1098;
t924 = t1185 * t1097;
t745 = t893 + t899;
t1146 = qJD(5) * t1208;
t1144 = t1098 * t508;
t422 = t1098 * t869;
t1141 = t1208 * qJD(6);
t1134 = qJD(4) * t1191;
t1133 = qJD(4) * t1092;
t1131 = qJD(4) * t1094;
t1130 = qJD(4) * t1097;
t1030 = pkin(3) * t652;
t855 = pkin(3) * t653 + pkin(4);
t576 = t1030 * t655 - t658 * t855;
t572 = pkin(5) - t576;
t839 = t1031 * t572;
t577 = t1030 * t658 + t655 * t855;
t967 = t654 * t577;
t463 = -t839 + t967;
t1020 = t660 * pkin(8);
t1022 = t657 * pkin(2);
t608 = -t1020 + t1022;
t600 = t659 * t608;
t631 = pkin(7) * t953;
t516 = t657 * pkin(3) - qJ(4) * t943 + t600 + t631;
t599 = t656 * t608;
t864 = pkin(7) * t951;
t523 = -qJ(4) * t952 + t599 - t864;
t386 = t653 * t516 - t523 * t652;
t311 = pkin(4) * t657 - pkin(9) * t571 + t386;
t297 = t658 * t311;
t387 = t652 * t516 + t653 * t523;
t319 = -pkin(9) * t568 + t387;
t964 = t655 * t319;
t813 = t297 - t964;
t136 = t657 * pkin(5) - pkin(10) * t460 + t813;
t853 = t1031 * t136;
t296 = t655 * t311;
t312 = t658 * t319;
t925 = t312 + t296;
t138 = -pkin(10) * t457 + t925;
t986 = t654 * t138;
t934 = t853 / 0.2e1 - t986 / 0.2e1;
t1122 = t1034 * t463 + t934;
t560 = t1031 * t577;
t969 = t654 * t572;
t464 = t560 + t969;
t851 = t1031 * t138;
t988 = t654 * t136;
t935 = -t988 / 0.2e1 - t851 / 0.2e1;
t1121 = t1034 * t464 + t935;
t1115 = qJD(1) * t774 + qJD(2) * t1097;
t1041 = -t559 / 0.2e1;
t1044 = -t508 / 0.2e1;
t1114 = t1041 * t774 + t1044 * t1097;
t1112 = qJD(2) * t1093 + t1201;
t1111 = qJD(1) * t1092 + qJD(2) * t1094;
t1109 = -t1165 / 0.2e1;
t1108 = pkin(10) * t774;
t1107 = t508 * t774;
t1104 = t774 * t869;
t1085 = qJD(3) * t774;
t1080 = qJD(4) * t774;
t1079 = qJD(5) * t774;
t922 = -t956 / 0.2e1 + t946 / 0.2e1;
t648 = t656 ^ 2;
t650 = t659 ^ 2;
t623 = t650 - t648;
t871 = t657 * qJD(1);
t837 = t659 * t871;
t1071 = qJD(2) * t623 - 0.2e1 * t656 * t837;
t1026 = pkin(9) * t567;
t320 = t391 - t1026;
t318 = t658 * t320;
t1066 = t318 / 0.2e1;
t1065 = t353 / 0.2e1;
t1062 = -t1207 / 0.2e1;
t632 = pkin(3) * t951;
t815 = pkin(4) * t569 + t632;
t369 = t815 + t1029;
t1058 = t369 / 0.2e1;
t645 = t656 * pkin(3);
t561 = pkin(4) * t588 + t645;
t400 = t561 + t1028;
t1053 = t400 / 0.2e1;
t1049 = -t1098 / 0.2e1;
t1046 = -t1096 / 0.2e1;
t821 = t556 / 0.2e1;
t1040 = -t567 / 0.2e1;
t820 = t580 / 0.2e1;
t1038 = -t587 / 0.2e1;
t1036 = t652 / 0.2e1;
t1035 = -t653 / 0.2e1;
t1024 = t569 * pkin(9);
t1023 = t654 * pkin(5);
t1021 = t660 * pkin(5);
t1018 = pkin(3) * qJD(3);
t282 = t425 + t973;
t629 = pkin(3) * t952;
t647 = t660 * pkin(7);
t602 = t647 + t629;
t509 = pkin(4) * t568 + t602;
t354 = pkin(5) * t457 + t509;
t302 = -pkin(4) * t660 - t1024 + t373;
t289 = t658 * t302;
t317 = t374 + t1026;
t965 = t655 * t317;
t157 = -t289 + t965;
t738 = -t157 - t1152;
t131 = t738 - t1021;
t854 = t1031 * t131;
t950 = t658 * t317;
t966 = t655 * t302;
t158 = t950 + t966;
t137 = t158 + t1108;
t987 = t654 * t137;
t64 = -t854 + t987;
t5 = (t853 - t986) * t660 + t64 * t657 + t354 * t1208 - t353 * t282;
t1017 = t5 * qJD(1);
t286 = t842 - t976;
t852 = t1031 * t137;
t989 = t654 * t131;
t65 = t852 + t989;
t6 = (t851 + t988) * t660 - t65 * t657 + t354 * t1165 + t353 * t286;
t1016 = t6 * qJD(1);
t124 = -t1096 * t1098 + t1097 * t774;
t92 = t1046 * t1098 + t1049 * t1096 + 0.2e1 * t1156 * t774;
t1015 = t92 * qJD(3) + t124 * qJD(5);
t321 = t392 - t1024;
t962 = t655 * t321;
t178 = t318 - t962;
t144 = t178 - t1108;
t850 = t1031 * t144;
t949 = t658 * t321;
t963 = t655 * t320;
t179 = t949 + t963;
t145 = t179 - t1152;
t984 = t654 * t145;
t68 = t850 - t984;
t27 = t1208 * t369 + t660 * t68 - t1142;
t1014 = qJD(1) * t27;
t849 = t1031 * t145;
t985 = t654 * t144;
t69 = t849 + t985;
t28 = t1165 * t369 + t660 * t69 + t1150;
t1013 = qJD(1) * t28;
t703 = t654 * t738;
t66 = -t703 - t852;
t29 = t1029 * t1208 + t66 * t660 - t1142;
t1012 = qJD(1) * t29;
t680 = t1031 * t738;
t67 = t680 - t987;
t30 = t1029 * t1165 + t660 * t67 + t1150;
t1011 = qJD(1) * t30;
t37 = -t64 * t660 + t1150;
t1010 = qJD(1) * t37;
t38 = -t65 * t660 - t1142;
t1009 = qJD(1) * t38;
t89 = t178 * t660 + t774 * t815 - t1144;
t1008 = qJD(1) * t89;
t90 = t1098 * t815 + t179 * t660 + t1107;
t1007 = qJD(1) * t90;
t1001 = t463 * t660;
t999 = t464 * t660;
t968 = t654 * t576;
t467 = t560 - t968;
t998 = t467 * t660;
t838 = t1031 * t576;
t468 = -t838 - t967;
t997 = t468 * t660;
t47 = t157 * t657 - t508 * t457 + t509 * t774 + t660 * t813;
t996 = t47 * qJD(1);
t48 = t1098 * t509 - t158 * t657 + t508 * t460 + t660 * t925;
t995 = t48 * qJD(1);
t994 = t1097 * t660;
t993 = t1096 * t660;
t992 = t601 * t656;
t649 = t657 ^ 2;
t944 = t659 * t649;
t80 = -t1165 * t282 + t1208 * t286;
t942 = t80 * qJD(1);
t84 = -t373 * t571 - t374 * t568 - t386 * t569 + t387 * t567;
t941 = t84 * qJD(1);
t88 = -t1102 * t569 + (-t373 + t392) * t567;
t940 = t88 * qJD(1);
t95 = t373 * t386 + t374 * t387 + t601 * t602;
t939 = t95 * qJD(1);
t97 = t373 * t391 + t374 * t392 + t601 * t632;
t938 = t97 * qJD(1);
t805 = -t852 / 0.2e1;
t937 = -t989 / 0.2e1 + t805;
t825 = t987 / 0.2e1;
t936 = -t854 / 0.2e1 + t825;
t933 = -t703 / 0.2e1 + t805;
t932 = t825 - t680 / 0.2e1;
t931 = t1185 * t1157;
t651 = t660 ^ 2;
t624 = t651 - t649;
t100 = -t157 * t660 + t1107;
t921 = qJD(1) * t100;
t101 = -t158 * t660 - t1144;
t920 = qJD(1) * t101;
t146 = -t1208 * t657 - t282 * t660;
t919 = qJD(1) * t146;
t147 = -t1165 * t657 + t286 * t660;
t918 = qJD(1) * t147;
t829 = t1164 * t1033;
t166 = t829 - t789;
t917 = qJD(1) * t166;
t168 = t829 + t789;
t915 = qJD(1) * t168;
t828 = t1207 * t1032;
t175 = t828 + t923;
t911 = qJD(1) * t175;
t176 = t828 - t923;
t910 = qJD(1) * t176;
t180 = -t373 * t569 + t374 * t567;
t909 = qJD(1) * t180;
t287 = -t457 * t660 - t657 * t774;
t907 = qJD(1) * t287;
t288 = -t1098 * t657 + t460 * t660;
t906 = qJD(1) * t288;
t787 = -t555 / 0.2e1 - t955 / 0.2e1;
t827 = t1096 * t1033;
t322 = t827 - t787;
t905 = qJD(1) * t322;
t323 = t827 + t787;
t904 = qJD(1) * t323;
t324 = -t993 / 0.2e1 + t787;
t903 = qJD(1) * t324;
t325 = t994 / 0.2e1 + t922;
t902 = qJD(1) * t325;
t826 = t1097 * t1032;
t327 = t826 + t922;
t901 = qJD(1) * t327;
t328 = t826 - t922;
t900 = qJD(1) * t328;
t557 = -t590 + t865;
t510 = -t1027 * t649 - t557 * t660;
t898 = qJD(1) * t510;
t511 = -pkin(7) * t944 - t558 * t660;
t897 = qJD(1) * t511;
t895 = qJD(2) * t397;
t892 = qJD(2) * t559;
t891 = qJD(2) * t656;
t890 = qJD(2) * t659;
t889 = qJD(3) * t1165;
t888 = qJD(3) * t1098;
t887 = qJD(3) * t656;
t886 = qJD(3) * t659;
t885 = qJD(3) * t660;
t884 = qJD(4) * t660;
t500 = t820 - t580 / 0.2e1;
t882 = qJD(5) * t500;
t880 = qJD(5) * t559;
t878 = qJD(6) * t397;
t165 = -t1098 * t457 + t460 * t774;
t877 = t165 * qJD(1);
t395 = t557 * t657 + (-t631 + t600) * t660;
t876 = t395 * qJD(1);
t396 = t599 * t660 + (-t558 + t863) * t657;
t875 = t396 * qJD(1);
t597 = t624 * t656;
t874 = t597 * qJD(1);
t598 = t651 * t659 - t944;
t873 = t598 * qJD(1);
t872 = t624 * qJD(1);
t870 = t657 * qJD(2);
t868 = t660 * qJD(2);
t34 = -(t1062 - t1206) * t1208 + 0.2e1 * t1186;
t35 = t1164 * t1109 + 0.2e1 * t1206 * t1208 + t1186;
t62 = -t1164 * t1165 + t1207 * t1208;
t867 = t35 * qJD(3) + t34 * qJD(5) + t62 * qJD(6);
t85 = -t1109 * t1207 + t1202;
t86 = t1202 + t1209;
t87 = -t1155 * t1208 + t1209;
t866 = t86 * qJD(3) + t85 * qJD(5) + t87 * qJD(6);
t862 = t1031 / 0.2e1;
t861 = pkin(1) * t871;
t860 = pkin(1) * t869;
t859 = t1029 / 0.2e1;
t858 = t1028 / 0.2e1;
t857 = t640 * t951;
t836 = t656 * t890;
t835 = t659 * t870;
t834 = t656 * t885;
t833 = t659 * t885;
t832 = t656 * t886;
t831 = t657 * t868;
t830 = t657 * t869;
t823 = t654 * t1034;
t822 = -t949 / 0.2e1;
t819 = -t296 / 0.2e1 - t312 / 0.2e1;
t818 = t629 / 0.2e1 + t647 / 0.2e1;
t817 = t1031 * qJD(5);
t816 = t1031 * qJD(6);
t811 = -qJD(3) + t869;
t810 = -qJD(5) + t869;
t809 = -qJD(6) + t869;
t808 = pkin(5) * t862;
t807 = t656 * t835;
t804 = t852 / 0.2e1;
t803 = t850 / 0.2e1;
t802 = -t849 / 0.2e1;
t797 = t838 / 0.2e1;
t796 = t657 * t862;
t795 = t869 - qJD(3) / 0.2e1;
t792 = t289 / 0.2e1 + t576 * t1032;
t791 = t297 / 0.2e1 - t964 / 0.2e1;
t108 = -t1207 * t400 + t1190;
t664 = -t1053 * t1208 + t1054 * t1165 - t1058 * t1207 + t1065 * t1164 + t1228;
t2 = t664 - t1122;
t784 = qJD(1) * t2 + qJD(2) * t108;
t109 = t1164 * t400 + t1204;
t663 = t1053 * t1165 + t1058 * t1164 + t1206 * t353 - t1224;
t3 = t663 - t1121;
t783 = qJD(1) * t3 + qJD(2) * t109;
t115 = t1028 * t1207 - t1190;
t666 = t1032 * t110 + t1158;
t8 = (-t1046 * t1208 - t1049 * t1207 + t796) * pkin(5) + t666 + t934;
t782 = -t8 * qJD(1) - t115 * qJD(2);
t116 = -t1028 * t1164 - t1204;
t665 = t1033 * t1220 + t1055 * t1208 + t1062 * t353;
t7 = (t1046 * t1165 + t1049 * t1164 + t823) * pkin(5) + t665 + t935;
t781 = -t7 * qJD(1) - t116 * qJD(2);
t780 = qJD(2) * t34 + t1169;
t779 = qJD(1) * t34 + t1166;
t778 = qJD(2) * t35 + t1169;
t777 = qJD(1) * t35 + t1166;
t776 = qJD(2) * t62 + t1169;
t773 = qJD(1) * t62 + t1166;
t772 = qJD(2) * t92 + t1168;
t694 = (t1035 * t571 - t1036 * t568) * pkin(3);
t43 = (t374 / 0.2e1 + t391 / 0.2e1) * t588 + t1184 * t587 + (t1042 + t1043) * t567 + t694;
t771 = t43 * qJD(1);
t770 = qJD(1) * t92 + t1167;
t263 = t640 * t645;
t669 = t1102 * t1042 + t1184 * t527;
t733 = t387 * t1036 + t386 * t653 / 0.2e1;
t45 = (-t857 / 0.2e1 - t992 / 0.2e1 + t733) * pkin(3) + t669;
t769 = -t45 * qJD(1) + t263 * qJD(2);
t266 = t1096 * t559 - t1097 * t561;
t662 = t1041 * t1098 + t1044 * t1096 + t1050 * t561 + t1156 * t815 + t1211;
t692 = t1034 * t576 + t791;
t39 = t662 + t692;
t768 = -t39 * qJD(1) + t266 * qJD(2);
t267 = t1096 * t561 + t1097 * t559;
t661 = t1033 * t775 + t1046 * t815 + t1049 * t561 + t1114;
t729 = t1034 * t577 + t819;
t40 = t661 + t729;
t767 = -t40 * qJD(1) + t267 * qJD(2);
t334 = -t1095 * t588 + t527 * t587;
t668 = t1038 * t374 + t1040 * t527 + t1043 * t569 + t1057 * t588;
t98 = t668 + t818;
t766 = -qJD(1) * t98 + qJD(2) * t334;
t765 = t811 * t657;
t764 = qJD(2) * t124 + t1168;
t763 = qJD(1) * t124 + t1167;
t361 = t484 + t798;
t754 = qJD(2) * t361 + t1201;
t381 = 0.2e1 * t821 + t957;
t403 = 0.2e1 * t820 + t954;
t750 = qJD(1) * t381 + qJD(2) * t403;
t390 = t567 * t587 + t569 * t588;
t473 = t567 ^ 2 + t569 ^ 2;
t749 = qJD(1) * t473 + qJD(2) * t390;
t520 = t587 ^ 2 + t588 ^ 2;
t748 = qJD(1) * t390 + qJD(2) * t520;
t695 = (t1035 * t569 + t1036 * t567) * pkin(3);
t399 = -t632 / 0.2e1 + t695;
t693 = (t1035 * t588 + t1036 * t587) * pkin(3);
t466 = -t645 / 0.2e1 + t693;
t747 = qJD(1) * t399 + qJD(2) * t466;
t450 = t821 - t556 / 0.2e1;
t746 = qJD(1) * t450 + qJD(2) * t500;
t743 = qJD(3) * t1096 + qJD(5) * t403;
t742 = -t1079 - t1085;
t741 = t1125 * t1093;
t740 = t1020 / 0.2e1 - t1022 / 0.2e1;
t739 = t654 * t1021 / 0.2e1 + t937;
t736 = -qJD(5) / 0.2e1 + t795;
t705 = t740 * t656;
t518 = t599 / 0.2e1 - t705;
t735 = pkin(2) * t890 - qJD(1) * t518;
t704 = t740 * t659;
t519 = -t600 / 0.2e1 + t704;
t734 = pkin(2) * t891 - qJD(1) * t519;
t732 = t577 * t1033 + t950 / 0.2e1;
t675 = t1158 - t1228;
t11 = t675 + t934;
t728 = qJD(1) * t11 - t1164 * t895;
t676 = -t1065 * t1207 + t1224;
t12 = t676 + t935;
t727 = qJD(1) * t12 - t1207 * t895;
t726 = -qJD(2) * t87 - t1151;
t725 = qJD(2) * t85 + t1151;
t724 = qJD(2) * t86 + t1151;
t723 = -qJD(1) * t87 - t1148;
t722 = qJD(1) * t85 + t1148;
t721 = qJD(1) * t86 + t1148;
t674 = -t1032 * t775 + t1114;
t71 = t674 + t819;
t720 = qJD(1) * t71 - t1097 * t892;
t673 = -t1211 + t508 * t1045 + t559 * t1098 / 0.2e1;
t70 = -t673 + t791;
t719 = qJD(1) * t70 - t1096 * t892;
t718 = t659 * t765;
t582 = (t648 / 0.2e1 - t650 / 0.2e1) * t657;
t713 = -qJD(1) * t582 + t836;
t712 = qJD(2) * t323 - qJD(5) * t450 - t422;
t706 = t660 * t808 + t936;
t702 = -t985 / 0.2e1 + t802;
t701 = -t984 / 0.2e1 + t803;
t698 = qJD(1) * t656 * t944 + qJD(2) * t582;
t596 = t623 * t649;
t697 = qJD(1) * t596 + 0.2e1 * t807;
t15 = t803 - t999 / 0.2e1 + t804 + (-t145 / 0.2e1 + t131 / 0.2e1) * t654;
t52 = t1222 + t1216 / 0.2e1 + t1227;
t691 = qJD(1) * t15 + qJD(2) * t52 + qJD(3) * t464;
t672 = (-t144 / 0.2e1 - t137 / 0.2e1) * t654 + t802;
t16 = t1001 / 0.2e1 + t854 / 0.2e1 + t672;
t690 = qJD(1) * t16 - qJD(3) * t463 - t1226;
t667 = t703 / 0.2e1 + t804;
t19 = -t998 / 0.2e1 + t667 + t701;
t49 = t254 + t1222;
t689 = qJD(1) * t19 - qJD(2) * t49 + qJD(3) * t467;
t671 = t680 / 0.2e1;
t20 = -t997 / 0.2e1 + t671 + t672;
t57 = t800 + t1218 / 0.2e1 + t1174;
t688 = qJD(1) * t20 - qJD(2) * t57 + qJD(3) * t468;
t23 = t667 + t739;
t303 = (t576 / 0.2e1 + pkin(5) / 0.2e1 + t572 / 0.2e1) * t654;
t687 = t23 * qJD(1) - t303 * qJD(3);
t25 = t671 - t987 / 0.2e1 + t706;
t681 = t808 + t839 / 0.2e1;
t305 = t797 + t681;
t686 = -t25 * qJD(1) + t305 * qJD(3) - t1226;
t159 = t1052 - t1175 / 0.2e1;
t74 = t1066 + (-t321 / 0.2e1 + t302 / 0.2e1) * t655 + t732;
t685 = qJD(1) * t74 + qJD(2) * t159 + qJD(3) * t577;
t160 = t1051 + t1171 / 0.2e1;
t75 = t822 + (-t320 / 0.2e1 - t317 / 0.2e1) * t655 + t792;
t684 = qJD(1) * t75 - qJD(2) * t160 - qJD(3) * t576;
t683 = qJD(3) * t1164 + t1094 * t1125;
t682 = -t1141 - t1146 - t1215;
t678 = qJD(2) * t322 + qJD(5) * t381 - t422 + t888;
t677 = qJD(2) * t168 - t1125 * t1191 - t269;
t670 = qJD(2) * t166 + t1092 * t1125 - t269 + t889;
t638 = -t871 / 0.2e1;
t637 = t871 / 0.2e1;
t636 = t870 / 0.2e1;
t586 = t795 * t657;
t581 = t582 * qJD(3);
t566 = t736 * t657;
t563 = t577 * qJD(5);
t562 = t576 * qJD(5);
t532 = (-qJD(6) / 0.2e1 + t736) * t657;
t498 = t631 + t600 / 0.2e1 + t704;
t497 = t864 - t599 / 0.2e1 - t705;
t465 = t645 / 0.2e1 + t693;
t462 = t468 * qJD(5);
t461 = t467 * qJD(5);
t454 = t464 * qJD(6);
t453 = t463 * qJD(6);
t398 = t632 / 0.2e1 + t695;
t379 = t390 * qJD(4);
t329 = t993 / 0.2e1 + t787;
t326 = -t994 / 0.2e1 + t922;
t306 = -t681 + t797 + t967;
t304 = -t1023 / 0.2e1 - t560 - t969 / 0.2e1 + t968 / 0.2e1;
t265 = -t1139 + 0.2e1 * t484;
t237 = -t1105 + 0.2e1 * t418;
t163 = t327 * qJD(2) + t1104;
t162 = 0.2e1 * t1052 - t1172;
t161 = -t1176 + 0.2e1 * t1051;
t114 = -t328 * qJD(2) - t774 * t811 + t1079;
t99 = -t668 + t818;
t77 = -t966 / 0.2e1 - t962 / 0.2e1 + t1066 - t732;
t76 = t965 / 0.2e1 + t822 - t963 / 0.2e1 - t792;
t73 = t673 + t791;
t72 = -t674 + t819;
t46 = t733 * pkin(3) - t669 + (t857 + t992) * pkin(3) / 0.2e1;
t44 = t567 * t1043 + t392 * t587 / 0.2e1 + t1095 * t1040 + t373 * t1038 + t694 - t1102 * t588 / 0.2e1;
t42 = -t661 + t729;
t41 = -t662 + t692;
t36 = t175 * qJD(2) + t1205;
t31 = -t176 * qJD(2) + (t1125 - t811) * t1208;
t26 = t706 + t932;
t24 = t739 + t933;
t22 = t997 / 0.2e1 + t702 + t932;
t21 = t998 / 0.2e1 + t701 + t933;
t18 = t999 / 0.2e1 + t701 + t937;
t17 = -t1001 / 0.2e1 + t702 + t936;
t14 = -t675 + t934;
t13 = -t676 + t935;
t10 = pkin(5) * t823 + t1164 * t859 + t1165 * t858 - t665 + t935;
t9 = pkin(5) * t796 - t1207 * t859 - t1208 * t858 - t666 + t934;
t4 = t663 + t1121;
t1 = t664 + t1122;
t32 = [0, 0, 0, t831, t624 * qJD(2), 0, 0, 0, -pkin(1) * t870, -pkin(1) * t868, -t649 * t832 + t650 * t831, -t596 * qJD(3) - 0.2e1 * t660 * t807, -t598 * qJD(2) + t657 * t834, t597 * qJD(2) + t657 * t833, -t831, -qJD(2) * t395 - qJD(3) * t511, qJD(2) * t396 + qJD(3) * t510, qJD(2) * t84 + qJD(3) * t88 + qJD(4) * t473, qJD(2) * t95 + qJD(3) * t97 + qJD(4) * t180 (qJD(2) * t460 - t742) * t1098, qJD(2) * t165 + t1120 * t1185, -t288 * qJD(2) + t660 * t742, -t287 * qJD(2) + (qJD(5) * t1098 + t888) * t660, -t831, -t47 * qJD(2) - t89 * qJD(3) - t101 * qJD(5) + t1098 * t884, t48 * qJD(2) + t90 * qJD(3) + t100 * qJD(5) + t774 * t884 (qJD(2) * t286 - t682) * t1165, qJD(2) * t80 + t1196 * t1213, -t147 * qJD(2) + t660 * t682, -t146 * qJD(2) + (t1125 * t1165 + t889) * t660, -t831, -t5 * qJD(2) - t27 * qJD(3) - t29 * qJD(5) - t38 * qJD(6) + t1165 * t884, t6 * qJD(2) + t28 * qJD(3) + t30 * qJD(5) + t37 * qJD(6) + t1208 * t884; 0, 0, 0, t830, t872, t868, -t870, 0, -pkin(7) * t868 - t861, pkin(7) * t870 - t860, -t581 + (t650 * t871 + t836) * t660, t1071 * t660 - 0.2e1 * t657 * t832, t656 * t870 - t873, t835 + t874, -t586, -t876 + (t656 * t794 - t863) * qJD(2) + t498 * qJD(3), t875 + (t659 * t794 + t865) * qJD(2) + t497 * qJD(3), t941 + (-t1095 * t571 - t386 * t588 + t387 * t587 - t527 * t568) * qJD(2) + t44 * qJD(3) + t379, t939 + (t1095 * t386 + t387 * t527 + t602 * t640) * qJD(2) + t46 * qJD(3) + t99 * qJD(4), t460 * t745 + t931, t877 + (-t1096 * t457 + t1097 * t460) * qJD(2) + t1015, -qJD(3) * t328 + qJD(5) * t326 + t1096 * t870 - t906, -qJD(3) * t322 + qJD(5) * t329 + t1097 * t870 - t907, -t566, -t996 + (-t1097 * t509 + t457 * t559 + t657 * t775) * qJD(2) + t41 * qJD(3) - t323 * qJD(4) + t73 * qJD(5), t995 + (t1096 * t509 + t460 * t559 + t657 * t812) * qJD(2) + t42 * qJD(3) + t327 * qJD(4) + t72 * qJD(5), t286 * t753 + t866, t942 + (-t1164 * t282 + t1207 * t286) * qJD(2) + t867, -qJD(3) * t176 + t1125 * t1160 + t1164 * t870 - t918, -qJD(3) * t166 + t1125 * t1162 + t1207 * t870 - t919, -t532, -t1017 + (-t1207 * t354 + t1220 * t657 + t282 * t397) * qJD(2) + t1 * qJD(3) - t168 * qJD(4) + t9 * qJD(5) + t14 * qJD(6), t1016 + (t110 * t657 + t1164 * t354 + t286 * t397) * qJD(2) + t4 * qJD(3) + t175 * qJD(4) + t10 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t698, -t697, t656 * t765, t718, t636, qJD(2) * t498 - qJD(3) * t558 - t897, qJD(2) * t497 + qJD(3) * t557 + t898, t940 + t44 * qJD(2) + (-t567 * t653 - t569 * t652) * t1018, t938 + t46 * qJD(2) + t398 * qJD(4) + (t391 * t653 + t392 * t652) * t1018, t1181, t772, t114, -t678, t636, qJD(2) * t41 + qJD(3) * t178 + qJD(5) * t77 - t1008, qJD(2) * t42 - qJD(3) * t179 + qJD(5) * t76 + t1007, t724, t778, t31, -t670, t636, qJD(2) * t1 + qJD(3) * t68 + qJD(5) * t21 + qJD(6) * t18 - t1014, qJD(2) * t4 - qJD(3) * t69 + qJD(5) * t22 + qJD(6) * t17 + t1013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t749, qJD(2) * t99 + qJD(3) * t398 + t909, 0, 0, 0, 0, 0, -t712, t163, 0, 0, 0, 0, 0, -t677, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1181, t764, t326 * qJD(2) - t774 * t810 + t1085, t329 * qJD(2) - t381 * qJD(3) + t1098 * t810, t636, qJD(2) * t73 + qJD(3) * t77 + qJD(4) * t450 - qJD(5) * t158 - t920, qJD(2) * t72 + qJD(3) * t76 + qJD(5) * t157 + t921, t725, t780, -t1208 * t810 + t1141 + t1182, t237 * qJD(6) + t1165 * t810 + t1178, t636, qJD(2) * t9 + qJD(3) * t21 + qJD(5) * t66 + qJD(6) * t24 - t1012 + t1134, qJD(2) * t10 + qJD(3) * t22 - qJD(5) * t67 + qJD(6) * t26 + t1011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t726, t776, -t1208 * t809 + t1146 + t1182, t237 * qJD(5) + t1165 * t809 + t1178, t636, qJD(2) * t14 + qJD(3) * t18 + qJD(5) * t24 - qJD(6) * t65 - t1009 + t1134, qJD(2) * t13 + qJD(3) * t17 + qJD(5) * t26 + qJD(6) * t64 + t1010; 0, 0, 0, -t830, -t872, 0, 0, 0, t861, t860, -t650 * t830 - t581, 0.2e1 * t656 * t718, -t833 + t873, t834 - t874, t586, qJD(3) * t519 + t876, qJD(3) * t518 - t875, -qJD(3) * t43 + t379 - t941, -qJD(3) * t45 - qJD(4) * t98 - t939, -t460 * t899 + t931, -t877 + t1015, -qJD(3) * t327 - qJD(5) * t325 + t906, -qJD(3) * t323 - qJD(5) * t324 + t907, t566, -qJD(3) * t39 - qJD(4) * t322 - qJD(5) * t70 + t996, -qJD(3) * t40 + qJD(4) * t328 - qJD(5) * t71 - t995, -t286 * t908 + t866, t867 - t942, -qJD(3) * t175 - t1125 * t1161 + t918, -qJD(3) * t168 - t1125 * t1163 + t919, t532, qJD(3) * t2 - qJD(4) * t166 - qJD(5) * t8 - qJD(6) * t11 + t1017, qJD(3) * t3 + qJD(4) * t176 - qJD(5) * t7 - qJD(6) * t12 - t1016; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t832, t623 * qJD(3), 0, 0, 0, -pkin(2) * t887, -pkin(2) * t886, qJD(4) * t520, qJD(3) * t263 + qJD(4) * t334, t924 * t1096, t1185 * t1117, 0, 0, 0, qJD(3) * t266 + t1096 * t880, qJD(3) * t267 + t1097 * t880, t856 * t1164, t1213 * t1195, 0, 0, 0, qJD(3) * t108 - qJD(5) * t115 + t1164 * t878, qJD(3) * t109 - qJD(5) * t116 + t1207 * t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t713, t1071, -t811 * t659, t811 * t656, t638, -pkin(8) * t886 - t734, pkin(8) * t887 - t735 (-t587 * t653 - t588 * t652) * t1018 - t771, t465 * qJD(4) + (t1095 * t652 - t527 * t653) * t1018 + t769, t1183, t770, -t901 + t924, -t743 - t904, t638, qJD(3) * t812 + t162 * qJD(5) + t768, -qJD(3) * t775 + t161 * qJD(5) + t767, t721, t777, t856 - t911, -t683 - t915, t638, qJD(3) * t110 + t1125 * t1229 + t784, -qJD(3) * t1220 + t1125 * t1223 + t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t748, qJD(3) * t465 + t766, 0, 0, 0, 0, 0, t882 - t905, t900, 0, 0, 0, 0, 0, t741 - t917, t910; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t763, -t902 + t924, -qJD(3) * t403 - qJD(5) * t1096 - t903, t638, qJD(3) * t162 + qJD(4) * t500 + qJD(5) * t812 - t719, qJD(3) * t161 - qJD(5) * t775 - t720, t722, t779, t1198, -qJD(5) * t1164 + qJD(6) * t265 + t1200, t638, qJD(5) * t110 + qJD(6) * t1229 + t1177 + t782, -qJD(5) * t1220 + qJD(6) * t1223 + t1194 + t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t723, t773, t1198, qJD(5) * t265 - qJD(6) * t1164 + t1200, t638, qJD(5) * t1229 + qJD(6) * t110 + t1177 - t728, qJD(5) * t1223 - qJD(6) * t1220 + t1194 - t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t698, t697 (-t656 * t871 + t890) * t660 (-t837 - t891) * t660, t636, -qJD(2) * t519 + t897, -qJD(2) * t518 - t898, qJD(2) * t43 - t940, qJD(2) * t45 + qJD(4) * t399 - t938, -t1181, -t772, t163, t712, t636, qJD(2) * t39 - qJD(4) * t1098 - qJD(5) * t74 + t1008, qJD(2) * t40 - qJD(5) * t75 - t1007 - t1080, -t724, -t778, t36, t677, t636, -qJD(2) * t2 - qJD(4) * t1165 - qJD(5) * t19 - qJD(6) * t15 + t1014, -qJD(2) * t3 - qJD(5) * t20 - qJD(6) * t16 - t1013 - t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t713, -t1071, t659 * t869, -t656 * t869, t637, t734, t735, t771, qJD(4) * t466 - t769, -t1183, -t770, t901, -t882 + t904, t637, -qJD(4) * t1096 - qJD(5) * t159 - t768, qJD(5) * t160 - t1130 - t767, -t721, -t777, t911, -t741 + t915, t637, -qJD(4) * t1164 + qJD(5) * t49 - qJD(6) * t52 - t784, qJD(5) * t57 + t1225 - t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t563, t562, 0, 0, 0, 0, 0, -t461 - t454, -t462 + t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t747, 0, 0, 0, 0, 0, -t745, -t1115, 0, 0, 0, 0, 0, -t753, -t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t746, 0, -t563 - t685, t562 - t684, 0, 0, 0, -t1112, 0, qJD(6) * t304 - t461 - t689, qJD(6) * t306 - t462 - t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1112, 0, qJD(5) * t304 - t454 - t691, qJD(5) * t306 + t453 - t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t749, qJD(2) * t98 - qJD(3) * t399 - t909, 0, 0, 0, 0, 0, t678, t114, 0, 0, 0, 0, 0, t670, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t748, -qJD(3) * t466 - t766, 0, 0, 0, 0, 0, t743 + t905, -t900 + t924, 0, 0, 0, 0, 0, t683 + t917, t856 - t910; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t747, 0, 0, 0, 0, 0, t745, t1115, 0, 0, 0, 0, 0, t753, t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t750, t1115, 0, 0, 0, 0, 0, t1111, t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1111, t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1181, -t764, t325 * qJD(2) + t1104, t324 * qJD(2) + t450 * qJD(3) - t422, t636, qJD(2) * t70 + qJD(3) * t74 - qJD(4) * t381 + t920, qJD(2) * t71 + qJD(3) * t75 - t1080 - t921, -t725, -t780, t1179, qJD(6) * t1191 + t1180, t636, qJD(2) * t8 + qJD(3) * t19 + qJD(6) * t23 + t1012 - t1133, qJD(2) * t7 + qJD(3) * t20 + qJD(6) * t25 - t1011 - t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1183, -t763, t902, qJD(3) * t500 + t903, t637, qJD(3) * t159 - qJD(4) * t403 + t719, -qJD(3) * t160 - t1130 + t720, -t722, -t779, t1188, qJD(6) * t361 + t1199, t637, -qJD(3) * t49 - t1131 - t782, -qJD(3) * t57 + t1225 - t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t746, 0, t685, t684, 0, 0, 0, t1112, 0, -qJD(6) * t303 + t689, -qJD(6) * t305 + t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t750, -t1115, 0, 0, 0, 0, 0, -t1111, -t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t1023, -pkin(5) * t816; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t754, 0, -t1023 * t1125 + t687 (-t817 - t816) * pkin(5) - t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t726, -t776, t1179, -qJD(5) * t1191 + t1180, t636, qJD(2) * t11 + qJD(3) * t15 - qJD(5) * t23 + t1009 - t1133, qJD(2) * t12 + qJD(3) * t16 - qJD(5) * t25 - t1010 - t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t723, -t773, t1188, -qJD(5) * t361 + t1199, t637, qJD(3) * t52 - t1131 + t728, -t1185 * t1221 - t1083 + t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1112, 0, qJD(5) * t303 + t691, qJD(5) * t305 + t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1111, -t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t754, 0, qJD(5) * t1023 - t687, pkin(5) * t817 + t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t32;
