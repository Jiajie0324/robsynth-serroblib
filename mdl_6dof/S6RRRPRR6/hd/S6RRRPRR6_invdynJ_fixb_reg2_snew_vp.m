% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 11:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR6_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR6_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR6_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR6_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR6_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR6_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 11:05:45
% EndTime: 2019-05-07 11:06:35
% DurationCPUTime: 19.70s
% Computational Cost: add. (201259->677), mult. (428498->970), div. (0->0), fcn. (321522->12), ass. (0->424)
t390 = cos(qJ(2));
t368 = qJD(1) * t390 - qJD(3);
t481 = t368 ^ 2;
t384 = sin(qJ(3));
t389 = cos(qJ(3));
t385 = sin(qJ(2));
t437 = qJD(1) * t385;
t351 = -t389 * qJD(2) + t384 * t437;
t352 = qJD(2) * t384 + t389 * t437;
t379 = sin(pkin(11));
t380 = cos(pkin(11));
t330 = t380 * t351 + t352 * t379;
t483 = t330 ^ 2;
t289 = -t481 - t483;
t430 = qJD(1) * qJD(2);
t370 = t385 * t430;
t429 = t390 * qJDD(1);
t356 = -t370 + t429;
t350 = -qJDD(3) + t356;
t331 = -t351 * t379 + t352 * t380;
t451 = t331 * t330;
t398 = -t350 - t451;
t491 = t380 * t398;
t236 = t289 * t379 + t491;
t392 = qJD(1) ^ 2;
t386 = sin(qJ(1));
t391 = cos(qJ(1));
t423 = g(1) * t386 - t391 * g(2);
t344 = qJDD(1) * pkin(1) + pkin(7) * t392 + t423;
t408 = -t356 + t370;
t371 = t385 * qJDD(1);
t424 = t390 * t430;
t355 = t371 + t424;
t409 = t355 + t424;
t301 = pkin(2) * t408 - pkin(8) * t409 - t344;
t411 = g(1) * t391 + g(2) * t386;
t470 = qJDD(1) * pkin(7);
t345 = -pkin(1) * t392 - t411 + t470;
t413 = -pkin(2) * t390 - pkin(8) * t385;
t417 = t392 * t413 + t345;
t476 = g(3) * t385;
t480 = qJD(2) ^ 2;
t311 = -pkin(2) * t480 + qJDD(2) * pkin(8) + t390 * t417 - t476;
t269 = -t389 * t301 + t311 * t384;
t402 = -qJDD(2) * t384 - t355 * t389;
t326 = -qJD(3) * t351 - t402;
t340 = t351 * t368;
t306 = t326 - t340;
t449 = t352 * t351;
t397 = -t350 - t449;
t226 = t397 * pkin(3) - qJ(4) * t306 - t269;
t270 = t384 * t301 + t389 * t311;
t335 = -pkin(3) * t368 - qJ(4) * t352;
t403 = qJDD(2) * t389 - t355 * t384;
t396 = -qJD(3) * t352 + t403;
t482 = t351 ^ 2;
t228 = -pkin(3) * t482 + qJ(4) * t396 + t368 * t335 + t270;
t410 = -0.2e1 * qJD(4) * t331 + t380 * t226 - t228 * t379;
t497 = pkin(3) * t236 + t410;
t382 = sin(qJ(6));
t383 = sin(qJ(5));
t388 = cos(qJ(5));
t295 = t388 * t330 + t331 * t383;
t297 = -t330 * t383 + t331 * t388;
t387 = cos(qJ(6));
t244 = t387 * t295 + t297 * t382;
t246 = -t295 * t382 + t297 * t387;
t203 = t246 * t244;
t346 = -qJDD(5) + t350;
t342 = -qJDD(6) + t346;
t488 = -t203 - t342;
t496 = t382 * t488;
t248 = t297 * t295;
t486 = -t248 - t346;
t495 = t383 * t486;
t494 = t387 * t488;
t493 = t388 * t486;
t492 = t379 * t398;
t490 = t384 * t397;
t489 = t389 * t397;
t287 = t380 * t326 + t379 * t396;
t419 = t326 * t379 - t380 * t396;
t220 = -t295 * qJD(5) + t388 * t287 - t383 * t419;
t420 = t287 * t383 + t388 * t419;
t400 = qJD(5) * t297 + t420;
t154 = -t244 * qJD(6) + t387 * t220 - t382 * t400;
t364 = -qJD(5) + t368;
t359 = -qJD(6) + t364;
t234 = t244 * t359;
t487 = t234 + t154;
t278 = t295 * t364;
t199 = -t278 + t220;
t485 = t278 + t220;
t316 = t330 * t368;
t265 = -t316 + t287;
t484 = t316 + t287;
t422 = t220 * t382 + t387 * t400;
t128 = (qJD(6) + t359) * t246 + t422;
t196 = (qJD(5) + t364) * t297 + t420;
t302 = (qJD(3) + t368) * t352 - t403;
t242 = t244 ^ 2;
t243 = t246 ^ 2;
t293 = t295 ^ 2;
t294 = t297 ^ 2;
t329 = t331 ^ 2;
t349 = t352 ^ 2;
t358 = t359 ^ 2;
t363 = t364 ^ 2;
t436 = qJD(4) * t330;
t324 = -0.2e1 * t436;
t438 = t379 * t226 + t380 * t228;
t176 = t324 + t438;
t121 = t176 * t379 + t380 * t410;
t479 = pkin(3) * t121;
t450 = t331 * t368;
t261 = t419 + t450;
t215 = -t261 * t379 - t265 * t380;
t478 = pkin(3) * t215;
t475 = g(3) * t390;
t152 = t398 * pkin(4) - pkin(9) * t265 + t410;
t312 = -pkin(4) * t368 - pkin(9) * t331;
t156 = -pkin(4) * t483 - pkin(9) * t419 + t368 * t312 + t176;
t106 = -t388 * t152 + t156 * t383;
t82 = pkin(5) * t486 - pkin(10) * t199 - t106;
t107 = t383 * t152 + t388 * t156;
t275 = -pkin(5) * t364 - pkin(10) * t297;
t83 = -t293 * pkin(5) - pkin(10) * t400 + t364 * t275 + t107;
t48 = t382 * t83 - t387 * t82;
t49 = t382 * t82 + t387 * t83;
t31 = t382 * t49 - t387 * t48;
t474 = t31 * t383;
t473 = t31 * t388;
t66 = -t106 * t388 + t107 * t383;
t472 = t379 * t66;
t471 = t380 * t66;
t469 = t121 * t384;
t468 = t121 * t389;
t310 = -qJDD(2) * pkin(2) - t480 * pkin(8) + t385 * t417 + t475;
t251 = -t396 * pkin(3) - t482 * qJ(4) + t335 * t352 + qJDD(4) + t310;
t191 = t419 * pkin(4) - t483 * pkin(9) + t312 * t331 + t251;
t133 = pkin(5) * t400 - t293 * pkin(10) + t275 * t297 + t191;
t467 = t133 * t382;
t466 = t133 * t387;
t465 = t191 * t383;
t464 = t191 * t388;
t192 = -t203 + t342;
t463 = t192 * t382;
t462 = t192 * t387;
t238 = -t248 + t346;
t461 = t238 * t383;
t460 = t238 * t388;
t459 = t251 * t379;
t458 = t251 * t380;
t283 = t350 - t451;
t457 = t283 * t379;
t456 = t283 * t380;
t455 = t310 * t384;
t454 = t310 * t389;
t318 = t350 - t449;
t453 = t318 * t384;
t452 = t318 * t389;
t448 = t359 * t382;
t447 = t359 * t387;
t446 = t364 * t383;
t445 = t364 * t388;
t444 = t368 * t379;
t443 = t368 * t380;
t442 = t368 * t384;
t441 = t368 * t389;
t367 = t390 * t392 * t385;
t440 = t385 * (qJDD(2) + t367);
t439 = t390 * (-t367 + qJDD(2));
t434 = qJD(3) - t368;
t428 = t390 * t203;
t427 = t390 * t248;
t426 = t390 * t451;
t425 = t390 * t449;
t32 = t382 * t48 + t387 * t49;
t67 = t106 * t383 + t388 * t107;
t122 = t380 * t176 - t379 * t410;
t222 = t269 * t384 + t389 * t270;
t336 = t345 * t385 + t475;
t337 = t345 * t390 - t476;
t418 = t385 * t336 + t390 * t337;
t41 = t379 * t67 + t471;
t416 = pkin(3) * t41 + pkin(4) * t66;
t309 = -t329 - t481;
t249 = t309 * t380 + t457;
t415 = pkin(3) * t249 - t438;
t201 = -t358 - t242;
t144 = t201 * t382 + t494;
t414 = pkin(5) * t144 - t48;
t147 = -t196 * t383 - t199 * t388;
t149 = -t196 * t388 + t199 * t383;
t102 = t147 * t380 + t149 * t379;
t412 = pkin(3) * t102 + pkin(4) * t147;
t14 = t32 * t383 + t473;
t30 = pkin(5) * t31;
t15 = t32 * t388 - t474;
t9 = t14 * t380 + t15 * t379;
t407 = pkin(3) * t9 + pkin(4) * t14 + t30;
t406 = t269 * t389 - t270 * t384;
t131 = -t234 + t154;
t90 = -t128 * t382 - t131 * t387;
t92 = -t128 * t387 + t131 * t382;
t56 = t383 * t92 + t388 * t90;
t58 = -t383 * t90 + t388 * t92;
t34 = t379 * t58 + t380 * t56;
t88 = pkin(5) * t90;
t405 = pkin(3) * t34 + pkin(4) * t56 + t88;
t404 = -pkin(1) + t413;
t229 = -t243 - t358;
t165 = t229 * t387 + t463;
t401 = pkin(5) * t165 - t49;
t272 = -t294 - t363;
t208 = t272 * t388 + t461;
t209 = -t272 * t383 + t460;
t158 = t208 * t380 + t209 * t379;
t399 = pkin(3) * t158 + pkin(4) * t208 - t107;
t241 = -t363 - t293;
t189 = t241 * t383 + t493;
t190 = t241 * t388 - t495;
t140 = t189 * t380 + t190 * t379;
t395 = pkin(3) * t140 + pkin(4) * t189 - t106;
t145 = t201 * t387 - t496;
t100 = -t144 * t383 + t145 * t388;
t99 = t144 * t388 + t145 * t383;
t62 = t100 * t379 + t380 * t99;
t394 = pkin(3) * t62 + pkin(4) * t99 + t414;
t166 = -t229 * t382 + t462;
t113 = t165 * t388 + t166 * t383;
t114 = -t165 * t383 + t166 * t388;
t72 = t113 * t380 + t114 * t379;
t393 = pkin(3) * t72 + pkin(4) * t113 + t401;
t377 = t390 ^ 2;
t376 = t385 ^ 2;
t374 = t377 * t392;
t372 = t376 * t392;
t357 = -0.2e1 * t370 + t429;
t354 = t371 + 0.2e1 * t424;
t341 = t390 * t350;
t339 = -t349 + t481;
t338 = -t481 + t482;
t333 = t349 - t482;
t332 = -t349 - t481;
t328 = -t481 - t482;
t317 = t349 + t482;
t314 = -t329 + t481;
t313 = -t481 + t483;
t307 = t351 * t434 + t402;
t305 = t326 + t340;
t303 = -t352 * t434 + t403;
t298 = t329 - t483;
t292 = -t332 * t384 + t452;
t291 = t332 * t389 + t453;
t282 = t328 * t389 - t490;
t281 = t328 * t384 + t489;
t277 = -t294 + t363;
t276 = t293 - t363;
t274 = (t330 * t380 - t331 * t379) * t368;
t273 = (t330 * t379 + t331 * t380) * t368;
t271 = -t329 - t483;
t267 = -t302 * t389 + t306 * t384;
t260 = t419 - t450;
t259 = t287 * t380 + t331 * t444;
t258 = t287 * t379 - t331 * t443;
t257 = -t330 * t443 + t379 * t419;
t256 = -t330 * t444 - t380 * t419;
t255 = t313 * t380 + t457;
t254 = -t314 * t379 + t491;
t253 = t313 * t379 - t456;
t252 = t314 * t380 + t492;
t250 = -t309 * t379 + t456;
t247 = t294 - t293;
t237 = t289 * t380 - t492;
t233 = -t243 + t358;
t232 = t242 - t358;
t231 = (t295 * t388 - t297 * t383) * t364;
t230 = (t295 * t383 + t297 * t388) * t364;
t223 = -t293 - t294;
t217 = -t261 * t380 + t265 * t379;
t216 = -t260 * t380 - t379 * t484;
t214 = -t260 * t379 + t380 * t484;
t213 = t276 * t388 + t461;
t212 = -t277 * t383 + t493;
t211 = t276 * t383 - t460;
t210 = t277 * t388 + t495;
t207 = -qJ(4) * t249 + t458;
t206 = -t249 * t384 + t250 * t389;
t205 = t249 * t389 + t250 * t384;
t204 = -qJ(4) * t236 + t459;
t202 = t243 - t242;
t195 = (qJD(5) - t364) * t297 + t420;
t188 = t220 * t388 + t297 * t446;
t187 = t220 * t383 - t297 * t445;
t186 = -t295 * t445 + t383 * t400;
t185 = -t295 * t446 - t388 * t400;
t184 = -t236 * t384 + t237 * t389;
t183 = t236 * t389 + t237 * t384;
t182 = (t244 * t387 - t246 * t382) * t359;
t181 = (t244 * t382 + t246 * t387) * t359;
t180 = -t230 * t379 + t231 * t380;
t179 = t230 * t380 + t231 * t379;
t178 = -pkin(3) * t484 + qJ(4) * t250 + t459;
t177 = -pkin(3) * t260 + qJ(4) * t237 - t458;
t173 = -t242 - t243;
t172 = -t215 * t384 + t217 * t389;
t171 = t215 * t389 + t217 * t384;
t170 = t232 * t387 + t463;
t169 = -t233 * t382 + t494;
t168 = t232 * t382 - t462;
t167 = t233 * t387 + t496;
t163 = -t211 * t379 + t213 * t380;
t162 = -t210 * t379 + t212 * t380;
t161 = t211 * t380 + t213 * t379;
t160 = t210 * t380 + t212 * t379;
t159 = -t208 * t379 + t209 * t380;
t157 = -pkin(9) * t208 + t464;
t153 = -qJD(6) * t246 - t422;
t148 = -t195 * t388 - t383 * t485;
t146 = -t195 * t383 + t388 * t485;
t142 = -pkin(9) * t189 + t465;
t141 = -t189 * t379 + t190 * t380;
t139 = -t187 * t379 + t188 * t380;
t138 = -t185 * t379 + t186 * t380;
t137 = t187 * t380 + t188 * t379;
t136 = t185 * t380 + t186 * t379;
t135 = -t181 * t383 + t182 * t388;
t134 = t181 * t388 + t182 * t383;
t127 = (qJD(6) - t359) * t246 + t422;
t126 = t154 * t387 + t246 * t448;
t125 = t154 * t382 - t246 * t447;
t124 = -t153 * t382 - t244 * t447;
t123 = t153 * t387 - t244 * t448;
t120 = -pkin(4) * t485 + pkin(9) * t209 + t465;
t119 = -pkin(4) * t195 + pkin(9) * t190 - t464;
t118 = -t168 * t383 + t170 * t388;
t117 = -t167 * t383 + t169 * t388;
t116 = t168 * t388 + t170 * t383;
t115 = t167 * t388 + t169 * t383;
t112 = -pkin(3) * t251 + qJ(4) * t122;
t111 = -t158 * t384 + t159 * t389;
t110 = t158 * t389 + t159 * t384;
t109 = -qJ(4) * t215 - t121;
t108 = -pkin(3) * t271 + qJ(4) * t217 + t122;
t104 = -t147 * t379 + t149 * t380;
t103 = -t146 * t379 + t148 * t380;
t101 = t146 * t380 + t148 * t379;
t98 = -pkin(10) * t165 + t466;
t97 = -t140 * t384 + t141 * t389;
t96 = t140 * t389 + t141 * t384;
t95 = -t134 * t379 + t135 * t380;
t94 = t134 * t380 + t135 * t379;
t93 = -pkin(10) * t144 + t467;
t91 = -t127 * t387 - t382 * t487;
t89 = -t127 * t382 + t387 * t487;
t87 = -t125 * t383 + t126 * t388;
t86 = -t123 * t383 + t124 * t388;
t85 = t125 * t388 + t126 * t383;
t84 = t123 * t388 + t124 * t383;
t80 = t122 * t389 - t469;
t79 = t122 * t384 + t468;
t78 = -t116 * t379 + t118 * t380;
t77 = -t115 * t379 + t117 * t380;
t76 = t116 * t380 + t118 * t379;
t75 = t115 * t380 + t117 * t379;
t74 = -qJ(4) * t158 - t120 * t379 + t157 * t380;
t73 = -t113 * t379 + t114 * t380;
t71 = -pkin(5) * t487 + pkin(10) * t166 + t467;
t70 = -pkin(5) * t127 + pkin(10) * t145 - t466;
t69 = -qJ(4) * t140 - t119 * t379 + t142 * t380;
t68 = -pkin(3) * t485 + qJ(4) * t159 + t120 * t380 + t157 * t379;
t65 = -t102 * t384 + t104 * t389;
t64 = t102 * t389 + t104 * t384;
t63 = t100 * t380 - t379 * t99;
t61 = -pkin(3) * t195 + qJ(4) * t141 + t119 * t380 + t142 * t379;
t60 = -pkin(4) * t191 + pkin(9) * t67;
t59 = -pkin(9) * t147 - t66;
t57 = -t383 * t89 + t388 * t91;
t55 = t383 * t91 + t388 * t89;
t54 = -t379 * t85 + t380 * t87;
t53 = -t379 * t84 + t380 * t86;
t52 = t379 * t87 + t380 * t85;
t51 = t379 * t86 + t380 * t84;
t50 = -pkin(4) * t223 + pkin(9) * t149 + t67;
t46 = -t384 * t72 + t389 * t73;
t45 = t384 * t73 + t389 * t72;
t44 = -pkin(9) * t113 - t383 * t71 + t388 * t98;
t43 = -pkin(9) * t99 - t383 * t70 + t388 * t93;
t42 = t380 * t67 - t472;
t40 = -t384 * t62 + t389 * t63;
t39 = t384 * t63 + t389 * t62;
t38 = -pkin(4) * t487 + pkin(9) * t114 + t383 * t98 + t388 * t71;
t37 = -pkin(4) * t127 + pkin(9) * t100 + t383 * t93 + t388 * t70;
t36 = -t379 * t56 + t380 * t58;
t35 = -t379 * t55 + t380 * t57;
t33 = t379 * t57 + t380 * t55;
t29 = -pkin(5) * t133 + pkin(10) * t32;
t28 = -qJ(4) * t102 - t379 * t50 + t380 * t59;
t27 = -pkin(3) * t223 + qJ(4) * t104 + t379 * t59 + t380 * t50;
t26 = -pkin(10) * t90 - t31;
t25 = -pkin(5) * t173 + pkin(10) * t92 + t32;
t24 = -t384 * t41 + t389 * t42;
t23 = t384 * t42 + t389 * t41;
t22 = -pkin(9) * t471 - qJ(4) * t41 - t379 * t60;
t21 = -pkin(3) * t191 - pkin(9) * t472 + qJ(4) * t42 + t380 * t60;
t20 = -qJ(4) * t72 - t379 * t38 + t380 * t44;
t19 = -pkin(3) * t487 + qJ(4) * t73 + t379 * t44 + t38 * t380;
t18 = -t34 * t384 + t36 * t389;
t17 = t34 * t389 + t36 * t384;
t16 = -qJ(4) * t62 - t37 * t379 + t380 * t43;
t13 = -pkin(3) * t127 + qJ(4) * t63 + t37 * t380 + t379 * t43;
t12 = -pkin(9) * t56 - t25 * t383 + t26 * t388;
t11 = -pkin(4) * t173 + pkin(9) * t58 + t25 * t388 + t26 * t383;
t10 = -t14 * t379 + t15 * t380;
t8 = -pkin(9) * t14 - pkin(10) * t473 - t29 * t383;
t7 = -pkin(4) * t133 + pkin(9) * t15 - pkin(10) * t474 + t29 * t388;
t6 = -qJ(4) * t34 - t11 * t379 + t12 * t380;
t5 = -pkin(3) * t173 + qJ(4) * t36 + t11 * t380 + t12 * t379;
t4 = t10 * t389 - t384 * t9;
t3 = t10 * t384 + t389 * t9;
t2 = -qJ(4) * t9 - t379 * t7 + t380 * t8;
t1 = -pkin(3) * t133 + qJ(4) * t10 + t379 * t8 + t380 * t7;
t47 = [0, 0, 0, 0, 0, qJDD(1), t423, t411, 0, 0, t409 * t385, t354 * t390 + t357 * t385, t440 + t390 * (-t372 + t480), -t408 * t390, t385 * (t374 - t480) + t439, 0, t390 * t344 + pkin(1) * t357 + pkin(7) * (t390 * (-t374 - t480) - t440), -t385 * t344 - pkin(1) * t354 + pkin(7) * (-t439 - t385 * (-t372 - t480)), pkin(1) * (t372 + t374) + (t376 + t377) * t470 + t418, pkin(1) * t344 + pkin(7) * t418, t385 * (t326 * t389 + t352 * t442) - t425, t385 * (t303 * t389 - t305 * t384) - t390 * t333, t385 * (-t339 * t384 + t489) - t390 * t306, t385 * (-t351 * t441 - t384 * t396) + t425, t385 * (t338 * t389 + t453) + t390 * t302, t341 + t385 * (t351 * t389 - t352 * t384) * t368, t385 * (-pkin(8) * t281 + t455) + t390 * (-pkin(2) * t281 + t269) - pkin(1) * t281 + pkin(7) * (t282 * t390 - t303 * t385), t385 * (-pkin(8) * t291 + t454) + t390 * (-pkin(2) * t291 + t270) - pkin(1) * t291 + pkin(7) * (t292 * t390 - t307 * t385), t385 * t406 + pkin(7) * (t267 * t390 - t317 * t385) + t404 * (-t302 * t384 - t306 * t389), pkin(7) * (t222 * t390 + t310 * t385) - t404 * t406, t385 * (-t258 * t384 + t259 * t389) - t426, t385 * (-t214 * t384 + t216 * t389) - t390 * t298, t385 * (-t252 * t384 + t254 * t389) - t390 * t265, t385 * (-t256 * t384 + t257 * t389) + t426, t385 * (-t253 * t384 + t255 * t389) + t390 * t261, t385 * (-t273 * t384 + t274 * t389) + t341, t385 * (-pkin(8) * t183 - t177 * t384 + t204 * t389) + t390 * (-pkin(2) * t183 - t497) - pkin(1) * t183 + pkin(7) * (t184 * t390 + t260 * t385), t385 * (-pkin(8) * t205 - t178 * t384 + t207 * t389) + t390 * (-pkin(2) * t205 + t324 - t415) - pkin(1) * t205 + pkin(7) * (t206 * t390 + t385 * t484), t385 * (-pkin(8) * t171 - t108 * t384 + t109 * t389) + t390 * (-pkin(2) * t171 - t478) - pkin(1) * t171 + pkin(7) * (t172 * t390 + t271 * t385), t385 * (-pkin(8) * t79 - qJ(4) * t468 - t112 * t384) + t390 * (-pkin(2) * t79 - t479) - pkin(1) * t79 + pkin(7) * (t251 * t385 + t390 * t80), t385 * (-t137 * t384 + t139 * t389) - t427, t385 * (-t101 * t384 + t103 * t389) - t390 * t247, t385 * (-t160 * t384 + t162 * t389) - t390 * t199, t385 * (-t136 * t384 + t138 * t389) + t427, t385 * (-t161 * t384 + t163 * t389) + t390 * t196, t385 * (-t179 * t384 + t180 * t389) + t390 * t346, t385 * (-pkin(8) * t96 - t384 * t61 + t389 * t69) + t390 * (-pkin(2) * t96 - t395) - pkin(1) * t96 + pkin(7) * (t195 * t385 + t390 * t97), t385 * (-pkin(8) * t110 - t384 * t68 + t389 * t74) + t390 * (-pkin(2) * t110 - t399) - pkin(1) * t110 + pkin(7) * (t111 * t390 + t385 * t485), t385 * (-pkin(8) * t64 - t27 * t384 + t28 * t389) + t390 * (-pkin(2) * t64 - t412) - pkin(1) * t64 + pkin(7) * (t223 * t385 + t390 * t65), t385 * (-pkin(8) * t23 - t21 * t384 + t22 * t389) + t390 * (-pkin(2) * t23 - t416) - pkin(1) * t23 + pkin(7) * (t191 * t385 + t24 * t390), t385 * (-t384 * t52 + t389 * t54) - t428, t385 * (-t33 * t384 + t35 * t389) - t390 * t202, t385 * (-t384 * t75 + t389 * t77) - t390 * t131, t385 * (-t384 * t51 + t389 * t53) + t428, t385 * (-t384 * t76 + t389 * t78) + t390 * t128, t385 * (-t384 * t94 + t389 * t95) + t390 * t342, t385 * (-pkin(8) * t39 - t13 * t384 + t16 * t389) + t390 * (-pkin(2) * t39 - t394) - pkin(1) * t39 + pkin(7) * (t127 * t385 + t390 * t40), t385 * (-pkin(8) * t45 - t19 * t384 + t20 * t389) + t390 * (-pkin(2) * t45 - t393) - pkin(1) * t45 + pkin(7) * (t385 * t487 + t390 * t46), t385 * (-pkin(8) * t17 - t384 * t5 + t389 * t6) + t390 * (-pkin(2) * t17 - t405) - pkin(1) * t17 + pkin(7) * (t173 * t385 + t18 * t390), t385 * (-pkin(8) * t3 - t1 * t384 + t2 * t389) + t390 * (-pkin(2) * t3 - t407) - pkin(1) * t3 + pkin(7) * (t133 * t385 + t390 * t4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, t372 - t374, t371, t367, t429, qJDD(2), -t336, -t337, 0, 0, t326 * t384 - t352 * t441, t303 * t384 + t305 * t389, t339 * t389 + t490, -t351 * t442 + t389 * t396, t338 * t384 - t452, (t351 * t384 + t352 * t389) * t368, pkin(2) * t303 + pkin(8) * t282 - t454, pkin(2) * t307 + pkin(8) * t292 + t455, pkin(2) * t317 + pkin(8) * t267 + t222, -pkin(2) * t310 + pkin(8) * t222, t258 * t389 + t259 * t384, t214 * t389 + t216 * t384, t252 * t389 + t254 * t384, t256 * t389 + t257 * t384, t253 * t389 + t255 * t384, t273 * t389 + t274 * t384, -pkin(2) * t260 + pkin(8) * t184 + t177 * t389 + t204 * t384, -pkin(2) * t484 + pkin(8) * t206 + t178 * t389 + t207 * t384, -pkin(2) * t271 + pkin(8) * t172 + t108 * t389 + t109 * t384, -pkin(2) * t251 + pkin(8) * t80 - qJ(4) * t469 + t112 * t389, t137 * t389 + t139 * t384, t101 * t389 + t103 * t384, t160 * t389 + t162 * t384, t136 * t389 + t138 * t384, t161 * t389 + t163 * t384, t179 * t389 + t180 * t384, -pkin(2) * t195 + pkin(8) * t97 + t384 * t69 + t389 * t61, -pkin(2) * t485 + pkin(8) * t111 + t384 * t74 + t389 * t68, -pkin(2) * t223 + pkin(8) * t65 + t27 * t389 + t28 * t384, -pkin(2) * t191 + pkin(8) * t24 + t21 * t389 + t22 * t384, t384 * t54 + t389 * t52, t33 * t389 + t35 * t384, t384 * t77 + t389 * t75, t384 * t53 + t389 * t51, t384 * t78 + t389 * t76, t384 * t95 + t389 * t94, -pkin(2) * t127 + pkin(8) * t40 + t13 * t389 + t16 * t384, -pkin(2) * t487 + pkin(8) * t46 + t19 * t389 + t20 * t384, -pkin(2) * t173 + pkin(8) * t18 + t384 * t6 + t389 * t5, -pkin(2) * t133 + pkin(8) * t4 + t1 * t389 + t2 * t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, t333, t306, -t449, -t302, -t350, -t269, -t270, 0, 0, t451, t298, t265, -t451, -t261, -t350, t497, t415 + 0.2e1 * t436, t478, t479, t248, t247, t199, -t248, -t196, -t346, t395, t399, t412, t416, t203, t202, t131, -t203, -t128, -t342, t394, t393, t405, t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t484, t271, t251, 0, 0, 0, 0, 0, 0, t195, t485, t223, t191, 0, 0, 0, 0, 0, 0, t127, t487, t173, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t247, t199, -t248, -t196, -t346, -t106, -t107, 0, 0, t203, t202, t131, -t203, -t128, -t342, t414, t401, t88, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t202, t131, -t203, -t128, -t342, -t48, -t49, 0, 0;];
tauJ_reg  = t47;
