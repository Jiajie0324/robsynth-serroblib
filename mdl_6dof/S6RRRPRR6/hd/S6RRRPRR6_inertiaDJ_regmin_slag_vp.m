% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x33]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR6_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:29:30
% EndTime: 2019-03-09 18:29:39
% DurationCPUTime: 2.73s
% Computational Cost: add. (6205->282), mult. (15249->511), div. (0->0), fcn. (14724->10), ass. (0->168)
t152 = sin(qJ(2));
t151 = sin(qJ(3));
t156 = cos(qJ(2));
t196 = t156 * qJD(2);
t183 = t151 * t196;
t155 = cos(qJ(3));
t203 = qJD(3) * t155;
t225 = t152 * t203 + t183;
t224 = -0.4e1 * t152;
t150 = sin(qJ(5));
t154 = cos(qJ(5));
t148 = cos(pkin(11));
t189 = t148 * pkin(3) + pkin(4);
t147 = sin(pkin(11));
t223 = pkin(3) * t147;
t169 = -t150 * t223 + t154 * t189;
t168 = -t156 * pkin(2) - t152 * pkin(8);
t126 = -pkin(1) + t168;
t211 = t155 * t156;
t137 = pkin(7) * t211;
t208 = t151 * t126 + t137;
t144 = t152 ^ 2;
t172 = (-t156 ^ 2 + t144) * qJD(2);
t145 = t155 ^ 2;
t207 = t151 ^ 2 - t145;
t173 = t207 * qJD(3);
t222 = pkin(7) * t151;
t221 = t156 * pkin(5);
t105 = pkin(5) + t169;
t220 = -pkin(5) - t105;
t219 = -qJ(4) - pkin(8);
t213 = t152 * t155;
t214 = t151 * t152;
t104 = -t147 * t214 + t148 * t213;
t118 = t155 * t126;
t86 = -qJ(4) * t213 + t118 + (-pkin(3) - t222) * t156;
t89 = -qJ(4) * t214 + t208;
t56 = -t147 * t89 + t148 * t86;
t42 = -t156 * pkin(4) - t104 * pkin(9) + t56;
t116 = t147 * t155 + t148 * t151;
t103 = t116 * t152;
t57 = t147 * t86 + t148 * t89;
t44 = -t103 * pkin(9) + t57;
t218 = t150 * t42 + t154 * t44;
t197 = t155 * qJD(4);
t167 = pkin(2) * t152 - pkin(8) * t156;
t122 = t167 * qJD(2);
t141 = t152 * qJD(2);
t184 = t151 * t141;
t209 = pkin(7) * t184 + t155 * t122;
t49 = -t152 * t197 + (pkin(3) * t152 - qJ(4) * t211) * qJD(2) + (-t137 + (qJ(4) * t152 - t126) * t151) * qJD(3) + t209;
t210 = -t151 * t122 - t126 * t203;
t55 = (-pkin(7) * qJD(2) - qJ(4) * qJD(3)) * t213 + (-qJD(4) * t152 + (-pkin(7) * qJD(3) - qJ(4) * qJD(2)) * t156) * t151 - t210;
t28 = t147 * t49 + t148 * t55;
t127 = t219 * t151;
t128 = t219 * t155;
t90 = t148 * t127 + t147 * t128;
t79 = -t116 * pkin(9) + t90;
t158 = t147 * t151 - t148 * t155;
t91 = t147 * t127 - t148 * t128;
t80 = -pkin(9) * t158 + t91;
t217 = t150 * t79 + t154 * t80;
t175 = qJD(3) * t219;
t107 = t151 * t175 + t197;
t108 = -t151 * qJD(4) + t155 * t175;
t78 = t148 * t107 + t147 * t108;
t153 = cos(qJ(6));
t162 = -t154 * t103 - t150 * t104;
t18 = pkin(10) * t162 + t218;
t216 = t153 * t18;
t106 = t150 * t189 + t154 * t223;
t149 = sin(qJ(6));
t215 = t149 * t106;
t212 = t153 * t106;
t123 = pkin(3) * t214 + t152 * pkin(7);
t205 = qJD(3) * t151;
t204 = qJD(3) * t152;
t202 = qJD(3) * t156;
t201 = qJD(5) * t150;
t200 = qJD(5) * t154;
t199 = qJD(6) * t149;
t198 = qJD(6) * t153;
t195 = -0.2e1 * pkin(1) * qJD(2);
t194 = -0.2e1 * pkin(2) * qJD(3);
t192 = pkin(5) * t141;
t140 = pkin(3) * t205;
t191 = pkin(5) * t199;
t190 = pkin(5) * t198;
t139 = pkin(7) * t196;
t94 = t225 * pkin(3) + t139;
t138 = -t155 * pkin(3) - pkin(2);
t75 = -t116 * t196 + t158 * t204;
t180 = t155 * t196;
t76 = t116 * t204 + t147 * t183 - t148 * t180;
t30 = qJD(5) * t162 + t150 * t75 - t154 * t76;
t27 = -t147 * t55 + t148 * t49;
t23 = pkin(4) * t141 + t76 * pkin(9) + t27;
t26 = t75 * pkin(9) + t28;
t9 = -t218 * qJD(5) - t150 * t26 + t154 * t23;
t6 = -t30 * pkin(10) + t192 + t9;
t74 = -t150 * t103 + t154 * t104;
t31 = qJD(5) * t74 - t150 * t76 - t154 * t75;
t8 = -t150 * t23 - t154 * t26 - t42 * t200 + t44 * t201;
t7 = -t31 * pkin(10) - t8;
t188 = -t149 * t7 + t153 * t6;
t187 = t151 * t202;
t185 = t155 * t202;
t182 = t151 * t203;
t181 = t152 * t196;
t177 = -t150 * t44 + t154 * t42;
t15 = -t74 * pkin(10) + t177 - t221;
t179 = -t15 + t221;
t14 = t18 * t199;
t178 = -t149 * t6 + t14;
t110 = t116 * qJD(3);
t92 = t110 * pkin(4) + t140;
t176 = -t150 * t80 + t154 * t79;
t100 = t169 * qJD(5);
t101 = t106 * qJD(5);
t174 = -t149 * t100 - t153 * t101;
t77 = -t147 * t107 + t148 * t108;
t171 = 0.2e1 * t181;
t170 = t151 * t180;
t87 = t103 * pkin(4) + t123;
t166 = t149 * t15 + t216;
t85 = t154 * t116 - t150 * t158;
t32 = -t85 * pkin(10) + t176;
t159 = -t150 * t116 - t154 * t158;
t33 = pkin(10) * t159 + t217;
t165 = t149 * t33 - t153 * t32;
t164 = t149 * t32 + t153 * t33;
t36 = t149 * t74 - t153 * t162;
t37 = t149 * t162 + t153 * t74;
t52 = t149 * t85 - t153 * t159;
t53 = t149 * t159 + t153 * t85;
t163 = -t153 * t100 + t149 * t101;
t161 = t153 * t105 - t215;
t160 = t149 * t105 + t212;
t58 = -t75 * pkin(4) + t94;
t96 = pkin(4) * t158 + t138;
t111 = -t147 * t205 + t148 * t203;
t62 = -t111 * pkin(9) + t77;
t63 = -t110 * pkin(9) + t78;
t19 = -t150 * t62 - t154 * t63 - t79 * t200 + t80 * t201;
t157 = t155 * t141 + t187;
t2 = -qJD(6) * t166 + t188;
t20 = -t217 * qJD(5) - t150 * t63 + t154 * t62;
t134 = -0.2e1 * t181;
t67 = -t208 * qJD(3) + t209;
t66 = pkin(7) * t157 + t210;
t64 = -pkin(5) * t159 + t96;
t51 = qJD(5) * t85 + t154 * t110 + t150 * t111;
t50 = qJD(5) * t159 - t150 * t110 + t154 * t111;
t48 = -pkin(5) * t162 + t87;
t41 = -qJD(6) * t160 + t174;
t40 = -qJD(6) * t161 + t163;
t34 = t51 * pkin(5) + t92;
t24 = t31 * pkin(5) + t58;
t17 = qJD(6) * t53 + t149 * t50 + t153 * t51;
t16 = -qJD(6) * t52 - t149 * t51 + t153 * t50;
t13 = -t50 * pkin(10) + t20;
t12 = -t51 * pkin(10) - t19;
t11 = qJD(6) * t37 + t149 * t30 + t153 * t31;
t10 = -qJD(6) * t36 - t149 * t31 + t153 * t30;
t4 = -qJD(6) * t164 - t149 * t12 + t153 * t13;
t3 = qJD(6) * t165 - t153 * t12 - t149 * t13;
t1 = (-qJD(6) * t15 - t7) * t153 + t178;
t5 = [0, 0, 0, t171, -0.2e1 * t172, 0, 0, 0, t152 * t195, t156 * t195, -0.2e1 * t144 * t182 + 0.2e1 * t145 * t181, 0.2e1 * t144 * t173 + t170 * t224, 0.2e1 * t152 * t187 + 0.2e1 * t155 * t172, -0.2e1 * t151 * t172 + 0.2e1 * t152 * t185, t134, 0.2e1 * t118 * t141 - 0.2e1 * t67 * t156 + 0.2e1 * (t144 * t203 + t151 * t181) * pkin(7), -0.2e1 * t66 * t156 - 0.2e1 * t208 * t141 + 0.2e1 * (-t144 * t205 + t155 * t171) * pkin(7), -0.2e1 * t28 * t103 - 0.2e1 * t27 * t104 + 0.2e1 * t56 * t76 + 0.2e1 * t57 * t75, 0.2e1 * t123 * t94 + 0.2e1 * t56 * t27 + 0.2e1 * t57 * t28, 0.2e1 * t74 * t30, 0.2e1 * t162 * t30 - 0.2e1 * t74 * t31, 0.2e1 * t141 * t74 - 0.2e1 * t30 * t156, 0.2e1 * t141 * t162 + 0.2e1 * t31 * t156, t134, 0.2e1 * t141 * t177 - 0.2e1 * t9 * t156 - 0.2e1 * t162 * t58 + 0.2e1 * t87 * t31, -0.2e1 * t218 * t141 - 0.2e1 * t8 * t156 + 0.2e1 * t87 * t30 + 0.2e1 * t58 * t74, 0.2e1 * t37 * t10, -0.2e1 * t10 * t36 - 0.2e1 * t11 * t37, -0.2e1 * t10 * t156 + 0.2e1 * t141 * t37, 0.2e1 * t11 * t156 - 0.2e1 * t141 * t36, t134, -0.2e1 * t2 * t156 + 0.2e1 * (-t149 * t18 + t153 * t15) * t141 + 0.2e1 * t24 * t36 + 0.2e1 * t48 * t11, -0.2e1 * t1 * t156 + 0.2e1 * t48 * t10 - 0.2e1 * t141 * t166 + 0.2e1 * t24 * t37; 0, 0, 0, 0, 0, t196, -t141, 0, -t139, pkin(7) * t141, -t152 * t173 + t170, t182 * t224 - t207 * t196, t184 - t185, t157, 0 (pkin(8) * t211 + (-pkin(2) * t155 + t222) * t152) * qJD(3) + (t168 * t151 - t137) * qJD(2) (pkin(7) * t213 + t151 * t167) * qJD(3) + (t155 * t168 + t156 * t222) * qJD(2), -t78 * t103 - t77 * t104 - t57 * t110 - t56 * t111 - t27 * t116 - t158 * t28 + t91 * t75 + t90 * t76, t123 * t140 + t94 * t138 + t27 * t90 + t28 * t91 + t56 * t77 + t57 * t78, t30 * t85 + t74 * t50, t159 * t30 + t162 * t50 - t85 * t31 - t74 * t51, t141 * t85 - t50 * t156, t141 * t159 + t51 * t156, 0, t141 * t176 - t20 * t156 - t159 * t58 - t162 * t92 + t96 * t31 + t87 * t51, -t217 * t141 - t19 * t156 + t96 * t30 + t87 * t50 + t58 * t85 + t92 * t74, t10 * t53 + t37 * t16, -t10 * t52 - t53 * t11 - t16 * t36 - t37 * t17, t141 * t53 - t16 * t156, -t141 * t52 + t17 * t156, 0, t64 * t11 - t141 * t165 - t4 * t156 + t48 * t17 + t24 * t52 + t34 * t36, t64 * t10 - t141 * t164 - t3 * t156 + t48 * t16 + t24 * t53 + t34 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t182, -0.2e1 * t173, 0, 0, 0, t151 * t194, t155 * t194, -0.2e1 * t91 * t110 - 0.2e1 * t90 * t111 - 0.2e1 * t77 * t116 - 0.2e1 * t158 * t78, 0.2e1 * t138 * t140 + 0.2e1 * t90 * t77 + 0.2e1 * t91 * t78, 0.2e1 * t85 * t50, 0.2e1 * t159 * t50 - 0.2e1 * t85 * t51, 0, 0, 0, -0.2e1 * t159 * t92 + 0.2e1 * t96 * t51, 0.2e1 * t96 * t50 + 0.2e1 * t92 * t85, 0.2e1 * t53 * t16, -0.2e1 * t16 * t52 - 0.2e1 * t53 * t17, 0, 0, 0, 0.2e1 * t64 * t17 + 0.2e1 * t34 * t52, 0.2e1 * t64 * t16 + 0.2e1 * t34 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151 * t204 + t180, -t225, t141, t67, t66 (t147 * t75 + t148 * t76) * pkin(3) (t147 * t28 + t148 * t27) * pkin(3), 0, 0, t30, -t31, t141, t101 * t156 + t141 * t169 + t9, t100 * t156 - t106 * t141 + t8, 0, 0, t10, -t11, t141, t141 * t161 - t41 * t156 + t2, -t141 * t160 - t15 * t198 - t153 * t7 - t40 * t156 + t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, -t205, 0, -pkin(8) * t203, pkin(8) * t205 (-t110 * t147 - t111 * t148) * pkin(3) (t147 * t78 + t148 * t77) * pkin(3), 0, 0, t50, -t51, 0, t20, t19, 0, 0, t16, -t17, 0, t4, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t101, -0.2e1 * t100, 0, 0, 0, 0, 0, 0.2e1 * t41, 0.2e1 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, 0, 0, 0, 0, t31, t30, 0, 0, 0, 0, 0, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, 0, 0, 0, 0, t51, t50, 0, 0, 0, 0, 0, t17, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t31, t141, t9, t8, 0, 0, t10, -t11, t141, t153 * t192 + (t149 * t179 - t216) * qJD(6) + t188, t14 + (-t6 - t192) * t149 + (qJD(6) * t179 - t7) * t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t51, 0, t20, t19, 0, 0, t16, -t17, 0, t4, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t100, 0, 0, 0, 0, 0 (t220 * t149 - t212) * qJD(6) + t174 (t220 * t153 + t215) * qJD(6) + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t191, -0.2e1 * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10, -t11, t141, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, -t17, 0, t4, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, -t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
