% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:29:31
% EndTime: 2019-03-09 18:30:03
% DurationCPUTime: 16.26s
% Computational Cost: add. (28336->658), mult. (69089->893), div. (0->0), fcn. (51429->10), ass. (0->292)
t344 = cos(qJ(2));
t392 = qJD(1) * t344;
t320 = -qJD(3) + t392;
t341 = sin(qJ(2));
t355 = pkin(2) * t341 - pkin(8) * t344;
t300 = t355 * qJD(1);
t343 = cos(qJ(3));
t340 = sin(qJ(3));
t393 = qJD(1) * t341;
t374 = t340 * t393;
t245 = pkin(7) * t374 + t343 * t300;
t408 = t343 * t344;
t351 = pkin(3) * t341 - qJ(4) * t408;
t447 = -qJ(4) - pkin(8);
t363 = qJD(3) * t447;
t489 = qJD(1) * t351 + qJD(4) * t340 - t343 * t363 + t245;
t282 = t340 * t300;
t385 = qJD(4) * t343;
t409 = t341 * t343;
t410 = t340 * t344;
t488 = t282 + (-pkin(7) * t409 - qJ(4) * t410) * qJD(1) - t340 * t363 - t385;
t381 = t343 * qJD(2);
t297 = t374 - t381;
t373 = t343 * t393;
t391 = qJD(2) * t340;
t299 = t373 + t391;
t336 = sin(pkin(11));
t337 = cos(pkin(11));
t228 = t337 * t297 + t299 * t336;
t339 = sin(qJ(5));
t342 = cos(qJ(5));
t353 = -t297 * t336 + t337 * t299;
t153 = t342 * t228 + t339 * t353;
t338 = sin(qJ(6));
t453 = cos(qJ(6));
t367 = qJD(6) * t453;
t382 = qJD(6) * t338;
t463 = -t228 * t339 + t342 * t353;
t380 = qJD(1) * qJD(2);
t366 = t344 * t380;
t387 = qJD(3) * t341;
t370 = t340 * t387;
t379 = qJD(2) * qJD(3);
t243 = qJD(1) * t370 + (-t366 - t379) * t343;
t386 = qJD(3) * t343;
t369 = t341 * t386;
t389 = qJD(2) * t344;
t372 = t340 * t389;
t349 = t369 + t372;
t244 = qJD(1) * t349 + t340 * t379;
t175 = -t243 * t336 + t337 * t244;
t176 = -t243 * t337 - t244 * t336;
t383 = qJD(5) * t342;
t384 = qJD(5) * t339;
t71 = t339 * t175 - t342 * t176 + t228 * t383 + t353 * t384;
t72 = t342 * t175 + t339 * t176 - t228 * t384 + t353 * t383;
t22 = t153 * t367 + t338 * t72 + t382 * t463 + t453 * t71;
t313 = -qJD(5) + t320;
t305 = -qJD(6) + t313;
t80 = t153 * t453 + t338 * t463;
t441 = t305 * t80;
t465 = -t22 - t441;
t291 = t336 * t343 + t337 * t340;
t280 = t291 * qJD(3);
t398 = t291 * t392 - t280;
t290 = t336 * t340 - t337 * t343;
t487 = t320 * t290;
t449 = t80 ^ 2;
t478 = -t338 * t153 + t453 * t463;
t450 = t478 ^ 2;
t466 = -t449 + t450;
t448 = t80 * t478;
t403 = -t488 * t336 + t337 * t489;
t402 = t336 * t489 + t488 * t337;
t304 = -pkin(2) * t344 - pkin(8) * t341 - pkin(1);
t286 = t304 * qJD(1);
t329 = pkin(7) * t392;
t311 = qJD(2) * pkin(8) + t329;
t235 = t343 * t286 - t311 * t340;
t192 = -qJ(4) * t299 + t235;
t178 = -pkin(3) * t320 + t192;
t236 = t286 * t340 + t311 * t343;
t193 = -qJ(4) * t297 + t236;
t183 = t336 * t193;
t108 = t337 * t178 - t183;
t460 = pkin(9) * t353;
t86 = -pkin(4) * t320 + t108 - t460;
t412 = t337 * t193;
t109 = t336 * t178 + t412;
t472 = pkin(9) * t228;
t88 = t109 - t472;
t36 = -t339 * t88 + t342 * t86;
t477 = pkin(10) * t463;
t32 = t36 - t477;
t28 = -pkin(5) * t313 + t32;
t37 = t339 * t86 + t342 * t88;
t481 = pkin(10) * t153;
t33 = t37 - t481;
t440 = t338 * t33;
t12 = t28 * t453 - t440;
t376 = t453 * t33;
t13 = t338 * t28 + t376;
t486 = -t12 * t80 + t13 * t478;
t325 = t341 * t380;
t301 = t355 * qJD(2);
t287 = qJD(1) * t301;
t358 = pkin(7) * t325;
t165 = -qJD(3) * t236 + t343 * t287 + t340 * t358;
t107 = pkin(3) * t325 + qJ(4) * t243 - qJD(4) * t299 + t165;
t388 = qJD(3) * t340;
t164 = t286 * t386 + t340 * t287 - t311 * t388 - t343 * t358;
t115 = -qJ(4) * t244 - qJD(4) * t297 + t164;
t56 = t337 * t107 - t115 * t336;
t43 = pkin(4) * t325 - pkin(9) * t176 + t56;
t57 = t336 * t107 + t337 * t115;
t45 = -pkin(9) * t175 + t57;
t9 = -qJD(5) * t37 - t339 * t45 + t342 * t43;
t6 = pkin(5) * t325 + pkin(10) * t71 + t9;
t362 = -t339 * t43 - t342 * t45 - t86 * t383 + t88 * t384;
t7 = -pkin(10) * t72 - t362;
t348 = -t28 * t367 + t33 * t382 - t338 * t6 - t453 * t7;
t328 = pkin(7) * t393;
t442 = qJD(2) * pkin(2);
t310 = t328 - t442;
t241 = pkin(3) * t297 + qJD(4) + t310;
t166 = pkin(4) * t228 + t241;
t97 = pkin(5) * t153 + t166;
t464 = t97 * t80 + t348;
t23 = qJD(6) * t478 - t338 * t71 + t453 * t72;
t439 = t478 * t305;
t454 = -t23 - t439;
t484 = -pkin(4) * t393 - pkin(9) * t487 - t403;
t483 = -pkin(9) * t398 + t402;
t430 = t153 ^ 2;
t432 = t463 ^ 2;
t482 = -t430 + t432;
t2 = -qJD(6) * t13 - t338 * t7 + t453 * t6;
t455 = -t478 * t97 + t2;
t429 = t153 * t313;
t480 = -t71 - t429;
t428 = t153 * t463;
t401 = t290 * t383 + t291 * t384 - t398 * t339 - t487 * t342;
t225 = -t290 * t339 + t291 * t342;
t400 = qJD(5) * t225 + t487 * t339 - t398 * t342;
t479 = t153 * t166 + t362;
t307 = t447 * t340;
t308 = t447 * t343;
t239 = t337 * t307 + t308 * t336;
t210 = -pkin(9) * t291 + t239;
t240 = t336 * t307 - t337 * t308;
t211 = -pkin(9) * t290 + t240;
t444 = t210 * t383 - t211 * t384 + t484 * t339 - t483 * t342;
t131 = t339 * t210 + t342 * t211;
t443 = -t131 * qJD(5) + t483 * t339 + t484 * t342;
t324 = pkin(3) * t337 + pkin(4);
t452 = pkin(3) * t336;
t273 = t342 * t324 - t339 * t452;
t118 = -t192 * t336 - t412;
t98 = t118 + t472;
t119 = t337 * t192 - t183;
t99 = t119 - t460;
t434 = t273 * qJD(5) - t339 * t98 - t342 * t99;
t274 = t324 * t339 + t342 * t452;
t433 = -t274 * qJD(5) + t339 * t99 - t342 * t98;
t431 = t463 * t313;
t476 = -t72 - t431;
t473 = -t166 * t463 + t9;
t471 = -t400 * pkin(10) + t444;
t470 = -pkin(5) * t393 + t401 * pkin(10) + t443;
t469 = t434 + t477;
t468 = t433 - t481;
t467 = t228 * t353;
t356 = -t329 + (-t340 * t392 + t388) * pkin(3);
t461 = -0.2e1 * t380;
t293 = t343 * t304;
t451 = pkin(7) * t340;
t232 = -qJ(4) * t409 + t293 + (-pkin(3) - t451) * t344;
t322 = pkin(7) * t408;
t255 = t340 * t304 + t322;
t411 = t340 * t341;
t237 = -qJ(4) * t411 + t255;
t158 = t337 * t232 - t237 * t336;
t267 = t290 * t341;
t127 = -pkin(4) * t344 + pkin(9) * t267 + t158;
t159 = t336 * t232 + t337 * t237;
t266 = t291 * t341;
t133 = -pkin(9) * t266 + t159;
t74 = t339 * t127 + t342 * t133;
t457 = t235 * t320 + t164;
t456 = t236 * t320 - t165;
t399 = -t398 * pkin(4) + t356;
t130 = t342 * t210 - t211 * t339;
t100 = -pkin(10) * t225 + t130;
t224 = t342 * t290 + t291 * t339;
t101 = -pkin(10) * t224 + t131;
t50 = t100 * t453 - t338 * t101;
t446 = t50 * qJD(6) + t470 * t338 + t471 * t453;
t51 = t338 * t100 + t101 * t453;
t445 = -t51 * qJD(6) - t471 * t338 + t470 * t453;
t150 = -t338 * t224 + t225 * t453;
t438 = -t150 * qJD(6) + t401 * t338 - t400 * t453;
t437 = t224 * t367 + t225 * t382 + t400 * t338 + t401 * t453;
t268 = pkin(5) + t273;
t202 = t268 * t453 - t338 * t274;
t436 = t202 * qJD(6) + t468 * t338 + t469 * t453;
t203 = t338 * t268 + t274 * t453;
t435 = -t203 * qJD(6) - t469 * t338 + t468 * t453;
t427 = t353 ^ 2;
t426 = t353 * t320;
t425 = t228 ^ 2;
t424 = t228 * t320;
t421 = t243 * t340;
t420 = t244 * t343;
t419 = t297 * t320;
t418 = t299 * t297;
t417 = t299 * t320;
t416 = t310 * t340;
t415 = t310 * t343;
t414 = t320 * t340;
t413 = t320 * t343;
t346 = qJD(1) ^ 2;
t407 = t344 * t346;
t345 = qJD(2) ^ 2;
t406 = t345 * t341;
t405 = t345 * t344;
t404 = pkin(5) * t400 + t399;
t390 = qJD(2) * t341;
t395 = t343 * t301 + t390 * t451;
t146 = -t341 * t385 + t351 * qJD(2) + (-t322 + (qJ(4) * t341 - t304) * t340) * qJD(3) + t395;
t396 = t340 * t301 + t304 * t386;
t157 = (-pkin(7) * qJD(2) - qJ(4) * qJD(3)) * t409 + (-qJD(4) * t341 + (-pkin(7) * qJD(3) - qJ(4) * qJD(2)) * t344) * t340 + t396;
t77 = t336 * t146 + t337 * t157;
t302 = pkin(3) * t411 + t341 * pkin(7);
t334 = t341 ^ 2;
t394 = -t344 ^ 2 + t334;
t377 = pkin(7) * t410;
t330 = pkin(7) * t389;
t375 = t341 * t407;
t249 = pkin(3) * t349 + t330;
t327 = -pkin(3) * t343 - pkin(2);
t371 = t344 * t381;
t368 = t320 * t393;
t226 = pkin(3) * t244 + pkin(7) * t366;
t361 = pkin(1) * t461;
t73 = t342 * t127 - t133 * t339;
t76 = t337 * t146 - t157 * t336;
t360 = t297 + t381;
t359 = -t299 + t391;
t357 = t344 * t325;
t233 = pkin(4) * t266 + t302;
t180 = pkin(3) * t299 + pkin(4) * t353;
t354 = -t235 * t343 - t236 * t340;
t201 = -t266 * t339 - t267 * t342;
t352 = qJD(1) * t334 - t320 * t344;
t256 = pkin(4) * t290 + t327;
t204 = t290 * t387 - t291 * t389;
t160 = -pkin(4) * t204 + t249;
t128 = pkin(4) * t175 + t226;
t52 = -pkin(5) * t344 - pkin(10) * t201 + t73;
t200 = t342 * t266 - t267 * t339;
t55 = -pkin(10) * t200 + t74;
t26 = -t338 * t55 + t453 * t52;
t27 = t338 * t52 + t453 * t55;
t122 = -t338 * t200 + t201 * t453;
t205 = t280 * t341 + t336 * t372 - t337 * t371;
t64 = pkin(4) * t390 + pkin(9) * t205 + t76;
t70 = pkin(9) * t204 + t77;
t20 = t127 * t383 - t133 * t384 + t339 * t64 + t342 * t70;
t40 = pkin(5) * t72 + t128;
t21 = -t74 * qJD(5) - t339 * t70 + t342 * t64;
t254 = t293 - t377;
t253 = (-t320 - t392) * t390;
t246 = -pkin(7) * t373 + t282;
t190 = -qJD(3) * t255 + t395;
t189 = (-t341 * t381 - t344 * t388) * pkin(7) + t396;
t177 = pkin(5) * t224 + t256;
t149 = t224 * t453 + t225 * t338;
t142 = pkin(5) * t200 + t233;
t121 = t200 * t453 + t201 * t338;
t102 = pkin(5) * t463 + t180;
t96 = qJD(5) * t201 - t342 * t204 - t205 * t339;
t95 = -t339 * t204 + t342 * t205 + t266 * t383 - t267 * t384;
t65 = pkin(5) * t96 + t160;
t31 = t122 * qJD(6) - t338 * t95 + t453 * t96;
t30 = t200 * t367 + t201 * t382 + t338 * t96 + t453 * t95;
t17 = -pkin(10) * t96 + t20;
t16 = pkin(5) * t390 + pkin(10) * t95 + t21;
t15 = t32 * t453 - t440;
t14 = -t338 * t32 - t376;
t4 = -t27 * qJD(6) + t16 * t453 - t338 * t17;
t3 = t26 * qJD(6) + t338 * t16 + t17 * t453;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t357, t394 * t461, t405, -0.2e1 * t357, -t406, 0, -pkin(7) * t405 + t341 * t361, pkin(7) * t406 + t344 * t361, 0, 0, -t243 * t409 + (-t370 + t371) * t299 (-t297 * t343 - t299 * t340) * t389 + (t421 - t420 + (t297 * t340 - t299 * t343) * qJD(3)) * t341, t320 * t370 + t243 * t344 + (t299 * t341 + t343 * t352) * qJD(2), t244 * t411 + t297 * t349, t320 * t369 + t244 * t344 + (-t297 * t341 - t340 * t352) * qJD(2), t253, -t165 * t344 - t190 * t320 + (pkin(7) * t244 + t310 * t386) * t341 + ((pkin(7) * t297 + t416) * t344 + (t235 + (t254 + t377) * qJD(1)) * t341) * qJD(2), t164 * t344 + t189 * t320 + (-pkin(7) * t243 - t310 * t388) * t341 + ((pkin(7) * t299 + t415) * t344 + (-t236 + (-t255 + t322) * qJD(1)) * t341) * qJD(2), -t189 * t297 - t190 * t299 + t243 * t254 - t244 * t255 + t354 * t389 + (-t164 * t340 - t165 * t343 + (t235 * t340 - t236 * t343) * qJD(3)) * t341, t164 * t255 + t165 * t254 + t189 * t236 + t190 * t235 + (t310 + t328) * t330, -t176 * t267 - t205 * t353, t175 * t267 - t176 * t266 + t204 * t353 + t205 * t228, -t176 * t344 + t205 * t320 + (-qJD(1) * t267 + t353) * t390, t175 * t266 - t204 * t228, t175 * t344 - t204 * t320 + (-qJD(1) * t266 - t228) * t390, t253, t175 * t302 - t204 * t241 + t226 * t266 + t228 * t249 - t320 * t76 - t344 * t56 + (qJD(1) * t158 + t108) * t390, t176 * t302 - t205 * t241 - t226 * t267 + t353 * t249 + t320 * t77 + t344 * t57 + (-qJD(1) * t159 - t109) * t390, t108 * t205 + t109 * t204 - t158 * t176 - t159 * t175 - t228 * t77 - t266 * t57 + t267 * t56 - t353 * t76, t108 * t76 + t109 * t77 + t158 * t56 + t159 * t57 + t226 * t302 + t241 * t249, -t201 * t71 - t463 * t95, t153 * t95 + t200 * t71 - t201 * t72 - t463 * t96, t313 * t95 + t344 * t71 + (qJD(1) * t201 + t463) * t390, t153 * t96 + t200 * t72, t313 * t96 + t344 * t72 + (-qJD(1) * t200 - t153) * t390 (-t313 - t392) * t390, t128 * t200 + t153 * t160 + t166 * t96 - t21 * t313 + t233 * t72 - t344 * t9 + (qJD(1) * t73 + t36) * t390, t128 * t201 + t463 * t160 - t166 * t95 + t20 * t313 - t233 * t71 - t344 * t362 + (-qJD(1) * t74 - t37) * t390, -t153 * t20 + t200 * t362 - t201 * t9 - t21 * t463 + t36 * t95 - t37 * t96 + t71 * t73 - t72 * t74, t128 * t233 + t160 * t166 + t20 * t37 + t21 * t36 - t362 * t74 + t73 * t9, -t122 * t22 - t30 * t478, t121 * t22 - t122 * t23 + t30 * t80 - t31 * t478, t22 * t344 + t30 * t305 + (qJD(1) * t122 + t478) * t390, t121 * t23 + t31 * t80, t23 * t344 + t305 * t31 + (-qJD(1) * t121 - t80) * t390 (-t305 - t392) * t390, t121 * t40 + t142 * t23 - t2 * t344 - t305 * t4 + t31 * t97 + t65 * t80 + (qJD(1) * t26 + t12) * t390, -t348 * t344 + t122 * t40 - t142 * t22 + t3 * t305 - t30 * t97 + t65 * t478 + (-qJD(1) * t27 - t13) * t390, t12 * t30 + t121 * t348 - t122 * t2 - t13 * t31 + t22 * t26 - t23 * t27 - t3 * t80 - t4 * t478, t12 * t4 + t13 * t3 + t142 * t40 + t2 * t26 - t27 * t348 + t65 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375, t394 * t346, 0, t375, 0, 0, t346 * pkin(1) * t341, pkin(1) * t407, 0, 0, -t299 * t413 - t421 (-t243 + t419) * t343 + (-t244 + t417) * t340, -t320 * t386 + (t320 * t408 + t341 * t359) * qJD(1), -t297 * t414 - t420, t320 * t388 + (-t320 * t410 + t341 * t360) * qJD(1), t368, -pkin(2) * t244 + t245 * t320 + (pkin(8) * t413 + t416) * qJD(3) + ((-pkin(8) * t391 - t235) * t341 + (-pkin(7) * t360 - t416) * t344) * qJD(1), pkin(2) * t243 - t246 * t320 + (-pkin(8) * t414 + t415) * qJD(3) + ((-pkin(8) * t381 + t236) * t341 + (pkin(7) * t359 - t415) * t344) * qJD(1), t245 * t299 + t246 * t297 + ((qJD(3) * t299 - t244) * pkin(8) + t457) * t343 + ((qJD(3) * t297 - t243) * pkin(8) + t456) * t340, -t235 * t245 - t236 * t246 + (-t310 - t442) * t329 + (qJD(3) * t354 + t164 * t343 - t165 * t340) * pkin(8), t176 * t291 + t353 * t487, -t175 * t291 - t176 * t290 - t228 * t487 + t353 * t398, -t487 * t320 + (qJD(2) * t291 - t353) * t393, t175 * t290 - t228 * t398, -t398 * t320 + (-qJD(2) * t290 + t228) * t393, t368, t175 * t327 + t226 * t290 + t403 * t320 - t398 * t241 + t356 * t228 + (qJD(2) * t239 - t108) * t393, t176 * t327 + t226 * t291 - t402 * t320 + t487 * t241 + t356 * t353 + (-qJD(2) * t240 + t109) * t393, -t108 * t487 + t109 * t398 - t175 * t240 - t176 * t239 + t228 * t402 - t290 * t57 - t291 * t56 + t353 * t403, -t108 * t403 - t109 * t402 + t226 * t327 + t239 * t56 + t240 * t57 + t241 * t356, -t225 * t71 - t401 * t463, t153 * t401 + t224 * t71 - t225 * t72 - t400 * t463, t401 * t313 + (qJD(2) * t225 - t463) * t393, t153 * t400 + t224 * t72, t400 * t313 + (-qJD(2) * t224 + t153) * t393, t313 * t393, t128 * t224 + t256 * t72 - t443 * t313 + t400 * t166 + t399 * t153 + (qJD(2) * t130 - t36) * t393, t128 * t225 - t256 * t71 + t444 * t313 - t401 * t166 + t399 * t463 + (-qJD(2) * t131 + t37) * t393, t130 * t71 - t131 * t72 - t153 * t444 + t224 * t362 - t225 * t9 + t36 * t401 - t37 * t400 - t443 * t463, t128 * t256 + t130 * t9 - t131 * t362 + t166 * t399 + t36 * t443 + t37 * t444, -t150 * t22 - t437 * t478, t149 * t22 - t150 * t23 + t437 * t80 + t438 * t478, t437 * t305 + (qJD(2) * t150 - t478) * t393, t149 * t23 - t438 * t80, -t438 * t305 + (-qJD(2) * t149 + t80) * t393, t305 * t393, t149 * t40 + t177 * t23 - t438 * t97 + t404 * t80 - t445 * t305 + (qJD(2) * t50 - t12) * t393, t150 * t40 - t177 * t22 - t437 * t97 + t404 * t478 + t446 * t305 + (-qJD(2) * t51 + t13) * t393, t12 * t437 + t13 * t438 + t149 * t348 - t150 * t2 + t22 * t50 - t23 * t51 - t445 * t478 - t446 * t80, t12 * t445 + t13 * t446 + t177 * t40 + t2 * t50 - t348 * t51 + t404 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, -t297 ^ 2 + t299 ^ 2, -t243 - t419, -t418, -t244 - t417, t325, -t299 * t310 - t456, t297 * t310 - t457, 0, 0, t467, -t425 + t427, t176 - t424, -t467, -t175 - t426, t325, t118 * t320 - t353 * t241 + (-t228 * t299 + t325 * t337) * pkin(3) + t56, -t119 * t320 + t228 * t241 + (-t299 * t353 - t325 * t336) * pkin(3) - t57 (-t175 * t336 - t176 * t337) * pkin(3) + (t109 + t118) * t353 + (-t108 + t119) * t228, -t108 * t118 - t109 * t119 + (-t241 * t299 + t336 * t57 + t337 * t56) * pkin(3), t428, t482, t480, -t428, t476, t325, -t153 * t180 + t273 * t325 - t313 * t433 + t473, -t180 * t463 - t274 * t325 + t313 * t434 + t479, t273 * t71 - t274 * t72 + (t37 - t433) * t463 + (-t434 - t36) * t153, -t166 * t180 + t273 * t9 - t274 * t362 + t36 * t433 + t37 * t434, t448, t466, t465, -t448, t454, t325, -t102 * t80 + t202 * t325 - t305 * t435 + t455, -t102 * t478 - t203 * t325 + t305 * t436 + t464, t202 * t22 - t203 * t23 - t435 * t478 - t436 * t80 + t486, -t102 * t97 + t12 * t435 + t13 * t436 + t2 * t202 - t203 * t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175 - t426, t176 + t424, -t425 - t427, t108 * t353 + t109 * t228 + t226, 0, 0, 0, 0, 0, 0, t72 - t431, -t71 + t429, -t430 - t432, t153 * t37 + t36 * t463 + t128, 0, 0, 0, 0, 0, 0, t23 - t439, -t22 + t441, -t449 - t450, t12 * t478 + t13 * t80 + t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, t482, t480, -t428, t476, t325, -t313 * t37 + t473, -t313 * t36 + t479, 0, 0, t448, t466, t465, -t448, t454, t325, t14 * t305 + (t305 * t382 + t325 * t453 - t463 * t80) * pkin(5) + t455, -t15 * t305 + (t305 * t367 - t325 * t338 - t463 * t478) * pkin(5) + t464, t14 * t478 + t15 * t80 + (t453 * t22 - t23 * t338 + (t338 * t478 - t453 * t80) * qJD(6)) * pkin(5) + t486, -t12 * t14 - t13 * t15 + (t453 * t2 - t348 * t338 - t463 * t97 + (-t12 * t338 + t13 * t453) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t466, t465, -t448, t454, t325, -t13 * t305 + t455, -t12 * t305 + t464, 0, 0;];
tauc_reg  = t1;
