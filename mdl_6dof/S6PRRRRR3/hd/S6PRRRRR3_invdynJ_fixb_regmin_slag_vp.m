% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6PRRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRR3_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR3_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR3_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR3_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR3_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR3_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:51:36
% EndTime: 2019-03-09 00:51:56
% DurationCPUTime: 8.90s
% Computational Cost: add. (7506->578), mult. (17103->833), div. (0->0), fcn. (13695->18), ass. (0->273)
t251 = sin(qJ(4));
t256 = cos(qJ(4));
t341 = t256 * qJD(3);
t252 = sin(qJ(3));
t355 = qJD(2) * t252;
t192 = t251 * t355 - t341;
t352 = qJD(3) * t251;
t194 = t256 * t355 + t352;
t250 = sin(qJ(5));
t255 = cos(qJ(5));
t121 = t255 * t192 + t194 * t250;
t249 = sin(qJ(6));
t254 = cos(qJ(6));
t290 = t192 * t250 - t255 * t194;
t292 = t121 * t249 + t254 * t290;
t55 = t254 * t121 - t249 * t290;
t429 = t292 * t55;
t257 = cos(qJ(3));
t299 = pkin(3) * t252 - pkin(9) * t257;
t203 = t299 * qJD(3);
t253 = sin(qJ(2));
t351 = qJD(3) * t252;
t247 = sin(pkin(6));
t359 = qJD(1) * t247;
t258 = cos(qJ(2));
t370 = t257 * t258;
t400 = pkin(8) * t251;
t437 = (-t251 * t370 + t253 * t256) * t359 - t256 * t203 - t351 * t400;
t207 = -pkin(3) * t257 - pkin(9) * t252 - pkin(2);
t346 = qJD(4) * t256;
t436 = -(t251 * t253 + t256 * t370) * t359 + t251 * t203 + t207 * t346;
t424 = t292 ^ 2 - t55 ^ 2;
t354 = qJD(2) * t257;
t224 = -qJD(4) + t354;
t217 = -qJD(5) + t224;
t210 = -qJD(6) + t217;
t339 = qJD(2) * qJD(3);
t320 = t257 * t339;
t337 = t252 * qJDD(2);
t347 = qJD(4) * t252;
t425 = -qJD(2) * t347 + qJDD(3);
t109 = qJD(4) * t341 + (t320 + t337) * t256 + t425 * t251;
t110 = t251 * (qJD(3) * (qJD(4) + t354) + t337) - t425 * t256;
t265 = qJD(5) * t290 - t250 * t109 - t255 * t110;
t344 = qJD(5) * t255;
t345 = qJD(5) * t250;
t33 = t255 * t109 - t250 * t110 - t192 * t344 - t194 * t345;
t342 = qJD(6) * t254;
t343 = qJD(6) * t249;
t6 = -t121 * t342 + t249 * t265 + t254 * t33 + t290 * t343;
t422 = -t210 * t55 + t6;
t248 = cos(pkin(6));
t391 = cos(pkin(12));
t309 = t391 * t253;
t246 = sin(pkin(12));
t378 = t246 * t258;
t168 = t248 * t309 + t378;
t310 = t247 * t391;
t136 = t168 * t257 - t252 * t310;
t308 = t391 * t258;
t379 = t246 * t253;
t170 = -t248 * t379 + t308;
t138 = t246 * t247 * t252 + t170 * t257;
t167 = -t248 * t308 + t379;
t169 = t248 * t378 + t309;
t376 = t247 * t257;
t175 = t248 * t252 + t253 * t376;
t205 = qJD(2) * pkin(8) + t253 * t359;
t358 = qJD(1) * t248;
t222 = t252 * t358;
t154 = t257 * t205 + t222;
t147 = qJD(3) * pkin(9) + t154;
t357 = qJD(1) * t258;
t322 = t247 * t357;
t156 = qJD(2) * t207 - t322;
t86 = -t147 * t251 + t256 * t156;
t62 = -pkin(10) * t194 + t86;
t45 = -pkin(4) * t224 + t62;
t87 = t147 * t256 + t156 * t251;
t63 = -pkin(10) * t192 + t87;
t52 = t255 * t63;
t27 = t250 * t45 + t52;
t431 = pkin(11) * t121;
t21 = t27 - t431;
t19 = t21 * t343;
t245 = qJ(4) + qJ(5);
t241 = qJ(6) + t245;
t230 = sin(t241);
t231 = cos(t241);
t375 = t247 * t258;
t411 = -t252 * t205 + t257 * t358;
t146 = -qJD(3) * pkin(3) - t411;
t101 = pkin(4) * t192 + t146;
t47 = pkin(5) * t121 + t101;
t421 = t47 * t55 - g(1) * (-t138 * t231 - t169 * t230) - g(2) * (-t136 * t231 - t167 * t230) - g(3) * (-t175 * t231 + t230 * t375) + t19;
t237 = t257 * qJDD(2);
t189 = t252 * t339 + qJDD(4) - t237;
t184 = qJDD(5) + t189;
t340 = qJD(1) * qJD(2);
t159 = qJDD(2) * pkin(8) + (qJDD(1) * t253 + t258 * t340) * t247;
t338 = qJDD(1) * t248;
t317 = t252 * t338;
t71 = qJDD(3) * pkin(9) + qJD(3) * t411 + t257 * t159 + t317;
t321 = t253 * t340;
t296 = -qJDD(1) * t375 + t247 * t321;
t98 = qJD(2) * t203 + qJDD(2) * t207 + t296;
t94 = t256 * t98;
t267 = -qJD(4) * t87 - t251 * t71 + t94;
t12 = t189 * pkin(4) - t109 * pkin(10) + t267;
t336 = t156 * t346 + t251 * t98 + t256 * t71;
t348 = qJD(4) * t251;
t281 = t147 * t348 - t336;
t17 = -pkin(10) * t110 - t281;
t314 = t255 * t12 - t250 * t17;
t269 = -qJD(5) * t27 + t314;
t2 = t184 * pkin(5) - t33 * pkin(11) + t269;
t307 = -t250 * t12 - t255 * t17 - t45 * t344 + t63 * t345;
t3 = pkin(11) * t265 - t307;
t334 = t254 * t2 - t249 * t3;
t435 = t47 * t292 - g(1) * (-t138 * t230 + t169 * t231) - g(2) * (-t136 * t230 + t167 * t231) - g(3) * (-t175 * t230 - t231 * t375) + t334;
t266 = qJD(6) * t292 - t249 * t33 + t254 * t265;
t416 = t210 * t292 + t266;
t371 = t256 * t257;
t226 = pkin(8) * t371;
t288 = pkin(4) * t252 - pkin(10) * t371;
t434 = -t288 * qJD(3) - (-t226 + (pkin(10) * t252 - t207) * t251) * qJD(4) + t437;
t350 = qJD(3) * t257;
t326 = t251 * t350;
t426 = t252 * t346 + t326;
t433 = -t426 * pkin(10) + (-t252 * t341 - t257 * t348) * pkin(8) + t436;
t328 = t251 * t354;
t403 = pkin(9) + pkin(10);
t333 = qJD(4) * t403;
t200 = t299 * qJD(2);
t365 = t251 * t200 + t256 * t411;
t428 = pkin(10) * t328 - t251 * t333 - t365;
t182 = t256 * t200;
t432 = qJD(2) * t288 - t251 * t411 + t256 * t333 + t182;
t430 = pkin(11) * t290;
t427 = t290 * t121;
t195 = t250 * t251 - t255 * t256;
t279 = t195 * t257;
t408 = qJD(4) + qJD(5);
t367 = qJD(2) * t279 - t408 * t195;
t196 = t250 * t256 + t251 * t255;
t366 = (-t354 + t408) * t196;
t423 = -t121 ^ 2 + t290 ^ 2;
t420 = -t121 * t217 + t33;
t50 = t250 * t63;
t26 = t255 * t45 - t50;
t20 = t26 + t430;
t18 = -pkin(5) * t217 + t20;
t393 = t254 * t21;
t5 = t249 * t18 + t393;
t419 = -qJD(6) * t5 + t435;
t239 = sin(t245);
t240 = cos(t245);
t418 = t101 * t121 - g(1) * (-t138 * t240 - t169 * t239) - g(2) * (-t136 * t240 - t167 * t239) - g(3) * (-t175 * t240 + t239 * t375) + t307;
t417 = t101 * t290 - g(1) * (-t138 * t239 + t169 * t240) - g(2) * (-t136 * t239 + t167 * t240) - g(3) * (-t175 * t239 - t240 * t375) + t269;
t415 = t217 * t290 + t265;
t191 = t256 * t207;
t372 = t252 * t256;
t129 = -pkin(10) * t372 + t191 + (-pkin(4) - t400) * t257;
t361 = t251 * t207 + t226;
t373 = t251 * t252;
t143 = -pkin(10) * t373 + t361;
t414 = t129 * t344 - t143 * t345 - t434 * t250 + t433 * t255;
t413 = t433 * t250 + t434 * t255;
t412 = t432 * t255;
t163 = t196 * t252;
t302 = -t154 + (-t328 + t348) * pkin(4);
t368 = t250 * t129 + t255 * t143;
t212 = t403 * t251;
t213 = t403 * t256;
t362 = -t250 * t212 + t255 * t213;
t410 = -t212 * t344 - t213 * t345 - t432 * t250 + t428 * t255;
t409 = -t251 * t347 + t257 * t341;
t259 = qJD(3) ^ 2;
t298 = g(1) * t169 + g(2) * t167;
t407 = 0.2e1 * qJDD(2) * pkin(2) - pkin(8) * t259 + t247 * (-g(3) * t258 + t321) - t296 + t298;
t315 = qJD(6) * t18 + t3;
t406 = t249 * t2 + t254 * t315;
t404 = -g(3) * t375 + (pkin(8) * t224 + t147) * qJD(4) + t298;
t73 = -qJD(3) * t279 - t163 * t408;
t402 = -pkin(5) * t351 + pkin(11) * t73 + qJD(5) * t368 + t413;
t74 = -t345 * t373 + (t372 * t408 + t326) * t255 + t409 * t250;
t401 = -pkin(11) * t74 + t414;
t127 = t254 * t195 + t196 * t249;
t398 = -qJD(6) * t127 - t366 * t249 + t367 * t254;
t128 = -t195 * t249 + t196 * t254;
t397 = qJD(6) * t128 + t367 * t249 + t366 * t254;
t396 = t255 * t62 - t50;
t394 = qJD(2) * pkin(2);
t392 = pkin(5) * t366 + t302;
t389 = t109 * t251;
t166 = qJDD(6) + t184;
t388 = t166 * t250;
t387 = t192 * t224;
t386 = t194 * t224;
t385 = t194 * t256;
t384 = t230 * t257;
t383 = t231 * t257;
t232 = pkin(4) * t255 + pkin(5);
t382 = t232 * t166;
t381 = t239 * t257;
t380 = t240 * t257;
t377 = t247 * t253;
t374 = t250 * t254;
t369 = qJDD(1) - g(3);
t204 = pkin(4) * t373 + t252 * pkin(8);
t243 = t252 ^ 2;
t360 = -t257 ^ 2 + t243;
t356 = qJD(2) * t247;
t353 = qJD(3) * t192;
t349 = qJD(4) * t224;
t155 = pkin(4) * t426 + pkin(8) * t350;
t233 = -pkin(4) * t256 - pkin(3);
t331 = t252 * t357;
t330 = t253 * t356;
t329 = t258 * t356;
t327 = t224 * t341;
t319 = t258 * t339;
t312 = -t250 * t62 - t52;
t305 = t255 * t129 - t143 * t250;
t304 = -t255 * t212 - t213 * t250;
t105 = -pkin(11) * t196 + t304;
t301 = -pkin(11) * t366 + qJD(6) * t105 + t410;
t106 = -pkin(11) * t195 + t362;
t300 = pkin(5) * t355 + t367 * pkin(11) + t362 * qJD(5) + qJD(6) * t106 + t428 * t250 + t412;
t297 = g(1) * t170 + g(2) * t168;
t164 = t195 * t252;
t40 = -pkin(5) * t257 + pkin(11) * t164 + t305;
t41 = -pkin(11) * t163 + t368;
t295 = t249 * t40 + t254 * t41;
t141 = -t175 * t251 - t256 * t375;
t285 = -t175 * t256 + t251 * t375;
t66 = t141 * t255 + t250 * t285;
t67 = t141 * t250 - t255 * t285;
t294 = -t249 * t67 + t254 * t66;
t293 = t249 * t66 + t254 * t67;
t99 = t254 * t163 - t164 * t249;
t100 = -t163 * t249 - t164 * t254;
t260 = qJD(2) ^ 2;
t289 = qJDD(2) * t258 - t253 * t260;
t174 = -t248 * t257 + t252 * t377;
t283 = t251 * t189 - t224 * t346;
t282 = t256 * t189 + t224 * t348;
t277 = g(1) * (-t170 * t252 + t246 * t376) + g(2) * (-t168 * t252 - t257 * t310) - g(3) * t174;
t276 = qJD(3) * t222 + t252 * t159 + t205 * t350 - t257 * t338;
t273 = -g(3) * t377 - t297;
t272 = -pkin(9) * t189 - t146 * t224;
t72 = -qJDD(3) * pkin(3) + t276;
t264 = pkin(9) * t349 - t277 - t72;
t37 = pkin(4) * t110 + t72;
t206 = -t322 - t394;
t263 = -pkin(8) * qJDD(3) + (t206 + t322 - t394) * qJD(3);
t162 = pkin(5) * t195 + t233;
t140 = qJD(3) * t175 + t252 * t329;
t139 = -qJD(3) * t174 + t257 * t329;
t131 = pkin(5) * t163 + t204;
t95 = pkin(4) * t194 - pkin(5) * t290;
t49 = qJD(4) * t141 + t139 * t256 + t251 * t330;
t48 = qJD(4) * t285 - t139 * t251 + t256 * t330;
t42 = pkin(5) * t74 + t155;
t25 = qJD(6) * t100 + t249 * t73 + t254 * t74;
t24 = -qJD(6) * t99 - t249 * t74 + t254 * t73;
t23 = t396 + t430;
t22 = t312 + t431;
t15 = -pkin(5) * t265 + t37;
t14 = -qJD(5) * t67 - t250 * t49 + t255 * t48;
t13 = qJD(5) * t66 + t250 * t48 + t255 * t49;
t4 = t18 * t254 - t21 * t249;
t1 = [t369, 0, t289 * t247 (-qJDD(2) * t253 - t258 * t260) * t247, 0, 0, 0, 0, 0, -t140 * qJD(3) - t174 * qJDD(3) + (-t252 * t319 + t257 * t289) * t247, -t139 * qJD(3) - t175 * qJDD(3) + (-t252 * t289 - t257 * t319) * t247, 0, 0, 0, 0, 0, t110 * t174 + t140 * t192 + t141 * t189 - t224 * t48, t109 * t174 + t140 * t194 + t189 * t285 + t224 * t49, 0, 0, 0, 0, 0, t121 * t140 - t14 * t217 - t174 * t265 + t184 * t66, t13 * t217 - t140 * t290 + t174 * t33 - t184 * t67, 0, 0, 0, 0, 0 -(-qJD(6) * t293 - t249 * t13 + t254 * t14) * t210 + t294 * t166 + t140 * t55 - t174 * t266 (qJD(6) * t294 + t254 * t13 + t249 * t14) * t210 - t293 * t166 - t140 * t292 + t174 * t6; 0, qJDD(2), t369 * t375 + t298, -t369 * t377 + t297, qJDD(2) * t243 + 0.2e1 * t252 * t320, 0.2e1 * t237 * t252 - 0.2e1 * t339 * t360, qJDD(3) * t252 + t257 * t259, qJDD(3) * t257 - t252 * t259, 0, t263 * t252 + t257 * t407, -t252 * t407 + t263 * t257, t109 * t372 + t194 * t409 (-t192 * t256 - t194 * t251) * t350 + (-t389 - t110 * t256 + (t192 * t251 - t385) * qJD(4)) * t252 (-t109 - t327) * t257 + (qJD(3) * t194 + t282) * t252 (t224 * t352 + t110) * t257 + (-t283 - t353) * t252, -t189 * t257 - t224 * t351, t191 * t189 + t437 * t224 + (t207 * t349 + t273) * t251 + (pkin(8) * t353 - t94 + (-pkin(8) * t189 + qJD(3) * t146 + qJD(4) * t156 + t71) * t251 + t404 * t256) * t257 + (pkin(8) * t110 + qJD(3) * t86 + t146 * t346 - t192 * t322 + t72 * t251) * t252, -t361 * t189 + t436 * t224 + t273 * t256 + ((pkin(8) * t194 + t146 * t256) * qJD(3) - t404 * t251 + t336) * t257 + (-t194 * t322 - t146 * t348 - t87 * qJD(3) + t72 * t256 + (t109 - t327) * pkin(8)) * t252, -t164 * t33 - t290 * t73, -t121 * t73 - t163 * t33 - t164 * t265 + t290 * t74, -t164 * t184 - t217 * t73 - t257 * t33 - t290 * t351, -t121 * t351 - t163 * t184 + t217 * t74 - t257 * t265, -t184 * t257 - t217 * t351, t305 * t184 - t314 * t257 + t26 * t351 + t155 * t121 - t204 * t265 + t37 * t163 + t101 * t74 - g(1) * (-t169 * t380 + t170 * t239) - g(2) * (-t167 * t380 + t168 * t239) + t413 * t217 + (t217 * t368 + t257 * t27) * qJD(5) + (-t121 * t331 - g(3) * (t239 * t253 + t240 * t370)) * t247, -t368 * t184 - t307 * t257 - t27 * t351 - t155 * t290 + t204 * t33 - t37 * t164 + t101 * t73 - g(1) * (t169 * t381 + t170 * t240) - g(2) * (t167 * t381 + t168 * t240) + t414 * t217 + (t290 * t331 - g(3) * (-t239 * t370 + t240 * t253)) * t247, t100 * t6 - t24 * t292, t100 * t266 - t24 * t55 + t25 * t292 - t6 * t99, t100 * t166 - t210 * t24 - t257 * t6 - t292 * t351, -t166 * t99 + t210 * t25 - t257 * t266 - t351 * t55, -t166 * t257 - t210 * t351 (-t249 * t41 + t254 * t40) * t166 - t334 * t257 + t4 * t351 + t42 * t55 - t131 * t266 + t15 * t99 + t47 * t25 - g(1) * (-t169 * t383 + t170 * t230) - g(2) * (-t167 * t383 + t168 * t230) + (t249 * t401 + t254 * t402) * t210 + (t210 * t295 + t257 * t5) * qJD(6) + (-t55 * t331 - g(3) * (t230 * t253 + t231 * t370)) * t247, -t295 * t166 + (-t19 + t406) * t257 - t5 * t351 - t42 * t292 + t131 * t6 + t15 * t100 + t47 * t24 - g(1) * (t169 * t384 + t170 * t231) - g(2) * (t167 * t384 + t168 * t231) + ((qJD(6) * t40 + t401) * t254 + (-qJD(6) * t41 - t402) * t249) * t210 + (t292 * t331 - g(3) * (-t230 * t370 + t231 * t253)) * t247; 0, 0, 0, 0, -t252 * t260 * t257, t360 * t260, t337, t237, qJDD(3), qJD(3) * t154 - t206 * t355 - t276 - t277, -t317 + g(1) * t138 + g(2) * t136 + g(3) * t175 + (-qJD(2) * t206 - t159) * t257, -t224 * t385 + t389 (t109 + t387) * t256 + (-t110 + t386) * t251 (-t194 * t252 + t224 * t371) * qJD(2) + t283 (-t224 * t251 * t257 + t192 * t252) * qJD(2) + t282, t224 * t355, -t86 * t355 - pkin(3) * t110 - t154 * t192 + t182 * t224 + (-t224 * t411 + t272) * t251 + t264 * t256, -pkin(3) * t109 - t154 * t194 - t224 * t365 - t251 * t264 + t256 * t272 + t355 * t87, t196 * t33 - t290 * t367, -t121 * t367 - t195 * t33 + t196 * t265 + t290 * t366, t196 * t184 - t217 * t367 + t290 * t355, t121 * t355 - t195 * t184 + t217 * t366, t217 * t355, t304 * t184 - t233 * t265 + t37 * t195 - t26 * t355 + (t213 * t344 + (-qJD(5) * t212 + t428) * t250 + t412) * t217 + t302 * t121 + t366 * t101 - t277 * t240, t367 * t101 - t362 * t184 + t37 * t196 + t217 * t410 + t233 * t33 + t277 * t239 + t27 * t355 - t290 * t302, t128 * t6 - t292 * t398, -t127 * t6 + t128 * t266 + t292 * t397 - t398 * t55, t128 * t166 - t210 * t398 + t292 * t355, -t127 * t166 + t210 * t397 + t355 * t55, t210 * t355 (t105 * t254 - t106 * t249) * t166 - t162 * t266 + t15 * t127 - t4 * t355 + t392 * t55 + t397 * t47 + (t249 * t301 + t254 * t300) * t210 - t277 * t231 -(t105 * t249 + t106 * t254) * t166 + t162 * t6 + t15 * t128 + t5 * t355 - t392 * t292 + t398 * t47 + (-t249 * t300 + t254 * t301) * t210 + t277 * t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194 * t192, -t192 ^ 2 + t194 ^ 2, t109 - t387, -t110 - t386, t189, -t87 * t224 - t146 * t194 - g(1) * (-t138 * t251 + t169 * t256) - g(2) * (-t136 * t251 + t167 * t256) - g(3) * t141 + t267, -t86 * t224 + t146 * t192 - g(1) * (-t138 * t256 - t169 * t251) - g(2) * (-t136 * t256 - t167 * t251) - g(3) * t285 + t281, -t427, t423, t420, t415, t184, t312 * t217 + (-t121 * t194 + t184 * t255 + t217 * t345) * pkin(4) + t417, -t396 * t217 + (-t184 * t250 + t194 * t290 + t217 * t344) * pkin(4) + t418, -t429, t424, t422, t416, t166, t254 * t382 + (t22 * t254 - t23 * t249) * t210 - t95 * t55 + (-t249 * t388 - (-t249 * t255 - t374) * t210 * qJD(5)) * pkin(4) + (-(-pkin(4) * t374 - t232 * t249) * t210 - t5) * qJD(6) + t435, t95 * t292 + (-t382 - t2 + (-t22 + (-qJD(5) - qJD(6)) * t250 * pkin(4)) * t210) * t249 + (-pkin(4) * t388 + (pkin(4) * t344 + qJD(6) * t232 - t23) * t210 - t315) * t254 + t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, t423, t420, t415, t184, -t217 * t27 + t417, -t217 * t26 + t418, -t429, t424, t422, t416, t166 (-t20 * t249 - t393) * t210 + (t166 * t254 + t210 * t343 + t290 * t55) * pkin(5) + t419 (t21 * t210 - t2) * t249 + (-t20 * t210 - t315) * t254 + (-t166 * t249 + t210 * t342 - t290 * t292) * pkin(5) + t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, t424, t422, t416, t166, -t210 * t5 + t419, -t210 * t4 - t406 + t421;];
tau_reg  = t1;
