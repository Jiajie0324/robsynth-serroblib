% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:51:41
% EndTime: 2019-03-09 00:52:42
% DurationCPUTime: 45.47s
% Computational Cost: add. (13834->824), mult. (33528->1145), div. (0->0), fcn. (37879->12), ass. (0->661)
t1124 = qJD(5) + qJD(6);
t1186 = qJD(4) + t1124;
t638 = sin(qJ(4));
t642 = cos(qJ(5));
t945 = t642 * t638;
t637 = sin(qJ(5));
t643 = cos(qJ(4));
t973 = t637 * t643;
t774 = t945 + t973;
t1063 = pkin(9) + pkin(10);
t589 = t1063 * t638;
t590 = t1063 * t643;
t828 = t642 * t589 + t637 * t590;
t1075 = -pkin(11) * t774 - t828;
t576 = t642 * t590;
t975 = t637 * t589;
t477 = t576 - t975;
t944 = t642 * t643;
t974 = t637 * t638;
t568 = -t944 + t974;
t385 = -pkin(11) * t568 + t477;
t636 = sin(qJ(6));
t641 = cos(qJ(6));
t1178 = -t641 * t1075 + t636 * t385;
t1182 = t1186 * t1178;
t213 = t636 * t1075 + t641 * t385;
t1183 = t1186 * t213;
t888 = qJD(4) + qJD(5);
t644 = cos(qJ(3));
t1044 = t644 / 0.2e1;
t1181 = t1044 * t213;
t635 = sin(pkin(6));
t640 = sin(qJ(2));
t1004 = t635 * t640;
t1023 = cos(pkin(6));
t639 = sin(qJ(3));
t710 = t1004 * t639 - t1023 * t644;
t972 = t638 * t639;
t533 = t637 * t972 - t639 * t944;
t534 = t774 * t639;
t831 = t636 * t533 - t641 * t534;
t696 = t710 * t831;
t549 = t1004 * t644 + t1023 * t639;
t1009 = t549 * t643;
t645 = cos(qJ(2));
t1003 = t635 * t645;
t869 = t638 * t1003;
t462 = -t869 + t1009;
t870 = t643 * t1003;
t749 = t549 * t638 + t870;
t832 = t637 * t462 + t642 * t749;
t1101 = t641 * t832;
t300 = t642 * t462 - t637 * t749;
t1104 = t636 * t300;
t780 = t1101 + t1104;
t1161 = t780 * t644;
t709 = t1161 / 0.2e1;
t941 = t644 * t645;
t969 = t640 * t638;
t512 = (t643 * t941 + t969) * t635;
t946 = t642 * t512;
t968 = t640 * t643;
t511 = (-t638 * t941 + t968) * t635;
t977 = t637 * t511;
t342 = t946 + t977;
t956 = t641 * t342;
t947 = t642 * t511;
t976 = t637 * t512;
t341 = t947 - t976;
t992 = t636 * t341;
t744 = -t992 / 0.2e1 - t956 / 0.2e1;
t1176 = t709 - t696 / 0.2e1 + t744;
t1180 = qJD(1) * t1176;
t830 = -t641 * t568 - t636 * t774;
t1100 = t710 * t830;
t698 = t710 * t643;
t699 = t710 * t638;
t659 = t637 * t699 - t642 * t698;
t652 = t641 * t659;
t687 = t637 * t698;
t660 = t642 * t699 + t687;
t655 = t636 * t660;
t649 = -t655 / 0.2e1 - t652 / 0.2e1;
t1118 = -t1100 / 0.2e1 + t649;
t126 = t1118 * qJD(3);
t1179 = qJD(2) * t1176 + t126;
t296 = t641 * t533 + t636 * t534;
t697 = t710 * t296;
t1102 = t641 * t300;
t1103 = t636 * t832;
t1123 = -t1102 + t1103;
t1153 = t1123 * t644;
t708 = t1153 / 0.2e1;
t957 = t641 * t341;
t991 = t636 * t342;
t743 = -t991 / 0.2e1 + t957 / 0.2e1;
t1171 = t708 + t697 / 0.2e1 + t743;
t1175 = qJD(1) * t1171;
t1167 = -t1161 / 0.2e1 + t696 / 0.2e1 + t744;
t1174 = qJD(2) * t1167;
t1045 = -t644 / 0.2e1;
t1173 = t1045 * t1178;
t1076 = t636 * t568 - t641 * t774;
t1125 = t710 * t1076;
t653 = t641 * t660;
t654 = t636 * t659;
t648 = -t654 / 0.2e1 + t653 / 0.2e1;
t1141 = t1125 / 0.2e1 + t648;
t124 = t1141 * qJD(3);
t1172 = qJD(2) * t1171 + t124;
t1160 = qJD(6) + t888;
t1128 = t1076 * t644;
t536 = t774 * t644;
t515 = t641 * t536;
t537 = t568 * t644;
t983 = t636 * t537;
t805 = -t515 / 0.2e1 + t983 / 0.2e1;
t1139 = t1128 / 0.2e1 + t805;
t1155 = t1139 * qJD(2);
t78 = t1160 * t1076 - t1155;
t1154 = -t1153 / 0.2e1 - t697 / 0.2e1 + t743;
t1142 = -t1125 / 0.2e1 + t648;
t129 = t1142 * qJD(3);
t1164 = qJD(2) * t1154 + t129;
t1084 = -t710 / 0.2e1;
t1083 = t710 / 0.2e1;
t271 = t1104 / 0.2e1;
t1143 = 0.2e1 * t271 + t1101;
t1117 = t1100 / 0.2e1 + t649;
t131 = t1117 * qJD(3);
t1159 = qJD(4) * t1143 + t131;
t1140 = -t1128 / 0.2e1 + t805;
t1156 = qJD(3) * t1140;
t905 = t1141 * qJD(1);
t1093 = t1160 * t830;
t1099 = t830 * t644;
t950 = t641 * t537;
t984 = t636 * t536;
t740 = -t984 / 0.2e1 - t950 / 0.2e1;
t1119 = t1099 / 0.2e1 + t740;
t1146 = qJD(2) * t1119;
t79 = -t1146 + t1093;
t889 = t644 * qJD(2);
t91 = qJD(3) * t1139 + t296 * t889;
t845 = -t1102 / 0.2e1;
t1151 = t1103 / 0.2e1 + t845;
t1137 = t1045 * t300 + t533 * t1083;
t738 = -t976 / 0.2e1 + t947 / 0.2e1;
t1116 = t738 + t1137;
t1149 = qJD(1) * t1116;
t1138 = t1045 * t832 + t534 * t1084;
t739 = -t977 / 0.2e1 - t946 / 0.2e1;
t1121 = t739 - t1138;
t1148 = qJD(1) * t1121;
t1114 = -t296 ^ 2 + t831 ^ 2;
t1147 = qJD(2) * t1114;
t1113 = -t1076 ^ 2 + t830 ^ 2;
t1145 = qJD(3) * t1113;
t904 = t1118 * qJD(1);
t1120 = -t1099 / 0.2e1 + t740;
t1144 = t1120 * qJD(3);
t684 = -t699 / 0.2e1;
t657 = -t687 / 0.2e1 + t642 * t684;
t689 = t710 * t774;
t256 = -t689 / 0.2e1 - t657;
t1136 = qJD(2) * t1116 + t256 * qJD(3);
t1085 = t698 / 0.2e1;
t658 = t1085 * t642 + t637 * t684;
t690 = t710 * t568;
t257 = t690 / 0.2e1 + t658;
t1135 = qJD(2) * t1121 + t257 * qJD(3);
t1115 = t738 - t1137;
t259 = t689 / 0.2e1 - t657;
t1134 = qJD(2) * t1115 + t259 * qJD(3) - t300 * t888;
t1122 = t739 + t1138;
t258 = -t690 / 0.2e1 + t658;
t1133 = qJD(2) * t1122 + t258 * qJD(3) + t832 * t888;
t92 = qJD(3) * t1119 + t831 * t889;
t1055 = t1076 / 0.2e1;
t1061 = -t296 / 0.2e1;
t1042 = pkin(4) * t643;
t627 = -pkin(3) - t1042;
t526 = pkin(5) * t568 + t627;
t1035 = t534 * pkin(5);
t1043 = pkin(4) * t638;
t865 = pkin(8) + t1043;
t812 = t865 * t639;
t714 = -t812 - t1035;
t1078 = t1055 * t714 + t1061 * t526;
t1130 = t296 * t888;
t260 = t714 * t296;
t1108 = t830 / 0.2e1;
t1127 = t1108 * t296;
t1126 = t296 * qJD(6);
t702 = t714 * t830;
t1109 = -t702 / 0.2e1;
t703 = t714 * t831;
t921 = qJD(3) * t1076;
t1098 = t830 * t921;
t926 = qJD(2) * t296;
t1096 = t831 * t926;
t1073 = 0.2e1 * t1151;
t1089 = qJD(4) * t1073;
t1047 = -t774 / 0.2e1;
t682 = t699 / 0.2e1;
t1080 = t831 * t888;
t1012 = t526 * t831;
t1077 = t1109 + t1012 / 0.2e1;
t1014 = t477 * t644;
t1006 = t627 * t533;
t1032 = t639 * pkin(4);
t1028 = t644 * pkin(9);
t1033 = t639 * pkin(3);
t591 = -t1028 + t1033;
t577 = t643 * t591;
t617 = pkin(8) * t972;
t942 = t643 * t644;
t446 = -pkin(10) * t942 + t1032 + t577 + t617;
t414 = t642 * t446;
t574 = t638 * t591;
t970 = t639 * t643;
t884 = pkin(8) * t970;
t971 = t638 * t644;
t467 = -pkin(10) * t971 + t574 - t884;
t978 = t637 * t467;
t806 = t414 / 0.2e1 - t978 / 0.2e1;
t707 = t1006 / 0.2e1 + t806;
t758 = t812 / 0.2e1;
t140 = -t1014 / 0.2e1 - t774 * t758 + t707;
t899 = t256 * qJD(1);
t918 = qJD(3) * t627;
t1074 = qJD(2) * t140 - t774 * t918 + t899;
t394 = t1043 * t568 + t627 * t774;
t1049 = -t568 / 0.2e1;
t880 = t1043 / 0.2e1;
t685 = -t1044 * t477 - t534 * t880;
t1030 = t642 * pkin(4);
t874 = t1030 / 0.2e1;
t83 = (t1042 * t1049 + t1047 * t865 + t874) * t639 + t685 + t707;
t1072 = t83 * qJD(2) - t394 * qJD(3) + t899;
t1040 = pkin(5) * t774;
t334 = t526 * t830;
t181 = t1040 * t1076 - t334;
t1046 = -t639 / 0.2e1;
t1054 = -t1076 / 0.2e1;
t724 = t1178 * t644;
t1031 = t639 * pkin(5);
t833 = t414 - t978;
t211 = pkin(11) * t537 + t1031 + t833;
t1001 = t636 * t211;
t413 = t637 * t446;
t457 = t642 * t467;
t929 = t457 + t413;
t219 = -pkin(11) * t536 + t929;
t964 = t641 * t219;
t847 = -t964 / 0.2e1;
t748 = -t1001 / 0.2e1 + t847;
t759 = -t812 / 0.2e1;
t855 = -t1012 / 0.2e1;
t7 = t724 / 0.2e1 + t855 + t830 * t759 + (t1046 * t636 - t1047 * t296 + t1054 * t533 - t1108 * t534) * pkin(5) + t748;
t1071 = t7 * qJD(2) + t181 * qJD(3) + t904;
t527 = t1040 + t1043;
t171 = -t1076 * t527 + t334;
t1052 = -t527 / 0.2e1;
t1041 = pkin(5) * t533;
t886 = pkin(4) * t970;
t760 = t886 - t1041;
t661 = -t1052 * t296 + t1055 * t760 - t1173;
t866 = pkin(5) + t1030;
t813 = t636 * t866;
t949 = t641 * t637;
t545 = pkin(4) * t949 + t813;
t688 = t1046 * t545 + t748;
t2 = t855 + t702 / 0.2e1 + t661 + t688;
t1070 = t2 * qJD(2) - t171 * qJD(3) + t904;
t333 = t526 * t1076;
t180 = t1040 * t830 + t333;
t999 = t636 * t219;
t851 = -t999 / 0.2e1;
t966 = t641 * t211;
t747 = t851 + t966 / 0.2e1;
t656 = t747 - t1078;
t878 = t1040 / 0.2e1;
t879 = -t1041 / 0.2e1;
t671 = -t1045 * t213 - t830 * t879 - t831 * t878;
t876 = t1031 / 0.2e1;
t8 = t641 * t876 + t656 - t671;
t1069 = t8 * qJD(2) + t180 * qJD(3) + t905;
t662 = -t1052 * t831 + t1108 * t760 - t1181;
t592 = t641 * t866;
t1034 = t637 * pkin(4);
t613 = t636 * t1034;
t544 = t613 - t592;
t854 = t544 * t1046;
t1 = t854 + t656 + t662;
t170 = -t527 * t830 - t333;
t1068 = t1 * qJD(2) - t170 * qJD(3) + t905;
t1067 = -qJD(6) * t831 - t1080;
t631 = t638 ^ 2;
t633 = t643 ^ 2;
t609 = t633 - t631;
t890 = t639 * qJD(2);
t864 = t643 * t890;
t1066 = qJD(3) * t609 - 0.2e1 * t638 * t864;
t898 = t257 * qJD(1);
t1064 = t828 * t888 - t898;
t1062 = t831 / 0.2e1;
t1039 = pkin(8) * t638;
t811 = -pkin(3) * t644 - pkin(9) * t639;
t584 = -pkin(2) + t811;
t563 = t643 * t584;
t817 = -pkin(10) * t970 + t563;
t440 = (-pkin(4) - t1039) * t644 + t817;
t412 = t642 * t440;
t1058 = -t412 / 0.2e1;
t1053 = -t440 / 0.2e1;
t883 = pkin(8) * t942;
t519 = t584 * t638 + t883;
t464 = -pkin(10) * t972 + t519;
t447 = t642 * t464;
t843 = -t447 / 0.2e1;
t1051 = -t549 / 0.2e1;
t1050 = t549 / 0.2e1;
t1048 = t568 / 0.2e1;
t842 = -t576 / 0.2e1;
t1038 = pkin(11) * t534;
t1036 = t533 * pkin(11);
t495 = t636 * pkin(5);
t1029 = t644 * pkin(5);
t1027 = pkin(4) * qJD(4);
t1026 = pkin(4) * qJD(5);
t1025 = pkin(5) * qJD(5);
t1024 = pkin(5) * qJD(6);
t1015 = t828 * t644;
t1011 = t544 * t644;
t1010 = t545 * t644;
t981 = t636 * t642;
t552 = (t949 + t981) * pkin(4);
t1008 = t552 * t644;
t553 = t1030 * t641 - t613;
t1007 = t553 * t644;
t1005 = t627 * t534;
t979 = t637 * t464;
t285 = -t412 + t979;
t753 = -t285 + t1036;
t208 = t753 - t1029;
t1002 = t636 * t208;
t286 = t637 * t440 + t447;
t218 = t286 - t1038;
t1000 = t636 * t218;
t885 = pkin(8) * t971;
t463 = t817 - t885;
t980 = t637 * t463;
t308 = -t447 - t980;
t224 = t308 + t1038;
t998 = t636 * t224;
t948 = t642 * t463;
t309 = t948 - t979;
t225 = t309 + t1036;
t997 = t636 * t225;
t967 = t641 * t208;
t965 = t641 * t218;
t963 = t641 * t224;
t962 = t641 * t225;
t632 = t639 ^ 2;
t943 = t643 * t632;
t187 = t533 * t774 + t534 * t568;
t940 = t888 * t187;
t848 = -t965 / 0.2e1;
t939 = -t1002 / 0.2e1 + t848;
t852 = t1000 / 0.2e1;
t938 = -t967 / 0.2e1 + t852;
t716 = t636 * t753;
t937 = -t716 / 0.2e1 + t848;
t715 = t641 * t753;
t936 = t852 - t715 / 0.2e1;
t305 = t1047 * t534 + t533 * t1048;
t934 = t888 * t305;
t578 = pkin(4) * t971 + t644 * pkin(8);
t634 = t644 ^ 2;
t610 = t634 - t632;
t925 = qJD(2) * t533;
t572 = t610 * t638;
t924 = qJD(2) * t572;
t573 = t634 * t643 - t943;
t923 = qJD(2) * t573;
t922 = qJD(2) * t635;
t920 = qJD(3) * t526;
t919 = qJD(3) * t774;
t917 = qJD(3) * t638;
t916 = qJD(3) * t639;
t915 = qJD(3) * t643;
t914 = qJD(3) * t644;
t913 = qJD(3) * t645;
t912 = qJD(4) * t638;
t911 = qJD(4) * t643;
t910 = qJD(4) * t644;
t909 = qJD(5) * t627;
t907 = qJD(6) * t526;
t368 = t515 - t983;
t371 = -t950 - t984;
t106 = t296 * t368 + t371 * t831;
t906 = t106 * qJD(2);
t873 = pkin(4) * t1044;
t815 = t873 + t463 / 0.2e1;
t156 = t642 * t815 + t1058;
t903 = t156 * qJD(2);
t192 = -t368 * t644 - t639 * t831;
t902 = t192 * qJD(2);
t193 = t296 * t639 + t371 * t644;
t901 = t193 * qJD(2);
t264 = t533 * t536 + t534 * t537;
t897 = t264 * qJD(2);
t518 = -t563 + t885;
t324 = t518 * t639 + (-t617 + t577) * t644;
t896 = t324 * qJD(2);
t372 = t534 * t639 - t536 * t644;
t894 = t372 * qJD(2);
t373 = t533 * t639 - t537 * t644;
t893 = t373 * qJD(2);
t737 = -t973 / 0.2e1 - t945 / 0.2e1;
t398 = (t1047 + t737) * t644;
t388 = t398 * qJD(2);
t736 = t944 / 0.2e1 - t974 / 0.2e1;
t399 = (t1049 + t736) * t644;
t389 = t399 * qJD(2);
t892 = t549 * qJD(3);
t891 = t610 * qJD(2);
t53 = -t1055 * t296 + t1061 * t1076 + t1062 * t830 + t1108 * t831;
t69 = -t1076 * t296 + t830 * t831;
t887 = t69 * qJD(6) + t53 * t888;
t882 = pkin(2) * t890;
t881 = pkin(2) * t889;
t875 = -t1030 / 0.2e1;
t872 = t1029 / 0.2e1;
t871 = t639 * t1003;
t122 = t1054 * t831 - t1127;
t123 = -t1055 * t831 - t1127;
t868 = t123 * qJD(6) + t122 * t888;
t863 = t638 * t915;
t862 = t639 * t915;
t861 = t638 * t910;
t860 = t643 * t910;
t859 = t645 * t922;
t858 = t638 * t911;
t857 = t639 * t914;
t856 = t639 * t889;
t853 = -t1003 / 0.2e1;
t850 = -t997 / 0.2e1;
t849 = t970 / 0.2e1;
t846 = -t962 / 0.2e1;
t844 = t1102 / 0.2e1;
t841 = -t941 / 0.2e1;
t840 = t224 / 0.2e1 + t218 / 0.2e1;
t839 = -t225 / 0.2e1 + t208 / 0.2e1;
t836 = -t413 / 0.2e1 - t457 / 0.2e1;
t835 = pkin(4) * t888;
t834 = pkin(5) * t1124;
t825 = t888 * t534;
t824 = t888 * t774;
t823 = -qJD(4) + t889;
t822 = -qJD(6) + t889;
t821 = t638 * t862;
t819 = t639 * t853;
t818 = t871 / 0.2e1;
t816 = t876 + t211 / 0.2e1;
t814 = t889 - qJD(4) / 0.2e1;
t809 = t840 * t636;
t808 = t840 * t641;
t647 = -t831 * t1050 + (-t654 + t653) * t1045 + t368 * t1083 + t780 * t1046;
t800 = t830 * t818;
t15 = -t800 - t647;
t445 = pkin(5) * t536 + t578;
t87 = -t967 + t1000;
t5 = (t966 - t999) * t644 + t87 * t639 + t445 * t831 + t714 * t368;
t804 = -t15 * qJD(1) - t5 * qJD(2);
t646 = -t296 * t1050 + (t652 + t655) * t1044 + t371 * t1083 + t1123 * t639 / 0.2e1;
t799 = t1076 * t818;
t16 = -t799 - t646;
t88 = t965 + t1002;
t6 = (t964 + t1001) * t644 - t445 * t296 + t371 * t1035 + (t371 * t865 - t88) * t639;
t803 = -t16 * qJD(1) + t6 * qJD(2);
t802 = -qJD(5) + t823;
t798 = t568 * t818;
t797 = t774 * t819;
t795 = t568 * t759 - t1005 / 0.2e1 + t836;
t89 = -t716 - t965;
t35 = -t1041 * t831 + t644 * t89 - t260;
t794 = qJD(2) * t35 + t1175;
t90 = t715 - t1000;
t36 = t1041 * t296 + t90 * t644 - t703;
t793 = -qJD(2) * t36 + t1180;
t107 = t963 - t997;
t37 = t107 * t644 + t760 * t831 - t260;
t792 = qJD(2) * t37 + t1175;
t108 = t962 + t998;
t38 = t108 * t644 - t296 * t760 - t703;
t791 = -qJD(2) * t38 + t1180;
t663 = -t1084 * t296 + t708;
t43 = t663 + t743;
t65 = -t644 * t88 - t260;
t790 = qJD(1) * t43 + qJD(2) * t65;
t664 = t1084 * t831 + t709;
t44 = t664 + t744;
t64 = -t87 * t644 - t703;
t789 = qJD(1) * t44 - qJD(2) * t64;
t651 = t660 * t1045 + t832 * t1046 - t534 * t1051 + t1083 * t536;
t72 = t798 - t651;
t80 = t285 * t639 - t578 * t534 - t536 * t812 + t644 * t833;
t788 = -t72 * qJD(1) - t80 * qJD(2);
t650 = t659 * t1044 + t300 * t1046 + t533 * t1051 + t1084 * t537;
t73 = -t797 - t650;
t81 = t929 * t644 - t578 * t533 + (-t537 * t865 - t286) * t639;
t787 = -t73 * qJD(1) + t81 * qJD(2);
t11 = qJD(3) * t53 + t1147;
t13 = qJD(2) * t53 + t1145;
t773 = qJD(3) * t69 + t1147;
t772 = qJD(2) * t69 + t1145;
t395 = t1043 * t774 - t568 * t627;
t686 = t1044 * t828 + t533 * t880;
t735 = t1005 / 0.2e1 + t836;
t82 = (-t1034 / 0.2e1 + t1042 * t1047 + t865 * t1048) * t639 + t686 + t735;
t770 = -t82 * qJD(2) + t395 * qJD(3);
t769 = t823 * t639;
t455 = t533 * t812;
t162 = t308 * t644 - t534 * t886 + t455;
t768 = qJD(2) * t162 + t1149;
t177 = -t286 * t644 + t455;
t767 = qJD(2) * t177 + t1149;
t176 = -t285 * t644 - t534 * t812;
t766 = -qJD(2) * t176 + t1148;
t163 = t309 * t644 + (-t1042 * t533 - t534 * t865) * t639;
t765 = -qJD(2) * t163 + t1148;
t756 = t638 * t853 - t462 / 0.2e1;
t166 = (-t1009 / 0.2e1 - t756) * t639;
t325 = t574 * t644 + (-t519 + t883) * t639;
t764 = -t166 * qJD(1) + t325 * qJD(2);
t681 = t710 * t1046;
t672 = t1004 / 0.2e1 + t681;
t234 = t643 * t672 + t644 * t756;
t442 = -pkin(8) * t943 - t519 * t644;
t763 = qJD(1) * t234 + qJD(2) * t442;
t235 = (t1044 * t549 - t672) * t638;
t441 = -t1039 * t632 - t518 * t644;
t762 = qJD(1) * t235 - qJD(2) * t441;
t154 = t843 + t447 / 0.2e1 + (t1053 + t815) * t637;
t466 = t842 + t576 / 0.2e1;
t761 = t154 * qJD(2) + t466 * qJD(3);
t326 = -t533 ^ 2 + t534 ^ 2;
t112 = qJD(2) * t326 + qJD(3) * t187;
t380 = t568 ^ 2 - t774 ^ 2;
t152 = qJD(2) * t187 + qJD(3) * t380;
t757 = t1028 / 0.2e1 - t1033 / 0.2e1;
t755 = t636 * t872 + t939;
t754 = t641 * t872 + t938;
t752 = -qJD(5) / 0.2e1 + t814;
t722 = t757 * t638;
t460 = t574 / 0.2e1 - t722;
t751 = pkin(3) * t915 - qJD(2) * t460;
t721 = t757 * t643;
t461 = -t577 / 0.2e1 + t721;
t750 = pkin(3) * t917 - qJD(2) * t461;
t746 = -t998 / 0.2e1 + t846;
t745 = t850 + t963 / 0.2e1;
t734 = t643 * t769;
t66 = qJD(3) * t122 - t1096;
t70 = qJD(2) * t122 - t1098;
t733 = -qJD(3) * t123 + t1096;
t732 = -qJD(2) * t123 + t1098;
t141 = t1015 / 0.2e1 + t568 * t758 + t735;
t730 = qJD(2) * t141 + t568 * t918;
t173 = -qJD(3) * t305 - t534 * t925;
t190 = qJD(2) * t305 - t568 * t919;
t555 = (t631 / 0.2e1 - t633 / 0.2e1) * t639;
t729 = -qJD(2) * t555 + t863;
t723 = -t774 * t759 - t1006 / 0.2e1 + t806;
t713 = qJD(2) * t638 * t943 + qJD(3) * t555;
t571 = t609 * t632;
t712 = qJD(2) * t571 + 0.2e1 * t821;
t704 = t715 / 0.2e1;
t29 = t704 - t1000 / 0.2e1 + t754;
t496 = t592 / 0.2e1 + (t875 + pkin(5) / 0.2e1) * t641;
t706 = t29 * qJD(2) - t496 * qJD(4);
t705 = t716 / 0.2e1;
t669 = t1078 + t1181;
t19 = -t669 + t747;
t701 = qJD(2) * t19 + t1076 * t920 + t905;
t670 = t526 * t1062 + t1109 + t1173;
t20 = -t670 + t748;
t700 = qJD(2) * t20 - t830 * t920 + t904;
t23 = -t1010 / 0.2e1 + t808 + t839 * t636;
t58 = t844 - t1103 / 0.2e1 + t1151;
t679 = qJD(1) * t58 + qJD(2) * t23 + qJD(4) * t545;
t24 = t1011 / 0.2e1 + t839 * t641 - t809;
t678 = qJD(2) * t24 - qJD(4) * t544;
t31 = t850 - t1008 / 0.2e1 + t705 + t808;
t677 = qJD(2) * t31 + qJD(4) * t552;
t32 = t846 - t1007 / 0.2e1 + t704 - t809;
t61 = t271 - t1104 / 0.2e1;
t676 = -qJD(1) * t61 + qJD(2) * t32 + qJD(4) * t553;
t159 = t845 + t844;
t27 = t705 + t965 / 0.2e1 + t755;
t675 = t159 * qJD(1) + t27 * qJD(2) - t495 * qJD(4);
t622 = t916 / 0.2e1;
t621 = -t890 / 0.2e1;
t620 = t890 / 0.2e1;
t562 = t814 * t639;
t548 = t555 * qJD(4);
t547 = t553 * qJD(5);
t546 = t552 * qJD(5);
t532 = t545 * qJD(6);
t531 = t544 * qJD(6);
t530 = t752 * t639;
t479 = (-qJD(6) / 0.2e1 + t752) * t639;
t459 = t613 - t592 / 0.2e1 + (-pkin(5) / 0.2e1 + t875) * t641;
t458 = -t495 / 0.2e1 - t813 / 0.2e1 + (-t949 - t981 / 0.2e1) * pkin(4);
t409 = t617 + t577 / 0.2e1 + t721;
t408 = t884 - t574 / 0.2e1 - t722;
t401 = -t1045 * t774 + t644 * t737;
t400 = t1044 * t568 + t644 * t736;
t387 = 0.2e1 * t842 + t975;
t379 = 0.2e1 * t1085;
t377 = 0.2e1 * t682;
t313 = qJD(3) * t399 - t534 * t889;
t312 = qJD(3) * t398 + t533 * t889;
t284 = -t824 - t388;
t283 = -t568 * t888 - t389;
t237 = t462 * t1044 + t639 * t1085 + (t638 * t841 + t968 / 0.2e1) * t635;
t236 = t749 * t1045 + t638 * t681 + (t643 * t841 - t969 / 0.2e1) * t635;
t175 = t400 * qJD(3) + t534 * t802;
t174 = t401 * qJD(3) - t533 * t802;
t169 = -t1044 * t698 + t1046 * t462 + t1085 * t644 + t549 * t849 + t638 * t818;
t168 = t1046 * t749 + t1050 * t972 + t643 * t819 + (t682 + t684) * t644;
t157 = t642 * t873 + t979 + t1058 - t948 / 0.2e1;
t155 = 0.2e1 * t843 - t980 / 0.2e1 + (t873 + t1053) * t637;
t143 = t1014 / 0.2e1 + t723;
t142 = -t1015 / 0.2e1 + t795;
t85 = -t686 + t795 - (-t643 * t774 + t637) * t1032 / 0.2e1;
t84 = pkin(4) * t568 * t849 + t639 * t874 - t685 + t723;
t77 = 0.2e1 * t845 + t1103;
t75 = -t797 + t650;
t74 = t798 + t651;
t55 = t1144 + (qJD(6) - t802) * t831;
t54 = -t296 * t802 + t1126 + t1156;
t52 = -t663 + t743;
t49 = -t664 + t744;
t34 = t1007 / 0.2e1 + t746 + t936;
t33 = t1008 / 0.2e1 + t745 + t937;
t30 = t754 + t936;
t28 = t755 + t937;
t26 = t1010 / 0.2e1 + t745 + t939;
t25 = -t1011 / 0.2e1 + t746 + t938;
t22 = t669 + t747;
t21 = t670 + t748;
t18 = -t799 + t646;
t17 = -t800 + t647;
t10 = -t724 / 0.2e1 - t296 * t878 - t1076 * t879 + t847 - t816 * t636 + t1077;
t9 = t641 * t816 + t1078 + t671 + t851;
t4 = -t661 + t688 + t1077;
t3 = t854 - t662 + t747 + t1078;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t640 * t922, -t859, 0, 0, 0, 0, 0 (-t639 * t913 - t640 * t889) * t635 (t640 * t890 - t644 * t913) * t635, 0, 0, 0, 0, 0 (-t511 * t644 + t632 * t869) * qJD(2) + t168 * qJD(3) + t237 * qJD(4) (t512 * t644 + t632 * t870) * qJD(2) + t169 * qJD(3) + t236 * qJD(4), 0, 0, 0, 0, 0 (-t341 * t644 + t534 * t871) * qJD(2) + t74 * qJD(3) + t888 * t1115 (t342 * t644 - t533 * t871) * qJD(2) + t75 * qJD(3) + t888 * t1122, 0, 0, 0, 0, 0 (-(t957 - t991) * t644 - t831 * t871) * qJD(2) + t17 * qJD(3) + t52 * qJD(6) + t888 * t1154 ((t956 + t992) * t644 - t296 * t871) * qJD(2) + t18 * qJD(3) + t49 * qJD(6) + t888 * t1167; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t639 * t859 - t892, qJD(3) * t710 - t644 * t859, 0, 0, 0, 0, 0, qJD(2) * t168 + qJD(4) * t377 - t643 * t892, qJD(2) * t169 + qJD(4) * t379 + t638 * t892, 0, 0, 0, 0, 0, t74 * qJD(2) + t259 * t888 + t568 * t892, t75 * qJD(2) + t258 * t888 + t774 * t892, 0, 0, 0, 0, 0, t17 * qJD(2) + t1142 * t1160 - t830 * t892, t18 * qJD(2) - t1076 * t892 + t1117 * t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t237 + qJD(3) * t377 - qJD(4) * t462, t236 * qJD(2) + t379 * qJD(3) + qJD(4) * t749, 0, 0, 0, 0, 0, t1134, t1133, 0, 0, 0, 0, 0, qJD(4) * t1123 + t1073 * t1124 + t1164, qJD(4) * t780 + t1124 * t1143 + t1174 + t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1134, t1133, 0, 0, 0, 0, 0, qJD(5) * t1123 + t77 * qJD(6) + t1089 + t1164, qJD(5) * t780 + qJD(6) * t1143 + t1159 + t1174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52 * qJD(2) + t77 * qJD(5) + qJD(6) * t1123 + t1089 + t129, t49 * qJD(2) + qJD(5) * t1143 + qJD(6) * t780 + t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t234, -qJD(3) * t166 - qJD(4) * t235, 0, 0, 0, 0, 0, -qJD(3) * t72 - t1116 * t888, -qJD(3) * t73 - t1121 * t888, 0, 0, 0, 0, 0, -qJD(3) * t15 - qJD(6) * t43 - t1171 * t888, -qJD(3) * t16 - qJD(6) * t44 - t1176 * t888; 0, 0, 0, 0, t857, t610 * qJD(3), 0, 0, 0, -pkin(2) * t916, -pkin(2) * t914, -t632 * t858 + t633 * t857, -qJD(4) * t571 - 0.2e1 * t644 * t821, -qJD(3) * t573 + t639 * t861, qJD(3) * t572 + t639 * t860, -t857, -qJD(3) * t324 - qJD(4) * t442, qJD(3) * t325 + qJD(4) * t441 (qJD(3) * t537 + t825) * t533, qJD(3) * t264 + t326 * t888, -t373 * qJD(3) + t644 * t825, -t533 * t644 * t888 - t372 * qJD(3), -t857, -qJD(3) * t80 - qJD(4) * t162 - qJD(5) * t177, qJD(3) * t81 + qJD(4) * t163 + qJD(5) * t176 -(qJD(3) * t371 - t1067) * t296, qJD(3) * t106 + t1114 * t1160, -t193 * qJD(3) + t1067 * t644, -t192 * qJD(3) + (-t1126 - t1130) * t644, -t857, -qJD(3) * t5 - qJD(4) * t37 - qJD(5) * t35 - qJD(6) * t65, qJD(3) * t6 + qJD(4) * t38 + qJD(5) * t36 + qJD(6) * t64; 0, 0, 0, 0, t856, t891, t914, -t916, 0, -pkin(8) * t914 - t882, pkin(8) * t916 - t881, -t548 + (t633 * t890 + t863) * t644, t1066 * t644 - 0.2e1 * t639 * t858, t638 * t916 - t923, t862 + t924, -t562, -t896 + (t638 * t811 - t883) * qJD(3) + t409 * qJD(4) (t643 * t811 + t885) * qJD(3) + t408 * qJD(4) + t764 -(t919 - t925) * t537 + t934, t897 + (-t536 * t774 + t537 * t568) * qJD(3) + t940, t400 * t888 + t774 * t916 - t893, t401 * t888 - t568 * t916 - t894, -t530 (t536 * t627 + t568 * t578 - t639 * t828) * qJD(3) + t84 * qJD(4) + t143 * qJD(5) + t788 (-t477 * t639 - t537 * t627 + t578 * t774) * qJD(3) + t85 * qJD(4) + t142 * qJD(5) + t787 (-t921 - t926) * t371 + t868, t906 + (t1076 * t368 + t371 * t830) * qJD(3) + t887, -t1076 * t916 + t1120 * t1160 - t901, t1140 * t1160 + t830 * t916 - t902, -t479 (-t1178 * t639 + t368 * t526 - t445 * t830) * qJD(3) + t3 * qJD(4) + t9 * qJD(5) + t22 * qJD(6) + t804 (-t1076 * t445 - t213 * t639 + t371 * t526) * qJD(3) + t4 * qJD(4) + t10 * qJD(5) + t21 * qJD(6) + t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t713, -t712, t638 * t769, t734, t622, qJD(3) * t409 - qJD(4) * t519 - t763, qJD(3) * t408 + qJD(4) * t518 - t762, -t173, t112, t175, t174, t622, qJD(3) * t84 + qJD(4) * t308 + qJD(5) * t155 - t768, qJD(3) * t85 - qJD(4) * t309 + qJD(5) * t157 - t765, t66, t11, t55, t54, t622, qJD(3) * t3 + qJD(4) * t107 + qJD(5) * t33 + qJD(6) * t26 - t792, qJD(3) * t4 - qJD(4) * t108 + qJD(5) * t34 + qJD(6) * t25 - t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, t112, t175, t174, t622, qJD(3) * t143 + qJD(4) * t155 - qJD(5) * t286 - t767, qJD(3) * t142 + qJD(4) * t157 + qJD(5) * t285 - t766, t66, t11, t55, t54, t622, qJD(3) * t9 + qJD(4) * t33 + qJD(5) * t89 + qJD(6) * t28 - t794, qJD(3) * t10 + qJD(4) * t34 - qJD(5) * t90 + qJD(6) * t30 - t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t733, t773, -t822 * t831 + t1080 + t1144, -t296 * t822 + t1130 + t1156, t622, qJD(3) * t22 + qJD(4) * t26 + qJD(5) * t28 - qJD(6) * t88 - t790, qJD(3) * t21 + qJD(4) * t25 + qJD(5) * t30 + qJD(6) * t87 - t789; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t166, 0, 0, 0, 0, 0, t72 * qJD(2) - t256 * t888, t73 * qJD(2) - t257 * t888, 0, 0, 0, 0, 0, t15 * qJD(2) - t1141 * t1160, t16 * qJD(2) - t1118 * t1160; 0, 0, 0, 0, -t856, -t891, 0, 0, 0, t882, t881, -t633 * t856 - t548, 0.2e1 * t638 * t734, -t860 + t923, t861 - t924, t562, qJD(4) * t461 + t896, qJD(4) * t460 - t764, -t537 * t925 + t934, -t897 + t940, -t399 * t888 + t893, -t398 * t888 + t894, t530, -qJD(4) * t83 - qJD(5) * t140 - t788, -qJD(4) * t82 - qJD(5) * t141 - t787, t371 * t926 + t868, t887 - t906, -t1119 * t1160 + t901, -t1139 * t1160 + t902, t479, -qJD(4) * t1 - qJD(5) * t8 - qJD(6) * t19 - t804, -qJD(4) * t2 - qJD(5) * t7 - qJD(6) * t20 - t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, t609 * qJD(4), 0, 0, 0, -pkin(3) * t912, -pkin(3) * t911, -t568 * t824, t888 * t380, 0, 0, 0, qJD(4) * t394 + t774 * t909, qJD(4) * t395 - t568 * t909, -t1093 * t1076, t1160 * t1113, 0, 0, 0, qJD(4) * t170 - qJD(5) * t180 - t1076 * t907, qJD(4) * t171 - qJD(5) * t181 + t830 * t907; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t729, t1066, -t823 * t643, t823 * t638, t621, -pkin(9) * t911 - t750, pkin(9) * t912 - t751, t190, t152, t283, t284, t621, -qJD(4) * t477 + t387 * qJD(5) - t1072, t1064 + t770, t70, t13, t79, t78, t621, -t1068 - t1183, -t1070 + t1182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t152, t283, t284, t621, qJD(4) * t387 - qJD(5) * t477 - t1074, t1064 - t730, t70, t13, t79, t78, t621, -t1069 - t1183, -t1071 + t1182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t732, t772, t79, t78, t621, -t1183 - t701, t1182 - t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t234, qJD(2) * t235, 0, 0, 0, 0, 0, t1136, t1135, 0, 0, 0, 0, 0, -qJD(6) * t58 + t1172, qJD(5) * t61 + t1179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t713, t712 (-t638 * t890 + t915) * t644 (-t864 - t917) * t644, t622, -qJD(3) * t461 + t763, -qJD(3) * t460 + t762, t173, -t112, t313, t312, t622, qJD(3) * t83 + qJD(5) * t154 + t768, qJD(3) * t82 + qJD(5) * t156 + t765, -t66, -t11, t92, t91, t622, qJD(3) * t1 - qJD(5) * t31 - qJD(6) * t23 + t792, qJD(3) * t2 - qJD(5) * t32 - qJD(6) * t24 + t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t729, -t1066, t643 * t889, -t638 * t889, t620, t750, t751, -t190, -t152, t389, t388, t620, qJD(5) * t466 + t1072, t898 - t770, -t70, -t13, t1146, t1155, t620, t1068, t1070; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t637 * t1026, -t642 * t1026, 0, 0, 0, 0, 0, -t546 - t532, -t547 + t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t637 * t835 + t761, -t642 * t835 + t903, 0, 0, 0, 0, 0, qJD(6) * t458 - t546 - t677, qJD(6) * t459 - t547 - t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t458 - t532 - t679, qJD(5) * t459 + t531 - t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1136, t1135, 0, 0, 0, 0, 0, qJD(6) * t159 + t1172, -qJD(4) * t61 + t1179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, -t112, t313, t312, t622, qJD(3) * t140 - qJD(4) * t154 + t767, qJD(3) * t141 - qJD(4) * t156 + t766, -t66, -t11, t92, t91, t622, qJD(3) * t8 + qJD(4) * t31 + qJD(6) * t27 + t794, qJD(3) * t7 + qJD(4) * t32 + qJD(6) * t29 + t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t190, -t152, t389, t388, t620, -qJD(4) * t466 + t1074, t898 + t730, -t70, -t13, t1146, t1155, t620, t1069, t1071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1027 * t637 - t761, t1027 * t642 - t903, 0, 0, 0, 0, 0, -qJD(6) * t495 + t677, -qJD(6) * t496 + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t636 * t1024, -t641 * t1024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t636 * t834 + t675, -t641 * t834 + t706; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t43 + qJD(4) * t58 - qJD(5) * t159 + t124, qJD(2) * t44 + t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t733, -t773, t92, t91, t622, qJD(3) * t19 + qJD(4) * t23 - qJD(5) * t27 + t790, qJD(3) * t20 + qJD(4) * t24 - qJD(5) * t29 + t789; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t732, -t772, t1146, t1155, t620, t701, t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t495 + t679, qJD(5) * t496 + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025 * t636 - t675, t1025 * t641 - t706; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
