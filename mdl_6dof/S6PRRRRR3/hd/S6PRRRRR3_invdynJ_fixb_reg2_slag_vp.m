% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRR3_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR3_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR3_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR3_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR3_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR3_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:51:41
% EndTime: 2019-03-09 00:52:12
% DurationCPUTime: 18.88s
% Computational Cost: add. (18877->804), mult. (43028->1114), div. (0->0), fcn. (33246->18), ass. (0->325)
t325 = sin(qJ(3));
t329 = cos(qJ(3));
t369 = pkin(3) * t325 - pkin(9) * t329;
t262 = t369 * qJD(3);
t370 = pkin(3) * t329 + pkin(9) * t325;
t268 = -pkin(2) - t370;
t324 = sin(qJ(4));
t328 = cos(qJ(4));
t407 = t328 * qJD(3);
t411 = qJD(4) * t328;
t413 = qJD(4) * t324;
t320 = sin(pkin(6));
t423 = qJD(1) * t320;
t330 = cos(qJ(2));
t433 = t329 * t330;
t326 = sin(qJ(2));
t437 = t324 * t326;
t431 = t324 * t262 + t268 * t411 + (-t325 * t407 - t329 * t413) * pkin(8) - (t328 * t433 + t437) * t423;
t415 = qJD(3) * t325;
t483 = pkin(8) * t324;
t527 = t328 * t262 + t415 * t483 - (-t324 * t433 + t326 * t328) * t423;
t434 = t328 * t329;
t296 = pkin(8) * t434;
t360 = pkin(4) * t325 - pkin(10) * t434;
t526 = t360 * qJD(3) + (-t296 + (pkin(10) * t325 - t268) * t324) * qJD(4) + t527;
t414 = qJD(3) * t329;
t386 = t324 * t414;
t349 = t325 * t411 + t386;
t525 = -pkin(10) * t349 + t431;
t264 = qJD(2) * pkin(8) + t326 * t423;
t245 = t325 * t264;
t321 = cos(pkin(6));
t422 = qJD(1) * t321;
t203 = t329 * t422 - t245;
t259 = t369 * qJD(2);
t142 = -t203 * t324 + t328 * t259;
t331 = -pkin(10) - pkin(9);
t396 = qJD(4) * t331;
t524 = -qJD(2) * t360 + t328 * t396 - t142;
t143 = t328 * t203 + t324 * t259;
t417 = qJD(2) * t329;
t390 = t324 * t417;
t523 = -pkin(10) * t390 - t324 * t396 + t143;
t419 = qJD(2) * t325;
t250 = t324 * t419 - t407;
t416 = qJD(3) * t324;
t252 = t328 * t419 + t416;
t323 = sin(qJ(5));
t327 = cos(qJ(5));
t168 = t250 * t327 + t252 * t323;
t322 = sin(qJ(6));
t364 = -t250 * t323 + t327 * t252;
t487 = cos(qJ(6));
t505 = -t322 * t168 + t364 * t487;
t86 = t487 * t168 + t322 * t364;
t476 = t86 * t505;
t439 = t323 * t324;
t253 = -t327 * t328 + t439;
t402 = qJD(4) + qJD(5);
t409 = qJD(5) * t327;
t428 = -t253 * t417 - t327 * t411 - t328 * t409 + t402 * t439;
t254 = t323 * t328 + t324 * t327;
t181 = t402 * t254;
t427 = -t254 * t417 + t181;
t511 = t505 ^ 2 - t86 ^ 2;
t294 = -qJD(4) + t417;
t282 = -qJD(5) + t294;
t421 = qJD(1) * t325;
t204 = t264 * t329 + t321 * t421;
t194 = qJD(3) * pkin(9) + t204;
t420 = qJD(1) * t330;
t394 = t320 * t420;
t206 = qJD(2) * t268 - t394;
t125 = -t194 * t324 + t328 * t206;
t93 = -pkin(10) * t252 + t125;
t76 = -pkin(4) * t294 + t93;
t126 = t194 * t328 + t206 * t324;
t94 = -pkin(10) * t250 + t126;
t81 = t323 * t94;
t48 = t327 * t76 - t81;
t502 = pkin(11) * t364;
t38 = t48 - t502;
t36 = -pkin(5) * t282 + t38;
t83 = t327 * t94;
t49 = t323 * t76 + t83;
t519 = pkin(11) * t168;
t39 = t49 - t519;
t471 = t322 * t39;
t12 = t36 * t487 - t471;
t400 = t487 * t39;
t13 = t322 * t36 + t400;
t522 = -t12 * t86 + t13 * t505;
t405 = qJD(2) * qJD(3);
t380 = t329 * t405;
t403 = t325 * qJDD(2);
t412 = qJD(4) * t325;
t512 = qJD(2) * t412 - qJDD(3);
t152 = -qJD(4) * t407 + (-t380 - t403) * t328 + t512 * t324;
t153 = t324 * (qJD(3) * (qJD(4) + t417) + t403) + t512 * t328;
t410 = qJD(5) * t323;
t359 = -t323 * t152 + t153 * t327 - t250 * t410 + t252 * t409;
t384 = qJD(6) * t487;
t408 = qJD(6) * t322;
t61 = t327 * t152 + t323 * t153 + t250 * t409 + t252 * t410;
t18 = t168 * t384 + t322 * t359 + t364 * t408 + t487 * t61;
t272 = -qJD(6) + t282;
t509 = -t272 * t86 - t18;
t308 = t329 * qJDD(2);
t247 = t325 * t405 + qJDD(4) - t308;
t243 = qJDD(5) + t247;
t404 = qJDD(1) * t321;
t406 = qJD(1) * qJD(2);
t382 = t330 * t406;
t460 = qJDD(2) * pkin(8);
t514 = -t460 - (qJDD(1) * t326 + t382) * t320 - qJD(3) * t422;
t398 = -t325 * t404 + t329 * t514;
t118 = -t264 * t415 - t398;
t106 = qJDD(3) * pkin(9) + t118;
t383 = t326 * t406;
t441 = t320 * t330;
t366 = -qJDD(1) * t441 + t320 * t383;
t139 = qJD(2) * t262 + qJDD(2) * t268 + t366;
t47 = -qJD(4) * t126 - t324 * t106 + t328 * t139;
t28 = pkin(4) * t247 + pkin(10) * t152 + t47;
t352 = -t328 * t106 - t324 * t139 + t194 * t413 - t206 * t411;
t33 = -pkin(10) * t153 - t352;
t9 = -qJD(5) * t49 + t327 * t28 - t323 * t33;
t6 = pkin(5) * t243 + pkin(11) * t61 + t9;
t8 = t323 * t28 + t327 * t33 + t76 * t409 - t94 * t410;
t7 = -pkin(11) * t359 + t8;
t1 = t322 * t6 + t36 * t384 - t39 * t408 + t487 * t7;
t462 = cos(pkin(12));
t375 = t462 * t326;
t319 = sin(pkin(12));
t444 = t319 * t330;
t228 = t321 * t375 + t444;
t376 = t320 * t462;
t183 = t228 * t329 - t325 * t376;
t374 = t462 * t330;
t445 = t319 * t326;
t230 = -t321 * t445 + t374;
t185 = t319 * t320 * t325 + t230 * t329;
t227 = -t321 * t374 + t445;
t229 = t321 * t444 + t375;
t442 = t320 * t329;
t234 = t321 * t325 + t326 * t442;
t318 = qJ(4) + qJ(5);
t312 = qJ(6) + t318;
t301 = sin(t312);
t302 = cos(t312);
t193 = -qJD(3) * pkin(3) - t203;
t144 = pkin(4) * t250 + t193;
t78 = pkin(5) * t168 + t144;
t508 = t78 * t86 - g(1) * (-t185 * t302 - t229 * t301) - g(2) * (-t183 * t302 - t227 * t301) - g(3) * (-t234 * t302 + t301 * t441) - t1;
t276 = t331 * t324;
t277 = t331 * t328;
t470 = t276 * t409 + t277 * t410 + t323 * t524 - t327 * t523;
t197 = t323 * t276 - t327 * t277;
t469 = -qJD(5) * t197 + t323 * t523 + t327 * t524;
t249 = t328 * t268;
t435 = t325 * t328;
t176 = -pkin(10) * t435 + t249 + (-pkin(4) - t483) * t329;
t212 = t324 * t268 + t296;
t438 = t324 * t325;
t190 = -pkin(10) * t438 + t212;
t464 = t176 * t409 - t190 * t410 + t323 * t526 + t525 * t327;
t97 = t323 * t176 + t327 * t190;
t463 = -qJD(5) * t97 - t525 * t323 + t327 * t526;
t19 = qJD(6) * t505 - t322 * t61 + t487 * t359;
t493 = -t272 * t505 - t19;
t2 = -qJD(6) * t13 - t322 * t7 + t487 * t6;
t495 = -t505 * t78 - g(1) * (-t185 * t301 + t229 * t302) - g(2) * (-t183 * t301 + t227 * t302) - g(3) * (-t234 * t301 - t302 * t441) + t2;
t518 = -pkin(5) * t419 + pkin(11) * t428 + t469;
t517 = pkin(11) * t427 - t470;
t389 = t329 * t407;
t108 = t181 * t325 + t323 * t386 - t327 * t389;
t516 = pkin(5) * t415 + pkin(11) * t108 + t463;
t497 = -t324 * t412 + t389;
t109 = -t410 * t438 + (t402 * t435 + t386) * t327 + t497 * t323;
t515 = pkin(11) * t109 - t464;
t455 = t168 * t364;
t513 = t125 * t294 - t352;
t510 = -t168 ^ 2 + t364 ^ 2;
t507 = -t168 * t282 - t61;
t310 = sin(t318);
t311 = cos(t318);
t506 = t144 * t168 - g(1) * (-t185 * t311 - t229 * t310) - g(2) * (-t183 * t311 - t227 * t310) - g(3) * (-t234 * t311 + t310 * t441) - t8;
t501 = t126 * t294 - t47;
t371 = -t204 + (-t390 + t413) * pkin(4);
t188 = -t234 * t324 - t328 * t441;
t498 = -g(1) * (-t185 * t324 + t229 * t328) - g(2) * (-t183 * t324 + t227 * t328) - g(3) * t188;
t496 = -g(3) * (-t234 * t310 - t311 * t441) - g(2) * (-t183 * t310 + t227 * t311) - g(1) * (-t185 * t310 + t229 * t311);
t494 = -t144 * t364 + t496 + t9;
t492 = -t282 * t364 - t359;
t461 = qJDD(2) * pkin(2);
t209 = t366 - t461;
t332 = qJD(3) ^ 2;
t368 = g(1) * t229 + g(2) * t227;
t491 = -pkin(8) * t332 + t320 * (-g(3) * t330 + t383) - t209 + t368 + t461;
t217 = t253 * t325;
t96 = t327 * t176 - t190 * t323;
t69 = -pkin(5) * t329 + pkin(11) * t217 + t96;
t216 = t254 * t325;
t72 = -pkin(11) * t216 + t97;
t40 = -t322 * t72 + t487 * t69;
t489 = qJD(6) * t40 + t322 * t516 - t487 * t515;
t41 = t322 * t69 + t487 * t72;
t488 = -qJD(6) * t41 + t322 * t515 + t487 * t516;
t485 = pkin(4) * t324;
t484 = pkin(4) * t328;
t477 = g(3) * t326;
t266 = pkin(5) * t310 + t485;
t475 = pkin(8) + t266;
t196 = t327 * t276 + t277 * t323;
t148 = -pkin(11) * t254 + t196;
t149 = -pkin(11) * t253 + t197;
t70 = t148 * t487 - t322 * t149;
t474 = qJD(6) * t70 + t322 * t518 - t487 * t517;
t71 = t322 * t148 + t149 * t487;
t473 = -qJD(6) * t71 + t322 * t517 + t487 * t518;
t51 = t327 * t93 - t81;
t472 = qJD(2) * pkin(2);
t175 = -t322 * t253 + t254 * t487;
t468 = -qJD(6) * t175 + t322 * t428 - t427 * t487;
t467 = t253 * t384 + t254 * t408 + t322 * t427 + t428 * t487;
t303 = pkin(4) * t327 + pkin(5);
t50 = -t323 * t93 - t83;
t42 = t50 + t519;
t43 = t51 - t502;
t440 = t322 * t323;
t466 = -t322 * t42 - t43 * t487 + t303 * t384 + (-t323 * t408 + (t327 * t487 - t440) * qJD(5)) * pkin(4);
t395 = t487 * t323;
t465 = t322 * t43 - t42 * t487 - t303 * t408 + (-t323 * t384 + (-t322 * t327 - t395) * qJD(5)) * pkin(4);
t457 = t152 * t324;
t456 = t153 * t328;
t454 = t250 * t294;
t453 = t250 * t324;
t452 = t252 * t250;
t451 = t252 * t294;
t450 = t252 * t328;
t449 = t301 * t329;
t448 = t302 * t329;
t447 = t310 * t329;
t446 = t311 * t329;
t443 = t320 * t326;
t436 = t324 * t329;
t432 = qJDD(1) - g(3);
t430 = -qJD(4) * t212 + t527;
t429 = pkin(5) * t427 + t371;
t263 = pkin(4) * t438 + t325 * pkin(8);
t316 = t325 ^ 2;
t317 = t329 ^ 2;
t425 = t316 - t317;
t424 = t316 + t317;
t418 = qJD(2) * t326;
t333 = qJD(2) ^ 2;
t399 = t325 * t333 * t329;
t205 = pkin(4) * t349 + pkin(8) * t414;
t304 = pkin(3) + t484;
t397 = pkin(8) + t485;
t393 = t325 * t420;
t392 = t320 * t418;
t391 = qJD(2) * t441;
t385 = g(3) * (pkin(2) * t441 + pkin(8) * t443);
t379 = t330 * t405;
t267 = pkin(5) * t311 + t484;
t119 = -t264 * t414 + t325 * t514 + t329 * t404;
t372 = t325 * t380;
t367 = g(1) * t230 + g(2) * t228;
t365 = -t125 * t328 - t126 * t324;
t356 = -t234 * t328 + t324 * t441;
t99 = t188 * t327 + t323 * t356;
t100 = t188 * t323 - t327 * t356;
t258 = pkin(3) + t267;
t315 = -pkin(11) + t331;
t363 = t258 * t329 - t315 * t325;
t362 = t304 * t329 - t325 * t331;
t361 = qJDD(2) * t330 - t326 * t333;
t53 = -t322 * t100 + t487 * t99;
t54 = t100 * t487 + t322 * t99;
t233 = -t321 * t329 + t325 * t443;
t141 = -t322 * t216 - t217 * t487;
t354 = t247 * t324 - t294 * t411;
t353 = t247 * t328 + t294 * t413;
t107 = -qJDD(3) * pkin(3) - t119;
t182 = -t228 * t325 - t329 * t376;
t184 = -t230 * t325 + t319 * t442;
t351 = g(1) * t184 + g(2) * t182 - g(3) * t233;
t350 = g(1) * t185 + g(2) * t183 + g(3) * t234;
t348 = g(3) * t441 - t368;
t347 = -g(3) * t443 - t367;
t346 = -t107 - t351;
t345 = -pkin(9) * t247 - t193 * t294;
t66 = t153 * pkin(4) + t107;
t344 = t348 * t325;
t341 = pkin(9) * qJD(4) * t294 + t346;
t265 = -t394 - t472;
t339 = -pkin(8) * qJDD(3) + (t265 + t394 - t472) * qJD(3);
t337 = t118 * t329 - t119 * t325 + (-t203 * t329 - t204 * t325) * qJD(3) - t367;
t226 = qJDD(6) + t243;
t225 = pkin(4) * t395 + t322 * t303;
t224 = -pkin(4) * t440 + t303 * t487;
t219 = t229 * pkin(2);
t218 = t227 * pkin(2);
t215 = pkin(5) * t253 - t304;
t211 = -pkin(8) * t436 + t249;
t187 = qJD(3) * t234 + t325 * t391;
t186 = -qJD(3) * t233 + t329 * t391;
t178 = pkin(5) * t216 + t263;
t174 = t253 * t487 + t254 * t322;
t140 = t216 * t487 - t217 * t322;
t134 = pkin(4) * t252 + pkin(5) * t364;
t80 = qJD(4) * t188 + t186 * t328 + t324 * t392;
t79 = qJD(4) * t356 - t186 * t324 + t328 * t392;
t73 = pkin(5) * t109 + t205;
t45 = qJD(6) * t141 - t322 * t108 + t109 * t487;
t44 = t108 * t487 + t322 * t109 + t216 * t384 - t217 * t408;
t31 = pkin(5) * t359 + t66;
t30 = -qJD(5) * t100 - t323 * t80 + t327 * t79;
t29 = qJD(5) * t99 + t323 * t79 + t327 * t80;
t15 = t38 * t487 - t471;
t14 = -t322 * t38 - t400;
t11 = -qJD(6) * t54 - t322 * t29 + t30 * t487;
t10 = qJD(6) * t53 + t29 * t487 + t322 * t30;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t432, 0, 0, 0, 0, 0, 0, t361 * t320 (-qJDD(2) * t326 - t330 * t333) * t320, 0, -g(3) + (t321 ^ 2 + (t326 ^ 2 + t330 ^ 2) * t320 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -qJD(3) * t187 - qJDD(3) * t233 + (-t325 * t379 + t329 * t361) * t320, -qJD(3) * t186 - qJDD(3) * t234 + (-t325 * t361 - t329 * t379) * t320 (t233 * t325 + t234 * t329) * qJDD(2) + (t186 * t329 + t187 * t325 + (t233 * t329 - t234 * t325) * qJD(3)) * qJD(2), t118 * t234 - t119 * t233 + t186 * t204 - t187 * t203 - g(3) + (-t209 * t330 + t265 * t418) * t320, 0, 0, 0, 0, 0, 0, t153 * t233 + t187 * t250 + t188 * t247 - t294 * t79, -t152 * t233 + t187 * t252 + t247 * t356 + t294 * t80, t152 * t188 + t153 * t356 - t250 * t80 - t252 * t79, t107 * t233 + t125 * t79 + t126 * t80 + t187 * t193 + t188 * t47 + t352 * t356 - g(3), 0, 0, 0, 0, 0, 0, t187 * t168 + t233 * t359 + t99 * t243 - t30 * t282, -t100 * t243 + t187 * t364 - t233 * t61 + t282 * t29, -t100 * t359 - t29 * t168 - t30 * t364 + t99 * t61, t100 * t8 + t144 * t187 + t233 * t66 + t29 * t49 + t30 * t48 + t9 * t99 - g(3), 0, 0, 0, 0, 0, 0, -t11 * t272 + t187 * t86 + t19 * t233 + t226 * t53, t10 * t272 - t18 * t233 + t187 * t505 - t226 * t54, -t10 * t86 - t11 * t505 + t18 * t53 - t19 * t54, t1 * t54 + t10 * t13 + t11 * t12 + t187 * t78 + t2 * t53 + t233 * t31 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t432 * t441 + t368, -t432 * t443 + t367, 0, 0, qJDD(2) * t316 + 0.2e1 * t372, 0.2e1 * t308 * t325 - 0.2e1 * t405 * t425, qJDD(3) * t325 + t329 * t332, qJDD(2) * t317 - 0.2e1 * t372, qJDD(3) * t329 - t325 * t332, 0, t339 * t325 + t329 * t491, -t325 * t491 + t339 * t329, t424 * t460 + (-t382 * t424 - t477) * t320 + t337, -t209 * pkin(2) + g(1) * t219 + g(2) * t218 - t385 + (-t265 * t326 + (t203 * t325 - t204 * t329) * t330) * t423 + t337 * pkin(8), -t152 * t435 + t252 * t497 (-t250 * t328 - t252 * t324) * t414 + (t457 - t456 + (-t450 + t453) * qJD(4)) * t325 (-t294 * t407 + t152) * t329 + (qJD(3) * t252 + t353) * t325, t153 * t438 + t250 * t349 (t294 * t416 + t153) * t329 + (-qJD(3) * t250 - t354) * t325, -t247 * t329 - t294 * t415, t211 * t247 - t430 * t294 + t347 * t324 + (-t47 + (pkin(8) * t250 + t193 * t324) * qJD(3) - t348 * t328) * t329 + (pkin(8) * t153 + qJD(3) * t125 + t107 * t324 + t193 * t411 - t250 * t394) * t325, -t212 * t247 + t431 * t294 + t347 * t328 + (-t352 + (pkin(8) * t252 + t193 * t328) * qJD(3) + t348 * t324) * t329 + (-pkin(8) * t152 - qJD(3) * t126 + t107 * t328 - t193 * t413 - t252 * t394) * t325, t152 * t211 - t153 * t212 - t430 * t252 - t431 * t250 + t365 * t414 + (t324 * t352 - t328 * t47 + (t125 * t324 - t126 * t328) * qJD(4) - t348) * t325, -t352 * t212 + t47 * t211 - g(1) * (-t229 * t370 - t219) - g(2) * (-t227 * t370 - t218) - t385 + (-g(3) * t370 - t193 * t421) * t441 + t431 * t126 + t430 * t125 + (t107 * t325 + t193 * t414 - t367) * pkin(8), -t108 * t364 + t217 * t61, t108 * t168 - t109 * t364 + t61 * t216 + t217 * t359, t108 * t282 - t217 * t243 + t329 * t61 + t364 * t415, t168 * t109 + t216 * t359, t109 * t282 - t168 * t415 - t216 * t243 + t329 * t359, -t243 * t329 - t282 * t415, t96 * t243 - t9 * t329 + t48 * t415 + t205 * t168 + t263 * t359 + t66 * t216 + t144 * t109 - g(1) * (-t229 * t446 + t230 * t310) - g(2) * (-t227 * t446 + t228 * t310) - t463 * t282 + (-t168 * t393 - g(3) * (t310 * t326 + t311 * t433)) * t320, -t97 * t243 + t8 * t329 - t49 * t415 + t205 * t364 - t263 * t61 - t66 * t217 - t144 * t108 - g(1) * (t229 * t447 + t230 * t311) - g(2) * (t227 * t447 + t228 * t311) + t464 * t282 + (-t364 * t393 - g(3) * (-t310 * t433 + t311 * t326)) * t320, t48 * t108 - t49 * t109 - t168 * t464 - t8 * t216 + t9 * t217 - t359 * t97 - t364 * t463 + t96 * t61 - t344, t8 * t97 + t9 * t96 + t66 * t263 + t144 * t205 - g(1) * (-t229 * t362 + t230 * t397 - t219) - g(2) * (-t227 * t362 + t228 * t397 - t218) - t385 + t464 * t49 + t463 * t48 + (-g(3) * pkin(4) * t437 + (-g(3) * t362 - t144 * t421) * t330) * t320, -t141 * t18 - t44 * t505, t140 * t18 - t141 * t19 + t44 * t86 - t45 * t505, t141 * t226 + t18 * t329 + t272 * t44 + t415 * t505, t140 * t19 + t45 * t86, -t140 * t226 + t19 * t329 + t272 * t45 - t415 * t86, -t226 * t329 - t272 * t415, t40 * t226 - t2 * t329 + t12 * t415 + t73 * t86 + t178 * t19 + t31 * t140 + t78 * t45 - g(1) * (-t229 * t448 + t230 * t301) - g(2) * (-t227 * t448 + t228 * t301) - t488 * t272 + (-t86 * t393 - g(3) * (t301 * t326 + t302 * t433)) * t320, -t41 * t226 + t1 * t329 - t13 * t415 + t73 * t505 - t178 * t18 + t31 * t141 - t78 * t44 - g(1) * (t229 * t449 + t230 * t302) - g(2) * (t227 * t449 + t228 * t302) + t489 * t272 + (-t505 * t393 - g(3) * (-t301 * t433 + t302 * t326)) * t320, -t1 * t140 + t12 * t44 - t13 * t45 - t141 * t2 + t18 * t40 - t19 * t41 - t488 * t505 - t489 * t86 - t344, t1 * t41 + t2 * t40 + t31 * t178 + t78 * t73 - g(1) * (-t229 * t363 + t230 * t475 - t219) - g(2) * (-t227 * t363 + t228 * t475 - t218) - t385 + t489 * t13 + t488 * t12 + (-t266 * t477 + (-g(3) * t363 - t421 * t78) * t330) * t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399, t425 * t333, t403, t399, t308, qJDD(3), qJD(3) * t204 - t265 * t419 + t119 - t351, -t265 * t417 + (t203 + t245) * qJD(3) + t350 + t398, 0, 0, -t294 * t450 - t457 (-t152 + t454) * t328 + (-t153 + t451) * t324 (-t252 * t325 + t294 * t434) * qJD(2) + t354, -t294 * t453 - t456 (t250 * t325 - t294 * t436) * qJD(2) + t353, t294 * t419, -pkin(3) * t153 - t125 * t419 + t142 * t294 - t204 * t250 + t324 * t345 + t328 * t341, pkin(3) * t152 + t126 * t419 - t143 * t294 - t204 * t252 - t324 * t341 + t328 * t345, t142 * t252 + t143 * t250 + ((qJD(4) * t252 - t153) * pkin(9) + t513) * t328 + ((qJD(4) * t250 - t152) * pkin(9) + t501) * t324 - t350, -t125 * t142 - t126 * t143 - t193 * t204 + t346 * pkin(3) + (qJD(4) * t365 - t47 * t324 - t328 * t352 - t350) * pkin(9), -t254 * t61 - t364 * t428, t168 * t428 + t61 * t253 - t254 * t359 - t364 * t427, t243 * t254 + t282 * t428 - t364 * t419, t168 * t427 + t253 * t359, t168 * t419 - t243 * t253 + t282 * t427, t282 * t419, t144 * t427 + t168 * t371 + t196 * t243 + t66 * t253 - t282 * t469 - t304 * t359 - t311 * t351 - t419 * t48, -t144 * t428 - t197 * t243 + t254 * t66 + t282 * t470 + t304 * t61 + t310 * t351 + t364 * t371 + t419 * t49, -t168 * t470 + t196 * t61 - t197 * t359 - t8 * t253 - t9 * t254 - t364 * t469 - t427 * t49 + t428 * t48 - t350, t8 * t197 + t9 * t196 - t66 * t304 - g(1) * (t184 * t304 - t185 * t331) - g(2) * (t182 * t304 - t183 * t331) - g(3) * (-t233 * t304 - t234 * t331) + t470 * t49 + t469 * t48 + t371 * t144, -t175 * t18 - t467 * t505, t174 * t18 - t175 * t19 + t467 * t86 + t468 * t505, t175 * t226 + t272 * t467 - t419 * t505, t174 * t19 - t468 * t86, -t174 * t226 - t272 * t468 + t419 * t86, t272 * t419, -t12 * t419 + t174 * t31 + t19 * t215 + t226 * t70 - t272 * t473 - t302 * t351 + t429 * t86 - t468 * t78, t13 * t419 + t175 * t31 - t18 * t215 - t226 * t71 + t272 * t474 + t301 * t351 + t429 * t505 - t467 * t78, -t1 * t174 + t12 * t467 + t13 * t468 - t175 * t2 + t18 * t70 - t19 * t71 - t473 * t505 - t474 * t86 - t350, t1 * t71 + t2 * t70 + t31 * t215 - g(1) * (t184 * t258 - t185 * t315) - g(2) * (t182 * t258 - t183 * t315) - g(3) * (-t233 * t258 - t234 * t315) + t429 * t78 + t474 * t13 + t473 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, -t250 ^ 2 + t252 ^ 2, -t152 - t454, -t452, -t153 - t451, t247, -t193 * t252 + t498 - t501, t193 * t250 - g(1) * (-t185 * t328 - t229 * t324) - g(2) * (-t183 * t328 - t227 * t324) - g(3) * t356 - t513, 0, 0, t455, t510, t507, -t455, t492, t243, t282 * t50 + (-t168 * t252 + t243 * t327 + t282 * t410) * pkin(4) + t494, -t282 * t51 + (-t243 * t323 - t252 * t364 + t282 * t409) * pkin(4) + t506, t49 * t364 + t51 * t168 - t48 * t168 + t50 * t364 + (-t323 * t359 + t327 * t61 + (-t168 * t327 + t323 * t364) * qJD(5)) * pkin(4), -t48 * t50 - t49 * t51 + (t8 * t323 + t9 * t327 - t144 * t252 + (-t323 * t48 + t327 * t49) * qJD(5) + t498) * pkin(4), t476, t511, t509, -t476, t493, t226, -t134 * t86 + t224 * t226 - t272 * t465 + t495, -t134 * t505 - t225 * t226 + t272 * t466 + t508, t18 * t224 - t19 * t225 - t465 * t505 - t466 * t86 + t522, t1 * t225 + t2 * t224 - t78 * t134 - g(1) * (-t185 * t266 + t229 * t267) - g(2) * (-t183 * t266 + t227 * t267) - g(3) * (-t234 * t266 - t267 * t441) + t466 * t13 + t465 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t510, t507, -t455, t492, t243, -t282 * t49 + t494, -t282 * t48 + t506, 0, 0, t476, t511, t509, -t476, t493, t226, t14 * t272 + (t226 * t487 + t272 * t408 - t364 * t86) * pkin(5) + t495, -t15 * t272 + (-t226 * t322 + t272 * t384 - t364 * t505) * pkin(5) + t508, t14 * t505 + t15 * t86 + (t487 * t18 - t19 * t322 + (t322 * t505 - t487 * t86) * qJD(6)) * pkin(5) + t522, -t12 * t14 - t13 * t15 + (t1 * t322 + t2 * t487 - t78 * t364 + (-t12 * t322 + t13 * t487) * qJD(6) + t496) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, t511, t509, -t476, t493, t226, -t13 * t272 + t495, -t12 * t272 + t508, 0, 0;];
tau_reg  = t3;
