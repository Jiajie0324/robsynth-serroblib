% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:51:33
% EndTime: 2019-03-09 00:51:58
% DurationCPUTime: 11.25s
% Computational Cost: add. (15671->608), mult. (38210->857), div. (0->0), fcn. (28899->12), ass. (0->262)
t267 = sin(qJ(3));
t271 = cos(qJ(3));
t290 = pkin(3) * t267 - pkin(9) * t271;
t229 = t290 * qJD(3);
t233 = -pkin(3) * t271 - pkin(9) * t267 - pkin(2);
t266 = sin(qJ(4));
t268 = sin(qJ(2));
t270 = cos(qJ(4));
t320 = t270 * qJD(3);
t324 = qJD(4) * t270;
t325 = qJD(4) * t266;
t262 = sin(pkin(6));
t333 = qJD(1) * t262;
t272 = cos(qJ(2));
t343 = t271 * t272;
t339 = t266 * t229 + t233 * t324 + (-t267 * t320 - t271 * t325) * pkin(8) - (t266 * t268 + t270 * t343) * t333;
t327 = qJD(3) * t267;
t382 = pkin(8) * t266;
t419 = (-t266 * t343 + t268 * t270) * t333 - t270 * t229 - t327 * t382;
t344 = t270 * t271;
t250 = pkin(8) * t344;
t285 = pkin(4) * t267 - pkin(10) * t344;
t418 = -t285 * qJD(3) - (-t250 + (pkin(10) * t267 - t233) * t266) * qJD(4) + t419;
t326 = qJD(3) * t271;
t306 = t266 * t326;
t280 = t267 * t324 + t306;
t417 = -pkin(10) * t280 + t339;
t301 = t268 * t333;
t231 = qJD(2) * pkin(8) + t301;
t263 = cos(pkin(6));
t332 = qJD(1) * t263;
t183 = -t267 * t231 + t271 * t332;
t226 = t290 * qJD(2);
t126 = -t266 * t183 + t270 * t226;
t386 = -pkin(10) - pkin(9);
t312 = qJD(4) * t386;
t416 = -qJD(2) * t285 + t270 * t312 - t126;
t127 = t270 * t183 + t266 * t226;
t329 = qJD(2) * t271;
t307 = t266 * t329;
t415 = -pkin(10) * t307 - t266 * t312 + t127;
t330 = qJD(2) * t267;
t218 = t266 * t330 - t320;
t328 = qJD(3) * t266;
t220 = t270 * t330 + t328;
t265 = sin(qJ(5));
t269 = cos(qJ(5));
t148 = t218 * t269 + t220 * t265;
t264 = sin(qJ(6));
t287 = -t218 * t265 + t269 * t220;
t383 = cos(qJ(6));
t399 = -t264 * t148 + t287 * t383;
t85 = t383 * t148 + t264 * t287;
t381 = t85 * t399;
t348 = t265 * t266;
t221 = -t269 * t270 + t348;
t317 = qJD(4) + qJD(5);
t322 = qJD(5) * t269;
t337 = -t221 * t329 - t269 * t324 - t270 * t322 + t317 * t348;
t222 = t265 * t270 + t266 * t269;
t159 = t317 * t222;
t336 = -t222 * t329 + t159;
t405 = t399 ^ 2 - t85 ^ 2;
t248 = -qJD(4) + t329;
t241 = -qJD(5) + t248;
t396 = pkin(11) * t287;
t184 = t231 * t271 + t267 * t332;
t173 = qJD(3) * pkin(9) + t184;
t300 = t272 * t333;
t186 = qJD(2) * t233 - t300;
t112 = -t173 * t266 + t270 * t186;
t92 = -pkin(10) * t220 + t112;
t75 = -pkin(4) * t248 + t92;
t113 = t173 * t270 + t186 * t266;
t93 = -pkin(10) * t218 + t113;
t80 = t265 * t93;
t43 = t269 * t75 - t80;
t32 = t43 - t396;
t30 = -pkin(5) * t241 + t32;
t411 = pkin(11) * t148;
t82 = t269 * t93;
t44 = t265 * t75 + t82;
t33 = t44 - t411;
t377 = t264 * t33;
t12 = t30 * t383 - t377;
t315 = t383 * t33;
t13 = t264 * t30 + t315;
t414 = -t12 * t85 + t13 * t399;
t237 = -qJD(6) + t241;
t318 = qJD(3) * qJD(4);
t304 = t267 * t325;
t305 = t271 * t320;
t406 = t304 - t305;
t177 = qJD(2) * t406 - t270 * t318;
t178 = qJD(2) * t280 + t266 * t318;
t323 = qJD(5) * t265;
t284 = -t265 * t177 + t178 * t269 - t218 * t323 + t220 * t322;
t299 = qJD(6) * t383;
t321 = qJD(6) * t264;
t65 = t269 * t177 + t265 * t178 + t218 * t322 + t220 * t323;
t24 = t148 * t299 + t264 * t284 + t287 * t321 + t383 * t65;
t403 = -t237 * t85 - t24;
t319 = qJD(2) * qJD(3);
t253 = t267 * t319;
t331 = qJD(2) * t262;
t308 = t272 * t331;
t279 = qJD(1) * (qJD(3) * t263 + t308);
t133 = -t231 * t327 + t271 * t279;
t182 = (t229 + t301) * qJD(2);
t55 = -qJD(4) * t113 - t266 * t133 + t270 * t182;
t42 = pkin(4) * t253 + t177 * pkin(10) + t55;
t54 = t270 * t133 - t173 * t325 + t266 * t182 + t186 * t324;
t47 = -pkin(10) * t178 + t54;
t11 = -qJD(5) * t44 - t265 * t47 + t269 * t42;
t8 = pkin(5) * t253 + t65 * pkin(11) + t11;
t296 = -t265 * t42 - t269 * t47 - t75 * t322 + t93 * t323;
t9 = -pkin(11) * t284 - t296;
t277 = -t264 * t8 - t299 * t30 + t33 * t321 - t383 * t9;
t172 = -qJD(3) * pkin(3) - t183;
t129 = pkin(4) * t218 + t172;
t77 = pkin(5) * t148 + t129;
t402 = t77 * t85 + t277;
t238 = t386 * t266;
t239 = t386 * t270;
t376 = t238 * t322 + t239 * t323 + t265 * t416 - t269 * t415;
t176 = t265 * t238 - t269 * t239;
t375 = -qJD(5) * t176 + t265 * t415 + t269 * t416;
t217 = t270 * t233;
t345 = t267 * t270;
t154 = -pkin(10) * t345 + t217 + (-pkin(4) - t382) * t271;
t190 = t266 * t233 + t250;
t347 = t266 * t267;
t164 = -pkin(10) * t347 + t190;
t370 = -t154 * t322 + t164 * t323 + t265 * t418 - t417 * t269;
t96 = t265 * t154 + t269 * t164;
t369 = qJD(5) * t96 + t417 * t265 + t269 * t418;
t2 = -qJD(6) * t13 - t264 * t9 + t383 * t8;
t390 = -t399 * t77 + t2;
t25 = qJD(6) * t399 - t264 * t65 + t383 * t284;
t388 = -t237 * t399 - t25;
t410 = pkin(5) * t330 - pkin(11) * t337 - t375;
t409 = pkin(11) * t336 - t376;
t105 = t159 * t267 + t265 * t306 - t269 * t305;
t408 = pkin(5) * t327 + t105 * pkin(11) - t369;
t106 = -t323 * t347 + (t317 * t345 + t306) * t269 - t406 * t265;
t407 = pkin(11) * t106 + t370;
t362 = t148 * t287;
t404 = -t148 ^ 2 + t287 ^ 2;
t401 = -t148 * t241 - t65;
t400 = t129 * t148 + t296;
t395 = t112 * t248 + t54;
t394 = t113 * t248 - t55;
t291 = -t184 + (-t307 + t325) * pkin(4);
t389 = -t129 * t287 + t11;
t387 = -t241 * t287 - t284;
t195 = t221 * t267;
t95 = t269 * t154 - t164 * t265;
t68 = -pkin(5) * t271 + pkin(11) * t195 + t95;
t194 = t222 * t267;
t71 = -pkin(11) * t194 + t96;
t34 = -t264 * t71 + t383 * t68;
t385 = qJD(6) * t34 + t408 * t264 - t407 * t383;
t35 = t264 * t68 + t383 * t71;
t384 = -qJD(6) * t35 + t407 * t264 + t408 * t383;
t175 = t269 * t238 + t239 * t265;
t130 = -pkin(11) * t222 + t175;
t131 = -pkin(11) * t221 + t176;
t70 = t264 * t130 + t131 * t383;
t380 = qJD(6) * t70 - t409 * t264 + t410 * t383;
t69 = t130 * t383 - t264 * t131;
t379 = -qJD(6) * t69 + t410 * t264 + t409 * t383;
t49 = t269 * t92 - t80;
t378 = qJD(2) * pkin(2);
t153 = -t264 * t221 + t222 * t383;
t374 = -qJD(6) * t153 + t337 * t264 - t336 * t383;
t373 = t221 * t299 + t222 * t321 + t336 * t264 + t337 * t383;
t255 = pkin(4) * t269 + pkin(5);
t349 = t264 * t265;
t48 = -t265 * t92 - t82;
t36 = t48 + t411;
t37 = t49 - t396;
t372 = -t264 * t36 - t383 * t37 + t255 * t299 + (-t265 * t321 + (t269 * t383 - t349) * qJD(5)) * pkin(4);
t311 = t383 * t265;
t371 = t264 * t37 - t383 * t36 - t255 * t321 + (-t265 * t299 + (-t264 * t269 - t311) * qJD(5)) * pkin(4);
t134 = t231 * t326 + t267 * t279;
t352 = t262 * t268;
t203 = -t263 * t271 + t267 * t352;
t366 = t134 * t203;
t365 = t134 * t266;
t364 = t134 * t267;
t363 = t134 * t270;
t361 = t172 * t266;
t360 = t172 * t270;
t359 = t177 * t266;
t358 = t178 * t270;
t357 = t218 * t248;
t356 = t220 * t218;
t355 = t220 * t248;
t354 = t248 * t266;
t353 = t248 * t270;
t351 = t262 * t272;
t274 = qJD(2) ^ 2;
t350 = t262 * t274;
t346 = t266 * t271;
t273 = qJD(3) ^ 2;
t342 = t273 * t267;
t341 = t273 * t271;
t340 = pkin(5) * t336 + t291;
t338 = -qJD(4) * t190 - t419;
t230 = pkin(4) * t347 + t267 * pkin(8);
t260 = t267 ^ 2;
t261 = t271 ^ 2;
t334 = t260 - t261;
t314 = t268 * t350;
t313 = t267 * t274 * t271;
t185 = pkin(4) * t280 + pkin(8) * t326;
t256 = -pkin(4) * t270 - pkin(3);
t309 = t268 * t331;
t302 = t248 * t324;
t295 = t267 * t300;
t294 = t267 * t308;
t293 = t271 * t308;
t292 = t271 * t253;
t232 = -t300 - t378;
t289 = -t232 - t300;
t288 = -t112 * t270 - t113 * t266;
t204 = t263 * t267 + t271 * t352;
t162 = -t204 * t266 - t270 * t351;
t283 = -t204 * t270 + t266 * t351;
t98 = t162 * t269 + t265 * t283;
t99 = t162 * t265 - t269 * t283;
t286 = qJD(2) * t260 - t248 * t271;
t51 = -t264 * t99 + t383 * t98;
t52 = t264 * t98 + t383 * t99;
t125 = -t264 * t194 - t195 * t383;
t281 = qJD(2) * t289;
t278 = qJD(3) * (-t289 - t378);
t275 = t133 * t271 + t364 + (-t183 * t271 - t184 * t267) * qJD(3);
t104 = t178 * pkin(4) + t134;
t201 = pkin(4) * t311 + t264 * t255;
t200 = -pkin(4) * t349 + t255 * t383;
t193 = pkin(5) * t221 + t256;
t189 = -pkin(8) * t346 + t217;
t161 = qJD(3) * t204 + t294;
t160 = -qJD(3) * t203 + t293;
t156 = pkin(5) * t194 + t230;
t152 = t221 * t383 + t222 * t264;
t124 = t194 * t383 - t195 * t264;
t119 = pkin(4) * t220 + pkin(5) * t287;
t79 = qJD(4) * t162 + t160 * t270 + t266 * t309;
t78 = qJD(4) * t283 - t160 * t266 + t270 * t309;
t72 = pkin(5) * t106 + t185;
t45 = pkin(5) * t284 + t104;
t39 = qJD(6) * t125 - t264 * t105 + t106 * t383;
t38 = t105 * t383 + t264 * t106 + t194 * t299 - t195 * t321;
t27 = -qJD(5) * t99 - t265 * t79 + t269 * t78;
t26 = qJD(5) * t98 + t265 * t78 + t269 * t79;
t15 = t32 * t383 - t377;
t14 = -t264 * t32 - t315;
t6 = -qJD(6) * t52 - t264 * t26 + t27 * t383;
t5 = qJD(6) * t51 + t26 * t383 + t264 * t27;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314, -t272 * t350, 0, 0, 0, 0, 0, 0, 0, 0, -t271 * t314 + (-t161 - t294) * qJD(3), t267 * t314 + (-t160 - t293) * qJD(3) (t160 * t271 + t161 * t267 + (t203 * t271 - t204 * t267) * qJD(3)) * qJD(2), t133 * t204 + t366 + t160 * t184 - t161 * t183 + (t232 - t300) * t309, 0, 0, 0, 0, 0, 0, t161 * t218 + t162 * t253 + t178 * t203 - t248 * t78, t161 * t220 - t177 * t203 + t248 * t79 + t253 * t283, t162 * t177 + t178 * t283 - t218 * t79 - t220 * t78, t112 * t78 + t113 * t79 + t161 * t172 + t162 * t55 - t283 * t54 + t366, 0, 0, 0, 0, 0, 0, t161 * t148 + t203 * t284 - t27 * t241 + t253 * t98, t161 * t287 - t203 * t65 + t241 * t26 - t253 * t99, -t26 * t148 - t27 * t287 - t284 * t99 + t98 * t65, t104 * t203 + t11 * t98 + t129 * t161 + t26 * t44 + t27 * t43 - t296 * t99, 0, 0, 0, 0, 0, 0, t161 * t85 + t203 * t25 - t237 * t6 + t253 * t51, t161 * t399 - t203 * t24 + t237 * t5 - t253 * t52, t24 * t51 - t25 * t52 - t399 * t6 - t5 * t85, t12 * t6 + t13 * t5 + t161 * t77 + t2 * t51 + t203 * t45 - t277 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t292, -0.2e1 * t334 * t319, t341, -0.2e1 * t292, -t342, 0, -pkin(8) * t341 + t267 * t278, pkin(8) * t342 + t271 * t278 (-t260 - t261) * qJD(2) * t300 + t275 ((t183 * t267 - t184 * t271) * t272 + (-t232 - t378) * t268) * t333 + t275 * pkin(8), -t177 * t345 - t220 * t406 (-t218 * t270 - t220 * t266) * t326 + (t359 - t358 + (t218 * t266 - t220 * t270) * qJD(4)) * t267, t248 * t304 + t177 * t271 + (t220 * t267 + t270 * t286) * qJD(3), t178 * t347 + t218 * t280, t267 * t302 + t178 * t271 + (-t218 * t267 - t266 * t286) * qJD(3) (-t248 - t329) * t327, -t338 * t248 + (-t55 + (pkin(8) * t218 + t361) * qJD(3)) * t271 + (-t218 * t300 + t172 * t324 + pkin(8) * t178 + t365 + (qJD(2) * t189 + t112) * qJD(3)) * t267, t339 * t248 + (t54 + (pkin(8) * t220 + t360) * qJD(3)) * t271 + (-t220 * t300 - t172 * t325 - pkin(8) * t177 + t363 + (-qJD(2) * t190 - t113) * qJD(3)) * t267, t177 * t189 - t178 * t190 - t338 * t220 - t339 * t218 + t288 * t326 + (-t266 * t54 - t270 * t55 + (t112 * t266 - t113 * t270) * qJD(4)) * t267, -t172 * t295 + t189 * t55 + t190 * t54 + t339 * t113 + t338 * t112 + (t172 * t326 + t364) * pkin(8), -t105 * t287 + t195 * t65, t105 * t148 - t106 * t287 + t65 * t194 + t195 * t284, t105 * t241 + t65 * t271 + (-qJD(2) * t195 + t287) * t327, t148 * t106 + t194 * t284, t106 * t241 + t284 * t271 + (-qJD(2) * t194 - t148) * t327 (-t241 - t329) * t327, -t11 * t271 + t185 * t148 + t230 * t284 + t104 * t194 + t129 * t106 + t369 * t241 + (-t148 * t300 + (qJD(2) * t95 + t43) * qJD(3)) * t267, -t296 * t271 - t104 * t195 - t105 * t129 + t287 * t185 - t230 * t65 - t370 * t241 + (-t287 * t300 + (-qJD(2) * t96 - t44) * qJD(3)) * t267, t43 * t105 - t44 * t106 + t11 * t195 + t148 * t370 + t194 * t296 - t284 * t96 + t287 * t369 + t95 * t65, -t296 * t96 + t104 * t230 + t11 * t95 - t370 * t44 - t369 * t43 + (t185 - t295) * t129, -t125 * t24 - t38 * t399, t124 * t24 - t125 * t25 + t38 * t85 - t39 * t399, t38 * t237 + t24 * t271 + (qJD(2) * t125 + t399) * t327, t124 * t25 + t39 * t85, t39 * t237 + t25 * t271 + (-qJD(2) * t124 - t85) * t327 (-t237 - t329) * t327, t124 * t45 + t156 * t25 - t2 * t271 + t39 * t77 + t72 * t85 - t384 * t237 + (-t85 * t300 + (qJD(2) * t34 + t12) * qJD(3)) * t267, -t277 * t271 + t125 * t45 - t156 * t24 - t38 * t77 + t72 * t399 + t385 * t237 + (-t399 * t300 + (-qJD(2) * t35 - t13) * qJD(3)) * t267, t12 * t38 + t124 * t277 - t125 * t2 - t13 * t39 + t24 * t34 - t25 * t35 - t384 * t399 - t385 * t85, -t277 * t35 + t156 * t45 + t2 * t34 + (t72 - t295) * t77 + t385 * t13 + t384 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, t334 * t274, 0, t313, 0, 0, t267 * t281, t271 * t281, 0, 0, -t220 * t353 - t359 (-t177 + t357) * t270 + (-t178 + t355) * t266, -t302 + (t248 * t344 + (-t220 + t328) * t267) * qJD(2), -t218 * t354 - t358, t248 * t325 + (-t248 * t346 + (t218 + t320) * t267) * qJD(2), t248 * t330, -pkin(3) * t178 + t126 * t248 - t363 - t184 * t218 + (pkin(9) * t353 + t361) * qJD(4) + (-t112 * t267 + (-pkin(9) * t327 - t172 * t271) * t266) * qJD(2), pkin(3) * t177 - t127 * t248 + t365 - t184 * t220 + (-pkin(9) * t354 + t360) * qJD(4) + (-t172 * t344 + (-pkin(9) * t320 + t113) * t267) * qJD(2), t126 * t220 + t127 * t218 + ((qJD(4) * t220 - t178) * pkin(9) + t395) * t270 + ((qJD(4) * t218 - t177) * pkin(9) + t394) * t266, -pkin(3) * t134 - t112 * t126 - t113 * t127 - t172 * t184 + (qJD(4) * t288 - t266 * t55 + t270 * t54) * pkin(9), -t65 * t222 - t287 * t337, t148 * t337 + t65 * t221 - t222 * t284 - t287 * t336, t337 * t241 + (qJD(3) * t222 - t287) * t330, t148 * t336 + t221 * t284, t336 * t241 + (-qJD(3) * t221 + t148) * t330, t241 * t330, t256 * t284 + t104 * t221 - t375 * t241 + t291 * t148 + t336 * t129 + (qJD(3) * t175 - t43) * t330, t104 * t222 - t256 * t65 + t376 * t241 + t291 * t287 - t337 * t129 + (-qJD(3) * t176 + t44) * t330, -t11 * t222 - t148 * t376 + t175 * t65 - t176 * t284 + t221 * t296 - t287 * t375 - t336 * t44 + t337 * t43, t104 * t256 + t11 * t175 + t129 * t291 - t176 * t296 + t375 * t43 + t376 * t44, -t24 * t153 - t373 * t399, t24 * t152 - t153 * t25 + t373 * t85 + t374 * t399, t373 * t237 + (qJD(3) * t153 - t399) * t330, t25 * t152 - t374 * t85, -t374 * t237 + (-qJD(3) * t152 + t85) * t330, t237 * t330, t152 * t45 + t193 * t25 + t340 * t85 - t374 * t77 + t380 * t237 + (qJD(3) * t69 - t12) * t330, t153 * t45 - t193 * t24 + t340 * t399 - t373 * t77 - t379 * t237 + (-qJD(3) * t70 + t13) * t330, t12 * t373 + t13 * t374 + t152 * t277 - t153 * t2 + t24 * t69 - t25 * t70 + t379 * t85 + t380 * t399, -t12 * t380 - t13 * t379 + t193 * t45 + t2 * t69 - t277 * t70 + t340 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, -t218 ^ 2 + t220 ^ 2, -t177 - t357, -t356, -t178 - t355, t253, -t172 * t220 - t394, t172 * t218 - t395, 0, 0, t362, t404, t401, -t362, t387, t253, t241 * t48 + (-t148 * t220 + t241 * t323 + t253 * t269) * pkin(4) + t389, -t241 * t49 + (-t220 * t287 + t241 * t322 - t253 * t265) * pkin(4) + t400, t44 * t287 + t49 * t148 - t43 * t148 + t48 * t287 + (-t265 * t284 + t269 * t65 + (-t148 * t269 + t265 * t287) * qJD(5)) * pkin(4), -t43 * t48 - t44 * t49 + (-t296 * t265 + t11 * t269 - t129 * t220 + (-t265 * t43 + t269 * t44) * qJD(5)) * pkin(4), t381, t405, t403, -t381, t388, t253, -t119 * t85 + t200 * t253 - t237 * t371 + t390, -t119 * t399 - t201 * t253 + t237 * t372 + t402, t200 * t24 - t201 * t25 - t371 * t399 - t372 * t85 + t414, -t119 * t77 + t12 * t371 + t13 * t372 + t2 * t200 - t201 * t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, t404, t401, -t362, t387, t253, -t44 * t241 + t389, -t241 * t43 + t400, 0, 0, t381, t405, t403, -t381, t388, t253, t14 * t237 + (t237 * t321 + t253 * t383 - t287 * t85) * pkin(5) + t390, -t15 * t237 + (t237 * t299 - t253 * t264 - t287 * t399) * pkin(5) + t402, t14 * t399 + t15 * t85 + (t383 * t24 - t25 * t264 + (t264 * t399 - t383 * t85) * qJD(6)) * pkin(5) + t414, -t12 * t14 - t13 * t15 + (t383 * t2 - t277 * t264 - t287 * t77 + (-t12 * t264 + t13 * t383) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381, t405, t403, -t381, t388, t253, -t13 * t237 + t390, -t12 * t237 + t402, 0, 0;];
tauc_reg  = t1;
