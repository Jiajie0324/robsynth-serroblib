% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRPRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 07:35
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRPRP2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP2_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP2_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP2_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP2_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 07:35:31
% EndTime: 2019-05-07 07:35:42
% DurationCPUTime: 11.94s
% Computational Cost: add. (50321->322), mult. (114030->409), div. (0->0), fcn. (85529->10), ass. (0->235)
t2551 = sin(qJ(3));
t2552 = sin(qJ(2));
t2555 = cos(qJ(3));
t2556 = cos(qJ(2));
t2518 = (t2551 * t2556 + t2552 * t2555) * qJD(1);
t2605 = qJD(1) * qJD(2);
t2582 = t2556 * t2605;
t2586 = t2552 * qJDD(1);
t2524 = t2582 + t2586;
t2543 = t2556 * qJDD(1);
t2604 = qJD(1) * t2552;
t2583 = qJD(2) * t2604;
t2525 = t2543 - t2583;
t2577 = t2551 * t2524 - t2555 * t2525;
t2486 = -qJD(3) * t2518 - t2577;
t2516 = (-t2551 * t2552 + t2555 * t2556) * qJD(1);
t2573 = -t2555 * t2524 - t2551 * t2525;
t2487 = qJD(3) * t2516 - t2573;
t2548 = sin(pkin(10));
t2549 = cos(pkin(10));
t2578 = -t2549 * t2486 + t2487 * t2548;
t2574 = qJDD(5) + t2578;
t2500 = t2548 * t2516 + t2549 * t2518;
t2545 = qJD(2) + qJD(3);
t2550 = sin(qJ(5));
t2554 = cos(qJ(5));
t2483 = t2500 * t2550 - t2545 * t2554;
t2485 = t2500 * t2554 + t2545 * t2550;
t2599 = t2483 * t2485;
t2425 = t2574 + t2599;
t2482 = t2485 ^ 2;
t2498 = -t2549 * t2516 + t2518 * t2548;
t2496 = qJD(5) + t2498;
t2611 = t2496 ^ 2;
t2615 = -t2482 - t2611;
t2398 = t2425 * t2554 + t2550 * t2615;
t2455 = t2486 * t2548 + t2487 * t2549;
t2585 = qJDD(2) + qJDD(3);
t2565 = -t2483 * qJD(5) + t2554 * t2455 + t2550 * t2585;
t2598 = t2483 * t2496;
t2564 = t2565 - t2598;
t2371 = t2398 * t2548 + t2549 * t2564;
t2373 = t2398 * t2549 - t2548 * t2564;
t2350 = t2371 * t2555 + t2373 * t2551;
t2358 = t2371 * t2551 - t2373 * t2555;
t2338 = t2350 * t2552 + t2358 * t2556;
t2396 = t2425 * t2550 - t2554 * t2615;
t2553 = sin(qJ(1));
t2557 = cos(qJ(1));
t2639 = t2338 * t2553 + t2396 * t2557;
t2638 = t2338 * t2557 - t2396 * t2553;
t2332 = t2350 * t2556 - t2358 * t2552;
t2416 = t2565 + t2598;
t2579 = t2550 * t2455 - t2554 * t2585;
t2567 = (-qJD(5) + t2496) * t2485 - t2579;
t2613 = -t2416 * t2554 + t2550 * t2567;
t2457 = t2483 ^ 2;
t2436 = t2482 + t2457;
t2612 = t2416 * t2550 + t2554 * t2567;
t2624 = t2436 * t2549 + t2548 * t2612;
t2625 = -t2436 * t2548 + t2549 * t2612;
t2630 = -t2551 * t2624 + t2555 * t2625;
t2631 = t2551 * t2625 + t2555 * t2624;
t2635 = -t2552 * t2631 + t2556 * t2630;
t2637 = t2553 * t2635 - t2557 * t2613;
t2636 = t2553 * t2613 + t2557 * t2635;
t2634 = t2552 * t2630 + t2556 * t2631;
t2426 = t2574 - t2599;
t2614 = -t2611 - t2457;
t2618 = -t2426 * t2550 + t2554 * t2614;
t2629 = t2548 * t2618;
t2628 = t2549 * t2618;
t2619 = t2426 * t2554 + t2550 * t2614;
t2627 = t2553 * t2619;
t2626 = t2557 * t2619;
t2547 = t2556 ^ 2;
t2559 = qJD(1) ^ 2;
t2533 = t2553 * g(1) - t2557 * g(2);
t2571 = qJDD(1) * pkin(1) + t2533;
t2572 = qJD(2) * pkin(2) - pkin(8) * t2604;
t2489 = t2525 * pkin(2) - t2572 * t2604 + t2571 + (pkin(8) * t2547 + pkin(7)) * t2559;
t2515 = t2516 ^ 2;
t2575 = pkin(3) * t2545 - qJ(4) * t2518;
t2434 = t2486 * pkin(3) + t2515 * qJ(4) - t2518 * t2575 - qJDD(4) + t2489;
t2610 = t2498 ^ 2;
t2609 = t2500 ^ 2;
t2608 = t2518 ^ 2;
t2535 = t2545 ^ 2;
t2607 = -2 * qJD(4);
t2606 = t2552 * g(3);
t2597 = t2498 * t2500;
t2596 = t2500 * t2545;
t2595 = t2516 * t2518;
t2594 = t2545 * t2498;
t2593 = t2545 * t2516;
t2592 = t2547 * t2559;
t2534 = -g(1) * t2557 - g(2) * t2553;
t2520 = -pkin(1) * t2559 + qJDD(1) * pkin(7) + t2534;
t2591 = t2552 * t2520;
t2590 = t2552 * t2559;
t2589 = t2556 * t2520;
t2588 = qJD(3) - t2545;
t2563 = -pkin(2) * t2592 + t2525 * pkin(8) - qJD(2) * t2572 - t2606;
t2568 = pkin(2) * t2590 + pkin(8) * t2605 - g(3);
t2569 = qJDD(2) * pkin(2) - t2524 * pkin(8) - t2591;
t2453 = t2555 * (t2563 + t2589) + t2551 * (t2556 * t2568 + t2569);
t2424 = -t2515 * pkin(3) + t2486 * qJ(4) - t2545 * t2575 + t2453;
t2452 = -t2551 * t2563 + t2555 * t2569 + (-t2551 * t2520 + t2555 * t2568) * t2556;
t2502 = t2585 + t2595;
t2560 = (-t2487 + t2593) * qJ(4) + t2502 * pkin(3) + t2452;
t2393 = t2549 * t2424 + t2498 * t2607 + t2548 * t2560;
t2466 = pkin(4) * t2498 - pkin(9) * t2500;
t2377 = -pkin(4) * t2535 + pkin(9) * t2585 - t2498 * t2466 + t2393;
t2437 = t2578 + t2596;
t2580 = -t2455 + t2594;
t2561 = pkin(4) * t2437 + pkin(9) * t2580 - t2434;
t2362 = t2554 * t2377 + t2550 * t2561;
t2546 = t2552 ^ 2;
t2587 = t2546 + t2547;
t2361 = -t2550 * t2377 + t2554 * t2561;
t2581 = t2548 * t2424 - t2549 * t2560;
t2570 = -qJD(5) * t2485 - t2579;
t2376 = -t2585 * pkin(4) - t2535 * pkin(9) + ((2 * qJD(4)) + t2466) * t2500 + t2581;
t2558 = qJD(2) ^ 2;
t2538 = t2556 * t2590;
t2537 = -t2558 - t2592;
t2536 = -t2546 * t2559 - t2558;
t2532 = -qJDD(2) + t2538;
t2531 = qJDD(2) + t2538;
t2530 = t2587 * t2559;
t2529 = -qJDD(1) * t2553 - t2557 * t2559;
t2528 = qJDD(1) * t2557 - t2553 * t2559;
t2527 = t2587 * qJDD(1);
t2526 = t2543 - 0.2e1 * t2583;
t2523 = 0.2e1 * t2582 + t2586;
t2519 = t2559 * pkin(7) + t2571;
t2510 = t2589 - t2606;
t2509 = -t2556 * g(3) - t2591;
t2508 = -t2535 - t2608;
t2507 = t2532 * t2556 - t2536 * t2552;
t2506 = -t2531 * t2552 + t2537 * t2556;
t2505 = t2532 * t2552 + t2536 * t2556;
t2504 = t2531 * t2556 + t2537 * t2552;
t2503 = -t2585 + t2595;
t2501 = -t2535 - t2515;
t2490 = -t2535 - t2609;
t2488 = -t2515 - t2608;
t2479 = -t2509 * t2552 + t2510 * t2556;
t2478 = t2509 * t2556 + t2510 * t2552;
t2475 = t2503 * t2555 - t2508 * t2551;
t2474 = t2503 * t2551 + t2508 * t2555;
t2473 = -t2516 * t2588 + t2573;
t2472 = t2487 + t2593;
t2471 = -t2518 * t2588 - t2577;
t2470 = (qJD(3) + t2545) * t2518 + t2577;
t2469 = t2501 * t2555 - t2502 * t2551;
t2468 = t2501 * t2551 + t2502 * t2555;
t2465 = -t2585 - t2597;
t2464 = t2585 - t2597;
t2463 = -t2535 - t2610;
t2456 = pkin(5) * t2483 - qJ(6) * t2485;
t2451 = -t2609 - t2610;
t2448 = t2465 * t2549 - t2490 * t2548;
t2447 = t2465 * t2548 + t2490 * t2549;
t2444 = -t2474 * t2552 + t2475 * t2556;
t2443 = t2474 * t2556 + t2475 * t2552;
t2442 = t2471 * t2555 - t2473 * t2551;
t2441 = t2471 * t2551 + t2473 * t2555;
t2440 = -t2455 - t2594;
t2438 = -t2578 + t2596;
t2433 = -t2468 * t2552 + t2469 * t2556;
t2432 = t2468 * t2556 + t2469 * t2552;
t2429 = t2463 * t2549 - t2464 * t2548;
t2428 = t2463 * t2548 + t2464 * t2549;
t2420 = -t2452 * t2551 + t2453 * t2555;
t2419 = t2452 * t2555 + t2453 * t2551;
t2413 = t2496 * t2485 - t2570;
t2412 = (qJD(5) + t2496) * t2485 + t2579;
t2411 = -t2447 * t2551 + t2448 * t2555;
t2410 = t2447 * t2555 + t2448 * t2551;
t2409 = -t2441 * t2552 + t2442 * t2556;
t2408 = t2441 * t2556 + t2442 * t2552;
t2407 = t2438 * t2549 - t2440 * t2548;
t2406 = t2438 * t2548 + t2440 * t2549;
t2401 = -t2428 * t2551 + t2429 * t2555;
t2400 = t2428 * t2555 + t2429 * t2551;
t2392 = t2500 * t2607 - t2581;
t2391 = -t2419 * t2552 + t2420 * t2556;
t2390 = t2419 * t2556 + t2420 * t2552;
t2385 = -t2410 * t2552 + t2411 * t2556;
t2384 = t2410 * t2556 + t2411 * t2552;
t2383 = t2413 * t2548 + t2628;
t2381 = -t2413 * t2549 + t2629;
t2379 = -t2406 * t2551 + t2407 * t2555;
t2378 = t2406 * t2555 + t2407 * t2551;
t2374 = t2412 * t2548 + t2628;
t2372 = -t2412 * t2549 + t2629;
t2366 = -t2400 * t2552 + t2401 * t2556;
t2365 = t2400 * t2556 + t2401 * t2552;
t2364 = -t2392 * t2548 + t2393 * t2549;
t2363 = t2392 * t2549 + t2393 * t2548;
t2360 = -t2570 * pkin(5) + (pkin(5) * t2496 - (2 * qJD(6))) * t2485 + t2376 - t2564 * qJ(6);
t2359 = -t2381 * t2551 + t2383 * t2555;
t2357 = t2381 * t2555 + t2383 * t2551;
t2355 = -t2378 * t2552 + t2379 * t2556;
t2354 = t2378 * t2556 + t2379 * t2552;
t2353 = -t2372 * t2551 + t2374 * t2555;
t2351 = t2372 * t2555 + t2374 * t2551;
t2345 = -pkin(5) * t2574 - qJ(6) * t2611 + t2485 * t2456 + qJDD(6) - t2361;
t2344 = -pkin(5) * t2611 + qJ(6) * t2574 + 0.2e1 * qJD(6) * t2496 - t2483 * t2456 + t2362;
t2343 = -t2363 * t2551 + t2364 * t2555;
t2342 = t2363 * t2555 + t2364 * t2551;
t2341 = -t2361 * t2550 + t2362 * t2554;
t2340 = t2361 * t2554 + t2362 * t2550;
t2339 = -t2357 * t2552 + t2359 * t2556;
t2337 = t2357 * t2556 + t2359 * t2552;
t2335 = -t2351 * t2552 + t2353 * t2556;
t2333 = t2351 * t2556 + t2353 * t2552;
t2327 = t2341 * t2549 + t2376 * t2548;
t2326 = t2341 * t2548 - t2376 * t2549;
t2325 = t2344 * t2554 + t2345 * t2550;
t2324 = t2344 * t2550 - t2345 * t2554;
t2323 = -t2342 * t2552 + t2343 * t2556;
t2322 = t2342 * t2556 + t2343 * t2552;
t2321 = t2325 * t2549 + t2360 * t2548;
t2320 = t2325 * t2548 - t2360 * t2549;
t2319 = -t2326 * t2551 + t2327 * t2555;
t2318 = t2326 * t2555 + t2327 * t2551;
t2317 = -t2320 * t2551 + t2321 * t2555;
t2316 = t2320 * t2555 + t2321 * t2551;
t2315 = -t2318 * t2552 + t2319 * t2556;
t2314 = t2318 * t2556 + t2319 * t2552;
t2313 = -t2316 * t2552 + t2317 * t2556;
t2312 = t2316 * t2556 + t2317 * t2552;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2529, -t2528, 0, -t2533 * t2553 + t2534 * t2557, 0, 0, 0, 0, 0, 0, t2506 * t2557 - t2526 * t2553, t2507 * t2557 + t2523 * t2553, t2527 * t2557 - t2530 * t2553, t2479 * t2557 - t2519 * t2553, 0, 0, 0, 0, 0, 0, t2433 * t2557 + t2470 * t2553, t2444 * t2557 + t2472 * t2553, t2409 * t2557 + t2488 * t2553, t2391 * t2557 - t2489 * t2553, 0, 0, 0, 0, 0, 0, t2366 * t2557 + t2437 * t2553, t2385 * t2557 - t2553 * t2580, t2355 * t2557 + t2451 * t2553, t2323 * t2557 - t2434 * t2553, 0, 0, 0, 0, 0, 0, t2335 * t2557 + t2627, t2638, t2636, t2315 * t2557 + t2340 * t2553, 0, 0, 0, 0, 0, 0, t2339 * t2557 + t2627, t2636, -t2638, t2313 * t2557 + t2324 * t2553; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2528, t2529, 0, t2533 * t2557 + t2534 * t2553, 0, 0, 0, 0, 0, 0, t2506 * t2553 + t2526 * t2557, t2507 * t2553 - t2523 * t2557, t2527 * t2553 + t2530 * t2557, t2479 * t2553 + t2519 * t2557, 0, 0, 0, 0, 0, 0, t2433 * t2553 - t2470 * t2557, t2444 * t2553 - t2472 * t2557, t2409 * t2553 - t2488 * t2557, t2391 * t2553 + t2489 * t2557, 0, 0, 0, 0, 0, 0, t2366 * t2553 - t2437 * t2557, t2385 * t2553 + t2557 * t2580, t2355 * t2553 - t2451 * t2557, t2323 * t2553 + t2434 * t2557, 0, 0, 0, 0, 0, 0, t2335 * t2553 - t2626, t2639, t2637, t2315 * t2553 - t2340 * t2557, 0, 0, 0, 0, 0, 0, t2339 * t2553 - t2626, t2637, -t2639, t2313 * t2553 - t2324 * t2557; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2504, t2505, 0, t2478, 0, 0, 0, 0, 0, 0, t2432, t2443, t2408, t2390, 0, 0, 0, 0, 0, 0, t2365, t2384, t2354, t2322, 0, 0, 0, 0, 0, 0, t2333, -t2332, t2634, t2314, 0, 0, 0, 0, 0, 0, t2337, t2634, t2332, t2312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2559, -qJDD(1), 0, t2534, 0, 0, 0, 0, 0, 0, t2506, t2507, t2527, t2479, 0, 0, 0, 0, 0, 0, t2433, t2444, t2409, t2391, 0, 0, 0, 0, 0, 0, t2366, t2385, t2355, t2323, 0, 0, 0, 0, 0, 0, t2335, t2338, t2635, t2315, 0, 0, 0, 0, 0, 0, t2339, t2635, -t2338, t2313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2559, 0, t2533, 0, 0, 0, 0, 0, 0, t2526, -t2523, t2530, t2519, 0, 0, 0, 0, 0, 0, -t2470, -t2472, -t2488, t2489, 0, 0, 0, 0, 0, 0, -t2437, t2580, -t2451, t2434, 0, 0, 0, 0, 0, 0, -t2619, t2396, -t2613, -t2340, 0, 0, 0, 0, 0, 0, -t2619, -t2613, -t2396, -t2324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2504, t2505, 0, t2478, 0, 0, 0, 0, 0, 0, t2432, t2443, t2408, t2390, 0, 0, 0, 0, 0, 0, t2365, t2384, t2354, t2322, 0, 0, 0, 0, 0, 0, t2333, -t2332, t2634, t2314, 0, 0, 0, 0, 0, 0, t2337, t2634, t2332, t2312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2537, t2532, t2543, t2510, 0, 0, 0, 0, 0, 0, t2469, t2475, t2442, t2420, 0, 0, 0, 0, 0, 0, t2401, t2411, t2379, t2343, 0, 0, 0, 0, 0, 0, t2353, t2358, t2630, t2319, 0, 0, 0, 0, 0, 0, t2359, t2630, -t2358, t2317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2531, t2536, -t2586, t2509, 0, 0, 0, 0, 0, 0, t2468, t2474, t2441, t2419, 0, 0, 0, 0, 0, 0, t2400, t2410, t2378, t2342, 0, 0, 0, 0, 0, 0, t2351, -t2350, t2631, t2318, 0, 0, 0, 0, 0, 0, t2357, t2631, t2350, t2316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2526, t2523, -t2530, -t2519, 0, 0, 0, 0, 0, 0, t2470, t2472, t2488, -t2489, 0, 0, 0, 0, 0, 0, t2437, -t2580, t2451, -t2434, 0, 0, 0, 0, 0, 0, t2619, -t2396, t2613, t2340, 0, 0, 0, 0, 0, 0, t2619, t2613, t2396, t2324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2501, t2503, t2471, t2453, 0, 0, 0, 0, 0, 0, t2429, t2448, t2407, t2364, 0, 0, 0, 0, 0, 0, t2374, -t2373, t2625, t2327, 0, 0, 0, 0, 0, 0, t2383, t2625, t2373, t2321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2502, t2508, t2473, t2452, 0, 0, 0, 0, 0, 0, t2428, t2447, t2406, t2363, 0, 0, 0, 0, 0, 0, t2372, -t2371, t2624, t2326, 0, 0, 0, 0, 0, 0, t2381, t2624, t2371, t2320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2470, t2472, t2488, -t2489, 0, 0, 0, 0, 0, 0, t2437, -t2580, t2451, -t2434, 0, 0, 0, 0, 0, 0, t2619, -t2396, t2613, t2340, 0, 0, 0, 0, 0, 0, t2619, t2613, t2396, t2324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2463, t2465, t2438, t2393, 0, 0, 0, 0, 0, 0, t2618, -t2398, t2612, t2341, 0, 0, 0, 0, 0, 0, t2618, t2612, t2398, t2325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2464, t2490, t2440, t2392, 0, 0, 0, 0, 0, 0, -t2412, -t2564, t2436, -t2376, 0, 0, 0, 0, 0, 0, -t2413, t2436, t2564, -t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2437, -t2580, t2451, -t2434, 0, 0, 0, 0, 0, 0, t2619, -t2396, t2613, t2340, 0, 0, 0, 0, 0, 0, t2619, t2613, t2396, t2324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2614, -t2425, t2567, t2362, 0, 0, 0, 0, 0, 0, t2614, t2567, t2425, t2344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2426, t2615, -t2416, t2361, 0, 0, 0, 0, 0, 0, t2426, -t2416, -t2615, -t2345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2412, t2564, -t2436, t2376, 0, 0, 0, 0, 0, 0, t2413, -t2436, -t2564, t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2614, t2567, t2425, t2344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2413, -t2436, -t2564, t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2426, t2416, t2615, t2345;];
f_new_reg  = t1;
