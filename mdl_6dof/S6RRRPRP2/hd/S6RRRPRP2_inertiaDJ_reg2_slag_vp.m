% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:37:18
% EndTime: 2019-03-09 16:37:28
% DurationCPUTime: 3.67s
% Computational Cost: add. (7419->265), mult. (16322->452), div. (0->0), fcn. (15918->8), ass. (0->170)
t116 = sin(qJ(5));
t113 = t116 ^ 2;
t119 = cos(qJ(5));
t114 = t119 ^ 2;
t115 = sin(pkin(10));
t206 = cos(qJ(3));
t160 = qJD(3) * t206;
t155 = pkin(2) * t160;
t117 = sin(qJ(3));
t176 = qJD(3) * t117;
t172 = pkin(2) * t176;
t185 = cos(pkin(10));
t80 = -t115 * t172 + t185 * t155;
t216 = (t113 + t114) * t80;
t213 = (t113 - t114) * qJD(5);
t214 = qJD(2) + qJD(3);
t120 = cos(qJ(2));
t167 = t206 * t120;
t118 = sin(qJ(2));
t182 = t117 * t118;
t135 = -t167 + t182;
t92 = t117 * t120 + t206 * t118;
t63 = t115 * t92 + t185 * t135;
t64 = -t115 * t135 + t185 * t92;
t109 = -t120 * pkin(2) - pkin(1);
t75 = pkin(3) * t135 + t109;
t125 = -t63 * pkin(4) + t64 * pkin(9) - t75;
t124 = t119 * t125;
t208 = -pkin(8) - pkin(7);
t153 = t208 * t206;
t94 = t118 * t153;
t98 = t208 * t120;
t70 = t117 * t98 + t94;
t136 = -t92 * qJ(4) + t70;
t170 = t117 * t208;
t93 = t118 * t170;
t71 = -t206 * t98 + t93;
t55 = -qJ(4) * t135 + t71;
t41 = t115 * t136 + t185 * t55;
t16 = -t116 * t41 - t124;
t197 = -t116 * t125 + t119 * t41;
t139 = t116 * t16 - t119 * t197;
t111 = qJD(5) * t116;
t130 = qJD(3) * t92;
t123 = -qJD(2) * t92 - t130;
t66 = -qJD(2) * t167 - t120 * t160 + t214 * t182;
t45 = -t115 * t66 - t185 * t123;
t46 = t115 * t123 - t185 * t66;
t204 = t118 * pkin(2);
t58 = pkin(3) * t130 + (pkin(3) * t92 + t204) * qJD(2);
t121 = t45 * pkin(4) - t46 * pkin(9) + t58;
t126 = (t120 * t153 - t93) * qJD(2);
t138 = t66 * qJ(4) - t92 * qJD(4);
t177 = qJD(2) * t120;
t47 = -t170 * t177 - t98 * t176 - t214 * t94;
t33 = qJ(4) * t123 - qJD(4) * t135 - t47;
t15 = t185 * t33 + (-qJD(3) * t93 + t98 * t160 + t126 + t138) * t115;
t5 = qJD(5) * t124 + t41 * t111 - t116 * t121 - t119 * t15;
t6 = -qJD(5) * t197 - t116 * t15 + t119 * t121;
t212 = qJD(5) * t139 + t5 * t116 - t6 * t119;
t12 = t63 * qJ(6) + t197;
t13 = -t63 * pkin(5) - t16;
t142 = t116 * t13 + t119 * t12;
t181 = t63 * qJD(6);
t186 = t45 * qJ(6);
t3 = t181 - t5 + t186;
t207 = t45 * pkin(5);
t4 = -t207 - t6;
t211 = qJD(5) * t142 + t3 * t116 - t4 * t119;
t210 = -0.2e1 * t213;
t209 = 0.2e1 * qJD(6);
t205 = pkin(2) * t117;
t48 = -t71 * qJD(3) + t126;
t14 = t115 * t33 - t185 * (t138 + t48);
t40 = t115 * t55 - t185 * t136;
t203 = t40 * t14;
t157 = t185 * t117;
t79 = (t206 * t115 + t157) * qJD(3) * pkin(2);
t202 = t40 * t79;
t174 = t206 * pkin(2);
t108 = t174 + pkin(3);
t82 = pkin(2) * t157 + t115 * t108;
t78 = pkin(9) + t82;
t201 = t45 * t78;
t200 = t63 * t78;
t199 = t80 * t63;
t112 = qJD(5) * t119;
t37 = t40 * t112;
t198 = t14 * t116 + t37;
t196 = t216 * t78;
t84 = -pkin(5) * t111 + qJ(6) * t112 + t116 * qJD(6);
t60 = t79 - t84;
t195 = -t60 + t84;
t106 = t115 * pkin(3) + pkin(9);
t194 = t216 * t106;
t81 = t185 * t108 - t115 * t205;
t77 = -pkin(4) - t81;
t193 = t77 * t112 + t79 * t116;
t192 = t106 * t45;
t191 = t106 * t63;
t190 = t113 * t46;
t43 = t114 * t46;
t187 = t119 * t46;
t23 = (pkin(5) * t116 - qJ(6) * t119) * t64 + t40;
t184 = qJD(5) * t23;
t179 = qJ(6) * qJD(5);
t178 = qJD(2) * t118;
t34 = 0.2e1 * t63 * t45;
t175 = -0.2e1 * pkin(1) * qJD(2);
t173 = pkin(2) * t178;
t171 = t116 * t187;
t169 = t64 * t111;
t168 = t64 * t112;
t22 = t23 * t111;
t36 = t40 * t111;
t166 = t106 * t111;
t165 = t106 * t112;
t107 = -t185 * pkin(3) - pkin(4);
t164 = t107 * t111;
t163 = t107 * t112;
t162 = t116 * t112;
t161 = t118 * t177;
t158 = t77 * t111 - t79 * t119;
t156 = pkin(5) * qJD(5) - qJD(6);
t61 = t64 ^ 2;
t154 = t61 * t162;
t129 = -qJ(6) * t46 + t156 * t64;
t137 = pkin(5) * t46 + t64 * t179;
t7 = t116 * t137 + t119 * t129 + t14;
t152 = t23 * t46 + t64 * t7;
t149 = t14 * t64 + t40 * t46;
t148 = t64 * t45 + t46 * t63;
t147 = -t64 * t77 + t200;
t146 = t79 * t64 - t199;
t145 = -t119 * pkin(5) - t116 * qJ(6);
t144 = t107 * t46 - t192;
t143 = -t107 * t64 + t191;
t141 = -t116 * t12 + t119 * t13;
t140 = -t116 * t197 - t119 * t16;
t30 = t63 * t112 + t116 * t45;
t28 = t63 * t111 - t119 * t45;
t88 = t145 + t107;
t134 = t46 * t88 - t64 * t84 - t192;
t69 = t145 + t77;
t133 = -t7 + (t64 * t69 - t200) * qJD(5);
t132 = -t7 + (t64 * t88 - t191) * qJD(5);
t131 = t109 * t92;
t128 = t46 * t69 + t60 * t64 - t199 - t201;
t127 = t46 * t77 + t146 - t201;
t83 = t145 * qJD(5) + t119 * qJD(6);
t1 = qJD(5) * t141 + t4 * t116 + t3 * t119;
t2 = qJD(5) * t140 - t6 * t116 - t5 * t119;
t101 = -0.2e1 * t162;
t100 = 0.2e1 * t162;
t76 = t88 * t111;
t65 = t69 * t111;
t51 = t78 * t112 + t116 * t80;
t50 = t78 * t111 - t119 * t80;
t49 = 0.2e1 * t216;
t31 = t116 * t46 + t168;
t29 = -t169 + t187;
t27 = -t43 - t190;
t26 = 0.2e1 * t64 * t43 - 0.2e1 * t154;
t25 = 0.2e1 * t64 * t190 + 0.2e1 * t154;
t24 = t64 * t213 - t171;
t19 = -0.2e1 * t64 * t171 + t213 * t61;
t18 = 0.4e1 * t64 * t162 + t190 - t43;
t9 = t148 * t116 + t63 * t168;
t8 = 0.2e1 * t148 * t119 - 0.2e1 * t63 * t169;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t161, 0.2e1 * (-t118 ^ 2 + t120 ^ 2) * qJD(2), 0, -0.2e1 * t161, 0, 0, t118 * t175, t120 * t175, 0, 0, -0.2e1 * t92 * t66, 0.2e1 * t123 * t92 + 0.2e1 * t135 * t66, 0, -0.2e1 * t135 * t123, 0, 0, 0.2e1 * qJD(3) * t131 + 0.2e1 * (t135 * t204 + t131) * qJD(2), -0.2e1 * t109 * t66 + 0.2e1 * t92 * t173, 0.2e1 * t123 * t71 + 0.2e1 * t135 * t47 - 0.2e1 * t48 * t92 + 0.2e1 * t70 * t66, 0.2e1 * t109 * t173 - 0.2e1 * t71 * t47 + 0.2e1 * t70 * t48, 0.2e1 * t64 * t46, -0.2e1 * t148, 0, t34, 0, 0, 0.2e1 * t75 * t45 + 0.2e1 * t58 * t63, 0.2e1 * t75 * t46 + 0.2e1 * t58 * t64, -0.2e1 * t15 * t63 - 0.2e1 * t41 * t45 + 0.2e1 * t149, 0.2e1 * t41 * t15 + 0.2e1 * t75 * t58 + 0.2e1 * t203, t26, 0.2e1 * t19, t8, t25, -0.2e1 * t9, t34, 0.2e1 * t116 * t149 + 0.2e1 * t16 * t45 + 0.2e1 * t37 * t64 + 0.2e1 * t6 * t63, 0.2e1 * t119 * t149 - 0.2e1 * t197 * t45 - 0.2e1 * t36 * t64 + 0.2e1 * t5 * t63, 0.2e1 * t140 * t46 + 0.2e1 * t212 * t64, 0.2e1 * t16 * t6 - 0.2e1 * t197 * t5 + 0.2e1 * t203, t26, t8, -0.2e1 * t19, t34, 0.2e1 * t9, t25, 0.2e1 * t116 * t152 - 0.2e1 * t13 * t45 + 0.2e1 * t168 * t23 - 0.2e1 * t4 * t63, 0.2e1 * t141 * t46 - 0.2e1 * t211 * t64, -0.2e1 * t119 * t152 + 0.2e1 * t12 * t45 + 0.2e1 * t22 * t64 + 0.2e1 * t3 * t63, 0.2e1 * t12 * t3 + 0.2e1 * t13 * t4 + 0.2e1 * t23 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, 0, -t178, 0, -pkin(7) * t177, pkin(7) * t178, 0, 0, 0, 0, -t66, 0, t123, 0, t48, t47, t123 * t205 - t135 * t155 + t92 * t172 + t66 * t174 (t206 * t48 - t47 * t117 + (-t117 * t70 + t206 * t71) * qJD(3)) * pkin(2), 0, 0, t46, 0, -t45, 0, -t14, -t15, -t82 * t45 - t81 * t46 + t146, -t14 * t81 + t15 * t82 + t41 * t80 + t202, -t24, -t18, t30, t24, -t28, 0, t36 + (-qJD(5) * t147 - t14) * t119 + t127 * t116, t111 * t147 + t119 * t127 + t198, t2, -t139 * t80 + t14 * t77 + t2 * t78 + t202, -t24, t30, t18, 0, t28, t24, t116 * t128 + t119 * t133 + t22, t1, t133 * t116 + (-t128 - t184) * t119, t1 * t78 + t142 * t80 + t23 * t60 + t7 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t172, -0.2e1 * t155, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t79, -0.2e1 * t80, 0, -0.2e1 * t81 * t79 + 0.2e1 * t82 * t80, t100, t210, 0, t101, 0, 0, 0.2e1 * t158, 0.2e1 * t193, t49, 0.2e1 * t77 * t79 + 0.2e1 * t196, t100, 0, -t210, 0, 0, t101, -0.2e1 * t60 * t119 + 0.2e1 * t65, t49, -0.2e1 * t112 * t69 - 0.2e1 * t60 * t116, 0.2e1 * t69 * t60 + 0.2e1 * t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, 0, t123, 0, t48, t47, 0, 0, 0, 0, t46, 0, -t45, 0, -t14, -t15 (-t115 * t45 - t185 * t46) * pkin(3) (t115 * t15 - t185 * t14) * pkin(3), -t24, -t18, t30, t24, -t28, 0, t36 + t144 * t116 + (-qJD(5) * t143 - t14) * t119, t111 * t143 + t119 * t144 + t198, t2, t106 * t2 + t14 * t107, -t24, t30, t18, 0, t28, t24, t116 * t134 + t119 * t132 + t22, t1, t132 * t116 + (-t134 - t184) * t119, t1 * t106 - t23 * t84 + t7 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t155, 0, 0, 0, 0, 0, 0, 0, 0, -t79, -t80, 0 (t115 * t80 - t185 * t79) * pkin(3), t100, t210, 0, t101, 0, 0, t158 + t164, t163 + t193, t216, t79 * t107 + t194, t100, 0, -t210, 0, 0, t101, t195 * t119 + t65 + t76, t216, t195 * t116 + (-t69 - t88) * t112, t60 * t88 - t69 * t84 + t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t210, 0, t101, 0, 0, 0.2e1 * t164, 0.2e1 * t163, 0, 0, t100, 0, -t210, 0, 0, t101, 0.2e1 * t84 * t119 + 0.2e1 * t76, 0, -0.2e1 * t112 * t88 + 0.2e1 * t84 * t116, -0.2e1 * t88 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t46, 0, t58, 0, 0, 0, 0, 0, 0, -t28, -t30, t27, -t212, 0, 0, 0, 0, 0, 0, -t28, t27, t30, t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t31, t45, t6, t5, 0, 0, 0, t29, 0, t45, t31, 0, t6 + 0.2e1 * t207, t116 * t129 - t119 * t137, 0.2e1 * t181 - t5 + 0.2e1 * t186, -t4 * pkin(5) + t3 * qJ(6) + t12 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, -t111, 0, -t51, t50, 0, 0, 0, t112, 0, 0, t111, 0, -t51, t83, -t50 (-pkin(5) * t80 - t78 * t179) * t116 + (qJ(6) * t80 - t156 * t78) * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, -t111, 0, -t165, t166, 0, 0, 0, t112, 0, 0, t111, 0, -t165, t83, -t166, t83 * t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, -t112, 0, 0, 0, 0, 0, 0, 0, 0, -t111, 0, t112, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, qJ(6) * t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, t29, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
