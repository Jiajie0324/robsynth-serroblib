% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:37:18
% EndTime: 2019-03-09 16:37:35
% DurationCPUTime: 6.16s
% Computational Cost: add. (15675->539), mult. (40553->655), div. (0->0), fcn. (30182->8), ass. (0->289)
t231 = sin(qJ(3));
t232 = sin(qJ(2));
t316 = qJD(1) * t232;
t301 = t231 * t316;
t234 = cos(qJ(3));
t235 = cos(qJ(2));
t323 = t234 * t235;
t183 = qJD(1) * t323 - t301;
t197 = t231 * t235 + t232 * t234;
t184 = qJD(1) * t197;
t229 = sin(pkin(10));
t352 = cos(pkin(10));
t145 = -t352 * t183 + t184 * t229;
t392 = qJD(5) + t145;
t290 = t392 ^ 2;
t230 = sin(qJ(5));
t233 = cos(qJ(5));
t253 = t229 * t183 + t184 * t352;
t309 = qJD(2) + qJD(3);
t131 = t230 * t309 + t233 * t253;
t291 = t131 * t392;
t129 = t230 * t253 - t233 * t309;
t289 = t392 * t129;
t312 = qJD(5) * t233;
t331 = t145 * t233;
t393 = t312 + t331;
t313 = qJD(5) * t230;
t332 = t145 * t230;
t398 = t313 + t332;
t375 = -pkin(8) - pkin(7);
t208 = t375 * t235;
t203 = qJD(1) * t208;
t185 = t231 * t203;
t207 = t375 * t232;
t201 = qJD(1) * t207;
t369 = qJD(2) * pkin(2);
t192 = t201 + t369;
t151 = t234 * t192 + t185;
t179 = t184 * qJ(4);
t127 = t151 - t179;
t118 = pkin(3) * t309 + t127;
t189 = t234 * t203;
t152 = t192 * t231 - t189;
t351 = qJ(4) * t183;
t128 = t152 + t351;
t298 = t352 * t128;
t82 = t229 * t118 + t298;
t80 = pkin(9) * t309 + t82;
t223 = -pkin(2) * t235 - pkin(1);
t206 = qJD(1) * t223;
t160 = -t183 * pkin(3) + qJD(4) + t206;
t89 = pkin(4) * t145 - pkin(9) * t253 + t160;
t41 = t230 * t89 + t233 * t80;
t27 = qJ(6) * t392 + t41;
t324 = t231 * t232;
t281 = t309 * t324;
t310 = qJD(1) * qJD(2);
t299 = t235 * t310;
t314 = qJD(3) * t234;
t304 = t235 * t314;
t318 = -qJD(1) * t304 - t234 * t299;
t149 = qJD(1) * t281 + t318;
t382 = t184 * t309;
t293 = t229 * t149 - t352 * t382;
t372 = pkin(5) * t293;
t306 = qJD(2) * t375;
t284 = qJD(1) * t306;
t193 = t232 * t284;
t194 = t235 * t284;
t315 = qJD(3) * t231;
t286 = -t192 * t314 - t234 * t193 - t231 * t194 - t203 * t315;
t72 = -qJ(4) * t382 + t183 * qJD(4) - t286;
t174 = t234 * t194;
t292 = -t231 * t193 + t174;
t111 = -qJD(3) * t152 + t292;
t73 = qJ(4) * t149 - qJD(4) * t184 + t111;
t35 = t229 * t73 + t352 * t72;
t224 = pkin(2) * t316;
t135 = pkin(3) * t382 + qJD(2) * t224;
t239 = t352 * t149 + t229 * t382;
t57 = -pkin(4) * t293 + pkin(9) * t239 + t135;
t7 = -t230 * t35 + t233 * t57 - t80 * t312 - t89 * t313;
t4 = -t7 + t372;
t397 = t27 * t392 - t4;
t40 = -t230 * t80 + t233 * t89;
t6 = t230 * t57 + t233 * t35 + t89 * t312 - t313 * t80;
t396 = -t392 * t40 + t6;
t259 = t392 * t41 + t7;
t395 = t145 * t253;
t394 = -qJD(5) * t309 + t239;
t158 = -qJD(2) * t323 + t281 - t304;
t249 = t197 * qJD(3);
t159 = qJD(2) * t197 + t249;
t114 = -t158 * t352 - t229 * t159;
t196 = -t323 + t324;
t155 = -t229 * t196 + t197 * t352;
t339 = t131 * t230;
t342 = t129 * t233;
t267 = t339 + t342;
t338 = t131 * t233;
t343 = t129 * t230;
t70 = -t230 * t394 + t253 * t312;
t358 = t70 * t233;
t69 = t233 * t394 + t253 * t313;
t359 = t69 * t230;
t391 = t155 * (qJD(5) * (-t338 + t343) - t358 + t359) - t267 * t114;
t226 = t232 * t369;
t390 = 0.2e1 * t226;
t389 = -0.2e1 * t310;
t350 = qJ(6) * t293;
t2 = qJD(6) * t392 - t350 + t6;
t388 = t2 * t233 + t4 * t230;
t34 = t229 * t72 - t352 * t73;
t121 = t229 * t128;
t81 = t118 * t352 - t121;
t79 = -pkin(4) * t309 - t81;
t387 = t34 * t230 + t79 * t312;
t157 = t234 * t201 + t185;
t133 = -t179 + t157;
t156 = -t201 * t231 + t189;
t258 = t156 - t351;
t296 = t352 * t231;
t370 = pkin(2) * qJD(3);
t354 = -t133 * t229 + t352 * t258 + (t229 * t234 + t296) * t370;
t325 = t229 * t231;
t176 = (t234 * t352 - t325) * t370;
t94 = t133 * t352 + t229 * t258;
t386 = t176 - t94;
t13 = pkin(5) * t70 + qJ(6) * t69 - qJD(6) * t131 + t34;
t44 = t129 * pkin(5) - t131 * qJ(6) + t79;
t385 = -t13 * t233 + t44 * t313;
t384 = t233 * t34 - t79 * t313;
t383 = t145 * t309;
t154 = t196 * t352 + t197 * t229;
t165 = pkin(3) * t196 + t223;
t102 = pkin(4) * t154 - pkin(9) * t155 + t165;
t162 = t234 * t207 + t208 * t231;
t141 = -qJ(4) * t197 + t162;
t163 = t231 * t207 - t234 * t208;
t142 = -qJ(4) * t196 + t163;
t104 = t229 * t141 + t142 * t352;
t380 = t230 * t102 + t233 * t104;
t379 = t398 * pkin(5) - t393 * qJ(6) - t230 * qJD(6);
t105 = t230 * t293;
t113 = -t158 * t229 + t159 * t352;
t346 = t114 * t230;
t257 = t155 * t312 + t346;
t378 = -t105 * t155 + t113 * t129 + t154 * t70 + t257 * t392;
t202 = t232 * t306;
t204 = t235 * t306;
t117 = -qJD(3) * t163 - t231 * t202 + t234 * t204;
t242 = qJ(4) * t158 - qJD(4) * t197 + t117;
t116 = t234 * t202 + t231 * t204 + t207 * t314 + t208 * t315;
t92 = -qJ(4) * t159 - qJD(4) * t196 + t116;
t50 = t229 * t242 + t352 * t92;
t148 = pkin(3) * t159 + t226;
t63 = pkin(4) * t113 - pkin(9) * t114 + t148;
t12 = -qJD(5) * t380 - t230 * t50 + t233 * t63;
t376 = t131 ^ 2;
t374 = pkin(3) * t184;
t373 = pkin(3) * t229;
t371 = pkin(5) * t253;
t5 = t6 * t233;
t87 = t127 * t352 - t121;
t98 = pkin(4) * t253 + pkin(9) * t145 + t374;
t52 = t230 * t98 + t233 * t87;
t95 = t224 + t98;
t54 = t230 * t95 + t233 * t94;
t103 = -t352 * t141 + t229 * t142;
t368 = t103 * t34;
t367 = t13 * t230;
t365 = t131 * t44;
t364 = t145 * t44;
t363 = t145 * t79;
t362 = t230 * t27;
t68 = t230 * t70;
t360 = t233 * t69;
t222 = pkin(2) * t234 + pkin(3);
t178 = pkin(2) * t296 + t229 * t222;
t170 = pkin(9) + t178;
t329 = t176 * t233;
t357 = -t129 * t329 - t170 * t358;
t356 = -t129 * t312 - t68;
t355 = t379 + t354;
t86 = t127 * t229 + t298;
t353 = -t86 + t379;
t349 = t293 * t154;
t348 = t293 * t170;
t219 = pkin(9) + t373;
t347 = t293 * t219;
t345 = t114 * t233;
t344 = t129 * t170;
t341 = t131 * t129;
t340 = t131 * t253;
t337 = t392 * t253;
t336 = t253 * t129;
t335 = t253 ^ 2;
t333 = t145 ^ 2;
t328 = t184 * t183;
t327 = t206 * t184;
t326 = t219 * t230;
t106 = t233 * t293;
t237 = qJD(1) ^ 2;
t322 = t235 * t237;
t236 = qJD(2) ^ 2;
t321 = t236 * t232;
t320 = t236 * t235;
t319 = qJD(6) - t40;
t317 = t232 ^ 2 - t235 ^ 2;
t308 = -t40 * t331 - t41 * t332 + t5;
t307 = t232 * t322;
t305 = t352 * pkin(3);
t303 = t170 * t312;
t302 = t219 * t312;
t300 = t129 ^ 2 - t376;
t49 = t229 * t92 - t352 * t242;
t124 = t131 * t313;
t295 = -t124 - t360;
t294 = pkin(1) * t389;
t288 = t253 * t309;
t285 = t253 * t41 + t387;
t283 = t232 * t299;
t220 = -t305 - pkin(4);
t280 = t233 * pkin(5) + t230 * qJ(6);
t279 = pkin(5) * t230 - qJ(6) * t233;
t278 = -t145 * t81 + t253 * t82;
t26 = -pkin(5) * t392 + t319;
t277 = t233 * t26 - t362;
t276 = t230 * t26 + t233 * t27;
t275 = -t230 * t41 - t233 * t40;
t274 = t230 * t40 - t233 * t41;
t51 = -t230 * t87 + t233 * t98;
t53 = -t230 * t94 + t233 * t95;
t177 = -pkin(2) * t325 + t222 * t352;
t271 = t348 + t363;
t270 = t347 + t363;
t269 = t131 * t176 - t170 * t69;
t60 = t102 * t233 - t104 * t230;
t265 = t392 * t393 - t105;
t169 = -pkin(4) - t177;
t264 = -t398 * t392 - t106;
t263 = -t253 * t27 - t44 * t331 - t367;
t262 = t253 * t26 + t385;
t261 = -t253 * t40 - t384;
t260 = -t160 * t253 - t34;
t256 = -t155 * t313 + t345;
t255 = -t176 * t230 - t303;
t254 = -t170 * t313 + t329;
t11 = t102 * t312 - t104 * t313 + t230 * t63 + t233 * t50;
t252 = -t206 * t183 + t286;
t251 = t26 * t393 - t27 * t332 + t388;
t250 = (t338 + t343) * t219;
t248 = t230 * t289 - t358;
t19 = -t264 - t336;
t246 = t145 * t160 - t35;
t245 = qJD(5) * t277 + t388;
t244 = qJD(5) * t275 - t230 * t7 + t5;
t243 = t129 * t257 + t155 * t68;
t238 = t70 - t291;
t191 = -t280 + t220;
t164 = t224 + t374;
t161 = t169 - t280;
t139 = t253 * qJ(6);
t134 = -t183 ^ 2 + t184 ^ 2;
t119 = -t318 + (-t183 - t301) * t309;
t96 = pkin(5) * t131 + qJ(6) * t129;
t78 = -t239 + t383;
t77 = t288 + t293;
t67 = t219 * t358;
t65 = -t333 + t335;
t64 = t155 * t279 + t103;
t48 = -pkin(5) * t154 - t60;
t47 = qJ(6) * t154 + t380;
t45 = t113 * t392 - t349;
t43 = -t69 + t289;
t39 = -t53 - t371;
t38 = t139 + t54;
t37 = -t51 - t371;
t36 = t139 + t52;
t22 = t233 * t291 - t359;
t21 = t265 - t340;
t17 = t131 * t256 - t155 * t360;
t16 = t279 * t114 + (qJD(5) * t280 - qJD(6) * t233) * t155 + t49;
t15 = -t145 * t267 + t295 + t356;
t14 = t124 + (t131 * t145 + t70) * t230 + (t69 + t289) * t233;
t10 = -t106 * t155 + t131 * t113 - t69 * t154 + t256 * t392;
t9 = -t113 * pkin(5) - t12;
t8 = qJ(6) * t113 + qJD(6) * t154 + t11;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t283, t317 * t389, t320, -0.2e1 * t283, -t321, 0, -pkin(7) * t320 + t232 * t294, pkin(7) * t321 + t235 * t294, 0, 0, -t149 * t197 - t158 * t184, t149 * t196 - t158 * t183 - t184 * t159 - t197 * t382, -t158 * t309, -t183 * t159 + t196 * t382, -t159 * t309, 0, -t183 * t226 + t206 * t159 + t117 * t309 + (t223 * t249 + (t232 * pkin(2) * t196 + t197 * t223) * qJD(2)) * qJD(1), -t116 * t309 - t223 * t149 - t206 * t158 + t184 * t390, -t111 * t197 + t116 * t183 - t117 * t184 + t162 * t149 + t151 * t158 - t152 * t159 - t163 * t382 + t196 * t286, t111 * t162 + t116 * t152 + t117 * t151 - t163 * t286 + t206 * t390, t253 * t114 - t155 * t239, -t113 * t253 - t114 * t145 + t154 * t239 + t155 * t293, t114 * t309, t113 * t145 - t349, -t113 * t309, 0, t160 * t113 + t135 * t154 + t148 * t145 - t165 * t293 - t309 * t49, t160 * t114 + t135 * t155 + t148 * t253 - t165 * t239 - t309 * t50, -t103 * t239 + t104 * t293 - t82 * t113 - t81 * t114 - t50 * t145 - t35 * t154 + t34 * t155 + t253 * t49, t104 * t35 + t135 * t165 + t148 * t160 - t49 * t81 + t50 * t82 + t368, t17, t391, t10, t243, -t378, t45, t103 * t70 + t113 * t40 + t12 * t392 + t129 * t49 + t154 * t7 + t155 * t387 - t293 * t60 + t79 * t346, -t103 * t69 - t11 * t392 - t113 * t41 + t131 * t49 - t154 * t6 + t155 * t384 + t293 * t380 + t79 * t345, -t11 * t129 - t12 * t131 + t60 * t69 - t380 * t70 + t275 * t114 + (qJD(5) * t274 - t230 * t6 - t233 * t7) * t155, t11 * t41 + t12 * t40 + t380 * t6 + t49 * t79 + t60 * t7 + t368, t17, t10, -t391, t45, t378, t243, t44 * t346 + t293 * t48 - t113 * t26 + t129 * t16 - t392 * t9 - t154 * t4 + t64 * t70 + (t312 * t44 + t367) * t155, -t129 * t8 + t131 * t9 - t47 * t70 - t48 * t69 + t277 * t114 + (-qJD(5) * t276 - t2 * t230 + t233 * t4) * t155, t113 * t27 - t131 * t16 + t154 * t2 + t155 * t385 - t293 * t47 - t44 * t345 + t392 * t8 + t64 * t69, t13 * t64 + t16 * t44 + t2 * t47 + t26 * t9 + t27 * t8 + t4 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t307, t317 * t237, 0, t307, 0, 0, t237 * pkin(1) * t232, pkin(1) * t322, 0, 0, -t328, t134, t119, t328, 0, 0, t203 * t314 + t174 + t183 * t224 - t327 - t156 * t309 + (-qJD(3) * t192 - t309 * t370 - t193) * t231, t157 * t309 + (-t184 * t316 - t309 * t314) * pkin(2) + t252 (t152 + t156) * t184 + (t151 - t157) * t183 + (t234 * t149 + (t234 * t183 + t231 * t184) * qJD(3) - t231 * t382) * pkin(2), -t151 * t156 - t152 * t157 + (-t206 * t316 - t286 * t231 + t111 * t234 + (-t151 * t231 + t152 * t234) * qJD(3)) * pkin(2), t395, t65, t78, -t395, t77, 0, -t164 * t145 - t309 * t354 + t260, -t164 * t253 - t309 * t386 + t246, -t145 * t386 + t177 * t239 + t178 * t293 + t253 * t354 + t278, -t160 * t164 - t177 * t34 + t178 * t35 - t354 * t81 + t386 * t82, t22, t15, t21, t248, -t19, -t337, t169 * t70 + t271 * t230 + t354 * t129 + (t255 - t53) * t392 + t261, -t169 * t69 + t271 * t233 + t354 * t131 + (-t254 + t54) * t392 + t285, t129 * t54 + t131 * t53 + (t131 * t170 - t40) * t312 + (-t7 + (-t41 + t344) * qJD(5) + t269) * t230 + t308 + t357, t169 * t34 + t170 * t244 - t176 * t274 + t354 * t79 - t40 * t53 - t41 * t54, t22, t21, t14, -t337, t19, t248, t161 * t70 + (t348 + t364) * t230 + t355 * t129 + (t255 + t39) * t392 + t262, t129 * t38 + (-t39 + t303) * t131 + ((-t27 + t344) * qJD(5) + t269) * t230 + t251 + t357, t161 * t69 + (-qJD(5) * t44 - t348) * t233 - t355 * t131 + (t254 - t38) * t392 + t263, t13 * t161 + t170 * t245 + t176 * t276 - t26 * t39 - t27 * t38 + t355 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, t134, t119, t328, 0, 0, t152 * qJD(2) + t292 - t327, t151 * t309 + t252, 0, 0, t395, t65, t78, -t395, t77, 0, -t145 * t374 + t309 * t86 + t260, -t253 * t374 + t309 * t87 + t246, t87 * t145 + t239 * t305 - t253 * t86 + t293 * t373 + t278, t81 * t86 - t82 * t87 + (-t160 * t184 + t229 * t35 - t34 * t352) * pkin(3), t22, t15, t21, t248, -t19, -t337, -t129 * t86 + t220 * t70 + t270 * t230 + (-t51 - t302) * t392 + t261, -t131 * t86 - t220 * t69 + t270 * t233 + (t219 * t313 + t52) * t392 + t285, t129 * t52 + t131 * t51 - t67 + (-t219 * t69 - t7) * t230 + (t250 + t275) * qJD(5) + t308, t219 * t244 + t220 * t34 - t40 * t51 - t41 * t52 - t79 * t86, t22, t21, t14, -t337, t19, t248, t191 * t70 + (t347 + t364) * t230 + (t37 - t302) * t392 + t353 * t129 + t262, -t69 * t326 + t129 * t36 - t131 * t37 - t67 + (t250 - t362) * qJD(5) + t251, -t219 * t106 - t392 * t36 + t191 * t69 - t353 * t131 + (-t233 * t44 - t326 * t392) * qJD(5) + t263, t13 * t191 + t219 * t245 - t26 * t37 - t27 * t36 + t353 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288 - t293, -t239 - t383, -t333 - t335, t145 * t82 + t253 * t81 + t135, 0, 0, 0, 0, 0, 0, t264 - t336, -t233 * t290 + t105 - t340 (-t129 * t145 + t69) * t233 + t230 * t291 + t356, t396 * t230 + t259 * t233 - t253 * t79, 0, 0, 0, 0, 0, 0, -t230 * t290 - t106 - t336 -(-t339 + t342) * t145 - t295 + t356, t265 + t340, -t253 * t44 + t397 * t233 + (t26 * t392 + t2) * t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341, -t300, t43, -t341, -t238, -t293, -t131 * t79 + t259, t129 * t79 - t396, 0, 0, t341, t43, t300, -t293, t238, -t341, -t129 * t96 + t259 - t365 - 0.2e1 * t372, pkin(5) * t69 - qJ(6) * t70 + (t27 - t41) * t131 + (t26 - t319) * t129, -0.2e1 * t350 - t129 * t44 + t131 * t96 + (0.2e1 * qJD(6) - t40) * t392 + t6, -pkin(5) * t4 + qJ(6) * t2 - t26 * t41 + t27 * t319 - t44 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293 + t341, t43, -t376 - t290, t365 - t397;];
tauc_reg  = t1;
