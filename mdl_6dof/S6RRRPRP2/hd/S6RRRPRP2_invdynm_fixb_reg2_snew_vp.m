% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 07:35
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPRP2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP2_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 07:34:26
% EndTime: 2019-05-07 07:35:31
% DurationCPUTime: 68.77s
% Computational Cost: add. (359818->982), mult. (814607->1262), div. (0->0), fcn. (609649->10), ass. (0->650)
t2038 = cos(qJ(5));
t2034 = sin(qJ(5));
t2035 = sin(qJ(3));
t2039 = cos(qJ(3));
t2040 = cos(qJ(2));
t2186 = qJD(1) * t2040;
t2036 = sin(qJ(2));
t2187 = qJD(1) * t2036;
t1988 = -t2035 * t2187 + t2039 * t2186;
t1989 = (t2035 * t2040 + t2036 * t2039) * qJD(1);
t2032 = sin(pkin(10));
t2033 = cos(pkin(10));
t1953 = t2032 * t1988 + t2033 * t1989;
t2029 = qJD(2) + qJD(3);
t1922 = t1953 * t2034 - t2038 * t2029;
t2023 = qJD(2) * t2186;
t2129 = t2036 * qJDD(1);
t2000 = t2023 + t2129;
t2026 = t2040 * qJDD(1);
t2116 = qJD(2) * t2187;
t2001 = t2026 - t2116;
t2106 = t2000 * t2035 - t2039 * t2001;
t1927 = -qJD(3) * t1989 - t2106;
t1928 = t1988 * qJD(3) + t2039 * t2000 + t2035 * t2001;
t1860 = t2032 * t1927 + t2033 * t1928;
t2128 = qJDD(2) + qJDD(3);
t2068 = -t2038 * t1860 - t2034 * t2128;
t1805 = -t1922 * qJD(5) - t2068;
t1951 = -t2033 * t1988 + t1989 * t2032;
t1947 = qJD(5) + t1951;
t2157 = t1922 * t1947;
t2208 = -t2157 + t1805;
t2173 = t2208 * t2034;
t1924 = t1953 * t2038 + t2029 * t2034;
t2108 = -t1860 * t2034 + t2038 * t2128;
t1804 = qJD(5) * t1924 - t2108;
t1877 = t1947 * t1924;
t2216 = t1804 + t1877;
t1679 = -t2216 * t2038 - t2173;
t1921 = t1924 ^ 2;
t2197 = t1922 ^ 2;
t2211 = t1921 - t2197;
t1628 = t1679 * t2032 - t2033 * t2211;
t1630 = t1679 * t2033 + t2032 * t2211;
t1559 = t1628 * t2039 + t1630 * t2035;
t1560 = t1628 * t2035 - t1630 * t2039;
t1501 = t1559 * t2036 + t1560 * t2040;
t2172 = t2208 * t2038;
t1681 = -t2216 * t2034 + t2172;
t2037 = sin(qJ(1));
t2041 = cos(qJ(1));
t2311 = t1501 * t2037 + t1681 * t2041;
t2310 = t1501 * t2041 - t1681 * t2037;
t2196 = t1947 ^ 2;
t1873 = t2197 - t2196;
t2107 = -t2033 * t1927 + t1928 * t2032;
t1858 = qJDD(5) + t2107;
t1865 = t1924 * t1922;
t2214 = t1858 + t1865;
t2229 = t2214 * t2034;
t1734 = t1873 * t2038 - t2229;
t1772 = t1804 - t1877;
t1663 = t1734 * t2032 + t1772 * t2033;
t1667 = t1734 * t2033 - t1772 * t2032;
t1586 = t1663 * t2039 + t1667 * t2035;
t1589 = t1663 * t2035 - t1667 * t2039;
t1517 = t1586 * t2036 + t1589 * t2040;
t2228 = t2214 * t2038;
t1730 = t1873 * t2034 + t2228;
t2309 = t1517 * t2037 + t1730 * t2041;
t2308 = t1517 * t2041 - t1730 * t2037;
t1500 = t1559 * t2040 - t1560 * t2036;
t1514 = t1586 * t2040 - t1589 * t2036;
t1874 = t1921 - t2196;
t2215 = t1858 - t1865;
t2167 = t2215 * t2034;
t2254 = -t1874 * t2038 + t2167;
t2207 = t2157 + t1805;
t2166 = t2215 * t2038;
t2253 = t1874 * t2034 + t2166;
t2269 = t2032 * t2207 + t2033 * t2253;
t2270 = t2032 * t2253 - t2033 * t2207;
t2280 = t2035 * t2269 + t2039 * t2270;
t2281 = -t2035 * t2270 + t2039 * t2269;
t2299 = -t2036 * t2280 + t2040 * t2281;
t2307 = t2037 * t2299 - t2041 * t2254;
t2306 = t2037 * t2254 + t2041 * t2299;
t2206 = -t2196 - t2197;
t2225 = t2038 * t2206 - t2167;
t2250 = t2032 * t2216 + t2033 * t2225;
t2251 = t2032 * t2225 - t2033 * t2216;
t2265 = t2035 * t2250 + t2039 * t2251;
t2266 = -t2035 * t2251 + t2039 * t2250;
t2279 = t2036 * t2266 + t2040 * t2265;
t2305 = pkin(1) * t2279;
t2304 = pkin(7) * t2279;
t2226 = t2034 * t2206 + t2166;
t2278 = -t2036 * t2265 + t2040 * t2266;
t2303 = -pkin(1) * t2226 + pkin(7) * t2278;
t2302 = pkin(6) * (t2037 * t2278 - t2041 * t2226);
t2301 = pkin(6) * (t2037 * t2226 + t2041 * t2278);
t2300 = t2036 * t2281 + t2040 * t2280;
t1835 = t2196 + t1921;
t1711 = t1835 * t2038 + t2229;
t2298 = pkin(1) * t1711;
t2297 = pkin(2) * t1711;
t2296 = pkin(2) * t2265;
t2295 = pkin(3) * t1711;
t2294 = pkin(4) * t1711;
t2293 = pkin(8) * t2265;
t2292 = pkin(9) * t1711;
t1721 = t1835 * t2034 - t2228;
t2291 = pkin(9) * t1721;
t2288 = t1711 * t2037;
t2287 = t1711 * t2041;
t2286 = t1721 * t2032;
t2285 = t1721 * t2033;
t2282 = -pkin(2) * t2226 + pkin(8) * t2266;
t2277 = pkin(3) * t2251;
t2276 = qJ(4) * t2251;
t2154 = t1947 * t2034;
t1869 = t1924 * t2154;
t2153 = t1947 * t2038;
t2122 = t1922 * t2153;
t2088 = t1869 - t2122;
t2201 = t1858 * t2032 + t2033 * t2088;
t2204 = -t2033 * t1858 + t2032 * t2088;
t2223 = t2035 * t2201 + t2039 * t2204;
t2224 = -t2035 * t2204 + t2039 * t2201;
t2245 = -t2036 * t2223 + t2040 * t2224;
t2275 = t2037 * t2245;
t2273 = t2041 * t2245;
t2271 = -pkin(3) * t2226 + qJ(4) * t2250;
t1868 = t1922 * t2154;
t2213 = -t1804 * t2038 + t1868;
t2075 = t1804 * t2034 + t2122;
t2124 = t2032 * t1865;
t2202 = t2033 * t2075 - t2124;
t2123 = t2033 * t1865;
t2203 = t2032 * t2075 + t2123;
t2221 = t2035 * t2202 + t2039 * t2203;
t2222 = -t2035 * t2203 + t2039 * t2202;
t2247 = -t2036 * t2221 + t2040 * t2222;
t2268 = t2037 * t2247 - t2041 * t2213;
t2267 = t2037 * t2213 + t2041 * t2247;
t2261 = pkin(4) * t2226;
t2260 = pkin(9) * t2225;
t2259 = pkin(9) * t2226;
t2258 = -qJ(6) * t2034 - pkin(4);
t2257 = qJ(6) * t2208;
t2031 = t2040 ^ 2;
t2043 = qJD(1) ^ 2;
t2010 = g(1) * t2037 - t2041 * g(2);
t2078 = qJDD(1) * pkin(1) + t2010;
t2079 = qJD(2) * pkin(2) - pkin(8) * t2187;
t1930 = pkin(2) * t2001 - t2079 * t2187 + t2078 + (pkin(8) * t2031 + pkin(7)) * t2043;
t2121 = t1924 * t2153;
t1762 = t1805 * t2034 + t2121;
t1766 = t1805 * t2038 - t1869;
t2089 = t2033 * t1766 + t2124;
t2090 = t2032 * t1766 - t2123;
t2199 = t2035 * t2089 + t2039 * t2090;
t2200 = -t2035 * t2090 + t2039 * t2089;
t2219 = -t2036 * t2199 + t2040 * t2200;
t2252 = -t2041 * t1762 + t2037 * t2219;
t2249 = t1762 * t2037 + t2041 * t2219;
t2248 = t2036 * t2222 + t2040 * t2221;
t2246 = t2036 * t2224 + t2040 * t2223;
t2210 = t1921 + t2197;
t2244 = pkin(4) * t2210;
t2242 = t2032 * t2210;
t1889 = t1953 * t1951;
t2212 = -t1889 + t2128;
t2240 = t2032 * t2212;
t2237 = t2033 * t2210;
t2235 = t2033 * t2212;
t1959 = t1988 * t1989;
t2209 = t1959 + t2128;
t2233 = t2035 * t2209;
t2231 = t2039 * t2209;
t2183 = qJD(6) * t1947;
t1938 = 0.2e1 * t2183;
t2185 = qJD(4) * t1951;
t1943 = -0.2e1 * t2185;
t2027 = t2031 * t2043;
t2191 = t2036 * g(3);
t2047 = -pkin(2) * t2027 + t2001 * pkin(8) - qJD(2) * t2079 - t2191;
t2135 = t2036 * t2043;
t2188 = qJD(1) * qJD(2);
t2066 = pkin(2) * t2135 + pkin(8) * t2188 - g(3);
t2011 = g(1) * t2041 + g(2) * t2037;
t1991 = -pkin(1) * t2043 + qJDD(1) * pkin(7) - t2011;
t2148 = t1991 * t2036;
t2067 = qJDD(2) * pkin(2) - pkin(8) * t2000 - t2148;
t2134 = t2040 * t1991;
t1854 = t2039 * (t2047 + t2134) + t2035 * (t2040 * t2066 + t2067);
t1986 = t1988 ^ 2;
t2094 = pkin(3) * t2029 - qJ(4) * t1989;
t1785 = -t1986 * pkin(3) + t1927 * qJ(4) - t2029 * t2094 + t1854;
t1853 = t2035 * t2047 - t2039 * t2067 + (t2035 * t1991 - t2039 * t2066) * t2040;
t2142 = t2029 * t1988;
t1900 = -t1928 + t2142;
t2044 = pkin(3) * t2209 + qJ(4) * t1900 - t1853;
t2131 = t2033 * t1785 + t2032 * t2044;
t1689 = t1943 + t2131;
t1884 = pkin(4) * t1951 - pkin(9) * t1953;
t2012 = t2029 ^ 2;
t1642 = -pkin(4) * t2012 + pkin(9) * t2128 - t1951 * t1884 + t1689;
t1812 = pkin(3) * t1927 + qJ(4) * t1986 - t1989 * t2094 - qJDD(4) + t1930;
t2143 = t2029 * t1953;
t1822 = t2107 + t2143;
t2144 = t2029 * t1951;
t2086 = t1860 - t2144;
t1693 = pkin(4) * t1822 - t2086 * pkin(9) - t1812;
t1596 = t2038 * t1642 + t2034 * t1693;
t1861 = pkin(5) * t1922 - qJ(6) * t1924;
t2083 = -pkin(5) * t2196 + t1858 * qJ(6) - t1922 * t1861 + t1596;
t1549 = t1938 + t2083;
t1595 = t1642 * t2034 - t2038 * t1693;
t1551 = -t1858 * pkin(5) - qJ(6) * t2196 + t1861 * t1924 + qJDD(6) + t1595;
t1490 = t1549 * t2038 + t1551 * t2034;
t2109 = t1785 * t2032 - t2033 * t2044;
t2077 = -t2128 * pkin(4) - t2012 * pkin(9) + t2109;
t1641 = (0.2e1 * qJD(4) + t1884) * t1953 + t2077;
t2205 = t1804 * pkin(5) - t2257;
t1580 = (pkin(5) * t1947 - 0.2e1 * qJD(6)) * t1924 + t1641 + t2205;
t1472 = t1490 * t2032 - t1580 * t2033;
t1473 = t1490 * t2033 + t1580 * t2032;
t1445 = t1472 * t2039 + t1473 * t2035;
t2059 = pkin(9) * t1490 + (-pkin(5) * t2038 + t2258) * t1580;
t2056 = pkin(3) * t1472 + t2059;
t2227 = pkin(2) * t1445 + t2056;
t2220 = t2036 * t2200 + t2040 * t2199;
t1521 = t2034 * t1595 + t2038 * t1596;
t2042 = qJD(2) ^ 2;
t2016 = -t2027 - t2042;
t1954 = -t2012 - t1986;
t1887 = t1954 * t2035 + t2231;
t1974 = g(3) * t2040 + t2148;
t1975 = t2134 - t2191;
t2018 = t2040 * t2135;
t2008 = qJDD(2) + t2018;
t2198 = pkin(2) * (t2039 * t2008 - t2016 * t2035 + t1887) - pkin(8) * (t2035 * (t2001 + t2116) - t2039 * (-t2000 + t2023)) - t1974 * t2039 - t1975 * t2035;
t1948 = t1951 ^ 2;
t1949 = t1953 ^ 2;
t1987 = t1989 ^ 2;
t1780 = -t1853 * t2039 + t1854 * t2035;
t2194 = pkin(2) * t1780;
t2060 = (-qJD(3) + t2029) * t1989 - t2106;
t1829 = t1900 * t2039 + t2035 * t2060;
t2193 = pkin(2) * t1829;
t2192 = pkin(4) * t2032;
t2189 = qJ(6) * t2038;
t2184 = qJD(4) * t1953;
t2127 = 0.2e1 * t2184;
t1688 = t2109 + t2127;
t1602 = -t1688 * t2033 + t1689 * t2032;
t2182 = t1602 * t2035;
t2181 = t1602 * t2039;
t2175 = t2207 * t2034;
t2174 = t2207 * t2038;
t2171 = t1780 * t2036;
t2170 = t1780 * t2040;
t2164 = t1812 * t2032;
t2163 = t1812 * t2033;
t1882 = t1889 + t2128;
t2159 = t1882 * t2032;
t2158 = t1882 * t2033;
t2156 = t1930 * t2035;
t2155 = t1930 * t2039;
t1956 = -t1959 + t2128;
t2152 = t1956 * t2035;
t2151 = t1956 * t2039;
t1990 = pkin(7) * t2043 + t2078;
t2150 = t1990 * t2036;
t2149 = t1990 * t2040;
t2147 = t2008 * t2036;
t2009 = qJDD(2) - t2018;
t2146 = t2009 * t2036;
t2145 = t2009 * t2040;
t2141 = t2029 * t1989;
t2140 = t2029 * t2032;
t2139 = t2029 * t2033;
t2138 = t2029 * t2035;
t2137 = t2029 * t2039;
t2030 = t2036 ^ 2;
t2136 = t2030 * t2043;
t1637 = t2034 * t1641;
t1638 = t2038 * t1641;
t2132 = -pkin(4) * t1641 + pkin(9) * t1521;
t2130 = t2030 + t2031;
t2126 = -pkin(4) * t2033 - pkin(3);
t2120 = t2037 * t1889;
t2119 = t2041 * t1889;
t2118 = t2037 * t1959;
t2117 = t2041 * t1959;
t1779 = (qJD(5) + t1947) * t1922 + t2068;
t2115 = pkin(4) * t1779 + t1637 + t2291;
t2114 = -pkin(4) * t2216 - t1638 + t2260;
t1492 = t1521 * t2032 - t1641 * t2033;
t2113 = pkin(3) * t1492 + t2132;
t1931 = -t1949 - t2012;
t1837 = t1931 * t2033 - t2159;
t2112 = pkin(3) * t1837 - t2131;
t1603 = t1688 * t2032 + t2033 * t1689;
t1527 = t1603 * t2035 + t2181;
t1601 = pkin(3) * t1602;
t2111 = pkin(2) * t1527 + t1601;
t1826 = -t1860 - t2144;
t2074 = -t2107 + t2143;
t1739 = t1826 * t2033 + t2032 * t2074;
t1741 = -t1826 * t2032 + t2033 * t2074;
t1644 = t1739 * t2039 + t1741 * t2035;
t1737 = pkin(3) * t1739;
t2110 = pkin(2) * t1644 + t1737;
t1781 = t1853 * t2035 + t2039 * t1854;
t1914 = t1974 * t2036 + t2040 * t1975;
t2105 = -t2010 * t2037 - t2041 * t2011;
t2104 = t2037 * t2128;
t2103 = t2037 * t2018;
t2102 = t2041 * t2018;
t1531 = pkin(5) * t2210 + t1549;
t1533 = qJ(6) * t2210 + t1551;
t1678 = -t1772 * t2038 + t2175;
t2101 = pkin(9) * t1678 + t2038 * t1531 + t2034 * t1533 + t2244;
t1774 = (-qJD(5) + t1947) * t1924 + t2108;
t1680 = t1774 * t2038 + t2175;
t2100 = pkin(9) * t1680 + t1521 + t2244;
t1649 = t1779 * t2033 + t2286;
t2099 = pkin(3) * t1649 + t2115;
t2098 = t2114 + t2277;
t1973 = -t1987 - t2012;
t1902 = t1973 * t2039 - t2152;
t2097 = pkin(2) * t1902 - t1854;
t2005 = qJDD(1) * t2041 - t2037 * t2043;
t2095 = -pkin(6) * t2005 - g(3) * t2037;
t2093 = -pkin(5) * t1551 + qJ(6) * t1549;
t2092 = -pkin(5) * t2207 - qJ(6) * t1772;
t1880 = -t2012 - t1948;
t1800 = t1880 * t2032 + t2235;
t2087 = pkin(3) * t1800 - t2109;
t1619 = t1678 * t2032 + t2237;
t2085 = pkin(3) * t1619 + t2101;
t1620 = t1680 * t2032 + t2237;
t2084 = pkin(3) * t1620 + t2100;
t1520 = -t1595 * t2038 + t1596 * t2034;
t1913 = t1974 * t2040 - t1975 * t2036;
t2082 = t2010 * t2041 - t2011 * t2037;
t1493 = t1521 * t2033 + t1641 * t2032;
t1459 = t1492 * t2039 + t1493 * t2035;
t2081 = pkin(2) * t1459 + t2113;
t1838 = -t1931 * t2032 - t2158;
t1752 = t1837 * t2039 + t1838 * t2035;
t2080 = pkin(2) * t1752 + t2112;
t2076 = t1928 + t2142;
t1945 = -0.2e1 * t2184;
t2051 = 0.2e1 * qJD(6) * t1924 - t1884 * t1953 + t1945 - t2077 - t2205;
t1545 = -pkin(5) * t1877 + t2051 + t2257;
t2073 = pkin(4) * t2208 + pkin(5) * t2172 + t2034 * t1545 - t2291;
t2072 = t2098 + t2296;
t1651 = -t1779 * t2032 + t2285;
t1570 = t1649 * t2039 + t1651 * t2035;
t2071 = pkin(2) * t1570 + t2099;
t1546 = (-t2216 - t1877) * pkin(5) + t2051;
t2070 = t2038 * t1546 + t2216 * t2258 + t2260;
t1801 = t1880 * t2033 - t2240;
t1715 = t1800 * t2039 + t1801 * t2035;
t2069 = pkin(2) * t1715 + t2087;
t1633 = t2033 * t2208 - t2286;
t2064 = pkin(3) * t1633 + t2073;
t1621 = t1678 * t2033 - t2242;
t1552 = t1619 * t2039 + t1621 * t2035;
t2063 = pkin(2) * t1552 + t2085;
t1622 = t1680 * t2033 - t2242;
t1553 = t1620 * t2039 + t1622 * t2035;
t2062 = pkin(2) * t1553 + t2084;
t2061 = t2070 + t2277;
t1635 = -t2032 * t2208 - t2285;
t1562 = t1633 * t2039 + t1635 * t2035;
t2057 = pkin(2) * t1562 + t2064;
t2055 = t2061 + t2296;
t2054 = pkin(5) * t1835 + qJ(6) * t2214 + t2083;
t2048 = pkin(5) * t2215 + qJ(6) * t2206 - t1551;
t2020 = t2041 * t2128;
t2015 = t2027 - t2042;
t2014 = -t2042 - t2136;
t2013 = t2042 - t2136;
t2007 = -t2027 + t2136;
t2006 = t2027 + t2136;
t2004 = qJDD(1) * t2037 + t2041 * t2043;
t2003 = t2130 * qJDD(1);
t2002 = t2026 - 0.2e1 * t2116;
t1999 = 0.2e1 * t2023 + t2129;
t1997 = t2040 * t2008;
t1996 = t2130 * t2188;
t1985 = -pkin(6) * t2004 + g(3) * t2041;
t1979 = -t1987 + t2012;
t1978 = t1986 - t2012;
t1977 = t2000 * t2040 - t2030 * t2188;
t1976 = -t2001 * t2036 - t2031 * t2188;
t1972 = -t2014 * t2036 - t2145;
t1971 = -t2013 * t2036 + t1997;
t1970 = t2016 * t2040 - t2147;
t1969 = t2015 * t2040 - t2146;
t1968 = t2014 * t2040 - t2146;
t1967 = t2013 * t2040 + t2147;
t1966 = t2016 * t2036 + t1997;
t1965 = t2015 * t2036 + t2145;
t1964 = (t2000 + t2023) * t2036;
t1963 = (t2001 - t2116) * t2040;
t1961 = -t1999 * t2036 + t2002 * t2040;
t1960 = t1999 * t2040 + t2002 * t2036;
t1958 = t1987 - t1986;
t1944 = 0.2e1 * t2185;
t1937 = -t1949 + t2012;
t1936 = t1948 - t2012;
t1935 = (t1988 * t2039 + t1989 * t2035) * t2029;
t1934 = (t1988 * t2035 - t1989 * t2039) * t2029;
t1933 = -pkin(7) * t1968 - t2149;
t1932 = -pkin(7) * t1966 - t2150;
t1929 = -t1986 - t1987;
t1926 = -pkin(1) * t1968 + t1975;
t1925 = -pkin(1) * t1966 + t1974;
t1909 = pkin(1) * t2002 + pkin(7) * t1970 + t2149;
t1908 = -pkin(1) * t1999 + pkin(7) * t1972 - t2150;
t1907 = t1978 * t2039 - t2152;
t1906 = -t1979 * t2035 + t2231;
t1905 = t1978 * t2035 + t2151;
t1904 = t1979 * t2039 + t2233;
t1903 = -t1973 * t2035 - t2151;
t1896 = (qJD(3) + t2029) * t1989 + t2106;
t1895 = pkin(1) * t1990 + pkin(7) * t1914;
t1894 = t1928 * t2039 - t1989 * t2138;
t1893 = t1928 * t2035 + t1989 * t2137;
t1892 = -t1927 * t2035 - t1988 * t2137;
t1891 = t1927 * t2039 - t1988 * t2138;
t1890 = pkin(1) * t2006 + pkin(7) * t2003 + t1914;
t1888 = t1954 * t2039 - t2233;
t1886 = t1948 - t1949;
t1871 = (-t1951 * t2033 + t1953 * t2032) * t2029;
t1870 = (-t1951 * t2032 - t1953 * t2033) * t2029;
t1867 = -t1934 * t2036 + t1935 * t2040;
t1866 = t1934 * t2040 + t1935 * t2036;
t1852 = -t1948 - t1949;
t1850 = -pkin(8) * t1902 - t2155;
t1847 = -pkin(8) * t1887 - t2156;
t1846 = -t1905 * t2036 + t1907 * t2040;
t1845 = -t1904 * t2036 + t1906 * t2040;
t1844 = t1936 * t2033 - t2159;
t1843 = -t1937 * t2032 + t2235;
t1842 = t1905 * t2040 + t1907 * t2036;
t1841 = t1904 * t2040 + t1906 * t2036;
t1840 = t1936 * t2032 + t2158;
t1839 = t1937 * t2033 + t2240;
t1833 = -t1902 * t2036 + t1903 * t2040;
t1832 = t1902 * t2040 + t1903 * t2036;
t1831 = -t1900 * t2035 + t2039 * t2060;
t1830 = -t1896 * t2039 - t2035 * t2076;
t1828 = -t1896 * t2035 + t2039 * t2076;
t1816 = t1860 * t2033 - t1953 * t2140;
t1815 = t1860 * t2032 + t1953 * t2139;
t1814 = t1951 * t2139 + t2032 * t2107;
t1813 = t1951 * t2140 - t2033 * t2107;
t1811 = -t1893 * t2036 + t1894 * t2040;
t1810 = -t1891 * t2036 + t1892 * t2040;
t1809 = t1893 * t2040 + t1894 * t2036;
t1808 = t1891 * t2040 + t1892 * t2036;
t1807 = -t1887 * t2036 + t1888 * t2040;
t1806 = t1887 * t2040 + t1888 * t2036;
t1797 = (t1922 * t2034 + t1924 * t2038) * t1947;
t1796 = t1868 + t2121;
t1794 = -pkin(2) * t2076 + pkin(8) * t1903 - t2156;
t1793 = -t1870 * t2035 + t1871 * t2039;
t1792 = t1870 * t2039 + t1871 * t2035;
t1791 = -pkin(2) * t1896 + pkin(8) * t1888 + t2155;
t1757 = -t1840 * t2035 + t1844 * t2039;
t1756 = -t1839 * t2035 + t1843 * t2039;
t1755 = t1840 * t2039 + t1844 * t2035;
t1754 = t1839 * t2039 + t1843 * t2035;
t1753 = -t1837 * t2035 + t1838 * t2039;
t1751 = pkin(2) * t1930 + pkin(8) * t1781;
t1750 = -t1829 * t2036 + t1831 * t2040;
t1749 = -t1828 * t2036 + t1830 * t2040;
t1748 = t1829 * t2040 + t1831 * t2036;
t1747 = t1828 * t2040 + t1830 * t2036;
t1746 = -qJ(4) * t1837 - t2163;
t1740 = -t1822 * t2033 - t2032 * t2086;
t1738 = -t1822 * t2032 + t2033 * t2086;
t1728 = -t1815 * t2035 + t1816 * t2039;
t1727 = -t1813 * t2035 + t1814 * t2039;
t1726 = t1815 * t2039 + t1816 * t2035;
t1725 = t1813 * t2039 + t1814 * t2035;
t1724 = -pkin(1) * t1832 - t2097;
t1723 = -qJ(4) * t1800 - t2164;
t1716 = -t1800 * t2035 + t1801 * t2039;
t1708 = -pkin(1) * t1806 - t2198;
t1699 = -pkin(8) * t1829 - t1780;
t1698 = -t1792 * t2036 + t1793 * t2040;
t1697 = t1792 * t2040 + t1793 * t2036;
t1696 = -pkin(2) * t1929 + pkin(8) * t1831 + t1781;
t1695 = -pkin(1) * t1748 - t2193;
t1694 = -pkin(3) * t2086 + qJ(4) * t1838 - t2164;
t1690 = -pkin(7) * t1832 - t1794 * t2036 + t1850 * t2040;
t1687 = -pkin(3) * t1822 + qJ(4) * t1801 + t2163;
t1686 = t1781 * t2040 - t2171;
t1685 = t1781 * t2036 + t2170;
t1683 = -pkin(7) * t1806 - t1791 * t2036 + t1847 * t2040;
t1676 = t1774 * t2034 - t2174;
t1675 = -t1772 * t2034 - t2174;
t1672 = -pkin(1) * t2076 + pkin(7) * t1833 + t1794 * t2040 + t1850 * t2036;
t1671 = -t1755 * t2036 + t1757 * t2040;
t1670 = -t1754 * t2036 + t1756 * t2040;
t1669 = t1755 * t2040 + t1757 * t2036;
t1668 = t1754 * t2040 + t1756 * t2036;
t1659 = -t1752 * t2036 + t1753 * t2040;
t1658 = t1752 * t2040 + t1753 * t2036;
t1657 = -pkin(1) * t1896 + pkin(7) * t1807 + t1791 * t2040 + t1847 * t2036;
t1646 = -t1739 * t2035 + t1741 * t2039;
t1645 = -t1738 * t2035 + t1740 * t2039;
t1643 = t1738 * t2039 + t1740 * t2035;
t1626 = -t1726 * t2036 + t1728 * t2040;
t1625 = -t1725 * t2036 + t1727 * t2040;
t1624 = t1726 * t2040 + t1728 * t2036;
t1623 = t1725 * t2040 + t1727 * t2036;
t1616 = -t1715 * t2036 + t1716 * t2040;
t1615 = t1715 * t2040 + t1716 * t2036;
t1614 = -pkin(1) * t1685 - t2194;
t1605 = t1638 + t2292;
t1604 = t1637 - t2259;
t1600 = -pkin(7) * t1685 - pkin(8) * t2170 - t1751 * t2036;
t1599 = -pkin(8) * t1752 - t1694 * t2035 + t1746 * t2039;
t1598 = -pkin(4) * t1675 - t2092;
t1597 = pkin(1) * t1930 + pkin(7) * t1686 - pkin(8) * t2171 + t1751 * t2040;
t1592 = -pkin(7) * t1748 - t1696 * t2036 + t1699 * t2040;
t1591 = pkin(3) * t1812 + qJ(4) * t1603;
t1582 = -pkin(1) * t1929 + pkin(7) * t1750 + t1696 * t2040 + t1699 * t2036;
t1581 = -pkin(8) * t1715 - t1687 * t2035 + t1723 * t2039;
t1578 = -pkin(2) * t2086 + pkin(8) * t1753 + t1694 * t2039 + t1746 * t2035;
t1572 = -t1649 * t2035 + t1651 * t2039;
t1569 = -t1644 * t2036 + t1646 * t2040;
t1568 = -t1643 * t2036 + t1645 * t2040;
t1567 = t1644 * t2040 + t1646 * t2036;
t1566 = t1643 * t2040 + t1645 * t2036;
t1564 = -t1633 * t2035 + t1635 * t2039;
t1557 = -qJ(4) * t1739 - t1602;
t1556 = -pkin(2) * t1822 + pkin(8) * t1716 + t1687 * t2039 + t1723 * t2035;
t1555 = -t1620 * t2035 + t1622 * t2039;
t1554 = -t1619 * t2035 + t1621 * t2039;
t1550 = -pkin(3) * t1852 + qJ(4) * t1741 + t1603;
t1548 = t1596 + t2294;
t1547 = t1595 - t2261;
t1542 = -pkin(1) * t1658 + t1943 - t2080;
t1529 = -pkin(1) * t1615 - t2069 + t2127;
t1528 = t1603 * t2039 - t2182;
t1526 = -t1546 * t2034 - t2189 * t2216 - t2259;
t1525 = -pkin(5) * t2173 + t1545 * t2038 - t2292;
t1524 = -t2048 - t2261;
t1523 = -t2054 - 0.2e1 * t2183 - t2294;
t1522 = -pkin(1) * t1567 - t2110;
t1509 = -t1570 * t2036 + t1572 * t2040;
t1507 = t1570 * t2040 + t1572 * t2036;
t1505 = -t1562 * t2036 + t1564 * t2040;
t1503 = t1562 * t2040 + t1564 * t2036;
t1498 = -pkin(9) * t1676 - t1520;
t1497 = -t1553 * t2036 + t1555 * t2040;
t1496 = -t1552 * t2036 + t1554 * t2040;
t1495 = t1553 * t2040 + t1555 * t2036;
t1494 = t1552 * t2040 + t1554 * t2036;
t1489 = t1549 * t2034 - t1551 * t2038;
t1488 = -pkin(7) * t1658 - t1578 * t2036 + t1599 * t2040;
t1486 = -pkin(1) * t2086 + pkin(7) * t1659 + t1578 * t2040 + t1599 * t2036;
t1485 = -qJ(4) * t1649 - t1548 * t2032 + t1605 * t2033;
t1484 = -t1547 * t2032 + t1604 * t2033 - t2276;
t1483 = -pkin(7) * t1615 - t1556 * t2036 + t1581 * t2040;
t1482 = -pkin(8) * t1644 - t1550 * t2035 + t1557 * t2039;
t1481 = qJ(4) * t1651 + t1548 * t2033 + t1605 * t2032 + t2295;
t1480 = -pkin(1) * t1822 + pkin(7) * t1616 + t1556 * t2040 + t1581 * t2036;
t1479 = t1547 * t2033 + t1604 * t2032 + t2271;
t1478 = -pkin(2) * t1852 + pkin(8) * t1646 + t1550 * t2039 + t1557 * t2035;
t1477 = -pkin(9) * t1675 - t1531 * t2034 + t1533 * t2038;
t1476 = -qJ(4) * t1620 + t1498 * t2033 + t1676 * t2192;
t1475 = -t1527 * t2036 + t1528 * t2040;
t1474 = t1527 * t2040 + t1528 * t2036;
t1470 = -pkin(8) * t1527 - qJ(4) * t2181 - t1591 * t2035;
t1469 = pkin(2) * t1812 + pkin(8) * t1528 - qJ(4) * t2182 + t1591 * t2039;
t1468 = qJ(4) * t1622 + t1498 * t2032 + t1676 * t2126;
t1467 = -t1524 * t2032 + t1526 * t2033 - t2276;
t1466 = -qJ(4) * t1633 - t1523 * t2032 + t1525 * t2033;
t1465 = t1524 * t2033 + t1526 * t2032 + t2271;
t1464 = qJ(4) * t1635 + t1523 * t2033 + t1525 * t2032 - t2295;
t1463 = -pkin(9) * t1489 + (pkin(5) * t2034 - t2189) * t1580;
t1462 = -qJ(4) * t1619 + t1477 * t2033 - t1598 * t2032;
t1461 = -pkin(1) * t1507 - t2071;
t1460 = -t1492 * t2035 + t1493 * t2039;
t1458 = -t2072 - t2305;
t1457 = -pkin(4) * t1489 - t2093;
t1456 = -pkin(3) * t1675 + qJ(4) * t1621 + t1477 * t2032 + t1598 * t2033;
t1455 = -t2055 - t2305;
t1454 = -pkin(1) * t1503 - t2057;
t1453 = -pkin(1) * t1474 - t2111;
t1452 = -qJ(4) * t1492 + (-pkin(9) * t2033 + t2192) * t1520;
t1451 = -pkin(8) * t1570 - t1481 * t2035 + t1485 * t2039;
t1450 = -pkin(1) * t1495 - t2062;
t1449 = -t1479 * t2035 + t1484 * t2039 - t2293;
t1448 = pkin(8) * t1572 + t1481 * t2039 + t1485 * t2035 + t2297;
t1447 = -pkin(7) * t1567 - t1478 * t2036 + t1482 * t2040;
t1446 = -t1472 * t2035 + t1473 * t2039;
t1444 = t1479 * t2039 + t1484 * t2035 + t2282;
t1443 = -pkin(1) * t1852 + pkin(7) * t1569 + t1478 * t2040 + t1482 * t2036;
t1442 = -pkin(1) * t1494 - t2063;
t1441 = qJ(4) * t1493 + (-pkin(9) * t2032 + t2126) * t1520;
t1440 = -pkin(8) * t1553 - t1468 * t2035 + t1476 * t2039;
t1439 = -pkin(2) * t1676 + pkin(8) * t1555 + t1468 * t2039 + t1476 * t2035;
t1438 = -t1465 * t2035 + t1467 * t2039 - t2293;
t1437 = -t1459 * t2036 + t1460 * t2040;
t1436 = t1459 * t2040 + t1460 * t2036;
t1435 = -pkin(8) * t1562 - t1464 * t2035 + t1466 * t2039;
t1434 = t1465 * t2039 + t1467 * t2035 + t2282;
t1433 = pkin(8) * t1564 + t1464 * t2039 + t1466 * t2035 - t2297;
t1432 = -pkin(7) * t1474 - t1469 * t2036 + t1470 * t2040;
t1431 = pkin(1) * t1812 + pkin(7) * t1475 + t1469 * t2040 + t1470 * t2036;
t1430 = -pkin(8) * t1552 - t1456 * t2035 + t1462 * t2039;
t1429 = -pkin(2) * t1675 + pkin(8) * t1554 + t1456 * t2039 + t1462 * t2035;
t1428 = -qJ(4) * t1472 - t1457 * t2032 + t1463 * t2033;
t1427 = -t1445 * t2036 + t1446 * t2040;
t1426 = t1445 * t2040 + t1446 * t2036;
t1425 = -pkin(3) * t1489 + qJ(4) * t1473 + t1457 * t2033 + t1463 * t2032;
t1424 = -pkin(7) * t1507 - t1448 * t2036 + t1451 * t2040;
t1423 = -t1444 * t2036 + t1449 * t2040 - t2304;
t1422 = pkin(7) * t1509 + t1448 * t2040 + t1451 * t2036 + t2298;
t1421 = t1444 * t2040 + t1449 * t2036 + t2303;
t1420 = -pkin(8) * t1459 - t1441 * t2035 + t1452 * t2039;
t1419 = -pkin(1) * t1436 - t2081;
t1418 = -pkin(7) * t1495 - t1439 * t2036 + t1440 * t2040;
t1417 = -pkin(1) * t1676 + pkin(7) * t1497 + t1439 * t2040 + t1440 * t2036;
t1416 = -pkin(2) * t1520 + pkin(8) * t1460 + t1441 * t2039 + t1452 * t2035;
t1415 = -t1434 * t2036 + t1438 * t2040 - t2304;
t1414 = t1434 * t2040 + t1438 * t2036 + t2303;
t1413 = -pkin(7) * t1503 - t1433 * t2036 + t1435 * t2040;
t1412 = pkin(7) * t1505 + t1433 * t2040 + t1435 * t2036 - t2298;
t1411 = -pkin(7) * t1494 - t1429 * t2036 + t1430 * t2040;
t1410 = -pkin(1) * t1675 + pkin(7) * t1496 + t1429 * t2040 + t1430 * t2036;
t1409 = -pkin(1) * t1426 - t2227;
t1408 = -pkin(8) * t1445 - t1425 * t2035 + t1428 * t2039;
t1407 = -pkin(2) * t1489 + pkin(8) * t1446 + t1425 * t2039 + t1428 * t2035;
t1406 = -pkin(7) * t1436 - t1416 * t2036 + t1420 * t2040;
t1405 = -pkin(1) * t1520 + pkin(7) * t1437 + t1416 * t2040 + t1420 * t2036;
t1404 = -pkin(7) * t1426 - t1407 * t2036 + t1408 * t2040;
t1403 = -pkin(1) * t1489 + pkin(7) * t1427 + t1407 * t2040 + t1408 * t2036;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2005, 0, -t2004, 0, t2095, -t1985, -t2082, -pkin(6) * t2082, t1977 * t2041 - t2103, t1961 * t2041 + t2007 * t2037, t1971 * t2041 + t2037 * t2129, t1976 * t2041 + t2103, t1969 * t2041 + t2026 * t2037, qJDD(2) * t2037 + t1996 * t2041, t2041 * t1932 - t2037 * t1925 - pkin(6) * (t1970 * t2037 + t2002 * t2041), t2041 * t1933 - t2037 * t1926 - pkin(6) * (t1972 * t2037 - t1999 * t2041), t2041 * t1913 - pkin(6) * (t2003 * t2037 + t2006 * t2041), -pkin(6) * (t1914 * t2037 + t1990 * t2041) - (pkin(1) * t2037 - pkin(7) * t2041) * t1913, t1811 * t2041 - t2118, t1749 * t2041 + t1958 * t2037, t1845 * t2041 - t1900 * t2037, t1810 * t2041 + t2118, t1846 * t2041 + t2037 * t2060, t2041 * t1867 + t2104, t2041 * t1683 - t2037 * t1708 - pkin(6) * (t1807 * t2037 - t1896 * t2041), t2041 * t1690 - t2037 * t1724 - pkin(6) * (t1833 * t2037 - t2041 * t2076), t2041 * t1592 - t2037 * t1695 - pkin(6) * (t1750 * t2037 - t1929 * t2041), t2041 * t1600 - t2037 * t1614 - pkin(6) * (t1686 * t2037 + t1930 * t2041), t1626 * t2041 + t2120, t1568 * t2041 - t1886 * t2037, t1670 * t2041 - t1826 * t2037, t1625 * t2041 - t2120, t1671 * t2041 + t2037 * t2074, t2041 * t1698 + t2104, t2041 * t1483 - t2037 * t1529 - pkin(6) * (t1616 * t2037 - t1822 * t2041), t2041 * t1488 - t2037 * t1542 - pkin(6) * (t1659 * t2037 - t2041 * t2086), t2041 * t1447 - t2037 * t1522 - pkin(6) * (t1569 * t2037 - t1852 * t2041), t2041 * t1432 - t2037 * t1453 - pkin(6) * (t1475 * t2037 + t1812 * t2041), t2249, -t2310, t2306, t2267, -t2308, -t1796 * t2037 + t2273, t2041 * t1423 - t2037 * t1458 - t2302, t2041 * t1424 - t2037 * t1461 - pkin(6) * (t1509 * t2037 + t2287), t2041 * t1418 - t2037 * t1450 - pkin(6) * (t1497 * t2037 - t1676 * t2041), t2041 * t1406 - t2037 * t1419 - pkin(6) * (t1437 * t2037 - t1520 * t2041), t2249, t2306, t2310, -t1797 * t2037 + t2273, t2308, t2267, t2041 * t1415 - t2037 * t1455 - t2302, t2041 * t1411 - t2037 * t1442 - pkin(6) * (t1496 * t2037 - t1675 * t2041), t2041 * t1413 - t2037 * t1454 - pkin(6) * (t1505 * t2037 - t2287), t2041 * t1404 - t2037 * t1409 - pkin(6) * (t1427 * t2037 - t1489 * t2041); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2004, 0, t2005, 0, t1985, t2095, t2105, pkin(6) * t2105, t1977 * t2037 + t2102, t1961 * t2037 - t2007 * t2041, t1971 * t2037 - t2041 * t2129, t1976 * t2037 - t2102, t1969 * t2037 - t2026 * t2041, -qJDD(2) * t2041 + t1996 * t2037, t2037 * t1932 + t2041 * t1925 + pkin(6) * (t1970 * t2041 - t2002 * t2037), t2037 * t1933 + t2041 * t1926 + pkin(6) * (t1972 * t2041 + t1999 * t2037), t2037 * t1913 + pkin(6) * (t2003 * t2041 - t2006 * t2037), pkin(6) * (t1914 * t2041 - t1990 * t2037) - (-pkin(1) * t2041 - pkin(7) * t2037) * t1913, t1811 * t2037 + t2117, t1749 * t2037 - t1958 * t2041, t1845 * t2037 + t1900 * t2041, t1810 * t2037 - t2117, t1846 * t2037 - t2041 * t2060, t1867 * t2037 - t2020, t2037 * t1683 + t2041 * t1708 + pkin(6) * (t1807 * t2041 + t1896 * t2037), t2037 * t1690 + t2041 * t1724 + pkin(6) * (t1833 * t2041 + t2037 * t2076), t2037 * t1592 + t2041 * t1695 + pkin(6) * (t1750 * t2041 + t1929 * t2037), t2037 * t1600 + t2041 * t1614 + pkin(6) * (t1686 * t2041 - t1930 * t2037), t1626 * t2037 - t2119, t1568 * t2037 + t1886 * t2041, t1670 * t2037 + t1826 * t2041, t1625 * t2037 + t2119, t1671 * t2037 - t2041 * t2074, t1698 * t2037 - t2020, t2037 * t1483 + t2041 * t1529 + pkin(6) * (t1616 * t2041 + t1822 * t2037), t2037 * t1488 + t2041 * t1542 + pkin(6) * (t1659 * t2041 + t2037 * t2086), t2037 * t1447 + t2041 * t1522 + pkin(6) * (t1569 * t2041 + t1852 * t2037), t2037 * t1432 + t2041 * t1453 + pkin(6) * (t1475 * t2041 - t1812 * t2037), t2252, -t2311, t2307, t2268, -t2309, t1796 * t2041 + t2275, t2037 * t1423 + t2041 * t1458 + t2301, t2037 * t1424 + t2041 * t1461 + pkin(6) * (t1509 * t2041 - t2288), t2037 * t1418 + t2041 * t1450 + pkin(6) * (t1497 * t2041 + t1676 * t2037), t2037 * t1406 + t2041 * t1419 + pkin(6) * (t1437 * t2041 + t1520 * t2037), t2252, t2307, t2311, t1797 * t2041 + t2275, t2309, t2268, t2037 * t1415 + t2041 * t1455 + t2301, t2037 * t1411 + t2041 * t1442 + pkin(6) * (t1496 * t2041 + t1675 * t2037), t2037 * t1413 + t2041 * t1454 + pkin(6) * (t1505 * t2041 + t2288), t2037 * t1404 + t2041 * t1409 + pkin(6) * (t1427 * t2041 + t1489 * t2037); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2010, t2011, 0, 0, t1964, t1960, t1967, t1963, t1965, 0, t1909, t1908, t1890, t1895, t1809, t1747, t1841, t1808, t1842, t1866, t1657, t1672, t1582, t1597, t1624, t1566, t1668, t1623, t1669, t1697, t1480, t1486, t1443, t1431, t2220, t1500, t2300, t2248, t1514, t2246, t1421, t1422, t1417, t1405, t2220, t2300, -t1500, t2246, -t1514, t2248, t1414, t1410, t1412, t1403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2043, 0, 0, -g(3), -t2010, 0, t1977, t1961, t1971, t1976, t1969, t1996, t1932, t1933, t1913, pkin(7) * t1913, t1811, t1749, t1845, t1810, t1846, t1867, t1683, t1690, t1592, t1600, t1626, t1568, t1670, t1625, t1671, t1698, t1483, t1488, t1447, t1432, t2219, -t1501, t2299, t2247, -t1517, t2245, t1423, t1424, t1418, t1406, t2219, t2299, t1501, t2245, t1517, t2247, t1415, t1411, t1413, t1404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2043, 0, qJDD(1), 0, g(3), 0, -t2011, 0, t2018, -t2007, -t2129, -t2018, -t2026, -qJDD(2), t1925, t1926, 0, pkin(1) * t1913, t1959, -t1958, t1900, -t1959, -t2060, -t2128, t1708, t1724, t1695, t1614, -t1889, t1886, t1826, t1889, -t2074, -t2128, t1529, t1542, t1522, t1453, -t1762, -t1681, -t2254, -t2213, -t1730, t1796, t1458, t1461, t1450, t1419, -t1762, -t2254, t1681, t1797, t1730, -t2213, t1455, t1442, t1454, t1409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2010, t2011, 0, 0, t1964, t1960, t1967, t1963, t1965, 0, t1909, t1908, t1890, t1895, t1809, t1747, t1841, t1808, t1842, t1866, t1657, t1672, t1582, t1597, t1624, t1566, t1668, t1623, t1669, t1697, t1480, t1486, t1443, t1431, t2220, t1500, t2300, t2248, t1514, t2246, t1421, t1422, t1417, t1405, t2220, t2300, -t1500, t2246, -t1514, t2248, t1414, t1410, t1412, t1403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2000, t2002, t2008, -t2023, t2015, t2023, 0, -t1990, t1974, 0, t1894, t1830, t1906, t1892, t1907, t1935, t1847, t1850, t1699, -pkin(8) * t1780, t1728, t1645, t1756, t1727, t1757, t1793, t1581, t1599, t1482, t1470, t2200, -t1560, t2281, t2222, -t1589, t2224, t1449, t1451, t1440, t1420, t2200, t2281, t1560, t2224, t1589, t2222, t1438, t1430, t1435, t1408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2116, t1999, t2013, t2001, t2009, -t2116, t1990, 0, t1975, 0, t1893, t1828, t1904, t1891, t1905, t1934, t1791, t1794, t1696, t1751, t1726, t1643, t1754, t1725, t1755, t1792, t1556, t1578, t1478, t1469, t2199, t1559, t2280, t2221, t1586, t2223, t1444, t1448, t1439, t1416, t2199, t2280, -t1559, t2223, -t1586, t2221, t1434, t1429, t1433, t1407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2018, t2007, t2129, t2018, t2026, qJDD(2), -t1974, -t1975, 0, 0, -t1959, t1958, -t1900, t1959, t2060, t2128, t2198, t2097, t2193, t2194, t1889, -t1886, -t1826, -t1889, t2074, t2128, t1945 + t2069, t1944 + t2080, t2110, t2111, t1762, t1681, t2254, t2213, t1730, -t1796, t2072, t2071, t2062, t2081, t1762, t2254, -t1681, -t1797, -t1730, t2213, t2055, t2063, t2057, t2227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1928, -t1896, t2209, -t2142, t1978, t2142, 0, -t1930, t1853, 0, t1816, t1740, t1843, t1814, t1844, t1871, t1723, t1746, t1557, -qJ(4) * t1602, t2089, t1630, t2269, t2202, t1667, t2201, t1484, t1485, t1476, t1452, t2089, t2269, -t1630, t2201, -t1667, t2202, t1467, t1462, t1466, t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2141, t2076, t1979, t1927, t1956, -t2141, t1930, 0, t1854, 0, t1815, t1738, t1839, t1813, t1840, t1870, t1687, t1694, t1550, t1591, t2090, t1628, t2270, t2203, t1663, t2204, t1479, t1481, t1468, t1441, t2090, t2270, -t1628, t2204, -t1663, t2203, t1465, t1456, t1464, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1959, t1958, -t1900, t1959, t2060, t2128, -t1853, -t1854, 0, 0, t1889, -t1886, -t1826, -t1889, t2074, t2128, t1945 + t2087, t1944 + t2112, t1737, t1601, t1762, t1681, t2254, t2213, t1730, -t1796, t2098, t2099, t2084, t2113, t1762, t2254, -t1681, -t1797, -t1730, t2213, t2061, t2085, t2064, t2056; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1860, -t1822, t2212, t2144, t1936, -t2144, 0, -t1812, t1688, 0, t1766, t1679, t2253, t2075, t1734, t2088, t1604, t1605, t1498, -pkin(9) * t1520, t1766, t2253, -t1679, t2088, -t1734, t2075, t1526, t1477, t1525, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2143, t2086, t1937, -t2107, t1882, -t2143, t1812, 0, t1689, 0, -t1865, -t2211, -t2207, t1865, t1772, -t1858, t1547, t1548, -pkin(4) * t1676, -pkin(4) * t1520, -t1865, -t2207, t2211, -t1858, -t1772, t1865, t1524, t1598, t1523, t1457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1889, -t1886, -t1826, -t1889, t2074, t2128, -t1688, -t1689, 0, 0, t1762, t1681, t2254, t2213, t1730, -t1796, t2114, t2115, t2100, t2132, t1762, t2254, -t1681, -t1797, -t1730, t2213, t2070, t2101, t2073, t2059; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1805, -t2216, t2215, t2157, t1873, -t2157, 0, t1641, t1595, 0, t1805, t2215, t2216, -t2157, -t1873, t2157, -qJ(6) * t2216, t1533, t1545, -qJ(6) * t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1877, t2208, -t1874, -t1804, t2214, -t1877, -t1641, 0, t1596, 0, t1877, -t1874, -t2208, -t1877, -t2214, -t1804, t1546, t1531, pkin(5) * t2208, -pkin(5) * t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1865, t2211, t2207, -t1865, -t1772, t1858, -t1595, -t1596, 0, 0, t1865, t2207, -t2211, t1858, t1772, -t1865, t2048, t2092, t1938 + t2054, t2093; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1805, t2215, t2216, -t2157, -t1873, t2157, 0, t1551, -t1580, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1865, t2207, -t2211, t1858, t1772, -t1865, -t1551, 0, t1549, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1877, t1874, t2208, t1877, t2214, t1804, t1580, -t1549, 0, 0;];
m_new_reg  = t1;
