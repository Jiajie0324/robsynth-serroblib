% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRP2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP2_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:35:13
% EndTime: 2019-03-09 16:37:05
% DurationCPUTime: 100.20s
% Computational Cost: add. (61902->1435), mult. (64022->1811), div. (0->0), fcn. (58564->10), ass. (0->721)
t1361 = Icges(6,1) + Icges(7,1);
t1386 = Icges(7,4) + Icges(6,5);
t1385 = Icges(6,6) - Icges(7,6);
t727 = sin(qJ(5));
t1421 = (Icges(6,4) - Icges(7,5)) * t727;
t1360 = Icges(6,2) + Icges(7,3);
t1420 = Icges(4,3) + Icges(5,3);
t730 = cos(qJ(5));
t1419 = -t1385 * t727 + t1386 * t730;
t1418 = t1361 * t730 - t1421;
t1416 = Icges(7,2) + Icges(6,3);
t726 = qJ(2) + qJ(3);
t695 = pkin(10) + t726;
t679 = sin(t695);
t680 = cos(t695);
t700 = sin(t726);
t701 = cos(t726);
t1392 = Icges(4,5) * t701 + Icges(5,5) * t680 - Icges(4,6) * t700 - Icges(5,6) * t679;
t1180 = Icges(6,4) * t730;
t897 = -Icges(6,2) * t727 + t1180;
t1417 = -t1385 * t680 + t679 * t897;
t1124 = t679 * t727;
t1122 = t679 * t730;
t630 = Icges(7,5) * t1122;
t1382 = Icges(7,3) * t1124 - t1417 + t630;
t1370 = -t1386 * t680 + t1418 * t679;
t1415 = Icges(4,5) * t700 + Icges(5,5) * t679 + Icges(4,6) * t701 + Icges(5,6) * t680;
t1172 = Icges(7,5) * t730;
t891 = Icges(7,3) * t727 + t1172;
t1414 = (t891 - t897) * t680;
t1413 = t1419 * t680;
t1412 = t1418 * t680;
t1411 = t1360 * t730 + t1421;
t1410 = -t1385 * t730 - t1386 * t727;
t732 = cos(qJ(1));
t1409 = t1420 * t732;
t1121 = t679 * t732;
t1372 = -t1416 * t680 + t1419 * t679;
t1102 = t732 * t727;
t729 = sin(qJ(1));
t1107 = t729 * t730;
t570 = t1102 * t680 - t1107;
t1105 = t730 * t732;
t1110 = t727 * t729;
t571 = t1105 * t680 + t1110;
t1270 = t1121 * t1372 + t1370 * t571 + t1382 * t570;
t298 = Icges(6,5) * t571 - Icges(6,6) * t570 + Icges(6,3) * t1121;
t301 = Icges(7,4) * t571 + Icges(7,2) * t1121 + Icges(7,6) * t570;
t1373 = t298 + t301;
t1174 = Icges(7,5) * t570;
t307 = Icges(7,1) * t571 + Icges(7,4) * t1121 + t1174;
t543 = Icges(6,4) * t570;
t310 = Icges(6,1) * t571 + Icges(6,5) * t1121 - t543;
t1395 = t307 + t310;
t540 = Icges(7,5) * t571;
t295 = Icges(7,6) * t1121 + Icges(7,3) * t570 + t540;
t1182 = Icges(6,4) * t571;
t304 = -Icges(6,2) * t570 + Icges(6,6) * t1121 + t1182;
t1397 = t295 - t304;
t1323 = t1121 * t1373 + t1395 * t571 + t1397 * t570;
t1123 = t679 * t729;
t568 = t1110 * t680 + t1105;
t569 = t1107 * t680 - t1102;
t296 = Icges(6,5) * t569 - Icges(6,6) * t568 + Icges(6,3) * t1123;
t299 = Icges(7,4) * t569 + Icges(7,2) * t1123 + Icges(7,6) * t568;
t1313 = t296 + t299;
t539 = Icges(7,5) * t569;
t294 = -Icges(7,6) * t1123 - Icges(7,3) * t568 - t539;
t542 = Icges(6,4) * t569;
t302 = -Icges(6,2) * t568 + Icges(6,6) * t1123 + t542;
t1314 = t294 + t302;
t538 = Icges(7,5) * t568;
t305 = Icges(7,1) * t569 + Icges(7,4) * t1123 + t538;
t541 = Icges(6,4) * t568;
t309 = -Icges(6,1) * t569 - Icges(6,5) * t1123 + t541;
t1396 = t305 - t309;
t1324 = t1121 * t1313 - t1314 * t570 + t1396 * t571;
t1035 = qJD(5) * t732;
t699 = qJD(2) * t729;
t640 = qJD(3) * t729 + t699;
t529 = t1035 * t679 + t640;
t1037 = qJD(5) * t729;
t723 = qJD(2) + qJD(3);
t641 = t723 * t732;
t530 = -t1037 * t679 + t641;
t1038 = qJD(5) * t680;
t636 = qJD(1) - t1038;
t1339 = t1270 * t636 + t1323 * t529 - t1324 * t530;
t1271 = t1123 * t1372 + t1370 * t569 + t1382 * t568;
t1325 = t1123 * t1373 + t1395 * t569 + t1397 * t568;
t1326 = t1123 * t1313 - t1314 * t568 + t1396 * t569;
t1340 = t1271 * t636 + t1325 * t529 - t1326 * t530;
t1114 = t701 * t729;
t1117 = t700 * t729;
t1119 = t680 * t729;
t1393 = -Icges(4,5) * t1114 - Icges(5,5) * t1119 + Icges(4,6) * t1117 + Icges(5,6) * t1123 + t1409;
t1408 = t1392 * t732 + t1420 * t729;
t1183 = Icges(5,4) * t679;
t576 = Icges(5,2) * t680 + t1183;
t667 = Icges(5,4) * t680;
t578 = Icges(5,1) * t679 + t667;
t1184 = Icges(4,4) * t700;
t606 = Icges(4,2) * t701 + t1184;
t678 = Icges(4,4) * t701;
t608 = Icges(4,1) * t700 + t678;
t1407 = t576 * t679 - t578 * t680 + t606 * t700 - t608 * t701;
t1165 = Icges(5,6) * t732;
t465 = Icges(5,4) * t1119 - Icges(5,2) * t1123 - t1165;
t1176 = Icges(5,5) * t732;
t631 = Icges(5,4) * t1123;
t467 = Icges(5,1) * t1119 - t1176 - t631;
t1166 = Icges(4,6) * t732;
t491 = Icges(4,4) * t1114 - Icges(4,2) * t1117 - t1166;
t1177 = Icges(4,5) * t732;
t658 = Icges(4,4) * t1117;
t493 = Icges(4,1) * t1114 - t1177 - t658;
t1391 = t465 * t679 - t467 * t680 + t491 * t700 - t493 * t701;
t1022 = t679 * t641;
t994 = t680 * t1035;
t272 = qJD(1) * t568 - t730 * t994 + (t1022 - t1037) * t727;
t854 = t636 * t727;
t943 = qJD(1) * t680 - qJD(5);
t273 = t732 * t854 + (-t729 * t943 - t1022) * t730;
t1042 = qJD(1) * t729;
t1005 = t679 * t1042;
t1021 = t680 * t641;
t811 = -t1005 + t1021;
t158 = Icges(7,5) * t273 + Icges(7,6) * t811 - Icges(7,3) * t272;
t164 = Icges(6,4) * t273 + Icges(6,2) * t272 + Icges(6,6) * t811;
t1406 = t158 - t164;
t1112 = t723 * t729;
t1023 = t679 * t1112;
t1036 = qJD(5) * t730;
t1041 = qJD(1) * t732;
t274 = t1036 * t1119 - t730 * t1042 + (t1041 * t680 - t1023 - t1035) * t727;
t1111 = t723 * t730;
t275 = t943 * t1105 + (-t1111 * t679 + t854) * t729;
t812 = t1041 * t679 + t1112 * t680;
t159 = Icges(7,5) * t275 + Icges(7,6) * t812 + Icges(7,3) * t274;
t165 = Icges(6,4) * t275 - Icges(6,2) * t274 + Icges(6,6) * t812;
t1405 = t159 - t165;
t160 = Icges(6,5) * t273 + Icges(6,6) * t272 + Icges(6,3) * t811;
t162 = Icges(7,4) * t273 + Icges(7,2) * t811 - Icges(7,6) * t272;
t1404 = t160 + t162;
t161 = Icges(6,5) * t275 - Icges(6,6) * t274 + Icges(6,3) * t812;
t163 = Icges(7,4) * t275 + Icges(7,2) * t812 + Icges(7,6) * t274;
t1403 = t161 + t163;
t166 = Icges(7,1) * t273 + Icges(7,4) * t811 - Icges(7,5) * t272;
t168 = Icges(6,1) * t273 + Icges(6,4) * t272 + Icges(6,5) * t811;
t1402 = t166 + t168;
t167 = Icges(7,1) * t275 + Icges(7,4) * t812 + Icges(7,5) * t274;
t169 = Icges(6,1) * t275 - Icges(6,4) * t274 + Icges(6,5) * t812;
t1401 = t167 + t169;
t1400 = t1414 * t723 + (qJD(5) * t1411 - t1385 * t723) * t679;
t1399 = t1413 * t723 + (qJD(5) * t1410 + t1416 * t723) * t679;
t902 = -Icges(6,1) * t727 - t1180;
t1398 = t1412 * t723 + (t1386 * t723 + (-Icges(7,1) * t727 + t1172 + t902) * qJD(5)) * t679;
t579 = Icges(5,1) * t680 - t1183;
t468 = Icges(5,5) * t729 + t579 * t732;
t609 = Icges(4,1) * t701 - t1184;
t494 = Icges(4,5) * t729 + t609 * t732;
t1394 = -t494 * t1114 - t468 * t1119;
t1390 = t1370 * t730 + t1382 * t727;
t1389 = t1415 * t732;
t1388 = t1415 * t729;
t898 = -Icges(5,2) * t679 + t667;
t466 = Icges(5,6) * t729 + t732 * t898;
t899 = -Icges(4,2) * t700 + t678;
t492 = Icges(4,6) * t729 + t732 * t899;
t1387 = t466 * t679 + t492 * t700;
t1376 = rSges(7,1) + pkin(5);
t1331 = rSges(7,3) + qJ(6);
t1384 = t1407 * t729 + t1389;
t1383 = -t1407 * t732 + t1388;
t1381 = t1391 * t729;
t1380 = t1408 * t732 + t1394;
t1379 = t1408 * qJD(1);
t1113 = t701 * t732;
t1118 = t680 * t732;
t1282 = -t494 * t1113 - t468 * t1118 - t1408 * t729;
t1378 = -t493 * t1113 - t467 * t1118 + t1393 * t729;
t1377 = t1393 * t732;
t1346 = t1121 * t1403 + t1313 * t811 + t1314 * t272 + t1396 * t273 + t1401 * t571 + t1405 * t570;
t1345 = t1404 * t1121 + t1373 * t811 + t1395 * t273 - t1397 * t272 + t1402 * t571 + t1406 * t570;
t1344 = t1123 * t1403 + t1313 * t812 - t1314 * t274 + t1396 * t275 + t1401 * t569 + t1405 * t568;
t1343 = t1404 * t1123 + t1373 * t812 + t1395 * t275 + t1397 * t274 + t1402 * t569 + t1406 * t568;
t1337 = t1121 * t1399 + t1370 * t273 + t1372 * t811 - t1382 * t272 + t1398 * t571 + t1400 * t570;
t1336 = t1123 * t1399 + t1370 * t275 + t1372 * t812 + t1382 * t274 + t1398 * t569 + t1400 * t568;
t875 = -t294 * t727 + t305 * t730;
t142 = -t299 * t680 + t679 * t875;
t873 = -t302 * t727 - t309 * t730;
t144 = -t296 * t680 + t679 * t873;
t1375 = t142 + t144;
t874 = t295 * t727 + t307 * t730;
t143 = -t301 * t680 + t679 * t874;
t872 = -t304 * t727 + t310 * t730;
t145 = -t298 * t680 + t679 * t872;
t1374 = t143 + t145;
t1269 = -t1372 * t680 + t1390 * t679;
t1320 = t1377 - t1381;
t1319 = -t1117 * t492 - t1123 * t466 - t1380;
t1116 = t700 * t732;
t1318 = -t1116 * t491 - t1121 * t465 - t1378;
t1317 = -t1116 * t492 - t1121 * t466 - t1282;
t1371 = -t679 * t891 + t1417;
t1294 = -t606 + t609;
t948 = t1294 * t723;
t1293 = t608 + t899;
t949 = t1293 * t723;
t1296 = -t576 + t579;
t953 = t1296 * t723;
t1295 = t578 + t898;
t954 = t1295 * t723;
t1369 = qJD(1) * t1415 - t679 * t954 + t680 * t953 - t700 * t949 + t701 * t948;
t1298 = -t608 * t732 - t492;
t963 = (-t609 * t729 + t1177) * qJD(1) + t1298 * t723;
t1297 = -t606 * t732 + t494;
t965 = (-t729 * t899 + t1166) * qJD(1) + t1297 * t723;
t1301 = -t578 * t732 - t466;
t967 = (-t579 * t729 + t1176) * qJD(1) + t1301 * t723;
t1300 = -t576 * t732 + t468;
t969 = (-t729 * t898 + t1165) * qJD(1) + t1300 * t723;
t1368 = -t679 * t969 + t680 * t967 - t700 * t965 + t701 * t963 + t1379;
t1299 = -t608 * t729 - t491;
t962 = qJD(1) * t494 + t1299 * t723;
t964 = qJD(1) * t492 - t1112 * t606 + t493 * t723;
t1302 = -t578 * t729 - t465;
t966 = qJD(1) * t468 + t1302 * t723;
t968 = qJD(1) * t466 - t1112 * t576 + t467 * t723;
t1367 = qJD(1) * t1393 + t679 * t968 - t680 * t966 + t700 * t964 - t701 * t962;
t907 = pkin(5) * t730 + qJ(6) * t727;
t909 = rSges(7,1) * t730 + rSges(7,3) * t727;
t1084 = -rSges(7,2) * t680 + (t907 + t909) * t679;
t1366 = (t1416 * t679 - t1390 + t1413) * t636 + (t1372 * t729 + t873 + t875) * t530 + (-t1372 * t732 - t872 - t874) * t529;
t1365 = qJD(1) * t1407 + t1392 * t723;
t1364 = qJD(1) * t1391 - t1388 * t723 + t1379;
t1363 = -t1389 * t723 + (-t1392 * t729 - t468 * t680 - t494 * t701 + t1387 + t1409) * qJD(1);
t1362 = (t1390 * t723 - t1399) * t680 + (t1398 * t730 + t1400 * t727 + t1372 * t723 + (-t1370 * t727 + t1382 * t730) * qJD(5)) * t679;
t532 = qJD(6) * t568;
t1359 = -t1331 * t274 - t1376 * t275 - t532;
t1358 = t1383 * qJD(1);
t1357 = -t1331 * t568 - t1376 * t569;
t1356 = (-t1385 * t569 - t1386 * t568) * t530 + (t1385 * t571 + t1386 * t570) * t529 - t1410 * t636 * t679;
t533 = qJD(6) * t570;
t1355 = rSges(7,2) * t1021 - t1331 * t272 + t1376 * t273 + t533;
t1354 = t1384 * qJD(1);
t1098 = rSges(7,2) * t1123 - t1357;
t1351 = -t1098 * t636 + t533;
t1127 = t640 * t701;
t1026 = pkin(3) * t1127;
t1039 = qJD(5) * t679;
t1096 = rSges(7,2) * t1121 + t1331 * t570 + t1376 * t571;
t1350 = t1039 * t1096 - t1026;
t1029 = qJD(1) * qJD(3);
t1030 = qJD(1) * qJD(2);
t685 = t729 * t1030;
t613 = t729 * t1029 + t685;
t383 = qJD(5) * t812 + t613;
t686 = t732 * t1030;
t614 = t732 * t1029 + t686;
t384 = qJD(5) * t811 + t614;
t996 = t723 * t1039;
t1349 = t1270 * t996 + t1323 * t384 + t1324 * t383 + t1337 * t636 + t1345 * t529 - t1346 * t530;
t1348 = t1271 * t996 + t1325 * t384 + t1326 * t383 + t1336 * t636 + t1343 * t529 - t1344 * t530;
t41 = (t723 * t875 - t163) * t680 + (t159 * t727 + t167 * t730 + t299 * t723 + (-t294 * t730 - t305 * t727) * qJD(5)) * t679;
t43 = (t723 * t873 - t161) * t680 + (-t165 * t727 + t169 * t730 + t296 * t723 + (-t302 * t730 + t309 * t727) * qJD(5)) * t679;
t1342 = t41 + t43;
t42 = (t723 * t874 - t162) * t680 + (t158 * t727 + t166 * t730 + t301 * t723 + (t295 * t730 - t307 * t727) * qJD(5)) * t679;
t44 = (t723 * t872 - t160) * t680 + (-t164 * t727 + t168 * t730 + t298 * t723 + (-t304 * t730 - t310 * t727) * qJD(5)) * t679;
t1341 = t42 + t44;
t1338 = t1269 * t636 + t1374 * t529 - t1375 * t530;
t1335 = -t1364 * t729 + t1367 * t732;
t1334 = t1363 * t729 + t1368 * t732;
t1333 = t1364 * t732 + t1367 * t729;
t1332 = -t1363 * t732 + t1368 * t729;
t1330 = t1319 * t640 - t1320 * t641 - t1354;
t1329 = t1317 * t640 - t1318 * t641 + t1358;
t1328 = t1365 * t729 + t1369 * t732;
t1327 = -t1365 * t732 + t1369 * t729;
t1322 = -t679 * t966 - t680 * t968 - t700 * t962 - t701 * t964;
t1321 = t679 * t967 + t680 * t969 + t700 * t963 + t701 * t965;
t1101 = -rSges(7,2) * t1005 + t1355;
t1100 = rSges(7,2) * t812 - t1359;
t1316 = t465 * t680 + t467 * t679 + t491 * t701 + t493 * t700;
t1315 = t466 * t680 + t468 * t679 + t492 * t701 + t494 * t700;
t1311 = t1371 * t729;
t1310 = t1371 * t732;
t1309 = t1370 * t729;
t1308 = t1370 * t732;
t1307 = t1084 * t729;
t1306 = t1084 * t732;
t1305 = -t1385 * t679 + t1414;
t1304 = t1386 * t679 + t1412;
t1202 = rSges(7,2) * t679;
t834 = t909 * t680;
t1303 = -t907 * t680 - t1202 - t834;
t1233 = qJD(1) * t1295 + t1300 * t640 - (-Icges(5,2) * t1119 + t467 - t631) * t641;
t1234 = qJD(1) * t1293 + t1297 * t640 - (-Icges(4,2) * t1114 + t493 - t658) * t641;
t764 = qJD(1) * t1294 + t1298 * t640 - t1299 * t641;
t765 = qJD(1) * t1296 + t1301 * t640 - t1302 * t641;
t1292 = -t1233 * t679 - t1234 * t700 + t765 * t680 + t764 * t701;
t1291 = t1366 * t679;
t1290 = qJD(1) * t1392 + t1388 * t641 - t1389 * t640;
t1289 = -t1313 * t530 + t1372 * t636 + t1373 * t529;
t1264 = t1374 * t732 + t1375 * t729;
t1288 = -t1374 * t729 + t1375 * t732;
t1263 = t1323 * t732 + t1324 * t729;
t1287 = -t1323 * t729 + t1324 * t732;
t1262 = t1325 * t732 + t1326 * t729;
t1286 = -t1325 * t729 + t1326 * t732;
t1285 = t1387 + t1393;
t1198 = pkin(2) * qJD(2);
t728 = sin(qJ(2));
t1025 = t728 * t1198;
t1213 = pkin(3) * t700;
t587 = -t1213 * t723 - t1025;
t696 = qJD(4) * t729;
t1066 = t732 * t587 + t696;
t1211 = pkin(4) * t680;
t586 = pkin(9) * t679 + t1211;
t525 = t586 * t729;
t603 = pkin(9) * t1021;
t731 = cos(qJ(2));
t689 = t731 * pkin(2) + pkin(1);
t733 = -pkin(8) - pkin(7);
t693 = t732 * t733;
t1056 = t729 * t689 + t693;
t720 = t732 * pkin(7);
t654 = pkin(1) * t729 - t720;
t482 = t654 - t1056;
t623 = qJD(1) * t654;
t1268 = qJD(1) * t482 - t623;
t1212 = pkin(3) * t701;
t620 = t689 + t1212;
t722 = -qJ(4) + t733;
t1063 = -t729 * t620 - t732 * t722;
t400 = t1056 + t1063;
t1040 = qJD(2) * t732;
t999 = t728 * t1040;
t944 = pkin(2) * t999;
t853 = t696 - t944;
t791 = qJD(1) * t400 + t1268 + t853;
t585 = pkin(4) * t679 - pkin(9) * t680;
t976 = -t585 - t1213;
t1284 = -pkin(4) * t1022 + qJD(1) * t525 - t641 * t976 + t1066 + t603 - t791;
t1034 = qJD(6) * t727;
t625 = t679 * t1034;
t718 = t729 * pkin(7);
t655 = t732 * pkin(1) + t718;
t660 = t732 * t689;
t946 = -t729 * t733 + t660;
t483 = t946 - t655;
t1082 = t483 * t1040 - t482 * t699;
t1009 = -t640 * t400 + t1082;
t1051 = -t722 + t733;
t590 = t732 * t620;
t401 = t1051 * t729 + t590 - t660;
t639 = pkin(4) * t1118;
t527 = pkin(9) * t1121 + t639;
t1089 = t401 + t527;
t795 = t1089 * t641 + t640 * t525 + t1009;
t65 = t1096 * t530 + t1098 * t529 + t625 + t795;
t582 = t640 * t1213;
t665 = t729 * t1025;
t697 = qJD(4) * t732;
t1008 = -t582 - t665 - t697;
t1074 = t483 + t655;
t1012 = t401 + t1074;
t774 = (t527 + t1012) * qJD(1) - t640 * t585 + t1008;
t88 = -t1084 * t529 + t1096 * t636 + t532 + t774;
t973 = t88 * t1084;
t1283 = -t1098 * t65 + t973;
t914 = rSges(6,1) * t569 - rSges(6,2) * t568;
t313 = rSges(6,3) * t1123 + t914;
t913 = rSges(6,1) * t730 - rSges(6,2) * t727;
t440 = -rSges(6,3) * t680 + t679 * t913;
t1281 = -t313 * t636 - t530 * t440;
t1280 = 0.2e1 * qJD(2);
t1220 = t640 / 0.2e1;
t1219 = -t641 / 0.2e1;
t1277 = rSges(3,2) * t728;
t580 = rSges(5,1) * t679 + rSges(5,2) * t680;
t521 = t580 * t729;
t1120 = t680 * t723;
t810 = t1036 * t679 + t1120 * t727;
t908 = -rSges(7,1) * t727 + rSges(7,3) * t730;
t1099 = t723 * t834 + (rSges(7,2) * t723 + qJD(5) * t908) * t679 + t625 + t810 * qJ(6) + (-t1039 * t727 + t1111 * t680) * pkin(5);
t1053 = t733 * t1042 + t665;
t1208 = pkin(1) - t689;
t399 = (-t1208 * t732 - t718) * qJD(1) - t1053;
t621 = t655 * qJD(1);
t1092 = -t399 - t621;
t1061 = t620 - t689;
t1054 = t722 * t1042 + t697;
t920 = t587 * t729 - t1054;
t208 = t1041 * t1061 + t1053 + t920;
t1019 = -t208 + t1092;
t602 = pkin(4) * t1023;
t321 = pkin(9) * t812 + qJD(1) * t639 - t602;
t498 = t586 * t723;
t1028 = qJD(1) * qJD(4);
t584 = t641 * t1212;
t1103 = t731 * qJD(2) ^ 2;
t858 = -pkin(2) * t1103 * t732 + qJD(1) * t665;
t792 = t732 * t1028 + t613 * t1213 - t723 * t584 + t858;
t747 = t613 * t585 + (-t321 + t1019) * qJD(1) - t641 * t498 + t792;
t971 = t679 * t1098;
t28 = -qJD(5) * t723 * t971 - qJD(6) * t272 + t1084 * t383 - t1099 * t530 - t1100 * t636 + t747;
t1272 = qJD(1) * t88 + t28;
t1267 = (t1411 * t679 - t1370) * t636 + (-t1360 * t569 + t1396 + t538 - t541) * t530 + (t1360 * t571 - t1174 - t1395 + t543) * t529;
t1266 = (-Icges(7,1) * t1124 + t902 * t679 + t1382 + t630) * t636 + (t1361 * t568 + t1314 - t539 + t542) * t530 + (-t1361 * t570 - t1182 + t1397 + t540) * t529;
t1265 = t1356 * t679;
t1205 = rSges(5,1) * t680;
t581 = -rSges(5,2) * t679 + t1205;
t712 = t729 * rSges(5,3);
t269 = -t723 * t521 + (t581 * t732 + t712) * qJD(1);
t495 = t581 * t723;
t101 = -t495 * t641 + t580 * t613 + (-t269 + t1019) * qJD(1) + t792;
t473 = rSges(5,1) * t1118 - rSges(5,2) * t1121 + t712;
t151 = -t580 * t640 + (t473 + t1012) * qJD(1) + t1008;
t1259 = qJD(1) * t151 + t101;
t1004 = t700 * t1042;
t642 = pkin(3) * t1004;
t1069 = t585 * t1042 + t642;
t403 = t440 * t729;
t1200 = rSges(6,3) * t679;
t835 = t913 * t680;
t442 = t835 + t1200;
t524 = t585 * t729;
t918 = qJD(1) * t524 - t641 * t586 - t584;
t995 = t680 * t1037;
t1258 = t1039 * t313 - t403 * t636 + t530 * t442 + t1069 - t918 + (t1042 - t995) * t440;
t813 = -t1042 * t680 - t1022;
t320 = pkin(4) * t813 - pkin(9) * t1005 + t603;
t1255 = qJD(1) * t320 - t640 * t498;
t711 = Icges(3,4) * t731;
t900 = -Icges(3,2) * t728 + t711;
t647 = Icges(3,1) * t728 + t711;
t1252 = t1269 * t996 + t1362 * t636;
t499 = rSges(4,1) * t1114 - rSges(4,2) * t1117 - t732 * rSges(4,3);
t713 = t729 * rSges(4,3);
t500 = rSges(4,1) * t1113 - rSges(4,2) * t1116 + t713;
t188 = t499 * t640 + t500 * t641 + t1082;
t1075 = t482 - t654;
t1203 = rSges(4,2) * t701;
t611 = rSges(4,1) * t700 + t1203;
t816 = -t611 * t641 - t944;
t195 = (-t499 + t1075) * qJD(1) + t816;
t196 = -t611 * t640 - t665 + (t500 + t1074) * qJD(1);
t572 = t611 * t729;
t573 = t611 * t732;
t1206 = rSges(4,1) * t701;
t612 = -rSges(4,2) * t700 + t1206;
t1251 = -t195 * (qJD(1) * t572 - t641 * t612) - t188 * (-t640 * t572 - t573 * t641) - t196 * (-qJD(1) * t573 - t612 * t640);
t1162 = Icges(3,3) * t732;
t644 = Icges(3,5) * t731 - Icges(3,6) * t728;
t643 = Icges(3,5) * t728 + Icges(3,6) * t731;
t819 = qJD(2) * t643;
t554 = Icges(3,6) * t729 + t732 * t900;
t1133 = t554 * t728;
t1185 = Icges(3,4) * t728;
t648 = Icges(3,1) * t731 - t1185;
t556 = Icges(3,5) * t729 + t648 * t732;
t862 = -t556 * t731 + t1133;
t1245 = -t732 * t819 + (-t644 * t729 + t1162 + t862) * qJD(1);
t552 = Icges(3,3) * t729 + t644 * t732;
t1044 = qJD(1) * t552;
t1106 = t729 * t731;
t1109 = t728 * t729;
t1167 = Icges(3,6) * t732;
t553 = Icges(3,4) * t1106 - Icges(3,2) * t1109 - t1167;
t1134 = t553 * t728;
t1178 = Icges(3,5) * t732;
t674 = Icges(3,4) * t1109;
t555 = Icges(3,1) * t1106 - t1178 - t674;
t863 = -t555 * t731 + t1134;
t1244 = qJD(1) * t863 - t729 * t819 + t1044;
t645 = Icges(3,2) * t731 + t1185;
t859 = t645 * t728 - t647 * t731;
t1241 = t859 * qJD(1) + t644 * qJD(2);
t551 = Icges(3,5) * t1106 - Icges(3,6) * t1109 - t1162;
t210 = -t551 * t732 - t729 * t863;
t1238 = (-t645 * t732 + t556) * t729 - (-Icges(3,2) * t1106 + t555 - t674) * t732;
t317 = t571 * rSges(6,1) - t570 * rSges(6,2) + rSges(6,3) * t1121;
t110 = t317 * t636 - t440 * t529 + t774;
t1018 = t273 * rSges(6,1) + t272 * rSges(6,2) + rSges(6,3) * t1021;
t171 = -rSges(6,3) * t1005 + t1018;
t912 = -rSges(6,1) * t727 - rSges(6,2) * t730;
t237 = t723 * t835 + (rSges(6,3) * t723 + qJD(5) * t912) * t679;
t1115 = t701 * t723;
t207 = t944 + (t1051 * t732 - t1061 * t729) * qJD(1) + t1066;
t694 = pkin(7) * t1041;
t398 = -t944 - t694 + (t1208 * t729 - t693) * qJD(1);
t601 = qJD(1) * (-pkin(1) * t1042 + t694);
t771 = qJD(1) * t398 + t601 + (-t1103 * t729 - t686 * t728) * pkin(2);
t751 = qJD(1) * t207 + t729 * t1028 + t771;
t741 = (-t1115 * t640 - t614 * t700) * pkin(3) + t751;
t45 = t171 * t636 - t237 * t529 + t317 * t996 - t384 * t440 - t614 * t585 + t1255 + t741;
t915 = rSges(6,1) * t275 - rSges(6,2) * t274;
t173 = rSges(6,3) * t812 + t915;
t46 = -t173 * t636 - t237 * t530 - t313 * t996 + t383 * t440 + t747;
t1237 = (qJD(1) * t110 + t46) * t732 + t45 * t729;
t1232 = t383 / 0.2e1;
t1231 = t384 / 0.2e1;
t1230 = t1219 * t729 + t1220 * t732;
t1229 = -t529 / 0.2e1;
t1228 = t529 / 0.2e1;
t1227 = -t530 / 0.2e1;
t1226 = t530 / 0.2e1;
t1225 = t613 / 0.2e1;
t1224 = t614 / 0.2e1;
t1223 = -t636 / 0.2e1;
t1222 = t636 / 0.2e1;
t1221 = -t640 / 0.2e1;
t1218 = t641 / 0.2e1;
t1216 = t729 / 0.2e1;
t1215 = -t732 / 0.2e1;
t1214 = pkin(2) * t728;
t1210 = -qJD(1) / 0.2e1;
t1209 = qJD(1) / 0.2e1;
t1207 = rSges(3,1) * t731;
t1204 = rSges(3,2) * t731;
t1197 = t41 * t530;
t1196 = t42 * t529;
t1195 = t43 * t530;
t1194 = t44 * t529;
t1193 = t45 * t732;
t1192 = t46 * t729;
t714 = t729 * rSges(3,3);
t1191 = t729 * t88;
t1158 = qJD(1) * t65;
t94 = t313 * t529 + t317 * t530 + t795;
t1156 = qJD(1) * t94;
t1155 = t110 * t729;
t1150 = t142 * t383;
t1149 = t143 * t384;
t1148 = t144 * t383;
t1147 = t145 * t384;
t1144 = t195 * t729;
t1052 = rSges(3,2) * t1109 + t732 * rSges(3,3);
t558 = rSges(3,1) * t1106 - t1052;
t650 = rSges(3,1) * t728 + t1204;
t997 = t650 * t1040;
t333 = -t997 + (-t558 - t654) * qJD(1);
t1143 = t333 * t729;
t1142 = t333 * t732;
t1000 = t650 * t699;
t1104 = t731 * t732;
t1108 = t728 * t732;
t559 = rSges(3,1) * t1104 - rSges(3,2) * t1108 + t714;
t1065 = t559 + t655;
t334 = qJD(1) * t1065 - t1000;
t598 = t650 * t732;
t1141 = t334 * t598;
t1126 = t643 * t729;
t1125 = t643 * t732;
t1095 = t1331 * t569 - t1376 * t568;
t1094 = t1331 * t571 - t1376 * t570;
t1093 = -t729 * t400 + t732 * t401;
t1090 = t401 + t473;
t1081 = -t729 * t482 + t732 * t483;
t1078 = t729 * t499 + t732 * t500;
t1077 = -t555 * t1104 - t729 * t551;
t1076 = t556 * t1104 + t729 * t552;
t1071 = (pkin(5) * t727 - qJ(6) * t730 - t908) * t679;
t1070 = t580 * t1042 + t642;
t1060 = rSges(5,2) * t1005 + rSges(5,3) * t1041;
t1059 = rSges(4,2) * t1004 + rSges(4,3) * t1041;
t1058 = -t645 + t648;
t1057 = t647 + t900;
t1055 = rSges(3,3) * t1041 + t1042 * t1277;
t472 = rSges(5,1) * t1119 - rSges(5,2) * t1123 - t732 * rSges(5,3);
t121 = t1090 * t641 + t472 * t640 + t1009;
t1049 = qJD(1) * t121;
t624 = -t1213 - t1214;
t978 = t624 + t1214;
t515 = t978 * t729;
t1045 = qJD(1) * t515;
t1043 = qJD(1) * t644;
t338 = -t729 * t859 - t1125;
t1031 = t338 * qJD(1);
t1027 = pkin(3) * t1115;
t583 = t641 * t1213;
t1024 = t731 * t1198;
t1020 = -t400 * t1041 + t732 * t207 + t729 * t208;
t318 = -t641 * t1203 + (-t1042 * t701 - t641 * t700) * rSges(4,1) + t1059;
t319 = -t723 * t572 + (t612 * t732 + t713) * qJD(1);
t1016 = t499 * t1041 + t732 * t318 + t729 * t319;
t1015 = -t317 - t1089;
t1014 = -t482 * t1041 + t732 * t398 + t729 * t399;
t1013 = t400 + t1075;
t1007 = t590 + t527;
t1006 = t602 + t1054;
t1003 = t700 * t1041;
t1001 = t728 * t1041;
t989 = t1120 / 0.2e1;
t988 = -pkin(1) - t1207;
t987 = t1042 / 0.2e1;
t986 = t1041 / 0.2e1;
t985 = -t699 / 0.2e1;
t982 = t1040 / 0.2e1;
t979 = -t611 - t1214;
t977 = -t580 - t1213;
t975 = -t620 - t1211;
t974 = t65 * t1096;
t970 = (-t729 ^ 2 - t732 ^ 2) * t728;
t516 = t978 * t732;
t960 = t640 * t515 + t516 * t641;
t523 = t580 * t732;
t959 = -t640 * t521 - t523 * t641;
t526 = t585 * t732;
t958 = -t640 * t524 - t526 * t641;
t476 = t556 * t1106;
t955 = t552 * t732 - t476;
t952 = -qJD(1) * t523 - t581 * t640;
t950 = -qJD(1) * t526 - t586 * t640;
t947 = -t551 + t1133;
t942 = -t1089 - t1096;
t940 = t729 * t472 + t732 * t473 + t1093;
t939 = t729 * t525 + t732 * t527 + t1093;
t937 = t1042 * t1084 + t1069;
t484 = qJD(1) * t516;
t928 = t484 - t1026;
t927 = -t495 - t1027;
t926 = -t498 - t1027;
t925 = -pkin(9) * t1120 - t587;
t548 = t612 * t723;
t921 = -t548 - t1024;
t919 = qJD(1) * t521 - t641 * t581 - t584;
t916 = t1207 - t1277;
t833 = -t583 + t853;
t761 = (-t525 + t1013) * qJD(1) - t641 * t585 + t833;
t109 = t1281 + t761;
t889 = t109 * t732 + t1155;
t876 = -t195 * t732 - t196 * t729;
t871 = t313 * t732 - t317 * t729;
t870 = -t334 * t729 - t1142;
t335 = t553 * t731 + t555 * t728;
t336 = t554 * t731 + t556 * t728;
t567 = t732 * t583;
t857 = -t582 * t729 - t567;
t856 = -t237 + t926;
t852 = -t580 + t624;
t851 = -t585 + t624;
t268 = rSges(5,1) * t813 - rSges(5,2) * t1021 + t1060;
t850 = t472 * t1041 + t732 * t268 + t729 * t269 + t1020;
t849 = t525 * t1041 + t732 * t320 + t729 * t321 + t1020;
t848 = t729 * t313 + t732 * t317 + t939;
t837 = t926 - t1099;
t597 = t650 * t729;
t822 = -t1024 - t1027;
t821 = qJD(2) * t647;
t820 = qJD(2) * t645;
t211 = -t1109 * t554 - t955;
t818 = (-t210 * t732 + t211 * t729) * qJD(2);
t212 = -t1108 * t553 - t1077;
t213 = -t1108 * t554 + t1076;
t817 = (-t212 * t732 + t213 * t729) * qJD(2);
t331 = (t558 * t729 + t559 * t732) * qJD(2);
t815 = -t586 - t1202;
t814 = -t586 - t1200;
t808 = (-t1003 - t1127) * pkin(3);
t807 = t851 - t1084;
t802 = -t495 + t822;
t801 = -t498 + t822;
t798 = t398 * t1040 + t399 * t699 - t482 * t686 - t483 * t685;
t87 = -t1084 * t530 + t1351 + t761;
t797 = t1084 * t87 - t974;
t796 = t1096 * t732 + t1098 * t729 + t939;
t405 = t440 * t732;
t794 = t313 * t994 - t529 * t403 - t405 * t530 + t958;
t793 = t553 * t732 - t554 * t729;
t790 = -t237 + t801;
t789 = t313 * t1041 + t732 * t171 + t729 * t173 + t849;
t783 = t801 - t1099;
t776 = t640 * t208 - t614 * t400 + t798;
t775 = (-t1057 * t728 + t1058 * t731) * qJD(1);
t772 = t1041 * t1098 + t1100 * t729 + t1101 * t732 + t849;
t763 = t317 * t1039 - t636 * t405 - t440 * t994 - t442 * t529 + t950;
t760 = t680 * t1034 + t1098 * t994 - t1306 * t530 - t1307 * t529 + t958;
t374 = qJD(1) * t554 - t729 * t820;
t376 = qJD(1) * t556 - t729 * t821;
t750 = qJD(1) * t551 - qJD(2) * t335 - t374 * t728 + t376 * t731;
t373 = -t732 * t820 + (-t729 * t900 + t1167) * qJD(1);
t375 = -t732 * t821 + (-t648 * t729 + t1178) * qJD(1);
t749 = -qJD(2) * t336 - t373 * t728 + t375 * t731 + t1044;
t616 = t900 * qJD(2);
t617 = t648 * qJD(2);
t748 = qJD(1) * t643 - t616 * t728 + t617 * t731 + (-t645 * t731 - t647 * t728) * qJD(2);
t746 = t1084 * t995 + t1303 * t530 + t1307 * t636 - t625 * t732 + t918;
t745 = (-t87 * t971 + (-t729 * t974 - t732 * t973) * t680) * qJD(5);
t744 = t640 * t321 + t614 * t525 + (t207 + t320) * t641 - t1089 * t613 + t776;
t743 = t1303 * t529 - t1306 * t636 - t625 * t729 + t1350 + t950;
t742 = -t1238 * t728 + t793 * t731;
t736 = -t1286 * t383 / 0.2e1 - t1287 * t384 / 0.2e1 + ((t1119 * t1324 + t1270 * t679) * qJD(5) + ((qJD(5) * t1323 + t1289) * t680 + t1291) * t732 + (t1304 * t571 + t1305 * t570) * t636 + (t1309 * t571 - t1311 * t570) * t530 + (-t1308 * t571 + t1310 * t570) * t529) * t1229 + (qJD(1) * t1263 + t1345 * t729 - t1346 * t732) * t1228 + (qJD(1) * t1262 + t1343 * t729 - t1344 * t732) * t1227 + ((t1118 * t1325 + t1271 * t679) * qJD(5) + ((qJD(5) * t1326 + t1289) * t680 + t1291) * t729 + (t1304 * t569 + t1305 * t568) * t636 + (t1309 * t569 - t1311 * t568) * t530 + (-t1308 * t569 + t1310 * t568) * t529) * t1226 + (t1319 * t729 - t1320 * t732) * t1225 + (t1317 * t729 - t1318 * t732) * t1224 + ((qJD(5) * t1264 - t1366) * t680 + ((t1304 * t730 + t1305 * t727 + t1372) * t636 + (t1309 * t730 - t1311 * t727 - t1313) * t530 + (-t1308 * t730 + t1310 * t727 + t1373) * t529 + t1269 * qJD(5)) * t679) * t1223 + (qJD(1) * t1264 + t1341 * t729 - t1342 * t732) * t1222 + (t1290 * t729 + t1292 * t732) * t1221 + (t1335 * t732 + t1334 * t729 + (t1317 * t732 + t1318 * t729) * qJD(1)) * t1220 + (t1333 * t732 + t1332 * t729 + (t1319 * t732 + t1320 * t729) * qJD(1)) * t1219 + (-t1290 * t732 + t1292 * t729) * t1218 + (t1233 * t680 + t1234 * t701 + t765 * t679 + t764 * t700) * t1210 + (t1322 * t732 + t1321 * t729 + (t1315 * t732 + t1316 * t729) * qJD(1)) * t1209 + (t1330 + t1340) * t987 + (t1329 + t1339) * t986 + (qJD(1) * t1328 + t1317 * t614 + t1318 * t613 + t1334 * t640 + t1335 * t641 + t1349) * t1216 + (qJD(1) * t1327 + t1319 * t614 + t1320 * t613 + t1332 * t640 + t1333 * t641 + t1348) * t1215 - (t1288 * t723 + t1338) * t1039 / 0.2e1 - (t1339 * t732 + t1340 * t729) * t1038 / 0.2e1;
t618 = t916 * qJD(2);
t519 = t912 * t679;
t380 = -qJD(2) * t597 + (t732 * t916 + t714) * qJD(1);
t379 = -t1040 * t1204 + (-t1042 * t731 - t999) * rSges(3,1) + t1055;
t365 = -rSges(6,1) * t570 - rSges(6,2) * t571;
t360 = -rSges(6,1) * t568 - rSges(6,2) * t569;
t339 = -t732 * t859 + t1126;
t332 = t339 * qJD(1);
t202 = -t618 * t1040 + (-t380 - t621 + t1000) * qJD(1);
t201 = -t618 * t699 + t601 + (t379 - t997) * qJD(1);
t185 = -t1241 * t732 + t748 * t729;
t184 = t1241 * t729 + t748 * t732;
t183 = -qJD(2) * t862 + t373 * t731 + t375 * t728;
t182 = -qJD(2) * t863 + t374 * t731 + t376 * t728;
t150 = -t580 * t641 + (-t472 + t1013) * qJD(1) + t833;
t141 = -t548 * t641 + t611 * t613 + (-t319 + t1092) * qJD(1) + t858;
t140 = qJD(1) * t318 - t548 * t640 - t611 * t614 + t771;
t125 = t332 + t817;
t124 = t818 + t1031;
t100 = qJD(1) * t268 - t495 * t640 - t580 * t614 + t741;
t95 = t318 * t641 + t319 * t640 + t499 * t614 - t500 * t613 + t798;
t47 = t269 * t640 + t472 * t614 + (t207 + t268) * t641 - t1090 * t613 + t776;
t27 = qJD(6) * t274 - t1084 * t384 - t1099 * t529 + t1101 * t636 + t1350 * t723 + t976 * t614 + t1255 + t751;
t24 = t171 * t530 + t173 * t529 + t313 * t384 - t317 * t383 + t744;
t15 = qJD(6) * t810 - t1096 * t383 + t1098 * t384 + t1100 * t529 + t1101 * t530 + t744;
t1 = [(t332 + ((t211 - t476 + (t552 + t1134) * t732 + t1077) * t732 + t1076 * t729) * qJD(2)) * t982 + t1337 * t1228 + (t1336 + t1339) * t1227 + (t1321 + t1328) * t1220 + (-t1322 + t1327 + t1329) * t1219 + t1252 + ((t336 + t339) * t732 + (t338 + t335) * t729) * t1030 / 0.2e1 + t1147 / 0.2e1 + t1148 / 0.2e1 + ((t1285 * t732 + t1282 + t1317 - t1381) * t641 + ((t1391 + t1408) * t732 + t1285 * t729 + t1318 + t1394) * t640 + t1330 + t1354) * t1221 + (t202 * (t729 * t988 + t1052 + t720) + t201 * t1065 + t334 * (t694 + t1055) + (t1143 * t650 - t1141) * qJD(2) + ((-pkin(1) - t916) * t1142 + (t333 * (-rSges(3,3) - pkin(7)) + t334 * t988) * t729) * qJD(1) - (-qJD(1) * t558 - t333 - t623 - t997) * t334) * m(3) + (t1315 + t1383) * t1224 + (t1316 - t1384) * t1225 + (((t491 * t732 + t492 * t729) * t700 + (t465 * t732 + t466 * t729) * t679 + t1319 + t1378 + t1380) * t641 + (-t493 * t1114 + (t491 * t729 - t492 * t732) * t700 - t467 * t1119 + (t465 * t729 - t466 * t732) * t679 - t1282 + t1320 - t1377) * t640 + t1358) * t1218 + (t1313 * t680 + (t1314 * t727 - t1396 * t730) * t679 + t1375) * t529 * t1223 + t1149 / 0.2e1 + t1150 / 0.2e1 + (-qJD(2) * t859 + t616 * t731 + t617 * t728 + m(6) * (((-rSges(6,3) - pkin(9)) * t679 + t975) * t1155 + (t109 * (-t620 + t814) - t110 * t722) * t732) + m(7) * (((-rSges(7,2) - pkin(9)) * t679 + t975) * t1191 + (t87 * (-t620 + t815) - t88 * t722) * t732) + t700 * t948 + t701 * t949 + t679 * t953 + t680 * t954) * qJD(1) + (t101 * (-t472 + t1063) - t150 * t920 + t100 * (-t722 * t729 + t473 + t590) + t151 * (t1060 + t1066) + (t150 * t521 - t151 * t523) * t723 + ((-t150 * rSges(5,3) + t151 * (-t620 - t1205)) * t729 + (t150 * (-t581 - t620) - t151 * t722) * t732) * qJD(1) - (-qJD(1) * t472 + t641 * t977 - t150 + t791) * t151) * m(5) - (t182 + t185 + t125) * t1040 / 0.2e1 + (t183 + t184) * t699 / 0.2e1 + (t28 * (t1063 + t1357) + t27 * (t1007 + t1096) + (-t27 * t722 + t28 * t815) * t729 + t973 * t530 + (t1284 - t1351 + t1355) * t88 + (t1006 + (-rSges(7,2) * t1120 + t925) * t729 + t88 + t1359) * t87) * m(7) + t1196 / 0.2e1 - t1197 / 0.2e1 + t1270 * t1231 + t1271 * t1232 + t1339 * t1226 + t1194 / 0.2e1 - t1195 / 0.2e1 + (-t1031 + ((t732 * t947 - t1076 + t213) * t732 + (t729 * t947 + t212 + t955) * t729) * qJD(2) + t124) * t985 + (t46 * (-t914 + t1063) + t109 * (-t915 + t1006) + t45 * (t1007 + t317) + (t46 * t814 + t109 * (-rSges(6,3) * t1120 + t925) - t45 * t722) * t729 + (t1018 + t109 - t1281 + t1284) * t110) * m(6) + (-(-qJD(1) * t499 + t1268 - t195 + t816) * t196 + t141 * (-t499 - t1056) + t195 * t1053 + t140 * (t500 + t946) + t196 * (-t944 + t1059) + (t1144 * t611 - t196 * t573) * t723 + ((-t195 * rSges(4,3) + t196 * (-t689 - t1206)) * t729 + (t195 * (-t612 - t689) - t196 * t733) * t732) * qJD(1)) * m(4); (-t182 * t732 + t183 * t729 + (t335 * t729 + t336 * t732) * qJD(1)) * t1209 + t736 + ((t1057 * t731 + t1058 * t728) * qJD(1) + (t1238 * t731 + t793 * t728) * qJD(2)) * t1210 + ((-t1040 * t1126 - t1043) * t732 + (t775 + (t1125 * t732 + t742) * qJD(2)) * t729) * t982 + ((-t1125 * t699 + t1043) * t729 + (t775 + (t1126 * t729 + t742) * qJD(2)) * t732) * t985 + (qJD(1) * t184 + (-(t1244 * t729 + t750 * t732) * t732 + (t1245 * t729 + t749 * t732) * t729 + (t212 * t729 + t213 * t732) * qJD(1)) * t1280) * t1216 + (qJD(1) * t185 + (-(-t1244 * t732 + t750 * t729) * t732 + (-t1245 * t732 + t749 * t729) * t729 + (t210 * t729 + t211 * t732) * qJD(1)) * t1280) * t1215 + (t818 + t124) * t987 + (t817 + t125) * t986 + (-t87 * (t746 - t1045) - t88 * (t484 + t743) - t65 * (t760 + t960) - (-t88 * t1001 + ((-t732 * t87 - t1191) * t731 + t65 * t970) * qJD(2)) * pkin(2) - t745 + t87 * t937 + t15 * (t796 + t1081) + t65 * (t772 + t1014) + (t1272 * t807 + t783 * t87) * t732 + (t27 * t807 + t88 * t783 + (-t483 + t942) * t1158) * t729) * m(7) + (-t110 * (t763 + t928) - t94 * (-t317 * t995 + t794 + t960) - (-t110 * t1001 + (-t731 * t889 + t94 * t970) * qJD(2)) * pkin(2) + t24 * (t848 + t1081) + t94 * (t789 + t1014) + (t110 * t790 + (-t483 + t1015) * t1156) * t729 + t1237 * (-t440 + t851) + (t732 * t790 + t1045 + t1258) * t109) * m(6) + (-t150 * (t919 - t1045) - t151 * (t928 + t952) - t121 * (t959 + t960) - (-t151 * t1001 + ((-t150 * t732 - t151 * t729) * t731 + t121 * t970) * qJD(2)) * pkin(2) + t150 * t1070 + t47 * (t940 + t1081) + t121 * (t850 + t1014) + (t1259 * t852 + t150 * t802) * t732 + (t100 * t852 + t151 * t802 + (-t483 - t1090) * t1049) * t729) * m(5) + (-(-t196 * t1001 + (t188 * t970 + t731 * t876) * qJD(2)) * pkin(2) + t95 * (t1078 + t1081) + t188 * (t1014 + t1016) + (t195 * t921 + (qJD(1) * t196 + t141) * t979) * t732 + (t140 * t979 + t196 * t921 + (t195 * t611 + t188 * (-t483 - t500)) * qJD(1)) * t729 + t1251) * m(4) + (-(t333 * t597 - t1141) * qJD(1) - (t331 * (-t597 * t729 - t598 * t732) + t870 * t916) * qJD(2) + 0.2e1 * t331 * (t379 * t732 + t380 * t729 + (t558 * t732 - t559 * t729) * qJD(1)) + t870 * t618 + (-t201 * t729 - t202 * t732 + (-t334 * t732 + t1143) * qJD(1)) * t650) * m(3); t736 + (-t88 * (-pkin(3) * t1003 + t743) - t745 + t15 * t796 + (t1158 * t942 + t837 * t88) * t729 + (t1272 * t732 + t27 * t729) * (t976 - t1084) + (t732 * t837 - t642 - t746 + t937) * t87 + (-t760 - t857 + t772) * t65) * m(7) + (-t110 * (t808 + t763) + t24 * t848 + (t1015 * t1156 + t110 * t856) * t729 + (t567 - (-t1038 * t317 - t582) * t729 - t794 + t789) * t94 + t1237 * (-t440 + t976) + (t732 * t856 + t1258 - t642) * t109) * m(6) + (-t151 * (t808 + t952) + t47 * t940 + (-t1049 * t1090 + t151 * t927) * t729 + (t100 * t729 + t1259 * t732) * t977 + (t732 * t927 + t1070 - t642 - t919) * t150 + (-t857 - t959 + t850) * t121) * m(5) + (t95 * t1078 + t188 * (-t1042 * t500 + t1016) + t876 * t548 + (-t140 * t729 - t141 * t732 + (-t196 * t732 + t1144) * qJD(1)) * t611 + t1251) * m(4); 0.2e1 * (t1215 * t27 + t1216 * t28 + t1230 * t65) * m(7) + 0.2e1 * (-t1193 / 0.2e1 + t1192 / 0.2e1 + t94 * t1230) * m(6) + 0.2e1 * (t100 * t1215 + t101 * t1216 + t121 * t1230) * m(5); t1348 * t1123 / 0.2e1 + t1349 * t1121 / 0.2e1 + (t1262 * t679 - t1271 * t680) * t1232 + (t1263 * t679 - t1270 * t680) * t1231 + (-t1265 * t732 + t1266 * t571 + t1267 * t570) * t1229 + ((t1263 * t723 - t1337) * t680 + (qJD(1) * t1287 + t1270 * t723 + t1345 * t732 + t1346 * t729) * t679) * t1228 + ((t1262 * t723 - t1336) * t680 + (qJD(1) * t1286 + t1271 * t723 + t1343 * t732 + t1344 * t729) * t679) * t1227 + (-t1265 * t729 + t1266 * t569 + t1267 * t568) * t1226 + (t1356 * t680 + (t1266 * t730 + t1267 * t727) * t679) * t1223 + ((t1264 * t723 - t1362) * t680 + (qJD(1) * t1288 + t1269 * t723 + t1341 * t732 + t1342 * t729) * t679) * t1222 - (t1149 + t1150 + t1196 - t1197 + t1147 + t1148 + t1194 - t1195 + t1252) * t680 / 0.2e1 + (-(t1122 * t65 + t569 * t88 + t571 * t87) * qJD(6) - (t1094 * t88 - t1095 * t87) * t636 - (t1071 * t87 + t1094 * t65) * t530 - (t1071 * t88 + t1095 * t65) * t529 + (t28 * t1098 + t87 * t1100 - t27 * t1096 - t88 * t1101 + (-t1283 * t732 + t797 * t729) * t723) * t680 + ((t1096 * t88 - t1098 * t87) * t723 + (qJD(1) * t797 - t1084 * t27 + t1098 * t15 - t1099 * t88 + t1100 * t65) * t732 + (qJD(1) * t1283 + t28 * t1084 - t15 * t1096 + t87 * t1099 - t65 * t1101) * t729) * t679) * m(7) + (-t109 * (-t360 * t636 - t519 * t530) - t110 * (t365 * t636 - t519 * t529) - t94 * (t360 * t529 + t365 * t530) + (t109 * t173 - t110 * t171 + t46 * t313 - t45 * t317 + (t94 * t871 + (t109 * t729 - t110 * t732) * t440) * t723) * t680 + (t109 * (t237 * t729 - t313 * t723) + t110 * (-t237 * t732 + t317 * t723) + t24 * t871 + t94 * (-t1041 * t317 - t1042 * t313 - t171 * t729 + t173 * t732) + (qJD(1) * t889 + t1192 - t1193) * t440) * t679) * m(6) + ((t1264 * t679 - t1269 * t680) * qJD(5) + t1338) * t679 * t723 / 0.2e1 + t1340 * (t679 * t986 + t729 * t989) + t1339 * (-t1005 / 0.2e1 + t732 * t989); (t1124 * t15 + t27 * t568 + t28 * t570 + (t1124 * t529 - t570 * t636 + t274) * t88 + (t1124 * t530 + t568 * t636 - t272) * t87 + (-t529 * t568 - t530 * t570 + t810) * t65) * m(7);];
tauc  = t1(:);
