% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPRR8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR8_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:26:08
% EndTime: 2019-03-09 09:26:20
% DurationCPUTime: 4.06s
% Computational Cost: add. (4777->350), mult. (10908->629), div. (0->0), fcn. (9943->8), ass. (0->165)
t118 = cos(pkin(10));
t121 = cos(qJ(2));
t117 = sin(pkin(10));
t151 = pkin(2) * t118 + pkin(7) * t117 + pkin(3);
t144 = pkin(4) + t151;
t120 = sin(qJ(2));
t209 = pkin(8) - qJ(3);
t219 = -t120 * t209 + pkin(1);
t137 = t118 * t219 + t121 * t144;
t168 = pkin(7) * t118 - qJ(4);
t210 = pkin(2) * t121;
t138 = t168 * t121 + (-t210 - t219) * t117;
t212 = sin(qJ(5));
t214 = cos(qJ(5));
t19 = t137 * t214 - t138 * t212;
t160 = t209 * t214;
t223 = -qJD(3) * t212 + qJD(5) * t160;
t173 = qJD(5) * t212;
t174 = qJD(5) * t214;
t72 = t117 * t173 + t118 * t174;
t192 = t120 * qJD(3);
t180 = t117 * t192;
t143 = -t121 * qJD(4) - t180;
t211 = pkin(2) * t120;
t130 = (-t168 * t120 + (t121 * t209 + t211) * t117) * qJD(2) + t143;
t178 = t118 * t192;
t204 = t118 * t121;
t131 = t178 + (-t120 * t144 - t204 * t209) * qJD(2);
t20 = t137 * t212 + t138 * t214;
t11 = -qJD(5) * t20 - t130 * t212 + t131 * t214;
t113 = t117 ^ 2;
t114 = t118 ^ 2;
t222 = (t113 + t114) * qJD(3);
t181 = t212 * t118;
t100 = t117 * t174;
t145 = -t118 * t173 + t100;
t203 = t120 * qJ(3);
t81 = -pkin(3) * t118 - qJ(4) * t117 - pkin(2);
t221 = (-t121 * t81 + t203) * qJD(2);
t167 = (t120 ^ 2 - t121 ^ 2) * qJD(2);
t220 = -qJD(5) - qJD(6);
t215 = pkin(3) + pkin(4);
t218 = (pkin(5) * t214 + t215) * t117 + pkin(7);
t217 = t117 * t215 + pkin(7);
t216 = 0.2e1 * t118;
t213 = cos(qJ(6));
t159 = t212 * t209;
t53 = -t117 * t159 - t118 * t160;
t205 = t118 * t120;
t198 = qJD(2) * t121;
t97 = t118 * t198;
t208 = -qJ(4) * t97 - qJD(4) * t205;
t207 = t117 * t120;
t206 = t117 * t121;
t202 = qJ(3) * t222;
t142 = t117 * t212 + t118 * t214;
t199 = qJD(2) * t120;
t197 = qJD(3) * t121;
t119 = sin(qJ(6));
t196 = qJD(6) * t119;
t195 = t113 * qJD(4);
t194 = t117 * qJD(3);
t193 = t117 * qJD(4);
t191 = -0.2e1 * pkin(1) * qJD(2);
t171 = t214 * qJD(3);
t190 = t117 * t223 - t118 * t171;
t175 = qJD(2) * t212;
t189 = -t120 * t72 - t175 * t204;
t188 = pkin(7) * t206;
t187 = pkin(7) * t204;
t186 = pkin(5) * t199;
t185 = pkin(5) * t196;
t184 = pkin(7) * t198;
t183 = pkin(3) * t117 + pkin(7);
t182 = t214 * t117;
t179 = t118 * t199;
t177 = t120 * t198;
t176 = qJD(2) * t214;
t172 = qJD(6) * t213;
t169 = -pkin(1) - t203;
t166 = 0.2e1 * t177;
t73 = pkin(4) * t118 - t81;
t165 = pkin(5) * t172;
t84 = t117 * t97;
t164 = t213 * t214;
t158 = t213 * t142;
t156 = -t203 - t210;
t155 = -qJ(3) * t121 + t211;
t50 = -t178 + (pkin(7) * t207 + t118 * t155) * qJD(2);
t51 = -t180 + (-pkin(7) * t205 + t117 * t155) * qJD(2);
t154 = -t117 * t50 + t118 * t51;
t152 = t120 * t84;
t149 = qJD(5) * t159;
t90 = t120 * t181;
t148 = -t120 * t182 + t90;
t147 = -pkin(1) + t156;
t146 = pkin(2) * t117 - t168;
t38 = t120 * t145 + t142 * t198;
t122 = -t38 * pkin(9) + t11 - t186;
t67 = t142 * t120;
t126 = t121 * pkin(5) - t67 * pkin(9) + t19;
t124 = t213 * t126;
t10 = -qJD(5) * t19 - t214 * t130 - t212 * t131;
t140 = -t176 * t206 - t189;
t128 = -pkin(9) * t140 - t10;
t15 = -pkin(9) * t148 + t20;
t1 = -qJD(6) * t124 - t119 * t122 - t128 * t213 + t15 * t196;
t78 = -t181 + t182;
t45 = -t119 * t142 + t213 * t78;
t141 = t213 * t148;
t80 = t119 * t214 + t212 * t213;
t35 = -t119 * t148 + t213 * t67;
t52 = -t117 * t160 + t118 * t159;
t139 = -t78 * pkin(9) + t52;
t136 = t119 * t139;
t135 = t100 * pkin(9) - (pkin(9) * t212 + t159) * qJD(5) * t118 + t190;
t134 = t213 * t139;
t30 = t223 * t118 + (t149 + t171) * t117;
t129 = t72 * pkin(9) + t30;
t127 = -t119 * t128 + t122 * t213;
t125 = t119 * t126;
t9 = t15 * t213 + t125;
t102 = qJ(4) * t205;
t94 = t117 * t198;
t93 = t117 * t199;
t92 = t121 * t194;
t91 = -0.2e1 * t177;
t83 = t114 * t166;
t82 = t113 * t166;
t79 = -t119 * t212 + t164;
t77 = 0.2e1 * t222;
t71 = t117 * t167;
t70 = (t113 - t114) * t198;
t66 = t216 * t167;
t62 = t120 * t183 - t102;
t60 = t117 * t147 + t187;
t59 = t118 * t147 - t188;
t57 = pkin(5) * t145 + t193;
t56 = -t118 * t169 + t121 * t151;
t55 = t117 * t169 - t121 * t146;
t54 = -t120 * t217 + t102;
t49 = t220 * t80;
t48 = (qJD(6) * t212 + t173) * t119 + t220 * t164;
t47 = pkin(5) * t142 + t73;
t46 = t183 * t198 + t208;
t44 = t119 * t78 + t158;
t43 = t178 + (qJ(3) * t204 - t120 * t151) * qJD(2);
t41 = t198 * t217 + t208;
t40 = (-qJ(3) * t206 + t120 * t146) * qJD(2) + t143;
t36 = -pkin(9) * t142 + t53;
t34 = t119 * t67 + t141;
t29 = -t118 * t149 + t190;
t28 = t90 * pkin(5) - t120 * t218 + t102;
t22 = qJD(6) * t45 - t119 * t72 + t145 * t213;
t21 = qJD(6) * t158 + t119 * t145 + t196 * t78 + t213 * t72;
t18 = pkin(5) * t189 + t198 * t218 + t208;
t17 = t213 * t36 + t136;
t16 = -t119 * t36 + t134;
t13 = qJD(6) * t35 + t119 * t38 + t140 * t213;
t12 = qJD(6) * t141 + t119 * t140 + t196 * t67 - t213 * t38;
t8 = -t119 * t15 + t124;
t7 = -qJD(6) * t136 + t119 * t135 + t129 * t213 - t172 * t36;
t6 = -qJD(6) * t134 - t119 * t129 + t135 * t213 + t196 * t36;
t2 = -qJD(6) * t9 + t127;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, -0.2e1 * t167, 0, t91, 0, 0, t120 * t191, t121 * t191, 0, 0, t83, -0.4e1 * t152, t66, t82, -0.2e1 * t71, t91, -0.2e1 * t121 * t50 + 0.2e1 * (t59 + 0.2e1 * t188) * t199, 0.2e1 * t121 * t51 + 0.2e1 * (-t60 + 0.2e1 * t187) * t199, 0.2e1 * (-t117 * t51 - t118 * t50) * t120 + 0.2e1 * (-t117 * t60 - t118 * t59) * t198, 0.2e1 * pkin(7) ^ 2 * t177 + 0.2e1 * t50 * t59 + 0.2e1 * t51 * t60, t83, t66, 0.4e1 * t152, t91, 0.2e1 * t71, t82, 0.2e1 * t46 * t207 + 0.2e1 * t121 * t43 + 0.2e1 * (-t120 * t56 + t206 * t62) * qJD(2), 0.2e1 * (-t117 * t40 + t118 * t43) * t120 + 0.2e1 * (-t117 * t55 + t118 * t56) * t198, -0.2e1 * t46 * t205 - 0.2e1 * t121 * t40 + 0.2e1 * (t120 * t55 - t204 * t62) * qJD(2), 0.2e1 * t40 * t55 + 0.2e1 * t43 * t56 + 0.2e1 * t46 * t62, 0.2e1 * t67 * t38, -0.2e1 * t140 * t67 - 0.2e1 * t148 * t38, 0.2e1 * t121 * t38 - 0.2e1 * t199 * t67, 0.2e1 * t148 * t140, -0.2e1 * t121 * t140 + 0.2e1 * t148 * t199, t91, 0.2e1 * t11 * t121 + 0.2e1 * t140 * t54 - 0.2e1 * t148 * t41 - 0.2e1 * t19 * t199, 0.2e1 * t10 * t121 + 0.2e1 * t199 * t20 + 0.2e1 * t38 * t54 - 0.2e1 * t41 * t67, 0.2e1 * t10 * t148 - 0.2e1 * t11 * t67 - 0.2e1 * t140 * t20 - 0.2e1 * t19 * t38, -0.2e1 * t10 * t20 + 0.2e1 * t11 * t19 - 0.2e1 * t41 * t54, -0.2e1 * t35 * t12, 0.2e1 * t12 * t34 - 0.2e1 * t13 * t35, -0.2e1 * t12 * t121 - 0.2e1 * t199 * t35, 0.2e1 * t34 * t13, -0.2e1 * t121 * t13 + 0.2e1 * t199 * t34, t91, 0.2e1 * t121 * t2 + 0.2e1 * t13 * t28 - 0.2e1 * t18 * t34 - 0.2e1 * t199 * t8, 0.2e1 * t1 * t121 - 0.2e1 * t12 * t28 - 0.2e1 * t18 * t35 + 0.2e1 * t199 * t9, 0.2e1 * t1 * t34 + 0.2e1 * t12 * t8 - 0.2e1 * t13 * t9 - 0.2e1 * t2 * t35, -0.2e1 * t1 * t9 - 0.2e1 * t18 * t28 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, 0, -t199, 0, -t184, pkin(7) * t199, 0, 0, t84, -t70, t93, -t84, t179, 0, t92 + (t117 * t156 - t187) * qJD(2), t118 * t197 + (t118 * t156 + t188) * qJD(2), t154, -pkin(2) * t184 + (-t117 * t59 + t118 * t60) * qJD(3) + t154 * qJ(3), t84, t93, t70, 0, -t179, -t84, -t117 * t221 - t46 * t118 - t120 * t195 + t92, t117 * t43 + t118 * t40, -t46 * t117 + (t120 * t193 - t197 + t221) * t118, t46 * t81 + (qJ(3) * t40 + qJD(3) * t55) * t118 + (qJ(3) * t43 + qJD(3) * t56 - qJD(4) * t62) * t117, t38 * t78 - t67 * t72, -t140 * t78 - t142 * t38 - t145 * t67 + t148 * t72, -t121 * t72 - t199 * t78, t140 * t142 + t145 * t148, -t121 * t145 + t142 * t199, 0, t30 * t121 + t140 * t73 - t142 * t41 + t145 * t54 + t148 * t193 - t199 * t52, t121 * t29 + t193 * t67 + t199 * t53 + t38 * t73 - t41 * t78 - t54 * t72, t10 * t142 - t11 * t78 - t140 * t53 - t145 * t20 + t148 * t29 + t19 * t72 - t30 * t67 - t52 * t38, -t10 * t53 + t11 * t52 + t19 * t30 + t193 * t54 - t20 * t29 - t41 * t73, -t12 * t45 - t21 * t35, t12 * t44 - t13 * t45 + t21 * t34 - t22 * t35, -t121 * t21 - t199 * t45, t13 * t44 + t22 * t34, -t121 * t22 + t199 * t44, 0, t121 * t7 + t13 * t47 - t16 * t199 - t18 * t44 + t22 * t28 + t34 * t57, -t12 * t47 + t121 * t6 + t17 * t199 - t18 * t45 - t21 * t28 + t35 * t57, t1 * t44 + t12 * t16 - t13 * t17 - t2 * t45 + t21 * t8 - t22 * t9 + t34 * t6 - t35 * t7, -t1 * t17 + t16 * t2 - t18 * t47 + t28 * t57 - t6 * t9 + t7 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0.2e1 * t202, 0, 0, 0, 0, 0, 0, t193 * t216, t77, 0.2e1 * t195, -0.2e1 * t193 * t81 + 0.2e1 * t202, -0.2e1 * t78 * t72, 0.2e1 * t142 * t72 - 0.2e1 * t145 * t78, 0, 0.2e1 * t142 * t145, 0, 0, 0.2e1 * t142 * t193 + 0.2e1 * t145 * t73, 0.2e1 * t193 * t78 - 0.2e1 * t72 * t73, 0.2e1 * t142 * t29 - 0.2e1 * t145 * t53 - 0.2e1 * t30 * t78 + 0.2e1 * t52 * t72, 0.2e1 * t193 * t73 - 0.2e1 * t29 * t53 + 0.2e1 * t30 * t52, -0.2e1 * t45 * t21, 0.2e1 * t21 * t44 - 0.2e1 * t22 * t45, 0, 0.2e1 * t44 * t22, 0, 0, 0.2e1 * t22 * t47 + 0.2e1 * t44 * t57, -0.2e1 * t21 * t47 + 0.2e1 * t45 * t57, 0.2e1 * t16 * t21 - 0.2e1 * t17 * t22 + 0.2e1 * t44 * t6 - 0.2e1 * t45 * t7, 0.2e1 * t16 * t7 - 0.2e1 * t17 * t6 + 0.2e1 * t47 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t97, 0, t184, 0, 0, 0, 0, 0, 0, t94, 0, -t97, t46, 0, 0, 0, 0, 0, 0, -t140, -t38, 0, t41, 0, 0, 0, 0, 0, 0, -t13, t12, 0, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, 0, 0, 0, 0, 0, 0, -t145, t72, 0, -t193, 0, 0, 0, 0, 0, 0, -t22, t21, 0, -t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, t97, 0, t43, 0, 0, 0, 0, 0, 0, -t120 * t176 - t121 * t173, t120 * t175 - t121 * t174, -t212 * t140 - t214 * t38 + (-t148 * t214 + t212 * t67) * qJD(5), -t10 * t212 + t11 * t214 + (-t19 * t212 + t20 * t214) * qJD(5), 0, 0, 0, 0, 0, 0, t121 * t49 - t199 * t79, t121 * t48 + t199 * t80, t12 * t79 - t13 * t80 + t34 * t48 - t35 * t49, -t1 * t80 + t2 * t79 - t48 * t9 + t49 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, 0, 0, 0, 0, 0, 0, 0, 0, -t212 * t100 + t214 * t72 + (-t214 * t142 + (t78 + t181) * t212) * qJD(5), -t29 * t212 + t30 * t214 + (-t212 * t52 + t214 * t53) * qJD(5), 0, 0, 0, 0, 0, 0, 0, 0, t21 * t79 - t22 * t80 + t44 * t48 - t45 * t49, t16 * t49 - t17 * t48 - t6 * t80 + t7 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t48 * t80 + 0.2e1 * t49 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, -t140, -t199, t11, t10, 0, 0, 0, 0, -t12, 0, -t13, -t199, -qJD(6) * t125 - t121 * t185 - t15 * t172 - t186 * t213 + t127 (t119 * t199 - t121 * t172) * pkin(5) + t1 (t213 * t12 - t119 * t13 + (t119 * t35 - t213 * t34) * qJD(6)) * pkin(5) (t213 * t2 - t1 * t119 + (-t119 * t8 + t213 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, 0, -t145, 0, t30, t29, 0, 0, 0, 0, -t21, 0, -t22, 0, t7, t6 (t213 * t21 - t119 * t22 + (t119 * t45 - t213 * t44) * qJD(6)) * pkin(5) (t213 * t7 - t119 * t6 + (-t119 * t16 + t17 * t213) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t174, 0, 0, 0, 0, 0, 0, 0, 0, t49, t48, 0 (t213 * t49 - t119 * t48 + (-t119 * t79 + t213 * t80) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t185, -0.2e1 * t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, 0, -t13, -t199, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, 0, -t22, 0, t7, t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t48, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, -t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
