% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPPRR8_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR8_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR8_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR8_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR8_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR8_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:26:20
% EndTime: 2019-03-09 09:26:40
% DurationCPUTime: 12.74s
% Computational Cost: add. (12384->739), mult. (27915->936), div. (0->0), fcn. (19898->12), ass. (0->337)
t301 = sin(pkin(10));
t302 = cos(pkin(10));
t305 = sin(qJ(5));
t308 = cos(qJ(5));
t226 = t301 * t305 + t302 * t308;
t200 = t226 * qJD(5);
t309 = cos(qJ(2));
t337 = t309 * t226;
t431 = -qJD(1) * t337 - t200;
t421 = qJD(1) * t309;
t396 = t302 * t421;
t398 = t301 * t421;
t411 = qJD(5) * t308;
t412 = qJD(5) * t305;
t430 = t301 * t411 - t302 * t412 - t305 * t396 + t308 * t398;
t265 = qJD(5) + t421;
t248 = qJD(6) + t265;
t306 = sin(qJ(2));
t366 = pkin(2) * t306 - qJ(3) * t309;
t232 = t366 * qJD(1);
t206 = t301 * t232;
t422 = qJD(1) * t306;
t273 = qJ(4) * t422;
t442 = t302 * t306;
t443 = t301 * t309;
t339 = -pkin(7) * t442 + pkin(8) * t443;
t120 = qJD(1) * t339 + t206 + t273;
t467 = pkin(8) - qJ(3);
t238 = t467 * t301;
t239 = t467 * t302;
t415 = qJD(3) * t308;
t416 = qJD(3) * t305;
t402 = -pkin(7) * t301 - pkin(3);
t441 = t302 * t309;
t324 = -pkin(8) * t441 + (-pkin(4) + t402) * t306;
t447 = t232 * t302;
t98 = qJD(1) * t324 - t447;
t462 = -t120 * t308 - t238 * t411 + t239 * t412 + t301 * t416 + t302 * t415 - t305 * t98;
t152 = -t238 * t305 - t239 * t308;
t461 = -qJD(5) * t152 + t120 * t305 + t301 * t415 - t302 * t416 - t308 * t98;
t399 = t301 * t422;
t409 = t302 * qJD(2);
t218 = t399 - t409;
t397 = t302 * t422;
t420 = qJD(2) * t301;
t220 = t397 + t420;
t354 = t218 * t305 + t220 * t308;
t453 = t354 * t265;
t281 = t302 * qJDD(2);
t408 = qJD(1) * qJD(2);
t391 = t309 * t408;
t407 = t306 * qJDD(1);
t334 = t391 + t407;
t170 = t301 * t334 - t281;
t171 = qJDD(2) * t301 + t302 * t334;
t54 = qJD(5) * t354 - t170 * t308 + t171 * t305;
t519 = -t54 + t453;
t390 = t301 * t407;
t297 = t306 ^ 2;
t298 = t309 ^ 2;
t424 = t297 - t298;
t488 = qJD(1) * t424;
t518 = qJD(2) * (t218 * t306 + t301 * t488) - (t170 + t390) * t309;
t304 = sin(qJ(6));
t355 = -t218 * t308 + t220 * t305;
t476 = cos(qJ(6));
t479 = t304 * t354 + t355 * t476;
t517 = t479 ^ 2;
t480 = -t304 * t355 + t354 * t476;
t501 = t480 ^ 2;
t516 = pkin(5) * t422 - pkin(9) * t431 + t461;
t515 = pkin(9) * t430 - t462;
t514 = t248 * t479;
t513 = t248 * t480;
t468 = t479 * t480;
t296 = g(3) * t309;
t307 = sin(qJ(1));
t310 = cos(qJ(1));
t369 = g(1) * t310 + g(2) * t307;
t492 = t369 * t306;
t512 = t296 - t492;
t287 = t306 * qJ(3);
t292 = t309 * pkin(2);
t403 = -pkin(1) - t292;
t347 = t403 - t287;
t210 = t347 * qJD(1);
t279 = pkin(7) * t421;
t242 = qJD(2) * qJ(3) + t279;
t139 = t210 * t302 - t242 * t301;
t118 = pkin(3) * t421 + qJD(4) - t139;
t77 = pkin(4) * t421 - pkin(8) * t220 + t118;
t140 = t210 * t301 + t242 * t302;
t124 = -qJ(4) * t421 + t140;
t80 = pkin(8) * t218 + t124;
t33 = -t305 * t80 + t308 * t77;
t284 = t309 * qJDD(1);
t392 = t306 * t408;
t333 = -t392 + t284;
t197 = qJD(2) * t366 - qJD(3) * t306;
t129 = qJD(1) * t197 + qJDD(1) * t347;
t182 = pkin(7) * t333 + qJDD(2) * qJ(3) + qJD(2) * qJD(3);
t72 = t129 * t302 - t182 * t301;
t345 = pkin(3) * t284 + qJDD(4) - t72;
t58 = -pkin(3) * t392 + t345;
t38 = pkin(4) * t333 - pkin(8) * t171 + t58;
t73 = t129 * t301 + t182 * t302;
t55 = qJ(4) * t392 + (-qJ(4) * qJDD(1) - qJD(1) * qJD(4)) * t309 + t73;
t41 = pkin(8) * t170 + t55;
t343 = -t305 * t38 - t308 * t41 - t411 * t77 + t412 * t80;
t511 = -t33 * t265 - t343;
t387 = -qJ(4) * t301 - pkin(2);
t510 = t302 * pkin(3) - t387;
t276 = pkin(7) * t407;
t191 = -qJDD(2) * pkin(2) + pkin(7) * t391 + qJDD(3) + t276;
t385 = -t191 - t296;
t319 = -t492 - t385;
t508 = t501 - t517;
t393 = qJD(6) * t476;
t410 = qJD(6) * t304;
t53 = -t170 * t305 - t171 * t308 - t218 * t411 + t220 * t412;
t14 = t304 * t54 + t354 * t410 + t355 * t393 + t476 * t53;
t507 = -t14 + t514;
t29 = -pkin(9) * t354 + t33;
t27 = pkin(5) * t265 + t29;
t34 = t305 * t77 + t308 * t80;
t30 = -pkin(9) * t355 + t34;
t225 = -qJDD(5) - t333;
t9 = -qJD(5) * t34 - t305 * t41 + t308 * t38;
t6 = -pkin(5) * t225 + pkin(9) * t53 + t9;
t7 = -pkin(9) * t54 - t343;
t1 = t27 * t393 - t30 * t410 + t304 * t6 + t476 * t7;
t437 = t307 * t309;
t202 = t301 * t437 + t302 * t310;
t435 = t310 * t301;
t203 = t302 * t437 - t435;
t299 = qJ(5) + qJ(6);
t285 = sin(t299);
t286 = cos(t299);
t103 = -t202 * t285 - t203 * t286;
t438 = t307 * t302;
t204 = t309 * t435 - t438;
t436 = t309 * t310;
t205 = t301 * t307 + t302 * t436;
t105 = t204 * t285 + t205 * t286;
t352 = t285 * t301 + t286 * t302;
t498 = g(3) * t306;
t234 = -qJD(2) * pkin(2) + pkin(7) * t422 + qJD(3);
t112 = pkin(3) * t218 - qJ(4) * t220 + t234;
t78 = -pkin(4) * t218 - t112;
t50 = pkin(5) * t355 + t78;
t506 = g(1) * t105 - g(2) * t103 + t352 * t498 + t479 * t50 - t1;
t494 = (t218 * t302 + t220 * t301) * t309;
t504 = qJD(1) * t494 - t170 * t301 + t171 * t302;
t451 = t171 * t301;
t452 = t170 * t302;
t503 = qJD(2) * t494 + t306 * (t451 + t452);
t502 = -0.2e1 * pkin(1);
t500 = t354 ^ 2;
t499 = t355 ^ 2;
t497 = t265 * t34 + t9;
t455 = t355 * t265;
t496 = t53 - t455;
t426 = t292 + t287;
t235 = -pkin(1) - t426;
t258 = pkin(7) * t443;
t291 = t309 * pkin(3);
t127 = pkin(4) * t309 + t258 + t291 + (-pkin(8) * t306 - t235) * t302;
t175 = pkin(7) * t441 + t235 * t301;
t154 = -qJ(4) * t309 + t175;
t445 = t301 * t306;
t138 = pkin(8) * t445 + t154;
t60 = t127 * t305 + t138 * t308;
t414 = qJD(4) * t301;
t429 = qJ(4) * t396 - t279;
t478 = -pkin(3) - pkin(4);
t379 = -t398 * t478 + t414 - t429;
t216 = t220 ^ 2;
t491 = -t218 ^ 2 - t216;
t419 = qJD(2) * t306;
t490 = qJ(4) * t419 - qJD(4) * t309;
t121 = t204 * t308 - t205 * t305;
t358 = t202 * t308 - t203 * t305;
t489 = -g(1) * t121 - g(2) * t358;
t208 = t220 * qJD(4);
t486 = pkin(3) * t170 - qJ(4) * t171 - t208;
t102 = t202 * t286 - t203 * t285;
t104 = t204 * t286 - t205 * t285;
t405 = t476 * t30;
t11 = t27 * t304 + t405;
t2 = -qJD(6) * t11 - t304 * t7 + t476 * t6;
t353 = t285 * t302 - t286 * t301;
t485 = -g(1) * t104 - g(2) * t102 + t353 * t498 - t480 * t50 + t2;
t15 = qJD(6) * t480 - t304 * t53 + t476 * t54;
t483 = -t15 + t513;
t388 = t302 * t284;
t313 = qJD(1) ^ 2;
t446 = t298 * t313;
t482 = -t301 * t446 + (t218 + t409) * t422 - t388;
t477 = pkin(5) * t54;
t475 = pkin(1) * t313;
t474 = pkin(5) * t305;
t473 = pkin(7) * t220;
t471 = g(1) * t307;
t151 = -t238 * t308 + t239 * t305;
t444 = t301 * t308;
t227 = -t302 * t305 + t444;
t107 = -pkin(9) * t227 + t151;
t108 = -pkin(9) * t226 + t152;
t48 = t107 * t476 - t108 * t304;
t466 = qJD(6) * t48 + t304 * t516 - t476 * t515;
t49 = t107 * t304 + t108 * t476;
t465 = -qJD(6) * t49 + t304 * t515 + t476 * t516;
t464 = t226 * t393 + t227 * t410 + t304 * t430 - t431 * t476;
t137 = -t226 * t304 + t227 * t476;
t463 = qJD(6) * t137 + t304 * t431 + t430 * t476;
t460 = t304 * t30;
t457 = pkin(5) * t430 + t379;
t456 = pkin(7) * qJDD(1);
t454 = t354 * t355;
t450 = t197 * t302;
t449 = t202 * t305;
t440 = t306 * t307;
t439 = t306 * t310;
t311 = -pkin(9) - pkin(8);
t434 = t310 * t311;
t341 = t304 * t305 - t308 * t476;
t433 = t248 * t341;
t231 = t304 * t308 + t305 * t476;
t432 = t248 * t231;
t395 = t309 * t409;
t428 = -qJ(4) * t395 - qJD(4) * t442;
t427 = g(1) * t440 - g(2) * t439;
t425 = pkin(1) * t310 + pkin(7) * t307;
t423 = t297 + t298;
t418 = qJD(2) * t309;
t417 = qJD(3) * t302;
t406 = pkin(7) * t419;
t404 = g(1) * t436 + g(2) * t437 + t498;
t401 = pkin(3) * t301 + pkin(7);
t400 = qJ(3) * t419;
t192 = t218 * t421;
t57 = t191 + t486;
t394 = -t57 - t296;
t389 = t301 * t284;
t386 = qJ(4) + t474;
t59 = t127 * t308 - t138 * t305;
t174 = t235 * t302 - t258;
t207 = pkin(4) * t302 + t510;
t378 = g(1) * t302 * t439 + g(2) * t306 * t438 + qJ(3) * t389 + qJD(3) * t398;
t377 = pkin(3) * t441 + qJ(4) * t443 + t426;
t376 = pkin(2) * t436 + qJ(3) * t439 + t425;
t375 = qJ(3) * t388;
t374 = t306 * t391;
t373 = t301 * t478 - pkin(7);
t372 = t402 * t306;
t371 = -g(1) * t202 + g(2) * t204;
t370 = g(1) * t203 - g(2) * t205;
t368 = -g(2) * t310 + t471;
t293 = t310 * pkin(7);
t367 = -pkin(3) * t203 - qJ(4) * t202 + t293;
t365 = pkin(7) * t218 + t234 * t301;
t362 = -qJ(3) * t452 - t218 * t417 - t404;
t361 = pkin(3) * t205 + t376;
t357 = t203 * t308 + t449;
t351 = qJ(3) * t171 + qJD(3) * t220;
t350 = qJD(1) * (-t220 + t420);
t349 = t265 ^ 2;
t312 = qJD(2) ^ 2;
t348 = qJDD(2) * t309 - t306 * t312;
t160 = -pkin(7) * t397 + t206;
t181 = t301 * t197;
t149 = -t302 * t406 + t181;
t189 = t226 * t306;
t43 = pkin(5) * t309 - pkin(9) * t189 + t59;
t188 = t305 * t442 - t306 * t444;
t44 = -pkin(9) * t188 + t60;
t22 = -t304 * t44 + t43 * t476;
t23 = t304 * t43 + t44 * t476;
t100 = -t188 * t304 + t189 * t476;
t87 = qJD(2) * t324 - t450;
t88 = qJD(2) * t339 + t181 + t490;
t25 = t127 * t411 - t138 * t412 + t305 * t87 + t308 * t88;
t338 = t306 * t227;
t331 = -t192 * t301 - t452;
t254 = qJ(4) * t442;
t153 = t306 * t373 + t254;
t329 = qJ(4) * t204 + t361;
t328 = (t170 * t306 + t218 * t418) * t301;
t327 = t347 * t471;
t326 = -g(1) * t204 - g(2) * t202 - g(3) * t445;
t163 = t170 * pkin(4);
t325 = t163 + t57;
t117 = t373 * t418 - t428;
t26 = -qJD(5) * t60 - t305 * t88 + t308 * t87;
t320 = t309 * t350 - t281 + t390;
t318 = t319 + t486;
t317 = t163 + t318;
t275 = pkin(5) * t308 + pkin(4);
t263 = qJ(3) * t436;
t259 = qJ(3) * t437;
t257 = t306 * t313 * t309;
t214 = qJDD(1) * t298 - 0.2e1 * t374;
t212 = -qJDD(6) + t225;
t183 = t306 * t401 - t254;
t167 = pkin(3) * t398 - t429;
t159 = pkin(7) * t399 + t447;
t158 = -t174 + t291;
t148 = t301 * t406 + t450;
t145 = pkin(5) * t226 + t207;
t144 = qJD(1) * t372 - t447;
t143 = t160 + t273;
t142 = t401 * t418 + t428;
t136 = t226 * t476 + t227 * t304;
t130 = qJD(2) * t372 - t450;
t122 = t204 * t305 + t205 * t308;
t116 = t149 + t490;
t113 = t192 + t171;
t111 = qJD(2) * t337 + qJD(5) * t338;
t110 = t200 * t306 + t305 * t395 - t418 * t444;
t101 = t302 * t446 + t306 * t350 - t389;
t99 = t188 * t476 + t189 * t304;
t92 = pkin(5) * t188 + t153;
t89 = -t220 * t396 + t451;
t84 = (t171 * t306 + t220 * t418) * t302;
t70 = (-t302 * t407 - t171) * t309 + (t220 * t306 + t302 * t488) * qJD(2);
t56 = pkin(5) * t110 + t117;
t32 = qJD(6) * t100 + t110 * t476 + t111 * t304;
t31 = t110 * t304 - t111 * t476 + t188 * t393 + t189 * t410;
t24 = -t325 + t477;
t19 = -pkin(9) * t110 + t25;
t18 = -pkin(5) * t419 - pkin(9) * t111 + t26;
t13 = t29 * t476 - t460;
t12 = -t29 * t304 - t405;
t10 = t27 * t476 - t460;
t4 = -qJD(6) * t23 + t18 * t476 - t304 * t19;
t3 = qJD(6) * t22 + t18 * t304 + t19 * t476;
t5 = [0, 0, 0, 0, 0, qJDD(1), t368, t369, 0, 0, qJDD(1) * t297 + 0.2e1 * t374, -0.2e1 * qJD(2) * t488 + 0.2e1 * t284 * t306, qJDD(2) * t306 + t309 * t312, t214, t348, 0 (-pkin(7) * qJDD(2) + t408 * t502) * t306 + (0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t312 + t368) * t309, -pkin(7) * t348 + t334 * t502 - t427, 0.2e1 * t423 * t456 - t369, -g(1) * (-pkin(1) * t307 + t293) - g(2) * t425 + (pkin(7) ^ 2 * t423 + pkin(1) ^ 2) * qJDD(1), t84, -t503, t70, t328, -t518, t214 (pkin(7) * t170 + t191 * t301 + (qJD(1) * t174 + t139) * qJD(2)) * t306 + (-qJD(1) * t148 + qJD(2) * t365 - qJDD(1) * t174 - t72) * t309 + t370 (pkin(7) * t171 + t191 * t302 + (-qJD(1) * t175 - t140) * qJD(2)) * t306 + (qJD(1) * t149 + qJDD(1) * t175 + t73 + (t234 * t302 + t473) * qJD(2)) * t309 + t371, -t148 * t220 - t149 * t218 - t170 * t175 - t171 * t174 + (-t301 * t73 - t302 * t72) * t306 + (-t139 * t302 - t140 * t301) * t418 + t427, t73 * t175 + t140 * t149 + t72 * t174 + t139 * t148 - g(1) * t293 - g(2) * t376 - t327 + (t191 * t306 + t234 * t418) * pkin(7), t84, t70, t503, t214, t518, t328, t142 * t218 + t170 * t183 + (t301 * t57 + (-qJD(1) * t158 - t118) * qJD(2)) * t306 + (qJD(1) * t130 + qJDD(1) * t158 + t112 * t420 + t58) * t309 + t370, -t116 * t218 + t130 * t220 - t154 * t170 + t158 * t171 + (-t301 * t55 + t302 * t58) * t306 + (t118 * t302 - t124 * t301) * t418 + t427, -t142 * t220 - t171 * t183 + (-t302 * t57 + (qJD(1) * t154 + t124) * qJD(2)) * t306 + (-qJD(1) * t116 - qJDD(1) * t154 - t112 * t409 - t55) * t309 - t371, -g(1) * t367 - g(2) * t329 + t112 * t142 + t116 * t124 + t118 * t130 + t154 * t55 + t158 * t58 + t183 * t57 - t327, t111 * t354 - t189 * t53, -t110 * t354 - t111 * t355 + t188 * t53 - t189 * t54, t111 * t265 - t189 * t225 - t309 * t53 - t354 * t419, t110 * t355 + t188 * t54, -t110 * t265 + t188 * t225 - t309 * t54 + t355 * t419, -t225 * t309 - t265 * t419, g(1) * t357 - g(2) * t122 + t110 * t78 + t117 * t355 + t153 * t54 - t188 * t325 - t225 * t59 + t26 * t265 + t309 * t9 - t33 * t419, g(1) * t358 - g(2) * t121 + t111 * t78 + t117 * t354 - t153 * t53 - t189 * t325 + t225 * t60 - t25 * t265 + t309 * t343 + t34 * t419, -t110 * t34 - t111 * t33 + t188 * t343 - t189 * t9 - t25 * t355 - t26 * t354 + t53 * t59 - t54 * t60 - t427, -t343 * t60 + t34 * t25 + t9 * t59 + t33 * t26 - t325 * t153 + t78 * t117 - g(1) * (-pkin(4) * t203 + t367) - g(2) * (pkin(4) * t205 - pkin(8) * t439 + t329) - (t306 * t467 + t403) * t471, -t100 * t14 - t31 * t480, -t100 * t15 + t14 * t99 + t31 * t479 - t32 * t480, -t100 * t212 - t14 * t309 - t248 * t31 - t419 * t480, t15 * t99 + t32 * t479, -t15 * t309 + t212 * t99 - t248 * t32 + t419 * t479, -t212 * t309 - t248 * t419, -g(1) * t103 - g(2) * t105 - t10 * t419 + t15 * t92 + t2 * t309 - t212 * t22 + t24 * t99 + t248 * t4 + t32 * t50 + t479 * t56, g(1) * t102 - g(2) * t104 - t1 * t309 + t100 * t24 + t11 * t419 - t14 * t92 + t212 * t23 - t248 * t3 - t31 * t50 + t480 * t56, -t1 * t99 + t10 * t31 - t100 * t2 - t11 * t32 + t14 * t22 - t15 * t23 - t3 * t479 - t4 * t480 - t427, t1 * t23 + t11 * t3 + t2 * t22 + t10 * t4 + t24 * t92 + t50 * t56 - g(1) * (-pkin(5) * t449 - t203 * t275 + t367) - g(2) * (t204 * t386 + t205 * t275 + t306 * t434 + t361) - ((-qJ(3) - t311) * t306 + t403) * t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, t424 * t313, t407, t257, t284, qJDD(2), -t276 - t296 + (t369 + t475) * t306 (-t456 + t475) * t309 + t404, 0, 0, t89, t504, t101, t331, t482, t257, -pkin(2) * t170 + t385 * t302 + ((-qJ(3) * t420 - t139) * t306 + (t159 - t365) * t309) * qJD(1) + t378, t375 - pkin(2) * t171 + t319 * t301 + ((-qJ(3) * t409 + t140) * t306 + (-t473 - t160 + (qJD(3) - t234) * t302) * t309) * qJD(1), t159 * t220 + t160 * t218 + (t139 * t421 + t73) * t302 + (t140 * t421 + t351 - t72) * t301 + t362, -t191 * pkin(2) - t140 * t160 - t139 * t159 - t234 * t279 - g(1) * (-pkin(2) * t439 + t263) - g(2) * (-pkin(2) * t440 + t259) - g(3) * t426 + (-t139 * t301 + t140 * t302) * qJD(3) + (-t301 * t72 + t302 * t73) * qJ(3), t89, t101, -t504, t257, -t482, t331, -t170 * t510 + t394 * t302 + (-t167 - t414) * t218 + (t118 * t306 - t144 * t309 + (-t112 * t309 - t400) * t301) * qJD(1) + t378, t143 * t218 - t144 * t220 + (-t118 * t421 + t55) * t302 + (t124 * t421 + t351 + t58) * t301 + t362, -t375 + t167 * t220 + t171 * t510 + (t208 + t394 + t492) * t301 + (-t124 * t306 + t143 * t309 + (t400 + (-qJD(3) + t112) * t309) * t302) * qJD(1), t55 * t302 * qJ(3) - t112 * t167 - t118 * t144 - g(1) * t263 - g(2) * t259 - g(3) * t377 + (-t143 + t417) * t124 + (qJ(3) * t58 + qJD(3) * t118 - qJD(4) * t112) * t301 + (-t57 + t492) * t510, -t227 * t53 + t354 * t431, t226 * t53 - t227 * t54 - t354 * t430 - t355 * t431, -t225 * t227 + t265 * t431 + t354 * t422, t226 * t54 + t355 * t430, t225 * t226 - t265 * t430 - t355 * t422, t265 * t422, t33 * t422 - g(3) * t337 + t379 * t355 - t151 * t225 + t207 * t54 + t461 * t265 + t430 * t78 + (-t325 + t492) * t226, -t34 * t422 + t379 * t354 + t152 * t225 - t207 * t53 - t462 * t265 + t431 * t78 + (-t325 - t512) * t227, t151 * t53 - t152 * t54 + t226 * t343 - t227 * t9 - t33 * t431 - t34 * t430 - t354 * t461 - t355 * t462 + t404, -t343 * t152 + t9 * t151 - t325 * t207 - g(1) * (-pkin(8) * t436 + t263) - g(2) * (-pkin(8) * t437 + t259) - g(3) * (pkin(4) * t441 + t377) + t379 * t78 + t462 * t34 + t461 * t33 + (g(3) * pkin(8) + t369 * (-t302 * t478 - t387)) * t306, -t137 * t14 - t464 * t480, t136 * t14 - t137 * t15 - t463 * t480 + t464 * t479, -t137 * t212 - t248 * t464 + t422 * t480, t136 * t15 + t463 * t479, t136 * t212 - t248 * t463 - t422 * t479, t248 * t422, t10 * t422 + t24 * t136 + t145 * t15 - t48 * t212 + t465 * t248 - t352 * t512 + t457 * t479 + t463 * t50, -t11 * t422 + t24 * t137 - t145 * t14 + t49 * t212 - t466 * t248 + t353 * t512 + t457 * t480 - t464 * t50, -t1 * t136 + t10 * t464 - t11 * t463 - t137 * t2 + t14 * t48 - t15 * t49 - t465 * t480 - t466 * t479 + t404, t1 * t49 + t2 * t48 + t24 * t145 - g(1) * (t309 * t434 + t263) - g(2) * (t311 * t437 + t259) - g(3) * (t275 * t441 + t443 * t474 + t377) + t457 * t50 + t466 * t11 + t465 * t10 + (-g(3) * t311 + t369 * (pkin(2) - (-pkin(3) - t275) * t302 + t386 * t301)) * t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t113, t491, t139 * t220 + t140 * t218 + t319, 0, 0, 0, 0, 0, 0, t320, t491, -t113, -t118 * t220 + t124 * t218 + t318, 0, 0, 0, 0, 0, 0, -t54 - t453, t53 + t455, t499 + t500, -t33 * t354 - t34 * t355 + t317, 0, 0, 0, 0, 0, 0, -t15 - t513, t14 + t514, t501 + t517, -t10 * t480 - t11 * t479 + t317 - t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218 * t220 + t333, -t192 + t171, -t216 - t446, t112 * t220 + (-pkin(3) * t419 + t124 * t309) * qJD(1) + t326 + t345, 0, 0, 0, 0, 0, 0, -t220 * t355 - t225 * t308 - t305 * t349, -t220 * t354 + t225 * t305 - t308 * t349, t305 * t519 + t308 * t496, -t220 * t78 + t305 * t511 + t308 * t497 + t326, 0, 0, 0, 0, 0, 0, t212 * t341 - t220 * t479 - t248 * t432, t212 * t231 - t220 * t480 + t248 * t433, -t14 * t341 - t15 * t231 + t432 * t480 + t433 * t479, t1 * t231 - t10 * t432 - t11 * t433 - t2 * t341 - t220 * t50 + t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, -t499 + t500, -t496, -t454, t519, -t225, g(3) * t188 - t354 * t78 + t489 + t497, g(1) * t122 + g(2) * t357 + g(3) * t189 + t355 * t78 - t511, 0, 0, t468, t508, t507, -t468, t483, -t212, -t12 * t248 + (-t212 * t476 - t248 * t410 - t354 * t479) * pkin(5) + t485, t13 * t248 + (t212 * t304 - t248 * t393 - t354 * t480) * pkin(5) + t506, -t10 * t479 + t11 * t480 + t12 * t480 + t13 * t479 + (t476 * t14 - t15 * t304 + (t304 * t480 - t476 * t479) * qJD(6)) * pkin(5), -t10 * t12 - t11 * t13 + (t1 * t304 + t2 * t476 - t50 * t354 - g(3) * t338 + (-t10 * t304 + t11 * t476) * qJD(6) + t489) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468, t508, t507, -t468, t483, -t212, t11 * t248 + t485, t10 * t248 + t506, 0, 0;];
tau_reg  = t5;
