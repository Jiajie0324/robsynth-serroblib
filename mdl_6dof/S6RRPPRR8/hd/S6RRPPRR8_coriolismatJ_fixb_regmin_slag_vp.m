% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:26:12
% EndTime: 2019-03-09 09:26:41
% DurationCPUTime: 15.94s
% Computational Cost: add. (7540->657), mult. (16880->892), div. (0->0), fcn. (18367->8), ass. (0->500)
t547 = qJD(5) + qJD(6);
t427 = sin(pkin(10));
t428 = cos(pkin(10));
t430 = sin(qJ(5));
t433 = cos(qJ(5));
t357 = t427 * t430 + t428 * t433;
t434 = cos(qJ(2));
t322 = t357 * t434;
t432 = cos(qJ(6));
t615 = t432 * t322;
t611 = t433 * t434;
t390 = t427 * t611;
t620 = t430 * t434;
t321 = t428 * t620 - t390;
t429 = sin(qJ(6));
t628 = t429 * t321;
t599 = t628 / 0.2e1 - t615 / 0.2e1;
t343 = t432 * t357;
t622 = t430 * t428;
t359 = t427 * t433 - t622;
t625 = t429 * t359;
t251 = t343 + t625;
t730 = t251 * t434;
t733 = t730 / 0.2e1;
t749 = t733 - t599;
t752 = qJD(1) * t749;
t734 = -t730 / 0.2e1;
t748 = t734 - t599;
t751 = qJD(2) * t748;
t548 = t434 * qJD(1);
t431 = sin(qJ(2));
t612 = t433 * t431;
t621 = t430 * t431;
t318 = -t427 * t612 + t428 * t621;
t304 = t432 * t318;
t320 = t357 * t431;
t629 = t429 * t320;
t713 = t304 + t629;
t534 = t713 * t548;
t750 = qJD(2) * t749 + t534;
t306 = t432 * t321;
t627 = t429 * t322;
t496 = -t306 / 0.2e1 - t627 / 0.2e1;
t344 = t432 * t359;
t626 = t429 * t357;
t711 = t344 - t626;
t726 = t711 * t434;
t739 = t726 / 0.2e1 + t496;
t747 = qJD(1) * t739;
t740 = -t726 / 0.2e1 + t496;
t741 = qJD(2) * t740;
t584 = qJD(2) * t711;
t700 = -t251 / 0.2e1;
t305 = t432 * t320;
t630 = t429 * t318;
t712 = t305 - t630;
t735 = -t711 / 0.2e1;
t737 = t700 * t712 + t713 * t735;
t453 = qJD(1) * t737 - t251 * t584;
t535 = t712 * t548;
t736 = qJD(2) * t739 + t535;
t588 = qJD(1) * t712;
t456 = qJD(2) * t737 - t588 * t713;
t674 = -pkin(8) + qJ(3);
t377 = t674 * t427;
t378 = t674 * t428;
t273 = t377 * t430 + t378 * t433;
t204 = -pkin(9) * t357 + t273;
t272 = -t433 * t377 + t378 * t430;
t463 = -pkin(9) * t359 - t272;
t88 = t432 * t204 + t429 * t463;
t746 = t547 * t88;
t483 = -t429 * t204 + t432 * t463;
t745 = t547 * t483;
t418 = t431 * qJ(4);
t402 = t428 * t418;
t501 = -pkin(7) + (-pkin(3) - pkin(4)) * t427;
t276 = t431 * t501 + t402;
t182 = t318 * pkin(5) + t276;
t699 = t251 / 0.2e1;
t744 = t182 * t699;
t719 = -t712 ^ 2 + t713 ^ 2;
t743 = qJD(1) * t719;
t720 = t251 ^ 2 - t711 ^ 2;
t742 = qJD(2) * t720;
t364 = -t428 * pkin(3) - t427 * qJ(4) - pkin(2);
t346 = t428 * pkin(4) - t364;
t270 = pkin(5) * t357 + t346;
t697 = -t270 / 0.2e1;
t738 = t182 * t735 + t697 * t712;
t732 = t182 * t712;
t731 = t182 * t713;
t296 = t305 / 0.2e1;
t696 = -t305 / 0.2e1;
t706 = t696 + t296;
t724 = qJD(5) * t706;
t332 = t344 / 0.2e1;
t694 = -t344 / 0.2e1;
t707 = t694 + t332;
t723 = qJD(5) * t707;
t510 = qJD(5) + t548;
t717 = t318 * t510;
t619 = t431 * qJ(3);
t494 = -pkin(2) * t434 - t619;
t368 = -pkin(1) + t494;
t637 = t427 * t434;
t407 = pkin(7) * t637;
t302 = t428 * t368 - t407;
t634 = t428 * t434;
t408 = pkin(7) * t634;
t303 = t427 * t368 + t408;
t686 = t428 / 0.2e1;
t688 = -t427 / 0.2e1;
t458 = t302 * t688 + t303 * t686;
t675 = t434 * pkin(7);
t540 = t675 / 0.2e1;
t156 = t540 - t458;
t423 = t427 ^ 2;
t424 = t428 ^ 2;
t397 = t424 + t423;
t366 = t397 * qJ(3);
t552 = t366 * qJD(2);
t710 = -qJD(1) * t156 + t552;
t421 = t434 * pkin(3);
t279 = -t302 + t421;
t278 = -qJ(4) * t434 + t303;
t644 = t278 * t428;
t403 = qJ(4) * t634;
t689 = -t403 / 0.2e1;
t109 = t540 + t689 - t644 / 0.2e1 + (t421 / 0.2e1 - t279 / 0.2e1) * t427;
t709 = -qJD(1) * t109 + t552;
t471 = t584 + t588;
t414 = t429 * t430;
t613 = t432 * t433;
t708 = -t613 + t414;
t705 = qJD(6) * t711;
t704 = qJD(6) * t712;
t426 = t434 ^ 2;
t676 = t434 * pkin(5);
t227 = t434 * pkin(4) + t407 + t421 + (-pkin(8) * t431 - t368) * t428;
t638 = t427 * t431;
t259 = pkin(8) * t638 + t278;
t126 = -t433 * t227 + t430 * t259;
t77 = -t320 * pkin(9) - t126;
t71 = t77 + t676;
t61 = t432 * t71;
t703 = -t61 / 0.2e1;
t702 = -t71 / 0.2e1;
t294 = -t304 / 0.2e1;
t295 = t304 / 0.2e1;
t695 = -t320 / 0.2e1;
t330 = -t343 / 0.2e1;
t331 = t343 / 0.2e1;
t693 = t346 / 0.2e1;
t692 = -t359 / 0.2e1;
t691 = t359 / 0.2e1;
t690 = t390 / 0.2e1;
t518 = -t414 / 0.2e1;
t687 = t427 / 0.2e1;
t685 = -t431 / 0.2e1;
t684 = t431 / 0.2e1;
t683 = -t434 / 0.2e1;
t682 = t434 / 0.2e1;
t681 = pkin(5) * t320;
t680 = pkin(5) * t359;
t679 = pkin(7) * t427;
t678 = t427 * pkin(3);
t677 = t431 * pkin(5);
t18 = (t699 - t700) * t713 + 0.2e1 * t735 * t712;
t24 = t251 * t713 - t711 * t712;
t673 = t18 * qJD(5) + t24 * qJD(6);
t672 = t547 * t737;
t671 = pkin(5) * qJD(5);
t670 = pkin(5) * qJD(6);
t277 = t434 * t501 + t403;
t183 = t321 * pkin(5) + t277;
t195 = t306 + t627;
t127 = t227 * t430 + t259 * t433;
t78 = -pkin(9) * t318 + t127;
t665 = t429 * t78;
t26 = -t61 + t665;
t610 = t434 * qJ(3);
t386 = t431 * pkin(2) - t610;
t537 = -pkin(3) - t679;
t238 = (-pkin(8) * t434 - t386) * t428 + (-pkin(4) + t537) * t431;
t214 = t433 * t238;
t635 = t428 * t431;
t308 = -pkin(7) * t635 + t427 * t386;
t280 = t308 + t418;
t260 = pkin(8) * t637 + t280;
t623 = t430 * t260;
t512 = t214 - t623;
t75 = -pkin(9) * t322 + t512 - t677;
t663 = t432 * t75;
t213 = t430 * t238;
t241 = t433 * t260;
t601 = t241 + t213;
t83 = -pkin(9) * t321 + t601;
t664 = t429 * t83;
t1 = (t663 - t664) * t434 + t26 * t431 + t183 * t713 + t182 * t195;
t669 = t1 * qJD(1);
t199 = t615 - t628;
t661 = t432 * t78;
t27 = t429 * t71 + t661;
t660 = t432 * t83;
t667 = t429 * t75;
t2 = (t660 + t667) * t434 - t27 * t431 - t183 * t712 - t182 * t199;
t668 = t2 * qJD(1);
t666 = t429 * t77;
t662 = t432 * t77;
t28 = -t661 - t666;
t15 = t28 * t434 + t681 * t713 + t732;
t659 = qJD(1) * t15;
t29 = t662 - t665;
t16 = t29 * t434 - t681 * t712 + t731;
t658 = qJD(1) * t16;
t19 = -t26 * t434 + t731;
t657 = qJD(1) * t19;
t20 = -t27 * t434 + t732;
t656 = qJD(1) * t20;
t84 = -t195 * t434 + t431 * t713;
t655 = qJD(1) * t84;
t85 = t199 * t434 - t431 * t712;
t654 = qJD(1) * t85;
t653 = qJD(1) * t740;
t21 = t126 * t431 + t276 * t321 + t277 * t318 + t434 * t512;
t650 = t21 * qJD(1);
t22 = -t127 * t431 - t276 * t322 - t277 * t320 + t434 * t601;
t649 = t22 * qJD(1);
t643 = t278 * t434;
t437 = t273 * t683 + t276 * t691 + t320 * t693;
t497 = t214 / 0.2e1 - t623 / 0.2e1;
t34 = -t437 + t497;
t642 = t34 * qJD(1);
t438 = t272 * t683 + t276 * t357 / 0.2e1 + t318 * t693;
t514 = -t213 / 0.2e1 - t241 / 0.2e1;
t35 = t438 + t514;
t641 = t35 * qJD(1);
t640 = t359 * t434;
t39 = -t195 * t712 - t199 * t713;
t639 = t39 * qJD(1);
t636 = t428 * t386;
t624 = t429 * t433;
t614 = t432 * t430;
t281 = t431 * t537 - t636;
t536 = pkin(7) + t678;
t312 = t431 * t536 - t402;
t313 = t434 * t536 - t403;
t44 = t278 * t280 + t279 * t281 + t312 * t313;
t609 = t44 * qJD(1);
t47 = -t279 * t634 - t281 * t635 + (t280 * t431 + t643) * t427;
t608 = t47 * qJD(1);
t48 = -t126 * t434 + t276 * t318;
t607 = t48 * qJD(1);
t49 = -t127 * t434 + t276 * t320;
t606 = t49 * qJD(1);
t546 = pkin(7) * t638;
t307 = t546 + t636;
t52 = (t302 * t434 + t307 * t431) * t428 + (t303 * t434 + t308 * t431) * t427;
t605 = t52 * qJD(1);
t479 = t312 * t434 + t313 * t431;
t53 = -t278 * t431 + t280 * t434 + t428 * t479;
t604 = t53 * qJD(1);
t54 = -t279 * t431 + t281 * t434 + t427 * t479;
t603 = t54 * qJD(1);
t86 = pkin(7) ^ 2 * t431 * t434 + t302 * t307 + t303 * t308;
t602 = t86 * qJD(1);
t189 = t295 + t294;
t248 = t331 + t330;
t598 = t611 * t686 + t620 * t687;
t516 = -t620 / 0.2e1;
t519 = -t634 / 0.2e1;
t597 = t427 * t516 + t433 * t519;
t102 = t733 + t599;
t594 = qJD(1) * t102;
t149 = t278 * t638 - t279 * t635;
t592 = qJD(1) * t149;
t159 = (t302 * t428 + t303 * t427) * t431;
t590 = qJD(1) * t159;
t160 = t312 * t635 + t643;
t589 = qJD(1) * t160;
t200 = t318 * t431 - t321 * t434;
t587 = qJD(1) * t200;
t201 = -t320 * t431 + t322 * t434;
t586 = qJD(1) * t201;
t585 = qJD(1) * t320;
t583 = qJD(2) * t270;
t582 = qJD(2) * t357;
t581 = qJD(2) * t359;
t580 = qJD(2) * t427;
t579 = qJD(2) * t431;
t578 = qJD(2) * t434;
t577 = qJD(3) * t434;
t576 = qJD(4) * t427;
t575 = qJD(4) * t428;
t574 = qJD(4) * t434;
t573 = qJD(5) * t251;
t572 = qJD(5) * t357;
t571 = qJD(5) * t434;
t570 = qJD(6) * t251;
t569 = qJD(6) * t270;
t128 = pkin(3) * t685 + (pkin(7) * t685 + t312 / 0.2e1) * t427 + (-t386 / 0.2e1 + t610 / 0.2e1 + t364 * t684) * t428;
t568 = t128 * qJD(1);
t134 = -t318 * t322 - t320 * t321;
t567 = t134 * qJD(1);
t476 = t614 + t624;
t135 = t426 * t476 + t635 * t713;
t566 = t135 * qJD(1);
t136 = t426 * t708 - t635 * t712;
t565 = t136 * qJD(1);
t154 = -t302 * t431 + (t307 - 0.2e1 * t546) * t434;
t564 = t154 * qJD(1);
t155 = t308 * t434 + (-t303 + 0.2e1 * t408) * t431;
t563 = t155 * qJD(1);
t517 = -t622 / 0.2e1;
t230 = t690 + (t517 + t692) * t434;
t562 = t230 * qJD(1);
t231 = t690 + (t517 + t691) * t434;
t561 = t231 * qJD(1);
t523 = t322 / 0.2e1;
t232 = t523 + t598;
t560 = t232 * qJD(1);
t233 = t523 + t597;
t559 = t233 * qJD(1);
t242 = t476 * t434;
t222 = t242 * qJD(1);
t243 = (t613 + 0.2e1 * t518) * t434;
t224 = t243 * qJD(1);
t265 = t318 * t635 + t426 * t430;
t558 = t265 * qJD(1);
t266 = t320 * t635 + t426 * t433;
t557 = t266 * qJD(1);
t556 = t318 * qJD(3);
t555 = t318 * qJD(5);
t554 = t320 * qJD(3);
t311 = t320 * qJD(5);
t425 = t431 ^ 2;
t356 = t397 * t425;
t553 = t356 * qJD(1);
t350 = t359 * qJD(5);
t551 = t397 * qJD(2);
t404 = t426 - t425;
t550 = t404 * qJD(1);
t549 = t431 * qJD(1);
t545 = pkin(1) * t549;
t544 = pkin(1) * t548;
t543 = t681 / 0.2e1;
t542 = t680 / 0.2e1;
t541 = -t676 / 0.2e1;
t539 = -t664 / 0.2e1;
t538 = -t660 / 0.2e1;
t533 = t318 * t548;
t532 = t320 * t548;
t531 = t428 * t549;
t530 = t428 * t580;
t529 = qJD(3) * t635;
t400 = t427 * t577;
t528 = t427 * t575;
t527 = t428 * t548;
t526 = t431 * t578;
t525 = t431 * t548;
t524 = -t322 / 0.2e1;
t522 = t318 * t687;
t521 = t320 * t687;
t520 = t635 / 0.2e1;
t289 = -t629 / 0.2e1;
t328 = -t625 / 0.2e1;
t513 = pkin(5) * t547;
t509 = -qJD(6) - t548;
t508 = qJD(2) * t346 - qJD(3);
t507 = qJD(1) * t425 * t427 * t428;
t506 = t431 * t400;
t505 = t427 * t525;
t504 = t428 * t525;
t503 = 0.2e1 * t289;
t502 = 0.2e1 * t328;
t188 = t289 + t629 / 0.2e1;
t247 = t328 + t625 / 0.2e1;
t500 = t677 / 0.2e1 - t75 / 0.2e1;
t499 = t541 + t77 / 0.2e1;
t498 = t548 + qJD(5) / 0.2e1;
t495 = -t311 - t532;
t435 = t483 * t682 - t697 * t713 + t744;
t462 = -t667 / 0.2e1 + t538;
t3 = (t429 * t684 + t692 * t712 + t695 * t711) * pkin(5) + t435 + t462;
t51 = t251 * t270 - t680 * t711;
t493 = -t3 * qJD(1) - t51 * qJD(2);
t436 = -t683 * t88 + t738;
t461 = t539 + t663 / 0.2e1;
t4 = (t251 * t695 + t432 * t685 + t692 * t713) * pkin(5) + t436 + t461;
t50 = -t251 * t680 - t270 * t711;
t492 = -t4 * qJD(1) - t50 * qJD(2);
t491 = t708 * t431;
t490 = -t364 * t434 + t619;
t11 = (t702 + t499) * t429;
t489 = t11 * qJD(1);
t13 = t432 * t499 + t703;
t488 = t13 * qJD(1);
t487 = qJD(2) * t18 + t743;
t486 = qJD(1) * t18 + t742;
t485 = qJD(2) * t24 + t743;
t484 = qJD(1) * t24 + t742;
t481 = t280 * t428 + t281 * t427;
t480 = -t307 * t427 + t308 * t428;
t137 = -t626 + 0.2e1 * t332;
t93 = -t630 + 0.2e1 * t296;
t475 = qJD(1) * t93 + qJD(2) * t137;
t139 = 0.2e1 * t330 + t502;
t95 = 0.2e1 * t294 + t503;
t474 = qJD(1) * t95 + qJD(2) * t139;
t158 = t318 ^ 2 - t320 ^ 2;
t76 = t318 * t357 - t359 * t320;
t473 = qJD(1) * t158 + qJD(2) * t76;
t207 = t357 ^ 2 - t359 ^ 2;
t472 = qJD(1) * t76 + qJD(2) * t207;
t146 = t629 + 0.2e1 * t295;
t165 = t625 + 0.2e1 * t331;
t470 = qJD(1) * t146 + qJD(2) * t165;
t469 = qJD(1) * t188 + qJD(2) * t247;
t468 = qJD(1) * t706 + qJD(2) * t707;
t467 = qJD(1) * t318 + t582;
t466 = t581 + t585;
t465 = t547 * t713;
t464 = t428 * t516 + t690;
t440 = t744 + t270 * t713 / 0.2e1 - t483 * t683;
t8 = t440 + t462;
t460 = qJD(1) * t8 + t251 * t583;
t439 = t682 * t88 + t738;
t7 = t439 + t461;
t459 = qJD(1) * t7 - t583 * t711;
t443 = t251 * t520 + t687 * t713;
t57 = -t491 / 0.2e1 + t443;
t454 = qJD(1) * t57 + t251 * t580;
t442 = t520 * t711 + t687 * t712;
t444 = t476 * t431;
t60 = -t444 / 0.2e1 + t442;
t452 = qJD(1) * t60 + t580 * t711;
t148 = t318 * t692 + t357 * t695;
t451 = -qJD(2) * t148 + t318 * t585;
t450 = -qJD(1) * t148 + t357 * t581;
t168 = t522 + (t357 * t686 + t433 / 0.2e1) * t431;
t449 = qJD(1) * t168 + t357 * t580;
t171 = t521 + (t359 * t686 - t430 / 0.2e1) * t431;
t448 = qJD(1) * t171 + t359 * t580;
t323 = (-0.1e1 / 0.2e1 + t423 / 0.2e1 - t424 / 0.2e1) * t431;
t447 = -qJD(1) * t323 + t530;
t354 = t531 + t580;
t369 = t424 * t425 + t426;
t441 = qJD(1) * t369 + t431 * t530;
t413 = -t579 / 0.2e1;
t412 = -t549 / 0.2e1;
t411 = t549 / 0.2e1;
t379 = t397 * qJD(3);
t376 = t434 * t529;
t365 = t431 * t528;
t361 = t366 * qJD(3);
t353 = t498 * t431;
t347 = t356 * qJD(3);
t345 = qJD(2) * t423 + t427 * t531;
t324 = t423 * t685 + t424 * t684 + t685;
t316 = t354 * t434;
t315 = -t428 * t578 + t505;
t314 = (qJD(6) / 0.2e1 + t498) * t431;
t245 = t476 * t683 + (t624 / 0.2e1 + t614 / 0.2e1) * t434;
t244 = -t708 * t683 + (t613 / 0.2e1 + t518) * t434;
t237 = -t640 / 0.2e1 + t464;
t236 = t640 / 0.2e1 + t464;
t235 = t524 + t598;
t234 = t524 + t597;
t226 = t245 * qJD(4);
t225 = t244 * qJD(4);
t223 = t243 * qJD(4);
t221 = t242 * qJD(4);
t170 = t521 + t359 * t520 + t621 / 0.2e1;
t169 = t522 + t357 * t520 - t612 / 0.2e1;
t166 = 0.2e1 * t694 + t626;
t164 = -t343 + t502;
t157 = t540 + t458;
t147 = 0.2e1 * t696 + t630;
t145 = -t304 + t503;
t143 = -t476 * t547 - t222;
t142 = t547 * t708 - t224;
t141 = t148 * qJD(5);
t140 = t247 + t248;
t129 = qJ(3) * t519 - t364 * t635 / 0.2e1 + t312 * t688 - t636 / 0.2e1 + (-t679 / 0.2e1 - pkin(3) / 0.2e1) * t431;
t110 = t644 / 0.2e1 + t279 * t687 + t689 + (pkin(7) / 0.2e1 + t678 / 0.2e1) * t434;
t106 = t734 + t599;
t96 = t188 + t189;
t72 = t76 * qJD(5);
t59 = t444 / 0.2e1 + t442;
t58 = t491 / 0.2e1 + t443;
t37 = t437 + t497;
t36 = -t438 + t514;
t14 = t432 * t541 + t665 + t703 - t662 / 0.2e1;
t12 = -t661 - t666 / 0.2e1 + (t541 + t702) * t429;
t10 = -t439 + t461;
t9 = -t440 + t462;
t6 = t429 * t500 + t542 * t712 + t543 * t711 - t435 + t538;
t5 = t251 * t543 - t432 * t500 + t542 * t713 - t436 + t539;
t17 = [0, 0, 0, t526, t404 * qJD(2), 0, 0, 0, -pkin(1) * t579, -pkin(1) * t578, -qJD(2) * t154 + t376, t155 * qJD(2) - t506, -qJD(2) * t52 + t347, qJD(2) * t86 - qJD(3) * t159, qJD(2) * t54 - t425 * t528 + t376, -t47 * qJD(2) + t574 * t638 + t347, -t53 * qJD(2) + t369 * qJD(4) + t506, qJD(2) * t44 - qJD(3) * t149 - qJD(4) * t160 (qJD(2) * t322 - t555) * t320, qJD(2) * t134 + qJD(5) * t158, t201 * qJD(2) - t434 * t555, t200 * qJD(2) - t311 * t434, -t526, t21 * qJD(2) + t265 * qJD(4) + t49 * qJD(5) + t434 * t554, -t22 * qJD(2) + t266 * qJD(4) - t48 * qJD(5) - t434 * t556 (qJD(2) * t199 - t465) * t712, qJD(2) * t39 + t547 * t719, t85 * qJD(2) - t434 * t465, t84 * qJD(2) + (-qJD(5) * t712 - t704) * t434, -t526, t1 * qJD(2) + t135 * qJD(4) + t15 * qJD(5) + t20 * qJD(6) + t577 * t712, -t2 * qJD(2) - t136 * qJD(4) - t16 * qJD(5) - t19 * qJD(6) - t577 * t713; 0, 0, 0, t525, t550, t578, -t579, 0, -pkin(7) * t578 - t545, pkin(7) * t579 - t544, -t564 + (t427 * t494 - t408) * qJD(2) + t400, t563 + t407 * qJD(2) + (qJD(2) * t494 + t577) * t428, qJD(2) * t480 - t605, t602 + (-pkin(2) * t675 + qJ(3) * t480) * qJD(2) + t157 * qJD(3), t603 + (-t313 * t428 - t427 * t490) * qJD(2) + t400 + t324 * qJD(4), qJD(2) * t481 - t608, -t313 * t580 - t604 + t365 + (qJD(2) * t490 - t577) * t428, t609 + (qJ(3) * t481 + t313 * t364) * qJD(2) + t110 * qJD(3) + t129 * qJD(4), t322 * t466 + t141, t567 + (-t321 * t359 - t322 * t357) * qJD(2) + t72, qJD(5) * t235 - t359 * t579 + t586, qJD(5) * t237 + t357 * t579 + t587, -t353, t650 + (t272 * t431 + t277 * t357 + t321 * t346) * qJD(2) + t236 * qJD(3) + t169 * qJD(4) + t37 * qJD(5), -t649 + (t273 * t431 + t277 * t359 + t322 * t346) * qJD(2) + t234 * qJD(3) + t170 * qJD(4) + t36 * qJD(5), t199 * t471 + t672, t639 + (-t195 * t711 - t199 * t251) * qJD(2) + t673, t547 * t748 - t579 * t711 + t654, t251 * t579 + t547 * t740 + t655, -t314, t669 + (t183 * t251 + t195 * t270 - t431 * t483) * qJD(2) + t739 * qJD(3) + t58 * qJD(4) + t5 * qJD(5) + t10 * qJD(6), -t668 + (t183 * t711 + t199 * t270 + t431 * t88) * qJD(2) + t106 * qJD(3) + t59 * qJD(4) + t6 * qJD(5) + t9 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, -t315, t553, qJD(2) * t157 - t590, t316, t553, t315, qJD(2) * t110 - t592, 0, 0, 0, 0, 0, t236 * qJD(2) + t532, t234 * qJD(2) - t533, 0, 0, 0, 0, 0, t724 + t736, t106 * qJD(2) + t96 * qJD(5) + t189 * qJD(6) - t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t324 - t507, t505, t441, qJD(2) * t129 - t589, 0, 0, 0, 0, 0, qJD(2) * t169 + t558, qJD(2) * t170 + t557, 0, 0, 0, 0, 0, t58 * qJD(2) + t245 * t547 + t566, t59 * qJD(2) + t244 * t547 - t565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, t473, t235 * qJD(2) - t717, t237 * qJD(2) + t495, t413, qJD(2) * t37 - qJD(5) * t127 + t606, qJD(2) * t36 + qJD(5) * t126 - t607, t456, t487, t145 * qJD(6) - t510 * t713 + t751, t147 * qJD(6) - t510 * t712 + t741, t413, qJD(2) * t5 + qJD(3) * t706 + qJD(5) * t28 + qJD(6) * t12 + t226 + t659, qJD(2) * t6 + qJD(3) * t96 - qJD(5) * t29 + qJD(6) * t14 + t225 - t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456, t485, t145 * qJD(5) + t509 * t713 + t751, t147 * qJD(5) + t509 * t712 + t741, t413, qJD(2) * t10 + qJD(5) * t12 - qJD(6) * t27 + t226 + t656, qJD(2) * t9 + qJD(3) * t189 + qJD(5) * t14 + qJD(6) * t26 + t225 - t657; 0, 0, 0, -t525, -t550, 0, 0, 0, t545, t544, t564, -t563, t605, -qJD(3) * t156 - t602, -qJD(4) * t323 - t603, -t428 * t574 + t608, t365 + t604, -qJD(3) * t109 - qJD(4) * t128 - t609, -t322 * t585 + t141, t72 - t567, -qJD(5) * t232 - t586, -qJD(5) * t231 - t587, t353, -qJD(3) * t230 + qJD(4) * t168 - qJD(5) * t34 - t650, -qJD(3) * t233 + qJD(4) * t171 - qJD(5) * t35 + t649, -t199 * t588 + t672, -t639 + t673, -t547 * t749 - t654, -t547 * t739 - t655, t314, -qJD(3) * t740 + qJD(4) * t57 - qJD(5) * t4 - qJD(6) * t7 - t669, -qJD(3) * t102 + qJD(4) * t60 - qJD(5) * t3 - qJD(6) * t8 + t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379, t361, t528, t379, t423 * qJD(4), -t364 * t576 + t361, -t357 * t350, t207 * qJD(5), 0, 0, 0, t346 * t350 + t357 * t576, -t346 * t572 + t359 * t576 (-t570 - t573) * t711, t547 * t720, 0, 0, 0, -qJD(5) * t50 + t251 * t576 + t569 * t711, -qJD(5) * t51 - t251 * t569 + t576 * t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t551, t710, 0, t551, 0, t709, 0, 0, 0, 0, 0, -t562, -t559, 0, 0, 0, 0, 0, -t653 + t723, qJD(5) * t140 + qJD(6) * t248 - t594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, -t527, t345, -t364 * t580 - t568, 0, 0, 0, 0, 0, t449, t448, 0, 0, 0, 0, 0, t454, t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t450, t472, -t560 - t572, -t350 - t561, t411, -qJD(5) * t273 + t346 * t581 - t642, qJD(5) * t272 - t346 * t582 - t641, t453, t486, qJD(6) * t164 - t573 - t752, -qJD(5) * t711 + qJD(6) * t166 - t747, t411, qJD(3) * t707 + t492 - t746, t140 * qJD(3) + t493 - t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453, t484, qJD(5) * t164 - t570 - t752, qJD(5) * t166 - t705 - t747, t411, -t459 - t746, qJD(3) * t248 - t460 - t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504, t505, -t553, qJD(2) * t156 + t590, -t504, -t553, -t505, qJD(2) * t109 - t431 * t575 + t592, 0, 0, 0, 0, 0, t230 * qJD(2) + t495, t233 * qJD(2) + t717, 0, 0, 0, 0, 0, -t93 * qJD(5) - t535 - t704 + t741, t102 * qJD(2) - t95 * qJD(5) + t146 * qJD(6) + t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t551, -t710, 0, -t551, 0, -t576 - t709, 0, 0, 0, 0, 0, -t350 + t562, t559 + t572, 0, 0, 0, 0, 0, -qJD(5) * t137 + t653 - t705, -qJD(5) * t139 + qJD(6) * t165 + t594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t466, t467, 0, 0, 0, 0, 0, -t475, -t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t323 + t507, -t315, -t441, qJD(2) * t128 + t529 + t589, 0, 0, 0, 0, 0, -t168 * qJD(2) - t430 * t571 - t558, -t171 * qJD(2) - t433 * t571 - t557, 0, 0, 0, 0, 0, -t57 * qJD(2) - t242 * t547 - t566, -t60 * qJD(2) - t243 * t547 + t565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t447, t527, -t345, t568 + (qJD(2) * t364 + qJD(3)) * t427, 0, 0, 0, 0, 0, -t449, -t448, 0, 0, 0, 0, 0, -t454, -t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510 * t430, -t510 * t433, 0, 0, 0, 0, 0, t143, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, -t473, t232 * qJD(2) + t533, t231 * qJD(2) + t532, t413, t34 * qJD(2) + t430 * t574 + t554 - t606, t35 * qJD(2) + t433 * t574 - t556 + t607, -t456, -t487, t188 * qJD(6) + t750, qJD(6) * t706 + t736, t413, qJD(2) * t4 + qJD(3) * t93 + qJD(6) * t11 + t221 - t659, qJD(2) * t3 + qJD(3) * t95 + qJD(6) * t13 + t223 + t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t450, -t472, t560, t561, t412, -t359 * t508 + t642, t357 * t508 + t641, -t453, -t486, qJD(6) * t247 + t752, qJD(6) * t707 + t747, t412, qJD(3) * t137 - t492, qJD(3) * t139 - t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, -t467, 0, 0, 0, 0, 0, t475, t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t430 * t548, t433 * t548, 0, 0, 0, 0, 0, t222, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429 * t670, -t432 * t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, t468, 0, -t429 * t513 + t489, -t432 * t513 + t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t456, -t485, -t188 * qJD(5) + t750, -t724 + t736, t413, qJD(2) * t7 + qJD(3) * t712 - qJD(5) * t11 + t221 - t656, qJD(2) * t8 - qJD(3) * t146 - qJD(5) * t13 + t223 + t657; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t453, -t484, -qJD(5) * t247 + t752, t747 - t723, t412, qJD(3) * t711 + t459, -qJD(3) * t165 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, -t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t469, -t468, 0, t429 * t671 - t489, t432 * t671 - t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
