% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:05:26
% EndTime: 2019-03-09 12:05:51
% DurationCPUTime: 10.60s
% Computational Cost: add. (18435->633), mult. (55170->840), div. (0->0), fcn. (44140->10), ass. (0->313)
t256 = sin(pkin(6));
t262 = cos(qJ(2));
t367 = t256 * t262;
t389 = cos(pkin(11));
t313 = t389 * t367;
t237 = qJD(1) * t313;
t259 = sin(qJ(2));
t388 = sin(pkin(11));
t328 = t259 * t388;
t314 = t256 * t328;
t205 = qJD(1) * t314 - t237;
t288 = qJD(4) + t205;
t390 = cos(pkin(6));
t342 = pkin(1) * t390;
t248 = t262 * t342;
t244 = qJD(1) * t248;
t408 = pkin(8) + qJ(3);
t333 = t408 * t259;
t316 = t256 * t333;
t193 = -qJD(1) * t316 + t244;
t247 = t259 * t342;
t414 = t367 * t408 + t247;
t194 = t414 * qJD(1);
t327 = t389 * t194;
t146 = t193 * t388 + t327;
t258 = sin(qJ(4));
t261 = cos(qJ(4));
t441 = -t146 + t288 * (pkin(4) * t258 - pkin(10) * t261);
t290 = t259 * t389 + t262 * t388;
t421 = t290 * t256;
t209 = qJD(1) * t421;
t260 = cos(qJ(5));
t257 = sin(qJ(5));
t365 = t257 * t261;
t162 = -t205 * t365 - t260 * t209;
t353 = qJD(4) * t261;
t440 = -t257 * t353 + t162;
t417 = qJD(4) * t288;
t439 = t261 * t417;
t351 = qJD(5) * t260;
t287 = t258 * t351 - t440;
t240 = qJD(2) * t244;
t282 = (-qJD(2) * t333 + qJD(3) * t262) * t256;
t168 = qJD(1) * t282 + t240;
t368 = t256 * t259;
t265 = -qJD(2) * t414 - qJD(3) * t368;
t264 = t388 * t265;
t106 = qJD(1) * t264 + t168 * t389;
t284 = pkin(2) * t390 - t316;
t176 = qJD(2) * pkin(2) + qJD(1) * t284 + t244;
t124 = t388 * t176 + t327;
t323 = t390 * qJD(1);
t302 = t323 + qJD(2);
t115 = pkin(9) * t302 + t124;
t232 = (-pkin(2) * t262 - pkin(1)) * t256;
t356 = qJD(1) * t232;
t225 = qJD(3) + t356;
t140 = pkin(3) * t205 - pkin(9) * t209 + t225;
t201 = t205 * qJD(2);
t354 = qJD(2) * t256;
t338 = t259 * t354;
t315 = qJD(1) * t338;
t239 = pkin(2) * t315;
t275 = qJD(2) * t421;
t270 = qJD(1) * t275;
t141 = pkin(3) * t270 + t201 * pkin(9) + t239;
t346 = t258 * qJD(4);
t293 = -t261 * t106 + t115 * t346 - t140 * t353 - t258 * t141;
t82 = -t258 * t115 + t261 * t140;
t438 = -t288 * t82 - t293;
t362 = t260 * t261;
t163 = -t205 * t362 + t209 * t257;
t352 = qJD(5) * t257;
t437 = t258 * t352 - t260 * t353 + t163;
t317 = t258 * t106 + t115 * t353 + t140 * t346 - t261 * t141;
t83 = t261 * t115 + t258 * t140;
t436 = t288 * t83 - t317;
t173 = t209 * t258 - t261 * t302;
t171 = qJD(5) + t173;
t280 = qJD(2) * t290;
t208 = t256 * t280;
t269 = qJD(1) * t208;
t35 = pkin(10) * t269 - t293;
t170 = t389 * t265;
t105 = -qJD(1) * t170 + t168 * t388;
t175 = t261 * t209 + t258 * t302;
t349 = t175 * qJD(4);
t364 = t258 * t201;
t128 = t349 - t364;
t415 = t209 * t346 - t261 * (qJD(4) * t302 - t201);
t61 = t128 * pkin(4) + pkin(10) * t415 + t105;
t73 = pkin(10) * t288 + t83;
t182 = t388 * t194;
t123 = t176 * t389 - t182;
t114 = -pkin(3) * t302 - t123;
t79 = t173 * pkin(4) - t175 * pkin(10) + t114;
t326 = -t257 * t61 - t260 * t35 - t79 * t351 + t73 * t352;
t33 = -t257 * t73 + t260 * t79;
t435 = -t171 * t33 - t326;
t373 = t205 * t261;
t418 = t353 + t373;
t434 = -qJD(5) * t288 + t415;
t374 = t205 * t258;
t419 = t346 + t374;
t433 = -t419 * t175 - t261 * t415;
t253 = t256 ^ 2;
t345 = qJD(1) * qJD(2);
t432 = -0.2e1 * t253 * t345;
t34 = t257 * t79 + t260 * t73;
t6 = -qJD(5) * t34 - t257 * t35 + t260 * t61;
t431 = -t171 * t34 - t6;
t340 = t388 * pkin(2);
t250 = t340 + pkin(9);
t337 = t250 * t346;
t147 = t193 * t389 - t182;
t355 = qJD(1) * t256;
t339 = t259 * t355;
t320 = pkin(2) * t339;
t157 = pkin(3) * t209 + pkin(9) * t205 + t320;
t95 = t261 * t147 + t258 * t157;
t85 = pkin(10) * t209 + t95;
t428 = t441 * t260 + (t337 + t85) * t257;
t341 = t389 * pkin(2);
t251 = -t341 - pkin(3);
t230 = -t261 * pkin(4) - t258 * pkin(10) + t251;
t427 = t230 * t351 + t257 * t441 - t260 * t85;
t129 = t175 * t257 - t260 * t288;
t383 = t129 * t171;
t75 = t175 * t352 - t257 * t269 + t260 * t434;
t426 = -t75 - t383;
t131 = t260 * t175 + t257 * t288;
t381 = t131 * t171;
t76 = t175 * t351 - t257 * t434 - t260 * t269;
t425 = t76 + t381;
t424 = t129 * t288;
t423 = t205 * t302;
t422 = t437 * t171;
t234 = t250 * t362;
t181 = t257 * t230 + t234;
t420 = -t258 * t269 - t439;
t213 = t314 - t313;
t366 = t257 * t258;
t416 = -t131 * t287 + t75 * t366;
t413 = t131 ^ 2;
t412 = t209 ^ 2;
t263 = qJD(1) ^ 2;
t411 = pkin(5) * t128;
t410 = pkin(5) * t257;
t409 = t129 * pkin(5);
t407 = -qJ(6) - pkin(10);
t26 = -qJ(6) * t131 + t33;
t22 = pkin(5) * t171 + t26;
t406 = t22 - t26;
t192 = t248 + t284;
t358 = pkin(8) * t367 + t247;
t203 = qJ(3) * t367 + t358;
t155 = t388 * t192 + t389 * t203;
t143 = pkin(9) * t390 + t155;
t161 = pkin(3) * t213 - pkin(9) * t421 + t232;
t98 = t261 * t143 + t258 * t161;
t90 = pkin(10) * t213 + t98;
t154 = t192 * t389 - t388 * t203;
t142 = -pkin(3) * t390 - t154;
t186 = t258 * t390 + t261 * t421;
t294 = -t258 * t421 + t261 * t390;
t96 = -pkin(4) * t294 - t186 * pkin(10) + t142;
t48 = t257 * t96 + t260 * t90;
t27 = -qJ(6) * t129 + t34;
t405 = t171 * t27;
t36 = -pkin(4) * t269 + t317;
t19 = t76 * pkin(5) + t36;
t402 = t19 * t257;
t401 = t19 * t260;
t400 = t257 * t36;
t399 = t260 * t36;
t398 = t261 * t76;
t350 = qJD(6) * t260;
t397 = pkin(5) * t374 + qJ(6) * t163 - t258 * t350 + (pkin(5) * t258 - qJ(6) * t362) * qJD(4) + (-t234 + (qJ(6) * t258 - t230) * t257) * qJD(5) + t428;
t347 = t250 * qJD(4);
t363 = t258 * t260;
t396 = qJ(6) * t162 + (-qJ(6) * qJD(5) - t347) * t363 + (-qJD(6) * t258 + (-qJ(6) * qJD(4) - qJD(5) * t250) * t261) * t257 + t427;
t395 = (-t260 * t346 - t261 * t352) * t250 + t427;
t394 = -qJD(5) * t181 + t428;
t94 = -t258 * t147 + t157 * t261;
t84 = -pkin(4) * t209 - t94;
t393 = pkin(5) * t287 + t261 * t347 - t84;
t330 = qJD(5) * t407;
t378 = t173 * t257;
t118 = pkin(4) * t175 + pkin(10) * t173;
t58 = t257 * t118 + t260 * t82;
t392 = -qJ(6) * t378 + t257 * t330 + t350 - t58;
t377 = t173 * t260;
t57 = t260 * t118 - t257 * t82;
t391 = -pkin(5) * t175 - qJ(6) * t377 - qJD(6) * t257 + t260 * t330 - t57;
t325 = qJD(6) + t409;
t72 = -pkin(4) * t288 - t82;
t56 = t325 + t72;
t387 = qJD(4) * t56;
t386 = t128 * t294;
t385 = t128 * t257;
t384 = t128 * t260;
t382 = t131 * t129;
t380 = t131 * t205;
t379 = t171 * t175;
t376 = t175 * t173;
t375 = t175 * t209;
t372 = t209 * t173;
t371 = t209 * t205;
t370 = t250 * t258;
t369 = t253 * t263;
t361 = t261 * t128;
t357 = t259 ^ 2 - t262 ^ 2;
t348 = t209 * qJD(2);
t343 = t262 * t369;
t334 = t261 * t349;
t331 = t262 * t345;
t47 = -t257 * t90 + t260 * t96;
t329 = t209 * t390;
t324 = t131 * t346 + t261 * t75;
t97 = -t258 * t143 + t161 * t261;
t322 = t258 * t288;
t321 = t171 * t260;
t319 = pkin(2) * t338;
t318 = t259 * t343;
t312 = t256 * t263 * t390;
t311 = pkin(1) * t432;
t308 = -t22 * t260 - t257 * t27;
t307 = t22 * t257 - t260 * t27;
t306 = -t257 * t34 - t260 * t33;
t305 = t257 * t33 - t260 * t34;
t304 = t258 * t317 - t261 * t293;
t245 = qJD(2) * t248;
t177 = t245 + t282;
t116 = t177 * t388 - t170;
t160 = t186 * t260 + t213 * t257;
t303 = t253 * t259 * t331;
t301 = 0.2e1 * t323 + qJD(2);
t299 = -t258 * t128 - t173 * t418;
t117 = t177 * t389 + t264;
t207 = t213 * qJD(2);
t158 = pkin(3) * t208 + pkin(9) * t207 + t319;
t55 = -t258 * t117 - t143 * t353 + t158 * t261 - t161 * t346;
t89 = -pkin(4) * t213 - t97;
t298 = qJ(6) * t76 + t326;
t54 = t261 * t117 - t143 * t346 + t258 * t158 + t161 * t353;
t45 = pkin(10) * t208 + t54;
t152 = qJD(4) * t186 - t207 * t258;
t153 = qJD(4) * t294 - t207 * t261;
t67 = t152 * pkin(4) - t153 * pkin(10) + t116;
t10 = t257 * t67 + t260 * t45 + t96 * t351 - t352 * t90;
t297 = t440 * t171;
t296 = -t171 * t351 - t385;
t295 = -pkin(10) * t128 + t171 * t72;
t211 = -pkin(8) * t315 + t240;
t46 = -pkin(4) * t208 - t55;
t283 = t129 * t437 - t76 * t363;
t219 = t358 * qJD(2);
t279 = t205 * t288;
t11 = -qJD(5) * t48 - t257 * t45 + t260 * t67;
t271 = qJD(5) * t306 - t257 * t6 - t260 * t326;
t267 = qJ(6) * t75 + t6;
t266 = t261 * t269 + (-t417 - t279) * t258;
t252 = -pkin(5) * t260 - pkin(4);
t242 = t407 * t260;
t241 = t407 * t257;
t228 = -pkin(8) * t368 + t248;
t224 = (t250 + t410) * t258;
t221 = t260 * t230;
t218 = -pkin(8) * t338 + t245;
t217 = t358 * qJD(1);
t216 = -pkin(8) * t339 + t244;
t212 = qJD(1) * t219;
t202 = t205 ^ 2;
t180 = -t250 * t365 + t221;
t172 = -qJ(6) * t366 + t181;
t166 = -qJ(6) * t363 + t221 + (-t250 * t257 - pkin(5)) * t261;
t159 = t186 * t257 - t213 * t260;
t127 = t129 ^ 2;
t88 = t208 * t257 - t186 * t352 + (qJD(5) * t213 + t153) * t260;
t87 = qJD(5) * t160 + t153 * t257 - t208 * t260;
t71 = t171 * t322 - t361;
t69 = -pkin(5) * t378 + t83;
t68 = t152 * t171 - t386;
t64 = pkin(5) * t159 + t89;
t63 = -t127 + t413;
t51 = -t76 + t381;
t50 = -t75 + t383;
t43 = -t131 * t175 + t171 * t321 + t385;
t42 = -t171 ^ 2 * t257 + t129 * t175 + t384;
t37 = -qJ(6) * t159 + t48;
t31 = t257 * t383 - t260 * t76;
t30 = t131 * t321 - t257 * t75;
t28 = -pkin(5) * t294 - qJ(6) * t160 + t47;
t25 = pkin(5) * t87 + t46;
t24 = t129 * t87 + t159 * t76;
t23 = t131 * t88 - t160 * t75;
t21 = t129 * t287 + t366 * t76;
t20 = -t131 * t437 - t363 * t75;
t18 = t398 + t297 + (t296 - t424) * t258;
t17 = -t398 + t297 + (t296 + t424) * t258;
t16 = (t380 - t384) * t258 + t422 + t324;
t15 = (t380 + t384) * t258 - t422 + t324;
t14 = t128 * t160 + t131 * t152 + t171 * t88 + t294 * t75;
t13 = -t128 * t159 - t129 * t152 - t171 * t87 + t294 * t76;
t12 = -t257 * t425 + t260 * t426;
t9 = -t129 * t88 - t131 * t87 + t159 * t75 - t160 * t76;
t8 = t283 + t416;
t7 = t283 - t416;
t4 = -qJ(6) * t87 - qJD(6) * t159 + t10;
t3 = pkin(5) * t152 - qJ(6) * t88 - qJD(6) * t160 + t11;
t2 = -qJD(6) * t129 - t298;
t1 = -qJD(6) * t131 + t267 + t411;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t303, t357 * t432, t301 * t262 * t354, -0.2e1 * t303, -t301 * t338, 0, -t212 * t390 - t219 * t302 + t259 * t311, -t211 * t390 - t218 * t302 + t262 * t311 (t211 * t262 + t212 * t259 + (-t216 * t262 - t217 * t259) * qJD(2) + (t218 * t262 + t219 * t259 + (-t228 * t262 - t259 * t358) * qJD(2)) * qJD(1)) * t256, t211 * t358 - t212 * t228 - t216 * t219 + t217 * t218, -t201 * t421 - t207 * t209, t201 * t213 + t207 * t205 - t209 * t208 - t270 * t421, -t201 * t390 - t207 * t302, t205 * t208 + t213 * t270, -t208 * qJD(2) + (-t208 - t275) * t323, 0, -t105 * t390 - t116 * t302 + t205 * t319 + t225 * t208 + t213 * t239 + t232 * t269, -t106 * t390 - t117 * t302 - t232 * t201 - t225 * t207 + 0.2e1 * t209 * t319, t105 * t421 - t106 * t213 + t116 * t209 - t117 * t205 + t123 * t207 - t124 * t208 + t154 * t201 - t155 * t270, -t105 * t154 + t106 * t155 - t116 * t123 + t117 * t124 + (t225 + t356) * t319, t175 * t153 - t186 * t415, -t186 * t128 - t175 * t152 - t153 * t173 - t294 * t415, t153 * t288 + t175 * t208 + t186 * t269 - t213 * t415, t152 * t173 - t386, -t128 * t213 - t152 * t288 - t173 * t208 + t269 * t294 (qJD(4) - t237) * t208 + (t208 * t328 + t213 * t280) * t355, -t105 * t294 + t114 * t152 + t116 * t173 + t142 * t128 + t82 * t208 - t213 * t317 + t269 * t97 + t288 * t55, t105 * t186 + t114 * t153 + t116 * t175 - t142 * t415 - t83 * t208 + t213 * t293 - t270 * t98 - t288 * t54, -t98 * t128 - t83 * t152 - t82 * t153 - t54 * t173 - t55 * t175 + t186 * t317 - t293 * t294 + t415 * t97, t105 * t142 + t114 * t116 - t293 * t98 - t317 * t97 + t54 * t83 + t55 * t82, t23, t9, t14, t24, t13, t68, t11 * t171 + t128 * t47 + t129 * t46 + t152 * t33 + t159 * t36 - t294 * t6 + t72 * t87 + t76 * t89, -t10 * t171 - t128 * t48 + t131 * t46 - t152 * t34 + t160 * t36 - t294 * t326 + t72 * t88 - t75 * t89, -t10 * t129 - t11 * t131 + t159 * t326 - t160 * t6 - t33 * t88 - t34 * t87 + t47 * t75 - t48 * t76, t10 * t34 + t11 * t33 - t326 * t48 + t36 * t89 + t46 * t72 + t47 * t6, t23, t9, t14, t24, t13, t68, -t1 * t294 + t128 * t28 + t129 * t25 + t152 * t22 + t159 * t19 + t171 * t3 + t56 * t87 + t64 * t76, -t128 * t37 + t131 * t25 - t152 * t27 + t160 * t19 - t171 * t4 + t2 * t294 + t56 * t88 - t64 * t75, -t1 * t160 - t129 * t4 - t131 * t3 - t159 * t2 - t22 * t88 - t27 * t87 + t28 * t75 - t37 * t76, t1 * t28 + t19 * t64 + t2 * t37 + t22 * t3 + t25 * t56 + t27 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t318, t357 * t369, -t262 * t312, t318, t259 * t312, 0, -t256 * pkin(8) * t331 + t217 * t302 + (-qJD(2) * t323 + t369) * t259 * pkin(1), pkin(1) * t343 + t216 * t302 - t211, 0, 0, t371, -t202 + t412, -t201 + t423, -t371, t348 + (t329 - t275) * qJD(1), 0, t146 * t302 - t205 * t320 - t225 * t209 - t105, t147 * t302 + t225 * t205 - t209 * t320 - t106, t201 * t341 - t270 * t340 - (-t124 + t146) * t209 + (-t123 + t147) * t205, t123 * t146 - t124 * t147 + (-t105 * t389 + t106 * t388 - t225 * t339) * pkin(2), t175 * t373 - t258 * t415 + t334, t299 + t433, t261 * t279 - t375 - t420, t173 * t322 - t361, t266 + t372, -t288 * t209, -t105 * t261 + t114 * t419 + t251 * t128 - t146 * t173 - t82 * t209 + t250 * t420 - t288 * t94, -t250 * t261 * t270 + t105 * t258 + t114 * t418 - t146 * t175 + t83 * t209 - t251 * t415 + t288 * t95 + t370 * t417, t94 * t175 - t415 * t370 + t304 - t419 * t83 - t418 * t82 + (t334 - t361) * t250 + (t337 + t95) * t173, t105 * t251 - t114 * t146 - t82 * t94 - t83 * t95 + ((-t83 * t258 - t82 * t261) * qJD(4) + t304) * t250, t20, t8, t15, t21, t18, t71, t128 * t180 - t129 * t84 - t162 * t72 + t394 * t171 + (-t6 + (t129 * t250 + t257 * t72) * qJD(4)) * t261 + (t250 * t76 + t288 * t33 + t351 * t72 + t400) * t258, -t128 * t181 - t131 * t84 - t163 * t72 - t395 * t171 + (-t326 + (t131 * t250 + t260 * t72) * qJD(4)) * t261 + (-t250 * t75 - t288 * t34 - t352 * t72 + t399) * t258, t162 * t34 + t163 * t33 + t180 * t75 - t181 * t76 - t394 * t131 - t395 * t129 + t306 * t353 + (qJD(5) * t305 + t257 * t326 - t260 * t6) * t258, t180 * t6 - t181 * t326 - t72 * t84 + t395 * t34 + t394 * t33 + (t258 * t36 + t353 * t72) * t250, t20, t8, t15, t21, t18, t71, t128 * t166 - t162 * t56 + t224 * t76 + (t257 * t387 - t1) * t261 + t397 * t171 + t393 * t129 + (t22 * t288 + t351 * t56 + t402) * t258, -t128 * t172 - t163 * t56 - t224 * t75 + (t260 * t387 + t2) * t261 - t396 * t171 + t393 * t131 + (-t27 * t288 - t352 * t56 + t401) * t258, t162 * t27 + t163 * t22 + t166 * t75 - t172 * t76 - t397 * t131 - t396 * t129 + t308 * t353 + (qJD(5) * t307 - t1 * t260 - t2 * t257) * t258, t1 * t166 + t172 * t2 + t19 * t224 + t22 * t397 + t27 * t396 + t393 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348 + (t329 + t208) * qJD(1), -t201 - t423, -t202 - t412, t123 * t209 + t124 * t205 + t239, 0, 0, 0, 0, 0, 0, t266 - t372, -t258 * t270 - t288 * t373 - t375 - t439, t299 - t433, -t114 * t209 + t258 * t438 + t261 * t436, 0, 0, 0, 0, 0, 0, t17, t16, t7, t162 * t33 - t163 * t34 + (-qJD(4) * t305 - t36) * t261 + (t288 * t72 + t271) * t258, 0, 0, 0, 0, 0, 0, t17, t16, t7, t162 * t22 - t163 * t27 + (-qJD(4) * t307 - t19) * t261 + (qJD(5) * t308 - t1 * t257 + t2 * t260 + t288 * t56) * t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, -t173 ^ 2 + t175 ^ 2, t173 * t288 - t415, -t376, t175 * t205 + t364, t269, -t114 * t175 + t436, t114 * t173 - t438, 0, 0, t30, t12, t43, t31, t42, -t379, -pkin(4) * t76 - t129 * t83 - t175 * t33 - t399 + (-pkin(10) * t351 - t57) * t171 + t295 * t257, pkin(4) * t75 - t131 * t83 + t175 * t34 + t400 + (pkin(10) * t352 + t58) * t171 + t295 * t260, t129 * t58 + t131 * t57 + ((qJD(5) * t131 - t76) * pkin(10) + t435) * t260 + ((qJD(5) * t129 - t75) * pkin(10) + t431) * t257, -pkin(4) * t36 + pkin(10) * t271 - t33 * t57 - t34 * t58 - t72 * t83, t30, t12, t43, t31, t42, -t379, t128 * t241 - t129 * t69 - t175 * t22 - t401 + t252 * t76 + t391 * t171 + (t173 * t56 + (t56 + t409) * qJD(5)) * t257, t56 * t377 + t128 * t242 - t131 * t69 + t175 * t27 + t402 - t252 * t75 - t392 * t171 + (t131 * t410 + t260 * t56) * qJD(5), t241 * t75 + t242 * t76 - t391 * t131 - t392 * t129 + (-t171 * t22 + t2) * t260 + (-t1 - t405) * t257, t1 * t241 + t19 * t252 - t2 * t242 + (pkin(5) * t352 - t69) * t56 + t392 * t27 + t391 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, t63, t50, -t382, t51, t128, -t131 * t72 - t431, t129 * t72 - t435, 0, 0, t382, t63, t50, -t382, t51, t128, 0.2e1 * t411 + t405 + (-t325 - t56) * t131 + t267, -pkin(5) * t413 + t171 * t26 + (qJD(6) + t56) * t129 + t298, pkin(5) * t75 - t129 * t406, t406 * t27 + (-t131 * t56 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, t426, -t127 - t413, t27 * t129 + t22 * t131 + t19;];
tauc_reg  = t5;
