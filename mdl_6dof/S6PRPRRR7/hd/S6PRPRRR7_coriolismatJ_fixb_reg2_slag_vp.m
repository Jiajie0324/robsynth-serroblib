% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRPRRR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:56:03
% EndTime: 2019-03-08 20:57:08
% DurationCPUTime: 53.81s
% Computational Cost: add. (64240->1323), mult. (185147->1959), div. (0->0), fcn. (219315->16), ass. (0->885)
t1025 = cos(qJ(6));
t1023 = sin(qJ(5));
t1019 = sin(pkin(8));
t1020 = sin(pkin(7));
t1021 = cos(pkin(14));
t1365 = t1020 * t1021;
t1524 = cos(pkin(8));
t1525 = cos(pkin(7));
t1135 = t1019 * t1365 - t1524 * t1525;
t1097 = t1023 * t1135;
t1026 = cos(qJ(5));
t1024 = sin(qJ(4));
t1267 = t1019 * t1525;
t1224 = t1024 * t1267;
t1264 = t1024 * t1524;
t1018 = sin(pkin(14));
t1547 = cos(qJ(4));
t1313 = t1547 * t1018;
t891 = t1224 + (t1021 * t1264 + t1313) * t1020;
t1468 = t1026 * t891;
t795 = -t1097 + t1468;
t1476 = t1025 * t795;
t1022 = sin(qJ(6));
t1368 = t1018 * t1020;
t1266 = t1020 * t1524;
t1608 = t1021 * t1266 + t1267;
t889 = t1024 * t1368 - t1547 * t1608;
t1488 = t1022 * t889;
t655 = t1476 + t1488;
t1408 = t655 * t1025;
t1474 = t1025 * t889;
t1490 = t1022 * t795;
t653 = -t1474 + t1490;
t1491 = t1022 * t653;
t438 = -t1408 / 0.2e1 + t1491 / 0.2e1;
t1618 = t438 * qJD(6);
t1537 = -t1023 / 0.2e1;
t793 = t1023 * t891 + t1026 * t1135;
t1295 = t793 * t1537;
t1531 = t1026 / 0.2e1;
t1116 = t1531 * t795 + t1295;
t1617 = t1116 * qJD(5);
t1265 = t1021 * t1525;
t1251 = pkin(2) * t1265;
t1335 = t1525 * pkin(3);
t1085 = t1251 + t1335;
t1319 = -pkin(3) * t1021 - pkin(2);
t1367 = t1019 * t1020;
t1369 = t1018 * t1019;
t1616 = t1524 * ((-pkin(10) * t1524 - qJ(3)) * t1368 + t1085) + (-pkin(10) * t1369 + t1319) * t1367;
t1410 = t655 * t1022;
t1412 = t653 * t1025;
t1119 = -t1412 / 0.2e1 - t1410 / 0.2e1;
t1091 = t1119 * t1023;
t1015 = t1023 ^ 2;
t1354 = t1025 * t1015;
t1014 = t1022 ^ 2;
t1016 = t1025 ^ 2;
t964 = (t1014 / 0.2e1 - t1016 / 0.2e1) * t1023;
t1615 = t1022 * qJD(4) * t1354 - qJD(2) * t1091 + t964 * qJD(5);
t1502 = qJD(2) * t655;
t1614 = -qJD(4) * t1091 + qJD(5) * t438 + t653 * t1502;
t1352 = t1026 * qJD(4);
t1007 = t1023 * t1352;
t1257 = qJD(2) * t1116 + t1007;
t1392 = t793 * qJD(2);
t1613 = -qJD(4) * t1116 + t795 * t1392;
t1361 = t1022 * t1025;
t1006 = qJD(5) * t1361;
t1612 = qJD(2) * t438 + t964 * qJD(4) - t1006;
t1611 = t1091 * qJD(6);
t1523 = sin(pkin(6));
t1220 = t1525 * t1523;
t1526 = cos(pkin(6));
t1548 = cos(qJ(2));
t1052 = t1020 * t1526 + t1220 * t1548;
t1546 = sin(qJ(2));
t1234 = t1523 * t1546;
t1171 = t1018 * t1234;
t1036 = -t1021 * t1052 + t1171;
t1235 = t1523 * t1548;
t1053 = -t1020 * t1235 + t1525 * t1526;
t1609 = -t1053 * t1019 + t1036 * t1524;
t1363 = t1022 * t1023;
t1275 = -t1363 / 0.2e1;
t1411 = t653 * t1026;
t1607 = t793 * t1275 + t1411 / 0.2e1;
t1357 = t1023 * t1025;
t1272 = -t1357 / 0.2e1;
t1407 = t655 * t1026;
t1602 = t793 * t1272 + t1407 / 0.2e1;
t1268 = t1018 * t1525;
t1084 = pkin(2) * t1268 + qJ(3) * t1365;
t1037 = pkin(10) * t1608 + t1084;
t603 = t1024 * t1616 + t1547 * t1037;
t1170 = t1020 * t1234;
t1113 = t1019 * t1170;
t1111 = t1546 * t1220;
t931 = -t1018 * t1235 - t1021 * t1111;
t1288 = t1524 * t931;
t932 = -t1018 * t1111 + t1021 * t1235;
t1336 = t932 * t1547;
t1599 = -t1336 / 0.2e1 + (-t1288 / 0.2e1 - t1113 / 0.2e1) * t1024;
t1598 = t793 ^ 2;
t1597 = t889 ^ 2;
t1226 = t793 * pkin(5) - t795 * pkin(12);
t602 = t1024 * t1037 - t1547 * t1616;
t537 = pkin(4) * t1135 + t602;
t1031 = t1226 + t537;
t1540 = t889 * pkin(12);
t1227 = t889 * pkin(4) - t891 * pkin(11);
t538 = -pkin(11) * t1135 + t603;
t954 = -qJ(3) * t1368 + t1251;
t356 = t1026 * t538 + t1023 * (-t1019 * (t1335 + t954) + t1524 * (-pkin(2) * t1020 - pkin(3) * t1365) + t1227);
t298 = t356 + t1540;
t179 = t1022 * t298 - t1025 * t1031;
t1596 = -t179 / 0.2e1;
t180 = t1022 * t1031 + t1025 * t298;
t1595 = -t180 / 0.2e1;
t1594 = t180 / 0.2e1;
t1169 = t1021 * t1234;
t886 = t1018 * t1052 + t1169;
t649 = t1024 * t886 + t1547 * t1609;
t1417 = t649 * t1025;
t1030 = t1019 * t1036 + t1053 * t1524;
t650 = -t1024 * t1609 + t886 * t1547;
t497 = t1023 * t1030 + t650 * t1026;
t1433 = t497 * t1022;
t345 = -t1417 + t1433;
t1593 = -t345 / 0.2e1;
t1418 = t649 * t1022;
t1432 = t497 * t1025;
t346 = t1418 + t1432;
t1592 = -t346 / 0.2e1;
t1591 = t346 / 0.2e1;
t1590 = -t356 / 0.2e1;
t496 = t1023 * t650 - t1026 * t1030;
t1589 = t496 / 0.2e1;
t1588 = t497 / 0.2e1;
t742 = t1336 + (t1113 + t1288) * t1024;
t1396 = t742 * t1023;
t848 = -t931 * t1019 + t1170 * t1524;
t831 = t848 * t1026;
t582 = -t831 + t1396;
t1587 = -t582 / 0.2e1;
t1586 = t603 / 0.2e1;
t1585 = -t649 / 0.2e1;
t1584 = t649 / 0.2e1;
t1583 = t650 / 0.2e1;
t1582 = -t653 / 0.2e1;
t1581 = t653 / 0.2e1;
t1580 = -t655 / 0.2e1;
t1360 = t1022 * t1026;
t876 = t1025 * t891;
t725 = -t1360 * t889 - t876;
t1579 = -t725 / 0.2e1;
t1578 = t725 / 0.2e1;
t1353 = t1025 * t1026;
t1487 = t1022 * t891;
t726 = -t1353 * t889 + t1487;
t1577 = -t726 / 0.2e1;
t1576 = t726 / 0.2e1;
t1575 = -t793 / 0.2e1;
t1574 = t793 / 0.2e1;
t1573 = -t795 / 0.2e1;
t1312 = t1547 * t1021;
t933 = (-t1018 * t1264 + t1312) * t1020;
t1481 = t1023 * t933;
t1283 = t1018 * t1367;
t981 = t1026 * t1283;
t853 = -t981 + t1481;
t1572 = -t853 / 0.2e1;
t1571 = t876 / 0.2e1;
t1570 = -t889 / 0.2e1;
t1569 = t889 / 0.2e1;
t1568 = -t891 / 0.2e1;
t1318 = t1019 * t1547;
t1246 = t1025 * t1318;
t1366 = t1019 * t1024;
t962 = t1023 * t1524 + t1026 * t1366;
t1484 = t1022 * t962;
t897 = t1246 + t1484;
t1567 = -t897 / 0.2e1;
t1566 = t897 / 0.2e1;
t1247 = t1022 * t1318;
t1471 = t1025 * t962;
t898 = -t1247 + t1471;
t1565 = -t898 / 0.2e1;
t1564 = t898 / 0.2e1;
t1316 = t1026 * t1547;
t1355 = t1024 * t1025;
t938 = (-t1022 * t1316 + t1355) * t1019;
t1563 = -t938 / 0.2e1;
t1562 = t938 / 0.2e1;
t1362 = t1022 * t1024;
t939 = (t1025 * t1316 + t1362) * t1019;
t1561 = -t939 / 0.2e1;
t1560 = t939 / 0.2e1;
t1214 = -pkin(5) * t1026 - t1023 * pkin(12);
t1174 = -pkin(4) + t1214;
t1344 = pkin(11) * t1360;
t940 = -t1025 * t1174 + t1344;
t1559 = -t940 / 0.2e1;
t1558 = t940 / 0.2e1;
t1342 = pkin(11) * t1353;
t941 = t1022 * t1174 + t1342;
t1557 = -t941 / 0.2e1;
t1556 = t941 / 0.2e1;
t1009 = pkin(11) * t1363;
t1527 = t1026 * pkin(12);
t1529 = t1023 * pkin(5);
t997 = -t1527 + t1529;
t1470 = t1025 * t997;
t949 = t1009 + t1470;
t1555 = -t949 / 0.2e1;
t1554 = t949 / 0.2e1;
t1343 = pkin(11) * t1357;
t1483 = t1022 * t997;
t950 = -t1343 + t1483;
t1553 = t950 / 0.2e1;
t1358 = t1023 * t1024;
t961 = t1019 * t1358 - t1026 * t1524;
t1552 = -t961 / 0.2e1;
t1551 = t961 / 0.2e1;
t1550 = -t962 / 0.2e1;
t1549 = t962 / 0.2e1;
t1545 = pkin(11) * t649;
t1544 = t582 * pkin(5);
t1383 = t932 * t1024;
t1236 = t1524 * t1547;
t899 = t931 * t1236;
t963 = t1547 * t1113;
t741 = -t899 - t963 + t1383;
t1543 = t741 * pkin(4);
t1542 = t793 * pkin(12);
t1541 = t889 * pkin(11);
t1539 = -t1022 / 0.2e1;
t1538 = t1022 / 0.2e1;
t1536 = t1023 / 0.2e1;
t1535 = t1024 / 0.2e1;
t1534 = -t1025 / 0.2e1;
t1533 = t1025 / 0.2e1;
t1532 = -t1026 / 0.2e1;
t1530 = pkin(11) * t1023;
t1528 = t1026 * pkin(11);
t1522 = t496 * t582;
t1521 = t649 * t741;
t1398 = t741 * t1025;
t1389 = t848 * t1023;
t1395 = t742 * t1026;
t583 = t1389 + t1395;
t1420 = t583 * t1022;
t455 = t1398 - t1420;
t1400 = t741 * t1022;
t1419 = t583 * t1025;
t456 = t1400 + t1419;
t68 = -t345 * t455 + t346 * t456 + t1522;
t1520 = t68 * qJD(1);
t1519 = t853 * t961;
t1240 = t1316 / 0.2e1;
t1317 = t1023 * t1547;
t1242 = t1317 / 0.2e1;
t1349 = -t1547 / 0.2e1;
t113 = (t1532 * t962 + t1537 * t961) * t649 + (t1240 * t497 + t1242 * t496 + t1349 * t650 + t1535 * t649) * t1019;
t1518 = t113 * qJD(4);
t600 = t1026 * t602;
t748 = pkin(4) * t891 + t1541;
t740 = t1023 * t748;
t466 = -t600 + t740;
t1145 = t1549 * t653 + t1567 * t795;
t1387 = t853 * t1025;
t226 = t1387 / 0.2e1 + t1145;
t1517 = qJD(2) * t226;
t1143 = t1549 * t655 + t1565 * t795;
t1388 = t853 * t1022;
t1294 = -t1388 / 0.2e1;
t229 = t1294 + t1143;
t1516 = qJD(2) * t229;
t1172 = t1018 * t1236;
t1364 = t1021 * t1024;
t930 = (t1172 + t1364) * t1020;
t1472 = t1025 * t930;
t1279 = t1023 * t1368;
t1467 = t1026 * t933;
t854 = t1019 * t1279 + t1467;
t1489 = t1022 * t854;
t745 = t1472 - t1489;
t1475 = t1025 * t854;
t1485 = t1022 * t930;
t746 = t1475 + t1485;
t260 = -t653 * t746 - t655 * t745;
t1515 = qJD(2) * t260;
t1127 = -t1489 / 0.2e1 + t1472 / 0.2e1;
t1144 = t1552 * t655 + t1564 * t793;
t335 = t1127 + t1144;
t1514 = qJD(2) * t335;
t1126 = -t1485 / 0.2e1 - t1475 / 0.2e1;
t1138 = t1551 * t653 + t1567 * t793;
t336 = t1126 + t1138;
t1513 = qJD(2) * t336;
t341 = -t1022 * t1598 + t653 * t795;
t1512 = qJD(2) * t341;
t342 = -t1025 * t1598 + t655 * t795;
t1511 = qJD(2) * t342;
t359 = t653 * t853 + t745 * t793;
t1510 = qJD(2) * t359;
t360 = t655 * t853 - t746 * t793;
t1509 = qJD(2) * t360;
t457 = -t793 * t854 + t795 * t853;
t1508 = qJD(2) * t457;
t501 = -t1026 * t1597 + t795 * t891;
t1507 = qJD(2) * t501;
t511 = t793 * t930 - t853 * t889;
t1506 = qJD(2) * t511;
t512 = t795 * t930 - t854 * t889;
t1505 = qJD(2) * t512;
t599 = -t889 * t933 + t891 * t930;
t1504 = qJD(2) * t599;
t1503 = qJD(2) * t653;
t677 = t1135 * t930 + t1283 * t889;
t1501 = qJD(2) * t677;
t678 = t1135 * t933 + t1283 * t891;
t1500 = qJD(2) * t678;
t1499 = qJD(2) * t889;
t1498 = qJD(4) * t649;
t1497 = qJD(5) * t889;
t1496 = qJD(6) * t793;
t772 = -t1019 * t1085 + (qJ(3) * t1369 + t1319 * t1524) * t1020;
t355 = t1023 * t538 - t1026 * (t1227 + t772);
t1495 = t1022 * t355;
t404 = pkin(12) * t891 + t466;
t1494 = t1022 * t404;
t733 = t1023 * t889;
t736 = t1026 * t889;
t473 = -pkin(5) * t733 + pkin(12) * t736 + t603;
t1493 = t1022 * t473;
t584 = pkin(5) * t795 + t1542;
t1492 = t1022 * t584;
t558 = t1022 * t793;
t1486 = t1022 * t897;
t1482 = t1023 * t602;
t1480 = t1025 * t355;
t1479 = t1025 * t404;
t1478 = t1025 * t473;
t1477 = t1025 * t584;
t562 = t1025 * t793;
t1473 = t1025 * t898;
t1469 = t1026 * t748;
t1466 = t1026 * t940;
t1465 = t1026 * t941;
t121 = t497 * t583 + t1521 + t1522;
t1464 = t121 * qJD(1);
t1047 = t1561 * t653 + t1563 * t655 + t1565 * t725 + t1566 * t726;
t1090 = (t1534 * t745 + t1539 * t746) * t1023;
t142 = t1090 - t1047;
t1463 = t142 * qJD(2);
t159 = (-t746 / 0.2e1 + t1138) * t1025 + (t745 / 0.2e1 + t1144) * t1022;
t1462 = t159 * qJD(2);
t1461 = t179 * t1023;
t1460 = t180 * t1023;
t1244 = t1318 / 0.2e1;
t1089 = t1244 * t653 + t1566 * t889;
t1142 = t1551 * t725 + t1562 * t793;
t1394 = t745 * t1026;
t196 = t1394 / 0.2e1 + (t1294 + t1089) * t1023 + t1142;
t1459 = t196 * qJD(2);
t1088 = t1244 * t655 + t1564 * t889;
t1141 = t1551 * t726 + t1561 * t793;
t1292 = -t1387 / 0.2e1;
t1393 = t746 * t1026;
t199 = -t1393 / 0.2e1 + (t1292 + t1088) * t1023 + t1141;
t1458 = t199 * qJD(2);
t200 = t1030 * t848 + t650 * t742 + t1521;
t1457 = t200 * qJD(1);
t1281 = t1022 * t1357;
t755 = t793 * t1281;
t210 = t755 + (-t1411 / 0.2e1 + t1577) * t1025 + (-t1407 / 0.2e1 + t1578) * t1022;
t1456 = t210 * qJD(2);
t248 = -t653 * t726 - t655 * t725;
t1455 = t248 * qJD(2);
t1086 = t1244 * t795 + t1549 * t889;
t1245 = -t1318 / 0.2e1;
t1322 = t889 * t1552;
t1087 = t1245 * t793 + t1322;
t272 = (-t854 / 0.2e1 + t1087) * t1026 + (t1572 + t1086) * t1023;
t1454 = t272 * qJD(2);
t1183 = t1410 + t1412;
t274 = t1183 * t793;
t1453 = t274 * qJD(2);
t297 = -pkin(5) * t889 + t355;
t1452 = t297 * t1022;
t1451 = t297 * t1025;
t1450 = t345 * t1022;
t1449 = t345 * t1026;
t1448 = t346 * t1025;
t1447 = t346 * t1026;
t1413 = t653 * t1023;
t357 = t1413 * t889 - t725 * t793;
t1446 = t357 * qJD(2);
t1409 = t655 * t1023;
t358 = -t1409 * t889 + t726 * t793;
t1445 = t358 * qJD(2);
t1273 = t1360 / 0.2e1;
t1083 = t1014 * t1295 + t1273 * t653;
t1404 = t725 * t1025;
t367 = t1404 / 0.2e1 + t1083;
t1444 = t367 * qJD(2);
t1270 = t1353 / 0.2e1;
t1082 = t1016 * t1295 + t1270 * t655;
t1403 = t726 * t1022;
t369 = -t1403 / 0.2e1 + t1082;
t1443 = t369 * qJD(2);
t1305 = t1474 / 0.2e1;
t373 = (t1581 + t1305) * t1026 + (t1295 + t1568) * t1022;
t1442 = t373 * qJD(2);
t1271 = t1357 / 0.2e1;
t374 = t1571 + t793 * t1271 + (t1488 / 0.2e1 + t1580) * t1026;
t1441 = t374 * qJD(2);
t1276 = t1366 / 0.2e1;
t1108 = t1276 * t793 + t1552 * t891;
t1384 = t930 * t1026;
t388 = t1384 / 0.2e1 + t1108;
t1440 = t388 * qJD(2);
t465 = t1469 + t1482;
t403 = -t891 * pkin(5) - t465;
t1439 = t403 * t1022;
t1438 = t403 * t1025;
t1437 = t455 * t1026;
t1436 = t456 * t1026;
t1390 = t795 * t1023;
t1391 = t793 * t1026;
t1180 = t1390 + t1391;
t460 = t1180 * t889;
t1435 = t460 * qJD(2);
t255 = t496 * t1022;
t1434 = t496 * t1023;
t257 = t496 * t1025;
t500 = -t1023 * t1597 + t793 * t891;
t1431 = t500 * qJD(2);
t1217 = t981 / 0.2e1 - t1481 / 0.2e1;
t506 = t1086 + t1217;
t1430 = t506 * qJD(2);
t1228 = -t1279 / 0.2e1;
t1303 = -t1467 / 0.2e1;
t507 = t1303 + t1322 + (t1349 * t793 + t1228) * t1019;
t1429 = t507 * qJD(2);
t1277 = -t1366 / 0.2e1;
t1107 = t1277 * t795 + t1549 * t891;
t1290 = t930 * t1536;
t513 = t1290 + t1107;
t1428 = t513 * qJD(2);
t515 = -t1036 * t931 + t1053 * t1170 + t886 * t932;
t1427 = t515 * qJD(1);
t1426 = t537 * t1023;
t1425 = t537 * t1026;
t1424 = t558 * qJD(2);
t1423 = t562 * qJD(2);
t1422 = t582 * t1022;
t1421 = t582 * t1025;
t425 = t649 * t1023;
t1416 = t650 * t1022;
t1415 = t650 * t1025;
t652 = -t891 ^ 2 + t1597;
t1414 = t652 * qJD(2);
t1337 = -t1524 / 0.2e1;
t1045 = t1135 * t1277 + t1337 * t891;
t1050 = (-t1364 / 0.2e1 - t1172 / 0.2e1) * t1020;
t673 = t1050 + t1045;
t1406 = t673 * qJD(2);
t1042 = t1135 * t1244 + t1337 * t889;
t1221 = t1264 / 0.2e1;
t1049 = (-t1312 / 0.2e1 + t1018 * t1221) * t1020;
t674 = t1049 - t1042;
t1405 = t674 * qJD(2);
t1402 = t733 * qJD(2);
t1401 = t736 * qJD(2);
t1399 = t741 * t1023;
t1397 = t741 * t1026;
t879 = t1224 / 0.2e1 + (t1313 / 0.2e1 + t1021 * t1221) * t1020;
t1386 = t879 * qJD(2);
t1385 = t897 * t1026;
t839 = t961 * t1022;
t840 = t961 * t1025;
t1380 = t964 * qJD(6);
t1013 = t1020 ^ 2;
t965 = (t1018 ^ 2 + t1021 ^ 2) * t1013;
t1379 = t965 * qJD(2);
t1017 = t1026 ^ 2;
t1003 = t1017 - t1015;
t1378 = qJD(4) * t1003;
t1002 = t1016 - t1014;
t1377 = qJD(5) * t1002;
t1376 = qJD(5) * t1022;
t1375 = qJD(5) * t1023;
t1374 = qJD(5) * t1025;
t1373 = qJD(5) * t1026;
t1372 = qJD(6) * t1022;
t1371 = qJD(6) * t1025;
t1370 = t1015 * t1022;
t1359 = t1023 * qJD(4);
t1356 = t1023 * t1026;
t1351 = -t1014 - t1016;
t420 = t1360 * t649 + t1415;
t421 = -t1353 * t649 + t1416;
t55 = t421 * t1564 + t346 * t1560 + t420 * t1567 + t345 * t1563 + (t1244 * t496 + t1552 * t649) * t1023;
t57 = (-t1448 / 0.2e1 - t1450 / 0.2e1 + t1588) * t961 + (-t1473 / 0.2e1 - t1486 / 0.2e1 + t1549) * t496;
t1350 = t55 * qJD(4) + t57 * qJD(5);
t1348 = pkin(4) * t1573;
t1347 = pkin(5) * t1581;
t1346 = pkin(5) * t1580;
t1345 = pkin(5) * t1584;
t1341 = t1530 / 0.2e1;
t1340 = pkin(12) * t1539;
t1339 = pkin(12) * t1533;
t1338 = t1528 / 0.2e1;
t1333 = t653 * t1392;
t1332 = t655 * t1392;
t1330 = t795 * t1499;
t1329 = t889 * t1392;
t1328 = t891 * t1499;
t1327 = t889 * t891 * qJD(4);
t1326 = t853 * t1589;
t1325 = t582 * t1552;
t1324 = t297 * t1585;
t1323 = t930 * t1584;
t1321 = t297 / 0.2e1 - t355 / 0.2e1;
t1320 = -t600 / 0.2e1 + t740 / 0.2e1;
t1315 = t1547 * t1015;
t1314 = t1547 * t1017;
t1311 = t793 * t1353;
t1310 = t558 / 0.2e1;
t1309 = -t733 / 0.2e1;
t1308 = t733 / 0.2e1;
t1307 = -t1479 / 0.2e1;
t1306 = -t562 / 0.2e1;
t1304 = -t736 / 0.2e1;
t1302 = -t1422 / 0.2e1;
t1301 = -t1421 / 0.2e1;
t1299 = t1409 / 0.2e1;
t1297 = -t1404 / 0.2e1;
t1296 = t1403 / 0.2e1;
t1293 = t853 * t1536;
t1291 = t898 * t1532;
t1289 = t962 * t1536;
t1287 = t1022 * t1359;
t1286 = qJD(4) * t1357;
t1285 = qJD(6) * t1360;
t1284 = qJD(6) * t1353;
t1282 = qJD(6) * t1361;
t1280 = qJD(5) * t1356;
t1278 = t1368 / 0.2e1;
t1274 = t1363 / 0.2e1;
t1269 = pkin(12) * t1351;
t1261 = -qJD(5) - t1499;
t1260 = -qJD(6) - t1392;
t1255 = qJD(5) * t1351;
t1254 = pkin(12) * t1308;
t1253 = t582 * t1341;
t1252 = -qJD(6) + t1352;
t1249 = qJD(4) * t1318;
t1248 = t1019 * t1317;
t1243 = -t1317 / 0.2e1;
t1241 = -t1316 / 0.2e1;
t1237 = t1542 / 0.2e1 + t584 / 0.2e1;
t1233 = t1023 * t1006;
t1232 = t1015 * t1282;
t1231 = qJD(4) * t1281;
t1230 = t848 * t1524 / 0.2e1;
t1225 = t1020 * t1268;
t1223 = t1020 * t1265;
t1219 = t1583 - t1434 / 0.2e1;
t1218 = t831 / 0.2e1 - t1396 / 0.2e1;
t1216 = t1418 / 0.2e1 + t1592;
t1215 = t1417 / 0.2e1 + t345 / 0.2e1;
t235 = t1477 + t1495;
t236 = -t1480 + t1492;
t16 = -t179 * t235 + t180 * t236 + t297 * t356;
t1094 = t1533 * t180 + t1538 * t179 + t1590;
t1039 = -t1094 * t496 + t1588 * t297 + t1591 * t236 + t1593 * t235;
t1123 = t1534 * t456 + t1538 * t455;
t4 = t1544 / 0.2e1 + t1123 * pkin(12) + t1039;
t1213 = t4 * qJD(1) + t16 * qJD(2);
t223 = t1478 - t1494;
t224 = t1479 + t1493;
t17 = -t179 * t223 + t180 * t224 + t297 * t403;
t1043 = t1589 * t403 + t1591 * t224 + t1593 * t223 + t1594 * t421 + t1596 * t420;
t1153 = t1557 * t456 + t1558 * t455;
t2 = (pkin(11) * t1587 + t1324) * t1023 + t1043 + t1153;
t1212 = t2 * qJD(1) + t17 * qJD(2);
t1211 = 0.2e1 * t1231;
t22 = t179 * t726 - t180 * t725 - t223 * t655 - t224 * t653;
t1048 = t1576 * t345 + t1579 * t346 + t1580 * t420 + t1582 * t421;
t1092 = (t1534 * t455 + t1539 * t456) * t1023;
t39 = t1092 - t1048;
t1210 = -t39 * qJD(1) + t22 * qJD(2);
t24 = -t235 * t655 - t236 * t653 + (t180 * t1022 - t179 * t1025) * t793;
t1151 = t1575 * t345 + t1581 * t496;
t1158 = t1574 * t346 + t1580 * t496;
t42 = (-t456 / 0.2e1 + t1151) * t1025 + (t455 / 0.2e1 + t1158) * t1022;
t1209 = t42 * qJD(1) + t24 * qJD(2);
t1038 = (t1532 * t356 + t1537 * t355 + t1586) * t649 - t496 * t465 / 0.2e1 + t466 * t1588 + t537 * t1583;
t1120 = t1532 * t583 + t1537 * t582;
t30 = t1543 / 0.2e1 + t1120 * pkin(11) + t1038;
t79 = -t355 * t465 + t356 * t466 + t537 * t603;
t1208 = t30 * qJD(1) + t79 * qJD(2);
t33 = -t179 * t795 + t356 * t653 + (t235 - t1452) * t793;
t1161 = t1573 * t345 + t1581 * t497;
t74 = t1421 / 0.2e1 + t1161;
t1207 = t74 * qJD(1) + t33 * qJD(2);
t34 = -t180 * t795 + t356 * t655 + (-t236 - t1451) * t793;
t1157 = t1573 * t346 + t1588 * t655;
t77 = t1302 + t1157;
t1206 = t77 * qJD(1) + t34 * qJD(2);
t35 = t1461 * t889 + t223 * t793 + t297 * t725 + t403 * t653;
t1155 = t1574 * t420 + t1578 * t496;
t1160 = t1569 * t345 + t1582 * t649;
t58 = t1437 / 0.2e1 + (t1302 + t1160) * t1023 + t1155;
t1205 = t58 * qJD(1) + t35 * qJD(2);
t36 = t1460 * t889 - t224 * t793 + t297 * t726 + t403 * t655;
t1154 = t1575 * t421 + t1576 * t496;
t1156 = t1569 * t346 + t1580 * t649;
t61 = -t1436 / 0.2e1 + (t1301 + t1156) * t1023 + t1154;
t1204 = t61 * qJD(1) + t36 * qJD(2);
t45 = -t179 * t745 + t180 * t746 + t297 * t853;
t1074 = t1565 * t456 + t1566 * t455 + t1325;
t1075 = t1591 * t746 + t1593 * t745 + t1326;
t47 = t1074 + t1075;
t1203 = t47 * qJD(1) + t45 * qJD(2);
t84 = -t465 * t795 - t466 * t793 + (t356 * t1023 - t1026 * t355) * t889;
t1147 = t1570 * t496 + t1574 * t649;
t1149 = t1569 * t497 + t1573 * t649;
t91 = (-t583 / 0.2e1 + t1147) * t1026 + (t1587 + t1149) * t1023;
t1202 = t91 * qJD(1) + t84 * qJD(2);
t67 = -t345 * t420 + t346 * t421 - t425 * t496;
t1201 = t67 * qJD(1) + t55 * qJD(3);
t71 = (-t1448 + t497 - t1450) * t496;
t1200 = t71 * qJD(1) + t57 * qJD(3);
t1122 = -t1420 / 0.2e1 + t1398 / 0.2e1;
t114 = t1122 + t1158;
t87 = -t180 * t793 + t297 * t655;
t1199 = qJD(1) * t114 - qJD(2) * t87;
t1121 = -t1419 / 0.2e1 - t1400 / 0.2e1;
t115 = t1121 + t1151;
t86 = t179 * t793 - t297 * t653;
t1198 = qJD(1) * t115 - qJD(2) * t86;
t118 = t355 * t853 + t356 * t854 + t537 * t930;
t1051 = t1244 * t741 + t1550 * t583 + t1325;
t1073 = t1588 * t854 + t1323 + t1326;
t99 = t1051 + t1073;
t1197 = t99 * qJD(1) + t118 * qJD(2);
t104 = -t355 * t891 + t603 * t793 + (t465 - t1426) * t889;
t1150 = t1568 * t496 + t1574 * t650;
t127 = t1397 / 0.2e1 + t1150;
t1196 = t127 * qJD(1) + t104 * qJD(2);
t105 = -t356 * t891 + t603 * t795 + (-t466 - t1425) * t889;
t1148 = t1568 * t497 + t1583 * t795;
t130 = -t1399 / 0.2e1 + t1148;
t1195 = t130 * qJD(1) + t105 * qJD(2);
t1029 = t1019 * t1030 * t1278 + t1583 * t933 + t1323;
t185 = t1245 * t741 + t1276 * t742 - t1029 + t1230;
t259 = t1283 * t772 + t602 * t930 + t603 * t933;
t1194 = -t185 * qJD(1) + t259 * qJD(2);
t189 = t355 * t889 - t537 * t793;
t1118 = -t1395 / 0.2e1 - t1389 / 0.2e1;
t192 = t1118 + t1147;
t1193 = qJD(1) * t192 - qJD(2) * t189;
t190 = -t356 * t889 + t537 * t795;
t191 = t1149 + t1218;
t1192 = qJD(1) * t191 - qJD(2) * t190;
t1027 = -t650 * t1135 / 0.2e1 + t1030 * t1568;
t1132 = t899 / 0.2e1 + t963 / 0.2e1 - t1383 / 0.2e1;
t317 = t1027 + t1132;
t395 = t1135 * t603 + t772 * t891;
t1191 = qJD(1) * t317 - qJD(2) * t395;
t1028 = t1030 * t1570 + t1135 * t1585;
t318 = -t1028 + t1599;
t394 = -t1135 * t602 - t772 * t889;
t1190 = qJD(1) * t318 - qJD(2) * t394;
t1032 = t886 * t1365 / 0.2e1 + t1036 * t1278;
t1112 = t1170 / 0.2e1;
t665 = t1112 - t1032;
t813 = -t1084 * t1365 + t1368 * t954;
t1189 = qJD(1) * t665 + qJD(2) * t813;
t122 = (-t1026 * t497 - t1434 + t650) * t649;
t1188 = t122 * qJD(1) + t113 * qJD(3);
t263 = -t1311 + (-t1488 / 0.2e1 - t1476 / 0.2e1 + t1580) * t1023;
t980 = t1017 * t1025 - t1354;
t1187 = -t263 * qJD(2) - t980 * qJD(4);
t265 = -t793 * t1360 + (-t1490 / 0.2e1 + t1582 + t1305) * t1023;
t979 = t1003 * t1022;
t1186 = t265 * qJD(2) + t979 * qJD(4);
t477 = -t795 ^ 2 + t1598;
t1185 = qJD(2) * t477 - qJD(4) * t1180;
t1184 = -t1022 * t235 + t1025 * t236;
t1182 = -t1022 * t949 + t1025 * t950;
t1181 = -t465 * t1023 + t1026 * t466;
t1179 = t1019 * t1242;
t1178 = t1022 * t1244;
t1177 = t1025 * t1245;
t1176 = -qJD(2) * t1180 + t1378;
t1175 = t1352 - t1392;
t1173 = t1252 * t1023;
t1168 = qJD(2) * t1225;
t1167 = qJD(2) * t1223;
t1166 = t1527 / 0.2e1 - t1529 / 0.2e1;
t1165 = pkin(5) * t1579 - t1438 / 0.2e1;
t1164 = pkin(5) * t1577 + t1439 / 0.2e1;
t1163 = pkin(11) * t1580 - t1451 / 0.2e1;
t792 = t1468 / 0.2e1 - t1097 / 0.2e1;
t1162 = t792 * qJD(2) + t1359 / 0.2e1;
t1159 = t1554 * t345 + t1592 * t950;
t1152 = t1550 * t466 + t1551 * t465;
t1146 = t1557 * t746 + t1558 * t745;
t1140 = t1553 * t793 + t1556 * t795;
t1139 = t1553 * t653 + t1554 * t655;
t217 = t1348 + (-t1541 / 0.2e1 - t748 / 0.2e1) * t1026 + (t537 / 0.2e1 - t602 / 0.2e1) * t1023;
t1137 = pkin(4) * t1359 - t217 * qJD(2);
t1068 = pkin(4) * t1574 + t1425 / 0.2e1 + pkin(11) * t1308;
t215 = t1068 + t1320;
t1136 = pkin(4) * t1352 - t215 * qJD(2);
t1134 = t1532 * t179 + t1558 * t793;
t1133 = t1531 * t180 + t1557 * t793;
t1129 = qJD(5) * t879 + t1328;
t1128 = -t1494 / 0.2e1 + t1478 / 0.2e1;
t1125 = t1533 * t224 + t1539 * t223;
t1124 = t1533 * t421 + t1539 * t420;
t1117 = t1533 * t746 + t1539 * t745;
t1115 = t1531 * t854 + t1293;
t1114 = t1534 * t939 + t1538 * t938;
t1110 = qJD(6) * t1537 + t1257;
t1109 = t1540 / 0.2e1 + pkin(11) * t1574 + t1590;
t1106 = -t997 / 0.2e1 + t1166;
t1105 = -t1385 / 0.2e1 + t961 * t1275;
t1104 = t1272 * t961 + t1291;
t1103 = t1124 * pkin(12);
t1044 = t1551 * t403 + t1560 * t180 + t1563 * t179 + t1564 * t224 + t1567 * t223;
t12 = (pkin(11) * t1572 + t1244 * t297) * t1023 + t1044 + t1146;
t532 = t1248 * t961 - t897 * t938 + t898 * t939;
t1102 = t55 * qJD(1) + t12 * qJD(2) + t532 * qJD(3);
t1055 = pkin(5) * t1572 + pkin(12) * t1117;
t1076 = t1550 * t297 + t1565 * t236 + t1566 * t235;
t13 = t1094 * t961 + t1055 + t1076;
t529 = (-t1473 + t962 - t1486) * t961;
t1101 = t57 * qJD(1) - t13 * qJD(2) + t529 * qJD(3);
t1054 = t1115 * pkin(11) - t930 * pkin(4) / 0.2e1;
t63 = (t356 * t1241 + t355 * t1243 + t1547 * t1586 - t537 * t1024 / 0.2e1) * t1019 + t1054 + t1152;
t787 = (-t1024 * t1318 + t1316 * t962 + t1317 * t961) * t1019;
t1099 = t113 * qJD(1) - t63 * qJD(2) + t787 * qJD(3);
t1098 = qJD(4) * t1135;
t1096 = t1135 * qJD(2);
t1095 = (qJD(5) * t795 - t1359 * t889) * t793;
t276 = (t1408 - t1491) * t1023;
t309 = t653 ^ 2 - t655 ^ 2;
t1093 = qJD(2) * t309 - qJD(4) * t276 - qJD(5) * t1183;
t100 = t1022 * t1237 + t1025 * t1321 + t1347;
t895 = t1106 * t1022;
t1081 = pkin(5) * t1374 - qJD(2) * t100 + qJD(4) * t895;
t102 = t1022 * t1321 - t1025 * t1237 + t1346;
t896 = t1106 * t1025;
t1080 = pkin(5) * t1376 - qJD(2) * t102 - qJD(4) * t896;
t1077 = qJD(6) * t792 + t1613;
t1071 = t941 * t1533 + t940 * t1538 - t1528 / 0.2e1;
t1070 = t1461 / 0.2e1 + t795 * t1558 + t793 * t1555;
t1069 = t1096 - qJD(4);
t1067 = t1341 * t653 - t1134;
t1041 = -t1071 * t961 + t1553 * t898 + t1555 * t897;
t308 = (pkin(5) * t1244 + pkin(11) * t1549) * t1023 + t1114 * pkin(12) + t1041;
t31 = t1023 * t1345 - t497 * t1530 / 0.2e1 + t1103 + t1071 * t496 + t1159;
t1035 = t1338 * t297 + t1341 * t356 + t1553 * t180 + t1555 * t179 + t1556 * t236 + t1559 * t235;
t1056 = t1125 * pkin(12) - t403 * pkin(5) / 0.2e1;
t5 = -t1035 + t1056;
t660 = pkin(11) ^ 2 * t1356 - t940 * t949 + t941 * t950;
t1066 = -t31 * qJD(1) - t5 * qJD(2) + t308 * qJD(3) + t660 * qJD(4);
t545 = (t1385 / 0.2e1 + t1561) * t1025 + (t1291 + t1562) * t1022;
t601 = (t1023 * t949 - t1466) * t1025 + (t1023 * t950 + t1465) * t1022;
t89 = (t1449 / 0.2e1 - t421 / 0.2e1) * t1025 + (-t1447 / 0.2e1 + t420 / 0.2e1) * t1022;
t9 = (pkin(12) * t1579 + t224 / 0.2e1 + t235 * t1536 + t1134) * t1025 + (pkin(12) * t1576 - t223 / 0.2e1 + t236 * t1536 + t1133) * t1022 + t1139;
t1065 = t89 * qJD(1) - t9 * qJD(2) + t545 * qJD(3) - t601 * qJD(4);
t978 = t1002 * t1015;
t1064 = qJD(2) * t276 + qJD(4) * t978 + 0.2e1 * t1233;
t25 = (t235 / 0.2e1 + pkin(11) * t1582) * t1026 + (t1023 * t1109 + t1532 * t297) * t1022 + t1070 + t1165;
t588 = (t1177 + t1566 - t1484 / 0.2e1) * t1023;
t790 = t940 * t1023 + (t949 - 0.2e1 * t1009) * t1026;
t93 = (-t1433 / 0.2e1 + t1215) * t1023;
t1063 = -t93 * qJD(1) - t25 * qJD(2) - t588 * qJD(3) - t790 * qJD(4);
t26 = (-t236 / 0.2e1 + t1163) * t1026 + (t1025 * t1109 + t1594) * t1023 + t1140 + t1164;
t587 = (t1178 + t1564 - t1471 / 0.2e1) * t1023;
t791 = t1026 * t950 + (-t941 + 0.2e1 * t1342) * t1023;
t92 = (-t1432 / 0.2e1 - t1216) * t1023;
t1062 = -t92 * qJD(1) - t26 * qJD(2) - t587 * qJD(3) + t791 * qJD(4);
t1061 = (t1022 * t1241 + t1355 / 0.2e1) * t1019;
t1060 = (t1025 * t1241 - t1362 / 0.2e1) * t1019;
t1059 = qJD(2) * t1183 + t1211 - t1377;
t138 = t1025 * t1219 + t1026 * t1216;
t50 = t1023 * t1163 + t1128 - t1133;
t690 = t1061 + t1104;
t888 = -pkin(11) * t1354 - t1465;
t1058 = qJD(1) * t138 + qJD(2) * t50 + qJD(3) * t690 + qJD(4) * t888;
t139 = -t1022 * t1219 + t1026 * t1215;
t51 = t1307 + (-t473 / 0.2e1 + t297 * t1536) * t1022 + t1067;
t691 = t1060 - t1105;
t887 = -pkin(11) * t1370 - t1466;
t1057 = qJD(1) * t139 + qJD(2) * t51 + qJD(3) * t691 - qJD(4) * t887;
t1011 = t1375 / 0.2e1;
t994 = t1019 * pkin(11) * t1315;
t984 = -0.2e1 * qJD(6) * t1281;
t874 = t879 * qJD(4);
t873 = t1009 + t1470 / 0.2e1 + t1166 * t1025;
t872 = t1343 - t1483 / 0.2e1 - t1166 * t1022;
t693 = t1061 - t1104;
t692 = t1060 + t1105;
t676 = t1050 - t1045;
t675 = t1049 + t1042;
t666 = t1112 + t1032;
t651 = qJD(4) * t1309 + t792 * qJD(5);
t630 = t1015 * t1545;
t590 = t1023 * t1178 + t1271 * t962 + t1537 * t898;
t589 = t1023 * t1177 + t1274 * t962 + t1537 * t897;
t544 = (t1533 * t897 + t1539 * t898) * t1026 - t1114;
t514 = t1290 - t1107;
t509 = -t1086 + t1217;
t508 = t1019 * t1228 - t1087 + t1303;
t461 = t1180 * qJD(5);
t427 = t649 * t1026;
t389 = -t1384 / 0.2e1 + t1108;
t375 = t1273 * t889 + t1571 + t1602;
t372 = t1025 * t1304 + t1487 / 0.2e1 + t1607;
t368 = t1296 + t1082;
t366 = t1297 + t1083;
t338 = t1127 - t1144;
t337 = t1126 - t1138;
t320 = -t1027 + t1132;
t319 = t1028 + t1599;
t307 = pkin(5) * t1019 * t1243 + pkin(11) * t1289 + t1339 * t939 + t1340 * t938 + t1041;
t287 = t1183 * qJD(6);
t275 = t276 * qJD(6);
t271 = (t1532 * t961 + t1289) * t889 + (t1241 * t793 + t1242 * t795) * t1019 + t1115;
t266 = t1271 * t795 + t1275 * t889 + t1299 + t1311;
t264 = -t1413 / 0.2e1 + t889 * t1272 + (-t1391 - t1390 / 0.2e1) * t1022;
t228 = t1388 / 0.2e1 + t1143;
t227 = t1292 + t1145;
t218 = pkin(11) * t1304 + t1348 + t1426 / 0.2e1 + t1482 / 0.2e1 + t1469 / 0.2e1;
t216 = t1068 - t1320;
t209 = t1026 * t1119 + t1533 * t726 + t1539 * t725 + t755;
t198 = t1393 / 0.2e1 + t853 * t1271 + t1088 * t1023 + t1141;
t197 = -t1394 / 0.2e1 + t853 * t1274 + t1089 * t1023 + t1142;
t194 = -t1149 + t1218;
t193 = t1118 - t1147;
t186 = t1230 + (t1349 * t741 + t1535 * t742) * t1019 + t1029;
t158 = t1022 * t1144 + t1025 * t1138 + t1117;
t143 = t1090 + t1047;
t141 = t1447 / 0.2e1 + t496 * t1271 + t649 * t1273 + t1415 / 0.2e1;
t140 = -t1449 / 0.2e1 + t496 * t1275 + t649 * t1270 - t1416 / 0.2e1;
t129 = t1399 / 0.2e1 + t1148;
t128 = -t1397 / 0.2e1 + t1150;
t117 = t1122 - t1158;
t116 = t1121 - t1151;
t103 = pkin(12) * t1306 + t1346 + t1452 / 0.2e1 + t1495 / 0.2e1 + t1477 / 0.2e1;
t101 = pkin(12) * t1310 + t1347 + t1451 / 0.2e1 + t1480 / 0.2e1 - t1492 / 0.2e1;
t98 = -t1051 + t1073;
t95 = t1271 * t497 + t1275 * t649 + t1537 * t346;
t94 = t1271 * t649 + t1274 * t497 + t1537 * t345;
t90 = t1023 * t1149 + t1026 * t1147 - t1120;
t88 = (t1533 * t345 + t1539 * t346) * t1026 + t1124;
t76 = t1422 / 0.2e1 + t1157;
t75 = t1301 + t1161;
t64 = t1019 * t1240 * t356 + t1179 * t355 + t1245 * t603 + t1276 * t537 + t1054 - t1152;
t60 = t1436 / 0.2e1 + t582 * t1271 + t1156 * t1023 + t1154;
t59 = -t1437 / 0.2e1 + t582 * t1274 + t1160 * t1023 + t1155;
t53 = pkin(11) * t1299 + t1271 * t297 + t1128 + t1133;
t52 = t297 * t1275 + t1307 - t1493 / 0.2e1 - t1067;
t46 = -t1074 + t1075;
t41 = t1022 * t1158 + t1025 * t1151 - t1123;
t40 = t1092 + t1048;
t32 = t257 * t1557 + t255 * t1559 + t496 * t1338 + (pkin(11) * t1588 + t1345) * t1023 + t1103 - t1159;
t29 = t583 * t1338 + t1253 - t1543 / 0.2e1 + t1038;
t28 = t236 * t1531 - t1460 / 0.2e1 + t356 * t1271 + t297 * t1270 + t1025 * t1254 - t1140 + t1164 + t1602 * pkin(11);
t27 = pkin(11) * t1607 + t1022 * t1254 + t297 * t1273 + t356 * t1274 + t235 * t1532 - t1070 + t1165;
t14 = t1551 * t356 + t1595 * t840 + t1596 * t839 + t1055 - t1076;
t11 = pkin(11) * t1293 + t1179 * t297 + t1044 - t1146;
t10 = t941 * t1310 + t236 * t1275 + t1360 * t1595 + t940 * t1306 + t235 * t1272 + t179 * t1270 + (t1297 + t1296) * pkin(12) + t1125 - t1139;
t6 = t1035 + t1056;
t3 = t456 * t1339 + t455 * t1340 - t1544 / 0.2e1 + t1039;
t1 = t1023 * t1324 + t1043 - t1153 + t1253;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t515 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t200, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t121 + qJD(4) * t122, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t68 + qJD(4) * t67 + qJD(5) * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1234, -qJD(2) * t1235, 0, 0, 0, 0, 0, 0, 0, 0 (-t1013 * t1169 + t1525 * t931) * qJD(2) (t1013 * t1171 - t1525 * t932) * qJD(2) (-t1018 * t931 + t1021 * t932) * t1020 * qJD(2), t1427 + (-pkin(2) * t1013 * t1234 + t1084 * t932 + t931 * t954) * qJD(2) + t666 * qJD(3), 0, 0, 0, 0, 0, 0 (t1135 * t741 + t848 * t889) * qJD(2) + t320 * qJD(4) (t1135 * t742 + t848 * t891) * qJD(2) + t319 * qJD(4) (t741 * t891 - t742 * t889) * qJD(2), t1457 + (t602 * t741 + t603 * t742 + t772 * t848) * qJD(2) + t186 * qJD(3), 0, 0, 0, 0, 0, 0 (-t582 * t889 + t741 * t793) * qJD(2) + t128 * qJD(4) + t194 * qJD(5) (-t583 * t889 + t741 * t795) * qJD(2) + t129 * qJD(4) + t193 * qJD(5) (t582 * t795 - t583 * t793) * qJD(2) + t90 * qJD(4), t1464 + (t355 * t582 + t356 * t583 + t537 * t741) * qJD(2) + t98 * qJD(3) + t29 * qJD(4), 0, 0, 0, 0, 0, 0 (t455 * t793 + t582 * t653) * qJD(2) + t59 * qJD(4) + t75 * qJD(5) + t117 * qJD(6) (-t456 * t793 + t582 * t655) * qJD(2) + t60 * qJD(4) + t76 * qJD(5) + t116 * qJD(6) (-t455 * t655 - t456 * t653) * qJD(2) + t40 * qJD(4) + t41 * qJD(5), t1520 + (-t179 * t455 + t180 * t456 + t297 * t582) * qJD(2) + t46 * qJD(3) + t1 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t666 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t186, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t98 + t1518, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t46 + t1350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t320 - qJD(4) * t650, qJD(2) * t319 + t1498, 0, 0, 0, 0, 0, 0, 0, 0, t128 * qJD(2) + t425 * qJD(5) - t1352 * t650, qJD(2) * t129 + qJD(5) * t427 + t1359 * t650, t90 * qJD(2) + (-t1015 - t1017) * t1498, t29 * qJD(2) + (-pkin(4) * t650 - t1017 * t1545 - t630) * qJD(4) + t1188, 0, 0, 0, 0, 0, 0, t59 * qJD(2) + (-t1026 * t420 - t1370 * t649) * qJD(4) + t94 * qJD(5) + t141 * qJD(6), t60 * qJD(2) + (t1026 * t421 - t1354 * t649) * qJD(4) + t95 * qJD(5) + t140 * qJD(6), t40 * qJD(2) + t88 * qJD(5) + (-t1022 * t421 - t1025 * t420) * t1359, t1 * qJD(2) + (-t420 * t940 + t421 * t941 - t630) * qJD(4) + t32 * qJD(5) + t1201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t194 + qJD(4) * t425 - qJD(5) * t497, qJD(2) * t193 + qJD(4) * t427 + qJD(5) * t496, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t75 + qJD(4) * t94 + qJD(6) * t255 - t1374 * t497, qJD(2) * t76 + qJD(4) * t95 + qJD(6) * t257 + t1376 * t497, t41 * qJD(2) + t88 * qJD(4) + t1255 * t496, t3 * qJD(2) + t32 * qJD(4) + (-pkin(5) * t497 + t1269 * t496) * qJD(5) + t1200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t117 + qJD(4) * t141 + qJD(5) * t255 - qJD(6) * t346, qJD(2) * t116 + qJD(4) * t140 + qJD(5) * t257 + qJD(6) * t345, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t665 - t1427, 0, 0, 0, 0, 0, 0, -t317 * qJD(4), -t318 * qJD(4), 0, -qJD(3) * t185 - t1457, 0, 0, 0, 0, 0, 0, qJD(4) * t127 - qJD(5) * t191, qJD(4) * t130 - qJD(5) * t192, qJD(4) * t91, qJD(3) * t99 + qJD(4) * t30 - t1464, 0, 0, 0, 0, 0, 0, qJD(4) * t58 + qJD(5) * t74 - qJD(6) * t114, qJD(4) * t61 + qJD(5) * t77 - qJD(6) * t115, -qJD(4) * t39 + qJD(5) * t42, qJD(3) * t47 + qJD(4) * t2 + qJD(5) * t4 - t1520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1225, -qJD(3) * t1223, t965 * qJD(3), -t813 * qJD(3), -t1327, t652 * qJD(4), t889 * t1098, t1327, t891 * t1098, 0, qJD(3) * t677 + qJD(4) * t395, qJD(3) * t678 + qJD(4) * t394, qJD(3) * t599, qJD(3) * t259 (-qJD(5) * t793 - t1352 * t889) * t795, qJD(4) * t460 + qJD(5) * t477, qJD(4) * t501 - t1497 * t793, t1095, -qJD(4) * t500 - t1497 * t795, t1327, qJD(3) * t511 + qJD(4) * t104 + qJD(5) * t190, qJD(3) * t512 + qJD(4) * t105 + qJD(5) * t189, qJD(3) * t457 + qJD(4) * t84, qJD(3) * t118 + qJD(4) * t79 (qJD(4) * t726 - qJD(6) * t653 - t1374 * t793) * t655, qJD(4) * t248 + qJD(5) * t274 + qJD(6) * t309, qJD(4) * t358 + qJD(5) * t342 - t1496 * t653 (qJD(4) * t725 + qJD(6) * t655 - t1376 * t793) * t653, qJD(4) * t357 - qJD(5) * t341 - t1496 * t655, t1095, qJD(3) * t359 + qJD(4) * t35 + qJD(5) * t33 + qJD(6) * t87, qJD(3) * t360 + qJD(4) * t36 + qJD(5) * t34 + qJD(6) * t86, qJD(3) * t260 + qJD(4) * t22 + qJD(5) * t24, qJD(3) * t45 + qJD(4) * t17 + qJD(5) * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1168, -t1167, t1379, -t1189, 0, 0, 0, 0, 0, 0, qJD(4) * t676 + t1501, qJD(4) * t675 + t1500, t1504 (t1018 * t1266 + t1024 * t933 - t1547 * t930) * t1019 * qJD(3) + t1194, 0, 0, 0, 0, 0, 0, qJD(4) * t389 + qJD(5) * t509 + t1506, qJD(4) * t514 + qJD(5) * t508 + t1505, qJD(4) * t271 + t1508 (-t1318 * t930 + t854 * t962 + t1519) * qJD(3) + t64 * qJD(4) + t1197, 0, 0, 0, 0, 0, 0, qJD(4) * t197 + qJD(5) * t227 + qJD(6) * t338 + t1510, qJD(4) * t198 + qJD(5) * t228 + qJD(6) * t337 + t1509, qJD(4) * t143 + qJD(5) * t158 + t1515 (-t745 * t897 + t746 * t898 + t1519) * qJD(3) + t11 * qJD(4) + t14 * qJD(5) + t1203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1328, t1414, t1069 * t889, t1328, t1069 * t891, 0, qJD(3) * t676 - qJD(4) * t603 - t1191, qJD(3) * t675 + qJD(4) * t602 - t1190, 0, 0, t1617 + (-qJD(2) * t795 - t1359) * t736, -t1378 * t889 + t1435 - t461, t1359 * t891 + t1507, t1175 * t733 - t1617, t1352 * t891 - t1431, t1129, t389 * qJD(3) + (t1023 * t1227 - t1026 * t603) * qJD(4) + t218 * qJD(5) + t1196, t514 * qJD(3) + (t603 * t1023 + t1026 * t1227) * qJD(4) + t216 * qJD(5) + t1195, t271 * qJD(3) + qJD(4) * t1181 + t1202, t64 * qJD(3) + (-t603 * pkin(4) + pkin(11) * t1181) * qJD(4) + t1208, qJD(5) * t368 + t1611 + (t1286 + t1502) * t726, t1455 + t209 * qJD(5) - t275 + (-t1403 - t1404) * t1359, t1445 + (-t1026 * t726 - t1354 * t889) * qJD(4) + t266 * qJD(5) + t372 * qJD(6), qJD(5) * t366 - t1611 + (t1287 + t1503) * t725, t1446 + (t1026 * t725 + t1370 * t889) * qJD(4) + t264 * qJD(5) + t375 * qJD(6), -t1617 + (-qJD(6) / 0.2e1 + t1175) * t733, -t223 * t1352 + t197 * qJD(3) + t27 * qJD(5) + t53 * qJD(6) + (pkin(11) * t725 + t889 * t940 + t1439) * t1359 + t1205, t224 * t1352 + t198 * qJD(3) + t28 * qJD(5) + t52 * qJD(6) + (pkin(11) * t726 + t889 * t941 + t1438) * t1359 + t1204, t143 * qJD(3) + (-t725 * t941 + t726 * t940 + (-t1022 * t224 - t1025 * t223) * t1023) * qJD(4) + t10 * qJD(5) + t1210, t11 * qJD(3) + (t1530 * t403 - t223 * t940 + t224 * t941) * qJD(4) + t6 * qJD(5) + t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1613, t1185, t1261 * t793, t1613, t1261 * t795, t874, qJD(3) * t509 + qJD(4) * t218 - qJD(5) * t356 - t1192, qJD(3) * t508 + qJD(4) * t216 + qJD(5) * t355 - t1193, 0, 0, qJD(4) * t368 - t1618 + (-t1376 - t1502) * t562, t209 * qJD(4) - t1377 * t793 + t1453 - t287, qJD(4) * t266 + t1376 * t795 + t1511, qJD(4) * t366 + t1618 + (t1374 - t1503) * t558, qJD(4) * t264 + t1374 * t795 - t1512, t1077, t227 * qJD(3) + t27 * qJD(4) + (t1022 * t1226 - t1025 * t356) * qJD(5) + t103 * qJD(6) + t1207, t228 * qJD(3) + t28 * qJD(4) + (t1022 * t356 + t1025 * t1226) * qJD(5) + t101 * qJD(6) + t1206, t158 * qJD(3) + t10 * qJD(4) + qJD(5) * t1184 + t1209, t14 * qJD(3) + t6 * qJD(4) + (-pkin(5) * t356 + pkin(12) * t1184) * qJD(5) + t1213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1614, t1093, qJD(4) * t372 + t1260 * t653, t1614, qJD(4) * t375 + t1260 * t655, t651, qJD(3) * t338 + qJD(4) * t53 + qJD(5) * t103 - qJD(6) * t180 - t1199, qJD(3) * t337 + qJD(4) * t52 + qJD(5) * t101 + qJD(6) * t179 - t1198, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t665 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t185, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t99 + t1518, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t47 + t1350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1168, t1167, -t1379, t1189, 0, 0, 0, 0, 0, 0, -qJD(4) * t673 - t1501, -qJD(4) * t674 - t1500, -t1504, -t1194, 0, 0, 0, 0, 0, 0, qJD(4) * t388 - qJD(5) * t506 - t1506, -qJD(4) * t513 - qJD(5) * t507 - t1505, qJD(4) * t272 - t1508, -qJD(4) * t63 - t1197, 0, 0, 0, 0, 0, 0, qJD(4) * t196 + qJD(5) * t226 - qJD(6) * t335 - t1510, qJD(4) * t199 + qJD(5) * t229 - qJD(6) * t336 - t1509, -qJD(4) * t142 + qJD(5) * t159 - t1515, qJD(4) * t12 - qJD(5) * t13 - t1203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t787, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t532 + qJD(5) * t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t1366 - t1406, -t1249 - t1405, 0, 0, 0, 0, 0, 0, 0, 0, t1440 + (-qJD(5) * t1317 - t1024 * t1352) * t1019, -t1428 + (qJD(4) * t1358 - qJD(5) * t1316) * t1019, t1454 + (t1315 + t1314) * t1019 * qJD(4) (t994 + (-pkin(4) * t1024 + pkin(11) * t1314) * t1019) * qJD(4) + t1099, 0, 0, 0, 0, 0, 0, t1459 + (t1015 * t1247 - t938 * t1026) * qJD(4) + t589 * qJD(5) + t693 * qJD(6), t1458 + (t1015 * t1246 + t939 * t1026) * qJD(4) + t590 * qJD(5) + t692 * qJD(6), -t1463 + t544 * qJD(5) + (-t1022 * t939 - t1025 * t938) * t1359 (-t938 * t940 + t939 * t941 + t994) * qJD(4) + t307 * qJD(5) + t1102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t1248 - t962 * qJD(5) - t1430, t961 * qJD(5) - t1026 * t1249 - t1429, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t589 + qJD(6) * t839 - t1374 * t962 + t1517, qJD(4) * t590 + qJD(6) * t840 + t1376 * t962 + t1516, t544 * qJD(4) + t1255 * t961 + t1462, t307 * qJD(4) + (-pkin(5) * t962 + t1269 * t961) * qJD(5) + t1101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t693 + qJD(5) * t839 - qJD(6) * t898 - t1514, qJD(4) * t692 + qJD(5) * t840 + qJD(6) * t897 - t1513, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317 * qJD(2), t318 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t127, -qJD(2) * t130, -qJD(2) * t91, -qJD(2) * t30 - t1188, 0, 0, 0, 0, 0, 0, -qJD(2) * t58 - qJD(5) * t93 - qJD(6) * t138, -qJD(2) * t61 - qJD(5) * t92 - qJD(6) * t139, qJD(2) * t39 + qJD(5) * t89, -qJD(2) * t2 - qJD(5) * t31 - t1201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1328, -t1414, -t889 * t1096, -t1328, -t891 * t1096, 0, qJD(3) * t673 + t1191, qJD(3) * t674 + t1190, 0, 0, t1026 * t1330 + t1617, -t461 - t1435, qJD(5) * t736 - t1507, t1023 * t1329 - t1617, -qJD(5) * t733 + t1431, -t1129, -qJD(3) * t388 + qJD(5) * t217 - t1196, qJD(3) * t513 + qJD(5) * t215 - t1195, -qJD(3) * t272 - t1202, qJD(3) * t63 - t1208, qJD(5) * t369 - t1502 * t726 + t1611, qJD(5) * t210 - t1455 - t275, -qJD(5) * t263 + qJD(6) * t373 - t1445, qJD(5) * t367 - t1503 * t725 - t1611, qJD(5) * t265 - qJD(6) * t374 - t1446, -t1617 + (t1392 + qJD(6) / 0.2e1) * t733, -qJD(3) * t196 - qJD(5) * t25 - qJD(6) * t50 - t1205, -qJD(3) * t199 - qJD(5) * t26 - qJD(6) * t51 - t1204, qJD(3) * t142 - qJD(5) * t9 - t1210, -qJD(3) * t12 - qJD(5) * t5 - t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1406, t1405, 0, 0, 0, 0, 0, 0, 0, 0, -t1440, t1428, -t1454, -t1099, 0, 0, 0, 0, 0, 0, -qJD(5) * t588 - qJD(6) * t690 - t1459, -qJD(5) * t587 - qJD(6) * t691 - t1458, qJD(5) * t545 + t1463, qJD(5) * t308 - t1102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, t1003 * qJD(5), 0, -t1280, 0, 0, -pkin(4) * t1375, -pkin(4) * t1373, 0, 0, t1016 * t1280 - t1232, -t978 * qJD(6) - 0.2e1 * t1026 * t1233, -t980 * qJD(5) + t1023 * t1285, t1014 * t1280 + t1232, t979 * qJD(5) + t1023 * t1284, -t1280, -qJD(5) * t790 - qJD(6) * t888, qJD(5) * t791 + qJD(6) * t887, -qJD(5) * t601, qJD(5) * t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, t1176, t1373 + t1401, -t1257, -t1375 - t1402, -t1386, -pkin(11) * t1373 - t1137, pkin(11) * t1375 - t1136, 0, 0, t1443 - t1380 + (t1016 * t1359 + t1006) * t1026, t1456 + t984 + (-0.2e1 * t1231 + t1377) * t1026, qJD(5) * t1363 + t1187, t1444 + t1380 + (t1014 * t1359 - t1006) * t1026, qJD(5) * t1357 + t1186, -t1110 (t1022 * t1214 - t1342) * qJD(5) + t873 * qJD(6) + t1063 (t1025 * t1214 + t1344) * qJD(5) + t872 * qJD(6) + t1062, qJD(5) * t1182 + t1065 (-pkin(5) * t1528 + pkin(12) * t1182) * qJD(5) + t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1615, -t1064, t1022 * t1173 + t1442, t1615, t1025 * t1173 - t1441, qJD(2) * t1308 + t1011, qJD(5) * t873 - qJD(6) * t941 - t1058, qJD(5) * t872 + qJD(6) * t940 - t1057, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t191, qJD(2) * t192, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t74 + qJD(4) * t93, -qJD(2) * t77 + qJD(4) * t92, -qJD(2) * t42 - qJD(4) * t89, -qJD(2) * t4 + qJD(4) * t31 - t1200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1613, -t1185, -qJD(4) * t736 + t1329, -t1613, qJD(4) * t733 + t1330, t874, qJD(3) * t506 - qJD(4) * t217 + t1192, qJD(3) * t507 - qJD(4) * t215 + t1193, 0, 0, -qJD(4) * t369 + t1025 * t1332 - t1618, -qJD(4) * t210 - t1453 - t287, qJD(4) * t263 + qJD(6) * t562 - t1511, -qJD(4) * t367 + t1022 * t1333 + t1618, -qJD(4) * t265 - qJD(6) * t558 + t1512, -t1077, -qJD(3) * t226 + qJD(4) * t25 + qJD(6) * t102 - t1207, -qJD(3) * t229 + qJD(4) * t26 + qJD(6) * t100 - t1206, -qJD(3) * t159 + qJD(4) * t9 - t1209, qJD(3) * t13 + qJD(4) * t5 - t1213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1430, t1429, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t588 - t1517, qJD(4) * t587 - t1516, -qJD(4) * t545 - t1462, -qJD(4) * t308 - t1101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1257, -t1176, -t1401, t1257, t1402, t1386, t1137, t1136, 0, 0, -t1007 * t1016 - t1380 - t1443, t1026 * t1211 - t1456 + t984, -t1187 - t1284, -t1007 * t1014 + t1380 - t1444, -t1186 + t1285, t1110, qJD(6) * t896 - t1063, -qJD(6) * t895 - t1062, -t1065, -t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, t1002 * qJD(6), 0, -t1282, 0, 0, -pkin(5) * t1372, -pkin(5) * t1371, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1612, -t1059, -t1025 * t1252 + t1423, t1612, t1022 * t1252 - t1424, -t1162, -pkin(12) * t1371 - t1080, pkin(12) * t1372 - t1081, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t114 + qJD(4) * t138, qJD(2) * t115 + qJD(4) * t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1614, -t1093, -qJD(4) * t373 - qJD(5) * t562 + t1333, -t1614, qJD(4) * t374 + qJD(5) * t558 + t1332, t651, qJD(3) * t335 + qJD(4) * t50 - qJD(5) * t102 + t1199, qJD(3) * t336 + qJD(4) * t51 - qJD(5) * t100 + t1198, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t690 + t1514, qJD(4) * t691 + t1513, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1615, t1064, -t1442 + (-t1287 + t1374) * t1026, -t1615, t1441 + (-t1286 - t1376) * t1026, qJD(2) * t1309 + t1011, -qJD(5) * t896 + t1058, qJD(5) * t895 + t1057, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1612, t1059, t1025 * t1352 - t1423, -t1612, -t1022 * t1352 + t1424, t1162, t1080, t1081, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
