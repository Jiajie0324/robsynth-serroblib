% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRRR7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRPRRR7_inertiaDJ_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:55:55
% EndTime: 2019-03-08 20:56:16
% DurationCPUTime: 8.19s
% Computational Cost: add. (12005->471), mult. (36720->856), div. (0->0), fcn. (40282->16), ass. (0->218)
t240 = cos(pkin(7));
t204 = pkin(2) * t240;
t94 = cos(pkin(14));
t186 = t94 * t204;
t140 = pkin(3) * t240 + t186;
t215 = -pkin(3) * t94 - pkin(2);
t239 = cos(pkin(8));
t91 = sin(pkin(8));
t92 = sin(pkin(7));
t251 = t91 * t92;
t90 = sin(pkin(14));
t274 = ((-pkin(10) * t239 - qJ(3)) * t92 * t90 + t140) * t239 + (-pkin(10) * t90 * t91 + t215) * t251;
t100 = cos(qJ(5));
t264 = cos(qJ(4));
t203 = qJD(4) * t264;
t183 = t100 * t203;
t196 = t100 * t239;
t263 = sin(qJ(4));
t97 = sin(qJ(5));
t212 = t97 * t263;
t75 = t212 * t91 - t196;
t229 = t75 * qJD(5);
t122 = t91 * t183 - t229;
t228 = qJD(5) * t100;
t185 = t91 * t203;
t213 = t91 * t263;
t76 = t100 * t213 + t239 * t97;
t236 = qJD(5) * t76;
t62 = t185 * t97 + t236;
t152 = t75 * t228 + t62 * t97;
t234 = qJD(5) * t97;
t273 = t122 * t100 - t76 * t234 + t152;
t136 = t91 * t140;
t154 = t239 * t215;
t241 = t91 * qJ(3);
t179 = t239 * t264;
t164 = t94 * t179;
t200 = t91 * t240;
t82 = t264 * t200;
t247 = t92 * t164 + t82;
t178 = t239 * t263;
t60 = (t94 * t178 + t264 * t90) * t92 + t263 * t200;
t109 = t136 + t60 * pkin(11) + t247 * pkin(4) - (t154 + (t263 * pkin(4) + t241) * t90) * t92;
t199 = t92 * t239;
t167 = qJD(3) * t90 * t199;
t237 = qJD(3) * t92;
t221 = t94 * t237;
t244 = qJ(3) * t92;
t74 = t204 * t90 + t244 * t94;
t120 = (t199 * t94 + t200) * pkin(10) + t74;
t32 = -t263 * t120 + t274 * t264;
t27 = -t32 * qJD(4) + t263 * t167 - t264 * t221;
t272 = qJD(5) * t109 + t27;
t117 = qJD(4) * t60;
t150 = -t239 * t240 + t94 * t251;
t31 = pkin(4) * t150 - t32;
t45 = t100 * t150 + t97 * t60;
t46 = t100 * t60 - t150 * t97;
t105 = t45 * pkin(5) - t46 * pkin(12) + t31;
t33 = t264 * t120 + t274 * t263;
t107 = -pkin(11) * t150 + t33;
t222 = t90 * t237;
t190 = t91 * t222;
t210 = t263 * t90;
t55 = (-t82 + (-t164 + t210) * t92) * qJD(4);
t270 = -pkin(4) * t117 - t55 * pkin(11) + qJD(5) * t107 - t190;
t9 = t272 * t100 + t270 * t97;
t271 = -pkin(12) * t117 - qJD(6) * t105 + t9;
t151 = t210 * t92 - t247;
t138 = qJD(5) * t150 + t55;
t54 = t60 * t234;
t265 = t100 * t138 + t54;
t268 = -qJD(6) * t151 + t265;
t101 = cos(qJ(2));
t98 = sin(qJ(2));
t198 = t98 * t240;
t144 = t101 * t90 + t198 * t94;
t93 = sin(pkin(6));
t238 = qJD(2) * t93;
t135 = t144 * t238;
t217 = t98 * t238;
t189 = t92 * t217;
t267 = -t239 * t135 + t91 * t189;
t143 = qJD(5) * t151;
t266 = t100 * t143 + t97 * t117;
t230 = t46 * qJD(5);
t35 = -t97 * t55 + t230;
t153 = -t100 * t35 + t45 * t234;
t96 = sin(qJ(6));
t86 = t96 ^ 2;
t99 = cos(qJ(6));
t88 = t99 ^ 2;
t246 = t86 - t88;
t197 = qJD(6) * t246;
t262 = pkin(11) * t100;
t123 = (t144 * t91 + t199 * t98) * t238;
t195 = t101 * t240;
t95 = cos(pkin(6));
t250 = t92 * t95;
t58 = t94 * t250 + (t195 * t94 - t90 * t98) * t93;
t166 = t58 * t179;
t202 = qJD(4) * t263;
t59 = t93 * t98 * t94 + (t195 * t93 + t250) * t90;
t66 = (t101 * t94 - t198 * t90) * t238;
t71 = -t93 * t101 * t92 + t240 * t95;
t24 = qJD(4) * t166 + t71 * t185 - t59 * t202 + t267 * t263 + t66 * t264;
t37 = t58 * t178 + t71 * t213 + t59 * t264;
t44 = t239 * t71 - t58 * t91;
t26 = t100 * t37 + t44 * t97;
t11 = qJD(5) * t26 - t100 * t123 + t24 * t97;
t25 = -t44 * t100 + t37 * t97;
t261 = t11 * t25;
t260 = t11 * t97;
t232 = qJD(6) * t96;
t21 = -t117 * t96 + t232 * t46 + t268 * t99;
t259 = t21 * t96;
t231 = qJD(6) * t99;
t22 = -t117 * t99 + t231 * t46 - t268 * t96;
t258 = t22 * t99;
t23 = qJD(4) * t37 + t66 * t263 - t267 * t264;
t214 = t91 * t264;
t36 = -t71 * t214 + t59 * t263 - t166;
t257 = t36 * t23;
t28 = t33 * qJD(4) + t264 * t167 + t263 * t221;
t256 = t36 * t28;
t38 = -t151 * t99 + t46 * t96;
t255 = t38 * t96;
t39 = t151 * t96 + t99 * t46;
t254 = t39 * t99;
t252 = t75 * t62;
t249 = t96 * t97;
t248 = t97 * t99;
t19 = t100 * t107 - t97 * t109;
t87 = t97 ^ 2;
t245 = -t100 ^ 2 + t87;
t242 = t100 * t99;
t235 = qJD(5) * t96;
t233 = qJD(5) * t99;
t227 = qJD(6) * t100;
t226 = 0.2e1 * t45 * t35;
t225 = -0.2e1 * pkin(4) * qJD(5);
t224 = -0.2e1 * pkin(5) * qJD(6);
t223 = pkin(11) * t234;
t220 = pkin(11) * t228;
t216 = t96 * t231;
t211 = t264 * t28;
t209 = t99 * t228;
t208 = t96 * t227;
t207 = t99 * t227;
t205 = t97 * t228;
t201 = qJD(5) * t264;
t194 = t245 * qJD(5);
t193 = 0.2e1 * t205;
t85 = t92 ^ 2;
t192 = t85 * t217;
t191 = t87 * t216;
t188 = t96 * t214;
t187 = t99 * t205;
t184 = t91 * t202;
t182 = -pkin(5) * t99 + pkin(11) * t96;
t15 = pkin(12) * t151 + t19;
t5 = t105 * t99 - t96 * t15;
t6 = t105 * t96 + t99 * t15;
t181 = -t5 * t99 - t6 * t96;
t180 = pkin(5) * t97 - pkin(12) * t100;
t10 = -t270 * t100 + t272 * t97;
t176 = -t10 * t97 - t9 * t100;
t175 = t11 * t75 + t25 * t62;
t16 = -t26 * t96 + t36 * t99;
t17 = t26 * t99 + t36 * t96;
t174 = -t16 * t99 - t17 * t96;
t173 = -t38 * t99 - t39 * t96;
t148 = t214 * t99 + t96 * t76;
t64 = t99 * t76 - t188;
t172 = t148 * t99 - t64 * t96;
t168 = pkin(5) * t100 + pkin(12) * t97 + pkin(4);
t149 = t99 * t168;
t68 = -t96 * t262 - t149;
t69 = pkin(11) * t242 - t168 * t96;
t171 = -t68 * t99 - t69 * t96;
t170 = -0.2e1 * t240 * t237;
t18 = -t100 * t109 - t107 * t97;
t14 = -pkin(5) * t151 - t18;
t8 = -pkin(5) * t117 - t10;
t163 = t14 * t231 + t8 * t96;
t162 = t14 * t232 - t8 * t99;
t161 = t11 * t96 + t231 * t25;
t160 = -t11 * t99 + t232 * t25;
t159 = t231 * t45 + t35 * t96;
t158 = t232 * t45 - t35 * t99;
t157 = t231 * t75 + t62 * t96;
t156 = t232 * t75 - t62 * t99;
t155 = t180 * t96;
t147 = t233 * t97 + t208;
t146 = -t232 * t97 + t209;
t145 = t228 * t96 + t231 * t97;
t134 = t184 * t36 - t214 * t23;
t103 = t35 * pkin(5) + pkin(12) * t265 + t28;
t1 = -t103 * t96 + t15 * t232 + t271 * t99;
t2 = t103 * t99 - t15 * t231 + t271 * t96;
t131 = qJD(6) * t181 - t1 * t99 - t2 * t96;
t12 = t24 * t100 + t123 * t97 + t228 * t44 - t234 * t37;
t3 = -qJD(6) * t17 - t12 * t96 + t23 * t99;
t4 = qJD(6) * t16 + t12 * t99 + t23 * t96;
t130 = qJD(6) * t174 - t3 * t96 + t4 * t99;
t40 = qJD(6) * t148 - t122 * t99 - t184 * t96;
t41 = qJD(6) * t188 - t122 * t96 + t184 * t99 - t231 * t76;
t129 = qJD(6) * t172 - t40 * t99 - t41 * t96;
t47 = pkin(11) * t147 - qJD(5) * t155 + qJD(6) * t149;
t48 = -t69 * qJD(6) + (pkin(11) * t249 + t180 * t99) * qJD(5);
t128 = qJD(6) * t171 - t47 * t99 - t48 * t96;
t127 = t100 * t12 + t260 + (t100 * t25 - t26 * t97) * qJD(5);
t116 = -0.2e1 * t117;
t83 = -0.2e1 * t205;
t73 = -t90 * t244 + t186;
t65 = t197 * t97 - t209 * t96;
t42 = -t136 + (t241 * t90 + t154) * t92;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t135 * t58 + 0.2e1 * t189 * t71 + 0.2e1 * t59 * t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t123 * t44 + 0.2e1 * t37 * t24 + 0.2e1 * t257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t12 * t26 + 0.2e1 * t257 + 0.2e1 * t261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t16 * t3 + 0.2e1 * t17 * t4 + 0.2e1 * t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, -t101 * t238, 0, 0, 0, 0, 0, 0, 0, 0, -t135 * t240 - t192 * t94, t192 * t90 - t240 * t66 (t135 * t90 + t66 * t94) * t92, -pkin(2) * t192 - t135 * t73 + t221 * t59 - t222 * t58 + t66 * t74, 0, 0, 0, 0, 0, 0, t117 * t44 + t123 * t151 + t150 * t23, t123 * t60 + t150 * t24 - t44 * t55, -t117 * t37 - t151 * t24 + t23 * t60 - t36 * t55, t123 * t42 + t190 * t44 - t23 * t32 + t24 * t33 - t37 * t27 + t256, 0, 0, 0, 0, 0, 0, -t11 * t151 - t117 * t25 + t23 * t45 + t36 * t35, -t117 * t26 - t12 * t151 + t23 * t46 - t265 * t36, t11 * t46 - t12 * t45 - t25 * t265 - t26 * t35, -t10 * t25 - t11 * t18 + t12 * t19 + t23 * t31 - t26 * t9 + t256, 0, 0, 0, 0, 0, 0, t11 * t38 + t16 * t35 + t22 * t25 + t3 * t45, t11 * t39 - t17 * t35 - t21 * t25 - t4 * t45, t16 * t21 - t17 * t22 - t3 * t39 - t38 * t4, -t1 * t17 + t11 * t14 + t16 * t2 + t25 * t8 + t3 * t5 + t4 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90 * t170, t94 * t170, 0.2e1 * (t90 ^ 2 + t94 ^ 2) * t85 * qJD(3), 0.2e1 * (-t73 * t90 + t74 * t94) * t237, -0.2e1 * t60 * t55, -0.2e1 * t117 * t60 + 0.2e1 * t151 * t55, 0.2e1 * t150 * t55, -t151 * t116, -t150 * t116, 0, 0.2e1 * t117 * t42 + 0.2e1 * t150 * t28 + 0.2e1 * t151 * t190, -0.2e1 * t150 * t27 + 0.2e1 * t190 * t60 - 0.2e1 * t42 * t55, -0.2e1 * t117 * t33 + 0.2e1 * t151 * t27 + 0.2e1 * t28 * t60 + 0.2e1 * t32 * t55, 0.2e1 * t190 * t42 - 0.2e1 * t27 * t33 - 0.2e1 * t28 * t32, -0.2e1 * t46 * t265, 0.2e1 * t265 * t45 - 0.2e1 * t46 * t35, 0.2e1 * t117 * t46 - 0.2e1 * t151 * t265, t226, -0.2e1 * t117 * t45 - 0.2e1 * t151 * t35, 0.2e1 * t151 * t117, 0.2e1 * t10 * t151 + 0.2e1 * t117 * t18 + 0.2e1 * t28 * t45 + 0.2e1 * t31 * t35, -0.2e1 * t117 * t19 + 0.2e1 * t151 * t9 - 0.2e1 * t265 * t31 + 0.2e1 * t28 * t46, -0.2e1 * t10 * t46 + 0.2e1 * t18 * t265 - 0.2e1 * t19 * t35 + 0.2e1 * t9 * t45, 0.2e1 * t10 * t18 - 0.2e1 * t19 * t9 + 0.2e1 * t28 * t31, -0.2e1 * t39 * t21, 0.2e1 * t21 * t38 - 0.2e1 * t22 * t39, -0.2e1 * t21 * t45 + 0.2e1 * t35 * t39, 0.2e1 * t38 * t22, -0.2e1 * t22 * t45 - 0.2e1 * t35 * t38, t226, 0.2e1 * t14 * t22 + 0.2e1 * t2 * t45 + 0.2e1 * t35 * t5 + 0.2e1 * t38 * t8, 0.2e1 * t1 * t45 - 0.2e1 * t14 * t21 - 0.2e1 * t35 * t6 + 0.2e1 * t39 * t8, 0.2e1 * t1 * t38 - 0.2e1 * t2 * t39 + 0.2e1 * t21 * t5 - 0.2e1 * t22 * t6, -0.2e1 * t1 * t6 + 0.2e1 * t14 * t8 + 0.2e1 * t2 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 * t239 + t185 * t37 + t213 * t24 + t134, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12 * t76 + t122 * t26 + t134 + t175, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148 * t3 + t16 * t41 - t17 * t40 + t4 * t64 + t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t150 * t213 + t239 * t60) * qJD(4), t150 * t185 - t239 * t55, -t117 * t213 - t151 * t185 + t184 * t60 + t214 * t55 (t167 - t263 * t27 - t211 + (-t263 * t32 + t264 * t33) * qJD(4)) * t91, 0, 0, 0, 0, 0, 0, -t117 * t75 - t151 * t62 + t184 * t45 - t214 * t35, -t117 * t76 - t122 * t151 + t184 * t46 + t214 * t265, -t122 * t45 - t265 * t75 - t76 * t35 + t62 * t46, -t10 * t75 + t122 * t19 - t18 * t62 + t184 * t31 - t211 * t91 - t9 * t76, 0, 0, 0, 0, 0, 0, -t148 * t35 + t22 * t75 + t38 * t62 + t41 * t45, -t21 * t75 - t35 * t64 + t39 * t62 + t40 * t45, -t148 * t21 - t22 * t64 + t38 * t40 - t39 * t41, -t1 * t64 + t14 * t62 - t148 * t2 - t40 * t6 + t41 * t5 + t75 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t196 * t236 + 0.2e1 * t252 + 0.2e1 * (t76 * (-qJD(5) * t212 + t183) - t264 * t184) * t91, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t148 * t41 - 0.2e1 * t40 * t64 + 0.2e1 * t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, -t24, 0, 0, 0, 0, 0, 0, 0, 0, -t100 * t23 + t234 * t36, t228 * t36 + t23 * t97, t127, -pkin(4) * t23 + pkin(11) * t127, 0, 0, 0, 0, 0, 0 (t235 * t25 - t3) * t100 + (qJD(5) * t16 + t161) * t97 (t233 * t25 + t4) * t100 + (-qJD(5) * t17 - t160) * t97, t174 * t228 + (-t3 * t99 - t4 * t96 + (t16 * t96 - t17 * t99) * qJD(6)) * t97, t16 * t48 - t17 * t47 + t3 * t68 + t4 * t69 + (t228 * t25 + t260) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, 0, -t117, 0, -t28, t27, 0, 0, -t54 * t97 + (-t138 * t97 + t230) * t100, -t100 * t265 - t228 * t45 + (-t230 - t35) * t97, t266, t153, t100 * t117 - t143 * t97, 0, -pkin(4) * t35 - t266 * pkin(11) - t28 * t100 + t234 * t31, pkin(4) * t265 - t117 * t262 + t151 * t223 + t228 * t31 + t28 * t97, -t18 * t228 - t19 * t234 + t220 * t46 + t176 + (-t265 * t97 + t153) * pkin(11), -pkin(4) * t28 + ((-t18 * t100 - t19 * t97) * qJD(5) + t176) * pkin(11), t146 * t39 - t21 * t248, t173 * t228 + (t259 - t258 + (-t254 + t255) * qJD(6)) * t97 (t233 * t45 + t21) * t100 + (qJD(5) * t39 - t158) * t97, t145 * t38 + t22 * t249 (-t235 * t45 + t22) * t100 + (-qJD(5) * t38 - t159) * t97, t153, t35 * t68 + t45 * t48 + (-t2 + (pkin(11) * t38 + t14 * t96) * qJD(5)) * t100 + (pkin(11) * t22 + qJD(5) * t5 + t163) * t97, -t35 * t69 + t45 * t47 + (-t1 + (pkin(11) * t39 + t14 * t99) * qJD(5)) * t100 + (-pkin(11) * t21 - qJD(5) * t6 - t162) * t97, t21 * t68 - t22 * t69 + t38 * t47 - t39 * t48 + t181 * t228 + (t1 * t96 - t2 * t99 + (t5 * t96 - t6 * t99) * qJD(6)) * t97, -t1 * t69 + t2 * t68 - t47 * t6 + t48 * t5 + (t14 * t228 + t8 * t97) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184, -t185, 0, 0, 0, 0, 0, 0, 0, 0 (-t100 * t202 - t201 * t97) * t91 (-t100 * t201 + t202 * t97) * t91, t273, -pkin(4) * t184 + t273 * pkin(11), 0, 0, 0, 0, 0, 0 (t229 * t96 - t41) * t100 + (-qJD(5) * t148 + t157) * t97 (t229 * t99 - t40) * t100 + (-qJD(5) * t64 - t156) * t97, t172 * t228 + (t40 * t96 - t41 * t99 + (-t148 * t96 - t64 * t99) * qJD(6)) * t97, pkin(11) * t152 - t148 * t48 - t40 * t69 + t41 * t68 - t47 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, -0.2e1 * t194, 0, t83, 0, 0, t97 * t225, t100 * t225, 0, 0, 0.2e1 * t205 * t88 - 0.2e1 * t191, -0.4e1 * t187 * t96 + 0.2e1 * t197 * t87, 0.2e1 * t208 * t97 + 0.2e1 * t233 * t245, 0.2e1 * t205 * t86 + 0.2e1 * t191, -0.2e1 * t194 * t96 + 0.2e1 * t207 * t97, t83, 0.2e1 * t68 * t234 - 0.2e1 * t100 * t48 + 0.2e1 * (t193 * t96 + t231 * t87) * pkin(11), -0.2e1 * t69 * t234 - 0.2e1 * t100 * t47 + 0.2e1 * (-t232 * t87 + 0.2e1 * t187) * pkin(11), 0.2e1 * t171 * t228 + 0.2e1 * (t47 * t96 - t48 * t99 + (t68 * t96 - t69 * t99) * qJD(6)) * t97, 0.2e1 * pkin(11) ^ 2 * t205 - 0.2e1 * t47 * t69 + 0.2e1 * t48 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, -t12, 0, 0, 0, 0, 0, 0, 0, 0, t160, t161, t130, -pkin(5) * t11 + pkin(12) * t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265, 0, -t35, t117, t10, t9, 0, 0, t231 * t39 - t259, qJD(6) * t173 - t21 * t99 - t22 * t96, t159, t232 * t38 - t258, -t158, 0, -pkin(5) * t22 - pkin(12) * t159 + t162, pkin(5) * t21 + pkin(12) * t158 + t163 (-t259 - t258 + (t254 + t255) * qJD(6)) * pkin(12) + t131, -pkin(5) * t8 + pkin(12) * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t122, 0, 0, 0, 0, 0, 0, 0, 0, t156, t157, t129, -pkin(5) * t62 + pkin(12) * t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, 0, -t234, 0, -t220, t223, 0, 0, -t65, -0.4e1 * t216 * t97 - t228 * t246, t234 * t96 - t207, t65, t147, 0 (pkin(12) * t242 + t182 * t97) * qJD(6) + (-pkin(12) * t249 + (-pkin(5) * t96 - pkin(11) * t99) * t100) * qJD(5) (pkin(11) * t248 + t155) * qJD(6) + (-pkin(12) * t248 + t100 * t182) * qJD(5), t128, -pkin(5) * t220 + pkin(12) * t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t216, -0.2e1 * t197, 0, -0.2e1 * t216, 0, 0, t96 * t224, t99 * t224, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, 0, -t22, t35, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t40, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, -t145, t234, t48, t47, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, 0, -t232, 0, -pkin(12) * t231, pkin(12) * t232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
