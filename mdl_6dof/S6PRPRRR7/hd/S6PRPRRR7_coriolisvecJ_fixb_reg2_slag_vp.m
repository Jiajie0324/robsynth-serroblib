% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRRR7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRPRRR7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:55:55
% EndTime: 2019-03-08 20:56:21
% DurationCPUTime: 11.51s
% Computational Cost: add. (22501->587), mult. (71467->868), div. (0->0), fcn. (62639->16), ass. (0->264)
t224 = sin(pkin(14));
t226 = sin(pkin(6));
t227 = cos(pkin(14));
t235 = cos(qJ(2));
t232 = sin(qJ(2));
t354 = cos(pkin(7));
t305 = t232 * t354;
t248 = t226 * (-t224 * t235 - t227 * t305);
t174 = qJD(1) * t248;
t225 = sin(pkin(7));
t353 = cos(pkin(8));
t311 = t225 * t353;
t343 = t226 * t232;
t274 = t311 * t343;
t263 = qJD(1) * t274;
t352 = sin(pkin(8));
t310 = t225 * t352;
t258 = t224 * qJD(3) * t310 + t174 * t352 - t263;
t231 = sin(qJ(4));
t346 = t224 * t225;
t322 = t231 * t346;
t296 = qJD(4) * t322;
t282 = t352 * t354;
t379 = cos(qJ(4));
t293 = t353 * t379;
t345 = t225 * t227;
t383 = -t379 * t282 - t293 * t345;
t153 = qJD(4) * t383 + t296;
t307 = t231 * t353;
t162 = t225 * (t224 * t379 + t227 * t307) + t231 * t282;
t154 = t162 * qJD(4);
t400 = t154 * pkin(4) + t153 * pkin(11) + t258;
t249 = t226 * (-t224 * t305 + t227 * t235);
t178 = qJD(1) * t249;
t245 = t225 * (-t224 * t307 + t227 * t379);
t273 = t310 * t343;
t243 = (t227 * t311 + t282) * pkin(10);
t313 = t224 * t354;
t334 = pkin(2) * t313 + qJ(3) * t345;
t158 = t243 + t334;
t309 = t227 * t354;
t218 = pkin(2) * t309;
t321 = t354 * pkin(3);
t165 = t321 + t218 + (-pkin(10) * t353 - qJ(3)) * t346;
t378 = pkin(10) * t224;
t259 = -pkin(3) * t227 - t352 * t378;
t181 = (-pkin(2) + t259) * t225;
t292 = t352 * t379;
t87 = -t231 * t158 + t165 * t293 + t181 * t292;
t356 = qJD(3) * t245 + qJD(4) * t87 - t379 * t178 - (qJD(1) * t273 + t174 * t353) * t231;
t179 = qJD(2) * t245;
t399 = qJD(4) * t292 - t179;
t394 = t383 * qJD(2);
t150 = qJD(2) * t322 + t394;
t255 = qJD(5) + t150;
t230 = sin(qJ(5));
t234 = cos(qJ(5));
t328 = qJD(5) * t234;
t329 = qJD(5) * t230;
t115 = -t165 * t352 + t353 * t181;
t161 = t322 + t383;
t74 = t161 * pkin(4) - t162 * pkin(11) + t115;
t283 = t353 * t354;
t191 = t227 * t310 - t283;
t88 = t379 * t158 + (t353 * t165 + t352 * t181) * t231;
t79 = -pkin(11) * t191 + t88;
t372 = t230 * t400 + t356 * t234 + t74 * t328 - t329 * t79;
t244 = t225 * (t224 * t293 + t227 * t231);
t257 = t379 * t273;
t253 = qJD(1) * t257;
t355 = qJD(3) * t244 + qJD(4) * t88 + t174 * t293 - t231 * t178 + t253;
t332 = qJD(1) * t226;
t316 = t235 * t332;
t193 = (qJD(3) * t225 + t316) * qJD(2);
t315 = qJD(2) * t343;
t295 = qJD(1) * t315;
t261 = t354 * t295;
t155 = -t224 * t193 - t227 * t261;
t156 = t227 * t193 - t224 * t261;
t285 = -qJD(2) * t253 - t155 * t293 + t231 * t156;
t317 = t232 * t332;
t331 = qJD(2) * t225;
t200 = qJ(3) * t331 + t317;
t207 = qJD(2) * pkin(2) + t316;
t228 = cos(pkin(6));
t344 = t225 * t228;
t318 = qJD(1) * t344;
t123 = t227 * t200 + t207 * t313 + t224 * t318;
t109 = qJD(2) * t243 + t123;
t122 = -t224 * t200 + t207 * t309 + t227 * t318;
t110 = (-t311 * t378 + t321) * qJD(2) + t122;
t308 = t228 * t354;
t324 = qJD(1) * t308 + qJD(3);
t128 = (qJD(2) * t259 - t207) * t225 + t324;
t59 = t231 * (t110 * t353 + t128 * t352) + t379 * t109;
t37 = qJD(4) * t59 + t285;
t139 = qJD(2) * t296 + qJD(4) * t394;
t152 = t162 * qJD(2);
t291 = qJD(2) * t310;
t208 = t227 * t291;
t256 = qJD(2) * t283 - t208;
t250 = -qJD(4) - t256;
t180 = t234 * t250;
t82 = qJD(5) * t180 + t234 * t139 + t152 * t329;
t114 = t234 * t152 - t230 * t250;
t330 = qJD(5) * t114;
t340 = t230 * t139;
t83 = t330 - t340;
t22 = t83 * pkin(5) + t82 * pkin(12) + t37;
t229 = sin(qJ(6));
t233 = cos(qJ(6));
t53 = -pkin(11) * t250 + t59;
t80 = -t110 * t352 + t353 * t128;
t60 = t150 * pkin(4) - t152 * pkin(11) + t80;
t28 = t230 * t60 + t234 * t53;
t26 = pkin(12) * t255 + t28;
t112 = t152 * t230 + t180;
t384 = -t231 * t109 + t110 * t293 + t128 * t292;
t52 = pkin(4) * t250 - t384;
t31 = t112 * pkin(5) - t114 * pkin(12) + t52;
t280 = t229 * t26 - t233 * t31;
t140 = qJD(2) * t154;
t262 = qJD(2) * t273;
t382 = -(qJD(1) * t262 + t155 * t353) * t231 - t379 * t156;
t36 = qJD(4) * t384 - t382;
t120 = qJD(2) * t263 - t155 * t352;
t67 = t140 * pkin(4) + t139 * pkin(11) + t120;
t267 = -t230 * t67 - t234 * t36 - t60 * t328 + t329 * t53;
t5 = pkin(12) * t140 - t267;
t1 = -qJD(6) * t280 + t229 * t22 + t233 * t5;
t111 = qJD(6) + t112;
t398 = t280 * t111 + t1;
t397 = pkin(12) * t154 + t372;
t90 = t234 * t153 + t162 * t329 + t191 * t328;
t119 = t162 * t234 - t191 * t230;
t91 = qJD(5) * t119 - t230 * t153;
t396 = t91 * pkin(5) + t90 * pkin(12) + t355;
t246 = qJD(5) * t255;
t395 = pkin(11) * t246 + t37;
t306 = t231 * t352;
t196 = t230 * t306 - t234 * t353;
t272 = t224 * t291;
t336 = -qJD(5) * t196 - t230 * t272 + t234 * t399;
t27 = -t230 * t53 + t234 * t60;
t393 = -t255 * t27 - t267;
t175 = qJD(2) * t244;
t268 = qJD(4) * t306 - t175;
t103 = pkin(4) * t152 + pkin(11) * t150;
t41 = t230 * t103 + t234 * t384;
t392 = pkin(11) * t329 + pkin(12) * t152 + t41;
t391 = -pkin(11) * qJD(6) * t234 - t59 + t255 * (pkin(5) * t230 - pkin(12) * t234);
t12 = t229 * t31 + t233 * t26;
t2 = -qJD(6) * t12 + t233 * t22 - t229 * t5;
t389 = -t12 * t111 - t2;
t370 = t230 * t74 + t234 * t79;
t371 = -qJD(5) * t370 - t356 * t230 + t234 * t400;
t387 = t112 * t255;
t386 = t114 * t255;
t222 = t225 ^ 2;
t385 = t222 * (t224 ^ 2 + t227 ^ 2);
t197 = t230 * t353 + t234 * t306;
t335 = qJD(5) * t197 + t399 * t230 + t234 * t272;
t86 = t233 * t114 + t229 * t255;
t351 = qJD(6) * t86;
t44 = -t233 * t140 - t229 * t82 + t351;
t314 = t230 * t36 - t234 * t67;
t8 = -qJD(5) * t28 - t314;
t39 = pkin(12) * t161 + t370;
t118 = t162 * t230 + t234 * t191;
t78 = t191 * pkin(4) - t87;
t49 = t118 * pkin(5) - t119 * pkin(12) + t78;
t17 = -t229 * t39 + t233 * t49;
t381 = qJD(6) * t17 + t229 * t396 + t233 * t397;
t18 = t229 * t49 + t233 * t39;
t380 = -qJD(6) * t18 - t229 * t397 + t233 * t396;
t304 = t235 * t354;
t159 = t227 * t344 + (-t224 * t232 + t227 * t304) * t226;
t160 = t227 * t343 + (t226 * t304 + t344) * t224;
t192 = -t226 * t235 * t225 + t308;
t239 = t159 * t293 - t160 * t231 + t192 * t292;
t377 = t37 * t239;
t6 = -t140 * pkin(5) - t8;
t376 = t6 * t229;
t375 = t6 * t233;
t247 = t233 * t255;
t84 = t114 * t229 - t247;
t374 = t86 * t84;
t373 = -t154 * pkin(5) - t371;
t368 = t111 * t84;
t367 = t118 * t83;
t365 = t229 * t83;
t364 = t229 * t84;
t363 = t233 * t83;
t327 = qJD(6) * t229;
t43 = -qJD(6) * t247 + t114 * t327 - t229 * t140 + t233 * t82;
t362 = t43 * t229;
t361 = t44 * t233;
t360 = t83 * t234;
t359 = t86 * t111;
t213 = -pkin(5) * t234 - pkin(12) * t230 - pkin(4);
t326 = qJD(6) * t233;
t358 = t213 * t326 + t229 * t391 - t233 * t392;
t357 = -t213 * t327 + t229 * t392 + t233 * t391;
t350 = t114 * t112;
t349 = t140 * t161;
t348 = t150 * t152;
t347 = t155 * t224;
t236 = qJD(2) ^ 2;
t342 = t226 * t236;
t341 = t229 * t234;
t339 = t233 * t234;
t252 = -t233 * t197 + t229 * t292;
t338 = -qJD(6) * t252 + t229 * t336 - t233 * t268;
t169 = -t229 * t197 - t233 * t292;
t337 = -qJD(6) * t169 - t229 * t268 - t233 * t336;
t323 = t232 * t342;
t312 = t225 * t354;
t300 = qJD(2) * t354;
t299 = t255 * t230;
t298 = t111 * t233;
t297 = t222 * t323;
t294 = t236 * t312;
t290 = qJD(3) * t312;
t98 = -t150 * t341 - t233 * t152;
t287 = -t229 * t328 + t98;
t99 = -t150 * t339 + t152 * t229;
t286 = t233 * t328 - t99;
t281 = -t12 * t229 + t233 * t280;
t117 = -t159 * t352 + t192 * t353;
t93 = t160 * t379 + (t159 * t353 + t192 * t352) * t231;
t64 = t117 * t230 + t234 * t93;
t46 = -t229 * t239 + t233 * t64;
t45 = -t229 * t64 - t233 * t239;
t47 = -t230 * t79 + t234 * t74;
t40 = t103 * t234 - t230 * t384;
t277 = t117 * t234 - t230 * t93;
t95 = t119 * t233 + t161 * t229;
t276 = -t122 * t224 + t123 * t227;
t275 = t37 * t292;
t25 = -pkin(5) * t255 - t27;
t266 = -pkin(12) * t83 + t111 * t25;
t265 = -pkin(11) * t140 + t255 * t52;
t237 = t150 * t255 + t246;
t185 = pkin(11) * t339 + t213 * t229;
t184 = -pkin(11) * t341 + t213 * t233;
t177 = qJD(2) * t249;
t176 = qJD(2) * t248;
t173 = -t225 * t207 + t324;
t133 = qJD(2) * t274 - t176 * t352;
t94 = t119 * t229 - t233 * t161;
t72 = pkin(5) * t114 + pkin(12) * t112;
t62 = t177 * t379 + (t176 * t353 + t262) * t231 + t239 * qJD(4);
t61 = -qJD(2) * t257 + qJD(4) * t93 - t176 * t293 + t177 * t231;
t51 = qJD(6) * t95 - t233 * t154 - t229 * t90;
t50 = t119 * t327 - t229 * t154 - t161 * t326 + t233 * t90;
t38 = -pkin(5) * t161 - t47;
t33 = -pkin(5) * t152 - t40;
t30 = qJD(5) * t277 + t133 * t230 + t62 * t234;
t29 = qJD(5) * t64 - t133 * t234 + t62 * t230;
t16 = t229 * t72 + t233 * t27;
t15 = -t229 * t27 + t233 * t72;
t10 = qJD(6) * t45 + t61 * t229 + t30 * t233;
t9 = -qJD(6) * t46 - t30 * t229 + t61 * t233;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323, -t235 * t342, 0, 0, 0, 0, 0, 0, 0, 0, t176 * t300 - t227 * t297, -t177 * t300 + t224 * t297 (-t176 * t224 + t177 * t227) * t331, t122 * t176 + t123 * t177 + t155 * t159 + t156 * t160 + (qJD(1) * t192 + t173) * t225 * t315, 0, 0, 0, 0, 0, 0, t117 * t140 + t133 * t150 + t250 * t61, -t117 * t139 + t133 * t152 + t250 * t62, t139 * t239 - t140 * t93 - t150 * t62 + t152 * t61, t117 * t120 + t133 * t80 + t36 * t93 - t384 * t61 + t59 * t62 - t377, 0, 0, 0, 0, 0, 0, t61 * t112 + t140 * t277 - t239 * t83 - t255 * t29, t61 * t114 - t64 * t140 + t239 * t82 - t255 * t30, -t112 * t30 + t114 * t29 + t277 * t82 - t64 * t83, -t267 * t64 - t27 * t29 + t277 * t8 + t28 * t30 + t52 * t61 - t377, 0, 0, 0, 0, 0, 0, t111 * t9 - t277 * t44 + t29 * t84 + t45 * t83, -t10 * t111 + t277 * t43 + t29 * t86 - t46 * t83, -t10 * t84 + t43 * t45 - t44 * t46 - t86 * t9, t1 * t46 + t10 * t12 + t2 * t45 + t25 * t29 - t277 * t6 - t280 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155 * t354 + (-t174 * t354 - t224 * t290) * qJD(2), -t156 * t354 + (t178 * t354 - t227 * t290) * qJD(2) (t156 * t227 - t347) * t225 + ((t174 * t224 - t178 * t227) * t225 + qJD(3) * t385) * qJD(2), t156 * t334 + t155 * t218 - t222 * pkin(2) * t295 - t123 * t178 - t122 * t174 + (-qJ(3) * t347 + qJD(3) * t276 - t173 * t317) * t225, -t139 * t162 - t152 * t153, t139 * t161 - t140 * t162 + t150 * t153 - t152 * t154, t191 * t139 + t153 * t250, t150 * t154 + t349, t191 * t140 + t154 * t250, 0, t115 * t140 + t120 * t161 + t150 * t258 + t80 * t154 + t37 * t191 + t250 * t355, -t115 * t139 + t120 * t162 + t152 * t258 - t80 * t153 + t36 * t191 + t250 * t356, t139 * t87 - t140 * t88 - t150 * t356 + t152 * t355 + t153 * t384 - t154 * t59 - t161 * t36 + t162 * t37, t120 * t115 + t258 * t80 - t355 * t384 + t356 * t59 + t36 * t88 - t37 * t87, -t114 * t90 - t119 * t82, t112 * t90 - t114 * t91 + t118 * t82 - t119 * t83, t114 * t154 + t119 * t140 - t82 * t161 - t255 * t90, t112 * t91 + t367, -t112 * t154 - t118 * t140 - t83 * t161 - t255 * t91, t154 * t255 + t349, t112 * t355 + t37 * t118 + t47 * t140 + t27 * t154 + t8 * t161 + t255 * t371 + t52 * t91 + t78 * t83, t114 * t355 + t37 * t119 - t370 * t140 - t28 * t154 + t161 * t267 - t255 * t372 - t52 * t90 - t78 * t82, -t112 * t372 - t114 * t371 + t118 * t267 - t119 * t8 + t27 * t90 - t28 * t91 - t370 * t83 + t47 * t82, -t267 * t370 + t27 * t371 + t28 * t372 + t355 * t52 + t37 * t78 + t47 * t8, -t43 * t95 - t50 * t86, t43 * t94 - t44 * t95 + t50 * t84 - t51 * t86, -t111 * t50 - t118 * t43 + t83 * t95 + t86 * t91, t44 * t94 + t51 * t84, -t111 * t51 - t118 * t44 - t83 * t94 - t84 * t91, t111 * t91 + t367, t111 * t380 + t118 * t2 + t17 * t83 + t25 * t51 - t280 * t91 + t373 * t84 + t38 * t44 + t6 * t94, -t1 * t118 - t111 * t381 - t12 * t91 - t18 * t83 - t25 * t50 + t373 * t86 - t38 * t43 + t6 * t95, -t1 * t94 - t12 * t51 + t17 * t43 - t18 * t44 - t2 * t95 - t280 * t50 - t380 * t86 - t381 * t84, t1 * t18 + t12 * t381 + t17 * t2 + t373 * t25 - t280 * t380 + t38 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224 * t294, t227 * t294, -t236 * t385 (-t276 + t317) * t331, 0, 0, 0, 0, 0, 0, t353 * t140 - t150 * t272 + t250 * t268, -t353 * t139 - t152 * t272 + t399 * t250, t139 * t292 - t140 * t306 + t179 * t150 - t175 * t152 + (-t150 * t292 + t152 * t306) * qJD(4), -t80 * t272 - t275 + t36 * t306 + t120 * t353 + t384 * t175 - t59 * t179 + (t292 * t59 - t306 * t384) * qJD(4), 0, 0, 0, 0, 0, 0, t112 * t268 - t196 * t140 - t255 * t335 - t292 * t83, t114 * t268 - t197 * t140 - t255 * t336 + t292 * t82, -t112 * t336 + t114 * t335 - t196 * t82 - t197 * t83, -t8 * t196 - t197 * t267 + t268 * t52 - t27 * t335 + t28 * t336 - t275, 0, 0, 0, 0, 0, 0, -t111 * t338 + t169 * t83 + t196 * t44 + t335 * t84, t111 * t337 - t196 * t43 + t252 * t83 + t335 * t86, t169 * t43 + t252 * t44 + t337 * t84 + t338 * t86, -t1 * t252 - t12 * t337 + t169 * t2 + t196 * t6 + t25 * t335 + t280 * t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348, -t150 ^ 2 + t152 ^ 2, -t150 * t250 - t139, -t348 (qJD(4) - t208) * t152 + (t152 * t283 - t154) * qJD(2), 0, -t80 * t152 + t59 * t256 - t285, t80 * t150 + t256 * t384 + t382, 0, 0, -t82 * t230 + t234 * t386 (-t82 - t387) * t234 + (-t83 - t386) * t230, -t114 * t152 + t230 * t140 + t234 * t237, t112 * t299 - t360, t112 * t152 + t234 * t140 - t230 * t237, -t255 * t152, -pkin(4) * t83 - t59 * t112 - t27 * t152 + t265 * t230 - t234 * t395 - t40 * t255, pkin(4) * t82 - t59 * t114 + t28 * t152 + t230 * t395 + t265 * t234 + t41 * t255, t41 * t112 + t40 * t114 + ((-t83 + t330) * pkin(11) + t393) * t234 + (-t8 - t255 * t28 + (qJD(5) * t112 - t82) * pkin(11)) * t230, -t37 * pkin(4) - t27 * t40 - t28 * t41 - t52 * t59 + (-t8 * t230 - t267 * t234 + (-t230 * t28 - t234 * t27) * qJD(5)) * pkin(11), -t43 * t233 * t230 + (-t230 * t327 + t286) * t86, t99 * t84 + t86 * t98 + (-t229 * t86 - t233 * t84) * t328 + (t362 - t361 + (-t233 * t86 + t364) * qJD(6)) * t230, t43 * t234 + t286 * t111 + (-t111 * t327 + t255 * t86 + t363) * t230, t44 * t229 * t230 + (t230 * t326 - t287) * t84, t44 * t234 + t287 * t111 + (-t111 * t326 - t255 * t84 - t365) * t230, t111 * t299 - t360, t184 * t83 - t25 * t98 - t33 * t84 + t357 * t111 + (-t2 + (pkin(11) * t84 + t229 * t25) * qJD(5)) * t234 + (pkin(11) * t44 + t25 * t326 - t255 * t280 + t376) * t230, -t185 * t83 - t25 * t99 - t33 * t86 - t358 * t111 + (t1 + (pkin(11) * t86 + t233 * t25) * qJD(5)) * t234 + (-pkin(11) * t43 - t12 * t255 - t25 * t327 + t375) * t230, -t280 * t99 + t12 * t98 + t184 * t43 - t185 * t44 - t357 * t86 - t358 * t84 + t281 * t328 + (-t1 * t229 - t2 * t233 + (-t12 * t233 - t229 * t280) * qJD(6)) * t230, t1 * t185 + t2 * t184 - t25 * t33 + t358 * t12 - t357 * t280 + (t230 * t6 + t25 * t328) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t350, -t112 ^ 2 + t114 ^ 2, -t82 + t387, -t350, t114 * t150 + t340, t140, -t52 * t114 + t150 * t28 - t314, t52 * t112 - t393, 0, 0, t298 * t86 - t362 (-t43 - t368) * t233 + (-t44 - t359) * t229, t111 * t298 - t86 * t114 + t365, t111 * t364 - t361, -t111 ^ 2 * t229 + t84 * t114 + t363, -t111 * t114, -pkin(5) * t44 + t280 * t114 - t375 - t28 * t84 + (-pkin(12) * t326 - t15) * t111 + t266 * t229, pkin(5) * t43 + t12 * t114 + t376 - t28 * t86 + (pkin(12) * t327 + t16) * t111 + t266 * t233, t15 * t86 + t16 * t84 + ((-t44 + t351) * pkin(12) + t398) * t233 + ((qJD(6) * t84 - t43) * pkin(12) + t389) * t229, -t6 * pkin(5) + t280 * t15 - t12 * t16 - t25 * t28 + (qJD(6) * t281 + t1 * t233 - t2 * t229) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, -t84 ^ 2 + t86 ^ 2, -t43 + t368, -t374, t359 - t44, t83, -t25 * t86 - t389, t25 * t84 - t398, 0, 0;];
tauc_reg  = t3;
