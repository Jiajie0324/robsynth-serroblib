% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRPRRR7_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR7_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR7_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRR7_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRR7_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRPRRR7_invdynJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:56:03
% EndTime: 2019-03-08 20:56:41
% DurationCPUTime: 23.69s
% Computational Cost: add. (28723->852), mult. (87234->1221), div. (0->0), fcn. (78523->18), ass. (0->372)
t318 = sin(pkin(14));
t320 = sin(pkin(6));
t321 = cos(pkin(14));
t330 = cos(qJ(2));
t322 = cos(pkin(7));
t327 = sin(qJ(2));
t486 = t322 * t327;
t255 = (-t318 * t330 - t321 * t486) * t320;
t243 = qJD(1) * t255;
t319 = sin(pkin(7));
t509 = cos(pkin(8));
t439 = t319 * t509;
t490 = t320 * t327;
t399 = t439 * t490;
t507 = sin(pkin(8));
t438 = t319 * t507;
t378 = t318 * qJD(3) * t438 - qJD(1) * t399 + t507 * t243;
t492 = t319 * t321;
t493 = t318 * t322;
t274 = pkin(2) * t493 + qJ(3) * t492;
t359 = (t321 * t439 + t322 * t507) * pkin(10);
t224 = t359 + t274;
t488 = t321 * t322;
t310 = pkin(2) * t488;
t494 = t318 * t319;
t525 = t322 * pkin(3);
t230 = t525 + t310 + (-t509 * pkin(10) - qJ(3)) * t494;
t527 = pkin(10) * t318;
t379 = -pkin(3) * t321 - t507 * t527;
t253 = (-pkin(2) + t379) * t319;
t326 = sin(qJ(4));
t528 = cos(qJ(4));
t412 = t507 * t528;
t413 = t509 * t528;
t113 = -t326 * t224 + t230 * t413 + t253 * t412;
t487 = t321 * t330;
t256 = (-t318 * t486 + t487) * t320;
t247 = qJD(1) * t256;
t435 = t326 * t509;
t361 = t319 * (-t318 * t435 + t528 * t321);
t398 = t438 * t490;
t542 = -qJD(3) * t361 - t113 * qJD(4) + t528 * t247 + (qJD(1) * t398 + t509 * t243) * t326;
t385 = t413 * t492;
t392 = qJD(4) * t412;
t450 = t326 * t494;
t418 = qJD(4) * t450;
t219 = -qJD(4) * t385 - t322 * t392 + t418;
t434 = t326 * t507;
t414 = t322 * t434;
t416 = t321 * t435;
t227 = (t528 * t318 + t416) * t319 + t414;
t554 = t227 * qJD(4);
t560 = pkin(4) * t554 + t219 * pkin(11) + t378;
t114 = t528 * t224 + (t509 * t230 + t507 * t253) * t326;
t431 = t509 * t322;
t268 = t321 * t438 - t431;
t102 = -pkin(11) * t268 + t114;
t325 = sin(qJ(5));
t329 = cos(qJ(5));
t465 = qJD(5) * t329;
t466 = qJD(5) * t325;
t167 = -t507 * t230 + t509 * t253;
t559 = t322 * t412 + t385;
t226 = t450 - t559;
t95 = t226 * pkin(4) - t227 * pkin(11) + t167;
t545 = -t102 * t466 + t560 * t325 - t542 * t329 + t95 * t465;
t360 = t319 * (t318 * t413 + t321 * t326);
t397 = t319 * t412;
t374 = t397 * t490;
t541 = qJD(1) * t374 + qJD(3) * t360 + qJD(4) * t114 + t243 * t413 - t247 * t326;
t248 = qJD(2) * t361;
t555 = -t248 + t392;
t345 = qJD(2) * t554;
t455 = qJDD(2) * t319;
t442 = t318 * t455;
t380 = -qJDD(2) * t559 + t326 * t442;
t371 = qJDD(5) + t380;
t535 = t345 + t371;
t475 = t559 * qJD(2);
t216 = qJD(2) * t450 - t475;
t373 = qJD(5) + t216;
t526 = pkin(11) * t329;
t558 = pkin(12) * t554 + t545;
t121 = t329 * t219 + t227 * t466 + t268 * t465;
t178 = t227 * t329 - t268 * t325;
t122 = qJD(5) * t178 - t219 * t325;
t557 = t122 * pkin(5) + t121 * pkin(12) + t541;
t218 = t227 * qJD(2);
t143 = pkin(4) * t218 + pkin(11) * t216;
t472 = qJD(1) * t320;
t446 = t327 * t472;
t505 = qJ(3) * t319;
t279 = qJD(2) * t505 + t446;
t445 = t330 * t472;
t289 = qJD(2) * pkin(2) + t445;
t323 = cos(pkin(6));
t471 = qJD(1) * t323;
t447 = t319 * t471;
t185 = t321 * t279 + t289 * t493 + t318 * t447;
t161 = qJD(2) * t359 + t185;
t460 = t322 * t471 + qJD(3);
t190 = (qJD(2) * t379 - t289) * t319 + t460;
t184 = -t318 * t279 + t289 * t488 + t321 * t447;
t372 = -t439 * t527 + t525;
t162 = qJD(2) * t372 + t184;
t396 = t162 * t413;
t71 = -t326 * t161 + t190 * t412 + t396;
t48 = t325 * t143 + t329 * t71;
t556 = pkin(11) * t466 + t48;
t257 = qJDD(2) * t268 - qJDD(4);
t458 = qJDD(1) * t320;
t469 = qJD(3) * t319;
t231 = qJ(3) * t455 + t327 * t458 + (t445 + t469) * qJD(2);
t307 = t330 * t458;
t417 = qJD(2) * t446;
t504 = qJDD(2) * pkin(2);
t259 = t307 - t417 + t504;
t457 = qJDD(1) * t323;
t443 = t319 * t457;
t151 = t321 * t231 + t259 * t493 + t318 * t443;
t125 = qJDD(2) * t359 + t151;
t150 = -t318 * t231 + t259 * t488 + t321 * t443;
t130 = qJDD(2) * t372 + t150;
t453 = t322 * t457 + qJDD(3);
t174 = (qJDD(2) * t379 - t259) * t319 + t453;
t410 = qJD(4) * t434;
t433 = t509 * t162;
t448 = t528 * t161;
t468 = qJD(4) * t326;
t31 = -qJD(4) * t448 - t326 * t125 + t130 * t413 + t174 * t412 - t190 * t410 - t433 * t468;
t27 = pkin(4) * t257 - t31;
t141 = qJD(2) * t418 - t475 * qJD(4) - qJDD(2) * t414 - t416 * t455 - t528 * t442;
t411 = qJD(2) * t438;
t459 = -t321 * t411 + qJD(4);
t376 = -qJD(2) * t431 - t459;
t251 = t329 * t376;
t78 = qJD(5) * t251 + t329 * t141 + t218 * t466 + t325 * t257;
t424 = -t325 * t141 + t329 * t257;
t166 = t329 * t218 - t325 * t376;
t467 = qJD(5) * t166;
t79 = t424 + t467;
t12 = pkin(5) * t79 + pkin(12) * t78 + t27;
t324 = sin(qJ(6));
t328 = cos(qJ(6));
t72 = t448 + (t507 * t190 + t433) * t326;
t62 = -pkin(11) * t376 + t72;
t107 = -t507 * t162 + t509 * t190;
t73 = t216 * pkin(4) - t218 * pkin(11) + t107;
t33 = t325 * t73 + t329 * t62;
t29 = t373 * pkin(12) + t33;
t164 = t218 * t325 + t251;
t61 = pkin(4) * t376 - t71;
t38 = t164 * pkin(5) - t166 * pkin(12) + t61;
t403 = t29 * t324 - t328 * t38;
t367 = -qJD(4) * t396 - t528 * t125 - t130 * t435 + t161 * t468 - t174 * t434 - t190 * t392;
t26 = -pkin(11) * t257 - t367;
t142 = t345 + t380;
t88 = -t507 * t130 + t509 * t174;
t44 = t142 * pkin(4) + t141 * pkin(11) + t88;
t389 = -t329 * t26 - t325 * t44 - t73 * t465 + t62 * t466;
t5 = t535 * pkin(12) - t389;
t1 = -t403 * qJD(6) + t324 * t12 + t328 * t5;
t163 = qJD(6) + t164;
t552 = t403 * t163 + t1;
t523 = t329 * t102 + t325 * t95;
t544 = -qJD(5) * t523 + t542 * t325 + t560 * t329;
t275 = t325 * t434 - t329 * t509;
t394 = t318 * t411;
t477 = -qJD(5) * t275 - t325 * t394 + t555 * t329;
t32 = -t325 * t62 + t329 * t73;
t550 = -t32 * t373 - t389;
t244 = qJD(2) * t360;
t533 = t410 - t244;
t208 = -t255 * t507 + t399;
t549 = pkin(12) * t218 + t556;
t548 = -qJD(6) * t526 - t72 + t373 * (pkin(5) * t325 - pkin(12) * t329);
t46 = pkin(12) * t226 + t523;
t101 = t268 * pkin(4) - t113;
t177 = t227 * t325 + t329 * t268;
t58 = t177 * pkin(5) - t178 * pkin(12) + t101;
t19 = -t324 * t46 + t328 * t58;
t547 = t19 * qJD(6) + t557 * t324 + t558 * t328;
t20 = t324 * t58 + t328 * t46;
t529 = -t20 * qJD(6) - t558 * t324 + t557 * t328;
t14 = t29 * t328 + t324 * t38;
t2 = -qJD(6) * t14 + t328 * t12 - t324 * t5;
t546 = -t14 * t163 - t2;
t524 = -pkin(5) * t554 - t544;
t540 = t164 * t373;
t539 = t166 * t373;
t314 = t318 ^ 2;
t315 = t319 ^ 2;
t317 = t321 ^ 2;
t538 = (t314 + t317) * t315;
t276 = t325 * t509 + t329 * t434;
t476 = qJD(5) * t276 + t555 * t325 + t329 * t394;
t506 = sin(pkin(13));
t427 = t506 * t327;
t508 = cos(pkin(13));
t429 = t508 * t330;
t270 = -t323 * t427 + t429;
t426 = t506 * t330;
t430 = t508 * t327;
t365 = t323 * t426 + t430;
t436 = t320 * t506;
t351 = t319 * t436 - t365 * t322;
t338 = t270 * t318 - t321 * t351;
t352 = -t365 * t319 - t322 * t436;
t537 = t338 * t509 + t352 * t507;
t269 = t323 * t430 + t426;
t366 = -t323 * t429 + t427;
t437 = t320 * t508;
t349 = -t319 * t437 - t366 * t322;
t339 = t269 * t318 - t321 * t349;
t350 = -t366 * t319 + t322 * t437;
t536 = t339 * t509 + t350 * t507;
t485 = t322 * t330;
t391 = -t318 * t327 + t321 * t485;
t491 = t319 * t323;
t357 = t320 * t391 + t321 * t491;
t489 = t320 * t330;
t390 = t319 * t489 - t322 * t323;
t534 = t357 * t509 - t390 * t507;
t333 = qJDD(5) + t142;
t112 = t328 * t166 + t324 * t373;
t464 = qJD(6) * t112;
t37 = -t324 * t78 - t328 * t333 + t464;
t441 = t325 * t26 - t329 * t44;
t8 = -qJD(5) * t33 - t441;
t221 = -t319 * t259 + t453;
t532 = t315 * (t417 + t504) - t221 * t319;
t531 = g(1) * t365 + g(2) * t366 - g(3) * t489;
t363 = t328 * t373;
t463 = qJD(6) * t324;
t36 = -qJD(6) * t363 + t166 * t463 - t324 * t333 + t328 * t78;
t520 = t324 * t36;
t77 = qJDD(6) + t79;
t519 = t324 * t77;
t175 = t269 * t321 + t318 * t349;
t84 = t175 * t326 + t536 * t528;
t518 = t325 * t84;
t176 = t270 * t321 + t318 * t351;
t86 = t176 * t326 + t537 * t528;
t517 = t325 * t86;
t516 = t328 * t37;
t515 = t328 * t77;
t514 = t329 * t84;
t513 = t329 * t86;
t512 = t61 * t216;
t302 = -pkin(5) * t329 - pkin(12) * t325 - pkin(4);
t462 = qJD(6) * t328;
t511 = t302 * t462 + t548 * t324 - t328 * t549;
t510 = -t302 * t463 + t324 * t549 + t548 * t328;
t110 = t166 * t324 - t363;
t503 = t110 * t163;
t502 = t110 * t324;
t501 = t112 * t110;
t500 = t112 * t163;
t225 = t321 * t490 + (t320 * t485 + t491) * t318;
t123 = t225 * t326 - t534 * t528;
t499 = t123 * t325;
t498 = t123 * t329;
t497 = t166 * t164;
t496 = t216 * t218;
t331 = qJD(2) ^ 2;
t484 = t322 * t331;
t483 = t324 * t329;
t482 = t327 * t331;
t481 = t328 * t329;
t480 = qJDD(1) - g(3);
t235 = -t324 * t276 - t328 * t412;
t479 = t235 * qJD(6) + t533 * t324 + t477 * t328;
t370 = -t328 * t276 + t324 * t412;
t478 = t370 * qJD(6) - t477 * t324 + t533 * t328;
t474 = pkin(2) * t489 + t490 * t505;
t470 = qJD(2) * t322;
t456 = qJDD(2) * t315;
t454 = qJDD(2) * t321;
t451 = t315 * t482;
t444 = qJD(5) - t475;
t423 = t373 * t325;
t422 = t163 * t328;
t421 = 0.2e1 * t322 * t455;
t273 = -qJ(3) * t494 + t310;
t420 = qJDD(2) * t273 + t150;
t419 = -qJDD(2) * t274 - t151;
t408 = g(1) * t270 + g(2) * t269;
t133 = -t216 * t483 - t328 * t218;
t407 = -t324 * t465 + t133;
t134 = -t216 * t481 + t218 * t324;
t406 = t328 * t465 - t134;
t404 = -t14 * t324 + t328 * t403;
t56 = -t102 * t325 + t329 * t95;
t124 = t225 * t528 + t534 * t326;
t335 = t357 * t507 + t390 * t509;
t81 = t124 * t329 - t325 * t335;
t50 = t123 * t328 - t324 * t81;
t51 = t123 * t324 + t328 * t81;
t47 = t143 * t329 - t325 * t71;
t127 = t178 * t328 + t226 * t324;
t400 = t184 * t318 - t185 * t321;
t28 = -pkin(5) * t373 - t32;
t388 = -pkin(12) * t77 + t163 * t28;
t128 = t339 * t507 - t350 * t509;
t129 = t338 * t507 - t352 * t509;
t80 = t124 * t325 + t329 * t335;
t85 = t175 * t528 - t536 * t326;
t87 = t176 * t528 - t537 * t326;
t387 = -g(1) * (t129 * t329 - t325 * t87) - g(2) * (t128 * t329 - t325 * t85) + g(3) * t80;
t53 = t128 * t325 + t329 * t85;
t55 = t129 * t325 + t329 * t87;
t386 = -g(1) * t55 - g(2) * t53 - g(3) * t81;
t160 = t256 * t528 + (t509 * t255 + t398) * t326;
t108 = t160 * t325 - t208 * t329;
t193 = -t269 * t488 + t318 * t366;
t194 = -t269 * t493 - t321 * t366;
t104 = t194 * t528 + (t509 * t193 + t269 * t438) * t326;
t157 = -t193 * t507 + t269 * t439;
t65 = t104 * t325 - t157 * t329;
t195 = -t270 * t488 + t318 * t365;
t196 = -t270 * t493 - t321 * t365;
t106 = t196 * t528 + (t509 * t195 + t270 * t438) * t326;
t158 = -t195 * t507 + t270 * t439;
t67 = t106 * t325 - t158 * t329;
t384 = -g(1) * t67 - g(2) * t65 - g(3) * t108;
t383 = g(1) * t86 + g(2) * t84 + g(3) * t123;
t382 = g(1) * t87 + g(2) * t85 + g(3) * t124;
t103 = -t193 * t413 + t194 * t326 - t269 * t397;
t105 = -t195 * t413 + t196 * t326 - t270 * t397;
t159 = -t255 * t413 + t256 * t326 - t374;
t381 = -g(1) * t105 - g(2) * t103 - g(3) * t159;
t6 = -t535 * pkin(5) - t8;
t377 = t387 - t6;
t368 = t256 * pkin(3) + t208 * pkin(10) + t474;
t362 = qJD(5) * t373;
t358 = pkin(12) * qJD(6) * t163 - t377;
t356 = t160 * pkin(4) + t159 * pkin(11) + t368;
t266 = t366 * pkin(2);
t348 = t194 * pkin(3) + pkin(10) * t157 + t269 * t505 - t266;
t267 = t365 * pkin(2);
t347 = t196 * pkin(3) + pkin(10) * t158 + t270 * t505 - t267;
t342 = t104 * pkin(4) + t103 * pkin(11) + t348;
t341 = t106 * pkin(4) + t105 * pkin(11) + t347;
t340 = t216 * t373 + t362;
t332 = g(1) * t352 + g(2) * t350 + g(3) * t390;
t261 = pkin(11) * t481 + t302 * t324;
t260 = -pkin(11) * t483 + t302 * t328;
t246 = qJD(2) * t256;
t245 = qJD(2) * t255;
t242 = -t319 * t289 + t460;
t198 = qJD(2) * t399 - t245 * t507;
t126 = t178 * t324 - t328 * t226;
t116 = t123 * pkin(4);
t109 = t160 * t329 + t208 * t325;
t93 = pkin(5) * t166 + pkin(12) * t164;
t83 = t86 * pkin(4);
t82 = t84 * pkin(4);
t75 = t246 * t528 + (qJD(2) * t398 + t245 * t509) * t326 - t123 * qJD(4);
t74 = -qJD(2) * t374 + t124 * qJD(4) - t245 * t413 + t246 * t326;
t68 = t106 * t329 + t158 * t325;
t66 = t104 * t329 + t157 * t325;
t60 = qJD(6) * t127 - t121 * t324 - t328 * t554;
t59 = t328 * t121 + t178 * t463 - t226 * t462 - t324 * t554;
t45 = -pkin(5) * t226 - t56;
t40 = -pkin(5) * t218 - t47;
t35 = -qJD(5) * t80 + t198 * t325 + t75 * t329;
t34 = qJD(5) * t81 - t198 * t329 + t75 * t325;
t18 = t32 * t328 + t324 * t93;
t17 = -t32 * t324 + t328 * t93;
t10 = qJD(6) * t50 + t324 * t74 + t328 * t35;
t9 = -qJD(6) * t51 - t324 * t35 + t328 * t74;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t480, 0, 0, 0, 0, 0, 0 (qJDD(2) * t330 - t482) * t320 (-qJDD(2) * t327 - t330 * t331) * t320, 0, -g(3) + (t323 ^ 2 + (t327 ^ 2 + t330 ^ 2) * t320 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, t245 * t470 + (-t321 * t451 + (t315 * t487 + t322 * t391) * qJDD(2)) * t320, t320 * t318 * t451 - t246 * t470 + (-t225 * t322 - t390 * t494) * qJDD(2) ((-t245 * t318 + t246 * t321) * qJD(2) + (t225 * t321 - t318 * t357) * qJDD(2)) * t319, t151 * t225 + t184 * t245 + t185 * t246 - g(3) + (t150 * t492 + t221 * t322) * t323 + (t150 * t391 + (qJD(2) * t242 * t327 - t221 * t330) * t319) * t320, 0, 0, 0, 0, 0, 0, t123 * t257 - t142 * t335 + t198 * t216 + t376 * t74, t124 * t257 + t141 * t335 + t198 * t218 + t376 * t75, -t123 * t141 - t124 * t142 - t216 * t75 + t218 * t74, t107 * t198 - t31 * t123 - t124 * t367 - t335 * t88 - t71 * t74 + t72 * t75 - g(3), 0, 0, 0, 0, 0, 0, -t34 * t444 - t80 * t371 + t74 * t164 + t123 * t79 + (-t34 * t450 - t554 * t80) * qJD(2), -t35 * t444 - t81 * t371 + t74 * t166 - t123 * t78 + (-t35 * t450 - t554 * t81) * qJD(2), -t164 * t35 + t166 * t34 - t78 * t80 - t79 * t81, t123 * t27 - t32 * t34 + t33 * t35 - t389 * t81 + t61 * t74 - t8 * t80 - g(3), 0, 0, 0, 0, 0, 0, t110 * t34 + t163 * t9 + t37 * t80 + t50 * t77, -t10 * t163 + t112 * t34 - t36 * t80 - t51 * t77, -t10 * t110 - t112 * t9 + t36 * t50 - t37 * t51, t1 * t51 + t10 * t14 + t2 * t50 + t28 * t34 - t403 * t9 + t6 * t80 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t307 + t531, -t480 * t490 + t408, 0, 0, t314 * t456, 0.2e1 * t315 * t318 * t454, t318 * t421, t317 * t456, t321 * t421, t322 ^ 2 * qJDD(2), -g(1) * t196 - g(2) * t194 - g(3) * t256 + t532 * t321 + ((-t318 * t469 - t243) * qJD(2) + t420) * t322, -g(1) * t195 - g(2) * t193 - g(3) * t255 - t532 * t318 + ((-t321 * t469 + t247) * qJD(2) + t419) * t322, qJD(3) * qJD(2) * t538 + (-g(3) * t490 + (-qJD(2) * t247 - t419) * t321 + (qJD(2) * t243 - t420) * t318 - t408) * t319, t151 * t274 + t150 * t273 - t185 * t247 - t184 * t243 + g(1) * t267 + g(2) * t266 - g(3) * t474 + (-t221 * pkin(2) - t408 * qJ(3) - t400 * qJD(3) - t242 * t446) * t319, -t141 * t227 - t218 * t219, t141 * t226 - t142 * t227 + t216 * t219 - t218 * t554, t268 * t141 + t219 * t376 - t257 * t227, t142 * t226 + t216 * t554, t268 * t142 + t257 * t226 + t376 * t554, t257 * t268, -g(1) * t106 - g(2) * t104 - g(3) * t160 + t107 * t554 - t113 * t257 + t167 * t142 + t216 * t378 + t88 * t226 - t31 * t268 + t541 * t376, -t107 * t219 + t114 * t257 - t167 * t141 + t218 * t378 + t88 * t227 - t268 * t367 - t542 * t376 - t381, -g(1) * t158 - g(2) * t157 - g(3) * t208 + t113 * t141 - t114 * t142 + t542 * t216 + t541 * t218 + t219 * t71 + t226 * t367 - t227 * t31 - t554 * t72, -g(1) * t347 - g(2) * t348 - g(3) * t368 + t378 * t107 + t31 * t113 - t114 * t367 + t88 * t167 - t541 * t71 - t542 * t72, -t121 * t166 - t178 * t78, t121 * t164 - t122 * t166 + t177 * t78 - t178 * t79, -t121 * t444 + t178 * t371 - t78 * t226 + t166 * t554 + (-t121 * t450 + t178 * t554) * qJD(2), t122 * t164 + t177 * t79, -t122 * t444 - t177 * t371 - t79 * t226 - t164 * t554 + (-t122 * t450 - t177 * t554) * qJD(2), t371 * t226 + (t444 + (t226 + t450) * qJD(2)) * t554, -g(1) * t68 - g(2) * t66 - g(3) * t109 + t101 * t79 + t61 * t122 + t541 * t164 + t27 * t177 + t8 * t226 + t32 * t554 + t333 * t56 + t544 * t373, -t101 * t78 - t61 * t121 + t541 * t166 + t27 * t178 + t226 * t389 - t33 * t554 - t545 * t373 - t523 * t535 - t384, t121 * t32 - t122 * t33 - t545 * t164 - t544 * t166 + t177 * t389 - t178 * t8 - t523 * t79 + t56 * t78 + t381, -g(1) * t341 - g(2) * t342 - g(3) * t356 + t27 * t101 + t544 * t32 + t545 * t33 - t389 * t523 + t541 * t61 + t8 * t56, -t112 * t59 - t127 * t36, t110 * t59 - t112 * t60 + t126 * t36 - t127 * t37, t112 * t122 + t127 * t77 - t163 * t59 - t177 * t36, t110 * t60 + t126 * t37, -t110 * t122 - t126 * t77 - t163 * t60 - t177 * t37, t122 * t163 + t177 * t77, t19 * t77 + t2 * t177 - t403 * t122 + t45 * t37 + t6 * t126 + t28 * t60 - g(1) * (t105 * t324 + t328 * t68) - g(2) * (t103 * t324 + t328 * t66) - g(3) * (t109 * t328 + t159 * t324) + t529 * t163 + t524 * t110, -t20 * t77 - t1 * t177 - t14 * t122 - t45 * t36 + t6 * t127 - t28 * t59 - g(1) * (t105 * t328 - t324 * t68) - g(2) * (t103 * t328 - t324 * t66) - g(3) * (-t109 * t324 + t159 * t328) - t547 * t163 + t524 * t112, -t1 * t126 - t110 * t547 - t529 * t112 - t127 * t2 - t14 * t60 + t19 * t36 - t20 * t37 - t403 * t59 + t384, t1 * t20 + t2 * t19 + t6 * t45 - g(1) * (t68 * pkin(5) + t67 * pkin(12) + t341) - g(2) * (t66 * pkin(5) + t65 * pkin(12) + t342) - g(3) * (t109 * pkin(5) + t108 * pkin(12) + t356) + t524 * t28 + t547 * t14 - t529 * t403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t318 * t484 - t454) * t319 (qJDD(2) * t318 + t321 * t484) * t319, -t331 * t538 (-g(3) * t323 + (-g(1) * t506 + g(2) * t508) * t320) * t322 + (qJD(2) * t400 - t259 - t531) * t319 + t453, 0, 0, 0, 0, 0, 0, t509 * t142 - t216 * t394 - t257 * t412 + t376 * t533, -t509 * t141 - t218 * t394 + t257 * t434 + t555 * t376, t141 * t412 - t142 * t434 + t248 * t216 - t244 * t218 + (-t216 * t412 + t218 * t434) * qJD(4), -t367 * t434 + t31 * t412 + t88 * t509 - t72 * t248 + t71 * t244 - t107 * t394 + (t72 * t412 - t71 * t434) * qJD(4) + t332, 0, 0, 0, 0, 0, 0, -t275 * t371 - t79 * t412 - t244 * t164 + (t164 * t434 - t218 * t275) * qJD(4) - t476 * t373, -t276 * t371 + t78 * t412 - t244 * t166 + (t166 * t434 - t218 * t276) * qJD(4) - t477 * t373, -t164 * t477 + t166 * t476 - t275 * t78 - t276 * t79, -t27 * t412 - t8 * t275 - t276 * t389 - t476 * t32 + t477 * t33 + t533 * t61 + t332, 0, 0, 0, 0, 0, 0, t110 * t476 + t163 * t478 + t235 * t77 + t275 * t37, t112 * t476 - t163 * t479 - t275 * t36 + t370 * t77, -t110 * t479 - t112 * t478 + t235 * t36 + t37 * t370, -t1 * t370 + t14 * t479 + t2 * t235 + t6 * t275 + t28 * t476 - t403 * t478 + t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, -t216 ^ 2 + t218 ^ 2, -t216 * t376 - t141, -t496, t459 * t218 + (t218 * t431 - t554) * qJD(2) - t380, -t257, -t107 * t218 - t376 * t72 + t31 + t383, t107 * t216 - t376 * t71 + t367 + t382, 0, 0, -t325 * t78 + t329 * t539 (-t78 - t540) * t329 + (-t79 - t539) * t325, -t166 * t218 + t535 * t325 + t329 * t340, t164 * t423 - t329 * t79, t164 * t218 - t325 * t340 + t535 * t329, -t373 * t218, -pkin(4) * t79 + g(1) * t513 + g(2) * t514 + g(3) * t498 - t72 * t164 - t32 * t218 - t27 * t329 - t362 * t526 - t373 * t47 + t466 * t61 + (-pkin(11) * t333 + t512) * t325, pkin(4) * t78 - g(1) * t517 - g(2) * t518 - g(3) * t499 - t72 * t166 + t33 * t218 + t27 * t325 + t329 * t512 + t373 * t556 + t465 * t61 - t526 * t535, t164 * t48 + t166 * t47 + ((-t79 + t467) * pkin(11) + t550) * t329 + (-t8 - t373 * t33 + (qJD(5) * t164 - t78) * pkin(11)) * t325 - t382, -t27 * pkin(4) + g(1) * t83 + g(2) * t82 + g(3) * t116 - t32 * t47 - t33 * t48 - t61 * t72 + (-t8 * t325 - t389 * t329 + (-t32 * t329 - t325 * t33) * qJD(5) - t382) * pkin(11), -t325 * t328 * t36 + (-t325 * t463 + t406) * t112, t110 * t134 + t112 * t133 + (-t110 * t328 - t112 * t324) * t465 + (t520 - t516 + (-t112 * t328 + t502) * qJD(6)) * t325, t329 * t36 + t406 * t163 + (t112 * t373 - t163 * t463 + t515) * t325, t324 * t325 * t37 + (t325 * t462 - t407) * t110, t329 * t37 + t407 * t163 + (-t110 * t373 - t163 * t462 - t519) * t325, t163 * t423 - t329 * t77, -t40 * t110 - t28 * t133 + t260 * t77 + t510 * t163 - t382 * t324 + (-t2 + (pkin(11) * t110 + t28 * t324) * qJD(5) + t383 * t328) * t329 + (pkin(11) * t37 + t28 * t462 + t6 * t324 - t373 * t403) * t325, -t40 * t112 - t28 * t134 - t261 * t77 - t511 * t163 - t382 * t328 + (t1 + (pkin(11) * t112 + t28 * t328) * qJD(5) - t383 * t324) * t329 + (-pkin(11) * t36 - t14 * t373 - t28 * t463 + t6 * t328) * t325, -t403 * t134 + t133 * t14 + t260 * t36 - t261 * t37 - t510 * t112 - t511 * t110 + t404 * t465 + (-t1 * t324 - t2 * t328 + (-t14 * t328 - t324 * t403) * qJD(6) + t383) * t325, t1 * t261 + t2 * t260 - t28 * t40 - g(1) * (-pkin(5) * t513 - pkin(12) * t517 - t83) - g(2) * (-pkin(5) * t514 - pkin(12) * t518 - t82) - g(3) * (-pkin(5) * t498 - pkin(12) * t499 - t116) + t511 * t14 - t510 * t403 + (t28 * t465 + t325 * t6 - t382) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t497, -t164 ^ 2 + t166 ^ 2, -t78 + t540, -t497, t166 * t216 - t424, t333, -t61 * t166 + t216 * t33 + t387 - t441, t61 * t164 - t386 - t550, 0, 0, t112 * t422 - t520 (-t36 - t503) * t328 + (-t37 - t500) * t324, -t112 * t166 + t163 * t422 + t519, t163 * t502 - t516, -t163 ^ 2 * t324 + t110 * t166 + t515, -t163 * t166, -pkin(5) * t37 - t110 * t33 - t163 * t17 + t166 * t403 + t324 * t388 - t328 * t358, pkin(5) * t36 - t112 * t33 + t14 * t166 + t163 * t18 + t324 * t358 + t328 * t388, t110 * t18 + t112 * t17 + ((-t37 + t464) * pkin(12) + t552) * t328 + ((qJD(6) * t110 - t36) * pkin(12) + t546) * t324 + t386, t403 * t17 - t14 * t18 - t28 * t33 + t377 * pkin(5) + (qJD(6) * t404 + t1 * t328 - t2 * t324 + t386) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, -t110 ^ 2 + t112 ^ 2, -t36 + t503, -t501, t500 - t37, t77, -t28 * t112 - g(1) * (-t324 * t55 + t328 * t86) - g(2) * (-t324 * t53 + t328 * t84) - g(3) * t50 - t546, t28 * t110 - g(1) * (-t324 * t86 - t328 * t55) - g(2) * (-t324 * t84 - t328 * t53) + g(3) * t51 - t552, 0, 0;];
tau_reg  = t3;
