% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6PRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% tau_reg [6x29]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRPRRR7_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR7_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR7_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRR7_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRR7_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRPRRR7_invdynJ_fixb_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:55:59
% EndTime: 2019-03-08 20:56:23
% DurationCPUTime: 11.58s
% Computational Cost: add. (11482->617), mult. (35349->929), div. (0->0), fcn. (32779->18), ass. (0->311)
t254 = sin(pkin(14));
t257 = sin(pkin(6));
t258 = cos(pkin(14));
t269 = cos(qJ(2));
t261 = cos(pkin(7));
t266 = sin(qJ(2));
t392 = t261 * t266;
t204 = (-t254 * t269 - t258 * t392) * t257;
t193 = qJD(1) * t204;
t256 = sin(pkin(7));
t382 = qJD(3) * t256;
t447 = t254 * t382 + t193;
t255 = sin(pkin(8));
t260 = cos(pkin(8));
t386 = qJD(1) * t257;
t359 = t266 * t386;
t333 = t256 * t359;
t309 = t447 * t255 - t260 * t333;
t429 = cos(qJ(4));
t361 = t429 * t258;
t334 = t260 * t361;
t364 = t255 * t429;
t336 = t261 * t364;
t446 = t256 * t334 + t336;
t205 = (-t254 * t392 + t258 * t269) * t257;
t197 = qJD(1) * t205;
t265 = sin(qJ(4));
t404 = t256 * t258;
t408 = t254 * t261;
t219 = pkin(2) * t408 + qJ(3) * t404;
t398 = t258 * t260;
t291 = (t255 * t261 + t256 * t398) * pkin(10);
t178 = t291 + t219;
t397 = t258 * t261;
t249 = pkin(2) * t397;
t409 = t254 * t256;
t427 = t261 * pkin(3);
t183 = t427 + t249 + (-pkin(10) * t260 - qJ(3)) * t409;
t428 = pkin(10) * t254;
t311 = -pkin(3) * t258 - t255 * t428;
t202 = (-pkin(2) + t311) * t256;
t363 = t260 * t429;
t277 = -t265 * t178 + t183 * t363 + t202 * t364;
t393 = t260 * t265;
t282 = t256 * (-t254 * t393 + t361);
t445 = -qJD(3) * t282 - qJD(4) * t277 + t429 * t197 + (t193 * t260 + t255 * t333) * t265;
t407 = t254 * t265;
t173 = (t336 + (t334 - t407) * t256) * qJD(4);
t362 = t429 * t254;
t405 = t255 * t265;
t367 = t261 * t405;
t182 = t256 * (t258 * t393 + t362) + t367;
t174 = t182 * qJD(4);
t444 = -pkin(4) * t174 + pkin(11) * t173 - t309;
t198 = qJD(2) * t282;
t352 = qJD(4) * t429;
t327 = t255 * t352;
t443 = t198 - t327;
t384 = qJD(2) * t256;
t357 = t254 * t384;
t441 = t446 * qJD(2) - t265 * t357;
t167 = qJD(5) - t441;
t172 = t182 * qJD(2);
t268 = cos(qJ(5));
t356 = t255 * t384;
t373 = -t258 * t356 + qJD(4);
t383 = qJD(2) * t261;
t308 = t260 * t383 + t373;
t201 = t268 * t308;
t264 = sin(qJ(5));
t127 = t172 * t264 - t201;
t126 = qJD(6) + t127;
t377 = qJD(5) * t268;
t379 = qJD(5) * t264;
t130 = -t183 * t255 + t260 * t202;
t181 = t256 * t407 - t446;
t69 = pkin(4) * t181 - pkin(11) * t182 + t130;
t394 = t260 * t261;
t212 = t255 * t404 - t394;
t166 = t429 * t178;
t365 = t183 * t393 + t202 * t405 + t166;
t74 = -pkin(11) * t212 + t365;
t440 = t444 * t264 + t268 * t445 - t69 * t377 + t379 * t74;
t439 = t264 * t445 - t444 * t268;
t281 = t256 * (t258 * t265 + t260 * t362);
t337 = t256 * t364;
t400 = t257 * t266;
t307 = t337 * t400;
t416 = qJD(3) * t281 + (t166 + (t183 * t260 + t202 * t255) * t265) * qJD(4) + qJD(1) * t307 + t193 * t363 - t265 * t197;
t252 = t256 ^ 2;
t438 = t252 * (t254 ^ 2 + t258 ^ 2);
t220 = -t260 * t268 + t264 * t405;
t332 = t254 * t356;
t437 = qJD(5) * t220 + t264 * t332 + t268 * t443;
t221 = t260 * t264 + t268 * t405;
t436 = qJD(5) * t221 - t264 * t443 + t268 * t332;
t194 = qJD(2) * t281;
t381 = qJD(4) * t265;
t353 = t255 * t381;
t435 = t194 - t353;
t262 = cos(pkin(6));
t415 = sin(pkin(13));
t346 = t415 * t266;
t259 = cos(pkin(13));
t395 = t259 * t269;
t217 = -t262 * t346 + t395;
t345 = t415 * t269;
t396 = t259 * t266;
t216 = -t262 * t345 - t396;
t347 = t257 * t415;
t288 = t216 * t261 + t256 * t347;
t273 = t217 * t254 - t258 * t288;
t289 = -t216 * t256 + t261 * t347;
t434 = -t289 * t255 + t273 * t260;
t215 = t262 * t396 + t345;
t214 = t262 * t395 - t346;
t305 = -t256 * t257 * t259 + t214 * t261;
t276 = t215 * t254 - t258 * t305;
t401 = t257 * t261;
t306 = -t214 * t256 - t259 * t401;
t433 = -t306 * t255 + t276 * t260;
t370 = qJDD(2) * t256;
t350 = t265 * t370;
t297 = -qJDD(2) * t446 + t254 * t350;
t110 = qJD(2) * t174 + t297;
t106 = qJDD(5) + t110;
t263 = sin(qJ(6));
t267 = cos(qJ(6));
t109 = t441 * qJD(4) + qJDD(2) * t367 + t350 * t398 + t362 * t370;
t206 = qJDD(2) * t212 - qJDD(4);
t54 = qJD(5) * t201 + t268 * t109 - t172 * t379 - t264 * t206;
t129 = t268 * t172 + t264 * t308;
t83 = t129 * t267 + t167 * t263;
t21 = qJD(6) * t83 - t267 * t106 + t263 * t54;
t391 = t261 * t269;
t402 = t256 * t262;
t179 = t258 * t402 + (-t254 * t266 + t258 * t391) * t257;
t399 = t257 * t269;
t213 = -t256 * t399 + t261 * t262;
t137 = -t179 * t255 + t213 * t260;
t180 = t258 * t400 + (t257 * t391 + t402) * t254;
t91 = t180 * t429 + (t179 * t260 + t213 * t255) * t265;
t314 = t137 * t268 - t264 * t91;
t139 = t215 * t258 + t254 * t305;
t59 = t139 * t429 - t265 * t433;
t140 = t217 * t258 + t254 * t288;
t61 = t140 * t429 - t265 * t434;
t95 = t255 * t276 + t260 * t306;
t96 = t255 * t273 + t260 * t289;
t301 = g(1) * (-t264 * t61 + t268 * t96) + g(2) * (-t264 * t59 + t268 * t95) + g(3) * t314;
t223 = qJ(3) * t384 + t359;
t358 = t269 * t386;
t230 = qJD(2) * pkin(2) + t358;
t385 = qJD(1) * t262;
t360 = t256 * t385;
t147 = -t254 * t223 + t230 * t397 + t258 * t360;
t403 = t256 * t260;
t298 = -t403 * t428 + t427;
t125 = qJD(2) * t298 + t147;
t117 = t125 * t393;
t148 = t258 * t223 + t230 * t408 + t254 * t360;
t124 = qJD(2) * t291 + t148;
t374 = t261 * t385 + qJD(3);
t149 = (qJD(2) * t311 - t230) * t256 + t374;
t48 = t124 * t429 + t149 * t405 + t117;
t42 = pkin(11) * t308 + t48;
t79 = -t125 * t255 + t260 * t149;
t49 = -pkin(4) * t441 - pkin(11) * t172 + t79;
t17 = t264 * t49 + t268 * t42;
t372 = qJDD(1) * t257;
t246 = t269 * t372;
t355 = qJD(2) * t400;
t326 = qJD(1) * t355;
t414 = qJDD(2) * pkin(2);
t207 = t246 - t326 + t414;
t371 = qJDD(1) * t262;
t369 = t261 * t371 + qJDD(3);
t138 = (qJDD(2) * t311 - t207) * t256 + t369;
t335 = t125 * t363;
t184 = qJ(3) * t370 + t266 * t372 + (t358 + t382) * qJD(2);
t351 = t256 * t371;
t113 = t258 * t184 + t207 * t408 + t254 * t351;
t92 = qJDD(2) * t291 + t113;
t112 = -t254 * t184 + t207 * t397 + t258 * t351;
t97 = qJDD(2) * t298 + t112;
t284 = -qJD(4) * t335 + t124 * t381 - t138 * t405 - t149 * t327 - t97 * t393 - t429 * t92;
t12 = -pkin(11) * t206 - t284;
t62 = t260 * t138 - t255 * t97;
t28 = pkin(4) * t110 - pkin(11) * t109 + t62;
t348 = t264 * t12 - t268 * t28;
t4 = -t106 * pkin(5) + qJD(5) * t17 + t348;
t432 = t126 * (pkin(5) * t129 + t126 * pkin(12)) + t301 + t4;
t240 = -pkin(5) * t268 - pkin(12) * t264 - pkin(4);
t55 = qJD(5) * t129 + t264 * t109 + t268 * t206;
t53 = qJDD(6) + t55;
t431 = t126 * (-t48 + t167 * (pkin(5) * t264 - pkin(12) * t268)) + t240 * t53;
t175 = -t256 * t207 + t369;
t430 = t252 * (t326 + t414) - t175 * t256;
t304 = t268 * t12 + t264 * t28 + t49 * t377 - t379 * t42;
t3 = pkin(12) * t106 + t304;
t15 = pkin(12) * t167 + t17;
t47 = -t265 * t124 + t149 * t364 + t335;
t41 = -pkin(4) * t308 - t47;
t22 = t127 * pkin(5) - t129 * pkin(12) + t41;
t318 = t15 * t263 - t22 * t267;
t310 = -qJD(4) * t117 - t124 * t352 + t138 * t364 - t149 * t353 - t265 * t92 + t97 * t363;
t13 = pkin(4) * t206 - t310;
t6 = pkin(5) * t55 - pkin(12) * t54 + t13;
t1 = -t318 * qJD(6) + t263 * t6 + t267 * t3;
t315 = t264 * t69 + t268 * t74;
t426 = -t174 * pkin(5) + qJD(5) * t315 - t439;
t425 = pkin(11) * qJD(5);
t81 = t129 * t263 - t267 * t167;
t424 = t126 * t81;
t375 = qJD(6) * t267;
t376 = qJD(6) * t263;
t20 = t263 * t106 - t129 * t376 + t167 * t375 + t267 * t54;
t423 = t20 * t263;
t421 = t263 * t53;
t420 = t267 * t53;
t419 = t83 * t126;
t111 = pkin(4) * t172 - pkin(11) * t441;
t417 = t264 * t111 + t268 * t47;
t413 = t127 * t167;
t412 = t129 * t167;
t411 = t441 * t268;
t406 = t255 * t256;
t270 = qJD(2) ^ 2;
t390 = t261 * t270;
t389 = t266 * t270;
t388 = qJDD(1) - g(3);
t380 = qJD(5) * t263;
t378 = qJD(5) * t267;
t366 = t256 * t400;
t342 = t167 * t268;
t341 = t126 * t267;
t218 = -qJ(3) * t409 + t249;
t340 = qJDD(2) * t218 + t112;
t339 = -qJDD(2) * t219 - t113;
t338 = t252 * t257 * t389;
t330 = t256 * t355;
t141 = t182 * t264 + t268 * t212;
t142 = t182 * t268 - t212 * t264;
t73 = t212 * pkin(4) - t277;
t38 = t141 * pkin(5) - t142 * pkin(12) + t73;
t328 = -pkin(12) * t174 - qJD(6) * t38 + t440;
t30 = pkin(12) * t181 + t315;
t88 = -qJD(5) * t141 + t268 * t173;
t89 = qJD(5) * t142 + t264 * t173;
t325 = -t89 * pkin(5) + t88 * pkin(12) + qJD(6) * t30 - t416;
t323 = g(1) * t216 + g(2) * t214;
t322 = g(1) * t217 + g(2) * t215;
t101 = t172 * t263 + t267 * t411;
t319 = t267 * t377 - t101;
t8 = t15 * t267 + t22 * t263;
t275 = t179 * t363 - t180 * t265 + t213 * t364;
t57 = t137 * t264 + t268 * t91;
t33 = -t263 * t275 + t267 * t57;
t32 = -t263 * t57 - t267 * t275;
t16 = -t264 * t42 + t268 * t49;
t316 = -t264 * t74 + t268 * t69;
t94 = t142 * t267 + t181 * t263;
t93 = t142 * t263 - t267 * t181;
t312 = t147 * t254 - t148 * t258;
t302 = -pkin(11) * t106 + t167 * t41;
t58 = t139 * t265 + t429 * t433;
t60 = t140 * t265 + t429 * t434;
t300 = g(1) * t60 + g(2) * t58 - g(3) * t275;
t299 = -g(1) * t61 - g(2) * t59 - g(3) * t91;
t295 = -t263 * t221 - t267 * t364;
t293 = -t267 * t221 + t263 * t364;
t292 = -t13 + t300;
t286 = -g(3) * t399 - t323;
t285 = -g(3) * t400 - t322;
t14 = -pkin(5) * t167 - t16;
t283 = -pkin(12) * t53 + (t14 + t16) * t126;
t278 = pkin(11) * qJD(6) * t126 - t300;
t2 = -qJD(6) * t8 - t263 * t3 + t267 * t6;
t274 = (pkin(12) * t172 - qJD(6) * t240 + t417) * t126 + t299;
t196 = qJD(2) * t205;
t195 = qJD(2) * t204;
t192 = -t256 * t230 + t374;
t162 = -t204 * t255 + t260 * t366;
t155 = -t195 * t255 + t260 * t330;
t153 = t216 * t258 - t217 * t408;
t152 = -t216 * t254 - t217 * t397;
t151 = t214 * t258 - t215 * t408;
t150 = -t214 * t254 - t215 * t397;
t123 = t205 * t429 + (t204 * t260 + t255 * t366) * t265;
t122 = -t204 * t363 + t205 * t265 - t307;
t121 = -t152 * t255 + t217 * t403;
t120 = -t150 * t255 + t215 * t403;
t100 = -t267 * t172 + t263 * t411;
t80 = t123 * t268 + t162 * t264;
t78 = t153 * t429 + (t152 * t260 + t217 * t406) * t265;
t77 = -t152 * t363 + t153 * t265 - t217 * t337;
t76 = t151 * t429 + (t150 * t260 + t215 * t406) * t265;
t75 = -t150 * t363 + t151 * t265 - t215 * t337;
t51 = t196 * t429 + (t195 * t260 + t255 * t330) * t265 + t275 * qJD(4);
t50 = -qJD(2) * t307 + qJD(4) * t91 - t195 * t363 + t196 * t265;
t44 = t121 * t264 + t268 * t78;
t43 = t120 * t264 + t268 * t76;
t40 = qJD(6) * t94 - t267 * t174 + t263 * t88;
t39 = -qJD(6) * t93 + t263 * t174 + t267 * t88;
t37 = t264 * t96 + t268 * t61;
t35 = t264 * t95 + t268 * t59;
t29 = -pkin(5) * t181 - t316;
t24 = -pkin(5) * t172 - t111 * t268 + t264 * t47;
t19 = qJD(5) * t314 + t155 * t264 + t51 * t268;
t18 = qJD(5) * t57 - t155 * t268 + t51 * t264;
t5 = [t388, 0 (qJDD(2) * t269 - t389) * t257 (-qJDD(2) * t266 - t269 * t270) * t257, -t258 * t338 + t195 * t383 + (t179 * t261 - t213 * t404) * qJDD(2), t254 * t338 - t196 * t383 + (-t180 * t261 + t213 * t409) * qJDD(2) ((-t179 * t254 + t180 * t258) * qJDD(2) + (-t195 * t254 + t196 * t258) * qJD(2)) * t256, t112 * t179 + t113 * t180 + t147 * t195 + t148 * t196 + t175 * t213 + t192 * t330 - g(3), 0, 0, 0, 0, 0, t137 * t110 - t155 * t441 - t206 * t275 - t308 * t50, t137 * t109 + t155 * t172 + t91 * t206 - t308 * t51, 0, 0, 0, 0, 0, t106 * t314 + t127 * t50 - t167 * t18 - t275 * t55, -t106 * t57 + t129 * t50 - t167 * t19 - t275 * t54, 0, 0, 0, 0, 0 (-qJD(6) * t33 - t19 * t263 + t50 * t267) * t126 + t32 * t53 + t18 * t81 - t314 * t21 -(qJD(6) * t32 + t19 * t267 + t50 * t263) * t126 - t33 * t53 + t18 * t83 - t314 * t20; 0, qJDD(2), t246 + t286, -t388 * t400 + t322, -g(1) * t153 - g(2) * t151 - g(3) * t205 + t430 * t258 + (-t447 * qJD(2) + t340) * t261, -g(1) * t152 - g(2) * t150 - g(3) * t204 - t430 * t254 + ((-t258 * t382 + t197) * qJD(2) + t339) * t261, qJD(3) * qJD(2) * t438 + ((-qJD(2) * t197 - t339) * t258 + (qJD(2) * t193 - t340) * t254 + t285) * t256, t112 * t218 + t113 * t219 - t147 * t193 - t148 * t197 + t286 * pkin(2) + (-t175 * pkin(2) + qJ(3) * t285 - qJD(3) * t312 - t192 * t359) * t256, t109 * t182 + t172 * t173, -t109 * t181 - t110 * t182 - t172 * t174 + t173 * t441, -t212 * t109 + t173 * t308 - t206 * t182, t212 * t110 - t174 * t308 + t206 * t181, t206 * t212, -g(1) * t78 - g(2) * t76 - g(3) * t123 + t130 * t110 + t79 * t174 + t62 * t181 - t206 * t277 - t212 * t310 - t308 * t416 - t309 * t441, g(1) * t77 + g(2) * t75 + g(3) * t122 + t130 * t109 + t172 * t309 + t79 * t173 + t62 * t182 + t206 * t365 - t212 * t284 + t308 * t445, t129 * t88 + t142 * t54, -t127 * t88 - t129 * t89 - t141 * t54 - t142 * t55, t106 * t142 + t129 * t174 + t167 * t88 + t181 * t54, -t106 * t141 - t127 * t174 - t167 * t89 - t181 * t55, t106 * t181 + t167 * t174, t316 * t106 - t348 * t181 + t16 * t174 + t73 * t55 + t13 * t141 + t41 * t89 - g(1) * t44 - g(2) * t43 - g(3) * t80 + t439 * t167 + t416 * t127 + (-t167 * t315 - t17 * t181) * qJD(5), -t315 * t106 - t304 * t181 - t17 * t174 + t73 * t54 + t13 * t142 + t41 * t88 - g(1) * (t121 * t268 - t264 * t78) - g(2) * (t120 * t268 - t264 * t76) - g(3) * (-t123 * t264 + t162 * t268) + t440 * t167 + t416 * t129, t20 * t94 + t39 * t83, -t20 * t93 - t21 * t94 - t39 * t81 - t40 * t83, t126 * t39 + t141 * t20 + t53 * t94 + t83 * t89, -t126 * t40 - t141 * t21 - t53 * t93 - t81 * t89, t126 * t89 + t141 * t53 (-t263 * t30 + t267 * t38) * t53 + t2 * t141 - t318 * t89 + t29 * t21 + t4 * t93 + t14 * t40 - g(1) * (t263 * t77 + t267 * t44) - g(2) * (t263 * t75 + t267 * t43) - g(3) * (t122 * t263 + t267 * t80) + t426 * t81 + (t263 * t328 - t267 * t325) * t126 -(t263 * t38 + t267 * t30) * t53 - t1 * t141 - t8 * t89 + t29 * t20 + t4 * t94 + t14 * t39 - g(1) * (-t263 * t44 + t267 * t77) - g(2) * (-t263 * t43 + t267 * t75) - g(3) * (t122 * t267 - t263 * t80) + t426 * t83 + (t263 * t325 + t267 * t328) * t126; 0, 0, 0, 0 (-qJDD(2) * t258 + t254 * t390) * t256 (qJDD(2) * t254 + t258 * t390) * t256, -t270 * t438, -g(3) * t213 + (-g(1) * t415 + g(2) * t259) * t401 + (qJD(2) * t312 - t207 + t323) * t256 + t369, 0, 0, 0, 0, 0, t260 * t110 + t194 * t308 + (-t206 * t429 - t308 * t381 + t357 * t441) * t255, t260 * t109 + t198 * t308 + (-t172 * t357 + t265 * t206 - t308 * t352) * t255, 0, 0, 0, 0, 0, -t220 * t106 - t127 * t435 - t167 * t436 - t55 * t364, -t221 * t106 - t129 * t435 + t167 * t437 - t54 * t364, 0, 0, 0, 0, 0, t220 * t21 + t295 * t53 + t436 * t81 + (qJD(6) * t293 + t263 * t437 - t267 * t435) * t126, t220 * t20 + t293 * t53 + t436 * t83 + (-qJD(6) * t295 + t263 * t435 + t267 * t437) * t126; 0, 0, 0, 0, 0, 0, 0, 0, -t441 * t172, t172 ^ 2 - t441 ^ 2, -t308 * t441 + t109, t373 * t172 + (t172 * t394 - t174) * qJD(2) - t297, -t206, -t79 * t172 + t308 * t48 + t300 + t310, t308 * t47 - t441 * t79 + t284 - t299, t129 * t342 + t54 * t264 (t54 - t413) * t268 + (-t55 - t412) * t264, t264 * t106 - t129 * t172 + t167 * t342, -t167 ^ 2 * t264 + t268 * t106 + t127 * t172, -t167 * t172, -pkin(4) * t55 - t48 * t127 - t16 * t172 + (t47 * t167 + t302) * t264 + ((-t111 - t425) * t167 + t292) * t268, -pkin(4) * t54 + t417 * t167 + t17 * t172 - t48 * t129 + t302 * t268 + (t167 * t425 - t292) * t264, t20 * t267 * t264 + (-t264 * t376 + t319) * t83, t83 * t100 + t101 * t81 + (-t263 * t83 - t267 * t81) * t377 + (-t423 - t21 * t267 + (t263 * t81 - t267 * t83) * qJD(6)) * t264, -t20 * t268 + t319 * t126 + (-t126 * t376 + t167 * t83 + t420) * t264, t21 * t268 + (-t263 * t377 + t100) * t126 + (-t126 * t375 - t167 * t81 - t421) * t264, t126 * t167 * t264 - t53 * t268, -t14 * t100 - t24 * t81 + t431 * t267 + t274 * t263 + (t14 * t380 - t2 + (qJD(5) * t81 - t421) * pkin(11) - t278 * t267) * t268 + (t14 * t375 + t4 * t263 - t167 * t318 + (t126 * t380 + t21) * pkin(11)) * t264, -t14 * t101 - t24 * t83 - t431 * t263 + t274 * t267 + (t14 * t378 + t1 + (qJD(5) * t83 - t420) * pkin(11) + t278 * t263) * t268 + (-t14 * t376 + t4 * t267 - t167 * t8 + (t126 * t378 + t20) * pkin(11)) * t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129 * t127, -t127 ^ 2 + t129 ^ 2, t54 + t413, t412 - t55, t106, -t41 * t129 - t301 - t348 + (-qJD(5) + t167) * t17, g(1) * t37 + g(2) * t35 + g(3) * t57 + t127 * t41 + t16 * t167 - t304, t341 * t83 + t423 (t20 - t424) * t267 + (-t21 - t419) * t263, t126 * t341 - t83 * t129 + t421, -t126 ^ 2 * t263 + t81 * t129 + t420, -t126 * t129, -pkin(5) * t21 + t129 * t318 - t17 * t81 + t283 * t263 - t267 * t432, -pkin(5) * t20 + t8 * t129 - t17 * t83 + t263 * t432 + t283 * t267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83 * t81, -t81 ^ 2 + t83 ^ 2, t20 + t424, -t21 + t419, t53, t8 * t126 - t14 * t83 - g(1) * (-t263 * t37 + t267 * t60) - g(2) * (-t263 * t35 + t267 * t58) - g(3) * t32 + t2, -t318 * t126 + t14 * t81 - g(1) * (-t263 * t60 - t267 * t37) - g(2) * (-t263 * t58 - t267 * t35) + g(3) * t33 - t1;];
tau_reg  = t5;
