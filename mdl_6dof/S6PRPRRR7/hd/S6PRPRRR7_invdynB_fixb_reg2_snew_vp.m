% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 02:02
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRPRRR7_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR7_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR7_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRR7_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRR7_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRPRRR7_invdynB_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 01:56:48
% EndTime: 2019-05-05 01:59:03
% DurationCPUTime: 141.24s
% Computational Cost: add. (1562611->1277), mult. (4442925->2202), div. (0->0), fcn. (3832659->18), ass. (0->956)
t1237 = sin(qJ(6));
t1227 = sin(pkin(14));
t1230 = sin(pkin(7));
t1232 = cos(pkin(14));
t1235 = cos(pkin(7));
t1243 = cos(qJ(4));
t1234 = cos(pkin(8));
t1239 = sin(qJ(4));
t1469 = t1234 * t1239;
t1229 = sin(pkin(8));
t1472 = t1229 * t1239;
t1262 = t1235 * t1472 + (t1227 * t1243 + t1232 * t1469) * t1230;
t1173 = t1262 * qJD(2);
t1470 = t1230 * t1232;
t1456 = qJD(2) * t1470;
t1498 = qJD(2) * t1235;
t1189 = -t1229 * t1456 + t1234 * t1498 + qJD(4);
t1238 = sin(qJ(5));
t1242 = cos(qJ(5));
t1150 = t1173 * t1242 + t1189 * t1238;
t1450 = t1234 * t1470;
t1471 = t1229 * t1243;
t1474 = t1227 * t1239;
t1171 = -t1471 * t1498 + (t1230 * t1474 - t1243 * t1450) * qJD(2);
t1166 = qJD(5) + t1171;
t1241 = cos(qJ(6));
t1098 = t1150 * t1237 - t1241 * t1166;
t1100 = t1150 * t1241 + t1166 * t1237;
t1036 = t1100 * t1098;
t1261 = t1262 * qJDD(2);
t1128 = -qJD(4) * t1171 + t1261;
t1461 = qJDD(2) * t1232;
t1439 = t1230 * t1461;
t1460 = qJDD(2) * t1235;
t1188 = -t1229 * t1439 + t1234 * t1460 + qJDD(4);
t1446 = t1150 * qJD(5) + t1238 * t1128 - t1242 * t1188;
t1430 = qJDD(6) + t1446;
t1521 = -t1036 + t1430;
t1537 = t1237 * t1521;
t1148 = t1173 * t1238 - t1242 * t1189;
t1086 = t1150 * t1148;
t1463 = qJDD(2) * t1230;
t1442 = t1227 * t1463;
t1532 = t1229 * t1460 + t1234 * t1439;
t1310 = t1239 * t1442 - t1243 * t1532;
t1266 = qJD(4) * t1173 + t1310;
t1122 = qJDD(5) + t1266;
t1520 = -t1086 + t1122;
t1536 = t1238 * t1520;
t1535 = t1241 * t1521;
t1534 = t1242 * t1520;
t1240 = sin(qJ(2));
t1244 = cos(qJ(2));
t1236 = cos(pkin(6));
t1231 = sin(pkin(6));
t1508 = g(3) - qJDD(1);
t1436 = t1231 * t1508;
t1233 = cos(pkin(13));
t1221 = t1233 * g(2);
t1228 = sin(pkin(13));
t1437 = g(1) * t1228 - t1221;
t1267 = t1236 * t1437 - t1436;
t1429 = g(1) * t1233 + g(2) * t1228;
t1158 = -t1240 * t1429 - t1244 * t1267;
t1245 = qJD(2) ^ 2;
t1507 = qJ(3) * t1230;
t1259 = -qJDD(2) * pkin(2) - t1245 * t1507 + t1158;
t1208 = t1231 * t1437;
t1425 = t1236 * t1508 + t1208;
t1255 = -t1230 * t1425 - t1235 * t1259;
t1526 = t1232 * t1255;
t1254 = pkin(3) * t1460 + t1526;
t1159 = t1240 * t1267 - t1244 * t1429;
t1260 = -t1245 * pkin(2) + t1159;
t1258 = qJ(3) * t1463 + t1260;
t1432 = pkin(10) * t1442;
t1250 = -t1227 * t1258 - t1234 * t1432 + t1254;
t1224 = t1230 ^ 2;
t1476 = t1224 * t1245;
t1511 = pkin(10) * t1229;
t1270 = (-pkin(3) * t1232 - t1227 * t1511) * t1476;
t1315 = t1229 * t1235 + t1450;
t1272 = t1235 * t1315;
t1475 = t1227 * t1230;
t1517 = -2 * qJD(3);
t1435 = t1475 * t1517;
t1512 = pkin(10) * t1245;
t1249 = qJD(2) * t1435 - t1227 * t1270 + t1272 * t1512 + t1250;
t1116 = -t1230 * t1259 + t1235 * t1425 - qJDD(3);
t1253 = -pkin(3) * t1439 - t1116;
t1268 = t1315 * t1470;
t1458 = pkin(10) * t1475;
t1271 = t1245 * (pkin(3) * t1235 - t1234 * t1458);
t1252 = -t1229 * t1432 - t1268 * t1512 + t1271 * t1475 + t1253;
t1533 = t1229 * t1252 + t1234 * t1249;
t1105 = t1166 * t1148;
t1445 = t1148 * qJD(5) - t1242 * t1128 - t1238 * t1188;
t1022 = t1445 + t1105;
t1489 = t1150 * t1166;
t1531 = t1446 + t1489;
t1530 = 2 * qJD(3);
t1112 = t1158 * t1240 + t1159 * t1244;
t1529 = t1112 * t1231;
t1528 = t1227 * t1255;
t1527 = t1228 * t1508;
t1525 = t1233 * t1508;
t1486 = t1171 * t1173;
t1265 = t1188 - t1486;
t1524 = t1239 * t1265;
t1313 = t1240 * t1425;
t1523 = t1243 * t1265;
t1312 = t1244 * t1425;
t1226 = t1235 ^ 2;
t1451 = t1227 * t1232 * t1245;
t1522 = (t1224 + t1226) * t1230 * t1451;
t1153 = t1189 * t1171;
t1081 = -t1153 + t1128;
t1145 = qJD(6) + t1148;
t1059 = t1145 * t1098;
t1447 = t1098 * qJD(6) - t1237 * t1122 + t1241 * t1445;
t951 = t1447 + t1059;
t1434 = -t1241 * t1122 - t1237 * t1445;
t946 = (qJD(6) - t1145) * t1100 + t1434;
t1179 = -t1228 * t1437 - t1233 * t1429;
t1095 = t1098 ^ 2;
t1096 = t1100 ^ 2;
t1144 = t1145 ^ 2;
t1146 = t1148 ^ 2;
t1147 = t1150 ^ 2;
t1519 = t1166 ^ 2;
t1169 = t1171 ^ 2;
t1170 = t1173 ^ 2;
t1518 = t1189 ^ 2;
t1516 = pkin(4) * t1239;
t1515 = pkin(4) * t1243;
t1514 = pkin(5) * t1238;
t1513 = pkin(9) * t1236;
t1510 = pkin(10) * t1234;
t1076 = pkin(5) * t1148 - pkin(12) * t1150;
t1066 = t1234 * t1252;
t1247 = -t1229 * t1249 + t1066 - t1081 * pkin(11) + (t1173 * t1189 + t1266) * pkin(4);
t1123 = pkin(4) * t1171 - pkin(11) * t1173;
t1030 = t1456 * t1530 - t1235 * t1271 + (t1258 + t1270) * t1232 + t1528 + t1532 * pkin(10);
t1467 = t1243 * t1030;
t900 = -t1518 * pkin(4) + t1188 * pkin(11) - t1171 * t1123 + t1239 * t1533 + t1467;
t825 = t1238 * t1247 + t1242 * t900;
t802 = -pkin(5) * t1519 + pkin(12) * t1122 - t1076 * t1148 + t825;
t925 = t1030 * t1239 - t1243 * t1533;
t899 = -t1188 * pkin(4) - t1518 * pkin(11) + t1123 * t1173 + t925;
t838 = pkin(5) * t1531 + pkin(12) * t1022 + t899;
t744 = t1237 * t838 + t1241 * t802;
t824 = t1238 * t900 - t1242 * t1247;
t801 = -t1122 * pkin(5) - pkin(12) * t1519 + t1076 * t1150 + t824;
t1506 = t1237 * t801;
t969 = t1036 + t1430;
t1505 = t1237 * t969;
t1504 = t1238 * t899;
t973 = t1229 * t1250 - t1066 + (t1229 * t1435 + t1229 * (-(-pkin(3) * t1470 - t1229 * t1458) * t1475 + pkin(10) * t1272) * qJD(2)) * qJD(2);
t1503 = t1239 * t973;
t1502 = t1241 * t801;
t1501 = t1241 * t969;
t1500 = t1242 * t899;
t1499 = t1243 * t973;
t1046 = t1086 + t1122;
t1497 = t1046 * t1238;
t1496 = t1046 * t1242;
t1107 = -t1188 - t1486;
t1495 = t1107 * t1239;
t1494 = t1107 * t1243;
t1493 = t1116 * t1227;
t1492 = t1116 * t1232;
t1491 = t1145 * t1237;
t1490 = t1145 * t1241;
t1488 = t1166 * t1238;
t1487 = t1166 * t1242;
t1485 = t1173 * t1239;
t1468 = t1235 * t1245;
t1448 = t1230 * t1468;
t1222 = t1227 ^ 2;
t1225 = t1232 ^ 2;
t1464 = t1222 + t1225;
t1186 = t1464 * t1448;
t1484 = t1186 * t1240;
t1483 = t1189 * t1243;
t1211 = t1224 * t1451;
t1194 = t1211 + t1460;
t1482 = t1194 * t1227;
t1481 = t1194 * t1232;
t1195 = -t1211 + t1460;
t1480 = t1195 * t1227;
t1479 = t1195 * t1232;
t1478 = t1222 * t1224;
t1477 = t1224 * t1225;
t1466 = qJD(4) + t1189;
t1462 = qJDD(2) * t1231;
t1459 = t1236 * qJDD(2);
t1457 = -pkin(5) * t1242 - pkin(4);
t1455 = t1238 * t1036;
t1454 = t1242 * t1036;
t1453 = t1239 * t1086;
t1452 = t1243 * t1086;
t1449 = t1230 * t1235 * t1244;
t1444 = t1224 * t1462;
t1443 = t1224 * t1459;
t1441 = t1227 * t1461;
t1438 = t1230 * t1460;
t743 = t1237 * t802 - t1241 * t838;
t751 = t1238 * t824 + t1242 * t825;
t1106 = -t1518 - t1169;
t1048 = t1106 * t1243 - t1524;
t1428 = pkin(10) * t1048 + t1499;
t1115 = -t1170 - t1518;
t1056 = -t1115 * t1239 + t1494;
t1427 = pkin(10) * t1056 - t1503;
t1426 = g(2) * t1228 ^ 2 + t1221 * t1233;
t678 = t1237 * t743 + t1241 * t744;
t653 = t1238 * t801 + t1242 * t678;
t677 = t1237 * t744 - t1241 * t743;
t1404 = t1239 * t653 - t1243 * t677;
t652 = t1238 * t678 - t1242 * t801;
t583 = -t1229 * t652 + t1234 * t1404;
t621 = t1239 * t677 + t1243 * t653;
t1424 = t1227 * t621 + t1232 * t583;
t1403 = t1239 * t751 - t1243 * t899;
t750 = t1238 * t825 - t1242 * t824;
t672 = -t1229 * t750 + t1234 * t1403;
t727 = t1239 * t899 + t1243 * t751;
t1423 = t1227 * t727 + t1232 * t672;
t950 = -t1059 + t1447;
t867 = -t1237 * t950 - t1241 * t946;
t994 = t1095 + t1096;
t828 = -t1238 * t994 + t1242 * t867;
t865 = -t1237 * t946 + t1241 * t950;
t1402 = t1239 * t828 - t1243 * t865;
t827 = t1238 * t867 + t1242 * t994;
t717 = -t1229 * t827 + t1234 * t1402;
t765 = t1239 * t865 + t1243 * t828;
t1422 = t1227 * t765 + t1232 * t717;
t1031 = -t1096 + t1095;
t948 = (-qJD(6) - t1145) * t1100 - t1434;
t868 = t1237 * t951 + t1241 * t948;
t842 = -t1031 * t1238 + t1242 * t868;
t866 = -t1237 * t948 + t1241 * t951;
t1401 = t1239 * t842 + t1243 * t866;
t841 = t1031 * t1242 + t1238 * t868;
t724 = -t1229 * t841 + t1234 * t1401;
t771 = -t1239 * t866 + t1243 * t842;
t1421 = t1227 * t771 + t1232 * t724;
t1011 = -t1144 - t1095;
t916 = t1011 * t1241 - t1537;
t851 = -t1238 * t948 + t1242 * t916;
t915 = t1011 * t1237 + t1535;
t1400 = t1239 * t851 - t1243 * t915;
t850 = t1238 * t916 + t1242 * t948;
t742 = -t1229 * t850 + t1234 * t1400;
t788 = t1239 * t915 + t1243 * t851;
t1420 = t1227 * t788 + t1232 * t742;
t1026 = -t1096 - t1144;
t922 = -t1026 * t1237 - t1501;
t854 = -t1238 * t951 + t1242 * t922;
t921 = t1026 * t1241 - t1505;
t1399 = t1239 * t854 - t1243 * t921;
t853 = t1238 * t922 + t1242 * t951;
t746 = -t1229 * t853 + t1234 * t1399;
t795 = t1239 * t921 + t1243 * t854;
t1419 = t1227 * t795 + t1232 * t746;
t1058 = -t1096 + t1144;
t935 = -t1058 * t1237 + t1535;
t861 = -t1238 * t950 + t1242 * t935;
t933 = -t1058 * t1241 - t1537;
t1398 = t1239 * t861 + t1243 * t933;
t859 = t1238 * t935 + t1242 * t950;
t756 = -t1229 * t859 + t1234 * t1398;
t805 = -t1239 * t933 + t1243 * t861;
t1418 = t1227 * t805 + t1232 * t756;
t1057 = t1095 - t1144;
t936 = t1057 * t1241 - t1505;
t862 = -t1238 * t946 + t1242 * t936;
t934 = -t1057 * t1237 - t1501;
t1397 = t1239 * t862 + t1243 * t934;
t860 = t1238 * t936 + t1242 * t946;
t757 = -t1229 * t860 + t1234 * t1397;
t806 = -t1239 * t934 + t1243 * t862;
t1417 = t1227 * t806 + t1232 * t757;
t978 = -qJD(6) * t1100 - t1434;
t942 = t1098 * t1490 - t1237 * t978;
t903 = t1242 * t942 - t1455;
t941 = -t1098 * t1491 - t1241 * t978;
t1396 = t1239 * t903 + t1243 * t941;
t901 = t1238 * t942 + t1454;
t781 = -t1229 * t901 + t1234 * t1396;
t836 = -t1239 * t941 + t1243 * t903;
t1416 = t1227 * t836 + t1232 * t781;
t944 = -t1100 * t1491 - t1241 * t1447;
t904 = t1242 * t944 + t1455;
t943 = -t1100 * t1490 + t1237 * t1447;
t1395 = t1239 * t904 + t1243 * t943;
t902 = t1238 * t944 - t1454;
t782 = -t1229 * t902 + t1234 * t1395;
t837 = -t1239 * t943 + t1243 * t904;
t1415 = t1227 * t837 + t1232 * t782;
t926 = t1467 + (t1234 * t1254 + t1229 * t1253 + (-t1229 * t1268 + t1234 * t1272) * t1512) * t1239 + (-t1234 * t1260 + ((t1234 * (-qJ(3) - t1510) - t1229 ^ 2 * pkin(10)) * qJDD(2) + (pkin(3) * qJD(2) * t1315 + t1234 * t1517) * qJD(2)) * t1230) * t1474;
t1394 = t1239 * t926 - t1243 * t925;
t811 = t1229 * t973 + t1234 * t1394;
t849 = t1239 * t925 + t1243 * t926;
t1414 = t1227 * t849 + t1232 * t811;
t981 = (-t1098 * t1241 + t1100 * t1237) * t1145;
t953 = t1238 * t1430 + t1242 * t981;
t980 = (t1098 * t1237 + t1100 * t1241) * t1145;
t1393 = t1239 * t953 + t1243 * t980;
t952 = t1238 * t981 - t1242 * t1430;
t821 = -t1229 * t952 + t1234 * t1393;
t887 = -t1239 * t980 + t1243 * t953;
t1413 = t1227 * t887 + t1232 * t821;
t1049 = t1146 + t1147;
t1018 = -t1446 + t1489;
t1021 = -t1105 + t1445;
t939 = t1018 * t1242 - t1021 * t1238;
t1352 = t1049 * t1243 + t1239 * t939;
t937 = t1018 * t1238 + t1021 * t1242;
t840 = -t1229 * t937 + t1234 * t1352;
t905 = -t1049 * t1239 + t1243 * t939;
t1412 = t1227 * t905 + t1232 * t840;
t1083 = -t1147 + t1146;
t940 = t1022 * t1238 - t1242 * t1531;
t1350 = t1083 * t1243 + t1239 * t940;
t938 = -t1022 * t1242 - t1238 * t1531;
t848 = -t1229 * t938 + t1234 * t1350;
t914 = -t1083 * t1239 + t1243 * t940;
t1411 = t1227 * t914 + t1232 * t848;
t1064 = -t1519 - t1146;
t975 = t1064 * t1242 - t1536;
t1358 = t1239 * t975 - t1243 * t1531;
t974 = t1064 * t1238 + t1534;
t873 = -t1229 * t974 + t1234 * t1358;
t918 = t1239 * t1531 + t1243 * t975;
t1410 = t1227 * t918 + t1232 * t873;
t1073 = -t1147 - t1519;
t985 = -t1073 * t1238 - t1496;
t1356 = t1022 * t1243 + t1239 * t985;
t984 = t1073 * t1242 - t1497;
t878 = -t1229 * t984 + t1234 * t1356;
t924 = -t1022 * t1239 + t1243 * t985;
t1409 = t1227 * t924 + t1232 * t878;
t1104 = -t1147 + t1519;
t999 = -t1104 * t1238 + t1534;
t1357 = t1021 * t1243 + t1239 * t999;
t997 = t1104 * t1242 + t1536;
t885 = -t1229 * t997 + t1234 * t1357;
t931 = -t1021 * t1239 + t1243 * t999;
t1408 = t1227 * t931 + t1232 * t885;
t1103 = t1146 - t1519;
t1000 = t1103 * t1242 - t1497;
t1349 = t1000 * t1239 - t1018 * t1243;
t998 = t1103 * t1238 + t1496;
t886 = -t1229 * t998 + t1234 * t1349;
t932 = t1000 * t1243 + t1018 * t1239;
t1407 = t1227 * t932 + t1232 * t886;
t1013 = t1148 * t1488 - t1242 * t1446;
t1014 = t1148 * t1487 + t1238 * t1446;
t1317 = t1014 * t1239 + t1452;
t909 = -t1013 * t1229 + t1234 * t1317;
t964 = t1014 * t1243 - t1453;
t1406 = t1227 * t964 + t1232 * t909;
t1015 = t1150 * t1487 - t1238 * t1445;
t1016 = -t1150 * t1488 - t1242 * t1445;
t1316 = t1016 * t1239 - t1452;
t910 = -t1015 * t1229 + t1234 * t1316;
t965 = t1016 * t1243 + t1453;
t1405 = t1227 * t965 + t1232 * t910;
t582 = t1229 * t1404 + t1234 * t652;
t552 = -t1230 * t582 + t1235 * t1424;
t561 = -t1227 * t583 + t1232 * t621;
t1392 = t1240 * t561 + t1244 * t552;
t671 = t1229 * t1403 + t1234 * t750;
t608 = -t1230 * t671 + t1235 * t1423;
t635 = -t1227 * t672 + t1232 * t727;
t1391 = t1240 * t635 + t1244 * t608;
t716 = t1229 * t1402 + t1234 * t827;
t634 = -t1230 * t716 + t1235 * t1422;
t673 = -t1227 * t717 + t1232 * t765;
t1390 = t1240 * t673 + t1244 * t634;
t723 = t1229 * t1401 + t1234 * t841;
t638 = -t1230 * t723 + t1235 * t1421;
t679 = -t1227 * t724 + t1232 * t771;
t1389 = t1240 * t679 + t1244 * t638;
t741 = t1229 * t1400 + t1234 * t850;
t649 = -t1230 * t741 + t1235 * t1420;
t696 = -t1227 * t742 + t1232 * t788;
t1388 = t1240 * t696 + t1244 * t649;
t745 = t1229 * t1399 + t1234 * t853;
t655 = -t1230 * t745 + t1235 * t1419;
t698 = -t1227 * t746 + t1232 * t795;
t1387 = t1240 * t698 + t1244 * t655;
t754 = t1229 * t1398 + t1234 * t859;
t662 = -t1230 * t754 + t1235 * t1418;
t703 = -t1227 * t756 + t1232 * t805;
t1386 = t1240 * t703 + t1244 * t662;
t755 = t1229 * t1397 + t1234 * t860;
t663 = -t1230 * t755 + t1235 * t1417;
t704 = -t1227 * t757 + t1232 * t806;
t1385 = t1240 * t704 + t1244 * t663;
t779 = t1229 * t1396 + t1234 * t901;
t689 = -t1230 * t779 + t1235 * t1416;
t733 = -t1227 * t781 + t1232 * t836;
t1384 = t1240 * t733 + t1244 * t689;
t780 = t1229 * t1395 + t1234 * t902;
t690 = -t1230 * t780 + t1235 * t1415;
t734 = -t1227 * t782 + t1232 * t837;
t1383 = t1240 * t734 + t1244 * t690;
t810 = t1229 * t1394 - t1234 * t973;
t706 = -t1230 * t810 + t1235 * t1414;
t749 = -t1227 * t811 + t1232 * t849;
t1382 = t1240 * t749 + t1244 * t706;
t820 = t1229 * t1393 + t1234 * t952;
t719 = -t1230 * t820 + t1235 * t1413;
t773 = -t1227 * t821 + t1232 * t887;
t1381 = t1240 * t773 + t1244 * t719;
t839 = t1229 * t1352 + t1234 * t937;
t737 = -t1230 * t839 + t1235 * t1412;
t783 = -t1227 * t840 + t1232 * t905;
t1380 = t1240 * t783 + t1244 * t737;
t847 = t1229 * t1350 + t1234 * t938;
t740 = -t1230 * t847 + t1235 * t1411;
t787 = -t1227 * t848 + t1232 * t914;
t1379 = t1240 * t787 + t1244 * t740;
t872 = t1229 * t1358 + t1234 * t974;
t761 = -t1230 * t872 + t1235 * t1410;
t804 = -t1227 * t873 + t1232 * t918;
t1378 = t1240 * t804 + t1244 * t761;
t877 = t1229 * t1356 + t1234 * t984;
t764 = -t1230 * t877 + t1235 * t1409;
t809 = -t1227 * t878 + t1232 * t924;
t1377 = t1240 * t809 + t1244 * t764;
t883 = t1229 * t1357 + t1234 * t997;
t768 = -t1230 * t883 + t1235 * t1408;
t816 = -t1227 * t885 + t1232 * t931;
t1376 = t1240 * t816 + t1244 * t768;
t884 = t1229 * t1349 + t1234 * t998;
t769 = -t1230 * t884 + t1235 * t1407;
t817 = -t1227 * t886 + t1232 * t932;
t1375 = t1240 * t817 + t1244 * t769;
t907 = t1013 * t1234 + t1229 * t1317;
t793 = -t1230 * t907 + t1235 * t1406;
t857 = -t1227 * t909 + t1232 * t964;
t1374 = t1240 * t857 + t1244 * t793;
t908 = t1015 * t1234 + t1229 * t1316;
t794 = -t1230 * t908 + t1235 * t1405;
t858 = -t1227 * t910 + t1232 * t965;
t1373 = t1240 * t858 + t1244 * t794;
t1043 = (-t1148 * t1242 + t1150 * t1238) * t1166;
t1010 = t1043 * t1243 + t1122 * t1239;
t1042 = (-t1148 * t1238 - t1150 * t1242) * t1166;
t1344 = t1043 * t1239 - t1122 * t1243;
t955 = -t1042 * t1229 + t1234 * t1344;
t1360 = t1010 * t1227 + t1232 * t955;
t954 = t1042 * t1234 + t1229 * t1344;
t833 = -t1230 * t954 + t1235 * t1360;
t892 = t1010 * t1232 - t1227 * t955;
t1372 = t1240 * t892 + t1244 * t833;
t1082 = t1153 + t1128;
t1263 = (-qJD(4) + t1189) * t1173 - t1310;
t1023 = t1082 * t1239 + t1243 * t1263;
t1097 = -t1169 - t1170;
t1340 = -t1082 * t1243 + t1239 * t1263;
t967 = -t1097 * t1229 + t1234 * t1340;
t1355 = t1023 * t1227 + t1232 * t967;
t966 = t1097 * t1234 + t1229 * t1340;
t871 = -t1230 * t966 + t1235 * t1355;
t917 = t1023 * t1232 - t1227 * t967;
t1371 = t1240 * t917 + t1244 * t871;
t1077 = t1173 * t1466 + t1310;
t1024 = -t1077 * t1243 - t1081 * t1239;
t1129 = t1170 - t1169;
t1341 = -t1077 * t1239 + t1081 * t1243;
t983 = -t1129 * t1229 + t1234 * t1341;
t1354 = t1024 * t1227 + t1232 * t983;
t982 = t1129 * t1234 + t1229 * t1341;
t876 = -t1230 * t982 + t1235 * t1354;
t923 = t1024 * t1232 - t1227 * t983;
t1370 = t1240 * t923 + t1244 * t876;
t1339 = t1106 * t1239 + t1523;
t993 = -t1077 * t1229 + t1234 * t1339;
t1353 = t1048 * t1227 + t1232 * t993;
t992 = t1077 * t1234 + t1229 * t1339;
t889 = -t1230 * t992 + t1235 * t1353;
t945 = t1048 * t1232 - t1227 * t993;
t1369 = t1240 * t945 + t1244 * t889;
t1080 = -t1171 * t1466 + t1261;
t1338 = t1115 * t1243 + t1495;
t996 = -t1080 * t1229 + t1234 * t1338;
t1351 = t1056 * t1227 + t1232 * t996;
t995 = t1080 * t1234 + t1229 * t1338;
t891 = -t1230 * t995 + t1235 * t1351;
t956 = t1056 * t1232 - t1227 * t996;
t1368 = t1240 * t956 + t1244 * t891;
t1152 = -t1170 + t1518;
t1336 = t1152 * t1243 + t1524;
t1005 = t1082 * t1234 + t1229 * t1336;
t1007 = -t1082 * t1229 + t1234 * t1336;
t1067 = -t1152 * t1239 + t1523;
t1348 = t1007 * t1232 + t1067 * t1227;
t896 = -t1005 * t1230 + t1235 * t1348;
t957 = -t1007 * t1227 + t1067 * t1232;
t1367 = t1240 * t957 + t1244 * t896;
t1151 = t1169 - t1518;
t1337 = t1151 * t1239 - t1494;
t1006 = t1229 * t1337 + t1234 * t1263;
t1008 = -t1229 * t1263 + t1234 * t1337;
t1068 = t1151 * t1243 + t1495;
t1347 = t1008 * t1232 + t1068 * t1227;
t897 = -t1006 * t1230 + t1235 * t1347;
t958 = -t1008 * t1227 + t1068 * t1232;
t1366 = t1240 * t958 + t1244 * t897;
t1264 = t1243 * t1266;
t1032 = -t1229 * t1264 + (-t1173 * t1234 + t1189 * t1472) * t1171;
t1033 = -t1234 * t1264 + (t1173 * t1229 + t1189 * t1469) * t1171;
t1074 = t1171 * t1483 + t1239 * t1266;
t1346 = t1033 * t1232 + t1074 * t1227;
t929 = -t1032 * t1230 + t1235 * t1346;
t976 = -t1033 * t1227 + t1074 * t1232;
t1365 = t1240 * t976 + t1244 * t929;
t1034 = t1128 * t1472 + (t1171 * t1234 + t1189 * t1471) * t1173;
t1035 = t1128 * t1469 + (-t1171 * t1229 + t1234 * t1483) * t1173;
t1075 = t1128 * t1243 - t1189 * t1485;
t1345 = t1035 * t1232 + t1075 * t1227;
t930 = -t1034 * t1230 + t1235 * t1345;
t977 = -t1035 * t1227 + t1075 * t1232;
t1364 = t1240 * t977 + t1244 * t930;
t1205 = (-t1226 - t1477) * t1245;
t1161 = t1205 * t1232 - t1482;
t1363 = qJ(3) * t1161 + t1492;
t1203 = (-t1226 - t1478) * t1245;
t1163 = -t1203 * t1227 - t1479;
t1362 = qJ(3) * t1163 - t1493;
t1256 = (qJ(3) * qJDD(2) + qJD(2) * t1530) * t1230 + t1260;
t1071 = t1227 * t1256 - t1526;
t1072 = t1232 * t1256 + t1528;
t1009 = t1071 * t1227 + t1072 * t1232;
t1342 = -t1071 * t1232 + t1072 * t1227;
t972 = t1116 * t1230 + t1235 * t1342;
t1361 = t1009 * t1240 + t1244 * t972;
t1311 = t1189 * (-t1171 * t1239 - t1173 * t1243);
t1070 = -t1188 * t1229 + t1234 * t1311;
t1087 = (-t1171 * t1243 + t1485) * t1189;
t1012 = -t1070 * t1227 + t1087 * t1232;
t1069 = t1188 * t1234 + t1229 * t1311;
t1343 = t1070 * t1232 + t1087 * t1227;
t961 = -t1069 * t1230 + t1235 * t1343;
t1359 = t1012 * t1240 + t1244 * t961;
t1197 = t1464 * t1476;
t1213 = t1232 * t1448;
t1191 = -t1213 + t1442;
t1212 = t1227 * t1448;
t1192 = t1212 + t1439;
t1326 = -t1191 * t1232 + t1192 * t1227;
t1126 = t1197 * t1230 + t1235 * t1326;
t1155 = t1191 * t1227 + t1192 * t1232;
t1335 = t1126 * t1244 + t1155 * t1240;
t1196 = (t1222 - t1225) * t1476;
t1190 = t1213 + t1442;
t1193 = -t1212 + t1439;
t1327 = t1190 * t1232 + t1193 * t1227;
t1127 = -t1196 * t1230 + t1235 * t1327;
t1156 = -t1190 * t1227 + t1193 * t1232;
t1334 = t1127 * t1244 + t1156 * t1240;
t1204 = (-t1226 + t1477) * t1245;
t1322 = t1204 * t1227 + t1479;
t1134 = -t1192 * t1230 + t1235 * t1322;
t1160 = t1204 * t1232 - t1480;
t1333 = t1134 * t1244 + t1160 * t1240;
t1324 = t1205 * t1227 + t1481;
t1135 = t1193 * t1230 + t1235 * t1324;
t1332 = t1135 * t1244 + t1161 * t1240;
t1202 = (t1226 - t1478) * t1245;
t1325 = t1202 * t1232 + t1482;
t1136 = -t1191 * t1230 + t1235 * t1325;
t1162 = -t1202 * t1227 + t1481;
t1331 = t1136 * t1244 + t1162 * t1240;
t1323 = t1203 * t1232 - t1480;
t1137 = -t1190 * t1230 + t1235 * t1323;
t1330 = t1137 * t1244 + t1163 * t1240;
t1111 = t1244 * t1158 - t1240 * t1159;
t1167 = t1225 * t1438 - t1522;
t1184 = (-t1225 * t1468 - t1441) * t1230;
t1329 = t1167 * t1244 + t1184 * t1240;
t1168 = t1222 * t1438 + t1522;
t1185 = (-t1222 * t1468 + t1441) * t1230;
t1328 = t1168 * t1244 + t1185 * t1240;
t1320 = qJDD(2) * t1240 + t1244 * t1245;
t1200 = t1320 * t1236;
t1216 = qJDD(2) * t1244 - t1240 * t1245;
t1321 = t1200 * t1233 + t1216 * t1228;
t1176 = t1200 * t1228 - t1216 * t1233;
t592 = -pkin(11) * t652 + (-pkin(12) * t1242 + t1514) * t677;
t613 = -pkin(4) * t652 + pkin(5) * t801 - pkin(12) * t678;
t1296 = pkin(10) * t621 + t1239 * t592 + t1243 * t613;
t574 = pkin(11) * t653 + (-pkin(12) * t1238 + t1457) * t677;
t533 = -pkin(3) * t582 - t1229 * t574 + t1234 * t1296;
t540 = -t1239 * t613 + t1243 * t592 + (-t1229 * t582 - t1234 * t583) * pkin(10);
t1286 = qJ(3) * t561 + t1227 * t540 + t1232 * t533;
t532 = pkin(3) * t583 + t1229 * t1296 + t1234 * t574;
t551 = t1230 * t1424 + t1235 * t582;
t515 = -pkin(2) * t551 - t1230 * t532 + t1235 * t1286;
t518 = -t1227 * t533 + t1232 * t540 + (-t1230 * t551 - t1235 * t552) * qJ(3);
t534 = -t1240 * t552 + t1244 * t561;
t1309 = pkin(9) * t534 + t1240 * t518 + t1244 * t515;
t667 = -pkin(12) * t865 - t677;
t639 = -pkin(11) * t827 + t1242 * t667 + t1514 * t865;
t642 = -pkin(4) * t827 - pkin(5) * t994 - pkin(12) * t867 - t678;
t1295 = pkin(10) * t765 + t1239 * t639 + t1243 * t642;
t632 = pkin(11) * t828 + t1238 * t667 + t1457 * t865;
t563 = -pkin(3) * t716 - t1229 * t632 + t1234 * t1295;
t573 = -t1239 * t642 + t1243 * t639 + (-t1229 * t716 - t1234 * t717) * pkin(10);
t1285 = qJ(3) * t673 + t1227 * t573 + t1232 * t563;
t562 = pkin(3) * t717 + t1229 * t1295 + t1234 * t632;
t633 = t1230 * t1422 + t1235 * t716;
t530 = -pkin(2) * t633 - t1230 * t562 + t1235 * t1285;
t537 = -t1227 * t563 + t1232 * t573 + (-t1230 * t633 - t1235 * t634) * qJ(3);
t605 = -t1240 * t634 + t1244 * t673;
t1308 = pkin(9) * t605 + t1240 * t537 + t1244 * t530;
t1269 = pkin(10) * t727 + (-pkin(11) * t1239 - t1515) * t750;
t728 = -pkin(4) * t899 + pkin(11) * t751;
t594 = -pkin(3) * t671 - t1229 * t728 + t1234 * t1269;
t601 = (-pkin(11) * t1243 + t1516) * t750 + (-t1229 * t671 - t1234 * t672) * pkin(10);
t1282 = qJ(3) * t635 + t1227 * t601 + t1232 * t594;
t593 = pkin(3) * t672 + t1229 * t1269 + t1234 * t728;
t607 = t1230 * t1423 + t1235 * t671;
t536 = -pkin(2) * t607 - t1230 * t593 + t1235 * t1282;
t545 = -t1227 * t594 + t1232 * t601 + (-t1230 * t607 - t1235 * t608) * qJ(3);
t572 = -t1240 * t608 + t1244 * t635;
t1307 = pkin(9) * t572 + t1240 * t545 + t1244 * t536;
t722 = -pkin(5) * t915 + t743;
t770 = -pkin(12) * t915 + t1506;
t658 = -pkin(11) * t850 - t1238 * t722 + t1242 * t770;
t711 = -pkin(4) * t850 - pkin(5) * t948 - pkin(12) * t916 + t1502;
t1294 = pkin(10) * t788 + t1239 * t658 + t1243 * t711;
t650 = -pkin(4) * t915 + pkin(11) * t851 + t1238 * t770 + t1242 * t722;
t578 = -pkin(3) * t741 - t1229 * t650 + t1234 * t1294;
t603 = -t1239 * t711 + t1243 * t658 + (-t1229 * t741 - t1234 * t742) * pkin(10);
t1284 = qJ(3) * t696 + t1227 * t603 + t1232 * t578;
t577 = pkin(3) * t742 + t1229 * t1294 + t1234 * t650;
t648 = t1230 * t1420 + t1235 * t741;
t539 = -pkin(2) * t648 - t1230 * t577 + t1235 * t1284;
t550 = -t1227 * t578 + t1232 * t603 + (-t1230 * t648 - t1235 * t649) * qJ(3);
t622 = -t1240 * t649 + t1244 * t696;
t1306 = pkin(9) * t622 + t1240 * t550 + t1244 * t539;
t725 = -pkin(5) * t921 + t744;
t772 = -pkin(12) * t921 + t1502;
t664 = -pkin(11) * t853 - t1238 * t725 + t1242 * t772;
t712 = -pkin(4) * t853 - pkin(5) * t951 - pkin(12) * t922 - t1506;
t1293 = pkin(10) * t795 + t1239 * t664 + t1243 * t712;
t651 = -pkin(4) * t921 + pkin(11) * t854 + t1238 * t772 + t1242 * t725;
t580 = -pkin(3) * t745 - t1229 * t651 + t1234 * t1293;
t604 = -t1239 * t712 + t1243 * t664 + (-t1229 * t745 - t1234 * t746) * pkin(10);
t1283 = qJ(3) * t698 + t1227 * t604 + t1232 * t580;
t579 = pkin(3) * t746 + t1229 * t1293 + t1234 * t651;
t654 = t1230 * t1419 + t1235 * t745;
t542 = -pkin(2) * t654 - t1230 * t579 + t1235 * t1283;
t553 = -t1227 * t580 + t1232 * t604 + (-t1230 * t654 - t1235 * t655) * qJ(3);
t623 = -t1240 * t655 + t1244 * t698;
t1305 = pkin(9) * t623 + t1240 * t553 + t1244 * t542;
t735 = -pkin(11) * t937 - t750;
t1273 = pkin(10) * t905 + t1239 * t735 - t1515 * t937;
t729 = pkin(4) * t1049 + pkin(11) * t939 + t751;
t641 = -pkin(3) * t839 - t1229 * t729 + t1234 * t1273;
t670 = t937 * t1516 + t1243 * t735 + (-t1229 * t839 - t1234 * t840) * pkin(10);
t1281 = qJ(3) * t783 + t1227 * t670 + t1232 * t641;
t640 = pkin(3) * t840 + t1229 * t1273 + t1234 * t729;
t736 = t1230 * t1412 + t1235 * t839;
t569 = -pkin(2) * t736 - t1230 * t640 + t1235 * t1281;
t581 = -t1227 * t641 + t1232 * t670 + (-t1230 * t736 - t1235 * t737) * qJ(3);
t691 = -t1240 * t737 + t1244 * t783;
t1304 = pkin(9) * t691 + t1240 * t581 + t1244 * t569;
t796 = -pkin(4) * t974 + t824;
t855 = -pkin(11) * t974 + t1504;
t1292 = pkin(10) * t918 + t1239 * t855 + t1243 * t796;
t826 = -pkin(4) * t1531 + pkin(11) * t975 - t1500;
t681 = -pkin(3) * t872 - t1229 * t826 + t1234 * t1292;
t695 = -t1239 * t796 + t1243 * t855 + (-t1229 * t872 - t1234 * t873) * pkin(10);
t1280 = qJ(3) * t804 + t1227 * t695 + t1232 * t681;
t680 = pkin(3) * t873 + t1229 * t1292 + t1234 * t826;
t760 = t1230 * t1410 + t1235 * t872;
t585 = -pkin(2) * t760 - t1230 * t680 + t1235 * t1280;
t606 = -t1227 * t681 + t1232 * t695 + (-t1230 * t760 - t1235 * t761) * qJ(3);
t707 = -t1240 * t761 + t1244 * t804;
t1303 = pkin(9) * t707 + t1240 * t606 + t1244 * t585;
t799 = -pkin(4) * t984 + t825;
t856 = -pkin(11) * t984 + t1500;
t1291 = pkin(10) * t924 + t1239 * t856 + t1243 * t799;
t829 = pkin(4) * t1022 + pkin(11) * t985 + t1504;
t684 = -pkin(3) * t877 - t1229 * t829 + t1234 * t1291;
t697 = -t1239 * t799 + t1243 * t856 + (-t1229 * t877 - t1234 * t878) * pkin(10);
t1279 = qJ(3) * t809 + t1227 * t697 + t1232 * t684;
t683 = pkin(3) * t878 + t1229 * t1291 + t1234 * t829;
t763 = t1230 * t1409 + t1235 * t877;
t589 = -pkin(2) * t763 - t1230 * t683 + t1235 * t1279;
t611 = -t1227 * t684 + t1232 * t697 + (-t1230 * t763 - t1235 * t764) * qJ(3);
t709 = -t1240 * t764 + t1244 * t809;
t1302 = pkin(9) * t709 + t1240 * t611 + t1244 * t589;
t738 = (-t1229 * t810 - t1234 * t811) * pkin(10);
t752 = -pkin(3) * t810 + t1510 * t849;
t1278 = qJ(3) * t749 + t1227 * t738 + t1232 * t752;
t705 = t1230 * t1414 + t1235 * t810;
t753 = pkin(3) * t811 + t1511 * t849;
t610 = -pkin(2) * t705 - t1230 * t753 + t1235 * t1278;
t614 = -t1227 * t752 + t1232 * t738 + (-t1230 * t705 - t1235 * t706) * qJ(3);
t659 = -t1240 * t706 + t1244 * t749;
t1301 = pkin(9) * t659 + t1240 * t614 + t1244 * t610;
t786 = (-t1229 * t966 - t1234 * t967) * pkin(10) - t1394;
t1289 = pkin(10) * t1023 + t849;
t790 = -pkin(3) * t966 + t1234 * t1289;
t1277 = qJ(3) * t917 + t1227 * t786 + t1232 * t790;
t789 = pkin(3) * t967 + t1229 * t1289;
t870 = t1230 * t1355 + t1235 * t966;
t657 = -pkin(2) * t870 - t1230 * t789 + t1235 * t1277;
t682 = -t1227 * t790 + t1232 * t786 + (-t1230 * t870 - t1235 * t871) * qJ(3);
t803 = -t1240 * t871 + t1244 * t917;
t1300 = pkin(9) * t803 + t1240 * t682 + t1244 * t657;
t815 = -pkin(3) * t992 + t1229 * t925 + t1234 * t1428;
t869 = -t1503 + (-t1229 * t992 - t1234 * t993) * pkin(10);
t1276 = qJ(3) * t945 + t1227 * t869 + t1232 * t815;
t814 = pkin(3) * t993 + t1229 * t1428 - t1234 * t925;
t888 = t1230 * t1353 + t1235 * t992;
t686 = -pkin(2) * t888 - t1230 * t814 + t1235 * t1276;
t708 = -t1227 * t815 + t1232 * t869 + (-t1230 * t888 - t1235 * t889) * qJ(3);
t822 = -t1240 * t889 + t1244 * t945;
t1299 = pkin(9) * t822 + t1240 * t708 + t1244 * t686;
t819 = -pkin(3) * t995 + t1229 * t926 + t1234 * t1427;
t874 = -t1499 + (-t1229 * t995 - t1234 * t996) * pkin(10);
t1275 = qJ(3) * t956 + t1227 * t874 + t1232 * t819;
t818 = pkin(3) * t996 + t1229 * t1427 - t1234 * t926;
t890 = t1230 * t1351 + t1235 * t995;
t693 = -pkin(2) * t890 - t1230 * t818 + t1235 * t1275;
t710 = -t1227 * t819 + t1232 * t874 + (-t1230 * t890 - t1235 * t891) * qJ(3);
t830 = -t1240 * t891 + t1244 * t956;
t1298 = pkin(9) * t830 + t1240 * t710 + t1244 * t693;
t971 = -t1116 * t1235 + t1230 * t1342;
t893 = (-t1230 * t971 - t1235 * t972) * qJ(3);
t911 = t1009 * t1244 - t1240 * t972;
t912 = qJ(3) * t1009 * t1235 - pkin(2) * t971;
t1297 = pkin(9) * t911 + t1240 * t893 + t1244 * t912;
t1084 = -t1126 * t1240 + t1155 * t1244;
t1124 = -t1197 * t1235 + t1230 * t1326;
t959 = (-t1124 * t1230 - t1126 * t1235) * qJ(3) - t1342;
t1274 = qJ(3) * t1155 + t1009;
t963 = -pkin(2) * t1124 + t1235 * t1274;
t1290 = pkin(9) * t1084 + t1240 * t959 + t1244 * t963;
t1131 = -t1193 * t1235 + t1230 * t1324;
t1027 = -t1493 + (-t1131 * t1230 - t1135 * t1235) * qJ(3);
t1091 = -t1135 * t1240 + t1161 * t1244;
t991 = -pkin(2) * t1131 + t1071 * t1230 + t1235 * t1363;
t1288 = pkin(9) * t1091 + t1027 * t1240 + t1244 * t991;
t1133 = t1190 * t1235 + t1230 * t1323;
t1028 = -t1492 + (-t1133 * t1230 - t1137 * t1235) * qJ(3);
t1093 = -t1137 * t1240 + t1163 * t1244;
t990 = -pkin(2) * t1133 + t1072 * t1230 + t1235 * t1362;
t1287 = pkin(9) * t1093 + t1028 * t1240 + t1244 * t990;
t1201 = t1216 * t1236;
t1199 = t1216 * t1231;
t1198 = t1320 * t1231;
t1177 = -t1201 * t1228 - t1233 * t1320;
t1175 = t1201 * t1233 - t1228 * t1320;
t1165 = t1186 * t1244 + t1240 * t1438;
t1154 = t1236 * t1484 + (-t1226 * t1231 - t1236 * t1449) * qJDD(2);
t1141 = -t1312 + (t1198 * t1231 + t1200 * t1236) * pkin(9);
t1140 = -t1313 + (-t1199 * t1231 - t1201 * t1236) * pkin(9);
t1139 = -t1168 * t1240 + t1185 * t1244;
t1138 = -t1167 * t1240 + t1184 * t1244;
t1132 = t1191 * t1235 + t1230 * t1325;
t1130 = t1192 * t1235 + t1230 * t1322;
t1125 = t1196 * t1235 + t1230 * t1327;
t1114 = -t1222 * t1444 + t1236 * t1328;
t1113 = -t1225 * t1444 + t1236 * t1329;
t1110 = t1112 * t1236;
t1102 = -pkin(1) * t1199 + t1231 * t1158 + t1236 * t1312 - t1320 * t1513;
t1101 = pkin(1) * t1198 + t1231 * t1159 - t1216 * t1513 - t1236 * t1313;
t1092 = -t1136 * t1240 + t1162 * t1244;
t1090 = -t1134 * t1240 + t1160 * t1244;
t1089 = t1231 * t1208 + (t1436 - t1111) * t1236;
t1088 = -t1111 * t1231 - t1236 * t1425;
t1085 = -t1127 * t1240 + t1156 * t1244;
t1055 = -t1133 * t1231 + t1236 * t1330;
t1054 = -t1132 * t1231 + t1236 * t1331;
t1053 = -t1131 * t1231 + t1236 * t1332;
t1052 = -t1130 * t1231 + t1236 * t1333;
t1051 = t1133 * t1236 + t1231 * t1330;
t1050 = t1131 * t1236 + t1231 * t1332;
t1044 = -pkin(1) * t1088 + t1112 * t1513;
t1041 = -t1089 * t1228 + t1112 * t1233;
t1040 = t1089 * t1233 + t1112 * t1228;
t1039 = -t1125 * t1231 + t1236 * t1334;
t1038 = -t1124 * t1231 + t1236 * t1335;
t1037 = t1124 * t1236 + t1231 * t1335;
t1025 = (-t1088 * t1231 - t1089 * t1236) * pkin(9);
t1004 = -t1055 * t1228 + t1093 * t1233;
t1003 = -t1053 * t1228 + t1091 * t1233;
t1002 = t1055 * t1233 + t1093 * t1228;
t1001 = t1053 * t1233 + t1091 * t1228;
t989 = pkin(2) * t1135 - t1071 * t1235 + t1230 * t1363;
t988 = pkin(2) * t1137 - t1072 * t1235 + t1230 * t1362;
t987 = -t1038 * t1228 + t1084 * t1233;
t986 = t1038 * t1233 + t1084 * t1228;
t962 = pkin(2) * t1126 + t1230 * t1274;
t960 = t1069 * t1235 + t1230 * t1343;
t928 = t1034 * t1235 + t1230 * t1345;
t927 = t1032 * t1235 + t1230 * t1346;
t913 = pkin(2) * t972 + t1009 * t1507;
t906 = t1012 * t1244 - t1240 * t961;
t895 = t1006 * t1235 + t1230 * t1347;
t894 = t1005 * t1235 + t1230 * t1348;
t882 = -t1240 * t930 + t1244 * t977;
t881 = -t1240 * t929 + t1244 * t976;
t880 = t1028 * t1244 - t1240 * t990 + (-t1051 * t1231 - t1055 * t1236) * pkin(9);
t879 = t1027 * t1244 - t1240 * t991 + (-t1050 * t1231 - t1053 * t1236) * pkin(9);
t875 = t1230 * t1354 + t1235 * t982;
t864 = -t1231 * t971 + t1236 * t1361;
t863 = t1231 * t1361 + t1236 * t971;
t852 = -t1231 * t960 + t1236 * t1359;
t846 = -t1240 * t897 + t1244 * t958;
t845 = -t1240 * t896 + t1244 * t957;
t844 = -pkin(1) * t1051 - t1231 * t988 + t1236 * t1287;
t843 = -pkin(1) * t1050 - t1231 * t989 + t1236 * t1288;
t832 = t1230 * t1360 + t1235 * t954;
t831 = -t1240 * t963 + t1244 * t959 + (-t1037 * t1231 - t1038 * t1236) * pkin(9);
t813 = -t1231 * t928 + t1236 * t1364;
t812 = -t1231 * t927 + t1236 * t1365;
t808 = -t1240 * t876 + t1244 * t923;
t807 = -pkin(1) * t1037 - t1231 * t962 + t1236 * t1290;
t798 = -t1228 * t864 + t1233 * t911;
t797 = t1228 * t911 + t1233 * t864;
t792 = t1230 * t1405 + t1235 * t908;
t791 = t1230 * t1406 + t1235 * t907;
t785 = -t1231 * t895 + t1236 * t1366;
t784 = -t1231 * t894 + t1236 * t1367;
t778 = -t1240 * t833 + t1244 * t892;
t777 = -t1231 * t890 + t1236 * t1368;
t776 = t1231 * t1368 + t1236 * t890;
t775 = -t1231 * t888 + t1236 * t1369;
t774 = t1231 * t1369 + t1236 * t888;
t767 = t1230 * t1407 + t1235 * t884;
t766 = t1230 * t1408 + t1235 * t883;
t762 = -t1231 * t875 + t1236 * t1370;
t759 = -t1231 * t870 + t1236 * t1371;
t758 = t1231 * t1371 + t1236 * t870;
t748 = -t1240 * t794 + t1244 * t858;
t747 = -t1240 * t793 + t1244 * t857;
t739 = t1230 * t1411 + t1235 * t847;
t732 = -t1231 * t832 + t1236 * t1372;
t731 = -t1228 * t777 + t1233 * t830;
t730 = t1228 * t830 + t1233 * t777;
t726 = -t1240 * t912 + t1244 * t893 + (-t1231 * t863 - t1236 * t864) * pkin(9);
t721 = -t1228 * t775 + t1233 * t822;
t720 = t1228 * t822 + t1233 * t775;
t718 = t1230 * t1413 + t1235 * t820;
t715 = -t1240 * t769 + t1244 * t817;
t714 = -t1240 * t768 + t1244 * t816;
t713 = -pkin(1) * t863 - t1231 * t913 + t1236 * t1297;
t702 = -t1228 * t759 + t1233 * t803;
t701 = t1228 * t803 + t1233 * t759;
t700 = -t1231 * t792 + t1236 * t1373;
t699 = -t1231 * t791 + t1236 * t1374;
t694 = -t1240 * t740 + t1244 * t787;
t692 = pkin(2) * t891 + t1230 * t1275 + t1235 * t818;
t688 = t1230 * t1415 + t1235 * t780;
t687 = t1230 * t1416 + t1235 * t779;
t685 = pkin(2) * t889 + t1230 * t1276 + t1235 * t814;
t676 = -t1240 * t719 + t1244 * t773;
t675 = -t1231 * t767 + t1236 * t1375;
t674 = -t1231 * t766 + t1236 * t1376;
t669 = -t1231 * t763 + t1236 * t1377;
t668 = t1231 * t1377 + t1236 * t763;
t666 = -t1231 * t760 + t1236 * t1378;
t665 = t1231 * t1378 + t1236 * t760;
t661 = t1230 * t1417 + t1235 * t755;
t660 = t1230 * t1418 + t1235 * t754;
t656 = pkin(2) * t871 + t1230 * t1277 + t1235 * t789;
t647 = -t1231 * t739 + t1236 * t1379;
t646 = -t1231 * t736 + t1236 * t1380;
t645 = t1231 * t1380 + t1236 * t736;
t644 = -t1240 * t690 + t1244 * t734;
t643 = -t1240 * t689 + t1244 * t733;
t637 = t1230 * t1421 + t1235 * t723;
t636 = -t1231 * t718 + t1236 * t1381;
t631 = -t1228 * t669 + t1233 * t709;
t630 = t1228 * t709 + t1233 * t669;
t629 = -t1228 * t666 + t1233 * t707;
t628 = t1228 * t707 + t1233 * t666;
t627 = -t1240 * t663 + t1244 * t704;
t626 = -t1240 * t662 + t1244 * t703;
t625 = -t1231 * t705 + t1236 * t1382;
t624 = t1231 * t1382 + t1236 * t705;
t620 = -t1240 * t693 + t1244 * t710 + (-t1231 * t776 - t1236 * t777) * pkin(9);
t619 = -t1228 * t646 + t1233 * t691;
t618 = t1228 * t691 + t1233 * t646;
t617 = -t1231 * t688 + t1236 * t1383;
t616 = -t1231 * t687 + t1236 * t1384;
t615 = -t1240 * t686 + t1244 * t708 + (-t1231 * t774 - t1236 * t775) * pkin(9);
t612 = -t1240 * t638 + t1244 * t679;
t609 = pkin(2) * t706 + t1230 * t1278 + t1235 * t753;
t602 = -pkin(1) * t776 - t1231 * t692 + t1236 * t1298;
t600 = -t1231 * t661 + t1236 * t1385;
t599 = -t1231 * t660 + t1236 * t1386;
t598 = -t1228 * t625 + t1233 * t659;
t597 = t1228 * t659 + t1233 * t625;
t596 = -t1240 * t657 + t1244 * t682 + (-t1231 * t758 - t1236 * t759) * pkin(9);
t595 = -pkin(1) * t774 - t1231 * t685 + t1236 * t1299;
t591 = -t1231 * t654 + t1236 * t1387;
t590 = t1231 * t1387 + t1236 * t654;
t588 = pkin(2) * t764 + t1230 * t1279 + t1235 * t683;
t587 = -t1231 * t648 + t1236 * t1388;
t586 = t1231 * t1388 + t1236 * t648;
t584 = pkin(2) * t761 + t1230 * t1280 + t1235 * t680;
t576 = -pkin(1) * t758 - t1231 * t656 + t1236 * t1300;
t575 = -t1231 * t637 + t1236 * t1389;
t571 = -t1231 * t633 + t1236 * t1390;
t570 = t1231 * t1390 + t1236 * t633;
t568 = pkin(2) * t737 + t1230 * t1281 + t1235 * t640;
t567 = -t1228 * t591 + t1233 * t623;
t566 = t1228 * t623 + t1233 * t591;
t565 = -t1228 * t587 + t1233 * t622;
t564 = t1228 * t622 + t1233 * t587;
t560 = -t1231 * t607 + t1236 * t1391;
t559 = t1231 * t1391 + t1236 * t607;
t558 = -t1228 * t571 + t1233 * t605;
t557 = t1228 * t605 + t1233 * t571;
t556 = -t1240 * t589 + t1244 * t611 + (-t1231 * t668 - t1236 * t669) * pkin(9);
t555 = -t1240 * t585 + t1244 * t606 + (-t1231 * t665 - t1236 * t666) * pkin(9);
t554 = -t1240 * t610 + t1244 * t614 + (-t1231 * t624 - t1236 * t625) * pkin(9);
t549 = -pkin(1) * t624 - t1231 * t609 + t1236 * t1301;
t548 = -pkin(1) * t668 - t1231 * t588 + t1236 * t1302;
t547 = -t1228 * t560 + t1233 * t572;
t546 = t1228 * t572 + t1233 * t560;
t544 = -pkin(1) * t665 - t1231 * t584 + t1236 * t1303;
t543 = -t1240 * t569 + t1244 * t581 + (-t1231 * t645 - t1236 * t646) * pkin(9);
t541 = pkin(2) * t655 + t1230 * t1283 + t1235 * t579;
t538 = pkin(2) * t649 + t1230 * t1284 + t1235 * t577;
t535 = pkin(2) * t608 + t1230 * t1282 + t1235 * t593;
t531 = -pkin(1) * t645 - t1231 * t568 + t1236 * t1304;
t529 = pkin(2) * t634 + t1230 * t1285 + t1235 * t562;
t528 = -t1231 * t551 + t1236 * t1392;
t527 = t1231 * t1392 + t1236 * t551;
t526 = -t1240 * t542 + t1244 * t553 + (-t1231 * t590 - t1236 * t591) * pkin(9);
t525 = -t1240 * t539 + t1244 * t550 + (-t1231 * t586 - t1236 * t587) * pkin(9);
t524 = -t1240 * t536 + t1244 * t545 + (-t1231 * t559 - t1236 * t560) * pkin(9);
t523 = -t1228 * t528 + t1233 * t534;
t522 = t1228 * t534 + t1233 * t528;
t521 = -pkin(1) * t590 - t1231 * t541 + t1236 * t1305;
t520 = -t1240 * t530 + t1244 * t537 + (-t1231 * t570 - t1236 * t571) * pkin(9);
t519 = -pkin(1) * t586 - t1231 * t538 + t1236 * t1306;
t517 = -pkin(1) * t559 - t1231 * t535 + t1236 * t1307;
t516 = -pkin(1) * t570 - t1231 * t529 + t1236 * t1308;
t514 = pkin(2) * t552 + t1230 * t1286 + t1235 * t532;
t513 = -t1240 * t515 + t1244 * t518 + (-t1231 * t527 - t1236 * t528) * pkin(9);
t512 = -pkin(1) * t527 - t1231 * t514 + t1236 * t1309;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1179, 0, 0, 0, 0, 0, 0, t1177, t1176, 0, t1041, 0, 0, 0, 0, 0, 0, t1003, t1004, t987, t798, 0, 0, 0, 0, 0, 0, t721, t731, t702, t598, 0, 0, 0, 0, 0, 0, t629, t631, t619, t547, 0, 0, 0, 0, 0, 0, t565, t567, t558, t523; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1426, 0, 0, 0, 0, 0, 0, t1175, -t1321, 0, t1040, 0, 0, 0, 0, 0, 0, t1001, t1002, t986, t797, 0, 0, 0, 0, 0, 0, t720, t730, t701, t597, 0, 0, 0, 0, 0, 0, t628, t630, t618, t546, 0, 0, 0, 0, 0, 0, t564, t566, t557, t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1508, 0, 0, 0, 0, 0, 0, t1199, -t1198, 0, t1088, 0, 0, 0, 0, 0, 0, t1050, t1051, t1037, t863, 0, 0, 0, 0, 0, 0, t774, t776, t758, t624, 0, 0, 0, 0, 0, 0, t665, t668, t645, t559, 0, 0, 0, 0, 0, 0, t586, t590, t570, t527; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1527, -t1525, t1426, qJ(1) * t1426, 0, 0, -t1176, 0, t1177, t1228 * t1462, -qJ(1) * t1175 - t1102 * t1228 + t1140 * t1233, qJ(1) * t1321 - t1101 * t1228 + t1141 * t1233, -t1110 * t1228 + t1111 * t1233, -qJ(1) * t1040 + t1025 * t1233 - t1044 * t1228, -t1114 * t1228 + t1139 * t1233, -t1039 * t1228 + t1085 * t1233, -t1054 * t1228 + t1092 * t1233, -t1113 * t1228 + t1138 * t1233, -t1052 * t1228 + t1090 * t1233, -t1154 * t1228 + t1165 * t1233, -qJ(1) * t1001 - t1228 * t843 + t1233 * t879, -qJ(1) * t1002 - t1228 * t844 + t1233 * t880, -qJ(1) * t986 - t1228 * t807 + t1233 * t831, -qJ(1) * t797 - t1228 * t713 + t1233 * t726, -t1228 * t813 + t1233 * t882, -t1228 * t762 + t1233 * t808, -t1228 * t784 + t1233 * t845, -t1228 * t812 + t1233 * t881, -t1228 * t785 + t1233 * t846, -t1228 * t852 + t1233 * t906, -qJ(1) * t720 - t1228 * t595 + t1233 * t615, -qJ(1) * t730 - t1228 * t602 + t1233 * t620, -qJ(1) * t701 - t1228 * t576 + t1233 * t596, -qJ(1) * t597 - t1228 * t549 + t1233 * t554, -t1228 * t700 + t1233 * t748, -t1228 * t647 + t1233 * t694, -t1228 * t674 + t1233 * t714, -t1228 * t699 + t1233 * t747, -t1228 * t675 + t1233 * t715, -t1228 * t732 + t1233 * t778, -qJ(1) * t628 - t1228 * t544 + t1233 * t555, -qJ(1) * t630 - t1228 * t548 + t1233 * t556, -qJ(1) * t618 - t1228 * t531 + t1233 * t543, -qJ(1) * t546 - t1228 * t517 + t1233 * t524, -t1228 * t617 + t1233 * t644, -t1228 * t575 + t1233 * t612, -t1228 * t599 + t1233 * t626, -t1228 * t616 + t1233 * t643, -t1228 * t600 + t1233 * t627, -t1228 * t636 + t1233 * t676, -qJ(1) * t564 - t1228 * t519 + t1233 * t525, -qJ(1) * t566 - t1228 * t521 + t1233 * t526, -qJ(1) * t557 - t1228 * t516 + t1233 * t520, -qJ(1) * t522 - t1228 * t512 + t1233 * t513; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1525, -t1527, t1179, qJ(1) * t1179, 0, 0, t1321, 0, t1175, -t1233 * t1462, qJ(1) * t1177 + t1102 * t1233 + t1140 * t1228, qJ(1) * t1176 + t1101 * t1233 + t1141 * t1228, t1110 * t1233 + t1111 * t1228, qJ(1) * t1041 + t1025 * t1228 + t1044 * t1233, t1114 * t1233 + t1139 * t1228, t1039 * t1233 + t1085 * t1228, t1054 * t1233 + t1092 * t1228, t1113 * t1233 + t1138 * t1228, t1052 * t1233 + t1090 * t1228, t1154 * t1233 + t1165 * t1228, qJ(1) * t1003 + t1228 * t879 + t1233 * t843, qJ(1) * t1004 + t1228 * t880 + t1233 * t844, qJ(1) * t987 + t1228 * t831 + t1233 * t807, qJ(1) * t798 + t1228 * t726 + t1233 * t713, t1228 * t882 + t1233 * t813, t1228 * t808 + t1233 * t762, t1228 * t845 + t1233 * t784, t1228 * t881 + t1233 * t812, t1228 * t846 + t1233 * t785, t1228 * t906 + t1233 * t852, qJ(1) * t721 + t1228 * t615 + t1233 * t595, qJ(1) * t731 + t1228 * t620 + t1233 * t602, qJ(1) * t702 + t1228 * t596 + t1233 * t576, qJ(1) * t598 + t1228 * t554 + t1233 * t549, t1228 * t748 + t1233 * t700, t1228 * t694 + t1233 * t647, t1228 * t714 + t1233 * t674, t1228 * t747 + t1233 * t699, t1228 * t715 + t1233 * t675, t1228 * t778 + t1233 * t732, qJ(1) * t629 + t1228 * t555 + t1233 * t544, qJ(1) * t631 + t1228 * t556 + t1233 * t548, qJ(1) * t619 + t1228 * t543 + t1233 * t531, qJ(1) * t547 + t1228 * t524 + t1233 * t517, t1228 * t644 + t1233 * t617, t1228 * t612 + t1233 * t575, t1228 * t626 + t1233 * t599, t1228 * t643 + t1233 * t616, t1228 * t627 + t1233 * t600, t1228 * t676 + t1233 * t636, qJ(1) * t565 + t1228 * t525 + t1233 * t519, qJ(1) * t567 + t1228 * t526 + t1233 * t521, qJ(1) * t558 + t1228 * t520 + t1233 * t516, qJ(1) * t523 + t1228 * t513 + t1233 * t512; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1437, t1429, 0, 0, 0, 0, t1198, 0, t1199, t1459, pkin(1) * t1201 - t1236 * t1158 + (-pkin(9) * t1320 + t1312) * t1231, -pkin(1) * t1200 - t1236 * t1159 + (-pkin(9) * t1216 - t1313) * t1231, t1529, pkin(1) * t1089 + pkin(9) * t1529, t1222 * t1443 + t1231 * t1328, t1125 * t1236 + t1231 * t1334, t1132 * t1236 + t1231 * t1331, t1225 * t1443 + t1231 * t1329, t1130 * t1236 + t1231 * t1333, t1231 * t1484 + (t1226 * t1236 - t1231 * t1449) * qJDD(2), pkin(1) * t1053 + t1231 * t1288 + t1236 * t989, pkin(1) * t1055 + t1231 * t1287 + t1236 * t988, pkin(1) * t1038 + t1231 * t1290 + t1236 * t962, pkin(1) * t864 + t1231 * t1297 + t1236 * t913, t1231 * t1364 + t1236 * t928, t1231 * t1370 + t1236 * t875, t1231 * t1367 + t1236 * t894, t1231 * t1365 + t1236 * t927, t1231 * t1366 + t1236 * t895, t1231 * t1359 + t1236 * t960, pkin(1) * t775 + t1231 * t1299 + t1236 * t685, pkin(1) * t777 + t1231 * t1298 + t1236 * t692, pkin(1) * t759 + t1231 * t1300 + t1236 * t656, pkin(1) * t625 + t1231 * t1301 + t1236 * t609, t1231 * t1373 + t1236 * t792, t1231 * t1379 + t1236 * t739, t1231 * t1376 + t1236 * t766, t1231 * t1374 + t1236 * t791, t1231 * t1375 + t1236 * t767, t1231 * t1372 + t1236 * t832, pkin(1) * t666 + t1231 * t1303 + t1236 * t584, pkin(1) * t669 + t1231 * t1302 + t1236 * t588, pkin(1) * t646 + t1231 * t1304 + t1236 * t568, pkin(1) * t560 + t1231 * t1307 + t1236 * t535, t1231 * t1383 + t1236 * t688, t1231 * t1389 + t1236 * t637, t1231 * t1386 + t1236 * t660, t1231 * t1384 + t1236 * t687, t1231 * t1385 + t1236 * t661, t1231 * t1381 + t1236 * t718, pkin(1) * t587 + t1231 * t1306 + t1236 * t538, pkin(1) * t591 + t1231 * t1305 + t1236 * t541, pkin(1) * t571 + t1231 * t1308 + t1236 * t529, pkin(1) * t528 + t1231 * t1309 + t1236 * t514;];
tauB_reg  = t1;
