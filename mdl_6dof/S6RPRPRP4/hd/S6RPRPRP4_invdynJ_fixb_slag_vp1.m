% Calculate vector of inverse dynamics joint torques for
% S6RPRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRPRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRPRP4_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:11:23
% EndTime: 2019-03-09 03:13:00
% DurationCPUTime: 95.49s
% Computational Cost: add. (33257->1237), mult. (43791->1522), div. (0->0), fcn. (40540->8), ass. (0->589)
t1189 = Icges(5,1) + Icges(4,3);
t1188 = Icges(6,4) - Icges(7,5);
t549 = sin(qJ(3));
t552 = cos(qJ(3));
t462 = Icges(4,5) * t552 - Icges(4,6) * t549;
t664 = Icges(5,4) * t552 - Icges(5,5) * t549;
t1187 = t462 - t664;
t1125 = Icges(6,1) + Icges(7,1);
t1182 = Icges(7,4) + Icges(6,5);
t1123 = Icges(6,2) + Icges(7,3);
t1180 = Icges(6,6) - Icges(7,6);
t547 = qJ(1) + pkin(9);
t537 = cos(t547);
t1186 = t1189 * t537;
t536 = sin(t547);
t874 = t536 * t552;
t875 = t536 * t549;
t1134 = t1186 + (-Icges(5,5) + Icges(4,6)) * t875 + (Icges(5,4) - Icges(4,5)) * t874;
t1154 = t1187 * t537 + t1189 * t536;
t900 = Icges(4,6) * t537;
t282 = Icges(4,4) * t874 - Icges(4,2) * t875 - t900;
t489 = Icges(5,6) * t875;
t913 = Icges(5,4) * t537;
t289 = Icges(5,2) * t874 - t489 + t913;
t1185 = t282 * t549 - t289 * t552;
t551 = cos(qJ(5));
t1184 = t1188 * t551;
t548 = sin(qJ(5));
t1183 = t1188 * t548;
t1181 = Icges(7,2) + Icges(6,3);
t915 = Icges(4,4) * t549;
t468 = Icges(4,1) * t552 - t915;
t285 = Icges(4,5) * t536 + t468 * t537;
t898 = Icges(5,6) * t552;
t656 = -Icges(5,3) * t549 + t898;
t286 = Icges(5,5) * t536 - t537 * t656;
t1179 = -t285 * t874 - t286 * t875;
t465 = Icges(4,2) * t552 + t915;
t899 = Icges(5,6) * t549;
t655 = Icges(5,3) * t552 + t899;
t1178 = -t465 - t655;
t540 = Icges(4,4) * t552;
t467 = Icges(4,1) * t549 + t540;
t657 = Icges(5,2) * t549 + t898;
t1177 = t467 + t657;
t658 = Icges(5,2) * t552 - t899;
t1176 = t468 + t658;
t494 = Icges(4,4) * t875;
t908 = Icges(4,5) * t537;
t284 = Icges(4,1) * t874 - t494 - t908;
t907 = Icges(5,5) * t537;
t287 = Icges(5,6) * t874 - Icges(5,3) * t875 + t907;
t1130 = -t284 * t552 + t287 * t549 + t1185;
t665 = -Icges(4,2) * t549 + t540;
t1175 = t656 + t665;
t1174 = -t1123 * t551 - t1183;
t1173 = t1180 * t551 + t1182 * t548;
t1172 = t1125 * t548 + t1184;
t632 = t465 * t549 - t467 * t552;
t1158 = -t549 * t655 + t552 * t657 - t632;
t1171 = t1154 * t537 + t1179;
t870 = t537 * t552;
t872 = t537 * t549;
t1086 = t1154 * t536 + t285 * t870 + t286 * t872;
t1170 = t1134 * t536 - t284 * t870 + t287 * t872;
t1046 = -t1130 * t536 + t1134 * t537;
t283 = Icges(4,6) * t536 + t537 * t665;
t490 = Icges(5,6) * t872;
t914 = Icges(5,4) * t536;
t288 = -Icges(5,2) * t870 + t490 + t914;
t1045 = -t283 * t875 - t288 * t874 - t1171;
t1044 = -t282 * t872 + t289 * t870 - t1170;
t1043 = -t283 * t872 - t288 * t870 + t1086;
t869 = t548 * t549;
t350 = t536 * t551 + t537 * t869;
t320 = Icges(7,5) * t350;
t867 = t549 * t551;
t876 = t536 * t548;
t349 = -t537 * t867 + t876;
t165 = Icges(7,6) * t870 + Icges(7,3) * t349 + t320;
t912 = Icges(6,4) * t350;
t174 = -Icges(6,2) * t349 + Icges(6,6) * t870 + t912;
t1146 = t165 - t174;
t871 = t537 * t551;
t352 = -t536 * t869 + t871;
t322 = Icges(7,5) * t352;
t873 = t537 * t548;
t351 = t536 * t867 + t873;
t166 = -Icges(7,6) * t874 + Icges(7,3) * t351 + t322;
t325 = Icges(6,4) * t352;
t176 = Icges(6,2) * t351 + Icges(6,6) * t874 - t325;
t1156 = t166 + t176;
t168 = Icges(6,5) * t350 - Icges(6,6) * t349 + Icges(6,3) * t870;
t171 = Icges(7,4) * t350 + Icges(7,2) * t870 + Icges(7,6) * t349;
t1144 = t168 + t171;
t170 = -Icges(6,5) * t352 + Icges(6,6) * t351 + Icges(6,3) * t874;
t173 = -Icges(7,4) * t352 + Icges(7,2) * t874 - Icges(7,6) * t351;
t1096 = t170 + t173;
t905 = Icges(7,5) * t349;
t177 = Icges(7,1) * t350 + Icges(7,4) * t870 + t905;
t323 = Icges(6,4) * t349;
t180 = Icges(6,1) * t350 + Icges(6,5) * t870 - t323;
t1143 = t177 + t180;
t321 = Icges(7,5) * t351;
t179 = -Icges(7,1) * t352 + Icges(7,4) * t874 - t321;
t324 = Icges(6,4) * t351;
t181 = Icges(6,1) * t352 - Icges(6,5) * t874 - t324;
t1142 = t179 - t181;
t1169 = t283 - t286;
t1035 = t1174 * t549 - t1180 * t552;
t1168 = t1173 * t549 + t1181 * t552;
t1034 = t1172 * t549 + t1182 * t552;
t1167 = (-t1123 * t548 + t1184) * t552;
t1166 = (t1180 * t548 - t1182 * t551) * t552;
t1165 = (-t1125 * t551 + t1183) * t552;
t1164 = t1175 * qJD(3);
t1163 = t1176 * qJD(3);
t461 = Icges(4,5) * t549 + Icges(4,6) * t552;
t663 = Icges(5,4) * t549 + Icges(5,5) * t552;
t1162 = t461 - t663;
t1090 = t1174 * t552 + t1180 * t549;
t1120 = -t1173 * t552 + t1181 * t549;
t1089 = t1172 * t552 - t1182 * t549;
t1160 = t1178 * qJD(3);
t1159 = t1177 * qJD(3);
t1157 = -t1177 * t549 + t1178 * t552;
t877 = t461 * t537;
t203 = -t536 * t632 - t877;
t372 = t663 * t537;
t206 = t655 * t875 - t657 * t874 - t372;
t1155 = t203 - t206;
t371 = t663 * t536;
t878 = t461 * t536;
t1095 = t1158 * t537 - t371 + t878;
t1153 = t283 * t549 + t288 * t552;
t1065 = rSges(7,1) + pkin(5);
t1107 = t1143 * t350 + t1144 * t870 + t1146 * t349;
t1106 = t1096 * t870 + t1142 * t350 - t1156 * t349;
t789 = qJD(5) * t549;
t519 = qJD(1) + t789;
t791 = qJD(3) * t552;
t750 = t551 * t791;
t796 = qJD(1) * t549;
t758 = t537 * t796;
t158 = -qJD(5) * t871 + t519 * t876 - t536 * t750 - t551 * t758;
t586 = t519 * t551 + t548 * t791;
t715 = qJD(5) + t796;
t159 = t536 * t586 + t715 * t873;
t792 = qJD(3) * t549;
t756 = t536 * t792;
t795 = qJD(1) * t552;
t757 = t537 * t795;
t603 = -t756 + t757;
t82 = Icges(7,5) * t159 + Icges(7,6) * t603 + Icges(7,3) * t158;
t88 = Icges(6,4) * t159 - Icges(6,2) * t158 + Icges(6,6) * t603;
t1152 = t82 - t88;
t752 = t537 * t792;
t759 = t536 * t795;
t1025 = t752 + t759;
t160 = qJD(1) * t351 + qJD(5) * t350 - t537 * t750;
t161 = t537 * t586 - t715 * t876;
t83 = Icges(7,5) * t161 - Icges(7,6) * t1025 + Icges(7,3) * t160;
t89 = Icges(6,4) * t161 - Icges(6,2) * t160 - Icges(6,6) * t1025;
t1151 = t83 - t89;
t84 = Icges(6,5) * t159 - Icges(6,6) * t158 + Icges(6,3) * t603;
t86 = Icges(7,4) * t159 + Icges(7,2) * t603 + Icges(7,6) * t158;
t1150 = t84 + t86;
t85 = Icges(6,5) * t161 - Icges(6,6) * t160 - Icges(6,3) * t1025;
t87 = Icges(7,4) * t161 - Icges(7,2) * t1025 + Icges(7,6) * t160;
t1149 = t85 + t87;
t90 = Icges(7,1) * t159 + Icges(7,4) * t603 + Icges(7,5) * t158;
t92 = Icges(6,1) * t159 - Icges(6,4) * t158 + Icges(6,5) * t603;
t1148 = t90 + t92;
t91 = Icges(7,1) * t161 - Icges(7,4) * t1025 + Icges(7,5) * t160;
t93 = Icges(6,1) * t161 - Icges(6,4) * t160 - Icges(6,5) * t1025;
t1147 = t91 + t93;
t1054 = rSges(7,3) + qJ(6);
t1011 = -t1089 * t350 - t1090 * t349 + t1120 * t870;
t1042 = (t282 + t287) * t552 + (t284 + t289) * t549;
t1041 = t1169 * t552 + (t285 - t288) * t549;
t1141 = t1160 * t537 + (-t1175 * t536 + t900 - t907) * qJD(1);
t1140 = qJD(1) * t1169 + t1160 * t536;
t1139 = -t1159 * t537 + (-t1176 * t536 + t908 - t913) * qJD(1);
t1138 = t1159 * t536 + (-t537 * t658 - t285 + t914) * qJD(1);
t1137 = qJD(3) * t1035 + qJD(5) * t1167;
t1136 = qJD(3) * t1168 + qJD(5) * t1166;
t1135 = qJD(3) * t1034 + qJD(5) * t1165;
t1133 = qJD(1) * t1162 + qJD(3) * t1157 + t1163 * t552 - t1164 * t549;
t1132 = t1162 * qJD(3);
t1131 = -t1089 * t548 + t1090 * t551;
t1129 = t285 * t552 + t286 * t549 - t1153;
t1128 = t1043 * t536 - t1044 * t537;
t1127 = t1045 * t536 - t1046 * t537;
t1126 = t1158 * qJD(1) - qJD(3) * t1187;
t553 = cos(qJ(1));
t546 = t553 * pkin(1);
t1105 = -t1143 * t352 + t1144 * t874 - t1146 * t351;
t1104 = t1096 * t874 - t1142 * t352 + t1156 * t351;
t1010 = t1089 * t352 + t1090 * t351 + t1120 * t874;
t1121 = t1095 * qJD(1);
t418 = rSges(3,1) * t536 + rSges(3,2) * t537;
t550 = sin(qJ(1));
t949 = t550 * pkin(1);
t392 = -t418 - t949;
t1119 = t1155 * qJD(1);
t1118 = t1154 * qJD(1);
t1117 = t536 * (-pkin(4) - pkin(7)) - t546;
t829 = t352 * rSges(6,1) - t351 * rSges(6,2);
t190 = rSges(6,3) * t874 - t829;
t693 = rSges(6,1) * t548 + rSges(6,2) * t551;
t939 = rSges(6,3) * t549;
t388 = -t552 * t693 + t939;
t788 = qJD(5) * t552;
t793 = qJD(3) * t537;
t396 = -t536 * t788 + t793;
t1116 = -t190 * t519 - t388 * t396;
t319 = qJD(6) * t349;
t1082 = t1054 * t351 + t1065 * t352;
t851 = rSges(7,2) * t874 - t1082;
t1115 = -t519 * t851 + t319;
t1068 = t166 * t551 + t179 * t548;
t68 = -t1068 * t552 + t173 * t549;
t1114 = t537 ^ 2;
t783 = qJD(1) * qJD(3);
t404 = -qJDD(3) * t537 + t536 * t783;
t779 = qJDD(5) * t552;
t212 = qJD(5) * t603 + t536 * t779 + t404;
t422 = qJD(3) * t788 + qJDD(5) * t549 + qJDD(1);
t401 = t536 * pkin(4) + pkin(8) * t870;
t454 = pkin(8) * t756;
t278 = qJD(1) * t401 - t454;
t539 = t549 * qJ(4);
t1003 = t552 * pkin(3) + t539;
t790 = qJD(4) * t552;
t397 = qJD(3) * t1003 - t790;
t782 = qJD(3) * qJD(4);
t1026 = qJDD(4) * t549 + t552 * t782;
t893 = qJ(4) * t552;
t477 = pkin(3) * t549 - t893;
t555 = qJD(1) ^ 2;
t775 = t555 * t546;
t616 = t1026 * t537 + t404 * t477 - t775;
t347 = t536 * t791 + t758;
t538 = qJD(4) * t549;
t473 = t536 * t538;
t808 = -pkin(3) * t756 + t473;
t184 = pkin(3) * t757 + qJ(4) * t347 + t808;
t421 = t537 * pkin(2) + t536 * pkin(7);
t398 = t421 * qJD(1);
t625 = -t184 - t398 - t473;
t402 = t537 * pkin(4) - pkin(8) * t874;
t380 = t1003 * t536;
t530 = t537 * pkin(7);
t420 = t536 * pkin(2) - t530;
t733 = -t420 - t949;
t702 = -t380 + t733;
t629 = t402 + t702;
t865 = t552 * qJD(3) ^ 2;
t954 = pkin(8) * t549;
t556 = t404 * t954 + (-pkin(8) * t865 - qJD(3) * t397) * t537 + t629 * qJDD(1) + (-t278 + t625) * qJD(1) + t616;
t690 = rSges(7,1) * t548 - rSges(7,3) * t551;
t940 = rSges(7,2) * t549;
t821 = t940 + (-pkin(5) * t548 + qJ(6) * t551 - t690) * t552;
t416 = (-rSges(7,1) * t551 - rSges(7,3) * t548) * t552;
t787 = qJD(6) * t551;
t514 = t552 * t787;
t543 = t552 * rSges(7,2);
t601 = -t548 * t788 - t551 * t792;
t848 = t514 + t601 * qJ(6) + (t548 * t792 - t551 * t788) * pkin(5) + qJD(5) * t416 + (t549 * t690 + t543) * qJD(3);
t318 = t351 * qJD(6);
t1017 = -t1054 * t158 - t1065 * t159 + t318;
t946 = rSges(7,2) * t603 - t1017;
t7 = qJD(6) * t160 + qJDD(6) * t349 + t212 * t821 - t396 * t848 - t422 * t851 - t519 * t946 + t556;
t1113 = -g(1) + t7;
t403 = qJDD(3) * t536 + t537 * t783;
t211 = -qJD(5) * t1025 + t537 * t779 + t403;
t794 = qJD(3) * t536;
t395 = t537 * t788 + t794;
t797 = qJD(1) * t537;
t513 = pkin(4) * t797;
t279 = -pkin(8) * t1025 + t513;
t760 = t536 * t796;
t475 = t537 * t538;
t751 = t537 * t791;
t815 = qJ(4) * t751 + t475;
t183 = -pkin(3) * t1025 - qJ(4) * t760 + t815;
t384 = pkin(3) * t870 + t537 * t539;
t512 = pkin(7) * t797;
t704 = qJDD(1) * t546 - t555 * t949;
t798 = qJD(1) * t536;
t615 = qJD(1) * (-pkin(2) * t798 + t512) + qJDD(1) * t421 + t704;
t576 = qJDD(1) * t384 + t615 + t1026 * t536 + (t183 + t475) * qJD(1);
t557 = qJD(1) * t279 + qJDD(1) * t401 + (-t403 * t549 - t536 * t865) * pkin(8) - t403 * t477 - t397 * t794 + t576;
t853 = rSges(7,2) * t870 + t1054 * t349 + t1065 * t350;
t1016 = t1054 * t160 + t1065 * t161 + t319;
t945 = -rSges(7,2) * t1025 + t1016;
t6 = qJD(6) * t158 - qJDD(6) * t351 - t211 * t821 - t395 * t848 + t422 * t853 + t519 * t945 + t557;
t1112 = -g(2) + t6;
t1064 = t1143 * t159 + t1144 * t603 + t1146 * t158 - t1147 * t352 + t1149 * t874 - t1151 * t351;
t1063 = t1096 * t603 + t1142 * t159 - t1148 * t352 + t1150 * t874 - t1152 * t351 - t1156 * t158;
t1062 = -t1025 * t1144 + t1143 * t161 + t1146 * t160 + t1147 * t350 + t1149 * t870 + t1151 * t349;
t1061 = -t1025 * t1096 + t1142 * t161 + t1148 * t350 + t1150 * t870 + t1152 * t349 - t1156 * t160;
t1058 = t1011 * t519 - t1106 * t396 + t1107 * t395;
t1111 = -t1089 * t159 - t1090 * t158 + t1120 * t603 - t1135 * t352 + t1136 * t874 - t1137 * t351;
t1110 = -t1025 * t1120 - t1089 * t161 - t1090 * t160 + t1135 * t350 + t1136 * t870 + t1137 * t349;
t1109 = qJD(3) * t1127 + t1119;
t1108 = qJD(3) * t1128 + t1121;
t649 = t165 * t551 - t177 * t548;
t67 = t171 * t549 + t552 * t649;
t647 = t174 * t551 + t180 * t548;
t69 = t168 * t549 - t552 * t647;
t1103 = t67 + t69;
t646 = t176 * t551 - t181 * t548;
t70 = t170 * t549 - t552 * t646;
t1102 = t68 + t70;
t1101 = qJD(3) * t1130 + t1138 * t549 - t1140 * t552;
t1100 = qJD(3) * t1129 + t1139 * t549 + t1141 * t552;
t1099 = -t1126 * t536 + t1133 * t537;
t1098 = t1126 * t537 + t1133 * t536;
t1009 = t1120 * t549 - t1131 * t552;
t1094 = (t1131 + t1168) * t519 + (t1120 * t536 - t1068 - t646) * t396 + (-t1120 * t537 + t647 - t649) * t395;
t1093 = qJD(1) * t1134 + qJD(3) * t1042 + t1138 * t552 + t1140 * t549;
t1092 = -qJD(3) * t1041 + t1139 * t552 - t1141 * t549 + t1118;
t406 = qJD(1) * t420;
t1007 = -qJD(1) * t380 - t406;
t765 = t512 + t815;
t1088 = -qJD(1) * t402 - t1007 + t513 + t765;
t1087 = t1134 + t1153;
t1085 = -t1132 * t537 + (-t1187 * t536 - t1129 + t1186) * qJD(1);
t1084 = qJD(1) * t1130 - t1132 * t536 + t1118;
t730 = -pkin(2) - t539;
t955 = -rSges(6,3) - pkin(3);
t777 = -pkin(8) + t955;
t1083 = qJD(1) * (t777 * t552 + t730);
t1081 = -t395 * t821 + t853 * t519 - t318;
t1000 = (t1125 * t349 - t1146 - t320 + t912) * t395 - (-t1125 * t351 + t1156 + t322 - t325) * t396 + (t1090 - t1165) * t519;
t1080 = (-t1123 * t350 + t1143 - t323 + t905) * t395 - (t1123 * t352 + t1142 - t321 + t324) * t396 + (-t1089 - t1167) * t519;
t1079 = (t1137 * t551 - t1135 * t548 + (t1089 * t551 + t1090 * t548) * qJD(5) + t1120 * qJD(3)) * t552 + (qJD(3) * t1131 + t1136) * t549;
t1078 = t1166 * t519 + (-t1180 * t352 - t1182 * t351) * t396 + (-t1180 * t350 - t1182 * t349) * t395;
t731 = t530 - t949;
t613 = t402 + t731;
t1077 = t613 + t829;
t1002 = t546 + t421;
t1022 = t384 + t1002;
t1070 = t1022 + t401;
t525 = t536 * rSges(5,1);
t302 = -rSges(5,2) * t870 + rSges(5,3) * t872 + t525;
t144 = t302 + t1022;
t1067 = t1010 * t422 - t1063 * t396 + t1064 * t395 + t1104 * t212 + t1105 * t211 + t1111 * t519;
t1066 = t1011 * t422 - t1061 * t396 + t1062 * t395 + t1106 * t212 + t1107 * t211 + t1110 * t519;
t17 = (-qJD(3) * t649 + t87) * t549 + (qJD(3) * t171 - t548 * t91 + t551 * t83 + (-t165 * t548 - t177 * t551) * qJD(5)) * t552;
t19 = (qJD(3) * t647 + t85) * t549 + (qJD(3) * t168 - t548 * t93 - t551 * t89 + (t174 * t548 - t180 * t551) * qJD(5)) * t552;
t1060 = t17 + t19;
t18 = (qJD(3) * t1068 + t86) * t549 + (qJD(3) * t173 - t548 * t90 + t551 * t82 + (t166 * t548 - t179 * t551) * qJD(5)) * t552;
t20 = (qJD(3) * t646 + t84) * t549 + (qJD(3) * t170 - t548 * t92 - t551 * t88 + (t176 * t548 + t181 * t551) * qJD(5)) * t552;
t1059 = t18 + t20;
t1057 = t1010 * t519 - t1104 * t396 + t1105 * t395;
t1056 = t1009 * t519 - t1102 * t396 + t1103 * t395;
t809 = -t477 * t794 + t473;
t763 = -t454 + t809;
t577 = qJD(1) * t1070 + t763;
t46 = t1081 + t577;
t1055 = t46 * t519;
t942 = rSges(5,2) * t549;
t688 = rSges(5,3) * t552 + t942;
t1047 = t688 * t794;
t1040 = t1090 * t536;
t1039 = t1090 * t537;
t1038 = t1089 * t536;
t1037 = t1089 * t537;
t1033 = t1094 * t552;
t1032 = t1096 * t396 - t1120 * t519 - t1144 * t395;
t998 = t1102 * t536 + t1103 * t537;
t1031 = -t1102 * t537 + t1103 * t536;
t997 = t1104 * t536 + t1105 * t537;
t1030 = -t1104 * t537 + t1105 * t536;
t996 = t1106 * t536 + t1107 * t537;
t1029 = -t1106 * t537 + t1107 * t536;
t1028 = t1093 * t1114 + (t1085 * t536 + (-t1084 + t1092) * t537) * t536;
t1027 = t1084 * t1114 + (t1092 * t536 + (-t1085 + t1093) * t537) * t536;
t400 = t477 * t798;
t485 = qJ(4) * t874;
t377 = -pkin(3) * t875 + t485;
t720 = -qJD(1) * t377 + t537 * t790;
t1024 = t400 - t720;
t524 = t536 * rSges(4,3);
t301 = rSges(4,1) * t870 - rSges(4,2) * t872 + t524;
t235 = t301 + t1002;
t623 = t380 * t794 + t384 * t793 + qJD(2) - t790;
t594 = t401 * t793 - t402 * t794 + t623;
t34 = t395 * t851 + t396 * t853 + t514 + t594;
t729 = -t477 - t954;
t600 = t729 * t793 + t475;
t569 = qJD(1) * t629 + t600;
t45 = -t821 * t396 + t1115 + t569;
t727 = t45 * t821;
t1021 = -t34 * t853 + t727;
t1020 = t34 * t851;
t1018 = t46 * t821;
t419 = t537 * rSges(3,1) - rSges(3,2) * t536;
t393 = t419 + t546;
t868 = t548 * t552;
t772 = t536 * t868;
t1006 = t1065 * t772;
t770 = t537 * t868;
t1005 = t1065 * t770;
t1004 = t1065 * t869 + t543;
t541 = t549 * rSges(5,3);
t689 = -rSges(5,2) * t552 + t541;
t761 = t552 * pkin(8) + t1003;
t999 = t1078 * t552;
t956 = -rSges(7,2) - pkin(3);
t778 = -pkin(8) + t956;
t992 = t778 * t552 + t730;
t989 = t1009 * t422 + t1079 * t519;
t186 = t350 * rSges(6,1) - t349 * rSges(6,2) + rSges(6,3) * t870;
t66 = t186 * t519 - t388 * t395 + t577;
t65 = t1116 + t569;
t927 = t537 * t65;
t988 = t536 * t66 + t927;
t951 = g(2) * t536;
t987 = g(1) * t537 + t951;
t631 = t183 * t793 + t184 * t794 + t403 * t380 + t549 * t782 + qJDD(2);
t823 = -t384 - t401;
t571 = t278 * t794 + t279 * t793 - t403 * t402 + t404 * t823 + t631;
t749 = t549 * t787;
t5 = (-qJD(5) * qJD(6) * t548 + qJDD(6) * t551 - qJDD(4)) * t552 + t945 * t396 - t853 * t212 + t946 * t395 + t851 * t211 - qJD(3) * t749 + t571;
t977 = t34 * t945 + t5 * t853;
t834 = -Icges(5,3) * t874 + t289 - t489;
t836 = t657 * t536 + t287;
t976 = -t549 * t834 - t552 * t836;
t839 = -Icges(4,2) * t874 + t284 - t494;
t841 = t467 * t536 + t282;
t975 = -t549 * t839 - t552 * t841;
t974 = m(5) / 0.2e1;
t973 = m(6) / 0.2e1;
t972 = m(7) / 0.2e1;
t970 = t211 / 0.2e1;
t969 = t212 / 0.2e1;
t968 = -t395 / 0.2e1;
t967 = t395 / 0.2e1;
t966 = -t396 / 0.2e1;
t965 = t396 / 0.2e1;
t964 = t403 / 0.2e1;
t963 = t404 / 0.2e1;
t962 = t422 / 0.2e1;
t961 = -t519 / 0.2e1;
t960 = t519 / 0.2e1;
t953 = g(1) * t536;
t950 = g(3) * t552;
t944 = rSges(4,1) * t552;
t938 = t17 * t395;
t937 = t18 * t396;
t936 = t19 * t395;
t935 = t20 * t396;
t930 = t45 * t537;
t542 = t552 * rSges(6,3);
t926 = t67 * t211;
t925 = t68 * t212;
t924 = t69 * t211;
t923 = t70 * t212;
t921 = -rSges(5,3) - qJ(4);
t55 = t186 * t396 + t190 * t395 + t594;
t891 = qJD(3) * t55;
t805 = rSges(4,2) * t875 + t537 * rSges(4,3);
t300 = rSges(4,1) * t874 - t805;
t703 = -t300 + t733;
t479 = rSges(4,1) * t549 + rSges(4,2) * t552;
t753 = t479 * t793;
t135 = qJD(1) * t703 - t753;
t888 = t135 * t536;
t887 = t135 * t537;
t136 = qJD(1) * t235 - t479 * t794;
t383 = t479 * t537;
t886 = t136 * t383;
t866 = t551 * t552;
t862 = t161 * rSges(6,1) - t160 * rSges(6,2);
t850 = t1054 * t350 - t1065 * t349;
t849 = -t1054 * t352 + t1065 * t351;
t624 = -rSges(7,3) * t866 - t940;
t771 = t536 * t866;
t843 = -qJ(6) * t771 + t536 * t624 + t1006;
t840 = -t467 * t537 - t283;
t838 = -t465 * t537 + t285;
t837 = -t657 * t537 + t286;
t835 = Icges(5,3) * t870 + t288 + t490;
t832 = -t302 - t384;
t831 = t536 * t380 + t537 * t384;
t487 = qJ(4) * t870;
t776 = pkin(3) * t872;
t381 = t487 - t776;
t828 = qJD(1) * t381 + t536 * t790;
t822 = t1054 * t867 - t1004;
t820 = -t689 * qJD(3) - t397;
t818 = -(-pkin(5) * t551 - qJ(6) * t548) * t552 - t416;
t817 = rSges(6,1) * t772 + rSges(6,2) * t771;
t769 = t537 * t866;
t816 = rSges(6,1) * t770 + rSges(6,2) * t769;
t814 = rSges(4,2) * t760 + rSges(4,3) * t797;
t813 = -t655 + t658;
t812 = -t656 - t657;
t811 = -t465 + t468;
t810 = t467 + t665;
t807 = -t477 + t688;
t806 = -t1003 - t689;
t378 = rSges(5,2) * t875 + rSges(5,3) * t874;
t382 = rSges(5,2) * t872 + rSges(5,3) * t870;
t803 = t536 ^ 2 + t1114;
t800 = qJD(1) * t462;
t799 = qJD(1) * t664;
t784 = -m(5) - m(6) - m(7);
t780 = qJDD(4) * t552;
t768 = t66 * t797;
t767 = t537 * t183 + t536 * t184 + t380 * t797;
t766 = t377 * t794 + t381 * t793 + t538;
t764 = t454 - t808;
t386 = rSges(6,1) * t869 + rSges(6,2) * t867 + t542;
t745 = -pkin(2) - t944;
t742 = t797 / 0.2e1;
t741 = -t794 / 0.2e1;
t740 = t794 / 0.2e1;
t739 = -t793 / 0.2e1;
t738 = t793 / 0.2e1;
t737 = -t792 / 0.2e1;
t726 = rSges(5,1) * t537 - rSges(5,3) * t875;
t721 = qJD(3) * t820;
t719 = t537 * t778;
t718 = t537 * t777;
t713 = t537 * t401 - t536 * t402 + t831;
t711 = rSges(5,1) * t797 + rSges(5,2) * t1025 + rSges(5,3) * t751;
t700 = -t388 + t729;
t699 = (rSges(5,2) - pkin(3)) * t552 - pkin(2);
t698 = -pkin(8) * t791 - t397;
t484 = rSges(2,1) * t553 - rSges(2,2) * t550;
t480 = rSges(2,1) * t550 + rSges(2,2) * t553;
t483 = -rSges(4,2) * t549 + t944;
t695 = rSges(6,1) * t159 - rSges(6,2) * t158;
t682 = -t46 * t536 - t930;
t650 = -t136 * t536 - t887;
t645 = t186 * t536 - t190 * t537;
t207 = -rSges(4,1) * t1025 - rSges(4,2) * t751 + t814;
t379 = t479 * t536;
t208 = -qJD(3) * t379 + (t483 * t537 + t524) * qJD(1);
t644 = t207 * t537 + t208 * t536;
t638 = t300 * t536 + t301 * t537;
t303 = rSges(5,2) * t874 + t726;
t630 = t303 + t702;
t627 = t729 - t821;
t417 = (-rSges(6,1) * t551 + rSges(6,2) * t548) * t552;
t244 = qJD(5) * t417 + (t549 * t693 + t542) * qJD(3);
t626 = -t244 + t698;
t622 = t536 * t278 + t537 * t279 - t402 * t797 + t767;
t617 = t793 * t807 + t475;
t614 = t698 - t848;
t605 = t552 * t955 + t730;
t599 = t34 * t946 + t5 * t851;
t593 = -t45 * t851 + t46 * t853;
t592 = t1018 - t1020;
t591 = -t549 * t838 + t552 * t840;
t590 = t549 * t835 + t552 * t837;
t579 = (t549 * t812 + t552 * t813) * qJD(1);
t578 = (-t549 * t810 + t552 * t811) * qJD(1);
t570 = t55 * t645 + (-t536 * t65 + t537 * t66) * t388;
t562 = -t1021 * t536 + t592 * t537;
t430 = t483 * qJD(3);
t348 = t751 - t760;
t346 = t803 * t792;
t271 = -rSges(6,3) * t872 + t816;
t269 = -rSges(6,3) * t875 + t817;
t231 = rSges(6,1) * t351 + rSges(6,2) * t352;
t227 = -rSges(6,1) * t349 - rSges(6,2) * t350;
t210 = -rSges(5,3) * t760 + t711;
t209 = t1047 + (t537 * t689 + t525) * qJD(1);
t134 = qJD(3) * t638 + qJD(2);
t104 = qJD(1) * t144 + t1047 + t809;
t103 = qJD(1) * t630 + t617;
t100 = (t302 * t537 - t303 * t536) * qJD(3) + t623;
t99 = -rSges(6,3) * t1025 + t862;
t97 = rSges(6,3) * t603 + t695;
t76 = qJD(1) * t207 + qJDD(1) * t301 - t403 * t479 - t430 * t794 + t615;
t75 = -t775 - t430 * t793 + t404 * t479 + (-t208 - t398) * qJD(1) + t703 * qJDD(1);
t64 = qJD(3) * t644 + t300 * t403 - t301 * t404 + qJDD(2);
t44 = qJD(1) * t210 + qJDD(1) * t302 + t403 * t807 + t536 * t721 + t576;
t43 = -t404 * t688 + t537 * t721 + t630 * qJDD(1) + (-t209 + t625) * qJD(1) + t616;
t29 = -t780 - t303 * t403 + t832 * t404 + (t209 * t536 + t210 * t537) * qJD(3) + t631;
t22 = t186 * t422 - t211 * t388 - t244 * t395 + t519 * t99 + t557;
t21 = -t422 * t190 + t212 * t388 - t396 * t244 - t519 * t97 + t556;
t8 = -t186 * t212 + t190 * t211 + t395 * t97 + t396 * t99 + t571 - t780;
t1 = [(qJD(3) * t1158 + t1163 * t549 + t1164 * t552) * qJD(1) + (m(2) * (t480 ^ 2 + t484 ^ 2) + m(3) * (t392 ^ 2 + t419 * t393) + Icges(2,3) + Icges(3,3) - t1157) * qJDD(1) + (t1095 + t1041) * t964 + (t203 + t1042) * t963 + t1010 * t969 + t1011 * t970 + t1110 * t967 + (t1111 + t1058) * t966 + t1058 * t965 + (t1099 + t1100) * t740 + (-(-t103 + (t303 - t949) * qJD(1) + t617 + t1007) * t104 - t103 * t808 + t104 * (t711 + t765) + (-t104 * t776 + t103 * (t552 * t921 - t942) * t536) * qJD(3) + ((-t103 * t553 - t104 * t550) * pkin(1) + t103 * (t549 * t921 + t699) * t537 + (t103 * (-rSges(5,1) - pkin(7)) + t104 * (-pkin(2) - t1003 - t541)) * t536) * qJD(1) + (-g(2) + t44) * t144 + (-g(1) + t43) * ((t699 - t539) * t536 + t726 + t731)) * m(5) + (-(-t753 - t135 - t406 + (-t300 - t949) * qJD(1)) * t136 + t136 * (t512 + t814) + (t479 * t888 - t886) * qJD(3) + ((-t135 * t553 - t136 * t550) * pkin(1) + (-pkin(2) - t483) * t887 + (t135 * (-rSges(4,3) - pkin(7)) + t136 * t745) * t536) * qJD(1) + (t76 - g(2)) * t235 + (t75 - g(1)) * (t536 * t745 + t731 + t805)) * m(4) - t937 / 0.2e1 + t938 / 0.2e1 - t935 / 0.2e1 + t936 / 0.2e1 - m(2) * (-g(1) * t480 + g(2) * t484) + ((t1086 * t536 + ((t1154 + t1185) * t537 + t1045 + t1170 + t1179) * t537) * qJD(3) + t1121) * t738 - t404 * t206 / 0.2e1 + (t1098 - t1101 + t1108) * t739 + ((-t418 * t555 - g(2) + t704) * t393 + (-t775 + (-0.2e1 * t419 - t546 + t393) * t555 - g(1)) * t392) * m(3) + (t1018 * t396 + t992 * t930 * qJD(1) + t1112 * (t1070 + t853) + (t536 * t7 - t953) * (t552 * t956 + t730) + t1113 * (t613 + t1082) + (pkin(8) * t752 + t477 * t793 + t719 * t792 + t798 * t992 + t1016 + t1088 - t1115 - t475) * t46 + (t763 + t764 + t1017 + (-t893 + t940) * t794 + (t1070 + t1117) * qJD(1) + t1081) * t45) * m(7) + (t927 * t1083 + (t536 * t605 + t1077) * t21 + (-t695 + t764 + (-t893 + t939) * t794 + t1117 * qJD(1)) * t65 - g(1) * t1077 - t605 * t953 + (t1083 * t536 + t718 * t792 + t1088 - t1116 - t600 + t65 + t862) * t66 + (t22 - g(2)) * (t1070 + t186)) * m(6) + (((t1087 * t537 + t1043 - t1086) * t537 + (t1087 * t536 + t1044 + t1171) * t536) * qJD(3) + t1109 - t1119) * t741 + t925 / 0.2e1 + t926 / 0.2e1 + t923 / 0.2e1 + t924 / 0.2e1 + t989; m(3) * qJDD(2) + (-m(3) - m(4) + t784) * g(3) + m(4) * t64 + m(5) * t29 + m(6) * t8 + m(7) * t5; (qJD(1) * t997 - t1063 * t537 + t1064 * t536) * t966 + (qJD(1) * t998 - t1059 * t537 + t1060 * t536) * t960 + (qJD(1) * t996 - t1061 * t537 + t1062 * t536) * t967 - t1056 * t788 / 0.2e1 + (t1041 * t536 - t1042 * t537) * qJDD(1) / 0.2e1 + ((t1043 * t537 + t1044 * t536) * qJD(1) + t1028) * t740 + ((t1045 * t537 + t1046 * t536) * qJD(1) + t1027) * t739 + t1030 * t969 + t1031 * t962 + t1029 * t970 + (-g(1) * (t487 + t1005) - g(2) * (t485 + t1006) - g(3) * (t761 + t1004) - (g(1) * t719 + t778 * t951) * t549 + (g(3) * t867 + t866 * t987) * t1054 - t46 * (-pkin(8) * t758 - t514 * t536 + t828) - t34 * (-t749 + t766) - (t34 * t843 + t46 * t822) * t395 - (t682 * t1003 + (-t34 * t549 * t803 + t552 * t682) * pkin(8)) * qJD(3) - (t549 * t562 + t552 * t593) * qJD(5) + t5 * t713 + t34 * t622 + (t7 * t627 + (t46 * t627 + t1020) * qJD(1) + t977) * t537 + (t6 * t627 + t46 * t614 + (t727 + t34 * (t823 - t853)) * qJD(1) + t599) * t536 + (-t34 * t396 - t1055) * (-qJ(6) * t769 + t537 * t624 + t1005) + (-t822 * t396 + t843 * t519 + (t514 + t614) * t537 + t1024) * t45) * m(7) + (t1057 + t1109) * t798 / 0.2e1 + (qJD(1) * t1099 + t1028 * qJD(3) + qJDD(1) * t1095 + t1043 * t403 + t1044 * t404 + t1066) * t536 / 0.2e1 + (t1101 * t537 + t1100 * t536 + (t1041 * t537 + t1042 * t536) * qJD(1)) * qJD(1) / 0.2e1 + (t1057 * t536 + t1058 * t537) * t789 / 0.2e1 - (t1098 * qJD(1) + t1027 * qJD(3) + qJDD(1) * t1155 + t1045 * t403 + t1046 * t404 + t1067) * t537 / 0.2e1 + (t8 * t713 + (t8 * t186 + (qJD(1) * t66 + t21) * t700) * t537 + (t8 * t190 + t22 * t700 + t66 * t626) * t536 - t66 * (t186 * t788 + t271 * t519 - t386 * t395 + t828) + t988 * qJD(3) * t761 - g(1) * (t487 + t816) - g(2) * (t485 + t817) - g(3) * (t761 + t386) + (t190 * t788 + t269 * t519 + t386 * t396 + t388 * t798 + t537 * t626 + t1024) * t65 + (t622 + (qJD(1) * t190 + t99) * t537 + (t97 + (-t186 + t823) * qJD(1)) * t536 - t269 * t395 - t271 * t396 - t766) * t55 + (-(-t803 * t891 - t768) * pkin(8) - t570 * qJD(5) - g(1) * t718 - t777 * t951) * t549) * m(6) + ((t1010 * t552 - t1105 * t872) * qJD(5) + ((-qJD(5) * t1104 + t1032) * t549 + t1033) * t536 + (-t1034 * t352 - t1035 * t351) * t519 + (t1038 * t352 + t1040 * t351) * t396 + (-t1037 * t352 - t1039 * t351) * t395) * t965 + ((t1011 * t552 - t1106 * t875) * qJD(5) + ((-qJD(5) * t1107 + t1032) * t549 + t1033) * t537 + (t1034 * t350 + t1035 * t349) * t519 + (-t1038 * t350 - t1040 * t349) * t396 + (t1037 * t350 + t1039 * t349) * t395) * t968 + (t1058 + t1108) * t742 + (((-t1034 * t548 + t1035 * t551 + t1120) * t519 + (t1038 * t548 - t1040 * t551 - t1096) * t396 + (-t1037 * t548 + t1039 * t551 + t1144) * t395 + t1009 * qJD(5)) * t552 + (-qJD(5) * t998 + t1094) * t549) * t961 + (-t103 * (-qJD(1) * t378 + t720) - t104 * (qJD(1) * t382 + t828) - t100 * t766 - ((t100 * t382 + t103 * t806) * t537 + (t100 * t378 + t104 * t806) * t536) * qJD(3) + t103 * t400 + t29 * t831 + t100 * t767 + (t43 * t807 + t103 * t820 + t29 * t302 + t100 * t210 + (-t100 * t303 + t104 * t807) * qJD(1)) * t537 + (t44 * t807 + t104 * t820 - t29 * t303 + t100 * t209 + (t100 * t832 - t103 * t688) * qJD(1)) * t536 - g(1) * (t381 + t382) - g(2) * (t377 + t378) + g(3) * t806) * m(5) - ((((-t834 - t839) * t537 + (-t835 + t838) * t536) * t552 + ((t836 + t841) * t537 + (t837 + t840) * t536) * t549) * qJD(3) + ((t810 - t812) * t552 + (t811 + t813) * t549) * qJD(1)) * qJD(1) / 0.2e1 + ((-t794 * t877 + t800) * t536 + (t578 + (-t975 * t537 + (t878 + t591) * t536) * qJD(3)) * t537 + (t372 * t794 - t799) * t536 + (t579 + (-t976 * t537 + (-t371 + t590) * t536) * qJD(3)) * t537) * t741 + ((t371 * t793 + t799) * t537 + (t579 + (t590 * t536 + (-t372 - t976) * t537) * qJD(3)) * t536 + (-t793 * t878 - t800) * t537 + (t578 + (t591 * t536 + (t877 - t975) * t537) * qJD(3)) * t536) * t738 + (g(1) * t383 + g(2) * t379 - g(3) * t483 + t64 * t638 + t134 * ((t300 * t537 - t301 * t536) * qJD(1) + t644) + t650 * t430 + (-t76 * t536 - t75 * t537 + (-t136 * t537 + t888) * qJD(1)) * t479 - (t135 * t379 - t886) * qJD(1) - (t134 * (-t379 * t536 - t383 * t537) + t650 * t483) * qJD(3)) * m(4) + t1127 * t963 + t1128 * t964; t784 * (t549 * t987 - t950) - m(5) * (t100 * t346 + t103 * t348 + t104 * t347) - m(6) * (t346 * t55 + t347 * t66 + t348 * t65) - m(7) * (t34 * t346 + t347 * t46 + t348 * t45) + 0.2e1 * ((t103 * t793 + t104 * t794 - t29) * t974 + (t65 * t793 + t66 * t794 - t8) * t973 + (t45 * t793 + t46 * t794 - t5) * t972) * t552 + 0.2e1 * ((qJD(3) * t100 - t103 * t798 + t104 * t797 + t43 * t537 + t44 * t536) * t974 + (t21 * t537 + t22 * t536 - t65 * t798 + t768 + t891) * t973 + (qJD(3) * t34 - t45 * t798 + t46 * t797 + t536 * t6 + t537 * t7) * t972) * t549; (t1011 * t549 + t552 * t996) * t970 + (t1010 * t549 + t552 * t997) * t969 + (-t1000 * t350 - t1080 * t349 + t999 * t537) * t968 + ((-qJD(1) * t1029 + t1011 * qJD(3) + t1061 * t536 + t1062 * t537) * t552 + (-qJD(3) * t996 + t1110) * t549) * t967 + ((-qJD(1) * t1030 + t1010 * qJD(3) + t1063 * t536 + t1064 * t537) * t552 + (-qJD(3) * t997 + t1111) * t549) * t966 + (t1000 * t352 + t1080 * t351 + t999 * t536) * t965 + (t1009 * t549 + t552 * t998) * t962 + ((t1000 * t548 - t1080 * t551) * t552 + t1078 * t549) * t961 + ((-qJD(1) * t1031 + t1009 * qJD(3) + t1059 * t536 + t1060 * t537) * t552 + (-qJD(3) * t998 + t1079) * t549) * t960 + (t925 + t926 - t937 + t938 + t923 + t924 - t935 + t936 + t989) * t549 / 0.2e1 + t1067 * t874 / 0.2e1 + t1066 * t870 / 0.2e1 + t1056 * t791 / 0.2e1 + (-(-t34 * t868 + t350 * t45 - t352 * t46) * qJD(6) - (-t45 * t849 + t46 * t850) * t519 - (t34 * t850 + t45 * t818) * t396 - (t34 * t849 + t46 * t818) * t395 + (qJD(3) * t562 - t45 * t946 + t46 * t945 + t6 * t853 - t7 * t851) * t549 + (t593 * qJD(3) + (qJD(1) * t1021 - t46 * t848 - t6 * t821 + t599) * t537 + (qJD(1) * t592 + t45 * t848 + t7 * t821 - t977) * t536) * t552 - g(1) * t850 - g(2) * t849 - (-t1054 * t548 - t1065 * t551) * t950) * m(7) + ((qJD(3) * t570 + t22 * t186 - t21 * t190 - t65 * t97 + t66 * t99) * t549 + (t65 * (-qJD(3) * t190 + t244 * t536) + t66 * (qJD(3) * t186 - t244 * t537) - t8 * t645 + t55 * (-t186 * t797 - t190 * t798 - t536 * t99 + t537 * t97) + (qJD(1) * t988 + t21 * t536 - t22 * t537) * t388) * t552 - g(1) * t227 - g(2) * t231 - g(3) * t417 - t65 * (-t231 * t519 - t396 * t417) - t66 * (t227 * t519 - t395 * t417) - t55 * (t227 * t396 + t231 * t395)) * m(6) + t1058 * (t537 * t737 - t759 / 0.2e1) + t1057 * (t536 * t737 + t552 * t742); (t158 * t46 + t160 * t45 + (-t45 * t519 - t1112) * t351 + (t395 * t46 + t396 * t45 - g(3) + t5) * t866 + (-t1055 + t1113) * t349 + (-t349 * t396 + t351 * t395 + t601) * t34) * m(7);];
tau  = t1;
