% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:13:04
% EndTime: 2019-03-09 03:13:13
% DurationCPUTime: 3.51s
% Computational Cost: add. (3244->361), mult. (5581->448), div. (0->0), fcn. (4777->6), ass. (0->279)
t195 = sin(qJ(5));
t197 = cos(qJ(5));
t297 = t197 * qJ(6);
t142 = -t195 * pkin(5) + t297;
t133 = qJ(4) - t142;
t198 = cos(qJ(3));
t294 = t198 * t133;
t196 = sin(qJ(3));
t199 = -pkin(3) - pkin(8);
t298 = t196 * t199;
t347 = t298 / 0.2e1 + t294 / 0.2e1;
t293 = t198 * t199;
t190 = t195 ^ 2;
t192 = t197 ^ 2;
t286 = t190 + t192;
t270 = t195 * qJD(6);
t220 = qJD(5) * t142 + t270;
t332 = t196 * pkin(5);
t173 = -cos(pkin(9)) * pkin(1) - pkin(2);
t321 = qJ(4) * t196;
t219 = t173 - t321;
t84 = t219 + t293;
t172 = sin(pkin(9)) * pkin(1) + pkin(7);
t331 = pkin(4) + t172;
t119 = t331 * t196;
t97 = t197 * t119;
t58 = t195 * t84 - t97;
t52 = t58 - t332;
t344 = t52 / 0.2e1;
t262 = -t58 / 0.2e1 + t344;
t301 = t196 * qJ(6);
t310 = t119 * t195;
t59 = t197 * t84 + t310;
t51 = t59 + t301;
t263 = t51 / 0.2e1 - t59 / 0.2e1;
t10 = (t301 / 0.2e1 + t263) * t197 + (-t332 / 0.2e1 + t262) * t195;
t313 = t10 * qJD(1);
t346 = t220 + t313;
t154 = t190 - t192;
t268 = t198 * qJD(1);
t261 = t195 * t268;
t230 = t197 * t261;
t207 = qJD(3) * t154 + 0.2e1 * t230;
t345 = pkin(5) / 0.2e1;
t144 = t198 * t172;
t187 = t198 * pkin(4);
t120 = t144 + t187;
t184 = t198 * qJ(6);
t169 = t195 * t184;
t296 = t197 * t198;
t171 = pkin(5) * t296;
t287 = t169 + t171;
t75 = t287 + t120;
t343 = t75 / 0.2e1;
t118 = t142 * t198;
t342 = t118 / 0.2e1;
t295 = t198 * qJ(4);
t143 = -t196 * pkin(3) + t295;
t124 = pkin(8) * t196 - t143;
t341 = t124 / 0.2e1;
t340 = -t190 / 0.2e1;
t339 = -t195 / 0.2e1;
t338 = -t196 / 0.2e1;
t337 = t196 / 0.2e1;
t336 = -t198 / 0.2e1;
t335 = t198 / 0.2e1;
t334 = pkin(3) * t198;
t333 = pkin(5) * t197;
t304 = t195 * t124;
t88 = -t304 / 0.2e1;
t99 = t120 * t197;
t330 = t99 / 0.2e1 + t88;
t203 = t262 * t195 + t263 * t197;
t6 = t118 * t338 + t203 * t198;
t329 = qJD(1) * t6;
t328 = t196 * t58;
t327 = t196 * t59;
t326 = t51 * t196;
t104 = t197 * t124;
t98 = t120 * t195;
t322 = t104 + t98;
t60 = t184 + t322;
t325 = t60 * t195;
t186 = t198 * pkin(5);
t236 = -t99 + t304;
t62 = -t186 + t236;
t324 = t62 * t197;
t323 = t75 * t197;
t24 = (t52 * t195 + t51 * t197) * t196;
t320 = qJD(1) * t24;
t27 = -t327 + (t118 * t197 - t75 * t195) * t198;
t319 = qJD(1) * t27;
t311 = t118 * t195;
t28 = -t328 + (t311 + t323) * t198;
t318 = qJD(1) * t28;
t302 = t195 * t198;
t29 = t75 * t302 + t326;
t317 = qJD(1) * t29;
t30 = t120 * t296 - t328;
t316 = qJD(1) * t30;
t31 = -t120 * t302 - t327;
t315 = qJD(1) * t31;
t314 = qJD(5) * t58;
t303 = t195 * t196;
t11 = t297 * t338 + t303 * t345 + t203;
t312 = t11 * qJD(5);
t12 = -t51 * t302 + (t195 * t59 + (t52 - t58) * t197) * t198;
t309 = t12 * qJD(1);
t13 = (t60 * t198 - t326) * t197 + (-t52 * t196 + t62 * t198) * t195;
t308 = t13 * qJD(1);
t305 = t195 * qJ(6);
t141 = t305 + t333;
t74 = (-t141 - t331) * t196;
t14 = t196 * t60 + t51 * t198 + (-t196 * t75 + t198 * t74) * t195;
t307 = t14 * qJD(1);
t15 = (t74 * t197 - t52) * t198 + (-t62 - t323) * t196;
t306 = t15 * qJD(1);
t300 = t196 * t197;
t299 = t196 * t198;
t20 = (-t58 - t97) * t198 + (-t236 - t99) * t196;
t292 = t20 * qJD(1);
t21 = t322 * t196 - t120 * t303 + (t59 - t310) * t198;
t291 = t21 * qJD(1);
t117 = t219 - t334;
t70 = t117 * t198 - t143 * t196;
t290 = t70 * qJD(1);
t71 = -t117 * t196 - t143 * t198;
t289 = t71 * qJD(1);
t96 = t286 * t299;
t288 = t96 * qJD(1);
t191 = t196 ^ 2;
t193 = t198 ^ 2;
t155 = t193 - t191;
t128 = t155 * t195;
t285 = qJD(1) * t128;
t130 = t155 * t197;
t284 = qJD(1) * t130;
t283 = qJD(1) * t196;
t282 = qJD(1) * t197;
t281 = qJD(3) * qJ(4);
t280 = qJD(3) * t133;
t279 = qJD(3) * t199;
t183 = qJD(4) * t195;
t278 = qJD(4) * t196;
t277 = qJD(4) * t197;
t275 = qJD(5) * t196;
t274 = qJD(5) * t197;
t273 = qJD(5) * t199;
t272 = t155 * qJD(1);
t271 = t191 * qJD(1);
t178 = t195 * qJD(3);
t180 = t196 * qJD(3);
t179 = t196 * qJD(6);
t181 = t197 * qJD(3);
t269 = t197 * qJD(6);
t182 = t198 * qJD(3);
t267 = t198 * qJD(4);
t266 = t198 * qJD(5);
t265 = -t184 - t98 / 0.2e1;
t264 = -t323 / 0.2e1 + t347 * t195;
t260 = t172 * t180;
t259 = t191 * t277;
t258 = t196 * t277;
t257 = t195 * t275;
t256 = t195 * t266;
t255 = t195 * t273;
t254 = t196 * t274;
t253 = t197 * t266;
t252 = t197 * t273;
t251 = t195 * t269;
t250 = t117 * t143 * qJD(1);
t249 = t117 * t283;
t248 = t173 * t283;
t247 = t173 * t268;
t246 = t195 * t283;
t165 = t196 * t182;
t164 = t196 * t268;
t245 = t195 * t274;
t166 = t195 * t181;
t244 = t196 * t282;
t243 = t198 * t269;
t242 = t141 * t335;
t241 = -t298 / 0.2e1;
t239 = -t295 / 0.2e1;
t237 = t192 / 0.2e1 + t340;
t102 = (-0.1e1 / 0.2e1 + t237) * t198;
t235 = qJD(1) * t102 + t166;
t122 = t237 * t198;
t234 = qJD(1) * t122 + t166;
t136 = t195 * t193 * t282;
t233 = qJD(3) * t122 - t136;
t170 = qJD(5) + t283;
t232 = qJD(4) - t269;
t231 = t198 * t166;
t216 = t325 / 0.2e1 - t324 / 0.2e1;
t4 = (-t75 / 0.2e1 + t216) * t198 + (t51 * t339 - t74 / 0.2e1 + t197 * t344) * t196;
t5 = t51 * t60 + t52 * t62 + t74 * t75;
t229 = t5 * qJD(1) - t4 * qJD(2);
t7 = t118 * t75 - t51 * t58 + t52 * t59;
t228 = t7 * qJD(1) - t6 * qJD(2);
t227 = -t324 + t325;
t79 = t96 - t299;
t226 = -t4 * qJD(1) - t79 * qJD(2);
t225 = (t239 + t241) * t197;
t201 = (t242 + t343) * t195 + (-t118 / 0.2e1 + t347) * t197;
t90 = -t104 / 0.2e1;
t17 = t90 + t201 + t265;
t77 = -t133 * t195 + t141 * t197;
t224 = -t17 * qJD(1) + t77 * qJD(3);
t138 = t195 * t241;
t209 = t197 * t242 + t138 + t323 / 0.2e1 + t294 * t339;
t87 = -t99 / 0.2e1;
t19 = -t186 + t87 + (t342 + t341) * t195 + t209;
t76 = t133 * t197 + t141 * t195;
t223 = -t19 * qJD(1) - t76 * qJD(3);
t126 = t170 * t195;
t222 = t271 + t275;
t221 = qJD(3) * t143 + t278;
t218 = -t60 * qJ(6) / 0.2e1 + t62 * t345;
t217 = t333 / 0.2e1 + t305 / 0.2e1;
t215 = t144 / 0.2e1 + t169 / 0.2e1 + t171 / 0.2e1 + t187 / 0.2e1;
t89 = t104 / 0.2e1;
t64 = t89 + t225;
t214 = qJ(4) * t178 - t64 * qJD(1);
t63 = t138 + (t239 + t341) * t195;
t213 = -qJ(4) * t181 - t63 * qJD(1);
t26 = t186 / 0.2e1 + t264 + t330;
t212 = -t26 * qJD(1) + t133 * t181;
t211 = -qJD(5) * t10 - t195 * t179;
t210 = t198 * t126;
t129 = t154 * t193;
t208 = -qJD(1) * t129 + 0.2e1 * t231;
t101 = (0.1e1 / 0.2e1 + t340 - t192 / 0.2e1) * t196;
t23 = t215 - t216;
t206 = qJD(1) * t23 + qJD(2) * t101 + t280;
t200 = t133 * t342 + t141 * t343 + t203 * t199;
t3 = t200 + t218;
t72 = (-t141 / 0.2e1 + t217) * t196;
t205 = t3 * qJD(1) - t72 * qJD(2) + t141 * t280;
t204 = (-t321 - t334) * qJD(3) + t267;
t135 = t190 * t193 + t191;
t202 = -qJD(1) * t135 + t231 - t275;
t174 = t182 / 0.2e1;
t168 = t197 * t267;
t167 = t197 * t182;
t163 = t195 * t182;
t162 = t195 * t180;
t161 = t195 * t278;
t160 = t191 * t183;
t150 = t197 * t293;
t134 = t170 * qJ(6);
t132 = t172 * t182;
t127 = t170 * t197;
t125 = t164 + t266 / 0.2e1;
t116 = -t162 + t253;
t115 = t163 + t254;
t114 = t196 * t181 + t256;
t113 = -t167 + t257;
t112 = t222 * t197;
t111 = t197 * t271 - t163;
t110 = t222 * t195;
t109 = t195 * t271 + t167;
t108 = -qJD(3) * t192 + t230;
t107 = t122 * qJD(5);
t103 = t190 * t335 + t192 * t336 + t336;
t100 = (0.1e1 + t286) * t337;
t92 = t170 * t296;
t91 = t198 * t244 + t162;
t73 = t141 * t337 + t217 * t196;
t56 = t59 * qJD(5);
t33 = -t98 + t90 + t225;
t32 = t195 * t239 + t138 + t88 + t99;
t25 = t304 / 0.2e1 + t87 - t186 / 0.2e1 + t264;
t22 = t215 + t216;
t18 = t311 / 0.2e1 + t186 + t209 + t330;
t16 = t89 + t201 - t265;
t2 = t200 - t218;
t1 = -qJD(3) * t4 - qJD(5) * t6;
t8 = [0, 0, 0, 0, t165, t155 * qJD(3), 0, 0, 0, t173 * t180, t173 * t182, 0, qJD(3) * t71 - t196 * t267, -qJD(3) * t70 + qJD(4) * t191, -t221 * t117, -t165 * t190 + t193 * t245, -qJD(5) * t129 - 0.2e1 * t196 * t231, -qJD(3) * t128 - t196 * t253, -qJD(3) * t130 + t196 * t256, t165, qJD(3) * t20 + qJD(5) * t31 + t160, -qJD(3) * t21 - qJD(5) * t30 + t259, qJD(3) * t15 + qJD(5) * t27 + t193 * t251 + t160, -qJD(3) * t13 + qJD(4) * t96 - qJD(5) * t12 - t196 * t243, qJD(3) * t14 + qJD(5) * t28 + qJD(6) * t135 - t259, qJD(3) * t5 - qJD(4) * t24 + qJD(5) * t7 + qJD(6) * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, t164, t272, t182, -t180, 0, -t132 + t248, t247 + t260, t204, t132 + t289, -t260 - t290, t172 * t204 - t250, -t107 + (-t190 * t268 + t166) * t196, -t196 * t207 + 0.2e1 * t198 * t245, t167 - t285, -t163 - t284, t125, t292 + (-qJ(4) * t300 + t150 - t310) * qJD(3) + t168 + t32 * qJD(5), -t119 * t181 - t291 + t33 * qJD(5) + ((-t293 + t321) * qJD(3) - t267) * t195, t306 + (-t133 * t300 + t195 * t74 + t150) * qJD(3) + t168 + t18 * qJD(5) + t103 * qJD(6), -qJD(3) * t227 - t308 - t312, -t74 * t181 + t307 + t16 * qJD(5) + (-t133 * t180 + (t232 + t279) * t198) * t195 (t74 * t133 + t199 * t227) * qJD(3) + t22 * qJD(4) + t2 * qJD(5) + t25 * qJD(6) + t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, -t164, t271, t132 - t249, 0, 0, 0, 0, 0, t109, t111, t109, t288, -t111, qJD(3) * t22 + t312 - t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t233, t208, -t92, t210, t174, qJD(3) * t32 + t315 - t56, qJD(3) * t33 + t314 - t316, t18 * qJD(3) + t319 - t56, -t11 * qJD(3) + qJD(5) * t287 - t243 - t309, qJD(3) * t16 + t179 - t314 + t318, t2 * qJD(3) + t11 * qJD(4) + (-pkin(5) * t59 - qJ(6) * t58) * qJD(5) + t51 * qJD(6) + t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t103 + t136, -t92, -t202, qJD(3) * t25 + qJD(5) * t51 + t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t79 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t182, 0, t180, t182, t221, 0, 0, 0, 0, 0, t115, -t113, t115, -t286 * t180, t113, t133 * t182 + t100 * qJD(4) + t73 * qJD(5) + (t279 * t286 - t269) * t196 + t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t116, t114, 0, -t116, qJD(3) * t73 - qJD(5) * t118 - t198 * t270 - t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114; 0, 0, 0, 0, -t164, -t272, 0, 0, 0, -t248, -t247, 0, -t289, t290, t250, t164 * t190 - t107, 0.2e1 * t197 * t210, -t257 + t285, -t254 + t284, -t125, qJD(5) * t63 - t292, qJD(5) * t64 + t291, qJD(5) * t19 - qJD(6) * t102 - t306, t211 + t308, qJD(5) * t17 - t195 * t243 - t307, qJD(4) * t23 + qJD(5) * t3 + qJD(6) * t26 - t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t101 - qJD(5) * t72 - t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t245, t154 * qJD(5), 0, 0, 0, qJ(4) * t274 + t183, -qJ(4) * qJD(5) * t195 + t277, qJD(5) * t76 + t183 - t251, 0, -qJD(5) * t77 + qJD(6) * t192 - t277 (qJD(5) * t141 + t232) * t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t281, 0, 0, 0, 0, 0, t178, t181, t178, 0, -t181, t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t234, t207, -t126, -t127, -t268 / 0.2e1, -t213 - t255, -t214 - t252, -t223 - t255, -t346, -t224 + t252, t199 * t220 + t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, -t126, -t108, -t212 + t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t271, t249, 0, 0, 0, 0, 0, -t110, -t112, -t110, -t288, t112, -qJD(3) * t23 - t211 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t281, 0, 0, 0, 0, 0, -t178, -t181, -t178, 0, t181, -t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, -t127, -t126, 0, t127, t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, -t208, t91 (-t261 + t181) * t196, t174, -qJD(3) * t63 + t161 - t315, -qJD(3) * t64 + t258 + t316, -qJD(3) * t19 + t161 - t319, qJD(3) * t10 + t309, -qJD(3) * t17 + t179 - t258 - t318, qJ(6) * t179 - qJD(3) * t3 - qJD(4) * t10 - t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t72 + t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t234, -t207, t246, t244, t268 / 0.2e1, t213, t214, t223, t313, t224, -t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, t244, t246, 0, -t244, -t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t102 - t136, t91, t202, -qJ(6) * t275 - qJD(3) * t26 - t161 - t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, t246, t108, t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
