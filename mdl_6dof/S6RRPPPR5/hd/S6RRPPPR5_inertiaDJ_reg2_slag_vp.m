% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPPR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR5_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:23:45
% EndTime: 2019-03-09 08:23:53
% DurationCPUTime: 2.91s
% Computational Cost: add. (1719->279), mult. (4052->485), div. (0->0), fcn. (3301->6), ass. (0->135)
t91 = sin(pkin(9));
t87 = t91 ^ 2;
t92 = cos(pkin(9));
t88 = t92 ^ 2;
t168 = (t87 + t88) * qJD(3);
t94 = sin(qJ(2));
t95 = cos(qJ(2));
t116 = qJD(2) * (t94 ^ 2 - t95 ^ 2);
t166 = 0.2e1 * t116;
t165 = pkin(4) + pkin(8);
t150 = pkin(3) + qJ(5);
t153 = t92 * t94;
t164 = pkin(4) * t153 + t95 * qJ(5);
t120 = pkin(7) * t92 - qJ(4);
t163 = t120 * t95;
t162 = t150 * t92;
t113 = -pkin(5) + t120;
t141 = t94 * qJ(3);
t109 = -pkin(2) * t95 - t141;
t58 = -pkin(1) + t109;
t161 = t113 * t95 + (-t165 * t94 + t58) * t91;
t157 = cos(qJ(6));
t118 = qJD(6) * t157;
t93 = sin(qJ(6));
t139 = qJD(6) * t93;
t41 = t92 * t118 - t91 * t139;
t51 = t157 * t92 - t93 * t91;
t149 = pkin(4) + qJ(3);
t130 = pkin(8) + t149;
t158 = pkin(2) * t94;
t160 = t130 * t95 - t158;
t35 = t91 * t166;
t36 = t92 * t166;
t49 = -0.2e1 * t168;
t137 = t91 * qJD(4);
t56 = qJD(5) * t92 + t137;
t159 = 0.2e1 * t56;
t156 = t91 * t58;
t155 = t91 * t94;
t154 = t91 * t95;
t152 = t92 * t95;
t148 = -pkin(5) - qJ(4);
t134 = t95 * qJD(2);
t71 = t92 * t134;
t147 = -qJ(4) * t71 - qJD(4) * t153;
t146 = pkin(3) * t155 + t94 * pkin(7);
t145 = qJ(3) * t168;
t81 = t91 * qJ(3);
t61 = t91 * pkin(4) + t81;
t143 = qJ(3) * t95;
t142 = qJ(5) * t91;
t140 = t94 * qJ(4);
t138 = t87 * qJD(4);
t80 = t91 * qJD(3);
t136 = t92 * qJD(3);
t82 = t94 * qJD(2);
t135 = t94 * qJD(3);
t132 = pkin(7) * t152;
t75 = pkin(7) * t154;
t131 = -0.2e1 * pkin(1) * qJD(2);
t129 = pkin(7) * t134;
t127 = t91 * t82;
t67 = t91 * t134;
t126 = t91 * t135;
t125 = t92 * t135;
t124 = t94 * t134;
t123 = -t91 * pkin(7) - pkin(3);
t62 = t149 * t92;
t121 = qJ(4) * t91 + pkin(2);
t30 = t58 * t92 - t75;
t119 = qJD(2) * t157;
t117 = t157 * qJD(3);
t115 = 0.2e1 * t124;
t57 = t91 * t71;
t114 = t130 * t92;
t86 = t95 * pkin(3);
t29 = -t30 + t86;
t111 = t150 * t91 + pkin(7);
t110 = t94 * t57;
t108 = -t143 + t158;
t98 = pkin(7) * t155 + t92 * t108;
t25 = t98 * qJD(2) - t125;
t97 = -pkin(7) * t153 + t91 * t108;
t26 = t97 * qJD(2) - t126;
t107 = -t25 * t91 + t26 * t92;
t106 = -t92 * pkin(2) + t123;
t105 = qJD(5) * t155 + t147;
t50 = t157 * t91 + t93 * t92;
t102 = t157 * t114;
t101 = -t95 * qJD(4) - t126;
t100 = t95 * qJD(5) + t125;
t52 = -pkin(3) * t92 - t121;
t99 = (-t52 * t95 + t141) * qJD(2);
t40 = t50 * qJD(6);
t96 = t157 * t161;
t14 = t75 + t86 + (pkin(8) * t94 - t58) * t92 + t164;
t4 = t157 * t14 + t161 * t93;
t70 = t92 * t82;
t66 = t95 * t80;
t65 = -0.2e1 * t124;
t54 = t88 * t115;
t53 = t87 * t115;
t48 = -0.4e1 * t110;
t47 = t91 * pkin(8) + t61;
t46 = t95 * t118 - t93 * t82;
t45 = t94 * t119 + t95 * t139;
t44 = t121 + t162;
t39 = (-t87 + t88) * t134;
t38 = t50 * t94;
t37 = t51 * t94;
t33 = -t92 * t140 + t146;
t32 = t148 * t91 - pkin(2) - t162;
t31 = t132 + t156;
t28 = -t156 - t163;
t27 = (qJ(4) * t92 - t142) * t94 - t146;
t24 = (pkin(3) * t91 + pkin(7)) * t134 + t147;
t23 = t163 + (-pkin(4) * t94 + t58) * t91;
t22 = (t148 * t92 + t142) * t94 + t146;
t21 = t125 + (t106 * t94 + t92 * t143) * qJD(2);
t20 = t93 * t114 + t157 * t47;
t19 = -t93 * t47 + t102;
t18 = t29 + t164;
t17 = (t95 * t81 + (-pkin(2) * t91 + t120) * t94) * qJD(2) - t101;
t16 = t50 * t134 + t41 * t94;
t15 = -t119 * t152 + t94 * t40 + t93 * t67;
t13 = t111 * t134 + t105;
t12 = (-t120 * t94 + (-t149 * t95 + t158) * t91) * qJD(2) + t101;
t10 = (t95 * t62 + (-qJ(5) + t106) * t94) * qJD(2) + t100;
t9 = -t47 * t118 - t93 * t80 + (-t130 * t139 + t117) * t92;
t8 = -qJD(6) * t102 - t91 * t117 - t93 * t136 + t47 * t139;
t7 = (-pkin(5) * t92 + t111) * t134 + t105;
t3 = -t93 * t14 + t96;
t2 = -t93 * t100 + t157 * t101 - t4 * qJD(6) + (-t93 * (-t150 * t94 + t165 * t152 - t98) + t157 * (t94 * pkin(5) - t165 * t154 + t140 + t97)) * qJD(2);
t1 = t14 * t139 - qJD(6) * t96 - t93 * ((-t113 * t94 - t160 * t91) * qJD(2) + t101) - t157 * (((-qJ(5) + t123) * t94 + t160 * t92) * qJD(2) + t100);
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, -0.2e1 * t116, 0, t65, 0, 0, t94 * t131, t95 * t131, 0, 0, t54, t48, t36, t53, -t35, t65, -0.2e1 * t25 * t95 + 0.2e1 * (t30 + 0.2e1 * t75) * t82, 0.2e1 * t26 * t95 + 0.2e1 * (-t31 + 0.2e1 * t132) * t82, 0.2e1 * (-t25 * t92 - t26 * t91) * t94 + 0.2e1 * (-t30 * t92 - t31 * t91) * t134, 0.2e1 * pkin(7) ^ 2 * t124 + 0.2e1 * t30 * t25 + 0.2e1 * t31 * t26, t65, -t36, t35, t54, t48, t53, 0.2e1 * (t17 * t91 + t21 * t92) * t94 + 0.2e1 * (t28 * t91 + t29 * t92) * t134, -0.2e1 * t24 * t155 - 0.2e1 * t21 * t95 + 0.2e1 * (-t33 * t154 + t29 * t94) * qJD(2), -0.2e1 * t24 * t153 + 0.2e1 * t17 * t95 + 0.2e1 * (-t33 * t152 - t28 * t94) * qJD(2), 0.2e1 * t17 * t28 + 0.2e1 * t21 * t29 + 0.2e1 * t24 * t33, t53, -t35, 0.4e1 * t110, t65, -t36, t54, -0.2e1 * t13 * t153 - 0.2e1 * t12 * t95 + 0.2e1 * (t27 * t152 + t23 * t94) * qJD(2), 0.2e1 * (-t10 * t92 + t12 * t91) * t94 + 0.2e1 * (-t18 * t92 + t23 * t91) * t134, 0.2e1 * t13 * t155 + 0.2e1 * t10 * t95 + 0.2e1 * (-t27 * t154 - t18 * t94) * qJD(2), 0.2e1 * t10 * t18 + 0.2e1 * t12 * t23 - 0.2e1 * t13 * t27, 0.2e1 * t38 * t16, -0.2e1 * t15 * t38 + 0.2e1 * t16 * t37, -0.2e1 * t16 * t95 + 0.2e1 * t38 * t82, -0.2e1 * t37 * t15, 0.2e1 * t15 * t95 + 0.2e1 * t37 * t82, t65, 0.2e1 * t22 * t15 - 0.2e1 * t2 * t95 + 0.2e1 * t3 * t82 - 0.2e1 * t7 * t37, -0.2e1 * t1 * t95 + 0.2e1 * t22 * t16 + 0.2e1 * t7 * t38 - 0.2e1 * t4 * t82, -0.2e1 * t1 * t37 - 0.2e1 * t15 * t4 - 0.2e1 * t16 * t3 - 0.2e1 * t2 * t38, -0.2e1 * t1 * t4 + 0.2e1 * t2 * t3 + 0.2e1 * t22 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, 0, -t82, 0, -t129, pkin(7) * t82, 0, 0, t57, t39, t127, -t57, t70, 0, t66 + (t109 * t91 - t132) * qJD(2), t95 * t136 + (t109 * t92 + t75) * qJD(2), t107, -pkin(2) * t129 + (-t30 * t91 + t31 * t92) * qJD(3) + t107 * qJ(3), 0, -t127, -t70, t57, t39, -t57, -t17 * t92 + t21 * t91, t94 * t138 + t24 * t92 + t91 * t99 - t66, -t24 * t91 + (-qJD(3) * t95 + t94 * t137 + t99) * t92, t24 * t52 + (-qJ(3) * t17 - qJD(3) * t28) * t92 + (qJ(3) * t21 + qJD(3) * t29 - qJD(4) * t33) * t91, -t57, t70, -t39, 0, -t127, t57, t62 * t82 - t13 * t91 + (t56 * t94 + (qJD(2) * t44 - qJD(3)) * t95) * t92, -t10 * t91 - t12 * t92 + (-t61 * t92 + t62 * t91) * t134, -t56 * t155 - t13 * t92 + t66 + (-t44 * t154 - t61 * t94) * qJD(2), t10 * t61 + t12 * t62 - t13 * t44 + t27 * t56 + (t18 * t91 + t23 * t92) * qJD(3), -t16 * t51 + t38 * t40, t15 * t51 + t16 * t50 + t37 * t40 + t38 * t41, -t40 * t95 - t51 * t82, -t15 * t50 + t37 * t41, -t41 * t95 + t50 * t82, 0, t32 * t15 + t19 * t82 - t22 * t41 + t56 * t37 - t7 * t50 - t9 * t95, t32 * t16 - t20 * t82 + t22 * t40 - t56 * t38 - t7 * t51 - t8 * t95, -t1 * t50 - t15 * t20 - t16 * t19 + t2 * t51 - t3 * t40 - t37 * t8 - t38 * t9 + t4 * t41, -t1 * t20 + t19 * t2 - t22 * t56 + t3 * t9 + t32 * t7 - t4 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, 0.2e1 * t145, 0, 0, 0, 0, 0, 0, -t49, -0.2e1 * t92 * t137, 0.2e1 * t138, -0.2e1 * t52 * t137 + 0.2e1 * t145, 0, 0, 0, 0, 0, 0, t91 * t159, t49, t92 * t159, 0.2e1 * t44 * t56 + 0.2e1 * (t61 * t91 + t62 * t92) * qJD(3), -0.2e1 * t51 * t40, 0.2e1 * t40 * t50 - 0.2e1 * t41 * t51, 0, 0.2e1 * t50 * t41, 0, 0, -0.2e1 * t32 * t41 + 0.2e1 * t50 * t56, 0.2e1 * t32 * t40 + 0.2e1 * t51 * t56, -0.2e1 * t19 * t40 + 0.2e1 * t20 * t41 - 0.2e1 * t50 * t8 + 0.2e1 * t51 * t9, 0.2e1 * t19 * t9 - 0.2e1 * t20 * t8 - 0.2e1 * t32 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t71, 0, t129, 0, 0, 0, 0, 0, 0, 0, -t67, -t71, t24, 0, 0, 0, 0, 0, 0, -t71, 0, t67, t13, 0, 0, 0, 0, 0, 0, t15, t16, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, 0, 0, 0, 0, 0, -t41, t40, 0, -t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t82, 0, t21, 0, 0, 0, 0, 0, 0, 0, -t71, -t82, t10, 0, 0, 0, 0, 0, 0, t46, -t45, -t157 * t15 + t93 * t16 + (t157 * t38 - t37 * t93) * qJD(6), -t1 * t157 - t2 * t93 + (-t157 * t3 - t4 * t93) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, 0, 0, 0, 0, 0, 0, t157 * t41 + t93 * t40 + (-t157 * t51 - t50 * t93) * qJD(6), -t8 * t157 - t9 * t93 + (-t157 * t19 - t20 * t93) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t67, 0, t12, 0, 0, 0, 0, 0, 0, t45, t46, -t157 * t16 - t93 * t15 + (t157 * t37 + t38 * t93) * qJD(6), t2 * t157 - t1 * t93 + (t157 * t4 - t3 * t93) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, 0, 0, 0, 0, 0, 0, 0, 0, -t157 * t40 + t93 * t41 + (t157 * t50 - t51 * t93) * qJD(6), t9 * t157 - t8 * t93 + (t157 * t20 - t19 * t93) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, -t15, t82, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, t41, 0, t9, t8, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139, -t118, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
