% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPPR5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:23:52
% EndTime: 2019-03-09 08:24:10
% DurationCPUTime: 12.54s
% Computational Cost: add. (7359->684), mult. (14979->857), div. (0->0), fcn. (14470->6), ass. (0->483)
t658 = pkin(4) + qJ(3);
t407 = cos(qJ(2));
t403 = sin(pkin(9));
t663 = cos(qJ(6));
t521 = t663 * t403;
t404 = cos(pkin(9));
t405 = sin(qJ(6));
t611 = t405 * t404;
t438 = -t521 - t611;
t690 = t438 * t407;
t406 = sin(qJ(2));
t519 = t663 * t406;
t610 = t405 * t406;
t265 = t403 * t610 - t404 * t519;
t267 = t438 * t406;
t520 = t663 * t404;
t612 = t405 * t403;
t314 = t520 - t612;
t675 = -t314 / 0.2e1;
t676 = -t438 / 0.2e1;
t94 = t265 * t675 + t267 * t676;
t689 = t94 * qJD(6);
t578 = qJD(2) * t314;
t688 = qJD(1) * t94 - t438 * t578;
t581 = qJD(1) * t267;
t687 = -qJD(2) * t94 + t265 * t581;
t686 = (pkin(3) + qJ(5)) * t404;
t523 = t663 * t438;
t276 = -t523 / 0.2e1;
t669 = -t405 / 0.2e1;
t413 = t314 * t669 + t276;
t393 = t407 * qJ(5);
t618 = t404 * t406;
t685 = pkin(4) * t618 + t393;
t401 = t406 ^ 2;
t402 = t407 ^ 2;
t366 = t402 - t401;
t661 = t404 * pkin(7);
t492 = -qJ(4) + t661;
t660 = t407 * pkin(2);
t532 = pkin(1) + t660;
t656 = pkin(8) + qJ(3);
t543 = pkin(4) + t656;
t684 = (-pkin(5) + t492) * t407 + (-t406 * t543 - t532) * t403;
t397 = t407 * pkin(7);
t386 = t397 / 0.2e1;
t620 = t403 * t407;
t373 = pkin(7) * t620;
t609 = t406 * qJ(3);
t468 = -t609 - t660;
t445 = -pkin(1) + t468;
t242 = t404 * t445 - t373;
t617 = t404 * t407;
t542 = pkin(7) * t617;
t243 = t403 * t445 + t542;
t671 = -t404 / 0.2e1;
t672 = t403 / 0.2e1;
t439 = t242 * t672 + t243 * t671;
t101 = t386 + t439;
t399 = t403 ^ 2;
t400 = t404 ^ 2;
t592 = t399 + t400;
t327 = t592 * qJ(3);
t550 = t327 * qJD(2);
t683 = -qJD(1) * t101 + t550;
t215 = -t403 * (-pkin(1) - t609) + (pkin(2) * t403 - t492) * t407;
t398 = t407 * pkin(3);
t216 = t398 - t242;
t670 = t404 / 0.2e1;
t673 = -t403 / 0.2e1;
t440 = t215 * t670 + t216 * t673;
t374 = pkin(3) * t620;
t499 = -t617 / 0.2e1;
t533 = qJ(4) * t499 + t374 / 0.2e1 + t386;
t82 = t440 + t533;
t682 = -qJD(1) * t82 + t550;
t546 = t406 * qJD(2);
t623 = t401 * t404;
t313 = -t402 * t404 + t623;
t552 = t313 * qJD(1);
t681 = t403 * t546 + t552;
t312 = t366 * t403;
t553 = t312 * qJD(1);
t680 = -t404 * t546 - t553;
t544 = t407 * qJD(2);
t679 = t267 ^ 2;
t678 = t314 ^ 2;
t657 = -pkin(5) - qJ(4);
t258 = t403 * t657 - pkin(2) - t686;
t677 = -t258 / 0.2e1;
t674 = t314 / 0.2e1;
t668 = t405 / 0.2e1;
t667 = -t406 / 0.2e1;
t666 = t406 / 0.2e1;
t665 = -t407 / 0.2e1;
t636 = t267 * t314;
t637 = t265 * t438;
t97 = t636 + t637;
t664 = t97 * qJD(3);
t662 = pkin(7) * t403;
t396 = t406 * pkin(7);
t348 = t407 * t520;
t269 = t407 * t612 - t348;
t140 = t373 + t398 + (t406 * t656 + t532) * t404 + t685;
t69 = t405 * t140 - t663 * t684;
t70 = t140 * t663 + t405 * t684;
t607 = t407 * qJ(3);
t342 = t406 * pkin(2) - t607;
t315 = t403 * t342;
t392 = t406 * qJ(4);
t144 = t315 + t392 + (pkin(5) - t661) * t406 + (-pkin(4) - pkin(8)) * t620;
t528 = t663 * t144;
t376 = pkin(4) * t617;
t531 = -pkin(3) - t662;
t423 = t376 + (-qJ(5) + t531) * t406;
t143 = (pkin(8) * t407 - t342) * t404 + t423;
t616 = t405 * t143;
t71 = t528 - t616;
t529 = t663 * t143;
t615 = t405 * t144;
t72 = t529 + t615;
t6 = -t265 * t72 + t267 * t71 - t269 * t70 - t69 * t690;
t655 = t6 * qJD(1);
t653 = qJ(5) * t403;
t429 = t404 * t657 + t653;
t621 = t403 * t406;
t594 = pkin(3) * t621 + t396;
t181 = t406 * t429 + t594;
t593 = t374 + t397;
t182 = t407 * t429 + t593;
t7 = t181 * t182 - t69 * t71 + t70 * t72;
t654 = t7 * qJD(1);
t17 = t181 * t618 + (t70 * t405 - t663 * t69) * t407;
t652 = qJD(1) * t17;
t18 = t181 * t621 + (t405 * t69 + t663 * t70) * t407;
t651 = qJD(1) * t18;
t19 = -t265 * t70 - t267 * t69;
t650 = qJD(1) * t19;
t471 = t663 * t675;
t525 = t663 * t269;
t75 = t407 * t471 + t525 / 0.2e1 + t690 * t405;
t649 = qJD(1) * t75;
t524 = t663 * t690;
t77 = t407 * t276 - t524 / 0.2e1 + (t314 * t665 + t269 / 0.2e1) * t405;
t648 = qJD(1) * t77;
t96 = (t215 * t403 + t216 * t404) * t406;
t646 = qJD(1) * t96;
t15 = -t181 * t269 - t182 * t265 + t69 * t406 + t407 * t71;
t645 = t15 * qJD(1);
t16 = -t181 * t690 - t182 * t267 - t70 * t406 + t407 * t72;
t644 = t16 * qJD(1);
t169 = t216 + t685;
t643 = t169 * t407;
t337 = t658 * t403;
t299 = pkin(8) * t403 + t337;
t484 = t543 * t404;
t177 = t299 * t405 - t484 * t663;
t642 = t177 * t407;
t178 = t299 * t663 + t405 * t484;
t641 = t178 * t407;
t409 = t641 / 0.2e1 + t181 * t675 + t267 * t677;
t417 = -t616 / 0.2e1 + t528 / 0.2e1;
t20 = -t409 + t417;
t640 = t20 * qJD(1);
t410 = -t642 / 0.2e1 + t181 * t676 + t265 * t677;
t416 = -t615 / 0.2e1 - t529 / 0.2e1;
t21 = -t410 + t416;
t639 = t21 * qJD(1);
t638 = t215 * t407;
t619 = t404 * t342;
t176 = t423 - t619;
t189 = t492 * t407 + (-t406 * t658 - t532) * t403;
t249 = -pkin(7) * t618 + t315;
t217 = -t249 - t392;
t190 = -pkin(4) * t620 - t217;
t463 = qJ(4) * t404 - t653;
t211 = t406 * t463 - t594;
t212 = t407 * t463 - t593;
t29 = t169 * t176 + t189 * t190 + t211 * t212;
t635 = t29 * qJD(1);
t30 = -t189 * t620 - t190 * t621 + (t176 * t406 + t643) * t404;
t634 = t30 * qJD(1);
t31 = -t181 * t265 - t407 * t69;
t633 = t31 * qJD(1);
t32 = t181 * t267 - t407 * t70;
t631 = t32 * qJD(1);
t630 = t337 * t406;
t629 = t337 * t407;
t338 = t658 * t404;
t628 = t338 * t406;
t627 = t338 * t407;
t462 = t211 * t407 + t212 * t406;
t34 = -t169 * t406 + t176 * t407 - t403 * t462;
t626 = t34 * qJD(1);
t218 = t406 * t531 - t619;
t259 = -t392 * t404 + t594;
t260 = -qJ(4) * t617 + t593;
t35 = t215 * t217 + t216 * t218 + t259 * t260;
t625 = t35 * qJD(1);
t38 = t189 * t406 - t190 * t407 + t404 * t462;
t624 = t38 * qJD(1);
t622 = t402 * t405;
t614 = t405 * t265;
t613 = t405 * t267;
t608 = t406 * t407;
t43 = (t216 * t407 + t218 * t406) * t404 + (t217 * t406 + t638) * t403;
t606 = t43 * qJD(1);
t541 = pkin(7) * t621;
t248 = t541 + t619;
t50 = (t242 * t407 + t248 * t406) * t404 + (t243 * t407 + t249 * t406) * t403;
t605 = t50 * qJD(1);
t459 = t259 * t407 + t260 * t406;
t51 = t215 * t406 - t217 * t407 + t404 * t459;
t604 = t51 * qJD(1);
t52 = -t216 * t406 + t218 * t407 + t403 * t459;
t603 = t52 * qJD(1);
t493 = t403 * qJ(4) + pkin(2);
t286 = t493 + t686;
t496 = t315 / 0.2e1 + t392 / 0.2e1;
t536 = pkin(4) * t665;
t537 = -t396 / 0.2e1;
t55 = -t629 / 0.2e1 + (t537 - t211 / 0.2e1) * t404 + (t286 * t666 + t536) * t403 + t496;
t602 = t55 * qJD(1);
t73 = pkin(7) ^ 2 * t608 + t242 * t248 + t243 * t249;
t601 = t73 * qJD(1);
t78 = (t169 * t404 - t189 * t403) * t406;
t600 = t78 * qJD(1);
t88 = t265 * t690 + t267 * t269;
t599 = t88 * qJD(1);
t89 = -t211 * t621 + t643;
t598 = t89 * qJD(1);
t90 = -t189 * t407 + t211 * t618;
t597 = t90 * qJD(1);
t99 = -t242 * t406 + (t248 - 0.2e1 * t541) * t407;
t596 = t99 * qJD(1);
t329 = t400 * t401 + t402;
t389 = t403 * qJD(3);
t509 = t406 * t389;
t335 = t407 * t509;
t595 = t329 * qJD(4) + t335;
t110 = (t242 * t404 + t243 * t403) * t406;
t590 = qJD(1) * t110;
t111 = t259 * t618 - t638;
t589 = qJD(1) * t111;
t526 = t663 * t267;
t127 = (t526 - t614) * t407;
t588 = qJD(1) * t127;
t527 = t663 * t265;
t128 = (-t527 - t613) * t407;
t587 = qJD(1) * t128;
t141 = t265 * t406 - t269 * t407;
t586 = qJD(1) * t141;
t142 = t267 * t406 - t407 * t690;
t585 = qJD(1) * t142;
t522 = t663 * t402;
t197 = -t267 * t621 + t522;
t584 = qJD(1) * t197;
t198 = -t265 * t618 + t522;
t583 = qJD(1) * t198;
t582 = qJD(1) * t265;
t580 = (-t399 + t400) * t544;
t579 = qJD(2) * t438;
t577 = qJD(2) * t403;
t576 = qJD(2) * t404;
t575 = qJD(3) * t407;
t495 = -t399 / 0.2e1 + t400 / 0.2e1;
t271 = (0.1e1 / 0.2e1 + t495) * t406;
t574 = qJD(4) * t271;
t573 = qJD(4) * t403;
t572 = qJD(4) * t404;
t571 = qJD(4) * t407;
t237 = -t527 / 0.2e1;
t472 = t527 / 0.2e1;
t139 = t237 + t472;
t570 = qJD(5) * t139;
t180 = t276 + t523 / 0.2e1;
t569 = qJD(5) * t180;
t568 = qJD(5) * t404;
t567 = qJD(6) * t267;
t566 = qJD(6) * t314;
t565 = qJD(6) * t407;
t100 = t249 * t407 + (-t243 + 0.2e1 * t542) * t406;
t564 = t100 * qJD(1);
t172 = -t348 / 0.2e1 + (t612 / 0.2e1 + t674) * t407;
t563 = t172 * qJD(1);
t173 = t348 / 0.2e1 + (-t612 / 0.2e1 + t674) * t407;
t562 = t173 * qJD(1);
t530 = t407 * t663;
t474 = t530 / 0.2e1;
t498 = t617 / 0.2e1;
t174 = -t690 / 0.2e1 + t403 * t474 + t405 * t498;
t561 = t174 * qJD(1);
t175 = (t676 - t521 / 0.2e1 - t611 / 0.2e1) * t407;
t560 = t175 * qJD(1);
t195 = t265 * t621 + t622;
t559 = t195 * qJD(1);
t196 = -t267 * t618 + t622;
t558 = t196 * qJD(1);
t557 = t265 * qJD(3);
t556 = t265 * qJD(6);
t555 = t267 * qJD(3);
t309 = t592 * t401;
t554 = t309 * qJD(1);
t287 = t309 * qJD(3);
t289 = t438 * qJD(6);
t291 = t312 * qJD(2);
t294 = t313 * qJD(2);
t318 = (-t405 ^ 2 - t663 ^ 2) * t407;
t551 = t318 * qJD(1);
t549 = t592 * qJD(2);
t340 = t592 * qJD(3);
t548 = t366 * qJD(1);
t547 = t406 * qJD(1);
t545 = t407 * qJD(1);
t540 = t663 / 0.2e1;
t539 = pkin(1) * t547;
t538 = pkin(1) * t545;
t535 = t71 * t663;
t534 = t72 * t663;
t517 = t404 * t547;
t513 = t403 * t568;
t512 = t405 * t565;
t511 = t314 * t289;
t510 = t403 * t572;
t357 = t403 * t576;
t508 = t403 * t545;
t363 = qJD(3) * t618;
t507 = t405 * t545;
t506 = t406 * t544;
t370 = t406 * t545;
t505 = t265 * t673;
t504 = -t621 / 0.2e1;
t503 = t621 / 0.2e1;
t502 = -t619 / 0.2e1;
t501 = -t618 / 0.2e1;
t500 = t618 / 0.2e1;
t494 = qJD(6) * t663;
t204 = qJD(1) * t271 + t357;
t272 = (-0.1e1 / 0.2e1 + t495) * t406;
t491 = qJD(1) * t272 + t357;
t326 = t406 * t357;
t223 = qJD(1) * t329 + t326;
t330 = t399 * t401 + t402;
t490 = qJD(1) * t330 - t326;
t241 = t267 * t545;
t489 = qJD(2) * t173 + t241;
t325 = t403 * qJD(1) * t623;
t194 = qJD(2) * t271 - t325;
t488 = qJD(2) * t272 - t325;
t362 = t407 * t389;
t487 = -t272 * qJD(4) - t362;
t486 = -qJD(6) + t545;
t485 = qJD(2) * t258 + qJD(3);
t483 = t393 * t672 + t533;
t482 = t403 * t517;
t481 = t399 * t370;
t480 = t400 * t370;
t479 = t406 * t513;
t478 = t403 * t370;
t477 = t404 * t370;
t476 = -t662 / 0.2e1 - pkin(3) / 0.2e1;
t475 = qJD(1) * t530;
t473 = t177 * t540;
t470 = t169 / 0.2e1 - t628 / 0.2e1;
t469 = t376 / 0.2e1 + t502;
t57 = -t177 * t314 - t178 * t438;
t408 = t177 * t267 / 0.2e1 + t178 * t265 / 0.2e1 + t69 * t674 + t70 * t438 / 0.2e1;
t412 = pkin(5) * t499 + t483;
t9 = t408 + t412;
t467 = -qJD(1) * t9 + qJD(2) * t57;
t466 = t407 * t326;
t465 = t403 * t477;
t323 = -t404 * pkin(3) - t493;
t464 = -t323 * t407 + t609;
t461 = -t217 * t404 + t218 * t403;
t460 = -t248 * t403 + t249 * t404;
t261 = t265 ^ 2;
t103 = t261 - t679;
t68 = -t636 + t637;
t458 = qJD(1) * t103 + qJD(2) * t68;
t305 = t438 ^ 2;
t150 = t305 - t678;
t457 = qJD(1) * t68 + qJD(2) * t150;
t162 = t261 + t679;
t456 = qJD(1) * t162 + qJD(2) * t97;
t207 = t305 + t678;
t455 = qJD(1) * t97 + qJD(2) * t207;
t208 = t337 * t403 + t338 * t404;
t442 = (t630 / 0.2e1 + t189 / 0.2e1) * t404;
t37 = -t397 / 0.2e1 + qJ(4) * t498 - t374 / 0.2e1 + t442 + (-t393 / 0.2e1 + t470) * t403;
t454 = qJD(1) * t37 + qJD(2) * t208;
t415 = -t614 / 0.2e1 + t526 / 0.2e1;
t116 = t503 - t415;
t414 = -t438 * t669 + t471;
t166 = t671 + t414;
t453 = qJD(1) * t116 + qJD(2) * t166;
t118 = t501 + t472 + t613 / 0.2e1;
t164 = t673 - t413;
t452 = qJD(1) * t118 + qJD(2) * t164;
t451 = qJD(1) * t139 + qJD(2) * t180;
t450 = t579 + t582;
t449 = t578 + t581;
t448 = -qJD(5) * t403 + t572;
t447 = t568 + t573;
t444 = -qJ(5) / 0.2e1 + t476;
t336 = t407 * t363;
t443 = t401 * t510 - t336;
t441 = t211 * t673 + t627 / 0.2e1;
t422 = t181 * t673 + t258 * t501;
t12 = t407 * t473 - t534 / 0.2e1 + (-t641 / 0.2e1 + t71 / 0.2e1) * t405 + t422;
t437 = qJD(1) * t12 - t258 * t577;
t421 = t181 * t671 + t258 * t503;
t14 = t178 * t474 - t535 / 0.2e1 + (t642 / 0.2e1 - t72 / 0.2e1) * t405 + t421;
t436 = qJD(1) * t14 - t258 * t576;
t53 = (t286 * t671 + t444) * t406 + t441 + t469;
t433 = -qJD(1) * t53 + t286 * t577;
t86 = pkin(3) * t667 + (t537 + t259 / 0.2e1) * t403 + (-t342 / 0.2e1 + t323 * t666 + t607 / 0.2e1) * t404;
t430 = -qJD(1) * t86 - t323 * t577;
t119 = t505 + (-t438 * t670 + t668) * t406;
t428 = qJD(1) * t119 - t438 * t577;
t368 = t519 / 0.2e1;
t420 = t267 * t672 + t314 * t500;
t121 = t368 + t420;
t427 = qJD(1) * t121 + t314 * t577;
t367 = -t610 / 0.2e1;
t418 = t267 * t671 + t314 * t503;
t123 = t367 + t418;
t426 = -qJD(1) * t123 + t314 * t576;
t369 = -t519 / 0.2e1;
t419 = t265 * t671 - t438 * t504;
t125 = t369 + t419;
t425 = qJD(1) * t125 - t438 * t576;
t308 = t517 + t577;
t424 = qJD(2) * t172 + t241 - t567;
t388 = t399 * qJD(4);
t380 = t546 / 0.2e1;
t371 = t407 * t494;
t364 = t404 * t545;
t334 = t400 * t506;
t333 = t399 * t506;
t324 = t406 * t510;
t319 = t327 * qJD(3);
t317 = t475 - t494;
t316 = t486 * t405;
t307 = qJD(6) * t667 + t370;
t306 = t403 * t547 - t576;
t304 = -0.2e1 * t466;
t303 = -0.2e1 * t465;
t302 = 0.2e1 * t465;
t285 = -qJD(2) * t400 + t482;
t284 = qJD(2) * t399 + t482;
t263 = t308 * t407;
t262 = -t404 * t544 + t478;
t247 = (t400 * t547 + t357) * t407;
t246 = (t399 * t547 - t357) * t407;
t202 = t303 + t580;
t171 = t180 * qJD(6);
t165 = t671 - t414;
t163 = t673 + t413;
t137 = t139 * qJD(6);
t126 = t367 - t418;
t124 = t368 + t419;
t122 = t369 + t420;
t120 = -t438 * t500 + t367 + t505;
t117 = t501 + t237 - t613 / 0.2e1;
t115 = t503 + t415;
t102 = t386 - t439;
t98 = t174 * qJD(2) - t265 * t545;
t87 = qJ(3) * t499 + t259 * t673 + t323 * t501 + t406 * t476 + t502;
t83 = -t440 + t533;
t81 = -t175 * qJD(2) + t265 * t486;
t76 = t269 * t669 + t524 / 0.2e1 + t413 * t407;
t74 = -t525 / 0.2e1 - t690 * t668 + t414 * t407;
t62 = t68 * qJD(6);
t56 = t629 / 0.2e1 + t286 * t504 + t211 * t670 + pkin(7) * t501 + t403 * t536 + t496;
t54 = t286 * t500 + t406 * t444 - t441 + t469;
t36 = t403 * t470 + t442 + t483;
t23 = t409 + t417;
t22 = t410 + t416;
t13 = t72 * t668 + t535 / 0.2e1 + (t177 * t668 + t178 * t540) * t407 + t421;
t11 = t534 / 0.2e1 + t71 * t669 + (t178 * t669 + t473) * t407 + t422;
t10 = -t408 + t412;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, t366 * qJD(2), 0, -t506, 0, 0, -pkin(1) * t546, -pkin(1) * t544, 0, 0, t334, t304, t294, t333, t291, -t506, -qJD(2) * t99 + t336, qJD(2) * t100 - t335, -qJD(2) * t50 + t287, qJD(2) * t73 - qJD(3) * t110, -t506, -t294, -t291, t334, t304, t333, t43 * qJD(2) + t571 * t621 + t287, -qJD(2) * t52 + t443, -qJD(2) * t51 + t595, qJD(2) * t35 + qJD(3) * t96 - qJD(4) * t111, t333, t291, 0.2e1 * t466, -t506, -t294, t334, qJD(2) * t38 - t401 * t513 + t595, -t30 * qJD(2) - t447 * t608 - t287, qJD(2) * t34 + qJD(5) * t330 - t443, qJD(2) * t29 + qJD(3) * t78 + qJD(4) * t90 + qJD(5) * t89 -(-qJD(2) * t690 - t556) * t267, qJD(2) * t88 + qJD(6) * t103, -t142 * qJD(2) + t407 * t556 (qJD(2) * t269 - t567) * t265, -t141 * qJD(2) - t267 * t565, -t506, -t15 * qJD(2) + t198 * qJD(4) + t195 * qJD(5) - t32 * qJD(6) - t407 * t555, t16 * qJD(2) - t196 * qJD(4) + t197 * qJD(5) + t31 * qJD(6) - t407 * t557, qJD(2) * t6 + qJD(3) * t162 - qJD(4) * t127 + qJD(5) * t128, qJD(2) * t7 + qJD(3) * t19 - qJD(4) * t17 + qJD(5) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, t548, t544, -t370, -t546, 0, -pkin(7) * t544 - t539, pkin(7) * t546 - t538, 0, 0, t247, t202, t681, t246, -t680, -t370, -t596 + (t403 * t468 - t542) * qJD(2) + t362, t564 + t373 * qJD(2) + (qJD(2) * t468 + t575) * t404, qJD(2) * t460 - t605, t601 + (-pkin(2) * t397 + qJ(3) * t460) * qJD(2) + t102 * qJD(3), -t370, -t681, t680, t247, t202, t246, qJD(2) * t461 + t606, -t603 + (t260 * t404 + t403 * t464) * qJD(2) + t487, -t260 * t577 - t604 + t324 + (qJD(2) * t464 - t575) * t404, t625 + (qJ(3) * t461 + t260 * t323) * qJD(2) + t83 * qJD(3) + t87 * qJD(4), t246, -t680, t302 - t580, -t370, -t681, t247, t624 + (t212 * t403 + t286 * t617 + t628) * qJD(2) - t404 * t575 + t324 + t271 * qJD(5), -t634 + ((-t190 - t629) * t404 + (-t176 + t627) * t403) * qJD(2), t626 + (t212 * t404 - t286 * t620 - t630) * qJD(2) - t479 - t487, t635 + (t176 * t337 + t190 * t338 + t212 * t286) * qJD(2) + t36 * qJD(3) + t54 * qJD(4) + t56 * qJD(5), t449 * t690 - t689, t599 + (t269 * t314 + t438 * t690) * qJD(2) + t62, -qJD(6) * t175 - t314 * t546 - t585, t269 * t450 + t689, -qJD(6) * t172 - t438 * t546 - t586, -t307, -t645 + (-t177 * t406 + t182 * t438 + t258 * t269) * qJD(2) - t173 * qJD(3) + t120 * qJD(4) + t124 * qJD(5) + t23 * qJD(6), t644 + (-t178 * t406 - t182 * t314 - t258 * t690) * qJD(2) + t174 * qJD(3) + t122 * qJD(4) + t126 * qJD(5) + t22 * qJD(6), t655 + (-t177 * t690 - t178 * t269 + t314 * t71 - t438 * t72) * qJD(2) + t74 * qJD(4) + t76 * qJD(5) + t664, t654 + (-t177 * t71 + t178 * t72 + t182 * t258) * qJD(2) + t10 * qJD(3) + t11 * qJD(4) + t13 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, -t262, t554, qJD(2) * t102 - t590, 0, 0, 0, 0, 0, 0, t554, -t263, t262, qJD(2) * t83 + t646, 0, 0, 0, 0, 0, 0, t262, -t554, t263, qJD(2) * t36 + t600, 0, 0, 0, 0, 0, 0, -t489, t98, t456, qJD(2) * t10 + qJD(4) * t117 + qJD(5) * t115 + t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, -t488, t223, qJD(2) * t87 - t589, 0, 0, 0, 0, 0, 0, t223, -t478, t488, qJD(2) * t54 + t597, 0, 0, 0, 0, 0, 0, qJD(2) * t120 + t583, qJD(2) * t122 - t558, qJD(2) * t74 - t588, qJD(2) * t11 + qJD(3) * t117 - t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, -t477, t490, qJD(2) * t56 + t598, 0, 0, 0, 0, 0, 0, qJD(2) * t124 + t559, qJD(2) * t126 + t584, qJD(2) * t76 + t137 + t587, qJD(2) * t13 + qJD(3) * t115 + t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t687, t458, t81, -t687, -t424, t380, qJD(2) * t23 - qJD(6) * t70 - t631, qJD(2) * t22 + qJD(6) * t69 + t633, t570, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, -t548, 0, t370, 0, 0, t539, t538, 0, 0, -t480, t302, -t552, -t481, -t553, t370, t596, -t564, t605, -qJD(3) * t101 - t601, t370, t552, t553, -t480, t302, -t481, -t404 * t571 - t606, -t574 + t603, t324 + t604, -qJD(3) * t82 - qJD(4) * t86 - t625, -t481, -t553, t303, t370, t552, -t480, qJD(5) * t272 + t324 - t624, t407 * t448 + t634, -t479 + t574 - t626, qJD(3) * t37 - qJD(4) * t53 - qJD(5) * t55 - t635, -t581 * t690 - t689, t62 - t599, -qJD(6) * t174 + t585, -t269 * t582 + t689, -qJD(6) * t173 + t586, t307, -qJD(3) * t172 + qJD(4) * t119 + qJD(5) * t125 - qJD(6) * t20 + t645, qJD(3) * t175 + qJD(4) * t121 - qJD(5) * t123 - qJD(6) * t21 - t644, qJD(4) * t75 + qJD(5) * t77 - t655 + t664, -qJD(3) * t9 + qJD(4) * t12 + qJD(5) * t14 - t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, t319, 0, 0, 0, 0, 0, 0, t340, -t510, t388, -t323 * t573 + t319, 0, 0, 0, 0, 0, 0, t388 + t513, -t340, qJD(5) * t400 + t510, t208 * qJD(3) + t286 * t447, t511, t150 * qJD(6), 0, -t511, 0, 0, -t258 * t566 - t438 * t447, -t258 * t289 + t314 * t447, qJD(3) * t207, t57 * qJD(3) - t258 * t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t549, t683, 0, 0, 0, 0, 0, 0, t549, 0, 0, t682, 0, 0, 0, 0, 0, 0, 0, -t549, 0, t454, 0, 0, 0, 0, 0, 0, -t563, t560, t455, qJD(4) * t163 + qJD(5) * t165 + t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, -t204, t284, t430, 0, 0, 0, 0, 0, 0, t284, t364, t204, t433, 0, 0, 0, 0, 0, 0, t428, t427, t649, qJD(3) * t163 + t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, -t508, -t285, t286 * t576 - t602, 0, 0, 0, 0, 0, 0, t425, t426, t171 + t648, qJD(3) * t165 + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688, t457, -t289 - t561, t688, -t562 + t566, -t547 / 0.2e1, -qJD(6) * t178 - t258 * t578 - t640, qJD(6) * t177 - t258 * t579 - t639, t569, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, t478, -t554, qJD(2) * t101 + t590, 0, 0, 0, 0, 0, 0, -t554, t477, -t478, qJD(2) * t82 - t406 * t572 - t646, 0, 0, 0, 0, 0, 0, -t478, t554, -t477, -t37 * qJD(2) - t406 * t448 - t600, 0, 0, 0, 0, 0, 0, t424, t81, -t456, qJD(2) * t9 + qJD(4) * t118 + qJD(5) * t116 - t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t549, -t683, 0, 0, 0, 0, 0, 0, -t549, 0, 0, -t573 - t682, 0, 0, 0, 0, 0, 0, 0, t549, 0, -t447 - t454, 0, 0, 0, 0, 0, 0, t563 - t566, -t289 - t560, -t455, qJD(4) * t164 + qJD(5) * t166 - t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t449, -t450, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t262, t194, -t223, qJD(2) * t86 + t363 + t589, 0, 0, 0, 0, 0, 0, -t223, t262, -t194, t53 * qJD(2) + qJD(5) * t407 + t363 - t597, 0, 0, 0, 0, 0, 0, -qJD(2) * t119 + t371 - t583, -t121 * qJD(2) - t512 + t558, -qJD(2) * t75 + t588, -qJD(2) * t12 - qJD(3) * t118 - qJD(5) * t318 + t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, t204, -t284, t389 - t430, 0, 0, 0, 0, 0, 0, -t284, -t364, -t204, t389 - t433, 0, 0, 0, 0, 0, 0, -t428, -t427, -t649, -qJD(3) * t164 - t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, -t316, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t488, t263, -t490, t55 * qJD(2) - t509 - t571 - t598, 0, 0, 0, 0, 0, 0, -t125 * qJD(2) + t512 - t559, qJD(2) * t123 + t371 - t584, -qJD(2) * t77 + t137 - t587, -qJD(2) * t14 - qJD(3) * t116 + qJD(4) * t318 - t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t491, t508, t285, t602 + (-qJD(2) * t286 + qJD(3)) * t404, 0, 0, 0, 0, 0, 0, -t425, -t426, t171 - t648, -qJD(3) * t166 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t306, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t545, 0, 0, 0, 0, 0, 0, 0, 0, 0, t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, t317, t451, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t687, -t458, t98, t687, t489, t380, t631 + t20 * qJD(2) + t555 + (-qJD(4) * t663 - qJD(5) * t405) * t407, -t633 + t21 * qJD(2) + t557 + (qJD(4) * t405 - qJD(5) * t663) * t407, -t570, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t688, -t457, t561, -t688, t562, t547 / 0.2e1, t314 * t485 + t640, t438 * t485 + t639, -t569, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, t450, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t475, t507, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t507, -t475, -t451, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
