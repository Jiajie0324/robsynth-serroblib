% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 23:44
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRRPR11_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR11_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR11_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR11_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR11_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR11_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 23:37:59
% EndTime: 2019-05-07 23:39:08
% DurationCPUTime: 29.14s
% Computational Cost: add. (321294->767), mult. (692328->1148), div. (0->0), fcn. (566157->14), ass. (0->499)
t418 = cos(pkin(6));
t499 = qJD(1) * t418;
t410 = qJD(2) + t499;
t421 = sin(qJ(3));
t425 = cos(qJ(3));
t416 = sin(pkin(6));
t422 = sin(qJ(2));
t498 = qJD(1) * t422;
t475 = t416 * t498;
t385 = -t425 * t410 + t421 * t475;
t382 = qJD(4) + t385;
t547 = t382 ^ 2;
t387 = t410 * t421 + t425 * t475;
t420 = sin(qJ(4));
t424 = cos(qJ(4));
t426 = cos(qJ(2));
t497 = qJD(1) * t426;
t408 = t416 * t497;
t488 = t408 - qJD(3);
t368 = t387 * t420 + t424 * t488;
t369 = t424 * t387 - t420 * t488;
t415 = sin(pkin(12));
t417 = cos(pkin(12));
t341 = t368 * t417 + t369 * t415;
t549 = t341 ^ 2;
t278 = -t547 - t549;
t342 = -t368 * t415 + t369 * t417;
t299 = t342 * t341;
t487 = qJDD(1) * t416;
t393 = qJD(2) * t408 + t422 * t487;
t409 = qJDD(1) * t418 + qJDD(2);
t468 = t421 * t393 - t425 * t409;
t357 = -t387 * qJD(3) - t468;
t356 = qJDD(4) - t357;
t554 = -t299 + t356;
t563 = t417 * t554;
t207 = t278 * t415 + t563;
t543 = sin(qJ(1));
t544 = cos(qJ(1));
t451 = g(1) * t544 + g(2) * t543;
t546 = qJD(1) ^ 2;
t389 = -pkin(1) * t546 + pkin(8) * t487 - t451;
t542 = pkin(2) * t426;
t462 = -pkin(9) * t422 - t542;
t500 = qJD(1) * t416;
t392 = t462 * t500;
t407 = t410 ^ 2;
t450 = g(1) * t543 - g(2) * t544;
t493 = t416 * t546;
t433 = qJDD(1) * pkin(1) + pkin(8) * t493 + t450;
t432 = t418 * t433;
t506 = t416 * t422;
t429 = -g(3) * t506 + t422 * t432;
t326 = t409 * pkin(9) - t407 * pkin(2) + (t392 * t500 + t389) * t426 + t429;
t536 = t418 * g(3);
t427 = -t393 * pkin(9) - t536 + ((-pkin(1) - t542) * qJDD(1) + (-pkin(8) * t500 - t426 * t410 * pkin(9) + (qJD(2) + t410) * t422 * pkin(2)) * qJD(1) - t450) * t416;
t277 = t425 * t326 + t421 * t427;
t362 = pkin(3) * t385 - pkin(10) * t387;
t486 = qJDD(1) * t426;
t445 = (qJD(2) * t498 - t486) * t416;
t436 = qJDD(3) + t445;
t485 = t488 ^ 2;
t247 = -pkin(3) * t485 + pkin(10) * t436 - t385 * t362 + t277;
t469 = t422 * t389 - t426 * t432;
t537 = g(3) * t426;
t325 = -t409 * pkin(2) - t407 * pkin(9) + (t392 * t498 + t537) * t416 + t469;
t454 = -t425 * t393 - t421 * t409;
t358 = -t385 * qJD(3) - t454;
t375 = t488 * t385;
t333 = t358 + t375;
t467 = t488 * t387;
t250 = -t333 * pkin(10) + (-t357 - t467) * pkin(3) + t325;
t192 = t247 * t420 - t424 * t250;
t431 = -t424 * t358 - t420 * t436;
t310 = -t368 * qJD(4) - t431;
t353 = t382 * t368;
t288 = t353 + t310;
t344 = t369 * t368;
t552 = -t344 + t356;
t147 = pkin(4) * t552 - qJ(5) * t288 - t192;
t193 = t424 * t247 + t420 * t250;
t347 = pkin(4) * t382 - qJ(5) * t369;
t430 = -t420 * t358 + t424 * t436;
t428 = t369 * qJD(4) - t430;
t548 = t368 ^ 2;
t161 = -pkin(4) * t548 - qJ(5) * t428 - t382 * t347 + t193;
t460 = -0.2e1 * qJD(5) * t342 + t417 * t147 - t161 * t415;
t565 = pkin(4) * t207 + t460;
t564 = t415 * t554;
t419 = sin(qJ(6));
t423 = cos(qJ(6));
t295 = t423 * t341 + t342 * t419;
t297 = -t341 * t419 + t342 * t423;
t238 = t297 * t295;
t355 = qJDD(6) + t356;
t556 = -t238 + t355;
t562 = t419 * t556;
t561 = t420 * t552;
t560 = t423 * t556;
t559 = t424 * t552;
t507 = t387 * t385;
t434 = t436 - t507;
t558 = t421 * t434;
t557 = t425 * t434;
t256 = t417 * t310 - t415 * t428;
t470 = t310 * t415 + t417 * t428;
t183 = -t295 * qJD(6) + t423 * t256 - t419 * t470;
t379 = qJD(6) + t382;
t274 = t379 * t295;
t555 = -t274 + t183;
t317 = t382 * t341;
t553 = -t317 + t256;
t235 = t317 + t256;
t360 = t416 * t537 + t469;
t361 = t426 * t389 + t429;
t551 = t422 * t360 + t426 * t361;
t471 = t256 * t419 + t423 * t470;
t153 = (qJD(6) - t379) * t297 + t471;
t284 = t369 * (qJD(4) - t382) - t430;
t293 = t295 ^ 2;
t294 = t297 ^ 2;
t340 = t342 ^ 2;
t367 = t369 ^ 2;
t377 = t379 ^ 2;
t383 = t385 ^ 2;
t384 = t387 ^ 2;
t412 = t416 ^ 2;
t496 = qJD(5) * t341;
t336 = -0.2e1 * t496;
t501 = t415 * t147 + t417 * t161;
t99 = t336 + t501;
t61 = t415 * t99 + t417 * t460;
t545 = pkin(4) * t61;
t541 = pkin(3) * t421;
t517 = t342 * t382;
t232 = t470 - t517;
t175 = -t232 * t415 - t235 * t417;
t540 = pkin(4) * t175;
t538 = pkin(8) * t416;
t91 = pkin(5) * t554 - pkin(11) * t235 + t460;
t314 = pkin(5) * t382 - pkin(11) * t342;
t92 = -pkin(5) * t549 - pkin(11) * t470 - t382 * t314 + t99;
t52 = t419 * t92 - t423 * t91;
t53 = t419 * t91 + t423 * t92;
t30 = t419 * t53 - t423 * t52;
t535 = t30 * t415;
t534 = t30 * t417;
t533 = t420 * t61;
t532 = t424 * t61;
t276 = t326 * t421 - t425 * t427;
t246 = -t436 * pkin(3) - t485 * pkin(10) + t362 * t387 + t276;
t194 = t428 * pkin(4) - t548 * qJ(5) + t347 * t369 + qJDD(5) + t246;
t138 = pkin(5) * t470 - pkin(11) * t549 + t314 * t342 + t194;
t531 = t138 * t419;
t530 = t138 * t423;
t529 = t194 * t415;
t528 = t194 * t417;
t212 = t238 + t355;
t527 = t212 * t419;
t526 = t212 * t423;
t525 = t246 * t420;
t524 = t246 * t424;
t262 = t299 + t356;
t523 = t262 * t415;
t522 = t262 * t417;
t301 = t344 + t356;
t521 = t301 * t420;
t520 = t301 * t424;
t519 = t325 * t421;
t518 = t325 * t425;
t350 = -t507 - t436;
t516 = t350 * t421;
t515 = t350 * t425;
t514 = t356 * t421;
t513 = t379 * t419;
t512 = t379 * t423;
t511 = t382 * t415;
t510 = t382 * t417;
t509 = t382 * t420;
t508 = t382 * t424;
t494 = t412 * t546;
t402 = t426 * t422 * t494;
t390 = t402 + t409;
t504 = t422 * t390;
t391 = -t402 + t409;
t502 = t426 * t391;
t492 = 0.2e1 * qJD(3) - t408;
t490 = qJD(4) + t382;
t484 = t421 * t238;
t483 = t425 * t238;
t482 = t421 * t299;
t481 = t425 * t299;
t480 = t421 * t344;
t479 = t425 * t344;
t478 = t426 * t507;
t397 = t410 * t408;
t477 = t397 + t393;
t476 = -pkin(3) * t425 - pkin(2);
t413 = t422 ^ 2;
t474 = t413 * t494;
t414 = t426 ^ 2;
t473 = t414 * t494;
t62 = -t415 * t460 + t417 * t99;
t31 = t419 * t52 + t423 * t53;
t135 = t192 * t420 + t424 * t193;
t217 = t276 * t421 + t425 * t277;
t466 = -t410 + t499;
t17 = t31 * t415 + t534;
t465 = pkin(4) * t17 + pkin(5) * t30;
t303 = -t340 - t547;
t229 = t303 * t417 - t523;
t464 = pkin(4) * t229 - t501;
t156 = t274 + t183;
t105 = -t153 * t419 - t156 * t423;
t107 = -t153 * t423 + t156 * t419;
t68 = t105 * t417 + t107 * t415;
t463 = pkin(4) * t68 + pkin(5) * t105;
t461 = -pkin(3) * t246 + pkin(10) * t135;
t459 = t421 * t375;
t458 = t421 * t467;
t457 = t425 * t375;
t456 = t425 * t467;
t134 = -t192 * t424 + t193 * t420;
t455 = t276 * t425 - t277 * t421;
t453 = -pkin(1) + t462;
t330 = t387 * t408 + t468;
t321 = -t547 - t548;
t258 = t321 * t424 - t561;
t285 = -t369 * t490 + t430;
t449 = pkin(3) * t285 + pkin(10) * t258 - t524;
t339 = -t367 - t547;
t260 = -t339 * t420 - t520;
t289 = t368 * t490 + t431;
t448 = pkin(3) * t289 + pkin(10) * t260 + t525;
t220 = -t377 - t293;
t166 = t220 * t419 + t560;
t167 = t220 * t423 - t562;
t115 = t166 * t417 + t167 * t415;
t447 = pkin(4) * t115 + pkin(5) * t166 - t52;
t224 = -t284 * t424 + t288 * t420;
t311 = t367 + t548;
t446 = pkin(3) * t311 + pkin(10) * t224 + t135;
t27 = -pkin(5) * t138 + pkin(11) * t31;
t10 = -pkin(11) * t534 - qJ(5) * t17 - t27 * t415;
t18 = t31 * t417 - t535;
t12 = -t17 * t420 + t18 * t424;
t7 = -pkin(4) * t138 - pkin(11) * t535 + qJ(5) * t18 + t27 * t417;
t444 = -pkin(3) * t138 + pkin(10) * t12 + t10 * t420 + t424 * t7;
t197 = -t293 - t294;
t24 = -pkin(5) * t197 + pkin(11) * t107 + t31;
t25 = -pkin(11) * t105 - t30;
t70 = -t105 * t415 + t107 * t417;
t15 = -pkin(4) * t197 + qJ(5) * t70 + t24 * t417 + t25 * t415;
t16 = -qJ(5) * t68 - t24 * t415 + t25 * t417;
t46 = -t420 * t68 + t424 * t70;
t443 = -pkin(3) * t197 + pkin(10) * t46 + t15 * t424 + t16 * t420;
t152 = (qJD(6) + t379) * t297 + t471;
t116 = -t166 * t415 + t167 * t417;
t82 = -pkin(5) * t152 + pkin(11) * t167 - t530;
t96 = -pkin(11) * t166 + t531;
t42 = -pkin(4) * t152 + qJ(5) * t116 + t415 * t96 + t417 * t82;
t48 = -qJ(5) * t115 - t415 * t82 + t417 * t96;
t77 = -t115 * t420 + t116 * t424;
t442 = -pkin(3) * t152 + pkin(10) * t77 + t42 * t424 + t420 * t48;
t264 = -t294 - t377;
t185 = t264 * t423 - t527;
t108 = -pkin(11) * t185 + t530;
t186 = -t264 * t419 - t526;
t127 = -t185 * t415 + t186 * t417;
t83 = -pkin(5) * t555 + pkin(11) * t186 + t531;
t47 = -pkin(4) * t555 + qJ(5) * t127 + t108 * t415 + t417 * t83;
t126 = t185 * t417 + t186 * t415;
t49 = -qJ(5) * t126 + t108 * t417 - t415 * t83;
t85 = -t126 * t420 + t127 * t424;
t441 = -pkin(3) * t555 + pkin(10) * t85 + t420 * t49 + t424 * t47;
t177 = -t232 * t417 + t235 * t415;
t123 = -t175 * t420 + t177 * t424;
t254 = -t340 - t549;
t54 = -pkin(4) * t254 + qJ(5) * t177 + t62;
t55 = -qJ(5) * t175 - t61;
t440 = -pkin(3) * t254 + pkin(10) * t123 + t420 * t55 + t424 * t54;
t439 = pkin(4) * t126 + pkin(5) * t185 - t53;
t208 = t278 * t417 - t564;
t231 = t470 + t517;
t124 = -pkin(4) * t231 + qJ(5) * t208 - t528;
t141 = -qJ(5) * t207 + t529;
t159 = -t207 * t420 + t208 * t424;
t438 = -pkin(3) * t231 + pkin(10) * t159 + t124 * t424 + t141 * t420;
t230 = -t303 * t415 - t522;
t125 = -pkin(4) * t553 + qJ(5) * t230 + t529;
t142 = -qJ(5) * t229 + t528;
t173 = -t229 * t420 + t230 * t424;
t437 = -pkin(3) * t553 + pkin(10) * t173 + t125 * t424 + t142 * t420;
t41 = t424 * t62 - t533;
t56 = -pkin(4) * t194 + qJ(5) * t62;
t435 = -pkin(3) * t194 + pkin(10) * t41 - qJ(5) * t533 + t424 * t56;
t396 = t410 * t475;
t395 = (t413 - t414) * t494;
t394 = -t407 - t473;
t381 = -t474 - t407;
t376 = t416 * t433 + t536;
t374 = -t396 - t445;
t373 = t396 - t445;
t372 = -t397 + t393;
t371 = t485 - t384;
t370 = t383 - t485;
t365 = -t384 - t485;
t364 = t384 - t383;
t359 = -t485 - t383;
t354 = t425 * t356;
t349 = -t367 + t547;
t348 = -t547 + t548;
t346 = t383 + t384;
t345 = t459 + t456;
t343 = t367 - t548;
t335 = t385 * t492 + t454;
t334 = t358 - t375;
t331 = -t387 * t492 - t468;
t328 = t421 * t358 - t456;
t327 = t425 * t357 - t459;
t320 = t370 * t421 - t515;
t319 = t371 * t425 + t558;
t316 = -t340 + t547;
t315 = -t547 + t549;
t313 = -t365 * t421 + t515;
t312 = t365 * t425 + t516;
t308 = t359 * t425 - t558;
t307 = t359 * t421 + t557;
t305 = (-t368 * t424 + t369 * t420) * t382;
t304 = (-t368 * t420 - t369 * t424) * t382;
t298 = t340 - t549;
t292 = -t330 * t425 + t334 * t421;
t290 = t331 * t421 + t333 * t425;
t287 = -t353 + t310;
t283 = t310 * t424 - t369 * t509;
t282 = t310 * t420 + t369 * t508;
t281 = t368 * t508 + t420 * t428;
t280 = -t368 * t509 + t424 * t428;
t279 = t305 * t421 - t354;
t273 = -t294 + t377;
t272 = t293 - t377;
t270 = t348 * t424 - t521;
t269 = -t349 * t420 + t559;
t268 = t348 * t420 + t520;
t267 = t349 * t424 + t561;
t266 = (-t341 * t417 + t342 * t415) * t382;
t265 = (-t341 * t415 - t342 * t417) * t382;
t259 = t339 * t424 - t521;
t257 = t321 * t420 + t559;
t252 = t283 * t421 - t479;
t251 = t281 * t421 + t479;
t245 = pkin(2) * t335 + pkin(9) * t313 + t519;
t243 = pkin(2) * t331 + pkin(9) * t308 - t518;
t242 = t315 * t417 - t523;
t241 = -t316 * t415 + t563;
t240 = t315 * t415 + t522;
t239 = t316 * t417 + t564;
t237 = t294 - t293;
t228 = t256 * t417 - t342 * t511;
t227 = t256 * t415 + t342 * t510;
t226 = t341 * t510 + t415 * t470;
t225 = t341 * t511 - t417 * t470;
t223 = t285 * t424 - t287 * t420;
t222 = -t284 * t420 - t288 * t424;
t221 = t285 * t420 + t287 * t424;
t219 = t270 * t421 + t284 * t425;
t218 = t269 * t421 - t288 * t425;
t215 = (-t295 * t423 + t297 * t419) * t379;
t214 = (-t295 * t419 - t297 * t423) * t379;
t210 = t260 * t425 - t289 * t421;
t209 = t260 * t421 + t289 * t425;
t206 = t258 * t425 - t285 * t421;
t205 = t258 * t421 + t285 * t425;
t204 = -t265 * t420 + t266 * t424;
t203 = t265 * t424 + t266 * t420;
t202 = t223 * t421 - t343 * t425;
t201 = t224 * t425 - t311 * t421;
t200 = t224 * t421 + t311 * t425;
t199 = -pkin(2) * t325 + pkin(9) * t217;
t198 = t204 * t421 - t354;
t196 = -pkin(10) * t259 + t524;
t195 = -pkin(10) * t257 + t525;
t190 = t272 * t423 - t527;
t189 = -t273 * t419 + t560;
t188 = t272 * t419 + t526;
t187 = t273 * t423 + t562;
t184 = pkin(2) * t346 + pkin(9) * t292 + t217;
t182 = -qJD(6) * t297 - t471;
t181 = -t240 * t420 + t242 * t424;
t180 = -t239 * t420 + t241 * t424;
t179 = t240 * t424 + t242 * t420;
t178 = t239 * t424 + t241 * t420;
t176 = -t231 * t417 - t415 * t553;
t174 = -t231 * t415 + t417 * t553;
t172 = t229 * t424 + t230 * t420;
t171 = -t227 * t420 + t228 * t424;
t170 = -t225 * t420 + t226 * t424;
t169 = t227 * t424 + t228 * t420;
t168 = t225 * t424 + t226 * t420;
t165 = -pkin(3) * t259 + t193;
t164 = -t214 * t415 + t215 * t417;
t163 = t214 * t417 + t215 * t415;
t162 = -pkin(3) * t257 + t192;
t158 = t207 * t424 + t208 * t420;
t151 = t183 * t423 - t297 * t513;
t150 = t183 * t419 + t297 * t512;
t149 = -t182 * t419 + t295 * t512;
t148 = t182 * t423 + t295 * t513;
t144 = t171 * t421 - t481;
t143 = t170 * t421 + t481;
t140 = t181 * t421 + t232 * t425;
t139 = t180 * t421 - t235 * t425;
t137 = t173 * t425 + t421 * t553;
t136 = t173 * t421 - t425 * t553;
t133 = t159 * t425 + t231 * t421;
t132 = t159 * t421 - t231 * t425;
t131 = -t188 * t415 + t190 * t417;
t130 = -t187 * t415 + t189 * t417;
t129 = t188 * t417 + t190 * t415;
t128 = t187 * t417 + t189 * t415;
t122 = -t174 * t420 + t176 * t424;
t121 = t175 * t424 + t177 * t420;
t120 = t174 * t424 + t176 * t420;
t119 = t135 * t425 + t246 * t421;
t118 = t135 * t421 - t246 * t425;
t117 = -pkin(10) * t222 - t134;
t114 = t122 * t421 - t298 * t425;
t113 = -t163 * t420 + t164 * t424;
t112 = t163 * t424 + t164 * t420;
t111 = t113 * t421 - t355 * t425;
t110 = t123 * t425 + t254 * t421;
t109 = t123 * t421 - t254 * t425;
t106 = -t152 * t423 - t419 * t555;
t104 = -t152 * t419 + t423 * t555;
t103 = -t150 * t415 + t151 * t417;
t102 = -t148 * t415 + t149 * t417;
t101 = t150 * t417 + t151 * t415;
t100 = t148 * t417 + t149 * t415;
t95 = -pkin(2) * t259 + pkin(9) * t210 + t165 * t425 + t196 * t421;
t94 = -pkin(2) * t257 + pkin(9) * t206 + t162 * t425 + t195 * t421;
t93 = -pkin(3) * t121 - t540;
t89 = -t129 * t420 + t131 * t424;
t88 = -t128 * t420 + t130 * t424;
t87 = t129 * t424 + t131 * t420;
t86 = t128 * t424 + t130 * t420;
t84 = t126 * t424 + t127 * t420;
t81 = pkin(9) * t201 + t117 * t421 + t222 * t476;
t80 = -pkin(3) * t172 + t336 - t464;
t79 = -pkin(10) * t172 - t125 * t420 + t142 * t424;
t78 = -pkin(3) * t158 - t565;
t76 = t115 * t424 + t116 * t420;
t75 = -pkin(10) * t158 - t124 * t420 + t141 * t424;
t74 = t153 * t425 + t421 * t89;
t73 = -t156 * t425 + t421 * t88;
t72 = t421 * t555 + t425 * t85;
t71 = t421 * t85 - t425 * t555;
t69 = -t104 * t415 + t106 * t417;
t67 = t104 * t417 + t106 * t415;
t66 = -t101 * t420 + t103 * t424;
t65 = -t100 * t420 + t102 * t424;
t64 = t101 * t424 + t103 * t420;
t63 = t100 * t424 + t102 * t420;
t60 = t421 * t66 - t483;
t59 = t421 * t65 + t483;
t58 = t152 * t421 + t425 * t77;
t57 = -t152 * t425 + t421 * t77;
t50 = pkin(9) * t119 + (-pkin(10) * t421 + t476) * t134;
t45 = -t420 * t67 + t424 * t69;
t44 = t420 * t70 + t424 * t68;
t43 = t420 * t69 + t424 * t67;
t40 = t420 * t62 + t532;
t39 = -t237 * t425 + t421 * t45;
t38 = t197 * t421 + t425 * t46;
t37 = -t197 * t425 + t421 * t46;
t36 = -pkin(2) * t172 + pkin(9) * t137 + t421 * t79 + t425 * t80;
t35 = t194 * t421 + t41 * t425;
t34 = -t194 * t425 + t41 * t421;
t33 = -pkin(2) * t158 + pkin(9) * t133 + t421 * t75 + t425 * t78;
t32 = -pkin(3) * t84 - t439;
t29 = -pkin(3) * t76 - t447;
t28 = -pkin(10) * t121 - t420 * t54 + t424 * t55;
t26 = -pkin(3) * t40 - t545;
t23 = -pkin(3) * t44 - t463;
t22 = -pkin(10) * t84 - t420 * t47 + t424 * t49;
t21 = -pkin(10) * t40 - qJ(5) * t532 - t420 * t56;
t20 = -pkin(2) * t121 + pkin(9) * t110 + t28 * t421 + t425 * t93;
t19 = -pkin(10) * t76 - t42 * t420 + t424 * t48;
t14 = -pkin(2) * t84 + pkin(9) * t72 + t22 * t421 + t32 * t425;
t13 = -pkin(2) * t76 + pkin(9) * t58 + t19 * t421 + t29 * t425;
t11 = t17 * t424 + t18 * t420;
t9 = t12 * t425 + t138 * t421;
t8 = t12 * t421 - t138 * t425;
t6 = -pkin(2) * t40 + pkin(9) * t35 + t21 * t421 + t26 * t425;
t5 = -pkin(10) * t44 - t15 * t420 + t16 * t424;
t4 = -pkin(3) * t11 - t465;
t3 = -pkin(2) * t44 + pkin(9) * t38 + t23 * t425 + t421 * t5;
t2 = -pkin(10) * t11 + t10 * t424 - t420 * t7;
t1 = -pkin(2) * t11 + pkin(9) * t9 + t2 * t421 + t4 * t425;
t51 = [0, 0, 0, 0, 0, qJDD(1), t450, t451, 0, 0, (-t412 * t466 * t497 + t393 * t416) * t422, t418 * t395 + (t422 * t374 + t426 * t477) * t416, t418 * t372 + (t504 + t426 * (t407 - t474)) * t416, (t486 + (-qJD(2) + t466) * t498) * t412 * t426, t418 * t373 + (t422 * (-t407 + t473) + t502) * t416, t418 * t409, (-t360 + pkin(1) * (t390 * t426 + t394 * t422)) * t418 + (t426 * t376 + pkin(1) * t374 + pkin(8) * (t394 * t426 - t504)) * t416, -t376 * t506 - t418 * t361 + pkin(1) * (-t416 * t477 + (t381 * t426 - t391 * t422) * t418) + (-t422 * t381 - t502) * t538, pkin(1) * ((-t372 * t426 + t373 * t422) * t418 - (-t413 - t414) * t412 * t493) + (t422 * t372 + t373 * t426) * t538 + t551 * t416, pkin(1) * (t416 * t376 + (-t360 * t426 + t361 * t422) * t418) + t551 * t538, t418 * t328 + (t422 * (t425 * t358 + t458) - t478) * t416, t418 * t290 + (t422 * (t331 * t425 - t333 * t421) - t426 * t364) * t416, t418 * t319 + (t422 * (-t371 * t421 + t557) - t426 * t334) * t416, t418 * t327 + (t422 * (-t421 * t357 - t457) + t478) * t416, t418 * t320 + (t422 * (t370 * t425 + t516) + t426 * t330) * t416, t418 * t345 + (t422 * (t457 - t458) - t436 * t426) * t416, (t243 + pkin(1) * (t308 * t422 + t331 * t426)) * t418 + (t422 * (-pkin(9) * t307 + t519) + t426 * (-pkin(2) * t307 + t276) - pkin(1) * t307 + pkin(8) * (t308 * t426 - t422 * t331)) * t416, (t245 + pkin(1) * (t313 * t422 + t335 * t426)) * t418 + (t422 * (-pkin(9) * t312 + t518) + t426 * (-pkin(2) * t312 + t277) - pkin(1) * t312 + pkin(8) * (t313 * t426 - t422 * t335)) * t416, (t184 + pkin(1) * (t292 * t422 + t346 * t426)) * t418 + (t422 * t455 + pkin(8) * (t292 * t426 - t422 * t346) + t453 * (-t330 * t421 - t334 * t425)) * t416, (t199 + pkin(1) * (t217 * t422 - t325 * t426)) * t418 + (pkin(8) * (t217 * t426 + t422 * t325) - t453 * t455) * t416, t418 * t252 + (t422 * (t283 * t425 + t480) - t426 * t282) * t416, t418 * t202 + (t422 * (t223 * t425 + t343 * t421) - t426 * t221) * t416, t418 * t218 + (t422 * (t269 * t425 + t288 * t421) - t426 * t267) * t416, t418 * t251 + (t422 * (t281 * t425 - t480) + t426 * t280) * t416, t418 * t219 + (t422 * (t270 * t425 - t284 * t421) - t426 * t268) * t416, t418 * t279 + (t422 * (t305 * t425 + t514) - t426 * t304) * t416, (t94 + pkin(1) * (t206 * t422 - t257 * t426)) * t418 + (t422 * (-pkin(9) * t205 - t162 * t421 + t195 * t425) + t426 * (-pkin(2) * t205 - t449) - pkin(1) * t205 + pkin(8) * (t206 * t426 + t422 * t257)) * t416, (t95 + pkin(1) * (t210 * t422 - t259 * t426)) * t418 + (t422 * (-pkin(9) * t209 - t165 * t421 + t196 * t425) + t426 * (-pkin(2) * t209 - t448) - pkin(1) * t209 + pkin(8) * (t210 * t426 + t422 * t259)) * t416, (t81 + pkin(1) * (t201 * t422 - t222 * t426)) * t418 + (t422 * (-pkin(9) * t200 + t117 * t425 + t222 * t541) + t426 * (-pkin(2) * t200 - t446) - pkin(1) * t200 + pkin(8) * (t201 * t426 + t422 * t222)) * t416, (t50 + pkin(1) * (t119 * t422 - t134 * t426)) * t418 + (t422 * (-pkin(9) * t118 + (-pkin(10) * t425 + t541) * t134) + t426 * (-pkin(2) * t118 - t461) - pkin(1) * t118 + pkin(8) * (t119 * t426 + t422 * t134)) * t416, t418 * t144 + (t422 * (t171 * t425 + t482) - t426 * t169) * t416, t418 * t114 + (t422 * (t122 * t425 + t298 * t421) - t426 * t120) * t416, t418 * t139 + (t422 * (t180 * t425 + t235 * t421) - t426 * t178) * t416, t418 * t143 + (t422 * (t170 * t425 - t482) - t426 * t168) * t416, t418 * t140 + (t422 * (t181 * t425 - t232 * t421) - t426 * t179) * t416, t418 * t198 + (t422 * (t204 * t425 + t514) - t426 * t203) * t416, (t33 + pkin(1) * (t133 * t422 - t158 * t426)) * t418 + (t422 * (-pkin(9) * t132 - t421 * t78 + t425 * t75) + t426 * (-pkin(2) * t132 - t438) - pkin(1) * t132 + pkin(8) * (t133 * t426 + t422 * t158)) * t416, (t36 + pkin(1) * (t137 * t422 - t172 * t426)) * t418 + (t422 * (-pkin(9) * t136 - t421 * t80 + t425 * t79) + t426 * (-pkin(2) * t136 - t437) - pkin(1) * t136 + pkin(8) * (t137 * t426 + t422 * t172)) * t416, (t20 + pkin(1) * (t110 * t422 - t121 * t426)) * t418 + (t422 * (-pkin(9) * t109 + t28 * t425 - t421 * t93) + t426 * (-pkin(2) * t109 - t440) - pkin(1) * t109 + pkin(8) * (t110 * t426 + t422 * t121)) * t416, (t6 + pkin(1) * (t35 * t422 - t40 * t426)) * t418 + (t422 * (-pkin(9) * t34 + t21 * t425 - t26 * t421) + t426 * (-pkin(2) * t34 - t435) - pkin(1) * t34 + pkin(8) * (t35 * t426 + t422 * t40)) * t416, t418 * t60 + (t422 * (t425 * t66 + t484) - t426 * t64) * t416, t418 * t39 + (t422 * (t237 * t421 + t425 * t45) - t426 * t43) * t416, t418 * t73 + (t422 * (t156 * t421 + t425 * t88) - t426 * t86) * t416, t418 * t59 + (t422 * (t425 * t65 - t484) - t426 * t63) * t416, t418 * t74 + (t422 * (-t153 * t421 + t425 * t89) - t426 * t87) * t416, t418 * t111 + (t422 * (t113 * t425 + t355 * t421) - t426 * t112) * t416, (t13 + pkin(1) * (t422 * t58 - t426 * t76)) * t418 + (t422 * (-pkin(9) * t57 + t19 * t425 - t29 * t421) + t426 * (-pkin(2) * t57 - t442) - pkin(1) * t57 + pkin(8) * (t422 * t76 + t426 * t58)) * t416, (t14 + pkin(1) * (t422 * t72 - t426 * t84)) * t418 + (t422 * (-pkin(9) * t71 + t22 * t425 - t32 * t421) + t426 * (-pkin(2) * t71 - t441) - pkin(1) * t71 + pkin(8) * (t422 * t84 + t426 * t72)) * t416, (t3 + pkin(1) * (t38 * t422 - t426 * t44)) * t418 + (t422 * (-pkin(9) * t37 - t23 * t421 + t425 * t5) + t426 * (-pkin(2) * t37 - t443) - pkin(1) * t37 + pkin(8) * (t38 * t426 + t422 * t44)) * t416, (t1 + pkin(1) * (-t11 * t426 + t422 * t9)) * t418 + (t422 * (-pkin(9) * t8 + t2 * t425 - t4 * t421) + t426 * (-pkin(2) * t8 - t444) - pkin(1) * t8 + pkin(8) * (t422 * t11 + t426 * t9)) * t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, t395, t372, t402, t373, t409, -t360, -t361, 0, 0, t328, t290, t319, t327, t320, t345, t243, t245, t184, t199, t252, t202, t218, t251, t219, t279, t94, t95, t81, t50, t144, t114, t139, t143, t140, t198, t33, t36, t20, t6, t60, t39, t73, t59, t74, t111, t13, t14, t3, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t507, t364, t334, -t507, -t330, t436, -t276, -t277, 0, 0, t282, t221, t267, -t280, t268, t304, t449, t448, t446, t461, t169, t120, t178, t168, t179, t203, t438, t437, t440, t435, t64, t43, t86, t63, t87, t112, t442, t441, t443, t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, t343, t288, -t344, -t284, t356, -t192, -t193, 0, 0, t299, t298, t235, -t299, -t232, t356, t565, t464 + 0.2e1 * t496, t540, t545, t238, t237, t156, -t238, -t153, t355, t447, t439, t463, t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t553, t254, t194, 0, 0, 0, 0, 0, 0, t152, t555, t197, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, t237, t156, -t238, -t153, t355, -t52, -t53, 0, 0;];
tauJ_reg  = t51;
