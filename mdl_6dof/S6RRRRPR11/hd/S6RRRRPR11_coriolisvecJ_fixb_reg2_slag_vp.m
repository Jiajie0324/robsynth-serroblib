% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR11_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR11_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR11_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR11_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:23:35
% EndTime: 2019-03-09 23:24:23
% DurationCPUTime: 23.57s
% Computational Cost: add. (37917->818), mult. (97036->1124), div. (0->0), fcn. (77697->12), ass. (0->337)
t384 = sin(qJ(2));
t510 = cos(pkin(6));
t448 = pkin(1) * t510;
t366 = t384 * t448;
t383 = sin(qJ(3));
t386 = cos(qJ(3));
t415 = pkin(3) * t383 - pkin(10) * t386;
t379 = sin(pkin(6));
t387 = cos(qJ(2));
t488 = t379 * t387;
t564 = (t366 + (pkin(8) + t415) * t488) * qJD(1) - t415 * qJD(3);
t381 = sin(qJ(6));
t434 = t510 * qJD(1);
t403 = t434 + qJD(2);
t464 = qJD(1) * t384;
t446 = t379 * t464;
t289 = t383 * t403 + t386 * t446;
t382 = sin(qJ(4));
t385 = cos(qJ(4));
t463 = qJD(1) * t387;
t362 = t379 * t463;
t411 = t362 - qJD(3);
t241 = t289 * t382 + t385 * t411;
t243 = t385 * t289 - t382 * t411;
t378 = sin(pkin(12));
t380 = cos(pkin(12));
t432 = t241 * t380 + t378 * t243;
t530 = cos(qJ(6));
t400 = t530 * t432;
t406 = -t241 * t378 + t380 * t243;
t452 = qJD(1) * qJD(2);
t437 = t379 * t452;
t420 = t384 * t437;
t459 = qJD(4) * t382;
t419 = t387 * t437;
t424 = t383 * t446;
t531 = qJD(3) * t424 - t386 * (qJD(3) * t403 + t419);
t542 = qJD(4) * t411 + t531;
t151 = t289 * t459 - t382 * t420 + t385 * t542;
t457 = qJD(4) * t385;
t152 = t289 * t457 - t382 * t542 - t385 * t420;
t433 = -t378 * t151 + t152 * t380;
t455 = qJD(6) * t381;
t83 = -t151 * t380 - t152 * t378;
t26 = qJD(6) * t400 + t381 * t433 + t406 * t455 - t530 * t83;
t287 = -t386 * t403 + t424;
t281 = qJD(4) + t287;
t268 = qJD(6) + t281;
t89 = t381 * t406 + t400;
t519 = t268 * t89;
t563 = -t26 + t519;
t526 = t89 ^ 2;
t547 = -t381 * t432 + t406 * t530;
t527 = t547 ^ 2;
t562 = -t526 + t527;
t525 = t89 * t547;
t425 = t387 * t448;
t316 = -pkin(8) * t446 + qJD(1) * t425;
t401 = (pkin(2) * t384 - pkin(9) * t387) * t379;
t317 = qJD(1) * t401;
t230 = t386 * t316 + t383 * t317;
t214 = pkin(10) * t446 + t230;
t355 = -pkin(3) * t386 - pkin(10) * t383 - pkin(2);
t561 = t385 * t214 - t355 * t457 + t382 * t564;
t422 = t386 * t362;
t272 = t382 * t422 - t385 * t446;
t460 = qJD(3) * t386;
t413 = -t382 * t460 + t272;
t465 = qJD(1) * t379;
t484 = t385 * t387;
t273 = (t382 * t384 + t386 * t484) * t465;
t560 = -t385 * t460 + t273;
t461 = qJD(3) * t383;
t450 = pkin(9) * t461;
t559 = -t564 * t385 + (t214 + t450) * t382;
t265 = -pkin(2) * t403 - t316;
t182 = t287 * pkin(3) - t289 * pkin(10) + t265;
t467 = pkin(8) * t488 + t366;
t308 = t510 * pkin(9) + t467;
t266 = qJD(2) * pkin(9) + qJD(1) * t308;
t309 = (-pkin(2) * t387 - pkin(9) * t384 - pkin(1)) * t379;
t279 = qJD(1) * t309;
t202 = t386 * t266 + t383 * t279;
t186 = -pkin(10) * t411 + t202;
t109 = t385 * t182 - t186 * t382;
t84 = -qJ(5) * t243 + t109;
t71 = pkin(4) * t281 + t84;
t110 = t182 * t382 + t186 * t385;
t85 = -qJ(5) * t241 + t110;
t79 = t378 * t85;
t44 = t380 * t71 - t79;
t540 = pkin(11) * t406;
t31 = pkin(5) * t281 + t44 - t540;
t518 = t380 * t85;
t45 = t378 * t71 + t518;
t549 = pkin(11) * t432;
t35 = t45 - t549;
t439 = qJD(6) * t530;
t404 = t383 * t419;
t453 = t289 * qJD(3);
t244 = t404 + t453;
t318 = qJD(2) * t401;
t299 = qJD(1) * t318;
t489 = t379 * t384;
t333 = -pkin(8) * t489 + t425;
t320 = t333 * qJD(2);
t300 = qJD(1) * t320;
t396 = t266 * t461 - t279 * t460 - t383 * t299 - t386 * t300;
t131 = pkin(10) * t420 - t396;
t410 = pkin(8) * t419;
t414 = qJD(2) * t434;
t150 = pkin(1) * t384 * t414 + t244 * pkin(3) + pkin(10) * t531 + t410;
t54 = -qJD(4) * t110 - t131 * t382 + t385 * t150;
t30 = pkin(4) * t244 + qJ(5) * t151 - qJD(5) * t243 + t54;
t53 = t385 * t131 + t382 * t150 + t182 * t457 - t186 * t459;
t33 = -qJ(5) * t152 - qJD(5) * t241 + t53;
t8 = t380 * t30 - t378 * t33;
t6 = pkin(5) * t244 - pkin(11) * t83 + t8;
t9 = t378 * t30 + t380 * t33;
t7 = -pkin(11) * t433 + t9;
t393 = -t31 * t439 + t35 * t455 - t381 * t6 - t530 * t7;
t201 = -t383 * t266 + t386 * t279;
t185 = pkin(3) * t411 - t201;
t137 = t241 * pkin(4) + qJD(5) + t185;
t75 = pkin(5) * t432 + t137;
t558 = t75 * t89 + t393;
t219 = pkin(3) * t289 + pkin(10) * t287;
t135 = -t201 * t382 + t385 * t219;
t524 = -qJ(5) - pkin(10);
t435 = qJD(4) * t524;
t557 = -pkin(4) * t289 - qJD(5) * t382 - t135 + (-qJ(5) * t287 + t435) * t385;
t136 = t385 * t201 + t382 * t219;
t456 = qJD(5) * t385;
t492 = t287 * t382;
t556 = qJ(5) * t492 - t382 * t435 + t136 - t456;
t485 = t385 * t386;
t368 = pkin(9) * t485;
t423 = t383 * t362;
t555 = -pkin(4) * t423 + qJ(5) * t273 - t383 * t456 + (pkin(4) * t383 - qJ(5) * t485) * qJD(3) + (-t368 + (qJ(5) * t383 - t355) * t382) * qJD(4) + t559;
t486 = t383 * t385;
t554 = -qJ(5) * t272 - (-pkin(9) * qJD(3) - qJ(5) * qJD(4)) * t486 - (-qJD(5) * t383 + (-pkin(9) * qJD(4) - qJ(5) * qJD(3)) * t386) * t382 + t561;
t27 = qJD(6) * t547 + t381 * t83 + t530 * t433;
t517 = t547 * t268;
t553 = -t27 + t517;
t337 = t378 * t382 - t380 * t385;
t338 = t378 * t385 + t380 * t382;
t458 = qJD(4) * t383;
t474 = t380 * t272 + t273 * t378 + t337 * t458 - t338 * t460;
t327 = t338 * qJD(4);
t473 = t327 * t383 - t378 * t413 + t380 * t560;
t471 = t338 * t287 + t327;
t470 = t281 * t337;
t552 = t383 * t457 - t413;
t551 = t423 - t461;
t12 = t381 * t31 + t35 * t530;
t2 = -qJD(6) * t12 - t381 * t7 + t530 * t6;
t550 = -t547 * t75 + t2;
t516 = t378 * t554 + t380 * t555;
t515 = t378 * t555 - t380 * t554;
t512 = t556 * t378 + t380 * t557;
t511 = t378 * t557 - t556 * t380;
t548 = t432 * t406;
t546 = pkin(5) * t551 - pkin(11) * t473 - t516;
t545 = -pkin(11) * t474 - t515;
t544 = pkin(5) * t289 - pkin(11) * t470 - t512;
t543 = -pkin(11) * t471 + t511;
t375 = t379 ^ 2;
t438 = t375 * t452;
t541 = -0.2e1 * t438;
t539 = -t109 * t281 + t53;
t538 = -t110 * t281 - t54;
t536 = t384 * t387;
t534 = t411 * t383;
t418 = -t202 + (t459 + t492) * pkin(4);
t307 = -pkin(2) * t510 - t333;
t329 = t383 * t489 - t386 * t510;
t330 = t383 * t510 + t386 * t489;
t209 = t329 * pkin(3) - t330 * pkin(10) + t307;
t221 = t386 * t308 + t383 * t309;
t211 = -pkin(10) * t488 + t221;
t134 = t382 * t209 + t385 * t211;
t533 = t230 + t450;
t229 = -t383 * t316 + t317 * t386;
t213 = -pkin(3) * t446 - t229;
t472 = pkin(4) * t552 + pkin(9) * t460 - t213;
t297 = t382 * t355 + t368;
t532 = t422 - t460;
t388 = qJD(1) ^ 2;
t529 = pkin(4) * t378;
t528 = pkin(9) * t386;
t374 = t383 * pkin(9);
t356 = t524 * t382;
t357 = t524 * t385;
t263 = t380 * t356 + t357 * t378;
t237 = -pkin(11) * t338 + t263;
t264 = t378 * t356 - t380 * t357;
t238 = -pkin(11) * t337 + t264;
t157 = t381 * t237 + t238 * t530;
t523 = qJD(6) * t157 + t543 * t381 + t544 * t530;
t156 = t237 * t530 - t381 * t238;
t522 = -qJD(6) * t156 + t544 * t381 - t543 * t530;
t340 = t385 * t355;
t250 = -qJ(5) * t486 + t340 + (-pkin(9) * t382 - pkin(4)) * t386;
t487 = t382 * t383;
t261 = -qJ(5) * t487 + t297;
t188 = t380 * t250 - t261 * t378;
t314 = t337 * t383;
t153 = -pkin(5) * t386 + pkin(11) * t314 + t188;
t189 = t378 * t250 + t380 * t261;
t313 = t338 * t383;
t161 = -pkin(11) * t313 + t189;
t87 = t381 * t153 + t161 * t530;
t521 = qJD(6) * t87 - t545 * t381 + t546 * t530;
t86 = t153 * t530 - t381 * t161;
t520 = -qJD(6) * t86 + t546 * t381 + t545 * t530;
t444 = qJD(2) * t488;
t256 = -qJD(3) * t329 + t386 * t444;
t257 = t330 * t382 + t379 * t484;
t462 = qJD(2) * t384;
t445 = t379 * t462;
t181 = -qJD(4) * t257 + t256 * t385 + t382 * t445;
t255 = qJD(3) * t330 + t383 * t444;
t449 = t382 * t488;
t258 = t330 * t385 - t449;
t154 = -t308 * t461 + t309 * t460 + t383 * t318 + t386 * t320;
t143 = pkin(10) * t445 + t154;
t321 = t467 * qJD(2);
t171 = t255 * pkin(3) - t256 * pkin(10) + t321;
t64 = -qJD(4) * t134 - t143 * t382 + t385 * t171;
t42 = pkin(4) * t255 - qJ(5) * t181 - qJD(5) * t258 + t64;
t180 = -qJD(4) * t449 + t256 * t382 + t330 * t457 - t385 * t445;
t63 = t385 * t143 + t382 * t171 + t209 * t457 - t211 * t459;
t46 = -qJ(5) * t180 - qJD(5) * t257 + t63;
t17 = t378 * t42 + t380 * t46;
t51 = t380 * t84 - t79;
t111 = -qJ(5) * t257 + t134;
t133 = t385 * t209 - t211 * t382;
t98 = pkin(4) * t329 - qJ(5) * t258 + t133;
t60 = t380 * t111 + t378 * t98;
t371 = pkin(4) * t380 + pkin(5);
t323 = t381 * t371 + t529 * t530;
t50 = -t378 * t84 - t518;
t36 = t50 + t549;
t37 = t51 - t540;
t514 = t323 * qJD(6) + t36 * t530 - t381 * t37;
t322 = t371 * t530 - t381 * t529;
t513 = -t322 * qJD(6) + t381 * t36 + t37 * t530;
t139 = -t266 * t460 - t279 * t461 + t386 * t299 - t383 * t300;
t132 = -pkin(3) * t420 - t139;
t507 = t132 * t382;
t506 = t132 * t385;
t505 = t151 * t382;
t504 = t152 * t385;
t503 = t406 * t281;
t502 = t432 * t281;
t501 = t406 ^ 2;
t500 = t241 * t281;
t498 = t241 * t382;
t497 = t243 * t241;
t496 = t243 * t281;
t212 = t244 * t329;
t495 = t244 * t382;
t494 = t244 * t385;
t493 = t281 * t289;
t491 = t289 * t287;
t421 = t289 * t362;
t490 = t375 * t388;
t483 = t386 * t244;
t482 = t471 * pkin(5) + t418;
t481 = t313 * t439 - t314 * t455 - t474 * t381 + t473 * t530;
t226 = -t381 * t313 - t314 * t530;
t480 = qJD(6) * t226 - t473 * t381 - t474 * t530;
t479 = -t474 * pkin(5) + t472;
t248 = -t381 * t337 + t338 * t530;
t478 = -qJD(6) * t248 + t470 * t381 - t471 * t530;
t477 = t337 * t439 + t338 * t455 + t471 * t381 + t470 * t530;
t476 = qJD(4) * t297 - t559;
t475 = -(-t385 * t461 - t386 * t459) * pkin(9) + t561;
t346 = pkin(4) * t487 + t374;
t466 = t384 ^ 2 - t387 ^ 2;
t454 = t265 * qJD(3);
t372 = -pkin(4) * t385 - pkin(3);
t440 = t386 * t453;
t16 = -t378 * t46 + t380 * t42;
t59 = -t111 * t378 + t380 * t98;
t220 = -t383 * t308 + t309 * t386;
t431 = t387 * t411;
t430 = t281 * t385;
t429 = t411 * t379;
t428 = qJD(3) * t411;
t426 = t490 * t536;
t417 = t379 * t388 * t510;
t416 = pkin(1) * t541;
t210 = pkin(3) * t488 - t220;
t409 = t432 ^ 2;
t408 = -t109 * t385 - t110 * t382;
t407 = -t139 * t383 - t386 * t396;
t405 = t438 * t536;
t402 = 0.2e1 * t434 + qJD(2);
t155 = -t308 * t460 - t309 * t461 + t318 * t386 - t383 * t320;
t192 = -t257 * t378 + t258 * t380;
t48 = pkin(5) * t329 - pkin(11) * t192 + t59;
t191 = t380 * t257 + t258 * t378;
t52 = -pkin(11) * t191 + t60;
t18 = -t381 * t52 + t48 * t530;
t19 = t381 * t48 + t52 * t530;
t117 = -t381 * t191 + t192 * t530;
t397 = -pkin(10) * t244 + t185 * t281;
t165 = pkin(4) * t257 + t210;
t394 = pkin(1) * (-t414 + t490);
t144 = -pkin(3) * t445 - t155;
t72 = t152 * pkin(4) + t132;
t93 = pkin(4) * t180 + t144;
t47 = pkin(5) * t433 + t72;
t319 = t467 * qJD(1);
t301 = qJD(1) * t321;
t298 = pkin(5) * t337 + t372;
t296 = -t382 * t528 + t340;
t251 = pkin(5) * t313 + t346;
t247 = t337 * t530 + t338 * t381;
t225 = t313 * t530 - t314 * t381;
t142 = -t281 * t534 - t483;
t140 = t255 * t281 + t212;
t124 = pkin(4) * t243 + pkin(5) * t406;
t116 = t191 * t530 + t192 * t381;
t107 = pkin(5) * t191 + t165;
t106 = -t180 * t378 + t181 * t380;
t104 = t380 * t180 + t181 * t378;
t57 = pkin(5) * t104 + t93;
t39 = qJD(6) * t117 + t104 * t530 + t381 * t106;
t38 = t381 * t104 - t106 * t530 + t191 * t439 + t192 * t455;
t13 = -pkin(11) * t104 + t17;
t11 = t31 * t530 - t381 * t35;
t10 = pkin(5) * t255 - pkin(11) * t106 + t16;
t4 = -qJD(6) * t19 + t10 * t530 - t381 * t13;
t3 = qJD(6) * t18 + t381 * t10 + t13 * t530;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t405, t466 * t541, t402 * t444, -0.2e1 * t405, -t402 * t445, 0, -t301 * t510 - t321 * t403 + t384 * t416, -t300 * t510 - t320 * t403 + t387 * t416 (t300 * t387 + t301 * t384 + (-t316 * t387 - t319 * t384) * qJD(2) + (t320 * t387 + t321 * t384 + (-t333 * t387 - t384 * t467) * qJD(2)) * qJD(1)) * t379, t300 * t467 - t301 * t333 - t316 * t321 + t319 * t320, t289 * t256 - t330 * t531, -t330 * t244 - t289 * t255 - t256 * t287 + t329 * t531, -t256 * t411 + t289 * t445 + t330 * t420 + t488 * t531, t255 * t287 + t212, t255 * t411 + (t244 * t387 + (-qJD(1) * t329 - t287) * t462) * t379 (-t375 * t463 - t429) * t462, -t155 * t411 + t321 * t287 + t307 * t244 + t301 * t329 + t265 * t255 + (-t139 * t387 + (qJD(1) * t220 + t201) * t462) * t379, t154 * t411 - t202 * t445 - t221 * t420 + t265 * t256 + t321 * t289 + t301 * t330 - t307 * t531 - t396 * t488, -t139 * t330 - t154 * t287 - t155 * t289 - t201 * t256 - t202 * t255 + t220 * t531 - t221 * t244 + t329 * t396, t139 * t220 + t154 * t202 + t155 * t201 - t221 * t396 + t265 * t321 + t301 * t307, -t151 * t258 + t181 * t243, t151 * t257 - t152 * t258 - t180 * t243 - t181 * t241, -t151 * t329 + t181 * t281 + t243 * t255 + t244 * t258, t152 * t257 + t180 * t241, -t152 * t329 - t180 * t281 - t241 * t255 - t244 * t257, t140, t109 * t255 + t132 * t257 + t133 * t244 + t144 * t241 + t152 * t210 + t180 * t185 + t281 * t64 + t329 * t54, -t110 * t255 + t132 * t258 - t134 * t244 + t144 * t243 - t151 * t210 + t181 * t185 - t281 * t63 - t329 * t53, -t109 * t181 - t110 * t180 + t133 * t151 - t134 * t152 - t241 * t63 - t243 * t64 - t257 * t53 - t258 * t54, t109 * t64 + t110 * t63 + t132 * t210 + t133 * t54 + t134 * t53 + t144 * t185, t106 * t406 + t192 * t83, -t104 * t406 - t106 * t432 - t83 * t191 - t192 * t433, t106 * t281 + t192 * t244 + t255 * t406 + t329 * t83, t104 * t432 + t191 * t433, -t104 * t281 - t191 * t244 - t255 * t432 - t329 * t433, t140, t137 * t104 + t16 * t281 + t165 * t433 + t72 * t191 + t59 * t244 + t44 * t255 + t8 * t329 + t432 * t93, t106 * t137 + t165 * t83 - t17 * t281 + t192 * t72 - t244 * t60 - t255 * t45 - t329 * t9 + t406 * t93, -t45 * t104 - t44 * t106 - t16 * t406 - t17 * t432 - t9 * t191 - t8 * t192 - t433 * t60 - t59 * t83, t137 * t93 + t16 * t44 + t165 * t72 + t17 * t45 + t59 * t8 + t60 * t9, -t117 * t26 - t38 * t547, t116 * t26 - t117 * t27 + t38 * t89 - t39 * t547, t117 * t244 + t255 * t547 - t26 * t329 - t268 * t38, t116 * t27 + t39 * t89, -t116 * t244 - t255 * t89 - t268 * t39 - t27 * t329, t255 * t268 + t212, t107 * t27 + t11 * t255 + t116 * t47 + t18 * t244 + t2 * t329 + t268 * t4 + t39 * t75 + t57 * t89, -t107 * t26 + t117 * t47 - t12 * t255 - t19 * t244 - t268 * t3 + t329 * t393 - t38 * t75 + t547 * t57, t11 * t38 + t116 * t393 - t117 * t2 - t12 * t39 + t18 * t26 - t19 * t27 - t3 * t89 - t4 * t547, t107 * t47 + t11 * t4 + t12 * t3 + t18 * t2 - t19 * t393 + t57 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t466 * t490, -t387 * t417, t426, t384 * t417, 0, t319 * t403 + t384 * t394 - t410, pkin(8) * t420 + t316 * t403 + t387 * t394, 0, 0, -t383 * t531 - t386 * t421 + t440, -t386 * t531 + t532 * t287 + (-t244 + t421 - t453) * t383, -t386 * t428 + (t386 * t431 + (qJD(2) * t383 - t289) * t384) * t465, -t287 * t534 - t483, t383 * t428 + (-t383 * t431 + (qJD(2) * t386 + t287) * t384) * t465, t429 * t464, -pkin(2) * t244 + t383 * t454 + t229 * t411 - t319 * t287 + (pkin(9) * t428 - t301) * t386 + (-t201 * t384 + (-pkin(9) * t462 - t265 * t387) * t383) * t465, pkin(2) * t531 + t202 * t446 - t265 * t422 - t319 * t289 + t301 * t383 + t386 * t454 - t411 * t533 - t420 * t528, t229 * t289 - t531 * t374 + t407 + t533 * t287 + t551 * t202 + t532 * t201 + (t440 - t483) * pkin(9), -pkin(2) * t301 - t201 * t229 - t202 * t230 - t265 * t319 + ((-t201 * t386 - t202 * t383) * qJD(3) + t407) * pkin(9), -t151 * t486 + (-t382 * t458 - t560) * t243, t241 * t273 + t243 * t272 + (-t241 * t385 - t243 * t382) * t460 + (t505 - t504 + (-t243 * t385 + t498) * qJD(4)) * t383, t151 * t386 - t560 * t281 + (-t243 * t411 - t281 * t459 + t494) * t383, t152 * t487 + t241 * t552, t152 * t386 + t413 * t281 + (t241 * t411 - t281 * t457 - t495) * t383, t142, -t185 * t272 - t213 * t241 + t244 * t296 - t476 * t281 + (-t54 + (pkin(9) * t241 + t185 * t382) * qJD(3)) * t386 + (pkin(9) * t152 - t109 * t411 + t185 * t457 + t507) * t383, -t185 * t273 - t213 * t243 - t244 * t297 + t475 * t281 + (t53 + (pkin(9) * t243 + t185 * t385) * qJD(3)) * t386 + (-pkin(9) * t151 + t110 * t411 - t185 * t459 + t506) * t383, t109 * t273 + t110 * t272 + t151 * t296 - t152 * t297 + t476 * t243 + t475 * t241 + t408 * t460 + (-t382 * t53 - t385 * t54 + (t109 * t382 - t110 * t385) * qJD(4)) * t383, -t185 * t213 + t296 * t54 + t297 * t53 - t475 * t110 - t476 * t109 + (t132 * t383 + t185 * t460) * pkin(9), -t314 * t83 - t406 * t473, -t83 * t313 + t314 * t433 + t406 * t474 + t432 * t473, -t244 * t314 - t281 * t473 - t386 * t83 - t406 * t534, t313 * t433 - t432 * t474, -t313 * t244 + t474 * t281 + t433 * t386 + t432 * t534, t142, -t137 * t474 + t188 * t244 + t281 * t516 + t72 * t313 + t346 * t433 - t8 * t386 + t432 * t472 - t44 * t534, -t137 * t473 - t189 * t244 - t281 * t515 - t314 * t72 + t346 * t83 + t386 * t9 + t406 * t472 + t45 * t534, -t188 * t83 - t189 * t433 - t9 * t313 + t8 * t314 - t406 * t516 - t515 * t432 + t44 * t473 + t45 * t474, t137 * t472 + t188 * t8 + t189 * t9 + t346 * t72 + t44 * t516 + t45 * t515, -t226 * t26 - t481 * t547, t225 * t26 - t226 * t27 - t480 * t547 + t481 * t89, t226 * t244 + t26 * t386 - t268 * t481 - t534 * t547, t225 * t27 + t480 * t89, -t225 * t244 - t268 * t480 + t27 * t386 + t534 * t89, -t268 * t534 - t483, -t11 * t534 - t2 * t386 + t225 * t47 + t244 * t86 + t251 * t27 - t268 * t521 + t479 * t89 + t480 * t75, t12 * t534 + t226 * t47 - t244 * t87 - t251 * t26 + t268 * t520 - t386 * t393 + t479 * t547 - t481 * t75, t11 * t481 - t12 * t480 - t2 * t226 + t225 * t393 + t26 * t86 - t27 * t87 + t520 * t89 + t521 * t547, -t11 * t521 - t12 * t520 + t2 * t86 + t251 * t47 - t393 * t87 + t479 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, -t287 ^ 2 + t289 ^ 2, -t287 * t411 - t531, -t491, -t404 - t421, t420, -t202 * t411 - t265 * t289 + t139, -t201 * t411 + t265 * t287 + t396, 0, 0, t243 * t430 - t505 (-t151 - t500) * t385 + (-t152 - t496) * t382, -t243 * t289 + t281 * t430 + t495, t281 * t498 - t504, -t281 ^ 2 * t382 + t241 * t289 + t494, -t493, -pkin(3) * t152 - t109 * t289 - t506 - t202 * t241 + (-pkin(10) * t457 - t135) * t281 + t397 * t382, pkin(3) * t151 + t110 * t289 + t507 - t202 * t243 + (pkin(10) * t459 + t136) * t281 + t397 * t385, t135 * t243 + t136 * t241 + ((qJD(4) * t243 - t152) * pkin(10) + t539) * t385 + ((qJD(4) * t241 - t151) * pkin(10) + t538) * t382, -pkin(3) * t132 - t109 * t135 - t110 * t136 - t185 * t202 + (qJD(4) * t408 - t382 * t54 + t385 * t53) * pkin(10), t338 * t83 - t406 * t470, -t83 * t337 - t338 * t433 - t406 * t471 + t432 * t470, t244 * t338 - t281 * t470 - t289 * t406, t337 * t433 + t432 * t471, -t337 * t244 - t281 * t471 + t289 * t432, -t493, t137 * t471 + t263 * t244 + t281 * t512 - t44 * t289 + t72 * t337 + t372 * t433 + t418 * t432, -t137 * t470 - t244 * t264 - t281 * t511 + t289 * t45 + t338 * t72 + t372 * t83 + t406 * t418, -t263 * t83 - t264 * t433 - t9 * t337 - t8 * t338 - t406 * t512 - t511 * t432 + t44 * t470 - t45 * t471, t137 * t418 + t263 * t8 + t264 * t9 + t372 * t72 + t44 * t512 + t45 * t511, -t248 * t26 - t477 * t547, t247 * t26 - t248 * t27 + t477 * t89 + t478 * t547, t244 * t248 - t268 * t477 - t289 * t547, t247 * t27 - t478 * t89, -t244 * t247 + t268 * t478 + t289 * t89, -t268 * t289, -t11 * t289 + t156 * t244 + t247 * t47 - t268 * t523 + t27 * t298 - t478 * t75 + t482 * t89, t12 * t289 - t157 * t244 + t248 * t47 - t26 * t298 + t268 * t522 - t477 * t75 + t482 * t547, t11 * t477 + t12 * t478 + t156 * t26 - t157 * t27 - t2 * t248 + t247 * t393 + t522 * t89 + t523 * t547, -t11 * t523 - t12 * t522 + t156 * t2 - t157 * t393 + t298 * t47 + t482 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t497, -t241 ^ 2 + t243 ^ 2, -t151 + t500, -t497, -t152 + t496, t244, -t185 * t243 - t538, t185 * t241 - t539, 0, 0, t548, -t409 + t501, t83 + t502, -t548, -t433 + t503, t244, -t137 * t406 - t50 * t281 + (-t243 * t432 + t380 * t244) * pkin(4) + t8, t137 * t432 + t281 * t51 + (-t243 * t406 - t244 * t378) * pkin(4) - t9 (-t378 * t433 - t380 * t83) * pkin(4) + (t45 + t50) * t406 + (t51 - t44) * t432, -t44 * t50 - t45 * t51 + (-t137 * t243 + t378 * t9 + t380 * t8) * pkin(4), t525, t562, t563, -t525, t553, t244, -t124 * t89 + t322 * t244 - t268 * t514 + t550, -t124 * t547 - t323 * t244 + t268 * t513 + t558, t26 * t322 - t27 * t323 + (t12 + t514) * t547 + (-t11 + t513) * t89, -t11 * t514 - t12 * t513 - t124 * t75 + t2 * t322 - t323 * t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t433 + t503, t83 - t502, -t409 - t501, t406 * t44 + t432 * t45 + t72, 0, 0, 0, 0, 0, 0, t27 + t517, -t26 - t519, -t526 - t527, t11 * t547 + t12 * t89 + t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t525, t562, t563, -t525, t553, t244, t12 * t268 + t550, t11 * t268 + t558, 0, 0;];
tauc_reg  = t1;
