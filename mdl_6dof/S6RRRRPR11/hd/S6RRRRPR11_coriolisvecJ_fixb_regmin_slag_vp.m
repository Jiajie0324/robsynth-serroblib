% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR11_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR11_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR11_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR11_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:23:34
% EndTime: 2019-03-09 23:24:05
% DurationCPUTime: 12.68s
% Computational Cost: add. (16903->597), mult. (43686->847), div. (0->0), fcn. (35202->12), ass. (0->290)
t316 = sin(pkin(6));
t326 = cos(qJ(2));
t406 = qJD(1) * t326;
t385 = t316 * t406;
t295 = -qJD(3) + t385;
t322 = sin(qJ(2));
t318 = cos(pkin(6));
t407 = qJD(1) * t318;
t393 = pkin(1) * t407;
t262 = pkin(8) * t385 + t322 * t393;
t321 = sin(qJ(3));
t325 = cos(qJ(3));
t486 = t262 + t295 * (pkin(3) * t321 - pkin(10) * t325);
t366 = qJD(2) + t407;
t408 = qJD(1) * t316;
t386 = t322 * t408;
t239 = t321 * t366 + t325 * t386;
t320 = sin(qJ(4));
t324 = cos(qJ(4));
t192 = t239 * t320 + t324 * t295;
t194 = t239 * t324 - t295 * t320;
t315 = sin(pkin(12));
t317 = cos(pkin(12));
t127 = t192 * t315 - t194 * t317;
t319 = sin(qJ(6));
t323 = cos(qJ(6));
t396 = qJD(6) * t319;
t349 = -t192 * t317 - t194 * t315;
t425 = t323 * t349;
t395 = qJD(1) * qJD(2);
t376 = t316 * t395;
t360 = t326 * t376;
t465 = -t321 * t386 + t325 * t366;
t195 = qJD(3) * t465 + t325 * t360;
t361 = t322 * t376;
t398 = qJD(4) * t324;
t400 = qJD(4) * t320;
t120 = t324 * t195 - t239 * t400 - t295 * t398 + t320 * t361;
t121 = qJD(4) * t194 + t195 * t320 - t324 * t361;
t67 = -t120 * t315 - t121 * t317;
t68 = t120 * t317 - t121 * t315;
t14 = qJD(6) * t425 + t127 * t396 + t319 * t67 + t323 * t68;
t232 = qJD(4) - t465;
t220 = qJD(6) + t232;
t74 = t127 * t319 + t425;
t448 = t220 * t74;
t485 = t14 - t448;
t218 = pkin(9) * t366 + t262;
t255 = (-pkin(2) * t326 - pkin(9) * t322 - pkin(1)) * t316;
t231 = qJD(1) * t255;
t162 = -t321 * t218 + t231 * t325;
t146 = pkin(3) * t295 - t162;
t113 = pkin(4) * t192 + qJD(5) + t146;
t59 = -pkin(5) * t349 + t113;
t484 = t59 * t74;
t464 = -t323 * t127 + t319 * t349;
t483 = t464 * t74;
t403 = qJD(3) * t321;
t454 = pkin(9) * t320;
t482 = -t324 * t486 + t403 * t454;
t224 = t320 * t325 * t385 - t324 * t386;
t401 = qJD(3) * t325;
t471 = -t320 * t401 + t224;
t423 = t325 * t326;
t225 = (t320 * t322 + t324 * t423) * t408;
t481 = -t324 * t401 + t225;
t259 = -pkin(8) * t386 + t326 * t393;
t341 = (pkin(2) * t322 - pkin(9) * t326) * t316;
t260 = qJD(1) * t341;
t414 = t325 * t259 + t321 * t260;
t175 = pkin(10) * t386 + t414;
t294 = -pkin(3) * t325 - pkin(10) * t321 - pkin(2);
t480 = t324 * t175 - t294 * t398 + t320 * t486;
t479 = t464 ^ 2 - t74 ^ 2;
t477 = t59 * t464;
t15 = qJD(6) * t464 + t319 * t68 - t323 * t67;
t449 = t220 * t464;
t476 = -t15 + t449;
t453 = -qJ(5) - pkin(10);
t373 = qJD(4) * t453;
t397 = qJD(5) * t324;
t178 = pkin(3) * t239 - pkin(10) * t465;
t418 = t324 * t162 + t320 * t178;
t433 = t465 * t320;
t475 = qJ(5) * t433 + t320 * t373 + t397 - t418;
t177 = t324 * t178;
t474 = -pkin(4) * t239 - t177 + (qJ(5) * t465 + t373) * t324 + (-qJD(5) + t162) * t320;
t424 = t324 * t325;
t307 = pkin(9) * t424;
t362 = t321 * t385;
t455 = pkin(4) * t321;
t473 = -pkin(4) * t362 + qJ(5) * t225 + t175 * t320 - t321 * t397 + (-qJ(5) * t424 + t455) * qJD(3) + (-t307 + (qJ(5) * t321 - t294) * t320) * qJD(4) + t482;
t426 = t321 * t324;
t472 = -qJ(5) * t224 - (-pkin(9) * qJD(3) - qJ(5) * qJD(4)) * t426 - (-qJD(5) * t321 + (-pkin(9) * qJD(4) - qJ(5) * qJD(3)) * t325) * t320 + t480;
t470 = pkin(11) * t127;
t277 = t315 * t324 + t317 * t320;
t469 = t232 * t277;
t346 = t315 * t320 - t317 * t324;
t468 = t232 * t346;
t399 = qJD(4) * t321;
t467 = -t224 * t317 - t225 * t315 + t277 * t401 - t346 * t399;
t466 = t277 * t399 - t315 * t471 + t317 * t481;
t463 = pkin(11) * t349;
t452 = t315 * t472 + t317 * t473;
t451 = t315 * t473 - t317 * t472;
t446 = -t315 * t475 + t317 * t474;
t445 = t315 * t474 + t317 * t475;
t461 = t322 * t326;
t429 = t316 * t322;
t304 = pkin(8) * t429;
t457 = pkin(1) * t326;
t253 = t304 + (-pkin(2) - t457) * t318;
t270 = -t318 * t325 + t321 * t429;
t271 = t318 * t321 + t325 * t429;
t170 = t270 * pkin(3) - t271 * pkin(10) + t253;
t428 = t316 * t326;
t394 = pkin(8) * t428;
t458 = pkin(1) * t322;
t254 = t394 + (pkin(9) + t458) * t318;
t415 = t325 * t254 + t321 * t255;
t172 = -pkin(10) * t428 + t415;
t417 = t320 * t170 + t324 * t172;
t369 = -t321 * t259 + t260 * t325;
t174 = -pkin(3) * t386 - t369;
t460 = -pkin(4) * t471 + pkin(9) * t401 + t398 * t455 - t174;
t163 = t325 * t218 + t321 * t231;
t459 = -t163 + (t400 - t433) * pkin(4);
t217 = -pkin(2) * t366 - t259;
t144 = -pkin(3) * t465 - t239 * pkin(10) + t217;
t147 = -pkin(10) * t295 + t163;
t89 = t324 * t144 - t147 * t320;
t69 = -qJ(5) * t194 + t89;
t55 = pkin(4) * t232 + t69;
t90 = t144 * t320 + t147 * t324;
t70 = -qJ(5) * t192 + t90;
t63 = t315 * t70;
t32 = t317 * t55 - t63;
t19 = pkin(5) * t232 + t32 + t470;
t447 = t317 * t70;
t33 = t315 * t55 + t447;
t23 = t33 + t463;
t196 = qJD(3) * t239 + t321 * t360;
t261 = qJD(2) * t341;
t247 = qJD(1) * t261;
t263 = (t318 * t457 - t304) * qJD(2);
t248 = qJD(1) * t263;
t336 = -t218 * t403 + t231 * t401 + t321 * t247 + t325 * t248;
t111 = pkin(10) * t361 + t336;
t264 = (t318 * t458 + t394) * qJD(2);
t249 = qJD(1) * t264;
t119 = t196 * pkin(3) - t195 * pkin(10) + t249;
t42 = -qJD(4) * t90 - t111 * t320 + t324 * t119;
t18 = pkin(4) * t196 - qJ(5) * t120 - qJD(5) * t194 + t42;
t41 = t324 * t111 + t320 * t119 + t144 * t398 - t147 * t400;
t21 = -qJ(5) * t121 - qJD(5) * t192 + t41;
t6 = t317 * t18 - t21 * t315;
t4 = pkin(5) * t196 - pkin(11) * t68 + t6;
t378 = -t23 * t396 + t319 * t4;
t7 = t315 * t18 + t317 * t21;
t5 = pkin(11) * t67 + t7;
t1 = t323 * (qJD(6) * t19 + t5) + t378;
t327 = qJD(1) ^ 2;
t456 = pkin(4) * t315;
t383 = qJD(2) * t428;
t208 = -qJD(3) * t270 + t325 * t383;
t209 = t271 * t320 + t324 * t428;
t405 = qJD(2) * t322;
t384 = t316 * t405;
t143 = -qJD(4) * t209 + t208 * t324 + t320 * t384;
t207 = qJD(3) * t271 + t321 * t383;
t391 = t320 * t428;
t210 = t271 * t324 - t391;
t335 = -t254 * t403 + t255 * t401 + t321 * t261 + t325 * t263;
t115 = pkin(10) * t384 + t335;
t135 = t207 * pkin(3) - t208 * pkin(10) + t264;
t329 = -qJD(4) * t417 - t115 * t320 + t324 * t135;
t30 = pkin(4) * t207 - qJ(5) * t143 - qJD(5) * t210 + t329;
t142 = -qJD(4) * t391 + t208 * t320 + t271 * t398 - t324 * t384;
t334 = t324 * t115 + t320 * t135 + t170 * t398 - t172 * t400;
t34 = -qJ(5) * t142 - qJD(5) * t209 + t334;
t13 = t315 * t30 + t317 * t34;
t39 = t317 * t69 - t63;
t372 = t324 * t170 - t172 * t320;
t80 = pkin(4) * t270 - qJ(5) * t210 + t372;
t91 = -qJ(5) * t209 + t417;
t48 = t315 * t80 + t317 * t91;
t450 = t19 * t323;
t444 = pkin(5) * t469 + t459;
t257 = t277 * t321;
t258 = t346 * t321;
t348 = -t323 * t257 + t258 * t319;
t443 = qJD(6) * t348 - t319 * t467 - t323 * t466;
t364 = t218 * t401 + t231 * t403 - t325 * t247 + t321 * t248;
t112 = -pkin(3) * t361 + t364;
t442 = t112 * t320;
t441 = t112 * t324;
t440 = t120 * t320;
t439 = t192 * t232;
t438 = t194 * t232;
t437 = t196 * t320;
t436 = t196 * t324;
t435 = t196 * t325;
t434 = t465 * t295;
t432 = t239 * t295;
t339 = t295 * t321;
t431 = t295 * t325;
t312 = t316 ^ 2;
t430 = t312 * t327;
t427 = t320 * t321;
t181 = -t257 * t319 - t258 * t323;
t422 = qJD(6) * t181 - t319 * t466 + t323 * t467;
t347 = -t277 * t319 - t323 * t346;
t421 = qJD(6) * t347 - t319 * t469 - t323 * t468;
t200 = t277 * t323 - t319 * t346;
t420 = qJD(6) * t200 - t319 * t468 + t323 * t469;
t419 = pkin(5) * t467 + t460;
t279 = t324 * t294;
t201 = -qJ(5) * t426 + t279 + (-pkin(4) - t454) * t325;
t411 = t320 * t294 + t307;
t213 = -qJ(5) * t427 + t411;
t150 = t315 * t201 + t317 * t213;
t296 = t453 * t320;
t297 = t453 * t324;
t216 = t315 * t296 - t317 * t297;
t410 = pkin(4) * t427 + t321 * pkin(9);
t409 = t322 ^ 2 - t326 ^ 2;
t404 = qJD(2) * t325;
t402 = qJD(3) * t324;
t388 = -pkin(4) * t324 - pkin(3);
t387 = -t319 * t5 + t323 * t4;
t380 = t232 * t400;
t379 = t316 * t318 * t327;
t377 = t312 * t395;
t12 = t317 * t30 - t315 * t34;
t38 = -t315 * t69 - t447;
t47 = -t315 * t91 + t317 * t80;
t149 = t317 * t201 - t213 * t315;
t370 = -t321 * t254 + t255 * t325;
t215 = t317 * t296 + t297 * t315;
t368 = t232 * t324;
t367 = 0.2e1 * t377;
t365 = qJD(2) + 0.2e1 * t407;
t122 = -pkin(5) * t325 + pkin(11) * t258 + t149;
t359 = pkin(11) * t467 - qJD(6) * t122 - t451;
t126 = -pkin(11) * t257 + t150;
t358 = qJD(6) * t126 - t452 - t466 * pkin(11) + (t362 - t403) * pkin(5);
t357 = -0.2e1 * pkin(1) * t377;
t189 = -pkin(11) * t346 + t216;
t355 = pkin(5) * t239 - pkin(11) * t468 + qJD(6) * t189 - t446;
t188 = -pkin(11) * t277 + t215;
t354 = pkin(11) * t469 - qJD(6) * t188 - t445;
t171 = pkin(3) * t428 - t370;
t10 = t19 * t319 + t23 * t323;
t153 = -t209 * t315 + t210 * t317;
t36 = pkin(5) * t270 - pkin(11) * t153 + t47;
t152 = -t209 * t317 - t210 * t315;
t40 = pkin(11) * t152 + t48;
t352 = -t319 * t40 + t323 * t36;
t351 = t319 * t36 + t323 * t40;
t350 = t323 * t152 - t153 * t319;
t97 = t152 * t319 + t153 * t323;
t344 = -t254 * t401 - t255 * t403 + t261 * t325 - t321 * t263;
t309 = pkin(4) * t317 + pkin(5);
t343 = t309 * t319 + t323 * t456;
t342 = t309 * t323 - t319 * t456;
t340 = -t232 * t398 - t437;
t337 = -pkin(10) * t196 + t146 * t232;
t333 = pkin(4) * t209 + t171;
t332 = pkin(1) * (-t318 * t395 + t430);
t116 = -pkin(3) * t384 - t344;
t2 = -qJD(6) * t10 + t387;
t56 = pkin(4) * t121 + t112;
t328 = pkin(4) * t142 + t116;
t246 = pkin(5) * t346 + t388;
t202 = pkin(5) * t257 + t410;
t173 = t196 * t270;
t104 = pkin(4) * t194 - pkin(5) * t127;
t87 = -pkin(5) * t152 + t333;
t86 = -t142 * t315 + t143 * t317;
t84 = -t142 * t317 - t143 * t315;
t45 = -pkin(5) * t84 + t328;
t35 = -pkin(5) * t67 + t56;
t27 = qJD(6) * t97 + t319 * t86 - t323 * t84;
t26 = qJD(6) * t350 + t319 * t84 + t323 * t86;
t25 = t39 + t470;
t24 = t38 - t463;
t11 = pkin(11) * t84 + t13;
t9 = -t23 * t319 + t450;
t8 = pkin(5) * t207 - pkin(11) * t86 + t12;
t3 = [0, 0, 0, t367 * t461, -t409 * t367, t365 * t383, -t365 * t384, 0, -t249 * t318 - t264 * t366 + t322 * t357, -t248 * t318 - t263 * t366 + t326 * t357, t195 * t271 + t208 * t239, -t195 * t270 - t196 * t271 - t207 * t239 + t208 * t465, -t208 * t295 + (-t195 * t326 + (qJD(1) * t271 + t239) * t405) * t316, t207 * t295 + (t196 * t326 + (-qJD(1) * t270 + t465) * t405) * t316 (-t295 * t316 - t312 * t406) * t405, -t344 * t295 - t264 * t465 + t253 * t196 + t249 * t270 + t217 * t207 + (t364 * t326 + (qJD(1) * t370 + t162) * t405) * t316, t335 * t295 + t264 * t239 + t253 * t195 + t249 * t271 + t217 * t208 + (t336 * t326 + (-qJD(1) * t415 - t163) * t405) * t316, t120 * t210 + t143 * t194, -t120 * t209 - t121 * t210 - t142 * t194 - t143 * t192, t120 * t270 + t143 * t232 + t194 * t207 + t196 * t210, -t121 * t270 - t142 * t232 - t192 * t207 - t196 * t209, t207 * t232 + t173, t112 * t209 + t116 * t192 + t171 * t121 + t146 * t142 + t196 * t372 + t89 * t207 + t232 * t329 + t42 * t270, t112 * t210 + t116 * t194 + t171 * t120 + t146 * t143 - t196 * t417 - t90 * t207 - t232 * t334 - t41 * t270, t12 * t127 + t13 * t349 + t152 * t7 - t153 * t6 - t32 * t86 + t33 * t84 - t47 * t68 + t48 * t67, t113 * t328 + t32 * t12 + t33 * t13 + t333 * t56 + t6 * t47 + t7 * t48, t14 * t97 + t26 * t464, t14 * t350 - t15 * t97 + t26 * t74 - t27 * t464, t14 * t270 + t196 * t97 + t207 * t464 + t220 * t26, -t15 * t270 + t196 * t350 + t207 * t74 - t220 * t27, t207 * t220 + t173 (-qJD(6) * t351 - t11 * t319 + t323 * t8) * t220 + t352 * t196 + t2 * t270 + t9 * t207 - t45 * t74 + t87 * t15 - t35 * t350 + t59 * t27 -(qJD(6) * t352 + t11 * t323 + t319 * t8) * t220 - t351 * t196 - t1 * t270 - t10 * t207 + t45 * t464 + t87 * t14 + t35 * t97 + t59 * t26; 0, 0, 0, -t430 * t461, t409 * t430, -t326 * t379, t322 * t379, 0, -pkin(8) * t360 + t262 * t366 + t322 * t332, pkin(8) * t361 + t259 * t366 + t326 * t332, t195 * t321 - t239 * t431 (t195 - t434) * t325 + (-t196 + t432) * t321, -t295 * t401 + (t295 * t423 + (t321 * qJD(2) - t239) * t322) * t408, t295 * t403 + (-t326 * t339 + (-t465 + t404) * t322) * t408, t295 * t386, -pkin(2) * t196 - t249 * t325 + t369 * t295 + t262 * t465 + (pkin(9) * t431 + t217 * t321) * qJD(3) + (-t162 * t322 + (-pkin(9) * t405 - t217 * t326) * t321) * t408, -pkin(2) * t195 + t249 * t321 - t414 * t295 - t262 * t239 + (-pkin(9) * t339 + t217 * t325) * qJD(3) + (-t217 * t423 + (-pkin(9) * t404 + t163) * t322) * t408, t120 * t426 + (-t320 * t399 - t481) * t194, t192 * t225 + t194 * t224 + (-t192 * t324 - t194 * t320) * t401 + (-t440 - t121 * t324 + (t192 * t320 - t194 * t324) * qJD(4)) * t321, -t120 * t325 - t481 * t232 + (-t194 * t295 - t380 + t436) * t321, t121 * t325 + t471 * t232 + (t192 * t295 + t340) * t321, -t232 * t339 - t435, -t146 * t224 - t174 * t192 + t279 * t196 + ((-qJD(4) * t294 + t175) * t320 + t482) * t232 + (t146 * t320 * qJD(3) - t42 + (qJD(3) * t192 + t340) * pkin(9)) * t325 + (pkin(9) * t121 + t146 * t398 - t295 * t89 + t442) * t321, -t411 * t196 - t174 * t194 - t146 * t225 + t480 * t232 + (t146 * t402 + t41 + (qJD(3) * t194 + t380) * pkin(9)) * t325 + (-t146 * t400 + t441 + t295 * t90 + (t232 * t402 + t120) * pkin(9)) * t321, t452 * t127 - t149 * t68 + t150 * t67 - t257 * t7 + t258 * t6 + t32 * t466 - t33 * t467 + t451 * t349, t113 * t460 + t6 * t149 + t7 * t150 + t452 * t32 + t451 * t33 + t56 * t410, t14 * t181 + t443 * t464, t14 * t348 - t15 * t181 - t422 * t464 + t443 * t74, -t14 * t325 + t181 * t196 + t220 * t443 - t339 * t464, t15 * t325 + t196 * t348 - t220 * t422 - t339 * t74, -t220 * t339 - t435 (t122 * t323 - t126 * t319) * t196 - t2 * t325 + t202 * t15 - t35 * t348 - t419 * t74 + t422 * t59 - t9 * t339 + (t319 * t359 - t323 * t358) * t220 -(t122 * t319 + t126 * t323) * t196 + t1 * t325 + t202 * t14 + t35 * t181 + t419 * t464 + t443 * t59 + (t319 * t358 + t323 * t359) * t220 + t10 * t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239 * t465, t239 ^ 2 - t465 ^ 2, t195 + t434, -t196 - t432, t361, -t163 * t295 - t217 * t239 - t364, -t162 * t295 - t217 * t465 - t336, t194 * t368 + t440 (t120 - t439) * t324 + (-t121 - t438) * t320, -t194 * t239 + t232 * t368 + t437, -t232 ^ 2 * t320 + t192 * t239 + t436, -t232 * t239, -pkin(3) * t121 - t441 - t163 * t192 - t89 * t239 + (-pkin(10) * t398 - t177) * t232 + (t162 * t232 + t337) * t320, -pkin(3) * t120 + t442 - t163 * t194 + t90 * t239 + (pkin(10) * t400 + t418) * t232 + t337 * t324, t446 * t127 - t215 * t68 + t216 * t67 - t277 * t6 + t32 * t468 - t33 * t469 - t346 * t7 + t445 * t349, t113 * t459 + t6 * t215 + t7 * t216 + t446 * t32 + t445 * t33 + t56 * t388, t14 * t200 + t421 * t464, t14 * t347 - t15 * t200 - t420 * t464 + t421 * t74, t196 * t200 + t220 * t421 - t239 * t464, t196 * t347 - t220 * t420 - t239 * t74, -t220 * t239 (t188 * t323 - t189 * t319) * t196 + t246 * t15 - t35 * t347 - t9 * t239 - t444 * t74 + t420 * t59 + (t319 * t354 - t323 * t355) * t220 -(t188 * t319 + t189 * t323) * t196 + t246 * t14 + t35 * t200 + t10 * t239 + t444 * t464 + t421 * t59 + (t319 * t355 + t323 * t354) * t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194 * t192, -t192 ^ 2 + t194 ^ 2, t120 + t439, -t121 + t438, t196, -t146 * t194 + t232 * t90 + t42, t146 * t192 + t232 * t89 - t41 (t315 * t67 - t317 * t68) * pkin(4) + (-t39 + t32) * t349 + (-t33 - t38) * t127, -t32 * t38 - t33 * t39 + (-t113 * t194 + t315 * t7 + t317 * t6) * pkin(4), -t483, t479, t485, t476, t196, t342 * t196 - (t24 * t323 - t25 * t319) * t220 + t104 * t74 - t477 + (-t220 * t343 - t10) * qJD(6) + t387, -t343 * t196 - t323 * t5 + (t24 * t319 + t25 * t323) * t220 - t104 * t464 - t484 + (-t220 * t342 - t450) * qJD(6) - t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t127 ^ 2 - t349 ^ 2, -t127 * t32 - t33 * t349 + t56, 0, 0, 0, 0, 0, t15 + t449, t14 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t483, t479, t485, t476, t196, t10 * t220 + t2 - t477, t220 * t9 - t1 - t484;];
tauc_reg  = t3;
