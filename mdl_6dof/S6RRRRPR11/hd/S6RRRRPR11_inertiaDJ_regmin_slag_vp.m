% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x33]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR11_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR11_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR11_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR11_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:23:34
% EndTime: 2019-03-09 23:23:47
% DurationCPUTime: 4.79s
% Computational Cost: add. (9275->426), mult. (24922->782), div. (0->0), fcn. (24579->12), ass. (0->210)
t206 = sin(qJ(3));
t205 = sin(qJ(4));
t210 = cos(qJ(3));
t262 = qJD(3) * t210;
t240 = t205 * t262;
t209 = cos(qJ(4));
t258 = qJD(4) * t209;
t285 = t206 * t258 + t240;
t284 = -0.4e1 * t206;
t228 = -t210 * pkin(3) - t206 * pkin(10);
t174 = -pkin(2) + t228;
t272 = t209 * t210;
t187 = pkin(9) * t272;
t134 = t205 * t174 + t187;
t198 = t209 ^ 2;
t268 = t205 ^ 2 - t198;
t234 = t268 * qJD(4);
t201 = sin(pkin(6));
t283 = 0.2e1 * t201;
t207 = sin(qJ(2));
t282 = pkin(1) * t207;
t200 = sin(pkin(12));
t281 = pkin(4) * t200;
t280 = pkin(9) * t201;
t279 = pkin(9) * t205;
t278 = -qJ(5) - pkin(10);
t203 = cos(pkin(6));
t276 = t201 * t207;
t158 = t203 * t206 + t210 * t276;
t211 = cos(qJ(2));
t265 = qJD(2) * t211;
t242 = t201 * t265;
t114 = qJD(3) * t158 + t206 * t242;
t275 = t201 * t211;
t248 = t205 * t275;
t117 = t158 * t209 - t248;
t157 = -t203 * t210 + t206 * t276;
t264 = qJD(3) * t157;
t115 = t210 * t242 - t264;
t249 = pkin(8) * t275;
t149 = (t203 * t282 + t249) * qJD(2);
t212 = t114 * pkin(3) - t115 * pkin(10) + t149;
t141 = pkin(8) * t276 + (-pkin(1) * t211 - pkin(2)) * t203;
t90 = t157 * pkin(3) - t158 * pkin(10) + t141;
t142 = t249 + (pkin(9) + t282) * t203;
t143 = (-pkin(2) * t211 - pkin(9) * t207 - pkin(1)) * t201;
t271 = t210 * t142 + t206 * t143;
t92 = -pkin(10) * t275 + t271;
t55 = t205 * t90 + t209 * t92;
t266 = qJD(2) * t207;
t243 = t201 * t266;
t147 = (pkin(2) * t207 - pkin(9) * t211) * t201 * qJD(2);
t148 = -t203 * pkin(1) * t265 + pkin(8) * t243;
t193 = qJD(3) * t206;
t61 = t142 * t193 - t143 * t262 - t206 * t147 + t210 * t148;
t57 = pkin(10) * t243 - t61;
t28 = -t55 * qJD(4) - t205 * t57 + t209 * t212;
t116 = t158 * t205 + t209 * t275;
t76 = -qJD(4) * t116 + t115 * t209 + t205 * t243;
t18 = t114 * pkin(4) - t76 * qJ(5) - t117 * qJD(5) + t28;
t260 = qJD(4) * t205;
t27 = -t205 * t212 - t209 * t57 - t90 * t258 + t92 * t260;
t75 = -qJD(4) * t248 + t115 * t205 + t158 * t258 - t209 * t243;
t20 = -t75 * qJ(5) - t116 * qJD(5) - t27;
t202 = cos(pkin(12));
t9 = t200 * t18 + t202 * t20;
t54 = -t205 * t92 + t209 * t90;
t41 = t157 * pkin(4) - t117 * qJ(5) + t54;
t49 = -t116 * qJ(5) + t55;
t26 = t200 * t41 + t202 * t49;
t254 = t209 * qJD(5);
t227 = pkin(3) * t206 - pkin(10) * t210;
t219 = t227 * qJD(3);
t241 = t205 * t193;
t269 = pkin(9) * t241 + t209 * t219;
t71 = -t206 * t254 + (pkin(4) * t206 - qJ(5) * t272) * qJD(3) + (-t187 + (qJ(5) * t206 - t174) * t205) * qJD(4) + t269;
t270 = -t174 * t258 - t205 * t219;
t273 = t206 * t209;
t77 = (-pkin(9) * qJD(3) - qJ(5) * qJD(4)) * t273 + (-qJD(5) * t206 + (-pkin(9) * qJD(4) - qJ(5) * qJD(3)) * t210) * t205 - t270;
t45 = t200 * t71 + t202 * t77;
t277 = t76 * t205;
t274 = t205 * t206;
t165 = t209 * t174;
t111 = -qJ(5) * t273 + t165 + (-pkin(4) - t279) * t210;
t118 = -qJ(5) * t274 + t134;
t80 = t200 * t111 + t202 * t118;
t236 = qJD(4) * t278;
t152 = t205 * t236 + t254;
t153 = -t205 * qJD(5) + t209 * t236;
t104 = t202 * t152 + t200 * t153;
t175 = t278 * t205;
t176 = t278 * t209;
t120 = t200 * t175 - t202 * t176;
t169 = pkin(4) * t274 + t206 * pkin(9);
t197 = t206 ^ 2;
t267 = -t210 ^ 2 + t197;
t263 = qJD(3) * t209;
t261 = qJD(3) * t211;
t259 = qJD(4) * t206;
t257 = qJD(4) * t210;
t204 = sin(qJ(6));
t256 = qJD(6) * t204;
t208 = cos(qJ(6));
t255 = qJD(6) * t208;
t253 = -0.2e1 * pkin(2) * qJD(3);
t252 = -0.2e1 * pkin(3) * qJD(4);
t251 = t204 * t281;
t250 = t210 * t279;
t191 = pkin(4) * t260;
t192 = pkin(9) * t262;
t128 = pkin(4) * t285 + t192;
t190 = -t209 * pkin(4) - pkin(3);
t195 = t201 ^ 2;
t247 = t195 * t265;
t246 = t205 * t257;
t244 = t209 * t257;
t239 = t205 * t258;
t238 = t206 * t262;
t237 = t209 * t262;
t8 = t202 * t18 - t200 * t20;
t25 = -t200 * t49 + t202 * t41;
t43 = -t200 * t77 + t202 * t71;
t79 = t202 * t111 - t200 * t118;
t235 = -t206 * t142 + t210 * t143;
t103 = -t200 * t152 + t202 * t153;
t119 = t202 * t175 + t200 * t176;
t233 = t267 * qJD(3);
t232 = 0.2e1 * t238;
t231 = t207 * t247;
t230 = t205 * t237;
t163 = t200 * t209 + t202 * t205;
t155 = t163 * qJD(4);
t229 = -t155 * pkin(11) + t104;
t91 = pkin(3) * t275 - t235;
t83 = -t200 * t116 + t202 * t117;
t22 = t157 * pkin(5) - t83 * pkin(11) + t25;
t82 = -t202 * t116 - t200 * t117;
t23 = t82 * pkin(11) + t26;
t11 = t204 * t22 + t208 * t23;
t146 = -t200 * t274 + t202 * t273;
t60 = -t210 * pkin(5) - t146 * pkin(11) + t79;
t145 = t163 * t206;
t65 = -t145 * pkin(11) + t80;
t37 = t204 * t60 + t208 * t65;
t50 = t204 * t83 - t208 * t82;
t51 = t204 * t82 + t208 * t83;
t105 = -t163 * pkin(11) + t119;
t223 = t200 * t205 - t202 * t209;
t106 = -pkin(11) * t223 + t120;
t64 = t204 * t105 + t208 * t106;
t226 = -t116 * t209 - t117 * t205;
t225 = -t208 * t145 - t204 * t146;
t100 = -t204 * t145 + t208 * t146;
t224 = -t204 * t163 - t208 * t223;
t110 = t208 * t163 - t204 * t223;
t62 = -t142 * t262 - t143 * t193 + t210 * t147 + t206 * t148;
t189 = t202 * pkin(4) + pkin(5);
t151 = t204 * t189 + t208 * t281;
t156 = -t200 * t260 + t202 * t258;
t222 = -t156 * pkin(11) + t103;
t46 = -t200 * t75 + t202 * t76;
t5 = t114 * pkin(5) - t46 * pkin(11) + t8;
t44 = -t200 * t76 - t202 * t75;
t7 = t44 * pkin(11) + t9;
t1 = -t204 * t5 - t208 * t7 - t22 * t255 + t23 * t256;
t58 = -pkin(3) * t243 - t62;
t221 = t58 * t205 + t91 * t258;
t220 = -t58 * t209 + t91 * t260;
t102 = t163 * t259 + t200 * t240 - t202 * t237;
t33 = pkin(5) * t193 + t102 * pkin(11) + t43;
t101 = -t163 * t262 + t223 * t259;
t35 = t101 * pkin(11) + t45;
t12 = -t204 * t33 - t208 * t35 - t60 * t255 + t65 * t256;
t218 = t205 * t114 + t157 * t258;
t217 = -t209 * t114 + t157 * t260;
t66 = t116 * pkin(4) + t91;
t216 = t206 * t261 + t210 * t266;
t215 = t206 * t266 - t210 * t261;
t214 = -t205 * t259 + t237;
t213 = t206 * t263 + t246;
t2 = -t11 * qJD(6) - t204 * t7 + t208 * t5;
t13 = -t37 * qJD(6) - t204 * t35 + t208 * t33;
t38 = t75 * pkin(4) + t58;
t182 = -0.2e1 * t238;
t150 = t208 * t189 - t251;
t140 = t151 * qJD(6);
t139 = qJD(6) * t251 - t189 * t255;
t135 = pkin(5) * t223 + t190;
t133 = t165 - t250;
t124 = t155 * pkin(5) + t191;
t112 = t145 * pkin(5) + t169;
t97 = 0.2e1 * t157 * t114;
t95 = -t134 * qJD(4) + t269;
t94 = pkin(9) * t213 + t270;
t93 = -t114 * t210 + t157 * t193;
t81 = -t101 * pkin(5) + t128;
t73 = t110 * qJD(6) + t208 * t155 + t204 * t156;
t72 = t224 * qJD(6) - t204 * t155 + t208 * t156;
t63 = t208 * t105 - t204 * t106;
t53 = t100 * qJD(6) - t208 * t101 - t204 * t102;
t52 = t225 * qJD(6) + t204 * t101 - t208 * t102;
t47 = -t82 * pkin(5) + t66;
t36 = -t204 * t65 + t208 * t60;
t30 = -t64 * qJD(6) - t204 * t229 + t208 * t222;
t29 = -t105 * t255 + t106 * t256 - t204 * t222 - t208 * t229;
t24 = -t44 * pkin(5) + t38;
t15 = t51 * qJD(6) + t204 * t46 - t208 * t44;
t14 = -t50 * qJD(6) + t204 * t44 + t208 * t46;
t10 = -t204 * t23 + t208 * t22;
t3 = [0, 0, 0, 0.2e1 * t231, 0.2e1 * (-t207 ^ 2 + t211 ^ 2) * t195 * qJD(2), 0.2e1 * t203 * t242, -0.2e1 * t203 * t243, 0, -0.2e1 * t195 * pkin(1) * t266 - 0.2e1 * t149 * t203, -0.2e1 * pkin(1) * t247 + 0.2e1 * t148 * t203, 0.2e1 * t158 * t115, -0.2e1 * t158 * t114 - 0.2e1 * t115 * t157 (-t115 * t211 + t158 * t266) * t283 (t114 * t211 - t157 * t266) * t283, -0.2e1 * t231, 0.2e1 * t141 * t114 + 0.2e1 * t149 * t157 + 0.2e1 * (-t62 * t211 + t235 * t266) * t201, 0.2e1 * t141 * t115 + 0.2e1 * t149 * t158 + 0.2e1 * (-t61 * t211 - t271 * t266) * t201, 0.2e1 * t117 * t76, -0.2e1 * t76 * t116 - 0.2e1 * t117 * t75, 0.2e1 * t117 * t114 + 0.2e1 * t76 * t157, -0.2e1 * t116 * t114 - 0.2e1 * t75 * t157, t97, 0.2e1 * t54 * t114 + 0.2e1 * t58 * t116 + 0.2e1 * t28 * t157 + 0.2e1 * t91 * t75, -0.2e1 * t55 * t114 + 0.2e1 * t58 * t117 + 0.2e1 * t27 * t157 + 0.2e1 * t91 * t76, -0.2e1 * t25 * t46 + 0.2e1 * t26 * t44 - 0.2e1 * t8 * t83 + 0.2e1 * t9 * t82, 0.2e1 * t25 * t8 + 0.2e1 * t26 * t9 + 0.2e1 * t66 * t38, 0.2e1 * t51 * t14, -0.2e1 * t14 * t50 - 0.2e1 * t51 * t15, 0.2e1 * t51 * t114 + 0.2e1 * t14 * t157, -0.2e1 * t50 * t114 - 0.2e1 * t15 * t157, t97, 0.2e1 * t10 * t114 + 0.2e1 * t47 * t15 + 0.2e1 * t2 * t157 + 0.2e1 * t24 * t50, 0.2e1 * t1 * t157 - 0.2e1 * t11 * t114 + 0.2e1 * t47 * t14 + 0.2e1 * t24 * t51; 0, 0, 0, 0, 0, t242, -t243, 0, -t149, t148, t115 * t206 + t158 * t262, -t206 * t114 + t115 * t210 + (-t157 * t210 - t158 * t206) * qJD(3), t215 * t201, t216 * t201, 0, -pkin(2) * t114 + t141 * t193 - t149 * t210 - t215 * t280, -pkin(2) * t115 + t141 * t262 + t149 * t206 - t216 * t280, t117 * t214 + t76 * t273, t226 * t262 + (-t277 - t209 * t75 + (t116 * t205 - t117 * t209) * qJD(4)) * t206 (t157 * t263 - t76) * t210 + (qJD(3) * t117 - t217) * t206 (-t205 * t264 + t75) * t210 + (-qJD(3) * t116 - t218) * t206, t93, t133 * t114 + t95 * t157 + (-t28 + (pkin(9) * t116 + t205 * t91) * qJD(3)) * t210 + (pkin(9) * t75 + qJD(3) * t54 + t221) * t206, -t134 * t114 + t94 * t157 + (-t27 + (pkin(9) * t117 + t209 * t91) * qJD(3)) * t210 + (pkin(9) * t76 - qJD(3) * t55 - t220) * t206, t26 * t101 + t25 * t102 - t9 * t145 - t8 * t146 - t43 * t83 + t80 * t44 + t45 * t82 - t79 * t46, t66 * t128 + t38 * t169 + t25 * t43 + t26 * t45 + t8 * t79 + t9 * t80, t14 * t100 + t51 * t52, -t100 * t15 + t14 * t225 - t52 * t50 - t51 * t53, t100 * t114 - t14 * t210 + t52 * t157 + t193 * t51, t114 * t225 + t15 * t210 - t53 * t157 - t193 * t50, t93, t10 * t193 + t112 * t15 + t36 * t114 + t13 * t157 - t2 * t210 - t225 * t24 + t47 * t53 + t81 * t50, -t1 * t210 + t24 * t100 - t11 * t193 + t112 * t14 - t37 * t114 + t12 * t157 + t47 * t52 + t81 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, -0.2e1 * t233, 0, 0, 0, t206 * t253, t210 * t253, -0.2e1 * t197 * t239 + 0.2e1 * t198 * t238, 0.2e1 * t197 * t234 + t230 * t284, 0.2e1 * t206 * t246 + 0.2e1 * t267 * t263, -0.2e1 * t205 * t233 + 0.2e1 * t206 * t244, t182, 0.2e1 * t133 * t193 - 0.2e1 * t95 * t210 + 0.2e1 * (t197 * t258 + t205 * t232) * pkin(9), -0.2e1 * t134 * t193 - 0.2e1 * t94 * t210 + 0.2e1 * (-t197 * t260 + t209 * t232) * pkin(9), 0.2e1 * t80 * t101 + 0.2e1 * t79 * t102 - 0.2e1 * t45 * t145 - 0.2e1 * t43 * t146, 0.2e1 * t169 * t128 + 0.2e1 * t79 * t43 + 0.2e1 * t80 * t45, 0.2e1 * t100 * t52, -0.2e1 * t100 * t53 + 0.2e1 * t225 * t52, 0.2e1 * t100 * t193 - 0.2e1 * t52 * t210, 0.2e1 * t193 * t225 + 0.2e1 * t53 * t210, t182, 0.2e1 * t112 * t53 - 0.2e1 * t13 * t210 + 0.2e1 * t193 * t36 - 0.2e1 * t225 * t81, 0.2e1 * t81 * t100 + 0.2e1 * t112 * t52 - 0.2e1 * t12 * t210 - 0.2e1 * t193 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, -t114, t243, t62, t61, t117 * t258 + t277, qJD(4) * t226 - t205 * t75 + t76 * t209, t218, -t217, 0, -pkin(3) * t75 - pkin(10) * t218 + t220, -pkin(3) * t76 + pkin(10) * t217 + t221, -t103 * t83 + t104 * t82 - t119 * t46 + t120 * t44 - t26 * t155 - t25 * t156 - t8 * t163 - t223 * t9, t25 * t103 + t26 * t104 + t8 * t119 + t9 * t120 + t38 * t190 + t191 * t66, t14 * t110 + t51 * t72, -t110 * t15 + t14 * t224 - t72 * t50 - t51 * t73, t110 * t114 + t72 * t157, t114 * t224 - t73 * t157, 0, t63 * t114 + t124 * t50 + t135 * t15 + t30 * t157 - t224 * t24 + t47 * t73, t24 * t110 - t64 * t114 + t124 * t51 + t135 * t14 + t29 * t157 + t47 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, -t193, 0, -t192, pkin(9) * t193, -t206 * t234 + t230, t239 * t284 - t268 * t262, t241 - t244, t213, 0 (pkin(10) * t272 + (-pkin(3) * t209 + t279) * t206) * qJD(4) + (t205 * t228 - t187) * qJD(3) (pkin(9) * t273 + t205 * t227) * qJD(4) + (t209 * t228 + t250) * qJD(3), t120 * t101 + t119 * t102 - t103 * t146 - t104 * t145 - t80 * t155 - t79 * t156 - t43 * t163 - t223 * t45, t79 * t103 + t80 * t104 + t43 * t119 + t45 * t120 + t128 * t190 + t169 * t191, t100 * t72 + t52 * t110, -t100 * t73 - t110 * t53 + t224 * t52 + t225 * t72, t110 * t193 - t72 * t210, t193 * t224 + t73 * t210, 0, t112 * t73 - t124 * t225 + t135 * t53 + t193 * t63 - t30 * t210 - t224 * t81, t124 * t100 + t81 * t110 + t112 * t72 + t135 * t52 - t193 * t64 - t29 * t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t239, -0.2e1 * t234, 0, 0, 0, t205 * t252, t209 * t252, -0.2e1 * t103 * t163 - 0.2e1 * t104 * t223 - 0.2e1 * t119 * t156 - 0.2e1 * t120 * t155, 0.2e1 * t119 * t103 + 0.2e1 * t120 * t104 + 0.2e1 * t190 * t191, 0.2e1 * t110 * t72, -0.2e1 * t110 * t73 + 0.2e1 * t224 * t72, 0, 0, 0, -0.2e1 * t124 * t224 + 0.2e1 * t135 * t73, 0.2e1 * t124 * t110 + 0.2e1 * t135 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t75, t114, t28, t27 (t200 * t44 - t202 * t46) * pkin(4) (t200 * t9 + t202 * t8) * pkin(4), 0, 0, t14, -t15, t114, t150 * t114 - t140 * t157 + t2, -t151 * t114 + t139 * t157 + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, -t285, t193, t95, t94 (t101 * t200 + t102 * t202) * pkin(4) (t200 * t45 + t202 * t43) * pkin(4), 0, 0, t52, -t53, t193, t140 * t210 + t150 * t193 + t13, -t139 * t210 - t151 * t193 + t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, -t260, 0, -pkin(10) * t258, pkin(10) * t260 (-t155 * t200 - t156 * t202) * pkin(4) (t103 * t202 + t104 * t200) * pkin(4), 0, 0, t72, -t73, 0, t30, t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t140, 0.2e1 * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, 0, 0, 0, 0, t15, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, 0, 0, 0, 0, 0, t53, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, 0, 0, 0, 0, 0, t73, t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t15, t114, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, -t53, t193, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t73, 0, t30, t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
