% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:58:34
% EndTime: 2019-03-09 06:58:57
% DurationCPUTime: 11.23s
% Computational Cost: add. (11265->554), mult. (23194->694), div. (0->0), fcn. (26110->10), ass. (0->472)
t456 = sin(qJ(4));
t457 = sin(qJ(3));
t460 = cos(qJ(3));
t725 = cos(qJ(4));
t419 = t456 * t457 - t460 * t725;
t795 = -t419 / 0.2e1;
t459 = cos(qJ(5));
t715 = t459 * pkin(5);
t449 = -pkin(4) - t715;
t792 = t449 / 0.2e1;
t794 = t419 / 0.2e1;
t580 = t725 * pkin(3);
t448 = -t580 - pkin(4);
t429 = t448 - t715;
t793 = t429 / 0.2e1;
t569 = t725 * t457;
t647 = t456 * t460;
t421 = t569 + t647;
t415 = t421 ^ 2;
t452 = t459 ^ 2;
t455 = sin(qJ(5));
t734 = t455 ^ 2;
t583 = -t452 + t734;
t316 = t583 * t415;
t765 = 0.2e1 * t421;
t586 = qJD(3) + qJD(4);
t753 = t586 * t459;
t782 = t455 * t753;
t482 = t782 * t765;
t791 = t316 * qJD(1) - t482;
t458 = cos(qJ(6));
t640 = t458 * t455;
t454 = sin(qJ(6));
t653 = t454 * t459;
t418 = -t640 - t653;
t272 = t418 * t421;
t732 = pkin(9) + pkin(10);
t431 = t732 * t455;
t432 = t732 * t459;
t508 = -t458 * t431 - t454 * t432;
t789 = t272 * t792 + t508 * t795;
t441 = sin(pkin(11)) * pkin(1) + pkin(7);
t714 = pkin(8) + t441;
t405 = t714 * t457;
t406 = t714 * t460;
t538 = t725 * t405 + t456 * t406;
t779 = t538 * t459;
t555 = t779 / 0.2e1;
t310 = t459 * t419;
t407 = t421 * pkin(5);
t780 = t538 * t455;
t790 = pkin(10) * t310 + t407 + t780;
t306 = (t734 / 0.2e1 - t452 / 0.2e1) * t421;
t211 = -t306 * qJD(1) + t782;
t585 = qJD(5) + qJD(6);
t308 = t455 * t419;
t581 = pkin(10) * t308;
t717 = t421 * pkin(4);
t718 = t419 * pkin(9);
t328 = t717 + t718;
t317 = t455 * t328;
t627 = t779 - t317;
t143 = t581 - t627;
t641 = t458 * t143;
t546 = -t641 / 0.2e1;
t318 = t459 * t328;
t127 = t318 + t790;
t659 = t454 * t127;
t500 = -t659 / 0.2e1 + t546;
t788 = t500 - t789;
t639 = t458 * t459;
t654 = t454 * t455;
t741 = t639 - t654;
t275 = t741 * t421;
t339 = -t454 * t431 + t458 * t432;
t776 = t275 * t792 + t339 * t795;
t716 = t456 * pkin(3);
t447 = pkin(9) + t716;
t713 = pkin(10) + t447;
t408 = t713 * t455;
t409 = t713 * t459;
t303 = -t454 * t408 + t458 * t409;
t777 = t275 * t793 + t303 * t795;
t537 = t458 * t408 + t454 * t409;
t778 = t272 * t793 + t537 * t794;
t517 = -t456 * t405 + t406 * t725;
t503 = -pkin(5) * t308 + t517;
t759 = t503 * t418;
t787 = -t759 / 0.2e1;
t760 = t503 * t741;
t786 = -t760 / 0.2e1;
t754 = t586 * t421;
t785 = t741 * t754;
t784 = t419 * t754;
t783 = t421 * t753;
t410 = t569 / 0.2e1 + t647 / 0.2e1;
t614 = qJD(1) * t421;
t561 = t419 * t614;
t228 = t410 * qJD(5) + t561;
t728 = -t418 / 0.2e1;
t120 = t272 * t728 + t275 * t741 / 0.2e1;
t535 = t586 * t418;
t85 = t120 * qJD(1) - t535 * t741;
t723 = pkin(3) * t457;
t313 = t328 + t723;
t282 = t455 * t313;
t626 = t779 - t282;
t141 = t581 - t626;
t642 = t458 * t141;
t547 = -t642 / 0.2e1;
t283 = t459 * t313;
t110 = t283 + t790;
t660 = t454 * t110;
t501 = -t660 / 0.2e1 + t547;
t775 = t501 - t778;
t656 = t454 * t141;
t549 = -t656 / 0.2e1;
t646 = t458 * t110;
t499 = t549 + t646 / 0.2e1;
t774 = t499 - t777;
t655 = t454 * t143;
t548 = -t655 / 0.2e1;
t645 = t458 * t127;
t498 = t548 + t645 / 0.2e1;
t773 = t498 - t776;
t442 = -cos(pkin(11)) * pkin(1) - pkin(2);
t428 = -pkin(3) * t460 + t442;
t720 = t419 * pkin(4);
t518 = -t421 * pkin(9) + t720;
t471 = t428 + t518;
t758 = t517 * t455;
t147 = -t459 * t471 + t758;
t772 = (-t147 + t758) * t421;
t757 = t517 * t459;
t148 = t455 * t471 + t757;
t771 = (-t148 + t757) * t421;
t770 = t586 * t538;
t769 = t586 * t517;
t768 = t585 * t303;
t767 = t585 * t339;
t766 = t585 * t508;
t497 = t654 / 0.2e1 - t639 / 0.2e1;
t729 = -t741 / 0.2e1;
t173 = (t729 + t497) * t419;
t764 = t173 * t586;
t763 = t272 * t585;
t762 = t310 * t586;
t174 = (t729 - t497) * t419;
t58 = t586 * t174;
t755 = t586 * t419;
t584 = -t419 ^ 2 + t415;
t675 = t421 * t455;
t192 = pkin(5) * t675 + t538;
t691 = t192 * t418;
t556 = t691 / 0.2e1;
t30 = t556 + t774;
t496 = t653 / 0.2e1 + t640 / 0.2e1;
t727 = t418 / 0.2e1;
t172 = (t727 + t496) * t419;
t598 = t172 * qJD(2);
t611 = qJD(3) * t429;
t752 = qJD(1) * t30 + t418 * t611 + t598;
t676 = t421 * t447;
t677 = t419 * t448;
t747 = t720 / 0.2e1 - t676 / 0.2e1 - t677 / 0.2e1 + (t725 * t795 + t456 * t421 / 0.2e1) * pkin(3);
t181 = qJD(6) * t410 + t228;
t570 = t459 * t725;
t524 = -t570 / 0.2e1;
t571 = t455 * t725;
t528 = t454 * t571;
t467 = (t458 * t524 + t528 / 0.2e1) * pkin(3);
t542 = t792 + t793;
t178 = -t542 * t741 + t467;
t692 = t192 * t741;
t557 = -t692 / 0.2e1;
t37 = t557 + t788;
t597 = t174 * qJD(2);
t608 = qJD(4) * t449;
t746 = qJD(1) * t37 + qJD(3) * t178 - t608 * t741 + t597;
t721 = pkin(5) * t455;
t400 = t418 * t721;
t150 = t400 + t178;
t651 = t455 * t275;
t465 = (-t651 / 0.2e1 + (-t454 / 0.2e1 + t459 * t727) * t421) * pkin(5) + t557;
t17 = t465 + t788;
t662 = t449 * t741;
t281 = -t400 + t662;
t745 = t17 * qJD(1) + t150 * qJD(3) - t281 * qJD(4) + t597;
t525 = -t571 / 0.2e1;
t468 = (t454 * t524 + t458 * t525) * pkin(3);
t177 = t418 * t542 + t468;
t36 = t556 + t773;
t744 = qJD(1) * t36 + qJD(3) * t177 + t418 * t608 + t598;
t399 = t741 * t721;
t149 = t399 + t177;
t637 = t459 * t741;
t652 = t455 * t272;
t466 = (t652 / 0.2e1 + (t458 / 0.2e1 + t637 / 0.2e1) * t421) * pkin(5) + t556;
t18 = t466 + t773;
t661 = t449 * t418;
t280 = -t399 - t661;
t743 = t18 * qJD(1) + t149 * qJD(3) - t280 * qJD(4) + t598;
t10 = t466 + t774;
t668 = t429 * t418;
t241 = -t399 - t668;
t742 = t10 * qJD(1) - t241 * qJD(3) + t598;
t104 = t272 ^ 2 - t275 ^ 2;
t89 = t272 * t741 + t275 * t418;
t21 = t104 * qJD(1) + t586 * t89;
t616 = qJD(1) * t275;
t48 = t120 * t586 + t272 * t616;
t259 = -t418 ^ 2 + t741 ^ 2;
t60 = t89 * qJD(1) + t259 * t586;
t271 = t418 * t419;
t674 = t421 * t459;
t131 = -pkin(10) * t674 - t147;
t719 = t419 * pkin(5);
t105 = t131 + t719;
t103 = t458 * t105;
t132 = -pkin(10) * t675 + t148;
t657 = t454 * t132;
t64 = -t103 + t657;
t739 = t192 * t271 - t503 * t272 - t64 * t421;
t274 = t741 * t419;
t643 = t458 * t132;
t65 = t454 * t105 + t643;
t738 = -t192 * t274 + t503 * t275 - t65 * t421;
t648 = t455 * t459;
t566 = qJD(1) * t648;
t737 = t306 * t586 + t415 * t566;
t263 = t566 * t765 + t583 * t586;
t736 = t537 * t585 - t597;
t733 = -pkin(4) / 0.2e1;
t731 = -t103 / 0.2e1;
t730 = -t105 / 0.2e1;
t726 = -t448 / 0.2e1;
t724 = pkin(3) * t419;
t722 = pkin(4) * t459;
t712 = t585 * t89;
t711 = pkin(5) * qJD(5);
t710 = pkin(5) * qJD(6);
t2 = (t646 - t656) * t419 + t739;
t709 = t2 * qJD(1);
t3 = -(t642 + t660) * t419 + t738;
t708 = t3 * qJD(1);
t6 = (t645 - t655) * t419 + t739;
t707 = t6 * qJD(1);
t7 = -(t641 + t659) * t419 + t738;
t706 = t7 * qJD(1);
t576 = -t719 / 0.2e1;
t522 = t576 + t131 / 0.2e1;
t13 = (t730 + t522) * t454;
t705 = qJD(1) * t13;
t15 = t458 * t522 + t731;
t704 = qJD(1) * t15;
t582 = pkin(5) * t674;
t693 = t192 * t275;
t658 = t454 * t131;
t72 = -t643 - t658;
t34 = -t272 * t582 + t419 * t72 + t693;
t703 = qJD(1) * t34;
t694 = t192 * t272;
t644 = t458 * t131;
t73 = t644 - t657;
t35 = t275 * t582 - t419 * t73 + t694;
t702 = qJD(1) * t35;
t42 = t419 * t64 + t694;
t701 = qJD(1) * t42;
t43 = -t419 * t65 + t693;
t700 = qJD(1) * t43;
t90 = -t271 * t275 - t272 * t274;
t699 = qJD(1) * t90;
t95 = t147 * t419 - t538 * t675;
t698 = qJD(1) * t95;
t96 = -t148 * t419 + t538 * t674;
t697 = qJD(1) * t96;
t684 = t537 * t421;
t682 = t303 * t421;
t680 = t508 * t421;
t678 = t339 * t421;
t673 = t429 * t271;
t671 = t429 * t274;
t669 = t429 * t741;
t667 = t448 * t459;
t666 = t449 * t271;
t664 = t449 * t274;
t51 = t283 * t419 + t772;
t636 = t51 * qJD(1);
t52 = t771 + (t626 - t779) * t419;
t635 = t52 * qJD(1);
t53 = t318 * t419 + t772;
t634 = t53 * qJD(1);
t54 = t771 + (t627 - t779) * t419;
t633 = t54 * qJD(1);
t505 = t726 - t580 / 0.2e1;
t574 = t716 / 0.2e1;
t463 = (-t447 / 0.2e1 + t574 + pkin(9) / 0.2e1) * t421 + (t733 + t505) * t419;
t74 = t455 * t463;
t632 = t74 * qJD(1);
t630 = t585 * t120;
t41 = t585 * t174;
t629 = t585 * t173;
t628 = t585 * t275;
t625 = t586 * t308;
t623 = t586 * t272;
t607 = qJD(4) * t455;
t610 = qJD(3) * t455;
t622 = (t607 + t610) * t421;
t129 = -t274 * t419 + t275 * t421;
t621 = qJD(1) * t129;
t227 = t584 * t459;
t619 = qJD(1) * t227;
t239 = t419 * t723 + t421 * t428;
t618 = qJD(1) * t239;
t240 = -t419 * t428 + t421 * t723;
t617 = qJD(1) * t240;
t615 = qJD(1) * t419;
t613 = qJD(1) * t428;
t612 = qJD(1) * t460;
t609 = qJD(4) * t428;
t606 = qJD(5) * t455;
t605 = qJD(5) * t459;
t604 = qJD(6) * t429;
t603 = qJD(6) * t449;
t128 = -t419 * t271 + t421 * t272;
t600 = t128 * qJD(1);
t171 = (t728 + t496) * t419;
t154 = t171 * qJD(1);
t156 = t173 * qJD(1);
t226 = t584 * t455;
t596 = t226 * qJD(1);
t595 = t584 * qJD(1);
t293 = t308 * qJD(1);
t593 = t308 * qJD(5);
t300 = t310 * qJD(1);
t591 = t410 * qJD(1);
t437 = -t457 ^ 2 + t460 ^ 2;
t589 = t437 * qJD(1);
t588 = t457 * qJD(3);
t587 = t460 * qJD(3);
t579 = qJD(3) * t716;
t578 = qJD(4) * t716;
t575 = t407 / 0.2e1;
t166 = t692 / 0.2e1;
t554 = -t674 / 0.2e1;
t573 = t166 + (t651 / 0.2e1 + t418 * t554) * pkin(5);
t167 = -t691 / 0.2e1;
t572 = t167 - pkin(5) * t652 / 0.2e1 - t575 * t637;
t568 = t419 * t613;
t567 = t421 * t613;
t565 = t421 * t605;
t564 = t421 * t606;
t562 = t275 * t615;
t560 = t442 * t457 * qJD(1);
t559 = t442 * t612;
t440 = t455 * t605;
t558 = t457 * t612;
t545 = -t779 / 0.2e1 + t317 / 0.2e1;
t544 = t555 - t282 / 0.2e1;
t541 = t725 * qJD(3);
t540 = t725 * qJD(4);
t539 = pkin(5) * t585;
t531 = t585 * t419;
t530 = t585 * t418;
t529 = -qJD(5) - t615;
t521 = t575 + t110 / 0.2e1;
t520 = t575 + t127 / 0.2e1;
t519 = t586 * t716;
t242 = -t400 + t669;
t9 = t465 + t775;
t510 = -t9 * qJD(1) + t242 * qJD(3);
t509 = -t676 - t677;
t506 = t421 * t529;
t504 = t718 / 0.2e1 + t717 / 0.2e1;
t502 = t421 * t726 + t447 * t794;
t31 = t557 + t775;
t494 = qJD(1) * t31 - t611 * t741;
t481 = t502 * t459;
t83 = -t283 / 0.2e1 - t481;
t493 = -qJD(1) * t83 - t448 * t610;
t469 = t455 * t502 + t555;
t81 = t469 - t544;
t492 = -qJD(1) * t81 - qJD(3) * t667;
t491 = t459 * t506;
t487 = pkin(4) / 0.2e1 + t505;
t462 = t786 - t684 / 0.2e1 + t673 / 0.2e1 - t272 * t716 / 0.2e1 + (-t454 * t570 - t458 * t571) * t724 / 0.2e1;
t473 = t786 + t680 / 0.2e1 + t666 / 0.2e1;
t27 = t462 - t473;
t486 = -qJD(1) * t27 + t579 * t741;
t461 = t787 - t682 / 0.2e1 - t671 / 0.2e1 + t275 * t574 - (t458 * t570 - t528) * t724 / 0.2e1;
t472 = t787 - t678 / 0.2e1 - t664 / 0.2e1;
t29 = t461 - t472;
t485 = -qJD(1) * t29 + t418 * t579;
t77 = t459 * t463;
t484 = -qJD(1) * t77 - t455 * t579;
t483 = t504 * t459;
t480 = t496 * t419;
t350 = t487 * t455;
t93 = -t318 / 0.2e1 - t483;
t477 = pkin(4) * t607 - qJD(1) * t93 + qJD(3) * t350;
t351 = t487 * t459;
t470 = t455 * t504 + t555;
t91 = t470 + t545;
t476 = -qJD(1) * t91 + qJD(3) * t351 + qJD(4) * t722;
t179 = t662 / 0.2e1 + t669 / 0.2e1 + t467;
t180 = -t661 / 0.2e1 - t668 / 0.2e1 + t468;
t435 = t455 * t578;
t430 = t583 * qJD(5);
t384 = t418 * t578;
t383 = t741 * t578;
t353 = -t722 / 0.2e1 + t667 / 0.2e1 + pkin(3) * t524;
t352 = pkin(3) * t525 + (t733 + t448 / 0.2e1) * t455;
t314 = t586 * t410;
t299 = t310 * qJD(5);
t288 = t306 * qJD(5);
t238 = t300 + t605;
t237 = -t293 - t606;
t186 = t741 * t530;
t184 = 0.2e1 * t455 * t491;
t176 = -t271 / 0.2e1 + t480;
t175 = t271 / 0.2e1 + t480;
t170 = t452 * t561 - t288;
t153 = t593 - t783;
t152 = -t400 + t179;
t151 = -t399 + t180;
t146 = t299 - t619;
t145 = -t593 + t596;
t144 = t585 * t259;
t136 = t530 - t154;
t135 = t585 * t741 - t156;
t111 = -t288 + (-t452 * t614 - t782) * t419;
t100 = t619 + t622;
t99 = -t596 + t783;
t98 = (-qJD(5) + t615) * t648 * t765 + t583 * t755;
t94 = t780 + t318 / 0.2e1 - t483;
t92 = t470 - t545;
t84 = t780 + t283 / 0.2e1 - t481;
t82 = t469 + t544;
t80 = t299 + t622;
t79 = t171 * t586 + t562;
t78 = -t272 * t615 + t764;
t76 = pkin(9) * t554 + t747 * t459 + t758;
t75 = -t757 - pkin(9) * t675 / 0.2e1 + t747 * t455;
t63 = -t621 - t629;
t62 = -t171 * t585 - t600;
t59 = t586 * t172;
t56 = t175 * t586 - t562 - t628;
t55 = -t58 - (-qJD(6) + t529) * t272;
t50 = t274 * t616 + t630;
t47 = t621 - t623 - t41;
t46 = t175 * t585 + t600 + t785;
t45 = t176 * t586 - t628;
t44 = -t763 - t764;
t40 = t585 * t172;
t39 = t167 + t498 + t776;
t38 = t166 + t500 + t789;
t33 = t167 + t499 + t777;
t32 = t166 + t501 + t778;
t28 = t461 + t472;
t26 = t462 + t473;
t25 = -(-t535 + t616) * t274 + t630;
t24 = -t623 - t629;
t23 = t176 * t585 - t785;
t20 = -t520 * t454 + t546 + t573 + t789;
t19 = t520 * t458 + t548 + t572 + t776;
t16 = t458 * t576 + t657 + t731 - t644 / 0.2e1;
t14 = -t643 - t658 / 0.2e1 + (t576 + t730) * t454;
t12 = -t521 * t454 + t547 + t573 + t778;
t11 = t521 * t458 + t549 + t572 + t777;
t8 = -t699 + t712;
t1 = t699 + t586 * (t271 * t418 - t274 * t741) + t712;
t4 = [0, 0, 0, 0, t457 * t587, t437 * qJD(3), 0, 0, 0, t442 * t588, t442 * t587, -t784, -t586 * t584, 0, 0, 0, qJD(3) * t239 + t421 * t609, qJD(3) * t240 - t419 * t609, -t415 * t440 - t452 * t784, t316 * qJD(5) + t419 * t482, t227 * t586 - t419 * t564, -t226 * t586 - t419 * t565, t784, qJD(3) * t51 + qJD(4) * t53 + qJD(5) * t96, qJD(3) * t52 + qJD(4) * t54 + qJD(5) * t95 (-t274 * t586 + t763) * t275, t104 * t585 + t586 * t90, t129 * t586 + t272 * t531, t128 * t586 - t275 * t531, t784, qJD(3) * t2 + qJD(4) * t6 + qJD(5) * t34 + qJD(6) * t43, qJD(3) * t3 + qJD(4) * t7 + qJD(5) * t35 + qJD(6) * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t558, t589, t587, -t588, 0, -t441 * t587 + t560, t441 * t588 + t559, -t561, -t595, -t755, -t754, 0, t618 - t769, t617 + t770, t111, t98, t100, t99, t228, t636 + (t455 * t509 - t757) * qJD(3) + t75 * qJD(4) + t84 * qJD(5), t635 + (t459 * t509 + t758) * qJD(3) + t76 * qJD(4) + t82 * qJD(5), t25, t1, t47, t46, t181, t709 + (t673 - t684 - t760) * qJD(3) + t26 * qJD(4) + t11 * qJD(5) + t33 * qJD(6), t708 + (-t671 - t682 - t759) * qJD(3) + t28 * qJD(4) + t12 * qJD(5) + t32 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t561, -t595, -t755, -t754, 0, t567 - t769, -t568 + t770, t111, t98, t100, t99, t228, t634 + t75 * qJD(3) + (t455 * t518 - t757) * qJD(4) + t94 * qJD(5), t633 + t76 * qJD(3) + (t459 * t518 + t758) * qJD(4) + t92 * qJD(5), t25, t1, t47, t46, t181, t707 + t26 * qJD(3) + (t666 + t680 - t760) * qJD(4) + t19 * qJD(5) + t39 * qJD(6), t706 + t28 * qJD(3) + (-t664 - t678 - t759) * qJD(4) + t20 * qJD(5) + t38 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t737, t791, t455 * t506, t491, t314, qJD(3) * t84 + qJD(4) * t94 - qJD(5) * t148 + t697, qJD(3) * t82 + qJD(4) * t92 + qJD(5) * t147 + t698, t48, t21, t55, t56, t314, qJD(3) * t11 + qJD(4) * t19 + qJD(5) * t72 + qJD(6) * t14 + t703, qJD(3) * t12 + qJD(4) * t20 - qJD(5) * t73 + qJD(6) * t16 + t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t21, t55, t56, t314, qJD(3) * t33 + qJD(4) * t39 + qJD(5) * t14 - qJD(6) * t65 + t700, qJD(3) * t32 + qJD(4) * t38 + qJD(5) * t16 + qJD(6) * t64 + t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588, -t587, 0, 0, 0, 0, 0, -t754, t755, 0, 0, 0, 0, 0, t153, t80, 0, 0, 0, 0, 0, t23, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t754, t755, 0, 0, 0, 0, 0, t153, t80, 0, 0, 0, 0, 0, t23, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t565 + t625, t564 + t762, 0, 0, 0, 0, 0, t45, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t44; 0, 0, 0, 0, -t558, -t589, 0, 0, 0, -t560, -t559, t561, t595, 0, 0, 0, -t618, -t617, t170, t184, t146, t145, -t228, qJD(4) * t74 + qJD(5) * t83 - t636, qJD(4) * t77 + qJD(5) * t81 - t635, t50, t8, t63, t62, -t181, qJD(4) * t27 - qJD(5) * t10 - qJD(6) * t30 - t709, qJD(4) * t29 - qJD(5) * t9 - qJD(6) * t31 - t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, -t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t578, -pkin(3) * t540, t440, -t430, 0, 0, 0, t448 * t606 - t459 * t578, t448 * t605 + t435, -t186, t144, 0, 0, 0, qJD(5) * t241 - t418 * t604 - t383, qJD(5) * t242 + t604 * t741 - t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t519 (-t541 - t540) * pkin(3), t440, -t430, 0, 0, 0, t352 * qJD(5) - t459 * t519 + t632, qJD(5) * t353 + t435 - t484, -t186, t144, 0, 0, 0, qJD(5) * t151 + qJD(6) * t180 - t383 - t486, qJD(5) * t152 + qJD(6) * t179 - t384 - t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, -t263, t238, t237, -t591, qJD(4) * t352 - t447 * t605 - t493, qJD(4) * t353 + t447 * t606 - t492, t85, t60, t135, t136, -t591, t151 * qJD(4) - t742 - t768, t152 * qJD(4) + t510 + t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t60, t135, t136, -t591, qJD(4) * t180 - t752 - t768, qJD(4) * t179 - t494 + t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t561, t595, 0, 0, 0, -t567, t568, t170, t184, t146, t145, -t228, -qJD(3) * t74 + qJD(5) * t93 - t634, -qJD(3) * t77 + qJD(5) * t91 - t633, t50, t8, t63, t62, -t181, -qJD(3) * t27 - qJD(5) * t18 - qJD(6) * t36 - t707, -qJD(3) * t29 - qJD(5) * t17 - qJD(6) * t37 - t706; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, -t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, pkin(3) * t541, t440, -t430, 0, 0, 0, -qJD(5) * t350 + t459 * t579 - t632, -qJD(5) * t351 + t484, -t186, t144, 0, 0, 0, -qJD(5) * t149 - qJD(6) * t177 + t486, -qJD(5) * t150 - qJD(6) * t178 + t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t440, -t430, 0, 0, 0, -pkin(4) * t606, -pkin(4) * t605, -t186, t144, 0, 0, 0, qJD(5) * t280 - t418 * t603, qJD(5) * t281 + t603 * t741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, -t263, t238, t237, -t591, -pkin(9) * t605 - t477, pkin(9) * t606 - t476, t85, t60, t135, t136, -t591, -t743 - t767, -t745 - t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t60, t135, t136, -t591, -t744 - t767, -t746 - t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t737, -t791, t455 * t561 - t762, t459 * t561 + t625, t314, -qJD(3) * t83 - qJD(4) * t93 - t697, -qJD(3) * t81 - qJD(4) * t91 - t698, -t48, -t21, t78, t79, t314, qJD(3) * t10 + qJD(4) * t18 + qJD(6) * t13 - t703, qJD(3) * t9 + qJD(4) * t17 + qJD(6) * t15 - t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t263, -t300, t293, t591, qJD(4) * t350 + t493, qJD(4) * t351 + t492, -t85, -t60, t156, t154, t591, qJD(4) * t149 + t742, qJD(4) * t150 - t510 + t597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t263, -t300, t293, t591, t477, t476, -t85, -t60, t156, t154, t591, t743, t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454 * t710, -t458 * t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454 * t539 + t705, -t458 * t539 + t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, -t21, t78, t79, t314, qJD(3) * t30 + qJD(4) * t36 - qJD(5) * t13 - t700, qJD(3) * t31 + qJD(4) * t37 - qJD(5) * t15 - t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t60, t156, t154, t591, qJD(4) * t177 + t752, qJD(4) * t178 + t494 + t597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t60, t156, t154, t591, t744, t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454 * t711 - t705, t458 * t711 - t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
