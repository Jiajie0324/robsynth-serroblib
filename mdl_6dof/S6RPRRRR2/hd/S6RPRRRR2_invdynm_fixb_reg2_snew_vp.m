% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 02:47
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRRR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR2_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 02:46:22
% EndTime: 2019-05-06 02:47:03
% DurationCPUTime: 43.37s
% Computational Cost: add. (416411->950), mult. (818015->1368), div. (0->0), fcn. (581665->12), ass. (0->653)
t1735 = cos(qJ(1));
t1723 = sin(pkin(11));
t1724 = cos(pkin(11));
t1730 = sin(qJ(1));
t1703 = g(1) * t1735 + g(2) * t1730;
t1850 = qJD(1) ^ 2;
t1745 = pkin(1) * t1850 + t1703;
t1702 = g(1) * t1730 - t1735 * g(2);
t1755 = qJDD(1) * pkin(1) + t1702;
t1628 = -t1723 * t1745 - t1724 * t1755;
t1742 = t1723 * t1755;
t1629 = -t1724 * t1745 + t1742;
t1782 = t1628 * t1723 + t1724 * t1629;
t1555 = t1628 * t1724 - t1629 * t1723;
t1823 = t1555 * t1730;
t1871 = t1735 * t1782 + t1823;
t1822 = t1555 * t1735;
t1870 = -t1730 * t1782 + t1822;
t1692 = qJDD(1) * t1723 + t1724 * t1850;
t1693 = qJDD(1) * t1724 - t1723 * t1850;
t1634 = -t1692 * t1730 + t1735 * t1693;
t1840 = g(3) - qJDD(2);
t1663 = -qJ(2) * t1692 + t1724 * t1840;
t1851 = -qJ(2) * t1693 - t1723 * t1840;
t1869 = -pkin(6) * t1634 - t1663 * t1730 + t1735 * t1851;
t1852 = t1735 * t1692 + t1693 * t1730;
t1868 = -pkin(6) * t1852 + t1663 * t1735 + t1730 * t1851;
t1726 = sin(qJ(6));
t1728 = sin(qJ(4));
t1729 = sin(qJ(3));
t1733 = cos(qJ(4));
t1734 = cos(qJ(3));
t1677 = (t1728 * t1734 + t1729 * t1733) * qJD(1);
t1720 = qJD(3) + qJD(4);
t1727 = sin(qJ(5));
t1732 = cos(qJ(5));
t1640 = t1677 * t1727 - t1732 * t1720;
t1641 = t1677 * t1732 + t1720 * t1727;
t1731 = cos(qJ(6));
t1578 = t1731 * t1640 + t1641 * t1726;
t1580 = -t1640 * t1726 + t1641 * t1731;
t1513 = t1580 * t1578;
t1835 = qJD(1) * t1734;
t1713 = qJD(3) * t1835;
t1800 = t1729 * qJDD(1);
t1689 = t1713 + t1800;
t1836 = qJD(1) * t1729;
t1789 = qJD(3) * t1836;
t1799 = t1734 * qJDD(1);
t1752 = -t1789 + t1799;
t1781 = t1728 * t1689 - t1733 * t1752;
t1592 = -qJD(4) * t1677 - t1781;
t1586 = qJDD(5) - t1592;
t1585 = qJDD(6) + t1586;
t1856 = -t1513 + t1585;
t1867 = t1726 * t1856;
t1582 = t1641 * t1640;
t1854 = -t1582 + t1586;
t1866 = t1727 * t1854;
t1675 = t1728 * t1836 - t1733 * t1835;
t1630 = t1677 * t1675;
t1798 = qJDD(3) + qJDD(4);
t1853 = -t1630 + t1798;
t1865 = t1728 * t1853;
t1864 = t1731 * t1856;
t1863 = t1732 * t1854;
t1862 = t1733 * t1853;
t1738 = -t1724 * t1703 + t1742 + qJDD(1) * pkin(7) + (-pkin(1) * t1724 - pkin(2)) * t1850;
t1591 = -t1729 * t1840 + t1734 * t1738;
t1701 = qJD(3) * pkin(3) - pkin(8) * t1836;
t1847 = t1734 ^ 2;
t1718 = t1847 * t1850;
t1540 = -pkin(3) * t1718 + pkin(8) * t1752 - qJD(3) * t1701 + t1591;
t1589 = t1729 * t1738 + t1734 * t1840;
t1709 = t1734 * t1850 * t1729;
t1699 = qJDD(3) + t1709;
t1737 = -t1589 + (-t1689 + t1713) * pkin(8) + t1699 * pkin(3);
t1461 = t1733 * t1540 + t1728 * t1737;
t1626 = pkin(4) * t1675 - pkin(9) * t1677;
t1848 = t1720 ^ 2;
t1421 = -pkin(4) * t1848 + pkin(9) * t1798 - t1675 * t1626 + t1461;
t1612 = -qJDD(1) * pkin(2) - pkin(7) * t1850 + t1628;
t1557 = -t1752 * pkin(3) - pkin(8) * t1718 + t1701 * t1836 + t1612;
t1593 = -t1675 * qJD(4) + t1733 * t1689 + t1728 * t1752;
t1666 = t1720 * t1675;
t1567 = -t1666 + t1593;
t1807 = t1720 * t1677;
t1431 = -t1567 * pkin(9) + (-t1592 + t1807) * pkin(4) + t1557;
t1337 = t1727 * t1421 - t1732 * t1431;
t1338 = t1732 * t1421 + t1727 * t1431;
t1252 = t1727 * t1337 + t1732 * t1338;
t1744 = -t1732 * t1593 - t1727 * t1798;
t1531 = -t1640 * qJD(5) - t1744;
t1743 = -t1727 * t1593 + t1732 * t1798;
t1739 = t1641 * qJD(5) - t1743;
t1412 = -t1578 * qJD(6) + t1731 * t1531 - t1726 * t1739;
t1670 = qJD(5) + t1675;
t1668 = qJD(6) + t1670;
t1543 = t1668 * t1578;
t1855 = -t1543 + t1412;
t1519 = t1729 * t1589 + t1734 * t1591;
t1606 = t1670 * t1640;
t1508 = t1606 + t1531;
t1784 = t1726 * t1531 + t1731 * t1739;
t1376 = (qJD(6) - t1668) * t1580 + t1784;
t1564 = (qJD(4) - t1720) * t1677 + t1781;
t1576 = t1578 ^ 2;
t1577 = t1580 ^ 2;
t1849 = t1640 ^ 2;
t1639 = t1641 ^ 2;
t1667 = t1668 ^ 2;
t1669 = t1670 ^ 2;
t1672 = t1675 ^ 2;
t1673 = t1677 ^ 2;
t1460 = t1540 * t1728 - t1733 * t1737;
t1361 = -t1460 * t1733 + t1461 * t1728;
t1846 = pkin(3) * t1361;
t1568 = t1666 + t1593;
t1486 = -t1564 * t1728 - t1568 * t1733;
t1845 = pkin(3) * t1486;
t1844 = pkin(4) * t1728;
t1288 = pkin(5) * t1854 - pkin(10) * t1508 - t1337;
t1595 = pkin(5) * t1670 - pkin(10) * t1641;
t1310 = -pkin(5) * t1849 - pkin(10) * t1739 - t1670 * t1595 + t1338;
t1222 = -t1731 * t1288 + t1310 * t1726;
t1223 = t1288 * t1726 + t1310 * t1731;
t1159 = -t1222 * t1731 + t1223 * t1726;
t1843 = pkin(5) * t1159;
t1379 = t1543 + t1412;
t1296 = -t1376 * t1726 - t1379 * t1731;
t1842 = pkin(5) * t1296;
t1837 = qJD(1) * qJD(3);
t1721 = t1729 ^ 2;
t1834 = t1850 * t1721;
t1833 = t1159 * t1727;
t1832 = t1159 * t1732;
t1420 = -t1798 * pkin(4) - t1848 * pkin(9) + t1626 * t1677 + t1460;
t1342 = pkin(5) * t1739 - pkin(10) * t1849 + t1595 * t1641 + t1420;
t1831 = t1342 * t1726;
t1830 = t1342 * t1731;
t1829 = t1361 * t1729;
t1828 = t1361 * t1734;
t1457 = t1513 + t1585;
t1827 = t1457 * t1726;
t1826 = t1457 * t1731;
t1521 = t1582 + t1586;
t1825 = t1521 * t1727;
t1824 = t1521 * t1732;
t1821 = t1557 * t1728;
t1820 = t1557 * t1733;
t1624 = t1630 + t1798;
t1819 = t1624 * t1728;
t1818 = t1624 * t1733;
t1817 = t1668 * t1580;
t1816 = t1668 * t1726;
t1815 = t1668 * t1731;
t1814 = t1670 * t1727;
t1813 = t1670 * t1732;
t1690 = -0.2e1 * t1789 + t1799;
t1644 = t1690 * t1734;
t1810 = t1699 * t1729;
t1700 = qJDD(3) - t1709;
t1809 = t1700 * t1729;
t1808 = t1700 * t1734;
t1806 = t1720 * t1728;
t1805 = t1720 * t1733;
t1415 = t1727 * t1420;
t1608 = t1729 * t1612;
t1416 = t1732 * t1420;
t1609 = t1734 * t1612;
t1802 = -pkin(4) * t1420 + pkin(9) * t1252;
t1801 = -pkin(2) * t1612 + pkin(7) * t1519;
t1797 = t1721 + t1847;
t1796 = -pkin(4) * t1733 - pkin(3);
t1795 = t1728 * t1513;
t1794 = t1733 * t1513;
t1793 = t1728 * t1582;
t1792 = t1733 * t1582;
t1791 = t1723 * t1630;
t1790 = t1724 * t1630;
t1575 = -t1639 - t1669;
t1455 = -t1575 * t1727 - t1824;
t1509 = (qJD(5) + t1670) * t1640 + t1744;
t1788 = pkin(4) * t1509 + pkin(9) * t1455 + t1415;
t1558 = -t1669 - t1849;
t1450 = t1558 * t1732 - t1866;
t1607 = t1670 * t1641;
t1505 = -t1607 - t1739;
t1787 = pkin(4) * t1505 + pkin(9) * t1450 - t1416;
t1736 = qJD(3) ^ 2;
t1705 = -t1736 - t1834;
t1653 = -t1705 * t1729 - t1808;
t1688 = 0.2e1 * t1713 + t1800;
t1786 = -pkin(2) * t1688 + pkin(7) * t1653 + t1608;
t1707 = -t1718 - t1736;
t1651 = t1707 * t1734 - t1810;
t1785 = pkin(2) * t1690 + pkin(7) * t1651 - t1609;
t1160 = t1222 * t1726 + t1731 * t1223;
t1362 = t1460 * t1728 + t1733 * t1461;
t1780 = -t1702 * t1730 - t1735 * t1703;
t1779 = t1723 * t1709;
t1778 = t1724 * t1709;
t1127 = t1160 * t1727 + t1832;
t1151 = -pkin(5) * t1342 + pkin(10) * t1160;
t1103 = -pkin(9) * t1127 - pkin(10) * t1832 - t1151 * t1727;
t1108 = -pkin(4) * t1127 - t1843;
t1128 = t1160 * t1732 - t1833;
t1121 = t1128 * t1733 + t1342 * t1728;
t1077 = -pkin(3) * t1127 + pkin(8) * t1121 + t1103 * t1728 + t1108 * t1733;
t1120 = t1128 * t1728 - t1342 * t1733;
t1081 = -pkin(8) * t1120 + t1103 * t1733 - t1108 * t1728;
t1102 = -t1120 * t1729 + t1121 * t1734;
t1777 = -pkin(2) * t1127 + pkin(7) * t1102 + t1734 * t1077 + t1729 * t1081;
t1298 = -t1376 * t1731 + t1379 * t1726;
t1451 = -t1576 - t1577;
t1144 = -pkin(5) * t1451 + pkin(10) * t1298 + t1160;
t1146 = -pkin(10) * t1296 - t1159;
t1227 = t1296 * t1732 + t1298 * t1727;
t1106 = -pkin(9) * t1227 - t1144 * t1727 + t1146 * t1732;
t1186 = -pkin(4) * t1227 - t1842;
t1229 = -t1296 * t1727 + t1298 * t1732;
t1210 = t1229 * t1733 + t1451 * t1728;
t1096 = -pkin(3) * t1227 + pkin(8) * t1210 + t1106 * t1728 + t1186 * t1733;
t1209 = t1229 * t1728 - t1451 * t1733;
t1099 = -pkin(8) * t1209 + t1106 * t1733 - t1186 * t1728;
t1154 = -t1209 * t1729 + t1210 * t1734;
t1776 = -pkin(2) * t1227 + pkin(7) * t1154 + t1734 * t1096 + t1729 * t1099;
t1375 = (qJD(6) + t1668) * t1580 + t1784;
t1493 = -t1667 - t1576;
t1384 = t1493 * t1731 - t1867;
t1239 = -pkin(5) * t1375 + pkin(10) * t1384 - t1830;
t1383 = t1493 * t1726 + t1864;
t1278 = -pkin(10) * t1383 + t1831;
t1304 = t1383 * t1732 + t1384 * t1727;
t1163 = -pkin(9) * t1304 - t1239 * t1727 + t1278 * t1732;
t1753 = pkin(5) * t1383 - t1222;
t1170 = -pkin(4) * t1304 - t1753;
t1305 = -t1383 * t1727 + t1384 * t1732;
t1246 = t1305 * t1733 + t1375 * t1728;
t1112 = -pkin(3) * t1304 + pkin(8) * t1246 + t1163 * t1728 + t1170 * t1733;
t1245 = t1305 * t1728 - t1375 * t1733;
t1119 = -pkin(8) * t1245 + t1163 * t1733 - t1170 * t1728;
t1189 = -t1245 * t1729 + t1246 * t1734;
t1775 = -pkin(2) * t1304 + pkin(7) * t1189 + t1734 * t1112 + t1729 * t1119;
t1523 = -t1577 - t1667;
t1400 = -t1523 * t1726 - t1826;
t1242 = -pkin(5) * t1855 + pkin(10) * t1400 + t1831;
t1399 = t1523 * t1731 - t1827;
t1283 = -pkin(10) * t1399 + t1830;
t1318 = t1399 * t1732 + t1400 * t1727;
t1169 = -pkin(9) * t1318 - t1242 * t1727 + t1283 * t1732;
t1741 = pkin(5) * t1399 - t1223;
t1182 = -pkin(4) * t1318 - t1741;
t1319 = -t1399 * t1727 + t1400 * t1732;
t1254 = t1319 * t1733 + t1728 * t1855;
t1115 = -pkin(3) * t1318 + pkin(8) * t1254 + t1169 * t1728 + t1182 * t1733;
t1253 = t1319 * t1728 - t1733 * t1855;
t1124 = -pkin(8) * t1253 + t1169 * t1733 - t1182 * t1728;
t1194 = -t1253 * t1729 + t1254 * t1734;
t1774 = -pkin(2) * t1318 + pkin(7) * t1194 + t1734 * t1115 + t1729 * t1124;
t1773 = -pkin(4) * t1451 + pkin(9) * t1229 + t1732 * t1144 + t1727 * t1146;
t1234 = t1252 * t1733 + t1420 * t1728;
t1251 = -t1337 * t1732 + t1338 * t1727;
t1140 = pkin(8) * t1234 + (-pkin(9) * t1728 + t1796) * t1251;
t1233 = t1252 * t1728 - t1420 * t1733;
t1156 = -pkin(8) * t1233 + (-pkin(9) * t1733 + t1844) * t1251;
t1173 = -t1233 * t1729 + t1234 * t1734;
t1772 = -pkin(2) * t1251 + pkin(7) * t1173 + t1734 * t1140 + t1729 * t1156;
t1506 = (-qJD(5) + t1670) * t1641 + t1743;
t1404 = t1506 * t1727 - t1508 * t1732;
t1232 = -pkin(9) * t1404 - t1251;
t1406 = t1506 * t1732 + t1508 * t1727;
t1536 = t1639 + t1849;
t1358 = t1406 * t1733 - t1536 * t1728;
t1185 = pkin(8) * t1358 + t1728 * t1232 + t1404 * t1796;
t1357 = t1406 * t1728 + t1536 * t1733;
t1191 = -pkin(8) * t1357 + t1232 * t1733 + t1404 * t1844;
t1281 = -t1357 * t1729 + t1358 * t1734;
t1771 = -pkin(2) * t1404 + pkin(7) * t1281 + t1734 * t1185 + t1729 * t1191;
t1449 = t1558 * t1727 + t1863;
t1307 = -pkin(4) * t1449 + t1337;
t1344 = -pkin(9) * t1449 + t1415;
t1382 = t1450 * t1733 - t1505 * t1728;
t1205 = -pkin(3) * t1449 + pkin(8) * t1382 + t1307 * t1733 + t1344 * t1728;
t1381 = t1450 * t1728 + t1505 * t1733;
t1217 = -pkin(8) * t1381 - t1307 * t1728 + t1344 * t1733;
t1301 = -t1381 * t1729 + t1382 * t1734;
t1770 = -pkin(2) * t1449 + pkin(7) * t1301 + t1734 * t1205 + t1729 * t1217;
t1454 = t1575 * t1732 - t1825;
t1311 = -pkin(4) * t1454 + t1338;
t1348 = -pkin(9) * t1454 + t1416;
t1386 = t1455 * t1733 - t1509 * t1728;
t1207 = -pkin(3) * t1454 + pkin(8) * t1386 + t1311 * t1733 + t1348 * t1728;
t1385 = t1455 * t1728 + t1509 * t1733;
t1219 = -pkin(8) * t1385 - t1311 * t1728 + t1348 * t1733;
t1309 = -t1385 * t1729 + t1386 * t1734;
t1769 = -pkin(2) * t1454 + pkin(7) * t1309 + t1734 * t1207 + t1729 * t1219;
t1768 = -pkin(4) * t1375 + pkin(9) * t1305 + t1732 * t1239 + t1727 * t1278;
t1767 = -pkin(4) * t1855 + pkin(9) * t1319 + t1732 * t1242 + t1727 * t1283;
t1488 = -t1564 * t1733 + t1568 * t1728;
t1594 = -t1672 - t1673;
t1326 = -pkin(3) * t1594 + pkin(8) * t1488 + t1362;
t1333 = -pkin(8) * t1486 - t1361;
t1398 = -t1486 * t1729 + t1488 * t1734;
t1766 = -pkin(2) * t1594 + pkin(7) * t1398 + t1734 * t1326 + t1729 * t1333;
t1765 = pkin(4) * t1536 + pkin(9) * t1406 + t1252;
t1621 = -t1848 - t1672;
t1542 = t1621 * t1733 - t1865;
t1563 = (qJD(4) + t1720) * t1677 + t1781;
t1422 = -pkin(3) * t1563 + pkin(8) * t1542 - t1820;
t1541 = t1621 * t1728 + t1862;
t1464 = -t1541 * t1729 + t1542 * t1734;
t1473 = -pkin(8) * t1541 + t1821;
t1764 = -pkin(2) * t1563 + pkin(7) * t1464 + t1734 * t1422 + t1729 * t1473;
t1654 = -t1673 - t1848;
t1570 = -t1654 * t1728 - t1818;
t1430 = -pkin(3) * t1567 + pkin(8) * t1570 + t1821;
t1569 = t1654 * t1733 - t1819;
t1483 = -pkin(8) * t1569 + t1820;
t1490 = -t1569 * t1729 + t1570 * t1734;
t1763 = -pkin(2) * t1567 + pkin(7) * t1490 + t1734 * t1430 + t1729 * t1483;
t1694 = t1797 * qJDD(1);
t1697 = t1718 + t1834;
t1762 = pkin(2) * t1697 + pkin(7) * t1694 + t1519;
t1761 = pkin(3) * t1233 + t1802;
t1760 = pkin(3) * t1569 - t1461;
t1696 = qJDD(1) * t1735 - t1730 * t1850;
t1759 = -pkin(6) * t1696 - g(3) * t1730;
t1518 = t1589 * t1734 - t1591 * t1729;
t1758 = t1702 * t1735 - t1703 * t1730;
t1757 = pkin(3) * t1381 + t1787;
t1756 = pkin(3) * t1385 + t1788;
t1754 = pkin(3) * t1541 - t1460;
t1286 = t1362 * t1734 - t1829;
t1343 = -pkin(3) * t1557 + pkin(8) * t1362;
t1751 = -pkin(2) * t1557 + pkin(7) * t1286 - pkin(8) * t1829 + t1734 * t1343;
t1750 = -pkin(4) * t1342 + pkin(9) * t1128 - pkin(10) * t1833 + t1732 * t1151;
t1749 = pkin(3) * t1209 + t1773;
t1748 = pkin(3) * t1245 + t1768;
t1747 = pkin(3) * t1253 + t1767;
t1746 = pkin(3) * t1357 + t1765;
t1740 = pkin(3) * t1120 + t1750;
t1706 = t1718 - t1736;
t1704 = t1736 - t1834;
t1698 = -t1718 + t1834;
t1695 = qJDD(1) * t1730 + t1735 * t1850;
t1685 = t1734 * t1699;
t1684 = t1797 * t1837;
t1671 = -pkin(6) * t1695 + g(3) * t1735;
t1660 = -t1673 + t1848;
t1659 = t1672 - t1848;
t1658 = t1689 * t1734 - t1721 * t1837;
t1657 = -t1729 * t1752 - t1837 * t1847;
t1656 = qJDD(3) * t1723 + t1684 * t1724;
t1655 = -qJDD(3) * t1724 + t1684 * t1723;
t1652 = -t1704 * t1729 + t1685;
t1650 = t1706 * t1734 - t1809;
t1649 = t1705 * t1734 - t1809;
t1648 = t1704 * t1734 + t1810;
t1647 = t1707 * t1729 + t1685;
t1646 = t1706 * t1729 + t1808;
t1645 = (t1689 + t1713) * t1729;
t1637 = t1694 * t1724 - t1697 * t1723;
t1636 = t1694 * t1723 + t1697 * t1724;
t1632 = -t1688 * t1729 + t1644;
t1631 = t1688 * t1734 + t1690 * t1729;
t1627 = t1673 - t1672;
t1620 = t1658 * t1724 - t1779;
t1619 = t1657 * t1724 + t1779;
t1618 = t1658 * t1723 + t1778;
t1617 = t1657 * t1723 - t1778;
t1616 = t1652 * t1724 + t1723 * t1800;
t1615 = t1650 * t1724 + t1723 * t1799;
t1614 = t1652 * t1723 - t1724 * t1800;
t1613 = t1650 * t1723 - t1724 * t1799;
t1605 = t1653 * t1724 + t1688 * t1723;
t1604 = t1651 * t1724 - t1690 * t1723;
t1603 = t1653 * t1723 - t1688 * t1724;
t1602 = t1651 * t1723 + t1690 * t1724;
t1601 = -pkin(1) * t1692 - t1629;
t1600 = pkin(1) * t1693 - t1628;
t1599 = -t1639 + t1669;
t1598 = -t1669 + t1849;
t1597 = (-t1675 * t1733 + t1677 * t1728) * t1720;
t1596 = (-t1675 * t1728 - t1677 * t1733) * t1720;
t1590 = t1632 * t1724 + t1698 * t1723;
t1588 = t1632 * t1723 - t1698 * t1724;
t1581 = t1639 - t1849;
t1574 = t1659 * t1733 - t1819;
t1573 = -t1660 * t1728 + t1862;
t1572 = t1659 * t1728 + t1818;
t1571 = t1660 * t1733 + t1865;
t1562 = -pkin(7) * t1649 + t1609;
t1561 = -pkin(7) * t1647 + t1608;
t1551 = pkin(1) * t1555;
t1550 = t1593 * t1733 - t1677 * t1806;
t1549 = t1593 * t1728 + t1677 * t1805;
t1548 = -t1592 * t1728 + t1675 * t1805;
t1547 = t1592 * t1733 + t1675 * t1806;
t1546 = -pkin(2) * t1649 + t1591;
t1545 = -pkin(2) * t1647 + t1589;
t1539 = -t1577 + t1667;
t1538 = t1576 - t1667;
t1537 = pkin(1) * t1840 + qJ(2) * t1782;
t1527 = (-t1640 * t1732 + t1641 * t1727) * t1670;
t1526 = (-t1640 * t1727 - t1641 * t1732) * t1670;
t1525 = -t1596 * t1729 + t1597 * t1734;
t1524 = t1596 * t1734 + t1597 * t1729;
t1515 = t1724 * t1525 + t1723 * t1798;
t1514 = t1723 * t1525 - t1724 * t1798;
t1512 = t1577 - t1576;
t1511 = pkin(1) * t1602 + t1785;
t1510 = pkin(1) * t1603 + t1786;
t1507 = -t1606 + t1531;
t1504 = -t1607 + t1739;
t1501 = -t1572 * t1729 + t1574 * t1734;
t1500 = -t1571 * t1729 + t1573 * t1734;
t1499 = t1572 * t1734 + t1574 * t1729;
t1498 = t1571 * t1734 + t1573 * t1729;
t1497 = t1531 * t1732 - t1641 * t1814;
t1496 = t1531 * t1727 + t1641 * t1813;
t1495 = t1640 * t1813 + t1727 * t1739;
t1494 = -t1640 * t1814 + t1732 * t1739;
t1492 = -qJ(2) * t1636 + t1518 * t1724;
t1491 = qJ(2) * t1637 + t1518 * t1723;
t1489 = t1569 * t1734 + t1570 * t1729;
t1487 = -t1563 * t1733 - t1567 * t1728;
t1485 = -t1563 * t1728 + t1567 * t1733;
t1481 = t1527 * t1733 + t1586 * t1728;
t1480 = t1527 * t1728 - t1586 * t1733;
t1479 = t1519 * t1724 + t1612 * t1723;
t1478 = t1519 * t1723 - t1612 * t1724;
t1477 = t1598 * t1732 - t1825;
t1476 = -t1599 * t1727 + t1863;
t1475 = t1598 * t1727 + t1824;
t1474 = t1599 * t1732 + t1866;
t1472 = -t1549 * t1729 + t1550 * t1734;
t1471 = -t1547 * t1729 + t1548 * t1734;
t1470 = t1549 * t1734 + t1550 * t1729;
t1469 = t1547 * t1734 + t1548 * t1729;
t1467 = pkin(1) * t1636 + t1762;
t1466 = (-t1578 * t1731 + t1580 * t1726) * t1668;
t1465 = (-t1578 * t1726 - t1580 * t1731) * t1668;
t1463 = t1541 * t1734 + t1542 * t1729;
t1445 = t1472 * t1724 + t1791;
t1444 = t1471 * t1724 - t1791;
t1443 = t1472 * t1723 - t1790;
t1442 = t1471 * t1723 + t1790;
t1441 = -qJ(2) * t1603 - t1546 * t1723 + t1562 * t1724;
t1440 = -qJ(2) * t1602 - t1545 * t1723 + t1561 * t1724;
t1439 = t1497 * t1733 + t1793;
t1438 = t1495 * t1733 - t1793;
t1437 = t1497 * t1728 - t1792;
t1436 = t1495 * t1728 + t1792;
t1435 = t1501 * t1724 - t1564 * t1723;
t1434 = t1500 * t1724 + t1568 * t1723;
t1433 = t1501 * t1723 + t1564 * t1724;
t1432 = t1500 * t1723 - t1568 * t1724;
t1426 = t1490 * t1724 + t1567 * t1723;
t1425 = t1490 * t1723 - t1567 * t1724;
t1424 = -pkin(1) * t1649 + qJ(2) * t1605 + t1546 * t1724 + t1562 * t1723;
t1423 = -pkin(1) * t1647 + qJ(2) * t1604 + t1545 * t1724 + t1561 * t1723;
t1414 = t1464 * t1724 + t1563 * t1723;
t1413 = t1464 * t1723 - t1563 * t1724;
t1411 = -qJD(6) * t1580 - t1784;
t1410 = t1538 * t1731 - t1827;
t1409 = -t1539 * t1726 + t1864;
t1408 = t1538 * t1726 + t1826;
t1407 = t1539 * t1731 + t1867;
t1405 = t1505 * t1732 - t1507 * t1727;
t1403 = t1505 * t1727 + t1507 * t1732;
t1397 = -t1485 * t1729 + t1487 * t1734;
t1396 = t1486 * t1734 + t1488 * t1729;
t1395 = t1485 * t1734 + t1487 * t1729;
t1394 = t1477 * t1733 - t1504 * t1728;
t1393 = t1476 * t1733 + t1508 * t1728;
t1392 = t1477 * t1728 + t1504 * t1733;
t1391 = t1476 * t1728 - t1508 * t1733;
t1389 = pkin(1) * t1478 + t1801;
t1388 = -t1480 * t1729 + t1481 * t1734;
t1387 = t1480 * t1734 + t1481 * t1729;
t1372 = t1412 * t1731 - t1580 * t1816;
t1371 = t1412 * t1726 + t1580 * t1815;
t1370 = -t1411 * t1726 + t1578 * t1815;
t1369 = t1411 * t1731 + t1578 * t1816;
t1368 = t1405 * t1733 + t1581 * t1728;
t1367 = t1405 * t1728 - t1581 * t1733;
t1366 = -t1465 * t1727 + t1466 * t1732;
t1365 = t1465 * t1732 + t1466 * t1727;
t1364 = t1397 * t1724 + t1627 * t1723;
t1363 = t1397 * t1723 - t1627 * t1724;
t1360 = t1398 * t1724 + t1594 * t1723;
t1359 = t1398 * t1723 - t1594 * t1724;
t1356 = -qJ(2) * t1478 - (pkin(2) * t1723 - pkin(7) * t1724) * t1518;
t1355 = -pkin(2) * t1489 - t1760;
t1354 = t1366 * t1733 + t1585 * t1728;
t1353 = t1366 * t1728 - t1585 * t1733;
t1352 = -t1437 * t1729 + t1439 * t1734;
t1351 = -t1436 * t1729 + t1438 * t1734;
t1350 = t1437 * t1734 + t1439 * t1729;
t1349 = t1436 * t1734 + t1438 * t1729;
t1347 = t1388 * t1724 + t1526 * t1723;
t1346 = t1388 * t1723 - t1526 * t1724;
t1345 = -pkin(2) * t1463 - t1754;
t1339 = -pkin(2) * t1396 - t1845;
t1334 = qJ(2) * t1479 - (-pkin(2) * t1724 - pkin(7) * t1723 - pkin(1)) * t1518;
t1331 = -pkin(7) * t1489 - t1430 * t1729 + t1483 * t1734;
t1330 = -t1408 * t1727 + t1410 * t1732;
t1329 = -t1407 * t1727 + t1409 * t1732;
t1328 = t1408 * t1732 + t1410 * t1727;
t1327 = t1407 * t1732 + t1409 * t1727;
t1324 = t1352 * t1724 + t1496 * t1723;
t1323 = t1351 * t1724 - t1494 * t1723;
t1322 = t1352 * t1723 - t1496 * t1724;
t1321 = t1351 * t1723 + t1494 * t1724;
t1320 = -pkin(7) * t1463 - t1422 * t1729 + t1473 * t1734;
t1315 = -t1392 * t1729 + t1394 * t1734;
t1314 = -t1391 * t1729 + t1393 * t1734;
t1313 = t1392 * t1734 + t1394 * t1729;
t1312 = t1391 * t1734 + t1393 * t1729;
t1308 = t1385 * t1734 + t1386 * t1729;
t1300 = t1381 * t1734 + t1382 * t1729;
t1297 = -t1375 * t1731 - t1726 * t1855;
t1295 = -t1375 * t1726 + t1731 * t1855;
t1294 = -t1371 * t1727 + t1372 * t1732;
t1293 = -t1369 * t1727 + t1370 * t1732;
t1292 = t1371 * t1732 + t1372 * t1727;
t1291 = t1369 * t1732 + t1370 * t1727;
t1290 = -t1367 * t1729 + t1368 * t1734;
t1289 = t1367 * t1734 + t1368 * t1729;
t1285 = t1362 * t1729 + t1828;
t1280 = t1357 * t1734 + t1358 * t1729;
t1276 = t1315 * t1724 + t1475 * t1723;
t1275 = t1314 * t1724 + t1474 * t1723;
t1274 = t1315 * t1723 - t1475 * t1724;
t1273 = t1314 * t1723 - t1474 * t1724;
t1272 = t1286 * t1724 + t1557 * t1723;
t1271 = t1286 * t1723 - t1557 * t1724;
t1270 = -t1353 * t1729 + t1354 * t1734;
t1269 = t1353 * t1734 + t1354 * t1729;
t1268 = t1294 * t1733 + t1795;
t1267 = t1293 * t1733 - t1795;
t1266 = t1294 * t1728 - t1794;
t1265 = t1293 * t1728 + t1794;
t1264 = pkin(1) * t1425 + t1763;
t1263 = t1309 * t1724 + t1454 * t1723;
t1262 = t1309 * t1723 - t1454 * t1724;
t1261 = t1301 * t1724 + t1449 * t1723;
t1260 = t1301 * t1723 - t1449 * t1724;
t1259 = t1330 * t1733 - t1376 * t1728;
t1258 = t1329 * t1733 + t1379 * t1728;
t1257 = t1330 * t1728 + t1376 * t1733;
t1256 = t1329 * t1728 - t1379 * t1733;
t1255 = pkin(1) * t1413 + t1764;
t1248 = t1290 * t1724 + t1403 * t1723;
t1247 = t1290 * t1723 - t1403 * t1724;
t1244 = t1281 * t1724 + t1404 * t1723;
t1243 = t1281 * t1723 - t1404 * t1724;
t1240 = -pkin(2) * t1285 - t1846;
t1237 = -qJ(2) * t1425 + t1331 * t1724 - t1355 * t1723;
t1236 = t1270 * t1724 + t1365 * t1723;
t1235 = t1270 * t1723 - t1365 * t1724;
t1231 = -qJ(2) * t1413 + t1320 * t1724 - t1345 * t1723;
t1230 = -pkin(1) * t1489 + qJ(2) * t1426 + t1331 * t1723 + t1355 * t1724;
t1228 = -t1295 * t1727 + t1297 * t1732;
t1226 = t1295 * t1732 + t1297 * t1727;
t1221 = -pkin(7) * t1396 - t1326 * t1729 + t1333 * t1734;
t1215 = -pkin(1) * t1463 + qJ(2) * t1414 + t1320 * t1723 + t1345 * t1724;
t1214 = t1228 * t1733 + t1512 * t1728;
t1213 = t1228 * t1728 - t1512 * t1733;
t1212 = -pkin(7) * t1285 - pkin(8) * t1828 - t1343 * t1729;
t1211 = -pkin(2) * t1308 - t1756;
t1208 = -pkin(2) * t1300 - t1757;
t1203 = -t1266 * t1729 + t1268 * t1734;
t1202 = -t1265 * t1729 + t1267 * t1734;
t1201 = t1266 * t1734 + t1268 * t1729;
t1200 = t1265 * t1734 + t1267 * t1729;
t1199 = -t1257 * t1729 + t1259 * t1734;
t1198 = -t1256 * t1729 + t1258 * t1734;
t1197 = t1257 * t1734 + t1259 * t1729;
t1196 = t1256 * t1734 + t1258 * t1729;
t1195 = pkin(1) * t1359 + t1766;
t1193 = t1253 * t1734 + t1254 * t1729;
t1188 = t1245 * t1734 + t1246 * t1729;
t1183 = -qJ(2) * t1359 + t1221 * t1724 - t1339 * t1723;
t1181 = t1199 * t1724 + t1328 * t1723;
t1180 = t1198 * t1724 + t1327 * t1723;
t1179 = t1199 * t1723 - t1328 * t1724;
t1178 = t1198 * t1723 - t1327 * t1724;
t1177 = t1203 * t1724 + t1292 * t1723;
t1176 = t1202 * t1724 + t1291 * t1723;
t1175 = t1203 * t1723 - t1292 * t1724;
t1174 = t1202 * t1723 - t1291 * t1724;
t1172 = t1233 * t1734 + t1234 * t1729;
t1168 = pkin(1) * t1271 + t1751;
t1167 = -pkin(2) * t1280 - t1746;
t1166 = t1194 * t1724 + t1318 * t1723;
t1165 = t1194 * t1723 - t1318 * t1724;
t1164 = -pkin(1) * t1396 + qJ(2) * t1360 + t1221 * t1723 + t1339 * t1724;
t1162 = t1189 * t1724 + t1304 * t1723;
t1161 = t1189 * t1723 - t1304 * t1724;
t1158 = -t1213 * t1729 + t1214 * t1734;
t1157 = t1213 * t1734 + t1214 * t1729;
t1153 = t1209 * t1734 + t1210 * t1729;
t1149 = t1173 * t1724 + t1251 * t1723;
t1148 = t1173 * t1723 - t1251 * t1724;
t1147 = -qJ(2) * t1271 + t1212 * t1724 - t1240 * t1723;
t1142 = -pkin(7) * t1308 - t1207 * t1729 + t1219 * t1734;
t1141 = -pkin(7) * t1300 - t1205 * t1729 + t1217 * t1734;
t1138 = -pkin(1) * t1285 + qJ(2) * t1272 + t1212 * t1723 + t1240 * t1724;
t1137 = t1158 * t1724 + t1226 * t1723;
t1136 = t1158 * t1723 - t1226 * t1724;
t1135 = t1154 * t1724 + t1227 * t1723;
t1134 = t1154 * t1723 - t1227 * t1724;
t1133 = pkin(1) * t1262 + t1769;
t1132 = -pkin(2) * t1172 - t1761;
t1131 = pkin(1) * t1260 + t1770;
t1130 = -pkin(7) * t1280 - t1185 * t1729 + t1191 * t1734;
t1129 = -pkin(2) * t1193 - t1747;
t1122 = -pkin(2) * t1188 - t1748;
t1117 = -qJ(2) * t1262 + t1142 * t1724 - t1211 * t1723;
t1116 = pkin(1) * t1243 + t1771;
t1113 = -qJ(2) * t1260 + t1141 * t1724 - t1208 * t1723;
t1110 = -pkin(1) * t1308 + qJ(2) * t1263 + t1142 * t1723 + t1211 * t1724;
t1109 = -pkin(1) * t1300 + qJ(2) * t1261 + t1141 * t1723 + t1208 * t1724;
t1107 = -qJ(2) * t1243 + t1130 * t1724 - t1167 * t1723;
t1105 = -pkin(1) * t1280 + qJ(2) * t1244 + t1130 * t1723 + t1167 * t1724;
t1104 = -pkin(7) * t1172 - t1140 * t1729 + t1156 * t1734;
t1101 = t1120 * t1734 + t1121 * t1729;
t1097 = -pkin(2) * t1153 - t1749;
t1094 = -pkin(7) * t1193 - t1115 * t1729 + t1124 * t1734;
t1093 = pkin(1) * t1148 + t1772;
t1092 = -pkin(7) * t1188 - t1112 * t1729 + t1119 * t1734;
t1091 = pkin(1) * t1165 + t1774;
t1090 = t1102 * t1724 + t1127 * t1723;
t1089 = t1102 * t1723 - t1127 * t1724;
t1088 = -qJ(2) * t1148 + t1104 * t1724 - t1132 * t1723;
t1087 = pkin(1) * t1161 + t1775;
t1086 = -pkin(1) * t1172 + qJ(2) * t1149 + t1104 * t1723 + t1132 * t1724;
t1085 = -qJ(2) * t1165 + t1094 * t1724 - t1129 * t1723;
t1084 = -qJ(2) * t1161 + t1092 * t1724 - t1122 * t1723;
t1083 = -pkin(1) * t1193 + qJ(2) * t1166 + t1094 * t1723 + t1129 * t1724;
t1082 = -pkin(1) * t1188 + qJ(2) * t1162 + t1092 * t1723 + t1122 * t1724;
t1079 = -pkin(7) * t1153 - t1096 * t1729 + t1099 * t1734;
t1078 = -pkin(2) * t1101 - t1740;
t1075 = pkin(1) * t1134 + t1776;
t1074 = -qJ(2) * t1134 + t1079 * t1724 - t1097 * t1723;
t1073 = -pkin(1) * t1153 + qJ(2) * t1135 + t1079 * t1723 + t1097 * t1724;
t1072 = -pkin(7) * t1101 - t1077 * t1729 + t1081 * t1734;
t1071 = pkin(1) * t1089 + t1777;
t1070 = -qJ(2) * t1089 + t1072 * t1724 - t1078 * t1723;
t1069 = -pkin(1) * t1101 + qJ(2) * t1090 + t1072 * t1723 + t1078 * t1724;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1696, 0, -t1695, 0, t1759, -t1671, -t1758, -pkin(6) * t1758, 0, 0, t1634, 0, -t1852, 0, t1869, -t1868, t1870, pkin(6) * t1870 + qJ(2) * t1822 - t1730 * t1537, -t1618 * t1730 + t1620 * t1735, -t1588 * t1730 + t1590 * t1735, -t1614 * t1730 + t1616 * t1735, -t1617 * t1730 + t1619 * t1735, -t1613 * t1730 + t1615 * t1735, -t1655 * t1730 + t1656 * t1735, t1735 * t1440 - t1730 * t1423 - pkin(6) * (t1602 * t1735 + t1604 * t1730), t1735 * t1441 - t1730 * t1424 - pkin(6) * (t1603 * t1735 + t1605 * t1730), t1735 * t1492 - t1730 * t1491 - pkin(6) * (t1636 * t1735 + t1637 * t1730), t1735 * t1356 - t1730 * t1334 - pkin(6) * (t1478 * t1735 + t1479 * t1730), -t1443 * t1730 + t1445 * t1735, -t1363 * t1730 + t1364 * t1735, -t1432 * t1730 + t1434 * t1735, -t1442 * t1730 + t1444 * t1735, -t1433 * t1730 + t1435 * t1735, -t1514 * t1730 + t1515 * t1735, t1735 * t1231 - t1730 * t1215 - pkin(6) * (t1413 * t1735 + t1414 * t1730), t1735 * t1237 - t1730 * t1230 - pkin(6) * (t1425 * t1735 + t1426 * t1730), t1735 * t1183 - t1730 * t1164 - pkin(6) * (t1359 * t1735 + t1360 * t1730), t1735 * t1147 - t1730 * t1138 - pkin(6) * (t1271 * t1735 + t1272 * t1730), -t1322 * t1730 + t1324 * t1735, -t1247 * t1730 + t1248 * t1735, -t1273 * t1730 + t1275 * t1735, -t1321 * t1730 + t1323 * t1735, -t1274 * t1730 + t1276 * t1735, -t1346 * t1730 + t1347 * t1735, t1735 * t1113 - t1730 * t1109 - pkin(6) * (t1260 * t1735 + t1261 * t1730), t1735 * t1117 - t1730 * t1110 - pkin(6) * (t1262 * t1735 + t1263 * t1730), t1735 * t1107 - t1730 * t1105 - pkin(6) * (t1243 * t1735 + t1244 * t1730), t1735 * t1088 - t1730 * t1086 - pkin(6) * (t1148 * t1735 + t1149 * t1730), -t1175 * t1730 + t1177 * t1735, -t1136 * t1730 + t1137 * t1735, -t1178 * t1730 + t1180 * t1735, -t1174 * t1730 + t1176 * t1735, -t1179 * t1730 + t1181 * t1735, -t1235 * t1730 + t1236 * t1735, t1735 * t1084 - t1730 * t1082 - pkin(6) * (t1161 * t1735 + t1162 * t1730), t1735 * t1085 - t1730 * t1083 - pkin(6) * (t1165 * t1735 + t1166 * t1730), t1735 * t1074 - t1730 * t1073 - pkin(6) * (t1134 * t1735 + t1135 * t1730), t1735 * t1070 - t1730 * t1069 - pkin(6) * (t1089 * t1735 + t1090 * t1730); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1695, 0, t1696, 0, t1671, t1759, t1780, pkin(6) * t1780, 0, 0, t1852, 0, t1634, 0, t1868, t1869, t1871, pkin(6) * t1871 + qJ(2) * t1823 + t1735 * t1537, t1618 * t1735 + t1620 * t1730, t1588 * t1735 + t1590 * t1730, t1614 * t1735 + t1616 * t1730, t1617 * t1735 + t1619 * t1730, t1613 * t1735 + t1615 * t1730, t1655 * t1735 + t1656 * t1730, t1730 * t1440 + t1735 * t1423 + pkin(6) * (-t1602 * t1730 + t1604 * t1735), t1730 * t1441 + t1735 * t1424 + pkin(6) * (-t1603 * t1730 + t1605 * t1735), t1730 * t1492 + t1735 * t1491 + pkin(6) * (-t1636 * t1730 + t1637 * t1735), t1730 * t1356 + t1735 * t1334 + pkin(6) * (-t1478 * t1730 + t1479 * t1735), t1443 * t1735 + t1445 * t1730, t1363 * t1735 + t1364 * t1730, t1432 * t1735 + t1434 * t1730, t1442 * t1735 + t1444 * t1730, t1433 * t1735 + t1435 * t1730, t1514 * t1735 + t1515 * t1730, t1730 * t1231 + t1735 * t1215 + pkin(6) * (-t1413 * t1730 + t1414 * t1735), t1730 * t1237 + t1735 * t1230 + pkin(6) * (-t1425 * t1730 + t1426 * t1735), t1730 * t1183 + t1735 * t1164 + pkin(6) * (-t1359 * t1730 + t1360 * t1735), t1730 * t1147 + t1735 * t1138 + pkin(6) * (-t1271 * t1730 + t1272 * t1735), t1322 * t1735 + t1324 * t1730, t1247 * t1735 + t1248 * t1730, t1273 * t1735 + t1275 * t1730, t1321 * t1735 + t1323 * t1730, t1274 * t1735 + t1276 * t1730, t1346 * t1735 + t1347 * t1730, t1730 * t1113 + t1735 * t1109 + pkin(6) * (-t1260 * t1730 + t1261 * t1735), t1730 * t1117 + t1735 * t1110 + pkin(6) * (-t1262 * t1730 + t1263 * t1735), t1730 * t1107 + t1735 * t1105 + pkin(6) * (-t1243 * t1730 + t1244 * t1735), t1730 * t1088 + t1735 * t1086 + pkin(6) * (-t1148 * t1730 + t1149 * t1735), t1175 * t1735 + t1177 * t1730, t1136 * t1735 + t1137 * t1730, t1178 * t1735 + t1180 * t1730, t1174 * t1735 + t1176 * t1730, t1179 * t1735 + t1181 * t1730, t1235 * t1735 + t1236 * t1730, t1730 * t1084 + t1735 * t1082 + pkin(6) * (-t1161 * t1730 + t1162 * t1735), t1730 * t1085 + t1735 * t1083 + pkin(6) * (-t1165 * t1730 + t1166 * t1735), t1730 * t1074 + t1735 * t1073 + pkin(6) * (-t1134 * t1730 + t1135 * t1735), t1730 * t1070 + t1735 * t1069 + pkin(6) * (-t1089 * t1730 + t1090 * t1735); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1702, t1703, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1600, t1601, 0, -t1551, t1645, t1631, t1648, t1644, t1646, 0, t1511, t1510, t1467, t1389, t1470, t1395, t1498, t1469, t1499, t1524, t1255, t1264, t1195, t1168, t1350, t1289, t1312, t1349, t1313, t1387, t1131, t1133, t1116, t1093, t1201, t1157, t1196, t1200, t1197, t1269, t1087, t1091, t1075, t1071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1850, 0, 0, -g(3), -t1702, 0, 0, 0, t1693, 0, -t1692, 0, t1851, -t1663, t1555, qJ(2) * t1555, t1620, t1590, t1616, t1619, t1615, t1656, t1440, t1441, t1492, t1356, t1445, t1364, t1434, t1444, t1435, t1515, t1231, t1237, t1183, t1147, t1324, t1248, t1275, t1323, t1276, t1347, t1113, t1117, t1107, t1088, t1177, t1137, t1180, t1176, t1181, t1236, t1084, t1085, t1074, t1070; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1850, 0, qJDD(1), 0, g(3), 0, -t1703, 0, 0, 0, t1692, 0, t1693, 0, t1663, t1851, t1782, t1537, t1618, t1588, t1614, t1617, t1613, t1655, t1423, t1424, t1491, t1334, t1443, t1363, t1432, t1442, t1433, t1514, t1215, t1230, t1164, t1138, t1322, t1247, t1273, t1321, t1274, t1346, t1109, t1110, t1105, t1086, t1175, t1136, t1178, t1174, t1179, t1235, t1082, t1083, t1073, t1069; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1702, t1703, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1600, t1601, 0, -t1551, t1645, t1631, t1648, t1644, t1646, 0, t1511, t1510, t1467, t1389, t1470, t1395, t1498, t1469, t1499, t1524, t1255, t1264, t1195, t1168, t1350, t1289, t1312, t1349, t1313, t1387, t1131, t1133, t1116, t1093, t1201, t1157, t1196, t1200, t1197, t1269, t1087, t1091, t1075, t1071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1850, 0, 0, -t1840, t1628, 0, t1658, t1632, t1652, t1657, t1650, t1684, t1561, t1562, t1518, pkin(7) * t1518, t1472, t1397, t1500, t1471, t1501, t1525, t1320, t1331, t1221, t1212, t1352, t1290, t1314, t1351, t1315, t1388, t1141, t1142, t1130, t1104, t1203, t1158, t1198, t1202, t1199, t1270, t1092, t1094, t1079, t1072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1850, 0, qJDD(1), 0, t1840, 0, t1629, 0, t1709, -t1698, -t1800, -t1709, -t1799, -qJDD(3), t1545, t1546, 0, pkin(2) * t1518, -t1630, -t1627, -t1568, t1630, t1564, -t1798, t1345, t1355, t1339, t1240, -t1496, -t1403, -t1474, t1494, -t1475, -t1526, t1208, t1211, t1167, t1132, -t1292, -t1226, -t1327, -t1291, -t1328, -t1365, t1122, t1129, t1097, t1078; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1628, -t1629, 0, 0, t1645, t1631, t1648, t1644, t1646, 0, t1785, t1786, t1762, t1801, t1470, t1395, t1498, t1469, t1499, t1524, t1764, t1763, t1766, t1751, t1350, t1289, t1312, t1349, t1313, t1387, t1770, t1769, t1771, t1772, t1201, t1157, t1196, t1200, t1197, t1269, t1775, t1774, t1776, t1777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1689, t1690, t1699, -t1713, t1706, t1713, 0, t1612, t1589, 0, t1550, t1487, t1573, t1548, t1574, t1597, t1473, t1483, t1333, -pkin(8) * t1361, t1439, t1368, t1393, t1438, t1394, t1481, t1217, t1219, t1191, t1156, t1268, t1214, t1258, t1267, t1259, t1354, t1119, t1124, t1099, t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1789, t1688, t1704, t1752, t1700, -t1789, -t1612, 0, t1591, 0, t1549, t1485, t1571, t1547, t1572, t1596, t1422, t1430, t1326, t1343, t1437, t1367, t1391, t1436, t1392, t1480, t1205, t1207, t1185, t1140, t1266, t1213, t1256, t1265, t1257, t1353, t1112, t1115, t1096, t1077; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1709, t1698, t1800, t1709, t1799, qJDD(3), -t1589, -t1591, 0, 0, t1630, t1627, t1568, -t1630, -t1564, t1798, t1754, t1760, t1845, t1846, t1496, t1403, t1474, -t1494, t1475, t1526, t1757, t1756, t1746, t1761, t1292, t1226, t1327, t1291, t1328, t1365, t1748, t1747, t1749, t1740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1593, -t1563, t1853, t1666, t1659, -t1666, 0, t1557, t1460, 0, t1497, t1405, t1476, t1495, t1477, t1527, t1344, t1348, t1232, -pkin(9) * t1251, t1294, t1228, t1329, t1293, t1330, t1366, t1163, t1169, t1106, t1103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1807, t1567, t1660, t1592, t1624, -t1807, -t1557, 0, t1461, 0, -t1582, -t1581, -t1508, t1582, t1504, -t1586, t1307, t1311, -pkin(4) * t1404, -pkin(4) * t1251, -t1513, -t1512, -t1379, t1513, t1376, -t1585, t1170, t1182, t1186, t1108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1630, t1627, t1568, -t1630, -t1564, t1798, -t1460, -t1461, 0, 0, t1496, t1403, t1474, -t1494, t1475, t1526, t1787, t1788, t1765, t1802, t1292, t1226, t1327, t1291, t1328, t1365, t1768, t1767, t1773, t1750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1505, t1854, t1606, t1598, -t1606, 0, t1420, t1337, 0, t1372, t1297, t1409, t1370, t1410, t1466, t1278, t1283, t1146, -pkin(10) * t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1607, t1507, t1599, -t1739, t1521, -t1607, -t1420, 0, t1338, 0, t1371, t1295, t1407, t1369, t1408, t1465, t1239, t1242, t1144, t1151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1582, t1581, t1508, -t1582, -t1504, t1586, -t1337, -t1338, 0, 0, t1513, t1512, t1379, -t1513, -t1376, t1585, t1753, t1741, t1842, t1843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1412, -t1375, t1856, t1543, t1538, -t1543, 0, t1342, t1222, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1817, t1855, t1539, t1411, t1457, -t1817, -t1342, 0, t1223, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1513, t1512, t1379, -t1513, -t1376, t1585, -t1222, -t1223, 0, 0;];
m_new_reg  = t1;
