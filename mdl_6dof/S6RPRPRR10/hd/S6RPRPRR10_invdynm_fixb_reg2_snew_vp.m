% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPRR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 20:04
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPRR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR10_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR10_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR10_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:04:00
% EndTime: 2019-05-05 20:04:28
% DurationCPUTime: 29.56s
% Computational Cost: add. (277265->870), mult. (590571->1120), div. (0->0), fcn. (406517->10), ass. (0->559)
t1386 = sin(pkin(10));
t1387 = cos(pkin(10));
t1394 = cos(qJ(3));
t1521 = qJD(1) * t1394;
t1346 = -t1387 * qJD(3) + t1386 * t1521;
t1348 = qJD(3) * t1386 + t1387 * t1521;
t1305 = t1348 * t1346;
t1474 = qJD(3) * t1521;
t1390 = sin(qJ(3));
t1484 = t1390 * qJDD(1);
t1353 = t1474 + t1484;
t1535 = -t1305 + t1353;
t1547 = t1386 * t1535;
t1546 = t1387 * t1535;
t1388 = sin(qJ(6));
t1389 = sin(qJ(5));
t1393 = cos(qJ(5));
t1295 = t1393 * t1346 + t1348 * t1389;
t1297 = -t1346 * t1389 + t1348 * t1393;
t1392 = cos(qJ(6));
t1242 = t1392 * t1295 + t1297 * t1388;
t1244 = -t1295 * t1388 + t1297 * t1392;
t1160 = t1244 * t1242;
t1349 = qJDD(5) + t1353;
t1342 = qJDD(6) + t1349;
t1538 = -t1160 + t1342;
t1545 = t1388 * t1538;
t1246 = t1297 * t1295;
t1537 = -t1246 + t1349;
t1544 = t1389 * t1537;
t1543 = t1392 * t1538;
t1542 = t1393 * t1537;
t1520 = qJD(2) * qJD(1);
t1381 = 0.2e1 * t1520;
t1391 = sin(qJ(1));
t1395 = cos(qJ(1));
t1364 = t1395 * g(1) + t1391 * g(2);
t1383 = qJDD(1) * qJ(2);
t1426 = t1364 - t1383;
t1378 = t1394 * qJDD(1);
t1379 = t1390 * qJD(1);
t1475 = qJD(3) * t1379;
t1354 = t1378 - t1475;
t1437 = -t1354 + t1475;
t1438 = t1353 + t1474;
t1397 = qJD(1) ^ 2;
t1533 = pkin(7) + pkin(1);
t1540 = t1397 * t1533;
t1258 = pkin(3) * t1438 + qJ(4) * t1437 + t1381 - t1426 - t1540;
t1363 = t1391 * g(1) - t1395 * g(2);
t1439 = qJDD(2) - t1363;
t1412 = -t1397 * qJ(2) + t1439;
t1325 = -qJDD(1) * t1533 + t1412;
t1304 = t1394 * g(3) - t1390 * t1325;
t1396 = qJD(3) ^ 2;
t1525 = qJ(4) * t1394;
t1529 = pkin(3) * t1390;
t1419 = t1397 * (-t1525 + t1529);
t1266 = -t1396 * pkin(3) + qJDD(3) * qJ(4) - t1390 * t1419 - t1304;
t1167 = 0.2e1 * qJD(4) * t1348 - t1387 * t1258 + t1386 * t1266;
t1168 = -0.2e1 * qJD(4) * t1346 + t1386 * t1258 + t1387 * t1266;
t1111 = -t1167 * t1387 + t1168 * t1386;
t1483 = pkin(3) * t1394 + pkin(2);
t1541 = t1111 * (qJ(4) * t1390 + t1483);
t1324 = qJDD(3) * t1386 + t1354 * t1387;
t1455 = -t1387 * qJDD(3) + t1354 * t1386;
t1458 = t1389 * t1324 + t1393 * t1455;
t1219 = -qJD(5) * t1297 - t1458;
t1220 = -t1295 * qJD(5) + t1393 * t1324 - t1389 * t1455;
t1135 = -qJD(6) * t1242 + t1219 * t1388 + t1220 * t1392;
t1373 = t1379 + qJD(5);
t1366 = qJD(6) + t1373;
t1223 = t1366 * t1242;
t1539 = t1135 - t1223;
t1112 = t1386 * t1167 + t1387 * t1168;
t1279 = t1373 * t1295;
t1536 = -t1279 + t1220;
t1189 = t1279 + t1220;
t1303 = t1390 * g(3) + t1394 * t1325;
t1256 = t1394 * t1303 - t1390 * t1304;
t1330 = t1346 * t1379;
t1287 = t1324 + t1330;
t1331 = t1348 * t1379;
t1285 = -t1455 + t1331;
t1216 = t1285 * t1386 - t1287 * t1387;
t1075 = -qJ(4) * t1216 - t1111;
t1534 = t1390 * t1075 - t1216 * t1483;
t1460 = -t1392 * t1219 + t1388 * t1220;
t1092 = (qJD(6) - t1366) * t1244 + t1460;
t1185 = (qJD(5) - t1373) * t1297 + t1458;
t1239 = t1242 ^ 2;
t1240 = t1244 ^ 2;
t1293 = t1295 ^ 2;
t1294 = t1297 ^ 2;
t1343 = t1346 ^ 2;
t1344 = t1348 ^ 2;
t1365 = t1366 ^ 2;
t1371 = t1373 ^ 2;
t1532 = pkin(2) * t1256;
t1400 = t1426 - 0.2e1 * t1520;
t1321 = t1400 + t1540;
t1531 = pkin(2) * t1321;
t1384 = t1390 ^ 2;
t1385 = t1394 ^ 2;
t1485 = t1384 + t1385;
t1356 = t1485 * qJDD(1);
t1530 = pkin(2) * t1356;
t1140 = pkin(4) * t1535 - pkin(8) * t1287 - t1167;
t1428 = pkin(4) * t1379 - pkin(8) * t1348;
t1146 = -t1343 * pkin(4) - pkin(8) * t1455 - t1379 * t1428 + t1168;
t1062 = -t1393 * t1140 + t1389 * t1146;
t1063 = t1389 * t1140 + t1393 * t1146;
t1011 = -t1062 * t1393 + t1063 * t1389;
t1528 = pkin(4) * t1011;
t1127 = -t1185 * t1389 - t1189 * t1393;
t1527 = pkin(4) * t1127;
t1526 = qJDD(1) * pkin(1);
t1037 = pkin(5) * t1537 - pkin(9) * t1189 - t1062;
t1442 = pkin(5) * t1373 - pkin(9) * t1297;
t1044 = -t1293 * pkin(5) + t1219 * pkin(9) - t1373 * t1442 + t1063;
t988 = -t1392 * t1037 + t1044 * t1388;
t989 = t1037 * t1388 + t1044 * t1392;
t947 = t1388 * t989 - t1392 * t988;
t1524 = t1389 * t947;
t1523 = t1393 * t947;
t1522 = qJD(1) * qJD(3);
t1519 = t1011 * t1386;
t1518 = t1011 * t1387;
t1265 = qJDD(3) * pkin(3) + t1396 * qJ(4) - t1394 * t1419 - qJDD(4) + t1303;
t1192 = -pkin(4) * t1455 + t1343 * pkin(8) - t1348 * t1428 + t1265;
t1103 = t1219 * pkin(5) + t1293 * pkin(9) - t1297 * t1442 + t1192;
t1517 = t1103 * t1388;
t1516 = t1103 * t1392;
t1152 = t1160 + t1342;
t1515 = t1152 * t1388;
t1514 = t1152 * t1392;
t1513 = t1192 * t1389;
t1512 = t1192 * t1393;
t1226 = t1246 + t1349;
t1511 = t1226 * t1389;
t1510 = t1226 * t1393;
t1289 = t1305 + t1353;
t1509 = t1289 * t1386;
t1508 = t1289 * t1387;
t1507 = t1353 * t1394;
t1506 = t1356 * t1391;
t1505 = t1356 * t1395;
t1372 = t1390 * t1397 * t1394;
t1361 = t1372 + qJDD(3);
t1504 = t1361 * t1390;
t1503 = t1361 * t1394;
t1362 = qJDD(3) - t1372;
t1502 = t1362 * t1390;
t1501 = t1362 * t1394;
t1500 = t1366 * t1244;
t1499 = t1366 * t1388;
t1498 = t1366 * t1392;
t1497 = t1373 * t1297;
t1496 = t1373 * t1389;
t1495 = t1373 * t1393;
t1494 = t1384 * t1397;
t1493 = t1385 * t1397;
t1261 = t1386 * t1265;
t1262 = t1387 * t1265;
t1490 = t1390 * t1321;
t1306 = t1394 * t1321;
t1487 = t1394 * t1075 + t1216 * t1529;
t1486 = pkin(3) * t1265 + qJ(4) * t1112;
t948 = t1388 * t988 + t1392 * t989;
t917 = t1389 * t948 + t1523;
t946 = pkin(5) * t947;
t1482 = pkin(4) * t917 + t946;
t1481 = t1390 * t1160;
t1480 = t1394 * t1160;
t1479 = t1390 * t1246;
t1478 = t1394 * t1246;
t1477 = t1390 * t1305;
t1476 = t1394 * t1305;
t1328 = -t1344 - t1494;
t1252 = -t1328 * t1386 - t1508;
t1286 = t1324 - t1330;
t1473 = -pkin(3) * t1286 + qJ(4) * t1252 - t1261;
t1298 = -t1494 - t1343;
t1236 = t1298 * t1387 - t1547;
t1284 = -t1331 - t1455;
t1472 = pkin(3) * t1284 + qJ(4) * t1236 + t1262;
t1095 = t1135 + t1223;
t1030 = -t1092 * t1388 - t1095 * t1392;
t1028 = pkin(5) * t1030;
t1032 = -t1092 * t1392 + t1095 * t1388;
t981 = t1030 * t1393 + t1032 * t1389;
t1471 = pkin(4) * t981 + t1028;
t918 = t1393 * t948 - t1524;
t937 = pkin(5) * t1103 + pkin(9) * t948;
t896 = pkin(4) * t1103 + pkin(8) * t918 - pkin(9) * t1524 + t1393 * t937;
t900 = -pkin(8) * t917 - pkin(9) * t1523 - t1389 * t937;
t903 = t1386 * t918 + t1387 * t917;
t884 = -qJ(4) * t903 - t1386 * t896 + t1387 * t900;
t888 = -pkin(3) * t903 - t1482;
t1470 = -t1390 * t888 + t1394 * t884;
t1137 = -t1239 - t1240;
t924 = -pkin(5) * t1137 + pkin(9) * t1032 + t948;
t927 = -pkin(9) * t1030 - t947;
t983 = -t1030 * t1389 + t1032 * t1393;
t907 = -pkin(4) * t1137 + pkin(8) * t983 + t1389 * t927 + t1393 * t924;
t909 = -pkin(8) * t981 - t1389 * t924 + t1393 * t927;
t940 = t1386 * t983 + t1387 * t981;
t887 = -qJ(4) * t940 - t1386 * t907 + t1387 * t909;
t919 = -pkin(3) * t940 - t1471;
t1469 = -t1390 * t919 + t1394 * t887;
t1091 = (qJD(6) + t1366) * t1244 + t1460;
t1156 = -t1365 - t1239;
t1101 = t1156 * t1392 - t1545;
t1004 = -pkin(5) * t1091 + pkin(9) * t1101 + t1516;
t1100 = t1156 * t1388 + t1543;
t1034 = -t1100 * t1389 + t1101 * t1393;
t1035 = -pkin(9) * t1100 - t1517;
t944 = -pkin(4) * t1091 + pkin(8) * t1034 + t1004 * t1393 + t1035 * t1389;
t1033 = t1100 * t1393 + t1101 * t1389;
t952 = -pkin(8) * t1033 - t1004 * t1389 + t1035 * t1393;
t985 = t1033 * t1387 + t1034 * t1386;
t912 = -qJ(4) * t985 - t1386 * t944 + t1387 * t952;
t1436 = pkin(5) * t1100 - t988;
t1413 = pkin(4) * t1033 + t1436;
t921 = -pkin(3) * t985 - t1413;
t1468 = -t1390 * t921 + t1394 * t912;
t1205 = -t1240 - t1365;
t1125 = -t1205 * t1388 - t1514;
t1009 = -pkin(5) * t1539 + pkin(9) * t1125 - t1517;
t1124 = t1205 * t1392 - t1515;
t1045 = -pkin(9) * t1124 - t1516;
t1047 = -t1124 * t1389 + t1125 * t1393;
t950 = -pkin(4) * t1539 + pkin(8) * t1047 + t1009 * t1393 + t1045 * t1389;
t1046 = t1124 * t1393 + t1125 * t1389;
t955 = -pkin(8) * t1046 - t1009 * t1389 + t1045 * t1393;
t995 = t1046 * t1387 + t1047 * t1386;
t914 = -qJ(4) * t995 - t1386 * t950 + t1387 * t955;
t1418 = pkin(5) * t1124 - t989;
t1398 = pkin(4) * t1046 + t1418;
t928 = -pkin(3) * t995 - t1398;
t1467 = -t1390 * t928 + t1394 * t914;
t1012 = t1062 * t1389 + t1393 * t1063;
t1006 = pkin(4) * t1192 + pkin(8) * t1012;
t960 = t1012 * t1386 + t1518;
t923 = -pkin(8) * t1518 - qJ(4) * t960 - t1006 * t1386;
t945 = -pkin(3) * t960 - t1528;
t1466 = -t1390 * t945 + t1394 * t923;
t1238 = -t1371 - t1293;
t1154 = t1238 * t1389 + t1542;
t1155 = t1238 * t1393 - t1544;
t1097 = t1154 * t1387 + t1155 * t1386;
t1425 = pkin(4) * t1154 - t1062;
t1010 = -pkin(3) * t1097 - t1425;
t1184 = (qJD(5) + t1373) * t1297 + t1458;
t1064 = -pkin(4) * t1184 + pkin(8) * t1155 + t1512;
t1105 = -pkin(8) * t1154 - t1513;
t998 = -qJ(4) * t1097 - t1064 * t1386 + t1105 * t1387;
t1465 = -t1390 * t1010 + t1394 * t998;
t1129 = -t1185 * t1393 + t1189 * t1389;
t1050 = t1127 * t1387 + t1129 * t1386;
t1016 = -pkin(3) * t1050 - t1527;
t1203 = -t1293 - t1294;
t991 = -pkin(4) * t1203 + pkin(8) * t1129 + t1012;
t993 = -pkin(8) * t1127 - t1011;
t936 = -qJ(4) * t1050 - t1386 * t991 + t1387 * t993;
t1464 = -t1390 * t1016 + t1394 * t936;
t1267 = -t1294 - t1371;
t1166 = -t1267 * t1389 - t1510;
t1072 = -pkin(4) * t1536 + pkin(8) * t1166 - t1513;
t1165 = t1267 * t1393 - t1511;
t1108 = t1165 * t1387 + t1166 * t1386;
t1122 = -pkin(8) * t1165 - t1512;
t1008 = -qJ(4) * t1108 - t1072 * t1386 + t1122 * t1387;
t1443 = pkin(4) * t1165 - t1063;
t1013 = -pkin(3) * t1108 - t1443;
t1463 = t1394 * t1008 - t1390 * t1013;
t1235 = t1298 * t1386 + t1546;
t1141 = -pkin(3) * t1235 + t1167;
t1164 = -qJ(4) * t1235 - t1261;
t1462 = -t1390 * t1141 + t1394 * t1164;
t1249 = t1328 * t1387 - t1509;
t1144 = -pkin(3) * t1249 + t1168;
t1193 = -qJ(4) * t1249 - t1262;
t1461 = -t1390 * t1144 + t1394 * t1193;
t1329 = t1397 * pkin(1) + t1400;
t1332 = -t1412 + t1526;
t1457 = -t1395 * t1329 - t1332 * t1391;
t1456 = -t1363 * t1391 - t1395 * t1364;
t904 = -t1386 * t917 + t1387 * t918;
t1454 = pkin(3) * t1103 + qJ(4) * t904 + t1386 * t900 + t1387 * t896;
t942 = -t1386 * t981 + t1387 * t983;
t1453 = -pkin(3) * t1137 + qJ(4) * t942 + t1386 * t909 + t1387 * t907;
t986 = -t1033 * t1386 + t1034 * t1387;
t1452 = -pkin(3) * t1091 + qJ(4) * t986 + t1386 * t952 + t1387 * t944;
t996 = -t1046 * t1386 + t1047 * t1387;
t1451 = -pkin(3) * t1539 + qJ(4) * t996 + t1386 * t955 + t1387 * t950;
t1052 = -t1127 * t1386 + t1129 * t1387;
t1450 = -pkin(3) * t1203 + qJ(4) * t1052 + t1386 * t993 + t1387 * t991;
t1449 = t1391 * t1372;
t1448 = t1395 * t1372;
t1098 = -t1154 * t1386 + t1155 * t1387;
t1447 = -pkin(3) * t1184 + qJ(4) * t1098 + t1387 * t1064 + t1386 * t1105;
t1109 = -t1165 * t1386 + t1166 * t1387;
t1446 = -pkin(3) * t1536 + qJ(4) * t1109 + t1387 * t1072 + t1386 * t1122;
t1218 = t1285 * t1387 + t1287 * t1386;
t1277 = t1343 + t1344;
t1445 = pkin(3) * t1277 + qJ(4) * t1218 + t1112;
t1086 = t1112 * t1390 + t1265 * t1394;
t1444 = -pkin(2) * t1086 - t1486;
t1357 = qJDD(1) * t1395 - t1391 * t1397;
t1441 = pkin(6) * t1357 + g(3) * t1391;
t1358 = qJDD(1) * t1391 + t1395 * t1397;
t1440 = -pkin(6) * t1358 + g(3) * t1395;
t1352 = 0.2e1 * t1474 + t1484;
t1435 = pkin(2) * t1352 - t1306;
t1355 = t1378 - 0.2e1 * t1475;
t1434 = pkin(2) * t1355 + t1490;
t1257 = -t1303 * t1390 - t1304 * t1394;
t1433 = t1329 * t1391 - t1332 * t1395;
t1432 = t1363 * t1395 - t1364 * t1391;
t1190 = t1236 * t1390 + t1284 * t1394;
t1430 = -pkin(2) * t1190 - t1472;
t1197 = t1252 * t1390 - t1286 * t1394;
t1429 = -pkin(2) * t1197 - t1473;
t1370 = -t1396 - t1493;
t1313 = t1370 * t1394 - t1504;
t1427 = -pkin(2) * t1313 - t1304;
t962 = -t1091 * t1394 + t1390 * t986;
t1424 = -pkin(2) * t962 - t1452;
t970 = t1390 * t996 - t1394 * t1539;
t1423 = -pkin(2) * t970 - t1451;
t897 = t1103 * t1394 + t1390 * t904;
t1422 = -pkin(2) * t897 - t1454;
t929 = -t1137 * t1394 + t1390 * t942;
t1421 = -pkin(2) * t929 - t1453;
t1038 = t1052 * t1390 - t1203 * t1394;
t1420 = -pkin(2) * t1038 - t1450;
t961 = t1012 * t1387 - t1519;
t1417 = pkin(3) * t1192 - pkin(8) * t1519 + qJ(4) * t961 + t1387 * t1006;
t1057 = t1098 * t1390 - t1184 * t1394;
t1416 = -pkin(2) * t1057 - t1447;
t1065 = t1109 * t1390 - t1394 * t1536;
t1415 = -pkin(2) * t1065 - t1446;
t1169 = t1218 * t1390 + t1277 * t1394;
t1414 = -pkin(2) * t1169 - t1445;
t1368 = -t1396 - t1494;
t1311 = t1368 * t1390 + t1501;
t1411 = -pkin(2) * t1311 - t1303;
t1410 = pkin(2) * t903 - t1390 * t884 - t1394 * t888;
t1409 = pkin(2) * t940 - t1390 * t887 - t1394 * t919;
t1408 = pkin(2) * t985 - t1390 * t912 - t1394 * t921;
t1407 = pkin(2) * t995 - t1390 * t914 - t1394 * t928;
t1406 = pkin(2) * t960 - t1390 * t923 - t1394 * t945;
t1405 = pkin(2) * t1097 - t1394 * t1010 - t1390 * t998;
t1404 = pkin(2) * t1050 - t1394 * t1016 - t1390 * t936;
t1403 = pkin(2) * t1108 - t1390 * t1008 - t1394 * t1013;
t1402 = pkin(2) * t1235 - t1394 * t1141 - t1390 * t1164;
t1401 = pkin(2) * t1249 - t1394 * t1144 - t1390 * t1193;
t957 = t1192 * t1394 + t1390 * t961;
t1399 = -pkin(2) * t957 - t1417;
t1369 = t1396 - t1493;
t1367 = -t1396 + t1494;
t1360 = (-t1384 + t1385) * t1397;
t1359 = t1485 * t1397;
t1350 = t1485 * t1522;
t1345 = t1439 - 0.2e1 * t1526;
t1341 = -t1364 + t1381 + 0.2e1 * t1383;
t1327 = -t1344 + t1494;
t1326 = t1343 - t1494;
t1323 = t1354 * t1390 + t1385 * t1522;
t1322 = t1384 * t1522 - t1507;
t1318 = -t1370 * t1390 - t1503;
t1317 = -t1369 * t1390 + t1501;
t1316 = t1437 * t1394;
t1315 = t1368 * t1394 - t1502;
t1314 = t1367 * t1394 - t1504;
t1312 = t1369 * t1394 + t1502;
t1310 = t1367 * t1390 + t1503;
t1309 = t1438 * t1390;
t1302 = t1344 - t1343;
t1301 = -t1352 * t1394 - t1355 * t1390;
t1300 = -t1352 * t1390 + t1355 * t1394;
t1282 = pkin(1) * t1332 - qJ(2) * t1329;
t1276 = (-t1346 * t1387 + t1348 * t1386) * t1379;
t1275 = (-t1346 * t1386 - t1348 * t1387) * t1379;
t1274 = -t1294 + t1371;
t1273 = t1293 - t1371;
t1271 = t1324 * t1387 - t1331 * t1386;
t1270 = t1324 * t1386 + t1331 * t1387;
t1269 = t1330 * t1387 + t1386 * t1455;
t1268 = -t1330 * t1386 + t1387 * t1455;
t1260 = t1276 * t1394 + t1353 * t1390;
t1259 = t1276 * t1390 - t1507;
t1253 = t1326 * t1387 - t1509;
t1251 = -t1327 * t1386 + t1546;
t1250 = t1326 * t1386 + t1508;
t1248 = t1327 * t1387 + t1547;
t1245 = t1294 - t1293;
t1241 = pkin(2) * t1359 + t1257;
t1234 = -qJ(2) * t1318 - t1427;
t1233 = -qJ(2) * t1315 - t1411;
t1232 = t1271 * t1394 + t1477;
t1231 = t1269 * t1394 - t1477;
t1230 = t1271 * t1390 - t1476;
t1229 = t1269 * t1390 + t1476;
t1222 = -t1240 + t1365;
t1221 = t1239 - t1365;
t1217 = t1284 * t1387 - t1286 * t1386;
t1215 = t1284 * t1386 + t1286 * t1387;
t1213 = (-t1295 * t1393 + t1297 * t1389) * t1373;
t1212 = (-t1295 * t1389 - t1297 * t1393) * t1373;
t1209 = -t1315 * t1533 + t1435;
t1208 = -t1318 * t1533 + t1434;
t1207 = qJ(2) * t1355 - t1313 * t1533 - t1306;
t1206 = qJ(2) * t1352 - t1311 * t1533 - t1490;
t1204 = -qJ(2) * t1359 + t1356 * t1533 - t1256;
t1201 = t1253 * t1394 + t1285 * t1390;
t1200 = t1252 * t1394 + t1286 * t1390;
t1199 = t1251 * t1394 + t1287 * t1390;
t1198 = t1253 * t1390 - t1285 * t1394;
t1196 = t1251 * t1390 - t1287 * t1394;
t1195 = t1217 * t1394 + t1302 * t1390;
t1194 = t1217 * t1390 - t1302 * t1394;
t1191 = t1236 * t1394 - t1284 * t1390;
t1179 = -qJ(2) * t1257 + t1532;
t1178 = t1273 * t1393 - t1511;
t1177 = -t1274 * t1389 + t1542;
t1176 = t1273 * t1389 + t1510;
t1175 = t1274 * t1393 + t1544;
t1174 = t1220 * t1393 - t1297 * t1496;
t1173 = t1220 * t1389 + t1297 * t1495;
t1172 = -t1219 * t1389 + t1295 * t1495;
t1171 = t1219 * t1393 + t1295 * t1496;
t1170 = t1218 * t1394 - t1277 * t1390;
t1159 = t1240 - t1239;
t1158 = -t1257 * t1533 - t1531;
t1157 = -qJ(2) * t1321 - t1256 * t1533;
t1150 = (-t1242 * t1392 + t1244 * t1388) * t1366;
t1149 = (-t1242 * t1388 - t1244 * t1392) * t1366;
t1148 = -t1212 * t1386 + t1213 * t1387;
t1147 = t1212 * t1387 + t1213 * t1386;
t1143 = t1148 * t1394 + t1349 * t1390;
t1142 = t1148 * t1390 - t1349 * t1394;
t1134 = -qJD(6) * t1244 - t1460;
t1133 = t1221 * t1392 - t1515;
t1132 = -t1222 * t1388 + t1543;
t1131 = t1221 * t1388 + t1514;
t1130 = t1222 * t1392 + t1545;
t1128 = -t1184 * t1393 - t1389 * t1536;
t1126 = -t1184 * t1389 + t1393 * t1536;
t1121 = -t1176 * t1386 + t1178 * t1387;
t1120 = -t1175 * t1386 + t1177 * t1387;
t1119 = t1176 * t1387 + t1178 * t1386;
t1118 = t1175 * t1387 + t1177 * t1386;
t1116 = -t1173 * t1386 + t1174 * t1387;
t1115 = -t1171 * t1386 + t1172 * t1387;
t1114 = t1173 * t1387 + t1174 * t1386;
t1113 = t1171 * t1387 + t1172 * t1386;
t1106 = t1111 * t1529;
t1087 = t1112 * t1394 - t1265 * t1390;
t1085 = t1135 * t1392 - t1244 * t1499;
t1084 = t1135 * t1388 + t1244 * t1498;
t1083 = -t1134 * t1388 + t1242 * t1498;
t1082 = t1134 * t1392 + t1242 * t1499;
t1081 = t1116 * t1394 + t1479;
t1080 = t1115 * t1394 - t1479;
t1079 = t1116 * t1390 - t1478;
t1078 = t1115 * t1390 + t1478;
t1077 = -t1149 * t1389 + t1150 * t1393;
t1076 = t1149 * t1393 + t1150 * t1389;
t1073 = -qJ(2) * t1200 - t1429;
t1070 = t1121 * t1394 - t1185 * t1390;
t1069 = t1120 * t1394 + t1189 * t1390;
t1068 = t1121 * t1390 + t1185 * t1394;
t1067 = t1120 * t1390 - t1189 * t1394;
t1066 = t1109 * t1394 + t1390 * t1536;
t1059 = -qJ(2) * t1191 - t1430;
t1058 = t1098 * t1394 + t1184 * t1390;
t1056 = -t1131 * t1389 + t1133 * t1393;
t1055 = -t1130 * t1389 + t1132 * t1393;
t1054 = t1131 * t1393 + t1133 * t1389;
t1053 = t1130 * t1393 + t1132 * t1389;
t1051 = -t1126 * t1386 + t1128 * t1387;
t1049 = t1126 * t1387 + t1128 * t1386;
t1043 = t1051 * t1394 + t1245 * t1390;
t1042 = t1051 * t1390 - t1245 * t1394;
t1041 = -t1200 * t1533 + t1401;
t1040 = qJ(2) * t1249 - t1197 * t1533 + t1461;
t1039 = t1052 * t1394 + t1203 * t1390;
t1031 = -t1091 * t1392 - t1388 * t1539;
t1029 = -t1091 * t1388 + t1392 * t1539;
t1027 = -qJ(2) * t1170 - t1414;
t1026 = -t1084 * t1389 + t1085 * t1393;
t1025 = -t1082 * t1389 + t1083 * t1393;
t1024 = t1084 * t1393 + t1085 * t1389;
t1023 = t1082 * t1393 + t1083 * t1389;
t1022 = -t1191 * t1533 + t1402;
t1021 = qJ(2) * t1235 - t1190 * t1533 + t1462;
t1020 = -t1076 * t1386 + t1077 * t1387;
t1019 = t1076 * t1387 + t1077 * t1386;
t1018 = t1020 * t1394 + t1342 * t1390;
t1017 = t1020 * t1390 - t1342 * t1394;
t1015 = -t1170 * t1533 - t1534;
t1014 = qJ(2) * t1216 - t1169 * t1533 + t1487;
t1003 = -qJ(2) * t1087 - t1444;
t1002 = -t1054 * t1386 + t1056 * t1387;
t1001 = -t1053 * t1386 + t1055 * t1387;
t1000 = t1054 * t1387 + t1056 * t1386;
t999 = t1053 * t1387 + t1055 * t1386;
t982 = -t1029 * t1389 + t1031 * t1393;
t980 = t1029 * t1393 + t1031 * t1389;
t979 = t1002 * t1394 - t1092 * t1390;
t978 = t1001 * t1394 + t1095 * t1390;
t977 = t1002 * t1390 + t1092 * t1394;
t976 = t1001 * t1390 - t1095 * t1394;
t975 = -t1024 * t1386 + t1026 * t1387;
t974 = -t1023 * t1386 + t1025 * t1387;
t973 = t1024 * t1387 + t1026 * t1386;
t972 = t1023 * t1387 + t1025 * t1386;
t971 = t1390 * t1539 + t1394 * t996;
t969 = -t1087 * t1533 + t1541;
t968 = t1106 + (qJ(2) - t1525) * t1111 - t1533 * t1086;
t967 = t1394 * t975 + t1481;
t966 = t1394 * t974 - t1481;
t965 = t1390 * t975 - t1480;
t964 = t1390 * t974 + t1480;
t963 = t1091 * t1390 + t1394 * t986;
t958 = -t1192 * t1390 + t1394 * t961;
t956 = -qJ(2) * t1066 - t1415;
t953 = -qJ(2) * t1058 - t1416;
t941 = -t1386 * t980 + t1387 * t982;
t939 = t1386 * t982 + t1387 * t980;
t934 = t1159 * t1390 + t1394 * t941;
t933 = -t1159 * t1394 + t1390 * t941;
t932 = -t1066 * t1533 + t1403;
t931 = qJ(2) * t1108 - t1065 * t1533 + t1463;
t930 = t1137 * t1390 + t1394 * t942;
t926 = -t1058 * t1533 + t1405;
t925 = qJ(2) * t1097 - t1057 * t1533 + t1465;
t920 = -qJ(2) * t1039 - t1420;
t916 = -t1039 * t1533 + t1404;
t915 = qJ(2) * t1050 - t1038 * t1533 + t1464;
t910 = -qJ(2) * t958 - t1399;
t905 = -qJ(2) * t971 - t1423;
t901 = -qJ(2) * t963 - t1424;
t898 = -t1103 * t1390 + t1394 * t904;
t894 = -t1533 * t958 + t1406;
t893 = qJ(2) * t960 - t1533 * t957 + t1466;
t892 = -t1533 * t971 + t1407;
t891 = qJ(2) * t995 - t1533 * t970 + t1467;
t890 = -t1533 * t963 + t1408;
t889 = qJ(2) * t985 - t1533 * t962 + t1468;
t885 = -qJ(2) * t930 - t1421;
t882 = -t1533 * t930 + t1409;
t881 = qJ(2) * t940 - t1533 * t929 + t1469;
t880 = -qJ(2) * t898 - t1422;
t879 = -t1533 * t898 + t1410;
t878 = qJ(2) * t903 - t1533 * t897 + t1470;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1357, 0, -t1358, 0, -t1441, -t1440, -t1432, -pkin(6) * t1432, 0, -t1357, t1358, 0, 0, 0, t1433, t1441, t1440, pkin(6) * t1433 + (-pkin(1) * t1391 + qJ(2) * t1395) * g(3), t1323 * t1391 + t1448, t1300 * t1391 + t1360 * t1395, t1312 * t1391 + t1378 * t1395, t1322 * t1391 - t1448, t1310 * t1391 - t1395 * t1484, qJDD(3) * t1395 - t1350 * t1391, t1395 * t1233 - t1391 * t1209 - pkin(6) * (-t1311 * t1395 + t1352 * t1391), t1395 * t1234 - t1391 * t1208 - pkin(6) * (-t1313 * t1395 + t1355 * t1391), -pkin(2) * t1505 + t1391 * t1241 - pkin(6) * (-t1359 * t1391 + t1505), t1395 * t1179 - t1391 * t1158 - pkin(6) * (-t1256 * t1395 - t1321 * t1391), t1230 * t1391 + t1270 * t1395, t1194 * t1391 + t1215 * t1395, t1196 * t1391 + t1248 * t1395, t1229 * t1391 - t1268 * t1395, t1198 * t1391 + t1250 * t1395, t1259 * t1391 + t1275 * t1395, t1395 * t1059 - t1391 * t1022 - pkin(6) * (-t1190 * t1395 + t1235 * t1391), t1395 * t1073 - t1391 * t1041 - pkin(6) * (-t1197 * t1395 + t1249 * t1391), t1395 * t1027 - t1391 * t1015 - pkin(6) * (-t1169 * t1395 + t1216 * t1391), t1395 * t1003 - t1391 * t969 - pkin(6) * (-t1086 * t1395 + t1111 * t1391), t1079 * t1391 + t1114 * t1395, t1042 * t1391 + t1049 * t1395, t1067 * t1391 + t1118 * t1395, t1078 * t1391 + t1113 * t1395, t1068 * t1391 + t1119 * t1395, t1142 * t1391 + t1147 * t1395, t1395 * t953 - t1391 * t926 - pkin(6) * (-t1057 * t1395 + t1097 * t1391), t1395 * t956 - t1391 * t932 - pkin(6) * (-t1065 * t1395 + t1108 * t1391), t1395 * t920 - t1391 * t916 - pkin(6) * (-t1038 * t1395 + t1050 * t1391), t1395 * t910 - t1391 * t894 - pkin(6) * (t1391 * t960 - t1395 * t957), t1391 * t965 + t1395 * t973, t1391 * t933 + t1395 * t939, t1391 * t976 + t1395 * t999, t1391 * t964 + t1395 * t972, t1000 * t1395 + t1391 * t977, t1017 * t1391 + t1019 * t1395, t1395 * t901 - t1391 * t890 - pkin(6) * (t1391 * t985 - t1395 * t962), t1395 * t905 - t1391 * t892 - pkin(6) * (t1391 * t995 - t1395 * t970), t1395 * t885 - t1391 * t882 - pkin(6) * (t1391 * t940 - t1395 * t929), t1395 * t880 - t1391 * t879 - pkin(6) * (t1391 * t903 - t1395 * t897); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1358, 0, t1357, 0, t1440, -t1441, t1456, pkin(6) * t1456, 0, -t1358, -t1357, 0, 0, 0, t1457, -t1440, t1441, pkin(6) * t1457 + (pkin(1) * t1395 + qJ(2) * t1391) * g(3), -t1323 * t1395 + t1449, -t1300 * t1395 + t1360 * t1391, -t1312 * t1395 + t1378 * t1391, -t1322 * t1395 - t1449, -t1310 * t1395 - t1391 * t1484, qJDD(3) * t1391 + t1350 * t1395, t1391 * t1233 + t1395 * t1209 + pkin(6) * (t1311 * t1391 + t1352 * t1395), t1391 * t1234 + t1395 * t1208 + pkin(6) * (t1313 * t1391 + t1355 * t1395), -pkin(2) * t1506 - t1395 * t1241 + pkin(6) * (-t1359 * t1395 - t1506), t1391 * t1179 + t1395 * t1158 + pkin(6) * (t1256 * t1391 - t1321 * t1395), -t1230 * t1395 + t1270 * t1391, -t1194 * t1395 + t1215 * t1391, -t1196 * t1395 + t1248 * t1391, -t1229 * t1395 - t1268 * t1391, -t1198 * t1395 + t1250 * t1391, -t1259 * t1395 + t1275 * t1391, t1391 * t1059 + t1395 * t1022 + pkin(6) * (t1190 * t1391 + t1235 * t1395), t1391 * t1073 + t1395 * t1041 + pkin(6) * (t1197 * t1391 + t1249 * t1395), t1391 * t1027 + t1395 * t1015 + pkin(6) * (t1169 * t1391 + t1216 * t1395), t1391 * t1003 + t1395 * t969 + pkin(6) * (t1086 * t1391 + t1111 * t1395), -t1079 * t1395 + t1114 * t1391, -t1042 * t1395 + t1049 * t1391, -t1067 * t1395 + t1118 * t1391, -t1078 * t1395 + t1113 * t1391, -t1068 * t1395 + t1119 * t1391, -t1142 * t1395 + t1147 * t1391, t1391 * t953 + t1395 * t926 + pkin(6) * (t1057 * t1391 + t1097 * t1395), t1391 * t956 + t1395 * t932 + pkin(6) * (t1065 * t1391 + t1108 * t1395), t1391 * t920 + t1395 * t916 + pkin(6) * (t1038 * t1391 + t1050 * t1395), t1391 * t910 + t1395 * t894 + pkin(6) * (t1391 * t957 + t1395 * t960), t1391 * t973 - t1395 * t965, t1391 * t939 - t1395 * t933, t1391 * t999 - t1395 * t976, t1391 * t972 - t1395 * t964, t1000 * t1391 - t1395 * t977, -t1017 * t1395 + t1019 * t1391, t1391 * t901 + t1395 * t890 + pkin(6) * (t1391 * t962 + t1395 * t985), t1391 * t905 + t1395 * t892 + pkin(6) * (t1391 * t970 + t1395 * t995), t1391 * t885 + t1395 * t882 + pkin(6) * (t1391 * t929 + t1395 * t940), t1391 * t880 + t1395 * t879 + pkin(6) * (t1391 * t897 + t1395 * t903); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1363, t1364, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1345, t1341, t1282, -t1316, t1301, t1317, t1309, t1314, 0, t1206, t1207, t1204, t1157, t1232, t1195, t1199, t1231, t1201, t1260, t1021, t1040, t1014, t968, t1081, t1043, t1069, t1080, t1070, t1143, t925, t931, t915, t893, t967, t934, t978, t966, t979, t1018, t889, t891, t881, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1397, 0, 0, -g(3), -t1363, 0, 0, -qJDD(1), t1397, 0, 0, 0, -t1332, 0, g(3), qJ(2) * g(3), t1372, t1360, t1378, -t1372, -t1484, qJDD(3), t1233, t1234, -t1530, t1179, t1270, t1215, t1248, -t1268, t1250, t1275, t1059, t1073, t1027, t1003, t1114, t1049, t1118, t1113, t1119, t1147, t953, t956, t920, t910, t973, t939, t999, t972, t1000, t1019, t901, t905, t885, t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1397, 0, qJDD(1), 0, g(3), 0, -t1364, 0, 0, -t1397, -qJDD(1), 0, 0, 0, -t1329, -g(3), 0, pkin(1) * g(3), -t1323, -t1300, -t1312, -t1322, -t1310, t1350, t1209, t1208, -t1241, t1158, -t1230, -t1194, -t1196, -t1229, -t1198, -t1259, t1022, t1041, t1015, t969, -t1079, -t1042, -t1067, -t1078, -t1068, -t1142, t926, t932, t916, t894, -t965, -t933, -t976, -t964, -t977, -t1017, t890, t892, t882, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1363, t1364, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1345, t1341, t1282, -t1316, t1301, t1317, t1309, t1314, 0, t1206, t1207, t1204, t1157, t1232, t1195, t1199, t1231, t1201, t1260, t1021, t1040, t1014, t968, t1081, t1043, t1069, t1080, t1070, t1143, t925, t931, t915, t893, t967, t934, t978, t966, t979, t1018, t889, t891, t881, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1332, -t1329, 0, -t1316, t1301, t1317, t1309, t1314, 0, -pkin(7) * t1311 - t1490, -pkin(7) * t1313 - t1306, pkin(7) * t1356 - t1256, -pkin(7) * t1256, t1232, t1195, t1199, t1231, t1201, t1260, -pkin(7) * t1190 + t1462, -pkin(7) * t1197 + t1461, -pkin(7) * t1169 + t1487, -pkin(7) * t1086 - t1111 * t1525 + t1106, t1081, t1043, t1069, t1080, t1070, t1143, -pkin(7) * t1057 + t1465, -pkin(7) * t1065 + t1463, -pkin(7) * t1038 + t1464, -pkin(7) * t957 + t1466, t967, t934, t978, t966, t979, t1018, -pkin(7) * t962 + t1468, -pkin(7) * t970 + t1467, -pkin(7) * t929 + t1469, -pkin(7) * t897 + t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1397, 0, 0, 0, t1332, 0, -g(3), 0, -t1372, -t1360, -t1378, t1372, t1484, -qJDD(3), t1411, t1427, t1530, -t1532, -t1270, -t1215, -t1248, t1268, -t1250, -t1275, t1430, t1429, t1414, t1444, -t1114, -t1049, -t1118, -t1113, -t1119, -t1147, t1416, t1415, t1420, t1399, -t973, -t939, -t999, -t972, -t1000, -t1019, t1424, t1423, t1421, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1397, qJDD(1), 0, 0, 0, t1329, g(3), 0, 0, t1323, t1300, t1312, t1322, t1310, -t1350, pkin(7) * t1315 - t1435, pkin(7) * t1318 - t1434, t1241, pkin(7) * t1257 + t1531, t1230, t1194, t1196, t1229, t1198, t1259, pkin(7) * t1191 - t1402, pkin(7) * t1200 - t1401, pkin(7) * t1170 + t1534, pkin(7) * t1087 - t1541, t1079, t1042, t1067, t1078, t1068, t1142, pkin(7) * t1058 - t1405, pkin(7) * t1066 - t1403, pkin(7) * t1039 - t1404, pkin(7) * t958 - t1406, t965, t933, t976, t964, t977, t1017, pkin(7) * t963 - t1408, pkin(7) * t971 - t1407, pkin(7) * t930 - t1409, pkin(7) * t898 - t1410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1354, -t1352, t1362, t1475, t1367, -t1475, 0, -t1321, -t1303, 0, t1271, t1217, t1251, t1269, t1253, t1276, t1164, t1193, t1075, -qJ(4) * t1111, t1116, t1051, t1120, t1115, t1121, t1148, t998, t1008, t936, t923, t975, t941, t1001, t974, t1002, t1020, t912, t914, t887, t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1474, t1355, t1369, -t1353, t1361, -t1474, t1321, 0, -t1304, 0, -t1305, -t1302, -t1287, t1305, -t1285, -t1353, t1141, t1144, -pkin(3) * t1216, -pkin(3) * t1111, -t1246, -t1245, -t1189, t1246, t1185, -t1349, t1010, t1013, t1016, t945, -t1160, -t1159, -t1095, t1160, t1092, -t1342, t921, t928, t919, t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, t1360, t1378, -t1372, -t1484, qJDD(3), t1303, t1304, 0, 0, t1270, t1215, t1248, -t1268, t1250, t1275, t1472, t1473, t1445, t1486, t1114, t1049, t1118, t1113, t1119, t1147, t1447, t1446, t1450, t1417, t973, t939, t999, t972, t1000, t1019, t1452, t1451, t1453, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1324, t1284, t1535, t1330, t1326, -t1330, 0, -t1265, t1167, 0, t1174, t1128, t1177, t1172, t1178, t1213, t1105, t1122, t993, -pkin(8) * t1011, t1026, t982, t1055, t1025, t1056, t1077, t952, t955, t909, t900; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1331, t1286, t1327, -t1455, t1289, -t1331, t1265, 0, t1168, 0, t1173, t1126, t1175, t1171, t1176, t1212, t1064, t1072, t991, t1006, t1024, t980, t1053, t1023, t1054, t1076, t944, t950, t907, t896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1305, t1302, t1287, -t1305, t1285, t1353, -t1167, -t1168, 0, 0, t1246, t1245, t1189, -t1246, -t1185, t1349, t1425, t1443, t1527, t1528, t1160, t1159, t1095, -t1160, -t1092, t1342, t1413, t1398, t1471, t1482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1220, -t1184, t1537, t1279, t1273, -t1279, 0, -t1192, t1062, 0, t1085, t1031, t1132, t1083, t1133, t1150, t1035, t1045, t927, -pkin(9) * t947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1497, t1536, t1274, t1219, t1226, -t1497, t1192, 0, t1063, 0, t1084, t1029, t1130, t1082, t1131, t1149, t1004, t1009, t924, t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1246, t1245, t1189, -t1246, -t1185, t1349, -t1062, -t1063, 0, 0, t1160, t1159, t1095, -t1160, -t1092, t1342, t1436, t1418, t1028, t946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1135, -t1091, t1538, t1223, t1221, -t1223, 0, -t1103, t988, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1500, t1539, t1222, t1134, t1152, -t1500, t1103, 0, t989, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1160, t1159, t1095, -t1160, -t1092, t1342, -t988, -t989, 0, 0;];
m_new_reg  = t1;
