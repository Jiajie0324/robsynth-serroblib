% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPRR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 20:04
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPRR10_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR10_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR10_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR10_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR10_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR10_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:04:28
% EndTime: 2019-05-05 20:04:33
% DurationCPUTime: 5.54s
% Computational Cost: add. (39455->298), mult. (84079->358), div. (0->0), fcn. (57564->10), ass. (0->206)
t1738 = sin(qJ(3));
t1727 = t1738 * qJD(1);
t1722 = t1727 + qJD(5);
t1719 = qJD(6) + t1722;
t1779 = qJD(6) + t1719;
t1742 = cos(qJ(3));
t1770 = qJD(1) * t1742;
t1723 = qJD(3) * t1770;
t1726 = t1738 * qJDD(1);
t1708 = t1726 + t1723;
t1734 = sin(pkin(10));
t1735 = cos(pkin(10));
t1704 = -t1735 * qJD(3) + t1734 * t1770;
t1706 = qJD(3) * t1734 + t1735 * t1770;
t1767 = t1704 * t1706;
t1675 = t1708 - t1767;
t1745 = qJD(1) ^ 2;
t1739 = sin(qJ(1));
t1743 = cos(qJ(1));
t1718 = -t1743 * g(1) - t1739 * g(2);
t1746 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1718;
t1771 = pkin(7) + pkin(1);
t1692 = t1771 * t1745 + t1746;
t1737 = sin(qJ(5));
t1741 = cos(qJ(5));
t1680 = t1741 * t1704 + t1706 * t1737;
t1682 = -t1704 * t1737 + t1706 * t1741;
t1736 = sin(qJ(6));
t1740 = cos(qJ(6));
t1655 = t1740 * t1680 + t1682 * t1736;
t1778 = t1655 ^ 2;
t1657 = -t1680 * t1736 + t1682 * t1740;
t1777 = t1657 ^ 2;
t1679 = t1680 ^ 2;
t1776 = t1682 ^ 2;
t1703 = t1704 ^ 2;
t1775 = t1706 ^ 2;
t1774 = t1719 ^ 2;
t1773 = t1722 ^ 2;
t1772 = -2 * qJD(4);
t1769 = t1655 * t1657;
t1768 = t1680 * t1682;
t1766 = t1722 * t1680;
t1732 = t1738 ^ 2;
t1765 = t1732 * t1745;
t1764 = qJD(5) - t1722;
t1763 = qJD(6) - t1719;
t1760 = qJD(3) * t1727;
t1761 = t1742 * qJDD(1);
t1709 = -t1760 + t1761;
t1664 = (-t1709 + t1760) * qJ(4) + (t1708 + t1723) * pkin(3) - t1692;
t1717 = t1739 * g(1) - t1743 * g(2);
t1747 = -t1745 * qJ(2) + qJDD(2) - t1717;
t1695 = -qJDD(1) * t1771 + t1747;
t1685 = -t1742 * g(3) + t1738 * t1695;
t1744 = qJD(3) ^ 2;
t1748 = t1745 * (pkin(3) * t1738 - qJ(4) * t1742);
t1667 = -t1744 * pkin(3) + qJDD(3) * qJ(4) - t1738 * t1748 + t1685;
t1628 = t1735 * t1664 - t1734 * t1667 + t1706 * t1772;
t1694 = qJDD(3) * t1734 + t1709 * t1735;
t1759 = t1704 * t1727;
t1674 = -t1694 - t1759;
t1618 = pkin(4) * t1675 + t1674 * pkin(8) + t1628;
t1629 = t1734 * t1664 + t1735 * t1667 + t1704 * t1772;
t1693 = t1735 * qJDD(3) - t1709 * t1734;
t1749 = pkin(4) * t1727 - pkin(8) * t1706;
t1620 = -t1703 * pkin(4) + t1693 * pkin(8) - t1727 * t1749 + t1629;
t1593 = t1737 * t1618 + t1741 * t1620;
t1733 = t1742 ^ 2;
t1762 = t1732 + t1733;
t1758 = t1706 * t1727;
t1757 = t1738 * t1742 * t1745;
t1756 = qJDD(5) + t1708;
t1592 = t1741 * t1618 - t1737 * t1620;
t1754 = -t1741 * t1693 + t1737 * t1694;
t1646 = -qJD(5) * t1682 - t1754;
t1750 = -t1737 * t1693 - t1741 * t1694;
t1647 = -qJD(5) * t1680 - t1750;
t1755 = t1740 * t1646 - t1736 * t1647;
t1753 = -qJDD(6) - t1756;
t1752 = pkin(5) * t1722 - pkin(9) * t1682;
t1684 = g(3) * t1738 + t1695 * t1742;
t1751 = -t1736 * t1646 - t1740 * t1647;
t1649 = t1756 - t1768;
t1666 = qJDD(3) * pkin(3) + qJ(4) * t1744 - t1742 * t1748 - qJDD(4) + t1684;
t1638 = pkin(4) * t1693 + pkin(8) * t1703 - t1706 * t1749 + t1666;
t1721 = -t1733 * t1745 - t1744;
t1720 = -t1744 - t1765;
t1716 = -qJDD(3) - t1757;
t1715 = qJDD(3) - t1757;
t1714 = t1762 * t1745;
t1713 = qJDD(1) * t1739 + t1743 * t1745;
t1712 = qJDD(1) * t1743 - t1739 * t1745;
t1711 = t1762 * qJDD(1);
t1710 = -0.2e1 * t1760 + t1761;
t1707 = t1726 + 0.2e1 * t1723;
t1698 = qJDD(1) * pkin(1) - t1747;
t1697 = t1745 * pkin(1) + t1746;
t1696 = -t1765 - t1775;
t1690 = t1716 * t1742 - t1721 * t1738;
t1689 = -t1715 * t1738 + t1720 * t1742;
t1688 = t1716 * t1738 + t1721 * t1742;
t1687 = t1715 * t1742 + t1720 * t1738;
t1683 = -t1765 - t1703;
t1676 = -t1708 - t1767;
t1673 = t1694 - t1759;
t1672 = t1693 + t1758;
t1671 = -t1693 + t1758;
t1669 = -t1703 - t1775;
t1668 = -t1773 - t1776;
t1663 = -t1684 * t1738 + t1685 * t1742;
t1662 = t1684 * t1742 + t1685 * t1738;
t1659 = t1676 * t1735 - t1696 * t1734;
t1658 = t1676 * t1734 + t1696 * t1735;
t1654 = -t1773 - t1679;
t1652 = -t1675 * t1734 + t1683 * t1735;
t1651 = t1675 * t1735 + t1683 * t1734;
t1650 = -t1756 - t1768;
t1645 = t1672 * t1735 - t1674 * t1734;
t1644 = t1672 * t1734 + t1674 * t1735;
t1642 = -t1774 - t1777;
t1641 = -t1679 - t1776;
t1640 = t1659 * t1742 + t1673 * t1738;
t1639 = t1659 * t1738 - t1673 * t1742;
t1637 = t1652 * t1742 + t1671 * t1738;
t1636 = t1652 * t1738 - t1671 * t1742;
t1635 = t1680 * t1764 + t1750;
t1634 = t1647 - t1766;
t1633 = -t1682 * t1764 - t1754;
t1632 = (qJD(5) + t1722) * t1682 + t1754;
t1631 = t1645 * t1742 + t1669 * t1738;
t1630 = t1645 * t1738 - t1669 * t1742;
t1627 = t1650 * t1741 - t1668 * t1737;
t1626 = t1650 * t1737 + t1668 * t1741;
t1625 = -t1774 - t1778;
t1624 = -t1649 * t1737 + t1654 * t1741;
t1623 = t1649 * t1741 + t1654 * t1737;
t1622 = t1753 - t1769;
t1621 = -t1753 - t1769;
t1615 = -t1777 - t1778;
t1614 = t1633 * t1741 - t1635 * t1737;
t1613 = t1633 * t1737 + t1635 * t1741;
t1612 = t1622 * t1740 - t1642 * t1736;
t1611 = t1622 * t1736 + t1642 * t1740;
t1610 = -t1628 * t1734 + t1629 * t1735;
t1609 = t1628 * t1735 + t1629 * t1734;
t1608 = -t1626 * t1734 + t1627 * t1735;
t1607 = t1626 * t1735 + t1627 * t1734;
t1606 = pkin(5) * t1646 + pkin(9) * t1679 - t1682 * t1752 + t1638;
t1605 = -t1621 * t1736 + t1625 * t1740;
t1604 = t1621 * t1740 + t1625 * t1736;
t1603 = -t1623 * t1734 + t1624 * t1735;
t1602 = t1623 * t1735 + t1624 * t1734;
t1601 = t1655 * t1763 + t1751;
t1600 = -t1655 * t1779 - t1751;
t1599 = -t1657 * t1763 + t1755;
t1598 = t1657 * t1779 - t1755;
t1597 = t1610 * t1742 - t1666 * t1738;
t1596 = t1610 * t1738 + t1666 * t1742;
t1595 = t1608 * t1742 + t1634 * t1738;
t1594 = t1608 * t1738 - t1634 * t1742;
t1591 = t1603 * t1742 + t1632 * t1738;
t1590 = t1603 * t1738 - t1632 * t1742;
t1589 = -t1613 * t1734 + t1614 * t1735;
t1588 = t1613 * t1735 + t1614 * t1734;
t1587 = -t1611 * t1737 + t1612 * t1741;
t1586 = t1611 * t1741 + t1612 * t1737;
t1585 = -t1679 * pkin(5) + t1646 * pkin(9) - t1722 * t1752 + t1593;
t1584 = t1589 * t1742 + t1641 * t1738;
t1583 = t1589 * t1738 - t1641 * t1742;
t1582 = (-t1647 - t1766) * pkin(9) + t1649 * pkin(5) + t1592;
t1581 = -t1604 * t1737 + t1605 * t1741;
t1580 = t1604 * t1741 + t1605 * t1737;
t1579 = t1599 * t1740 - t1601 * t1736;
t1578 = t1599 * t1736 + t1601 * t1740;
t1577 = -t1592 * t1737 + t1593 * t1741;
t1576 = t1592 * t1741 + t1593 * t1737;
t1575 = -t1586 * t1734 + t1587 * t1735;
t1574 = t1586 * t1735 + t1587 * t1734;
t1573 = t1582 * t1736 + t1585 * t1740;
t1572 = t1582 * t1740 - t1585 * t1736;
t1571 = -t1580 * t1734 + t1581 * t1735;
t1570 = t1580 * t1735 + t1581 * t1734;
t1569 = -t1578 * t1737 + t1579 * t1741;
t1568 = t1578 * t1741 + t1579 * t1737;
t1567 = t1575 * t1742 + t1600 * t1738;
t1566 = t1575 * t1738 - t1600 * t1742;
t1565 = t1571 * t1742 + t1598 * t1738;
t1564 = t1571 * t1738 - t1598 * t1742;
t1563 = -t1576 * t1734 + t1577 * t1735;
t1562 = t1576 * t1735 + t1577 * t1734;
t1561 = t1563 * t1742 - t1638 * t1738;
t1560 = t1563 * t1738 + t1638 * t1742;
t1559 = -t1572 * t1736 + t1573 * t1740;
t1558 = t1572 * t1740 + t1573 * t1736;
t1557 = -t1568 * t1734 + t1569 * t1735;
t1556 = t1568 * t1735 + t1569 * t1734;
t1555 = t1557 * t1742 + t1615 * t1738;
t1554 = t1557 * t1738 - t1615 * t1742;
t1553 = -t1558 * t1737 + t1559 * t1741;
t1552 = t1558 * t1741 + t1559 * t1737;
t1551 = -t1552 * t1734 + t1553 * t1735;
t1550 = t1552 * t1735 + t1553 * t1734;
t1549 = t1551 * t1742 - t1606 * t1738;
t1548 = t1551 * t1738 + t1606 * t1742;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1713, -t1712, 0, -t1717 * t1739 + t1718 * t1743, 0, 0, 0, 0, 0, 0, 0, t1713, t1712, -t1697 * t1743 - t1698 * t1739, 0, 0, 0, 0, 0, 0, t1687 * t1739 + t1707 * t1743, t1688 * t1739 + t1710 * t1743, -t1711 * t1739 - t1714 * t1743, t1662 * t1739 - t1692 * t1743, 0, 0, 0, 0, 0, 0, t1636 * t1739 + t1651 * t1743, t1639 * t1739 + t1658 * t1743, t1630 * t1739 + t1644 * t1743, t1596 * t1739 + t1609 * t1743, 0, 0, 0, 0, 0, 0, t1590 * t1739 + t1602 * t1743, t1594 * t1739 + t1607 * t1743, t1583 * t1739 + t1588 * t1743, t1560 * t1739 + t1562 * t1743, 0, 0, 0, 0, 0, 0, t1564 * t1739 + t1570 * t1743, t1566 * t1739 + t1574 * t1743, t1554 * t1739 + t1556 * t1743, t1548 * t1739 + t1550 * t1743; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1712, -t1713, 0, t1717 * t1743 + t1718 * t1739, 0, 0, 0, 0, 0, 0, 0, -t1712, t1713, -t1697 * t1739 + t1698 * t1743, 0, 0, 0, 0, 0, 0, -t1687 * t1743 + t1707 * t1739, -t1688 * t1743 + t1710 * t1739, t1711 * t1743 - t1714 * t1739, -t1662 * t1743 - t1692 * t1739, 0, 0, 0, 0, 0, 0, -t1636 * t1743 + t1651 * t1739, -t1639 * t1743 + t1658 * t1739, -t1630 * t1743 + t1644 * t1739, -t1596 * t1743 + t1609 * t1739, 0, 0, 0, 0, 0, 0, -t1590 * t1743 + t1602 * t1739, -t1594 * t1743 + t1607 * t1739, -t1583 * t1743 + t1588 * t1739, -t1560 * t1743 + t1562 * t1739, 0, 0, 0, 0, 0, 0, -t1564 * t1743 + t1570 * t1739, -t1566 * t1743 + t1574 * t1739, -t1554 * t1743 + t1556 * t1739, -t1548 * t1743 + t1550 * t1739; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1689, t1690, 0, t1663, 0, 0, 0, 0, 0, 0, t1637, t1640, t1631, t1597, 0, 0, 0, 0, 0, 0, t1591, t1595, t1584, t1561, 0, 0, 0, 0, 0, 0, t1565, t1567, t1555, t1549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1745, -qJDD(1), 0, t1718, 0, 0, 0, 0, 0, 0, 0, t1745, qJDD(1), -t1697, 0, 0, 0, 0, 0, 0, t1707, t1710, -t1714, -t1692, 0, 0, 0, 0, 0, 0, t1651, t1658, t1644, t1609, 0, 0, 0, 0, 0, 0, t1602, t1607, t1588, t1562, 0, 0, 0, 0, 0, 0, t1570, t1574, t1556, t1550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1745, 0, t1717, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1745, t1698, 0, 0, 0, 0, 0, 0, -t1687, -t1688, t1711, -t1662, 0, 0, 0, 0, 0, 0, -t1636, -t1639, -t1630, -t1596, 0, 0, 0, 0, 0, 0, -t1590, -t1594, -t1583, -t1560, 0, 0, 0, 0, 0, 0, -t1564, -t1566, -t1554, -t1548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1689, t1690, 0, t1663, 0, 0, 0, 0, 0, 0, t1637, t1640, t1631, t1597, 0, 0, 0, 0, 0, 0, t1591, t1595, t1584, t1561, 0, 0, 0, 0, 0, 0, t1565, t1567, t1555, t1549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1689, t1690, 0, t1663, 0, 0, 0, 0, 0, 0, t1637, t1640, t1631, t1597, 0, 0, 0, 0, 0, 0, t1591, t1595, t1584, t1561, 0, 0, 0, 0, 0, 0, t1565, t1567, t1555, t1549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1745, -qJDD(1), t1697, 0, 0, 0, 0, 0, 0, -t1707, -t1710, t1714, t1692, 0, 0, 0, 0, 0, 0, -t1651, -t1658, -t1644, -t1609, 0, 0, 0, 0, 0, 0, -t1602, -t1607, -t1588, -t1562, 0, 0, 0, 0, 0, 0, -t1570, -t1574, -t1556, -t1550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1745, -t1698, 0, 0, 0, 0, 0, 0, t1687, t1688, -t1711, t1662, 0, 0, 0, 0, 0, 0, t1636, t1639, t1630, t1596, 0, 0, 0, 0, 0, 0, t1590, t1594, t1583, t1560, 0, 0, 0, 0, 0, 0, t1564, t1566, t1554, t1548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1720, t1716, -t1726, t1685, 0, 0, 0, 0, 0, 0, t1652, t1659, t1645, t1610, 0, 0, 0, 0, 0, 0, t1603, t1608, t1589, t1563, 0, 0, 0, 0, 0, 0, t1571, t1575, t1557, t1551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1715, t1721, -t1761, t1684, 0, 0, 0, 0, 0, 0, -t1671, -t1673, -t1669, t1666, 0, 0, 0, 0, 0, 0, -t1632, -t1634, -t1641, t1638, 0, 0, 0, 0, 0, 0, -t1598, -t1600, -t1615, t1606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1707, t1710, -t1714, -t1692, 0, 0, 0, 0, 0, 0, t1651, t1658, t1644, t1609, 0, 0, 0, 0, 0, 0, t1602, t1607, t1588, t1562, 0, 0, 0, 0, 0, 0, t1570, t1574, t1556, t1550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1683, t1676, t1672, t1629, 0, 0, 0, 0, 0, 0, t1624, t1627, t1614, t1577, 0, 0, 0, 0, 0, 0, t1581, t1587, t1569, t1553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1675, t1696, t1674, t1628, 0, 0, 0, 0, 0, 0, t1623, t1626, t1613, t1576, 0, 0, 0, 0, 0, 0, t1580, t1586, t1568, t1552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1671, t1673, t1669, -t1666, 0, 0, 0, 0, 0, 0, t1632, t1634, t1641, -t1638, 0, 0, 0, 0, 0, 0, t1598, t1600, t1615, -t1606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1654, t1650, t1633, t1593, 0, 0, 0, 0, 0, 0, t1605, t1612, t1579, t1559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1649, t1668, t1635, t1592, 0, 0, 0, 0, 0, 0, t1604, t1611, t1578, t1558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1632, t1634, t1641, -t1638, 0, 0, 0, 0, 0, 0, t1598, t1600, t1615, -t1606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1625, t1622, t1599, t1573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1621, t1642, t1601, t1572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1598, t1600, t1615, -t1606;];
f_new_reg  = t1;
