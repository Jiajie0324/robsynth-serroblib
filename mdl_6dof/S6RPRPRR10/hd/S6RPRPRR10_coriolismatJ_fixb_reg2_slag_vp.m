% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR10_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR10_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR10_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR10_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:09:27
% EndTime: 2019-03-09 04:10:05
% DurationCPUTime: 29.50s
% Computational Cost: add. (26148->858), mult. (52606->1123), div. (0->0), fcn. (57876->8), ass. (0->619)
t672 = sin(qJ(3));
t1005 = t672 / 0.2e1;
t1001 = cos(qJ(5));
t670 = cos(pkin(10));
t654 = t1001 * t670;
t669 = sin(pkin(10));
t999 = sin(qJ(5));
t834 = t999 * t669;
t615 = t834 - t654;
t655 = -pkin(4) * t670 - pkin(3);
t581 = pkin(5) * t615 + t655;
t1018 = -t581 / 0.2e1;
t673 = cos(qJ(3));
t674 = -pkin(1) - pkin(7);
t929 = t673 * t674;
t949 = t669 * t673;
t610 = pkin(4) * t949 - t929;
t833 = t999 * t670;
t843 = t1001 * t669;
t617 = t843 + t833;
t930 = t673 * t617;
t522 = pkin(5) * t930 + t610;
t1019 = -t522 / 0.2e1;
t1000 = cos(qJ(6));
t990 = pkin(8) + qJ(4);
t809 = t990 * t670;
t810 = t990 * t669;
t543 = t1001 * t810 + t809 * t999;
t454 = -t617 * pkin(9) - t543;
t544 = t1001 * t809 - t810 * t999;
t455 = -t615 * pkin(9) + t544;
t671 = sin(qJ(6));
t259 = t1000 * t454 - t455 * t671;
t577 = t1000 * t930;
t633 = t673 * t834;
t589 = t654 * t673 - t633;
t939 = t671 * t589;
t443 = t577 + t939;
t604 = t1000 * t615;
t937 = t671 * t617;
t505 = t604 + t937;
t694 = t1005 * t259 - t1018 * t443 - t1019 * t505;
t631 = pkin(3) * t673 + qJ(4) * t672;
t622 = t670 * t631;
t806 = -t669 * t674 + pkin(4);
t948 = t670 * t672;
t503 = pkin(8) * t948 + t673 * t806 + t622;
t496 = t999 * t503;
t634 = t670 * t929;
t574 = t631 * t669 + t634;
t950 = t669 * t672;
t535 = pkin(8) * t950 + t574;
t523 = t1001 * t535;
t342 = t523 + t496;
t585 = t617 * t672;
t263 = pkin(9) * t585 + t342;
t839 = t1000 * t263;
t795 = -t839 / 0.2e1;
t497 = t1001 * t503;
t835 = t999 * t535;
t341 = -t835 + t497;
t632 = t672 * t834;
t588 = t654 * t672 - t632;
t992 = t673 * pkin(5);
t246 = pkin(9) * t588 + t341 + t992;
t947 = t671 * t246;
t712 = -t947 / 0.2e1 + t795;
t44 = t694 + t712;
t1092 = qJD(5) + qJD(6);
t994 = t672 * pkin(3);
t718 = -t673 * t990 + qJ(2) + t994;
t681 = t670 * t718 + t672 * t806;
t661 = t672 * t674;
t844 = t670 * t661;
t682 = t669 * t718 + t844;
t339 = -t1001 * t681 + t682 * t999;
t255 = -t589 * pkin(9) - t339;
t993 = t672 * pkin(5);
t678 = t255 + t993;
t222 = t1000 * t678;
t340 = t1001 * t682 + t681 * t999;
t256 = -pkin(9) * t930 + t340;
t945 = t671 * t256;
t123 = -t222 + t945;
t841 = t1000 * t255;
t130 = t841 - t945;
t1091 = t123 + t130;
t677 = t671 * t678;
t840 = t1000 * t256;
t124 = t840 + t677;
t946 = t671 * t255;
t129 = -t840 - t946;
t1090 = t124 + t129;
t972 = t443 ^ 2;
t578 = t1000 * t589;
t941 = t671 * t930;
t1047 = t578 - t941;
t973 = t1047 ^ 2;
t1078 = t972 - t973;
t1089 = qJD(1) * t1078;
t1062 = t673 * t505;
t563 = -t578 / 0.2e1;
t798 = t563 + t941 / 0.2e1;
t1073 = -t1062 / 0.2e1 + t798;
t1088 = qJD(2) * t1073;
t605 = t1000 * t617;
t938 = t671 * t615;
t1046 = t605 - t938;
t1054 = t673 * t1046;
t791 = -t577 / 0.2e1 - t939 / 0.2e1;
t1074 = t1054 / 0.2e1 + t791;
t1087 = qJD(2) * t1074;
t1072 = t1062 / 0.2e1 + t798;
t1086 = qJD(3) * t1072;
t1085 = qJD(3) * t1073;
t1084 = qJD(3) * t1074;
t1075 = -t1054 / 0.2e1 + t791;
t1083 = qJD(3) * t1075;
t968 = t505 ^ 2;
t969 = t1046 ^ 2;
t1079 = t968 - t969;
t1082 = qJD(3) * t1079;
t1040 = -t259 / 0.2e1;
t837 = t1000 * t585;
t940 = t671 * t588;
t441 = t837 + t940;
t1080 = t441 / 0.2e1;
t1006 = -t672 / 0.2e1;
t688 = t671 * t454;
t838 = t1000 * t455;
t260 = t838 + t688;
t1077 = t1006 * t260;
t1066 = t1046 / 0.2e1;
t1076 = t443 * t1066;
t1071 = t1092 * t259;
t836 = t1000 * t588;
t942 = t671 * t585;
t447 = t836 - t942;
t1069 = -t447 / 0.2e1;
t1068 = -t505 / 0.2e1;
t1017 = t930 / 0.2e1;
t1067 = -t1046 / 0.2e1;
t1065 = -t1047 / 0.2e1;
t856 = t672 * qJD(1);
t1064 = t443 * t856;
t898 = qJD(1) * t1047;
t830 = t443 * t898;
t892 = qJD(3) * t1046;
t824 = t505 * t892;
t1063 = t522 * t443;
t925 = t1092 * t505;
t757 = t892 + t898;
t893 = qJD(3) * t505;
t899 = qJD(1) * t443;
t1061 = t893 + t899;
t886 = qJD(4) * t443;
t1060 = qJD(4) * t505;
t1059 = qJD(5) * t443;
t1058 = qJD(6) * t443;
t970 = t1047 * t505;
t1057 = t1047 * t522;
t411 = t1047 * t856;
t966 = t1046 * t443;
t160 = -t966 / 0.2e1 - t970 / 0.2e1;
t1056 = t160 * qJD(6);
t952 = t617 * t930;
t955 = t589 * t615;
t363 = -t952 / 0.2e1 - t955 / 0.2e1;
t1055 = t363 * qJD(5);
t1053 = -qJD(1) * t160 + t824;
t890 = qJD(3) * t617;
t1052 = -qJD(1) * t363 + t615 * t890;
t1051 = -qJD(3) * t160 + t830;
t894 = qJD(1) * t589;
t1050 = qJD(3) * t363 - t894 * t930;
t814 = -t688 / 0.2e1;
t663 = t669 ^ 2;
t664 = t670 ^ 2;
t641 = t664 + t663;
t668 = t673 ^ 2;
t648 = t672 ^ 2 - t668;
t842 = t1000 * t246;
t944 = t671 * t263;
t131 = t842 - t944;
t132 = t839 + t947;
t17 = -t1047 * t131 - t123 * t447 + t124 * t441 - t132 * t443;
t1045 = t17 * qJD(1);
t1032 = -t443 / 0.2e1;
t64 = t1032 * t441 + t1047 * t1069 - t1065 * t447 + t1080 * t443;
t1044 = t64 * qJD(5);
t1043 = t589 ^ 2;
t1042 = t617 ^ 2;
t1041 = t123 / 0.2e1;
t1039 = -t260 / 0.2e1;
t1036 = -t441 / 0.2e1;
t1030 = t447 / 0.2e1;
t1027 = t1047 / 0.2e1;
t1023 = t505 / 0.2e1;
t794 = t578 / 0.2e1;
t1016 = -t589 / 0.2e1;
t1015 = t589 / 0.2e1;
t598 = -t605 / 0.2e1;
t793 = t605 / 0.2e1;
t1014 = -t615 / 0.2e1;
t1013 = t615 / 0.2e1;
t1012 = -t617 / 0.2e1;
t1011 = t617 / 0.2e1;
t1010 = t633 / 0.2e1;
t1009 = t654 / 0.2e1;
t1008 = t661 / 0.2e1;
t1007 = t671 / 0.2e1;
t1004 = -t673 / 0.2e1;
t1003 = t673 / 0.2e1;
t739 = 0.2e1 * t1066 * t1047;
t742 = (t1023 - t1068) * t443;
t73 = t739 + t742;
t1002 = t73 * qJD(4);
t998 = t585 * pkin(5);
t997 = t589 * pkin(5);
t996 = t617 * pkin(5);
t995 = t671 * pkin(5);
t991 = qJD(5) / 0.2e1;
t104 = -t1046 * t1047 + t443 * t505;
t74 = -t739 + t742;
t987 = qJD(5) * t74 + qJD(6) * t104;
t986 = pkin(5) * qJD(5);
t143 = -t1030 * t443 + t1047 * t1080;
t985 = t143 * qJD(4);
t951 = t617 * t589;
t961 = t930 * t615;
t364 = t951 + t961;
t984 = t364 * qJD(4);
t956 = t589 * t585;
t959 = t588 * t930;
t336 = -t959 / 0.2e1 + t956 / 0.2e1;
t983 = t336 * qJD(4);
t65 = t129 * t672 + t443 * t997 + t1057;
t982 = qJD(1) * t65;
t66 = -t1047 * t997 + t130 * t672 + t1063;
t981 = qJD(1) * t66;
t87 = -t123 * t672 + t1063;
t980 = qJD(1) * t87;
t88 = -t124 * t672 + t1057;
t979 = qJD(1) * t88;
t851 = pkin(4) * t950;
t609 = t661 - t851;
t521 = t609 - t998;
t18 = -t123 * t131 + t124 * t132 + t521 * t522;
t977 = t18 * qJD(1);
t19 = -t123 * t129 + t124 * t130 + t522 * t997;
t976 = t19 * qJD(1);
t42 = t1046 * t124 + t123 * t505;
t974 = t42 * qJD(1);
t971 = t443 * t673;
t967 = t505 * t672;
t965 = t1046 * t672;
t789 = -qJ(4) * t673 + t994;
t748 = qJ(2) + t789;
t549 = -t661 * t669 + t670 * t748;
t964 = t549 * t673;
t550 = t669 * t748 + t844;
t963 = t550 * t673;
t962 = t585 * t672;
t960 = t930 * t673;
t958 = t588 * t615;
t957 = t588 * t672;
t60 = -t339 * t588 + t340 * t585 - t341 * t589 - t342 * t930;
t954 = t60 * qJD(1);
t953 = t617 * t585;
t936 = t673 * t1047;
t931 = t673 * t589;
t660 = t673 * t672;
t75 = -t339 * t341 + t340 * t342 + t609 * t610;
t928 = t75 * qJD(1);
t157 = t970 / 0.2e1 + t1076;
t927 = qJD(5) * t157 - t1056;
t159 = t1047 * t1068 - t1076;
t926 = qJD(5) * t159 + t1056;
t562 = -t836 / 0.2e1;
t924 = t942 / 0.2e1 + t562;
t128 = (t1036 + t1080) * t673;
t923 = qJD(1) * t128;
t922 = qJD(1) * t143;
t785 = t966 - t970;
t921 = qJD(1) * t785;
t746 = t1004 * t1047 - t1005 * t447;
t790 = -t604 / 0.2e1 - t937 / 0.2e1;
t191 = -t746 + t790;
t920 = qJD(1) * t191;
t740 = t447 * t1006 - t936 / 0.2e1;
t192 = -t740 + t790;
t919 = qJD(1) * t192;
t744 = t441 * t1006 - t971 / 0.2e1;
t797 = t598 + t938 / 0.2e1;
t193 = t744 + t797;
t918 = qJD(1) * t193;
t743 = -t1003 * t443 - t1005 * t441;
t194 = t743 + t797;
t917 = qJD(1) * t194;
t207 = -t339 * t672 + t610 * t930;
t916 = qJD(1) * t207;
t208 = -t340 * t672 + t589 * t610;
t915 = qJD(1) * t208;
t237 = (t1030 + t1069) * t673;
t914 = qJD(1) * t237;
t242 = t441 * t672 - t971;
t913 = qJD(1) * t242;
t243 = -t447 * t672 + t936;
t912 = qJD(1) * t243;
t555 = -t940 / 0.2e1;
t816 = t1046 * t1005;
t286 = t555 - t837 / 0.2e1 + t816;
t911 = qJD(1) * t286;
t556 = t940 / 0.2e1;
t852 = t556 + t837 / 0.2e1;
t287 = t816 + t852;
t910 = qJD(1) * t287;
t288 = t965 / 0.2e1 + t852;
t909 = qJD(1) * t288;
t291 = t967 / 0.2e1 + t924;
t908 = qJD(1) * t291;
t815 = t505 * t1005;
t299 = -t815 + t924;
t907 = qJD(1) * t299;
t300 = -t815 + t836 / 0.2e1 - t942 / 0.2e1;
t906 = qJD(1) * t300;
t905 = qJD(1) * t336;
t365 = -t952 + t955;
t904 = qJD(1) * t365;
t379 = t549 * t670 + t550 * t669;
t371 = t379 * t673;
t903 = qJD(1) * t371;
t813 = -t931 / 0.2e1;
t734 = -t957 / 0.2e1 + t813;
t749 = t1009 - t834 / 0.2e1;
t374 = -t734 + t749;
t902 = qJD(1) * t374;
t701 = -t833 / 0.2e1 - t843 / 0.2e1;
t736 = t962 / 0.2e1 + t960 / 0.2e1;
t375 = t701 - t736;
t901 = qJD(1) * t375;
t900 = qJD(1) * t379;
t450 = -t960 + t962;
t897 = qJD(1) * t450;
t451 = t931 - t957;
t896 = qJD(1) * t451;
t895 = qJD(1) * t930;
t891 = qJD(3) * t581;
t889 = qJD(3) * t655;
t888 = qJD(3) * t670;
t887 = qJD(4) * t1047;
t885 = qJD(4) * t930;
t884 = qJD(4) * t589;
t883 = qJD(5) * t1047;
t882 = qJD(5) * t1046;
t881 = qJD(5) * t589;
t880 = qJD(5) * t617;
t879 = qJD(5) * t672;
t500 = t793 + t598;
t878 = qJD(6) * t500;
t876 = qJD(6) * t1046;
t875 = qJD(6) * t581;
t115 = -t339 * t673 + t341 * t672 - t585 * t610 + t609 * t930;
t874 = t115 * qJD(1);
t116 = t340 * t673 + t342 * t672 + t588 * t610 - t589 * t609;
t873 = t116 * qJD(1);
t148 = t1047 * t441 + t443 * t447;
t872 = t148 * qJD(1);
t149 = t339 * t615 + t340 * t617;
t871 = t149 * qJD(1);
t845 = t669 * t929;
t573 = t622 - t845;
t205 = -t549 * t948 - t550 * t950 + (t573 * t670 + t574 * t669) * t673;
t870 = t205 * qJD(1);
t338 = t956 + t959;
t869 = t338 * qJD(1);
t366 = t964 + (t573 + 0.2e1 * t845) * t672;
t868 = t366 * qJD(1);
t367 = t963 + (t574 - 0.2e1 * t634) * t672;
t867 = t367 * qJD(1);
t488 = (t1011 - t701) * t672;
t866 = t488 * qJD(1);
t689 = t1011 + t701;
t489 = t689 * t672;
t865 = t489 * qJD(1);
t494 = -t632 / 0.2e1 + (t1014 + t1009) * t672;
t864 = t494 * qJD(1);
t796 = -t654 / 0.2e1;
t495 = t615 * t1006 + t672 * t796 + t632 / 0.2e1;
t863 = t495 * qJD(1);
t613 = t641 * t668;
t862 = t613 * qJD(1);
t614 = t641 * t673;
t861 = t614 * qJD(1);
t607 = t615 * qJD(5);
t619 = t648 * t669;
t860 = t619 * qJD(1);
t620 = t648 * t670;
t859 = t620 * qJD(1);
t858 = t641 * qJD(3);
t857 = t648 * qJD(1);
t855 = t672 * qJD(3);
t854 = t673 * qJD(1);
t853 = t673 * qJD(3);
t850 = -t1000 / 0.2e1;
t849 = t1000 / 0.2e1;
t848 = t997 / 0.2e1;
t847 = t996 / 0.2e1;
t846 = -t993 / 0.2e1;
t832 = qJ(2) * t856;
t831 = qJ(2) * t854;
t829 = t505 * t856;
t828 = t1046 * t856;
t826 = t615 * t856;
t825 = t617 * t856;
t822 = t669 * t888;
t821 = t617 * t607;
t820 = t669 * t855;
t819 = t669 * t856;
t818 = t670 * t855;
t817 = t670 * t856;
t650 = t672 * t853;
t649 = t672 * t854;
t812 = -t930 / 0.2e1;
t811 = -t496 / 0.2e1 - t523 / 0.2e1;
t808 = t1000 * qJD(5);
t807 = t1000 * qJD(6);
t805 = 0.2e1 * t670 * t949;
t572 = t589 * t856;
t804 = qJD(3) * t488 + t572;
t803 = qJD(5) + t856;
t802 = -qJD(6) - t856;
t801 = qJD(4) * t673 - qJD(2);
t800 = qJD(4) + t889;
t799 = t670 * t649;
t792 = t673 * t849;
t140 = t1047 * t447 + t441 * t443 - t660;
t680 = t1004 * t521 + t1005 * t522 + t1027 * t124 + t1030 * t132 + t1036 * t131 + t1041 * t443;
t747 = t1067 * t260 - t1068 * t259;
t8 = t680 + t747;
t788 = qJD(1) * t8 + qJD(2) * t140;
t16 = -t1047 * t1090 - t1091 * t443;
t787 = t16 * qJD(1) + t64 * qJD(2);
t786 = qJD(1) * t64;
t784 = -t573 * t669 + t574 * t670;
t686 = t1069 * t1091 + t1080 * t1090;
t713 = t1007 * t1046 + t505 * t850;
t11 = (t931 / 0.2e1 + t713) * pkin(5) + t686;
t783 = t11 * qJD(1);
t25 = -t123 * t673 + t131 * t672 - t441 * t522 + t443 * t521;
t782 = qJD(1) * t25 + qJD(2) * t128;
t41 = t1047 * t123 - t124 * t443;
t781 = -qJD(1) * t41 - qJD(2) * t143;
t26 = -t1047 * t521 + t124 * t673 + t132 * t672 + t447 * t522;
t780 = -qJD(1) * t26 - qJD(2) * t237;
t302 = t585 * t930 + t588 * t589 - t660;
t679 = t339 * t1017 + t340 * t1015 - t341 * t585 / 0.2e1 + t342 * t588 / 0.2e1 + t609 * t1004 + t610 * t1005;
t738 = t1011 * t544 + t1013 * t543;
t39 = -t679 + t738;
t779 = -qJD(1) * t39 + qJD(2) * t302;
t135 = t814 + t688 / 0.2e1;
t675 = -t677 / 0.2e1 + t671 * t846;
t52 = t946 / 0.2e1 + t675;
t778 = t52 * qJD(1) - t135 * qJD(3);
t144 = t972 + t973;
t777 = qJD(1) * t144 + qJD(3) * t73;
t776 = qJD(3) * t74 + t1089;
t186 = t968 + t969;
t775 = qJD(1) * t73 + qJD(3) * t186;
t774 = qJD(1) * t74 + t1082;
t773 = t1008 - t851 / 0.2e1;
t139 = t339 * t589 - t340 * t930;
t772 = -qJD(1) * t139 - qJD(2) * t336;
t691 = t1006 * t544 + t1011 * t610 + t1015 * t655;
t750 = t497 / 0.2e1 - t835 / 0.2e1;
t162 = -t691 + t750;
t490 = t689 * t673;
t771 = t162 * qJD(1) + t490 * qJD(2);
t692 = t1006 * t543 + t1013 * t610 + t1017 * t655;
t163 = t692 + t811;
t491 = t1010 + (t796 + t1014) * t673;
t770 = t163 * qJD(1) + t491 * qJD(2);
t200 = -t672 * t929 + (t574 * t1005 + t963 / 0.2e1) * t670 + (t573 * t1006 - t964 / 0.2e1) * t669;
t212 = -t660 * t674 ^ 2 + t549 * t573 + t550 * t574;
t769 = t212 * qJD(1) + t200 * qJD(2);
t547 = t614 * t672 - t660;
t768 = t200 * qJD(1) + t547 * qJD(2);
t767 = qJD(3) * t104 + t1089;
t766 = qJD(1) * t104 + t1082;
t716 = -t1007 * t443 + t1047 * t850;
t203 = (t1016 + t716) * pkin(5);
t714 = -t1007 * t505 + t1046 * t850;
t253 = (t1012 + t714) * pkin(5);
t765 = qJD(1) * t203 + qJD(3) * t253;
t225 = -t951 + t961;
t582 = t930 ^ 2;
t378 = t582 - t1043;
t764 = qJD(1) * t378 + qJD(3) * t225;
t608 = t615 ^ 2;
t457 = t608 - t1042;
t763 = qJD(1) * t225 + qJD(3) * t457;
t357 = 0.2e1 * t794 - t941;
t386 = 0.2e1 * t793 - t938;
t761 = qJD(1) * t357 + qJD(3) * t386;
t463 = t582 + t1043;
t760 = qJD(1) * t463 + qJD(3) * t364;
t540 = t608 + t1042;
t759 = qJD(1) * t364 + qJD(3) * t540;
t435 = t794 + t563;
t758 = qJD(1) * t435 + qJD(3) * t500;
t755 = -qJD(3) * t615 - t895;
t754 = t890 + t894;
t753 = qJD(6) * t386 + t882;
t752 = -qJD(6) * t1047 - t883;
t751 = -t1058 - t1059;
t745 = t1023 * t447 + t1067 * t441;
t737 = t549 * t669 / 0.2e1 - t550 * t670 / 0.2e1;
t735 = t958 / 0.2e1 - t953 / 0.2e1;
t733 = qJD(3) * t157 + t1047 * t899;
t732 = qJD(1) * t157 + t1046 * t893;
t729 = qJD(3) * t159 - t830;
t728 = qJD(1) * t159 - t824;
t721 = qJD(3) * t489 + t572 + t881;
t720 = qJD(3) * t287 - qJD(6) * t435 + t411;
t719 = -t222 / 0.2e1 + t1000 * t846;
t717 = t1007 * t132 + t131 * t849;
t715 = t1007 * t1047 + t443 * t850;
t711 = -t944 / 0.2e1 + t842 / 0.2e1;
t687 = t130 * t1039 + t1040 * t1090 - t260 * t1041;
t1 = (t1012 * t522 + t1016 * t581 + t717) * pkin(5) + t687;
t23 = (t1017 + t715) * pkin(5);
t51 = t581 * t996;
t710 = -t1 * qJD(1) - t23 * qJD(2) + t51 * qJD(3);
t676 = -t1032 * t259 + t1040 * t443 + t1067 * t1090 + t1068 * t1091;
t700 = (t1080 * t671 - t447 * t850) * pkin(5);
t3 = t700 - t676;
t709 = t3 * qJD(1);
t151 = t1005 + t745;
t685 = t1023 * t124 - t1039 * t443 - t1065 * t259 + t1067 * t123;
t702 = -t998 / 0.2e1 + t773;
t21 = t685 + t702;
t89 = -t1046 * t259 - t260 * t505;
t708 = qJD(1) * t21 + qJD(2) * t151 - qJD(3) * t89;
t432 = t556 + t555;
t54 = t841 / 0.2e1 + t719;
t707 = -t54 * qJD(1) - t432 * qJD(2);
t209 = -t1046 * t581 - t505 * t996;
t696 = t1018 * t1047 + t1019 * t1046 - t1077;
t30 = (t1012 * t443 + t1016 * t505 + t792) * pkin(5) + t696 + t711;
t706 = qJD(1) * t30 + qJD(3) * t209 + t1087;
t210 = -t1046 * t996 + t505 * t581;
t29 = (t1004 * t671 + t1012 * t1047 + t1016 * t1046) * pkin(5) + t44;
t705 = qJD(1) * t29 + qJD(3) * t210 + t1088;
t285 = t543 * t617 - t544 * t615;
t343 = t1005 + t735;
t684 = t1012 * t339 + t1013 * t340 + t1016 * t543 + t1017 * t544;
t85 = t684 + t773;
t704 = qJD(1) * t85 + qJD(2) * t343 - qJD(3) * t285;
t368 = t1008 + t737;
t593 = (0.1e1 / 0.2e1 - t664 / 0.2e1 - t663 / 0.2e1) * t672;
t624 = t641 * qJ(4);
t703 = qJD(1) * t368 + qJD(2) * t593 - qJD(3) * t624;
t693 = t1027 * t581 + t1066 * t522 + t1077;
t43 = -t693 + t711;
t699 = qJD(1) * t43 - t1046 * t891 + t1087;
t698 = qJD(1) * t44 + t505 * t891 + t1088;
t697 = qJD(3) * t286 + qJD(6) * t357 + t411 + t883;
t690 = qJD(3) * t789 - qJD(4) * t672;
t666 = qJ(2) * qJD(2);
t665 = qJD(1) * qJ(2);
t659 = -t854 / 0.2e1;
t658 = t854 / 0.2e1;
t657 = t853 / 0.2e1;
t611 = t673 * t991 + t649;
t594 = (0.1e1 + t641) * t1005;
t583 = t649 + (t991 + qJD(6) / 0.2e1) * t673;
t493 = t673 * t701 + t812;
t492 = t1003 * t615 + t673 * t796 + t1010;
t377 = t734 + t749;
t376 = t701 + t736;
t370 = -qJD(3) * t494 + t856 * t930;
t369 = t1008 - t737;
t356 = 0.2e1 * t562 + t942;
t354 = 0.2e1 * t556 + t837;
t344 = t1005 - t735;
t301 = -t965 / 0.2e1 + t852;
t298 = -t967 / 0.2e1 + t924;
t284 = t495 * qJD(3) - t803 * t930;
t254 = pkin(5) * t714 + t847;
t226 = t237 * qJD(3);
t219 = t225 * qJD(5);
t204 = pkin(5) * t716 + t848;
t199 = t200 * qJD(3);
t198 = t740 + t790;
t197 = -t743 + t797;
t196 = -t744 + t797;
t195 = t746 + t790;
t165 = t691 + t750;
t164 = -t692 + t811;
t152 = t1005 - t745;
t141 = -qJD(3) * t300 + t1064;
t138 = -t838 + 0.2e1 * t814;
t126 = t128 * qJD(3);
t90 = t299 * qJD(3) - t443 * t803 - t1058;
t86 = -t684 + t773;
t55 = t945 - t841 / 0.2e1 + t719;
t53 = -t840 - t946 / 0.2e1 + t675;
t46 = t693 + t711;
t45 = -t694 + t712;
t40 = t679 + t738;
t32 = t1047 * t847 + t1046 * t848 + t795 + (-t992 / 0.2e1 - t246 / 0.2e1) * t671 - t694;
t31 = pkin(5) * t792 + t443 * t847 + t505 * t848 - t696 + t711;
t24 = (t715 + t812) * pkin(5);
t22 = -t685 + t702;
t12 = -t686 + (t713 + t813) * pkin(5);
t7 = t680 - t747;
t4 = t700 + t676;
t2 = pkin(5) * t717 + t522 * t847 + t581 * t848 - t687;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t666, -t650, t648 * qJD(3), 0, t650, 0, 0, qJ(2) * t853 + qJD(2) * t672, -qJ(2) * t855 + qJD(2) * t673, 0, t666, -t664 * t650, t805 * t855, -t620 * qJD(3), -t663 * t650, t619 * qJD(3), t650, t366 * qJD(3) - t801 * t948, -t367 * qJD(3) + t801 * t950, -qJD(2) * t614 - qJD(3) * t205 + qJD(4) * t613, qJD(2) * t379 + qJD(3) * t212 - qJD(4) * t371 (-qJD(3) * t588 - qJD(5) * t930) * t589, qJD(3) * t338 + qJD(5) * t378, qJD(3) * t451 - t879 * t930 (-qJD(3) * t585 + t881) * t930, qJD(3) * t450 - t589 * t879, t650, t115 * qJD(3) + t208 * qJD(5) + (-qJD(2) * t615 - t884) * t672, -t116 * qJD(3) - t207 * qJD(5) + (-qJD(2) * t617 + t885) * t672, qJD(2) * t365 + qJD(3) * t60 + qJD(4) * t463, qJD(2) * t149 + qJD(3) * t75 + qJD(4) * t139 (-qJD(3) * t447 + t751) * t1047, qJD(3) * t148 + t1078 * t1092, t243 * qJD(3) + t672 * t751 (-qJD(3) * t441 - t752) * t443, t242 * qJD(3) + t672 * t752, t650, t25 * qJD(3) + t65 * qJD(5) + t88 * qJD(6) + (-qJD(2) * t505 - t887) * t672, -t26 * qJD(3) - t66 * qJD(5) - t87 * qJD(6) + (-qJD(2) * t1046 + t886) * t672, -qJD(2) * t785 + qJD(3) * t17 + qJD(4) * t144 + qJD(5) * t16, qJD(2) * t42 + qJD(3) * t18 + qJD(4) * t41 + qJD(5) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t665, 0, 0, 0, 0, 0, 0, t856, t854, 0, t665, 0, 0, 0, 0, 0, 0, t817, -t819, -t861, t199 + t900, 0, 0, 0, 0, 0, 0, qJD(5) * t377 - t826, qJD(5) * t376 - t825, t904, t871 + (t585 * t615 + t588 * t617) * qJD(2) + t40 * qJD(3) + t983, 0, 0, 0, 0, 0, 0, qJD(5) * t195 + qJD(6) * t198 + t126 - t829, qJD(5) * t197 + qJD(6) * t196 - t226 - t828, t1044 - t921, t974 + (t1046 * t447 + t441 * t505) * qJD(2) + t7 * qJD(3) + t12 * qJD(5) + t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t649, t857, -t855, t649, -t853, 0, -t674 * t855 + t831, -t674 * t853 - t832, 0, 0 (-t664 * t854 - t822) * t672 (qJD(1) * t805 + (t663 - t664) * qJD(3)) * t672, t669 * t853 - t859 (-t663 * t854 + t822) * t672, t670 * t853 + t860, t649, t669 * t690 - t674 * t818 + t868, t670 * t690 + t674 * t820 - t867, qJD(3) * t784 - t870 (-pkin(3) * t661 + qJ(4) * t784) * qJD(3) + t369 * qJD(4) + t769, -t588 * t754 + t1055, t869 + (t953 + t958) * qJD(3) + t219, qJD(5) * t495 + t617 * t853 + t896, t585 * t755 - t1055, -qJD(5) * t489 - t615 * t853 + t897, t611, t874 + (-t543 * t673 - t585 * t655 + t609 * t615) * qJD(3) - t488 * qJD(4) + t165 * qJD(5), -t873 + (-t544 * t673 - t588 * t655 + t609 * t617) * qJD(3) - t494 * qJD(4) + t164 * qJD(5), t954 + (-t341 * t617 - t342 * t615 - t543 * t588 + t544 * t585) * qJD(3) + t984, t928 + t40 * qJD(2) + (-t341 * t543 + t342 * t544 + t609 * t655) * qJD(3) + t86 * qJD(4), -t447 * t757 + t926, t872 + (t1046 * t441 + t447 * t505) * qJD(3) + t987, qJD(5) * t299 + qJD(6) * t298 + t1046 * t853 + t912, -t1061 * t441 + t927, -qJD(5) * t286 + qJD(6) * t301 - t505 * t853 + t913, t583 (t259 * t673 - t441 * t581 + t505 * t521) * qJD(3) - t287 * qJD(4) + t31 * qJD(5) + t46 * qJD(6) + t782 (t1046 * t521 - t260 * t673 - t447 * t581) * qJD(3) - t300 * qJD(4) + t32 * qJD(5) + t45 * qJD(6) + t780 (-t1046 * t131 - t132 * t505 + t447 * t259 + t260 * t441) * qJD(3) + t4 * qJD(5) + t1002 + t1045, t977 + t7 * qJD(2) + (t131 * t259 + t132 * t260 + t521 * t581) * qJD(3) + t22 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(3) * t669 - t670 * t854) * t672 (t669 * t854 - t888) * t672, t862, qJD(3) * t369 - t903, 0, 0, 0, 0, 0, 0, -t804, t370, t760, qJD(3) * t86 - t772, 0, 0, 0, 0, 0, 0, -t720, t141, t777, qJD(3) * t22 + qJD(5) * t204 - t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1050, t764, t284, -t1050, -t721, t657, qJD(2) * t377 + qJD(3) * t165 - qJD(5) * t340 + t915, qJD(2) * t376 + qJD(3) * t164 + qJD(5) * t339 - t916, 0, 0, t729, t776, t90, t733, -t697, t657, qJD(2) * t195 + qJD(3) * t31 + qJD(5) * t129 + qJD(6) * t53 + t982, qJD(2) * t197 + qJD(3) * t32 - qJD(5) * t130 + qJD(6) * t55 - t981, t4 * qJD(3) + (t1000 * t443 - t1047 * t671) * t986 + t787, t976 + t12 * qJD(2) + t2 * qJD(3) + t204 * qJD(4) + (t1000 * t129 + t130 * t671) * t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1051, t767, t298 * qJD(3) + t443 * t802 - t1059, t1051, t301 * qJD(3) - t357 * qJD(5) + t1047 * t802, t657, qJD(2) * t198 + qJD(3) * t46 + qJD(4) * t435 + qJD(5) * t53 - qJD(6) * t124 + t979, qJD(2) * t196 + qJD(3) * t45 + qJD(5) * t55 + qJD(6) * t123 - t980, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t665, 0, 0, 0, 0, 0, 0, -t856, -t854, 0, -t665, 0, 0, 0, 0, 0, 0, -t817, t819, t861, t199 - t900, 0, 0, 0, 0, 0, 0, -qJD(5) * t374 + t826, -qJD(5) * t375 + t825, -t904, -qJD(3) * t39 - t871 + t983, 0, 0, 0, 0, 0, 0, -qJD(5) * t191 - qJD(6) * t192 + t126 + t829, -qJD(5) * t194 - qJD(6) * t193 - t226 + t828, t1044 + t921, qJD(3) * t8 - qJD(5) * t11 - t974 + t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t302, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t855, -t853, 0, 0, 0, 0, 0, 0, 0, 0, -t818, t820, t614 * qJD(3) (qJ(4) * t614 - t994) * qJD(3) + t594 * qJD(4) + t768, 0, 0, 0, 0, 0, 0, qJD(5) * t493 + t615 * t855, qJD(5) * t492 + t617 * t855, -qJD(3) * t365 (t543 * t930 + t544 * t589 + t655 * t672) * qJD(3) + t344 * qJD(4) + t779, 0, 0, 0, 0, 0, 0, t1075 * t1092 + t505 * t855 + t923, t1046 * t855 + t1072 * t1092 - t914, qJD(3) * t785 (t1047 * t260 - t259 * t443 + t581 * t672) * qJD(3) + t152 * qJD(4) + t24 * qJD(5) + t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t594 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t344 + t905, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t152 + t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t493 - qJD(5) * t588 - t902, qJD(3) * t492 + qJD(5) * t585 - t901, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t447 + qJD(6) * t356 + t1083 - t920, qJD(5) * t441 + qJD(6) * t354 + t1086 - t917, t786, t24 * qJD(3) + (-t1000 * t447 - t441 * t671) * t986 - t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t356 - qJD(6) * t447 + t1083 - t919, qJD(5) * t354 + qJD(6) * t441 + t1086 - t918, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, -t857, 0, -t649, 0, 0, -t831, t832, 0, 0, t664 * t649, -0.2e1 * t669 * t799, t859, t663 * t649, -t860, -t649, -t868, t867, t870, -qJD(4) * t368 - t769, t588 * t894 + t1055, t219 - t869, qJD(5) * t494 - t896, t585 * t895 - t1055, -qJD(5) * t488 - t897, -t611, -qJD(4) * t489 - qJD(5) * t162 - t874, -qJD(4) * t495 - qJD(5) * t163 + t873, -t954 + t984, qJD(2) * t39 - qJD(4) * t85 - t928, t447 * t898 + t926, -t872 + t987, qJD(5) * t300 - qJD(6) * t291 - t912, t441 * t899 + t927, -qJD(5) * t287 - qJD(6) * t288 - t913, -t583, -qJD(4) * t286 - qJD(5) * t30 - qJD(6) * t43 - t782, -qJD(4) * t299 - qJD(5) * t29 - qJD(6) * t44 - t780, -qJD(5) * t3 + t1002 - t1045, -qJD(2) * t8 - qJD(4) * t21 - qJD(5) * t1 - t977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t593 - t768, 0, 0, 0, 0, 0, 0, -qJD(5) * t490, -qJD(5) * t491, 0, -qJD(4) * t343 - t779, 0, 0, 0, 0, 0, 0, -t1074 * t1092 - t923, -t1073 * t1092 + t914, 0, -qJD(4) * t151 - qJD(5) * t23 - t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t641 * qJD(4), t624 * qJD(4), -t821, t457 * qJD(5), 0, t821, 0, 0, t655 * t880, -t655 * t607, qJD(4) * t540, qJD(4) * t285, -t925 * t1046, t1092 * t1079, 0 (t876 + t882) * t505, 0, 0, -qJD(5) * t209 + t1046 * t875, -qJD(5) * t210 - t505 * t875, qJD(4) * t186, qJD(4) * t89 + qJD(5) * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, -t703, 0, 0, 0, 0, 0, 0, -t865, -t863, t759, -t704, 0, 0, 0, 0, 0, 0, t878 - t911, -t907, t775, qJD(5) * t254 - t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1052, t763, -t607 + t864, t1052, -t866 - t880, t659, -qJD(5) * t544 + t617 * t889 - t771, qJD(5) * t543 - t615 * t889 - t770, 0, 0, t728, t774, t906 - t925, t732, -t753 - t910, t659, -qJD(5) * t260 + qJD(6) * t138 - t706, -t1071 - t705 (t1000 * t505 - t1046 * t671) * t986 - t709, t254 * qJD(4) + (-t1000 * t260 + t259 * t671) * t986 + t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1053, t766, -t908 - t925, t1053, -qJD(5) * t386 - t876 - t909, t659, qJD(4) * t500 + qJD(5) * t138 - qJD(6) * t260 - t699, -t1071 - t698, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t799, -t669 * t649, -t862, qJD(3) * t368 + t903, 0, 0, 0, 0, 0, 0, t721, t284, -t760, qJD(3) * t85 + t772, 0, 0, 0, 0, 0, 0, t697, t90, -t777, qJD(3) * t21 - qJD(5) * t203 + t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t593 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t343 - t905, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t151 - t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t858, t703, 0, 0, 0, 0, 0, 0, t865 + t880, -t607 + t863, -t759, t704, 0, 0, 0, 0, 0, 0, t753 + t911, t907 - t925, -t775, -qJD(5) * t253 + t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t754, t755, 0, 0, 0, 0, 0, 0, 0, 0, t757, -t1061, 0, -t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t761, -t1061, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1050, -t764, t370, t1050, t804, t657, qJD(2) * t374 + qJD(3) * t162 - t884 - t915, qJD(2) * t375 + qJD(3) * t163 + t885 + t916, 0, 0, -t729, -t776, t141, -t733, t720, t657, qJD(2) * t191 + qJD(3) * t30 + qJD(6) * t52 - t887 - t982, qJD(2) * t194 + qJD(3) * t29 + qJD(6) * t54 + t886 + t981, qJD(3) * t3 - t787, qJD(2) * t11 + qJD(3) * t1 + qJD(4) * t203 - t976; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t490 + t902, qJD(3) * t491 + t901, 0, 0, 0, 0, 0, 0, 0, 0, t920 + t1084, qJD(6) * t432 + t1085 + t917, -t786, qJD(3) * t23 + t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1052, -t763, -t864, -t1052, t866, t658, -t617 * t800 + t771, t615 * t800 + t770, 0, 0, -t728, -t774, -t906, -t732, -t878 + t910, t658, -qJD(4) * t1046 - qJD(6) * t135 + t706, t705 + t1060, t709, qJD(4) * t253 - t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t754, -t755, 0, 0, 0, 0, 0, 0, 0, 0, -t757, t1061, 0, t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t995, -pkin(5) * t807, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t758, 0, -t1092 * t995 + t778 (-t808 - t807) * pkin(5) - t707, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1051, -t767, qJD(3) * t291 + t1064, -t1051, qJD(3) * t288 + qJD(5) * t435 + t411, t657, qJD(2) * t192 + qJD(3) * t43 - qJD(4) * t357 - qJD(5) * t52 - t979, qJD(2) * t193 + qJD(3) * t44 - qJD(5) * t54 + t886 + t980, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t919 + t1084, -qJD(5) * t432 + t1085 + t918, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1053, -t766, t908, -t1053, qJD(5) * t500 + t909, t658, -qJD(4) * t386 + qJD(5) * t135 + t699, t698 + t1060, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t761, t1061, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, 0, t671 * t986 - t778, pkin(5) * t808 + t707, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
