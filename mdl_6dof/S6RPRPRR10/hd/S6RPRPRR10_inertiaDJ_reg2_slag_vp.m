% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPRR10_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR10_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR10_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR10_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:09:20
% EndTime: 2019-03-09 04:09:29
% DurationCPUTime: 4.26s
% Computational Cost: add. (4987->323), mult. (10976->583), div. (0->0), fcn. (10328->8), ass. (0->141)
t100 = cos(pkin(10));
t187 = sin(qJ(5));
t189 = cos(qJ(5));
t99 = sin(pkin(10));
t197 = t187 * t100 + t189 * t99;
t161 = qJD(5) * t189;
t160 = qJD(5) * t187;
t85 = t99 * t160;
t133 = -t100 * t161 + t85;
t199 = -0.2e1 * t133;
t195 = -t189 * t100 + t187 * t99;
t103 = cos(qJ(3));
t130 = t103 * t133;
t182 = t100 * t160 + t99 * t161;
t198 = t103 * t182;
t102 = sin(qJ(3));
t184 = pkin(8) + qJ(4);
t185 = t102 * pkin(3);
t129 = -t184 * t103 + qJ(2) + t185;
t104 = -pkin(1) - pkin(7);
t162 = -t99 * t104 + pkin(4);
t120 = t100 * t129 + t102 * t162;
t178 = t102 * t104;
t169 = t100 * t178;
t122 = t129 * t99 + t169;
t22 = t189 * t120 - t187 * t122;
t53 = t197 * t184;
t196 = 0.2e1 * t182;
t23 = t187 * t120 + t189 * t122;
t65 = t195 * t102;
t194 = t197 * t102;
t193 = t195 * qJD(3);
t97 = t102 ^ 2;
t192 = (-t103 ^ 2 + t97) * qJD(3);
t191 = 2 * qJD(2);
t190 = t99 * pkin(4);
t188 = cos(qJ(6));
t186 = pkin(3) * t103;
t144 = t189 * t184;
t145 = t184 * t187;
t54 = t100 * t144 - t99 * t145;
t183 = t197 * t103;
t95 = t99 ^ 2;
t96 = t100 ^ 2;
t181 = t95 + t96;
t179 = qJ(4) * t103;
t177 = t103 * t104;
t176 = qJD(4) * t102;
t101 = sin(qJ(6));
t175 = qJD(6) * t101;
t92 = t102 * qJD(3);
t93 = t103 * qJD(3);
t174 = pkin(5) * t93;
t173 = pkin(5) * t175;
t172 = t99 * t178;
t171 = t182 * pkin(5);
t168 = t100 * t177;
t167 = t99 * t92;
t91 = -t100 * pkin(4) - pkin(3);
t164 = t100 * t92;
t89 = t104 * t92;
t163 = t102 * t93;
t159 = qJD(6) * t188;
t158 = t181 * t103;
t157 = t189 * qJD(4);
t156 = t187 * qJD(4);
t155 = t181 * qJD(4);
t71 = t103 * t190 - t177;
t154 = -0.2e1 * t163;
t83 = 0.2e1 * t163;
t153 = -qJD(4) * t103 + qJD(2);
t152 = pkin(5) * t159;
t151 = t99 * t164;
t150 = 0.2e1 * t155;
t149 = 0.2e1 * t192;
t143 = t188 * t183;
t135 = t100 * t153;
t139 = qJ(4) * t102 + t186;
t51 = t135 + (t100 * t139 - t177 * t99) * qJD(3);
t137 = t99 * t153;
t52 = t137 + (t139 * t99 + t168) * qJD(3);
t141 = t100 * t52 - t51 * t99;
t138 = -t179 + t185;
t132 = qJ(2) + t138;
t55 = t100 * t132 - t172;
t56 = t132 * t99 + t169;
t140 = t100 * t56 - t55 * t99;
t131 = t184 * t102 + t186;
t111 = t135 + (t100 * t131 + t103 * t162) * qJD(3);
t112 = t137 + (t131 * t99 + t168) * qJD(3);
t11 = -t23 * qJD(5) + t189 * t111 - t187 * t112;
t43 = -t193 * t102 + t198;
t105 = t43 * pkin(9) + t11 + t174;
t66 = t195 * t103;
t109 = t102 * pkin(5) + t66 * pkin(9) + t22;
t106 = t188 * t109;
t10 = -t22 * qJD(5) - t187 * t111 - t189 * t112;
t115 = qJD(3) * t194 + t130;
t108 = pkin(9) * t115 - t10;
t17 = -t183 * pkin(9) + t23;
t1 = -qJD(6) * t106 - t101 * t105 - t188 * t108 + t17 * t175;
t39 = -t101 * t194 - t188 * t65;
t128 = t188 * t195;
t40 = -t101 * t183 - t188 * t66;
t124 = qJD(3) * t197;
t49 = -t101 * t195 + t188 * t197;
t123 = (qJD(5) * t145 - t157) * t99;
t29 = t53 * qJD(5) - t100 * t157 + t156 * t99;
t121 = -pkin(9) * t197 - t53;
t118 = t101 * t121;
t117 = t188 * t121;
t116 = -t102 * t124 - t130;
t114 = -pkin(9) * t182 - t29;
t110 = t85 * pkin(9) + t123 + (-t156 + (-t189 * pkin(9) - t144) * qJD(5)) * t100;
t107 = t101 * t109;
t2 = -qJD(6) * t107 - t101 * t108 + t188 * t105 - t159 * t17;
t94 = qJ(2) * t191;
t69 = -pkin(4) * t167 + t89;
t60 = pkin(5) * t195 + t91;
t50 = pkin(5) * t183 + t71;
t48 = t101 * t197 + t128;
t44 = qJD(5) * t65 - t103 * t124;
t42 = qJD(5) * t194 + t193 * t103;
t41 = -pkin(9) * t195 + t54;
t38 = -t101 * t66 + t143;
t37 = t101 * t65 - t188 * t194;
t30 = t123 + (-qJD(5) * t144 - t156) * t100;
t26 = t89 - t130 * pkin(5) + (-pkin(5) * t197 - t190) * t92;
t21 = t49 * qJD(6) - t101 * t133 + t188 * t182;
t20 = qJD(6) * t128 + t101 * t182 + t188 * t133 + t175 * t197;
t19 = t188 * t41 + t118;
t18 = -t101 * t41 + t117;
t15 = t40 * qJD(6) - t101 * t43 - t188 * t115;
t14 = -t39 * qJD(6) + t101 * t42 + t188 * t44;
t13 = qJD(6) * t143 - t101 * t115 - t66 * t175 + t188 * t43;
t12 = -t101 * t44 + t159 * t194 - t65 * t175 + t188 * t42;
t9 = t188 * t17 + t107;
t8 = -t101 * t17 + t106;
t4 = -qJD(6) * t118 - t101 * t114 + t188 * t110 - t41 * t159;
t3 = -qJD(6) * t117 - t101 * t110 - t188 * t114 + t41 * t175;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t94, t154, t149, 0, t83, 0, 0, 0.2e1 * qJ(2) * t93 + 0.2e1 * qJD(2) * t102, -0.2e1 * qJ(2) * t92 + 0.2e1 * qJD(2) * t103, 0, t94, t96 * t154, 0.4e1 * t103 * t151, -0.2e1 * t100 * t192, t95 * t154, t99 * t149, t83, 0.2e1 * t51 * t102 + 0.2e1 * (t55 + 0.2e1 * t172) * t93, -0.2e1 * t52 * t102 + 0.2e1 * (-t56 + 0.2e1 * t169) * t93, 0.2e1 * (-t100 * t51 - t52 * t99) * t103 + 0.2e1 * (t100 * t55 + t56 * t99) * t92, -0.2e1 * t104 ^ 2 * t163 + 0.2e1 * t55 * t51 + 0.2e1 * t56 * t52, 0.2e1 * t66 * t43, -0.2e1 * t115 * t66 + 0.2e1 * t183 * t43, -0.2e1 * t102 * t43 - 0.2e1 * t66 * t93, -0.2e1 * t183 * t115, 0.2e1 * t130 * t102 + 0.2e1 * (-t103 * t183 + t197 * t97) * qJD(3), t83, 0.2e1 * t11 * t102 + 0.2e1 * t116 * t71 + 0.2e1 * t183 * t69 + 0.2e1 * t22 * t93, 0.2e1 * t10 * t102 - 0.2e1 * t23 * t93 - 0.2e1 * t43 * t71 - 0.2e1 * t66 * t69, 0.2e1 * t10 * t183 + 0.2e1 * t11 * t66 + 0.2e1 * t115 * t23 + 0.2e1 * t22 * t43, -0.2e1 * t10 * t23 + 0.2e1 * t11 * t22 + 0.2e1 * t69 * t71, -0.2e1 * t40 * t13, 0.2e1 * t13 * t38 - 0.2e1 * t15 * t40, -0.2e1 * t102 * t13 + 0.2e1 * t40 * t93, 0.2e1 * t38 * t15, -0.2e1 * t102 * t15 - 0.2e1 * t38 * t93, t83, 0.2e1 * t102 * t2 + 0.2e1 * t15 * t50 + 0.2e1 * t26 * t38 + 0.2e1 * t8 * t93, 0.2e1 * t1 * t102 - 0.2e1 * t13 * t50 + 0.2e1 * t26 * t40 - 0.2e1 * t9 * t93, 0.2e1 * t1 * t38 + 0.2e1 * t13 * t8 - 0.2e1 * t15 * t9 - 0.2e1 * t2 * t40, -0.2e1 * t1 * t9 + 0.2e1 * t2 * t8 + 0.2e1 * t26 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141 * t102 + (t140 - 0.2e1 * t178) * t93, 0, 0, 0, 0, 0, 0, t44 * t102 - t103 * t116 + t183 * t92 - t194 * t93, t102 * t42 + t103 * t43 + (-t102 * t66 + t103 * t65) * qJD(3), -t115 * t65 + t183 * t42 - t194 * t43 + t44 * t66, t10 * t65 - t103 * t69 - t11 * t194 + t22 * t44 - t23 * t42 + t71 * t92, 0, 0, 0, 0, 0, 0, t102 * t14 - t103 * t15 + (t102 * t38 + t103 * t37) * qJD(3), t102 * t12 + t103 * t13 + (t102 * t40 - t103 * t39) * qJD(3), t12 * t38 + t13 * t37 - t14 * t40 - t15 * t39, -t1 * t39 - t103 * t26 - t12 * t9 + t14 * t8 + t2 * t37 + t50 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t181) * t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t194 * t44 + 0.2e1 * t42 * t65 - 0.2e1 * t163, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t12 * t39 + 0.2e1 * t14 * t37 - 0.2e1 * t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, 0, -t93, 0, -t89, -t104 * t93, 0, 0, -t151 (t95 - t96) * t92, t99 * t93, t151, t100 * t93, 0, -t99 * t176 + (-t99 * t179 + (t99 * pkin(3) - t100 * t104) * t102) * qJD(3), -t100 * t176 + (t100 * t138 + t172) * qJD(3), t141, -pkin(3) * t89 + qJ(4) * t141 + qJD(4) * t140, t133 * t66 - t197 * t43, t115 * t197 + t133 * t183 + t182 * t66 + t195 * t43, -t102 * t133 + t197 * t93, -t115 * t195 + t182 * t183, -t102 * t182 - t195 * t93, 0, t30 * t102 + t116 * t91 + t182 * t71 + t195 * t69 - t53 * t93, t29 * t102 - t133 * t71 + t197 * t69 - t91 * t43 - t54 * t93, t10 * t195 - t11 * t197 + t115 * t54 + t133 * t22 - t182 * t23 + t183 * t29 + t30 * t66 - t53 * t43, -t10 * t54 - t11 * t53 + t22 * t30 - t23 * t29 + t69 * t91, -t13 * t49 - t20 * t40, t13 * t48 - t15 * t49 + t20 * t38 - t21 * t40, -t102 * t20 + t49 * t93, t15 * t48 + t21 * t38, -t102 * t21 - t48 * t93, 0, t4 * t102 + t60 * t15 + t171 * t38 + t18 * t93 + t50 * t21 + t26 * t48, t3 * t102 - t60 * t13 + t171 * t40 - t19 * t93 - t50 * t20 + t26 * t49, t1 * t48 + t13 * t18 - t15 * t19 - t2 * t49 + t20 * t8 - t21 * t9 + t3 * t38 - t4 * t40, -t1 * t19 + t171 * t50 + t2 * t18 + t26 * t60 - t9 * t3 + t8 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, -t93, 0, 0, 0, 0, 0, 0, 0, 0, -t164, t167, qJD(3) * t158, t102 * t155 + (qJ(4) * t158 - t185) * qJD(3), 0, 0, 0, 0, 0, 0, t195 * t92 - t198, t197 * t92 + t130, -t133 * t194 + t182 * t65 + t195 * t42 - t197 * t44, -t194 * t30 + t29 * t65 - t42 * t54 - t44 * t53 + t91 * t92, 0, 0, 0, 0, 0, 0, -t103 * t21 + t48 * t92, t103 * t20 + t49 * t92, t12 * t48 - t14 * t49 + t20 * t37 - t21 * t39, -t103 * t171 - t12 * t19 + t14 * t18 - t39 * t3 + t37 * t4 + t60 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, qJ(4) * t150, t197 * t199, 0.2e1 * t133 * t195 - 0.2e1 * t182 * t197, 0, t195 * t196, 0, 0, t91 * t196, t91 * t199, -0.2e1 * t133 * t53 - 0.2e1 * t182 * t54 + 0.2e1 * t195 * t29 - 0.2e1 * t197 * t30, -0.2e1 * t29 * t54 - 0.2e1 * t30 * t53, -0.2e1 * t49 * t20, 0.2e1 * t20 * t48 - 0.2e1 * t21 * t49, 0, 0.2e1 * t48 * t21, 0, 0, 0.2e1 * t171 * t48 + 0.2e1 * t60 * t21, 0.2e1 * t171 * t49 - 0.2e1 * t60 * t20, 0.2e1 * t18 * t20 - 0.2e1 * t19 * t21 + 0.2e1 * t3 * t48 - 0.2e1 * t4 * t49, 0.2e1 * t171 * t60 + 0.2e1 * t18 * t4 - 0.2e1 * t19 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, -t164, 0, t89, 0, 0, 0, 0, 0, 0, t116, -t43, 0, t69, 0, 0, 0, 0, 0, 0, t15, -t13, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, -t133, 0, 0, 0, 0, 0, 0, 0, 0, t21, -t20, 0, t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, 0, t115, t93, t11, t10, 0, 0, 0, 0, -t13, 0, -t15, t93, -t102 * t173 + t188 * t174 + t2 (-t101 * t93 - t102 * t159) * pkin(5) + t1 (t188 * t13 - t101 * t15 + (t101 * t40 - t188 * t38) * qJD(6)) * pkin(5) (t188 * t2 - t1 * t101 + (-t101 * t8 + t188 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t42, 0, 0, 0, 0, 0, 0, 0, 0, t14, t12, 0 (t188 * t14 - t101 * t12 + (-t101 * t37 + t188 * t39) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133, 0, -t182, 0, t30, t29, 0, 0, 0, 0, -t20, 0, -t21, 0, t4, t3 (t188 * t20 - t101 * t21 + (t101 * t49 - t188 * t48) * qJD(6)) * pkin(5) (t188 * t4 - t101 * t3 + (-t101 * t18 + t188 * t19) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t173, -0.2e1 * t152, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, 0, -t15, t93, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, t12, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, 0, -t21, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t152, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
