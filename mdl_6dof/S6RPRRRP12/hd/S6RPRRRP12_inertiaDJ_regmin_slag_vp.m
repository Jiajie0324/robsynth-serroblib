% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRRP12_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:50:44
% EndTime: 2019-03-09 06:50:58
% DurationCPUTime: 4.98s
% Computational Cost: add. (10317->387), mult. (30107->685), div. (0->0), fcn. (31989->12), ass. (0->183)
t127 = cos(qJ(5));
t112 = qJD(5) * t127;
t124 = sin(qJ(5));
t125 = sin(qJ(4));
t128 = cos(qJ(4));
t201 = qJD(4) * t128;
t248 = t112 * t125 + t124 * t201;
t118 = sin(pkin(12));
t120 = sin(pkin(6));
t121 = cos(pkin(12));
t123 = cos(pkin(6));
t126 = sin(qJ(3));
t122 = cos(pkin(7));
t129 = cos(qJ(3));
t213 = t122 * t129;
t119 = sin(pkin(7));
t216 = t119 * t129;
t247 = (-t118 * t126 + t121 * t213) * t120 + t123 * t216;
t246 = -0.4e1 * t125;
t199 = qJD(5) * t124;
t214 = t121 * t126;
t217 = t119 * t126;
t72 = t123 * t217 + (t118 * t129 + t122 * t214) * t120;
t215 = t120 * t121;
t89 = t119 * t215 - t122 * t123;
t55 = -t125 * t89 + t128 * t72;
t65 = t247 * qJD(3);
t43 = qJD(4) * t55 + t65 * t125;
t54 = t125 * t72 + t128 * t89;
t142 = -t127 * t43 + t199 * t54;
t245 = pkin(11) * t142;
t205 = qJD(3) * t129;
t178 = t119 * t205;
t90 = -t122 * t128 + t125 * t217;
t130 = -qJD(4) * t90 + t128 * t178;
t116 = t127 ^ 2;
t209 = t124 ^ 2 - t116;
t170 = t209 * qJD(5);
t234 = t125 * pkin(11);
t163 = -pkin(4) * t128 - t234;
t104 = -pkin(3) + t163;
t197 = qJD(5) * t128;
t182 = t124 * t197;
t202 = qJD(4) * t127;
t139 = t125 * t202 + t182;
t235 = pkin(11) * t128;
t162 = pkin(4) * t125 - t235;
t98 = t162 * qJD(4);
t60 = pkin(10) * t139 - t104 * t112 - t124 * t98;
t160 = pkin(5) * t127 + qJ(6) * t124;
t100 = -pkin(4) - t160;
t159 = pkin(5) * t124 - qJ(6) * t127;
t151 = pkin(10) + t159;
t87 = t151 * t125;
t88 = qJD(5) * t159 - t124 * qJD(6);
t243 = qJD(4) * (-t100 * t128 + t234) - qJD(5) * t87 - t125 * t88;
t242 = qJD(5) * t160 - t127 * qJD(6);
t203 = qJD(4) * t125;
t207 = qJD(2) * t120;
t184 = t118 * t207;
t238 = pkin(1) * t123;
t110 = t121 * t238;
t219 = t118 * t120;
t73 = t123 * pkin(2) + t110 + (-pkin(9) * t122 - qJ(2)) * t219;
t230 = t122 * t73;
t210 = qJ(2) * t215 + t118 * t238;
t69 = (t119 * t123 + t122 * t215) * pkin(9) + t210;
t81 = (-pkin(9) * t118 * t119 - pkin(2) * t121 - pkin(1)) * t120;
t31 = -t205 * t230 - t81 * t178 - t129 * t121 * t207 + (qJD(3) * t69 + t122 * t184) * t126;
t51 = -t119 * t73 + t122 * t81;
t36 = -pkin(3) * t247 - pkin(10) * t72 + t51;
t157 = t119 * t81 + t230;
t136 = t126 * t157 + t129 * t69;
t42 = -t89 * pkin(10) + t136;
t166 = t119 * t184;
t66 = t72 * qJD(3);
t48 = pkin(3) * t66 - pkin(10) * t65 + t166;
t13 = -t125 * t48 + t128 * t31 - t201 * t36 + t203 * t42;
t11 = pkin(11) * t66 - t13;
t32 = (t118 * t213 + t214) * t207 + t136 * qJD(3);
t44 = -qJD(4) * t54 + t128 * t65;
t18 = t43 * pkin(4) - t44 * pkin(11) + t32;
t232 = t125 * t36 + t128 * t42;
t21 = -pkin(11) * t247 + t232;
t41 = t89 * pkin(3) + t126 * t69 - t129 * t157;
t25 = t54 * pkin(4) - t55 * pkin(11) + t41;
t233 = t124 * t25 + t127 * t21;
t4 = -qJD(5) * t233 - t124 * t11 + t127 * t18;
t177 = t124 * t203;
t236 = pkin(10) * t128;
t111 = t127 * t236;
t221 = t104 * t124 + t111;
t61 = pkin(10) * t177 - qJD(5) * t221 + t127 * t98;
t241 = 0.2e1 * t66;
t240 = 0.2e1 * qJD(6);
t239 = t43 * pkin(5);
t237 = pkin(10) * t124;
t45 = t124 * t55 + t127 * t247;
t229 = t124 * t45;
t46 = -t124 * t247 + t127 * t55;
t26 = qJD(5) * t46 + t124 * t44 - t127 * t66;
t228 = t127 * t26;
t227 = t127 * t46;
t27 = t66 * t124 - t55 * t199 + (-qJD(5) * t247 + t44) * t127;
t226 = t27 * t124;
t225 = t27 * t127;
t224 = t43 * qJ(6);
t91 = t122 * t125 + t128 * t217;
t75 = qJD(4) * t91 + t125 * t178;
t223 = t75 * t124;
t212 = t127 * t104;
t211 = t54 * qJD(6);
t115 = t125 ^ 2;
t208 = -t128 ^ 2 + t115;
t206 = qJD(3) * t126;
t204 = qJD(4) * t124;
t200 = qJD(4) * t129;
t198 = qJD(5) * t125;
t195 = t128 * qJD(6);
t194 = -0.2e1 * pkin(3) * qJD(4);
t193 = -0.2e1 * pkin(4) * qJD(5);
t192 = t124 * t236;
t191 = pkin(5) * t203;
t190 = pkin(11) * t199;
t189 = pkin(11) * t112;
t188 = t247 * t201;
t185 = t124 * t216;
t183 = qJ(6) * t203;
t180 = t127 * t197;
t179 = t119 * t206;
t175 = t124 * t112;
t174 = t125 * t201;
t173 = t127 * t201;
t171 = -t125 * t42 + t128 * t36;
t169 = t208 * qJD(4);
t168 = -0.2e1 * t123 * t207;
t167 = 0.2e1 * t174;
t165 = t124 * t173;
t6 = qJ(6) * t54 + t233;
t8 = -t124 * t21 + t127 * t25;
t7 = -pkin(5) * t54 - t8;
t161 = -t124 * t6 + t127 * t7;
t155 = -t124 * t46 - t127 * t45;
t76 = t124 * t91 + t127 * t216;
t77 = t127 * t91 - t185;
t154 = -t124 * t77 + t127 * t76;
t79 = -qJ(6) * t128 + t221;
t80 = -t212 + (pkin(5) + t237) * t128;
t153 = -t124 * t79 + t127 * t80;
t14 = t125 * t31 + t128 * t48 - t201 * t42 - t203 * t36;
t20 = pkin(4) * t247 - t171;
t15 = pkin(5) * t45 - qJ(6) * t46 + t20;
t12 = -pkin(4) * t66 - t14;
t5 = pkin(5) * t26 - qJ(6) * t27 - qJD(6) * t46 + t12;
t149 = -t112 * t15 - t5 * t124;
t148 = -t5 * t127 + t15 * t199;
t147 = t125 * t66 - t188;
t146 = -t128 * t66 - t203 * t247;
t145 = t112 * t20 + t12 * t124;
t144 = -t12 * t127 + t199 * t20;
t143 = t112 * t54 + t124 * t43;
t57 = -t127 * t75 + t199 * t90;
t3 = -t11 * t127 - t112 * t25 - t124 * t18 + t199 * t21;
t50 = -qJD(5) * t185 + t112 * t91 + t124 * t130 - t127 * t179;
t141 = t26 * t90 - t43 * t76 + t45 * t75 - t50 * t54;
t140 = t143 * pkin(11);
t138 = t125 * t223 + t50 * t128 - t76 * t203 + t248 * t90;
t49 = qJD(5) * t76 - t124 * t179 - t127 * t130;
t137 = t27 * t90 - t43 * t77 + t46 * t75 + t49 * t54;
t1 = t211 - t3 + t224;
t2 = -t239 - t4;
t133 = qJD(5) * t161 + t1 * t127 + t2 * t124;
t132 = qJD(5) * t154 + t50 * t124 - t49 * t127;
t53 = -t60 + t183 - t195;
t58 = -t191 - t61;
t131 = qJD(5) * t153 + t58 * t124 + t53 * t127;
t107 = pkin(11) * t180;
t92 = -t124 * t198 + t173;
t84 = -t192 + t212;
t59 = t125 * t242 + t151 * t201;
t56 = t112 * t90 + t223;
t28 = (t202 * t90 - t49) * t128 + (-qJD(4) * t77 - t57) * t125;
t9 = [0, 0, 0, t118 * t168, t121 * t168, 0.2e1 * (t118 ^ 2 + t121 ^ 2) * t120 ^ 2 * qJD(2), 0.2e1 * (t210 * t121 + (qJ(2) * t219 - t110) * t118) * t207, 0.2e1 * t72 * t65, 0.2e1 * t247 * t65 - 0.2e1 * t66 * t72, -0.2e1 * t65 * t89, t89 * t241, 0, -0.2e1 * t166 * t247 + 0.2e1 * t32 * t89 + 0.2e1 * t51 * t66, 0.2e1 * t166 * t72 - 0.2e1 * t31 * t89 + 0.2e1 * t51 * t65, 0.2e1 * t55 * t44, -0.2e1 * t43 * t55 - 0.2e1 * t44 * t54, -0.2e1 * t247 * t44 + 0.2e1 * t55 * t66, 0.2e1 * t247 * t43 - 0.2e1 * t54 * t66, -t247 * t241, -0.2e1 * t14 * t247 + 0.2e1 * t171 * t66 + 0.2e1 * t32 * t54 + 0.2e1 * t41 * t43, -0.2e1 * t13 * t247 - 0.2e1 * t232 * t66 + 0.2e1 * t32 * t55 + 0.2e1 * t41 * t44, 0.2e1 * t46 * t27, -0.2e1 * t26 * t46 - 0.2e1 * t27 * t45, 0.2e1 * t27 * t54 + 0.2e1 * t43 * t46, -0.2e1 * t26 * t54 - 0.2e1 * t43 * t45, 0.2e1 * t54 * t43, 0.2e1 * t12 * t45 + 0.2e1 * t20 * t26 + 0.2e1 * t4 * t54 + 0.2e1 * t43 * t8, 0.2e1 * t12 * t46 + 0.2e1 * t20 * t27 - 0.2e1 * t233 * t43 + 0.2e1 * t3 * t54, 0.2e1 * t15 * t26 - 0.2e1 * t2 * t54 - 0.2e1 * t43 * t7 + 0.2e1 * t45 * t5, -0.2e1 * t1 * t45 + 0.2e1 * t2 * t46 - 0.2e1 * t26 * t6 + 0.2e1 * t27 * t7, 0.2e1 * t1 * t54 - 0.2e1 * t15 * t27 + 0.2e1 * t43 * t6 - 0.2e1 * t46 * t5, 0.2e1 * t1 * t6 + 0.2e1 * t15 * t5 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122 * t66 + t179 * t89, t122 * t65 + t178 * t89, 0, 0, 0, 0, 0, -t90 * t66 + t75 * t247 + (-t129 * t43 + t206 * t54) * t119, t122 * t188 - t91 * t66 + ((-t126 * t203 + t128 * t205) * t247 + t55 * t206 - t129 * t44) * t119, 0, 0, 0, 0, 0, t141, t137, t141, -t26 * t77 + t27 * t76 + t45 * t49 + t46 * t50, -t137, t1 * t77 + t15 * t75 + t2 * t76 - t49 * t6 + t5 * t90 + t50 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t49 * t77 + 0.2e1 * t50 * t76 + 0.2e1 * t75 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t66, 0, -t32, t31, t125 * t44 + t201 * t55, -t125 * t43 + t44 * t128 + (-t125 * t55 - t128 * t54) * qJD(4), t147, -t146, 0, -pkin(3) * t43 - pkin(10) * t147 - t32 * t128 + t203 * t41, -pkin(3) * t44 + pkin(10) * t146 + t32 * t125 + t201 * t41, t46 * t173 + (-t199 * t46 + t225) * t125, t155 * t201 + (-t226 - t228 + (-t227 + t229) * qJD(5)) * t125 (t202 * t54 - t27) * t128 + (qJD(4) * t46 - t142) * t125 (-t204 * t54 + t26) * t128 + (-qJD(4) * t45 - t143) * t125, -t128 * t43 + t203 * t54, t84 * t43 + t61 * t54 + (-t4 + (pkin(10) * t45 + t124 * t20) * qJD(4)) * t128 + (pkin(10) * t26 + qJD(4) * t8 + t145) * t125, -t221 * t43 + t60 * t54 + (-t3 + (pkin(10) * t46 + t127 * t20) * qJD(4)) * t128 + (pkin(10) * t27 - qJD(4) * t233 - t144) * t125, t87 * t26 - t80 * t43 + t59 * t45 - t58 * t54 + (t15 * t204 + t2) * t128 + (-qJD(4) * t7 - t149) * t125, -t79 * t26 + t80 * t27 - t53 * t45 + t58 * t46 + t161 * t201 + (-t1 * t124 + t127 * t2 + (-t124 * t7 - t127 * t6) * qJD(5)) * t125, -t87 * t27 + t79 * t43 - t59 * t46 + t53 * t54 + (-t15 * t202 - t1) * t128 + (qJD(4) * t6 + t148) * t125, t1 * t79 + t15 * t59 + t2 * t80 + t5 * t87 + t53 * t6 + t58 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, -t178, 0, 0, 0, 0, 0 (-t125 * t200 - t128 * t206) * t119 (t125 * t206 - t128 * t200) * t119, 0, 0, 0, 0, 0, t138, t28, t138, t154 * t201 + (t124 * t49 + t127 * t50 + (-t124 * t76 - t127 * t77) * qJD(5)) * t125, -t28, -t49 * t79 + t50 * t80 + t53 * t77 + t58 * t76 + t59 * t90 + t75 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, -0.2e1 * t169, 0, 0, 0, t125 * t194, t128 * t194, -0.2e1 * t115 * t175 + 0.2e1 * t116 * t174, 0.2e1 * t115 * t170 + t165 * t246, 0.2e1 * t125 * t182 + 0.2e1 * t202 * t208, -0.2e1 * t124 * t169 + 0.2e1 * t125 * t180, -0.2e1 * t174, 0.2e1 * t84 * t203 - 0.2e1 * t61 * t128 + 0.2e1 * (t112 * t115 + t124 * t167) * pkin(10), -0.2e1 * t221 * t203 - 0.2e1 * t60 * t128 + 0.2e1 * (-t115 * t199 + t127 * t167) * pkin(10), 0.2e1 * (t204 * t87 + t58) * t128 + 0.2e1 * (-qJD(4) * t80 + t112 * t87 + t59 * t124) * t125, 0.2e1 * t153 * t201 + 0.2e1 * (-t124 * t53 + t127 * t58 + (-t124 * t80 - t127 * t79) * qJD(5)) * t125, 0.2e1 * (-t202 * t87 - t53) * t128 + 0.2e1 * (qJD(4) * t79 - t59 * t127 + t199 * t87) * t125, 0.2e1 * t53 * t79 + 0.2e1 * t58 * t80 + 0.2e1 * t59 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t43, t66, t14, t13, t112 * t46 + t226, qJD(5) * t155 - t124 * t26 + t225, t143, -t142, 0, -pkin(4) * t26 - t140 + t144, -pkin(4) * t27 + t145 + t245, t100 * t26 + t88 * t45 - t140 + t148 (t226 - t228 + (t227 + t229) * qJD(5)) * pkin(11) + t133, -t100 * t27 - t88 * t46 + t149 - t245, pkin(11) * t133 + t5 * t100 + t15 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, -t130, 0, 0, 0, 0, 0, t57, t56, t57, t132, -t56, pkin(11) * t132 + t75 * t100 + t90 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -t203, 0, -pkin(10) * t201, pkin(10) * t203, -t125 * t170 + t165, t175 * t246 - t201 * t209, t177 - t180, t139, 0, t107 + (-pkin(4) * t127 + t237) * t198 + (t124 * t163 - t111) * qJD(4) (pkin(10) * t125 * t127 + t124 * t162) * qJD(5) + (t127 * t163 + t192) * qJD(4), t107 + (t100 * t198 - t59) * t127 - t243 * t124, t131 (-t59 + (t100 * t125 + t235) * qJD(5)) * t124 + t243 * t127, pkin(11) * t131 + t59 * t100 + t87 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t175, -0.2e1 * t170, 0, 0, 0, t124 * t193, t127 * t193, 0.2e1 * t100 * t199 - 0.2e1 * t127 * t88, 0, -0.2e1 * t100 * t112 - 0.2e1 * t124 * t88, 0.2e1 * t100 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, -t26, t43, t4, t3, t4 + 0.2e1 * t239, -pkin(5) * t27 - qJ(6) * t26 - qJD(6) * t45, 0.2e1 * t211 - t3 + 0.2e1 * t224, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, t49, -t50, 0, -t49, -pkin(5) * t50 - qJ(6) * t49 + qJD(6) * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t248, t203, t61, t60, t61 + 0.2e1 * t191 (-pkin(5) * t201 - qJ(6) * t198) * t127 + (-qJ(6) * t201 + (pkin(5) * qJD(5) - qJD(6)) * t125) * t124, -t60 + 0.2e1 * t183 - 0.2e1 * t195, -pkin(5) * t58 + qJ(6) * t53 + qJD(6) * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, -t199, 0, -t189, t190, -t189, -t242, -t190, -t242 * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, qJ(6) * t240; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t27, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, t92, 0, t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
