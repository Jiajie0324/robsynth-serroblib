% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPPR4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR4_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:48:23
% EndTime: 2019-03-09 02:48:29
% DurationCPUTime: 2.34s
% Computational Cost: add. (3033->218), mult. (6935->393), div. (0->0), fcn. (6867->8), ass. (0->115)
t89 = sin(pkin(10));
t85 = t89 ^ 2;
t91 = cos(pkin(10));
t87 = t91 ^ 2;
t140 = t85 + t87;
t158 = t140 * qJD(4);
t154 = cos(qJ(3));
t145 = pkin(7) + qJ(2);
t90 = sin(pkin(9));
t73 = t145 * t90;
t92 = cos(pkin(9));
t75 = t145 * t92;
t93 = sin(qJ(3));
t106 = -t154 * t73 - t93 * t75;
t152 = sin(qJ(6));
t123 = qJD(6) * t152;
t153 = cos(qJ(6));
t124 = qJD(6) * t153;
t60 = -t91 * t123 + t89 * t124;
t68 = t152 * t89 + t153 * t91;
t130 = t153 * t89;
t70 = -t152 * t91 + t130;
t105 = t154 * t92 - t93 * t90;
t100 = t105 * qJD(2) + t106 * qJD(3);
t61 = t105 * qJD(3);
t157 = 0.2e1 * t61;
t71 = t154 * t90 + t93 * t92;
t62 = t71 * qJD(3);
t156 = 0.2e1 * t62;
t155 = pkin(4) + pkin(5);
t46 = t154 * t75 - t93 * t73;
t30 = t71 * qJD(2) + t46 * qJD(3);
t151 = t106 * t30;
t150 = t68 * t60;
t59 = t68 * qJD(6);
t149 = t70 * t59;
t148 = t89 * t46;
t53 = t89 * t61;
t54 = t89 * t62;
t55 = t91 * t61;
t56 = t91 * t62;
t144 = -pkin(8) + qJ(4);
t17 = t71 * t59 - t70 * t61;
t33 = t70 * t71;
t143 = -t70 * t17 - t59 * t33;
t132 = t92 * pkin(2) + pkin(1);
t101 = -pkin(3) * t105 - t71 * qJ(4) - t132;
t22 = t89 * t101 + t91 * t46;
t141 = qJ(4) * t158;
t139 = qJ(5) * t91;
t138 = t85 * qJD(5);
t137 = t89 * qJD(5);
t135 = t105 * t156;
t134 = t71 * t157;
t47 = t89 * t55;
t18 = -qJ(5) * t105 + t22;
t133 = t155 * t89;
t126 = t89 * qJ(5) + pkin(3);
t125 = qJD(4) * t152;
t122 = t153 * qJD(4);
t121 = t71 * t47;
t120 = 0.2e1 * (t90 ^ 2 + t92 ^ 2) * qJD(2);
t117 = t144 * t152;
t103 = t62 * pkin(3) - t61 * qJ(4) - t71 * qJD(4);
t12 = -t89 * t100 + t91 * t103;
t10 = -t62 * pkin(4) - t12;
t13 = t91 * t100 + t89 * t103;
t7 = t62 * qJ(5) - qJD(5) * t105 + t13;
t116 = t10 * t91 - t7 * t89;
t98 = -t91 * t71 * qJD(5) - t61 * t139 + t30;
t11 = pkin(4) * t53 + t98;
t25 = (pkin(4) * t89 - t139) * t71 - t106;
t115 = t11 * t71 + t25 * t61;
t114 = t12 * t91 + t13 * t89;
t113 = -t12 * t89 + t13 * t91;
t16 = -t60 * t71 - t68 * t61;
t34 = t68 * t71;
t112 = -t68 * t16 + t34 * t60;
t111 = -t106 * t61 + t30 * t71;
t110 = -t105 * t59 - t70 * t62;
t109 = t105 * t61 - t71 * t62;
t108 = -qJ(4) * t62 + qJD(4) * t105;
t107 = t144 * t130;
t104 = -pkin(3) * t61 + t108;
t72 = -t91 * pkin(4) - t126;
t102 = t61 * t72 + t108;
t21 = t91 * t101 - t148;
t99 = t148 + (t144 * t71 + t132) * t91 - (-t91 * pkin(3) - t155) * t105;
t97 = t153 * t99;
t96 = t152 * t99;
t95 = -t62 * pkin(5) - pkin(8) * t55 + t10;
t94 = pkin(8) * t53 + t7;
t74 = t144 * t91;
t67 = 0.2e1 * t158;
t63 = t155 * t91 + t126;
t45 = t89 * t117 + t153 * t74;
t43 = -t152 * t74 + t107;
t37 = t87 * t134;
t36 = t85 * t134;
t32 = t140 * t61;
t31 = (-t85 + t87) * t61;
t29 = -t74 * t124 - t91 * t125 + (-qJD(6) * t117 + t122) * t89;
t28 = -qJD(6) * t107 - t91 * t122 + t74 * t123 - t89 * t125;
t26 = -t105 * t60 + t68 * t62;
t24 = t109 * t89;
t23 = -0.2e1 * t109 * t91;
t20 = (-t133 + t139) * t71 + t106;
t19 = pkin(4) * t105 - t21;
t14 = t89 * t71 * pkin(8) + t18;
t8 = t61 * t133 + t98;
t4 = t153 * t14 + t96;
t3 = -t152 * t14 + t97;
t2 = -qJD(6) * t96 - t14 * t124 - t152 * t94 + t153 * t95;
t1 = -qJD(6) * t97 + t14 * t123 - t152 * t95 - t153 * t94;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, qJ(2) * t120, t134, 0.2e1 * t109, 0, -t135, 0, 0, -t132 * t156, -t132 * t157, 0.2e1 * t100 * t105 - 0.2e1 * t46 * t62 + 0.2e1 * t111, 0.2e1 * t46 * t100 - 0.2e1 * t151, t37, -0.4e1 * t121, t23, t36, 0.2e1 * t24, -t135, -0.2e1 * t105 * t12 + 0.2e1 * t111 * t89 + 0.2e1 * t21 * t62, 0.2e1 * t105 * t13 + 0.2e1 * t111 * t91 - 0.2e1 * t22 * t62, -0.2e1 * t114 * t71 - 0.2e1 * (t21 * t91 + t22 * t89) * t61, 0.2e1 * t21 * t12 + 0.2e1 * t22 * t13 - 0.2e1 * t151, t37, t23, 0.4e1 * t121, -t135, -0.2e1 * t24, t36, 0.2e1 * t10 * t105 + 0.2e1 * t115 * t89 - 0.2e1 * t19 * t62, 0.2e1 * t116 * t71 - 0.2e1 * (t18 * t89 - t19 * t91) * t61, -0.2e1 * t105 * t7 - 0.2e1 * t115 * t91 + 0.2e1 * t18 * t62, 0.2e1 * t19 * t10 + 0.2e1 * t25 * t11 + 0.2e1 * t18 * t7, -0.2e1 * t34 * t16, -0.2e1 * t16 * t33 - 0.2e1 * t34 * t17, -0.2e1 * t105 * t16 - 0.2e1 * t34 * t62, -0.2e1 * t33 * t17, -0.2e1 * t105 * t17 - 0.2e1 * t33 * t62, -t135, 0.2e1 * t105 * t2 + 0.2e1 * t20 * t17 - 0.2e1 * t3 * t62 + 0.2e1 * t8 * t33, 0.2e1 * t1 * t105 - 0.2e1 * t20 * t16 - 0.2e1 * t8 * t34 + 0.2e1 * t4 * t62, -0.2e1 * t1 * t33 + 0.2e1 * t3 * t16 - 0.2e1 * t4 * t17 - 0.2e1 * t2 * t34, -0.2e1 * t4 * t1 + 0.2e1 * t3 * t2 - 0.2e1 * t20 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t61, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t54, -t32, t114, 0, 0, 0, 0, 0, 0, t56, -t32, t54, -t116, 0, 0, 0, 0, 0, 0, t26, -t110, t112 + t143, -t1 * t70 - t2 * t68 - t3 * t60 - t4 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t149 + 0.2e1 * t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t62, 0, -t30, -t100, 0, 0, t47, t31, t54, -t47, t56, 0, t104 * t89 - t30 * t91, t104 * t91 + t30 * t89, t113, -t30 * pkin(3) + (-t21 * t89 + t22 * t91) * qJD(4) + t113 * qJ(4), t47, t54, -t31, 0, -t56, -t47, t102 * t89 - t11 * t91 - t71 * t138, t10 * t89 + t7 * t91, -t11 * t89 + (t71 * t137 - t102) * t91, t11 * t72 + (qJ(4) * t7 + qJD(4) * t18) * t91 + (qJ(4) * t10 + qJD(4) * t19 - qJD(5) * t25) * t89, -t16 * t70 - t34 * t59, -t112 + t143, t110, t17 * t68 - t33 * t60, t26, 0, t105 * t29 - t33 * t137 + t63 * t17 + t20 * t60 - t43 * t62 - t8 * t68, t105 * t28 + t34 * t137 - t63 * t16 - t20 * t59 + t45 * t62 - t8 * t70, t1 * t68 + t43 * t16 - t45 * t17 - t2 * t70 - t28 * t33 - t29 * t34 + t3 * t59 - t4 * t60, -t1 * t45 + t20 * t137 + t2 * t43 - t4 * t28 + t3 * t29 - t8 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70 * t28 - t68 * t29 - t60 * t43 - t59 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0.2e1 * t141, 0, 0, 0, 0, 0, 0, 0.2e1 * t91 * t137, t67, 0.2e1 * t138, -0.2e1 * t72 * t137 + 0.2e1 * t141, -0.2e1 * t149, 0.2e1 * t68 * t59 - 0.2e1 * t70 * t60, 0, 0.2e1 * t150, 0, 0, 0.2e1 * t68 * t137 + 0.2e1 * t63 * t60, 0.2e1 * t70 * t137 - 0.2e1 * t63 * t59, 0.2e1 * t28 * t68 - 0.2e1 * t29 * t70 + 0.2e1 * t43 * t59 - 0.2e1 * t45 * t60, 0.2e1 * t63 * t137 - 0.2e1 * t45 * t28 + 0.2e1 * t43 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t55, 0, t30, 0, 0, 0, 0, 0, 0, t53, 0, -t55, t11, 0, 0, 0, 0, 0, 0, -t17, t16, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137, 0, 0, 0, 0, 0, 0, -t60, t59, 0, -t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, t55, 0, t10, 0, 0, 0, 0, 0, 0, -t105 * t123 - t153 * t62, -t105 * t124 + t152 * t62, t153 * t16 - t152 * t17 + (t152 * t34 + t153 * t33) * qJD(6), t2 * t153 - t1 * t152 + (-t152 * t3 + t153 * t4) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60 * t153 - t59 * t152 + (t152 * t68 + t153 * t70) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, t153 * t59 - t152 * t60 + (t152 * t70 - t153 * t68) * qJD(6), t29 * t153 - t28 * t152 + (-t152 * t43 + t153 * t45) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, 0, -t17, -t62, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, t59, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, -t60, 0, t29, t28, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t124, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
