% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPPR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:48:26
% EndTime: 2019-03-09 02:48:41
% DurationCPUTime: 6.87s
% Computational Cost: add. (5360->428), mult. (11253->567), div. (0->0), fcn. (12874->8), ass. (0->330)
t275 = sin(pkin(9));
t277 = cos(pkin(9));
t279 = sin(qJ(3));
t461 = cos(qJ(3));
t246 = t279 * t275 - t277 * t461;
t276 = cos(pkin(10));
t280 = cos(qJ(6));
t404 = t280 * t276;
t274 = sin(pkin(10));
t278 = sin(qJ(6));
t410 = t278 * t274;
t485 = (t410 / 0.2e1 + t404 / 0.2e1) * t246;
t349 = t461 * t275;
t407 = t279 * t277;
t249 = t349 + t407;
t242 = t249 ^ 2;
t470 = t246 ^ 2;
t475 = t242 + t470;
t479 = t475 * t276;
t484 = t479 * qJD(1);
t480 = t475 * t274;
t483 = t480 * qJD(1);
t482 = t480 * qJD(2);
t382 = qJD(4) * t246;
t348 = t249 * t382;
t481 = qJD(2) * t479 + t274 * t348;
t405 = t280 * t274;
t409 = t278 * t276;
t248 = t405 - t409;
t361 = t248 * qJD(3);
t244 = t404 + t410;
t415 = t249 * t244;
t472 = t415 * qJD(1);
t306 = t361 + t472;
t354 = t274 * qJD(3);
t155 = t276 * t249;
t369 = t155 * qJD(1);
t476 = t369 + t354;
t362 = t246 * qJD(1);
t347 = t415 * t362;
t270 = t274 ^ 2;
t272 = t276 ^ 2;
t263 = t270 + t272;
t457 = pkin(7) + qJ(2);
t259 = t457 * t277;
t350 = t461 * t259;
t257 = t457 * t275;
t408 = t279 * t257;
t289 = -t408 / 0.2e1 + t350 / 0.2e1;
t269 = -t277 * pkin(2) - pkin(1);
t417 = t249 * qJ(4);
t317 = t246 * pkin(3) - t417;
t148 = t269 + t317;
t186 = t350 - t408;
t171 = t276 * t186;
t80 = t274 * t148 + t171;
t441 = t80 * t276;
t169 = t274 * t186;
t79 = t276 * t148 - t169;
t443 = t79 * t274;
t299 = -t443 / 0.2e1 + t441 / 0.2e1;
t31 = t289 - t299;
t255 = t263 * qJ(4);
t357 = t255 * qJD(3);
t474 = -t31 * qJD(1) + t357;
t436 = qJ(5) * t276;
t460 = pkin(4) * t274;
t281 = (t436 / 0.2e1 - t460 / 0.2e1) * t246 + t289;
t65 = -t246 * pkin(4) - t79;
t444 = t65 * t274;
t64 = t246 * qJ(5) + t80;
t445 = t64 * t276;
t301 = t445 / 0.2e1 + t444 / 0.2e1;
t18 = t281 - t301;
t473 = -t18 * qJD(1) + t357;
t239 = t349 / 0.2e1 + t407 / 0.2e1;
t469 = pkin(4) + pkin(5);
t471 = t274 * t469 - t436;
t208 = t246 * t405;
t468 = -t208 / 0.2e1;
t467 = -t244 / 0.2e1;
t466 = -t248 / 0.2e1;
t465 = t248 / 0.2e1;
t464 = -t270 / 0.2e1;
t463 = t274 / 0.2e1;
t462 = t276 / 0.2e1;
t459 = t249 * pkin(3);
t458 = t249 * pkin(4);
t456 = -pkin(8) + qJ(4);
t135 = -t246 * t409 + t208;
t209 = t249 * t405;
t136 = t249 * t409 - t209;
t282 = t169 + (-pkin(8) * t249 - t148) * t276 - t469 * t246;
t151 = t274 * t249;
t48 = pkin(8) * t151 + t64;
t22 = t278 * t48 - t280 * t282;
t184 = t461 * t257 + t279 * t259;
t168 = t274 * t184;
t419 = t246 * qJ(4);
t172 = t419 + t459;
t41 = -t168 + (pkin(8) * t246 - t172) * t276 - t469 * t249;
t451 = t280 * t41;
t150 = t274 * t246;
t170 = t276 * t184;
t98 = t274 * t172 - t170;
t72 = t249 * qJ(5) + t98;
t52 = -pkin(8) * t150 + t72;
t452 = t278 * t52;
t73 = -t249 * t471 - t184;
t74 = t246 * t471 - t186;
t1 = -(t451 - t452) * t246 + t22 * t249 + t74 * t136 + t73 * t135;
t455 = t1 * qJD(1);
t23 = t278 * t282 + t280 * t48;
t420 = t244 * t246;
t450 = t280 * t52;
t453 = t278 * t41;
t2 = (t450 + t453) * t246 + t23 * t249 + t74 * t415 - t73 * t420;
t454 = t2 * qJD(1);
t316 = -t436 + t460;
t100 = -t246 * t316 + t186;
t411 = t276 * t172;
t97 = t168 + t411;
t75 = -t97 - t458;
t99 = t249 * t316 + t184;
t3 = t99 * t100 + t64 * t72 + t65 * t75;
t449 = t3 * qJD(1);
t256 = t456 * t274;
t258 = t456 * t276;
t185 = t278 * t256 + t280 * t258;
t328 = t274 * qJ(5) + pkin(3);
t231 = t276 * t469 + t328;
t284 = t185 * t246 / 0.2e1 + t231 * t415 / 0.2e1 + t73 * t465;
t302 = -t452 / 0.2e1 + t451 / 0.2e1;
t4 = -t284 + t302;
t448 = t4 * qJD(1);
t183 = -t280 * t256 + t278 * t258;
t285 = -t183 * t246 / 0.2e1 - t231 * t136 / 0.2e1 + t73 * t467;
t303 = -t453 / 0.2e1 - t450 / 0.2e1;
t5 = -t285 + t303;
t447 = t5 * qJD(1);
t446 = t64 * t246;
t154 = t276 * t246;
t8 = t65 * t154 - t75 * t155 + (t249 * t72 - t446) * t274;
t442 = t8 * qJD(1);
t9 = -t73 * t136 - t22 * t246;
t440 = t9 * qJD(1);
t439 = t97 * t276;
t438 = t98 * t274;
t437 = t99 * t274;
t10 = t23 * t246 + t415 * t73;
t435 = t10 * qJD(1);
t434 = t100 * t274;
t11 = (-t100 * t276 + t64) * t249 + (t276 * t99 + t72) * t246;
t433 = t11 * qJD(1);
t12 = (-t65 + t434) * t249 + (-t75 - t437) * t246;
t432 = t12 * qJD(1);
t314 = -t274 * t80 - t276 * t79;
t13 = (t438 + t439) * t249 + t314 * t246;
t431 = t13 * qJD(1);
t430 = t135 * t246;
t429 = t420 * t246;
t14 = t184 * t186 + t79 * t97 + t80 * t98;
t428 = t14 * qJD(1);
t427 = t415 * t249;
t15 = t99 * t249 + (-t444 - t445) * t246;
t426 = t15 * qJD(1);
t16 = (t79 + t169) * t249 + (t97 - t168) * t246;
t425 = t16 * qJD(1);
t17 = (-t80 + t171) * t249 + (-t98 - t170) * t246;
t424 = t17 * qJD(1);
t329 = t464 - t272 / 0.2e1;
t305 = t329 * t419;
t253 = -t276 * pkin(4) - t328;
t414 = t249 * t253;
t283 = t305 + t414 / 0.2e1;
t300 = -t72 * t274 / 0.2e1 + t75 * t462;
t20 = t283 + t300;
t422 = t20 * qJD(1);
t24 = t184 * t249 + (-t441 + t443) * t246;
t421 = t24 * qJD(1);
t418 = t248 * t246;
t111 = t248 * t249;
t416 = t249 * t136;
t25 = (-t274 * t64 + t276 * t65) * t249;
t413 = t25 * qJD(1);
t297 = t419 / 0.2e1 - t414 / 0.2e1;
t320 = t168 / 0.2e1 + t458 / 0.2e1;
t351 = -t437 / 0.2e1;
t27 = t351 + (t172 / 0.2e1 + t297) * t276 + t320;
t412 = t27 * qJD(1);
t286 = t305 - t459 / 0.2e1;
t298 = -t439 / 0.2e1 - t438 / 0.2e1;
t28 = t286 + t298;
t406 = t28 * qJD(1);
t30 = -t155 * t99 + t446;
t403 = t30 * qJD(1);
t33 = t314 * t249;
t401 = t33 * qJD(1);
t36 = -t135 * t415 + t136 * t420;
t400 = t36 * qJD(1);
t44 = t416 + t430;
t399 = t44 * qJD(1);
t45 = -t416 + t430;
t398 = t45 * qJD(1);
t46 = -t427 - t429;
t397 = t46 * qJD(1);
t47 = -t427 + t429;
t396 = t47 * qJD(1);
t62 = -t136 * t155 - t278 * t470;
t395 = t62 * qJD(1);
t78 = t155 * t415 + t280 * t470;
t394 = t78 * qJD(1);
t332 = t409 / 0.2e1;
t86 = t468 + (t332 + t465) * t246;
t393 = t86 * qJD(1);
t87 = t468 + (t332 + t466) * t246;
t83 = t87 * qJD(1);
t339 = -t420 / 0.2e1;
t88 = t339 - t485;
t392 = t88 * qJD(1);
t312 = t339 + t485;
t391 = t312 * qJD(1);
t338 = t420 / 0.2e1;
t311 = t338 + t485;
t390 = t311 * qJD(1);
t264 = t275 ^ 2 + t277 ^ 2;
t384 = qJD(2) * t249;
t383 = qJD(3) * t276;
t381 = qJD(6) * t246;
t104 = t263 * t242;
t380 = t104 * qJD(1);
t378 = t111 * qJD(1);
t319 = t329 * t249;
t125 = t319 - t239;
t377 = t125 * qJD(1);
t133 = t470 - t242;
t374 = t133 * qJD(1);
t373 = t136 * qJD(6);
t372 = t150 * qJD(1);
t371 = t151 * qJD(1);
t370 = t154 * qJD(1);
t158 = t278 * t246;
t368 = t158 * qJD(1);
t160 = t263 * t246;
t367 = t160 * qJD(1);
t364 = t239 * qJD(1);
t363 = t244 * qJD(3);
t232 = t244 * qJD(6);
t233 = t246 * qJD(3);
t234 = t248 * qJD(6);
t360 = t249 * qJD(1);
t359 = t249 * qJD(3);
t254 = t264 * qJ(2);
t358 = t254 * qJD(1);
t356 = t263 * qJD(3);
t355 = t264 * qJD(1);
t353 = t274 * qJD(5);
t346 = t111 * t362;
t345 = t246 * t360;
t344 = t246 * t359;
t343 = t276 * t353;
t342 = t274 * t360;
t341 = t276 * t360;
t340 = t276 * t359;
t337 = t136 * t463;
t336 = t415 * t463;
t335 = t155 / 0.2e1;
t327 = qJD(1) * t269 + qJD(2);
t326 = -qJD(6) + t362;
t325 = qJD(3) * t231 - qJD(4);
t324 = t246 * t342;
t322 = t276 * t242 * t274 * qJD(1);
t321 = t246 * t341;
t318 = (t464 + t272 / 0.2e1) * t249;
t315 = t75 * t274 + t72 * t276;
t313 = -t97 * t274 + t98 * t276;
t310 = t246 * t253 + t417;
t35 = t244 * t136 - t248 * t415;
t38 = t136 ^ 2 - t415 ^ 2;
t309 = t38 * qJD(1) + t35 * qJD(3);
t132 = t244 ^ 2 - t248 ^ 2;
t308 = t35 * qJD(1) + t132 * qJD(3);
t69 = -t209 / 0.2e1 + (t409 - t405 / 0.2e1) * t249;
t307 = t69 * qJD(1) + t363;
t304 = t246 * t332 + t468;
t43 = t136 * t466 + t415 * t467;
t296 = -t43 * qJD(3) + t136 * t472;
t295 = -t43 * qJD(1) + t244 * t361;
t57 = t337 + (t244 * t462 + t280 / 0.2e1) * t249;
t294 = t57 * qJD(1) + t244 * t354;
t59 = t336 + (t248 * t462 - t278 / 0.2e1) * t249;
t293 = t59 * qJD(1) + t248 * t354;
t122 = t318 + t239;
t292 = t122 * qJD(1) + t276 * t354;
t291 = -t239 * qJD(6) + t345;
t288 = -t154 * qJD(3) + t324;
t165 = t272 * t242 + t470;
t287 = t165 * qJD(1) + t274 * t340;
t260 = t263 * qJD(4);
t250 = t255 * qJD(4);
t228 = t239 * qJD(3);
t189 = t249 * t343;
t187 = t270 * qJD(3) + t274 * t341;
t146 = t160 * qJD(2);
t144 = t160 * qJD(3);
t124 = t319 + t239;
t123 = t318 - t239;
t120 = t125 * qJD(2);
t118 = t125 * qJD(4);
t117 = t124 * qJD(2);
t116 = t124 * qJD(4);
t102 = t104 * qJD(4);
t95 = t418 / 0.2e1 + t304;
t94 = -t418 / 0.2e1 + t304;
t93 = t338 - t485;
t85 = t95 * qJD(6);
t84 = t87 * qJD(6);
t63 = -t234 - t83;
t58 = t336 + t248 * t335 + t278 * t249 / 0.2e1;
t56 = t337 + t244 * t335 - t280 * t249 / 0.2e1;
t42 = t43 * qJD(6);
t34 = t35 * qJD(6);
t32 = t289 + t299;
t29 = t286 - t298;
t26 = t351 - t411 / 0.2e1 + t297 * t276 - t320;
t21 = t283 - t300;
t19 = t281 + t301;
t7 = t284 + t302;
t6 = t285 + t303;
t37 = [0, 0, 0, 0, 0, t264 * qJD(2), t254 * qJD(2), -t344, t133 * qJD(3), 0, 0, 0, t269 * t359, -t269 * t233, t16 * qJD(3) - t276 * t348 + t482, t17 * qJD(3) + t481, -t13 * qJD(3) + t102, t24 * qJD(2) + t14 * qJD(3) + t33 * qJD(4), t482 + t12 * qJD(3) + (-t242 * t353 - t348) * t276, -t246 * t249 * t353 - t8 * qJD(3) + t102, t11 * qJD(3) + t165 * qJD(5) - t481, t15 * qJD(2) + t3 * qJD(3) + t25 * qJD(4) + t30 * qJD(5) (-qJD(3) * t420 - t373) * t415, t36 * qJD(3) + t38 * qJD(6), t47 * qJD(3) + t246 * t373, t44 * qJD(3) + t381 * t415, t344, t45 * qJD(2) + t1 * qJD(3) - t62 * qJD(5) + t10 * qJD(6) - t382 * t415, t46 * qJD(2) + t2 * qJD(3) + t78 * qJD(5) + t9 * qJD(6) - t111 * t382; 0, 0, 0, 0, 0, t355, t358, 0, 0, 0, 0, 0, 0, 0, t483, t484, 0, t29 * qJD(3) + t116 + t421, t483, 0, -t484, t21 * qJD(3) + t116 + t426, 0, 0, 0, 0, 0, t85 + t398, qJD(6) * t312 + t397; 0, 0, 0, 0, 0, 0, 0, -t345, t374, -t233, -t359, 0, -t186 * qJD(3) + t269 * t360, t184 * qJD(3) - t269 * t362, t425 + (t274 * t317 - t171) * qJD(3) - t150 * qJD(4), t424 + t169 * qJD(3) + (qJD(3) * t317 - t382) * t276, qJD(3) * t313 - t431, t428 + t29 * qJD(2) + (-t186 * pkin(3) + qJ(4) * t313) * qJD(3) + t32 * qJD(4), -t100 * t383 + t432 + t123 * qJD(5) + (-qJD(3) * t310 - t382) * t274, qJD(3) * t315 - t442, t433 + (t276 * t310 - t434) * qJD(3) + t154 * qJD(4) + t189, t449 + t21 * qJD(2) + (qJ(4) * t315 + t100 * t253) * qJD(3) + t19 * qJD(4) + t26 * qJD(5), -t306 * t420 + t42, t400 + (-t248 * t135 + t244 * t420) * qJD(3) + t34, t93 * qJD(6) - t248 * t359 + t396, t244 * t359 + t399 + t85, t291, t455 + (t231 * t135 + t183 * t249 + t74 * t244) * qJD(3) + t94 * qJD(4) + t56 * qJD(5) + t7 * qJD(6), t454 + (t185 * t249 - t231 * t420 + t74 * t248) * qJD(3) + t311 * qJD(4) + t58 * qJD(5) + t6 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * qJD(3) - t321 (t342 - t383) * t246, t380, t32 * qJD(3) + t117 + t401 (-t341 - t354) * t246, t380, -t288, t19 * qJD(3) + t117 + t413, 0, 0, 0, 0, 0, t94 * qJD(3) - t347, qJD(3) * t311 - t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 * qJD(3) - t322, -t324, t287, t26 * qJD(3) + t403, 0, 0, 0, 0, 0, t56 * qJD(3) - t395, t58 * qJD(3) + t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, t309, t93 * qJD(3) + t136 * t326, t95 * qJD(3) + t326 * t415, -t228, t95 * qJD(2) + t7 * qJD(3) - t23 * qJD(6) + t435, qJD(2) * t312 + t6 * qJD(3) + t22 * qJD(6) + t440; 0, 0, 0, 0, 0, -t355, -t358, 0, 0, 0, 0, 0, t359, -t233, t340 - t483, -t151 * qJD(3) - t484, t144, -t28 * qJD(3) + t118 - t421, t155 * qJD(3) - t483, t144, t249 * t354 + t484, -t20 * qJD(3) + t150 * qJD(5) + t118 - t426, 0, 0, 0, 0, 0, qJD(3) * t415 - t398 - t84, t111 * qJD(3) - qJD(6) * t311 - t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t360, -t362, t341, -t371, t367, -t406, t369, t367, t342, -t422, 0, 0, 0, 0, 0, t472, t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, 0, 0, 0, t377, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t232 - t390; 0, 0, 0, 0, 0, 0, 0, t345, -t374, 0, 0, 0, -t327 * t249, t327 * t246, -t276 * t384 - t425, t151 * qJD(2) - t424, -t146 + t431, t28 * qJD(2) - t31 * qJD(4) - t428, -t155 * qJD(2) + t122 * qJD(5) - t432, t154 * qJD(5) - t146 + t442, -t274 * t384 + t189 - t433, t20 * qJD(2) - t18 * qJD(4) + t27 * qJD(5) - t449, t420 * t472 + t42, t34 - t400, -t88 * qJD(6) - t396, -t84 - t399, -t291, -qJD(2) * t415 - t86 * qJD(4) + t57 * qJD(5) - t4 * qJD(6) - t455, -t111 * qJD(2) - qJD(4) * t312 + t59 * qJD(5) - t5 * qJD(6) - t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360, t362, -t341, t371, -t367, t406, -t369, -t367, -t342, t422, 0, 0, 0, 0, 0, -t472, -t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t250, t343, t260, t270 * qJD(5), -t253 * t353 + t250, -t244 * t234, t132 * qJD(6), 0, 0, 0, t231 * t234 + t244 * t353, -t231 * t232 + t248 * t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t474, 0, t356, 0, t473, 0, 0, 0, 0, 0, -t393, -t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292, t370, t187, -t253 * t354 + t412, 0, 0, 0, 0, 0, t294, t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, t308, -t232 - t392, t63, t364, -t185 * qJD(6) + t231 * t361 - t448, t183 * qJD(6) - t231 * t363 - t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, -t324, -t380, t31 * qJD(3) - t120 - t401, t321, -t380, t324, t18 * qJD(3) - t155 * qJD(5) - t120 - t413, 0, 0, 0, 0, 0, t86 * qJD(3) - qJD(6) * t415 + t347, qJD(3) * t312 + t69 * qJD(6) + t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t377, 0, 0, 0, -t377, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356, -t474, 0, -t356, 0, -t353 - t473, 0, 0, 0, 0, 0, -t234 + t393, t232 + t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t306, t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122 * qJD(3) + t322, t288, -t287, -t150 * qJD(2) - t27 * qJD(3) + t155 * qJD(4) - t403, 0, 0, 0, 0, 0, -t57 * qJD(3) + t158 * qJD(6) + t395, -t59 * qJD(3) + t280 * t381 - t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292, -t370, -t187, -t412 + (t253 * qJD(3) + qJD(4)) * t274, 0, 0, 0, 0, 0, -t294, -t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t278 + t368, t326 * t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, -t309, t88 * qJD(3) - t136 * t362, t87 * qJD(3) - t347, -t228, t87 * qJD(2) + t4 * qJD(3) + qJD(4) * t415 - t158 * qJD(5) - t435, -t280 * t246 * qJD(5) + qJD(2) * t311 + t5 * qJD(3) - t69 * qJD(4) - t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, -t308, t392, t83, -t364, -t248 * t325 + t448, t244 * t325 + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, -t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, -t280 * t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t37;
