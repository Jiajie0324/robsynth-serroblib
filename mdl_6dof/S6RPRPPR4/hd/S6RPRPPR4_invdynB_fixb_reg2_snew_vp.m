% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 16:51
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRPPR4_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR4_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR4_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPPR4_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPPR4_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR4_invdynB_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 16:49:57
% EndTime: 2019-05-05 16:50:35
% DurationCPUTime: 39.30s
% Computational Cost: add. (103860->767), mult. (259890->1107), div. (0->0), fcn. (195916->10), ass. (0->547)
t1003 = sin(qJ(1));
t1006 = cos(qJ(1));
t1000 = cos(pkin(9));
t1002 = sin(qJ(3));
t1005 = cos(qJ(3));
t998 = sin(pkin(9));
t1026 = t1000 * t1002 + t1005 * t998;
t971 = t1026 * qJD(1);
t997 = sin(pkin(10));
t999 = cos(pkin(10));
t945 = -t999 * qJD(3) + t971 * t997;
t1071 = t1002 * t998;
t969 = (-t1000 * t1005 + t1071) * qJD(1);
t1091 = t945 * t969;
t1060 = t969 * qJD(3);
t1128 = t1026 * qJDD(1);
t924 = t1128 - t1060;
t901 = qJDD(3) * t997 + t924 * t999;
t1141 = t901 - t1091;
t948 = qJD(3) * t997 + t971 * t999;
t889 = t948 * t945;
t1059 = t971 * qJD(3);
t1055 = qJDD(1) * t1000;
t967 = qJDD(1) * t1071 - t1005 * t1055;
t922 = t967 + t1059;
t1143 = t889 + t922;
t1098 = t1143 * t999;
t1115 = t969 ^ 2;
t940 = t948 ^ 2;
t874 = -t940 - t1115;
t758 = t874 * t997 + t1098;
t699 = t1002 * t758 + t1005 * t1141;
t701 = -t1002 * t1141 + t1005 * t758;
t634 = t1000 * t701 - t699 * t998;
t1099 = t1143 * t997;
t772 = t874 * t999 - t1099;
t606 = t1003 * t634 + t1006 * t772;
t1242 = pkin(6) * t606;
t608 = -t1003 * t772 + t1006 * t634;
t1241 = pkin(6) * t608;
t632 = t1000 * t699 + t701 * t998;
t1240 = qJ(2) * t632;
t1239 = -pkin(1) * t632 - pkin(2) * t699 - qJ(4) * t758;
t1238 = pkin(1) * t772 + qJ(2) * t634;
t1038 = -t999 * qJDD(3) + t924 * t997;
t1090 = t969 * t948;
t1022 = t1038 + t1090;
t1102 = t1141 * t997;
t748 = -t1022 * t999 - t1102;
t1116 = t945 ^ 2;
t885 = t940 - t1116;
t710 = t1002 * t748 - t1005 * t885;
t712 = t1002 * t885 + t1005 * t748;
t647 = t1000 * t712 - t710 * t998;
t743 = -t1022 * t997 + t1141 * t999;
t1237 = t1003 * t647 - t1006 * t743;
t1023 = -t1038 + t1090;
t903 = t1116 - t1115;
t798 = t903 * t999 - t1099;
t732 = t1002 * t798 - t1005 * t1023;
t736 = t1002 * t1023 + t1005 * t798;
t664 = t1000 * t736 - t732 * t998;
t793 = t903 * t997 + t1098;
t1236 = t1003 * t664 - t1006 * t793;
t1235 = t1003 * t743 + t1006 * t647;
t1234 = t1003 * t793 + t1006 * t664;
t1233 = pkin(7) * t699;
t1231 = pkin(2) * t772 + pkin(7) * t701;
t1039 = -t922 + t889;
t1097 = t1039 * t997;
t904 = -t940 + t1115;
t1198 = -t904 * t999 + t1097;
t1142 = -t901 - t1091;
t1096 = t1039 * t999;
t1197 = -t904 * t997 - t1096;
t1204 = -t1002 * t1142 + t1005 * t1197;
t1206 = t1002 * t1197 + t1005 * t1142;
t1223 = t1000 * t1204 - t1206 * t998;
t1230 = t1003 * t1223 + t1006 * t1198;
t1229 = -t1003 * t1198 + t1006 * t1223;
t1228 = t1000 * t710 + t712 * t998;
t1227 = t1000 * t732 + t736 * t998;
t1129 = -t1115 - t1116;
t1153 = t1129 * t997 - t1096;
t1152 = t1129 * t999 + t1097;
t1170 = t1002 * t1022 + t1005 * t1152;
t1173 = t1002 * t1152 - t1005 * t1022;
t1189 = t1000 * t1170 - t1173 * t998;
t1203 = t1003 * t1153 + t1006 * t1189;
t1226 = pkin(6) * t1203;
t1205 = t1003 * t1189 - t1006 * t1153;
t1225 = pkin(6) * t1205;
t1224 = t1000 * t1206 + t1204 * t998;
t1220 = pkin(3) * t772;
t1124 = t1023 * t997 + t1142 * t999;
t1123 = t1023 * t999 - t1142 * t997;
t1140 = t940 + t1116;
t1144 = t1002 * t1123 + t1005 * t1140;
t1145 = -t1002 * t1140 + t1005 * t1123;
t1167 = t1000 * t1145 - t1144 * t998;
t1191 = t1003 * t1124 + t1006 * t1167;
t1219 = pkin(6) * t1191;
t1192 = t1003 * t1167 - t1006 * t1124;
t1218 = pkin(6) * t1192;
t1216 = qJ(4) * t772;
t1190 = t1000 * t1173 + t1170 * t998;
t1215 = qJ(2) * t1190;
t1208 = -pkin(1) * t1190 - pkin(2) * t1173 - qJ(4) * t1152;
t1207 = -pkin(1) * t1153 + qJ(2) * t1189;
t1202 = pkin(7) * t1173;
t1166 = t1000 * t1144 + t1145 * t998;
t1201 = qJ(2) * t1166;
t1196 = -pkin(1) * t1166 - pkin(2) * t1144 - pkin(3) * t1140 - qJ(4) * t1123;
t1194 = -pkin(2) * t1153 + pkin(7) * t1170;
t1193 = -pkin(1) * t1124 + qJ(2) * t1167;
t1186 = pkin(3) * t1153;
t1185 = pkin(7) * t1144;
t1184 = pkin(7) * t1145;
t1182 = qJ(4) * t1153;
t982 = t1006 * g(1) + t1003 * g(2);
t1179 = -0.2e1 * qJD(2) * qJD(1) + t982;
t1089 = t969 * t997;
t1051 = t945 * t1089;
t1088 = t969 * t999;
t900 = t948 * t1088;
t1032 = t900 + t1051;
t1050 = t945 * t1088;
t899 = t948 * t1089;
t1033 = t899 - t1050;
t1072 = t1002 * t922;
t1120 = t1005 * t1033 + t1072;
t912 = t1005 * t922;
t1125 = t1002 * t1033 - t912;
t1148 = t1000 * t1120 - t1125 * t998;
t1172 = t1003 * t1148 + t1006 * t1032;
t1016 = t1038 * t999 - t1051;
t1015 = t1038 * t997 + t1050;
t1048 = t1002 * t889;
t1121 = t1005 * t1015 - t1048;
t1045 = t1005 * t889;
t1122 = t1002 * t1015 + t1045;
t1146 = t1000 * t1121 - t1122 * t998;
t1171 = t1003 * t1146 + t1006 * t1016;
t1169 = -t1003 * t1032 + t1006 * t1148;
t1168 = -t1003 * t1016 + t1006 * t1146;
t1165 = 2 * qJD(5);
t1163 = qJ(4) * t1124;
t1162 = qJ(5) * t1141;
t928 = t971 * t969;
t1131 = qJDD(3) - t928;
t1161 = t1002 * t1131;
t1158 = t1005 * t1131;
t1007 = qJD(1) ^ 2;
t1155 = -t1007 * pkin(1) + qJDD(1) * qJ(2) - t1179;
t827 = t901 * t999 - t899;
t1029 = t1002 * t827 - t1045;
t1030 = t1005 * t827 + t1048;
t1118 = t1000 * t1030 - t1029 * t998;
t826 = -t901 * t997 - t900;
t1154 = t1003 * t1118 + t1006 * t826;
t1151 = -t1003 * t826 + t1006 * t1118;
t981 = t1003 * g(1) - t1006 * g(2);
t1028 = -qJDD(2) + t981;
t1043 = pkin(2) * t1000 + pkin(1);
t993 = t998 ^ 2;
t994 = t1000 ^ 2;
t1084 = t993 + t994;
t917 = t1043 * qJDD(1) + (pkin(7) * t1084 + qJ(2)) * t1007 + t1028;
t1149 = t1000 * t1125 + t1120 * t998;
t1147 = t1000 * t1122 + t1121 * t998;
t1001 = sin(qJ(6));
t1004 = cos(qJ(6));
t881 = t1001 * t948 - t1004 * t945;
t883 = t1001 * t945 + t1004 * t948;
t1095 = t881 * t883;
t915 = qJDD(6) - t922;
t1013 = t915 - t1095;
t1139 = t1001 * t1013;
t1135 = t1004 * t1013;
t1114 = qJD(3) ^ 2;
t1110 = t1000 * g(3);
t1010 = -t1110 + (t1043 * t1007 + (-pkin(7) - qJ(2)) * qJDD(1) + t1179) * t998;
t930 = -g(3) * t998 + t1000 * t1155;
t990 = t994 * t1007;
t906 = -pkin(2) * t990 + pkin(7) * t1055 + t930;
t818 = t1002 * t1010 + t1005 * t906;
t914 = pkin(3) * t969 - qJ(4) * t971;
t770 = -pkin(3) * t1114 + qJDD(3) * qJ(4) - t914 * t969 + t818;
t789 = (-t924 + t1060) * qJ(4) + (t922 + t1059) * pkin(3) - t917;
t1086 = t999 * t770 + t997 * t789;
t884 = pkin(4) * t945 - qJ(5) * t948;
t1130 = t922 * qJ(5) + t1165 * t969 - t945 * t884 + t1086;
t1126 = t1007 * t1084;
t1117 = t1000 * t1029 + t1030 * t998;
t879 = t881 ^ 2;
t880 = t883 ^ 2;
t960 = -qJD(6) + t969;
t959 = t960 ^ 2;
t966 = t971 ^ 2;
t1113 = pkin(4) + pkin(5);
t1112 = pkin(4) * t999;
t1111 = pkin(3) * t1002;
t1109 = qJ(5) * t999;
t1108 = qJDD(1) * pkin(1);
t817 = t1002 * t906 - t1005 * t1010;
t741 = t1002 * t818 - t1005 * t817;
t1107 = t741 * t998;
t767 = -qJDD(3) * pkin(3) - t1114 * qJ(4) + t971 * t914 + qJDD(4) + t817;
t1106 = t767 * t997;
t1105 = t767 * t999;
t1094 = t881 * t960;
t1087 = t997 * t770 - t999 * t789;
t1085 = t1140 - t1115;
t1083 = qJD(4) * t945;
t1082 = qJD(4) * t948;
t1080 = t1000 * t741;
t1079 = t1000 * t998;
t1034 = -pkin(5) * t969 - pkin(8) * t948;
t1012 = t1038 * pkin(4) - t1162 + t767;
t675 = (pkin(4) * t969 - (2 * qJD(5))) * t948 + t1012;
t638 = pkin(5) * t1038 + pkin(8) * t1116 - t1034 * t948 + t675;
t1078 = t1001 * t638;
t776 = -t915 - t1095;
t1077 = t1001 * t776;
t1076 = t1001 * t960;
t1074 = t1002 * t917;
t919 = qJDD(3) + t928;
t1073 = t1002 * t919;
t962 = t1007 * qJ(2) + t1028 + t1108;
t1069 = t1003 * t962;
t1068 = t1004 * t638;
t1067 = t1004 * t776;
t1066 = t1004 * t960;
t1064 = t1005 * t917;
t1063 = t1005 * t919;
t1062 = t1006 * t962;
t1061 = t1007 * t993;
t1057 = qJD(3) * t1002;
t1056 = qJD(3) * t1005;
t1054 = qJDD(1) * t1003;
t1053 = qJDD(1) * t1006;
t937 = 0.2e1 * t1082;
t678 = t937 + t1087;
t935 = -0.2e1 * t1083;
t679 = t935 + t1086;
t769 = -t881 * qJD(6) + t1001 * t1038 + t1004 * t901;
t1049 = t1002 * t1095;
t1047 = t1003 * t928;
t1046 = t1005 * t1095;
t1044 = t1006 * t928;
t1042 = -pkin(3) * t1005 - pkin(2);
t1041 = qJ(5) * t997 + pkin(3);
t1040 = t962 + t1108;
t929 = t1155 * t998 + t1110;
t863 = t1000 * t930 + t929 * t998;
t1035 = t948 * t884 + qJDD(5) + t1087;
t1021 = -t922 * pkin(4) + t1035;
t1017 = -qJ(5) * t1115 + t1021;
t617 = t1039 * pkin(5) + pkin(8) * t1142 + t1017 + t937;
t1024 = t935 + t1130;
t645 = -pkin(4) * t1115 + t1024;
t618 = -pkin(5) * t1116 + pkin(8) * t1038 + t1034 * t969 + t645;
t560 = t1001 * t618 - t1004 * t617;
t1037 = t1001 * t901 - t1004 * t1038;
t742 = t1002 * t817 + t1005 * t818;
t949 = -t1003 * t981 - t1006 * t982;
t980 = -t1003 * t1007 + t1053;
t1031 = -pkin(6) * t980 - g(3) * t1003;
t610 = -t678 * t999 + t679 * t997;
t611 = t678 * t997 + t679 * t999;
t862 = t1000 * t929 - t930 * t998;
t561 = t1001 * t617 + t1004 * t618;
t522 = t1001 * t561 - t1004 * t560;
t523 = t1001 * t560 + t1004 * t561;
t1027 = t1003 * t982 - t1006 * t981;
t1025 = t769 + t1094;
t979 = t1006 * t1007 + t1054;
t973 = t1000 * t1126;
t942 = t1000 * t1053 - t1003 * t973;
t1020 = t1000 * t1054 + t1006 * t973;
t1018 = (-qJD(6) - t960) * t883 - t1037;
t1011 = t1165 * t948 - t1012;
t988 = t994 * qJDD(1);
t986 = t993 * qJDD(1);
t978 = t990 - t1061;
t977 = t990 + t1061;
t976 = t988 - t986;
t975 = t988 + t986;
t972 = t998 * t1126;
t963 = -pkin(6) * t979 + g(3) * t1006;
t954 = -t966 + t1114;
t953 = -t966 - t1114;
t952 = t1115 - t1114;
t951 = t980 * t1079;
t950 = t979 * t1079;
t943 = t1006 * t972 + t1054 * t998;
t941 = t1003 * t972 - t1053 * t998;
t932 = -t1003 * t977 + t1006 * t975;
t931 = t1003 * t975 + t1006 * t977;
t926 = -t966 + t1115;
t923 = t1128 - 0.2e1 * t1060;
t921 = t967 + 0.2e1 * t1059;
t916 = -t1115 - t1114;
t908 = (t1002 * t971 - t1005 * t969) * qJD(3);
t907 = (-t1002 * t969 - t1005 * t971) * qJD(3);
t890 = -t1115 - t966;
t878 = t1005 * t924 - t1057 * t971;
t877 = t1002 * t924 + t1056 * t971;
t876 = t1056 * t969 + t1072;
t875 = t1057 * t969 - t912;
t871 = -t1002 * t953 - t1063;
t870 = -t1002 * t954 + t1158;
t869 = t1005 * t952 - t1073;
t868 = t1005 * t953 - t1073;
t867 = t1005 * t954 + t1161;
t866 = t1002 * t952 + t1063;
t858 = -t1002 * t923 - t1005 * t921;
t857 = t1002 * t1128 - t1005 * t967;
t856 = -t1002 * t921 + t1005 * t923;
t855 = -t1002 * t967 - t1005 * t1128;
t854 = -t880 + t959;
t853 = t879 - t959;
t852 = t1005 * t916 - t1161;
t851 = t1002 * t916 + t1158;
t828 = t1000 * t908 - t907 * t998;
t821 = t1006 * t863 - t1069;
t820 = t1003 * t863 + t1062;
t819 = -t880 - t959;
t812 = -pkin(7) * t868 - t1064;
t811 = t880 - t879;
t810 = -pkin(7) * t851 - t1074;
t809 = t1000 * t878 - t877 * t998;
t808 = t1000 * t876 - t875 * t998;
t807 = t1000 * t871 - t868 * t998;
t806 = t1000 * t870 - t867 * t998;
t805 = t1000 * t869 - t866 * t998;
t804 = t1000 * t868 + t871 * t998;
t799 = -t959 - t879;
t790 = -pkin(2) * t923 + pkin(7) * t871 - t1074;
t771 = -pkin(2) * t921 + pkin(7) * t852 + t1064;
t768 = -qJD(6) * t883 - t1037;
t766 = (-t1001 * t883 + t1004 * t881) * t960;
t765 = (-t1001 * t881 - t1004 * t883) * t960;
t762 = t1000 * t858 - t856 * t998;
t761 = t1000 * t857 - t855 * t998;
t760 = t1000 * t855 + t857 * t998;
t755 = t1000 * t852 - t851 * t998;
t754 = t1000 * t851 + t852 * t998;
t753 = t1003 * t923 + t1006 * t807;
t752 = t1003 * t807 - t1006 * t923;
t751 = -t879 - t880;
t740 = t1003 * t921 + t1006 * t755;
t739 = t1003 * t755 - t1006 * t921;
t738 = t1003 * t890 + t1006 * t761;
t737 = t1003 * t761 - t1006 * t890;
t727 = -t769 + t1094;
t723 = (qJD(6) - t960) * t883 + t1037;
t722 = pkin(2) * t917 + pkin(7) * t742;
t721 = t1004 * t853 + t1077;
t720 = -t1001 * t854 + t1135;
t719 = -t1001 * t853 + t1067;
t718 = -t1004 * t854 - t1139;
t717 = t1004 * t769 + t1076 * t883;
t716 = -t1001 * t769 + t1066 * t883;
t715 = -t1001 * t768 - t1066 * t881;
t714 = -t1004 * t768 + t1076 * t881;
t713 = -pkin(1) * t760 - pkin(2) * t855;
t704 = -t1001 * t819 + t1067;
t703 = t1004 * t819 + t1077;
t692 = -pkin(7) * t855 - t741;
t691 = -pkin(1) * t804 - pkin(2) * t868 + t818;
t690 = t1004 * t799 - t1139;
t689 = t1001 * t799 + t1135;
t684 = t1105 - t1216;
t683 = -t765 * t997 + t766 * t999;
t682 = -t765 * t999 - t766 * t997;
t681 = t1106 - t1182;
t680 = -pkin(2) * t890 + pkin(7) * t857 + t742;
t677 = -pkin(1) * t754 - pkin(2) * t851 + t817;
t676 = -pkin(3) * t1124 - pkin(4) * t1142 - qJ(5) * t1023;
t674 = -t1002 * t915 + t1005 * t683;
t673 = t1002 * t683 + t1005 * t915;
t672 = -qJ(2) * t804 + t1000 * t812 - t790 * t998;
t671 = t1000 * t742 - t1107;
t670 = t742 * t998 + t1080;
t669 = -qJ(2) * t754 + t1000 * t810 - t771 * t998;
t668 = -t1003 * t917 + t1006 * t671;
t667 = t1003 * t671 + t1006 * t917;
t666 = (-t1022 - t1090) * pkin(4) + t1011;
t665 = -pkin(4) * t1090 + t1011 + t1162;
t660 = -t1001 * t727 + t1004 * t1018;
t659 = -t1001 * t1025 - t1004 * t723;
t658 = t1001 * t1018 + t1004 * t727;
t657 = t1001 * t723 - t1004 * t1025;
t656 = -t1017 - 0.2e1 * t1082;
t655 = -t719 * t997 + t721 * t999;
t654 = -t718 * t997 + t720 * t999;
t653 = -t719 * t999 - t721 * t997;
t652 = -t718 * t999 - t720 * t997;
t651 = -t716 * t997 + t717 * t999;
t650 = -t714 * t997 + t715 * t999;
t649 = -t716 * t999 - t717 * t997;
t648 = -t714 * t999 - t715 * t997;
t644 = t679 - t1220;
t643 = t678 - t1186;
t637 = t703 * t997 + t704 * t999;
t636 = -t703 * t999 + t704 * t997;
t627 = qJ(5) * t1085 + t1021 + t937;
t626 = pkin(4) * t1085 + t1024;
t625 = t689 * t997 + t690 * t999;
t624 = -t689 * t999 + t690 * t997;
t623 = t1005 * t651 - t1049;
t622 = t1005 * t650 + t1049;
t621 = t1002 * t651 + t1046;
t620 = t1002 * t650 - t1046;
t619 = -pkin(1) * t670 - pkin(2) * t741;
t605 = -t1022 * t1109 - t666 * t997 - t1182;
t604 = -pkin(4) * t1102 + t665 * t999 + t1216;
t603 = -t1002 * t1018 + t1005 * t655;
t602 = t1002 * t727 + t1005 * t654;
t601 = t1002 * t655 + t1005 * t1018;
t600 = t1002 * t654 - t1005 * t727;
t595 = t1000 * t674 - t673 * t998;
t594 = -t1002 * t1025 + t1005 * t637;
t593 = t1002 * t637 + t1005 * t1025;
t592 = -qJ(2) * t760 + t1000 * t692 - t680 * t998;
t591 = -t1186 + t937 + (-t1129 - t1115) * qJ(5) + (t1039 - t922) * pkin(4) + t1035;
t590 = t1220 - qJ(5) * t1143 + 0.2e1 * t1083 + (t874 + t1115) * pkin(4) - t1130;
t589 = -t1002 * t723 + t1005 * t625;
t588 = t1002 * t625 + t1005 * t723;
t587 = t1002 * t767 + t1005 * t611;
t586 = t1002 * t611 - t1005 * t767;
t585 = -pkin(7) * t1080 - qJ(2) * t670 - t722 * t998;
t584 = -t610 - t1163;
t583 = t658 * t997 + t660 * t999;
t582 = -t657 * t997 + t659 * t999;
t581 = -t658 * t999 + t660 * t997;
t580 = -t657 * t999 - t659 * t997;
t579 = t645 * t999 - t656 * t997;
t578 = t645 * t997 + t656 * t999;
t577 = -pkin(8) * t703 + qJ(5) * t1025 - t1068;
t576 = -pkin(8) * t689 + qJ(5) * t723 - t1078;
t575 = -t1002 * t644 + t1005 * t684 + t1233;
t574 = -t1002 * t811 + t1005 * t582;
t573 = t1002 * t582 + t1005 * t811;
t572 = -t1002 * t643 + t1005 * t681 - t1202;
t571 = -t1002 * t751 + t1005 * t583;
t570 = t1002 * t583 + t1005 * t751;
t569 = pkin(3) * t1141 - t1106 - t1239;
t568 = pkin(3) * t1022 + t1105 + t1208;
t567 = t1002 * t684 + t1005 * t644 - t1231;
t566 = t1000 * t623 - t621 * t998;
t565 = t1000 * t622 - t620 * t998;
t564 = -pkin(8) * t704 + t1025 * t1113 + t1078;
t563 = t1002 * t681 + t1005 * t643 + t1194;
t562 = -pkin(8) * t690 + t1113 * t723 - t1068;
t559 = -t626 * t997 + t627 * t999 - t1163;
t558 = t1005 * t584 + t1111 * t1124 - t1185;
t557 = t1002 * t675 + t1005 * t579;
t556 = t1002 * t579 - t1005 * t675;
t555 = t1000 * t603 - t601 * t998;
t554 = t1000 * t602 - t600 * t998;
t553 = t1002 * t584 + t1042 * t1124 + t1184;
t552 = t1000 * t594 - t593 * t998;
t551 = t1000 * t593 + t594 * t998;
t550 = t1022 * t1041 - t999 * t666 + t1208;
t549 = -t997 * t665 + (-pkin(3) - t1112) * t1141 + t1239;
t548 = t1000 * t589 - t588 * t998;
t547 = t1000 * t588 + t589 * t998;
t546 = t1000 * t587 - t586 * t998;
t545 = t1000 * t586 + t587 * t998;
t544 = -qJ(4) * t578 + (pkin(4) * t997 - t1109) * t675;
t543 = -t1002 * t591 + t1005 * t605 - t1202;
t542 = t1196 - t611;
t541 = -t1002 * t590 + t1005 * t604 - t1233;
t540 = t1002 * t605 + t1005 * t591 + t1194;
t539 = -pkin(3) * t578 - pkin(4) * t656 - qJ(5) * t645;
t538 = -t1002 * t676 + t1005 * t559 - t1185;
t537 = t1002 * t604 + t1005 * t590 + t1231;
t536 = t1003 * t636 + t1006 * t552;
t535 = t1003 * t552 - t1006 * t636;
t534 = -pkin(2) * t1124 + t1002 * t559 + t1005 * t676 + t1184;
t533 = t1000 * t574 - t573 * t998;
t532 = -t626 * t999 - t627 * t997 + t1196;
t531 = -pkin(7) * t586 + (-qJ(4) * t1005 + t1111) * t610;
t530 = t1000 * t571 - t570 * t998;
t529 = t1000 * t570 + t571 * t998;
t528 = t1003 * t624 + t1006 * t548;
t527 = t1003 * t548 - t1006 * t624;
t526 = -pkin(3) * t581 - qJ(5) * t660 + t1113 * t658;
t525 = t1003 * t610 + t1006 * t546;
t524 = t1003 * t546 - t1006 * t610;
t521 = -pkin(3) * t636 - qJ(5) * t704 + t1113 * t703 - t561;
t520 = t1000 * t557 - t556 * t998;
t519 = t1000 * t556 + t557 * t998;
t518 = -qJ(4) * t636 - t564 * t997 + t577 * t999;
t517 = -pkin(3) * t624 - qJ(5) * t690 + t1113 * t689 - t560;
t516 = t1000 * t575 - t567 * t998 + t1240;
t515 = t1000 * t572 - t563 * t998 - t1215;
t514 = pkin(7) * t587 + (-qJ(4) * t1002 + t1042) * t610;
t513 = -qJ(4) * t624 - t562 * t997 + t576 * t999;
t512 = -pkin(8) * t522 - qJ(5) * t638;
t511 = -pkin(8) * t658 + qJ(5) * t751 - t522;
t510 = t1003 * t581 + t1006 * t530;
t509 = t1003 * t530 - t1006 * t581;
t508 = t1000 * t558 - t553 * t998 - t1201;
t507 = -pkin(1) * t545 - pkin(2) * t586 + pkin(3) * t767 - qJ(4) * t611;
t506 = -pkin(8) * t660 + t1113 * t751 - t523;
t505 = -pkin(8) * t523 - t1113 * t638;
t504 = t1003 * t578 + t1006 * t520;
t503 = t1003 * t520 - t1006 * t578;
t502 = t1000 * t543 - t540 * t998 - t1215;
t501 = t1000 * t541 - t537 * t998 - t1240;
t500 = t1000 * t538 - t534 * t998 - t1201;
t499 = -pkin(7) * t556 - t1002 * t539 + t1005 * t544;
t498 = t522 * t997 + t523 * t999;
t497 = -t522 * t999 + t523 * t997;
t496 = -pkin(1) * t551 - pkin(2) * t593 - pkin(3) * t1025 - qJ(4) * t637 - t564 * t999 - t577 * t997;
t495 = t1002 * t638 + t1005 * t498;
t494 = t1002 * t498 - t1005 * t638;
t493 = -pkin(1) * t547 - pkin(2) * t588 - pkin(3) * t723 - qJ(4) * t625 - t562 * t999 - t576 * t997;
t492 = -pkin(2) * t578 + pkin(7) * t557 + t1002 * t544 + t1005 * t539;
t491 = -pkin(1) * t519 - pkin(2) * t556 - qJ(4) * t579 + (t1041 + t1112) * t675;
t490 = -pkin(7) * t593 - t1002 * t521 + t1005 * t518;
t489 = -pkin(7) * t588 - t1002 * t517 + t1005 * t513;
t488 = -pkin(2) * t636 + pkin(7) * t594 + t1002 * t518 + t1005 * t521;
t487 = -qJ(2) * t545 + t1000 * t531 - t514 * t998;
t486 = -pkin(2) * t624 + pkin(7) * t589 + t1002 * t513 + t1005 * t517;
t485 = -qJ(4) * t581 - t506 * t997 + t511 * t999;
t484 = -pkin(7) * t570 - t1002 * t526 + t1005 * t485;
t483 = -pkin(1) * t529 - pkin(2) * t570 - pkin(3) * t751 - qJ(4) * t583 - t506 * t999 - t511 * t997;
t482 = t1000 * t495 - t494 * t998;
t481 = t1000 * t494 + t495 * t998;
t480 = -qJ(4) * t497 - t505 * t997 + t512 * t999;
t479 = -pkin(2) * t581 + pkin(7) * t571 + t1002 * t485 + t1005 * t526;
t478 = -pkin(3) * t497 - qJ(5) * t523 + t1113 * t522;
t477 = -qJ(2) * t519 + t1000 * t499 - t492 * t998;
t476 = -qJ(2) * t551 + t1000 * t490 - t488 * t998;
t475 = -qJ(2) * t547 + t1000 * t489 - t486 * t998;
t474 = t1003 * t497 + t1006 * t482;
t473 = t1003 * t482 - t1006 * t497;
t472 = -qJ(2) * t529 + t1000 * t484 - t479 * t998;
t471 = -pkin(1) * t481 - pkin(2) * t494 + pkin(3) * t638 - qJ(4) * t498 - t505 * t999 - t512 * t997;
t470 = -pkin(7) * t494 - t1002 * t478 + t1005 * t480;
t469 = -pkin(2) * t497 + pkin(7) * t495 + t1002 * t480 + t1005 * t478;
t468 = -qJ(2) * t481 + t1000 * t470 - t469 * t998;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t979, -t980, 0, t949, 0, 0, 0, 0, 0, 0, -t1020, t943, t932, t821, 0, 0, 0, 0, 0, 0, t740, t753, t738, t668, 0, 0, 0, 0, 0, 0, t1203, -t608, t1191, t525, 0, 0, 0, 0, 0, 0, t1203, t1191, t608, t504, 0, 0, 0, 0, 0, 0, t528, t536, t510, t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t980, -t979, 0, -t1027, 0, 0, 0, 0, 0, 0, t942, t941, t931, t820, 0, 0, 0, 0, 0, 0, t739, t752, t737, t667, 0, 0, 0, 0, 0, 0, t1205, -t606, t1192, t524, 0, 0, 0, 0, 0, 0, t1205, t1192, t606, t503, 0, 0, 0, 0, 0, 0, t527, t535, t509, t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t862, 0, 0, 0, 0, 0, 0, t754, t804, t760, t670, 0, 0, 0, 0, 0, 0, t1190, -t632, t1166, t545, 0, 0, 0, 0, 0, 0, t1190, t1166, t632, t519, 0, 0, 0, 0, 0, 0, t547, t551, t529, t481; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t980, 0, -t979, 0, t1031, -t963, t1027, pkin(6) * t1027, t951, -t1003 * t978 + t1006 * t976, t943, -t951, t1020, 0, -pkin(6) * t942 - t1003 * t929 - t1062 * t998, -pkin(6) * t941 - t1000 * t1062 - t1003 * t930, -pkin(6) * t931 + t1006 * t862, -pkin(6) * t820 - (pkin(1) * t1003 - qJ(2) * t1006) * t862, t1006 * t809 + t1047, -t1003 * t926 + t1006 * t762, t1003 * t1128 + t1006 * t806, t1006 * t808 - t1047, -t1003 * t967 + t1006 * t805, qJDD(3) * t1003 + t1006 * t828, -pkin(6) * t739 - t1003 * t677 + t1006 * t669, -pkin(6) * t752 - t1003 * t691 + t1006 * t672, -pkin(6) * t737 - t1003 * t713 + t1006 * t592, -pkin(6) * t667 - t1003 * t619 + t1006 * t585, t1151, t1235, t1229, t1168, t1234, t1169, -t1003 * t568 + t1006 * t515 - t1225, -t1003 * t569 + t1006 * t516 + t1242, -t1003 * t542 + t1006 * t508 - t1218, -pkin(6) * t524 - t1003 * t507 + t1006 * t487, t1151, t1229, -t1235, t1169, -t1234, t1168, -t1003 * t550 + t1006 * t502 - t1225, -t1003 * t532 + t1006 * t500 - t1218, -t1003 * t549 + t1006 * t501 - t1242, -pkin(6) * t503 - t1003 * t491 + t1006 * t477, -t1003 * t649 + t1006 * t566, -t1003 * t580 + t1006 * t533, -t1003 * t652 + t1006 * t554, -t1003 * t648 + t1006 * t565, -t1003 * t653 + t1006 * t555, -t1003 * t682 + t1006 * t595, -pkin(6) * t527 - t1003 * t493 + t1006 * t475, -pkin(6) * t535 - t1003 * t496 + t1006 * t476, -pkin(6) * t509 - t1003 * t483 + t1006 * t472, -pkin(6) * t473 - t1003 * t471 + t1006 * t468; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t979, 0, t980, 0, t963, t1031, t949, pkin(6) * t949, t950, t1003 * t976 + t1006 * t978, t941, -t950, -t942, 0, -pkin(6) * t1020 + t1006 * t929 - t1069 * t998, pkin(6) * t943 - t1000 * t1069 + t1006 * t930, pkin(6) * t932 + t1003 * t862, pkin(6) * t821 - (-pkin(1) * t1006 - qJ(2) * t1003) * t862, t1003 * t809 - t1044, t1003 * t762 + t1006 * t926, t1003 * t806 - t1006 * t1128, t1003 * t808 + t1044, t1003 * t805 + t1006 * t967, -qJDD(3) * t1006 + t1003 * t828, pkin(6) * t740 + t1003 * t669 + t1006 * t677, pkin(6) * t753 + t1003 * t672 + t1006 * t691, pkin(6) * t738 + t1003 * t592 + t1006 * t713, pkin(6) * t668 + t1003 * t585 + t1006 * t619, t1154, t1237, t1230, t1171, t1236, t1172, t1003 * t515 + t1006 * t568 + t1226, t1003 * t516 + t1006 * t569 - t1241, t1003 * t508 + t1006 * t542 + t1219, pkin(6) * t525 + t1003 * t487 + t1006 * t507, t1154, t1230, -t1237, t1172, -t1236, t1171, t1003 * t502 + t1006 * t550 + t1226, t1003 * t500 + t1006 * t532 + t1219, t1003 * t501 + t1006 * t549 + t1241, pkin(6) * t504 + t1003 * t477 + t1006 * t491, t1003 * t566 + t1006 * t649, t1003 * t533 + t1006 * t580, t1003 * t554 + t1006 * t652, t1003 * t565 + t1006 * t648, t1003 * t555 + t1006 * t653, t1003 * t595 + t1006 * t682, pkin(6) * t528 + t1003 * t475 + t1006 * t493, pkin(6) * t536 + t1003 * t476 + t1006 * t496, pkin(6) * t510 + t1003 * t472 + t1006 * t483, pkin(6) * t474 + t1003 * t468 + t1006 * t471; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t981, t982, 0, 0, t986, 0.2e1 * t998 * t1055, 0, t988, 0, 0, -qJ(2) * t973 + t1000 * t1040, qJ(2) * t972 - t1040 * t998, pkin(1) * t977 + qJ(2) * t975 + t863, pkin(1) * t962 + qJ(2) * t863, t1000 * t877 + t878 * t998, t1000 * t856 + t858 * t998, t1000 * t867 + t870 * t998, t1000 * t875 + t876 * t998, t1000 * t866 + t869 * t998, t1000 * t907 + t908 * t998, -pkin(1) * t921 + qJ(2) * t755 + t1000 * t771 + t810 * t998, -pkin(1) * t923 + qJ(2) * t807 + t1000 * t790 + t812 * t998, -pkin(1) * t890 + qJ(2) * t761 + t1000 * t680 + t692 * t998, pkin(1) * t917 - pkin(7) * t1107 + qJ(2) * t671 + t1000 * t722, t1117, t1228, t1224, t1147, t1227, t1149, t1000 * t563 + t572 * t998 + t1207, t1000 * t567 + t575 * t998 - t1238, t1000 * t553 + t558 * t998 + t1193, -pkin(1) * t610 + qJ(2) * t546 + t1000 * t514 + t531 * t998, t1117, t1224, -t1228, t1149, -t1227, t1147, t1000 * t540 + t543 * t998 + t1207, t1000 * t534 + t538 * t998 + t1193, t1000 * t537 + t541 * t998 + t1238, -pkin(1) * t578 + qJ(2) * t520 + t1000 * t492 + t499 * t998, t1000 * t621 + t623 * t998, t1000 * t573 + t574 * t998, t1000 * t600 + t602 * t998, t1000 * t620 + t622 * t998, t1000 * t601 + t603 * t998, t1000 * t673 + t674 * t998, -pkin(1) * t624 + qJ(2) * t548 + t1000 * t486 + t489 * t998, -pkin(1) * t636 + qJ(2) * t552 + t1000 * t488 + t490 * t998, -pkin(1) * t581 + qJ(2) * t530 + t1000 * t479 + t484 * t998, -pkin(1) * t497 + qJ(2) * t482 + t1000 * t469 + t470 * t998;];
tauB_reg  = t1;
