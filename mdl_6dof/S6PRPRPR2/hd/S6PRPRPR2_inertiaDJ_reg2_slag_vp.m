% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR2_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:32:54
% EndTime: 2019-03-08 19:33:00
% DurationCPUTime: 1.98s
% Computational Cost: add. (2126->233), mult. (5805->424), div. (0->0), fcn. (5818->12), ass. (0->133)
t155 = sin(qJ(6));
t115 = qJD(6) * t155;
t156 = cos(qJ(6));
t116 = qJD(6) * t156;
t78 = sin(pkin(12));
t81 = cos(pkin(12));
t51 = t78 * t115 - t81 * t116;
t54 = t155 * t78 - t156 * t81;
t161 = -0.2e1 * t51;
t121 = t156 * t78;
t55 = t155 * t81 + t121;
t52 = t55 * qJD(6);
t160 = 0.2e1 * t52;
t159 = 2 * qJD(4);
t83 = sin(qJ(4));
t158 = pkin(4) * t83;
t85 = cos(qJ(4));
t157 = t85 * pkin(4);
t138 = cos(pkin(6));
t79 = sin(pkin(11));
t80 = sin(pkin(6));
t82 = cos(pkin(11));
t84 = sin(qJ(2));
t86 = cos(qJ(2));
t46 = (t79 * t86 + t82 * t84) * t80;
t38 = t138 * t83 + t46 * t85;
t137 = qJD(2) * t80;
t126 = t86 * t137;
t127 = t84 * t137;
t42 = -t82 * t126 + t79 * t127;
t17 = t38 * qJD(4) - t42 * t83;
t154 = t17 * t83;
t153 = t17 * t85;
t94 = t138 * t85 - t46 * t83;
t11 = t94 * t17;
t152 = t94 * t85;
t43 = qJD(2) * t46;
t45 = (t79 * t84 - t82 * t86) * t80;
t151 = t45 * t43;
t134 = t85 * qJD(4);
t28 = t55 * t134 - t51 * t83;
t47 = t55 * t83;
t150 = t47 * t28;
t27 = t54 * t134 + t83 * t52;
t48 = t54 * t83;
t149 = t48 * t27;
t148 = t78 * t83;
t70 = t79 * pkin(2) + pkin(8);
t147 = t83 * t70;
t146 = t85 * t70;
t145 = pkin(9) + qJ(5);
t143 = t27 * t54 + t48 * t52;
t56 = t81 * t146;
t139 = t83 * qJ(5);
t71 = -t82 * pkin(2) - pkin(3);
t98 = t71 - t157;
t93 = t98 - t139;
t36 = t78 * t93 + t56;
t74 = t78 ^ 2;
t75 = t81 ^ 2;
t142 = t74 + t75;
t141 = t83 ^ 2 - t85 ^ 2;
t140 = qJ(5) * t85;
t136 = qJD(5) * t85;
t73 = t83 * qJD(4);
t135 = t83 * qJD(5);
t133 = t78 * t146;
t132 = t81 * t147;
t131 = t71 * t159;
t130 = t74 * t134;
t129 = t78 * t134;
t128 = t78 * t135;
t125 = t81 * t73;
t124 = t81 * t134;
t123 = t81 * t135;
t122 = t83 * t134;
t57 = t70 * t134;
t118 = t78 * t70 + pkin(5);
t117 = qJD(5) * t155;
t114 = t156 * qJD(5);
t113 = t142 * qJD(5);
t112 = 0.2e1 * t122;
t111 = t78 * t124;
t110 = 0.2e1 * t113;
t109 = -0.2e1 * t141 * qJD(4);
t106 = t145 * t155;
t105 = -t139 - t157;
t104 = -t140 + t158;
t18 = t94 * qJD(4) - t42 * t85;
t12 = -t18 * t78 + t43 * t81;
t13 = t18 * t81 + t43 * t78;
t103 = -t12 * t78 + t13 * t81;
t19 = -t38 * t78 + t45 * t81;
t20 = t38 * t81 + t45 * t78;
t102 = -t19 * t78 + t20 * t81;
t101 = -t55 * t28 + t47 * t51;
t32 = -t123 + (t81 * t104 + t78 * t147) * qJD(4);
t33 = -t128 + (t78 * t104 - t132) * qJD(4);
t100 = -t32 * t78 + t33 * t81;
t35 = t81 * t93 - t133;
t99 = -t35 * t78 + t36 * t81;
t97 = t145 * t121;
t96 = -t85 * t52 + t54 * t73;
t95 = -t145 * t85 + t158;
t6 = t155 * t19 + t156 * t20;
t92 = t154 + t18 * t85 + (-t38 * t83 - t152) * qJD(4);
t91 = -t118 * t85 + (-t145 * t83 + t98) * t81;
t90 = t128 - (t95 * t78 - t132) * qJD(4);
t89 = t156 * t91;
t88 = t155 * t91;
t87 = -t123 + (t118 * t83 + t95 * t81) * qJD(4);
t72 = -t81 * pkin(5) - pkin(4);
t65 = t75 * t134;
t64 = t78 * t73;
t63 = -0.2e1 * t122;
t61 = t145 * t81;
t50 = (pkin(5) * t78 + t70) * t83;
t44 = pkin(5) * t129 + t57;
t40 = -t78 * t106 + t156 * t61;
t39 = -t155 * t61 - t97;
t34 = t94 * t73;
t30 = t51 * t85 + t55 * t73;
t29 = -pkin(9) * t148 + t36;
t26 = -t61 * t116 - t81 * t117 + (qJD(6) * t106 - t114) * t78;
t25 = qJD(6) * t97 - t81 * t114 + t61 * t115 + t78 * t117;
t10 = t156 * t29 + t88;
t9 = -t155 * t29 + t89;
t5 = -t155 * t20 + t156 * t19;
t4 = -qJD(6) * t88 - t29 * t116 + t155 * t90 + t156 * t87;
t3 = -qJD(6) * t89 + t29 * t115 - t155 * t87 + t156 * t90;
t2 = -t6 * qJD(6) + t156 * t12 - t155 * t13;
t1 = t20 * t115 - t19 * t116 - t155 * t12 - t156 * t13;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t46 * t42 + 0.2e1 * t151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t38 * t18 - 0.2e1 * t11 + 0.2e1 * t151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t12 * t19 + 0.2e1 * t13 * t20 - 0.2e1 * t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t1 * t6 + 0.2e1 * t2 * t5 - 0.2e1 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t127, -t126, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t42, 0 (-t42 * t79 - t43 * t82) * pkin(2), 0, 0, 0, 0, 0, 0, -t43 * t85 + t45 * t73, t45 * t134 + t43 * t83, t92, t43 * t71 + t92 * t70, 0, 0, 0, 0, 0, 0, t17 * t148 - t12 * t85 + (-t78 * t152 + t19 * t83) * qJD(4), t81 * t154 + t13 * t85 + (-t81 * t152 - t20 * t83) * qJD(4) (-t12 * t81 - t13 * t78) * t83 + (-t19 * t81 - t20 * t78) * t134, t12 * t35 + t13 * t36 + t19 * t32 + t20 * t33 + (-t134 * t94 + t154) * t70, 0, 0, 0, 0, 0, 0, t17 * t47 - t2 * t85 - t28 * t94 + t5 * t73, -t1 * t85 - t17 * t48 + t27 * t94 - t6 * t73, t1 * t47 + t2 * t48 + t5 * t27 - t6 * t28, -t1 * t10 + t17 * t50 + t2 * t9 - t6 * t3 + t5 * t4 - t44 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t109, 0, t63, 0, 0, t83 * t131, t85 * t131, 0, 0, t75 * t112, -0.4e1 * t83 * t111, t141 * t81 * t159, t74 * t112, t78 * t109, t63, -0.2e1 * t32 * t85 + 0.2e1 * (t35 + 0.2e1 * t133) * t73, 0.2e1 * t33 * t85 + 0.2e1 * (-t36 + 0.2e1 * t56) * t73, 0.2e1 * (-t32 * t81 - t33 * t78) * t83 + 0.2e1 * (-t35 * t81 - t36 * t78) * t134, 0.2e1 * t70 ^ 2 * t122 + 0.2e1 * t35 * t32 + 0.2e1 * t36 * t33, 0.2e1 * t149, 0.2e1 * t47 * t27 + 0.2e1 * t48 * t28, 0.2e1 * t27 * t85 - 0.2e1 * t48 * t73, 0.2e1 * t150, 0.2e1 * t85 * t28 - 0.2e1 * t47 * t73, t63, 0.2e1 * t50 * t28 - 0.2e1 * t4 * t85 + 0.2e1 * t44 * t47 + 0.2e1 * t73 * t9, -0.2e1 * t10 * t73 - 0.2e1 * t50 * t27 - 0.2e1 * t3 * t85 - 0.2e1 * t44 * t48, -0.2e1 * t10 * t28 + 0.2e1 * t9 * t27 + 0.2e1 * t3 * t47 + 0.2e1 * t4 * t48, -0.2e1 * t10 * t3 + 0.2e1 * t9 * t4 + 0.2e1 * t50 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153 + t18 * t83 + (t38 * t85 - t83 * t94) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34 + t103 * t83 + (t102 * qJD(4) - t17) * t85, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * t48 - t2 * t47 - t6 * t27 - t5 * t28 - t153 - t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100 * t83 + (t141 * t70 + t99 * t85) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t10 * t27 - t9 * t28 + t3 * t48 - t4 * t47 - t44 * t85 + t50 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t142) * t112, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t122 + 0.2e1 * t149 + 0.2e1 * t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17, -t18, 0, 0, 0, 0, 0, 0, 0, 0, -t17 * t81, t17 * t78, t103, -t17 * pkin(4) + t103 * qJ(5) + t102 * qJD(5), 0, 0, 0, 0, 0, 0, t17 * t54 - t52 * t94, t17 * t55 + t51 * t94, t1 * t54 - t2 * t55 + t5 * t51 - t6 * t52, -t1 * t40 + t17 * t72 + t2 * t39 - t6 * t25 + t5 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, 0, -t73, 0, -t57, t70 * t73, 0, 0, t111, t65 - t130, t64, -t111, t125, 0, t78 * t136 + (t105 * t78 - t56) * qJD(4), t81 * t136 + (t105 * t81 + t133) * qJD(4), t100, -pkin(4) * t57 + t100 * qJ(5) + t99 * qJD(5), -t27 * t55 + t48 * t51, t101 + t143, t30, t28 * t54 + t47 * t52, -t96, 0, -t26 * t85 + t72 * t28 + t39 * t73 + t44 * t54 + t50 * t52, -t25 * t85 - t72 * t27 - t40 * t73 + t44 * t55 - t50 * t51, -t10 * t52 + t25 * t47 + t26 * t48 + t39 * t27 - t40 * t28 + t3 * t54 - t4 * t55 + t9 * t51, -t10 * t25 + t9 * t26 - t3 * t40 + t4 * t39 + t44 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, -t134, 0, 0, 0, 0, 0, 0, 0, 0, -t125, t64, t65 + t130, t83 * t113 + (t142 * t140 - t158) * qJD(4), 0, 0, 0, 0, 0, 0, t96, t30, -t101 + t143, t48 * t25 - t47 * t26 - t27 * t40 - t28 * t39 + t72 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, qJ(5) * t110, t55 * t161, 0.2e1 * t51 * t54 - 0.2e1 * t55 * t52, 0, t54 * t160, 0, 0, t72 * t160, t72 * t161, 0.2e1 * t25 * t54 - 0.2e1 * t26 * t55 + 0.2e1 * t39 * t51 - 0.2e1 * t40 * t52, -0.2e1 * t40 * t25 + 0.2e1 * t39 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t124, 0, t57, 0, 0, 0, 0, 0, 0, t28, -t27, 0, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, -t51, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, -t28, t73, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, t27, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, 0, -t52, 0, t26, t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
