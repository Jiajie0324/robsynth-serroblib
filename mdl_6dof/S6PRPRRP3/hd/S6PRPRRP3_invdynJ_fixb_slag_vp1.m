% Calculate vector of inverse dynamics joint torques for
% S6PRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRPRRP3_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRPRRP3_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:04:44
% EndTime: 2019-03-08 20:07:44
% DurationCPUTime: 173.48s
% Computational Cost: add. (89408->1785), mult. (163777->2487), div. (0->0), fcn. (187835->12), ass. (0->657)
t1161 = Icges(6,4) + Icges(7,4);
t1146 = Icges(6,1) + Icges(7,1);
t1145 = Icges(6,5) + Icges(7,5);
t1144 = Icges(6,2) + Icges(7,2);
t1143 = Icges(6,6) + Icges(7,6);
t1160 = Icges(6,3) + Icges(7,3);
t696 = cos(pkin(10));
t697 = cos(pkin(6));
t701 = sin(qJ(2));
t948 = t697 * t701;
t693 = sin(pkin(10));
t703 = cos(qJ(2));
t953 = t693 * t703;
t648 = t696 * t948 + t953;
t881 = pkin(11) + qJ(4);
t690 = sin(t881);
t836 = cos(t881);
t694 = sin(pkin(6));
t952 = t694 * t696;
t543 = t648 * t836 - t690 * t952;
t700 = sin(qJ(5));
t702 = cos(qJ(5));
t947 = t697 * t703;
t761 = -t693 * t701 + t696 * t947;
t434 = -t543 * t700 - t761 * t702;
t1179 = t1161 * t434;
t871 = t693 * t948;
t949 = t696 * t703;
t650 = -t871 + t949;
t954 = t693 * t694;
t545 = t650 * t836 + t690 * t954;
t649 = t693 * t947 + t696 * t701;
t436 = -t545 * t700 + t649 * t702;
t1178 = t1161 * t436;
t803 = t694 * t836;
t610 = t697 * t690 + t701 * t803;
t950 = t694 * t703;
t549 = -t610 * t700 - t702 * t950;
t1177 = t1161 * t549;
t870 = t700 * t950;
t762 = -t610 * t702 + t870;
t1176 = t1161 * t762;
t960 = t649 * t700;
t437 = t545 * t702 + t960;
t1175 = t1161 * t437;
t964 = t761 * t700;
t435 = t543 * t702 - t964;
t1174 = t1161 * t435;
t618 = t761 * qJD(2);
t742 = -t648 * t690 - t696 * t803;
t410 = qJD(4) * t742 + t618 * t836;
t619 = t648 * qJD(2);
t189 = -qJD(5) * t435 - t410 * t700 + t619 * t702;
t733 = qJD(5) * t434 + t619 * t700;
t190 = t410 * t702 + t733;
t409 = qJD(4) * t543 + t618 * t690;
t1173 = t1143 * t189 + t1145 * t190 + t1160 * t409;
t620 = t649 * qJD(2);
t743 = -t650 * t690 + t693 * t803;
t412 = qJD(4) * t743 - t620 * t836;
t901 = qJD(2) * t696;
t621 = -qJD(2) * t871 + t703 * t901;
t191 = -qJD(5) * t437 - t412 * t700 + t621 * t702;
t732 = qJD(5) * t436 + t621 * t700;
t192 = t412 * t702 + t732;
t411 = qJD(4) * t545 - t620 * t690;
t1172 = t1143 * t191 + t1145 * t192 + t1160 * t411;
t1171 = -t1143 * t409 - t1144 * t189 - t1161 * t190;
t692 = sin(pkin(11));
t695 = cos(pkin(11));
t790 = Icges(4,5) * t695 - Icges(4,6) * t692;
t1170 = Icges(3,4) - t790;
t1169 = Icges(3,2) + Icges(4,3);
t1168 = t1143 * t411 + t1144 * t191 + t1161 * t192;
t1167 = t1145 * t409 + t1146 * t190 + t1161 * t189;
t1166 = t1145 * t411 + t1146 * t192 + t1161 * t191;
t951 = t694 * t701;
t609 = t690 * t951 - t697 * t836;
t800 = t703 * t836;
t769 = t694 * t800;
t530 = qJD(2) * t769 - qJD(4) * t609;
t900 = qJD(2) * t701;
t855 = t694 * t900;
t312 = qJD(5) * t762 - t530 * t700 + t702 * t855;
t719 = qJD(5) * t549 + t700 * t855;
t313 = t530 * t702 + t719;
t875 = t690 * t950;
t529 = qJD(2) * t875 + qJD(4) * t610;
t1165 = t1143 * t312 + t1145 * t313 + t1160 * t529;
t1164 = t1143 * t529 + t1144 * t312 + t1161 * t313;
t1163 = t1145 * t529 + t1146 * t313 + t1161 * t312;
t1118 = t1143 * t434 + t1145 * t435 - t1160 * t742;
t1117 = t1143 * t436 + t1145 * t437 - t1160 * t743;
t1116 = -t1143 * t742 + t1144 * t434 + t1174;
t1115 = -t1143 * t743 + t1144 * t436 + t1175;
t1114 = -t1145 * t742 + t1146 * t435 + t1179;
t1113 = -t1145 * t743 + t1146 * t437 + t1178;
t1100 = t1143 * t549 - t1145 * t762 + t1160 * t609;
t1099 = t1143 * t609 + t1144 * t549 - t1176;
t1098 = t1145 * t609 - t1146 * t762 + t1177;
t698 = -qJ(6) - pkin(9);
t1162 = rSges(7,3) - t698;
t1137 = t1113 * t190 + t1115 * t189 + t1117 * t409 + t1166 * t435 + t1168 * t434 - t1172 * t742;
t1136 = -t1114 * t190 - t1116 * t189 - t1118 * t409 - t1167 * t435 + t1171 * t434 + t1173 * t742;
t1135 = t1113 * t192 + t1115 * t191 + t1117 * t411 + t1166 * t437 + t1168 * t436 - t1172 * t743;
t1134 = -t1114 * t192 - t1116 * t191 - t1118 * t411 - t1167 * t437 + t1171 * t436 + t1173 * t743;
t1133 = t1113 * t313 + t1115 * t312 + t1117 * t529 - t1166 * t762 + t1168 * t549 + t1172 * t609;
t1132 = -t1114 * t313 - t1116 * t312 - t1118 * t529 + t1167 * t762 + t1171 * t549 - t1173 * t609;
t1128 = t1098 * t190 + t1099 * t189 + t1100 * t409 + t1163 * t435 + t1164 * t434 - t1165 * t742;
t1127 = t1098 * t192 + t1099 * t191 + t1100 * t411 + t1163 * t437 + t1164 * t436 - t1165 * t743;
t1126 = t1098 * t313 + t1099 * t312 + t1100 * t529 - t1163 * t762 + t1164 * t549 + t1165 * t609;
t1072 = t1114 * t435 + t1116 * t434 - t1118 * t742;
t1071 = t1113 * t435 + t1115 * t434 - t1117 * t742;
t1070 = t1114 * t437 + t1116 * t436 - t1118 * t743;
t1069 = t1113 * t437 + t1115 * t436 - t1117 * t743;
t1068 = -t1114 * t762 + t1116 * t549 + t1118 * t609;
t1067 = -t1113 * t762 + t1115 * t549 + t1117 * t609;
t1066 = t1098 * t435 + t1099 * t434 - t1100 * t742;
t1065 = t1098 * t437 + t1099 * t436 - t1100 * t743;
t1064 = -t1098 * t762 + t1099 * t549 + t1100 * t609;
t1123 = -pkin(9) + t1162;
t558 = -t648 * t692 - t695 * t952;
t872 = t692 * t952;
t559 = t648 * t695 - t872;
t320 = Icges(4,5) * t559 + Icges(4,6) * t558 - Icges(4,3) * t761;
t995 = Icges(3,4) * t648;
t467 = Icges(3,2) * t761 - Icges(3,6) * t952 + t995;
t1159 = t320 - t467;
t560 = -t650 * t692 + t695 * t954;
t873 = t692 * t954;
t561 = t650 * t695 + t873;
t321 = Icges(4,5) * t561 + Icges(4,6) * t560 + Icges(4,3) * t649;
t994 = Icges(3,4) * t650;
t468 = -Icges(3,2) * t649 + Icges(3,6) * t954 + t994;
t1158 = t321 - t468;
t1157 = t1169 * t619 - t1170 * t618;
t1156 = t1169 * t621 + t1170 * t620;
t645 = -t692 * t951 + t695 * t697;
t955 = t692 * t697;
t646 = t695 * t951 + t955;
t461 = Icges(4,5) * t646 + Icges(4,6) * t645 - Icges(4,3) * t950;
t993 = Icges(3,4) * t701;
t607 = Icges(3,6) * t697 + (Icges(3,2) * t703 + t993) * t694;
t1155 = t461 - t607;
t636 = Icges(3,4) * t761;
t469 = Icges(3,1) * t648 - Icges(3,5) * t952 + t636;
t322 = Icges(4,4) * t559 + Icges(4,2) * t558 - Icges(4,6) * t761;
t324 = Icges(4,1) * t559 + Icges(4,4) * t558 - Icges(4,5) * t761;
t778 = -t322 * t692 + t324 * t695;
t1154 = t469 + t778;
t637 = Icges(3,4) * t649;
t470 = Icges(3,1) * t650 + Icges(3,5) * t954 - t637;
t323 = Icges(4,4) * t561 + Icges(4,2) * t560 + Icges(4,6) * t649;
t325 = Icges(4,1) * t561 + Icges(4,4) * t560 + Icges(4,5) * t649;
t777 = -t323 * t692 + t325 * t695;
t1153 = t470 + t777;
t562 = (Icges(4,3) * t701 + t703 * t790) * t694;
t902 = qJD(2) * t694;
t1152 = qJD(2) * t562 - (Icges(3,4) * t703 - Icges(3,2) * t701) * t902;
t682 = Icges(3,4) * t950;
t608 = Icges(3,1) * t951 + Icges(3,5) * t697 + t682;
t462 = Icges(4,4) * t646 + Icges(4,2) * t645 - Icges(4,6) * t950;
t463 = Icges(4,1) * t646 + Icges(4,4) * t645 - Icges(4,5) * t950;
t774 = -t462 * t692 + t463 * t695;
t1151 = t608 + t774;
t1150 = t1143 * t700 - t1145 * t702;
t1149 = t1144 * t700 - t1161 * t702;
t1148 = -t1146 * t702 + t1161 * t700;
t1074 = 0.2e1 * t694;
t878 = 0.2e1 * t697;
t1147 = rSges(7,1) + pkin(5);
t580 = (-t700 * t800 + t701 * t702) * t694;
t945 = t700 * t701;
t581 = (t702 * t800 + t945) * t694;
t687 = pkin(5) * t702 + pkin(4);
t1142 = t694 * pkin(5) * t945 + t581 * rSges(7,1) + t580 * rSges(7,2) + rSges(7,3) * t875 + t687 * t769;
t465 = Icges(3,5) * t648 + Icges(3,6) * t761 - Icges(3,3) * t952;
t466 = Icges(3,5) * t650 - Icges(3,6) * t649 + Icges(3,3) * t954;
t606 = Icges(3,3) * t697 + (Icges(3,5) * t701 + Icges(3,6) * t703) * t694;
t1141 = ((t1159 * t761 - t322 * t558 - t324 * t559 + t465 * t952 - t469 * t648) * t696 + (-t1158 * t761 + t323 * t558 + t325 * t559 - t466 * t952 + t470 * t648) * t693) * t694 + (-t1155 * t761 + t462 * t558 + t463 * t559 - t606 * t952 + t608 * t648) * t697;
t884 = qJDD(2) * t694;
t678 = t693 * t884;
t444 = qJD(4) * t621 + qJDD(4) * t649 + t678;
t179 = qJD(5) * t411 - qJDD(5) * t743 + t444;
t849 = t696 * t884;
t445 = qJD(4) * t619 - qJDD(4) * t761 - t849;
t180 = qJD(5) * t409 - qJDD(5) * t742 + t445;
t688 = qJDD(2) * t697;
t896 = qJD(4) * t701;
t854 = t694 * t896;
t584 = qJD(2) * t854 - qJDD(4) * t950 + t688;
t319 = qJD(5) * t529 + qJDD(5) * t609 + t584;
t679 = t693 * t902;
t568 = qJD(4) * t649 + t679;
t403 = -qJD(5) * t743 + t568;
t856 = t694 * t901;
t569 = -qJD(4) * t761 - t856;
t404 = -qJD(5) * t742 + t569;
t689 = qJD(2) * t697;
t657 = -qJD(4) * t950 + t689;
t526 = qJD(5) * t609 + t657;
t1140 = t1066 * t319 + t1071 * t179 + t1072 * t180 + t1128 * t526 - t1136 * t404 + t1137 * t403;
t1139 = t1065 * t319 + t1069 * t179 + t1070 * t180 + t1127 * t526 - t1134 * t404 + t1135 * t403;
t1138 = t1064 * t319 + t1067 * t179 + t1068 * t180 + t1126 * t526 - t1132 * t404 + t1133 * t403;
t1131 = t1066 * t526 + t1071 * t403 + t1072 * t404;
t1130 = t1065 * t526 + t1069 * t403 + t1070 * t404;
t1129 = t1064 * t526 + t1067 * t403 + t1068 * t404;
t793 = Icges(4,4) * t695 - Icges(4,2) * t692;
t563 = (Icges(4,6) * t701 + t703 * t793) * t694;
t547 = qJD(2) * t563;
t796 = Icges(4,1) * t695 - Icges(4,4) * t692;
t564 = (Icges(4,5) * t701 + t703 * t796) * t694;
t548 = qJD(2) * t564;
t651 = (Icges(3,5) * t703 - Icges(3,6) * t701) * t694;
t622 = qJD(2) * t651;
t653 = (Icges(3,1) * t703 - t993) * t694;
t624 = qJD(2) * t653;
t1124 = -t1151 * t620 + t1152 * t649 + t1155 * t621 + t547 * t560 + t548 * t561 + t622 * t954 + t624 * t650;
t1122 = t547 * t645 + t548 * t646 + t622 * t697 + (t624 * t701 - t1152 * t703 + (t1151 * t703 + t1155 * t701) * qJD(2)) * t694;
t1120 = t1155 * t649 + t462 * t560 + t463 * t561 + t606 * t954 + t608 * t650;
t1119 = -t461 * t950 + t462 * t645 + t463 * t646 + t606 * t697 + (t607 * t703 + t608 * t701) * t694;
t802 = t700 * t836;
t474 = t648 * t702 - t761 * t802;
t801 = t702 * t836;
t962 = t648 * t700;
t475 = t761 * t801 + t962;
t965 = t761 * t690;
t1112 = t1143 * t474 + t1145 * t475 + t1160 * t965;
t476 = t649 * t802 + t650 * t702;
t958 = t650 * t700;
t477 = -t649 * t801 + t958;
t961 = t649 * t690;
t1111 = t1143 * t476 + t1145 * t477 - t1160 * t961;
t1110 = t1143 * t965 + t1144 * t474 + t1161 * t475;
t1109 = -t1143 * t961 + t1144 * t476 + t1161 * t477;
t1108 = t1145 * t965 + t1146 * t475 + t1161 * t474;
t1107 = -t1145 * t961 + t1146 * t477 + t1161 * t476;
t1106 = t1143 * t543 - t1149 * t742;
t1105 = t1143 * t545 - t1149 * t743;
t1104 = t1145 * t543 - t1148 * t742;
t1103 = t1145 * t545 - t1148 * t743;
t973 = t742 * t702;
t974 = t742 * t700;
t1102 = rSges(7,1) * t973 - rSges(7,2) * t974 + t1162 * t543 + t687 * t742;
t970 = t743 * t702;
t971 = t743 * t700;
t1101 = rSges(7,1) * t970 - rSges(7,2) * t971 + t1162 * t545 + t687 * t743;
t1001 = -pkin(4) + t687;
t935 = -rSges(7,1) * t762 + rSges(7,2) * t549 - pkin(5) * t870 + t1001 * t610 + t1123 * t609;
t1097 = t1143 * t610 + t1149 * t609;
t1096 = t1145 * t610 + t1148 * t609;
t966 = t609 * t702;
t967 = t609 * t700;
t1095 = -rSges(7,1) * t966 + rSges(7,2) * t967 + t1162 * t610 - t609 * t687;
t362 = pkin(4) * t545 - pkin(9) * t743;
t940 = rSges(7,1) * t437 + rSges(7,2) * t436 + pkin(5) * t960 + t1001 * t545 - t1123 * t743;
t868 = -t362 - t940;
t576 = pkin(4) * t769 + pkin(9) * t875;
t956 = t690 * t703;
t874 = t698 * t956;
t1094 = -t694 * t874 + t1142 - t576;
t1093 = t1143 * t580 + t1145 * t581 + t1160 * t875;
t1092 = t1143 * t875 + t1144 * t580 + t1161 * t581;
t1091 = t1145 * t875 + t1146 * t581 + t1161 * t580;
t906 = -t607 + t653;
t1090 = t461 + t906;
t479 = pkin(4) * t610 + pkin(9) * t609;
t1089 = -t479 - t935;
t1088 = (-t1098 * t702 + t1099 * t700 + t1150 * t609 + t1160 * t610) * t526 + (-t1114 * t702 + t1116 * t700 - t1150 * t742 + t1160 * t543) * t404 + (-t1113 * t702 + t1115 * t700 - t1150 * t743 + t1160 * t545) * t403;
t1079 = t687 * t836 - t690 * t698;
t1087 = t477 * rSges(7,1) + t476 * rSges(7,2) - rSges(7,3) * t961 + pkin(5) * t958 - t1079 * t649;
t1086 = t475 * rSges(7,1) + t474 * rSges(7,2) + rSges(7,3) * t965 + pkin(5) * t962 + t1079 * t761;
t1085 = (-t465 * t697 - (t467 * t703 + t469 * t701) * t694 + t320 * t950 - t322 * t645 - t324 * t646) * t696 + (t466 * t697 + (t468 * t703 + t470 * t701) * t694 - t321 * t950 + t323 * t645 + t325 * t646) * t693;
t1084 = (-t1159 * t649 - t322 * t560 - t324 * t561 - t465 * t954 - t469 * t650) * t696 + (t1158 * t649 + t323 * t560 + t325 * t561 + t466 * t954 + t470 * t650) * t693;
t373 = Icges(4,6) * t619 + t618 * t793;
t374 = Icges(4,6) * t621 - t620 * t793;
t375 = Icges(4,5) * t619 + t618 * t796;
t376 = Icges(4,5) * t621 - t620 * t796;
t490 = Icges(3,5) * t618 - Icges(3,6) * t619;
t491 = -Icges(3,5) * t620 - Icges(3,6) * t621;
t494 = Icges(3,1) * t618 - Icges(3,4) * t619;
t495 = -Icges(3,1) * t620 - Icges(3,4) * t621;
t1082 = (-t373 * t645 - t375 * t646 - t490 * t697 + (-t494 * t701 + t1157 * t703 + (-t1154 * t703 - t1159 * t701) * qJD(2)) * t694) * t696 + (t374 * t645 + t376 * t646 + t491 * t697 + (t495 * t701 - t1156 * t703 + (t1153 * t703 + t1158 * t701) * qJD(2)) * t694) * t693;
t1081 = (t1154 * t620 - t1157 * t649 - t1159 * t621 - t373 * t560 - t375 * t561 - t490 * t954 - t494 * t650) * t696 + (-t1153 * t620 + t1156 * t649 + t1158 * t621 + t374 * t560 + t376 * t561 + t491 * t954 + t495 * t650) * t693;
t1078 = -rSges(4,1) * t695 + rSges(4,2) * t692;
t294 = Icges(5,5) * t543 + Icges(5,6) * t742 - Icges(5,3) * t761;
t992 = Icges(5,4) * t543;
t296 = Icges(5,2) * t742 - Icges(5,6) * t761 + t992;
t527 = Icges(5,4) * t742;
t298 = Icges(5,1) * t543 - Icges(5,5) * t761 + t527;
t111 = -t294 * t761 + t296 * t742 + t298 * t543;
t295 = Icges(5,5) * t545 + Icges(5,6) * t743 + Icges(5,3) * t649;
t991 = Icges(5,4) * t545;
t297 = Icges(5,2) * t743 + Icges(5,6) * t649 + t991;
t528 = Icges(5,4) * t743;
t299 = Icges(5,1) * t545 + Icges(5,5) * t649 + t528;
t112 = -t295 * t761 + t297 * t742 + t299 * t543;
t438 = Icges(5,5) * t610 - Icges(5,6) * t609 - Icges(5,3) * t950;
t990 = Icges(5,4) * t610;
t439 = -Icges(5,2) * t609 - Icges(5,6) * t950 + t990;
t595 = Icges(5,4) * t609;
t440 = Icges(5,1) * t610 - Icges(5,5) * t950 - t595;
t131 = -t438 * t761 + t439 * t742 + t440 * t543;
t181 = Icges(5,5) * t410 - Icges(5,6) * t409 + Icges(5,3) * t619;
t183 = Icges(5,4) * t410 - Icges(5,2) * t409 + Icges(5,6) * t619;
t185 = Icges(5,1) * t410 - Icges(5,4) * t409 + Icges(5,5) * t619;
t48 = -t181 * t761 + t183 * t742 + t185 * t543 + t294 * t619 - t296 * t409 + t298 * t410;
t182 = Icges(5,5) * t412 - Icges(5,6) * t411 + Icges(5,3) * t621;
t184 = Icges(5,4) * t412 - Icges(5,2) * t411 + Icges(5,6) * t621;
t186 = Icges(5,1) * t412 - Icges(5,4) * t411 + Icges(5,5) * t621;
t49 = -t182 * t761 + t184 * t742 + t186 * t543 + t295 * t619 - t297 * t409 + t299 * t410;
t314 = Icges(5,5) * t530 - Icges(5,6) * t529 + Icges(5,3) * t855;
t315 = Icges(5,4) * t530 - Icges(5,2) * t529 + Icges(5,6) * t855;
t316 = Icges(5,1) * t530 - Icges(5,4) * t529 + Icges(5,5) * t855;
t58 = -t314 * t761 + t315 * t742 + t316 * t543 - t409 * t439 + t410 * t440 + t438 * t619;
t1077 = t111 * t445 + t112 * t444 + t131 * t584 + t48 * t569 + t49 * t568 + t58 * t657 + t1140;
t113 = t294 * t649 + t296 * t743 + t298 * t545;
t114 = t295 * t649 + t297 * t743 + t299 * t545;
t132 = t438 * t649 + t439 * t743 + t440 * t545;
t50 = t181 * t649 + t183 * t743 + t185 * t545 + t294 * t621 - t296 * t411 + t298 * t412;
t51 = t182 * t649 + t184 * t743 + t186 * t545 + t295 * t621 - t297 * t411 + t299 * t412;
t59 = t314 * t649 + t315 * t743 + t316 * t545 - t411 * t439 + t412 * t440 + t438 * t621;
t1076 = t113 * t445 + t444 * t114 + t132 * t584 + t50 * t569 + t568 * t51 + t59 * t657 + t1139;
t119 = -t294 * t950 - t296 * t609 + t298 * t610;
t120 = -t295 * t950 - t297 * t609 + t299 * t610;
t146 = -t438 * t950 - t439 * t609 + t440 * t610;
t54 = -t183 * t609 + t185 * t610 - t296 * t529 + t298 * t530 + (-t181 * t703 + t294 * t900) * t694;
t55 = -t184 * t609 + t186 * t610 - t297 * t529 + t299 * t530 + (-t182 * t703 + t295 * t900) * t694;
t77 = -t315 * t609 + t316 * t610 - t439 * t529 + t440 * t530 + (-t314 * t703 + t438 * t900) * t694;
t1075 = t119 * t445 + t120 * t444 + t584 * t146 + t54 * t569 + t55 * t568 + t657 * t77 + t1138;
t707 = (t693 * (Icges(4,3) * t650 - t649 * t790 - t777) - t696 * (Icges(4,3) * t648 + t761 * t790 - t778)) * t694 + (t562 - t774) * t697;
t686 = pkin(3) * t695 + pkin(2);
t1002 = -pkin(2) + t686;
t699 = -pkin(8) - qJ(3);
t944 = qJ(3) + t699;
t306 = pkin(3) * t873 + t1002 * t650 - t649 * t944;
t525 = pkin(2) * t650 + qJ(3) * t649;
t506 = t697 * t525;
t933 = t697 * t306 + t506;
t1073 = 0.2e1 * t697 * t362 + 0.2e1 * t933;
t654 = (pkin(2) * t701 - qJ(3) * t703) * t694;
t920 = -pkin(3) * t955 - (t1002 * t701 + t703 * t944) * t694 - t654;
t831 = t920 * t694;
t631 = qJD(3) * t761;
t916 = t525 * t689 - t631;
t734 = qJD(2) * t693 * t831 + t306 * t689 + t916;
t720 = t657 * t362 - t479 * t568 + t734;
t893 = qJD(6) * t742;
t42 = -t403 * t935 + t526 * t940 + t720 - t893;
t1063 = t42 * t940;
t941 = rSges(7,1) * t435 + rSges(7,2) * t434 - pkin(5) * t964 + t1001 * t543 - t1123 * t742;
t359 = pkin(4) * t742 + pkin(9) * t543;
t1061 = -t359 + t1102;
t361 = pkin(4) * t743 + pkin(9) * t545;
t1060 = -t361 + t1101;
t807 = t761 * t836;
t454 = pkin(4) * t807 + pkin(9) * t965;
t1059 = -t454 + t1086;
t805 = t649 * t836;
t455 = -pkin(4) * t805 - pkin(9) * t961;
t1058 = -t455 + t1087;
t478 = -t609 * pkin(4) + pkin(9) * t610;
t1057 = -t478 + t1095;
t1056 = (rSges(4,3) + qJ(3)) * t951 + (pkin(2) - t1078) * t950;
t1055 = (t1144 * t762 + t1098 + t1177) * t526 + (-t1144 * t435 + t1114 + t1179) * t404 + (-t1144 * t437 + t1113 + t1178) * t403;
t1054 = (t1146 * t549 - t1099 + t1176) * t526 + (t1146 * t434 - t1116 - t1174) * t404 + (t1146 * t436 - t1115 - t1175) * t403;
t1053 = (t1143 * t762 + t1145 * t549) * t526 + (-t1143 * t435 + t1145 * t434) * t404 + (-t1143 * t437 + t1145 * t436) * t403;
t379 = rSges(4,3) * t619 - t1078 * t618;
t380 = rSges(4,3) * t621 + t1078 * t620;
t775 = t379 * t693 + t380 * t696;
t326 = rSges(4,1) * t559 + rSges(4,2) * t558 - rSges(4,3) * t761;
t327 = rSges(4,1) * t561 + rSges(4,2) * t560 + rSges(4,3) * t649;
t776 = t326 * t693 + t327 * t696;
t1052 = t775 * qJD(2) + t776 * qJDD(2);
t892 = qJD(6) * t743;
t996 = rSges(7,1) * t192 + rSges(7,2) * t191 + pkin(5) * t732 + t1001 * t412 + t1123 * t411 - t892;
t997 = rSges(7,1) * t190 + rSges(7,2) * t189 + pkin(5) * t733 + t1001 * t410 + t1123 * t409 - t893;
t1051 = t941 * t179 - t940 * t180 + t997 * t403 - t996 * t404;
t745 = Icges(5,5) * t836 - Icges(5,6) * t690;
t1049 = t568 * (-Icges(5,3) * t650 - t297 * t690 + t299 * t836 + t649 * t745) + t569 * (-Icges(5,3) * t648 - t296 * t690 + t298 * t836 - t745 * t761) + t657 * (-t439 * t690 + t440 * t836 - (Icges(5,3) * t701 + t703 * t745) * t694);
t200 = pkin(4) * t410 + pkin(9) * t409;
t174 = t568 * t200;
t360 = pkin(4) * t543 - pkin(9) * t742;
t204 = t444 * t360;
t300 = t1002 * t618 - t619 * t944;
t266 = t300 * t679;
t301 = -t1002 * t620 - t621 * t944;
t267 = t301 * t856;
t305 = -pkin(3) * t872 + t1002 * t648 + t761 * t944;
t268 = t305 * t678;
t269 = t306 * t849;
t421 = pkin(2) * t618 + qJ(3) * t619 - t631;
t381 = t421 * t679;
t633 = qJD(3) * t649;
t422 = -pkin(2) * t620 + qJ(3) * t621 + t633;
t382 = t422 * t856;
t522 = pkin(2) * t648 - qJ(3) * t761;
t471 = t522 * t678;
t472 = t525 * t849;
t680 = qJD(3) * t951;
t674 = qJD(2) * t680;
t757 = qJDD(1) + t381 + t382 + t471 + t472 + t674;
t883 = qJDD(3) * t703;
t848 = t694 * t883;
t717 = t266 + t267 + t268 + t269 + t757 - t848;
t201 = pkin(4) * t412 + pkin(9) * t411;
t968 = t569 * t201;
t975 = t445 * t362;
t712 = t174 + t204 + t717 - t968 - t975;
t882 = qJDD(6) * t609;
t894 = qJD(6) * t529;
t7 = t712 + t882 + t894 + t1051;
t1048 = 0.2e1 * t7;
t850 = t522 * t679 + t525 * t856 + qJD(1);
t899 = qJD(3) * t703;
t744 = t305 * t679 + t306 * t856 - t694 * t899 + t850;
t722 = t568 * t360 - t362 * t569 + t744;
t891 = qJD(6) * t609;
t38 = t403 * t941 - t404 * t940 + t722 + t891;
t1047 = 0.2e1 * t38;
t1046 = 0.2e1 * t42;
t930 = -t305 - t522;
t738 = t696 * t831 + t697 * t930;
t721 = qJD(2) * t738 + t633;
t715 = -t360 * t657 + t569 * t479 + t721;
t43 = t404 * t935 - t526 * t941 + t715 - t892;
t1045 = 0.2e1 * t43;
t169 = rSges(6,1) * t435 + rSges(6,2) * t434 - rSges(6,3) * t742;
t171 = rSges(6,1) * t437 + rSges(6,2) * t436 - rSges(6,3) * t743;
t52 = t169 * t403 - t171 * t404 + t722;
t1044 = 0.2e1 * t52;
t291 = -rSges(6,1) * t762 + rSges(6,2) * t549 + rSges(6,3) * t609;
t56 = t171 * t526 - t291 * t403 + t720;
t1043 = 0.2e1 * t56;
t302 = rSges(5,1) * t543 + rSges(5,2) * t742 - rSges(5,3) * t761;
t303 = rSges(5,1) * t545 + rSges(5,2) * t743 + rSges(5,3) * t649;
t78 = t302 * t568 - t303 * t569 + t744;
t1042 = 0.2e1 * t78;
t442 = rSges(5,1) * t610 - rSges(5,2) * t609 - rSges(5,3) * t950;
t87 = t303 * t657 - t442 * t568 + t734;
t1041 = 0.2e1 * t87;
t1039 = m(5) / 0.2e1;
t1038 = m(6) / 0.2e1;
t1037 = -m(7) / 0.2e1;
t1036 = m(7) / 0.2e1;
t1035 = t179 / 0.2e1;
t1034 = t180 / 0.2e1;
t1033 = t319 / 0.2e1;
t1032 = -t403 / 0.2e1;
t1031 = t403 / 0.2e1;
t1030 = -t404 / 0.2e1;
t1029 = t404 / 0.2e1;
t1026 = t444 / 0.2e1;
t1025 = t445 / 0.2e1;
t1022 = -t526 / 0.2e1;
t1021 = t526 / 0.2e1;
t1017 = -t568 / 0.2e1;
t1016 = t568 / 0.2e1;
t1015 = -t569 / 0.2e1;
t1014 = t569 / 0.2e1;
t1013 = t584 / 0.2e1;
t1006 = -t657 / 0.2e1;
t1005 = t657 / 0.2e1;
t108 = rSges(6,1) * t190 + rSges(6,2) * t189 + rSges(6,3) * t409;
t983 = t108 * t403;
t110 = rSges(6,1) * t192 + rSges(6,2) * t191 + rSges(6,3) * t411;
t982 = t110 * t404;
t981 = t169 * t179;
t980 = t171 * t180;
t187 = rSges(5,1) * t410 - rSges(5,2) * t409 + rSges(5,3) * t619;
t979 = t187 * t568;
t188 = rSges(5,1) * t412 - rSges(5,2) * t411 + rSges(5,3) * t621;
t978 = t188 * t569;
t977 = t302 * t444;
t976 = t303 * t445;
t946 = t699 * t701;
t943 = -t110 - t201;
t942 = rSges(7,1) * t313 + rSges(7,2) * t312 + pkin(5) * t719 + t1001 * t530 + t1123 * t529 + t891;
t939 = -t171 - t362;
t938 = t649 * t200 + t621 * t360;
t937 = -t435 * rSges(7,2) + t1147 * t434;
t936 = -t437 * rSges(7,2) + t1147 * t436;
t396 = t697 * t422;
t934 = t697 * t301 + t396;
t932 = -t291 - t479;
t931 = -t300 - t421;
t929 = t360 * t950 - t479 * t761;
t928 = t762 * rSges(7,2) + t1147 * t549;
t927 = t421 * t954 + t422 * t952;
t419 = t648 * rSges(4,3) - t1078 * t761;
t520 = pkin(2) * t761 + qJ(3) * t648;
t926 = -t419 - t520;
t925 = Icges(3,1) * t761 - t467 - t995;
t924 = -Icges(3,1) * t649 - t468 - t994;
t923 = -Icges(3,2) * t648 + t469 + t636;
t922 = -Icges(3,2) * t650 + t470 - t637;
t921 = -rSges(4,1) * t646 - rSges(4,2) * t645 + rSges(4,3) * t950 - t654;
t919 = t522 * t954 + t525 * t952;
t571 = (-t899 + (pkin(2) * t703 + qJ(3) * t701) * qJD(2)) * t694;
t918 = -(t1002 * t703 - t701 * t944) * t902 - t571;
t523 = -t649 * pkin(2) + qJ(3) * t650;
t917 = qJD(3) * t648 + t523 * t689;
t913 = -(rSges(4,3) * t701 - t1078 * t703) * t902 - t571;
t691 = t694 ^ 2;
t912 = -(t649 * t697 + t691 * t953) * qJD(2) + t619;
t911 = -(t691 * t949 + t697 * t761) * qJD(2) + t621;
t909 = -t648 * t699 + t686 * t761;
t908 = -t649 * t686 - t650 * t699;
t907 = qJD(3) * t621 + qJDD(3) * t649;
t905 = -Icges(3,2) * t951 + t608 + t682;
t903 = rSges(5,1) * t769 + rSges(5,3) * t951;
t898 = qJD(4) * t648;
t897 = qJD(4) * t650;
t895 = qJD(5) * t690;
t890 = qJD(6) * t690;
t887 = 0.2e1 * m(5);
t886 = 0.2e1 * m(6);
t885 = 0.2e1 * m(7);
t880 = 0.2e1 * t693;
t879 = 0.2e1 * t696;
t877 = 0.2e1 * qJD(2);
t876 = -t201 - t996;
t339 = pkin(4) * t530 + pkin(9) * t529;
t867 = t200 * t950 - t339 * t761 + t619 * t479;
t866 = t697 * t201 + t934;
t865 = -t200 + t931;
t863 = -t360 + t930;
t317 = rSges(5,1) * t530 - rSges(5,2) * t529 + rSges(5,3) * t855;
t862 = -t317 + t918;
t331 = -t523 + t908;
t861 = t331 * t689 + t917;
t860 = -t339 + t918;
t859 = -t442 + t920;
t236 = t475 * rSges(6,1) + t474 * rSges(6,2) + rSges(6,3) * t965;
t238 = t477 * rSges(6,1) + t476 * rSges(6,2) - rSges(6,3) * t961;
t858 = -t479 + t920;
t857 = t520 * t679 + t523 * t856 + t680;
t406 = t581 * rSges(6,1) + t580 * rSges(6,2) + rSges(6,3) * t875;
t847 = t902 / 0.2e1;
t839 = -t886 / 0.2e1;
t838 = t886 / 0.2e1;
t835 = t694 * t921;
t834 = t694 * t913;
t659 = t686 * t950;
t813 = -t694 * t946 + t659;
t830 = t813 * t694;
t829 = t568 * t359 - t361 * t569;
t828 = t657 * t361 - t478 * t568;
t827 = -t359 * t657 + t569 * t478;
t145 = rSges(6,1) * t313 + rSges(6,2) * t312 + rSges(6,3) * t529;
t826 = -t145 + t860;
t825 = t300 * t954 + t301 * t952 + t927;
t824 = t305 * t954 + t306 * t952 + t919;
t823 = -t291 + t858;
t822 = qJD(3) * t619 - qJDD(3) * t761 + t422 * t689 + t525 * t688;
t814 = t693 * t830;
t443 = (t649 * t696 - t693 * t761) * t902;
t812 = -t443 + t855;
t799 = t860 - t942;
t798 = t858 - t935;
t330 = -t520 + t909;
t797 = t330 * t679 + t331 * t856 + t857;
t485 = rSges(3,1) * t648 + rSges(3,2) * t761 - rSges(3,3) * t952;
t486 = rSges(3,1) * t650 - rSges(3,2) * t649 + rSges(3,3) * t954;
t773 = t485 * t693 + t486 * t696;
t497 = rSges(3,1) * t618 - rSges(3,2) * t619;
t498 = -rSges(3,1) * t620 - rSges(3,2) * t621;
t772 = t497 * t693 + t498 * t696;
t420 = t650 * rSges(4,3) + t1078 * t649;
t393 = rSges(5,1) * t807 - rSges(5,2) * t965 + t648 * rSges(5,3);
t394 = -rSges(5,1) * t805 + rSges(5,2) * t961 + t650 * rSges(5,3);
t252 = rSges(6,1) * t973 - rSges(6,2) * t974 + t543 * rSges(6,3);
t254 = rSges(6,1) * t970 - rSges(6,2) * t971 + t545 * rSges(6,3);
t354 = -rSges(6,1) * t966 + rSges(6,2) * t967 + t610 * rSges(6,3);
t768 = t200 * t954 + t201 * t952 + t825;
t767 = t360 * t954 + t362 * t952 + t824;
t615 = rSges(3,3) * t697 + (rSges(3,1) * t701 + rSges(3,2) * t703) * t694;
t766 = -t485 * t697 - t615 * t952;
t765 = t486 * t697 - t615 * t954;
t656 = (rSges(3,1) * t703 - rSges(3,2) * t701) * t694;
t635 = qJD(2) * t656;
t764 = -t497 * t697 - t635 * t952;
t763 = t498 * t697 - t635 * t954;
t756 = t694 * t773;
t704 = 0.2e1 * qJDD(1);
t753 = 0.2e1 * t381 + 0.2e1 * t382 + 0.2e1 * t471 + 0.2e1 * t472 + 0.2e1 * t674 - 0.2e1 * t848 + t704;
t752 = t327 * t697 + t693 * t835;
t751 = t38 * t997 + t7 * t941;
t748 = (Icges(5,5) * t742 - Icges(5,6) * t543) * t569 + (Icges(5,5) * t743 - Icges(5,6) * t545) * t568 + (-Icges(5,5) * t609 - Icges(5,6) * t610) * t657;
t747 = Icges(5,1) * t836 - Icges(5,4) * t690;
t746 = Icges(5,4) * t836 - Icges(5,2) * t690;
t737 = (-t326 - t522) * t697 + t696 * t835;
t736 = (-t330 - t520) * t697 - t696 * t830;
t735 = (-t379 - t421) * t697 + t696 * t834;
t634 = qJD(3) * t650;
t731 = -t360 * t854 - t657 * t454 + t479 * t898 + t569 * t576 + t634;
t730 = 0.2e1 * t266 + 0.2e1 * t267 + 0.2e1 * t268 + 0.2e1 * t269 + t753;
t729 = t362 * t854 + t657 * t455 - t479 * t897 - t568 * t576 + t861;
t724 = (Icges(5,1) * t743 - t297 - t991) * t568 + (Icges(5,1) * t742 - t296 - t992) * t569 + (-Icges(5,1) * t609 - t439 - t990) * t657;
t723 = (Icges(5,2) * t545 - t299 - t528) * t568 + (Icges(5,2) * t543 - t298 - t527) * t569 + (Icges(5,2) * t610 - t440 + t595) * t657;
t718 = t360 * t897 - t362 * t898 + t568 * t454 - t455 * t569 + t797;
t716 = -0.2e1 * t975 + 0.2e1 * t204 - 0.2e1 * t968 + 0.2e1 * t174 + t730;
t714 = (qJD(2) * t772 + qJDD(2) * t773) * t694;
t713 = t301 * t689 + t306 * t688 + (qJD(2) * t918 + qJDD(2) * t920) * t954 + t822;
t709 = t657 * t201 - t568 * t339 + t584 * t362 - t444 * t479 + t713;
t708 = (t697 * t931 + t918 * t952) * qJD(2) + t738 * qJDD(2) + t907;
t706 = -t657 * t200 + t569 * t339 - t584 * t360 + t445 * t479 + t708;
t603 = (t703 * t895 + t896) * t694;
t557 = -rSges(5,2) * t875 + t903;
t553 = (Icges(5,5) * t701 + t703 * t747) * t694;
t552 = (Icges(5,6) * t701 + t703 * t746) * t694;
t524 = -rSges(3,1) * t649 - rSges(3,2) * t650;
t521 = rSges(3,1) * t761 - rSges(3,2) * t648;
t514 = -Icges(3,5) * t649 - Icges(3,6) * t650;
t513 = Icges(3,5) * t761 - Icges(3,6) * t648;
t500 = -t649 * t895 + t897;
t499 = t761 * t895 + t898;
t487 = g(1) * t649 - g(2) * t761 - g(3) * t950;
t464 = -rSges(5,1) * t609 - rSges(5,2) * t610;
t418 = Icges(4,5) * t650 - t649 * t796;
t417 = Icges(4,5) * t648 + t761 * t796;
t416 = Icges(4,6) * t650 - t649 * t793;
t415 = Icges(4,6) * t648 + t761 * t793;
t392 = Icges(5,5) * t650 - t649 * t747;
t391 = Icges(5,5) * t648 + t747 * t761;
t390 = Icges(5,6) * t650 - t649 * t746;
t389 = Icges(5,6) * t648 + t746 * t761;
t370 = rSges(6,1) * t549 + rSges(6,2) * t762;
t358 = rSges(5,1) * t743 - rSges(5,2) * t545;
t357 = rSges(5,1) * t742 - rSges(5,2) * t543;
t336 = t766 * qJD(2);
t335 = t765 * qJD(2);
t328 = t362 * t855;
t307 = t649 * t360;
t255 = qJD(2) * t756 + qJD(1);
t220 = rSges(6,1) * t436 - rSges(6,2) * t437;
t218 = rSges(6,1) * t434 - rSges(6,2) * t435;
t135 = qJD(2) * t737 + t633;
t134 = qJD(2) * t752 + t916;
t128 = (qJD(2) * t776 - t899) * t694 + t850;
t88 = -t302 * t657 + t442 * t569 + t721;
t82 = qJD(2) * t735 + qJDD(2) * t737 + t907;
t81 = (qJD(2) * t380 + qJDD(2) * t327) * t697 + (qJD(2) * t913 + qJDD(2) * t921) * t954 + t822;
t72 = (-t883 + t1052) * t694 + t757;
t57 = -t169 * t526 + t291 * t404 + t715;
t53 = t119 * t569 + t120 * t568 + t146 * t657;
t47 = -t187 * t657 - t302 * t584 + t317 * t569 + t442 * t445 + t708;
t46 = t188 * t657 + t303 * t584 - t317 * t568 - t442 * t444 + t713;
t45 = t113 * t569 + t114 * t568 + t132 * t657;
t44 = t111 * t569 + t112 * t568 + t131 * t657;
t39 = t717 - t976 + t977 - t978 + t979;
t15 = -t108 * t526 + t145 * t404 - t169 * t319 + t180 * t291 + t706;
t14 = t110 * t526 - t145 * t403 + t171 * t319 - t179 * t291 + t709;
t13 = t712 - t980 + t981 - t982 + t983;
t11 = qJD(6) * t409 - qJDD(6) * t742 - t179 * t935 + t319 * t940 - t403 * t942 + t526 * t996 + t709;
t10 = qJD(6) * t411 - qJDD(6) * t743 + t180 * t935 - t319 * t941 + t404 * t942 - t526 * t997 + t706;
t1 = [m(2) * qJDD(1) + (t730 - 0.2e1 * t976 + 0.2e1 * t977 - 0.2e1 * t978 + 0.2e1 * t979) * t1039 + (t716 - 0.2e1 * t980 + 0.2e1 * t981 - 0.2e1 * t982 + 0.2e1 * t983) * t1038 + (-m(2) - m(4) - m(5) - m(6) - m(7)) * g(3) + (t704 / 0.2e1 - g(3) + t714) * m(3) + (t1052 * t1074 + t753) * m(4) / 0.2e1 + (t716 + 0.2e1 * t882 + 0.2e1 * t894 + 0.2e1 * t1051) * t1036; ((t1094 * t404 + t499 * t935 - t649 * t890 + t731) * t1045 + (-t1094 * t403 - t500 * t935 + t761 * t890 + t729) * t1046 + (qJD(6) * t875 - t1058 * t404 + t1059 * t403 - t940 * t499 + t941 * t500 + t718) * t1047 + (-t42 * t814 + t43 * t736) * t877 + (-t1045 * t941 + t1046 * t940) * t603 + (-t1045 * t1059 + t1046 * t1058) * t526) * t1037 + (t1084 * t694 + t1120 * t697) * t678 / 0.2e1 + ((qJD(2) * t1122 + qJDD(2) * t1119) * t697 + (qJD(2) * t1082 + qJDD(2) * t1085) * t694 + t1075) * t697 / 0.2e1 + (t1082 * t694 + t1122 * t697) * t689 / 0.2e1 - m(5) * (g(1) * (t394 + t908) + g(2) * (t393 + t909) + g(3) * (t659 + (-rSges(5,2) * t956 - t946) * t694 + t903)) - t1129 * t603 / 0.2e1 - t1130 * t500 / 0.2e1 - t1131 * t499 / 0.2e1 + (t1126 * t697 + (t1132 * t696 + t1133 * t693) * t694) * t1021 + (t1127 * t697 + (t1134 * t696 + t1135 * t693) * t694) * t1031 - m(7) * (g(1) * (t908 + t1087) + g(2) * (t909 + t1086) + g(3) * (t659 + (-t874 - t946) * t694 + t1142)) + (t1085 * t694 + t1119 * t697) * t688 / 0.2e1 + (-g(1) * (t420 + t523) + g(2) * t926 - g(3) * t1056 - t135 * t634 - t134 * t917 - t128 * t857 - ((t134 * t420 + t135 * t926) * t878 + ((-t1056 * t135 + t128 * t420) * t696 + (-t1056 * t134 + t128 * t419) * t693) * t1074) * qJD(2) / 0.2e1 + t82 * t737 + t135 * t735 + t81 * (t506 + t752) + t134 * (t380 * t697 + t693 * t834 + t396) + t72 * (t694 * t776 + t919) + t128 * (t694 * t775 + t927)) * m(4) + ((qJD(2) * t764 + qJDD(2) * t766) * t766 + t336 * t764 + (qJD(2) * t763 + qJDD(2) * t765) * t765 + t335 * t763 + (qJDD(1) + t714) * t756 + t255 * t772 * t694 - (t336 * (-t521 * t697 - t656 * t952) + t335 * (t524 * t697 - t656 * t954) + t255 * (t521 * t954 + t524 * t952)) * t877 / 0.2e1 - g(1) * t524 - g(2) * t521 - g(3) * t656) * m(3) - m(5) * (0.2e1 * t88 * (-t302 * t854 - t393 * t657 + t442 * t898 + t557 * t569 + t634) + (t303 * t854 + t394 * t657 - t442 * t897 - t557 * t568 + t861) * t1041 + (t393 * t568 - t394 * t569 + (t302 * t650 - t303 * t648) * qJD(4) + t797) * t1042 + (t736 * t88 - t814 * t87) * t877) / 0.2e1 - m(6) * (0.2e1 * t57 * (-t169 * t603 - t236 * t526 + t291 * t499 + t404 * t406 + t731) + (t171 * t603 + t238 * t526 - t291 * t500 - t403 * t406 + t729) * t1043 + (t169 * t500 - t171 * t499 + t236 * t403 - t238 * t404 + t718) * t1044 + (-t56 * t814 + t57 * t736) * t877) / 0.2e1 - ((t563 * t645 + t564 * t646) * t689 + t697 ^ 2 * t622 + ((t416 * t645 + t418 * t646) * t693 - (t415 * t645 + t417 * t646) * t696 + (t461 * t697 + (-t320 * t696 + t321 * t693) * t694) * t701 - t707 * t703 + ((t693 * t922 - t696 * t923) * t703 + (t693 * t924 - t696 * t925) * t701) * t694 + (-t513 * t696 + t514 * t693 + t701 * t906 + t703 * t905) * t697) * t902) * t689 / 0.2e1 + ((((t321 * t648 + t416 * t558 + t418 * t559) * t693 - (t320 * t648 + t415 * t558 + t417 * t559) * t696) * t694 - t707 * t761 + (-t514 * t952 + t648 * t924 + t761 * t922) * t954 - (-t513 * t952 + t648 * t925 + t761 * t923) * t952 + (t1090 * t648 + t558 * t563 + t559 * t564 - t651 * t952 + t761 * t905) * t697) * t696 / 0.2e1 - (((t321 * t650 + t416 * t560 + t418 * t561) * t693 - (t320 * t650 + t415 * t560 + t417 * t561) * t696) * t694 + t707 * t649 + (t514 * t954 - t649 * t922 + t650 * t924) * t954 - (t513 * t954 - t649 * t923 + t650 * t925) * t952 + (t1090 * t650 + t560 * t563 + t561 * t564 - t649 * t905 + t651 * t954) * t697) * t693 / 0.2e1) * t694 * qJD(2) ^ 2 - m(6) * (g(1) * (t238 + t455 + t908) + g(2) * (t236 + t454 + t909) + g(3) * (t813 + t406 + t576)) - (t1077 + t1141 * qJDD(2) + (((-t1154 * t618 + t1157 * t761 - t1159 * t619 - t373 * t558 - t375 * t559 + t490 * t952 - t494 * t648) * t696 + (t1153 * t618 - t1156 * t761 + t1158 * t619 + t374 * t558 + t376 * t559 - t491 * t952 + t495 * t648) * t693) * t1074 + (t1151 * t618 - t1152 * t761 + t1155 * t619 + t547 * t558 + t548 * t559 - t622 * t952 + t624 * t648) * t878) * qJD(2)) * t952 / 0.2e1 - t1141 * t849 / 0.2e1 + ((qJD(2) * t1124 + qJDD(2) * t1120) * t697 + (qJD(2) * t1081 + qJDD(2) * t1084) * t694 + t1076) * t954 / 0.2e1 - t45 * t897 / 0.2e1 - t44 * t898 / 0.2e1 + (t1064 * t603 + (-t1091 * t762 + t1092 * t549 + t1093 * t609 + t1098 * t581 + t1099 * t580 + t1100 * t875) * t526 + t1067 * t500 + t1068 * t499 + (-t1108 * t762 + t1110 * t549 + t1112 * t609 + t1114 * t581 + t1116 * t580 + t1118 * t875) * t404 + (-t1107 * t762 + t1109 * t549 + t1111 * t609 + t1113 * t581 + t1115 * t580 + t1117 * t875) * t403) * t1022 + (t1064 * t697 + (t1067 * t693 - t1068 * t696) * t694) * t1033 + (t14 * t1073 + t866 * t1043 + 0.2e1 * t13 * t767 + t768 * t1044 + (t15 * (-t169 + t863) + t57 * (-t108 + t865) + t14 * t171 + t56 * t110) * t878 + ((t52 * t110 + t13 * t171 + t15 * t823 + t57 * t826) * t879 + (t52 * t108 + t13 * t169 + t14 * t823 + t56 * t826) * t880) * t694) * t1038 + (t11 * t1073 + t866 * t1046 + t767 * t1048 + t768 * t1047 + (t10 * (t863 - t941) + t43 * (t865 - t997) + t11 * t940 + t42 * t996) * t878 + ((t10 * t798 + t38 * t996 + t43 * t799 + t7 * t940) * t879 + (t11 * t798 + t42 * t799 + t751) * t880) * t694) * t1036 + (t1128 * t697 + (t1136 * t696 + t1137 * t693) * t694) * t1029 + (t132 * t697 + (-t113 * t696 + t114 * t693) * t694) * t1026 + (t146 * t697 + (-t119 * t696 + t120 * t693) * t694) * t1013 + (t58 * t697 + (-t48 * t696 + t49 * t693) * t694) * t1014 + (t59 * t697 + (-t50 * t696 + t51 * t693) * t694) * t1016 + (t131 * t697 + (-t111 * t696 + t112 * t693) * t694) * t1025 + (t697 * t77 + (-t54 * t696 + t55 * t693) * t694) * t1005 - t53 * t854 / 0.2e1 + ((-t609 * t390 + t610 * t392) * t568 + (-t609 * t389 + t610 * t391) * t569 + (-t609 * t552 + t610 * t553) * t657 + (t119 * t648 + t120 * t650) * qJD(4) + ((qJD(4) * t146 + t294 * t569 + t295 * t568 + t438 * t657) * t701 + t1049 * t703) * t694) * t1006 + (t1065 * t603 + (t1091 * t437 + t1092 * t436 - t1093 * t743 + t1098 * t477 + t1099 * t476 - t1100 * t961) * t526 + t1069 * t500 + t1070 * t499 + (t1108 * t437 + t1110 * t436 - t1112 * t743 + t1114 * t477 + t1116 * t476 - t1118 * t961) * t404 + (t1107 * t437 + t1109 * t436 - t1111 * t743 + t1113 * t477 + t1115 * t476 - t1117 * t961) * t403) * t1032 + (t1065 * t697 + (t1069 * t693 - t1070 * t696) * t694) * t1035 + (t1066 * t603 + (t1091 * t435 + t1092 * t434 - t1093 * t742 + t1098 * t475 + t1099 * t474 + t1100 * t965) * t526 + t1071 * t500 + t1072 * t499 + (t1108 * t435 + t1110 * t434 - t1112 * t742 + t1114 * t475 + t1116 * t474 + t1118 * t965) * t404 + (t1107 * t435 + t1109 * t434 - t1111 * t742 + t1113 * t475 + t1115 * t474 + t1117 * t965) * t403) * t1030 + (t1066 * t697 + (t1071 * t693 - t1072 * t696) * t694) * t1034 + ((t650 * t295 + t390 * t743 + t545 * t392) * t568 + (t650 * t294 + t389 * t743 + t545 * t391) * t569 + (t650 * t438 + t545 * t553 + t552 * t743) * t657 + (t113 * t648 + t114 * t650 + t132 * t951) * qJD(4) - t1049 * t649) * t1017 + ((t648 * t295 + t390 * t742 + t543 * t392) * t568 + (t648 * t294 + t389 * t742 + t543 * t391) * t569 + (t648 * t438 + t543 * t553 + t552 * t742) * t657 + (t111 * t648 + t112 * t650 + t131 * t951) * qJD(4) + t1049 * t761) * t1015 + (0.2e1 * t46 * t933 + t934 * t1041 + 0.2e1 * t39 * t824 + t825 * t1042 + (t47 * (-t302 + t930) + t88 * (-t187 + t931) + t46 * t303 + t87 * t188) * t878 + ((t78 * t188 + t39 * t303 + t47 * t859 + t862 * t88) * t879 + (t78 * t187 + t39 * t302 + t46 * t859 + t862 * t87) * t880) * t694) * t1039 + (t1081 * t694 + t1124 * t697) * t693 * t847; (t10 * t649 - t11 * t761 + t38 * t812 + t42 * t912 + t43 * t911 - t7 * t950 - t487) * m(7) + (-t13 * t950 - t14 * t761 + t15 * t649 + t52 * t812 + t56 * t912 + t57 * t911 - t487) * m(6) + (-t443 * t78 - t46 * t761 + t47 * t649 - t487 + t911 * t88 + t912 * t87 + (-t39 * t703 + t78 * t900) * t694) * m(5) + (t128 * t812 + t134 * t912 + t135 * t911 + t649 * t82 - t72 * t950 - t761 * t81 - t487) * m(4); -m(7) * (g(1) * t1101 + g(2) * t1102 + g(3) * t1095) - m(6) * (g(1) * (t254 + t361) + g(2) * (t252 + t359) + g(3) * (t354 + t478)) - (t88 * (-t357 * t657 + t464 * t569) + t87 * (t358 * t657 - t464 * t568) + t78 * (t357 * t568 - t358 * t569)) * t887 / 0.2e1 + (t45 + t1130) * t621 / 0.2e1 + (t44 + t1131) * t619 / 0.2e1 + ((t1064 * t900 - t1126 * t703) * t694 + t1133 * t649 + t1132 * t761 + t1067 * t621 + t1068 * t619) * t1021 + ((t1065 * t900 - t1127 * t703) * t694 + t1135 * t649 + t1134 * t761 + t1069 * t621 + t1070 * t619) * t1031 + ((t1066 * t900 - t1128 * t703) * t694 + t1137 * t649 + t1136 * t761 + t1071 * t621 + t1072 * t619) * t1029 + (t545 * t724 + t649 * t748 - t723 * t743) * t1017 + (t47 * (t302 * t950 - t442 * t761) + t88 * (-t317 * t761 + t442 * t619 + (t187 * t703 - t302 * t900) * t694) + t46 * (-t303 * t950 - t442 * t649) + t87 * (-t317 * t649 - t442 * t621 + (-t188 * t703 + t303 * t900) * t694) + t39 * (t302 * t649 + t303 * t761) + t78 * (t187 * t649 + t188 * t761 + t302 * t621 - t303 * t619)) * t887 / 0.2e1 + (t543 * t724 - t723 * t742 - t748 * t761) * t1015 + (0.2e1 * t10 * t929 + t867 * t1045 + t328 * t1046 + t307 * t1048 + t938 * t1047 + (t43 * (-t360 - t941) + t1063) * t877 * t951 - 0.2e1 * (t10 * t935 + t38 * t876 + t43 * t942 + t7 * t868) * t761 + 0.2e1 * (t11 * t1089 + t42 * (-t339 - t942) + t751) * t649 + 0.2e1 * (t10 * t941 + t11 * t868 + t42 * t876 + t43 * t997) * t950 + (t1046 * t1089 + t941 * t1047) * t621 + (t935 * t1045 + t1047 * t868) * t619) * t1036 + (t15 * (t169 * t950 - t291 * t761 + t929) + t57 * (-t145 * t761 + t291 * t619 + (t108 * t703 + (-t169 - t360) * t900) * t694 + t867) + t14 * (t649 * t932 + t939 * t950) + t56 * (t328 + (-t145 - t339) * t649 + t932 * t621 + (t171 * t900 + t703 * t943) * t694) + t13 * (t169 * t649 - t761 * t939 + t307) + t52 * (t108 * t649 + t169 * t621 + t619 * t939 - t761 * t943 + t938)) * t838 + (-t111 * t761 + t112 * t649 - t131 * t950) * t1025 + (-t113 * t761 + t114 * t649 - t132 * t950) * t1026 + (-t119 * t761 + t120 * t649 - t146 * t950) * t1013 + (t111 * t619 + t112 * t621 - t48 * t761 + t49 * t649 + (t131 * t900 - t58 * t703) * t694) * t1014 + (t113 * t619 + t114 * t621 - t50 * t761 + t51 * t649 + (t132 * t900 - t59 * t703) * t694) * t1016 + (t119 * t619 + t120 * t621 - t54 * t761 + t55 * t649 + (t146 * t900 - t703 * t77) * t694) * t1005 - t1075 * t950 / 0.2e1 + t1076 * t649 / 0.2e1 - t1077 * t761 / 0.2e1 + ((qJD(6) * t545 + t1057 * t404 - t1061 * t526 + t827) * t1045 + (qJD(6) * t543 - t1057 * t403 + t1060 * t526 + t828) * t1046 + (qJD(6) * t610 - t1060 * t404 + t1061 * t403 + t829) * t1047 + 0.2e1 * ((-t43 * t941 + t1063) * t610 + (t38 * t941 - t42 * t935) * t545 + (-t38 * t940 + t43 * t935) * t543) * qJD(5)) * t1037 + (t57 * (-t252 * t526 + t354 * t404 + (-t169 * t610 + t291 * t543) * qJD(5) + t827) + t56 * (t254 * t526 - t354 * t403 + (t171 * t610 - t291 * t545) * qJD(5) + t828) + t52 * (t252 * t403 - t254 * t404 + (t169 * t545 - t171 * t543) * qJD(5) + t829)) * t839 + (t1088 * t609 + (-t1096 * t762 + t1097 * t549 + t1100 * t610) * t526 + (-t1104 * t762 + t1106 * t549 + t1118 * t610) * t404 + (-t1103 * t762 + t1105 * t549 + t1117 * t610) * t403 + (t1064 * t610 + t1067 * t545 + t1068 * t543) * qJD(5)) * t1022 + (-t1064 * t950 + t1067 * t649 - t1068 * t761) * t1033 - m(5) * (g(1) * t358 + g(2) * t357 + g(3) * t464) + (t609 * t723 + t610 * t724 - t748 * t950) * t1006 + (-t1088 * t743 + (t1096 * t437 + t1097 * t436 + t1100 * t545) * t526 + (t1104 * t437 + t1106 * t436 + t1118 * t545) * t404 + (t1103 * t437 + t1105 * t436 + t1117 * t545) * t403 + (t1065 * t610 + t1069 * t545 + t1070 * t543) * qJD(5)) * t1032 + (-t1065 * t950 + t1069 * t649 - t1070 * t761) * t1035 + (-t1088 * t742 + (t1096 * t435 + t1097 * t434 + t1100 * t543) * t526 + (t1104 * t435 + t1106 * t434 + t1118 * t543) * t404 + (t1103 * t435 + t1105 * t434 + t1117 * t543) * t403 + (t1066 * t610 + t1071 * t545 + t1072 * t543) * qJD(5)) * t1030 + (-t1066 * t950 + t1071 * t649 - t1072 * t761) * t1034 + (t53 + t1129) * t701 * t847 - (t1129 * t610 + t1130 * t545 + t1131 * t543) * qJD(5) / 0.2e1; -m(7) * (g(1) * t936 + g(2) * t937 + g(3) * t928) - (t43 * (t404 * t928 - t526 * t937) + t42 * (-t403 * t928 + t526 * t936) + t38 * (t403 * t937 - t404 * t936)) * t885 / 0.2e1 + (t15 * (-t169 * t609 - t291 * t742) + t57 * (-t108 * t609 - t145 * t742 - t169 * t529 + t291 * t409) + t14 * (t171 * t609 + t291 * t743) + t56 * (t110 * t609 + t145 * t743 + t171 * t529 - t291 * t411) + t13 * (-t169 * t743 + t171 * t742) + t52 * (-t108 * t743 + t110 * t742 + t169 * t411 - t171 * t409)) * t838 + (t57 * (-t218 * t526 + t370 * t404) + t56 * (t220 * t526 - t370 * t403) + t52 * (t218 * t403 - t220 * t404)) * t839 - m(6) * (g(1) * t220 + g(2) * t218 + g(3) * t370) + (t10 * (-t609 * t941 - t742 * t935) + t43 * (t409 * t935 - t529 * t941 - t609 * t997 - t742 * t942) + t11 * (t609 * t940 + t743 * t935) + t42 * (-t411 * t935 + t529 * t940 + t609 * t996 + t743 * t942) + t7 * (t742 * t940 - t743 * t941) + t38 * (-t409 * t940 + t411 * t941 + t742 * t996 - t743 * t997)) * t885 / 0.2e1 + (t1065 * t609 - t1069 * t743 - t1070 * t742) * t1035 + (t1066 * t609 - t1071 * t743 - t1072 * t742) * t1034 + (t1064 * t609 - t1067 * t743 - t1068 * t742) * t1033 + (-t1053 * t743 + t1054 * t437 + t1055 * t436) * t1032 + (t1065 * t529 + t1069 * t411 + t1070 * t409 + t1127 * t609 + t1134 * t742 - t1135 * t743) * t1031 + (-t1053 * t742 + t1054 * t435 + t1055 * t434) * t1030 + (t1066 * t529 + t1071 * t411 + t1072 * t409 + t1128 * t609 + t1136 * t742 - t1137 * t743) * t1029 + t1131 * t409 / 0.2e1 + t1130 * t411 / 0.2e1 + (t1053 * t609 - t1054 * t762 + t1055 * t549) * t1022 + (t1064 * t529 + t1067 * t411 + t1068 * t409 + t1126 * t609 + t1132 * t742 - t1133 * t743) * t1021 + t1129 * t529 / 0.2e1 - t1140 * t742 / 0.2e1 - t1139 * t743 / 0.2e1 + t1138 * t609 / 0.2e1; ((-g(3) + t7) * t609 - (t10 - g(1)) * t743 - (-g(2) + t11) * t742 + (-t404 * t609 - t526 * t742 + t411) * t43 + (t403 * t609 + t526 * t743 + t409) * t42 + (t403 * t742 - t404 * t743 + t529) * t38) * m(7);];
tau  = t1;
