% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:07:47
% EndTime: 2019-03-08 20:07:58
% DurationCPUTime: 4.83s
% Computational Cost: add. (6059->367), mult. (13705->554), div. (0->0), fcn. (15654->10), ass. (0->309)
t275 = sin(pkin(11));
t451 = cos(qJ(4));
t362 = t451 * t275;
t277 = cos(pkin(11));
t279 = sin(qJ(4));
t408 = t279 * t277;
t248 = t362 + t408;
t276 = sin(pkin(6));
t282 = cos(qJ(2));
t415 = t276 * t282;
t348 = t415 / 0.2e1;
t402 = t248 * t348;
t278 = sin(qJ(5));
t281 = cos(qJ(5));
t411 = t278 * t281;
t341 = 0.2e1 * t248 * t411;
t361 = t451 * t277;
t409 = t279 * t275;
t304 = t361 - t409;
t449 = t304 * pkin(5);
t421 = t248 * t281;
t269 = -pkin(3) * t277 - pkin(2);
t334 = -pkin(4) * t304 - pkin(9) * t248;
t166 = t269 + t334;
t446 = pkin(8) + qJ(3);
t259 = t446 * t277;
t363 = t451 * t259;
t258 = t446 * t275;
t410 = t279 * t258;
t195 = t363 - t410;
t413 = t278 * t195;
t99 = -t281 * t166 + t413;
t85 = -qJ(6) * t421 - t99;
t68 = t85 - t449;
t464 = -t68 + t85;
t243 = t304 ^ 2;
t244 = t248 ^ 2;
t463 = -t244 - t243;
t372 = t244 - t243;
t240 = t362 / 0.2e1 + t408 / 0.2e1;
t271 = t275 ^ 2;
t173 = t281 * t304;
t447 = t248 * pkin(4);
t448 = t304 * pkin(9);
t188 = t447 - t448;
t181 = t281 * t188;
t194 = t451 * t258 + t259 * t279;
t425 = t194 * t278;
t74 = pkin(5) * t248 - qJ(6) * t173 + t181 + t425;
t462 = t74 / 0.2e1;
t461 = t85 / 0.2e1;
t280 = sin(qJ(2));
t416 = t276 * t280;
t437 = cos(pkin(6));
t295 = -t275 * t416 + t277 * t437;
t292 = t279 * t295;
t343 = t437 * t275;
t234 = t277 * t416 + t343;
t364 = t451 * t234;
t157 = t364 + t292;
t414 = t278 * t157;
t125 = t281 * t415 + t414;
t460 = -t125 / 0.2e1;
t407 = t281 * t157;
t126 = -t278 * t415 + t407;
t459 = -t126 / 0.2e1;
t458 = t126 / 0.2e1;
t208 = t304 * t415;
t412 = t278 * t208;
t160 = t281 * t416 - t412;
t457 = t160 / 0.2e1;
t207 = t248 * t415;
t456 = -t207 / 0.2e1;
t445 = -qJ(6) - pkin(9);
t261 = t445 * t281;
t455 = t261 / 0.2e1;
t274 = t281 ^ 2;
t454 = -t274 / 0.2e1;
t453 = t278 / 0.2e1;
t452 = -t281 / 0.2e1;
t450 = pkin(5) * t278;
t406 = t281 * t195;
t100 = t166 * t278 + t406;
t170 = t278 * t248;
t86 = -qJ(6) * t170 + t100;
t439 = t86 * t281;
t441 = t68 * t278;
t444 = -t441 / 0.2e1 + t439 / 0.2e1;
t443 = pkin(5) * qJD(5);
t368 = t461 - t68 / 0.2e1;
t369 = -t449 / 0.2e1;
t315 = t369 - t368;
t8 = t315 * t281;
t442 = qJD(2) * t8;
t440 = t74 * t281;
t168 = t278 * t304;
t180 = t278 * t188;
t187 = t194 * t281;
t403 = t187 - t180;
t90 = -qJ(6) * t168 - t403;
t438 = t90 * t278;
t11 = t464 * t170;
t436 = qJD(2) * t11;
t270 = -pkin(5) * t281 - pkin(4);
t417 = t261 * t281;
t260 = t445 * t278;
t420 = t260 * t278;
t286 = -(t417 / 0.2e1 + t420 / 0.2e1) * t304 + t248 * t270 / 0.2e1;
t314 = -t440 / 0.2e1 - t438 / 0.2e1;
t27 = t286 + t314;
t435 = qJD(2) * t27;
t430 = t126 * t281;
t121 = t430 / 0.2e1;
t352 = -t430 / 0.2e1;
t64 = t121 + t352;
t434 = qJD(3) * t64;
t433 = t125 * t304;
t432 = t125 * t278;
t431 = t126 * t304;
t148 = pkin(5) * t170 + t194;
t429 = t148 * t278;
t156 = t234 * t279 - t295 * t451;
t428 = t156 * t248;
t83 = t156 * t278;
t427 = t160 * t281;
t366 = t278 * t416;
t405 = t281 * t208;
t161 = t366 + t405;
t426 = t161 * t278;
t424 = t207 * t278;
t423 = t207 * t281;
t22 = (t157 - t430 - t432) * t156;
t422 = t22 * qJD(1);
t419 = t260 * t281;
t418 = t261 * t278;
t31 = -t125 * t160 + t126 * t161 + t156 * t207;
t404 = t31 * qJD(1);
t262 = t277 ^ 2 + t271;
t273 = t278 ^ 2;
t266 = t273 + t274;
t267 = t274 - t273;
t135 = t372 * t278;
t400 = qJD(2) * t135;
t136 = t463 * t278;
t399 = qJD(2) * t136;
t137 = t372 * t281;
t398 = qJD(2) * t137;
t179 = t463 * t281;
t397 = qJD(2) * t179;
t396 = qJD(2) * t276;
t395 = qJD(3) * t281;
t394 = qJD(4) * t156;
t393 = qJD(4) * t278;
t392 = qJD(4) * t281;
t391 = qJD(5) * t126;
t390 = qJD(5) * t278;
t389 = qJD(5) * t281;
t109 = ((-0.1e1 + t271) * t416 + (-t343 + t234) * t277) * t415;
t388 = t109 * qJD(1);
t335 = (t454 - t273 / 0.2e1) * t248;
t132 = t335 - t240;
t387 = t132 * qJD(2);
t299 = -t361 / 0.2e1 + t409 / 0.2e1;
t139 = (t304 / 0.2e1 + t299) * t415;
t385 = t139 * qJD(1);
t384 = t372 * qJD(2);
t383 = t168 * qJD(2);
t382 = t170 * qJD(2);
t381 = t173 * qJD(2);
t235 = t273 * t304;
t236 = t274 * t304;
t176 = -t235 - t236;
t380 = t176 * qJD(2);
t177 = t266 * t244;
t379 = t177 * qJD(2);
t378 = t240 * qJD(2);
t377 = t304 * qJD(2);
t237 = t304 * qJD(4);
t376 = t248 * qJD(2);
t375 = t248 * qJD(4);
t374 = t262 * qJD(2);
t373 = t266 * qJD(4);
t371 = pkin(5) * t421;
t370 = pkin(5) * t390;
t365 = -t439 / 0.2e1;
t360 = t278 * t392;
t359 = t248 * t390;
t358 = t248 * t389;
t357 = t304 * t376;
t356 = t304 * t375;
t355 = t280 * t396;
t354 = t278 * t389;
t353 = t281 * t376;
t351 = -t421 / 0.2e1;
t350 = t421 / 0.2e1;
t349 = t416 / 0.2e1;
t347 = -t412 / 0.2e1;
t346 = -t170 / 0.2e1;
t345 = -t405 / 0.2e1;
t344 = t180 / 0.2e1 - t187 / 0.2e1;
t342 = t262 * t282;
t340 = t278 * t369;
t339 = qJD(2) * t269 + qJD(3);
t338 = -qJD(5) + t377;
t336 = t156 * t350;
t333 = qJD(4) * t341;
t149 = pkin(5) * t168 + t195;
t283 = (t365 + t441 / 0.2e1 + t149 / 0.2e1) * t156 + t74 * t460 + t90 * t458 + t157 * t148 / 0.2e1;
t291 = -t160 * t260 / 0.2e1 + t161 * t455 + t270 * t456;
t2 = t283 + t291;
t7 = t148 * t149 + t68 * t74 + t86 * t90;
t332 = t2 * qJD(1) + t7 * qJD(2);
t331 = t86 * t278 + t68 * t281;
t12 = t148 * t371 + t464 * t86;
t3 = -t368 * t126 + (t156 * t351 + t457) * pkin(5);
t330 = -qJD(1) * t3 + qJD(2) * t12;
t10 = (t438 + t440) * t248 + t331 * t304;
t309 = t125 * t452 + t126 * t453;
t294 = t309 * t304;
t307 = t160 * t453 + t161 * t452;
t34 = -t294 + t307;
t328 = t34 * qJD(1) - t10 * qJD(2);
t13 = t315 * t278;
t327 = -qJD(1) * t64 + qJD(2) * t13;
t19 = t148 * t248 - (-t439 + t441) * t304;
t308 = t352 - t432 / 0.2e1;
t287 = -t308 * t304 + t428 / 0.2e1;
t306 = -t427 / 0.2e1 - t426 / 0.2e1;
t21 = t287 + t306;
t326 = -qJD(1) * t21 - qJD(2) * t19;
t311 = (t460 + t414 / 0.2e1) * t248;
t23 = t423 / 0.2e1 + t311;
t29 = -t181 * t304 + (-t99 + t413) * t248;
t325 = t23 * qJD(1) + t29 * qJD(2);
t310 = (t459 + t407 / 0.2e1) * t248;
t26 = -t424 / 0.2e1 + t310;
t30 = (-t100 + t406) * t248 - (t403 - t187) * t304;
t324 = t26 * qJD(1) + t30 * qJD(2);
t32 = t331 * t248;
t36 = t248 * t309 + t402;
t323 = -qJD(1) * t36 - qJD(2) * t32;
t305 = t349 - t428 / 0.2e1;
t38 = t347 - t431 / 0.2e1 + t305 * t281;
t59 = t100 * t304 + t194 * t421;
t322 = qJD(1) * t38 - qJD(2) * t59;
t39 = t345 + t433 / 0.2e1 - t305 * t278;
t58 = -t170 * t194 - t304 * t99;
t321 = -qJD(1) * t39 + qJD(2) * t58;
t128 = t270 * t450;
t5 = t368 * t261 + (t462 + t270 * t351 - t429 / 0.2e1) * pkin(5);
t320 = -qJD(2) * t5 + qJD(4) * t128;
t319 = t417 + t420;
t318 = t338 * t281;
t285 = t234 * t277 / 0.2e1 - t295 * t275 / 0.2e1;
t129 = t349 - t285;
t255 = t262 * qJ(3);
t317 = qJD(1) * t129 - qJD(2) * t255;
t316 = -t448 / 0.2e1 + t447 / 0.2e1;
t300 = t316 * t281;
t55 = -t181 / 0.2e1 - t300;
t313 = pkin(4) * t393 - qJD(2) * t55;
t289 = t316 * t278 + t187 / 0.2e1;
t53 = t289 + t344;
t312 = pkin(4) * t392 - qJD(2) * t53;
t303 = t248 * t318;
t167 = (t273 / 0.2e1 + t454) * t248;
t302 = -qJD(2) * t167 + t360;
t301 = qJD(5) * t240 - t357;
t298 = qJD(2) * t244 * t411 + qJD(4) * t167;
t178 = t267 * t244;
t297 = qJD(2) * t178 + t333;
t296 = qJD(2) * t341 - qJD(4) * t267;
t288 = t410 / 0.2e1 - t363 / 0.2e1 + t340;
t290 = (t418 / 0.2e1 - t419 / 0.2e1) * t248 + t444;
t18 = t288 + t290;
t284 = t292 / 0.2e1 + t364 / 0.2e1;
t43 = t284 + t308;
t293 = -qJD(1) * t43 + qJD(2) * t18 - qJD(4) * t319;
t233 = t240 * qJD(4);
t231 = t281 * t375;
t205 = (t353 + t393) * pkin(5);
t163 = t168 * qJD(5);
t162 = t167 * qJD(5);
t150 = t383 - t390;
t141 = t456 - t402;
t140 = t299 * t415 - t304 * t348;
t131 = t335 + t240;
t130 = t349 + t285;
t84 = t156 * t281;
t62 = t64 * qJD(5);
t56 = t425 + t181 / 0.2e1 - t300;
t54 = t289 - t344;
t44 = t121 + t432 / 0.2e1 + t284;
t41 = t431 / 0.2e1 + t336 + t347 + t281 * t349;
t40 = -t433 / 0.2e1 + t156 * t346 + t345 - t366 / 0.2e1;
t37 = t125 * t350 + t126 * t346 + t402;
t33 = -t294 - t307;
t28 = t286 - t314;
t25 = t424 / 0.2e1 + t310;
t24 = -t423 / 0.2e1 + t311;
t20 = t287 - t306;
t17 = -t288 + t290;
t16 = pkin(5) * t83;
t14 = t453 * t85 + t340 + t365 + t444;
t9 = (t368 + t369) * t281;
t6 = -t261 * t461 + t68 * t455 + (t270 * t350 + t429 / 0.2e1 + t462) * pkin(5);
t4 = t85 * t458 + t68 * t459 + (t336 + t457) * pkin(5);
t1 = t283 - t291;
t15 = [0, 0, 0, 0, 0, 0, 0, t109 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t31 + qJD(4) * t22; 0, 0, -t355, -t282 * t396, -t277 * t355, t275 * t355, t342 * t396, t388 + t130 * qJD(3) + (-pkin(2) * t280 + qJ(3) * t342) * t396, 0, 0, 0, 0, 0, qJD(4) * t141 - t304 * t355, qJD(4) * t140 + t248 * t355, 0, 0, 0, 0, 0 (-t160 * t304 + t170 * t207) * qJD(2) + t24 * qJD(4) + t41 * qJD(5) (t161 * t304 + t207 * t421) * qJD(2) + t25 * qJD(4) + t40 * qJD(5), t33 * qJD(4) + (-t426 - t427) * t376, t404 + (t148 * t207 + t160 * t68 + t161 * t86) * qJD(2) + t20 * qJD(3) + t1 * qJD(4) + t4 * qJD(5) + t37 * qJD(6); 0, 0, 0, 0, 0, 0, 0, t130 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t20 + t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t141 - qJD(4) * t157, qJD(2) * t140 + t394, 0, 0, 0, 0, 0, qJD(2) * t24 + qJD(5) * t83 - t157 * t392, qJD(2) * t25 + qJD(5) * t84 + t157 * t393, t33 * qJD(2) - t266 * t394, t422 + t1 * qJD(2) + (t156 * t319 + t157 * t270) * qJD(4) + t16 * qJD(5) + t44 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(4) * t83 - t391, qJD(2) * t40 + qJD(4) * t84 + qJD(5) * t125, 0, -pkin(5) * t391 + qJD(2) * t4 + qJD(4) * t16 + t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t37 + qJD(4) * t44; 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t129 - t388, 0, 0, 0, 0, 0, 0, -t139 * qJD(4), 0, 0, 0, 0, 0, qJD(4) * t23 - qJD(5) * t38, qJD(4) * t26 - qJD(5) * t39, qJD(4) * t34, qJD(3) * t21 + qJD(4) * t2 - qJD(5) * t3 - qJD(6) * t36 - t404; 0, 0, 0, 0, 0, 0, t262 * qJD(3), t255 * qJD(3), t356, -t372 * qJD(4), 0, 0, 0, t269 * t375, t269 * t237, -t244 * t354 + t274 * t356, -qJD(5) * t178 - t304 * t333, qJD(4) * t137 + t304 * t359, -qJD(4) * t135 + t304 * t358, -t356, -qJD(3) * t136 + qJD(4) * t29 + qJD(5) * t59, -qJD(3) * t179 + qJD(4) * t30 + qJD(5) * t58, -qJD(4) * t10 - qJD(5) * t11 + qJD(6) * t177, qJD(3) * t19 + qJD(4) * t7 + qJD(5) * t12 - qJD(6) * t32; 0, 0, 0, 0, 0, 0, t374, -t317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399, -t397, 0, qJD(4) * t28 + qJD(5) * t14 + qJD(6) * t131 - t326; 0, 0, 0, 0, 0, 0, 0, 0, t357, -t384, t237, -t375, 0, -qJD(4) * t195 + t269 * t376, qJD(4) * t194 + t269 * t377 - t385, -t162 - (-t274 * t376 - t360) * t304 (-t235 + t236) * qJD(4) + (-qJD(5) - t377) * t341, t278 * t375 + t398, t231 - t400, t301 (t278 * t334 - t406) * qJD(4) + t56 * qJD(5) + t325 (t281 * t334 + t413) * qJD(4) + t54 * qJD(5) + t324 (-t74 * t278 + t90 * t281 - (-t418 + t419) * t304) * qJD(4) + t9 * qJD(5) + t328, t28 * qJD(3) + (t149 * t270 + t260 * t74 - t261 * t90) * qJD(4) + t6 * qJD(5) + t17 * qJD(6) + t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t297, t338 * t170, t303, t233, qJD(4) * t56 - qJD(5) * t100 - t322, qJD(4) * t54 + qJD(5) * t99 + t321, pkin(5) * t359 + qJD(4) * t9 - t436, qJD(3) * t14 + qJD(4) * t6 - t443 * t86 + t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379, qJD(3) * t131 + qJD(4) * t17 + t323; 0, 0, 0, 0, 0, 0, 0, t129 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t21 + t62; 0, 0, 0, 0, 0, 0, -t374, t317, 0, 0, 0, 0, 0, t375, t237, 0, 0, 0, 0, 0, t163 + t231 + t399, -qJD(4) * t170 + t304 * t389 + t397, t176 * qJD(4), -qJD(4) * t27 - qJD(5) * t13 + qJD(6) * t132 + t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, t377, 0, 0, 0, 0, 0, t353, -t382, t380, -t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, t318, 0, -t327 - t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t23, -qJD(2) * t26, -qJD(2) * t34, -qJD(2) * t2 - qJD(6) * t43 - t422; 0, 0, 0, 0, 0, 0, 0, 0, -t357, t384, 0, 0, 0, -t248 * t339, -t304 * t339 + t385, -t274 * t357 - t162, 0.2e1 * t278 * t303, -qJD(5) * t173 - t398, t163 + t400, -t301, qJD(5) * t55 - t248 * t395 - t325, qJD(3) * t170 + qJD(5) * t53 - t324, -qJD(3) * t176 - qJD(5) * t8 - t328, qJD(3) * t27 - qJD(5) * t5 + qJD(6) * t18 - t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, -t377, 0, 0, 0, 0, 0, -t353, t382, -t380, t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t267 * qJD(5), 0, 0, 0, -pkin(4) * t390, -pkin(4) * t389, qJD(6) * t266, qJD(5) * t128 - qJD(6) * t319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, -t296, -t381 + t389, t150, -t378, -pkin(9) * t389 - t313, pkin(9) * t390 - t312, -pkin(5) * t389 - t442, t261 * t443 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t373, t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t38, qJD(2) * t39, 0, qJD(2) * t3 - t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t297, qJD(4) * t173 - t278 * t357, -qJD(4) * t168 - t304 * t353, t233, -qJD(3) * t168 - qJD(4) * t55 + t322, -qJD(4) * t53 - t304 * t395 - t321, qJD(4) * t8 + t436, qJD(3) * t13 + qJD(4) * t5 - qJD(6) * t371 - t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383, -t281 * t377, 0, t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, t296, t381, -t383, t378, t313, t312, t442, -qJD(6) * t450 - t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t36 + qJD(4) * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t379, pkin(5) * t358 - qJD(3) * t132 - qJD(4) * t18 - t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373, -t293 + t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t15;
