% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRRP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:07:45
% EndTime: 2019-03-08 20:07:53
% DurationCPUTime: 3.15s
% Computational Cost: add. (5647->371), mult. (14671->492), div. (0->0), fcn. (11670->10), ass. (0->203)
t149 = cos(pkin(11));
t256 = cos(qJ(4));
t191 = t256 * t149;
t147 = sin(pkin(11));
t152 = sin(qJ(4));
t207 = t152 * t147;
t165 = t191 - t207;
t148 = sin(pkin(6));
t155 = cos(qJ(2));
t210 = t148 * t155;
t158 = t165 * t210;
t252 = pkin(8) + qJ(3);
t129 = t252 * t147;
t130 = t252 * t149;
t260 = -t129 * t256 - t130 * t152;
t243 = -qJD(1) * t158 + qJD(3) * t165 + qJD(4) * t260;
t186 = qJD(4) * t207;
t120 = -qJD(4) * t191 + t186;
t126 = t147 * t256 + t149 * t152;
t121 = t126 * qJD(4);
t153 = sin(qJ(2));
t205 = qJD(1) * t148;
t189 = t153 * t205;
t270 = pkin(4) * t121 + pkin(9) * t120 - t189;
t137 = qJD(2) * t191;
t116 = qJD(2) * t207 - t137;
t110 = qJD(5) + t116;
t151 = sin(qJ(5));
t154 = cos(qJ(5));
t197 = qJD(5) * t154;
t198 = qJD(5) * t151;
t203 = qJD(1) * t155;
t188 = t148 * t203;
t124 = (qJD(3) + t188) * qJD(2);
t262 = t165 * t124;
t128 = qJD(2) * qJ(3) + t189;
t150 = cos(pkin(6));
t204 = qJD(1) * t150;
t136 = t149 * t204;
t241 = pkin(8) * qJD(2);
t91 = t136 + (-t128 - t241) * t147;
t104 = t128 * t149 + t147 * t204;
t92 = t149 * t241 + t104;
t265 = -t152 * t92 + t256 * t91;
t38 = qJD(4) * t265 + t262;
t58 = t152 * t91 + t256 * t92;
t53 = qJD(4) * pkin(9) + t58;
t175 = qJD(3) - t188;
t140 = -pkin(3) * t149 - pkin(2);
t201 = qJD(2) * t140;
t109 = t175 + t201;
t202 = qJD(2) * t126;
t61 = pkin(4) * t116 - pkin(9) * t202 + t109;
t108 = qJD(2) * t121;
t200 = qJD(2) * t153;
t187 = t148 * t200;
t133 = qJD(1) * t187;
t134 = qJD(2) * t186;
t161 = -qJD(4) * t137 + t134;
t67 = pkin(4) * t108 + pkin(9) * t161 + t133;
t181 = -t151 * t67 - t154 * t38 - t197 * t61 + t198 * t53;
t26 = -t151 * t53 + t154 * t61;
t176 = -t110 * t26 - t181;
t27 = t151 * t61 + t154 * t53;
t196 = t154 * qJD(4);
t99 = t151 * t202 - t196;
t20 = -qJ(6) * t99 + t27;
t238 = t110 * t20;
t101 = qJD(4) * t151 + t154 * t202;
t170 = qJD(5) * t196 - t154 * t161 - t198 * t202;
t8 = -qJD(5) * t27 - t151 * t38 + t154 * t67;
t157 = -qJ(6) * t170 + t8;
t255 = pkin(5) * t108;
t4 = -qJD(6) * t101 + t157 + t255;
t269 = t4 + t238;
t159 = t126 * t210;
t95 = -t129 * t152 + t130 * t256;
t242 = -qJD(1) * t159 + qJD(3) * t126 + qJD(4) * t95;
t268 = t110 * t27 + t8;
t267 = -t151 * t243 + t154 * t270;
t88 = -pkin(4) * t165 - pkin(9) * t126 + t140;
t266 = t151 * t270 + t154 * t243 + t88 * t197;
t179 = t110 * t151;
t264 = t101 * t179;
t263 = t126 * t124;
t173 = (-t128 * t147 + t136) * t147 - t104 * t149;
t261 = t173 * t155;
t199 = qJD(5) * t101;
t69 = -t151 * t161 + t199;
t259 = t101 ^ 2;
t258 = t202 ^ 2;
t257 = t99 * pkin(5);
t211 = t148 * t153;
t114 = -t147 * t211 + t149 * t150;
t115 = t147 * t150 + t149 * t211;
t166 = t114 * t256 - t115 * t152;
t39 = t58 * qJD(4) + t263;
t254 = t39 * t166;
t253 = t39 * t260;
t251 = -qJ(6) - pkin(9);
t172 = qJ(6) * t120 - qJD(6) * t126;
t90 = t154 * t95;
t250 = pkin(5) * t121 + t172 * t154 + (-t90 + (qJ(6) * t126 - t88) * t151) * qJD(5) + t267;
t185 = t126 * t197;
t249 = -qJ(6) * t185 + (-qJD(5) * t95 + t172) * t151 + t266;
t19 = -qJ(6) * t101 + t26;
t15 = pkin(5) * t110 + t19;
t248 = t15 - t19;
t247 = -t198 * t95 + t266;
t50 = t151 * t88 + t90;
t246 = -qJD(5) * t50 + t267;
t215 = t120 * t151;
t164 = t185 - t215;
t245 = pkin(5) * t164 + t242;
t86 = pkin(4) * t202 + pkin(9) * t116;
t37 = t151 * t86 + t154 * t265;
t244 = -t151 * t69 - t197 * t99;
t240 = qJD(2) * pkin(2);
t239 = t101 * t99;
t235 = t110 * t99;
t234 = t116 * t99;
t233 = t202 * t99;
t18 = t69 * pkin(5) + t39;
t232 = t151 * t18;
t231 = t151 * t39;
t230 = t154 * t18;
t229 = t154 * t39;
t228 = t170 * t151;
t227 = t69 * t154;
t182 = qJD(5) * t251;
t218 = t116 * t151;
t226 = -qJ(6) * t218 + t154 * qJD(6) + t151 * t182 - t37;
t217 = t116 * t154;
t36 = -t151 * t265 + t154 * t86;
t225 = -pkin(5) * t202 - qJ(6) * t217 - t151 * qJD(6) + t154 * t182 - t36;
t224 = t101 * t110;
t223 = t101 * t202;
t222 = t101 * t151;
t221 = t108 * t165;
t220 = t108 * t151;
t219 = t110 * t202;
t216 = t202 * t116;
t214 = t120 * t154;
t213 = t126 * t151;
t212 = t126 * t154;
t156 = qJD(2) ^ 2;
t209 = t148 * t156;
t106 = t154 * t108;
t206 = t147 ^ 2 + t149 ^ 2;
t193 = t153 * t209;
t192 = t155 * t209;
t190 = t148 ^ 2 * t203;
t184 = qJD(6) + t257;
t49 = -t151 * t95 + t154 * t88;
t180 = t206 * t124;
t178 = t110 * t154;
t169 = qJ(6) * t69 + t181;
t5 = -qJD(6) * t99 - t169;
t177 = -t110 * t15 + t5;
t174 = t151 * t27 + t154 * t26;
t171 = t106 + (-t198 - t218) * t110;
t77 = t114 * t152 + t115 * t256;
t64 = -t151 * t77 - t154 * t210;
t167 = t151 * t210 - t154 * t77;
t163 = -t126 * t198 - t214;
t52 = -qJD(4) * pkin(4) - t265;
t162 = -pkin(9) * t108 + t110 * t52;
t142 = -pkin(5) * t154 - pkin(4);
t132 = t251 * t154;
t131 = t251 * t151;
t127 = t175 - t240;
t113 = t116 ^ 2;
t98 = t99 ^ 2;
t73 = pkin(5) * t213 - t260;
t56 = t110 * t121 - t221;
t55 = qJD(2) * t159 + qJD(4) * t77;
t54 = qJD(2) * t158 + qJD(4) * t166;
t47 = -t98 + t259;
t45 = -pkin(5) * t218 + t58;
t44 = -qJ(6) * t213 + t50;
t43 = t224 - t69;
t42 = t170 + t235;
t41 = t184 + t52;
t40 = -pkin(5) * t165 - qJ(6) * t212 + t49;
t34 = -t110 ^ 2 * t154 - t220 - t223;
t33 = t110 * t178 + t220 - t223;
t32 = t171 + t233;
t31 = t171 - t233;
t30 = t179 * t99 - t227;
t29 = t101 * t178 + t228;
t25 = qJD(5) * t167 - t151 * t54 + t154 * t187;
t24 = qJD(5) * t64 + t151 * t187 + t154 * t54;
t22 = -t126 * t244 - t215 * t99;
t21 = t101 * t163 + t170 * t212;
t14 = -t108 * t213 - t110 * t164 - t121 * t99 + t165 * t69;
t13 = t101 * t121 + t106 * t126 + t110 * t163 - t165 * t170;
t10 = (t170 - t234) * t154 - t264 + t244;
t9 = (-t170 - t234) * t154 + t264 + t244;
t6 = (t154 * t99 + t222) * t120 + (-t228 - t227 + (-t101 * t154 + t151 * t99) * qJD(5)) * t126;
t3 = t108 * t64 + t110 * t25 - t166 * t69 + t55 * t99;
t2 = t101 * t55 + t108 * t167 - t110 * t24 - t166 * t170;
t1 = -t101 * t25 + t167 * t69 - t170 * t64 - t24 * t99;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, -t192, 0, 0, 0, 0, 0, 0, 0, 0, -t149 * t193, t147 * t193, t206 * t192 (-t114 * t147 + t115 * t149) * t124 + (-t153 * t190 + (t127 * t153 - t261) * t148) * qJD(2), 0, 0, 0, 0, 0, 0, -qJD(4) * t55 + (-t108 * t155 + t116 * t200) * t148, -t54 * qJD(4) + (t155 * t161 + t200 * t202) * t148, -t108 * t77 - t116 * t54 + t161 * t166 + t202 * t55, t38 * t77 - t254 + t54 * t58 - t55 * t265 + (t109 * t148 - t190) * t200, 0, 0, 0, 0, 0, 0, t3, t2, t1, t167 * t181 + t24 * t27 + t25 * t26 + t52 * t55 + t64 * t8 - t254, 0, 0, 0, 0, 0, 0, t3, t2, t1, t15 * t25 - t166 * t18 - t167 * t5 + t20 * t24 + t4 * t64 + t41 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t175 * t206 + t180, -t173 * qJD(3) + qJ(3) * t180 + (t261 + (-t127 - t240) * t153) * t205, -t120 * t202 - t126 * t161, -t108 * t126 + t116 * t120 - t121 * t202 - t161 * t165, -t120 * qJD(4), t116 * t121 - t221, -t121 * qJD(4), 0, t108 * t140 + t109 * t121 - t242 * qJD(4) + (-qJD(2) * t165 - t116) * t189, -t109 * t120 - t140 * t134 + (t137 * t140 - t243) * qJD(4), -t95 * t108 - t116 * t243 + t120 * t265 - t58 * t121 + t39 * t126 + t161 * t260 + t165 * t38 + t202 * t242, t38 * t95 - t253 + t243 * t58 - t242 * t265 + (-t109 + t201) * t189, t21, t6, t13, t22, t14, t56, -t52 * t215 + t108 * t49 + t121 * t26 - t165 * t8 - t69 * t260 + t242 * t99 + (t197 * t52 + t231) * t126 + t246 * t110, -t52 * t214 - t108 * t50 - t121 * t27 - t165 * t181 - t170 * t260 + (-t198 * t52 + t229) * t126 - t247 * t110 + t242 * t101, -t49 * t170 - t50 * t69 - t247 * t99 + t174 * t120 - t246 * t101 + (t151 * t181 - t154 * t8 + (t151 * t26 - t154 * t27) * qJD(5)) * t126, -t181 * t50 + t242 * t52 + t246 * t26 + t247 * t27 + t49 * t8 - t253, t21, t6, t13, t22, t14, t56, -t41 * t215 + t108 * t40 + t121 * t15 - t165 * t4 + t69 * t73 + t245 * t99 + (t197 * t41 + t232) * t126 + t250 * t110, -t41 * t214 - t108 * t44 - t121 * t20 + t165 * t5 + t170 * t73 + (-t198 * t41 + t230) * t126 - t249 * t110 + t245 * t101, -t40 * t170 - t44 * t69 - t249 * t99 + (t15 * t154 + t151 * t20) * t120 - t250 * t101 + (-t151 * t5 - t154 * t4 + (t15 * t151 - t154 * t20) * qJD(5)) * t126, t15 * t250 + t18 * t73 + t20 * t249 + t245 * t41 + t4 * t40 + t44 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206 * t156, qJD(2) * t173 + t133, 0, 0, 0, 0, 0, 0, 0.2e1 * t202 * qJD(4), -t134 + (t137 - t116) * qJD(4), -t113 - t258, t116 * t58 + t202 * t265 + t133, 0, 0, 0, 0, 0, 0, t31, t34, t9, t151 * t176 + t154 * t268 - t202 * t52, 0, 0, 0, 0, 0, 0, t31, t34, t9, t151 * t177 + t154 * t269 - t202 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, -t113 + t258, -t134 + (t137 + t116) * qJD(4), -t216, 0, 0, -t109 * t202 - t263, t109 * t116 - t262, 0, 0, t29, t10, t33, t30, t32, -t219, -pkin(4) * t69 - t202 * t26 - t229 - t58 * t99 + (-pkin(9) * t197 - t36) * t110 + t162 * t151, -pkin(4) * t170 - t101 * t58 + t202 * t27 + t231 + (pkin(9) * t198 + t37) * t110 + t162 * t154, t101 * t36 + t37 * t99 + ((-t69 + t199) * pkin(9) + t176) * t154 + ((qJD(5) * t99 + t170) * pkin(9) - t268) * t151, -pkin(4) * t39 - t26 * t36 - t27 * t37 - t52 * t58 + (-qJD(5) * t174 - t151 * t8 - t154 * t181) * pkin(9), t29, t10, t33, t30, t32, -t219, t108 * t131 - t202 * t15 + t142 * t69 - t230 - t45 * t99 + t225 * t110 + (t116 * t41 + (t41 + t257) * qJD(5)) * t151, t41 * t217 - t101 * t45 + t108 * t132 + t202 * t20 + t142 * t170 + t232 - t226 * t110 + (pkin(5) * t222 + t154 * t41) * qJD(5), -t101 * t225 - t131 * t170 + t132 * t69 - t151 * t269 + t154 * t177 - t226 * t99, t131 * t4 - t132 * t5 + t142 * t18 + (pkin(5) * t198 - t45) * t41 + t226 * t20 + t225 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, t47, t42, -t239, t43, t108, -t101 * t52 + t268, t52 * t99 - t176, 0, 0, t239, t47, t42, -t239, t43, t108, 0.2e1 * t255 + t238 + (-t184 - t41) * t101 + t157, -pkin(5) * t259 + t110 * t19 + (qJD(6) + t41) * t99 + t169, -pkin(5) * t170 - t248 * t99, t248 * t20 + (-t101 * t41 + t4) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69 + t224, t170 - t235, -t98 - t259, t15 * t101 + t20 * t99 + t18;];
tauc_reg  = t7;
