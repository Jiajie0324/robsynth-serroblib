% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP3_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:07:45
% EndTime: 2019-03-08 20:07:52
% DurationCPUTime: 2.52s
% Computational Cost: add. (2512->224), mult. (6414->396), div. (0->0), fcn. (6524->10), ass. (0->135)
t166 = cos(qJ(4));
t82 = sin(pkin(11));
t84 = cos(pkin(11));
t87 = sin(qJ(4));
t63 = t166 * t82 + t84 * t87;
t180 = -0.4e1 * t63;
t104 = t166 * t84 - t82 * t87;
t73 = -pkin(3) * t84 - pkin(2);
t102 = -pkin(4) * t104 - pkin(9) * t63 + t73;
t151 = pkin(8) + qJ(3);
t175 = t151 * t166;
t177 = t87 * qJD(3) + qJD(4) * t175;
t176 = t87 * t151;
t178 = -qJD(3) * t166 + qJD(4) * t176;
t93 = -t177 * t82 - t178 * t84;
t179 = -qJD(5) * t102 - t93;
t86 = sin(qJ(5));
t80 = t86 ^ 2;
t89 = cos(qJ(5));
t81 = t89 ^ 2;
t148 = t80 - t81;
t83 = sin(pkin(6));
t88 = sin(qJ(2));
t158 = t83 * t88;
t85 = cos(pkin(6));
t106 = t158 * t82 - t84 * t85;
t57 = t158 * t84 + t82 * t85;
t34 = t106 * t166 + t87 * t57;
t94 = t34 * qJD(4);
t174 = t106 * t82 + t57 * t84;
t90 = cos(qJ(2));
t157 = t83 * t90;
t35 = -t106 * t87 + t166 * t57;
t107 = t157 * t89 + t35 * t86;
t145 = qJD(2) * t88;
t70 = t83 * t145;
t101 = t83 * t104;
t144 = qJD(2) * t90;
t92 = t101 * t144 - t94;
t11 = qJD(5) * t107 - t70 * t86 - t89 * t92;
t139 = t86 * t157;
t76 = qJD(5) * t89;
t12 = qJD(5) * t139 - t35 * t76 + t70 * t89 - t86 * t92;
t30 = t35 * t89 - t139;
t173 = qJD(5) * (-t107 * t86 - t30 * t89) + t11 * t86 - t12 * t89;
t58 = t104 * qJD(4);
t59 = t63 * qJD(4);
t122 = pkin(4) * t59 - pkin(9) * t58;
t50 = t175 * t84 - t176 * t82;
t10 = t122 * t89 + t179 * t86 - t50 * t76;
t22 = t102 * t89 - t50 * t86;
t23 = t102 * t86 + t89 * t50;
t136 = -t86 * t122 + t179 * t89;
t142 = qJD(5) * t86;
t9 = t142 * t50 + t136;
t172 = -t10 * t89 + t9 * t86 + (t22 * t86 - t23 * t89) * qJD(5);
t147 = t89 * qJ(6);
t15 = -pkin(5) * t104 - t147 * t63 + t22;
t161 = t63 * t86;
t18 = -qJ(6) * t161 + t23;
t168 = t59 * pkin(5);
t143 = qJD(5) * t63;
t130 = qJ(6) * t143;
t140 = t89 * qJD(6);
t91 = t130 * t86 - t140 * t63 - t147 * t58 + t10;
t7 = t91 + t168;
t8 = t89 * t130 + (qJ(6) * t58 + qJD(5) * t50 + qJD(6) * t63) * t86 + t136;
t171 = -t7 * t89 + t8 * t86 + (t15 * t86 - t18 * t89) * qJD(5);
t170 = 0.2e1 * t59;
t169 = 0.2e1 * qJD(5);
t167 = t89 * pkin(5);
t133 = t83 * t144;
t24 = qJD(4) * t35 + t133 * t63;
t165 = t34 * t24;
t32 = t177 * t84 - t178 * t82;
t49 = t175 * t82 + t176 * t84;
t164 = t49 * t32;
t162 = t63 * t58;
t160 = t63 * t89;
t159 = t83 ^ 2 * t88;
t156 = t86 * t58;
t155 = t86 * t59;
t153 = t89 * t58;
t152 = t89 * t59;
t150 = -qJ(6) - pkin(9);
t149 = t82 ^ 2 + t84 ^ 2;
t146 = qJD(2) * t83;
t48 = t104 * t170;
t138 = t86 * t153;
t137 = -0.2e1 * t142;
t135 = pkin(5) * t142;
t134 = t34 * t142;
t132 = t86 * t76;
t74 = -pkin(4) - t167;
t129 = -t74 + t167;
t126 = t149 * t90;
t60 = t63 ^ 2;
t124 = t60 * t132;
t123 = 0.2e1 * t149 * qJD(3);
t121 = -pkin(4) * t58 - pkin(9) * t59;
t120 = pkin(4) * t63 - pkin(9) * t104;
t116 = pkin(5) * t80 + t74 * t89;
t112 = t22 * t89 + t23 * t86;
t110 = t24 * t49 + t34 * t32;
t109 = -t107 * t89 + t30 * t86;
t46 = t63 * t76 + t156;
t105 = t142 * t63 - t153;
t44 = -t104 * t76 + t155;
t95 = -qJD(5) * t112 - t10 * t86 - t9 * t89;
t6 = -qJD(5) * t109 - t11 * t89 - t12 * t86;
t69 = -0.2e1 * t132;
t68 = 0.2e1 * t132;
t67 = t150 * t89;
t66 = t150 * t86;
t64 = -0.2e1 * t148 * qJD(5);
t56 = -t86 * qJD(6) + t150 * t76;
t55 = -t142 * t150 - t140;
t42 = t104 * t142 + t152;
t37 = (t80 + t81) * t58;
t33 = pkin(5) * t161 + t49;
t28 = 0.2e1 * t162 * t81 - 0.2e1 * t124;
t27 = 0.2e1 * t162 * t80 + 0.2e1 * t124;
t26 = t143 * t148 - t138;
t25 = t132 * t180 - t148 * t58;
t20 = t148 * t169 * t60 + t138 * t180;
t19 = pkin(5) * t46 + t32;
t17 = 0.2e1 * t104 * t46 - 0.2e1 * t155 * t63;
t16 = 0.2e1 * t104 * t105 + 0.2e1 * t152 * t63;
t14 = -t24 * t89 + t134;
t13 = t24 * t86 + t34 * t76;
t4 = -t104 * t12 - t107 * t59 + t161 * t24 + t34 * t46;
t3 = -t104 * t11 - t105 * t34 + t160 * t24 - t30 * t59;
t2 = -0.2e1 * t107 * t12 - 0.2e1 * t11 * t30 + 0.2e1 * t165;
t1 = -t109 * t58 + t173 * t63;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (t174 * t83 - t159) * t144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t165 - 0.2e1 * t35 * t94 + 0.2e1 * (t101 * t35 - t159) * t144, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t133, 0, 0, 0, 0, 0, 0, 0, 0, -t84 * t70, t82 * t70, t126 * t146, t174 * qJD(3) + (-pkin(2) * t88 + qJ(3) * t126) * t146, 0, 0, 0, 0, 0, 0 (-t104 * t145 - t59 * t90) * t83 (t145 * t63 - t58 * t90) * t83, t104 * t92 + t24 * t63 + t34 * t58 - t35 * t59, t35 * t93 + t50 * t92 + t70 * t73 + t110, 0, 0, 0, 0, 0, 0, t4, t3, t1, -t10 * t107 - t11 * t23 + t12 * t22 - t30 * t9 + t110, 0, 0, 0, 0, 0, 0, t4, t3, t1, -t107 * t7 - t11 * t18 + t12 * t15 + t19 * t34 + t24 * t33 - t30 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, qJ(3) * t123, 0.2e1 * t162, 0.2e1 * t104 * t58 - 0.2e1 * t59 * t63, 0, -t48, 0, 0, t73 * t170, 0.2e1 * t73 * t58, 0.2e1 * t104 * t93 + 0.2e1 * t32 * t63 + 0.2e1 * t49 * t58 - 0.2e1 * t50 * t59, 0.2e1 * t50 * t93 + 0.2e1 * t164, t28, t20, t16, t27, t17, -t48, -0.2e1 * t10 * t104 + 0.2e1 * t161 * t32 + 0.2e1 * t22 * t59 + 0.2e1 * t46 * t49, -0.2e1 * t104 * t9 - 0.2e1 * t105 * t49 + 0.2e1 * t160 * t32 - 0.2e1 * t23 * t59, -0.2e1 * t112 * t58 + 0.2e1 * t172 * t63, 0.2e1 * t10 * t22 - 0.2e1 * t23 * t9 + 0.2e1 * t164, t28, t20, t16, t27, t17, -t48, -0.2e1 * t104 * t7 + 0.2e1 * t15 * t59 + 0.2e1 * t161 * t19 + 0.2e1 * t33 * t46, -0.2e1 * t104 * t8 - 0.2e1 * t105 * t33 + 0.2e1 * t160 * t19 - 0.2e1 * t18 * t59, -0.2e1 * (t15 * t89 + t18 * t86) * t58 + 0.2e1 * t171 * t63, 0.2e1 * t15 * t7 - 0.2e1 * t18 * t8 + 0.2e1 * t19 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t58, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t44, -t37, -t172, 0, 0, 0, 0, 0, 0, t42, -t44, -t37, -t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, -t104 * t133 + t94, 0, 0, 0, 0, 0, 0, 0, 0, t14, t13, t6, -t24 * pkin(4) + pkin(9) * t6, 0, 0, 0, 0, 0, 0, t14, t13, t6, pkin(5) * t134 - t107 * t56 + t11 * t67 + t12 * t66 + t24 * t74 - t30 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, -t59, 0, -t32, -t93, 0, 0, -t26, t25, t44, t26, t42, 0, -t32 * t89 + t121 * t86 + (-t120 * t89 + t49 * t86) * qJD(5), t32 * t86 + t121 * t89 + (t120 * t86 + t49 * t89) * qJD(5), t95, -t32 * pkin(4) + pkin(9) * t95, -t26, t25, t44, t26, t42, 0, t74 * t156 - t19 * t89 - t56 * t104 + t66 * t59 + (t116 * t63 + t33 * t86) * qJD(5), t74 * t153 + t19 * t86 - t55 * t104 + t67 * t59 + (t129 * t161 + t33 * t89) * qJD(5) (-t56 * t63 - t58 * t66 - t8 + (t63 * t67 - t15) * qJD(5)) * t89 + (t55 * t63 + t58 * t67 - t7 + (t63 * t66 - t18) * qJD(5)) * t86, t135 * t33 + t15 * t56 - t18 * t55 + t19 * t74 + t66 * t7 + t67 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86 * t55 + t89 * t56 + (-t66 * t86 - t67 * t89) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t64, 0, t69, 0, 0, pkin(4) * t137, -0.2e1 * pkin(4) * t76, 0, 0, t68, t64, 0, t69, 0, 0, t129 * t137, t116 * t169, -0.2e1 * t55 * t89 - 0.2e1 * t56 * t86 + 0.2e1 * (-t66 * t89 + t67 * t86) * qJD(5), 0.2e1 * t135 * t74 + 0.2e1 * t55 * t67 + 0.2e1 * t56 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, t11, 0, 0, 0, 0, 0, 0, 0, 0, t12, t11, 0, t12 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, 0, -t46, t59, t10, t9, 0, 0, 0, 0, -t105, 0, -t46, t59, t91 + 0.2e1 * t168, t8, t105 * pkin(5), t7 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t76, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t76, 0, -t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, 0, -t142, 0, -pkin(9) * t76, pkin(9) * t142, 0, 0, 0, 0, t76, 0, -t142, 0, t56, t55, -pkin(5) * t76, t56 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t105, 0, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t76, 0, t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
