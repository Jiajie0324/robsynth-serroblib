% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR3_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR3_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR3_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR3_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR3_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR3_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:04:08
% EndTime: 2019-03-09 22:04:25
% DurationCPUTime: 9.98s
% Computational Cost: add. (19554->706), mult. (45851->835), div. (0->0), fcn. (34269->14), ass. (0->356)
t257 = sin(qJ(2));
t466 = sin(qJ(3));
t381 = t466 * t257;
t350 = qJD(1) * t381;
t260 = cos(qJ(2));
t468 = cos(qJ(3));
t382 = t468 * t260;
t179 = qJD(1) * t382 - t350;
t191 = t257 * t468 + t260 * t466;
t180 = t191 * qJD(1);
t256 = sin(qJ(4));
t467 = cos(qJ(4));
t132 = -t467 * t179 + t180 * t256;
t249 = qJDD(2) + qJDD(3);
t242 = qJDD(4) + t249;
t250 = qJD(2) + qJD(3);
t243 = qJD(4) + t250;
t255 = sin(qJ(6));
t259 = cos(qJ(6));
t396 = qJD(6) * t259;
t397 = qJD(6) * t255;
t495 = t250 * t191;
t276 = t495 * qJD(1);
t312 = t381 - t382;
t270 = -t312 * qJDD(1) - t276;
t370 = qJDD(1) * t468;
t406 = t250 * t350;
t374 = t468 * qJD(3);
t309 = t468 * qJD(2) + t374;
t473 = qJD(1) * t309 + t466 * qJDD(1);
t273 = t257 * t370 + t473 * t260 - t406;
t319 = t256 * t179 + t180 * t467;
t472 = qJD(4) * t319 + t256 * t273 - t467 * t270;
t41 = -t132 * t396 - t259 * t242 + t243 * t397 - t255 * t472;
t117 = -t259 * t132 + t243 * t255;
t476 = qJD(6) + t319;
t494 = t476 * t117;
t500 = t41 - t494;
t492 = t476 * t259;
t376 = qJD(4) * t467;
t400 = qJD(4) * t256;
t67 = -t179 * t376 + t180 * t400 - t256 * t270 - t467 * t273;
t64 = -qJDD(6) + t67;
t310 = t255 * t64 - t476 * t492;
t21 = -t117 * t132 + t310;
t119 = t132 * t255 + t243 * t259;
t493 = t476 * t255;
t60 = t259 * t64;
t323 = -t476 * t493 - t60;
t20 = t119 * t132 + t323;
t435 = qJ(5) * t132;
t98 = pkin(4) * t319 + t435;
t40 = t259 * t41;
t22 = -t119 * t493 - t40;
t399 = qJD(6) * t119;
t42 = t242 * t255 - t259 * t472 + t399;
t447 = t255 * t42;
t23 = t259 * t494 + t447;
t5 = -t259 * t42 - t119 * t492 + (t41 + t494) * t255;
t499 = t132 * pkin(5);
t248 = t260 * pkin(2);
t239 = t248 + pkin(1);
t262 = -pkin(8) - pkin(7);
t211 = t262 * t260;
t197 = qJD(1) * t211;
t181 = t466 * t197;
t210 = t262 * t257;
t196 = qJD(1) * t210;
t451 = qJD(2) * pkin(2);
t187 = t196 + t451;
t141 = t468 * t187 + t181;
t173 = t180 * pkin(9);
t115 = -t173 + t141;
t107 = t250 * pkin(3) + t115;
t185 = t468 * t197;
t142 = t187 * t466 - t185;
t453 = t179 * pkin(9);
t116 = t142 + t453;
t110 = t467 * t116;
t80 = t256 * t107 + t110;
t75 = -t243 * qJ(5) - t80;
t50 = -t75 - t499;
t367 = t476 * t50;
t496 = t132 * t319;
t432 = t476 * t132;
t412 = t256 * t116;
t79 = -t467 * t107 + t412;
t408 = qJD(5) + t79;
t46 = -t243 * t319 + t472;
t471 = t319 ^ 2;
t491 = -t132 ^ 2 + t471;
t455 = t319 * pkin(5);
t409 = t455 + t408;
t470 = pkin(4) + pkin(10);
t48 = -t243 * t470 + t409;
t209 = t239 * qJD(1);
t155 = -pkin(3) * t179 - t209;
t291 = -qJ(5) * t319 + t155;
t68 = t132 * t470 + t291;
t27 = t255 * t48 + t259 * t68;
t393 = qJD(1) * qJD(2);
t371 = t260 * t393;
t392 = t257 * qJDD(1);
t153 = qJDD(2) * pkin(2) - t262 * (-t371 - t392);
t372 = t257 * t393;
t391 = t260 * qJDD(1);
t154 = t262 * (-t372 + t391);
t341 = t468 * t153 + t154 * t466;
t373 = t466 * qJD(3);
t53 = t249 * pkin(3) - pkin(9) * t273 - t187 * t373 + t197 * t374 + t341;
t89 = t466 * t153 - t468 * t154 + t187 * t374 + t197 * t373;
t63 = pkin(9) * t270 + t89;
t359 = -t107 * t376 + t116 * t400 - t256 * t53 - t467 * t63;
t225 = t242 * qJ(5);
t477 = -t243 * qJD(5) - t225;
t12 = t359 + t477;
t10 = -pkin(5) * t472 - t12;
t8 = t10 * t259;
t377 = -t132 * t27 + t8;
t228 = pkin(2) * t372;
t434 = qJDD(1) * pkin(1);
t16 = -pkin(2) * t391 - pkin(3) * t270 + pkin(4) * t472 + t67 * qJ(5) - qJD(5) * t319 + t228 - t434;
t11 = pkin(10) * t472 + t16;
t15 = -t107 * t400 - t116 * t376 - t256 * t63 + t467 * t53;
t332 = qJDD(5) - t15;
t9 = -pkin(5) * t67 - t242 * t470 + t332;
t2 = -qJD(6) * t27 - t11 * t255 + t259 * t9;
t490 = t27 * t476 + t2;
t489 = t119 * t476 - t42;
t488 = -t132 * t243 + t67;
t26 = -t255 * t68 + t259 * t48;
t469 = t10 * t255 + t50 * t396;
t487 = t132 * t26 + t469;
t254 = qJ(2) + qJ(3);
t247 = qJ(4) + t254;
t235 = sin(t247);
t226 = g(3) * t235;
t236 = cos(t247);
t261 = cos(qJ(1));
t421 = t236 * t261;
t258 = sin(qJ(1));
t422 = t236 * t258;
t318 = g(1) * t421 + g(2) * t422 + t226 + t359;
t83 = pkin(4) * t132 + t291;
t288 = -t132 * t83 - t318 - t477;
t343 = g(1) * t261 + g(2) * t258;
t156 = t468 * t210 + t211 * t466;
t127 = -t191 * pkin(9) + t156;
t157 = t466 * t210 - t468 * t211;
t128 = -pkin(9) * t312 + t157;
t277 = t250 * t312;
t353 = t262 * t466;
t327 = qJD(2) * t353;
t354 = t262 * t468;
t328 = qJD(2) * t354;
t267 = pkin(9) * t277 - t210 * t373 + t211 * t374 - t257 * t327 + t260 * t328;
t105 = t210 * t374 + t211 * t373 + t257 * t328 + t260 * t327;
t271 = -pkin(9) * t495 + t105;
t35 = -t127 * t376 + t128 * t400 - t256 * t267 - t467 * t271;
t36 = t127 * t400 + t128 * t376 + t256 * t271 - t467 * t267;
t96 = -t467 * t127 + t128 * t256;
t97 = t256 * t127 + t128 * t467;
t486 = t35 * t132 + t319 * t36 - t472 * t97 - t96 * t67 - t343;
t298 = t132 * t155 + t318;
t292 = t467 * t312;
t148 = t191 * t256 + t292;
t305 = t256 * t312;
t88 = -qJD(4) * t305 + t191 * t376 - t256 * t277 + t467 * t495;
t485 = t132 * t88 + t148 * t472;
t149 = t191 * t467 - t305;
t87 = qJD(4) * t292 + t191 * t400 + t256 * t495 + t277 * t467;
t484 = t87 * t132 + t67 * t148 - t149 * t472 - t319 * t88;
t482 = t319 * t50;
t390 = t468 * pkin(2);
t238 = t390 + pkin(3);
t357 = pkin(2) * t374;
t139 = -(qJD(4) * t466 + t373) * pkin(2) * t256 + t238 * t376 + t467 * t357;
t138 = -qJD(5) - t139;
t150 = -t196 * t466 + t185;
t121 = t150 - t453;
t151 = t468 * t196 + t181;
t122 = -t173 + t151;
t85 = t256 * t121 + t122 * t467;
t441 = t138 + t85;
t351 = t467 * t466;
t140 = t238 * t400 + (qJD(4) * t351 + (t256 * t468 + t351) * qJD(3)) * pkin(2);
t84 = -t467 * t121 + t122 * t256;
t439 = t140 - t84;
t356 = pkin(3) * t376;
t220 = t356 + qJD(5);
t82 = t115 * t467 - t412;
t437 = t220 - t82;
t387 = pkin(3) * t400;
t81 = t115 * t256 + t110;
t348 = -t81 + t387;
t480 = t141 * t250;
t478 = t439 * t243;
t405 = t236 * pkin(4) + t235 * qJ(5);
t160 = pkin(3) * t312 - t239;
t378 = -t319 * t27 - t2;
t227 = g(3) * t236;
t423 = t235 * t261;
t424 = t235 * t258;
t384 = -g(1) * t423 - g(2) * t424 + t227;
t317 = t15 - t384;
t475 = t319 * t83 + qJDD(5) - t317;
t299 = -t155 * t319 + t317;
t342 = g(1) * t258 - g(2) * t261;
t474 = -t235 * t342 - t242 * t97 + t243 * t35;
t464 = pkin(3) * t180;
t245 = sin(t254);
t463 = pkin(3) * t245;
t462 = pkin(3) * t256;
t461 = pkin(4) * t242;
t246 = cos(t254);
t457 = g(3) * t246;
t456 = g(3) * t260;
t223 = t236 * pkin(10);
t251 = -pkin(9) + t262;
t452 = pkin(5) - t251;
t449 = t243 * t80;
t448 = t255 * t26;
t445 = t255 * t88;
t444 = t259 * t88;
t443 = t470 * t64;
t442 = t455 - t441;
t440 = t139 - t85;
t438 = t455 + t437;
t436 = pkin(7) * qJDD(1);
t433 = t119 * t117;
t427 = t148 * t255;
t426 = t148 * t259;
t425 = t180 * t179;
t419 = t245 * t258;
t418 = t245 * t261;
t417 = t246 * t258;
t416 = t246 * t261;
t415 = t251 * t261;
t414 = t255 * t258;
t413 = t255 * t261;
t411 = t258 * t259;
t410 = t259 * t261;
t234 = pkin(3) * t246;
t404 = t234 + t248;
t252 = t257 ^ 2;
t253 = t260 ^ 2;
t403 = t252 - t253;
t402 = t252 + t253;
t401 = qJD(1) * t257;
t398 = qJD(6) * t476;
t389 = t467 * pkin(3);
t388 = t466 * pkin(2);
t241 = t257 * t451;
t265 = qJD(1) ^ 2;
t386 = t257 * t265 * t260;
t385 = t234 + t405;
t1 = qJD(6) * t26 + t11 * t259 + t255 * t9;
t379 = -t26 * t319 + t1;
t366 = -t42 + t399;
t358 = -t26 * t397 + t384;
t355 = t248 + t385;
t237 = -t389 - pkin(4);
t195 = pkin(1) + t404;
t186 = t261 * t195;
t352 = g(2) * (pkin(4) * t421 + qJ(5) * t423 + t186);
t349 = t257 * t371;
t200 = qJ(5) * t422;
t347 = -pkin(4) * t424 + t200;
t202 = qJ(5) * t421;
t346 = -pkin(4) * t423 + t202;
t345 = -g(1) * t422 + g(2) * t421;
t344 = -pkin(4) * t235 - t463;
t175 = t238 * t467 - t256 * t388;
t340 = t319 * t448 - t358;
t74 = -pkin(4) * t243 + t408;
t339 = t74 * t132 - t319 * t75;
t338 = t79 * t132 + t319 * t80;
t337 = -t149 * t67 - t319 * t87;
t335 = t255 * t27 + t259 * t26;
t334 = t259 * t27 - t448;
t282 = -t149 * qJ(5) + t160;
t73 = t148 * t470 + t282;
t76 = pkin(5) * t149 + t96;
t38 = t255 * t76 + t259 * t73;
t37 = -t255 * t73 + t259 * t76;
t333 = t259 * t482 + t487;
t331 = t148 * t242 + t243 * t88;
t330 = t149 * t242 - t243 * t87;
t171 = -pkin(4) - t175;
t326 = -t195 - t405;
t324 = t343 * t245;
t322 = -0.2e1 * pkin(1) * t393 - pkin(7) * qJDD(2);
t321 = t148 * t396 + t445;
t320 = t148 * t397 - t444;
t91 = t464 + t98;
t311 = t85 * t132 + t319 * t439;
t176 = pkin(2) * t351 + t256 * t238;
t240 = pkin(2) * t401;
t86 = t240 + t91;
t304 = -t236 * t343 - t226;
t303 = -t96 * t242 - t36 * t243 - t345;
t301 = t82 * t132 + t319 * t348;
t264 = qJD(2) ^ 2;
t297 = -pkin(7) * t264 + t342 + 0.2e1 * t434;
t296 = pkin(1) * t265 + t343 - t436;
t295 = g(1) * t416 + g(2) * t417 + g(3) * t245 + t209 * t179 - t89;
t293 = t343 * t470 * t235;
t287 = qJD(6) * t334 + t1 * t255 + t2 * t259;
t164 = -pkin(10) + t171;
t285 = -t164 * t398 + t304;
t231 = -pkin(10) + t237;
t284 = -t231 * t398 + t304;
t283 = t398 * t470 + t304;
t90 = -qJD(3) * t142 + t341;
t281 = -g(1) * t202 - g(2) * t200 + t293;
t275 = g(1) * t418 + g(2) * t419 + t209 * t180 - t457 + t90;
t137 = pkin(3) * t495 + t241;
t34 = t88 * pkin(4) + t87 * qJ(5) - t149 * qJD(5) + t137;
t232 = qJ(5) + t462;
t198 = -pkin(2) * t257 - t463;
t189 = t261 * t198;
t188 = t258 * t198;
t174 = -qJDD(1) * t239 + t228;
t170 = qJ(5) + t176;
t168 = -t235 * t414 + t410;
t167 = t235 * t411 + t413;
t166 = t235 * t413 + t411;
t165 = t235 * t410 - t414;
t158 = t240 + t464;
t129 = t319 * pkin(10);
t120 = -t179 ^ 2 + t180 ^ 2;
t106 = -t157 * qJD(3) + (-t257 * t353 + t260 * t354) * qJD(2);
t101 = pkin(3) * t276 + qJDD(1) * t160 + t228;
t100 = t180 * t250 + t270;
t99 = -t179 * t250 + t273;
t95 = t148 * pkin(4) + t282;
t78 = t319 * t470 + t435;
t77 = -t148 * pkin(5) + t97;
t72 = t129 + t91;
t71 = t129 + t86;
t69 = t84 - t499;
t65 = t81 - t499;
t59 = t80 - t499;
t33 = t255 * t59 + t259 * t78;
t32 = -t255 * t78 + t259 * t59;
t31 = t255 * t69 + t259 * t71;
t30 = -t255 * t71 + t259 * t69;
t29 = t255 * t65 + t259 * t72;
t28 = -t255 * t72 + t259 * t65;
t19 = -t87 * pkin(5) + t36;
t18 = -pkin(5) * t88 - t35;
t17 = t88 * pkin(10) + t34;
t13 = t332 - t461;
t4 = -qJD(6) * t38 - t17 * t255 + t19 * t259;
t3 = qJD(6) * t37 + t17 * t259 + t19 * t255;
t6 = [0, 0, 0, 0, 0, qJDD(1), t342, t343, 0, 0, qJDD(1) * t252 + 0.2e1 * t349, 0.2e1 * t257 * t391 - 0.2e1 * t393 * t403, qJDD(2) * t257 + t260 * t264, qJDD(1) * t253 - 0.2e1 * t349, qJDD(2) * t260 - t257 * t264, 0, t257 * t322 + t260 * t297, -t257 * t297 + t260 * t322, 0.2e1 * t402 * t436 - t343, -g(1) * (-pkin(1) * t258 + pkin(7) * t261) - g(2) * (pkin(1) * t261 + pkin(7) * t258) + (pkin(7) ^ 2 * t402 + pkin(1) ^ 2) * qJDD(1), -t406 * t191 + (t191 * t370 + t180 * (-qJD(2) * t466 - t373)) * t257 + (t180 * t309 + t191 * t473) * t260, -t179 * t277 - t180 * t495 + t191 * t270 - t273 * t312, t191 * t249 - t250 * t277, -t179 * t495 - t270 * t312, -t249 * t312 - t250 * t495, 0, g(1) * t417 - g(2) * t416 + t106 * t250 + t156 * t249 + t174 * t312 - t179 * t241 - t209 * t495 + t239 * t270, -g(1) * t419 + g(2) * t418 - t105 * t250 - t157 * t249 + t174 * t191 + t180 * t241 + t209 * t277 - t239 * t273, t105 * t179 - t106 * t180 - t142 * t495 - t156 * t273 + t157 * t270 - t90 * t191 - t343 + (-t89 + t480) * t312, t89 * t157 + t142 * t105 + t90 * t156 + t141 * t106 - t174 * t239 - t209 * t241 - g(1) * (-t239 * t258 - t261 * t262) - g(2) * (t239 * t261 - t258 * t262) t337, t484, t330, t485, -t331, 0, t101 * t148 + t137 * t132 + t155 * t88 + t160 * t472 + t303, t101 * t149 + t137 * t319 - t155 * t87 - t160 * t67 + t474, t148 * t359 - t15 * t149 - t79 * t87 - t80 * t88 + t486, -t359 * t97 - t80 * t35 - t15 * t96 + t79 * t36 + t101 * t160 + t155 * t137 - g(1) * (-t195 * t258 - t415) - g(2) * (-t251 * t258 + t186) 0, -t330, t331, t337, t484, t485, t12 * t148 + t13 * t149 - t74 * t87 + t75 * t88 + t486, -t34 * t132 - t16 * t148 - t472 * t95 - t83 * t88 - t303, -t149 * t16 - t319 * t34 + t67 * t95 + t83 * t87 - t474, t16 * t95 + t83 * t34 - t12 * t97 + t75 * t35 + t13 * t96 + t74 * t36 + g(1) * t415 - t352 + (-g(1) * t326 + g(2) * t251) * t258, t119 * t321 - t41 * t427 (-t117 * t255 + t119 * t259) * t88 + (-t447 - t40 + (-t117 * t259 - t119 * t255) * qJD(6)) * t148, -t119 * t87 - t149 * t41 + t321 * t476 - t427 * t64, t117 * t320 - t42 * t426, t117 * t87 - t149 * t42 - t320 * t476 - t426 * t64, -t149 * t64 - t476 * t87, -t50 * t444 - g(1) * t168 - g(2) * t166 + t117 * t18 + t476 * t4 + t149 * t2 - t26 * t87 - t37 * t64 + t42 * t77 + (t397 * t50 - t8) * t148, g(1) * t167 - g(2) * t165 - t1 * t149 + t119 * t18 + t148 * t469 + t27 * t87 - t3 * t476 + t38 * t64 - t41 * t77 + t445 * t50, -t117 * t3 - t119 * t4 + t37 * t41 - t38 * t42 + t334 * t88 + (-qJD(6) * t335 + t1 * t259 - t2 * t255) * t148 - t345, t1 * t38 + t27 * t3 + t2 * t37 + t26 * t4 + t10 * t77 + t50 * t18 - t352 + (-g(1) * t452 - g(2) * t223) * t261 + (-g(1) * (t326 - t223) - g(2) * t452) * t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t403 * t265, t392, t386, t391, qJDD(2), t257 * t296 - t456, g(3) * t257 + t260 * t296, 0, 0, -t425, t120, t99, t425, t100, t249, -t150 * t250 + (t179 * t401 + t249 * t468 - t250 * t373) * pkin(2) + t275, t151 * t250 + (-t180 * t401 - t249 * t466 - t250 * t374) * pkin(2) + t295, t270 * t388 - t273 * t390 + (pkin(2) * t373 + t142 + t150) * t180 + (t141 - t151 + t357) * t179, -t141 * t150 - t142 * t151 + (t468 * t90 + t89 * t466 - t456 + (-t141 * t466 + t142 * t468) * qJD(3) + (qJD(1) * t209 + t343) * t257) * pkin(2), t496, t491, -t488, -t496, -t46, t242, -t132 * t158 + t175 * t242 + t299 - t478, -t158 * t319 - t176 * t242 - t243 * t440 + t298, -t139 * t132 + t175 * t67 - t176 * t472 + t311 + t338, -g(3) * t404 + t15 * t175 - t155 * t158 - t176 * t359 - t198 * t343 + t439 * t79 + t440 * t80, t242, t488, t46, t496, t491, -t496, t138 * t132 - t170 * t472 - t171 * t67 + t311 + t339, t132 * t86 + t478 + (-pkin(4) + t171) * t242 + t475, t170 * t242 - t243 * t441 + t319 * t86 + t288, -t12 * t170 + t13 * t171 - t83 * t86 - g(1) * (t189 + t346) - g(2) * (t188 + t347) - g(3) * t355 + t441 * t75 + t439 * t74, t22, t5, t20, t23, t21, t432, -t164 * t60 + t170 * t42 + (t140 * t259 - t30) * t476 + t442 * t117 + t285 * t255 + t333, t476 * t31 - t170 * t41 + t442 * t119 + t285 * t259 + (-t140 * t476 + t164 * t64 - t367) * t255 + t377, t117 * t31 + t119 * t30 + (-t117 * t140 + t164 * t366 - t1) * t255 + (-t119 * t140 + t164 * t41 + (-t117 * t164 - t27) * qJD(6) + t378) * t259 + t340, t10 * t170 - t27 * t31 - t26 * t30 - g(1) * (t189 + t202) - g(2) * (t188 + t200) - g(3) * (t223 + t355) + t442 * t50 + t293 + t335 * t140 + t287 * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t425, t120, t99, t425, t100, t249, t142 * t250 + t275, t295 + t480, 0, 0, t496, t491, -t488, -t496, -t46, t242, t81 * t243 + (-t132 * t180 + t242 * t467 - t243 * t400) * pkin(3) + t299, t82 * t243 + (-t180 * t319 - t242 * t256 - t243 * t376) * pkin(3) + t298, -t132 * t356 + t389 * t67 - t462 * t472 + t301 + t338, -t79 * t81 - t80 * t82 + (t467 * t15 - t457 - t359 * t256 - t155 * t180 + t324 + (t256 * t79 + t467 * t80) * qJD(4)) * pkin(3), t242, t488, t46, t496, t491, -t496, -t220 * t132 - t232 * t472 - t237 * t67 + t301 + t339, t132 * t91 + t348 * t243 + (-pkin(4) + t237) * t242 + t475, t232 * t242 + t243 * t437 + t319 * t91 + t288, -t12 * t232 + t13 * t237 - t83 * t91 - g(1) * (t261 * t344 + t202) - g(2) * (t258 * t344 + t200) - g(3) * t385 - t437 * t75 + t348 * t74, t22, t5, t20, t23, t21, t432, -t231 * t60 + t232 * t42 + (t259 * t387 - t28) * t476 + t438 * t117 + t284 * t255 + t333, t476 * t29 - t232 * t41 + t438 * t119 + t284 * t259 + (t231 * t64 - t387 * t476 - t367) * t255 + t377, t117 * t29 + t119 * t28 + (-t117 * t387 + t231 * t366 - t1) * t255 + (-t119 * t387 + t231 * t41 + (-t117 * t231 - t27) * qJD(6) + t378) * t259 + t340, t10 * t232 - t27 * t29 - t26 * t28 - g(3) * (t223 + t385) + t438 * t50 + (t335 * t400 + t324) * pkin(3) + t287 * t231 + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, t491, -t488, -t496, -t46, t242, t299 + t449, -t243 * t79 + t298, 0, 0, t242, t488, t46, t496, t491, -t496, pkin(4) * t67 - qJ(5) * t472 + (-t75 - t80) * t319 + (t74 - t408) * t132, t132 * t98 - t449 - 0.2e1 * t461 + t475, t243 * t408 + t319 * t98 + t225 + t288, -t13 * pkin(4) - g(1) * t346 - g(2) * t347 - g(3) * t405 - t12 * qJ(5) - t408 * t75 - t74 * t80 - t83 * t98, t22, t5, t20, t23, t21, t432, qJ(5) * t42 - t476 * t32 + (t443 + t482) * t259 + t409 * t117 + t283 * t255 + t487, -qJ(5) * t41 + t476 * t33 + t409 * t119 + (-t443 - t367) * t255 + t283 * t259 + t377, t117 * t33 + t119 * t32 + (-t366 * t470 - t379) * t255 + (-t470 * t41 + (t117 * t470 - t27) * qJD(6) + t378) * t259 - t358, t10 * qJ(5) - t27 * t33 - t26 * t32 - g(3) * (t223 + t405) + t409 * t50 - t287 * t470 + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t488, t242 - t496, -t243 ^ 2 - t471, t243 * t75 - t461 + t475, 0, 0, 0, 0, 0, 0, -t117 * t243 + t323, -t119 * t243 + t310, t489 * t255 + t259 * t500, -t243 * t50 + t379 * t255 + t259 * t490 + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t433, -t117 ^ 2 + t119 ^ 2, -t500, -t433, t489, -t64, -g(1) * t165 - g(2) * t167 - t119 * t50 + t227 * t259 + t490, g(1) * t166 - g(2) * t168 + t117 * t50 + t476 * t26 + (-qJD(6) * t48 - t11) * t259 + (qJD(6) * t68 - t227 - t9) * t255, 0, 0;];
tau_reg  = t6;
