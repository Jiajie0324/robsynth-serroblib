% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRPR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:04:13
% EndTime: 2019-03-09 22:04:42
% DurationCPUTime: 22.28s
% Computational Cost: add. (16038->746), mult. (31075->868), div. (0->0), fcn. (35377->8), ass. (0->560)
t503 = sin(qJ(4));
t507 = cos(qJ(2));
t855 = cos(qJ(3));
t668 = t855 * t507;
t880 = pkin(7) + pkin(8);
t598 = t880 * t668;
t505 = sin(qJ(2));
t504 = sin(qJ(3));
t671 = t504 * t880;
t618 = t505 * t671;
t537 = -t598 + t618;
t455 = -t504 * t505 + t668;
t847 = t455 * pkin(9);
t526 = -t537 + t847;
t898 = t503 * t526;
t854 = cos(qJ(4));
t778 = t504 * t507;
t456 = -t505 * t855 - t778;
t450 = t456 * pkin(9);
t614 = t880 * t855;
t599 = t505 * t614;
t616 = t880 * t778;
t538 = -t599 - t616;
t893 = t450 + t538;
t909 = t854 * t893;
t183 = t909 - t898;
t263 = -t503 * t455 + t854 * t456;
t849 = t263 * pkin(5);
t134 = t183 + t849;
t506 = cos(qJ(6));
t958 = t134 * t506;
t118 = t958 / 0.2e1;
t502 = sin(qJ(6));
t959 = t134 * t502;
t117 = t959 / 0.2e1;
t686 = qJD(3) + qJD(4);
t513 = -t909 / 0.2e1 + t898 / 0.2e1;
t617 = t507 * t671;
t539 = t617 + t599;
t317 = t450 - t539;
t665 = t854 * t317;
t457 = t507 * t614;
t580 = -t457 + t618;
t315 = t580 - t847;
t784 = t503 * t315;
t763 = t784 / 0.2e1 + t665 / 0.2e1;
t88 = t513 + t763;
t961 = qJD(2) * t88;
t89 = t513 - t763;
t960 = qJD(2) * t89;
t957 = t88 * qJD(1);
t687 = qJD(2) + qJD(3);
t938 = qJD(4) + t687;
t445 = t854 * t455;
t780 = t503 * t456;
t624 = t445 + t780;
t848 = t624 * pkin(5);
t894 = t854 * t526;
t913 = t503 * t893;
t921 = t894 + t913;
t939 = t921 + t848;
t954 = t506 * t939;
t878 = t954 / 0.2e1;
t367 = t624 ^ 2;
t883 = t263 ^ 2;
t942 = t883 - t367;
t952 = t942 * t506;
t956 = qJD(1) * t952;
t953 = t942 * t502;
t955 = qJD(1) * t953;
t915 = t502 * t624;
t681 = t855 * pkin(2);
t611 = t681 + pkin(3);
t465 = t854 * t611;
t779 = t503 * t504;
t684 = pkin(2) * t779;
t435 = -t465 + t684;
t428 = -pkin(4) + t435;
t425 = -pkin(10) + t428;
t610 = t854 * t855;
t449 = (t610 - t779) * pkin(2);
t951 = t425 + t449;
t667 = t854 * t315;
t782 = t503 * t317;
t761 = t782 / 0.2e1 - t667 / 0.2e1;
t920 = t913 / 0.2e1 + t894 / 0.2e1;
t940 = t920 + t761;
t950 = qJD(2) * t940;
t941 = t920 - t761;
t949 = qJD(2) * t941;
t912 = t506 * t624;
t937 = t912 / 0.2e1;
t946 = 0.2e1 * t937;
t948 = qJD(4) * t946;
t764 = t941 * qJD(1);
t947 = t942 * qJD(1);
t198 = t946 * qJD(5);
t933 = t506 * t263;
t641 = t933 / 0.2e1;
t577 = t503 * t611;
t664 = t854 * t504;
t436 = pkin(2) * t664 + t577;
t426 = qJ(5) + t436;
t871 = t426 / 0.2e1;
t631 = -t436 / 0.2e1 + t871;
t607 = t631 * t263;
t869 = -t435 / 0.2e1;
t535 = t607 + t624 * (t425 / 0.2e1 + t869);
t881 = pkin(4) + pkin(10);
t856 = t881 / 0.2e1;
t638 = t624 * t856;
t935 = qJ(5) * t263;
t649 = -t935 / 0.2e1;
t568 = t649 + t638;
t944 = t535 + t568;
t622 = t263 * t687;
t943 = qJD(4) * t263 + t622;
t364 = -t780 / 0.2e1 - t445 / 0.2e1;
t741 = qJD(1) * t263;
t911 = t624 * t741;
t623 = qJD(6) * t364 + t911;
t875 = -t263 / 0.2e1;
t936 = -t915 / 0.2e1;
t485 = -pkin(2) * t507 - pkin(1);
t408 = -pkin(3) * t455 + t485;
t543 = t408 + t935;
t916 = pkin(4) * t624;
t178 = t543 - t916;
t934 = t178 * t263;
t844 = pkin(3) * qJD(4);
t490 = t503 * t844;
t669 = t855 * t503;
t397 = -pkin(2) * t669 / 0.2e1 + (pkin(3) + t681 / 0.2e1) * t503;
t846 = t503 * pkin(3);
t673 = t397 * qJD(2) + qJD(3) * t846;
t931 = t490 + t673;
t479 = qJ(5) + t846;
t683 = t854 / 0.2e1;
t859 = t503 / 0.2e1;
t873 = t263 / 0.2e1;
t527 = (-t263 * t859 + t624 * t683) * pkin(3) + t479 * t873;
t680 = t854 * pkin(3);
t484 = -t680 - pkin(4);
t478 = -pkin(10) + t484;
t800 = t624 * t478;
t918 = t800 / 0.2e1;
t518 = t918 + t527;
t930 = t518 + t568;
t615 = t680 / 0.2e1;
t579 = t465 / 0.2e1 + t615;
t600 = pkin(2) * t610;
t398 = -t600 / 0.2e1 + t579;
t694 = t449 * qJD(2);
t830 = t694 - t957;
t929 = -qJD(4) * t398 + t830;
t448 = (t664 + t669) * pkin(2);
t832 = t448 * qJD(2) + t764;
t928 = qJD(4) * t397 - t832;
t380 = -t684 + t600 / 0.2e1 + t579;
t927 = qJD(4) * t380 + t830;
t700 = t435 * qJD(2);
t836 = t700 + t957;
t926 = qJD(3) * t398 - t836;
t834 = t436 * qJD(2) + t764;
t925 = qJD(3) * t397 + t834;
t609 = t669 / 0.2e1;
t467 = pkin(2) * t609;
t379 = t846 + t467 + (t664 + t609) * pkin(2);
t695 = t448 * qJD(3);
t924 = qJD(4) * t379 + t695 + t832;
t697 = t436 * qJD(4);
t923 = qJD(3) * t379 + t697 + t834;
t699 = t435 * qJD(4);
t922 = -qJD(3) * t380 + t699 + t836;
t500 = t502 ^ 2;
t501 = t506 ^ 2;
t628 = t501 / 0.2e1 - t500 / 0.2e1;
t210 = t628 * t624;
t492 = qJD(2) + t686;
t899 = t492 * t506;
t914 = t502 * t899;
t160 = qJD(1) * t210 + t914;
t801 = qJ(5) * t624;
t223 = -pkin(4) * t263 - t801;
t476 = t500 - t501;
t221 = t476 * t367;
t919 = qJD(1) * t221 - 0.2e1 * t624 * t914;
t808 = t178 * t624;
t910 = t624 * t881;
t867 = -t449 / 0.2e1;
t868 = t448 / 0.2e1;
t564 = -t263 * t868 - t624 * t867;
t866 = -t479 / 0.2e1;
t530 = t263 * (t866 + t871) + t564;
t872 = -t425 / 0.2e1;
t908 = t530 - t624 * (t478 / 0.2e1 + t872);
t907 = t938 * t624;
t874 = -t624 / 0.2e1;
t634 = t874 + t624 / 0.2e1;
t608 = t634 * t502;
t886 = qJD(1) * t608;
t167 = t899 + t886;
t905 = t364 * qJD(1);
t904 = t624 * qJD(5);
t900 = t476 * t492;
t896 = t687 * t608;
t895 = t687 * t946;
t890 = t695 + t697;
t677 = -t846 / 0.2e1;
t390 = t467 + t677 - qJ(5) - t577 / 0.2e1;
t887 = qJD(2) * t390;
t92 = 0.2e1 * t920;
t682 = t92 * qJD(3) + qJD(4) * t921 + t950;
t489 = qJD(3) * t680;
t675 = -t398 * qJD(2) - t489;
t736 = qJD(1) * t506;
t658 = t502 * t736;
t885 = -t210 * t492 + t367 * t658;
t493 = t502 * qJD(4);
t562 = 0.2e1 * t936;
t884 = -t493 * t624 + t562 * t687;
t882 = pkin(4) / 0.2e1;
t879 = -qJ(5) / 0.2e1;
t877 = t134 / 0.2e1;
t876 = -t939 / 0.2e1;
t870 = t428 / 0.2e1;
t865 = -t484 / 0.2e1;
t864 = t484 / 0.2e1;
t861 = -t502 / 0.2e1;
t860 = t502 / 0.2e1;
t858 = -t506 / 0.2e1;
t857 = t506 / 0.2e1;
t853 = pkin(2) * t504;
t852 = pkin(3) * t456;
t498 = t505 * pkin(2);
t184 = t665 + t784;
t135 = t184 + t849;
t125 = t543 - t910;
t54 = t125 * t502 + t958;
t625 = -t54 * t624 + t933 * t939;
t181 = -t667 + t782;
t132 = t181 + t848;
t776 = t506 * t132;
t186 = t223 - t852;
t179 = t186 + t498;
t362 = t263 * pkin(10);
t130 = t179 - t362;
t790 = t502 * t130;
t1 = -(t776 - t790) * t263 + t135 * t912 + t625;
t843 = t1 * qJD(1);
t55 = t506 * t125 - t959;
t838 = t55 * t624;
t2 = t130 * t933 - t838 + (-t135 * t624 + (t132 - t939) * t263) * t502;
t842 = t2 * qJD(1);
t137 = t186 - t362;
t789 = t502 * t137;
t3 = -(t954 - t789) * t263 + t134 * t912 + t625;
t841 = t3 * qJD(1);
t4 = -t134 * t915 + t137 * t933 - t838;
t840 = t4 * qJD(1);
t153 = -t263 * t881 - t801;
t788 = t502 * t153;
t5 = t788 * t263 - (t54 - t958) * t624;
t839 = t5 * qJD(1);
t6 = t153 * t933 - (t55 + t959) * t624;
t837 = t6 * qJD(1);
t39 = -t263 * t54 - t912 * t939;
t826 = qJD(1) * t39;
t40 = t263 * t55 - t915 * t939;
t825 = qJD(1) * t40;
t56 = t179 * t624 + t934;
t824 = qJD(1) * t56;
t57 = t179 * t263 - t808;
t823 = qJD(1) * t57;
t58 = t186 * t624 + t934;
t822 = qJD(1) * t58;
t59 = t186 * t263 - t808;
t821 = qJD(1) * t59;
t63 = t223 * t624 + t934;
t820 = qJD(1) * t63;
t64 = t223 * t263 - t808;
t819 = qJD(1) * t64;
t813 = t135 * t502;
t812 = t135 * t506;
t810 = t939 * t502;
t21 = t178 * t179 - t181 * t183 + t184 * t921;
t806 = t21 * qJD(1);
t22 = t178 * t186;
t805 = t22 * qJD(1);
t23 = t178 * t223;
t804 = t23 * qJD(1);
t34 = (-t183 + t184) * t624 + (-t181 + t921) * t263;
t802 = t34 * qJD(1);
t799 = t426 * t263;
t798 = t428 * t624;
t797 = t455 * t456;
t795 = t479 * t263;
t793 = t484 * t624;
t50 = (t870 + t865) * t624 + t530;
t792 = t50 * qJD(1);
t791 = t500 * t624;
t785 = t502 * t263;
t632 = t435 / 0.2e1 - t428 / 0.2e1;
t534 = -t624 * t632 + t607;
t574 = t916 / 0.2e1 + t649;
t51 = t534 + t574;
t771 = t51 * qJD(1);
t514 = -t624 * t865 + t527;
t61 = t514 + t574;
t770 = t61 * qJD(1);
t759 = t935 / 0.2e1 - t916 / 0.2e1;
t491 = qJD(4) * t680;
t496 = qJD(5) * t502;
t758 = t502 * t491 + t496;
t497 = qJD(5) * t506;
t757 = t506 * t491 + t497;
t756 = -t435 * t493 + t496;
t755 = -t506 * t699 + t497;
t754 = qJ(5) * qJD(4);
t245 = t408 * t263;
t410 = t498 - t852;
t145 = -t410 * t624 - t245;
t751 = qJD(1) * t145;
t246 = t408 * t624;
t146 = -t263 * t410 + t246;
t750 = qJD(1) * t146;
t156 = -t624 * t852 + t245;
t747 = qJD(1) * t156;
t157 = -t263 * t852 - t246;
t746 = qJD(1) * t157;
t189 = (t875 + t873) * t506 * t502;
t745 = qJD(1) * t189;
t569 = -t598 / 0.2e1;
t383 = t457 / 0.2e1 + t569;
t740 = qJD(1) * t383;
t739 = qJD(1) * t408;
t738 = qJD(1) * t485;
t737 = qJD(1) * t502;
t735 = qJD(1) * t507;
t733 = qJD(2) * t426;
t728 = qJD(3) * t479;
t727 = qJD(3) * t485;
t720 = qJD(4) * t408;
t719 = qJD(4) * t506;
t718 = qJD(6) * t502;
t717 = qJD(6) * t506;
t716 = qJD(6) * t881;
t635 = 0.2e1 * t875;
t202 = t635 * t502;
t191 = t202 * qJD(1);
t338 = t785 / 0.2e1;
t208 = 0.2e1 * t338;
t712 = t208 * qJD(1);
t211 = t635 * t506;
t197 = t211 * qJD(1);
t217 = t937 - t912 / 0.2e1;
t711 = t217 * qJD(1);
t312 = t455 ^ 2 - t456 ^ 2;
t710 = t312 * qJD(1);
t349 = -t455 * t498 - t456 * t485;
t709 = t349 * qJD(1);
t350 = t455 * t485 - t456 * t498;
t708 = t350 * qJD(1);
t704 = t883 * qJD(1);
t693 = t449 * qJD(3);
t477 = -t505 ^ 2 + t507 ^ 2;
t692 = t477 * qJD(1);
t495 = t502 * qJD(2);
t494 = t502 * qJD(3);
t691 = t505 * qJD(2);
t690 = t507 * qJD(2);
t689 = qJD(5) + t693;
t688 = t491 + qJD(5);
t679 = pkin(1) * t505 * qJD(1);
t678 = pkin(1) * t735;
t676 = t846 / 0.2e1;
t670 = t493 + t494 + t495;
t663 = t178 * t741;
t662 = t624 * t739;
t661 = qJD(1) * t791;
t660 = t263 * t739;
t659 = t883 * t737;
t656 = t263 * t718;
t655 = t263 * t717;
t654 = t455 * t738;
t653 = t456 * t738;
t652 = t505 * t735;
t651 = t502 * t717;
t650 = t263 * t736;
t648 = -t810 / 0.2e1;
t647 = t795 / 0.2e1;
t646 = t263 * t860;
t643 = -t785 / 0.2e1;
t642 = t448 * t861;
t640 = -t933 / 0.2e1;
t639 = t448 * t857;
t637 = t877 - t134 / 0.2e1;
t636 = t877 - t135 / 0.2e1;
t627 = t855 * qJD(2);
t626 = t855 * qJD(3);
t620 = t687 * t506;
t619 = qJD(6) - t741;
t612 = t624 * t658;
t605 = 0.2e1 * t612;
t604 = -0.2e1 * t612;
t603 = t879 - t631;
t602 = t868 + t866 - t426 / 0.2e1;
t597 = t263 * t612;
t596 = -qJ(5) * t646 + t502 * t638 + t118;
t595 = qJ(5) * t641 - t881 * t937 + t117;
t594 = -t935 + t910;
t222 = -t426 * t435 + t428 * t436;
t536 = t183 * t631 - t632 * t921;
t572 = t181 * t882 + t184 * t879;
t9 = t536 + t572;
t593 = t9 * qJD(1) + t222 * qJD(2);
t228 = t426 * t449 + t428 * t448;
t524 = (t870 + t449 / 0.2e1) * t921 + (-t868 + t871) * t183;
t567 = t181 * t865 + t184 * t866;
t8 = t524 + t567;
t592 = t8 * qJD(1) + t228 * qJD(2);
t588 = t686 * t941;
t587 = t686 * t88;
t584 = -t425 * t624 - t799;
t583 = -t795 - t800;
t582 = t619 * t502;
t581 = t619 * t506;
t578 = t615 + t869;
t215 = t634 * t506;
t169 = -qJD(1) * t215 + t670;
t573 = t183 * t879 + t882 * t921;
t571 = pkin(4) * t868 + qJ(5) * t867;
t570 = t676 + t879 + t866;
t566 = t918 + t647;
t565 = -t263 * t872 - t624 * t871;
t563 = t478 * t873 + t479 * t874;
t561 = -t263 * t856 - t801 / 0.2e1;
t120 = t812 / 0.2e1;
t13 = t120 - t958 / 0.2e1 + t908 * t502;
t560 = qJD(1) * t13 - t506 * t694;
t119 = t813 / 0.2e1;
t15 = t119 - t959 / 0.2e1 - t908 * t506;
t559 = qJD(1) * t15 - t449 * t495;
t18 = -t502 * t944 + t636 * t506;
t558 = -qJD(1) * t18 + t506 * t700;
t20 = t636 * t502 + t506 * t944;
t557 = -qJD(1) * t20 + t435 * t495;
t551 = t130 / 0.2e1 + t565;
t28 = t878 - t776 / 0.2e1 + t551 * t502;
t556 = -qJD(1) * t28 - t506 * t733;
t30 = (t876 + t132 / 0.2e1) * t502 + t551 * t506;
t555 = -qJD(1) * t30 + t426 * t495;
t554 = t867 + t578;
t550 = t137 / 0.2e1 + t563;
t549 = t153 / 0.2e1 + t561;
t548 = -qJD(3) * t921 - qJD(4) * t92 - t950;
t547 = -qJD(2) * t181 - t686 * t940;
t87 = 0.2e1 * t513;
t546 = -qJD(3) * t87 + qJD(4) * t183 - t960;
t545 = -qJD(3) * t183 + qJD(4) * t87 + t960;
t544 = -qJD(2) * t184 + t686 * t89;
t515 = (t426 * t683 + t428 * t859) * pkin(3) + t435 * t866 + t436 * t864;
t107 = t515 + t571;
t516 = (-t183 * t859 + t683 * t921) * pkin(3) - t183 * t866 + t921 * t864;
t11 = t516 + t573;
t407 = -t479 * t680 - t484 * t846;
t542 = t11 * qJD(1) + t107 * qJD(2) - t407 * qJD(3);
t258 = t602 * t502;
t37 = (t876 + t939 / 0.2e1) * t502 + t550 * t506;
t541 = -qJD(1) * t37 - qJD(2) * t258 + t479 * t494;
t259 = t602 * t506;
t35 = t878 - t954 / 0.2e1 + t550 * t502;
t540 = -qJD(1) * t35 + qJD(2) * t259 - t506 * t728;
t25 = -t502 * t930 + t637 * t506;
t273 = t554 * t506;
t532 = -t25 * qJD(1) - t273 * qJD(2) - t489 * t506;
t27 = t637 * t502 + t506 * t930;
t271 = t554 * t502;
t531 = -t27 * qJD(1) - t271 * qJD(2) - t489 * t502;
t266 = t603 * t502;
t391 = t570 * t502;
t67 = t549 * t506;
t529 = qJ(5) * t493 - t67 * qJD(1) - t266 * qJD(2) - t391 * qJD(3);
t267 = t603 * t506;
t392 = t570 * t506;
t66 = t549 * t502;
t528 = -qJ(5) * t719 - t66 * qJD(1) + t267 * qJD(2) + t392 * qJD(3);
t499 = qJ(5) * qJD(5);
t481 = qJ(5) * t857;
t480 = qJ(5) * t861;
t475 = t479 * qJD(5);
t464 = t476 * qJD(6);
t460 = t492 * qJ(5);
t459 = t479 * t857;
t458 = t479 * t861;
t416 = t506 * t693;
t415 = t449 * t494;
t409 = t426 * qJD(5);
t400 = t426 * t857;
t399 = t426 * t861;
t394 = t506 * t676 + t459 + t481;
t393 = t502 * t677 + t458 + t480;
t381 = qJD(1) * t797;
t378 = t687 * t456;
t377 = t687 * t455;
t376 = qJ(5) + t379;
t323 = -t457 / 0.2e1 + t569 + t618;
t322 = t617 / 0.2e1 + t616 / 0.2e1 + t599;
t309 = 0.2e1 * t624 * t651;
t272 = t449 * t857 + t506 * t578;
t270 = t449 * t860 + t502 * t578;
t269 = t436 * t857 + t400 + t481;
t268 = t436 * t861 + t399 + t480;
t261 = t459 + t400 + t639;
t260 = t458 + t399 + t642;
t225 = t605 + t900;
t224 = t604 - t900;
t218 = t640 + t641;
t209 = t338 + t643;
t207 = t338 - t646;
t199 = t215 * qJD(5);
t196 = t210 * qJD(6);
t193 = t608 * qJD(5);
t192 = t562 * qJD(5);
t190 = t502 * t640 + t506 * t643;
t188 = -t197 - t717;
t187 = -t191 - t718;
t176 = -t651 - t745;
t175 = -t651 + t745;
t138 = t938 * t364;
t108 = t515 - t571;
t100 = -0.2e1 * t628 * t263;
t65 = t907 * t263;
t62 = t514 + t759;
t60 = -qJD(4) * t189 - t263 * t661 - t196;
t53 = t309 - 0.2e1 * t597;
t52 = t534 + t759;
t49 = t799 / 0.2e1 + t798 / 0.2e1 + t647 + t793 / 0.2e1 + t564;
t48 = qJD(4) * t608 - qJD(6) * t211 - t956;
t47 = qJD(4) * t217 - qJD(6) * t202 - t955;
t46 = qJD(4) * t190 - t196 - (t502 * t620 - t661) * t263;
t45 = t153 * t858 + t506 * t561 - t810;
t44 = t954 - t788 / 0.2e1 + t561 * t502;
t43 = qJD(4) * t562 + qJD(6) * t218 - t687 * t915 + t956;
t42 = qJD(6) * t207 + t620 * t624 + t948 + t955;
t41 = qJD(4) * t100 + t476 * t622 + t309 + 0.2e1 * t597;
t38 = t137 * t858 + t506 * t563 + t861 * t939 + t648;
t36 = 0.2e1 * t878 - t789 / 0.2e1 + t563 * t502;
t31 = t130 * t858 + t132 * t861 + t506 * t565 + t648;
t29 = t878 - t790 / 0.2e1 + t776 / 0.2e1 + t565 * t502;
t26 = t506 * t518 + t117 + t595;
t24 = -t502 * t518 + t118 + t596;
t19 = t506 * t535 + t119 + t595;
t17 = -t502 * t535 + t120 + t596;
t16 = -t263 * t639 + t426 * t641 + t506 * t566 + t937 * t951 + t117 + t119;
t14 = -t263 * t642 - t426 * t646 - t502 * t566 + t936 * t951 + t118 + t120;
t12 = t516 - t573;
t10 = t536 - t572;
t7 = t524 - t567;
t32 = [0, 0, 0, t505 * t690, t477 * qJD(2), 0, 0, 0, -pkin(1) * t691, -pkin(1) * t690, -t687 * t797, t687 * t312, 0, 0, 0, qJD(2) * t349 - t456 * t727, qJD(2) * t350 + t455 * t727, -t65, -t938 * t942, 0, 0, 0, qJD(2) * t145 - qJD(3) * t156 - t263 * t720, qJD(2) * t146 - qJD(3) * t157 + t624 * t720, qJD(2) * t34, qJD(2) * t56 + qJD(3) * t58 + qJD(4) * t63 + t263 * t904, qJD(2) * t57 + qJD(3) * t59 + qJD(4) * t64 + qJD(5) * t883, qJD(2) * t21 + qJD(3) * t22 + qJD(4) * t23 + qJD(5) * t934, t367 * t651 + t791 * t943, 0.2e1 * t502 * t912 * t943 - qJD(6) * t221, t624 * t655 + t938 * t953, -t624 * t656 + t938 * t952, -t65, qJD(2) * t1 + qJD(3) * t3 + qJD(4) * t5 + qJD(6) * t40 + t496 * t883, qJD(2) * t2 + qJD(3) * t4 + qJD(4) * t6 + qJD(6) * t39 + t497 * t883; 0, 0, 0, t652, t692, t690, -t691, 0, -pkin(7) * t690 - t679, pkin(7) * t691 - t678, -t381, t710, t377, t378, 0, qJD(2) * t580 + t323 * qJD(3) + t709, qJD(2) * t539 + t322 * qJD(3) + t708, -t911, -t947, t907, t943, 0, t547 + t751, t544 + t750, t802 + (t798 + t799) * qJD(2) + t49 * qJD(3) + t52 * qJD(4) + t904, -t547 + t824, -t544 + t823, t806 + (t181 * t428 + t184 * t426) * qJD(2) + t7 * qJD(3) + t10 * qJD(4) + t940 * qJD(5), t46, t41, t42, t43, -t623, t843 + (-t506 * t584 + t813) * qJD(2) + t16 * qJD(3) + t19 * qJD(4) + t198 + t29 * qJD(6), t842 + (t502 * t584 + t812) * qJD(2) + t14 * qJD(3) + t17 * qJD(4) + t192 + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t381, t710, t377, t378, 0, t323 * qJD(2) + qJD(3) * t537 - t653, t322 * qJD(2) - qJD(3) * t538 + t654, -t911, -t947, t907, t943, 0, t548 - t747, t545 - t746, t49 * qJD(2) + (t793 + t795) * qJD(3) + t62 * qJD(4) + t904, -t548 + t822, -t545 + t821, t805 + t7 * qJD(2) + (t183 * t479 + t484 * t921) * qJD(3) + t12 * qJD(4) + t92 * qJD(5), t46, t41, t42, t43, -t623, t841 + t16 * qJD(2) + (-t506 * t583 + t959) * qJD(3) + t26 * qJD(4) + t198 + t36 * qJD(6), t840 + t14 * qJD(2) + (t502 * t583 + t958) * qJD(3) + t24 * qJD(4) + t192 + t38 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t911, -t947, t907, t943, 0, -t660 - t682, -t546 + t662, t52 * qJD(2) + t62 * qJD(3) + (t935 - t916) * qJD(4) + t904, t682 + t820, t546 + t819, t804 + t10 * qJD(2) + t12 * qJD(3) + (-pkin(4) * t921 + t183 * qJ(5)) * qJD(4) + t921 * qJD(5), -t196 - (t493 * t506 - t661) * t263 + t687 * t190, t309 + t687 * t100 - (-qJD(4) * t476 + t604) * t263, t624 * t719 + t895 + t955, t956 + t884, -t623, t839 + t19 * qJD(2) + t26 * qJD(3) + (-t506 * t594 + t959) * qJD(4) + t198 + t44 * qJD(6), t134 * t719 + t837 + t17 * qJD(2) + t24 * qJD(3) + t45 * qJD(6) + (qJD(4) * t594 - t904) * t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t907, t911, t704, t663 + t682, 0, 0, 0, 0, 0, qJD(6) * t209 + t659 + t895 + t948, t506 * t704 + t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t885, -t919, t207 * t687 - t619 * t912, t218 * t687 + t582 * t624, -t138, qJD(2) * t29 + qJD(3) * t36 + qJD(4) * t44 + qJD(5) * t209 - qJD(6) * t55 + t825, qJD(2) * t31 + qJD(3) * t38 + qJD(4) * t45 + qJD(6) * t54 + t826; 0, 0, 0, -t652, -t692, 0, 0, 0, t679, t678, t381, -t710, 0, 0, 0, qJD(3) * t383 - t709, -t708, t911, t947, 0, 0, 0, -t588 - t751, t587 - t750, qJD(3) * t50 + qJD(4) * t51 - t802, t588 - t824, -t587 - t823, qJD(3) * t8 + qJD(4) * t9 + qJD(5) * t941 - t806, t60, t53, t47, t48, t623, -qJD(3) * t15 + qJD(4) * t20 + qJD(6) * t28 - t199 - t843, -qJD(3) * t13 + qJD(4) * t18 + qJD(6) * t30 + t193 - t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t853, -pkin(2) * t626, 0, 0, 0, 0, 0, -t890, -t693 + t699, 0, t890, -t699 + t689, qJD(3) * t228 + qJD(4) * t222 + t409, -t651, t464, 0, 0, 0, t426 * t717 + t415 + t756, -t426 * t718 + t416 + t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t687 * t853 + t740 (-t627 - t626) * pkin(2), 0, 0, 0, 0, 0, -t924, -t693 - t927, t792, t924, t689 + t927 (t448 * t484 + t449 * t479) * qJD(3) + t108 * qJD(4) + t376 * qJD(5) + t592, -t651, t464, 0, 0, 0, qJD(4) * t270 + qJD(6) * t261 + t415 + t496 - t559, qJD(4) * t272 + qJD(6) * t260 + t416 + t497 - t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t923, t922, t771, t923, qJD(5) - t922, t108 * qJD(3) + (-pkin(4) * t436 - qJ(5) * t435) * qJD(4) + t409 + t593, t176, t464, t711, t886, 0, qJD(3) * t270 + qJD(6) * t269 - t557 + t756, qJD(3) * t272 + qJD(6) * t268 - t558 + t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, qJD(3) * t376 + t764 + (qJD(2) + qJD(4)) * t426, 0, 0, 0, 0, 0, t169, t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, t225, t187, t188, t905, qJD(3) * t261 + qJD(4) * t269 - t425 * t718 - t556, qJD(3) * t260 + qJD(4) * t268 - t425 * t717 - t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381, -t710, 0, 0, 0, -qJD(2) * t383 + t653, -t654, t911, t947, 0, 0, 0, t949 + t747, -t961 + t746, -qJD(2) * t50 + qJD(4) * t61, -t949 - t822, t961 - t821, -qJD(2) * t8 + qJD(4) * t11 - t805, t60, t53, t47, t48, t623, qJD(2) * t15 + qJD(4) * t27 + qJD(6) * t35 - t199 - t841, qJD(2) * t13 + qJD(4) * t25 + qJD(6) * t37 + t193 - t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t853 - t740, pkin(2) * t627, 0, 0, 0, 0, 0, -t928, t929, -t792, t928, qJD(5) - t929, qJD(4) * t107 - qJD(5) * t390 - t592, -t651, t464, 0, 0, 0, qJD(4) * t271 - qJD(6) * t259 + t496 + t559, qJD(4) * t273 + qJD(6) * t258 + t497 + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, -t491, 0, t490, t688, -qJD(4) * t407 + t475, -t651, t464, 0, 0, 0, t479 * t717 + t758, -t479 * t718 + t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t931, -t491 + t675, t770, t931, -t675 + t688 (-pkin(4) * t503 + qJ(5) * t854) * t844 + t475 + t542, t176, t464, t711, t886, 0, t394 * qJD(6) - t531 + t758, t393 * qJD(6) - t532 + t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, t479 * t686 - t887, 0, 0, 0, 0, 0, t169, t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, t225, t187, t188, t905, qJD(4) * t394 - t478 * t718 - t540, qJD(4) * t393 - t478 * t717 - t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t911, t947, 0, 0, 0, t660 + t949, -t961 - t662, -qJD(2) * t51 - qJD(3) * t61, -t820 - t949, t961 - t819, -qJD(2) * t9 - qJD(3) * t11 - t804, t189 * t687 - t500 * t911 - t196, -t263 * t605 + t309, -t217 * t687 + t656 - t955, t655 - t956 - t896, t623, -qJD(2) * t20 - qJD(3) * t27 + qJD(6) * t66 - t839, -qJD(2) * t18 - qJD(3) * t25 + qJD(6) * t67 - t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, t926, -t771, -t925, qJD(5) - t926, -qJD(3) * t107 + t499 - t593, t175, t464, -t711, -t886, 0, -qJD(3) * t271 - qJD(6) * t267 + t496 + t557, -qJD(3) * t273 + qJD(6) * t266 + t497 + t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t673, -t675, -t770, -t673, qJD(5) + t675, t499 - t542, t175, t464, -t711, -t886, 0, -t392 * qJD(6) + t496 + t531, t391 * qJD(6) + t497 + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t499, -t651, t464, 0, 0, 0, qJ(5) * t717 + t496, -qJ(5) * t718 + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, t460, 0, 0, 0, 0, 0, t670, t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, t225, -t582, -t581, t905, t502 * t716 - t528, t506 * t716 - t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t911, -t704, -t663 - t949, 0, 0, 0, 0, 0, qJD(6) * t208 + t215 * t687 - t659 (qJD(6) * t263 - t704) * t506 - t896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t492, qJD(3) * t390 - t733 - t754 - t764, 0, 0, 0, 0, 0, -t169, -t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t492, -t728 - t754 + t887, 0, 0, 0, 0, 0, -t169, -t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t492, -t460, 0, 0, 0, 0, 0, -t670, -t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t712 - t718, -t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t885, t919 -(t624 * t736 + t493) * t263 + t687 * t202 -(-t624 * t737 + t719) * t263 + t687 * t211, -t138, -qJD(2) * t28 - qJD(3) * t35 - qJD(4) * t66 - qJD(5) * t208 - t825, -qJD(2) * t30 - qJD(3) * t37 - qJD(4) * t67 - t263 * t497 - t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, t224, t191, t197, -t905, qJD(3) * t259 + qJD(4) * t267 + t556, -qJD(3) * t258 - qJD(4) * t266 + t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, t224, t191, t197, -t905, qJD(4) * t392 + t540, -qJD(4) * t391 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, t224, -t263 * t737, -t650, -t905, t528, t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, -t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t32;
