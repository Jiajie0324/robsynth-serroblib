% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR15_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR15_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR15_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR15_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:38:40
% EndTime: 2019-03-09 20:39:01
% DurationCPUTime: 6.89s
% Computational Cost: add. (8232->505), mult. (25356->923), div. (0->0), fcn. (25421->12), ass. (0->238)
t170 = cos(qJ(6));
t167 = sin(qJ(5));
t171 = cos(qJ(5));
t209 = pkin(5) * t171 + pkin(12) * t167;
t300 = t170 * t209;
t165 = cos(pkin(7));
t163 = sin(pkin(7));
t289 = cos(pkin(6));
t222 = t289 * t163;
t164 = sin(pkin(6));
t173 = cos(qJ(2));
t279 = t164 * t173;
t183 = t165 * t279 + t222;
t161 = t170 ^ 2;
t166 = sin(qJ(6));
t270 = t166 ^ 2 - t161;
t219 = t270 * qJD(6);
t169 = sin(qJ(2));
t294 = pkin(10) * t163;
t113 = (-pkin(2) * t173 - t169 * t294 - pkin(1)) * t164;
t168 = sin(qJ(3));
t172 = cos(qJ(3));
t238 = pkin(1) * t289;
t216 = t169 * t238;
t181 = -pkin(9) * t279 - t216;
t84 = pkin(10) * t183 - t181;
t211 = t164 * (-pkin(10) * t165 - pkin(9));
t197 = t169 * t211;
t94 = pkin(2) * t289 + t173 * t238 + t197;
t299 = -t168 * t84 + (t113 * t163 + t165 * t94) * t172;
t278 = t165 * t168;
t154 = pkin(2) * t278;
t281 = t163 * t172;
t295 = pkin(4) + pkin(10);
t106 = (t281 * t295 + t154) * qJD(3);
t288 = qJ(4) * t168;
t296 = pkin(3) + pkin(11);
t104 = (-t172 * t296 - pkin(2) - t288) * t163;
t282 = t163 * t168;
t151 = pkin(10) * t282;
t239 = -pkin(2) * t172 - pkin(3);
t88 = pkin(4) * t282 + t151 + (-pkin(11) + t239) * t165;
t292 = t104 * t171 + t167 * t88;
t265 = qJD(3) * t168;
t229 = t163 * t265;
t147 = pkin(3) * t229;
t263 = qJD(4) * t168;
t81 = t147 + (-t263 + (pkin(11) * t168 - qJ(4) * t172) * qJD(3)) * t163;
t41 = -qJD(5) * t292 + t171 * t106 - t167 * t81;
t264 = qJD(3) * t172;
t75 = t94 * t278;
t220 = qJD(2) * t289;
t210 = t173 * t220;
t149 = pkin(1) * t210;
t96 = qJD(2) * t197 + t149;
t221 = -qJD(3) * t75 - t113 * t229 - t168 * t96 - t264 * t84;
t277 = t165 * t172;
t97 = (t173 * t211 - t216) * qJD(2);
t184 = -t277 * t97 - t221;
t267 = qJD(2) * t169;
t228 = t164 * t267;
t116 = (pkin(2) * t169 - t173 * t294) * t164 * qJD(2);
t285 = t116 * t172;
t215 = t168 * t228;
t266 = qJD(2) * t173;
t227 = t164 * t266;
t280 = t164 * t169;
t244 = t168 * t280;
t65 = -t165 * t215 - qJD(3) * t244 + (qJD(3) * t183 + t227) * t172;
t20 = t65 * pkin(4) + (-t228 * t296 - t285) * t163 + t184;
t66 = t116 * t165 - t163 * t97;
t274 = t169 * t172;
t275 = t168 * t173;
t185 = t165 * t275 + t274;
t212 = t168 * t222;
t90 = t164 * t185 + t212;
t179 = -qJ(4) * t65 - qJD(4) * t90 + t66;
t64 = qJD(3) * t212 + (t185 * qJD(3) + (t165 * t274 + t275) * qJD(2)) * t164;
t22 = t296 * t64 + t179;
t126 = t163 * t279 - t165 * t289;
t32 = t90 * pkin(4) + t126 * t296 - t299;
t63 = t113 * t165 - t163 * t94;
t194 = -t90 * qJ(4) + t63;
t89 = -t172 * t183 + t244;
t34 = t296 * t89 + t194;
t293 = t167 * t32 + t171 * t34;
t6 = -qJD(5) * t293 - t167 * t22 + t171 * t20;
t298 = 0.2e1 * t163;
t297 = 0.2e1 * qJD(4);
t138 = t163 * t228;
t200 = t126 * t167 + t171 * t89;
t43 = qJD(5) * t200 + t138 * t171 + t64 * t167;
t68 = -t126 * t171 + t167 * t89;
t50 = t166 * t68 - t170 * t90;
t17 = -qJD(6) * t50 + t65 * t166 + t43 * t170;
t291 = t17 * t166;
t150 = t163 * t264;
t241 = t167 * t281;
t129 = t165 * t171 - t241;
t186 = -t129 * t166 + t170 * t282;
t128 = t165 * t167 + t171 * t281;
t98 = -qJD(5) * t128 + t167 * t229;
t53 = qJD(6) * t186 + t150 * t166 + t170 * t98;
t290 = t53 * t166;
t287 = qJD(5) * t50;
t51 = t166 * t90 + t170 * t68;
t286 = qJD(5) * t51;
t271 = pkin(10) * t281 + t154;
t123 = t271 * qJD(3);
t284 = t123 * t126;
t283 = t123 * t165;
t276 = t167 * t296;
t273 = t170 * t171;
t272 = t171 * t296;
t160 = t167 ^ 2;
t162 = t171 ^ 2;
t269 = t160 - t162;
t268 = t160 + t162;
t120 = qJD(4) * t126;
t262 = qJD(5) * t186;
t101 = t129 * t170 + t166 * t282;
t261 = qJD(5) * t101;
t260 = qJD(5) * t166;
t259 = qJD(5) * t167;
t258 = qJD(5) * t170;
t257 = qJD(5) * t171;
t256 = qJD(5) * t296;
t255 = qJD(6) * t166;
t254 = qJD(6) * t170;
t253 = qJD(6) * t171;
t252 = qJD(6) * t296;
t251 = t165 * qJD(4);
t250 = -0.2e1 * pkin(5) * qJD(6);
t249 = t113 * t282 + t172 * t84 + t75;
t248 = t200 * t260;
t247 = t200 * t258;
t246 = t296 * t282;
t243 = t166 * t276;
t242 = t166 * t272;
t240 = t170 * t276;
t117 = -qJ(4) * t165 - t271;
t158 = t164 ^ 2;
t237 = t158 * t266;
t157 = t163 ^ 2;
t236 = t157 * t264;
t235 = t165 * t264;
t234 = t128 * t260;
t233 = t128 * t258;
t232 = t166 * t253;
t231 = t166 * t252;
t230 = t170 * t253;
t226 = t166 * t254;
t225 = t167 * t258;
t224 = t170 * t257;
t223 = t167 * t257;
t218 = t269 * qJD(5);
t45 = qJ(4) * t126 - t249;
t217 = pkin(3) * t228;
t103 = pkin(4) * t281 - t117;
t214 = t296 * t150;
t213 = t166 * t225;
t208 = pkin(5) * t167 - pkin(12) * t171;
t207 = -pkin(3) * t172 - t288;
t13 = pkin(12) * t90 + t293;
t35 = -pkin(4) * t89 - t45;
t24 = -pkin(5) * t200 - pkin(12) * t68 + t35;
t8 = t13 * t170 + t166 * t24;
t206 = t166 * t51 + t170 * t50;
t56 = pkin(12) * t282 + t292;
t60 = pkin(5) * t128 - pkin(12) * t129 + t103;
t39 = t166 * t60 + t170 * t56;
t14 = -t167 * t34 + t171 * t32;
t58 = -t104 * t167 + t171 * t88;
t199 = qJ(4) * t138;
t198 = t101 * t166 - t170 * t186;
t148 = pkin(2) * t235;
t122 = pkin(10) * t229 - t148;
t12 = -pkin(5) * t90 - t14;
t4 = -t65 * pkin(5) - t6;
t196 = t12 * t254 + t4 * t166;
t195 = t12 * t255 - t4 * t170;
t193 = -t167 * t65 - t257 * t90;
t37 = -pkin(5) * t150 - t41;
t55 = -pkin(5) * t282 - t58;
t192 = t37 * t166 + t254 * t55;
t191 = -t37 * t170 + t255 * t55;
t42 = qJD(5) * t68 + t138 * t167 - t171 * t64;
t190 = t166 * t42 - t200 * t254;
t189 = -t170 * t42 - t200 * t255;
t99 = -qJD(5) * t241 + t165 * t257 - t171 * t229;
t188 = t128 * t254 + t166 * t99;
t187 = t128 * t255 - t170 * t99;
t139 = qJ(4) + t208;
t112 = t139 * t166 - t240;
t5 = -t167 * t20 - t171 * t22 - t257 * t32 + t259 * t34;
t40 = t104 * t259 - t106 * t167 - t171 * t81 - t257 * t88;
t131 = -t225 - t232;
t28 = -t113 * t150 - t116 * t282 - t172 * t96 - t235 * t94 + t265 * t84 - t278 * t97;
t180 = -pkin(12) * t65 + t5;
t178 = t120 + t28;
t87 = -t229 * t295 + t148 + t251;
t177 = pkin(12) * t150 - t40;
t176 = t99 * pkin(5) - t98 * pkin(12) + t87;
t25 = t178 - t199;
t18 = -pkin(4) * t64 - t25;
t175 = pkin(5) * t42 - pkin(12) * t43 + t18;
t137 = 0.2e1 * t168 * t236;
t133 = t166 * t259 - t230;
t132 = t166 * t257 + t167 * t254;
t130 = t167 * t255 - t224;
t125 = t181 * qJD(2);
t124 = pkin(9) * t228 - t149;
t119 = t165 * t239 + t151;
t118 = (-pkin(2) + t207) * t163;
t115 = (-t167 * t264 - t168 * t257) * t163;
t114 = (-t168 * t259 + t171 * t264) * t163;
t111 = t139 * t170 + t243;
t110 = t122 - t251;
t108 = t147 + (-qJ(4) * t264 - t263) * t163;
t70 = t170 * qJD(4) - t112 * qJD(6) + (t242 + t300) * qJD(5);
t69 = -t167 * t231 - t166 * (qJD(5) * t209 + qJD(4)) - t139 * t254 + t296 * t224;
t54 = qJD(6) * t101 - t150 * t170 + t166 * t98;
t52 = 0.2e1 * t90 * t65;
t48 = t171 * t65 - t259 * t90;
t47 = (t168 * t65 + t264 * t90) * t163;
t46 = t126 * pkin(3) - t299;
t44 = pkin(3) * t89 + t194;
t38 = -t166 * t56 + t170 * t60;
t29 = (t116 * t163 + t165 * t97) * t172 + t221;
t27 = pkin(3) * t64 + t179;
t26 = (-t217 - t285) * t163 + t184;
t16 = qJD(6) * t51 + t43 * t166 - t170 * t65;
t11 = -qJD(6) * t39 - t166 * t177 + t170 * t176;
t10 = -t166 * t176 - t170 * t177 - t254 * t60 + t255 * t56;
t7 = -t13 * t166 + t170 * t24;
t2 = -qJD(6) * t8 + t166 * t180 + t170 * t175;
t1 = t13 * t255 - t166 * t175 + t170 * t180 - t24 * t254;
t3 = [0, 0, 0, 0.2e1 * t169 * t237, 0.2e1 * (-t169 ^ 2 + t173 ^ 2) * t158 * qJD(2), 0.2e1 * t164 * t210, -0.2e1 * t220 * t280, 0, -0.2e1 * pkin(1) * t158 * t267 + 0.2e1 * t125 * t289, -0.2e1 * pkin(1) * t237 + 0.2e1 * t124 * t289, t52, -0.2e1 * t64 * t90 - 0.2e1 * t65 * t89, -0.2e1 * t126 * t65 + 0.2e1 * t138 * t90, 0.2e1 * t126 * t64 - 0.2e1 * t138 * t89, -0.2e1 * t126 * t138, -0.2e1 * t126 * t29 + 0.2e1 * t138 * t299 + 0.2e1 * t63 * t64 + 0.2e1 * t66 * t89, -0.2e1 * t126 * t28 - 0.2e1 * t138 * t249 + 0.2e1 * t63 * t65 + 0.2e1 * t66 * t90, 0.2e1 * t25 * t89 + 0.2e1 * t26 * t90 + 0.2e1 * t45 * t64 + 0.2e1 * t46 * t65, -0.2e1 * t126 * t26 + 0.2e1 * t138 * t46 - 0.2e1 * t27 * t89 - 0.2e1 * t44 * t64, 0.2e1 * t126 * t25 - 0.2e1 * t138 * t45 - 0.2e1 * t27 * t90 - 0.2e1 * t44 * t65, 0.2e1 * t25 * t45 + 0.2e1 * t26 * t46 + 0.2e1 * t27 * t44, 0.2e1 * t68 * t43, 0.2e1 * t200 * t43 - 0.2e1 * t42 * t68, 0.2e1 * t43 * t90 + 0.2e1 * t65 * t68, 0.2e1 * t200 * t65 - 0.2e1 * t42 * t90, t52, 0.2e1 * t14 * t65 - 0.2e1 * t18 * t200 + 0.2e1 * t35 * t42 + 0.2e1 * t6 * t90, 0.2e1 * t18 * t68 - 0.2e1 * t293 * t65 + 0.2e1 * t35 * t43 + 0.2e1 * t5 * t90, 0.2e1 * t51 * t17, -0.2e1 * t16 * t51 - 0.2e1 * t17 * t50, -0.2e1 * t17 * t200 + 0.2e1 * t42 * t51, 0.2e1 * t16 * t200 - 0.2e1 * t42 * t50, -0.2e1 * t200 * t42, 0.2e1 * t12 * t16 - 0.2e1 * t2 * t200 + 0.2e1 * t4 * t50 + 0.2e1 * t42 * t7, -0.2e1 * t1 * t200 + 0.2e1 * t12 * t17 + 0.2e1 * t4 * t51 - 0.2e1 * t42 * t8; 0, 0, 0, 0, 0, t227, -t228, 0, t125, t124, t47 (-t168 * t64 + t172 * t65 + (-t168 * t90 - t172 * t89) * qJD(3)) * t163, -t126 * t150 + t157 * t215 + t165 * t65, t157 * t172 * t228 + t126 * t229 - t165 * t64, t165 * t138, t284 + t29 * t165 + ((pkin(2) * t277 - t151) * t228 - pkin(2) * t64 - t66 * t172 + t63 * t265) * t163, -t122 * t126 + t28 * t165 + (-pkin(2) * t65 + t168 * t66 - t228 * t271 + t264 * t63) * t163, t110 * t89 + t117 * t64 + t119 * t65 + t123 * t90 + (t168 * t26 - t172 * t25 + (t168 * t45 + t172 * t46) * qJD(3)) * t163, -t108 * t89 - t118 * t64 - t284 + t26 * t165 + (t119 * t228 + t172 * t27 - t265 * t44) * t163, -t108 * t90 + t110 * t126 - t118 * t65 - t25 * t165 + (-t117 * t228 - t168 * t27 - t264 * t44) * t163, t108 * t44 + t110 * t45 + t117 * t25 + t118 * t27 + t119 * t26 + t123 * t46, t129 * t43 + t68 * t98, -t128 * t43 - t129 * t42 + t200 * t98 - t68 * t99, t129 * t65 + t98 * t90 + (t168 * t43 + t264 * t68) * t163, -t128 * t65 - t99 * t90 + (-t168 * t42 + t200 * t264) * t163, t47, t103 * t42 + t18 * t128 + t35 * t99 + t41 * t90 + t58 * t65 - t87 * t200 + (t14 * t264 + t168 * t6) * t163, t103 * t43 + t18 * t129 + t35 * t98 + t40 * t90 - t292 * t65 + t87 * t68 + (t168 * t5 - t264 * t293) * t163, t101 * t17 + t51 * t53, -t101 * t16 + t17 * t186 - t50 * t53 - t51 * t54, t101 * t42 + t128 * t17 - t200 * t53 + t51 * t99, -t128 * t16 + t186 * t42 + t200 * t54 - t50 * t99, t128 * t42 - t200 * t99, -t11 * t200 + t12 * t54 + t128 * t2 + t16 * t55 - t186 * t4 + t37 * t50 + t38 * t42 + t7 * t99, t1 * t128 - t10 * t200 + t101 * t4 + t12 * t53 + t17 * t55 + t37 * t51 - t39 * t42 - t8 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, 0.2e1 * (-t168 ^ 2 + t172 ^ 2) * t157 * qJD(3), 0.2e1 * t165 * t150, -0.2e1 * t165 * t229, 0, -0.2e1 * pkin(2) * t157 * t265 - 0.2e1 * t283, -0.2e1 * pkin(2) * t236 + 0.2e1 * t122 * t165 (-t110 * t172 + t123 * t168 + (t117 * t168 + t119 * t172) * qJD(3)) * t298, 0.2e1 * t283 + 0.2e1 * (t108 * t172 - t118 * t265) * t163, -0.2e1 * t110 * t165 + 0.2e1 * (-t108 * t168 - t118 * t264) * t163, 0.2e1 * t108 * t118 + 0.2e1 * t110 * t117 + 0.2e1 * t119 * t123, 0.2e1 * t129 * t98, -0.2e1 * t128 * t98 - 0.2e1 * t129 * t99 (t129 * t264 + t168 * t98) * t298 (-t128 * t264 - t168 * t99) * t298, t137, 0.2e1 * t103 * t99 + 0.2e1 * t87 * t128 + 0.2e1 * (t168 * t41 + t264 * t58) * t163, 0.2e1 * t103 * t98 + 0.2e1 * t87 * t129 + 0.2e1 * (t168 * t40 - t264 * t292) * t163, 0.2e1 * t101 * t53, -0.2e1 * t101 * t54 + 0.2e1 * t186 * t53, 0.2e1 * t101 * t99 + 0.2e1 * t128 * t53, -0.2e1 * t128 * t54 + 0.2e1 * t186 * t99, 0.2e1 * t128 * t99, 0.2e1 * t11 * t128 - 0.2e1 * t186 * t37 + 0.2e1 * t38 * t99 + 0.2e1 * t54 * t55, 0.2e1 * t10 * t128 + 0.2e1 * t101 * t37 - 0.2e1 * t39 * t99 + 0.2e1 * t53 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t64, t138, t29, t28, -pkin(3) * t65 - qJ(4) * t64 - qJD(4) * t89 (-0.2e1 * t217 - t285) * t163 + t184, -t178 + 0.2e1 * t199 - t120, -pkin(3) * t26 - qJ(4) * t25 - qJD(4) * t45, t171 * t43 - t259 * t68, -t43 * t167 - t171 * t42 + (-t167 * t200 - t171 * t68) * qJD(5), t48, t193, 0, -t65 * t272 + qJ(4) * t42 - qJD(4) * t200 + t18 * t167 + (t171 * t35 + t276 * t90) * qJD(5), t65 * t276 + qJ(4) * t43 + qJD(4) * t68 + t18 * t171 + (-t167 * t35 + t272 * t90) * qJD(5), -t51 * t232 + (t171 * t17 - t259 * t51) * t170, t206 * t259 + (-t16 * t170 - t291 + (t166 * t50 - t170 * t51) * qJD(6)) * t171 (t17 + t247) * t167 + (-t189 + t286) * t171 (-t16 - t248) * t167 + (-t190 - t287) * t171, t167 * t42 - t200 * t257, t111 * t42 - t70 * t200 + (t2 + (-t12 * t166 - t296 * t50) * qJD(5)) * t167 + (qJD(5) * t7 + t16 * t296 + t196) * t171, -t112 * t42 - t69 * t200 + (t1 + (-t12 * t170 - t296 * t51) * qJD(5)) * t167 + (-qJD(5) * t8 + t17 * t296 - t195) * t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, -t229, 0, -t123, t122 (qJD(3) * t207 + qJD(4) * t172) * t163, t123, -t122 + 0.2e1 * t251, -pkin(3) * t123 - qJ(4) * t110 - qJD(4) * t117, -t129 * t259 + t171 * t98, -t98 * t167 - t171 * t99 + (t128 * t167 - t129 * t171) * qJD(5), t114, t115, 0, -t171 * t214 + qJ(4) * t99 + qJD(4) * t128 + t87 * t167 + (t103 * t171 + t167 * t246) * qJD(5), t167 * t214 + qJ(4) * t98 + qJD(4) * t129 + t87 * t171 + (-t103 * t167 + t171 * t246) * qJD(5), t101 * t131 + t273 * t53, t198 * t259 + (-t290 - t170 * t54 + (-t101 * t170 - t166 * t186) * qJD(6)) * t171 (t53 - t233) * t167 + (-t187 + t261) * t171 (-t54 + t234) * t167 + (-t188 + t262) * t171, t128 * t257 + t167 * t99, t111 * t99 + t70 * t128 + (t11 + (-t166 * t55 + t186 * t296) * qJD(5)) * t167 + (qJD(5) * t38 + t296 * t54 + t192) * t171, -t112 * t99 + t69 * t128 + (t10 + (-t101 * t296 - t170 * t55) * qJD(5)) * t167 + (-qJD(5) * t39 + t296 * t53 - t191) * t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, qJ(4) * t297, -0.2e1 * t223, 0.2e1 * t218, 0, 0, 0, 0.2e1 * qJ(4) * t257 + 0.2e1 * qJD(4) * t167, -0.2e1 * qJ(4) * t259 + 0.2e1 * qJD(4) * t171, -0.2e1 * t161 * t223 - 0.2e1 * t162 * t226, 0.2e1 * t162 * t219 + 0.4e1 * t171 * t213, -0.2e1 * t167 * t232 - 0.2e1 * t258 * t269, 0.2e1 * t166 * t218 - 0.2e1 * t167 * t230, 0.2e1 * t223, 0.2e1 * t162 * t170 * t252 + 0.2e1 * t70 * t167 + 0.2e1 * (t111 - 0.2e1 * t243) * t257, -0.2e1 * t162 * t231 + 0.2e1 * t69 * t167 + 0.2e1 * (-t112 - 0.2e1 * t240) * t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t138, 0, t26, 0, 0, 0, 0, 0, t48, t193, 0, 0, 0, 0, 0 (-t16 + t248) * t171 + (-t190 + t287) * t167 (-t17 + t247) * t171 + (t189 + t286) * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, 0, 0, t123, 0, 0, 0, 0, 0, t114, t115, 0, 0, 0, 0, 0 (-t54 - t234) * t171 + (-t188 - t262) * t167 (-t53 - t233) * t171 + (t187 + t261) * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268 * t254, t268 * t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t42, t65, t6, t5, t254 * t51 + t291, -qJD(6) * t206 - t166 * t16 + t17 * t170, t190, -t189, 0, -pkin(5) * t16 - pkin(12) * t190 + t195, -pkin(5) * t17 + pkin(12) * t189 + t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t99, t150, t41, t40, t101 * t254 + t290, -qJD(6) * t198 - t166 * t54 + t53 * t170, t188, -t187, 0, -pkin(5) * t54 - pkin(12) * t188 + t191, -pkin(5) * t53 + pkin(12) * t187 + t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t257, 0, t167 * t256, t171 * t256, -t171 * t219 - t213, -0.4e1 * t171 * t226 + t259 * t270, t132, -t130, 0 (t242 - t300) * qJD(6) + (t166 * t208 + t240) * qJD(5) (t166 * t209 + t170 * t272) * qJD(6) + (-pkin(12) * t273 + (pkin(5) * t170 - t166 * t296) * t167) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t257, 0, 0, 0, 0, 0, t131, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t226, -0.2e1 * t219, 0, 0, 0, t166 * t250, t170 * t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, -t16, t42, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t54, t99, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, t133, t257, t70, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, -t255, 0, -pkin(12) * t254, pkin(12) * t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
