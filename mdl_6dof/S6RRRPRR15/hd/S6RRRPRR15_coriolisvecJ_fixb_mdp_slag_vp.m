% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPRR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPRR15_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRR15_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:39:07
% EndTime: 2019-03-09 20:39:36
% DurationCPUTime: 17.06s
% Computational Cost: add. (15454->758), mult. (46528->1016), div. (0->0), fcn. (38393->12), ass. (0->302)
t740 = sin(qJ(3));
t741 = sin(qJ(2));
t744 = cos(qJ(2));
t915 = cos(pkin(7));
t918 = cos(qJ(3));
t820 = t915 * t918;
t762 = t740 * t744 + t741 * t820;
t737 = sin(pkin(6));
t880 = qJD(1) * t737;
t682 = t762 * t880;
t736 = sin(pkin(7));
t877 = qJD(3) * t740;
t852 = t736 * t877;
t941 = t682 - t852;
t793 = t737 * (-pkin(10) * t915 - pkin(9));
t916 = cos(pkin(6));
t858 = pkin(1) * t916;
t829 = t741 * t858;
t751 = t744 * t793 - t829;
t659 = t751 * qJD(1);
t917 = pkin(10) * t736;
t773 = t737 * (pkin(2) * t741 - t744 * t917);
t688 = qJD(1) * t773;
t592 = -t659 * t736 + t915 * t688;
t848 = t740 * t915;
t903 = t737 * t741;
t796 = t848 * t903;
t902 = t737 * t744;
t831 = t918 * t902;
t802 = qJD(1) * t831;
t683 = -qJD(1) * t796 + t802;
t940 = -pkin(3) * t852 - qJ(4) * t683 + t592;
t728 = pkin(2) * t848;
t828 = t744 * t858;
t723 = qJD(1) * t828;
t775 = t741 * t793;
t658 = qJD(1) * t775 + t723;
t772 = -t740 * t658 + t659 * t820;
t919 = pkin(3) + pkin(11);
t833 = t919 * t903;
t856 = t918 * t688;
t857 = t736 * t918;
t932 = pkin(4) + pkin(10);
t937 = t683 * pkin(4) + (-qJD(1) * t833 - t856) * t736 - t772 - (t857 * t932 + t728) * qJD(3);
t876 = qJD(4) * t740;
t939 = t682 * t919 - (-t876 + (pkin(11) * t740 - qJ(4) * t918) * qJD(3)) * t736 + t940;
t795 = qJD(3) * t820;
t904 = t736 * t740;
t938 = pkin(2) * t795 - t918 * t658 - t659 * t848 - t688 * t904;
t854 = t741 * t880;
t827 = t736 * t854;
t935 = qJ(4) * t827 - t915 * qJD(4) - t938;
t739 = sin(qJ(5));
t743 = cos(qJ(5));
t764 = -t739 * t915 - t743 * t857;
t887 = -qJD(5) * t764 + t739 * t941 + t743 * t827;
t698 = -t739 * t857 + t743 * t915;
t884 = qJD(5) * t698 - t739 * t827 + t743 * t941;
t843 = t916 * qJD(1);
t800 = t843 + qJD(2);
t778 = t736 * t800;
t782 = t820 * t902;
t934 = -qJD(1) * t782 - t918 * t778;
t851 = qJD(3) * t918;
t824 = t736 * t851;
t794 = t824 - t683;
t767 = pkin(9) * t902 + t829;
t846 = t744 * t915;
t821 = t737 * t846;
t608 = t767 * qJD(1) + (qJD(1) * t821 + t778) * pkin(10);
t753 = pkin(2) * t916 + t775;
t614 = qJD(2) * pkin(2) + qJD(1) * t753 + t723;
t687 = (-pkin(2) * t744 - t741 * t917 - pkin(1)) * t737;
t674 = qJD(1) * t687;
t547 = t608 * t740 - t614 * t820 - t674 * t857;
t869 = -qJD(4) - t547;
t826 = t740 * t854;
t615 = t826 + t934;
t864 = t736 * t902;
t684 = qJD(1) * t864 - t800 * t915 - qJD(3);
t580 = -t743 * t615 - t684 * t739;
t579 = qJD(6) + t580;
t733 = t737 ^ 2;
t866 = qJD(1) * qJD(2);
t933 = -0.2e1 * t733 * t866;
t931 = MDP(5) * (t741 ^ 2 - t744 ^ 2);
t930 = MDP(6) * t744;
t763 = t740 * t846 + t741 * t918;
t754 = t763 * t737;
t770 = t740 * t778;
t613 = qJD(1) * t754 + qJD(5) + t770;
t742 = cos(qJ(6));
t582 = t615 * t739 - t684 * t743;
t738 = sin(qJ(6));
t908 = t582 * t738;
t553 = -t742 * t613 + t908;
t617 = t763 * t880 + t770;
t867 = qJD(5) + t617;
t929 = t553 * t867;
t837 = t867 * t743;
t845 = t916 * t736;
t822 = t740 * t845;
t649 = t822 + t754;
t696 = -t915 * t916 + t864;
t641 = (t821 + t845) * pkin(10) + t767;
t656 = t828 + t753;
t752 = t740 * t641 - t656 * t820 - t687 * t857;
t523 = t649 * pkin(4) + t696 * t919 + t752;
t589 = -t656 * t736 + t915 * t687;
t787 = -qJ(4) * t649 + t589;
t926 = -t740 * t903 + t845 * t918 + t782;
t531 = -t919 * t926 + t787;
t928 = t739 * t523 + t743 * t531;
t886 = pkin(4) * t682 - t852 * t932 - t935;
t777 = pkin(2) * t820 - pkin(10) * t904;
t692 = -pkin(3) * t915 - t777;
t647 = pkin(4) * t904 - pkin(11) * t915 + t692;
t781 = -pkin(3) * t918 - qJ(4) * t740 - pkin(2);
t671 = (-pkin(11) * t918 + t781) * t736;
t885 = t739 * t647 + t743 * t671;
t882 = pkin(10) * t857 + t728;
t927 = t882 * qJD(3) + t772;
t873 = qJD(5) * t743;
t875 = qJD(5) * t739;
t925 = -t647 * t873 + t671 * t875 + t739 * t937 + t939 * t743;
t868 = pkin(4) * t617 - t869;
t516 = t684 * t919 + t868;
t573 = -t614 * t736 + t915 * t674;
t788 = -qJ(4) * t617 + t573;
t519 = t615 * t919 + t788;
t483 = t516 * t739 + t519 * t743;
t842 = t915 * qJD(2);
t583 = (t842 + qJD(3)) * t826 - qJD(2) * t802 + t934 * qJD(3);
t815 = qJD(2) * t843;
t797 = pkin(1) * t815;
t718 = t744 * t797;
t766 = qJD(2) * t775;
t637 = qJD(1) * t766 + t718;
t661 = t751 * qJD(2);
t638 = qJD(1) * t661;
t689 = qJD(2) * t773;
t685 = qJD(1) * t689;
t819 = qJD(3) * t848;
t790 = t608 * t851 + t614 * t819 + t740 * t637 - t638 * t820 + t674 * t852 - t685 * t857;
t849 = t737 * t866;
t823 = t741 * t849;
t801 = t736 * t823;
t491 = -pkin(4) * t583 - t801 * t919 + t790;
t921 = qJD(2) * t762 + qJD(3) * t763;
t747 = t921 * t737;
t757 = qJD(3) * t770;
t584 = qJD(1) * t747 + t757;
t585 = -t638 * t736 + t915 * t685;
t760 = qJ(4) * t583 - qJD(4) * t617 + t585;
t496 = t584 * t919 + t760;
t472 = -qJD(5) * t483 + t743 * t491 - t496 * t739;
t470 = pkin(5) * t583 - t472;
t924 = t579 * (pkin(5) * t582 + pkin(12) * t579) + t470;
t548 = t918 * t608 + t614 * t848 + t674 * t904;
t526 = -pkin(4) * t615 + t548;
t679 = t684 * qJ(4);
t520 = t526 - t679;
t923 = -t520 * t867 - t583 * t919;
t591 = t926 * qJD(3) + (-t796 + t831) * qJD(2);
t724 = qJD(2) * t828;
t660 = t724 + t766;
t755 = -t641 * t851 - t656 * t819 - t740 * t660 + t661 * t820 - t687 * t852;
t855 = t918 * t689;
t503 = t591 * pkin(4) + (-qJD(2) * t833 - t855) * t736 - t755;
t590 = qJD(3) * t822 + t747;
t593 = -t661 * t736 + t915 * t689;
t759 = -qJ(4) * t591 - qJD(4) * t649 + t593;
t506 = t590 * t919 + t759;
t922 = -qJD(5) * t928 + t503 * t743 - t506 * t739;
t920 = t617 ^ 2;
t746 = qJD(1) ^ 2;
t914 = qJ(4) * t615;
t529 = t739 * t584 + t615 * t873 + t684 * t875 + t743 * t801;
t870 = qJD(6) * t742;
t862 = t742 * t529 - t738 * t583 + t613 * t870;
t871 = qJD(6) * t738;
t486 = -t582 * t871 + t862;
t913 = t486 * t738;
t533 = pkin(3) * t615 + t788;
t912 = t533 * t617;
t911 = t553 * t579;
t555 = t582 * t742 + t613 * t738;
t910 = t555 * t579;
t909 = t579 * t919;
t907 = t615 * t617;
t906 = t617 * t739;
t905 = t733 * t746;
t768 = -t743 * t584 + t739 * t801;
t530 = qJD(5) * t582 + t768;
t901 = t738 * t530;
t900 = t742 * t530;
t899 = t743 * t486;
t816 = pkin(5) * t743 + pkin(12) * t739;
t897 = (-pkin(4) - t816) * t617 - qJD(5) * t816 + t869;
t895 = -t794 * pkin(5) + qJD(5) * t885 - t739 * t939 + t937 * t743;
t552 = t617 * t919 + t914;
t893 = t739 * t526 + t743 * t552;
t892 = pkin(3) * t682 - (-qJ(4) * t851 - t876) * t736 + t940;
t891 = pkin(10) * t852 + t935;
t890 = (-pkin(3) * t854 - t856) * t736 - t927;
t789 = -t698 * t738 + t742 * t904;
t889 = qJD(6) * t789 + t738 * t794 - t742 * t887;
t665 = t698 * t742 + t738 * t904;
t888 = qJD(6) * t665 - t738 * t887 - t742 * t794;
t879 = qJD(2) * t736 ^ 2;
t878 = qJD(2) * t737;
t874 = qJD(5) * t742;
t872 = qJD(5) * t919;
t865 = pkin(1) * t905;
t861 = t918 * t641 + t656 * t848 + t687 * t904;
t690 = -t915 * qJ(4) - t882;
t853 = t741 * t878;
t471 = t739 * t491 + t743 * t496 + t516 * t873 - t519 * t875;
t469 = -pkin(12) * t583 + t471;
t704 = qJ(4) * t801;
t791 = t608 * t877 - t614 * t795 - t918 * t637 - t638 * t848 - t674 * t824 - t685 * t904;
t774 = qJD(4) * t684 + t791;
t505 = -t704 + t774;
t488 = -pkin(4) * t584 - t505;
t478 = pkin(5) * t530 - pkin(12) * t529 + t488;
t841 = -t469 * t738 + t742 * t478;
t839 = t529 * t738 + t742 * t583;
t838 = t867 * t739;
t836 = t867 * t555;
t835 = t579 * t742;
t713 = pkin(5) * t739 - pkin(12) * t743 + qJ(4);
t834 = -pkin(12) * t615 - qJD(6) * t713 + t893;
t832 = t733 * t741 * t744 * MDP(4);
t550 = t696 * qJ(4) - t861;
t670 = pkin(4) * t857 - t690;
t825 = t736 * t853;
t818 = t737 * t746 * t916;
t817 = pkin(1) * t933;
t564 = -t615 * t738 + t742 * t906;
t814 = -t739 * t874 - t564;
t586 = -pkin(5) * t764 - pkin(12) * t698 + t670;
t813 = -pkin(12) * t794 - qJD(6) * t586 + t925;
t572 = pkin(12) * t904 + t885;
t812 = -pkin(5) * t884 - pkin(12) * t887 + qJD(6) * t572 - t886;
t811 = t469 * t742 + t478 * t738;
t481 = pkin(12) * t613 + t483;
t492 = pkin(5) * t580 - pkin(12) * t582 + t520;
t476 = t481 * t742 + t492 * t738;
t810 = t481 * t738 - t492 * t742;
t485 = pkin(12) * t649 + t928;
t532 = pkin(4) * t926 - t550;
t595 = -t696 * t743 - t739 * t926;
t803 = t696 * t739 - t743 * t926;
t507 = -pkin(5) * t803 - pkin(12) * t595 + t532;
t809 = t485 * t742 + t507 * t738;
t808 = -t485 * t738 + t507 * t742;
t482 = t516 * t743 - t519 * t739;
t806 = t523 * t743 - t531 * t739;
t561 = t595 * t742 + t649 * t738;
t560 = t595 * t738 - t649 * t742;
t804 = t647 * t743 - t671 * t739;
t792 = pkin(3) * t801;
t785 = -t743 * t583 - t613 * t838;
t784 = -t579 * t870 - t901;
t783 = t579 * t871 - t900;
t780 = t739 * t503 + t743 * t506 + t523 * t873 - t531 * t875;
t769 = t739 * t583 - t613 * t837;
t765 = -t548 * t684 - t790;
t761 = -t641 * t877 + t656 * t795 + t918 * t660 + t661 * t848 + t687 * t824 + t689 * t904;
t480 = -pkin(5) * t613 - t482;
t756 = -pkin(12) * t530 + (t480 + t482) * t579;
t513 = -qJ(4) * t825 + t696 * qJD(4) - t761;
t508 = t790 - t792;
t501 = -pkin(4) * t590 - t513;
t749 = t800 * t767;
t748 = -t684 * t615 - t583;
t691 = t781 * t736;
t571 = -pkin(5) * t904 - t804;
t566 = t583 * t904;
t565 = pkin(3) * t617 + t914;
t563 = t742 * t615 + t738 * t906;
t559 = t583 * t649;
t551 = t696 * pkin(3) + t752;
t546 = -pkin(3) * t926 + t787;
t545 = qJD(5) * t803 + t590 * t739 + t743 * t825;
t544 = qJD(5) * t595 - t590 * t743 + t739 * t825;
t536 = t679 - t548;
t534 = pkin(3) * t684 - t869;
t518 = pkin(3) * t590 + t759;
t517 = (-pkin(3) * t853 - t855) * t736 - t755;
t510 = pkin(3) * t584 + t760;
t500 = -qJD(6) * t560 + t545 * t742 + t591 * t738;
t499 = qJD(6) * t561 + t545 * t738 - t591 * t742;
t493 = pkin(5) * t615 - t526 * t743 + t552 * t739;
t487 = qJD(6) * t555 + t839;
t484 = -pkin(5) * t649 - t806;
t479 = pkin(5) * t544 - pkin(12) * t545 + t501;
t474 = -pkin(5) * t591 - t922;
t473 = pkin(12) * t591 + t780;
t468 = -qJD(6) * t476 + t841;
t467 = -qJD(6) * t810 + t811;
t1 = [(t761 * t684 - t791 * t696 + t593 * t617 - t589 * t583 + t585 * t649 + t573 * t591 + (-qJD(1) * t861 - t548) * t825) * MDP(17) + ((-qJD(6) * t809 - t473 * t738 + t479 * t742) * t579 + t808 * t530 - t468 * t803 - t810 * t544 + t474 * t553 + t484 * t487 + t470 * t560 + t480 * t499) * MDP(34) + (t529 * t803 - t530 * t595 - t544 * t582 - t545 * t580) * MDP(23) + (-t486 * t803 + t500 * t579 + t530 * t561 + t544 * t555) * MDP(31) + (t487 * t803 - t499 * t579 - t530 * t560 - t544 * t553) * MDP(32) + (-t530 * t803 + t544 * t579) * MDP(33) + (-t530 * t649 - t544 * t613 - t580 * t591 - t583 * t803) * MDP(25) + (-(qJD(6) * t808 + t473 * t742 + t479 * t738) * t579 - t809 * t530 + t467 * t803 - t476 * t544 + t474 * t555 + t484 * t486 + t470 * t561 + t480 * t500) * MDP(35) + (t472 * t649 + t482 * t591 - t488 * t803 + t501 * t580 + t520 * t544 + t532 * t530 - t806 * t583 + t613 * t922) * MDP(27) + (-t471 * t649 - t483 * t591 + t488 * t595 + t501 * t582 + t520 * t545 + t532 * t529 + t583 * t928 - t613 * t780) * MDP(28) + (-qJD(2) * t749 + t741 * t817 - t767 * t815) * MDP(9) + (t529 * t595 + t545 * t582) * MDP(22) + (-(t736 * t855 + t755) * t684 + t790 * t696 + t593 * t615 + t589 * t584 - t585 * t926 + t573 * t590 + (-qJD(1) * t752 - t547) * t825) * MDP(16) + (-t505 * t926 + t508 * t649 + t513 * t615 + t517 * t617 + t534 * t591 + t536 * t590 + t550 * t584 - t551 * t583) * MDP(18) + (-t583 * t926 - t584 * t649 - t590 * t617 - t591 * t615) * MDP(12) + (t584 * t696 + t590 * t684 + (qJD(1) * t926 - t615) * t825) * MDP(14) + (-t508 * t696 + t510 * t926 - t517 * t684 - t518 * t615 - t533 * t590 - t546 * t584 + (qJD(1) * t551 + t534) * t825) * MDP(19) + (t591 * t613 - t559) * MDP(26) + (t486 * t561 + t500 * t555) * MDP(29) + (-qJD(1) * t696 - t684) * MDP(15) * t825 + (t591 * t617 - t559) * MDP(11) + (t744 * t817 - (-pkin(9) * t853 + t724) * t800 - (-pkin(9) * t823 + t718) * t916) * MDP(10) + (t529 * t649 + t545 * t613 + t582 * t591 - t583 * t595) * MDP(24) + 0.2e1 * t832 * t866 + (-t486 * t560 - t487 * t561 - t499 * t555 - t500 * t553) * MDP(30) + (t505 * t550 + t508 * t551 + t510 * t546 + t513 * t536 + t517 * t534 + t518 * t533) * MDP(21) + t931 * t933 + (-MDP(7) * t853 + t878 * t930) * (0.2e1 * t843 + qJD(2)) + (t583 * t696 - t591 * t684 + (qJD(1) * t649 + t617) * t825) * MDP(13) + (t505 * t696 - t510 * t649 + t513 * t684 - t518 * t617 - t533 * t591 + t546 * t583 + (-qJD(1) * t550 - t536) * t825) * MDP(20); (-t790 * t915 - t573 * t682 - t592 * t615 + t927 * t684 + (t684 * t856 + t573 * t877 - t585 * t918 - pkin(2) * t584 + (qJD(2) * t777 + t547) * t854) * t736) * MDP(16) + (t486 * t789 - t487 * t665 - t553 * t889 - t555 * t888) * MDP(30) + ((-t572 * t738 + t586 * t742) * t530 - t468 * t764 + t571 * t487 - t470 * t789 + (t738 * t813 - t742 * t812) * t579 + t895 * t553 + t888 * t480 - t884 * t810) * MDP(34) + (t487 * t764 + t530 * t789 - t553 * t884 - t579 * t888) * MDP(32) + (-t530 * t904 - t580 * t794 - t583 * t764 - t613 * t884) * MDP(25) + (-(t572 * t742 + t586 * t738) * t530 + t467 * t764 + t571 * t486 + t470 * t665 + (t738 * t812 + t742 * t813) * t579 + t895 * t555 + t889 * t480 - t884 * t476) * MDP(35) + (t529 * t764 - t530 * t698 + t580 * t887 - t582 * t884) * MDP(23) + (-t486 * t764 + t530 * t665 + t555 * t884 + t579 * t889) * MDP(31) + (-t530 * t764 + t579 * t884) * MDP(33) + (MDP(7) * t818 + (-t797 + t865) * MDP(9)) * t741 + (t613 * t794 - t566) * MDP(26) + (t617 * t794 - t566) * MDP(11) + (t791 * t915 - t573 * t683 - t592 * t617 + t938 * t684 + (pkin(2) * t583 + t585 * t740 + (-pkin(10) * t740 * t684 + t573 * t918) * qJD(3) + (-qJD(2) * t882 + t548) * t854) * t736) * MDP(17) + (-pkin(9) * t744 * t849 + qJD(1) * t749) * MDP(9) + (-t804 * t583 + t472 * t904 + t670 * t530 - t488 * t764 + ((-qJD(5) * t671 - t937) * t743 + (-qJD(5) * t647 + t939) * t739) * t613 + t886 * t580 + t884 * t520 + t794 * t482) * MDP(27) + (-t584 * t915 - t941 * t684 + (t615 * t736 + t879 * t918) * t854) * MDP(14) + (t842 + t684) * MDP(15) * t827 + (t683 * t615 + t617 * t682 + (-t918 * t583 - t584 * t740 + (-t615 * t918 - t617 * t740) * qJD(3)) * t736) * MDP(12) + (-t534 * t683 - t536 * t682 - t692 * t583 + t690 * t584 - t890 * t617 + t891 * t615 + (-t918 * t505 + t508 * t740 + (t534 * t918 + t536 * t740) * qJD(3)) * t736) * MDP(18) + (t508 * t915 + t533 * t682 - t691 * t584 + t890 * t684 + t892 * t615 + (-t533 * t877 + t918 * t510 + (qJD(2) * t692 - t534) * t854) * t736) * MDP(19) + (-t505 * t915 + t533 * t683 + t691 * t583 + t891 * t684 + t892 * t617 + (-t533 * t851 - t510 * t740 + (-qJD(2) * t690 + t536) * t854) * t736) * MDP(20) + (-t583 * t915 - t794 * t684 + (-t617 * t736 + t740 * t879) * t854) * MDP(13) + (t529 * t904 + t582 * t794 - t698 * t583 - t613 * t887) * MDP(24) + (t505 * t690 + t508 * t692 + t510 * t691 - t533 * t892 - t534 * t890 + t536 * t891) * MDP(21) + (t529 * t698 - t582 * t887) * MDP(22) + (t486 * t665 + t555 * t889) * MDP(29) + (-t718 + t744 * t865 + (-pkin(9) * t854 + t723) * t843 + t723 * qJD(2)) * MDP(10) - t746 * t832 + (-t471 * t904 - t794 * t483 + t488 * t698 - t887 * t520 + t670 * t529 + t886 * t582 + t885 * t583 + t613 * t925) * MDP(28) + t905 * t931 - t818 * t930; (t713 * t900 - t480 * t563 - t493 * t553 + (t738 * t834 - t742 * t897) * t579 + (-t480 * t738 * qJD(5) + t468 - (qJD(5) * t553 + t784) * t919) * t739 + (t480 * t870 + t470 * t738 - t810 * t617 + t919 * t487 + (t738 * t909 - t810) * qJD(5)) * t743) * MDP(34) + (-t713 * t901 - t480 * t564 - t493 * t555 + (t738 * t897 + t742 * t834) * t579 + (-t480 * t874 - t467 - (qJD(5) * t555 + t783) * t919) * t739 + (-t480 * t871 + t470 * t742 - t476 * t617 + t919 * t486 + (t742 * t909 - t476) * qJD(5)) * t743) * MDP(35) + t748 * MDP(13) + (t529 * t743 - t582 * t838) * MDP(22) + (t547 * t684 + t573 * t615 + t791) * MDP(17) + (t582 * t615 + t785) * MDP(24) + (-t617 * t684 - t880 * t921 - t757) * MDP(14) + (-t573 * t617 + t765) * MDP(16) + (-t580 * t615 + t769) * MDP(25) + (qJ(4) * t530 + t482 * t615 + t868 * t580 + (t488 + (t552 + t872) * t613) * t739 + (-t526 * t613 - t923) * t743) * MDP(27) + (qJ(4) * t529 - t483 * t615 + t488 * t743 + (t743 * t872 + t893) * t613 + t868 * t582 + t923 * t739) * MDP(28) + MDP(15) * t801 + t613 * t615 * MDP(26) + (-t615 ^ 2 + t920) * MDP(12) + (t553 * t564 + t555 * t563 + (t553 * t742 + t555 * t738) * t875 + (-t913 - t487 * t742 + (t553 * t738 - t555 * t742) * qJD(6)) * t743) * MDP(30) + (t565 * t615 - t765 - 0.2e1 * t792 + t912) * MDP(19) + MDP(11) * t907 + (t742 * t899 + (-t743 * t871 + t814) * t555) * MDP(29) + ((-t582 * t867 - t530) * t743 + (t580 * t867 - t529) * t739) * MDP(23) + (pkin(3) * t583 - qJ(4) * t584 + (-t536 - t548) * t617 + (t534 + t869) * t615) * MDP(18) + (-t533 * t615 + t565 * t617 + t684 * t869 + 0.2e1 * t704 - t774) * MDP(20) + (-pkin(3) * t508 - qJ(4) * t505 - t533 * t565 - t534 * t548 + t536 * t869) * MDP(21) + (t486 * t739 + t814 * t579 + (t836 - t783) * t743) * MDP(31) + (t530 * t739 + t579 * t837) * MDP(33) + (-t487 * t739 + (t738 * t875 + t563) * t579 + (t784 - t929) * t743) * MDP(32); t748 * MDP(18) + (t801 - t907) * MDP(19) + (-t684 ^ 2 - t920) * MDP(20) + (-t536 * t684 + t508 + t912) * MDP(21) + (t580 * t684 + t785) * MDP(27) + (t582 * t684 + t769) * MDP(28) + (-t743 * t487 + (t742 * t684 - t738 * t837) * t579 + (t784 + t929) * t739) * MDP(34) + (-t899 + (-t738 * t684 - t742 * t837) * t579 + (t836 + t783) * t739) * MDP(35); -t580 ^ 2 * MDP(23) + (t580 * t613 + t529) * MDP(24) - t768 * MDP(25) - t583 * MDP(26) + (t483 * t613 + t472) * MDP(27) + (t482 * t613 + t520 * t580 - t471) * MDP(28) + (t555 * t835 + t913) * MDP(29) + ((t486 - t911) * t742 + (-t487 - t910) * t738) * MDP(30) + (t579 * t835 + t901) * MDP(31) + (-t579 ^ 2 * t738 + t900) * MDP(32) + (-pkin(5) * t487 - t483 * t553 + t756 * t738 - t742 * t924) * MDP(34) + (-pkin(5) * t486 - t483 * t555 + t738 * t924 + t756 * t742) * MDP(35) + (t580 * MDP(22) + (-qJD(5) + t613) * MDP(25) - t520 * MDP(27) - t555 * MDP(31) + t553 * MDP(32) - t579 * MDP(33) + t810 * MDP(34) + t476 * MDP(35) + t582 * MDP(23)) * t582; t555 * t553 * MDP(29) + (-t553 ^ 2 + t555 ^ 2) * MDP(30) + (t862 + t911) * MDP(31) + (-t839 + t910) * MDP(32) + t530 * MDP(33) + (t476 * t579 - t480 * t555 + t841) * MDP(34) + (t480 * t553 - t579 * t810 - t811) * MDP(35) + (-MDP(31) * t908 - MDP(32) * t555 - MDP(34) * t476 + MDP(35) * t810) * qJD(6);];
tauc  = t1;
