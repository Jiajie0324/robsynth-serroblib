% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR15_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:38:41
% EndTime: 2019-03-09 20:39:30
% DurationCPUTime: 22.35s
% Computational Cost: add. (33523->837), mult. (100331->1120), div. (0->0), fcn. (82139->12), ass. (0->378)
t325 = sin(qJ(3));
t326 = sin(qJ(2));
t329 = cos(qJ(2));
t328 = cos(qJ(3));
t519 = cos(pkin(7));
t441 = t328 * t519;
t361 = t325 * t329 + t326 * t441;
t322 = sin(pkin(6));
t482 = qJD(1) * t322;
t249 = t361 * t482;
t321 = sin(pkin(7));
t479 = qJD(3) * t325;
t455 = t321 * t479;
t573 = t249 - t455;
t520 = cos(pkin(6));
t463 = pkin(1) * t520;
t312 = t326 * t463;
t389 = t322 * (-t519 * pkin(10) - pkin(9));
t343 = t329 * t389 - t312;
t226 = t343 * qJD(1);
t538 = pkin(10) * t321;
t366 = t322 * (pkin(2) * t326 - t329 * t538);
t257 = qJD(1) * t366;
t160 = -t226 * t321 + t519 * t257;
t443 = t325 * t519;
t501 = t322 * t326;
t393 = t443 * t501;
t373 = qJD(1) * t393;
t457 = t329 * t482;
t250 = t328 * t457 - t373;
t572 = -pkin(3) * t455 - qJ(4) * t250 + t160;
t311 = pkin(2) * t443;
t313 = t329 * t463;
t305 = qJD(1) * t313;
t368 = t326 * t389;
t225 = qJD(1) * t368 + t305;
t208 = t325 * t225;
t434 = t519 * t226;
t387 = -t328 * t434 + t208;
t541 = pkin(3) + pkin(11);
t424 = t541 * t501;
t502 = t321 * t328;
t506 = t257 * t328;
t540 = pkin(4) + pkin(10);
t571 = (t540 * t502 + t311) * qJD(3) - t250 * pkin(4) - (-qJD(1) * t424 - t506) * t321 - t387;
t477 = qJD(4) * t325;
t570 = t541 * t249 - (-t477 + (pkin(11) * t325 - qJ(4) * t328) * qJD(3)) * t321 + t572;
t503 = t321 * t325;
t123 = t328 * t225 + t257 * t503 + t325 * t434;
t458 = t326 * t482;
t420 = t321 * t458;
t569 = qJ(4) * t420 - t519 * qJD(4) + t123;
t324 = sin(qJ(5));
t327 = cos(qJ(5));
t273 = t324 * t519 + t327 * t502;
t487 = -qJD(5) * t273 - t573 * t324 - t327 * t420;
t274 = -t324 * t502 + t327 * t519;
t486 = qJD(5) * t274 - t324 * t420 + t573 * t327;
t478 = qJD(3) * t328;
t454 = t321 * t478;
t549 = t250 - t454;
t275 = pkin(2) * t441 - pkin(10) * t503;
t263 = -t519 * pkin(3) - t275;
t214 = pkin(4) * t503 - t519 * pkin(11) + t263;
t445 = -qJ(4) * t325 - pkin(2);
t238 = (-t541 * t328 + t445) * t321;
t475 = qJD(5) * t327;
t476 = qJD(5) * t324;
t524 = t214 * t475 - t238 * t476 + t324 * t571 - t570 * t327;
t431 = qJD(3) * t519;
t411 = t328 * t431;
t304 = pkin(2) * t411;
t551 = pkin(4) * t249 - t540 * t455 + t304 - t569;
t500 = t322 * t329;
t484 = pkin(9) * t500 + t312;
t267 = t484 * qJD(1);
t430 = t520 * qJD(1);
t395 = t430 + qJD(2);
t370 = t321 * t395;
t440 = t329 * t519;
t413 = t322 * t440;
t342 = qJD(1) * t413 + t370;
t176 = pkin(10) * t342 + t267;
t256 = (-pkin(2) * t329 - t326 * t538 - pkin(1)) * t322;
t241 = qJD(1) * t256;
t344 = t520 * pkin(2) + t368;
t181 = qJD(2) * pkin(2) + qJD(1) * t344 + t305;
t436 = t519 * t181;
t107 = t176 * t325 - t241 * t502 - t328 * t436;
t568 = qJD(4) + t107;
t567 = t549 * pkin(12) - t524;
t566 = -t486 * pkin(5) + t487 * pkin(12) - t551;
t360 = t325 * t370;
t362 = t325 * t440 + t326 * t328;
t555 = t362 * t482;
t184 = t360 + t555;
t408 = pkin(5) * t327 + pkin(12) * t324;
t565 = qJD(5) * t408 - (-pkin(4) - t408) * t184 + t568;
t471 = qJD(1) * qJD(2);
t446 = t329 * t471;
t415 = t322 * t446;
t465 = t325 * t501;
t418 = qJD(3) * t465;
t148 = qJD(1) * t418 + qJD(2) * t373 - t328 * (qJD(3) * t342 + t415);
t182 = t325 * t458 - t328 * t342;
t251 = t321 * t457 - t519 * t395 - qJD(3);
t564 = t251 * t182 + t148;
t554 = pkin(4) * t184 + t568;
t70 = t541 * t251 + t554;
t137 = -t181 * t321 + t519 * t241;
t381 = -qJ(4) * t184 + t137;
t75 = t541 * t182 + t381;
t28 = -t324 * t75 + t327 * t70;
t339 = qJD(5) + t184;
t480 = qJD(2) * t322;
t456 = t326 * t480;
t416 = qJD(1) * t456;
t286 = t321 * t416;
t300 = qJD(2) * t305;
t357 = qJD(2) * t368;
t204 = qJD(1) * t357 + t300;
t228 = t343 * qJD(2);
t205 = qJD(1) * t228;
t258 = qJD(2) * t366;
t252 = qJD(1) * t258;
t412 = t325 * t431;
t382 = t176 * t478 + t181 * t412 + t325 * t204 - t205 * t441 + t241 * t455 - t252 * t502;
t41 = -pkin(4) * t148 - t541 * t286 + t382;
t545 = qJD(2) * t361 + qJD(3) * t362;
t337 = t545 * t322;
t353 = qJD(3) * t360;
t149 = qJD(1) * t337 + t353;
t152 = -t205 * t321 + t519 * t252;
t355 = qJ(4) * t148 - qJD(4) * t184 + t152;
t46 = t541 * t149 + t355;
t378 = -t324 * t41 - t327 * t46 - t70 * t475 + t75 * t476;
t563 = -t28 * t339 - t378;
t348 = t360 + qJD(5);
t333 = (-t348 - t555) * t339;
t562 = t324 * t148 + t327 * t333;
t318 = t322 ^ 2;
t561 = -0.2e1 * t318 * t471;
t29 = t324 * t70 + t327 * t75;
t350 = t362 * t322;
t338 = qJD(1) * t350 + t348;
t27 = pkin(12) * t338 + t29;
t323 = sin(qJ(6));
t145 = -t327 * t182 - t251 * t324;
t147 = t182 * t324 - t251 * t327;
t246 = t251 * qJ(4);
t108 = t325 * (t241 * t321 + t436) + t328 * t176;
t82 = -t182 * pkin(4) + t108;
t76 = -t246 + t82;
t42 = t145 * pkin(5) - t147 * pkin(12) + t76;
t539 = cos(qJ(6));
t14 = t539 * t27 + t323 * t42;
t144 = qJD(6) + t145;
t282 = qJ(4) * t286;
t383 = t176 * t479 - t181 * t411 - t328 * t204 - t205 * t443 - t241 * t454 - t252 * t503;
t367 = qJD(4) * t251 + t383;
t59 = -t282 + t367;
t36 = -pkin(4) * t149 - t59;
t349 = -t324 * t149 - t286 * t327;
t85 = qJD(5) * t145 + t349;
t359 = -t327 * t149 + t286 * t324;
t86 = qJD(5) * t147 + t359;
t16 = pkin(5) * t86 + pkin(12) * t85 + t36;
t5 = -pkin(12) * t148 - t378;
t2 = -qJD(6) * t14 + t539 * t16 - t323 * t5;
t560 = -t14 * t144 - t2;
t550 = t324 * t214 + t327 * t238;
t523 = -qJD(5) * t550 + t570 * t324 + t327 * t571;
t335 = t539 * t338;
t113 = t147 * t323 - t335;
t558 = t113 * t339;
t557 = t145 * t339;
t429 = t339 * t147;
t439 = t520 * t321;
t414 = t325 * t439;
t216 = t414 + t350;
t121 = t148 * t216;
t352 = t413 + t439;
t451 = t329 * t480;
t159 = -qJD(2) * t393 - t418 + (qJD(3) * t352 + t451) * t328;
t553 = t159 * t184 - t121;
t130 = t148 * t503;
t552 = -t184 * t549 - t130;
t444 = t324 * t46 - t327 * t41;
t8 = -qJD(5) * t29 - t444;
t207 = pkin(10) * t352 + t484;
t223 = t313 + t344;
t435 = t519 * t223;
t119 = -t325 * t207 + t328 * (t256 * t321 + t435);
t158 = qJD(3) * t414 + t337;
t215 = -t328 * t352 + t465;
t272 = t321 * t500 - t520 * t519;
t419 = t321 * t456;
t548 = -t149 * t272 - t158 * t251 + t419 * (qJD(1) * t215 + t182);
t547 = t148 * t272 - t159 * t251 + t419 * (qJD(1) * t216 + t184);
t79 = t216 * pkin(4) + t541 * t272 - t119;
t157 = -t223 * t321 + t519 * t256;
t380 = -qJ(4) * t216 + t157;
t87 = t541 * t215 + t380;
t533 = t324 * t79 + t327 * t87;
t306 = qJD(2) * t313;
t227 = t306 + t357;
t422 = -t207 * t478 - t223 * t412 - t325 * t227 - t256 * t455;
t433 = t519 * t228;
t351 = -t328 * t433 - t422;
t505 = t258 * t328;
t57 = t159 * pkin(4) + (-qJD(2) * t424 - t505) * t321 + t351;
t161 = -t228 * t321 + t519 * t258;
t354 = -qJ(4) * t159 - qJD(4) * t216 + t161;
t60 = t541 * t158 + t354;
t12 = -qJD(5) * t533 - t324 * t60 + t327 * t57;
t384 = t323 * t27 - t539 * t42;
t1 = -qJD(6) * t384 + t323 * t16 + t539 * t5;
t481 = qJD(2) * t321 ^ 2;
t544 = -t251 * t549 - (-t184 * t321 + t325 * t481) * t458 + t519 * t148;
t543 = -t251 * t573 + (t182 * t321 + t328 * t481) * t458 - t519 * t149;
t542 = t184 ^ 2;
t331 = qJD(1) ^ 2;
t6 = pkin(5) * t148 - t8;
t537 = t6 * t323;
t136 = pkin(12) * t503 + t550;
t277 = pkin(10) * t502 + t311;
t261 = -t519 * qJ(4) - t277;
t237 = pkin(4) * t502 - t261;
t154 = pkin(5) * t273 - pkin(12) * t274 + t237;
t97 = t539 * t136 + t323 * t154;
t536 = t97 * qJD(6) - t323 * t567 + t566 * t539;
t96 = -t323 * t136 + t539 * t154;
t535 = -t96 * qJD(6) + t566 * t323 + t539 * t567;
t534 = pkin(5) * t549 - t523;
t397 = t215 * t327 + t272 * t324;
t531 = t397 * t86;
t89 = pkin(3) * t182 + t381;
t530 = t184 * t89;
t529 = t273 * t86;
t528 = t323 * t86;
t527 = t324 * t86;
t336 = t323 * t338;
t115 = t539 * t147 + t336;
t432 = t539 * t148 - t323 * t85;
t35 = qJD(6) * t115 + t432;
t526 = t327 * t35;
t473 = qJD(6) * t323;
t34 = -qJD(6) * t335 + t147 * t473 + t323 * t148 + t539 * t85;
t525 = t34 * t323;
t518 = qJ(4) * t182;
t112 = t541 * t184 + t518;
t55 = t327 * t112 + t324 * t82;
t292 = pkin(5) * t324 - pkin(12) * t327 + qJ(4);
t498 = t324 * t541;
t254 = t539 * t292 + t323 * t498;
t449 = qJD(5) * t539;
t417 = t327 * t449;
t44 = -pkin(12) * t182 + t55;
t522 = qJD(6) * t254 + t323 * t565 - t541 * t417 - t539 * t44;
t462 = t324 * t539;
t255 = t323 * t292 - t462 * t541;
t474 = qJD(5) * t541;
t452 = t327 * t474;
t521 = -t255 * qJD(6) + t565 * t539 + (t44 + t452) * t323;
t517 = t113 * t323;
t516 = t115 * t113;
t515 = t115 * t144;
t514 = t115 * t323;
t513 = t147 * t145;
t511 = t182 * t184;
t510 = t184 * t251;
t509 = t184 * t324;
t504 = t318 * t331;
t497 = t327 * t184;
t496 = t327 * t541;
t494 = pkin(3) * t249 - (-qJ(4) * t478 - t477) * t321 + t572;
t268 = -pkin(10) * t455 + t304;
t493 = -t268 + t569;
t269 = t277 * qJD(3);
t492 = (-pkin(3) * t458 - t506) * t321 + t387 - t269;
t491 = -t208 + (t257 * t321 + t434) * t328 + t269;
t490 = t123 - t268;
t421 = t539 * t503;
t489 = -qJD(6) * t421 + t274 * t473 + t323 * t549 - t487 * t539;
t232 = t539 * t274 + t323 * t503;
t488 = t232 * qJD(6) + t323 * t487 + t539 * t549;
t483 = t326 ^ 2 - t329 ^ 2;
t470 = t1 * t539;
t469 = t6 * t539;
t468 = t35 * t539;
t467 = t539 * t86;
t466 = t329 * t504;
t120 = t328 * t207 + t256 * t503 + t325 * t435;
t461 = t327 * t539;
t460 = t539 * t113;
t459 = t539 * t115;
t453 = t324 * t474;
t450 = -t182 ^ 2 + t542;
t448 = qJD(6) * t539;
t428 = t339 * t115;
t427 = t339 * t327;
t423 = t326 * t466;
t110 = t272 * qJ(4) - t120;
t410 = t322 * t331 * t520;
t409 = pkin(1) * t561;
t127 = t539 * t182 + t323 * t509;
t405 = t323 * t476 + t127;
t37 = -t324 * t87 + t327 * t79;
t54 = -t112 * t324 + t327 * t82;
t401 = t149 * t215 + t158 * t182;
t150 = t214 * t327 - t238 * t324;
t163 = t215 * t324 - t272 * t327;
t396 = t318 * t326 * t446;
t394 = 0.2e1 * t430 + qJD(2);
t128 = -t323 * t182 + t184 * t462;
t390 = -t324 * t449 - t128;
t388 = pkin(3) * t286;
t33 = pkin(12) * t216 + t533;
t88 = -pkin(4) * t215 - t110;
t61 = -pkin(5) * t397 - pkin(12) * t163 + t88;
t17 = -t323 * t33 + t539 * t61;
t386 = t14 * t323 - t384 * t539;
t385 = t539 * t14 + t323 * t384;
t18 = t323 * t61 + t539 * t33;
t11 = t324 * t57 + t327 * t60 + t79 * t475 - t87 * t476;
t125 = t163 * t539 + t216 * t323;
t376 = -t163 * t323 + t216 * t539;
t259 = -pkin(9) * t416 + t300;
t365 = -t144 * t448 - t528;
t364 = t144 * t473 - t467;
t363 = t539 * t145 + t448;
t356 = -t108 * t251 - t382;
t73 = -t207 * t479 + t223 * t411 + t328 * t227 + t256 * t454 + t258 * t503 + t325 * t433;
t271 = t484 * qJD(2);
t346 = t148 * t215 - t149 * t216 - t158 * t184 - t159 * t182;
t345 = -t149 * t502 - t182 * t573;
t67 = -qJ(4) * t419 + t272 * qJD(4) - t73;
t62 = t382 - t388;
t51 = -pkin(4) * t158 - t67;
t341 = -t386 * qJD(6) - t2 * t323 + t470;
t340 = t182 * t250 + t184 * t249 + (-t148 * t328 - t149 * t325 + (-t182 * t328 - t184 * t325) * qJD(3)) * t321;
t332 = -t327 * t148 + t324 * t333;
t276 = -pkin(9) * t501 + t313;
t270 = -pkin(9) * t456 + t306;
t266 = -pkin(9) * t458 + t305;
t262 = (-pkin(3) * t328 + t445) * t321;
t260 = qJD(1) * t271;
t231 = t274 * t323 - t421;
t166 = (t519 * qJD(2) + t251) * t420;
t153 = (-qJD(1) * t272 - t251) * t419;
t143 = -t184 * t461 - t323 * t251;
t142 = -t539 * t251 + t323 * t497;
t135 = -pkin(5) * t503 - t150;
t129 = pkin(3) * t184 + t518;
t111 = t272 * pkin(3) - t119;
t106 = pkin(3) * t215 + t380;
t105 = qJD(5) * t397 + t158 * t324 + t327 * t419;
t104 = qJD(5) * t163 - t158 * t327 + t324 * t419;
t98 = pkin(5) * t147 + pkin(12) * t145;
t92 = -t108 + t246;
t90 = pkin(3) * t251 + t568;
t74 = (t258 * t321 + t433) * t328 + t422;
t72 = pkin(3) * t158 + t354;
t71 = (-pkin(3) * t456 - t505) * t321 + t351;
t64 = pkin(3) * t149 + t355;
t50 = t376 * qJD(6) + t105 * t539 + t159 * t323;
t49 = t125 * qJD(6) + t105 * t323 - t159 * t539;
t43 = pkin(5) * t182 - t54;
t32 = -pkin(5) * t216 - t37;
t26 = -pkin(5) * t338 - t28;
t23 = pkin(5) * t104 - pkin(12) * t105 + t51;
t22 = t539 * t28 + t323 * t98;
t21 = -t323 * t28 + t539 * t98;
t10 = -pkin(5) * t159 - t12;
t9 = pkin(12) * t159 + t11;
t4 = -t18 * qJD(6) + t539 * t23 - t323 * t9;
t3 = t17 * qJD(6) + t323 * t23 + t539 * t9;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t396, t483 * t561, t394 * t451, -0.2e1 * t396, -t394 * t456, 0, -t260 * t520 - t271 * t395 + t326 * t409, -t259 * t520 - t270 * t395 + t329 * t409 (t259 * t329 + t260 * t326 + (-t266 * t329 - t267 * t326) * qJD(2) + (t270 * t329 + t271 * t326 + (-t276 * t329 - t326 * t484) * qJD(2)) * qJD(1)) * t322, t259 * t484 - t260 * t276 - t266 * t271 + t267 * t270, t553, t346, t547, t401, -t548, t153, t137 * t158 + t149 * t157 + t152 * t215 + t161 * t182 - t251 * t74 + t272 * t382 + (qJD(1) * t119 - t107) * t419, t137 * t159 - t148 * t157 + t152 * t216 + t161 * t184 + t251 * t73 - t272 * t383 + (-qJD(1) * t120 - t108) * t419, t107 * t159 - t108 * t158 + t119 * t148 - t120 * t149 - t182 * t73 - t184 * t74 + t215 * t383 + t216 * t382, -t107 * t74 + t108 * t73 - t119 * t382 - t120 * t383 + t137 * t161 + t152 * t157, t153, -t547, t548, t553, t346, t401, t110 * t149 - t111 * t148 + t158 * t92 + t159 * t90 + t182 * t67 + t184 * t71 + t215 * t59 + t216 * t62, -t106 * t149 - t158 * t89 - t182 * t72 - t215 * t64 - t251 * t71 - t272 * t62 + (qJD(1) * t111 + t90) * t419, t106 * t148 - t159 * t89 - t184 * t72 - t216 * t64 + t251 * t67 + t272 * t59 + (-qJD(1) * t110 - t92) * t419, t106 * t64 + t110 * t59 + t111 * t62 + t67 * t92 + t71 * t90 + t72 * t89, t105 * t147 - t163 * t85, -t104 * t147 - t105 * t145 - t163 * t86 - t397 * t85, t105 * t338 + t147 * t159 - t163 * t148 - t85 * t216, t104 * t145 - t531, -t104 * t338 - t145 * t159 - t148 * t397 - t86 * t216, t159 * t338 - t121, t76 * t104 + t12 * t338 + t51 * t145 - t37 * t148 + t28 * t159 + t8 * t216 - t36 * t397 + t88 * t86, t76 * t105 - t11 * t339 + t51 * t147 + t148 * t533 - t29 * t159 + t36 * t163 + t216 * t378 - t88 * t85, -t104 * t29 - t105 * t28 - t11 * t145 - t12 * t147 - t163 * t8 + t37 * t85 - t378 * t397 - t533 * t86, t11 * t29 + t12 * t28 + t36 * t88 + t37 * t8 - t378 * t533 + t51 * t76, t115 * t50 - t125 * t34, -t113 * t50 - t115 * t49 - t125 * t35 - t34 * t376, t104 * t115 + t125 * t86 + t144 * t50 + t34 * t397, t113 * t49 - t35 * t376, -t104 * t113 - t144 * t49 + t35 * t397 + t376 * t86, t104 * t144 - t531, t10 * t113 - t104 * t384 + t144 * t4 + t17 * t86 - t2 * t397 + t26 * t49 + t32 * t35 - t376 * t6, t1 * t397 + t10 * t115 - t104 * t14 + t125 * t6 - t144 * t3 - t18 * t86 + t26 * t50 - t32 * t34, t1 * t376 - t113 * t3 - t115 * t4 - t125 * t2 - t14 * t49 + t17 * t34 - t18 * t35 + t384 * t50, t1 * t18 + t10 * t26 + t14 * t3 + t17 * t2 + t32 * t6 - t384 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, t483 * t504, -t329 * t410, t423, t326 * t410, 0, -pkin(9) * t415 + t267 * t395 + (-qJD(2) * t430 + t504) * t326 * pkin(1), pkin(1) * t466 + t266 * t395 - t259, 0, 0, t552, t340, -t544, t345, t543, t166, -t382 * t519 - t137 * t249 - t160 * t182 + t491 * t251 + (t137 * t479 - pkin(2) * t149 - t152 * t328 + (qJD(2) * t275 + t107) * t458) * t321, t383 * t519 - t137 * t250 - t160 * t184 - t490 * t251 + (t137 * t478 + pkin(2) * t148 + t152 * t325 + (-qJD(2) * t277 + t108) * t458) * t321, -t107 * t250 + t108 * t249 + t148 * t275 - t149 * t277 + t491 * t184 + t490 * t182 + (t325 * t382 - t328 * t383 + (t107 * t328 - t108 * t325) * qJD(3)) * t321, -pkin(2) * t152 * t321 + t107 * t491 - t108 * t490 - t137 * t160 - t275 * t382 - t277 * t383, t166, t544, -t543, t552, t340, t345, -t148 * t263 + t149 * t261 - t249 * t92 - t250 * t90 - t492 * t184 + t493 * t182 + (t325 * t62 - t328 * t59 + (t325 * t92 + t328 * t90) * qJD(3)) * t321, t62 * t519 - t262 * t149 + t89 * t249 + t492 * t251 + t494 * t182 + (-t89 * t479 + t328 * t64 + (qJD(2) * t263 - t90) * t458) * t321, -t59 * t519 + t262 * t148 + t89 * t250 + t493 * t251 + t494 * t184 + (-t89 * t478 - t325 * t64 + (-qJD(2) * t261 + t92) * t458) * t321, t261 * t59 + t262 * t64 + t263 * t62 - t492 * t90 + t493 * t92 - t494 * t89, t147 * t487 - t274 * t85, -t145 * t487 - t147 * t486 + t273 * t85 - t274 * t86, -t147 * t549 - t274 * t148 + t338 * t487 - t503 * t85, t145 * t486 + t529, t145 * t549 + t273 * t148 - t338 * t486 - t503 * t86, -t338 * t549 - t130, t145 * t551 - t150 * t148 + t237 * t86 + t36 * t273 - t28 * t549 + t338 * t523 + t486 * t76 + t503 * t8, t147 * t551 + t148 * t550 - t237 * t85 + t36 * t274 + t29 * t549 - t339 * t524 + t378 * t503 + t487 * t76, -t524 * t145 - t523 * t147 + t150 * t85 + t273 * t378 - t274 * t8 - t487 * t28 - t486 * t29 - t550 * t86, t150 * t8 + t237 * t36 + t523 * t28 + t524 * t29 - t378 * t550 + t551 * t76, -t115 * t489 - t232 * t34, t113 * t489 - t115 * t488 + t231 * t34 - t232 * t35, t115 * t486 - t144 * t489 + t232 * t86 - t273 * t34, t113 * t488 + t231 * t35, -t113 * t486 - t144 * t488 - t231 * t86 - t273 * t35, t144 * t486 + t529, t534 * t113 + t135 * t35 - t536 * t144 + t2 * t273 + t231 * t6 + t488 * t26 - t384 * t486 + t86 * t96, -t1 * t273 + t534 * t115 - t135 * t34 - t486 * t14 + t535 * t144 + t232 * t6 - t489 * t26 - t86 * t97, -t1 * t231 + t535 * t113 + t536 * t115 - t488 * t14 - t2 * t232 + t34 * t96 - t35 * t97 - t384 * t489, t1 * t97 + t135 * t6 - t535 * t14 + t2 * t96 + t534 * t26 + t384 * t536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t511, t450, -t564, -t511, -t482 * t545 - t353 - t510, t286, -t137 * t184 + t356, t107 * t251 + t137 * t182 + t383, 0, 0, t286, t564, t149 + t510, t511, t450, -t511, pkin(3) * t148 - qJ(4) * t149 + (-t108 - t92) * t184 + (t90 - t568) * t182, t129 * t182 - t356 - 0.2e1 * t388 + t530, t129 * t184 - t182 * t89 - t251 * t568 + 0.2e1 * t282 - t367, -pkin(3) * t62 - qJ(4) * t59 - t108 * t90 - t129 * t89 - t568 * t92, -t324 * t429 - t327 * t85 (-t86 - t429) * t327 + (t85 + t557) * t324, t147 * t182 + t332, t145 * t427 + t527, -t145 * t182 + t562, t338 * t182, qJ(4) * t86 + t148 * t496 + t28 * t182 + t36 * t324 + (t475 + t497) * t76 + (t453 - t54) * t338 + t554 * t145, -qJ(4) * t85 - t148 * t498 - t29 * t182 + t36 * t327 + (-t476 - t509) * t76 + (t452 + t55) * t339 + t554 * t147, t145 * t55 + t147 * t54 + (-t184 * t29 - t541 * t85 - t8 + (t145 * t541 - t29) * qJD(5)) * t327 + (t184 * t28 + t541 * t86 + t378 + (-t147 * t541 + t28) * qJD(5)) * t324, qJ(4) * t36 - t28 * t54 - t29 * t55 + t554 * t76 - (-t324 * t378 + t327 * t8 + (-t28 * t324 + t29 * t327) * qJD(5)) * t541, -t34 * t461 + (-t327 * t473 + t390) * t115, t128 * t113 + t115 * t127 + (t460 + t514) * t476 + (-t468 + t525 + (-t459 + t517) * qJD(6)) * t327, -t34 * t324 + t390 * t144 + (t428 - t364) * t327, t323 * t526 + (t327 * t448 - t405) * t113, -t35 * t324 + t405 * t144 + (t365 - t558) * t327, t144 * t427 + t527, -t43 * t113 - t26 * t127 + t254 * t86 + t521 * t144 + (t2 + (-t113 * t541 - t26 * t323) * qJD(5)) * t324 + (t26 * t448 - t339 * t384 + t35 * t541 + t537) * t327, -t43 * t115 - t26 * t128 - t255 * t86 - t522 * t144 + (-t1 + (-t115 * t541 - t26 * t539) * qJD(5)) * t324 + (-t14 * t339 - t26 * t473 - t34 * t541 + t469) * t327, t14 * t127 - t384 * t128 + t254 * t34 - t255 * t35 - t521 * t115 - t522 * t113 + t386 * t476 + (-t385 * qJD(6) - t1 * t323 - t2 * t539) * t327, t6 * t496 + t1 * t255 + t2 * t254 + (-t43 - t453) * t26 + t522 * t14 - t521 * t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t564, t286 - t511, -t251 ^ 2 - t542, -t251 * t92 + t530 + t62, 0, 0, 0, 0, 0, 0, t251 * t145 + t332, t251 * t147 + t562 (t85 - t557) * t327 + (-t86 + t429) * t324, t251 * t76 + (t29 * t339 + t8) * t327 + t563 * t324, 0, 0, 0, 0, 0, 0, -t526 + (-t323 * t475 - t142) * t144 + (t365 + t558) * t324, t327 * t34 + (-t417 + t143) * t144 + (t428 + t364) * t324, t143 * t113 + t142 * t115 + (-t460 + t514) * t475 + (-t468 - t525 + (t459 + t517) * qJD(6)) * t324, t384 * t142 - t14 * t143 + (qJD(5) * t385 - t6) * t327 + (t26 * t339 + t341) * t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, -t145 ^ 2 + t147 ^ 2, t145 * t338 + t182 * t475 + t251 * t476 - t349, -t513, t147 * t338 - t182 * t476 + t251 * t475 - t359, -t148, -t76 * t147 + t29 * t338 - t475 * t75 - t476 * t70 - t444, t76 * t145 - t563, 0, 0, t115 * t363 - t525, -t34 * t539 - t363 * t113 + (-t35 - t515) * t323, -t115 * t147 + t144 * t363 + t528, t144 * t517 - t468, -t144 ^ 2 * t323 + t113 * t147 + t467, -t144 * t147, -t469 - pkin(5) * t35 - t29 * t113 + t384 * t147 + (-pkin(12) * t448 - t21) * t144 + (-pkin(12) * t86 + t144 * t26) * t323, pkin(5) * t34 + pkin(12) * t364 - t29 * t115 + t14 * t147 + t22 * t144 + t26 * t363 + t537, t470 + t22 * t113 + t21 * t115 + t363 * t384 + (t115 * t448 - t468) * pkin(12) + ((qJD(6) * t113 - t34) * pkin(12) + t560) * t323, -t6 * pkin(5) + pkin(12) * t341 - t14 * t22 + t21 * t384 - t26 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516, -t113 ^ 2 + t115 ^ 2, t113 * t144 - t34, -t516, -qJD(6) * t336 - t147 * t448 - t432 + t515, t86, -t26 * t115 - t560, t26 * t113 - t144 * t384 - t1, 0, 0;];
tauc_reg  = t7;
