% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR15_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR15_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:38:40
% EndTime: 2019-03-09 20:39:07
% DurationCPUTime: 10.51s
% Computational Cost: add. (15350->650), mult. (46412->902), div. (0->0), fcn. (38393->12), ass. (0->297)
t275 = sin(qJ(3));
t276 = sin(qJ(2));
t279 = cos(qJ(2));
t430 = cos(pkin(7));
t448 = cos(qJ(3));
t352 = t430 * t448;
t297 = t275 * t279 + t276 * t352;
t272 = sin(pkin(6));
t410 = qJD(1) * t272;
t216 = t297 * t410;
t271 = sin(pkin(7));
t407 = qJD(3) * t275;
t385 = t271 * t407;
t466 = t216 - t385;
t328 = t272 * (-pkin(10) * t430 - pkin(9));
t431 = cos(pkin(6));
t391 = pkin(1) * t431;
t363 = t276 * t391;
t286 = t279 * t328 - t363;
t193 = t286 * qJD(1);
t447 = pkin(10) * t271;
t308 = (pkin(2) * t276 - t279 * t447) * t272;
t222 = qJD(1) * t308;
t126 = -t193 * t271 + t430 * t222;
t379 = t275 * t430;
t423 = t272 * t276;
t331 = t379 * t423;
t422 = t272 * t279;
t365 = t448 * t422;
t336 = qJD(1) * t365;
t217 = -qJD(1) * t331 + t336;
t465 = pkin(3) * t385 + qJ(4) * t217 - t126;
t406 = qJD(4) * t275;
t449 = pkin(3) + pkin(11);
t463 = -t216 * t449 + (-t406 + (pkin(11) * t275 - qJ(4) * t448) * qJD(3)) * t271 + t465;
t263 = pkin(2) * t379;
t362 = t279 * t391;
t258 = qJD(1) * t362;
t310 = t276 * t328;
t192 = qJD(1) * t310 + t258;
t307 = -t275 * t192 + t193 * t352;
t366 = t449 * t423;
t389 = t448 * t222;
t390 = t271 * t448;
t459 = pkin(4) + pkin(10);
t462 = -(t390 * t459 + t263) * qJD(3) + t217 * pkin(4) + (-qJD(1) * t366 - t389) * t271 - t307;
t330 = qJD(3) * t352;
t424 = t271 * t275;
t464 = pkin(2) * t330 - t448 * t192 - t193 * t379 - t222 * t424;
t387 = t276 * t410;
t361 = t271 * t387;
t461 = qJ(4) * t361 - t430 * qJD(4) - t464;
t302 = pkin(9) * t422 + t363;
t373 = t431 * qJD(1);
t335 = t373 + qJD(2);
t313 = t271 * t335;
t377 = t279 * t430;
t355 = t272 * t377;
t142 = t302 * qJD(1) + (qJD(1) * t355 + t313) * pkin(10);
t288 = pkin(2) * t431 + t310;
t148 = qJD(2) * pkin(2) + qJD(1) * t288 + t258;
t221 = (-pkin(2) * t279 - t276 * t447 - pkin(1)) * t272;
t208 = qJD(1) * t221;
t81 = t142 * t275 - t148 * t352 - t208 * t390;
t420 = -qJD(4) - t81;
t274 = sin(qJ(5));
t278 = cos(qJ(5));
t299 = -t274 * t430 - t278 * t390;
t416 = -qJD(5) * t299 + t274 * t466 + t278 * t361;
t232 = -t274 * t390 + t278 * t430;
t414 = qJD(5) * t232 - t274 * t361 + t278 * t466;
t316 = t352 * t422;
t460 = -qJD(1) * t316 - t448 * t313;
t384 = qJD(3) * t448;
t358 = t271 * t384;
t329 = t358 - t217;
t360 = t275 * t387;
t149 = t360 + t460;
t396 = t271 * t422;
t218 = qJD(1) * t396 - t335 * t430 - qJD(3);
t114 = -t278 * t149 - t218 * t274;
t113 = qJD(6) + t114;
t298 = t275 * t377 + t276 * t448;
t305 = t275 * t313;
t151 = t298 * t410 + t305;
t399 = qJD(5) + t151;
t116 = t149 * t274 - t218 * t278;
t289 = t298 * t272;
t147 = qJD(1) * t289 + qJD(5) + t305;
t273 = sin(qJ(6));
t277 = cos(qJ(6));
t87 = t116 * t273 - t277 * t147;
t458 = t399 * t87;
t436 = pkin(4) * t216 - t385 * t459 - t461;
t370 = t278 * t399;
t312 = pkin(2) * t352 - pkin(10) * t424;
t226 = -pkin(3) * t430 - t312;
t181 = pkin(4) * t424 - pkin(11) * t430 + t226;
t315 = -pkin(3) * t448 - qJ(4) * t275 - pkin(2);
t205 = (-pkin(11) * t448 + t315) * t271;
t415 = t274 * t181 + t278 * t205;
t412 = pkin(10) * t390 + t263;
t457 = t412 * qJD(3) + t307;
t376 = t431 * t271;
t456 = -t275 * t423 + t376 * t448 + t316;
t403 = qJD(5) * t278;
t405 = qJD(5) * t274;
t455 = -t181 * t403 + t205 * t405 + t462 * t274 - t463 * t278;
t419 = pkin(4) * t151 - t420;
t372 = t430 * qJD(2);
t117 = (t372 + qJD(3)) * t360 - qJD(2) * t336 + t460 * qJD(3);
t50 = t218 * t449 + t419;
t107 = -t148 * t271 + t430 * t208;
t321 = -qJ(4) * t151 + t107;
t53 = t149 * t449 + t321;
t17 = t274 * t50 + t278 * t53;
t398 = qJD(1) * qJD(2);
t382 = t272 * t398;
t357 = t276 * t382;
t242 = t271 * t357;
t346 = qJD(2) * t373;
t332 = pkin(1) * t346;
t253 = t279 * t332;
t301 = qJD(2) * t310;
t171 = qJD(1) * t301 + t253;
t195 = t286 * qJD(2);
t172 = qJD(1) * t195;
t223 = qJD(2) * t308;
t219 = qJD(1) * t223;
t351 = qJD(3) * t379;
t325 = t142 * t384 + t148 * t351 + t275 * t171 - t172 * t352 + t208 * t385 - t219 * t390;
t25 = -pkin(4) * t117 - t242 * t449 + t325;
t451 = qJD(2) * t297 + qJD(3) * t298;
t282 = t451 * t272;
t291 = qJD(3) * t305;
t118 = qJD(1) * t282 + t291;
t119 = -t172 * t271 + t430 * t219;
t294 = qJ(4) * t117 - qJD(4) * t151 + t119;
t30 = t118 * t449 + t294;
t6 = -qJD(5) * t17 + t278 * t25 - t274 * t30;
t4 = pkin(5) * t117 - t6;
t454 = t113 * (pkin(5) * t116 + pkin(12) * t113) + t4;
t213 = t218 * qJ(4);
t82 = t448 * t142 + t148 * t379 + t208 * t424;
t60 = -pkin(4) * t149 + t82;
t54 = -t213 + t60;
t453 = -t117 * t449 - t399 * t54;
t63 = t274 * t118 + t149 * t403 + t218 * t405 + t278 * t242;
t89 = t116 * t277 + t147 * t273;
t21 = qJD(6) * t89 + t277 * t117 + t273 * t63;
t356 = t275 * t376;
t183 = t356 + t289;
t230 = -t430 * t431 + t396;
t175 = (t355 + t376) * pkin(10) + t302;
t190 = t362 + t288;
t287 = t275 * t175 - t190 * t352 - t221 * t390;
t57 = t183 * pkin(4) + t230 * t449 + t287;
t123 = -t190 * t271 + t430 * t221;
t320 = -qJ(4) * t183 + t123;
t65 = -t449 * t456 + t320;
t339 = t274 * t57 + t278 * t65;
t125 = t456 * qJD(3) + (-t331 + t365) * qJD(2);
t259 = qJD(2) * t362;
t194 = t259 + t301;
t290 = -t175 * t384 - t190 * t351 - t275 * t194 + t195 * t352 - t221 * t385;
t388 = t448 * t223;
t37 = t125 * pkin(4) + (-qJD(2) * t366 - t388) * t271 - t290;
t124 = qJD(3) * t356 + t282;
t127 = -t195 * t271 + t430 * t223;
t293 = -qJ(4) * t125 - qJD(4) * t183 + t127;
t40 = t124 * t449 + t293;
t452 = -qJD(5) * t339 - t274 * t40 + t278 * t37;
t238 = qJ(4) * t242;
t326 = t142 * t407 - t148 * t330 - t448 * t171 - t172 * t379 - t208 * t358 - t219 * t424;
t309 = qJD(4) * t218 + t326;
t39 = -t238 + t309;
t22 = -pkin(4) * t118 - t39;
t303 = -t278 * t118 + t242 * t274;
t64 = qJD(5) * t116 + t303;
t12 = pkin(5) * t64 - pkin(12) * t63 + t22;
t5 = t274 * t25 + t278 * t30 + t50 * t403 - t405 * t53;
t3 = -pkin(12) * t117 + t5;
t15 = pkin(12) * t147 + t17;
t26 = pkin(5) * t114 - pkin(12) * t116 + t54;
t344 = t15 * t273 - t26 * t277;
t1 = -qJD(6) * t344 + t12 * t273 + t277 * t3;
t450 = t151 ^ 2;
t281 = qJD(1) ^ 2;
t446 = -t329 * pkin(5) + t415 * qJD(5) + t463 * t274 + t462 * t278;
t429 = qJ(4) * t149;
t86 = t151 * t449 + t429;
t444 = t274 * t60 + t278 * t86;
t443 = t113 * t87;
t442 = t113 * t89;
t67 = pkin(3) * t149 + t321;
t441 = t151 * t67;
t400 = qJD(6) * t277;
t401 = qJD(6) * t273;
t20 = -t116 * t401 - t273 * t117 + t147 * t400 + t277 * t63;
t440 = t20 * t273;
t439 = t273 * t64;
t438 = t277 * t64;
t437 = t278 * t20;
t435 = -pkin(3) * t216 + (-qJ(4) * t384 - t406) * t271 + t465;
t434 = pkin(10) * t385 + t461;
t433 = -(-pkin(3) * t387 - t389) * t271 + t457;
t348 = pkin(5) * t278 + pkin(12) * t274;
t432 = qJD(5) * t348 - (-pkin(4) - t348) * t151 - t420;
t428 = t113 * t449;
t427 = t151 * t149;
t426 = t151 * t274;
t268 = t272 ^ 2;
t425 = t268 * t281;
t322 = -t232 * t273 + t277 * t424;
t418 = qJD(6) * t322 + t273 * t329 - t277 * t416;
t199 = t232 * t277 + t273 * t424;
t417 = qJD(6) * t199 - t273 * t416 - t277 * t329;
t411 = t276 ^ 2 - t279 ^ 2;
t409 = qJD(2) * t271 ^ 2;
t408 = qJD(2) * t272;
t404 = qJD(5) * t277;
t402 = qJD(5) * t449;
t397 = t279 * t425;
t394 = t448 * t175 + t190 * t379 + t221 * t424;
t224 = -t430 * qJ(4) - t412;
t386 = t276 * t408;
t383 = t268 * t398;
t374 = t399 * t89;
t248 = pkin(5) * t274 - pkin(12) * t278 + qJ(4);
t371 = -pkin(12) * t149 - qJD(6) * t248 + t444;
t369 = t399 * t274;
t368 = t113 * t277;
t367 = 0.2e1 * t383;
t84 = t230 * qJ(4) - t394;
t204 = pkin(4) * t390 - t224;
t359 = t271 * t386;
t106 = pkin(12) * t424 + t415;
t354 = -pkin(5) * t414 - pkin(12) * t416 + qJD(6) * t106 - t436;
t120 = -pkin(5) * t299 - pkin(12) * t232 + t204;
t353 = -pkin(12) * t329 - qJD(6) * t120 + t455;
t350 = t272 * t281 * t431;
t349 = -0.2e1 * pkin(1) * t383;
t98 = -t149 * t273 + t277 * t426;
t347 = -t274 * t404 - t98;
t10 = t15 * t277 + t26 * t273;
t19 = pkin(12) * t183 + t339;
t129 = -t230 * t278 - t274 * t456;
t337 = t230 * t274 - t278 * t456;
t66 = pkin(4) * t456 - t84;
t41 = -pkin(5) * t337 - pkin(12) * t129 + t66;
t343 = t19 * t277 + t273 * t41;
t342 = -t19 * t273 + t277 * t41;
t16 = -t274 * t53 + t278 * t50;
t340 = -t274 * t65 + t278 * t57;
t95 = t129 * t277 + t183 * t273;
t94 = t129 * t273 - t183 * t277;
t338 = t181 * t278 - t205 * t274;
t334 = 0.2e1 * t373 + qJD(2);
t327 = pkin(3) * t242;
t324 = -t113 * t400 - t439;
t323 = t113 * t401 - t438;
t318 = t274 * t37 + t278 * t40 + t57 * t403 - t405 * t65;
t317 = -t278 * t117 - t147 * t369;
t304 = t274 * t117 - t147 * t370;
t300 = -t218 * t82 - t325;
t14 = -pkin(5) * t147 - t16;
t296 = -pkin(12) * t64 + (t14 + t16) * t113;
t295 = -t175 * t407 + t190 * t330 + t448 * t194 + t195 * t379 + t221 * t358 + t223 * t424;
t2 = -qJD(6) * t10 + t277 * t12 - t273 * t3;
t47 = -qJ(4) * t359 + t230 * qJD(4) - t295;
t42 = t325 - t327;
t35 = -pkin(4) * t124 - t47;
t284 = t335 * t302;
t283 = -t218 * t149 - t117;
t225 = t315 * t271;
t105 = -pkin(5) * t424 - t338;
t100 = t117 * t424;
t99 = pkin(3) * t151 + t429;
t97 = t277 * t149 + t273 * t426;
t93 = t117 * t183;
t85 = t230 * pkin(3) + t287;
t80 = -pkin(3) * t456 + t320;
t79 = qJD(5) * t337 + t124 * t274 + t278 * t359;
t78 = qJD(5) * t129 - t124 * t278 + t274 * t359;
t70 = t213 - t82;
t68 = pkin(3) * t218 - t420;
t52 = pkin(3) * t124 + t293;
t51 = (-pkin(3) * t386 - t388) * t271 - t290;
t44 = pkin(3) * t118 + t294;
t34 = -qJD(6) * t94 + t125 * t273 + t277 * t79;
t33 = qJD(6) * t95 - t125 * t277 + t273 * t79;
t27 = pkin(5) * t149 + t274 * t86 - t278 * t60;
t18 = -pkin(5) * t183 - t340;
t13 = pkin(5) * t78 - pkin(12) * t79 + t35;
t8 = -pkin(5) * t125 - t452;
t7 = pkin(12) * t125 + t318;
t9 = [0, 0, 0, t276 * t279 * t367, -t411 * t367, t334 * t279 * t408, -t334 * t386, 0, -qJD(2) * t284 + t276 * t349 - t302 * t346, t279 * t349 - (-pkin(9) * t386 + t259) * t335 - (-pkin(9) * t357 + t253) * t431, t125 * t151 - t93, -t117 * t456 - t118 * t183 - t124 * t151 - t125 * t149, t117 * t230 - t125 * t218 + (qJD(1) * t183 + t151) * t359, t118 * t230 + t124 * t218 + (qJD(1) * t456 - t149) * t359 (-qJD(1) * t230 - t218) * t359 -(t271 * t388 + t290) * t218 + t325 * t230 + t127 * t149 + t123 * t118 - t119 * t456 + t107 * t124 + (-qJD(1) * t287 - t81) * t359, t295 * t218 - t326 * t230 + t127 * t151 - t123 * t117 + t119 * t183 + t107 * t125 + (-qJD(1) * t394 - t82) * t359, -t117 * t85 + t118 * t84 + t124 * t70 + t125 * t68 + t149 * t47 + t151 * t51 + t183 * t42 - t39 * t456, -t118 * t80 - t124 * t67 - t149 * t52 + t456 * t44 - t218 * t51 - t230 * t42 + (qJD(1) * t85 + t68) * t359, t117 * t80 - t125 * t67 - t151 * t52 - t183 * t44 + t218 * t47 + t230 * t39 + (-qJD(1) * t84 - t70) * t359, t39 * t84 + t42 * t85 + t44 * t80 + t47 * t70 + t51 * t68 + t52 * t67, t116 * t79 + t129 * t63, -t114 * t79 - t116 * t78 - t129 * t64 + t337 * t63, t116 * t125 - t117 * t129 + t147 * t79 + t183 * t63, -t114 * t125 - t117 * t337 - t147 * t78 - t183 * t64, t125 * t147 - t93, t35 * t114 - t340 * t117 + t16 * t125 + t147 * t452 + t6 * t183 - t22 * t337 + t54 * t78 + t66 * t64, t35 * t116 + t117 * t339 - t17 * t125 + t22 * t129 - t147 * t318 - t5 * t183 + t54 * t79 + t66 * t63, t20 * t95 + t34 * t89, -t20 * t94 - t21 * t95 - t33 * t89 - t34 * t87, t113 * t34 - t20 * t337 + t64 * t95 + t78 * t89, -t113 * t33 + t21 * t337 - t64 * t94 - t78 * t87, t113 * t78 - t337 * t64 (-qJD(6) * t343 + t13 * t277 - t273 * t7) * t113 + t342 * t64 - t2 * t337 - t344 * t78 + t8 * t87 + t18 * t21 + t4 * t94 + t14 * t33 -(qJD(6) * t342 + t13 * t273 + t277 * t7) * t113 - t343 * t64 + t1 * t337 - t10 * t78 + t8 * t89 + t18 * t20 + t4 * t95 + t14 * t34; 0, 0, 0, -t276 * t397, t411 * t425, -t279 * t350, t276 * t350, 0, -pkin(9) * t279 * t382 + qJD(1) * t284 + (pkin(1) * t425 - t332) * t276, -t253 + pkin(1) * t397 + (-pkin(9) * t387 + t258) * t373 + t258 * qJD(2), t151 * t329 - t100, t217 * t149 + t151 * t216 + (-t448 * t117 - t118 * t275 + (-t149 * t448 - t151 * t275) * qJD(3)) * t271, -t117 * t430 - t329 * t218 + (-t151 * t271 + t275 * t409) * t387, -t118 * t430 - t466 * t218 + (t149 * t271 + t409 * t448) * t387 (t372 + t218) * t361, -t325 * t430 - t107 * t216 - t126 * t149 + t457 * t218 + (t218 * t389 + t107 * t407 - t119 * t448 - pkin(2) * t118 + (qJD(2) * t312 + t81) * t387) * t271, t326 * t430 - t107 * t217 - t126 * t151 + t464 * t218 + (pkin(2) * t117 + t119 * t275 + (-pkin(10) * t275 * t218 + t107 * t448) * qJD(3) + (-qJD(2) * t412 + t82) * t387) * t271, -t226 * t117 + t224 * t118 - t70 * t216 - t68 * t217 + t433 * t151 + t434 * t149 + (-t448 * t39 + t275 * t42 + (t275 * t70 + t448 * t68) * qJD(3)) * t271, t42 * t430 - t225 * t118 + t67 * t216 - t433 * t218 - t435 * t149 + (-t67 * t407 + t448 * t44 + (qJD(2) * t226 - t68) * t387) * t271, -t39 * t430 + t225 * t117 + t67 * t217 + t434 * t218 - t435 * t151 + (-t67 * t384 - t275 * t44 + (-qJD(2) * t224 + t70) * t387) * t271, t224 * t39 + t225 * t44 + t226 * t42 + t433 * t68 + t434 * t70 + t435 * t67, -t116 * t416 + t232 * t63, t114 * t416 - t116 * t414 - t232 * t64 + t299 * t63, t116 * t329 - t232 * t117 - t147 * t416 + t424 * t63, -t114 * t329 - t117 * t299 - t147 * t414 - t424 * t64, t147 * t329 - t100, -t338 * t117 + t6 * t424 + t204 * t64 - t22 * t299 + t414 * t54 + t329 * t16 + ((-qJD(5) * t205 - t462) * t278 + (-qJD(5) * t181 - t463) * t274) * t147 + t436 * t114, t436 * t116 + t415 * t117 + t147 * t455 - t329 * t17 + t204 * t63 + t22 * t232 - t416 * t54 - t5 * t424, t199 * t20 + t418 * t89, -t199 * t21 + t20 * t322 - t417 * t89 - t418 * t87, t113 * t418 + t199 * t64 - t20 * t299 + t414 * t89, -t113 * t417 + t21 * t299 + t322 * t64 - t414 * t87, t113 * t414 - t299 * t64 (-t106 * t273 + t120 * t277) * t64 - t2 * t299 + t105 * t21 - t4 * t322 - t414 * t344 + t446 * t87 + t417 * t14 + (t273 * t353 - t277 * t354) * t113 -(t106 * t277 + t120 * t273) * t64 + t1 * t299 + t105 * t20 + t4 * t199 + t446 * t89 + t418 * t14 + (t273 * t354 + t277 * t353) * t113 - t414 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427, -t149 ^ 2 + t450, t283, -t151 * t218 - t410 * t451 - t291, t242, -t107 * t151 + t300, t107 * t149 + t218 * t81 + t326, pkin(3) * t117 - qJ(4) * t118 + (-t70 - t82) * t151 + (t68 + t420) * t149, t149 * t99 - t300 - 0.2e1 * t327 + t441, -t149 * t67 + t151 * t99 + t218 * t420 + 0.2e1 * t238 - t309, -pkin(3) * t42 - qJ(4) * t39 + t420 * t70 - t67 * t99 - t68 * t82, -t116 * t369 + t278 * t63 (-t116 * t399 - t64) * t278 + (t114 * t399 - t63) * t274, t116 * t149 + t317, -t114 * t149 + t304, t147 * t149, qJ(4) * t64 + t16 * t149 + t419 * t114 + (t22 + (t86 + t402) * t147) * t274 + (-t60 * t147 - t453) * t278, qJ(4) * t63 - t17 * t149 + t22 * t278 + (t278 * t402 + t444) * t147 + t419 * t116 + t453 * t274, t277 * t437 + (-t278 * t401 + t347) * t89, t87 * t98 + t89 * t97 + (t273 * t89 + t277 * t87) * t405 + (-t440 - t21 * t277 + (t273 * t87 - t277 * t89) * qJD(6)) * t278, t20 * t274 + t347 * t113 + (t374 - t323) * t278, -t21 * t274 + (t273 * t405 + t97) * t113 + (t324 - t458) * t278, t113 * t370 + t274 * t64, t248 * t438 - t14 * t97 - t27 * t87 + (t273 * t371 + t277 * t432) * t113 + (-t14 * t273 * qJD(5) + t2 - (qJD(5) * t87 + t324) * t449) * t274 + (t14 * t400 - t344 * t151 + t449 * t21 + t4 * t273 + (t273 * t428 - t344) * qJD(5)) * t278, -t248 * t439 - t14 * t98 - t27 * t89 + (-t273 * t432 + t277 * t371) * t113 + (-t14 * t404 - t1 - (qJD(5) * t89 + t323) * t449) * t274 + (-t14 * t401 - t10 * t151 + t449 * t20 + t4 * t277 + (t277 * t428 - t10) * qJD(5)) * t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, t242 - t427, -t218 ^ 2 - t450, -t218 * t70 + t42 + t441, 0, 0, 0, 0, 0, t114 * t218 + t317, t116 * t218 + t304, 0, 0, 0, 0, 0, -t278 * t21 + (t218 * t277 - t273 * t370) * t113 + (t324 + t458) * t274, -t437 + (-t218 * t273 - t277 * t370) * t113 + (t374 + t323) * t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116 * t114, -t114 ^ 2 + t116 ^ 2, t114 * t147 + t63, -t303 + (-qJD(5) + t147) * t116, -t117, -t116 * t54 + t147 * t17 + t6, t114 * t54 + t147 * t16 - t5, t368 * t89 + t440 (t20 - t443) * t277 + (-t21 - t442) * t273, t113 * t368 - t116 * t89 + t439, -t113 ^ 2 * t273 + t116 * t87 + t438, -t113 * t116, -pkin(5) * t21 + t116 * t344 - t17 * t87 + t296 * t273 - t277 * t454, -pkin(5) * t20 + t10 * t116 - t17 * t89 + t273 * t454 + t296 * t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89 * t87, -t87 ^ 2 + t89 ^ 2, t20 + t443, -t21 + t442, t64, t10 * t113 - t14 * t89 + t2, -t113 * t344 + t14 * t87 - t1;];
tauc_reg  = t9;
