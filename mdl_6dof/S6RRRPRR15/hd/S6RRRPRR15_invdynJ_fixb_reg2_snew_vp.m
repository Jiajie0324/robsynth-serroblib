% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 17:28
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR15_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR15_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR15_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR15_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR15_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR15_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 17:21:33
% EndTime: 2019-05-07 17:22:41
% DurationCPUTime: 35.87s
% Computational Cost: add. (204562->762), mult. (513394->1160), div. (0->0), fcn. (430702->14), ass. (0->480)
t380 = cos(pkin(6));
t372 = qJD(1) * t380 + qJD(2);
t383 = sin(qJ(3));
t384 = sin(qJ(2));
t387 = cos(qJ(3));
t378 = sin(pkin(6));
t500 = qJD(1) * t378;
t379 = cos(pkin(7));
t388 = cos(qJ(2));
t506 = t379 * t388;
t377 = sin(pkin(7));
t513 = t377 * t383;
t332 = (t383 * t506 + t384 * t387) * t500 + t372 * t513;
t478 = qJD(2) * t500;
t492 = qJDD(1) * t378;
t355 = t384 * t492 + t388 * t478;
t356 = -t384 * t478 + t388 * t492;
t371 = qJDD(1) * t380 + qJDD(2);
t507 = t379 * t387;
t512 = t377 * t387;
t468 = t355 * t383 - t356 * t507 - t371 * t512;
t479 = t388 * t500;
t348 = -t379 * t372 + t377 * t479 - qJD(3);
t497 = qJD(3) - t348;
t248 = t332 * t497 + t468;
t346 = t348 ^ 2;
t470 = t379 * t479;
t499 = qJD(1) * t384;
t480 = t378 * t499;
t330 = -t372 * t512 + t383 * t480 - t387 * t470;
t563 = t330 ^ 2;
t292 = -t346 - t563;
t463 = t356 * t377 - t379 * t371 - qJDD(3);
t518 = t332 * t330;
t408 = t463 + t518;
t579 = t387 * t408;
t431 = t292 * t383 - t579;
t187 = t248 * t379 + t377 * t431;
t580 = t383 * t408;
t234 = t292 * t387 + t580;
t189 = -t248 * t377 + t379 * t431;
t537 = t189 * t384;
t626 = -pkin(1) * t187 + pkin(9) * (t234 * t388 - t537);
t625 = pkin(1) * (t189 * t388 + t234 * t384);
t515 = t371 * t377;
t401 = t383 * (t356 * t379 + t515) + t355 * t387;
t398 = -t330 * t497 + t401;
t562 = t332 ^ 2;
t571 = -t562 - t346;
t409 = t463 - t518;
t578 = t409 * t383;
t435 = t387 * t571 + t578;
t193 = t377 * t435 + t379 * t398;
t577 = t409 * t387;
t241 = t383 * t571 - t577;
t195 = -t377 * t398 + t379 * t435;
t536 = t195 * t384;
t623 = -pkin(1) * t193 + pkin(9) * (-t241 * t388 - t536);
t621 = pkin(1) * (t195 * t388 - t241 * t384);
t620 = pkin(2) * t187;
t619 = pkin(2) * t189;
t496 = qJD(3) + t348;
t249 = t332 * t496 + t468;
t311 = t346 - t563;
t437 = t311 * t383 + t577;
t203 = t249 * t379 + t377 * t437;
t616 = t380 * t203 + t378 * (t388 * (-t249 * t377 + t379 * t437) + t384 * (t311 * t387 - t578));
t614 = pkin(2) * t193;
t613 = pkin(2) * t195;
t610 = pkin(10) * t234;
t314 = -t562 + t346;
t432 = t314 * t387 - t580;
t607 = t377 * t432;
t606 = t379 * t432;
t604 = pkin(10) * t241;
t601 = t384 * (t314 * t383 + t579);
t531 = t248 * t383;
t530 = t248 * t387;
t595 = t249 * t383;
t594 = t249 * t387;
t569 = t562 - t563;
t589 = t377 * t569;
t570 = -t562 - t563;
t588 = t377 * t570;
t587 = t379 * t569;
t586 = t379 * t570;
t381 = sin(qJ(6));
t382 = sin(qJ(5));
t386 = cos(qJ(5));
t309 = t330 * t382 - t348 * t386;
t324 = qJD(5) + t332;
t385 = cos(qJ(6));
t272 = t309 * t381 - t385 * t324;
t274 = t309 * t385 + t324 * t381;
t231 = t274 * t272;
t295 = qJD(3) * t332 + t468;
t475 = -t386 * t295 - t382 * t463;
t237 = -qJD(5) * t309 - t475;
t236 = qJDD(6) - t237;
t576 = -t231 + t236;
t585 = t381 * t576;
t307 = -t386 * t330 - t348 * t382;
t264 = t309 * t307;
t296 = -qJD(3) * t330 + t401;
t293 = qJDD(5) + t296;
t575 = -t264 + t293;
t584 = t382 * t575;
t583 = t385 * t576;
t582 = t386 * t575;
t262 = pkin(5) * t307 - pkin(12) * t309;
t564 = t324 ^ 2;
t553 = pkin(10) * t377;
t558 = pkin(2) * t388;
t426 = -t384 * t553 - t558;
t351 = t426 * t500;
t412 = t372 * t377 + t470;
t389 = qJD(1) ^ 2;
t559 = sin(qJ(1));
t560 = cos(qJ(1));
t421 = g(1) * t560 + g(2) * t559;
t352 = -t389 * pkin(1) + pkin(9) * t492 - t421;
t420 = g(1) * t559 - g(2) * t560;
t509 = t378 * t389;
t399 = qJDD(1) * pkin(1) + pkin(9) * t509 + t420;
t397 = t380 * t399;
t472 = -t384 * t352 + t388 * t397;
t260 = t371 * pkin(2) + (-g(3) * t388 - t351 * t499) * t378 + (-t355 * t379 + t372 * t412) * pkin(10) + t472;
t359 = t372 * t480;
t338 = t356 + t359;
t370 = t372 ^ 2;
t511 = t378 * t384;
t396 = -g(3) * t511 + t384 * t397;
t261 = -pkin(2) * t370 + (t351 * t500 + t352) * t388 + (t338 * t379 + t515) * pkin(10) + t396;
t340 = t380 * g(3) + t378 * t399;
t391 = -t355 * t553 - t356 * pkin(2) + (-pkin(10) * t379 * t480 + pkin(2) * t372) * t480 - t412 * pkin(10) * t479 - t340;
t390 = t377 * t391;
t179 = -t260 * t507 + t261 * t383 - t387 * t390;
t299 = pkin(3) * t330 - qJ(4) * t332;
t166 = pkin(3) * t463 - t346 * qJ(4) + t299 * t332 + qJDD(4) + t179;
t565 = pkin(11) * t408 + t166;
t316 = t330 * t348;
t574 = -t316 + t296;
t393 = pkin(4) * t574 + t565;
t310 = pkin(4) * t332 + pkin(11) * t348;
t255 = t316 + t296;
t221 = t260 * t377 - t379 * t391;
t573 = t221 + (pkin(3) * t348 + (2 * qJD(4))) * t332;
t400 = -qJ(4) * t255 - t573;
t561 = pkin(3) + pkin(11);
t120 = -pkin(4) * t563 + t295 * t561 - t310 * t332 + t400;
t503 = t386 * t120;
t81 = t382 * t393 + t503;
t70 = -pkin(5) * t564 + t293 * pkin(12) - t307 * t262 + t81;
t180 = t387 * t261 + (t379 * t260 + t390) * t383;
t149 = -t346 * pkin(3) - qJ(4) * t463 - 0.2e1 * qJD(4) * t348 - t330 * t299 + t180;
t122 = -t295 * pkin(4) - pkin(11) * t563 - t348 * t310 + t149;
t430 = t295 * t382 - t386 * t463;
t238 = -qJD(5) * t307 + t430;
t283 = t324 * t307;
t217 = t238 - t283;
t89 = -t217 * pkin(12) + (t309 * t324 - t237) * pkin(5) + t122;
t46 = t381 * t70 - t385 * t89;
t47 = t381 * t89 + t385 * t70;
t31 = t381 * t46 + t385 * t47;
t374 = t378 ^ 2;
t581 = t374 * (qJD(1) * t372 - t380 * t389);
t510 = t378 * t388;
t317 = g(3) * t510 - t472;
t318 = t388 * t352 + t396;
t572 = t384 * t317 + t388 * t318;
t304 = qJD(6) + t307;
t476 = t238 * t381 - t385 * t293;
t160 = (qJD(6) - t304) * t274 + t476;
t429 = t330 * t383 + t332 * t387;
t402 = t348 * t377 * t429 - t379 * t463;
t517 = t332 * t383;
t519 = t330 * t387;
t568 = t380 * t402 + (t384 * (-t517 + t519) + t429 * t506) * t378 * t348 + t377 * t463 * t510;
t403 = -t295 * t512 + (-t332 * t379 - t348 * t513) * t330;
t508 = t379 * t383;
t567 = t380 * t403 + (t384 * (t295 * t383 - t348 * t519) + t388 * (-t295 * t507 + (t332 * t377 - t348 * t508) * t330)) * t378;
t404 = t296 * t513 + (t330 * t379 - t348 * t512) * t332;
t566 = t380 * t404 + (t384 * (t387 * t296 + t348 * t517) + t388 * (t296 * t508 + (-t330 * t377 - t348 * t507) * t332)) * t378;
t268 = t272 ^ 2;
t269 = t274 ^ 2;
t303 = t304 ^ 2;
t305 = t307 ^ 2;
t306 = t309 ^ 2;
t557 = pkin(3) * t295;
t556 = pkin(3) * t383;
t555 = pkin(3) * t387;
t554 = pkin(9) * t378;
t80 = t120 * t382 - t386 * t393;
t69 = -t293 * pkin(5) - pkin(12) * t564 + t262 * t309 + t80;
t552 = -pkin(5) * t69 + pkin(12) * t31;
t21 = t31 * t386 + t382 * t69;
t20 = t31 * t382 - t386 * t69;
t30 = t381 * t47 - t385 * t46;
t464 = -t20 * t387 + t30 * t383;
t10 = -t21 * t377 + t379 * t464;
t551 = t10 * t384;
t48 = t382 * t81 - t386 * t80;
t460 = t122 * t383 - t387 * t48;
t49 = t382 * t80 + t386 * t81;
t26 = -t377 * t49 + t379 * t460;
t550 = t26 * t384;
t66 = t381 * t69;
t443 = -t238 * t385 - t293 * t381;
t178 = -qJD(6) * t272 - t443;
t244 = t304 * t272;
t164 = t178 + t244;
t108 = -t160 * t381 - t164 * t385;
t110 = -t160 * t385 + t164 * t381;
t206 = t268 + t269;
t83 = t110 * t382 + t206 * t386;
t461 = t108 * t383 - t387 * t83;
t84 = t110 * t386 - t206 * t382;
t39 = -t377 * t84 + t379 * t461;
t549 = t384 * t39;
t220 = -t303 - t268;
t136 = t220 * t381 + t583;
t137 = t220 * t385 - t585;
t493 = qJD(6) + t304;
t161 = -t274 * t493 - t476;
t93 = t137 * t382 + t161 * t386;
t459 = t136 * t383 - t387 * t93;
t94 = t137 * t386 - t161 * t382;
t51 = -t377 * t94 + t379 * t459;
t548 = t384 * t51;
t222 = -t269 - t303;
t175 = t231 + t236;
t539 = t175 * t381;
t142 = t222 * t385 - t539;
t538 = t175 * t385;
t143 = -t222 * t381 - t538;
t165 = t272 * t493 + t443;
t96 = t143 * t382 + t165 * t386;
t458 = t142 * t383 - t387 * t96;
t97 = t143 * t386 - t165 * t382;
t53 = -t377 * t97 + t379 * t458;
t547 = t384 * t53;
t218 = t238 + t283;
t407 = (-qJD(5) + t324) * t309 - t475;
t148 = t218 * t382 + t386 * t407;
t146 = -t218 * t386 + t382 * t407;
t239 = -t305 - t306;
t452 = -t146 * t387 + t239 * t383;
t87 = -t148 * t377 + t379 * t452;
t546 = t384 * t87;
t67 = t385 * t69;
t245 = -t564 - t305;
t182 = t245 * t386 - t584;
t181 = t245 * t382 + t582;
t495 = qJD(5) + t324;
t214 = t309 * t495 + t475;
t448 = -t181 * t387 + t214 * t383;
t112 = -t182 * t377 + t379 * t448;
t545 = t112 * t384;
t259 = -t306 - t564;
t228 = t264 + t293;
t532 = t228 * t386;
t186 = -t259 * t382 - t532;
t533 = t228 * t382;
t185 = t259 * t386 - t533;
t219 = -t307 * t495 + t430;
t447 = -t185 * t387 + t219 * t383;
t116 = -t186 * t377 + t379 * t447;
t544 = t116 * t384;
t543 = t122 * t382;
t542 = t122 * t386;
t252 = -t330 * t496 + t401;
t440 = -t252 * t387 - t595;
t172 = t379 * t440 - t588;
t541 = t172 * t384;
t441 = -t387 * t574 - t595;
t173 = t379 * t441 - t588;
t540 = t173 * t384;
t535 = t221 * t383;
t534 = t221 * t387;
t523 = t304 * t381;
t522 = t304 * t385;
t521 = t324 * t382;
t520 = t324 * t386;
t514 = t374 * t389;
t366 = t388 * t384 * t514;
t353 = t366 + t371;
t504 = t384 * t353;
t354 = -t366 + t371;
t501 = t388 * t354;
t491 = pkin(5) * t165 + pkin(12) * t143 + t66;
t490 = pkin(5) * t161 + pkin(12) * t137 - t67;
t489 = t382 * t231;
t488 = t386 * t231;
t487 = t383 * t264;
t486 = t387 * t264;
t375 = t384 ^ 2;
t484 = t375 * t514;
t376 = t388 ^ 2;
t483 = t376 * t514;
t360 = t372 * t479;
t482 = t360 + t355;
t481 = pkin(5) * t386 + pkin(4);
t477 = pkin(5) * t382 + qJ(4);
t471 = pkin(5) * t206 + pkin(12) * t110 + t31;
t467 = -qJ(4) * t383 - t555;
t466 = t534 + t610;
t465 = -t535 - t604;
t163 = t178 - t244;
t107 = t161 * t381 + t163 * t385;
t109 = t161 * t385 - t163 * t381;
t230 = t269 - t268;
t90 = -t109 * t382 + t230 * t386;
t462 = t107 * t383 + t387 * t90;
t243 = -t269 + t303;
t152 = -t243 * t381 + t583;
t100 = -t152 * t382 + t164 * t386;
t150 = t243 * t385 + t585;
t457 = t100 * t387 + t150 * t383;
t242 = t268 - t303;
t153 = t242 * t385 - t539;
t101 = -t153 * t382 - t160 * t386;
t151 = t242 * t381 + t538;
t456 = t101 * t387 + t151 * t383;
t177 = -qJD(6) * t274 - t476;
t155 = -t177 * t381 + t272 * t522;
t123 = -t155 * t382 - t488;
t154 = t177 * t385 + t272 * t523;
t455 = t123 * t387 + t154 * t383;
t157 = t178 * t385 - t274 * t523;
t124 = -t157 * t382 + t488;
t156 = t178 * t381 + t274 * t522;
t454 = t124 * t387 + t156 * t383;
t145 = t214 * t382 - t217 * t386;
t263 = -t305 + t306;
t453 = t145 * t387 + t263 * t383;
t451 = t149 * t383 - t166 * t387;
t192 = (-t272 * t385 + t274 * t381) * t304;
t167 = -t192 * t382 + t236 * t386;
t191 = (-t272 * t381 - t274 * t385) * t304;
t450 = t167 * t387 + t191 * t383;
t449 = t179 * t387 - t180 * t383;
t121 = t179 * t383 + t180 * t387;
t282 = -t306 + t564;
t197 = -t282 * t386 - t584;
t446 = t197 * t387 + t218 * t383;
t281 = t305 - t564;
t198 = -t281 * t382 - t532;
t445 = t198 * t387 + t383 * t407;
t232 = (t307 * t382 + t309 * t386) * t324;
t444 = t232 * t387 + t293 * t383;
t442 = t255 * t387 - t531;
t439 = t387 * t398 - t531;
t209 = -t237 * t386 - t307 * t521;
t425 = t209 * t387 - t487;
t211 = -t238 * t382 - t309 * t520;
t424 = t211 * t387 + t487;
t11 = t20 * t383 + t30 * t387;
t4 = -t561 * t21 + (pkin(12) * t382 + t481) * t30;
t8 = pkin(4) * t20 - qJ(4) * t21 + t552;
t422 = pkin(10) * t11 + t383 * t8 + t387 * t4;
t23 = -pkin(12) * t108 - t30;
t13 = t108 * t481 - t23 * t382 - t561 * t84;
t15 = pkin(4) * t83 - qJ(4) * t84 + t471;
t57 = t108 * t387 + t383 * t83;
t419 = pkin(10) * t57 + t13 * t387 + t15 * t383;
t41 = -pkin(5) * t136 + t46;
t56 = -pkin(12) * t136 + t66;
t17 = pkin(4) * t136 - t382 * t56 - t386 * t41 - t561 * t94;
t33 = pkin(4) * t93 - qJ(4) * t94 + t490;
t71 = t136 * t387 + t383 * t93;
t418 = pkin(10) * t71 + t17 * t387 + t33 * t383;
t42 = -pkin(5) * t142 + t47;
t58 = -pkin(12) * t142 + t67;
t19 = pkin(4) * t142 - t382 * t58 - t386 * t42 - t561 * t97;
t34 = pkin(4) * t96 - qJ(4) * t97 + t491;
t73 = t142 * t387 + t383 * t96;
t417 = pkin(10) * t73 + t19 * t387 + t34 * t383;
t28 = pkin(4) * t122 - t49 * t561;
t32 = pkin(4) * t48 - qJ(4) * t49;
t40 = t122 * t387 + t383 * t48;
t416 = pkin(10) * t40 + t28 * t387 + t32 * t383;
t127 = t146 * t383 + t239 * t387;
t37 = pkin(4) * t239 - t148 * t561 - t49;
t99 = pkin(4) * t146 - qJ(4) * t148;
t415 = pkin(10) * t127 + t37 * t387 + t383 * t99;
t138 = t181 * t383 + t214 * t387;
t59 = pkin(4) * t181 - qJ(4) * t182 - t80;
t75 = pkin(4) * t214 - t182 * t561 + t542;
t414 = pkin(10) * t138 + t383 * t59 + t387 * t75;
t140 = t185 * t383 + t219 * t387;
t61 = -qJ(4) * t186 - t503 - t382 * t565 + (-t382 * t574 + t185) * pkin(4);
t77 = pkin(4) * t219 - t186 * t561 - t543;
t413 = pkin(10) * t140 + t383 * t61 + t387 * t77;
t134 = -pkin(3) * t570 + t149;
t139 = -qJ(4) * t570 + t166;
t207 = t252 * t383 - t594;
t411 = pkin(10) * t207 + t134 * t387 + t139 * t383;
t208 = t383 * t574 - t594;
t410 = pkin(10) * t208 + t121;
t130 = -t557 + (t398 + t255) * qJ(4) + t573;
t406 = t130 * t383 + t398 * t555 + t604;
t131 = (t248 + t295) * pkin(3) + t400;
t405 = qJ(4) * t531 + t131 * t387 - t610;
t358 = (t375 - t376) * t514;
t357 = -t370 - t483;
t350 = -t484 - t370;
t339 = t356 - t359;
t337 = -t360 + t355;
t233 = (-t307 * t386 + t309 * t382) * t324;
t213 = -pkin(3) * t252 - qJ(4) * t249;
t212 = t238 * t386 - t309 * t521;
t210 = -t237 * t382 + t307 * t520;
t202 = t379 * t574 + t607;
t201 = -t252 * t379 - t607;
t200 = t281 * t386 - t533;
t199 = -t282 * t382 + t582;
t184 = t377 * t439 + t587;
t183 = t377 * t442 + t587;
t170 = t377 * t440 + t586;
t169 = t233 * t379 + t377 * t444;
t168 = t192 * t386 + t236 * t382;
t147 = -t214 * t386 - t217 * t382;
t144 = t400 + t557;
t133 = t212 * t379 + t377 * t424;
t132 = t210 * t379 + t377 * t425;
t129 = pkin(3) * t408 - qJ(4) * t292 + t166;
t128 = -pkin(3) * t571 - qJ(4) * t409 + t149;
t126 = t157 * t386 + t489;
t125 = t155 * t386 - t489;
t118 = t199 * t379 + t377 * t446;
t117 = t200 * t379 + t377 * t445;
t115 = t186 * t379 + t377 * t447;
t114 = t221 * t377 - t379 * t449;
t113 = -t221 * t379 - t377 * t449;
t111 = t182 * t379 + t377 * t448;
t105 = -pkin(3) * t166 + qJ(4) * t149;
t104 = t149 * t387 + t166 * t383;
t103 = t153 * t386 - t160 * t382;
t102 = t152 * t386 + t164 * t382;
t98 = -t180 * t379 + t377 * t465 + t613;
t95 = -t179 * t379 + t377 * t466 + t619;
t92 = t147 * t379 + t377 * t453;
t91 = t109 * t386 + t230 * t382;
t86 = t148 * t379 + t377 * t452;
t85 = t168 * t379 + t377 * t450;
t82 = pkin(2) * t173 + t377 * t410;
t79 = -t144 * t377 + t379 * t451;
t78 = t144 * t379 + t377 * t451;
t76 = qJ(4) * t219 - t185 * t561 + t542;
t74 = qJ(4) * t214 - t181 * t561 + t543;
t72 = pkin(2) * t114 + t121 * t553;
t65 = t126 * t379 + t377 * t454;
t64 = t125 * t379 + t377 * t455;
t63 = t128 * t379 + t377 * t406 - t613;
t62 = t129 * t379 + t377 * t405 - t619;
t60 = pkin(2) * t172 + t213 * t379 + t377 * t411;
t55 = t103 * t379 + t377 * t456;
t54 = t102 * t379 + t377 * t457;
t52 = t377 * t458 + t379 * t97;
t50 = t377 * t459 + t379 * t94;
t43 = t377 * t462 + t379 * t91;
t38 = t377 * t461 + t379 * t84;
t36 = qJ(4) * t239 - t146 * t561 - t48;
t35 = pkin(2) * t79 + t105 * t379 + (pkin(10) * t104 + t144 * t467) * t377;
t27 = qJ(4) * t122 - t48 * t561;
t25 = t377 * t460 + t379 * t49;
t24 = pkin(2) * t116 + t377 * t413 + t379 * t76;
t22 = pkin(2) * t112 + t377 * t414 + t379 * t74;
t18 = qJ(4) * t142 - t382 * t42 + t386 * t58 - t561 * t96;
t16 = qJ(4) * t136 - t382 * t41 + t386 * t56 - t561 * t93;
t14 = pkin(2) * t87 + t36 * t379 + t377 * t415;
t12 = t108 * t477 + t23 * t386 - t561 * t83;
t9 = t21 * t379 + t377 * t464;
t7 = pkin(2) * t53 + t18 * t379 + t377 * t417;
t6 = pkin(2) * t51 + t16 * t379 + t377 * t418;
t5 = pkin(2) * t26 + t27 * t379 + t377 * t416;
t3 = -t561 * t20 + (-pkin(12) * t386 + t477) * t30;
t2 = pkin(2) * t39 + t12 * t379 + t377 * t419;
t1 = pkin(2) * t10 + t3 * t379 + t377 * t422;
t29 = [0, 0, 0, 0, 0, qJDD(1), t420, t421, 0, 0, (t355 * t378 + t388 * t581) * t384, t380 * t358 + (t384 * t339 + t388 * t482) * t378, t380 * t337 + (t504 + t388 * (t370 - t484)) * t378, (t356 * t378 - t384 * t581) * t388, t380 * t338 + (t384 * (-t370 + t483) + t501) * t378, t380 * t371, (-t317 + pkin(1) * (t353 * t388 + t357 * t384)) * t380 + (t388 * t340 + pkin(1) * t339 + pkin(9) * (t357 * t388 - t504)) * t378, -t340 * t511 - t380 * t318 + pkin(1) * (-t378 * t482 + (t350 * t388 - t354 * t384) * t380) + (-t350 * t384 - t501) * t554, pkin(1) * ((-t337 * t388 + t338 * t384) * t380 - (-t375 - t376) * t374 * t509) + (t337 * t384 + t338 * t388) * t554 + t572 * t378, pkin(1) * (t340 * t378 + (-t317 * t388 + t318 * t384) * t380) + t572 * t554, t566, t380 * t183 + (t384 * (-t255 * t383 - t530) + t388 * (t379 * t442 - t589)) * t378, t380 * t202 + (-t601 + t388 * (-t377 * t574 + t606)) * t378, t567, -t616, t568, (t95 + t625) * t380 + (t384 * (-t535 + (-t187 * t377 - t189 * t379) * pkin(10)) + t388 * (t179 * t377 + t379 * t466 - t620) + t626) * t378, (t98 + t621) * t380 + (t384 * (-t534 + (-t193 * t377 - t195 * t379) * pkin(10)) + t388 * (t180 * t377 + t379 * t465 - t614) + t623) * t378, (t82 + pkin(1) * (t173 * t388 + t208 * t384)) * t380 + (t384 * t449 + pkin(9) * (t208 * t388 - t540) + (-pkin(1) + t426) * (t377 * t441 + t586) + (-pkin(10) * t540 + t388 * t410) * t379) * t378, (t72 + pkin(1) * (t114 * t388 + t121 * t384)) * t380 + (pkin(9) * (-t114 * t384 + t121 * t388) + (-pkin(1) - t558) * t113 + (t384 * (-t113 * t377 - t114 * t379) + t121 * t506) * pkin(10)) * t378, t568, t380 * t201 + (t601 + t388 * (t252 * t377 - t606)) * t378, t616, t566, t380 * t184 + (t384 * (-t383 * t398 - t530) + t388 * (t379 * t439 - t589)) * t378, t567, (t60 + pkin(1) * (t172 * t388 + t207 * t384)) * t380 + (t384 * (-t134 * t383 + t139 * t387 - t170 * t553) + t388 * (-pkin(2) * t170 - t213 * t377) - pkin(1) * t170 + pkin(9) * (t207 * t388 - t541) + (-pkin(10) * t541 + t388 * t411) * t379) * t378, (t62 - t625) * t380 + (t384 * (qJ(4) * t530 - t131 * t383 + t187 * t553) + t388 * (-t129 * t377 + t620) + (pkin(10) * t537 + t388 * t405) * t379 - t626) * t378, (t63 - t621) * t380 + (t384 * (t130 * t387 + t193 * t553 - t398 * t556) + t388 * (-t128 * t377 + t614) + (pkin(10) * t536 + t388 * t406) * t379 - t623) * t378, (t35 + pkin(1) * (t104 * t384 + t388 * t79)) * t380 + (t388 * (-pkin(2) * t78 - t105 * t377) - pkin(1) * t78 + pkin(9) * (t104 * t388 - t384 * t79) + (t384 * (-t377 * t78 - t379 * t79) + t104 * t506) * pkin(10) + (t384 * (-qJ(4) * t387 + t556) + t467 * t506) * t144) * t378, t380 * t133 + (t384 * (-t211 * t383 + t486) + t388 * (-t212 * t377 + t379 * t424)) * t378, t380 * t92 + (t384 * (-t145 * t383 + t263 * t387) + t388 * (-t147 * t377 + t379 * t453)) * t378, t380 * t118 + (t384 * (-t197 * t383 + t218 * t387) + t388 * (-t199 * t377 + t379 * t446)) * t378, t380 * t132 + (t384 * (-t209 * t383 - t486) + t388 * (-t210 * t377 + t379 * t425)) * t378, t380 * t117 + (t384 * (-t198 * t383 + t387 * t407) + t388 * (-t200 * t377 + t379 * t445)) * t378, t380 * t169 + (t384 * (-t232 * t383 + t293 * t387) + t388 * (-t233 * t377 + t379 * t444)) * t378, (t22 + pkin(1) * (t112 * t388 + t138 * t384)) * t380 + (t384 * (-t111 * t553 - t383 * t75 + t387 * t59) + t388 * (-pkin(2) * t111 - t377 * t74) - pkin(1) * t111 + pkin(9) * (t138 * t388 - t545) + (-pkin(10) * t545 + t388 * t414) * t379) * t378, (t24 + pkin(1) * (t116 * t388 + t140 * t384)) * t380 + (t384 * (-t115 * t553 - t383 * t77 + t387 * t61) + t388 * (-pkin(2) * t115 - t377 * t76) - pkin(1) * t115 + pkin(9) * (t140 * t388 - t544) + (-pkin(10) * t544 + t388 * t413) * t379) * t378, (t14 + pkin(1) * (t127 * t384 + t388 * t87)) * t380 + (t384 * (-t37 * t383 + t387 * t99 - t553 * t86) + t388 * (-pkin(2) * t86 - t36 * t377) - pkin(1) * t86 + pkin(9) * (t127 * t388 - t546) + (-pkin(10) * t546 + t388 * t415) * t379) * t378, (t5 + pkin(1) * (t26 * t388 + t384 * t40)) * t380 + (t384 * (-t25 * t553 - t28 * t383 + t32 * t387) + t388 * (-pkin(2) * t25 - t27 * t377) - pkin(1) * t25 + pkin(9) * (t388 * t40 - t550) + (-pkin(10) * t550 + t388 * t416) * t379) * t378, t380 * t65 + (t384 * (-t124 * t383 + t156 * t387) + t388 * (-t126 * t377 + t379 * t454)) * t378, t380 * t43 + (t384 * (t107 * t387 - t383 * t90) + t388 * (-t377 * t91 + t379 * t462)) * t378, t380 * t54 + (t384 * (-t100 * t383 + t150 * t387) + t388 * (-t102 * t377 + t379 * t457)) * t378, t380 * t64 + (t384 * (-t123 * t383 + t154 * t387) + t388 * (-t125 * t377 + t379 * t455)) * t378, t380 * t55 + (t384 * (-t101 * t383 + t151 * t387) + t388 * (-t103 * t377 + t379 * t456)) * t378, t380 * t85 + (t384 * (-t167 * t383 + t191 * t387) + t388 * (-t168 * t377 + t379 * t450)) * t378, (t6 + pkin(1) * (t384 * t71 + t388 * t51)) * t380 + (t384 * (-t17 * t383 + t33 * t387 - t50 * t553) + t388 * (-pkin(2) * t50 - t16 * t377) - pkin(1) * t50 + pkin(9) * (t388 * t71 - t548) + (-pkin(10) * t548 + t388 * t418) * t379) * t378, (t7 + pkin(1) * (t384 * t73 + t388 * t53)) * t380 + (t384 * (-t19 * t383 + t34 * t387 - t52 * t553) + t388 * (-pkin(2) * t52 - t18 * t377) - pkin(1) * t52 + pkin(9) * (t388 * t73 - t547) + (-pkin(10) * t547 + t388 * t417) * t379) * t378, (t2 + pkin(1) * (t384 * t57 + t388 * t39)) * t380 + (t384 * (-t13 * t383 + t15 * t387 - t38 * t553) + t388 * (-pkin(2) * t38 - t12 * t377) - pkin(1) * t38 + pkin(9) * (t388 * t57 - t549) + (-pkin(10) * t549 + t388 * t419) * t379) * t378, (t1 + pkin(1) * (t10 * t388 + t11 * t384)) * t380 + (t384 * (-t383 * t4 + t387 * t8 - t553 * t9) + t388 * (-pkin(2) * t9 - t3 * t377) - pkin(1) * t9 + pkin(9) * (t11 * t388 - t551) + (-pkin(10) * t551 + t388 * t422) * t379) * t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, t358, t337, t366, t338, t371, -t317, -t318, 0, 0, t404, t183, t202, t403, -t203, t402, t95, t98, t82, t72, t402, t201, t203, t404, t184, t403, t60, t62, t63, t35, t133, t92, t118, t132, t117, t169, t22, t24, t14, t5, t65, t43, t54, t64, t55, t85, t6, t7, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, t569, t574, -t518, -t249, -t463, -t179, -t180, 0, 0, -t463, -t252, t249, t518, t569, -t518, t213, t129, t128, t105, t212, t147, t199, t210, t200, t233, t74, t76, t36, t27, t126, t91, t102, t125, t103, t168, t16, t18, t12, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, -t408, t571, t166, 0, 0, 0, 0, 0, 0, t181, t185, t146, t48, 0, 0, 0, 0, 0, 0, t93, t96, t83, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264, t263, t218, -t264, t407, t293, -t80, -t81, 0, 0, t156, t107, t150, t154, t151, t191, t490, t491, t471, t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t230, t164, -t231, -t160, t236, -t46, -t47, 0, 0;];
tauJ_reg  = t29;
