% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 13:24
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRPRR9_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR9_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR9_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR9_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR9_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR9_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 13:15:55
% EndTime: 2019-05-07 13:19:11
% DurationCPUTime: 182.39s
% Computational Cost: add. (2143582->1262), mult. (5632731->2114), div. (0->0), fcn. (4817581->16), ass. (0->929)
t1435 = sin(qJ(6));
t1434 = cos(pkin(6));
t1421 = qJD(1) * t1434 + qJD(2);
t1437 = sin(qJ(3));
t1442 = cos(qJ(3));
t1433 = cos(pkin(7));
t1431 = sin(pkin(6));
t1443 = cos(qJ(2));
t1619 = t1431 * t1443;
t1602 = qJD(1) * t1619;
t1589 = t1433 * t1602;
t1438 = sin(qJ(2));
t1620 = t1431 * t1438;
t1603 = qJD(1) * t1620;
t1430 = sin(pkin(7));
t1621 = t1430 * t1442;
t1370 = -t1421 * t1621 + t1437 * t1603 - t1442 * t1589;
t1617 = t1433 * t1437;
t1622 = t1430 * t1437;
t1663 = qJD(1) * t1431;
t1372 = t1421 * t1622 + (t1438 * t1442 + t1443 * t1617) * t1663;
t1429 = sin(pkin(13));
t1432 = cos(pkin(13));
t1346 = -t1429 * t1370 + t1432 * t1372;
t1618 = t1433 * t1421;
t1391 = t1430 * t1602 - qJD(3) - t1618;
t1436 = sin(qJ(5));
t1441 = cos(qJ(5));
t1313 = t1346 * t1441 - t1391 * t1436;
t1344 = t1432 * t1370 + t1372 * t1429;
t1337 = qJD(5) + t1344;
t1440 = cos(qJ(6));
t1263 = t1313 * t1435 - t1440 * t1337;
t1265 = t1313 * t1440 + t1337 * t1435;
t1190 = t1265 * t1263;
t1608 = qJDD(1) * t1438;
t1662 = qJD(1) * t1443;
t1397 = (qJD(2) * t1662 + t1608) * t1431;
t1609 = qJDD(1) * t1431;
t1398 = -qJD(2) * t1603 + t1443 * t1609;
t1420 = qJDD(1) * t1434 + qJDD(2);
t1616 = t1433 * t1442;
t1584 = t1397 * t1437 - t1398 * t1616 - t1420 * t1621;
t1325 = -qJD(3) * t1372 - t1584;
t1493 = t1398 * t1433 + t1420 * t1430;
t1454 = t1397 * t1442 + t1437 * t1493;
t1326 = -qJD(3) * t1370 + t1454;
t1266 = t1429 * t1325 + t1432 * t1326;
t1579 = t1398 * t1430 - t1433 * t1420 - qJDD(3);
t1593 = t1313 * qJD(5) + t1436 * t1266 + t1441 * t1579;
t1588 = qJDD(6) + t1593;
t1683 = -t1190 + t1588;
t1693 = t1435 * t1683;
t1311 = t1346 * t1436 + t1441 * t1391;
t1247 = t1313 * t1311;
t1590 = -t1432 * t1325 + t1326 * t1429;
t1259 = qJDD(5) + t1590;
t1682 = -t1247 + t1259;
t1692 = t1436 * t1682;
t1691 = t1440 * t1683;
t1690 = t1441 * t1682;
t1639 = t1370 * t1372;
t1459 = -t1579 - t1639;
t1646 = t1313 * t1337;
t1689 = t1593 + t1646;
t1405 = t1421 * t1603;
t1381 = t1398 - t1405;
t1688 = t1381 * t1434;
t1426 = t1431 ^ 2;
t1445 = qJD(1) ^ 2;
t1623 = t1426 * t1445;
t1641 = t1344 * t1346;
t1460 = -t1579 - t1641;
t1687 = t1429 * t1460;
t1686 = t1432 * t1460;
t1685 = t1437 * t1459;
t1684 = t1442 * t1459;
t1202 = -t1311 * qJD(5) + t1441 * t1266 - t1436 * t1579;
t1124 = -t1263 * qJD(6) + t1440 * t1202 + t1435 * t1259;
t1306 = qJD(6) + t1311;
t1214 = t1306 * t1263;
t1090 = -t1214 + t1124;
t1273 = t1337 * t1311;
t1166 = -t1273 + t1202;
t1319 = t1344 * t1391;
t1681 = t1319 + t1266;
t1352 = t1370 * t1391;
t1290 = -t1352 + t1326;
t1406 = t1421 * t1602;
t1378 = t1406 + t1397;
t1469 = t1421 * t1430 + t1589;
t1680 = -t1397 * t1430 - t1469 * t1602;
t1640 = t1346 * t1391;
t1225 = t1590 - t1640;
t1439 = sin(qJ(1));
t1444 = cos(qJ(1));
t1417 = g(1) * t1444 + g(2) * t1439;
t1394 = -pkin(1) * t1445 + pkin(9) * t1609 - t1417;
t1416 = g(1) * t1439 - t1444 * g(2);
t1671 = pkin(9) * t1431;
t1455 = qJDD(1) * pkin(1) + t1445 * t1671 + t1416;
t1453 = t1434 * t1455;
t1356 = -g(3) * t1620 + t1443 * t1394 + t1438 * t1453;
t1419 = t1421 ^ 2;
t1670 = pkin(10) * t1430;
t1676 = pkin(2) * t1443;
t1457 = (-t1438 * t1670 - t1676) * t1663;
t1607 = pkin(10) * t1618;
t1296 = -t1419 * pkin(2) + t1493 * pkin(10) + (t1438 * t1607 + t1443 * t1457) * t1663 + t1356;
t1383 = t1434 * g(3) + t1431 * t1455;
t1451 = -t1398 * pkin(2) - t1383;
t1388 = t1443 * t1453;
t1587 = -g(3) * t1619 + t1388;
t1604 = t1421 * t1663;
t1626 = t1397 * t1433;
t1668 = t1420 * pkin(2);
t1184 = t1442 * t1296 + (t1433 * (t1587 + t1668) + t1430 * t1451 + (t1433 * (t1421 * t1469 - t1626) + t1430 * t1680) * pkin(10) + (t1433 * (t1623 * t1676 - t1394) + t1430 * pkin(2) * t1604) * t1438) * t1437;
t1366 = t1370 ^ 2;
t1585 = -pkin(3) * t1391 - qJ(4) * t1372;
t1139 = -t1366 * pkin(3) + t1325 * qJ(4) + t1391 * t1585 + t1184;
t1669 = pkin(10) * t1433;
t1448 = (pkin(2) * t1421 - t1603 * t1669) * t1603 + t1451 + t1680 * pkin(10);
t1615 = t1438 * t1394;
t1449 = t1668 - t1615 + t1388 + (t1419 * t1430 - t1626) * pkin(10) + (-t1443 * g(3) + (-t1438 * t1457 + t1443 * t1607) * qJD(1)) * t1431;
t1183 = t1296 * t1437 - t1448 * t1621 - t1449 * t1616;
t1450 = pkin(3) * t1459 - t1290 * qJ(4) - t1183;
t1039 = -0.2e1 * qJD(4) * t1344 + t1432 * t1139 + t1429 * t1450;
t1591 = t1202 * t1435 - t1440 * t1259;
t1087 = (qJD(6) - t1306) * t1265 + t1591;
t1260 = t1263 ^ 2;
t1261 = t1265 ^ 2;
t1305 = t1306 ^ 2;
t1308 = t1311 ^ 2;
t1309 = t1313 ^ 2;
t1679 = t1337 ^ 2;
t1338 = t1344 ^ 2;
t1339 = t1346 ^ 2;
t1367 = t1372 ^ 2;
t1678 = t1391 ^ 2;
t1677 = 0.2e1 * qJD(4);
t1675 = pkin(3) * t1430;
t1674 = pkin(3) * t1433;
t1673 = pkin(4) * t1429;
t1672 = pkin(5) * t1436;
t1245 = pkin(5) * t1311 - pkin(12) * t1313;
t1281 = pkin(4) * t1344 - pkin(11) * t1346;
t1011 = -pkin(4) * t1678 - pkin(11) * t1579 - t1281 * t1344 + t1039;
t1235 = t1430 * t1449 - t1433 * t1448;
t1172 = t1325 * pkin(3) + t1366 * qJ(4) - t1372 * t1585 - qJDD(4) + t1235;
t1447 = pkin(4) * t1225 - pkin(11) * t1681 - t1172;
t953 = t1441 * t1011 + t1436 * t1447;
t928 = -pkin(5) * t1679 + pkin(12) * t1259 - t1245 * t1311 + t953;
t1592 = t1139 * t1429 - t1432 * t1450;
t1010 = t1579 * pkin(4) - t1678 * pkin(11) + (t1677 + t1281) * t1346 + t1592;
t959 = pkin(5) * t1689 - t1166 * pkin(12) + t1010;
t870 = t1435 * t959 + t1440 * t928;
t952 = t1011 * t1436 - t1441 * t1447;
t927 = -t1259 * pkin(5) - pkin(12) * t1679 + t1245 * t1313 + t952;
t1667 = t1435 * t927;
t1038 = t1346 * t1677 + t1592;
t954 = -t1038 * t1432 + t1039 * t1429;
t1666 = t1437 * t954;
t1665 = t1440 * t927;
t1664 = t1442 * t954;
t1660 = t1010 * t1436;
t1659 = t1010 * t1441;
t1126 = t1190 + t1588;
t1658 = t1126 * t1435;
t1657 = t1126 * t1440;
t1656 = t1172 * t1429;
t1655 = t1172 * t1432;
t1181 = t1247 + t1259;
t1654 = t1181 * t1436;
t1653 = t1181 * t1441;
t1652 = t1235 * t1437;
t1651 = t1235 * t1442;
t1268 = t1579 - t1641;
t1650 = t1268 * t1429;
t1649 = t1268 * t1432;
t1648 = t1306 * t1435;
t1647 = t1306 * t1440;
t1314 = t1579 - t1639;
t1645 = t1314 * t1437;
t1644 = t1314 * t1442;
t1643 = t1337 * t1436;
t1642 = t1337 * t1441;
t1638 = t1370 * t1442;
t1637 = t1372 * t1437;
t1636 = t1579 * t1430;
t1635 = t1383 * t1438;
t1634 = t1383 * t1443;
t1633 = t1391 * t1429;
t1632 = t1391 * t1432;
t1614 = t1443 * t1445;
t1624 = t1426 * t1438;
t1415 = t1614 * t1624;
t1395 = t1415 + t1420;
t1631 = t1395 * t1438;
t1630 = t1395 * t1443;
t1396 = -t1415 + t1420;
t1629 = t1396 * t1438;
t1628 = t1396 * t1443;
t1625 = t1420 * t1431;
t1613 = qJD(3) - t1391;
t1427 = t1438 ^ 2;
t1428 = t1443 ^ 2;
t1610 = t1427 + t1428;
t1606 = -pkin(4) * t1432 - pkin(3);
t1605 = -pkin(5) * t1441 - pkin(4);
t1601 = t1436 * t1190;
t1600 = t1441 * t1190;
t1599 = t1429 * t1247;
t1598 = t1432 * t1247;
t1597 = t1430 * t1641;
t1596 = t1433 * t1641;
t1595 = t1427 * t1623;
t1594 = t1428 * t1623;
t869 = t1435 * t928 - t1440 * t959;
t881 = t1436 * t952 + t1441 * t953;
t955 = t1038 * t1429 + t1432 * t1039;
t1386 = -t1416 * t1439 - t1444 * t1417;
t1414 = qJDD(1) * t1444 - t1439 * t1445;
t1586 = -pkin(8) * t1414 - g(3) * t1439;
t1393 = -t1595 - t1419;
t1357 = -t1393 * t1438 - t1628;
t1583 = pkin(9) * t1357 - t1635;
t1402 = -t1419 - t1594;
t1361 = t1402 * t1443 - t1631;
t1582 = pkin(9) * t1361 + t1634;
t1324 = -t1678 - t1366;
t1252 = t1324 * t1442 - t1685;
t1581 = pkin(10) * t1252 + t1651;
t1333 = -t1367 - t1678;
t1267 = -t1333 * t1437 + t1644;
t1580 = pkin(10) * t1267 - t1652;
t809 = t1435 * t870 - t1440 * t869;
t810 = t1435 * t869 + t1440 * t870;
t880 = t1436 * t953 - t1441 * t952;
t794 = t1436 * t927 + t1441 * t810;
t750 = t1429 * t794 - t1432 * t809;
t751 = t1429 * t809 + t1432 * t794;
t1578 = t1437 * t751 + t1442 * t750;
t851 = -t1010 * t1432 + t1429 * t881;
t852 = t1010 * t1429 + t1432 * t881;
t1577 = t1437 * t852 + t1442 * t851;
t1156 = t1260 + t1261;
t1091 = -t1214 - t1124;
t995 = -t1087 * t1440 - t1091 * t1435;
t961 = -t1156 * t1436 + t1441 * t995;
t993 = -t1087 * t1435 + t1091 * t1440;
t893 = t1429 * t961 - t1432 * t993;
t894 = t1429 * t993 + t1432 * t961;
t1576 = t1437 * t894 + t1442 * t893;
t1189 = -t1261 + t1260;
t1088 = (-qJD(6) - t1306) * t1265 - t1591;
t994 = t1088 * t1440 - t1090 * t1435;
t973 = -t1189 * t1436 + t1441 * t994;
t992 = -t1088 * t1435 - t1090 * t1440;
t898 = t1429 * t973 + t1432 * t992;
t899 = -t1429 * t992 + t1432 * t973;
t1575 = t1437 * t899 + t1442 * t898;
t1171 = -t1305 - t1260;
t1049 = t1171 * t1435 + t1691;
t1050 = t1171 * t1440 - t1693;
t982 = t1050 * t1441 - t1088 * t1436;
t922 = -t1049 * t1432 + t1429 * t982;
t923 = t1049 * t1429 + t1432 * t982;
t1574 = t1437 * t923 + t1442 * t922;
t1179 = -t1261 - t1305;
t1061 = t1179 * t1440 - t1658;
t1062 = -t1179 * t1435 - t1657;
t985 = t1062 * t1441 + t1090 * t1436;
t930 = -t1061 * t1432 + t1429 * t985;
t931 = t1061 * t1429 + t1432 * t985;
t1573 = t1437 * t931 + t1442 * t930;
t1213 = -t1261 + t1305;
t1083 = -t1213 * t1440 - t1693;
t1085 = -t1213 * t1435 + t1691;
t990 = t1085 * t1441 - t1091 * t1436;
t938 = t1083 * t1432 + t1429 * t990;
t940 = -t1083 * t1429 + t1432 * t990;
t1572 = t1437 * t940 + t1442 * t938;
t1212 = t1260 - t1305;
t1084 = -t1212 * t1435 - t1657;
t1086 = t1212 * t1440 - t1658;
t991 = t1086 * t1441 - t1087 * t1436;
t939 = t1084 * t1432 + t1429 * t991;
t941 = -t1084 * t1429 + t1432 * t991;
t1571 = t1437 * t941 + t1442 * t939;
t1570 = t1437 * t955 + t1664;
t1123 = -qJD(6) * t1265 - t1591;
t1080 = -t1123 * t1435 + t1263 * t1647;
t1031 = t1080 * t1441 - t1601;
t1079 = -t1123 * t1440 - t1263 * t1648;
t968 = t1031 * t1429 + t1079 * t1432;
t970 = t1031 * t1432 - t1079 * t1429;
t1569 = t1437 * t970 + t1442 * t968;
t1082 = t1124 * t1440 - t1265 * t1648;
t1032 = t1082 * t1441 + t1601;
t1081 = -t1124 * t1435 - t1265 * t1647;
t969 = t1032 * t1429 + t1081 * t1432;
t971 = t1032 * t1432 - t1081 * t1429;
t1568 = t1437 * t971 + t1442 * t969;
t793 = t1436 * t810 - t1441 * t927;
t722 = -t1430 * t793 + t1433 * t1578;
t728 = -t1437 * t750 + t1442 * t751;
t1567 = t1438 * t728 + t1443 * t722;
t776 = -t1430 * t880 + t1433 * t1577;
t799 = -t1437 * t851 + t1442 * t852;
t1566 = t1438 * t799 + t1443 * t776;
t960 = t1156 * t1441 + t1436 * t995;
t808 = -t1430 * t960 + t1433 * t1576;
t826 = -t1437 * t893 + t1442 * t894;
t1565 = t1438 * t826 + t1443 * t808;
t972 = t1189 * t1441 + t1436 * t994;
t812 = -t1430 * t972 + t1433 * t1575;
t829 = -t1437 * t898 + t1442 * t899;
t1564 = t1438 * t829 + t1443 * t812;
t981 = t1050 * t1436 + t1088 * t1441;
t828 = -t1430 * t981 + t1433 * t1574;
t854 = -t1437 * t922 + t1442 * t923;
t1563 = t1438 * t854 + t1443 * t828;
t984 = t1062 * t1436 - t1090 * t1441;
t834 = -t1430 * t984 + t1433 * t1573;
t859 = -t1437 * t930 + t1442 * t931;
t1562 = t1438 * t859 + t1443 * t834;
t988 = t1085 * t1436 + t1091 * t1441;
t839 = -t1430 * t988 + t1433 * t1572;
t866 = -t1437 * t938 + t1442 * t940;
t1561 = t1438 * t866 + t1443 * t839;
t989 = t1086 * t1436 + t1087 * t1441;
t840 = -t1430 * t989 + t1433 * t1571;
t867 = -t1437 * t939 + t1442 * t941;
t1560 = t1438 * t867 + t1443 * t840;
t1029 = t1080 * t1436 + t1600;
t864 = -t1029 * t1430 + t1433 * t1569;
t888 = -t1437 * t968 + t1442 * t970;
t1559 = t1438 * t888 + t1443 * t864;
t1030 = t1082 * t1436 - t1600;
t865 = -t1030 * t1430 + t1433 * t1568;
t889 = -t1437 * t969 + t1442 * t971;
t1558 = t1438 * t889 + t1443 * t865;
t872 = t1172 * t1430 + t1433 * t1570;
t882 = t1442 * t955 - t1666;
t1557 = t1438 * t882 + t1443 * t872;
t1141 = (-t1263 * t1440 + t1265 * t1435) * t1306;
t1095 = t1141 * t1436 - t1441 * t1588;
t1096 = t1141 * t1441 + t1436 * t1588;
t1140 = (t1263 * t1435 + t1265 * t1440) * t1306;
t1013 = t1096 * t1429 + t1140 * t1432;
t1014 = t1096 * t1432 - t1140 * t1429;
t1546 = t1013 * t1442 + t1014 * t1437;
t908 = -t1095 * t1430 + t1433 * t1546;
t935 = -t1013 * t1437 + t1014 * t1442;
t1556 = t1438 * t935 + t1443 * t908;
t1165 = -t1593 + t1646;
t1167 = -t1273 - t1202;
t1076 = t1165 * t1436 + t1167 * t1441;
t1078 = t1165 * t1441 - t1167 * t1436;
t1207 = t1308 + t1309;
t1033 = t1078 * t1429 + t1207 * t1432;
t1034 = t1078 * t1432 - t1207 * t1429;
t1543 = t1033 * t1442 + t1034 * t1437;
t915 = -t1076 * t1430 + t1433 * t1543;
t950 = -t1033 * t1437 + t1034 * t1442;
t1555 = t1438 * t950 + t1443 * t915;
t1075 = t1166 * t1441 - t1436 * t1689;
t1077 = -t1166 * t1436 - t1441 * t1689;
t1246 = -t1309 + t1308;
t1043 = t1077 * t1429 + t1246 * t1432;
t1044 = t1077 * t1432 - t1246 * t1429;
t1541 = t1043 * t1442 + t1044 * t1437;
t918 = -t1075 * t1430 + t1433 * t1541;
t963 = -t1043 * t1437 + t1044 * t1442;
t1554 = t1438 * t963 + t1443 * t918;
t1224 = -t1679 - t1308;
t1128 = t1224 * t1436 + t1690;
t1129 = t1224 * t1441 - t1692;
t1047 = t1129 * t1429 - t1432 * t1689;
t1048 = t1129 * t1432 + t1429 * t1689;
t1540 = t1047 * t1442 + t1048 * t1437;
t934 = -t1128 * t1430 + t1433 * t1540;
t967 = -t1047 * t1437 + t1048 * t1442;
t1553 = t1438 * t967 + t1443 * t934;
t1234 = -t1309 - t1679;
t1131 = t1234 * t1441 - t1654;
t1132 = -t1234 * t1436 - t1653;
t1053 = t1132 * t1429 - t1166 * t1432;
t1054 = t1132 * t1432 + t1166 * t1429;
t1539 = t1053 * t1442 + t1054 * t1437;
t937 = -t1131 * t1430 + t1433 * t1539;
t974 = -t1053 * t1437 + t1054 * t1442;
t1552 = t1438 * t974 + t1443 * t937;
t1272 = -t1309 + t1679;
t1146 = t1272 * t1441 + t1692;
t1148 = -t1272 * t1436 + t1690;
t1063 = t1148 * t1429 + t1167 * t1432;
t1065 = t1148 * t1432 - t1167 * t1429;
t1538 = t1063 * t1442 + t1065 * t1437;
t948 = -t1146 * t1430 + t1433 * t1538;
t979 = -t1063 * t1437 + t1065 * t1442;
t1551 = t1438 * t979 + t1443 * t948;
t1271 = t1308 - t1679;
t1147 = t1271 * t1436 + t1653;
t1149 = t1271 * t1441 - t1654;
t1064 = t1149 * t1429 - t1165 * t1432;
t1066 = t1149 * t1432 + t1165 * t1429;
t1537 = t1064 * t1442 + t1066 * t1437;
t949 = -t1147 * t1430 + t1433 * t1537;
t980 = -t1064 * t1437 + t1066 * t1442;
t1550 = t1438 * t980 + t1443 * t949;
t1160 = t1311 * t1642 + t1436 * t1593;
t1118 = t1160 * t1429 + t1598;
t1120 = t1160 * t1432 - t1599;
t1021 = -t1118 * t1437 + t1120 * t1442;
t1159 = t1311 * t1643 - t1441 * t1593;
t1529 = t1118 * t1442 + t1120 * t1437;
t998 = -t1159 * t1430 + t1433 * t1529;
t1549 = t1021 * t1438 + t1443 * t998;
t1162 = t1202 * t1441 - t1313 * t1643;
t1119 = t1162 * t1429 - t1598;
t1121 = t1162 * t1432 + t1599;
t1022 = -t1119 * t1437 + t1121 * t1442;
t1161 = t1202 * t1436 + t1313 * t1642;
t1528 = t1119 * t1442 + t1121 * t1437;
t999 = -t1161 * t1430 + t1433 * t1528;
t1548 = t1022 * t1438 + t1443 * t999;
t1547 = qJD(1) * t1421 - t1434 * t1445;
t1191 = (-t1311 * t1436 - t1313 * t1441) * t1337;
t1192 = (-t1311 * t1441 + t1313 * t1436) * t1337;
t1154 = t1192 * t1429 - t1259 * t1432;
t1155 = t1192 * t1432 + t1259 * t1429;
t1525 = t1154 * t1442 + t1155 * t1437;
t1018 = -t1191 * t1430 + t1433 * t1525;
t1060 = -t1154 * t1437 + t1155 * t1442;
t1545 = t1018 * t1443 + t1060 * t1438;
t1243 = -t1338 - t1339;
t1229 = -t1319 + t1266;
t1492 = -t1590 - t1640;
t1151 = -t1229 * t1432 + t1429 * t1492;
t1153 = t1229 * t1429 + t1432 * t1492;
t1526 = t1151 * t1442 + t1153 * t1437;
t1028 = -t1243 * t1430 + t1433 * t1526;
t1056 = -t1151 * t1437 + t1153 * t1442;
t1544 = t1028 * t1443 + t1056 * t1438;
t1282 = t1339 - t1338;
t1150 = -t1225 * t1429 + t1432 * t1681;
t1152 = -t1225 * t1432 - t1429 * t1681;
t1527 = t1150 * t1442 + t1152 * t1437;
t1042 = -t1282 * t1430 + t1433 * t1527;
t1055 = -t1150 * t1437 + t1152 * t1442;
t1542 = t1042 * t1443 + t1055 * t1438;
t1522 = -t1183 * t1442 + t1184 * t1437;
t1070 = t1235 * t1430 + t1433 * t1522;
t1111 = t1183 * t1437 + t1184 * t1442;
t1536 = t1070 * t1443 + t1111 * t1438;
t1274 = -t1678 - t1338;
t1193 = t1274 * t1429 + t1686;
t1194 = t1274 * t1432 - t1687;
t1520 = t1193 * t1442 + t1194 * t1437;
t1074 = -t1225 * t1430 + t1433 * t1520;
t1117 = -t1193 * t1437 + t1194 * t1442;
t1535 = t1074 * t1443 + t1117 * t1438;
t1298 = -t1339 - t1678;
t1208 = t1298 * t1432 + t1650;
t1209 = -t1298 * t1429 + t1649;
t1515 = t1208 * t1442 + t1209 * t1437;
t1098 = -t1430 * t1681 + t1433 * t1515;
t1135 = -t1208 * t1437 + t1209 * t1442;
t1534 = t1098 * t1443 + t1135 * t1438;
t1318 = -t1339 + t1678;
t1220 = t1318 * t1432 + t1687;
t1222 = -t1318 * t1429 + t1686;
t1512 = t1220 * t1442 + t1222 * t1437;
t1105 = -t1229 * t1430 + t1433 * t1512;
t1144 = -t1220 * t1437 + t1222 * t1442;
t1533 = t1105 * t1443 + t1144 * t1438;
t1317 = t1338 - t1678;
t1221 = t1317 * t1429 - t1649;
t1223 = t1317 * t1432 + t1650;
t1511 = t1221 * t1442 + t1223 * t1437;
t1106 = -t1430 * t1492 + t1433 * t1511;
t1145 = -t1221 * t1437 + t1223 * t1442;
t1532 = t1106 * t1443 + t1145 * t1438;
t1215 = -t1344 * t1633 - t1432 * t1590;
t1216 = -t1344 * t1632 + t1429 * t1590;
t1514 = t1215 * t1442 + t1216 * t1437;
t1115 = t1433 * t1514 + t1597;
t1142 = -t1215 * t1437 + t1216 * t1442;
t1531 = t1115 * t1443 + t1142 * t1438;
t1217 = t1266 * t1429 - t1346 * t1632;
t1218 = t1266 * t1432 + t1346 * t1633;
t1513 = t1217 * t1442 + t1218 * t1437;
t1116 = t1433 * t1513 - t1597;
t1143 = -t1217 * t1437 + t1218 * t1442;
t1530 = t1116 * t1443 + t1143 * t1438;
t1249 = (t1344 * t1429 + t1346 * t1432) * t1391;
t1250 = (t1344 * t1432 - t1346 * t1429) * t1391;
t1508 = t1249 * t1442 + t1250 * t1437;
t1174 = t1433 * t1508 + t1636;
t1178 = -t1249 * t1437 + t1250 * t1442;
t1524 = t1174 * t1443 + t1178 * t1438;
t1307 = -t1366 - t1367;
t1456 = (-qJD(3) - t1391) * t1372 - t1584;
t1505 = -t1290 * t1442 + t1437 * t1456;
t1177 = -t1307 * t1430 + t1433 * t1505;
t1211 = t1290 * t1437 + t1442 * t1456;
t1523 = t1177 * t1443 + t1211 * t1438;
t1347 = t1367 - t1366;
t1285 = t1372 * t1613 + t1584;
t1289 = t1352 + t1326;
t1506 = -t1285 * t1437 + t1289 * t1442;
t1188 = -t1347 * t1430 + t1433 * t1506;
t1210 = -t1285 * t1442 - t1289 * t1437;
t1521 = t1188 * t1443 + t1210 * t1438;
t1501 = t1324 * t1437 + t1684;
t1196 = -t1285 * t1430 + t1433 * t1501;
t1519 = t1196 * t1443 + t1252 * t1438;
t1288 = -t1370 * t1613 + t1454;
t1504 = t1333 * t1442 + t1645;
t1198 = -t1288 * t1430 + t1433 * t1504;
t1518 = t1198 * t1443 + t1267 * t1438;
t1351 = -t1367 + t1678;
t1502 = t1351 * t1442 + t1685;
t1205 = -t1290 * t1430 + t1433 * t1502;
t1275 = -t1351 * t1437 + t1684;
t1517 = t1205 * t1443 + t1275 * t1438;
t1350 = t1366 - t1678;
t1503 = t1350 * t1437 - t1644;
t1206 = -t1430 * t1456 + t1433 * t1503;
t1276 = t1350 * t1442 + t1645;
t1516 = t1206 * t1443 + t1276 * t1438;
t1240 = t1325 * t1616 + (t1372 * t1430 - t1391 * t1617) * t1370;
t1283 = -t1325 * t1437 - t1391 * t1638;
t1510 = t1240 * t1443 + t1283 * t1438;
t1242 = t1326 * t1617 + (-t1370 * t1430 - t1391 * t1616) * t1372;
t1284 = t1326 * t1442 + t1391 * t1637;
t1509 = t1242 * t1443 + t1284 * t1438;
t1491 = t1391 * (t1370 * t1437 + t1372 * t1442);
t1280 = t1433 * t1491 + t1636;
t1302 = (-t1637 + t1638) * t1391;
t1507 = t1280 * t1443 + t1302 * t1438;
t1355 = -t1587 + t1615;
t1500 = -t1355 * t1443 + t1356 * t1438;
t1310 = t1355 * t1438 + t1356 * t1443;
t1499 = t1378 * t1443 + t1381 * t1438;
t1379 = -t1406 + t1397;
t1380 = t1398 + t1405;
t1498 = -t1379 * t1443 + t1380 * t1438;
t1497 = t1393 * t1443 - t1629;
t1400 = t1419 - t1595;
t1496 = t1400 * t1443 + t1631;
t1495 = t1402 * t1438 + t1630;
t1401 = -t1419 + t1594;
t1494 = t1401 * t1438 + t1628;
t1385 = t1416 * t1444 - t1417 * t1439;
t737 = -pkin(11) * t793 + (-pkin(12) * t1441 + t1672) * t809;
t745 = -pkin(4) * t793 + pkin(5) * t927 - pkin(12) * t810;
t701 = -pkin(3) * t793 + qJ(4) * t751 + t1429 * t737 + t1432 * t745;
t704 = -qJ(4) * t750 - t1429 * t745 + t1432 * t737;
t1480 = pkin(10) * t728 + t1437 * t704 + t1442 * t701;
t718 = pkin(3) * t750 + pkin(11) * t794 + (-pkin(12) * t1436 + t1605) * t809;
t721 = t1430 * t1578 + t1433 * t793;
t685 = -pkin(2) * t721 - t1430 * t718 + t1433 * t1480;
t686 = -t1437 * t701 + t1442 * t704 + (-t1430 * t721 - t1433 * t722) * pkin(10);
t700 = -t1438 * t722 + t1443 * t728;
t1490 = pkin(9) * t700 + t1438 * t686 + t1443 * t685;
t803 = -pkin(12) * t993 - t809;
t777 = -pkin(11) * t960 + t1441 * t803 + t1672 * t993;
t787 = -pkin(4) * t960 - pkin(5) * t1156 - pkin(12) * t995 - t810;
t731 = -pkin(3) * t960 + qJ(4) * t894 + t1429 * t777 + t1432 * t787;
t734 = -qJ(4) * t893 - t1429 * t787 + t1432 * t777;
t1479 = pkin(10) * t826 + t1437 * t734 + t1442 * t731;
t754 = pkin(3) * t893 + pkin(11) * t961 + t1436 * t803 + t1605 * t993;
t807 = t1430 * t1576 + t1433 * t960;
t699 = -pkin(2) * t807 - t1430 * t754 + t1433 * t1479;
t703 = -t1437 * t731 + t1442 * t734 + (-t1430 * t807 - t1433 * t808) * pkin(10);
t768 = -t1438 * t808 + t1443 * t826;
t1489 = pkin(9) * t768 + t1438 * t703 + t1443 * t699;
t765 = qJ(4) * t852 + (-pkin(11) * t1429 + t1606) * t880;
t781 = -qJ(4) * t851 + (-pkin(11) * t1432 + t1673) * t880;
t1476 = pkin(10) * t799 + t1437 * t781 + t1442 * t765;
t775 = t1430 * t1577 + t1433 * t880;
t800 = pkin(3) * t851 - pkin(4) * t1010 + pkin(11) * t881;
t706 = -pkin(2) * t775 - t1430 * t800 + t1433 * t1476;
t717 = -t1437 * t765 + t1442 * t781 + (-t1430 * t775 - t1433 * t776) * pkin(10);
t739 = -t1438 * t776 + t1443 * t799;
t1488 = pkin(9) * t739 + t1438 * t717 + t1443 * t706;
t848 = -pkin(5) * t1049 + t869;
t897 = -pkin(12) * t1049 + t1667;
t805 = -pkin(11) * t981 - t1436 * t848 + t1441 * t897;
t844 = -pkin(4) * t981 - pkin(5) * t1088 - pkin(12) * t1050 + t1665;
t749 = -pkin(3) * t981 + qJ(4) * t923 + t1429 * t805 + t1432 * t844;
t757 = -qJ(4) * t922 - t1429 * t844 + t1432 * t805;
t1478 = pkin(10) * t854 + t1437 * t757 + t1442 * t749;
t778 = pkin(3) * t922 - pkin(4) * t1049 + pkin(11) * t982 + t1436 * t897 + t1441 * t848;
t827 = t1430 * t1574 + t1433 * t981;
t708 = -pkin(2) * t827 - t1430 * t778 + t1433 * t1478;
t720 = -t1437 * t749 + t1442 * t757 + (-t1430 * t827 - t1433 * t828) * pkin(10);
t790 = -t1438 * t828 + t1443 * t854;
t1487 = pkin(9) * t790 + t1438 * t720 + t1443 * t708;
t850 = -pkin(5) * t1061 + t870;
t900 = -pkin(12) * t1061 + t1665;
t806 = -pkin(11) * t984 - t1436 * t850 + t1441 * t900;
t846 = -pkin(4) * t984 + pkin(5) * t1090 - pkin(12) * t1062 - t1667;
t752 = -pkin(3) * t984 + qJ(4) * t931 + t1429 * t806 + t1432 * t846;
t758 = -qJ(4) * t930 - t1429 * t846 + t1432 * t806;
t1477 = pkin(10) * t859 + t1437 * t758 + t1442 * t752;
t780 = pkin(3) * t930 - pkin(4) * t1061 + pkin(11) * t985 + t1436 * t900 + t1441 * t850;
t833 = t1430 * t1573 + t1433 * t984;
t713 = -pkin(2) * t833 - t1430 * t780 + t1433 * t1477;
t723 = -t1437 * t752 + t1442 * t758 + (-t1430 * t833 - t1433 * t834) * pkin(10);
t792 = -t1438 * t834 + t1443 * t859;
t1486 = pkin(9) * t792 + t1438 * t723 + t1443 * t713;
t861 = -pkin(11) * t1076 - t880;
t823 = qJ(4) * t1034 + t1076 * t1606 + t1429 * t861;
t830 = -qJ(4) * t1033 + t1076 * t1673 + t1432 * t861;
t1475 = pkin(10) * t950 + t1437 * t830 + t1442 * t823;
t841 = pkin(3) * t1033 + pkin(4) * t1207 + pkin(11) * t1078 + t881;
t914 = t1076 * t1433 + t1430 * t1543;
t741 = -pkin(2) * t914 - t1430 * t841 + t1433 * t1475;
t753 = -t1437 * t823 + t1442 * t830 + (-t1430 * t914 - t1433 * t915) * pkin(10);
t860 = -t1438 * t915 + t1443 * t950;
t1485 = pkin(9) * t860 + t1438 * t753 + t1443 * t741;
t924 = -pkin(4) * t1128 + t952;
t977 = -pkin(11) * t1128 + t1660;
t845 = -pkin(3) * t1128 + qJ(4) * t1048 + t1429 * t977 + t1432 * t924;
t853 = -qJ(4) * t1047 - t1429 * t924 + t1432 * t977;
t1474 = pkin(10) * t967 + t1437 * t853 + t1442 * t845;
t906 = pkin(3) * t1047 - pkin(4) * t1689 + pkin(11) * t1129 - t1659;
t933 = t1128 * t1433 + t1430 * t1540;
t760 = -pkin(2) * t933 - t1430 * t906 + t1433 * t1474;
t769 = -t1437 * t845 + t1442 * t853 + (-t1430 * t933 - t1433 * t934) * pkin(10);
t873 = -t1438 * t934 + t1443 * t967;
t1484 = pkin(9) * t873 + t1438 * t769 + t1443 * t760;
t925 = -pkin(4) * t1131 + t953;
t978 = -pkin(11) * t1131 + t1659;
t847 = -pkin(3) * t1131 + qJ(4) * t1054 + t1429 * t978 + t1432 * t925;
t855 = -qJ(4) * t1053 - t1429 * t925 + t1432 * t978;
t1473 = pkin(10) * t974 + t1437 * t855 + t1442 * t847;
t909 = pkin(3) * t1053 - pkin(4) * t1166 + pkin(11) * t1132 + t1660;
t936 = t1131 * t1433 + t1430 * t1539;
t764 = -pkin(2) * t936 - t1430 * t909 + t1433 * t1473;
t770 = -t1437 * t847 + t1442 * t855 + (-t1430 * t936 - t1433 * t937) * pkin(10);
t879 = -t1438 * t937 + t1443 * t974;
t1483 = pkin(9) * t879 + t1438 * t770 + t1443 * t764;
t932 = pkin(3) * t1172 + qJ(4) * t955;
t1458 = pkin(10) * t882 - qJ(4) * t1666 + t1442 * t932;
t871 = -t1172 * t1433 + t1430 * t1570;
t773 = -pkin(2) * t871 + t1433 * t1458 - t1675 * t954;
t782 = -qJ(4) * t1664 - t1437 * t932 + (-t1430 * t871 - t1433 * t872) * pkin(10);
t813 = -t1438 * t872 + t1443 * t882;
t1482 = pkin(9) * t813 + t1438 * t782 + t1443 * t773;
t1027 = t1243 * t1433 + t1430 * t1526;
t919 = -pkin(3) * t1243 + qJ(4) * t1153 + t955;
t929 = -qJ(4) * t1151 - t954;
t1470 = pkin(10) * t1056 + t1437 * t929 + t1442 * t919;
t821 = -pkin(2) * t1027 - t1151 * t1675 + t1433 * t1470;
t825 = -t1437 * t919 + t1442 * t929 + (-t1027 * t1430 - t1028 * t1433) * pkin(10);
t962 = -t1028 * t1438 + t1056 * t1443;
t1481 = pkin(9) * t962 + t1438 * t825 + t1443 * t821;
t1005 = -t1074 * t1438 + t1117 * t1443;
t1006 = pkin(3) * t1193 - t1038;
t1073 = t1225 * t1433 + t1430 * t1520;
t1059 = -pkin(3) * t1225 + qJ(4) * t1194 + t1655;
t1108 = -qJ(4) * t1193 - t1656;
t1463 = pkin(10) * t1117 + t1059 * t1442 + t1108 * t1437;
t877 = -pkin(2) * t1073 - t1006 * t1430 + t1433 * t1463;
t902 = -t1059 * t1437 + t1108 * t1442 + (-t1073 * t1430 - t1074 * t1433) * pkin(10);
t1472 = pkin(9) * t1005 + t1438 * t902 + t1443 * t877;
t1012 = -t1098 * t1438 + t1135 * t1443;
t1007 = pkin(3) * t1208 - t1039;
t1097 = t1430 * t1515 + t1433 * t1681;
t1067 = -pkin(3) * t1681 + qJ(4) * t1209 - t1656;
t1112 = -qJ(4) * t1208 - t1655;
t1462 = pkin(10) * t1135 + t1067 * t1442 + t1112 * t1437;
t884 = -pkin(2) * t1097 - t1007 * t1430 + t1433 * t1462;
t916 = -t1067 * t1437 + t1112 * t1442 + (-t1097 * t1430 - t1098 * t1433) * pkin(10);
t1471 = pkin(9) * t1012 + t1438 * t916 + t1443 * t884;
t1000 = -t1070 * t1438 + t1111 * t1443;
t1069 = -t1235 * t1433 + t1430 * t1522;
t1001 = -pkin(2) * t1069 + t1111 * t1669;
t983 = (-t1069 * t1430 - t1070 * t1433) * pkin(10);
t1468 = pkin(9) * t1000 + t1001 * t1443 + t1438 * t983;
t1176 = t1307 * t1433 + t1430 * t1505;
t1008 = (-t1176 * t1430 - t1177 * t1433) * pkin(10) - t1522;
t1461 = pkin(10) * t1211 + t1111;
t1016 = -pkin(2) * t1176 + t1433 * t1461;
t1122 = -t1177 * t1438 + t1211 * t1443;
t1467 = pkin(9) * t1122 + t1008 * t1438 + t1016 * t1443;
t1195 = t1285 * t1433 + t1430 * t1501;
t1046 = -pkin(2) * t1195 + t1183 * t1430 + t1433 * t1581;
t1093 = -t1652 + (-t1195 * t1430 - t1196 * t1433) * pkin(10);
t1157 = -t1196 * t1438 + t1252 * t1443;
t1466 = pkin(9) * t1157 + t1046 * t1443 + t1093 * t1438;
t1197 = t1288 * t1433 + t1430 * t1504;
t1052 = -pkin(2) * t1197 + t1184 * t1430 + t1433 * t1580;
t1094 = -t1651 + (-t1197 * t1430 - t1198 * t1433) * pkin(10);
t1158 = -t1198 * t1438 + t1267 * t1443;
t1465 = pkin(9) * t1158 + t1052 * t1443 + t1094 * t1438;
t1348 = t1379 * t1438 + t1380 * t1443;
t1464 = pkin(9) * t1348 + t1310;
t1425 = t1431 * t1426;
t1413 = qJDD(1) * t1439 + t1444 * t1445;
t1404 = t1610 * t1623;
t1403 = (t1427 - t1428) * t1623;
t1399 = -pkin(8) * t1413 + g(3) * t1444;
t1382 = t1610 * t1604;
t1377 = (t1608 + (qJD(2) + t1421) * t1662) * t1431;
t1374 = t1397 * t1443 - t1427 * t1604;
t1373 = -t1398 * t1438 - t1428 * t1604;
t1365 = t1433 * t1579;
t1360 = t1401 * t1443 - t1629;
t1359 = -t1400 * t1438 + t1630;
t1354 = (t1378 * t1434 + t1425 * t1614) * t1438;
t1353 = (-t1425 * t1438 * t1445 + t1688) * t1443;
t1349 = -t1378 * t1438 + t1381 * t1443;
t1343 = t1381 * t1431 + t1434 * t1495;
t1342 = -t1380 * t1431 + t1434 * t1494;
t1341 = -t1379 * t1431 + t1434 * t1496;
t1340 = t1431 * t1495 - t1688;
t1331 = -t1377 * t1431 + t1434 * t1497;
t1330 = t1377 * t1434 + t1431 * t1497;
t1329 = -t1403 * t1431 + t1434 * t1499;
t1328 = t1404 * t1431 + t1434 * t1498;
t1327 = -t1404 * t1434 + t1431 * t1498;
t1301 = -t1343 * t1439 + t1361 * t1444;
t1300 = t1343 * t1444 + t1361 * t1439;
t1295 = -t1331 * t1439 + t1357 * t1444;
t1294 = t1331 * t1444 + t1357 * t1439;
t1292 = t1383 * t1431 + t1434 * t1500;
t1291 = -t1383 * t1434 + t1431 * t1500;
t1279 = t1430 * t1491 - t1365;
t1278 = -t1328 * t1439 + t1348 * t1444;
t1277 = t1328 * t1444 + t1348 * t1439;
t1262 = -t1635 + (-t1340 * t1431 - t1343 * t1434) * pkin(9);
t1251 = -t1634 + (-t1330 * t1431 - t1331 * t1434) * pkin(9);
t1248 = -pkin(1) * t1340 + t1355 * t1431 + t1434 * t1582;
t1244 = -pkin(1) * t1330 + t1356 * t1431 + t1434 * t1583;
t1241 = t1326 * t1622 + (t1370 * t1433 - t1391 * t1621) * t1372;
t1239 = t1325 * t1621 + (-t1372 * t1433 - t1391 * t1622) * t1370;
t1238 = pkin(9) * t1310 * t1434 - pkin(1) * t1291;
t1237 = -t1292 * t1439 + t1310 * t1444;
t1236 = t1292 * t1444 + t1310 * t1439;
t1233 = -pkin(1) * t1327 + t1434 * t1464;
t1232 = -t1280 * t1438 + t1302 * t1443;
t1231 = (-t1291 * t1431 - t1292 * t1434) * pkin(9);
t1219 = (-t1327 * t1431 - t1328 * t1434) * pkin(9) - t1500;
t1204 = t1430 * t1503 + t1433 * t1456;
t1203 = t1290 * t1433 + t1430 * t1502;
t1187 = t1347 * t1433 + t1430 * t1506;
t1186 = -t1242 * t1438 + t1284 * t1443;
t1185 = -t1240 * t1438 + t1283 * t1443;
t1175 = -t1279 * t1431 + t1434 * t1507;
t1173 = t1430 * t1508 - t1365;
t1170 = -t1206 * t1438 + t1276 * t1443;
t1169 = -t1205 * t1438 + t1275 * t1443;
t1137 = -t1241 * t1431 + t1434 * t1509;
t1136 = -t1239 * t1431 + t1434 * t1510;
t1130 = -t1188 * t1438 + t1210 * t1443;
t1114 = t1430 * t1513 + t1596;
t1113 = t1430 * t1514 - t1596;
t1110 = -t1204 * t1431 + t1434 * t1516;
t1109 = -t1203 * t1431 + t1434 * t1517;
t1107 = -t1174 * t1438 + t1178 * t1443;
t1104 = t1430 * t1511 + t1433 * t1492;
t1103 = t1229 * t1433 + t1430 * t1512;
t1102 = -t1197 * t1431 + t1434 * t1518;
t1101 = t1197 * t1434 + t1431 * t1518;
t1100 = -t1195 * t1431 + t1434 * t1519;
t1099 = t1195 * t1434 + t1431 * t1519;
t1068 = -t1187 * t1431 + t1434 * t1521;
t1058 = -t1176 * t1431 + t1434 * t1523;
t1057 = t1176 * t1434 + t1431 * t1523;
t1051 = pkin(2) * t1198 - t1184 * t1433 + t1430 * t1580;
t1045 = pkin(2) * t1196 - t1183 * t1433 + t1430 * t1581;
t1041 = t1282 * t1433 + t1430 * t1527;
t1040 = -t1173 * t1431 + t1434 * t1524;
t1036 = -t1116 * t1438 + t1143 * t1443;
t1035 = -t1115 * t1438 + t1142 * t1443;
t1026 = -t1102 * t1439 + t1158 * t1444;
t1025 = t1102 * t1444 + t1158 * t1439;
t1024 = -t1106 * t1438 + t1145 * t1443;
t1023 = -t1105 * t1438 + t1144 * t1443;
t1020 = -t1100 * t1439 + t1157 * t1444;
t1019 = t1100 * t1444 + t1157 * t1439;
t1017 = t1191 * t1433 + t1430 * t1525;
t1015 = pkin(2) * t1177 + t1430 * t1461;
t1004 = -t1058 * t1439 + t1122 * t1444;
t1003 = t1058 * t1444 + t1122 * t1439;
t1002 = pkin(2) * t1070 + t1111 * t1670;
t997 = t1161 * t1433 + t1430 * t1528;
t996 = t1159 * t1433 + t1430 * t1529;
t987 = -t1114 * t1431 + t1434 * t1530;
t986 = -t1113 * t1431 + t1434 * t1531;
t976 = -t1104 * t1431 + t1434 * t1532;
t975 = -t1103 * t1431 + t1434 * t1533;
t966 = -t1097 * t1431 + t1434 * t1534;
t965 = t1097 * t1434 + t1431 * t1534;
t964 = -t1042 * t1438 + t1055 * t1443;
t958 = -t1018 * t1438 + t1060 * t1443;
t947 = t1147 * t1433 + t1430 * t1537;
t946 = t1146 * t1433 + t1430 * t1538;
t945 = -t1073 * t1431 + t1434 * t1535;
t944 = t1073 * t1434 + t1431 * t1535;
t943 = -t1069 * t1431 + t1434 * t1536;
t942 = t1069 * t1434 + t1431 * t1536;
t921 = t1022 * t1443 - t1438 * t999;
t920 = t1021 * t1443 - t1438 * t998;
t917 = t1075 * t1433 + t1430 * t1541;
t913 = -t1041 * t1431 + t1434 * t1542;
t912 = -t1052 * t1438 + t1094 * t1443 + (-t1101 * t1431 - t1102 * t1434) * pkin(9);
t911 = -t1027 * t1431 + t1434 * t1544;
t910 = t1027 * t1434 + t1431 * t1544;
t907 = t1095 * t1433 + t1430 * t1546;
t905 = -t1046 * t1438 + t1093 * t1443 + (-t1099 * t1431 - t1100 * t1434) * pkin(9);
t904 = t1012 * t1444 - t1439 * t966;
t903 = t1012 * t1439 + t1444 * t966;
t901 = -t1017 * t1431 + t1434 * t1545;
t896 = t1005 * t1444 - t1439 * t945;
t895 = t1005 * t1439 + t1444 * t945;
t892 = -pkin(1) * t1101 - t1051 * t1431 + t1434 * t1465;
t891 = t1000 * t1444 - t1439 * t943;
t890 = t1000 * t1439 + t1444 * t943;
t887 = -pkin(1) * t1099 - t1045 * t1431 + t1434 * t1466;
t886 = -t1438 * t949 + t1443 * t980;
t885 = -t1438 * t948 + t1443 * t979;
t883 = pkin(2) * t1098 + t1007 * t1433 + t1430 * t1462;
t878 = t1008 * t1443 - t1016 * t1438 + (-t1057 * t1431 - t1058 * t1434) * pkin(9);
t876 = pkin(2) * t1074 + t1006 * t1433 + t1430 * t1463;
t875 = -t1431 * t997 + t1434 * t1548;
t874 = -t1431 * t996 + t1434 * t1549;
t868 = -t1438 * t918 + t1443 * t963;
t863 = t1030 * t1433 + t1430 * t1568;
t862 = t1029 * t1433 + t1430 * t1569;
t858 = -t1439 * t911 + t1444 * t962;
t857 = t1439 * t962 + t1444 * t911;
t856 = -pkin(1) * t1057 - t1015 * t1431 + t1434 * t1467;
t849 = -t1438 * t908 + t1443 * t935;
t843 = -t1431 * t947 + t1434 * t1550;
t842 = -t1431 * t946 + t1434 * t1551;
t838 = t1430 * t1571 + t1433 * t989;
t837 = t1430 * t1572 + t1433 * t988;
t836 = -t1431 * t936 + t1434 * t1552;
t835 = t1431 * t1552 + t1434 * t936;
t832 = -t1431 * t933 + t1434 * t1553;
t831 = t1431 * t1553 + t1434 * t933;
t824 = -t1431 * t917 + t1434 * t1554;
t822 = -t1001 * t1438 + t1443 * t983 + (-t1431 * t942 - t1434 * t943) * pkin(9);
t820 = pkin(2) * t1028 + t1151 * t1674 + t1430 * t1470;
t819 = -t1431 * t914 + t1434 * t1555;
t818 = t1431 * t1555 + t1434 * t914;
t817 = -pkin(1) * t942 - t1002 * t1431 + t1434 * t1468;
t816 = -t1431 * t907 + t1434 * t1556;
t815 = -t1438 * t865 + t1443 * t889;
t814 = -t1438 * t864 + t1443 * t888;
t811 = t1430 * t1575 + t1433 * t972;
t804 = -t1438 * t884 + t1443 * t916 + (-t1431 * t965 - t1434 * t966) * pkin(9);
t802 = -t1439 * t836 + t1444 * t879;
t801 = t1439 * t879 + t1444 * t836;
t798 = -t1438 * t840 + t1443 * t867;
t797 = -t1438 * t839 + t1443 * t866;
t796 = -t1439 * t832 + t1444 * t873;
t795 = t1439 * t873 + t1444 * t832;
t791 = -t1438 * t877 + t1443 * t902 + (-t1431 * t944 - t1434 * t945) * pkin(9);
t789 = -t1439 * t819 + t1444 * t860;
t788 = t1439 * t860 + t1444 * t819;
t786 = -t1431 * t871 + t1434 * t1557;
t785 = t1431 * t1557 + t1434 * t871;
t784 = -t1431 * t863 + t1434 * t1558;
t783 = -t1431 * t862 + t1434 * t1559;
t779 = -pkin(1) * t965 - t1431 * t883 + t1434 * t1471;
t774 = -pkin(1) * t944 - t1431 * t876 + t1434 * t1472;
t772 = pkin(2) * t872 + t1430 * t1458 + t1674 * t954;
t771 = -t1438 * t812 + t1443 * t829;
t767 = -t1431 * t838 + t1434 * t1560;
t766 = -t1431 * t837 + t1434 * t1561;
t763 = pkin(2) * t937 + t1430 * t1473 + t1433 * t909;
t762 = -t1431 * t833 + t1434 * t1562;
t761 = t1431 * t1562 + t1434 * t833;
t759 = pkin(2) * t934 + t1430 * t1474 + t1433 * t906;
t756 = -t1431 * t827 + t1434 * t1563;
t755 = t1431 * t1563 + t1434 * t827;
t748 = -t1438 * t821 + t1443 * t825 + (-t1431 * t910 - t1434 * t911) * pkin(9);
t747 = -t1439 * t786 + t1444 * t813;
t746 = t1439 * t813 + t1444 * t786;
t744 = -t1431 * t811 + t1434 * t1564;
t743 = -t1431 * t807 + t1434 * t1565;
t742 = t1431 * t1565 + t1434 * t807;
t740 = pkin(2) * t915 + t1430 * t1475 + t1433 * t841;
t738 = -pkin(1) * t910 - t1431 * t820 + t1434 * t1481;
t736 = -t1439 * t762 + t1444 * t792;
t735 = t1439 * t792 + t1444 * t762;
t733 = -t1439 * t756 + t1444 * t790;
t732 = t1439 * t790 + t1444 * t756;
t730 = -t1431 * t775 + t1434 * t1566;
t729 = t1431 * t1566 + t1434 * t775;
t727 = -t1439 * t743 + t1444 * t768;
t726 = t1439 * t768 + t1444 * t743;
t725 = -t1438 * t764 + t1443 * t770 + (-t1431 * t835 - t1434 * t836) * pkin(9);
t724 = -t1438 * t760 + t1443 * t769 + (-t1431 * t831 - t1434 * t832) * pkin(9);
t719 = -t1438 * t773 + t1443 * t782 + (-t1431 * t785 - t1434 * t786) * pkin(9);
t716 = -t1438 * t741 + t1443 * t753 + (-t1431 * t818 - t1434 * t819) * pkin(9);
t715 = -pkin(1) * t835 - t1431 * t763 + t1434 * t1483;
t714 = -pkin(1) * t831 - t1431 * t759 + t1434 * t1484;
t712 = pkin(2) * t834 + t1430 * t1477 + t1433 * t780;
t711 = -pkin(1) * t785 - t1431 * t772 + t1434 * t1482;
t710 = -t1439 * t730 + t1444 * t739;
t709 = t1439 * t739 + t1444 * t730;
t707 = pkin(2) * t828 + t1430 * t1478 + t1433 * t778;
t705 = pkin(2) * t776 + t1430 * t1476 + t1433 * t800;
t702 = -pkin(1) * t818 - t1431 * t740 + t1434 * t1485;
t698 = pkin(2) * t808 + t1430 * t1479 + t1433 * t754;
t697 = -t1431 * t721 + t1434 * t1567;
t696 = t1431 * t1567 + t1434 * t721;
t695 = -t1438 * t713 + t1443 * t723 + (-t1431 * t761 - t1434 * t762) * pkin(9);
t694 = -t1438 * t708 + t1443 * t720 + (-t1431 * t755 - t1434 * t756) * pkin(9);
t693 = -t1438 * t706 + t1443 * t717 + (-t1431 * t729 - t1434 * t730) * pkin(9);
t692 = -pkin(1) * t761 - t1431 * t712 + t1434 * t1486;
t691 = -pkin(1) * t755 - t1431 * t707 + t1434 * t1487;
t690 = -t1438 * t699 + t1443 * t703 + (-t1431 * t742 - t1434 * t743) * pkin(9);
t689 = -t1439 * t697 + t1444 * t700;
t688 = t1439 * t700 + t1444 * t697;
t687 = -pkin(1) * t729 - t1431 * t705 + t1434 * t1488;
t684 = pkin(2) * t722 + t1430 * t1480 + t1433 * t718;
t683 = -pkin(1) * t742 - t1431 * t698 + t1434 * t1489;
t682 = -t1438 * t685 + t1443 * t686 + (-t1431 * t696 - t1434 * t697) * pkin(9);
t681 = -pkin(1) * t696 - t1431 * t684 + t1434 * t1490;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1413, -t1414, 0, t1386, 0, 0, 0, 0, 0, 0, t1301, t1295, t1278, t1237, 0, 0, 0, 0, 0, 0, t1020, t1026, t1004, t891, 0, 0, 0, 0, 0, 0, t896, t904, t858, t747, 0, 0, 0, 0, 0, 0, t796, t802, t789, t710, 0, 0, 0, 0, 0, 0, t733, t736, t727, t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1414, -t1413, 0, t1385, 0, 0, 0, 0, 0, 0, t1300, t1294, t1277, t1236, 0, 0, 0, 0, 0, 0, t1019, t1025, t1003, t890, 0, 0, 0, 0, 0, 0, t895, t903, t857, t746, 0, 0, 0, 0, 0, 0, t795, t801, t788, t709, 0, 0, 0, 0, 0, 0, t732, t735, t726, t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1340, t1330, t1327, t1291, 0, 0, 0, 0, 0, 0, t1099, t1101, t1057, t942, 0, 0, 0, 0, 0, 0, t944, t965, t910, t785, 0, 0, 0, 0, 0, 0, t831, t835, t818, t729, 0, 0, 0, 0, 0, 0, t755, t761, t742, t696; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1414, 0, -t1413, 0, t1586, -t1399, -t1385, -pkin(8) * t1385, -t1354 * t1439 + t1374 * t1444, -t1329 * t1439 + t1349 * t1444, -t1341 * t1439 + t1359 * t1444, -t1353 * t1439 + t1373 * t1444, -t1342 * t1439 + t1360 * t1444, t1382 * t1444 + t1439 * t1625, -pkin(8) * t1300 - t1248 * t1439 + t1262 * t1444, -pkin(8) * t1294 - t1244 * t1439 + t1251 * t1444, -pkin(8) * t1277 + t1219 * t1444 - t1233 * t1439, -pkin(8) * t1236 + t1231 * t1444 - t1238 * t1439, -t1137 * t1439 + t1186 * t1444, -t1068 * t1439 + t1130 * t1444, -t1109 * t1439 + t1169 * t1444, -t1136 * t1439 + t1185 * t1444, -t1110 * t1439 + t1170 * t1444, -t1175 * t1439 + t1232 * t1444, -pkin(8) * t1019 - t1439 * t887 + t1444 * t905, -pkin(8) * t1025 - t1439 * t892 + t1444 * t912, -pkin(8) * t1003 - t1439 * t856 + t1444 * t878, -pkin(8) * t890 - t1439 * t817 + t1444 * t822, t1036 * t1444 - t1439 * t987, -t1439 * t913 + t1444 * t964, t1023 * t1444 - t1439 * t975, t1035 * t1444 - t1439 * t986, t1024 * t1444 - t1439 * t976, -t1040 * t1439 + t1107 * t1444, -pkin(8) * t895 - t1439 * t774 + t1444 * t791, -pkin(8) * t903 - t1439 * t779 + t1444 * t804, -pkin(8) * t857 - t1439 * t738 + t1444 * t748, -pkin(8) * t746 - t1439 * t711 + t1444 * t719, -t1439 * t875 + t1444 * t921, -t1439 * t824 + t1444 * t868, -t1439 * t842 + t1444 * t885, -t1439 * t874 + t1444 * t920, -t1439 * t843 + t1444 * t886, -t1439 * t901 + t1444 * t958, -pkin(8) * t795 - t1439 * t714 + t1444 * t724, -pkin(8) * t801 - t1439 * t715 + t1444 * t725, -pkin(8) * t788 - t1439 * t702 + t1444 * t716, -pkin(8) * t709 - t1439 * t687 + t1444 * t693, -t1439 * t784 + t1444 * t815, -t1439 * t744 + t1444 * t771, -t1439 * t766 + t1444 * t797, -t1439 * t783 + t1444 * t814, -t1439 * t767 + t1444 * t798, -t1439 * t816 + t1444 * t849, -pkin(8) * t732 - t1439 * t691 + t1444 * t694, -pkin(8) * t735 - t1439 * t692 + t1444 * t695, -pkin(8) * t726 - t1439 * t683 + t1444 * t690, -pkin(8) * t688 - t1439 * t681 + t1444 * t682; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1413, 0, t1414, 0, t1399, t1586, t1386, pkin(8) * t1386, t1354 * t1444 + t1374 * t1439, t1329 * t1444 + t1349 * t1439, t1341 * t1444 + t1359 * t1439, t1353 * t1444 + t1373 * t1439, t1342 * t1444 + t1360 * t1439, t1382 * t1439 - t1444 * t1625, pkin(8) * t1301 + t1248 * t1444 + t1262 * t1439, pkin(8) * t1295 + t1244 * t1444 + t1251 * t1439, pkin(8) * t1278 + t1219 * t1439 + t1233 * t1444, pkin(8) * t1237 + t1231 * t1439 + t1238 * t1444, t1137 * t1444 + t1186 * t1439, t1068 * t1444 + t1130 * t1439, t1109 * t1444 + t1169 * t1439, t1136 * t1444 + t1185 * t1439, t1110 * t1444 + t1170 * t1439, t1175 * t1444 + t1232 * t1439, pkin(8) * t1020 + t1439 * t905 + t1444 * t887, pkin(8) * t1026 + t1439 * t912 + t1444 * t892, pkin(8) * t1004 + t1439 * t878 + t1444 * t856, pkin(8) * t891 + t1439 * t822 + t1444 * t817, t1036 * t1439 + t1444 * t987, t1439 * t964 + t1444 * t913, t1023 * t1439 + t1444 * t975, t1035 * t1439 + t1444 * t986, t1024 * t1439 + t1444 * t976, t1040 * t1444 + t1107 * t1439, pkin(8) * t896 + t1439 * t791 + t1444 * t774, pkin(8) * t904 + t1439 * t804 + t1444 * t779, pkin(8) * t858 + t1439 * t748 + t1444 * t738, pkin(8) * t747 + t1439 * t719 + t1444 * t711, t1439 * t921 + t1444 * t875, t1439 * t868 + t1444 * t824, t1439 * t885 + t1444 * t842, t1439 * t920 + t1444 * t874, t1439 * t886 + t1444 * t843, t1439 * t958 + t1444 * t901, pkin(8) * t796 + t1439 * t724 + t1444 * t714, pkin(8) * t802 + t1439 * t725 + t1444 * t715, pkin(8) * t789 + t1439 * t716 + t1444 * t702, pkin(8) * t710 + t1439 * t693 + t1444 * t687, t1439 * t815 + t1444 * t784, t1439 * t771 + t1444 * t744, t1439 * t797 + t1444 * t766, t1439 * t814 + t1444 * t783, t1439 * t798 + t1444 * t767, t1439 * t849 + t1444 * t816, pkin(8) * t733 + t1439 * t694 + t1444 * t691, pkin(8) * t736 + t1439 * t695 + t1444 * t692, pkin(8) * t727 + t1439 * t690 + t1444 * t683, pkin(8) * t689 + t1439 * t682 + t1444 * t681; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1416, t1417, 0, 0, (t1426 * t1443 * t1547 + t1397 * t1431) * t1438, t1403 * t1434 + t1431 * t1499, t1379 * t1434 + t1431 * t1496, (t1398 * t1431 - t1547 * t1624) * t1443, t1380 * t1434 + t1431 * t1494, t1434 * t1420, pkin(1) * t1343 - t1355 * t1434 + t1431 * t1582, pkin(1) * t1331 - t1356 * t1434 + t1431 * t1583, pkin(1) * t1328 + t1431 * t1464, pkin(1) * t1292 + t1310 * t1671, t1241 * t1434 + t1431 * t1509, t1187 * t1434 + t1431 * t1521, t1203 * t1434 + t1431 * t1517, t1239 * t1434 + t1431 * t1510, t1204 * t1434 + t1431 * t1516, t1279 * t1434 + t1431 * t1507, pkin(1) * t1100 + t1045 * t1434 + t1431 * t1466, pkin(1) * t1102 + t1051 * t1434 + t1431 * t1465, pkin(1) * t1058 + t1015 * t1434 + t1431 * t1467, pkin(1) * t943 + t1002 * t1434 + t1431 * t1468, t1114 * t1434 + t1431 * t1530, t1041 * t1434 + t1431 * t1542, t1103 * t1434 + t1431 * t1533, t1113 * t1434 + t1431 * t1531, t1104 * t1434 + t1431 * t1532, t1173 * t1434 + t1431 * t1524, pkin(1) * t945 + t1431 * t1472 + t1434 * t876, pkin(1) * t966 + t1431 * t1471 + t1434 * t883, pkin(1) * t911 + t1431 * t1481 + t1434 * t820, pkin(1) * t786 + t1431 * t1482 + t1434 * t772, t1431 * t1548 + t1434 * t997, t1431 * t1554 + t1434 * t917, t1431 * t1551 + t1434 * t946, t1431 * t1549 + t1434 * t996, t1431 * t1550 + t1434 * t947, t1017 * t1434 + t1431 * t1545, pkin(1) * t832 + t1431 * t1484 + t1434 * t759, pkin(1) * t836 + t1431 * t1483 + t1434 * t763, pkin(1) * t819 + t1431 * t1485 + t1434 * t740, pkin(1) * t730 + t1431 * t1488 + t1434 * t705, t1431 * t1558 + t1434 * t863, t1431 * t1564 + t1434 * t811, t1431 * t1561 + t1434 * t837, t1431 * t1559 + t1434 * t862, t1431 * t1560 + t1434 * t838, t1431 * t1556 + t1434 * t907, pkin(1) * t756 + t1431 * t1487 + t1434 * t707, pkin(1) * t762 + t1431 * t1486 + t1434 * t712, pkin(1) * t743 + t1431 * t1489 + t1434 * t698, pkin(1) * t697 + t1431 * t1490 + t1434 * t684;];
tauB_reg  = t1;
