% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x33]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR9_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR9_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR9_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR9_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:10:17
% EndTime: 2019-03-09 19:10:33
% DurationCPUTime: 5.48s
% Computational Cost: add. (13673->472), mult. (42714->881), div. (0->0), fcn. (44161->14), ass. (0->228)
t185 = sin(qJ(5));
t296 = -0.4e1 * t185;
t188 = cos(qJ(6));
t184 = sin(qJ(6));
t256 = qJD(6) * t184;
t189 = cos(qJ(5));
t179 = sin(pkin(7));
t180 = sin(pkin(6));
t187 = sin(qJ(2));
t265 = qJD(2) * t187;
t232 = t180 * t265;
t223 = t179 * t232;
t178 = sin(pkin(13));
t181 = cos(pkin(13));
t182 = cos(pkin(7));
t183 = cos(pkin(6));
t190 = cos(qJ(3));
t271 = t187 * t190;
t186 = sin(qJ(3));
t191 = cos(qJ(2));
t272 = t186 * t191;
t200 = t182 * t272 + t271;
t263 = qJD(3) * t186;
t235 = t179 * t263;
t90 = t183 * t235 + (t200 * qJD(3) + (t182 * t271 + t272) * qJD(2)) * t180;
t262 = qJD(3) * t190;
t234 = t179 * t262;
t269 = t190 * t191;
t273 = t186 * t187;
t293 = t182 * t269 - t273;
t91 = t183 * t234 + (t293 * qJD(3) + (-t182 * t273 + t269) * qJD(2)) * t180;
t66 = -t178 * t90 + t181 * t91;
t277 = t180 * t191;
t149 = t179 * t277 - t183 * t182;
t278 = t179 * t190;
t114 = -t293 * t180 - t183 * t278;
t279 = t179 * t186;
t115 = t180 * t200 + t183 * t279;
t79 = -t114 * t178 + t115 * t181;
t72 = -t149 * t185 + t189 * t79;
t45 = qJD(5) * t72 + t185 * t66 - t189 * t223;
t71 = t149 * t189 + t185 * t79;
t204 = -t188 * t45 + t256 * t71;
t295 = t204 * t185;
t276 = t182 * t186;
t166 = pkin(2) * t276;
t289 = -pkin(10) - qJ(4);
t294 = (t289 * t278 - t166) * qJD(3) - qJD(4) * t279;
t143 = (t178 * t190 + t181 * t186) * t179;
t121 = t143 * t185 - t189 * t182;
t258 = qJD(5) * t189;
t239 = t188 * t258;
t197 = -t185 * t256 + t239;
t274 = t185 * t188;
t122 = t143 * t189 + t182 * t185;
t139 = -t178 * t235 + t181 * t234;
t94 = qJD(5) * t122 + t185 * t139;
t292 = -t121 * t197 - t94 * t274;
t142 = t178 * t279 - t181 * t278;
t157 = (-pkin(3) * t190 - pkin(2)) * t179;
t101 = t142 * pkin(4) - t143 * pkin(11) + t157;
t275 = t182 * t190;
t167 = pkin(2) * t275;
t228 = t289 * t186;
t127 = t182 * pkin(3) + t179 * t228 + t167;
t268 = pkin(10) * t278 + t166;
t135 = qJ(4) * t278 + t268;
t96 = t178 * t127 + t181 * t135;
t82 = pkin(11) * t182 + t96;
t287 = t185 * t101 + t189 * t82;
t241 = t182 * t262;
t163 = pkin(2) * t241;
t110 = t163 + (qJD(3) * t228 + qJD(4) * t190) * t179;
t76 = t181 * t110 + t294 * t178;
t138 = qJD(3) * t143;
t162 = pkin(3) * t235;
t98 = pkin(4) * t138 - pkin(11) * t139 + t162;
t41 = -qJD(5) * t287 - t185 * t76 + t189 * t98;
t291 = pkin(1) * t183;
t252 = t187 * t291;
t198 = -pkin(9) * t277 - t252;
t112 = (t179 * t183 + t182 * t277) * pkin(10) - t198;
t107 = t190 * t112;
t221 = t180 * (-pkin(10) * t182 - pkin(9));
t211 = t187 * t221;
t120 = (pkin(1) * t191 + pkin(2)) * t183 + t211;
t264 = qJD(2) * t191;
t164 = t264 * t291;
t123 = qJD(2) * t211 + t164;
t124 = (t191 * t221 - t252) * qJD(2);
t290 = pkin(10) * t179;
t136 = (-pkin(2) * t191 - t187 * t290 - pkin(1)) * t180;
t140 = (pkin(2) * t187 - t191 * t290) * t180 * qJD(2);
t49 = -t123 * t186 + t124 * t275 + t140 * t278 + (-t107 + (-t120 * t182 - t136 * t179) * t186) * qJD(3);
t31 = pkin(3) * t223 - qJ(4) * t91 - qJD(4) * t115 + t49;
t48 = t112 * t263 - t120 * t241 - t190 * t123 - t124 * t276 - t136 * t234 - t140 * t279;
t35 = -qJ(4) * t90 - qJD(4) * t114 - t48;
t18 = t178 * t31 + t181 * t35;
t16 = pkin(11) * t223 + t18;
t65 = t178 * t91 + t181 * t90;
t92 = -t124 * t179 + t182 * t140;
t70 = pkin(3) * t90 + t92;
t26 = pkin(4) * t65 - pkin(11) * t66 + t70;
t218 = -t112 * t186 + t120 * t275 + t136 * t278;
t55 = -pkin(3) * t149 - qJ(4) * t115 + t218;
t244 = t120 * t276 + t136 * t279 + t107;
t62 = -qJ(4) * t114 + t244;
t34 = t178 * t55 + t181 * t62;
t29 = -pkin(11) * t149 + t34;
t87 = -t120 * t179 + t182 * t136;
t73 = pkin(3) * t114 + t87;
t78 = t181 * t114 + t115 * t178;
t46 = pkin(4) * t78 - pkin(11) * t79 + t73;
t288 = t185 * t46 + t189 * t29;
t6 = -qJD(5) * t288 - t185 * t16 + t189 * t26;
t44 = -qJD(5) * t71 + t185 * t223 + t189 * t66;
t52 = t184 * t72 - t188 * t78;
t21 = -qJD(6) * t52 + t184 * t65 + t188 * t44;
t286 = t184 * t21;
t93 = -qJD(5) * t121 + t189 * t139;
t99 = t122 * t184 - t188 * t142;
t56 = -qJD(6) * t99 + t184 * t138 + t188 * t93;
t285 = t184 * t56;
t284 = t21 * t188;
t283 = qJD(5) * t52;
t282 = qJD(5) * t99;
t170 = pkin(3) * t178 + pkin(11);
t281 = t170 * t185;
t280 = t170 * t189;
t270 = t188 * t189;
t176 = t188 ^ 2;
t267 = t184 ^ 2 - t176;
t175 = t185 ^ 2;
t266 = -t189 ^ 2 + t175;
t261 = qJD(5) * t184;
t260 = qJD(5) * t185;
t259 = qJD(5) * t188;
t257 = qJD(6) * t175;
t255 = qJD(6) * t188;
t254 = qJD(6) * t189;
t253 = -0.2e1 * pkin(5) * qJD(6);
t171 = -pkin(3) * t181 - pkin(4);
t251 = 0.2e1 * qJD(5) * t171;
t249 = t71 * t261;
t248 = t71 * t259;
t247 = t184 * t280;
t246 = t170 * t270;
t173 = t180 ^ 2;
t243 = t173 * t264;
t172 = t179 ^ 2;
t242 = t172 * t262;
t240 = t121 * t261;
t238 = t170 * t257;
t237 = t184 * t254;
t236 = t188 * t254;
t231 = t180 * t264;
t230 = t184 * t255;
t229 = t185 * t258;
t33 = -t178 * t62 + t181 * t55;
t100 = t122 * t188 + t142 * t184;
t227 = t100 * t260 - t56 * t189;
t75 = t110 * t178 - t181 * t294;
t95 = t127 * t181 - t178 * t135;
t226 = t267 * qJD(6);
t225 = t266 * qJD(5);
t224 = t172 * t232;
t222 = t184 * t239;
t220 = -pkin(5) * t189 - pkin(12) * t185;
t219 = pkin(5) * t185 - pkin(12) * t189;
t13 = pkin(12) * t78 + t288;
t28 = pkin(4) * t149 - t33;
t24 = pkin(5) * t71 - pkin(12) * t72 + t28;
t8 = t13 * t188 + t184 * t24;
t17 = -t178 * t35 + t181 * t31;
t53 = t184 * t78 + t188 * t72;
t216 = -t184 * t53 - t188 * t52;
t59 = pkin(12) * t142 + t287;
t81 = -pkin(4) * t182 - t95;
t67 = pkin(5) * t121 - pkin(12) * t122 + t81;
t39 = t184 * t67 + t188 * t59;
t19 = -t185 * t29 + t189 * t46;
t213 = -t100 * t184 - t188 * t99;
t68 = t101 * t189 - t185 * t82;
t12 = -pkin(5) * t78 - t19;
t4 = -t65 * pkin(5) - t6;
t210 = t12 * t255 + t4 * t184;
t209 = t12 * t256 - t4 * t188;
t208 = t185 * t65 + t258 * t78;
t37 = -t138 * pkin(5) - t41;
t58 = -pkin(5) * t142 - t68;
t207 = t37 * t184 + t255 * t58;
t206 = -t37 * t188 + t256 * t58;
t205 = t184 * t45 + t255 * t71;
t203 = t219 * t184;
t202 = t121 * t255 + t184 * t94;
t201 = t121 * t256 - t188 * t94;
t155 = t171 + t220;
t118 = t155 * t184 + t246;
t5 = -t189 * t16 - t185 * t26 - t46 * t258 + t260 * t29;
t40 = -t101 * t258 - t185 * t98 - t189 * t76 + t260 * t82;
t199 = t138 * t185 + t142 * t258;
t151 = t185 * t259 + t237;
t196 = pkin(5) * t94 - pkin(12) * t93 + t75;
t195 = -pkin(12) * t65 + t5;
t194 = -pkin(12) * t138 + t40;
t15 = -pkin(4) * t223 - t17;
t192 = pkin(5) * t45 - pkin(12) * t44 + t15;
t153 = t184 * t260 - t236;
t152 = -t184 * t258 - t185 * t255;
t148 = t198 * qJD(2);
t147 = pkin(9) * t232 - t164;
t146 = t268 * qJD(3);
t145 = pkin(10) * t235 - t163;
t117 = t155 * t188 - t247;
t102 = t138 * t189 - t142 * t260;
t85 = -t118 * qJD(6) + (t184 * t281 + t188 * t219) * qJD(5);
t84 = -qJD(5) * t203 + t151 * t170 - t155 * t255;
t57 = qJD(6) * t100 - t188 * t138 + t184 * t93;
t51 = t53 * t260;
t47 = t189 * t65 - t260 * t78;
t38 = -t184 * t59 + t188 * t67;
t22 = qJD(6) * t53 + t184 * t44 - t188 * t65;
t11 = -qJD(6) * t39 + t184 * t194 + t188 * t196;
t10 = -t184 * t196 + t188 * t194 - t255 * t67 + t256 * t59;
t7 = -t13 * t184 + t188 * t24;
t2 = -qJD(6) * t8 + t184 * t195 + t188 * t192;
t1 = t13 * t256 - t184 * t192 + t188 * t195 - t24 * t255;
t3 = [0, 0, 0, 0.2e1 * t187 * t243, 0.2e1 * (-t187 ^ 2 + t191 ^ 2) * t173 * qJD(2), 0.2e1 * t183 * t231, -0.2e1 * t183 * t232, 0, -0.2e1 * pkin(1) * t173 * t265 + 0.2e1 * t148 * t183, -0.2e1 * pkin(1) * t243 + 0.2e1 * t147 * t183, 0.2e1 * t115 * t91, -0.2e1 * t114 * t91 - 0.2e1 * t115 * t90, 0.2e1 * t115 * t223 - 0.2e1 * t149 * t91, -0.2e1 * t114 * t223 + 0.2e1 * t149 * t90, -0.2e1 * t149 * t223, 0.2e1 * t92 * t114 - 0.2e1 * t49 * t149 + 0.2e1 * t218 * t223 + 0.2e1 * t87 * t90, 0.2e1 * t92 * t115 - 0.2e1 * t48 * t149 - 0.2e1 * t223 * t244 + 0.2e1 * t87 * t91, -0.2e1 * t17 * t79 - 0.2e1 * t18 * t78 - 0.2e1 * t33 * t66 - 0.2e1 * t34 * t65, 0.2e1 * t17 * t33 + 0.2e1 * t18 * t34 + 0.2e1 * t70 * t73, 0.2e1 * t72 * t44, -0.2e1 * t44 * t71 - 0.2e1 * t45 * t72, 0.2e1 * t44 * t78 + 0.2e1 * t65 * t72, -0.2e1 * t45 * t78 - 0.2e1 * t65 * t71, 0.2e1 * t78 * t65, 0.2e1 * t15 * t71 + 0.2e1 * t19 * t65 + 0.2e1 * t28 * t45 + 0.2e1 * t6 * t78, 0.2e1 * t15 * t72 + 0.2e1 * t28 * t44 - 0.2e1 * t288 * t65 + 0.2e1 * t5 * t78, 0.2e1 * t53 * t21, -0.2e1 * t21 * t52 - 0.2e1 * t22 * t53, 0.2e1 * t21 * t71 + 0.2e1 * t45 * t53, -0.2e1 * t22 * t71 - 0.2e1 * t45 * t52, 0.2e1 * t71 * t45, 0.2e1 * t12 * t22 + 0.2e1 * t2 * t71 + 0.2e1 * t4 * t52 + 0.2e1 * t45 * t7, 0.2e1 * t1 * t71 + 0.2e1 * t12 * t21 + 0.2e1 * t4 * t53 - 0.2e1 * t45 * t8; 0, 0, 0, 0, 0, t231, -t232, 0, t148, t147 (t115 * t262 + t186 * t91) * t179 (-t186 * t90 + t190 * t91 + (-t114 * t190 - t115 * t186) * qJD(3)) * t179, -t149 * t234 + t182 * t91 + t186 * t224, t149 * t235 - t182 * t90 + t190 * t224, t182 * t223, t146 * t149 + (-pkin(10) * t279 + t167) * t223 + t49 * t182 - t179 * pkin(2) * t90 - t92 * t278 + t87 * t235, -t145 * t149 + t48 * t182 + (-pkin(2) * t91 + t92 * t186 - t232 * t268 + t262 * t87) * t179, -t138 * t34 - t139 * t33 - t142 * t18 - t143 * t17 - t65 * t96 - t66 * t95 + t75 * t79 - t76 * t78, t157 * t70 + t162 * t73 + t17 * t95 + t18 * t96 - t33 * t75 + t34 * t76, t122 * t44 + t72 * t93, -t121 * t44 - t122 * t45 - t71 * t93 - t72 * t94, t122 * t65 + t138 * t72 + t142 * t44 + t78 * t93, -t121 * t65 - t138 * t71 - t142 * t45 - t78 * t94, t138 * t78 + t142 * t65, t121 * t15 + t138 * t19 + t142 * t6 + t28 * t94 + t41 * t78 + t45 * t81 + t65 * t68 + t71 * t75, t122 * t15 - t138 * t288 + t142 * t5 + t28 * t93 - t287 * t65 + t40 * t78 + t44 * t81 + t72 * t75, t100 * t21 + t53 * t56, -t100 * t22 - t21 * t99 - t52 * t56 - t53 * t57, t100 * t45 + t121 * t21 + t53 * t94 + t56 * t71, -t121 * t22 - t45 * t99 - t52 * t94 - t57 * t71, t121 * t45 + t71 * t94, t11 * t71 + t12 * t57 + t121 * t2 + t22 * t58 + t37 * t52 + t38 * t45 + t4 * t99 + t7 * t94, t1 * t121 + t10 * t71 + t100 * t4 + t12 * t56 + t21 * t58 + t37 * t53 - t39 * t45 - t8 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t186 * t242, 0.2e1 * (-t186 ^ 2 + t190 ^ 2) * t172 * qJD(3), 0.2e1 * t182 * t234, -0.2e1 * t182 * t235, 0, -0.2e1 * pkin(2) * t172 * t263 - 0.2e1 * t146 * t182, -0.2e1 * pkin(2) * t242 + 0.2e1 * t145 * t182, -0.2e1 * t138 * t96 - 0.2e1 * t139 * t95 - 0.2e1 * t142 * t76 + 0.2e1 * t143 * t75, 0.2e1 * t157 * t162 - 0.2e1 * t75 * t95 + 0.2e1 * t76 * t96, 0.2e1 * t122 * t93, -0.2e1 * t121 * t93 - 0.2e1 * t122 * t94, 0.2e1 * t122 * t138 + 0.2e1 * t142 * t93, -0.2e1 * t121 * t138 - 0.2e1 * t142 * t94, 0.2e1 * t142 * t138, 0.2e1 * t121 * t75 + 0.2e1 * t138 * t68 + 0.2e1 * t142 * t41 + 0.2e1 * t81 * t94, 0.2e1 * t122 * t75 - 0.2e1 * t138 * t287 + 0.2e1 * t142 * t40 + 0.2e1 * t81 * t93, 0.2e1 * t100 * t56, -0.2e1 * t100 * t57 - 0.2e1 * t56 * t99, 0.2e1 * t100 * t94 + 0.2e1 * t121 * t56, -0.2e1 * t121 * t57 - 0.2e1 * t94 * t99, 0.2e1 * t121 * t94, 0.2e1 * t11 * t121 + 0.2e1 * t37 * t99 + 0.2e1 * t38 * t94 + 0.2e1 * t57 * t58, 0.2e1 * t10 * t121 + 0.2e1 * t100 * t37 - 0.2e1 * t39 * t94 + 0.2e1 * t56 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, -t90, t223, t49, t48 (-t178 * t65 - t181 * t66) * pkin(3) (t17 * t181 + t178 * t18) * pkin(3), t185 * t44 + t258 * t72, -t185 * t45 + t44 * t189 + (-t185 * t72 - t189 * t71) * qJD(5), t208, t47, 0, -t65 * t281 - t15 * t189 + t171 * t45 + (t185 * t28 - t280 * t78) * qJD(5), -t65 * t280 + t15 * t185 + t171 * t44 + (t189 * t28 + t281 * t78) * qJD(5), t53 * t239 + (-t256 * t53 + t284) * t185, t216 * t258 + (-t286 - t188 * t22 + (t184 * t52 - t188 * t53) * qJD(6)) * t185, t51 + (-t21 + t248) * t189 - t295 (t22 - t249) * t189 + (-t205 - t283) * t185, -t189 * t45 + t260 * t71, t117 * t45 + t71 * t85 + (-t2 + (t12 * t184 + t170 * t52) * qJD(5)) * t189 + (qJD(5) * t7 + t170 * t22 + t210) * t185, -t118 * t45 + t71 * t84 + (-t1 + (t12 * t188 + t170 * t53) * qJD(5)) * t189 + (-qJD(5) * t8 + t170 * t21 - t209) * t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t234, -t235, 0, -t146, t145 (-t138 * t178 - t139 * t181) * pkin(3) (t178 * t76 - t181 * t75) * pkin(3), t122 * t258 + t185 * t93, -t185 * t94 + t93 * t189 + (-t121 * t189 - t122 * t185) * qJD(5), t199, t102, 0, -t138 * t281 + t171 * t94 - t189 * t75 + (-t142 * t280 + t185 * t81) * qJD(5), -t138 * t280 + t171 * t93 + t185 * t75 + (t142 * t281 + t189 * t81) * qJD(5), t100 * t197 + t274 * t56, t213 * t258 + (-t285 - t188 * t57 + (-t100 * t188 + t184 * t99) * qJD(6)) * t185, t227 - t292 (t57 - t240) * t189 + (-t202 - t282) * t185, t121 * t260 - t189 * t94, t117 * t94 + t121 * t85 + (-t11 + (t170 * t99 + t184 * t58) * qJD(5)) * t189 + (qJD(5) * t38 + t170 * t57 + t207) * t185, -t118 * t94 + t121 * t84 + (-t10 + (t100 * t170 + t188 * t58) * qJD(5)) * t189 + (-qJD(5) * t39 + t170 * t56 - t206) * t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t229, -0.2e1 * t225, 0, 0, 0, t185 * t251, t189 * t251, -0.2e1 * t175 * t230 + 0.2e1 * t176 * t229, t222 * t296 + 0.2e1 * t257 * t267, 0.2e1 * t185 * t237 + 0.2e1 * t259 * t266, -0.2e1 * t184 * t225 + 0.2e1 * t185 * t236, -0.2e1 * t229, 0.2e1 * t188 * t238 - 0.2e1 * t85 * t189 + 0.2e1 * (t117 + 0.2e1 * t247) * t260, -0.2e1 * t184 * t238 - 0.2e1 * t84 * t189 + 0.2e1 * (-t118 + 0.2e1 * t246) * t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, 0, 0, 0, 0, t47, -t208, 0, 0, 0, 0, 0 (-t22 - t249) * t189 + (-t205 + t283) * t185, t51 + (-t21 - t248) * t189 + t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, 0, 0, 0, 0, 0, t102, -t199, 0, 0, 0, 0, 0 (-t57 - t240) * t189 + (-t202 + t282) * t185, t227 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t45, t65, t6, t5, t255 * t53 + t286, qJD(6) * t216 - t184 * t22 + t284, t205, -t204, 0, -pkin(5) * t22 - pkin(12) * t205 + t209, -pkin(5) * t21 + pkin(12) * t204 + t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, -t94, t138, t41, t40, t100 * t255 + t285, qJD(6) * t213 - t184 * t57 + t56 * t188, t202, -t201, 0, -pkin(5) * t57 - pkin(12) * t202 + t206, -pkin(5) * t56 + pkin(12) * t201 + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, -t260, 0, -t170 * t258, t170 * t260, -t185 * t226 + t222, t230 * t296 - t258 * t267, t153, t151, 0 (pkin(12) * t270 + (-pkin(5) * t188 + t170 * t184) * t185) * qJD(6) + (t184 * t220 - t246) * qJD(5) (t170 * t274 + t203) * qJD(6) + (t188 * t220 + t247) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, -t258, 0, 0, 0, 0, 0, -t151, t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t230, -0.2e1 * t226, 0, 0, 0, t184 * t253, t188 * t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, -t22, t45, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t57, t94, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, t152, t260, t85, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, -t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, -t256, 0, -pkin(12) * t255, pkin(12) * t256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
