% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRR9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR9_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:10:33
% EndTime: 2019-03-09 19:11:50
% DurationCPUTime: 48.15s
% Computational Cost: add. (67419->1128), mult. (201107->1520), div. (0->0), fcn. (170625->16), ass. (0->491)
t469 = cos(pkin(7));
t474 = sin(qJ(2));
t478 = cos(qJ(3));
t681 = t474 * t478;
t473 = sin(qJ(3));
t479 = cos(qJ(2));
t683 = t473 * t479;
t537 = t469 * t681 + t683;
t468 = sin(pkin(6));
t655 = qJD(1) * t468;
t360 = t537 * t655;
t467 = sin(pkin(7));
t650 = qJD(3) * t473;
t620 = t467 * t650;
t778 = t360 - t620;
t470 = cos(pkin(6));
t455 = t470 * t479 * pkin(1);
t443 = qJD(1) * t455;
t732 = pkin(10) * t469;
t624 = pkin(9) + t732;
t576 = t468 * t624;
t545 = t474 * t576;
t333 = -qJD(1) * t545 + t443;
t735 = pkin(1) * t474;
t454 = t470 * t735;
t492 = -t479 * t576 - t454;
t334 = t492 * qJD(1);
t733 = pkin(10) * t467;
t544 = pkin(2) * t474 - t479 * t733;
t377 = t544 * t655;
t649 = qJD(3) * t478;
t619 = t469 * t649;
t689 = t469 * t473;
t696 = t467 * t473;
t781 = pkin(2) * t619 - t478 * t333 - t334 * t689 - t377 * t696;
t688 = t469 * t478;
t694 = t467 * t478;
t194 = -t333 * t473 + t334 * t688 + t377 * t694;
t676 = t478 * t479;
t684 = t473 * t474;
t535 = -t469 * t684 + t676;
t506 = t468 * t535;
t361 = qJD(1) * t506;
t452 = pkin(2) * t689;
t653 = qJD(1) * t474;
t623 = t468 * t653;
t585 = t467 * t623;
t730 = pkin(10) + qJ(4);
t614 = t730 * t467;
t780 = pkin(3) * t585 - qJ(4) * t361 + t194 - (-t478 * t614 - t452) * qJD(3) + qJD(4) * t696;
t613 = t730 * t473;
t779 = qJ(4) * t360 + (-qJD(3) * t613 + qJD(4) * t478) * t467 + t781;
t466 = sin(pkin(13));
t718 = cos(pkin(13));
t604 = t478 * t718;
t577 = t467 * t604;
t666 = qJD(3) * t577 - t361 * t718 + t466 * t778;
t412 = -t478 * t466 - t473 * t718;
t383 = t412 * t467;
t759 = qJD(3) * t383 + t360 * t718 + t361 * t466;
t267 = -t334 * t467 + t469 * t377;
t546 = -pkin(3) * t778 - t267;
t670 = -t466 * t780 + t779 * t718;
t777 = pkin(11) * t585 - t670;
t776 = -t759 * pkin(4) - pkin(11) * t666 + t546;
t671 = t779 * t466 + t718 * t780;
t472 = sin(qJ(5));
t477 = cos(qJ(5));
t644 = t477 * qJD(5);
t648 = qJD(5) * t472;
t669 = -t383 * t648 - t469 * t644 + t472 * t585 - t477 * t666;
t332 = -t383 * t477 + t469 * t472;
t668 = qJD(5) * t332 + t472 * t666 + t477 * t585;
t640 = qJD(1) * qJD(2);
t609 = t479 * t640;
t638 = qJDD(1) * t474;
t775 = t609 + t638;
t582 = t473 * t623;
t652 = qJD(1) * t479;
t622 = t468 * t652;
t584 = t469 * t622;
t654 = qJD(1) * t470;
t447 = qJD(2) + t654;
t700 = t447 * t467;
t299 = -t582 + (t584 + t700) * t478;
t536 = t469 * t683 + t681;
t505 = t536 * t468;
t300 = qJD(1) * t505 + t447 * t696;
t223 = -t718 * t299 + t300 * t466;
t755 = qJD(5) + t223;
t480 = cos(qJ(1));
t675 = t479 * t480;
t475 = sin(qJ(1));
t682 = t474 * t475;
t395 = -t470 * t675 + t682;
t690 = t468 * t480;
t337 = -t395 * t467 + t469 * t690;
t385 = t412 * t469;
t679 = t475 * t479;
t680 = t474 * t480;
t396 = t470 * t680 + t679;
t685 = t473 * t466;
t523 = t604 - t685;
t495 = -t383 * t690 - t385 * t395 - t396 * t523;
t170 = t337 * t472 + t477 * t495;
t382 = t467 * t685 - t577;
t384 = t523 * t469;
t210 = t382 * t690 - t384 * t395 + t396 * t412;
t471 = sin(qJ(6));
t476 = cos(qJ(6));
t774 = t170 * t471 - t210 * t476;
t773 = t170 * t476 + t210 * t471;
t453 = pkin(2) * t688;
t343 = pkin(3) * t469 - t467 * t613 + t453;
t401 = pkin(10) * t694 + t452;
t367 = qJ(4) * t694 + t401;
t272 = t466 * t343 + t718 * t367;
t254 = pkin(11) * t469 + t272;
t734 = pkin(3) * t478;
t461 = pkin(2) + t734;
t418 = t461 * t467;
t281 = pkin(4) * t382 + pkin(11) * t383 - t418;
t723 = -t254 * t648 + t281 * t644 + t776 * t472 - t477 * t777;
t672 = pkin(4) * t585 + t671;
t691 = t468 * t479;
t293 = pkin(10) * t700 + (t624 * t691 + t454) * qJD(1);
t297 = pkin(2) * t447 + t333;
t543 = pkin(2) * t479 + t474 * t733;
t529 = -pkin(1) - t543;
t368 = t529 * t468;
t349 = qJD(1) * t368;
t181 = t473 * (t297 * t469 + t349 * t467) + t478 * t293;
t772 = qJD(3) * t181;
t237 = -t297 * t467 + t469 * t349;
t189 = -pkin(3) * t299 + qJD(4) + t237;
t522 = t466 * t299 + t300 * t718;
t101 = pkin(4) * t223 - pkin(11) * t522 + t189;
t596 = t447 * t469 - t467 * t622;
t563 = qJD(3) + t596;
t180 = -t473 * t293 + t297 * t688 + t349 * t694;
t148 = -t300 * qJ(4) + t180;
t139 = pkin(3) * t563 + t148;
t149 = qJ(4) * t299 + t181;
t603 = t718 * t149;
t82 = t466 * t139 + t603;
t75 = pkin(11) * t563 + t82;
t41 = t477 * t101 - t472 * t75;
t639 = qJDD(1) * t470;
t446 = qJDD(2) + t639;
t637 = qJDD(1) * t479;
t607 = t468 * t637;
t578 = t469 * t607;
t615 = t467 * t649;
t754 = qJD(3) * t584 + t468 * t775;
t191 = t582 * (qJD(2) * t469 + qJD(3)) - t446 * t696 - t447 * t615 - t473 * t578 - t754 * t478;
t610 = t474 * t640;
t581 = t468 * t610;
t701 = t446 * t469;
t302 = qJDD(3) + t701 + (t581 - t607) * t467;
t611 = t470 * t640;
t589 = pkin(1) * t611;
t633 = pkin(1) * t639;
t625 = pkin(9) * t607 + t474 * t633 + t479 * t589;
t295 = -pkin(9) * t581 + t625;
t518 = -t610 + t637;
t702 = t446 * t467;
t233 = (t468 * t469 * t518 + t702) * pkin(10) + t295;
t502 = t775 * pkin(9);
t441 = t479 * t633;
t520 = -t474 * t589 + t441;
t239 = pkin(2) * t446 + (-t732 * t775 - t502) * t468 + t520;
t509 = t544 * qJD(2);
t285 = (qJD(1) * t509 + qJDD(1) * t529) * t468;
t567 = -t473 * t233 + t239 * t688 + t285 * t694;
t84 = t567 - t772;
t63 = pkin(3) * t302 + qJ(4) * t191 - qJD(4) * t300 + t84;
t542 = t447 * t620 + t473 * t754 + t581 * t688 + t623 * t649;
t482 = -t478 * (t578 + t702) + t542;
t494 = -t478 * t233 - t239 * t689 - t285 * t696 + t293 * t650 - t297 * t619 - t349 * t615;
t68 = -qJ(4) * t482 + t299 * qJD(4) - t494;
t26 = t466 * t63 + t718 * t68;
t24 = pkin(11) * t302 + t26;
t163 = -t467 * t239 + t469 * t285;
t113 = pkin(3) * t482 + qJDD(4) + t163;
t125 = -t191 * t718 - t466 * t482;
t598 = t466 * t191 - t718 * t482;
t40 = -pkin(4) * t598 - t125 * pkin(11) + t113;
t528 = -t101 * t644 - t477 * t24 - t472 * t40 + t648 * t75;
t771 = -t41 * t755 - t528;
t557 = -qJDD(5) + t598;
t740 = qJD(5) * t755;
t756 = t223 * t755 + t740;
t770 = t472 * t557 - t477 * t756;
t769 = pkin(12) * t759 - t723;
t42 = t472 * t101 + t477 * t75;
t768 = t223 * t42;
t767 = pkin(5) * t668 + pkin(12) * t669 + t672;
t86 = t148 * t466 + t603;
t766 = -t86 + t755 * (pkin(5) * t472 - pkin(12) * t477);
t459 = pkin(3) * t466 + pkin(11);
t129 = pkin(3) * t300 + pkin(4) * t522 + pkin(11) * t223;
t145 = t466 * t149;
t87 = t148 * t718 - t145;
t56 = t472 * t129 + t477 * t87;
t765 = pkin(12) * t522 + t459 * t648 + t56;
t188 = t472 * t563 + t477 * t522;
t532 = t476 * t755;
t130 = t188 * t471 - t532;
t597 = t472 * t522 - t477 * t563;
t739 = qJD(6) + t597;
t764 = t130 * t739;
t132 = t476 * t188 + t471 * t755;
t763 = t132 * t739;
t760 = t223 * t522;
t715 = t597 * t223;
t678 = t477 * t223;
t141 = t471 * t522 - t476 * t678;
t646 = qJD(6) * t471;
t758 = t472 * t646 - t476 * t644 + t141;
t627 = t469 * t676;
t757 = t468 * t627 + t470 * t694;
t37 = pkin(12) * t755 + t42;
t81 = t139 * t718 - t145;
t74 = -pkin(4) * t563 - t81;
t50 = pkin(5) * t597 - t188 * pkin(12) + t74;
t16 = t37 * t476 + t471 * t50;
t25 = -t466 * t68 + t718 * t63;
t23 = -pkin(4) * t302 - t25;
t554 = -t477 * t125 - t472 * t302;
t77 = qJD(5) * t597 + t554;
t599 = t472 * t125 - t477 * t302;
t78 = qJD(5) * t188 + t599;
t10 = pkin(5) * t78 + pkin(12) * t77 + t23;
t5 = -pkin(12) * t557 - t528;
t2 = -qJD(6) * t16 + t476 * t10 - t471 * t5;
t753 = -t16 * t739 - t2;
t559 = t37 * t471 - t476 * t50;
t1 = -t559 * qJD(6) + t471 * t10 + t476 * t5;
t752 = t559 * t739 + t1;
t397 = -t470 * t679 - t680;
t398 = -t470 * t682 + t675;
t692 = t468 * t475;
t215 = -t382 * t692 + t384 * t397 + t398 * t412;
t244 = -t382 * t470 + (t384 * t479 + t412 * t474) * t468;
t513 = g(1) * t215 + g(2) * t210 + g(3) * t244;
t751 = t459 * t740 + t23 + t513;
t169 = -t337 * t477 + t472 * t495;
t463 = t468 ^ 2;
t750 = 0.2e1 * t463;
t742 = t477 * t254 + t472 * t281;
t722 = -qJD(5) * t742 + t472 * t777 + t776 * t477;
t330 = pkin(2) * t470 + t455 - t545;
t261 = -t330 * t467 + t469 * t368;
t628 = t468 * t684;
t323 = t628 - t757;
t202 = pkin(3) * t323 + t261;
t324 = t470 * t696 + t505;
t241 = t323 * t718 + t324 * t466;
t242 = -t466 * t323 + t324 * t718;
t117 = pkin(4) * t241 - pkin(11) * t242 + t202;
t394 = t467 * t691 - t470 * t469;
t658 = pkin(9) * t691 + t454;
t318 = (t467 * t470 + t469 * t691) * pkin(10) + t658;
t192 = -t318 * t473 + t330 * t688 + t368 * t694;
t151 = -pkin(3) * t394 - qJ(4) * t324 + t192;
t305 = t478 * t318;
t193 = t330 * t689 + t368 * t696 + t305;
t161 = -qJ(4) * t323 + t193;
t96 = t466 * t151 + t718 * t161;
t90 = -pkin(11) * t394 + t96;
t749 = t472 * t117 + t477 * t90;
t748 = t130 * t755;
t595 = t472 * t755;
t747 = t188 * t595;
t746 = t223 * t563;
t745 = t471 * t739;
t743 = t758 * t739;
t661 = -pkin(10) * t620 + t781;
t660 = -t401 * qJD(3) - t194;
t647 = qJD(6) * t132;
t33 = -t471 * t77 + t476 * t557 + t647;
t391 = t658 * qJD(2);
t605 = t472 * t24 - t477 * t40;
t8 = -qJD(5) * t42 - t605;
t32 = -qJD(6) * t532 + t188 * t646 + t471 * t557 + t476 * t77;
t140 = -t471 * t678 - t476 * t522;
t566 = -t471 * t644 + t140;
t645 = qJD(6) * t476;
t499 = t472 * t645 - t566;
t687 = t471 * t472;
t738 = -t132 * t499 + t32 * t687;
t737 = t459 * t557 + t74 * t755;
t245 = t468 * (-t385 * t479 + t474 * t523) - t383 * t470;
t629 = t467 * t690;
t705 = t396 * t473;
t736 = t478 * (t395 * t469 + t629) + t705;
t444 = qJD(2) * t455;
t335 = -qJD(2) * t545 + t444;
t336 = t492 * qJD(2);
t378 = t468 * t509;
t135 = -t335 * t473 + t336 * t688 + t378 * t694 + (-t305 + (-t330 * t469 - t368 * t467) * t473) * qJD(3);
t266 = t470 * t615 + ((t627 - t684) * qJD(3) + t535 * qJD(2)) * t468;
t651 = qJD(2) * t474;
t621 = t468 * t651;
t583 = t467 * t621;
t92 = pkin(3) * t583 - qJ(4) * t266 - qJD(4) * t324 + t135;
t134 = -t318 * t650 + t330 * t619 + t478 * t335 + t336 * t689 + t368 * t615 + t378 * t696;
t265 = t470 * t620 + (qJD(2) * t537 + qJD(3) * t536) * t468;
t97 = -qJ(4) * t265 - qJD(4) * t323 + t134;
t52 = t466 * t92 + t718 * t97;
t49 = pkin(11) * t583 + t52;
t175 = t265 * t718 + t266 * t466;
t176 = -t466 * t265 + t266 * t718;
t268 = -t336 * t467 + t469 * t378;
t184 = pkin(3) * t265 + t268;
t80 = pkin(4) * t175 - pkin(11) * t176 + t184;
t14 = -qJD(5) * t749 - t472 * t49 + t477 * t80;
t731 = g(3) * t468;
t155 = pkin(12) * t382 + t742;
t271 = t343 * t718 - t466 * t367;
t253 = -t469 * pkin(4) - t271;
t331 = -t383 * t472 - t477 * t469;
t177 = t331 * pkin(5) - t332 * pkin(12) + t253;
t103 = -t155 * t471 + t177 * t476;
t729 = qJD(6) * t103 + t767 * t471 - t476 * t769;
t104 = t155 * t476 + t177 * t471;
t728 = -qJD(6) * t104 + t471 * t769 + t767 * t476;
t727 = pkin(5) * t759 - t722;
t726 = t33 * t477;
t76 = qJDD(6) + t78;
t725 = t471 * t76;
t724 = t476 * t76;
t721 = -t472 * t78 - t597 * t644;
t460 = -pkin(3) * t718 - pkin(4);
t575 = t477 * pkin(5) + t472 * pkin(12);
t408 = -t575 + t460;
t699 = t459 * t477;
t326 = t408 * t476 - t471 * t699;
t720 = qJD(6) * t326 + t471 * t766 - t476 * t765;
t327 = t408 * t471 + t476 * t699;
t719 = -qJD(6) * t327 + t471 * t765 + t476 * t766;
t717 = t132 * t130;
t716 = t132 * t223;
t714 = t188 * t597;
t713 = t188 * t522;
t712 = t522 * t597;
t711 = t522 ^ 2;
t710 = t223 ^ 2;
t709 = t300 * t299;
t707 = t394 * t472;
t706 = t396 * t467;
t704 = t398 * t467;
t703 = t398 * t473;
t698 = t463 * qJD(1) ^ 2;
t697 = t467 * t472;
t695 = t467 * t477;
t693 = t468 * t474;
t686 = t472 * t476;
t674 = t332 * t646 - t382 * t645 + t471 * t759 + t476 * t669;
t280 = t332 * t476 + t382 * t471;
t673 = qJD(6) * t280 - t471 * t669 + t476 * t759;
t630 = t467 * t692;
t636 = pkin(3) * t688;
t667 = t397 * t636 + t630 * t734;
t393 = pkin(3) * t689 - t614;
t664 = -t396 * t393 - t395 * t461;
t663 = -t398 * t393 + t397 * t461;
t662 = -g(1) * t704 - g(2) * t706;
t659 = t757 * pkin(3);
t657 = t480 * pkin(1) + pkin(9) * t692;
t464 = t474 ^ 2;
t465 = t479 ^ 2;
t656 = t464 - t465;
t643 = qJD(2) - t447;
t635 = g(3) * t693;
t632 = t479 * t698;
t631 = t467 * t693;
t612 = pkin(1) * t750;
t606 = -pkin(1) * t475 + pkin(9) * t690;
t601 = t132 * t648 + t32 * t477;
t594 = t739 * t476;
t593 = t447 + t654;
t590 = t446 + t639;
t588 = t474 * t632;
t587 = t478 * t629;
t579 = t474 * t609;
t216 = -t383 * t692 - t385 * t397 + t398 * t523;
t339 = -t397 * t467 + t469 * t692;
t171 = t216 * t472 - t339 * t477;
t573 = g(1) * t169 + g(2) * t171;
t572 = g(1) * t210 - g(2) * t215;
t571 = -g(1) * t337 - g(2) * t339;
t570 = g(1) * t398 + g(2) * t396;
t569 = g(1) * t480 + g(2) * t475;
t568 = -t393 * t693 + t461 * t691;
t51 = -t466 * t97 + t718 * t92;
t561 = -t16 * t471 + t476 * t559;
t560 = -t16 * t476 - t471 * t559;
t46 = pkin(12) * t241 + t749;
t381 = t394 * t477;
t196 = t242 * t472 + t381;
t197 = t242 * t477 - t707;
t95 = t151 * t718 - t466 * t161;
t89 = t394 * pkin(4) - t95;
t65 = t196 * pkin(5) - t197 * pkin(12) + t89;
t20 = t46 * t476 + t471 * t65;
t19 = -t46 * t471 + t476 * t65;
t392 = pkin(3) * t696 + t469 * t730;
t556 = t392 * t692 + t397 * t393 + t398 * t461 + t657;
t53 = t117 * t477 - t472 * t90;
t55 = t129 * t477 - t472 * t87;
t144 = t197 * t476 + t241 * t471;
t178 = -t254 * t472 + t281 * t477;
t248 = -t384 * t396 - t395 * t412;
t249 = t385 * t396 - t395 * t523;
t548 = t249 * pkin(4) - pkin(11) * t248 + t664;
t250 = -t384 * t398 + t397 * t412;
t251 = t385 * t398 + t397 * t523;
t547 = t251 * pkin(4) - pkin(11) * t250 + t663;
t540 = -t645 * t739 - t725;
t538 = t397 * t469 + t630;
t534 = t522 * t563;
t531 = t566 * t739;
t36 = -pkin(5) * t755 - t41;
t530 = -pkin(12) * t76 + t36 * t739;
t13 = t117 * t644 + t472 * t80 + t477 * t49 - t648 * t90;
t527 = t392 * t690 + t395 * t393 - t396 * t461 + t606;
t526 = qJD(3) * t563;
t517 = g(1) * t171 - g(2) * t169 - g(3) * (-t245 * t472 - t381);
t172 = t216 * t477 + t339 * t472;
t204 = t245 * t477 - t707;
t516 = -g(1) * t172 + g(2) * t170 - g(3) * t204;
t205 = t249 * t472 - t396 * t695;
t207 = t251 * t472 - t398 * t695;
t288 = (t385 * t474 + t479 * t523) * t468;
t258 = t288 * t472 - t477 * t631;
t515 = -g(1) * t207 - g(2) * t205 - g(3) * t258;
t514 = -g(1) * t216 + g(2) * t495 - g(3) * t245;
t287 = -t384 * t693 + t412 * t691;
t512 = g(1) * t250 + g(2) * t248 + g(3) * t287;
t511 = -g(1) * t339 + g(2) * t337 + g(3) * t394;
t510 = t395 * t689 - t396 * t478 + t473 * t629;
t6 = pkin(5) * t557 - t8;
t507 = t517 - t6;
t503 = t288 * pkin(4) - pkin(11) * t287 + t568;
t501 = t563 * t631;
t500 = t216 * pkin(4) - pkin(11) * t215 + t556;
t497 = -pkin(3) * t703 + t215 * pkin(4) + pkin(11) * t216 + t667;
t496 = t130 * t758 - t33 * t686;
t491 = -pkin(3) * t628 + t244 * pkin(4) + pkin(11) * t245 + t659;
t490 = pkin(4) * t495 + pkin(11) * t210 + t527;
t487 = -t472 * t756 - t477 * t557;
t48 = -pkin(4) * t583 - t51;
t486 = pkin(12) * qJD(6) * t739 - t507;
t485 = qJD(6) * t561 + t1 * t476 - t2 * t471;
t484 = t478 * t578 - t542;
t365 = t395 * t636;
t483 = -pkin(11) * t495 + t210 * pkin(4) - t365 + (-t587 - t705) * pkin(3);
t400 = -pkin(9) * t693 + t455;
t399 = -pkin(10) * t696 + t453;
t390 = -pkin(9) * t621 + t444;
t387 = t658 * qJD(1);
t386 = -pkin(9) * t623 + t443;
t296 = -t468 * t502 + t520;
t284 = t398 * t478 + t473 * t538;
t283 = t478 * t538 - t703;
t279 = t332 * t471 - t476 * t382;
t259 = t288 * t477 + t472 * t631;
t232 = -qJD(1) * t501 + t302 * t469;
t218 = qJD(2) * t501 - t302 * t394;
t208 = t251 * t477 + t398 * t697;
t206 = t249 * t477 + t396 * t697;
t154 = -pkin(5) * t382 - t178;
t143 = t197 * t471 - t476 * t241;
t120 = t172 * t476 - t215 * t471;
t119 = -t172 * t471 - t215 * t476;
t118 = pkin(5) * t188 + pkin(12) * t597;
t116 = qJD(5) * t197 + t176 * t472 - t477 * t583;
t115 = -t477 * t176 + t242 * t648 + t394 * t644 - t472 * t583;
t58 = qJD(6) * t144 - t115 * t471 - t476 * t175;
t57 = t476 * t115 - t471 * t175 + t197 * t646 - t241 * t645;
t45 = -pkin(5) * t241 - t53;
t43 = -pkin(5) * t522 - t55;
t30 = t118 * t471 + t41 * t476;
t29 = t118 * t476 - t41 * t471;
t21 = t116 * pkin(5) + t115 * pkin(12) + t48;
t12 = -pkin(5) * t175 - t14;
t11 = pkin(12) * t175 + t13;
t4 = -qJD(6) * t20 - t11 * t471 + t21 * t476;
t3 = qJD(6) * t19 + t11 * t476 + t21 * t471;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t475 - g(2) * t480, t569, 0, 0 (qJDD(1) * t464 + 0.2e1 * t579) * t463 (t474 * t637 - t640 * t656) * t750 (qJD(2) * t479 * t593 + t474 * t590) * t468 (qJDD(1) * t465 - 0.2e1 * t579) * t463 (t479 * t590 - t593 * t651) * t468, t446 * t470, g(1) * t396 - g(2) * t398 + t296 * t470 - t391 * t447 + t400 * t446 + t518 * t612, -g(1) * t395 - g(2) * t397 - t295 * t470 - t390 * t447 - t446 * t658 - t612 * t775 ((-qJD(2) * t386 + qJDD(1) * t658 + t295 + (-qJD(2) * t400 + t390) * qJD(1)) * t479 + (-qJD(2) * t387 - qJDD(1) * t400 - t296) * t474 - t569) * t468, t463 * qJDD(1) * pkin(1) ^ 2 - g(1) * t606 - g(2) * t657 + t295 * t658 + t296 * t400 - t386 * t391 + t387 * t390, -t191 * t324 + t266 * t300, t191 * t323 - t300 * t265 + t266 * t299 - t324 * t482, t191 * t394 + t266 * t563 + t300 * t583 + t324 * t302, -t299 * t265 + t323 * t482, -t265 * t563 + t299 * t583 - t323 * t302 + t394 * t482, t218, -g(1) * t510 - g(2) * t284 + t135 * t563 + t163 * t323 + t180 * t583 + t192 * t302 + t237 * t265 + t261 * t482 - t268 * t299 - t84 * t394, -g(1) * t736 - g(2) * t283 - t134 * t563 + t163 * t324 - t181 * t583 - t261 * t191 - t193 * t302 + t237 * t266 + t268 * t300 - t394 * t494, t134 * t299 - t135 * t300 - t180 * t266 - t181 * t265 + t192 * t191 - t193 * t482 + t323 * t494 - t84 * t324 + t571, -t494 * t193 + t181 * t134 + t84 * t192 + t180 * t135 + t163 * t261 + t237 * t268 - g(1) * (-pkin(2) * t396 + t606) - g(2) * (pkin(2) * t398 + t657) + t571 * pkin(10), t125 * t242 + t176 * t522, -t125 * t241 - t175 * t522 - t176 * t223 + t242 * t598, -t125 * t394 + t176 * t563 + t242 * t302 + t522 * t583, t175 * t223 - t241 * t598, -t175 * t563 - t223 * t583 - t241 * t302 - t394 * t598, t218, -g(1) * t495 - g(2) * t216 + t113 * t241 + t189 * t175 + t184 * t223 - t202 * t598 - t25 * t394 + t95 * t302 + t51 * t563 + t583 * t81, t113 * t242 + t202 * t125 + t189 * t176 + t184 * t522 + t26 * t394 - t96 * t302 - t52 * t563 - t583 * t82 + t572, -t125 * t95 - t175 * t82 - t176 * t81 - t223 * t52 - t241 * t26 - t242 * t25 - t51 * t522 + t598 * t96 + t571, -g(1) * t527 - g(2) * t556 + t113 * t202 + t189 * t184 + t25 * t95 + t26 * t96 + t81 * t51 + t82 * t52, -t115 * t188 - t197 * t77, t115 * t597 - t116 * t188 + t196 * t77 - t197 * t78, -t115 * t755 + t188 * t175 - t197 * t557 - t77 * t241, t116 * t597 + t196 * t78, -t116 * t755 - t175 * t597 + t196 * t557 - t78 * t241, t175 * t755 - t241 * t557, -g(1) * t170 - g(2) * t172 + t74 * t116 + t14 * t755 + t41 * t175 + t23 * t196 + t8 * t241 + t48 * t597 - t53 * t557 + t89 * t78, -t74 * t115 - t13 * t755 - t42 * t175 + t48 * t188 + t23 * t197 + t241 * t528 + t557 * t749 - t89 * t77 + t573, t115 * t41 - t116 * t42 - t13 * t597 - t14 * t188 + t196 * t528 - t197 * t8 + t53 * t77 - t749 * t78 - t572, -g(1) * t490 - g(2) * t500 + t42 * t13 + t41 * t14 + t23 * t89 + t74 * t48 - t528 * t749 + t8 * t53, -t132 * t57 - t144 * t32, t130 * t57 - t132 * t58 + t143 * t32 - t144 * t33, t116 * t132 + t144 * t76 - t196 * t32 - t57 * t739, t130 * t58 + t143 * t33, -t116 * t130 - t143 * t76 - t196 * t33 - t58 * t739, t116 * t739 + t196 * t76, -g(1) * t773 - g(2) * t120 - t559 * t116 + t12 * t130 + t6 * t143 + t19 * t76 + t2 * t196 + t45 * t33 + t36 * t58 + t4 * t739, g(1) * t774 - g(2) * t119 - t1 * t196 - t16 * t116 + t12 * t132 + t6 * t144 - t20 * t76 - t3 * t739 - t45 * t32 - t36 * t57, -t1 * t143 - t130 * t3 - t132 * t4 - t144 * t2 - t16 * t58 + t19 * t32 - t20 * t33 - t559 * t57 - t573, t1 * t20 + t16 * t3 + t2 * t19 - t559 * t4 + t6 * t45 + t36 * t12 - g(1) * (pkin(5) * t170 + pkin(12) * t169 + t490) - g(2) * (pkin(5) * t172 + pkin(12) * t171 + t500); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588, t656 * t698 (t643 * t652 + t638) * t468, t588 (-t643 * t653 + t637) * t468, t446, -g(1) * t397 + g(2) * t395 + t387 * t447 + t441 + (-t611 + t698) * t735 + (-g(3) * t479 - t502) * t468, pkin(1) * t632 + t386 * t447 + (pkin(9) * t640 + g(3)) * t693 + t570 - t625, 0, 0, -t191 * t696 + (-t361 + t615) * t300, -t361 * t299 + t300 * t360 + ((qJD(3) * t299 - t191) * t478 + (-t300 * qJD(3) - t482) * t473) * t467, -t191 * t469 - t361 * t563 + (-t300 * t623 + t473 * t302 + t478 * t526) * t467, t299 * t778 - t482 * t694, t484 * t469 + t360 * t563 + (-t473 * t526 - t299 * t623 + (t302 + t701) * t478) * t467, t232, t399 * t302 + t84 * t469 + t267 * t299 - t237 * t360 - g(1) * (t397 * t478 - t398 * t689) - g(2) * (-t395 * t478 - t396 * t689) - g(3) * t506 + (-pkin(2) * t482 - t163 * t478 - t180 * t623 + t237 * t650) * t467 + t660 * t563, -t401 * t302 + t494 * t469 - t267 * t300 - t237 * t361 - g(1) * (-t397 * t473 - t398 * t688) - g(2) * (t395 * t473 - t396 * t688) + t537 * t731 + (pkin(2) * t191 + t163 * t473 + t181 * t623 + t237 * t649) * t467 - t661 * t563, t401 * t484 + t399 * t191 + t181 * t360 + t180 * t361 - t660 * t300 + t661 * t299 + (-t635 + (-t84 - t772) * t473 + (-qJD(3) * t180 + t401 * t446 - t494) * t478) * t467 + t662, -t494 * t401 + t84 * t399 - t163 * t467 * pkin(2) - t237 * t267 - g(1) * (pkin(2) * t397 + pkin(10) * t704) - g(2) * (-pkin(2) * t395 + pkin(10) * t706) - t543 * t731 + t661 * t181 + t660 * t180, -t125 * t383 + t522 * t666, -t125 * t382 - t223 * t666 - t383 * t598 + t522 * t759, t125 * t469 - t383 * t302 - t522 * t585 + t563 * t666, -t223 * t759 - t382 * t598, t223 * t585 - t382 * t302 + t469 * t598 + t563 * t759, t232, -g(1) * t251 - g(2) * t249 - g(3) * t288 + t113 * t382 - t189 * t759 + t223 * t546 + t25 * t469 + t271 * t302 + t418 * t598 - t563 * t671 - t585 * t81, -t113 * t383 - t418 * t125 + t189 * t666 - t26 * t469 - t272 * t302 + t522 * t546 - t563 * t670 + t585 * t82 - t512, -g(3) * t631 - t125 * t271 - t223 * t670 + t25 * t383 - t26 * t382 + t272 * t598 + t522 * t671 - t666 * t81 + t759 * t82 + t662, -g(1) * t663 - g(2) * t664 - g(3) * t568 - t113 * t418 + t189 * t546 + t25 * t271 + t26 * t272 + t670 * t82 - t671 * t81, -t188 * t669 - t332 * t77, -t188 * t668 + t331 * t77 - t332 * t78 + t597 * t669, -t188 * t759 - t332 * t557 - t77 * t382 - t669 * t755, t331 * t78 + t597 * t668, t331 * t557 - t78 * t382 + t597 * t759 - t668 * t755, -t382 * t557 - t755 * t759, -g(1) * t208 - g(2) * t206 - g(3) * t259 - t178 * t557 + t23 * t331 + t253 * t78 + t8 * t382 - t41 * t759 + t597 * t672 + t668 * t74 + t722 * t755, t188 * t672 + t23 * t332 - t253 * t77 + t382 * t528 + t42 * t759 + t557 * t742 - t669 * t74 - t723 * t755 - t515, t178 * t77 - t188 * t722 + t331 * t528 - t332 * t8 + t41 * t669 - t42 * t668 - t597 * t723 - t742 * t78 + t512, -g(1) * t547 - g(2) * t548 - g(3) * t503 + t8 * t178 + t23 * t253 + t41 * t722 + t42 * t723 - t528 * t742 + t672 * t74, -t132 * t674 - t280 * t32, t130 * t674 - t132 * t673 + t279 * t32 - t280 * t33, t132 * t668 + t280 * t76 - t32 * t331 - t674 * t739, t130 * t673 + t279 * t33, -t130 * t668 - t279 * t76 - t33 * t331 - t673 * t739, t331 * t76 + t668 * t739, t103 * t76 + t2 * t331 + t154 * t33 + t6 * t279 - g(1) * (t208 * t476 - t250 * t471) - g(2) * (t206 * t476 - t248 * t471) - g(3) * (t259 * t476 - t287 * t471) + t673 * t36 + t728 * t739 - t668 * t559 + t727 * t130, -t104 * t76 - t1 * t331 - t154 * t32 + t6 * t280 - g(1) * (-t208 * t471 - t250 * t476) - g(2) * (-t206 * t471 - t248 * t476) - g(3) * (-t259 * t471 - t287 * t476) - t674 * t36 - t729 * t739 - t668 * t16 + t727 * t132, -t1 * t279 + t103 * t32 - t104 * t33 - t130 * t729 - t132 * t728 - t16 * t673 - t2 * t280 - t559 * t674 + t515, t1 * t104 + t2 * t103 + t6 * t154 - g(1) * (pkin(5) * t208 + pkin(12) * t207 + t547) - g(2) * (pkin(5) * t206 + pkin(12) * t205 + t548) - g(3) * (pkin(5) * t259 + pkin(12) * t258 + t503) + t727 * t36 + t729 * t16 - t728 * t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t709, -t299 ^ 2 + t300 ^ 2, -t299 * t563 - t191, t709, t300 * t563 - t482, t302, -g(1) * t283 + g(2) * t736 + g(3) * t323 + t181 * t596 - t237 * t300 + t567, g(1) * t284 - g(2) * t510 + g(3) * t324 + t180 * t563 - t237 * t299 + t494, 0, 0, t760, -t710 + t711, t125 + t746, -t760, t534 + t598, t302, t86 * t563 - t189 * t522 + (-t300 * t223 + t302 * t718) * pkin(3) - t513 + t25, t87 * t563 + t189 * t223 + (-t300 * t522 - t302 * t466) * pkin(3) - t514 - t26 (-t125 * t718 + t466 * t598) * pkin(3) + (t82 - t86) * t522 + (t87 - t81) * t223, -t82 * t87 + t81 * t86 - g(1) * t667 + g(2) * t365 - g(3) * t659 + (g(2) * t587 + t25 * t718 - t189 * t300 + t26 * t466 + (t570 + t635) * t473) * pkin(3), t188 * t477 * t755 - t472 * t77 (-t77 - t715) * t477 - t747 + t721, -t713 - t770, -t477 * t78 + t595 * t597, t487 + t712, -t755 * t522, -t41 * t522 + t460 * t78 + t737 * t472 - t477 * t751 - t55 * t755 - t86 * t597, -t86 * t188 + t42 * t522 - t460 * t77 + t472 * t751 + t737 * t477 + t56 * t755, t597 * t56 + t188 * t55 + (-t223 * t41 - t459 * t78 - t528 + (t188 * t459 - t41) * qJD(5)) * t477 + (-t768 - t459 * t77 - t8 + (t459 * t597 - t42) * qJD(5)) * t472 + t514, t23 * t460 - t42 * t56 - t41 * t55 - t74 * t86 - g(1) * t497 - g(2) * t483 - g(3) * t491 + (-t472 * t8 - t477 * t528 + (-t41 * t477 - t42 * t472) * qJD(5)) * t459, -t132 * t758 - t32 * t686, t496 + t738 (t716 + t724) * t472 - t743 + t601, t130 * t499 + t33 * t687, t726 + t531 + (t540 - t748) * t472, -t477 * t76 + t595 * t739, -t43 * t130 - t36 * t140 + t326 * t76 + t719 * t739 + t514 * t471 + (-t2 + (t130 * t459 + t36 * t471) * qJD(5) - t513 * t476) * t477 + (t459 * t33 + t36 * t645 + t6 * t471 - t559 * t755) * t472, -t43 * t132 - t36 * t141 - t327 * t76 - t720 * t739 + t514 * t476 + (t1 + (t132 * t459 + t36 * t476) * qJD(5) + t513 * t471) * t477 + (-t16 * t755 - t459 * t32 - t36 * t646 + t6 * t476) * t472, t140 * t16 - t141 * t559 + t32 * t326 - t327 * t33 - t719 * t132 - t720 * t130 + t561 * t644 + (qJD(6) * t560 - t1 * t471 - t2 * t476 - t513) * t472, t1 * t327 + t2 * t326 + t6 * t472 * t459 - g(1) * (t215 * t575 + t497) - g(2) * (t210 * t575 + t483) - g(3) * (t244 * t575 + t491) + (t459 * t644 - t43) * t36 + t720 * t16 - t719 * t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534 - t598, t125 - t746, -t710 - t711, t223 * t82 + t522 * t81 + t113 + t511, 0, 0, 0, 0, 0, 0, t487 - t712, -t713 + t770 (t77 - t715) * t477 + t747 + t721, -t522 * t74 + (t42 * t755 + t8) * t477 + t771 * t472 + t511, 0, 0, 0, 0, 0, 0, -t726 + t531 + (t540 + t748) * t472 (t716 - t724) * t472 + t743 + t601, t496 - t738, -t140 * t559 - t141 * t16 + (-qJD(5) * t560 - t6) * t477 + (t36 * t755 + t485) * t472 + t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t714, t188 ^ 2 - t597 ^ 2, -t554 + t715, -t714, t188 * t223 - t599, -t557, -t74 * t188 + t517 - t605 + t768, t597 * t74 - t516 - t771, 0, 0, t132 * t594 - t32 * t471 (-t32 - t764) * t476 + (-t33 - t763) * t471, -t132 * t188 + t594 * t739 + t725, t130 * t745 - t33 * t476, t130 * t188 - t739 * t745 + t724, -t739 * t188, -pkin(5) * t33 - t130 * t42 + t188 * t559 - t29 * t739 + t471 * t530 - t476 * t486, pkin(5) * t32 - t132 * t42 + t16 * t188 + t30 * t739 + t471 * t486 + t476 * t530, t130 * t30 + t132 * t29 + ((-t33 + t647) * pkin(12) + t752) * t476 + ((qJD(6) * t130 - t32) * pkin(12) + t753) * t471 + t516, t559 * t29 - t16 * t30 - t36 * t42 + t507 * pkin(5) + (t485 + t516) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t717, -t130 ^ 2 + t132 ^ 2, -t32 + t764, -t717, -t33 + t763, t76, -t36 * t132 - g(1) * t119 - g(2) * t774 - g(3) * (-t204 * t471 - t244 * t476) - t753, t36 * t130 + g(1) * t120 - g(2) * t773 - g(3) * (-t204 * t476 + t244 * t471) - t752, 0, 0;];
tau_reg  = t7;
