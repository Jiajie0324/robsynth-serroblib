% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR9_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:10:17
% EndTime: 2019-03-09 19:10:49
% DurationCPUTime: 13.02s
% Computational Cost: add. (24681->627), mult. (77279->895), div. (0->0), fcn. (65495->14), ass. (0->301)
t303 = cos(pkin(6));
t311 = cos(qJ(2));
t451 = pkin(1) * t311;
t394 = t303 * t451;
t284 = qJD(1) * t394;
t307 = sin(qJ(2));
t300 = sin(pkin(6));
t302 = cos(pkin(7));
t387 = pkin(10) * t302 + pkin(9);
t358 = t300 * t387;
t340 = t307 * t358;
t231 = -qJD(1) * t340 + t284;
t452 = pkin(1) * t307;
t395 = t303 * t452;
t316 = -t311 * t358 - t395;
t232 = t316 * qJD(1);
t299 = sin(pkin(7));
t449 = pkin(10) * t299;
t324 = (pkin(2) * t307 - t311 * t449) * t300;
t261 = qJD(1) * t324;
t310 = cos(qJ(3));
t402 = qJD(3) * t310;
t382 = t302 * t402;
t306 = sin(qJ(3));
t423 = t302 * t306;
t428 = t299 * t306;
t469 = -pkin(2) * t382 + t310 * t231 + t232 * t423 + t261 * t428;
t416 = t310 * t311;
t420 = t306 * t307;
t333 = -t302 * t420 + t416;
t407 = qJD(1) * t300;
t254 = t333 * t407;
t288 = pkin(2) * t423;
t422 = t302 * t310;
t427 = t299 * t310;
t354 = -t231 * t306 + t232 * t422 + t261 * t427;
t386 = t307 * t407;
t367 = t299 * t386;
t448 = -pkin(10) - qJ(4);
t468 = pkin(3) * t367 - qJ(4) * t254 + qJD(4) * t428 - (t427 * t448 - t288) * qJD(3) + t354;
t418 = t307 * t310;
t419 = t306 * t311;
t335 = t302 * t418 + t419;
t253 = t335 * t407;
t380 = t448 * t306;
t467 = qJ(4) * t253 + (qJD(3) * t380 + qJD(4) * t310) * t299 - t469;
t298 = sin(pkin(13));
t301 = cos(pkin(13));
t424 = t301 * t310;
t466 = -t253 * t298 + t254 * t301 - (-t298 * t306 + t424) * t299 * qJD(3);
t265 = (t298 * t310 + t301 * t306) * t299;
t410 = qJD(3) * t265 - t301 * t253 - t254 * t298;
t435 = -t298 * t468 + t467 * t301;
t465 = -pkin(11) * t367 + t435;
t251 = t302 * t261;
t177 = -t232 * t299 + t251;
t403 = qJD(3) * t306;
t381 = t299 * t403;
t450 = pkin(3) * t253;
t464 = -pkin(3) * t381 - t410 * pkin(4) - t466 * pkin(11) + t177 + t450;
t436 = t467 * t298 + t301 * t468;
t309 = cos(qJ(5));
t385 = t311 * t407;
t279 = t299 * t385;
t406 = qJD(1) * t303;
t286 = qJD(2) + t406;
t371 = t286 * t302 - t279;
t352 = qJD(3) + t371;
t245 = t309 * t352;
t305 = sin(qJ(5));
t365 = t310 * t385;
t345 = t302 * t365;
t366 = t306 * t386;
t199 = -t286 * t427 - t345 + t366;
t334 = t302 * t419 + t418;
t322 = t334 * t300;
t201 = qJD(1) * t322 + t286 * t428;
t342 = -t199 * t298 + t301 * t201;
t140 = t305 * t342 - t245;
t372 = -t301 * t199 - t201 * t298;
t456 = qJD(5) - t372;
t463 = t140 * t456;
t229 = t265 * t305 - t309 * t302;
t412 = -qJD(5) * t229 - t305 * t367 - t466 * t309;
t230 = t265 * t309 + t302 * t305;
t411 = qJD(5) * t230 - t466 * t305 + t309 * t367;
t383 = t299 * t402;
t164 = t286 * t383 + qJD(3) * t345 + qJD(2) * t365 + (-qJD(2) * t302 - qJD(3)) * t366;
t453 = qJD(2) * t335 + qJD(3) * t334;
t313 = t453 * t300;
t363 = t286 * t381;
t165 = qJD(1) * t313 + t363;
t118 = t164 * t298 + t301 * t165;
t370 = t309 * t456;
t462 = -t305 * t118 - t456 * t370;
t139 = qJD(6) + t140;
t142 = t305 * t352 + t309 * t342;
t304 = sin(qJ(6));
t308 = cos(qJ(6));
t92 = t142 * t304 - t308 * t456;
t461 = t456 * t92;
t437 = pkin(4) * t367 + t436;
t430 = t372 * t309;
t101 = t304 * t342 + t308 * t430;
t399 = qJD(6) * t304;
t400 = qJD(5) * t309;
t320 = -t305 * t399 + t308 * t400 - t101;
t459 = t320 * t139;
t289 = pkin(2) * t422;
t240 = pkin(3) * t302 + t299 * t380 + t289;
t409 = pkin(10) * t427 + t288;
t256 = qJ(4) * t427 + t409;
t182 = t298 * t240 + t301 * t256;
t169 = pkin(11) * t302 + t182;
t264 = t298 * t428 - t299 * t424;
t388 = -pkin(3) * t310 - pkin(2);
t189 = pkin(4) * t264 - pkin(11) * t265 + t299 * t388;
t413 = t309 * t169 + t305 * t189;
t401 = qJD(5) * t305;
t458 = t169 * t401 - t189 * t400 + t464 * t305 - t309 * t465;
t457 = t302 * t416 - t420;
t330 = qJD(3) * t352;
t404 = qJD(2) * t300;
t384 = t307 * t404;
t361 = qJD(1) * t384;
t341 = t299 * t361;
t426 = t300 * t311;
t194 = t286 * t449 + (t387 * t426 + t395) * qJD(1);
t197 = pkin(2) * t286 + t231;
t257 = (-pkin(2) * t311 - t307 * t449 - pkin(1)) * t300;
t246 = qJD(1) * t257;
t137 = t310 * t194 + (t197 * t302 + t246 * t299) * t306;
t280 = qJD(2) * t284;
t327 = qJD(2) * t340;
t215 = -qJD(1) * t327 + t280;
t234 = t316 * qJD(2);
t216 = qJD(1) * t234;
t262 = qJD(2) * t324;
t255 = qJD(1) * t262;
t356 = -t306 * t215 + t216 * t422 + t255 * t427;
t87 = -qJD(3) * t137 + t356;
t52 = pkin(3) * t341 - qJ(4) * t164 - qJD(4) * t201 + t87;
t318 = t194 * t403 - t197 * t382 - t310 * t215 - t216 * t423 - t246 * t383 - t255 * t428;
t55 = -qJ(4) * t165 - qJD(4) * t199 - t318;
t20 = t298 * t52 + t301 * t55;
t18 = pkin(11) * t341 + t20;
t109 = -qJ(4) * t199 + t137;
t425 = t301 * t109;
t136 = -t306 * t194 + t197 * t422 + t246 * t427;
t108 = -t201 * qJ(4) + t136;
t99 = pkin(3) * t352 + t108;
t51 = t298 * t99 + t425;
t46 = pkin(11) * t352 + t51;
t159 = -t197 * t299 + t302 * t246;
t143 = pkin(3) * t199 + qJD(4) + t159;
t72 = -pkin(4) * t372 - pkin(11) * t342 + t143;
t22 = t305 * t72 + t309 * t46;
t119 = t164 * t301 - t165 * t298;
t167 = -t216 * t299 + t302 * t255;
t127 = pkin(3) * t165 + t167;
t43 = pkin(4) * t118 - pkin(11) * t119 + t127;
t6 = -qJD(5) * t22 - t18 * t305 + t309 * t43;
t4 = -pkin(5) * t118 - t6;
t455 = t139 * (pkin(5) * t142 + pkin(12) * t139) + t4;
t74 = qJD(5) * t245 + t309 * t119 + t305 * t341 - t342 * t401;
t94 = t142 * t308 + t304 * t456;
t24 = qJD(6) * t94 - t308 * t118 + t304 * t74;
t176 = t303 * t383 + (t333 * qJD(2) + qJD(3) * t457) * t300;
t222 = t303 * t428 + t322;
t329 = -pkin(9) * t426 - t395;
t218 = (t299 * t303 + t302 * t426) * pkin(10) - t329;
t206 = t310 * t218;
t228 = (pkin(2) + t451) * t303 - t340;
t285 = qJD(2) * t394;
t233 = t285 - t327;
t314 = -t306 * t233 + t234 * t422 + t262 * t427 + (-t206 + (-t228 * t302 - t257 * t299) * t306) * qJD(3);
t364 = t299 * t384;
t63 = pkin(3) * t364 - qJ(4) * t176 - qJD(4) * t222 + t314;
t175 = t303 * t381 + t313;
t221 = -t300 * t457 - t303 * t427;
t317 = -t218 * t403 + t228 * t382 + t310 * t233 + t234 * t423 + t257 * t383 + t262 * t428;
t68 = -qJ(4) * t175 - qJD(4) * t221 + t317;
t34 = t298 * t63 + t301 * t68;
t31 = pkin(11) * t364 + t34;
t266 = t299 * t426 - t303 * t302;
t355 = -t218 * t306 + t228 * t422 + t257 * t427;
t111 = -pkin(3) * t266 - qJ(4) * t222 + t355;
t390 = t228 * t423 + t257 * t428 + t206;
t128 = -qJ(4) * t221 + t390;
t67 = t298 * t111 + t301 * t128;
t61 = -pkin(11) * t266 + t67;
t162 = t301 * t221 + t222 * t298;
t163 = -t221 * t298 + t222 * t301;
t171 = -t228 * t299 + t302 * t257;
t337 = pkin(3) * t221 + t171;
t85 = pkin(4) * t162 - pkin(11) * t163 + t337;
t347 = t305 * t85 + t309 * t61;
t133 = t301 * t175 + t176 * t298;
t134 = -t175 * t298 + t176 * t301;
t178 = -t234 * t299 + t302 * t262;
t338 = pkin(3) * t175 + t178;
t48 = pkin(4) * t133 - pkin(11) * t134 + t338;
t454 = -qJD(5) * t347 - t305 * t31 + t309 * t48;
t19 = -t298 * t55 + t301 * t52;
t17 = -pkin(4) * t341 - t19;
t373 = t305 * t119 - t309 * t341;
t75 = qJD(5) * t142 + t373;
t12 = pkin(5) * t75 - pkin(12) * t74 + t17;
t5 = t309 * t18 + t305 * t43 + t72 * t400 - t401 * t46;
t3 = pkin(12) * t118 + t5;
t15 = pkin(12) * t456 + t22;
t105 = t298 * t109;
t50 = t301 * t99 - t105;
t45 = -pkin(4) * t352 - t50;
t32 = t140 * pkin(5) - t142 * pkin(12) + t45;
t351 = t15 * t304 - t308 * t32;
t1 = -qJD(6) * t351 + t12 * t304 + t308 * t3;
t58 = t108 * t301 - t105;
t91 = pkin(3) * t201 + pkin(4) * t342 - pkin(11) * t372;
t447 = t305 * t91 + t309 * t58;
t446 = -t410 * pkin(5) + t413 * qJD(5) + t465 * t305 + t464 * t309;
t444 = t139 * t92;
t443 = t139 * t94;
t442 = t372 * t94;
t398 = qJD(6) * t308;
t23 = t304 * t118 - t142 * t399 + t308 * t74 + t398 * t456;
t441 = t23 * t304;
t440 = t24 * t309;
t439 = t304 * t75;
t438 = t308 * t75;
t57 = t108 * t298 + t425;
t434 = -t57 + t456 * (pkin(5) * t305 - pkin(12) * t309);
t21 = -t305 * t46 + t309 * t72;
t14 = -pkin(5) * t456 - t21;
t433 = qJD(5) * t14;
t369 = t139 * t308;
t432 = t140 * t342;
t431 = t142 * t342;
t295 = t300 ^ 2;
t312 = qJD(1) ^ 2;
t429 = t295 * t312;
t187 = t230 * t304 - t308 * t264;
t415 = -qJD(6) * t187 + t410 * t304 + t412 * t308;
t188 = t230 * t308 + t264 * t304;
t414 = qJD(6) * t188 + t412 * t304 - t410 * t308;
t408 = t307 ^ 2 - t311 ^ 2;
t405 = qJD(2) * t299 ^ 2;
t397 = qJD(2) - t286;
t393 = t295 * t452;
t392 = t311 * t429;
t293 = -pkin(3) * t301 - pkin(4);
t379 = qJD(1) * qJD(2) * t295;
t376 = -t23 * t309 + t94 * t401;
t33 = -t298 * t68 + t301 * t63;
t271 = -pkin(5) * t309 - pkin(12) * t305 + t293;
t374 = pkin(12) * t342 - qJD(6) * t271 + t447;
t66 = t111 * t301 - t298 * t128;
t181 = t240 * t301 - t298 * t256;
t368 = t286 + t406;
t362 = t311 * t379;
t121 = pkin(12) * t264 + t413;
t360 = -t411 * pkin(5) + t412 * pkin(12) + qJD(6) * t121 - t437;
t168 = -pkin(4) * t302 - t181;
t135 = pkin(5) * t229 - pkin(12) * t230 + t168;
t359 = -pkin(12) * t410 - qJD(6) * t135 + t458;
t10 = t15 * t308 + t304 * t32;
t28 = pkin(12) * t162 + t347;
t144 = t163 * t305 + t266 * t309;
t145 = t163 * t309 - t266 * t305;
t60 = pkin(4) * t266 - t66;
t40 = pkin(5) * t144 - pkin(12) * t145 + t60;
t350 = t28 * t308 + t304 * t40;
t349 = -t28 * t304 + t308 * t40;
t346 = -t305 * t61 + t309 * t85;
t104 = t145 * t308 + t162 * t304;
t103 = t145 * t304 - t308 * t162;
t344 = -t169 * t305 + t189 * t309;
t339 = t309 * t118 + (t305 * t372 - t401) * t456;
t336 = -t139 * t398 - t439;
t332 = t305 * t48 + t309 * t31 + t85 * t400 - t401 * t61;
t100 = t304 * t430 - t308 * t342;
t331 = (-t304 * t400 + t100) * t139;
t328 = -pkin(9) * t361 + t280;
t292 = pkin(3) * t298 + pkin(11);
t326 = -t292 * t118 + t45 * t456;
t323 = t299 * t330;
t321 = t329 * t286;
t319 = -pkin(12) * t75 + (t14 + t21) * t139;
t30 = -pkin(4) * t364 - t33;
t2 = -qJD(6) * t10 + t308 * t12 - t3 * t304;
t120 = -pkin(5) * t264 - t344;
t84 = qJD(5) * t145 + t134 * t305 - t309 * t364;
t83 = -qJD(5) * t144 + t134 * t309 + t305 * t364;
t36 = qJD(6) * t104 - t308 * t133 + t304 * t83;
t35 = -qJD(6) * t103 + t133 * t304 + t308 * t83;
t27 = -pkin(5) * t162 - t346;
t25 = -pkin(5) * t342 + t305 * t58 - t309 * t91;
t13 = pkin(5) * t84 - pkin(12) * t83 + t30;
t8 = -pkin(5) * t133 - t454;
t7 = pkin(12) * t133 + t332;
t9 = [0, 0, 0, 0.2e1 * t307 * t362, -0.2e1 * t408 * t379, t368 * t311 * t404, -t368 * t384, 0 (t321 + (t303 * t329 - 0.2e1 * t393) * qJD(1)) * qJD(2), -0.2e1 * pkin(1) * t362 - (-pkin(9) * t384 + t285) * t286 - t328 * t303, t164 * t222 + t176 * t201, -t164 * t221 - t165 * t222 - t175 * t201 - t176 * t199, t176 * t352 - t164 * t266 + (qJD(1) * t222 + t201) * t364, -t175 * t352 + t165 * t266 + (-qJD(1) * t221 - t199) * t364 (-qJD(1) * t266 + t352) * t364, t314 * t352 - t87 * t266 + t178 * t199 + t171 * t165 + t167 * t221 + t159 * t175 + (qJD(1) * t355 + t136) * t364, -t317 * t352 - t318 * t266 + t178 * t201 + t171 * t164 + t167 * t222 + t159 * t176 + (-qJD(1) * t390 - t137) * t364, -t118 * t67 - t119 * t66 - t133 * t51 - t134 * t50 - t162 * t20 - t163 * t19 - t33 * t342 + t34 * t372, t127 * t337 + t143 * t338 + t19 * t66 + t20 * t67 + t50 * t33 + t51 * t34, t142 * t83 + t145 * t74, -t140 * t83 - t142 * t84 - t144 * t74 - t145 * t75, t118 * t145 + t133 * t142 + t162 * t74 + t456 * t83, -t118 * t144 - t133 * t140 - t162 * t75 - t456 * t84, t118 * t162 + t133 * t456, t346 * t118 + t21 * t133 + t30 * t140 + t17 * t144 + t6 * t162 + t45 * t84 + t454 * t456 + t60 * t75, -t118 * t347 - t22 * t133 + t30 * t142 + t17 * t145 - t5 * t162 - t332 * t456 + t45 * t83 + t60 * t74, t104 * t23 + t35 * t94, -t103 * t23 - t104 * t24 - t35 * t92 - t36 * t94, t104 * t75 + t139 * t35 + t144 * t23 + t84 * t94, -t103 * t75 - t139 * t36 - t144 * t24 - t84 * t92, t139 * t84 + t144 * t75 (-qJD(6) * t350 + t13 * t308 - t304 * t7) * t139 + t349 * t75 + t2 * t144 - t351 * t84 + t8 * t92 + t27 * t24 + t4 * t103 + t14 * t36 -(qJD(6) * t349 + t13 * t304 + t308 * t7) * t139 - t350 * t75 - t1 * t144 - t10 * t84 + t8 * t94 + t27 * t23 + t4 * t104 + t14 * t35; 0, 0, 0, -t307 * t392, t408 * t429, t397 * t385, -t397 * t386, 0, t312 * t393 + (qJD(2) * t329 - t321) * qJD(1), pkin(1) * t392 + (-pkin(9) * t386 + t284) * t286 - t328, t164 * t428 + (-t254 + t383) * t201, t199 * t254 + t201 * t253 + (t164 * t310 - t165 * t306 + (-t199 * t310 - t201 * t306) * qJD(3)) * t299, t310 * t323 + t164 * t302 - t254 * t352 + (-t201 * t299 + t306 * t405) * t386, -t306 * t323 - t165 * t302 + t253 * t352 + (t199 * t299 + t310 * t405) * t386 (t302 * t397 - qJD(3) + t279) * t367, -t409 * t330 + t87 * t302 - t299 * pkin(2) * t165 - t167 * t427 - t354 * t352 - t177 * t199 + (-t253 + t381) * t159 + (-t136 + (-pkin(10) * t428 + t289) * qJD(2)) * t367, t318 * t302 - t177 * t201 - t159 * t254 + (t159 * t402 - pkin(2) * t164 + (pkin(10) * t330 + t167) * t306 + (-qJD(2) * t409 + t137) * t386) * t299 + t469 * t352, -t118 * t182 - t119 * t181 - t19 * t265 - t20 * t264 + t436 * t342 + t435 * t372 - t410 * t51 + t466 * t50, t20 * t182 + t19 * t181 - t143 * (t251 + t450) + t435 * t51 - t436 * t50 + (t127 * t388 + (pkin(3) * t403 + t232) * t143) * t299, t142 * t412 + t230 * t74, -t140 * t412 - t142 * t411 - t229 * t74 - t230 * t75, t118 * t230 + t142 * t410 + t264 * t74 + t412 * t456, -t118 * t229 - t140 * t410 - t264 * t75 - t411 * t456, t118 * t264 + t410 * t456, t344 * t118 + t6 * t264 + t168 * t75 + t17 * t229 + t411 * t45 + t410 * t21 + ((-qJD(5) * t169 - t464) * t309 + (-qJD(5) * t189 - t465) * t305) * t456 + t437 * t140, -t413 * t118 + t437 * t142 + t168 * t74 + t17 * t230 - t410 * t22 - t5 * t264 + t412 * t45 + t456 * t458, t188 * t23 + t415 * t94, -t187 * t23 - t188 * t24 - t414 * t94 - t415 * t92, t139 * t415 + t188 * t75 + t229 * t23 + t411 * t94, -t139 * t414 - t187 * t75 - t229 * t24 - t411 * t92, t139 * t411 + t229 * t75 (-t121 * t304 + t135 * t308) * t75 + t2 * t229 + t120 * t24 + t4 * t187 + t446 * t92 - t411 * t351 + t414 * t14 + (t304 * t359 - t308 * t360) * t139 -(t121 * t308 + t135 * t304) * t75 - t1 * t229 + t120 * t23 + t4 * t188 + t446 * t94 + t415 * t14 + (t304 * t360 + t308 * t359) * t139 - t411 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201 * t199, -t199 ^ 2 + t201 ^ 2, t199 * t352 + t164, t201 * t352 - t407 * t453 - t363, t341, t137 * t371 - t159 * t201 + t356, t136 * t352 + t159 * t199 + t318 (-t118 * t298 - t119 * t301) * pkin(3) + (-t58 + t50) * t372 + (t51 - t57) * t342, t50 * t57 - t51 * t58 + (-t143 * t201 + t19 * t301 + t20 * t298) * pkin(3), t142 * t370 + t305 * t74 (t74 - t463) * t309 + (-t142 * t456 - t75) * t305, -t431 - t462, t339 + t432, -t456 * t342, -t57 * t140 - t21 * t342 + t293 * t75 + (-t17 + (-qJD(5) * t292 - t91) * t456) * t309 + (t456 * t58 + t326) * t305, -t57 * t142 + t22 * t342 + t17 * t305 + t293 * t74 + (t292 * t401 + t447) * t456 + t326 * t309, t23 * t305 * t308 + t320 * t94, t100 * t94 + t101 * t92 + (-t304 * t94 - t308 * t92) * t400 + (-t441 - t24 * t308 + (t304 * t92 - t308 * t94) * qJD(6)) * t305 (t438 - t442) * t305 + t459 + t376, t440 + t331 + (t336 - t461) * t305, t139 * t305 * t456 - t309 * t75, t271 * t438 - t14 * t100 - t25 * t92 + (t304 * t374 + t308 * t434) * t139 + (t304 * t433 - t2 + (qJD(5) * t92 + t336) * t292) * t309 + (t14 * t398 + t351 * t372 + t292 * t24 + t4 * t304 + (t139 * t292 * t304 - t351) * qJD(5)) * t305, -t271 * t439 - t14 * t101 - t25 * t94 + (-t304 * t434 + t308 * t374) * t139 + (t308 * t433 + t1 + (qJD(5) * t94 + t139 * t399 - t438) * t292) * t309 + (-t14 * t399 + t10 * t372 + t292 * t23 + t4 * t308 + (t292 * t369 - t10) * qJD(5)) * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342 ^ 2 - t372 ^ 2, t342 * t50 - t372 * t51 + t127, 0, 0, 0, 0, 0, t339 - t432, -t431 + t462, 0, 0, 0, 0, 0, -t440 + t331 + (t336 + t461) * t305 (-t438 - t442) * t305 - t459 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142 * t140, -t140 ^ 2 + t142 ^ 2, t74 + t463, -t373 + (-qJD(5) + t456) * t142, t118, -t142 * t45 + t22 * t456 + t6, t140 * t45 + t21 * t456 - t5, t369 * t94 + t441 (t23 - t444) * t308 + (-t24 - t443) * t304, t139 * t369 - t142 * t94 + t439, -t139 ^ 2 * t304 + t142 * t92 + t438, -t139 * t142, -pkin(5) * t24 + t142 * t351 - t22 * t92 + t319 * t304 - t308 * t455, -pkin(5) * t23 + t10 * t142 - t22 * t94 + t304 * t455 + t319 * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94 * t92, -t92 ^ 2 + t94 ^ 2, t23 + t444, -t24 + t443, t75, t10 * t139 - t14 * t94 + t2, -t139 * t351 + t14 * t92 - t1;];
tauc_reg  = t9;
