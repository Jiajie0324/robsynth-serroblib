% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% MDP [33x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPRR9_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRR9_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(33,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [33 1]), ...
  'S6RRRPRR9_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [33x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:10:49
% EndTime: 2019-03-09 19:11:22
% DurationCPUTime: 19.61s
% Computational Cost: add. (24777->733), mult. (77387->1019), div. (0->0), fcn. (65495->14), ass. (0->306)
t772 = cos(pkin(6));
t780 = cos(qJ(2));
t924 = pkin(1) * t780;
t865 = t772 * t924;
t753 = qJD(1) * t865;
t776 = sin(qJ(2));
t769 = sin(pkin(6));
t771 = cos(pkin(7));
t857 = pkin(10) * t771 + pkin(9);
t830 = t769 * t857;
t809 = t776 * t830;
t700 = -qJD(1) * t809 + t753;
t925 = pkin(1) * t776;
t866 = t772 * t925;
t785 = -t780 * t830 - t866;
t701 = t785 * qJD(1);
t768 = sin(pkin(7));
t922 = pkin(10) * t768;
t794 = (pkin(2) * t776 - t780 * t922) * t769;
t730 = qJD(1) * t794;
t779 = cos(qJ(3));
t875 = qJD(3) * t779;
t851 = t771 * t875;
t775 = sin(qJ(3));
t903 = t771 * t775;
t908 = t768 * t775;
t943 = -pkin(2) * t851 + t779 * t700 + t701 * t903 + t730 * t908;
t898 = t779 * t780;
t901 = t775 * t776;
t804 = -t771 * t901 + t898;
t880 = qJD(1) * t769;
t723 = t804 * t880;
t757 = pkin(2) * t903;
t902 = t771 * t779;
t907 = t768 * t779;
t826 = -t700 * t775 + t701 * t902 + t730 * t907;
t856 = t776 * t880;
t837 = t768 * t856;
t921 = -pkin(10) - qJ(4);
t942 = -pkin(3) * t837 + qJ(4) * t723 - qJD(4) * t908 + (t907 * t921 - t757) * qJD(3) - t826;
t899 = t776 * t779;
t900 = t775 * t780;
t806 = t771 * t899 + t900;
t722 = t806 * t880;
t850 = t921 * t775;
t941 = -qJ(4) * t722 - (qJD(3) * t850 + qJD(4) * t779) * t768 + t943;
t767 = sin(pkin(13));
t770 = cos(pkin(13));
t904 = t770 * t779;
t940 = -t722 * t767 + t723 * t770 - (-t767 * t775 + t904) * t768 * qJD(3);
t734 = (t767 * t779 + t770 * t775) * t768;
t883 = qJD(3) * t734 - t770 * t722 - t723 * t767;
t887 = t767 * t942 - t941 * t770;
t939 = pkin(11) * t837 - t887;
t720 = t771 * t730;
t646 = -t701 * t768 + t720;
t876 = qJD(3) * t775;
t853 = t768 * t876;
t923 = pkin(3) * t722;
t935 = -pkin(3) * t853 - t883 * pkin(4) - pkin(11) * t940 + t646 + t923;
t778 = cos(qJ(5));
t855 = t780 * t880;
t748 = t768 * t855;
t879 = qJD(1) * t772;
t755 = qJD(2) + t879;
t842 = t771 * t755 - t748;
t825 = qJD(3) + t842;
t714 = t778 * t825;
t774 = sin(qJ(5));
t835 = t779 * t855;
t822 = t771 * t835;
t836 = t775 * t856;
t668 = -t755 * t907 - t822 + t836;
t805 = t771 * t900 + t899;
t792 = t805 * t769;
t670 = qJD(1) * t792 + t755 * t908;
t812 = -t668 * t767 + t770 * t670;
t609 = t774 * t812 - t714;
t843 = -t770 * t668 - t670 * t767;
t929 = qJD(5) - t843;
t938 = t609 * t929;
t937 = t774 * t929;
t889 = t941 * t767 + t770 * t942;
t698 = t734 * t774 - t778 * t771;
t885 = -qJD(5) * t698 - t774 * t837 - t778 * t940;
t699 = t734 * t778 + t771 * t774;
t884 = qJD(5) * t699 - t774 * t940 + t778 * t837;
t608 = qJD(6) + t609;
t934 = MDP(4) * t776;
t933 = MDP(5) * (t776 ^ 2 - t780 ^ 2);
t691 = t772 * t908 + t792;
t906 = t769 * t780;
t735 = t768 * t906 - t772 * t771;
t800 = -pkin(9) * t906 - t866;
t687 = (t768 * t772 + t771 * t906) * pkin(10) - t800;
t697 = (pkin(2) + t924) * t772 - t809;
t726 = (-pkin(2) * t780 - t776 * t922 - pkin(1)) * t769;
t827 = -t687 * t775 + t697 * t902 + t726 * t907;
t580 = -pkin(3) * t735 - qJ(4) * t691 + t827;
t930 = t771 * t898 - t901;
t690 = -t769 * t930 - t772 * t907;
t675 = t779 * t687;
t860 = t697 * t903 + t726 * t908 + t675;
t597 = -qJ(4) * t690 + t860;
t536 = t767 * t580 + t770 * t597;
t530 = -pkin(11) * t735 + t536;
t631 = t770 * t690 + t691 * t767;
t632 = -t690 * t767 + t691 * t770;
t640 = -t697 * t768 + t771 * t726;
t807 = pkin(3) * t690 + t640;
t554 = pkin(4) * t631 - pkin(11) * t632 + t807;
t932 = t778 * t530 + t774 * t554;
t888 = pkin(4) * t837 - t889;
t758 = pkin(2) * t902;
t709 = pkin(3) * t771 + t768 * t850 + t758;
t882 = pkin(10) * t907 + t757;
t725 = qJ(4) * t907 + t882;
t651 = t767 * t709 + t770 * t725;
t638 = pkin(11) * t771 + t651;
t733 = t767 * t908 - t768 * t904;
t858 = -pkin(3) * t779 - pkin(2);
t658 = pkin(4) * t733 - pkin(11) * t734 + t768 * t858;
t886 = t778 * t638 + t774 * t658;
t871 = qJD(5) * t778;
t873 = qJD(5) * t774;
t931 = t638 * t873 - t658 * t871 + t935 * t774 + t778 * t939;
t801 = qJD(3) * t825;
t663 = t755 * t922 + (t857 * t906 + t866) * qJD(1);
t666 = pkin(2) * t755 + t700;
t715 = qJD(1) * t726;
t606 = t663 * t779 + (t666 * t771 + t715 * t768) * t775;
t749 = qJD(2) * t753;
t798 = qJD(2) * t809;
t684 = -qJD(1) * t798 + t749;
t703 = t785 * qJD(2);
t685 = qJD(1) * t703;
t731 = qJD(2) * t794;
t724 = qJD(1) * t731;
t828 = -t775 * t684 + t685 * t902 + t724 * t907;
t556 = -qJD(3) * t606 + t828;
t852 = t768 * t875;
t633 = t755 * t852 + qJD(3) * t822 + qJD(2) * t835 + (-qJD(2) * t771 - qJD(3)) * t836;
t877 = qJD(2) * t769;
t854 = t776 * t877;
t831 = qJD(1) * t854;
t811 = t768 * t831;
t521 = pkin(3) * t811 - qJ(4) * t633 - qJD(4) * t670 + t556;
t926 = qJD(2) * t806 + qJD(3) * t805;
t782 = t926 * t769;
t833 = t755 * t853;
t634 = qJD(1) * t782 + t833;
t789 = t663 * t876 - t666 * t851 - t779 * t684 - t685 * t903 - t715 * t852 - t724 * t908;
t524 = -qJ(4) * t634 - qJD(4) * t668 - t789;
t489 = t767 * t521 + t770 * t524;
t487 = pkin(11) * t811 + t489;
t605 = -t775 * t663 + t666 * t902 + t715 * t907;
t577 = -t670 * qJ(4) + t605;
t568 = pkin(3) * t825 + t577;
t578 = -qJ(4) * t668 + t606;
t905 = t770 * t578;
t520 = t767 * t568 + t905;
t515 = pkin(11) * t825 + t520;
t628 = -t666 * t768 + t771 * t715;
t612 = pkin(3) * t668 + qJD(4) + t628;
t541 = -pkin(4) * t843 - pkin(11) * t812 + t612;
t491 = t515 * t778 + t541 * t774;
t587 = t633 * t767 + t770 * t634;
t588 = t633 * t770 - t634 * t767;
t636 = -t685 * t768 + t771 * t724;
t596 = pkin(3) * t634 + t636;
t512 = pkin(4) * t587 - pkin(11) * t588 + t596;
t475 = -qJD(5) * t491 - t487 * t774 + t778 * t512;
t473 = -pkin(5) * t587 - t475;
t611 = t774 * t825 + t778 * t812;
t928 = t608 * (pkin(5) * t611 + pkin(12) * t608) + t473;
t645 = t772 * t852 + (t804 * qJD(2) + qJD(3) * t930) * t769;
t754 = qJD(2) * t865;
t702 = t754 - t798;
t783 = -t702 * t775 + t703 * t902 + t731 * t907 + (-t675 + (-t697 * t771 - t726 * t768) * t775) * qJD(3);
t834 = t768 * t854;
t532 = pkin(3) * t834 - qJ(4) * t645 - qJD(4) * t691 + t783;
t644 = t772 * t853 + t782;
t788 = -t687 * t876 + t697 * t851 + t779 * t702 + t703 * t903 + t726 * t852 + t731 * t908;
t537 = -qJ(4) * t644 - qJD(4) * t690 + t788;
t503 = t767 * t532 + t770 * t537;
t500 = pkin(11) * t834 + t503;
t602 = t770 * t644 + t645 * t767;
t603 = -t644 * t767 + t645 * t770;
t647 = -t703 * t768 + t771 * t731;
t808 = pkin(3) * t644 + t647;
t517 = pkin(4) * t602 - pkin(11) * t603 + t808;
t927 = -qJD(5) * t932 - t500 * t774 + t517 * t778;
t543 = qJD(5) * t714 + t778 * t588 + t774 * t811 - t812 * t873;
t773 = sin(qJ(6));
t777 = cos(qJ(6));
t869 = qJD(6) * t777;
t861 = t777 * t543 + t773 * t587 + t869 * t929;
t870 = qJD(6) * t773;
t492 = -t611 * t870 + t861;
t920 = t492 * t773;
t844 = t774 * t588 - t778 * t811;
t544 = qJD(5) * t611 + t844;
t919 = t544 * t773;
t918 = t544 * t777;
t912 = t611 * t773;
t561 = -t777 * t929 + t912;
t917 = t561 * t608;
t563 = t611 * t777 + t773 * t929;
t916 = t563 * t608;
t915 = t563 * t843;
t840 = t608 * t777;
t914 = t609 * t812;
t913 = t611 * t812;
t911 = t843 * t778;
t764 = t769 ^ 2;
t781 = qJD(1) ^ 2;
t909 = t764 * t781;
t574 = t767 * t578;
t526 = t577 * t767 + t905;
t897 = t526 - t929 * (pkin(5) * t774 - pkin(12) * t778);
t527 = t577 * t770 - t574;
t560 = pkin(3) * t670 + pkin(4) * t812 - pkin(11) * t843;
t896 = t778 * t527 + t774 * t560;
t894 = -pkin(5) * t883 + qJD(5) * t886 - t774 * t939 + t778 * t935;
t892 = t778 * t587 + t843 * t937;
t656 = t699 * t773 - t777 * t733;
t891 = -qJD(6) * t656 + t773 * t883 + t777 * t885;
t657 = t699 * t777 + t733 * t773;
t890 = qJD(6) * t657 + t773 * t885 - t777 * t883;
t878 = qJD(2) * t768 ^ 2;
t874 = qJD(5) * t773;
t872 = qJD(5) * t777;
t868 = qJD(2) - t755;
t864 = t764 * t925;
t863 = t780 * t909;
t762 = -pkin(3) * t770 - pkin(4);
t849 = qJD(1) * qJD(2) * t764;
t474 = t778 * t487 + t774 * t512 - t515 * t873 + t541 * t871;
t472 = pkin(12) * t587 + t474;
t488 = t521 * t770 - t767 * t524;
t486 = -pkin(4) * t811 - t488;
t481 = pkin(5) * t544 - pkin(12) * t543 + t486;
t847 = -t472 * t773 + t777 * t481;
t502 = t532 * t770 - t767 * t537;
t845 = t543 * t773 - t777 * t587;
t519 = t770 * t568 - t574;
t535 = t580 * t770 - t767 * t597;
t650 = t709 * t770 - t767 * t725;
t841 = t929 * t778;
t740 = -pkin(5) * t778 - pkin(12) * t774 + t762;
t838 = pkin(12) * t812 - qJD(6) * t740 + t896;
t832 = t780 * t849;
t637 = -pkin(4) * t771 - t650;
t604 = pkin(5) * t698 - pkin(12) * t699 + t637;
t824 = -pkin(12) * t883 - qJD(6) * t604 + t931;
t590 = pkin(12) * t733 + t886;
t823 = -pkin(5) * t884 + pkin(12) * t885 + qJD(6) * t590 - t888;
t821 = t472 * t777 + t481 * t773;
t484 = pkin(12) * t929 + t491;
t514 = -pkin(4) * t825 - t519;
t501 = t609 * pkin(5) - t611 * pkin(12) + t514;
t479 = t484 * t777 + t501 * t773;
t820 = t484 * t773 - t501 * t777;
t497 = pkin(12) * t631 + t932;
t529 = pkin(4) * t735 - t535;
t613 = t632 * t774 + t735 * t778;
t614 = t632 * t778 - t735 * t774;
t509 = pkin(5) * t613 - pkin(12) * t614 + t529;
t819 = t497 * t777 + t509 * t773;
t818 = -t497 * t773 + t509 * t777;
t490 = -t515 * t774 + t541 * t778;
t815 = -t530 * t774 + t554 * t778;
t573 = t614 * t777 + t631 * t773;
t572 = t614 * t773 - t777 * t631;
t814 = -t638 * t774 + t658 * t778;
t810 = MDP(15) * t834;
t803 = -t608 * t869 - t919;
t802 = t608 * t870 - t918;
t799 = -pkin(9) * t831 + t749;
t797 = t778 * t500 + t774 * t517 - t530 * t873 + t554 * t871;
t761 = pkin(3) * t767 + pkin(11);
t795 = t514 * t929 - t761 * t587;
t793 = t768 * t801;
t791 = t800 * t755;
t570 = t773 * t812 + t777 * t911;
t790 = -t774 * t870 + t777 * t871 - t570;
t787 = qJD(5) * t561 + t803;
t499 = -pkin(4) * t834 - t502;
t483 = -pkin(5) * t929 - t490;
t786 = -pkin(12) * t544 + (t483 + t490) * t608;
t589 = -pkin(5) * t733 - t814;
t569 = t773 * t911 - t777 * t812;
t559 = t563 * t873;
t553 = qJD(5) * t614 + t603 * t774 - t778 * t834;
t552 = -qJD(5) * t613 + t603 * t778 + t774 * t834;
t505 = qJD(6) * t573 + t552 * t773 - t777 * t602;
t504 = -qJD(6) * t572 + t552 * t777 + t602 * t773;
t496 = -pkin(5) * t631 - t815;
t494 = -pkin(5) * t812 + t527 * t774 - t560 * t778;
t493 = qJD(6) * t563 + t845;
t482 = pkin(5) * t553 - pkin(12) * t552 + t499;
t477 = -pkin(5) * t602 - t927;
t476 = pkin(12) * t602 + t797;
t471 = -qJD(6) * t479 + t847;
t470 = -qJD(6) * t820 + t821;
t1 = [(-t474 * t631 + t486 * t614 - t491 * t602 + t499 * t611 + t514 * t552 + t529 * t543 - t587 * t932 - t797 * t929) * MDP(26) + ((-qJD(6) * t819 - t476 * t773 + t482 * t777) * t608 + t818 * t544 + t471 * t613 - t820 * t553 + t477 * t561 + t496 * t493 + t473 * t572 + t483 * t505) * MDP(32) + (-t788 * t825 - t789 * t735 + t647 * t670 + t640 * t633 + t636 * t691 + t628 * t645 + (-qJD(1) * t860 - t606) * t834) * MDP(17) + (t475 * t631 + t486 * t613 + t490 * t602 + t499 * t609 + t514 * t553 + t529 * t544 + t815 * t587 + t927 * t929) * MDP(25) + (t543 * t631 + t552 * t929 + t587 * t614 + t602 * t611) * MDP(22) + (-t544 * t631 - t553 * t929 - t587 * t613 - t602 * t609) * MDP(23) + (t587 * t631 + t602 * t929) * MDP(24) + (-0.2e1 * pkin(1) * t832 - (-pkin(9) * t854 + t754) * t755 - t799 * t772) * MDP(10) + (t791 + (t772 * t800 - 0.2e1 * t864) * qJD(1)) * qJD(2) * MDP(9) + (t488 * t535 + t489 * t536 + t519 * t502 + t520 * t503 + t596 * t807 + t612 * t808) * MDP(19) + (-qJD(1) * t735 + t825) * t810 + (-(qJD(6) * t818 + t476 * t777 + t482 * t773) * t608 - t819 * t544 - t470 * t613 - t479 * t553 + t477 * t563 + t496 * t492 + t473 * t573 + t483 * t504) * MDP(33) + (t645 * t825 - t633 * t735 + (qJD(1) * t691 + t670) * t834) * MDP(13) + (-t644 * t825 + t634 * t735 + (-qJD(1) * t690 - t668) * t834) * MDP(14) + (t783 * t825 - t556 * t735 + t647 * t668 + t640 * t634 + t636 * t690 + t628 * t644 + (qJD(1) * t827 + t605) * t834) * MDP(16) + (MDP(6) * t780 * t877 - MDP(7) * t854) * (t755 + t879) + (-t488 * t632 - t489 * t631 - t502 * t812 + t503 * t843 - t519 * t603 - t520 * t602 - t535 * t588 - t536 * t587) * MDP(18) - 0.2e1 * t849 * t933 + 0.2e1 * t832 * t934 + (-t633 * t690 - t634 * t691 - t644 * t670 - t645 * t668) * MDP(12) + (t633 * t691 + t645 * t670) * MDP(11) + (t543 * t614 + t552 * t611) * MDP(20) + (-t543 * t613 - t544 * t614 - t552 * t609 - t553 * t611) * MDP(21) + (-t493 * t613 - t505 * t608 - t544 * t572 - t553 * t561) * MDP(30) + (t492 * t613 + t504 * t608 + t544 * t573 + t553 * t563) * MDP(29) + (t544 * t613 + t553 * t608) * MDP(31) + (-t492 * t572 - t493 * t573 - t504 * t561 - t505 * t563) * MDP(28) + (t492 * t573 + t504 * t563) * MDP(27); (pkin(1) * t863 + (-pkin(9) * t856 + t753) * t755 - t799) * MDP(10) + (-t492 * t656 - t493 * t657 - t561 * t891 - t563 * t890) * MDP(28) + (-(t590 * t777 + t604 * t773) * t544 - t470 * t698 + t589 * t492 + t473 * t657 + (t773 * t823 + t777 * t824) * t608 + t894 * t563 + t891 * t483 - t884 * t479) * MDP(33) + ((-t590 * t773 + t604 * t777) * t544 + t471 * t698 + t589 * t493 + t473 * t656 + (t773 * t824 - t777 * t823) * t608 + t894 * t561 + t890 * t483 - t884 * t820) * MDP(32) + (-t474 * t733 + t486 * t699 - t883 * t491 + t885 * t514 + t637 * t543 - t886 * t587 + t888 * t611 + t929 * t931) * MDP(26) + (t587 * t733 + t883 * t929) * MDP(24) + (-t544 * t733 - t587 * t698 - t609 * t883 - t884 * t929) * MDP(23) + (t543 * t733 + t587 * t699 + t611 * t883 + t885 * t929) * MDP(22) + (t814 * t587 + t475 * t733 + t637 * t544 + t486 * t698 + ((-qJD(5) * t638 - t935) * t778 + (-qJD(5) * t658 + t939) * t774) * t929 + t888 * t609 + t884 * t514 + t883 * t490) * MDP(25) + (t789 * t771 - t646 * t670 - t628 * t723 + (t628 * t875 - pkin(2) * t633 + (pkin(10) * t801 + t636) * t775 + (-qJD(2) * t882 + t606) * t856) * t768 + t943 * t825) * MDP(17) + t909 * t933 + (t771 * t868 - qJD(3) + t748) * MDP(15) * t837 + t868 * MDP(6) * t855 - t868 * MDP(7) * t856 + (t544 * t698 + t608 * t884) * MDP(31) + (t781 * t864 + (qJD(2) * t800 - t791) * qJD(1)) * MDP(9) + (-t775 * t793 - t634 * t771 + t722 * t825 + (t668 * t768 + t779 * t878) * t856) * MDP(14) + (t779 * t793 + t633 * t771 - t723 * t825 + (-t670 * t768 + t775 * t878) * t856) * MDP(13) + (t489 * t651 + t488 * t650 - t612 * (t720 + t923) + t887 * t520 + t889 * t519 + (t596 * t858 + (pkin(3) * t876 + t701) * t612) * t768) * MDP(19) + (-t882 * t801 + t556 * t771 - t768 * pkin(2) * t634 - t636 * t907 - t826 * t825 - t646 * t668 + (-t722 + t853) * t628 + (-t605 + (-pkin(10) * t908 + t758) * qJD(2)) * t837) * MDP(16) + (t633 * t908 + (-t723 + t852) * t670) * MDP(11) + (t668 * t723 + t670 * t722 + (t633 * t779 - t634 * t775 + (-t668 * t779 - t670 * t775) * qJD(3)) * t768) * MDP(12) + (-t488 * t734 - t489 * t733 + t519 * t940 - t883 * t520 - t587 * t651 - t588 * t650 - t889 * t812 + t887 * t843) * MDP(18) + (t543 * t699 + t611 * t885) * MDP(20) + (-t543 * t698 - t544 * t699 - t609 * t885 - t611 * t884) * MDP(21) + (-t493 * t698 - t544 * t656 - t561 * t884 - t608 * t890) * MDP(30) + (t492 * t698 + t544 * t657 + t563 * t884 + t608 * t891) * MDP(29) + (t492 * t657 + t563 * t891) * MDP(27) - t863 * t934; t670 * t668 * MDP(11) + (-t668 ^ 2 + t670 ^ 2) * MDP(12) + (t668 * t825 + t633) * MDP(13) + (t670 * t825 - t880 * t926 - t833) * MDP(14) + qJD(1) * t810 + (t606 * t842 - t628 * t670 + t828) * MDP(16) + (t605 * t825 + t628 * t668 + t789) * MDP(17) + ((-t587 * t767 - t588 * t770) * pkin(3) + (t519 - t527) * t843 + (t520 - t526) * t812) * MDP(18) + (t519 * t526 - t520 * t527 + (t488 * t770 + t489 * t767 - t612 * t670) * pkin(3)) * MDP(19) + (t543 * t774 + t611 * t841) * MDP(20) + ((t543 - t938) * t778 + (-t611 * t929 - t544) * t774) * MDP(21) + (t587 * t774 + t841 * t929 - t913) * MDP(22) + (-t873 * t929 + t892 + t914) * MDP(23) - t929 * t812 * MDP(24) + (-t490 * t812 - t526 * t609 + t762 * t544 + (-t486 + (-qJD(5) * t761 - t560) * t929) * t778 + (t527 * t929 + t795) * t774) * MDP(25) + (t486 * t774 + t491 * t812 - t526 * t611 + t762 * t543 + (t761 * t873 + t896) * t929 + t795 * t778) * MDP(26) + (t492 * t774 * t777 + t563 * t790) * MDP(27) + (t561 * t570 + t563 * t569 + (-t561 * t777 - t563 * t773) * t871 + (-t920 - t493 * t777 + (t561 * t773 - t563 * t777) * qJD(6)) * t774) * MDP(28) + (-t492 * t778 + t559 + (-t915 + t918) * t774 + t790 * t608) * MDP(29) + (t493 * t778 + (-t773 * t871 + t569) * t608 + (-t561 * t929 + t803) * t774) * MDP(30) + (-t544 * t778 + t608 * t937) * MDP(31) + (t740 * t918 - t483 * t569 - t494 * t561 + (t773 * t838 - t777 * t897) * t608 + (t483 * t874 + t761 * t787 - t471) * t778 + (t483 * t869 + t473 * t773 + t820 * t843 + t761 * t493 + (t608 * t761 * t773 - t820) * qJD(5)) * t774) * MDP(32) + (-t740 * t919 - t483 * t570 - t494 * t563 + (t773 * t897 + t777 * t838) * t608 + (t483 * t872 + t470 + (qJD(5) * t563 + t802) * t761) * t778 + (-t483 * t870 + t473 * t777 + t479 * t843 + t761 * t492 + (t761 * t840 - t479) * qJD(5)) * t774) * MDP(33); (-t812 ^ 2 - t843 ^ 2) * MDP(18) + (t519 * t812 - t520 * t843 + t596) * MDP(19) + (t892 - t914) * MDP(25) - MDP(26) * t913 + t569 * t608 * MDP(32) + (t570 * t608 + t559) * MDP(33) + ((-t608 * t874 - t493) * MDP(32) + (-t608 * t872 - t492) * MDP(33) - t929 ^ 2 * MDP(26)) * t778 + (-qJD(5) * t929 * MDP(25) - t587 * MDP(26) + (-t561 * t843 + t787) * MDP(32) + (t802 - t915) * MDP(33)) * t774; -t609 ^ 2 * MDP(21) + (t543 + t938) * MDP(22) - t844 * MDP(23) + t587 * MDP(24) + (t491 * t929 + t475) * MDP(25) + (t490 * t929 + t514 * t609 - t474) * MDP(26) + (t563 * t840 + t920) * MDP(27) + ((t492 - t917) * t777 + (-t493 - t916) * t773) * MDP(28) + (t608 * t840 + t919) * MDP(29) + (-t608 ^ 2 * t773 + t918) * MDP(30) + (-pkin(5) * t493 - t491 * t561 + t786 * t773 - t777 * t928) * MDP(32) + (-pkin(5) * t492 - t491 * t563 + t773 * t928 + t786 * t777) * MDP(33) + (t609 * MDP(20) + (-qJD(5) + t929) * MDP(23) - t514 * MDP(25) - t563 * MDP(29) + t561 * MDP(30) - t608 * MDP(31) + t820 * MDP(32) + t479 * MDP(33) + t611 * MDP(21)) * t611; t563 * t561 * MDP(27) + (-t561 ^ 2 + t563 ^ 2) * MDP(28) + (t861 + t917) * MDP(29) + (-t845 + t916) * MDP(30) + t544 * MDP(31) + (t479 * t608 - t483 * t563 + t847) * MDP(32) + (t483 * t561 - t608 * t820 - t821) * MDP(33) + (-MDP(29) * t912 - MDP(30) * t563 - MDP(32) * t479 + MDP(33) * t820) * qJD(6);];
tauc  = t1;
