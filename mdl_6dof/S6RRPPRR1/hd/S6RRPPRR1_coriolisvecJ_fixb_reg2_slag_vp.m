% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:48:09
% EndTime: 2019-03-09 08:48:19
% DurationCPUTime: 5.40s
% Computational Cost: add. (9910->449), mult. (24571->573), div. (0->0), fcn. (18005->8), ass. (0->238)
t177 = sin(qJ(6));
t180 = cos(qJ(6));
t175 = sin(pkin(10));
t181 = cos(qJ(2));
t262 = cos(pkin(10));
t166 = t262 * t181;
t212 = qJD(1) * t166;
t179 = sin(qJ(2));
t248 = qJD(1) * t179;
t134 = t175 * t248 - t212;
t147 = t175 * t181 + t262 * t179;
t192 = qJD(1) * t147;
t117 = qJD(2) * t192;
t243 = qJD(1) * qJD(2);
t231 = t179 * t243;
t158 = t175 * t231;
t118 = qJD(2) * t212 - t158;
t178 = sin(qJ(5));
t246 = qJD(5) * t178;
t287 = cos(qJ(5));
t196 = -t178 * t117 - t287 * t118 + t192 * t246;
t233 = qJD(5) * t287;
t185 = -t134 * t233 + t196;
t242 = qJD(2) - qJD(5);
t219 = t180 * t242;
t245 = qJD(6) * t177;
t80 = t178 * t134 + t192 * t287;
t21 = qJD(6) * t219 + t180 * t185 + t80 * t245;
t63 = -t177 * t242 + t180 * t80;
t261 = qJD(6) * t63;
t22 = -t177 * t185 + t261;
t299 = -t287 * t134 + t178 * t192;
t310 = qJD(6) + t299;
t324 = t63 * t310;
t60 = t177 * t80 + t219;
t325 = t60 * t310;
t333 = t177 * (t22 + t324) + t180 * (t21 + t325);
t332 = -t21 + t325;
t329 = t324 - t22;
t278 = t63 * t80;
t222 = -t287 * t117 + t178 * t118;
t311 = qJD(5) * t80;
t35 = t222 + t311;
t268 = t177 * t35;
t322 = t180 * t310;
t316 = t310 * t322 + t268;
t328 = -t278 + t316;
t269 = t177 * t21;
t327 = t322 * t63 - t269;
t273 = -qJ(3) - pkin(7);
t156 = t273 * t179;
t151 = qJD(1) * t156;
t144 = qJD(2) * pkin(2) + t151;
t157 = t273 * t181;
t152 = qJD(1) * t157;
t258 = t175 * t152;
t85 = t262 * t144 + t258;
t199 = qJD(4) - t85;
t285 = t192 * pkin(8);
t50 = -t285 + (-pkin(3) - pkin(4)) * qJD(2) + t199;
t286 = pkin(8) * t134;
t226 = t262 * t152;
t86 = t175 * t144 - t226;
t81 = qJD(2) * qJ(4) + t86;
t55 = t81 + t286;
t26 = -t178 * t55 + t287 * t50;
t24 = pkin(5) * t242 - t26;
t326 = t24 * t310;
t27 = t178 * t50 + t287 * t55;
t167 = -t262 * pkin(2) - pkin(3);
t162 = -pkin(4) + t167;
t165 = pkin(2) * t175 + qJ(4);
t106 = t178 * t162 + t287 * t165;
t89 = t151 * t175 - t226;
t205 = t89 + t286;
t90 = t262 * t151 + t258;
t64 = t90 + t285;
t271 = t106 * qJD(5) + t287 * t205 + (qJD(4) - t64) * t178;
t323 = t27 - t271;
t303 = t242 * t299;
t321 = t185 + t303;
t229 = -t180 * t35 + t245 * t310;
t266 = t177 * t310;
t217 = t266 * t299 + t229;
t281 = t60 * t80;
t320 = t217 - t281;
t252 = t80 * qJD(2);
t319 = t252 + t222;
t276 = t299 ^ 2;
t277 = t80 ^ 2;
t318 = t276 - t277;
t168 = -t181 * pkin(2) - pkin(1);
t317 = qJD(1) * t168;
t163 = pkin(2) * t231;
t45 = t117 * pkin(3) - t118 * qJ(4) - qJD(4) * t192 + t163;
t34 = -t117 * pkin(4) - t45;
t10 = t35 * pkin(5) + pkin(9) * t185 + t34;
t228 = qJD(2) * t273;
t129 = qJD(3) * t181 + t179 * t228;
t103 = t129 * qJD(1);
t195 = -qJD(3) * t179 + t181 * t228;
t104 = t195 * qJD(1);
t59 = t103 * t175 - t262 * t104;
t206 = -pkin(8) * t118 + t59;
t171 = qJD(2) * qJD(4);
t62 = t262 * t103 + t175 * t104;
t56 = t171 + t62;
t42 = pkin(8) * t117 + t56;
t198 = -t178 * t206 - t50 * t233 + t55 * t246 - t287 * t42;
t153 = qJD(3) + t317;
t66 = t134 * pkin(3) - qJ(4) * t192 + t153;
t48 = -pkin(4) * t134 - t66;
t20 = pkin(5) * t299 - pkin(9) * t80 + t48;
t25 = -pkin(9) * t242 + t27;
t6 = t177 * t20 + t180 * t25;
t2 = -qJD(6) * t6 + t180 * t10 + t177 * t198;
t304 = -t310 * t6 - t2;
t208 = t177 * t25 - t180 * t20;
t1 = -qJD(6) * t208 + t10 * t177 - t180 * t198;
t313 = t208 * t310 + t1;
t315 = t6 * t80;
t314 = t310 * t80;
t312 = t208 * t80;
t275 = t80 * t299;
t230 = t178 * t42 - t287 * t206;
t309 = t48 * t80 + t230;
t308 = t299 * t48 + t198;
t221 = t175 * t179 - t166;
t295 = qJD(2) * t147;
t307 = t117 * t221 + t134 * t295;
t247 = qJD(2) * t179;
t160 = t175 * t247;
t200 = qJD(2) * t166 - t160;
t306 = t147 * t117 + t118 * t221 + t134 * t200 + t192 * t295;
t37 = pkin(5) * t80 + pkin(9) * t299;
t305 = -0.2e1 * t243;
t30 = t178 * t205 + t287 * t64;
t105 = t287 * t162 - t178 * t165;
t91 = t287 * qJD(4) + t105 * qJD(5);
t272 = t91 - t30;
t182 = qJD(2) ^ 2;
t300 = t182 * t147;
t298 = 0.2e1 * t192;
t130 = t134 ^ 2;
t292 = t192 ^ 2;
t297 = -t292 - t130;
t296 = -t292 + t130;
t293 = t242 ^ 2;
t95 = -t262 * t156 - t157 * t175;
t72 = -pkin(8) * t147 + t95;
t96 = t175 * t156 - t262 * t157;
t73 = pkin(8) * t221 + t96;
t204 = -t178 * t73 + t287 * t72;
t8 = qJD(5) * t27 + t230;
t291 = t204 * t8;
t88 = t287 * t147 + t178 * t221;
t288 = t8 * t88;
t197 = t287 * t221;
t87 = t147 * t178 - t197;
t284 = t35 * t87;
t283 = t59 * t95;
t280 = t63 * t60;
t274 = t88 * t35;
t270 = t192 * t66;
t267 = t177 * t60;
t265 = t180 * t22;
t263 = t180 * t63;
t260 = qJD(6) * t310;
t259 = t192 * t134;
t183 = qJD(1) ^ 2;
t256 = t181 * t183;
t255 = t182 * t179;
t254 = t182 * t181;
t70 = t175 * t129 - t262 * t195;
t253 = t70 * qJD(2);
t251 = qJD(4) - t90;
t71 = t262 * t129 + t175 * t195;
t249 = t179 ^ 2 - t181 ^ 2;
t244 = qJD(6) * t180;
t241 = t8 * t287;
t240 = pkin(2) * t248;
t239 = pkin(2) * t247;
t238 = t88 * t245;
t237 = t88 * t244;
t236 = t179 * t256;
t235 = t177 * t287;
t234 = t180 * t287;
t232 = t287 * qJD(2);
t223 = pkin(1) * t305;
t220 = t26 * t242;
t84 = t221 * pkin(3) - t147 * qJ(4) + t168;
t218 = pkin(9) * t260 + t8;
t216 = t181 * t231;
t102 = -pkin(9) + t106;
t215 = t102 * t260 - t8;
t214 = qJD(2) * t90 - t62;
t39 = -qJD(5) * t197 + t147 * t246 - t178 * t295 - t287 * t200;
t213 = -t24 * t39 + t288;
t211 = t177 * t6 - t180 * t208;
t210 = -t310 * t39 + t274;
t58 = -pkin(4) * t221 - t84;
t28 = t87 * pkin(5) - t88 * pkin(9) + t58;
t32 = t178 * t72 + t287 * t73;
t14 = -t177 * t32 + t180 * t28;
t15 = t177 * t28 + t180 * t32;
t69 = pkin(3) * t192 + t134 * qJ(4) + t240;
t203 = -t178 * t80 + t287 * t299;
t202 = qJD(2) * t89 - t59;
t201 = -pkin(9) * t35 + t326;
t54 = pkin(3) * t295 - t200 * qJ(4) - t147 * qJD(4) + t239;
t51 = -pkin(4) * t192 - t69;
t191 = -t102 * t35 - t310 * t91 - t326;
t190 = -t96 * t117 + t95 * t118 - t71 * t134 + t59 * t147 + t192 * t70;
t188 = -qJD(6) * t211 + t1 * t180 - t177 * t2;
t187 = t298 * qJD(2);
t186 = -pkin(8) * t200 + t70;
t41 = -pkin(4) * t295 - t54;
t121 = t200 * qJD(2);
t101 = pkin(5) - t105;
t94 = t177 * t192 + t180 * t232;
t93 = -t177 * t232 + t180 * t192;
t83 = -t158 + (t212 + t134) * qJD(2);
t82 = -t158 + (t212 - t134) * qJD(2);
t75 = -qJD(2) * pkin(3) + t199;
t52 = pkin(8) * t295 + t71;
t46 = t118 * t147 + t192 * t200;
t40 = t88 * qJD(5) + t178 * t200 - t287 * t295;
t23 = -t37 + t51;
t19 = t177 * t37 + t180 * t26;
t18 = -t177 * t26 + t180 * t37;
t17 = t32 * qJD(5) + t178 * t52 - t287 * t186;
t16 = t204 * qJD(5) + t178 * t186 + t287 * t52;
t13 = t40 * pkin(5) + t39 * pkin(9) + t41;
t12 = t177 * t23 + t180 * t30;
t11 = -t177 * t30 + t180 * t23;
t4 = -qJD(6) * t15 + t13 * t180 - t16 * t177;
t3 = qJD(6) * t14 + t13 * t177 + t16 * t180;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t216, t249 * t305, t254, -0.2e1 * t216, -t255, 0, -pkin(7) * t254 + t179 * t223, pkin(7) * t255 + t181 * t223, 0, 0, t46, -t306, t121, t307, -t300, 0, t168 * t117 + t134 * t239 + t153 * t295 + t163 * t221 - t253, t168 * t118 - t153 * t160 + (t298 * t179 * pkin(2) + t153 * t166 - t71) * qJD(2), -t200 * t85 - t221 * t62 - t295 * t86 + t190, t283 + t62 * t96 - t70 * t85 + t71 * t86 + (t153 + t317) * t239, t46, t121, t306, 0, t300, t307, t84 * t117 + t54 * t134 + t221 * t45 + t295 * t66 - t253, t200 * t75 - t221 * t56 - t295 * t81 + t190, t71 * qJD(2) - t84 * t118 - t45 * t147 - t192 * t54 - t200 * t66, t45 * t84 + t54 * t66 + t56 * t96 + t70 * t75 + t71 * t81 + t283, -t185 * t88 - t80 * t39, t185 * t87 + t299 * t39 - t80 * t40 - t274, t39 * t242, t299 * t40 + t284, t40 * t242, 0, t17 * t242 + t299 * t41 + t34 * t87 + t58 * t35 + t48 * t40, t16 * t242 - t185 * t58 + t34 * t88 - t48 * t39 + t41 * t80, -t16 * t299 + t17 * t80 + t185 * t204 + t198 * t87 + t26 * t39 - t27 * t40 - t32 * t35 + t288, t16 * t27 - t17 * t26 - t198 * t32 + t34 * t58 + t41 * t48 - t291, -t63 * t238 + (-t21 * t88 - t39 * t63) * t180 (t177 * t63 + t180 * t60) * t39 + (t269 - t265 + (-t263 + t267) * qJD(6)) * t88, t180 * t210 - t21 * t87 - t238 * t310 + t40 * t63, t60 * t237 + (t22 * t88 - t39 * t60) * t177, -t177 * t210 - t22 * t87 - t237 * t310 - t40 * t60, t310 * t40 + t284, t14 * t35 + t17 * t60 + t177 * t213 + t2 * t87 - t204 * t22 - t208 * t40 + t237 * t24 + t310 * t4, -t1 * t87 - t15 * t35 + t17 * t63 + t180 * t213 + t204 * t21 - t238 * t24 - t3 * t310 - t40 * t6, t14 * t21 - t15 * t22 - t3 * t60 - t4 * t63 + t211 * t39 + (-t1 * t177 - t180 * t2 + (-t177 * t208 - t180 * t6) * qJD(6)) * t88, t1 * t15 + t14 * t2 + t17 * t24 - t208 * t4 + t3 * t6 - t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, t249 * t183, 0, t236, 0, 0, t183 * pkin(1) * t179, pkin(1) * t256, 0, 0, t259, -t296, t83, -t259, 0, 0, -t134 * t240 - t153 * t192 + t202, t134 * t153 - t192 * t240 + t214 (t86 - t89) * t192 + (-t85 + t90) * t134 + (-t117 * t175 - t262 * t118) * pkin(2), t85 * t89 - t86 * t90 + (-t153 * t248 + t175 * t62 - t262 * t59) * pkin(2), t259, t83, t296, 0, 0, -t259, -t134 * t69 + t202 - t270, -t117 * t165 + t118 * t167 + (t81 - t89) * t192 + (t75 - t251) * t134, -t134 * t66 + t192 * t69 + 0.2e1 * t171 - t214, t165 * t56 + t167 * t59 + t251 * t81 - t66 * t69 - t75 * t89, -t275, t318, t321, t275, t319, 0, t271 * qJD(2) + t323 * qJD(5) - t51 * t299 + t309, t272 * t242 - t51 * t80 - t308, t105 * t185 - t106 * t35 - t323 * t80 + (t26 - t272) * t299, -t105 * t8 - t106 * t198 - t26 * t271 + t27 * t272 - t48 * t51, -t327, t333, -t328, -t267 * t310 + t265, t320, t314, t101 * t22 - t11 * t310 + t177 * t191 - t180 * t215 + t271 * t60 - t312, -t101 * t21 + t12 * t310 + t177 * t215 + t180 * t191 + t271 * t63 - t315, t11 * t63 + t12 * t60 + (-t102 * t22 - t208 * t299 - t60 * t91 - t1 + (t102 * t63 - t208) * qJD(6)) * t180 + (-t102 * t21 + t6 * t299 + t63 * t91 + t2 + (t102 * t60 + t6) * qJD(6)) * t177, t101 * t8 + (t180 * t91 - t12) * t6 - (-t177 * t91 - t11) * t208 + t271 * t24 + t188 * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187, t82, t297, t134 * t86 + t192 * t85 + t163, 0, 0, 0, 0, 0, 0, t187, t297, -t82, t134 * t81 - t192 * t75 + t45, 0, 0, 0, 0, 0, 0, -t222 + t252 - 0.2e1 * t311, t185 - t303, t276 + t277, -t26 * t80 - t27 * t299 - t34, 0, 0, 0, 0, 0, 0, t217 + t281, t278 + t316, -t329 * t177 + t180 * t332, -t177 * t313 + t180 * t304 + t24 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, t83, -t292 - t182, -qJD(2) * t81 + t270 + t59, 0, 0, 0, 0, 0, 0, -t178 * t293 - t192 * t299, -t192 * t80 - t287 * t293, -t178 * t35 + t287 * t196 + (-t287 ^ 2 * t134 - t203) * qJD(5) + t203 * qJD(2), -t241 - t48 * t192 + (-t232 + t233) * t27 + (-t198 + t220) * t178, 0, 0, 0, 0, 0, 0, -t287 * t22 + (-t177 * t233 - t93) * t310 + (-t242 * t60 - t244 * t310 - t268) * t178, t287 * t21 + (-t180 * t233 + t94) * t310 + (-t242 * t63 + t229) * t178, t94 * t60 + t93 * t63 + (-t234 * t60 + t235 * t63) * qJD(5) + (-t269 - t265 + (t263 + t267) * qJD(6)) * t178, -t241 + t208 * t93 - t6 * t94 + (t208 * t235 + t234 * t6) * qJD(5) + (-t24 * t242 + t188) * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, -t318, -t321, -t275, -t319, 0, -t27 * qJD(2) - t309, -t220 + t308, 0, 0, t327, -t333, t328, t60 * t266 - t265, -t320, -t314, -pkin(5) * t22 + t177 * t201 - t18 * t310 - t180 * t218 - t27 * t60 + t312, pkin(5) * t21 + t177 * t218 + t180 * t201 + t19 * t310 - t27 * t63 + t315, t18 * t63 + t19 * t60 + ((-t22 + t261) * pkin(9) + t313) * t180 + ((qJD(6) * t60 - t21) * pkin(9) + t304) * t177, -pkin(5) * t8 + pkin(9) * t188 + t18 * t208 - t19 * t6 - t24 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, -t60 ^ 2 + t63 ^ 2, t332, -t280, t329, t35, -t24 * t63 - t304, t24 * t60 - t313, 0, 0;];
tauc_reg  = t5;
