% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:48:10
% EndTime: 2019-03-09 08:48:39
% DurationCPUTime: 21.46s
% Computational Cost: add. (19018->705), mult. (35150->889), div. (0->0), fcn. (40957->8), ass. (0->553)
t607 = qJD(2) - qJD(5);
t461 = cos(qJ(6));
t454 = qJD(6) * t461;
t457 = sin(pkin(10));
t460 = sin(qJ(2));
t462 = cos(qJ(2));
t761 = cos(pkin(10));
t561 = t761 * t462;
t423 = -t457 * t460 + t561;
t562 = t761 * t460;
t725 = t457 * t462;
t424 = t562 + t725;
t459 = sin(qJ(5));
t781 = cos(qJ(5));
t825 = t781 * t423 + t459 * t424;
t839 = t461 * t825;
t851 = t839 / 0.2e1;
t856 = 0.2e1 * t851;
t857 = t856 * qJD(1);
t867 = t454 + t857;
t731 = t825 ^ 2;
t404 = t781 * t424;
t714 = t459 * t423;
t359 = -t404 + t714;
t845 = t359 ^ 2;
t606 = t845 - t731;
t863 = t606 * t461;
t866 = qJD(1) * t863;
t458 = sin(qJ(6));
t864 = t606 * t458;
t865 = qJD(1) * t864;
t840 = t458 * t359;
t322 = t840 / 0.2e1;
t323 = -t840 / 0.2e1;
t855 = t323 + t322;
t862 = qJD(2) * t855;
t852 = -t839 / 0.2e1;
t854 = t851 + t852;
t861 = qJD(6) * t854;
t860 = qJD(6) * t856;
t859 = t606 * qJD(1);
t858 = t855 * qJD(3);
t354 = t714 / 0.2e1 - t404 / 0.2e1;
t834 = t359 * qJD(1);
t849 = t825 * t834;
t496 = qJD(6) * t354 + t849;
t853 = 0.2e1 * t458;
t456 = t461 ^ 2;
t841 = t456 * t825;
t332 = -t841 / 0.2e1;
t333 = t841 / 0.2e1;
t842 = t359 * pkin(5);
t850 = -t842 / 0.2e1;
t771 = -qJ(3) - pkin(7);
t537 = t771 * t761;
t426 = t460 * t537;
t375 = -t725 * t771 - t426;
t774 = t424 * pkin(8);
t482 = t375 - t774;
t470 = t459 * t482;
t427 = t771 * t561;
t565 = t457 * t771;
t546 = t460 * t565;
t490 = -t423 * pkin(8) + t546;
t288 = -t427 + t490;
t593 = t781 * t288;
t183 = t593 + t470;
t176 = t461 * t183;
t448 = -t462 * pkin(2) - pkin(1);
t507 = t424 * qJ(4) - t448;
t266 = (pkin(3) + pkin(4)) * t423 + t507;
t779 = pkin(9) * t359;
t538 = pkin(5) * t825 + t779;
t466 = t266 + t538;
t86 = t458 * t466 + t176;
t766 = t86 * t461;
t722 = t458 * t183;
t85 = -t461 * t466 + t722;
t767 = t85 * t458;
t848 = t766 + t767;
t778 = pkin(9) * t825;
t235 = t778 - t842;
t420 = t423 ^ 2;
t806 = t424 ^ 2;
t283 = t806 - t420;
t847 = t283 * qJD(1);
t846 = t283 * qJD(2);
t799 = -t359 / 0.2e1;
t843 = -t825 / 0.2e1;
t800 = t825 / 0.2e1;
t527 = t86 * t458 - t461 * t85;
t838 = t527 * t825;
t669 = qJD(5) * t359;
t510 = qJD(2) * t359 - t669;
t670 = qJD(5) * t825;
t509 = qJD(2) * t825 - t670;
t677 = qJD(3) * t359;
t837 = qJD(3) * t825;
t835 = t354 * qJD(1);
t816 = t806 + t420;
t833 = t816 * qJD(1);
t832 = t825 * qJD(1);
t445 = pkin(2) * t457 + qJ(4);
t447 = -pkin(2) * t761 - pkin(3);
t524 = -pkin(4) + t447;
t392 = t445 * t781 + t459 * t524;
t389 = -pkin(9) + t392;
t595 = t456 * t781;
t455 = t458 ^ 2;
t596 = t455 * t781;
t480 = t595 / 0.2e1 + t596 / 0.2e1;
t597 = t392 * t781;
t831 = t597 / 0.2e1 - t480 * t389;
t428 = t462 * t537;
t374 = -t428 + t546;
t376 = t462 * t565 + t426;
t377 = -t427 + t546;
t481 = (t374 - t377) * t424 + (t375 + t376) * t423;
t830 = qJD(2) * t481 + qJD(3) * t816;
t829 = -0.2e1 * t359;
t391 = t445 * t459 - t781 * t524;
t388 = pkin(5) + t391;
t439 = t456 - t455;
t828 = t439 * t607;
t226 = 0.2e1 * t852;
t592 = t781 * t825;
t343 = -t592 / 0.2e1;
t605 = -t781 / 0.2e1;
t540 = t825 * t605;
t785 = -t459 / 0.2e1;
t826 = t359 * t785 + t343 + t540;
t702 = t455 + t456;
t429 = t595 + t596;
t386 = (-t781 + t429) * t459;
t381 = t386 * qJD(4);
t721 = t458 * t235;
t280 = t781 * t482;
t715 = t459 * t288;
t181 = -t280 + t715;
t739 = t181 * t461;
t111 = t721 - t739;
t749 = t111 * t461;
t710 = t461 * t235;
t740 = t181 * t458;
t110 = t710 + t740;
t752 = t110 * t458;
t502 = t749 / 0.2e1 - t752 / 0.2e1;
t599 = t183 * t781;
t544 = -t599 / 0.2e1;
t784 = t459 / 0.2e1;
t169 = t181 * t784;
t808 = t848 * t781 / 0.2e1;
t604 = t169 + t808;
t8 = t459 * t502 + t544 + t604;
t469 = t480 * pkin(9);
t789 = t455 / 0.2e1;
t567 = t456 / 0.2e1 + t789;
t798 = -t388 / 0.2e1;
t805 = -pkin(5) / 0.2e1;
t99 = t469 + (t391 * t567 + t798 + t805) * t459 + t831;
t824 = -t8 * qJD(1) + t99 * qJD(2) - t381;
t483 = -t428 + t490;
t471 = t459 * t483;
t287 = t376 + t774;
t594 = t781 * t287;
t182 = t594 + t471;
t711 = t461 * t182;
t414 = t423 * qJ(4);
t415 = t424 * pkin(3);
t772 = t460 * pkin(2);
t357 = -t414 + t415 + t772;
t775 = t424 * pkin(4);
t268 = -t357 - t775;
t139 = t268 - t235;
t724 = t458 * t139;
t88 = t711 + t724;
t762 = t88 * t461;
t712 = t461 * t139;
t723 = t458 * t182;
t87 = t712 - t723;
t765 = t87 * t458;
t504 = t762 / 0.2e1 - t765 / 0.2e1;
t613 = t429 * qJD(2);
t823 = -qJD(5) * t429 + t613;
t198 = t226 * t458;
t788 = -t456 / 0.2e1;
t210 = (t789 + t788) * t359;
t641 = t210 * qJD(6);
t822 = -t198 * qJD(2) + t641;
t821 = -t198 * qJD(5) - t641;
t717 = t458 * t461;
t197 = (t843 + t800) * t717;
t820 = -qJD(2) * t197 - t641;
t442 = t458 * t454;
t646 = t197 * qJD(1);
t819 = t646 - t442;
t818 = t646 + t442;
t817 = qJD(5) * t197 + t641;
t516 = t375 * t424 + t377 * t423;
t815 = qJD(1) * t516;
t813 = qJD(3) * t516;
t812 = qJD(5) * t855;
t550 = 0.2e1 * t322;
t811 = qJD(5) * t550;
t810 = t481 * qJD(1);
t809 = 0.2e1 * t388;
t570 = t359 * t784;
t127 = -t570 + t826;
t586 = qJD(1) * t717;
t90 = -t210 * t607 - t586 * t845;
t804 = t87 / 0.2e1;
t803 = -t88 / 0.2e1;
t802 = t176 / 0.2e1;
t801 = -t181 / 0.2e1;
t797 = t388 / 0.2e1;
t796 = -t389 / 0.2e1;
t795 = t389 / 0.2e1;
t794 = -t391 / 0.2e1;
t793 = t392 / 0.2e1;
t792 = -t424 / 0.2e1;
t791 = -t427 / 0.2e1;
t790 = -t455 / 0.2e1;
t787 = -t458 / 0.2e1;
t783 = t461 / 0.2e1;
t782 = t8 * qJD(5);
t279 = t781 * t483;
t716 = t459 * t287;
t180 = -t279 + t716;
t777 = t180 * pkin(5);
t773 = t459 * pkin(5);
t770 = qJD(2) * pkin(2);
t744 = t180 * t181;
t5 = -t85 * t87 + t86 * t88 + t744;
t769 = t5 * qJD(1);
t763 = t88 * t458;
t764 = t87 * t461;
t6 = -(t763 + t764) * t359 + t838;
t768 = t6 * qJD(1);
t741 = t181 * t359;
t18 = t825 * t848 + t741;
t760 = qJD(1) * t18;
t30 = t527 * t424;
t759 = qJD(1) * t30;
t51 = t181 * t840 + t825 * t85;
t758 = qJD(1) * t51;
t707 = t461 * t359;
t52 = -t181 * t707 - t825 * t86;
t757 = qJD(1) * t52;
t60 = t183 * t825 + t741;
t756 = qJD(1) * t60;
t174 = t599 / 0.2e1;
t94 = t174 + t544;
t755 = qJD(1) * t94;
t754 = qJD(4) * t94;
t750 = t111 * t458;
t751 = t110 * t461;
t10 = -(t750 + t751) * t359 - t838;
t753 = t10 * qJD(1);
t13 = (-t111 / 0.2e1 + t803) * t461 + (t110 / 0.2e1 + t804) * t458;
t748 = t13 * qJD(1);
t520 = -t180 * t359 + t181 * t825;
t14 = -t85 * t359 + t458 * t520 + t825 * t87;
t747 = t14 * qJD(1);
t15 = -t86 * t359 + t461 * t520 - t825 * t88;
t746 = t15 * qJD(1);
t16 = -(-t85 + t722) * t359 + (t110 - t740) * t825;
t745 = t16 * qJD(1);
t743 = t180 * t458;
t742 = t180 * t461;
t536 = t567 * t825;
t474 = t359 * t797 + t389 * t536;
t505 = -t764 / 0.2e1 - t763 / 0.2e1;
t19 = t474 - t505;
t738 = t19 * qJD(1);
t568 = t391 / 0.2e1 + t798;
t468 = -(t796 + t793) * t359 + t568 * t825;
t463 = t779 / 0.2e1 + pkin(5) * t800 + t468;
t22 = t802 + t742 / 0.2e1 + t463 * t458;
t737 = t22 * qJD(1);
t25 = (-t183 / 0.2e1 - t180 / 0.2e1) * t458 + t463 * t461;
t736 = t25 * qJD(1);
t27 = -t182 * t825 - t183 * t359 + t520;
t735 = t27 * qJD(1);
t31 = t182 * t183 + t266 * t268 + t744;
t734 = t31 * qJD(1);
t477 = pkin(9) * t536 + t850;
t503 = -t751 / 0.2e1 - t750 / 0.2e1;
t32 = t477 - t503;
t733 = t32 * qJD(1);
t730 = t388 * t459;
t729 = t391 * t459;
t728 = t455 * t825;
t719 = t458 * t825;
t171 = -t739 / 0.2e1;
t499 = -t359 * t798 + t795 * t825;
t484 = t139 / 0.2e1 + t499;
t47 = t171 + t711 / 0.2e1 + t484 * t458;
t706 = t47 * qJD(1);
t168 = -t740 / 0.2e1;
t49 = t168 + t723 / 0.2e1 - t484 * t461;
t705 = t49 * qJD(1);
t464 = -t470 / 0.2e1 - t593 / 0.2e1;
t533 = t279 / 0.2e1 - t716 / 0.2e1;
t95 = t464 + t533;
t704 = t95 * qJD(1);
t465 = -t471 / 0.2e1 - t594 / 0.2e1;
t532 = t280 / 0.2e1 - t715 / 0.2e1;
t96 = -t465 + t532;
t703 = t96 * qJD(1);
t108 = t266 * t359 + t268 * t825;
t701 = qJD(1) * t108;
t109 = t266 * t825 - t268 * t359;
t700 = qJD(1) * t109;
t319 = t728 / 0.2e1;
t573 = t825 * t790;
t497 = t573 + t332;
t124 = t333 + t319 + t497;
t699 = qJD(1) * t124;
t132 = -t731 - t845;
t129 = t132 * t458;
t697 = qJD(1) * t129;
t131 = t132 * t461;
t695 = qJD(1) * t131;
t352 = -t423 * pkin(3) - t507;
t151 = t352 * t424 - t357 * t423;
t692 = qJD(1) * t151;
t152 = -t352 * t423 - t357 * t424;
t691 = qJD(1) * t152;
t348 = -t423 * t772 + t424 * t448;
t688 = qJD(1) * t348;
t349 = t423 * t448 + t424 * t772;
t687 = qJD(1) * t349;
t684 = qJD(1) * t462;
t680 = qJD(2) * t376;
t679 = qJD(2) * t458;
t678 = qJD(2) * t461;
t676 = qJD(3) * t423;
t541 = t592 / 0.2e1;
t229 = t343 + t541;
t675 = qJD(4) * t229;
t674 = qJD(4) * t424;
t673 = qJD(4) * t429;
t672 = qJD(4) * t459;
t667 = qJD(5) * t458;
t666 = qJD(5) * t461;
t665 = qJD(6) * t458;
t517 = t374 * t375 + t376 * t377;
t101 = t352 * t357 + t517;
t664 = t101 * qJD(1);
t450 = t772 / 0.2e1;
t547 = t450 - t414 / 0.2e1 + t415 / 0.2e1;
t491 = t775 / 0.2e1 + t547;
t500 = t359 * t794 + t392 * t843;
t112 = t491 + t500;
t663 = t112 * qJD(1);
t569 = t359 / 0.2e1 + t799;
t126 = -t459 * t569 + t540 + t541;
t116 = t126 * t458;
t660 = t116 * qJD(1);
t118 = t126 * t461;
t659 = t118 * qJD(1);
t598 = t359 * t781;
t467 = t459 * t536 - t598 / 0.2e1;
t120 = t424 * t567 + t467;
t658 = t120 * qJD(1);
t320 = -t728 / 0.2e1;
t123 = t332 + t320 + t497;
t657 = t123 * qJD(1);
t656 = t126 * qJD(1);
t655 = t132 * qJD(1);
t140 = t448 * t772 + t517;
t653 = t140 * qJD(1);
t150 = t702 * t424 * t359;
t651 = t150 * qJD(1);
t486 = t781 * t799 + t784 * t825;
t475 = t424 / 0.2e1 + t486;
t153 = t475 * t458;
t650 = t153 * qJD(1);
t156 = t475 * t461;
t649 = t156 * qJD(1);
t485 = -t725 / 0.2e1 - t562 / 0.2e1;
t488 = t598 / 0.2e1 + t825 * t785;
t186 = t485 + t488;
t648 = t186 * qJD(1);
t295 = t461 * t570;
t196 = -t707 * t785 - t295;
t647 = t196 * qJD(1);
t498 = -t445 * t423 / 0.2e1 + t447 * t792;
t200 = t498 + t547;
t643 = t200 * qJD(1);
t642 = t210 * qJD(1);
t640 = t855 * qJD(1);
t639 = t550 * qJD(1);
t213 = 0.2e1 * t323;
t638 = t213 * qJD(1);
t215 = t800 * t853;
t206 = t215 * qJD(1);
t325 = -t719 / 0.2e1;
t217 = 0.2e1 * t325;
t637 = t217 * qJD(1);
t221 = t569 * t461;
t636 = t221 * qJD(1);
t222 = 0.2e1 * t799 * t461;
t635 = t222 * qJD(1);
t633 = t226 * qJD(1);
t631 = t229 * qJD(1);
t233 = t702 * t825;
t630 = t233 * qJD(1);
t234 = t439 * t845;
t629 = t234 * qJD(1);
t476 = (t457 * t423 / 0.2e1 + t761 * t792) * pkin(2);
t282 = -t772 / 0.2e1 + t476;
t626 = t282 * qJD(1);
t616 = t806 * qJD(1);
t615 = t423 * qJD(1);
t408 = t423 * qJD(2);
t614 = t424 * qJD(1);
t410 = t424 * qJD(2);
t612 = t439 * qJD(6);
t440 = -t460 ^ 2 + t462 ^ 2;
t611 = t440 * qJD(1);
t610 = t459 * qJD(2);
t609 = t460 * qJD(2);
t608 = t462 * qJD(2);
t603 = pkin(1) * t460 * qJD(1);
t602 = pkin(1) * t684;
t591 = t266 * t832;
t590 = t266 * t834;
t589 = t266 * t614;
t588 = t455 * t834;
t587 = t456 * t834;
t585 = t458 * t678;
t584 = t825 * t674;
t583 = t458 * t666;
t582 = qJD(6) * t825 * t359;
t579 = t359 * t832;
t578 = t825 * t614;
t577 = t359 * t614;
t370 = t423 * t614;
t369 = t423 * t410;
t576 = t460 * t608;
t575 = t461 * t834;
t167 = t740 / 0.2e1;
t170 = t739 / 0.2e1;
t572 = t719 / 0.2e1;
t571 = t825 * t787;
t566 = qJD(6) * t781;
t564 = t781 * qJD(2);
t563 = t781 * qJD(4);
t269 = t702 * t391;
t560 = t607 * t458;
t559 = t607 * t461;
t556 = t458 * t578;
t555 = t461 * t578;
t554 = t359 * t442;
t553 = t845 * t442;
t551 = t359 * t586;
t548 = t333 + t573;
t545 = t180 * t605;
t539 = t805 + t568;
t535 = 0.2e1 * t551;
t534 = -0.2e1 * t551;
t531 = -t222 * qJD(5) - t359 * t678;
t530 = t461 * t560;
t529 = t458 * t559;
t9 = -t110 * t85 + t111 * t86 + t181 * t183;
t528 = t9 * qJD(1) + t8 * qJD(4);
t526 = -t762 + t765;
t134 = -t269 * t389 + t388 * t392;
t501 = t181 * t793 + t183 * t797;
t2 = t777 / 0.2e1 + (pkin(9) * t803 + t111 * t795 + t794 * t86) * t461 + (pkin(9) * t804 + t110 * t796 + t794 * t85) * t458 + t501;
t523 = t2 * qJD(1) + t134 * qJD(2);
t199 = t389 * t429 + t730;
t3 = t545 + (t801 + t504) * t459 - t808;
t522 = qJD(1) * t3 - qJD(2) * t199;
t521 = t749 - t752;
t518 = -t359 * t389 + t388 * t825;
t270 = t597 + t729;
t53 = t545 + t544 + (t182 / 0.2e1 + t801) * t459;
t515 = -qJD(1) * t53 + qJD(2) * t270;
t17 = -(-t86 + t176) * t359 + (-t111 - t739) * t825;
t514 = t17 * qJD(1) + t196 * qJD(4);
t513 = t359 * (-qJD(6) - t832);
t371 = t791 + t428 / 0.2e1;
t512 = qJD(1) * t371 + qJD(2) * t445;
t511 = qJD(2) * t392 + t672;
t508 = qJD(5) * t392 + t672;
t506 = t778 / 0.2e1 + t850;
t494 = qJD(2) * t388 - t563;
t493 = t510 * t825;
t492 = t509 * t359;
t489 = t235 / 0.2e1 + t506;
t432 = -qJD(5) * t781 + t564;
t259 = t539 * t458;
t58 = -t461 * t489 + t167 + t168;
t479 = pkin(5) * t667 - qJD(1) * t58 + qJD(2) * t259;
t260 = t539 * t461;
t56 = t458 * t489 + t170 + t171;
t478 = pkin(5) * t666 - qJD(1) * t56 + qJD(2) * t260;
t441 = t458 * t610;
t473 = -t459 * t667 + t461 * t566 + t441;
t444 = t461 * t610;
t472 = -t458 * t566 - t459 * t666 + t444;
t443 = t460 * t684;
t431 = t607 * t459;
t412 = t424 * qJD(3);
t366 = t374 * qJD(2);
t289 = t791 - t428 / 0.2e1 + t546;
t286 = 0.2e1 * t554;
t285 = -0.2e1 * t554;
t281 = t450 + t476;
t262 = t809 * t783;
t261 = t809 * t458 / 0.2e1;
t237 = t535 - t828;
t236 = t534 + t828;
t232 = t607 * t354;
t218 = t325 + t572;
t216 = t572 + t571;
t209 = t229 * qJD(5);
t208 = t221 * qJD(5);
t205 = t216 * qJD(6);
t204 = t215 * qJD(6);
t201 = -t498 + t547;
t190 = t196 * qJD(5);
t188 = t206 + t665;
t185 = t485 - t488;
t178 = -t530 + t642;
t177 = t529 - t642;
t155 = t424 * t783 - t461 * t486;
t154 = t424 * t787 + t458 * t486;
t125 = t333 + t320 + t548;
t122 = t332 + t319 + t548;
t121 = t467 + (t788 + t790) * t424;
t119 = t461 * t826 - t295;
t117 = t127 * t458;
t113 = t491 - t500;
t100 = t730 / 0.2e1 - t773 / 0.2e1 + t469 - t702 * t729 / 0.2e1 - t831;
t98 = -t464 + t533;
t97 = t465 + t532;
t93 = t94 * qJD(5);
t59 = 0.2e1 * t167 + t710 / 0.2e1 - t506 * t461;
t57 = 0.2e1 * t170 - t721 / 0.2e1 + t506 * t458;
t54 = t182 * t784 + t169 + t174 + t545;
t50 = t168 - t723 / 0.2e1 + t712 / 0.2e1 - t499 * t461;
t48 = t171 - t711 / 0.2e1 - t724 / 0.2e1 + t499 * t458;
t33 = t477 + t503;
t24 = -t722 / 0.2e1 + pkin(5) * t852 + t743 / 0.2e1 + (-t779 / 0.2e1 + t468) * t461;
t23 = t802 + pkin(9) * t323 + pkin(5) * t571 - t742 / 0.2e1 + t468 * t458;
t20 = t474 + t505;
t12 = -t502 + t504;
t4 = t459 * t504 + t545 + t604;
t1 = -t777 / 0.2e1 + (-t766 / 0.2e1 - t767 / 0.2e1) * t391 + t502 * t389 + t501 + t504 * pkin(9);
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t576, t440 * qJD(2), 0, -t576, 0, 0, -pkin(1) * t609, -pkin(1) * t608, 0, 0, t369, -t846, 0, -t369, 0, 0, t348 * qJD(2), t349 * qJD(2), t830, qJD(2) * t140 + t813, t369, 0, t846, 0, 0, -t369, qJD(2) * t151 + t423 * t674, t830, qJD(2) * t152 + qJD(4) * t806, qJD(2) * t101 - t352 * t674 + t813, -t492, t607 * t606, 0, t493, 0, 0, qJD(2) * t108 - t266 * t669 + t584, qJD(2) * t109 - t266 * t670 - t359 * t674, qJD(2) * t27 + qJD(3) * t132, qJD(2) * t31 + qJD(3) * t60 + t266 * t674, -t456 * t492 - t553, t509 * t707 * t853 - t234 * qJD(6), t458 * t582 - t607 * t863, -t455 * t492 + t553, t461 * t582 + t607 * t864, t493, qJD(2) * t14 + qJD(3) * t129 + qJD(5) * t16 + qJD(6) * t52 + t461 * t584, qJD(2) * t15 + qJD(3) * t131 + qJD(5) * t17 + qJD(6) * t51 - t458 * t584, -qJD(2) * t6 + qJD(4) * t150 - qJD(5) * t10, qJD(2) * t5 + qJD(3) * t18 + qJD(4) * t30 + qJD(5) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443, t611, t608, -t443, -t609, 0, -pkin(7) * t608 - t603, pkin(7) * t609 - t602, 0, 0, t370, -t847, t408, -t370, -t410, 0, -t366 + t688, -t680 + t687, t810 + (-t423 * t761 - t424 * t457) * t770, t653 + (-t374 * t761 + t376 * t457) * t770 + t281 * qJD(3), t370, t408, t847, 0, t410, -t370, -t366 + t692, t810 + (t423 * t447 - t424 * t445) * qJD(2) + qJD(4) * t423, t680 + t691, t664 + (t374 * t447 + t376 * t445) * qJD(2) + t201 * qJD(3) + t289 * qJD(4), -t579, t859, -t509, t849, t510, 0, qJD(2) * t180 + qJD(5) * t98 + t701, qJD(2) * t182 + qJD(5) * t97 + t700, t735 + (-t359 * t392 + t391 * t825) * qJD(2) + t127 * qJD(4), t734 + (t180 * t391 + t182 * t392) * qJD(2) + t113 * qJD(3) + t54 * qJD(4) (-t585 - t587) * t825 + t821, t125 * qJD(5) + t285 + (-qJD(2) * t439 + t535) * t825, -t359 * t679 + t811 + t861 - t866 (t585 - t588) * t825 - t821, t205 + t531 + t865, t496, t747 + (t458 * t518 + t742) * qJD(2) + t117 * qJD(4) + t23 * qJD(5) + t50 * qJD(6), t746 + (t461 * t518 - t743) * qJD(2) + t858 + t119 * qJD(4) + t24 * qJD(5) + t48 * qJD(6), qJD(2) * t526 + t12 * qJD(5) - t768, t769 + (t180 * t388 - t389 * t526) * qJD(2) + t20 * qJD(3) + t4 * qJD(4) + t1 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t833, qJD(2) * t281 + t815, 0, 0, 0, 0, 0, 0, 0, t833, 0, qJD(2) * t201 + t815, 0, 0, 0, 0, 0, 0, 0, 0, t655, qJD(2) * t113 + qJD(4) * t185 + t756, 0, 0, 0, 0, 0, 0, t205 - t208 + t697, t695 + t812 + t861 + t862, t122 * qJD(5), qJD(2) * t20 + qJD(4) * t121 + qJD(5) * t33 + t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, t408, t616, qJD(2) * t289 - t352 * t614, 0, 0, 0, 0, 0, 0, t578, -t577, qJD(2) * t127 + t209, qJD(2) * t54 + qJD(3) * t185 + t589 + t93, 0, 0, 0, 0, 0, 0, qJD(2) * t117 + qJD(6) * t155 + t555, qJD(2) * t119 + qJD(6) * t154 + t190 - t556, t651, qJD(2) * t4 + qJD(3) * t121 + t759 + t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t849, -t859, t509, -t849, -t510, 0, qJD(2) * t98 - qJD(5) * t183 - t590, qJD(2) * t97 + qJD(5) * t181 - t591, t675, t754 (-t583 + t587) * t825 + t822, t125 * qJD(2) + t286 + (-qJD(5) * t439 + t534) * t825, qJD(2) * t550 - t359 * t667 + t861 + t866 (t583 + t588) * t825 - t822, -qJD(2) * t222 + qJD(6) * t218 - t359 * t666 - t865, -t496, t745 + t23 * qJD(2) - t221 * qJD(3) + (t458 * t538 - t176) * qJD(5) + t59 * qJD(6), t24 * qJD(2) + t858 + (t461 * t538 + t722) * qJD(5) + t57 * qJD(6) + t514, t12 * qJD(2) + t122 * qJD(3) + qJD(5) * t521 - t753, t1 * qJD(2) + t33 * qJD(3) + (-t183 * pkin(5) + pkin(9) * t521) * qJD(5) + t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t529 * t829 - t629, -t458 * t513 + (qJD(2) + qJD(5)) * t854, -t90, t216 * qJD(2) + t218 * qJD(5) - t461 * t513, t232, qJD(2) * t50 + qJD(3) * t216 + qJD(4) * t155 + qJD(5) * t59 - qJD(6) * t86 + t757, qJD(2) * t48 + qJD(3) * t854 + qJD(4) * t154 + qJD(5) * t57 + qJD(6) * t85 + t758, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t443, -t611, 0, t443, 0, 0, t603, t602, 0, 0, -t370, t847, 0, t370, 0, 0, -t412 - t688, -t676 - t687, -t810, qJD(3) * t282 - t653, -t370, 0, -t847, 0, 0, t370, -t412 - t692, -t810, t676 - t691, -qJD(3) * t200 + qJD(4) * t371 - t664, t579, -t859, 0, -t849, 0, 0, -qJD(5) * t95 + t677 - t701, qJD(5) * t96 - t700 + t837, -qJD(4) * t126 - t735, -qJD(3) * t112 - qJD(4) * t53 - t734, t456 * t579 - t817, qJD(5) * t124 + t534 * t825 + t285, qJD(6) * t226 - t812 + t866, t455 * t579 + t817, t204 - t208 - t865, -t496, -qJD(4) * t116 + qJD(5) * t22 + qJD(6) * t49 + t461 * t677 - t747, qJD(3) * t213 - qJD(4) * t118 + qJD(5) * t25 + qJD(6) * t47 - t746, -qJD(3) * t233 + qJD(5) * t13 + t768, qJD(3) * t19 - qJD(4) * t3 + qJD(5) * t2 - t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t445 * qJD(4), 0, 0, 0, 0, 0, 0, t508, -t391 * qJD(5) + t563, 0, qJD(4) * t270, t442, t612, 0, -t442, 0, 0, -t388 * t665 + t461 * t508, -t388 * t454 - t458 * t508, qJD(5) * t269 - t673, qJD(4) * t199 + qJD(5) * t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t614, -t615, 0, t626, 0, 0, 0, 0, 0, 0, -t614, 0, t615, -t643, 0, 0, 0, 0, 0, 0, t834, t832, 0, -t663, 0, 0, 0, 0, 0, 0, t575, t638, -t630, t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t512, 0, 0, 0, 0, 0, 0, t610, t564, -t656, t515, 0, 0, 0, 0, 0, 0, t444 - t660, -t441 - t659, -t613, qJD(5) * t100 + t381 - t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392 * t607 - t704, -t391 * t607 + t703, 0, 0, -t818, -t612 + t699, -t640, t818, -t636, 0, t261 * qJD(6) + t392 * t559 + t737, t262 * qJD(6) - t392 * t560 + t736, t269 * t607 + t748, t100 * qJD(4) + (-t392 * pkin(5) - pkin(9) * t269) * qJD(5) + t523; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t236, -t454 + t633, t178, t188, -t835, qJD(5) * t261 - t388 * t679 - t389 * t454 + t705, qJD(5) * t262 - t388 * t678 + t389 * t665 + t706, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, t408, -t833, -qJD(2) * t282 - t815, 0, 0, 0, 0, 0, 0, t410, -t833, -t408, qJD(2) * t200 - t674 - t815, 0, 0, 0, 0, 0, 0, -t510, -t509, -t655, qJD(2) * t112 + qJD(4) * t186 - t756, 0, 0, 0, 0, 0, 0, t204 + t531 - t697, -qJD(2) * t213 - t695 - t811 + t860, qJD(2) * t233 + qJD(5) * t123, -qJD(2) * t19 - qJD(4) * t120 - qJD(5) * t32 - t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t614, t615, 0, -t626, 0, 0, 0, 0, 0, 0, t614, 0, -t615, t643, 0, 0, 0, 0, 0, 0, -t834, -t832, 0, t663, 0, 0, 0, 0, 0, 0, -t575, -t638, t630, -t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t614, 0, 0, 0, 0, 0, 0, 0, 0, 0, t648, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t834, t832, 0, 0, 0, 0, 0, 0, 0, 0, -t635, -t639, t657, -t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t867, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, 0, -t616, -t371 * qJD(2) + (qJD(1) * t352 + qJD(3)) * t424, 0, 0, 0, 0, 0, 0, -t578, t577, qJD(2) * t126 + t209, qJD(2) * t53 - qJD(3) * t186 - t589 + t93, 0, 0, 0, 0, 0, 0, qJD(2) * t116 - qJD(6) * t156 - t555, qJD(2) * t118 + qJD(6) * t153 + t190 + t556, -t651, qJD(2) * t3 + qJD(3) * t120 - t759 + t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t512, 0, 0, 0, 0, 0, 0, -t431, -t432, t656, -t515, 0, 0, 0, 0, 0, 0, -t472 + t660, t473 + t659, t823, -qJD(5) * t99 + t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t614, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t648, 0, 0, 0, 0, 0, 0, 0, 0, 0, t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t386 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t431, t432, t631, t755, 0, 0, 0, 0, 0, 0, t472, -t473 + t647, -t823 (pkin(9) * t429 - t773) * qJD(5) - t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432 * t458 - t454 * t459 - t649, t432 * t461 + t459 * t665 + t650, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t849, t859, 0, t849, 0, 0, qJD(2) * t95 + t590 - t677, -qJD(2) * t96 + t591 - t837, -t675, -t754, -t456 * t849 - t820, -qJD(2) * t124 + t535 * t825 + t286, -t866 + t860 + t862, -t455 * t849 + t820, qJD(2) * t221 + qJD(6) * t217 + t865, t496, -qJD(2) * t22 + qJD(3) * t222 + qJD(6) * t58 - t745, -qJD(2) * t25 + qJD(3) * t550 + qJD(6) * t56 - t514, -qJD(2) * t13 - qJD(3) * t123 + t753, -qJD(2) * t2 + qJD(3) * t32 - t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t511 + t704, t391 * qJD(2) - t563 - t703, 0, 0, t819, -t612 - t699, t640, -t819, t636, 0, -t259 * qJD(6) - t461 * t511 - t737, -t260 * qJD(6) + t458 * t511 - t736, -qJD(2) * t269 + t673 - t748, qJD(4) * t99 - t523; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t834, -t832, 0, 0, 0, 0, 0, 0, 0, 0, t635, t639, -t657, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t610, -t564, -t631, -t755, 0, 0, 0, 0, 0, 0, -t444, t441 - t647, t613, t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t442, t612, 0, -t442, 0, 0, -pkin(5) * t665, -pkin(5) * t454, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, t237, t867, t177, t637 - t665, t835, -pkin(9) * t454 - t479, pkin(9) * t665 - t478, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, -t530 * t829 + t629, -qJD(2) * t226 - qJD(5) * t856 - t458 * t849, t90, -qJD(2) * t215 - qJD(5) * t217 - t461 * t849, t232, -qJD(2) * t49 - qJD(3) * t215 + qJD(4) * t156 - qJD(5) * t58 - t757, -qJD(2) * t47 - qJD(3) * t856 - qJD(4) * t153 - qJD(5) * t56 - t758, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, t237, -t633, t177, -t206, t835, t259 * qJD(5) + t458 * t494 - t705, t260 * qJD(5) + t461 * t494 - t706, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, -t857, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t458 * t564 + t649, -t461 * t564 - t650, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t236, -t857, t178, -t637, -t835, t479, t478, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
