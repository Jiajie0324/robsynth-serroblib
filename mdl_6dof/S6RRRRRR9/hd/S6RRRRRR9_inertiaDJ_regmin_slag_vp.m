% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x38]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR9_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR9_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR9_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR9_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 05:39:13
% EndTime: 2019-03-10 05:39:43
% DurationCPUTime: 10.86s
% Computational Cost: add. (18694->652), mult. (56254->1168), div. (0->0), fcn. (58456->14), ass. (0->273)
t225 = sin(pkin(7));
t227 = cos(pkin(7));
t228 = cos(pkin(6));
t233 = sin(qJ(2));
t356 = pkin(1) * t228;
t305 = t233 * t356;
t226 = sin(pkin(6));
t238 = cos(qJ(2));
t340 = t226 * t238;
t251 = -pkin(9) * t340 - t305;
t134 = (t225 * t228 + t227 * t340) * pkin(10) - t251;
t237 = cos(qJ(3));
t131 = t237 * t134;
t319 = qJD(2) * t238;
t207 = t319 * t356;
t270 = t226 * (-pkin(10) * t227 - pkin(9));
t264 = t233 * t270;
t144 = qJD(2) * t264 + t207;
t232 = sin(qJ(3));
t143 = (pkin(1) * t238 + pkin(2)) * t228 + t264;
t352 = pkin(10) * t225;
t164 = (-pkin(2) * t238 - t233 * t352 - pkin(1)) * t226;
t266 = t143 * t227 + t164 * t225;
t364 = -(t232 * t266 + t131) * qJD(3) - t232 * t144;
t231 = sin(qJ(4));
t363 = -0.4e1 * t231;
t229 = sin(qJ(6));
t230 = sin(qJ(5));
t234 = cos(qJ(6));
t235 = cos(qJ(5));
t195 = t229 * t235 + t230 * t234;
t180 = t195 * t231;
t342 = t225 * t232;
t210 = pkin(10) * t342;
t172 = t210 + (-pkin(2) * t237 - pkin(3)) * t227;
t236 = cos(qJ(4));
t183 = -t227 * t236 + t231 * t342;
t184 = t227 * t231 + t236 * t342;
t118 = t183 * pkin(4) - t184 * pkin(12) + t172;
t339 = t227 * t232;
t341 = t225 * t237;
t323 = pkin(2) * t339 + pkin(10) * t341;
t173 = pkin(11) * t227 + t323;
t174 = (-pkin(3) * t237 - pkin(11) * t232 - pkin(2)) * t225;
t125 = t173 * t236 + t174 * t231;
t120 = -pkin(12) * t341 + t125;
t81 = t118 * t230 + t120 * t235;
t269 = -pkin(4) * t236 - pkin(12) * t231;
t200 = -pkin(3) + t269;
t327 = t235 * t236;
t214 = pkin(11) * t327;
t170 = t200 * t230 + t214;
t314 = qJD(4) * t236;
t290 = t235 * t314;
t312 = qJD(5) * t230;
t248 = -t231 * t312 + t290;
t326 = t237 * t238;
t332 = t232 * t233;
t362 = t227 * t326 - t332;
t223 = t235 ^ 2;
t322 = t230 ^ 2 - t223;
t277 = t322 * qJD(5);
t361 = qJD(5) + qJD(6);
t310 = qJD(5) * t236;
t288 = t230 * t310;
t315 = qJD(4) * t235;
t247 = t231 * t315 + t288;
t268 = pkin(4) * t231 - pkin(12) * t236;
t256 = qJD(4) * t268;
t311 = qJD(5) * t235;
t122 = pkin(11) * t247 - t200 * t311 - t230 * t256;
t360 = -t134 * t232 + t237 * t266;
t358 = 0.2e1 * t225;
t357 = pkin(12) + pkin(13);
t330 = t233 * t237;
t331 = t232 * t238;
t257 = t227 * t331 + t330;
t139 = t226 * t257 + t228 * t342;
t182 = t225 * t340 - t227 * t228;
t116 = t139 * t231 + t182 * t236;
t355 = pkin(5) * t116;
t354 = pkin(5) * t183;
t353 = pkin(5) * t234;
t351 = pkin(11) * t225;
t350 = pkin(11) * t230;
t317 = qJD(3) * t237;
t285 = t225 * t317;
t147 = qJD(4) * t184 + t231 * t285;
t349 = t147 * pkin(5);
t138 = -t226 * t362 - t228 * t341;
t106 = -t143 * t225 + t164 * t227;
t74 = pkin(3) * t138 - pkin(11) * t139 + t106;
t297 = t143 * t339 + t164 * t342 + t131;
t79 = -pkin(11) * t182 + t297;
t43 = t231 * t74 + t236 * t79;
t41 = pkin(12) * t138 + t43;
t117 = t139 * t236 - t182 * t231;
t78 = t182 * pkin(3) - t360;
t48 = t116 * pkin(4) - t117 * pkin(12) + t78;
t24 = t230 * t48 + t235 * t41;
t85 = t117 * t230 - t138 * t235;
t22 = -pkin(13) * t85 + t24;
t348 = t234 * t22;
t148 = t184 * t230 + t235 * t341;
t68 = -pkin(13) * t148 + t81;
t347 = t234 * t68;
t318 = qJD(3) * t232;
t286 = t225 * t318;
t110 = t228 * t286 + (t257 * qJD(3) + (t227 * t330 + t331) * qJD(2)) * t226;
t111 = t228 * t285 + (t362 * qJD(3) + (-t227 * t332 + t326) * qJD(2)) * t226;
t320 = qJD(2) * t233;
t284 = t226 * t320;
t272 = t225 * t284;
t70 = -qJD(4) * t116 + t111 * t236 + t231 * t272;
t38 = -qJD(5) * t85 + t110 * t230 + t70 * t235;
t346 = t38 * t230;
t345 = t38 * t235;
t146 = -qJD(4) * t183 + t236 * t285;
t93 = -qJD(5) * t148 + t235 * t146 + t230 * t286;
t344 = t93 * t230;
t204 = t357 * t230;
t343 = t204 * t229;
t338 = t227 * t237;
t336 = t230 * t231;
t334 = t231 * t235;
t151 = -pkin(13) * t336 + t170;
t329 = t234 * t151;
t328 = t234 * t235;
t218 = qJD(4) * t231;
t291 = t230 * t218;
t324 = pkin(11) * t291 + t235 * t256;
t222 = t231 ^ 2;
t321 = -t236 ^ 2 + t222;
t316 = qJD(4) * t230;
t313 = qJD(4) * t237;
t309 = qJD(6) * t229;
t308 = qJD(6) * t234;
t307 = -0.2e1 * pkin(3) * qJD(4);
t306 = -0.2e1 * pkin(4) * qJD(5);
t304 = t236 * t350;
t303 = pkin(5) * t312;
t302 = pkin(11) * t314;
t301 = pkin(5) * t309;
t300 = pkin(5) * t308;
t299 = t230 * t341;
t69 = qJD(4) * t117 + t111 * t231 - t236 * t272;
t145 = (t238 * t270 - t305) * qJD(2);
t168 = (pkin(2) * t233 - t238 * t352) * t226 * qJD(2);
t54 = -t145 * t338 + (-pkin(3) * t284 - t168 * t237) * t225 - t364;
t239 = pkin(4) * t69 - pkin(12) * t70 + t54;
t292 = t227 * t317;
t57 = t134 * t318 - t143 * t292 - t144 * t237 - t145 * t339 - t164 * t285 - t168 * t342;
t53 = pkin(11) * t272 - t57;
t112 = -t145 * t225 + t168 * t227;
t64 = pkin(3) * t110 - pkin(11) * t111 + t112;
t20 = t218 * t79 - t231 * t64 - t236 * t53 - t314 * t74;
t245 = pkin(12) * t110 - t20;
t8 = -qJD(5) * t24 - t230 * t245 + t235 * t239;
t241 = t69 * pkin(5) - t38 * pkin(13) + t8;
t86 = t117 * t235 + t138 * t230;
t37 = qJD(5) * t86 - t110 * t235 + t70 * t230;
t7 = -t230 * t239 - t235 * t245 - t311 * t48 + t312 * t41;
t6 = -pkin(13) * t37 - t7;
t296 = -t229 * t6 + t234 * t241;
t220 = t226 ^ 2;
t294 = t220 * t319;
t219 = t225 ^ 2;
t293 = t219 * t317;
t287 = t235 * t310;
t283 = t226 * t319;
t282 = t230 * t314;
t281 = t230 * t311;
t280 = t231 * t314;
t177 = t323 * qJD(3);
t243 = t147 * pkin(4) - t146 * pkin(12) + t177;
t175 = (pkin(3) * t232 - pkin(11) * t237) * t225 * qJD(3);
t176 = -pkin(2) * t292 + pkin(10) * t286;
t87 = t173 * t218 - t174 * t314 - t175 * t231 + t176 * t236;
t244 = pkin(12) * t286 - t87;
t35 = -qJD(5) * t81 - t230 * t244 + t235 * t243;
t240 = -t93 * pkin(13) + t349 + t35;
t34 = -t118 * t311 + t120 * t312 - t230 * t243 - t235 * t244;
t94 = -qJD(5) * t299 + t146 * t230 + t184 * t311 - t235 * t286;
t30 = -pkin(13) * t94 - t34;
t279 = -t229 * t30 + t234 * t240;
t23 = -t230 * t41 + t235 * t48;
t42 = -t231 * t79 + t236 * t74;
t246 = t231 * t311 + t282;
t102 = -pkin(13) * t246 - t122;
t242 = (pkin(5) * t231 - pkin(13) * t327) * qJD(4) + (-t214 + (pkin(13) * t231 - t200) * t230) * qJD(5) + t324;
t278 = -t229 * t102 + t234 * t242;
t80 = t118 * t235 - t120 * t230;
t124 = -t173 * t231 + t174 * t236;
t276 = t321 * qJD(4);
t275 = 0.2e1 * t280;
t274 = t219 * t284;
t273 = t232 * t293;
t271 = t235 * t282;
t119 = pkin(4) * t341 - t124;
t19 = -pkin(13) * t86 + t23 + t355;
t10 = t19 * t229 + t348;
t149 = t184 * t235 - t299;
t67 = -pkin(13) * t149 + t354 + t80;
t33 = t229 * t67 + t347;
t60 = t229 * t86 + t234 * t85;
t61 = -t229 * t85 + t234 * t86;
t267 = -t230 * t86 - t235 * t85;
t21 = -t218 * t74 - t231 * t53 + t236 * t64 - t314 * t79;
t193 = t235 * t200;
t137 = -pkin(13) * t334 + t193 + (-pkin(5) - t350) * t236;
t98 = t137 * t229 + t329;
t100 = t148 * t234 + t149 * t229;
t101 = -t148 * t229 + t149 * t234;
t265 = -t148 * t235 - t149 * t230;
t205 = t357 * t235;
t155 = t205 * t234 - t343;
t194 = t229 * t230 - t328;
t40 = -pkin(4) * t138 - t42;
t88 = -t173 * t314 - t174 * t218 + t175 * t236 + t176 * t231;
t1 = -t19 * t308 + t22 * t309 - t229 * t241 - t234 * t6;
t17 = -pkin(4) * t110 - t21;
t263 = t17 * t230 + t311 * t40;
t262 = -t17 * t235 + t312 * t40;
t261 = t116 * t311 + t230 * t69;
t260 = t116 * t312 - t235 * t69;
t83 = -pkin(4) * t286 - t88;
t259 = t119 * t311 + t83 * t230;
t258 = t119 * t312 - t83 * t235;
t11 = -t229 * t240 - t234 * t30 - t308 * t67 + t309 * t68;
t255 = t110 * t231 + t138 * t314;
t254 = -t110 * t236 + t138 * t218;
t253 = t147 * t230 + t183 * t311;
t252 = -t147 * t235 + t183 * t312;
t55 = -t102 * t234 - t137 * t308 + t151 * t309 - t229 * t242;
t250 = t231 * t313 + t236 * t318;
t249 = t231 * t318 - t236 * t313;
t217 = -pkin(5) * t235 - pkin(4);
t209 = -0.2e1 * t280;
t197 = (pkin(5) * t230 + pkin(11)) * t231;
t181 = t194 * t231;
t179 = t251 * qJD(2);
t178 = pkin(9) * t284 - t207;
t169 = t193 - t304;
t163 = pkin(5) * t246 + t302;
t154 = -t204 * t234 - t205 * t229;
t142 = t361 * t195;
t141 = t361 * t194;
t126 = 0.2e1 * t183 * t147;
t123 = -qJD(5) * t170 + t324;
t121 = -t147 * t236 + t183 * t218;
t109 = -t155 * qJD(6) + (-t328 * t357 + t343) * qJD(5);
t108 = qJD(5) * t195 * t357 + t204 * t308 + t205 * t309;
t105 = -t309 * t336 + (t334 * t361 + t282) * t234 + t248 * t229;
t104 = -t180 * t361 - t194 * t314;
t97 = t137 * t234 - t151 * t229;
t89 = pkin(5) * t148 + t119;
t65 = pkin(5) * t94 + t83;
t62 = 0.2e1 * t116 * t69;
t59 = t116 * t218 - t236 * t69;
t58 = (t145 * t227 + t168 * t225) * t237 + t364;
t56 = -qJD(6) * t98 + t278;
t50 = qJD(6) * t101 + t229 * t93 + t234 * t94;
t49 = -qJD(6) * t100 - t229 * t94 + t234 * t93;
t47 = t116 * t147 + t183 * t69;
t32 = -t229 * t68 + t234 * t67;
t31 = pkin(5) * t85 + t40;
t15 = qJD(6) * t61 + t229 * t38 + t234 * t37;
t14 = -qJD(6) * t60 - t229 * t37 + t234 * t38;
t13 = pkin(5) * t37 + t17;
t12 = -qJD(6) * t33 + t279;
t9 = t19 * t234 - t22 * t229;
t2 = -qJD(6) * t10 + t296;
t3 = [0, 0, 0, 0.2e1 * t233 * t294, 0.2e1 * (-t233 ^ 2 + t238 ^ 2) * t220 * qJD(2), 0.2e1 * t228 * t283, -0.2e1 * t228 * t284, 0, -0.2e1 * pkin(1) * t220 * t320 + 0.2e1 * t179 * t228, -0.2e1 * pkin(1) * t294 + 0.2e1 * t178 * t228, 0.2e1 * t139 * t111, -0.2e1 * t110 * t139 - 0.2e1 * t111 * t138, -0.2e1 * t111 * t182 + 0.2e1 * t139 * t272, 0.2e1 * t110 * t182 - 0.2e1 * t138 * t272, -0.2e1 * t182 * t272, 0.2e1 * t106 * t110 + 0.2e1 * t112 * t138 - 0.2e1 * t58 * t182 + 0.2e1 * t272 * t360, 0.2e1 * t106 * t111 + 0.2e1 * t112 * t139 - 0.2e1 * t182 * t57 - 0.2e1 * t272 * t297, 0.2e1 * t117 * t70, -0.2e1 * t116 * t70 - 0.2e1 * t117 * t69, 0.2e1 * t110 * t117 + 0.2e1 * t138 * t70, -0.2e1 * t110 * t116 - 0.2e1 * t138 * t69, 0.2e1 * t138 * t110, 0.2e1 * t110 * t42 + 0.2e1 * t116 * t54 + 0.2e1 * t138 * t21 + 0.2e1 * t69 * t78, -0.2e1 * t110 * t43 + 0.2e1 * t117 * t54 + 0.2e1 * t138 * t20 + 0.2e1 * t70 * t78, 0.2e1 * t86 * t38, -0.2e1 * t37 * t86 - 0.2e1 * t38 * t85, 0.2e1 * t116 * t38 + 0.2e1 * t69 * t86, -0.2e1 * t116 * t37 - 0.2e1 * t69 * t85, t62, 0.2e1 * t116 * t8 + 0.2e1 * t17 * t85 + 0.2e1 * t23 * t69 + 0.2e1 * t37 * t40, 0.2e1 * t116 * t7 + 0.2e1 * t17 * t86 - 0.2e1 * t24 * t69 + 0.2e1 * t38 * t40, 0.2e1 * t61 * t14, -0.2e1 * t14 * t60 - 0.2e1 * t15 * t61, 0.2e1 * t116 * t14 + 0.2e1 * t61 * t69, -0.2e1 * t116 * t15 - 0.2e1 * t60 * t69, t62, 0.2e1 * t116 * t2 + 0.2e1 * t13 * t60 + 0.2e1 * t15 * t31 + 0.2e1 * t69 * t9, 0.2e1 * t1 * t116 - 0.2e1 * t10 * t69 + 0.2e1 * t13 * t61 + 0.2e1 * t14 * t31; 0, 0, 0, 0, 0, t283, -t284, 0, t179, t178 (t111 * t232 + t139 * t317) * t225 (-t110 * t232 + t111 * t237 + (-t138 * t237 - t139 * t232) * qJD(3)) * t225, t111 * t227 - t182 * t285 + t232 * t274, -t110 * t227 + t182 * t286 + t237 * t274, t227 * t272, t177 * t182 + t58 * t227 + ((pkin(2) * t338 - t210) * t284 - pkin(2) * t110 - t112 * t237 + t106 * t318) * t225, -t176 * t182 + t57 * t227 + (-pkin(2) * t111 + t106 * t317 + t112 * t232 - t284 * t323) * t225, t117 * t146 + t184 * t70, -t116 * t146 - t117 * t147 - t183 * t70 - t184 * t69, t110 * t184 + t138 * t146 + (t117 * t318 - t237 * t70) * t225, -t183 * t110 - t147 * t138 + (-t116 * t318 + t237 * t69) * t225 (-t110 * t237 + t138 * t318) * t225, t124 * t110 + t177 * t116 + t88 * t138 + t78 * t147 + t172 * t69 + t54 * t183 + (-t21 * t237 + t318 * t42) * t225, -t125 * t110 + t177 * t117 + t87 * t138 + t78 * t146 + t172 * t70 + t54 * t184 + (-t20 * t237 - t318 * t43) * t225, t149 * t38 + t86 * t93, -t148 * t38 - t149 * t37 - t85 * t93 - t86 * t94, t116 * t93 + t147 * t86 + t149 * t69 + t183 * t38, -t116 * t94 - t147 * t85 - t148 * t69 - t183 * t37, t47, t116 * t35 + t119 * t37 + t147 * t23 + t148 * t17 + t183 * t8 + t40 * t94 + t69 * t80 + t83 * t85, t116 * t34 + t119 * t38 - t147 * t24 + t149 * t17 + t183 * t7 + t40 * t93 - t69 * t81 + t83 * t86, t101 * t14 + t49 * t61, -t100 * t14 - t101 * t15 - t49 * t60 - t50 * t61, t101 * t69 + t116 * t49 + t14 * t183 + t147 * t61, -t100 * t69 - t116 * t50 - t147 * t60 - t15 * t183, t47, t100 * t13 + t116 * t12 + t147 * t9 + t15 * t89 + t183 * t2 + t31 * t50 + t32 * t69 + t60 * t65, t1 * t183 - t10 * t147 + t101 * t13 + t11 * t116 + t14 * t89 + t31 * t49 - t33 * t69 + t61 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t273, 0.2e1 * (-t232 ^ 2 + t237 ^ 2) * t219 * qJD(3), 0.2e1 * t227 * t285, -0.2e1 * t227 * t286, 0, -0.2e1 * pkin(2) * t219 * t318 - 0.2e1 * t177 * t227, -0.2e1 * pkin(2) * t293 + 0.2e1 * t176 * t227, 0.2e1 * t184 * t146, -0.2e1 * t146 * t183 - 0.2e1 * t147 * t184 (-t146 * t237 + t184 * t318) * t358 (t147 * t237 - t183 * t318) * t358, -0.2e1 * t273, 0.2e1 * t172 * t147 + 0.2e1 * t177 * t183 + 0.2e1 * (t124 * t318 - t237 * t88) * t225, 0.2e1 * t172 * t146 + 0.2e1 * t177 * t184 + 0.2e1 * (-t125 * t318 - t237 * t87) * t225, 0.2e1 * t149 * t93, -0.2e1 * t148 * t93 - 0.2e1 * t149 * t94, 0.2e1 * t147 * t149 + 0.2e1 * t183 * t93, -0.2e1 * t147 * t148 - 0.2e1 * t183 * t94, t126, 0.2e1 * t119 * t94 + 0.2e1 * t147 * t80 + 0.2e1 * t148 * t83 + 0.2e1 * t183 * t35, 0.2e1 * t119 * t93 - 0.2e1 * t147 * t81 + 0.2e1 * t149 * t83 + 0.2e1 * t183 * t34, 0.2e1 * t101 * t49, -0.2e1 * t100 * t49 - 0.2e1 * t101 * t50, 0.2e1 * t101 * t147 + 0.2e1 * t183 * t49, -0.2e1 * t100 * t147 - 0.2e1 * t183 * t50, t126, 0.2e1 * t100 * t65 + 0.2e1 * t12 * t183 + 0.2e1 * t147 * t32 + 0.2e1 * t50 * t89, 0.2e1 * t101 * t65 + 0.2e1 * t11 * t183 - 0.2e1 * t147 * t33 + 0.2e1 * t49 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t110, t272, t58, t57, t117 * t314 + t231 * t70, -t69 * t231 + t236 * t70 + (-t116 * t236 - t117 * t231) * qJD(4), t255, -t254, 0, -pkin(3) * t69 - pkin(11) * t255 + t218 * t78 - t54 * t236, -pkin(3) * t70 + pkin(11) * t254 + t54 * t231 + t314 * t78, t86 * t290 + (-t312 * t86 + t345) * t231, t267 * t314 + (-t346 - t235 * t37 + (t230 * t85 - t235 * t86) * qJD(5)) * t231 (t116 * t315 - t38) * t236 + (qJD(4) * t86 - t260) * t231 (-t116 * t316 + t37) * t236 + (-qJD(4) * t85 - t261) * t231, t59, t123 * t116 + t169 * t69 + (-t8 + (pkin(11) * t85 + t230 * t40) * qJD(4)) * t236 + (pkin(11) * t37 + qJD(4) * t23 + t263) * t231, t122 * t116 - t170 * t69 + (-t7 + (pkin(11) * t86 + t235 * t40) * qJD(4)) * t236 + (pkin(11) * t38 - qJD(4) * t24 - t262) * t231, t104 * t61 - t14 * t181, -t104 * t60 - t105 * t61 - t14 * t180 + t15 * t181, t104 * t116 - t14 * t236 - t181 * t69 + t218 * t61, -t105 * t116 + t15 * t236 - t180 * t69 - t218 * t60, t59, t105 * t31 + t116 * t56 + t13 * t180 + t15 * t197 + t163 * t60 - t2 * t236 + t218 * t9 + t69 * t97, -t1 * t236 - t10 * t218 + t104 * t31 + t116 * t55 - t13 * t181 + t14 * t197 + t163 * t61 - t69 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, -t286, 0, -t177, t176, t146 * t231 + t184 * t314, t236 * t146 - t147 * t231 + (-t183 * t236 - t184 * t231) * qJD(4), t249 * t225, t250 * t225, 0, -pkin(3) * t147 + t172 * t218 - t177 * t236 - t249 * t351, -pkin(3) * t146 + t172 * t314 + t177 * t231 - t250 * t351, t149 * t248 + t334 * t93, t265 * t314 + (-t344 - t235 * t94 + (t148 * t230 - t149 * t235) * qJD(5)) * t231 (t183 * t315 - t93) * t236 + (qJD(4) * t149 - t252) * t231 (-t183 * t316 + t94) * t236 + (-qJD(4) * t148 - t253) * t231, t121, t123 * t183 + t147 * t169 + (-t35 + (pkin(11) * t148 + t119 * t230) * qJD(4)) * t236 + (pkin(11) * t94 + qJD(4) * t80 + t259) * t231, t122 * t183 - t170 * t147 + (-t34 + (pkin(11) * t149 + t119 * t235) * qJD(4)) * t236 + (pkin(11) * t93 - qJD(4) * t81 - t258) * t231, t101 * t104 - t181 * t49, -t100 * t104 - t101 * t105 - t180 * t49 + t181 * t50, t101 * t218 + t104 * t183 - t147 * t181 - t236 * t49, -t100 * t218 - t105 * t183 - t147 * t180 + t236 * t50, t121, t100 * t163 + t105 * t89 - t12 * t236 + t147 * t97 + t180 * t65 + t183 * t56 + t197 * t50 + t218 * t32, t101 * t163 + t104 * t89 - t11 * t236 - t147 * t98 - t181 * t65 + t183 * t55 + t197 * t49 - t218 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, -0.2e1 * t276, 0, 0, 0, t231 * t307, t236 * t307, -0.2e1 * t222 * t281 + 0.2e1 * t223 * t280, 0.2e1 * t222 * t277 + t271 * t363, 0.2e1 * t231 * t288 + 0.2e1 * t315 * t321, -0.2e1 * t230 * t276 + 0.2e1 * t231 * t287, t209, 0.2e1 * t169 * t218 - 0.2e1 * t123 * t236 + 0.2e1 * (t222 * t311 + t230 * t275) * pkin(11), -0.2e1 * t170 * t218 - 0.2e1 * t122 * t236 + 0.2e1 * (-t222 * t312 + t235 * t275) * pkin(11), -0.2e1 * t181 * t104, -0.2e1 * t104 * t180 + 0.2e1 * t105 * t181, -0.2e1 * t104 * t236 - 0.2e1 * t181 * t218, 0.2e1 * t105 * t236 - 0.2e1 * t180 * t218, t209, 0.2e1 * t105 * t197 + 0.2e1 * t163 * t180 + 0.2e1 * t218 * t97 - 0.2e1 * t236 * t56, 0.2e1 * t104 * t197 - 0.2e1 * t163 * t181 - 0.2e1 * t218 * t98 - 0.2e1 * t236 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, -t69, t110, t21, t20, t311 * t86 + t346, qJD(5) * t267 - t230 * t37 + t345, t261, -t260, 0, -pkin(4) * t37 - pkin(12) * t261 + t262, -pkin(4) * t38 + pkin(12) * t260 + t263, t14 * t195 - t141 * t61, -t14 * t194 + t141 * t60 - t142 * t61 - t15 * t195, -t116 * t141 + t195 * t69, -t116 * t142 - t194 * t69, 0, t109 * t116 + t13 * t194 + t142 * t31 + t15 * t217 + t154 * t69 + t303 * t60, t108 * t116 + t13 * t195 + t14 * t217 - t141 * t31 - t155 * t69 + t303 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, -t147, t286, t88, t87, t149 * t311 + t344, qJD(5) * t265 - t230 * t94 + t235 * t93, t253, -t252, 0, -pkin(4) * t94 - pkin(12) * t253 + t258, -pkin(4) * t93 + pkin(12) * t252 + t259, -t101 * t141 + t195 * t49, t100 * t141 - t101 * t142 - t194 * t49 - t195 * t50, -t141 * t183 + t147 * t195, -t142 * t183 - t147 * t194, 0, t100 * t303 + t109 * t183 + t142 * t89 + t147 * t154 + t194 * t65 + t217 * t50, t101 * t303 + t108 * t183 - t141 * t89 - t147 * t155 + t195 * t65 + t217 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, -t218, 0, -t302, pkin(11) * t218, -t231 * t277 + t271, t281 * t363 - t314 * t322, -t287 + t291, t247, 0 (pkin(12) * t327 + (-pkin(4) * t235 + t350) * t231) * qJD(5) + (t230 * t269 - t214) * qJD(4) (pkin(11) * t334 + t230 * t268) * qJD(5) + (t235 * t269 + t304) * qJD(4), t104 * t195 + t141 * t181, -t104 * t194 - t105 * t195 + t141 * t180 + t142 * t181, t141 * t236 + t195 * t218, t142 * t236 - t194 * t218, 0, t105 * t217 - t109 * t236 + t142 * t197 + t154 * t218 + t163 * t194 + t180 * t303, t104 * t217 - t108 * t236 - t141 * t197 - t155 * t218 + t163 * t195 - t181 * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t281, -0.2e1 * t277, 0, 0, 0, t230 * t306, t235 * t306, -0.2e1 * t195 * t141, 0.2e1 * t141 * t194 - 0.2e1 * t142 * t195, 0, 0, 0, 0.2e1 * t142 * t217 + 0.2e1 * t194 * t303, -0.2e1 * t141 * t217 + 0.2e1 * t195 * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, -t37, t69, t8, t7, 0, 0, t14, -t15, t69, t69 * t353 + (-t348 + (-t19 - t355) * t229) * qJD(6) + t296 (-t116 * t308 - t229 * t69) * pkin(5) + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, -t94, t147, t35, t34, 0, 0, t49, -t50, t147, t234 * t349 + (-t347 + (-t67 - t354) * t229) * qJD(6) + t279 (-t147 * t229 - t183 * t308) * pkin(5) + t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, -t246, t218, t123, t122, 0, 0, t104, -t105, t218, t218 * t353 + (-t329 + (pkin(5) * t236 - t137) * t229) * qJD(6) + t278 (-t218 * t229 + t236 * t308) * pkin(5) + t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t312, 0, -pkin(12) * t311, pkin(12) * t312, 0, 0, -t141, -t142, 0, t109, t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t301, -0.2e1 * t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t15, t69, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, -t50, t147, t12, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t105, t218, t56, t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141, -t142, 0, t109, t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t301, -t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
