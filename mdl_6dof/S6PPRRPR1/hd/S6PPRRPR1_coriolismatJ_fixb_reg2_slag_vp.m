% Calculate inertial parameters regressor of coriolis matrix for
% S6PPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRPR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRPR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:47:35
% EndTime: 2019-03-08 18:47:54
% DurationCPUTime: 14.58s
% Computational Cost: add. (15532->650), mult. (42687->1008), div. (0->0), fcn. (51840->14), ass. (0->459)
t528 = sin(pkin(13));
t530 = sin(pkin(7));
t531 = cos(pkin(13));
t534 = sin(qJ(3));
t535 = cos(qJ(4));
t758 = cos(qJ(3));
t676 = t535 * t758;
t452 = (-t528 * t676 + t531 * t534) * t530;
t453 = (t528 * t534 + t531 * t676) * t530;
t764 = -t528 / 0.2e1;
t808 = t531 / 0.2e1;
t797 = t452 * t764 + t453 * t808;
t809 = qJ(5) * t797;
t757 = cos(qJ(6));
t667 = t757 * t528;
t532 = sin(qJ(6));
t717 = t532 * t531;
t489 = t667 + t717;
t533 = sin(qJ(4));
t468 = t489 * t533;
t666 = t757 * t531;
t718 = t532 * t528;
t799 = t666 - t718;
t471 = t799 * t533;
t768 = t489 / 0.2e1;
t771 = t799 / 0.2e1;
t297 = -t468 * t768 + t471 * t771;
t807 = t297 * qJD(6);
t709 = qJD(4) * t489;
t806 = -qJD(3) * t297 - t709 * t799;
t713 = qJD(3) * t471;
t805 = qJD(4) * t297 - t468 * t713;
t748 = cos(pkin(7));
t653 = t533 * t748;
t728 = t530 * t534;
t679 = t535 * t728;
t478 = t653 + t679;
t674 = t758 * t530;
t644 = t531 * t674;
t593 = -t528 * t478 - t644;
t804 = t593 / 0.2e1;
t524 = t528 ^ 2;
t525 = t531 ^ 2;
t512 = t525 + t524;
t803 = t512 * qJ(5);
t640 = t666 / 0.2e1;
t585 = t640 - t718 / 0.2e1;
t802 = t585 + t771;
t586 = t717 / 0.2e1 + t667 / 0.2e1;
t801 = t586 + t768;
t747 = sin(pkin(6));
t639 = cos(pkin(12)) * t747;
t749 = cos(pkin(6));
t800 = t749 * t530 + t748 * t639;
t798 = t512 * qJD(4);
t796 = t471 ^ 2;
t795 = t489 ^ 2;
t654 = sin(pkin(12)) * t747;
t409 = t534 * t654 - t758 * t800;
t744 = t409 * t528;
t551 = -t530 * t639 + t748 * t749;
t542 = t551 * t533;
t410 = t534 * t800 + t758 * t654;
t741 = t410 * t535;
t333 = t542 + t741;
t745 = t333 * t531;
t213 = t744 + t745;
t743 = t409 * t531;
t629 = -t333 * t528 + t743;
t125 = t532 * t213 - t629 * t757;
t794 = -t125 / 0.2e1;
t126 = t213 * t757 + t532 * t629;
t793 = t126 / 0.2e1;
t792 = t213 / 0.2e1;
t727 = t531 * t478;
t418 = -t528 * t674 + t727;
t298 = t532 * t418 - t593 * t757;
t791 = -t298 / 0.2e1;
t299 = t418 * t757 + t532 * t593;
t790 = t299 / 0.2e1;
t332 = t410 * t533 - t535 * t551;
t789 = -t332 / 0.2e1;
t788 = t332 / 0.2e1;
t787 = t333 / 0.2e1;
t477 = t533 * t728 - t535 * t748;
t351 = t477 * t489;
t786 = -t351 / 0.2e1;
t352 = t477 * t799;
t785 = -t352 / 0.2e1;
t784 = t409 / 0.2e1;
t783 = t418 / 0.2e1;
t751 = pkin(10) + qJ(5);
t505 = t751 * t531;
t655 = t751 * t528;
t424 = t532 * t505 + t655 * t757;
t782 = t424 / 0.2e1;
t425 = t505 * t757 - t532 * t655;
t781 = -t425 / 0.2e1;
t780 = t468 / 0.2e1;
t779 = -t468 / 0.2e1;
t470 = t489 * t535;
t778 = -t470 / 0.2e1;
t777 = -t471 / 0.2e1;
t776 = t471 / 0.2e1;
t510 = t535 * t718;
t473 = t535 * t666 - t510;
t775 = t473 / 0.2e1;
t774 = -t477 / 0.2e1;
t773 = t477 / 0.2e1;
t772 = t478 / 0.2e1;
t770 = -t799 / 0.2e1;
t769 = -t489 / 0.2e1;
t754 = t528 * pkin(5);
t678 = pkin(9) + t754;
t496 = t678 * t533;
t767 = t496 / 0.2e1;
t497 = t678 * t535;
t766 = t497 / 0.2e1;
t521 = -pkin(5) * t531 - pkin(4);
t765 = t521 / 0.2e1;
t763 = -t531 / 0.2e1;
t762 = -t533 / 0.2e1;
t761 = t533 / 0.2e1;
t760 = -t535 / 0.2e1;
t759 = t535 / 0.2e1;
t756 = pkin(9) * t409;
t755 = t333 * pkin(9);
t753 = t535 * pkin(4);
t752 = t535 * pkin(9);
t732 = t489 * t471;
t735 = t468 * t799;
t305 = t732 - t735;
t750 = t305 * qJD(5);
t746 = t213 * t531;
t742 = t409 * t533;
t740 = t418 * t531;
t638 = -t533 * qJ(5) - t753;
t616 = -pkin(3) + t638;
t729 = t528 * t535;
t454 = -pkin(9) * t729 + t531 * t616;
t737 = t454 * t528;
t725 = t531 * t535;
t517 = pkin(9) * t725;
t455 = t528 * t616 + t517;
t736 = t455 * t531;
t734 = t468 * t533;
t733 = t471 * t533;
t526 = t533 ^ 2;
t731 = t526 * t528;
t730 = t528 * t533;
t726 = t531 * t533;
t274 = t409 * t729 + t410 * t531;
t724 = t532 * t274;
t275 = -t409 * t725 + t410 * t528;
t723 = t532 * t275;
t507 = t533 * pkin(4) - qJ(5) * t535;
t516 = pkin(9) * t730;
t462 = t531 * t507 + t516;
t406 = t533 * pkin(5) - pkin(10) * t725 + t462;
t722 = t532 * t406;
t463 = -pkin(9) * t726 + t528 * t507;
t421 = -pkin(10) * t729 + t463;
t721 = t532 * t421;
t720 = t532 * t452;
t719 = t532 * t453;
t527 = t535 ^ 2;
t514 = t526 - t527;
t353 = -t470 * t535 + t734;
t716 = qJD(3) * t353;
t354 = t473 * t535 - t733;
t715 = qJD(3) * t354;
t714 = qJD(3) * t468;
t712 = qJD(3) * t530;
t711 = qJD(3) * t535;
t710 = qJD(4) * t799;
t708 = qJD(4) * t521;
t707 = qJD(4) * t528;
t706 = qJD(4) * t531;
t705 = qJD(5) * t535;
t704 = qJD(6) * t471;
t703 = qJD(6) * t489;
t267 = -t468 * t473 - t470 * t471;
t702 = t267 * qJD(3);
t325 = -t454 * t533 + (t462 - 0.2e1 * t516) * t535;
t701 = t325 * qJD(3);
t568 = t769 + t586;
t368 = t568 * t535;
t700 = t368 * qJD(3);
t369 = (t769 - t586) * t535;
t699 = t369 * qJD(3);
t370 = -t799 * t760 + t535 * t640 - t510 / 0.2e1;
t698 = t370 * qJD(3);
t371 = t510 / 0.2e1 + (t771 - t666 / 0.2e1) * t535;
t697 = t371 * qJD(3);
t696 = t409 * qJD(3);
t695 = t410 * qJD(3);
t694 = t468 * qJD(6);
t693 = t478 * qJD(4);
t484 = t512 * t526;
t692 = t484 * qJD(3);
t479 = t799 * qJD(6);
t487 = -t527 * t528 + t731;
t691 = t487 * qJD(3);
t488 = t514 * t531;
t690 = t488 * qJD(3);
t688 = t514 * qJD(3);
t687 = t533 * qJD(3);
t686 = t533 * qJD(4);
t685 = t535 * qJD(4);
t684 = pkin(3) * t711;
t683 = pkin(9) * t685;
t682 = pkin(9) * t772;
t681 = t752 / 0.2e1;
t680 = t332 * t742;
t677 = t533 * t758;
t675 = t758 * t527;
t673 = t757 * t274;
t672 = t757 * t275;
t671 = t757 * t406;
t670 = t757 * t421;
t669 = t757 * t452;
t668 = t757 * t453;
t663 = t528 * t706;
t662 = t533 * t705;
t661 = t489 * t479;
t660 = t533 * t685;
t515 = t535 * t687;
t388 = -t742 / 0.2e1;
t389 = t742 / 0.2e1;
t659 = -t730 / 0.2e1;
t658 = t730 / 0.2e1;
t657 = t726 / 0.2e1;
t656 = qJD(4) * t758;
t650 = -0.2e1 * t528 * t726;
t451 = t471 * t711;
t648 = qJD(4) * t369 - t451;
t647 = qJD(5) + t708;
t646 = t526 * t674;
t645 = t533 * t674;
t643 = t531 * t515;
t642 = qJD(3) * t674;
t641 = t674 / 0.2e1;
t637 = t477 * t645;
t149 = t673 - t723;
t150 = t672 + t724;
t339 = t669 - t719;
t340 = t668 + t720;
t559 = (t332 * t641 + t409 * t774) * t533;
t10 = t149 * t791 + t150 * t790 + t339 * t794 + t340 * t793 + t559;
t18 = -t125 * t149 + t126 * t150 - t680;
t636 = t18 * qJD(1) + t10 * qJD(2);
t83 = -t298 * t339 + t299 * t340 + t637;
t635 = t10 * qJD(1) + t83 * qJD(2);
t170 = t332 * t489;
t171 = t332 * t799;
t11 = t125 * t786 + t126 * t785 + t170 * t791 - t171 * t790 + t332 * t772 + t333 * t773;
t20 = -t125 * t170 - t126 * t171 + t332 * t333;
t634 = t20 * qJD(1) + t11 * qJD(2);
t84 = -t298 * t351 - t299 * t352 + t477 * t478;
t633 = t11 * qJD(1) + t84 * qJD(2);
t26 = t275 * t783 + t453 * t792 + t274 * t804 + t629 * t452 / 0.2e1 + t559;
t46 = t213 * t275 + t274 * t629 - t680;
t632 = t46 * qJD(1) + t26 * qJD(2);
t569 = t593 * t528;
t543 = t740 / 0.2e1 - t569 / 0.2e1;
t595 = t629 * t528;
t552 = t746 / 0.2e1 - t595 / 0.2e1;
t27 = (t787 - t552) * t477 + (t772 - t543) * t332;
t47 = (t333 + t595 - t746) * t332;
t631 = t47 * qJD(1) + t27 * qJD(2);
t64 = (t477 * t762 + t478 * t760) * t409 + (t676 * t787 + t677 * t788 - t410 * t758 / 0.2e1 + t534 * t784) * t530;
t89 = (-t332 * t533 - t333 * t535 + t410) * t409;
t630 = t89 * qJD(1) + t64 * qJD(2);
t628 = -t462 * t528 + t463 * t531;
t627 = -t645 / 0.2e1;
t626 = t533 * t641;
t163 = (t478 + t569 - t740) * t477;
t625 = t27 * qJD(1) + t163 * qJD(2);
t164 = t418 * t453 + t452 * t593 + t637;
t624 = t26 * qJD(1) + t164 * qJD(2);
t327 = (t477 * t677 + t478 * t676 - t534 * t674) * t530;
t623 = t64 * qJD(1) + t327 * qJD(2);
t203 = -t732 - t735;
t467 = t468 ^ 2;
t330 = t467 - t796;
t622 = qJD(3) * t330 + qJD(4) * t203;
t481 = t799 ^ 2;
t361 = t481 - t795;
t621 = qJD(3) * t203 + qJD(4) * t361;
t363 = t467 + t796;
t620 = qJD(3) * t363 + qJD(4) * t305;
t420 = t481 + t795;
t619 = qJD(3) * t305 + qJD(4) * t420;
t618 = t710 - t714;
t617 = t709 + t713;
t615 = (pkin(9) / 0.2e1 + t754 / 0.2e1) * t535;
t277 = t389 + t388;
t614 = pkin(3) * t687 - t277 * qJD(1);
t613 = t125 * t777 + t126 * t780;
t612 = t125 * t768 + t126 * t771;
t611 = t125 * t760 + t332 * t779;
t610 = t126 * t759 + t332 * t776;
t609 = t149 * t769 + t150 * t771;
t608 = t274 * t764 + t275 * t808;
t607 = t298 * t776 + t299 * t779;
t606 = t298 * t768 + t299 * t771;
t605 = t298 * t760 - t468 * t773;
t604 = t299 * t759 + t471 * t773;
t603 = t339 * t769 + t340 * t771;
t601 = -t737 / 0.2e1 + t736 / 0.2e1;
t596 = qJD(4) * t368 - t451 + t704;
t592 = -t724 / 0.2e1 - t672 / 0.2e1;
t591 = -t723 / 0.2e1 + t673 / 0.2e1;
t590 = -t722 / 0.2e1 - t670 / 0.2e1;
t589 = -t721 / 0.2e1 + t671 / 0.2e1;
t588 = -t720 / 0.2e1 - t668 / 0.2e1;
t587 = -t719 / 0.2e1 + t669 / 0.2e1;
t419 = -pkin(10) * t730 + t455;
t541 = (-pkin(9) * t528 - pkin(5)) * t535 + (-t533 * t751 - pkin(3) - t753) * t531;
t289 = t532 * t419 - t541 * t757;
t290 = t419 * t757 + t532 * t541;
t293 = t671 - t721;
t294 = t670 + t722;
t537 = t289 * t786 + t290 * t785 + t293 * t791 + t294 * t790 + t477 * t766 + t478 * t767;
t548 = t339 * t782 + t340 * t781 + t521 * t627;
t22 = t537 + t548;
t538 = t293 * t794 + t294 * t793 - t170 * t289 / 0.2e1 - t171 * t290 / 0.2e1 + t332 * t766 + t333 * t767;
t557 = t149 * t782 + t150 * t781 + t389 * t521;
t3 = t538 + t557;
t65 = -t289 * t293 + t290 * t294 + t496 * t497;
t584 = t3 * qJD(1) + t22 * qJD(2) + t65 * qJD(3);
t545 = t298 * t775 + t299 * t778 + t351 * t777 - t352 * t779;
t41 = t545 - t603;
t55 = t289 * t473 - t290 * t470 - t293 * t471 - t294 * t468;
t547 = t125 * t775 + t126 * t778 + t170 * t777 - t171 * t779;
t8 = t547 - t609;
t583 = t8 * qJD(1) + t41 * qJD(2) + t55 * qJD(3);
t582 = t608 * qJ(5);
t214 = pkin(9) ^ 2 * t533 * t535 + t454 * t462 + t455 * t463;
t328 = t681 - t601;
t554 = -t213 * t463 / 0.2e1 - t629 * t462 / 0.2e1;
t23 = pkin(4) * t389 - t328 * t332 + t755 * t762 + t554 + t582;
t536 = t328 * t477 + t462 * t804 + t463 * t783;
t67 = (pkin(4) * t641 + t682) * t533 - t809 + t536;
t581 = -t23 * qJD(1) + t67 * qJD(2) + t214 * qJD(3);
t564 = t351 * t759 - t468 * t772 + t470 * t774;
t109 = (-t799 * t641 + t298 / 0.2e1) * t533 + t564;
t119 = t289 * t533 + t293 * t535 - t497 * t468 - t496 * t470;
t566 = t170 * t759 + t332 * t778 + t333 * t779;
t30 = (t409 * t771 + t125 / 0.2e1) * t533 + t566;
t580 = -t30 * qJD(1) - t109 * qJD(2) - t119 * qJD(3);
t563 = -t352 * t760 + t473 * t774 + t478 * t777;
t110 = (t489 * t641 + t790) * t533 + t563;
t120 = -t290 * t533 + t294 * t535 + t497 * t471 + t496 * t473;
t565 = -t171 * t760 + t333 * t777 + t473 * t789;
t31 = (t409 * t769 + t793) * t533 + t565;
t579 = -t31 * qJD(1) - t110 * qJD(2) + t120 * qJD(3);
t137 = t626 - t607;
t141 = t289 * t471 - t290 * t468;
t38 = t388 + t613;
t578 = qJD(1) * t38 + qJD(2) * t137 - qJD(3) * t141;
t145 = t587 - t604;
t193 = -t290 * t535 - t496 * t471;
t42 = t591 - t610;
t577 = qJD(1) * t42 + qJD(2) * t145 + qJD(3) * t193;
t146 = t588 - t605;
t192 = -t289 * t535 - t496 * t468;
t43 = t592 - t611;
t576 = qJD(1) * t43 + qJD(2) * t146 - qJD(3) * t192;
t558 = t593 * t763;
t544 = t418 * t764 + t558;
t540 = t544 * t535;
t169 = t540 - t797;
t189 = (t454 * t535 + t462 * t533) * t531 + (t455 * t535 + t463 * t533) * t528;
t553 = t213 * t764 + t629 * t763;
t549 = t553 * t535;
t53 = t549 - t608;
t575 = t53 * qJD(1) + t169 * qJD(2) - t189 * qJD(3);
t184 = (t528 * t641 + t783 - t727 / 0.2e1) * t533;
t326 = t463 * t535 + (-t455 + 0.2e1 * t517) * t533;
t59 = (-t744 / 0.2e1 + t792 - t745 / 0.2e1) * t533;
t574 = t59 * qJD(1) + t184 * qJD(2) - t326 * qJD(3);
t235 = (t641 - t544) * t533;
t331 = (t454 * t531 + t455 * t528) * t533;
t550 = t553 * t533;
t93 = t389 + t550;
t573 = -qJD(1) * t93 + qJD(2) * t235 + qJD(3) * t331;
t127 = t568 * t332;
t561 = t425 * t759 + t471 * t765 + t489 * t767;
t151 = -t561 + t589;
t257 = t568 * t477;
t572 = t127 * qJD(1) + t257 * qJD(2) + t151 * qJD(3);
t567 = t770 + t585;
t128 = t567 * t332;
t562 = t424 * t760 - t468 * t765 + t496 * t771;
t152 = -t562 + t590;
t258 = t567 * t477;
t571 = t128 * qJD(1) + t258 * qJD(2) + t152 * qJD(3);
t570 = t653 / 0.2e1 + t679 / 0.2e1;
t560 = qJD(4) * t638 + t705;
t139 = t570 - t606;
t234 = t424 * t489 + t425 * t799;
t539 = t741 / 0.2e1 + t542 / 0.2e1;
t36 = t539 - t612;
t546 = t289 * t769 + t290 * t770 + t424 * t777 + t425 * t780;
t70 = t615 + t546;
t556 = qJD(1) * t36 + qJD(2) * t139 + qJD(3) * t70 - qJD(4) * t234;
t225 = -t543 + t570;
t85 = t539 - t552;
t555 = qJD(1) * t85 + qJD(2) * t225 + qJD(3) * t328 - qJD(4) * t803;
t522 = t686 / 0.2e1;
t506 = pkin(9) * t646;
t482 = qJD(6) * t762 + t515;
t392 = t526 * t756;
t329 = t681 + t601;
t319 = t370 * qJD(4) - t468 * t711;
t280 = t409 * t535;
t278 = 0.2e1 * t389;
t260 = t801 * t477;
t259 = t802 * t477;
t236 = t418 * t659 + t533 * t558 + t626;
t233 = -t371 * qJD(4) + (-qJD(6) + t711) * t468;
t226 = t543 + t570;
t198 = t203 * qJD(6);
t187 = t418 * t762 + t478 * t657 + t528 * t626;
t186 = t478 * t658 + t531 * t627 + t593 * t761;
t168 = t540 + t797;
t154 = t561 + t589;
t153 = t562 + t590;
t148 = t587 + t604;
t147 = t588 + t605;
t140 = t570 + t606;
t138 = t626 + t607;
t130 = t801 * t332;
t129 = t802 * t332;
t112 = t299 * t762 + t489 * t626 - t563;
t111 = t298 * t762 - t626 * t799 - t564;
t92 = t388 + t550;
t86 = t539 + t552;
t71 = t615 - t546;
t66 = pkin(4) * t627 + t533 * t682 + t536 + t809;
t62 = t213 * t762 + t333 * t657 + t409 * t659;
t61 = t333 * t658 + t409 * t657 + t629 * t761;
t52 = t549 + t608;
t45 = t591 + t610;
t44 = t592 + t611;
t40 = t545 + t603;
t39 = t388 - t613;
t37 = t539 + t612;
t33 = t126 * t762 + t388 * t489 - t565;
t32 = t125 * t762 - t388 * t799 - t566;
t25 = qJD(3) * t64;
t24 = t736 * t789 + t737 * t788 + t332 * t681 + (t755 / 0.2e1 + pkin(4) * t784) * t533 + t582 - t554;
t21 = t537 - t548;
t7 = t547 + t609;
t4 = qJD(3) * t26 + qJD(4) * t27;
t2 = t538 - t557;
t1 = qJD(3) * t10 + qJD(4) * t11;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t89, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t46 + qJD(4) * t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t18 + qJD(4) * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695, t696, 0, 0, 0, 0, 0, 0, 0, 0, t278 * qJD(4) - t535 * t695, qJD(4) * t280 + t410 * t687 (-t526 - t527) * t696 (-pkin(3) * t410 - t527 * t756 - t392) * qJD(3) + t630, 0, 0, 0, 0, 0, 0 (-t274 * t535 - t409 * t731) * qJD(3) + t61 * qJD(4) (t275 * t535 - t526 * t743) * qJD(3) + t62 * qJD(4), t52 * qJD(4) + (-t274 * t531 - t275 * t528) * t687 (t274 * t454 + t275 * t455 - t392) * qJD(3) + t24 * qJD(4) + t92 * qJD(5) + t632, 0, 0, 0, 0, 0, 0 (-t149 * t535 - t409 * t734) * qJD(3) + t32 * qJD(4) + t45 * qJD(6) (t150 * t535 - t409 * t733) * qJD(3) + t33 * qJD(4) + t44 * qJD(6) (-t149 * t471 - t150 * t468) * qJD(3) + t7 * qJD(4) (-t149 * t289 + t150 * t290 - t496 * t742) * qJD(3) + t2 * qJD(4) + t39 * qJD(5) + t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t278 - qJD(4) * t333, qJD(3) * t280 + qJD(4) * t332, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t61 - t333 * t706, qJD(3) * t62 + t333 * t707, t52 * qJD(3) - t332 * t798, t24 * qJD(3) + (-t333 * pkin(4) - t332 * t803) * qJD(4) + t86 * qJD(5) + t631, 0, 0, 0, 0, 0, 0, qJD(3) * t32 + qJD(6) * t130 - t333 * t710, qJD(3) * t33 + qJD(6) * t129 + t333 * t709, t7 * qJD(3) + (-t170 * t489 - t171 * t799) * qJD(4), t2 * qJD(3) + (-t170 * t424 - t171 * t425 + t333 * t521) * qJD(4) + t37 * qJD(5) + t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t92 + qJD(4) * t86, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t39 + qJD(4) * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t45 + qJD(4) * t130 - qJD(6) * t126, qJD(3) * t44 + qJD(4) * t129 + qJD(6) * t125, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t327, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t164 + qJD(4) * t163, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t83 + qJD(4) * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534 * t712, -t642, 0, 0, 0, 0, 0, 0, 0, 0 (-t533 * t656 - t534 * t711) * t530 (t534 * t687 - t535 * t656) * t530 (t526 * t758 + t675) * t712 (t506 + (-pkin(3) * t534 + pkin(9) * t675) * t530) * qJD(3) + t623, 0, 0, 0, 0, 0, 0 (-t452 * t535 + t528 * t646) * qJD(3) + t186 * qJD(4) (t453 * t535 + t526 * t644) * qJD(3) + t187 * qJD(4), t168 * qJD(4) + (-t452 * t531 - t453 * t528) * t687 (t452 * t454 + t453 * t455 + t506) * qJD(3) + t66 * qJD(4) + t236 * qJD(5) + t624, 0, 0, 0, 0, 0, 0 (-t339 * t535 + t468 * t645) * qJD(3) + t111 * qJD(4) + t148 * qJD(6) (t340 * t535 + t471 * t645) * qJD(3) + t112 * qJD(4) + t147 * qJD(6) (-t339 * t471 - t340 * t468) * qJD(3) + t40 * qJD(4) (-t339 * t289 + t340 * t290 + t496 * t645) * qJD(3) + t21 * qJD(4) + t138 * qJD(5) + t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t533 * t642 - t693, t477 * qJD(4) - t535 * t642, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t186 - t531 * t693, qJD(3) * t187 + t528 * t693, t168 * qJD(3) - t477 * t798, t66 * qJD(3) + (-t478 * pkin(4) - t477 * t803) * qJD(4) + t226 * qJD(5) + t625, 0, 0, 0, 0, 0, 0, qJD(3) * t111 + qJD(6) * t260 - t693 * t799, qJD(3) * t112 + qJD(6) * t259 + t489 * t693, t40 * qJD(3) + (-t351 * t489 - t352 * t799) * qJD(4), t21 * qJD(3) + (-t351 * t424 - t352 * t425 + t478 * t521) * qJD(4) + t140 * qJD(5) + t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t236 + qJD(4) * t226, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t138 + qJD(4) * t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t148 + qJD(4) * t260 - qJD(6) * t299, qJD(3) * t147 + qJD(4) * t259 + qJD(6) * t298, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277 * qJD(4), 0, 0, -t630, 0, 0, 0, 0, 0, 0, 0, -t59 * qJD(4), t53 * qJD(4), -qJD(4) * t23 + qJD(5) * t93 - t632, 0, 0, 0, 0, 0, 0, -qJD(4) * t30 - qJD(6) * t42, -qJD(4) * t31 - qJD(6) * t43, qJD(4) * t8, qJD(4) * t3 - qJD(5) * t38 - t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t623, 0, 0, 0, 0, 0, 0, 0, -t184 * qJD(4), t169 * qJD(4), qJD(4) * t67 - qJD(5) * t235 - t624, 0, 0, 0, 0, 0, 0, -qJD(4) * t109 - qJD(6) * t145, -qJD(4) * t110 - qJD(6) * t146, qJD(4) * t41, qJD(4) * t22 - qJD(5) * t137 - t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t660, -t514 * qJD(4), 0, -t660, 0, 0, -pkin(3) * t686, -pkin(3) * t685, 0, 0, t525 * t660, t650 * t685, t488 * qJD(4), t524 * t660, -t487 * qJD(4), -t660, -t325 * qJD(4) + t531 * t662, t326 * qJD(4) - t528 * t662, -qJD(4) * t189 + qJD(5) * t484, qJD(4) * t214 - qJD(5) * t331 (qJD(4) * t473 - t694) * t471, qJD(4) * t267 + qJD(6) * t330, -t354 * qJD(4) + t535 * t694 (qJD(4) * t470 + t704) * t468, -t353 * qJD(4) + t535 * t704, -t660, -t119 * qJD(4) - t193 * qJD(6) + t471 * t705, t120 * qJD(4) + t192 * qJD(6) - t468 * t705, qJD(4) * t55 + qJD(5) * t363, qJD(4) * t65 + qJD(5) * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t515, -t688, t685, -t515, -t686, 0, -t614 - t683, pkin(9) * t686 - t684, 0, 0 (t525 * t687 + t663) * t535 (qJD(3) * t650 + (-t524 + t525) * qJD(4)) * t535, t528 * t686 + t690 (t524 * t687 - t663) * t535, t531 * t686 - t691, -t515, -t517 * qJD(4) + t528 * t560 - t701, t528 * t683 + t531 * t560 - t574, qJD(4) * t628 + t575 (-pkin(4) * t752 + qJ(5) * t628) * qJD(4) + t329 * qJD(5) + t581, t473 * t617 + t807, t702 + (-t470 * t489 + t473 * t799) * qJD(4) + t198, -qJD(6) * t371 + t489 * t686 - t715, -t470 * t618 - t807, -qJD(6) * t368 + t686 * t799 - t716, -t482 (-t424 * t533 + t470 * t521 - t497 * t799) * qJD(4) - t369 * qJD(5) + t154 * qJD(6) + t580 (-t425 * t533 + t473 * t521 + t489 * t497) * qJD(4) + t370 * qJD(5) + t153 * qJD(6) + t579 (-t293 * t489 + t294 * t799 + t424 * t473 - t425 * t470) * qJD(4) + t583 + t750 (-t293 * t424 + t294 * t425 + t497 * t521) * qJD(4) + t71 * qJD(5) + t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t531 * t687 + t707) * t535 (-t528 * t687 + t706) * t535, t692, qJD(4) * t329 - t573, 0, 0, 0, 0, 0, 0, -t648, t319, t620, qJD(4) * t71 - t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t805, t622, t233, -t805, -t596, t522, qJD(4) * t154 - qJD(6) * t290 - t577, qJD(4) * t153 + qJD(6) * t289 - t576, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59 * qJD(3), -t53 * qJD(3), qJD(3) * t23 - qJD(5) * t85 - t631, 0, 0, 0, 0, 0, 0, qJD(3) * t30 - qJD(6) * t127, qJD(3) * t31 - qJD(6) * t128, -qJD(3) * t8, -qJD(3) * t3 - qJD(5) * t36 - t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184 * qJD(3), -t169 * qJD(3), -qJD(3) * t67 - qJD(5) * t225 - t625, 0, 0, 0, 0, 0, 0, qJD(3) * t109 - qJD(6) * t257, qJD(3) * t110 - qJD(6) * t258, -qJD(3) * t41, -qJD(3) * t22 - qJD(5) * t139 - t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t515, t688, 0, t515, 0, 0, t614, t684, 0, 0, -t525 * t515, 0.2e1 * t528 * t643, -t690, -t524 * t515, t691, t515, t701, t574, -t575, -qJD(5) * t328 - t581, -t473 * t713 + t807, t198 - t702, -qJD(6) * t370 + t715, -t470 * t714 - t807, -qJD(6) * t369 + t716, t482, -qJD(5) * t368 - qJD(6) * t151 - t580, qJD(5) * t371 - qJD(6) * t152 - t579, -t583 + t750, -qJD(5) * t70 - t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t512 * qJD(5), t803 * qJD(5), t661, t361 * qJD(6), 0, -t661, 0, 0, t521 * t703, t521 * t479, qJD(5) * t420, qJD(5) * t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t798, -t555, 0, 0, 0, 0, 0, 0, -t700, t697, t619, -t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t806, t621, t479 - t698, t806, -t699 - t703, -t687 / 0.2e1, -qJD(6) * t425 + t489 * t708 - t572, qJD(6) * t424 + t708 * t799 - t571, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t93 + qJD(4) * t85, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t38 + qJD(4) * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t235 + qJD(4) * t225, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t137 + qJD(4) * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t643, t528 * t515, -t692, qJD(4) * t328 + t573, 0, 0, 0, 0, 0, 0, t596, t233, -t620, qJD(4) * t70 + t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t798, t555, 0, 0, 0, 0, 0, 0, t700 + t703, t479 - t697, -t619, t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t617, t618, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t42 + qJD(4) * t127, qJD(3) * t43 + qJD(4) * t128, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t145 + qJD(4) * t257, qJD(3) * t146 + qJD(4) * t258, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t805, -t622, t319, t805, t648, t522, qJD(4) * t151 - qJD(5) * t471 + t577, qJD(4) * t152 + qJD(5) * t468 + t576, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t806, -t621, t698, -t806, t699, t687 / 0.2e1, -t489 * t647 + t572, -t647 * t799 + t571, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t617, -t618, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
