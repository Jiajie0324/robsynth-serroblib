% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PPRRPR1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRPR1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRPR1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRPR1_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:47:35
% EndTime: 2019-03-08 18:47:48
% DurationCPUTime: 8.17s
% Computational Cost: add. (8270->581), mult. (21215->831), div. (0->0), fcn. (19392->18), ass. (0->261)
t214 = sin(qJ(4));
t217 = cos(qJ(4));
t255 = pkin(4) * t214 - qJ(5) * t217;
t141 = qJD(4) * t255 - t214 * qJD(5);
t329 = cos(pkin(6));
t192 = qJD(1) * t329 + qJD(2);
t207 = sin(pkin(12));
t209 = sin(pkin(6));
t215 = sin(qJ(3));
t211 = cos(pkin(12));
t328 = cos(pkin(7));
t270 = t211 * t328;
t260 = t215 * t270;
t343 = cos(qJ(3));
t230 = (t207 * t343 + t260) * t209;
t208 = sin(pkin(7));
t312 = t208 * t215;
t95 = qJD(1) * t230 + t192 * t312;
t356 = t141 - t95;
t206 = sin(pkin(13));
t210 = cos(pkin(13));
t314 = t207 * t209;
t286 = qJD(1) * t314;
t177 = t215 * t286;
t247 = t343 * t270;
t243 = t209 * t247;
t237 = qJD(1) * t243;
t287 = t208 * t343;
t225 = -t192 * t287 + t177 - t237;
t298 = qJD(4) * t214;
t291 = pkin(9) * t298;
t315 = t206 * t217;
t331 = t206 * t291 + t210 * t356 - t225 * t315;
t310 = t210 * t217;
t355 = -t206 * t356 - t225 * t310;
t299 = qJD(4) * t210;
t303 = qJD(3) * t214;
t163 = -t206 * t303 + t299;
t300 = qJD(4) * t206;
t164 = t210 * t303 + t300;
t213 = sin(qJ(6));
t216 = cos(qJ(6));
t99 = -t216 * t163 + t164 * t213;
t354 = t99 ^ 2;
t102 = t163 * t213 + t164 * t216;
t353 = t102 ^ 2;
t246 = pkin(5) * t214 - pkin(10) * t310;
t352 = qJD(4) * t246 + t331;
t311 = t210 * t214;
t351 = -(-pkin(9) * t311 - pkin(10) * t315) * qJD(4) + t355;
t301 = qJD(3) * t217;
t194 = -qJD(6) + t301;
t350 = t194 * t99;
t327 = cos(pkin(11));
t257 = t329 * t327;
t326 = sin(pkin(11));
t228 = t207 * t326 - t211 * t257;
t272 = t209 * t327;
t349 = t208 * t272 + t228 * t328;
t256 = t329 * t326;
t229 = t207 * t327 + t211 * t256;
t271 = t209 * t326;
t348 = -t208 * t271 + t229 * t328;
t201 = t217 * qJDD(3);
t294 = qJD(3) * qJD(4);
t347 = t214 * t294 - t201;
t295 = qJD(6) * t216;
t296 = qJD(6) * t213;
t346 = -t206 * t296 + t210 * t295;
t167 = t206 * t213 - t216 * t210;
t345 = -pkin(4) * t217 - qJ(5) * t214;
t204 = t214 ^ 2;
t205 = t217 ^ 2;
t305 = t204 - t205;
t267 = qJD(3) * t305;
t344 = -qJDD(4) * pkin(4) + qJDD(5);
t289 = t209 * t211 * t208;
t130 = -qJD(1) * t289 + t192 * t328;
t309 = t214 * t130;
t92 = qJD(3) * pkin(9) + t95;
t66 = t217 * t92 + t309;
t64 = qJD(4) * qJ(5) + t66;
t178 = -pkin(3) + t345;
t81 = qJD(3) * t178 + t225;
t32 = -t206 * t64 + t210 * t81;
t28 = -pkin(5) * t301 - pkin(10) * t164 + t32;
t33 = t206 * t81 + t210 * t64;
t29 = pkin(10) * t163 + t33;
t254 = t213 * t29 - t216 * t28;
t278 = t217 * t294;
t292 = t214 * qJDD(3);
t293 = t206 * qJDD(4);
t129 = t293 + (t278 + t292) * t210;
t189 = t329 * qJDD(1) + qJDD(2);
t127 = -qJDD(1) * t289 + t189 * t328;
t297 = qJD(4) * t217;
t323 = qJDD(3) * pkin(9);
t249 = t209 * t260;
t280 = qJD(3) * t343;
t265 = t208 * t280;
t277 = qJDD(1) * t314;
t253 = -qJD(3) * t237 - qJDD(1) * t249 - t189 * t312 - t192 * t265 - t277 * t343;
t264 = qJD(3) * t286;
t58 = -t215 * t264 - t253;
t56 = t58 + t323;
t290 = t214 * t127 + t130 * t297 + t217 * t56;
t85 = t214 * t92;
t18 = qJDD(4) * qJ(5) + (qJD(5) - t85) * qJD(4) + t290;
t302 = qJD(3) * t215;
t283 = t208 * t302;
t59 = -qJD(3) * qJD(1) * t249 + qJDD(1) * t243 + t189 * t287 - t192 * t283 - t215 * t277 - t264 * t343;
t36 = qJD(3) * t141 + qJDD(3) * t178 - t59;
t8 = -t18 * t206 + t210 * t36;
t6 = pkin(5) * t347 - pkin(10) * t129 + t8;
t186 = t206 * t292;
t128 = -qJDD(4) * t210 + t206 * t278 + t186;
t9 = t210 * t18 + t206 * t36;
t7 = -pkin(10) * t128 + t9;
t1 = -t254 * qJD(6) + t213 * t6 + t216 * t7;
t341 = pkin(5) * t128;
t340 = pkin(5) * t206;
t339 = pkin(10) + qJ(5);
t158 = t210 * t178;
t105 = -pkin(10) * t311 + t158 + (-pkin(9) * t206 - pkin(5)) * t217;
t132 = pkin(9) * t310 + t206 * t178;
t115 = -pkin(10) * t206 * t214 + t132;
t67 = t105 * t216 - t115 * t213;
t338 = qJD(6) * t67 + t213 * t352 - t216 * t351;
t68 = t105 * t213 + t115 * t216;
t337 = -qJD(6) * t68 + t213 * t351 + t216 * t352;
t181 = t339 * t206;
t182 = t339 * t210;
t116 = -t181 * t216 - t182 * t213;
t169 = t255 * qJD(3);
t65 = t130 * t217 - t85;
t47 = t210 * t169 - t206 * t65;
t37 = qJD(3) * t246 + t47;
t284 = t206 * t301;
t48 = t206 * t169 + t210 * t65;
t38 = -pkin(10) * t284 + t48;
t336 = -qJD(5) * t167 + qJD(6) * t116 - t213 * t37 - t216 * t38;
t117 = -t181 * t213 + t182 * t216;
t168 = t206 * t216 + t210 * t213;
t335 = -qJD(5) * t168 - qJD(6) * t117 + t213 * t38 - t216 * t37;
t334 = qJD(3) * pkin(3);
t333 = t102 * t99;
t332 = t214 * t225;
t330 = -t210 * t291 - t355;
t324 = qJDD(3) * pkin(3);
t321 = t128 * t210;
t320 = t129 * t206;
t203 = pkin(13) + qJ(6);
t199 = sin(t203);
t319 = t199 * t217;
t200 = cos(t203);
t318 = t200 * t217;
t219 = qJD(3) ^ 2;
t317 = t205 * t219;
t313 = t207 * t215;
t146 = t168 * qJD(6);
t239 = t168 * t217;
t307 = qJD(3) * t239 - t146;
t306 = -t167 * t301 - t346;
t288 = pkin(9) + t340;
t285 = t164 * t301;
t276 = t206 * t201;
t275 = t210 * t292;
t274 = t210 * t201;
t273 = t208 * t329;
t153 = t288 * t297;
t269 = t153 + t332;
t268 = t216 * t128 + t213 * t129;
t266 = -t217 * t127 + t130 * t298 + t214 * t56 + t92 * t297;
t263 = t214 * t278;
t262 = qJD(4) * t280;
t11 = t213 * t28 + t216 * t29;
t248 = t343 * t273;
t107 = t209 * t313 - t243 - t248;
t108 = t215 * t273 + t230;
t234 = t328 * t329 - t289;
t80 = t108 * t217 + t214 * t234;
t41 = t107 * t210 - t206 * t80;
t42 = t107 * t206 + t210 * t80;
t16 = -t213 * t42 + t216 * t41;
t17 = t213 * t41 + t216 * t42;
t148 = t214 * t328 + t217 * t312;
t111 = -t206 * t148 - t210 * t287;
t112 = t210 * t148 - t206 * t287;
t69 = t111 * t216 - t112 * t213;
t70 = t111 * t213 + t112 * t216;
t252 = t163 * t210 - t164 * t206;
t197 = pkin(5) * t210 + pkin(4);
t251 = -t197 * t217 - t214 * t339;
t250 = qJD(3) * (-t163 + t299);
t220 = t208 * t228 - t272 * t328;
t142 = t207 * t257 + t211 * t326;
t76 = t142 * t343 - t215 * t349;
t43 = t214 * t76 - t217 * t220;
t221 = t208 * t229 + t271 * t328;
t143 = -t207 * t256 + t211 * t327;
t78 = t143 * t343 - t215 * t348;
t45 = t214 * t78 - t217 * t221;
t79 = t108 * t214 - t217 * t234;
t245 = g(1) * t45 + g(2) * t43 + g(3) * t79;
t44 = t214 * t220 + t76 * t217;
t46 = t214 * t221 + t78 * t217;
t244 = g(1) * t46 + g(2) * t44 + g(3) * t80;
t242 = qJDD(3) * t343 - t215 * t219;
t75 = t142 * t215 + t343 * t349;
t77 = t143 * t215 + t343 * t348;
t241 = g(1) * t77 + g(2) * t75 + g(3) * t107;
t240 = g(1) * t78 + g(2) * t76 + g(3) * t108;
t50 = t213 * t128 - t216 * t129 - t163 * t295 + t164 * t296;
t62 = -qJD(4) * pkin(4) + qJD(5) - t65;
t19 = t266 + t344;
t238 = -t19 + t245;
t147 = t214 * t312 - t217 * t328;
t236 = -qJ(5) * t298 + (qJD(5) - t62) * t217;
t91 = t225 - t334;
t235 = -pkin(9) * qJDD(4) + (t91 - t225 - t334) * qJD(4);
t233 = qJD(3) * t95 + t241;
t232 = -g(1) * t271 + g(2) * t272 - g(3) * t329;
t2 = -qJD(6) * t11 - t213 * t7 + t216 * t6;
t231 = t245 - t266;
t51 = qJD(6) * t102 + t268;
t224 = -t231 + t344;
t218 = qJD(4) ^ 2;
t57 = -t59 - t324;
t223 = -pkin(9) * t218 + t233 + t324 - t57;
t20 = -t298 * t92 + t290;
t222 = t20 * t217 + t266 * t214 + (-t214 * t66 - t217 * t65) * qJD(4) - t240;
t191 = t217 * t219 * t214;
t173 = t288 * t214;
t166 = qJDD(6) + t347;
t156 = qJDD(3) * t205 - 0.2e1 * t263;
t139 = t167 * t214;
t138 = t168 * t214;
t131 = -pkin(9) * t315 + t158;
t114 = qJD(4) * t148 + t214 * t265;
t113 = -qJD(4) * t147 + t217 * t265;
t106 = t107 * pkin(3);
t97 = t108 * qJD(3);
t96 = (t248 + (t247 - t313) * t209) * qJD(3);
t90 = qJD(4) * t239 + t214 * t346;
t89 = t146 * t214 + t167 * t297;
t88 = t113 * t210 + t206 * t283;
t87 = -t113 * t206 + t210 * t283;
t72 = t77 * pkin(3);
t71 = t75 * pkin(3);
t60 = t309 + (qJD(3) * t340 + t92) * t217;
t49 = -pkin(5) * t163 + t62;
t40 = -qJD(4) * t79 + t96 * t217;
t39 = qJD(4) * t80 + t96 * t214;
t31 = t206 * t97 + t210 * t40;
t30 = -t206 * t40 + t210 * t97;
t25 = -qJD(6) * t70 - t213 * t88 + t216 * t87;
t24 = qJD(6) * t69 + t213 * t87 + t216 * t88;
t12 = t19 + t341;
t4 = -qJD(6) * t17 - t213 * t31 + t216 * t30;
t3 = qJD(6) * t16 + t213 * t30 + t216 * t31;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1) - g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t189 * t329 - g(3) + (t207 ^ 2 + t211 ^ 2) * t209 ^ 2 * qJDD(1), 0, 0, 0, 0, 0, 0, -qJD(3) * t97 - qJDD(3) * t107, -qJD(3) * t96 - qJDD(3) * t108, 0, -t59 * t107 + t58 * t108 + t127 * t234 + t225 * t97 + t95 * t96 - g(3), 0, 0, 0, 0, 0, 0, -t107 * t201 - qJD(4) * t39 - qJDD(4) * t79 + (t107 * t298 - t217 * t97) * qJD(3), t107 * t292 - qJD(4) * t40 - qJDD(4) * t80 + (t107 * t297 + t214 * t97) * qJD(3) (t214 * t79 + t217 * t80) * qJDD(3) + (t214 * t39 + t217 * t40 + (-t214 * t80 + t217 * t79) * qJD(4)) * qJD(3), t107 * t57 + t20 * t80 + t266 * t79 - t39 * t65 + t40 * t66 + t91 * t97 - g(3), 0, 0, 0, 0, 0, 0, -t41 * t201 + t128 * t79 - t163 * t39 + (-t217 * t30 + t298 * t41) * qJD(3), t42 * t201 + t129 * t79 + t164 * t39 + (t217 * t31 - t298 * t42) * qJD(3), -t128 * t42 - t129 * t41 + t163 * t31 - t164 * t30, t19 * t79 + t30 * t32 + t31 * t33 + t39 * t62 + t41 * t8 + t42 * t9 - g(3), 0, 0, 0, 0, 0, 0, t16 * t166 - t194 * t4 + t39 * t99 + t51 * t79, t102 * t39 - t166 * t17 + t194 * t3 - t50 * t79, -t102 * t4 + t16 * t50 - t17 * t51 - t3 * t99, t1 * t17 + t11 * t3 + t12 * t79 + t16 * t2 - t254 * t4 + t39 * t49 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232 + t189, 0, 0, 0, 0, 0, 0, t242 * t208 (-qJDD(3) * t215 - t219 * t343) * t208, 0, t127 * t328 + (t343 * t59 + t215 * t58 + (t215 * t225 + t343 * t95) * qJD(3)) * t208 + t232, 0, 0, 0, 0, 0, 0, -t114 * qJD(4) - t147 * qJDD(4) + (-t214 * t262 + t217 * t242) * t208, -t113 * qJD(4) - t148 * qJDD(4) + (-t214 * t242 - t217 * t262) * t208 (t147 * t214 + t148 * t217) * qJDD(3) + (t113 * t217 + t114 * t214 + (t147 * t217 - t148 * t214) * qJD(4)) * qJD(3), t66 * t113 - t65 * t114 + t266 * t147 + t20 * t148 + (t91 * t302 - t343 * t57) * t208 + t232, 0, 0, 0, 0, 0, 0, -t111 * t201 - t114 * t163 + t128 * t147 + (t111 * t298 - t217 * t87) * qJD(3), t112 * t201 + t114 * t164 + t129 * t147 + (-t112 * t298 + t217 * t88) * qJD(3), -t111 * t129 - t112 * t128 + t163 * t88 - t164 * t87, t8 * t111 + t9 * t112 + t62 * t114 + t19 * t147 + t32 * t87 + t33 * t88 + t232, 0, 0, 0, 0, 0, 0, t114 * t99 + t147 * t51 + t166 * t69 - t194 * t25, t102 * t114 - t147 * t50 - t166 * t70 + t194 * t24, -t102 * t25 - t24 * t99 + t50 * t69 - t51 * t70, t1 * t70 + t11 * t24 + t49 * t114 + t12 * t147 + t2 * t69 - t25 * t254 + t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), t233 + t59 (-t225 + t177) * qJD(3) + t240 + t253, 0, 0, qJDD(3) * t204 + 0.2e1 * t263, -0.2e1 * qJD(4) * t267 + 0.2e1 * t201 * t214, qJDD(4) * t214 + t217 * t218, t156, qJDD(4) * t217 - t214 * t218, 0, t214 * t235 + t217 * t223, -t214 * t223 + t217 * t235, t222 + (qJD(3) * t225 + t323) * (t204 + t205) -t57 * pkin(3) + g(1) * t72 + g(2) * t71 + g(3) * t106 - t91 * t95 - (t214 * t65 - t217 * t66) * t225 + t222 * pkin(9) (t129 * t214 + t164 * t297) * t210 (-t320 - t321) * t214 + t252 * t297 (-t129 - t275) * t217 + (t164 * t214 + t210 * t267) * qJD(4) (t128 * t214 - t163 * t297) * t206 (t128 + t186) * t217 + (t163 * t214 - t206 * t267) * qJD(4), t156, -t240 * t206 + (pkin(9) * t128 - t225 * t163 + t19 * t206 + (qJD(3) * t131 + t32) * qJD(4)) * t214 + (-t131 * qJDD(3) - t8 + (-pkin(9) * t163 + t206 * t62) * qJD(4) - t331 * qJD(3) + t241 * t210) * t217, -t240 * t210 + (pkin(9) * t129 + t225 * t164 + t19 * t210 + (-qJD(3) * t132 - t33) * qJD(4)) * t214 + (t132 * qJDD(3) + t9 + (pkin(9) * t164 + t210 * t62) * qJD(4) + t330 * qJD(3) - t241 * t206) * t217, -t128 * t132 - t129 * t131 - t331 * t164 + t330 * t163 + (-t206 * t33 - t210 * t32) * t297 + (-t206 * t9 - t210 * t8 + t241) * t214, t9 * t132 + t8 * t131 + t62 * t332 - g(1) * (t345 * t77 - t72) - g(2) * (t345 * t75 - t71) - g(3) * (t107 * t345 - t106) + t330 * t33 + t331 * t32 + (t19 * t214 + t297 * t62 - t240) * pkin(9), -t102 * t89 + t139 * t50, -t102 * t90 + t138 * t50 + t139 * t51 + t89 * t99, t102 * t298 - t139 * t166 + t194 * t89 + t217 * t50, t138 * t51 + t90 * t99, -t138 * t166 + t194 * t90 + t217 * t51 - t298 * t99, -t166 * t217 - t194 * t298, t67 * t166 - t2 * t217 + t153 * t99 + t173 * t51 + t12 * t138 + t49 * t90 - g(1) * (t199 * t78 - t318 * t77) - g(2) * (t199 * t76 - t318 * t75) - g(3) * (-t107 * t318 + t108 * t199) + (-qJD(4) * t254 + t225 * t99) * t214 - t337 * t194, -t68 * t166 + t1 * t217 - t11 * t298 - t173 * t50 - t12 * t139 - t49 * t89 - g(1) * (t200 * t78 + t319 * t77) - g(2) * (t200 * t76 + t319 * t75) - g(3) * (t107 * t319 + t108 * t200) + t338 * t194 + t269 * t102, -t1 * t138 - t102 * t337 - t11 * t90 + t139 * t2 + t214 * t241 - t254 * t89 - t338 * t99 + t50 * t67 - t51 * t68, t1 * t68 + t2 * t67 + t12 * t173 - g(1) * (t251 * t77 + t288 * t78 - t72) - g(2) * (t251 * t75 + t288 * t76 - t71) - g(3) * (t107 * t251 + t108 * t288 - t106) + t269 * t49 + t338 * t11 - t337 * t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, t305 * t219, t292, t191, t201, qJDD(4), qJD(4) * t66 - t303 * t91 + t231, -t91 * t301 + (t65 + t85) * qJD(4) + t244 - t290, 0, 0, -t210 * t285 + t320, -t128 * t206 + t129 * t210 - t252 * t301, -t276 + t210 * t317 + (-t164 + t300) * t303, t163 * t284 - t321, -t206 * t317 + t214 * t250 - t274, t191, qJ(5) * t276 - pkin(4) * t128 + t163 * t66 + t238 * t210 + (t206 * t236 - t214 * t32 + t217 * t47) * qJD(3), qJ(5) * t274 - pkin(4) * t129 - t164 * t66 - t238 * t206 + (t210 * t236 + t214 * t33 - t217 * t48) * qJD(3), -t163 * t48 + t164 * t47 + (-qJ(5) * t128 + qJD(5) * t163 + t301 * t32 + t9) * t210 + (qJ(5) * t129 + qJD(5) * t164 + t301 * t33 - t8) * t206 - t244, -t32 * t47 - t33 * t48 - t62 * t66 + (-t206 * t32 + t210 * t33) * qJD(5) + t238 * pkin(4) + (-t206 * t8 + t210 * t9 - t244) * qJ(5), -t102 * t306 - t50 * t168, t102 * t307 + t167 * t50 - t168 * t51 + t306 * t99, -t102 * t303 + t166 * t168 + t194 * t306, t51 * t167 - t307 * t99, -t166 * t167 - t194 * t307 + t303 * t99, t194 * t303, t116 * t166 + t12 * t167 - t194 * t335 - t197 * t51 + t200 * t245 + t254 * t303 - t307 * t49 - t60 * t99, -t102 * t60 + t11 * t303 - t117 * t166 + t12 * t168 + t194 * t336 + t197 * t50 - t199 * t245 - t306 * t49, -t1 * t167 - t102 * t335 + t11 * t307 + t116 * t50 - t117 * t51 - t168 * t2 - t254 * t306 - t336 * t99 - t244, t1 * t117 + t2 * t116 - t12 * t197 - t49 * t60 - g(1) * (-t197 * t45 + t339 * t46) - g(2) * (-t197 * t43 + t339 * t44) - g(3) * (-t197 * t79 + t339 * t80) + t336 * t11 - t335 * t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128 - t285, t217 * t250 + t275 + t293, -t163 ^ 2 - t164 ^ 2, -t163 * t33 + t164 * t32 + t224, 0, 0, 0, 0, 0, 0, -t102 * t194 + t51, -t50 + t350, -t353 - t354, -t102 * t254 + t11 * t99 + t224 + t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t333, t353 - t354, -t50 - t350, -t333, -t268 + (-qJD(6) - t194) * t102, t166, -t11 * t194 - t49 * t102 - g(1) * (-t199 * t46 + t200 * t77) - g(2) * (-t199 * t44 + t200 * t75) - g(3) * (t107 * t200 - t199 * t80) + t2, t254 * t194 + t49 * t99 - g(1) * (-t199 * t77 - t200 * t46) - g(2) * (-t199 * t75 - t200 * t44) - g(3) * (-t107 * t199 - t200 * t80) - t1, 0, 0;];
tau_reg  = t5;
