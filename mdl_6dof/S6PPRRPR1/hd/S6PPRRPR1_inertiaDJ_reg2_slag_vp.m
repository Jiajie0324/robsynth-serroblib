% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PPRRPR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRPR1_inertiaDJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:47:29
% EndTime: 2019-03-08 18:47:36
% DurationCPUTime: 2.72s
% Computational Cost: add. (2838->284), mult. (8568->534), div. (0->0), fcn. (9165->14), ass. (0->137)
t152 = cos(pkin(12));
t153 = cos(pkin(7));
t154 = cos(pkin(6));
t92 = sin(pkin(7));
t93 = sin(pkin(6));
t107 = -t152 * t92 * t93 + t153 * t154;
t112 = t153 * t152;
t125 = t154 * t92;
t91 = sin(pkin(12));
t97 = sin(qJ(3));
t99 = cos(qJ(3));
t43 = t97 * t125 + (t112 * t97 + t91 * t99) * t93;
t96 = sin(qJ(4));
t98 = cos(qJ(4));
t26 = t107 * t96 + t43 * t98;
t42 = -t99 * t125 + (-t112 * t99 + t91 * t97) * t93;
t39 = t42 * qJD(3);
t16 = qJD(4) * t26 - t39 * t96;
t25 = -t107 * t98 + t43 * t96;
t150 = qJD(3) * t99;
t134 = t92 * t150;
t162 = t92 * t97;
t61 = t153 * t96 + t162 * t98;
t49 = qJD(4) * t61 + t134 * t96;
t60 = -t153 * t98 + t162 * t96;
t156 = t16 * t60 + t25 * t49;
t169 = cos(qJ(6));
t127 = qJD(6) * t169;
t95 = sin(qJ(6));
t148 = qJD(6) * t95;
t90 = sin(pkin(13));
t94 = cos(pkin(13));
t176 = t127 * t94 - t148 * t90;
t129 = t169 * t94;
t175 = -t90 * t95 + t129;
t174 = (t96 ^ 2 - t98 ^ 2) * qJD(4);
t173 = 0.2e1 * t176;
t67 = t169 * t90 + t94 * t95;
t59 = t67 * qJD(6);
t172 = 0.2e1 * t59;
t171 = pkin(4) * t96;
t170 = t98 * pkin(4);
t168 = t16 * t96;
t9 = t25 * t16;
t40 = t43 * qJD(3);
t167 = t40 * t99;
t166 = t42 * t40;
t165 = t49 * t96;
t32 = t60 * t49;
t164 = t90 * t96;
t163 = t90 * t98;
t161 = t92 * t99;
t160 = t94 * t96;
t159 = t94 * t98;
t157 = pkin(10) + qJ(5);
t117 = -qJ(5) * t96 - t170;
t110 = -pkin(3) + t117;
t81 = pkin(9) * t159;
t54 = t110 * t90 + t81;
t151 = qJD(3) * t97;
t149 = qJD(5) * t90;
t147 = t94 * qJD(5);
t146 = t96 * qJD(4);
t145 = t96 * qJD(5);
t144 = t98 * qJD(4);
t143 = pkin(9) * t163;
t142 = pkin(9) * t160;
t141 = -0.2e1 * pkin(3) * qJD(4);
t85 = pkin(9) * t144;
t137 = t90 * t144;
t136 = t90 * t145;
t135 = t92 * t151;
t133 = t94 * t144;
t132 = t94 * t145;
t131 = t96 * t144;
t130 = pkin(9) * t90 + pkin(5);
t128 = t157 * t90;
t124 = t169 * qJD(5);
t123 = 0.2e1 * t131;
t122 = t90 * t133;
t86 = t90 ^ 2;
t87 = t94 ^ 2;
t121 = 0.2e1 * (t86 + t87) * qJD(5);
t120 = -0.2e1 * t174;
t116 = -qJ(5) * t98 + t171;
t17 = -qJD(4) * t25 - t39 * t98;
t12 = -t17 * t90 + t40 * t94;
t13 = t17 * t94 + t40 * t90;
t115 = -t12 * t90 + t13 * t94;
t48 = qJD(4) * t60 - t134 * t98;
t33 = t135 * t94 + t48 * t90;
t34 = t135 * t90 - t48 * t94;
t114 = -t33 * t90 + t34 * t94;
t44 = -t132 + (pkin(9) * t164 + t116 * t94) * qJD(4);
t45 = -t136 + (t116 * t90 - t142) * qJD(4);
t113 = -t44 * t90 + t45 * t94;
t111 = t169 * t128;
t109 = -t157 * t98 + t171;
t18 = -t26 * t90 + t42 * t94;
t19 = t26 * t94 + t42 * t90;
t4 = t169 * t19 + t18 * t95;
t46 = -t161 * t94 - t61 * t90;
t47 = -t161 * t90 + t61 * t94;
t24 = t169 * t47 + t46 * t95;
t106 = t168 + t17 * t98 + (t25 * t98 - t26 * t96) * qJD(4);
t105 = -t48 * t98 + t165 + (t60 * t98 - t61 * t96) * qJD(4);
t104 = -t130 * t98 + (-t157 * t96 - pkin(3) - t170) * t94;
t103 = t95 * t104;
t102 = t169 * t104;
t101 = t136 - (t109 * t90 - t142) * qJD(4);
t100 = -t132 + (t109 * t94 + t130 * t96) * qJD(4);
t84 = -pkin(5) * t94 - pkin(4);
t77 = -0.2e1 * t131;
t74 = t157 * t94;
t69 = (pkin(5) * t90 + pkin(9)) * t96;
t62 = pkin(5) * t137 + t85;
t57 = t175 * t96;
t56 = t67 * t96;
t53 = t110 * t94 - t143;
t52 = -t128 * t95 + t169 * t74;
t51 = -t95 * t74 - t111;
t50 = -pkin(10) * t164 + t54;
t36 = t144 * t67 + t176 * t96;
t35 = -t129 * t144 + t137 * t95 + t59 * t96;
t31 = -t74 * t127 - t95 * t147 + (t148 * t157 - t124) * t90;
t30 = qJD(6) * t111 - t94 * t124 + (qJD(6) * t74 + t149) * t95;
t23 = t169 * t46 - t47 * t95;
t22 = t169 * t50 + t103;
t21 = -t95 * t50 + t102;
t8 = -qJD(6) * t103 + t100 * t169 + t101 * t95 - t127 * t50;
t7 = -qJD(6) * t102 - t100 * t95 + t101 * t169 + t148 * t50;
t6 = -qJD(6) * t24 + t169 * t33 - t95 * t34;
t5 = -t127 * t46 + t148 * t47 - t169 * t34 - t33 * t95;
t3 = t169 * t18 - t19 * t95;
t2 = -qJD(6) * t4 + t12 * t169 - t95 * t13;
t1 = -t12 * t95 - t127 * t18 - t13 * t169 + t148 * t19;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t39 * t43 + 0.2e1 * t166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t17 * t26 + 0.2e1 * t166 + 0.2e1 * t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t12 * t18 + 0.2e1 * t13 * t19 + 0.2e1 * t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t1 * t4 + 0.2e1 * t2 * t3 + 0.2e1 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t39 * t97 - t167 + (t42 * t97 + t43 * t99) * qJD(3)) * t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17 * t61 - t26 * t48 + (t151 * t42 - t167) * t92 + t156, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12 * t46 + t13 * t47 + t18 * t33 + t19 * t34 + t156, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t24 + t2 * t23 + t3 * t6 - t4 * t5 + t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t150 * t92 ^ 2 * t97 - 0.2e1 * t48 * t61 + 0.2e1 * t32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t33 * t46 + 0.2e1 * t34 * t47 + 0.2e1 * t32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t23 * t6 - 0.2e1 * t24 * t5 + 0.2e1 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t39, 0, 0, 0, 0, 0, 0, 0, 0, t146 * t42 - t40 * t98, t144 * t42 + t40 * t96, t106, -t40 * pkin(3) + pkin(9) * t106, 0, 0, 0, 0, 0, 0, t16 * t164 - t12 * t98 + (t163 * t25 + t18 * t96) * qJD(4), t16 * t160 + t13 * t98 + (t159 * t25 - t19 * t96) * qJD(4) (-t12 * t94 - t13 * t90) * t96 + (-t18 * t94 - t19 * t90) * t144, t12 * t53 + t13 * t54 + t18 * t44 + t19 * t45 + (t144 * t25 + t168) * pkin(9), 0, 0, 0, 0, 0, 0, t146 * t3 + t16 * t56 - t2 * t98 + t25 * t36, -t1 * t98 - t146 * t4 + t16 * t57 - t25 * t35, t1 * t56 - t2 * t57 + t3 * t35 - t36 * t4, -t1 * t22 + t16 * t69 + t2 * t21 + t25 * t62 + t3 * t8 - t4 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, -t134, 0, 0, 0, 0, 0, 0, 0, 0 (-t146 * t99 - t151 * t98) * t92 (-t144 * t99 + t151 * t96) * t92, t105, -pkin(3) * t135 + pkin(9) * t105, 0, 0, 0, 0, 0, 0, t49 * t164 - t33 * t98 + (t163 * t60 + t46 * t96) * qJD(4), t49 * t160 + t34 * t98 + (t159 * t60 - t47 * t96) * qJD(4) (-t33 * t94 - t34 * t90) * t96 + (-t46 * t94 - t47 * t90) * t144, t33 * t53 + t34 * t54 + t46 * t44 + t47 * t45 + (t144 * t60 + t165) * pkin(9), 0, 0, 0, 0, 0, 0, t146 * t23 + t36 * t60 + t49 * t56 - t6 * t98, -t146 * t24 - t35 * t60 + t49 * t57 - t5 * t98, t23 * t35 - t24 * t36 + t5 * t56 - t57 * t6, t21 * t6 - t22 * t5 + t23 * t8 - t24 * t7 + t49 * t69 + t60 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, t120, 0, t77, 0, 0, t96 * t141, t98 * t141, 0, 0, t87 * t123, -0.4e1 * t96 * t122, 0.2e1 * t94 * t174, t86 * t123, t90 * t120, t77, -0.2e1 * t44 * t98 + 0.2e1 * (t53 + 0.2e1 * t143) * t146, 0.2e1 * t45 * t98 + 0.2e1 * (-t54 + 0.2e1 * t81) * t146, 0.2e1 * (-t44 * t94 - t45 * t90) * t96 + 0.2e1 * (-t53 * t94 - t54 * t90) * t144, 0.2e1 * pkin(9) ^ 2 * t131 + 0.2e1 * t44 * t53 + 0.2e1 * t45 * t54, -0.2e1 * t57 * t35, 0.2e1 * t35 * t56 - 0.2e1 * t36 * t57, 0.2e1 * t146 * t57 + 0.2e1 * t35 * t98, 0.2e1 * t56 * t36, -0.2e1 * t146 * t56 + 0.2e1 * t36 * t98, t77, 0.2e1 * t146 * t21 + 0.2e1 * t36 * t69 + 0.2e1 * t56 * t62 - 0.2e1 * t8 * t98, -0.2e1 * t146 * t22 - 0.2e1 * t35 * t69 + 0.2e1 * t57 * t62 - 0.2e1 * t7 * t98, 0.2e1 * t21 * t35 - 0.2e1 * t22 * t36 + 0.2e1 * t56 * t7 - 0.2e1 * t57 * t8, 0.2e1 * t21 * t8 - 0.2e1 * t22 * t7 + 0.2e1 * t62 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, -t17, 0, 0, 0, 0, 0, 0, 0, 0, -t16 * t94, t16 * t90, t115, -t16 * pkin(4) + (-t18 * t90 + t19 * t94) * qJD(5) + t115 * qJ(5), 0, 0, 0, 0, 0, 0, -t16 * t175 + t25 * t59, t16 * t67 + t176 * t25, -t1 * t175 - t176 * t3 - t2 * t67 - t4 * t59, -t1 * t52 + t16 * t84 + t2 * t51 + t3 * t31 - t30 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, t48, 0, 0, 0, 0, 0, 0, 0, 0, -t49 * t94, t49 * t90, t114, -t49 * pkin(4) + (-t46 * t90 + t47 * t94) * qJD(5) + t114 * qJ(5), 0, 0, 0, 0, 0, 0, -t175 * t49 + t59 * t60, t176 * t60 + t49 * t67, -t175 * t5 - t176 * t23 - t24 * t59 - t6 * t67, t23 * t31 - t24 * t30 + t49 * t84 - t5 * t52 + t51 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, 0, -t146, 0, -t85, pkin(9) * t146, 0, 0, t122 (-t86 + t87) * t144, t90 * t146, -t122, t94 * t146, 0, t98 * t149 + (t117 * t90 - t81) * qJD(4), t98 * t147 + (t117 * t94 + t143) * qJD(4), t113, -pkin(4) * t85 + (-t53 * t90 + t54 * t94) * qJD(5) + t113 * qJ(5), t176 * t57 - t35 * t67, -t175 * t35 - t176 * t56 - t36 * t67 - t57 * t59, t146 * t67 - t176 * t98, -t175 * t36 + t56 * t59, t146 * t175 + t59 * t98, 0, t146 * t51 - t175 * t62 - t31 * t98 + t36 * t84 + t59 * t69, -t146 * t52 + t176 * t69 - t30 * t98 - t35 * t84 + t62 * t67, -t175 * t7 - t176 * t21 - t22 * t59 + t30 * t56 - t31 * t57 + t35 * t51 - t36 * t52 - t67 * t8, t21 * t31 - t22 * t30 + t51 * t8 - t52 * t7 + t62 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, qJ(5) * t121, t67 * t173, 0.2e1 * t175 * t176 - 0.2e1 * t59 * t67, 0, -t175 * t172, 0, 0, t84 * t172, t84 * t173, -0.2e1 * t175 * t30 - 0.2e1 * t176 * t51 - 0.2e1 * t31 * t67 - 0.2e1 * t52 * t59, -0.2e1 * t30 * t52 + 0.2e1 * t31 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, t133, 0, t85, 0, 0, 0, 0, 0, 0, t36, -t35, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t176, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, t5, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, 0, -t36, t146, t8, t7, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, 0, -t59, 0, t31, t30, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
