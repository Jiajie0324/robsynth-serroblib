% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2,theta5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 20:07
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PPRRPR1_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR1_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR1_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRPR1_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRPR1_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRPR1_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 20:05:34
% EndTime: 2019-05-04 20:06:29
% DurationCPUTime: 50.50s
% Computational Cost: add. (378625->1006), mult. (729698->1698), div. (0->0), fcn. (587652->16), ass. (0->732)
t878 = sin(pkin(7));
t888 = sin(qJ(3));
t1005 = qJDD(3) * t888;
t891 = cos(qJ(3));
t892 = qJD(3) ^ 2;
t927 = t891 * t892 + t1005;
t823 = t927 * t878;
t879 = sin(pkin(6));
t884 = cos(pkin(6));
t883 = cos(pkin(7));
t825 = t927 * t883;
t1003 = qJDD(3) * t891;
t845 = -t888 * t892 + t1003;
t876 = sin(pkin(12));
t881 = cos(pkin(12));
t931 = t825 * t881 + t845 * t876;
t742 = -t879 * t823 + t884 * t931;
t780 = t825 * t876 - t845 * t881;
t877 = sin(pkin(11));
t882 = cos(pkin(11));
t687 = t742 * t877 + t780 * t882;
t1061 = t742 * t882 - t780 * t877;
t850 = g(1) * t882 + g(2) * t877;
t849 = g(1) * t877 - t882 * g(2);
t872 = g(3) - qJDD(1);
t928 = t849 * t884 - t872 * t879;
t763 = -t876 * t850 - t881 * t928;
t809 = t849 * t879 + t884 * t872 - qJDD(2);
t1058 = t763 * t883 + t809 * t878;
t875 = sin(pkin(13));
t887 = sin(qJ(4));
t1010 = qJD(3) * t887;
t880 = cos(pkin(13));
t832 = -t880 * qJD(4) + t1010 * t875;
t834 = qJD(4) * t875 + t1010 * t880;
t1028 = t832 * t834;
t890 = cos(qJ(4));
t1004 = qJDD(3) * t890;
t1007 = qJD(3) * qJD(4);
t863 = t887 * t1007;
t842 = -t863 + t1004;
t923 = -t842 - t1028;
t1057 = t875 * t923;
t1056 = t880 * t923;
t886 = sin(qJ(6));
t889 = cos(qJ(6));
t782 = t889 * t832 + t834 * t886;
t784 = -t832 * t886 + t834 * t889;
t1032 = t782 * t784;
t836 = -qJDD(6) + t842;
t895 = -t836 - t1032;
t1055 = t886 * t895;
t1054 = t889 * t895;
t1009 = qJD(3) * t890;
t859 = -qJD(6) + t1009;
t762 = t782 * t859;
t1006 = qJDD(3) * t887;
t997 = t890 * t1007;
t841 = t997 + t1006;
t814 = qJDD(4) * t875 + t841 * t880;
t995 = -t880 * qJDD(4) + t841 * t875;
t894 = qJD(6) * t782 - t814 * t889 + t886 * t995;
t1053 = t762 - t894;
t820 = t832 * t1009;
t769 = -t814 + t820;
t821 = t834 * t1009;
t766 = -t995 - t821;
t996 = t886 * t814 + t889 * t995;
t654 = (qJD(6) + t859) * t784 + t996;
t1052 = t884 * t823 + t879 * t931;
t777 = t782 ^ 2;
t778 = t784 ^ 2;
t1051 = t832 ^ 2;
t831 = t834 ^ 2;
t857 = t859 ^ 2;
t1050 = qJD(4) ^ 2;
t1049 = pkin(4) * t887;
t1048 = pkin(4) * t890;
t764 = -t881 * t850 + t876 * t928;
t667 = t1058 * t891 + t764 * t888;
t668 = -t1058 * t888 + t891 * t764;
t583 = t667 * t888 + t668 * t891;
t1047 = pkin(8) * t583;
t694 = t763 * t876 + t764 * t881;
t1046 = qJ(2) * t694;
t662 = -pkin(3) * t892 + qJDD(3) * pkin(9) + t668;
t721 = -t878 * t763 + t809 * t883;
t612 = t890 * t662 - t887 * t721;
t992 = -qJ(5) * t887 - t1048;
t839 = t992 * qJD(3);
t594 = -pkin(4) * t1050 + qJDD(4) * qJ(5) + t1009 * t839 + t612;
t661 = -qJDD(3) * pkin(3) - t892 * pkin(9) + t667;
t988 = t841 + t997;
t630 = -t988 * qJ(5) + (-t842 + t863) * pkin(4) + t661;
t525 = 0.2e1 * qJD(5) * t834 + t594 * t875 - t880 * t630;
t507 = t923 * pkin(5) + pkin(10) * t769 - t525;
t526 = -0.2e1 * qJD(5) * t832 + t880 * t594 + t875 * t630;
t815 = -pkin(5) * t1009 - pkin(10) * t834;
t516 = -pkin(5) * t1051 - pkin(10) * t995 + t1009 * t815 + t526;
t441 = -t889 * t507 + t516 * t886;
t442 = t886 * t507 + t889 * t516;
t387 = -t441 * t889 + t442 * t886;
t1045 = t387 * t875;
t1044 = t387 * t880;
t718 = t890 * t721;
t593 = qJDD(5) + t718 - t1050 * qJ(5) - qJDD(4) * pkin(4) + (qJD(3) * t839 + t662) * t887;
t563 = pkin(5) * t995 - pkin(10) * t1051 + t815 * t834 + t593;
t1043 = t563 * t886;
t1042 = t563 * t889;
t1041 = t593 * t875;
t1040 = t593 * t880;
t1039 = t661 * t887;
t1038 = t661 * t890;
t703 = t836 - t1032;
t1037 = t703 * t886;
t1036 = t703 * t889;
t770 = t842 - t1028;
t1034 = t770 * t875;
t1033 = t770 * t880;
t1031 = t809 * t877;
t1029 = t809 * t882;
t1027 = t842 * t887;
t858 = t887 * t892 * t890;
t851 = qJDD(4) + t858;
t1026 = t851 * t887;
t852 = qJDD(4) - t858;
t1025 = t852 * t887;
t1024 = t852 * t890;
t1023 = t859 * t886;
t1022 = t859 * t889;
t870 = t887 ^ 2;
t1021 = t870 * t892;
t1020 = t877 * t872;
t1019 = t879 * t809;
t1017 = t879 * t881;
t1016 = t882 * t872;
t1015 = t884 * t809;
t1013 = t888 * t721;
t1012 = t891 * t721;
t871 = t890 ^ 2;
t1011 = t870 + t871;
t1002 = t887 * t1032;
t1001 = t890 * t1032;
t1000 = t887 * t1028;
t999 = t890 * t1028;
t998 = qJDD(3) * t876 * t878;
t388 = t441 * t886 + t889 * t442;
t611 = t662 * t887 + t718;
t529 = t611 * t887 + t890 * t612;
t796 = -t849 * t877 - t882 * t850;
t994 = t888 * t858;
t993 = t891 * t858;
t528 = t611 * t890 - t612 * t887;
t844 = t1011 * qJDD(3);
t867 = t871 * t892;
t847 = t867 + t1021;
t792 = t844 * t891 - t847 * t888;
t991 = pkin(8) * t792 + t528 * t888;
t990 = -pkin(8) * t845 - t1013;
t989 = -pkin(8) * t927 + t1012;
t345 = t388 * t880 - t1045;
t338 = t345 * t887 - t563 * t890;
t339 = t345 * t890 + t563 * t887;
t344 = t388 * t875 + t1044;
t986 = t339 * t888 - t344 * t891;
t305 = -t878 * t338 + t883 * t986;
t315 = t339 * t891 + t344 * t888;
t987 = t305 * t881 + t315 * t876;
t457 = t525 * t875 + t526 * t880;
t430 = t457 * t887 - t593 * t890;
t431 = t457 * t890 + t593 * t887;
t456 = -t525 * t880 + t526 * t875;
t978 = t431 * t888 - t456 * t891;
t362 = -t878 * t430 + t883 * t978;
t389 = t431 * t891 + t456 * t888;
t985 = t362 * t881 + t389 * t876;
t658 = t762 + t894;
t576 = -t654 * t886 + t658 * t889;
t578 = -t654 * t889 - t658 * t886;
t500 = -t576 * t875 + t578 * t880;
t684 = -t777 - t778;
t475 = t500 * t887 - t684 * t890;
t476 = t500 * t890 + t684 * t887;
t498 = t576 * t880 + t578 * t875;
t974 = t476 * t888 - t498 * t891;
t393 = -t878 * t475 + t883 * t974;
t420 = t476 * t891 + t498 * t888;
t984 = t393 * t881 + t420 * t876;
t653 = (qJD(6) - t859) * t784 + t996;
t575 = t1053 * t889 - t653 * t886;
t577 = -t1053 * t886 - t653 * t889;
t499 = -t575 * t875 + t577 * t880;
t722 = -t778 + t777;
t482 = t499 * t887 + t722 * t890;
t483 = t499 * t890 - t722 * t887;
t497 = -t575 * t880 - t577 * t875;
t972 = t483 * t888 + t497 * t891;
t397 = -t878 * t482 + t883 * t972;
t422 = t483 * t891 - t497 * t888;
t983 = t397 * t881 + t422 * t876;
t716 = -t857 - t777;
t631 = t716 * t886 + t1054;
t632 = t716 * t889 - t1055;
t552 = -t631 * t875 + t632 * t880;
t517 = t552 * t887 - t653 * t890;
t518 = t552 * t890 + t653 * t887;
t551 = t631 * t880 + t632 * t875;
t971 = t518 * t888 - t551 * t891;
t418 = -t878 * t517 + t883 * t971;
t462 = t518 * t891 + t551 * t888;
t982 = t418 * t881 + t462 * t876;
t746 = -t778 - t857;
t636 = t746 * t889 + t1037;
t637 = -t746 * t886 + t1036;
t566 = -t636 * t875 + t637 * t880;
t523 = -t1053 * t890 + t566 * t887;
t524 = t1053 * t887 + t566 * t890;
t565 = t636 * t880 + t637 * t875;
t970 = t524 * t888 - t565 * t891;
t424 = -t878 * t523 + t883 * t970;
t465 = t524 * t891 + t565 * t888;
t981 = t424 * t881 + t465 * t876;
t757 = -t778 + t857;
t646 = t757 * t889 + t1055;
t648 = -t757 * t886 + t1054;
t573 = -t646 * t875 + t648 * t880;
t530 = t573 * t887 + t658 * t890;
t532 = t573 * t890 - t658 * t887;
t571 = -t646 * t880 - t648 * t875;
t968 = t532 * t888 + t571 * t891;
t428 = -t878 * t530 + t883 * t968;
t472 = t532 * t891 - t571 * t888;
t980 = t428 * t881 + t472 * t876;
t756 = t777 - t857;
t647 = t756 * t886 - t1036;
t649 = t756 * t889 + t1037;
t574 = -t647 * t875 + t649 * t880;
t531 = t574 * t887 + t654 * t890;
t533 = t574 * t890 - t654 * t887;
t572 = -t647 * t880 - t649 * t875;
t967 = t533 * t888 + t572 * t891;
t429 = -t878 * t531 + t883 * t967;
t473 = t533 * t891 - t572 * t888;
t979 = t429 * t881 + t473 * t876;
t701 = -qJD(6) * t784 - t996;
t642 = -t1023 * t782 + t701 * t889;
t643 = -t1022 * t782 - t701 * t886;
t569 = -t642 * t875 + t643 * t880;
t543 = t569 * t887 + t1001;
t545 = t569 * t890 - t1002;
t567 = -t642 * t880 - t643 * t875;
t965 = t545 * t888 + t567 * t891;
t438 = -t878 * t543 + t883 * t965;
t477 = t545 * t891 - t567 * t888;
t977 = t438 * t881 + t477 * t876;
t644 = -t1022 * t784 - t886 * t894;
t645 = t1023 * t784 - t889 * t894;
t570 = -t644 * t875 + t645 * t880;
t544 = t570 * t887 - t1001;
t546 = t570 * t890 + t1002;
t568 = -t644 * t880 - t645 * t875;
t964 = t546 * t888 + t568 * t891;
t439 = -t878 * t544 + t883 * t964;
t478 = t546 * t891 - t568 * t888;
t976 = t439 * t881 + t478 * t876;
t969 = t529 * t888 - t661 * t891;
t445 = t528 * t878 + t883 * t969;
t495 = t529 * t891 + t661 * t888;
t975 = t445 * t881 + t495 * t876;
t691 = (t782 * t886 + t784 * t889) * t859;
t692 = (t782 * t889 - t784 * t886) * t859;
t623 = -t691 * t875 + t692 * t880;
t608 = t623 * t887 + t836 * t890;
t609 = t623 * t890 - t836 * t887;
t622 = -t691 * t880 - t692 * t875;
t954 = t609 * t888 + t622 * t891;
t480 = -t878 * t608 + t883 * t954;
t534 = t609 * t891 - t622 * t888;
t973 = t480 * t881 + t534 * t876;
t699 = t766 * t880 - t769 * t875;
t760 = t831 + t1051;
t638 = t699 * t887 + t760 * t890;
t639 = t699 * t890 - t760 * t887;
t697 = t766 * t875 + t769 * t880;
t952 = t639 * t888 - t697 * t891;
t536 = -t878 * t638 + t883 * t952;
t590 = t639 * t891 + t697 * t888;
t966 = t536 * t881 + t590 * t876;
t787 = -t867 - t1051;
t711 = t787 * t880 - t1057;
t767 = t821 - t995;
t659 = t711 * t887 + t767 * t890;
t660 = t711 * t890 - t767 * t887;
t710 = t787 * t875 + t1056;
t951 = t660 * t888 - t710 * t891;
t548 = -t878 * t659 + t883 * t951;
t607 = t660 * t891 + t710 * t888;
t963 = t548 * t881 + t607 * t876;
t768 = t814 + t820;
t700 = t767 * t880 - t768 * t875;
t790 = -t831 + t1051;
t663 = t700 * t887 + t790 * t890;
t664 = t700 * t890 - t790 * t887;
t698 = -t767 * t875 - t768 * t880;
t950 = t664 * t888 + t698 * t891;
t550 = -t878 * t663 + t883 * t950;
t601 = t664 * t891 - t698 * t888;
t962 = t550 * t881 + t601 * t876;
t582 = t667 * t891 - t668 * t888;
t554 = -t582 * t883 + t878 * t721;
t961 = t554 * t881 + t583 * t876;
t819 = -t831 - t867;
t735 = -t819 * t875 + t1033;
t673 = t735 * t887 - t768 * t890;
t678 = t735 * t890 + t768 * t887;
t732 = t819 * t880 + t1034;
t949 = t678 * t888 - t732 * t891;
t559 = -t878 * t673 + t883 * t949;
t619 = t678 * t891 + t732 * t888;
t960 = t559 * t881 + t619 * t876;
t818 = -t831 + t867;
t736 = -t818 * t875 + t1056;
t674 = t736 * t887 + t769 * t890;
t679 = t736 * t890 - t769 * t887;
t733 = -t818 * t880 - t1057;
t948 = t679 * t888 + t733 * t891;
t560 = -t878 * t674 + t883 * t948;
t620 = t679 * t891 - t733 * t888;
t959 = t560 * t881 + t620 * t876;
t817 = -t867 + t1051;
t737 = t817 * t880 + t1034;
t675 = t737 * t887 - t766 * t890;
t680 = t737 * t890 + t766 * t887;
t734 = -t817 * t875 + t1033;
t947 = t680 * t888 + t734 * t891;
t561 = -t878 * t675 + t883 * t947;
t621 = t680 * t891 - t734 * t888;
t958 = t561 * t881 + t621 * t876;
t580 = t583 * t883;
t957 = t580 * t881 + t582 * t876;
t749 = -t820 * t880 + t875 * t995;
t706 = t749 * t887 + t999;
t708 = t749 * t890 - t1000;
t748 = t820 * t875 + t880 * t995;
t945 = t708 * t888 + t748 * t891;
t597 = -t878 * t706 + t883 * t945;
t640 = t708 * t891 - t748 * t888;
t956 = t597 * t881 + t640 * t876;
t751 = t814 * t880 + t821 * t875;
t707 = t751 * t887 - t999;
t709 = t751 * t890 + t1000;
t750 = -t814 * t875 + t821 * t880;
t944 = t709 * t888 + t750 * t891;
t598 = -t878 * t707 + t883 * t944;
t641 = t709 * t891 - t750 * t888;
t955 = t598 * t881 + t641 * t876;
t759 = (t832 * t880 - t834 * t875) * t1009;
t829 = t890 * t842;
t738 = t759 * t887 + t829;
t739 = t759 * t890 - t1027;
t758 = (-t832 * t875 - t834 * t880) * t1009;
t937 = t739 * t888 + t758 * t891;
t625 = -t878 * t738 + t883 * t937;
t683 = t739 * t891 - t758 * t888;
t953 = t625 * t881 + t683 * t876;
t840 = 0.2e1 * t997 + t1006;
t843 = -0.2e1 * t863 + t1004;
t788 = t840 * t890 + t843 * t887;
t789 = -t840 * t887 + t843 * t890;
t848 = t867 - t1021;
t935 = t789 * t888 + t848 * t891;
t696 = -t878 * t788 + t883 * t935;
t747 = t789 * t891 - t848 * t888;
t946 = t696 * t881 + t747 * t876;
t838 = t890 * t851;
t856 = -t867 - t1050;
t801 = t856 * t887 + t838;
t805 = t856 * t890 - t1026;
t933 = t805 * t888 + t843 * t891;
t714 = -t878 * t801 + t883 * t933;
t754 = t805 * t891 - t843 * t888;
t943 = t714 * t881 + t754 * t876;
t854 = -t1021 - t1050;
t803 = t854 * t890 - t1025;
t807 = -t854 * t887 - t1024;
t932 = t807 * t888 - t840 * t891;
t715 = -t878 * t803 + t883 * t932;
t755 = t807 * t891 + t840 * t888;
t942 = t715 * t881 + t755 * t876;
t855 = t867 - t1050;
t800 = t855 * t887 + t1024;
t804 = t855 * t890 - t1025;
t925 = -t1003 * t890 + t804 * t888;
t725 = -t878 * t800 + t883 * t925;
t773 = t1004 * t888 + t804 * t891;
t941 = t725 * t881 + t773 * t876;
t853 = -t1021 + t1050;
t802 = t853 * t890 + t1026;
t806 = -t853 * t887 + t838;
t924 = -t1003 * t887 + t806 * t888;
t726 = -t878 * t802 + t883 * t924;
t774 = t1005 * t887 + t806 * t891;
t940 = t726 * t881 + t774 * t876;
t798 = -t887 * t997 + t829;
t810 = -t1007 * t871 - t1027;
t922 = t810 * t888 - t993;
t729 = -t878 * t798 + t883 * t922;
t775 = t810 * t891 + t994;
t939 = t729 * t881 + t775 * t876;
t799 = t988 * t887;
t811 = -t1007 * t870 + t841 * t890;
t921 = t811 * t888 + t993;
t730 = -t878 * t799 + t883 * t921;
t776 = t811 * t891 - t994;
t938 = t730 * t881 + t776 * t876;
t693 = t763 * t881 - t764 * t876;
t929 = t844 * t888 + t847 * t891;
t786 = t929 * t883;
t936 = t786 * t881 + t792 * t876;
t837 = t1011 * t1007;
t926 = -qJDD(4) * t891 + t837 * t888;
t794 = t926 * t883;
t812 = qJDD(4) * t888 + t837 * t891;
t934 = t794 * t881 + t812 * t876;
t826 = t845 * t883;
t930 = t826 * t881 - t876 * t927;
t795 = t849 * t882 - t850 * t877;
t380 = -pkin(5) * t563 + pkin(10) * t388;
t316 = -pkin(10) * t1044 - qJ(5) * t344 - t380 * t875;
t327 = -pkin(4) * t344 - pkin(5) * t387;
t295 = -pkin(9) * t338 + t316 * t890 - t327 * t887;
t302 = -pkin(3) * t338 + pkin(4) * t563 + pkin(10) * t1045 - qJ(5) * t345 - t380 * t880;
t920 = pkin(8) * t315 + t295 * t888 + t302 * t891;
t377 = -pkin(5) * t684 + pkin(10) * t578 + t388;
t381 = -pkin(10) * t576 - t387;
t331 = -qJ(5) * t498 - t377 * t875 + t381 * t880;
t463 = -pkin(4) * t498 - pkin(5) * t576;
t325 = -pkin(9) * t475 + t331 * t890 - t463 * t887;
t328 = -pkin(3) * t475 + pkin(4) * t684 - qJ(5) * t500 - t377 * t880 - t381 * t875;
t919 = pkin(8) * t420 + t325 * t888 + t328 * t891;
t411 = -pkin(4) * t551 - pkin(5) * t631 + t441;
t484 = -pkin(5) * t653 + pkin(10) * t632 - t1042;
t519 = -pkin(10) * t631 + t1043;
t412 = -qJ(5) * t551 - t484 * t875 + t519 * t880;
t351 = -pkin(9) * t517 - t411 * t887 + t412 * t890;
t385 = -pkin(3) * t517 + pkin(4) * t653 - qJ(5) * t552 - t484 * t880 - t519 * t875;
t918 = pkin(8) * t462 + t351 * t888 + t385 * t891;
t413 = -pkin(4) * t565 - pkin(5) * t636 + t442;
t490 = -pkin(5) * t1053 + pkin(10) * t637 + t1043;
t521 = -pkin(10) * t636 + t1042;
t416 = -qJ(5) * t565 - t490 * t875 + t521 * t880;
t353 = -pkin(9) * t523 - t413 * t887 + t416 * t890;
t390 = -pkin(3) * t523 + pkin(4) * t1053 - qJ(5) * t566 - t490 * t880 - t521 * t875;
t917 = pkin(8) * t465 + t353 * t888 + t390 * t891;
t371 = -pkin(9) * t430 + (-qJ(5) * t890 + t1049) * t456;
t382 = -pkin(3) * t430 + pkin(4) * t593 - qJ(5) * t457;
t916 = pkin(8) * t389 + t371 * t888 + t382 * t891;
t452 = -qJ(5) * t697 - t456;
t421 = -pkin(9) * t638 + t1049 * t697 + t452 * t890;
t425 = -pkin(3) * t638 - pkin(4) * t760 - qJ(5) * t699 - t457;
t915 = pkin(8) * t590 + t421 * t888 + t425 * t891;
t508 = -pkin(4) * t710 + t525;
t555 = -qJ(5) * t710 + t1041;
t446 = -pkin(9) * t659 - t508 * t887 + t555 * t890;
t514 = -pkin(3) * t659 - pkin(4) * t767 - qJ(5) * t711 + t1040;
t914 = pkin(8) * t607 + t446 * t888 + t514 * t891;
t513 = -pkin(4) * t732 + t526;
t564 = -qJ(5) * t732 + t1040;
t455 = -pkin(9) * t673 - t513 * t887 + t564 * t890;
t520 = -pkin(3) * t673 + pkin(4) * t768 - qJ(5) * t735 - t1041;
t913 = pkin(8) * t619 + t455 * t888 + t520 * t891;
t591 = -pkin(3) * t801 + t611;
t633 = -pkin(9) * t801 + t1039;
t912 = pkin(8) * t754 + t591 * t891 + t633 * t888;
t592 = -pkin(3) * t803 + t612;
t634 = -pkin(9) * t803 + t1038;
t911 = pkin(8) * t755 + t592 * t891 + t634 * t888;
t293 = -pkin(3) * t344 + pkin(9) * t339 + t316 * t887 + t327 * t890;
t304 = t883 * t338 + t878 * t986;
t277 = -pkin(2) * t304 - t293 * t878 + t883 * t920;
t279 = t891 * t295 - t888 * t302 + (-t304 * t878 - t305 * t883) * pkin(8);
t294 = -t305 * t876 + t315 * t881;
t910 = qJ(2) * t294 + t277 * t881 + t279 * t876;
t323 = -pkin(3) * t498 + pkin(9) * t476 + t331 * t887 + t463 * t890;
t392 = t883 * t475 + t878 * t974;
t292 = -pkin(2) * t392 - t323 * t878 + t883 * t919;
t296 = t891 * t325 - t888 * t328 + (-t392 * t878 - t393 * t883) * pkin(8);
t358 = -t393 * t876 + t420 * t881;
t909 = qJ(2) * t358 + t292 * t881 + t296 * t876;
t347 = pkin(9) * t431 + (-pkin(3) + t992) * t456;
t361 = t883 * t430 + t878 * t978;
t298 = -pkin(2) * t361 - t347 * t878 + t883 * t916;
t308 = t891 * t371 - t888 * t382 + (-t361 * t878 - t362 * t883) * pkin(8);
t332 = -t362 * t876 + t389 * t881;
t908 = qJ(2) * t332 + t298 * t881 + t308 * t876;
t346 = -pkin(3) * t551 + pkin(9) * t518 + t411 * t890 + t412 * t887;
t417 = t883 * t517 + t878 * t971;
t307 = -pkin(2) * t417 - t346 * t878 + t883 * t918;
t317 = t891 * t351 - t888 * t385 + (-t417 * t878 - t418 * t883) * pkin(8);
t384 = -t418 * t876 + t462 * t881;
t907 = qJ(2) * t384 + t307 * t881 + t317 * t876;
t350 = -pkin(3) * t565 + pkin(9) * t524 + t413 * t890 + t416 * t887;
t423 = t883 * t523 + t878 * t970;
t311 = -pkin(2) * t423 - t350 * t878 + t883 * t917;
t322 = t891 * t353 - t888 * t390 + (-t423 * t878 - t424 * t883) * pkin(8);
t391 = -t424 * t876 + t465 * t881;
t906 = qJ(2) * t391 + t311 * t881 + t322 * t876;
t419 = pkin(9) * t639 + t887 * t452 + (-pkin(3) - t1048) * t697;
t535 = t883 * t638 + t878 * t952;
t341 = -pkin(2) * t535 - t419 * t878 + t883 * t915;
t357 = t891 * t421 - t888 * t425 + (-t535 * t878 - t536 * t883) * pkin(8);
t481 = -t536 * t876 + t590 * t881;
t905 = qJ(2) * t481 + t341 * t881 + t357 * t876;
t432 = -pkin(3) * t710 + pkin(9) * t660 + t508 * t890 + t555 * t887;
t547 = t883 * t659 + t878 * t951;
t356 = -pkin(2) * t547 - t432 * t878 + t883 * t914;
t383 = t446 * t891 - t514 * t888 + (-t547 * t878 - t548 * t883) * pkin(8);
t492 = -t548 * t876 + t607 * t881;
t904 = qJ(2) * t492 + t356 * t881 + t383 * t876;
t444 = -t528 * t883 + t878 * t969;
t496 = -pkin(3) * t661 + pkin(9) * t529;
t893 = pkin(8) * t495 - (-pkin(3) * t891 - pkin(9) * t888) * t528;
t367 = -pkin(2) * t444 - t496 * t878 + t883 * t893;
t370 = -(pkin(3) * t888 - pkin(9) * t891) * t528 + (-t444 * t878 - t445 * t883) * pkin(8);
t406 = -t445 * t876 + t495 * t881;
t903 = qJ(2) * t406 + t367 * t881 + t370 * t876;
t443 = -pkin(3) * t732 + pkin(9) * t678 + t513 * t890 + t564 * t887;
t556 = t883 * t673 + t878 * t949;
t369 = -pkin(2) * t556 - t443 * t878 + t883 * t913;
t386 = t455 * t891 - t520 * t888 + (-t556 * t878 - t559 * t883) * pkin(8);
t502 = -t559 * t876 + t619 * t881;
t902 = qJ(2) * t502 + t369 * t881 + t386 * t876;
t522 = pkin(3) * t847 + pkin(9) * t844 + t529;
t785 = t929 * t878;
t451 = -pkin(2) * t785 - t878 * t522 + t883 * t991;
t510 = t891 * t528 + (-t785 * t878 - t786 * t883) * pkin(8);
t731 = -t786 * t876 + t792 * t881;
t901 = qJ(2) * t731 + t451 * t881 + t510 * t876;
t629 = pkin(3) * t843 + pkin(9) * t805 - t1038;
t712 = t883 * t801 + t878 * t933;
t470 = -pkin(2) * t712 - t629 * t878 + t883 * t912;
t493 = -t591 * t888 + t633 * t891 + (-t712 * t878 - t714 * t883) * pkin(8);
t651 = -t714 * t876 + t754 * t881;
t900 = qJ(2) * t651 + t470 * t881 + t493 * t876;
t628 = -pkin(3) * t840 + pkin(9) * t807 + t1039;
t713 = t883 * t803 + t878 * t932;
t471 = -pkin(2) * t713 - t628 * t878 + t883 * t911;
t494 = -t592 * t888 + t634 * t891 + (-t713 * t878 - t715 * t883) * pkin(8);
t652 = -t715 * t876 + t755 * t881;
t899 = qJ(2) * t652 + t471 * t881 + t494 * t876;
t553 = -t582 * t878 - t883 * t721;
t474 = (-t553 * t878 - t554 * t883) * pkin(8);
t487 = -t554 * t876 + t583 * t881;
t488 = -pkin(2) * t553 + t1047 * t883;
t898 = qJ(2) * t487 + t474 * t876 + t488 * t881;
t587 = pkin(2) * t823 + t878 * t668 + t883 * t990;
t670 = -t1012 + (t823 * t878 + t825 * t883) * pkin(8);
t897 = qJ(2) * t780 + t587 * t881 + t670 * t876;
t824 = t845 * t878;
t588 = -pkin(2) * t824 + t878 * t667 + t883 * t989;
t669 = -t1013 + (-t824 * t878 - t826 * t883) * pkin(8);
t781 = -t826 * t876 - t881 * t927;
t896 = qJ(2) * t781 + t588 * t881 + t669 * t876;
t816 = (-t878 * t881 * t884 - t879 * t883) * qJDD(3);
t793 = t926 * t878;
t745 = -t794 * t876 + t812 * t881;
t744 = -t879 * t824 + t884 * t930;
t741 = t884 * t824 + t879 * t930;
t728 = t883 * t799 + t878 * t921;
t727 = t883 * t798 + t878 * t922;
t724 = t883 * t802 + t878 * t924;
t723 = t883 * t800 + t878 * t925;
t720 = t1015 * t881 + t763 * t879;
t719 = -t1015 * t876 + t764 * t879;
t695 = t883 * t788 + t878 * t935;
t690 = t694 * t884;
t689 = -t879 * t793 + t884 * t934;
t688 = -t744 * t877 + t781 * t882;
t686 = t744 * t882 + t781 * t877;
t682 = -t879 * t785 + t884 * t936;
t681 = t884 * t785 + t879 * t936;
t677 = -t730 * t876 + t776 * t881;
t676 = -t729 * t876 + t775 * t881;
t672 = -t726 * t876 + t774 * t881;
t671 = -t725 * t876 + t773 * t881;
t666 = -t693 * t884 + t1019;
t665 = -t693 * t879 - t1015;
t635 = -t696 * t876 + t747 * t881;
t624 = t883 * t738 + t878 * t937;
t618 = -t682 * t877 + t731 * t882;
t617 = t682 * t882 + t731 * t877;
t616 = -t879 * t728 + t884 * t938;
t615 = -t879 * t727 + t884 * t939;
t614 = -t879 * t724 + t884 * t940;
t613 = -t879 * t723 + t884 * t941;
t606 = -t879 * t713 + t884 * t942;
t605 = -t879 * t712 + t884 * t943;
t604 = t884 * t713 + t879 * t942;
t603 = t884 * t712 + t879 * t943;
t602 = -pkin(1) * t665 + t1046 * t884;
t600 = -t666 * t877 + t694 * t882;
t599 = t666 * t882 + t694 * t877;
t596 = t883 * t707 + t878 * t944;
t595 = t883 * t706 + t878 * t945;
t586 = pkin(2) * t826 - t883 * t667 + t878 * t989;
t585 = -pkin(2) * t825 - t883 * t668 + t878 * t990;
t584 = -t879 * t695 + t884 * t946;
t581 = (-t665 * t879 - t666 * t884) * qJ(2);
t579 = t583 * t878;
t562 = -t625 * t876 + t683 * t881;
t558 = t883 * t675 + t878 * t947;
t557 = t883 * t674 + t878 * t948;
t549 = t883 * t663 + t878 * t950;
t542 = -t606 * t877 + t652 * t882;
t541 = -t605 * t877 + t651 * t882;
t540 = t606 * t882 + t652 * t877;
t539 = t605 * t882 + t651 * t877;
t538 = -t598 * t876 + t641 * t881;
t537 = -t597 * t876 + t640 * t881;
t512 = -t587 * t876 + t670 * t881 + (t1052 * t879 + t742 * t884) * qJ(2);
t511 = -t588 * t876 + t669 * t881 + (-t741 * t879 - t744 * t884) * qJ(2);
t509 = -t879 * t624 + t884 * t953;
t504 = -t561 * t876 + t621 * t881;
t503 = -t560 * t876 + t620 * t881;
t501 = -t580 * t876 + t582 * t881;
t491 = -t550 * t876 + t601 * t881;
t489 = pkin(2) * t554 + t1047 * t878;
t486 = -t879 * t596 + t884 * t955;
t485 = -t879 * t595 + t884 * t956;
t479 = t883 * t608 + t878 * t954;
t469 = pkin(2) * t715 + t628 * t883 + t878 * t911;
t468 = pkin(2) * t714 + t629 * t883 + t878 * t912;
t467 = pkin(1) * t1052 - t585 * t879 + t884 * t897;
t466 = -pkin(1) * t741 - t586 * t879 + t884 * t896;
t464 = -t879 * t579 + t884 * t957;
t461 = -t879 * t558 + t884 * t958;
t460 = -t879 * t557 + t884 * t959;
t459 = -t879 * t556 + t884 * t960;
t458 = t884 * t556 + t879 * t960;
t454 = -t879 * t553 + t884 * t961;
t453 = t884 * t553 + t879 * t961;
t450 = pkin(2) * t786 + t883 * t522 + t878 * t991;
t449 = -t879 * t547 + t884 * t963;
t448 = t884 * t547 + t879 * t963;
t447 = -t879 * t549 + t884 * t962;
t437 = t883 * t544 + t878 * t964;
t436 = t883 * t543 + t878 * t965;
t435 = -t879 * t535 + t884 * t966;
t434 = t884 * t535 + t879 * t966;
t433 = -t480 * t876 + t534 * t881;
t427 = t883 * t531 + t878 * t967;
t426 = t883 * t530 + t878 * t968;
t415 = -t459 * t877 + t502 * t882;
t414 = t459 * t882 + t502 * t877;
t410 = -t454 * t877 + t487 * t882;
t409 = t454 * t882 + t487 * t877;
t408 = -t449 * t877 + t492 * t882;
t407 = t449 * t882 + t492 * t877;
t405 = -t435 * t877 + t481 * t882;
t404 = t435 * t882 + t481 * t877;
t403 = -t439 * t876 + t478 * t881;
t402 = -t438 * t876 + t477 * t881;
t401 = -t879 * t479 + t884 * t973;
t400 = -t451 * t876 + t510 * t881 + (-t681 * t879 - t682 * t884) * qJ(2);
t399 = -t471 * t876 + t494 * t881 + (-t604 * t879 - t606 * t884) * qJ(2);
t398 = -t470 * t876 + t493 * t881 + (-t603 * t879 - t605 * t884) * qJ(2);
t396 = t883 * t482 + t878 * t972;
t395 = -t429 * t876 + t473 * t881;
t394 = -t428 * t876 + t472 * t881;
t379 = -pkin(1) * t604 - t469 * t879 + t884 * t899;
t378 = -pkin(1) * t603 - t468 * t879 + t884 * t900;
t376 = -t879 * t444 + t884 * t975;
t375 = t884 * t444 + t879 * t975;
t374 = -pkin(1) * t681 - t450 * t879 + t884 * t901;
t373 = -t879 * t437 + t884 * t976;
t372 = -t879 * t436 + t884 * t977;
t368 = pkin(2) * t559 + t443 * t883 + t878 * t913;
t366 = pkin(2) * t445 + t496 * t883 + t878 * t893;
t365 = -t879 * t427 + t884 * t979;
t364 = -t879 * t426 + t884 * t980;
t363 = -t397 * t876 + t422 * t881;
t360 = -t879 * t423 + t884 * t981;
t359 = t884 * t423 + t879 * t981;
t355 = pkin(2) * t548 + t432 * t883 + t878 * t914;
t354 = t474 * t881 - t488 * t876 + (-t453 * t879 - t454 * t884) * qJ(2);
t352 = -pkin(1) * t453 - t489 * t879 + t884 * t898;
t349 = -t879 * t417 + t884 * t982;
t348 = t884 * t417 + t879 * t982;
t343 = -t376 * t877 + t406 * t882;
t342 = t376 * t882 + t406 * t877;
t340 = pkin(2) * t536 + t419 * t883 + t878 * t915;
t337 = -t879 * t396 + t884 * t983;
t336 = -t879 * t392 + t884 * t984;
t335 = t884 * t392 + t879 * t984;
t334 = -t360 * t877 + t391 * t882;
t333 = t360 * t882 + t391 * t877;
t330 = -t349 * t877 + t384 * t882;
t329 = t349 * t882 + t384 * t877;
t326 = -t369 * t876 + t386 * t881 + (-t458 * t879 - t459 * t884) * qJ(2);
t324 = -t356 * t876 + t383 * t881 + (-t448 * t879 - t449 * t884) * qJ(2);
t321 = -t336 * t877 + t358 * t882;
t320 = t336 * t882 + t358 * t877;
t319 = -t879 * t361 + t884 * t985;
t318 = t884 * t361 + t879 * t985;
t314 = -pkin(1) * t458 - t368 * t879 + t884 * t902;
t313 = -t341 * t876 + t357 * t881 + (-t434 * t879 - t435 * t884) * qJ(2);
t312 = -pkin(1) * t448 - t355 * t879 + t884 * t904;
t310 = pkin(2) * t424 + t350 * t883 + t878 * t917;
t309 = -t367 * t876 + t370 * t881 + (-t375 * t879 - t376 * t884) * qJ(2);
t306 = pkin(2) * t418 + t346 * t883 + t878 * t918;
t303 = -pkin(1) * t375 - t366 * t879 + t884 * t903;
t301 = -t319 * t877 + t332 * t882;
t300 = t319 * t882 + t332 * t877;
t299 = -pkin(1) * t434 - t340 * t879 + t884 * t905;
t297 = pkin(2) * t362 + t347 * t883 + t878 * t916;
t291 = pkin(2) * t393 + t323 * t883 + t878 * t919;
t290 = -t311 * t876 + t322 * t881 + (-t359 * t879 - t360 * t884) * qJ(2);
t289 = -t307 * t876 + t317 * t881 + (-t348 * t879 - t349 * t884) * qJ(2);
t288 = -pkin(1) * t359 - t310 * t879 + t884 * t906;
t287 = -t879 * t304 + t884 * t987;
t286 = t884 * t304 + t879 * t987;
t285 = -pkin(1) * t348 - t306 * t879 + t884 * t907;
t284 = -t298 * t876 + t308 * t881 + (-t318 * t879 - t319 * t884) * qJ(2);
t283 = -t292 * t876 + t296 * t881 + (-t335 * t879 - t336 * t884) * qJ(2);
t282 = -pkin(1) * t318 - t297 * t879 + t884 * t908;
t281 = -t287 * t877 + t294 * t882;
t280 = t287 * t882 + t294 * t877;
t278 = -pkin(1) * t335 - t291 * t879 + t884 * t909;
t276 = pkin(2) * t305 + t293 * t883 + t878 * t920;
t275 = -t277 * t876 + t279 * t881 + (-t286 * t879 - t287 * t884) * qJ(2);
t274 = -pkin(1) * t286 - t276 * t879 + t884 * t910;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t796, 0, 0, 0, 0, 0, 0, 0, 0, 0, t600, 0, 0, 0, 0, 0, 0, t688, t687, 0, t410, 0, 0, 0, 0, 0, 0, t541, t542, t618, t343, 0, 0, 0, 0, 0, 0, t408, t415, t405, t301, 0, 0, 0, 0, 0, 0, t330, t334, t321, t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t795, 0, 0, 0, 0, 0, 0, 0, 0, 0, t599, 0, 0, 0, 0, 0, 0, t686, -t1061, 0, t409, 0, 0, 0, 0, 0, 0, t539, t540, t617, t342, 0, 0, 0, 0, 0, 0, t407, t414, t404, t300, 0, 0, 0, 0, 0, 0, t329, t333, t320, t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t872, 0, 0, 0, 0, 0, 0, 0, 0, 0, t665, 0, 0, 0, 0, 0, 0, t741, -t1052, 0, t453, 0, 0, 0, 0, 0, 0, t603, t604, t681, t375, 0, 0, 0, 0, 0, 0, t448, t458, t434, t318, 0, 0, 0, 0, 0, 0, t348, t359, t335, t286; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1020, -t1016, -t795, -qJ(1) * t795, 0, 0, 0, 0, 0, 0, -t1029 * t876 - t720 * t877, -t1029 * t881 - t719 * t877, -t690 * t877 + t693 * t882, -qJ(1) * t599 + t581 * t882 - t602 * t877, 0, 0, -t687, 0, t688, -t816 * t877 + t882 * t998, -qJ(1) * t686 - t466 * t877 + t511 * t882, qJ(1) * t1061 - t467 * t877 + t512 * t882, -t464 * t877 + t501 * t882, -qJ(1) * t409 - t352 * t877 + t354 * t882, -t616 * t877 + t677 * t882, -t584 * t877 + t635 * t882, -t614 * t877 + t672 * t882, -t615 * t877 + t676 * t882, -t613 * t877 + t671 * t882, -t689 * t877 + t745 * t882, -qJ(1) * t539 - t378 * t877 + t398 * t882, -qJ(1) * t540 - t379 * t877 + t399 * t882, -qJ(1) * t617 - t374 * t877 + t400 * t882, -qJ(1) * t342 - t303 * t877 + t309 * t882, -t486 * t877 + t538 * t882, -t447 * t877 + t491 * t882, -t460 * t877 + t503 * t882, -t485 * t877 + t537 * t882, -t461 * t877 + t504 * t882, -t509 * t877 + t562 * t882, -qJ(1) * t407 - t312 * t877 + t324 * t882, -qJ(1) * t414 - t314 * t877 + t326 * t882, -qJ(1) * t404 - t299 * t877 + t313 * t882, -qJ(1) * t300 - t282 * t877 + t284 * t882, -t373 * t877 + t403 * t882, -t337 * t877 + t363 * t882, -t364 * t877 + t394 * t882, -t372 * t877 + t402 * t882, -t365 * t877 + t395 * t882, -t401 * t877 + t433 * t882, -qJ(1) * t329 - t285 * t877 + t289 * t882, -qJ(1) * t333 - t288 * t877 + t290 * t882, -qJ(1) * t320 - t278 * t877 + t283 * t882, -qJ(1) * t280 - t274 * t877 + t275 * t882; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1016, -t1020, t796, qJ(1) * t796, 0, 0, 0, 0, 0, 0, -t1031 * t876 + t720 * t882, -t1031 * t881 + t719 * t882, t690 * t882 + t693 * t877, qJ(1) * t600 + t581 * t877 + t602 * t882, 0, 0, t1061, 0, t686, t816 * t882 + t877 * t998, qJ(1) * t688 + t466 * t882 + t511 * t877, qJ(1) * t687 + t467 * t882 + t512 * t877, t464 * t882 + t501 * t877, qJ(1) * t410 + t352 * t882 + t354 * t877, t616 * t882 + t677 * t877, t584 * t882 + t635 * t877, t614 * t882 + t672 * t877, t615 * t882 + t676 * t877, t613 * t882 + t671 * t877, t689 * t882 + t745 * t877, qJ(1) * t541 + t378 * t882 + t398 * t877, qJ(1) * t542 + t379 * t882 + t399 * t877, qJ(1) * t618 + t374 * t882 + t400 * t877, qJ(1) * t343 + t303 * t882 + t309 * t877, t486 * t882 + t538 * t877, t447 * t882 + t491 * t877, t460 * t882 + t503 * t877, t485 * t882 + t537 * t877, t461 * t882 + t504 * t877, t509 * t882 + t562 * t877, qJ(1) * t408 + t312 * t882 + t324 * t877, qJ(1) * t415 + t314 * t882 + t326 * t877, qJ(1) * t405 + t299 * t882 + t313 * t877, qJ(1) * t301 + t282 * t882 + t284 * t877, t373 * t882 + t403 * t877, t337 * t882 + t363 * t877, t364 * t882 + t394 * t877, t372 * t882 + t402 * t877, t365 * t882 + t395 * t877, t401 * t882 + t433 * t877, qJ(1) * t330 + t285 * t882 + t289 * t877, qJ(1) * t334 + t288 * t882 + t290 * t877, qJ(1) * t321 + t278 * t882 + t283 * t877, qJ(1) * t281 + t274 * t882 + t275 * t877; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t849, t850, 0, 0, 0, 0, 0, 0, 0, 0, t1017 * t809 - t763 * t884, -t1019 * t876 - t764 * t884, t694 * t879, pkin(1) * t666 + t1046 * t879, 0, 0, t1052, 0, t741, (-t1017 * t878 + t883 * t884) * qJDD(3), pkin(1) * t744 + t586 * t884 + t879 * t896, -pkin(1) * t742 + t585 * t884 + t879 * t897, t884 * t579 + t879 * t957, pkin(1) * t454 + t489 * t884 + t879 * t898, t884 * t728 + t879 * t938, t884 * t695 + t879 * t946, t884 * t724 + t879 * t940, t884 * t727 + t879 * t939, t884 * t723 + t879 * t941, t884 * t793 + t879 * t934, pkin(1) * t605 + t468 * t884 + t879 * t900, pkin(1) * t606 + t469 * t884 + t879 * t899, pkin(1) * t682 + t450 * t884 + t879 * t901, pkin(1) * t376 + t366 * t884 + t879 * t903, t884 * t596 + t879 * t955, t884 * t549 + t879 * t962, t884 * t557 + t879 * t959, t884 * t595 + t879 * t956, t884 * t558 + t879 * t958, t884 * t624 + t879 * t953, pkin(1) * t449 + t355 * t884 + t879 * t904, pkin(1) * t459 + t368 * t884 + t879 * t902, pkin(1) * t435 + t340 * t884 + t879 * t905, pkin(1) * t319 + t297 * t884 + t879 * t908, t884 * t437 + t879 * t976, t884 * t396 + t879 * t983, t884 * t426 + t879 * t980, t884 * t436 + t879 * t977, t884 * t427 + t879 * t979, t884 * t479 + t879 * t973, pkin(1) * t349 + t306 * t884 + t879 * t907, pkin(1) * t360 + t310 * t884 + t879 * t906, pkin(1) * t336 + t291 * t884 + t879 * t909, pkin(1) * t287 + t276 * t884 + t879 * t910;];
tauB_reg  = t1;
