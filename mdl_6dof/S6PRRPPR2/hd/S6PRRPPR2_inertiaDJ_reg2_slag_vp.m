% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRPPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR2_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:06:31
% EndTime: 2019-03-08 21:06:37
% DurationCPUTime: 1.75s
% Computational Cost: add. (1939->182), mult. (4779->332), div. (0->0), fcn. (4695->10), ass. (0->113)
t116 = cos(pkin(11));
t56 = sin(pkin(11));
t60 = sin(qJ(3));
t63 = cos(qJ(3));
t44 = t116 * t60 + t56 * t63;
t61 = sin(qJ(2));
t115 = qJD(2) * t61;
t111 = t60 * qJD(3);
t99 = t116 * t63;
t39 = qJD(3) * t99 - t56 * t111;
t57 = sin(pkin(6));
t64 = cos(qJ(2));
t134 = (t44 * t115 - t39 * t64) * t57;
t38 = t44 * qJD(3);
t43 = t56 * t60 - t99;
t133 = (t43 * t115 - t38 * t64) * t57;
t129 = pkin(4) + pkin(9);
t105 = pkin(3) * t111;
t75 = -qJ(5) * t39 - qJD(5) * t44 + t105;
t118 = -qJ(4) - pkin(8);
t33 = t44 * t118;
t77 = t44 * pkin(5) - t33;
t132 = -qJD(6) * t77 - t129 * t38 - t75;
t59 = sin(qJ(6));
t54 = t59 ^ 2;
t62 = cos(qJ(6));
t55 = t62 ^ 2;
t97 = (t54 - t55) * qJD(6);
t114 = qJD(2) * t64;
t103 = t57 * t114;
t120 = t57 * t61;
t58 = cos(pkin(6));
t40 = -t60 * t120 + t58 * t63;
t31 = qJD(3) * t40 + t63 * t103;
t41 = t63 * t120 + t58 * t60;
t32 = -qJD(3) * t41 - t60 * t103;
t11 = -t116 * t32 + t31 * t56;
t24 = -t116 * t40 + t41 * t56;
t12 = t116 * t31 + t56 * t32;
t25 = t116 * t41 + t56 * t40;
t7 = t25 * t12;
t96 = t57 ^ 2 * t61 * t114;
t131 = 0.2e1 * t24 * t11 + 0.2e1 * t7 - 0.2e1 * t96;
t130 = 0.2e1 * qJD(5);
t128 = t38 * t54;
t127 = t38 * t59;
t126 = t38 * t62;
t125 = t43 * t38;
t124 = t43 * t59;
t123 = t43 * t62;
t37 = t55 * t38;
t119 = t57 * t64;
t113 = qJD(6) * t59;
t112 = qJD(6) * t62;
t110 = t63 * qJD(3);
t109 = 0.2e1 * t125;
t30 = 0.2e1 * t44 * t39;
t108 = -0.2e1 * pkin(2) * qJD(3);
t107 = t59 * t126;
t49 = pkin(3) * t56 + qJ(5);
t106 = t49 * t130;
t104 = t64 * t111;
t47 = t57 * t115;
t102 = t60 * t110;
t101 = t59 * t112;
t52 = -pkin(3) * t63 - pkin(2);
t98 = qJD(3) * t118;
t42 = t43 ^ 2;
t95 = t42 * t101;
t89 = -qJ(5) * t44 + t52;
t19 = t129 * t43 + t89;
t8 = -t59 * t19 + t62 * t77;
t9 = t62 * t19 + t59 * t77;
t94 = -t59 * t8 + t62 * t9;
t51 = -t116 * pkin(3) - pkin(4);
t17 = t59 * t119 + t62 * t24;
t88 = t62 * t119 - t59 * t24;
t93 = -t17 * t59 - t62 * t88;
t78 = qJD(4) * t63 + t60 * t98;
t79 = -qJD(4) * t60 + t63 * t98;
t21 = -t116 * t79 + t56 * t78;
t22 = t116 * t78 + t56 * t79;
t34 = t43 * t118;
t92 = -t21 * t33 + t22 * t34;
t91 = qJD(5) * t25 + t12 * t49;
t90 = -qJD(5) * t43 - t38 * t49;
t85 = t43 * t112 + t127;
t84 = t43 * t113 - t126;
t83 = t44 * t112 + t39 * t59;
t82 = t44 * t113 - t62 * t39;
t80 = -0.2e1 * t38 * t44 - 0.2e1 * t39 * t43;
t14 = -t38 * pkin(5) + t22;
t48 = -pkin(9) + t51;
t76 = t14 + (t43 * t49 - t44 * t48) * qJD(6);
t74 = -t11 * t33 + t12 * t34 + t24 * t21 + t25 * t22;
t73 = t11 * t44 - t12 * t43 + t24 * t39 - t25 * t38;
t23 = -t43 * pkin(5) + t34;
t71 = -qJD(6) * t23 - t39 * t48 - t90;
t65 = t39 * pkin(5) + t21;
t3 = t19 * t113 + t132 * t62 - t59 * t65;
t4 = -t19 * t112 + t132 * t59 + t62 * t65;
t1 = qJD(6) * t94 - t3 * t59 + t4 * t62;
t70 = -t3 * t62 - t4 * t59 + (-t59 * t9 - t62 * t8) * qJD(6);
t5 = qJD(6) * t88 + t62 * t11 - t59 * t47;
t6 = qJD(6) * t17 + t59 * t11 + t62 * t47;
t69 = -t5 * t59 + t6 * t62 + (-t17 * t62 + t59 * t88) * qJD(6);
t2 = qJD(6) * t93 + t5 * t62 + t59 * t6;
t68 = 0.2e1 * t21 * t44 - 0.2e1 * t22 * t43 - 0.2e1 * t33 * t39 - 0.2e1 * t34 * t38;
t67 = t31 * t63 - t32 * t60 + (-t40 * t63 - t41 * t60) * qJD(3);
t28 = pkin(4) * t43 + t89;
t16 = pkin(4) * t38 + t75;
t15 = -t43 * t97 + t107;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t41 * t31 + 0.2e1 * t40 * t32 - 0.2e1 * t96, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t17 * t5 - 0.2e1 * t6 * t88 + 0.2e1 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t103, 0, 0, 0, 0, 0, 0, 0, 0 (-t63 * t115 - t104) * t57 (-t64 * t110 + t60 * t115) * t57, t67, -pkin(2) * t47 + pkin(8) * t67, 0, 0, 0, 0, 0, 0, t133, t134, t73 (-pkin(3) * t104 + t52 * t115) * t57 + t74, 0, 0, 0, 0, 0, 0, t73, -t133, -t134 (t28 * t115 - t16 * t64) * t57 + t74, 0, 0, 0, 0, 0, 0, -t12 * t123 + t17 * t39 + t25 * t84 + t44 * t5, t12 * t124 + t25 * t85 + t39 * t88 - t44 * t6, t38 * t93 + t43 * t69, t12 * t23 + t14 * t25 + t17 * t4 + t3 * t88 + t5 * t8 + t6 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t102, 0.2e1 * (-t60 ^ 2 + t63 ^ 2) * qJD(3), 0, -0.2e1 * t102, 0, 0, t60 * t108, t63 * t108, 0, 0, t30, t80, 0, t109, 0, 0, 0.2e1 * t43 * t105 + 0.2e1 * t38 * t52, 0.2e1 * t44 * t105 + 0.2e1 * t39 * t52, t68, 0.2e1 * t52 * t105 + 0.2e1 * t92, 0, 0, 0, t30, t80, t109, t68, -0.2e1 * t16 * t43 - 0.2e1 * t28 * t38, -0.2e1 * t16 * t44 - 0.2e1 * t28 * t39, 0.2e1 * t16 * t28 + 0.2e1 * t92, 0.2e1 * t54 * t125 + 0.2e1 * t95, 0.4e1 * t43 * t107 - 0.2e1 * t42 * t97, 0.2e1 * t127 * t44 + 0.2e1 * t43 * t83, 0.2e1 * t37 * t43 - 0.2e1 * t95, 0.2e1 * t126 * t44 - 0.2e1 * t43 * t82, t30, -0.2e1 * t123 * t14 + 0.2e1 * t23 * t84 + 0.2e1 * t39 * t8 + 0.2e1 * t4 * t44, 0.2e1 * t124 * t14 + 0.2e1 * t23 * t85 + 0.2e1 * t3 * t44 - 0.2e1 * t39 * t9, 0.2e1 * t38 * t94 + 0.2e1 * t43 * t70, 0.2e1 * t14 * t23 - 0.2e1 * t3 * t9 + 0.2e1 * t4 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, -t31, 0, 0, 0, 0, 0, 0, 0, 0, -t11, -t12, 0 (-t116 * t11 + t12 * t56) * pkin(3), 0, 0, 0, 0, 0, 0, 0, t11, t12, t11 * t51 + t91, 0, 0, 0, 0, 0, 0, t112 * t25 + t12 * t59, -t113 * t25 + t12 * t62, -t2, t2 * t48 + t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, 0, -t111, 0, -pkin(8) * t110, pkin(8) * t111, 0, 0, 0, 0, t39, 0, -t38, 0, -t21, -t22 (-t116 * t39 - t38 * t56) * pkin(3) (-t116 * t21 + t22 * t56) * pkin(3), 0, -t39, t38, 0, 0, 0, t39 * t51 + t90, t21, t22, qJD(5) * t34 + t21 * t51 + t22 * t49, t15, -0.4e1 * t43 * t101 - t128 + t37, -t82, -t15, -t83, 0, t59 * t76 - t62 * t71, t59 * t71 + t62 * t76, -t1, qJD(5) * t23 + t1 * t48 + t14 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, t106, -0.2e1 * t101, 0.2e1 * t97, 0, 0.2e1 * t101, 0, 0, 0.2e1 * t59 * qJD(5) + 0.2e1 * t112 * t49, 0.2e1 * qJD(5) * t62 - 0.2e1 * t113 * t49, 0, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t39, 0, t105, 0, 0, 0, 0, 0, 0, 0, -t38, -t39, t16, 0, 0, 0, 0, 0, 0, -t83, t82, t37 + t128, t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, 0, t21, 0, 0, 0, 0, 0, 0, -t82, -t83, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, -t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, -t84, t39, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, 0, -t112, 0, -t48 * t113, -t48 * t112, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112, t113, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, -t112, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
