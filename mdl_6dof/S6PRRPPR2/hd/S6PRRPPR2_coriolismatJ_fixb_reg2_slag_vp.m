% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:06:39
% EndTime: 2019-03-08 21:06:54
% DurationCPUTime: 11.25s
% Computational Cost: add. (7648->470), mult. (17137->646), div. (0->0), fcn. (19834->10), ass. (0->367)
t372 = sin(qJ(6));
t373 = sin(qJ(3));
t593 = cos(pkin(11));
t458 = t593 * t373;
t370 = sin(pkin(11));
t376 = cos(qJ(3));
t558 = t370 * t376;
t334 = t458 + t558;
t371 = sin(pkin(6));
t377 = cos(qJ(2));
t556 = t371 * t377;
t274 = t334 * t556;
t375 = cos(qJ(6));
t550 = t375 * t274;
t374 = sin(qJ(2));
t557 = t371 * t374;
t234 = -t372 * t557 + t550;
t553 = t372 * t274;
t235 = t375 * t557 + t553;
t602 = t375 / 0.2e1;
t542 = t235 * t372 / 0.2e1 + t234 * t602;
t594 = cos(pkin(6));
t313 = t373 * t557 - t376 * t594;
t314 = t373 * t594 + t376 * t557;
t230 = -t313 * t593 - t370 * t314;
t174 = t230 * t372 + t375 * t556;
t173 = -t230 * t375 + t372 * t556;
t612 = t173 / 0.2e1;
t633 = (t174 * t602 + t372 * t612) * t334;
t35 = t633 - t542;
t656 = qJD(1) * t35;
t34 = t633 + t542;
t655 = qJD(2) * t34;
t654 = qJD(2) * t35;
t598 = -qJ(4) - pkin(8);
t347 = t598 * t373;
t268 = t593 * t347 + t558 * t598;
t223 = -t334 * pkin(5) + t268;
t582 = t223 * t372;
t653 = t223 * t375;
t359 = t593 * t376;
t559 = t370 * t373;
t332 = -t359 + t559;
t601 = t332 * pkin(5);
t560 = t370 * t347;
t632 = t598 * t359;
t642 = -t632 + t560;
t648 = t642 - t601;
t652 = t372 * t648;
t651 = t375 * t648;
t361 = -pkin(3) * t593 - pkin(4);
t357 = -pkin(9) + t361;
t650 = t542 * t357;
t610 = t230 / 0.2e1;
t607 = -t332 / 0.2e1;
t293 = t593 * t314;
t561 = t370 * t313;
t630 = t293 - t561;
t167 = t630 * t607;
t579 = t230 * t334;
t631 = t167 - t579 / 0.2e1 + t557 / 0.2e1;
t562 = t371 ^ 2 * t374;
t343 = t556 * t559;
t446 = t593 * t556;
t418 = t376 * t446;
t275 = t418 - t343;
t575 = t630 * t275;
t72 = t230 * t274 + t377 * t562 - t575;
t645 = t72 * qJD(1);
t649 = t631 * qJD(4) - t645;
t468 = -t557 / 0.2e1;
t403 = t468 + t167;
t386 = t579 / 0.2e1 - t403;
t647 = -qJD(4) * t386 + t645;
t646 = t630 / 0.2e1;
t400 = -t632 / 0.2e1;
t471 = t630 * t602;
t462 = t646 - t630 / 0.2e1;
t445 = t462 * t334;
t620 = t445 * qJD(3);
t644 = (t274 * t334 - t275 * t332) * qJD(2) + t620;
t243 = t372 * t334;
t506 = t243 * qJD(2);
t517 = qJD(6) * t372;
t643 = t506 + t517;
t614 = t334 ^ 2;
t615 = t332 ^ 2;
t626 = t615 - t614;
t641 = t626 * qJD(2);
t640 = t626 * qJD(3);
t627 = t614 + t615;
t639 = t627 * qJD(2);
t638 = t631 * qJD(2);
t636 = t332 * t610 - t445;
t635 = qJD(2) * t72;
t634 = qJD(4) * t627;
t246 = t375 * t332;
t456 = 0.2e1 * t372 * t246;
t362 = -pkin(3) * t376 - pkin(2);
t412 = -qJ(5) * t334 + t362;
t613 = pkin(4) + pkin(9);
t175 = t332 * t613 + t412;
t98 = t175 * t372 + t653;
t99 = t375 * t175 - t582;
t30 = (t372 * t98 + t99 * t375) * t334;
t289 = t293 / 0.2e1;
t608 = -t293 / 0.2e1;
t226 = t289 + t608;
t265 = t632 / 0.2e1 + t400;
t358 = pkin(3) * t370 + qJ(5);
t492 = t358 * qJD(3);
t629 = qJD(1) * t226 + qJD(2) * t265 + t492;
t382 = -t601 / 0.2e1 + t560 / 0.2e1 + t400;
t364 = t373 * pkin(3);
t566 = t332 * qJ(5);
t455 = t364 + t566;
t176 = t334 * t613 + t455;
t552 = t375 * t176;
t103 = t552 + t652;
t590 = t103 * t372;
t555 = t372 * t176;
t102 = t651 - t555;
t591 = t102 * t375;
t409 = -t591 / 0.2e1 - t590 / 0.2e1;
t27 = t382 + t409;
t366 = t372 ^ 2;
t368 = t375 ^ 2;
t604 = t368 / 0.2e1;
t460 = t366 / 0.2e1 + t604;
t444 = t460 * t630;
t75 = t608 + t561 / 0.2e1 + t444;
t628 = -qJD(1) * t75 + qJD(2) * t27 + t492;
t423 = -t268 * t334 - t332 * t642;
t622 = qJD(4) * t423;
t621 = t445 * qJD(2);
t619 = t386 * qJD(2);
t617 = qJD(1) * t445;
t616 = -qJD(1) * t386 + qJD(2) * t423;
t606 = -t334 / 0.2e1;
t605 = -t361 / 0.2e1;
t600 = t334 * pkin(4);
t597 = qJD(3) * pkin(3);
t596 = t375 * t98;
t595 = t99 * t372;
t592 = t102 * t372;
t589 = t103 * t375;
t588 = t173 * t334;
t587 = t173 * t375;
t586 = t174 * t334;
t585 = t174 * t372;
t443 = t460 * t334;
t565 = t332 * t358;
t469 = -t565 / 0.2e1;
t387 = t357 * t443 + t469;
t410 = t592 / 0.2e1 - t589 / 0.2e1;
t20 = t387 + t410;
t584 = t20 * qJD(2);
t21 = (t230 - t585 + t587) * t630;
t583 = t21 * qJD(1);
t576 = t230 * t358;
t574 = t234 * t372;
t571 = t235 * t375;
t570 = t275 * t358;
t569 = t275 * t372;
t568 = t275 * t375;
t28 = t173 * t234 - t174 * t235 + t575;
t567 = t28 * qJD(1);
t564 = t332 * t372;
t563 = t334 * t358;
t309 = t366 * t334;
t310 = t368 * t334;
t319 = t334 * qJD(4);
t396 = t558 / 0.2e1 + t458 / 0.2e1;
t190 = (t606 + t396) * t556;
t510 = t190 * qJD(1);
t543 = t510 + t319;
t413 = -t446 / 0.2e1;
t540 = t343 / 0.2e1 + t376 * t413;
t539 = -t343 / 0.2e1 + t418 / 0.2e1;
t467 = -t556 / 0.2e1;
t538 = t373 * t413 + t467 * t558;
t354 = t366 - t368;
t537 = t366 + t368;
t242 = pkin(4) * t332 + t412;
t248 = t455 + t600;
t100 = -t242 * t334 - t248 * t332;
t536 = qJD(2) * t100;
t142 = t627 * t372;
t535 = qJD(2) * t142;
t183 = t626 * t372;
t534 = qJD(2) * t183;
t184 = t626 * t375;
t533 = qJD(2) * t184;
t532 = qJD(2) * t371;
t531 = qJD(2) * t372;
t530 = qJD(2) * t374;
t529 = qJD(2) * t376;
t528 = qJD(3) * t630;
t527 = qJD(3) * t230;
t526 = qJD(3) * t246;
t525 = qJD(3) * t642;
t524 = qJD(3) * t268;
t523 = qJD(3) * t372;
t522 = qJD(4) * t332;
t521 = qJD(5) * t334;
t520 = qJD(5) * t372;
t519 = qJD(5) * t375;
t518 = qJD(6) * t243;
t516 = qJD(6) * t375;
t363 = t364 / 0.2e1;
t112 = t363 + (pkin(4) / 0.2e1 + t605) * t334 + (qJ(5) / 0.2e1 + t358 / 0.2e1) * t332;
t515 = t112 * qJD(2);
t122 = t443 + t310 / 0.2e1 + t309 / 0.2e1;
t514 = t122 * qJD(2);
t143 = t537 * t334 * t332;
t513 = t143 * qJD(2);
t144 = (-t562 + (t313 * t373 + t314 * t376) * t371) * t377;
t512 = t144 * qJD(1);
t185 = t627 * t375;
t511 = t185 * qJD(2);
t484 = -t593 / 0.2e1;
t391 = (t334 * t484 + t370 * t607) * pkin(3);
t210 = -t364 / 0.2e1 + t391;
t509 = t210 * qJD(2);
t245 = (t604 - t366 / 0.2e1) * t332;
t505 = t245 * qJD(6);
t504 = t246 * qJD(2);
t249 = -t309 - t310;
t503 = t249 * qJD(2);
t324 = t559 / 0.2e1 - t359 / 0.2e1;
t500 = t324 * qJD(2);
t499 = t614 * qJD(2);
t498 = t332 * qJD(2);
t497 = t332 * qJD(3);
t496 = t332 * qJD(5);
t495 = t334 * qJD(2);
t494 = t334 * qJD(3);
t367 = t373 ^ 2;
t369 = t376 ^ 2;
t355 = t369 - t367;
t493 = t355 * qJD(2);
t491 = t373 * qJD(3);
t490 = t375 * qJD(3);
t489 = t376 * qJD(3);
t487 = pkin(2) * t373 * qJD(2);
t486 = pkin(2) * t529;
t483 = t242 * t495;
t482 = t614 * t531;
t481 = t372 * t497;
t480 = t372 * t490;
t479 = t334 * t517;
t478 = t334 * t516;
t477 = t332 * t495;
t263 = t332 * t494;
t476 = t371 * t530;
t475 = t377 * t532;
t474 = t372 * t498;
t473 = t373 * t489;
t472 = t372 * t516;
t306 = t375 * t495;
t470 = -t570 / 0.2e1;
t466 = t556 / 0.2e1;
t465 = -t553 / 0.2e1;
t464 = t550 / 0.2e1;
t457 = (t367 + t369) * t377;
t454 = qJD(6) * t324 + t477;
t453 = qJD(6) + t495;
t452 = t332 * t476;
t451 = t334 * t476;
t450 = t615 * t472;
t449 = t332 * t467;
t448 = t332 * t466;
t447 = t334 * t466;
t442 = qJD(3) * t456;
t378 = (t595 / 0.2e1 - t596 / 0.2e1) * t630 + t102 * t612 - t174 * t103 / 0.2e1 + t648 * t610 + t223 * t646;
t2 = t378 + t470 - t650;
t5 = -t102 * t98 + t103 * t99 + t223 * t648;
t441 = t2 * qJD(1) + t5 * qJD(2);
t6 = t30 + (t589 - t592) * t332;
t439 = t6 * qJD(2) - t656;
t51 = t242 * t248;
t383 = (-t230 / 0.2e1 + t610) * t642;
t379 = t248 * t467 + t383;
t405 = t274 * t605 + t470;
t9 = t379 + t405;
t438 = t9 * qJD(1) + t51 * qJD(2);
t10 = (t102 - t651) * t334 + (t98 - t653) * t332;
t381 = t173 * t607 - t375 * t636;
t25 = -t569 / 0.2e1 + t381;
t437 = t25 * qJD(1) + t10 * qJD(2);
t11 = (-t103 + t652) * t334 + (t99 + t582) * t332;
t380 = t174 * t607 + t372 * t636;
t23 = -t568 / 0.2e1 + t380;
t436 = t23 * qJD(1) + t11 * qJD(2);
t397 = t275 * t370 / 0.2e1 + t274 * t484;
t12 = (t373 * t466 + t397) * pkin(3) - t383;
t78 = t362 * t364;
t435 = -t12 * qJD(1) + t78 * qJD(2);
t16 = -t648 * t332 + (t595 - t596) * t334;
t388 = t167 + (-t585 / 0.2e1 + t587 / 0.2e1) * t334;
t406 = t574 / 0.2e1 - t571 / 0.2e1;
t18 = t388 + t406;
t434 = -qJD(1) * t18 - qJD(2) * t16;
t432 = qJD(2) * t30 - t656;
t52 = t246 * t648 + t334 * t98;
t57 = t465 + t588 / 0.2e1 + t403 * t375;
t429 = -qJD(1) * t57 + qJD(2) * t52;
t53 = -t334 * t99 + t564 * t648;
t56 = t464 - t586 / 0.2e1 + t403 * t372;
t428 = -qJD(1) * t56 + qJD(2) * t53;
t427 = t590 + t591;
t424 = -t268 * t274 + t275 * t642;
t422 = t332 * t357 + t563;
t419 = t453 * t372;
t101 = t242 * t332 - t248 * t334;
t192 = t448 + t539;
t417 = -qJD(1) * t192 + qJD(2) * t101;
t191 = t447 + t538;
t232 = t332 * t364 + t334 * t362;
t416 = -qJD(1) * t191 + qJD(2) * t232;
t193 = t449 + t540;
t233 = -t332 * t362 + t334 * t364;
t415 = -qJD(1) * t193 + qJD(2) * t233;
t404 = t357 * t606 + t565 / 0.2e1;
t402 = t332 * t419;
t199 = -qJD(2) * t245 + t480;
t145 = t375 * t531 * t615 + qJD(3) * t245;
t250 = t354 * t615;
t399 = qJD(2) * t250 + t442;
t398 = qJD(2) * t456 - qJD(3) * t354;
t393 = t176 / 0.2e1 + t404;
t104 = t462 * t372;
t49 = t375 * t393;
t390 = -qJD(1) * t104 - qJD(2) * t49 + t372 * t492;
t105 = t462 * t375;
t47 = t372 * t393;
t389 = qJD(1) * t105 - qJD(2) * t47 - t358 * t490;
t356 = t373 * t529;
t348 = t358 * qJD(5);
t307 = t324 * qJD(3);
t278 = -t306 - t516;
t225 = t560 + 0.2e1 * t400;
t209 = t363 + t391;
t197 = t396 * t556 + t447;
t196 = t334 * t467 + t538;
t195 = t448 + t540;
t194 = t449 + t539;
t181 = t197 * qJD(2);
t179 = t190 * qJD(2);
t141 = -t561 + 0.2e1 * t289;
t113 = t469 + t361 * t334 / 0.2e1 + t363 + t566 / 0.2e1 + t600 / 0.2e1;
t107 = 0.2e1 * t471;
t106 = t630 * t372;
t76 = t289 - t561 / 0.2e1 + t444;
t59 = t586 / 0.2e1 + t564 * t646 + t372 * t468 + t464;
t58 = -t588 / 0.2e1 + t332 * t471 + t375 * t468 + t465;
t50 = -t652 - t552 / 0.2e1 + t404 * t375;
t48 = t651 - t555 / 0.2e1 + t404 * t372;
t26 = t382 - t409;
t24 = t569 / 0.2e1 + t381;
t22 = t568 / 0.2e1 + t380;
t19 = t387 - t410;
t17 = t388 - t406;
t13 = pkin(3) * t397 + t364 * t467 + t383;
t8 = t379 - t405;
t1 = t570 / 0.2e1 + t378 + t650;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t144, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t635, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t635, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t28 + qJD(3) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, -t475, 0, 0, 0, 0, 0, 0, 0, 0 (-t374 * t529 - t377 * t491) * t371 (t373 * t530 - t377 * t489) * t371, t457 * t532, t512 + (-pkin(2) * t374 + pkin(8) * t457) * t532, 0, 0, 0, 0, 0, 0, qJD(3) * t196 + t452, qJD(3) * t195 + t451, t644 (t362 * t557 + t424) * qJD(2) + t13 * qJD(3) + t649, 0, 0, 0, 0, 0, 0, t644, qJD(3) * t197 - t452, qJD(3) * t194 - t451 (t242 * t557 + t424) * qJD(2) + t8 * qJD(3) + t197 * qJD(5) + t649, 0, 0, 0, 0, 0, 0 (t234 * t334 - t246 * t275) * qJD(2) + t24 * qJD(3) + t59 * qJD(6) (-t235 * t334 + t275 * t564) * qJD(2) + t22 * qJD(3) + t58 * qJD(6), -t34 * qJD(3) + (t571 - t574) * t498, t567 + (-t234 * t98 + t235 * t99 + t275 * t648) * qJD(2) + t1 * qJD(3) + t17 * qJD(4) + t34 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314 * qJD(3) - t373 * t475, t313 * qJD(3) - t376 * t475, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t196 - t528, qJD(2) * t195 - t527, t621, t13 * qJD(2) + (t230 * t370 - t593 * t630) * t597, 0, 0, 0, 0, 0, 0, t621, t181 + t528, qJD(2) * t194 + t527, t8 * qJD(2) + (t361 * t630 + t576) * qJD(3) + t141 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(2) * t24 + qJD(6) * t107 + t230 * t523, qJD(2) * t22 - qJD(6) * t106 + t230 * t490, -t528 * t537 - t655, t583 + t1 * qJD(2) + (t357 * t537 * t630 + t576) * qJD(3) + t76 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t638, 0, 0, 0, 0, 0, 0, 0, 0, 0, t638, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t141 + t181, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t76 + t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t59 + qJD(3) * t107 + qJD(6) * t174, qJD(2) * t58 - qJD(3) * t106 - qJD(6) * t173, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512, 0, 0, 0, 0, 0, 0, -t191 * qJD(3), -t193 * qJD(3), t620, -qJD(3) * t12 + t647, 0, 0, 0, 0, 0, 0, t620, -t190 * qJD(3), -t192 * qJD(3), qJD(3) * t9 - qJD(5) * t190 + t647, 0, 0, 0, 0, 0, 0, qJD(3) * t25 - qJD(6) * t56, qJD(3) * t23 - qJD(6) * t57, -qJD(3) * t35, qJD(3) * t2 + qJD(4) * t18 + qJD(5) * t35 - t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t473, t355 * qJD(3), 0, -t473, 0, 0, -pkin(2) * t491, -pkin(2) * t489, 0, 0, -t263, t640, 0, t263, 0, 0, t232 * qJD(3), t233 * qJD(3), t634, qJD(3) * t78 + t622, 0, 0, 0, -t263, t640, t263, t634, qJD(3) * t100 + t334 * t496, qJD(3) * t101 + qJD(5) * t614, qJD(3) * t51 - t242 * t521 + t622, t263 * t366 + t450, -qJD(6) * t250 + t334 * t442, -qJD(3) * t183 + t332 * t478, t263 * t368 - t450, -qJD(3) * t184 - t332 * t479, -t263, qJD(3) * t10 + qJD(4) * t185 + qJD(6) * t53 + t520 * t614, qJD(3) * t11 - qJD(4) * t142 + qJD(6) * t52 + t519 * t614, qJD(3) * t6 - qJD(5) * t143, qJD(3) * t5 + qJD(4) * t16 - qJD(5) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t493, t489, -t356, -t491, 0, -pkin(8) * t489 - t487, pkin(8) * t491 - t486, 0, 0, -t477, t641, -t497, t477, -t494, 0, t416 - t525, t415 - t524 (t332 * t593 - t334 * t370) * t597 + t617 (t268 * t370 - t593 * t642) * t597 + t209 * qJD(4) + t435, 0, t497, t494, -t477, t641, t477 (-t332 * t361 - t563) * qJD(3) - t496 + t617, -t510 + t525 + t536, t417 + t524 (t268 * t358 + t361 * t642) * qJD(3) + t113 * qJD(4) + t225 * qJD(5) + t438, t505 + (t366 * t498 + t480) * t334 (t310 - t309) * qJD(3) + (-qJD(6) + t495) * t456, -t332 * t490 - t534, -t505 + (t368 * t498 - t480) * t334, t481 - t533, -t454 (-t375 * t422 + t582) * qJD(3) - t246 * qJD(5) + t48 * qJD(6) + t437, t223 * t490 + t50 * qJD(6) + (qJD(3) * t422 + t496) * t372 + t436, -qJD(3) * t427 + t439 (t223 * t358 + t357 * t427) * qJD(3) + t19 * qJD(4) + t26 * qJD(5) + t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t639, qJD(3) * t209 + t616, 0, 0, 0, 0, 0, 0, t639, 0, 0, qJD(3) * t113 + t616, 0, 0, 0, 0, 0, 0, t511, -t535, 0, qJD(3) * t19 - t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t497, t477, t499, qJD(3) * t225 - t483 - t510, 0, 0, 0, 0, 0, 0, t482 - t526, t375 * t499 + t481, -t513, qJD(3) * t26 - t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, -t399, t453 * t246, -t145, -t402, -t307, qJD(3) * t48 - qJD(6) * t99 + t428, qJD(3) * t50 + qJD(6) * t98 + t429, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191 * qJD(2), t193 * qJD(2), -t621, qJD(2) * t12, 0, 0, 0, 0, 0, 0, -t621, t179, t192 * qJD(2), -qJD(2) * t9 + qJD(5) * t226, 0, 0, 0, 0, 0, 0, -qJD(2) * t25 - qJD(6) * t105, -qJD(2) * t23 + qJD(6) * t104, t654, -qJD(2) * t2 - qJD(5) * t75 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356, -t493, 0, t356, 0, 0, t487, t486, 0, 0, t477, -t641, 0, -t477, 0, 0, -t416 - t319, -t415 + t522, -t617, qJD(4) * t210 - t435, 0, 0, 0, t477, -t641, -t477, -t617, -t536 + t543, -t417 - t522, -qJD(4) * t112 + qJD(5) * t265 - t438, -t366 * t477 + t505, -0.2e1 * t375 * t402, -t479 + t534, -t368 * t477 - t505, -t478 + t533, t454, qJD(6) * t47 - t372 * t522 - t437, -qJD(4) * t246 + qJD(6) * t49 - t436, qJD(4) * t249 - t439, qJD(4) * t20 + qJD(5) * t27 - t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t348, -t472, t354 * qJD(6), 0, t472, 0, 0, t358 * t516 + t520, -t358 * t517 + t519, 0, t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, t498, 0, t509, 0, 0, 0, 0, 0, 0, 0, t495, -t498, -t515, 0, 0, 0, 0, 0, 0, -t474, -t504, t503, t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t629, 0, 0, 0, 0, 0, 0, t523, t490, 0, t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, -t398, -t419, t199, t278, t500, -t357 * t517 - t389, -t357 * t516 - t390, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, -t497, -t639, -qJD(3) * t210 - t616, 0, 0, 0, 0, 0, 0, -t639, -t494, t497, qJD(3) * t112 - t521 - t616, 0, 0, 0, 0, 0, 0, -t478 + t481 - t511, t518 + t526 + t535, -t249 * qJD(3), -qJD(3) * t20 - qJD(5) * t122 + t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t495, -t498, 0, -t509, 0, 0, 0, 0, 0, 0, 0, -t495, t498, t515, 0, 0, 0, 0, 0, 0, t474, t504, -t503, -t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t643, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t226 + t179, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t75 - t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, -t499, -qJD(3) * t265 + t483 + t543, 0, 0, 0, 0, 0, 0, -t482 - t518 (-qJD(6) * t334 - t499) * t375, t513, -qJD(3) * t27 + qJD(4) * t122 + t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t629, 0, 0, 0, 0, 0, 0, -t523, -t490, 0, -t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t495, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t643, -t453 * t375, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t56 + qJD(3) * t105, qJD(2) * t57 - qJD(3) * t104, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, t399 (-t375 * t498 + t523) * t334, t145 (t474 + t490) * t334, -t307, -qJD(3) * t47 + qJD(5) * t243 + t319 * t375 - t428, -qJD(3) * t49 - qJD(4) * t243 + t334 * t519 - t429, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t398, t372 * t495, -t199, t306, -t500, t389, t390, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, -t506, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, t306, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t3;
