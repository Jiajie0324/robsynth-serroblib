% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR1_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:03:23
% EndTime: 2019-03-08 23:03:31
% DurationCPUTime: 3.32s
% Computational Cost: add. (5636->259), mult. (13639->474), div. (0->0), fcn. (13871->12), ass. (0->156)
t109 = cos(qJ(3));
t192 = cos(qJ(4));
t193 = -pkin(9) - pkin(8);
t141 = t193 * t192;
t157 = t192 * t109;
t105 = sin(qJ(4));
t106 = sin(qJ(3));
t176 = t105 * t106;
t79 = t193 * t176;
t199 = t157 * t193 - t79;
t41 = t199 * qJD(4) + (t109 * t141 - t79) * qJD(3);
t150 = qJD(4) * t192;
t201 = -qJD(3) * t192 - t150;
t56 = (qJD(3) + qJD(4)) * t176 + t201 * t109;
t175 = t105 * t109;
t78 = t106 * t192 + t175;
t202 = t56 * qJ(5) - t78 * qJD(5) + t41;
t124 = t106 * t141;
t57 = t175 * t193 + t124;
t103 = cos(pkin(6));
t102 = sin(pkin(6));
t107 = sin(qJ(2));
t179 = t102 * t107;
t121 = -t103 * t109 + t106 * t179;
t200 = qJD(3) * t121;
t108 = cos(qJ(6));
t100 = t108 ^ 2;
t104 = sin(qJ(6));
t99 = t104 ^ 2;
t183 = t100 - t99;
t198 = t183 * qJD(6);
t72 = t103 * t106 + t109 * t179;
t174 = t72 * qJD(3);
t110 = cos(qJ(2));
t172 = qJD(2) * t110;
t154 = t102 * t172;
t197 = -t109 * t154 + t200;
t178 = t102 * t110;
t101 = sin(pkin(12));
t181 = cos(pkin(12));
t46 = -t105 * t72 - t121 * t192;
t47 = -t105 * t121 + t192 * t72;
t36 = t101 * t46 + t181 * t47;
t122 = t104 * t178 - t108 * t36;
t123 = t104 * t36 + t108 * t178;
t126 = -t104 * t123 + t108 * t122;
t112 = -t106 * t154 - t174;
t171 = qJD(4) * t105;
t25 = -t105 * t112 + t121 * t150 + t171 * t72 + t192 * t197;
t26 = -qJD(4) * t47 + t105 * t197 + t112 * t192;
t13 = t101 * t26 - t181 * t25;
t173 = qJD(2) * t107;
t155 = t102 * t173;
t5 = qJD(6) * t123 - t104 * t155 - t108 * t13;
t6 = qJD(6) * t122 - t104 * t13 + t108 * t155;
t196 = qJD(6) * t126 + t5 * t104 - t6 * t108;
t77 = -t157 + t176;
t52 = t101 * t78 + t181 * t77;
t53 = -t101 * t77 + t181 * t78;
t96 = -pkin(3) * t109 - pkin(2);
t63 = pkin(4) * t77 + t96;
t118 = -pkin(5) * t52 + pkin(10) * t53 - t63;
t117 = t108 * t118;
t114 = -t78 * qJ(5) + t57;
t45 = -qJ(5) * t77 - t199;
t34 = t101 * t114 + t181 * t45;
t16 = -t104 * t34 - t117;
t17 = -t104 * t118 + t108 * t34;
t128 = t104 * t16 - t108 * t17;
t168 = t109 * qJD(3);
t86 = t105 * t168;
t146 = -t106 * t201 + t109 * t171 + t86;
t38 = -t101 * t56 + t146 * t181;
t39 = -t101 * t146 - t181 * t56;
t169 = t106 * qJD(3);
t165 = pkin(3) * t169;
t48 = pkin(4) * t146 + t165;
t113 = t38 * pkin(5) - t39 * pkin(10) + t48;
t40 = -qJD(3) * t124 - qJD(4) * t57 - t193 * t86;
t27 = -qJ(5) * t146 - t77 * qJD(5) - t40;
t15 = t101 * t202 + t181 * t27;
t170 = qJD(6) * t104;
t3 = qJD(6) * t117 - t104 * t113 - t108 * t15 + t170 * t34;
t4 = -qJD(6) * t17 - t104 * t15 + t108 * t113;
t195 = qJD(6) * t128 + t3 * t104 - t4 * t108;
t120 = qJD(3) * t103 + t154;
t194 = (t109 * t120 + t200) * t109 + (t106 * t120 - t174) * t106;
t14 = t101 * t27 - t181 * t202;
t33 = t101 * t45 - t114 * t181;
t191 = t33 * t14;
t148 = t181 * t105;
t66 = (t101 * t192 + t148) * qJD(4) * pkin(3);
t190 = t33 * t66;
t12 = -t101 * t25 - t181 * t26;
t35 = t101 * t47 - t181 * t46;
t189 = t35 * t12;
t188 = t35 * t66;
t187 = t53 * t39;
t97 = qJD(6) * t108;
t32 = t33 * t97;
t186 = t104 * t14 + t32;
t95 = pkin(3) * t192 + pkin(4);
t68 = -pkin(3) * t101 * t105 + t181 * t95;
t64 = -pkin(5) - t68;
t185 = t104 * t66 + t64 * t97;
t69 = pkin(3) * t148 + t101 * t95;
t184 = t107 * t102 ^ 2;
t182 = t100 + t99;
t177 = t104 * t108;
t167 = 0.2e1 * t52 * t38;
t166 = -0.2e1 * pkin(2) * qJD(3);
t164 = pkin(3) * t171;
t163 = t53 * t170;
t162 = t53 * t97;
t31 = t33 * t170;
t161 = t35 * t170;
t160 = t35 * t97;
t94 = -pkin(4) * t181 - pkin(5);
t159 = t94 * t170;
t158 = t94 * t97;
t156 = t110 * t169;
t153 = t104 * t97;
t152 = t106 * t168;
t145 = pkin(3) * t150;
t67 = -t101 * t164 + t145 * t181;
t43 = t182 * t67;
t149 = -t108 * t66 + t170 * t64;
t147 = -0.4e1 * t53 * t177;
t50 = t53 ^ 2;
t143 = t50 * t153;
t142 = t172 * t184;
t137 = t12 * t33 + t35 * t14;
t136 = t12 * t53 + t35 * t39;
t135 = t14 * t53 + t33 * t39;
t134 = t38 * t53 + t39 * t52;
t93 = pkin(4) * t101 + pkin(10);
t133 = -t38 * t93 + t39 * t94;
t65 = pkin(10) + t69;
t132 = t52 * t65 - t53 * t64;
t131 = -t52 * t67 + t53 * t66;
t130 = t52 * t93 - t53 * t94;
t129 = -t104 * t17 - t108 * t16;
t127 = t104 * t122 + t108 * t123;
t23 = t104 * t38 + t52 * t97;
t119 = -t38 * t65 + t39 * t64 + t131;
t1 = qJD(6) * t129 - t4 * t104 - t3 * t108;
t2 = qJD(6) * t127 - t6 * t104 - t5 * t108;
t85 = -0.2e1 * t153;
t84 = 0.2e1 * t153;
t76 = 0.2e1 * t198;
t22 = t108 * t38 - t170 * t52;
t20 = -t39 * t177 - t198 * t53;
t18 = qJD(6) * t147 + t183 * t39;
t8 = -t108 * t12 + t161;
t7 = t104 * t12 + t160;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (-t184 + (t106 * t121 + t109 * t72) * t102) * t172, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t25 * t47 + 0.2e1 * t26 * t46 - 0.2e1 * t142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t13 * t36 - 0.2e1 * t142 + 0.2e1 * t189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t122 * t5 - 0.2e1 * t123 * t6 + 0.2e1 * t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t155, -t154, 0, 0, 0, 0, 0, 0, 0, 0 (-t109 * t173 - t156) * t102 (t106 * t173 - t110 * t168) * t102, t194, -pkin(2) * t155 + pkin(8) * t194, 0, 0, 0, 0, 0, 0 (-t110 * t146 + t173 * t77) * t102 (t110 * t56 + t173 * t78) * t102, -t146 * t47 + t25 * t77 - t26 * t78 + t46 * t56, t25 * t199 + t26 * t57 - t47 * t40 + t46 * t41 + (-pkin(3) * t156 + t173 * t96) * t102, 0, 0, 0, 0, 0, 0 (-t110 * t38 + t173 * t52) * t102 (-t110 * t39 + t173 * t53) * t102, -t13 * t52 - t36 * t38 + t136, t13 * t34 + t36 * t15 + (-t110 * t48 + t173 * t63) * t102 + t137, 0, 0, 0, 0, 0, 0, t104 * t136 - t123 * t38 + t160 * t53 + t6 * t52, t108 * t136 + t122 * t38 - t161 * t53 + t5 * t52, t127 * t39 + t196 * t53, t122 * t3 - t123 * t4 + t16 * t6 - t17 * t5 + t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t152, 0.2e1 * (-t106 ^ 2 + t109 ^ 2) * qJD(3), 0, -0.2e1 * t152, 0, 0, t106 * t166, t109 * t166, 0, 0, -0.2e1 * t78 * t56, -0.2e1 * t146 * t78 + 0.2e1 * t56 * t77, 0, 0.2e1 * t77 * t146, 0, 0, 0.2e1 * t146 * t96 + 0.2e1 * t165 * t77, 0.2e1 * t165 * t78 - 0.2e1 * t56 * t96, 0.2e1 * t146 * t199 + 0.2e1 * t40 * t77 - 0.2e1 * t41 * t78 + 0.2e1 * t56 * t57, 0.2e1 * t165 * t96 + 0.2e1 * t199 * t40 + 0.2e1 * t41 * t57, 0.2e1 * t187, -0.2e1 * t134, 0, t167, 0, 0, 0.2e1 * t38 * t63 + 0.2e1 * t48 * t52, 0.2e1 * t39 * t63 + 0.2e1 * t48 * t53, -0.2e1 * t15 * t52 - 0.2e1 * t34 * t38 + 0.2e1 * t135, 0.2e1 * t15 * t34 + 0.2e1 * t48 * t63 + 0.2e1 * t191, 0.2e1 * t100 * t187 - 0.2e1 * t143, t147 * t39 - 0.2e1 * t198 * t50, 0.2e1 * t108 * t134 - 0.2e1 * t163 * t52, 0.2e1 * t187 * t99 + 0.2e1 * t143, -0.2e1 * t104 * t134 - 0.2e1 * t162 * t52, t167, 0.2e1 * t104 * t135 + 0.2e1 * t16 * t38 + 0.2e1 * t32 * t53 + 0.2e1 * t4 * t52, 0.2e1 * t108 * t135 - 0.2e1 * t17 * t38 + 0.2e1 * t3 * t52 - 0.2e1 * t31 * t53, 0.2e1 * t129 * t39 + 0.2e1 * t195 * t53, 0.2e1 * t16 * t4 - 0.2e1 * t17 * t3 + 0.2e1 * t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t197, 0, 0, 0, 0, 0, 0, 0, 0, t26, t25, 0 (t192 * t26 - t105 * t25 + (-t105 * t46 + t192 * t47) * qJD(4)) * pkin(3), 0, 0, 0, 0, 0, 0, -t12, -t13, 0, -t12 * t68 + t13 * t69 + t36 * t67 + t188, 0, 0, 0, 0, 0, 0, t8, t7, t2, t12 * t64 - t126 * t67 + t2 * t65 + t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, 0, -t169, 0, -pkin(8) * t168, pkin(8) * t169, 0, 0, 0, 0, -t56, 0, -t146, 0, t41, t40 (-t105 * t146 + t192 * t56 + (t105 * t78 - t192 * t77) * qJD(4)) * pkin(3) (t192 * t41 - t105 * t40 + (-t105 * t57 - t192 * t199) * qJD(4)) * pkin(3), 0, 0, t39, 0, -t38, 0, -t14, -t15, -t38 * t69 - t39 * t68 + t131, -t14 * t68 + t15 * t69 + t34 * t67 + t190, -t20, t18, t23, t20, t22, 0, t31 + (-qJD(6) * t132 - t14) * t108 + t119 * t104, t108 * t119 + t132 * t170 + t186, t1, t1 * t65 - t128 * t67 + t14 * t64 + t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t164, -0.2e1 * t145, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t66, -0.2e1 * t67, 0, -0.2e1 * t66 * t68 + 0.2e1 * t67 * t69, t84, t76, 0, t85, 0, 0, 0.2e1 * t149, 0.2e1 * t185, 0.2e1 * t43, 0.2e1 * t43 * t65 + 0.2e1 * t64 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, t25, 0, 0, 0, 0, 0, 0, 0, 0, -t12, -t13, 0 (t101 * t13 - t12 * t181) * pkin(4), 0, 0, 0, 0, 0, 0, t8, t7, t2, t12 * t94 + t2 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t146, 0, t41, t40, 0, 0, 0, 0, t39, 0, -t38, 0, -t14, -t15 (-t101 * t38 - t181 * t39) * pkin(4) (t101 * t15 - t14 * t181) * pkin(4), -t20, t18, t23, t20, t22, 0, t31 + t133 * t104 + (-qJD(6) * t130 - t14) * t108, t108 * t133 + t130 * t170 + t186, t1, t1 * t93 + t14 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, -t145, 0, 0, 0, 0, 0, 0, 0, 0, -t66, -t67, 0 (t101 * t67 - t181 * t66) * pkin(4), t84, t76, 0, t85, 0, 0, t149 + t159, t158 + t185, t43, t43 * t93 + t66 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, t76, 0, t85, 0, 0, 0.2e1 * t159, 0.2e1 * t158, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t39, 0, t48, 0, 0, 0, 0, 0, 0, t22, -t23, -t182 * t39, -t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, t5, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108 * t39 - t163, 0, -t104 * t39 - t162, t38, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, -t170, 0, -t104 * t67 - t65 * t97, -t108 * t67 + t170 * t65, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, -t170, 0, -t93 * t97, t93 * t170, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t97, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
