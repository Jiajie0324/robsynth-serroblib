% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:03:26
% EndTime: 2019-03-08 23:03:45
% DurationCPUTime: 11.37s
% Computational Cost: add. (10986->422), mult. (24541->646), div. (0->0), fcn. (29865->12), ass. (0->369)
t496 = qJD(3) + qJD(4);
t377 = cos(qJ(4));
t378 = cos(qJ(3));
t535 = t377 * t378;
t373 = sin(qJ(4));
t374 = sin(qJ(3));
t540 = t373 * t374;
t344 = -t535 + t540;
t371 = sin(pkin(6));
t379 = cos(qJ(2));
t543 = t371 * t379;
t307 = t344 * t543;
t370 = sin(pkin(12));
t536 = t377 * t374;
t539 = t373 * t378;
t346 = -t536 - t539;
t411 = t346 * t543;
t574 = cos(pkin(12));
t219 = -t307 * t370 - t411 * t574;
t372 = sin(qJ(6));
t561 = t219 * t372;
t376 = cos(qJ(6));
t375 = sin(qJ(2));
t544 = t371 * t375;
t575 = cos(pkin(6));
t330 = t374 * t544 - t378 * t575;
t331 = t374 * t575 + t378 * t544;
t210 = t373 * t330 - t377 * t331;
t450 = t377 * t330 + t373 * t331;
t624 = -t210 * t574 - t370 * t450;
t127 = -t372 * t543 + t376 * t624;
t329 = t574 * t346;
t546 = t370 * t344;
t616 = -t329 - t546;
t600 = -t616 / 0.2e1;
t595 = t616 / 0.2e1;
t651 = t595 * t624;
t655 = t127 * t600 + t376 * t651;
t668 = -t561 / 0.2e1 + t655;
t677 = qJD(1) * t668;
t560 = t219 * t376;
t126 = t372 * t624 + t376 * t543;
t656 = t126 * t600 + t372 * t651;
t669 = t560 / 0.2e1 + t656;
t676 = qJD(1) * t669;
t172 = t210 * t370 - t450 * t574;
t585 = t372 / 0.2e1;
t586 = -t372 / 0.2e1;
t658 = -t585 + t586;
t643 = t658 * t172;
t670 = -t560 / 0.2e1 + t656;
t675 = qJD(2) * t670 + qJD(6) * t643;
t583 = t376 / 0.2e1;
t158 = t172 * t583;
t584 = -t376 / 0.2e1;
t642 = t172 * t584 - t158;
t671 = t561 / 0.2e1 + t655;
t674 = qJD(2) * t671 + qJD(6) * t642;
t603 = t172 / 0.2e1;
t632 = -t172 / 0.2e1;
t652 = t632 + t603;
t661 = t652 * t372;
t673 = -qJD(2) * t669 - qJD(6) * t661;
t660 = t652 * t376;
t672 = -qJD(2) * t668 - qJD(6) * t660;
t667 = qJD(1) * t660;
t666 = qJD(1) * t661;
t659 = t624 * t600 + t651;
t663 = t659 * qJD(1);
t662 = t659 * qJD(2);
t452 = t574 * t373;
t333 = (t370 * t377 + t452) * pkin(3);
t365 = t377 * pkin(3) + pkin(4);
t327 = pkin(3) * t452 + t370 * t365;
t592 = -t327 / 0.2e1;
t657 = -t333 / 0.2e1 - t592;
t545 = t370 * t373;
t334 = (t377 * t574 - t545) * pkin(3);
t590 = -t334 / 0.2e1;
t326 = -pkin(3) * t545 + t365 * t574;
t593 = t326 / 0.2e1;
t654 = t590 + t593;
t606 = pkin(8) + pkin(9);
t353 = t606 * t374;
t354 = t606 * t378;
t270 = t373 * t353 - t377 * t354;
t408 = t344 * qJ(5) + t270;
t425 = -t377 * t353 - t373 * t354;
t615 = t346 * qJ(5) + t425;
t637 = t370 * t615 - t408 * t574;
t562 = t637 * t616;
t298 = -t574 * t344 + t346 * t370;
t366 = -t378 * pkin(3) - pkin(2);
t317 = t344 * pkin(4) + t366;
t393 = -pkin(5) * t298 - pkin(10) * t616 + t317;
t646 = t637 * t372;
t61 = -t376 * t393 + t646;
t648 = t372 * t562 - t61 * t616;
t645 = t637 * t376;
t62 = t372 * t393 + t645;
t647 = t376 * t562 - t62 * t616;
t389 = t652 * t637;
t636 = t370 * t408 + t615 * t574;
t641 = (-t583 + t584) * t636;
t640 = t658 * t636;
t627 = qJD(2) * t298;
t635 = -qJD(6) + t627;
t633 = t616 ^ 2;
t622 = 0.2e1 * t616;
t631 = -t298 / 0.2e1;
t630 = t298 / 0.2e1;
t629 = t298 * t616;
t628 = t372 * t616;
t551 = t616 * t376;
t414 = -t535 / 0.2e1 + t540 / 0.2e1;
t465 = t543 / 0.2e1;
t245 = t344 * t465 + t414 * t543;
t626 = t245 * qJD(2) + t450 * t496;
t415 = -t539 / 0.2e1 - t536 / 0.2e1;
t444 = t346 * t465;
t246 = t415 * t543 + t444;
t625 = t246 * qJD(2) + t210 * t496;
t623 = t496 * t425;
t621 = 0.2e1 * t372 * t551;
t614 = 0.2e1 * t624;
t418 = -t298 * t590 + t333 * t595;
t322 = -pkin(5) - t326;
t553 = t298 * t322;
t360 = pkin(4) * t370 + pkin(10);
t556 = t616 * t360;
t323 = pkin(10) + t327;
t557 = t616 * t323;
t613 = -t556 / 0.2e1 - t557 / 0.2e1 + t553 / 0.2e1 + t418;
t244 = (-t344 / 0.2e1 + t414) * t543;
t506 = t244 * qJD(1);
t522 = qJD(2) * t366;
t612 = t344 * t522 + t506;
t368 = t374 * pkin(3);
t293 = -t344 * t366 - t346 * t368;
t611 = -t293 * qJD(2) + t506;
t243 = (-t346 / 0.2e1 + t415) * t543;
t507 = t243 * qJD(1);
t610 = t270 * t496 - t507;
t369 = t376 ^ 2;
t607 = t372 ^ 2;
t186 = (t607 / 0.2e1 - t369 / 0.2e1) * t616;
t520 = qJD(2) * t376;
t486 = t372 * t520;
t609 = t186 * t496 + t486 * t633;
t494 = -t369 + t607;
t207 = t486 * t622 + t494 * t496;
t594 = -t322 / 0.2e1;
t589 = t360 / 0.2e1;
t361 = -pkin(4) * t574 - pkin(5);
t588 = -t361 / 0.2e1;
t587 = t370 / 0.2e1;
t582 = t346 * pkin(4);
t581 = t496 * t659;
t580 = pkin(3) * qJD(4);
t579 = pkin(4) * qJD(4);
t578 = qJD(3) * pkin(3);
t554 = t298 ^ 2;
t428 = -t554 + t633;
t84 = t428 * t372;
t573 = qJD(2) * t84;
t88 = t554 + t633;
t85 = t88 * t372;
t572 = qJD(2) * t85;
t86 = t428 * t376;
t571 = qJD(2) * t86;
t87 = t88 * t376;
t570 = qJD(2) * t87;
t569 = t126 * t298;
t568 = t127 * t298;
t555 = t616 * t370;
t549 = t326 * t298;
t548 = t327 * t616;
t220 = -t307 * t574 + t370 * t411;
t542 = t372 * t220;
t541 = t372 * t298;
t538 = t376 * t220;
t537 = t376 * t298;
t51 = -t371 ^ 2 * t379 * t375 - t172 * t219 + t220 * t624;
t532 = t51 * qJD(1);
t387 = -t549 / 0.2e1 - t548 / 0.2e1 + t418;
t453 = t574 * t298;
t396 = (-t555 / 0.2e1 - t453 / 0.2e1) * pkin(4);
t52 = t396 - t387;
t531 = t52 * qJD(2);
t530 = t88 * qJD(2);
t420 = t298 * t592 + t593 * t616;
t332 = -t582 / 0.2e1;
t495 = t332 + t368 / 0.2e1;
t93 = t420 + t495;
t529 = t93 * qJD(2);
t513 = qJD(4) * t376;
t516 = qJD(3) * t376;
t528 = (t513 + t516) * t616;
t527 = qJD(2) * t186;
t199 = t494 * t633;
t526 = qJD(2) * t199;
t523 = qJD(2) * t616;
t521 = qJD(2) * t375;
t519 = qJD(2) * t378;
t517 = qJD(3) * t372;
t515 = qJD(4) * t366;
t514 = qJD(4) * t372;
t512 = qJD(6) * t372;
t511 = qJD(6) * t376;
t489 = -t574 / 0.2e1;
t409 = t298 * t587 + t489 * t616;
t145 = (t346 / 0.2e1 + t409) * pkin(4);
t510 = t145 * qJD(2);
t509 = t628 * qJD(2);
t456 = 0.2e1 * t631;
t189 = t456 * t372;
t184 = t189 * qJD(2);
t192 = t456 * t376;
t185 = t192 * qJD(2);
t286 = t298 * t583;
t193 = t537 / 0.2e1 + t286;
t508 = t193 * qJD(2);
t268 = t344 ^ 2 - t346 ^ 2;
t505 = t268 * qJD(2);
t292 = t344 * t368 - t346 * t366;
t502 = t292 * qJD(2);
t294 = -t546 / 0.2e1 - t329 / 0.2e1;
t500 = t294 * qJD(2);
t357 = -t374 ^ 2 + t378 ^ 2;
t499 = t357 * qJD(2);
t498 = t374 * qJD(3);
t497 = t378 * qJD(3);
t493 = pkin(2) * t374 * qJD(2);
t492 = pkin(2) * t519;
t490 = t372 * t544;
t488 = t298 * t523;
t487 = t369 * t523;
t485 = qJD(5) * t551;
t484 = qJD(6) * t629;
t482 = t346 * t522;
t481 = t371 * t521;
t480 = qJD(2) * t543;
t358 = t372 * t511;
t479 = t374 * t519;
t473 = t616 * t603;
t468 = t361 * t585;
t467 = t544 / 0.2e1;
t466 = -t543 / 0.2e1;
t464 = -t542 / 0.2e1;
t463 = -t538 / 0.2e1;
t455 = t368 - t582;
t451 = pkin(3) * t496;
t449 = t298 * t496;
t448 = t496 * t376;
t301 = t496 * t346;
t447 = t496 * t372;
t443 = t590 + t588 + t594;
t442 = t372 * t448;
t441 = t376 * t447;
t380 = t455 * t466 + t389;
t421 = -t219 * t326 / 0.2e1 + t220 * t327 / 0.2e1;
t1 = -t380 + t421;
t31 = t317 * t455;
t440 = -t1 * qJD(1) + t31 * qJD(2);
t174 = pkin(5) * t616 - pkin(10) * t298 - t582;
t7 = -t174 * t537 + t648;
t439 = t7 * qJD(2) + t676;
t161 = t174 + t368;
t5 = -t161 * t537 + t648;
t438 = t5 * qJD(2) + t676;
t8 = t174 * t541 + t647;
t437 = t8 * qJD(2) + t677;
t6 = t161 * t541 + t647;
t436 = t6 * qJD(2) + t677;
t410 = t219 * t489 + t220 * t587;
t3 = (t346 * t466 + t410) * pkin(4) + t389;
t32 = t317 * t582;
t435 = -t3 * qJD(1) - t32 * qJD(2);
t381 = (t322 / 0.2e1 + t588) * t298 + (-t323 / 0.2e1 + t589) * t616 + t418;
t23 = t372 * t381;
t432 = qJD(2) * t23;
t43 = -t298 * t61 + t628 * t636;
t416 = t467 + t473;
t46 = t463 + t569 / 0.2e1 - t416 * t372;
t431 = qJD(1) * t46 - qJD(2) * t43;
t44 = t298 * t62 - t551 * t636;
t45 = t464 - t568 / 0.2e1 + t416 * t376;
t430 = qJD(1) * t45 - qJD(2) * t44;
t422 = t616 * t632 + t624 * t630;
t55 = t467 - t422;
t57 = t298 * t637 - t616 * t636;
t429 = qJD(1) * t55 - qJD(2) * t57;
t427 = t553 - t557;
t426 = t298 * t361 - t556;
t424 = t616 * t635;
t419 = t323 * t631 + t594 * t616;
t417 = -t298 * t589 + t588 * t616;
t118 = qJD(6) * t294 - t616 * t627;
t412 = t442 * t622;
t388 = -t172 * t657 + t654 * t624;
t397 = (t172 * t587 + t489 * t624) * pkin(4);
t11 = t397 + t388;
t200 = -t326 * t333 + t327 * t334;
t390 = -t636 * t657 + t654 * t637;
t398 = (t489 * t637 + t587 * t636) * pkin(4);
t9 = t398 + t390;
t406 = t11 * qJD(1) + t9 * qJD(2) - t200 * qJD(3);
t403 = t161 / 0.2e1 + t419;
t402 = t174 / 0.2e1 + t417;
t26 = t376 * t381;
t401 = -qJD(2) * t26 - t333 * t517;
t33 = t372 * t403;
t400 = -qJD(2) * t33 - t322 * t516 + t667;
t35 = t376 * t403;
t399 = qJD(2) * t35 - t322 * t517 + t666;
t229 = t443 * t372;
t39 = t376 * t402;
t392 = qJD(2) * t39 + qJD(3) * t229 - t361 * t514 + t666;
t230 = t443 * t376;
t37 = t372 * t402;
t391 = -t37 * qJD(2) + qJD(3) * t230 - t361 * t513 + t667;
t352 = t494 * qJD(6);
t320 = t333 * t514;
t303 = t346 * t344 * qJD(2);
t300 = t496 * t344;
t289 = t616 * t520;
t237 = t244 * qJD(2);
t235 = t243 * qJD(2);
t232 = t334 * t584 + (t322 + t361) * t583;
t231 = t322 * t585 + t334 * t586 + t468;
t197 = t496 * t294;
t194 = (t630 + t631) * t376;
t191 = -t537 / 0.2e1 + t286;
t190 = t541 / 0.2e1 + t298 * t586;
t183 = t190 * qJD(6);
t182 = t189 * qJD(6);
t179 = t628 * qJD(5);
t177 = t186 * qJD(6);
t176 = t185 + t511;
t175 = -t184 - t512;
t146 = pkin(4) * t409 + t332;
t144 = t441 - t527;
t143 = -t442 + t527;
t115 = t635 * t621;
t94 = -t420 + t495;
t83 = -t298 * t487 - t177;
t70 = t614 * t584;
t67 = t614 * t585;
t60 = qJD(6) * t192 - t571;
t59 = -t182 + t573;
t58 = -t177 + (t441 + t487) * t298;
t56 = t467 + t422;
t54 = (-qJD(6) - t627) * t621 - t494 * t449;
t53 = t396 + t387;
t50 = qJD(6) * t191 + t447 * t616 + t571;
t49 = t183 + t528 - t573;
t48 = t568 / 0.2e1 - t616 * t158 + t464 + t376 * t467;
t47 = -t569 / 0.2e1 + t372 * t473 + t463 - t490 / 0.2e1;
t40 = t174 * t583 - t376 * t417 + t640;
t38 = t174 * t586 + t372 * t417 + t641;
t36 = t161 * t583 - t376 * t419 + t640;
t34 = t161 * t586 + t372 * t419 + t641;
t25 = t361 * t286 + t613 * t376 + t646;
t24 = t298 * t468 + t613 * t372 - t645;
t12 = t397 - t388;
t10 = t398 - t390;
t4 = -t389 + (t410 + t444) * pkin(4);
t2 = t380 + t421;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t51, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t481, -t480, 0, 0, 0, 0, 0 (-t375 * t519 - t379 * t498) * t371 (t374 * t521 - t379 * t497) * t371, 0, 0, 0, 0, 0, t246 * t496 + t344 * t481, t245 * t496 - t346 * t481 (t219 * t616 + t220 * t298) * qJD(2) + t581, t532 + (-t219 * t636 + t220 * t637 + t317 * t544) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t56 * qJD(5), 0, 0, 0, 0, 0 (-(t376 * t544 - t542) * t298 + t219 * t628) * qJD(2) + t48 * qJD(6) + t496 * t670 ((t490 + t538) * t298 + t219 * t551) * qJD(2) + t47 * qJD(6) + t496 * t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t331 * qJD(3) - t374 * t480, t330 * qJD(3) - t378 * t480, 0, 0, 0, 0, 0, t625, t626, t662, t2 * qJD(2) + (t172 * t327 - t326 * t624) * qJD(3) + t12 * qJD(4), 0, 0, 0, 0, 0, qJD(4) * t70 - t516 * t624 + t675, qJD(4) * t67 + t517 * t624 + t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t625, t626, t662, t4 * qJD(2) + t12 * qJD(3) + (t172 * t370 - t574 * t624) * t579, 0, 0, 0, 0, 0, qJD(3) * t70 - t513 * t624 + t675, qJD(3) * t67 + t514 * t624 + t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t48 - qJD(6) * t127 + t496 * t643, qJD(2) * t47 + qJD(6) * t126 + t496 * t642; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t496 * t243, -t496 * t244, t581, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t55 - t532, 0, 0, 0, 0, 0, -qJD(6) * t45 + t496 * t669, -qJD(6) * t46 + t496 * t668; 0, 0, 0, 0, t374 * t497, t357 * qJD(3), 0, 0, 0, -pkin(2) * t498, -pkin(2) * t497, t344 * t301, t496 * t268, 0, 0, 0, qJD(3) * t292 - t346 * t515, qJD(3) * t293 - t344 * t515, qJD(5) * t88, qJD(3) * t31 - qJD(4) * t32 + qJD(5) * t57, t369 * t449 * t616 - t358 * t633, qJD(6) * t199 - t298 * t412, t372 * t484 + t496 * t86, t376 * t484 - t496 * t84, -t496 * t629, qJD(3) * t5 + qJD(4) * t7 + qJD(5) * t85 + qJD(6) * t44, qJD(3) * t6 + qJD(4) * t8 + qJD(5) * t87 + qJD(6) * t43; 0, 0, 0, 0, t479, t499, t497, -t498, 0, -pkin(8) * t497 - t493, pkin(8) * t498 - t492, t303, t505, -t300, t301, 0, t502 + t610, -t611 - t623 (-t548 - t549) * qJD(3) + t53 * qJD(4) + t663 (-t326 * t637 + t327 * t636) * qJD(3) + t10 * qJD(4) + t94 * qJD(5) + t440, t58, t54, t50, t49, t118 (t372 * t427 - t645) * qJD(3) + t24 * qJD(4) + t36 * qJD(6) + t438 (t376 * t427 + t646) * qJD(3) + t25 * qJD(4) + t34 * qJD(6) + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, t505, -t300, t301, 0, -t482 + t610, -t612 - t623, t53 * qJD(3) + (-t453 - t555) * t579 + t663, t10 * qJD(3) + (t370 * t636 - t574 * t637) * t579 + t146 * qJD(5) + t435, t58, t54, t50, t49, t118, t24 * qJD(3) + (t372 * t426 - t645) * qJD(4) + t40 * qJD(6) + t439, t25 * qJD(3) + (t376 * t426 + t646) * qJD(4) + t38 * qJD(6) + t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, qJD(3) * t94 + qJD(4) * t146 - t429, 0, 0, 0, 0, 0, t183 + t572, qJD(6) * t194 + t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t609, -t412 + t526, t191 * t496 + t372 * t424, t190 * t496 + t376 * t424, t197, qJD(3) * t36 + qJD(4) * t40 + qJD(5) * t190 - qJD(6) * t62 - t430, qJD(3) * t34 + qJD(4) * t38 + qJD(5) * t194 + qJD(6) * t61 - t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, t237, -t662, qJD(2) * t1 - qJD(4) * t11, 0, 0, 0, 0, 0, t673, t672; 0, 0, 0, 0, -t479, -t499, 0, 0, 0, t493, t492, -t303, -t505, 0, 0, 0, t507 - t502, t611, -qJD(4) * t52 - t663, -qJD(4) * t9 - qJD(5) * t93 - t440, t83, t115, t60, t59, -t118, qJD(4) * t23 - qJD(6) * t35 - t438 - t485, qJD(4) * t26 + qJD(6) * t33 + t179 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373 * t580, -t377 * t580, 0, t200 * qJD(4), t358, -t352, 0, 0, 0, t322 * t512 - t333 * t513, t322 * t511 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373 * t451, -t377 * t451, -t531 (-t333 * t574 + t334 * t370) * t579 - t406, t358, -t352, 0, 0, 0, qJD(6) * t231 - t333 * t448 + t432, qJD(6) * t232 + t320 - t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, 0, 0, 0, 0, 0, -t289, t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, -t207, t176, t175, -t500, qJD(4) * t231 - t323 * t511 - t399, qJD(4) * t232 + t323 * t512 - t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, t237, -t662, qJD(2) * t3 + qJD(3) * t11, 0, 0, 0, 0, 0, t673, t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303, -t505, 0, 0, 0, t507 + t482, t612, qJD(3) * t52 - t663, qJD(3) * t9 + qJD(5) * t145 - t435, t83, t115, t60, t59, -t118, -qJD(3) * t23 - qJD(6) * t39 - t439 - t485, -qJD(3) * t26 + qJD(6) * t37 + t179 - t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t373 * t578, t377 * t578, t531, t406, t358, -t352, 0, 0, 0, -qJD(6) * t229 + t333 * t516 - t432, -qJD(6) * t230 + t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, -t352, 0, 0, 0, t361 * t512, t361 * t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, 0, 0, 0, 0, 0, -t289, t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, -t207, t176, t175, -t500, -t360 * t511 - t392, t360 * t512 - t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530, qJD(3) * t93 - qJD(4) * t145 + t429, 0, 0, 0, 0, 0, -t182 + t528 - t572, qJD(6) * t193 - t496 * t628 - t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, 0, 0, 0, 0, 0, t289, -t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510, 0, 0, 0, 0, 0, t289, -t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t508 - t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t45 + t496 * t661, qJD(2) * t46 + t496 * t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t609, t441 * t622 - t526, -t192 * t496 - t372 * t488, t189 * t496 - t376 * t488, t197, qJD(3) * t35 + qJD(4) * t39 + qJD(5) * t189 + t430, -qJD(3) * t33 - qJD(4) * t37 - qJD(5) * t193 + t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t207, -t185, t184, t500, qJD(4) * t229 + t399, qJD(4) * t230 + t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t207, -t185, t184, t500, t392, t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, -t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
