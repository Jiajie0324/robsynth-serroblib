% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:03:30
% EndTime: 2019-03-08 23:04:06
% DurationCPUTime: 29.45s
% Computational Cost: add. (25367->710), mult. (55510->1006), div. (0->0), fcn. (67325->12), ass. (0->575)
t849 = qJD(3) + qJD(4);
t665 = sin(qJ(3));
t668 = cos(qJ(4));
t908 = t668 * t665;
t664 = sin(qJ(4));
t669 = cos(qJ(3));
t916 = t664 * t669;
t632 = t908 + t916;
t999 = cos(pkin(12));
t615 = t999 * t632;
t907 = t668 * t669;
t917 = t664 * t665;
t630 = -t907 + t917;
t661 = sin(pkin(12));
t926 = t661 * t630;
t1055 = t615 - t926;
t1030 = -t1055 / 0.2e1;
t1027 = t1055 / 0.2e1;
t560 = t999 * t630 + t632 * t661;
t1029 = -t560 / 0.2e1;
t1000 = cos(pkin(6));
t662 = sin(pkin(6));
t666 = sin(qJ(2));
t925 = t662 * t666;
t616 = -t1000 * t669 + t665 * t925;
t617 = t1000 * t665 + t669 * t925;
t788 = t668 * t616 + t664 * t617;
t1071 = t999 * t788;
t745 = t664 * t616 - t668 * t617;
t1075 = t661 * t745;
t352 = t1071 - t1075;
t1078 = t352 / 0.2e1;
t1072 = t999 * t745;
t1074 = t661 * t788;
t1082 = -t1072 - t1074;
t1117 = t1027 * t1082 - t1029 * t352 - t560 * t1078;
t663 = sin(qJ(6));
t667 = cos(qJ(6));
t670 = cos(qJ(2));
t924 = t662 * t670;
t284 = t1082 * t667 - t663 * t924;
t1122 = t284 * t1030 + t1117 * t667;
t583 = t632 * t924;
t573 = t999 * t583;
t584 = t630 * t924;
t927 = t661 * t584;
t433 = t573 - t927;
t953 = t433 * t663;
t1134 = -t953 / 0.2e1 + t1122;
t1143 = qJD(1) * t1134;
t283 = t1082 * t663 + t667 * t924;
t1123 = t283 * t1030 + t1117 * t663;
t952 = t433 * t667;
t1135 = t952 / 0.2e1 + t1123;
t1142 = qJD(1) * t1135;
t1011 = -t667 / 0.2e1;
t1010 = t667 / 0.2e1;
t337 = t352 * t1010;
t1101 = -t1011 * t352 + t337;
t1137 = t953 / 0.2e1 + t1122;
t1141 = qJD(2) * t1137 + qJD(6) * t1101;
t1012 = t663 / 0.2e1;
t1013 = -t663 / 0.2e1;
t1100 = (t1012 - t1013) * t352;
t1136 = -t952 / 0.2e1 + t1123;
t1140 = qJD(2) * t1136 + qJD(6) * t1100;
t1038 = -t352 / 0.2e1;
t1114 = t1078 + t1038;
t1128 = t1114 * t663;
t1139 = -qJD(2) * t1135 - qJD(6) * t1128;
t1127 = t1114 * t667;
t1138 = -qJD(2) * t1134 - qJD(6) * t1127;
t1133 = qJD(1) * t1127;
t1132 = qJD(1) * t1128;
t981 = t284 * t667;
t983 = t283 * t663;
t1124 = (t1082 - t981 - t983) * t352;
t1129 = t1124 * qJD(1);
t1118 = t1030 * t1082 + t1117;
t1126 = t1118 * qJD(1);
t1125 = t1118 * qJD(2);
t1045 = -pkin(9) - pkin(8);
t641 = t1045 * t669;
t844 = t1045 * t665;
t787 = -t664 * t641 - t668 * t844;
t1054 = -t632 * qJ(5) - t787;
t582 = -t668 * t641 + t664 * t844;
t694 = t630 * qJ(5) - t582;
t184 = -t999 * t1054 - t661 * t694;
t794 = t999 * t584;
t928 = t661 * t583;
t713 = t928 / 0.2e1 + t794 / 0.2e1;
t814 = -t924 / 0.2e1;
t779 = t560 * t814;
t295 = -t779 - t713;
t867 = t295 * qJD(1);
t1121 = t184 * t849 + t867;
t1040 = -t184 / 0.2e1;
t1041 = t184 / 0.2e1;
t1106 = t1041 + t1040;
t1120 = t1106 * t663;
t1119 = t1106 * t667;
t1060 = t661 * t1054;
t1073 = t999 * t694;
t1081 = -t1073 + t1060;
t1109 = t1081 * t1055 - t184 * t560;
t1096 = t1081 * t663;
t654 = -pkin(3) * t669 - pkin(2);
t598 = pkin(4) * t630 + t654;
t693 = pkin(5) * t560 - pkin(10) * t1055 + t598;
t159 = -t667 * t693 + t1096;
t1113 = -t159 * t1055 + t1109 * t663;
t1095 = t1081 * t667;
t160 = t663 * t693 + t1095;
t1112 = -t160 * t1055 + t1109 * t667;
t993 = t160 * t667;
t996 = t159 * t663;
t738 = t993 / 0.2e1 + t996 / 0.2e1;
t1111 = t352 * t738;
t657 = t663 ^ 2;
t1016 = t657 / 0.2e1;
t659 = t667 ^ 2;
t799 = t659 / 0.2e1 + t1016;
t1110 = t799 * t352;
t1108 = t1081 * t184;
t1009 = pkin(3) * t668;
t648 = t661 * t664 * pkin(3);
t620 = t1009 * t999 - t648;
t1020 = -t620 / 0.2e1;
t653 = pkin(4) + t1009;
t610 = t653 * t999 - t648;
t1022 = t610 / 0.2e1;
t1107 = t1022 + t1020;
t1093 = t667 * t184;
t1103 = t1093 / 0.2e1 + t184 * t1010;
t1094 = t663 * t184;
t1102 = t1094 / 0.2e1 + t184 * t1012;
t1098 = -t1082 / 0.2e1;
t651 = -pkin(4) * t999 - pkin(5);
t974 = t1081 * t651;
t967 = t1082 * t651;
t1090 = t1081 * t1078;
t650 = pkin(4) * t661 + pkin(10);
t1087 = t650 * t1110 - t967 / 0.2e1;
t1034 = t1071 / 0.2e1;
t1033 = t1072 / 0.2e1;
t1035 = t1073 / 0.2e1;
t1069 = t1055 * qJD(2);
t1085 = t560 * t1069;
t853 = qJD(2) * t560;
t1084 = -qJD(6) - t853;
t1079 = t1055 ^ 2;
t1064 = 0.2e1 * t1055;
t1028 = t560 / 0.2e1;
t1070 = t663 * t1055;
t720 = -t907 / 0.2e1 + t917 / 0.2e1;
t475 = (-t630 / 0.2e1 + t720) * t924;
t857 = t475 * qJD(1);
t1068 = t787 * t849 - t857;
t813 = t924 / 0.2e1;
t476 = t630 * t813 + t720 * t924;
t1067 = t476 * qJD(2) + t788 * t849;
t721 = -t916 / 0.2e1 - t908 / 0.2e1;
t778 = t632 * t814;
t477 = t721 * t924 + t778;
t1066 = t477 * qJD(2) + t745 * t849;
t1065 = t849 * t582;
t918 = t663 * t667;
t1063 = t918 * t1064;
t1059 = t849 * t1055;
t1057 = 0.2e1 * t1082;
t474 = (t632 / 0.2e1 + t721) * t924;
t858 = t474 * qJD(1);
t889 = qJD(2) * t654;
t1050 = -t632 * t889 + t858;
t656 = t665 * pkin(3);
t546 = t630 * t656 + t632 * t654;
t1049 = -qJD(2) * t546 + t858;
t374 = (t1016 - t659 / 0.2e1) * t1055;
t837 = qJD(2) * t918;
t145 = t1079 * t837 + t374 * t849;
t644 = t659 - t657;
t419 = -0.2e1 * t1055 * t837 + t644 * t849;
t1008 = t632 * pkin(4);
t355 = pkin(5) * t1055 + pkin(10) * t560 + t1008;
t343 = t355 + t656;
t923 = t663 * t343;
t166 = -t1093 + t923;
t1044 = -t166 / 0.2e1;
t1043 = -t283 / 0.2e1;
t1042 = t284 / 0.2e1;
t1039 = t1082 / 0.2e1;
t604 = -pkin(5) - t610;
t1026 = -t604 / 0.2e1;
t1025 = t604 / 0.2e1;
t793 = t999 * t664;
t611 = pkin(3) * t793 + t661 * t653;
t605 = pkin(10) + t611;
t1024 = -t605 / 0.2e1;
t1023 = t605 / 0.2e1;
t1021 = -t611 / 0.2e1;
t1019 = t620 / 0.2e1;
t1018 = t650 / 0.2e1;
t1017 = -t651 / 0.2e1;
t1014 = t661 / 0.2e1;
t1007 = t849 * t1118;
t1005 = pkin(3) * qJD(4);
t1004 = pkin(4) * qJD(4);
t1003 = qJD(3) * pkin(3);
t711 = (t1010 * t283 + t1013 * t284) * t560;
t842 = t663 * t925;
t434 = -t794 - t928;
t911 = t667 * t434;
t396 = t842 + t911;
t958 = t396 * t667;
t919 = t663 * t434;
t395 = t667 * t925 - t919;
t961 = t395 * t663;
t729 = -t958 / 0.2e1 + t961 / 0.2e1;
t65 = -t711 - t729;
t1002 = t65 * qJD(2);
t66 = -t711 + t729;
t1001 = t66 * qJD(2);
t718 = (-t159 * t667 + t160 * t663) * t560;
t990 = t166 * t663;
t915 = t667 * t343;
t165 = t915 + t1094;
t991 = t165 * t667;
t13 = (t990 + t991) * t1055 - t718;
t998 = t13 * qJD(2);
t920 = t663 * t355;
t180 = -t1093 + t920;
t986 = t180 * t663;
t912 = t667 * t355;
t179 = t912 + t1094;
t987 = t179 * t667;
t16 = (t986 + t987) * t1055 - t718;
t995 = t16 * qJD(2);
t992 = t165 * t663;
t989 = t166 * t667;
t988 = t179 * t663;
t985 = t180 * t667;
t984 = t283 * t560;
t982 = t284 * t560;
t971 = t184 * t433;
t970 = t184 * t1055;
t619 = (t661 * t668 + t793) * pkin(3);
t968 = t184 * t619;
t964 = t352 * t433;
t963 = t352 * t1055;
t962 = t352 * t619;
t960 = t395 * t667;
t959 = t396 * t663;
t955 = t433 * t604;
t954 = t433 * t651;
t774 = t799 * t605;
t698 = t1025 * t1055 - t560 * t774;
t737 = -t991 / 0.2e1 - t990 / 0.2e1;
t44 = t698 + t737;
t951 = t44 * qJD(2);
t697 = -t799 * t650 * t560 + t1027 * t651;
t736 = -t987 / 0.2e1 - t986 / 0.2e1;
t48 = t697 + t736;
t950 = t48 * qJD(2);
t948 = t1055 * t605;
t947 = t1055 * t661;
t946 = t560 ^ 2;
t945 = t560 * t604;
t943 = t1055 * t667;
t59 = -t283 * t395 + t284 * t396 + t964;
t940 = t59 * qJD(1);
t939 = t610 * t560;
t938 = t611 * t1055;
t937 = t630 * t632;
t936 = t66 * qJD(1);
t910 = t667 * t560;
t909 = t667 * t650;
t552 = t1055 * qJD(5);
t773 = -t573 / 0.2e1 + t927 / 0.2e1;
t780 = t1055 * t814;
t293 = t780 - t773;
t868 = t293 * qJD(1);
t903 = -t868 - t552;
t902 = qJD(5) * t560 - t867;
t880 = qJD(4) * t667;
t884 = qJD(3) * t667;
t901 = (t880 + t884) * t1055;
t900 = t657 + t659;
t748 = -t946 + t1079;
t207 = t748 * t663;
t899 = qJD(2) * t207;
t220 = t946 + t1079;
t208 = t220 * t663;
t898 = qJD(2) * t208;
t210 = t220 * t667;
t897 = qJD(2) * t210;
t441 = t598 * t1055;
t603 = t656 + t1008;
t261 = t560 * t603 + t441;
t896 = qJD(2) * t261;
t442 = t598 * t560;
t262 = t1055 * t603 - t442;
t895 = qJD(2) * t262;
t281 = -t1008 * t560 - t441;
t894 = qJD(2) * t281;
t282 = -t1008 * t1055 + t442;
t893 = qJD(2) * t282;
t547 = -t630 * t654 + t632 * t656;
t891 = qJD(2) * t547;
t888 = qJD(2) * t662;
t887 = qJD(2) * t666;
t886 = qJD(2) * t669;
t885 = qJD(3) * t663;
t883 = qJD(4) * t352;
t882 = qJD(4) * t654;
t881 = qJD(4) * t663;
t879 = qJD(6) * t663;
t878 = qJD(6) * t667;
t642 = t662 ^ 2 * t666 * t670;
t100 = t1082 * t434 - t642 + t964;
t877 = t100 * qJD(1);
t724 = t1020 * t560 + t1027 * t619;
t684 = t939 / 0.2e1 - t938 / 0.2e1 + t724;
t795 = t999 * t560;
t702 = (-t947 / 0.2e1 + t795 / 0.2e1) * pkin(4);
t109 = t702 - t684;
t876 = t109 * qJD(2);
t209 = t748 * t667;
t873 = t209 * qJD(2);
t219 = t583 * t788 + t584 * t745 - t642;
t872 = t219 * qJD(1);
t871 = t220 * qJD(2);
t870 = t748 * qJD(2);
t727 = -t1021 * t560 + t1022 * t1055;
t618 = t1008 / 0.2e1;
t848 = t618 + t656 / 0.2e1;
t226 = t727 + t848;
t869 = t226 * qJD(2);
t841 = -t999 / 0.2e1;
t715 = -t1014 * t560 + t1055 * t841;
t318 = (-t632 / 0.2e1 + t715) * pkin(4);
t866 = t318 * qJD(2);
t865 = t374 * qJD(2);
t864 = t374 * qJD(6);
t863 = t1070 * qJD(2);
t800 = 0.2e1 * t1028;
t377 = t800 * t663;
t368 = t377 * qJD(2);
t380 = t800 * t667;
t369 = t380 * qJD(2);
t538 = t560 * t1010;
t381 = -t910 / 0.2e1 - t538;
t862 = t381 * qJD(2);
t548 = t657 * t560;
t549 = t659 * t560;
t387 = t548 + t549;
t861 = t387 * qJD(2);
t388 = t644 * t1079;
t860 = t388 * qJD(2);
t422 = -t642 + (t616 * t665 + t617 * t669) * t924;
t859 = t422 * qJD(1);
t518 = t630 ^ 2 - t632 ^ 2;
t856 = t518 * qJD(2);
t557 = -t926 / 0.2e1 + t615 / 0.2e1;
t855 = t557 * qJD(2);
t612 = t619 * qJD(4);
t658 = t665 ^ 2;
t660 = t669 ^ 2;
t645 = t660 - t658;
t852 = t645 * qJD(2);
t851 = t665 * qJD(3);
t850 = t669 * qJD(3);
t847 = -t387 * qJD(5) - t936;
t846 = pkin(2) * t665 * qJD(2);
t845 = pkin(2) * t886;
t839 = t630 * t889;
t836 = t667 * t552;
t835 = qJD(6) * t560 * t1055;
t398 = t1055 * t853;
t834 = qJD(2) * t937;
t833 = t662 * t887;
t832 = t670 * t888;
t646 = t663 * t878;
t831 = t665 * t850;
t823 = t1055 * t1038;
t818 = t651 * t1012;
t815 = t925 / 0.2e1;
t812 = -t919 / 0.2e1;
t811 = t650 * t1013;
t810 = -t911 / 0.2e1;
t809 = t909 / 0.2e1;
t805 = t1039 + t1098;
t792 = pkin(3) * t849;
t791 = t900 * t352;
t543 = t900 * t620;
t790 = t900 * t650;
t789 = (t658 + t660) * t670;
t566 = t849 * t632;
t786 = t849 * t667;
t394 = t849 * t560;
t784 = t849 * t663;
t783 = t1079 * t646;
t772 = t1020 + t1017 + t1026;
t771 = t663 * t786;
t770 = t560 * t1059;
t769 = t1055 * t394;
t768 = t667 * t784;
t11 = -t159 * t165 + t160 * t166 + t1108;
t731 = t1041 * t1082 + t1090;
t672 = t1042 * t166 + t1043 * t165 - t1111 + t731;
t2 = -t955 / 0.2e1 + t729 * t605 + t672;
t767 = t2 * qJD(1) + t11 * qJD(2);
t12 = -t159 * t179 + t160 * t180 + t1108;
t732 = t1039 * t184 + t1090;
t673 = t1042 * t180 + t1043 * t179 - t1111 + t732;
t4 = -t954 / 0.2e1 + t729 * t650 + t673;
t766 = t4 * qJD(1) + t12 * qJD(2);
t671 = t1038 * t1081 + t1082 * t1040 + t603 * t814 + t731;
t728 = -t433 * t610 / 0.2e1 + t434 * t611 / 0.2e1;
t14 = -t671 + t728;
t70 = t598 * t603;
t765 = -t14 * qJD(1) + t70 * qJD(2);
t676 = -t1098 * t184 + t1090 - t732;
t716 = t1014 * t434 + t433 * t841;
t17 = (t632 * t813 + t716) * pkin(4) + t676;
t73 = t1008 * t598;
t764 = -t17 * qJD(1) + t73 * qJD(2);
t22 = t165 * t560 + t1113;
t763 = t22 * qJD(2) + t1142;
t23 = -t166 * t560 + t1112;
t762 = t23 * qJD(2) + t1143;
t24 = t179 * t560 + t1113;
t761 = t24 * qJD(2) + t1142;
t25 = -t180 * t560 + t1112;
t760 = t25 * qJD(2) + t1143;
t32 = t970 - (t993 + t996) * t560;
t734 = t981 / 0.2e1 + t983 / 0.2e1;
t691 = -t734 * t560 + t963 / 0.2e1;
t730 = -t960 / 0.2e1 - t959 / 0.2e1;
t46 = t691 + t730;
t759 = qJD(1) * t46 + qJD(2) * t32;
t90 = -t1070 * t184 + t159 * t560;
t722 = t815 + t823;
t95 = t810 - t984 / 0.2e1 - t722 * t663;
t756 = qJD(1) * t95 - qJD(2) * t90;
t91 = -t160 * t560 + t184 * t943;
t94 = t812 + t982 / 0.2e1 + t722 * t667;
t755 = qJD(1) * t94 - qJD(2) * t91;
t754 = t989 - t992;
t753 = t985 - t988;
t747 = -t945 - t948;
t746 = -t1055 * t650 - t560 * t651;
t173 = t805 * t667;
t678 = -(t1025 + t1017) * t560 + (t1024 + t1018) * t1055 + t724;
t51 = t663 * t678;
t744 = -t173 * qJD(1) + t51 * qJD(2);
t254 = t654 * t656;
t726 = -t584 * t664 / 0.2e1 - t583 * t668 / 0.2e1;
t92 = (t665 * t813 + t726) * pkin(3);
t743 = -t92 * qJD(1) + t254 * qJD(2);
t742 = t1055 * t1084;
t688 = -t963 / 0.2e1 + t1082 * t1028;
t120 = t815 + t688;
t123 = -t1081 * t560 + t970;
t741 = qJD(1) * t120 - qJD(2) * t123;
t735 = t985 / 0.2e1 - t988 / 0.2e1;
t733 = t1081 * t1025 + t968 / 0.2e1;
t725 = t1023 * t560 + t1026 * t1055;
t723 = t1017 * t1055 + t1018 * t560;
t266 = qJD(6) * t557 + t1085;
t717 = t771 * t1064;
t674 = t734 * t620 - t352 * t774 + t1082 * t1025 + t962 / 0.2e1;
t10 = t674 + t1087;
t260 = t543 * t605 + t604 * t619;
t6 = -t974 / 0.2e1 + (t1019 * t160 + t1023 * t180 + t1044 * t650) * t667 + (t1018 * t165 + t1019 * t159 + t1024 * t179) * t663 + t733;
t712 = t10 * qJD(1) + t6 * qJD(2) + t260 * qJD(3);
t710 = t343 / 0.2e1 + t725;
t709 = t355 / 0.2e1 + t723;
t20 = (t180 / 0.2e1 + t1044) * t667 + (-t179 / 0.2e1 + t165 / 0.2e1) * t663;
t708 = -qJD(2) * t20 - qJD(3) * t543;
t686 = -t968 / 0.2e1 - t184 * t1021 + t1107 * t1081;
t704 = (-t1014 * t184 + t1081 * t841) * pkin(4);
t26 = t704 + t686;
t675 = -t962 / 0.2e1 - t352 * t1021 + t1107 * t1082;
t703 = (-t1014 * t352 + t1082 * t841) * pkin(4);
t28 = t703 + t675;
t399 = -t610 * t619 + t611 * t620;
t707 = t28 * qJD(1) + t26 * qJD(2) - t399 * qJD(3);
t181 = t1035 - t1073 / 0.2e1;
t197 = t1033 - t1072 / 0.2e1;
t706 = -qJD(1) * t197 - qJD(2) * t181 + qJD(3) * t619;
t199 = t1034 - t1071 / 0.2e1;
t705 = -qJD(1) * t199 + qJD(3) * t620;
t76 = -t667 * t710 + t1120;
t701 = -qJD(2) * t76 - t604 * t885 + t1132;
t74 = t663 * t710 + t1119;
t700 = -qJD(2) * t74 - t604 * t884 + t1133;
t172 = t805 * t663;
t54 = t667 * t678;
t699 = -qJD(1) * t172 - qJD(2) * t54 - t619 * t885;
t452 = t772 * t663;
t86 = -t667 * t709 + t1120;
t690 = -qJD(2) * t86 + qJD(3) * t452 - t651 * t881 + t1132;
t453 = t772 * t667;
t84 = t663 * t709 + t1119;
t689 = -qJD(2) * t84 + qJD(3) * t453 - t651 * t880 + t1133;
t683 = -t948 / 0.2e1 - t945 / 0.2e1 + t724;
t647 = t665 * t886;
t640 = t644 * qJD(6);
t613 = t620 * qJD(4);
t601 = t663 * t612;
t565 = t849 * t630;
t541 = t667 * t1069;
t519 = t543 * qJD(4);
t460 = t475 * qJD(2);
t458 = t474 * qJD(2);
t455 = t620 * t1011 + (t604 + t651) * t1010;
t454 = t1012 * t604 + t1013 * t620 + t818;
t385 = t849 * t557;
t382 = (t1029 + t1028) * t667;
t379 = t910 / 0.2e1 - t538;
t366 = t377 * qJD(6);
t363 = t1070 * qJD(5);
t357 = t369 + t878;
t356 = -t368 - t879;
t319 = pkin(4) * t715 + t618;
t317 = t768 - t865;
t316 = -t771 + t865;
t296 = -t779 + t713;
t294 = t780 + t773;
t291 = t295 * qJD(2);
t289 = t293 * qJD(2);
t288 = t296 * qJD(2);
t286 = t294 * qJD(2);
t253 = t1084 * t1063;
t227 = -t727 + t848;
t206 = t398 * t659 - t864;
t205 = t398 * t657 + t864;
t200 = 0.2e1 * t1034 - t1075;
t198 = t1074 + 0.2e1 * t1033;
t182 = -t1060 + 0.2e1 * t1035;
t174 = t1057 * t1011;
t171 = t1057 * t1012;
t129 = qJD(6) * t380 - t873;
t128 = -t366 + t899;
t126 = -t864 - (t1069 * t659 + t768) * t560;
t125 = t864 - (t1069 * t657 - t771) * t560;
t121 = t815 - t688;
t118 = (-qJD(6) + t853) * t1063 + t849 * (t548 - t549);
t110 = t702 + t684;
t99 = t379 * qJD(6) + t1055 * t784 + t873;
t98 = -t899 + t901;
t97 = -t982 / 0.2e1 + t1055 * t337 + t812 + t667 * t815;
t96 = t984 / 0.2e1 + t663 * t823 + t810 - t842 / 0.2e1;
t93 = pkin(3) * t726 + t656 * t814;
t87 = t912 / 0.2e1 - t723 * t667 + t1102;
t85 = -t920 / 0.2e1 + t723 * t663 + t1103;
t82 = -0.2e1 * t1110;
t77 = t915 / 0.2e1 - t725 * t667 + t1102;
t75 = -t923 / 0.2e1 + t725 * t663 + t1103;
t53 = t909 * t1030 - t651 * t538 + t683 * t667 + t1096;
t52 = t1055 * t811 - t560 * t818 + t683 * t663 - t1095;
t47 = t697 - t736;
t45 = t691 - t730;
t43 = t698 - t737;
t29 = t703 - t675;
t27 = t704 - t686;
t19 = t989 / 0.2e1 - t992 / 0.2e1 + t735;
t18 = -t676 + (t716 + t778) * pkin(4);
t15 = t671 + t728;
t9 = t674 - t1087;
t5 = t166 * t809 + t165 * t811 + t974 / 0.2e1 + t738 * t620 + t735 * t605 + t733;
t3 = t396 * t809 + t395 * t811 + t954 / 0.2e1 + t673;
t1 = t958 * t1023 + t961 * t1024 + t955 / 0.2e1 + t672;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t422, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t219, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t100, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t59 + t1124 * t849; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t833, -t832, 0, 0, 0, 0, 0, 0, 0, 0 (-t666 * t886 - t670 * t851) * t662 (t665 * t887 - t670 * t850) * t662, t789 * t888, t859 + (-pkin(2) * t666 + pkin(8) * t789) * t888, 0, 0, 0, 0, 0, 0, t477 * t849 + t630 * t833, t476 * t849 + t632 * t833 (t583 * t632 + t584 * t630) * qJD(2), t872 + (-t582 * t584 + t583 * t787 + t654 * t925) * qJD(2) + t93 * qJD(3), 0, 0, 0, 0, 0, 0, t294 * t849 + t560 * t833, t1055 * t833 + t296 * t849 (t1055 * t433 - t434 * t560) * qJD(2) + t1007, t877 + (t1081 * t434 + t598 * t925 + t971) * qJD(2) + t15 * qJD(3) + t18 * qJD(4) + t121 * qJD(5), 0, 0, 0, 0, 0, 0 (t1070 * t433 + t395 * t560) * qJD(2) + t97 * qJD(6) + t849 * t1136 (-t396 * t560 + t433 * t943) * qJD(2) + t96 * qJD(6) + t849 * t1137, t849 * t65 + (-t959 - t960) * t1069, t940 + (-t159 * t395 + t160 * t396 + t971) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t45 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t617 * qJD(3) - t665 * t832, t616 * qJD(3) - t669 * t832, 0, 0, 0, 0, 0, 0, 0, 0, t1066, t1067, 0, t93 * qJD(2) + (-t664 * t788 + t668 * t745) * t1003, 0, 0, 0, 0, 0, 0, -qJD(3) * t1082 + qJD(4) * t198 + t286, qJD(3) * t352 + qJD(4) * t200 + t288, t1125, t15 * qJD(2) + (-t1082 * t610 - t352 * t611) * qJD(3) + t29 * qJD(4), 0, 0, 0, 0, 0, 0, qJD(4) * t174 - t1082 * t884 + t1140, qJD(4) * t171 + t1082 * t885 + t1141, -qJD(3) * t791 + t82 * qJD(4) + t1002, t1129 + t1 * qJD(2) + (t1082 * t604 - t605 * t791) * qJD(3) + t9 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1066, t1067, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t198 - qJD(4) * t1082 + t286, qJD(3) * t200 + t288 + t883, t1125, t18 * qJD(2) + t29 * qJD(3) + (-t1082 * t999 - t352 * t661) * t1004, 0, 0, 0, 0, 0, 0, qJD(3) * t174 - t1082 * t880 + t1140, qJD(3) * t171 + t1082 * t881 + t1141, t82 * qJD(3) - t883 * t900 + t1002, t1129 + t3 * qJD(2) + t9 * qJD(3) + (-t352 * t790 + t967) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t97 - qJD(6) * t284 + t1100 * t849, qJD(2) * t96 + qJD(6) * t283 + t1101 * t849, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t859, 0, 0, 0, 0, 0, 0, -t849 * t474, -t849 * t475, 0, -qJD(3) * t92 - t872, 0, 0, 0, 0, 0, 0, t849 * t293, t849 * t295, t1007, -qJD(3) * t14 - qJD(4) * t17 - qJD(5) * t120 - t877, 0, 0, 0, 0, 0, 0, -qJD(6) * t94 + t1135 * t849, -qJD(6) * t95 + t1134 * t849, t66 * t849, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t46 - t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t831, t645 * qJD(3), 0, -t831, 0, 0, -pkin(2) * t851, -pkin(2) * t850, 0, 0, -t630 * t566, t849 * t518, 0, t849 * t937, 0, 0, qJD(3) * t546 + t632 * t882, qJD(3) * t547 - t630 * t882, 0, qJD(3) * t254, -t769, -t849 * t748, 0, t770, 0, 0, qJD(3) * t261 - qJD(4) * t281, qJD(3) * t262 - qJD(4) * t282, qJD(5) * t220, qJD(3) * t70 + qJD(4) * t73 + qJD(5) * t123, -t659 * t769 - t783, -t388 * qJD(6) + t560 * t717, t209 * t849 - t663 * t835, -t657 * t769 + t783, -t207 * t849 - t667 * t835, t770, qJD(3) * t22 + qJD(4) * t24 + qJD(5) * t208 + qJD(6) * t91, qJD(3) * t23 + qJD(4) * t25 + qJD(5) * t210 + qJD(6) * t90, -qJD(3) * t13 - qJD(4) * t16, qJD(3) * t11 + qJD(4) * t12 + qJD(5) * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t647, t852, t850, -t647, -t851, 0, -pkin(8) * t850 - t846, pkin(8) * t851 - t845, 0, 0, -t834, t856, -t565, t834, -t566, 0, -t1049 - t1065, t1068 + t891 (t630 * t668 - t632 * t664) * t1003 (-t582 * t668 - t664 * t787) * t1003 + t743, -t398, -t870, -t394, t1085, -t1059, 0, -qJD(3) * t1081 + qJD(4) * t182 + t868 + t896, t1121 + t895 (-t938 + t939) * qJD(3) + t110 * qJD(4) + t1126 (-t1081 * t610 - t184 * t611) * qJD(3) + t27 * qJD(4) + t227 * qJD(5) + t765, t126, t118, t99, t125, t98, t266 (t663 * t747 - t1095) * qJD(3) + t52 * qJD(4) + t77 * qJD(6) + t763 (t667 * t747 + t1096) * qJD(3) + t53 * qJD(4) + t75 * qJD(6) + t762, qJD(3) * t754 + t19 * qJD(4) + t936 - t998 (t1081 * t604 + t605 * t754) * qJD(3) + t5 * qJD(4) + t43 * qJD(5) + t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t834, t856, -t565, t834, -t566, 0, -t1050 - t1065, t1068 - t839, 0, 0, -t398, -t870, -t394, t1085, -t1059, 0, qJD(3) * t182 - qJD(4) * t1081 + t868 - t894, t1121 - t893, t110 * qJD(3) + (t795 - t947) * t1004 + t1126, t27 * qJD(3) + (-t1081 * t999 - t184 * t661) * t1004 + t319 * qJD(5) + t764, t126, t118, t99, t125, t98, t266, t52 * qJD(3) + (t663 * t746 - t1095) * qJD(4) + t87 * qJD(6) + t761, t53 * qJD(3) + (t667 * t746 + t1096) * qJD(4) + t85 * qJD(6) + t760, t19 * qJD(3) + qJD(4) * t753 + t936 - t995, t5 * qJD(3) + (t650 * t753 + t974) * qJD(4) + t47 * qJD(5) + t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t871, qJD(3) * t227 + qJD(4) * t319 - t741, 0, 0, 0, 0, 0, 0, t898, qJD(6) * t382 + t897, 0, qJD(3) * t43 + qJD(4) * t47 + t759; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t717 - t860, t379 * t849 + t663 * t742, t145, t667 * t742, t385, qJD(3) * t77 + qJD(4) * t87 - qJD(6) * t160 - t755, qJD(3) * t75 + qJD(4) * t85 + qJD(5) * t382 + qJD(6) * t159 - t756, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t458, t460, 0, qJD(2) * t92, 0, 0, 0, 0, 0, 0, qJD(4) * t197 - t289, qJD(4) * t199 - t291, -t1125, qJD(2) * t14 - qJD(4) * t28, 0, 0, 0, 0, 0, 0, -qJD(4) * t173 + t1139, qJD(4) * t172 + t1138, -t1001, -qJD(2) * t2 + qJD(4) * t10 - t1129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t647, -t852, 0, t647, 0, 0, t846, t845, 0, 0, t834, -t856, 0, -t834, 0, 0, t1049, t857 - t891, 0, -t743, t398, t870, 0, -t1085, 0, 0, qJD(4) * t181 - t896 + t903, -t895 + t902, -qJD(4) * t109 - t1126, -qJD(4) * t26 - qJD(5) * t226 - t765, t206, t253, t129, t205, t128, -t266, qJD(4) * t51 + qJD(6) * t76 - t763 - t836, qJD(4) * t54 + qJD(6) * t74 + t363 - t762, qJD(4) * t20 + t847 + t998, qJD(4) * t6 + qJD(5) * t44 - t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t664 * t1005, -t668 * t1005, 0, 0, 0, 0, 0, 0, 0, 0, -t612, -t613, 0, t399 * qJD(4), t646, t640, 0, -t646, 0, 0, t604 * t879 - t612 * t667, t604 * t878 + t601, t519, t260 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t664 * t792, -t668 * t792, 0, 0, 0, 0, 0, 0, 0, 0, -t612 - t706, -t613 - t705, -t876 (-t619 * t999 + t620 * t661) * t1004 - t707, t646, t640, 0, -t646, 0, 0, t454 * qJD(6) - t619 * t786 + t744, qJD(6) * t455 + t601 - t699, t519 - t708 (t619 * t651 + t620 * t790) * qJD(4) + t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1069, t853, 0, -t869, 0, 0, 0, 0, 0, 0, -t541, t863, -t861, t951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, t419, t357, t316, t356, -t855, qJD(4) * t454 - t605 * t878 - t701, qJD(4) * t455 + t605 * t879 - t700, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t458, t460, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t197 - t289, -qJD(3) * t199 - t291, -t1125, qJD(2) * t17 + qJD(3) * t28, 0, 0, 0, 0, 0, 0, qJD(3) * t173 + t1139, -qJD(3) * t172 + t1138, -t1001, -qJD(2) * t4 - qJD(3) * t10 - t1129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t834, -t856, 0, -t834, 0, 0, t1050, t857 + t839, 0, 0, t398, t870, 0, -t1085, 0, 0, -qJD(3) * t181 + t894 + t903, t893 + t902, qJD(3) * t109 - t1126, qJD(3) * t26 + qJD(5) * t318 - t764, t206, t253, t129, t205, t128, -t266, -qJD(3) * t51 + qJD(6) * t86 - t761 - t836, -qJD(3) * t54 + qJD(6) * t84 + t363 - t760, -qJD(3) * t20 + t847 + t995, -qJD(3) * t6 + qJD(5) * t48 - t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t664 * t1003, t668 * t1003, 0, 0, 0, 0, 0, 0, 0, 0, t706, t705, t876, t707, t646, t640, 0, -t646, 0, 0, -qJD(6) * t452 + t619 * t884 - t744, -qJD(6) * t453 + t699, t708, -t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t646, t640, 0, -t646, 0, 0, t651 * t879, t651 * t878, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1069, t853, 0, t866, 0, 0, 0, 0, 0, 0, -t541, t863, -t861, t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, t419, t357, t316, t356, -t855, -t650 * t878 - t690, t650 * t879 - t689, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1059, -t394, -t871, qJD(3) * t226 - qJD(4) * t318 + t741, 0, 0, 0, 0, 0, 0, -t366 - t898 + t901, qJD(6) * t381 - t1070 * t849 - t897, t849 * t387, -qJD(3) * t44 - qJD(4) * t48 - t759; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1069, -t853, 0, t869, 0, 0, 0, 0, 0, 0, t541, -t863, t861, -t951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1069, -t853, 0, -t866, 0, 0, 0, 0, 0, 0, t541, -t863, t861, -t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t862 - t878, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t94 + t1128 * t849, qJD(2) * t95 + t1127 * t849, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, t1064 * t768 + t860, t1085 * t663 - t380 * t849, -t145, t1085 * t667 + t377 * t849, t385, -qJD(3) * t76 - qJD(4) * t86 + qJD(5) * t377 + t755, -qJD(3) * t74 - qJD(4) * t84 - qJD(5) * t381 + t756, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, -t419, -t369, t317, t368, t855, qJD(4) * t452 + t701, qJD(4) * t453 + t700, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, -t419, -t369, t317, t368, t855, t690, t689, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, -t862, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
