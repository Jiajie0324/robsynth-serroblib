% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP1_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:46:48
% EndTime: 2019-03-09 20:47:00
% DurationCPUTime: 4.54s
% Computational Cost: add. (7860->358), mult. (17927->578), div. (0->0), fcn. (16726->8), ass. (0->200)
t193 = cos(qJ(4));
t187 = t193 * qJ(5);
t312 = sin(qJ(3));
t265 = t312 * pkin(2);
t179 = t265 + pkin(9);
t286 = t179 * t193;
t152 = t187 + t286;
t190 = sin(pkin(10));
t191 = sin(qJ(4));
t284 = -qJ(5) - t179;
t231 = t284 * t191;
t294 = cos(pkin(10));
t110 = t152 * t190 - t231 * t294;
t111 = t152 * t294 + t190 * t231;
t240 = t294 * t191;
t154 = t190 * t193 + t240;
t149 = t154 * qJD(4);
t232 = qJD(4) * t294;
t275 = qJD(4) * t191;
t150 = -t190 * t275 + t193 * t232;
t285 = t190 * t191;
t321 = t294 * t193 - t285;
t185 = t193 * qJD(5);
t313 = cos(qJ(3));
t244 = t313 * qJD(3);
t229 = pkin(2) * t244;
t222 = t193 * t229;
t230 = qJD(4) * t284;
t125 = t191 * t230 + t185 + t222;
t203 = (-t229 - qJD(5)) * t191 + t193 * t230;
t69 = t125 * t190 - t203 * t294;
t70 = t125 * t294 + t190 * t203;
t317 = t110 * t150 - t111 * t149 + t69 * t154 + t321 * t70;
t330 = 0.2e1 * t317;
t309 = -qJ(5) - pkin(9);
t241 = qJD(4) * t309;
t147 = t191 * t241 + t185;
t273 = t191 * qJD(5);
t208 = t193 * t241 - t273;
t102 = t147 * t190 - t208 * t294;
t103 = t147 * t294 + t190 * t208;
t166 = pkin(9) * t193 + t187;
t128 = t166 * t190 - t309 * t240;
t129 = t294 * t166 + t309 * t285;
t318 = t102 * t154 + t103 * t321 + t128 * t150 - t129 * t149;
t329 = 0.2e1 * t318;
t192 = sin(qJ(2));
t194 = cos(qJ(2));
t159 = t313 * t192 + t312 * t194;
t186 = qJD(4) * t193;
t245 = qJD(3) * t312;
t257 = t312 * t192;
t316 = qJD(2) * t257 + t192 * t245 - t194 * (t313 * qJD(2) + t244);
t201 = t191 * t316;
t196 = -t159 * t186 + t201;
t328 = t318 + t317;
t188 = t191 ^ 2;
t189 = t193 ^ 2;
t277 = t188 - t189;
t319 = t277 * qJD(4);
t327 = -0.4e1 * t159;
t326 = 0.2e1 * t149 * t154 - 0.2e1 * t150 * t321;
t314 = -pkin(8) - pkin(7);
t167 = t314 * t192;
t168 = t314 * t194;
t135 = t312 * t167 - t313 * t168;
t158 = -t313 * t194 + t257;
t182 = -t194 * pkin(2) - pkin(1);
t209 = t158 * pkin(3) - t159 * pkin(9) + t182;
t72 = t193 * t135 + t191 * t209;
t266 = t313 * pkin(2);
t180 = -t266 - pkin(3);
t184 = pkin(2) * t245;
t279 = t180 * t186 + t191 * t184;
t200 = t193 * t316;
t324 = t159 * t275 + t200;
t323 = t179 * t275 - t222;
t322 = -t179 * t186 - t191 * t229;
t214 = t180 * t275 - t193 * t184;
t126 = (qJD(2) + qJD(3)) * t159;
t291 = t126 * t191;
t95 = t158 * t186 + t291;
t320 = -t126 * t193 + t158 * t275;
t134 = -t313 * t167 - t312 * t168;
t315 = 2 * qJD(6);
t311 = t126 * pkin(4);
t310 = t193 * pkin(4);
t107 = t321 * t159;
t198 = t316 * t294;
t42 = -t150 * t159 + t190 * t200 + t191 * t198;
t288 = t159 * t191;
t43 = -t196 * t190 + t193 * t198 + t232 * t288;
t261 = qJD(2) * t314;
t161 = t192 * t261;
t228 = t194 * t261;
t82 = t135 * qJD(3) + t312 * t161 - t313 * t228;
t44 = -pkin(4) * t196 + t82;
t12 = -t42 * pkin(5) + t43 * qJ(6) - t107 * qJD(6) + t44;
t100 = pkin(4) * t288 + t134;
t106 = t154 * t159;
t41 = t106 * pkin(5) - t107 * qJ(6) + t100;
t308 = -t12 * t321 + t41 * t149;
t307 = -t12 * t154 - t41 * t150;
t206 = qJD(4) * t209;
t272 = t192 * qJD(2);
t262 = pkin(2) * t272;
t195 = t126 * pkin(3) + pkin(9) * t316 + t262;
t81 = t134 * qJD(3) - t313 * t161 - t312 * t228;
t242 = t191 * t81 + t193 * t195;
t17 = t324 * qJ(5) - t135 * t186 - t159 * t185 - t191 * t206 + t242 + t311;
t25 = t135 * t275 - t191 * t195 + (-t206 + t81) * t193;
t19 = t196 * qJ(5) - t159 * t273 - t25;
t8 = t190 * t17 + t294 * t19;
t306 = t100 * t149 - t321 * t44;
t305 = t100 * t150 + t44 * t154;
t71 = -t135 * t191 + t193 * t209;
t48 = pkin(4) * t158 - t159 * t187 + t71;
t52 = -qJ(5) * t288 + t72;
t30 = t190 * t48 + t294 * t52;
t181 = -pkin(3) - t310;
t116 = -pkin(5) * t321 - t154 * qJ(6) + t181;
t104 = -t266 + t116;
t183 = pkin(4) * t275;
t83 = pkin(5) * t149 - qJ(6) * t150 - qJD(6) * t154 + t183;
t75 = t184 + t83;
t303 = t104 * t149 - t321 * t75;
t302 = -t104 * t150 - t75 * t154;
t301 = t116 * t149 - t321 * t83;
t300 = -t116 * t150 - t83 * t154;
t298 = pkin(2) * qJD(3);
t297 = t134 * t82;
t124 = t134 * t186;
t295 = t82 * t191 + t124;
t287 = t159 * t193;
t162 = t184 + t183;
t165 = t180 - t310;
t283 = t165 * t149 - t162 * t321;
t282 = t165 * t150 + t162 * t154;
t281 = t181 * t149 - t183 * t321;
t280 = t181 * t150 + t154 * t183;
t274 = qJD(6) * t158;
t271 = t194 * qJD(2);
t270 = -0.2e1 * pkin(1) * qJD(2);
t269 = -0.2e1 * t106 * t42;
t268 = -0.2e1 * t321 * t149;
t96 = 0.2e1 * t158 * t126;
t267 = t126 * qJ(6) + t8;
t264 = pkin(3) * t275;
t263 = pkin(3) * t186;
t260 = t294 * pkin(4);
t259 = t312 * t134;
t123 = t134 * t275;
t249 = t191 * t186;
t248 = t192 * t271;
t2 = t267 + t274;
t24 = qJ(6) * t158 + t30;
t29 = -t190 * t52 + t294 * t48;
t27 = -t158 * pkin(5) - t29;
t7 = t294 * t17 - t190 * t19;
t4 = -pkin(5) * t126 - t7;
t247 = -t24 * t149 + t27 * t150 + t4 * t154 + t2 * t321;
t246 = -t30 * t149 - t29 * t150 - t7 * t154 + t321 * t8;
t243 = t110 * t69 + t111 * t70;
t234 = t102 * t128 + t129 * t103;
t233 = -t82 * t193 + t123;
t155 = t159 ^ 2;
t227 = t155 * t249;
t225 = t106 * t43 + t107 * t42;
t221 = t106 * t126 - t158 * t42;
t220 = t106 * t149 + t321 * t42;
t219 = -t110 * t126 - t158 * t69;
t218 = t111 * t126 + t158 * t70;
t217 = -t102 * t158 - t126 * t128;
t216 = t103 * t158 + t126 * t129;
t60 = -t126 * t321 + t149 * t158;
t213 = -t70 * t106 + t107 * t69 - t110 * t43 + t111 * t42;
t212 = t102 * t107 - t103 * t106 - t128 * t43 + t129 * t42;
t211 = t102 * t110 + t111 * t103 + t128 * t69 + t70 * t129;
t210 = (t188 + t189) * t313;
t13 = t106 * t150 + t107 * t149 - t154 * t42 + t321 * t43;
t26 = -t72 * qJD(4) + t242;
t9 = -t26 * t191 - t25 * t193 + (-t191 * t72 - t193 * t71) * qJD(4);
t202 = t159 * t316;
t199 = t191 * t200;
t177 = -t260 - pkin(5);
t175 = pkin(4) * t190 + qJ(6);
t171 = -0.2e1 * t249;
t170 = 0.2e1 * t249;
t157 = -0.2e1 * t319;
t146 = t210 * t298;
t122 = 0.2e1 * t154 * t150;
t101 = (-t149 * t190 - t150 * t294) * pkin(4);
t76 = qJD(6) * t321 - t149 * t175 + t150 * t177;
t65 = t159 * t319 + t199;
t62 = t126 * t154 + t150 * t158;
t51 = t249 * t327 + t277 * t316;
t34 = -0.2e1 * t107 * t43;
t33 = t107 * t150 - t154 * t43;
t28 = 0.2e1 * t107 * t126 - 0.2e1 * t158 * t43;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t248, 0.2e1 * (-t192 ^ 2 + t194 ^ 2) * qJD(2), 0, -0.2e1 * t248, 0, 0, t192 * t270, t194 * t270, 0, 0, -0.2e1 * t202, -0.2e1 * t159 * t126 + 0.2e1 * t158 * t316, 0, t96, 0, 0, 0.2e1 * t126 * t182 + 0.2e1 * t158 * t262, 0.2e1 * t159 * t262 - 0.2e1 * t182 * t316, -0.2e1 * t135 * t126 - 0.2e1 * t134 * t316 + 0.2e1 * t81 * t158 + 0.2e1 * t82 * t159, -0.2e1 * t135 * t81 + 0.2e1 * t182 * t262 + 0.2e1 * t297, -0.2e1 * t189 * t202 - 0.2e1 * t227, 0.2e1 * t155 * t319 - t199 * t327, 0.2e1 * t126 * t287 - 0.2e1 * t158 * t324, -0.2e1 * t188 * t202 + 0.2e1 * t227, -0.2e1 * t126 * t288 + 0.2e1 * t158 * t196, t96, 0.2e1 * t159 * t124 + 0.2e1 * t71 * t126 - 0.2e1 * t134 * t201 + 0.2e1 * t26 * t158 + 0.2e1 * t82 * t288, -0.2e1 * t159 * t123 - 0.2e1 * t72 * t126 - 0.2e1 * t134 * t200 + 0.2e1 * t25 * t158 + 0.2e1 * t82 * t287, 0.2e1 * t196 * t72 + 0.2e1 * t25 * t288 - 0.2e1 * t26 * t287 + 0.2e1 * t324 * t71, -0.2e1 * t25 * t72 + 0.2e1 * t26 * t71 + 0.2e1 * t297, t34, 0.2e1 * t225, t28, t269, -0.2e1 * t221, t96, -0.2e1 * t100 * t42 + 0.2e1 * t106 * t44 + 0.2e1 * t126 * t29 + 0.2e1 * t158 * t7, -0.2e1 * t100 * t43 + 0.2e1 * t107 * t44 - 0.2e1 * t126 * t30 - 0.2e1 * t158 * t8, -0.2e1 * t106 * t8 - 0.2e1 * t107 * t7 + 0.2e1 * t29 * t43 + 0.2e1 * t30 * t42, 0.2e1 * t100 * t44 + 0.2e1 * t29 * t7 + 0.2e1 * t30 * t8, t34, t28, -0.2e1 * t225, t96, 0.2e1 * t221, t269, 0.2e1 * t106 * t12 - 0.2e1 * t126 * t27 - 0.2e1 * t158 * t4 - 0.2e1 * t41 * t42, -0.2e1 * t106 * t2 + 0.2e1 * t107 * t4 + 0.2e1 * t24 * t42 - 0.2e1 * t27 * t43, -0.2e1 * t107 * t12 + 0.2e1 * t126 * t24 + 0.2e1 * t158 * t2 + 0.2e1 * t41 * t43, 0.2e1 * t12 * t41 + 0.2e1 * t2 * t24 + 0.2e1 * t27 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, 0, -t272, 0, -pkin(7) * t271, pkin(7) * t272, 0, 0, 0, 0, -t316, 0, -t126, 0, -t82, t81, -t126 * t265 - t158 * t229 + t159 * t184 + t266 * t316 (-t312 * t81 - t313 * t82 + (t313 * t135 + t259) * qJD(3)) * pkin(2), -t65, t51, t95, t65, -t320, 0, t322 * t158 + t279 * t159 - t179 * t291 - t180 * t201 + t233, -t126 * t286 + t323 * t158 - t214 * t159 - t180 * t200 + t295, t9, t82 * t180 + (t259 + (-t191 * t71 + t193 * t72) * t313) * t298 + t9 * t179, t33, -t13, t62, t220, -t60, 0, t106 * t162 - t165 * t42 + t219 + t306, t107 * t162 - t165 * t43 - t218 + t305, t213 + t246, t100 * t162 - t110 * t7 + t111 * t8 + t165 * t44 - t29 * t69 + t30 * t70, t33, t62, t13, 0, t60, t220, -t104 * t42 + t106 * t75 + t219 + t308, t213 + t247, t104 * t43 - t107 * t75 + t218 + t307, t104 * t12 + t110 * t4 + t111 * t2 + t24 * t70 + t27 * t69 + t41 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t184, -0.2e1 * t229, 0, 0, t170, t157, 0, t171, 0, 0, 0.2e1 * t214, 0.2e1 * t279, 0.2e1 * t146, 0.2e1 * (t210 * t179 + t312 * t180) * t298, t122, -t326, 0, t268, 0, 0, 0.2e1 * t283, 0.2e1 * t282, t330, 0.2e1 * t162 * t165 + 0.2e1 * t243, t122, 0, t326, 0, 0, t268, 0.2e1 * t303, t330, 0.2e1 * t302, 0.2e1 * t104 * t75 + 0.2e1 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, 0, -t126, 0, -t82, t81, 0, 0, -t65, t51, t95, t65, -t320, 0, t196 * pkin(3) - t95 * pkin(9) + t233, t324 * pkin(3) + t320 * pkin(9) + t295, t9, -t82 * pkin(3) + pkin(9) * t9, t33, -t13, t62, t220, -t60, 0, t106 * t183 - t181 * t42 + t217 + t306, t107 * t183 - t181 * t43 - t216 + t305, t212 + t246, t100 * t183 - t102 * t29 + t103 * t30 - t128 * t7 + t129 * t8 + t181 * t44, t33, t62, t13, 0, t60, t220, t106 * t83 - t116 * t42 + t217 + t308, t212 + t247, -t107 * t83 + t116 * t43 + t216 + t307, t102 * t27 + t103 * t24 + t116 * t12 + t128 * t4 + t129 * t2 + t41 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184, -t229, 0, 0, t170, t157, 0, t171, 0, 0, t214 - t264, -t263 + t279, t146 (-t312 * pkin(3) + t210 * pkin(9)) * t298, t122, -t326, 0, t268, 0, 0, t281 + t283, t280 + t282, t328, t162 * t181 + t165 * t183 + t211, t122, 0, t326, 0, 0, t268, t301 + t303, t328, t300 + t302, t104 * t83 + t116 * t75 + t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t157, 0, t171, 0, 0, -0.2e1 * t264, -0.2e1 * t263, 0, 0, t122, -t326, 0, t268, 0, 0, 0.2e1 * t281, 0.2e1 * t280, t329, 0.2e1 * t181 * t183 + 0.2e1 * t234, t122, 0, t326, 0, 0, t268, 0.2e1 * t301, t329, 0.2e1 * t300, 0.2e1 * t116 * t83 + 0.2e1 * t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t324, 0, t196, t126, t26, t25, 0, 0, 0, 0, -t43, 0, t42, t126, t126 * t260 + t7, -t190 * t311 - t8 (t190 * t42 + t294 * t43) * pkin(4) (t190 * t8 + t294 * t7) * pkin(4), 0, -t43, 0, t126, -t42, 0 (pkin(5) - t177) * t126 + t7, -qJD(6) * t106 + t175 * t42 - t177 * t43, t126 * t175 + t267 + 0.2e1 * t274, qJD(6) * t24 + t175 * t2 + t177 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, 0, -t275, 0, t322, t323, 0, 0, 0, 0, t150, 0, -t149, 0, -t69, -t70, t101 (t190 * t70 - t294 * t69) * pkin(4), 0, t150, 0, 0, t149, 0, -t69, t76, t70, qJD(6) * t111 + t175 * t70 + t177 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, 0, -t275, 0, -pkin(9) * t186, pkin(9) * t275, 0, 0, 0, 0, t150, 0, -t149, 0, -t102, -t103, t101 (-t102 * t294 + t103 * t190) * pkin(4), 0, t150, 0, 0, t149, 0, -t102, t76, t103, qJD(6) * t129 + t102 * t177 + t103 * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, t175 * t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, -t43, 0, t44, 0, 0, 0, 0, 0, 0, -t42, 0, t43, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t150, 0, t162, 0, 0, 0, 0, 0, 0, t149, 0, -t150, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t150, 0, t183, 0, 0, 0, 0, 0, 0, t149, 0, -t150, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, -t43, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, 0, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, 0, t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
