% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRPP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 18:00
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRPP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP1_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 17:58:37
% EndTime: 2019-05-07 17:59:42
% DurationCPUTime: 71.05s
% Computational Cost: add. (377484->943), mult. (767141->1188), div. (0->0), fcn. (565147->10), ass. (0->645)
t2101 = sin(qJ(2));
t2104 = cos(qJ(3));
t2100 = sin(qJ(3));
t2105 = cos(qJ(2));
t2197 = t2100 * t2105;
t2065 = (t2101 * t2104 + t2197) * qJD(1);
t2099 = sin(qJ(4));
t2103 = cos(qJ(4));
t2196 = qJD(2) + qJD(3);
t2032 = t2099 * t2065 - t2103 * t2196;
t2033 = t2103 * t2065 + t2099 * t2196;
t2097 = sin(pkin(10));
t2098 = cos(pkin(10));
t1986 = -t2097 * t2032 + t2098 * t2033;
t1983 = t1986 ^ 2;
t2238 = qJD(1) * t2105;
t2239 = qJD(1) * t2101;
t2063 = t2100 * t2239 - t2104 * t2238;
t2059 = qJD(4) + t2063;
t2251 = t2059 ^ 2;
t1900 = t2251 + t1983;
t2236 = qJD(2) * t2101;
t2174 = qJD(1) * t2236;
t2188 = t2105 * qJDD(1);
t2132 = t2174 - t2188;
t2067 = t2104 * t2132;
t2173 = qJD(2) * t2238;
t2189 = t2101 * qJDD(1);
t2133 = t2173 + t2189;
t2118 = t2100 * t2133 + t2067;
t2004 = -t2065 * qJD(3) - t2118;
t2001 = qJDD(4) - t2004;
t1984 = t2098 * t2032 + t2033 * t2097;
t2212 = t1986 * t1984;
t2267 = t2001 + t2212;
t2219 = t2267 * t2097;
t1779 = t1900 * t2098 + t2219;
t2218 = t2267 * t2098;
t1798 = t1900 * t2097 - t2218;
t1713 = t1779 * t2099 + t1798 * t2103;
t2115 = t2100 * t2132 - t2104 * t2133;
t2111 = -t2063 * qJD(3) - t2115;
t2187 = qJDD(2) + qJDD(3);
t2109 = -t2099 * t2187 - t2103 * t2111;
t1941 = -t2032 * qJD(4) - t2109;
t2110 = -t2099 * t2111 + t2103 * t2187;
t2108 = t2033 * qJD(4) - t2110;
t1853 = t2098 * t1941 - t2097 * t2108;
t2213 = t1984 * t2059;
t2273 = t1853 - t2213;
t1654 = t1713 * t2100 - t2104 * t2273;
t1656 = t1713 * t2104 + t2100 * t2273;
t1574 = t1654 * t2101 - t1656 * t2105;
t1694 = t1779 * t2103 - t1798 * t2099;
t2102 = sin(qJ(1));
t2106 = cos(qJ(1));
t2405 = pkin(6) * (t1574 * t2106 + t1694 * t2102);
t2404 = pkin(6) * (t1574 * t2102 - t1694 * t2106);
t1583 = t1654 * t2105 + t1656 * t2101;
t2403 = pkin(1) * t1583;
t2402 = pkin(7) * t1583;
t2401 = -pkin(1) * t1694 + pkin(7) * t1574;
t1852 = t1941 * t2097 + t2098 * t2108;
t1954 = t2059 * t1986;
t2274 = t1852 + t1954;
t1729 = -t2274 * t2097 + t2098 * t2273;
t2222 = t2273 * t2097;
t1733 = -t2274 * t2098 - t2222;
t1638 = -t1729 * t2099 + t1733 * t2103;
t2253 = t1984 ^ 2;
t2269 = t1983 - t2253;
t1624 = t1638 * t2100 - t2104 * t2269;
t1626 = t1638 * t2104 + t2100 * t2269;
t1557 = t1624 * t2101 - t1626 * t2105;
t1634 = t1729 * t2103 + t1733 * t2099;
t2400 = t1557 * t2102 + t1634 * t2106;
t2399 = t1557 * t2106 - t1634 * t2102;
t1947 = t2253 - t2251;
t1830 = t1947 * t2097 + t2218;
t1834 = t1947 * t2098 - t2219;
t1742 = t1830 * t2099 - t1834 * t2103;
t1819 = t1852 - t1954;
t1660 = t1742 * t2100 - t1819 * t2104;
t1664 = t1742 * t2104 + t1819 * t2100;
t1595 = t1660 * t2101 - t1664 * t2105;
t1739 = t1830 * t2103 + t1834 * t2099;
t2396 = t1595 * t2102 - t1739 * t2106;
t2395 = t1595 * t2106 + t1739 * t2102;
t2394 = pkin(2) * t1654;
t2393 = pkin(8) * t1654;
t2392 = -pkin(2) * t1694 - pkin(8) * t1656;
t1556 = t1624 * t2105 + t1626 * t2101;
t1590 = t1660 * t2105 + t1664 * t2101;
t1854 = -t2253 - t1983;
t2264 = t2213 + t1853;
t2309 = -t1819 * t2098 + t2264 * t2097;
t2310 = -t1819 * t2097 - t2098 * t2264;
t2323 = -t2099 * t2310 + t2103 * t2309;
t2343 = t1854 * t2100 + t2104 * t2323;
t2345 = -t1854 * t2104 + t2100 * t2323;
t2364 = t2101 * t2343 + t2105 * t2345;
t2390 = pkin(1) * t2364;
t2388 = pkin(3) * t1694;
t2387 = pkin(7) * t2364;
t2386 = pkin(9) * t1694;
t2322 = t2099 * t2309 + t2103 * t2310;
t2365 = -t2101 * t2345 + t2105 * t2343;
t2379 = -pkin(1) * t2322 + pkin(7) * t2365;
t2378 = pkin(3) * t2273 - pkin(9) * t1713;
t1948 = t1983 - t2251;
t2265 = -t2212 + t2001;
t2217 = t2265 * t2097;
t2311 = -t2098 * t1948 + t2217;
t1865 = t2098 * t2265;
t2312 = t1948 * t2097 + t1865;
t2321 = t2099 * t2312 + t2103 * t2311;
t2320 = -t2099 * t2311 + t2103 * t2312;
t2344 = t2100 * t2264 + t2104 * t2320;
t2346 = t2100 * t2320 - t2104 * t2264;
t2363 = -t2101 * t2346 + t2105 * t2344;
t2377 = t2102 * t2363 - t2106 * t2321;
t2376 = t2102 * t2321 + t2106 * t2363;
t2375 = pkin(6) * (t2102 * t2365 - t2106 * t2322);
t2374 = pkin(6) * (t2102 * t2322 + t2106 * t2365);
t2263 = -t2251 - t2253;
t2279 = t2098 * t2263 - t2217;
t2281 = t2097 * t2263 + t1865;
t2308 = -t2099 * t2281 + t2103 * t2279;
t2326 = t2100 * t2274 + t2104 * t2308;
t2329 = t2100 * t2308 - t2104 * t2274;
t2341 = t2101 * t2326 + t2105 * t2329;
t2373 = pkin(1) * t2341;
t2372 = pkin(2) * t2345;
t2371 = pkin(7) * t2341;
t2370 = pkin(8) * t2345;
t2307 = t2099 * t2279 + t2103 * t2281;
t2342 = -t2101 * t2329 + t2105 * t2326;
t2369 = -pkin(1) * t2307 + pkin(7) * t2342;
t2368 = -pkin(2) * t2322 + pkin(8) * t2343;
t2367 = pkin(6) * (t2102 * t2342 - t2106 * t2307);
t2366 = pkin(6) * (t2102 * t2307 + t2106 * t2342);
t2362 = t2101 * t2344 + t2105 * t2346;
t2359 = pkin(2) * t2329;
t2358 = pkin(3) * t2322;
t2357 = pkin(4) * t1779;
t2356 = pkin(8) * t2329;
t2355 = pkin(9) * t2322;
t2354 = qJ(5) * t1779;
t2353 = qJ(5) * t1798;
t2348 = -pkin(2) * t2307 + pkin(8) * t2326;
t2347 = -pkin(3) * t1854 + pkin(9) * t2323;
t2246 = pkin(4) * t2310;
t2338 = pkin(9) * t2307;
t2337 = qJ(5) * t2310;
t2317 = pkin(4) * t2281;
t2332 = -pkin(3) * t2307 - t2317;
t2331 = -pkin(3) * t2274 + pkin(9) * t2308;
t2330 = -pkin(4) * t1854 + qJ(5) * t2309;
t2122 = (-t1984 * t2097 - t1986 * t2098) * t2059;
t2206 = t2059 * t2097;
t1944 = t1986 * t2206;
t2205 = t2059 * t2098;
t2179 = t1984 * t2205;
t2141 = t1944 - t2179;
t2260 = t2099 * t2141 + t2103 * t2122;
t2211 = t2001 * t2100;
t2259 = -t2099 * t2122 + t2103 * t2141;
t2276 = t2104 * t2259 + t2211;
t1997 = t2104 * t2001;
t2280 = t2100 * t2259 - t1997;
t2306 = -t2101 * t2280 + t2105 * t2276;
t2328 = t2102 * t2306 - t2106 * t2260;
t2134 = t1852 * t2097 + t2179;
t2142 = -t2098 * t1852 + t1984 * t2206;
t2257 = t2099 * t2134 + t2103 * t2142;
t2181 = t2100 * t2212;
t2258 = -t2099 * t2142 + t2103 * t2134;
t2277 = t2104 * t2258 - t2181;
t2180 = t2104 * t2212;
t2278 = t2100 * t2258 + t2180;
t2304 = -t2101 * t2278 + t2105 * t2277;
t2327 = t2102 * t2304 - t2106 * t2257;
t2325 = t2102 * t2260 + t2106 * t2306;
t2324 = t2102 * t2257 + t2106 * t2304;
t2316 = qJ(5) * t2279;
t2315 = qJ(5) * t2281;
t2305 = t2101 * t2276 + t2105 * t2280;
t2303 = t2101 * t2277 + t2105 * t2278;
t2300 = qJ(6) * t2273;
t1998 = t2033 * t2032;
t2268 = -t1998 + t2001;
t2299 = t2099 * t2268;
t2023 = t2065 * t2063;
t2266 = -t2023 + t2187;
t2297 = t2100 * t2266;
t2291 = t2103 * t2268;
t2289 = t2104 * t2266;
t2054 = t2196 * t2063;
t2283 = -t2054 + t2111;
t2081 = t2102 * g(1) - t2106 * g(2);
t2096 = t2105 ^ 2;
t2184 = pkin(2) * t2105 + pkin(1);
t2006 = ((pkin(8) * t2096 + pkin(7)) * qJD(1) - pkin(2) * t2236) * qJD(1) + t2184 * qJDD(1) - (qJD(2) * pkin(2) - pkin(8) * t2239) * t2239 + t2081;
t1809 = t1853 * t2097 + t1986 * t2205;
t1810 = t1853 * t2098 - t1944;
t1723 = t1809 * t2103 + t1810 * t2099;
t1726 = -t1809 * t2099 + t1810 * t2103;
t2143 = t2104 * t1726 + t2181;
t2144 = t2100 * t1726 - t2180;
t2256 = -t2101 * t2144 + t2105 * t2143;
t2282 = -t2106 * t1723 + t2102 * t2256;
t2275 = t1723 * t2102 + t2106 * t2256;
t2186 = t2196 ^ 2;
t2169 = t2196 * t2065;
t2195 = 0.2e1 * qJD(3) + qJD(2);
t1845 = (t2063 * t2195 + t2115) * pkin(9) + (-t2004 + t2169) * pkin(3) - t2006;
t2082 = t2106 * g(1) + t2102 * g(2);
t2254 = qJD(1) ^ 2;
t2119 = -pkin(1) * t2254 + qJDD(1) * pkin(7) - t2082;
t2046 = -t2101 * g(3) + t2105 * t2119;
t2093 = t2096 * t2254;
t2107 = qJD(2) ^ 2;
t2086 = -t2093 - t2107;
t1996 = pkin(2) * t2086 + pkin(8) * t2188 + t2046;
t2242 = t2105 * g(3);
t2112 = qJDD(2) * pkin(2) - t2242 + ((-pkin(8) - pkin(7)) * qJDD(1) + t2184 * t2254 + t2082) * t2101;
t1927 = t2104 * t1996 + t2100 * t2112;
t2020 = pkin(3) * t2063 - pkin(9) * t2065;
t1864 = -pkin(3) * t2186 + pkin(9) * t2187 - t2063 * t2020 + t1927;
t1761 = -t2103 * t1845 + t2099 * t1864;
t1762 = t2099 * t1845 + t2103 * t1864;
t1672 = t2099 * t1761 + t2103 * t1762;
t2272 = pkin(5) * t1900 + qJ(6) * t2267;
t2271 = -pkin(5) * t2265 - qJ(6) * t2263;
t2235 = qJD(5) * t1984;
t1977 = -0.2e1 * t2235;
t2233 = qJD(6) * t2059;
t2270 = t1977 + 0.2e1 * t2233;
t2014 = t2059 * t2032;
t1916 = t2014 + t1941;
t1965 = qJD(2) * (qJD(1) * t2197 - t2065) + t2100 * t2189 + t2067;
t2255 = t2101 * t2143 + t2105 * t2144;
t2252 = t2032 ^ 2;
t2030 = t2033 ^ 2;
t2061 = t2063 ^ 2;
t2062 = t2065 ^ 2;
t1926 = t2100 * t1996 - t2104 * t2112;
t1835 = -t1926 * t2104 + t1927 * t2100;
t2250 = pkin(2) * t1835;
t1969 = t2054 + t2111;
t1893 = -t1965 * t2100 - t1969 * t2104;
t2249 = pkin(2) * t1893;
t2248 = pkin(3) * t2100;
t1702 = pkin(4) * t2268 - qJ(5) * t1916 - t1761;
t2007 = pkin(4) * t2059 - qJ(5) * t2033;
t1716 = -pkin(4) * t2252 - qJ(5) * t2108 - t2059 * t2007 + t1762;
t2168 = -t2098 * t1702 + t2097 * t1716;
t2234 = qJD(5) * t1986;
t1618 = t2168 + 0.2e1 * t2234;
t2193 = t2097 * t1702 + t2098 * t1716;
t1619 = t1977 + t2193;
t1552 = -t1618 * t2098 + t1619 * t2097;
t2247 = pkin(4) * t1552;
t2243 = pkin(5) * t2098;
t2241 = qJ(6) * t2098;
t2240 = qJD(1) * qJD(2);
t2095 = t2101 ^ 2;
t2237 = t2254 * t2095;
t2232 = t1552 * t2099;
t2231 = t1552 * t2103;
t1863 = -t2187 * pkin(3) - t2186 * pkin(9) + t2065 * t2020 + t1926;
t1764 = t2108 * pkin(4) - t2252 * qJ(5) + t2033 * t2007 + qJDD(5) + t1863;
t2229 = t1764 * t2097;
t2228 = t1764 * t2098;
t2221 = t1835 * t2101;
t2220 = t1835 * t2105;
t1929 = t1998 + t2001;
t2216 = t1929 * t2099;
t2215 = t1929 * t2103;
t2210 = t2006 * t2100;
t2209 = t2006 * t2104;
t2018 = t2023 + t2187;
t2208 = t2018 * t2100;
t2207 = t2018 * t2104;
t2204 = t2059 * t2099;
t2203 = t2059 * t2103;
t2066 = qJDD(1) * pkin(1) + pkin(7) * t2254 + t2081;
t2202 = t2066 * t2101;
t2201 = t2066 * t2105;
t2072 = 0.2e1 * t2173 + t2189;
t2035 = t2072 * t2101;
t2073 = -0.2e1 * t2174 + t2188;
t2034 = t2073 * t2105;
t2088 = t2105 * t2254 * t2101;
t2079 = qJDD(2) + t2088;
t2200 = t2079 * t2101;
t2080 = qJDD(2) - t2088;
t2199 = t2080 * t2101;
t2198 = t2080 * t2105;
t1859 = t2099 * t1863;
t1860 = t2103 * t1863;
t1918 = pkin(5) * t1984 - qJ(6) * t1986;
t2139 = -pkin(5) * t2251 + t2001 * qJ(6) - t1984 * t1918 + t2193;
t1597 = t2139 + t2270;
t2121 = -t2001 * pkin(5) - qJ(6) * t2251 + qJDD(6) + t2168;
t1599 = (0.2e1 * qJD(5) + t1918) * t1986 + t2121;
t2194 = -pkin(5) * t1599 + qJ(6) * t1597;
t2192 = -pkin(5) * t2264 - qJ(6) * t1819;
t2191 = -pkin(3) * t1863 + pkin(9) * t1672;
t2190 = t2095 + t2096;
t2183 = -pkin(3) * t2104 - pkin(2);
t2178 = t2100 * t1998;
t2177 = t2104 * t1998;
t2176 = t2102 * t2023;
t2175 = t2106 * t2023;
t1980 = -t2030 - t2251;
t1870 = -t1980 * t2099 - t2215;
t1917 = (qJD(4) + t2059) * t2032 + t2109;
t2172 = pkin(3) * t1917 + pkin(9) * t1870 + t1859;
t1963 = -t2251 - t2252;
t1858 = t1963 * t2103 - t2299;
t2015 = t2059 * t2033;
t1913 = -t2015 - t2108;
t2171 = pkin(3) * t1913 + pkin(9) * t1858 - t1860;
t2170 = -qJ(6) * t2097 - pkin(4);
t1553 = t1618 * t2097 + t2098 * t1619;
t1836 = t1926 * t2100 + t2104 * t1927;
t2045 = t2101 * t2119 + t2242;
t1995 = t2045 * t2101 + t2105 * t2046;
t2167 = -t2081 * t2102 - t2106 * t2082;
t2166 = t2102 * t2088;
t2165 = t2106 * t2088;
t1541 = t1597 * t2097 - t1599 * t2098;
t1542 = t1597 * t2098 + t1599 * t2097;
t1509 = -t1541 * t2099 + t1542 * t2103;
t2114 = t1852 * pkin(5) + t1764 - t2300;
t1644 = (pkin(5) * t2059 - 0.2e1 * qJD(6)) * t1986 + t2114;
t1511 = qJ(5) * t1542 + (t2170 - t2243) * t1644;
t1522 = -qJ(5) * t1541 + (pkin(5) * t2097 - t2241) * t1644;
t2164 = -pkin(3) * t1644 + pkin(9) * t1509 + t2103 * t1511 + t2099 * t1522;
t1580 = -pkin(5) * t1854 + t1597;
t1581 = -qJ(6) * t1854 + t1599;
t1529 = t1580 * t2098 + t1581 * t2097 + t2330;
t1531 = -t1580 * t2097 + t1581 * t2098 - t2337;
t2163 = t2103 * t1529 + t2099 * t1531 + t2347;
t1539 = t1553 + t2330;
t1543 = -t1552 - t2337;
t2162 = t2103 * t1539 + t2099 * t1543 + t2347;
t2113 = 0.2e1 * qJD(6) * t1986 - t2114;
t1620 = -pkin(5) * t1954 + t2113 + t2300;
t1565 = -t2353 + t2097 * t1620 + (pkin(4) + t2243) * t2273;
t1577 = -pkin(5) * t2222 + t1620 * t2098 - t2354;
t2161 = t2103 * t1565 + t2099 * t1577 + t2378;
t1621 = (-t2274 - t1954) * pkin(5) + t2113;
t1568 = t2098 * t1621 + t2170 * t2274 + t2316;
t1579 = -t1621 * t2097 - t2241 * t2274 - t2315;
t2160 = t2103 * t1568 + t2099 * t1579 + t2331;
t1645 = -pkin(4) * t2274 - t2228 + t2316;
t1677 = t2229 - t2315;
t2159 = t2103 * t1645 + t2099 * t1677 + t2331;
t1649 = -pkin(4) * t2273 + t2229 + t2353;
t1689 = t2228 + t2354;
t2158 = t2103 * t1649 + t2099 * t1689 - t2378;
t1914 = (-qJD(4) + t2059) * t2033 + t2110;
t1804 = t1914 * t2103 + t1916 * t2099;
t1945 = t2030 + t2252;
t2157 = pkin(3) * t1945 + pkin(9) * t1804 + t1672;
t1646 = t1672 * t2100 - t1863 * t2104;
t2156 = pkin(2) * t1646 + t2191;
t2044 = -t2062 - t2186;
t1970 = t2044 * t2104 - t2208;
t2155 = pkin(2) * t1970 - t1927;
t2154 = pkin(4) * t1541 + t2194;
t2153 = -t2193 - t2357;
t2152 = t2192 + t2246;
t2076 = qJDD(1) * t2106 - t2102 * t2254;
t2150 = -pkin(6) * t2076 - g(3) * t2102;
t2149 = t2100 * t2054;
t2148 = t2100 * t2169;
t2147 = t2104 * t2054;
t2146 = t2104 * t2169;
t1671 = -t1761 * t2103 + t1762 * t2099;
t1994 = t2045 * t2105 - t2046 * t2101;
t2138 = t2081 * t2106 - t2082 * t2102;
t1777 = t1858 * t2100 + t1913 * t2104;
t2137 = pkin(2) * t1777 + t2171;
t1783 = t1870 * t2100 + t1917 * t2104;
t2136 = pkin(2) * t1783 + t2172;
t2016 = -t2186 - t2061;
t1950 = t2016 * t2100 + t2289;
t2135 = pkin(2) * t1950 - t1926;
t1504 = t1509 * t2100 - t1644 * t2104;
t2131 = pkin(2) * t1504 + t2164;
t2130 = t2163 + t2372;
t2129 = t2162 + t2372;
t2128 = t2161 - t2394;
t2127 = t2160 + t2359;
t2126 = t2159 + t2359;
t2125 = t2158 + t2394;
t1767 = t1804 * t2100 + t1945 * t2104;
t2124 = pkin(2) * t1767 + t2157;
t1520 = t1553 * t2103 - t2232;
t1545 = -pkin(4) * t1764 + qJ(5) * t1553;
t2123 = -pkin(3) * t1764 + pkin(9) * t1520 - qJ(5) * t2232 + t2103 * t1545;
t1514 = t1520 * t2100 - t1764 * t2104;
t2120 = pkin(2) * t1514 + t2123;
t2117 = t2139 + t2272 + t2357;
t1979 = -0.2e1 * t2234;
t2116 = -t1918 * t1986 + t1979 - t2121 - t2271;
t2085 = t2093 - t2107;
t2084 = -t2107 - t2237;
t2083 = t2107 - t2237;
t2078 = -t2093 + t2237;
t2077 = t2093 + t2237;
t2075 = qJDD(1) * t2102 + t2106 * t2254;
t2074 = t2190 * qJDD(1);
t2070 = t2105 * t2079;
t2069 = t2190 * t2240;
t2060 = -pkin(6) * t2075 + g(3) * t2106;
t2050 = t2186 - t2062;
t2049 = t2061 - t2186;
t2048 = -t2095 * t2240 + t2105 * t2133;
t2047 = -t2096 * t2240 + t2101 * t2132;
t2043 = -t2084 * t2101 - t2198;
t2042 = -t2083 * t2101 + t2070;
t2041 = t2086 * t2105 - t2200;
t2040 = t2085 * t2105 - t2199;
t2039 = t2084 * t2105 - t2199;
t2038 = t2083 * t2105 + t2200;
t2037 = t2086 * t2101 + t2070;
t2036 = t2085 * t2101 + t2198;
t2025 = t2034 - t2035;
t2024 = t2072 * t2105 + t2073 * t2101;
t2022 = t2062 - t2061;
t2013 = -t2030 + t2251;
t2012 = -t2251 + t2252;
t2011 = -t2147 + t2148;
t2010 = -t2149 - t2146;
t2009 = -pkin(7) * t2039 - t2201;
t2008 = -pkin(7) * t2037 - t2202;
t2005 = -t2061 - t2062;
t2003 = -pkin(1) * t2039 + t2046;
t2002 = -pkin(1) * t2037 + t2045;
t1992 = -t2030 + t2252;
t1988 = pkin(1) * t2073 + pkin(7) * t2041 + t2201;
t1987 = -pkin(1) * t2072 + pkin(7) * t2043 - t2202;
t1978 = 0.2e1 * t2235;
t1975 = t2049 * t2104 - t2208;
t1974 = -t2050 * t2100 + t2289;
t1973 = t2049 * t2100 + t2207;
t1972 = t2050 * t2104 + t2297;
t1971 = -t2044 * t2100 - t2207;
t1964 = t2065 * t2195 + t2118;
t1962 = pkin(1) * t2066 + pkin(7) * t1995;
t1961 = t2104 * t2111 - t2148;
t1960 = t2100 * t2111 + t2146;
t1959 = -t2100 * t2004 + t2147;
t1958 = t2104 * t2004 + t2149;
t1952 = pkin(1) * t2077 + pkin(7) * t2074 + t1995;
t1951 = t2016 * t2104 - t2297;
t1937 = (-t2032 * t2103 + t2033 * t2099) * t2059;
t1936 = (-t2032 * t2099 - t2033 * t2103) * t2059;
t1933 = -t2010 * t2101 + t2011 * t2105;
t1932 = t2010 * t2105 + t2011 * t2101;
t1924 = -pkin(8) * t1970 - t2209;
t1915 = -t2014 + t1941;
t1912 = -t2015 + t2108;
t1911 = -pkin(8) * t1950 - t2210;
t1908 = -t1973 * t2101 + t1975 * t2105;
t1907 = -t1972 * t2101 + t1974 * t2105;
t1906 = t1973 * t2105 + t1975 * t2101;
t1905 = t1972 * t2105 + t1974 * t2101;
t1904 = t1941 * t2103 - t2033 * t2204;
t1903 = t1941 * t2099 + t2033 * t2203;
t1902 = t2032 * t2203 + t2099 * t2108;
t1901 = -t2032 * t2204 + t2103 * t2108;
t1897 = -t1970 * t2101 + t1971 * t2105;
t1896 = t1970 * t2105 + t1971 * t2101;
t1895 = -t1965 * t2104 + t1969 * t2100;
t1894 = -t1964 * t2104 - t2100 * t2283;
t1892 = -t1964 * t2100 + t2104 * t2283;
t1891 = t1937 * t2104 + t2211;
t1890 = t1937 * t2100 - t1997;
t1889 = t2012 * t2103 - t2216;
t1888 = -t2013 * t2099 + t2291;
t1887 = t2012 * t2099 + t2215;
t1886 = t2013 * t2103 + t2299;
t1885 = -t1960 * t2101 + t1961 * t2105;
t1884 = -t1958 * t2101 + t1959 * t2105;
t1883 = t1960 * t2105 + t1961 * t2101;
t1882 = t1958 * t2105 + t1959 * t2101;
t1877 = -t1950 * t2101 + t1951 * t2105;
t1876 = t1950 * t2105 + t1951 * t2101;
t1869 = t1980 * t2103 - t2216;
t1857 = t1963 * t2099 + t2291;
t1844 = -pkin(2) * t2283 + pkin(8) * t1971 - t2210;
t1841 = t1904 * t2104 + t2178;
t1840 = t1902 * t2104 - t2178;
t1839 = t1904 * t2100 - t2177;
t1838 = t1902 * t2100 + t2177;
t1837 = -pkin(2) * t1964 + pkin(8) * t1951 + t2209;
t1803 = t1913 * t2103 - t1915 * t2099;
t1802 = t1914 * t2099 - t1916 * t2103;
t1801 = t1913 * t2099 + t1915 * t2103;
t1795 = pkin(2) * t2006 + pkin(8) * t1836;
t1794 = -t1893 * t2101 + t1895 * t2105;
t1793 = -t1892 * t2101 + t1894 * t2105;
t1792 = t1893 * t2105 + t1895 * t2101;
t1791 = t1892 * t2105 + t1894 * t2101;
t1790 = t1889 * t2104 - t1912 * t2100;
t1789 = t1888 * t2104 + t1916 * t2100;
t1788 = t1889 * t2100 + t1912 * t2104;
t1787 = t1888 * t2100 - t1916 * t2104;
t1786 = -t1890 * t2101 + t1891 * t2105;
t1785 = t1890 * t2105 + t1891 * t2101;
t1784 = t1870 * t2104 - t1917 * t2100;
t1778 = t1858 * t2104 - t1913 * t2100;
t1776 = -pkin(1) * t1896 - t2155;
t1775 = t1803 * t2104 - t1992 * t2100;
t1774 = t1803 * t2100 + t1992 * t2104;
t1769 = -pkin(9) * t1869 + t1860;
t1768 = t1804 * t2104 - t1945 * t2100;
t1766 = -pkin(1) * t1876 - t2135;
t1765 = -pkin(9) * t1857 + t1859;
t1758 = -pkin(8) * t1893 - t1835;
t1753 = -t1839 * t2101 + t1841 * t2105;
t1752 = -t1838 * t2101 + t1840 * t2105;
t1751 = t1839 * t2105 + t1841 * t2101;
t1750 = t1838 * t2105 + t1840 * t2101;
t1749 = -pkin(2) * t2005 + pkin(8) * t1895 + t1836;
t1748 = -pkin(1) * t1792 - t2249;
t1747 = -pkin(7) * t1896 - t1844 * t2101 + t1924 * t2105;
t1746 = t1836 * t2105 - t2221;
t1745 = t1836 * t2101 + t2220;
t1744 = -pkin(7) * t1876 - t1837 * t2101 + t1911 * t2105;
t1735 = -pkin(1) * t2283 + pkin(7) * t1897 + t1844 * t2105 + t1924 * t2101;
t1720 = -pkin(3) * t1869 + t1762;
t1715 = -pkin(3) * t1857 + t1761;
t1707 = -pkin(1) * t1964 + pkin(7) * t1877 + t1837 * t2105 + t1911 * t2101;
t1706 = -t1788 * t2101 + t1790 * t2105;
t1705 = -t1787 * t2101 + t1789 * t2105;
t1704 = t1788 * t2105 + t1790 * t2101;
t1703 = t1787 * t2105 + t1789 * t2101;
t1699 = -t1783 * t2101 + t1784 * t2105;
t1698 = t1783 * t2105 + t1784 * t2101;
t1691 = -t1777 * t2101 + t1778 * t2105;
t1690 = t1777 * t2105 + t1778 * t2101;
t1687 = -t1774 * t2101 + t1775 * t2105;
t1686 = t1774 * t2105 + t1775 * t2101;
t1675 = -t1767 * t2101 + t1768 * t2105;
t1674 = t1767 * t2105 + t1768 * t2101;
t1673 = -pkin(1) * t1745 - t2250;
t1647 = t1672 * t2104 + t1863 * t2100;
t1641 = -pkin(9) * t1802 - t1671;
t1640 = -pkin(7) * t1745 - pkin(8) * t2220 - t1795 * t2101;
t1629 = pkin(1) * t2006 + pkin(7) * t1746 - pkin(8) * t2221 + t1795 * t2105;
t1628 = -pkin(7) * t1792 - t1749 * t2101 + t1758 * t2105;
t1627 = -pkin(1) * t2005 + pkin(7) * t1794 + t1749 * t2105 + t1758 * t2101;
t1622 = -pkin(8) * t1783 - t1720 * t2100 + t1769 * t2104;
t1616 = -pkin(8) * t1777 - t1715 * t2100 + t1765 * t2104;
t1603 = -pkin(2) * t1869 + pkin(8) * t1784 + t1720 * t2104 + t1769 * t2100;
t1602 = -pkin(1) * t1698 - t2136;
t1601 = -pkin(2) * t1857 + pkin(8) * t1778 + t1715 * t2104 + t1765 * t2100;
t1600 = -pkin(1) * t1690 - t2137;
t1587 = -t2246 - t2358;
t1582 = -pkin(8) * t1767 + t1641 * t2104 + t1802 * t2248;
t1571 = -t1646 * t2101 + t1647 * t2105;
t1570 = t1646 * t2105 + t1647 * t2101;
t1569 = pkin(8) * t1768 + t2100 * t1641 + t1802 * t2183;
t1566 = t1977 - t2153 + t2388;
t1563 = -t2152 - t2358;
t1562 = -t1649 * t2099 + t1689 * t2103 + t2386;
t1561 = -pkin(1) * t1674 - t2124;
t1560 = t1618 + t2332;
t1559 = -t1645 * t2099 + t1677 * t2103 - t2338;
t1554 = -pkin(8) * t1646 + (-pkin(9) * t2104 + t2248) * t1671;
t1547 = t1599 + t2271 + t2332;
t1546 = t1978 - t2117 - 0.2e1 * t2233 - t2388;
t1537 = pkin(8) * t1647 + (-pkin(9) * t2100 + t2183) * t1671;
t1536 = -pkin(7) * t1698 - t1603 * t2101 + t1622 * t2105;
t1535 = -pkin(7) * t1690 - t1601 * t2101 + t1616 * t2105;
t1534 = -pkin(1) * t1869 + pkin(7) * t1699 + t1603 * t2105 + t1622 * t2101;
t1533 = -pkin(1) * t1857 + pkin(7) * t1691 + t1601 * t2105 + t1616 * t2101;
t1532 = -pkin(1) * t1570 - t2156;
t1527 = -pkin(7) * t1674 - t1569 * t2101 + t1582 * t2105;
t1526 = -t1568 * t2099 + t1579 * t2103 - t2338;
t1525 = -t1565 * t2099 + t1577 * t2103 - t2386;
t1524 = -pkin(1) * t1802 + pkin(7) * t1675 + t1569 * t2105 + t1582 * t2101;
t1523 = -t2125 - t2403;
t1519 = t1553 * t2099 + t2231;
t1517 = t1562 * t2104 - t1566 * t2100 - t2393;
t1516 = -t2126 - t2373;
t1515 = t1520 * t2104 + t1764 * t2100;
t1513 = t1559 * t2104 - t1560 * t2100 - t2356;
t1512 = t1562 * t2100 + t1566 * t2104 - t2392;
t1508 = t1541 * t2103 + t1542 * t2099;
t1506 = t1559 * t2100 + t1560 * t2104 + t2348;
t1505 = t1509 * t2104 + t1644 * t2100;
t1503 = -t2127 - t2373;
t1502 = -t1539 * t2099 + t1543 * t2103 - t2355;
t1501 = -pkin(3) * t1519 - t2247;
t1500 = -pkin(7) * t1570 - t1537 * t2101 + t1554 * t2105;
t1499 = -t2128 + t2403;
t1498 = t1526 * t2104 - t1547 * t2100 - t2356;
t1497 = t1525 * t2104 - t1546 * t2100 + t2393;
t1496 = -pkin(1) * t1671 + pkin(7) * t1571 + t1537 * t2105 + t1554 * t2101;
t1495 = t1526 * t2100 + t1547 * t2104 + t2348;
t1494 = t1525 * t2100 + t1546 * t2104 + t2392;
t1493 = -t1529 * t2099 + t1531 * t2103 - t2355;
t1492 = t1502 * t2104 - t1587 * t2100 - t2370;
t1491 = -pkin(9) * t1519 - qJ(5) * t2231 - t1545 * t2099;
t1490 = -t1514 * t2101 + t1515 * t2105;
t1489 = t1514 * t2105 + t1515 * t2101;
t1488 = t1502 * t2100 + t1587 * t2104 + t2368;
t1487 = -t2129 - t2390;
t1486 = -pkin(3) * t1508 - t2154;
t1485 = -t1512 * t2101 + t1517 * t2105 - t2402;
t1484 = t1493 * t2104 - t1563 * t2100 - t2370;
t1483 = t1512 * t2105 + t1517 * t2101 - t2401;
t1482 = -t2130 - t2390;
t1481 = -t1506 * t2101 + t1513 * t2105 - t2371;
t1480 = t1493 * t2100 + t1563 * t2104 + t2368;
t1479 = t1506 * t2105 + t1513 * t2101 + t2369;
t1478 = -t1504 * t2101 + t1505 * t2105;
t1477 = t1504 * t2105 + t1505 * t2101;
t1476 = -pkin(9) * t1508 - t1511 * t2099 + t1522 * t2103;
t1475 = -t1495 * t2101 + t1498 * t2105 - t2371;
t1474 = t1495 * t2105 + t1498 * t2101 + t2369;
t1473 = -t1494 * t2101 + t1497 * t2105 + t2402;
t1472 = t1494 * t2105 + t1497 * t2101 + t2401;
t1471 = -pkin(8) * t1514 + t1491 * t2104 - t1501 * t2100;
t1470 = -t1488 * t2101 + t1492 * t2105 - t2387;
t1469 = t1488 * t2105 + t1492 * t2101 + t2379;
t1468 = -pkin(1) * t1489 - t2120;
t1467 = -pkin(2) * t1519 + pkin(8) * t1515 + t1491 * t2100 + t1501 * t2104;
t1466 = -t1480 * t2101 + t1484 * t2105 - t2387;
t1465 = t1480 * t2105 + t1484 * t2101 + t2379;
t1464 = -pkin(8) * t1504 + t1476 * t2104 - t1486 * t2100;
t1463 = -pkin(1) * t1477 - t2131;
t1462 = -pkin(2) * t1508 + pkin(8) * t1505 + t1476 * t2100 + t1486 * t2104;
t1461 = -pkin(7) * t1489 - t1467 * t2101 + t1471 * t2105;
t1460 = -pkin(1) * t1519 + pkin(7) * t1490 + t1467 * t2105 + t1471 * t2101;
t1459 = -pkin(7) * t1477 - t1462 * t2101 + t1464 * t2105;
t1458 = -pkin(1) * t1508 + pkin(7) * t1478 + t1462 * t2105 + t1464 * t2101;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2076, 0, -t2075, 0, t2150, -t2060, -t2138, -pkin(6) * t2138, t2048 * t2106 - t2166, t2025 * t2106 + t2078 * t2102, t2042 * t2106 + t2102 * t2189, t2047 * t2106 + t2166, t2040 * t2106 + t2102 * t2188, qJDD(2) * t2102 + t2069 * t2106, t2106 * t2008 - t2102 * t2002 - pkin(6) * (t2041 * t2102 + t2073 * t2106), t2106 * t2009 - t2102 * t2003 - pkin(6) * (t2043 * t2102 - t2072 * t2106), t2106 * t1994 - pkin(6) * (t2074 * t2102 + t2077 * t2106), -pkin(6) * (t1995 * t2102 + t2066 * t2106) - (pkin(1) * t2102 - pkin(7) * t2106) * t1994, t1885 * t2106 + t2176, t1793 * t2106 + t2022 * t2102, t1907 * t2106 + t1969 * t2102, t1884 * t2106 - t2176, t1908 * t2106 - t1965 * t2102, t2106 * t1933 + t2102 * t2187, t2106 * t1744 - t2102 * t1766 - pkin(6) * (t1877 * t2102 - t1964 * t2106), t2106 * t1747 - t2102 * t1776 - pkin(6) * (t1897 * t2102 - t2106 * t2283), t2106 * t1628 - t2102 * t1748 - pkin(6) * (t1794 * t2102 - t2005 * t2106), t2106 * t1640 - t2102 * t1673 - pkin(6) * (t1746 * t2102 + t2006 * t2106), t1753 * t2106 + t1903 * t2102, t1687 * t2106 + t1801 * t2102, t1705 * t2106 + t1886 * t2102, t1752 * t2106 - t1901 * t2102, t1706 * t2106 + t1887 * t2102, t1786 * t2106 + t1936 * t2102, t2106 * t1535 - t2102 * t1600 - pkin(6) * (t1691 * t2102 - t1857 * t2106), t2106 * t1536 - t2102 * t1602 - pkin(6) * (t1699 * t2102 - t1869 * t2106), t2106 * t1527 - t2102 * t1561 - pkin(6) * (t1675 * t2102 - t1802 * t2106), t2106 * t1500 - t2102 * t1532 - pkin(6) * (t1571 * t2102 - t1671 * t2106), t2275, -t2399, t2376, t2324, t2395, t2325, t2106 * t1481 - t2102 * t1516 - t2367, t2106 * t1485 - t2102 * t1523 + t2404, t2106 * t1470 - t2102 * t1487 - t2375, t2106 * t1461 - t2102 * t1468 - pkin(6) * (t1490 * t2102 - t1519 * t2106), t2275, t2376, t2399, t2325, -t2395, t2324, t2106 * t1475 - t2102 * t1503 - t2367, t2106 * t1466 - t2102 * t1482 - t2375, t2106 * t1473 - t2102 * t1499 - t2404, t2106 * t1459 - t2102 * t1463 - pkin(6) * (t1478 * t2102 - t1508 * t2106); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2075, 0, t2076, 0, t2060, t2150, t2167, pkin(6) * t2167, t2048 * t2102 + t2165, t2025 * t2102 - t2078 * t2106, t2042 * t2102 - t2106 * t2189, t2047 * t2102 - t2165, t2040 * t2102 - t2106 * t2188, -qJDD(2) * t2106 + t2069 * t2102, t2102 * t2008 + t2106 * t2002 + pkin(6) * (t2041 * t2106 - t2073 * t2102), t2102 * t2009 + t2106 * t2003 + pkin(6) * (t2043 * t2106 + t2072 * t2102), t2102 * t1994 + pkin(6) * (t2074 * t2106 - t2077 * t2102), pkin(6) * (t1995 * t2106 - t2066 * t2102) - (-pkin(1) * t2106 - pkin(7) * t2102) * t1994, t1885 * t2102 - t2175, t1793 * t2102 - t2022 * t2106, t1907 * t2102 - t1969 * t2106, t1884 * t2102 + t2175, t1908 * t2102 + t1965 * t2106, t2102 * t1933 - t2106 * t2187, t2102 * t1744 + t2106 * t1766 + pkin(6) * (t1877 * t2106 + t1964 * t2102), t2102 * t1747 + t2106 * t1776 + pkin(6) * (t1897 * t2106 + t2102 * t2283), t2102 * t1628 + t2106 * t1748 + pkin(6) * (t1794 * t2106 + t2005 * t2102), t2102 * t1640 + t2106 * t1673 + pkin(6) * (t1746 * t2106 - t2006 * t2102), t1753 * t2102 - t1903 * t2106, t1687 * t2102 - t1801 * t2106, t1705 * t2102 - t1886 * t2106, t1752 * t2102 + t1901 * t2106, t1706 * t2102 - t1887 * t2106, t1786 * t2102 - t1936 * t2106, t2102 * t1535 + t2106 * t1600 + pkin(6) * (t1691 * t2106 + t1857 * t2102), t2102 * t1536 + t2106 * t1602 + pkin(6) * (t1699 * t2106 + t1869 * t2102), t2102 * t1527 + t2106 * t1561 + pkin(6) * (t1675 * t2106 + t1802 * t2102), t2102 * t1500 + t2106 * t1532 + pkin(6) * (t1571 * t2106 + t1671 * t2102), t2282, -t2400, t2377, t2327, t2396, t2328, t2102 * t1481 + t2106 * t1516 + t2366, t2102 * t1485 + t2106 * t1523 - t2405, t2102 * t1470 + t2106 * t1487 + t2374, t2102 * t1461 + t2106 * t1468 + pkin(6) * (t1490 * t2106 + t1519 * t2102), t2282, t2377, t2400, t2328, -t2396, t2327, t2102 * t1475 + t2106 * t1503 + t2366, t2102 * t1466 + t2106 * t1482 + t2374, t2102 * t1473 + t2106 * t1499 + t2405, t2102 * t1459 + t2106 * t1463 + pkin(6) * (t1478 * t2106 + t1508 * t2102); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2081, t2082, 0, 0, t2035, t2024, t2038, t2034, t2036, 0, t1988, t1987, t1952, t1962, t1883, t1791, t1905, t1882, t1906, t1932, t1707, t1735, t1627, t1629, t1751, t1686, t1703, t1750, t1704, t1785, t1533, t1534, t1524, t1496, t2255, t1556, t2362, t2303, -t1590, t2305, t1479, t1483, t1469, t1460, t2255, t2362, -t1556, t2305, t1590, t2303, t1474, t1465, t1472, t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2254, 0, 0, -g(3), -t2081, 0, t2048, t2025, t2042, t2047, t2040, t2069, t2008, t2009, t1994, pkin(7) * t1994, t1885, t1793, t1907, t1884, t1908, t1933, t1744, t1747, t1628, t1640, t1753, t1687, t1705, t1752, t1706, t1786, t1535, t1536, t1527, t1500, t2256, -t1557, t2363, t2304, t1595, t2306, t1481, t1485, t1470, t1461, t2256, t2363, t1557, t2306, -t1595, t2304, t1475, t1466, t1473, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2254, 0, qJDD(1), 0, g(3), 0, -t2082, 0, t2088, -t2078, -t2189, -t2088, -t2188, -qJDD(2), t2002, t2003, 0, pkin(1) * t1994, -t2023, -t2022, -t1969, t2023, t1965, -t2187, t1766, t1776, t1748, t1673, -t1903, -t1801, -t1886, t1901, -t1887, -t1936, t1600, t1602, t1561, t1532, -t1723, -t1634, -t2321, -t2257, -t1739, -t2260, t1516, t1523, t1487, t1468, -t1723, -t2321, t1634, -t2260, t1739, -t2257, t1503, t1482, t1499, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2081, t2082, 0, 0, t2035, t2024, t2038, t2034, t2036, 0, t1988, t1987, t1952, t1962, t1883, t1791, t1905, t1882, t1906, t1932, t1707, t1735, t1627, t1629, t1751, t1686, t1703, t1750, t1704, t1785, t1533, t1534, t1524, t1496, t2255, t1556, t2362, t2303, -t1590, t2305, t1479, t1483, t1469, t1460, t2255, t2362, -t1556, t2305, t1590, t2303, t1474, t1465, t1472, t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2133, t2073, t2079, -t2173, t2085, t2173, 0, -t2066, t2045, 0, t1961, t1894, t1974, t1959, t1975, t2011, t1911, t1924, t1758, -pkin(8) * t1835, t1841, t1775, t1789, t1840, t1790, t1891, t1616, t1622, t1582, t1554, t2143, t1626, t2344, t2277, -t1664, t2276, t1513, t1517, t1492, t1471, t2143, t2344, -t1626, t2276, t1664, t2277, t1498, t1484, t1497, t1464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2174, t2072, t2083, -t2132, t2080, -t2174, t2066, 0, t2046, 0, t1960, t1892, t1972, t1958, t1973, t2010, t1837, t1844, t1749, t1795, t1839, t1774, t1787, t1838, t1788, t1890, t1601, t1603, t1569, t1537, t2144, t1624, t2346, t2278, -t1660, t2280, t1506, t1512, t1488, t1467, t2144, t2346, -t1624, t2280, t1660, t2278, t1495, t1480, t1494, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2088, t2078, t2189, t2088, t2188, qJDD(2), -t2045, -t2046, 0, 0, t2023, t2022, t1969, -t2023, -t1965, t2187, t2135, t2155, t2249, t2250, t1903, t1801, t1886, -t1901, t1887, t1936, t2137, t2136, t2124, t2156, t1723, t1634, t2321, t2257, t1739, t2260, t2126, t2125, t2129, t2120, t1723, t2321, -t1634, t2260, -t1739, t2257, t2127, t2130, t2128, t2131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2111, -t1964, t2266, t2054, t2049, -t2054, 0, -t2006, t1926, 0, t1904, t1803, t1888, t1902, t1889, t1937, t1765, t1769, t1641, -pkin(9) * t1671, t1726, t1638, t2320, t2258, -t1742, t2259, t1559, t1562, t1502, t1491, t1726, t2320, -t1638, t2259, t1742, t2258, t1526, t1493, t1525, t1476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2169, t2283, t2050, t2004, t2018, -t2169, t2006, 0, t1927, 0, -t1998, t1992, -t1916, t1998, t1912, -t2001, t1715, t1720, -pkin(3) * t1802, -pkin(3) * t1671, -t2212, -t2269, -t2264, t2212, t1819, -t2001, t1560, t1566, t1587, t1501, -t2212, -t2264, t2269, -t2001, -t1819, t2212, t1547, t1563, t1546, t1486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2023, t2022, t1969, -t2023, -t1965, t2187, -t1926, -t1927, 0, 0, t1903, t1801, t1886, -t1901, t1887, t1936, t2171, t2172, t2157, t2191, t1723, t1634, t2321, t2257, t1739, t2260, t2159, t2158, t2162, t2123, t1723, t2321, -t1634, t2260, -t1739, t2257, t2160, t2163, t2161, t2164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1941, t1913, t2268, t2014, t2012, -t2014, 0, t1863, t1761, 0, t1810, t1733, t2312, t2134, t1834, t2141, t1677, t1689, t1543, -qJ(5) * t1552, t1810, t2312, -t1733, t2141, -t1834, t2134, t1579, t1531, t1577, t1522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2015, t1915, t2013, -t2108, t1929, -t2015, -t1863, 0, t1762, 0, t1809, t1729, t2311, t2142, t1830, t2122, t1645, t1649, t1539, t1545, t1809, t2311, -t1729, t2122, -t1830, t2142, t1568, t1529, t1565, t1511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1998, -t1992, t1916, -t1998, -t1912, t2001, -t1761, -t1762, 0, 0, t2212, t2269, t2264, -t2212, -t1819, t2001, t1979 - t2168 + t2317, t1978 + t2153, t2246, t2247, t2212, t2264, -t2269, t2001, t1819, -t2212, t2116 + t2317, t2152, t2117 + t2270, t2154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1853, -t2274, t2265, t2213, t1947, -t2213, 0, t1764, t1618, 0, t1853, t2265, t2274, -t2213, -t1947, t2213, -qJ(6) * t2274, t1581, t1620, -qJ(6) * t1644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1954, t2273, -t1948, -t1852, t2267, -t1954, -t1764, 0, t1619, 0, t1954, -t1948, -t2273, -t1954, -t2267, -t1852, t1621, t1580, pkin(5) * t2273, -pkin(5) * t1644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2212, t2269, t2264, -t2212, -t1819, t2001, -t1618, -t1619, 0, 0, t2212, t2264, -t2269, t2001, t1819, -t2212, t2116, t2192, t1597 + t2272, t2194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1853, t2265, t2274, -t2213, -t1947, t2213, 0, t1599, -t1644, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2212, t2264, -t2269, t2001, t1819, -t2212, -t1599, 0, t1597, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1954, t1948, t2273, t1954, t2267, t1852, t1644, -t1597, 0, 0;];
m_new_reg  = t1;
