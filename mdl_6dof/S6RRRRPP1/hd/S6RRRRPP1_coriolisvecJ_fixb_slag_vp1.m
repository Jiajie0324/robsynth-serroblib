% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,theta5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRPP1_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP1_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP1_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP1_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRRPP1_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRRPP1_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRRPP1_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:44:03
% EndTime: 2019-03-09 20:46:29
% DurationCPUTime: 128.44s
% Computational Cost: add. (74900->1614), mult. (83417->2058), div. (0->0), fcn. (78084->10), ass. (0->777)
t1435 = Icges(6,1) + Icges(7,1);
t1446 = Icges(7,4) + Icges(6,5);
t1445 = Icges(6,6) - Icges(7,6);
t786 = qJ(4) + pkin(10);
t765 = sin(t786);
t1471 = (Icges(6,4) - Icges(7,5)) * t765;
t1434 = Icges(6,2) + Icges(7,3);
t766 = cos(t786);
t1470 = t1435 * t766 - t1471;
t791 = sin(qJ(4));
t794 = cos(qJ(4));
t1469 = Icges(5,5) * t794 - Icges(5,6) * t791 - t1445 * t765 + t1446 * t766;
t789 = qJ(2) + qJ(3);
t769 = sin(t789);
t770 = cos(t789);
t1275 = Icges(6,4) * t766;
t991 = -Icges(6,2) * t765 + t1275;
t1468 = -t1445 * t770 + t769 * t991;
t1464 = Icges(7,2) + Icges(5,3) + Icges(6,3);
t1222 = t765 * t769;
t1267 = Icges(7,5) * t766;
t697 = t769 * t1267;
t1444 = Icges(7,3) * t1222 - t1468 + t697;
t1441 = -t1446 * t770 + t1470 * t769;
t983 = Icges(7,3) * t765 + t1267;
t1467 = (t983 - t991) * t770;
t1466 = t1470 * t770;
t1465 = t1434 * t766 + t1471;
t1463 = t1469 * t770;
t1462 = -Icges(5,5) * t791 - Icges(5,6) * t794 - t1445 * t766 - t1446 * t765;
t796 = cos(qJ(1));
t1218 = t769 * t796;
t1437 = -t1464 * t770 + t1469 * t769;
t1278 = Icges(5,4) * t794;
t993 = -Icges(5,2) * t791 + t1278;
t553 = -Icges(5,6) * t770 + t769 * t993;
t1279 = Icges(5,4) * t791;
t1000 = Icges(5,1) * t794 - t1279;
t555 = -Icges(5,5) * t770 + t1000 * t769;
t1203 = t796 * t765;
t793 = sin(qJ(1));
t1209 = t793 * t766;
t602 = t1203 * t770 - t1209;
t1215 = t770 * t796;
t603 = t1215 * t766 + t765 * t793;
t1202 = t796 * t791;
t1208 = t793 * t794;
t650 = -t1202 * t770 + t1208;
t1206 = t794 * t796;
t1212 = t791 * t793;
t651 = t1206 * t770 + t1212;
t1352 = t1218 * t1437 + t1441 * t603 + t1444 * t602 + t553 * t650 + t555 * t651;
t313 = Icges(6,5) * t603 - Icges(6,6) * t602 + Icges(6,3) * t1218;
t316 = Icges(7,4) * t603 + Icges(7,2) * t1218 + Icges(7,6) * t602;
t387 = Icges(5,5) * t651 + Icges(5,6) * t650 + Icges(5,3) * t1218;
t1438 = t313 + t316 + t387;
t1269 = Icges(7,5) * t602;
t322 = Icges(7,1) * t603 + Icges(7,4) * t1218 + t1269;
t572 = Icges(6,4) * t602;
t325 = Icges(6,1) * t603 + Icges(6,5) * t1218 - t572;
t1451 = t322 + t325;
t569 = Icges(7,5) * t603;
t310 = Icges(7,6) * t1218 + Icges(7,3) * t602 + t569;
t1277 = Icges(6,4) * t603;
t319 = -Icges(6,2) * t602 + Icges(6,6) * t1218 + t1277;
t1453 = t310 - t319;
t1280 = Icges(5,4) * t651;
t390 = Icges(5,2) * t650 + Icges(5,6) * t1218 + t1280;
t626 = Icges(5,4) * t650;
t393 = Icges(5,1) * t651 + Icges(5,5) * t1218 + t626;
t1388 = t1218 * t1438 + t1451 * t603 + t1453 * t602 + t650 * t390 + t651 * t393;
t1219 = t769 * t793;
t1216 = t770 * t793;
t600 = t1216 * t765 + t766 * t796;
t601 = t1209 * t770 - t1203;
t311 = Icges(6,5) * t601 - Icges(6,6) * t600 + Icges(6,3) * t1219;
t314 = Icges(7,4) * t601 + Icges(7,2) * t1219 + Icges(7,6) * t600;
t648 = t1212 * t770 + t1206;
t649 = t1208 * t770 - t1202;
t385 = Icges(5,5) * t649 - Icges(5,6) * t648 + Icges(5,3) * t1219;
t1387 = t311 + t314 + t385;
t568 = Icges(7,5) * t601;
t309 = -Icges(7,6) * t1219 - Icges(7,3) * t600 - t568;
t571 = Icges(6,4) * t601;
t317 = -Icges(6,2) * t600 + Icges(6,6) * t1219 + t571;
t1421 = t309 + t317;
t567 = Icges(7,5) * t600;
t320 = Icges(7,1) * t601 + Icges(7,4) * t1219 + t567;
t570 = Icges(6,4) * t600;
t324 = -Icges(6,1) * t601 - Icges(6,5) * t1219 + t570;
t1452 = t320 - t324;
t625 = Icges(5,4) * t649;
t388 = -Icges(5,2) * t648 + Icges(5,6) * t1219 + t625;
t624 = Icges(5,4) * t648;
t392 = -Icges(5,1) * t649 - Icges(5,5) * t1219 + t624;
t1389 = t1218 * t1387 - t1421 * t602 + t1452 * t603 + t650 * t388 - t392 * t651;
t1130 = qJD(4) * t796;
t768 = qJD(2) * t793;
t701 = qJD(3) * t793 + t768;
t620 = t1130 * t769 + t701;
t1131 = qJD(4) * t793;
t785 = qJD(2) + qJD(3);
t702 = t785 * t796;
t621 = -t1131 * t769 + t702;
t1133 = qJD(4) * t770;
t735 = qJD(1) - t1133;
t1354 = t1352 * t735 + t1388 * t620 - t1389 * t621;
t1353 = t1219 * t1437 + t1441 * t601 + t1444 * t600 - t553 * t648 + t555 * t649;
t1390 = t1219 * t1438 + t1451 * t601 + t1453 * t600 - t648 * t390 + t649 * t393;
t1391 = t1219 * t1387 - t1421 * t600 + t1452 * t601 - t388 * t648 - t392 * t649;
t1355 = t1353 * t735 + t1390 * t620 - t1391 * t621;
t1081 = t770 * t1130;
t1114 = t769 * t702;
t281 = qJD(1) * t600 - t1081 * t766 + (t1114 - t1131) * t765;
t1041 = qJD(1) * t770 - qJD(4);
t1336 = t1041 * t793 + t1114;
t941 = t796 * t735;
t282 = -t1336 * t766 + t765 * t941;
t1137 = qJD(1) * t793;
t1091 = t769 * t1137;
t1112 = t770 * t702;
t878 = -t1091 + t1112;
t170 = Icges(7,5) * t282 + Icges(7,6) * t878 - Icges(7,3) * t281;
t176 = Icges(6,4) * t282 + Icges(6,2) * t281 + Icges(6,6) * t878;
t1459 = t170 - t176;
t1214 = t785 * t793;
t1115 = t769 * t1214;
t1136 = qJD(1) * t796;
t1082 = t770 * t1131;
t1431 = -t1137 + t1082;
t283 = t1431 * t766 + (t1136 * t770 - t1115 - t1130) * t765;
t939 = t1041 * t796;
t1403 = t939 - t1115;
t942 = t793 * t735;
t284 = t1403 * t766 + t765 * t942;
t1090 = t769 * t1136;
t1113 = t770 * t1214;
t879 = t1090 + t1113;
t171 = Icges(7,5) * t284 + Icges(7,6) * t879 + Icges(7,3) * t283;
t177 = Icges(6,4) * t284 - Icges(6,2) * t283 + Icges(6,6) * t879;
t1458 = t171 - t177;
t178 = Icges(7,1) * t282 + Icges(7,4) * t878 - Icges(7,5) * t281;
t180 = Icges(6,1) * t282 + Icges(6,4) * t281 + Icges(6,5) * t878;
t1457 = t178 + t180;
t179 = Icges(7,1) * t284 + Icges(7,4) * t879 + Icges(7,5) * t283;
t181 = Icges(6,1) * t284 - Icges(6,4) * t283 + Icges(6,5) * t879;
t1456 = t179 + t181;
t1455 = t1467 * t785 + (qJD(4) * t1465 - t1445 * t785) * t769;
t997 = -Icges(6,1) * t765 - t1275;
t1454 = t1466 * t785 + (t1446 * t785 + (-Icges(7,1) * t765 + t1267 + t997) * qJD(4)) * t769;
t172 = Icges(6,5) * t282 + Icges(6,6) * t281 + Icges(6,3) * t878;
t174 = Icges(7,4) * t282 + Icges(7,2) * t878 - Icges(7,6) * t281;
t352 = t1336 * t791 + t794 * t941;
t940 = t735 * t791;
t353 = -t1336 * t794 + t796 * t940;
t205 = Icges(5,5) * t353 + Icges(5,6) * t352 + Icges(5,3) * t878;
t1450 = t172 + t174 + t205;
t173 = Icges(6,5) * t284 - Icges(6,6) * t283 + Icges(6,3) * t879;
t175 = Icges(7,4) * t284 + Icges(7,2) * t879 + Icges(7,6) * t283;
t354 = -t1403 * t791 + t794 * t942;
t1213 = t785 * t794;
t355 = t794 * t939 + (-t1213 * t769 + t940) * t793;
t206 = Icges(5,5) * t355 + Icges(5,6) * t354 + Icges(5,3) * t879;
t1449 = t173 + t175 + t206;
t1448 = t1463 * t785 + (qJD(4) * t1462 + t1464 * t785) * t769;
t1447 = t1441 * t766 + t1444 * t765 - t553 * t791 + t555 * t794;
t1443 = rSges(7,1) + pkin(5);
t1422 = rSges(7,3) + qJ(6);
t797 = -pkin(8) - pkin(7);
t763 = t796 * t797;
t1442 = -t769 * t983 + t1468;
t1003 = pkin(5) * t766 + qJ(6) * t765;
t1005 = rSges(7,1) * t766 + rSges(7,3) * t765;
t1173 = -rSges(7,2) * t770 + (t1003 + t1005) * t769;
t208 = Icges(5,4) * t355 + Icges(5,2) * t354 + Icges(5,6) * t879;
t210 = Icges(5,1) * t355 + Icges(5,4) * t354 + Icges(5,5) * t879;
t1400 = t1218 * t1449 + t1387 * t878 + t1421 * t281 + t1452 * t282 + t1456 * t603 + t1458 * t602 + t208 * t650 + t210 * t651 + t352 * t388 - t353 * t392;
t207 = Icges(5,4) * t353 + Icges(5,2) * t352 + Icges(5,6) * t878;
t209 = Icges(5,1) * t353 + Icges(5,4) * t352 + Icges(5,5) * t878;
t1399 = t1450 * t1218 + t1438 * t878 + t1451 * t282 - t1453 * t281 + t1457 * t603 + t1459 * t602 + t207 * t650 + t209 * t651 + t352 * t390 + t353 * t393;
t1398 = t1219 * t1449 + t1387 * t879 - t1421 * t283 + t1452 * t284 + t1456 * t601 + t1458 * t600 - t208 * t648 + t210 * t649 + t354 * t388 - t355 * t392;
t1397 = t1450 * t1219 + t1438 * t879 + t1451 * t284 + t1453 * t283 + t1457 * t601 + t1459 * t600 - t207 * t648 + t209 * t649 + t354 * t390 + t355 * t393;
t897 = t993 * t770;
t992 = -Icges(5,2) * t794 - t1279;
t327 = t785 * t897 + (Icges(5,6) * t785 + qJD(4) * t992) * t769;
t900 = t1000 * t770;
t999 = -Icges(5,1) * t791 - t1278;
t328 = t785 * t900 + (Icges(5,5) * t785 + qJD(4) * t999) * t769;
t1394 = t1219 * t1448 + t1437 * t879 + t1441 * t284 + t1444 * t283 + t1454 * t601 + t1455 * t600 - t327 * t648 + t328 * t649 + t354 * t553 + t355 * t555;
t1392 = t1218 * t1448 + t1437 * t878 + t1441 * t282 - t1444 * t281 + t1454 * t603 + t1455 * t602 + t327 * t650 + t328 * t651 + t352 * t553 + t353 * t555;
t961 = -t309 * t765 + t320 * t766;
t143 = -t314 * t770 + t769 * t961;
t959 = -t317 * t765 - t324 * t766;
t145 = -t311 * t770 + t769 * t959;
t957 = -t388 * t791 - t392 * t794;
t159 = -t385 * t770 + t769 * t957;
t1440 = t143 + t145 + t159;
t960 = t310 * t765 + t322 * t766;
t144 = -t316 * t770 + t769 * t960;
t958 = -t319 * t765 + t325 * t766;
t146 = -t313 * t770 + t769 * t958;
t956 = -t390 * t791 + t393 * t794;
t160 = -t387 * t770 + t769 * t956;
t1439 = t144 + t146 + t160;
t1351 = -t1437 * t770 + t1447 * t769;
t1436 = (t1464 * t769 - t1447 + t1463) * t735 + (t1437 * t793 + t957 + t959 + t961) * t621 + (-t1437 * t796 - t956 - t958 - t960) * t620;
t1188 = rSges(7,2) * t1218 + t1422 * t602 + t1443 * t603;
t562 = qJD(6) * t600;
t1433 = t1422 * t283 + t1443 * t284 + t562;
t566 = qJD(6) * t602;
t1432 = rSges(7,2) * t1112 - t1422 * t281 + t1443 * t282 + t566;
t1430 = t1354 * t796 + t1355 * t793;
t1429 = (t1447 * t785 - t1448) * t770 + (-t327 * t791 + t328 * t794 + t1454 * t766 + t1455 * t765 + t1437 * t785 + (-t1441 * t765 + t1444 * t766 - t553 * t794 - t555 * t791) * qJD(4)) * t769;
t1428 = (-Icges(5,5) * t648 - Icges(5,6) * t649 - t1445 * t601 - t1446 * t600) * t621 + (-Icges(5,5) * t650 + Icges(5,6) * t651 + t1445 * t603 + t1446 * t602) * t620 - t1462 * t735 * t769;
t1198 = rSges(7,2) * t879 + t1433;
t1197 = -rSges(7,2) * t1091 + t1432;
t1191 = rSges(7,2) * t1219 + t1422 * t600 + t1443 * t601;
t1419 = t1442 * t793;
t1418 = t1442 * t796;
t1417 = t1441 * t793;
t1416 = t1441 * t796;
t1415 = t1173 * t793;
t1414 = t1173 * t796;
t1413 = -t1445 * t769 + t1467;
t1412 = t1446 * t769 + t1466;
t1297 = rSges(7,2) * t769;
t907 = t1005 * t770;
t1411 = -t1003 * t770 - t1297 - t907;
t1262 = Icges(4,6) * t796;
t575 = Icges(4,4) * t1216 - Icges(4,2) * t1219 - t1262;
t754 = Icges(4,4) * t770;
t669 = Icges(4,1) * t769 + t754;
t1410 = -t669 * t793 - t575;
t994 = -Icges(4,2) * t769 + t754;
t576 = Icges(4,6) * t793 + t796 * t994;
t1409 = -t669 * t796 - t576;
t1281 = Icges(4,4) * t769;
t670 = Icges(4,1) * t770 - t1281;
t578 = Icges(4,5) * t793 + t670 * t796;
t667 = Icges(4,2) * t770 + t1281;
t1408 = -t667 * t796 + t578;
t1407 = -t667 + t670;
t1406 = t669 + t994;
t1134 = qJD(4) * t769;
t1083 = t785 * t1134;
t1122 = qJD(1) * qJD(3);
t1123 = qJD(1) * qJD(2);
t757 = t793 * t1123;
t675 = t793 * t1122 + t757;
t486 = qJD(4) * t879 + t675;
t758 = t796 * t1123;
t676 = t796 * t1122 + t758;
t487 = qJD(4) * t878 + t676;
t1402 = t1083 * t1352 + t1388 * t487 + t1389 * t486 + t1392 * t735 + t1399 * t620 - t1400 * t621;
t1401 = t1083 * t1353 + t1390 * t487 + t1391 * t486 + t1394 * t735 + t1397 * t620 - t1398 * t621;
t49 = (t785 * t961 - t175) * t770 + (t171 * t765 + t179 * t766 + t314 * t785 + (-t309 * t766 - t320 * t765) * qJD(4)) * t769;
t51 = (t785 * t959 - t173) * t770 + (-t177 * t765 + t181 * t766 + t311 * t785 + (-t317 * t766 + t324 * t765) * qJD(4)) * t769;
t58 = (t785 * t957 - t206) * t770 + (-t208 * t791 + t210 * t794 + t385 * t785 + (-t388 * t794 + t392 * t791) * qJD(4)) * t769;
t1396 = t49 + t51 + t58;
t50 = (t785 * t960 - t174) * t770 + (t170 * t765 + t178 * t766 + t316 * t785 + (t310 * t766 - t322 * t765) * qJD(4)) * t769;
t52 = (t785 * t958 - t172) * t770 + (-t176 * t765 + t180 * t766 + t313 * t785 + (-t319 * t766 - t325 * t765) * qJD(4)) * t769;
t59 = (t785 * t956 - t205) * t770 + (-t207 * t791 + t209 * t794 + t387 * t785 + (-t390 * t794 - t393 * t791) * qJD(4)) * t769;
t1395 = t50 + t52 + t59;
t1393 = t1351 * t735 + t1439 * t620 - t1440 * t621;
t1386 = t1436 * t769;
t1385 = -t1387 * t621 + t1437 * t735 + t1438 * t620;
t1349 = t1439 * t796 + t1440 * t793;
t1384 = -t1439 * t793 + t1440 * t796;
t1348 = t1388 * t796 + t1389 * t793;
t1383 = -t1388 * t793 + t1389 * t796;
t1347 = t1390 * t796 + t1391 * t793;
t1382 = -t1390 * t793 + t1391 * t796;
t1306 = pkin(4) * t794;
t1093 = pkin(3) + t1306;
t1217 = t770 * t785;
t790 = -qJ(5) - pkin(9);
t1111 = t790 * t1217;
t1132 = qJD(4) * t791;
t1221 = t769 * t785;
t1381 = -t770 * pkin(4) * t1132 - t1093 * t1221 - t1111;
t1012 = rSges(5,1) * t649 - rSges(5,2) * t648;
t416 = rSges(5,3) * t1219 + t1012;
t1011 = rSges(5,1) * t794 - rSges(5,2) * t791;
t557 = -rSges(5,3) * t770 + t1011 * t769;
t1380 = -t416 * t735 - t557 * t621;
t1016 = t770 * t1093;
t1152 = pkin(4) * t1212 + t796 * t1016;
t737 = pkin(3) * t1215;
t646 = pkin(9) * t1218 + t737;
t380 = -t1218 * t790 + t1152 - t646;
t1104 = t380 + t1188;
t1301 = pkin(9) + t790;
t500 = t1301 * t770 + t769 * t1306;
t1128 = qJD(5) * t793;
t718 = t769 * t1128;
t795 = cos(qJ(2));
t760 = pkin(2) * t795 + pkin(1);
t729 = t796 * t760;
t1046 = -t793 * t797 + t729;
t782 = t793 * pkin(7);
t724 = t796 * pkin(1) + t782;
t561 = t1046 - t724;
t1162 = t561 + t724;
t677 = t769 * pkin(3) - t770 * pkin(9);
t1291 = pkin(2) * qJD(2);
t792 = sin(qJ(2));
t1118 = t792 * t1291;
t740 = t793 * t1118;
t881 = qJD(1) * (t646 + t1162) - t701 * t677 - t740;
t856 = -t620 * t500 + t718 + t881;
t1379 = -t1104 * t735 + t1173 * t620 - t562 - t856;
t1378 = 0.2e1 * qJD(2);
t1375 = rSges(3,2) * t792;
t1096 = -t500 - t1173;
t1004 = -rSges(7,1) * t765 + rSges(7,3) * t766;
t1126 = qJD(6) * t769;
t695 = t765 * t1126;
t877 = t1134 * t766 + t1217 * t765;
t1194 = -t785 * t907 - (rSges(7,2) * t785 + qJD(4) * t1004) * t769 - t695 - t877 * qJ(6) - (-t1134 * t765 + t1217 * t766) * pkin(5);
t1074 = t1301 * t769;
t1129 = qJD(5) * t770;
t287 = -t1129 - t785 * t1074 + (-t1132 * t769 + t1213 * t770) * pkin(4);
t1109 = -t287 + t1194;
t1116 = qJD(4) * t1306;
t1120 = pkin(4) * t1202;
t1127 = qJD(5) * t796;
t720 = t769 * t1127;
t1033 = qJD(1) * t1120 + t790 * t1091 + t793 * t1116 + t720;
t691 = pkin(9) * t1112;
t938 = -pkin(9) * t1091 + t691;
t197 = -t796 * t1111 + (-t794 * t1114 + (-t1130 * t791 - t1137 * t794) * t770) * pkin(4) - t938 + t1033;
t719 = t770 * t1128;
t880 = -t1137 * t770 - t1114;
t426 = pkin(3) * t880 + t938;
t1305 = t770 * pkin(3);
t678 = t769 * pkin(9) + t1305;
t613 = t678 * t785;
t1204 = t795 * qJD(2) ^ 2;
t1135 = qJD(2) * t796;
t1086 = t792 * t1135;
t1042 = pkin(2) * t1086;
t1302 = pkin(1) - t760;
t764 = pkin(7) * t1136;
t466 = -t1042 - t764 + (t1302 * t793 - t763) * qJD(1);
t664 = qJD(1) * (-pkin(1) * t1137 + t764);
t834 = qJD(1) * t466 + t664 + (-t1204 * t793 - t758 * t792) * pkin(2);
t811 = qJD(1) * t426 - t701 * t613 - t676 * t677 + t834;
t808 = qJD(1) * t720 + t380 * t1083 + t735 * t197 + t785 * t719 + t811;
t31 = qJD(6) * t283 + t1083 * t1188 + t1096 * t487 + t1109 * t620 + t1197 * t735 + t808;
t1374 = t31 * t793;
t1008 = rSges(6,1) * t766 - rSges(6,2) * t765;
t522 = -rSges(6,3) * t770 + t1008 * t769;
t1177 = -t500 - t522;
t1007 = -rSges(6,1) * t765 - rSges(6,2) * t766;
t908 = t1008 * t770;
t274 = t785 * t908 + (rSges(6,3) * t785 + qJD(4) * t1007) * t769;
t1193 = -t274 - t287;
t1108 = t282 * rSges(6,1) + t281 * rSges(6,2) + rSges(6,3) * t1112;
t183 = -rSges(6,3) * t1091 + t1108;
t336 = t603 * rSges(6,1) - t602 * rSges(6,2) + rSges(6,3) * t1218;
t37 = t1083 * t336 + t1177 * t487 + t1193 * t620 + t735 * t183 + t808;
t1373 = t37 * t793;
t1187 = t336 + t380;
t120 = t1187 * t735 - t522 * t620 + t856;
t332 = rSges(6,1) * t601 - rSges(6,2) * t600 + rSges(6,3) * t1219;
t671 = t793 * t1016;
t379 = t1120 - t671 + (t1305 + t1074) * t793;
t1190 = -t332 + t379;
t1060 = t1190 * t769;
t1366 = qJD(4) * t785;
t1009 = t284 * rSges(6,1) - t283 * rSges(6,2);
t185 = rSges(6,3) * t879 + t1009;
t690 = pkin(3) * t1115;
t1346 = pkin(9) * t879 - t690;
t928 = -t790 * t1090 - t796 * t1116 + t1381 * t793 + t718;
t198 = pkin(4) * qJD(1) * t651 - t1346 + t928;
t1146 = t797 * t1137 + t740;
t467 = (-t1302 * t796 - t782) * qJD(1) - t1146;
t694 = t724 * qJD(1);
t1179 = -t467 - t694;
t427 = qJD(1) * t737 + t1346;
t1099 = -t427 + t1179;
t721 = t770 * t1127;
t944 = -pkin(2) * t1204 * t796 + qJD(1) * t740;
t876 = -t702 * t613 + t675 * t677 + t944;
t810 = t486 * t500 + t785 * t721 + (-t718 + t1099) * qJD(1) - t621 * t287 + t876;
t38 = -t274 * t621 + t486 * t522 + (-t185 - t198) * t735 + t1060 * t1366 + t810;
t1371 = qJD(1) * t120 + t38;
t1105 = t379 - t1191;
t1017 = t769 * t1105;
t32 = -qJD(6) * t281 + t1194 * t621 + t1173 * t486 + (-t198 - t1198) * t735 + t1017 * t1366 + t810;
t1370 = -qJD(1) * t1379 + t32;
t1148 = -t793 * t760 - t763;
t783 = t796 * pkin(7);
t723 = pkin(1) * t793 - t783;
t560 = t723 + t1148;
t698 = qJD(1) * t723;
t1369 = qJD(1) * t560 - t698;
t1368 = (t1465 * t769 - t1441) * t735 + (-t1434 * t601 + t1452 + t567 - t570) * t621 + (t1434 * t603 - t1269 - t1451 + t572) * t620;
t1367 = (-Icges(7,1) * t1222 + t997 * t769 + t1444 + t697) * t735 + (t1435 * t600 + t1421 - t568 + t571) * t621 + (-t1435 * t602 - t1277 + t1453 + t569) * t620;
t1363 = -t702 * t677 - t1042;
t643 = t677 * t793;
t1044 = qJD(1) * t643 - t702 * t678;
t497 = t557 * t793;
t1295 = rSges(5,3) * t769;
t909 = t1011 * t770;
t558 = t909 + t1295;
t647 = t677 * t1137;
t1362 = t1134 * t416 - t1431 * t557 - t497 * t735 + t621 * t558 - t1044 + t647;
t777 = Icges(3,4) * t795;
t995 = -Icges(3,2) * t792 + t777;
t708 = Icges(3,1) * t792 + t777;
t1350 = t1428 * t769;
t1345 = t1083 * t1351 + t1429 * t735;
t665 = Icges(4,5) * t769 + Icges(4,6) * t770;
t1225 = t665 * t796;
t1230 = t576 * t769;
t1257 = Icges(4,3) * t796;
t666 = Icges(4,5) * t770 - Icges(4,6) * t769;
t1344 = -t785 * t1225 + (-t578 * t770 - t666 * t793 + t1230 + t1257) * qJD(1);
t574 = Icges(4,3) * t793 + t666 * t796;
t1140 = qJD(1) * t574;
t1226 = t665 * t793;
t1272 = Icges(4,5) * t796;
t727 = Icges(4,4) * t1219;
t577 = Icges(4,1) * t1216 - t1272 - t727;
t950 = t575 * t769 - t577 * t770;
t1343 = qJD(1) * t950 - t1226 * t785 + t1140;
t1258 = Icges(3,3) * t796;
t705 = Icges(3,5) * t795 - Icges(3,6) * t792;
t704 = Icges(3,5) * t792 + Icges(3,6) * t795;
t886 = qJD(2) * t704;
t617 = Icges(3,6) * t793 + t796 * t995;
t1227 = t617 * t792;
t1282 = Icges(3,4) * t792;
t709 = Icges(3,1) * t795 - t1282;
t619 = Icges(3,5) * t793 + t709 * t796;
t947 = -t619 * t795 + t1227;
t1342 = -t796 * t886 + (-t705 * t793 + t1258 + t947) * qJD(1);
t615 = Icges(3,3) * t793 + t705 * t796;
t1139 = qJD(1) * t615;
t1207 = t793 * t795;
t1211 = t792 * t793;
t1263 = Icges(3,6) * t796;
t616 = Icges(3,4) * t1207 - Icges(3,2) * t1211 - t1263;
t1228 = t616 * t792;
t1273 = Icges(3,5) * t796;
t749 = Icges(3,4) * t1211;
t618 = Icges(3,1) * t1207 - t1273 - t749;
t948 = -t618 * t795 + t1228;
t1341 = qJD(1) * t948 - t793 * t886 + t1139;
t946 = t667 * t769 - t669 * t770;
t1340 = qJD(1) * t946 + t666 * t785;
t706 = Icges(3,2) * t795 + t1282;
t945 = t706 * t792 - t708 * t795;
t1339 = t945 * qJD(1) + t705 * qJD(2);
t1171 = t561 * t1135 - t560 * t768;
t595 = rSges(4,1) * t1216 - rSges(4,2) * t1219 - t796 * rSges(4,3);
t778 = t793 * rSges(4,3);
t596 = rSges(4,1) * t1215 - rSges(4,2) * t1218 + t778;
t216 = t595 * t701 + t596 * t702 + t1171;
t1163 = t560 - t723;
t673 = rSges(4,1) * t769 + rSges(4,2) * t770;
t883 = -t673 * t702 - t1042;
t223 = (-t595 + t1163) * qJD(1) + t883;
t224 = -t673 * t701 - t740 + (t596 + t1162) * qJD(1);
t641 = t673 * t793;
t642 = t673 * t796;
t1299 = rSges(4,1) * t770;
t674 = -rSges(4,2) * t769 + t1299;
t1338 = -(qJD(1) * t641 - t702 * t674) * t223 - t216 * (-t701 * t641 - t642 * t702) - t224 * (-qJD(1) * t642 - t674 * t701);
t614 = Icges(3,5) * t1207 - Icges(3,6) * t1211 - t1258;
t245 = -t614 * t796 - t793 * t948;
t1335 = (-t706 * t796 + t619) * t793 - (-Icges(3,2) * t1207 + t618 - t749) * t796;
t418 = t651 * rSges(5,1) + t650 * rSges(5,2) + rSges(5,3) * t1218;
t150 = t418 * t735 - t557 * t620 + t881;
t1101 = t353 * rSges(5,1) + t352 * rSges(5,2) + rSges(5,3) * t1112;
t211 = -rSges(5,3) * t1091 + t1101;
t1010 = -rSges(5,1) * t791 - rSges(5,2) * t794;
t338 = t785 * t909 + (rSges(5,3) * t785 + qJD(4) * t1010) * t769;
t87 = t1083 * t418 + t211 * t735 - t338 * t620 - t487 * t557 + t811;
t1013 = rSges(5,1) * t355 + rSges(5,2) * t354;
t212 = rSges(5,3) * t879 + t1013;
t88 = qJD(1) * t1099 - t1083 * t416 - t212 * t735 - t338 * t621 + t486 * t557 + t876;
t1334 = (qJD(1) * t150 + t88) * t796 + t87 * t793;
t1330 = (t992 * t769 + t555) * t735 + (-Icges(5,2) * t651 + t393 + t626) * t620 - (-Icges(5,2) * t649 - t392 - t624) * t621;
t1329 = qJD(1) * t1406 + t1408 * t701 - (-Icges(4,2) * t1216 + t577 - t727) * t702;
t1328 = m(6) / 0.2e1;
t1327 = m(7) / 0.2e1;
t1326 = t486 / 0.2e1;
t1325 = t487 / 0.2e1;
t1324 = -t620 / 0.2e1;
t1323 = t620 / 0.2e1;
t1322 = -t621 / 0.2e1;
t1321 = t621 / 0.2e1;
t1320 = t675 / 0.2e1;
t1319 = t676 / 0.2e1;
t1318 = -t701 / 0.2e1;
t1317 = t701 / 0.2e1;
t1316 = -t702 / 0.2e1;
t1315 = t702 / 0.2e1;
t1314 = -t735 / 0.2e1;
t1313 = t735 / 0.2e1;
t1311 = t793 / 0.2e1;
t1310 = -t796 / 0.2e1;
t1309 = -rSges(5,3) - pkin(9);
t1308 = pkin(2) * t792;
t1307 = pkin(4) * t791;
t1304 = -qJD(1) / 0.2e1;
t1303 = qJD(1) / 0.2e1;
t1300 = rSges(3,1) * t795;
t1298 = rSges(3,2) * t795;
t1293 = rSges(6,3) * t769;
t1290 = t49 * t621;
t1289 = t50 * t620;
t1288 = t51 * t621;
t1287 = t52 * t620;
t1286 = t58 * t621;
t1285 = t59 * t620;
t779 = t793 * rSges(3,3);
t644 = t678 * t793;
t934 = t701 * t644 + t646 * t702 + t1171;
t855 = -t620 * t379 - t1129 + t934;
t74 = t1104 * t621 + t1191 * t620 + t695 + t855;
t1254 = qJD(1) * t74;
t1248 = t143 * t486;
t1247 = t144 * t487;
t1246 = t145 * t486;
t1245 = t146 * t487;
t1244 = t150 * t793;
t1241 = t159 * t486;
t1240 = t160 * t487;
t1236 = t223 * t793;
t714 = rSges(3,1) * t792 + t1298;
t1084 = t714 * t1135;
t1145 = rSges(3,2) * t1211 + t796 * rSges(3,3);
t622 = rSges(3,1) * t1207 - t1145;
t420 = -t1084 + (-t622 - t723) * qJD(1);
t1235 = t420 * t793;
t1234 = t420 * t796;
t1087 = t714 * t768;
t1205 = t795 * t796;
t1210 = t792 * t796;
t623 = rSges(3,1) * t1205 - rSges(3,2) * t1210 + t779;
t1154 = t623 + t724;
t421 = qJD(1) * t1154 - t1087;
t661 = t714 * t796;
t1233 = t421 * t661;
t573 = Icges(4,5) * t1216 - Icges(4,6) * t1219 - t1257;
t1231 = t573 * t796;
t1224 = t704 * t793;
t1223 = t704 * t796;
t1220 = t769 * t790;
t1196 = t183 + t197;
t1195 = -t379 * t1112 + t198 * t1218;
t485 = t500 * t1137;
t1192 = t380 * t1221 + t769 * t485;
t1186 = -t338 - t613;
t1185 = t500 * t1219 - t770 * t379;
t1182 = t1422 * t601 - t1443 * t600;
t1181 = t1422 * t603 - t1443 * t602;
t1180 = -t418 - t646;
t1178 = t485 + t647;
t1176 = -t577 * t1215 - t793 * t573;
t1175 = t578 * t1215 + t793 * t574;
t1121 = t769 * t1307;
t628 = t650 * pkin(4);
t1170 = t620 * t1121 + t735 * t628;
t1169 = -t793 * t560 + t796 * t561;
t1168 = t793 * t595 + t796 * t596;
t1167 = -t618 * t1205 - t793 * t614;
t1166 = t619 * t1205 + t793 * t615;
t1158 = (pkin(5) * t765 - qJ(6) * t766 - t1004) * t769;
t1157 = t793 * t644 + t796 * t646;
t1151 = rSges(4,2) * t1091 + rSges(4,3) * t1136;
t1150 = -t706 + t709;
t1149 = t708 + t995;
t1147 = rSges(3,3) * t1136 + t1137 * t1375;
t108 = t1187 * t621 + t332 * t620 + t855;
t1144 = qJD(1) * t108;
t130 = t416 * t620 + t418 * t621 + t934;
t1142 = qJD(1) * t130;
t1138 = qJD(1) * t705;
t753 = qJD(5) * t769;
t292 = -t793 * t946 - t1225;
t1125 = t292 * qJD(1);
t428 = -t793 * t945 - t1223;
t1124 = t428 * qJD(1);
t1117 = t795 * t1291;
t1110 = t197 + t1197;
t1106 = -t613 + t1193;
t1103 = -t646 - t1187;
t370 = rSges(4,1) * t880 - rSges(4,2) * t1112 + t1151;
t371 = -t785 * t641 + (t674 * t796 + t778) * qJD(1);
t1102 = t595 * t1136 + t796 * t370 + t793 * t371;
t1100 = t644 * t1136 + t796 * t426 + t793 * t427;
t1098 = -t560 * t1136 + t796 * t466 + t793 * t467;
t1097 = t522 * t1137 + t1178;
t1092 = t1309 * t769;
t1088 = t792 * t1136;
t1075 = -pkin(1) - t1300;
t1073 = t1137 / 0.2e1;
t1072 = t1136 / 0.2e1;
t1071 = -t768 / 0.2e1;
t1068 = t1135 / 0.2e1;
t1065 = -t673 - t1308;
t1064 = -t677 - t1308;
t1062 = t108 * t1187;
t1061 = t120 * t1177;
t1059 = (-t793 ^ 2 - t796 ^ 2) * t792;
t1058 = (-t793 * t994 + t1262) * qJD(1) + t1408 * t785;
t1057 = qJD(1) * t576 - t1214 * t667 + t577 * t785;
t1056 = (-t670 * t793 + t1272) * qJD(1) + t1409 * t785;
t1055 = qJD(1) * t578 + t1410 * t785;
t503 = t578 * t1216;
t1054 = t574 * t796 - t503;
t645 = t677 * t796;
t1053 = -t701 * t643 - t645 * t702;
t548 = t619 * t1207;
t1052 = t615 * t796 - t548;
t1051 = -t573 + t1230;
t1050 = t1406 * t785;
t1049 = t1407 * t785;
t1048 = -qJD(1) * t645 - t678 * t701;
t1047 = -t614 + t1227;
t1040 = t287 * t1219 + t770 * t198 + t500 * t879;
t1039 = -t613 + t1109;
t1038 = -t646 - t1104;
t1037 = -t793 * t379 + t796 * t380 + t1157;
t1036 = t1137 * t1173 + t1178;
t1034 = t793 * t416 + t796 * t418 + t1157;
t1025 = t1064 - t500;
t1023 = t74 * t1104;
t1022 = t1379 * t1096;
t610 = t674 * t785;
t1019 = -t610 - t1117;
t1018 = -t613 - t1117;
t1014 = t1300 - t1375;
t839 = (-t644 + t1163) * qJD(1) + t1363;
t149 = t1380 + t839;
t969 = t149 * t796 + t1244;
t962 = -t223 * t796 - t224 * t793;
t955 = t416 * t796 - t418 * t793;
t954 = -t421 * t793 - t1234;
t302 = t575 * t770 + t577 * t769;
t424 = t616 * t795 + t618 * t792;
t425 = t617 * t795 + t619 * t792;
t943 = t1025 - t522;
t937 = t1018 - t287;
t936 = t1018 - t338;
t932 = t1046 + t1152;
t931 = -t379 * t1136 + t796 * t197 + t793 * t198 + t1100;
t930 = t416 * t1136 + t796 * t211 + t793 * t212 + t1100;
t929 = t793 * t332 + t796 * t336 + t1037;
t927 = -t760 - t1016;
t911 = t1025 - t1173;
t660 = t714 * t793;
t906 = -t274 + t937;
t904 = t1219 * t790 + t1148 - t671;
t903 = t621 * t379;
t433 = t500 * t793;
t902 = -t379 * t1081 - t620 * t433 + t1053 + t753;
t434 = t500 * t796;
t901 = t380 * t1134 - t735 * t434 + t1048 + t719;
t891 = t950 * t793;
t825 = -t621 * t500 + t720 + t839;
t119 = t1190 * t735 - t522 * t621 + t825;
t890 = t119 * t522 - t1062;
t501 = t1306 * t770 - t1074;
t889 = t500 * t1082 - t621 * t501 + t1044 + t721;
t888 = qJD(2) * t708;
t887 = qJD(2) * t706;
t246 = -t1211 * t617 - t1052;
t885 = (-t245 * t796 + t246 * t793) * qJD(2);
t247 = -t1210 * t616 - t1167;
t248 = -t1210 * t617 + t1166;
t884 = (-t247 * t796 + t248 * t793) * qJD(2);
t384 = (t622 * t793 + t623 * t796) * qJD(2);
t875 = t937 + t1194;
t868 = qJD(1) * t666 - t1225 * t701 + t1226 * t702;
t867 = t466 * t1135 + t467 * t768 - t560 * t758 - t561 * t757;
t866 = t1188 * t796 + t1191 * t793 + t1037;
t865 = -t928 + t1146;
t864 = t616 * t796 - t617 * t793;
t863 = t927 - t1297;
t862 = t927 - t1293;
t96 = t1105 * t735 - t1173 * t621 + t566 + t825;
t861 = t1173 * t96 - t1023;
t860 = t332 * t1136 + t796 * t183 + t793 * t185 + t931;
t841 = (-t1149 * t792 + t1150 * t795) * qJD(1);
t840 = -qJD(1) * t644 + t1363 + t1369;
t837 = t1136 * t1191 + t1197 * t796 + t1198 * t793 + t931;
t835 = t735 * t379 + t720 + t840;
t829 = (Icges(5,1) * t650 - t1280 - t390) * t620 - (-Icges(5,1) * t648 - t388 - t625) * t621 + (t999 * t769 - t553) * t735;
t826 = qJD(1) * t1407 + t1409 * t701 - t1410 * t702;
t482 = t522 * t793;
t524 = t908 + t1293;
t824 = -t621 * t524 + t522 * t1082 + t889 + (t433 + t482) * t735;
t823 = qJD(1) * t573 + t1055 * t770 - t1057 * t769;
t822 = t1056 * t770 - t1058 * t769 + t1140;
t821 = qJD(1) * t665 + t1049 * t770 - t1050 * t769;
t818 = t702 * t426 + t701 * t427 + t676 * t644 - t675 * t646 + t867;
t448 = qJD(1) * t617 - t793 * t887;
t450 = qJD(1) * t619 - t793 * t888;
t817 = qJD(1) * t614 - qJD(2) * t424 - t448 * t792 + t450 * t795;
t447 = -t796 * t887 + (-t793 * t995 + t1263) * qJD(1);
t449 = -t796 * t888 + (-t709 * t793 + t1273) * qJD(1);
t816 = -qJD(2) * t425 - t447 * t792 + t449 * t795 + t1139;
t683 = t995 * qJD(2);
t684 = t709 * qJD(2);
t815 = qJD(1) * t704 - t683 * t792 + t684 * t795 + (-t706 * t795 - t708 * t792) * qJD(2);
t814 = t1082 * t1173 + t1411 * t621 - t695 * t796 + t889;
t813 = -t1118 + t1381;
t812 = t620 * t198 - t487 * t379 + t785 * t753 + t818;
t809 = -t1335 * t792 + t864 * t795;
t804 = -t1329 * t769 + t826 * t770;
t498 = t557 * t796;
t803 = t130 * (t416 * t1081 - t1082 * t418 - t620 * t497 - t498 * t621 + t1053) + t150 * (-t1081 * t557 + t418 * t1134 - t735 * t498 - t558 * t620 + t1048);
t484 = t522 * t796;
t802 = t108 * (t332 * t1081 - t620 * t482 + t902 + (-t434 - t484) * t621) + t120 * (t336 * t1134 - t735 * t484 + t901 + (-t501 - t524) * t620) + (t119 * t1060 + (t1061 * t796 - t1062 * t793) * t770) * qJD(4);
t115 = t1343 * t793 + t823 * t796;
t116 = t1344 * t793 + t822 * t796;
t117 = -t1343 * t796 + t823 * t793;
t118 = -t1344 * t796 + t822 * t793;
t225 = -t891 - t1231;
t226 = -t1219 * t576 - t1054;
t128 = -t225 * t702 + t226 * t701 + t1125;
t227 = -t1218 * t575 - t1176;
t228 = -t1218 * t576 + t1175;
t293 = -t796 * t946 + t1226;
t288 = t293 * qJD(1);
t129 = -t227 * t702 + t228 * t701 + t288;
t147 = t1340 * t793 + t821 * t796;
t148 = -t1340 * t796 + t821 * t793;
t157 = t1055 * t769 + t1057 * t770;
t158 = t1056 * t769 + t1058 * t770;
t303 = t576 * t770 + t578 * t769;
t493 = t553 * t793;
t494 = t553 * t796;
t495 = t555 * t793;
t496 = t555 * t796;
t554 = Icges(5,6) * t769 + t897;
t556 = Icges(5,5) * t769 + t900;
t801 = (t793 * t804 - t796 * t868) * t1315 + (-t117 * t796 + t118 * t793 + (t225 * t793 + t226 * t796) * qJD(1)) * t1316 + (-t115 * t796 + t116 * t793 + (t227 * t793 + t228 * t796) * qJD(1)) * t1317 + (t793 * t868 + t796 * t804) * t1318 + (-t227 * t796 + t228 * t793) * t1319 + (-t157 * t796 + t158 * t793 + (t302 * t793 + t303 * t796) * qJD(1)) * t1303 + (t1329 * t770 + t826 * t769) * t1304 + (-t225 * t796 + t226 * t793) * t1320 - t1382 * t486 / 0.2e1 - t1383 * t487 / 0.2e1 + ((t1216 * t1389 + t1352 * t769) * qJD(4) + ((qJD(4) * t1388 + t1385) * t770 + t1386) * t796 + (t1412 * t603 + t1413 * t602 + t554 * t650 + t556 * t651) * t735 + (t1417 * t603 - t1419 * t602 + t493 * t650 + t495 * t651) * t621 + (-t1416 * t603 + t1418 * t602 - t494 * t650 - t496 * t651) * t620) * t1324 + (qJD(1) * t1348 + t1399 * t793 - t1400 * t796) * t1323 + (qJD(1) * t1347 + t1397 * t793 - t1398 * t796) * t1322 + ((t1215 * t1390 + t1353 * t769) * qJD(4) + ((qJD(4) * t1391 + t1385) * t770 + t1386) * t793 + (t1412 * t601 + t1413 * t600 - t554 * t648 + t556 * t649) * t735 + (t1417 * t601 - t1419 * t600 - t493 * t648 + t495 * t649) * t621 + (-t1416 * t601 + t1418 * t600 + t494 * t648 - t496 * t649) * t620) * t1321 + ((qJD(4) * t1349 - t1436) * t770 + ((t1412 * t766 + t1413 * t765 - t554 * t791 + t556 * t794 + t1437) * t735 + (t1417 * t766 - t1419 * t765 - t493 * t791 + t495 * t794 - t1387) * t621 + (-t1416 * t766 + t1418 * t765 + t494 * t791 - t496 * t794 + t1438) * t620 + t1351 * qJD(4)) * t769) * t1314 + (qJD(1) * t1349 + t1395 * t793 - t1396 * t796) * t1313 + (qJD(1) * t147 - t115 * t702 + t116 * t701 + t227 * t675 + t228 * t676 + t1402) * t1311 + (qJD(1) * t148 - t117 * t702 + t118 * t701 + t225 * t675 + t226 * t676 + t1401) * t1310 + (t128 + t1355) * t1073 + (t129 + t1354) * t1072 - (t1384 * t785 + t1393) * t1134 / 0.2e1 - t1430 * t1133 / 0.2e1;
t800 = (t96 * t1017 + (-t1022 * t796 - t1023 * t793) * t770) * qJD(4) - (-t695 * t793 + t901 + (-t501 + t1411) * t620 + t1188 * t1134) * t1379 + (qJD(6) * t770 * t765 + t902 + (-t434 - t1414) * t621 - t1415 * t620 + t1191 * t1081) * t74 + (t96 * (t433 + t1415) + t1414 * t1379) * t735;
t688 = t1014 * qJD(2);
t640 = t1010 * t769;
t627 = t648 * pkin(4);
t592 = t1007 * t769;
t465 = rSges(5,1) * t650 - rSges(5,2) * t651;
t464 = -rSges(5,1) * t648 - rSges(5,2) * t649;
t455 = t620 * t627;
t452 = -qJD(2) * t660 + (t1014 * t796 + t779) * qJD(1);
t451 = -t1135 * t1298 + (-t1137 * t795 - t1086) * rSges(3,1) + t1147;
t439 = -t1219 * t735 + t621 * t770;
t438 = t1218 * t735 + t620 * t770;
t429 = -t796 * t945 + t1224;
t419 = t429 * qJD(1);
t413 = -rSges(6,1) * t602 - rSges(6,2) * t603;
t408 = -rSges(6,1) * t600 - rSges(6,2) * t601;
t343 = (t620 * t793 + t621 * t796) * t769;
t307 = t379 * t1218;
t230 = -t688 * t1135 + (-t452 - t694 + t1087) * qJD(1);
t229 = -t688 * t768 + t664 + (t451 - t1084) * qJD(1);
t202 = -t1339 * t796 + t815 * t793;
t201 = t1339 * t793 + t815 * t796;
t200 = -qJD(2) * t947 + t447 * t795 + t449 * t792;
t199 = -qJD(2) * t948 + t448 * t795 + t450 * t792;
t156 = -t610 * t702 + t673 * t675 + (-t371 + t1179) * qJD(1) + t944;
t155 = qJD(1) * t370 - t610 * t701 - t673 * t676 + t834;
t140 = t419 + t884;
t139 = t885 + t1124;
t114 = t370 * t702 + t371 * t701 + t595 * t676 - t596 * t675 + t867;
t53 = t211 * t621 + t212 * t620 + t416 * t487 - t418 * t486 + t818;
t33 = -t1187 * t486 + t1196 * t621 + t185 * t620 + t332 * t487 + t812;
t21 = qJD(6) * t877 - t1104 * t486 + t1110 * t621 + t1191 * t487 + t1198 * t620 + t812;
t1 = [(t293 + t303) * t1319 + t1352 * t1325 + t1353 * t1326 + (t139 - t1124 + ((t1047 * t796 - t1166 + t248) * t796 + (t1047 * t793 + t1052 + t247) * t793) * qJD(2)) * t1071 + (t288 + (t226 + (t575 * t796 + t576 * t793) * t769 + t1054 + t1176) * t702 + (-t577 * t1216 + t1231 + t225 + (t575 * t793 - t576 * t796) * t769 + t1175) * t701) * t1315 + (-(t1380 - t149 + t840) * t150 + t88 * (-t1012 + t1148) + t149 * (-t1013 + t690 + t1146) + t87 * (t729 - t1180) + t150 * (-pkin(3) * t1114 - t1042 + t1101 + t691) + (-t87 * t797 + t88 * t1092 + (t1309 * t149 * t785 - t88 * pkin(3)) * t770) * t793 + ((t1092 - t760 - t1305) * t1244 + (t149 * (-t678 - t760 - t1295) - t150 * t797) * t796) * qJD(1)) * m(5) + (t147 + t158) * t1317 + (t419 + ((t246 - t548 + (t615 + t1228) * t796 + t1167) * t796 + t1166 * t793) * qJD(2)) * t1068 + ((t424 + t428) * t793 + (t425 + t429) * t796) * t1123 / 0.2e1 + t1240 / 0.2e1 + (t230 * (t1075 * t793 + t1145 + t783) + t229 * t1154 + t421 * (t764 + t1147) + (t1235 * t714 - t1233) * qJD(2) + ((-pkin(1) - t1014) * t1234 + (t420 * (-rSges(3,3) - pkin(7)) + t421 * t1075) * t793) * qJD(1) - (-qJD(1) * t622 - t1084 - t420 - t698) * t421) * m(3) + (t128 - t1125 + (t228 - t891 - t1175) * t702 + (t1051 * t793 + t227 - t503) * t701 + ((t574 + t950) * t701 + t1051 * t702) * t796) * t1318 - (t199 + t202 + t140) * t1135 / 0.2e1 + (t200 + t201) * t768 / 0.2e1 + (t292 + t302) * t1320 + (t1387 * t770 + (t1421 * t765 - t1452 * t766 - t957) * t769 + t1440) * t620 * t1314 + t1241 / 0.2e1 + t1245 / 0.2e1 + t1246 / 0.2e1 + t1247 / 0.2e1 - t1290 / 0.2e1 + t1287 / 0.2e1 - t1288 / 0.2e1 + t1289 / 0.2e1 + (t148 + t129 + t157) * t1316 + t1354 * t1321 + (t38 * (-t332 + t904) + t119 * (-rSges(6,3) * t1113 - t1009 + t865) + t37 * (t932 + t336) + t120 * (t1033 + t1108) + (t120 * t813 - t1220 * t37 + t1307 * t38) * t796 + ((t119 * t862 - t120 * t797) * t796 + (-t119 * t1307 + t120 * t862) * t793) * qJD(1) + t108 * t903 - (-t332 * t735 - t119 + t835) * t120 - (t108 * t379 + t1061) * t621) * m(6) + t1248 / 0.2e1 + (t156 * (-t595 + t1148) + t223 * t1146 + t155 * (t1046 + t596) + t224 * (-t1042 + t1151) + (t1236 * t673 - t224 * t642) * t785 + ((-t223 * rSges(4,3) + t224 * (-t760 - t1299)) * t793 + (t223 * (-t674 - t760) - t224 * t797) * t796) * qJD(1) - (-qJD(1) * t595 + t1369 - t223 + t883) * t224) * m(4) + t1345 + t1392 * t1323 + (t1394 + t1354) * t1322 + (-qJD(2) * t945 + t1049 * t769 + t1050 * t770 + t683 * t795 + t684 * t792) * qJD(1) + t1285 / 0.2e1 - t1286 / 0.2e1 + (t74 * t903 - (t379 * t74 - t1022) * t621 + t32 * (t904 - t1191) + t31 * (t932 + t1188) + (-t1220 * t31 + t1307 * t32) * t796 + (-rSges(7,2) * t1113 - t1433 + t865 + (-t1307 * t793 + t796 * t863) * qJD(1)) * t96 + (-t1191 * t735 + t566 + t835 - t96 - t1033 - t1432 - t813 * t796 + (-t793 * t863 + t763) * qJD(1)) * t1379) * m(7); ((-t1223 * t768 + t1138) * t793 + (t841 + (t1224 * t793 + t809) * qJD(2)) * t796) * t1071 + ((t1149 * t795 + t1150 * t792) * qJD(1) + (t1335 * t795 + t864 * t792) * qJD(2)) * t1304 + (-t199 * t796 + t200 * t793 + (t424 * t793 + t425 * t796) * qJD(1)) * t1303 + ((-t1135 * t1224 - t1138) * t796 + (t841 + (t1223 * t796 + t809) * qJD(2)) * t793) * t1068 + t801 + (qJD(1) * t201 + (-(t1341 * t793 + t817 * t796) * t796 + (t1342 * t793 + t816 * t796) * t793 + (t247 * t793 + t248 * t796) * qJD(1)) * t1378) * t1311 + (qJD(1) * t202 + (-(-t1341 * t796 + t817 * t793) * t796 + (-t1342 * t796 + t816 * t793) * t793 + (t245 * t793 + t246 * t796) * qJD(1)) * t1378) * t1310 + (t885 + t139) * t1073 + (t884 + t140) * t1072 + (t96 * t1036 + t21 * (t866 + t1169) + t74 * (t837 + t1098) + (t1370 * t911 + t875 * t96) * t796 + (t31 * t911 - t1379 * t875 + (-t561 + t1038) * t1254) * t793 - t814 * t96 - (t1379 * t1088 + ((t1379 * t793 - t796 * t96) * t795 + t74 * t1059) * qJD(2)) * pkin(2) - t800) * m(7) + (-t119 * t824 - (-t120 * t1088 + ((-t119 * t796 - t120 * t793) * t795 + t108 * t1059) * qJD(2)) * pkin(2) - t802 + t119 * t1097 + t33 * (t929 + t1169) + t108 * (t860 + t1098) + (t119 * t906 + t1371 * t943) * t796 + (t37 * t943 + t120 * t906 + (-t561 + t1103) * t1144) * t793) * m(6) + (-(-t150 * t1088 + (t1059 * t130 - t795 * t969) * qJD(2)) * pkin(2) - t803 + t53 * (t1034 + t1169) + t130 * (t930 + t1098) + (t150 * t936 + (-t561 + t1180) * t1142) * t793 + t1334 * (t1064 - t557) + (t796 * t936 + t1362) * t149) * m(5) + (-(-t224 * t1088 + (t1059 * t216 + t795 * t962) * qJD(2)) * pkin(2) + t114 * (t1168 + t1169) + t216 * (t1098 + t1102) + (t1019 * t223 + (qJD(1) * t224 + t156) * t1065) * t796 + (t155 * t1065 + t224 * t1019 + (t223 * t673 + t216 * (-t561 - t596)) * qJD(1)) * t793 + t1338) * m(4) + (-(t420 * t660 - t1233) * qJD(1) - (t384 * (-t660 * t793 - t661 * t796) + t954 * t1014) * qJD(2) + 0.2e1 * t384 * (t451 * t796 + t452 * t793 + (t622 * t796 - t623 * t793) * qJD(1)) + t954 * t688 + (-t229 * t793 - t230 * t796 + (-t421 * t796 + t1235) * qJD(1)) * t714) * m(3); t801 + (t21 * t866 + t74 * t837 + (t1038 * t1254 - t1039 * t1379) * t793 - t800 + (t1370 * t796 + t1374) * (-t677 + t1096) + (t1039 * t796 + t1036 - t814) * t96) * m(7) + (-t802 + t33 * t929 + t108 * t860 + (t1103 * t1144 + t1106 * t120) * t793 + (t1371 * t796 + t1373) * (-t677 + t1177) + (t1106 * t796 + t1097 - t824) * t119) * m(6) + (-t803 + t53 * t1034 + t130 * t930 + (t1142 * t1180 + t1186 * t150) * t793 + t1334 * (-t557 - t677) + (t1186 * t796 + t1362) * t149) * m(5) + (t114 * t1168 + t216 * (-t1137 * t596 + t1102) + t962 * t610 + (-t155 * t793 - t156 * t796 + (-t224 * t796 + t1236) * qJD(1)) * t673 + t1338) * m(4); (-t96 * qJD(6) * t603 + t1379 * (qJD(6) * t601 + t1170) - t74 * (t1126 * t766 - t455) - (-t1158 * t1379 + t1182 * t74) * t620 - (t96 * (t627 - t1182) - t1379 * t1181) * t735 - (t96 * (t1121 + t1158) + t74 * (t628 + t1181)) * t621 + t32 * t1185 + t96 * t1040 - t1379 * t1192 - t21 * t307 + t74 * t1195 + (t32 * t1191 + t96 * t1198 - t31 * t1104 + t1379 * t1110 + ((t1191 * t74 - t1022) * t796 + t861 * t793) * t785) * t770 + ((t1105 * t96 - t1188 * t1379) * t785 + (qJD(1) * t861 + t1096 * t31 - t1109 * t1379 + t1191 * t21 + t1198 * t74) * t796 + (t32 * t1173 - t96 * t1194 - t21 * t1104 - t74 * t1110 + (t1105 * t74 - t1173 * t1379) * qJD(1)) * t793) * t769) * m(7) + (-t120 * (-t592 * t620 + t1170) - t108 * (t408 * t620 - t455) - (t119 * (-t408 + t627) + t120 * t413) * t735 - (t119 * (-t592 + t1121) + t108 * (t413 + t628)) * t621 + t38 * t1185 + t119 * t1040 + t120 * t1192 - t33 * t307 + t108 * t1195 + (t38 * t332 + t119 * t185 - t37 * t1187 - t120 * t1196 + ((t108 * t332 + t1061) * t796 + t890 * t793) * t785) * t770 + ((t119 * t1190 + t120 * t336) * t785 + (qJD(1) * t890 + t108 * t185 + t1177 * t37 + t1193 * t120 + t33 * t332) * t796 + (t38 * t522 + t119 * t274 - t33 * t1187 - t108 * t1196 + (t108 * t1190 + t120 * t522) * qJD(1)) * t793) * t769) * m(6) + (-t149 * (-t464 * t735 - t621 * t640) - t150 * (t465 * t735 - t620 * t640) - t130 * (t464 * t620 + t465 * t621) + (t149 * t212 - t150 * t211 + t88 * t416 - t87 * t418 + (t130 * t955 + (t149 * t793 - t150 * t796) * t557) * t785) * t770 + (t149 * (t338 * t793 - t416 * t785) + t150 * (-t338 * t796 + t418 * t785) + t53 * t955 + t130 * (-t1136 * t418 - t1137 * t416 - t211 * t793 + t212 * t796) + (qJD(1) * t969 + t88 * t793 - t87 * t796) * t557) * t769) * m(5) + (t1347 * t769 - t1353 * t770) * t1326 + (t1348 * t769 - t1352 * t770) * t1325 + (t1330 * t650 - t1350 * t796 + t1367 * t603 + t1368 * t602 + t829 * t651) * t1324 + ((t1348 * t785 - t1392) * t770 + (qJD(1) * t1383 + t1352 * t785 + t1399 * t796 + t1400 * t793) * t769) * t1323 + ((t1347 * t785 - t1394) * t770 + (qJD(1) * t1382 + t1353 * t785 + t1397 * t796 + t1398 * t793) * t769) * t1322 + (-t1330 * t648 - t1350 * t793 + t1367 * t601 + t1368 * t600 + t649 * t829) * t1321 + (t1428 * t770 + (-t1330 * t791 + t1367 * t766 + t1368 * t765 + t794 * t829) * t769) * t1314 + ((t1349 * t785 - t1429) * t770 + (qJD(1) * t1384 + t1351 * t785 + t1395 * t796 + t1396 * t793) * t769) * t1313 - (t1247 + t1248 + t1289 - t1290 + t1245 + t1246 + t1287 - t1288 + t1240 + t1241 + t1285 - t1286 + t1345) * t770 / 0.2e1 + t1401 * t1219 / 0.2e1 + t1402 * t1218 / 0.2e1 - t1354 * t1091 / 0.2e1 + t1355 * t769 * t1072 + ((t1349 * t769 - t1351 * t770) * qJD(4) + t1393) * t1221 / 0.2e1 + t1430 * t1217 / 0.2e1; -m(6) * (t108 * t343 + t119 * t439 + t120 * t438) - m(7) * (-t1379 * t438 + t343 * t74 + t439 * t96) + 0.2e1 * ((t119 * t702 + t120 * t1214 - t33) * t1328 + (-t1214 * t1379 + t702 * t96 - t21) * t1327) * t770 + 0.2e1 * ((t108 * t785 + t1136 * t120 - t1137 * t119 + t38 * t796 + t1373) * t1328 + (-t1136 * t1379 - t1137 * t96 + t32 * t796 + t74 * t785 + t1374) * t1327) * t769; (t1222 * t21 + t31 * t600 + t32 * t602 - (t1222 * t620 - t602 * t735 + t283) * t1379 + (t1222 * t621 + t600 * t735 - t281) * t96 + (-t600 * t620 - t602 * t621 + t877) * t74) * m(7);];
tauc  = t1(:);
