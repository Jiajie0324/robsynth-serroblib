% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:35
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRP9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP9_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:34:07
% EndTime: 2019-03-09 12:34:36
% DurationCPUTime: 16.71s
% Computational Cost: add. (25487->845), mult. (63434->1102), div. (0->0), fcn. (52010->14), ass. (0->386)
t352 = sin(pkin(6));
t362 = cos(qJ(2));
t474 = qJD(1) * t362;
t329 = t352 * t474;
t351 = sin(pkin(11));
t353 = cos(pkin(11));
t358 = sin(qJ(4));
t551 = cos(qJ(4));
t394 = -t358 * t351 + t353 * t551;
t236 = t394 * t329;
t440 = qJD(4) * t551;
t469 = qJD(4) * t358;
t284 = t351 * t469 - t353 * t440;
t481 = t284 + t236;
t295 = t351 * t551 + t358 * t353;
t494 = t352 * t362;
t372 = t295 * t494;
t480 = -qJD(1) * t372 + t295 * qJD(4);
t359 = sin(qJ(2));
t461 = qJD(1) * qJD(2);
t438 = t359 * t461;
t417 = t352 * t438;
t458 = qJDD(1) * t362;
t328 = t352 * t458;
t457 = qJDD(4) - t328;
t381 = t417 + t457;
t354 = cos(pkin(6));
t550 = pkin(1) * t359;
t479 = pkin(8) * t494 + t354 * t550;
t277 = t479 * qJD(1);
t475 = qJD(1) * t354;
t332 = qJD(2) + t475;
t237 = t332 * qJ(3) + t277;
t399 = -pkin(2) * t362 - qJ(3) * t359 - pkin(1);
t268 = t399 * t352;
t244 = qJD(1) * t268;
t158 = -t237 * t351 + t353 * t244;
t476 = qJD(1) * t352;
t444 = t359 * t476;
t258 = t332 * t351 + t353 * t444;
t121 = -pkin(3) * t329 - pkin(9) * t258 + t158;
t159 = t353 * t237 + t351 * t244;
t257 = t332 * t353 - t351 * t444;
t130 = pkin(9) * t257 + t159;
t455 = pkin(1) * qJD(2) * t354;
t422 = qJD(1) * t455;
t460 = qJDD(1) * t354;
t454 = pkin(1) * t460;
t448 = -pkin(8) * t328 - t359 * t454 - t362 * t422;
t206 = -pkin(8) * t417 - t448;
t331 = qJDD(2) + t460;
t164 = qJ(3) * t331 + qJD(3) * t332 + t206;
t407 = pkin(2) * t359 - qJ(3) * t362;
t369 = qJD(2) * t407 - qJD(3) * t359;
t174 = (qJD(1) * t369 + qJDD(1) * t399) * t352;
t113 = -t164 * t351 + t353 * t174;
t437 = t362 * t461;
t459 = qJDD(1) * t359;
t388 = t437 + t459;
t373 = t388 * t352;
t497 = t351 * t331;
t215 = t353 * t373 + t497;
t387 = t438 - t458;
t83 = pkin(3) * t352 * t387 - pkin(9) * t215 + t113;
t114 = t353 * t164 + t351 * t174;
t493 = t353 * t331;
t214 = t351 * t373 - t493;
t93 = -pkin(9) * t214 + t114;
t390 = -t121 * t440 + t130 * t469 - t358 * t83 - t551 * t93;
t19 = pkin(10) * t381 - t390;
t357 = sin(qJ(5));
t361 = cos(qJ(5));
t430 = t551 * t214 + t358 * t215;
t395 = t358 * t257 + t258 * t551;
t556 = qJD(4) * t395;
t106 = t430 + t556;
t496 = t352 * t359;
t333 = pkin(8) * t496;
t207 = -t352 * pkin(8) * t437 - qJDD(1) * t333 - t359 * t422 + t362 * t454;
t555 = -t331 * pkin(2) + qJDD(3);
t185 = -t207 + t555;
t538 = t214 * pkin(3);
t128 = t185 + t538;
t367 = t358 * t214 - t215 * t551 - t257 * t440 + t258 * t469;
t46 = t106 * pkin(4) + pkin(10) * t367 + t128;
t466 = qJD(5) * t361;
t467 = qJD(5) * t357;
t463 = t329 - qJD(4);
t77 = t358 * t121 + t130 * t551;
t74 = -pkin(10) * t463 + t77;
t549 = pkin(1) * t362;
t456 = t354 * t549;
t276 = -pkin(8) * t444 + qJD(1) * t456;
t230 = -pkin(2) * t332 + qJD(3) - t276;
t178 = -pkin(3) * t257 + t230;
t180 = -t551 * t257 + t258 * t358;
t91 = pkin(4) * t180 - pkin(10) * t395 + t178;
t3 = t361 * t19 + t357 * t46 + t91 * t466 - t74 * t467;
t39 = -t357 * t74 + t361 * t91;
t569 = qJD(5) + t180;
t526 = t569 * t39;
t578 = t3 - t526;
t40 = t357 * t91 + t361 * t74;
t4 = -qJD(5) * t40 - t19 * t357 + t361 * t46;
t525 = t569 * t40;
t577 = t4 + t525;
t275 = t407 * t476;
t191 = t353 * t275 - t276 * t351;
t382 = t352 * (-pkin(9) * t353 * t362 + pkin(3) * t359);
t156 = qJD(1) * t382 + t191;
t192 = t351 * t275 + t353 * t276;
t421 = t351 * t329;
t173 = -pkin(9) * t421 + t192;
t536 = pkin(9) + qJ(3);
t309 = t536 * t351;
t310 = t536 * t353;
t558 = -t551 * t309 - t358 * t310;
t486 = t394 * qJD(3) + qJD(4) * t558 - t358 * t156 - t551 * t173;
t151 = -t357 * t463 + t361 * t395;
t428 = t361 * t463;
t67 = qJD(5) * t428 - t357 * t381 + t361 * t367 + t395 * t467;
t529 = qJ(6) * t67;
t105 = qJDD(5) + t106;
t548 = pkin(5) * t105;
t1 = -qJD(6) * t151 + t4 + t529 + t548;
t149 = t357 * t395 + t428;
t32 = -qJ(6) * t149 + t40;
t527 = t569 * t32;
t576 = -t1 - t527;
t575 = pkin(10) * t444 - t486;
t228 = pkin(3) * t421 + t277;
t574 = t480 * pkin(4) + pkin(10) * t481 - t228;
t197 = t236 * t357 - t361 * t444;
t432 = t284 * t357 + t197;
t468 = qJD(5) * t151;
t68 = -t357 * t367 - t361 * t381 + t468;
t528 = qJ(6) * t68;
t2 = -qJD(6) * t149 + t3 - t528;
t31 = -qJ(6) * t151 + t39;
t27 = pkin(5) * t569 + t31;
t573 = -t27 * t569 + t2;
t572 = t180 ^ 2;
t571 = t149 * t180;
t570 = t180 * t463;
t234 = -t358 * t309 + t310 * t551;
t484 = qJD(3) * t295 + qJD(4) * t234 + t156 * t551 - t358 * t173;
t441 = t295 * t466;
t380 = t441 - t432;
t552 = cos(qJ(1));
t446 = t552 * t359;
t360 = sin(qJ(1));
t488 = t360 * t362;
t287 = t354 * t446 + t488;
t348 = pkin(11) + qJ(4);
t344 = sin(t348);
t345 = cos(t348);
t447 = t352 * t552;
t218 = t287 * t344 + t345 * t447;
t445 = t552 * t362;
t489 = t359 * t360;
t289 = -t354 * t489 + t445;
t495 = t352 * t360;
t222 = t289 * t344 - t345 * t495;
t264 = t344 * t496 - t354 * t345;
t384 = g(1) * t222 + g(2) * t218 + g(3) * t264;
t219 = t287 * t345 - t344 * t447;
t286 = -t354 * t445 + t489;
t568 = t219 * t357 - t286 * t361;
t507 = t286 * t357;
t567 = t219 * t361 + t507;
t566 = t395 ^ 2;
t347 = t352 ^ 2;
t565 = 0.2e1 * t347;
t564 = pkin(3) * t351;
t540 = g(3) * t352;
t563 = t357 * t575 + t361 * t574;
t342 = pkin(3) * t353 + pkin(2);
t213 = -pkin(4) * t394 - pkin(10) * t295 - t342;
t562 = t213 * t466 + t357 * t574 - t361 * t575;
t282 = t351 * t496 - t354 * t353;
t283 = t351 * t354 + t353 * t496;
t199 = t282 * t551 + t283 * t358;
t200 = -t358 * t282 + t283 * t551;
t270 = t333 + (-pkin(2) - t549) * t354;
t209 = t282 * pkin(3) + t270;
t112 = pkin(4) * t199 - pkin(10) * t200 + t209;
t267 = qJ(3) * t354 + t479;
t186 = -t267 * t351 + t353 * t268;
t137 = -pkin(3) * t494 - pkin(9) * t283 + t186;
t187 = t353 * t267 + t351 * t268;
t155 = -pkin(9) * t282 + t187;
t97 = t358 * t137 + t551 * t155;
t95 = -pkin(10) * t494 + t97;
t59 = t357 * t112 + t361 * t95;
t561 = t149 * t395;
t560 = t151 * t395;
t559 = t329 * t395;
t288 = t354 * t488 + t446;
t411 = g(1) * t288 + g(2) * t286;
t557 = g(3) * t494 - t411;
t371 = t557 * t344;
t485 = pkin(4) * t444 + t484;
t224 = t361 * t234;
t142 = t357 * t213 + t224;
t279 = t479 * qJD(2);
t223 = t289 * t345 + t344 * t495;
t171 = -t223 * t357 + t288 * t361;
t265 = t344 * t354 + t345 * t496;
t487 = t361 * t362;
t451 = t352 * t487;
t554 = -g(3) * (-t265 * t357 - t451) + g(2) * t568 - g(1) * t171;
t553 = t151 ^ 2;
t298 = t342 * t494;
t541 = g(3) * t298;
t539 = t149 * pkin(5);
t535 = qJ(6) + pkin(10);
t534 = -t31 + t27;
t198 = t236 * t361 + t357 * t444;
t402 = qJ(6) * t284 - qJD(6) * t295;
t533 = qJ(6) * t198 + t402 * t361 + (-t224 + (qJ(6) * t295 - t213) * t357) * qJD(5) + t563 + t480 * pkin(5);
t532 = (-qJD(5) * t234 + t402) * t357 + t562 + (t197 - t441) * qJ(6);
t531 = -t234 * t467 + t562;
t530 = -qJD(5) * t142 + t563;
t524 = t67 * t357;
t523 = t68 * t361;
t522 = pkin(5) * t380 + t485;
t521 = -t149 * t466 - t357 * t68;
t435 = qJD(5) * t535;
t511 = t180 * t357;
t117 = pkin(4) * t395 + pkin(10) * t180;
t76 = t121 * t551 - t358 * t130;
t57 = t357 * t117 + t361 * t76;
t520 = -qJ(6) * t511 + t361 * qJD(6) - t357 * t435 - t57;
t510 = t180 * t361;
t56 = t361 * t117 - t357 * t76;
t519 = -pkin(5) * t395 - qJ(6) * t510 - t357 * qJD(6) - t361 * t435 - t56;
t518 = t105 * t357;
t517 = t149 * t569;
t516 = t151 * t149;
t515 = t151 * t569;
t514 = t151 * t357;
t513 = t569 * t395;
t512 = t569 * t357;
t509 = t395 * t180;
t505 = t287 * t357;
t504 = t288 * t357;
t503 = t289 * t357;
t502 = t295 * t357;
t501 = t295 * t361;
t500 = t345 * t357;
t499 = t345 * t361;
t498 = t347 * qJD(1) ^ 2;
t492 = t536 * t359;
t491 = t357 * t362;
t103 = t361 * t105;
t240 = t369 * t352;
t471 = qJD(2) * t359;
t443 = t352 * t471;
t278 = -pkin(8) * t443 + t362 * t455;
t250 = qJD(3) * t354 + t278;
t166 = t351 * t240 + t353 * t250;
t483 = -t286 * t342 + t287 * t536;
t482 = -t288 * t342 + t289 * t536;
t478 = t552 * pkin(1) + pkin(8) * t495;
t349 = t359 ^ 2;
t350 = t362 ^ 2;
t477 = t349 - t350;
t473 = qJD(2) * t351;
t472 = qJD(2) * t353;
t470 = qJD(2) * t362;
t465 = qJD(2) - t332;
t462 = qJ(3) * qJDD(1);
t453 = t350 * t498;
t452 = t362 * t498;
t319 = t352 * t491;
t449 = t384 * t357;
t442 = t352 * t470;
t439 = pkin(1) * t565;
t436 = -pkin(1) * t360 + pkin(8) * t447;
t434 = qJD(6) + t539;
t58 = t361 * t112 - t357 * t95;
t431 = t284 * t361 + t198;
t141 = t361 * t213 - t234 * t357;
t165 = t353 * t240 - t250 * t351;
t429 = t569 ^ 2;
t426 = t569 * t361;
t425 = t121 * t469 + t130 * t440 + t358 * t93 - t551 * t83;
t424 = t332 + t475;
t423 = t331 + t460;
t420 = t351 * t442;
t419 = t353 * t442;
t418 = t347 * t350 * t461;
t416 = t359 * t437;
t415 = pkin(4) * t345 + pkin(10) * t344;
t414 = -g(1) * t568 - g(2) * t171;
t172 = t223 * t361 + t504;
t413 = g(1) * t567 - g(2) * t172;
t412 = -g(1) * t218 + g(2) * t222;
t410 = g(1) * t286 - g(2) * t288;
t409 = g(1) * t289 + g(2) * t287;
t408 = g(1) * t287 - g(2) * t289;
t96 = t137 * t551 - t358 * t155;
t406 = t357 * t40 + t361 * t39;
t405 = t288 * t536 + t289 * t342 + t495 * t564 + t478;
t404 = t257 * t353 - t258 * t351;
t343 = pkin(5) * t361 + pkin(4);
t403 = t343 * t345 + t344 * t535;
t401 = qJD(1) * (-t257 + t472);
t400 = qJD(1) * (-t258 + t473);
t398 = -t185 + t411;
t396 = g(1) * t552 + g(2) * t360;
t94 = pkin(4) * t494 - t96;
t175 = t200 * t357 + t451;
t134 = qJD(2) * t382 + t165;
t153 = -pkin(9) * t420 + t166;
t52 = t358 * t134 + t137 * t440 + t551 * t153 - t155 * t469;
t49 = pkin(10) * t443 + t52;
t144 = t282 * t440 - t551 * t419 + (qJD(4) * t283 + t420) * t358;
t145 = qJD(2) * t372 + qJD(4) * t200;
t229 = pkin(3) * t420 + t279;
t84 = pkin(4) * t145 + pkin(10) * t144 + t229;
t15 = t112 * t466 + t357 * t84 + t361 * t49 - t467 * t95;
t392 = -t286 * t536 - t287 * t342 + t447 * t564 + t436;
t73 = pkin(4) * t463 - t76;
t391 = -pkin(10) * t105 + t569 * t73;
t53 = t134 * t551 - t137 * t469 - t358 * t153 - t155 * t440;
t386 = -g(1) * (t288 * t500 + t289 * t361) - g(2) * (t286 * t500 + t287 * t361) - (-t345 * t491 + t359 * t361) * t540;
t385 = -g(1) * (-t288 * t499 + t503) - g(2) * (-t286 * t499 + t505) - (t345 * t487 + t357 * t359) * t540;
t383 = -g(1) * t223 - g(2) * t219 - g(3) * t265;
t379 = -t295 * t467 - t431;
t20 = -pkin(4) * t381 + t425;
t17 = t68 * pkin(5) + qJDD(6) + t20;
t378 = -t17 + t384;
t377 = -t20 + t384;
t375 = -g(3) * t496 - t409;
t374 = -qJ(3) * t471 + (qJD(3) - t230) * t362;
t370 = -t557 + t207;
t368 = g(1) * t172 + g(2) * t567 - g(3) * (-t265 * t361 + t319) - t3;
t16 = -qJD(5) * t59 - t357 * t49 + t361 * t84;
t50 = -pkin(4) * t443 - t53;
t366 = -t370 + t555;
t364 = t4 + t554;
t317 = t535 * t361;
t316 = t535 * t357;
t304 = t359 * t452;
t290 = -t333 + t456;
t266 = (qJDD(1) * t350 - 0.2e1 * t416) * t347;
t190 = pkin(5) * t502 - t558;
t176 = t200 * t361 - t319;
t146 = t149 ^ 2;
t124 = -qJ(6) * t502 + t142;
t118 = -pkin(5) * t394 - qJ(6) * t501 + t141;
t99 = -qJD(5) * t319 - t144 * t357 + t200 * t466 - t361 * t443;
t98 = qJD(5) * t175 + t361 * t144 - t357 * t443;
t71 = -t146 + t553;
t70 = t175 * pkin(5) + t94;
t63 = -pkin(5) * t511 + t77;
t61 = t434 + t73;
t55 = t105 * t199 + t145 * t569;
t54 = -t105 * t394 + t480 * t569;
t47 = -qJ(6) * t175 + t59;
t45 = t515 - t68;
t44 = -t67 + t517;
t38 = pkin(5) * t199 - qJ(6) * t176 + t58;
t36 = -t361 * t429 - t518 - t560;
t35 = t426 * t569 + t518 - t560;
t34 = -t357 * t429 + t103 - t561;
t33 = -t512 * t569 + t103 + t561;
t30 = t149 * t512 - t523;
t29 = t151 * t426 - t524;
t28 = t99 * pkin(5) + t50;
t26 = t149 * t99 + t175 * t68;
t25 = -t151 * t98 - t176 * t67;
t22 = t149 * t380 + t502 * t68;
t21 = t151 * t379 - t501 * t67;
t14 = -t105 * t175 - t145 * t149 - t199 * t68 - t569 * t99;
t13 = t105 * t176 + t145 * t151 - t199 * t67 - t569 * t98;
t12 = -t105 * t502 - t149 * t480 - t380 * t569 + t394 * t68;
t11 = t103 * t295 + t151 * t480 + t379 * t569 + t394 * t67;
t10 = (-t67 - t571) * t361 - t151 * t512 + t521;
t9 = (t67 - t571) * t361 + t569 * t514 + t521;
t8 = -qJ(6) * t99 - qJD(6) * t175 + t15;
t7 = t149 * t98 - t151 * t99 + t175 * t67 - t176 * t68;
t6 = pkin(5) * t145 + qJ(6) * t98 - qJD(6) * t176 + t16;
t5 = t432 * t151 + t431 * t149 + (t524 - t523 + (t149 * t357 - t151 * t361) * qJD(5)) * t295;
t18 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t360 - g(2) * t552, t396, 0, 0 (qJDD(1) * t349 + 0.2e1 * t416) * t347 (t359 * t458 - t461 * t477) * t565 (t359 * t423 + t424 * t470) * t352, t266 (t362 * t423 - t424 * t471) * t352, t331 * t354, t207 * t354 - t279 * t332 + t290 * t331 - t387 * t439 + t408, -t206 * t354 - t278 * t332 - t331 * t479 - t388 * t439 - t410 ((-qJD(2) * t276 + qJDD(1) * t479 + t206 + (-qJD(2) * t290 + t278) * qJD(1)) * t362 + (-qJD(2) * t277 - qJDD(1) * t290 - t207) * t359 - t396) * t352, t347 * qJDD(1) * pkin(1) ^ 2 - g(1) * t436 - g(2) * t478 + t206 * t479 + t207 * t290 - t276 * t279 + t277 * t278, t215 * t283 + t258 * t419, -t214 * t283 - t215 * t282 + t404 * t442, -t353 * t418 + ((-qJDD(1) * t283 - t215) * t362 + (qJD(1) * t283 + t258) * t471) * t352, t214 * t282 - t257 * t420, t351 * t418 + ((qJDD(1) * t282 + t214) * t362 + (-qJD(1) * t282 + t257) * t471) * t352, t266, t185 * t282 + t270 * t214 - t279 * t257 + t408 * t353 + (-t396 * t351 + (qJD(1) * t186 + t158) * t471 + (-qJD(1) * t165 - qJDD(1) * t186 + t230 * t473 - t113) * t362) * t352, t185 * t283 + t270 * t215 + t279 * t258 - t408 * t351 + (-t396 * t353 + (-qJD(1) * t187 - t159) * t471 + (qJD(1) * t166 + qJDD(1) * t187 + t230 * t472 + t114) * t362) * t352, -t113 * t283 - t114 * t282 - t165 * t258 + t166 * t257 - t186 * t215 - t187 * t214 + (-t158 * t353 - t159 * t351) * t442 + t410, t114 * t187 + t159 * t166 + t113 * t186 + t158 * t165 + t185 * t270 + t230 * t279 - g(1) * (-pkin(2) * t287 - qJ(3) * t286 + t436) - g(2) * (pkin(2) * t289 + qJ(3) * t288 + t478) -t144 * t395 - t200 * t367, -t200 * t106 + t144 * t180 - t145 * t395 + t199 * t367, t144 * t463 + t200 * t457 + (t367 * t362 + (qJD(1) * t200 + t395) * t471) * t352, t106 * t199 + t145 * t180, t145 * t463 - t199 * t457 + (t106 * t362 + (-qJD(1) * t199 - t180) * t471) * t352 (-t457 * t362 + (-0.2e1 * t329 + qJD(4)) * t471) * t352, -t53 * t463 + t96 * t457 + t229 * t180 + t209 * t106 + t128 * t199 + t178 * t145 + g(1) * t219 - g(2) * t223 + (t425 * t362 + (qJD(1) * t96 + t76) * t471) * t352, t52 * t463 - t97 * t457 + t229 * t395 - t209 * t367 + t128 * t200 - t178 * t144 + (-t390 * t362 + (-qJD(1) * t97 - t77) * t471) * t352 + t412, -t97 * t106 + t76 * t144 - t77 * t145 - t52 * t180 + t199 * t390 + t200 * t425 + t367 * t96 - t395 * t53 + t410, -g(1) * t392 - g(2) * t405 + t128 * t209 + t178 * t229 - t390 * t97 - t425 * t96 + t77 * t52 + t76 * t53, t25, t7, t13, t26, t14, t55, t105 * t58 + t145 * t39 + t149 * t50 + t16 * t569 + t175 * t20 + t199 * t4 + t68 * t94 + t73 * t99 + t413, -t105 * t59 - t145 * t40 - t15 * t569 + t151 * t50 + t176 * t20 - t199 * t3 - t67 * t94 - t73 * t98 + t414, -t149 * t15 - t151 * t16 - t175 * t3 - t176 * t4 + t39 * t98 - t40 * t99 + t58 * t67 - t59 * t68 - t412, t3 * t59 + t40 * t15 + t4 * t58 + t39 * t16 + t20 * t94 + t73 * t50 - g(1) * (-pkin(4) * t219 - pkin(10) * t218 + t392) - g(2) * (pkin(4) * t223 + pkin(10) * t222 + t405) t25, t7, t13, t26, t14, t55, t1 * t199 + t105 * t38 + t145 * t27 + t149 * t28 + t17 * t175 + t569 * t6 + t61 * t99 + t68 * t70 + t413, -t105 * t47 - t145 * t32 + t151 * t28 + t17 * t176 - t199 * t2 - t569 * t8 - t61 * t98 - t67 * t70 + t414, -t1 * t176 - t149 * t8 - t151 * t6 - t175 * t2 + t27 * t98 - t32 * t99 + t38 * t67 - t47 * t68 - t412, t2 * t47 + t32 * t8 + t1 * t38 + t27 * t6 + t17 * t70 + t61 * t28 - g(1) * (-pkin(5) * t507 - t218 * t535 - t219 * t343 + t392) - g(2) * (pkin(5) * t504 + t222 * t535 + t223 * t343 + t405); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t304, t477 * t498 (t465 * t474 + t459) * t352, t304, -t444 * t465 + t328, t331, t277 * t332 + t498 * t550 + t370, pkin(1) * t452 + t276 * t332 + (pkin(8) * t461 + g(3)) * t496 + t409 + t448, 0, 0, -t258 * t329 * t353 + t215 * t351, -t214 * t351 + t215 * t353 - t329 * t404, t353 * t453 + (-t351 * t458 + t359 * t400) * t352, -t214 * t353 + t257 * t421, -t351 * t453 + (-t353 * t458 + t359 * t401) * t352, t304, -pkin(2) * t214 + t257 * t277 + t398 * t353 + ((-g(3) * t353 + t351 * t462) * t362 + (-t158 * t359 + t191 * t362 + t351 * t374) * qJD(1)) * t352, -pkin(2) * t215 - t258 * t277 - t398 * t351 + ((g(3) * t351 + t353 * t462) * t362 + (t159 * t359 - t192 * t362 + t353 * t374) * qJD(1)) * t352, t191 * t258 - t192 * t257 + (-qJ(3) * t214 + qJD(3) * t257 + t158 * t329 + t114) * t353 + (qJ(3) * t215 + qJD(3) * t258 + t159 * t329 - t113) * t351 + t375, -t158 * t191 - t159 * t192 - t230 * t277 + (-t158 * t351 + t159 * t353) * qJD(3) + (-t185 - t557) * pkin(2) + (-t113 * t351 + t114 * t353 + t375) * qJ(3), -t295 * t367 - t395 * t481, -t295 * t106 + t180 * t481 - t367 * t394 - t395 * t480, t295 * t381 - t395 * t444 + t463 * t481, -t106 * t394 + t180 * t480, t180 * t444 + t381 * t394 + t463 * t480, t463 * t444, -t342 * t106 - t128 * t394 + t178 * t480 - t228 * t180 - t345 * t557 + t381 * t558 - t444 * t76 + t463 * t484, t128 * t295 - t178 * t481 - t228 * t395 - t234 * t381 + t342 * t367 + t444 * t77 + t463 * t486 + t371, -t234 * t106 - t180 * t486 + t295 * t425 + t367 * t558 - t390 * t394 + t395 * t484 - t480 * t77 + t481 * t76 + t375, -t390 * t234 - t425 * t558 - t128 * t342 - t178 * t228 - g(1) * t482 - g(2) * t483 - g(3) * (t352 * t492 + t298) + t486 * t77 - t484 * t76, t21, t5, t11, t22, t12, t54, t105 * t141 + t149 * t485 + t20 * t502 + t380 * t73 + t39 * t480 - t394 * t4 + t530 * t569 - t558 * t68 + t385, -t105 * t142 + t151 * t485 + t20 * t501 + t3 * t394 + t379 * t73 - t40 * t480 - t531 * t569 + t558 * t67 + t386, t141 * t67 - t142 * t68 + t197 * t40 + t198 * t39 + t406 * t284 - t530 * t151 - t531 * t149 - t371 + (-t3 * t357 - t361 * t4 + (t357 * t39 - t361 * t40) * qJD(5)) * t295, t3 * t142 + t4 * t141 - t20 * t558 - g(1) * (-t288 * t415 + t482) - g(2) * (-t286 * t415 + t483) - t541 + t485 * t73 + t531 * t40 + t530 * t39 - (t362 * t415 + t492) * t540, t21, t5, t11, t22, t12, t54, -t1 * t394 + t105 * t118 + t149 * t522 + t17 * t502 + t190 * t68 + t27 * t480 + t380 * t61 + t533 * t569 + t385, -t105 * t124 + t151 * t522 + t17 * t501 - t190 * t67 + t2 * t394 - t32 * t480 + t379 * t61 - t532 * t569 + t386, t118 * t67 - t124 * t68 + t432 * t32 + t431 * t27 - t533 * t151 - t532 * t149 - t371 + (-t1 * t361 - t2 * t357 + (t27 * t357 - t32 * t361) * qJD(5)) * t295, t2 * t124 + t1 * t118 + t17 * t190 - g(1) * (pkin(5) * t503 - t288 * t403 + t482) - g(2) * (pkin(5) * t505 - t286 * t403 + t483) - t541 + t522 * t61 + t532 * t32 + t533 * t27 - (t403 * t362 + (pkin(5) * t357 + t536) * t359) * t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t493 + (t351 * t459 + t362 * t400) * t352, t497 + (t353 * t459 + t362 * t401) * t352, -t257 ^ 2 - t258 ^ 2, t158 * t258 - t159 * t257 + t366, 0, 0, 0, 0, 0, 0, t430 + 0.2e1 * t556 - t559, -t367 + t570, -t566 - t572, t180 * t77 + t395 * t76 + t366 + t538, 0, 0, 0, 0, 0, 0, t34, t36, t9, t357 * t578 + t577 * t361 - t395 * t73 + t557, 0, 0, 0, 0, 0, 0, t34, t36, t9, t573 * t357 - t361 * t576 - t395 * t61 + t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t509, t566 - t572, -t367 - t570, -t509, -t430 - t559, t381, -t178 * t395 - t463 * t77 + t384 - t425, t178 * t180 - t463 * t76 - t383 + t390, 0, 0, t29, t10, t35, t30, t33, -t513, -pkin(4) * t68 - t149 * t77 - t569 * t56 - t395 * t39 + t391 * t357 + (-pkin(10) * qJD(5) * t569 + t377) * t361, pkin(4) * t67 - t151 * t77 + t395 * t40 + t20 * t357 + (pkin(10) * t467 + t57) * t569 + t391 * t361 - t449, t149 * t57 + t151 * t56 + ((-t68 + t468) * pkin(10) + t578) * t361 + ((qJD(5) * t149 - t67) * pkin(10) - t577) * t357 + t383, -t39 * t56 - t40 * t57 - t73 * t77 + t377 * pkin(4) + (-qJD(5) * t406 + t3 * t361 - t4 * t357 + t383) * pkin(10), t29, t10, t35, t30, t33, -t513, -t105 * t316 - t149 * t63 - t395 * t27 - t343 * t68 + t519 * t569 + (t180 * t61 + (t61 + t539) * qJD(5)) * t357 + t378 * t361, t61 * t510 - t105 * t317 - t151 * t63 + t17 * t357 + t395 * t32 + t343 * t67 - t520 * t569 + (pkin(5) * t514 + t361 * t61) * qJD(5) - t449, -t520 * t149 - t519 * t151 - t316 * t67 - t317 * t68 + t357 * t576 + t573 * t361 + t383, t2 * t317 - t1 * t316 - t17 * t343 - g(1) * (-t222 * t343 + t223 * t535) - g(2) * (-t218 * t343 + t219 * t535) - g(3) * (-t264 * t343 + t265 * t535) + (pkin(5) * t467 - t63) * t61 + t520 * t32 + t519 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516, t71, t44, -t516, t45, t105, -t151 * t73 + t364 + t525, t149 * t73 + t368 + t526, 0, 0, t516, t71, t44, -t516, t45, t105, 0.2e1 * t548 + t529 + t527 + (-t434 - t61) * t151 + t364, -pkin(5) * t553 + t528 + t569 * t31 + (qJD(6) + t61) * t149 + t368, t67 * pkin(5) - t149 * t534, t534 * t32 + (-t61 * t151 + t1 + t554) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 + t515, -t67 - t517, -t146 - t553, t32 * t149 + t27 * t151 - t378;];
tau_reg  = t18;
