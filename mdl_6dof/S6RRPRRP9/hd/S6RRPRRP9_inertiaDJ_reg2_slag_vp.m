% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:35
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP9_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:33:59
% EndTime: 2019-03-09 12:34:16
% DurationCPUTime: 6.88s
% Computational Cost: add. (10666->471), mult. (27856->829), div. (0->0), fcn. (28291->10), ass. (0->235)
t144 = sin(pkin(11));
t145 = sin(pkin(6));
t146 = cos(pkin(11));
t150 = cos(qJ(2));
t148 = sin(qJ(2));
t269 = cos(pkin(6));
t237 = pkin(1) * t269;
t220 = t148 * t237;
t180 = t269 * qJ(3) + t220;
t165 = t269 * pkin(9) + t180;
t280 = pkin(9) + qJ(3);
t285 = pkin(2) * t150;
t185 = -t280 * t148 - pkin(1) - t285;
t158 = -t165 * t144 + ((-pkin(8) * t144 - pkin(3)) * t150 + t185 * t146) * t145;
t256 = t146 * t150;
t246 = pkin(8) * t256;
t159 = t165 * t146 + (t144 * t185 + t246) * t145;
t287 = sin(qJ(4));
t288 = cos(qJ(4));
t39 = t287 * t158 + t288 * t159;
t224 = t269 * t144;
t257 = t146 * t148;
t241 = t145 * t257;
t183 = t224 + t241;
t223 = t269 * t146;
t259 = t145 * t148;
t184 = t144 * t259 - t223;
t83 = t287 * t183 + t288 * t184;
t84 = t288 * t183 - t287 * t184;
t181 = pkin(8) * t259 - t150 * t237;
t105 = -t269 * pkin(2) + t181;
t96 = pkin(3) * t184 + t105;
t161 = t83 * pkin(4) - t84 * pkin(10) + t96;
t108 = t181 * qJD(2);
t286 = pkin(2) * t148;
t203 = -qJ(3) * t150 + t286;
t253 = qJD(2) * t150;
t229 = t145 * t253;
t216 = t146 * t229;
t221 = t269 * qJD(3);
t254 = qJD(2) * t148;
t230 = t145 * t254;
t252 = qJD(3) * t148;
t154 = t144 * (t221 - t108) - t146 * (t203 * qJD(2) - t252) * t145 + pkin(9) * t216 - pkin(3) * t230;
t222 = qJD(2) * t269;
t210 = t150 * t222;
t174 = pkin(1) * t210 + t221;
t170 = t146 * t174;
t231 = t144 * t252;
t247 = pkin(8) * t257;
t157 = t170 + (-t231 + (-t247 + (-t280 * t150 + t286) * t144) * qJD(2)) * t145;
t38 = t288 * t158 - t287 * t159;
t20 = -qJD(4) * t38 + t287 * t154 - t288 * t157;
t307 = -pkin(10) * t230 - qJD(5) * t161 + t20;
t236 = t288 * t146;
t118 = t287 * t144 - t236;
t119 = t288 * t144 + t287 * t146;
t134 = -pkin(3) * t146 - pkin(2);
t182 = pkin(4) * t118 - pkin(10) * t119 + t134;
t301 = t280 * t287;
t303 = -t288 * qJD(3) + qJD(4) * t301;
t300 = t280 * t288;
t304 = t287 * qJD(3) + qJD(4) * t300;
t299 = t304 * t144 + t303 * t146;
t306 = -qJD(5) * t182 + t299;
t147 = sin(qJ(5));
t250 = qJD(5) * t147;
t112 = t118 * qJD(4);
t149 = cos(qJ(5));
t267 = t112 * t149;
t186 = t119 * t250 + t267;
t141 = t147 ^ 2;
t142 = t149 ^ 2;
t255 = t141 - t142;
t305 = t255 * qJD(5);
t302 = 0.2e1 * t253;
t101 = -t144 * t301 + t146 * t300;
t113 = t119 * qJD(4);
t209 = pkin(4) * t113 + pkin(10) * t112;
t248 = -t147 * t209 + t306 * t149;
t33 = t101 * t250 + t248;
t137 = qJD(5) * t149;
t34 = -t101 * t137 + t306 * t147 + t149 * t209;
t62 = -t101 * t147 + t149 * t182;
t63 = t149 * t101 + t147 * t182;
t298 = t147 * t33 - t149 * t34 + (t147 * t62 - t149 * t63) * qJD(5);
t249 = t149 * qJD(6);
t153 = qJ(6) * t186 - t119 * t249 + t34;
t283 = t113 * pkin(5);
t24 = t153 + t283;
t232 = t119 * t137;
t25 = qJ(6) * t232 + (-qJ(6) * t112 + qJD(5) * t101 + qJD(6) * t119) * t147 + t248;
t264 = t119 * t149;
t52 = pkin(5) * t118 - qJ(6) * t264 + t62;
t265 = t119 * t147;
t55 = -qJ(6) * t265 + t63;
t297 = t147 * t25 - t149 * t24 + (t147 * t52 - t149 * t55) * qJD(5);
t258 = t145 * t150;
t37 = -pkin(10) * t258 + t39;
t22 = -t147 * t37 + t149 * t161;
t23 = t147 * t161 + t149 * t37;
t217 = t144 * t229;
t164 = -qJD(4) * t83 - t287 * t217;
t238 = pkin(3) * t144 + pkin(8);
t65 = qJD(4) * t84 + t119 * t229;
t155 = -t164 * pkin(10) + t65 * pkin(4) + (t220 + (-pkin(10) * t236 + t238) * t258) * qJD(2);
t3 = -t147 * t155 + t307 * t149 + t37 * t250;
t4 = -t37 * t137 + t307 * t147 + t149 * t155;
t296 = t147 * t3 - t149 * t4 + (t147 * t22 - t149 * t23) * qJD(5);
t163 = -t288 * t216 - t164;
t76 = t147 * t84 + t149 * t258;
t43 = qJD(5) * t76 - t147 * t230 + t149 * t163;
t240 = t147 * t258;
t77 = t149 * t84 - t240;
t151 = t43 * qJ(6) - t77 * qJD(6) + t4;
t290 = t65 * pkin(5);
t1 = t151 + t290;
t12 = pkin(5) * t83 - qJ(6) * t77 + t22;
t13 = -qJ(6) * t76 + t23;
t44 = -qJD(5) * t240 + t137 * t84 - t147 * t163 - t149 * t230;
t2 = t44 * qJ(6) + t76 * qJD(6) + t3;
t295 = -t1 * t149 + t147 * t2 + (t12 * t147 - t13 * t149) * qJD(5);
t140 = t146 ^ 2;
t294 = 0.2e1 * t113;
t293 = 0.2e1 * t145;
t292 = 0.2e1 * qJD(2);
t291 = 0.2e1 * qJD(5);
t289 = t76 * pkin(5);
t284 = pkin(5) * t149;
t21 = -t39 * qJD(4) - t288 * t154 - t287 * t157;
t15 = -pkin(4) * t230 - t21;
t6 = t44 * pkin(5) + t15;
t282 = t147 * t6;
t281 = t149 * t6;
t279 = -qJ(6) - pkin(10);
t278 = -t76 * t137 - t147 * t44;
t100 = t144 * t300 + t146 * t301;
t81 = -t144 * t303 + t146 * t304;
t277 = t100 * t81;
t276 = t147 * t43;
t268 = t112 * t147;
t95 = t232 - t268;
t56 = pkin(5) * t95 + t81;
t275 = t147 * t56;
t274 = t147 * t76;
t273 = t147 * t77;
t272 = t149 * t44;
t271 = t149 * t56;
t270 = t149 * t77;
t266 = t119 * t112;
t135 = -pkin(4) - t284;
t263 = t135 * t149;
t139 = t145 ^ 2;
t143 = t150 ^ 2;
t262 = t139 * t143;
t261 = t144 * t148;
t260 = t144 * t150;
t51 = 0.2e1 * t83 * t65;
t98 = t118 * t294;
t245 = -0.2e1 * t250;
t244 = pkin(5) * t250;
t36 = pkin(4) * t258 - t38;
t26 = t36 + t289;
t243 = t26 * t250;
t82 = pkin(5) * t265 + t100;
t242 = t82 * t250;
t239 = t147 * t267;
t234 = t139 * t253;
t228 = t147 * t137;
t225 = -t135 + t284;
t116 = t119 ^ 2;
t219 = t116 * t228;
t218 = t148 * t234;
t138 = t144 ^ 2;
t215 = 0.2e1 * (t138 + t140) * qJD(3);
t208 = pkin(4) * t112 - pkin(10) * t113;
t207 = pkin(4) * t119 + pkin(10) * t118;
t204 = -qJ(3) * t148 - t285;
t202 = pkin(5) * t141 + t263;
t41 = t113 * t83 + t118 * t65;
t201 = t12 * t149 + t13 * t147;
t199 = t147 * t23 + t149 * t22;
t194 = t147 * t63 + t149 * t62;
t192 = t144 * t216;
t191 = -pkin(1) + t204;
t190 = t36 * t137 + t147 * t15;
t189 = t149 * t15 - t36 * t250;
t188 = -t149 * t43 - t77 * t250;
t49 = t83 * t137 + t147 * t65;
t187 = -t149 * t65 + t83 * t250;
t93 = t113 * t147 + t118 * t137;
t115 = pkin(8) * t258 + t220;
t179 = t145 * t184;
t178 = t145 * t183;
t171 = t145 * (t204 * qJD(2) + qJD(3) * t150);
t167 = -qJD(5) * t199 - t147 * t4 - t149 * t3;
t166 = -qJD(5) * t194 - t147 * t34 - t149 * t33;
t130 = -0.2e1 * t228;
t129 = 0.2e1 * t228;
t127 = t279 * t149;
t126 = t279 * t147;
t122 = -0.2e1 * t218;
t121 = -0.2e1 * t305;
t111 = -qJD(6) * t147 + t279 * t137;
t110 = -t279 * t250 - t249;
t109 = t115 * qJD(2);
t99 = (t238 * t258 + t220) * qJD(2);
t91 = t113 * t149 - t118 * t250;
t86 = (t141 + t142) * t112;
t80 = t146 * t180 + (t144 * t191 + t246) * t145;
t79 = -t144 * t180 + (-pkin(8) * t260 + t146 * t191) * t145;
t74 = -0.2e1 * t142 * t266 - 0.2e1 * t219;
t73 = -0.2e1 * t141 * t266 + 0.2e1 * t219;
t72 = t170 + (-t231 + (t144 * t203 - t247) * qJD(2)) * t145;
t71 = -t144 * t174 + (-t146 * t252 + (pkin(8) * t261 + t146 * t203) * qJD(2)) * t145;
t69 = t119 * t305 + t239;
t68 = t112 * t255 - 0.4e1 * t119 * t228;
t59 = t116 * t255 * t291 + 0.4e1 * t119 * t239;
t54 = -0.2e1 * t113 * t265 - 0.2e1 * t118 * t95;
t53 = 0.2e1 * t113 * t264 - 0.2e1 * t118 * t186;
t30 = -0.2e1 * t77 * t43;
t29 = 0.2e1 * t76 * t44;
t28 = t250 * t76 - t272;
t27 = t137 * t77 - t276;
t19 = -t278 * t119 - t76 * t268;
t18 = t119 * t188 - t77 * t267;
t17 = -0.2e1 * t44 * t83 - 0.2e1 * t65 * t76;
t16 = -0.2e1 * t43 * t83 + 0.2e1 * t65 * t77;
t11 = 0.2e1 * t43 * t76 - 0.2e1 * t44 * t77;
t10 = t188 + t278;
t9 = -t188 + t278;
t8 = -t113 * t76 - t118 * t44 - t119 * t49 + t83 * t268;
t7 = t113 * t77 - t118 * t43 - t119 * t187 - t83 * t267;
t5 = (t149 * t76 + t273) * t112 + (t276 - t272 + (-t270 + t274) * qJD(5)) * t119;
t14 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t218 (-t148 ^ 2 + t143) * t139 * t292, t210 * t293, t122, -0.2e1 * t222 * t259, 0, -0.2e1 * t139 * pkin(1) * t254 - 0.2e1 * t109 * t269, -0.2e1 * pkin(1) * t234 + 0.2e1 * t108 * t269 (-t108 * t150 + t109 * t148 + (-t115 * t148 + t150 * t181) * qJD(2)) * t293, -0.2e1 * t108 * t115 + 0.2e1 * t109 * t181, t146 * t178 * t302, 0.2e1 * (t140 * t269 + (-t224 - 0.2e1 * t241) * t144) * t229 (-t146 * t262 + t148 * t178) * t292, t144 * t179 * t302 (t144 * t262 - t148 * t179) * t292, t122, -0.2e1 * t109 * t223 + 0.2e1 * (t109 * t261 - t71 * t150 + (t105 * t260 + t148 * t79) * qJD(2)) * t145, 0.2e1 * t109 * t224 + 0.2e1 * (t109 * t257 + t72 * t150 + (t105 * t256 - t148 * t80) * qJD(2)) * t145, -0.2e1 * t72 * t184 - 0.2e1 * t71 * t183 + 0.2e1 * (-t144 * t80 - t146 * t79) * t229, 0.2e1 * t105 * t109 + 0.2e1 * t71 * t79 + 0.2e1 * t72 * t80, -0.2e1 * t84 * t163, 0.2e1 * t163 * t83 - 0.2e1 * t84 * t65, 0.2e1 * t163 * t258 + 0.2e1 * t230 * t84, t51 (t150 * t65 - t254 * t83) * t293, t122, 0.2e1 * t96 * t65 + 0.2e1 * t99 * t83 + 0.2e1 * (-t150 * t21 + t254 * t38) * t145, -0.2e1 * t163 * t96 - 0.2e1 * t20 * t258 - 0.2e1 * t230 * t39 + 0.2e1 * t99 * t84, 0.2e1 * t163 * t38 + 0.2e1 * t20 * t83 - 0.2e1 * t21 * t84 - 0.2e1 * t39 * t65, -0.2e1 * t20 * t39 + 0.2e1 * t21 * t38 + 0.2e1 * t96 * t99, t30, t11, t16, t29, t17, t51, 0.2e1 * t15 * t76 + 0.2e1 * t22 * t65 + 0.2e1 * t36 * t44 + 0.2e1 * t4 * t83, 0.2e1 * t15 * t77 - 0.2e1 * t23 * t65 + 0.2e1 * t3 * t83 - 0.2e1 * t36 * t43, 0.2e1 * t22 * t43 - 0.2e1 * t23 * t44 + 0.2e1 * t3 * t76 - 0.2e1 * t4 * t77, 0.2e1 * t15 * t36 + 0.2e1 * t22 * t4 - 0.2e1 * t23 * t3, t30, t11, t16, t29, t17, t51, 0.2e1 * t1 * t83 + 0.2e1 * t12 * t65 + 0.2e1 * t26 * t44 + 0.2e1 * t6 * t76, -0.2e1 * t13 * t65 + 0.2e1 * t2 * t83 - 0.2e1 * t26 * t43 + 0.2e1 * t6 * t77, -0.2e1 * t1 * t77 + 0.2e1 * t12 * t43 - 0.2e1 * t13 * t44 + 0.2e1 * t2 * t76, 0.2e1 * t1 * t12 - 0.2e1 * t13 * t2 + 0.2e1 * t26 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, 0, -t230, 0, -t109, t108, 0, 0, t192 (-t138 + t140) * t229, t144 * t230, -t192, t146 * t230, 0, -t109 * t146 + t144 * t171, t109 * t144 + t146 * t171 (t146 * t221 + t72) * t146 + (t144 * t221 - t71) * t144, -pkin(2) * t109 + (-t144 * t79 + t146 * t80) * qJD(3) + (-t71 * t144 + t72 * t146) * qJ(3), -t84 * t112 - t119 * t163, t112 * t83 - t84 * t113 + t118 * t163 - t119 * t65 (t112 * t150 + t119 * t254) * t145, t41 (t113 * t150 - t118 * t254) * t145, 0, t96 * t113 + t99 * t118 + t134 * t65 + (-t100 * t254 + t150 * t81) * t145, -t101 * t230 - t96 * t112 + t99 * t119 - t134 * t163 - t258 * t299, -t100 * t163 - t101 * t65 + t38 * t112 - t39 * t113 + t20 * t118 - t21 * t119 + t299 * t83 + t81 * t84, -t21 * t100 - t20 * t101 + t99 * t134 - t299 * t39 - t38 * t81, t18, t5, t7, t19, t8, t41, t100 * t44 + t113 * t22 + t118 * t4 + t119 * t190 - t36 * t268 + t34 * t83 + t62 * t65 + t76 * t81, -t100 * t43 - t113 * t23 + t118 * t3 + t119 * t189 - t36 * t267 + t33 * t83 - t63 * t65 + t77 * t81, t199 * t112 + t119 * t296 + t33 * t76 - t34 * t77 + t43 * t62 - t44 * t63, t100 * t15 + t22 * t34 - t23 * t33 - t3 * t63 + t36 * t81 + t4 * t62, t18, t5, t7, t19, t8, t41, -t26 * t268 + t1 * t118 + t113 * t12 + t24 * t83 + t44 * t82 + t52 * t65 + t56 * t76 + (t137 * t26 + t282) * t119, -t26 * t267 - t113 * t13 + t118 * t2 + t25 * t83 - t43 * t82 - t55 * t65 + t56 * t77 + (-t243 + t281) * t119, t201 * t112 + t119 * t295 - t24 * t77 + t25 * t76 + t43 * t52 - t44 * t55, t1 * t52 + t12 * t24 - t13 * t25 - t2 * t55 + t26 * t56 + t6 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, qJ(3) * t215, -0.2e1 * t266, 0.2e1 * t112 * t118 - 0.2e1 * t113 * t119, 0, t98, 0, 0, t134 * t294, -0.2e1 * t134 * t112, -0.2e1 * t100 * t112 - 0.2e1 * t101 * t113 + 0.2e1 * t118 * t299 + 0.2e1 * t81 * t119, -0.2e1 * t101 * t299 + 0.2e1 * t277, t74, t59, t53, t73, t54, t98, 0.2e1 * t100 * t95 + 0.2e1 * t113 * t62 + 0.2e1 * t118 * t34 + 0.2e1 * t81 * t265, -0.2e1 * t100 * t186 - 0.2e1 * t113 * t63 + 0.2e1 * t118 * t33 + 0.2e1 * t81 * t264, 0.2e1 * t194 * t112 + 0.2e1 * t119 * t298, -0.2e1 * t33 * t63 + 0.2e1 * t34 * t62 + 0.2e1 * t277, t74, t59, t53, t73, t54, t98, -0.2e1 * t82 * t268 + 0.2e1 * t113 * t52 + 0.2e1 * t118 * t24 + 0.2e1 * (t137 * t82 + t275) * t119, -0.2e1 * t82 * t267 - 0.2e1 * t113 * t55 + 0.2e1 * t118 * t25 + 0.2e1 * (-t242 + t271) * t119, 0.2e1 * (t147 * t55 + t149 * t52) * t112 + 0.2e1 * t297 * t119, 0.2e1 * t24 * t52 - 0.2e1 * t25 * t55 + 0.2e1 * t56 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, t216, 0, t109, 0, 0, 0, 0, 0, 0, t65, -t163, 0, t99, 0, 0, 0, 0, 0, 0, -t187, -t49, t9, -t296, 0, 0, 0, 0, 0, 0, -t187, -t49, t9, -t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t112, 0, 0, 0, 0, 0, 0, 0, 0, t91, -t93, t86, -t298, 0, 0, 0, 0, 0, 0, t91, -t93, t86, -t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, 0, -t65, t230, t21, t20, 0, 0, t27, t10, t49, t28, -t187, 0, -pkin(4) * t44 - pkin(10) * t49 - t189, pkin(4) * t43 + pkin(10) * t187 + t190 (-t276 - t272 + (t270 + t274) * qJD(5)) * pkin(10) + t167, -pkin(4) * t15 + pkin(10) * t167, t27, t10, t49, t28, -t187, 0, t111 * t83 + t126 * t65 + t135 * t44 - t281 + (t26 + t289) * t250, t110 * t83 + t127 * t65 - t135 * t43 + t282 + (pkin(5) * t273 + t149 * t26) * qJD(5), -qJD(5) * t201 - t1 * t147 + t110 * t76 - t111 * t77 + t126 * t43 + t127 * t44 - t149 * t2, pkin(5) * t243 + t1 * t126 - t110 * t13 + t111 * t12 + t127 * t2 + t135 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112, 0, -t113, 0, -t81, t299, 0, 0, -t69, t68, t93, t69, t91, 0, -t149 * t81 + t208 * t147 + (t100 * t147 - t149 * t207) * qJD(5), t147 * t81 + t208 * t149 + (t100 * t149 + t147 * t207) * qJD(5), t166, -pkin(4) * t81 + pkin(10) * t166, -t69, t68, t93, t69, t91, 0, -t135 * t268 + t111 * t118 + t113 * t126 - t271 + (t119 * t202 + t147 * t82) * qJD(5), -t112 * t263 + t110 * t118 + t113 * t127 + t275 + (t149 * t82 + t225 * t265) * qJD(5) (-t111 * t119 + t112 * t126 - t25 + (t119 * t127 - t52) * qJD(5)) * t149 + (t110 * t119 - t112 * t127 - t24 + (t119 * t126 - t55) * qJD(5)) * t147, pkin(5) * t242 - t110 * t55 + t111 * t52 + t126 * t24 + t127 * t25 + t135 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110 * t147 + t111 * t149 + (-t126 * t147 - t127 * t149) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t121, 0, t130, 0, 0, pkin(4) * t245, -0.2e1 * pkin(4) * t137, 0, 0, t129, t121, 0, t130, 0, 0, t225 * t245, t202 * t291, -0.2e1 * t110 * t149 - 0.2e1 * t111 * t147 + 0.2e1 * (-t126 * t149 + t127 * t147) * qJD(5), 0.2e1 * t110 * t127 + 0.2e1 * t111 * t126 + 0.2e1 * t135 * t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, 0, -t44, t65, t4, t3, 0, 0, 0, 0, -t43, 0, -t44, t65, t151 + 0.2e1 * t290, t2, t43 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, 0, -t95, t113, t34, t33, 0, 0, 0, 0, -t186, 0, -t95, t113, t153 + 0.2e1 * t283, t25, t186 * pkin(5), t24 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, -t137, 0, 0, 0, 0, 0, 0, 0, 0, -t250, -t137, 0, -t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, 0, -t250, 0, -pkin(10) * t137, pkin(10) * t250, 0, 0, 0, 0, t137, 0, -t250, 0, t111, t110, -pkin(5) * t137, t111 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t43, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, -t186, 0, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, t137, 0, t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t14;
