% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRRPRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRP11_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP11_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP11_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP11_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP11_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP11_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP11_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:41:36
% EndTime: 2019-03-09 17:47:31
% DurationCPUTime: 334.34s
% Computational Cost: add. (85296->2074), mult. (230484->2699), div. (0->0), fcn. (260978->10), ass. (0->816)
t1424 = Icges(6,4) + Icges(7,4);
t1426 = Icges(4,1) + Icges(5,2);
t1434 = Icges(6,1) + Icges(7,1);
t1459 = Icges(4,4) + Icges(5,6);
t1425 = Icges(5,4) - Icges(4,5);
t1423 = Icges(5,5) - Icges(4,6);
t1383 = Icges(6,5) + Icges(7,5);
t1422 = Icges(4,2) + Icges(5,3);
t1382 = Icges(6,2) + Icges(7,2);
t1381 = Icges(6,6) + Icges(7,6);
t1433 = Icges(6,3) + Icges(7,3);
t1189 = cos(qJ(3));
t1190 = cos(qJ(1));
t805 = sin(pkin(6));
t1016 = t805 * t1190;
t808 = sin(qJ(3));
t788 = t808 * t1016;
t809 = sin(qJ(2));
t810 = sin(qJ(1));
t812 = cos(qJ(2));
t1161 = cos(pkin(6));
t951 = t1161 * t1190;
t869 = -t809 * t951 - t810 * t812;
t704 = -t1189 * t869 - t788;
t1321 = Icges(7,5) * t704;
t1015 = t805 * t1189;
t926 = t1190 * t1015;
t703 = -t808 * t869 + t926;
t807 = sin(qJ(5));
t811 = cos(qJ(5));
t1109 = t809 * t810;
t917 = t812 * t951;
t868 = t917 - t1109;
t561 = t703 * t811 + t868 * t807;
t546 = Icges(7,4) * t561;
t1316 = t703 * t807;
t564 = t868 * t811 - t1316;
t242 = -Icges(7,1) * t564 + t1321 + t546;
t1322 = Icges(6,5) * t704;
t548 = Icges(6,4) * t561;
t245 = -Icges(6,1) * t564 + t1322 + t548;
t1375 = t242 + t245;
t1150 = Icges(7,4) * t564;
t1319 = Icges(7,6) * t704;
t236 = Icges(7,2) * t561 - t1150 + t1319;
t1153 = Icges(6,4) * t564;
t1320 = Icges(6,6) * t704;
t239 = Icges(6,2) * t561 - t1153 + t1320;
t1377 = t236 + t239;
t1317 = Icges(7,3) * t704;
t230 = -Icges(7,5) * t564 + Icges(7,6) * t561 + t1317;
t1318 = Icges(6,3) * t704;
t233 = -Icges(6,5) * t564 + Icges(6,6) * t561 + t1318;
t1379 = t230 + t233;
t1460 = t1375 * t564 - t1377 * t561 - t1379 * t704;
t1113 = t805 * t812;
t1115 = t805 * t809;
t950 = t1161 * t1189;
t756 = t1115 * t808 - t950;
t695 = t1113 * t807 + t756 * t811;
t1463 = t1424 * t695;
t1108 = t811 * t812;
t1120 = t756 * t807;
t696 = t1108 * t805 - t1120;
t757 = t1015 * t809 + t1161 * t808;
t1365 = t1383 * t757 - t1434 * t696 + t1463;
t1462 = t1424 * t696;
t1366 = t1381 * t757 + t1382 * t695 - t1462;
t1367 = t1381 * t695 - t1383 * t696 + t1433 * t757;
t1461 = t1365 * t564 - t1366 * t561 - t1367 * t704;
t1001 = qJD(2) * t1190;
t793 = t805 * t1001;
t712 = qJD(3) * t868 + t793;
t531 = -qJD(5) * t704 + t712;
t798 = qJD(2) * t1161 + qJD(1);
t768 = -qJD(3) * t1113 + t798;
t666 = qJD(5) * t757 + t768;
t1464 = -t1460 * t531 + t1461 * t666;
t1052 = qJD(2) * t809;
t1006 = t805 * t1052;
t1110 = t808 * t812;
t1030 = t805 * t1110;
t693 = qJD(2) * t1030 + qJD(3) * t757;
t432 = qJD(5) * t696 - t1006 * t807 + t693 * t811;
t852 = qJD(5) * t695 + t693 * t807;
t433 = t1006 * t811 + t852;
t1047 = qJD(3) * t809;
t1005 = t805 * t1047;
t1014 = t812 * t1189;
t965 = t805 * t1014;
t694 = qJD(2) * t965 + qJD(3) * t950 - t1005 * t808;
t1446 = t1381 * t432 + t1383 * t433 + t1433 * t694;
t1445 = t1381 * t694 + t1382 * t432 + t1424 * t433;
t1444 = t1383 * t694 + t1424 * t432 + t1434 * t433;
t1443 = t1006 * t1423 + t1422 * t693 - t1459 * t694;
t1442 = -t1425 * t1006 + t1426 * t694 - t1459 * t693;
t1441 = t1425 * t694 - t1423 * t693 + (-Icges(5,1) - Icges(4,3)) * t1006;
t1142 = Icges(5,6) * t757;
t578 = -Icges(5,5) * t1113 + Icges(5,3) * t756 - t1142;
t1155 = Icges(4,4) * t757;
t582 = -Icges(4,2) * t756 - Icges(4,6) * t1113 + t1155;
t1440 = t578 - t582;
t739 = Icges(5,6) * t756;
t579 = -Icges(5,4) * t1113 - Icges(5,2) * t757 + t739;
t740 = Icges(4,4) * t756;
t583 = Icges(4,1) * t757 - Icges(4,5) * t1113 - t740;
t1414 = t579 - t583;
t580 = -Icges(5,1) * t1113 - Icges(5,4) * t757 + Icges(5,5) * t756;
t581 = Icges(4,5) * t757 - Icges(4,6) * t756 - Icges(4,3) * t1113;
t1355 = t580 + t581;
t987 = t810 * t1161;
t870 = -t1190 * t809 - t812 * t987;
t1117 = t870 * t807;
t764 = t1190 * t812 - t809 * t987;
t964 = t810 * t1015;
t707 = t764 * t808 - t964;
t565 = t707 * t811 + t1117;
t547 = Icges(7,4) * t565;
t1123 = t707 * t807;
t566 = -t811 * t870 + t1123;
t1114 = t805 * t810;
t708 = t1114 * t808 + t1189 * t764;
t244 = Icges(7,1) * t566 + Icges(7,5) * t708 + t547;
t549 = Icges(6,4) * t565;
t247 = Icges(6,1) * t566 + Icges(6,5) * t708 + t549;
t1374 = t244 + t247;
t1149 = Icges(7,4) * t566;
t238 = Icges(7,2) * t565 + Icges(7,6) * t708 + t1149;
t1152 = Icges(6,4) * t566;
t241 = Icges(6,2) * t565 + Icges(6,6) * t708 + t1152;
t1376 = t238 + t241;
t232 = Icges(7,5) * t566 + Icges(7,6) * t565 + Icges(7,3) * t708;
t235 = Icges(6,5) * t566 + Icges(6,6) * t565 + Icges(6,3) * t708;
t1378 = t232 + t235;
t1266 = -t1374 * t564 + t1376 * t561 + t1378 * t704;
t644 = qJD(1) * t869 + qJD(2) * t870;
t384 = -qJD(1) * t926 + qJD(3) * t708 + t644 * t808;
t643 = -qJD(1) * t917 - t1001 * t812 + t1109 * t798;
t208 = -qJD(5) * t566 + t384 * t811 + t643 * t807;
t1135 = t384 * t807;
t209 = qJD(5) * t565 - t643 * t811 + t1135;
t1000 = qJD(3) * t1189;
t1002 = qJD(1) * t1190;
t1048 = qJD(3) * t808;
t385 = t644 * t1189 - t764 * t1048 + (t1000 * t810 + t1002 * t808) * t805;
t102 = Icges(7,5) * t209 + Icges(7,6) * t208 + Icges(7,3) * t385;
t104 = Icges(6,5) * t209 + Icges(6,6) * t208 + Icges(6,3) * t385;
t1458 = -t102 - t104;
t646 = qJD(1) * t764 + qJD(2) * t868;
t386 = -qJD(1) * t964 - qJD(3) * t788 - t1000 * t869 + t646 * t808;
t645 = -qJD(1) * t870 - qJD(2) * t869;
t210 = qJD(5) * t564 + t386 * t811 - t645 * t807;
t856 = qJD(5) * t561 + t386 * t807;
t211 = t645 * t811 + t856;
t1054 = qJD(1) * t810;
t1008 = t805 * t1054;
t387 = -qJD(3) * t926 + t1008 * t808 + t1048 * t869 + t1189 * t646;
t103 = Icges(7,5) * t211 + Icges(7,6) * t210 + Icges(7,3) * t387;
t105 = Icges(6,5) * t211 + Icges(6,6) * t210 + Icges(6,3) * t387;
t1457 = -t103 - t105;
t106 = Icges(7,4) * t209 + Icges(7,2) * t208 + Icges(7,6) * t385;
t108 = Icges(6,4) * t209 + Icges(6,2) * t208 + Icges(6,6) * t385;
t1456 = -t106 - t108;
t107 = Icges(7,4) * t211 + Icges(7,2) * t210 + Icges(7,6) * t387;
t109 = Icges(6,4) * t211 + Icges(6,2) * t210 + Icges(6,6) * t387;
t1455 = -t107 - t109;
t110 = Icges(7,1) * t209 + Icges(7,4) * t208 + Icges(7,5) * t385;
t112 = Icges(6,1) * t209 + Icges(6,4) * t208 + Icges(6,5) * t385;
t1454 = t110 + t112;
t111 = Icges(7,1) * t211 + Icges(7,4) * t210 + Icges(7,5) * t387;
t113 = Icges(6,1) * t211 + Icges(6,4) * t210 + Icges(6,5) * t387;
t1453 = t111 + t113;
t160 = -Icges(5,5) * t643 - Icges(5,6) * t385 + Icges(5,3) * t384;
t166 = Icges(4,4) * t385 - Icges(4,2) * t384 - Icges(4,6) * t643;
t1452 = -t160 + t166;
t161 = Icges(5,5) * t645 - Icges(5,6) * t387 + Icges(5,3) * t386;
t167 = Icges(4,4) * t387 - Icges(4,2) * t386 + Icges(4,6) * t645;
t1451 = -t161 + t167;
t162 = Icges(4,5) * t385 - Icges(4,6) * t384 - Icges(4,3) * t643;
t168 = -Icges(5,1) * t643 - Icges(5,4) * t385 + Icges(5,5) * t384;
t1450 = t162 + t168;
t163 = Icges(4,5) * t387 - Icges(4,6) * t386 + Icges(4,3) * t645;
t169 = Icges(5,1) * t645 - Icges(5,4) * t387 + Icges(5,5) * t386;
t1449 = t163 + t169;
t164 = -Icges(5,4) * t643 - Icges(5,2) * t385 + Icges(5,6) * t384;
t170 = Icges(4,1) * t385 - Icges(4,4) * t384 - Icges(4,5) * t643;
t1448 = t164 - t170;
t165 = Icges(5,4) * t645 - Icges(5,2) * t387 + Icges(5,6) * t386;
t171 = Icges(4,1) * t387 - Icges(4,4) * t386 + Icges(4,5) * t645;
t1447 = t165 - t171;
t1144 = Icges(5,6) * t704;
t398 = -Icges(5,5) * t868 + Icges(5,3) * t703 - t1144;
t1157 = Icges(4,4) * t704;
t407 = -Icges(4,2) * t703 - Icges(4,6) * t868 + t1157;
t1295 = -t398 + t407;
t1143 = Icges(5,6) * t708;
t400 = -Icges(5,5) * t870 + Icges(5,3) * t707 - t1143;
t1156 = Icges(4,4) * t708;
t409 = -Icges(4,2) * t707 - Icges(4,6) * t870 + t1156;
t1418 = -t400 + t409;
t401 = Icges(4,5) * t704 - Icges(4,6) * t703 - Icges(4,3) * t868;
t411 = Icges(5,1) * t868 + Icges(5,4) * t704 - Icges(5,5) * t703;
t1417 = t401 - t411;
t403 = Icges(4,5) * t708 - Icges(4,6) * t707 - Icges(4,3) * t870;
t412 = -Icges(5,1) * t870 - Icges(5,4) * t708 + Icges(5,5) * t707;
t1363 = t403 + t412;
t681 = Icges(5,6) * t703;
t404 = -Icges(5,4) * t868 - Icges(5,2) * t704 + t681;
t683 = Icges(4,4) * t703;
t413 = Icges(4,1) * t704 - Icges(4,5) * t868 - t683;
t1293 = t404 - t413;
t682 = Icges(5,6) * t707;
t406 = -Icges(5,4) * t870 - Icges(5,2) * t708 + t682;
t684 = Icges(4,4) * t707;
t415 = Icges(4,1) * t708 - Icges(4,5) * t870 - t684;
t1416 = t406 - t415;
t944 = rSges(6,1) * t564 - rSges(6,2) * t561;
t249 = rSges(6,3) * t704 - t944;
t396 = -rSges(6,1) * t696 + rSges(6,2) * t695 + rSges(6,3) * t757;
t1439 = -t666 * t249 - t531 * t396;
t1328 = t1365 * t433 + t1366 * t432 + t1367 * t694 - t1444 * t696 + t1445 * t695 + t1446 * t757;
t1380 = (t1052 * t1355 + t1441 * t812) * t805 + t1442 * t757 + t1443 * t756 - t1414 * t694 + t1440 * t693;
t1258 = t1365 * t566 + t1366 * t565 + t1367 * t708;
t1257 = -t1365 * t696 + t1366 * t695 + t1367 * t757;
t157 = t578 * t707 - t579 * t708 - t580 * t870;
t159 = -t581 * t870 - t582 * t707 + t583 * t708;
t1307 = t157 + t159;
t1306 = -t1113 * t1355 - t1414 * t757 + t1440 * t756;
t1185 = pkin(5) * t811;
t802 = pkin(4) + t1185;
t1183 = pkin(4) - t802;
t1277 = rSges(7,1) * t564 - rSges(7,2) * t561 - pkin(5) * t1316;
t1438 = -t1183 * t868 + t1277;
t1265 = t1375 * t566 + t1377 * t565 + t1379 * t708;
t1437 = t1258 * t666 - t1265 * t531;
t136 = t707 * t398 - t708 * t404 + t411 * t870;
t140 = -t401 * t870 - t707 * t407 + t708 * t413;
t1311 = t140 + t136;
t1436 = t1307 * t768 - t1311 * t712;
t1341 = rSges(7,1) + pkin(5);
t1339 = -t1375 * t209 - t1377 * t208 - t1379 * t385 - t1453 * t566 + t1455 * t565 + t1457 * t708;
t1338 = -t1374 * t209 - t1376 * t208 - t1378 * t385 - t1454 * t566 + t1456 * t565 + t1458 * t708;
t1337 = -t1375 * t211 - t1377 * t210 - t1379 * t387 + t1453 * t564 + t1455 * t561 + t1457 * t704;
t1336 = -t1374 * t211 - t1376 * t210 - t1378 * t387 + t1454 * t564 + t1456 * t561 + t1458 * t704;
t1330 = t1365 * t209 + t1366 * t208 + t1367 * t385 + t1444 * t566 + t1445 * t565 + t1446 * t708;
t1329 = t1365 * t211 + t1366 * t210 + t1367 * t387 - t1444 * t564 + t1445 * t561 + t1446 * t704;
t1395 = t1293 * t385 + t1295 * t384 + t1417 * t643 + t1447 * t708 + t1449 * t870 + t1451 * t707;
t1394 = t1363 * t643 + t1416 * t385 + t1418 * t384 + t1448 * t708 + t1450 * t870 + t1452 * t707;
t1393 = t1293 * t387 + t1295 * t386 - t1417 * t645 + t1447 * t704 + t1449 * t868 + t1451 * t703;
t1392 = -t1363 * t645 + t1416 * t387 + t1418 * t386 + t1448 * t704 + t1450 * t868 + t1452 * t703;
t1325 = -t1355 * t643 - t1414 * t385 + t1440 * t384 + t1441 * t870 + t1442 * t708 + t1443 * t707;
t1324 = t1355 * t645 - t1414 * t387 + t1440 * t386 + t1441 * t868 + t1442 * t704 + t1443 * t703;
t1264 = t1374 * t566 + t1376 * t565 + t1378 * t708;
t92 = t230 * t757 + t236 * t695 - t242 * t696;
t94 = t233 * t757 + t239 * t695 - t245 * t696;
t1263 = t92 + t94;
t93 = t232 * t757 + t238 * t695 - t244 * t696;
t95 = t235 * t757 + t241 * t695 - t247 * t696;
t1262 = t93 + t95;
t137 = t707 * t400 - t708 * t406 - t412 * t870;
t141 = -t403 * t870 - t707 * t409 + t708 * t415;
t1314 = t137 + t141;
t1132 = t411 * t868;
t134 = t398 * t703 - t404 * t704 + t1132;
t1133 = t401 * t868;
t138 = -t407 * t703 + t413 * t704 - t1133;
t1313 = t138 + t134;
t344 = t868 * t412;
t135 = t703 * t400 - t704 * t406 - t344;
t343 = t868 * t403;
t139 = -t703 * t409 + t704 * t415 - t343;
t1312 = t139 + t135;
t143 = t1113 * t411 + t398 * t756 - t404 * t757;
t145 = -t1113 * t401 - t407 * t756 + t413 * t757;
t1310 = t145 + t143;
t144 = -t1113 * t412 + t400 * t756 - t406 * t757;
t146 = -t1113 * t403 - t409 * t756 + t415 * t757;
t1309 = t146 + t144;
t1131 = t580 * t868;
t156 = t578 * t703 - t579 * t704 - t1131;
t1130 = t581 * t868;
t158 = -t582 * t703 + t583 * t704 - t1130;
t1308 = t156 + t158;
t1432 = t1189 * t1459 - t1422 * t808;
t1431 = t1189 * t1426 - t1459 * t808;
t804 = t1190 * pkin(1);
t898 = pkin(8) * t1114 + t804;
t1243 = t898 * qJD(1);
t663 = t764 * pkin(2) - pkin(9) * t870;
t766 = (pkin(2) * t809 - pkin(9) * t812) * t805;
t1053 = qJD(2) * t805;
t792 = t810 * t1053;
t1019 = -t798 * t663 + t766 * t792 - t1243;
t1286 = qJD(4) * t703;
t491 = t708 * pkin(3) + qJ(4) * t707;
t650 = pkin(3) * t757 + qJ(4) * t756;
t711 = -qJD(3) * t870 + t792;
t1430 = t768 * t491 - t711 * t650 - t1019 + t1286;
t806 = -qJ(6) - pkin(10);
t1182 = pkin(10) + t806;
t1384 = rSges(7,3) - t1182;
t1076 = rSges(7,1) * t696 - rSges(7,2) * t695 - pkin(5) * t1120 - t1113 * t1183 - t1384 * t757;
t674 = qJD(6) * t708;
t1429 = t1076 * t531 + t674;
t530 = qJD(5) * t708 + t711;
t1332 = t1264 * t530 + t1437;
t1428 = -t1332 / 0.2e1;
t1387 = rSges(7,3) - t806;
t1413 = t1381 * t811 + t1383 * t807;
t1412 = t1382 * t811 + t1424 * t807;
t1411 = t1424 * t811 + t1434 * t807;
t573 = -pkin(4) * t870 + pkin(10) * t708;
t714 = -pkin(4) * t1113 + pkin(10) * t757;
t1410 = t768 * t573 - t711 * t714 + t1430;
t660 = -pkin(2) * t869 - pkin(9) * t868;
t773 = pkin(1) * t810 - pkin(8) * t1016;
t770 = qJD(1) * t773;
t1347 = -t798 * t660 - t766 * t793 - t770;
t678 = qJD(4) * t707;
t1409 = t1347 + t678;
t960 = qJD(2) * t1005;
t1408 = t1306 * t960 + t1380 * t768;
t619 = qJD(5) * t694 + t960;
t1407 = t1257 * t619 + t1328 * t666;
t1326 = t1314 * t711 + t1436;
t1406 = t1326 + t1332;
t1327 = t1308 * t768 + t1312 * t711 - t1313 * t712;
t1333 = t1266 * t530 - t1464;
t1405 = t1327 + t1333;
t785 = qJD(1) * t793;
t570 = -qJD(3) * t643 + t785;
t1137 = t146 * t570;
t784 = qJD(1) * t792;
t569 = qJD(3) * t645 + t784;
t1138 = t145 * t569;
t1139 = t144 * t570;
t1140 = t143 * t569;
t63 = -t166 * t756 + t170 * t757 - t409 * t693 + t415 * t694 + (t1052 * t403 - t162 * t812) * t805;
t1171 = t63 * t711;
t62 = -t167 * t756 + t171 * t757 - t407 * t693 + t413 * t694 + (t1052 * t401 - t163 * t812) * t805;
t1172 = t62 * t712;
t61 = t160 * t756 - t164 * t757 + t400 * t693 - t406 * t694 + (t1052 * t412 - t168 * t812) * t805;
t1173 = t61 * t711;
t60 = t161 * t756 - t165 * t757 + t398 * t693 - t404 * t694 + (-t1052 * t411 - t169 * t812) * t805;
t1174 = t60 * t712;
t261 = qJD(5) * t385 + t570;
t1166 = t95 * t261;
t260 = qJD(5) * t387 + t569;
t1167 = t94 * t260;
t1168 = t93 * t261;
t1169 = t92 * t260;
t30 = t104 * t757 + t108 * t695 - t112 * t696 + t235 * t694 + t241 * t432 + t247 * t433;
t1175 = t30 * t530;
t29 = t105 * t757 + t109 * t695 - t113 * t696 + t233 * t694 + t239 * t432 + t245 * t433;
t1176 = t29 * t531;
t28 = t102 * t757 + t106 * t695 - t110 * t696 + t232 * t694 + t238 * t432 + t244 * t433;
t1177 = t28 * t530;
t27 = t103 * t757 + t107 * t695 - t111 * t696 + t230 * t694 + t236 * t432 + t242 * t433;
t1178 = t27 * t531;
t1342 = t1166 + t1167 + t1175 - t1176 + t1168 + t1169 + t1177 - t1178 + t1407;
t1404 = t1342 + t1139 + t1140 + t1173 - t1174 + t1137 + t1138 + t1171 - t1172 + t1408;
t1343 = t1266 * t261 + t1329 * t666 - t1336 * t530 + t1337 * t531 - t1460 * t260 - t1461 * t619;
t1403 = t1308 * t960 + t1312 * t570 + t1313 * t569 + t1324 * t768 - t1392 * t711 + t1393 * t712 + t1343;
t1344 = t1258 * t619 + t1264 * t261 + t1265 * t260 + t1330 * t666 - t1338 * t530 + t1339 * t531;
t1402 = t1307 * t960 + t1311 * t569 + t1314 * t570 + t1325 * t768 - t1394 * t711 + t1395 * t712 + t1344;
t588 = -Icges(3,5) * t869 + Icges(3,6) * t868 - Icges(3,3) * t1016;
t746 = Icges(3,4) * t869;
t591 = Icges(3,2) * t868 - Icges(3,6) * t1016 - t746;
t745 = Icges(3,4) * t868;
t595 = Icges(3,1) * t869 + Icges(3,5) * t1016 - t745;
t228 = t1161 * t588 + (t591 * t812 - t595 * t809) * t805;
t420 = rSges(4,1) * t704 - rSges(4,2) * t703 - rSges(4,3) * t868;
t587 = rSges(4,1) * t757 - rSges(4,2) * t756 - rSges(4,3) * t1113;
t147 = -t768 * t420 - t712 * t587 + t1347;
t1400 = t1293 * t704 + t1295 * t703;
t1246 = (-t1434 * t561 - t1150 - t1153 + t1377) * t531 - (-t1434 * t565 + t1149 + t1152 + t1376) * t530 - (-t1434 * t695 + t1366 - t1462) * t666;
t1199 = -t712 / 0.2e1;
t1397 = t1332 / 0.2e1;
t1335 = -t29 - t27;
t1334 = -t30 - t28;
t1331 = t1257 * t666 + t1262 * t530 - t1263 * t531;
t1391 = -t62 - t60;
t1390 = -t63 - t61;
t1389 = t1306 * t768 + t1309 * t711 - t1310 * t712;
t590 = Icges(3,5) * t764 + Icges(3,6) * t870 + Icges(3,3) * t1114;
t1159 = Icges(3,4) * t764;
t593 = Icges(3,2) * t870 + Icges(3,6) * t1114 + t1159;
t747 = Icges(3,4) * t870;
t596 = Icges(3,1) * t764 + Icges(3,5) * t1114 + t747;
t218 = t590 * t1114 + t593 * t870 + t764 * t596;
t1386 = t218 * t810;
t1018 = t868 * t1189;
t1111 = t808 * t811;
t615 = t1111 * t868 + t807 * t869;
t1112 = t807 * t808;
t616 = t1112 * t868 - t811 * t869;
t1373 = t1018 * t1433 + t1381 * t615 + t1383 * t616;
t1017 = t870 * t1189;
t617 = t1111 * t870 - t764 * t807;
t618 = t1112 * t870 + t764 * t811;
t1372 = t1017 * t1433 + t1381 * t617 + t1383 * t618;
t1371 = t1018 * t1381 + t1382 * t615 + t1424 * t616;
t1370 = t1017 * t1381 + t1382 * t617 + t1424 * t618;
t1369 = t1018 * t1383 + t1424 * t615 + t1434 * t616;
t1368 = t1017 * t1383 + t1424 * t617 + t1434 * t618;
t1362 = t1423 * t869 + t1432 * t868;
t1361 = t1423 * t764 - t1432 * t870;
t1360 = -t1425 * t869 - t1431 * t868;
t1359 = -t1425 * t764 + t1431 * t870;
t719 = (t1108 * t808 - t807 * t809) * t805;
t720 = (t1110 * t807 + t809 * t811) * t805;
t1358 = t1381 * t719 + t1383 * t720 + t1433 * t965;
t1357 = t1381 * t965 + t1382 * t719 + t1424 * t720;
t1356 = t1383 * t965 + t1424 * t719 + t1434 * t720;
t1354 = (t1423 * t809 - t1432 * t812) * t805;
t1353 = (-t1425 * t809 + t1431 * t812) * t805;
t1352 = rSges(7,2) * t811 + t1341 * t807;
t253 = t566 * rSges(6,1) + t565 * rSges(6,2) + t708 * rSges(6,3);
t72 = t253 * t666 - t396 * t530 + t1410;
t419 = -rSges(5,1) * t870 - t708 * rSges(5,2) + t707 * rSges(5,3);
t586 = -rSges(5,1) * t1113 - rSges(5,2) * t757 + rSges(5,3) * t756;
t121 = t419 * t768 - t586 * t711 + t1430;
t680 = t703 * qJ(4);
t486 = pkin(3) * t704 + t680;
t691 = t704 * pkin(10);
t571 = -pkin(4) * t868 + t691;
t929 = t591 * t868 + t595 * t869;
t215 = -t1016 * t588 + t929;
t1043 = qJD(6) * t704;
t1282 = t566 * rSges(7,1) + t565 * rSges(7,2) + pkin(5) * t1123 + t1387 * t708 - t802 * t870;
t1094 = -t573 + t1282;
t1348 = -t1076 * t530 - t1094 * t666 - t1043 - t1410;
t1346 = -t591 * t870 + t764 * t595;
t1044 = qJD(5) * t707;
t1315 = t209 * rSges(7,1) + t208 * rSges(7,2) + t1044 * t1185 - t643 * t802 + t674 + (qJD(5) * t1117 + t1135) * pkin(5) + t1387 * t385;
t1304 = -t1381 * t561 + t1383 * t564 - t1317 - t1318;
t1302 = -t1382 * t561 + t1424 * t564 - t1319 - t1320;
t1301 = -t1424 * t561 + t1434 * t564 - t1321 - t1322;
t1300 = -t1381 * t703 + t1412 * t704;
t1299 = -t1381 * t707 + t1412 * t708;
t1298 = -t1383 * t703 + t1411 * t704;
t1297 = -t1383 * t707 + t1411 * t708;
t1292 = -t1381 * t756 + t1412 * t757;
t1291 = -t1383 * t756 + t1411 * t757;
t1290 = (t1365 * t807 + t1366 * t811 + t1413 * t757 - t1433 * t756) * t666 - (t1375 * t807 + t1377 * t811 + t1413 * t704 - t1433 * t703) * t531 + (t1374 * t807 + t1376 * t811 + t1413 * t708 - t1433 * t707) * t530;
t1289 = (t1422 * t757 + t1414 + t739 + t740) * t768 + (-t1422 * t704 - t1293 - t681 - t683) * t712 + (t1422 * t708 + t1416 + t682 + t684) * t711;
t1288 = (-t1426 * t756 - t1142 - t1155 + t1440) * t768 + (t1426 * t703 + t1144 + t1157 + t1295) * t712 + (-t1426 * t707 - t1143 - t1156 - t1418) * t711;
t1287 = (-t1423 * t757 - t1425 * t756) * t768 + (t1423 * t704 + t1425 * t703) * t712 + (-t1423 * t708 - t1425 * t707) * t711;
t180 = t385 * pkin(3) + qJ(4) * t384 + t678;
t267 = -t643 * pkin(4) + pkin(10) * t385;
t1102 = -t180 - t267;
t115 = t209 * rSges(6,1) + t208 * rSges(6,2) + t385 * rSges(6,3);
t1281 = -t115 + t1102;
t729 = t1161 * rSges(3,3) + (rSges(3,1) * t809 + rSges(3,2) * t812) * t805;
t1280 = t729 * t792 - t1243;
t1068 = -t491 - t573;
t1279 = -t253 + t1068;
t1059 = t650 + t714;
t1278 = t396 + t1059;
t1276 = t703 * t768 + t712 * t756;
t1275 = -t707 * t768 + t711 * t756;
t1274 = -t703 * t711 - t707 * t712;
t1273 = -t211 * rSges(7,1) - t210 * rSges(7,2) - pkin(5) * t856 - t1043;
t946 = rSges(5,1) * t868 - rSges(5,3) * t703;
t417 = -rSges(5,2) * t704 - t946;
t601 = -rSges(3,1) * t869 + rSges(3,2) * t868 - rSges(3,3) * t1016;
t349 = -t798 * t601 - t729 * t793 - t770;
t1096 = t1387 * t704 - t1438 - t691;
t1042 = qJD(6) * t757;
t1062 = t660 * t792 + t663 * t793;
t736 = qJD(4) * t756;
t969 = t711 * t486 + t1062 + t736;
t859 = -t1068 * t712 + t711 * t571 + t969;
t42 = t1094 * t531 + t1096 * t530 + t1042 + t859;
t1261 = t1096 * t42;
t1069 = -t486 - t571;
t834 = -t650 * t712 + t1409;
t823 = t1069 * t768 - t712 * t714 + t834;
t57 = -t1096 * t666 + t1429 + t823;
t988 = t57 * t1076;
t1260 = t1348 * t1094;
t603 = t764 * rSges(3,1) + rSges(3,2) * t870 + rSges(3,3) * t1114;
t321 = (t1190 * t603 + t601 * t810) * t1053;
t1107 = -t267 + t1315;
t381 = t387 * pkin(10);
t1106 = -t1183 * t645 + t1387 * t387 - t1273 - t381;
t996 = t1183 * t809;
t1101 = rSges(7,1) * t433 + rSges(7,2) * t432 + pkin(5) * t852 - t1053 * t996 + t1384 * t694 + t1042;
t1256 = t1352 * t704 - t1384 * t703;
t1255 = t1352 * t708 - t1384 * t707;
t1079 = -t417 - t486;
t1078 = -t419 - t491;
t1067 = t593 * t868 - t596 * t869;
t1254 = t1352 * t757 - t1384 * t756;
t1064 = t586 + t650;
t655 = Icges(3,1) * t868 + t746;
t1253 = -t591 + t655;
t656 = Icges(3,1) * t870 - t1159;
t1252 = -t593 + t656;
t653 = Icges(3,2) * t869 + t745;
t1251 = -t595 + t653;
t654 = -Icges(3,2) * t764 + t747;
t1250 = -t596 - t654;
t1247 = (t1382 * t696 + t1365 + t1463) * t666 - (t1382 * t564 + t1375 + t546 + t548) * t531 + (-t1382 * t566 + t1374 + t547 + t549) * t530;
t1245 = (t1381 * t696 + t1383 * t695) * t666 - (t1381 * t564 + t1383 * t561) * t531 + (-t1381 * t566 + t1383 * t565) * t530;
t1045 = qJD(4) * t808;
t1050 = qJD(3) * t869;
t912 = pkin(3) * t1189 + qJ(4) * t808;
t724 = t912 * t1113;
t1241 = t1045 * t870 - t650 * t1050 - t712 * t724;
t904 = Icges(4,5) * t1189 - Icges(4,6) * t808;
t1239 = t711 * (-Icges(4,3) * t764 + t1189 * t415 - t409 * t808 - t870 * t904) - t712 * (Icges(4,3) * t869 + t1189 * t413 - t407 * t808 - t868 * t904) + t768 * (t1189 * t583 - t582 * t808 - (Icges(4,3) * t809 + t812 * t904) * t805);
t268 = t645 * pkin(4) + t381;
t1084 = -t386 * qJ(4) - t1286;
t181 = t387 * pkin(3) - t1084;
t428 = t644 * pkin(2) - pkin(9) * t643;
t429 = t646 * pkin(2) + t645 * pkin(9);
t866 = t428 * t793 + t429 * t792 + t660 * t785 - t663 * t784;
t846 = qJD(4) * t693 + t711 * t181 + t570 * t486 + t866;
t820 = t1068 * t569 - t1102 * t712 + t711 * t268 + t570 * t571 + t846;
t7 = qJD(6) * t694 - t1094 * t260 + t1096 * t261 + t1106 * t530 + t1107 * t531 + t820;
t1238 = 0.2e1 * t7;
t767 = (pkin(2) * t812 + pkin(9) * t809) * t805;
t738 = qJD(2) * t767;
t1010 = t1190 * t738;
t622 = pkin(4) * t1006 + pkin(10) * t694;
t388 = pkin(3) * t694 + qJ(4) * t693 + t736;
t901 = -qJD(1) * t1243 - t798 * t429 + t766 * t784;
t858 = qJD(4) * t384 - t388 * t712 + t569 * t650 + t901;
t949 = t1069 * t1047;
t815 = t569 * t714 - t712 * t622 + (-t181 - t268) * t768 + (-t1010 + t949) * t1053 + t858;
t12 = qJD(6) * t385 - t1076 * t260 - t1096 * t619 - t1101 * t531 - t1106 * t666 + t815;
t1237 = 0.2e1 * t12;
t1082 = -t388 - t622;
t885 = -t1002 * t766 - t738 * t810;
t962 = t805 * t1002;
t952 = -pkin(1) * t1054 + pkin(8) * t962;
t755 = qJD(1) * t952;
t1085 = t798 * t428 + t755;
t938 = qJD(4) * t386 + t768 * t180 + t491 * t960 + t1085;
t816 = t1053 * t885 - t1059 * t570 + t1082 * t711 + t768 * t267 + t573 * t960 + t938;
t13 = qJD(6) * t387 + t1076 * t261 + t1094 * t619 - t1101 * t530 + t1107 * t666 + t816;
t1236 = 0.2e1 * t13;
t945 = -t211 * rSges(6,1) - t210 * rSges(6,2);
t117 = t387 * rSges(6,3) - t945;
t16 = t115 * t531 + t117 * t530 + t249 * t261 - t253 * t260 + t820;
t1235 = 0.2e1 * t16;
t201 = rSges(6,1) * t433 + rSges(6,2) * t432 + rSges(6,3) * t694;
t25 = t666 * t115 - t530 * t201 + t619 * t253 - t261 * t396 + t816;
t1234 = 0.2e1 * t25;
t26 = -t666 * t117 - t201 * t531 - t619 * t249 + t260 * t396 + t815;
t1233 = 0.2e1 * t26;
t1232 = 0.2e1 * t42;
t1231 = 0.2e1 * t57;
t1230 = -0.2e1 * t1348;
t68 = t249 * t530 + t253 * t531 + t859;
t1229 = 0.2e1 * t68;
t71 = t1439 + t823;
t1228 = 0.2e1 * t71;
t1227 = 0.2e1 * t72;
t1226 = m(6) / 0.2e1;
t1225 = m(7) / 0.2e1;
t1224 = t260 / 0.2e1;
t1223 = t261 / 0.2e1;
t1220 = -t530 / 0.2e1;
t1219 = t530 / 0.2e1;
t1217 = t531 / 0.2e1;
t1216 = -t531 / 0.2e1;
t1215 = t569 / 0.2e1;
t1214 = t570 / 0.2e1;
t1213 = t619 / 0.2e1;
t1208 = -t666 / 0.2e1;
t1207 = t666 / 0.2e1;
t1203 = -t711 / 0.2e1;
t1202 = t711 / 0.2e1;
t1200 = t712 / 0.2e1;
t1194 = -t768 / 0.2e1;
t1193 = t768 / 0.2e1;
t1192 = rSges(5,2) - pkin(3);
t1191 = -rSges(6,3) - pkin(3);
t1179 = t16 * t249;
t1170 = t68 * t117;
t1158 = Icges(3,4) * t809;
t721 = Icges(3,3) * t1161 + (Icges(3,5) * t809 + Icges(3,6) * t812) * t805;
t722 = Icges(3,6) * t1161 + (Icges(3,2) * t812 + t1158) * t805;
t794 = Icges(3,4) * t1113;
t723 = Icges(3,1) * t1115 + Icges(3,5) * t1161 + t794;
t319 = -t1016 * t721 + t722 * t868 - t723 * t869;
t1136 = t319 * t798;
t659 = pkin(2) * t868 - pkin(9) * t869;
t1116 = t798 * t659;
t1105 = -t181 * t870 - t643 * t486;
t172 = -t643 * rSges(5,1) - t385 * rSges(5,2) + t384 * rSges(5,3);
t1104 = -t172 - t180;
t397 = t1161 * t428;
t1103 = t1161 * t180 + t397;
t1095 = -t1384 * t704 + t1438;
t1093 = t693 + t1274;
t1092 = rSges(7,2) * t564 + t1341 * t561;
t1091 = -rSges(7,2) * t566 + t1341 * t565;
t853 = pkin(5) * t1112 - t1182 * t1189;
t1090 = -t616 * rSges(7,1) - t615 * rSges(7,2) - rSges(7,3) * t1018 - t1183 * t869 - t853 * t868;
t1089 = t618 * rSges(7,1) + t617 * rSges(7,2) + rSges(7,3) * t1017 - t1183 * t764 + t853 * t870;
t484 = -pkin(3) * t703 + qJ(4) * t704;
t1088 = qJD(4) * t757 + t711 * t484;
t1087 = t386 + t1275;
t1086 = t384 + t1276;
t442 = rSges(5,1) * t1006 - rSges(5,2) * t694 + rSges(5,3) * t693;
t1083 = -t388 - t442;
t423 = t870 * t486;
t1077 = -t571 * t870 - t423;
t489 = -pkin(3) * t707 + qJ(4) * t708;
t1075 = qJD(4) * t704 + t768 * t489;
t445 = t491 * t1006;
t1074 = t573 * t1006 + t445;
t1073 = t486 * t1113 - t650 * t868;
t625 = t1161 * t663;
t1072 = t1161 * t491 + t625;
t648 = -pkin(3) * t756 + qJ(4) * t757;
t1071 = qJD(4) * t708 - t648 * t712;
t1070 = rSges(7,2) * t696 + t1341 * t695;
t1065 = t720 * rSges(7,1) + t719 * rSges(7,2) + rSges(7,3) * t965 + (t812 * t853 - t996) * t805;
t662 = pkin(2) * t870 + pkin(9) * t764;
t1063 = t659 * t792 + t662 * t793;
t1060 = t663 * t1016 + t660 * t1114;
t760 = (Icges(3,1) * t812 - t1158) * t805;
t1057 = -t722 + t760;
t1056 = -Icges(3,2) * t1115 + t723 + t794;
t1055 = t1190 ^ 2;
t1049 = qJD(3) * t764;
t1041 = 2 * m(3);
t1040 = 2 * m(4);
t1039 = 2 * m(5);
t1038 = 0.2e1 * m(6);
t1037 = 0.2e1 * m(7);
t1036 = 0.2e1 * t870;
t1035 = 0.2e1 * t812;
t1034 = -pkin(3) - t1387;
t1033 = 0.2e1 * qJD(1);
t1031 = t68 * t1190;
t1028 = t181 * t1113 - t388 * t868 + t645 * t650;
t1027 = t1161 * t267 + t1103;
t1026 = -t201 + t1082;
t174 = t385 * rSges(4,1) - t384 * rSges(4,2) - t643 * rSges(4,3);
t1023 = t428 * t1016 + t429 * t1114 + t660 * t962;
t1021 = t1161 * t573 + t1072;
t217 = t588 * t1114 - t1346;
t363 = t644 * rSges(3,1) + t643 * rSges(3,2) + rSges(3,3) * t962;
t422 = t708 * rSges(4,1) - t707 * rSges(4,2) - rSges(4,3) * t870;
t1012 = t1190 * t590;
t216 = -t1012 * t805 + t1067;
t1013 = t1190 * t216;
t1009 = t1190 * t766;
t999 = qJD(5) * t1189;
t998 = qJD(6) * t1189;
t997 = t7 * t1096;
t995 = t1053 / 0.2e1;
t989 = t42 * t1106;
t986 = t1161 * t660;
t984 = t1041 / 0.2e1;
t983 = -t1040 / 0.2e1;
t982 = t1040 / 0.2e1;
t981 = -t1039 / 0.2e1;
t980 = t1039 / 0.2e1;
t979 = -t1038 / 0.2e1;
t978 = t1038 / 0.2e1;
t977 = -t1037 / 0.2e1;
t976 = t1037 / 0.2e1;
t975 = t1079 * t809;
t974 = 0.2e1 * t1052;
t973 = t1102 - t1107;
t972 = -t268 * t870 - t643 * t571 + t1105;
t971 = t1082 - t1101;
t970 = t1068 - t1094;
t968 = t1059 - t1076;
t967 = t491 * t1016 + t486 * t1114 + t1060;
t966 = t571 * t1113 - t714 * t868 + t1073;
t961 = t767 * t1001;
t959 = -t1016 / 0.2e1;
t958 = t1016 / 0.2e1;
t956 = t809 * t995;
t955 = -t792 / 0.2e1;
t954 = t810 * t995;
t948 = -t646 * rSges(3,1) + t645 * rSges(3,2);
t947 = -t645 * rSges(5,1) - t386 * rSges(5,3);
t943 = rSges(6,1) * t807 + rSges(6,2) * t811;
t939 = t766 * t1008 - t1161 * t429;
t620 = t912 * t868;
t937 = qJD(4) * t1030 + t486 * t1049 + t711 * t620 + t1063;
t928 = -t591 * t809 - t595 * t812;
t927 = -t593 * t809 + t596 * t812;
t923 = t663 + t898;
t921 = qJD(2) * t959;
t920 = qJD(2) * t958;
t919 = qJD(1) * t954;
t918 = qJD(3) * t956;
t916 = t798 * t662 - t767 * t792;
t914 = rSges(4,1) * t1189 - rSges(4,2) * t808;
t913 = rSges(5,2) * t1189 - rSges(5,3) * t808;
t911 = t180 * t1016 + t181 * t1114 + t486 * t962 + t1023;
t910 = t268 * t1113 - t622 * t868 + t645 * t714 + t1028;
t909 = t573 * t1016 + t571 * t1114 + t967;
t908 = t1190 * t218 + t217 * t810;
t905 = Icges(5,4) * t1189 - Icges(5,5) * t808;
t765 = (rSges(3,1) * t812 - rSges(3,2) * t809) * t805;
t900 = qJD(1) * t920;
t899 = -t660 - t773;
t758 = (Icges(3,5) * t812 - Icges(3,6) * t809) * t805;
t894 = -Icges(5,1) * t869 + t1189 * t404 - t398 * t808 - t868 * t905;
t893 = Icges(5,1) * t764 + t1189 * t406 - t400 * t808 - t870 * t905;
t890 = t1189 * t579 - t578 * t808 + (Icges(5,1) * t809 - t812 * t905) * t805;
t175 = t387 * rSges(4,1) - t386 * rSges(4,2) + t645 * rSges(4,3);
t888 = -t1190 * t388 - t1010;
t887 = -t1190 * t587 - t1009;
t886 = -t1190 * t650 - t1009;
t884 = -t680 + t899;
t878 = t428 + t952;
t877 = (-t1190 * t215 + t216 * t810) * t805;
t876 = (-t1190 * t217 + t1386) * t805;
t873 = -t1161 * t486 - t986;
t871 = -t805 * t961 - t1116;
t621 = t912 * t870;
t867 = t491 * t1005 + t1045 * t868 + t768 * t621 + t916;
t865 = pkin(10) * t1274 + t489 * t712 + t1088;
t864 = pkin(10) * t1275 - t648 * t711 + t1075;
t863 = pkin(10) * t1276 - t484 * t768 + t1071;
t862 = t491 + t923;
t735 = qJD(2) * t765;
t861 = (-t1002 * t729 - t735 * t810) * t805;
t860 = t267 * t1016 + t268 * t1114 + t571 * t962 + t911;
t857 = -t486 * t768 + t1409;
t855 = t650 * t1008 - t1161 * t181 + t939;
t850 = -t1190 * t622 + t888;
t849 = -t1190 * t586 + t886;
t848 = -t1190 * t714 + t886;
t845 = -t1161 * t571 + t873;
t843 = -t429 - t1243;
t833 = t180 + t878;
t832 = t843 + t1084;
t830 = -t1190 * t396 + t848;
t829 = t714 * t1008 - t1161 * t268 + t855;
t828 = -t1059 * t712 - t571 * t768 + t857;
t356 = Icges(3,5) * t644 + Icges(3,6) * t643 + Icges(3,3) * t962;
t357 = Icges(3,5) * t646 - Icges(3,6) * t645 + Icges(3,3) * t1008;
t358 = Icges(3,4) * t644 + Icges(3,2) * t643 + Icges(3,6) * t962;
t359 = Icges(3,4) * t646 - Icges(3,2) * t645 + Icges(3,6) * t1008;
t360 = Icges(3,1) * t644 + Icges(3,4) * t643 + Icges(3,5) * t962;
t361 = Icges(3,1) * t646 - Icges(3,4) * t645 + Icges(3,5) * t1008;
t827 = (qJD(1) * t908 - t1190 * (t870 * t359 + t764 * t361 + t643 * t591 - t644 * t595 + (t1002 * t588 + t357 * t810) * t805) + t810 * (t870 * t358 + t764 * t360 + t643 * t593 + t644 * t596 + (t1002 * t590 + t356 * t810) * t805)) * t805;
t826 = (-t1190 * (t868 * t359 - t869 * t361 - t645 * t591 - t646 * t595 + (t1054 * t588 - t1190 * t357) * t805) + t810 * (t868 * t358 - t869 * t360 - t645 * t593 + t646 * t596 + (t1054 * t590 - t1190 * t356) * t805) + (t215 * t810 + t1013) * qJD(1)) * t805;
t124 = t1161 * t357 + (qJD(2) * t928 + t359 * t812 + t361 * t809) * t805;
t125 = t1161 * t356 + (qJD(2) * t927 + t358 * t812 + t360 * t809) * t805;
t229 = t1161 * t590 + (t593 * t812 + t596 * t809) * t805;
t825 = (-t1190 * t124 + t125 * t810 + (t1190 * t229 + t228 * t810) * qJD(1)) * t805;
t632 = -pkin(4) * t869 + pkin(10) * t1018;
t633 = t764 * pkin(4) + pkin(10) * t1017;
t824 = t571 * t1049 + t711 * t632 - (-t621 - t633) * t712 - t1068 * t1050 + t937;
t741 = (pkin(4) * t809 + pkin(10) * t1014) * t805;
t821 = t573 * t1005 + t768 * t633 + (-t724 - t741) * t711 - t1059 * t1049 + t867;
t819 = -t712 * t741 - t714 * t1050 + (-t620 - t632) * t768 + (-t961 + t949) * t805 - t1116 + t1241;
t734 = qJD(2) * t760;
t733 = (Icges(3,4) * t812 - Icges(3,2) * t809) * t1053;
t732 = qJD(2) * t758;
t731 = (t812 * t999 + t1047) * t805;
t710 = (rSges(5,1) * t809 - t812 * t913) * t805;
t709 = (rSges(4,3) * t809 + t812 * t914) * t805;
t658 = rSges(3,1) * t870 - rSges(3,2) * t764;
t657 = rSges(3,1) * t868 + rSges(3,2) * t869;
t652 = Icges(3,5) * t870 - Icges(3,6) * t764;
t651 = Icges(3,5) * t868 + Icges(3,6) * t869;
t649 = -rSges(4,1) * t756 - rSges(4,2) * t757;
t647 = rSges(5,2) * t756 + rSges(5,3) * t757;
t624 = t870 * t999 + t1049;
t623 = t868 * t999 - t1050;
t534 = t720 * rSges(6,1) + t719 * rSges(6,2) + rSges(6,3) * t965;
t521 = t764 * rSges(5,1) - t870 * t913;
t520 = -rSges(5,1) * t869 - t868 * t913;
t519 = t764 * rSges(4,3) + t870 * t914;
t518 = -rSges(4,3) * t869 + t868 * t914;
t505 = -rSges(6,3) * t756 + t757 * t943;
t490 = -rSges(4,1) * t707 - rSges(4,2) * t708;
t488 = rSges(5,2) * t707 + rSges(5,3) * t708;
t485 = -rSges(4,1) * t703 - rSges(4,2) * t704;
t483 = rSges(5,2) * t703 + rSges(5,3) * t704;
t470 = rSges(6,1) * t695 + rSges(6,2) * t696;
t443 = rSges(4,1) * t694 - rSges(4,2) * t693 + rSges(4,3) * t1006;
t364 = rSges(3,3) * t1008 - t948;
t350 = t603 * t798 - t1280;
t338 = -rSges(6,3) * t707 + t708 * t943;
t336 = -rSges(6,3) * t703 + t704 * t943;
t320 = t1114 * t721 + t722 * t870 + t723 * t764;
t316 = t618 * rSges(6,1) + t617 * rSges(6,2) + rSges(6,3) * t1017;
t314 = t616 * rSges(6,1) + t615 * rSges(6,2) + rSges(6,3) * t1018;
t299 = rSges(6,1) * t565 - rSges(6,2) * t566;
t297 = rSges(6,1) * t561 + rSges(6,2) * t564;
t271 = t320 * t798;
t262 = t1161 * t732 + (t733 * t812 + t734 * t809 + (-t722 * t809 + t723 * t812) * qJD(2)) * t805;
t254 = t262 * t798;
t226 = qJD(1) * t1280 - t798 * t364 - t735 * t793;
t225 = qJD(2) * t861 + t798 * t363 + t755;
t173 = -t387 * rSges(5,2) - t947;
t150 = -t645 * t722 + t646 * t723 + t868 * t733 - t869 * t734 + (t1054 * t721 - t1190 * t732) * t805;
t149 = t643 * t722 + t644 * t723 + t870 * t733 + t764 * t734 + (t1002 * t721 + t732 * t810) * t805;
t148 = t422 * t768 - t587 * t711 - t1019;
t142 = t420 * t711 + t422 * t712 + t1062;
t120 = t1079 * t768 - t586 * t712 + t834;
t99 = qJD(2) * t876 + t271;
t98 = qJD(2) * t877 + t1136;
t91 = -t1078 * t712 + t417 * t711 + t969;
t74 = -t768 * t175 - t712 * t443 + t569 * t587 + (-t1047 * t420 - t1010) * t1053 + t901;
t73 = t768 * t174 - t711 * t443 - t570 * t587 + (t1047 * t422 + t885) * t1053 + t1085;
t59 = t174 * t712 + t175 * t711 + t420 * t570 - t422 * t569 + t866;
t44 = -t712 * t442 + t569 * t586 + (-t173 - t181) * t768 + (qJD(3) * t975 - t1010) * t1053 + t858;
t43 = t768 * t172 + t1083 * t711 - t1064 * t570 + (t1047 * t419 + t885) * t1053 + t938;
t31 = t1078 * t569 - t1104 * t712 + t173 * t711 + t417 * t570 + t846;
t1 = [(t12 * (t1034 * t704 + t802 * t868 + t1277 + t884) + t57 * (t1034 * t387 - t645 * t802 + t1273 + t832) + t13 * (t862 + t1282) - t1348 * (t833 + t1315)) * t976 + (t229 + t320) * t900 + (t98 - t1136 + ((-t1067 + t1346) * t810 - (-t929 + t218) * t1190 + ((-t588 * t810 + t1012) * t810 - t1055 * t588) * t805 + t908) * t1053) * t955 + ((t1301 * t566 + t1302 * t565 + t1304 * t708 + t1265 - t1266) * t530 + t1333 + t1464) * t1220 + (t125 + t149) * t954 + (t42 * (t1095 + t1096) * t531 + (-t1095 * t666 - t1429 + t57 - t828) * t1348) * t977 + (t44 * (t1192 * t704 + t884 + t946) + t120 * (t1192 * t387 + t832 + t947) + t43 * (t862 + t419) + t121 * (t833 + t172)) * t980 + (t1326 + t1324) * t1199 + (t124 + t150 + t99) * t921 + (t228 + t319) * t919 + (t226 * (-t601 - t773) + t349 * ((-t804 + (-rSges(3,3) - pkin(8)) * t1114) * qJD(1) + t948) + t225 * (t603 + t898) + t350 * (t952 + t363)) * t984 + (-t1301 * t696 + t1302 * t695 + t1304 * t757 + t1263) * t530 * t1208 + (t74 * (-t420 + t899) + t147 * (-t175 + t843) + t73 * (t923 + t422) + t148 * (t878 + t174)) * t982 + (t26 * (t1191 * t704 - t571 + t884 + t944) + t71 * (t1191 * t387 - t268 + t832 + t945) + t25 * (t573 + t862 + t253) + t72 * (t267 + t833 + t115)) * t978 + ((t1417 * t868 + t1313 + t1314 + t1400) * t711 + t1436) * t1200 + (t1439 - t71 + t828) * t72 * t979 + (t271 + (t1013 - (t217 + t1067) * t1190 + t1055 * t590 * t805 + t1386) * t1053) * t920 - t1461 * t1224 + ((-t1301 * t564 + t1302 * t561 + t1304 * t704 + t1264 - t1460) * t530 + t1437) * t1217 + (t1113 * t1417 + t1293 * t757 + t1295 * t756 + t1310) * t711 * t1194 + t1137 / 0.2e1 + t1171 / 0.2e1 + t1258 * t1223 + t1307 * t1214 + t1308 * t1215 + (-t1064 * t712 - t417 * t768 - t120 + t857) * t121 * t981 + t1325 * t1202 + t1329 * t1216 + t1330 * t1219 + t1169 / 0.2e1 + t1167 / 0.2e1 + t1168 / 0.2e1 + t1166 / 0.2e1 - t1172 / 0.2e1 + t254 + t1407 + t1408 + t1175 / 0.2e1 - t1176 / 0.2e1 + t1177 / 0.2e1 - t1178 / 0.2e1 + t1140 / 0.2e1 + t1138 / 0.2e1 + t1139 / 0.2e1 + t1173 / 0.2e1 - t1174 / 0.2e1 + t531 * t1428 + ((t1414 * t704 - t1440 * t703 + t1130 + t1131) * t768 - (-t1132 + t1133 + t1400) * t712 + (t1293 * t708 + t1295 * t707 + t1416 * t704 + t1417 * t870 + t1418 * t703 + t1311 + t343 + t344) * t711 + t1327) * t1203; ((-t1096 * t1161 + t845) * t1237 + (-t1106 * t1161 + t829) * t1231 + (t1094 * t1161 + t1021) * t1236 + (t1107 * t1161 + t1027) * t1230 + t909 * t1238 + t860 * t1232 + (t850 * t1231 + ((-t766 - t968) * t1236 + (-t738 + t971) * t1230 + 0.2e1 * t997 + 0.2e1 * t989 + (-t988 + t42 * (-t663 + t970)) * t1033) * t810 + (-t1033 * t1348 + t1237) * (t1076 * t1190 + t848) + (t1033 * t1261 + t1094 * t1238 - t1101 * t1231 + t1107 * t1232) * t1190) * t805) * t1225 + ((-t1016 * t758 + t1056 * t868 - t1057 * t869) * t798 + ((-t1190 * t652 * t810 + t1055 * t651) * t805 - (-t1190 * t1253 + t1252 * t810) * t869 - (t1190 * t1251 + t1250 * t810) * t868) * t1053) * t920 + ((-t1338 * t810 + t1339 * t1190 + (t1190 * t1264 + t1265 * t810) * qJD(1)) * t805 + t1330 * t1161) * t1219 + ((t1353 * t757 + t1354 * t756) * t768 + (t1360 * t757 + t1362 * t756) * t712 + (t1359 * t757 + t1361 * t756) * t711 + (t1309 * t764 - t1310 * t869) * qJD(3) + ((-t893 * t711 + t712 * t894 - t890 * t768 + t1239) * t812 + (qJD(3) * t1306 + t1355 * t768 + t1363 * t711 - t1417 * t712) * t809) * t805) * t1194 + (t135 * t1049 - t134 * t1050 + t156 * t1005 + (t1115 * t158 - t138 * t869 + t139 * t764) * qJD(3) + t1239 * t868 + (t1353 * t704 + t1354 * t703 - t1355 * t869 - t868 * t890) * t768 + (t1360 * t704 + t1362 * t703 + t1417 * t869 + t868 * t894) * t712 + (t1359 * t704 + t1361 * t703 - t1363 * t869 - t868 * t893) * t711) * t1200 + (t137 * t1049 - t136 * t1050 + t157 * t1005 + (t1115 * t159 - t140 * t869 + t141 * t764) * qJD(3) + t1239 * t870 + (t1353 * t708 + t1354 * t707 + t1355 * t764 - t870 * t890) * t768 + (t1360 * t708 + t1362 * t707 - t1417 * t764 + t870 * t894) * t712 + (t1359 * t708 + t1361 * t707 + t1363 * t764 - t870 * t893) * t711) * t1203 + ((-t1190 * t1263 + t1262 * t810) * t805 + t1257 * t1161) * t1213 + ((-t1190 * t1265 + t1264 * t810) * t805 + t1258 * t1161) * t1223 + (qJD(2) * t826 + t150 * t798 + t1403) * t959 + (qJD(2) * t825 + t1404 + t254) * t1161 / 0.2e1 + (qJD(2) * t827 + t149 * t798 + (t98 + t1405) * qJD(1) + t1402) * t1114 / 0.2e1 + (t99 + t1406) * qJD(1) * t958 + ((t1056 * t870 + t1057 * t764 + t1114 * t758) * t798 + ((t652 * t1114 - t1250 * t870 + t1252 * t764) * t1114 - (t651 * t1114 + t1251 * t870 + t1253 * t764) * t1016) * qJD(2)) * t955 + (t44 * (-t1161 * t417 + t805 * t849 + t873) + t120 * (-t1161 * t173 + (t1054 * t586 - t1190 * t442 + t888) * t805 + t855) + t43 * (t1161 * t419 + (-t766 - t1064) * t1114 + t1072) + t121 * (t1161 * t172 + ((-t738 + t1083) * t810 + t849 * qJD(1)) * t805 + t1103) + t31 * ((t1190 * t419 + t417 * t810) * t805 + t967) + t91 * ((t1190 * t172 + t173 * t810 + (t1190 * t417 + (-t663 + t1078) * t810) * qJD(1)) * t805 + t911)) * t980 + (t74 * (-t1161 * t420 + t805 * t887 - t986) + t147 * (-t1161 * t175 + (t1054 * t587 - t1190 * t443 - t1010) * t805 + t939) + t73 * (t1161 * t422 + t625 + (-t587 - t766) * t1114) + t148 * (t1161 * t174 + t397 + ((-t443 - t738) * t810 + t887 * qJD(1)) * t805) + t59 * ((t1190 * t422 + t420 * t810) * t805 + t1060) + t142 * ((t1190 * t174 + t175 * t810 + (t1190 * t420 + (-t422 - t663) * t810) * qJD(1)) * t805 + t1023)) * t982 + ((-t1161 * t249 + t845) * t1233 + (-t1161 * t117 + t829) * t1228 + (t1161 * t253 + t1021) * t1234 + (t115 * t1161 + t1027) * t1227 + t909 * t1235 + t860 * t1229 + (t830 * t1233 + (-t1190 * t201 + t850) * t1228 + t1190 * t253 * t1235 + 0.2e1 * t115 * t1031 + (t1031 * t249 + t72 * t830) * t1033 + ((-t766 - t1278) * t1234 + (-t738 + t1026) * t1227 + 0.2e1 * t1179 + 0.2e1 * t1170 + (t71 * t396 + t68 * (-t663 + t1279)) * t1033) * t810) * t805) * t1226 + (t1161 * t319 + t877) * t919 + t798 * (t1161 * t262 + t825) / 0.2e1 + (t1161 * t149 + t827) * t954 + ((-t1190 * t1310 + t1309 * t810) * t805 + t1306 * t1161) * t918 + ((-t1190 * t1313 + t1312 * t810) * t805 + t1308 * t1161) * t1215 + ((-t1190 * t1311 + t1314 * t810) * t805 + t1307 * t1161) * t1214 + (t57 * (-t1065 * t531 - t1076 * t623 + t1090 * t666 - t1096 * t731 + t870 * t998 + t819) - t1348 * (-t1065 * t530 + t1076 * t624 + t1089 * t666 + t1094 * t731 + t868 * t998 + t821) + t42 * (qJD(6) * t965 + t1089 * t531 - t1090 * t530 - t1094 * t623 + t1096 * t624 + t824)) * t977 + (t1257 * t731 + (-t1356 * t696 + t1357 * t695 + t1358 * t757 + t1365 * t720 + t1366 * t719 + t1367 * t965) * t666 + t1262 * t624 + t1263 * t623 - (-t1369 * t696 + t1371 * t695 + t1373 * t757 + t1375 * t720 + t1377 * t719 + t1379 * t965) * t531 + (-t1368 * t696 + t1370 * t695 + t1372 * t757 + t1374 * t720 + t1376 * t719 + t1378 * t965) * t530) * t1208 + (t1258 * t731 + (t1017 * t1367 + t1356 * t566 + t1357 * t565 + t1358 * t708 + t1365 * t618 + t1366 * t617) * t666 + t1264 * t624 + t1265 * t623 - (t1017 * t1379 + t1369 * t566 + t1371 * t565 + t1373 * t708 + t1375 * t618 + t1377 * t617) * t531 + (t1017 * t1378 + t1368 * t566 + t1370 * t565 + t1372 * t708 + t1374 * t618 + t1376 * t617) * t530) * t1220 + (t71 * (-t731 * t249 - t666 * t314 + t623 * t396 - t531 * t534 + t819) + t72 * (t253 * t731 + t316 * t666 - t396 * t624 - t530 * t534 + t821) + t68 * (t249 * t624 - t253 * t623 + t314 * t530 + t316 * t531 + t824)) * t979 - t798 * (t1161 * t758 * t798 + ((t1056 * t812 + t1057 * t809) * t798 + (t652 * t987 - t651 * t951 + ((t654 * t812 + t656 * t809 + t927) * t810 - (t653 * t812 + t655 * t809 + t928) * t1190) * t805) * qJD(2)) * t805) / 0.2e1 + ((-t1392 * t810 + t1393 * t1190 + (t1190 * t1312 + t1313 * t810) * qJD(1)) * t805 + t1324 * t1161) * t1199 + ((-t1394 * t810 + t1395 * t1190 + (t1190 * t1314 + t1311 * t810) * qJD(1)) * t805 + t1325 * t1161) * t1202 - t1331 * t731 / 0.2e1 - t1333 * t623 / 0.2e1 + ((-t1334 * t810 + t1335 * t1190 + (t1190 * t1262 + t1263 * t810) * qJD(1)) * t805 + t1328 * t1161) * t1207 + (-t1461 * t731 + (t1018 * t1367 - t1356 * t564 + t1357 * t561 + t1358 * t704 + t1365 * t616 + t1366 * t615) * t666 + t1266 * t624 - t1460 * t623 - (t1018 * t1379 - t1369 * t564 + t1371 * t561 + t1373 * t704 + t1375 * t616 + t1377 * t615) * t531 + (t1018 * t1378 - t1368 * t564 + t1370 * t561 + t1372 * t704 + t1374 * t616 + t1376 * t615) * t530) * t1217 + ((t1190 * t1460 + t1266 * t810) * t805 - t1461 * t1161) * t1224 + ((-t1336 * t810 + t1337 * t1190 + (t1190 * t1266 - t1460 * t810) * qJD(1)) * t805 + t1329 * t1161) * t1216 - t1389 * t1005 / 0.2e1 - t1326 * t1049 / 0.2e1 + t1327 * t1050 / 0.2e1 + ((-t1390 * t810 + t1391 * t1190 + (t1190 * t1309 + t1310 * t810) * qJD(1)) * t805 + t1380 * t1161) * t1193 + (t147 * (-t768 * t518 - t712 * t709 + (-t1115 * t420 - t587 * t869) * qJD(3) + t871) + t148 * (t519 * t768 - t709 * t711 + (t1115 * t422 - t587 * t764) * qJD(3) + t916) + t142 * (t518 * t711 + t519 * t712 + (t420 * t764 + t422 * t869) * qJD(3) + t1063)) * t983 - m(5) * (t120 * (-t712 * t710 + t871 + (-t520 - t620) * t768 + t1241) + t121 * (t521 * t768 + t867 + (-t710 - t724) * t711) + t91 * (t520 * t711 + t937 - (-t521 - t621) * t712) + (t120 * (t1079 * t1115 - t586 * t869) + t121 * (-t1064 * t764 + t1115 * t419) + t91 * (-t1078 * t869 + t417 * t764)) * qJD(3)) - (t349 * (-t798 * t657 - t765 * t793) + t350 * (t658 * t798 - t765 * t792) + (t1190 * t658 + t657 * t810) * t321 * t1053) * t1041 / 0.2e1 + (t226 * (-t1016 * t729 - t1161 * t601) - t349 * t1161 * t364 + t225 * (-t1114 * t729 + t1161 * t603) + t350 * (t1161 * t363 + t861) + (t349 * (t1054 * t729 - t1190 * t735) + 0.2e1 * t321 * (t1190 * t363 + t364 * t810 + (t1190 * t601 - t603 * t810) * qJD(1))) * t805) * t984 + (t1161 * t320 + t876) * t900 + (t1161 * t150 + t826) * t921 + t624 * t1428; (t966 * t1237 + t910 * t1231 + t1074 * t1230 + t1077 * t1238 + t972 * t1232 - (-t13 * t968 - t1348 * t971 + t989 + t997) * t1036 + ((t57 * (t1069 - t1096) - t1260) * t974 + (t1096 * t12 + t1106 * t57 + t13 * t970 - t1348 * t973) * t1035) * t805 + 0.2e1 * (t42 * t970 - t988) * t645 + 0.2e1 * (-t1348 * t968 - t1261) * t643 - 0.2e1 * (-t1076 * t12 + t1101 * t57 + t42 * t973 + t7 * t970) * t868) * t1225 + (t74 * (t1113 * t420 - t587 * t868) + t147 * (-t443 * t868 + t587 * t645 + (-t1052 * t420 + t175 * t812) * t805) + t73 * (-t1113 * t422 + t587 * t870) + t148 * (t443 * t870 + t587 * t643 + (t1052 * t422 - t174 * t812) * t805) + t59 * (-t420 * t870 + t422 * t868) + t142 * (t174 * t868 - t175 * t870 - t420 * t643 - t422 * t645)) * t982 + (t1290 * t708 + (t1291 * t566 + t1292 * t565 - t1367 * t707) * t666 - (t1298 * t566 + t1300 * t565 - t1379 * t707) * t531 + (t1297 * t566 + t1299 * t565 - t1378 * t707) * t530 + (-t1258 * t756 - t1264 * t707 - t1265 * t703) * qJD(5)) * t1220 + (t1290 * t757 + (-t1291 * t696 + t1292 * t695 - t1367 * t756) * t666 - (-t1298 * t696 + t1300 * t695 - t1379 * t756) * t531 + (-t1297 * t696 + t1299 * t695 - t1378 * t756) * t530 + (-t1257 * t756 - t1262 * t707 - t1263 * t703) * qJD(5)) * t1208 + t1044 * t1397 - t1402 * t870 / 0.2e1 - t1403 * t868 / 0.2e1 - t1404 * t1113 / 0.2e1 + t1405 * t645 / 0.2e1 - t1406 * t643 / 0.2e1 + (t44 * (t1113 * t417 - t586 * t868 + t1073) + t120 * (-t442 * t868 + t586 * t645 + (qJD(2) * t975 + t173 * t812) * t805 + t1028) + t43 * (t1064 * t870 + t1078 * t1113) + t121 * (t445 - t1083 * t870 + t1064 * t643 + (t1052 * t419 + t1104 * t812) * t805) + t31 * (-t1078 * t868 - t417 * t870 - t423) + t91 * (t1078 * t645 - t1104 * t868 - t173 * t870 - t417 * t643 + t1105)) * t980 + (t966 * t1233 + t910 * t1228 + t1074 * t1227 + t1077 * t1235 + t972 * t1229 - (t1026 * t72 - t1278 * t25 + t1170 + t1179) * t1036 + ((t71 * (-t249 + t1069) + t72 * t253) * t974 + (t71 * t117 + t1279 * t25 + t1281 * t72 + t26 * t249) * t1035) * t805 + (t396 * t1228 + t1229 * t1279) * t645 + (t1227 * t1278 - t249 * t1229) * t643 - (t201 * t1228 + t1229 * t1281 + t396 * t1233 + t1235 * t1279) * t868) * t1226 - m(7) * ((-qJD(6) * t707 - t1254 * t531 - t1256 * t666 + t863) * t1231 + (-qJD(6) * t703 - t1254 * t530 + t1255 * t666 + t864) * t1230 + (-qJD(6) * t756 + t1255 * t531 + t1256 * t530 + t865) * t1232 + 0.2e1 * ((t1096 * t57 + t1260) * t756 + (t1076 * t1348 - t1261) * t707 + (t1094 * t42 + t988) * t703) * qJD(5)) / 0.2e1 + (t71 * (-t336 * t666 - t505 * t531 + (t249 * t756 - t396 * t703) * qJD(5) + t863) + t72 * (t338 * t666 - t505 * t530 + (-t253 * t756 + t396 * t707) * qJD(5) + t864) + t68 * (t336 * t530 + t338 * t531 + (-t249 * t707 + t253 * t703) * qJD(5) + t865)) * t979 + ((t1052 * t1308 - t1324 * t812) * t805 + t1392 * t870 + t1393 * t868 + t1313 * t645 - t1312 * t643) * t1199 + ((t1052 * t1307 - t1325 * t812) * t805 + t1394 * t870 + t1395 * t868 + t1311 * t645 - t1314 * t643) * t1202 + (t1290 * t704 + (-t1291 * t564 + t1292 * t561 - t1367 * t703) * t666 - (-t1298 * t564 + t1300 * t561 - t1379 * t703) * t531 + (-t1297 * t564 + t1299 * t561 - t1378 * t703) * t530 + (-t1266 * t707 + t1460 * t703 + t1461 * t756) * qJD(5)) * t1217 + (t1113 * t1461 - t1266 * t870 + t1460 * t868) * t1224 + ((-t1052 * t1461 - t1329 * t812) * t805 + t1336 * t870 + t1337 * t868 - t1460 * t645 - t1266 * t643) * t1216 + (t1331 + t1389) * t956 + ((t1306 * t1052 - t1380 * t812) * t805 + t1390 * t870 + t1391 * t868 + t1310 * t645 - t1309 * t643) * t1193 + (-t1113 * t1308 - t1312 * t870 - t1313 * t868) * t1215 + (-t1113 * t1307 - t1311 * t868 - t1314 * t870) * t1214 + (-t1113 * t1306 - t1309 * t870 - t1310 * t868) * t918 + (t120 * (-t647 * t712 + (-t483 - t484) * t768 + t1071) + t121 * (t488 * t768 + (-t647 - t648) * t711 + t1075) + t91 * (t483 * t711 - (-t488 - t489) * t712 + t1088)) * t981 + (t147 * (-t485 * t768 - t649 * t712) + t148 * (t490 * t768 - t649 * t711) + t142 * (t485 * t711 + t490 * t712)) * t983 + (t1331 * t756 + t1333 * t703) * qJD(5) / 0.2e1 + (-t1113 * t1258 - t1264 * t870 - t1265 * t868) * t1223 + (-t1113 * t1257 - t1262 * t870 - t1263 * t868) * t1213 + ((t1052 * t1257 - t1328 * t812) * t805 + t1334 * t870 + t1335 * t868 + t1263 * t645 - t1262 * t643) * t1207 + ((t1052 * t1258 - t1330 * t812) * t805 + t1338 * t870 + t1339 * t868 + t1265 * t645 - t1264 * t643) * t1219 + (t1287 * t868 + t1288 * t704 + t1289 * t703) * t1200 + (t1287 * t870 + t1288 * t708 + t1289 * t707) * t1203 + (t1113 * t1287 + t1288 * t757 + t1289 * t756) * t1194; (t1086 * t57 - t1087 * t1348 + t1093 * t42 + t12 * t707 + t13 * t703 + t7 * t756) * m(7) + (t1086 * t71 + t1087 * t72 + t1093 * t68 + t16 * t756 + t25 * t703 + t26 * t707) * m(6) + (t1086 * t120 + t1087 * t121 + t1093 * t91 + t31 * t756 + t43 * t703 + t44 * t707) * m(5); (t12 * (-t1076 * t704 - t1096 * t757) + t57 * (-t1076 * t387 - t1096 * t694 + t1101 * t704 - t1106 * t757) + t13 * (t1076 * t708 + t1094 * t757) - t1348 * (t1076 * t385 + t1094 * t694 - t1101 * t708 + t1107 * t757) + t7 * (-t1094 * t704 + t1096 * t708) + t42 * (-t1094 * t387 + t1096 * t385 + t1106 * t708 - t1107 * t704)) * t976 + (t57 * (-t1070 * t531 - t1092 * t666) - t1348 * (-t1070 * t530 + t1091 * t666) + t42 * (t1091 * t531 + t1092 * t530)) * t977 + (t26 * (-t249 * t757 + t396 * t704) + t71 * (-t117 * t757 + t201 * t704 - t249 * t694 + t387 * t396) + t25 * (t253 * t757 - t396 * t708) + t72 * (t115 * t757 - t201 * t708 + t253 * t694 - t385 * t396) + t16 * (t249 * t708 - t253 * t704) + t68 * (-t115 * t704 + t117 * t708 + t249 * t385 - t253 * t387)) * t978 + (t71 * (-t297 * t666 - t470 * t531) + t72 * (t299 * t666 - t470 * t530) + t68 * (t297 * t530 + t299 * t531)) * t979 + (t1266 * t708 - t1460 * t704 - t1461 * t757) * t1224 + (t1258 * t757 + t1264 * t708 + t1265 * t704) * t1223 + t385 * t1397 + t1333 * t387 / 0.2e1 + (t1245 * t708 + t1246 * t566 + t1247 * t565) * t1220 + (t1258 * t694 + t1264 * t385 + t1265 * t387 + t1330 * t757 - t1338 * t708 - t1339 * t704) * t1219 + (t1245 * t704 - t1246 * t564 + t1247 * t561) * t1217 + (t1266 * t385 + t1329 * t757 - t1336 * t708 - t1337 * t704 - t1460 * t387 - t1461 * t694) * t1216 + (t1257 * t757 + t1262 * t708 + t1263 * t704) * t1213 + (t1245 * t757 - t1246 * t696 + t1247 * t695) * t1208 + (t1257 * t694 + t1262 * t385 + t1263 * t387 + t1328 * t757 - t1334 * t708 - t1335 * t704) * t1207 + t1331 * t694 / 0.2e1 + t1343 * t704 / 0.2e1 + t1344 * t708 / 0.2e1 + t1342 * t757 / 0.2e1; (t12 * t708 + t13 * t704 + t7 * t757 - (t530 * t757 - t666 * t708 + t387) * t1348 + (t531 * t757 + t666 * t704 + t385) * t57 + (-t530 * t704 - t531 * t708 + t694) * t42) * m(7);];
tauc  = t1(:);
