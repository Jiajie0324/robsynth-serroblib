% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP11_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP11_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP11_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP11_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:49:03
% EndTime: 2019-03-09 17:49:11
% DurationCPUTime: 2.90s
% Computational Cost: add. (3373->319), mult. (8861->577), div. (0->0), fcn. (8101->8), ass. (0->163)
t195 = pkin(4) + pkin(9);
t117 = cos(qJ(3));
t114 = sin(qJ(3));
t180 = t114 * qJ(4);
t196 = pkin(3) + pkin(10);
t201 = t196 * t117 + t180;
t110 = t117 ^ 2;
t146 = qJD(3) * (t114 ^ 2 - t110);
t113 = sin(qJ(5));
t107 = t113 ^ 2;
t116 = cos(qJ(5));
t176 = -t116 ^ 2 + t107;
t145 = t176 * qJD(5);
t168 = qJD(4) * t117;
t91 = t195 * t117;
t200 = qJD(3) * t201 - qJD(5) * t91 - t168;
t111 = sin(pkin(6));
t118 = cos(qJ(2));
t173 = qJD(2) * t118;
t153 = t111 * t173;
t112 = cos(pkin(6));
t115 = sin(qJ(2));
t183 = t111 * t115;
t75 = t112 * t114 + t117 * t183;
t46 = qJD(3) * t75 + t114 * t153;
t182 = t111 * t118;
t158 = t114 * t183;
t74 = -t112 * t117 + t158;
t48 = t113 * t182 + t74 * t116;
t174 = qJD(2) * t115;
t96 = t111 * t174;
t32 = t48 * qJD(5) + t46 * t113 + t116 * t96;
t103 = qJD(3) * t117;
t171 = qJD(3) * t114;
t161 = pkin(8) * t182;
t194 = pkin(1) * t115;
t63 = t161 + (pkin(9) + t194) * t112;
t64 = (-pkin(2) * t118 - pkin(9) * t115 - pkin(1)) * t111;
t68 = (pkin(2) * t115 - pkin(9) * t118) * t111 * qJD(2);
t69 = -t112 * pkin(1) * t173 + pkin(8) * t96;
t22 = -t63 * t103 + t114 * t69 + t117 * t68 - t64 * t171;
t47 = -qJD(3) * t158 + (qJD(3) * t112 + t153) * t117;
t121 = t47 * pkin(4) - t196 * t96 - t22;
t70 = (t112 * t194 + t161) * qJD(2);
t120 = -t47 * qJ(4) - t75 * qJD(4) + t70;
t14 = t196 * t46 + t120;
t148 = -t114 * t63 + t117 * t64;
t37 = pkin(3) * t182 - t148;
t26 = t75 * pkin(4) + pkin(10) * t182 + t37;
t62 = pkin(8) * t183 + (-pkin(1) * t118 - pkin(2)) * t112;
t126 = -t75 * qJ(4) + t62;
t33 = t196 * t74 + t126;
t9 = t113 * t26 + t116 * t33;
t4 = -t9 * qJD(5) - t113 * t14 + t116 * t121;
t157 = t116 * t182;
t49 = -t74 * t113 + t157;
t1 = t47 * pkin(5) - t32 * qJ(6) + t49 * qJD(6) + t4;
t8 = -t113 * t33 + t116 * t26;
t6 = t75 * pkin(5) + t49 * qJ(6) + t8;
t7 = t48 * qJ(6) + t9;
t138 = t113 * t6 - t116 * t7;
t166 = qJD(5) * t116;
t167 = qJD(5) * t113;
t3 = -t113 * t121 - t116 * t14 - t26 * t166 + t33 * t167;
t31 = -t46 * t116 - qJD(5) * t157 + (qJD(5) * t74 + t96) * t113;
t2 = -t31 * qJ(6) + t48 * qJD(6) - t3;
t199 = -t138 * qJD(5) + t1 * t116 + t2 * t113;
t198 = 0.2e1 * t111;
t197 = 0.2e1 * qJD(4);
t193 = pkin(9) * t111;
t192 = t114 * t64 + t117 * t63;
t80 = -pkin(2) - t201;
t90 = t195 * t114;
t45 = t113 * t90 + t116 * t80;
t191 = t113 * t31;
t190 = t113 * t49;
t189 = t116 * t48;
t152 = qJD(4) * t182;
t21 = -t64 * t103 - t114 * t68 + t117 * t69 + t63 * t171;
t92 = qJ(4) * t96;
t15 = t21 - t92 + t152;
t12 = -t46 * pkin(4) - t15;
t188 = t12 * t113;
t187 = t12 * t116;
t186 = t32 * t116;
t185 = t47 * t114;
t184 = qJ(4) * t117;
t181 = t113 * t196;
t179 = t116 * t117;
t178 = t116 * t196;
t177 = qJ(6) + t196;
t172 = qJD(3) * t113;
t170 = qJD(3) * t116;
t169 = qJD(3) * t118;
t165 = qJD(5) * t117;
t164 = qJD(5) * t196;
t163 = t116 * qJD(6);
t162 = -0.2e1 * pkin(2) * qJD(3);
t160 = pkin(9) * t171;
t159 = pkin(5) * t167;
t106 = t111 ^ 2;
t156 = t106 * t173;
t155 = t113 * t165;
t154 = t116 * t165;
t151 = t114 * t103;
t150 = t114 * t170;
t149 = t113 * t166;
t147 = qJ(6) * t117 - t80;
t86 = t177 * t116;
t144 = pkin(3) * t171 - t114 * qJD(4);
t143 = pkin(3) * t96;
t142 = t115 * t156;
t141 = t113 * t150;
t102 = pkin(9) * t103;
t140 = pkin(4) * t103 + t102;
t137 = -t117 * pkin(3) - t180;
t83 = t116 * t90;
t41 = t114 * pkin(5) + t147 * t113 + t83;
t42 = -qJ(6) * t179 + t45;
t136 = -t113 * t41 + t116 * t42;
t135 = t113 * t48 - t116 * t49;
t36 = qJ(4) * t182 - t192;
t132 = -t47 * t113 - t75 * t166;
t39 = t47 * t116 - t75 * t167;
t58 = (pkin(10) * t114 - t184) * qJD(3) + t144;
t29 = -t113 * t140 - t116 * t58 - t90 * t166 + t80 * t167;
t131 = t114 * t169 + t117 * t174;
t130 = t114 * t174 - t117 * t169;
t129 = t150 + t155;
t128 = t113 * t171 - t154;
t34 = -t74 * pkin(4) - t36;
t84 = t195 * t171;
t127 = -t84 + (t114 * t196 - t184) * qJD(5);
t125 = t131 * t111;
t124 = t130 * t111;
t123 = t137 * qJD(3) + t168;
t18 = -t22 - t143;
t122 = t18 * t114 - t15 * t117 + (t114 * t36 + t117 * t37) * qJD(3);
t100 = t113 * pkin(5) + qJ(4);
t95 = pkin(5) * t166 + qJD(4);
t94 = 0.2e1 * t151;
t87 = -pkin(2) + t137;
t85 = t177 * t113;
t79 = t116 * t140;
t77 = -t113 * t103 - t114 * t166;
t76 = t116 * t103 - t114 * t167;
t73 = pkin(5) * t179 + t91;
t72 = -qJ(4) * t103 + t144;
t67 = -qJD(5) * t86 - t113 * qJD(6);
t66 = t177 * t167 - t163;
t50 = -pkin(5) * t155 + (-pkin(5) * t116 - t195) * t171;
t44 = -t113 * t80 + t83;
t40 = 0.2e1 * t75 * t47;
t38 = t75 * t103 + t185;
t35 = t74 * pkin(3) + t126;
t30 = -t45 * qJD(5) - t113 * t58 + t79;
t27 = t67 * t113 + t66 * t116 + (t113 * t86 - t116 * t85) * qJD(5);
t20 = t46 * pkin(3) + t120;
t19 = t129 * qJ(6) - t117 * t163 - t29;
t17 = -t48 * pkin(5) + t34;
t16 = pkin(5) * t103 + t79 + t147 * t166 + (-qJ(6) * t171 - qJD(5) * t90 + qJD(6) * t117 - t58) * t113;
t5 = t31 * pkin(5) + t12;
t10 = [0, 0, 0, 0.2e1 * t142, 0.2e1 * (-t115 ^ 2 + t118 ^ 2) * t106 * qJD(2), 0.2e1 * t112 * t153, -0.2e1 * t112 * t96, 0, -0.2e1 * t106 * pkin(1) * t174 - 0.2e1 * t70 * t112, -0.2e1 * pkin(1) * t156 + 0.2e1 * t69 * t112, t40, -0.2e1 * t75 * t46 - 0.2e1 * t47 * t74 (-t118 * t47 + t75 * t174) * t198 (t118 * t46 - t74 * t174) * t198, -0.2e1 * t142, 0.2e1 * t62 * t46 + 0.2e1 * t70 * t74 + 0.2e1 * (-t22 * t118 + t148 * t174) * t111, 0.2e1 * t62 * t47 + 0.2e1 * t70 * t75 + 0.2e1 * (-t21 * t118 - t192 * t174) * t111, 0.2e1 * t15 * t74 + 0.2e1 * t18 * t75 + 0.2e1 * t36 * t46 + 0.2e1 * t37 * t47, -0.2e1 * t20 * t74 - 0.2e1 * t35 * t46 + 0.2e1 * (-t118 * t18 + t37 * t174) * t111, -0.2e1 * t20 * t75 - 0.2e1 * t35 * t47 + 0.2e1 * (t118 * t15 - t36 * t174) * t111, 0.2e1 * t36 * t15 + 0.2e1 * t37 * t18 + 0.2e1 * t35 * t20, -0.2e1 * t49 * t32, 0.2e1 * t49 * t31 + 0.2e1 * t32 * t48, 0.2e1 * t32 * t75 - 0.2e1 * t49 * t47, -0.2e1 * t31 * t75 + 0.2e1 * t48 * t47, t40, -0.2e1 * t12 * t48 + 0.2e1 * t34 * t31 + 0.2e1 * t4 * t75 + 0.2e1 * t8 * t47, -0.2e1 * t12 * t49 + 0.2e1 * t3 * t75 + 0.2e1 * t34 * t32 - 0.2e1 * t9 * t47, 0.2e1 * t1 * t49 + 0.2e1 * t2 * t48 - 0.2e1 * t7 * t31 - 0.2e1 * t6 * t32, 0.2e1 * t6 * t1 + 0.2e1 * t17 * t5 + 0.2e1 * t7 * t2; 0, 0, 0, 0, 0, t153, -t96, 0, -t70, t69, t38, -t114 * t46 + t47 * t117 + (-t114 * t75 - t117 * t74) * qJD(3), t124, t125, 0, -pkin(2) * t46 - t70 * t117 - t130 * t193 + t62 * t171, -pkin(2) * t47 + t62 * t103 + t70 * t114 - t131 * t193 (t185 - t117 * t46 + (t114 * t74 + t117 * t75) * qJD(3)) * pkin(9) + t122, pkin(9) * t124 + t20 * t117 - t35 * t171 - t87 * t46 - t72 * t74, pkin(9) * t125 - t35 * t103 - t20 * t114 - t87 * t47 - t72 * t75, t122 * pkin(9) + t20 * t87 + t35 * t72, t49 * t154 + (-t117 * t32 - t49 * t171) * t113, t135 * t171 + (t191 - t186 + (-t189 - t190) * qJD(5)) * t117 (t75 * t172 + t32) * t114 + (-qJD(3) * t49 + t132) * t117 (t75 * t170 - t31) * t114 + (qJD(3) * t48 - t39) * t117, t38, t30 * t75 + t91 * t31 + t44 * t47 + t84 * t48 + (-t34 * t170 + t4) * t114 + (qJD(3) * t8 - t34 * t167 + t187) * t117, t29 * t75 + t91 * t32 - t45 * t47 + t84 * t49 + (t34 * t172 + t3) * t114 + (-qJD(3) * t9 - t34 * t166 - t188) * t117, t16 * t49 + t19 * t48 - t42 * t31 - t41 * t32 - t138 * t171 + (t1 * t113 - t116 * t2 + (t113 * t7 + t116 * t6) * qJD(5)) * t117, t1 * t41 + t6 * t16 + t17 * t50 + t7 * t19 + t2 * t42 + t5 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, -0.2e1 * t146, 0, 0, 0, t114 * t162, t117 * t162, 0, 0.2e1 * t72 * t117 - 0.2e1 * t87 * t171, -0.2e1 * t87 * t103 - 0.2e1 * t72 * t114, 0.2e1 * t87 * t72, -0.2e1 * t107 * t151 + 0.2e1 * t110 * t149, -0.2e1 * t110 * t145 - 0.4e1 * t117 * t141, 0.2e1 * t113 * t146 - 0.2e1 * t114 * t154, 0.2e1 * t114 * t155 + 0.2e1 * t116 * t146, t94, 0.2e1 * (-t91 * t170 + t30) * t114 + 0.2e1 * (qJD(3) * t44 - t84 * t116 - t91 * t167) * t117, 0.2e1 * (t91 * t172 + t29) * t114 + 0.2e1 * (-qJD(3) * t45 + t84 * t113 - t91 * t166) * t117, 0.2e1 * t136 * t171 + 0.2e1 * (t113 * t16 - t116 * t19 + (t113 * t42 + t116 * t41) * qJD(5)) * t117, 0.2e1 * t41 * t16 + 0.2e1 * t42 * t19 + 0.2e1 * t73 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t46, t96, t22, t21, -t47 * pkin(3) - qJ(4) * t46 - qJD(4) * t74, -t22 - 0.2e1 * t143, -t21 + 0.2e1 * t92 - 0.2e1 * t152, -t18 * pkin(3) - t15 * qJ(4) - t36 * qJD(4), t49 * t167 + t186, -t135 * qJD(5) - t32 * t113 - t116 * t31, t39, t132, 0, -t47 * t178 + qJ(4) * t31 - qJD(4) * t48 + t188 + (t116 * t34 + t75 * t181) * qJD(5), t47 * t181 + qJ(4) * t32 - qJD(4) * t49 + t187 + (-t113 * t34 + t75 * t178) * qJD(5), t85 * t31 + t86 * t32 + t67 * t48 + t66 * t49 - t199, -t1 * t86 + t5 * t100 + t17 * t95 - t2 * t85 + t6 * t66 + t7 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, -t171, 0, -t102, t160, t123, t102, -t160, t123 * pkin(9), t117 * t145 + t141, 0.4e1 * t117 * t149 - t176 * t171, t76, t77, 0, t127 * t113 - t200 * t116, t200 * t113 + t127 * t116 (-t85 * t171 - t117 * t67 - t16 + (-t117 * t86 - t42) * qJD(5)) * t116 + (t86 * t171 + t117 * t66 - t19 + (-t117 * t85 + t41) * qJD(5)) * t113, t50 * t100 - t16 * t86 - t19 * t85 + t41 * t66 + t42 * t67 + t73 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, qJ(4) * t197, -0.2e1 * t149, 0.2e1 * t145, 0, 0, 0, 0.2e1 * qJ(4) * t166 + 0.2e1 * qJD(4) * t113, -0.2e1 * qJ(4) * t167 + 0.2e1 * qJD(4) * t116, -0.2e1 * t27, 0.2e1 * t100 * t95 - 0.2e1 * t86 * t66 - 0.2e1 * t85 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t96, 0, t18, 0, 0, 0, 0, 0, t39, t132, -t191 - t186 + (t189 - t190) * qJD(5), t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, 0, t102, 0, 0, 0, 0, 0, t76, t77, 0, t136 * qJD(5) + t19 * t113 + t16 * t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, -t31, t47, t4, t3, -pkin(5) * t32, t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, t129, t103, t30, t29, -t128 * pkin(5), t16 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, -t166, 0, t113 * t164, t116 * t164, t159, t66 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, -t166, 0, -t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
