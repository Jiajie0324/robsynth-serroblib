% Calculate vector of inverse dynamics joint torques for
% S6RRRPRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPRP11_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP11_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:41:36
% EndTime: 2019-03-09 17:48:16
% DurationCPUTime: 379.99s
% Computational Cost: add. (88307->2220), mult. (236502->2826), div. (0->0), fcn. (267973->10), ass. (0->847)
t1587 = Icges(6,4) + Icges(7,4);
t1589 = Icges(4,1) + Icges(5,2);
t1597 = Icges(6,1) + Icges(7,1);
t1622 = Icges(4,4) + Icges(5,6);
t1588 = Icges(5,4) - Icges(4,5);
t1586 = Icges(5,5) - Icges(4,6);
t1547 = Icges(6,5) + Icges(7,5);
t1585 = Icges(4,2) + Icges(5,3);
t1546 = Icges(6,2) + Icges(7,2);
t1545 = Icges(6,6) + Icges(7,6);
t1596 = Icges(6,3) + Icges(7,3);
t1317 = cos(pkin(6));
t1343 = cos(qJ(1));
t1085 = t1317 * t1343;
t947 = sin(qJ(2));
t948 = sin(qJ(1));
t950 = cos(qJ(2));
t1004 = -t1085 * t947 - t948 * t950;
t1342 = cos(qJ(3));
t943 = sin(pkin(6));
t1147 = t943 * t1343;
t946 = sin(qJ(3));
t918 = t946 * t1147;
t767 = -t1004 * t1342 - t918;
t1484 = Icges(7,5) * t767;
t1055 = t950 * t1085;
t1252 = t947 * t948;
t1003 = t1055 - t1252;
t1146 = t943 * t1342;
t1064 = t1343 * t1146;
t766 = -t1004 * t946 + t1064;
t945 = sin(qJ(5));
t949 = cos(qJ(5));
t581 = t1003 * t945 + t766 * t949;
t558 = Icges(7,4) * t581;
t1479 = t766 * t945;
t584 = t1003 * t949 - t1479;
t247 = -Icges(7,1) * t584 + t1484 + t558;
t1485 = Icges(6,5) * t767;
t560 = Icges(6,4) * t581;
t250 = -Icges(6,1) * t584 + t1485 + t560;
t1539 = t247 + t250;
t1306 = Icges(7,4) * t584;
t1482 = Icges(7,6) * t767;
t241 = Icges(7,2) * t581 - t1306 + t1482;
t1309 = Icges(6,4) * t584;
t1483 = Icges(6,6) * t767;
t244 = Icges(6,2) * t581 - t1309 + t1483;
t1541 = t241 + t244;
t1480 = Icges(7,3) * t767;
t235 = -Icges(7,5) * t584 + Icges(7,6) * t581 + t1480;
t1481 = Icges(6,3) * t767;
t238 = -Icges(6,5) * t584 + Icges(6,6) * t581 + t1481;
t1543 = t235 + t238;
t1623 = t1539 * t584 - t1541 * t581 - t1543 * t767;
t1256 = t943 * t950;
t1163 = t945 * t1256;
t1084 = t1317 * t1342;
t1258 = t943 * t947;
t873 = t1258 * t946 - t1084;
t1267 = t873 * t949;
t758 = t1163 + t1267;
t1626 = t1587 * t758;
t1251 = t949 * t950;
t1268 = t873 * t945;
t759 = t1251 * t943 - t1268;
t874 = t1146 * t947 + t1317 * t946;
t1529 = t1547 * t874 - t1597 * t759 + t1626;
t1625 = t1587 * t759;
t1530 = t1545 * t874 + t1546 * t758 - t1625;
t1531 = t1545 * t758 - t1547 * t759 + t1596 * t874;
t1624 = t1529 * t584 - t1530 * t581 - t1531 * t767;
t1132 = qJD(2) * t1343;
t924 = t943 * t1132;
t775 = qJD(3) * t1003 + t924;
t541 = -qJD(5) * t767 + t775;
t932 = qJD(2) * t1317 + qJD(1);
t885 = -qJD(3) * t1256 + t932;
t692 = qJD(5) * t874 + t885;
t1627 = -t1623 * t541 + t1624 * t692;
t1187 = qJD(2) * t947;
t1137 = t943 * t1187;
t1253 = t946 * t950;
t1162 = t943 * t1253;
t756 = qJD(2) * t1162 + qJD(3) * t874;
t441 = qJD(5) * t759 - t1137 * t945 + t756 * t949;
t989 = qJD(5) * t758 + t756 * t945;
t442 = t1137 * t949 + t989;
t1097 = t950 * t1146;
t1182 = qJD(3) * t947;
t1136 = t943 * t1182;
t757 = qJD(2) * t1097 + qJD(3) * t1084 - t1136 * t946;
t1609 = t1545 * t441 + t1547 * t442 + t1596 * t757;
t1608 = t1545 * t757 + t1546 * t441 + t1587 * t442;
t1607 = t1547 * t757 + t1587 * t441 + t1597 * t442;
t1606 = t1137 * t1586 + t1585 * t756 - t1622 * t757;
t1605 = -t1588 * t1137 + t1589 * t757 - t1622 * t756;
t1604 = t1588 * t757 - t1586 * t756 + (-Icges(5,1) - Icges(4,3)) * t1137;
t1298 = Icges(5,6) * t874;
t595 = -Icges(5,5) * t1256 + Icges(5,3) * t873 - t1298;
t1311 = Icges(4,4) * t874;
t599 = -Icges(4,2) * t873 - Icges(4,6) * t1256 + t1311;
t1603 = t595 - t599;
t835 = Icges(5,6) * t873;
t596 = -Icges(5,4) * t1256 - Icges(5,2) * t874 + t835;
t836 = Icges(4,4) * t873;
t600 = Icges(4,1) * t874 - Icges(4,5) * t1256 - t836;
t1577 = t596 - t600;
t597 = -Icges(5,1) * t1256 - Icges(5,4) * t874 + Icges(5,5) * t873;
t598 = Icges(4,5) * t874 - Icges(4,6) * t873 - Icges(4,3) * t1256;
t1519 = t597 + t598;
t1119 = t948 * t1317;
t1005 = -t1119 * t950 - t1343 * t947;
t1096 = t948 * t1146;
t881 = -t1119 * t947 + t1343 * t950;
t770 = t881 * t946 - t1096;
t585 = t1005 * t945 + t770 * t949;
t559 = Icges(7,4) * t585;
t1274 = t770 * t945;
t586 = -t1005 * t949 + t1274;
t1257 = t943 * t948;
t771 = t1257 * t946 + t1342 * t881;
t249 = Icges(7,1) * t586 + Icges(7,5) * t771 + t559;
t561 = Icges(6,4) * t585;
t252 = Icges(6,1) * t586 + Icges(6,5) * t771 + t561;
t1538 = t249 + t252;
t1305 = Icges(7,4) * t586;
t243 = Icges(7,2) * t585 + Icges(7,6) * t771 + t1305;
t1308 = Icges(6,4) * t586;
t246 = Icges(6,2) * t585 + Icges(6,6) * t771 + t1308;
t1540 = t243 + t246;
t237 = Icges(7,5) * t586 + Icges(7,6) * t585 + Icges(7,3) * t771;
t240 = Icges(6,5) * t586 + Icges(6,6) * t585 + Icges(6,3) * t771;
t1542 = t237 + t240;
t1424 = -t1538 * t584 + t1540 * t581 + t1542 * t767;
t669 = qJD(1) * t1004 + qJD(2) * t1005;
t391 = -qJD(1) * t1064 + qJD(3) * t771 + t669 * t946;
t668 = -qJD(1) * t1055 - t1132 * t950 + t1252 * t932;
t215 = -qJD(5) * t586 + t391 * t949 + t668 * t945;
t1289 = t391 * t945;
t216 = qJD(5) * t585 - t668 * t949 + t1289;
t1131 = qJD(3) * t1342;
t1133 = qJD(1) * t1343;
t1183 = qJD(3) * t946;
t392 = t669 * t1342 - t881 * t1183 + (t1131 * t948 + t1133 * t946) * t943;
t102 = Icges(7,5) * t216 + Icges(7,6) * t215 + Icges(7,3) * t392;
t104 = Icges(6,5) * t216 + Icges(6,6) * t215 + Icges(6,3) * t392;
t1621 = -t102 - t104;
t671 = qJD(1) * t881 + qJD(2) * t1003;
t393 = -qJD(1) * t1096 - qJD(3) * t918 - t1004 * t1131 + t671 * t946;
t670 = -qJD(1) * t1005 - qJD(2) * t1004;
t217 = qJD(5) * t584 + t393 * t949 - t670 * t945;
t993 = qJD(5) * t581 + t393 * t945;
t218 = t670 * t949 + t993;
t1189 = qJD(1) * t948;
t1139 = t943 * t1189;
t394 = -qJD(3) * t1064 + t1004 * t1183 + t1139 * t946 + t1342 * t671;
t103 = Icges(7,5) * t218 + Icges(7,6) * t217 + Icges(7,3) * t394;
t105 = Icges(6,5) * t218 + Icges(6,6) * t217 + Icges(6,3) * t394;
t1620 = -t103 - t105;
t106 = Icges(7,4) * t216 + Icges(7,2) * t215 + Icges(7,6) * t392;
t108 = Icges(6,4) * t216 + Icges(6,2) * t215 + Icges(6,6) * t392;
t1619 = -t106 - t108;
t107 = Icges(7,4) * t218 + Icges(7,2) * t217 + Icges(7,6) * t394;
t109 = Icges(6,4) * t218 + Icges(6,2) * t217 + Icges(6,6) * t394;
t1618 = -t107 - t109;
t110 = Icges(7,1) * t216 + Icges(7,4) * t215 + Icges(7,5) * t392;
t112 = Icges(6,1) * t216 + Icges(6,4) * t215 + Icges(6,5) * t392;
t1617 = t110 + t112;
t111 = Icges(7,1) * t218 + Icges(7,4) * t217 + Icges(7,5) * t394;
t113 = Icges(6,1) * t218 + Icges(6,4) * t217 + Icges(6,5) * t394;
t1616 = t111 + t113;
t164 = -Icges(5,5) * t668 - Icges(5,6) * t392 + Icges(5,3) * t391;
t170 = Icges(4,4) * t392 - Icges(4,2) * t391 - Icges(4,6) * t668;
t1615 = -t164 + t170;
t165 = Icges(5,5) * t670 - Icges(5,6) * t394 + Icges(5,3) * t393;
t171 = Icges(4,4) * t394 - Icges(4,2) * t393 + Icges(4,6) * t670;
t1614 = -t165 + t171;
t166 = Icges(4,5) * t392 - Icges(4,6) * t391 - Icges(4,3) * t668;
t172 = -Icges(5,1) * t668 - Icges(5,4) * t392 + Icges(5,5) * t391;
t1613 = t166 + t172;
t167 = Icges(4,5) * t394 - Icges(4,6) * t393 + Icges(4,3) * t670;
t173 = Icges(5,1) * t670 - Icges(5,4) * t394 + Icges(5,5) * t393;
t1612 = t167 + t173;
t168 = -Icges(5,4) * t668 - Icges(5,2) * t392 + Icges(5,6) * t391;
t174 = Icges(4,1) * t392 - Icges(4,4) * t391 - Icges(4,5) * t668;
t1611 = t168 - t174;
t169 = Icges(5,4) * t670 - Icges(5,2) * t394 + Icges(5,6) * t393;
t175 = Icges(4,1) * t394 - Icges(4,4) * t393 + Icges(4,5) * t670;
t1610 = t169 - t175;
t1300 = Icges(5,6) * t767;
t405 = -Icges(5,5) * t1003 + Icges(5,3) * t766 - t1300;
t1313 = Icges(4,4) * t767;
t414 = -Icges(4,2) * t766 - Icges(4,6) * t1003 + t1313;
t1458 = -t405 + t414;
t1299 = Icges(5,6) * t771;
t407 = -Icges(5,5) * t1005 + Icges(5,3) * t770 - t1299;
t1312 = Icges(4,4) * t771;
t416 = -Icges(4,2) * t770 - Icges(4,6) * t1005 + t1312;
t1581 = -t407 + t416;
t408 = Icges(4,5) * t767 - Icges(4,6) * t766 - Icges(4,3) * t1003;
t418 = Icges(5,1) * t1003 + Icges(5,4) * t767 - Icges(5,5) * t766;
t1580 = t408 - t418;
t410 = Icges(4,5) * t771 - Icges(4,6) * t770 - Icges(4,3) * t1005;
t419 = -Icges(5,1) * t1005 - Icges(5,4) * t771 + Icges(5,5) * t770;
t1527 = t410 + t419;
t727 = Icges(5,6) * t766;
t411 = -Icges(5,4) * t1003 - Icges(5,2) * t767 + t727;
t729 = Icges(4,4) * t766;
t420 = Icges(4,1) * t767 - Icges(4,5) * t1003 - t729;
t1456 = t411 - t420;
t728 = Icges(5,6) * t770;
t413 = -Icges(5,4) * t1005 - Icges(5,2) * t771 + t728;
t730 = Icges(4,4) * t770;
t422 = Icges(4,1) * t771 - Icges(4,5) * t1005 - t730;
t1579 = t413 - t422;
t1079 = t584 * rSges(6,1) - rSges(6,2) * t581;
t254 = rSges(6,3) * t767 - t1079;
t403 = -rSges(6,1) * t759 + rSges(6,2) * t758 + rSges(6,3) * t874;
t1602 = -t692 * t254 - t541 * t403;
t1492 = t1529 * t442 + t1530 * t441 + t1531 * t757 - t1607 * t759 + t1608 * t758 + t1609 * t874;
t1544 = (t1187 * t1519 + t1604 * t950) * t943 + t1605 * t874 + t1606 * t873 - t1577 * t757 + t1603 * t756;
t1416 = t1529 * t586 + t1530 * t585 + t1531 * t771;
t1415 = -t1529 * t759 + t1530 * t758 + t1531 * t874;
t161 = -t1005 * t597 + t595 * t770 - t596 * t771;
t163 = -t1005 * t598 - t599 * t770 + t600 * t771;
t1470 = t161 + t163;
t1469 = -t1256 * t1519 - t1577 * t874 + t1603 * t873;
t1437 = t584 * rSges(7,1) - rSges(7,2) * t581 - pkin(5) * t1479;
t944 = -qJ(6) - pkin(10);
t1551 = rSges(7,3) - t944;
t1601 = -t1551 * t767 + t1437;
t1423 = t1539 * t586 + t1541 * t585 + t1543 * t771;
t1600 = t1416 * t692 - t1423 * t541;
t137 = t1005 * t418 + t770 * t405 - t771 * t411;
t141 = -t1005 * t408 - t770 * t414 + t771 * t420;
t1474 = t141 + t137;
t1599 = t1470 * t885 - t1474 * t775;
t1503 = -t1539 * t216 - t1541 * t215 - t1543 * t392 - t1616 * t586 + t1618 * t585 + t1620 * t771;
t1502 = -t1538 * t216 - t1540 * t215 - t1542 * t392 - t1617 * t586 + t1619 * t585 + t1621 * t771;
t1501 = -t1539 * t218 - t1541 * t217 - t1543 * t394 + t1616 * t584 + t1618 * t581 + t1620 * t767;
t1500 = -t1538 * t218 - t1540 * t217 - t1542 * t394 + t1617 * t584 + t1619 * t581 + t1621 * t767;
t1494 = t1529 * t216 + t1530 * t215 + t1531 * t392 + t1607 * t586 + t1608 * t585 + t1609 * t771;
t1493 = t1529 * t218 + t1530 * t217 + t1531 * t394 - t1607 * t584 + t1608 * t581 + t1609 * t767;
t1559 = t1005 * t1612 + t1456 * t392 + t1458 * t391 + t1580 * t668 + t1610 * t771 + t1614 * t770;
t1558 = t1005 * t1613 + t1527 * t668 + t1579 * t392 + t1581 * t391 + t1611 * t771 + t1615 * t770;
t1557 = t1003 * t1612 + t1456 * t394 + t1458 * t393 - t1580 * t670 + t1610 * t767 + t1614 * t766;
t1556 = t1003 * t1613 - t1527 * t670 + t1579 * t394 + t1581 * t393 + t1611 * t767 + t1615 * t766;
t1489 = t1005 * t1604 - t1519 * t668 - t1577 * t392 + t1603 * t391 + t1605 * t771 + t1606 * t770;
t1488 = t1003 * t1604 + t1519 * t670 - t1577 * t394 + t1603 * t393 + t1605 * t767 + t1606 * t766;
t1422 = t1538 * t586 + t1540 * t585 + t1542 * t771;
t92 = t235 * t874 + t241 * t758 - t247 * t759;
t94 = t238 * t874 + t244 * t758 - t250 * t759;
t1421 = t92 + t94;
t93 = t237 * t874 + t243 * t758 - t249 * t759;
t95 = t240 * t874 + t246 * t758 - t252 * t759;
t1420 = t93 + t95;
t138 = -t1005 * t419 + t770 * t407 - t771 * t413;
t142 = -t1005 * t410 - t770 * t416 + t771 * t422;
t1477 = t138 + t142;
t1286 = t418 * t1003;
t135 = t405 * t766 - t411 * t767 + t1286;
t1287 = t408 * t1003;
t139 = -t414 * t766 + t420 * t767 - t1287;
t1476 = t139 + t135;
t350 = t1003 * t419;
t136 = t766 * t407 - t767 * t413 - t350;
t349 = t1003 * t410;
t140 = -t766 * t416 + t767 * t422 - t349;
t1475 = t140 + t136;
t145 = t1256 * t418 + t405 * t873 - t411 * t874;
t147 = -t1256 * t408 - t414 * t873 + t420 * t874;
t1473 = t147 + t145;
t146 = -t1256 * t419 + t407 * t873 - t413 * t874;
t148 = -t1256 * t410 - t416 * t873 + t422 * t874;
t1472 = t148 + t146;
t1285 = t597 * t1003;
t160 = t595 * t766 - t596 * t767 - t1285;
t1284 = t598 * t1003;
t162 = -t599 * t766 + t600 * t767 - t1284;
t1471 = t160 + t162;
t1595 = t1342 * t1622 - t1585 * t946;
t1594 = t1342 * t1589 - t1622 * t946;
t688 = t881 * pkin(2) - pkin(9) * t1005;
t883 = (pkin(2) * t947 - pkin(9) * t950) * t943;
t942 = t1343 * pkin(1);
t1191 = pkin(8) * t1257 + t942;
t889 = qJD(1) * t1191;
t1188 = qJD(2) * t943;
t923 = t948 * t1188;
t1150 = -t932 * t688 + t883 * t923 - t889;
t1450 = qJD(4) * t766;
t502 = t771 * pkin(3) + qJ(4) * t770;
t675 = pkin(3) * t874 + qJ(4) * t873;
t774 = -qJD(3) * t1005 + t923;
t1593 = t885 * t502 - t774 * t675 - t1150 + t1450;
t939 = pkin(5) * t949 + pkin(4);
t1337 = pkin(4) - t939;
t1548 = -pkin(10) + t1551;
t1219 = -rSges(7,1) * t759 + rSges(7,2) * t758 + pkin(5) * t1268 + t1256 * t1337 + t1548 * t874;
t720 = qJD(6) * t771;
t1592 = -t1219 * t541 + t720;
t1591 = rSges(7,1) + pkin(5);
t540 = qJD(5) * t771 + t774;
t1496 = t1422 * t540 + t1600;
t1590 = -t1496 / 0.2e1;
t686 = pkin(2) * t1004 + pkin(9) * t1003;
t893 = pkin(1) * t948 - pkin(8) * t1147;
t888 = qJD(1) * t893;
t1510 = t932 * t686 - t883 * t924 - t888;
t724 = qJD(4) * t770;
t1576 = t1510 + t724;
t1517 = t686 - t893;
t428 = rSges(4,1) * t767 - rSges(4,2) * t766 - t1003 * rSges(4,3);
t1575 = t1517 - t428;
t1574 = t1545 * t949 + t1547 * t945;
t1573 = t1546 * t949 + t1587 * t945;
t1572 = t1587 * t949 + t1597 * t945;
t925 = qJDD(2) * t1317 + qJDD(1);
t778 = qJD(2) * t1136 - qJDD(3) * t1256 + t925;
t1571 = t1469 * t778 + t1544 * t885;
t443 = qJD(5) * t757 + qJDD(5) * t874 + t778;
t1570 = t1415 * t443 + t1492 * t692;
t591 = -pkin(4) * t1005 + pkin(10) * t771;
t777 = -pkin(4) * t1256 + pkin(10) * t874;
t1569 = t885 * t591 - t774 * t777 + t1593;
t1490 = t1477 * t774 + t1599;
t1568 = t1490 + t1496;
t1491 = t1471 * t885 + t1475 * t774 - t1476 * t775;
t1497 = t1424 * t540 - t1627;
t1567 = t1491 + t1497;
t838 = qJD(1) * t924 + qJDD(2) * t1257;
t444 = -qJD(3) * t668 - qJDD(3) * t1005 + t838;
t1293 = t148 * t444;
t839 = qJD(1) * t923 - qJDD(2) * t1147;
t445 = qJD(3) * t670 - qJDD(3) * t1003 + t839;
t1294 = t147 * t445;
t1295 = t146 * t444;
t1296 = t145 * t445;
t63 = -t170 * t873 + t174 * t874 - t416 * t756 + t422 * t757 + (t1187 * t410 - t166 * t950) * t943;
t1327 = t63 * t774;
t62 = -t171 * t873 + t175 * t874 - t414 * t756 + t420 * t757 + (t1187 * t408 - t167 * t950) * t943;
t1328 = t62 * t775;
t61 = t164 * t873 - t168 * t874 + t407 * t756 - t413 * t757 + (t1187 * t419 - t172 * t950) * t943;
t1329 = t61 * t774;
t60 = t165 * t873 - t169 * t874 + t405 * t756 - t411 * t757 + (-t1187 * t418 - t173 * t950) * t943;
t1330 = t60 * t775;
t200 = qJD(5) * t392 + qJDD(5) * t771 + t444;
t1322 = t95 * t200;
t201 = qJD(5) * t394 + qJDD(5) * t767 + t445;
t1323 = t94 * t201;
t1324 = t93 * t200;
t1325 = t92 * t201;
t30 = t104 * t874 + t108 * t758 - t112 * t759 + t240 * t757 + t246 * t441 + t252 * t442;
t1331 = t30 * t540;
t29 = t105 * t874 + t109 * t758 - t113 * t759 + t238 * t757 + t244 * t441 + t250 * t442;
t1332 = t29 * t541;
t28 = t102 * t874 + t106 * t758 - t110 * t759 + t237 * t757 + t243 * t441 + t249 * t442;
t1333 = t28 * t540;
t27 = t103 * t874 + t107 * t758 - t111 * t759 + t235 * t757 + t241 * t441 + t247 * t442;
t1334 = t27 * t541;
t1505 = t1322 + t1323 + t1331 - t1332 + t1324 + t1325 + t1333 - t1334 + t1570;
t1566 = t1505 + t1295 + t1296 + t1329 - t1330 + t1293 + t1294 + t1327 - t1328 + t1571;
t1506 = t1424 * t200 + t1493 * t692 - t1500 * t540 + t1501 * t541 - t1623 * t201 - t1624 * t443;
t1565 = t1471 * t778 + t1475 * t444 + t1476 * t445 + t1488 * t885 - t1556 * t774 + t1557 * t775 + t1506;
t1507 = t1416 * t443 + t1422 * t200 + t1423 * t201 + t1494 * t692 - t1502 * t540 + t1503 * t541;
t1564 = t1470 * t778 + t1474 * t445 + t1477 * t444 + t1489 * t885 - t1558 * t774 + t1559 * t775 + t1507;
t605 = -Icges(3,5) * t1004 + Icges(3,6) * t1003 - Icges(3,3) * t1147;
t849 = Icges(3,4) * t1004;
t609 = -Icges(3,2) * t1003 + Icges(3,6) * t1147 + t849;
t848 = Icges(3,4) * t1003;
t611 = -Icges(3,1) * t1004 - Icges(3,5) * t1147 + t848;
t233 = t1317 * t605 - (t609 * t950 - t611 * t947) * t943;
t604 = rSges(4,1) * t874 - rSges(4,2) * t873 - rSges(4,3) * t1256;
t149 = -t885 * t428 - t775 * t604 + t1510;
t1563 = t1456 * t767 + t1458 * t766;
t1406 = (-t1597 * t581 - t1306 - t1309 + t1541) * t541 - (-t1597 * t585 + t1305 + t1308 + t1540) * t540 - (-t1597 * t758 + t1530 - t1625) * t692;
t1355 = -t775 / 0.2e1;
t1499 = -t29 - t27;
t1498 = -t30 - t28;
t1495 = t1415 * t692 + t1420 * t540 - t1421 * t541;
t1555 = -t62 - t60;
t1554 = -t63 - t61;
t1553 = t1469 * t885 + t1472 * t774 - t1473 * t775;
t607 = Icges(3,5) * t881 + Icges(3,6) * t1005 + Icges(3,3) * t1257;
t1315 = Icges(3,4) * t881;
t610 = Icges(3,2) * t1005 + Icges(3,6) * t1257 + t1315;
t850 = Icges(3,4) * t1005;
t613 = Icges(3,1) * t881 + Icges(3,5) * t1257 + t850;
t225 = t1005 * t610 + t607 * t1257 + t881 * t613;
t1550 = t225 * t948;
t1149 = t1003 * t1342;
t1254 = t946 * t949;
t641 = t1003 * t1254 + t1004 * t945;
t1255 = t945 * t946;
t1165 = t1003 * t1255;
t642 = -t1004 * t949 + t1165;
t1537 = t1149 * t1596 + t1545 * t641 + t1547 * t642;
t1148 = t1005 * t1342;
t643 = t1005 * t1254 - t881 * t945;
t1164 = t1005 * t1255;
t644 = t881 * t949 + t1164;
t1536 = t1148 * t1596 + t1545 * t643 + t1547 * t644;
t1535 = t1149 * t1545 + t1546 * t641 + t1587 * t642;
t1534 = t1148 * t1545 + t1546 * t643 + t1587 * t644;
t1533 = t1149 * t1547 + t1587 * t641 + t1597 * t642;
t1532 = t1148 * t1547 + t1587 * t643 + t1597 * t644;
t1526 = t1003 * t1595 + t1004 * t1586;
t1525 = -t1005 * t1595 + t1586 * t881;
t1524 = -t1003 * t1594 - t1004 * t1588;
t1523 = t1005 * t1594 - t1588 * t881;
t791 = (t1251 * t946 - t945 * t947) * t943;
t792 = (t1253 * t945 + t947 * t949) * t943;
t1522 = t1097 * t1596 + t1545 * t791 + t1547 * t792;
t1521 = t1097 * t1545 + t1546 * t791 + t1587 * t792;
t1520 = t1097 * t1547 + t1587 * t791 + t1597 * t792;
t627 = -rSges(3,1) * t1004 + rSges(3,2) * t1003 - rSges(3,3) * t1147;
t1518 = -t627 - t893;
t1516 = (t1586 * t947 - t1595 * t950) * t943;
t1515 = (-t1588 * t947 + t1594 * t950) * t943;
t752 = t767 * pkin(10);
t590 = t1003 * pkin(4) - t752;
t258 = t586 * rSges(6,1) + t585 * rSges(6,2) + t771 * rSges(6,3);
t74 = t258 * t692 - t403 * t540 + t1569;
t427 = -rSges(5,1) * t1005 - t771 * rSges(5,2) + t770 * rSges(5,3);
t603 = -rSges(5,1) * t1256 - rSges(5,2) * t874 + rSges(5,3) * t873;
t121 = t427 * t885 - t603 * t774 + t1593;
t726 = t766 * qJ(4);
t497 = pkin(3) * t767 + t726;
t1067 = -t1003 * t609 - t1004 * t611;
t222 = -t1147 * t605 + t1067;
t1081 = t1003 * rSges(5,1) - rSges(5,3) * t766;
t426 = rSges(5,2) * t767 + t1081;
t1179 = qJD(6) * t767;
t1445 = t586 * rSges(7,1) + t585 * rSges(7,2) + pkin(5) * t1274 - t1005 * t939 + t1551 * t771;
t1236 = -t591 + t1445;
t1511 = t1219 * t540 - t1236 * t692 - t1179 - t1569;
t805 = t1317 * rSges(3,3) + (rSges(3,1) * t947 + rSges(3,2) * t950) * t943;
t355 = -t932 * t627 - t805 * t924 - t888;
t1508 = t1005 * t609 - t881 * t611;
t1444 = t585 * pkin(5);
t1478 = t216 * rSges(7,1) + t215 * rSges(7,2) + pkin(5) * t1289 + qJD(5) * t1444 + t1551 * t392 - t668 * t939 + t720;
t1467 = -t1545 * t581 + t1547 * t584 - t1480 - t1481;
t1465 = -t1546 * t581 + t1587 * t584 - t1482 - t1483;
t1464 = -t1587 * t581 + t1597 * t584 - t1484 - t1485;
t1463 = -t1545 * t766 + t1573 * t767;
t1462 = -t1545 * t770 + t1573 * t771;
t1461 = -t1547 * t766 + t1572 * t767;
t1460 = -t1547 * t770 + t1572 * t771;
t1455 = -t1545 * t873 + t1573 * t874;
t1454 = -t1547 * t873 + t1572 * t874;
t1453 = (t1529 * t945 + t1530 * t949 + t1574 * t874 - t1596 * t873) * t692 - (t1539 * t945 + t1541 * t949 + t1574 * t767 - t1596 * t766) * t541 + (t1538 * t945 + t1540 * t949 + t1574 * t771 - t1596 * t770) * t540;
t1452 = (t1585 * t874 + t1577 + t835 + t836) * t885 + (-t1585 * t767 - t1456 - t727 - t729) * t775 + (t1585 * t771 + t1579 + t728 + t730) * t774;
t1451 = (-t1589 * t873 - t1298 - t1311 + t1603) * t885 + (t1589 * t766 + t1300 + t1313 + t1458) * t775 + (-t1589 * t770 - t1299 - t1312 - t1581) * t774;
t115 = t216 * rSges(6,1) + t215 * rSges(6,2) + t392 * rSges(6,3);
t186 = t392 * pkin(3) + qJ(4) * t391 + t724;
t273 = -t668 * pkin(4) + pkin(10) * t392;
t1245 = -t186 - t273;
t1446 = -t115 + t1245;
t1265 = t874 * t949;
t1266 = t874 * t945;
t1443 = rSges(7,2) * t1265 + t1266 * t1591 - t1551 * t873;
t1271 = t771 * t949;
t1272 = t771 * t945;
t1442 = rSges(7,2) * t1271 + t1272 * t1591 - t1551 * t770;
t1278 = t767 * t949;
t1279 = t767 * t945;
t1441 = rSges(7,2) * t1278 + t1279 * t1591 - t1551 * t766;
t1209 = -t502 - t591;
t1440 = -t258 + t1209;
t1199 = t675 + t777;
t1439 = t403 + t1199;
t1438 = (-t1586 * t874 - t1588 * t873) * t885 + (t1586 * t767 + t1588 * t766) * t775 + (-t1586 * t771 - t1588 * t770) * t774;
t1436 = t766 * t885 + t775 * t873;
t1435 = -t770 * t885 + t774 * t873;
t1434 = -t766 * t774 - t770 * t775;
t1433 = -t218 * rSges(7,1) - t217 * rSges(7,2) - pkin(5) * t993 - t1179;
t1237 = -t1003 * t1337 + t1601 + t752;
t1178 = qJD(6) * t874;
t1203 = -t686 * t923 + t688 * t924;
t830 = qJD(4) * t873;
t1102 = t774 * t497 + t1203 + t830;
t996 = -t1209 * t775 - t590 * t774 + t1102;
t44 = t1236 * t541 - t1237 * t540 + t1178 + t996;
t1419 = t1237 * t44;
t1211 = -t497 + t590;
t971 = -t675 * t775 + t1576;
t962 = t1211 * t885 - t775 * t777 + t971;
t58 = t1237 * t692 + t1592 + t962;
t1120 = t58 * t1219;
t1418 = t1511 * t1236;
t1250 = -t273 + t1478;
t388 = t394 * pkin(10);
t1249 = -t1337 * t670 + t1551 * t394 - t1433 - t388;
t1244 = rSges(7,1) * t442 + rSges(7,2) * t441 + pkin(5) * t989 - t1137 * t1337 + t1548 * t757 + t1178;
t1341 = pkin(10) * t766;
t1414 = t1341 + t1441;
t1340 = pkin(10) * t770;
t1413 = t1340 + t1442;
t1222 = t426 - t497;
t1221 = -t427 - t502;
t1208 = t1003 * t610 - t1004 * t613;
t1339 = pkin(10) * t873;
t1412 = t1339 + t1443;
t1205 = t603 + t675;
t680 = Icges(3,1) * t1003 + t849;
t1411 = t609 + t680;
t681 = Icges(3,1) * t1005 - t1315;
t1410 = -t610 + t681;
t678 = Icges(3,2) * t1004 + t848;
t1409 = t611 + t678;
t679 = -Icges(3,2) * t881 + t850;
t1408 = -t613 - t679;
t1407 = (t1546 * t759 + t1529 + t1626) * t692 - (t1546 * t584 + t1539 + t558 + t560) * t541 + (-t1546 * t586 + t1538 + t559 + t561) * t540;
t908 = pkin(5) * t1163;
t1405 = t792 * rSges(7,1) + t791 * rSges(7,2) + t1097 * t1551 + t939 * t1258 + t946 * t908;
t1145 = t944 * t1342;
t1404 = t644 * rSges(7,1) + t643 * rSges(7,2) + rSges(7,3) * t1148 + pkin(5) * t1164 - t1005 * t1145 + t881 * t939;
t1403 = -t642 * rSges(7,1) - t641 * rSges(7,2) - rSges(7,3) * t1149 - pkin(5) * t1165 + t1003 * t1145 + t1004 * t939;
t787 = t1003 * t939;
t1400 = t787 + t1601;
t1399 = (t1545 * t759 + t1547 * t758) * t692 - (t1545 * t584 + t1547 * t581) * t541 + (-t1545 * t586 + t1547 * t585) * t540;
t1180 = qJD(4) * t946;
t1185 = qJD(3) * t1004;
t796 = pkin(3) * t1097 + qJ(4) * t1162;
t1397 = t1005 * t1180 - t675 * t1185 - t775 * t796;
t1039 = Icges(4,5) * t1342 - Icges(4,6) * t946;
t1395 = (t1342 * t600 - t599 * t946 - (Icges(4,3) * t947 + t1039 * t950) * t943) * t885 + (-Icges(4,3) * t881 - t1005 * t1039 + t1342 * t422 - t416 * t946) * t774 - (Icges(4,3) * t1004 - t1003 * t1039 + t1342 * t420 - t414 * t946) * t775;
t274 = t670 * pkin(4) + t388;
t437 = t669 * pkin(2) - pkin(9) * t668;
t438 = t671 * pkin(2) + t670 * pkin(9);
t1053 = t437 * t924 + t438 * t923 - t686 * t838 - t839 * t688;
t1227 = -t393 * qJ(4) - t1450;
t187 = t394 * pkin(3) - t1227;
t995 = qJD(4) * t756 + qJDD(4) * t873 + t774 * t187 + t444 * t497 + t1053;
t960 = t1209 * t445 - t1245 * t775 + t774 * t274 - t444 * t590 + t995;
t7 = qJD(6) * t757 + qJDD(6) * t874 - t1236 * t201 - t1237 * t200 + t1249 * t540 + t1250 * t541 + t960;
t1394 = 0.2e1 * t7;
t395 = pkin(3) * t757 + qJ(4) * t756 + t830;
t647 = pkin(4) * t1137 + pkin(10) * t757;
t1225 = -t395 - t647;
t1095 = t943 * t1133;
t1086 = -pkin(1) * t1189 + pkin(8) * t1095;
t1192 = qJD(1) * t1086 + qJDD(1) * t1191;
t832 = (pkin(2) * t950 + pkin(9) * t947) * t1188;
t983 = t932 * t437 + t925 * t688 - t832 * t923 - t838 * t883 + t1192;
t965 = qJD(4) * t393 + qJDD(4) * t766 + t885 * t186 + t778 * t502 + t983;
t954 = -t1199 * t444 + t1225 * t774 + t885 * t273 + t778 * t591 + t965;
t12 = qJD(6) * t394 + qJDD(6) * t767 - t1219 * t200 + t1236 * t443 - t1244 * t540 + t1250 * t692 + t954;
t1393 = 0.2e1 * t12;
t1054 = -qJD(1) ^ 2 * t1191 - qJDD(1) * t893;
t963 = -t932 * t438 + t686 * t925 - t832 * t924 + t839 * t883 + t1054;
t958 = qJD(4) * t391 + qJDD(4) * t770 - t395 * t775 + t445 * t675 + t963;
t952 = (-t187 - t274) * t885 + t1211 * t778 + t445 * t777 + t958 - t775 * t647;
t13 = qJD(6) * t392 + qJDD(6) * t771 + t1219 * t201 + t1237 * t443 - t1244 * t541 - t1249 * t692 + t952;
t1392 = 0.2e1 * t13;
t1080 = -t218 * rSges(6,1) - t217 * rSges(6,2);
t117 = t394 * rSges(6,3) - t1080;
t16 = t115 * t541 + t117 * t540 + t200 * t254 - t201 * t258 + t960;
t1391 = 0.2e1 * t16;
t210 = rSges(6,1) * t442 + rSges(6,2) * t441 + rSges(6,3) * t757;
t17 = -t692 * t117 + t201 * t403 - t210 * t541 - t443 * t254 + t952;
t1390 = 0.2e1 * t17;
t18 = t115 * t692 - t200 * t403 - t210 * t540 + t258 * t443 + t954;
t1389 = 0.2e1 * t18;
t1388 = 0.2e1 * t44;
t1387 = 0.2e1 * t58;
t1386 = -0.2e1 * t1511;
t68 = t254 * t540 + t258 * t541 + t996;
t1385 = 0.2e1 * t68;
t73 = t1602 + t962;
t1384 = 0.2e1 * t73;
t1383 = 0.2e1 * t74;
t1382 = m(6) / 0.2e1;
t1381 = m(7) / 0.2e1;
t1380 = t200 / 0.2e1;
t1379 = t201 / 0.2e1;
t1376 = t443 / 0.2e1;
t1375 = t444 / 0.2e1;
t1374 = t445 / 0.2e1;
t1373 = -t540 / 0.2e1;
t1372 = t540 / 0.2e1;
t1370 = t541 / 0.2e1;
t1369 = -t541 / 0.2e1;
t1364 = -t692 / 0.2e1;
t1363 = t692 / 0.2e1;
t1359 = -t774 / 0.2e1;
t1358 = t774 / 0.2e1;
t1356 = t775 / 0.2e1;
t1354 = t778 / 0.2e1;
t1352 = t838 / 0.2e1;
t1351 = t839 / 0.2e1;
t1347 = -t885 / 0.2e1;
t1346 = t885 / 0.2e1;
t1345 = rSges(5,2) - pkin(3);
t1344 = -rSges(6,3) - pkin(3);
t1335 = t16 * t254;
t1326 = t68 * t117;
t1314 = Icges(3,4) * t947;
t1292 = t233 * t839;
t234 = t1317 * t607 + (t610 * t950 + t613 * t947) * t943;
t1291 = t234 * t838;
t793 = Icges(3,3) * t1317 + (Icges(3,5) * t947 + Icges(3,6) * t950) * t943;
t794 = Icges(3,6) * t1317 + (Icges(3,2) * t950 + t1314) * t943;
t926 = Icges(3,4) * t1256;
t795 = Icges(3,1) * t1258 + Icges(3,5) * t1317 + t926;
t325 = t1003 * t794 - t1004 * t795 - t1147 * t793;
t1290 = t325 * t932;
t1263 = t1003 * t946;
t1260 = t1005 * t946;
t684 = pkin(2) * t1003 - pkin(9) * t1004;
t1259 = t932 * t684;
t1248 = -t1005 * t187 - t668 * t497;
t176 = -t668 * rSges(5,1) - t392 * rSges(5,2) + t391 * rSges(5,3);
t1247 = -t176 - t186;
t404 = t1317 * t437;
t1246 = t1317 * t186 + t404;
t1239 = -t590 + t1400;
t875 = (Icges(3,5) * t950 - Icges(3,6) * t947) * t943;
t825 = qJD(2) * t875;
t826 = (Icges(3,4) * t950 - Icges(3,2) * t947) * t1188;
t877 = (Icges(3,1) * t950 - t1314) * t943;
t827 = qJD(2) * t877;
t266 = t1317 * t825 + (t826 * t950 + t827 * t947 + (-t794 * t947 + t795 * t950) * qJD(2)) * t943;
t423 = t1317 * t793 + (t794 * t950 + t795 * t947) * t943;
t1238 = t266 * t932 + t423 * t925;
t1235 = t756 + t1434;
t1234 = rSges(7,2) * t584 + t1591 * t581;
t1233 = t585 * rSges(7,1) - t586 * rSges(7,2) + t1444;
t657 = -pkin(4) * t1004 + pkin(10) * t1149;
t1232 = t657 + t1403;
t658 = t881 * pkin(4) + pkin(10) * t1148;
t1231 = -t658 + t1404;
t495 = -t766 * pkin(3) + qJ(4) * t767;
t1230 = qJD(4) * t874 + t774 * t495;
t1229 = t393 + t1435;
t1228 = t391 + t1436;
t454 = rSges(5,1) * t1137 - rSges(5,2) * t757 + rSges(5,3) * t756;
t1226 = -t395 - t454;
t432 = t1005 * t497;
t1220 = t1005 * t590 - t432;
t500 = -t770 * pkin(3) + qJ(4) * t771;
t1218 = qJD(4) * t767 + t885 * t500;
t456 = t502 * t1137;
t1217 = t591 * t1137 + t456;
t1216 = -t1003 * t675 + t497 * t1256;
t650 = t1317 * t688;
t1215 = t1317 * t502 + t650;
t673 = -t873 * pkin(3) + qJ(4) * t874;
t1214 = qJD(4) * t771 - t673 * t775;
t1213 = t758 * rSges(7,1) + t759 * rSges(7,2) + pkin(5) * t1267 + t908;
t494 = t766 * rSges(5,2) + t767 * rSges(5,3);
t1212 = -t494 - t495;
t499 = t770 * rSges(5,2) + t771 * rSges(5,3);
t1210 = -t499 - t500;
t837 = pkin(4) * t1258 + pkin(10) * t1097;
t1206 = -t837 + t1405;
t687 = pkin(2) * t1005 + t881 * pkin(9);
t1204 = t684 * t923 + t687 * t924;
t1201 = t688 * t1147 - t1257 * t686;
t672 = t873 * rSges(5,2) + t874 * rSges(5,3);
t1200 = -t672 - t673;
t1195 = -t794 + t877;
t1194 = -Icges(3,2) * t1258 + t795 + t926;
t645 = pkin(3) * t1149 + qJ(4) * t1263;
t646 = pkin(3) * t1148 + qJ(4) * t1260;
t884 = pkin(2) * t1256 + pkin(9) * t1258;
t1190 = t1343 ^ 2;
t1184 = qJD(3) * t881;
t1177 = 2 * m(3);
t1176 = 2 * m(4);
t1175 = 2 * m(5);
t1174 = 0.2e1 * m(6);
t1173 = 0.2e1 * m(7);
t1172 = 0.2e1 * t1005;
t1171 = 0.2e1 * t950;
t1170 = -pkin(3) - t1551;
t1169 = 0.2e1 * qJD(1);
t1166 = t68 * t1343;
t1160 = -t1003 * t395 + t187 * t1256 + t670 * t675;
t1159 = t1317 * t273 + t1246;
t1158 = -t210 + t1225;
t178 = t392 * rSges(4,1) - t391 * rSges(4,2) - t668 * rSges(4,3);
t1155 = -t1095 * t686 + t437 * t1147 + t438 * t1257;
t1153 = t1317 * t591 + t1215;
t224 = t605 * t1257 - t1508;
t320 = t642 * rSges(6,1) + t641 * rSges(6,2) + rSges(6,3) * t1149;
t322 = t644 * rSges(6,1) + t643 * rSges(6,2) + rSges(6,3) * t1148;
t371 = t669 * rSges(3,1) + t668 * rSges(3,2) + rSges(3,3) * t1095;
t343 = rSges(6,1) * t1279 + rSges(6,2) * t1278 - t766 * rSges(6,3);
t345 = rSges(6,1) * t1272 + rSges(6,2) * t1271 - t770 * rSges(6,3);
t430 = t771 * rSges(4,1) - t770 * rSges(4,2) - rSges(4,3) * t1005;
t544 = t792 * rSges(6,1) + t791 * rSges(6,2) + rSges(6,3) * t1097;
t516 = rSges(6,1) * t1266 + rSges(6,2) * t1265 - t873 * rSges(6,3);
t629 = t881 * rSges(3,1) + rSges(3,2) * t1005 + rSges(3,3) * t1257;
t1143 = t1343 * t607;
t223 = -t1143 * t943 + t1208;
t1144 = t1343 * t223;
t1141 = t1343 * t832;
t1140 = t1343 * t883;
t1130 = qJD(5) * t1342;
t1129 = qJD(6) * t1342;
t1128 = t7 * t1237;
t1127 = t1188 / 0.2e1;
t1121 = t44 * t1249;
t1118 = t1317 * t686;
t1116 = t1177 / 0.2e1;
t1115 = -t1176 / 0.2e1;
t1114 = t1176 / 0.2e1;
t1113 = -t1175 / 0.2e1;
t1112 = t1175 / 0.2e1;
t1111 = -t1174 / 0.2e1;
t1110 = t1174 / 0.2e1;
t1109 = -t1173 / 0.2e1;
t1108 = t1173 / 0.2e1;
t1107 = 0.2e1 * t1187;
t1106 = t1245 - t1250;
t1105 = -t1005 * t274 + t590 * t668 + t1248;
t1104 = t1225 - t1244;
t1103 = t1209 - t1236;
t1101 = t1199 + t1219;
t1100 = t502 * t1147 + t497 * t1257 + t1201;
t1099 = -t1003 * t777 - t1256 * t590 + t1216;
t1098 = t884 + t796;
t1094 = t884 * t1132;
t1093 = -t1147 / 0.2e1;
t1092 = t1147 / 0.2e1;
t1089 = -t923 / 0.2e1;
t1088 = t948 * t1127;
t1083 = -t671 * rSges(3,1) + t670 * rSges(3,2);
t1082 = -t670 * rSges(5,1) - t393 * rSges(5,3);
t1076 = t883 * t1139 - t1317 * t438;
t1075 = qJD(4) * t1162 + t497 * t1184 + t774 * t645 + t1204;
t1066 = t609 * t947 + t611 * t950;
t1065 = -t610 * t947 + t613 * t950;
t1061 = t684 + t645;
t1060 = t687 + t646;
t1059 = t688 + t1191;
t1057 = qJD(2) * t1093;
t1056 = qJD(2) * t1092;
t529 = rSges(4,1) * t1149 - rSges(4,2) * t1263 - rSges(4,3) * t1004;
t530 = rSges(4,1) * t1148 - rSges(4,2) * t1260 + t881 * rSges(4,3);
t1052 = t932 * t687 - t884 * t923;
t912 = rSges(2,1) * t1343 - t948 * rSges(2,2);
t1051 = -t948 * rSges(2,1) - rSges(2,2) * t1343;
t364 = Icges(3,5) * t669 + Icges(3,6) * t668 + Icges(3,3) * t1095;
t365 = Icges(3,5) * t671 - Icges(3,6) * t670 + Icges(3,3) * t1139;
t366 = Icges(3,4) * t669 + Icges(3,2) * t668 + Icges(3,6) * t1095;
t367 = Icges(3,4) * t671 - Icges(3,2) * t670 + Icges(3,6) * t1139;
t368 = Icges(3,1) * t669 + Icges(3,4) * t668 + Icges(3,5) * t1095;
t369 = Icges(3,1) * t671 - Icges(3,4) * t670 + Icges(3,5) * t1139;
t1050 = -t1343 * (t1005 * t367 + t881 * t369 - t668 * t609 + t669 * t611 + (t1133 * t605 + t365 * t948) * t943) + (t1005 * t366 + t881 * t368 + t668 * t610 + t669 * t613 + (t1133 * t607 + t364 * t948) * t943) * t948;
t1049 = -t1343 * (t1003 * t367 - t1004 * t369 + t670 * t609 + t671 * t611 + (t1189 * t605 - t1343 * t365) * t943) + (t1003 * t366 - t1004 * t368 - t670 * t610 + t671 * t613 + (t1189 * t607 - t1343 * t364) * t943) * t948;
t1048 = t497 * t1095 + t186 * t1147 + t187 * t1257 + t1155;
t1047 = -t1003 * t647 + t274 * t1256 + t670 * t777 + t1160;
t1046 = t591 * t1147 - t1257 * t590 + t1100;
t126 = t1317 * t365 + (qJD(2) * t1066 + t367 * t950 + t369 * t947) * t943;
t127 = t1317 * t364 + (qJD(2) * t1065 + t366 * t950 + t368 * t947) * t943;
t1045 = -t126 * t1343 + t127 * t948;
t1044 = t1343 * t225 + t224 * t948;
t372 = rSges(3,3) * t1139 - t1083;
t1043 = t1343 * t371 + t372 * t948;
t1040 = Icges(5,4) * t1342 - Icges(5,5) * t946;
t882 = (rSges(3,1) * t950 - rSges(3,2) * t947) * t943;
t772 = rSges(4,1) * t1097 - rSges(4,2) * t1162 + rSges(4,3) * t1258;
t531 = -rSges(5,1) * t1004 - rSges(5,2) * t1149 + rSges(5,3) * t1263;
t532 = t881 * rSges(5,1) - rSges(5,2) * t1148 + rSges(5,3) * t1260;
t1028 = -Icges(5,1) * t1004 - t1003 * t1040 + t1342 * t411 - t405 * t946;
t1027 = Icges(5,1) * t881 - t1005 * t1040 + t1342 * t413 - t407 * t946;
t1024 = t1342 * t596 - t595 * t946 + (Icges(5,1) * t947 - t1040 * t950) * t943;
t179 = t394 * rSges(4,1) - t393 * rSges(4,2) + t670 * rSges(4,3);
t1022 = -t1343 * t395 - t1141;
t1021 = -t1343 * t604 - t1140;
t1020 = -t1343 * t675 - t1140;
t773 = rSges(5,1) * t1258 - rSges(5,2) * t1097 + rSges(5,3) * t1162;
t1019 = t1517 - t726;
t1013 = t1086 + t437;
t1012 = t943 * (t1343 * t629 + t627 * t948);
t1011 = (-t1343 * t222 + t223 * t948) * t943;
t1010 = (-t1343 * t224 + t1550) * t943;
t1008 = -t1317 * t497 + t1118;
t1006 = -t1094 * t943 - t1259;
t1002 = t1003 * t1180 + t502 * t1136 + t885 * t646 + t1052;
t1001 = pkin(10) * t1434 + t500 * t775 + t1230;
t1000 = pkin(10) * t1435 - t673 * t774 + t1218;
t999 = pkin(10) * t1436 - t495 * t885 + t1214;
t998 = t1059 + t502;
t997 = -t1095 * t590 + t273 * t1147 + t274 * t1257 + t1048;
t994 = -t497 * t885 + t1576;
t992 = t675 * t1139 - t1317 * t187 + t1076;
t991 = t1517 - t497;
t987 = -t1343 * t647 + t1022;
t986 = -t1343 * t603 + t1020;
t985 = -t1343 * t777 + t1020;
t982 = t1317 * t590 + t1008;
t980 = -t438 - t889;
t970 = t1013 + t186;
t969 = t980 + t1227;
t968 = -t1343 * t403 + t985;
t967 = t777 * t1139 - t1317 * t274 + t992;
t966 = -t1199 * t775 + t885 * t590 + t994;
t964 = -t590 * t1184 + t774 * t657 - (-t646 - t658) * t775 - t1209 * t1185 + t1075;
t959 = t591 * t1136 + t885 * t658 + (-t796 - t837) * t774 - t1199 * t1184 + t1002;
t957 = -t775 * t837 - t777 * t1185 + (-t645 - t657) * t885 + (t1182 * t1211 - t1094) * t943 - t1259 + t1397;
t828 = qJD(2) * t882;
t824 = (t1130 * t950 + t1182) * t943;
t683 = rSges(3,1) * t1005 - rSges(3,2) * t881;
t682 = rSges(3,1) * t1003 + rSges(3,2) * t1004;
t677 = Icges(3,5) * t1005 - Icges(3,6) * t881;
t676 = Icges(3,5) * t1003 + Icges(3,6) * t1004;
t674 = -rSges(4,1) * t873 - rSges(4,2) * t874;
t649 = t1005 * t1130 + t1184;
t648 = t1003 * t1130 - t1185;
t554 = t629 + t1191;
t501 = -rSges(4,1) * t770 - rSges(4,2) * t771;
t496 = -rSges(4,1) * t766 - rSges(4,2) * t767;
t481 = rSges(6,1) * t758 + rSges(6,2) * t759;
t455 = rSges(4,1) * t757 - rSges(4,2) * t756 + rSges(4,3) * t1137;
t431 = g(1) * t770 + g(2) * t766 + g(3) * t873;
t356 = t629 * t932 - t805 * t923 + t889;
t327 = qJD(2) * t1012;
t326 = t1005 * t794 + t1257 * t793 + t795 * t881;
t305 = rSges(6,1) * t585 - rSges(6,2) * t586;
t303 = rSges(6,1) * t581 + rSges(6,2) * t584;
t277 = t326 * t932;
t271 = t1059 + t430;
t202 = t998 + t427;
t177 = -t394 * rSges(5,2) - t1082;
t154 = -t670 * t794 + t671 * t795 + t1003 * t826 - t1004 * t827 + (t1189 * t793 - t1343 * t825) * t943;
t153 = t668 * t794 + t669 * t795 + t1005 * t826 + t881 * t827 + (t1133 * t793 + t825 * t948) * t943;
t152 = t371 * t932 + t629 * t925 - t805 * t838 - t828 * t923 + t1192;
t151 = -t932 * t372 - t925 * t627 + t839 * t805 - t828 * t924 + t1054;
t150 = t430 * t885 - t604 * t774 - t1150;
t144 = t591 + t998 + t258;
t143 = t428 * t774 + t430 * t775 + t1203;
t132 = t998 + t1445;
t120 = t1222 * t885 - t603 * t775 + t971;
t99 = qJD(2) * t1010 + t277;
t98 = qJD(2) * t1011 + t1290;
t91 = -t1221 * t775 - t426 * t774 + t1102;
t72 = t178 * t885 + t430 * t778 - t444 * t604 - t455 * t774 + t983;
t71 = -t885 * t179 - t778 * t428 + t445 * t604 - t455 * t775 + t963;
t57 = t178 * t775 + t179 * t774 + t428 * t444 - t430 * t445 + t1053;
t39 = -t1205 * t444 + t1226 * t774 + t176 * t885 + t427 * t778 + t965;
t38 = (-t177 - t187) * t885 + t1222 * t778 - t775 * t454 + t958 + t445 * t603;
t31 = t1221 * t445 - t1247 * t775 + t177 * t774 - t426 * t444 + t995;
t1 = [((t1003 * t1580 + t1476 + t1477 + t1563) * t774 + t1599) * t1356 - m(7) * (g(1) * (t991 + t1400) + g(2) * t132) + (t44 * (-t1237 + t1239) * t541 + (-t1239 * t692 - t1592 + t58 - t966) * t1511) * t1109 + (t1256 * t1580 + t1456 * t874 + t1458 * t873 + t1473) * t774 * t1347 + (t38 * (t1345 * t767 + t1019 + t1081) + t120 * (t1345 * t394 + t1082 + t969) + t39 * t202 + t121 * (t970 + t176)) * t1112 + (t1490 + t1488) * t1355 + (t71 * t1575 + t149 * (-t179 + t980) + t72 * t271 + t150 * (t1013 + t178)) * t1114 + t541 * t1590 + t325 * t1351 + t326 * t1352 + (-t1205 * t775 + t885 * t426 - t120 + t994) * t121 * t1113 - t1624 * t1379 + ((-t1464 * t584 + t1465 * t581 + t1467 * t767 + t1422 - t1623) * t540 + t1600) * t1370 + (t277 + (t1144 - (t224 + t1208) * t1343 + t1190 * t607 * t943 + t1550) * t1188) * t1056 - m(5) * (g(1) * (t991 + t426) + g(2) * t202) - m(3) * (g(1) * t1518 + g(2) * t554) + (t151 * t1518 + t355 * ((-t942 + (-rSges(3,3) - pkin(8)) * t1257) * qJD(1) + t1083) + t152 * t554 + t356 * (t1086 + t371)) * t1116 - m(4) * (g(1) * t1575 + g(2) * t271) - m(6) * (g(1) * (t590 + t991 - t254) + g(2) * t144) + (t127 + t153) * t1088 + (t17 * (t1344 * t767 + t1019 + t1079 + t590) + t73 * (t1344 * t394 + t1080 - t274 + t969) + t18 * t144 + t74 * (t273 + t970 + t115)) * t1110 + (t13 * (t1170 * t767 + t1019 + t1437 + t787) + t58 * (t1170 * t394 - t670 * t939 + t1433 + t969) + t12 * t132 - t1511 * (t970 + t1478)) * t1108 + ((t1577 * t767 - t1603 * t766 + t1284 + t1285) * t885 - (-t1286 + t1287 + t1563) * t775 + (t1005 * t1580 + t1456 * t771 + t1458 * t770 + t1579 * t767 + t1581 * t766 + t1474 + t349 + t350) * t774 + t1491) * t1359 + (t126 + t154 + t99) * t1057 - t1332 / 0.2e1 + t1333 / 0.2e1 + t1327 / 0.2e1 + t1324 / 0.2e1 + (-t1464 * t759 + t1465 * t758 + t1467 * t874 + t1421) * t540 * t1364 + t1570 + t1571 + t1295 / 0.2e1 + t1331 / 0.2e1 - t1328 / 0.2e1 + t1329 / 0.2e1 - t1330 / 0.2e1 + t1325 / 0.2e1 + t1323 / 0.2e1 + t1493 * t1369 + t1494 * t1372 + t1489 * t1358 + t1293 / 0.2e1 + t1416 * t1380 + t1238 + t1322 / 0.2e1 - t1334 / 0.2e1 + t1294 / 0.2e1 + (-t1290 + ((-t1208 + t1508) * t948 - (-t1067 + t225) * t1343 + ((-t605 * t948 + t1143) * t948 - t1190 * t605) * t943 + t1044) * t1188 + t98) * t1089 + t1296 / 0.2e1 + (t1602 - t73 + t966) * t74 * t1111 + t1470 * t1375 + t1471 * t1374 + Icges(2,3) * qJDD(1) + ((t1464 * t586 + t1465 * t585 + t1467 * t771 + t1423 - t1424) * t540 + t1497 + t1627) * t1373 + t1291 / 0.2e1 + t1292 / 0.2e1 + ((qJDD(1) * t1051 - g(1)) * t1051 + (qJDD(1) * t912 - g(2)) * t912) * m(2); t932 * (t266 * t1317 + ((t1343 * t234 + t233 * t948) * qJD(1) + t1045) * t943) / 0.2e1 - t932 * (t1317 * t875 * t932 + ((t1194 * t950 + t1195 * t947) * t932 + (t677 * t1119 - t676 * t1085 + ((t679 * t950 + t681 * t947 + t1065) * t948 - (t678 * t950 + t680 * t947 + t1066) * t1343) * t943) * qJD(2)) * t943) / 0.2e1 + t925 * (t423 * t1317 + (-t1343 * t233 + t234 * t948) * t943) / 0.2e1 + (t149 * (-t885 * t529 - t775 * t772 + (-t1004 * t604 - t1258 * t428) * qJD(3) + t1006) + t150 * (t530 * t885 - t772 * t774 + (t1258 * t430 - t604 * t881) * qJD(3) + t1052) + t143 * (t529 * t774 + t530 * t775 + (t1004 * t430 + t428 * t881) * qJD(3) + t1204)) * t1115 + (t153 * t1317 + (qJD(1) * t1044 + t1050) * t943) * t1088 + (t154 * t1317 + ((t222 * t948 + t1144) * qJD(1) + t1049) * t943) * t1057 + ((t1003 * t1194 - t1004 * t1195 - t1147 * t875) * t932 + ((-t1343 * t677 * t948 + t1190 * t676) * t943 - (-t1343 * t1411 + t1410 * t948) * t1004 - (t1343 * t1409 + t1408 * t948) * t1003) * t1188) * t1056 + t649 * t1590 + (t1317 * t325 + t1011) * t1351 + (t1317 * t326 + t1010) * t1352 + ((t1343 * t1623 + t1424 * t948) * t943 - t1624 * t1317) * t1379 + (-t1624 * t824 + (t1149 * t1531 - t1520 * t584 + t1521 * t581 + t1522 * t767 + t1529 * t642 + t1530 * t641) * t692 + t1424 * t649 - t1623 * t648 - (t1149 * t1543 - t1533 * t584 + t1535 * t581 + t1537 * t767 + t1539 * t642 + t1541 * t641) * t541 + (t1149 * t1542 - t1532 * t584 + t1534 * t581 + t1536 * t767 + t1538 * t642 + t1540 * t641) * t540) * t1370 + ((-t1500 * t948 + t1501 * t1343 + (t1343 * t1424 - t1623 * t948) * qJD(1)) * t943 + t1493 * t1317) * t1369 - t1495 * t824 / 0.2e1 - t1497 * t648 / 0.2e1 + ((-t1498 * t948 + t1499 * t1343 + (t1343 * t1420 + t1421 * t948) * qJD(1)) * t943 + t1492 * t1317) * t1363 + ((-t1502 * t948 + t1503 * t1343 + (t1343 * t1422 + t1423 * t948) * qJD(1)) * t943 + t1494 * t1317) * t1372 + ((-t1317 * t254 + t982) * t1390 + (-t117 * t1317 + t967) * t1384 + (t1317 * t258 + t1153) * t1389 + (t115 * t1317 + t1159) * t1383 + t1046 * t1391 + t997 * t1385 + (t968 * t1390 + (-t1343 * t210 + t987) * t1384 + t1343 * t258 * t1391 + 0.2e1 * t115 * t1166 + (t1166 * t254 + t74 * t968) * t1169 + ((-t883 - t1439) * t1389 + (-t832 + t1158) * t1383 + 0.2e1 * t1335 + 0.2e1 * t1326 + (t73 * t403 + t68 * (-t688 + t1440)) * t1169) * t948) * t943) * t1382 - t1553 * t1136 / 0.2e1 - t1490 * t1184 / 0.2e1 + t1491 * t1185 / 0.2e1 + ((-t1554 * t948 + t1555 * t1343 + (t1343 * t1472 + t1473 * t948) * qJD(1)) * t943 + t1544 * t1317) * t1346 + ((-t1556 * t948 + t1557 * t1343 + (t1343 * t1475 + t1476 * t948) * qJD(1)) * t943 + t1488 * t1317) * t1355 + ((-t1558 * t948 + t1559 * t1343 + (t1343 * t1477 + t1474 * t948) * qJD(1)) * t943 + t1489 * t1317) * t1358 + ((-t1343 * t1421 + t1420 * t948) * t943 + t1415 * t1317) * t1376 + ((-t1343 * t1423 + t1422 * t948) * t943 + t1416 * t1317) * t1380 - m(4) * (g(1) * (t530 + t687) + g(2) * (t529 + t684) + g(3) * (t772 + t884)) - m(6) * (g(1) * (t1060 + t322 + t658) + g(2) * (t1061 + t320 + t657) + g(3) * (t1098 + t544 + t837)) - m(7) * (g(1) * (t1060 + t1404) + g(2) * (t1061 - t1403) + g(3) * (t1098 + t1405)) + ((-t1343 * t1476 + t1475 * t948) * t943 + t1471 * t1317) * t1374 + ((-t1343 * t1474 + t1477 * t948) * t943 + t1470 * t1317) * t1375 + ((-t1343 * t1473 + t1472 * t948) * t943 + t1469 * t1317) * t1354 + (t99 + t1568) * qJD(1) * t1092 + ((t1515 * t874 + t1516 * t873) * t885 + (t1524 * t874 + t1526 * t873) * t775 + (t1523 * t874 + t1525 * t873) * t774 + (-t1004 * t1473 + t1472 * t881) * qJD(3) + ((-t1024 * t885 - t1027 * t774 + t1028 * t775 + t1395) * t950 + (qJD(3) * t1469 + t1519 * t885 + t1527 * t774 - t1580 * t775) * t947) * t943) * t1347 + (t136 * t1184 - t135 * t1185 + t160 * t1136 + (-t1004 * t139 + t1258 * t162 + t140 * t881) * qJD(3) + t1395 * t1003 + (-t1003 * t1024 - t1004 * t1519 + t1515 * t767 + t1516 * t766) * t885 + (t1003 * t1028 + t1004 * t1580 + t1524 * t767 + t1526 * t766) * t775 + (-t1003 * t1027 - t1004 * t1527 + t1523 * t767 + t1525 * t766) * t774) * t1356 + (t138 * t1184 - t137 * t1185 + t161 * t1136 + (-t1004 * t141 + t1258 * t163 + t142 * t881) * qJD(3) + t1395 * t1005 + (-t1005 * t1024 + t1515 * t771 + t1516 * t770 + t1519 * t881) * t885 + (t1005 * t1028 + t1524 * t771 + t1526 * t770 - t1580 * t881) * t775 + (-t1005 * t1027 + t1523 * t771 + t1525 * t770 + t1527 * t881) * t774) * t1359 + (t1416 * t824 + (t1148 * t1531 + t1520 * t586 + t1521 * t585 + t1522 * t771 + t1529 * t644 + t1530 * t643) * t692 + t1422 * t649 + t1423 * t648 - (t1148 * t1543 + t1533 * t586 + t1535 * t585 + t1537 * t771 + t1539 * t644 + t1541 * t643) * t541 + (t1148 * t1542 + t1532 * t586 + t1534 * t585 + t1536 * t771 + t1538 * t644 + t1540 * t643) * t540) * t1373 + (t1415 * t824 + (t1097 * t1531 - t1520 * t759 + t1521 * t758 + t1522 * t874 + t1529 * t792 + t1530 * t791) * t692 + t1420 * t649 + t1421 * t648 - (t1097 * t1543 - t1533 * t759 + t1535 * t758 + t1537 * t874 + t1539 * t792 + t1541 * t791) * t541 + (t1097 * t1542 - t1532 * t759 + t1534 * t758 + t1536 * t874 + t1538 * t792 + t1540 * t791) * t540) * t1364 + (t73 * (-t824 * t254 - t692 * t320 + t648 * t403 - t541 * t544 + t957) + t74 * (t258 * t824 + t322 * t692 - t403 * t649 - t540 * t544 + t959) + t68 * (t254 * t649 - t258 * t648 + t320 * t540 + t322 * t541 + t964)) * t1111 + (t58 * (t1005 * t1129 - t1206 * t541 + t1219 * t648 + t1232 * t692 + t1237 * t824 + t957) - t1511 * (t1003 * t1129 - t1206 * t540 - t1219 * t649 + t1231 * t692 + t1236 * t824 + t959) + t44 * (qJD(6) * t1097 + t1231 * t541 - t1232 * t540 - t1236 * t648 - t1237 * t649 + t964)) * t1109 + ((t1237 * t1317 + t982) * t1392 + (-t1249 * t1317 + t967) * t1387 + (t1236 * t1317 + t1153) * t1393 + (t1250 * t1317 + t1159) * t1386 + t1046 * t1394 + t997 * t1388 + (t987 * t1387 + ((-t883 - t1101) * t1393 + (-t832 + t1104) * t1386 - 0.2e1 * t1128 + 0.2e1 * t1121 + (t1120 + t44 * (-t688 + t1103)) * t1169) * t948 + (-t1169 * t1511 + t1392) * (-t1219 * t1343 + t985) + (-t1169 * t1419 + t1236 * t1394 - t1244 * t1387 + t1250 * t1388) * t1343) * t943) * t1381 + (t38 * (t1317 * t426 + t943 * t986 + t1008) + t120 * (-t1317 * t177 + (t1189 * t603 - t1343 * t454 + t1022) * t943 + t992) + t39 * (t1317 * t427 + (-t883 - t1205) * t1257 + t1215) + t121 * (t1317 * t176 + ((-t832 + t1226) * t948 + t986 * qJD(1)) * t943 + t1246) + t31 * ((t1343 * t427 - t426 * t948) * t943 + t1100) + t91 * ((t1343 * t176 + t177 * t948 + (-t1343 * t426 + (-t688 + t1221) * t948) * qJD(1)) * t943 + t1048)) * t1112 + (-g(1) * (t1060 + t532) - g(2) * (t1061 + t531) - g(3) * (t773 + t1098) - t120 * (-t775 * t773 + t1006 + (-t531 - t645) * t885 + t1397) - t121 * (t532 * t885 + t1002 + (-t773 - t796) * t774) - t91 * (t531 * t774 + t1075 - (-t532 - t646) * t775) - (t120 * (-t1004 * t603 + t1222 * t1258) + t121 * (-t1205 * t881 + t1258 * t427) + t91 * (-t1004 * t1221 - t426 * t881)) * qJD(3)) * m(5) + (t1049 * t1188 + t154 * t932 + t222 * t839 + t223 * t838 + t325 * t925 + t1565) * t1093 + (t1045 * t1188 + t1238 + t1291 + t1292 + t1566) * t1317 / 0.2e1 + ((t98 + t1567) * qJD(1) + t1050 * t1188 + t153 * t932 + t224 * t839 + t225 * t838 + t326 * t925 + t1564) * t1257 / 0.2e1 - m(3) * (g(1) * t683 + g(2) * t682 + g(3) * t882) - (t355 * (-t932 * t682 - t882 * t924) + t356 * (t683 * t932 - t882 * t923) + (t1343 * t683 + t682 * t948) * t327 * t1188) * t1177 / 0.2e1 + (t151 * (-t1147 * t805 - t1317 * t627) + t355 * (-t1317 * t372 + (t1189 * t805 - t1343 * t828) * t943) + t152 * (-t1257 * t805 + t1317 * t629) + t356 * (t1317 * t371 + (-t1133 * t805 - t828 * t948) * t943) + (t1043 * t1188 + t838 * t627 - t839 * t629) * t1012 + t327 * ((t1343 * t627 - t629 * t948) * qJD(1) + t1043) * t943) * t1116 + ((t1005 * t1194 + t1195 * t881 + t1257 * t875) * t932 + ((-t1005 * t1408 + t677 * t1257 + t1410 * t881) * t1257 - (t1005 * t1409 + t676 * t1257 + t1411 * t881) * t1147) * qJD(2)) * t1089 + (t71 * (t1021 * t943 - t1317 * t428 + t1118) + t149 * (-t1317 * t179 + (t1189 * t604 - t1343 * t455 - t1141) * t943 + t1076) + t72 * (t1317 * t430 + t650 + (-t604 - t883) * t1257) + t150 * (t1317 * t178 + t404 + ((-t455 - t832) * t948 + t1021 * qJD(1)) * t943) + t57 * ((t1343 * t430 + t428 * t948) * t943 + t1201) + t143 * ((t1343 * t178 + t179 * t948 + (t1343 * t428 + (-t430 - t688) * t948) * qJD(1)) * t943 + t1155)) * t1114; (t120 * (t1212 * t885 - t672 * t775 + t1214) + t121 * (t1200 * t774 + t499 * t885 + t1218) + t91 * (-t1210 * t775 + t494 * t774 + t1230)) * t1113 + (t149 * (-t496 * t885 - t674 * t775) + t150 * (t501 * t885 - t674 * t774) + t143 * (t496 * t774 + t501 * t775)) * t1115 - m(6) * (g(1) * (t345 + t500 - t1340) + g(2) * (t343 + t495 - t1341) + g(3) * (t516 + t673 - t1339)) + (t1453 * t767 + (-t1454 * t584 + t1455 * t581 - t1531 * t766) * t692 - (-t1461 * t584 + t1463 * t581 - t1543 * t766) * t541 + (-t1460 * t584 + t1462 * t581 - t1542 * t766) * t540 + (-t1424 * t770 + t1623 * t766 + t1624 * t873) * qJD(5)) * t1370 + ((-t1187 * t1624 - t1493 * t950) * t943 + t1500 * t1005 + t1501 * t1003 - t1623 * t670 - t1424 * t668) * t1369 + (t1003 * t1623 - t1005 * t1424 + t1256 * t1624) * t1379 - m(5) * (-g(1) * t1210 - g(2) * t1212 - g(3) * t1200) + (t1495 + t1553) * t947 * t1127 + (t1099 * t1390 + t1047 * t1384 + t1217 * t1383 + t1220 * t1391 + t1105 * t1385 - (t1158 * t74 - t1439 * t18 + t1326 + t1335) * t1172 + ((t73 * (-t254 + t1211) + t74 * t258) * t1107 + (t73 * t117 + t1440 * t18 + t1446 * t74 + t17 * t254) * t1171) * t943 + (t403 * t1384 + t1385 * t1440) * t670 + (t1383 * t1439 - t254 * t1385) * t668 - (t210 * t1384 + t1385 * t1446 + t403 * t1390 + t1391 * t1440) * t1003) * t1382 + ((t1469 * t1187 - t1544 * t950) * t943 + t1554 * t1005 + t1555 * t1003 + t1473 * t670 - t1472 * t668) * t1346 + ((t1187 * t1471 - t1488 * t950) * t943 + t1556 * t1005 + t1557 * t1003 + t1476 * t670 - t1475 * t668) * t1355 + ((t1187 * t1470 - t1489 * t950) * t943 + t1558 * t1005 + t1559 * t1003 + t1474 * t670 - t1477 * t668) * t1358 + (t73 * (-t343 * t692 - t516 * t541 + (t254 * t873 - t403 * t766) * qJD(5) + t999) + t74 * (t345 * t692 - t516 * t540 + (-t258 * t873 + t403 * t770) * qJD(5) + t1000) + t68 * (t343 * t540 + t345 * t541 + (-t254 * t770 + t258 * t766) * qJD(5) + t1001)) * t1111 - m(7) * ((-qJD(6) * t770 - t1412 * t541 - t1414 * t692 + t999) * t1387 + (-qJD(6) * t766 - t1412 * t540 + t1413 * t692 + t1000) * t1386 + (-qJD(6) * t873 + t1413 * t541 + t1414 * t540 + t1001) * t1388 + 0.2e1 * ((-t1237 * t58 + t1418) * t873 + (-t1219 * t1511 + t1419) * t770 + (t1236 * t44 - t1120) * t766) * qJD(5)) / 0.2e1 + (t1453 * t874 + (-t1454 * t759 + t1455 * t758 - t1531 * t873) * t692 - (-t1461 * t759 + t1463 * t758 - t1543 * t873) * t541 + (-t1460 * t759 + t1462 * t758 - t1542 * t873) * t540 + (-t1415 * t873 - t1420 * t770 - t1421 * t766) * qJD(5)) * t1364 + (t1453 * t771 + (t1454 * t586 + t1455 * t585 - t1531 * t770) * t692 - (t1461 * t586 + t1463 * t585 - t1543 * t770) * t541 + (t1460 * t586 + t1462 * t585 - t1542 * t770) * t540 + (-t1416 * t873 - t1422 * t770 - t1423 * t766) * qJD(5)) * t1373 + (t1099 * t1392 + t1047 * t1387 + t1217 * t1386 + t1220 * t1394 + t1105 * t1388 - (-t1101 * t12 - t1104 * t1511 + t1121 - t1128) * t1172 + ((t58 * (t1211 + t1237) - t1418) * t1107 + (t1103 * t12 - t1106 * t1511 - t1237 * t13 + t1249 * t58) * t1171) * t943 + 0.2e1 * (t1103 * t44 + t1120) * t670 + 0.2e1 * (-t1101 * t1511 + t1419) * t668 - 0.2e1 * (t1103 * t7 + t1106 * t44 + t1219 * t13 + t1244 * t58) * t1003) * t1381 + (t38 * (-t1003 * t603 - t1256 * t426 + t1216) + t120 * (-t454 * t1003 + t603 * t670 + (t1187 * t1222 + t177 * t950) * t943 + t1160) + t39 * (t1005 * t1205 + t1221 * t1256) + t121 * (t456 - t1226 * t1005 + t1205 * t668 + (t1187 * t427 + t1247 * t950) * t943) + t31 * (-t1003 * t1221 + t1005 * t426 - t432) + t91 * (-t1003 * t1247 - t1005 * t177 + t1221 * t670 + t426 * t668 + t1248)) * t1112 + (t1495 * t873 + t1496 * t770 + t1497 * t766) * qJD(5) / 0.2e1 - t1564 * t1005 / 0.2e1 - t1565 * t1003 / 0.2e1 - t1566 * t1256 / 0.2e1 + t1567 * t670 / 0.2e1 - t1568 * t668 / 0.2e1 + ((t1187 * t1416 - t1494 * t950) * t943 + t1502 * t1005 + t1503 * t1003 + t1423 * t670 - t1422 * t668) * t1372 - m(4) * (g(1) * t501 + g(2) * t496 + g(3) * t674) + ((t1187 * t1415 - t1492 * t950) * t943 + t1498 * t1005 + t1499 * t1003 + t1421 * t670 - t1420 * t668) * t1363 + (-t1003 * t1423 - t1005 * t1422 - t1256 * t1416) * t1380 + (-t1003 * t1421 - t1005 * t1420 - t1256 * t1415) * t1376 + (-t1003 * t1476 - t1005 * t1475 - t1256 * t1471) * t1374 + (-t1003 * t1474 - t1005 * t1477 - t1256 * t1470) * t1375 + (-t1003 * t1473 - t1005 * t1472 - t1256 * t1469) * t1354 + (t71 * (-t1003 * t604 + t1256 * t428) + t149 * (-t455 * t1003 + t604 * t670 + (-t1187 * t428 + t179 * t950) * t943) + t72 * (t1005 * t604 - t1256 * t430) + t150 * (t455 * t1005 + t604 * t668 + (t1187 * t430 - t178 * t950) * t943) + t57 * (t1003 * t430 - t1005 * t428) + t143 * (t1003 * t178 - t1005 * t179 - t428 * t668 - t430 * t670)) * t1114 - m(7) * (g(1) * (t500 + t1442) + g(2) * (t495 + t1441) + g(3) * (t673 + t1443)) + (t1003 * t1438 + t1451 * t767 + t1452 * t766) * t1356 + (t1256 * t1438 + t1451 * t874 + t1452 * t873) * t1347 + (t1005 * t1438 + t1451 * t771 + t1452 * t770) * t1359; (t12 * t766 + t1228 * t58 - t1229 * t1511 + t1235 * t44 + t13 * t770 + t7 * t873 - t431) * m(7) + (t1228 * t73 + t1229 * t74 + t1235 * t68 + t16 * t873 + t17 * t770 + t18 * t766 - t431) * m(6) + (t120 * t1228 + t121 * t1229 + t1235 * t91 + t31 * t873 + t38 * t770 + t39 * t766 - t431) * m(5); (t17 * (-t254 * t874 + t403 * t767) + t73 * (-t117 * t874 + t210 * t767 - t254 * t757 + t394 * t403) + t18 * (t258 * t874 - t403 * t771) + t74 * (t115 * t874 - t210 * t771 + t258 * t757 - t392 * t403) + t16 * (t254 * t771 - t258 * t767) + t68 * (-t115 * t767 + t117 * t771 + t254 * t392 - t258 * t394)) * t1110 + (t13 * (t1219 * t767 + t1237 * t874) + t58 * (t1219 * t394 + t1237 * t757 + t1244 * t767 - t1249 * t874) + t12 * (-t1219 * t771 + t1236 * t874) - t1511 * (-t1219 * t392 + t1236 * t757 - t1244 * t771 + t1250 * t874) + t7 * (-t1236 * t767 - t1237 * t771) + t44 * (-t1236 * t394 - t1237 * t392 + t1249 * t771 - t1250 * t767)) * t1108 - m(7) * (g(1) * t1233 + g(2) * t1234 + g(3) * t1213) + (t58 * (-t1213 * t541 - t1234 * t692) - t1511 * (-t1213 * t540 + t1233 * t692) + t44 * (t1233 * t541 + t1234 * t540)) * t1109 + (t73 * (-t303 * t692 - t481 * t541) + t74 * (t305 * t692 - t481 * t540) + t68 * (t303 * t540 + t305 * t541)) * t1111 - m(6) * (g(1) * t305 + g(2) * t303 + g(3) * t481) + (t1416 * t874 + t1422 * t771 + t1423 * t767) * t1380 + (t1424 * t771 - t1623 * t767 - t1624 * t874) * t1379 + t1496 * t392 / 0.2e1 + t1497 * t394 / 0.2e1 + (t1415 * t874 + t1420 * t771 + t1421 * t767) * t1376 + (t1399 * t771 + t1406 * t586 + t1407 * t585) * t1373 + (t1416 * t757 + t1422 * t392 + t1423 * t394 + t1494 * t874 - t1502 * t771 - t1503 * t767) * t1372 + (t1399 * t767 - t1406 * t584 + t1407 * t581) * t1370 + (t1424 * t392 + t1493 * t874 - t1500 * t771 - t1501 * t767 - t1623 * t394 - t1624 * t757) * t1369 + (t1399 * t874 - t1406 * t759 + t1407 * t758) * t1364 + (t1415 * t757 + t1420 * t392 + t1421 * t394 + t1492 * t874 - t1498 * t771 - t1499 * t767) * t1363 + t1495 * t757 / 0.2e1 + t1506 * t767 / 0.2e1 + t1507 * t771 / 0.2e1 + t1505 * t874 / 0.2e1; ((-g(3) + t7) * t874 + (-g(1) + t13) * t771 + (t12 - g(2)) * t767 - (t540 * t874 - t692 * t771 + t394) * t1511 + (t541 * t874 + t692 * t767 + t392) * t58 + (-t540 * t767 - t541 * t771 + t757) * t44) * m(7);];
tau  = t1;
