% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 09:21
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRP11_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP11_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP11_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP11_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP11_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP11_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 09:18:35
% EndTime: 2019-05-07 09:19:16
% DurationCPUTime: 11.38s
% Computational Cost: add. (41948->524), mult. (90620->695), div. (0->0), fcn. (70568->10), ass. (0->337)
t311 = cos(qJ(2));
t304 = sin(pkin(6));
t382 = qJD(1) * t304;
t364 = t311 * t382;
t292 = -qJD(3) + t364;
t290 = t292 ^ 2;
t305 = cos(pkin(6));
t299 = qJD(1) * t305 + qJD(2);
t307 = sin(qJ(3));
t310 = cos(qJ(3));
t308 = sin(qJ(2));
t381 = qJD(1) * t308;
t365 = t304 * t381;
t269 = -t310 * t299 + t307 * t365;
t443 = t269 ^ 2;
t226 = -t290 - t443;
t363 = qJD(2) * t382;
t375 = qJDD(1) * t304;
t280 = -t308 * t363 + t311 * t375;
t274 = -qJDD(3) + t280;
t271 = t299 * t307 + t310 * t365;
t397 = t271 * t269;
t327 = t274 + t397;
t463 = t307 * t327;
t156 = t226 * t310 + t463;
t279 = t308 * t375 + t311 * t363;
t357 = qJDD(1) * t305 + qJDD(2);
t224 = qJD(3) * t271 + t279 * t307 - t310 * t357;
t396 = t292 * t271;
t186 = t224 - t396;
t501 = pkin(1) * (t156 * t308 - t186 * t311);
t462 = t310 * t327;
t154 = t226 * t307 - t462;
t500 = pkin(8) * (t156 * t311 + t186 * t308) - pkin(1) * t154;
t442 = t271 ^ 2;
t452 = -t442 - t290;
t328 = t274 - t397;
t460 = t328 * t310;
t166 = t307 * t452 - t460;
t326 = t310 * t279 + t307 * t357;
t193 = t269 * (qJD(3) - t292) - t326;
t498 = pkin(1) * (t166 * t308 - t193 * t311);
t497 = pkin(2) * t154;
t496 = pkin(9) * t154;
t495 = pkin(9) * t156;
t246 = -t442 + t290;
t168 = t246 * t310 - t463;
t494 = t305 * t168;
t461 = t328 * t307;
t163 = t310 * t452 + t461;
t493 = -pkin(8) * (t166 * t311 + t193 * t308) - pkin(1) * t163;
t245 = t443 - t290;
t169 = t245 * t307 - t460;
t455 = t224 + t396;
t490 = t305 * t169 + t304 * (t308 * (t245 * t310 + t461) + t311 * t455);
t440 = -2 * qJD(4);
t488 = pkin(2) * t163;
t306 = sin(qJ(5));
t309 = cos(qJ(5));
t241 = -t309 * t269 - t292 * t306;
t243 = t269 * t306 - t292 * t309;
t198 = t243 * t241;
t225 = -t269 * qJD(3) + t326;
t221 = qJDD(5) + t225;
t465 = t198 - t221;
t487 = pkin(5) * t465;
t486 = pkin(9) * t163;
t485 = pkin(9) * t166;
t484 = t308 * (t246 * t307 + t462);
t202 = t443 + t442;
t480 = pkin(2) * t202;
t479 = t186 * t307;
t406 = t186 * t310;
t474 = t202 * t308;
t473 = t202 * t311;
t253 = t269 * t292;
t191 = t253 + t225;
t356 = -t311 * pkin(2) - t308 * pkin(9);
t278 = t356 * t382;
t312 = qJD(1) ^ 2;
t431 = sin(qJ(1));
t432 = cos(qJ(1));
t336 = g(1) * t432 + g(2) * t431;
t275 = -t312 * pkin(1) + pkin(8) * t375 - t336;
t335 = g(1) * t431 - g(2) * t432;
t390 = t304 * t312;
t320 = qJDD(1) * pkin(1) + pkin(8) * t390 + t335;
t317 = t305 * t320;
t359 = t275 * t308 - t311 * t317;
t441 = t299 ^ 2;
t175 = t304 * (g(3) * t311 + t278 * t381) - t357 * pkin(2) - t441 * pkin(9) + t359;
t314 = t224 * pkin(3) - qJ(4) * t191 + t175;
t472 = t271 * t440 + t314;
t439 = pkin(3) + pkin(10);
t389 = t306 * t465;
t469 = t307 * t455;
t468 = t310 * t455;
t451 = t442 - t443;
t467 = t311 * t451;
t409 = t465 * t309;
t301 = t304 ^ 2;
t383 = qJD(1) * t299;
t464 = t301 * (-t305 * t312 + t383);
t239 = t241 ^ 2;
t264 = qJD(5) + t271;
t261 = t264 ^ 2;
t171 = -t261 - t239;
t110 = t171 * t306 - t409;
t111 = t171 * t309 + t389;
t459 = pkin(4) * t110 - qJ(4) * t111;
t240 = t243 ^ 2;
t195 = -t240 - t261;
t149 = t198 + t221;
t411 = t149 * t306;
t116 = t195 * t309 - t411;
t410 = t149 * t309;
t117 = -t306 * t195 - t410;
t458 = pkin(4) * t116 - qJ(4) * t117;
t160 = -qJD(5) * t241 + t224 * t306 - t274 * t309;
t213 = t264 * t241;
t457 = t160 - t213;
t192 = -t253 + t225;
t392 = t304 * t308;
t313 = -g(3) * t392 + t308 * t317;
t176 = t357 * pkin(9) - t441 * pkin(2) + (t278 * t382 + t275) * t311 + t313;
t426 = t305 * g(3);
t177 = -t280 * pkin(2) - t279 * pkin(9) - t426 + ((pkin(2) * t308 - pkin(9) * t311) * t383 - t320) * t304;
t123 = t176 * t307 - t310 * t177;
t229 = pkin(3) * t269 - qJ(4) * t271;
t102 = t274 * pkin(3) - t290 * qJ(4) + t229 * t271 + qJDD(4) + t123;
t72 = pkin(4) * t192 + t327 * pkin(10) + t102;
t244 = pkin(4) * t271 + pkin(10) * t292;
t361 = -pkin(3) * t292 + t440;
t75 = -pkin(4) * t443 + pkin(10) * t224 + (-t244 + t361) * t271 + t314;
t49 = t306 * t75 - t309 * t72;
t454 = qJ(6) * t213 + 0.2e1 * qJD(6) * t243 + t487 + t49;
t360 = t309 * t224 + t274 * t306;
t159 = -qJD(5) * t243 + t360;
t203 = pkin(5) * t264 - qJ(6) * t243;
t50 = t306 * t72 + t309 * t75;
t38 = -t239 * pkin(5) + t159 * qJ(6) - 0.2e1 * qJD(6) * t241 - t264 * t203 + t50;
t391 = t304 * t311;
t227 = g(3) * t391 + t359;
t228 = t311 * t275 + t313;
t453 = t308 * t227 + t311 * t228;
t37 = -qJ(6) * t160 - t454;
t418 = t309 * t37;
t17 = t306 * t38 + t418;
t124 = t310 * t176 + t307 * t177;
t345 = t290 * pkin(3) + t229 * t269 - t124;
t412 = qJ(4) * t274;
t324 = -t224 * pkin(4) - pkin(10) * t443 - t345 - t412;
t315 = -t159 * pkin(5) - t239 * qJ(6) + t203 * t243 + qJDD(6) + t324;
t358 = (t440 - t244) * t292;
t56 = t358 + t315;
t21 = -pkin(5) * t56 + qJ(6) * t38;
t449 = qJ(4) * t56 - qJ(6) * t418 - t17 * t439 - t21 * t306;
t24 = t306 * t50 - t309 * t49;
t74 = t358 + t324;
t448 = qJ(4) * t74 - t24 * t439;
t447 = -qJ(4) * (t328 + t274) - pkin(3) * t452;
t395 = t292 * t307;
t354 = -t310 * t224 - t269 * t395;
t369 = t311 * t397;
t394 = t292 * t310;
t446 = t305 * t354 + (t308 * (t224 * t307 - t269 * t394) + t369) * t304;
t355 = t307 * t225 - t271 * t394;
t445 = t305 * t355 + (t308 * (t310 * t225 + t271 * t395) - t369) * t304;
t338 = (t269 * t307 + t271 * t310) * t292;
t444 = t305 * t338 + t274 * t391 + (t269 * t310 - t271 * t307) * t292 * t392;
t162 = -t239 - t240;
t138 = t160 + t213;
t332 = (-qJD(5) + t264) * t243 + t360;
t94 = -t138 * t309 + t306 * t332;
t67 = t162 * t307 - t310 * t94;
t438 = pkin(2) * t67;
t134 = (qJD(5) + t264) * t243 - t360;
t77 = -t110 * t310 + t134 * t307;
t437 = pkin(2) * t77;
t80 = -t116 * t310 + t307 * t457;
t436 = pkin(2) * t80;
t435 = pkin(9) * t67;
t434 = pkin(9) * t77;
t433 = pkin(9) * t80;
t429 = pkin(3) * t307;
t428 = pkin(3) * t310;
t427 = pkin(8) * t304;
t68 = t162 * t310 + t307 * t94;
t96 = t306 * t138 + t309 * t332;
t425 = pkin(1) * (-t304 * t67 + (t308 * t68 - t311 * t96) * t305) + (t308 * t96 + t311 * t68) * t427;
t78 = t110 * t307 + t134 * t310;
t424 = pkin(1) * (-t304 * t77 + (-t111 * t311 + t308 * t78) * t305) + (t111 * t308 + t311 * t78) * t427;
t81 = t116 * t307 + t310 * t457;
t423 = pkin(1) * (-t304 * t80 + (-t117 * t311 + t308 * t81) * t305) + (t117 * t308 + t311 * t81) * t427;
t422 = -pkin(2) * t96 + pkin(9) * t68;
t420 = t306 * t37;
t419 = t306 * t74;
t417 = t309 * t74;
t416 = -pkin(2) * t111 + pkin(9) * t78;
t415 = -pkin(2) * t117 + pkin(9) * t81;
t408 = t175 * t307;
t407 = t175 * t310;
t399 = t264 * t306;
t398 = t264 * t309;
t393 = t301 * t312;
t291 = t311 * t308 * t393;
t277 = t291 + t357;
t387 = t308 * t277;
t276 = -t291 + t357;
t385 = t311 * t276;
t379 = qJD(4) * t292;
t374 = qJ(4) * t162 - t439 * t94;
t373 = t307 * t198;
t372 = t310 * t198;
t302 = t308 ^ 2;
t371 = t302 * t393;
t303 = t311 ^ 2;
t370 = t303 * t393;
t368 = qJ(4) * t134 - t110 * t439;
t367 = qJ(4) * t457 - t116 * t439;
t284 = t299 * t364;
t366 = t284 + t279;
t362 = qJ(4) * t307 + pkin(2);
t55 = pkin(4) * t94 - qJ(4) * t96;
t83 = t123 * t307 + t310 * t124;
t329 = -t345 - 0.2e1 * t379;
t100 = t329 - t412;
t352 = -pkin(3) * t102 + qJ(4) * t100;
t189 = (-qJD(3) - t292) * t269 + t326;
t351 = -pkin(3) * t189 - qJ(4) * t455;
t25 = t306 * t49 + t309 * t50;
t350 = t123 * t310 - t124 * t307;
t348 = -pkin(1) + t356;
t347 = t368 + t419;
t346 = t367 + t417;
t343 = pkin(4) * t162 - t439 * t96;
t342 = pkin(4) * t134 - t111 * t439;
t341 = pkin(4) * t457 - t117 * t439;
t337 = pkin(5) * t195 - t38;
t29 = -pkin(5) * t162 + qJ(6) * t332 + t38;
t30 = (t138 + t160) * qJ(6) + t454;
t334 = -t29 * t306 + t30 * t309 + t374;
t333 = -t24 + t374;
t52 = -qJ(6) * t195 + t56;
t98 = -pkin(5) * t457 - qJ(6) * t149;
t331 = -t306 * t98 + t309 * t52 + t367;
t285 = 0.2e1 * t379;
t46 = -pkin(5) * t134 + qJ(6) * t171 + t244 * t292 + t285 - t315;
t325 = qJ(6) * t409 - t306 * t46 + t368;
t322 = t37 - t487;
t316 = pkin(3) * t327 - qJ(4) * t226 + t102;
t283 = t299 * t365;
t282 = (t302 - t303) * t393;
t281 = -t370 - t441;
t262 = -t371 - t441;
t256 = t304 * t320 + t426;
t252 = t280 - t283;
t251 = t280 + t283;
t250 = -t284 + t279;
t205 = -t240 + t261;
t204 = t239 - t261;
t196 = -t239 + t240;
t152 = (-t241 * t309 + t243 * t306) * t264;
t151 = (t241 * t306 + t243 * t309) * t264;
t145 = t192 * t307 - t468;
t144 = t189 * t307 - t468;
t142 = -t193 * t310 - t479;
t141 = t191 * t310 - t479;
t140 = -t189 * t310 - t469;
t133 = pkin(5) * t138;
t129 = t160 * t309 - t243 * t399;
t128 = -t160 * t306 - t243 * t398;
t127 = t159 * t306 - t241 * t398;
t126 = -t159 * t309 - t241 * t399;
t125 = t151 * t310 + t221 * t307;
t121 = t204 * t309 - t411;
t120 = -t205 * t306 - t409;
t119 = -t204 * t306 - t410;
t118 = -t205 * t309 + t389;
t105 = t128 * t310 + t373;
t104 = t126 * t310 - t373;
t103 = t271 * t361 + t314;
t101 = pkin(2) * t193 + t408 - t485;
t99 = -pkin(2) * t186 - t407 + t495;
t97 = qJ(4) * t202 + t102;
t95 = -t134 * t309 - t306 * t457;
t93 = t134 * t306 - t309 * t457;
t88 = pkin(3) * t202 + t100;
t87 = (t186 - t396) * pkin(3) + t472;
t86 = pkin(3) * t396 - qJ(4) * t193 - t472;
t85 = t118 * t310 + t138 * t307;
t84 = t119 * t310 + t307 * t332;
t69 = t196 * t307 + t310 * t93;
t65 = -pkin(2) * t175 + pkin(9) * t83;
t64 = t305 * t125 + (t308 * (-t151 * t307 + t221 * t310) - t311 * t152) * t304;
t63 = t100 * t310 + t102 * t307;
t62 = t100 * t307 - t102 * t310;
t61 = pkin(9) * t145 + t480 + t83;
t59 = t485 + t307 * t86 - (pkin(2) + t428) * t193;
t57 = t186 * t362 + t310 * t87 - t495;
t54 = t305 * t105 + (t308 * (-t128 * t307 + t372) - t311 * t129) * t304;
t53 = t305 * t104 + (t308 * (-t126 * t307 - t372) + t311 * t127) * t304;
t47 = -t133 + t55;
t45 = pkin(9) * t144 + t307 * t97 + t310 * t88 + t480;
t44 = t305 * t85 + (t308 * (-t118 * t307 + t138 * t310) - t311 * t120) * t304;
t43 = t305 * t84 + (t308 * (-t119 * t307 + t310 * t332) - t311 * t121) * t304;
t41 = t341 - t419;
t40 = t342 + t417;
t36 = pkin(5) * t37;
t34 = t305 * t69 + (t308 * (t196 * t310 - t307 * t93) - t311 * t95) * t304;
t33 = -t50 + t458;
t32 = -t49 + t459;
t28 = pkin(9) * t63 + (-t362 - t428) * t103;
t27 = t337 + t458;
t26 = -t306 * t52 - t309 * t98 + t341;
t23 = -qJ(6) * t389 - t309 * t46 + t342;
t22 = t322 + t459;
t20 = t24 * t307 + t310 * t74;
t19 = -t24 * t310 + t307 * t74;
t18 = t309 * t38 - t420;
t16 = -t25 + t343;
t15 = t307 * t33 + t310 * t41 + t415;
t14 = t17 * t307 + t310 * t56;
t13 = -t17 * t310 + t307 * t56;
t12 = t307 * t32 + t310 * t40 + t416;
t11 = pkin(4) * t24 - qJ(4) * t25;
t10 = -t29 * t309 - t30 * t306 + t343;
t9 = pkin(4) * t74 - t25 * t439;
t8 = t26 * t310 + t27 * t307 + t415;
t7 = t16 * t310 + t307 * t55 + t422;
t6 = t22 * t307 + t23 * t310 + t416;
t5 = t10 * t310 + t307 * t47 + t422;
t4 = pkin(4) * t17 - qJ(4) * t18 + t36;
t3 = pkin(4) * t56 + qJ(6) * t420 - t18 * t439 - t21 * t309;
t2 = -pkin(2) * t25 + pkin(9) * t20 + t11 * t307 + t310 * t9;
t1 = -pkin(2) * t18 + pkin(9) * t14 + t3 * t310 + t307 * t4;
t31 = [0, 0, 0, 0, 0, qJDD(1), t335, t336, 0, 0, (t279 * t304 + t311 * t464) * t308, t305 * t282 + (t308 * t252 + t311 * t366) * t304, t305 * t250 + (t387 + t311 * (-t371 + t441)) * t304, (t280 * t304 - t308 * t464) * t311, t305 * t251 + (t308 * (t370 - t441) + t385) * t304, t305 * t357, (-t227 + pkin(1) * (t277 * t311 + t281 * t308)) * t305 + (t311 * t256 + pkin(1) * t252 + pkin(8) * (t281 * t311 - t387)) * t304, -t256 * t392 - t305 * t228 + pkin(1) * (-t304 * t366 + (t262 * t311 - t276 * t308) * t305) + (-t262 * t308 - t385) * t427, pkin(1) * ((-t250 * t311 + t251 * t308) * t305 - (-t302 - t303) * t301 * t390) + (t250 * t308 + t251 * t311) * t427 + t453 * t304, pkin(1) * (t256 * t304 + (-t227 * t311 + t228 * t308) * t305) + t453 * t427, t445, t305 * t141 + (t308 * (-t191 * t307 - t406) - t467) * t304, t494 + (-t311 * t192 - t484) * t304, t446, t490, t444, (t99 + t501) * t305 + (t308 * (t408 - t496) + t311 * (t123 - t497) + t500) * t304, (t101 - t498) * t305 + (t308 * (t407 - t486) + t311 * (t124 - t488) + t493) * t304, (t61 + pkin(1) * (t145 * t308 + t473)) * t305 + (t308 * t350 + pkin(8) * (t145 * t311 - t474) + t348 * (-t192 * t310 - t469)) * t304, (t65 + pkin(1) * (-t175 * t311 + t308 * t83)) * t305 + (pkin(8) * (t175 * t308 + t311 * t83) - t348 * t350) * t304, t444, -t494 + (t311 * t189 + t484) * t304, -t490, t445, t305 * t142 + (t308 * (t193 * t307 - t406) - t467) * t304, t446, (t45 + pkin(1) * (t144 * t308 + t473)) * t305 + (t308 * (-pkin(9) * t140 - t307 * t88 + t310 * t97) + t311 * (-pkin(2) * t140 - t351) - pkin(1) * t140 + pkin(8) * (t144 * t311 - t474)) * t304, (t57 - t501) * t305 + (t308 * (qJ(4) * t406 - t307 * t87 + t496) + t311 * (-t316 + t497) - t500) * t304, (t59 + t498) * t305 + (t308 * (t193 * t429 + t310 * t86 + t486) + t311 * (t285 + t345 - t447 + t488) - t493) * t304, (t28 + pkin(1) * (-t103 * t311 + t308 * t63)) * t305 + (t308 * (-pkin(9) * t62 + (-qJ(4) * t310 + t429) * t103) + t311 * (-pkin(2) * t62 - t352) - pkin(1) * t62 + pkin(8) * (t103 * t308 + t311 * t63)) * t304, t54, t34, t44, t53, t43, t64, t305 * t12 + (t308 * (-t307 * t40 + t310 * t32 - t434) + t311 * (-t347 - t437)) * t304 + t424, t305 * t15 + (t308 * (-t307 * t41 + t310 * t33 - t433) + t311 * (-t346 - t436)) * t304 + t423, t305 * t7 + (t308 * (-t16 * t307 + t310 * t55 - t435) + t311 * (-t333 - t438)) * t304 + t425, (t2 + pkin(1) * (t20 * t308 - t25 * t311)) * t305 + (t308 * (-pkin(9) * t19 + t11 * t310 - t307 * t9) + t311 * (-pkin(2) * t19 - t448) - pkin(1) * t19 + pkin(8) * (t20 * t311 + t25 * t308)) * t304, t54, t34, t44, t53, t43, t64, t305 * t6 + (t308 * (t22 * t310 - t23 * t307 - t434) + t311 * (-t325 - t437)) * t304 + t424, t305 * t8 + (t308 * (-t26 * t307 + t27 * t310 - t433) + t311 * (-t331 - t436)) * t304 + t423, t305 * t5 + (t308 * (-t10 * t307 + t310 * t47 - t435) + t311 * (-t334 - t438)) * t304 + t425, (t1 + pkin(1) * (t14 * t308 - t18 * t311)) * t305 + (t308 * (-pkin(9) * t13 - t3 * t307 + t310 * t4) + t311 * (-pkin(2) * t13 - t449) - pkin(1) * t13 + pkin(8) * (t14 * t311 + t18 * t308)) * t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, t282, t250, t291, t251, t357, -t227, -t228, 0, 0, t355, t141, t168, t354, t169, t338, t99, t101, t61, t65, t338, -t168, -t169, t355, t142, t354, t45, t57, t59, t28, t105, t69, t85, t104, t84, t125, t12, t15, t7, t2, t105, t69, t85, t104, t84, t125, t6, t8, t5, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, t451, t192, -t397, -t455, -t274, -t123, -t124, 0, 0, -t274, -t189, t455, t397, t451, -t397, t351, t316, t329 + t447, t352, t129, t95, t120, -t127, t121, t152, t347, t346, t333, t448, t129, t95, t120, -t127, t121, t152, t325, t331, t334, t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, -t327, t452, t102, 0, 0, 0, 0, 0, 0, t110, t116, t94, t24, 0, 0, 0, 0, 0, 0, t110, t116, t94, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, t196, t138, -t198, t332, t221, -t49, -t50, 0, 0, t198, t196, t138, -t198, t332, t221, t322, t337, -t133, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, t457, t162, t56;];
tauJ_reg  = t31;
