% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR14_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR14_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR14_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR14_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:20:36
% EndTime: 2019-03-09 20:21:00
% DurationCPUTime: 8.77s
% Computational Cost: add. (8919->579), mult. (22828->786), div. (0->0), fcn. (17862->10), ass. (0->272)
t248 = sin(pkin(6));
t256 = cos(qJ(2));
t349 = qJD(1) * t256;
t325 = t248 * t349;
t224 = -qJD(3) + t325;
t252 = sin(qJ(2));
t378 = cos(pkin(6));
t311 = t378 * qJD(1);
t298 = pkin(1) * t311;
t232 = t252 * t298;
t186 = pkin(8) * t325 + t232;
t251 = sin(qJ(3));
t301 = t251 * t325;
t345 = qJD(3) * t251;
t422 = qJD(4) * t251 + t186 + (t301 - t345) * pkin(3);
t255 = cos(qJ(3));
t280 = t311 + qJD(2);
t350 = qJD(1) * t248;
t326 = t252 * t350;
t169 = t251 * t280 + t255 * t326;
t249 = sin(qJ(6));
t250 = sin(qJ(5));
t253 = cos(qJ(6));
t254 = cos(qJ(5));
t203 = t249 * t254 + t250 * t253;
t403 = qJD(5) + qJD(6);
t385 = (-t169 - t403) * t203;
t183 = -pkin(8) * t326 + t256 * t298;
t276 = t248 * (pkin(2) * t252 - pkin(9) * t256);
t184 = qJD(1) * t276;
t309 = -t251 * t183 + t184 * t255;
t343 = qJD(3) * t255;
t360 = t255 * t256;
t398 = pkin(4) + pkin(9);
t399 = pkin(3) + pkin(10);
t421 = t398 * t343 - (pkin(4) * t360 - t252 * t399) * t350 + t309;
t416 = t422 + t224 * (pkin(10) * t251 - qJ(4) * t255);
t268 = t255 * t280;
t336 = qJD(1) * qJD(2);
t318 = t248 * t336;
t297 = t256 * t318;
t367 = t248 * t252;
t330 = t251 * t367;
t299 = qJD(3) * t330;
t126 = qJD(1) * t299 - qJD(3) * t268 - t255 * t297;
t162 = qJD(5) + t169;
t151 = qJD(6) + t162;
t362 = t253 * t254;
t282 = t249 * t250 - t362;
t338 = qJD(6) * t249;
t342 = qJD(5) * t250;
t384 = -t169 * t282 - t249 * t342 - t250 * t338 + t362 * t403;
t420 = t203 * t126 - t151 * t384;
t167 = t251 * t326 - t268;
t122 = -t254 * t167 - t224 * t250;
t213 = t224 * qJ(4);
t147 = pkin(9) * t280 + t186;
t182 = (-pkin(2) * t256 - pkin(9) * t252 - pkin(1)) * t248;
t161 = qJD(1) * t182;
t97 = t255 * t147 + t251 * t161;
t75 = -pkin(4) * t167 + t97;
t61 = -t213 + t75;
t40 = pkin(5) * t122 + t61;
t124 = t167 * t250 - t224 * t254;
t65 = t253 * t122 + t124 * t249;
t419 = t40 * t65;
t284 = t122 * t249 - t253 * t124;
t418 = t284 * t65;
t96 = t147 * t251 - t255 * t161;
t358 = -qJD(4) - t96;
t155 = t250 * t326 - t254 * t301;
t344 = qJD(3) * t254;
t415 = t251 * t344 + t155;
t414 = -t255 * t325 + t343;
t413 = t284 ^ 2 - t65 ^ 2;
t357 = pkin(4) * t169 - t358;
t50 = t224 * t399 + t357;
t146 = -pkin(2) * t280 - t183;
t259 = -t169 * qJ(4) + t146;
t55 = t167 * t399 + t259;
t22 = -t250 * t55 + t254 * t50;
t17 = -pkin(11) * t124 + t22;
t14 = pkin(5) * t162 + t17;
t23 = t250 * t50 + t254 * t55;
t18 = -pkin(11) * t122 + t23;
t391 = t18 * t253;
t10 = t14 * t249 + t391;
t346 = qJD(3) * t169;
t127 = t251 * t297 + t346;
t227 = t252 * t318;
t341 = qJD(5) * t254;
t59 = t250 * t127 + t167 * t341 + t224 * t342 + t254 * t227;
t348 = qJD(2) * t252;
t324 = t248 * t348;
t285 = t399 * t324;
t185 = qJD(2) * t276;
t177 = qJD(1) * t185;
t312 = t256 * t378;
t405 = pkin(1) * t312 - pkin(8) * t367;
t187 = t405 * qJD(2);
t178 = qJD(1) * t187;
t304 = t147 * t343 + t161 * t345 - t255 * t177 + t251 * t178;
t32 = -pkin(4) * t126 - qJD(1) * t285 + t304;
t179 = pkin(8) * t297 + qJD(2) * t232;
t266 = qJ(4) * t126 - qJD(4) * t169 + t179;
t34 = t127 * t399 + t266;
t8 = -qJD(5) * t23 - t250 * t34 + t254 * t32;
t4 = -pkin(5) * t126 - pkin(11) * t59 + t8;
t60 = qJD(5) * t124 - t254 * t127 + t227 * t250;
t7 = t250 * t32 + t254 * t34 + t50 * t341 - t342 * t55;
t5 = -pkin(11) * t60 + t7;
t2 = -qJD(6) * t10 - t249 * t5 + t253 * t4;
t412 = t40 * t284 + t2;
t337 = qJD(6) * t253;
t12 = -t122 * t337 - t124 * t338 - t249 * t60 + t253 * t59;
t411 = t151 * t65 + t12;
t261 = qJD(6) * t284 - t249 * t59 - t253 * t60;
t410 = -t151 * t284 + t261;
t409 = t421 * t254;
t287 = pkin(3) * t227;
t45 = -t287 + t304;
t90 = t213 - t97;
t408 = -t224 * t90 + t45;
t317 = -qJ(4) * t251 - pkin(2);
t198 = -t255 * t399 + t317;
t225 = t398 * t251;
t406 = t198 * t342 - t225 * t341 - t250 * t421 + t254 * t416;
t404 = t126 * t282 + t151 * t385;
t402 = t126 * t399 + t162 * t61;
t16 = t18 * t338;
t315 = qJD(6) * t14 + t5;
t1 = t249 * t4 + t253 * t315 - t16;
t401 = t255 * t403;
t400 = t169 ^ 2;
t258 = qJD(1) ^ 2;
t397 = pkin(11) * t169;
t396 = pkin(11) + t399;
t303 = t378 * t252 * pkin(1);
t366 = t248 * t256;
t181 = pkin(8) * t366 + pkin(9) * t378 + t303;
t310 = -t251 * t181 + t182 * t255;
t106 = pkin(3) * t366 - t310;
t195 = t251 * t378 + t255 * t367;
t76 = pkin(4) * t195 + pkin(10) * t366 + t106;
t194 = -t255 * t378 + t330;
t180 = -pkin(2) * t378 - t405;
t260 = -t195 * qJ(4) + t180;
t85 = t194 * t399 + t260;
t395 = t250 * t76 + t254 * t85;
t377 = qJ(4) * t167;
t89 = t169 * t399 + t377;
t394 = t250 * t75 + t254 * t89;
t84 = t167 * pkin(3) + t259;
t392 = t169 * t84;
t389 = t254 * t59;
t219 = qJ(4) * t227;
t305 = t147 * t345 - t161 * t343 - t251 * t177 - t255 * t178;
t286 = -qJD(4) * t224 - t305;
t42 = -t219 - t286;
t30 = -pkin(4) * t127 - t42;
t388 = t30 * t250;
t387 = t30 * t254;
t340 = qJD(5) * t255;
t322 = t250 * t340;
t327 = -pkin(5) * t254 - pkin(4);
t353 = t255 * t183 + t251 * t184;
t108 = -qJ(4) * t326 - t353;
t93 = -pkin(4) * t301 - t108;
t383 = (-pkin(9) + t327) * t345 - t93 + (-t155 - t322) * pkin(5);
t382 = -t398 * t345 - t93;
t381 = pkin(5) * t341 - t169 * t327 - t358;
t363 = t251 * t256;
t156 = (t250 * t363 + t252 * t254) * t350;
t380 = t155 * t249 - t156 * t253 + t203 * t345 + t282 * t401;
t379 = -t253 * t155 - t156 * t249 - t203 * t401 + t282 * t345;
t376 = t122 * t162;
t375 = t122 * t224;
t374 = t124 * t162;
t373 = t124 * t224;
t372 = t167 * t224;
t371 = t169 * t167;
t370 = t169 * t224;
t273 = t224 * t255;
t245 = t248 ^ 2;
t368 = t245 * t258;
t364 = t250 * t126;
t205 = t250 * t225;
t119 = t254 * t126;
t361 = t254 * t255;
t355 = qJ(4) * t414 + t422;
t354 = t255 * t181 + t251 * t182;
t352 = t254 * t198 + t205;
t321 = qJD(2) * t366;
t188 = pkin(8) * t321 + qJD(2) * t303;
t226 = t398 * t255;
t351 = t252 ^ 2 - t256 ^ 2;
t347 = qJD(2) * t255;
t339 = qJD(5) * t399;
t335 = pkin(9) * t224 * t251;
t334 = pkin(9) * t273;
t333 = pkin(9) * t348;
t332 = pkin(9) * t347;
t331 = t252 * t368;
t329 = t254 * t366;
t216 = t396 * t254;
t319 = t245 * t336;
t316 = pkin(11) * t255 - t198;
t313 = -t250 * t85 + t254 * t76;
t308 = t162 * t250;
t306 = 0.2e1 * t319;
t206 = t254 * t225;
t114 = pkin(5) * t251 + t250 * t316 + t206;
t296 = -qJD(6) * t114 + t406 + (-t322 - t415) * pkin(11);
t125 = -pkin(11) * t361 + t352;
t295 = -pkin(11) * t156 + qJD(6) * t125 - (t254 * t316 - t205) * qJD(5) - t409 - t414 * pkin(5) + (pkin(11) * t345 - t416) * t250;
t294 = -0.2e1 * pkin(1) * t319;
t215 = t396 * t250;
t70 = t254 * t75;
t293 = -qJD(6) * t215 - t396 * t342 - pkin(5) * t167 + t70 + (-t89 - t397) * t250;
t292 = t216 * t403 + t254 * t397 + t394;
t291 = t250 * t345 - t156;
t138 = t194 * t250 - t329;
t25 = pkin(5) * t195 - pkin(11) * t138 + t313;
t137 = t194 * t254 + t250 * t366;
t26 = pkin(11) * t137 + t395;
t289 = -t249 * t26 + t25 * t253;
t288 = t249 * t25 + t253 * t26;
t283 = t253 * t137 - t138 * t249;
t92 = t137 * t249 + t138 * t253;
t279 = 0.2e1 * t311 + qJD(2);
t105 = qJ(4) * t366 - t354;
t278 = -t181 * t343 - t182 * t345 + t185 * t255 - t251 * t187;
t136 = -t299 + (qJD(3) * t378 + t321) * t255;
t38 = pkin(4) * t136 - t278 - t285;
t135 = qJD(3) * t195 + t251 * t321;
t265 = -qJ(4) * t136 - qJD(4) * t195 + t188;
t43 = t135 * t399 + t265;
t275 = t250 * t38 + t254 * t43 + t76 * t341 - t342 * t85;
t274 = -t162 * t308 - t119;
t271 = -t224 * t97 - t304;
t270 = -t181 * t345 + t182 * t343 + t251 * t185 + t255 * t187;
t264 = -t162 ^ 2 * t254 + t364;
t86 = -pkin(4) * t194 - t105;
t263 = -qJD(5) * t395 - t250 * t43 + t254 * t38;
t262 = -t126 - t372;
t47 = -qJ(4) * t324 + qJD(4) * t366 - t270;
t39 = -pkin(4) * t135 - t47;
t241 = pkin(5) * t250 + qJ(4);
t218 = -pkin(3) * t255 + t317;
t193 = pkin(5) * t361 + t226;
t190 = t203 * t255;
t189 = t282 * t255;
t121 = t126 * t251;
t112 = pkin(3) * t169 + t377;
t110 = -pkin(3) * t326 - t309;
t107 = t126 * t195;
t104 = t194 * pkin(3) + t260;
t88 = pkin(3) * t224 - t358;
t82 = qJD(5) * t137 + t135 * t250 + t254 * t324;
t81 = -t135 * t254 - qJD(5) * t329 + (qJD(5) * t194 + t324) * t250;
t53 = pkin(3) * t135 + t265;
t52 = -pkin(3) * t324 - t278;
t51 = -pkin(5) * t137 + t86;
t44 = pkin(3) * t127 + t266;
t21 = pkin(5) * t81 + t39;
t20 = qJD(6) * t92 + t249 * t82 + t253 * t81;
t19 = qJD(6) * t283 - t249 * t81 + t253 * t82;
t15 = pkin(5) * t60 + t30;
t11 = -pkin(11) * t81 + t275;
t9 = t14 * t253 - t18 * t249;
t6 = pkin(5) * t136 - pkin(11) * t82 + t263;
t3 = [0, 0, 0, t252 * t256 * t306, -t351 * t306, t279 * t321, -t279 * t324, 0, -t179 * t378 - t188 * t280 + t252 * t294, -t178 * t378 - t187 * t280 + t256 * t294, t136 * t169 - t107, t126 * t194 - t127 * t195 - t135 * t169 - t136 * t167, -t136 * t224 + (t126 * t256 + (qJD(1) * t195 + t169) * t348) * t248, t135 * t224 + (t127 * t256 + (-qJD(1) * t194 - t167) * t348) * t248 (-t224 * t248 - t245 * t349) * t348, -t278 * t224 + t188 * t167 + t180 * t127 + t179 * t194 + t146 * t135 + (t304 * t256 + (qJD(1) * t310 - t96) * t348) * t248, t270 * t224 + t188 * t169 - t180 * t126 + t179 * t195 + t146 * t136 + (-t305 * t256 + (-qJD(1) * t354 - t97) * t348) * t248, t105 * t127 - t106 * t126 + t135 * t90 + t136 * t88 + t167 * t47 + t169 * t52 + t194 * t42 + t195 * t45, -t104 * t127 - t135 * t84 - t167 * t53 - t194 * t44 - t224 * t52 + (-t256 * t45 + (qJD(1) * t106 + t88) * t348) * t248, t104 * t126 - t136 * t84 - t169 * t53 - t195 * t44 + t224 * t47 + (t256 * t42 + (-qJD(1) * t105 - t90) * t348) * t248, t104 * t44 + t105 * t42 + t106 * t45 + t47 * t90 + t52 * t88 + t53 * t84, t124 * t82 + t138 * t59, -t122 * t82 - t124 * t81 + t137 * t59 - t138 * t60, t124 * t136 - t126 * t138 + t162 * t82 + t195 * t59, -t122 * t136 - t126 * t137 - t162 * t81 - t195 * t60, t136 * t162 - t107, t39 * t122 - t126 * t313 + t22 * t136 - t30 * t137 + t162 * t263 + t8 * t195 + t86 * t60 + t61 * t81, t39 * t124 + t126 * t395 - t23 * t136 + t30 * t138 - t162 * t275 - t7 * t195 + t86 * t59 + t61 * t82, t12 * t92 - t19 * t284, t12 * t283 - t19 * t65 + t20 * t284 + t261 * t92, t12 * t195 - t126 * t92 - t136 * t284 + t151 * t19, -t126 * t283 - t136 * t65 - t151 * t20 + t195 * t261, t136 * t151 - t107 (-qJD(6) * t288 - t11 * t249 + t253 * t6) * t151 - t289 * t126 + t2 * t195 + t9 * t136 + t21 * t65 - t51 * t261 - t15 * t283 + t40 * t20 -(qJD(6) * t289 + t11 * t253 + t249 * t6) * t151 + t288 * t126 - t1 * t195 - t10 * t136 - t21 * t284 + t51 * t12 + t15 * t92 + t40 * t19; 0, 0, 0, -t256 * t331, t351 * t368, -t248 * t258 * t312, t280 * t326 - t227, 0, pkin(1) * t331 + t186 * t280 - t179, pkin(8) * t227 + t183 * t280 + (-qJD(2) * t311 + t368) * t256 * pkin(1), -t169 * t273 - t121 (-t126 + t372) * t255 + (-t127 + t370) * t251, -t224 * t343 + (t224 * t360 + (t251 * qJD(2) - t169) * t252) * t350, t224 * t345 + (-t224 * t363 + (t167 + t347) * t252) * t350, t224 * t326, -pkin(2) * t127 - t179 * t255 + t309 * t224 - t186 * t167 + (t146 * t251 + t334) * qJD(3) + (t96 * t252 + (-t146 * t256 - t333) * t251) * t350, pkin(2) * t126 + t179 * t251 - t353 * t224 - t186 * t169 + (t146 * t255 - t335) * qJD(3) + (-t146 * t360 + (t97 - t332) * t252) * t350, -t108 * t167 - t110 * t169 + (-t42 - t224 * t88 + (-t127 + t346) * pkin(9)) * t255 + ((qJD(3) * t167 - t126) * pkin(9) + t408) * t251, t110 * t224 - t127 * t218 + t255 * t44 + t355 * t167 + (-t251 * t84 - t334) * qJD(3) + (-t252 * t88 + (t256 * t84 + t333) * t251) * t350, -t108 * t224 + t126 * t218 - t251 * t44 + t355 * t169 + (-t255 * t84 + t335) * qJD(3) + (t84 * t360 + (t90 + t332) * t252) * t350, -t108 * t90 - t110 * t88 + t218 * t44 - t355 * t84 + (t251 * t45 - t255 * t42 + (t251 * t90 + t255 * t88) * qJD(3)) * pkin(9), -t250 * t255 * t59 + (-t254 * t340 + t291) * t124, t122 * t156 + t124 * t155 + (-t122 * t250 + t124 * t254) * t345 + (t250 * t60 - t389 + (t122 * t254 + t124 * t250) * qJD(5)) * t255, t251 * t59 + t291 * t162 + (-t162 * t341 + t364 - t373) * t255, -t251 * t60 + t415 * t162 + (t162 * t342 + t119 + t375) * t255, -t162 * t273 - t121 -(-t198 * t250 + t206) * t126 + t226 * t60 - t61 * t155 + (-t344 * t61 + t8) * t251 + (-t198 * t341 + (-qJD(5) * t225 + t416) * t250 + t409) * t162 + t382 * t122 + (-t22 * t224 - t342 * t61 + t387) * t255, t352 * t126 + t226 * t59 - t61 * t156 + (qJD(3) * t250 * t61 - t7) * t251 + t406 * t162 + t382 * t124 + (t224 * t23 - t341 * t61 - t388) * t255, -t12 * t190 - t284 * t380, t12 * t189 - t190 * t261 + t284 * t379 - t380 * t65, t12 * t251 + t126 * t190 + t151 * t380 + t273 * t284, -t126 * t189 - t151 * t379 + t251 * t261 + t273 * t65, -t151 * t273 - t121 -(t114 * t253 - t125 * t249) * t126 + t2 * t251 - t193 * t261 - t15 * t189 + t383 * t65 + t379 * t40 - t9 * t273 + (t249 * t296 - t253 * t295) * t151 (t114 * t249 + t125 * t253) * t126 - t1 * t251 + t193 * t12 - t15 * t190 - t383 * t284 + t380 * t40 + (t249 * t295 + t253 * t296) * t151 + t10 * t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t371, -t167 ^ 2 + t400, t262, -t370 - t127, t227, -t146 * t169 + t271, t146 * t167 + t224 * t96 + t305, pkin(3) * t126 - qJ(4) * t127 + (-t90 - t97) * t169 + (t88 + t358) * t167, t112 * t167 - t271 - 0.2e1 * t287 + t392, t112 * t169 - t167 * t84 + t224 * t358 + 0.2e1 * t219 + t286, -pkin(3) * t45 - qJ(4) * t42 - t112 * t84 + t358 * t90 - t88 * t97, -t124 * t308 + t389 (-t60 - t374) * t254 + (-t59 + t376) * t250, t124 * t167 + t274, -t122 * t167 + t264, t162 * t167, qJ(4) * t60 + t22 * t167 + t388 + (-t70 + (t89 + t339) * t250) * t162 + t357 * t122 + t402 * t254, qJ(4) * t59 - t23 * t167 + t387 + (t254 * t339 + t394) * t162 + t357 * t124 - t402 * t250, -t12 * t282 - t284 * t385, -t12 * t203 - t261 * t282 + t284 * t384 - t385 * t65, -t167 * t284 + t404, -t167 * t65 + t420, t151 * t167 -(t215 * t249 - t216 * t253) * t126 - t241 * t261 + t15 * t203 + t9 * t167 + t381 * t65 + t384 * t40 + (t249 * t292 - t253 * t293) * t151 (-t215 * t253 - t216 * t249) * t126 + t241 * t12 - t15 * t282 - t10 * t167 - t381 * t284 + t385 * t40 + (t249 * t293 + t253 * t292) * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, t227 - t371, -t224 ^ 2 - t400, t392 + t408, 0, 0, 0, 0, 0, t274 + t375, t264 + t373, 0, 0, 0, 0, 0, t224 * t65 + t404, -t224 * t284 + t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124 * t122, -t122 ^ 2 + t124 ^ 2, t59 + t376, t374 - t60, -t126, -t124 * t61 + t162 * t23 + t8, t122 * t61 + t162 * t22 - t7, -t418, t413, t411, t410, -t126 -(-t17 * t249 - t391) * t151 + (-t124 * t65 - t126 * t253 - t151 * t338) * pkin(5) + t412, t419 + t16 + (-t151 * t18 - t4) * t249 + (t151 * t17 - t315) * t253 + (t124 * t284 + t126 * t249 - t151 * t337) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, t413, t411, t410, -t126, t10 * t151 + t412, t151 * t9 - t1 + t419;];
tauc_reg  = t3;
