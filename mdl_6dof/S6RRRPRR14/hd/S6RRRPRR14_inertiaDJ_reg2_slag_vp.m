% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR14_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR14_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR14_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR14_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:20:36
% EndTime: 2019-03-09 20:21:04
% DurationCPUTime: 11.72s
% Computational Cost: add. (11288->563), mult. (28341->988), div. (0->0), fcn. (27060->10), ass. (0->278)
t135 = sin(qJ(3));
t133 = sin(pkin(6));
t139 = cos(qJ(2));
t302 = qJD(2) * t139;
t267 = t133 * t302;
t237 = t135 * t267;
t138 = cos(qJ(3));
t136 = sin(qJ(2));
t311 = t133 * t136;
t314 = cos(pkin(6));
t92 = t135 * t314 + t138 * t311;
t170 = t92 * qJD(3) + t237;
t251 = t314 * t138;
t282 = t135 * t311;
t194 = -t251 + t282;
t364 = 0.2e1 * t170 * t194;
t124 = qJD(3) * t138;
t274 = t136 * t124;
t197 = t135 * t302 + t274;
t249 = t314 * qJD(3);
t230 = t135 * t249;
t250 = qJD(2) * t314;
t231 = t136 * t250;
t304 = qJD(2) * t135;
t332 = 0.2e1 * t133;
t334 = t136 ^ 2;
t363 = (t133 * (t139 * t197 - t304 * t334) + t138 * t231 + t139 * t230) * t332;
t134 = sin(qJ(5));
t330 = pkin(3) + pkin(10);
t356 = pkin(11) + t330;
t106 = t356 * t134;
t284 = t330 * t135;
t312 = qJ(4) * t138;
t362 = t284 - t312;
t125 = t138 * pkin(9);
t322 = pkin(9) * t135;
t341 = qJD(3) * t194;
t67 = -qJD(3) * t282 + (t249 + t267) * t138;
t53 = t124 * t92 + t135 * t67;
t361 = pkin(9) * t53 - t125 * t170 + t322 * t341;
t301 = qJD(3) * t135;
t360 = -t135 * t170 - t301 * t92 + (-t341 + t67) * t138;
t359 = -0.2e1 * t170 * t92 - 0.2e1 * t194 * t67;
t137 = cos(qJ(5));
t327 = cos(qJ(6));
t279 = t327 * t134;
t326 = sin(qJ(6));
t101 = t137 * t326 + t279;
t277 = t326 * t134;
t278 = t327 * t137;
t102 = t278 - t277;
t340 = qJD(5) + qJD(6);
t65 = t340 * t101;
t252 = t326 * qJD(5);
t234 = t134 * t252;
t253 = t327 * qJD(6);
t255 = qJD(6) * t326;
t66 = -t234 - t134 * t255 + (qJD(5) * t327 + t253) * t137;
t357 = (qJD(6) * (t101 * t327 - t102 * t326) + t326 * t66 - t327 * t65) * pkin(5);
t355 = t138 * t330;
t303 = qJD(2) * t136;
t119 = t133 * t303;
t316 = t92 * qJ(4);
t280 = pkin(1) * t314;
t242 = t139 * t280;
t189 = -pkin(2) * t314 - t242;
t289 = pkin(8) * t311;
t82 = t189 + t289;
t50 = pkin(3) * t194 - t316 + t82;
t153 = pkin(10) * t194 + t50;
t191 = -t242 + t289;
t181 = t191 * qJD(2);
t281 = -pkin(9) * t136 - pkin(1);
t216 = -pkin(2) * t139 + t281;
t205 = t216 * t133;
t351 = -qJD(3) * t205 + t181;
t243 = t136 * t280;
t188 = pkin(9) * t314 + t243;
t310 = t133 * t139;
t288 = pkin(8) * t310;
t176 = t188 + t288;
t352 = qJD(3) * t176 - qJD(2) * t133 * (pkin(2) * t136 - pkin(9) * t139);
t148 = -t135 * t351 + t138 * t352;
t246 = pkin(3) * t119;
t25 = t148 - t246;
t354 = t67 * pkin(4) - pkin(10) * t119 - qJD(5) * t153 + t25;
t179 = t135 * t188;
t174 = t92 * pkin(4) + t179;
t324 = pkin(8) * t135;
t215 = pkin(2) * t138 + pkin(3) + t324;
t195 = (pkin(10) + t215) * t139;
t232 = t138 * t281;
t155 = (-t232 + t195) * t133 + t174;
t28 = pkin(1) * t231 + pkin(3) * t170 + pkin(8) * t267 - t67 * qJ(4) - t92 * qJD(4);
t353 = -pkin(10) * t170 - qJD(5) * t155 - t28;
t184 = t194 * qJD(5);
t343 = t184 + t119;
t295 = qJD(5) * t137;
t94 = -t124 * t134 - t135 * t295;
t315 = t343 * t134;
t265 = qJD(5) * t310;
t344 = t170 + t265;
t158 = -t137 * t344 + t315;
t173 = t134 * t310 + t137 * t194;
t168 = qJD(5) * t173;
t346 = t134 * t158 - t137 * t168;
t345 = t134 * t168 + t137 * t158;
t300 = qJD(3) * t137;
t259 = t135 * t300;
t294 = qJD(5) * t138;
t272 = t134 * t294;
t196 = t259 + t272;
t269 = t137 * t294;
t342 = t134 * t301 - t269;
t130 = t135 ^ 2;
t132 = t138 ^ 2;
t248 = qJD(3) * (t130 - t132);
t129 = t134 ^ 2;
t131 = t137 ^ 2;
t306 = t129 - t131;
t247 = t306 * qJD(5);
t151 = t134 * t344 + t137 * t343;
t339 = -t137 * t151 - t346;
t113 = pkin(4) * t138 + t125;
t297 = qJD(4) * t138;
t313 = qJ(4) * t135;
t337 = qJD(3) * (t313 + t355) - qJD(5) * t113 - t297;
t335 = -0.2e1 * t138 * t230 + (qJD(3) * t130 * t136 - t138 * t197) * t133;
t333 = -0.2e1 * t133;
t331 = 0.2e1 * qJD(4);
t329 = pkin(4) + pkin(9);
t328 = t67 * pkin(5);
t325 = pkin(3) * t135;
t323 = pkin(9) * t133;
t19 = t134 * t155 + t137 * t153;
t58 = t135 * t205 + t138 * t176;
t320 = t101 * t66;
t319 = t102 * t65;
t317 = t330 * t67;
t233 = pkin(2) + t355;
t204 = -t233 - t313;
t285 = t134 * t329;
t64 = t135 * t285 + t137 * t204;
t309 = t134 * t138;
t308 = t137 * t138;
t299 = qJD(3) * t139;
t298 = qJD(4) * t135;
t296 = qJD(5) * t134;
t293 = qJD(5) * t330;
t292 = t134 * qJD(4);
t59 = 0.2e1 * t92 * t67;
t290 = -0.2e1 * pkin(2) * qJD(3);
t287 = pkin(9) * t301;
t286 = pkin(9) * t124;
t128 = t133 ^ 2;
t276 = t128 * t302;
t273 = t138 * t299;
t271 = t134 * t293;
t268 = t137 * t293;
t266 = qJD(4) * t310;
t263 = t135 * t292;
t262 = t135 * t124;
t258 = t134 * t295;
t257 = qJD(3) * t327;
t256 = qJD(3) * t326;
t254 = t356 * t137;
t245 = pkin(5) * t253;
t244 = pkin(5) * t255;
t241 = t138 * t278;
t240 = t134 * t259;
t239 = t132 * t258;
t238 = t136 * t276;
t236 = t135 * t256;
t235 = t135 * t257;
t6 = -t134 * t354 + t137 * t353;
t7 = t134 * t353 + t137 * t354;
t229 = -t6 * t134 + t7 * t137;
t166 = t326 * t173;
t68 = -t134 * t194 + t137 * t310;
t14 = qJD(6) * t166 + t151 * t326 + t158 * t327 - t253 * t68;
t167 = t327 * t173;
t46 = -t326 * t68 - t167;
t228 = t101 * t14 + t46 * t66;
t49 = -t134 * t236 + t137 * t235 + t138 * t65;
t85 = t138 * t277 - t241;
t227 = -t101 * t49 - t66 * t85;
t226 = -t101 * t67 - t66 * t92;
t13 = -qJD(6) * t167 - t151 * t327 + t158 * t326 - t255 * t68;
t47 = -t327 * t68 + t166;
t225 = -t102 * t13 - t47 * t65;
t48 = t137 * t236 + (t235 + (t252 + t255) * t138) * t134 - t340 * t241;
t86 = t101 * t138;
t224 = t102 * t48 + t65 * t86;
t223 = -pkin(3) * t138 - t313;
t222 = -t319 + t320;
t207 = t134 * qJ(4) + t137 * t329;
t63 = t134 * t233 + t135 * t207;
t221 = -t134 * t63 + t137 * t64;
t114 = qJ(4) * t119;
t30 = t135 * t352 + t138 * t351;
t23 = -t114 + t30 + t266;
t220 = t25 * t135 - t23 * t138;
t219 = t135 * t148 - t30 * t138;
t218 = t138 * t356 + pkin(2);
t51 = qJ(4) * t310 - t58;
t214 = t327 * t254;
t213 = t326 * t254;
t211 = -t139 * t67 + t303 * t92;
t209 = -t134 * t67 - t295 * t92;
t206 = -t101 * t124 - t135 * t66;
t203 = pkin(5) + t207;
t141 = -pkin(11) * t151 + t328 + t7;
t18 = -t134 * (-t330 * t251 + t189 - t316) + t137 * t174 + (t137 * (pkin(1) * t138 + t195) + (-t134 * (pkin(10) * t135 + pkin(8) + t325) + pkin(9) * t308) * t136) * t133;
t144 = t92 * pkin(5) + t68 * pkin(11) + t18;
t143 = t327 * t144;
t145 = -pkin(11) * t158 - t6;
t17 = pkin(11) * t173 + t19;
t1 = -qJD(6) * t143 - t141 * t326 - t145 * t327 + t17 * t255;
t193 = (t137 * qJ(4) - t285) * t135;
t150 = t263 + (t137 * t218 + t193) * qJD(5) + (-t106 * t135 + t138 * t203) * qJD(3);
t41 = t204 * t296 - t137 * (qJD(3) * t362 - t298) + t94 * t329;
t159 = pkin(11) * t196 - t41;
t162 = t134 * t218 + t135 * t203;
t161 = t327 * t162;
t60 = -pkin(11) * t308 + t64;
t10 = -qJD(6) * t161 - t150 * t326 - t159 * t327 + t255 * t60;
t198 = t135 * t299 + t138 * t303;
t98 = t243 + t288;
t104 = t329 * t301;
t190 = qJD(5) * t362 - t104;
t142 = t326 * t144;
t2 = -qJD(6) * t142 + t141 * t327 - t145 * t326 - t17 * t253;
t8 = -t17 * t326 + t143;
t9 = t17 * t327 + t142;
t187 = -t1 * t101 + t102 * t2 - t65 * t8 + t66 * t9;
t78 = t198 * t133;
t160 = t326 * t162;
t11 = -qJD(6) * t160 + t150 * t327 - t159 * t326 - t253 * t60;
t33 = -t326 * t60 + t161;
t34 = t327 * t60 + t160;
t183 = -t10 * t101 + t102 * t11 - t33 * t65 + t34 * t66;
t44 = -t106 * t255 + t214 * t340 - t234 * t356;
t70 = -t106 * t327 - t213;
t45 = -t70 * qJD(6) + (t279 * t356 + t213) * qJD(5);
t69 = t106 * t326 - t214;
t182 = t101 * t44 - t102 * t45 + t65 * t69 - t66 * t70;
t180 = qJD(3) * t223 + t297;
t178 = -t119 * t322 + t273 * t323;
t177 = (-t18 * t134 + t19 * t137) * qJD(5) + t229;
t42 = t263 + (t137 * t233 + t193) * qJD(5) + (-t134 * t284 + t138 * t207) * qJD(3);
t12 = qJD(5) * t221 - t134 * t41 + t137 * t42;
t43 = -pkin(4) * t194 - t51;
t169 = qJD(3) * t173;
t165 = t135 * t169;
t21 = -pkin(4) * t170 - t23;
t127 = qJ(4) * t331;
t122 = pkin(5) * t134 + qJ(4);
t118 = pkin(5) * t295 + qJD(4);
t117 = -0.2e1 * t262;
t116 = 0.2e1 * t262;
t107 = -pkin(2) + t223;
t105 = -0.2e1 * t238;
t100 = -0.2e1 * t248;
t93 = t124 * t137 - t135 * t296;
t91 = pkin(5) * t308 + t113;
t88 = -t298 + (-t312 + t325) * qJD(3);
t84 = qJD(2) * t98;
t77 = (t135 * t303 - t273) * t133;
t73 = -t138 * t247 - t240;
t71 = -pkin(5) * t272 + (-pkin(5) * t137 - t329) * t301;
t57 = -t179 + (t138 * t216 - t139 * t324) * t133;
t55 = t102 * t124 - t135 * t65;
t54 = t137 * t67 - t296 * t92;
t52 = t179 + (t139 * t215 - t232) * t133;
t32 = t102 * t67 - t65 * t92;
t24 = -pkin(5) * t173 + t43;
t15 = pkin(5) * t158 + t21;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t238, 0.2e1 * (t139 ^ 2 - t334) * t128 * qJD(2), 0.2e1 * t250 * t310, t105, t231 * t333, 0, -0.2e1 * pkin(1) * t128 * t303 - 0.2e1 * t314 * t84, -0.2e1 * pkin(1) * t276 + 0.2e1 * t181 * t314, -0.2e1 * t119 * t98 - 0.2e1 * t181 * t310 + 0.2e1 * t191 * t267 + 0.2e1 * t311 * t84, -0.2e1 * t181 * t98 + 0.2e1 * t191 * t84, t59, t359, t211 * t332, t364, t363, t105, 0.2e1 * t119 * t57 + 0.2e1 * t148 * t310 + 0.2e1 * t170 * t82 + 0.2e1 * t194 * t84, 0.2e1 * t67 * t82 + 0.2e1 * t84 * t92 + 0.2e1 * (-t139 * t30 - t303 * t58) * t133, 0.2e1 * t148 * t92 - 0.2e1 * t170 * t58 + 0.2e1 * t194 * t30 - 0.2e1 * t57 * t67, -0.2e1 * t148 * t57 - 0.2e1 * t30 * t58 + 0.2e1 * t82 * t84, t105, t211 * t333, -t363, t59, t359, t364, 0.2e1 * t170 * t51 + 0.2e1 * t194 * t23 + 0.2e1 * t25 * t92 + 0.2e1 * t52 * t67, 0.2e1 * t119 * t52 - 0.2e1 * t170 * t50 - 0.2e1 * t194 * t28 - 0.2e1 * t25 * t310, -0.2e1 * t28 * t92 - 0.2e1 * t50 * t67 + 0.2e1 * (t139 * t23 - t303 * t51) * t133, 0.2e1 * t23 * t51 + 0.2e1 * t25 * t52 + 0.2e1 * t28 * t50, -0.2e1 * t68 * t151, 0.2e1 * t151 * t173 + 0.2e1 * t158 * t68, 0.2e1 * t151 * t92 - 0.2e1 * t67 * t68, -0.2e1 * t173 * t158, -0.2e1 * t158 * t92 + 0.2e1 * t173 * t67, t59, 0.2e1 * t158 * t43 - 0.2e1 * t173 * t21 + 0.2e1 * t18 * t67 + 0.2e1 * t7 * t92, 0.2e1 * t151 * t43 - 0.2e1 * t19 * t67 - 0.2e1 * t21 * t68 + 0.2e1 * t6 * t92, -0.2e1 * t151 * t18 - 0.2e1 * t158 * t19 - 0.2e1 * t173 * t6 + 0.2e1 * t68 * t7, 0.2e1 * t18 * t7 - 0.2e1 * t19 * t6 + 0.2e1 * t21 * t43, -0.2e1 * t47 * t13, 0.2e1 * t13 * t46 - 0.2e1 * t14 * t47, -0.2e1 * t13 * t92 + 0.2e1 * t47 * t67, 0.2e1 * t46 * t14, -0.2e1 * t14 * t92 - 0.2e1 * t46 * t67, t59, 0.2e1 * t14 * t24 + 0.2e1 * t15 * t46 + 0.2e1 * t2 * t92 + 0.2e1 * t67 * t8, 0.2e1 * t1 * t92 - 0.2e1 * t13 * t24 + 0.2e1 * t15 * t47 - 0.2e1 * t67 * t9, 0.2e1 * t1 * t46 + 0.2e1 * t13 * t8 - 0.2e1 * t14 * t9 - 0.2e1 * t2 * t47, -0.2e1 * t1 * t9 + 0.2e1 * t15 * t24 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, 0, -t119, 0, -t84, t181, 0, 0, t53, t360, t77, t335, t78, 0, -pkin(2) * t170 - t84 * t138 + t301 * t82 + t178, -pkin(2) * t67 + t124 * t82 + t135 * t84 - t198 * t323, -t124 * t57 - t301 * t58 + t219 + t361, -pkin(2) * t84 + ((-t58 * t135 - t57 * t138) * qJD(3) + t219) * pkin(9), 0, -t77, -t78, t53, t360, t335, t124 * t52 + t301 * t51 + t220 + t361, -t107 * t170 + t28 * t138 - t194 * t88 - t301 * t50 - t178, pkin(9) * t78 - t107 * t67 - t124 * t50 - t135 * t28 - t88 * t92, t107 * t28 + t50 * t88 + ((t51 * t135 + t52 * t138) * qJD(3) + t220) * pkin(9), t68 * t269 + (-t68 * t301 - (t133 * t274 + t230 + t237 + t265) * t309 - t343 * t308) * t134, t134 * t165 + t138 * t346 - t151 * t308 - t196 * t68, -t124 * t68 + t135 * t151 - t309 * t67 + t342 * t92, t137 * t165 + t138 * t345, -t135 * t158 + t138 * t169 + t196 * t92 - t308 * t67, t53, t104 * t173 + t113 * t158 + t124 * t18 + t7 * t135 - t196 * t43 + t21 * t308 + t42 * t92 + t63 * t67, t104 * t68 + t113 * t151 - t124 * t19 + t6 * t135 - t21 * t309 + t342 * t43 + t41 * t92 - t64 * t67, -t151 * t63 - t158 * t64 - t173 * t41 - t18 * t342 + t19 * t196 + t308 * t6 + t309 * t7 + t42 * t68, -t104 * t43 + t113 * t21 + t18 * t42 - t19 * t41 - t6 * t64 + t63 * t7, t13 * t86 + t47 * t48, -t13 * t85 + t14 * t86 - t46 * t48 + t47 * t49, t124 * t47 - t13 * t135 + t48 * t92 - t67 * t86, -t14 * t85 - t46 * t49, -t124 * t46 - t135 * t14 + t49 * t92 + t67 * t85, t53, t11 * t92 + t124 * t8 + t135 * t2 + t14 * t91 - t15 * t85 - t24 * t49 + t33 * t67 + t46 * t71, t1 * t135 + t10 * t92 - t124 * t9 - t13 * t91 - t15 * t86 + t24 * t48 - t34 * t67 + t47 * t71, -t1 * t85 + t10 * t46 - t11 * t47 + t13 * t33 - t14 * t34 + t2 * t86 - t48 * t8 + t49 * t9, -t1 * t34 - t10 * t9 + t11 * t8 + t15 * t91 + t2 * t33 + t24 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, t100, 0, t117, 0, 0, t135 * t290, t138 * t290, 0, 0, 0, 0, 0, t116, t100, t117, 0, -0.2e1 * t107 * t301 + 0.2e1 * t138 * t88, -0.2e1 * t107 * t124 - 0.2e1 * t135 * t88, 0.2e1 * t107 * t88, -0.2e1 * t129 * t262 + 0.2e1 * t239, -0.2e1 * t132 * t247 - 0.4e1 * t138 * t240, 0.2e1 * t134 * t248 - 0.2e1 * t135 * t269, -0.2e1 * t131 * t262 - 0.2e1 * t239, 0.2e1 * t135 * t272 + 0.2e1 * t137 * t248, t116, 0.2e1 * (-t113 * t300 + t42) * t135 + 0.2e1 * (qJD(3) * t63 - t104 * t137 - t113 * t296) * t138, 0.2e1 * (qJD(3) * t113 * t134 + t41) * t135 + 0.2e1 * (-qJD(3) * t64 + t104 * t134 - t113 * t295) * t138, 0.2e1 * t221 * t301 + 0.2e1 * (t134 * t42 + t137 * t41 + (t134 * t64 + t137 * t63) * qJD(5)) * t138, -0.2e1 * t104 * t113 - 0.2e1 * t41 * t64 + 0.2e1 * t42 * t63, -0.2e1 * t86 * t48, 0.2e1 * t48 * t85 - 0.2e1 * t49 * t86, -0.2e1 * t124 * t86 + 0.2e1 * t135 * t48, 0.2e1 * t85 * t49, 0.2e1 * t124 * t85 + 0.2e1 * t135 * t49, t116, 0.2e1 * t11 * t135 + 0.2e1 * t124 * t33 - 0.2e1 * t49 * t91 - 0.2e1 * t71 * t85, 0.2e1 * t10 * t135 - 0.2e1 * t124 * t34 + 0.2e1 * t48 * t91 - 0.2e1 * t71 * t86, -0.2e1 * t10 * t85 + 0.2e1 * t11 * t86 - 0.2e1 * t33 * t48 + 0.2e1 * t34 * t49, -0.2e1 * t10 * t34 + 0.2e1 * t11 * t33 + 0.2e1 * t71 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, -t170, t119, -t148, t30, 0, 0, t119, -t67, t170, 0, 0, 0, -pkin(3) * t67 - qJ(4) * t170 - qJD(4) * t194, t148 - 0.2e1 * t246, 0.2e1 * t114 - t30 - 0.2e1 * t266, -pkin(3) * t25 - qJ(4) * t23 - qJD(4) * t51 (t134 * t230 + (t134 * t197 + t137 * t303) * t133) * t137 + (t134 * t68 + t137 * t173) * qJD(5), -t134 * t151 + t295 * t68 - t345, t54, -t131 * t184 + (t315 + (-t230 + (-t274 + (-0.2e1 * qJD(5) - t304) * t139) * t133) * t137) * t134, t209, 0, qJ(4) * t158 - qJD(4) * t173 + t21 * t134 - t137 * t317 + t271 * t92 + t295 * t43, qJ(4) * t151 - qJD(4) * t68 + t134 * t317 + t21 * t137 + t268 * t92 - t296 * t43, t18 * t296 - t19 * t295 + t271 * t68 - t330 * t339 - t229, t21 * qJ(4) + t43 * qJD(4) - t177 * t330, t225, t101 * t13 - t102 * t14 + t46 * t65 - t47 * t66, t32, t228, t226, 0, t101 * t15 + t118 * t46 + t122 * t14 + t24 * t66 + t45 * t92 + t67 * t69, t102 * t15 + t118 * t47 - t122 * t13 - t24 * t65 + t44 * t92 - t67 * t70, t13 * t69 - t14 * t70 + t44 * t46 - t45 * t47 - t187, -t1 * t70 + t118 * t24 + t122 * t15 + t2 * t69 - t44 * t9 + t45 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, -t301, 0, -t286, t287, 0, 0, 0, -t124, t301, 0, 0, 0, t180, t286, -t287, t180 * pkin(9), -t73, 0.4e1 * t138 * t258 - t301 * t306, t93, t73, t94, 0, t134 * t190 - t137 * t337, t134 * t337 + t137 * t190, -t12, -t104 * qJ(4) + t113 * qJD(4) - t12 * t330, t224, -t101 * t48 + t102 * t49 - t65 * t85 + t66 * t86, t55, t227, t206, 0, t101 * t71 - t118 * t85 - t122 * t49 + t124 * t69 + t135 * t45 + t66 * t91, t102 * t71 - t118 * t86 + t122 * t48 - t124 * t70 + t135 * t44 - t65 * t91, -t44 * t85 + t45 * t86 - t48 * t69 + t49 * t70 - t183, -t10 * t70 + t11 * t69 + t118 * t91 + t122 * t71 + t33 * t45 - t34 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, t127, -0.2e1 * t258, 0.2e1 * t247, 0, 0.2e1 * t258, 0, 0, 0.2e1 * qJ(4) * t295 + 0.2e1 * t292, -0.2e1 * qJ(4) * t296 + 0.2e1 * qJD(4) * t137, 0, t127, -0.2e1 * t319, 0.2e1 * t101 * t65 - 0.2e1 * t102 * t66, 0, 0.2e1 * t320, 0, 0, 0.2e1 * t101 * t118 + 0.2e1 * t122 * t66, 0.2e1 * t102 * t118 - 0.2e1 * t122 * t65, 0.2e1 * t182, 0.2e1 * t118 * t122 - 0.2e1 * t44 * t70 + 0.2e1 * t45 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t119, 0, t25, 0, 0, 0, 0, 0, 0, t54, t209, -t296 * t68 + t339, t177, 0, 0, 0, 0, 0, 0, t32, t226, -t225 - t228, t187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, 0, t286, 0, 0, 0, 0, 0, 0, t93, t94, 0, t12, 0, 0, 0, 0, 0, 0, t55, t206, -t224 - t227, t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t222, -t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, 0, -t158, t67, t7, t6, 0, 0, 0, 0, -t13, 0, -t14, t67, -t244 * t92 + t327 * t328 + t2 (-t253 * t92 - t326 * t67) * pkin(5) + t1 (t327 * t13 - t326 * t14 + (t326 * t47 - t327 * t46) * qJD(6)) * pkin(5) (t327 * t2 - t326 * t1 + (-t326 * t8 + t327 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, 0, t196, t124, t42, t41, 0, 0, 0, 0, t48, 0, t49, t124, pkin(5) * t138 * t257 - t135 * t244 + t11 (-t135 * t253 - t138 * t256) * pkin(5) + t10 (-t327 * t48 + t326 * t49 + (-t326 * t86 + t327 * t85) * qJD(6)) * pkin(5) (t327 * t11 - t326 * t10 + (-t326 * t33 + t327 * t34) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, 0, -t295, 0, t271, t268, 0, 0, 0, 0, -t65, 0, -t66, 0, t45, t44, -t357 (t327 * t45 - t326 * t44 + (-t326 * t69 + t327 * t70) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, -t295, 0, 0, 0, 0, 0, 0, 0, 0, -t65, -t66, 0, t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t244, -0.2e1 * t245, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, 0, -t14, t67, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, t49, t124, t11, t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, -t66, 0, t45, t44, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, -t66, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244, -t245, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
