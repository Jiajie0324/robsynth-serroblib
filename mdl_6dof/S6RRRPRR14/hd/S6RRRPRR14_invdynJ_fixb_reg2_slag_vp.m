% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRR14_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR14_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR14_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR14_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR14_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR14_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:20:44
% EndTime: 2019-03-09 20:21:29
% DurationCPUTime: 25.46s
% Computational Cost: add. (25529->945), mult. (60287->1217), div. (0->0), fcn. (47682->14), ass. (0->412)
t352 = sin(qJ(3));
t349 = sin(pkin(6));
t357 = cos(qJ(2));
t512 = qJD(1) * t357;
t483 = t349 * t512;
t447 = t352 * t483;
t509 = qJD(3) * t352;
t641 = qJD(4) * t352 + (t447 - t509) * pkin(3);
t565 = cos(pkin(6));
t464 = t565 * qJD(1);
t444 = pkin(1) * t464;
t353 = sin(qJ(2));
t513 = qJD(1) * t349;
t484 = t353 * t513;
t252 = -pkin(8) * t484 + t357 * t444;
t436 = pkin(2) * t353 - pkin(9) * t357;
t253 = t436 * t513;
t356 = cos(qJ(3));
t168 = -t352 * t252 + t253 * t356;
t507 = qJD(3) * t356;
t529 = t356 * t357;
t594 = pkin(4) + pkin(9);
t595 = pkin(3) + pkin(10);
t640 = -(pkin(4) * t529 - t353 * t595) * t513 + t168 + t594 * t507;
t466 = t353 * t565;
t335 = pkin(1) * t466;
t561 = qJ(4) * t356;
t429 = pkin(10) * t352 - t561;
t535 = t349 * t357;
t639 = (t335 + (pkin(8) + t429) * t535) * qJD(1) - qJD(3) * t429 + t641;
t351 = sin(qJ(5));
t355 = cos(qJ(5));
t222 = t351 * t484 - t355 * t447;
t508 = qJD(3) * t355;
t638 = t352 * t508 + t222;
t504 = qJD(5) * t356;
t479 = t351 * t504;
t637 = -t479 - t638;
t562 = qJ(4) * t352;
t469 = -pkin(2) - t562;
t278 = -t356 * t595 + t469;
t311 = t594 * t352;
t505 = qJD(5) * t355;
t506 = qJD(5) * t351;
t571 = -t278 * t506 + t311 * t505 + t640 * t351 - t639 * t355;
t636 = t639 * t351 + t640 * t355;
t350 = sin(qJ(6));
t592 = cos(qJ(6));
t285 = t350 * t355 + t351 * t592;
t607 = qJD(5) + qJD(6);
t189 = t607 * t285;
t419 = t464 + qJD(2);
t234 = t352 * t419 + t356 * t484;
t610 = t285 * t234 + t189;
t225 = qJD(5) + t234;
t232 = t352 * t484 - t356 * t419;
t309 = -qJD(3) + t483;
t176 = t232 * t351 - t309 * t355;
t516 = pkin(8) * t535 + t335;
t248 = t565 * pkin(9) + t516;
t214 = qJD(2) * pkin(9) + t248 * qJD(1);
t416 = -pkin(2) * t357 - pkin(9) * t353 - pkin(1);
t224 = t416 * t513;
t132 = t214 * t352 - t356 * t224;
t502 = -qJD(4) - t132;
t527 = pkin(4) * t234 - t502;
t76 = t309 * t595 + t527;
t213 = -pkin(2) * t419 - t252;
t365 = -t234 * qJ(4) + t213;
t81 = t232 * t595 + t365;
t42 = -t351 * t81 + t355 * t76;
t36 = -pkin(11) * t176 + t42;
t29 = pkin(5) * t225 + t36;
t174 = -t232 * t355 - t351 * t309;
t43 = t351 * t76 + t355 * t81;
t37 = -pkin(11) * t174 + t43;
t476 = t592 * qJD(6);
t503 = qJD(6) * t350;
t393 = qJD(3) * t419;
t456 = t565 * qJDD(1);
t413 = t456 + qJDD(2);
t538 = t349 * t353;
t494 = t352 * t538;
t445 = qJD(3) * t494;
t500 = qJDD(1) * t353;
t472 = t349 * t500;
t501 = qJD(1) * qJD(2);
t473 = t357 * t501;
t625 = t349 * t473 + t472;
t134 = qJD(1) * t445 - t352 * t413 + (-t393 - t625) * t356;
t131 = -qJDD(5) + t134;
t510 = qJD(2) * t357;
t135 = t349 * (qJD(1) * (t352 * t510 + t353 * t507) + t352 * t500) + t352 * t393 - t356 * t413;
t499 = qJDD(1) * t357;
t324 = t349 * t499;
t474 = t353 * t501;
t442 = t349 * t474;
t250 = qJDD(3) - t324 + t442;
t71 = -t351 * t135 - t232 * t505 - t355 * t250 - t309 * t506;
t414 = qJD(2) * t444;
t439 = pkin(1) * t456;
t488 = pkin(8) * t324 + t353 * t439 + t357 * t414;
t177 = -pkin(8) * t442 + t488;
t160 = pkin(9) * t413 + t177;
t405 = qJD(2) * t436;
t165 = (qJD(1) * t405 + qJDD(1) * t416) * t349;
t452 = t352 * t160 - t356 * t165 + t214 * t507 + t224 * t509;
t417 = qJDD(4) + t452;
t32 = -pkin(4) * t134 - t250 * t595 + t417;
t450 = pkin(8) * t625 + t353 * t414 - t357 * t439;
t161 = -pkin(2) * t413 + t450;
t364 = t134 * qJ(4) - t234 * qJD(4) + t161;
t38 = t135 * t595 + t364;
t9 = -t43 * qJD(5) + t355 * t32 - t351 * t38;
t6 = -pkin(5) * t131 + pkin(11) * t71 + t9;
t406 = -t351 * t32 - t355 * t38 - t76 * t505 + t506 * t81;
t492 = t232 * t506 + t351 * t250 - t309 * t505;
t412 = t355 * t135 - t492;
t7 = pkin(11) * t412 - t406;
t1 = t29 * t476 + t350 * t6 - t37 * t503 + t592 * t7;
t575 = t350 * t37;
t11 = t29 * t592 - t575;
t497 = t592 * t37;
t12 = t350 * t29 + t497;
t2 = -qJD(6) * t12 - t350 * t7 + t592 * t6;
t286 = -t350 * t351 + t592 * t355;
t354 = sin(qJ(1));
t593 = cos(qJ(1));
t438 = t565 * t593;
t271 = t353 * t438 + t354 * t357;
t487 = t349 * t593;
t201 = t271 * t352 + t356 * t487;
t273 = -t354 * t466 + t357 * t593;
t536 = t349 * t356;
t205 = t273 * t352 - t354 * t536;
t268 = -t356 * t565 + t494;
t395 = g(1) * t205 + g(2) * t201 + g(3) * t268;
t627 = t350 * t506 + t351 * t503 - (qJD(5) * t592 + t476) * t355 - t286 * t234;
t635 = t1 * t285 - t11 * t610 - t12 * t627 + t2 * t286 - t395;
t404 = -t350 * t174 + t176 * t592;
t24 = qJD(6) * t404 - t350 * t71 - t592 * t412;
t90 = t592 * t174 + t176 * t350;
t634 = t24 * t285 - t627 * t90;
t128 = -qJDD(6) + t131;
t218 = qJD(6) + t225;
t633 = t128 * t285 + t218 * t627;
t532 = t352 * t357;
t389 = (t351 * t532 + t353 * t355) * t349;
t223 = qJD(1) * t389;
t287 = t351 * t311;
t468 = pkin(11) * t356 - t278;
t482 = t356 * t512;
t533 = t351 * t352;
t632 = -pkin(5) * t349 * t482 + pkin(11) * t223 + (pkin(5) * t356 - pkin(11) * t533) * qJD(3) + (t355 * t468 - t287) * qJD(5) + t636;
t631 = t637 * pkin(11) - t571;
t582 = t90 * t404;
t563 = qJ(4) * t232;
t119 = t234 * t595 + t563;
t580 = pkin(11) + t595;
t587 = pkin(11) * t234;
t133 = t214 * t356 + t224 * t352;
t100 = -pkin(4) * t232 + t133;
t95 = t355 * t100;
t630 = t580 * t506 + pkin(5) * t232 - t95 - (-t119 - t587) * t351;
t299 = t580 * t355;
t55 = t351 * t100 + t355 * t119;
t629 = qJD(5) * t299 + t355 * t587 + t55;
t549 = t234 * t309;
t628 = t135 + t549;
t626 = -t42 * t225 - t406;
t465 = t357 * t565;
t276 = pkin(1) * t465 - pkin(8) * t538;
t256 = qJD(2) * t276;
t624 = t404 ^ 2 - t90 ^ 2;
t23 = t174 * t476 + t176 * t503 - t350 * t412 + t592 * t71;
t623 = t218 * t90 - t23;
t272 = t353 * t593 + t354 * t465;
t348 = qJ(5) + qJ(6);
t340 = sin(t348);
t341 = cos(t348);
t145 = t205 * t340 + t272 * t341;
t270 = t353 * t354 - t357 * t438;
t620 = t201 * t340 + t270 * t341;
t294 = t309 * qJ(4);
t82 = t100 - t294;
t63 = pkin(5) * t174 + t82;
t622 = t63 * t90 + g(1) * t145 + g(2) * t620 - g(3) * (-t268 * t340 + t341 * t535) - t1;
t619 = t201 * t341 - t270 * t340;
t618 = t201 * t351 + t270 * t355;
t617 = t201 * t355 - t270 * t351;
t616 = -t23 * t286 - t404 * t610;
t345 = t349 ^ 2;
t614 = 0.2e1 * t345;
t613 = t43 * t225 + t9;
t457 = t174 * t225;
t612 = t71 - t457;
t258 = t286 * t356;
t188 = t355 * t278 + t287;
t553 = t176 * t225;
t609 = t412 + t553;
t608 = (qJDD(2) + 0.2e1 * t456) * t349;
t257 = t516 * qJD(2);
t154 = t205 * t355 - t272 * t351;
t197 = t268 * t355 + t351 * t535;
t606 = -g(1) * t154 - g(2) * t617 - g(3) * t197;
t605 = -t131 * t595 - t225 * t82;
t144 = t205 * t341 - t272 * t340;
t604 = -t63 * t404 - g(1) * t144 - g(2) * t619 - g(3) * (t268 * t341 + t340 * t535) + t2;
t603 = t218 * t404 - t24;
t602 = -t286 * t128 - t610 * t218;
t269 = t352 * t565 + t353 * t536;
t478 = t349 * t510;
t195 = qJD(3) * t269 + t352 * t478;
t511 = qJD(2) * t353;
t601 = t349 * (-t135 * t357 + t232 * t511) - t195 * t309 + t250 * t268;
t196 = -t445 + (qJD(3) * t565 + t478) * t356;
t600 = t349 * (t134 * t357 + t234 * t511) - t196 * t309 + t250 * t269;
t599 = -t250 * t356 - t309 * t509 + (-t232 * t353 + t309 * t532) * t513;
t598 = t250 * t352 - t309 * t507 + (-t234 * t353 + t309 * t529) * t513;
t596 = t234 ^ 2;
t360 = qJD(1) ^ 2;
t591 = pkin(3) * t250;
t590 = pkin(9) * t250;
t589 = pkin(9) * t270;
t588 = pkin(9) * t272;
t584 = g(3) * t349;
t583 = t268 * pkin(10);
t338 = pkin(5) * t355 + pkin(4);
t581 = pkin(9) + t338;
t288 = t355 * t311;
t170 = pkin(5) * t352 + t351 * t468 + t288;
t531 = t355 * t356;
t179 = -pkin(11) * t531 + t188;
t87 = t170 * t592 - t350 * t179;
t579 = qJD(6) * t87 + t632 * t350 - t631 * t592;
t88 = t350 * t170 + t179 * t592;
t578 = -qJD(6) * t88 + t631 * t350 + t632 * t592;
t574 = t355 * t71;
t517 = pkin(2) * t535 + pkin(9) * t538;
t249 = -pkin(1) * t349 - t517;
t163 = -t352 * t248 + t249 * t356;
t331 = pkin(3) * t535;
t150 = -t163 + t331;
t101 = pkin(4) * t269 + pkin(10) * t535 + t150;
t247 = -pkin(2) * t565 - t276;
t261 = t268 * pkin(3);
t461 = t269 * qJ(4) - t261;
t148 = t247 - t461;
t115 = t148 + t583;
t57 = t351 * t101 + t355 * t115;
t570 = -t188 * qJD(5) + t636;
t298 = t580 * t351;
t199 = t350 * t298 - t299 * t592;
t569 = qJD(6) * t199 + t350 * t630 - t592 * t629;
t200 = -t298 * t592 - t350 * t299;
t568 = -qJD(6) * t200 + t350 * t629 + t592 * t630;
t169 = t356 * t252 + t352 * t253;
t151 = -qJ(4) * t484 - t169;
t125 = -pkin(4) * t447 - t151;
t567 = -t509 * t581 - t125 + (-t222 - t479) * pkin(5);
t566 = pkin(5) * t505 + t234 * t338 - t502;
t564 = qJ(4) * t135;
t120 = -t133 + t294;
t560 = t120 * t309;
t558 = t131 * t351;
t557 = t132 * t309;
t556 = t133 * t309;
t555 = t174 * t309;
t554 = t176 * t174;
t552 = t176 * t309;
t551 = t232 * t234;
t550 = t232 * t309;
t242 = t250 * qJ(4);
t544 = t270 * t356;
t543 = t272 * t356;
t542 = t309 * t356;
t541 = t340 * t352;
t540 = t341 * t352;
t539 = t345 * t360;
t537 = t349 * t354;
t126 = t355 * t131;
t530 = t355 * t357;
t525 = t350 * t222 - t223 * t592 - t607 * t258 + t285 * t509;
t524 = t189 * t356 + t222 * t592 + t223 * t350 + t286 * t509;
t164 = t356 * t248 + t352 * t249;
t519 = -qJ(4) * t507 - (t335 + (pkin(8) - t561) * t535) * qJD(1) - t641;
t518 = -t594 * t509 - t125;
t312 = t594 * t356;
t515 = t593 * pkin(1) + pkin(8) * t537;
t346 = t353 ^ 2;
t347 = t357 ^ 2;
t514 = t346 - t347;
t496 = qJ(4) * t535;
t495 = t357 * t539;
t493 = t349 * t530;
t262 = t270 * pkin(2);
t491 = -pkin(3) * t544 - t270 * t562 - t262;
t264 = t272 * pkin(2);
t490 = -pkin(3) * t543 - t272 * t562 - t264;
t489 = t273 * pkin(2) + t515;
t481 = t349 * t511;
t477 = -t232 ^ 2 + t596;
t475 = pkin(1) * t614;
t470 = -pkin(1) * t354 + pkin(8) * t487;
t337 = pkin(5) * t351 + qJ(4);
t56 = t355 * t101 - t115 * t351;
t191 = t201 * pkin(3);
t202 = t271 * t356 - t352 * t487;
t463 = qJ(4) * t202 - t191;
t193 = t205 * pkin(3);
t206 = t273 * t356 + t352 * t537;
t462 = qJ(4) * t206 - t193;
t459 = t225 ^ 2;
t454 = t353 * t495;
t453 = -t356 * t160 - t352 * t165 + t214 * t509 - t224 * t507;
t451 = t206 * pkin(3) + t489;
t449 = t356 * t331 + t352 * t496 + t517;
t446 = t309 * t484;
t443 = t353 * t473;
t440 = -t271 * pkin(2) + t470;
t437 = t349 * t360 * t565;
t435 = g(1) * t201 - g(2) * t205;
t434 = -g(1) * t202 + g(2) * t206;
t433 = g(1) * t272 + g(2) * t270;
t432 = g(1) * t270 - g(2) * t272;
t431 = g(1) * t273 + g(2) * t271;
t430 = t351 * t509 - t223;
t428 = -t351 * t42 + t355 * t43;
t427 = (qJD(3) * t232 - t134) * pkin(9);
t426 = (qJD(3) * t234 - t135) * pkin(9);
t425 = -t134 * t269 + t196 * t234;
t424 = t135 * t268 + t195 * t232;
t421 = g(3) * t449;
t418 = 0.2e1 * t464 + qJD(2);
t415 = -pkin(3) * t202 + t440;
t149 = t496 - t164;
t254 = t349 * t405;
t84 = -t248 * t507 - t249 * t509 + t254 * t356 - t352 * t256;
t411 = g(1) * t593 + g(2) * t354;
t358 = -pkin(11) - pkin(10);
t410 = pkin(5) * t533 - t356 * t358;
t198 = -t268 * t351 + t493;
t45 = pkin(5) * t269 + pkin(11) * t198 + t56;
t48 = pkin(11) * t197 + t57;
t18 = -t350 * t48 + t45 * t592;
t19 = t350 * t45 + t48 * t592;
t292 = qJD(4) * t309;
t46 = -t242 + t292 + t453;
t124 = t350 * t197 - t198 * t592;
t403 = -t351 * t459 - t126;
t61 = pkin(4) * t196 - t481 * t595 - t84;
t366 = -t196 * qJ(4) - t269 * qJD(4) + t257;
t67 = t195 * t595 + t366;
t16 = t101 * t505 - t115 * t506 + t351 * t61 + t355 * t67;
t396 = qJ(4) * t205 + t451;
t83 = -t248 * t509 + t249 * t507 + t352 * t254 + t356 * t256;
t394 = -g(1) * t206 - g(2) * t202 - g(3) * t269;
t392 = t412 * t351;
t387 = -t355 * t459 + t558;
t386 = -g(3) * t535 + t433;
t385 = -g(3) * t538 - t431;
t116 = -pkin(4) * t268 - t149;
t384 = -qJ(4) * t201 + t415;
t35 = -t135 * pkin(4) - t46;
t382 = -t213 * t309 - t590;
t114 = t232 * pkin(3) + t365;
t381 = t114 * t309 + t590;
t379 = t134 * t268 - t135 * t269 - t195 * t234 - t196 * t232;
t378 = -t134 * t352 - t234 * t542;
t377 = -t135 * t356 - t352 * t550;
t17 = -qJD(5) * t57 - t351 * t67 + t355 * t61;
t376 = t395 - t452;
t375 = t394 - t453;
t374 = pkin(9) * qJD(3) * t309 + t386;
t373 = qJD(5) * t225 * t595 + t35 + t394;
t73 = -qJ(4) * t481 + qJD(4) * t535 - t83;
t47 = t135 * pkin(3) + t364;
t370 = t374 - t47;
t369 = -t161 + t374;
t368 = t134 + t550;
t62 = -pkin(4) * t195 - t73;
t367 = t114 * t234 + qJDD(4) - t376;
t361 = (-t134 + t550) * t356 + (-t135 + t549) * t352;
t302 = -pkin(3) * t356 + t469;
t267 = pkin(5) * t531 + t312;
t259 = t285 * t356;
t255 = t516 * qJD(1);
t187 = -t278 * t351 + t288;
t166 = (-t250 * t357 - t309 * t511) * t349;
t162 = pkin(3) * t234 + t563;
t155 = t205 * t351 + t272 * t355;
t153 = -pkin(3) * t484 - t168;
t123 = -t197 * t592 - t198 * t350;
t118 = pkin(3) * t309 - t502;
t111 = qJD(5) * t197 + t195 * t351 + t355 * t481;
t110 = -t195 * t355 - qJD(5) * t493 + (qJD(5) * t268 + t481) * t351;
t79 = t195 * pkin(3) + t366;
t78 = -pkin(3) * t481 - t84;
t77 = -pkin(5) * t197 + t116;
t54 = -t119 * t351 + t95;
t50 = t417 - t591;
t41 = pkin(5) * t110 + t62;
t40 = qJD(6) * t124 + t110 * t592 + t350 * t111;
t39 = t350 * t110 - t111 * t592 - t197 * t476 - t198 * t503;
t22 = -pkin(5) * t412 + t35;
t15 = t36 * t592 - t575;
t14 = -t350 * t36 - t497;
t13 = -pkin(11) * t110 + t16;
t10 = pkin(5) * t196 - pkin(11) * t111 + t17;
t4 = -qJD(6) * t19 + t10 * t592 - t350 * t13;
t3 = qJD(6) * t18 + t350 * t10 + t13 * t592;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t354 - g(2) * t593, t411, 0, 0 (qJDD(1) * t346 + 0.2e1 * t443) * t345 (t353 * t499 - t501 * t514) * t614, t608 * t353 + t418 * t478 (qJDD(1) * t347 - 0.2e1 * t443) * t345, t608 * t357 - t418 * t481, t413 * t565, -t257 * t419 + t276 * t413 - t450 * t565 + g(1) * t271 - g(2) * t273 + (-t474 + t499) * t475, -t256 * t419 - t516 * t413 - t177 * t565 + (-t473 - t500) * t475 - t432 ((-qJD(2) * t252 + qJDD(1) * t516 + t177) * t357 + (-qJD(2) * t255 - qJDD(1) * t276 + t450) * t353 - t411) * t349, t345 * qJDD(1) * pkin(1) ^ 2 - g(1) * t470 - g(2) * t515 + t177 * t516 - t252 * t257 + t255 * t256 - t276 * t450, t425, t379, t600, t424, -t601, t166, t135 * t247 + t161 * t268 + t163 * t250 + t195 * t213 + t232 * t257 - t309 * t84 + (-t132 * t511 + t357 * t452) * t349 - t434, -t134 * t247 + t161 * t269 - t164 * t250 + t196 * t213 + t234 * t257 + t309 * t83 + (-t133 * t511 - t357 * t453) * t349 - t435, t132 * t196 - t133 * t195 + t134 * t163 - t135 * t164 - t232 * t83 - t234 * t84 + t268 * t453 + t269 * t452 + t432, -t453 * t164 + t133 * t83 - t452 * t163 - t132 * t84 + t161 * t247 + t213 * t257 - g(1) * (t440 - t589) - g(2) * (t489 + t588) t166, -t600, t601, t425, t379, t424, t118 * t196 + t120 * t195 - t134 * t150 + t135 * t149 + t232 * t73 + t234 * t78 + t268 * t46 + t269 * t50 + t432, -t114 * t195 - t135 * t148 + t150 * t250 - t232 * t79 - t268 * t47 - t309 * t78 + (t118 * t511 - t357 * t50) * t349 + t434, -t114 * t196 + t134 * t148 - t149 * t250 - t234 * t79 - t269 * t47 + t309 * t73 + (-t120 * t511 + t357 * t46) * t349 + t435, t47 * t148 + t114 * t79 + t46 * t149 + t120 * t73 + t50 * t150 + t118 * t78 - g(1) * (t384 - t589) - g(2) * (t396 + t588) t111 * t176 + t198 * t71, -t176 * t110 - t111 * t174 - t71 * t197 - t198 * t412, t111 * t225 + t131 * t198 + t176 * t196 - t269 * t71, t174 * t110 + t197 * t412, -t110 * t225 - t197 * t131 - t174 * t196 + t269 * t412, -t131 * t269 + t196 * t225, g(1) * t618 - g(2) * t155 + t82 * t110 - t116 * t412 - t56 * t131 + t17 * t225 + t62 * t174 + t42 * t196 - t35 * t197 + t9 * t269, g(1) * t617 - g(2) * t154 + t82 * t111 - t116 * t71 + t57 * t131 - t16 * t225 + t62 * t176 - t43 * t196 - t35 * t198 + t406 * t269, -t43 * t110 - t42 * t111 - t16 * t174 - t17 * t176 - t197 * t406 + t9 * t198 + t412 * t57 + t56 * t71 - t434, -t406 * t57 + t43 * t16 + t9 * t56 + t42 * t17 + t35 * t116 + t82 * t62 - g(1) * (-pkin(10) * t202 - t270 * t594 + t384) - g(2) * (pkin(10) * t206 + t272 * t594 + t396) -t124 * t23 - t39 * t404, t123 * t23 - t124 * t24 + t39 * t90 - t40 * t404, -t124 * t128 + t196 * t404 - t218 * t39 - t23 * t269, t123 * t24 + t40 * t90, t123 * t128 - t196 * t90 - t218 * t40 - t24 * t269, -t128 * t269 + t196 * t218, g(1) * t620 - g(2) * t145 + t11 * t196 + t22 * t123 - t18 * t128 + t2 * t269 + t4 * t218 + t77 * t24 + t63 * t40 + t41 * t90, g(1) * t619 - g(2) * t144 - t1 * t269 - t12 * t196 + t22 * t124 + t19 * t128 - t3 * t218 - t77 * t23 - t63 * t39 + t41 * t404, -t1 * t123 + t11 * t39 - t12 * t40 - t124 * t2 + t18 * t23 - t19 * t24 - t3 * t90 - t4 * t404 - t434, t1 * t19 + t12 * t3 + t2 * t18 + t11 * t4 + t22 * t77 + t63 * t41 - g(1) * (-t201 * t337 + t202 * t358 - t270 * t581 + t415) - g(2) * (t205 * t337 - t206 * t358 + t272 * t581 + t451); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, t514 * t539, -t357 * t437 + t472, t454, t353 * t437 + t324, t413, pkin(1) * t353 * t539 + t255 * t419 + t386 - t450, pkin(1) * t495 + t252 * t419 + (pkin(8) * t501 + g(3)) * t538 + t431 - t488, 0, 0, t378, t361, t598, t377, -t599, t446, -pkin(2) * t135 + t132 * t484 + t168 * t309 - t232 * t255 + t352 * t382 + t356 * t369, pkin(2) * t134 + t133 * t484 - t169 * t309 - t234 * t255 - t352 * t369 + t356 * t382, t168 * t234 + t169 * t232 + (t426 - t453 - t557) * t356 + (t427 + t452 + t556) * t352 + t385, -t161 * pkin(2) - t133 * t169 + t132 * t168 - t213 * t255 + g(1) * t264 + g(2) * t262 - g(3) * t517 + (t452 * t352 - t453 * t356 + (t132 * t356 - t133 * t352) * qJD(3) - t431) * pkin(9), t446, -t598, t599, t378, t361, t377, -t151 * t232 - t153 * t234 + (-t118 * t309 + t426 - t46) * t356 + (t427 + t50 - t560) * t352 + t385, -t118 * t484 - t135 * t302 + t153 * t309 - t232 * t519 + t352 * t381 - t356 * t370, t120 * t484 + t134 * t302 - t151 * t309 - t234 * t519 + t352 * t370 + t356 * t381, t47 * t302 - t120 * t151 - t118 * t153 - g(1) * t490 - g(2) * t491 - t421 + t519 * t114 + (t50 * t352 - t46 * t356 + (t118 * t356 + t120 * t352) * qJD(3) - t431) * pkin(9), t351 * t356 * t71 + (-t355 * t504 + t430) * t176, t223 * t174 + t176 * t222 + (-t174 * t351 + t176 * t355) * t509 + (-t392 + t574 + (t174 * t355 + t176 * t351) * qJD(5)) * t356, -t352 * t71 + t430 * t225 + (-t225 * t505 - t552 + t558) * t356, t637 * t174 - t412 * t531, t412 * t352 + t638 * t225 + (t225 * t506 + t126 + t555) * t356, -t131 * t352 - t225 * t542, -t187 * t131 + t312 * t492 - t82 * t222 + (-t135 * t312 - t431) * t355 + (t351 * t433 - t508 * t82 + t9) * t352 - g(3) * t389 + t570 * t225 + t518 * t174 + (-t309 * t42 + t35 * t355 - t506 * t82) * t356, t188 * t131 - t82 * t223 - t312 * t71 + t431 * t351 + (t82 * t351 * qJD(3) + t355 * t433 + t406) * t352 - (-t351 * t353 + t352 * t530) * t584 - t571 * t225 + t518 * t176 + (t309 * t43 - t35 * t351 - t505 * t82) * t356, t188 * t412 + t187 * t71 + t43 * t222 + t42 * t223 - t570 * t176 - t571 * t174 + t428 * t509 + (t9 * t351 + t406 * t355 + (t351 * t43 + t355 * t42) * qJD(5) + t386) * t356, -t406 * t188 + t9 * t187 + t35 * t312 - g(1) * (-pkin(10) * t543 + t273 * t594 + t490) - g(2) * (-pkin(10) * t544 + t271 * t594 + t491) - g(3) * ((pkin(4) * t353 + pkin(10) * t529) * t349 + t449) + t518 * t82 + t571 * t43 + t570 * t42, t23 * t259 + t404 * t525, t23 * t258 + t24 * t259 + t404 * t524 - t525 * t90, t128 * t259 + t218 * t525 - t23 * t352 - t404 * t542, t24 * t258 - t524 * t90, t128 * t258 + t218 * t524 - t24 * t352 + t542 * t90, -t128 * t352 - t218 * t542, -t87 * t128 + t2 * t352 + t11 * t507 + t267 * t24 + t22 * t258 - g(1) * (-t272 * t541 + t273 * t341) - g(2) * (-t270 * t541 + t271 * t341) + t567 * t90 - t524 * t63 + t578 * t218 + (-t11 * t482 - g(3) * (t340 * t532 + t341 * t353)) * t349, t88 * t128 - t1 * t352 - t12 * t507 - t267 * t23 - t22 * t259 - g(1) * (-t272 * t540 - t273 * t340) - g(2) * (-t270 * t540 - t271 * t340) + t567 * t404 + t525 * t63 - t579 * t218 + (t12 * t482 - g(3) * (-t340 * t353 + t341 * t532)) * t349, -t1 * t258 - t11 * t525 + t12 * t524 + t2 * t259 + t23 * t87 - t24 * t88 + t356 * t386 - t404 * t578 - t579 * t90, t1 * t88 + t2 * t87 + t22 * t267 - g(1) * (-t272 * t410 + t273 * t581 + t490) - g(2) * (-t270 * t410 + t271 * t581 + t491) - t421 + t567 * t63 - (t338 * t353 + t357 * t410) * t584 + t579 * t12 + t578 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t551, t477, -t368, -t551, -t628, t250, -t213 * t234 + t376 - t556, t213 * t232 - t375 + t557, 0, 0, t250, t368, t628, t551, t477, -t551, pkin(3) * t134 - t564 + (-t120 - t133) * t234 + (t118 + t502) * t232, t162 * t232 + t367 + t556 - 0.2e1 * t591, -t114 * t232 + t162 * t234 + t309 * t502 + 0.2e1 * t242 - t292 + t375, -t50 * pkin(3) - g(1) * t462 - g(2) * t463 - g(3) * t461 - t46 * qJ(4) - t114 * t162 - t118 * t133 + t120 * t502, -t351 * t553 - t574 (-t553 + t412) * t355 + (t71 + t457) * t351, t176 * t232 + t403, t355 * t457 - t392, -t174 * t232 + t387, t225 * t232, qJ(4) * t492 - t54 * t225 + t42 * t232 + t527 * t174 + (-t564 - t605) * t355 + t373 * t351, -qJ(4) * t71 + t527 * t176 + t225 * t55 - t232 * t43 + t351 * t605 + t373 * t355, t55 * t174 + t54 * t176 + (-t43 * t234 - t595 * t71 - t9 + (t174 * t595 - t43) * qJD(5)) * t355 + (-t595 * t412 + t406 + t42 * t234 + (-t176 * t595 + t42) * qJD(5)) * t351 + t395, t35 * qJ(4) - t43 * t55 - t42 * t54 - g(1) * (-pkin(10) * t205 + t462) - g(2) * (-pkin(10) * t201 + t463) - g(3) * (t461 - t583) + t527 * t82 - (qJD(5) * t428 - t351 * t406 + t9 * t355) * t595, t616, t23 * t285 - t24 * t286 + t404 * t627 + t610 * t90, t232 * t404 + t602, t634, -t232 * t90 + t633, t218 * t232, t11 * t232 - t128 * t199 + t218 * t568 + t22 * t285 + t24 * t337 + t340 * t394 + t566 * t90 - t627 * t63, -t12 * t232 + t128 * t200 - t218 * t569 + t22 * t286 - t23 * t337 + t341 * t394 + t404 * t566 - t610 * t63, t199 * t23 - t200 * t24 - t404 * t568 - t569 * t90 - t635, t1 * t200 + t2 * t199 + t22 * t337 - g(1) * (t205 * t358 + t206 * t337 - t193) - g(2) * (t201 * t358 + t202 * t337 - t191) - g(3) * (t268 * t358 + t269 * t337 - t261) + t566 * t63 + t569 * t12 + t568 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, t250 - t551, -t309 ^ 2 - t596, t367 - t560 - t591, 0, 0, 0, 0, 0, 0, t403 + t555, t387 + t552, t351 * t609 + t355 * t612, t309 * t82 + t351 * t626 + t613 * t355 - t395, 0, 0, 0, 0, 0, 0, t309 * t90 + t602, t309 * t404 + t633, -t616 - t634, t309 * t63 + t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, -t174 ^ 2 + t176 ^ 2, -t612, -t554, t609, -t131, -t82 * t176 + t606 + t613, g(1) * t155 + g(2) * t618 - g(3) * t198 + t82 * t174 - t626, 0, 0, t582, t624, t623, -t582, t603, -t128, -t14 * t218 + (-t128 * t592 - t176 * t90 - t218 * t503) * pkin(5) + t604, t15 * t218 + (t128 * t350 - t176 * t404 - t218 * t476) * pkin(5) + t622, -t11 * t90 + t12 * t404 + t14 * t404 + t15 * t90 + (t592 * t23 - t24 * t350 + (t350 * t404 - t592 * t90) * qJD(6)) * pkin(5), -t11 * t14 - t12 * t15 + (t1 * t350 + t2 * t592 - t63 * t176 + (-t11 * t350 + t12 * t592) * qJD(6) + t606) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, t624, t623, -t582, t603, -t128, t12 * t218 + t604, t11 * t218 + t622, 0, 0;];
tau_reg  = t5;
