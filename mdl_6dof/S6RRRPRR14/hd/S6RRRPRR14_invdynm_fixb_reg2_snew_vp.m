% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPRR14
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 16:48
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPRR14_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR14_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR14_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR14_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR14_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR14_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 16:46:10
% EndTime: 2019-05-07 16:47:46
% DurationCPUTime: 99.58s
% Computational Cost: add. (569132->1102), mult. (1222513->1535), div. (0->0), fcn. (968655->12), ass. (0->755)
t2053 = sin(pkin(6));
t2063 = cos(qJ(2));
t2238 = t2053 * t2063;
t2041 = qJD(1) * t2238 - qJD(3);
t2287 = t2041 ^ 2;
t2057 = sin(qJ(3));
t2062 = cos(qJ(3));
t2054 = cos(pkin(6));
t2272 = qJD(1) * t2054;
t2206 = qJD(2) + t2272;
t2058 = sin(qJ(2));
t2239 = t2053 * t2058;
t2221 = qJD(1) * t2239;
t2013 = t2057 * t2206 + t2062 * t2221;
t2288 = t2013 ^ 2;
t1969 = t2288 + t2287;
t2224 = qJDD(1) * t2053;
t2022 = -qJD(2) * t2221 + t2063 * t2224;
t2016 = -qJDD(3) + t2022;
t2011 = t2057 * t2221 - t2062 * t2206;
t2249 = t2013 * t2011;
t2083 = t2016 - t2249;
t2316 = t2083 * t2057;
t1869 = t1969 * t2062 - t2316;
t2315 = t2083 * t2062;
t1870 = t1969 * t2057 + t2315;
t2223 = t2058 * qJDD(1);
t2271 = qJD(1) * t2063;
t2021 = (qJD(2) * t2271 + t2223) * t2053;
t2196 = qJDD(1) * t2054 + qJDD(2);
t2084 = t2062 * t2021 + t2057 * t2196;
t1916 = (qJD(3) - t2041) * t2011 - t2084;
t2147 = t1870 * t2058 + t1916 * t2063;
t1746 = t2053 * t1869 + t2054 * t2147;
t1804 = t1870 * t2063 - t1916 * t2058;
t2059 = sin(qJ(1));
t2064 = cos(qJ(1));
t2400 = pkin(7) * (t1746 * t2064 + t1804 * t2059);
t2399 = pkin(7) * (t1746 * t2059 - t1804 * t2064);
t2008 = t2011 ^ 2;
t1962 = -t2287 - t2008;
t2082 = t2016 + t2249;
t2317 = t2062 * t2082;
t1860 = t1962 * t2057 - t2317;
t2318 = t2057 * t2082;
t1862 = t1962 * t2062 + t2318;
t2198 = t2021 * t2057 - t2062 * t2196;
t2116 = qJD(3) * t2013 + t2198;
t2243 = t2041 * t2013;
t1910 = t2243 - t2116;
t2149 = t1862 * t2058 + t1910 * t2063;
t1735 = -t2053 * t1860 + t2054 * t2149;
t1801 = t1862 * t2063 - t1910 * t2058;
t2398 = pkin(7) * (t1735 * t2064 + t1801 * t2059);
t2397 = pkin(7) * (t1735 * t2059 - t1801 * t2064);
t1744 = -t2054 * t1869 + t2053 * t2147;
t2396 = pkin(8) * (t1744 * t2053 + t1746 * t2054);
t1733 = t2054 * t1860 + t2053 * t2149;
t2395 = pkin(8) * (t1733 * t2053 + t1735 * t2054);
t2394 = pkin(1) * t1733;
t2393 = pkin(1) * t1735;
t2392 = pkin(1) * t1744;
t2391 = pkin(1) * t1746;
t1984 = t2287 - t2008;
t1880 = t1984 * t2057 + t2315;
t1884 = t1984 * t2062 - t2316;
t2310 = t2243 + t2116;
t2142 = t1884 * t2058 - t2063 * t2310;
t1761 = -t2053 * t1880 + t2054 * t2142;
t1817 = t1884 * t2063 + t2058 * t2310;
t2386 = t1761 * t2059 - t1817 * t2064;
t2385 = t1761 * t2064 + t1817 * t2059;
t2382 = pkin(8) * t1801;
t2381 = pkin(8) * t1804;
t1757 = t2054 * t1880 + t2053 * t2142;
t2374 = pkin(2) * t1860;
t2373 = pkin(2) * t1869;
t2372 = pkin(9) * t1860;
t2371 = pkin(9) * t1862;
t2370 = pkin(9) * t1869;
t2369 = pkin(9) * t1870;
t2309 = -t2288 + t2287;
t1881 = t2057 * t2309 + t2317;
t2368 = t1881 * t2058;
t2367 = t1881 * t2063;
t1878 = t2062 * t2309 - t2318;
t2364 = t2053 * t1878;
t2360 = t2054 * t1878;
t2286 = -2 * qJD(4);
t1937 = -t2288 - t2008;
t2358 = pkin(2) * t1937;
t2357 = t1910 * t2057;
t2262 = t1910 * t2062;
t2352 = t1937 * t2058;
t2351 = t1937 * t2063;
t1957 = -t2011 * qJD(3) + t2084;
t1992 = t2011 * t2041;
t1914 = t1992 + t1957;
t2283 = pkin(2) * t2063;
t2192 = -pkin(9) * t2058 - t2283;
t2273 = qJD(1) * t2053;
t2020 = t2192 * t2273;
t2195 = t2206 ^ 2;
t2043 = g(1) * t2064 + g(2) * t2059;
t2065 = qJD(1) ^ 2;
t2017 = -pkin(1) * t2065 + pkin(8) * t2224 - t2043;
t2042 = t2059 * g(1) - t2064 * g(2);
t2277 = pkin(8) * t2053;
t2079 = qJDD(1) * pkin(1) + t2065 * t2277 + t2042;
t2078 = t2054 * t2079;
t2199 = t2058 * t2017 - t2063 * t2078;
t1891 = (qJD(1) * t2020 * t2058 + g(3) * t2063) * t2053 - t2196 * pkin(2) - t2195 * pkin(9) + t2199;
t2067 = t2116 * pkin(3) - qJ(4) * t1914 + t1891;
t2350 = t2013 * t2286 + t2067;
t2241 = t2041 * t2062;
t2074 = -t2011 * t2241 + t2057 * t2116;
t2216 = t2058 * t2249;
t2295 = t2063 * t2074 - t2216;
t2242 = t2041 * t2057;
t2187 = -t2011 * t2242 - t2062 * t2116;
t2215 = t2063 * t2249;
t2297 = t2058 * t2074 + t2215;
t2326 = -t2053 * t2187 + t2054 * t2297;
t2349 = -t2059 * t2326 + t2064 * t2295;
t2186 = t2062 * t1957 + t2013 * t2242;
t2293 = t2063 * t2186 + t2216;
t2188 = t2057 * t1957 - t2013 * t2241;
t2296 = t2058 * t2186 - t2215;
t2327 = -t2053 * t2188 + t2054 * t2296;
t2348 = -t2059 * t2327 + t2064 * t2293;
t2347 = t2059 * t2295 + t2064 * t2326;
t2346 = t2059 * t2293 + t2064 * t2327;
t2055 = sin(qJ(6));
t2056 = sin(qJ(5));
t2061 = cos(qJ(5));
t1976 = -t2061 * t2011 - t2041 * t2056;
t1978 = t2011 * t2056 - t2041 * t2061;
t2060 = cos(qJ(6));
t1919 = t2060 * t1976 + t1978 * t2055;
t1921 = -t1976 * t2055 + t1978 * t2060;
t1845 = t1921 * t1919;
t1954 = qJDD(5) + t1957;
t1952 = qJDD(6) + t1954;
t2313 = -t1845 + t1952;
t2345 = t2055 * t2313;
t1929 = t1978 * t1976;
t2311 = -t1929 + t1954;
t2344 = t2056 * t2311;
t2342 = t2057 * t2310;
t2308 = t2288 - t2008;
t2341 = t2058 * t2308;
t2337 = t2060 * t2313;
t2336 = t2061 * t2311;
t2334 = t2062 * t2310;
t2333 = t2063 * t2308;
t2329 = t2053 * t2296 + t2054 * t2188;
t2328 = t2053 * t2297 + t2054 * t2187;
t2110 = (t2011 * t2057 + t2013 * t2062) * t2041;
t2111 = (t2011 * t2062 - t2013 * t2057) * t2041;
t2291 = -t2053 * t2110 + (t2016 * t2063 + t2058 * t2111) * t2054;
t2294 = -t2016 * t2058 + t2063 * t2111;
t2325 = t2059 * t2294 + t2064 * t2291;
t2324 = -t2059 * t2291 + t2064 * t2294;
t2050 = t2053 ^ 2;
t2240 = t2050 * t2065;
t2179 = t2206 * qJD(1);
t2323 = t2050 * (-t2054 * t2065 + t2179);
t2072 = -g(3) * t2239 + t2058 * t2078;
t1892 = t2196 * pkin(9) - t2195 * pkin(2) + (t2020 * t2273 + t2017) * t2063 + t2072;
t2123 = t2058 * t2179;
t2124 = t2063 * t2179;
t2276 = t2054 * g(3);
t1893 = -t2022 * pkin(2) - t2021 * pkin(9) - t2276 + (pkin(2) * t2123 - pkin(9) * t2124 - t2079) * t2053;
t1812 = t2057 * t1892 - t2062 * t1893;
t1966 = pkin(3) * t2011 - qJ(4) * t2013;
t1763 = t2016 * pkin(3) - t2287 * qJ(4) + t2013 * t1966 + qJDD(4) + t1812;
t1915 = -t1992 + t1957;
t1680 = pkin(4) * t1915 + t2082 * pkin(10) + t1763;
t1981 = pkin(4) * t2013 + pkin(10) * t2041;
t2210 = -pkin(3) * t2041 + t2286;
t1701 = t2198 * pkin(10) - t2008 * pkin(4) + (pkin(10) * qJD(3) - t1981 + t2210) * t2013 + t2067;
t1631 = -t2061 * t1680 + t2056 * t1701;
t1632 = t2056 * t1680 + t2061 * t1701;
t2314 = -t2061 * t1631 + t2056 * t1632;
t2076 = -t2061 * t2016 + t2056 * t2116;
t1865 = -t1976 * qJD(5) + t2076;
t2200 = t2056 * t2016 + t2061 * t2116;
t2115 = qJD(5) * t1978 - t2200;
t1742 = -t1919 * qJD(6) + t2060 * t1865 - t2055 * t2115;
t2007 = qJD(5) + t2013;
t2002 = qJD(6) + t2007;
t1874 = t2002 * t1919;
t2312 = -t1874 + t1742;
t1813 = t2062 * t1892 + t2057 * t1893;
t2080 = -t2287 * pkin(3) - t2011 * t1966 + t1813;
t2075 = 0.2e1 * qJD(4) * t2041 - t2080;
t2306 = pkin(3) * t1969 - qJ(4) * (t2083 + t2016) - t2075;
t2253 = t2007 * t1976;
t1589 = (-t1865 - t2253) * pkin(11) + t2311 * pkin(5) - t1631;
t1939 = pkin(5) * t2007 - pkin(11) * t1978;
t2290 = t1976 ^ 2;
t1593 = -pkin(5) * t2290 - pkin(11) * t2115 - t2007 * t1939 + t1632;
t1536 = -t2060 * t1589 + t1593 * t2055;
t1537 = t1589 * t2055 + t1593 * t2060;
t1498 = t1536 * t2055 + t2060 * t1537;
t1497 = -t1536 * t2060 + t1537 * t2055;
t2269 = t1497 * t2061;
t1470 = t1498 * t2056 + t2269;
t2274 = t2016 * qJ(4);
t1700 = -t2274 - t2116 * pkin(4) - t2008 * pkin(10) + (t2286 - t1981) * t2041 + t2080;
t1647 = pkin(5) * t2115 - pkin(11) * t2290 + t1978 * t1939 + t1700;
t1493 = -pkin(5) * t1647 + pkin(11) * t1498;
t2131 = pkin(11) * t2269 + t2056 * t1493;
t2285 = pkin(3) + pkin(10);
t2305 = qJ(4) * t1647 - t1470 * t2285 - t2131;
t2304 = qJ(4) * t1700 - t2285 * t2314;
t2201 = -t2055 * t1865 - t2060 * t2115;
t1693 = (-qJD(6) + t2002) * t1921 + t2201;
t1695 = t1874 + t1742;
t1633 = t1693 * t2055 - t1695 * t2060;
t1635 = t1693 * t2060 + t1695 * t2055;
t1560 = t1633 * t2061 + t1635 * t2056;
t1917 = t1919 ^ 2;
t1918 = t1921 ^ 2;
t1775 = -t1917 - t1918;
t1486 = -pkin(5) * t1775 + pkin(11) * t1635 + t1498;
t1491 = -pkin(11) * t1633 - t1497;
t2205 = t2056 * t1486 - t2061 * t1491;
t2303 = qJ(4) * t1775 - t1560 * t2285 - t2205;
t1999 = t2002 ^ 2;
t1818 = -t1999 - t1917;
t1706 = t1818 * t2055 + t2337;
t1707 = t1818 * t2060 - t2345;
t1637 = t1706 * t2061 + t1707 * t2056;
t1875 = t2002 * t1921;
t2114 = qJD(6) * t1921 - t2201;
t1691 = t1875 + t2114;
t2267 = t1647 * t2060;
t1564 = -pkin(5) * t1691 + pkin(11) * t1707 - t2267;
t2268 = t1647 * t2055;
t1599 = -pkin(11) * t1706 + t2268;
t2204 = t2056 * t1564 - t2061 * t1599;
t2302 = qJ(4) * t1691 - t1637 * t2285 - t2204;
t1856 = -t1918 - t1999;
t1793 = t1845 + t1952;
t2266 = t1793 * t2055;
t1730 = t1856 * t2060 - t2266;
t2265 = t1793 * t2060;
t1731 = -t1856 * t2055 - t2265;
t1645 = t1730 * t2061 + t1731 * t2056;
t1569 = -pkin(5) * t2312 + pkin(11) * t1731 + t2268;
t1611 = -pkin(11) * t1730 + t2267;
t2203 = t2056 * t1569 - t2061 * t1611;
t2301 = qJ(4) * t2312 - t1645 * t2285 - t2203;
t2228 = qJD(5) - t2007;
t1828 = t1978 * t2228 - t2200;
t1830 = -t1976 * t2228 + t2076;
t1724 = -t1828 * t2056 - t1830 * t2061;
t2289 = t1978 ^ 2;
t1866 = -t2289 - t2290;
t2300 = qJ(4) * t1866 - t1724 * t2285 - t2314;
t2004 = t2007 ^ 2;
t1885 = -t2004 - t2290;
t1784 = t2056 * t1885 + t2336;
t2227 = qJD(5) + t2007;
t1827 = t1978 * t2227 - t2200;
t2234 = t2056 * t1700;
t2299 = qJ(4) * t1827 - t1784 * t2285 + t2234;
t1697 = t2061 * t1700;
t2212 = -t2004 - t2289;
t1855 = t1929 + t1954;
t2233 = t2056 * t1855;
t1790 = t2061 * t2212 - t2233;
t1831 = t1865 - t2253;
t2298 = qJ(4) * t1831 - t1790 * t2285 + t1697;
t2292 = t2016 * t2238 + t2054 * t2110 + t2111 * t2239;
t2284 = pkin(2) * t2058;
t2282 = pkin(3) * t2057;
t2281 = pkin(3) * t2062;
t2280 = pkin(4) * t2314;
t2279 = pkin(4) * t1700;
t2278 = pkin(4) * t1724;
t2264 = t1891 * t2057;
t2263 = t1891 * t2062;
t2255 = t2002 * t2055;
t2254 = t2002 * t2060;
t2252 = t2007 * t1978;
t2251 = t2007 * t2056;
t2250 = t2007 * t2061;
t2040 = t2063 * t2058 * t2240;
t2018 = -t2040 + t2196;
t2247 = t2018 * t2058;
t2246 = t2018 * t2063;
t2019 = t2040 + t2196;
t2245 = t2019 * t2058;
t2244 = t2019 * t2063;
t2236 = t2056 * t1497;
t1996 = t2053 * t2079 + t2276;
t2232 = t2058 * t1996;
t2231 = t2061 * t1855;
t2230 = t2063 * t1996;
t2051 = t2058 ^ 2;
t2052 = t2063 ^ 2;
t2225 = t2051 + t2052;
t2222 = t2004 - t2289;
t2220 = t2057 * t1845;
t2219 = t2062 * t1845;
t2218 = t2057 * t1929;
t2217 = t2062 * t1929;
t2214 = t2051 * t2240;
t2213 = t2052 * t2240;
t2211 = qJ(4) * t2057 + pkin(2);
t1496 = pkin(5) * t1497;
t2209 = -pkin(4) * t1470 - t1496;
t1630 = pkin(5) * t1633;
t2208 = -pkin(4) * t1560 - t1630;
t1715 = t1812 * t2057 + t2062 * t1813;
t2197 = -t2042 * t2059 - t2064 * t2043;
t2194 = -pkin(4) * t1790 + t1632;
t2193 = -pkin(4) * t1784 + t1631;
t2039 = qJDD(1) * t2064 - t2059 * t2065;
t2191 = -pkin(7) * t2039 - g(3) * t2059;
t1752 = -t2075 - t2274;
t2190 = -pkin(3) * t1763 + qJ(4) * t1752;
t1912 = (-qJD(3) - t2041) * t2011 + t2084;
t2189 = -pkin(3) * t1912 - qJ(4) * t2310;
t2185 = pkin(5) * t1706 - t1536;
t2184 = pkin(4) * t1827 + t1697;
t2183 = pkin(4) * t1831 - t2234;
t2005 = -t2214 - t2195;
t1965 = -t2005 * t2058 - t2246;
t2182 = pkin(8) * t1965 - t2232;
t2026 = -t2195 - t2213;
t1974 = t2026 * t2063 - t2245;
t2181 = pkin(8) * t1974 + t2230;
t1466 = t1470 * t2057 + t1647 * t2062;
t1471 = t1498 * t2061 - t2236;
t2178 = t1466 * t2058 - t1471 * t2063;
t1541 = t1700 * t2062 + t2057 * t2314;
t1557 = t2056 * t1631 + t2061 * t1632;
t2177 = t1541 * t2058 - t1557 * t2063;
t1547 = t1560 * t2057 + t1775 * t2062;
t1562 = -t2056 * t1633 + t1635 * t2061;
t2176 = t1547 * t2058 - t1562 * t2063;
t1634 = -t1691 * t2060 - t2055 * t2312;
t2164 = -t1691 * t2055 + t2060 * t2312;
t1559 = t2056 * t1634 + t2061 * t2164;
t1844 = t1918 - t1917;
t1551 = t1559 * t2057 + t1844 * t2062;
t1561 = t2061 * t1634 - t2056 * t2164;
t2175 = t1551 * t2058 - t1561 * t2063;
t1582 = t1637 * t2057 + t1691 * t2062;
t1638 = -t2056 * t1706 + t1707 * t2061;
t2174 = t1582 * t2058 - t1638 * t2063;
t1592 = t1645 * t2057 + t2062 * t2312;
t1646 = -t2056 * t1730 + t1731 * t2061;
t2173 = t1592 * t2058 - t1646 * t2063;
t1872 = t1917 - t1999;
t1740 = t1872 * t2060 - t2266;
t2155 = t1872 * t2055 + t2265;
t1650 = t2056 * t1740 + t2061 * t2155;
t1692 = -t1875 + t2114;
t1596 = t1650 * t2057 - t1692 * t2062;
t1652 = t2061 * t1740 - t2056 * t2155;
t2172 = t1596 * t2058 - t1652 * t2063;
t1873 = -t1918 + t1999;
t1739 = -t1873 * t2055 + t2337;
t2156 = t1873 * t2060 + t2345;
t1649 = t2056 * t1739 + t2061 * t2156;
t1597 = t1649 * t2057 + t1695 * t2062;
t1651 = t2061 * t1739 - t2056 * t2156;
t2171 = t1597 * t2058 - t1651 * t2063;
t1685 = t1919 * t2254 + t2055 * t2114;
t2122 = t1919 * t2255 - t2060 * t2114;
t1622 = t2056 * t1685 + t2061 * t2122;
t1605 = t1622 * t2057 - t2219;
t1624 = t2061 * t1685 - t2056 * t2122;
t2170 = t1605 * t2058 - t1624 * t2063;
t1686 = t1742 * t2060 - t1921 * t2255;
t2121 = t1742 * t2055 + t1921 * t2254;
t1623 = t2056 * t1686 + t2061 * t2121;
t1606 = t1623 * t2057 + t2219;
t1625 = t2061 * t1686 - t2056 * t2121;
t2169 = t1606 * t2058 - t1625 * t2063;
t1658 = t1752 * t2062 + t1763 * t2057;
t1764 = t2013 * t2210 + t2067;
t2168 = t1658 * t2058 - t1764 * t2063;
t1797 = (-t1919 * t2060 + t1921 * t2055) * t2002;
t2112 = (-t1919 * t2055 - t1921 * t2060) * t2002;
t1683 = t2056 * t1797 + t2061 * t2112;
t1669 = t1683 * t2057 + t1952 * t2062;
t1684 = t2061 * t1797 - t2056 * t2112;
t2167 = t1669 * t2058 - t1684 * t2063;
t1673 = t1724 * t2057 + t1866 * t2062;
t1726 = -t1828 * t2061 + t2056 * t1830;
t2166 = t1673 * t2058 - t1726 * t2063;
t2068 = -t1976 * t2227 + t2076;
t1723 = -t2056 * t1827 + t2061 * t2068;
t1928 = t2289 - t2290;
t1677 = t1723 * t2057 + t1928 * t2062;
t1725 = -t2061 * t1827 - t2056 * t2068;
t2165 = t1677 * t2058 - t1725 * t2063;
t1703 = t1784 * t2057 + t1827 * t2062;
t1785 = t2061 * t1885 - t2344;
t2163 = t1703 * t2058 - t1785 * t2063;
t1713 = t1790 * t2057 + t1831 * t2062;
t1791 = -t2056 * t2212 - t2231;
t2162 = t1713 * t2058 - t1791 * t2063;
t2161 = t1715 * t2058 - t1891 * t2063;
t1940 = -t2004 + t2290;
t1808 = t1940 * t2056 + t2231;
t1718 = t1808 * t2057 - t1828 * t2062;
t1810 = t1940 * t2061 - t2233;
t2160 = t1718 * t2058 - t1810 * t2063;
t1807 = t2061 * t2222 + t2344;
t1719 = t1807 * t2057 + t1830 * t2062;
t1809 = -t2056 * t2222 + t2336;
t2159 = t1719 * t2058 - t1809 * t2063;
t1821 = -t1976 * t2251 + t2061 * t2115;
t1769 = -t1821 * t2057 - t2217;
t1822 = -t1976 * t2250 - t2056 * t2115;
t2158 = t1769 * t2058 + t1822 * t2063;
t1823 = t1865 * t2056 + t1978 * t2250;
t1770 = t1823 * t2057 + t2217;
t1824 = t1865 * t2061 - t1978 * t2251;
t2157 = t1770 * t2058 - t1824 * t2063;
t1714 = -t1812 * t2062 + t1813 * t2057;
t1857 = (-t1976 * t2056 - t1978 * t2061) * t2007;
t1820 = t1857 * t2057 + t1954 * t2062;
t1858 = (-t1976 * t2061 + t1978 * t2056) * t2007;
t2154 = t1820 * t2058 - t1858 * t2063;
t1836 = t1912 * t2057 - t2334;
t2153 = t1836 * t2058 - t2351;
t1837 = -t1914 * t2057 + t2262;
t2152 = t1837 * t2058 - t2333;
t1838 = t1916 * t2057 + t2262;
t2151 = t1838 * t2058 - t2333;
t1839 = t1915 * t2057 - t2334;
t2150 = t1839 * t2058 - t2351;
t2145 = t1912 * t2063 + t2368;
t2144 = -t1915 * t2063 - t2368;
t1963 = g(3) * t2238 + t2199;
t1964 = t2063 * t2017 + t2072;
t2141 = -t2063 * t1963 + t2058 * t1964;
t1867 = t1963 * t2058 + t1964 * t2063;
t2030 = t2053 * t2124;
t1988 = t2030 + t2021;
t2029 = t2053 * t2123;
t1991 = t2022 - t2029;
t2140 = t1988 * t2063 + t1991 * t2058;
t1989 = -t2030 + t2021;
t1990 = t2022 + t2029;
t2139 = -t1989 * t2063 + t1990 * t2058;
t2138 = t2005 * t2063 - t2247;
t2025 = -t2195 + t2213;
t2137 = t2025 * t2058 + t2246;
t2024 = t2195 - t2214;
t2136 = t2024 * t2063 + t2245;
t2135 = t2026 * t2058 + t2244;
t2134 = t2042 * t2064 - t2043 * t2059;
t2133 = t2053 * t2196;
t2125 = t2053 * t2179;
t2113 = pkin(5) * t1730 - t1537;
t2109 = -pkin(4) * t1637 - t2185;
t2108 = pkin(4) * t1775 - t2061 * t1486 - t2056 * t1491;
t2107 = pkin(4) * t1691 - t2061 * t1564 - t2056 * t1599;
t2106 = pkin(4) * t2312 - t2061 * t1569 - t2056 * t1611;
t2105 = pkin(4) * t1866 - t1557;
t2088 = pkin(4) * t1647 + pkin(11) * t2236 - t2061 * t1493;
t1449 = -t1471 * t2285 + t2088;
t1453 = -qJ(4) * t1471 - t2209;
t1465 = -t1470 * t2062 + t1647 * t2057;
t1438 = -pkin(9) * t1465 - t1449 * t2057 + t1453 * t2062;
t1440 = -pkin(2) * t1465 - t2305;
t1456 = t1466 * t2063 + t1471 * t2058;
t2104 = pkin(8) * t1456 + t1438 * t2058 + t1440 * t2063;
t1458 = -t1562 * t2285 + t2108;
t1501 = -qJ(4) * t1562 - t2208;
t1546 = -t1560 * t2062 + t1775 * t2057;
t1455 = -pkin(9) * t1546 - t1458 * t2057 + t1501 * t2062;
t1457 = -pkin(2) * t1546 - t2303;
t1507 = t1547 * t2063 + t1562 * t2058;
t2103 = pkin(8) * t1507 + t1455 * t2058 + t1457 * t2063;
t1494 = -t1638 * t2285 + t2107;
t1500 = -qJ(4) * t1638 - t2109;
t1581 = -t1637 * t2062 + t1691 * t2057;
t1463 = -pkin(9) * t1581 - t1494 * t2057 + t1500 * t2062;
t1483 = -pkin(2) * t1581 - t2302;
t1543 = t1582 * t2063 + t1638 * t2058;
t2102 = pkin(8) * t1543 + t1463 * t2058 + t1483 * t2063;
t1499 = -t1646 * t2285 + t2106;
t2085 = -pkin(4) * t1645 - t2113;
t1503 = -qJ(4) * t1646 - t2085;
t1591 = -t1645 * t2062 + t2057 * t2312;
t1467 = -pkin(9) * t1591 - t1499 * t2057 + t1503 * t2062;
t1489 = -pkin(2) * t1591 - t2301;
t1552 = t1592 * t2063 + t1646 * t2058;
t2101 = pkin(8) * t1552 + t1467 * t2058 + t1489 * t2063;
t1505 = -t1557 * t2285 + t2279;
t1509 = -qJ(4) * t1557 + t2280;
t1540 = t1700 * t2057 - t2062 * t2314;
t1468 = -pkin(9) * t1540 - t1505 * t2057 + t1509 * t2062;
t1482 = -pkin(2) * t1540 - t2304;
t1504 = t1541 * t2063 + t1557 * t2058;
t2100 = pkin(8) * t1504 + t1468 * t2058 + t1482 * t2063;
t1532 = -t1726 * t2285 + t2105;
t1644 = -qJ(4) * t1726 + t2278;
t1672 = -t1724 * t2062 + t1866 * t2057;
t1506 = -pkin(9) * t1672 - t1532 * t2057 + t1644 * t2062;
t1513 = -pkin(2) * t1672 - t2300;
t1636 = t1673 * t2063 + t1726 * t2058;
t2099 = pkin(8) * t1636 + t1506 * t2058 + t1513 * t2063;
t1577 = -qJ(4) * t1785 - t2193;
t1602 = -t1785 * t2285 + t2184;
t1702 = -t1784 * t2062 + t1827 * t2057;
t1527 = -pkin(9) * t1702 + t1577 * t2062 - t1602 * t2057;
t1567 = -pkin(2) * t1702 - t2299;
t1654 = t1703 * t2063 + t1785 * t2058;
t2098 = pkin(8) * t1654 + t1527 * t2058 + t1567 * t2063;
t1580 = -qJ(4) * t1791 - t2194;
t1607 = -t1791 * t2285 + t2183;
t1712 = -t1790 * t2062 + t1831 * t2057;
t1528 = -pkin(9) * t1712 + t1580 * t2062 - t1607 * t2057;
t1572 = -pkin(2) * t1712 - t2298;
t1656 = t1713 * t2063 + t1791 * t2058;
t2097 = pkin(8) * t1656 + t1528 * t2058 + t1572 * t2063;
t1657 = t1752 * t2057 - t1763 * t2062;
t1586 = -pkin(2) * t1657 - t2190;
t1587 = -pkin(9) * t1657 + (-qJ(4) * t2062 + t2282) * t1764;
t1619 = t1658 * t2063 + t1764 * t2058;
t2096 = pkin(8) * t1619 + t1586 * t2063 + t1587 * t2058;
t1722 = -pkin(3) * t1937 + t1752;
t1728 = -qJ(4) * t1937 + t1763;
t1832 = -t1912 * t2062 - t2342;
t1618 = -pkin(9) * t1832 - t1722 * t2057 + t1728 * t2062;
t1732 = -pkin(2) * t1832 - t2189;
t1773 = t1836 * t2063 + t2352;
t2095 = pkin(8) * t1773 + t1618 * t2058 + t1732 * t2063;
t1721 = (-t1910 - t2243) * pkin(3) + t2350;
t1659 = -qJ(4) * t2262 - t1721 * t2057 + t2372;
t2070 = pkin(3) * t2082 - qJ(4) * t1962 + t1763;
t1664 = -t2070 + t2374;
t2094 = t1659 * t2058 + t1664 * t2063 - t2382;
t1720 = pkin(3) * t2243 - qJ(4) * t1916 - t2350;
t1662 = t1720 * t2062 + t1916 * t2282 - t2370;
t1665 = -t2306 - t2373;
t2093 = t1662 * t2058 + t1665 * t2063 - t2381;
t1748 = t1812 - t2374;
t1796 = t2264 - t2372;
t2092 = t1748 * t2063 + t1796 * t2058 + t2382;
t1751 = t1813 + t2373;
t1803 = t2263 + t2370;
t2091 = t1751 * t2063 + t1803 * t2058 + t2381;
t1930 = t1989 * t2058 + t1990 * t2063;
t2090 = pkin(8) * t1930 + t1867;
t1835 = -t1915 * t2062 - t2342;
t1663 = -pkin(9) * t1835 - t1714;
t1774 = t1839 * t2063 + t2352;
t2089 = pkin(8) * t1774 + t1663 * t2058 - t1835 * t2283;
t1670 = t1715 * t2063 + t1891 * t2058;
t2081 = pkin(8) * t1670 + t1714 * t2192;
t2077 = t2053 * t2240 + t2054 * t2125;
t2038 = qJDD(1) * t2059 + t2064 * t2065;
t2035 = t2054 * t2196;
t2028 = t2225 * t2240;
t2027 = (t2051 - t2052) * t2240;
t2023 = -pkin(7) * t2038 + g(3) * t2064;
t1995 = t2206 * t2225 * t2273;
t1987 = (t2223 + (0.2e1 * qJD(2) + t2272) * t2271) * t2053;
t1980 = t2063 * t2021 - t2051 * t2125;
t1979 = -t2058 * t2022 - t2052 * t2125;
t1973 = t2025 * t2063 - t2247;
t1972 = -t2024 * t2058 + t2244;
t1961 = (t2054 * t2021 + t2063 * t2077) * t2058;
t1960 = (t2053 * t2021 + t2063 * t2323) * t2058;
t1959 = (t2053 * t2022 - t2058 * t2323) * t2063;
t1958 = (t2054 * t2022 - t2058 * t2077) * t2063;
t1931 = -t1988 * t2058 + t1991 * t2063;
t1927 = t2053 * t1991 + t2054 * t2135;
t1926 = -t2053 * t1990 + t2054 * t2137;
t1925 = -t2053 * t1989 + t2054 * t2136;
t1924 = -t2054 * t1991 + t2053 * t2135;
t1923 = t2054 * t1990 + t2053 * t2137;
t1922 = t2054 * t1989 + t2053 * t2136;
t1905 = -t2053 * t1987 + t2054 * t2138;
t1904 = t2054 * t1987 + t2053 * t2138;
t1890 = -t2053 * t2027 + t2054 * t2140;
t1889 = t2053 * t2028 + t2054 * t2139;
t1888 = t2054 * t2027 + t2053 * t2140;
t1887 = -t2054 * t2028 + t2053 * t2139;
t1847 = t2053 * t1996 + t2054 * t2141;
t1846 = -t2054 * t1996 + t2053 * t2141;
t1834 = -t1916 * t2062 + t2357;
t1833 = t1914 * t2062 + t2357;
t1819 = -t1857 * t2062 + t1954 * t2057;
t1815 = t1915 * t2058 - t2367;
t1814 = -t1912 * t2058 + t2367;
t1806 = -t2232 + (-t1924 * t2053 - t1927 * t2054) * pkin(8);
t1800 = -t2230 + (-t1904 * t2053 - t1905 * t2054) * pkin(8);
t1799 = -pkin(1) * t1924 + t2053 * t1963 + t2054 * t2181;
t1798 = pkin(1) * t1927 - t2054 * t1963 + t2053 * t2181;
t1789 = t1838 * t2063 + t2341;
t1788 = t1837 * t2063 + t2341;
t1787 = -pkin(1) * t1904 + t2053 * t1964 + t2054 * t2182;
t1786 = pkin(1) * t1905 - t2054 * t1964 + t2053 * t2182;
t1772 = pkin(1) * t1847 + t1867 * t2277;
t1771 = pkin(8) * t1867 * t2054 - pkin(1) * t1846;
t1768 = -t1823 * t2062 + t2218;
t1767 = t1821 * t2062 - t2218;
t1766 = -pkin(1) * t1887 + t2054 * t2090;
t1765 = pkin(1) * t1889 + t2053 * t2090;
t1762 = pkin(2) * t1916 + t2264 + t2369;
t1759 = t2054 * t2144 - t2364;
t1758 = t2054 * t2145 + t2364;
t1755 = t2053 * t2144 + t2360;
t1754 = t2053 * t2145 - t2360;
t1753 = (-t1846 * t2053 - t1847 * t2054) * pkin(8);
t1750 = pkin(2) * t1910 - t2263 + t2371;
t1749 = (-t1887 * t2053 - t1889 * t2054) * pkin(8) - t2141;
t1743 = t1820 * t2063 + t1858 * t2058;
t1717 = -t1807 * t2062 + t1830 * t2057;
t1716 = -t1808 * t2062 - t1828 * t2057;
t1711 = -t2053 * t1834 + t2054 * t2151;
t1710 = -t2053 * t1833 + t2054 * t2152;
t1709 = t2054 * t1834 + t2053 * t2151;
t1708 = t2054 * t1833 + t2053 * t2152;
t1690 = -t2053 * t1835 + t2054 * t2150;
t1689 = -t2053 * t1832 + t2054 * t2153;
t1688 = t2054 * t1835 + t2053 * t2150;
t1687 = t2054 * t1832 + t2053 * t2153;
t1676 = -t1723 * t2062 + t1928 * t2057;
t1675 = t1770 * t2063 + t1824 * t2058;
t1674 = t1769 * t2063 - t1822 * t2058;
t1671 = -pkin(2) * t1891 + pkin(9) * t1715;
t1668 = -t1683 * t2062 + t1952 * t2057;
t1667 = -t2053 * t1819 + t2054 * t2154;
t1666 = t2054 * t1819 + t2053 * t2154;
t1661 = t1719 * t2063 + t1809 * t2058;
t1660 = t1718 * t2063 + t1810 * t2058;
t1655 = pkin(9) * t1839 + t1715 - t2358;
t1653 = -t2369 + t2057 * t1720 - (pkin(2) + t2281) * t1916;
t1648 = t2062 * t1721 - t1910 * t2211 - t2371;
t1643 = -t2053 * t1768 + t2054 * t2157;
t1642 = -t2053 * t1767 + t2054 * t2158;
t1641 = t2054 * t1768 + t2053 * t2157;
t1640 = t2054 * t1767 + t2053 * t2158;
t1639 = t1677 * t2063 + t1725 * t2058;
t1621 = -t2053 * t1714 + t2054 * t2161;
t1620 = t2054 * t1714 + t2053 * t2161;
t1617 = t1669 * t2063 + t1684 * t2058;
t1616 = pkin(9) * t1836 + t1722 * t2062 + t1728 * t2057 - t2358;
t1615 = -t2053 * t1717 + t2054 * t2159;
t1614 = -t2053 * t1716 + t2054 * t2160;
t1613 = t2054 * t1717 + t2053 * t2159;
t1612 = t2054 * t1716 + t2053 * t2160;
t1610 = -t2053 * t1712 + t2054 * t2162;
t1609 = t2054 * t1712 + t2053 * t2162;
t1604 = -t1623 * t2062 + t2220;
t1603 = -t1622 * t2062 - t2220;
t1601 = -t2053 * t1702 + t2054 * t2163;
t1600 = t2054 * t1702 + t2053 * t2163;
t1595 = -t1649 * t2062 + t1695 * t2057;
t1594 = -t1650 * t2062 - t1692 * t2057;
t1590 = -t2058 * t1751 + t2063 * t1803 - t2396;
t1585 = -t2058 * t1748 + t2063 * t1796 - t2395;
t1584 = -t2053 * t1676 + t2054 * t2165;
t1583 = t2054 * t1676 + t2053 * t2165;
t1579 = -t2053 * t1762 + t2054 * t2091 - t2392;
t1578 = t2054 * t1762 + t2053 * t2091 + t2391;
t1576 = -t2053 * t1672 + t2054 * t2166;
t1575 = t2054 * t1672 + t2053 * t2166;
t1574 = -t2053 * t1750 + t2054 * t2092 - t2394;
t1573 = t2054 * t1750 + t2053 * t2092 + t2393;
t1571 = -t2053 * t1668 + t2054 * t2167;
t1570 = t2054 * t1668 + t2053 * t2167;
t1568 = pkin(9) * t1658 + (-t2211 - t2281) * t1764;
t1566 = -t2053 * t1657 + t2054 * t2168;
t1565 = t2054 * t1657 + t2053 * t2168;
t1563 = t1835 * t2284 + t2063 * t1663 + (-t1688 * t2053 - t1690 * t2054) * pkin(8);
t1558 = t2063 * t1662 - t2058 * t1665 + t2396;
t1555 = t1597 * t2063 + t1651 * t2058;
t1554 = t1596 * t2063 + t1652 * t2058;
t1553 = t2063 * t1659 - t2058 * t1664 + t2395;
t1550 = -t1559 * t2062 + t1844 * t2057;
t1549 = t1606 * t2063 + t1625 * t2058;
t1548 = t1605 * t2063 + t1624 * t2058;
t1545 = -pkin(1) * t1688 - t2053 * t1655 + t2054 * t2089;
t1544 = pkin(1) * t1690 + t2054 * t1655 + t2053 * t2089;
t1542 = t2063 * t1618 - t2058 * t1732 + (-t1687 * t2053 - t1689 * t2054) * pkin(8);
t1539 = -t2053 * t1653 + t2054 * t2093 + t2392;
t1538 = t2054 * t1653 + t2053 * t2093 - t2391;
t1534 = -t2053 * t1648 + t2054 * t2094 + t2394;
t1533 = t2054 * t1648 + t2053 * t2094 - t2393;
t1531 = (-pkin(9) * t2063 + t2284) * t1714 + (-t1620 * t2053 - t1621 * t2054) * pkin(8);
t1530 = -pkin(1) * t1620 - t2053 * t1671 + t2054 * t2081;
t1529 = pkin(1) * t1621 + t2054 * t1671 + t2053 * t2081;
t1526 = -t2053 * t1595 + t2054 * t2171;
t1525 = -t2053 * t1594 + t2054 * t2172;
t1524 = t2054 * t1595 + t2053 * t2171;
t1523 = t2054 * t1594 + t2053 * t2172;
t1522 = -pkin(1) * t1687 - t2053 * t1616 + t2054 * t2095;
t1521 = pkin(1) * t1689 + t2054 * t1616 + t2053 * t2095;
t1520 = -pkin(2) * t1791 + pkin(9) * t1713 + t1580 * t2057 + t1607 * t2062;
t1519 = -t2053 * t1604 + t2054 * t2169;
t1518 = -t2053 * t1603 + t2054 * t2170;
t1517 = t2054 * t1604 + t2053 * t2169;
t1516 = t2054 * t1603 + t2053 * t2170;
t1515 = -t2053 * t1591 + t2054 * t2173;
t1514 = t2054 * t1591 + t2053 * t2173;
t1512 = -pkin(2) * t1785 + pkin(9) * t1703 + t1577 * t2057 + t1602 * t2062;
t1511 = -t2053 * t1581 + t2054 * t2174;
t1510 = t2054 * t1581 + t2053 * t2174;
t1508 = t1551 * t2063 + t1561 * t2058;
t1502 = -pkin(2) * t1726 + pkin(9) * t1673 + t1532 * t2062 + t1644 * t2057;
t1492 = -t2058 * t1586 + t2063 * t1587 + (-t1565 * t2053 - t1566 * t2054) * pkin(8);
t1488 = -t2053 * t1550 + t2054 * t2175;
t1487 = t2054 * t1550 + t2053 * t2175;
t1485 = -t2053 * t1546 + t2054 * t2176;
t1484 = t2054 * t1546 + t2053 * t2176;
t1481 = -t2053 * t1540 + t2054 * t2177;
t1480 = t2054 * t1540 + t2053 * t2177;
t1479 = -pkin(1) * t1565 - t2053 * t1568 + t2054 * t2096;
t1478 = pkin(1) * t1566 + t2054 * t1568 + t2053 * t2096;
t1477 = t2063 * t1528 - t2058 * t1572 + (-t1609 * t2053 - t1610 * t2054) * pkin(8);
t1476 = t2063 * t1527 - t2058 * t1567 + (-t1600 * t2053 - t1601 * t2054) * pkin(8);
t1475 = -pkin(1) * t1609 - t2053 * t1520 + t2054 * t2097;
t1474 = pkin(1) * t1610 + t2054 * t1520 + t2053 * t2097;
t1473 = -pkin(1) * t1600 - t2053 * t1512 + t2054 * t2098;
t1472 = pkin(1) * t1601 + t2054 * t1512 + t2053 * t2098;
t1469 = t2063 * t1506 - t2058 * t1513 + (-t1575 * t2053 - t1576 * t2054) * pkin(8);
t1464 = -pkin(2) * t1646 + pkin(9) * t1592 + t1499 * t2062 + t1503 * t2057;
t1462 = -pkin(2) * t1638 + pkin(9) * t1582 + t1494 * t2062 + t1500 * t2057;
t1461 = -pkin(2) * t1557 + pkin(9) * t1541 + t1505 * t2062 + t1509 * t2057;
t1460 = -pkin(1) * t1575 - t2053 * t1502 + t2054 * t2099;
t1459 = pkin(1) * t1576 + t2054 * t1502 + t2053 * t2099;
t1454 = t2063 * t1467 - t2058 * t1489 + (-t1514 * t2053 - t1515 * t2054) * pkin(8);
t1452 = -pkin(2) * t1562 + pkin(9) * t1547 + t1458 * t2062 + t1501 * t2057;
t1451 = t2063 * t1463 - t2058 * t1483 + (-t1510 * t2053 - t1511 * t2054) * pkin(8);
t1450 = t2063 * t1468 - t2058 * t1482 + (-t1480 * t2053 - t1481 * t2054) * pkin(8);
t1448 = -t2053 * t1465 + t2054 * t2178;
t1447 = t2054 * t1465 + t2053 * t2178;
t1446 = -pkin(1) * t1514 - t2053 * t1464 + t2054 * t2101;
t1445 = pkin(1) * t1515 + t2054 * t1464 + t2053 * t2101;
t1444 = -pkin(1) * t1510 - t2053 * t1462 + t2054 * t2102;
t1443 = pkin(1) * t1511 + t2054 * t1462 + t2053 * t2102;
t1442 = -pkin(1) * t1480 - t2053 * t1461 + t2054 * t2100;
t1441 = pkin(1) * t1481 + t2054 * t1461 + t2053 * t2100;
t1439 = t2063 * t1455 - t2058 * t1457 + (-t1484 * t2053 - t1485 * t2054) * pkin(8);
t1437 = -pkin(1) * t1484 - t2053 * t1452 + t2054 * t2103;
t1436 = pkin(1) * t1485 + t2054 * t1452 + t2053 * t2103;
t1435 = -pkin(2) * t1471 + pkin(9) * t1466 + t1449 * t2062 + t1453 * t2057;
t1434 = t2063 * t1438 - t2058 * t1440 + (-t1447 * t2053 - t1448 * t2054) * pkin(8);
t1433 = -pkin(1) * t1447 - t2053 * t1435 + t2054 * t2104;
t1432 = pkin(1) * t1448 + t2054 * t1435 + t2053 * t2104;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2039, 0, -t2038, 0, t2191, -t2023, -t2134, -pkin(7) * t2134, -t1961 * t2059 + t1980 * t2064, -t1890 * t2059 + t1931 * t2064, -t1925 * t2059 + t1972 * t2064, -t1958 * t2059 + t1979 * t2064, -t1926 * t2059 + t1973 * t2064, t2064 * t1995 + t2059 * t2133, t2064 * t1806 - t2059 * t1799 - pkin(7) * (t1927 * t2064 + t1974 * t2059), t2064 * t1800 - t2059 * t1787 - pkin(7) * (t1905 * t2064 + t1965 * t2059), t2064 * t1749 - t2059 * t1766 - pkin(7) * (t1889 * t2064 + t1930 * t2059), t2064 * t1753 - t2059 * t1771 - pkin(7) * (t1847 * t2064 + t1867 * t2059), t2348, -t1710 * t2059 + t1788 * t2064, -t1759 * t2059 + t1815 * t2064, t2349, t2386, t2324, -t2059 * t1574 + t2064 * t1585 - t2398, -t2059 * t1579 + t2064 * t1590 - t2400, t2064 * t1563 - t2059 * t1545 - pkin(7) * (t1690 * t2064 + t1774 * t2059), t2064 * t1531 - t2059 * t1530 - pkin(7) * (t1621 * t2064 + t1670 * t2059), t2324, -t1758 * t2059 + t1814 * t2064, -t2386, t2348, -t1711 * t2059 + t1789 * t2064, t2349, t2064 * t1542 - t2059 * t1522 - pkin(7) * (t1689 * t2064 + t1773 * t2059), -t2059 * t1534 + t2064 * t1553 + t2398, -t2059 * t1539 + t2064 * t1558 + t2400, t2064 * t1492 - t2059 * t1479 - pkin(7) * (t1566 * t2064 + t1619 * t2059), -t1643 * t2059 + t1675 * t2064, -t1584 * t2059 + t1639 * t2064, -t1615 * t2059 + t1661 * t2064, -t1642 * t2059 + t1674 * t2064, -t1614 * t2059 + t1660 * t2064, -t1667 * t2059 + t1743 * t2064, t2064 * t1476 - t2059 * t1473 - pkin(7) * (t1601 * t2064 + t1654 * t2059), t2064 * t1477 - t2059 * t1475 - pkin(7) * (t1610 * t2064 + t1656 * t2059), t2064 * t1469 - t2059 * t1460 - pkin(7) * (t1576 * t2064 + t1636 * t2059), t2064 * t1450 - t2059 * t1442 - pkin(7) * (t1481 * t2064 + t1504 * t2059), -t1519 * t2059 + t1549 * t2064, -t1488 * t2059 + t1508 * t2064, -t1526 * t2059 + t1555 * t2064, -t1518 * t2059 + t1548 * t2064, -t1525 * t2059 + t1554 * t2064, -t1571 * t2059 + t1617 * t2064, t2064 * t1451 - t2059 * t1444 - pkin(7) * (t1511 * t2064 + t1543 * t2059), t2064 * t1454 - t2059 * t1446 - pkin(7) * (t1515 * t2064 + t1552 * t2059), t2064 * t1439 - t2059 * t1437 - pkin(7) * (t1485 * t2064 + t1507 * t2059), t2064 * t1434 - t2059 * t1433 - pkin(7) * (t1448 * t2064 + t1456 * t2059); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2038, 0, t2039, 0, t2023, t2191, t2197, pkin(7) * t2197, t1961 * t2064 + t1980 * t2059, t1890 * t2064 + t1931 * t2059, t1925 * t2064 + t1972 * t2059, t1958 * t2064 + t1979 * t2059, t1926 * t2064 + t1973 * t2059, t2059 * t1995 - t2064 * t2133, t2059 * t1806 + t2064 * t1799 + pkin(7) * (-t1927 * t2059 + t1974 * t2064), t2059 * t1800 + t2064 * t1787 + pkin(7) * (-t1905 * t2059 + t1965 * t2064), t2059 * t1749 + t2064 * t1766 + pkin(7) * (-t1889 * t2059 + t1930 * t2064), t2059 * t1753 + t2064 * t1771 + pkin(7) * (-t1847 * t2059 + t1867 * t2064), t2346, t1710 * t2064 + t1788 * t2059, t1759 * t2064 + t1815 * t2059, t2347, -t2385, t2325, t2064 * t1574 + t2059 * t1585 - t2397, t2064 * t1579 + t2059 * t1590 - t2399, t2059 * t1563 + t2064 * t1545 + pkin(7) * (-t1690 * t2059 + t1774 * t2064), t2059 * t1531 + t2064 * t1530 + pkin(7) * (-t1621 * t2059 + t1670 * t2064), t2325, t1758 * t2064 + t1814 * t2059, t2385, t2346, t1711 * t2064 + t1789 * t2059, t2347, t2059 * t1542 + t2064 * t1522 + pkin(7) * (-t1689 * t2059 + t1773 * t2064), t2064 * t1534 + t2059 * t1553 + t2397, t2064 * t1539 + t2059 * t1558 + t2399, t2059 * t1492 + t2064 * t1479 + pkin(7) * (-t1566 * t2059 + t1619 * t2064), t1643 * t2064 + t1675 * t2059, t1584 * t2064 + t1639 * t2059, t1615 * t2064 + t1661 * t2059, t1642 * t2064 + t1674 * t2059, t1614 * t2064 + t1660 * t2059, t1667 * t2064 + t1743 * t2059, t2059 * t1476 + t2064 * t1473 + pkin(7) * (-t1601 * t2059 + t1654 * t2064), t2059 * t1477 + t2064 * t1475 + pkin(7) * (-t1610 * t2059 + t1656 * t2064), t2059 * t1469 + t2064 * t1460 + pkin(7) * (-t1576 * t2059 + t1636 * t2064), t2059 * t1450 + t2064 * t1442 + pkin(7) * (-t1481 * t2059 + t1504 * t2064), t1519 * t2064 + t1549 * t2059, t1488 * t2064 + t1508 * t2059, t1526 * t2064 + t1555 * t2059, t1518 * t2064 + t1548 * t2059, t1525 * t2064 + t1554 * t2059, t1571 * t2064 + t1617 * t2059, t2059 * t1451 + t2064 * t1444 + pkin(7) * (-t1511 * t2059 + t1543 * t2064), t2059 * t1454 + t2064 * t1446 + pkin(7) * (-t1515 * t2059 + t1552 * t2064), t2059 * t1439 + t2064 * t1437 + pkin(7) * (-t1485 * t2059 + t1507 * t2064), t2059 * t1434 + t2064 * t1433 + pkin(7) * (-t1448 * t2059 + t1456 * t2064); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2042, t2043, 0, 0, t1960, t1888, t1922, t1959, t1923, t2035, t1798, t1786, t1765, t1772, t2329, t1708, t1755, t2328, -t1757, t2292, t1573, t1578, t1544, t1529, t2292, t1754, t1757, t2329, t1709, t2328, t1521, t1533, t1538, t1478, t1641, t1583, t1613, t1640, t1612, t1666, t1472, t1474, t1459, t1441, t1517, t1487, t1524, t1516, t1523, t1570, t1443, t1445, t1436, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2065, 0, 0, -g(3), -t2042, 0, t1980, t1931, t1972, t1979, t1973, t1995, t1806, t1800, t1749, t1753, t2293, t1788, t1815, t2295, -t1817, t2294, t1585, t1590, t1563, t1531, t2294, t1814, t1817, t2293, t1789, t2295, t1542, t1553, t1558, t1492, t1675, t1639, t1661, t1674, t1660, t1743, t1476, t1477, t1469, t1450, t1549, t1508, t1555, t1548, t1554, t1617, t1451, t1454, t1439, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2065, 0, qJDD(1), 0, g(3), 0, -t2043, 0, t1961, t1890, t1925, t1958, t1926, -t2133, t1799, t1787, t1766, t1771, t2327, t1710, t1759, t2326, -t1761, t2291, t1574, t1579, t1545, t1530, t2291, t1758, t1761, t2327, t1711, t2326, t1522, t1534, t1539, t1479, t1643, t1584, t1615, t1642, t1614, t1667, t1473, t1475, t1460, t1442, t1519, t1488, t1526, t1518, t1525, t1571, t1444, t1446, t1437, t1433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2042, t2043, 0, 0, t1960, t1888, t1922, t1959, t1923, t2035, t1798, t1786, t1765, t1772, t2329, t1708, t1755, t2328, -t1757, t2292, t1573, t1578, t1544, t1529, t2292, t1754, t1757, t2329, t1709, t2328, t1521, t1533, t1538, t1478, t1641, t1583, t1613, t1640, t1612, t1666, t1472, t1474, t1459, t1441, t1517, t1487, t1524, t1516, t1523, t1570, t1443, t1445, t1436, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2021, t1991, t2019, -t2030, t2025, t2030, 0, -t1996, t1963, 0, t2186, t1837, -t1881, t2074, -t1884, t2111, t1796, t1803, t1663, -pkin(9) * t1714, t2111, t1881, t1884, t2186, t1838, t2074, t1618, t1659, t1662, t1587, t1770, t1677, t1719, t1769, t1718, t1820, t1527, t1528, t1506, t1468, t1606, t1551, t1597, t1605, t1596, t1669, t1463, t1467, t1455, t1438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2029, t1988, t2024, t2022, t2018, -t2029, t1996, 0, t1964, 0, -t2249, -t2308, -t1915, t2249, t2310, t2016, t1748, t1751, -pkin(2) * t1835, -pkin(2) * t1714, t2016, t1912, -t2310, -t2249, -t2308, t2249, t1732, t1664, t1665, t1586, -t1824, -t1725, -t1809, t1822, -t1810, -t1858, t1567, t1572, t1513, t1482, -t1625, -t1561, -t1651, -t1624, -t1652, -t1684, t1483, t1489, t1457, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2040, t2027, t1989, t2040, t1990, t2196, -t1963, -t1964, 0, 0, t2188, t1833, t1878, t2187, -t1880, t2110, t1750, t1762, t1655, t1671, t2110, -t1878, t1880, t2188, t1834, t2187, t1616, t1648, t1653, t1568, t1768, t1676, t1717, t1767, t1716, t1819, t1512, t1520, t1502, t1461, t1604, t1550, t1595, t1603, t1594, t1668, t1462, t1464, t1452, t1435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1957, t1910, -t2082, -t1992, -t1984, t1992, 0, t1891, t1812, 0, t1992, t2082, t1984, t1957, t1910, -t1992, t1728, -qJ(4) * t1910, t1720, -qJ(4) * t1764, t1929, t1928, t1830, -t1929, -t1828, t1954, t1577, t1580, t1644, t1509, t1845, t1844, t1695, -t1845, -t1692, t1952, t1500, t1503, t1501, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2243, t1914, t2309, -t2116, -t2083, t2243, -t1891, 0, t1813, 0, t2243, -t2309, t2083, -t2243, -t1916, -t2116, t1722, t1721, -pkin(3) * t1916, -pkin(3) * t1764, -t1823, -t1723, -t1807, t1821, -t1808, -t1857, t1602, t1607, t1532, t1505, -t1623, -t1559, -t1649, -t1622, -t1650, -t1683, t1494, t1499, t1458, t1449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2249, t2308, t1915, -t2249, -t2310, -t2016, -t1812, -t1813, 0, 0, -t2016, -t1912, t2310, t2249, t2308, -t2249, t2189, t2070, t2306, t2190, t1824, t1725, t1809, -t1822, t1810, t1858, t2299, t2298, t2300, t2304, t1625, t1561, t1651, t1624, t1652, t1684, t2302, t2301, t2303, t2305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2016, -t1912, t2310, t2249, t2308, -t2249, 0, t1763, t1752, 0, t1824, t1725, t1809, -t1822, t1810, t1858, -pkin(10) * t1784 + t2234, -pkin(10) * t1790 + t1697, -pkin(10) * t1724 - t2314, -pkin(10) * t2314, t1625, t1561, t1651, t1624, t1652, t1684, -pkin(10) * t1637 - t2204, -pkin(10) * t1645 - t2203, -pkin(10) * t1560 - t2205, -pkin(10) * t1470 - t2131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1992, -t2082, -t1984, -t1957, -t1910, t1992, -t1763, 0, t1764, 0, -t1929, -t1928, -t1830, t1929, t1828, -t1954, t2193, t2194, -t2278, -t2280, -t1845, -t1844, -t1695, t1845, t1692, -t1952, t2109, t2085, t2208, t2209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2243, t2309, -t2083, t2243, t1916, t2116, -t1752, -t1764, 0, 0, t1823, t1723, t1807, -t1821, t1808, t1857, pkin(10) * t1785 - t2184, pkin(10) * t1791 - t2183, pkin(10) * t1726 - t2105, pkin(10) * t1557 - t2279, t1623, t1559, t1649, t1622, t1650, t1683, pkin(10) * t1638 - t2107, pkin(10) * t1646 - t2106, pkin(10) * t1562 - t2108, pkin(10) * t1471 - t2088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1865, -t1827, t2311, t2253, t1940, -t2253, 0, t1700, t1631, 0, t1686, t1634, t1739, t1685, t1740, t1797, t1599, t1611, t1491, -pkin(11) * t1497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2252, t2068, t2222, -t2115, t1855, -t2252, -t1700, 0, t1632, 0, t2121, t2164, t2156, t2122, t2155, t2112, t1564, t1569, t1486, t1493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1929, t1928, t1830, -t1929, -t1828, t1954, -t1631, -t1632, 0, 0, t1845, t1844, t1695, -t1845, -t1692, t1952, t2185, t2113, t1630, t1496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1742, -t1691, t2313, t1874, t1872, -t1874, 0, t1647, t1536, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1875, t2312, t1873, -t2114, t1793, -t1875, -t1647, 0, t1537, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1845, t1844, t1695, -t1845, -t1692, t1952, -t1536, -t1537, 0, 0;];
m_new_reg  = t1;
