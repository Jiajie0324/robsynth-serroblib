% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR14_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR14_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR14_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR14_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:20:36
% EndTime: 2019-03-09 20:20:53
% DurationCPUTime: 5.69s
% Computational Cost: add. (4577->382), mult. (12187->693), div. (0->0), fcn. (11635->10), ass. (0->198)
t254 = qJD(5) + qJD(6);
t248 = pkin(4) + pkin(9);
t157 = cos(qJ(5));
t249 = pkin(3) + pkin(10);
t242 = pkin(11) + t249;
t121 = t242 * t157;
t152 = sin(qJ(6));
t156 = cos(qJ(6));
t153 = sin(qJ(5));
t255 = t242 * t153;
t79 = -t121 * t156 + t152 * t255;
t257 = t121 * t152 + t156 * t255;
t158 = cos(qJ(3));
t154 = sin(qJ(3));
t227 = t154 * qJ(4);
t256 = t249 * t158 + t227;
t113 = -pkin(2) - t256;
t126 = t248 * t154;
t117 = t153 * t126;
t72 = t157 * t113 + t117;
t149 = t158 ^ 2;
t186 = qJD(3) * (t154 ^ 2 - t149);
t146 = t153 ^ 2;
t223 = -t157 ^ 2 + t146;
t185 = t223 * qJD(5);
t127 = t248 * t158;
t215 = qJD(4) * t158;
t253 = qJD(3) * t256 - qJD(5) * t127 - t215;
t252 = t254 * t158;
t150 = sin(pkin(6));
t251 = 0.2e1 * t150;
t250 = 0.2e1 * qJD(4);
t155 = sin(qJ(2));
t247 = pkin(1) * t155;
t151 = cos(pkin(6));
t231 = t150 * t155;
t107 = t151 * t154 + t158 * t231;
t246 = pkin(5) * t107;
t245 = pkin(5) * t156;
t244 = pkin(9) * t150;
t243 = t154 * pkin(5);
t159 = cos(qJ(2));
t230 = t150 * t159;
t207 = pkin(8) * t230;
t94 = t207 + (pkin(9) + t247) * t151;
t95 = (-pkin(2) * t159 - pkin(9) * t155 - pkin(1)) * t150;
t188 = -t154 * t94 + t158 * t95;
t61 = pkin(3) * t230 - t188;
t44 = pkin(4) * t107 + pkin(10) * t230 + t61;
t203 = t154 * t231;
t106 = -t151 * t158 + t203;
t93 = pkin(8) * t231 + (-pkin(1) * t159 - pkin(2)) * t151;
t167 = -t107 * qJ(4) + t93;
t51 = t249 * t106 + t167;
t21 = t153 * t44 + t157 * t51;
t241 = t154 * t95 + t158 * t94;
t220 = qJD(2) * t159;
t194 = t150 * t220;
t76 = -qJD(3) * t203 + (qJD(3) * t151 + t194) * t158;
t240 = t154 * t76;
t77 = t106 * t157 + t153 * t230;
t19 = pkin(11) * t77 + t21;
t239 = t156 * t19;
t225 = t157 * t158;
t68 = -pkin(11) * t225 + t72;
t238 = t156 * t68;
t221 = qJD(2) * t155;
t133 = t150 * t221;
t128 = qJ(4) * t133;
t197 = qJD(4) * t230;
t142 = qJD(3) * t158;
t218 = qJD(3) * t154;
t96 = (pkin(2) * t155 - pkin(9) * t159) * t150 * qJD(2);
t97 = -t151 * pkin(1) * t220 + pkin(8) * t133;
t35 = -t95 * t142 - t154 * t96 + t158 * t97 + t94 * t218;
t27 = -t128 + t35 + t197;
t75 = qJD(3) * t107 + t154 * t194;
t24 = -pkin(4) * t75 - t27;
t237 = t24 * t153;
t236 = t24 * t157;
t50 = qJD(5) * t77 + t157 * t133 + t75 * t153;
t235 = t50 * t157;
t234 = qJ(4) * t158;
t229 = t152 * t153;
t228 = t153 * t249;
t226 = t156 * t157;
t224 = t157 * t249;
t219 = qJD(3) * t153;
t217 = qJD(3) * t157;
t216 = qJD(3) * t159;
t214 = qJD(5) * t153;
t213 = qJD(5) * t157;
t212 = qJD(5) * t158;
t211 = qJD(5) * t249;
t210 = qJD(6) * t152;
t209 = qJD(6) * t156;
t208 = -0.2e1 * pkin(2) * qJD(3);
t206 = pkin(9) * t218;
t205 = pkin(5) * t210;
t204 = pkin(5) * t209;
t202 = t157 * t230;
t36 = -t94 * t142 + t154 * t97 + t158 * t96 - t95 * t218;
t162 = pkin(4) * t76 - t249 * t133 - t36;
t98 = (t151 * t247 + t207) * qJD(2);
t161 = -t76 * qJ(4) - t107 * qJD(4) + t98;
t26 = t249 * t75 + t161;
t9 = -t21 * qJD(5) - t153 * t26 + t157 * t162;
t5 = t76 * pkin(5) - t50 * pkin(11) + t9;
t49 = -qJD(5) * t202 - t75 * t157 + (qJD(5) * t106 + t133) * t153;
t8 = -t153 * t162 - t157 * t26 - t44 * t213 + t51 * t214;
t7 = -pkin(11) * t49 - t8;
t201 = -t152 * t7 + t156 * t5;
t145 = t150 ^ 2;
t200 = t145 * t220;
t199 = t153 * t218;
t198 = t154 * t217;
t196 = t153 * t212;
t195 = t157 * t212;
t193 = t154 * t142;
t192 = t153 * t213;
t190 = pkin(11) * t158 - t113;
t141 = pkin(9) * t142;
t180 = pkin(4) * t142 + t141;
t184 = pkin(3) * t218 - t154 * qJD(4);
t89 = (pkin(10) * t154 - t234) * qJD(3) + t184;
t187 = -t153 * t89 + t157 * t180;
t33 = (-pkin(11) * t153 * t154 + pkin(5) * t158) * qJD(3) + (t190 * t157 - t117) * qJD(5) + t187;
t169 = t196 + t198;
t47 = t113 * t214 - t126 * t213 - t153 * t180 - t157 * t89;
t37 = pkin(11) * t169 - t47;
t189 = -t152 * t37 + t156 * t33;
t20 = -t153 * t51 + t157 * t44;
t183 = pkin(3) * t133;
t182 = t155 * t200;
t181 = t153 * t198;
t179 = -pkin(3) * t158 - t227;
t115 = t152 * t157 + t153 * t156;
t74 = -t152 * t214 - t153 * t210 + t226 * t254;
t178 = -t107 * t74 - t115 * t76;
t78 = t106 * t153 - t202;
t18 = -pkin(11) * t78 + t20 + t246;
t11 = t152 * t18 + t239;
t118 = t157 * t126;
t67 = t190 * t153 + t118 + t243;
t40 = t152 * t67 + t238;
t55 = t152 * t78 - t156 * t77;
t56 = t152 * t77 + t156 * t78;
t177 = t153 * t77 + t157 * t78;
t175 = -t226 + t229;
t60 = qJ(4) * t230 - t241;
t1 = -t152 * t5 - t156 * t7 - t18 * t209 + t19 * t210;
t173 = -t115 * t142 - t154 * t74;
t172 = -t107 * t213 - t153 * t76;
t63 = -t107 * t214 + t157 * t76;
t12 = -t152 * t33 - t156 * t37 - t67 * t209 + t68 * t210;
t171 = t154 * t216 + t158 * t221;
t170 = t154 * t221 - t158 * t216;
t52 = -pkin(4) * t106 - t60;
t119 = t248 * t218;
t168 = -t119 + (t154 * t249 - t234) * qJD(5);
t166 = t171 * t150;
t165 = t170 * t150;
t164 = t179 * qJD(3) + t215;
t29 = -t36 - t183;
t163 = t154 * t29 - t158 * t27 + (t154 * t60 + t158 * t61) * qJD(3);
t139 = pkin(5) * t153 + qJ(4);
t132 = pkin(5) * t213 + qJD(4);
t131 = 0.2e1 * t193;
t122 = -pkin(2) + t179;
t109 = -t153 * t142 - t154 * t213;
t108 = t157 * t142 - t154 * t214;
t105 = pkin(5) * t225 + t127;
t102 = -qJ(4) * t142 + t184;
t100 = t115 * t158;
t99 = -t156 * t225 + t158 * t229;
t81 = -pkin(5) * t196 + (-pkin(5) * t157 - t248) * t218;
t73 = t254 * t115;
t71 = -t113 * t153 + t118;
t66 = 0.2e1 * t107 * t76;
t64 = -t142 * t175 - t154 * t73;
t62 = t107 * t142 + t240;
t59 = t106 * pkin(3) + t167;
t58 = t115 * t252 - t152 * t199 + t156 * t198;
t57 = t115 * t218 + t175 * t252;
t54 = t254 * t257;
t53 = -t79 * qJD(5) + t121 * t209 - t255 * t210;
t48 = -qJD(5) * t72 + t187;
t39 = -t152 * t68 + t156 * t67;
t38 = -t107 * t73 - t175 * t76;
t32 = t75 * pkin(3) + t161;
t28 = -pkin(5) * t77 + t52;
t16 = pkin(5) * t49 + t24;
t15 = t56 * qJD(6) + t152 * t50 + t156 * t49;
t14 = -t55 * qJD(6) - t152 * t49 + t156 * t50;
t13 = -t40 * qJD(6) + t189;
t10 = -t152 * t19 + t156 * t18;
t2 = -t11 * qJD(6) + t201;
t3 = [0, 0, 0, 0.2e1 * t182, 0.2e1 * (-t155 ^ 2 + t159 ^ 2) * t145 * qJD(2), 0.2e1 * t151 * t194, -0.2e1 * t151 * t133, 0, -0.2e1 * pkin(1) * t145 * t221 - 0.2e1 * t151 * t98, -0.2e1 * pkin(1) * t200 + 0.2e1 * t151 * t97, t66, -0.2e1 * t106 * t76 - 0.2e1 * t107 * t75 (t107 * t221 - t159 * t76) * t251 (-t106 * t221 + t159 * t75) * t251, -0.2e1 * t182, 0.2e1 * t98 * t106 + 0.2e1 * t93 * t75 + 0.2e1 * (-t36 * t159 + t188 * t221) * t150, 0.2e1 * t98 * t107 + 0.2e1 * t93 * t76 + 0.2e1 * (-t35 * t159 - t241 * t221) * t150, 0.2e1 * t106 * t27 + 0.2e1 * t107 * t29 + 0.2e1 * t60 * t75 + 0.2e1 * t61 * t76, -0.2e1 * t32 * t106 - 0.2e1 * t59 * t75 + 0.2e1 * (-t159 * t29 + t61 * t221) * t150, -0.2e1 * t32 * t107 - 0.2e1 * t59 * t76 + 0.2e1 * (t159 * t27 - t60 * t221) * t150, 0.2e1 * t27 * t60 + 0.2e1 * t29 * t61 + 0.2e1 * t32 * t59, 0.2e1 * t78 * t50, -0.2e1 * t49 * t78 + 0.2e1 * t50 * t77, 0.2e1 * t107 * t50 + 0.2e1 * t76 * t78, -0.2e1 * t107 * t49 + 0.2e1 * t76 * t77, t66, 0.2e1 * t107 * t9 + 0.2e1 * t20 * t76 - 0.2e1 * t24 * t77 + 0.2e1 * t49 * t52, 0.2e1 * t107 * t8 - 0.2e1 * t21 * t76 + 0.2e1 * t24 * t78 + 0.2e1 * t50 * t52, 0.2e1 * t56 * t14, -0.2e1 * t14 * t55 - 0.2e1 * t15 * t56, 0.2e1 * t107 * t14 + 0.2e1 * t56 * t76, -0.2e1 * t107 * t15 - 0.2e1 * t55 * t76, t66, 0.2e1 * t10 * t76 + 0.2e1 * t107 * t2 + 0.2e1 * t15 * t28 + 0.2e1 * t16 * t55, 0.2e1 * t1 * t107 - 0.2e1 * t11 * t76 + 0.2e1 * t14 * t28 + 0.2e1 * t16 * t56; 0, 0, 0, 0, 0, t194, -t133, 0, -t98, t97, t62, -t154 * t75 + t76 * t158 + (-t106 * t158 - t107 * t154) * qJD(3), t165, t166, 0, -pkin(2) * t75 - t98 * t158 - t170 * t244 + t93 * t218, -pkin(2) * t76 + t93 * t142 + t98 * t154 - t171 * t244 (t240 - t158 * t75 + (t106 * t154 + t107 * t158) * qJD(3)) * pkin(9) + t163, pkin(9) * t165 - t102 * t106 - t122 * t75 + t158 * t32 - t59 * t218, pkin(9) * t166 - t102 * t107 - t122 * t76 - t59 * t142 - t154 * t32, pkin(9) * t163 + t102 * t59 + t122 * t32, -t78 * t195 + (-t158 * t50 + t78 * t218) * t153, t177 * t218 + (t153 * t49 - t235 + (t153 * t78 - t157 * t77) * qJD(5)) * t158 (t107 * t219 + t50) * t154 + (qJD(3) * t78 + t172) * t158 (t107 * t217 - t49) * t154 + (qJD(3) * t77 - t63) * t158, t62, t107 * t48 + t119 * t77 + t127 * t49 + t71 * t76 + (-t52 * t217 + t9) * t154 + (qJD(3) * t20 - t52 * t214 + t236) * t158, t107 * t47 - t119 * t78 + t127 * t50 - t72 * t76 + (t219 * t52 + t8) * t154 + (-qJD(3) * t21 - t213 * t52 - t237) * t158, -t100 * t14 + t56 * t57, t100 * t15 + t14 * t99 - t55 * t57 + t56 * t58, -t100 * t76 + t107 * t57 + t14 * t154 + t142 * t56, t107 * t58 - t142 * t55 - t15 * t154 + t76 * t99, t62, t10 * t142 + t105 * t15 + t107 * t13 + t154 * t2 - t16 * t99 - t28 * t58 + t39 * t76 + t55 * t81, t1 * t154 - t100 * t16 + t105 * t14 + t107 * t12 - t11 * t142 + t28 * t57 - t40 * t76 + t56 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, -0.2e1 * t186, 0, 0, 0, t154 * t208, t158 * t208, 0, 0.2e1 * t102 * t158 - 0.2e1 * t122 * t218, -0.2e1 * t102 * t154 - 0.2e1 * t122 * t142, 0.2e1 * t122 * t102, -0.2e1 * t146 * t193 + 0.2e1 * t149 * t192, -0.2e1 * t149 * t185 - 0.4e1 * t158 * t181, 0.2e1 * t153 * t186 - 0.2e1 * t154 * t195, 0.2e1 * t154 * t196 + 0.2e1 * t157 * t186, t131, 0.2e1 * (-t127 * t217 + t48) * t154 + 0.2e1 * (qJD(3) * t71 - t119 * t157 - t127 * t214) * t158, 0.2e1 * (t127 * t219 + t47) * t154 + 0.2e1 * (-qJD(3) * t72 + t119 * t153 - t127 * t213) * t158, -0.2e1 * t100 * t57, -0.2e1 * t100 * t58 + 0.2e1 * t57 * t99, -0.2e1 * t100 * t142 + 0.2e1 * t154 * t57, 0.2e1 * t142 * t99 + 0.2e1 * t154 * t58, t131, -0.2e1 * t105 * t58 + 0.2e1 * t13 * t154 + 0.2e1 * t142 * t39 - 0.2e1 * t81 * t99, -0.2e1 * t100 * t81 + 0.2e1 * t105 * t57 + 0.2e1 * t12 * t154 - 0.2e1 * t142 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t75, t133, t36, t35, -pkin(3) * t76 - qJ(4) * t75 - qJD(4) * t106, -t36 - 0.2e1 * t183, 0.2e1 * t128 - t35 - 0.2e1 * t197, -pkin(3) * t29 - qJ(4) * t27 - qJD(4) * t60, -t78 * t214 + t235, -qJD(5) * t177 - t50 * t153 - t157 * t49, t63, t172, 0, -t76 * t224 + qJ(4) * t49 - qJD(4) * t77 + t237 + (t107 * t228 + t157 * t52) * qJD(5), t76 * t228 + qJ(4) * t50 + qJD(4) * t78 + t236 + (t107 * t224 - t153 * t52) * qJD(5), -t14 * t175 - t56 * t73, -t115 * t14 + t15 * t175 + t55 * t73 - t56 * t74, t38, t178, 0, t107 * t54 + t115 * t16 + t132 * t55 + t139 * t15 + t28 * t74 + t76 * t79, t107 * t53 + t132 * t56 + t139 * t14 - t16 * t175 + t257 * t76 - t28 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, -t218, 0, -t141, t206, t164, t141, -t206, t164 * pkin(9), t158 * t185 + t181, 0.4e1 * t158 * t192 - t223 * t218, t108, t109, 0, t168 * t153 - t157 * t253, t153 * t253 + t168 * t157, t100 * t73 - t175 * t57, t100 * t74 - t115 * t57 - t175 * t58 - t73 * t99, t64, t173, 0, t105 * t74 + t115 * t81 - t132 * t99 - t139 * t58 + t142 * t79 + t154 * t54, -t100 * t132 - t105 * t73 + t139 * t57 + t142 * t257 + t154 * t53 - t175 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, qJ(4) * t250, -0.2e1 * t192, 0.2e1 * t185, 0, 0, 0, 0.2e1 * qJ(4) * t213 + 0.2e1 * qJD(4) * t153, -0.2e1 * qJ(4) * t214 + 0.2e1 * qJD(4) * t157, 0.2e1 * t175 * t73, 0.2e1 * t115 * t73 + 0.2e1 * t175 * t74, 0, 0, 0, 0.2e1 * t115 * t132 + 0.2e1 * t139 * t74, -0.2e1 * t132 * t175 - 0.2e1 * t139 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, t133, 0, t29, 0, 0, 0, 0, 0, t63, t172, 0, 0, 0, 0, 0, t38, t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, 0, 0, t141, 0, 0, 0, 0, 0, t108, t109, 0, 0, 0, 0, 0, t64, t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t49, t76, t9, t8, 0, 0, t14, -t15, t76, t76 * t245 + (-t239 + (-t18 - t246) * t152) * qJD(6) + t201 (-t107 * t209 - t152 * t76) * pkin(5) + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195 + t199, t169, t142, t48, t47, 0, 0, t57, t58, t142, t142 * t245 + (-t238 + (-t67 - t243) * t152) * qJD(6) + t189 (-t142 * t152 - t154 * t209) * pkin(5) + t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t213, 0, t153 * t211, t157 * t211, 0, 0, -t73, -t74, 0, t54, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t213, 0, 0, 0, 0, 0, -t73, -t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t205, -0.2e1 * t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t15, t76, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, t58, t142, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, -t74, 0, t54, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, -t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, -t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
