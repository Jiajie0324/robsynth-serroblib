% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRPRR14
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 16:48
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRPRR14_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR14_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR14_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR14_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR14_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR14_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 16:47:46
% EndTime: 2019-05-07 16:47:56
% DurationCPUTime: 11.54s
% Computational Cost: add. (70344->369), mult. (151472->504), div. (0->0), fcn. (120208->12), ass. (0->298)
t2649 = sin(pkin(6));
t2653 = sin(qJ(2));
t2725 = t2649 * t2653;
t2714 = qJD(1) * t2725;
t2639 = qJD(2) * t2714;
t2658 = cos(qJ(2));
t2715 = qJDD(1) * t2658;
t2703 = t2649 * t2715 - t2639;
t2675 = -qJDD(3) + t2703;
t2652 = sin(qJ(3));
t2657 = cos(qJ(3));
t2650 = cos(pkin(6));
t2709 = qJD(1) * t2650 + qJD(2);
t2611 = t2652 * t2714 - t2657 * t2709;
t2613 = t2652 * t2709 + t2657 * t2714;
t2728 = t2611 * t2613;
t2573 = t2675 + t2728;
t2610 = t2611 ^ 2;
t2724 = t2649 * t2658;
t2713 = qJD(1) * t2724;
t2635 = -qJD(3) + t2713;
t2631 = t2635 ^ 2;
t2580 = -t2631 - t2610;
t2534 = t2573 * t2652 + t2580 * t2657;
t2756 = t2534 * t2653;
t2755 = t2534 * t2658;
t2533 = t2573 * t2657 - t2580 * t2652;
t2754 = t2649 * t2533;
t2753 = t2650 * t2533;
t2669 = t2675 - t2728;
t2737 = t2613 ^ 2;
t2711 = -t2631 - t2737;
t2543 = t2652 * t2711 - t2657 * t2669;
t2752 = t2543 * t2653;
t2751 = t2543 * t2658;
t2716 = qJDD(1) * t2649;
t2622 = qJD(2) * t2713 + t2653 * t2716;
t2644 = t2650 * qJDD(1) + qJDD(2);
t2676 = t2657 * t2622 + t2652 * t2644;
t2722 = qJD(3) + t2635;
t2561 = t2611 * t2722 - t2676;
t2750 = t2561 * t2652;
t2749 = t2561 * t2657;
t2540 = t2652 * t2669 + t2657 * t2711;
t2748 = t2649 * t2540;
t2747 = t2650 * t2540;
t2660 = qJD(1) ^ 2;
t2746 = t2649 * t2660;
t2743 = -t2610 - t2737;
t2745 = t2653 * t2743;
t2744 = t2658 * t2743;
t2670 = -qJD(3) * t2611 + t2676;
t2560 = t2611 * t2635 + t2670;
t2705 = t2709 ^ 2;
t2656 = cos(qJ(5));
t2735 = sin(qJ(5));
t2590 = -t2656 * t2611 - t2635 * t2735;
t2592 = t2611 * t2735 - t2656 * t2635;
t2651 = sin(qJ(6));
t2655 = cos(qJ(6));
t2562 = t2655 * t2590 + t2592 * t2651;
t2742 = t2562 ^ 2;
t2564 = -t2590 * t2651 + t2592 * t2655;
t2741 = t2564 ^ 2;
t2589 = t2590 ^ 2;
t2740 = t2592 ^ 2;
t2609 = qJD(5) + t2613;
t2605 = qJD(6) + t2609;
t2739 = t2605 ^ 2;
t2738 = t2609 ^ 2;
t2736 = -2 * qJD(4);
t2734 = t2650 * g(3);
t2733 = (-pkin(2) * t2658 - pkin(9) * t2653) * t2746;
t2732 = t2562 * t2564;
t2729 = t2590 * t2592;
t2726 = t2649 ^ 2 * t2660;
t2723 = qJD(3) - t2635;
t2721 = qJD(5) - t2609;
t2720 = qJD(5) + t2609;
t2719 = qJD(6) - t2605;
t2718 = qJD(6) + t2605;
t2654 = sin(qJ(1));
t2659 = cos(qJ(1));
t2638 = -g(1) * t2659 - g(2) * t2654;
t2618 = -pkin(1) * t2660 + pkin(8) * t2716 + t2638;
t2637 = t2654 * g(1) - t2659 * g(2);
t2667 = qJDD(1) * pkin(1) + pkin(8) * t2746 + t2637;
t2663 = t2650 * t2667;
t2717 = t2658 * t2618 + t2653 * t2663;
t2549 = t2644 * pkin(9) - t2705 * pkin(2) + (-g(3) * t2653 + t2658 * t2733) * t2649 + t2717;
t2702 = qJD(1) * t2709;
t2671 = t2653 * t2702;
t2672 = t2658 * t2702;
t2550 = t2639 * pkin(2) - t2622 * pkin(9) - t2734 + (-pkin(9) * t2672 + (t2671 - t2715) * pkin(2) - t2667) * t2649;
t2515 = -t2652 * t2549 + t2657 * t2550;
t2584 = pkin(3) * t2611 - qJ(4) * t2613;
t2500 = pkin(3) * t2675 - t2631 * qJ(4) + t2613 * t2584 + qJDD(4) - t2515;
t2467 = -pkin(4) * t2561 + pkin(10) * t2573 + t2500;
t2706 = t2652 * t2622 - t2657 * t2644;
t2579 = qJD(3) * t2613 + t2706;
t2593 = pkin(4) * t2613 + pkin(10) * t2635;
t2707 = t2653 * t2618 - t2658 * t2663;
t2548 = -t2644 * pkin(2) - t2705 * pkin(9) + (g(3) * t2658 + t2653 * t2733) * t2649 + t2707;
t2661 = t2579 * pkin(3) - qJ(4) * t2560 + t2548;
t2710 = -pkin(3) * t2635 + t2736;
t2478 = -t2610 * pkin(4) + t2579 * pkin(10) + (-t2593 + t2710) * t2613 + t2661;
t2451 = t2735 * t2467 + t2656 * t2478;
t2712 = -t2738 - t2740;
t2704 = t2656 * t2579 + t2675 * t2735;
t2536 = -t2592 * qJD(5) + t2704;
t2674 = t2579 * t2735 - t2656 * t2675;
t2537 = -t2590 * qJD(5) + t2674;
t2708 = t2655 * t2536 - t2651 * t2537;
t2668 = -qJDD(5) - t2670;
t2662 = -t2668 - t2729;
t2673 = t2656 * t2467 - t2478 * t2735;
t2438 = (-t2609 * t2590 - t2537) * pkin(11) + t2662 * pkin(5) + t2673;
t2570 = pkin(5) * t2609 - pkin(11) * t2592;
t2441 = -pkin(5) * t2589 + pkin(11) * t2536 - t2570 * t2609 + t2451;
t2420 = t2438 * t2655 - t2441 * t2651;
t2421 = t2438 * t2651 + t2441 * t2655;
t2413 = -t2420 * t2651 + t2421 * t2655;
t2700 = t2420 * t2655 + t2421 * t2651;
t2406 = t2413 * t2735 + t2656 * t2700;
t2516 = t2657 * t2549 + t2652 * t2550;
t2664 = -t2631 * pkin(3) - qJ(4) * t2675 - t2611 * t2584 + t2516;
t2477 = -t2579 * pkin(4) - t2610 * pkin(10) + (t2736 - t2593) * t2635 + t2664;
t2458 = -t2536 * pkin(5) - t2589 * pkin(11) + t2592 * t2570 + t2477;
t2405 = t2406 * t2652 + t2458 * t2657;
t2407 = t2413 * t2656 - t2700 * t2735;
t2701 = t2405 * t2653 - t2407 * t2658;
t2428 = t2451 * t2735 + t2656 * t2673;
t2423 = t2428 * t2652 + t2477 * t2657;
t2429 = t2451 * t2656 - t2673 * t2735;
t2699 = t2423 * t2653 - t2429 * t2658;
t2473 = -t2564 * t2719 + t2708;
t2683 = -t2651 * t2536 - t2655 * t2537;
t2475 = t2562 * t2719 + t2683;
t2452 = t2473 * t2655 - t2475 * t2651;
t2693 = t2473 * t2651 + t2475 * t2655;
t2430 = t2452 * t2735 + t2656 * t2693;
t2504 = -t2741 - t2742;
t2426 = t2430 * t2652 + t2504 * t2657;
t2431 = t2452 * t2656 - t2693 * t2735;
t2698 = t2426 * t2653 - t2431 * t2658;
t2666 = qJDD(6) - t2668;
t2509 = t2666 - t2732;
t2517 = -t2739 - t2742;
t2482 = -t2509 * t2651 + t2517 * t2655;
t2689 = t2509 * t2655 + t2517 * t2651;
t2454 = t2482 * t2735 + t2656 * t2689;
t2472 = t2564 * t2718 - t2708;
t2437 = t2454 * t2652 + t2472 * t2657;
t2455 = t2482 * t2656 - t2689 * t2735;
t2697 = t2437 * t2653 - t2455 * t2658;
t2510 = -t2666 - t2732;
t2530 = -t2739 - t2741;
t2490 = t2510 * t2655 - t2530 * t2651;
t2688 = t2510 * t2651 + t2530 * t2655;
t2456 = t2490 * t2735 + t2656 * t2688;
t2474 = -t2562 * t2718 - t2683;
t2440 = t2456 * t2652 + t2474 * t2657;
t2457 = t2490 * t2656 - t2688 * t2735;
t2696 = t2440 * t2653 - t2457 * t2658;
t2499 = t2635 * t2736 + t2664;
t2462 = t2499 * t2657 + t2500 * t2652;
t2501 = t2613 * t2710 + t2661;
t2695 = t2462 * t2653 - t2501 * t2658;
t2520 = -t2592 * t2721 + t2704;
t2665 = t2590 * t2721 - t2674;
t2487 = t2520 * t2735 + t2656 * t2665;
t2538 = -t2589 - t2740;
t2465 = t2487 * t2652 + t2538 * t2657;
t2488 = t2520 * t2656 - t2665 * t2735;
t2694 = t2465 * t2653 - t2488 * t2658;
t2544 = -t2738 - t2589;
t2505 = t2544 * t2735 + t2656 * t2662;
t2519 = t2592 * t2720 - t2704;
t2480 = t2505 * t2652 + t2519 * t2657;
t2506 = t2544 * t2656 - t2662 * t2735;
t2692 = t2480 * t2653 - t2506 * t2658;
t2529 = t2668 - t2729;
t2507 = t2529 * t2735 + t2656 * t2712;
t2521 = -t2590 * t2720 + t2674;
t2484 = t2507 * t2652 + t2521 * t2657;
t2508 = t2529 * t2656 - t2712 * t2735;
t2691 = t2484 * t2653 - t2508 * t2658;
t2486 = -t2515 * t2652 + t2516 * t2657;
t2690 = t2486 * t2653 - t2548 * t2658;
t2555 = t2613 * t2722 + t2706;
t2524 = -t2555 * t2657 - t2750;
t2687 = t2524 * t2653 - t2744;
t2600 = t2635 * t2613;
t2557 = -t2579 - t2600;
t2525 = t2557 * t2657 - t2750;
t2686 = t2525 * t2653 - t2744;
t2554 = t2613 * t2723 + t2706;
t2685 = -t2554 * t2658 + t2756;
t2556 = t2579 - t2600;
t2684 = t2556 * t2658 - t2756;
t2682 = -t2560 * t2658 - t2752;
t2558 = -t2611 * t2723 + t2676;
t2681 = t2558 * t2658 + t2752;
t2581 = -g(3) * t2724 - t2707;
t2582 = -g(3) * t2725 + t2717;
t2680 = t2581 * t2658 + t2582 * t2653;
t2596 = t2649 * t2672 - t2622;
t2625 = t2649 * t2671;
t2597 = t2625 + t2703;
t2679 = t2596 * t2658 + t2597 * t2653;
t2647 = t2653 ^ 2;
t2607 = -t2647 * t2726 - t2705;
t2634 = t2658 * t2653 * t2726;
t2620 = t2634 - t2644;
t2678 = t2607 * t2658 + t2620 * t2653;
t2619 = t2634 + t2644;
t2648 = t2658 ^ 2;
t2623 = -t2648 * t2726 - t2705;
t2677 = t2619 * t2658 + t2623 * t2653;
t2633 = -qJDD(1) * t2654 - t2659 * t2660;
t2632 = qJDD(1) * t2659 - t2654 * t2660;
t2624 = (-t2647 - t2648) * t2726;
t2601 = -t2649 * t2667 - t2734;
t2598 = t2625 - t2703;
t2595 = t2709 * t2713 + t2622;
t2588 = -t2619 * t2653 + t2623 * t2658;
t2583 = -t2607 * t2653 + t2620 * t2658;
t2567 = -t2596 * t2653 + t2597 * t2658;
t2566 = -t2649 * t2598 + t2650 * t2677;
t2565 = t2650 * t2598 + t2649 * t2677;
t2552 = -t2649 * t2595 + t2650 * t2678;
t2551 = t2650 * t2595 + t2649 * t2678;
t2547 = -t2649 * t2624 + t2650 * t2679;
t2546 = t2650 * t2624 + t2649 * t2679;
t2539 = -t2581 * t2653 + t2582 * t2658;
t2527 = -t2649 * t2601 + t2650 * t2680;
t2526 = t2650 * t2601 + t2649 * t2680;
t2523 = t2557 * t2652 + t2749;
t2522 = -t2555 * t2652 + t2749;
t2514 = -t2558 * t2653 + t2751;
t2513 = t2560 * t2653 - t2751;
t2512 = -t2556 * t2653 - t2755;
t2511 = t2554 * t2653 + t2755;
t2503 = t2525 * t2658 + t2745;
t2502 = t2524 * t2658 + t2745;
t2498 = t2650 * t2681 + t2748;
t2497 = t2650 * t2682 - t2748;
t2496 = t2649 * t2681 - t2747;
t2495 = t2649 * t2682 + t2747;
t2494 = t2650 * t2684 - t2754;
t2493 = t2650 * t2685 + t2754;
t2492 = t2649 * t2684 + t2753;
t2491 = t2649 * t2685 - t2753;
t2485 = t2515 * t2657 + t2516 * t2652;
t2483 = -t2507 * t2657 + t2521 * t2652;
t2479 = -t2505 * t2657 + t2519 * t2652;
t2471 = -t2649 * t2523 + t2650 * t2686;
t2470 = -t2649 * t2522 + t2650 * t2687;
t2469 = t2650 * t2523 + t2649 * t2686;
t2468 = t2650 * t2522 + t2649 * t2687;
t2464 = -t2487 * t2657 + t2538 * t2652;
t2463 = t2486 * t2658 + t2548 * t2653;
t2461 = t2499 * t2652 - t2500 * t2657;
t2460 = t2484 * t2658 + t2508 * t2653;
t2459 = t2480 * t2658 + t2506 * t2653;
t2453 = t2465 * t2658 + t2488 * t2653;
t2448 = -t2649 * t2485 + t2650 * t2690;
t2447 = t2650 * t2485 + t2649 * t2690;
t2446 = t2462 * t2658 + t2501 * t2653;
t2445 = -t2649 * t2483 + t2650 * t2691;
t2444 = t2650 * t2483 + t2649 * t2691;
t2443 = -t2649 * t2479 + t2650 * t2692;
t2442 = t2650 * t2479 + t2649 * t2692;
t2439 = -t2456 * t2657 + t2474 * t2652;
t2436 = -t2454 * t2657 + t2472 * t2652;
t2435 = -t2649 * t2464 + t2650 * t2694;
t2434 = t2650 * t2464 + t2649 * t2694;
t2433 = -t2649 * t2461 + t2650 * t2695;
t2432 = t2650 * t2461 + t2649 * t2695;
t2427 = t2440 * t2658 + t2457 * t2653;
t2425 = -t2430 * t2657 + t2504 * t2652;
t2424 = t2437 * t2658 + t2455 * t2653;
t2422 = -t2428 * t2657 + t2477 * t2652;
t2419 = -t2649 * t2439 + t2650 * t2696;
t2418 = t2650 * t2439 + t2649 * t2696;
t2417 = -t2649 * t2436 + t2650 * t2697;
t2416 = t2650 * t2436 + t2649 * t2697;
t2415 = t2426 * t2658 + t2431 * t2653;
t2414 = t2423 * t2658 + t2429 * t2653;
t2411 = -t2649 * t2425 + t2650 * t2698;
t2410 = t2650 * t2425 + t2649 * t2698;
t2409 = -t2649 * t2422 + t2650 * t2699;
t2408 = t2650 * t2422 + t2649 * t2699;
t2404 = -t2406 * t2657 + t2458 * t2652;
t2403 = t2405 * t2658 + t2407 * t2653;
t2402 = -t2649 * t2404 + t2650 * t2701;
t2401 = t2650 * t2404 + t2649 * t2701;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2633, -t2632, 0, -t2637 * t2654 + t2638 * t2659, 0, 0, 0, 0, 0, 0, -t2566 * t2654 + t2588 * t2659, -t2552 * t2654 + t2583 * t2659, -t2547 * t2654 + t2567 * t2659, -t2527 * t2654 + t2539 * t2659, 0, 0, 0, 0, 0, 0, -t2493 * t2654 + t2511 * t2659, -t2497 * t2654 + t2513 * t2659, -t2471 * t2654 + t2503 * t2659, -t2448 * t2654 + t2463 * t2659, 0, 0, 0, 0, 0, 0, -t2470 * t2654 + t2502 * t2659, -t2494 * t2654 + t2512 * t2659, -t2498 * t2654 + t2514 * t2659, -t2433 * t2654 + t2446 * t2659, 0, 0, 0, 0, 0, 0, -t2443 * t2654 + t2459 * t2659, -t2445 * t2654 + t2460 * t2659, -t2435 * t2654 + t2453 * t2659, -t2409 * t2654 + t2414 * t2659, 0, 0, 0, 0, 0, 0, -t2417 * t2654 + t2424 * t2659, -t2419 * t2654 + t2427 * t2659, -t2411 * t2654 + t2415 * t2659, -t2402 * t2654 + t2403 * t2659; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2632, t2633, 0, t2637 * t2659 + t2638 * t2654, 0, 0, 0, 0, 0, 0, t2566 * t2659 + t2588 * t2654, t2552 * t2659 + t2583 * t2654, t2547 * t2659 + t2567 * t2654, t2527 * t2659 + t2539 * t2654, 0, 0, 0, 0, 0, 0, t2493 * t2659 + t2511 * t2654, t2497 * t2659 + t2513 * t2654, t2471 * t2659 + t2503 * t2654, t2448 * t2659 + t2463 * t2654, 0, 0, 0, 0, 0, 0, t2470 * t2659 + t2502 * t2654, t2494 * t2659 + t2512 * t2654, t2498 * t2659 + t2514 * t2654, t2433 * t2659 + t2446 * t2654, 0, 0, 0, 0, 0, 0, t2443 * t2659 + t2459 * t2654, t2445 * t2659 + t2460 * t2654, t2435 * t2659 + t2453 * t2654, t2409 * t2659 + t2414 * t2654, 0, 0, 0, 0, 0, 0, t2417 * t2659 + t2424 * t2654, t2419 * t2659 + t2427 * t2654, t2411 * t2659 + t2415 * t2654, t2402 * t2659 + t2403 * t2654; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2565, t2551, t2546, t2526, 0, 0, 0, 0, 0, 0, t2491, t2495, t2469, t2447, 0, 0, 0, 0, 0, 0, t2468, t2492, t2496, t2432, 0, 0, 0, 0, 0, 0, t2442, t2444, t2434, t2408, 0, 0, 0, 0, 0, 0, t2416, t2418, t2410, t2401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2660, -qJDD(1), 0, t2638, 0, 0, 0, 0, 0, 0, t2588, t2583, t2567, t2539, 0, 0, 0, 0, 0, 0, t2511, t2513, t2503, t2463, 0, 0, 0, 0, 0, 0, t2502, t2512, t2514, t2446, 0, 0, 0, 0, 0, 0, t2459, t2460, t2453, t2414, 0, 0, 0, 0, 0, 0, t2424, t2427, t2415, t2403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2660, 0, t2637, 0, 0, 0, 0, 0, 0, t2566, t2552, t2547, t2527, 0, 0, 0, 0, 0, 0, t2493, t2497, t2471, t2448, 0, 0, 0, 0, 0, 0, t2470, t2494, t2498, t2433, 0, 0, 0, 0, 0, 0, t2443, t2445, t2435, t2409, 0, 0, 0, 0, 0, 0, t2417, t2419, t2411, t2402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2565, t2551, t2546, t2526, 0, 0, 0, 0, 0, 0, t2491, t2495, t2469, t2447, 0, 0, 0, 0, 0, 0, t2468, t2492, t2496, t2432, 0, 0, 0, 0, 0, 0, t2442, t2444, t2434, t2408, 0, 0, 0, 0, 0, 0, t2416, t2418, t2410, t2401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2623, t2620, t2597, t2582, 0, 0, 0, 0, 0, 0, t2534, -t2543, t2525, t2486, 0, 0, 0, 0, 0, 0, t2524, -t2534, t2543, t2462, 0, 0, 0, 0, 0, 0, t2480, t2484, t2465, t2423, 0, 0, 0, 0, 0, 0, t2437, t2440, t2426, t2405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2619, t2607, t2596, t2581, 0, 0, 0, 0, 0, 0, -t2554, -t2560, -t2743, -t2548, 0, 0, 0, 0, 0, 0, -t2743, t2556, t2558, -t2501, 0, 0, 0, 0, 0, 0, -t2506, -t2508, -t2488, -t2429, 0, 0, 0, 0, 0, 0, -t2455, -t2457, -t2431, -t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2598, t2595, t2624, t2601, 0, 0, 0, 0, 0, 0, -t2533, t2540, t2523, t2485, 0, 0, 0, 0, 0, 0, t2522, t2533, -t2540, t2461, 0, 0, 0, 0, 0, 0, t2479, t2483, t2464, t2422, 0, 0, 0, 0, 0, 0, t2436, t2439, t2425, t2404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2580, t2669, t2557, t2516, 0, 0, 0, 0, 0, 0, -t2555, -t2580, -t2669, t2499, 0, 0, 0, 0, 0, 0, t2519, t2521, t2538, t2477, 0, 0, 0, 0, 0, 0, t2472, t2474, t2504, t2458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2573, t2711, t2561, t2515, 0, 0, 0, 0, 0, 0, t2561, t2573, -t2711, -t2500, 0, 0, 0, 0, 0, 0, -t2505, -t2507, -t2487, -t2428, 0, 0, 0, 0, 0, 0, -t2454, -t2456, -t2430, -t2406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2554, t2560, t2743, t2548, 0, 0, 0, 0, 0, 0, t2743, -t2556, -t2558, t2501, 0, 0, 0, 0, 0, 0, t2506, t2508, t2488, t2429, 0, 0, 0, 0, 0, 0, t2455, t2457, t2431, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2743, -t2556, -t2558, t2501, 0, 0, 0, 0, 0, 0, t2506, t2508, t2488, t2429, 0, 0, 0, 0, 0, 0, t2455, t2457, t2431, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2555, t2580, t2669, -t2499, 0, 0, 0, 0, 0, 0, -t2519, -t2521, -t2538, -t2477, 0, 0, 0, 0, 0, 0, -t2472, -t2474, -t2504, -t2458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2561, -t2573, t2711, t2500, 0, 0, 0, 0, 0, 0, t2505, t2507, t2487, t2428, 0, 0, 0, 0, 0, 0, t2454, t2456, t2430, t2406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2544, t2529, t2520, t2451, 0, 0, 0, 0, 0, 0, t2482, t2490, t2452, t2413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2662, t2712, t2665, t2673, 0, 0, 0, 0, 0, 0, t2689, t2688, t2693, t2700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2519, t2521, t2538, t2477, 0, 0, 0, 0, 0, 0, t2472, t2474, t2504, t2458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2517, t2510, t2473, t2421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2509, t2530, t2475, t2420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2472, t2474, t2504, t2458;];
f_new_reg  = t1;
