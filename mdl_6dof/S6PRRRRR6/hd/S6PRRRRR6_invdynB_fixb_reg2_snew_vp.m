% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 12:50
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRRRR6_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR6_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR6_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR6_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR6_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRRRRR6_invdynB_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 12:43:27
% EndTime: 2019-05-05 12:46:21
% DurationCPUTime: 166.13s
% Computational Cost: add. (2002016->1289), mult. (4728613->2209), div. (0->0), fcn. (4036330->18), ass. (0->963)
t1272 = sin(qJ(2));
t1277 = cos(qJ(2));
t1267 = cos(pkin(6));
t1263 = sin(pkin(6));
t1543 = g(3) - qJDD(1);
t1480 = t1263 * t1543;
t1264 = cos(pkin(14));
t1255 = t1264 * g(2);
t1260 = sin(pkin(14));
t1481 = g(1) * t1260 - t1255;
t1299 = t1267 * t1481 - t1480;
t1473 = g(1) * t1264 + g(2) * t1260;
t1197 = t1272 * t1299 - t1277 * t1473;
t1554 = qJD(2) ^ 2;
t1567 = -t1554 * pkin(2) + t1197;
t1196 = -t1272 * t1473 - t1277 * t1299;
t1268 = sin(qJ(6));
t1266 = cos(pkin(7));
t1536 = qJD(2) * t1266;
t1253 = qJD(3) + t1536;
t1262 = sin(pkin(7));
t1270 = sin(qJ(4));
t1271 = sin(qJ(3));
t1275 = cos(qJ(4));
t1265 = cos(pkin(8));
t1276 = cos(qJ(3));
t1504 = t1265 * t1276;
t1261 = sin(pkin(8));
t1511 = t1261 * t1270;
t1205 = t1253 * t1511 + (t1270 * t1504 + t1271 * t1275) * t1262 * qJD(2);
t1508 = t1262 * t1276;
t1491 = qJD(2) * t1508;
t1475 = t1261 * t1491;
t1225 = t1253 * t1265 + qJD(4) - t1475;
t1269 = sin(qJ(5));
t1274 = cos(qJ(5));
t1178 = t1205 * t1274 + t1225 * t1269;
t1476 = t1265 * t1491;
t1509 = t1262 * t1271;
t1492 = qJD(2) * t1509;
t1510 = t1261 * t1275;
t1203 = -t1253 * t1510 + t1270 * t1492 - t1275 * t1476;
t1198 = qJD(5) + t1203;
t1273 = cos(qJ(6));
t1128 = t1178 * t1268 - t1273 * t1198;
t1130 = t1178 * t1273 + t1198 * t1268;
t1071 = t1130 * t1128;
t1496 = qJDD(2) * t1271;
t1534 = qJD(2) * t1276;
t1353 = qJD(3) * t1534 + t1496;
t1307 = t1353 * t1262;
t1498 = qJDD(2) * t1262;
t1229 = -qJD(3) * t1492 + t1276 * t1498;
t1477 = qJDD(2) * t1266 + qJDD(3);
t1361 = t1261 * t1477;
t1555 = t1265 * t1229 + t1361;
t1292 = t1270 * t1555 + t1275 * t1307;
t1146 = -t1203 * qJD(4) + t1292;
t1209 = -t1229 * t1261 + t1265 * t1477 + qJDD(4);
t1482 = t1178 * qJD(5) + t1269 * t1146 - t1274 * t1209;
t1474 = qJDD(6) + t1482;
t1557 = -t1071 + t1474;
t1573 = t1268 * t1557;
t1176 = t1205 * t1269 - t1274 * t1225;
t1115 = t1178 * t1176;
t1505 = t1265 * t1275;
t1296 = -t1229 * t1505 + t1270 * t1307 - t1275 * t1361;
t1295 = t1205 * qJD(4) + t1296;
t1145 = qJDD(5) + t1295;
t1556 = -t1115 + t1145;
t1572 = t1269 * t1556;
t1571 = t1273 * t1557;
t1570 = t1274 * t1556;
t1547 = pkin(10) * t1262;
t1568 = qJDD(2) * pkin(2) - t1196;
t1291 = -t1547 * t1554 - t1568;
t1289 = t1266 * t1291;
t1243 = t1263 * t1481;
t1466 = t1267 * t1543 + t1243;
t1350 = t1276 * t1466;
t1407 = t1477 * pkin(3);
t1284 = -t1262 * t1350 - t1276 * t1289 + t1407;
t1290 = pkin(10) * t1498 + t1567;
t1288 = t1271 * t1290;
t1314 = t1253 * t1261 + t1476;
t1301 = t1253 * t1314;
t1304 = pkin(11) * t1307;
t1546 = pkin(11) * t1261;
t1358 = -pkin(3) * t1276 - t1271 * t1546;
t1257 = t1262 ^ 2;
t1512 = t1257 * t1554;
t1306 = t1358 * t1512;
t1281 = pkin(11) * t1301 - t1265 * t1304 - t1271 * t1306 + t1284 - t1288;
t1167 = -t1262 * t1291 + t1266 * t1466;
t1285 = -t1229 * pkin(3) - t1167;
t1302 = qJD(2) * t1314;
t1297 = t1302 * t1508;
t1545 = pkin(11) * t1265;
t1309 = pkin(3) * t1253 - t1492 * t1545;
t1283 = -pkin(11) * t1297 - t1261 * t1304 + t1309 * t1492 + t1285;
t1569 = t1261 * t1283 + t1265 * t1281;
t1286 = -t1262 * t1466 - t1289;
t1117 = t1271 * t1286 + t1276 * t1290;
t1523 = t1178 * t1198;
t1566 = t1482 + t1523;
t1158 = t1272 * t1196 + t1197 * t1277;
t1565 = t1158 * t1263;
t1564 = t1260 * t1543;
t1563 = t1264 * t1543;
t1520 = t1203 * t1205;
t1310 = t1209 - t1520;
t1562 = t1270 * t1310;
t1351 = t1272 * t1466;
t1559 = t1275 * t1310;
t1349 = t1277 * t1466;
t1083 = -t1176 * qJD(5) + t1274 * t1146 + t1269 * t1209;
t1136 = t1198 * t1176;
t1047 = -t1136 + t1083;
t1184 = t1225 * t1203;
t1109 = -t1184 + t1146;
t1173 = qJD(6) + t1176;
t1091 = t1173 * t1128;
t1483 = t1128 * qJD(6) - t1273 * t1083 - t1268 * t1145;
t978 = t1483 + t1091;
t1478 = t1083 * t1268 - t1273 * t1145;
t973 = t1130 * (qJD(6) - t1173) + t1478;
t1221 = -t1260 * t1481 - t1264 * t1473;
t1125 = t1128 ^ 2;
t1126 = t1130 ^ 2;
t1172 = t1173 ^ 2;
t1174 = t1176 ^ 2;
t1175 = t1178 ^ 2;
t1553 = t1198 ^ 2;
t1199 = t1203 ^ 2;
t1200 = t1205 ^ 2;
t1552 = t1225 ^ 2;
t1252 = t1253 ^ 2;
t1551 = pkin(4) * t1270;
t1550 = pkin(4) * t1275;
t1549 = pkin(5) * t1269;
t1548 = pkin(9) * t1267;
t1113 = pkin(5) * t1176 - pkin(13) * t1178;
t1093 = t1265 * t1283;
t1279 = -t1261 * t1281 + t1093 - t1109 * pkin(12) + (t1205 * t1225 + t1295) * pkin(4);
t1165 = pkin(4) * t1203 - pkin(12) * t1205;
t1072 = pkin(11) * t1555 - t1253 * t1309 + t1276 * t1306 + t1117;
t1502 = t1275 * t1072;
t932 = -t1552 * pkin(4) + t1209 * pkin(12) - t1203 * t1165 + t1270 * t1569 + t1502;
t856 = t1269 * t1279 + t1274 * t932;
t831 = -pkin(5) * t1553 + pkin(13) * t1145 - t1113 * t1176 + t856;
t960 = t1072 * t1270 - t1275 * t1569;
t931 = -t1209 * pkin(4) - t1552 * pkin(12) + t1165 * t1205 + t960;
t870 = pkin(5) * t1566 - t1047 * pkin(13) + t931;
t772 = t1268 * t870 + t1273 * t831;
t855 = t1269 * t932 - t1274 * t1279;
t830 = -t1145 * pkin(5) - pkin(13) * t1553 + t1113 * t1178 + t855;
t1542 = t1268 * t830;
t999 = t1071 + t1474;
t1541 = t1268 * t999;
t1540 = t1269 * t931;
t1539 = t1273 * t830;
t1538 = t1273 * t999;
t1537 = t1274 * t931;
t1535 = qJD(2) * t1271;
t1494 = -pkin(10) - t1545;
t1503 = t1266 * t1276;
t1009 = t1261 * (t1252 * t1546 - t1271 * t1567 + t1503 * t1568 + t1407) - t1093 + ((-qJD(3) + t1253) * t1504 * t1546 * qJD(2) + (t1494 * t1496 - t1350 + (pkin(10) * t1503 - t1358 * t1509) * t1554) * t1261) * t1262;
t1533 = t1009 * t1270;
t1532 = t1009 * t1275;
t1067 = t1115 + t1145;
t1531 = t1067 * t1269;
t1530 = t1067 * t1274;
t1131 = -t1209 - t1520;
t1529 = t1131 * t1270;
t1528 = t1131 * t1275;
t1527 = t1167 * t1271;
t1526 = t1167 * t1276;
t1525 = t1173 * t1268;
t1524 = t1173 * t1273;
t1522 = t1198 * t1269;
t1521 = t1198 * t1274;
t1519 = t1205 * t1270;
t1214 = (t1496 + (qJD(3) + t1253) * t1534) * t1262;
t1518 = t1214 * t1266;
t1484 = t1271 * t1276 * t1554;
t1250 = t1257 * t1484;
t1227 = t1250 + t1477;
t1517 = t1227 * t1271;
t1516 = t1227 * t1276;
t1228 = -t1250 + t1477;
t1515 = t1228 * t1271;
t1514 = t1228 * t1276;
t1513 = t1253 * t1262;
t1506 = t1265 * t1270;
t1501 = qJD(4) + t1225;
t1258 = t1271 ^ 2;
t1259 = t1276 ^ 2;
t1499 = t1258 + t1259;
t1497 = qJDD(2) * t1263;
t1495 = -pkin(5) * t1274 - pkin(4);
t1493 = qJD(2) * t1513;
t1490 = t1258 * t1512;
t1489 = t1259 * t1512;
t1488 = t1269 * t1071;
t1487 = t1274 * t1071;
t1486 = t1270 * t1115;
t1485 = t1275 * t1115;
t771 = t1268 * t831 - t1273 * t870;
t784 = t1269 * t855 + t1274 * t856;
t1479 = -t1253 + t1536;
t1226 = -t1490 - t1252;
t1189 = -t1226 * t1271 - t1514;
t1471 = pkin(10) * t1189 - t1527;
t1232 = -t1252 - t1489;
t1194 = t1232 * t1276 - t1517;
t1470 = pkin(10) * t1194 + t1526;
t1144 = -t1552 - t1199;
t1079 = t1144 * t1275 - t1562;
t1469 = pkin(11) * t1079 + t1532;
t1156 = -t1200 - t1552;
t1088 = -t1156 * t1270 + t1528;
t1468 = pkin(11) * t1088 - t1533;
t1467 = g(2) * t1260 ^ 2 + t1255 * t1264;
t706 = t1268 * t772 - t1273 * t771;
t707 = t1268 * t771 + t1273 * t772;
t783 = t1269 * t856 - t1274 * t855;
t683 = t1269 * t830 + t1274 * t707;
t1465 = t1270 * t683 - t1275 * t706;
t1464 = t1270 * t784 - t1275 * t931;
t1036 = t1125 + t1126;
t977 = -t1091 + t1483;
t894 = -t1268 * t977 - t1273 * t973;
t850 = -t1036 * t1269 + t1274 * t894;
t892 = -t1268 * t973 + t1273 * t977;
t1463 = t1270 * t850 - t1275 * t892;
t1069 = -t1126 + t1125;
t975 = (-qJD(6) - t1173) * t1130 - t1478;
t895 = t1268 * t978 + t1273 * t975;
t865 = -t1069 * t1269 + t1274 * t895;
t893 = -t1268 * t975 + t1273 * t978;
t1462 = t1270 * t865 + t1275 * t893;
t1051 = -t1172 - t1125;
t941 = t1051 * t1273 - t1573;
t877 = -t1269 * t975 + t1274 * t941;
t940 = t1051 * t1268 + t1571;
t1461 = t1270 * t877 - t1275 * t940;
t1058 = -t1126 - t1172;
t949 = -t1058 * t1268 - t1538;
t880 = -t1269 * t978 + t1274 * t949;
t948 = t1058 * t1273 - t1541;
t1460 = t1270 * t880 - t1275 * t948;
t1090 = -t1126 + t1172;
t967 = -t1090 * t1268 + t1571;
t887 = -t1269 * t977 + t1274 * t967;
t965 = -t1090 * t1273 - t1573;
t1459 = t1270 * t887 + t1275 * t965;
t1089 = t1125 - t1172;
t968 = t1089 * t1273 - t1541;
t888 = -t1269 * t973 + t1274 * t968;
t966 = -t1089 * t1268 - t1538;
t1458 = t1270 * t888 + t1275 * t966;
t1001 = -qJD(6) * t1130 - t1478;
t970 = -t1001 * t1268 + t1128 * t1524;
t927 = t1274 * t970 - t1488;
t969 = -t1001 * t1273 - t1128 * t1525;
t1457 = t1270 * t927 + t1275 * t969;
t972 = -t1130 * t1525 - t1273 * t1483;
t928 = t1274 * t972 + t1488;
t971 = -t1130 * t1524 + t1268 * t1483;
t1456 = t1270 * t928 + t1275 * t971;
t961 = t1502 + (t1261 * t1285 + t1265 * t1284 + (t1265 * (-qJD(3) * t1476 + t1301) + t1261 * (-qJD(3) * t1475 - t1297)) * pkin(11) + (-t1265 * t1567 + (pkin(3) * t1302 + (-pkin(11) * t1261 ^ 2 + t1265 * t1494) * qJDD(2)) * t1262) * t1271) * t1270;
t1455 = t1270 * t961 - t1275 * t960;
t882 = t1270 * t960 + t1275 * t961;
t682 = t1269 * t707 - t1274 * t830;
t613 = -t1261 * t682 + t1265 * t1465;
t649 = t1270 * t706 + t1275 * t683;
t1454 = t1271 * t649 + t1276 * t613;
t703 = -t1261 * t783 + t1265 * t1464;
t756 = t1270 * t931 + t1275 * t784;
t1453 = t1271 * t756 + t1276 * t703;
t849 = t1036 * t1274 + t1269 * t894;
t744 = -t1261 * t849 + t1265 * t1463;
t793 = t1270 * t892 + t1275 * t850;
t1452 = t1271 * t793 + t1276 * t744;
t864 = t1069 * t1274 + t1269 * t895;
t748 = -t1261 * t864 + t1265 * t1462;
t798 = -t1270 * t893 + t1275 * t865;
t1451 = t1271 * t798 + t1276 * t748;
t876 = t1269 * t941 + t1274 * t975;
t768 = -t1261 * t876 + t1265 * t1461;
t816 = t1270 * t940 + t1275 * t877;
t1450 = t1271 * t816 + t1276 * t768;
t879 = t1269 * t949 + t1274 * t978;
t774 = -t1261 * t879 + t1265 * t1460;
t823 = t1270 * t948 + t1275 * t880;
t1449 = t1271 * t823 + t1276 * t774;
t885 = t1269 * t967 + t1274 * t977;
t781 = -t1261 * t885 + t1265 * t1459;
t832 = -t1270 * t965 + t1275 * t887;
t1448 = t1271 * t832 + t1276 * t781;
t886 = t1269 * t968 + t1274 * t973;
t782 = -t1261 * t886 + t1265 * t1458;
t833 = -t1270 * t966 + t1275 * t888;
t1447 = t1271 * t833 + t1276 * t782;
t925 = t1269 * t970 + t1487;
t810 = -t1261 * t925 + t1265 * t1457;
t862 = -t1270 * t969 + t1275 * t927;
t1446 = t1271 * t862 + t1276 * t810;
t926 = t1269 * t972 - t1487;
t811 = -t1261 * t926 + t1265 * t1456;
t863 = -t1270 * t971 + t1275 * t928;
t1445 = t1271 * t863 + t1276 * t811;
t841 = t1009 * t1261 + t1265 * t1455;
t1444 = t1271 * t882 + t1276 * t841;
t1016 = (t1128 * t1268 + t1130 * t1273) * t1173;
t1017 = (-t1128 * t1273 + t1130 * t1268) * t1173;
t981 = t1017 * t1274 + t1269 * t1474;
t1404 = t1016 * t1275 + t1270 * t981;
t980 = t1017 * t1269 - t1274 * t1474;
t852 = -t1261 * t980 + t1265 * t1404;
t917 = -t1016 * t1270 + t1275 * t981;
t1443 = t1271 * t917 + t1276 * t852;
t1087 = t1174 + t1175;
t1045 = -t1482 + t1523;
t1048 = -t1136 - t1083;
t958 = t1045 * t1274 - t1048 * t1269;
t1400 = t1087 * t1275 + t1270 * t958;
t956 = t1045 * t1269 + t1048 * t1274;
t861 = -t1261 * t956 + t1265 * t1400;
t929 = -t1087 * t1270 + t1275 * t958;
t1442 = t1271 * t929 + t1276 * t861;
t1114 = -t1175 + t1174;
t959 = -t1047 * t1269 - t1274 * t1566;
t1399 = t1114 * t1275 + t1270 * t959;
t957 = t1047 * t1274 - t1269 * t1566;
t872 = -t1261 * t957 + t1265 * t1399;
t938 = -t1114 * t1270 + t1275 * t959;
t1441 = t1271 * t938 + t1276 * t872;
t1096 = -t1553 - t1174;
t1005 = t1096 * t1269 + t1570;
t1006 = t1096 * t1274 - t1572;
t1398 = t1006 * t1270 - t1275 * t1566;
t899 = -t1005 * t1261 + t1265 * t1398;
t943 = t1006 * t1275 + t1270 * t1566;
t1440 = t1271 * t943 + t1276 * t899;
t1111 = -t1175 - t1553;
t1012 = t1111 * t1274 - t1531;
t1013 = -t1111 * t1269 - t1530;
t1396 = t1013 * t1270 - t1047 * t1275;
t905 = -t1012 * t1261 + t1265 * t1396;
t947 = t1013 * t1275 + t1047 * t1270;
t1439 = t1271 * t947 + t1276 * t905;
t1135 = -t1175 + t1553;
t1026 = t1135 * t1274 + t1572;
t1028 = -t1135 * t1269 + t1570;
t1392 = t1028 * t1270 + t1048 * t1275;
t911 = -t1026 * t1261 + t1265 * t1392;
t954 = t1028 * t1275 - t1048 * t1270;
t1438 = t1271 * t954 + t1276 * t911;
t1134 = t1174 - t1553;
t1027 = t1134 * t1269 + t1530;
t1029 = t1134 * t1274 - t1531;
t1391 = t1029 * t1270 - t1045 * t1275;
t912 = -t1027 * t1261 + t1265 * t1391;
t955 = t1029 * t1275 + t1045 * t1270;
t1437 = t1271 * t955 + t1276 * t912;
t1040 = t1176 * t1522 - t1274 * t1482;
t1041 = t1176 * t1521 + t1269 * t1482;
t1355 = t1041 * t1270 + t1485;
t936 = -t1040 * t1261 + t1265 * t1355;
t990 = t1041 * t1275 - t1486;
t1436 = t1271 * t990 + t1276 * t936;
t1042 = t1083 * t1269 + t1178 * t1521;
t1043 = t1083 * t1274 - t1178 * t1522;
t1354 = t1043 * t1270 - t1485;
t937 = -t1042 * t1261 + t1265 * t1354;
t991 = t1043 * t1275 + t1486;
t1435 = t1271 * t991 + t1276 * t937;
t612 = t1261 * t1465 + t1265 * t682;
t581 = -t1262 * t612 + t1266 * t1454;
t591 = -t1271 * t613 + t1276 * t649;
t1434 = t1272 * t591 + t1277 * t581;
t702 = t1261 * t1464 + t1265 * t783;
t636 = -t1262 * t702 + t1266 * t1453;
t665 = -t1271 * t703 + t1276 * t756;
t1433 = t1272 * t665 + t1277 * t636;
t743 = t1261 * t1463 + t1265 * t849;
t662 = -t1262 * t743 + t1266 * t1452;
t699 = -t1271 * t744 + t1276 * t793;
t1432 = t1272 * t699 + t1277 * t662;
t747 = t1261 * t1462 + t1265 * t864;
t664 = -t1262 * t747 + t1266 * t1451;
t704 = -t1271 * t748 + t1276 * t798;
t1431 = t1272 * t704 + t1277 * t664;
t767 = t1261 * t1461 + t1265 * t876;
t677 = -t1262 * t767 + t1266 * t1450;
t723 = -t1271 * t768 + t1276 * t816;
t1430 = t1272 * t723 + t1277 * t677;
t773 = t1261 * t1460 + t1265 * t879;
t680 = -t1262 * t773 + t1266 * t1449;
t728 = -t1271 * t774 + t1276 * t823;
t1429 = t1272 * t728 + t1277 * t680;
t779 = t1261 * t1459 + t1265 * t885;
t688 = -t1262 * t779 + t1266 * t1448;
t731 = -t1271 * t781 + t1276 * t832;
t1428 = t1272 * t731 + t1277 * t688;
t780 = t1261 * t1458 + t1265 * t886;
t689 = -t1262 * t780 + t1266 * t1447;
t732 = -t1271 * t782 + t1276 * t833;
t1427 = t1272 * t732 + t1277 * t689;
t808 = t1261 * t1457 + t1265 * t925;
t716 = -t1262 * t808 + t1266 * t1446;
t760 = -t1271 * t810 + t1276 * t862;
t1426 = t1272 * t760 + t1277 * t716;
t809 = t1261 * t1456 + t1265 * t926;
t717 = -t1262 * t809 + t1266 * t1445;
t761 = -t1271 * t811 + t1276 * t863;
t1425 = t1272 * t761 + t1277 * t717;
t840 = -t1009 * t1265 + t1261 * t1455;
t738 = -t1262 * t840 + t1266 * t1444;
t788 = -t1271 * t841 + t1276 * t882;
t1424 = t1272 * t788 + t1277 * t738;
t851 = t1261 * t1404 + t1265 * t980;
t750 = -t1262 * t851 + t1266 * t1443;
t803 = -t1271 * t852 + t1276 * t917;
t1423 = t1272 * t803 + t1277 * t750;
t860 = t1261 * t1400 + t1265 * t956;
t759 = -t1262 * t860 + t1266 * t1442;
t806 = -t1271 * t861 + t1276 * t929;
t1422 = t1272 * t806 + t1277 * t759;
t871 = t1261 * t1399 + t1265 * t957;
t765 = -t1262 * t871 + t1266 * t1441;
t814 = -t1271 * t872 + t1276 * t938;
t1421 = t1272 * t814 + t1277 * t765;
t898 = t1005 * t1265 + t1261 * t1398;
t786 = -t1262 * t898 + t1266 * t1440;
t827 = -t1271 * t899 + t1276 * t943;
t1420 = t1272 * t827 + t1277 * t786;
t904 = t1012 * t1265 + t1261 * t1396;
t792 = -t1262 * t904 + t1266 * t1439;
t835 = -t1271 * t905 + t1276 * t947;
t1419 = t1272 * t835 + t1277 * t792;
t909 = t1026 * t1265 + t1261 * t1392;
t796 = -t1262 * t909 + t1266 * t1438;
t838 = -t1271 * t911 + t1276 * t954;
t1418 = t1272 * t838 + t1277 * t796;
t910 = t1027 * t1265 + t1261 * t1391;
t797 = -t1262 * t910 + t1266 * t1437;
t839 = -t1271 * t912 + t1276 * t955;
t1417 = t1272 * t839 + t1277 * t797;
t934 = t1040 * t1265 + t1261 * t1355;
t819 = -t1262 * t934 + t1266 * t1436;
t883 = -t1271 * t936 + t1276 * t990;
t1416 = t1272 * t883 + t1277 * t819;
t935 = t1042 * t1265 + t1261 * t1354;
t820 = -t1262 * t935 + t1266 * t1435;
t884 = -t1271 * t937 + t1276 * t991;
t1415 = t1272 * t884 + t1277 * t820;
t1078 = (-t1176 * t1274 + t1178 * t1269) * t1198;
t1037 = t1078 * t1275 + t1145 * t1270;
t1077 = (-t1176 * t1269 - t1178 * t1274) * t1198;
t1386 = t1078 * t1270 - t1145 * t1275;
t984 = -t1077 * t1261 + t1265 * t1386;
t1403 = t1037 * t1271 + t1276 * t984;
t983 = t1077 * t1265 + t1261 * t1386;
t869 = -t1262 * t983 + t1266 * t1403;
t924 = t1037 * t1276 - t1271 * t984;
t1414 = t1272 * t924 + t1277 * t869;
t1110 = t1184 + t1146;
t1293 = (-qJD(4) + t1225) * t1205 - t1296;
t1038 = t1110 * t1270 + t1275 * t1293;
t1127 = -t1199 - t1200;
t1383 = -t1110 * t1275 + t1270 * t1293;
t997 = -t1127 * t1261 + t1265 * t1383;
t1402 = t1038 * t1271 + t1276 * t997;
t996 = t1127 * t1265 + t1261 * t1383;
t891 = -t1262 * t996 + t1266 * t1402;
t939 = t1038 * t1276 - t1271 * t997;
t1413 = t1272 * t939 + t1277 * t891;
t1166 = t1200 - t1199;
t1105 = t1205 * t1501 + t1296;
t1384 = -t1105 * t1270 + t1109 * t1275;
t1007 = t1166 * t1265 + t1261 * t1384;
t1008 = -t1166 * t1261 + t1265 * t1384;
t1039 = -t1105 * t1275 - t1109 * t1270;
t1397 = t1008 * t1276 + t1039 * t1271;
t901 = -t1007 * t1262 + t1266 * t1397;
t942 = -t1008 * t1271 + t1039 * t1276;
t1412 = t1272 * t942 + t1277 * t901;
t1378 = t1144 * t1270 + t1559;
t1014 = t1105 * t1265 + t1261 * t1378;
t1015 = -t1105 * t1261 + t1265 * t1378;
t1395 = t1015 * t1276 + t1079 * t1271;
t916 = -t1014 * t1262 + t1266 * t1395;
t979 = -t1015 * t1271 + t1079 * t1276;
t1411 = t1272 * t979 + t1277 * t916;
t1108 = -t1203 * t1501 + t1292;
t1381 = t1156 * t1275 + t1529;
t1018 = t1108 * t1265 + t1261 * t1381;
t1019 = -t1108 * t1261 + t1265 * t1381;
t1394 = t1019 * t1276 + t1088 * t1271;
t919 = -t1018 * t1262 + t1266 * t1394;
t982 = -t1019 * t1271 + t1088 * t1276;
t1410 = t1272 * t982 + t1277 * t919;
t1183 = -t1200 + t1552;
t1379 = t1183 * t1275 + t1562;
t1032 = t1110 * t1265 + t1261 * t1379;
t1034 = -t1110 * t1261 + t1265 * t1379;
t1094 = -t1183 * t1270 + t1559;
t1390 = t1034 * t1276 + t1094 * t1271;
t922 = -t1032 * t1262 + t1266 * t1390;
t985 = -t1034 * t1271 + t1094 * t1276;
t1409 = t1272 * t985 + t1277 * t922;
t1182 = t1199 - t1552;
t1380 = t1182 * t1270 - t1528;
t1033 = t1261 * t1380 + t1265 * t1293;
t1035 = -t1261 * t1293 + t1265 * t1380;
t1095 = t1182 * t1275 + t1529;
t1389 = t1035 * t1276 + t1095 * t1271;
t923 = -t1033 * t1262 + t1266 * t1389;
t986 = -t1035 * t1271 + t1095 * t1276;
t1408 = t1272 * t986 + t1277 * t923;
t1294 = t1275 * t1295;
t1060 = -t1265 * t1294 + (t1205 * t1261 + t1225 * t1506) * t1203;
t1101 = t1184 * t1275 + t1270 * t1295;
t1003 = -t1060 * t1271 + t1101 * t1276;
t1059 = -t1261 * t1294 + (-t1205 * t1265 + t1225 * t1511) * t1203;
t1388 = t1060 * t1276 + t1101 * t1271;
t952 = -t1059 * t1262 + t1266 * t1388;
t1406 = t1003 * t1272 + t1277 * t952;
t1062 = t1146 * t1506 + (-t1203 * t1261 + t1225 * t1505) * t1205;
t1102 = t1146 * t1275 - t1225 * t1519;
t1004 = -t1062 * t1271 + t1102 * t1276;
t1061 = t1146 * t1511 + (t1203 * t1265 + t1225 * t1510) * t1205;
t1387 = t1062 * t1276 + t1102 * t1271;
t953 = -t1061 * t1262 + t1266 * t1387;
t1405 = t1004 * t1272 + t1277 * t953;
t1348 = t1225 * (-t1203 * t1270 - t1205 * t1275);
t1100 = -t1209 * t1261 + t1265 * t1348;
t1121 = (-t1203 * t1275 + t1519) * t1225;
t1050 = -t1100 * t1271 + t1121 * t1276;
t1099 = t1209 * t1265 + t1261 * t1348;
t1385 = t1100 * t1276 + t1121 * t1271;
t988 = -t1099 * t1262 + t1266 * t1385;
t1401 = t1050 * t1272 + t1277 * t988;
t1116 = -t1276 * t1286 + t1288;
t1382 = -t1116 * t1276 + t1117 * t1271;
t1025 = t1167 * t1262 + t1266 * t1382;
t1055 = t1116 * t1271 + t1117 * t1276;
t1393 = t1025 * t1277 + t1055 * t1272;
t1238 = t1499 * t1512;
t1240 = t1253 * t1491;
t1216 = -t1240 + t1307;
t1239 = t1253 * t1492;
t1217 = t1229 + t1239;
t1368 = -t1216 * t1276 + t1217 * t1271;
t1151 = t1238 * t1262 + t1266 * t1368;
t1168 = t1216 * t1271 + t1217 * t1276;
t1377 = t1151 * t1277 + t1168 * t1272;
t1237 = (t1258 - t1259) * t1512;
t1215 = t1240 + t1307;
t1218 = t1229 - t1239;
t1369 = t1215 * t1276 + t1218 * t1271;
t1152 = -t1237 * t1262 + t1266 * t1369;
t1169 = -t1215 * t1271 + t1218 * t1276;
t1376 = t1152 * t1277 + t1169 * t1272;
t1367 = t1226 * t1276 - t1515;
t1155 = -t1214 * t1262 + t1266 * t1367;
t1375 = t1155 * t1277 + t1189 * t1272;
t1230 = t1252 - t1490;
t1366 = t1230 * t1276 + t1517;
t1162 = -t1216 * t1262 + t1266 * t1366;
t1192 = -t1230 * t1271 + t1516;
t1374 = t1162 * t1277 + t1192 * t1272;
t1231 = -t1252 + t1489;
t1364 = t1231 * t1271 + t1514;
t1163 = -t1217 * t1262 + t1266 * t1364;
t1193 = t1231 * t1276 - t1515;
t1373 = t1163 * t1277 + t1193 * t1272;
t1365 = t1232 * t1271 + t1516;
t1164 = t1218 * t1262 + t1266 * t1365;
t1372 = t1164 * t1277 + t1194 * t1272;
t1256 = t1262 * t1257;
t1185 = (t1229 * t1266 + (-qJD(2) * t1256 - t1266 * t1513) * t1535) * t1276;
t1206 = -t1229 * t1271 - t1259 * t1493;
t1371 = t1185 * t1277 + t1206 * t1272;
t1188 = t1256 * t1484 + t1271 * t1518;
t1207 = (-t1258 * qJD(2) * t1253 + t1276 * t1353) * t1262;
t1370 = t1188 * t1277 + t1207 * t1272;
t1157 = t1277 * t1196 - t1272 * t1197;
t1362 = t1272 * qJDD(2) + t1277 * t1554;
t1235 = t1362 * t1267;
t1248 = qJDD(2) * t1277 - t1272 * t1554;
t1363 = t1235 * t1264 + t1248 * t1260;
t1212 = t1235 * t1260 - t1248 * t1264;
t1360 = t1262 * t1477;
t1359 = t1266 * t1477;
t620 = -pkin(12) * t682 + (-pkin(13) * t1274 + t1549) * t706;
t639 = -pkin(4) * t682 + pkin(5) * t830 - pkin(13) * t707;
t1322 = pkin(11) * t649 + t1270 * t620 + t1275 * t639;
t603 = pkin(12) * t683 + (-pkin(13) * t1269 + t1495) * t706;
t561 = -pkin(3) * t612 - t1261 * t603 + t1265 * t1322;
t568 = -t1270 * t639 + t1275 * t620 + (-t1261 * t612 - t1265 * t613) * pkin(11);
t1334 = pkin(10) * t591 + t1271 * t568 + t1276 * t561;
t560 = pkin(3) * t613 + t1261 * t1322 + t1265 * t603;
t580 = t1262 * t1454 + t1266 * t612;
t543 = -pkin(2) * t580 - t1262 * t560 + t1266 * t1334;
t546 = -t1271 * t561 + t1276 * t568 + (-t1262 * t580 - t1266 * t581) * pkin(10);
t562 = -t1272 * t581 + t1277 * t591;
t1347 = pkin(9) * t562 + t1272 * t546 + t1277 * t543;
t694 = -pkin(13) * t892 - t706;
t667 = -pkin(12) * t849 + t1274 * t694 + t1549 * t892;
t674 = -pkin(4) * t849 - pkin(5) * t1036 - pkin(13) * t894 - t707;
t1321 = pkin(11) * t793 + t1270 * t667 + t1275 * t674;
t660 = pkin(12) * t850 + t1269 * t694 + t1495 * t892;
t590 = -pkin(3) * t743 - t1261 * t660 + t1265 * t1321;
t600 = -t1270 * t674 + t1275 * t667 + (-t1261 * t743 - t1265 * t744) * pkin(11);
t1333 = pkin(10) * t699 + t1271 * t600 + t1276 * t590;
t589 = pkin(3) * t744 + t1261 * t1321 + t1265 * t660;
t661 = t1262 * t1452 + t1266 * t743;
t558 = -pkin(2) * t661 - t1262 * t589 + t1266 * t1333;
t563 = -t1271 * t590 + t1276 * t600 + (-t1262 * t661 - t1266 * t662) * pkin(10);
t633 = -t1272 * t662 + t1277 * t699;
t1346 = pkin(9) * t633 + t1272 * t563 + t1277 * t558;
t1305 = pkin(11) * t756 + (-pkin(12) * t1270 - t1550) * t783;
t757 = -pkin(4) * t931 + pkin(12) * t784;
t626 = -pkin(3) * t702 - t1261 * t757 + t1265 * t1305;
t628 = (-pkin(12) * t1275 + t1551) * t783 + (-t1261 * t702 - t1265 * t703) * pkin(11);
t1330 = pkin(10) * t665 + t1271 * t628 + t1276 * t626;
t625 = pkin(3) * t703 + t1261 * t1305 + t1265 * t757;
t635 = t1262 * t1453 + t1266 * t702;
t565 = -pkin(2) * t635 - t1262 * t625 + t1266 * t1330;
t573 = -t1271 * t626 + t1276 * t628 + (-t1262 * t635 - t1266 * t636) * pkin(10);
t602 = -t1272 * t636 + t1277 * t665;
t1345 = pkin(9) * t602 + t1272 * t573 + t1277 * t565;
t751 = -pkin(5) * t940 + t771;
t799 = -pkin(13) * t940 + t1542;
t692 = -pkin(12) * t876 - t1269 * t751 + t1274 * t799;
t739 = -pkin(4) * t876 - pkin(5) * t975 - pkin(13) * t941 + t1539;
t1320 = pkin(11) * t816 + t1270 * t692 + t1275 * t739;
t678 = -pkin(4) * t940 + pkin(12) * t877 + t1269 * t799 + t1274 * t751;
t606 = -pkin(3) * t767 - t1261 * t678 + t1265 * t1320;
t631 = -t1270 * t739 + t1275 * t692 + (-t1261 * t767 - t1265 * t768) * pkin(11);
t1332 = pkin(10) * t723 + t1271 * t631 + t1276 * t606;
t605 = pkin(3) * t768 + t1261 * t1320 + t1265 * t678;
t676 = t1262 * t1450 + t1266 * t767;
t567 = -pkin(2) * t676 - t1262 * t605 + t1266 * t1332;
t578 = -t1271 * t606 + t1276 * t631 + (-t1262 * t676 - t1266 * t677) * pkin(10);
t650 = -t1272 * t677 + t1277 * t723;
t1344 = pkin(9) * t650 + t1272 * t578 + t1277 * t567;
t754 = -pkin(5) * t948 + t772;
t802 = -pkin(13) * t948 + t1539;
t693 = -pkin(12) * t879 - t1269 * t754 + t1274 * t802;
t740 = -pkin(4) * t879 - pkin(5) * t978 - pkin(13) * t949 - t1542;
t1319 = pkin(11) * t823 + t1270 * t693 + t1275 * t740;
t681 = -pkin(4) * t948 + pkin(12) * t880 + t1269 * t802 + t1274 * t754;
t608 = -pkin(3) * t773 - t1261 * t681 + t1265 * t1319;
t632 = -t1270 * t740 + t1275 * t693 + (-t1261 * t773 - t1265 * t774) * pkin(11);
t1331 = pkin(10) * t728 + t1271 * t632 + t1276 * t608;
t607 = pkin(3) * t774 + t1261 * t1319 + t1265 * t681;
t679 = t1262 * t1449 + t1266 * t773;
t570 = -pkin(2) * t679 - t1262 * t607 + t1266 * t1331;
t579 = -t1271 * t608 + t1276 * t632 + (-t1262 * t679 - t1266 * t680) * pkin(10);
t651 = -t1272 * t680 + t1277 * t728;
t1343 = pkin(9) * t651 + t1272 * t579 + t1277 * t570;
t763 = -pkin(12) * t956 - t783;
t1308 = pkin(11) * t929 + t1270 * t763 - t1550 * t956;
t755 = pkin(4) * t1087 + pkin(12) * t958 + t784;
t669 = -pkin(3) * t860 - t1261 * t755 + t1265 * t1308;
t698 = t956 * t1551 + t1275 * t763 + (-t1261 * t860 - t1265 * t861) * pkin(11);
t1329 = pkin(10) * t806 + t1271 * t698 + t1276 * t669;
t668 = pkin(3) * t861 + t1261 * t1308 + t1265 * t755;
t758 = t1262 * t1442 + t1266 * t860;
t597 = -pkin(2) * t758 - t1262 * t668 + t1266 * t1329;
t609 = -t1271 * t669 + t1276 * t698 + (-t1262 * t758 - t1266 * t759) * pkin(10);
t713 = -t1272 * t759 + t1277 * t806;
t1342 = pkin(9) * t713 + t1272 * t609 + t1277 * t597;
t825 = -pkin(4) * t1005 + t855;
t889 = -pkin(12) * t1005 + t1540;
t1318 = pkin(11) * t943 + t1270 * t889 + t1275 * t825;
t853 = -pkin(4) * t1566 + pkin(12) * t1006 - t1537;
t709 = -pkin(3) * t898 - t1261 * t853 + t1265 * t1318;
t724 = -t1270 * t825 + t1275 * t889 + (-t1261 * t898 - t1265 * t899) * pkin(11);
t1328 = pkin(10) * t827 + t1271 * t724 + t1276 * t709;
t708 = pkin(3) * t899 + t1261 * t1318 + t1265 * t853;
t785 = t1262 * t1440 + t1266 * t898;
t611 = -pkin(2) * t785 - t1262 * t708 + t1266 * t1328;
t634 = -t1271 * t709 + t1276 * t724 + (-t1262 * t785 - t1266 * t786) * pkin(10);
t733 = -t1272 * t786 + t1277 * t827;
t1341 = pkin(9) * t733 + t1272 * t634 + t1277 * t611;
t826 = -pkin(4) * t1012 + t856;
t896 = -pkin(12) * t1012 + t1537;
t1317 = pkin(11) * t947 + t1270 * t896 + t1275 * t826;
t858 = -pkin(4) * t1047 + pkin(12) * t1013 + t1540;
t712 = -pkin(3) * t904 - t1261 * t858 + t1265 * t1317;
t727 = -t1270 * t826 + t1275 * t896 + (-t1261 * t904 - t1265 * t905) * pkin(11);
t1327 = pkin(10) * t835 + t1271 * t727 + t1276 * t712;
t711 = pkin(3) * t905 + t1261 * t1317 + t1265 * t858;
t791 = t1262 * t1439 + t1266 * t904;
t617 = -pkin(2) * t791 - t1262 * t711 + t1266 * t1327;
t638 = -t1271 * t712 + t1276 * t727 + (-t1262 * t791 - t1266 * t792) * pkin(10);
t735 = -t1272 * t792 + t1277 * t835;
t1340 = pkin(9) * t735 + t1272 * t638 + t1277 * t617;
t769 = (-t1261 * t840 - t1265 * t841) * pkin(11);
t789 = -pkin(3) * t840 + t1545 * t882;
t1326 = pkin(10) * t788 + t1271 * t769 + t1276 * t789;
t737 = t1262 * t1444 + t1266 * t840;
t790 = pkin(3) * t841 + t1546 * t882;
t641 = -pkin(2) * t737 - t1262 * t790 + t1266 * t1326;
t647 = -t1271 * t789 + t1276 * t769 + (-t1262 * t737 - t1266 * t738) * pkin(10);
t697 = -t1272 * t738 + t1277 * t788;
t1339 = pkin(9) * t697 + t1272 * t647 + t1277 * t641;
t815 = (-t1261 * t996 - t1265 * t997) * pkin(11) - t1455;
t1315 = pkin(11) * t1038 + t882;
t822 = -pkin(3) * t996 + t1265 * t1315;
t1325 = pkin(10) * t939 + t1271 * t815 + t1276 * t822;
t821 = pkin(3) * t997 + t1261 * t1315;
t890 = t1262 * t1402 + t1266 * t996;
t685 = -pkin(2) * t890 - t1262 * t821 + t1266 * t1325;
t705 = -t1271 * t822 + t1276 * t815 + (-t1262 * t890 - t1266 * t891) * pkin(10);
t824 = -t1272 * t891 + t1277 * t939;
t1338 = pkin(9) * t824 + t1272 * t705 + t1277 * t685;
t843 = -pkin(3) * t1014 + t1261 * t960 + t1265 * t1469;
t897 = -t1533 + (-t1014 * t1261 - t1015 * t1265) * pkin(11);
t1324 = pkin(10) * t979 + t1271 * t897 + t1276 * t843;
t842 = pkin(3) * t1015 + t1261 * t1469 - t1265 * t960;
t915 = t1014 * t1266 + t1262 * t1395;
t719 = -pkin(2) * t915 - t1262 * t842 + t1266 * t1324;
t734 = -t1271 * t843 + t1276 * t897 + (-t1262 * t915 - t1266 * t916) * pkin(10);
t848 = -t1272 * t916 + t1277 * t979;
t1337 = pkin(9) * t848 + t1272 * t734 + t1277 * t719;
t847 = -pkin(3) * t1018 + t1261 * t961 + t1265 * t1468;
t902 = -t1532 + (-t1018 * t1261 - t1019 * t1265) * pkin(11);
t1323 = pkin(10) * t982 + t1271 * t902 + t1276 * t847;
t846 = pkin(3) * t1019 + t1261 * t1468 - t1265 * t961;
t918 = t1018 * t1266 + t1262 * t1394;
t721 = -pkin(2) * t918 - t1262 * t846 + t1266 * t1323;
t736 = -t1271 * t847 + t1276 * t902 + (-t1262 * t918 - t1266 * t919) * pkin(10);
t857 = -t1272 * t919 + t1277 * t982;
t1336 = pkin(9) * t857 + t1272 * t736 + t1277 * t721;
t1024 = -t1167 * t1266 + t1262 * t1382;
t946 = (-t1024 * t1262 - t1025 * t1266) * pkin(10);
t962 = -t1272 * t1025 + t1055 * t1277;
t963 = pkin(10) * t1055 * t1266 - pkin(2) * t1024;
t1335 = pkin(9) * t962 + t1272 * t946 + t1277 * t963;
t1097 = -t1272 * t1151 + t1168 * t1277;
t1149 = -t1238 * t1266 + t1262 * t1368;
t989 = (-t1149 * t1262 - t1151 * t1266) * pkin(10) - t1382;
t1311 = pkin(10) * t1168 + t1055;
t995 = -pkin(2) * t1149 + t1266 * t1311;
t1316 = pkin(9) * t1097 + t1272 * t989 + t1277 * t995;
t1154 = t1262 * t1367 + t1518;
t1021 = -pkin(2) * t1154 + t1117 * t1262 + t1266 * t1471;
t1056 = -t1526 + (-t1154 * t1262 - t1155 * t1266) * pkin(10);
t1112 = -t1272 * t1155 + t1189 * t1277;
t1313 = pkin(9) * t1112 + t1021 * t1277 + t1056 * t1272;
t1161 = -t1218 * t1266 + t1262 * t1365;
t1031 = -pkin(2) * t1161 + t1116 * t1262 + t1266 * t1470;
t1057 = -t1527 + (-t1161 * t1262 - t1164 * t1266) * pkin(10);
t1120 = -t1272 * t1164 + t1194 * t1277;
t1312 = pkin(9) * t1120 + t1031 * t1277 + t1057 * t1272;
t1219 = t1499 * t1493;
t1298 = t1272 * t1219 - t1277 * t1360;
t1236 = t1248 * t1267;
t1234 = t1248 * t1263;
t1233 = t1362 * t1263;
t1213 = -t1236 * t1260 - t1264 * t1362;
t1211 = t1236 * t1264 - t1260 * t1362;
t1190 = t1277 * t1219 + t1272 * t1360;
t1187 = (t1496 + (qJD(3) - t1479) * t1534) * t1257 * t1271;
t1186 = (t1257 * t1479 * t1535 + t1229 * t1262) * t1276;
t1181 = -t1349 + (t1233 * t1263 + t1235 * t1267) * pkin(9);
t1180 = -t1351 + (-t1234 * t1263 - t1236 * t1267) * pkin(9);
t1179 = -t1263 * t1359 + t1267 * t1298;
t1160 = t1217 * t1266 + t1262 * t1364;
t1159 = t1216 * t1266 + t1262 * t1366;
t1153 = t1158 * t1267;
t1150 = t1237 * t1266 + t1262 * t1369;
t1148 = -t1272 * t1188 + t1207 * t1277;
t1147 = -t1272 * t1185 + t1206 * t1277;
t1140 = -pkin(1) * t1234 + t1263 * t1196 + t1267 * t1349 - t1362 * t1548;
t1139 = pkin(1) * t1233 + t1263 * t1197 - t1248 * t1548 - t1267 * t1351;
t1124 = t1263 * t1243 + (t1480 - t1157) * t1267;
t1123 = -t1157 * t1263 - t1267 * t1466;
t1119 = -t1272 * t1163 + t1193 * t1277;
t1118 = -t1272 * t1162 + t1192 * t1277;
t1104 = -t1263 * t1187 + t1267 * t1370;
t1103 = -t1263 * t1186 + t1267 * t1371;
t1098 = -t1272 * t1152 + t1169 * t1277;
t1086 = -pkin(1) * t1123 + t1158 * t1548;
t1085 = -t1124 * t1260 + t1158 * t1264;
t1084 = t1124 * t1264 + t1158 * t1260;
t1076 = -t1263 * t1161 + t1267 * t1372;
t1075 = -t1263 * t1160 + t1267 * t1373;
t1074 = -t1263 * t1159 + t1267 * t1374;
t1073 = t1267 * t1161 + t1263 * t1372;
t1065 = (-t1123 * t1263 - t1124 * t1267) * pkin(9);
t1064 = -t1263 * t1154 + t1267 * t1375;
t1063 = t1267 * t1154 + t1263 * t1375;
t1054 = -t1263 * t1150 + t1267 * t1376;
t1053 = -t1263 * t1149 + t1267 * t1377;
t1052 = t1267 * t1149 + t1263 * t1377;
t1030 = pkin(2) * t1164 - t1116 * t1266 + t1262 * t1470;
t1023 = -t1076 * t1260 + t1120 * t1264;
t1022 = t1076 * t1264 + t1120 * t1260;
t1020 = pkin(2) * t1155 - t1117 * t1266 + t1262 * t1471;
t1011 = -t1064 * t1260 + t1112 * t1264;
t1010 = t1064 * t1264 + t1112 * t1260;
t994 = pkin(2) * t1151 + t1262 * t1311;
t993 = -t1053 * t1260 + t1097 * t1264;
t992 = t1053 * t1264 + t1097 * t1260;
t987 = t1099 * t1266 + t1262 * t1385;
t964 = pkin(2) * t1025 + t1055 * t1547;
t951 = t1061 * t1266 + t1262 * t1387;
t950 = t1059 * t1266 + t1262 * t1388;
t933 = t1050 * t1277 - t1272 * t988;
t921 = t1033 * t1266 + t1262 * t1389;
t920 = t1032 * t1266 + t1262 * t1390;
t914 = -t1263 * t1024 + t1267 * t1393;
t913 = t1267 * t1024 + t1263 * t1393;
t908 = -t1272 * t1031 + t1057 * t1277 + (-t1073 * t1263 - t1076 * t1267) * pkin(9);
t907 = t1004 * t1277 - t1272 * t953;
t906 = t1003 * t1277 - t1272 * t952;
t903 = -t1272 * t1021 + t1056 * t1277 + (-t1063 * t1263 - t1064 * t1267) * pkin(9);
t900 = t1007 * t1266 + t1262 * t1397;
t881 = -t1263 * t987 + t1267 * t1401;
t878 = -pkin(1) * t1073 - t1263 * t1030 + t1267 * t1312;
t875 = -pkin(1) * t1063 - t1263 * t1020 + t1267 * t1313;
t874 = -t1272 * t923 + t1277 * t986;
t873 = -t1272 * t922 + t1277 * t985;
t868 = t1262 * t1403 + t1266 * t983;
t859 = -t1272 * t995 + t1277 * t989 + (-t1052 * t1263 - t1053 * t1267) * pkin(9);
t845 = -t1260 * t914 + t1264 * t962;
t844 = t1260 * t962 + t1264 * t914;
t837 = -t1263 * t951 + t1267 * t1405;
t836 = -t1263 * t950 + t1267 * t1406;
t834 = -pkin(1) * t1052 - t1263 * t994 + t1267 * t1316;
t828 = -t1272 * t901 + t1277 * t942;
t818 = t1262 * t1435 + t1266 * t935;
t817 = t1262 * t1436 + t1266 * t934;
t813 = -t1263 * t921 + t1267 * t1408;
t812 = -t1263 * t920 + t1267 * t1409;
t807 = -t1272 * t869 + t1277 * t924;
t805 = -t1263 * t918 + t1267 * t1410;
t804 = t1263 * t1410 + t1267 * t918;
t801 = -t1263 * t915 + t1267 * t1411;
t800 = t1263 * t1411 + t1267 * t915;
t795 = t1262 * t1437 + t1266 * t910;
t794 = t1262 * t1438 + t1266 * t909;
t787 = -t1263 * t900 + t1267 * t1412;
t778 = -t1263 * t890 + t1267 * t1413;
t777 = t1263 * t1413 + t1267 * t890;
t776 = -t1272 * t820 + t1277 * t884;
t775 = -t1272 * t819 + t1277 * t883;
t770 = -t1272 * t963 + t1277 * t946 + (-t1263 * t913 - t1267 * t914) * pkin(9);
t766 = -pkin(1) * t913 - t1263 * t964 + t1267 * t1335;
t764 = t1262 * t1441 + t1266 * t871;
t762 = -t1263 * t868 + t1267 * t1414;
t753 = -t1260 * t805 + t1264 * t857;
t752 = t1260 * t857 + t1264 * t805;
t749 = t1262 * t1443 + t1266 * t851;
t746 = -t1260 * t801 + t1264 * t848;
t745 = t1260 * t848 + t1264 * t801;
t742 = -t1272 * t797 + t1277 * t839;
t741 = -t1272 * t796 + t1277 * t838;
t730 = -t1260 * t778 + t1264 * t824;
t729 = t1260 * t824 + t1264 * t778;
t726 = -t1263 * t818 + t1267 * t1415;
t725 = -t1263 * t817 + t1267 * t1416;
t722 = -t1272 * t765 + t1277 * t814;
t720 = pkin(2) * t919 + t1262 * t1323 + t1266 * t846;
t718 = pkin(2) * t916 + t1262 * t1324 + t1266 * t842;
t715 = t1262 * t1445 + t1266 * t809;
t714 = t1262 * t1446 + t1266 * t808;
t710 = -t1272 * t750 + t1277 * t803;
t701 = -t1263 * t795 + t1267 * t1417;
t700 = -t1263 * t794 + t1267 * t1418;
t696 = -t1263 * t791 + t1267 * t1419;
t695 = t1263 * t1419 + t1267 * t791;
t691 = -t1263 * t785 + t1267 * t1420;
t690 = t1263 * t1420 + t1267 * t785;
t687 = t1262 * t1447 + t1266 * t780;
t686 = t1262 * t1448 + t1266 * t779;
t684 = pkin(2) * t891 + t1262 * t1325 + t1266 * t821;
t675 = -t1263 * t764 + t1267 * t1421;
t673 = -t1272 * t717 + t1277 * t761;
t672 = -t1272 * t716 + t1277 * t760;
t671 = -t1263 * t758 + t1267 * t1422;
t670 = t1263 * t1422 + t1267 * t758;
t666 = -t1263 * t749 + t1267 * t1423;
t663 = t1262 * t1451 + t1266 * t747;
t659 = -t1263 * t737 + t1267 * t1424;
t658 = t1263 * t1424 + t1267 * t737;
t657 = -t1260 * t696 + t1264 * t735;
t656 = t1260 * t735 + t1264 * t696;
t655 = -t1260 * t691 + t1264 * t733;
t654 = t1260 * t733 + t1264 * t691;
t653 = -t1272 * t689 + t1277 * t732;
t652 = -t1272 * t688 + t1277 * t731;
t648 = -t1272 * t721 + t1277 * t736 + (-t1263 * t804 - t1267 * t805) * pkin(9);
t646 = -t1263 * t715 + t1267 * t1425;
t645 = -t1263 * t714 + t1267 * t1426;
t644 = -t1272 * t719 + t1277 * t734 + (-t1263 * t800 - t1267 * t801) * pkin(9);
t643 = -t1260 * t671 + t1264 * t713;
t642 = t1260 * t713 + t1264 * t671;
t640 = pkin(2) * t738 + t1262 * t1326 + t1266 * t790;
t637 = -t1272 * t664 + t1277 * t704;
t630 = -t1260 * t659 + t1264 * t697;
t629 = t1260 * t697 + t1264 * t659;
t627 = -pkin(1) * t804 - t1263 * t720 + t1267 * t1336;
t624 = -pkin(1) * t800 - t1263 * t718 + t1267 * t1337;
t623 = -t1263 * t687 + t1267 * t1427;
t622 = -t1263 * t686 + t1267 * t1428;
t621 = -t1272 * t685 + t1277 * t705 + (-t1263 * t777 - t1267 * t778) * pkin(9);
t619 = -t1263 * t679 + t1267 * t1429;
t618 = t1263 * t1429 + t1267 * t679;
t616 = pkin(2) * t792 + t1262 * t1327 + t1266 * t711;
t615 = -t1263 * t676 + t1267 * t1430;
t614 = t1263 * t1430 + t1267 * t676;
t610 = pkin(2) * t786 + t1262 * t1328 + t1266 * t708;
t604 = -pkin(1) * t777 - t1263 * t684 + t1267 * t1338;
t601 = -t1263 * t663 + t1267 * t1431;
t599 = -t1263 * t661 + t1267 * t1432;
t598 = t1263 * t1432 + t1267 * t661;
t596 = pkin(2) * t759 + t1262 * t1329 + t1266 * t668;
t595 = -t1260 * t619 + t1264 * t651;
t594 = t1260 * t651 + t1264 * t619;
t593 = -t1260 * t615 + t1264 * t650;
t592 = t1260 * t650 + t1264 * t615;
t588 = -t1263 * t635 + t1267 * t1433;
t587 = t1263 * t1433 + t1267 * t635;
t586 = -t1260 * t599 + t1264 * t633;
t585 = t1260 * t633 + t1264 * t599;
t584 = -t1272 * t617 + t1277 * t638 + (-t1263 * t695 - t1267 * t696) * pkin(9);
t583 = -t1272 * t641 + t1277 * t647 + (-t1263 * t658 - t1267 * t659) * pkin(9);
t582 = -t1272 * t611 + t1277 * t634 + (-t1263 * t690 - t1267 * t691) * pkin(9);
t577 = -pkin(1) * t658 - t1263 * t640 + t1267 * t1339;
t576 = -t1260 * t588 + t1264 * t602;
t575 = t1260 * t602 + t1264 * t588;
t574 = -pkin(1) * t695 - t1263 * t616 + t1267 * t1340;
t572 = -pkin(1) * t690 - t1263 * t610 + t1267 * t1341;
t571 = -t1272 * t597 + t1277 * t609 + (-t1263 * t670 - t1267 * t671) * pkin(9);
t569 = pkin(2) * t680 + t1262 * t1331 + t1266 * t607;
t566 = pkin(2) * t677 + t1262 * t1332 + t1266 * t605;
t564 = pkin(2) * t636 + t1262 * t1330 + t1266 * t625;
t559 = -pkin(1) * t670 - t1263 * t596 + t1267 * t1342;
t557 = pkin(2) * t662 + t1262 * t1333 + t1266 * t589;
t556 = -t1263 * t580 + t1267 * t1434;
t555 = t1263 * t1434 + t1267 * t580;
t554 = -t1272 * t570 + t1277 * t579 + (-t1263 * t618 - t1267 * t619) * pkin(9);
t553 = -t1272 * t567 + t1277 * t578 + (-t1263 * t614 - t1267 * t615) * pkin(9);
t552 = -t1272 * t565 + t1277 * t573 + (-t1263 * t587 - t1267 * t588) * pkin(9);
t551 = -t1260 * t556 + t1264 * t562;
t550 = t1260 * t562 + t1264 * t556;
t549 = -pkin(1) * t618 - t1263 * t569 + t1267 * t1343;
t548 = -pkin(1) * t614 - t1263 * t566 + t1267 * t1344;
t547 = -t1272 * t558 + t1277 * t563 + (-t1263 * t598 - t1267 * t599) * pkin(9);
t545 = -pkin(1) * t587 - t1263 * t564 + t1267 * t1345;
t544 = -pkin(1) * t598 - t1263 * t557 + t1267 * t1346;
t542 = pkin(2) * t581 + t1262 * t1334 + t1266 * t560;
t541 = -t1272 * t543 + t1277 * t546 + (-t1263 * t555 - t1267 * t556) * pkin(9);
t540 = -pkin(1) * t555 - t1263 * t542 + t1267 * t1347;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1221, 0, 0, 0, 0, 0, 0, t1213, t1212, 0, t1085, 0, 0, 0, 0, 0, 0, t1023, t1011, t993, t845, 0, 0, 0, 0, 0, 0, t746, t753, t730, t630, 0, 0, 0, 0, 0, 0, t655, t657, t643, t576, 0, 0, 0, 0, 0, 0, t593, t595, t586, t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1467, 0, 0, 0, 0, 0, 0, t1211, -t1363, 0, t1084, 0, 0, 0, 0, 0, 0, t1022, t1010, t992, t844, 0, 0, 0, 0, 0, 0, t745, t752, t729, t629, 0, 0, 0, 0, 0, 0, t654, t656, t642, t575, 0, 0, 0, 0, 0, 0, t592, t594, t585, t550; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1543, 0, 0, 0, 0, 0, 0, t1234, -t1233, 0, t1123, 0, 0, 0, 0, 0, 0, t1073, t1063, t1052, t913, 0, 0, 0, 0, 0, 0, t800, t804, t777, t658, 0, 0, 0, 0, 0, 0, t690, t695, t670, t587, 0, 0, 0, 0, 0, 0, t614, t618, t598, t555; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1564, -t1563, t1467, qJ(1) * t1467, 0, 0, -t1212, 0, t1213, t1260 * t1497, -qJ(1) * t1211 - t1140 * t1260 + t1180 * t1264, qJ(1) * t1363 - t1139 * t1260 + t1181 * t1264, -t1153 * t1260 + t1157 * t1264, -qJ(1) * t1084 + t1065 * t1264 - t1086 * t1260, -t1104 * t1260 + t1148 * t1264, -t1054 * t1260 + t1098 * t1264, -t1074 * t1260 + t1118 * t1264, -t1103 * t1260 + t1147 * t1264, -t1075 * t1260 + t1119 * t1264, -t1179 * t1260 + t1190 * t1264, -qJ(1) * t1022 - t1260 * t878 + t1264 * t908, -qJ(1) * t1010 - t1260 * t875 + t1264 * t903, -qJ(1) * t992 - t1260 * t834 + t1264 * t859, -qJ(1) * t844 - t1260 * t766 + t1264 * t770, -t1260 * t837 + t1264 * t907, -t1260 * t787 + t1264 * t828, -t1260 * t812 + t1264 * t873, -t1260 * t836 + t1264 * t906, -t1260 * t813 + t1264 * t874, -t1260 * t881 + t1264 * t933, -qJ(1) * t745 - t1260 * t624 + t1264 * t644, -qJ(1) * t752 - t1260 * t627 + t1264 * t648, -qJ(1) * t729 - t1260 * t604 + t1264 * t621, -qJ(1) * t629 - t1260 * t577 + t1264 * t583, -t1260 * t726 + t1264 * t776, -t1260 * t675 + t1264 * t722, -t1260 * t700 + t1264 * t741, -t1260 * t725 + t1264 * t775, -t1260 * t701 + t1264 * t742, -t1260 * t762 + t1264 * t807, -qJ(1) * t654 - t1260 * t572 + t1264 * t582, -qJ(1) * t656 - t1260 * t574 + t1264 * t584, -qJ(1) * t642 - t1260 * t559 + t1264 * t571, -qJ(1) * t575 - t1260 * t545 + t1264 * t552, -t1260 * t646 + t1264 * t673, -t1260 * t601 + t1264 * t637, -t1260 * t622 + t1264 * t652, -t1260 * t645 + t1264 * t672, -t1260 * t623 + t1264 * t653, -t1260 * t666 + t1264 * t710, -qJ(1) * t592 - t1260 * t548 + t1264 * t553, -qJ(1) * t594 - t1260 * t549 + t1264 * t554, -qJ(1) * t585 - t1260 * t544 + t1264 * t547, -qJ(1) * t550 - t1260 * t540 + t1264 * t541; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1563, -t1564, t1221, qJ(1) * t1221, 0, 0, t1363, 0, t1211, -t1264 * t1497, qJ(1) * t1213 + t1140 * t1264 + t1180 * t1260, qJ(1) * t1212 + t1139 * t1264 + t1181 * t1260, t1153 * t1264 + t1157 * t1260, qJ(1) * t1085 + t1065 * t1260 + t1086 * t1264, t1104 * t1264 + t1148 * t1260, t1054 * t1264 + t1098 * t1260, t1074 * t1264 + t1118 * t1260, t1103 * t1264 + t1147 * t1260, t1075 * t1264 + t1119 * t1260, t1179 * t1264 + t1190 * t1260, qJ(1) * t1023 + t1260 * t908 + t1264 * t878, qJ(1) * t1011 + t1260 * t903 + t1264 * t875, qJ(1) * t993 + t1260 * t859 + t1264 * t834, qJ(1) * t845 + t1260 * t770 + t1264 * t766, t1260 * t907 + t1264 * t837, t1260 * t828 + t1264 * t787, t1260 * t873 + t1264 * t812, t1260 * t906 + t1264 * t836, t1260 * t874 + t1264 * t813, t1260 * t933 + t1264 * t881, qJ(1) * t746 + t1260 * t644 + t1264 * t624, qJ(1) * t753 + t1260 * t648 + t1264 * t627, qJ(1) * t730 + t1260 * t621 + t1264 * t604, qJ(1) * t630 + t1260 * t583 + t1264 * t577, t1260 * t776 + t1264 * t726, t1260 * t722 + t1264 * t675, t1260 * t741 + t1264 * t700, t1260 * t775 + t1264 * t725, t1260 * t742 + t1264 * t701, t1260 * t807 + t1264 * t762, qJ(1) * t655 + t1260 * t582 + t1264 * t572, qJ(1) * t657 + t1260 * t584 + t1264 * t574, qJ(1) * t643 + t1260 * t571 + t1264 * t559, qJ(1) * t576 + t1260 * t552 + t1264 * t545, t1260 * t673 + t1264 * t646, t1260 * t637 + t1264 * t601, t1260 * t652 + t1264 * t622, t1260 * t672 + t1264 * t645, t1260 * t653 + t1264 * t623, t1260 * t710 + t1264 * t666, qJ(1) * t593 + t1260 * t553 + t1264 * t548, qJ(1) * t595 + t1260 * t554 + t1264 * t549, qJ(1) * t586 + t1260 * t547 + t1264 * t544, qJ(1) * t551 + t1260 * t541 + t1264 * t540; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1481, t1473, 0, 0, 0, 0, t1233, 0, t1234, t1267 * qJDD(2), pkin(1) * t1236 - t1267 * t1196 + (-pkin(9) * t1362 + t1349) * t1263, -pkin(1) * t1235 - t1267 * t1197 + (-pkin(9) * t1248 - t1351) * t1263, t1565, pkin(1) * t1124 + pkin(9) * t1565, t1267 * t1187 + t1263 * t1370, t1267 * t1150 + t1263 * t1376, t1267 * t1159 + t1263 * t1374, t1267 * t1186 + t1263 * t1371, t1267 * t1160 + t1263 * t1373, t1263 * t1298 + t1267 * t1359, pkin(1) * t1076 + t1267 * t1030 + t1263 * t1312, pkin(1) * t1064 + t1267 * t1020 + t1263 * t1313, pkin(1) * t1053 + t1263 * t1316 + t1267 * t994, pkin(1) * t914 + t1263 * t1335 + t1267 * t964, t1263 * t1405 + t1267 * t951, t1263 * t1412 + t1267 * t900, t1263 * t1409 + t1267 * t920, t1263 * t1406 + t1267 * t950, t1263 * t1408 + t1267 * t921, t1263 * t1401 + t1267 * t987, pkin(1) * t801 + t1263 * t1337 + t1267 * t718, pkin(1) * t805 + t1263 * t1336 + t1267 * t720, pkin(1) * t778 + t1263 * t1338 + t1267 * t684, pkin(1) * t659 + t1263 * t1339 + t1267 * t640, t1263 * t1415 + t1267 * t818, t1263 * t1421 + t1267 * t764, t1263 * t1418 + t1267 * t794, t1263 * t1416 + t1267 * t817, t1263 * t1417 + t1267 * t795, t1263 * t1414 + t1267 * t868, pkin(1) * t691 + t1263 * t1341 + t1267 * t610, pkin(1) * t696 + t1263 * t1340 + t1267 * t616, pkin(1) * t671 + t1263 * t1342 + t1267 * t596, pkin(1) * t588 + t1263 * t1345 + t1267 * t564, t1263 * t1425 + t1267 * t715, t1263 * t1431 + t1267 * t663, t1263 * t1428 + t1267 * t686, t1263 * t1426 + t1267 * t714, t1263 * t1427 + t1267 * t687, t1263 * t1423 + t1267 * t749, pkin(1) * t615 + t1263 * t1344 + t1267 * t566, pkin(1) * t619 + t1263 * t1343 + t1267 * t569, pkin(1) * t599 + t1263 * t1346 + t1267 * t557, pkin(1) * t556 + t1263 * t1347 + t1267 * t542;];
tauB_reg  = t1;
