% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 12:50
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRRRR6_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR6_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR6_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR6_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR6_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRRRRR6_invdynJ_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 12:42:48
% EndTime: 2019-05-05 12:43:27
% DurationCPUTime: 21.53s
% Computational Cost: add. (200669->733), mult. (473904->1194), div. (0->0), fcn. (404352->18), ass. (0->498)
t327 = sin(qJ(6));
t326 = cos(pkin(7));
t470 = qJD(2) * t326;
t318 = qJD(3) + t470;
t329 = sin(qJ(4));
t330 = sin(qJ(3));
t333 = cos(qJ(4));
t323 = sin(pkin(7));
t471 = qJD(2) * t323;
t325 = cos(pkin(8));
t334 = cos(qJ(3));
t479 = t325 * t334;
t322 = sin(pkin(8));
t485 = t322 * t329;
t291 = t318 * t485 + (t329 * t479 + t330 * t333) * t471;
t468 = qJD(2) * t334;
t452 = t323 * t468;
t487 = t318 * t325;
t301 = -t322 * t452 + qJD(4) + t487;
t328 = sin(qJ(5));
t332 = cos(qJ(5));
t276 = t291 * t332 + t301 * t328;
t331 = cos(qJ(6));
t444 = t325 * t452;
t469 = qJD(2) * t330;
t453 = t323 * t469;
t483 = t322 * t333;
t289 = -t318 * t483 + t329 * t453 - t333 * t444;
t373 = qJD(5) + t289;
t248 = t276 * t327 - t331 * t373;
t250 = t276 * t331 + t327 * t373;
t217 = t250 * t248;
t316 = qJD(3) * t453;
t461 = qJDD(2) * t334;
t437 = t323 * t461 - t316;
t443 = qJDD(2) * t326 + qJDD(3);
t359 = t322 * t443 + t325 * t437;
t449 = qJD(3) * t468;
t462 = qJDD(2) * t330;
t370 = (t449 + t462) * t323;
t350 = t329 * t359 + t333 * t370;
t261 = -t289 * qJD(4) + t350;
t293 = -t322 * t437 + t325 * t443 + qJDD(4);
t446 = t328 * t261 - t293 * t332;
t223 = -t276 * qJD(5) - t446;
t222 = qJDD(6) - t223;
t532 = -t217 + t222;
t539 = t327 * t532;
t274 = t291 * t328 - t301 * t332;
t242 = t276 * t274;
t361 = t329 * t370 - t333 * t359;
t358 = t291 * qJD(4) + t361;
t260 = qJDD(5) + t358;
t531 = -t242 + t260;
t538 = t328 * t531;
t537 = t331 * t532;
t536 = t332 * t531;
t317 = t318 ^ 2;
t503 = sin(pkin(14));
t504 = cos(pkin(14));
t377 = g(1) * t504 + g(2) * t503;
t524 = sin(qJ(2));
t525 = cos(qJ(2));
t324 = sin(pkin(6));
t376 = g(1) * t503 - g(2) * t504;
t505 = cos(pkin(6));
t366 = t376 * t505;
t472 = -g(3) + qJDD(1);
t529 = t324 * t472 + t366;
t349 = -t524 * t377 - t525 * t529;
t347 = qJDD(2) * pkin(2) - t349;
t345 = t326 * t347;
t285 = -t525 * t377 + t524 * t529;
t527 = qJD(2) ^ 2;
t515 = t527 * pkin(2);
t348 = t285 - t515;
t393 = t443 * pkin(3);
t518 = pkin(11) * t322;
t340 = t317 * t518 - t330 * t348 + t334 * t345 + t393;
t357 = t324 * t376 - t472 * t505;
t352 = t334 * t357;
t484 = t322 * t330;
t523 = pkin(3) * t334;
t392 = -pkin(11) * t484 - t523;
t381 = t392 * t323;
t517 = pkin(11) * t325;
t454 = -pkin(10) - t517;
t519 = pkin(10) * t326;
t460 = t334 * t519;
t337 = (-t352 + t454 * t462 + ((-t330 * t381 + t460) * qJD(2) + (-qJD(3) + t318) * pkin(11) * t479) * qJD(2)) * t323 + t340;
t353 = t326 * t357;
t351 = t316 * pkin(3) - t353;
t466 = qJD(3) + t318;
t482 = t322 * t334;
t486 = t318 * t330;
t320 = t330 ^ 2;
t321 = t334 ^ 2;
t530 = -t320 - t321;
t339 = ((-pkin(2) + t392) * qJDD(2) + (pkin(3) * t486 - pkin(10) * t471 + (t325 * t471 * t530 - t466 * t482) * pkin(11)) * qJD(2) + t349) * t323 + t351;
t535 = t322 * t339 + t325 * t337;
t369 = t373 ^ 2;
t490 = t291 * t289;
t360 = t293 - t490;
t534 = t329 * t360;
t533 = t333 * t360;
t398 = -t261 * t332 - t293 * t328;
t224 = -qJD(5) * t274 - t398;
t256 = t373 * t274;
t204 = t224 - t256;
t279 = t301 * t289;
t237 = -t279 + t261;
t271 = qJD(6) + t274;
t447 = t224 * t327 - t260 * t331;
t158 = (qJD(6) - t271) * t250 + t447;
t245 = t248 ^ 2;
t246 = t250 ^ 2;
t270 = t271 ^ 2;
t272 = t274 ^ 2;
t273 = t276 ^ 2;
t286 = t289 ^ 2;
t287 = t291 ^ 2;
t528 = t301 ^ 2;
t319 = t323 ^ 2;
t520 = pkin(10) * t323;
t346 = qJDD(2) * t520 + t285;
t354 = t323 * t357;
t218 = t334 * t346 - pkin(3) * t317 + (t345 - t354) * t330 + t359 * pkin(11) + (-pkin(2) * t468 + (t486 * t517 + (t330 * t519 + t334 * t381) * qJD(2)) * t323) * qJD(2);
t148 = t329 * t218 - t333 * t535;
t266 = pkin(4) * t289 - pkin(12) * t291;
t131 = -pkin(4) * t293 - pkin(12) * t528 + t291 * t266 + t148;
t474 = t333 * t218;
t132 = -t528 * pkin(4) + t293 * pkin(12) - t289 * t266 + t329 * t535 + t474;
t335 = -t322 * t337 + t325 * t339 - t237 * pkin(12) + (t291 * t301 + t358) * pkin(4);
t91 = t132 * t328 - t332 * t335;
t92 = t132 * t332 + t328 * t335;
t62 = t328 * t91 + t332 * t92;
t48 = t131 * t329 + t333 * t62;
t526 = pkin(11) * t48;
t522 = pkin(4) * t333;
t521 = pkin(5) * t328;
t240 = pkin(5) * t274 - pkin(13) * t276;
t80 = -pkin(5) * t369 + pkin(13) * t260 - t240 * t274 + t92;
t367 = t276 * t373;
t99 = -t204 * pkin(13) + (-t223 + t367) * pkin(5) + t131;
t55 = t327 * t80 - t331 * t99;
t56 = t327 * t99 + t331 * t80;
t34 = t327 * t55 + t331 * t56;
t79 = -pkin(5) * t260 - pkin(13) * t369 + t240 * t276 + t91;
t25 = t328 * t34 - t332 * t79;
t26 = t328 * t79 + t332 * t34;
t33 = t327 * t56 - t331 * t55;
t436 = t26 * t329 - t33 * t333;
t9 = -t25 * t322 + t325 * t436;
t516 = t330 * t9;
t514 = t327 * t79;
t61 = t328 * t92 - t332 * t91;
t513 = t329 * t61;
t427 = -t131 * t333 + t329 * t62;
t32 = -t322 * t61 + t325 * t427;
t512 = t330 * t32;
t406 = -t224 * t331 - t260 * t327;
t175 = -qJD(6) * t248 - t406;
t229 = t271 * t248;
t162 = t175 + t229;
t112 = -t158 * t327 - t162 * t331;
t114 = -t158 * t331 + t162 * t327;
t195 = t245 + t246;
t87 = t114 * t332 - t195 * t328;
t430 = -t112 * t333 + t329 * t87;
t86 = t114 * t328 + t195 * t332;
t43 = -t322 * t86 + t325 * t430;
t511 = t330 * t43;
t207 = -t270 - t245;
t137 = t207 * t331 - t539;
t463 = qJD(6) + t271;
t160 = -t250 * t463 - t447;
t101 = t137 * t328 + t160 * t332;
t102 = t137 * t332 - t160 * t328;
t136 = t207 * t327 + t537;
t426 = t102 * t329 - t136 * t333;
t53 = -t101 * t322 + t325 * t426;
t510 = t330 * t53;
t209 = -t246 - t270;
t172 = t217 + t222;
t499 = t172 * t331;
t143 = -t209 * t327 - t499;
t163 = t248 * t463 + t406;
t103 = t143 * t328 + t163 * t332;
t104 = t143 * t332 - t163 * t328;
t500 = t172 * t327;
t142 = t209 * t331 - t500;
t425 = t104 * t329 - t142 * t333;
t58 = -t103 * t322 + t325 * t425;
t509 = t330 * t58;
t201 = -t276 * t289 + t446;
t205 = t224 + t256;
t144 = -t201 * t328 - t205 * t332;
t146 = -t201 * t332 + t205 * t328;
t225 = t272 + t273;
t418 = t146 * t329 + t225 * t333;
t95 = -t144 * t322 + t325 * t418;
t508 = t330 * t95;
t507 = t331 * t79;
t506 = t333 * t61;
t502 = t131 * t328;
t501 = t131 * t332;
t179 = t322 * t340 - t325 * t351 + (t322 * (-pkin(10) * t462 - t352) - t325 * (-pkin(3) * t461 - t347) + ((t322 * t460 + (-t392 * t484 - t325 * (t517 * t530 - pkin(10))) * t323) * qJD(2) + (-pkin(3) * t330 + 0.2e1 * pkin(11) * t482) * t487) * qJD(2)) * t323;
t498 = t179 * t329;
t497 = t179 * t333;
t213 = t242 + t260;
t496 = t213 * t328;
t495 = t213 * t332;
t251 = -t293 - t490;
t494 = t251 * t329;
t493 = t251 * t333;
t492 = t271 * t327;
t491 = t271 * t331;
t489 = t291 * t329;
t488 = t301 * t333;
t481 = t323 * t334;
t480 = t325 * t329;
t231 = -t369 - t272;
t176 = t231 * t328 + t536;
t177 = t231 * t332 - t538;
t372 = 0.2e1 * qJD(5) + t289;
t203 = -t276 * t372 - t446;
t413 = t177 * t329 + t203 * t333;
t118 = -t176 * t322 + t325 * t413;
t478 = t330 * t118;
t239 = -t273 - t369;
t180 = t239 * t332 - t496;
t181 = -t239 * t328 - t495;
t206 = t274 * t372 + t398;
t412 = t181 * t329 + t206 * t333;
t120 = -t180 * t322 + t325 * t412;
t477 = t330 * t120;
t247 = -t286 - t287;
t238 = t279 + t261;
t355 = (-qJD(4) + t301) * t291 - t361;
t404 = -t238 * t333 + t329 * t355;
t170 = -t247 * t322 + t325 * t404;
t476 = t330 * t170;
t467 = t319 * t527;
t315 = t330 * t334 * t467;
t303 = t315 + t443;
t475 = t330 * t303;
t304 = -t315 + t443;
t473 = t334 * t304;
t465 = qJD(4) + t301;
t459 = t328 * t217;
t458 = t332 * t217;
t457 = t329 * t242;
t456 = t333 * t242;
t455 = -pkin(5) * t332 - pkin(4);
t451 = t320 * t467;
t450 = t321 * t467;
t445 = -t318 + t470;
t442 = t323 * t449;
t441 = -pkin(5) * t79 + pkin(13) * t34;
t14 = t26 * t333 + t329 * t33;
t440 = t14 * t330 + t334 * t9;
t259 = -t528 - t286;
t221 = t259 * t333 - t534;
t439 = pkin(11) * t221 + t497;
t264 = -t287 - t528;
t226 = -t264 * t329 + t493;
t438 = pkin(11) * t226 - t498;
t435 = t32 * t334 + t330 * t48;
t67 = t112 * t329 + t333 * t87;
t434 = t330 * t67 + t334 * t43;
t73 = t102 * t333 + t136 * t329;
t433 = t330 * t73 + t334 * t53;
t75 = t104 * t333 + t142 * t329;
t432 = t330 * t75 + t334 * t58;
t343 = -t520 * t527 - t347;
t268 = -t323 * t343 + t353;
t342 = t326 * t343;
t380 = t318 * t322 + t444;
t368 = qJD(2) * t380;
t149 = t474 + (t325 * (-t323 * t352 - t334 * t342 + t393) + t322 * (-t437 * pkin(3) - t268) + (t325 * (t318 * t380 - t325 * t442) + t322 * (-t322 * t442 - t368 * t481)) * pkin(11) + (-t325 * t348 + (pkin(3) * t368 + (-pkin(11) * t322 ^ 2 + t325 * t454) * qJDD(2)) * t323) * t330) * t329;
t105 = t148 * t329 + t149 * t333;
t416 = -t148 * t333 + t149 * t329;
t83 = t179 * t322 + t325 * t416;
t431 = t105 * t330 + t334 * t83;
t161 = t175 - t229;
t113 = t160 * t327 + t161 * t331;
t115 = t160 * t331 - t161 * t327;
t215 = t246 - t245;
t97 = t115 * t332 + t215 * t328;
t429 = -t113 * t333 + t329 * t97;
t129 = t146 * t333 - t225 * t329;
t428 = t129 * t330 + t334 * t95;
t228 = -t246 + t270;
t152 = -t228 * t327 + t537;
t108 = t152 * t332 + t162 * t328;
t150 = t228 * t331 + t539;
t424 = t108 * t329 - t150 * t333;
t227 = t245 - t270;
t153 = t227 * t331 - t500;
t109 = t153 * t332 - t158 * t328;
t151 = t227 * t327 + t499;
t423 = t109 * t329 - t151 * t333;
t138 = t177 * t333 - t203 * t329;
t422 = t118 * t334 + t138 * t330;
t141 = t181 * t333 - t206 * t329;
t421 = t120 * t334 + t141 * t330;
t174 = -qJD(6) * t250 - t447;
t155 = -t174 * t327 + t248 * t491;
t127 = t155 * t332 - t459;
t154 = -t174 * t331 - t248 * t492;
t420 = t127 * t329 + t154 * t333;
t157 = t175 * t331 - t250 * t492;
t128 = t157 * t332 + t459;
t156 = t175 * t327 + t250 * t491;
t419 = t128 * t329 - t156 * t333;
t147 = t203 * t332 - t204 * t328;
t241 = t273 - t272;
t417 = t147 * t329 - t241 * t333;
t185 = (-t248 * t331 + t250 * t327) * t271;
t166 = t185 * t332 + t222 * t328;
t184 = (-t248 * t327 - t250 * t331) * t271;
t415 = t166 * t329 - t184 * t333;
t196 = t238 * t329 + t333 * t355;
t414 = t170 * t334 + t196 * t330;
t233 = t291 * t465 + t361;
t399 = t259 * t329 + t533;
t183 = -t233 * t322 + t325 * t399;
t411 = t183 * t334 + t221 * t330;
t236 = -t289 * t465 + t350;
t402 = t264 * t333 + t494;
t187 = -t236 * t322 + t325 * t402;
t410 = t187 * t334 + t226 * t330;
t255 = -t273 + t369;
t191 = -t255 * t328 + t536;
t409 = t191 * t329 - t205 * t333;
t254 = t272 - t369;
t192 = t254 * t332 - t496;
t408 = t192 * t329 + t201 * t333;
t362 = t332 * t256;
t365 = t328 * t367;
t220 = -t362 + t365;
t407 = t220 * t329 - t260 * t333;
t405 = -t233 * t329 + t237 * t333;
t341 = -t342 - t354;
t344 = t346 - t515;
t243 = t330 * t344 - t334 * t341;
t244 = t330 * t341 + t334 * t344;
t403 = -t243 * t334 + t244 * t330;
t208 = t243 * t330 + t244 * t334;
t277 = t286 - t528;
t401 = t277 * t329 - t493;
t278 = -t287 + t528;
t400 = t278 * t333 + t534;
t397 = -t289 * t329 - t291 * t333;
t309 = t318 * t452;
t295 = -t309 + t370;
t308 = t318 * t453;
t296 = t308 + t437;
t396 = -t295 * t334 + t296 * t330;
t302 = -t451 - t317;
t395 = t302 * t334 - t304 * t330;
t305 = -t317 - t450;
t394 = t303 * t334 + t305 * t330;
t198 = -t223 * t328 + t362;
t390 = t198 * t329 + t456;
t200 = t224 * t332 - t365;
t389 = t200 * t329 - t456;
t387 = pkin(5) * t160 + pkin(13) * t137 - t507;
t386 = pkin(5) * t163 + pkin(13) * t143 + t514;
t10 = -pkin(12) * t25 + (-pkin(13) * t332 + t521) * t33;
t13 = -pkin(4) * t25 - t441;
t385 = pkin(11) * t14 + t10 * t329 + t13 * t333;
t29 = -pkin(13) * t112 - t33;
t18 = -pkin(12) * t86 + t112 * t521 + t29 * t332;
t374 = pkin(5) * t195 + pkin(13) * t114 + t34;
t20 = -pkin(4) * t86 - t374;
t384 = pkin(11) * t67 + t18 * t329 + t20 * t333;
t45 = -pkin(5) * t136 + t55;
t68 = -pkin(13) * t136 + t514;
t27 = -pkin(12) * t101 - t328 * t45 + t332 * t68;
t40 = -pkin(4) * t101 - t387;
t383 = pkin(11) * t73 + t27 * t329 + t333 * t40;
t46 = -pkin(5) * t142 + t56;
t69 = -pkin(13) * t142 + t507;
t28 = -pkin(12) * t103 - t328 * t46 + t332 * t69;
t41 = -pkin(4) * t103 - t386;
t382 = pkin(11) * t75 + t28 * t329 + t333 * t41;
t110 = -pkin(12) * t176 + t502;
t76 = -pkin(4) * t176 + t91;
t379 = pkin(11) * t138 + t110 * t329 + t333 * t76;
t116 = -pkin(12) * t180 + t501;
t77 = -pkin(4) * t180 + t92;
t378 = pkin(11) * t141 + t116 * t329 + t333 * t77;
t375 = pkin(11) * t196 + t105;
t51 = -pkin(12) * t144 - t61;
t371 = pkin(11) * t129 - t144 * t522 + t329 * t51;
t364 = t328 * t256;
t363 = t332 * t367;
t356 = t333 * t358;
t307 = t530 * t467;
t306 = (t320 - t321) * t467;
t297 = -t308 + t437;
t294 = (t466 * t468 + t462) * t323;
t282 = t305 * t334 - t475;
t280 = -t302 * t330 - t473;
t269 = t295 * t330 + t296 * t334;
t267 = t287 - t286;
t265 = t323 * t297 + t326 * t394;
t263 = -t323 * t294 + t326 * t395;
t262 = -t323 * t307 + t326 * t396;
t232 = t301 * t322 * t397 + t293 * t325;
t219 = -t364 - t363;
t211 = t261 * t485 + (t289 * t325 + t301 * t483) * t291;
t210 = -t322 * t356 + (-t291 * t325 + t301 * t485) * t289;
t199 = t224 * t328 + t363;
t197 = t223 * t332 + t364;
t194 = t322 * t401 + t325 * t355;
t193 = t238 * t325 + t322 * t400;
t190 = t254 * t328 + t495;
t189 = t255 * t332 + t538;
t188 = t323 * t268 + t326 * t403;
t186 = t236 * t325 + t322 * t402;
t182 = t233 * t325 + t322 * t399;
t178 = t267 * t325 + t322 * t405;
t169 = t247 * t325 + t322 * t404;
t168 = t219 * t325 + t322 * t407;
t167 = -t187 * t330 + t226 * t334;
t165 = t185 * t328 - t222 * t332;
t164 = -t183 * t330 + t221 * t334;
t145 = t203 * t328 + t204 * t332;
t135 = t196 * t334 - t476;
t134 = t199 * t325 + t322 * t389;
t133 = t197 * t325 + t322 * t390;
t126 = t157 * t328 - t458;
t125 = t155 * t328 + t458;
t124 = -t323 * t186 + t326 * t410;
t123 = -t323 * t182 + t326 * t411;
t122 = t190 * t325 + t322 * t408;
t121 = t189 * t325 + t322 * t409;
t119 = t180 * t325 + t322 * t412;
t117 = t176 * t325 + t322 * t413;
t111 = -t323 * t169 + t326 * t414;
t107 = t153 * t328 + t158 * t332;
t106 = t152 * t328 - t162 * t332;
t100 = t145 * t325 + t322 * t417;
t96 = t115 * t328 - t215 * t332;
t94 = t144 * t325 + t322 * t418;
t93 = pkin(4) * t206 + pkin(12) * t181 + t502;
t89 = pkin(4) * t203 + pkin(12) * t177 - t501;
t88 = t165 * t325 + t322 * t415;
t85 = pkin(3) * t187 - t149 * t325 + t322 * t438;
t84 = pkin(3) * t183 - t148 * t325 + t322 * t439;
t82 = -t179 * t325 + t322 * t416;
t81 = t141 * t334 - t477;
t78 = t138 * t334 - t478;
t74 = pkin(3) * t170 + t322 * t375;
t72 = t126 * t325 + t322 * t419;
t71 = t125 * t325 + t322 * t420;
t70 = t129 * t334 - t508;
t66 = -t119 * t323 + t326 * t421;
t65 = pkin(3) * t83 + t105 * t518;
t64 = t105 * t334 - t330 * t83;
t63 = -t117 * t323 + t326 * t422;
t60 = t107 * t325 + t322 * t423;
t59 = t106 * t325 + t322 * t424;
t57 = t103 * t325 + t322 * t425;
t52 = t101 * t325 + t322 * t426;
t50 = -t323 * t94 + t326 * t428;
t49 = -pkin(4) * t131 + pkin(12) * t62;
t47 = pkin(4) * t225 + pkin(12) * t146 + t62;
t44 = t322 * t429 + t325 * t96;
t42 = t322 * t430 + t325 * t86;
t39 = -t323 * t82 + t326 * t431;
t38 = t334 * t75 - t509;
t37 = t334 * t73 - t510;
t36 = pkin(3) * t120 + t322 * t378 + t325 * t93;
t35 = pkin(3) * t118 + t322 * t379 + t325 * t89;
t31 = t322 * t427 + t325 * t61;
t30 = t334 * t67 - t511;
t24 = -pkin(4) * t142 + pkin(12) * t104 + t328 * t69 + t332 * t46;
t23 = -t323 * t57 + t326 * t432;
t22 = -pkin(4) * t136 + pkin(12) * t102 + t328 * t68 + t332 * t45;
t21 = -t323 * t52 + t326 * t433;
t19 = pkin(3) * t95 + t322 * t371 + t325 * t47;
t17 = t334 * t48 - t512;
t16 = -t323 * t42 + t326 * t434;
t15 = pkin(12) * t87 + t112 * t455 + t29 * t328;
t12 = -t323 * t31 + t326 * t435;
t11 = pkin(3) * t32 + t325 * t49 + (t526 + (-pkin(12) * t329 - t522) * t61) * t322;
t8 = t25 * t325 + t322 * t436;
t7 = pkin(3) * t58 + t24 * t325 + t322 * t382;
t6 = pkin(3) * t53 + t22 * t325 + t322 * t383;
t5 = pkin(12) * t26 + (-pkin(13) * t328 + t455) * t33;
t4 = t14 * t334 - t516;
t3 = pkin(3) * t43 + t15 * t325 + t322 * t384;
t2 = -t323 * t8 + t326 * t440;
t1 = pkin(3) * t9 + t322 * t385 + t325 * t5;
t54 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t472, 0, 0, 0, 0, 0, 0, (qJDD(2) * t525 - t524 * t527) * t324, (-qJDD(2) * t524 - t525 * t527) * t324, 0, t505 ^ 2 * t472 + (t285 * t524 - t349 * t525 - t366) * t324, 0, 0, 0, 0, 0, 0, t505 * (-t297 * t326 + t323 * t394) + (t265 * t525 + t282 * t524) * t324, t505 * (t294 * t326 + t323 * t395) + (t263 * t525 + t280 * t524) * t324, t505 * (t307 * t326 + t323 * t396) + (t262 * t525 + t269 * t524) * t324, t505 * (-t268 * t326 + t323 * t403) + (t188 * t525 + t208 * t524) * t324, 0, 0, 0, 0, 0, 0, t505 * (t182 * t326 + t323 * t411) + (t123 * t525 + t164 * t524) * t324, t505 * (t186 * t326 + t323 * t410) + (t124 * t525 + t167 * t524) * t324, t505 * (t169 * t326 + t323 * t414) + (t111 * t525 + t135 * t524) * t324, t505 * (t323 * t431 + t326 * t82) + (t39 * t525 + t524 * t64) * t324, 0, 0, 0, 0, 0, 0, t505 * (t117 * t326 + t323 * t422) + (t524 * t78 + t525 * t63) * t324, t505 * (t119 * t326 + t323 * t421) + (t524 * t81 + t525 * t66) * t324, t505 * (t323 * t428 + t326 * t94) + (t50 * t525 + t524 * t70) * t324, t505 * (t31 * t326 + t323 * t435) + (t12 * t525 + t17 * t524) * t324, 0, 0, 0, 0, 0, 0, t505 * (t323 * t433 + t326 * t52) + (t21 * t525 + t37 * t524) * t324, t505 * (t323 * t432 + t326 * t57) + (t23 * t525 + t38 * t524) * t324, t505 * (t323 * t434 + t326 * t42) + (t16 * t525 + t30 * t524) * t324, t505 * (t323 * t440 + t326 * t8) + (t2 * t525 + t4 * t524) * t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t349, -t285, 0, 0, (t462 + (qJD(3) - t445) * t468) * t319 * t330, t326 * t306 + (t330 * t297 + (t309 + t370) * t334) * t323, t326 * t295 + (t475 + t334 * (t317 - t451)) * t323, (t319 * t445 * t469 + t323 * t437) * t334, t326 * t296 + (t330 * (-t317 + t450) + t473) * t323, t326 * t443, pkin(2) * t265 - t326 * t243 + (pkin(10) * t282 + t268 * t334) * t323, pkin(2) * t263 - t244 * t326 + (pkin(10) * t280 - t268 * t330) * t323, pkin(2) * t262 + (pkin(10) * t269 + t208) * t323, pkin(2) * t188 + t208 * t520, t326 * t211 + (t330 * (t261 * t333 - t301 * t489) + t334 * (t261 * t480 + (-t289 * t322 + t325 * t488) * t291)) * t323, t326 * t178 + (t330 * (-t233 * t333 - t237 * t329) + t334 * (-t267 * t322 + t325 * t405)) * t323, t326 * t193 + (t330 * (-t278 * t329 + t533) + t334 * (-t238 * t322 + t325 * t400)) * t323, t323 * t330 * (t289 * t488 + t329 * t358) + (-t325 * t356 + (t291 * t322 + t301 * t480) * t289) * t481 + t326 * t210, t326 * t194 + (t330 * (t277 * t333 + t494) + t334 * (-t322 * t355 + t325 * t401)) * t323, -t293 * t322 * t481 + t326 * t232 + (t330 * (-t289 * t333 + t489) + t397 * t479) * t323 * t301, pkin(2) * t123 + t326 * t84 + (t330 * (-t498 + (-t182 * t322 - t183 * t325) * pkin(11)) + t334 * (-pkin(3) * t182 + t148 * t322 + t325 * t439) + pkin(10) * t164) * t323, pkin(2) * t124 + t326 * t85 + (t330 * (-t497 + (-t186 * t322 - t187 * t325) * pkin(11)) + t334 * (-pkin(3) * t186 + t149 * t322 + t325 * t438) + pkin(10) * t167) * t323, pkin(2) * t111 + t326 * t74 + (t330 * (-t169 * t518 - t416) - t169 * t523 + pkin(10) * t135 + (-pkin(11) * t476 + t334 * t375) * t325) * t323, pkin(2) * t39 + t326 * t65 + (-t82 * t523 + pkin(10) * t64 + (t330 * (-t322 * t82 - t325 * t83) + t105 * t479) * pkin(11)) * t323, t326 * t134 + (t330 * (t200 * t333 + t457) + t334 * (-t199 * t322 + t325 * t389)) * t323, t326 * t100 + (t330 * (t147 * t333 + t241 * t329) + t334 * (-t145 * t322 + t325 * t417)) * t323, t326 * t121 + (t330 * (t191 * t333 + t205 * t329) + t334 * (-t189 * t322 + t325 * t409)) * t323, t326 * t133 + (t330 * (t198 * t333 - t457) + t334 * (-t197 * t322 + t325 * t390)) * t323, t326 * t122 + (t330 * (t192 * t333 - t201 * t329) + t334 * (-t190 * t322 + t325 * t408)) * t323, t326 * t168 + (t330 * (t220 * t333 + t260 * t329) + t334 * (-t219 * t322 + t325 * t407)) * t323, pkin(2) * t63 + t326 * t35 + (t330 * (t110 * t333 - t117 * t518 - t329 * t76) + t334 * (-pkin(3) * t117 - t322 * t89) + pkin(10) * t78 + (-pkin(11) * t478 + t334 * t379) * t325) * t323, pkin(2) * t66 + t326 * t36 + (t330 * (t116 * t333 - t119 * t518 - t329 * t77) + t334 * (-pkin(3) * t119 - t322 * t93) + pkin(10) * t81 + (-pkin(11) * t477 + t334 * t378) * t325) * t323, pkin(2) * t50 + t326 * t19 + (t330 * (pkin(4) * t144 * t329 + t333 * t51 - t518 * t94) + t334 * (-pkin(3) * t94 - t322 * t47) + pkin(10) * t70 + (-pkin(11) * t508 + t334 * t371) * t325) * t323, pkin(2) * t12 + t326 * t11 + (t330 * (pkin(4) * t513 - pkin(12) * t506 - t31 * t518) + t334 * (-pkin(3) * t31 - t322 * t49) + pkin(10) * t17 + (-pkin(11) * t512 + t334 * (-pkin(4) * t506 - pkin(12) * t513 + t526)) * t325) * t323, t326 * t72 + (t330 * (t128 * t333 + t156 * t329) + t334 * (-t126 * t322 + t325 * t419)) * t323, t326 * t44 + (t330 * (t113 * t329 + t333 * t97) + t334 * (-t322 * t96 + t325 * t429)) * t323, t326 * t59 + (t330 * (t108 * t333 + t150 * t329) + t334 * (-t106 * t322 + t325 * t424)) * t323, t326 * t71 + (t330 * (t127 * t333 - t154 * t329) + t334 * (-t125 * t322 + t325 * t420)) * t323, t326 * t60 + (t330 * (t109 * t333 + t151 * t329) + t334 * (-t107 * t322 + t325 * t423)) * t323, t326 * t88 + (t330 * (t166 * t333 + t184 * t329) + t334 * (-t165 * t322 + t325 * t415)) * t323, pkin(2) * t21 + t326 * t6 + (t330 * (t27 * t333 - t329 * t40 - t518 * t52) + t334 * (-pkin(3) * t52 - t22 * t322) + pkin(10) * t37 + (-pkin(11) * t510 + t334 * t383) * t325) * t323, pkin(2) * t23 + t326 * t7 + (t330 * (t28 * t333 - t329 * t41 - t518 * t57) + t334 * (-pkin(3) * t57 - t24 * t322) + pkin(10) * t38 + (-pkin(11) * t509 + t334 * t382) * t325) * t323, pkin(2) * t16 + t326 * t3 + (t330 * (t18 * t333 - t20 * t329 - t42 * t518) + t334 * (-pkin(3) * t42 - t15 * t322) + pkin(10) * t30 + (-pkin(11) * t511 + t334 * t384) * t325) * t323, pkin(2) * t2 + t326 * t1 + (t330 * (t10 * t333 - t13 * t329 - t518 * t8) + t334 * (-pkin(3) * t8 - t322 * t5) + pkin(10) * t4 + (-pkin(11) * t516 + t334 * t385) * t325) * t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t315, t306, t295, t315, t296, t443, -t243, -t244, 0, 0, t211, t178, t193, t210, t194, t232, t84, t85, t74, t65, t134, t100, t121, t133, t122, t168, t35, t36, t19, t11, t72, t44, t59, t71, t60, t88, t6, t7, t3, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t267, t238, -t490, t355, t293, -t148, -t149, 0, 0, t199, t145, t189, t197, t190, t219, t89, t93, t47, t49, t126, t96, t106, t125, t107, t165, t22, t24, t15, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, t241, t205, -t242, -t201, t260, -t91, -t92, 0, 0, t156, t113, t150, -t154, t151, t184, t387, t386, t374, t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, t215, t162, -t217, -t158, t222, -t55, -t56, 0, 0;];
tauJ_reg  = t54;
