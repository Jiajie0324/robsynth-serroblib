% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6PRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRR6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRRRRR6_inertiaDJ_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:25:04
% EndTime: 2019-03-09 01:25:21
% DurationCPUTime: 6.50s
% Computational Cost: add. (8002->487), mult. (25632->913), div. (0->0), fcn. (26749->16), ass. (0->223)
t156 = sin(qJ(4));
t149 = sin(pkin(7));
t157 = sin(qJ(3));
t162 = cos(qJ(3));
t148 = sin(pkin(8));
t271 = pkin(11) * t148;
t107 = (-pkin(3) * t162 - t157 * t271 - pkin(2)) * t149;
t151 = cos(pkin(8));
t152 = cos(pkin(7));
t201 = t149 * (-pkin(11) * t151 - pkin(10));
t189 = t157 * t201;
t93 = (pkin(2) * t162 + pkin(3)) * t152 + t189;
t194 = t107 * t148 + t151 * t93;
t161 = cos(qJ(4));
t272 = pkin(2) * t152;
t229 = t157 * t272;
t259 = t149 * t162;
t171 = -pkin(10) * t259 - t229;
t86 = (t148 * t152 + t151 * t259) * pkin(11) - t171;
t83 = t161 * t86;
t242 = qJD(3) * t162;
t136 = t242 * t272;
t94 = qJD(3) * t189 + t136;
t284 = -(t156 * t194 + t83) * qJD(4) - t156 * t94;
t155 = sin(qJ(5));
t283 = -0.4e1 * t155;
t258 = t151 * t156;
t260 = t148 * t161;
t247 = pkin(3) * t258 + pkin(11) * t260;
t115 = t151 * pkin(12) + t247;
t116 = (-pkin(4) * t161 - pkin(12) * t156 - pkin(3)) * t148;
t160 = cos(qJ(5));
t282 = t160 * t115 + t155 * t116;
t257 = t151 * t161;
t95 = (t162 * t201 - t229) * qJD(3);
t281 = -t95 * t257 - t284;
t249 = t161 * t162;
t256 = t156 * t157;
t280 = t151 * t249 - t256;
t243 = qJD(3) * t157;
t216 = t149 * t243;
t203 = t148 * t216;
t240 = qJD(4) * t161;
t217 = t148 * t240;
t67 = t152 * t217 + (t280 * qJD(4) + (-t151 * t256 + t249) * qJD(3)) * t149;
t122 = t148 * t259 - t151 * t152;
t253 = t157 * t161;
t255 = t156 * t162;
t174 = t151 * t255 + t253;
t261 = t148 * t156;
t91 = t149 * t174 + t152 * t261;
t71 = t160 * t122 + t155 * t91;
t37 = -qJD(5) * t71 + t155 * t203 + t160 * t67;
t72 = -t155 * t122 + t160 * t91;
t38 = qJD(5) * t72 + t155 * t67 - t160 * t203;
t279 = t38 * pkin(5) - t37 * pkin(13);
t159 = cos(qJ(6));
t146 = t159 ^ 2;
t154 = sin(qJ(6));
t246 = t154 ^ 2 - t146;
t210 = t246 * qJD(6);
t277 = -t156 * t86 + t161 * t194;
t150 = sin(pkin(6));
t153 = cos(pkin(6));
t163 = cos(qJ(2));
t123 = -t150 * t163 * t149 + t153 * t152;
t248 = t162 * t163;
t158 = sin(qJ(2));
t254 = t157 * t158;
t173 = t152 * t248 - t254;
t89 = t150 * t173 + t153 * t259;
t193 = t123 * t148 + t151 * t89;
t251 = t158 * t162;
t252 = t157 * t163;
t172 = t152 * t252 + t251;
t90 = t153 * t149 * t157 + t150 * t172;
t276 = -t90 * t156 + t161 * t193;
t117 = (pkin(4) * t156 - pkin(12) * t161) * t148 * qJD(4);
t241 = qJD(4) * t156;
t218 = t148 * t241;
t221 = t151 * t240;
t118 = -pkin(3) * t221 + pkin(11) * t218;
t54 = -qJD(5) * t282 + t160 * t117 + t155 * t118;
t62 = t151 * t107 - t148 * t93;
t88 = -t149 * t280 - t152 * t260;
t41 = t88 * pkin(4) - t91 * pkin(12) + t62;
t226 = t107 * t261 + t93 * t258 + t83;
t44 = -t122 * pkin(12) + t226;
t268 = t155 * t41 + t160 * t44;
t110 = (pkin(3) * t157 - t162 * t271) * t149 * qJD(3);
t31 = -t107 * t217 - t110 * t261 - t161 * t94 - t93 * t221 + t86 * t241 - t95 * t258;
t29 = pkin(12) * t203 - t31;
t68 = t152 * t218 + (t174 * qJD(4) + (t151 * t253 + t255) * qJD(3)) * t149;
t69 = t151 * t110 - t148 * t95;
t34 = t68 * pkin(4) - t67 * pkin(12) + t69;
t8 = -qJD(5) * t268 - t155 * t29 + t160 * t34;
t275 = 0.2e1 * t148;
t270 = pkin(12) * t148;
t269 = t154 * pkin(12);
t51 = t154 * t72 - t159 * t88;
t16 = -qJD(6) * t51 + t154 * t68 + t159 * t37;
t266 = t16 * t154;
t265 = t16 * t159;
t125 = -t160 * t151 + t155 * t261;
t96 = -qJD(5) * t125 + t160 * t217;
t126 = t155 * t151 + t160 * t261;
t98 = t154 * t126 + t159 * t260;
t58 = -qJD(6) * t98 + t154 * t218 + t159 * t96;
t264 = t58 * t154;
t263 = t58 * t159;
t250 = t159 * t160;
t145 = t155 ^ 2;
t245 = -t160 ^ 2 + t145;
t244 = qJD(2) * t150;
t239 = qJD(5) * t154;
t238 = qJD(5) * t155;
t237 = qJD(5) * t159;
t236 = qJD(5) * t160;
t235 = qJD(5) * t161;
t234 = qJD(6) * t154;
t233 = qJD(6) * t159;
t232 = qJD(6) * t160;
t231 = -0.2e1 * pkin(4) * qJD(5);
t230 = -0.2e1 * pkin(5) * qJD(6);
t228 = t160 * t269;
t227 = pkin(12) * t250;
t224 = t154 * t260;
t143 = t149 ^ 2;
t223 = t143 * t242;
t142 = t148 ^ 2;
t222 = t142 * t240;
t220 = t154 * t232;
t219 = t159 * t232;
t215 = t149 * t242;
t214 = t158 * t244;
t213 = t154 * t233;
t212 = t155 * t236;
t211 = t159 * t236;
t209 = t245 * qJD(5);
t208 = 0.2e1 * t212;
t207 = t143 * t214;
t206 = t149 * t214;
t205 = t142 * t216;
t204 = t156 * t222;
t202 = t154 * t211;
t200 = -t160 * pkin(5) - t155 * pkin(13);
t199 = pkin(5) * t155 - pkin(13) * t160;
t19 = pkin(13) * t88 + t268;
t43 = t122 * pkin(4) - t277;
t27 = t71 * pkin(5) - t72 * pkin(13) + t43;
t10 = t154 * t27 + t159 * t19;
t50 = t156 * t193 + t90 * t161;
t70 = t123 * t151 - t89 * t148;
t36 = t70 * t155 + t50 * t160;
t21 = -t154 * t276 + t36 * t159;
t20 = -t36 * t154 - t159 * t276;
t52 = t154 * t88 + t159 * t72;
t198 = -t154 * t52 - t159 * t51;
t137 = pkin(11) * t261;
t114 = t137 + (-pkin(3) * t161 - pkin(4)) * t151;
t73 = t125 * pkin(5) - t126 * pkin(13) + t114;
t75 = -pkin(13) * t260 + t282;
t46 = t154 * t73 + t159 * t75;
t99 = t159 * t126 - t224;
t197 = -t154 * t99 - t159 * t98;
t22 = -t155 * t44 + t160 * t41;
t35 = t50 * t155 - t70 * t160;
t192 = t148 * t206;
t78 = -t155 * t115 + t160 * t116;
t133 = -pkin(4) + t200;
t112 = t154 * t133 + t227;
t18 = -t88 * pkin(5) - t22;
t6 = -t68 * pkin(5) - t8;
t188 = t6 * t154 + t18 * t233;
t187 = -t6 * t159 + t18 * t234;
t185 = t155 * t68 + t88 * t236;
t184 = -t160 * t68 + t88 * t238;
t65 = -t153 * t216 + (-t172 * qJD(3) + (-t152 * t251 - t252) * qJD(2)) * t150;
t66 = t153 * t215 + (t173 * qJD(3) + (-t152 * t254 + t248) * qJD(2)) * t150;
t25 = t66 * t161 + (t151 * t65 + t192) * t156 + t276 * qJD(4);
t57 = -t65 * t148 + t151 * t206;
t11 = qJD(5) * t36 + t25 * t155 - t57 * t160;
t183 = t11 * t154 + t35 * t233;
t182 = -t11 * t159 + t35 * t234;
t181 = t154 * t38 + t71 * t233;
t180 = -t159 * t38 + t71 * t234;
t48 = -pkin(5) * t218 - t54;
t74 = pkin(5) * t260 - t78;
t179 = t48 * t154 + t74 * t233;
t178 = -t48 * t159 + t74 * t234;
t177 = t199 * t154;
t97 = qJD(5) * t126 + t155 * t217;
t176 = t125 * t233 + t154 * t97;
t175 = t125 * t234 - t159 * t97;
t7 = -t155 * t34 - t160 * t29 - t41 * t236 + t44 * t238;
t53 = t115 * t238 - t116 * t236 - t155 * t117 + t160 * t118;
t170 = t155 * t235 + t160 * t241;
t169 = t155 * t241 - t160 * t235;
t168 = t155 * t237 + t220;
t119 = t247 * qJD(4);
t167 = -t68 * pkin(13) + t7;
t166 = pkin(13) * t218 - t53;
t164 = t97 * pkin(5) - t96 * pkin(13) + t119;
t30 = (-pkin(4) * t216 - t110 * t161) * t148 + t281;
t121 = t171 * qJD(3);
t120 = pkin(10) * t216 - t136;
t111 = t159 * t133 - t228;
t77 = -t112 * qJD(6) + (t155 * t269 + t159 * t199) * qJD(5);
t76 = pkin(12) * t168 - qJD(5) * t177 - t133 * t233;
t59 = -qJD(6) * t224 + t126 * t233 + t154 * t96 - t159 * t218;
t45 = -t154 * t75 + t159 * t73;
t32 = (t110 * t148 + t151 * t95) * t161 + t284;
t24 = qJD(4) * t50 + t66 * t156 - t161 * t192 - t65 * t257;
t17 = qJD(6) * t52 + t154 * t37 - t159 * t68;
t15 = -qJD(6) * t46 - t154 * t166 + t159 * t164;
t14 = -t154 * t164 - t159 * t166 - t73 * t233 + t75 * t234;
t12 = -qJD(5) * t35 + t57 * t155 + t25 * t160;
t9 = -t154 * t19 + t159 * t27;
t4 = t20 * qJD(6) + t12 * t159 + t24 * t154;
t3 = -t21 * qJD(6) - t12 * t154 + t24 * t159;
t2 = -t10 * qJD(6) + t154 * t167 + (-pkin(4) * t203 - t110 * t260 + t279 + t281) * t159;
t1 = t19 * t234 - t154 * (t30 + t279) - t27 * t233 + t159 * t167;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t214, -t163 * t244, 0, 0, 0, 0, 0, t123 * t216 + t65 * t152 - t162 * t207, t123 * t215 - t66 * t152 + t157 * t207, 0, 0, 0, 0, 0, t24 * t122 + t203 * t276 + t57 * t88 + t70 * t68, t25 * t122 - t203 * t50 + t57 * t91 + t70 * t67, 0, 0, 0, 0, 0, -t11 * t88 + t24 * t71 - t276 * t38 - t35 * t68, -t12 * t88 + t24 * t72 - t276 * t37 - t36 * t68, 0, 0, 0, 0, 0, t11 * t51 + t35 * t17 + t20 * t38 + t3 * t71, t11 * t52 + t35 * t16 - t21 * t38 - t4 * t71; 0, 0, 0, 0, 0.2e1 * t157 * t223, 0.2e1 * (-t157 ^ 2 + t162 ^ 2) * t143 * qJD(3), 0.2e1 * t152 * t215, -0.2e1 * t152 * t216, 0, -0.2e1 * t143 * pkin(2) * t243 + 0.2e1 * t121 * t152, -0.2e1 * pkin(2) * t223 + 0.2e1 * t120 * t152, 0.2e1 * t91 * t67, -0.2e1 * t67 * t88 - 0.2e1 * t68 * t91, -0.2e1 * t122 * t67 + 0.2e1 * t203 * t91, 0.2e1 * t122 * t68 - 0.2e1 * t203 * t88, -0.2e1 * t122 * t203, -0.2e1 * t32 * t122 + 0.2e1 * t203 * t277 + 0.2e1 * t62 * t68 + 0.2e1 * t69 * t88, -0.2e1 * t31 * t122 - 0.2e1 * t203 * t226 + 0.2e1 * t62 * t67 + 0.2e1 * t69 * t91, 0.2e1 * t72 * t37, -0.2e1 * t37 * t71 - 0.2e1 * t38 * t72, 0.2e1 * t37 * t88 + 0.2e1 * t68 * t72, -0.2e1 * t38 * t88 - 0.2e1 * t68 * t71, 0.2e1 * t88 * t68, 0.2e1 * t22 * t68 + 0.2e1 * t30 * t71 + 0.2e1 * t43 * t38 + 0.2e1 * t8 * t88, -0.2e1 * t268 * t68 + 0.2e1 * t30 * t72 + 0.2e1 * t43 * t37 + 0.2e1 * t7 * t88, 0.2e1 * t52 * t16, -0.2e1 * t16 * t51 - 0.2e1 * t17 * t52, 0.2e1 * t16 * t71 + 0.2e1 * t52 * t38, -0.2e1 * t17 * t71 - 0.2e1 * t51 * t38, 0.2e1 * t71 * t38, 0.2e1 * t18 * t17 + 0.2e1 * t2 * t71 + 0.2e1 * t9 * t38 + 0.2e1 * t6 * t51, 0.2e1 * t1 * t71 - 0.2e1 * t10 * t38 + 0.2e1 * t18 * t16 + 0.2e1 * t6 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t66, 0, 0, 0, 0, 0, -t24 * t151 + (-t161 * t57 + t241 * t70) * t148, -t25 * t151 + (t156 * t57 + t240 * t70) * t148, 0, 0, 0, 0, 0, t24 * t125 - t276 * t97 + (t11 * t161 - t241 * t35) * t148, t24 * t126 - t276 * t96 + (t12 * t161 - t241 * t36) * t148, 0, 0, 0, 0, 0, t11 * t98 + t3 * t125 + t20 * t97 + t35 * t59, t11 * t99 - t4 * t125 - t21 * t97 + t35 * t58; 0, 0, 0, 0, 0, 0, t215, -t216, 0, t121, t120 (t156 * t67 + t91 * t240) * t148 (-t156 * t68 + t161 * t67 + (-t156 * t91 - t161 * t88) * qJD(4)) * t148, -t122 * t217 + t151 * t67 + t156 * t205, t122 * t218 - t151 * t68 + t161 * t205, t151 * t203, t119 * t122 + t32 * t151 + (-pkin(3) * t68 - t69 * t161 + t62 * t241 + (pkin(3) * t257 - t137) * t216) * t148, -t118 * t122 + t31 * t151 + (-pkin(3) * t67 + t69 * t156 - t216 * t247 + t240 * t62) * t148, t37 * t126 + t72 * t96, -t37 * t125 - t126 * t38 - t96 * t71 - t72 * t97, t126 * t68 + t96 * t88 + (-t161 * t37 + t241 * t72) * t148, -t125 * t68 - t97 * t88 + (t161 * t38 - t241 * t71) * t148 (-t161 * t68 + t241 * t88) * t148, t114 * t38 + t119 * t71 + t30 * t125 + t43 * t97 + t54 * t88 + t78 * t68 + (-t161 * t8 + t22 * t241) * t148, t114 * t37 + t119 * t72 + t30 * t126 + t43 * t96 + t53 * t88 - t282 * t68 + (-t161 * t7 - t241 * t268) * t148, t16 * t99 + t52 * t58, -t16 * t98 - t17 * t99 - t58 * t51 - t52 * t59, t16 * t125 + t99 * t38 + t52 * t97 + t58 * t71, -t17 * t125 - t98 * t38 - t51 * t97 - t59 * t71, t38 * t125 + t71 * t97, t2 * t125 + t15 * t71 + t74 * t17 + t18 * t59 + t45 * t38 + t48 * t51 + t6 * t98 + t9 * t97, t1 * t125 - t10 * t97 + t14 * t71 + t74 * t16 + t18 * t58 - t46 * t38 + t48 * t52 + t6 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t204, 0.2e1 * (-t156 ^ 2 + t161 ^ 2) * t142 * qJD(4), 0.2e1 * t151 * t217, -0.2e1 * t151 * t218, 0, -0.2e1 * pkin(3) * t142 * t241 - 0.2e1 * t119 * t151, -0.2e1 * pkin(3) * t222 + 0.2e1 * t118 * t151, 0.2e1 * t126 * t96, -0.2e1 * t96 * t125 - 0.2e1 * t126 * t97 (t126 * t241 - t161 * t96) * t275 (-t125 * t241 + t161 * t97) * t275, -0.2e1 * t204, 0.2e1 * t114 * t97 + 0.2e1 * t119 * t125 + 0.2e1 * (-t161 * t54 + t241 * t78) * t148, 0.2e1 * t114 * t96 + 0.2e1 * t119 * t126 + 0.2e1 * (-t161 * t53 - t241 * t282) * t148, 0.2e1 * t99 * t58, -0.2e1 * t58 * t98 - 0.2e1 * t59 * t99, 0.2e1 * t58 * t125 + 0.2e1 * t99 * t97, -0.2e1 * t59 * t125 - 0.2e1 * t98 * t97, 0.2e1 * t125 * t97, 0.2e1 * t15 * t125 + 0.2e1 * t45 * t97 + 0.2e1 * t48 * t98 + 0.2e1 * t74 * t59, 0.2e1 * t14 * t125 - 0.2e1 * t46 * t97 + 0.2e1 * t48 * t99 + 0.2e1 * t74 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, -t25, 0, 0, 0, 0, 0, -t24 * t160 - t238 * t276, t24 * t155 - t236 * t276, 0, 0, 0, 0, 0 (t239 * t35 - t3) * t160 + (qJD(5) * t20 + t183) * t155 (t237 * t35 + t4) * t160 + (-qJD(5) * t21 - t182) * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, -t68, t203, t32, t31, t37 * t155 + t236 * t72, -t155 * t38 + t37 * t160 + (-t155 * t72 - t160 * t71) * qJD(5), t185, -t184, 0, -pkin(4) * t38 - pkin(12) * t185 - t30 * t160 + t238 * t43, -pkin(4) * t37 + pkin(12) * t184 + t30 * t155 + t236 * t43, t52 * t211 + (-t234 * t52 + t265) * t155, t198 * t236 + (-t266 - t159 * t17 + (t154 * t51 - t159 * t52) * qJD(6)) * t155 (t237 * t71 - t16) * t160 + (qJD(5) * t52 - t180) * t155 (-t239 * t71 + t17) * t160 + (-qJD(5) * t51 - t181) * t155, -t38 * t160 + t238 * t71, t111 * t38 + t77 * t71 + (-t2 + (pkin(12) * t51 + t154 * t18) * qJD(5)) * t160 + (pkin(12) * t17 + qJD(5) * t9 + t188) * t155, -t112 * t38 + t76 * t71 + (-t1 + (pkin(12) * t52 + t159 * t18) * qJD(5)) * t160 + (pkin(12) * t16 - qJD(5) * t10 - t187) * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t218, 0, -t119, t118, t126 * t236 + t96 * t155, -t155 * t97 + t96 * t160 + (-t125 * t160 - t126 * t155) * qJD(5), t169 * t148, t170 * t148, 0, -pkin(4) * t97 + t114 * t238 - t119 * t160 - t169 * t270, -pkin(4) * t96 + t114 * t236 + t119 * t155 - t170 * t270, t99 * t211 + (-t234 * t99 + t263) * t155, t197 * t236 + (-t264 - t159 * t59 + (t154 * t98 - t159 * t99) * qJD(6)) * t155 (t125 * t237 - t58) * t160 + (qJD(5) * t99 - t175) * t155 (-t125 * t239 + t59) * t160 + (-qJD(5) * t98 - t176) * t155, t125 * t238 - t97 * t160, t111 * t97 + t77 * t125 + (-t15 + (pkin(12) * t98 + t154 * t74) * qJD(5)) * t160 + (pkin(12) * t59 + qJD(5) * t45 + t179) * t155, -t112 * t97 + t76 * t125 + (-t14 + (pkin(12) * t99 + t159 * t74) * qJD(5)) * t160 + (pkin(12) * t58 - qJD(5) * t46 - t178) * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, -0.2e1 * t209, 0, 0, 0, t155 * t231, t160 * t231, -0.2e1 * t145 * t213 + 0.2e1 * t146 * t212, 0.2e1 * t145 * t210 + t202 * t283, 0.2e1 * t155 * t220 + 0.2e1 * t237 * t245, -0.2e1 * t154 * t209 + 0.2e1 * t155 * t219, -0.2e1 * t212, 0.2e1 * t111 * t238 - 0.2e1 * t77 * t160 + 0.2e1 * (t145 * t233 + t154 * t208) * pkin(12), -0.2e1 * t112 * t238 - 0.2e1 * t76 * t160 + 0.2e1 * (-t145 * t234 + t159 * t208) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, -t12, 0, 0, 0, 0, 0, t182, t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t38, t68, t8, t7, t233 * t52 + t266, qJD(6) * t198 - t154 * t17 + t265, t181, -t180, 0, -pkin(5) * t17 - pkin(13) * t181 + t187, -pkin(5) * t16 + pkin(13) * t180 + t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, -t97, t218, t54, t53, t233 * t99 + t264, qJD(6) * t197 - t154 * t59 + t263, t176, -t175, 0, -pkin(5) * t59 - pkin(13) * t176 + t178, -pkin(5) * t58 + pkin(13) * t175 + t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, -t238, 0, -pkin(12) * t236, pkin(12) * t238, -t155 * t210 + t202, t213 * t283 - t236 * t246, t154 * t238 - t219, t168, 0 (pkin(13) * t250 + (-t159 * pkin(5) + t269) * t155) * qJD(6) + (t154 * t200 - t227) * qJD(5) (pkin(12) * t155 * t159 + t177) * qJD(6) + (t159 * t200 + t228) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t213, -0.2e1 * t210, 0, 0, 0, t154 * t230, t159 * t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, -t17, t38, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, -t59, t97, t15, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t155 * t234 + t211, -t154 * t236 - t155 * t233, t238, t77, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, -t234, 0, -pkin(13) * t233, pkin(13) * t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
