% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRRRRR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:25:12
% EndTime: 2019-03-09 01:28:38
% DurationCPUTime: 184.35s
% Computational Cost: add. (112012->2484), mult. (321847->3421), div. (0->0), fcn. (373172->16), ass. (0->1477)
t1784 = sin(qJ(5));
t1781 = sin(pkin(8));
t1782 = sin(pkin(7));
t1790 = cos(qJ(3));
t2420 = t1782 * t1790;
t2602 = cos(pkin(8));
t2603 = cos(pkin(7));
t2072 = t1781 * t2420 - t2602 * t2603;
t1948 = t1784 * t2072;
t1785 = sin(qJ(4));
t2232 = t1781 * t2603;
t2183 = t1785 * t2232;
t2226 = t1790 * t2602;
t1786 = sin(qJ(3));
t1789 = cos(qJ(4));
t2389 = t1786 * t1789;
t1578 = t2183 + (t1785 * t2226 + t2389) * t1782;
t1788 = cos(qJ(5));
t2370 = t1788 * t1578;
t1384 = -t1948 + t2370;
t1382 = t1578 * t1784 + t1788 * t2072;
t2629 = -t1784 / 0.2e1;
t2286 = t1382 * t2629;
t2622 = t1788 / 0.2e1;
t2006 = t1384 * t2622 + t2286;
t2231 = t1784 * t2602;
t2423 = t1781 * t1788;
t2303 = t1785 * t2423;
t1700 = t2231 + t2303;
t2637 = t1700 / 0.2e1;
t2425 = t1781 * t1785;
t2316 = t1784 * t2425;
t1698 = -t1788 * t2602 + t2316;
t2639 = t1698 / 0.2e1;
t2007 = t1382 * t2637 + t1384 * t2639;
t2461 = t1382 * qJD(2);
t2779 = qJD(3) * t2007 - qJD(4) * t2006 + t1384 * t2461;
t1998 = t1698 * t2629 + t1700 * t2622;
t2436 = t1698 * qJD(3);
t2778 = qJD(2) * t2007 - qJD(4) * t1998 + t1700 * t2436;
t2422 = t1781 * t1789;
t2266 = -t2422 / 0.2e1;
t2421 = t1782 * t1786;
t2312 = t1785 * t2421;
t2741 = t1782 * t2226 + t2232;
t1575 = -t1789 * t2741 + t2312;
t2272 = t1575 * t2639;
t1963 = t1382 * t2266 + t2272;
t1908 = t1963 * t1784;
t2317 = t1781 * t2421;
t1730 = t1788 * t2317;
t2230 = t1785 * t2602;
t1731 = t2230 * t2421;
t1653 = t1789 * t2420 - t1731;
t2395 = t1784 * t1653;
t1508 = -t1730 + t2395;
t2454 = t1508 * t1788;
t2284 = -t2454 / 0.2e1;
t1841 = t2284 - t1908;
t2767 = t2006 * qJD(5);
t2777 = t1841 * qJD(3) - t2767;
t1840 = t2454 / 0.2e1 - t1908;
t2776 = -t1840 * qJD(3) - t2767;
t2752 = t1840 * qJD(2);
t2768 = t1998 * qJD(5);
t2775 = -t2752 - t2768;
t2774 = t2752 - t2768;
t2228 = t1789 * t2602;
t2177 = t1786 * t2228;
t2390 = t1785 * t1790;
t1650 = (t2177 + t2390) * t1782;
t2313 = qJD(3) * t2422;
t2452 = t1575 * qJD(2);
t2620 = t1789 / 0.2e1;
t2627 = -t1785 / 0.2e1;
t2746 = (t1575 * t2627 + t1578 * t2620) * t1781;
t2765 = t2746 * qJD(4);
t2773 = -t2765 + (-t2313 + t2452) * t1650;
t2772 = -t1650 * t2452 - t2765;
t1787 = cos(qJ(6));
t2380 = t1787 * t1575;
t1783 = sin(qJ(6));
t2417 = t1783 * t1384;
t1139 = -t2380 + t2417;
t2387 = t1787 * t1384;
t2410 = t1783 * t1575;
t1141 = t2387 + t2410;
t2310 = t1783 * t2422;
t2378 = t1787 * t1700;
t1587 = -t2310 + t2378;
t2656 = -t1587 / 0.2e1;
t2306 = t1787 * t2422;
t2405 = t1783 * t1700;
t1585 = t2306 + t2405;
t2658 = -t1585 / 0.2e1;
t589 = t1139 * t2656 + t1141 * t2658;
t2771 = t589 * qJD(6);
t2418 = t1783 * t1139;
t2483 = t1141 * t1787;
t726 = -t2418 / 0.2e1 + t2483 / 0.2e1;
t2770 = t726 * qJD(6);
t2408 = t1783 * t1585;
t2446 = t1587 * t1787;
t1314 = -t2408 / 0.2e1 + t2446 / 0.2e1;
t2769 = t1314 * qJD(6);
t2766 = t2007 * qJD(5);
t2085 = t1782 * (-pkin(11) * t2602 - pkin(10));
t2227 = t1790 * t2603;
t2209 = pkin(2) * t2227;
t1619 = t1786 * t2085 + t2209;
t2341 = -pkin(3) * t1790 - pkin(2);
t2343 = t2603 * pkin(3);
t2424 = t1781 * t1786;
t2764 = t2602 * (t2343 + t1619) + t1781 * (-pkin(11) * t2424 + t2341) * t1782;
t1776 = t1783 ^ 2;
t1778 = t1787 ^ 2;
t1707 = (t1776 / 0.2e1 - t1778 / 0.2e1) * t1784;
t2449 = t1585 * t1787;
t2281 = t2449 / 0.2e1;
t2447 = t1587 * t1783;
t2003 = t2447 / 0.2e1 + t2281;
t1931 = t2003 * t1784;
t2486 = t1139 * t1787;
t2297 = t2486 / 0.2e1;
t2484 = t1141 * t1783;
t2013 = t2297 + t2484 / 0.2e1;
t1935 = t2013 * t1784;
t1777 = t1784 ^ 2;
t2376 = t1787 * t1777;
t2763 = t1783 * qJD(4) * t2376 + qJD(2) * t1935 + qJD(3) * t1931 + t1707 * qJD(5);
t2762 = qJD(4) * t1841 + (t2436 + t2461) * t1508 + t2766;
t2761 = qJD(4) * t1840 - t1508 * t2461 + t2766;
t1774 = t1781 ^ 2;
t2428 = t1774 * t1789;
t2319 = t1785 * t2428;
t2217 = qJD(2) * t2746 + qJD(3) * t2319;
t2760 = -qJD(3) * t2746 + t1578 * t2452;
t2532 = qJD(2) * t1141;
t2759 = -qJD(3) * t589 + qJD(4) * t1935 - qJD(5) * t726 + t1139 * t2532;
t2524 = qJD(3) * t1587;
t2758 = -qJD(2) * t589 + qJD(4) * t1931 - qJD(5) * t1314 + t1585 * t2524;
t2374 = t1788 * qJD(4);
t1766 = t1784 * t2374;
t2024 = qJD(2) * t2006 + qJD(3) * t1998 + t1766;
t2401 = t1783 * t1787;
t1765 = qJD(5) * t2401;
t2757 = -qJD(2) * t726 - qJD(3) * t1314 + t1707 * qJD(4) - t1765;
t2601 = sin(pkin(6));
t2171 = t2603 * t2601;
t2604 = cos(pkin(6));
t2709 = cos(qJ(2));
t1870 = t1782 * t2604 + t2171 * t2709;
t2708 = sin(qJ(2));
t2206 = t2601 * t2708;
t2102 = t1786 * t2206;
t1815 = -t1790 * t1870 + t2102;
t2207 = t2601 * t2709;
t1871 = -t1782 * t2207 + t2603 * t2604;
t1801 = t1781 * t1815 + t1871 * t2602;
t2756 = t1801 / 0.2e1;
t2753 = t1784 * (t2452 / 0.2e1 + qJD(3) * t2266);
t2748 = t1931 * qJD(6);
t2747 = t1935 * qJD(6);
t2742 = -t1871 * t1781 + t1815 * t2602;
t1473 = t1787 * t1698;
t2244 = -t1473 / 0.2e1;
t2445 = t1587 * t1788;
t2740 = t1784 * t2244 + t2445 / 0.2e1;
t974 = t1787 * t1382;
t2249 = -t974 / 0.2e1;
t2482 = t1141 * t1788;
t2739 = t1784 * t2249 + t2482 / 0.2e1;
t2403 = t1783 * t1784;
t2259 = -t2403 / 0.2e1;
t2485 = t1139 * t1788;
t2738 = t1382 * t2259 + t2485 / 0.2e1;
t2448 = t1585 * t1788;
t1965 = t1698 * t2259 + t2448 / 0.2e1;
t1484 = t2395 / 0.2e1 - t1730 / 0.2e1;
t2229 = t1786 * t2603;
t2210 = pkin(2) * t2229;
t1705 = pkin(10) * t2420 + t2210;
t1823 = pkin(11) * t2741 + t1705;
t1078 = t1785 * t2764 + t1789 * t1823;
t2103 = t1782 * t2206;
t2022 = t1781 * t2103;
t1990 = t2708 * t2171;
t1953 = t1790 * t1990;
t1651 = -t1786 * t2207 - t1953;
t2222 = t2602 * t1651;
t1954 = t1786 * t1990;
t1652 = t1790 * t2207 - t1954;
t2443 = t1652 * t1789;
t2727 = -t2443 / 0.2e1 + (-t2222 / 0.2e1 - t2022 / 0.2e1) * t1785;
t2725 = t1382 ^ 2;
t2724 = t1575 ^ 2;
t2723 = t1698 ^ 2;
t2722 = -pkin(5) / 0.2e1;
t2168 = t1382 * pkin(5) - t1384 * pkin(13);
t1077 = t1785 * t1823 - t1789 * t2764;
t948 = pkin(4) * t2072 + t1077;
t1802 = t2168 + t948;
t2608 = t1575 * pkin(13);
t1927 = t2209 + t2343;
t2170 = t1575 * pkin(4) - t1578 * pkin(12);
t2358 = pkin(10) * t2421;
t949 = -pkin(12) * t2072 + t1078;
t584 = t1788 * t949 + t1784 * (-t1781 * (t1927 - t2358) + t2602 * (-t1782 * pkin(2) - pkin(3) * t2420) + t2170);
t501 = t584 + t2608;
t288 = t1783 * t501 - t1787 * t1802;
t2721 = -t288 / 0.2e1;
t289 = t1783 * t1802 + t1787 * t501;
t2720 = t289 / 0.2e1;
t1353 = -t1781 * t1927 + (pkin(10) * t2424 + t2341 * t2602) * t1782;
t583 = t1784 * t949 - t1788 * (t1353 + t2170);
t500 = -pkin(5) * t1575 + t583;
t2719 = t500 / 0.2e1;
t2101 = t1790 * t2206;
t1577 = t1786 * t1870 + t2101;
t1132 = t1577 * t1785 + t1789 * t2742;
t2489 = t1132 * t1787;
t1133 = t1577 * t1789 - t1785 * t2742;
t832 = t1133 * t1788 + t1784 * t1801;
t2542 = t832 * t1783;
t560 = -t2489 + t2542;
t2718 = -t560 / 0.2e1;
t2490 = t1132 * t1783;
t2540 = t832 * t1787;
t561 = t2490 + t2540;
t2717 = -t561 / 0.2e1;
t2716 = t561 / 0.2e1;
t2715 = -t584 / 0.2e1;
t831 = t1133 * t1784 - t1788 * t1801;
t2714 = -t831 / 0.2e1;
t2713 = t831 / 0.2e1;
t2712 = t832 / 0.2e1;
t2169 = -pkin(4) * t1789 - pkin(12) * t1785;
t2106 = -pkin(3) + t2169;
t2208 = pkin(3) * t2230;
t1704 = pkin(11) * t2422 + t2208;
t1680 = pkin(12) * t2602 + t1704;
t2367 = t1788 * t1680;
t1390 = t2367 + (-t1789 * pkin(13) + t1784 * t2106) * t1781;
t1701 = -pkin(3) * t2228 + pkin(11) * t2425;
t1679 = -pkin(4) * t2602 + t1701;
t2167 = t1698 * pkin(5) - t1700 * pkin(13);
t1851 = t1679 + t2167;
t996 = t1390 * t1783 - t1787 * t1851;
t2711 = -t996 / 0.2e1;
t997 = t1787 * t1390 + t1783 * t1851;
t2710 = t997 / 0.2e1;
t2707 = -qJD(6) / 0.2e1;
t2706 = qJD(6) / 0.2e1;
t1500 = -t1651 * t1781 + t2103 * t2602;
t1464 = t1500 * t1788;
t1309 = t2443 + (t2022 + t2222) * t1785;
t2465 = t1309 * t1784;
t1003 = -t1464 + t2465;
t2705 = -t1003 / 0.2e1;
t1808 = t1815 * t1789;
t1277 = -t1577 * t2230 - t1808;
t2473 = t1277 * t1784;
t1019 = -t1577 * t2423 + t2473;
t2704 = -t1019 / 0.2e1;
t2450 = t1577 * t1784;
t2320 = t1781 * t2450;
t2472 = t1277 * t1788;
t1020 = t2320 + t2472;
t2703 = -t1020 / 0.2e1;
t2702 = -t1132 / 0.2e1;
t2701 = t1133 / 0.2e1;
t2700 = -t1139 / 0.2e1;
t2699 = t1139 / 0.2e1;
t2698 = -t1141 / 0.2e1;
t2697 = t1141 / 0.2e1;
t2613 = pkin(13) * t1698;
t1535 = pkin(5) * t1700 + t2613;
t2382 = t1787 * t1535;
t1989 = t2106 * t1781;
t1432 = t1680 * t1784 - t1788 * t1989;
t2416 = t1783 * t1432;
t1156 = t2382 + t2416;
t2696 = -t1156 / 0.2e1;
t2695 = t1156 / 0.2e1;
t2386 = t1787 * t1432;
t2412 = t1783 * t1535;
t1157 = -t2386 + t2412;
t2694 = t1157 / 0.2e1;
t2605 = t1788 * pkin(13);
t2607 = t1784 * pkin(5);
t1752 = -t2605 + t2607;
t1545 = t2208 + (pkin(11) + t1752) * t2422;
t2381 = t1787 * t1545;
t1703 = (pkin(4) * t1785 - pkin(12) * t1789) * t1781;
t1686 = t1784 * t1703;
t1687 = t1788 * t1701;
t1509 = -t1687 + t1686;
t1440 = pkin(13) * t2425 + t1509;
t2415 = t1783 * t1440;
t1169 = t2381 - t2415;
t2693 = -t1169 / 0.2e1;
t2385 = t1787 * t1440;
t2411 = t1783 * t1545;
t1170 = t2385 + t2411;
t2692 = -t1170 / 0.2e1;
t2691 = t1170 / 0.2e1;
t1513 = t1577 * t2228;
t1809 = t1815 * t1785;
t1276 = -t1809 + t1513;
t2690 = t1276 / 0.2e1;
t2689 = t1277 / 0.2e1;
t1298 = t1788 * t1575;
t1553 = t1787 * t1578;
t1286 = -t1298 * t1783 - t1553;
t2688 = -t1286 / 0.2e1;
t2687 = t1286 / 0.2e1;
t2409 = t1783 * t1578;
t1287 = -t1298 * t1787 + t2409;
t2686 = -t1287 / 0.2e1;
t2685 = t1287 / 0.2e1;
t1621 = t1787 * t1650;
t2368 = t1788 * t1653;
t1510 = t1784 * t2317 + t2368;
t2413 = t1783 * t1510;
t1316 = -t1621 + t2413;
t2684 = -t1316 / 0.2e1;
t2683 = t1316 / 0.2e1;
t2383 = t1787 * t1510;
t2407 = t1783 * t1650;
t1317 = t2383 + t2407;
t2682 = -t1317 / 0.2e1;
t2681 = t1317 / 0.2e1;
t2680 = -t1382 / 0.2e1;
t2679 = t1382 / 0.2e1;
t2678 = -t1384 / 0.2e1;
t2677 = t1384 / 0.2e1;
t1389 = pkin(5) * t2422 + t1432;
t2676 = -t1389 / 0.2e1;
t2675 = t1389 / 0.2e1;
t2674 = t1432 / 0.2e1;
t1433 = t1784 * t1989 + t2367;
t2673 = -t1433 / 0.2e1;
t2672 = t1433 / 0.2e1;
t2365 = t1788 * t1703;
t2394 = t1784 * t1701;
t1507 = t2365 + t2394;
t1439 = -pkin(5) * t2425 - t1507;
t2671 = -t1439 / 0.2e1;
t2670 = -t1507 / 0.2e1;
t2669 = t1507 / 0.2e1;
t2668 = -t1508 / 0.2e1;
t2667 = t1508 / 0.2e1;
t2666 = t1509 / 0.2e1;
t2665 = -t1510 / 0.2e1;
t2664 = t1510 / 0.2e1;
t2663 = t1553 / 0.2e1;
t2662 = -t1575 / 0.2e1;
t2661 = t1575 / 0.2e1;
t2660 = -t1578 / 0.2e1;
t2659 = t1578 / 0.2e1;
t2657 = t1585 / 0.2e1;
t2655 = t1587 / 0.2e1;
t2654 = -t1650 / 0.2e1;
t2653 = t1650 / 0.2e1;
t1755 = t1787 * t2425;
t1659 = t1788 * t2310 - t1755;
t2652 = -t1659 / 0.2e1;
t2651 = t1659 / 0.2e1;
t2364 = t1788 * t1789;
t2402 = t1783 * t1785;
t1660 = (t1787 * t2364 + t2402) * t1781;
t2650 = -t1660 / 0.2e1;
t2649 = t1660 / 0.2e1;
t2166 = -pkin(5) * t1788 - pkin(13) * t1784;
t2105 = -pkin(4) + t2166;
t2400 = t1783 * t1788;
t2360 = pkin(12) * t2400;
t1661 = -t1787 * t2105 + t2360;
t2648 = -t1661 / 0.2e1;
t2647 = t1661 / 0.2e1;
t2375 = t1787 * t1788;
t2357 = pkin(12) * t2375;
t1662 = t1783 * t2105 + t2357;
t2646 = -t1662 / 0.2e1;
t2645 = t1662 / 0.2e1;
t1769 = pkin(12) * t2403;
t2377 = t1787 * t1752;
t1672 = t1769 + t2377;
t2644 = -t1672 / 0.2e1;
t2643 = t1672 / 0.2e1;
t2393 = t1784 * t1787;
t2359 = pkin(12) * t2393;
t2404 = t1783 * t1752;
t1673 = -t2359 + t2404;
t2642 = t1673 / 0.2e1;
t2641 = t1679 / 0.2e1;
t2640 = -t1698 / 0.2e1;
t2638 = -t1700 / 0.2e1;
t2636 = -t1701 / 0.2e1;
t2635 = -t1704 / 0.2e1;
t2634 = t1704 / 0.2e1;
t2633 = -t1731 / 0.2e1;
t2632 = t1755 / 0.2e1;
t2631 = -t1783 / 0.2e1;
t2630 = t1783 / 0.2e1;
t2628 = t1784 / 0.2e1;
t2626 = t1785 / 0.2e1;
t2625 = -t1787 / 0.2e1;
t2624 = t1787 / 0.2e1;
t2623 = -t1788 / 0.2e1;
t2621 = -t1789 / 0.2e1;
t1775 = t1782 ^ 2;
t2619 = pkin(2) * t1775;
t2618 = pkin(3) * t1781;
t2617 = pkin(12) * t1132;
t2616 = pkin(12) * t1575;
t2615 = pkin(12) * t1784;
t2614 = pkin(13) * t1382;
t2612 = t1003 * pkin(5);
t2611 = t1019 * pkin(5);
t2610 = t1276 * pkin(4);
t1592 = t1789 * t2222;
t1706 = t1789 * t2022;
t2444 = t1652 * t1785;
t1308 = -t1592 - t1706 + t2444;
t2609 = t1308 * pkin(4);
t2606 = t1788 * pkin(12);
t2014 = t1139 * t2651 + t1286 * t2657;
t2258 = t2403 / 0.2e1;
t2198 = t1316 * t2258;
t486 = t2198 - t2014;
t2600 = qJD(2) * t486;
t2012 = t1141 * t2649 + t1287 * t2655;
t2250 = t2393 / 0.2e1;
t2197 = t1317 * t2250;
t487 = t2197 - t2012;
t2599 = qJD(2) * t487;
t2005 = t1139 * t2640 + t1382 * t2658;
t1932 = t2005 * t1783;
t2463 = t1316 * t1787;
t522 = t2463 / 0.2e1 + t1932;
t2598 = qJD(2) * t522;
t2004 = t1141 * t2639 + t1382 * t2655;
t1930 = t2004 * t1787;
t2462 = t1317 * t1783;
t2289 = -t2462 / 0.2e1;
t524 = t2289 - t1930;
t2597 = qJD(2) * t524;
t2157 = t1621 / 0.2e1 - t2413 / 0.2e1;
t547 = t2004 + t2157;
t2596 = qJD(2) * t547;
t1996 = t2407 / 0.2e1 + t2383 / 0.2e1;
t548 = t1996 - t2005;
t2595 = qJD(2) * t548;
t554 = t1139 * t1384 - t1783 * t2725;
t2594 = qJD(2) * t554;
t555 = t1141 * t1384 - t1787 * t2725;
t2593 = qJD(2) * t555;
t1964 = t1384 * t2266 + t1575 * t2637;
t1907 = t1964 * t1788;
t2453 = t1510 * t1784;
t840 = -t2453 / 0.2e1 - t1907;
t2591 = qJD(2) * t840;
t844 = t1382 * t1578 - t1784 * t2724;
t2590 = qJD(2) * t844;
t845 = t1384 * t1578 - t1788 * t2724;
t2589 = qJD(2) * t845;
t852 = t1964 - t1484;
t2588 = qJD(2) * t852;
t2264 = t2421 / 0.2e1;
t2187 = t1784 * t2264;
t2240 = t2368 / 0.2e1;
t853 = t2240 + t2272 + (t1382 * t2621 + t2187) * t1781;
t2587 = qJD(2) * t853;
t970 = t1783 * t1382;
t2586 = qJD(5) * t970;
t2585 = qJD(5) * t974;
t2584 = t1003 * t831;
t2583 = t1019 * t831;
t2475 = t1276 * t1787;
t2497 = t1020 * t1783;
t739 = t2475 - t2497;
t2477 = t1276 * t1783;
t2496 = t1020 * t1787;
t740 = t2477 + t2496;
t110 = -t560 * t739 + t561 * t740 + t2583;
t2582 = t110 * qJD(1);
t2487 = t1133 * t1787;
t697 = t1132 * t2400 + t2487;
t2488 = t1133 * t1783;
t698 = -t1132 * t2375 + t2488;
t707 = t1132 * t1784;
t111 = -t560 * t697 + t561 * t698 - t707 * t831;
t2581 = t111 * qJD(1);
t2467 = t1308 * t1787;
t2455 = t1500 * t1784;
t2464 = t1309 * t1788;
t1004 = t2455 + t2464;
t2501 = t1004 * t1783;
t750 = t2467 - t2501;
t2469 = t1308 * t1783;
t2500 = t1004 * t1787;
t751 = t2469 + t2500;
t112 = -t560 * t750 + t561 * t751 + t2584;
t2580 = t112 * qJD(1);
t115 = (-t1783 * t560 - t1787 * t561 + t832) * t831;
t2579 = t115 * qJD(1);
t2578 = t1783 * t583;
t1620 = t1790 * t2085 - t2210;
t1688 = (-pkin(11) * t1781 * t1790 + pkin(3) * t1786) * t1782;
t1405 = -t1620 * t1781 + t2602 * t1688;
t1123 = pkin(4) * t1650 - pkin(12) * t1653 + t1405;
t1079 = t1784 * t1123;
t2223 = t2602 * t1620;
t1574 = t1785 * t2223;
t1591 = t1789 * t1619;
t1629 = t1688 * t2425;
t1182 = t1591 + t1574 + t1629;
t1131 = pkin(12) * t2317 + t1182;
t1111 = t1788 * t1131;
t694 = t1111 + t1079;
t623 = pkin(13) * t1650 + t694;
t2577 = t1783 * t623;
t1054 = t1788 * t1077;
t1318 = pkin(4) * t1578 + t2616;
t1305 = t1784 * t1318;
t794 = -t1054 + t1305;
t669 = pkin(13) * t1578 + t794;
t2576 = t1783 * t669;
t1590 = t1785 * t1619;
t2437 = t1688 * t1789;
t1130 = -t1789 * t2223 + t1590 + (-pkin(4) * t2421 - t2437) * t1781;
t795 = t1508 * pkin(5) - t1510 * pkin(13) + t1130;
t2575 = t1783 * t795;
t1295 = t1784 * t1575;
t800 = -pkin(5) * t1295 + pkin(13) * t1298 + t1078;
t2574 = t1783 * t800;
t2573 = t1787 * t583;
t2572 = t1787 * t623;
t2571 = t1787 * t669;
t2570 = t1787 * t795;
t2569 = t1787 * t800;
t2494 = t1132 * t1276;
t196 = t1020 * t832 + t2494 + t2583;
t2568 = t196 * qJD(1);
t2493 = t1132 * t1308;
t197 = t1004 * t832 + t2493 + t2584;
t2567 = t197 * qJD(1);
t2543 = t831 * t1784;
t198 = (-t1788 * t832 + t1133 - t2543) * t1132;
t2566 = t198 * qJD(1);
t1800 = t1781 * t1801;
t328 = t1133 * t1277 + t1577 * t1800 + t2494;
t2565 = t328 * qJD(1);
t329 = t1133 * t1309 + t1500 * t1801 + t2493;
t2564 = t329 * qJD(1);
t425 = -t1139 * t1287 - t1141 * t1286;
t2563 = t425 * qJD(2);
t440 = -t1139 * t1317 - t1141 * t1316;
t2562 = t440 * qJD(2);
t2092 = t2484 + t2486;
t466 = t2092 * t1382;
t2561 = t466 * qJD(2);
t2560 = t500 * t1783;
t2559 = t500 * t1787;
t2558 = t560 * t1788;
t2557 = t561 * t1788;
t574 = t1139 * t1295 - t1286 * t1382;
t2556 = t574 * qJD(2);
t575 = -t1141 * t1295 + t1287 * t1382;
t2555 = t575 * qJD(2);
t576 = -t1139 * t1508 - t1316 * t1382;
t2554 = t576 * qJD(2);
t577 = t1141 * t1508 + t1317 * t1382;
t2553 = t577 * qJD(2);
t2373 = t1788 * t1123;
t2397 = t1784 * t1131;
t693 = t2373 - t2397;
t622 = -pkin(5) * t1650 - t693;
t2552 = t622 * t1787;
t2372 = t1788 * t1318;
t2398 = t1784 * t1077;
t793 = t2372 + t2398;
t668 = -pkin(5) * t1578 - t793;
t2551 = t668 * t1783;
t2550 = t668 * t1787;
t2549 = t739 * t1788;
t2548 = t740 * t1788;
t2547 = t750 * t1788;
t2546 = t751 * t1788;
t759 = -t1382 * t1510 - t1384 * t1508;
t2545 = t759 * qJD(2);
t2371 = t1788 * t1382;
t2460 = t1384 * t1784;
t2090 = t2371 + t2460;
t774 = t2090 * t1575;
t2544 = t774 * qJD(2);
t2541 = t832 * t1784;
t864 = -t1382 * t1650 - t1508 * t1575;
t2538 = t864 * qJD(2);
t865 = t1384 * t1650 + t1510 * t1575;
t2537 = t865 * qJD(2);
t1849 = t1871 * t1782;
t897 = t1577 * t1652 - t1651 * t1815 + t1849 * t2206;
t2536 = t897 * qJD(1);
t2535 = t948 * t1784;
t2534 = t948 * t1788;
t2533 = qJD(2) * t1139;
t2531 = qJD(2) * t1295;
t2530 = qJD(2) * t1298;
t2529 = qJD(2) * t1384;
t2528 = qJD(2) * t1484;
t2527 = qJD(2) * t1578;
t1645 = (t2390 / 0.2e1 + t2177 / 0.2e1) * t1782;
t2526 = qJD(2) * t1645;
t2525 = qJD(3) * t1585;
t2523 = qJD(3) * t1700;
t2522 = qJD(3) * t1781;
t2521 = qJD(4) * t1132;
t2520 = qJD(4) * t1295;
t2519 = qJD(4) * t1298;
t1779 = t1788 ^ 2;
t1762 = t1779 - t1777;
t2518 = qJD(4) * t1762;
t1469 = t1783 * t1698;
t2517 = qJD(5) * t1469;
t2516 = qJD(5) * t1473;
t2515 = qJD(5) * t1575;
t2514 = qJD(5) * t1645;
t1761 = t1778 - t1776;
t2513 = qJD(5) * t1761;
t2512 = qJD(5) * t1783;
t2511 = qJD(5) * t1784;
t2510 = qJD(5) * t1787;
t2509 = qJD(5) * t1788;
t2508 = qJD(6) * t1382;
t2507 = qJD(6) * t1484;
t2506 = qJD(6) * t1698;
t2505 = qJD(6) * t1783;
t2504 = qJD(6) * t1787;
t2503 = t1003 * t1783;
t2502 = t1003 * t1787;
t2499 = t1019 * t1783;
t2498 = t1019 * t1787;
t1040 = -t1575 * t1653 - t1578 * t1650;
t2495 = t1040 * qJD(2);
t2492 = t1132 * t1698;
t2491 = t1132 * t1700;
t1946 = t2072 * t1781;
t1914 = -t1946 / 0.2e1;
t2344 = t2602 / 0.2e1;
t1833 = t1578 * t2344 + t1785 * t1914;
t2175 = -t2228 / 0.2e1;
t2361 = t2175 * t2421 - t1782 * t2390 / 0.2e1;
t1189 = t1833 + t2361;
t2481 = t1189 * qJD(2);
t2224 = t2602 * t1575;
t2263 = t2420 / 0.2e1;
t1192 = t2633 + t2224 / 0.2e1 + (t2263 + t1946 / 0.2e1) * t1789;
t2480 = t1192 * qJD(2);
t1201 = -t1575 * t2317 + t1650 * t2072;
t2479 = t1201 * qJD(2);
t1202 = t1578 * t2317 - t1653 * t2072;
t2478 = t1202 * qJD(2);
t2476 = t1276 * t1784;
t2474 = t1276 * t1788;
t2471 = t1286 * t1787;
t2470 = t1287 * t1783;
t2468 = t1308 * t1784;
t2466 = t1308 * t1788;
t2459 = t1389 * t1783;
t2458 = t1389 * t1787;
t2457 = t1439 * t1783;
t2456 = t1439 * t1787;
t2451 = t1575 * qJD(4);
t2442 = t1659 * t1787;
t2441 = t1660 * t1783;
t2440 = t1661 * t1788;
t2439 = t1662 * t1788;
t2438 = t1679 * t1788;
t2435 = t1700 * t1784;
t2432 = t1707 * qJD(6);
t1713 = (-t1786 ^ 2 + t1790 ^ 2) * t1775;
t2431 = t1713 * qJD(2);
t2430 = t1774 * t1789 ^ 2;
t2429 = t1774 * t1785;
t2427 = t1775 * t1790;
t2426 = t1777 * t1783;
t1016 = pkin(5) * t1384 + t2614;
t2419 = t1783 * t1016;
t2414 = t1783 * t1508;
t2406 = t1783 * t1661;
t2399 = t1784 * qJD(4);
t2396 = t1784 * t1650;
t2392 = t1784 * t1788;
t2391 = t1784 * t1789;
t2388 = t1787 * t1016;
t2384 = t1787 * t1508;
t2379 = t1787 * t1662;
t2369 = t1788 * t1650;
t2366 = t1788 * t1698;
t2267 = t2423 / 0.2e1;
t1689 = t1785 * t2267 + t2231 / 0.2e1;
t2265 = t2422 / 0.2e1;
t2193 = t1784 * t2265;
t2362 = qJD(4) * t2193 + t1689 * qJD(5);
t2356 = pkin(4) * t2678;
t2355 = pkin(4) * t2638;
t2354 = pkin(5) * t2699;
t2353 = pkin(5) * t2698;
t2352 = pkin(5) * t2657;
t2351 = pkin(5) * t2656;
t2350 = t2615 / 0.2e1;
t2349 = pkin(13) * t2631;
t2348 = pkin(13) * t2624;
t2347 = t1132 * pkin(5) / 0.2e1;
t2346 = t2606 / 0.2e1;
t2345 = -t2602 / 0.2e1;
t2342 = t2719 - t583 / 0.2e1;
t2340 = -t2571 / 0.2e1;
t2339 = t622 * t2630;
t2337 = t1139 * t2461;
t2336 = t1141 * t2461;
t2333 = t1384 * t2452;
t2329 = t1585 * t2436;
t2328 = t1587 * t2436;
t2326 = t1783 * t2399;
t2325 = qJD(4) * t2393;
t2324 = qJD(5) * t2422;
t2323 = qJD(6) * t2400;
t2322 = qJD(6) * t2375;
t2321 = t1382 * t2452;
t2318 = t1786 * t2427;
t2315 = t1781 * t2391;
t2314 = t1781 * t2364;
t2311 = qJD(6) * t2401;
t2309 = t1783 * t2393;
t2308 = t1783 * t2366;
t2307 = qJD(5) * t2392;
t2305 = t1787 * t2371;
t2304 = t1787 * t2366;
t2302 = -t2503 / 0.2e1;
t2301 = -t2502 / 0.2e1;
t2300 = -t2499 / 0.2e1;
t2299 = -t2498 / 0.2e1;
t2298 = -t707 / 0.2e1;
t2295 = t1141 * t2628;
t2293 = -t2471 / 0.2e1;
t2292 = t2470 / 0.2e1;
t2291 = -t2463 / 0.2e1;
t2290 = t1316 * t2622;
t2288 = t2462 / 0.2e1;
t2287 = t1317 * t2623;
t2285 = -t2460 / 0.2e1;
t2283 = t2453 / 0.2e1;
t2282 = t1577 * t1781 / 0.2e1;
t2279 = t1587 * t2628;
t2276 = -t2442 / 0.2e1;
t2275 = t2441 / 0.2e1;
t2274 = t1679 * t2628;
t2273 = t2438 / 0.2e1;
t2271 = t1776 * t2629;
t2270 = t1778 * t2629;
t2269 = -t2425 / 0.2e1;
t2268 = t2425 / 0.2e1;
t2262 = t970 / 0.2e1;
t2261 = -t2414 / 0.2e1;
t2260 = t1469 / 0.2e1;
t2257 = -t2400 / 0.2e1;
t2256 = t2400 / 0.2e1;
t2255 = t1508 * t2629;
t2254 = -t1295 / 0.2e1;
t2253 = t1295 / 0.2e1;
t2252 = -t2396 / 0.2e1;
t2251 = -t2393 / 0.2e1;
t2248 = -t2385 / 0.2e1;
t2247 = -t2384 / 0.2e1;
t2246 = t2384 / 0.2e1;
t2245 = t2380 / 0.2e1;
t2243 = t2375 / 0.2e1;
t2242 = -t1298 / 0.2e1;
t2241 = -t2369 / 0.2e1;
t2239 = t2366 / 0.2e1;
t2238 = t2364 / 0.2e1;
t2237 = -t1054 / 0.2e1 + t1305 / 0.2e1;
t2236 = -t1079 / 0.2e1 - t1111 / 0.2e1;
t2235 = t2675 - t1432 / 0.2e1;
t2234 = t1686 / 0.2e1 - t1687 / 0.2e1;
t2233 = t1577 * t2603;
t2225 = t2602 * qJD(3);
t2221 = (-t1776 - t1778) * t831;
t2219 = -qJD(5) - t2452;
t2218 = -qJD(6) - t2461;
t2215 = -qJD(6) - t2436;
t2214 = -qJD(6) + t2374;
t2213 = pkin(13) * t2253;
t2212 = t1003 * t2350;
t2211 = t1019 * t2350;
t2205 = t1788 * t2313;
t2204 = t1784 * t1765;
t2203 = t1777 * t2311;
t2202 = qJD(4) * t2319;
t2201 = qJD(3) * t2318;
t2200 = t1784 * t2313;
t2199 = qJD(4) * t2309;
t2196 = -t2317 / 0.2e1;
t2195 = t1781 * t2264;
t2194 = t1784 * t2266;
t2192 = t1781 * t2238;
t2191 = t1783 * t2266;
t2190 = t1783 * t2265;
t2186 = t1787 * t2265;
t2182 = t1781 * t2230;
t2181 = t1781 * t2228;
t2180 = t1782 * t2229;
t2179 = t1782 * t2227;
t2176 = t2230 / 0.2e1;
t2173 = t2614 / 0.2e1 + t1016 / 0.2e1;
t2172 = t2613 / 0.2e1 + t1535 / 0.2e1;
t2165 = t2701 - t2543 / 0.2e1;
t2164 = t2490 / 0.2e1 + t2717;
t2163 = t2489 / 0.2e1 + t560 / 0.2e1;
t354 = t2570 - t2577;
t355 = t2572 + t2575;
t1828 = t1019 * t2719 + t2713 * t622 + t2716 * t355 + t2718 * t354 + t2720 * t740 + t2721 * t739;
t1903 = t1003 * t2675 + t2710 * t751 + t2711 * t750;
t1 = -t1828 + t1903;
t34 = -t288 * t354 + t289 * t355 + t500 * t622;
t2162 = -t1 * qJD(1) + t34 * qJD(2);
t396 = t2388 + t2578;
t397 = t2419 - t2573;
t35 = -t288 * t396 + t289 * t397 + t500 * t584;
t1822 = (t289 * t2625 + t288 * t2631 + t584 / 0.2e1) * t831 + t396 * t2718 + t397 * t2716 + t500 * t2712;
t2046 = t2625 * t751 + t2630 * t750;
t6 = t2612 / 0.2e1 + t2046 * pkin(13) + t1822;
t2161 = t6 * qJD(1) + t35 * qJD(2);
t379 = t2569 - t2576;
t380 = t2571 + t2574;
t36 = -t288 * t379 + t289 * t380 + t500 * t668;
t1831 = t2713 * t668 + t2716 * t380 + t2718 * t379 + t2720 * t698 + t2721 * t697;
t2047 = t2646 * t751 + t2647 * t750;
t4 = (pkin(12) * t2705 + t2702 * t500) * t1784 + t1831 + t2047;
t2160 = t4 * qJD(1) + t36 * qJD(2);
t2159 = 0.2e1 * t2199;
t2158 = t1464 / 0.2e1 - t2465 / 0.2e1;
t2156 = -t1574 / 0.2e1 - t1591 / 0.2e1 - t1629 / 0.2e1;
t45 = -t1139 * t355 - t1141 * t354 - t1316 * t289 + t1317 * t288;
t1857 = t2681 * t560 + t2684 * t561 + t2698 * t739 + t2700 * t740;
t2048 = t2656 * t750 + t2658 * t751;
t65 = -t1857 + t2048;
t2155 = -t65 * qJD(1) + t45 * qJD(2);
t46 = -t1139 * t380 - t1141 * t379 - t1286 * t289 + t1287 * t288;
t1858 = t2685 * t560 + t2688 * t561 + t2698 * t697 + t2700 * t698;
t1944 = (t2625 * t750 + t2631 * t751) * t1784;
t70 = t1944 - t1858;
t2154 = -t70 * qJD(1) + t46 * qJD(2);
t48 = -t1139 * t397 - t1141 * t396 + (t289 * t1783 - t288 * t1787) * t1382;
t2045 = t2679 * t561 + t2698 * t831;
t2064 = t2680 * t560 + t2699 * t831;
t77 = (-t751 / 0.2e1 + t2064) * t1787 + (t750 / 0.2e1 + t2045) * t1783;
t2153 = t77 * qJD(1) + t48 * qJD(2);
t63 = t1139 * t622 + t1316 * t500 + t1382 * t354 - t1508 * t288;
t1855 = t1019 * t2699 + t2668 * t560 + t2679 * t739 + t2683 * t831;
t2042 = t1003 * t2657 + t2639 * t750;
t95 = -t1855 + t2042;
t2152 = -t95 * qJD(1) + t63 * qJD(2);
t64 = t1141 * t622 + t1317 * t500 - t1382 * t355 - t1508 * t289;
t1854 = t1019 * t2697 + t2668 * t561 + t2680 * t740 + t2681 * t831;
t2041 = t1003 * t2655 + t2640 * t751;
t96 = -t1854 + t2041;
t2151 = -t96 * qJD(1) + t64 * qJD(2);
t67 = t1139 * t668 + t1286 * t500 + t1295 * t288 + t1382 * t379;
t2031 = t1132 * t2700 + t2661 * t560;
t2055 = t2679 * t697 + t2687 * t831;
t99 = t2547 / 0.2e1 + (t2302 + t2031) * t1784 + t2055;
t2150 = t99 * qJD(1) + t67 * qJD(2);
t2149 = -qJD(5) + t2313;
t2148 = pkin(13) * t2194;
t2147 = qJD(2) * t2603 + qJD(3);
t2146 = t2225 + qJD(4);
t2030 = t1132 * t2698 + t2661 * t561;
t2053 = t2680 * t698 + t2685 * t831;
t102 = -t2546 / 0.2e1 + (t2301 + t2030) * t1784 + t2053;
t68 = t1141 * t668 + t1287 * t500 + t1295 * t289 - t1382 * t380;
t2145 = t102 * qJD(1) + t68 * qJD(2);
t124 = t1130 * t948 - t583 * t693 + t584 * t694;
t1824 = t583 * t2704 + t584 * t2703 + t1130 * t2702 - t1276 * t948 / 0.2e1 + t693 * t2713 - t832 * t694 / 0.2e1;
t1897 = t1003 * t2674 + t1004 * t2672 + t1308 * t2641;
t37 = t1824 + t1897;
t2144 = -t37 * qJD(1) + t124 * qJD(2);
t2063 = t2678 * t560 + t2699 * t832;
t125 = t2502 / 0.2e1 + t2063;
t61 = t1139 * t584 - t1384 * t288 + (t396 - t2560) * t1382;
t2143 = t125 * qJD(1) + t61 * qJD(2);
t2058 = t2678 * t561 + t2697 * t832;
t128 = t2302 + t2058;
t62 = t1141 * t584 - t1384 * t289 + (-t397 - t2559) * t1382;
t2142 = t128 * qJD(1) + t62 * qJD(2);
t134 = t1078 * t948 - t583 * t793 + t584 * t794;
t1818 = (t584 * t2623 + t583 * t2629 + t1078 / 0.2e1) * t1132 + t948 * t2701 + t793 * t2714 + t794 * t2712;
t2018 = t1003 * t2629 + t1004 * t2623;
t54 = t2609 / 0.2e1 + t2018 * pkin(12) + t1818;
t2141 = t54 * qJD(1) + t134 * qJD(2);
t1181 = -t1590 + (t1688 * t1781 + t2223) * t1789;
t1793 = t1077 * t2690 + t1078 * t2689 + t1181 * t2702 + t1182 * t2701 + t1353 * t2282 + t1405 * t2756;
t1878 = t1308 * t1701 / 0.2e1 + t1309 * t2634 - t1500 * t2618 / 0.2e1;
t117 = -t1793 + t1878;
t302 = -t1077 * t1181 + t1078 * t1182 + t1353 * t1405;
t2140 = -t117 * qJD(1) + t302 * qJD(2);
t133 = -t1382 * t694 - t1384 * t693 - t1508 * t584 + t1510 * t583;
t1848 = t1019 * t2678 + t1020 * t2679 + t2665 * t831 + t2667 * t832;
t2021 = t1003 * t2637 + t1004 * t2640;
t140 = t1848 + t2021;
t2139 = -t140 * qJD(1) + t133 * qJD(2);
t138 = -t1382 * t794 - t1384 * t793 + (t584 * t1784 - t1788 * t583) * t1575;
t2029 = t1132 * t2678 + t2661 * t832;
t2040 = t1132 * t2679 + t2662 * t831;
t151 = (-t1004 / 0.2e1 + t2040) * t1788 + (t2705 + t2029) * t1784;
t2138 = t151 * qJD(1) + t138 * qJD(2);
t142 = -t1139 * t500 + t1382 * t288;
t2019 = -t2500 / 0.2e1 - t2469 / 0.2e1;
t185 = t2019 + t2064;
t2137 = qJD(1) * t185 - qJD(2) * t142;
t143 = t1141 * t500 - t1382 * t289;
t2020 = -t2501 / 0.2e1 + t2467 / 0.2e1;
t184 = t2020 + t2045;
t2136 = qJD(1) * t184 - qJD(2) * t143;
t168 = t1130 * t1382 + t1508 * t948 + t1575 * t693 - t1650 * t583;
t1845 = t1019 * t2662 + t1132 * t2667 + t1276 * t2679 + t2654 * t831;
t1968 = t1003 * t2265 + t1308 * t2639;
t174 = -t1845 + t1968;
t2135 = -t174 * qJD(1) + t168 * qJD(2);
t169 = t1130 * t1384 + t1510 * t948 - t1575 * t694 - t1650 * t584;
t1844 = t1020 * t2662 + t1132 * t2664 + t1276 * t2677 + t2654 * t832;
t1967 = t1004 * t2265 + t1308 * t2637;
t175 = -t1844 + t1967;
t2134 = -t175 * qJD(1) + t169 * qJD(2);
t170 = t1078 * t1382 - t1578 * t583 + (t793 - t2535) * t1575;
t2039 = t1133 * t2679 + t2660 * t831;
t203 = t2466 / 0.2e1 + t2039;
t2133 = t203 * qJD(1) + t170 * qJD(2);
t171 = t1078 * t1384 - t1578 * t584 + (-t794 - t2534) * t1575;
t2038 = t1133 * t2677 + t2660 * t832;
t206 = -t2468 / 0.2e1 + t2038;
t2132 = t206 * qJD(1) + t171 * qJD(2);
t1839 = t1133 * t2653 + t1276 * t2660 + t1277 * t2661 + t1653 * t2702;
t1934 = (t1308 * t2626 + t1309 * t2620) * t1781;
t232 = t1934 + t1839;
t303 = t1077 * t1653 - t1078 * t1650 - t1181 * t1578 - t1182 * t1575;
t2131 = -t232 * qJD(1) + t303 * qJD(2);
t307 = -t1382 * t948 + t1575 * t583;
t2008 = -t2464 / 0.2e1 - t2455 / 0.2e1;
t314 = t2008 + t2040;
t2130 = qJD(1) * t314 - qJD(2) * t307;
t308 = t1384 * t948 - t1575 * t584;
t313 = t2029 + t2158;
t2129 = qJD(1) * t313 - qJD(2) * t308;
t1792 = t1132 * t2196 + t1575 * t2282 + t1801 * t2653 + t2072 * t2690;
t1916 = t1308 * t2345 + t1500 * t2266;
t309 = t1792 - t1916;
t386 = -t1077 * t2317 - t1181 * t2072 + t1353 * t1650 + t1405 * t1575;
t2128 = t309 * qJD(1) + t386 * qJD(2);
t1791 = t1133 * t2196 + t1578 * t2282 + t1653 * t2756 + t2072 * t2689;
t1915 = t1309 * t2344 + t1500 * t2269;
t312 = t1791 + t1915;
t387 = -t1078 * t2317 + t1182 * t2072 + t1353 * t1653 + t1405 * t1578;
t2127 = t312 * qJD(1) + t387 * qJD(2);
t1794 = -t1133 * t2072 / 0.2e1 + t1801 * t2660;
t1993 = t1592 / 0.2e1 + t1706 / 0.2e1 - t2444 / 0.2e1;
t525 = t1794 + t1993;
t654 = t1078 * t2072 + t1353 * t1578;
t2126 = qJD(1) * t525 - qJD(2) * t654;
t1795 = t1801 * t2662 + t2072 * t2702;
t526 = -t1795 + t2727;
t653 = -t1077 * t2072 - t1353 * t1575;
t2125 = qJD(1) * t526 - qJD(2) * t653;
t1326 = t1382 * t2309;
t333 = t1326 + (-t2485 / 0.2e1 + t2686) * t1787 + (-t2482 / 0.2e1 + t2687) * t1783;
t1622 = t1698 * t2309;
t863 = t1622 + (-t2448 / 0.2e1 + t2650) * t1787 + (-t2445 / 0.2e1 + t2651) * t1783;
t2124 = t333 * qJD(2) + t863 * qJD(3);
t2123 = -t1783 * t396 + t1787 * t397;
t2122 = -t1784 * t793 + t1788 * t794;
t1070 = -t1585 * t1660 - t1587 * t1659;
t1838 = t1139 * t2650 + t1141 * t2652 + t1286 * t2656 + t1287 * t2658;
t1933 = (t2291 + t2289) * t1784;
t235 = t1933 - t1838;
t2121 = -t235 * qJD(2) + t1070 * qJD(3);
t2088 = t2447 + t2449;
t1124 = t2088 * t1698;
t266 = (t2682 - t2005) * t1787 + (t2683 + t2004) * t1783;
t2120 = t266 * qJD(2) + t1124 * qJD(3);
t1922 = t1585 * t2256 + t1698 * t2271;
t1184 = t2442 / 0.2e1 + t1922;
t1924 = t1139 * t2256 + t1382 * t2271;
t596 = t2471 / 0.2e1 + t1924;
t2119 = qJD(2) * t596 + qJD(3) * t1184;
t1921 = t1587 * t2243 + t1698 * t2270;
t1186 = -t2441 / 0.2e1 + t1921;
t1923 = t1141 * t2243 + t1382 * t2270;
t598 = -t2470 / 0.2e1 + t1923;
t2118 = qJD(2) * t598 + qJD(3) * t1186;
t1197 = t1585 * t1700 - t1783 * t2723;
t1885 = t1139 * t2638 + t1382 * t1469 + t1384 * t2658;
t376 = t2247 + t1885;
t2117 = -qJD(2) * t376 + qJD(3) * t1197;
t1198 = t1587 * t1700 - t1787 * t2723;
t1888 = t1141 * t2637 - t1382 * t1473 + t1384 * t2655;
t378 = t2261 + t1888;
t2116 = -qJD(2) * t378 - qJD(3) * t1198;
t1213 = t2632 + t1698 * t2250 + (t2191 + t2656) * t1788;
t606 = t2663 + t1382 * t2250 + (t2410 / 0.2e1 + t2698) * t1788;
t2115 = -qJD(2) * t606 - qJD(3) * t1213;
t1906 = (t1787 * t2238 + t2402 / 0.2e1) * t1781;
t1214 = t1906 - t1965;
t605 = (t2699 + t2245) * t1788 + (t2286 + t2660) * t1783;
t2114 = -qJD(2) * t605 + qJD(3) * t1214;
t1239 = -t1585 * t2315 - t1659 * t1698;
t2010 = t1286 * t2639 + t1382 * t2651;
t320 = t2290 + (t1139 * t2265 + t1575 * t2658 + t2261) * t1784 + t2010;
t2113 = -t320 * qJD(2) + t1239 * qJD(3);
t1240 = t1587 * t2315 + t1660 * t1698;
t2009 = t1287 * t2640 + t1382 * t2650;
t321 = t2287 + (t1141 * t2266 + t1575 * t2655 + t2246) * t1784 + t2009;
t2112 = -t321 * qJD(2) + t1240 * qJD(3);
t1360 = -t2366 - t2435;
t1412 = t1360 * t2422;
t456 = (t2665 + t1963) * t1788 + (t2667 + t1964) * t1784;
t2111 = t456 * qJD(2) + t1412 * qJD(3);
t2110 = -qJD(2) * t970 - qJD(3) * t1469;
t2109 = qJD(2) * t974 + qJD(3) * t1473;
t1567 = -t1698 * t2425 + t1784 * t2430;
t1860 = (t1382 * t2627 - t1575 * t2391) * t1781 + t1578 * t2640;
t637 = t2241 + t1860;
t2108 = qJD(2) * t637 + qJD(3) * t1567;
t1568 = -t1700 * t2425 + t1788 * t2430;
t1859 = (t1384 * t2626 + t1575 * t2364) * t1781 + t1578 * t2637;
t639 = t2252 + t1859;
t2107 = qJD(2) * t639 - qJD(3) * t1568;
t2104 = t2214 * t1784;
t2100 = -t2207 / 0.2e1;
t1917 = -t1953 / 0.2e1;
t1190 = t1917 + t2233 / 0.2e1 + (t2100 - t1849 / 0.2e1) * t1786;
t1599 = t1705 * t2603 + t1786 * t2619;
t2099 = qJD(1) * t1190 + qJD(2) * t1599;
t1836 = t1849 / 0.2e1;
t1799 = t1815 * t2603 / 0.2e1 + t1790 * t1836;
t1830 = t1790 * t2100 + t1954 / 0.2e1;
t1191 = -t1799 + t1830;
t1702 = -t2209 + t2358;
t1600 = pkin(2) * t2427 - t1702 * t2603;
t2098 = qJD(1) * t1191 + qJD(2) * t1600;
t1015 = t1575 * t2422 + t1578 * t2425;
t1134 = -t1578 ^ 2 + t2724;
t2097 = qJD(2) * t1134 - qJD(3) * t1015;
t1712 = t1774 * t1785 ^ 2 - t2430;
t2096 = qJD(2) * t1015 + qJD(3) * t1712;
t2095 = t2374 - t2461;
t2094 = -t2374 + t2436;
t2093 = t2399 + t2523;
t2091 = -t1156 * t1783 + t1157 * t1787;
t2089 = -t1507 * t1784 + t1509 * t1788;
t2087 = -t1672 * t1783 + t1673 * t1787;
t2086 = t2605 / 0.2e1 - t2607 / 0.2e1;
t2084 = pkin(5) * t2688 - t2550 / 0.2e1;
t2083 = pkin(5) * t2686 + t2551 / 0.2e1;
t2082 = pkin(5) * t2684 - t2552 / 0.2e1;
t2081 = pkin(5) * t2682 + t2339;
t2080 = pkin(12) * t2698 - t2559 / 0.2e1;
t2079 = pkin(12) * t2683 + t2339;
t2078 = pkin(12) * t2681 + t2552 / 0.2e1;
t2077 = pkin(3) * t2660 + t1353 * t2626;
t2076 = pkin(5) * t2652 - t2456 / 0.2e1;
t2075 = pkin(5) * t2650 + t2457 / 0.2e1;
t2074 = pkin(12) * t2656 - t2458 / 0.2e1;
t2073 = t1781 * t2169;
t2071 = -t2577 / 0.2e1 + t2570 / 0.2e1;
t2070 = -t2576 / 0.2e1 + t2569 / 0.2e1;
t2069 = -t2575 / 0.2e1 - t2572 / 0.2e1;
t2068 = t2639 * t288 + t2679 * t996;
t2067 = t2640 * t289 + t2680 * t997;
t2066 = t2624 * t355 + t2631 * t354;
t2065 = t2624 * t380 + t2631 * t379;
t2062 = t1673 * t2717 + t2643 * t560;
t2061 = t2640 * t560 + t2657 * t831;
t2060 = t2638 * t560 + t2657 * t832;
t2059 = t2624 * t560 + t2631 * t561;
t2057 = t2638 * t561 + t2655 * t832;
t2056 = t2622 * t694 + t2629 * t693;
t2054 = t2639 * t697 + t2651 * t831;
t2052 = t2640 * t698 + t2649 * t831;
t2051 = t2624 * t698 + t2631 * t697;
t2050 = t2646 * t740 + t2647 * t739;
t2049 = t2625 * t740 + t2630 * t739;
t2044 = t2639 * t561 + t2656 * t831;
t2043 = t2541 / 0.2e1 + t831 * t2623;
t2037 = t1382 * t2647 + t2623 * t288;
t2036 = t1508 * t2648 + t2623 * t354;
t2035 = t1661 * t2639 + t2623 * t996;
t2034 = t1382 * t2645 + t2623 * t289;
t2033 = t1508 * t2646 + t2622 * t355;
t2032 = t1662 * t2639 + t2623 * t997;
t2017 = -t2497 / 0.2e1 + t2475 / 0.2e1;
t2016 = -t2496 / 0.2e1 - t2477 / 0.2e1;
t2015 = t1019 * t2629 + t1020 * t2623;
t2011 = t1169 * t2631 + t1170 * t2624;
t2002 = t1382 * t2642 + t1384 * t2645;
t2001 = t1662 * t2637 + t1673 * t2639;
t2000 = t1139 * t2642 + t1141 * t2643;
t1999 = t1585 * t2642 + t1587 * t2643;
t1997 = -t2415 / 0.2e1 + t2381 / 0.2e1;
t1995 = -t2397 / 0.2e1 + t2373 / 0.2e1;
t1987 = (qJD(3) * t1650 + t1578 * qJD(4)) * t1575;
t1564 = t2183 / 0.2e1 + (t2389 / 0.2e1 + t1790 * t2176) * t1782;
t1986 = t1564 * qJD(2) + qJD(3) * t2268;
t1985 = t1590 / 0.2e1 + t1620 * t2175;
t1984 = t2608 / 0.2e1 + pkin(12) * t2679 + t2715;
t1983 = -t1752 / 0.2e1 + t2086;
t292 = -t1156 * t996 + t1157 * t997 + t1389 * t1433;
t1814 = (t2625 * t997 + t2631 * t996 + t2672) * t831 + t560 * t2696 + t561 * t2694 + t832 * t2675;
t44 = t2611 / 0.2e1 + t2049 * pkin(13) + t1814;
t1826 = t2672 * t500 + t2675 * t584 + t2694 * t289 + t2696 * t288 + t2710 * t397 + t2711 * t396;
t1877 = pkin(13) * t2066 + t2722 * t622;
t9 = -t1826 + t1877;
t1982 = t44 * qJD(1) - t9 * qJD(2) + t292 * qJD(3);
t297 = -t1169 * t996 + t1170 * t997 + t1389 * t1439;
t1829 = t1439 * t2713 + t2691 * t561 + t2693 * t560 + t2710 * t698 + t2711 * t697;
t40 = (pkin(12) * t2704 + t1132 * t2676) * t1784 + t1829 + t2050;
t1825 = t288 * t1169 / 0.2e1 + t289 * t2692 + t379 * t996 / 0.2e1 - t380 * t997 / 0.2e1 + t500 * t2671 + t668 * t2676;
t1890 = t2350 * t622 + t2645 * t355 + t2648 * t354;
t7 = t1825 + t1890;
t1981 = t40 * qJD(1) - t7 * qJD(2) + t297 * qJD(3);
t1980 = t2051 * pkin(13);
t1979 = t2492 / 0.2e1 + t831 * t2265;
t1978 = -t2491 / 0.2e1 + t832 * t2266;
t1977 = t1133 * t2639 + t2269 * t831;
t1976 = t1133 * t2637 + t2269 * t832;
t1975 = t1432 * t2661 + t2266 * t583;
t1974 = t1433 * t2662 + t2265 * t584;
t1973 = t1132 * t2658 + t2266 * t560;
t1972 = t1132 * t2656 + t2266 * t561;
t1804 = t1139 * t2692 + t1141 * t2693 + t2649 * t288 + t2652 * t289 + t2656 * t379 + t2658 * t380 + t2685 * t996 + t2688 * t997;
t1832 = (t2625 * t354 + t2631 * t355) * t1784 + t1317 * t2647 + t1316 * t2646;
t11 = -t1804 + t1832;
t296 = -t1169 * t1587 - t1170 * t1585 - t1659 * t997 + t1660 * t996;
t1856 = t2649 * t560 + t2652 * t561 + t2656 * t697 + t2658 * t698;
t1945 = (t2625 * t739 + t2631 * t740) * t1784;
t85 = t1945 - t1856;
t1971 = -t85 * qJD(1) - t11 * qJD(2) + t296 * qJD(3);
t1847 = t1139 * t2694 + t1141 * t2695 + t2655 * t396 + t2657 * t397;
t13 = (pkin(13) * t2684 + t355 / 0.2e1 + t2068) * t1787 + (pkin(13) * t2681 - t354 / 0.2e1 + t2067) * t1783 + t1847;
t295 = -t1156 * t1587 - t1157 * t1585 + (t997 * t1783 - t996 * t1787) * t1698;
t93 = (-t740 / 0.2e1 + t2061) * t1787 + (t739 / 0.2e1 + t2044) * t1783;
t1970 = t93 * qJD(1) - t13 * qJD(2) + t295 * qJD(3);
t1813 = (t1432 * t2629 + t1433 * t2623 + t2634) * t1132 + t1133 * t2641 + t831 * t2670 + t832 * t2666;
t107 = t2610 / 0.2e1 + t2015 * pkin(12) + t1813;
t1821 = -t1078 * t1679 / 0.2e1 + t583 * t2669 + t1509 * t2715 + t793 * t2674 + t794 * t2673 + t948 * t2635;
t1873 = t2056 * pkin(12) - t1130 * pkin(4) / 0.2e1;
t55 = t1821 + t1873;
t678 = -t1432 * t1507 + t1433 * t1509 + t1679 * t1704;
t1962 = t107 * qJD(1) - t55 * qJD(2) + t678 * qJD(3);
t129 = t2549 / 0.2e1 + (t2300 + t1973) * t1784 + t2054;
t1817 = t1139 * t2671 + t1169 * t2680 + t1286 * t2676 + t2640 * t379 + t2652 * t500 + t2658 * t668;
t23 = (t2265 * t288 + t2662 * t996 + t2079) * t1784 + t1817 + t2036;
t388 = t1169 * t1698 + t1389 * t1659 + t1439 * t1585 - t2315 * t996;
t1961 = t129 * qJD(1) - t23 * qJD(2) + t388 * qJD(3);
t132 = -t2548 / 0.2e1 + (t2299 + t1972) * t1784 + t2052;
t1816 = t1141 * t2671 + t1170 * t2679 + t1287 * t2676 + t2639 * t380 + t2650 * t500 + t2656 * t668;
t24 = (t2265 * t289 + t2662 * t997 + t2078) * t1784 + t1816 + t2033;
t389 = -t1170 * t1698 + t1389 * t1660 + t1439 * t1587 - t2315 * t997;
t1960 = t132 * qJD(1) - t24 * qJD(2) + t389 * qJD(3);
t146 = t2498 / 0.2e1 + t2060;
t1820 = t1139 * t2673 + t1156 * t2680 + t2637 * t288 + t2640 * t396 + t2658 * t584 + t2677 * t996;
t1904 = pkin(13) * t2668 + t1382 * t2675 + t2639 * t500;
t30 = t1783 * t1904 + t1820 + t2082;
t373 = t1433 * t1585 - t1700 * t996 + (t1156 - t2459) * t1698;
t1959 = t146 * qJD(1) - t30 * qJD(2) + t373 * qJD(3);
t149 = t2300 + t2057;
t1819 = t1141 * t2673 + t1157 * t2679 + t2637 * t289 + t2639 * t397 + t2656 * t584 + t2677 * t997;
t31 = t1787 * t1904 + t1819 + t2081;
t374 = t1433 * t1587 - t1700 * t997 + (-t1157 - t2458) * t1698;
t1958 = t149 * qJD(1) - t31 * qJD(2) + t374 * qJD(3);
t173 = (t2703 + t1979) * t1788 + (t2704 + t1978) * t1784;
t1846 = t1382 * t2666 + t1384 * t2669 + t2637 * t793 + t2639 * t794;
t59 = (pkin(12) * t2668 + t694 / 0.2e1 + t1975) * t1788 + (pkin(12) * t2664 - t693 / 0.2e1 + t1974) * t1784 + t1846;
t628 = -t1507 * t1700 - t1509 * t1698 + (t1432 * t1788 - t1433 * t1784) * t2422;
t1957 = t173 * qJD(1) - t59 * qJD(2) + t628 * qJD(3);
t209 = t2017 + t2044;
t643 = t1389 * t1587 - t1698 * t997;
t1852 = t1141 * t2676 + t2656 * t500 - t2067;
t73 = t1852 + t2071;
t1956 = qJD(1) * t209 + qJD(2) * t73 - qJD(3) * t643;
t210 = t2016 + t2061;
t642 = -t1389 * t1585 + t1698 * t996;
t1853 = t1139 * t2675 + t2657 * t500 - t2068;
t74 = t1853 + t2069;
t1955 = qJD(1) * t210 + qJD(2) * t74 - qJD(3) * t642;
t1892 = pkin(4) * t2668 + pkin(12) * t2252 + t1130 * t2623;
t1896 = t1078 * t2640 + t1382 * t2635 + t1432 * t2659;
t119 = (t2670 + t2274) * t1575 + (t583 * t2626 + (t793 / 0.2e1 - t2535 / 0.2e1) * t1789) * t1781 + t1892 + t1896;
t237 = t2474 / 0.2e1 + t1977;
t833 = t1432 * t2425 + t1507 * t2422 - t1679 * t2315 - t1704 * t1698;
t1952 = t237 * qJD(1) - t119 * qJD(2) - t833 * qJD(3);
t1891 = pkin(4) * t2665 + pkin(12) * t2241 + t1130 * t2628;
t1895 = t1078 * t2638 + t1384 * t2635 + t1433 * t2659;
t120 = (t2666 + t2273) * t1575 + (t584 * t2626 + (-t794 / 0.2e1 - t2534 / 0.2e1) * t1789) * t1781 + t1891 + t1895;
t240 = -t2476 / 0.2e1 + t1976;
t834 = t1700 * t1704 + (-t1433 * t1785 + (t1509 + t2438) * t1789) * t1781;
t1951 = t240 * qJD(1) - t120 * qJD(2) + t834 * qJD(3);
t641 = t1382 * t1698 - t1700 * t1384;
t806 = -t1384 ^ 2 + t2725;
t1950 = qJD(2) * t806 + qJD(3) * t641 - qJD(4) * t2090;
t1949 = qJD(4) * t2072;
t1947 = t2072 * qJD(2);
t1154 = -t1432 * t2422 - t1679 * t1698;
t1835 = t1382 * t2641 + t2639 * t948 - t1975;
t189 = t1835 + t2236;
t365 = -t2492 / 0.2e1 + t2472 / 0.2e1 + (t831 * t2621 + t2450 / 0.2e1) * t1781;
t1943 = -qJD(1) * t365 + qJD(2) * t189 - qJD(3) * t1154;
t1155 = -t1433 * t2422 - t1679 * t1700;
t1834 = t1384 * t2641 + t2637 * t948 + t1974;
t188 = -t1834 + t1995;
t367 = t2491 / 0.2e1 + t2473 / 0.2e1 + (t1577 * t2623 + t2620 * t832) * t1781;
t1942 = -qJD(1) * t367 + qJD(2) * t188 + qJD(3) * t1155;
t1597 = pkin(3) * t2429 + t1704 * t2602;
t1837 = t1078 * t2345 + t2072 * t2634;
t428 = (-t2437 / 0.2e1 + t2077) * t1781 + t1837 + t1985;
t1798 = t1800 / 0.2e1;
t1796 = t1133 * t2345 + t1785 * t1798;
t1805 = -t1513 / 0.2e1 + t1809 / 0.2e1;
t600 = t1796 - t1805;
t1941 = -qJD(1) * t600 - qJD(2) * t428 + qJD(3) * t1597;
t1598 = pkin(3) * t2428 - t1701 * t2602;
t1807 = (pkin(3) * t2661 + t1353 * t2620) * t1781 + t1077 * t2344 + t2072 * t2636;
t426 = t1807 - t2156;
t1797 = t1132 * t2344 + t1789 * t1798;
t1803 = t1808 / 0.2e1 + t1577 * t2176;
t602 = t1797 - t1803;
t1940 = -qJD(1) * t602 - qJD(2) * t426 + qJD(3) * t1598;
t1005 = -t2304 + (t2190 - t2378 / 0.2e1 + t2656) * t1784;
t1728 = t1779 * t1787 - t2376;
t441 = -t2305 + (-t2410 / 0.2e1 - t2387 / 0.2e1 + t2698) * t1784;
t1939 = -qJD(2) * t441 - qJD(3) * t1005 - qJD(4) * t1728;
t1006 = t2308 + (t2186 + t2405 / 0.2e1 + t2657) * t1784;
t1727 = t1762 * t1783;
t443 = -t1783 * t2371 + (-t2417 / 0.2e1 + t2700 + t2245) * t1784;
t1938 = qJD(2) * t443 - qJD(3) * t1006 + qJD(4) * t1727;
t1414 = -t1700 ^ 2 + t2723;
t1937 = qJD(2) * t641 + qJD(3) * t1414 + qJD(4) * t1360;
t1936 = -qJD(2) * t2090 + qJD(3) * t1360 + t2518;
t1926 = qJD(5) * t2269 + t2217;
t1925 = pkin(12) * t2639 + pkin(13) * t2266 + t2673;
t1379 = t2370 / 0.2e1 - t1948 / 0.2e1;
t1920 = t1379 * qJD(2) + t1689 * qJD(3) + t2399 / 0.2e1;
t1869 = pkin(4) * t2639 + pkin(12) * t2194 + t2273;
t1146 = t1869 + t2234;
t1894 = pkin(4) * t2679 + t2534 / 0.2e1 + pkin(12) * t2253;
t359 = t1894 + t2237;
t1919 = pkin(4) * t2374 - qJD(2) * t359 - qJD(3) * t1146;
t1148 = t2355 + (pkin(12) * t2265 - t1703 / 0.2e1) * t1788 + (t2641 + t2636) * t1784;
t361 = t2356 + (-t2616 / 0.2e1 - t1318 / 0.2e1) * t1788 + (t948 / 0.2e1 - t1077 / 0.2e1) * t1784;
t1918 = pkin(4) * t2399 - qJD(2) * t361 - qJD(3) * t1148;
t1905 = (qJD(4) * t2315 + qJD(5) * t1700) * t1698;
t1902 = qJD(5) * t1564 + t2760;
t1901 = t1947 - qJD(4);
t1900 = t1382 * t2644 + t1384 * t2647 + t2628 * t288;
t1899 = t1661 * t2637 + t1672 * t2640 + t2628 * t996;
t1898 = qJD(6) * t2629 + t2024;
t1893 = t1947 - qJD(4) / 0.2e1;
t1152 = pkin(12) ^ 2 * t2392 - t1661 * t1672 + t1662 * t1673;
t1812 = t2346 * t500 + t2350 * t584 + t2642 * t289 + t2644 * t288 + t2645 * t397 + t2648 * t396;
t1876 = pkin(13) * t2065 + t2722 * t668;
t15 = -t1812 + t1876;
t1810 = t1156 * t2648 + t1157 * t2645 + t1389 * t2346 + t1433 * t2350 + t2642 * t997 + t2644 * t996;
t1872 = pkin(5) * t2671 + pkin(13) * t2011;
t160 = -t1810 + t1872;
t57 = t1784 * t2347 - pkin(12) * t2541 / 0.2e1 + t1980 + (t2379 / 0.2e1 + t2406 / 0.2e1 - t2606 / 0.2e1) * t831 + t2062;
t1889 = -t57 * qJD(1) - t15 * qJD(2) - t160 * qJD(3) + t1152 * qJD(4);
t1887 = t1139 * t2350 - t2037;
t1886 = t1585 * t2350 - t2035;
t1046 = (t1672 * t1784 - t2440) * t1787 + (t1673 * t1784 + t2439) * t1783;
t144 = (t2558 / 0.2e1 - t698 / 0.2e1) * t1787 + (-t2557 / 0.2e1 + t697 / 0.2e1) * t1783;
t158 = (pkin(13) * t2652 + t1156 * t2628 + t2035 + t2691) * t1787 + (pkin(13) * t2649 + t1157 * t2628 - t2032 + t2693) * t1783 + t1999;
t19 = (pkin(13) * t2688 + t380 / 0.2e1 + t396 * t2628 + t2037) * t1787 + (pkin(13) * t2685 - t379 / 0.2e1 + t397 * t2628 - t2034) * t1783 + t2000;
t1884 = t144 * qJD(1) - t19 * qJD(2) - t158 * qJD(3) - t1046 * qJD(4);
t1377 = t1661 * t1784 + (t1672 - 0.2e1 * t1769) * t1788;
t153 = (-t2542 / 0.2e1 + t2163) * t1784;
t255 = (pkin(12) * t2658 + t2695) * t1788 + (t1389 * t2623 + t1784 * t1925) * t1783 + t1899 + t2076;
t49 = (t396 / 0.2e1 + pkin(12) * t2700) * t1788 + (t1784 * t1984 + t2623 * t500) * t1783 + t1900 + t2084;
t1883 = -t153 * qJD(1) - t49 * qJD(2) - t255 * qJD(3) - t1377 * qJD(4);
t1378 = t1673 * t1788 + (-t1662 + 0.2e1 * t2357) * t1784;
t152 = (-t2540 / 0.2e1 - t2164) * t1784;
t256 = (-t1157 / 0.2e1 + t2074) * t1788 + (t1787 * t1925 + t2710) * t1784 + t2001 + t2075;
t50 = (-t397 / 0.2e1 + t2080) * t1788 + (t1787 * t1984 + t2720) * t1784 + t2002 + t2083;
t1882 = -t152 * qJD(1) - t50 * qJD(2) - t256 * qJD(3) + t1378 * qJD(4);
t1571 = -pkin(12) * t2426 - t2440;
t225 = -t1783 * t2165 + t1788 * t2163;
t416 = t2248 + (-t1545 / 0.2e1 + t1389 * t2628) * t1783 + t1886;
t90 = t2340 + (-t800 / 0.2e1 + t500 * t2628) * t1783 + t1887;
t1881 = qJD(1) * t225 + qJD(2) * t90 + qJD(3) * t416 - qJD(4) * t1571;
t1572 = -pkin(12) * t2376 - t2439;
t224 = t1787 * t2165 + t1788 * t2164;
t415 = t1784 * t2074 + t1997 + t2032;
t89 = t1784 * t2080 + t2034 + t2070;
t1880 = qJD(1) * t224 + qJD(2) * t89 + qJD(3) * t415 + qJD(4) * t1572;
t399 = t1139 * t1585 - t1587 * t1141;
t474 = (-t2418 + t2483) * t1784;
t512 = t1139 ^ 2 - t1141 ^ 2;
t1879 = qJD(2) * t512 + qJD(3) * t399 - qJD(4) * t474 - qJD(5) * t2092;
t1043 = (-t2408 + t2446) * t1784;
t1162 = t1585 ^ 2 - t1587 ^ 2;
t1875 = qJD(2) * t399 + qJD(3) * t1162 - qJD(4) * t1043 - qJD(5) * t2088;
t1874 = (qJD(3) * t1508 + qJD(5) * t1384 - t2520) * t1382;
t1583 = t1983 * t1783;
t164 = t1783 * t2173 + t1787 * t2342 + t2354;
t689 = t1783 * t2172 + t1787 * t2235 + t2352;
t1868 = pkin(5) * t2510 - qJD(2) * t164 - qJD(3) * t689 + qJD(4) * t1583;
t1584 = t1983 * t1787;
t166 = t1783 * t2342 - t1787 * t2173 + t2353;
t691 = t1783 * t2235 - t1787 * t2172 + t2351;
t1867 = pkin(5) * t2512 - qJD(2) * t166 - qJD(3) * t691 - qJD(4) * t1584;
t1864 = qJD(6) * t1379 + t2779;
t1861 = qJD(6) * t1689 + t2778;
t1726 = t1761 * t1777;
t1843 = qJD(2) * t474 + qJD(3) * t1043 + qJD(4) * t1726 + 0.2e1 * t2204;
t1842 = qJD(2) * t2092 + qJD(3) * t2088 + t2159 - t2513;
t1772 = t2511 / 0.2e1;
t1753 = qJD(4) * t2268;
t1747 = qJD(2) * t2318;
t1736 = -0.2e1 * qJD(6) * t2309;
t1729 = qJD(3) * t2195;
t1534 = t1769 + t2377 / 0.2e1 + t2086 * t1787;
t1533 = t2359 - t2404 / 0.2e1 - t2086 * t1783;
t1352 = qJD(3) * t1645 + qJD(4) * t1564;
t1347 = t1360 * qJD(5);
t1216 = t1788 * t2191 + t2632 + t2740;
t1215 = t1906 + t1965;
t1196 = -t1833 + t2361;
t1195 = -t2224 / 0.2e1 + t2633 + (t1914 + t2263) * t1789;
t1194 = t1799 + t1830;
t1193 = -t2233 / 0.2e1 + t1917 + (t1836 + t2100) * t1786;
t1185 = t2275 + t1921;
t1183 = t2276 + t1922;
t1149 = pkin(12) * t2192 + t2355 + t2274 + t2394 / 0.2e1 + t2365 / 0.2e1;
t1147 = t1869 - t2234;
t1103 = t1777 * t2617;
t1080 = t2088 * qJD(6);
t1039 = t1043 * qJD(6);
t1008 = t1700 * t2250 + t1784 * t2190 + t2279 + t2304;
t1007 = t1585 * t2629 + t1700 * t2259 + t1784 * t2186 - t2308;
t1000 = t1015 * qJD(4);
t894 = t1484 * qJD(3) + qJD(4) * t2254 + t1379 * qJD(5);
t862 = t1659 * t2631 + t1660 * t2624 - t1788 * t2003 + t1622;
t855 = -t1964 - t1484;
t854 = t1781 * t2187 - t1963 + t2240;
t839 = t2283 - t1907;
t775 = t2090 * qJD(5);
t709 = t1132 * t1788;
t692 = pkin(13) * t2244 + t2351 + t2459 / 0.2e1 + t2416 / 0.2e1 + t2382 / 0.2e1;
t690 = pkin(13) * t2260 + t2352 + t2458 / 0.2e1 + t2386 / 0.2e1 - t2412 / 0.2e1;
t638 = t2396 / 0.2e1 + t1859;
t636 = t2369 / 0.2e1 + t1860;
t629 = t641 * qJD(5);
t607 = t1575 * t2256 + t2663 + t2739;
t604 = t1787 * t2242 + t2409 / 0.2e1 + t2738;
t603 = t1797 + t1803;
t601 = t1796 + t1805;
t597 = t2292 + t1923;
t595 = t2293 + t1924;
t550 = -t2004 + t2157;
t549 = t1996 + t2005;
t528 = -t1794 + t1993;
t527 = t1795 + t2727;
t523 = t2288 - t1930;
t521 = t2291 + t1932;
t489 = t2197 + t2012;
t488 = t2198 + t2014;
t479 = t2092 * qJD(6);
t471 = t474 * qJD(6);
t455 = t2255 + t1510 * t2622 + (-t2371 / 0.2e1 + t2285) * t2422 + (t2435 / 0.2e1 + t2239) * t1575;
t444 = t1384 * t2250 + t1783 * t2254 + t2295 + t2305;
t442 = t1139 * t2629 + t1575 * t2251 + (t2285 - t2371) * t1783;
t438 = t831 * t1787;
t436 = t831 * t1783;
t429 = t1688 * t2265 + t1781 * t2077 + t1837 - t1985;
t427 = t1807 + t2156;
t418 = pkin(12) * t2279 + t1389 * t2250 + t1997 - t2032;
t417 = t1389 * t2259 + t2248 - t2411 / 0.2e1 - t1886;
t398 = t399 * qJD(6);
t377 = t2414 / 0.2e1 + t1888;
t375 = t2246 + t1885;
t368 = -t2473 / 0.2e1 + t1577 * t2267 - t1978;
t366 = -t2472 / 0.2e1 - t2320 / 0.2e1 - t1979;
t362 = pkin(12) * t2242 + t2356 + t2535 / 0.2e1 + t2398 / 0.2e1 + t2372 / 0.2e1;
t360 = t1894 - t2237;
t332 = t1286 * t2631 + t1287 * t2624 - t1788 * t2013 + t1326;
t323 = t1141 * t2193 + t1587 * t2254 + t1784 * t2246 - t2009 + t2287;
t322 = t1139 * t2194 + t1585 * t2253 + t1783 * t2255 - t2010 + t2290;
t316 = -t2029 + t2158;
t315 = t2008 - t2040;
t311 = t1791 - t1915;
t310 = t1792 + t1916;
t265 = t1316 * t2631 + t1317 * t2624 + t1382 * t2003 + t1698 * t2013;
t258 = pkin(12) * t2740 + t1157 * t2622 + t1389 * t2243 + t1433 * t2250 + t1787 * t2148 + t997 * t2629 - t2001 + t2075;
t257 = pkin(12) * t1965 + t1156 * t2623 + t1389 * t2256 + t1433 * t2258 + t1783 * t2148 - t1899 + t2076;
t239 = t2476 / 0.2e1 + t1976;
t238 = -t2474 / 0.2e1 + t1977;
t236 = t1933 + t1838;
t233 = t1934 - t1839;
t227 = t2557 / 0.2e1 + t831 * t2250 + t1132 * t2256 + t2487 / 0.2e1;
t226 = -t2558 / 0.2e1 + t831 * t2259 + t1132 * t2243 - t2488 / 0.2e1;
t212 = t2017 - t2044;
t211 = t2016 - t2061;
t205 = t2468 / 0.2e1 + t2038;
t204 = -t2466 / 0.2e1 + t2039;
t191 = t1834 + t1995;
t190 = -t1835 + t2236;
t187 = t2020 - t2045;
t186 = t2019 - t2064;
t177 = t1844 + t1967;
t176 = t1845 + t1968;
t172 = -t2043 * t2422 + (t2239 - t2435 / 0.2e1) * t1132 - t2015;
t167 = pkin(13) * t2249 + t2353 + t2560 / 0.2e1 + t2578 / 0.2e1 + t2388 / 0.2e1;
t165 = pkin(13) * t2262 + t2354 + t2559 / 0.2e1 + t2573 / 0.2e1 - t2419 / 0.2e1;
t161 = t1810 + t1872;
t159 = t1661 * t2244 + t1156 * t2251 + t996 * t2243 + t1662 * t2260 + t1157 * t2259 + t997 * t2257 + (t2275 + t2276) * pkin(13) - t1999 + t2011;
t155 = t1132 * t2259 + t2250 * t832 + t2629 * t561;
t154 = t1132 * t2250 + t2258 * t832 + t2629 * t560;
t150 = t2043 * t1575 + (t2371 / 0.2e1 + t2285) * t1132 - t2018;
t148 = t2499 / 0.2e1 + t2057;
t147 = t2299 + t2060;
t145 = t1788 * t2059 + t2051;
t141 = -t1848 + t2021;
t131 = t2548 / 0.2e1 + t1019 * t2250 + t1972 * t1784 + t2052;
t130 = -t2549 / 0.2e1 + t1019 * t2258 + t1973 * t1784 + t2054;
t127 = t2503 / 0.2e1 + t2058;
t126 = t2301 + t2063;
t122 = t1509 * t2662 + t1679 * t2242 + t2192 * t948 + t2265 * t794 + t2269 * t584 + t1891 - t1895;
t121 = t1507 * t2661 + t1679 * t2254 + t2193 * t948 + t2266 * t793 + t2269 * t583 + t1892 - t1896;
t118 = t1793 + t1878;
t106 = t1020 * t2346 + t2211 - t2610 / 0.2e1 + t1813;
t101 = t2546 / 0.2e1 + t1003 * t2250 + t2030 * t1784 + t2053;
t100 = -t2547 / 0.2e1 + t1003 * t2258 + t2031 * t1784 + t2055;
t98 = t1854 + t2041;
t97 = t1855 + t2042;
t94 = (-t2447 / 0.2e1 + t2281) * t831 - t2059 * t1698 - t2049;
t92 = pkin(12) * t2295 + t2250 * t500 - t2034 + t2070;
t91 = t500 * t2259 + t2340 - t2574 / 0.2e1 - t1887;
t86 = t1945 + t1856;
t78 = (-t2484 / 0.2e1 + t2297) * t831 - t2059 * t1382 - t2046;
t76 = -t1852 + t2071;
t75 = -t1853 + t2069;
t71 = t1944 + t1858;
t66 = t1857 + t2048;
t60 = t1433 * t2253 + t584 * t2194 + t1432 * t2242 + t583 * t2192 + (t2284 + t2283) * pkin(12) - t1846 + t2056;
t58 = t831 * t2346 + (pkin(12) * t2712 + t2347) * t1784 + t1980 - t2062 + (t2379 + t2406) * t2714;
t56 = -t1821 + t1873;
t53 = t1004 * t2346 + t2212 - t2609 / 0.2e1 + t1818;
t52 = pkin(12) * t2739 + t1787 * t2213 + t2243 * t500 + t2250 * t584 + t2622 * t397 + t2629 * t289 - t2002 + t2083;
t51 = pkin(12) * t2738 + t1783 * t2213 + t2256 * t500 + t2258 * t584 + t2623 * t396 - t1900 + t2084;
t43 = t740 * t2348 + t739 * t2349 - t2611 / 0.2e1 + t1814;
t39 = t1389 * t2298 + t1829 - t2050 + t2211;
t38 = -t1824 + t1897;
t33 = pkin(13) * t2247 + t1389 * t2249 + t2244 * t500 - t1819 + t2081;
t32 = t970 * t2676 - t500 * t1469 / 0.2e1 + pkin(13) * t2261 - t1820 + t2082;
t26 = t1784 * t2078 + t2194 * t289 + t2253 * t997 - t1816 + t2033;
t25 = t1784 * t2079 + t2194 * t288 + t2253 * t996 - t1817 + t2036;
t20 = t1661 * t2249 + t396 * t2251 + t288 * t2243 + t1662 * t2262 + t397 * t2259 + t289 * t2257 + (t2292 + t2293) * pkin(13) - t2000 + t2065;
t16 = t1812 + t1876;
t14 = t996 * t2249 + t288 * t2244 + t997 * t2262 + t289 * t2260 + (t2288 + t2291) * pkin(13) - t1847 + t2066;
t12 = t1804 + t1832;
t10 = t1826 + t1877;
t8 = -t1825 + t1890;
t5 = t751 * t2348 + t750 * t2349 - t2612 / 0.2e1 + t1822;
t3 = t2298 * t500 + t1831 - t2047 + t2212;
t2 = t1828 + t1903;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t897, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t329 + qJD(3) * t328, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t197 + qJD(3) * t196 + qJD(4) * t198, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t112 + qJD(3) * t110 + qJD(4) * t111 + qJD(5) * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t2206, -qJD(2) * t2207, 0, 0, 0, 0, 0, 0, 0, 0 (t1651 * t2603 - t1775 * t2101) * qJD(2) + t1193 * qJD(3) (-t1652 * t2603 + t1775 * t2102) * qJD(2) + t1194 * qJD(3) (-t1651 * t1786 + t1652 * t1790) * qJD(2) * t1782, t2536 + (-t1651 * t1702 + t1652 * t1705 - t2206 * t2619) * qJD(2), 0, 0, 0, 0, 0, 0 (t1308 * t2072 + t1500 * t1575) * qJD(2) + t310 * qJD(3) + t528 * qJD(4) (t1309 * t2072 + t1500 * t1578) * qJD(2) + t311 * qJD(3) + t527 * qJD(4) (t1308 * t1578 - t1309 * t1575) * qJD(2) + t233 * qJD(3), t2564 + (t1077 * t1308 + t1078 * t1309 + t1353 * t1500) * qJD(2) + t118 * qJD(3), 0, 0, 0, 0, 0, 0 (-t1003 * t1575 + t1308 * t1382) * qJD(2) + t176 * qJD(3) + t204 * qJD(4) + t316 * qJD(5) (-t1004 * t1575 + t1308 * t1384) * qJD(2) + t177 * qJD(3) + t205 * qJD(4) + t315 * qJD(5) (t1003 * t1384 - t1004 * t1382) * qJD(2) + t141 * qJD(3) + t150 * qJD(4), t2567 + (t1003 * t583 + t1004 * t584 + t1308 * t948) * qJD(2) + t38 * qJD(3) + t53 * qJD(4), 0, 0, 0, 0, 0, 0 (t1003 * t1139 + t1382 * t750) * qJD(2) + t97 * qJD(3) + t100 * qJD(4) + t126 * qJD(5) + t187 * qJD(6) (t1003 * t1141 - t1382 * t751) * qJD(2) + t98 * qJD(3) + t101 * qJD(4) + t127 * qJD(5) + t186 * qJD(6) (-t1139 * t751 - t1141 * t750) * qJD(2) + t66 * qJD(3) + t71 * qJD(4) + t78 * qJD(5), t2580 + (t1003 * t500 - t288 * t750 + t289 * t751) * qJD(2) + t2 * qJD(3) + t3 * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t1193 - qJD(3) * t1577, t1194 * qJD(2) + qJD(3) * t1815, 0, 0, 0, 0, 0, 0, 0, 0, t310 * qJD(2) + (-t1276 * t2602 - t1577 * t2428) * qJD(3) + t601 * qJD(4), t311 * qJD(2) + (-t1277 * t2602 + t1577 * t2429) * qJD(3) + t603 * qJD(4), t233 * qJD(2) + (t1276 * t1785 + t1277 * t1789) * t2522, t2565 + t118 * qJD(2) + (-pkin(3) * t1577 * t1774 + t1276 * t1701 + t1277 * t1704) * qJD(3), 0, 0, 0, 0, 0, 0, t176 * qJD(2) + (t1019 * t2422 + t1276 * t1698) * qJD(3) + t238 * qJD(4) + t368 * qJD(5), t177 * qJD(2) + (t1020 * t2422 + t1276 * t1700) * qJD(3) + t239 * qJD(4) + t366 * qJD(5), t141 * qJD(2) + (t1019 * t1700 - t1020 * t1698) * qJD(3) + t172 * qJD(4), t2568 + t38 * qJD(2) + (t1019 * t1432 + t1020 * t1433 + t1276 * t1679) * qJD(3) + t106 * qJD(4), 0, 0, 0, 0, 0, 0, t97 * qJD(2) + (t1019 * t1585 + t1698 * t739) * qJD(3) + t130 * qJD(4) + t147 * qJD(5) + t212 * qJD(6), t98 * qJD(2) + (t1019 * t1587 - t1698 * t740) * qJD(3) + t131 * qJD(4) + t148 * qJD(5) + t211 * qJD(6), t66 * qJD(2) + (-t1585 * t740 - t1587 * t739) * qJD(3) + t86 * qJD(4) + t94 * qJD(5), t2582 + t2 * qJD(2) + (t1019 * t1389 - t739 * t996 + t740 * t997) * qJD(3) + t39 * qJD(4) + t43 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t528 + qJD(3) * t601 - qJD(4) * t1133, qJD(2) * t527 + qJD(3) * t603 + t2521, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t204 + qJD(3) * t238 + qJD(5) * t707 - t1133 * t2374, qJD(2) * t205 + qJD(3) * t239 + qJD(5) * t709 + t1133 * t2399, t150 * qJD(2) + t172 * qJD(3) + (-t1777 - t1779) * t2521, t2566 + t53 * qJD(2) + t106 * qJD(3) + (-pkin(4) * t1133 - t1779 * t2617 - t1103) * qJD(4), 0, 0, 0, 0, 0, 0, t100 * qJD(2) + t130 * qJD(3) + (-t1132 * t2426 - t1788 * t697) * qJD(4) + t154 * qJD(5) + t227 * qJD(6), t101 * qJD(2) + t131 * qJD(3) + (-t1132 * t2376 + t1788 * t698) * qJD(4) + t155 * qJD(5) + t226 * qJD(6), t71 * qJD(2) + t86 * qJD(3) + t145 * qJD(5) + (-t1783 * t698 - t1787 * t697) * t2399, t2581 + t3 * qJD(2) + t39 * qJD(3) + (-t1661 * t697 + t1662 * t698 - t1103) * qJD(4) + t58 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t316 + qJD(3) * t368 + qJD(4) * t707 - qJD(5) * t832, qJD(2) * t315 + qJD(3) * t366 + qJD(4) * t709 + qJD(5) * t831, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t126 + qJD(3) * t147 + qJD(4) * t154 + qJD(6) * t436 - t2510 * t832, qJD(2) * t127 + qJD(3) * t148 + qJD(4) * t155 + qJD(6) * t438 + t2512 * t832, t78 * qJD(2) + t94 * qJD(3) + t145 * qJD(4) + qJD(5) * t2221, t2579 + t5 * qJD(2) + t43 * qJD(3) + t58 * qJD(4) + (-pkin(5) * t832 + pkin(13) * t2221) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t187 + qJD(3) * t212 + qJD(4) * t227 + qJD(5) * t436 - qJD(6) * t561, qJD(2) * t186 + qJD(3) * t211 + qJD(4) * t226 + qJD(5) * t438 + qJD(6) * t560, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1190 * qJD(3), -t1191 * qJD(3), 0, -t2536, 0, 0, 0, 0, 0, 0, qJD(3) * t309 - qJD(4) * t525, qJD(3) * t312 - qJD(4) * t526, -qJD(3) * t232, -qJD(3) * t117 - t2564, 0, 0, 0, 0, 0, 0, -qJD(3) * t174 + qJD(4) * t203 - qJD(5) * t313, -qJD(3) * t175 + qJD(4) * t206 - qJD(5) * t314, -qJD(3) * t140 + qJD(4) * t151, -qJD(3) * t37 + qJD(4) * t54 - t2567, 0, 0, 0, 0, 0, 0, -qJD(3) * t95 + qJD(4) * t99 + qJD(5) * t125 - qJD(6) * t184, -qJD(3) * t96 + qJD(4) * t102 + qJD(5) * t128 - qJD(6) * t185, -qJD(3) * t65 - qJD(4) * t70 + qJD(5) * t77, -qJD(3) * t1 + qJD(4) * t4 + qJD(5) * t6 - t2580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2201, t1713 * qJD(3), qJD(3) * t2179, -t2201, -qJD(3) * t2180, 0, -t1599 * qJD(3), -t1600 * qJD(3), 0, 0 (qJD(3) * t1653 - t2451) * t1578, qJD(3) * t1040 + qJD(4) * t1134, t1202 * qJD(3) + t1575 * t1949, t1987, t1201 * qJD(3) + t1578 * t1949, -qJD(3) * t1946 * t2421, qJD(3) * t386 + qJD(4) * t654, qJD(3) * t387 + qJD(4) * t653, qJD(3) * t303, qJD(3) * t302 (qJD(3) * t1510 - qJD(5) * t1382 - t2519) * t1384, qJD(3) * t759 + qJD(4) * t774 + qJD(5) * t806, qJD(3) * t865 + qJD(4) * t845 - t1382 * t2515, t1874, qJD(3) * t864 - qJD(4) * t844 - t1384 * t2515, t1987, qJD(3) * t168 + qJD(4) * t170 + qJD(5) * t308, qJD(3) * t169 + qJD(4) * t171 + qJD(5) * t307, qJD(3) * t133 + qJD(4) * t138, qJD(3) * t124 + qJD(4) * t134 (qJD(3) * t1317 + qJD(4) * t1287 - qJD(6) * t1139 - t2585) * t1141, qJD(3) * t440 + qJD(4) * t425 + qJD(5) * t466 + qJD(6) * t512, qJD(3) * t577 + qJD(4) * t575 + qJD(5) * t555 - t1139 * t2508 (qJD(3) * t1316 + qJD(4) * t1286 + qJD(6) * t1141 - t2586) * t1139, qJD(3) * t576 + qJD(4) * t574 - qJD(5) * t554 - t1141 * t2508, t1874, qJD(3) * t63 + qJD(4) * t67 + qJD(5) * t61 + qJD(6) * t143, qJD(3) * t64 + qJD(4) * t68 + qJD(5) * t62 + qJD(6) * t142, qJD(3) * t45 + qJD(4) * t46 + qJD(5) * t48, qJD(3) * t34 + qJD(4) * t36 + qJD(5) * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1747, t2431, t2147 * t2420, -t1747, -t2147 * t2421, 0, -qJD(3) * t1705 - t2099, qJD(3) * t1702 - t2098, 0, 0, t2765 + (qJD(3) * t2425 + t2527) * t1653, t2495 - t1000 + (-t1650 * t1785 + t1653 * t1789) * t2522, t2478 + (t1653 * t2602 + t1774 * t2312) * qJD(3) + t1195 * qJD(4), t2773, t2479 + (t1774 * t1782 * t2389 - t1650 * t2602) * qJD(3) + t1196 * qJD(4) (t2225 - t1893) * t2317, t1181 * t2225 + t429 * qJD(4) + (-pkin(3) * t1650 - t1405 * t1789 - t1701 * t2421) * t2522 + t2128, -t1182 * t2225 + t427 * qJD(4) + (-pkin(3) * t1653 + t1405 * t1785 - t1704 * t2421) * t2522 + t2127 (-t1650 * t1704 + t1653 * t1701 + (-t1181 * t1785 + t1182 * t1789) * t1781) * qJD(3) + t2131 (-t1181 * t1701 + t1182 * t1704 - t1405 * t2618) * qJD(3) + t2140, qJD(4) * t839 - t2766 + (t2523 + t2529) * t1510, t2545 + (-t1508 * t1700 - t1510 * t1698) * qJD(3) + t455 * qJD(4) + t629, t2537 + (-t1510 * t2422 + t1650 * t1700) * qJD(3) + t638 * qJD(4) + t854 * qJD(5), t2762, t2538 + (t1508 * t2422 - t1650 * t1698) * qJD(3) + t636 * qJD(4) + t855 * qJD(5), t2514 + t2773 (t1130 * t1698 - t1432 * t1650 + t1508 * t1679 - t2422 * t693) * qJD(3) + t121 * qJD(4) + t191 * qJD(5) + t2135 (t1130 * t1700 - t1433 * t1650 + t1510 * t1679 + t2422 * t694) * qJD(3) + t122 * qJD(4) + t190 * qJD(5) + t2134 (t1432 * t1510 - t1433 * t1508 - t1698 * t694 - t1700 * t693) * qJD(3) + t60 * qJD(4) + t2139 (t1130 * t1679 - t1432 * t693 + t1433 * t694) * qJD(3) + t56 * qJD(4) + t2144, qJD(4) * t489 + qJD(5) * t523 + t2771 + (t2524 + t2532) * t1317, t2562 + (-t1316 * t1587 - t1317 * t1585) * qJD(3) + t236 * qJD(4) + t265 * qJD(5) + t398, t2553 + (t1317 * t1698 + t1508 * t1587) * qJD(3) + t323 * qJD(4) + t377 * qJD(5) + t549 * qJD(6), qJD(4) * t488 + qJD(5) * t521 - t2771 + (t2525 + t2533) * t1316, t2554 + (-t1316 * t1698 - t1508 * t1585) * qJD(3) + t322 * qJD(4) + t375 * qJD(5) + t550 * qJD(6), t2507 + t2762 (t1316 * t1389 - t1508 * t996 + t1585 * t622 + t1698 * t354) * qJD(3) + t25 * qJD(4) + t32 * qJD(5) + t76 * qJD(6) + t2152 (t1317 * t1389 - t1508 * t997 + t1587 * t622 - t1698 * t355) * qJD(3) + t26 * qJD(4) + t33 * qJD(5) + t75 * qJD(6) + t2151 (-t1316 * t997 + t1317 * t996 - t1585 * t355 - t1587 * t354) * qJD(3) + t12 * qJD(4) + t14 * qJD(5) + t2155 (t1389 * t622 - t354 * t996 + t355 * t997) * qJD(3) + t8 * qJD(4) + t10 * qJD(5) + t2162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2760, t2097, t1195 * qJD(3) + t1575 * t1901, t2760, t1196 * qJD(3) + t1578 * t1901, t1729, qJD(3) * t429 - qJD(4) * t1078 - t2126, qJD(3) * t427 + qJD(4) * t1077 - t2125, 0, 0, qJD(3) * t839 + t2767 + (-t2399 - t2529) * t1298, t455 * qJD(3) - t1762 * t2451 + t2544 - t775, qJD(3) * t638 + t1578 * t2399 + t2589, t1295 * t2095 + t2777, qJD(3) * t636 + qJD(4) * t2370 - t2590, t1902, t121 * qJD(3) + (-t1078 * t1788 + t1784 * t2170) * qJD(4) + t362 * qJD(5) + t2133, t122 * qJD(3) + (t1078 * t1784 + t1788 * t2170) * qJD(4) + t360 * qJD(5) + t2132, t60 * qJD(3) + qJD(4) * t2122 + t2138, t56 * qJD(3) + (-pkin(4) * t1078 + pkin(12) * t2122) * qJD(4) + t2141, qJD(3) * t489 + qJD(5) * t597 - t2747 + (t2325 + t2532) * t1287, t2563 + t236 * qJD(3) + t332 * qJD(5) - t471 + (-t2470 - t2471) * t2399, t2555 + t323 * qJD(3) + (-t1287 * t1788 - t1575 * t2376) * qJD(4) + t444 * qJD(5) + t604 * qJD(6), qJD(3) * t488 + qJD(5) * t595 + t2747 + (t2326 + t2533) * t1286, t2556 + t322 * qJD(3) + (t1286 * t1788 + t1777 * t2410) * qJD(4) + t442 * qJD(5) + t607 * qJD(6) (t2707 + t2095) * t1295 + t2777, -t379 * t2374 + t25 * qJD(3) + t51 * qJD(5) + t92 * qJD(6) + (pkin(12) * t1286 + t1575 * t1661 + t2551) * t2399 + t2150, t380 * t2374 + t26 * qJD(3) + t52 * qJD(5) + t91 * qJD(6) + (pkin(12) * t1287 + t1575 * t1662 + t2550) * t2399 + t2145, t12 * qJD(3) + (-t1286 * t1662 + t1287 * t1661 + (-t1783 * t380 - t1787 * t379) * t1784) * qJD(4) + t20 * qJD(5) + t2154, t8 * qJD(3) + (-t1661 * t379 + t1662 * t380 + t2615 * t668) * qJD(4) + t16 * qJD(5) + t2160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2779, t1950, qJD(3) * t854 + t1382 * t2219, t2779, qJD(3) * t855 + t1384 * t2219, t1352, qJD(3) * t191 + qJD(4) * t362 - qJD(5) * t584 - t2129, qJD(3) * t190 + qJD(4) * t360 + qJD(5) * t583 - t2130, 0, 0, qJD(3) * t523 + qJD(4) * t597 + t2770 + (-t2512 - t2532) * t974, t265 * qJD(3) + t332 * qJD(4) - t1382 * t2513 + t2561 - t479, qJD(3) * t377 + qJD(4) * t444 + qJD(5) * t2417 + t2593, qJD(3) * t521 + qJD(4) * t595 - t2770 + (t2510 - t2533) * t970, qJD(3) * t375 + qJD(4) * t442 + qJD(5) * t2387 - t2594, t1864, t32 * qJD(3) + t51 * qJD(4) + (t1783 * t2168 - t1787 * t584) * qJD(5) + t167 * qJD(6) + t2143, t33 * qJD(3) + t52 * qJD(4) + (t1783 * t584 + t1787 * t2168) * qJD(5) + t165 * qJD(6) + t2142, t14 * qJD(3) + t20 * qJD(4) + qJD(5) * t2123 + t2153, t10 * qJD(3) + t16 * qJD(4) + (-pkin(5) * t584 + pkin(13) * t2123) * qJD(5) + t2161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2759, t1879, qJD(3) * t549 + qJD(4) * t604 + t1139 * t2218, t2759, qJD(3) * t550 + qJD(4) * t607 + t1141 * t2218, t894, qJD(3) * t76 + qJD(4) * t92 + qJD(5) * t167 - qJD(6) * t289 - t2136, qJD(3) * t75 + qJD(4) * t91 + qJD(5) * t165 + qJD(6) * t288 - t2137, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1190 * qJD(2), t1191 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t309 + qJD(4) * t600, -qJD(2) * t312 + qJD(4) * t602, qJD(2) * t232, qJD(2) * t117 - t2565, 0, 0, 0, 0, 0, 0, qJD(2) * t174 + qJD(4) * t237 + qJD(5) * t367, qJD(2) * t175 + qJD(4) * t240 + qJD(5) * t365, qJD(2) * t140 + qJD(4) * t173, qJD(2) * t37 + qJD(4) * t107 - t2568, 0, 0, 0, 0, 0, 0, qJD(2) * t95 + qJD(4) * t129 + qJD(5) * t146 - qJD(6) * t209, qJD(2) * t96 + qJD(4) * t132 + qJD(5) * t149 - qJD(6) * t210, qJD(2) * t65 - qJD(4) * t85 + qJD(5) * t93, qJD(2) * t1 + qJD(4) * t40 + qJD(5) * t44 - t2582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1747, -t2431, -qJD(2) * t2179, t1747, qJD(2) * t2180, 0, t2099, t2098, 0, 0, -t1653 * t2527 + t2765, -t1000 - t2495, -qJD(4) * t1192 - t2478, t2772, -qJD(4) * t1189 - t2479, t1893 * t2317, qJD(4) * t428 - t2128, qJD(4) * t426 - t2127, -t2131, -t2140, qJD(4) * t840 - t1510 * t2529 - t2766, qJD(4) * t456 - t2545 + t629, qJD(4) * t639 - qJD(5) * t853 - t2537, t2761, qJD(4) * t637 - qJD(5) * t852 - t2538, -t2514 + t2772, -qJD(4) * t119 - qJD(5) * t188 - t2135, -qJD(4) * t120 - qJD(5) * t189 - t2134, -qJD(4) * t59 - t2139, -qJD(4) * t55 - t2144, -qJD(4) * t487 + qJD(5) * t524 - t1317 * t2532 + t2771, -qJD(4) * t235 + qJD(5) * t266 - t2562 + t398, -qJD(4) * t321 + qJD(5) * t378 - qJD(6) * t548 - t2553, -qJD(4) * t486 + qJD(5) * t522 - t1316 * t2533 - t2771, -qJD(4) * t320 + qJD(5) * t376 - qJD(6) * t547 - t2554, -t2507 + t2761, -qJD(4) * t23 - qJD(5) * t30 - qJD(6) * t73 - t2152, -qJD(4) * t24 - qJD(5) * t31 - qJD(6) * t74 - t2151, -qJD(4) * t11 - qJD(5) * t13 - t2155, -qJD(4) * t7 - qJD(5) * t9 - t2162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2202, -t1712 * qJD(4), qJD(4) * t2181, -t2202, -qJD(4) * t2182, 0, -t1597 * qJD(4), -t1598 * qJD(4), 0, 0 (qJD(4) * t2314 - qJD(5) * t1698) * t1700, qJD(4) * t1412 + qJD(5) * t1414, -qJD(4) * t1568 + t1698 * t2324, t1905, qJD(4) * t1567 + t1700 * t2324, -t2202, -qJD(4) * t833 - qJD(5) * t1155, qJD(4) * t834 + qJD(5) * t1154, qJD(4) * t628, qJD(4) * t678 (qJD(4) * t1660 - qJD(6) * t1585 - t2516) * t1587, qJD(4) * t1070 + qJD(5) * t1124 + qJD(6) * t1162, qJD(4) * t1240 + qJD(5) * t1198 - t1585 * t2506 (qJD(4) * t1659 + qJD(6) * t1587 - t2517) * t1585, qJD(4) * t1239 - qJD(5) * t1197 - t1587 * t2506, t1905, qJD(4) * t388 + qJD(5) * t373 + qJD(6) * t643, qJD(4) * t389 + qJD(5) * t374 + qJD(6) * t642, qJD(4) * t296 + qJD(5) * t295, qJD(4) * t297 + qJD(5) * t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2217, -t2096, t2146 * t2422 - t2480, -t2217, -t2146 * t2425 - t2481, qJD(2) * t2196, -qJD(4) * t1704 - t1941, qJD(4) * t1701 - t1940, 0, 0, t2093 * t2314 + t2591 + t2768, t2422 * t2518 + t1347 + t2111, qJD(4) * t2316 + t2107, t2094 * t2315 + t2774, qJD(4) * t2303 + t2108, -t1926 (-t1704 * t1788 + t1784 * t2073) * qJD(4) + t1149 * qJD(5) + t1952 (t1704 * t1784 + t1788 * t2073) * qJD(4) + t1147 * qJD(5) + t1951, qJD(4) * t2089 + t1957 (-pkin(4) * t1704 + pkin(12) * t2089) * qJD(4) + t1962, -t2599 + qJD(5) * t1185 - t2748 + (t2325 + t2524) * t1660, t862 * qJD(5) - t1039 + (-t2441 - t2442) * t2399 + t2121 (-t1660 * t1788 + t1777 * t2306) * qJD(4) + t1008 * qJD(5) + t1215 * qJD(6) + t2112, -t2600 + qJD(5) * t1183 + t2748 + (t2326 + t2525) * t1659 (t1659 * t1788 - t1777 * t2310) * qJD(4) + t1007 * qJD(5) + t1216 * qJD(6) + t2113 (t2706 + t2094) * t2315 + t2774, -t1169 * t2374 + t257 * qJD(5) + t418 * qJD(6) + (pkin(12) * t1659 - t1661 * t2422 + t2457) * t2399 + t1961, t1170 * t2374 + t258 * qJD(5) + t417 * qJD(6) + (pkin(12) * t1660 - t1662 * t2422 + t2456) * t2399 + t1960 (-t1659 * t1662 + t1660 * t1661 + (-t1169 * t1787 - t1170 * t1783) * t1784) * qJD(4) + t159 * qJD(5) + t1971 (-t1169 * t1661 + t1170 * t1662 + t1439 * t2615) * qJD(4) + t161 * qJD(5) + t1981; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2778, t1937, t1698 * t2149 - t2587, t2778, t1700 * t2149 - t2588, t1753 - t2526, qJD(4) * t1149 - qJD(5) * t1433 - t1942, qJD(4) * t1147 + qJD(5) * t1432 - t1943, 0, 0, t2597 + qJD(4) * t1185 + t2769 + (-t2512 - t2524) * t1473, t862 * qJD(4) - t1698 * t2513 - t1080 + t2120, qJD(4) * t1008 + qJD(5) * t2405 - t2116, t2598 + qJD(4) * t1183 - t2769 + (t2510 - t2525) * t1469, qJD(4) * t1007 + qJD(5) * t2378 - t2117, t1861, t257 * qJD(4) + (-t1433 * t1787 + t1783 * t2167) * qJD(5) + t692 * qJD(6) + t1959, t258 * qJD(4) + (t1433 * t1783 + t1787 * t2167) * qJD(5) + t690 * qJD(6) + t1958, t159 * qJD(4) + qJD(5) * t2091 + t1970, t161 * qJD(4) + (-pkin(5) * t1433 + pkin(13) * t2091) * qJD(5) + t1982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2758, t1875, qJD(4) * t1215 + t1585 * t2215 - t2595, t2758, qJD(4) * t1216 + t1587 * t2215 - t2596, t2362 - t2528, qJD(4) * t418 + qJD(5) * t692 - qJD(6) * t997 - t1956, qJD(4) * t417 + qJD(5) * t690 + qJD(6) * t996 - t1955, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t525 - qJD(3) * t600, qJD(2) * t526 - qJD(3) * t602, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t203 - qJD(3) * t237, -qJD(2) * t206 - qJD(3) * t240, -qJD(2) * t151 - qJD(3) * t173, -qJD(2) * t54 - qJD(3) * t107 - t2566, 0, 0, 0, 0, 0, 0, -qJD(2) * t99 - qJD(3) * t129 - qJD(5) * t153 - qJD(6) * t224, -qJD(2) * t102 - qJD(3) * t132 - qJD(5) * t152 - qJD(6) * t225, qJD(2) * t70 + qJD(3) * t85 + qJD(5) * t144, -qJD(2) * t4 - qJD(3) * t40 - qJD(5) * t57 - t2581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2760, -t2097, t1192 * qJD(3) - t1575 * t1947, -t2760, t1189 * qJD(3) - t1578 * t1947, t1729, -qJD(3) * t428 + t2126, -qJD(3) * t426 + t2125, 0, 0, -qJD(3) * t840 + t1788 * t2333 + t2767, -qJD(3) * t456 - t2544 - t775, -qJD(3) * t639 + qJD(5) * t1298 - t2589, t1784 * t2321 + t2776, -qJD(3) * t637 - qJD(5) * t1295 + t2590, -t1902, qJD(3) * t119 + qJD(5) * t361 - t2133, qJD(3) * t120 + qJD(5) * t359 - t2132, qJD(3) * t59 - t2138, qJD(3) * t55 - t2141, qJD(3) * t487 + qJD(5) * t598 - t1287 * t2532 - t2747, qJD(3) * t235 + qJD(5) * t333 - t2563 - t471, qJD(3) * t321 - qJD(5) * t441 + qJD(6) * t605 - t2555, qJD(3) * t486 + qJD(5) * t596 - t1286 * t2533 + t2747, qJD(3) * t320 + qJD(5) * t443 - qJD(6) * t606 - t2556 (t2461 + t2706) * t1295 + t2776, qJD(3) * t23 - qJD(5) * t49 - qJD(6) * t89 - t2150, qJD(3) * t24 - qJD(5) * t50 - qJD(6) * t90 - t2145, qJD(3) * t11 - qJD(5) * t19 - t2154, qJD(3) * t7 - qJD(5) * t15 - t2160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2217, t2096, -qJD(3) * t2181 + t2480, t2217, qJD(3) * t2182 + t2481, qJD(2) * t2195, t1941, t1940, 0, 0, -t1700 * t2205 - t2591 + t2768, t1347 - t2111, -qJD(5) * t2314 - t2107, -t1698 * t2200 + t2775, qJD(5) * t2315 - t2108, t1926, qJD(5) * t1148 - t1952, qJD(5) * t1146 - t1951, -t1957, -t1962, qJD(5) * t1186 - t1660 * t2524 + t2599 - t2748, qJD(5) * t863 - t1039 - t2121, -qJD(5) * t1005 - qJD(6) * t1214 - t2112, qJD(5) * t1184 - t1659 * t2525 + t2600 + t2748, -qJD(5) * t1006 - qJD(6) * t1213 - t2113 (-t2436 + t2707) * t2315 + t2775, -qJD(5) * t255 - qJD(6) * t415 - t1961, -qJD(5) * t256 - qJD(6) * t416 - t1960, -qJD(5) * t158 - t1971, -qJD(5) * t160 - t1981; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2307, t1762 * qJD(5), 0, -t2307, 0, 0, -pkin(4) * t2511, -pkin(4) * t2509, 0, 0, t1778 * t2307 - t2203, -qJD(6) * t1726 - 0.2e1 * t1788 * t2204, -qJD(5) * t1728 + t1784 * t2323, t1776 * t2307 + t2203, qJD(5) * t1727 + t1784 * t2322, -t2307, -qJD(5) * t1377 - qJD(6) * t1572, qJD(5) * t1378 + qJD(6) * t1571, -qJD(5) * t1046, qJD(5) * t1152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2024, t1936, -t1788 * t2149 + t2530, -t2024, t1784 * t2149 - t2531, -t1986, -pkin(12) * t2509 - t1918, pkin(12) * t2511 - t1919, 0, 0, -t2432 + (t1778 * t2399 + t1765) * t1788 + t2118, t1736 + (-0.2e1 * t2199 + t2513) * t1788 + t2124, qJD(5) * t2403 + t1939, t2432 + (t1776 * t2399 - t1765) * t1788 + t2119, qJD(5) * t2393 + t1938, -t1898 (t1783 * t2166 - t2357) * qJD(5) + t1534 * qJD(6) + t1883 (t1787 * t2166 + t2360) * qJD(5) + t1533 * qJD(6) + t1882, qJD(5) * t2087 + t1884 (-pkin(5) * t2606 + pkin(13) * t2087) * qJD(5) + t1889; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2763, -t1843, t1783 * t2104 - t2114, t2763, t1787 * t2104 + t2115, t1772 + t2753, qJD(5) * t1534 - qJD(6) * t1662 - t1880, qJD(5) * t1533 + qJD(6) * t1661 - t1881, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t313 - qJD(3) * t367, qJD(2) * t314 - qJD(3) * t365, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t125 - qJD(3) * t146 + qJD(4) * t153, -qJD(2) * t128 - qJD(3) * t149 + qJD(4) * t152, -qJD(2) * t77 - qJD(3) * t93 - qJD(4) * t144, -qJD(2) * t6 - qJD(3) * t44 + qJD(4) * t57 - t2579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2779, -t1950, qJD(3) * t853 + t2321 - t2519, -t2779, qJD(3) * t852 + t2333 + t2520, t1352, qJD(3) * t188 - qJD(4) * t361 + t2129, qJD(3) * t189 - qJD(4) * t359 + t2130, 0, 0, -qJD(3) * t524 - qJD(4) * t598 + t1787 * t2336 + t2770, -qJD(3) * t266 - qJD(4) * t333 - t2561 - t479, -qJD(3) * t378 + qJD(4) * t441 + qJD(6) * t974 - t2593, -qJD(3) * t522 - qJD(4) * t596 + t1783 * t2337 - t2770, -qJD(3) * t376 - qJD(4) * t443 - qJD(6) * t970 + t2594, -t1864, qJD(3) * t30 + qJD(4) * t49 + qJD(6) * t166 - t2143, qJD(3) * t31 + qJD(4) * t50 + qJD(6) * t164 - t2142, qJD(3) * t13 + qJD(4) * t19 - t2153, qJD(3) * t9 + qJD(4) * t15 - t2161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2778, -t1937, -t2094 * t2422 + t2587, -t2778, -t2093 * t2422 + t2588, t1753 + t2526, -qJD(4) * t1148 + t1942, -qJD(4) * t1146 + t1943, 0, 0, -qJD(4) * t1186 + t1787 * t2328 - t2597 + t2769, -qJD(4) * t863 - t1080 - t2120, qJD(4) * t1005 + qJD(6) * t1473 + t2116, -qJD(4) * t1184 + t1783 * t2329 - t2598 - t2769, qJD(4) * t1006 - qJD(6) * t1469 + t2117, -t1861, qJD(4) * t255 + qJD(6) * t691 - t1959, qJD(4) * t256 + qJD(6) * t689 - t1958, qJD(4) * t158 - t1970, qJD(4) * t160 - t1982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2024, -t1936, t2205 - t2530, t2024, -t2200 + t2531, t1986, t1918, t1919, 0, 0, -t1766 * t1778 - t2118 - t2432, t1788 * t2159 + t1736 - t2124, -t1939 - t2322, -t1766 * t1776 - t2119 + t2432, -t1938 + t2323, t1898, qJD(6) * t1584 - t1883, -qJD(6) * t1583 - t1882, -t1884, -t1889; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2311, t1761 * qJD(6), 0, -t2311, 0, 0, -pkin(5) * t2505, -pkin(5) * t2504, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2757, -t1842, -t1787 * t2214 + t2109, t2757, t1783 * t2214 + t2110, -t1920, -pkin(13) * t2504 - t1867, pkin(13) * t2505 - t1868, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t184 + qJD(3) * t209 + qJD(4) * t224, qJD(2) * t185 + qJD(3) * t210 + qJD(4) * t225, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2759, -t1879, qJD(3) * t548 - qJD(4) * t605 + t2337 - t2585, -t2759, qJD(3) * t547 + qJD(4) * t606 + t2336 + t2586, t894, qJD(3) * t73 + qJD(4) * t89 - qJD(5) * t166 + t2136, qJD(3) * t74 + qJD(4) * t90 - qJD(5) * t164 + t2137, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2758, -t1875, qJD(4) * t1214 + t2329 - t2516 + t2595, -t2758, qJD(4) * t1213 + t2328 + t2517 + t2596, t2362 + t2528, qJD(4) * t415 - qJD(5) * t691 + t1956, qJD(4) * t416 - qJD(5) * t689 + t1955, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2763, t1843 (-t2326 + t2510) * t1788 + t2114, -t2763 (-t2325 - t2512) * t1788 - t2115, t1772 - t2753, -qJD(5) * t1584 + t1880, qJD(5) * t1583 + t1881, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2757, t1842, t1787 * t2374 - t2109, -t2757, -t1783 * t2374 - t2110, t1920, t1867, t1868, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
