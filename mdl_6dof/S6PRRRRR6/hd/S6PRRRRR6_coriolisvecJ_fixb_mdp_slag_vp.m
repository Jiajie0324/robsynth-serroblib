% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6PRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d2,d3,d4,d5,d6,theta1]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRRRR6_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6PRRRRR6_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR6_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR6_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PRRRRR6_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [14x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6PRRRRR6_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:25:38
% EndTime: 2019-03-09 01:26:11
% DurationCPUTime: 19.67s
% Computational Cost: add. (14682->704), mult. (43711->1013), div. (0->0), fcn. (37529->16), ass. (0->300)
t713 = cos(pkin(7));
t723 = cos(qJ(3));
t724 = cos(qJ(2));
t860 = t723 * t724;
t718 = sin(qJ(3));
t719 = sin(qJ(2));
t867 = t718 * t719;
t746 = -t713 * t867 + t860;
t836 = qJD(3) * t723;
t809 = t713 * t836;
t711 = sin(pkin(6));
t842 = qJD(1) * t711;
t917 = -pkin(2) * t809 + t746 * t842;
t710 = sin(pkin(7));
t712 = cos(pkin(8));
t891 = pkin(11) * t712;
t778 = t710 * (-pkin(10) - t891);
t755 = t718 * t778;
t916 = qJD(3) * t755 - t917;
t872 = t713 * t718;
t825 = pkin(2) * t872;
t637 = (t723 * t778 - t825) * qJD(3);
t864 = t719 * t723;
t865 = t718 * t724;
t748 = -t713 * t864 - t865;
t652 = t748 * t842;
t709 = sin(pkin(8));
t892 = pkin(11) * t709;
t754 = pkin(3) * t718 - t723 * t892;
t738 = t754 * qJD(3);
t663 = t710 * t738;
t814 = t719 * t842;
t788 = t710 * t814;
t850 = (t663 - t788) * t712 + (-t637 + t652) * t709;
t722 = cos(qJ(4));
t862 = t722 * t723;
t717 = sin(qJ(4));
t869 = t717 * t718;
t750 = -t712 * t869 + t862;
t840 = qJD(2) * t710;
t653 = t750 * t840;
t834 = qJD(4) * t722;
t807 = t709 * t834;
t915 = -t653 + t807;
t681 = pkin(10) * t840 + t814;
t823 = t710 * t891;
t803 = t724 * t842;
t890 = qJD(2) * pkin(2);
t691 = t803 + t890;
t714 = cos(pkin(6));
t841 = qJD(1) * t714;
t815 = t710 * t841;
t693 = t723 * t815;
t871 = t713 * t723;
t845 = t691 * t871 + t693;
t590 = (-qJD(2) * t823 - t681) * t718 + t845;
t873 = t712 * t723;
t812 = qJD(2) * t873;
t861 = t723 * t681;
t591 = -t691 * t872 - t861 + (-pkin(11) * t812 - t718 * t841) * t710;
t662 = t754 * t840;
t875 = t712 * t717;
t879 = t709 * t717;
t700 = pkin(11) * t879;
t874 = t712 * t722;
t900 = pkin(3) * t874 - t700;
t914 = t900 * qJD(4) - t722 * t590 - t591 * t875 - t662 * t879;
t877 = t710 * t723;
t626 = t825 + pkin(10) * t877 + (t709 * t713 + t710 * t873) * pkin(11);
t635 = (pkin(2) * t723 + pkin(3)) * t713 + t755;
t753 = -pkin(3) * t723 - t718 * t892;
t659 = (-pkin(2) + t753) * t710;
t734 = t652 * t712 + t709 * t788;
t805 = t712 * t834;
t835 = qJD(4) * t717;
t913 = -t626 * t835 + t635 * t805 + t637 * t875 + t659 * t807 + t663 * t879 - t717 * t734 + t916 * t722;
t837 = qJD(3) * t710;
t811 = t718 * t837;
t783 = t709 * t811;
t912 = -pkin(12) * t783 - t913;
t898 = t712 * t862 - t869;
t588 = t713 * t807 + (t750 * qJD(3) + qJD(4) * t898) * t710;
t866 = t718 * t722;
t868 = t717 * t723;
t751 = t712 * t868 + t866;
t752 = t712 * t866 + t868;
t893 = qJD(3) * t752 + qJD(4) * t751;
t726 = t893 * t710;
t808 = t709 * t835;
t589 = t713 * t808 + t726;
t911 = pkin(4) * t589 - pkin(12) * t588 + t850;
t813 = t718 * t840;
t786 = t709 * t813;
t910 = pkin(12) * t786 - t914;
t551 = -t591 * t709 + t712 * t662;
t651 = t752 * t840;
t908 = pkin(4) * t651 - pkin(12) * t653 + t551 - (pkin(4) * t717 - pkin(12) * t722) * t709 * qJD(4);
t806 = t712 * t835;
t907 = t626 * t834 + t635 * t806 + t659 * t808 + t916 * t717 + t722 * t734;
t716 = sin(qJ(5));
t721 = cos(qJ(5));
t675 = -t721 * t712 + t716 * t879;
t849 = -qJD(5) * t675 - t716 * t786 + t915 * t721;
t676 = t712 * t716 + t721 * t879;
t848 = qJD(5) * t676 + t915 * t716 + t721 * t786;
t906 = t651 - t808;
t878 = t709 * t722;
t844 = pkin(3) * t875 + pkin(11) * t878;
t905 = t844 * qJD(4) - t717 * t590;
t706 = t710 ^ 2;
t904 = (t718 * t723 * MDP(5) - (t718 ^ 2 - t723 ^ 2) * MDP(6)) * t706;
t782 = t710 * t812;
t685 = t722 * t782;
t839 = qJD(2) * t713;
t793 = qJD(3) + t839;
t756 = t793 * t709;
t784 = t717 * t813;
t614 = -t722 * t756 - t685 + t784;
t613 = qJD(5) + t614;
t736 = t751 * t710;
t616 = qJD(2) * t736 + t717 * t756;
t822 = t709 * t877;
t692 = qJD(2) * t822;
t827 = t692 - qJD(4);
t735 = -t712 * t793 + t827;
t647 = t721 * t735;
t575 = t616 * t716 + t647;
t573 = qJD(6) + t575;
t857 = -t637 * t874 + (-pkin(4) * t811 - t663 * t722) * t709 + t907;
t585 = -t635 * t709 + t712 * t659;
t629 = -t710 * t898 - t713 * t878;
t632 = t713 * t879 + t736;
t529 = pkin(4) * t629 - pkin(12) * t632 + t585;
t876 = t712 * t713;
t673 = t822 - t876;
t817 = t722 * t626 + t635 * t875 + t659 * t879;
t534 = -pkin(12) * t673 + t817;
t830 = qJD(5) * t721;
t832 = qJD(5) * t716;
t902 = -t529 * t830 + t534 * t832 - t911 * t716 + t721 * t912;
t901 = t716 * t529 + t721 * t534;
t666 = pkin(12) * t712 + t844;
t667 = (-pkin(4) * t722 - pkin(12) * t717 - pkin(3)) * t709;
t847 = t721 * t666 + t716 * t667;
t846 = t591 * t874 - (-pkin(4) * t813 - t662 * t722) * t709 + t905;
t899 = t666 * t832 - t667 * t830 + t716 * t908 + t721 * t910;
t787 = t713 * t814;
t779 = qJD(2) * t803;
t816 = qJD(3) * t693 + t691 * t809 + t723 * t779;
t838 = qJD(3) * t681;
t549 = (-t838 + (-qJD(3) * t823 - t787) * qJD(2)) * t718 + t816;
t550 = qJD(2) * t652 + qJD(3) * t591;
t745 = t691 * t713 + t815;
t574 = t861 + t745 * t718 + (t756 + t782) * pkin(11);
t580 = pkin(3) * t793 + t590;
t699 = t713 * t841;
t603 = t699 + (qJD(2) * t753 - t691) * t710;
t623 = (t738 + t814) * t840;
t731 = -t722 * t549 - t550 * t875 + t574 * t835 - t580 * t805 - t603 * t807 - t623 * t879;
t826 = qJD(2) * qJD(3);
t802 = t710 * t826;
t781 = t718 * t802;
t757 = t709 * t781;
t476 = pkin(12) * t757 - t731;
t510 = t722 * t574 + t580 * t875 + t603 * t879;
t502 = -pkin(12) * t735 + t510;
t535 = -t580 * t709 + t712 * t603;
t508 = pkin(4) * t614 - pkin(12) * t616 + t535;
t481 = t502 * t721 + t508 * t716;
t524 = -t550 * t709 + t712 * t623;
t742 = qJD(4) * t756;
t780 = t723 * t802;
t791 = -t712 * qJD(3) - qJD(4);
t578 = qJD(4) * t685 + t784 * t791 + (t742 + t780) * t722;
t737 = t717 * t742;
t579 = qJD(2) * t726 + t737;
t496 = pkin(4) * t579 - pkin(12) * t578 + t524;
t463 = -qJD(5) * t481 - t476 * t716 + t721 * t496;
t461 = -pkin(5) * t579 - t463;
t577 = t721 * t616 - t716 * t735;
t897 = t573 * (pkin(5) * t577 + pkin(13) * t573) + t461;
t509 = -t717 * t574 + t722 * (t580 * t712 + t603 * t709);
t896 = -t717 * t626 + t722 * (t635 * t712 + t659 * t709);
t747 = t713 * t865 + t864;
t631 = t710 * t714 * t718 + t711 * t747;
t749 = t713 * t860 - t867;
t630 = t711 * t749 + t714 * t877;
t674 = -t710 * t711 * t724 + t713 * t714;
t761 = t630 * t712 + t674 * t709;
t895 = -t631 * t717 + t722 * t761;
t894 = -qJD(5) * t901 + t716 * t912 + t911 * t721;
t725 = qJD(2) ^ 2;
t517 = -qJD(5) * t647 + t721 * t578 - t616 * t832 + t716 * t757;
t715 = sin(qJ(6));
t720 = cos(qJ(6));
t828 = qJD(6) * t720;
t819 = t720 * t517 + t715 * t579 + t613 * t828;
t829 = qJD(6) * t715;
t483 = -t577 * t829 + t819;
t888 = t483 * t715;
t883 = t577 * t715;
t536 = -t720 * t613 + t883;
t887 = t536 * t573;
t538 = t577 * t720 + t613 * t715;
t886 = t538 * t573;
t885 = t575 * t613;
t884 = t577 * t613;
t882 = t614 * t721;
t656 = -t691 * t710 + t699;
t880 = t656 * t710;
t797 = t716 * t578 - t721 * t757;
t518 = qJD(5) * t577 + t797;
t870 = t715 * t518;
t863 = t720 * t518;
t859 = -pkin(5) * t589 - t894;
t858 = t510 - t613 * (pkin(5) * t716 - pkin(13) * t721);
t555 = pkin(4) * t616 + pkin(12) * t614;
t856 = t721 * t509 + t716 * t555;
t853 = t906 * pkin(5) + qJD(5) * t847 - t716 * t910 + t908 * t721;
t640 = t676 * t715 + t720 * t878;
t852 = -qJD(6) * t640 - t715 * t906 + t720 * t849;
t821 = t715 * t878;
t851 = -qJD(6) * t821 + t676 * t828 + t715 * t849 + t720 * t906;
t833 = qJD(5) * t715;
t831 = qJD(5) * t720;
t810 = t710 * t836;
t462 = t721 * t476 + t716 * t496 - t502 * t832 + t508 * t830;
t460 = pkin(13) * t579 + t462;
t479 = -t717 * t549 + t550 * t874 - t574 * t834 - t580 * t806 - t603 * t808 + t623 * t878;
t477 = -pkin(4) * t757 - t479;
t467 = pkin(5) * t518 - pkin(13) * t517 + t477;
t800 = -t460 * t715 + t720 * t467;
t798 = t517 * t715 - t720 * t579;
t796 = t573 * t720;
t795 = t721 * t613;
t696 = -pkin(5) * t721 - pkin(13) * t716 - pkin(4);
t794 = pkin(13) * t616 - qJD(6) * t696 + t856;
t785 = t711 * t719 * t840;
t776 = -t681 + t814;
t553 = t616 * t715 - t720 * t882;
t774 = t720 * t830 - t553;
t533 = pkin(4) * t673 - t896;
t594 = t632 * t716 + t721 * t673;
t595 = t632 * t721 - t673 * t716;
t500 = pkin(5) * t594 - pkin(13) * t595 + t533;
t773 = -pkin(13) * t589 - qJD(6) * t500 + t902;
t492 = pkin(13) * t629 + t901;
t525 = -qJD(5) * t594 + t588 * t721 + t716 * t783;
t526 = qJD(5) * t595 + t588 * t716 - t721 * t783;
t772 = -pkin(5) * t526 + pkin(13) * t525 + qJD(6) * t492 - t857;
t665 = t700 + (-pkin(3) * t722 - pkin(4)) * t712;
t596 = pkin(5) * t675 - pkin(13) * t676 + t665;
t771 = pkin(13) * t906 - qJD(6) * t596 + t899;
t598 = -pkin(13) * t878 + t847;
t770 = -pkin(5) * t848 + pkin(13) * t849 + qJD(6) * t598 - t846;
t769 = t460 * t720 + t467 * t715;
t474 = pkin(13) * t613 + t481;
t501 = pkin(4) * t735 - t509;
t482 = t575 * pkin(5) - t577 * pkin(13) + t501;
t465 = t474 * t720 + t482 * t715;
t768 = t474 * t715 - t482 * t720;
t480 = -t502 * t716 + t508 * t721;
t544 = t631 * t722 + t717 * t761;
t593 = -t630 * t709 + t674 * t712;
t520 = t544 * t721 + t593 * t716;
t766 = t520 * t720 - t715 * t895;
t765 = -t520 * t715 - t720 * t895;
t764 = t529 * t721 - t534 * t716;
t519 = t544 * t716 - t593 * t721;
t548 = t595 * t720 + t629 * t715;
t547 = t595 * t715 - t720 * t629;
t759 = -t666 * t716 + t667 * t721;
t758 = t709 ^ 2 * t781;
t744 = -t573 * t828 - t870;
t743 = -t573 * t829 + t863;
t741 = -pkin(12) * t579 + t501 * t613;
t586 = -t714 * t811 + (qJD(2) * t748 - qJD(3) * t747) * t711;
t733 = t586 * t712 + t709 * t785;
t732 = -qJD(2) * t787 - t838;
t473 = -pkin(5) * t613 - t480;
t729 = -pkin(13) * t518 + (t473 + t480) * t573;
t728 = qJD(4) * t735;
t727 = -t713 * t745 + t880;
t641 = t676 * t720 - t821;
t597 = pkin(5) * t878 - t759;
t587 = t714 * t810 + (qJD(2) * t746 + qJD(3) * t749) * t711;
t557 = -t586 * t709 + t712 * t785;
t552 = -t720 * t616 - t715 * t882;
t499 = qJD(4) * t895 + t587 * t722 + t733 * t717;
t498 = qJD(4) * t544 + t587 * t717 - t722 * t733;
t491 = -pkin(5) * t629 - t764;
t490 = qJD(6) * t548 + t525 * t715 - t720 * t589;
t489 = -qJD(6) * t547 + t525 * t720 + t589 * t715;
t487 = -pkin(5) * t616 + t509 * t716 - t555 * t721;
t484 = qJD(6) * t538 + t798;
t471 = -qJD(5) * t519 + t499 * t721 + t557 * t716;
t470 = qJD(5) * t520 + t499 * t716 - t557 * t721;
t459 = -qJD(6) * t465 + t800;
t458 = -qJD(6) * t768 + t769;
t1 = [(t586 * t793 + t674 * t781) * MDP(10) + (-t587 * t793 + t674 * t780) * MDP(11) + (t498 * t735 + t557 * t614 + t593 * t579 + t757 * t895) * MDP(17) + (t499 * t735 - t544 * t757 + t557 * t616 + t593 * t578) * MDP(18) + (-t470 * t613 + t498 * t575 - t518 * t895 - t519 * t579) * MDP(24) + (-t471 * t613 + t498 * t577 - t517 * t895 - t520 * t579) * MDP(25) + ((-qJD(6) * t766 - t471 * t715 + t498 * t720) * t573 + t765 * t518 + t470 * t536 + t519 * t484) * MDP(31) + (-(qJD(6) * t765 + t471 * t720 + t498 * t715) * t573 - t766 * t518 + t470 * t538 + t519 * t483) * MDP(32) + (-MDP(4) * t724 + (-MDP(3) + (-MDP(10) * t723 + MDP(11) * t718) * t706) * t719) * t725 * t711; 0.2e1 * t904 * t826 + (t585 * t578 + t524 * t632 + t535 * t588 - t731 * t673 + (-qJD(2) * t817 - t510) * t783 + t850 * t616 + t913 * t735) * MDP(18) + (-t673 * t578 - t735 * t588 + (qJD(2) * t632 + t616) * t783) * MDP(14) + (t673 * t579 + t735 * t589 + (-qJD(2) * t629 - t614) * t783) * MDP(15) + (-(t492 * t720 + t500 * t715) * t518 - t458 * t594 - t465 * t526 + t491 * t483 + t461 * t548 + t473 * t489 + (t715 * t772 + t720 * t773) * t573 + t859 * t538) * MDP(32) + (t585 * t579 + t524 * t629 + t535 * t589 - t479 * t673 + (qJD(2) * t896 + t509) * t783 + t850 * t614 + (-(t637 * t712 + t663 * t709) * t722 + t907) * t735) * MDP(17) + (-t692 + (-t673 + t876) * qJD(2) - t791) * MDP(16) * t783 + (MDP(7) * t810 - MDP(8) * t811) * (qJD(3) + 0.2e1 * t839) + (-(t718 * t732 + t816) * t713 + (-t706 * t890 + t880) * t836 + (pkin(10) * t811 + t917) * t793) * MDP(11) + ((-t492 * t715 + t500 * t720) * t518 + t459 * t594 - t768 * t526 + t491 * t484 + t461 * t547 + t473 * t490 + (t715 * t773 - t720 * t772) * t573 + t859 * t536) * MDP(31) + (-t462 * t629 + t477 * t595 - t481 * t589 + t501 * t525 + t533 * t517 + t857 * t577 - t579 * t901 + t613 * t902) * MDP(25) + (t463 * t629 + t477 * t594 + t480 * t589 + t501 * t526 + t533 * t518 + t857 * t575 + t764 * t579 + t613 * t894) * MDP(24) + (t579 * t629 + t589 * t613) * MDP(23) + (t517 * t629 + t525 * t613 + t577 * t589 + t579 * t595) * MDP(21) + (-t518 * t629 - t526 * t613 - t575 * t589 - t579 * t594) * MDP(22) + (-t578 * t629 - t579 * t632 - t588 * t614 - t589 * t616) * MDP(13) + (t578 * t632 + t588 * t616) * MDP(12) + (t517 * t595 + t525 * t577) * MDP(19) + (-t517 * t594 - t518 * t595 - t525 * t575 - t526 * t577) * MDP(20) + (t483 * t594 + t489 * t573 + t518 * t548 + t526 * t538) * MDP(28) + (-t484 * t594 - t490 * t573 - t518 * t547 - t526 * t536) * MDP(29) + (t518 * t594 + t526 * t573) * MDP(30) + (t483 * t548 + t489 * t538) * MDP(26) + (-t483 * t547 - t484 * t548 - t489 * t536 - t490 * t538) * MDP(27) + (-t652 * t793 + (-pkin(10) * t793 * t837 + t713 * t732) * t723 + (-t713 * t779 + t727 * qJD(3) + (-qJD(3) * t713 + (-t713 ^ 2 - t706) * qJD(2)) * qJD(3) * pkin(2)) * t718) * MDP(10); -(t712 * t839 - t827) * MDP(16) * t786 + (t759 * t579 - t463 * t878 + t665 * t518 + t477 * t675 + ((-qJD(5) * t666 - t908) * t721 + (-qJD(5) * t667 + t910) * t716) * t613 + t846 * t575 + t848 * t501 - t906 * t480) * MDP(24) + (t578 * t879 + t915 * t616) * MDP(12) + (t614 * t653 + t616 * t651 + (t578 * t722 - t579 * t717 + (-t614 * t722 - t616 * t717) * qJD(4)) * t709) * MDP(13) + ((-t656 * t877 + (t718 * t776 + t845) * t713) * qJD(2) + t845 * qJD(3) - t816) * MDP(11) + (-t579 * t878 - t613 * t906) * MDP(23) + (-t517 * t878 - t577 * t906 + t579 * t676 + t613 * t849) * MDP(21) + (t518 * t878 + t575 * t906 - t579 * t675 - t613 * t848) * MDP(22) + (t517 * t676 + t577 * t849) * MDP(19) + (-t517 * t675 - t518 * t676 - t575 * t849 - t577 * t848) * MDP(20) + (-t484 * t675 - t518 * t640 - t536 * t848 - t573 * t851) * MDP(29) + (t483 * t675 + t518 * t641 + t538 * t848 + t573 * t852) * MDP(28) + (t483 * t641 + t538 * t852) * MDP(26) + (-t483 * t640 - t484 * t641 - t536 * t852 - t538 * t851) * MDP(27) + (-(t596 * t715 + t598 * t720) * t518 - t458 * t675 + t597 * t483 + t461 * t641 + (t715 * t770 + t720 * t771) * t573 + t853 * t538 + t852 * t473 - t848 * t465) * MDP(32) + (t518 * t675 + t573 * t848) * MDP(30) + (-t709 * pkin(3) * t579 - t524 * t878 + t479 * t712 - t551 * t614 + (qJD(3) * t900 - t509) * t786 - t906 * t535 + ((t591 * t712 + t662 * t709) * t722 + t905) * t735) * MDP(17) + (-t776 * t871 + (-t727 - t803) * t718) * qJD(2) * MDP(10) + ((t596 * t720 - t598 * t715) * t518 + t459 * t675 + t597 * t484 + t461 * t640 + (t715 * t771 - t720 * t770) * t573 + t853 * t536 + t851 * t473 - t848 * t768) * MDP(31) + (t731 * t712 - t551 * t616 - t535 * t653 + (t535 * t834 - pkin(3) * t578 + t524 * t717 + (-qJD(3) * t844 + t510) * t813) * t709 + t914 * t735) * MDP(18) + (t712 * t578 + t717 * t758 + t735 * t653 + (-t616 * t813 - t722 * t728) * t709) * MDP(14) + (-t712 * t579 + t722 * t758 - t735 * t651 + (t614 * t813 + t717 * t728) * t709) * MDP(15) + (t462 * t878 + t477 * t676 + t481 * t906 + t849 * t501 + t665 * t517 + t846 * t577 - t847 * t579 + t613 * t899) * MDP(25) + (-t904 + (-MDP(7) * t723 + MDP(8) * t718) * t710 * t713) * t725; -t614 ^ 2 * MDP(13) + (-t614 * t735 + t578) * MDP(14) + (-t840 * t893 - t737) * MDP(15) + MDP(16) * t757 + (-t510 * t735 + t479) * MDP(17) + (-t509 * t735 + t535 * t614 + t731) * MDP(18) + (t517 * t716 + t577 * t795) * MDP(19) + ((t517 - t885) * t721 + (-t518 - t884) * t716) * MDP(20) + (t579 * t716 + t613 * t795) * MDP(21) + (-t613 ^ 2 * t716 + t579 * t721) * MDP(22) + (-pkin(4) * t518 - t510 * t575 + (-t477 + (-pkin(12) * qJD(5) - t555) * t613) * t721 + (t509 * t613 + t741) * t716) * MDP(24) + (-pkin(4) * t517 + t477 * t716 - t510 * t577 + (pkin(12) * t832 + t856) * t613 + t741 * t721) * MDP(25) + (t483 * t716 * t720 + (-t716 * t829 + t774) * t538) * MDP(26) + (t536 * t553 + t538 * t552 + (-t536 * t720 - t538 * t715) * t830 + (-t888 - t484 * t720 + (t536 * t715 - t538 * t720) * qJD(6)) * t716) * MDP(27) + (-t483 * t721 + t774 * t573 + (t538 * t613 + t743) * t716) * MDP(28) + (t484 * t721 + (-t715 * t830 + t552) * t573 + (-t536 * t613 + t744) * t716) * MDP(29) + (t573 * t613 * t716 - t518 * t721) * MDP(30) + (t696 * t863 - t473 * t552 - t487 * t536 + (t715 * t794 - t720 * t858) * t573 + (t473 * t833 - t459 + (qJD(5) * t536 + t744) * pkin(12)) * t721 + (t473 * t828 + t461 * t715 - t613 * t768 + (t573 * t833 + t484) * pkin(12)) * t716) * MDP(31) + (-t696 * t870 - t473 * t553 - t487 * t538 + (t715 * t858 + t720 * t794) * t573 + (t473 * t831 + t458 + (qJD(5) * t538 - t743) * pkin(12)) * t721 + (-t473 * t829 + t461 * t720 - t613 * t465 + (t573 * t831 + t483) * pkin(12)) * t716) * MDP(32) + (MDP(12) * t614 + MDP(13) * t616 - MDP(15) * t735 - MDP(17) * t535 - MDP(21) * t577 + MDP(22) * t575 - MDP(23) * t613 - MDP(24) * t480 + MDP(25) * t481) * t616; -t575 ^ 2 * MDP(20) + (t517 + t885) * MDP(21) + (-t797 + t884) * MDP(22) + t579 * MDP(23) + (t481 * t613 + t463) * MDP(24) + (t480 * t613 + t501 * t575 - t462) * MDP(25) + (t538 * t796 + t888) * MDP(26) + ((t483 - t887) * t720 + (-t484 - t886) * t715) * MDP(27) + (t573 * t796 + t870) * MDP(28) + (-t573 ^ 2 * t715 + t863) * MDP(29) + (-pkin(5) * t484 - t481 * t536 + t729 * t715 - t720 * t897) * MDP(31) + (-pkin(5) * t483 - t481 * t538 + t715 * t897 + t729 * t720) * MDP(32) + (MDP(19) * t575 + MDP(20) * t577 - MDP(22) * qJD(5) - MDP(24) * t501 - MDP(28) * t538 + MDP(29) * t536 - MDP(30) * t573 + MDP(31) * t768 + MDP(32) * t465) * t577; t538 * t536 * MDP(26) + (-t536 ^ 2 + t538 ^ 2) * MDP(27) + (t819 + t887) * MDP(28) + (-t798 + t886) * MDP(29) + t518 * MDP(30) + (t465 * t573 - t473 * t538 + t800) * MDP(31) + (t473 * t536 - t573 * t768 - t769) * MDP(32) + (-MDP(28) * t883 - MDP(29) * t538 - MDP(31) * t465 + MDP(32) * t768) * qJD(6);];
tauc  = t1;
