% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP3_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:41:31
% EndTime: 2019-03-09 16:41:40
% DurationCPUTime: 3.53s
% Computational Cost: add. (7271->308), mult. (16346->500), div. (0->0), fcn. (15610->8), ass. (0->180)
t168 = cos(pkin(10));
t164 = t168 * pkin(9);
t170 = sin(qJ(3));
t212 = pkin(2) * t170 + qJ(4);
t198 = t168 * t212;
t134 = t198 + t164;
t169 = sin(qJ(5));
t167 = sin(pkin(10));
t186 = t167 * (-pkin(9) - t212);
t271 = cos(qJ(5));
t180 = t271 * t186;
t101 = t134 * t169 - t180;
t183 = t169 * t186;
t102 = t134 * t271 + t183;
t242 = t169 * t168;
t140 = t167 * t271 + t242;
t130 = t140 * qJD(5);
t221 = t271 * t168;
t279 = -t167 * t169 + t221;
t215 = qJD(5) * t271;
t234 = qJD(5) * t169;
t280 = -t167 * t234 + t168 * t215;
t272 = cos(qJ(3));
t216 = qJD(3) * t272;
t202 = pkin(2) * t216;
t151 = t202 + qJD(4);
t62 = -qJD(5) * t180 - t151 * t221 + (qJD(5) * t134 + t151 * t167) * t169;
t63 = qJD(5) * t183 + t134 * t215 + t140 * t151;
t276 = t101 * t280 - t102 * t130 + t140 * t63 - t279 * t62;
t286 = 0.2e1 * t276;
t148 = qJ(4) * t168 + t164;
t268 = pkin(9) + qJ(4);
t214 = t268 * t167;
t187 = t271 * t214;
t116 = t148 * t169 + t187;
t117 = t148 * t271 - t169 * t214;
t213 = t271 * qJD(4);
t89 = qJD(5) * t187 - t168 * t213 + (qJD(4) * t167 + qJD(5) * t148) * t169;
t90 = t148 * t215 + qJD(4) * t242 + (-t234 * t268 + t213) * t167;
t277 = t116 * t280 - t117 * t130 + t140 * t90 - t279 * t89;
t285 = 0.2e1 * t277;
t165 = t167 ^ 2;
t166 = t168 ^ 2;
t281 = t166 + t165;
t284 = t277 + t276;
t283 = -0.2e1 * t130 * t140 + 0.2e1 * t279 * t280;
t172 = cos(qJ(2));
t223 = t272 * t172;
t200 = qJD(2) * t223;
t171 = sin(qJ(2));
t241 = t170 * t171;
t278 = qJD(2) + qJD(3);
t113 = -t172 * t216 + t241 * t278 - t200;
t240 = t170 * t172;
t142 = t171 * t272 + t240;
t114 = t278 * t142;
t141 = -t223 + t241;
t189 = t113 * t141 - t114 * t142;
t282 = 0.2e1 * t189;
t275 = 2 * qJD(6);
t274 = -pkin(8) - pkin(7);
t38 = t113 * t279 + t142 * t130;
t39 = -t140 * t113 + t142 * t280;
t245 = t167 * t113;
t149 = t274 * t171;
t150 = t274 * t172;
t121 = t149 * t170 - t150 * t272;
t224 = qJD(2) * t274;
t144 = t171 * t224;
t78 = qJD(3) * t121 + t170 * t144 - t200 * t274;
t48 = -pkin(4) * t245 + t78;
t98 = t279 * t142;
t13 = t39 * pkin(5) + t38 * qJ(6) - t98 * qJD(6) + t48;
t120 = -t149 * t272 - t150 * t170;
t248 = t142 * t167;
t95 = pkin(4) * t248 + t120;
t97 = t140 * t142;
t37 = pkin(5) * t97 - qJ(6) * t98 + t95;
t273 = -t13 * t279 + t130 * t37;
t270 = t114 * pkin(5);
t269 = t168 * pkin(4);
t267 = -t13 * t140 - t280 * t37;
t266 = t130 * t95 - t279 * t48;
t265 = t140 * t48 + t280 * t95;
t160 = -pkin(2) * t172 - pkin(1);
t107 = pkin(3) * t141 - qJ(4) * t142 + t160;
t65 = t107 * t168 - t121 * t167;
t46 = pkin(4) * t141 - t142 * t164 + t65;
t66 = t107 * t167 + t121 * t168;
t50 = -pkin(9) * t248 + t66;
t25 = t169 * t46 + t271 * t50;
t235 = qJD(3) * t170;
t161 = pkin(2) * t235;
t87 = pkin(5) * t130 - qJ(6) * t280 - qJD(6) * t140;
t79 = t161 + t87;
t157 = -pkin(3) - t269;
t105 = -pkin(5) * t279 - qJ(6) * t140 + t157;
t226 = t272 * pkin(2);
t96 = -t226 + t105;
t263 = t130 * t96 - t279 * t79;
t262 = -t140 * t79 - t280 * t96;
t261 = t105 * t130 - t279 * t87;
t260 = -t105 * t280 - t140 * t87;
t258 = t120 * t78;
t77 = -t144 * t272 - t149 * t216 - t150 * t235 - t224 * t240;
t257 = t167 * t77;
t256 = t168 * t77;
t232 = t171 * qJD(2);
t225 = pkin(2) * t232;
t179 = t114 * pkin(3) - t142 * qJD(4) + t225;
t177 = qJ(4) * t113 + t179;
t32 = t168 * t177 + t257;
t255 = t32 * t167;
t253 = t78 * t168;
t250 = t114 * qJ(6);
t247 = t157 * t280;
t246 = t157 * t130;
t244 = t168 * t113;
t159 = -t226 - pkin(3);
t147 = t159 - t269;
t239 = t130 * t147 - t161 * t279;
t238 = t140 * t161 + t147 * t280;
t237 = t281 * t151;
t236 = t281 * qJD(4);
t233 = t141 * qJD(6);
t231 = t172 * qJD(2);
t230 = 0.2e1 * t97 * t39;
t229 = -0.2e1 * pkin(1) * qJD(2);
t228 = -0.2e1 * t279 * t130;
t94 = 0.2e1 * t141 * t114;
t227 = -0.2e1 * t142 * t113;
t103 = t167 * t244;
t219 = t171 * t231;
t24 = -t169 * t50 + t271 * t46;
t176 = t113 * t268 + t179;
t173 = t114 * pkin(4) + t168 * t176 + t257;
t174 = t167 * t176 - t256;
t7 = -t169 * t173 - t174 * t271 - t215 * t46 + t234 * t50;
t8 = -t169 * t174 + t173 * t271 - t215 * t50 - t234 * t46;
t218 = -t130 * t25 - t140 * t8 - t24 * t280 - t279 * t7;
t2 = t233 - t7 + t250;
t21 = qJ(6) * t141 + t25;
t22 = -pkin(5) * t141 - t24;
t4 = -t8 - t270;
t217 = -t130 * t21 + t140 * t4 + t2 * t279 + t22 * t280;
t211 = t101 * t63 - t102 * t62;
t210 = t116 * t90 - t117 * t89;
t205 = t281 * qJ(4);
t204 = t167 * t161;
t203 = t168 * t161;
t199 = t38 * t97 - t39 * t98;
t197 = t114 * t97 + t141 * t39;
t196 = t130 * t97 - t279 * t39;
t33 = t167 * t177 - t256;
t14 = t168 * t33 - t255;
t195 = -t167 * t65 + t168 * t66;
t194 = -t101 * t114 - t141 * t63;
t193 = t102 * t114 - t141 * t62;
t192 = -t113 * t120 + t142 * t78;
t191 = -t114 * t116 - t141 * t90;
t190 = -t114 * t117 + t141 * t89;
t56 = -t114 * t279 + t130 * t141;
t185 = -t101 * t38 - t102 * t39 + t62 * t97 + t63 * t98;
t184 = -t116 * t38 - t117 * t39 + t89 * t97 + t90 * t98;
t182 = t101 * t90 - t102 * t89 + t116 * t63 - t117 * t62;
t181 = pkin(3) * t113 - qJ(4) * t114 - qJD(4) * t141;
t12 = -t130 * t98 - t140 * t39 - t279 * t38 - t280 * t97;
t178 = t281 * t212;
t175 = -t159 * t113 - t114 * t212 - t151 * t141 + t142 * t161;
t112 = 0.2e1 * t140 * t280;
t109 = t168 * t114;
t108 = t167 * t114;
t88 = -pkin(5) * t280 - qJ(6) * t130 + qJD(6) * t279;
t71 = t78 * t167;
t64 = (t165 - t166) * t113;
t57 = t114 * t140 + t141 * t280;
t30 = -0.2e1 * t98 * t38;
t27 = -t140 * t38 + t280 * t98;
t23 = 0.2e1 * t114 * t98 - 0.2e1 * t141 * t38;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t219, 0.2e1 * (-t171 ^ 2 + t172 ^ 2) * qJD(2), 0, -0.2e1 * t219, 0, 0, t171 * t229, t172 * t229, 0, 0, t227, t282, 0, t94, 0, 0, 0.2e1 * t114 * t160 + 0.2e1 * t141 * t225, -0.2e1 * t113 * t160 + 0.2e1 * t142 * t225, -0.2e1 * t114 * t121 + 0.2e1 * t141 * t77 + 0.2e1 * t192, -0.2e1 * t121 * t77 + 0.2e1 * t160 * t225 + 0.2e1 * t258, t166 * t227, 0.4e1 * t142 * t103, -0.2e1 * t189 * t168, t165 * t227, t167 * t282, t94, 0.2e1 * t65 * t114 + 0.2e1 * t32 * t141 + 0.2e1 * t167 * t192, -0.2e1 * t66 * t114 - 0.2e1 * t33 * t141 + 0.2e1 * t168 * t192, 0.2e1 * (-t167 * t33 - t168 * t32) * t142 + 0.2e1 * (t167 * t66 + t168 * t65) * t113, 0.2e1 * t32 * t65 + 0.2e1 * t33 * t66 + 0.2e1 * t258, t30, 0.2e1 * t199, t23, t230, -0.2e1 * t197, t94, 0.2e1 * t114 * t24 + 0.2e1 * t141 * t8 + 0.2e1 * t39 * t95 + 0.2e1 * t48 * t97, -0.2e1 * t114 * t25 + 0.2e1 * t141 * t7 - 0.2e1 * t38 * t95 + 0.2e1 * t48 * t98, 0.2e1 * t24 * t38 - 0.2e1 * t25 * t39 + 0.2e1 * t7 * t97 - 0.2e1 * t8 * t98, 0.2e1 * t24 * t8 - 0.2e1 * t25 * t7 + 0.2e1 * t48 * t95, t30, t23, -0.2e1 * t199, t94, 0.2e1 * t197, t230, -0.2e1 * t114 * t22 + 0.2e1 * t13 * t97 - 0.2e1 * t141 * t4 + 0.2e1 * t37 * t39, -0.2e1 * t2 * t97 - 0.2e1 * t21 * t39 - 0.2e1 * t22 * t38 + 0.2e1 * t4 * t98, 0.2e1 * t114 * t21 - 0.2e1 * t13 * t98 + 0.2e1 * t141 * t2 + 0.2e1 * t37 * t38, 0.2e1 * t13 * t37 + 0.2e1 * t2 * t21 + 0.2e1 * t22 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, 0, -t232, 0, -pkin(7) * t231, pkin(7) * t232, 0, 0, 0, 0, -t113, 0, -t114, 0, -t78, t77 (t272 * t113 - t114 * t170 + (-t141 * t272 + t142 * t170) * qJD(3)) * pkin(2) (-t272 * t78 - t170 * t77 + (t120 * t170 + t121 * t272) * qJD(3)) * pkin(2), -t103, t64, t108, t103, t109, 0, t167 * t175 - t253, t168 * t175 + t71, t14, t120 * t161 + t151 * t195 + t78 * t159 + t198 * t33 - t212 * t255, t27, t12, t57, t196, -t56, 0, t147 * t39 + t161 * t97 + t194 + t266, -t147 * t38 + t161 * t98 - t193 + t265, t185 + t218, -t101 * t8 - t102 * t7 + t147 * t48 + t161 * t95 - t24 * t63 - t25 * t62, t27, t57, -t12, 0, t56, t196, t39 * t96 + t79 * t97 + t194 + t273, t185 + t217, t38 * t96 - t79 * t98 + t193 + t267, t101 * t4 + t102 * t2 + t13 * t96 - t21 * t62 + t22 * t63 + t37 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t161, -0.2e1 * t202, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t203, 0.2e1 * t204, 0.2e1 * t237, 0.2e1 * t151 * t178 + 0.2e1 * t159 * t161, t112, t283, 0, t228, 0, 0, 0.2e1 * t239, 0.2e1 * t238, t286, 0.2e1 * t147 * t161 + 0.2e1 * t211, t112, 0, -t283, 0, 0, t228, 0.2e1 * t263, t286, 0.2e1 * t262, 0.2e1 * t79 * t96 + 0.2e1 * t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, 0, -t114, 0, -t78, t77, 0, 0, -t103, t64, t108, t103, t109, 0, t167 * t181 - t253, t168 * t181 + t71, t14, -t78 * pkin(3) + qJ(4) * t14 + qJD(4) * t195, t27, t12, t57, t196, -t56, 0, t157 * t39 + t191 + t266, -t157 * t38 + t190 + t265, t184 + t218, -t116 * t8 - t117 * t7 + t157 * t48 - t24 * t90 - t25 * t89, t27, t57, -t12, 0, t56, t196, t105 * t39 + t87 * t97 + t191 + t273, t184 + t217, t105 * t38 - t87 * t98 - t190 + t267, t105 * t13 + t116 * t4 + t117 * t2 - t21 * t89 + t22 * t90 + t37 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161, -t202, 0, 0, 0, 0, 0, 0, 0, 0, -t203, t204, t236 + t237, -pkin(3) * t161 + qJD(4) * t178 + t151 * t205, t112, t283, 0, t228, 0, 0, t239 + t246, t238 + t247, t284, t157 * t161 + t182, t112, 0, -t283, 0, 0, t228, t261 + t263, t284, t260 + t262, t105 * t79 + t87 * t96 + t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t236, 0.2e1 * qJD(4) * t205, t112, t283, 0, t228, 0, 0, 0.2e1 * t246, 0.2e1 * t247, t285, 0.2e1 * t210, t112, 0, -t283, 0, 0, t228, 0.2e1 * t261, t285, 0.2e1 * t260, 0.2e1 * t105 * t87 + 0.2e1 * t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245, -t244, 0, t78, 0, 0, 0, 0, 0, 0, t39, -t38, 0, t48, 0, 0, 0, 0, 0, 0, t39, 0, t38, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, 0, 0, 0, 0, 0, 0, t130, t280, 0, t161, 0, 0, 0, 0, 0, 0, t130, 0, -t280, t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, t280, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, -t280, t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, 0, -t39, t114, t8, t7, 0, 0, 0, -t38, 0, t114, t39, 0, t8 + 0.2e1 * t270, pkin(5) * t38 - qJ(6) * t39 - qJD(6) * t97, 0.2e1 * t233 - t7 + 0.2e1 * t250, -pkin(5) * t4 + qJ(6) * t2 + qJD(6) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, 0, -t130, 0, -t63, t62, 0, 0, 0, t280, 0, 0, t130, 0, -t63, t88, -t62, -pkin(5) * t63 - qJ(6) * t62 + qJD(6) * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, 0, -t130, 0, -t90, t89, 0, 0, 0, t280, 0, 0, t130, 0, -t90, t88, -t89, -pkin(5) * t90 - qJ(6) * t89 + qJD(6) * t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, qJ(6) * t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, -t38, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, 0, t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
