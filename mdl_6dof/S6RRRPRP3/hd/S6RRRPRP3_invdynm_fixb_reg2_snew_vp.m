% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 07:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPRP3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP3_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP3_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP3_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP3_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 07:41:35
% EndTime: 2019-05-07 07:42:39
% DurationCPUTime: 67.39s
% Computational Cost: add. (361562->947), mult. (751057->1220), div. (0->0), fcn. (551383->10), ass. (0->633)
t2058 = sin(qJ(3));
t2059 = sin(qJ(2));
t2062 = cos(qJ(3));
t2063 = cos(qJ(2));
t2023 = (t2058 * t2063 + t2059 * t2062) * qJD(1);
t2052 = qJD(2) + qJD(3);
t2055 = sin(pkin(10));
t2056 = cos(pkin(10));
t1988 = t2023 * t2055 - t2052 * t2056;
t1989 = t2023 * t2056 + t2052 * t2055;
t2057 = sin(qJ(5));
t2061 = cos(qJ(5));
t1939 = -t1988 * t2057 + t1989 * t2061;
t1935 = t1939 ^ 2;
t2188 = qJD(1) * t2063;
t2189 = qJD(1) * t2059;
t2021 = t2058 * t2189 - t2062 * t2188;
t2016 = qJD(5) + t2021;
t2201 = t2016 ^ 2;
t1858 = t2201 + t1935;
t2186 = qJD(2) * t2059;
t2125 = qJD(1) * t2186;
t2138 = t2063 * qJDD(1);
t2089 = t2125 - t2138;
t2124 = qJD(2) * t2188;
t2139 = t2059 * qJDD(1);
t2090 = t2124 + t2139;
t2075 = t2058 * t2090 + t2062 * t2089;
t1960 = t2023 * qJD(3) + t2075;
t1957 = qJDD(5) + t1960;
t1937 = t2061 * t1988 + t1989 * t2057;
t2164 = t1939 * t1937;
t2218 = t1957 + t2164;
t2171 = t2218 * t2057;
t1731 = t1858 * t2061 + t2171;
t2170 = t2218 * t2061;
t1752 = t1858 * t2057 - t2170;
t1671 = t1731 * t2055 + t1752 * t2056;
t2071 = t2058 * t2089 - t2062 * t2090;
t2067 = -t2021 * qJD(3) - t2071;
t2137 = qJDD(2) + qJDD(3);
t1940 = t2055 * t2137 + t2056 * t2067;
t2066 = t2055 * t2067 - t2056 * t2137;
t1802 = -t1937 * qJD(5) + t2061 * t1940 - t2057 * t2066;
t2165 = t1937 * t2016;
t2220 = t1802 - t2165;
t1612 = t1671 * t2058 - t2062 * t2220;
t1614 = t1671 * t2062 + t2058 * t2220;
t1531 = t1612 * t2059 - t1614 * t2063;
t1644 = t1731 * t2056 - t1752 * t2055;
t2060 = sin(qJ(1));
t2064 = cos(qJ(1));
t2326 = pkin(6) * (t1531 * t2064 + t1644 * t2060);
t2325 = pkin(6) * (t1531 * t2060 - t1644 * t2064);
t1538 = t1612 * t2063 + t1614 * t2059;
t2324 = pkin(1) * t1538;
t2323 = pkin(7) * t1538;
t2322 = -pkin(1) * t1644 + pkin(7) * t1531;
t2120 = -t1940 * t2057 - t2061 * t2066;
t1801 = qJD(5) * t1939 - t2120;
t1907 = t2016 * t1939;
t2221 = t1801 + t1907;
t1683 = -t2221 * t2057 + t2061 * t2220;
t2174 = t2220 * t2057;
t1687 = -t2221 * t2061 - t2174;
t1595 = -t1683 * t2055 + t1687 * t2056;
t2203 = t1937 ^ 2;
t1865 = t2203 - t1935;
t1576 = t1595 * t2058 + t1865 * t2062;
t1578 = t1595 * t2062 - t1865 * t2058;
t1513 = t1576 * t2059 - t1578 * t2063;
t1591 = t1683 * t2056 + t1687 * t2055;
t2321 = t1513 * t2060 + t1591 * t2064;
t2320 = t1513 * t2064 - t1591 * t2060;
t1901 = t2203 - t2201;
t1783 = t1901 * t2057 + t2170;
t1787 = t1901 * t2061 - t2171;
t1700 = t1783 * t2055 - t1787 * t2056;
t1768 = t1801 - t1907;
t1621 = t1700 * t2058 - t1768 * t2062;
t1625 = t1700 * t2062 + t1768 * t2058;
t1552 = t1621 * t2059 - t1625 * t2063;
t1697 = t1783 * t2056 + t1787 * t2055;
t2317 = t1552 * t2060 - t1697 * t2064;
t2316 = t1552 * t2064 + t1697 * t2060;
t2315 = pkin(2) * t1612;
t2314 = pkin(8) * t1612;
t2313 = -pkin(2) * t1644 - pkin(8) * t1614;
t1512 = t1576 * t2063 + t1578 * t2059;
t1547 = t1621 * t2063 + t1625 * t2059;
t2310 = pkin(3) * t1644;
t2309 = qJ(4) * t1644;
t2302 = pkin(3) * t2220 - qJ(4) * t1671;
t1902 = t1935 - t2201;
t2215 = -t2164 + t1957;
t2169 = t2215 * t2057;
t2253 = -t2061 * t1902 + t2169;
t1819 = t2061 * t2215;
t2254 = t1902 * t2057 + t1819;
t2265 = t2055 * t2254 + t2056 * t2253;
t2214 = t2165 + t1802;
t2264 = -t2055 * t2253 + t2056 * t2254;
t2283 = t2058 * t2214 + t2062 * t2264;
t2284 = t2058 * t2264 - t2062 * t2214;
t2294 = -t2059 * t2284 + t2063 * t2283;
t2301 = t2060 * t2294 - t2064 * t2265;
t2300 = t2060 * t2265 + t2064 * t2294;
t2213 = -t2201 - t2203;
t2225 = t2061 * t2213 - t2169;
t2228 = t2057 * t2213 + t1819;
t2252 = -t2055 * t2228 + t2056 * t2225;
t2268 = t2058 * t2221 + t2062 * t2252;
t2271 = t2058 * t2252 - t2062 * t2221;
t2281 = t2059 * t2268 + t2063 * t2271;
t2299 = pkin(1) * t2281;
t2298 = pkin(7) * t2281;
t2251 = t2055 * t2225 + t2056 * t2228;
t2282 = -t2059 * t2271 + t2063 * t2268;
t2297 = -pkin(1) * t2251 + pkin(7) * t2282;
t2296 = pkin(6) * (t2060 * t2282 - t2064 * t2251);
t2295 = pkin(6) * (t2060 * t2251 + t2064 * t2282);
t2293 = t2059 * t2283 + t2063 * t2284;
t2292 = pkin(2) * t2271;
t2291 = pkin(4) * t1731;
t2290 = pkin(8) * t2271;
t2289 = pkin(9) * t1731;
t2288 = pkin(9) * t1752;
t2285 = -pkin(2) * t2251 + pkin(8) * t2268;
t2278 = pkin(3) * t2251;
t2277 = qJ(4) * t2251;
t2272 = -pkin(3) * t2221 + qJ(4) * t2252;
t2079 = (-t1937 * t2057 - t1939 * t2061) * t2016;
t2157 = t2016 * t2057;
t1899 = t1939 * t2157;
t2156 = t2016 * t2061;
t2130 = t1937 * t2156;
t2098 = t1899 - t2130;
t2210 = t2055 * t2098 + t2056 * t2079;
t2209 = -t2055 * t2079 + t2056 * t2098;
t2223 = t1957 * t2058 + t2062 * t2209;
t2227 = -t2062 * t1957 + t2058 * t2209;
t2250 = -t2059 * t2227 + t2063 * t2223;
t2270 = t2060 * t2250 - t2064 * t2210;
t2091 = t1801 * t2057 + t2130;
t2099 = -t2061 * t1801 + t1937 * t2157;
t2207 = t2055 * t2091 + t2056 * t2099;
t2132 = t2058 * t2164;
t2208 = -t2055 * t2099 + t2056 * t2091;
t2224 = t2062 * t2208 - t2132;
t2131 = t2062 * t2164;
t2226 = t2058 * t2208 + t2131;
t2248 = -t2059 * t2226 + t2063 * t2224;
t2269 = t2060 * t2248 - t2064 * t2207;
t2267 = t2060 * t2210 + t2064 * t2250;
t2266 = t2060 * t2207 + t2064 * t2248;
t1808 = -t2203 - t1935;
t2263 = pkin(3) * t1808;
t2262 = pkin(4) * t1808;
t2261 = pkin(4) * t2228;
t2260 = pkin(9) * t2225;
t2259 = pkin(9) * t2228;
t2258 = t1808 * t2058;
t2257 = t1808 * t2062;
t2249 = t2059 * t2223 + t2063 * t2227;
t2247 = t2059 * t2224 + t2063 * t2226;
t2244 = qJ(6) * t2220;
t1948 = t1989 * t1988;
t2219 = -t1948 + t1960;
t2243 = t2055 * t2219;
t2242 = t2056 * t2219;
t1980 = t2023 * t2021;
t2217 = -t1980 + t2137;
t2240 = t2058 * t2217;
t2234 = t2062 * t2217;
t2039 = t2060 * g(1) - t2064 * g(2);
t2054 = t2063 ^ 2;
t2135 = pkin(2) * t2063 + pkin(1);
t1962 = ((pkin(8) * t2054 + pkin(7)) * qJD(1) - pkin(2) * t2186) * qJD(1) + t2135 * qJDD(1) - (qJD(2) * pkin(2) - pkin(8) * t2189) * t2189 + t2039;
t1758 = t1802 * t2057 + t1939 * t2156;
t1759 = t1802 * t2061 - t1899;
t1675 = t1758 * t2056 + t1759 * t2055;
t1678 = -t1758 * t2055 + t1759 * t2056;
t2100 = t2062 * t1678 + t2132;
t2101 = t2058 * t1678 - t2131;
t2206 = -t2059 * t2101 + t2063 * t2100;
t2229 = -t2064 * t1675 + t2060 * t2206;
t2222 = t1675 * t2060 + t2064 * t2206;
t2144 = qJD(3) + t2052;
t2148 = t2052 * t2023;
t1804 = (t2021 * t2144 + t2071) * qJ(4) + (t1960 + t2148) * pkin(3) - t1962;
t2040 = g(1) * t2064 + g(2) * t2060;
t2204 = qJD(1) ^ 2;
t2076 = -pkin(1) * t2204 + qJDD(1) * pkin(7) - t2040;
t2003 = -t2059 * g(3) + t2063 * t2076;
t2050 = t2054 * t2204;
t2065 = qJD(2) ^ 2;
t2044 = -t2050 - t2065;
t1952 = pkin(2) * t2044 + pkin(8) * t2138 + t2003;
t2192 = t2063 * g(3);
t2068 = qJDD(2) * pkin(2) - t2192 + ((-pkin(8) - pkin(7)) * qJDD(1) + t2135 * t2204 + t2040) * t2059;
t1873 = t2062 * t1952 + t2058 * t2068;
t1976 = pkin(3) * t2021 - qJ(4) * t2023;
t2199 = t2052 ^ 2;
t1818 = -pkin(3) * t2199 + qJ(4) * t2137 - t2021 * t1976 + t1873;
t1710 = 0.2e1 * qJD(4) * t1989 - t2056 * t1804 + t1818 * t2055;
t1711 = -0.2e1 * qJD(4) * t1988 + t2055 * t1804 + t2056 * t1818;
t1618 = t2055 * t1710 + t2056 * t1711;
t1970 = t2021 * t1988;
t1883 = -t1970 + t1940;
t1884 = t1970 + t1940;
t2011 = t2052 * t2021;
t2216 = -t2011 + t2067;
t1971 = t2021 * t1989;
t1882 = -t2066 + t1971;
t1919 = (qJD(3) - t2052) * t2023 + t2075;
t2205 = t2059 * t2100 + t2063 * t2101;
t2202 = t1988 ^ 2;
t1987 = t1989 ^ 2;
t2200 = t2021 ^ 2;
t2020 = t2023 ^ 2;
t1872 = t1952 * t2058 - t2062 * t2068;
t1788 = -t1872 * t2062 + t1873 * t2058;
t2198 = pkin(2) * t1788;
t1923 = t2011 + t2067;
t1851 = -t1919 * t2058 - t1923 * t2062;
t2197 = pkin(2) * t1851;
t2196 = pkin(3) * t2058;
t1654 = pkin(4) * t2219 - pkin(9) * t1884 - t1710;
t1963 = pkin(4) * t2021 - pkin(9) * t1989;
t1680 = -pkin(4) * t2202 - pkin(9) * t2066 - t2021 * t1963 + t1711;
t1583 = -t2061 * t1654 + t1680 * t2057;
t1584 = t2057 * t1654 + t2061 * t1680;
t1515 = -t1583 * t2061 + t1584 * t2057;
t2195 = pkin(4) * t1515;
t1760 = t2061 * t2214;
t1770 = (-qJD(5) + t2016) * t1939 + t2120;
t1684 = t1770 * t2057 - t1760;
t2194 = pkin(4) * t1684;
t2193 = pkin(5) * t2061;
t2191 = qJ(6) * t2061;
t2190 = qJD(1) * qJD(2);
t2053 = t2059 ^ 2;
t2187 = t2204 * t2053;
t2185 = qJD(6) * t2016;
t2184 = t1515 * t2055;
t2183 = t1515 * t2056;
t1817 = -t2137 * pkin(3) - t2199 * qJ(4) + t1976 * t2023 + qJDD(4) + t1872;
t1725 = t2066 * pkin(4) - t2202 * pkin(9) + t1963 * t1989 + t1817;
t2181 = t1725 * t2057;
t2180 = t1725 * t2061;
t2175 = t2214 * t2057;
t2173 = t1788 * t2059;
t2172 = t1788 * t2063;
t1887 = t1948 + t1960;
t2168 = t1887 * t2055;
t2167 = t1887 * t2056;
t2162 = t1960 * t2058;
t2161 = t1962 * t2058;
t2160 = t1962 * t2062;
t1974 = t1980 + t2137;
t2159 = t1974 * t2058;
t2158 = t1974 * t2062;
t2155 = t2021 * t2055;
t2154 = t2021 * t2056;
t2024 = qJDD(1) * pkin(1) + pkin(7) * t2204 + t2039;
t2153 = t2024 * t2059;
t2152 = t2024 * t2063;
t2030 = 0.2e1 * t2124 + t2139;
t1992 = t2030 * t2059;
t2031 = -0.2e1 * t2125 + t2138;
t1991 = t2031 * t2063;
t2046 = t2063 * t2204 * t2059;
t2037 = qJDD(2) + t2046;
t2151 = t2037 * t2059;
t2038 = qJDD(2) - t2046;
t2150 = t2038 * t2059;
t2149 = t2038 * t2063;
t2147 = t2052 * t2058;
t2146 = t2052 * t2062;
t1811 = t2055 * t1817;
t1812 = t2056 * t1817;
t2008 = 0.2e1 * t2185;
t1864 = pkin(5) * t1937 - qJ(6) * t1939;
t2097 = -pkin(5) * t2201 + t1957 * qJ(6) - t1937 * t1864 + t1584;
t1555 = t2008 + t2097;
t1558 = -t1957 * pkin(5) - qJ(6) * t2201 + t1864 * t1939 + qJDD(6) + t1583;
t2143 = -pkin(5) * t1558 + qJ(6) * t1555;
t2142 = -pkin(5) * t2214 - qJ(6) * t1768;
t2141 = -pkin(3) * t1817 + qJ(4) * t1618;
t2140 = t2053 + t2054;
t2134 = -pkin(3) * t2062 - pkin(2);
t2129 = t2058 * t1948;
t2128 = t2062 * t1948;
t2127 = t2060 * t1980;
t2126 = t2064 * t1980;
t1941 = -t1987 - t2200;
t1833 = -t1941 * t2055 - t2167;
t2123 = -pkin(3) * t1883 + qJ(4) * t1833 + t1811;
t1917 = -t2200 - t2202;
t1814 = t1917 * t2056 - t2243;
t1881 = -t1971 - t2066;
t2122 = pkin(3) * t1881 + qJ(4) * t1814 - t1812;
t2121 = -qJ(6) * t2057 - pkin(4);
t1516 = t1583 * t2057 + t2061 * t1584;
t1789 = t1872 * t2058 + t2062 * t1873;
t2002 = t2059 * t2076 + t2192;
t1951 = t2002 * t2059 + t2063 * t2003;
t2119 = -t2039 * t2060 - t2064 * t2040;
t2118 = t2060 * t2046;
t2117 = t2064 * t2046;
t1500 = t1555 * t2057 - t1558 * t2061;
t1501 = t1555 * t2061 + t1558 * t2057;
t1467 = -t1500 * t2055 + t1501 * t2056;
t2070 = t1801 * pkin(5) + t1725 - t2244;
t1603 = t2070 + (pkin(5) * t2016 - 0.2e1 * qJD(6)) * t1939;
t1469 = pkin(9) * t1501 + (t2121 - t2193) * t1603;
t1478 = -pkin(9) * t1500 + (pkin(5) * t2057 - t2191) * t1603;
t2116 = -pkin(3) * t1603 + qJ(4) * t1467 + t2056 * t1469 + t2055 * t1478;
t1543 = -pkin(5) * t1808 + t1555;
t1544 = -qJ(6) * t1808 + t1558;
t1686 = -t1768 * t2061 + t2175;
t1487 = pkin(9) * t1686 + t1543 * t2061 + t1544 * t2057 - t2262;
t1682 = -t1768 * t2057 - t1760;
t1490 = -pkin(9) * t1682 - t1543 * t2057 + t1544 * t2061;
t1594 = -t1682 * t2055 + t1686 * t2056;
t2115 = qJ(4) * t1594 + t2056 * t1487 + t2055 * t1490 - t2263;
t1688 = t1770 * t2061 + t2175;
t1497 = pkin(9) * t1688 + t1516 - t2262;
t1499 = -pkin(9) * t1684 - t1515;
t1596 = -t1684 * t2055 + t1688 * t2056;
t2114 = qJ(4) * t1596 + t2056 * t1497 + t2055 * t1499 - t2263;
t2069 = 0.2e1 * qJD(6) * t1939 - t2070;
t1579 = -pkin(5) * t1907 + t2069 + t2244;
t1522 = -t2288 + t1579 * t2057 + (pkin(4) + t2193) * t2220;
t1534 = -pkin(5) * t2174 + t1579 * t2061 - t2289;
t2113 = t2056 * t1522 + t2055 * t1534 + t2302;
t1581 = t2069 + (-t2221 - t1907) * pkin(5);
t1524 = t1581 * t2061 + t2121 * t2221 + t2260;
t1536 = -t1581 * t2057 - t2191 * t2221 - t2259;
t2112 = t2056 * t1524 + t2055 * t1536 + t2272;
t1605 = -pkin(4) * t2221 - t2180 + t2260;
t1641 = t2181 - t2259;
t2111 = t2056 * t1605 + t2055 * t1641 + t2272;
t1611 = -pkin(4) * t2220 + t2181 + t2288;
t1649 = t2180 + t2289;
t2110 = t2056 * t1611 + t2055 * t1649 - t2302;
t1794 = t1882 * t2056 + t1884 * t2055;
t1898 = t1987 + t2202;
t2109 = pkin(3) * t1898 + qJ(4) * t1794 + t1618;
t1600 = t1618 * t2058 - t1817 * t2062;
t2108 = pkin(2) * t1600 + t2141;
t2001 = -t2020 - t2199;
t1924 = t2001 * t2062 - t2159;
t2107 = pkin(2) * t1924 - t1873;
t2106 = pkin(4) * t1500 + t2143;
t2105 = -t1584 - t2291;
t2104 = pkin(4) * t1682 + t2142;
t2034 = qJDD(1) * t2064 - t2060 * t2204;
t2102 = -pkin(6) * t2034 - g(3) * t2060;
t1617 = -t1710 * t2056 + t1711 * t2055;
t1950 = t2002 * t2063 - t2003 * t2059;
t2096 = t2039 * t2064 - t2040 * t2060;
t1743 = t1814 * t2058 + t1881 * t2062;
t2095 = pkin(2) * t1743 + t2122;
t1746 = t1833 * t2058 - t1883 * t2062;
t2094 = pkin(2) * t1746 + t2123;
t1972 = -t2200 - t2199;
t1904 = t1972 * t2058 + t2234;
t2093 = pkin(2) * t1904 - t1872;
t2092 = -t1583 + t2261;
t1481 = t1516 * t2056 - t2184;
t1504 = -pkin(4) * t1725 + pkin(9) * t1516;
t2088 = -pkin(3) * t1725 - pkin(9) * t2184 + qJ(4) * t1481 + t2056 * t1504;
t1462 = t1467 * t2058 - t1603 * t2062;
t2087 = pkin(2) * t1462 + t2116;
t1570 = t1594 * t2058 - t2257;
t2086 = pkin(2) * t1570 + t2115;
t1571 = t1596 * t2058 - t2257;
t2085 = pkin(2) * t1571 + t2114;
t2084 = t2113 - t2315;
t2083 = t2112 + t2292;
t2082 = t2111 + t2292;
t2081 = t2110 + t2315;
t1735 = t1794 * t2058 + t1898 * t2062;
t2080 = pkin(2) * t1735 + t2109;
t2078 = pkin(5) * t1858 + qJ(6) * t2218 + t2097;
t1473 = t1481 * t2058 - t1725 * t2062;
t2077 = pkin(2) * t1473 + t2088;
t2074 = t2078 + t2291;
t2073 = pkin(5) * t2215 + qJ(6) * t2213 - t1558;
t2072 = t2073 + t2261;
t2043 = t2050 - t2065;
t2042 = -t2065 - t2187;
t2041 = t2065 - t2187;
t2036 = -t2050 + t2187;
t2035 = t2050 + t2187;
t2033 = qJDD(1) * t2060 + t2064 * t2204;
t2032 = t2140 * qJDD(1);
t2028 = t2063 * t2037;
t2027 = t2140 * t2190;
t2017 = -pkin(6) * t2033 + g(3) * t2064;
t2007 = -t2020 + t2199;
t2006 = t2200 - t2199;
t2005 = -t2053 * t2190 + t2063 * t2090;
t2004 = -t2054 * t2190 + t2059 * t2089;
t2000 = -t2042 * t2059 - t2149;
t1999 = -t2041 * t2059 + t2028;
t1998 = t2044 * t2063 - t2151;
t1997 = t2043 * t2063 - t2150;
t1996 = t2042 * t2063 - t2150;
t1995 = t2041 * t2063 + t2151;
t1994 = t2044 * t2059 + t2028;
t1993 = t2043 * t2059 + t2149;
t1982 = t1991 - t1992;
t1981 = t2030 * t2063 + t2031 * t2059;
t1978 = t2020 - t2200;
t1969 = -t1987 + t2200;
t1968 = -t2200 + t2202;
t1967 = (-t2021 * t2062 + t2023 * t2058) * t2052;
t1966 = (-t2021 * t2058 - t2023 * t2062) * t2052;
t1965 = -pkin(7) * t1996 - t2152;
t1964 = -pkin(7) * t1994 - t2153;
t1961 = -t2200 - t2020;
t1959 = -pkin(1) * t1996 + t2003;
t1958 = -pkin(1) * t1994 + t2002;
t1955 = t2062 * t1960;
t1947 = t1987 - t2202;
t1943 = pkin(1) * t2031 + pkin(7) * t1998 + t2152;
t1942 = -pkin(1) * t2030 + pkin(7) * t2000 - t2153;
t1931 = t2006 * t2062 - t2159;
t1930 = -t2007 * t2058 + t2234;
t1929 = t2006 * t2058 + t2158;
t1928 = t2007 * t2062 + t2240;
t1925 = -t2001 * t2058 - t2158;
t1918 = t2023 * t2144 + t2075;
t1916 = pkin(1) * t2024 + pkin(7) * t1951;
t1915 = -t2023 * t2147 + t2062 * t2067;
t1914 = t2023 * t2146 + t2058 * t2067;
t1913 = t2021 * t2146 + t2162;
t1912 = t2021 * t2147 - t1955;
t1911 = pkin(1) * t2035 + pkin(7) * t2032 + t1951;
t1905 = t1972 * t2062 - t2240;
t1895 = (-t1988 * t2056 + t1989 * t2055) * t2021;
t1894 = (-t1988 * t2055 - t1989 * t2056) * t2021;
t1891 = -t1966 * t2059 + t1967 * t2063;
t1890 = t1966 * t2063 + t1967 * t2059;
t1877 = t1940 * t2056 - t1989 * t2155;
t1876 = t1940 * t2055 + t1989 * t2154;
t1875 = t1988 * t2154 + t2055 * t2066;
t1874 = -t1988 * t2155 + t2056 * t2066;
t1870 = -pkin(8) * t1924 - t2160;
t1863 = -pkin(8) * t1904 - t2161;
t1862 = -t1929 * t2059 + t1931 * t2063;
t1861 = -t1928 * t2059 + t1930 * t2063;
t1860 = t1929 * t2063 + t1931 * t2059;
t1859 = t1928 * t2063 + t1930 * t2059;
t1856 = -t1924 * t2059 + t1925 * t2063;
t1855 = t1924 * t2063 + t1925 * t2059;
t1853 = -t1919 * t2062 + t1923 * t2058;
t1852 = -t1918 * t2062 - t2058 * t2216;
t1850 = -t1918 * t2058 + t2062 * t2216;
t1849 = t1895 * t2062 + t2162;
t1848 = t1895 * t2058 - t1955;
t1847 = t1968 * t2056 - t2168;
t1846 = -t1969 * t2055 + t2242;
t1845 = t1968 * t2055 + t2167;
t1844 = t1969 * t2056 + t2243;
t1843 = -t1914 * t2059 + t1915 * t2063;
t1842 = -t1912 * t2059 + t1913 * t2063;
t1841 = t1914 * t2063 + t1915 * t2059;
t1840 = t1912 * t2063 + t1913 * t2059;
t1835 = -t1904 * t2059 + t1905 * t2063;
t1834 = t1904 * t2063 + t1905 * t2059;
t1832 = t1941 * t2056 - t2168;
t1831 = t1877 * t2062 + t2129;
t1830 = t1875 * t2062 - t2129;
t1829 = t1877 * t2058 - t2128;
t1828 = t1875 * t2058 + t2128;
t1813 = t1917 * t2055 + t2242;
t1803 = -pkin(2) * t2216 + pkin(8) * t1925 - t2161;
t1795 = -pkin(2) * t1918 + pkin(8) * t1905 + t2160;
t1793 = t1881 * t2056 - t1883 * t2055;
t1792 = t1882 * t2055 - t1884 * t2056;
t1791 = t1881 * t2055 + t1883 * t2056;
t1779 = t1847 * t2062 + t1882 * t2058;
t1778 = t1846 * t2062 + t1884 * t2058;
t1777 = t1847 * t2058 - t1882 * t2062;
t1776 = t1846 * t2058 - t1884 * t2062;
t1749 = t1793 * t2062 + t1947 * t2058;
t1748 = t1793 * t2058 - t1947 * t2062;
t1747 = t1833 * t2062 + t1883 * t2058;
t1745 = pkin(2) * t1962 + pkin(8) * t1789;
t1744 = t1814 * t2062 - t1881 * t2058;
t1742 = -t1851 * t2059 + t1853 * t2063;
t1741 = -t1850 * t2059 + t1852 * t2063;
t1740 = t1851 * t2063 + t1853 * t2059;
t1739 = t1850 * t2063 + t1852 * t2059;
t1738 = -t1848 * t2059 + t1849 * t2063;
t1737 = t1848 * t2063 + t1849 * t2059;
t1736 = t1794 * t2062 - t1898 * t2058;
t1730 = -pkin(1) * t1855 - t2107;
t1723 = -t1829 * t2059 + t1831 * t2063;
t1722 = -t1828 * t2059 + t1830 * t2063;
t1721 = t1829 * t2063 + t1831 * t2059;
t1720 = t1828 * t2063 + t1830 * t2059;
t1719 = -qJ(4) * t1832 + t1812;
t1718 = -pkin(1) * t1834 - t2093;
t1717 = -qJ(4) * t1813 + t1811;
t1716 = -pkin(8) * t1851 - t1788;
t1707 = -pkin(2) * t1961 + pkin(8) * t1853 + t1789;
t1706 = -pkin(1) * t1740 - t2197;
t1705 = -pkin(7) * t1855 - t1803 * t2059 + t1870 * t2063;
t1704 = t1789 * t2063 - t2173;
t1703 = t1789 * t2059 + t2172;
t1702 = -pkin(7) * t1834 - t1795 * t2059 + t1863 * t2063;
t1693 = -pkin(1) * t2216 + pkin(7) * t1856 + t1803 * t2063 + t1870 * t2059;
t1692 = -t1777 * t2059 + t1779 * t2063;
t1691 = -t1776 * t2059 + t1778 * t2063;
t1690 = t1777 * t2063 + t1779 * t2059;
t1689 = t1776 * t2063 + t1778 * t2059;
t1668 = -t1748 * t2059 + t1749 * t2063;
t1667 = t1748 * t2063 + t1749 * t2059;
t1661 = -t1746 * t2059 + t1747 * t2063;
t1660 = t1746 * t2063 + t1747 * t2059;
t1659 = -pkin(3) * t1832 + t1711;
t1658 = -pkin(1) * t1918 + pkin(7) * t1835 + t1795 * t2063 + t1863 * t2059;
t1657 = -pkin(3) * t1813 + t1710;
t1656 = -t1743 * t2059 + t1744 * t2063;
t1655 = t1743 * t2063 + t1744 * t2059;
t1653 = -t1735 * t2059 + t1736 * t2063;
t1652 = t1735 * t2063 + t1736 * t2059;
t1631 = -pkin(1) * t1703 - t2198;
t1601 = t1618 * t2062 + t1817 * t2058;
t1599 = -pkin(7) * t1703 - pkin(8) * t2172 - t1745 * t2059;
t1598 = -qJ(4) * t1792 - t1617;
t1597 = pkin(1) * t1962 + pkin(7) * t1704 - pkin(8) * t2173 + t1745 * t2063;
t1592 = t1684 * t2056 + t1688 * t2055;
t1590 = t1682 * t2056 + t1686 * t2055;
t1586 = -pkin(7) * t1740 - t1707 * t2059 + t1716 * t2063;
t1585 = -pkin(1) * t1961 + pkin(7) * t1742 + t1707 * t2063 + t1716 * t2059;
t1580 = -pkin(8) * t1746 - t1659 * t2058 + t1719 * t2062;
t1574 = -pkin(8) * t1743 - t1657 * t2058 + t1717 * t2062;
t1573 = t1596 * t2062 + t2258;
t1572 = t1594 * t2062 + t2258;
t1569 = -pkin(1) * t1660 - t2094;
t1568 = -pkin(1) * t1655 - t2095;
t1559 = -pkin(2) * t1832 + pkin(8) * t1747 + t1659 * t2062 + t1719 * t2058;
t1556 = -pkin(2) * t1813 + pkin(8) * t1744 + t1657 * t2062 + t1717 * t2058;
t1553 = -pkin(8) * t1735 + t1598 * t2062 + t1792 * t2196;
t1542 = -pkin(3) * t1592 - t2194;
t1537 = pkin(8) * t1736 + t1598 * t2058 + t1792 * t2134;
t1528 = -t1600 * t2059 + t1601 * t2063;
t1527 = t1600 * t2063 + t1601 * t2059;
t1526 = -t2105 + t2310;
t1525 = -pkin(1) * t1652 - t2080;
t1521 = -t1611 * t2055 + t1649 * t2056 + t2309;
t1519 = -t2092 - t2278;
t1518 = -pkin(3) * t1590 - t2104;
t1517 = -t1605 * t2055 + t1641 * t2056 - t2277;
t1510 = -t2072 - t2278;
t1509 = -t1571 * t2059 + t1573 * t2063;
t1508 = -t1570 * t2059 + t1572 * t2063;
t1507 = t1571 * t2063 + t1573 * t2059;
t1506 = t1570 * t2063 + t1572 * t2059;
t1505 = -pkin(8) * t1600 + (-qJ(4) * t2062 + t2196) * t1617;
t1502 = -t2074 - 0.2e1 * t2185 - t2310;
t1495 = -pkin(7) * t1660 - t1559 * t2059 + t1580 * t2063;
t1494 = -pkin(7) * t1655 - t1556 * t2059 + t1574 * t2063;
t1493 = -pkin(1) * t1832 + pkin(7) * t1661 + t1559 * t2063 + t1580 * t2059;
t1492 = pkin(8) * t1601 + (-qJ(4) * t2058 + t2134) * t1617;
t1491 = -pkin(1) * t1813 + pkin(7) * t1656 + t1556 * t2063 + t1574 * t2059;
t1488 = -pkin(7) * t1652 - t1537 * t2059 + t1553 * t2063;
t1485 = -pkin(1) * t1527 - t2108;
t1484 = -pkin(1) * t1792 + pkin(7) * t1653 + t1537 * t2063 + t1553 * t2059;
t1483 = -t1524 * t2055 + t1536 * t2056 - t2277;
t1482 = -t1522 * t2055 + t1534 * t2056 - t2309;
t1480 = t1516 * t2055 + t2183;
t1476 = -t2081 - t2324;
t1475 = t1521 * t2062 - t1526 * t2058 - t2314;
t1474 = t1481 * t2062 + t1725 * t2058;
t1472 = -t2082 - t2299;
t1471 = t1517 * t2062 - t1519 * t2058 - t2290;
t1470 = t1521 * t2058 + t1526 * t2062 - t2313;
t1466 = t1500 * t2056 + t1501 * t2055;
t1464 = t1517 * t2058 + t1519 * t2062 + t2285;
t1463 = t1467 * t2062 + t1603 * t2058;
t1461 = -pkin(3) * t1480 - t2195;
t1460 = -qJ(4) * t1592 - t1497 * t2055 + t1499 * t2056;
t1459 = -t2083 - t2299;
t1458 = -t2084 + t2324;
t1457 = t1483 * t2062 - t1510 * t2058 - t2290;
t1456 = -pkin(7) * t1527 - t1492 * t2059 + t1505 * t2063;
t1455 = t1482 * t2062 - t1502 * t2058 + t2314;
t1454 = t1483 * t2058 + t1510 * t2062 + t2285;
t1453 = t1482 * t2058 + t1502 * t2062 + t2313;
t1452 = -qJ(4) * t1590 - t1487 * t2055 + t1490 * t2056;
t1451 = -pkin(1) * t1617 + pkin(7) * t1528 + t1492 * t2063 + t1505 * t2059;
t1450 = -pkin(9) * t2183 - qJ(4) * t1480 - t1504 * t2055;
t1449 = -pkin(8) * t1571 + t1460 * t2062 - t1542 * t2058;
t1448 = -t1473 * t2059 + t1474 * t2063;
t1447 = t1473 * t2063 + t1474 * t2059;
t1446 = -pkin(2) * t1592 + pkin(8) * t1573 + t1460 * t2058 + t1542 * t2062;
t1445 = -pkin(1) * t1507 - t2085;
t1444 = -pkin(3) * t1466 - t2106;
t1443 = -t1470 * t2059 + t1475 * t2063 - t2323;
t1442 = -pkin(8) * t1570 + t1452 * t2062 - t1518 * t2058;
t1441 = t1470 * t2063 + t1475 * t2059 - t2322;
t1440 = -pkin(1) * t1506 - t2086;
t1439 = -t1464 * t2059 + t1471 * t2063 - t2298;
t1438 = -pkin(2) * t1590 + pkin(8) * t1572 + t1452 * t2058 + t1518 * t2062;
t1437 = -t1462 * t2059 + t1463 * t2063;
t1436 = t1462 * t2063 + t1463 * t2059;
t1435 = t1464 * t2063 + t1471 * t2059 + t2297;
t1434 = -qJ(4) * t1466 - t1469 * t2055 + t1478 * t2056;
t1433 = -t1454 * t2059 + t1457 * t2063 - t2298;
t1432 = t1454 * t2063 + t1457 * t2059 + t2297;
t1431 = -t1453 * t2059 + t1455 * t2063 + t2323;
t1430 = t1453 * t2063 + t1455 * t2059 + t2322;
t1429 = -pkin(8) * t1473 + t1450 * t2062 - t1461 * t2058;
t1428 = -pkin(7) * t1507 - t1446 * t2059 + t1449 * t2063;
t1427 = -pkin(1) * t1592 + pkin(7) * t1509 + t1446 * t2063 + t1449 * t2059;
t1426 = -pkin(1) * t1447 - t2077;
t1425 = -pkin(2) * t1480 + pkin(8) * t1474 + t1450 * t2058 + t1461 * t2062;
t1424 = -pkin(7) * t1506 - t1438 * t2059 + t1442 * t2063;
t1423 = -pkin(1) * t1590 + pkin(7) * t1508 + t1438 * t2063 + t1442 * t2059;
t1422 = -pkin(8) * t1462 + t1434 * t2062 - t1444 * t2058;
t1421 = -pkin(1) * t1436 - t2087;
t1420 = -pkin(2) * t1466 + pkin(8) * t1463 + t1434 * t2058 + t1444 * t2062;
t1419 = -pkin(7) * t1447 - t1425 * t2059 + t1429 * t2063;
t1418 = -pkin(1) * t1480 + pkin(7) * t1448 + t1425 * t2063 + t1429 * t2059;
t1417 = -pkin(7) * t1436 - t1420 * t2059 + t1422 * t2063;
t1416 = -pkin(1) * t1466 + pkin(7) * t1437 + t1420 * t2063 + t1422 * t2059;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2034, 0, -t2033, 0, t2102, -t2017, -t2096, -pkin(6) * t2096, t2005 * t2064 - t2118, t1982 * t2064 + t2036 * t2060, t1999 * t2064 + t2060 * t2139, t2004 * t2064 + t2118, t1997 * t2064 + t2060 * t2138, qJDD(2) * t2060 + t2027 * t2064, t2064 * t1964 - t2060 * t1958 - pkin(6) * (t1998 * t2060 + t2031 * t2064), t2064 * t1965 - t2060 * t1959 - pkin(6) * (t2000 * t2060 - t2030 * t2064), t2064 * t1950 - pkin(6) * (t2032 * t2060 + t2035 * t2064), -pkin(6) * (t1951 * t2060 + t2024 * t2064) - (pkin(1) * t2060 - pkin(7) * t2064) * t1950, t1843 * t2064 + t2127, t1741 * t2064 + t1978 * t2060, t1861 * t2064 + t1923 * t2060, t1842 * t2064 - t2127, t1862 * t2064 - t1919 * t2060, t2064 * t1891 + t2060 * t2137, t2064 * t1702 - t2060 * t1718 - pkin(6) * (t1835 * t2060 - t1918 * t2064), t2064 * t1705 - t2060 * t1730 - pkin(6) * (t1856 * t2060 - t2064 * t2216), t2064 * t1586 - t2060 * t1706 - pkin(6) * (t1742 * t2060 - t1961 * t2064), t2064 * t1599 - t2060 * t1631 - pkin(6) * (t1704 * t2060 + t1962 * t2064), t1723 * t2064 + t1876 * t2060, t1668 * t2064 + t1791 * t2060, t1691 * t2064 + t1844 * t2060, t1722 * t2064 - t1874 * t2060, t1692 * t2064 + t1845 * t2060, t1738 * t2064 + t1894 * t2060, t2064 * t1494 - t2060 * t1568 - pkin(6) * (t1656 * t2060 - t1813 * t2064), t2064 * t1495 - t2060 * t1569 - pkin(6) * (t1661 * t2060 - t1832 * t2064), t2064 * t1488 - t2060 * t1525 - pkin(6) * (t1653 * t2060 - t1792 * t2064), t2064 * t1456 - t2060 * t1485 - pkin(6) * (t1528 * t2060 - t1617 * t2064), t2222, -t2320, t2300, t2266, t2316, t2267, t2064 * t1439 - t2060 * t1472 - t2296, t2064 * t1443 - t2060 * t1476 + t2325, t2064 * t1428 - t2060 * t1445 - pkin(6) * (t1509 * t2060 - t1592 * t2064), t2064 * t1419 - t2060 * t1426 - pkin(6) * (t1448 * t2060 - t1480 * t2064), t2222, t2300, t2320, t2267, -t2316, t2266, t2064 * t1433 - t2060 * t1459 - t2296, t2064 * t1424 - t2060 * t1440 - pkin(6) * (t1508 * t2060 - t1590 * t2064), t2064 * t1431 - t2060 * t1458 - t2325, t2064 * t1417 - t2060 * t1421 - pkin(6) * (t1437 * t2060 - t1466 * t2064); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2033, 0, t2034, 0, t2017, t2102, t2119, pkin(6) * t2119, t2005 * t2060 + t2117, t1982 * t2060 - t2036 * t2064, t1999 * t2060 - t2064 * t2139, t2004 * t2060 - t2117, t1997 * t2060 - t2064 * t2138, -qJDD(2) * t2064 + t2027 * t2060, t2060 * t1964 + t2064 * t1958 + pkin(6) * (t1998 * t2064 - t2031 * t2060), t2060 * t1965 + t2064 * t1959 + pkin(6) * (t2000 * t2064 + t2030 * t2060), t2060 * t1950 + pkin(6) * (t2032 * t2064 - t2035 * t2060), pkin(6) * (t1951 * t2064 - t2024 * t2060) - (-pkin(1) * t2064 - pkin(7) * t2060) * t1950, t1843 * t2060 - t2126, t1741 * t2060 - t1978 * t2064, t1861 * t2060 - t1923 * t2064, t1842 * t2060 + t2126, t1862 * t2060 + t1919 * t2064, t2060 * t1891 - t2064 * t2137, t2060 * t1702 + t2064 * t1718 + pkin(6) * (t1835 * t2064 + t1918 * t2060), t2060 * t1705 + t2064 * t1730 + pkin(6) * (t1856 * t2064 + t2060 * t2216), t2060 * t1586 + t2064 * t1706 + pkin(6) * (t1742 * t2064 + t1961 * t2060), t2060 * t1599 + t2064 * t1631 + pkin(6) * (t1704 * t2064 - t1962 * t2060), t1723 * t2060 - t1876 * t2064, t1668 * t2060 - t1791 * t2064, t1691 * t2060 - t1844 * t2064, t1722 * t2060 + t1874 * t2064, t1692 * t2060 - t1845 * t2064, t1738 * t2060 - t1894 * t2064, t2060 * t1494 + t2064 * t1568 + pkin(6) * (t1656 * t2064 + t1813 * t2060), t2060 * t1495 + t2064 * t1569 + pkin(6) * (t1661 * t2064 + t1832 * t2060), t2060 * t1488 + t2064 * t1525 + pkin(6) * (t1653 * t2064 + t1792 * t2060), t2060 * t1456 + t2064 * t1485 + pkin(6) * (t1528 * t2064 + t1617 * t2060), t2229, -t2321, t2301, t2269, t2317, t2270, t2060 * t1439 + t2064 * t1472 + t2295, t2060 * t1443 + t2064 * t1476 - t2326, t2060 * t1428 + t2064 * t1445 + pkin(6) * (t1509 * t2064 + t1592 * t2060), t2060 * t1419 + t2064 * t1426 + pkin(6) * (t1448 * t2064 + t1480 * t2060), t2229, t2301, t2321, t2270, -t2317, t2269, t2060 * t1433 + t2064 * t1459 + t2295, t2060 * t1424 + t2064 * t1440 + pkin(6) * (t1508 * t2064 + t1590 * t2060), t2060 * t1431 + t2064 * t1458 + t2326, t2060 * t1417 + t2064 * t1421 + pkin(6) * (t1437 * t2064 + t1466 * t2060); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2039, t2040, 0, 0, t1992, t1981, t1995, t1991, t1993, 0, t1943, t1942, t1911, t1916, t1841, t1739, t1859, t1840, t1860, t1890, t1658, t1693, t1585, t1597, t1721, t1667, t1689, t1720, t1690, t1737, t1491, t1493, t1484, t1451, t2205, t1512, t2293, t2247, -t1547, t2249, t1435, t1441, t1427, t1418, t2205, t2293, -t1512, t2249, t1547, t2247, t1432, t1423, t1430, t1416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2204, 0, 0, -g(3), -t2039, 0, t2005, t1982, t1999, t2004, t1997, t2027, t1964, t1965, t1950, pkin(7) * t1950, t1843, t1741, t1861, t1842, t1862, t1891, t1702, t1705, t1586, t1599, t1723, t1668, t1691, t1722, t1692, t1738, t1494, t1495, t1488, t1456, t2206, -t1513, t2294, t2248, t1552, t2250, t1439, t1443, t1428, t1419, t2206, t2294, t1513, t2250, -t1552, t2248, t1433, t1424, t1431, t1417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2204, 0, qJDD(1), 0, g(3), 0, -t2040, 0, t2046, -t2036, -t2139, -t2046, -t2138, -qJDD(2), t1958, t1959, 0, pkin(1) * t1950, -t1980, -t1978, -t1923, t1980, t1919, -t2137, t1718, t1730, t1706, t1631, -t1876, -t1791, -t1844, t1874, -t1845, -t1894, t1568, t1569, t1525, t1485, -t1675, -t1591, -t2265, -t2207, -t1697, -t2210, t1472, t1476, t1445, t1426, -t1675, -t2265, t1591, -t2210, t1697, -t2207, t1459, t1440, t1458, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2039, t2040, 0, 0, t1992, t1981, t1995, t1991, t1993, 0, t1943, t1942, t1911, t1916, t1841, t1739, t1859, t1840, t1860, t1890, t1658, t1693, t1585, t1597, t1721, t1667, t1689, t1720, t1690, t1737, t1491, t1493, t1484, t1451, t2205, t1512, t2293, t2247, -t1547, t2249, t1435, t1441, t1427, t1418, t2205, t2293, -t1512, t2249, t1547, t2247, t1432, t1423, t1430, t1416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2090, t2031, t2037, -t2124, t2043, t2124, 0, -t2024, t2002, 0, t1915, t1852, t1930, t1913, t1931, t1967, t1863, t1870, t1716, -pkin(8) * t1788, t1831, t1749, t1778, t1830, t1779, t1849, t1574, t1580, t1553, t1505, t2100, t1578, t2283, t2224, -t1625, t2223, t1471, t1475, t1449, t1429, t2100, t2283, -t1578, t2223, t1625, t2224, t1457, t1442, t1455, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2125, t2030, t2041, -t2089, t2038, -t2125, t2024, 0, t2003, 0, t1914, t1850, t1928, t1912, t1929, t1966, t1795, t1803, t1707, t1745, t1829, t1748, t1776, t1828, t1777, t1848, t1556, t1559, t1537, t1492, t2101, t1576, t2284, t2226, -t1621, t2227, t1464, t1470, t1446, t1425, t2101, t2284, -t1576, t2227, t1621, t2226, t1454, t1438, t1453, t1420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2046, t2036, t2139, t2046, t2138, qJDD(2), -t2002, -t2003, 0, 0, t1980, t1978, t1923, -t1980, -t1919, t2137, t2093, t2107, t2197, t2198, t1876, t1791, t1844, -t1874, t1845, t1894, t2095, t2094, t2080, t2108, t1675, t1591, t2265, t2207, t1697, t2210, t2082, t2081, t2085, t2077, t1675, t2265, -t1591, t2210, -t1697, t2207, t2083, t2086, t2084, t2087; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2067, -t1918, t2217, t2011, t2006, -t2011, 0, -t1962, t1872, 0, t1877, t1793, t1846, t1875, t1847, t1895, t1717, t1719, t1598, -qJ(4) * t1617, t1678, t1595, t2264, t2208, -t1700, t2209, t1517, t1521, t1460, t1450, t1678, t2264, -t1595, t2209, t1700, t2208, t1483, t1452, t1482, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2148, t2216, t2007, -t1960, t1974, -t2148, t1962, 0, t1873, 0, -t1948, -t1947, -t1884, t1948, -t1882, -t1960, t1657, t1659, -pkin(3) * t1792, -pkin(3) * t1617, -t2164, t1865, -t2214, t2164, t1768, -t1957, t1519, t1526, t1542, t1461, -t2164, -t2214, -t1865, -t1957, -t1768, t2164, t1510, t1518, t1502, t1444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1980, t1978, t1923, -t1980, -t1919, t2137, -t1872, -t1873, 0, 0, t1876, t1791, t1844, -t1874, t1845, t1894, t2122, t2123, t2109, t2141, t1675, t1591, t2265, t2207, t1697, t2210, t2111, t2110, t2114, t2088, t1675, t2265, -t1591, t2210, -t1697, t2207, t2112, t2115, t2113, t2116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1940, t1881, t2219, t1970, t1968, -t1970, 0, t1817, t1710, 0, t1759, t1687, t2254, t2091, t1787, t2098, t1641, t1649, t1499, -pkin(9) * t1515, t1759, t2254, -t1687, t2098, -t1787, t2091, t1536, t1490, t1534, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1971, t1883, t1969, -t2066, t1887, -t1971, -t1817, 0, t1711, 0, t1758, t1683, t2253, t2099, t1783, t2079, t1605, t1611, t1497, t1504, t1758, t2253, -t1683, t2079, -t1783, t2099, t1524, t1487, t1522, t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1948, t1947, t1884, -t1948, t1882, t1960, -t1710, -t1711, 0, 0, t2164, -t1865, t2214, -t2164, -t1768, t1957, t2092, t2105, t2194, t2195, t2164, t2214, t1865, t1957, t1768, -t2164, t2072, t2104, t2008 + t2074, t2106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1802, -t2221, t2215, t2165, t1901, -t2165, 0, t1725, t1583, 0, t1802, t2215, t2221, -t2165, -t1901, t2165, -qJ(6) * t2221, t1544, t1579, -qJ(6) * t1603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1907, t2220, -t1902, -t1801, t2218, -t1907, -t1725, 0, t1584, 0, t1907, -t1902, -t2220, -t1907, -t2218, -t1801, t1581, t1543, pkin(5) * t2220, -pkin(5) * t1603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2164, -t1865, t2214, -t2164, -t1768, t1957, -t1583, -t1584, 0, 0, t2164, t2214, t1865, t1957, t1768, -t2164, t2073, t2142, t2008 + t2078, t2143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1802, t2215, t2221, -t2165, -t1901, t2165, 0, t1558, -t1603, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2164, t2214, t1865, t1957, t1768, -t2164, -t1558, 0, t1555, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1907, t1902, t2220, t1907, t2218, t1801, t1603, -t1555, 0, 0;];
m_new_reg  = t1;
