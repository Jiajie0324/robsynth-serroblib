% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:41:35
% EndTime: 2019-03-09 16:42:15
% DurationCPUTime: 27.48s
% Computational Cost: add. (25139->895), mult. (49986->1047), div. (0->0), fcn. (56808->8), ass. (0->661)
t610 = sin(pkin(10));
t966 = cos(qJ(5));
t778 = t966 * t610;
t611 = cos(pkin(10));
t612 = sin(qJ(5));
t864 = t612 * t611;
t1024 = t864 / 0.2e1 + t778 / 0.2e1;
t613 = sin(qJ(3));
t614 = sin(qJ(2));
t615 = cos(qJ(2));
t967 = cos(qJ(3));
t569 = t613 * t614 - t615 * t967;
t567 = t778 + t864;
t879 = t567 * t569;
t306 = t879 / 0.2e1 + t1024 * t569;
t601 = t613 * t615;
t602 = t967 * t614;
t571 = -t601 - t602;
t865 = t612 * t610;
t523 = t571 * t865;
t777 = t966 * t611;
t524 = t571 * t777;
t1029 = -t524 + t523;
t814 = qJD(1) * t569;
t776 = t1029 * t814;
t793 = qJD(2) + qJD(3);
t1076 = t306 * t793 + t776;
t718 = -t777 / 0.2e1;
t242 = t571 * t718 + t524 / 0.2e1;
t1075 = t242 * qJD(5) - t1076;
t284 = t306 * qJD(4);
t565 = -t777 + t865;
t980 = t565 / 0.2e1;
t522 = t569 * t865;
t982 = t522 / 0.2e1;
t307 = t982 + (t718 + t980) * t569;
t1040 = t567 * t571;
t774 = t1040 * t814;
t1074 = -t307 * t793 + t774;
t463 = -pkin(3) * t571 + qJ(4) * t569;
t1001 = -pkin(8) - pkin(7);
t589 = t1001 * t614;
t590 = t1001 * t615;
t733 = -t967 * t589 - t613 * t590;
t880 = t733 * t610;
t318 = t611 * t463 + t880;
t607 = t611 * pkin(9);
t717 = -t571 * pkin(4) + t569 * t607;
t211 = t318 + t717;
t779 = t966 * t211;
t464 = t611 * t733;
t319 = t610 * t463 - t464;
t442 = t610 * t569;
t792 = pkin(9) * t442;
t238 = t792 + t319;
t866 = t612 * t238;
t650 = t866 / 0.2e1 - t779 / 0.2e1;
t868 = t611 * qJ(4);
t587 = t607 + t868;
t957 = pkin(9) + qJ(4);
t740 = t957 * t610;
t476 = t587 * t966 - t612 * t740;
t976 = t569 / 0.2e1;
t759 = t476 * t976;
t959 = t611 * pkin(4);
t600 = -pkin(3) - t959;
t709 = t565 * pkin(5) - t567 * qJ(6);
t437 = t600 + t709;
t991 = -t437 / 0.2e1;
t670 = t1029 * t991 + t759;
t1073 = -t650 - t670;
t965 = pkin(2) * t614;
t446 = t463 + t965;
t312 = t611 * t446 + t880;
t205 = t312 + t717;
t780 = t966 * t205;
t313 = t610 * t446 - t464;
t225 = t792 + t313;
t867 = t612 * t225;
t651 = t867 / 0.2e1 - t780 / 0.2e1;
t791 = t967 * pkin(2);
t410 = -t791 + t437;
t958 = t613 * pkin(2);
t599 = qJ(4) + t958;
t551 = t611 * t599 + t607;
t739 = (-pkin(9) - t599) * t610;
t427 = t551 * t966 + t612 * t739;
t762 = t427 * t976;
t676 = -t410 * t1029 / 0.2e1 + t762;
t1072 = -t651 - t676;
t572 = t613 * t589;
t574 = t967 * t590;
t974 = -t574 / 0.2e1;
t1068 = t974 + t572 / 0.2e1;
t1035 = t793 * t567;
t1061 = t565 * t1035;
t978 = t567 / 0.2e1;
t981 = -t565 / 0.2e1;
t192 = t1029 * t981 + t1040 * t978;
t156 = -qJD(1) * t192 + t1061;
t555 = t602 / 0.2e1 + t601 / 0.2e1;
t183 = -t192 - t555;
t140 = qJD(1) * t183 + t1061;
t608 = t610 ^ 2;
t609 = t611 ^ 2;
t1071 = (t609 / 0.2e1 + t608 / 0.2e1) * (qJ(4) + t599);
t1005 = t1029 ^ 2;
t838 = -t574 + t572;
t1031 = t838 * t611;
t989 = -t1031 / 0.2e1;
t962 = t1029 * pkin(5);
t532 = pkin(4) * t442;
t1028 = -t532 + t838;
t420 = -t569 * t777 + t522;
t899 = t420 * qJ(6);
t963 = t879 * pkin(5);
t1069 = -t532 / 0.2e1 - t963 / 0.2e1 - t899 / 0.2e1 + t1068;
t1027 = -t899 - t963 + t1028;
t875 = t571 * t610;
t388 = -pkin(4) * t875 + t733;
t710 = -pkin(5) * t1040 - qJ(6) * t1029;
t179 = t388 + t710;
t1067 = t1027 * t179;
t1066 = t1027 * t565;
t1065 = t1027 * t567;
t1064 = t1028 * t565;
t1063 = t1028 * t567;
t1062 = t1029 * t567;
t1034 = t793 * t571;
t1060 = t569 * t1034;
t241 = t523 / 0.2e1 - t524 / 0.2e1 + (t718 + t865 / 0.2e1) * t571;
t189 = qJD(1) * t241 + t1035;
t632 = (t978 - t1024) * t569;
t1016 = t632 * qJD(1);
t545 = t567 * qJD(5);
t1059 = t545 + t1016;
t1000 = qJ(6) / 0.2e1;
t1002 = -pkin(5) / 0.2e1;
t684 = t1000 * t879 + t420 * t1002;
t605 = -pkin(2) * t615 - pkin(1);
t960 = t569 * pkin(3);
t688 = t605 + t960;
t877 = t571 * qJ(4);
t644 = t688 + t877;
t297 = t610 * t644 + t1031;
t222 = pkin(9) * t875 + t297;
t1032 = t838 * t610;
t622 = t569 * pkin(4) - t1032 + (t571 * t957 + t688) * t611;
t133 = t222 * t612 - t966 * t622;
t122 = -pkin(5) * t569 + t133;
t754 = t133 / 0.2e1 - t122 / 0.2e1;
t134 = t222 * t966 + t612 * t622;
t121 = t569 * qJ(6) + t134;
t755 = t121 / 0.2e1 - t134 / 0.2e1;
t621 = -t565 * t754 + t567 * t755 + t684;
t1018 = qJD(1) * t621;
t1058 = t709 * qJD(5) - t565 * qJD(6) - t1018;
t296 = t611 * t644 - t1032;
t1030 = t297 * t611 / 0.2e1 - t296 * t610 / 0.2e1;
t1020 = -t1030 + t1068;
t1057 = qJD(1) * t1020;
t1056 = qJD(4) * t1020;
t1055 = qJD(5) * t1040;
t1019 = t1030 + t1068;
t1054 = t1019 * qJD(4);
t1052 = (-t296 - t1032) * t571;
t1051 = (t297 - t1031) * t571;
t1050 = t793 * t733;
t1049 = -t1027 * t1029 - t121 * t571 - t179 * t420;
t1048 = -t1027 * t1040 + t122 * t571 - t179 * t879;
t1047 = t1028 * t1029 + t134 * t571 + t388 * t420;
t1046 = -t1028 * t1040 + t133 * t571 - t388 * t879;
t1004 = t569 ^ 2;
t343 = t1004 + t1005;
t803 = qJD(5) * t569;
t1045 = qJD(1) * t343 + t1029 * t1035 + t803;
t1044 = t1040 ^ 2;
t996 = -t1040 / 0.2e1;
t961 = t838 * pkin(3);
t658 = t569 * t718 + t982;
t758 = t565 * t976;
t309 = t758 - t658;
t1041 = t309 * t793;
t604 = -t791 - pkin(3);
t586 = t604 - t959;
t972 = t586 / 0.2e1;
t742 = t600 / 0.2e1 + t972;
t1039 = t567 * t742;
t997 = t410 / 0.2e1;
t744 = t437 / 0.2e1 + t997;
t1038 = t567 * t744;
t1037 = t632 * t793;
t1036 = t733 * t838;
t592 = t609 + t608;
t1033 = t793 * t592;
t1014 = t121 * t981 + t122 * t978;
t1026 = -t1014 + t1069;
t1025 = t1014 + t1069;
t901 = t1040 * qJ(6);
t228 = -t901 + t962;
t454 = pkin(5) * t567 + qJ(6) * t565;
t990 = -t454 / 0.2e1;
t1023 = t1040 * t990 + t228 * t980;
t876 = t571 * t599;
t878 = t569 * t604;
t977 = -t569 / 0.2e1;
t1022 = t960 / 0.2e1 + t876 / 0.2e1 - t878 / 0.2e1 + (t967 * t977 - t613 * t571 / 0.2e1) * pkin(2);
t285 = t632 * qJD(4);
t964 = pkin(5) * t571;
t1015 = t964 + t1023;
t748 = 0.2e1 * t996;
t113 = t565 * t748 + t1062;
t164 = t1044 + t1005;
t1013 = qJD(1) * t164 + t113 * t793;
t163 = -t1040 * t565 - t1062;
t186 = -t1005 + t1044;
t1012 = qJD(1) * t186 + t163 * t793;
t818 = qJD(1) * t1029;
t775 = t1040 * t818;
t1011 = t192 * t793 + t775;
t159 = qJ(6) * t748 + t962;
t1010 = qJD(1) * t159 + t454 * t793;
t556 = t565 ^ 2;
t557 = t567 ^ 2;
t399 = t556 - t557;
t82 = qJD(1) * t163 + t399 * t793;
t467 = t556 + t557;
t80 = qJD(1) * t113 + t467 * t793;
t187 = -qJD(1) * t1040 + t565 * t793;
t721 = t967 * t966;
t781 = t612 * t967;
t501 = (-t610 * t781 + t611 * t721) * pkin(2);
t783 = -t958 / 0.2e1;
t655 = t1029 * t783 + t501 * t976;
t987 = -t476 / 0.2e1;
t992 = t427 / 0.2e1;
t745 = t992 + t987;
t1009 = t571 * t745 - t655;
t1008 = t241 * qJD(5) + t1037 + t776;
t112 = t113 * qJD(4);
t1007 = -qJD(5) * t621 - t307 * qJD(6) + t112;
t979 = -t567 / 0.2e1;
t633 = t121 * t979 + t122 * t981 + t133 * t980 + t134 * t978 + t684;
t1006 = t633 * qJD(5) - t309 * qJD(6) + t112;
t1003 = t571 ^ 2;
t553 = t571 * qJ(6);
t200 = t612 * t205;
t214 = t966 * t225;
t849 = t214 + t200;
t123 = -t553 + t849;
t999 = t123 / 0.2e1;
t666 = t780 - t867;
t124 = -t666 + t964;
t998 = -t124 / 0.2e1;
t426 = t551 * t612 - t739 * t966;
t995 = -t426 / 0.2e1;
t994 = t426 / 0.2e1;
t993 = -t427 / 0.2e1;
t475 = t587 * t612 + t740 * t966;
t988 = -t475 / 0.2e1;
t986 = t476 / 0.2e1;
t985 = t838 / 0.2e1;
t500 = (t610 * t721 + t611 * t781) * pkin(2);
t984 = t500 / 0.2e1;
t983 = t501 / 0.2e1;
t562 = t574 / 0.2e1;
t973 = -t586 / 0.2e1;
t971 = -t600 / 0.2e1;
t956 = pkin(2) * qJD(3);
t46 = t1029 * t122 + t1040 * t121;
t953 = qJD(1) * t46;
t940 = t133 * t569;
t47 = -t1029 * t228 - t1040 * t179 - t940;
t952 = qJD(1) * t47;
t932 = t179 * t1029;
t939 = t134 * t569;
t48 = -t1040 * t228 + t932 - t939;
t951 = qJD(1) * t48;
t55 = t121 * t569 - t932;
t950 = qJD(1) * t55;
t76 = t1040 * t388 + t940;
t949 = qJD(1) * t76;
t77 = t1029 * t388 - t939;
t948 = qJD(1) * t77;
t945 = t123 * t565;
t944 = t124 * t567;
t206 = t612 * t211;
t227 = t966 * t238;
t848 = t227 + t206;
t127 = -t553 + t848;
t943 = t127 * t565;
t665 = t779 - t866;
t128 = -t665 + t964;
t942 = t128 * t567;
t13 = t121 * t123 + t122 * t124 + t1067;
t941 = t13 * qJD(1);
t14 = t121 * t127 + t122 * t128 + t1067;
t938 = t14 * qJD(1);
t15 = -t121 * t133 + t122 * t134 + t179 * t228;
t937 = t15 * qJD(1);
t702 = t121 * t879 + t122 * t420;
t16 = t1029 * t124 + t1040 * t123 + t702;
t936 = t16 * qJD(1);
t17 = t1029 * t128 + t1040 * t127 + t702;
t935 = t17 * qJD(1);
t931 = t179 * t454;
t930 = t179 * t567;
t18 = (-t121 + t134) * t1029 - (-t122 + t133) * t1040;
t929 = t18 * qJD(1);
t19 = t123 * t569 + t1049;
t926 = t19 * qJD(1);
t20 = -t124 * t569 + t1048;
t925 = t20 * qJD(1);
t21 = t127 * t569 + t1049;
t924 = t21 * qJD(1);
t22 = -t128 * t569 + t1048;
t923 = t22 * qJD(1);
t922 = t228 * t410;
t921 = t228 * t437;
t918 = t312 * t610;
t917 = t313 * t611;
t916 = t318 * t610;
t915 = t319 * t611;
t912 = t388 * t565;
t911 = t388 * t567;
t39 = t569 * t666 + t1046;
t908 = t39 * qJD(1);
t40 = -t569 * t849 + t1047;
t907 = t40 * qJD(1);
t41 = t569 * t665 + t1046;
t906 = t41 * qJD(1);
t905 = t410 * t879;
t904 = t410 * t420;
t103 = t410 * t454;
t903 = t410 * t565;
t902 = t410 * t567;
t42 = -t569 * t848 + t1047;
t900 = t42 * qJD(1);
t898 = t426 * t420;
t897 = t426 * t567;
t896 = t426 * t571;
t895 = t427 * t879;
t894 = t427 * t565;
t893 = t427 * t571;
t892 = t437 * t879;
t891 = t437 * t420;
t890 = t437 * t565;
t889 = t437 * t567;
t142 = t454 * t437;
t888 = t475 * t420;
t887 = t475 * t567;
t886 = t475 * t571;
t885 = t476 * t879;
t884 = t476 * t565;
t883 = t476 * t571;
t874 = t586 * t879;
t873 = t586 * t420;
t872 = t600 * t879;
t871 = t600 * t420;
t870 = t610 * qJ(4);
t697 = t296 * t611 + t297 * t610;
t659 = t697 * t569;
t66 = (-t312 * t611 - t313 * t610) * t571 - t659;
t863 = t66 * qJD(1);
t71 = (-t318 * t611 - t319 * t610) * t571 - t659;
t862 = t71 * qJD(1);
t72 = t296 * t312 + t297 * t313 + t1036;
t861 = t72 * qJD(1);
t74 = t296 * t318 + t297 * t319 + t1036;
t860 = t74 * qJD(1);
t84 = t1052 + (t312 - t880) * t569;
t859 = t84 * qJD(1);
t85 = t1051 + (-t313 - t464) * t569;
t858 = t85 * qJD(1);
t88 = t1052 + (t318 - t880) * t569;
t857 = t88 * qJD(1);
t89 = t1051 + (-t319 - t464) * t569;
t856 = t89 * qJD(1);
t853 = -t183 * qJD(6) - t285;
t184 = t192 - t555;
t852 = t184 * qJD(6) - t284;
t231 = t242 * qJD(4);
t847 = -t134 * qJD(5) + t231;
t270 = t500 * t567 - t501 * t565;
t455 = t467 * qJD(4);
t846 = t270 * qJD(3) + t455;
t548 = t567 * qJD(6);
t342 = t1029 * t548;
t845 = -t309 * qJD(4) + t342;
t844 = -t307 * qJD(4) + t342;
t843 = qJD(5) * t454 - t548;
t469 = t565 * t548;
t787 = t613 * t956;
t520 = t565 * t787;
t841 = t520 - t469;
t648 = t592 * t967;
t550 = t648 * pkin(2);
t588 = t592 * qJD(4);
t840 = t550 * qJD(3) + t588;
t547 = t557 * qJD(6);
t728 = t567 * t787;
t839 = t547 - t728;
t708 = pkin(2) * t721;
t680 = -t708 / 0.2e1;
t706 = pkin(2) * t781 / 0.2e1;
t837 = t610 * t706 + t611 * t680;
t679 = t708 / 0.2e1;
t725 = -t791 / 0.2e1;
t707 = t612 * t725;
t836 = t610 * t707 + t611 * t679;
t835 = t610 * t679 + t611 * t706;
t834 = t610 * t680 + t611 * t707;
t618 = (t599 / 0.2e1 + t783 - qJ(4) / 0.2e1) * t571 + (t725 - t604 / 0.2e1 - pkin(3) / 0.2e1) * t569;
t136 = t989 + t1031 / 0.2e1 + t618 * t610;
t831 = qJD(1) * t136;
t153 = t697 * t571;
t830 = qJD(1) * t153;
t165 = t1029 * t879 + t1040 * t420;
t826 = qJD(1) * t165;
t194 = -t1040 * t571 + t569 * t879;
t822 = qJD(1) * t194;
t195 = -t1029 * t571 + t420 * t569;
t821 = qJD(1) * t195;
t435 = t569 * t965 - t571 * t605;
t817 = qJD(1) * t435;
t436 = -t569 * t605 - t571 * t965;
t816 = qJD(1) * t436;
t479 = t562 + t974;
t815 = qJD(1) * t479;
t813 = qJD(1) * t571;
t812 = qJD(1) * t605;
t811 = qJD(1) * t615;
t810 = qJD(2) * t586;
t809 = qJD(3) * t600;
t808 = qJD(3) * t605;
t807 = qJD(4) * t1040;
t806 = qJD(4) * t569;
t805 = qJD(5) * t426;
t804 = qJD(5) * t475;
t232 = t241 * qJD(4);
t271 = t306 * qJD(1);
t272 = t307 * qJD(1);
t308 = t982 + (t718 + t981) * t569;
t280 = t308 * qJD(1);
t275 = t309 * qJD(1);
t322 = t592 * t1003;
t802 = t322 * qJD(1);
t411 = -t1003 + t1004;
t801 = t411 * qJD(1);
t800 = t1040 * qJD(6);
t412 = t427 * qJD(5);
t462 = t476 * qJD(5);
t799 = t555 * qJD(1);
t798 = t565 * qJD(4);
t543 = t565 * qJD(5);
t797 = t567 * qJD(4);
t552 = t569 * qJD(6);
t593 = -t614 ^ 2 + t615 ^ 2;
t796 = t593 * qJD(1);
t795 = t614 * qJD(2);
t794 = t615 * qJD(2);
t790 = pkin(1) * t614 * qJD(1);
t789 = pkin(1) * t811;
t788 = qJD(2) * t958;
t785 = t964 / 0.2e1;
t782 = t958 / 0.2e1;
t773 = t569 * t812;
t772 = t571 * t812;
t771 = t1029 * t806;
t770 = t1040 * t806;
t477 = t569 * t813;
t531 = t611 * t806;
t769 = t614 * t811;
t768 = -t931 / 0.2e1;
t767 = t930 / 0.2e1;
t765 = t912 / 0.2e1;
t764 = -t911 / 0.2e1;
t763 = t426 * t977;
t760 = t475 * t977;
t757 = t868 / 0.2e1;
t752 = -t200 / 0.2e1 - t214 / 0.2e1;
t751 = -t206 / 0.2e1 - t227 / 0.2e1;
t749 = t997 + t991;
t746 = t994 + t988;
t743 = t972 + t971;
t738 = t967 * qJD(2);
t737 = t967 * qJD(3);
t656 = t1040 * t783 + t500 * t977;
t629 = t571 * t746 + t656;
t36 = -t749 * t879 + t629;
t518 = t565 * t788;
t735 = -qJD(1) * t36 - t518;
t57 = -t743 * t879 + t629;
t734 = -qJD(1) * t57 - t518;
t729 = t567 * t788;
t727 = -t930 / 0.2e1 + t785;
t726 = qJD(5) + t814;
t724 = t611 * t477;
t723 = -t553 - t752;
t722 = -t553 - t751;
t716 = t793 * t958;
t711 = t877 + t960;
t683 = pkin(5) * t998 + qJ(6) * t999;
t3 = -t922 / 0.2e1 + t768 + t754 * t427 + t755 * t426 + t683;
t705 = -t3 * qJD(1) + t103 * qJD(2);
t160 = t410 * t958 + t426 * t500 + t427 * t501;
t617 = t1027 * t997 + t121 * t983 + t122 * t984 + t127 * t992 + t128 * t994 + t179 * t782;
t635 = t1027 * t991 + t123 * t987 + t124 * t988;
t2 = t617 + t635;
t704 = t2 * qJD(1) + t160 * qJD(2);
t667 = t1029 * t984 + t1040 * t983;
t8 = (t128 / 0.2e1 + t998) * t567 + (-t127 / 0.2e1 + t999) * t565 + t746 * t420 + t745 * t879 + t667;
t703 = -qJD(1) * t8 - qJD(2) * t270;
t696 = t917 - t918;
t695 = t915 - t916;
t694 = t876 - t878;
t196 = -t894 + t897;
t674 = t1029 * t995 + t1040 * t993;
t23 = t674 + t1026;
t693 = -qJD(1) * t23 + qJD(2) * t196;
t373 = t454 * t565;
t201 = t373 + t902;
t620 = t767 + t651 - t676;
t27 = t620 + t1015;
t692 = -qJD(1) * t27 - qJD(2) * t201;
t374 = t454 * t567;
t202 = -t374 + t903;
t634 = t1029 * t990 + t179 * t980 + t228 * t979;
t624 = t410 * t996 + t634 + t763;
t30 = t624 - t723;
t691 = -qJD(1) * t30 - qJD(2) * t202;
t428 = (t599 * t648 + t604 * t613) * pkin(2);
t677 = t915 / 0.2e1 - t916 / 0.2e1;
t616 = t677 * t599 + (t733 * t613 / 0.2e1 + t1030 * t967) * pkin(2) + t604 * t985;
t678 = -t917 / 0.2e1 + t918 / 0.2e1;
t44 = t961 / 0.2e1 + t678 * qJ(4) + t616;
t690 = t44 * qJD(1) + t428 * qJD(2);
t79 = (t319 / 0.2e1 - t313 / 0.2e1) * t611 + (-t318 / 0.2e1 + t312 / 0.2e1) * t610;
t689 = -qJD(1) * t79 - qJD(2) * t550;
t502 = t592 * t599;
t687 = -qJD(2) * t502 + t1057;
t685 = qJD(5) * t133;
t682 = t1000 * t127 + t1002 * t128;
t681 = qJ(6) * t983 + t1002 * t500;
t675 = -t902 / 0.2e1 - t889 / 0.2e1;
t673 = t1029 * t988 + t1040 * t987;
t672 = t1040 * t973 + t763;
t671 = t1029 * t973 + t762;
t669 = t1040 * t971 + t760;
t668 = t1029 * t971 + t759;
t49 = t785 + t620;
t664 = qJD(1) * t49 + qJD(2) * t902;
t63 = t765 + t672 + t752;
t663 = qJD(1) * t63 + t565 * t810;
t62 = t764 + t671 - t651;
t662 = qJD(1) * t62 - t567 * t810;
t660 = -t774 - t1055;
t376 = -qJD(5) * t555 + t477;
t38 = -t420 * t749 - t1009;
t654 = -qJD(1) * t38 + t729;
t59 = t420 * t743 + t1009;
t653 = -qJD(1) * t59 - t729;
t139 = (t985 - t838 / 0.2e1) * t610 + t618 * t611;
t652 = -qJD(1) * t139 - t610 * t788;
t5 = -t921 / 0.2e1 + t768 + t754 * t476 + t755 * t475 + t682;
t53 = -t454 * t744 + t681;
t647 = -t5 * qJD(1) - t53 * qJD(2) + t142 * qJD(3);
t129 = t782 + (t988 + t995) * t567 + (t986 + t992) * t565;
t226 = -t884 + t887;
t25 = t673 + t1026;
t643 = -qJD(1) * t25 - qJD(2) * t129 + qJD(3) * t226;
t145 = -t373 + t834 - t1038;
t209 = t373 + t889;
t619 = t767 + t650 - t670;
t31 = t619 + t1015;
t642 = qJD(1) * t31 - qJD(2) * t145 + qJD(3) * t209;
t146 = -t565 * t744 + t374 + t836;
t210 = -t374 + t890;
t623 = t1040 * t991 + t634 + t760;
t34 = t623 - t722;
t641 = -qJD(1) * t34 + qJD(2) * t146 - qJD(3) * t210;
t424 = t782 - t1071;
t585 = t592 * qJ(4);
t640 = qJD(2) * t424 - qJD(3) * t585 + t1057;
t175 = t835 + t1038;
t51 = t785 + t619;
t639 = qJD(1) * t51 + qJD(2) * t175 + qJD(3) * t889;
t300 = t834 - t1039;
t67 = t764 + t668 - t650;
t638 = -qJD(1) * t67 - qJD(2) * t300 + t567 * t809;
t301 = t565 * t742 + t837;
t68 = t765 + t669 + t751;
t637 = qJD(1) * t68 + qJD(2) * t301 + t565 * t809;
t630 = -t964 + t767 + t1023;
t628 = t896 / 0.2e1 + t886 / 0.2e1 + t656;
t627 = t893 / 0.2e1 + t883 / 0.2e1 - t655;
t591 = t610 * t787;
t515 = t726 * qJ(6);
t468 = t565 * t545;
t460 = t793 * t569;
t450 = t793 * t555;
t431 = t442 * qJD(4);
t425 = t782 + t1071;
t414 = 0.2e1 * t562 - t572;
t380 = t399 * qJD(5);
t366 = t454 * qJD(4);
t326 = t911 / 0.2e1;
t325 = -t912 / 0.2e1;
t310 = t758 + t658;
t303 = t834 + t1039;
t302 = t837 + (t971 + t973) * t565;
t279 = t308 * qJD(4);
t278 = t310 * qJD(4);
t221 = -t545 - t271;
t220 = -t543 - t272;
t219 = t543 + t275;
t218 = -t543 + t280;
t215 = t557 * t793 + t567 * t818;
t191 = t192 * qJD(5);
t176 = t675 + t835;
t166 = t931 / 0.2e1;
t161 = t163 * qJD(5);
t158 = -t901 / 0.2e1 + t962 / 0.2e1 + t1040 * t1000 + t1029 * t1002;
t148 = -t374 + t890 / 0.2e1 + t903 / 0.2e1 + t836;
t147 = t373 - t675 + t834;
t144 = -qJD(5) * t307 - t821;
t143 = -qJD(5) * t306 - t822;
t138 = t1022 * t611 + t571 * t757 + t1032;
t137 = 0.2e1 * t989 + t571 * t870 / 0.2e1 + t1022 * t610;
t135 = -t420 * t818 + t191;
t130 = -t884 / 0.2e1 - t894 / 0.2e1 + t887 / 0.2e1 + t897 / 0.2e1 + t782;
t98 = -qJD(5) * t309 - t1034 * t567 + t821;
t97 = -qJD(5) * t632 + t1034 * t565 + t822;
t96 = t1040 * t726 - t1041;
t78 = t677 - t678;
t75 = t191 + (t1035 + t818) * t420;
t73 = t161 - t826;
t70 = t326 - t668 - t650;
t69 = t325 - t669 + t751;
t65 = t326 - t671 - t651;
t64 = t325 - t672 + t752;
t58 = t873 / 0.2e1 + t1063 + t871 / 0.2e1 + t627;
t56 = -t874 / 0.2e1 + t1064 - t872 / 0.2e1 + t628;
t54 = t142 / 0.2e1 + t103 / 0.2e1 + t681;
t52 = t727 - t1073;
t50 = t727 - t1072;
t45 = t826 + t161 + t793 * (-t420 * t565 + t567 * t879);
t43 = t313 * t757 - t312 * t870 / 0.2e1 - t961 / 0.2e1 + t616;
t37 = -t904 / 0.2e1 - t1065 - t891 / 0.2e1 - t627;
t35 = -t905 / 0.2e1 + t1066 - t892 / 0.2e1 + t628;
t33 = t623 + t722;
t32 = t630 + t1073;
t29 = t624 + t723;
t28 = t630 + t1072;
t26 = -t673 + t1025;
t24 = -t674 + t1025;
t7 = t895 / 0.2e1 - t943 / 0.2e1 + t898 / 0.2e1 + t942 / 0.2e1 + t885 / 0.2e1 - t945 / 0.2e1 + t888 / 0.2e1 + t944 / 0.2e1 + t667;
t6 = t133 * t987 + t121 * t988 + t921 / 0.2e1 + t166 + t134 * t475 / 0.2e1 + t122 * t986 + t682;
t4 = t133 * t993 + t121 * t995 + t922 / 0.2e1 + t166 + t134 * t994 + t122 * t992 + t683;
t1 = t617 - t635;
t9 = [0, 0, 0, t614 * t794, t593 * qJD(2), 0, 0, 0, -pkin(1) * t795, -pkin(1) * t794, t1060, t793 * t411, 0, 0, 0, qJD(2) * t435 - t571 * t808, qJD(2) * t436 - t569 * t808, qJD(2) * t84 + qJD(3) * t88 + t531 * t571, qJD(2) * t85 + qJD(3) * t89 - t806 * t875, -qJD(2) * t66 - qJD(3) * t71 + qJD(4) * t322, qJD(2) * t72 + qJD(3) * t74 + qJD(4) * t153 (t420 * t793 + t1055) * t1029, qJD(5) * t186 + t165 * t793, t1040 * t803 + t195 * t793, -t1029 * t803 + t194 * t793, -t1060, qJD(2) * t39 + qJD(3) * t41 + qJD(5) * t77 - t771, qJD(2) * t40 + qJD(3) * t42 + qJD(5) * t76 - t770, qJD(2) * t20 + qJD(3) * t22 + qJD(5) * t48 + t1029 * t800 - t771, qJD(2) * t16 + qJD(3) * t17 + qJD(4) * t164 + qJD(5) * t18 + t1040 * t552, qJD(2) * t19 + qJD(3) * t21 + qJD(5) * t47 + qJD(6) * t343 + t770, qJD(2) * t13 + qJD(3) * t14 + qJD(4) * t46 + qJD(5) * t15 + qJD(6) * t55; 0, 0, 0, t769, t796, t794, -t795, 0, -pkin(7) * t794 - t790, pkin(7) * t795 - t789, t477, t801, -t460, t1034, 0, -qJD(2) * t838 + qJD(3) * t414 + t817, t1050 + t816, t859 + (t610 * t694 - t1031) * qJD(2) + t137 * qJD(3) - t431, t858 + (t611 * t694 + t1032) * qJD(2) + t138 * qJD(3) - t531, qJD(2) * t696 + t78 * qJD(3) - t863, t861 + (t599 * t696 + t604 * t838) * qJD(2) + t43 * qJD(3) + t1054, t75, t45, t98, t97, -t376, t908 + (-t874 + t896 + t1064) * qJD(2) + t56 * qJD(3) - t284 + t65 * qJD(5), t907 + (t873 + t893 + t1063) * qJD(2) + t58 * qJD(3) + t278 + t64 * qJD(5), t925 + (t896 - t905 + t1066) * qJD(2) + t35 * qJD(3) + t28 * qJD(5) + t852, t936 + (t895 + t898 + t944 - t945) * qJD(2) + t7 * qJD(3) + t1006, t926 + (-t893 - t904 - t1065) * qJD(2) + t37 * qJD(3) + t29 * qJD(5) + t844, t941 + (t1027 * t410 + t123 * t427 + t124 * t426) * qJD(2) + t1 * qJD(3) + t24 * qJD(4) + t4 * qJD(5) + t50 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477, t801, -t460, t1034, 0, qJD(2) * t414 - qJD(3) * t838 - t772, t1050 - t773, t857 + t137 * qJD(2) + (t610 * t711 - t1031) * qJD(3) - t431, t856 + t138 * qJD(2) + (t611 * t711 + t1032) * qJD(3) - t531, t78 * qJD(2) + qJD(3) * t695 - t862, t860 + t43 * qJD(2) + (qJ(4) * t695 - t961) * qJD(3) + t1054, t75, t45, t98, t97, -t376, t906 + t56 * qJD(2) + (-t872 + t886 + t1064) * qJD(3) - t284 + t70 * qJD(5), t900 + t58 * qJD(2) + (t871 + t883 + t1063) * qJD(3) + t278 + t69 * qJD(5), t923 + t35 * qJD(2) + (t886 - t892 + t1066) * qJD(3) + t32 * qJD(5) + t852, t935 + t7 * qJD(2) + (t885 + t888 + t942 - t943) * qJD(3) + t1006, t924 + t37 * qJD(2) + (-t883 - t891 - t1065) * qJD(3) + t33 * qJD(5) + t844, t938 + t1 * qJD(2) + (t1027 * t437 + t127 * t476 + t128 * t475) * qJD(3) + t26 * qJD(4) + t6 * qJD(5) + t52 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t442 * t793 + t724 (-t610 * t813 - t611 * t793) * t569, t802, t1019 * t793 + t830, 0, 0, 0, 0, 0, t1075, t310 * t793 - t774, t1075, t1013, t1074, qJD(2) * t24 + qJD(3) * t26 + qJD(5) * t158 - qJD(6) * t242 + t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1011, t1012, t96, -t1029 * t726 - t1037, t450, qJD(2) * t65 + qJD(3) * t70 + t847 + t948, qJD(2) * t64 + qJD(3) * t69 + t685 + t949, qJD(2) * t28 + qJD(3) * t32 + t847 + t951, qJD(5) * t710 + t633 * t793 + t800 + t929, qJD(2) * t29 + qJD(3) * t33 + t552 - t685 + t952, t937 + t4 * qJD(2) + t6 * qJD(3) + t158 * qJD(4) + (-pkin(5) * t134 - qJ(6) * t133) * qJD(5) + t121 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184 * t793 + t775, t96, t1045, qJD(2) * t50 + qJD(3) * t52 + qJD(5) * t121 - t231 + t950; 0, 0, 0, -t769, -t796, 0, 0, 0, t790, t789, -t477, -t801, 0, 0, 0, qJD(3) * t479 - t817, -t816, qJD(3) * t136 - t859, qJD(3) * t139 - t858, qJD(3) * t79 + t863, qJD(3) * t44 - t1056 - t861, t135, t73, t144, t143, t376, qJD(3) * t57 - qJD(5) * t62 - t285 - t908, qJD(3) * t59 - qJD(5) * t63 - t279 - t907, qJD(3) * t36 + qJD(5) * t27 + t853 - t925, qJD(3) * t8 + t1007 - t936, qJD(3) * t38 + qJD(5) * t30 + t845 - t926, qJD(3) * t2 - qJD(4) * t23 - qJD(5) * t3 - qJD(6) * t49 - t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t787, -pkin(2) * t737, -t611 * t787, t591, t840, qJD(3) * t428 + qJD(4) * t502, -t468, t380, 0, 0, 0, t545 * t586 + t520, -t543 * t586 + t728, qJD(5) * t201 + t841, t846, qJD(5) * t202 + t839, qJD(3) * t160 + qJD(4) * t196 + qJD(5) * t103 - t410 * t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t716 + t815 (-t738 - t737) * pkin(2), -t611 * t716 + t831, t591 - t652, -t689 + t840 (-pkin(3) * t613 + qJ(4) * t648) * t956 + t425 * qJD(4) + t690, -t468, t380, 0, 0, 0, qJD(5) * t303 + t520 - t734, qJD(5) * t302 - t653 + t728, qJD(5) * t147 - t735 + t841, -t703 + t846, qJD(5) * t148 - t654 + t839 (t437 * t958 + t475 * t500 + t476 * t501) * qJD(3) + t130 * qJD(4) + t54 * qJD(5) + t176 * qJD(6) + t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1033, qJD(3) * t425 - t687, 0, 0, 0, 0, 0, -t1016, -t280, -t1016, t80, -t275, qJD(3) * t130 + t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, t82, t220, t221, -t799, qJD(3) * t303 - t412 - t662, qJD(3) * t302 - t663 + t805, qJD(3) * t147 - t412 - t692, t1058, qJD(3) * t148 - t691 - t805, t54 * qJD(3) + (-pkin(5) * t427 - qJ(6) * t426) * qJD(5) + t427 * qJD(6) + t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t220, t215, qJD(3) * t176 + t412 - t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, -t801, 0, 0, 0, -qJD(2) * t479 + t772, t773, -qJD(2) * t136 - t857, -qJD(2) * t139 - t856, -qJD(2) * t79 + t862, -qJD(2) * t44 - t1056 - t860, t135, t73, t144, t143, t376, -qJD(2) * t57 - qJD(5) * t67 - t285 - t906, -qJD(2) * t59 - qJD(5) * t68 - t279 - t900, -qJD(2) * t36 + qJD(5) * t31 + t853 - t923, -qJD(2) * t8 + t1007 - t935, -qJD(2) * t38 + qJD(5) * t34 + t845 - t924, -qJD(2) * t2 - qJD(4) * t25 - qJD(5) * t5 - qJD(6) * t51 - t938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t788 - t815, pkin(2) * t738, t611 * t788 - t831, t652, t588 + t689, -qJD(4) * t424 - t690, -t468, t380, 0, 0, 0, -qJD(5) * t300 + t734, -qJD(5) * t301 + t653, -qJD(5) * t145 - t469 + t735, t455 + t703, -qJD(5) * t146 + t547 + t654, -qJD(4) * t129 - qJD(5) * t53 - qJD(6) * t175 - t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, t585 * qJD(4), -t468, t380, 0, 0, 0, t600 * t545, -t600 * t543, qJD(5) * t209 - t469, t455, qJD(5) * t210 + t547, qJD(4) * t226 + qJD(5) * t142 - t437 * t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1033, -t640, 0, 0, 0, 0, 0, -t1016, -t280, -t1016, t80, -t275, t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, t82, t220, t221, -t799, -t462 + t638, -t637 + t804, -t462 + t642, t1058, -t641 - t804 (-pkin(5) * t476 - qJ(6) * t475) * qJD(5) + t476 * qJD(6) + t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t220, t215, -t639 + t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t724, t610 * t477, -t802, t1020 * t793 - t830, 0, 0, 0, 0, 0, t1008, t308 * t793 - t660, t1008, -t1013, t660 + t1041, qJD(2) * t23 + qJD(3) * t25 + qJD(5) * t159 - qJD(6) * t241 - t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1033, qJD(3) * t424 + t687, 0, 0, 0, 0, 0, t1059, t218, t1059, -t80, t219, qJD(3) * t129 - t693 + t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1033, t640, 0, 0, 0, 0, 0, t1059, t218, t1059, -t80, t219, -t643 + t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, -t187, t189, 0, t187, t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1011, -t1012, -t1074, t1076, t450, qJD(2) * t62 + qJD(3) * t67 - t232 - t948, qJD(2) * t63 + qJD(3) * t68 - t807 - t949, -qJD(2) * t27 - qJD(3) * t31 - t232 - t951, t621 * t793 - t929, -qJD(2) * t30 - qJD(3) * t34 + t552 + t807 - t952, qJ(6) * t552 + qJD(2) * t3 + qJD(3) * t5 - qJD(4) * t159 - t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, -t82, t272, t271, t799, qJD(3) * t300 + t662 - t797, qJD(3) * t301 + t663 + t798, qJD(3) * t145 + t692 - t797, t1018, qJD(3) * t146 + t691 - t798, qJD(3) * t53 - t366 - t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, -t82, t272, t271, t799, -t797 - t638, t798 + t637, -t797 - t642, t1018, -t798 + t641, -t366 - t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, t187, -t189, 0, -t187, -t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t726, t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183 * t793 - t775, -t1074, -t1045, -qJ(6) * t803 + qJD(2) * t49 + qJD(3) * t51 + t232 - t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, t272, -t215, qJD(3) * t175 + t664 + t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, t272, -t215, t797 + t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t726, -t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
