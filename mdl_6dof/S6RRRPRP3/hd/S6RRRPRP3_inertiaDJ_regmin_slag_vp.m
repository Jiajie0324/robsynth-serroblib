% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP3_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP3_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP3_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP3_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:41:31
% EndTime: 2019-03-09 16:41:38
% DurationCPUTime: 2.44s
% Computational Cost: add. (5050->267), mult. (11322->432), div. (0->0), fcn. (10754->8), ass. (0->143)
t138 = sin(pkin(10));
t139 = cos(pkin(10));
t183 = t138 ^ 2 + t139 ^ 2;
t215 = t183 * qJD(4);
t216 = 0.2e1 * t215;
t143 = cos(qJ(3));
t181 = qJD(3) * t143;
t174 = pkin(2) * t181;
t123 = qJD(4) + t174;
t214 = t183 * t123;
t140 = sin(qJ(5));
t206 = cos(qJ(5));
t171 = t206 * t139;
t213 = -t140 * t138 + t171;
t212 = qJD(2) + qJD(3);
t141 = sin(qJ(3));
t142 = sin(qJ(2));
t144 = cos(qJ(2));
t113 = t141 * t142 - t143 * t144;
t114 = t141 * t144 + t143 * t142;
t135 = t139 * pkin(9);
t131 = -t144 * pkin(2) - pkin(1);
t85 = t113 * pkin(3) - t114 * qJ(4) + t131;
t210 = -pkin(8) - pkin(7);
t121 = t210 * t142;
t122 = t210 * t144;
t95 = t141 * t121 - t143 * t122;
t48 = -t138 * t95 + t139 * t85;
t33 = t113 * pkin(4) - t114 * t135 + t48;
t190 = t114 * t138;
t49 = t138 * t85 + t139 * t95;
t38 = -pkin(9) * t190 + t49;
t147 = t140 * t33 + t206 * t38;
t87 = t212 * t113;
t193 = t139 * t87;
t178 = t142 * qJD(2);
t175 = pkin(2) * t178;
t88 = t212 * t114;
t39 = t88 * pkin(3) + t87 * qJ(4) - t114 * qJD(4) + t175;
t173 = qJD(2) * t210;
t116 = t142 * t173;
t157 = t144 * t173;
t182 = qJD(3) * t141;
t59 = -t143 * t116 - t121 * t181 - t122 * t182 - t141 * t157;
t22 = t138 * t59 + t139 * t39;
t16 = t88 * pkin(4) + pkin(9) * t193 + t22;
t194 = t138 * t87;
t23 = t138 * t39 - t139 * t59;
t20 = pkin(9) * t194 + t23;
t6 = -t147 * qJD(5) - t140 * t20 + t206 * t16;
t211 = 2 * qJD(6);
t209 = t88 * pkin(5);
t172 = t206 * t138;
t186 = t140 * t139;
t112 = t172 + t186;
t103 = t112 * qJD(5);
t27 = t114 * t103 + t213 * t87;
t168 = qJD(5) * t206;
t180 = qJD(5) * t140;
t170 = t138 * t180;
t28 = -t87 * t172 - t114 * t170 + (t114 * t168 - t140 * t87) * t139;
t60 = t95 * qJD(3) + t141 * t116 - t143 * t157;
t34 = -pkin(4) * t194 + t60;
t77 = t213 * t114;
t10 = t28 * pkin(5) + t27 * qJ(6) - t77 * qJD(6) + t34;
t102 = -t139 * t168 + t170;
t94 = -t143 * t121 - t141 * t122;
t74 = pkin(4) * t190 + t94;
t76 = t112 * t114;
t26 = t76 * pkin(5) - t77 * qJ(6) + t74;
t208 = -t10 * t112 + t26 * t102;
t207 = -t10 * t213 + t26 * t103;
t205 = t143 * pkin(2);
t204 = -pkin(9) - qJ(4);
t127 = t141 * pkin(2) + qJ(4);
t203 = -pkin(9) - t127;
t202 = t74 * t103 - t213 * t34;
t201 = -t74 * t102 + t34 * t112;
t132 = pkin(2) * t182;
t68 = t103 * pkin(5) + t102 * qJ(6) - t112 * qJD(6);
t61 = t132 + t68;
t128 = -t139 * pkin(4) - pkin(3);
t83 = -pkin(5) * t213 - t112 * qJ(6) + t128;
t75 = t83 - t205;
t200 = t75 * t103 - t213 * t61;
t199 = t75 * t102 - t61 * t112;
t198 = t83 * t103 - t213 * t68;
t197 = t83 * t102 - t68 * t112;
t119 = t128 - t205;
t196 = t119 * t103 - t132 * t213;
t195 = -t119 * t102 + t112 * t132;
t192 = t60 * t139;
t191 = t88 * qJ(6);
t189 = t128 * t102;
t188 = t128 * t103;
t179 = t113 * qJD(6);
t177 = t144 * qJD(2);
t176 = -0.2e1 * pkin(1) * qJD(2);
t17 = t113 * qJ(6) + t147;
t148 = -t140 * t38 + t206 * t33;
t18 = -t113 * pkin(5) - t148;
t5 = -t140 * t16 - t33 * t168 + t38 * t180 - t206 * t20;
t2 = t179 - t5 + t191;
t4 = -t209 - t6;
t169 = -t18 * t102 - t17 * t103 + t4 * t112 + t2 * t213;
t167 = t204 * t138;
t166 = t203 * t138;
t165 = t206 * qJD(4);
t107 = t139 * t127 + t135;
t149 = t206 * t166;
t46 = -t123 * t171 - qJD(5) * t149 + (qJD(5) * t107 + t123 * t138) * t140;
t47 = t107 * t168 + t123 * t186 + (t206 * t123 + t203 * t180) * t138;
t80 = t140 * t107 - t149;
t81 = t206 * t107 + t140 * t166;
t163 = -t80 * t102 - t81 * t103 + t47 * t112 - t213 * t46;
t120 = t139 * qJ(4) + t135;
t150 = t206 * t167;
t70 = -qJD(5) * t150 - t139 * t165 + (qJD(4) * t138 + qJD(5) * t120) * t140;
t71 = t120 * t168 + qJD(4) * t186 + (t204 * t180 + t165) * t138;
t90 = t140 * t120 - t150;
t91 = t206 * t120 + t140 * t167;
t162 = -t90 * t102 - t91 * t103 + t71 * t112 - t213 * t70;
t159 = t138 * t132;
t158 = t139 * t132;
t156 = -t46 * t113 + t81 * t88;
t155 = -t47 * t113 - t80 * t88;
t154 = t70 * t113 - t91 * t88;
t153 = -t71 * t113 - t90 * t88;
t152 = t114 * t60 - t87 * t94;
t11 = -t22 * t138 + t23 * t139;
t151 = -t138 * t48 + t139 * t49;
t146 = pkin(3) * t87 - qJ(4) * t88 - qJD(4) * t113;
t130 = -pkin(3) - t205;
t145 = -t113 * t123 + t114 * t132 - t127 * t88 - t130 * t87;
t86 = -0.2e1 * t112 * t102;
t69 = pkin(5) * t102 - t103 * qJ(6) + qJD(6) * t213;
t54 = t60 * t138;
t52 = -0.2e1 * t102 * t213 - 0.2e1 * t112 * t103;
t43 = -t103 * t113 + t213 * t88;
t42 = -t102 * t113 + t112 * t88;
t21 = -t77 * t102 - t27 * t112;
t9 = t102 * t76 - t77 * t103 - t112 * t28 - t213 * t27;
t1 = [0, 0, 0, 0.2e1 * t142 * t177, 0.2e1 * (-t142 ^ 2 + t144 ^ 2) * qJD(2), 0, 0, 0, t142 * t176, t144 * t176, -0.2e1 * t114 * t87, 0.2e1 * t87 * t113 - 0.2e1 * t114 * t88, 0, 0, 0, 0.2e1 * t113 * t175 + 0.2e1 * t131 * t88, 0.2e1 * t114 * t175 - 0.2e1 * t131 * t87, 0.2e1 * t22 * t113 + 0.2e1 * t152 * t138 + 0.2e1 * t48 * t88, -0.2e1 * t23 * t113 + 0.2e1 * t152 * t139 - 0.2e1 * t49 * t88, -0.2e1 * (-t138 * t49 - t139 * t48) * t87 + 0.2e1 * (-t138 * t23 - t139 * t22) * t114, 0.2e1 * t48 * t22 + 0.2e1 * t49 * t23 + 0.2e1 * t94 * t60, -0.2e1 * t77 * t27, 0.2e1 * t27 * t76 - 0.2e1 * t77 * t28, -0.2e1 * t27 * t113 + 0.2e1 * t77 * t88, -0.2e1 * t28 * t113 - 0.2e1 * t76 * t88, 0.2e1 * t113 * t88, 0.2e1 * t6 * t113 + 0.2e1 * t148 * t88 + 0.2e1 * t74 * t28 + 0.2e1 * t34 * t76, 0.2e1 * t5 * t113 - 0.2e1 * t147 * t88 - 0.2e1 * t74 * t27 + 0.2e1 * t34 * t77, 0.2e1 * t10 * t76 - 0.2e1 * t4 * t113 - 0.2e1 * t18 * t88 + 0.2e1 * t26 * t28, -0.2e1 * t17 * t28 - 0.2e1 * t18 * t27 - 0.2e1 * t2 * t76 + 0.2e1 * t4 * t77, -0.2e1 * t10 * t77 + 0.2e1 * t2 * t113 + 0.2e1 * t17 * t88 + 0.2e1 * t26 * t27, 0.2e1 * t26 * t10 + 0.2e1 * t17 * t2 + 0.2e1 * t18 * t4; 0, 0, 0, 0, 0, t177, -t178, 0, -pkin(7) * t177, pkin(7) * t178, 0, 0, -t87, -t88, 0, -t60, t59, t145 * t138 - t192, t145 * t139 + t54, t11, t11 * t127 + t151 * t123 + t60 * t130 + t94 * t132, t21, t9, t42, t43, 0, t119 * t28 + t76 * t132 + t155 + t202, -t119 * t27 + t77 * t132 - t156 + t201, t75 * t28 + t61 * t76 + t155 + t207, -t80 * t27 - t81 * t28 + t46 * t76 + t47 * t77 + t169, t75 * t27 - t61 * t77 + t156 + t208, t10 * t75 - t17 * t46 + t18 * t47 + t2 * t81 + t26 * t61 + t4 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t132, -0.2e1 * t174, -0.2e1 * t158, 0.2e1 * t159, 0.2e1 * t214, 0.2e1 * t127 * t214 + 0.2e1 * t130 * t132, t86, t52, 0, 0, 0, 0.2e1 * t196, 0.2e1 * t195, 0.2e1 * t200, 0.2e1 * t163, 0.2e1 * t199, -0.2e1 * t81 * t46 + 0.2e1 * t80 * t47 + 0.2e1 * t75 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, -t88, 0, -t60, t59, t146 * t138 - t192, t146 * t139 + t54, t11, -t60 * pkin(3) + t11 * qJ(4) + t151 * qJD(4), t21, t9, t42, t43, 0, t128 * t28 + t153 + t202, -t128 * t27 + t154 + t201, t83 * t28 + t68 * t76 + t153 + t207, -t90 * t27 - t91 * t28 + t70 * t76 + t71 * t77 + t169, t83 * t27 - t68 * t77 - t154 + t208, t10 * t83 - t17 * t70 + t18 * t71 + t2 * t91 + t26 * t68 + t4 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, -t174, -t158, t159, t215 + t214, -pkin(3) * t132 + qJ(4) * t214 + t127 * t215, t86, t52, 0, 0, 0, t188 + t196, -t189 + t195, t198 + t200, t162 + t163, t197 + t199, -t46 * t91 + t47 * t90 + t61 * t83 + t75 * t68 - t81 * t70 + t80 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, qJ(4) * t216, t86, t52, 0, 0, 0, 0.2e1 * t188, -0.2e1 * t189, 0.2e1 * t198, 0.2e1 * t162, 0.2e1 * t197, 0.2e1 * t83 * t68 - 0.2e1 * t91 * t70 + 0.2e1 * t90 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t193, 0, t60, 0, 0, 0, 0, 0, t28, -t27, t28, 0, t27, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, 0, 0, 0, 0, 0, t103, -t102, t103, 0, t102, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, -t102, t103, 0, t102, t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t28, t88, t6, t5, t6 + 0.2e1 * t209, pkin(5) * t27 - t28 * qJ(6) - t76 * qJD(6), 0.2e1 * t179 - t5 + 0.2e1 * t191, -t4 * pkin(5) + t2 * qJ(6) + t17 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t103, 0, -t47, t46, -t47, t69, -t46, -t47 * pkin(5) - t46 * qJ(6) + t81 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t103, 0, -t71, t70, -t71, t69, -t70, -t71 * pkin(5) - t70 * qJ(6) + t91 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, qJ(6) * t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t88, -t27, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, 0, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, 0, t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
